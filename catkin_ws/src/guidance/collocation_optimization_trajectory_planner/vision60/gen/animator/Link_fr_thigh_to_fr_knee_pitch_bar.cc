/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 23:17:07 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1718;
  double t442;
  double t1308;
  double t1375;
  double t1448;
  double t1553;
  double t1612;
  double t1724;
  double t1734;
  double t1812;
  double t1879;
  double t870;
  double t2036;
  double t1969;
  double t2162;
  double t2189;
  double t2190;
  double t2549;
  double t2565;
  double t2629;
  double t1521;
  double t1634;
  double t1640;
  double t1707;
  double t1743;
  double t1814;
  double t1925;
  double t1964;
  double t1972;
  double t2000;
  double t2023;
  double t2042;
  double t2054;
  double t2069;
  double t2093;
  double t2135;
  double t2145;
  double t2202;
  double t2434;
  double t2528;
  double t2530;
  double t2638;
  double t2644;
  double t2700;
  double t2703;
  double t2760;
  double t2761;
  double t2816;
  double t2888;
  double t2893;
  double t2906;
  double t2909;
  double t2946;
  double t2958;
  double t2996;
  double t2999;
  double t3015;
  double t3029;
  double t2859;
  double t2942;
  double t3037;
  double t3057;
  double t4063;
  double t4074;
  double t4072;
  double t4095;
  double t4110;
  double t4112;
  double t4123;
  double t4128;
  double t4145;
  double t4147;
  double t4149;
  double t4156;
  double t4157;
  double t4158;
  double t4069;
  double t4111;
  double t4131;
  double t4153;
  double t4165;
  double t4166;
  double t4167;
  double t4173;
  double t4175;
  double t4187;
  double t4190;
  double t4199;
  double t4202;
  double t4206;
  double t4212;
  double t4214;
  double t4215;
  double t4177;
  double t4205;
  double t4219;
  double t4221;
  double t4476;
  double t4477;
  double t4478;
  double t4481;
  double t4482;
  double t4483;
  double t4485;
  double t4489;
  double t4492;
  double t4495;
  double t4496;
  double t4498;
  double t4475;
  double t4480;
  double t4484;
  double t4493;
  double t4499;
  double t4503;
  double t4504;
  double t4506;
  double t4507;
  double t4512;
  double t4513;
  double t4515;
  double t4528;
  double t4530;
  double t4532;
  double t4533;
  double t4534;
  double t4509;
  double t4529;
  double t4537;
  double t4545;
  double t4669;
  double t4671;
  double t4673;
  double t4674;
  double t4809;
  double t4810;
  double t4811;
  double t4812;
  double t4929;
  double t4930;
  double t4932;
  double t4933;
  t1718 = Cos(var1[10]);
  t442 = Cos(var1[4]);
  t1308 = Cos(var1[9]);
  t1375 = -1.*t1308;
  t1448 = 1. + t1375;
  t1553 = Sin(var1[9]);
  t1612 = -0.15121*t1553;
  t1724 = -1.*t1718;
  t1734 = 1. + t1724;
  t1812 = -1. + t1718;
  t1879 = Sin(var1[10]);
  t870 = Cos(var1[5]);
  t2036 = Sin(var1[5]);
  t1969 = Sin(var1[4]);
  t2162 = -1.*t442*t870*t1553;
  t2189 = -1.*t1308*t442*t2036;
  t2190 = t2162 + t2189;
  t2549 = t1308*t442*t870;
  t2565 = -1.*t442*t1553*t2036;
  t2629 = t2549 + t2565;
  t1521 = 0.15121*t1448;
  t1634 = t1521 + t1612;
  t1640 = t442*t870*t1634;
  t1707 = -4.9936e-13*var1[10];
  t1743 = -0.038749*t1734;
  t1814 = 6.19984e-13*t1812;
  t1925 = -0.281210000004*t1879;
  t1964 = t1707 + t1743 + t1814 + t1925;
  t1972 = t1964*t1969;
  t2000 = -0.15121*t1448;
  t2023 = t2000 + t1612;
  t2042 = -1.*t442*t2023*t2036;
  t2054 = -1.2484e-7*var1[10];
  t2069 = 2.479936e-18*t1734;
  t2093 = -1.54996e-7*t1812;
  t2135 = 1.124840000016e-6*t1879;
  t2145 = t2054 + t2069 + t2093 + t2135;
  t2202 = t2145*t2190;
  t2434 = 0.281210000008499*t1734;
  t2528 = -0.03874900000062*t1879;
  t2530 = t2434 + t2528;
  t2638 = t2530*t2629;
  t2644 = t1879*t1969;
  t2700 = -4.e-6*t1879*t2190;
  t2703 = -1.000000000016*t1734;
  t2760 = 1. + t2703;
  t2761 = t2760*t2629;
  t2816 = t2644 + t2700 + t2761;
  t2888 = t1718*t1969;
  t2893 = 4.e-6*t1734*t2190;
  t2906 = -1.*t1879*t2629;
  t2909 = t2888 + t2893 + t2906;
  t2946 = 4.e-6*t1734*t1969;
  t2958 = 1.6e-11*t1812;
  t2996 = 1. + t2958;
  t2999 = t2996*t2190;
  t3015 = 4.e-6*t1879*t2629;
  t3029 = t2946 + t2999 + t3015;
  t2859 = 0.28477*t2816;
  t2942 = -0.031829*t2909;
  t3037 = -0.239533*t3029;
  t3057 = var1[0] + t1640 + t1972 + t2042 + t2202 + t2638 + t2859 + t2942 + t3037;
  t4063 = Sin(var1[3]);
  t4074 = Cos(var1[3]);
  t4072 = t870*t4063*t1969;
  t4095 = t4074*t2036;
  t4110 = t4072 + t4095;
  t4112 = t4074*t870;
  t4123 = -1.*t4063*t1969*t2036;
  t4128 = t4112 + t4123;
  t4145 = -1.*t1553*t4110;
  t4147 = t1308*t4128;
  t4149 = t4145 + t4147;
  t4156 = t1308*t4110;
  t4157 = t1553*t4128;
  t4158 = t4156 + t4157;
  t4069 = -1.*t442*t1964*t4063;
  t4111 = t1634*t4110;
  t4131 = t2023*t4128;
  t4153 = t2145*t4149;
  t4165 = t2530*t4158;
  t4166 = -1.*t442*t1879*t4063;
  t4167 = -4.e-6*t1879*t4149;
  t4173 = t2760*t4158;
  t4175 = t4166 + t4167 + t4173;
  t4187 = -1.*t1718*t442*t4063;
  t4190 = 4.e-6*t1734*t4149;
  t4199 = -1.*t1879*t4158;
  t4202 = t4187 + t4190 + t4199;
  t4206 = -4.e-6*t1734*t442*t4063;
  t4212 = t2996*t4149;
  t4214 = 4.e-6*t1879*t4158;
  t4215 = t4206 + t4212 + t4214;
  t4177 = 0.28477*t4175;
  t4205 = -0.031829*t4202;
  t4219 = -0.239533*t4215;
  t4221 = var1[1] + t4069 + t4111 + t4131 + t4153 + t4165 + t4177 + t4205 + t4219;
  t4476 = -1.*t4074*t870*t1969;
  t4477 = t4063*t2036;
  t4478 = t4476 + t4477;
  t4481 = t870*t4063;
  t4482 = t4074*t1969*t2036;
  t4483 = t4481 + t4482;
  t4485 = -1.*t1553*t4478;
  t4489 = t1308*t4483;
  t4492 = t4485 + t4489;
  t4495 = t1308*t4478;
  t4496 = t1553*t4483;
  t4498 = t4495 + t4496;
  t4475 = t4074*t442*t1964;
  t4480 = t1634*t4478;
  t4484 = t2023*t4483;
  t4493 = t2145*t4492;
  t4499 = t2530*t4498;
  t4503 = t4074*t442*t1879;
  t4504 = -4.e-6*t1879*t4492;
  t4506 = t2760*t4498;
  t4507 = t4503 + t4504 + t4506;
  t4512 = t1718*t4074*t442;
  t4513 = 4.e-6*t1734*t4492;
  t4515 = -1.*t1879*t4498;
  t4528 = t4512 + t4513 + t4515;
  t4530 = 4.e-6*t1734*t4074*t442;
  t4532 = t2996*t4492;
  t4533 = 4.e-6*t1879*t4498;
  t4534 = t4530 + t4532 + t4533;
  t4509 = 0.28477*t4507;
  t4529 = -0.031829*t4528;
  t4537 = -0.239533*t4534;
  t4545 = var1[2] + t4475 + t4480 + t4484 + t4493 + t4499 + t4509 + t4529 + t4537;
  t4669 = 0.50671*t2816;
  t4671 = -0.032969*t2909;
  t4673 = -0.178533*t3029;
  t4674 = var1[0] + t1640 + t1972 + t2042 + t2202 + t2638 + t4669 + t4671 + t4673;
  t4809 = 0.50671*t4175;
  t4810 = -0.032969*t4202;
  t4811 = -0.178533*t4215;
  t4812 = var1[1] + t4069 + t4111 + t4131 + t4153 + t4165 + t4809 + t4810 + t4811;
  t4929 = 0.50671*t4507;
  t4930 = -0.032969*t4528;
  t4932 = -0.178533*t4534;
  t4933 = var1[2] + t4475 + t4480 + t4484 + t4493 + t4499 + t4929 + t4930 + t4932;
  p_output1[0]=t3057;
  p_output1[1]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.285152*t2816 - 0.036525*t2909 - 0.241011*t3029 + var1[0];
  p_output1[2]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.285107*t2816 - 0.041462*t2909 - 0.240939*t3029 + var1[0];
  p_output1[3]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.284639*t2816 - 0.046106*t2909 - 0.239325*t3029 + var1[0];
  p_output1[4]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.2838*t2816 - 0.049952*t2909 - 0.236344*t3029 + var1[0];
  p_output1[5]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.282681*t2816 - 0.052584*t2909 - 0.232319*t3029 + var1[0];
  p_output1[6]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.281401*t2816 - 0.053717*t2909 - 0.227686*t3029 + var1[0];
  p_output1[7]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.280102*t2816 - 0.053228*t2909 - 0.222948*t3029 + var1[0];
  p_output1[8]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.278922*t2816 - 0.05117*t2909 - 0.218617*t3029 + var1[0];
  p_output1[9]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.27799*t2816 - 0.047767*t2909 - 0.215163*t3029 + var1[0];
  p_output1[10]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.277407*t2816 - 0.043386*t2909 - 0.212961*t3029 + var1[0];
  p_output1[11]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.277236*t2816 - 0.038503*t2909 - 0.212248*t3029 + var1[0];
  p_output1[12]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.277496*t2816 - 0.033646*t2909 - 0.213103*t3029 + var1[0];
  p_output1[13]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.278159*t2816 - 0.029343*t2909 - 0.215432*t3029 + var1[0];
  p_output1[14]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.279151*t2816 - 0.026059*t2909 - 0.218983*t3029 + var1[0];
  p_output1[15]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.280367*t2816 - 0.02415*t2909 - 0.223372*t3029 + var1[0];
  p_output1[16]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.281675*t2816 - 0.023824*t2909 - 0.228122*t3029 + var1[0];
  p_output1[17]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.282932*t2816 - 0.025115*t2909 - 0.23272*t3029 + var1[0];
  p_output1[18]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.284002*t2816 - 0.027883*t2909 - 0.236666*t3029 + var1[0];
  p_output1[19]=t3057;
  p_output1[20]=t4221;
  p_output1[21]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.285152*t4175 - 0.036525*t4202 - 0.241011*t4215 + var1[1];
  p_output1[22]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.285107*t4175 - 0.041462*t4202 - 0.240939*t4215 + var1[1];
  p_output1[23]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.284639*t4175 - 0.046106*t4202 - 0.239325*t4215 + var1[1];
  p_output1[24]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.2838*t4175 - 0.049952*t4202 - 0.236344*t4215 + var1[1];
  p_output1[25]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.282681*t4175 - 0.052584*t4202 - 0.232319*t4215 + var1[1];
  p_output1[26]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.281401*t4175 - 0.053717*t4202 - 0.227686*t4215 + var1[1];
  p_output1[27]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.280102*t4175 - 0.053228*t4202 - 0.222948*t4215 + var1[1];
  p_output1[28]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.278922*t4175 - 0.05117*t4202 - 0.218617*t4215 + var1[1];
  p_output1[29]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.27799*t4175 - 0.047767*t4202 - 0.215163*t4215 + var1[1];
  p_output1[30]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.277407*t4175 - 0.043386*t4202 - 0.212961*t4215 + var1[1];
  p_output1[31]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.277236*t4175 - 0.038503*t4202 - 0.212248*t4215 + var1[1];
  p_output1[32]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.277496*t4175 - 0.033646*t4202 - 0.213103*t4215 + var1[1];
  p_output1[33]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.278159*t4175 - 0.029343*t4202 - 0.215432*t4215 + var1[1];
  p_output1[34]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.279151*t4175 - 0.026059*t4202 - 0.218983*t4215 + var1[1];
  p_output1[35]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.280367*t4175 - 0.02415*t4202 - 0.223372*t4215 + var1[1];
  p_output1[36]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.281675*t4175 - 0.023824*t4202 - 0.228122*t4215 + var1[1];
  p_output1[37]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.282932*t4175 - 0.025115*t4202 - 0.23272*t4215 + var1[1];
  p_output1[38]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.284002*t4175 - 0.027883*t4202 - 0.236666*t4215 + var1[1];
  p_output1[39]=t4221;
  p_output1[40]=t4545;
  p_output1[41]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.285152*t4507 - 0.036525*t4528 - 0.241011*t4534 + var1[2];
  p_output1[42]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.285107*t4507 - 0.041462*t4528 - 0.240939*t4534 + var1[2];
  p_output1[43]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.284639*t4507 - 0.046106*t4528 - 0.239325*t4534 + var1[2];
  p_output1[44]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.2838*t4507 - 0.049952*t4528 - 0.236344*t4534 + var1[2];
  p_output1[45]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.282681*t4507 - 0.052584*t4528 - 0.232319*t4534 + var1[2];
  p_output1[46]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.281401*t4507 - 0.053717*t4528 - 0.227686*t4534 + var1[2];
  p_output1[47]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.280102*t4507 - 0.053228*t4528 - 0.222948*t4534 + var1[2];
  p_output1[48]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.278922*t4507 - 0.05117*t4528 - 0.218617*t4534 + var1[2];
  p_output1[49]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.27799*t4507 - 0.047767*t4528 - 0.215163*t4534 + var1[2];
  p_output1[50]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.277407*t4507 - 0.043386*t4528 - 0.212961*t4534 + var1[2];
  p_output1[51]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.277236*t4507 - 0.038503*t4528 - 0.212248*t4534 + var1[2];
  p_output1[52]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.277496*t4507 - 0.033646*t4528 - 0.213103*t4534 + var1[2];
  p_output1[53]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.278159*t4507 - 0.029343*t4528 - 0.215432*t4534 + var1[2];
  p_output1[54]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.279151*t4507 - 0.026059*t4528 - 0.218983*t4534 + var1[2];
  p_output1[55]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.280367*t4507 - 0.02415*t4528 - 0.223372*t4534 + var1[2];
  p_output1[56]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.281675*t4507 - 0.023824*t4528 - 0.228122*t4534 + var1[2];
  p_output1[57]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.282932*t4507 - 0.025115*t4528 - 0.23272*t4534 + var1[2];
  p_output1[58]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.284002*t4507 - 0.027883*t4528 - 0.236666*t4534 + var1[2];
  p_output1[59]=t4545;
  p_output1[60]=t4674;
  p_output1[61]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.507092*t2816 - 0.037665*t2909 - 0.180011*t3029 + var1[0];
  p_output1[62]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.507047*t2816 - 0.042602*t2909 - 0.179939*t3029 + var1[0];
  p_output1[63]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.506579*t2816 - 0.047245*t2909 - 0.178325*t3029 + var1[0];
  p_output1[64]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.50574*t2816 - 0.051091*t2909 - 0.175344*t3029 + var1[0];
  p_output1[65]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.504621*t2816 - 0.053724*t2909 - 0.171319*t3029 + var1[0];
  p_output1[66]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.503341*t2816 - 0.054857*t2909 - 0.166686*t3029 + var1[0];
  p_output1[67]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.502042*t2816 - 0.054368*t2909 - 0.161948*t3029 + var1[0];
  p_output1[68]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.500862*t2816 - 0.05231*t2909 - 0.157617*t3029 + var1[0];
  p_output1[69]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.49993*t2816 - 0.048906*t2909 - 0.154163*t3029 + var1[0];
  p_output1[70]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.499347*t2816 - 0.044526*t2909 - 0.151961*t3029 + var1[0];
  p_output1[71]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.499176*t2816 - 0.039642*t2909 - 0.151248*t3029 + var1[0];
  p_output1[72]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.499436*t2816 - 0.034786*t2909 - 0.152103*t3029 + var1[0];
  p_output1[73]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.500099*t2816 - 0.030483*t2909 - 0.154432*t3029 + var1[0];
  p_output1[74]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.501091*t2816 - 0.027199*t2909 - 0.157983*t3029 + var1[0];
  p_output1[75]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.502307*t2816 - 0.02529*t2909 - 0.162372*t3029 + var1[0];
  p_output1[76]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.503615*t2816 - 0.024964*t2909 - 0.167122*t3029 + var1[0];
  p_output1[77]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.504872*t2816 - 0.026255*t2909 - 0.17172*t3029 + var1[0];
  p_output1[78]=t1640 + t1972 + t2042 + t2202 + t2638 + 0.505942*t2816 - 0.029023*t2909 - 0.175666*t3029 + var1[0];
  p_output1[79]=t4674;
  p_output1[80]=t4812;
  p_output1[81]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.507092*t4175 - 0.037665*t4202 - 0.180011*t4215 + var1[1];
  p_output1[82]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.507047*t4175 - 0.042602*t4202 - 0.179939*t4215 + var1[1];
  p_output1[83]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.506579*t4175 - 0.047245*t4202 - 0.178325*t4215 + var1[1];
  p_output1[84]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.50574*t4175 - 0.051091*t4202 - 0.175344*t4215 + var1[1];
  p_output1[85]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.504621*t4175 - 0.053724*t4202 - 0.171319*t4215 + var1[1];
  p_output1[86]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.503341*t4175 - 0.054857*t4202 - 0.166686*t4215 + var1[1];
  p_output1[87]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.502042*t4175 - 0.054368*t4202 - 0.161948*t4215 + var1[1];
  p_output1[88]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.500862*t4175 - 0.05231*t4202 - 0.157617*t4215 + var1[1];
  p_output1[89]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.49993*t4175 - 0.048906*t4202 - 0.154163*t4215 + var1[1];
  p_output1[90]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.499347*t4175 - 0.044526*t4202 - 0.151961*t4215 + var1[1];
  p_output1[91]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.499176*t4175 - 0.039642*t4202 - 0.151248*t4215 + var1[1];
  p_output1[92]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.499436*t4175 - 0.034786*t4202 - 0.152103*t4215 + var1[1];
  p_output1[93]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.500099*t4175 - 0.030483*t4202 - 0.154432*t4215 + var1[1];
  p_output1[94]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.501091*t4175 - 0.027199*t4202 - 0.157983*t4215 + var1[1];
  p_output1[95]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.502307*t4175 - 0.02529*t4202 - 0.162372*t4215 + var1[1];
  p_output1[96]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.503615*t4175 - 0.024964*t4202 - 0.167122*t4215 + var1[1];
  p_output1[97]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.504872*t4175 - 0.026255*t4202 - 0.17172*t4215 + var1[1];
  p_output1[98]=t4069 + t4111 + t4131 + t4153 + t4165 + 0.505942*t4175 - 0.029023*t4202 - 0.175666*t4215 + var1[1];
  p_output1[99]=t4812;
  p_output1[100]=t4933;
  p_output1[101]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.507092*t4507 - 0.037665*t4528 - 0.180011*t4534 + var1[2];
  p_output1[102]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.507047*t4507 - 0.042602*t4528 - 0.179939*t4534 + var1[2];
  p_output1[103]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.506579*t4507 - 0.047245*t4528 - 0.178325*t4534 + var1[2];
  p_output1[104]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.50574*t4507 - 0.051091*t4528 - 0.175344*t4534 + var1[2];
  p_output1[105]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.504621*t4507 - 0.053724*t4528 - 0.171319*t4534 + var1[2];
  p_output1[106]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.503341*t4507 - 0.054857*t4528 - 0.166686*t4534 + var1[2];
  p_output1[107]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.502042*t4507 - 0.054368*t4528 - 0.161948*t4534 + var1[2];
  p_output1[108]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.500862*t4507 - 0.05231*t4528 - 0.157617*t4534 + var1[2];
  p_output1[109]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.49993*t4507 - 0.048906*t4528 - 0.154163*t4534 + var1[2];
  p_output1[110]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.499347*t4507 - 0.044526*t4528 - 0.151961*t4534 + var1[2];
  p_output1[111]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.499176*t4507 - 0.039642*t4528 - 0.151248*t4534 + var1[2];
  p_output1[112]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.499436*t4507 - 0.034786*t4528 - 0.152103*t4534 + var1[2];
  p_output1[113]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.500099*t4507 - 0.030483*t4528 - 0.154432*t4534 + var1[2];
  p_output1[114]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.501091*t4507 - 0.027199*t4528 - 0.157983*t4534 + var1[2];
  p_output1[115]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.502307*t4507 - 0.02529*t4528 - 0.162372*t4534 + var1[2];
  p_output1[116]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.503615*t4507 - 0.024964*t4528 - 0.167122*t4534 + var1[2];
  p_output1[117]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.504872*t4507 - 0.026255*t4528 - 0.17172*t4534 + var1[2];
  p_output1[118]=t4475 + t4480 + t4484 + t4493 + t4499 + 0.505942*t4507 - 0.029023*t4528 - 0.175666*t4534 + var1[2];
  p_output1[119]=t4933;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_fr_thigh_to_fr_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_fr_thigh_to_fr_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
