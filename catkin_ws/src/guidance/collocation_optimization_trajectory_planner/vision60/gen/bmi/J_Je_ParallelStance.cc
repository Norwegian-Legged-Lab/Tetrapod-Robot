/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:57:34 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t55;
  double t46;
  double t50;
  double t58;
  double t51;
  double t60;
  double t61;
  double t42;
  double t66;
  double t73;
  double t68;
  double t69;
  double t70;
  double t74;
  double t65;
  double t41;
  double t114;
  double t118;
  double t119;
  double t103;
  double t104;
  double t105;
  double t106;
  double t107;
  double t109;
  double t71;
  double t75;
  double t79;
  double t385;
  double t382;
  double t383;
  double t400;
  double t384;
  double t401;
  double t417;
  double t477;
  double t447;
  double t465;
  double t466;
  double t381;
  double t700;
  double t704;
  double t710;
  double t555;
  double t565;
  double t626;
  double t629;
  double t631;
  double t642;
  double t472;
  double t480;
  double t489;
  double t64;
  double t80;
  double t81;
  double t870;
  double t881;
  double t82;
  double t86;
  double t87;
  double t214;
  double t216;
  double t256;
  double t121;
  double t158;
  double t164;
  double t182;
  double t188;
  double t189;
  double t919;
  double t921;
  double t923;
  double t270;
  double t307;
  double t323;
  double t363;
  double t364;
  double t367;
  double t873;
  double t875;
  double t876;
  double t420;
  double t495;
  double t499;
  double t506;
  double t514;
  double t518;
  double t797;
  double t800;
  double t802;
  double t727;
  double t728;
  double t729;
  double t762;
  double t768;
  double t775;
  double t1136;
  double t1137;
  double t1138;
  double t809;
  double t812;
  double t816;
  double t842;
  double t843;
  double t848;
  double t1089;
  double t1090;
  double t1092;
  double t1078;
  double t1085;
  double t1087;
  double t890;
  double t891;
  double t897;
  double t907;
  double t913;
  double t914;
  double t928;
  double t929;
  double t930;
  double t933;
  double t941;
  double t945;
  double t981;
  double t986;
  double t987;
  double t1011;
  double t1013;
  double t1015;
  double t924;
  double t925;
  double t927;
  double t1031;
  double t1035;
  double t1038;
  double t1050;
  double t1052;
  double t1053;
  double t1057;
  double t1059;
  double t1060;
  double t1063;
  double t1067;
  double t1068;
  double t1326;
  double t1332;
  double t1335;
  double t1106;
  double t1107;
  double t1108;
  double t1130;
  double t1132;
  double t1133;
  double t1147;
  double t1149;
  double t1150;
  double t1154;
  double t1157;
  double t1159;
  double t1169;
  double t1170;
  double t1171;
  double t1205;
  double t1212;
  double t1213;
  double t1139;
  double t1143;
  double t1146;
  double t1247;
  double t1248;
  double t1249;
  double t1280;
  double t1281;
  double t1282;
  double t1291;
  double t1293;
  double t1295;
  double t1307;
  double t1309;
  double t1315;
  double t96;
  double t111;
  double t112;
  double t1466;
  double t1467;
  double t1468;
  double t1472;
  double t1474;
  double t1475;
  double t1476;
  double t1477;
  double t1479;
  double t1465;
  double t1469;
  double t1480;
  double t1484;
  double t1463;
  double t1485;
  double t1486;
  double t1490;
  double t1492;
  double t1495;
  double t1496;
  double t1498;
  double t1500;
  double t1502;
  double t1503;
  double t1504;
  double t1505;
  double t1506;
  double t1509;
  double t1510;
  double t1512;
  double t1513;
  double t1531;
  double t1537;
  double t1538;
  double t1527;
  double t1528;
  double t1530;
  double t1518;
  double t1522;
  double t1523;
  double t1488;
  double t1515;
  double t1516;
  double t1543;
  double t1544;
  double t1545;
  double t1580;
  double t1582;
  double t1584;
  double t1547;
  double t1555;
  double t1556;
  double t1557;
  double t1570;
  double t1573;
  double t1574;
  double t1575;
  double t339;
  double t342;
  double t345;
  double t1621;
  double t1622;
  double t1623;
  double t1632;
  double t1634;
  double t195;
  double t197;
  double t208;
  double t1635;
  double t1636;
  double t1638;
  double t1642;
  double t1643;
  double t1646;
  double t355;
  double t368;
  double t370;
  double t1687;
  double t1692;
  double t1697;
  double t1701;
  double t1703;
  double t1706;
  double t1715;
  double t1717;
  double t1727;
  double t1694;
  double t1707;
  double t1709;
  double t1713;
  double t1729;
  double t1730;
  double t1733;
  double t1734;
  double t1736;
  double t371;
  double t372;
  double t375;
  double t1784;
  double t1799;
  double t1812;
  double t1776;
  double t1822;
  double t1828;
  double t1833;
  double t1836;
  double t1843;
  double t1851;
  double t1852;
  double t1832;
  double t1837;
  double t1839;
  double t1842;
  double t1855;
  double t1856;
  double t1858;
  double t1860;
  double t1862;
  double t1882;
  double t1888;
  double t1892;
  double t1914;
  double t1951;
  double t1955;
  double t1957;
  double t1958;
  double t90;
  double t94;
  double t95;
  double t120;
  double t179;
  double t181;
  double t2116;
  double t2117;
  double t2119;
  double t2144;
  double t2147;
  double t2148;
  double t2150;
  double t2166;
  double t1617;
  double t548;
  double t684;
  double t699;
  double t2304;
  double t2306;
  double t2307;
  double t2316;
  double t2322;
  double t2323;
  double t2324;
  double t2326;
  double t2327;
  double t2301;
  double t2315;
  double t2330;
  double t2332;
  double t2300;
  double t2334;
  double t2339;
  double t2341;
  double t2342;
  double t2353;
  double t2359;
  double t2360;
  double t2361;
  double t2362;
  double t2367;
  double t2371;
  double t2374;
  double t2378;
  double t2383;
  double t2384;
  double t2386;
  double t2387;
  double t2416;
  double t2418;
  double t2420;
  double t2406;
  double t2409;
  double t2410;
  double t2392;
  double t2399;
  double t2403;
  double t2340;
  double t2388;
  double t2389;
  double t2445;
  double t2450;
  double t2453;
  double t2494;
  double t2495;
  double t2496;
  double t2460;
  double t2462;
  double t2463;
  double t2465;
  double t2478;
  double t2480;
  double t2487;
  double t2488;
  double t832;
  double t834;
  double t835;
  double t2531;
  double t2532;
  double t2547;
  double t2564;
  double t2566;
  double t788;
  double t791;
  double t792;
  double t2581;
  double t2585;
  double t2586;
  double t2590;
  double t2591;
  double t2595;
  double t840;
  double t859;
  double t863;
  double t2675;
  double t2680;
  double t2690;
  double t2692;
  double t2698;
  double t2699;
  double t2748;
  double t2752;
  double t2755;
  double t2683;
  double t2714;
  double t2724;
  double t2747;
  double t2763;
  double t2767;
  double t2773;
  double t2774;
  double t2775;
  double t864;
  double t865;
  double t868;
  double t2814;
  double t2815;
  double t2816;
  double t2811;
  double t2818;
  double t2819;
  double t2822;
  double t2826;
  double t2834;
  double t2836;
  double t2838;
  double t2821;
  double t2827;
  double t2828;
  double t2833;
  double t2839;
  double t2840;
  double t2846;
  double t2852;
  double t2854;
  double t2872;
  double t2875;
  double t2876;
  double t2934;
  double t2960;
  double t2963;
  double t2973;
  double t2975;
  double t529;
  double t532;
  double t543;
  double t719;
  double t751;
  double t759;
  double t3241;
  double t3247;
  double t3260;
  double t3331;
  double t3333;
  double t3339;
  double t3340;
  double t3437;
  double t1586;
  double t1600;
  double t1601;
  double t3892;
  double t3894;
  double t3897;
  double t1631;
  double t1640;
  double t1667;
  double t1668;
  double t3927;
  double t3935;
  double t3940;
  double t1710;
  double t1741;
  double t1748;
  double t1841;
  double t4105;
  double t1881;
  double t1965;
  double t1966;
  double t4172;
  double t4175;
  double t2017;
  double t2018;
  double t2032;
  double t2033;
  double t4211;
  double t2044;
  double t2045;
  double t4219;
  double t4222;
  double t4231;
  double t2064;
  double t2077;
  double t2078;
  double t2102;
  double t2104;
  double t2115;
  double t2174;
  double t2183;
  double t2184;
  double t4389;
  double t4391;
  double t4405;
  double t4409;
  double t4410;
  double t2211;
  double t4001;
  double t2214;
  double t2222;
  double t2224;
  double t4456;
  double t2240;
  double t2254;
  double t2267;
  double t2285;
  double t2286;
  double t2500;
  double t2511;
  double t2512;
  double t4624;
  double t4629;
  double t4630;
  double t2561;
  double t2589;
  double t2643;
  double t2645;
  double t4647;
  double t4648;
  double t4651;
  double t2746;
  double t2783;
  double t2784;
  double t2829;
  double t4807;
  double t2867;
  double t2980;
  double t2986;
  double t4888;
  double t4893;
  double t3011;
  double t3015;
  double t3072;
  double t3073;
  double t4938;
  double t3096;
  double t3109;
  double t4960;
  double t4966;
  double t4981;
  double t3147;
  double t3175;
  double t3176;
  double t3216;
  double t3217;
  double t3239;
  double t3576;
  double t3595;
  double t3596;
  double t5189;
  double t5191;
  double t5203;
  double t5204;
  double t5208;
  double t3641;
  double t3656;
  double t3688;
  double t3689;
  double t5233;
  double t3717;
  double t3736;
  double t3801;
  double t3856;
  double t3861;
  double t3985;
  double t3998;
  double t4049;
  double t4057;
  double t5404;
  double t5420;
  double t4100;
  double t4110;
  double t4174;
  double t5459;
  double t4271;
  double t4280;
  double t4318;
  double t4319;
  double t5472;
  double t5476;
  double t5490;
  double t5491;
  double t5492;
  double t5500;
  double t4347;
  double t4348;
  double t4343;
  double t5434;
  double t5436;
  double t4390;
  double t4366;
  double t4367;
  double t4464;
  double t4467;
  double t4501;
  double t4512;
  double t5545;
  double t5548;
  double t5581;
  double t5582;
  double t4561;
  double t4606;
  double t4608;
  double t4676;
  double t4679;
  double t4709;
  double t4712;
  double t5683;
  double t5684;
  double t4803;
  double t4818;
  double t4891;
  double t5739;
  double t5016;
  double t5022;
  double t5041;
  double t5042;
  double t5751;
  double t5754;
  double t5782;
  double t5791;
  double t5799;
  double t5823;
  double t5108;
  double t5111;
  double t5087;
  double t5705;
  double t5706;
  double t5190;
  double t5165;
  double t5167;
  double t5244;
  double t5262;
  double t5272;
  double t5273;
  double t5896;
  double t5908;
  double t5943;
  double t5949;
  double t5318;
  double t5363;
  double t5366;
  double t5511;
  double t5513;
  double t5535;
  double t6224;
  double t6227;
  double t6261;
  double t6262;
  double t5546;
  double t5567;
  double t5574;
  double t5837;
  double t5846;
  double t5879;
  double t6385;
  double t6403;
  double t6455;
  double t6461;
  double t5898;
  double t5928;
  double t5936;
  t55 = Cos(var1[13]);
  t46 = Cos(var1[14]);
  t50 = Sin(var1[13]);
  t58 = Sin(var1[14]);
  t51 = t46*t50;
  t60 = -1.*t55*t58;
  t61 = t51 + t60;
  t42 = Cos(var1[4]);
  t66 = Cos(var1[5]);
  t73 = Sin(var1[12]);
  t68 = t55*t46;
  t69 = t50*t58;
  t70 = t68 + t69;
  t74 = Sin(var1[5]);
  t65 = Sin(var1[4]);
  t41 = Cos(var1[12]);
  t114 = -1.*t55*t46;
  t118 = -1.*t50*t58;
  t119 = t114 + t118;
  t103 = -1.*t46*t50;
  t104 = t55*t58;
  t105 = t103 + t104;
  t106 = t66*t105;
  t107 = t73*t70*t74;
  t109 = t106 + t107;
  t71 = t66*t70;
  t75 = t73*t61*t74;
  t79 = t71 + t75;
  t385 = Cos(var1[16]);
  t382 = Cos(var1[17]);
  t383 = Sin(var1[16]);
  t400 = Sin(var1[17]);
  t384 = t382*t383;
  t401 = -1.*t385*t400;
  t417 = t384 + t401;
  t477 = Sin(var1[15]);
  t447 = t385*t382;
  t465 = t383*t400;
  t466 = t447 + t465;
  t381 = Cos(var1[15]);
  t700 = -1.*t385*t382;
  t704 = -1.*t383*t400;
  t710 = t700 + t704;
  t555 = -1.*t382*t383;
  t565 = t385*t400;
  t626 = t555 + t565;
  t629 = t66*t626;
  t631 = t477*t466*t74;
  t642 = t629 + t631;
  t472 = t66*t466;
  t480 = t477*t417*t74;
  t489 = t472 + t480;
  t64 = t41*t42*t61;
  t80 = -1.*t65*t79;
  t81 = t64 + t80;
  t870 = Sin(var1[3]);
  t881 = Cos(var1[3]);
  t82 = t66*t73*t61;
  t86 = -1.*t70*t74;
  t87 = t82 + t86;
  t214 = t41*t42*t70;
  t216 = -1.*t65*t109;
  t256 = t214 + t216;
  t121 = t66*t61;
  t158 = t73*t119*t74;
  t164 = t121 + t158;
  t182 = t42*t73;
  t188 = t41*t65*t74;
  t189 = t182 + t188;
  t919 = -1.*t66*t73*t70;
  t921 = t105*t74;
  t923 = t919 + t921;
  t270 = t66*t73*t70;
  t307 = -1.*t105*t74;
  t323 = t270 + t307;
  t363 = t66*t119;
  t364 = t73*t105*t74;
  t367 = t363 + t364;
  t873 = -1.*t66*t73*t61;
  t875 = t70*t74;
  t876 = t873 + t875;
  t420 = t381*t42*t417;
  t495 = -1.*t65*t489;
  t499 = t420 + t495;
  t506 = t66*t477*t417;
  t514 = -1.*t466*t74;
  t518 = t506 + t514;
  t797 = t381*t42*t466;
  t800 = -1.*t65*t642;
  t802 = t797 + t800;
  t727 = t66*t417;
  t728 = t477*t710*t74;
  t729 = t727 + t728;
  t762 = t42*t477;
  t768 = t381*t65*t74;
  t775 = t762 + t768;
  t1136 = -1.*t66*t477*t466;
  t1137 = t626*t74;
  t1138 = t1136 + t1137;
  t809 = t66*t477*t466;
  t812 = -1.*t626*t74;
  t816 = t809 + t812;
  t842 = t66*t710;
  t843 = t477*t626*t74;
  t848 = t842 + t843;
  t1089 = -1.*t66*t477*t417;
  t1090 = t466*t74;
  t1092 = t1089 + t1090;
  t1078 = t881*t876;
  t1085 = -1.*t870*t81;
  t1087 = t1078 + t1085;
  t890 = -1.*t41*t61*t65;
  t891 = -1.*t42*t79;
  t897 = t890 + t891;
  t907 = -1.*t42*t73*t61;
  t913 = -1.*t41*t61*t65*t74;
  t914 = t907 + t913;
  t928 = -1.*t66*t73*t119;
  t929 = t61*t74;
  t930 = t928 + t929;
  t933 = t41*t42*t119;
  t941 = -1.*t65*t164;
  t945 = t933 + t941;
  t981 = -1.*t73*t65;
  t986 = t41*t42*t74;
  t987 = t981 + t986;
  t1011 = t41*t42;
  t1013 = -1.*t73*t65*t74;
  t1015 = t1011 + t1013;
  t924 = t881*t923;
  t925 = -1.*t870*t256;
  t927 = t924 + t925;
  t1031 = -1.*t41*t70*t65;
  t1035 = -1.*t42*t109;
  t1038 = t1031 + t1035;
  t1050 = -1.*t42*t73*t70;
  t1052 = -1.*t41*t70*t65*t74;
  t1053 = t1050 + t1052;
  t1057 = -1.*t66*t73*t105;
  t1059 = t119*t74;
  t1060 = t1057 + t1059;
  t1063 = t41*t42*t105;
  t1067 = -1.*t65*t367;
  t1068 = t1063 + t1067;
  t1326 = t881*t1092;
  t1332 = -1.*t870*t499;
  t1335 = t1326 + t1332;
  t1106 = -1.*t381*t417*t65;
  t1107 = -1.*t42*t489;
  t1108 = t1106 + t1107;
  t1130 = -1.*t42*t477*t417;
  t1132 = -1.*t381*t417*t65*t74;
  t1133 = t1130 + t1132;
  t1147 = -1.*t66*t477*t710;
  t1149 = t417*t74;
  t1150 = t1147 + t1149;
  t1154 = t381*t42*t710;
  t1157 = -1.*t65*t729;
  t1159 = t1154 + t1157;
  t1169 = -1.*t477*t65;
  t1170 = t381*t42*t74;
  t1171 = t1169 + t1170;
  t1205 = t381*t42;
  t1212 = -1.*t477*t65*t74;
  t1213 = t1205 + t1212;
  t1139 = t881*t1138;
  t1143 = -1.*t870*t802;
  t1146 = t1139 + t1143;
  t1247 = -1.*t381*t466*t65;
  t1248 = -1.*t42*t642;
  t1249 = t1247 + t1248;
  t1280 = -1.*t42*t477*t466;
  t1281 = -1.*t381*t466*t65*t74;
  t1282 = t1280 + t1281;
  t1291 = -1.*t66*t477*t626;
  t1293 = t710*t74;
  t1295 = t1291 + t1293;
  t1307 = t381*t42*t626;
  t1309 = -1.*t65*t848;
  t1315 = t1307 + t1309;
  t96 = t41*t70*t65;
  t111 = t42*t109;
  t112 = t96 + t111;
  t1466 = -0.0641*t46;
  t1467 = -0.28*t58;
  t1468 = t1466 + t1467;
  t1472 = -1.*t46;
  t1474 = 1. + t1472;
  t1475 = 0.075*t1474;
  t1476 = 0.355*t46;
  t1477 = -0.0641*t58;
  t1479 = t1475 + t1476 + t1477;
  t1465 = -0.325*t50;
  t1469 = t55*t1468;
  t1480 = t50*t1479;
  t1484 = t1465 + t1469 + t1480;
  t1463 = -0.068*t73;
  t1485 = t41*t1484;
  t1486 = t1463 + t1485;
  t1490 = -1.*t55;
  t1492 = 1. + t1490;
  t1495 = 0.325*t1492;
  t1496 = -1.*t50*t1468;
  t1498 = t55*t1479;
  t1500 = t1495 + t1496 + t1498;
  t1502 = t66*t1500;
  t1503 = -1.*t41;
  t1504 = 1. + t1503;
  t1505 = -0.1575*t1504;
  t1506 = -0.2255*t41;
  t1509 = -1.*t73*t1484;
  t1510 = t1505 + t1506 + t1509;
  t1512 = -1.*t1510*t74;
  t1513 = t1502 + t1512;
  t1531 = t42*t1486;
  t1537 = -1.*t65*t1513;
  t1538 = t1531 + t1537;
  t1527 = t73*t65;
  t1528 = -1.*t41*t42*t74;
  t1530 = t1527 + t1528;
  t1518 = t1486*t65;
  t1522 = t42*t1513;
  t1523 = t1518 + t1522;
  t1488 = -1.*t1486*t65;
  t1515 = -1.*t42*t1513;
  t1516 = t1488 + t1515;
  t1543 = t66*t1510;
  t1544 = t1500*t74;
  t1545 = t1543 + t1544;
  t1580 = -1.*t66*t1510;
  t1582 = -1.*t1500*t74;
  t1584 = t1580 + t1582;
  t1547 = -1.*t41*t66*t1545;
  t1555 = -1.*t1530*t1523;
  t1556 = -1.*t189*t1538;
  t1557 = t1547 + t1555 + t1556;
  t1570 = t1545*t923;
  t1573 = t1523*t112;
  t1574 = t1538*t256;
  t1575 = t1570 + t1573 + t1574;
  t339 = -1.*t73*t70*t65;
  t342 = t41*t42*t70*t74;
  t345 = t339 + t342;
  t1621 = 0.068*t73;
  t1622 = -1.*t41*t1484;
  t1623 = t1621 + t1622;
  t1632 = -0.068*t41;
  t1634 = t1632 + t1509;
  t195 = t41*t65;
  t197 = t42*t73*t74;
  t208 = t195 + t197;
  t1635 = t1634*t65;
  t1636 = -1.*t42*t1623*t74;
  t1638 = t1635 + t1636;
  t1642 = t42*t1634;
  t1643 = t1623*t65*t74;
  t1646 = t1642 + t1643;
  t355 = t41*t105*t65;
  t368 = t42*t367;
  t370 = t355 + t368;
  t1687 = -0.325*t55;
  t1692 = t1687 + t1496 + t1498;
  t1697 = 0.325*t50;
  t1701 = -1.*t55*t1468;
  t1703 = -1.*t50*t1479;
  t1706 = t1697 + t1701 + t1703;
  t1715 = t66*t1706;
  t1717 = t73*t1692*t74;
  t1727 = t1715 + t1717;
  t1694 = -1.*t66*t73*t1692;
  t1707 = t1706*t74;
  t1709 = t1694 + t1707;
  t1713 = t41*t1692*t65;
  t1729 = t42*t1727;
  t1730 = t1713 + t1729;
  t1733 = t41*t42*t1692;
  t1734 = -1.*t65*t1727;
  t1736 = t1733 + t1734;
  t371 = t41*t61*t65;
  t372 = t42*t79;
  t375 = t371 + t372;
  t1784 = -0.28*t46;
  t1799 = 0.0641*t58;
  t1812 = t1784 + t1799;
  t1776 = t50*t1468;
  t1822 = t55*t1812;
  t1828 = t1776 + t1822;
  t1833 = -1.*t50*t1812;
  t1836 = t1469 + t1833;
  t1843 = t66*t1836;
  t1851 = t73*t1828*t74;
  t1852 = t1843 + t1851;
  t1832 = -1.*t66*t73*t1828;
  t1837 = t1836*t74;
  t1839 = t1832 + t1837;
  t1842 = t41*t1828*t65;
  t1855 = t42*t1852;
  t1856 = t1842 + t1855;
  t1858 = t41*t42*t1828;
  t1860 = -1.*t65*t1852;
  t1862 = t1858 + t1860;
  t1882 = t1545*t876;
  t1888 = t1523*t375;
  t1892 = t1538*t81;
  t1914 = t1882 + t1888 + t1892;
  t1951 = -1.*t1545*t923;
  t1955 = -1.*t1523*t112;
  t1957 = -1.*t1538*t256;
  t1958 = t1951 + t1955 + t1957;
  t90 = -1.*t73*t61*t65;
  t94 = t41*t42*t61*t74;
  t95 = t90 + t94;
  t120 = t41*t119*t65;
  t179 = t42*t164;
  t181 = t120 + t179;
  t2116 = -1.*t1545*t876;
  t2117 = -1.*t1523*t375;
  t2119 = -1.*t1538*t81;
  t2144 = t41*t66*t1545;
  t2147 = t1530*t1523;
  t2148 = t189*t1538;
  t2150 = t2144 + t2147 + t2148;
  t2166 = t2116 + t2117 + t2119;
  t1617 = Power(t66,2);
  t548 = t381*t466*t65;
  t684 = t42*t642;
  t699 = t548 + t684;
  t2304 = -0.0641*t382;
  t2306 = -0.28*t400;
  t2307 = t2304 + t2306;
  t2316 = -1.*t382;
  t2322 = 1. + t2316;
  t2323 = -0.575*t2322;
  t2324 = -0.295*t382;
  t2326 = -0.0641*t400;
  t2327 = t2323 + t2324 + t2326;
  t2301 = 0.325*t383;
  t2315 = t385*t2307;
  t2330 = t383*t2327;
  t2332 = t2301 + t2315 + t2330;
  t2300 = -0.068*t477;
  t2334 = t381*t2332;
  t2339 = t2300 + t2334;
  t2341 = -1.*t385;
  t2342 = 1. + t2341;
  t2353 = -0.325*t2342;
  t2359 = -1.*t383*t2307;
  t2360 = t385*t2327;
  t2361 = t2353 + t2359 + t2360;
  t2362 = t66*t2361;
  t2367 = -1.*t381;
  t2371 = 1. + t2367;
  t2374 = -0.1575*t2371;
  t2378 = -0.2255*t381;
  t2383 = -1.*t477*t2332;
  t2384 = t2374 + t2378 + t2383;
  t2386 = -1.*t2384*t74;
  t2387 = t2362 + t2386;
  t2416 = t42*t2339;
  t2418 = -1.*t65*t2387;
  t2420 = t2416 + t2418;
  t2406 = t477*t65;
  t2409 = -1.*t381*t42*t74;
  t2410 = t2406 + t2409;
  t2392 = t2339*t65;
  t2399 = t42*t2387;
  t2403 = t2392 + t2399;
  t2340 = -1.*t2339*t65;
  t2388 = -1.*t42*t2387;
  t2389 = t2340 + t2388;
  t2445 = t66*t2384;
  t2450 = t2361*t74;
  t2453 = t2445 + t2450;
  t2494 = -1.*t66*t2384;
  t2495 = -1.*t2361*t74;
  t2496 = t2494 + t2495;
  t2460 = -1.*t381*t66*t2453;
  t2462 = -1.*t2410*t2403;
  t2463 = -1.*t775*t2420;
  t2465 = t2460 + t2462 + t2463;
  t2478 = t2453*t1138;
  t2480 = t2403*t699;
  t2487 = t2420*t802;
  t2488 = t2478 + t2480 + t2487;
  t832 = -1.*t477*t466*t65;
  t834 = t381*t42*t466*t74;
  t835 = t832 + t834;
  t2531 = 0.068*t477;
  t2532 = -1.*t381*t2332;
  t2547 = t2531 + t2532;
  t2564 = -0.068*t381;
  t2566 = t2564 + t2383;
  t788 = t381*t65;
  t791 = t42*t477*t74;
  t792 = t788 + t791;
  t2581 = t2566*t65;
  t2585 = -1.*t42*t2547*t74;
  t2586 = t2581 + t2585;
  t2590 = t42*t2566;
  t2591 = t2547*t65*t74;
  t2595 = t2590 + t2591;
  t840 = t381*t626*t65;
  t859 = t42*t848;
  t863 = t840 + t859;
  t2675 = 0.325*t385;
  t2680 = t2675 + t2359 + t2360;
  t2690 = -0.325*t383;
  t2692 = -1.*t385*t2307;
  t2698 = -1.*t383*t2327;
  t2699 = t2690 + t2692 + t2698;
  t2748 = t66*t2699;
  t2752 = t477*t2680*t74;
  t2755 = t2748 + t2752;
  t2683 = -1.*t66*t477*t2680;
  t2714 = t2699*t74;
  t2724 = t2683 + t2714;
  t2747 = t381*t2680*t65;
  t2763 = t42*t2755;
  t2767 = t2747 + t2763;
  t2773 = t381*t42*t2680;
  t2774 = -1.*t65*t2755;
  t2775 = t2773 + t2774;
  t864 = t381*t417*t65;
  t865 = t42*t489;
  t868 = t864 + t865;
  t2814 = -0.28*t382;
  t2815 = 0.0641*t400;
  t2816 = t2814 + t2815;
  t2811 = t383*t2307;
  t2818 = t385*t2816;
  t2819 = t2811 + t2818;
  t2822 = -1.*t383*t2816;
  t2826 = t2315 + t2822;
  t2834 = t66*t2826;
  t2836 = t477*t2819*t74;
  t2838 = t2834 + t2836;
  t2821 = -1.*t66*t477*t2819;
  t2827 = t2826*t74;
  t2828 = t2821 + t2827;
  t2833 = t381*t2819*t65;
  t2839 = t42*t2838;
  t2840 = t2833 + t2839;
  t2846 = t381*t42*t2819;
  t2852 = -1.*t65*t2838;
  t2854 = t2846 + t2852;
  t2872 = t2453*t1092;
  t2875 = t2403*t868;
  t2876 = t2420*t499;
  t2934 = t2872 + t2875 + t2876;
  t2960 = -1.*t2453*t1138;
  t2963 = -1.*t2403*t699;
  t2973 = -1.*t2420*t802;
  t2975 = t2960 + t2963 + t2973;
  t529 = -1.*t477*t417*t65;
  t532 = t381*t42*t417*t74;
  t543 = t529 + t532;
  t719 = t381*t710*t65;
  t751 = t42*t729;
  t759 = t719 + t751;
  t3241 = -1.*t2453*t1092;
  t3247 = -1.*t2403*t868;
  t3260 = -1.*t2420*t499;
  t3331 = t381*t66*t2453;
  t3333 = t2410*t2403;
  t3339 = t775*t2420;
  t3340 = t3331 + t3333 + t3339;
  t3437 = t3241 + t3247 + t3260;
  t1586 = t41*t74*t1545;
  t1600 = t1513*t923;
  t1601 = t1545*t109;
  t3892 = -1.*t73*t1486;
  t3894 = t41*t74*t1513;
  t3897 = t3892 + t3894 + t1547;
  t1631 = -1.*t41*t1617*t1623;
  t1640 = t66*t73*t1545;
  t1667 = -1.*t41*t66*t70*t1545;
  t1668 = t66*t1623*t923;
  t3927 = t41*t1486*t70;
  t3935 = t1513*t109;
  t3940 = t3927 + t1570 + t3935;
  t1710 = -1.*t41*t66*t1709;
  t1741 = t1709*t923;
  t1748 = t1545*t1060;
  t1841 = -1.*t41*t66*t1839;
  t4105 = Power(t41,2);
  t1881 = t1839*t923;
  t1965 = t1545*t79;
  t1966 = t1513*t876;
  t4172 = t41*t1486*t61;
  t4175 = t1513*t79;
  t2017 = -1.*t1513*t923;
  t2018 = -1.*t1545*t109;
  t2032 = -1.*t41*t66*t61*t1545;
  t2033 = t66*t1623*t876;
  t4211 = t4172 + t4175 + t1882;
  t2044 = t41*t66*t70*t1545;
  t2045 = -1.*t66*t1623*t923;
  t4219 = -1.*t41*t1486*t70;
  t4222 = -1.*t1513*t109;
  t4231 = t4219 + t1951 + t4222;
  t2064 = t1709*t876;
  t2077 = -1.*t1709*t923;
  t2078 = -1.*t1545*t1060;
  t2102 = t1545*t930;
  t2104 = t1839*t876;
  t2115 = -1.*t1839*t923;
  t2174 = -1.*t41*t74*t1545;
  t2183 = -1.*t1545*t79;
  t2184 = -1.*t1513*t876;
  t4389 = -1.*t41*t1486*t61;
  t4391 = -1.*t1513*t79;
  t4405 = t73*t1486;
  t4409 = -1.*t41*t74*t1513;
  t4410 = t4405 + t4409 + t2144;
  t2211 = t41*t1617*t1623;
  t4001 = Power(t74,2);
  t2214 = -1.*t66*t73*t1545;
  t2222 = t41*t66*t61*t1545;
  t2224 = -1.*t66*t1623*t876;
  t4456 = t4389 + t4391 + t2116;
  t2240 = t41*t66*t1709;
  t2254 = -1.*t1709*t876;
  t2267 = t41*t66*t1839;
  t2285 = -1.*t1545*t930;
  t2286 = -1.*t1839*t876;
  t2500 = t381*t74*t2453;
  t2511 = t2387*t1138;
  t2512 = t2453*t642;
  t4624 = -1.*t477*t2339;
  t4629 = t381*t74*t2387;
  t4630 = t4624 + t4629 + t2460;
  t2561 = -1.*t381*t1617*t2547;
  t2589 = t66*t477*t2453;
  t2643 = -1.*t381*t66*t466*t2453;
  t2645 = t66*t2547*t1138;
  t4647 = t381*t2339*t466;
  t4648 = t2387*t642;
  t4651 = t4647 + t2478 + t4648;
  t2746 = -1.*t381*t66*t2724;
  t2783 = t2724*t1138;
  t2784 = t2453*t1295;
  t2829 = -1.*t381*t66*t2828;
  t4807 = Power(t381,2);
  t2867 = t2828*t1138;
  t2980 = t2453*t489;
  t2986 = t2387*t1092;
  t4888 = t381*t2339*t417;
  t4893 = t2387*t489;
  t3011 = -1.*t2387*t1138;
  t3015 = -1.*t2453*t642;
  t3072 = -1.*t381*t66*t417*t2453;
  t3073 = t66*t2547*t1092;
  t4938 = t4888 + t4893 + t2872;
  t3096 = t381*t66*t466*t2453;
  t3109 = -1.*t66*t2547*t1138;
  t4960 = -1.*t381*t2339*t466;
  t4966 = -1.*t2387*t642;
  t4981 = t4960 + t2960 + t4966;
  t3147 = t2724*t1092;
  t3175 = -1.*t2724*t1138;
  t3176 = -1.*t2453*t1295;
  t3216 = t2453*t1150;
  t3217 = t2828*t1092;
  t3239 = -1.*t2828*t1138;
  t3576 = -1.*t381*t74*t2453;
  t3595 = -1.*t2453*t489;
  t3596 = -1.*t2387*t1092;
  t5189 = -1.*t381*t2339*t417;
  t5191 = -1.*t2387*t489;
  t5203 = t477*t2339;
  t5204 = -1.*t381*t74*t2387;
  t5208 = t5203 + t5204 + t3331;
  t3641 = t381*t1617*t2547;
  t3656 = -1.*t66*t477*t2453;
  t3688 = t381*t66*t417*t2453;
  t3689 = -1.*t66*t2547*t1092;
  t5233 = t5189 + t5191 + t3241;
  t3717 = t381*t66*t2724;
  t3736 = -1.*t2724*t1092;
  t3801 = t381*t66*t2828;
  t3856 = -1.*t2453*t1150;
  t3861 = -1.*t2828*t1092;
  t3985 = -1.*t41*t1486;
  t3998 = -1.*t73*t1634;
  t4049 = -1.*t73*t1486*t70;
  t4057 = t41*t1634*t70;
  t5404 = -1.*t41*t1510;
  t5420 = t3892 + t5404;
  t4100 = t41*t1486*t105;
  t4110 = t4105*t1692*t70;
  t4174 = t4105*t1828*t70;
  t5459 = Power(t73,2);
  t4271 = -1.*t73*t1486*t61;
  t4280 = t41*t1634*t61;
  t4318 = t73*t1486*t70;
  t4319 = -1.*t41*t1634*t70;
  t5472 = -1.*t73*t1510*t61;
  t5476 = t1500*t70;
  t5490 = -1.*t1500*t105;
  t5491 = t73*t1510*t70;
  t5492 = t5490 + t4219 + t5491;
  t5500 = t4172 + t5472 + t5476;
  t4347 = -1.*t41*t1486*t105;
  t4348 = -1.*t4105*t1692*t70;
  t4343 = t4105*t1692*t61;
  t5434 = t1500*t105;
  t5436 = -1.*t73*t1510*t70;
  t4390 = -1.*t4105*t1828*t70;
  t4366 = t4105*t1828*t61;
  t4367 = t41*t1486*t119;
  t4464 = t41*t1486;
  t4467 = t73*t1634;
  t4501 = t73*t1486*t61;
  t4512 = -1.*t41*t1634*t61;
  t5545 = t73*t1510*t61;
  t5548 = -1.*t1500*t70;
  t5581 = t41*t1510;
  t5582 = t4405 + t5581;
  t4561 = -1.*t4105*t1692*t61;
  t4606 = -1.*t4105*t1828*t61;
  t4608 = -1.*t41*t1486*t119;
  t4676 = -1.*t381*t2339;
  t4679 = -1.*t477*t2566;
  t4709 = -1.*t477*t2339*t466;
  t4712 = t381*t2566*t466;
  t5683 = -1.*t381*t2384;
  t5684 = t4624 + t5683;
  t4803 = t381*t2339*t626;
  t4818 = t4807*t2680*t466;
  t4891 = t4807*t2819*t466;
  t5739 = Power(t477,2);
  t5016 = -1.*t477*t2339*t417;
  t5022 = t381*t2566*t417;
  t5041 = t477*t2339*t466;
  t5042 = -1.*t381*t2566*t466;
  t5751 = -1.*t477*t2384*t417;
  t5754 = t2361*t466;
  t5782 = -1.*t2361*t626;
  t5791 = t477*t2384*t466;
  t5799 = t5782 + t4960 + t5791;
  t5823 = t4888 + t5751 + t5754;
  t5108 = -1.*t381*t2339*t626;
  t5111 = -1.*t4807*t2680*t466;
  t5087 = t4807*t2680*t417;
  t5705 = t2361*t626;
  t5706 = -1.*t477*t2384*t466;
  t5190 = -1.*t4807*t2819*t466;
  t5165 = t4807*t2819*t417;
  t5167 = t381*t2339*t710;
  t5244 = t381*t2339;
  t5262 = t477*t2566;
  t5272 = t477*t2339*t417;
  t5273 = -1.*t381*t2566*t417;
  t5896 = t477*t2384*t417;
  t5908 = -1.*t2361*t466;
  t5943 = t381*t2384;
  t5949 = t5203 + t5943;
  t5318 = -1.*t4807*t2680*t417;
  t5363 = -1.*t4807*t2819*t417;
  t5366 = -1.*t381*t2339*t710;
  t5511 = -1.*t1706*t105;
  t5513 = -1.*t1500*t119;
  t5535 = t1706*t70;
  t6224 = t1484*t61;
  t6227 = t6224 + t5476;
  t6261 = -1.*t1484*t70;
  t6262 = t5490 + t6261;
  t5546 = -1.*t1836*t105;
  t5567 = t1500*t61;
  t5574 = t1836*t70;
  t5837 = -1.*t2699*t626;
  t5846 = -1.*t2361*t710;
  t5879 = t2699*t466;
  t6385 = t2332*t417;
  t6403 = t6385 + t5754;
  t6455 = -1.*t2332*t466;
  t6461 = t5782 + t6455;
  t5898 = -1.*t2826*t626;
  t5928 = t2361*t417;
  t5936 = t2826*t466;
  p_output1[0]=t81;
  p_output1[1]=t42*t87;
  p_output1[2]=t95;
  p_output1[3]=t112;
  p_output1[4]=t181;
  p_output1[5]=t189;
  p_output1[6]=-1.*t41*t42*t66;
  p_output1[7]=t208;
  p_output1[8]=t256;
  p_output1[9]=t323*t42;
  p_output1[10]=t345;
  p_output1[11]=t370;
  p_output1[12]=t375;
  p_output1[13]=t499;
  p_output1[14]=t42*t518;
  p_output1[15]=t543;
  p_output1[16]=t699;
  p_output1[17]=t759;
  p_output1[18]=t775;
  p_output1[19]=-1.*t381*t42*t66;
  p_output1[20]=t792;
  p_output1[21]=t802;
  p_output1[22]=t42*t816;
  p_output1[23]=t835;
  p_output1[24]=t863;
  p_output1[25]=t868;
  p_output1[26]=-1.*t870*t876 - 1.*t81*t881;
  p_output1[27]=-1.*t870*t897;
  p_output1[28]=t65*t87*t870 + t79*t881;
  p_output1[29]=-1.*t41*t61*t66*t881 - 1.*t870*t914;
  p_output1[30]=t927;
  p_output1[31]=t881*t930 - 1.*t870*t945;
  p_output1[32]=-1.*t41*t66*t870 - 1.*t189*t881;
  p_output1[33]=-1.*t870*t987;
  p_output1[34]=-1.*t41*t65*t66*t870 - 1.*t41*t74*t881;
  p_output1[35]=-1.*t1015*t870 - 1.*t66*t73*t881;
  p_output1[36]=-1.*t256*t881 - 1.*t870*t923;
  p_output1[37]=-1.*t1038*t870;
  p_output1[38]=t323*t65*t870 + t109*t881;
  p_output1[39]=-1.*t1053*t870 - 1.*t41*t66*t70*t881;
  p_output1[40]=-1.*t1068*t870 + t1060*t881;
  p_output1[41]=t1087;
  p_output1[42]=-1.*t1092*t870 - 1.*t499*t881;
  p_output1[43]=-1.*t1108*t870;
  p_output1[44]=t518*t65*t870 + t489*t881;
  p_output1[45]=-1.*t1133*t870 - 1.*t381*t417*t66*t881;
  p_output1[46]=t1146;
  p_output1[47]=-1.*t1159*t870 + t1150*t881;
  p_output1[48]=-1.*t381*t66*t870 - 1.*t775*t881;
  p_output1[49]=-1.*t1171*t870;
  p_output1[50]=-1.*t381*t65*t66*t870 - 1.*t381*t74*t881;
  p_output1[51]=-1.*t1213*t870 - 1.*t477*t66*t881;
  p_output1[52]=-1.*t1138*t870 - 1.*t802*t881;
  p_output1[53]=-1.*t1249*t870;
  p_output1[54]=t65*t816*t870 + t642*t881;
  p_output1[55]=-1.*t1282*t870 - 1.*t381*t466*t66*t881;
  p_output1[56]=-1.*t1315*t870 + t1295*t881;
  p_output1[57]=t1335;
  p_output1[58]=t1087;
  p_output1[59]=t881*t897;
  p_output1[60]=t79*t870 - 1.*t65*t87*t881;
  p_output1[61]=-1.*t41*t61*t66*t870 + t881*t914;
  p_output1[62]=t256*t881 + t870*t923;
  p_output1[63]=t870*t930 + t881*t945;
  p_output1[64]=-1.*t189*t870 + t41*t66*t881;
  p_output1[65]=t881*t987;
  p_output1[66]=-1.*t41*t74*t870 + t41*t65*t66*t881;
  p_output1[67]=-1.*t66*t73*t870 + t1015*t881;
  p_output1[68]=t927;
  p_output1[69]=t1038*t881;
  p_output1[70]=t109*t870 - 1.*t323*t65*t881;
  p_output1[71]=-1.*t41*t66*t70*t870 + t1053*t881;
  p_output1[72]=t1060*t870 + t1068*t881;
  p_output1[73]=t870*t876 + t81*t881;
  p_output1[74]=t1335;
  p_output1[75]=t1108*t881;
  p_output1[76]=t489*t870 - 1.*t518*t65*t881;
  p_output1[77]=-1.*t381*t417*t66*t870 + t1133*t881;
  p_output1[78]=t1138*t870 + t802*t881;
  p_output1[79]=t1150*t870 + t1159*t881;
  p_output1[80]=-1.*t775*t870 + t381*t66*t881;
  p_output1[81]=t1171*t881;
  p_output1[82]=-1.*t381*t74*t870 + t381*t65*t66*t881;
  p_output1[83]=-1.*t477*t66*t870 + t1213*t881;
  p_output1[84]=t1146;
  p_output1[85]=t1249*t881;
  p_output1[86]=t642*t870 - 1.*t65*t816*t881;
  p_output1[87]=-1.*t381*t466*t66*t870 + t1282*t881;
  p_output1[88]=t1295*t870 + t1315*t881;
  p_output1[89]=t1092*t870 + t499*t881;
  p_output1[90]=t1575*t189 + t1557*t256 + t1530*(t1038*t1538 + t112*t1538 + t1516*t256 + t1523*t256) + t112*(-1.*t1530*t1538 - 1.*t1516*t189 - 1.*t1523*t189 - 1.*t1538*t987);
  p_output1[91]=t1557*t323*t42 + t1530*(t1600 + t1601 + t112*t1584*t42 + t1523*t323*t42 - 1.*t1584*t256*t65 - 1.*t1538*t323*t65) - 1.*t1575*t41*t42*t66 + t112*(t1586 - 1.*t1530*t1584*t42 + t1584*t189*t65 - 1.*t1513*t41*t66 + t1523*t41*t42*t66 - 1.*t1538*t41*t65*t66);
  p_output1[92]=t1575*t208 + t112*(-1.*t1015*t1538 + t1631 - 1.*t1530*t1638 + t1640 - 1.*t1646*t189 - 1.*t1523*t208) + t1557*t345 + t1530*(t1053*t1538 + t112*t1638 + t1667 + t1668 + t1646*t256 + t1523*t345);
  p_output1[93]=t112*(t1710 - 1.*t1530*t1730 - 1.*t1736*t189) + t1557*t370 + t1530*(t1068*t1538 + t112*t1730 + t1741 + t1748 + t1736*t256 + t1523*t370);
  p_output1[94]=t112*(t1841 - 1.*t1530*t1856 - 1.*t1862*t189) + t1530*(t112*t1856 + t1881 + t1882 + t1888 + t1892 + t1862*t256) + t1557*t375;
  p_output1[95]=t1914*t256 + (-1.*t1038*t1538 - 1.*t112*t1538 - 1.*t1516*t256 - 1.*t1523*t256)*t375 + t1958*t81 + t112*(t1538*t375 + t1516*t81 + t1523*t81 + t1538*t897);
  p_output1[96]=t1914*t323*t42 + t375*(t2017 + t2018 - 1.*t112*t1584*t42 - 1.*t1523*t323*t42 + t1584*t256*t65 + t1538*t323*t65) + t1958*t42*t87 + t112*(t1965 + t1966 + t1584*t375*t42 - 1.*t1584*t65*t81 + t1523*t42*t87 - 1.*t1538*t65*t87);
  p_output1[97]=t1914*t345 + (-1.*t1053*t1538 - 1.*t112*t1638 + t2044 + t2045 - 1.*t1646*t256 - 1.*t1523*t345)*t375 + t1958*t95 + t112*(t2032 + t2033 + t1638*t375 + t1646*t81 + t1538*t914 + t1523*t95);
  p_output1[98]=t112*t1958 + t1914*t370 + (-1.*t1068*t1538 - 1.*t112*t1730 + t2077 + t2078 - 1.*t1736*t256 - 1.*t1523*t370)*t375 + t112*(t1570 + t1573 + t1574 + t2064 + t1730*t375 + t1736*t81);
  p_output1[99]=t181*t1958 + t1914*t375 + (-1.*t112*t1856 + t2115 + t2116 + t2117 + t2119 - 1.*t1862*t256)*t375 + t112*(t1523*t181 + t2102 + t2104 + t1856*t375 + t1862*t81 + t1538*t945);
  p_output1[100]=t189*t2166 + t2150*t81 + t1530*(-1.*t1538*t375 - 1.*t1516*t81 - 1.*t1523*t81 - 1.*t1538*t897) + t375*(t1530*t1538 + t1516*t189 + t1523*t189 + t1538*t987);
  p_output1[101]=-1.*t2166*t41*t42*t66 + t375*(t2174 + t1530*t1584*t42 - 1.*t1584*t189*t65 + t1513*t41*t66 - 1.*t1523*t41*t42*t66 + t1538*t41*t65*t66) + t2150*t42*t87 + t1530*(t2183 + t2184 - 1.*t1584*t375*t42 + t1584*t65*t81 - 1.*t1523*t42*t87 + t1538*t65*t87);
  p_output1[102]=t208*t2166 + (t1015*t1538 + t1530*t1638 + t1646*t189 + t1523*t208 + t2211 + t2214)*t375 + t2150*t95 + t1530*(t2222 + t2224 - 1.*t1638*t375 - 1.*t1646*t81 - 1.*t1538*t914 - 1.*t1523*t95);
  p_output1[103]=t112*t2150 + (t1530*t1730 + t1736*t189 + t2240)*t375 + t1530*(t1951 + t1955 + t1957 + t2254 - 1.*t1730*t375 - 1.*t1736*t81);
  p_output1[104]=t181*t2150 + (t1530*t1856 + t1862*t189 + t2267)*t375 + t1530*(-1.*t1523*t181 + t2285 + t2286 - 1.*t1856*t375 - 1.*t1862*t81 - 1.*t1538*t945);
  p_output1[105]=t2488*t775 + t699*(-1.*t1171*t2420 - 1.*t2410*t2420 - 1.*t2389*t775 - 1.*t2403*t775) + t2465*t802 + t2410*(t1249*t2420 + t2420*t699 + t2389*t802 + t2403*t802);
  p_output1[106]=-1.*t2488*t381*t42*t66 + t699*(t2500 - 1.*t2410*t2496*t42 - 1.*t2387*t381*t66 + t2403*t381*t42*t66 - 1.*t2420*t381*t65*t66 + t2496*t65*t775) + t2465*t42*t816 + t2410*(t2511 + t2512 + t2496*t42*t699 - 1.*t2496*t65*t802 + t2403*t42*t816 - 1.*t2420*t65*t816);
  p_output1[107]=t2488*t792 + t699*(-1.*t1213*t2420 + t2561 - 1.*t2410*t2586 + t2589 - 1.*t2595*t775 - 1.*t2403*t792) + t2465*t835 + t2410*(t1282*t2420 + t2643 + t2645 + t2586*t699 + t2595*t802 + t2403*t835);
  p_output1[108]=t699*(t2746 - 1.*t2410*t2767 - 1.*t2775*t775) + t2465*t863 + t2410*(t1315*t2420 + t2783 + t2784 + t2767*t699 + t2775*t802 + t2403*t863);
  p_output1[109]=t699*(t2829 - 1.*t2410*t2840 - 1.*t2854*t775) + t2410*(t2867 + t2872 + t2875 + t2876 + t2840*t699 + t2854*t802) + t2465*t868;
  p_output1[110]=t2975*t499 + t2934*t802 + (-1.*t1249*t2420 - 1.*t2420*t699 - 1.*t2389*t802 - 1.*t2403*t802)*t868 + t699*(t1108*t2420 + t2389*t499 + t2403*t499 + t2420*t868);
  p_output1[111]=t2975*t42*t518 + t2934*t42*t816 + (t3011 + t3015 - 1.*t2496*t42*t699 + t2496*t65*t802 - 1.*t2403*t42*t816 + t2420*t65*t816)*t868 + t699*(t2980 + t2986 + t2403*t42*t518 - 1.*t2496*t499*t65 - 1.*t2420*t518*t65 + t2496*t42*t868);
  p_output1[112]=t2975*t543 + t2934*t835 + (-1.*t1282*t2420 + t3096 + t3109 - 1.*t2586*t699 - 1.*t2595*t802 - 1.*t2403*t835)*t868 + t699*(t1133*t2420 + t3072 + t3073 + t2595*t499 + t2403*t543 + t2586*t868);
  p_output1[113]=t2975*t699 + t2934*t863 + (-1.*t1315*t2420 + t3175 + t3176 - 1.*t2767*t699 - 1.*t2775*t802 - 1.*t2403*t863)*t868 + t699*(t2478 + t2480 + t2487 + t3147 + t2775*t499 + t2767*t868);
  p_output1[114]=t2975*t759 + t2934*t868 + (t3239 + t3241 + t3247 + t3260 - 1.*t2840*t699 - 1.*t2854*t802)*t868 + t699*(t1159*t2420 + t3216 + t3217 + t2854*t499 + t2403*t759 + t2840*t868);
  p_output1[115]=t3340*t499 + t3437*t775 + (t1171*t2420 + t2410*t2420 + t2389*t775 + t2403*t775)*t868 + t2410*(-1.*t1108*t2420 - 1.*t2389*t499 - 1.*t2403*t499 - 1.*t2420*t868);
  p_output1[116]=t3340*t42*t518 - 1.*t3437*t381*t42*t66 + (t3576 + t2410*t2496*t42 + t2387*t381*t66 - 1.*t2403*t381*t42*t66 + t2420*t381*t65*t66 - 1.*t2496*t65*t775)*t868 + t2410*(t3595 + t3596 - 1.*t2403*t42*t518 + t2496*t499*t65 + t2420*t518*t65 - 1.*t2496*t42*t868);
  p_output1[117]=t3340*t543 + t3437*t792 + (t1213*t2420 + t2410*t2586 + t3641 + t3656 + t2595*t775 + t2403*t792)*t868 + t2410*(-1.*t1133*t2420 + t3688 + t3689 - 1.*t2595*t499 - 1.*t2403*t543 - 1.*t2586*t868);
  p_output1[118]=t3340*t699 + (t2410*t2767 + t3717 + t2775*t775)*t868 + t2410*(t2960 + t2963 + t2973 + t3736 - 1.*t2775*t499 - 1.*t2767*t868);
  p_output1[119]=t3340*t759 + (t2410*t2840 + t3801 + t2854*t775)*t868 + t2410*(-1.*t1159*t2420 + t3856 + t3861 - 1.*t2854*t499 - 1.*t2403*t759 - 1.*t2840*t868);
  p_output1[120]=t109*t3897 + (t109*t1584 + t1600 + t1601 + t1513*t323)*t41*t66 - 1.*t3940*t41*t74 + (t1586 + t1584*t41*t74)*t923;
  p_output1[121]=-1.*t3897*t41*t66*t70 - 1.*t3940*t66*t73 + t41*t66*(t1667 + t1668 + t4049 + t4057 - 1.*t109*t1623*t74 + t1513*t41*t70*t74) + (t1631 + t1640 + t3985 + t3998 - 1.*t1623*t4001*t41 - 1.*t1513*t73*t74)*t923;
  p_output1[122]=t1060*t3897 + t41*(t109*t1727 + t1741 + t1748 + t1513*t367 + t4100 + t4110)*t66 + (t1710 - 1.*t1692*t41*t73 + t1727*t41*t74)*t923;
  p_output1[123]=t41*(t109*t1852 + t1881 + t1882 + t4172 + t4174 + t4175)*t66 + t3897*t876 + (t1841 - 1.*t1828*t41*t73 + t1852*t41*t74)*t923;
  p_output1[124]=t109*t4211 + t4231*t79 + (-1.*t109*t1584 + t2017 + t2018 - 1.*t1513*t323)*t876 + (t1965 + t1966 + t1584*t79 + t1513*t87)*t923;
  p_output1[125]=-1.*t41*t4231*t61*t66 - 1.*t41*t4211*t66*t70 + (t2044 + t2045 + t4318 + t4319 + t109*t1623*t74 - 1.*t1513*t41*t70*t74)*t876 + (t2032 + t2033 + t4271 + t4280 + t1513*t41*t61*t74 - 1.*t1623*t74*t79)*t923;
  p_output1[126]=t1060*t4211 + (-1.*t109*t1727 + t2077 + t2078 - 1.*t1513*t367 + t4347 + t4348)*t876 + t4231*t923 + (t1570 + t2064 + t3927 + t3935 + t4343 + t1727*t79)*t923;
  p_output1[127]=t4211*t876 + (-1.*t109*t1852 + t2115 + t2116 + t4389 + t4390 + t4391)*t876 + (t1513*t164 + t2102 + t2104 + t4366 + t4367 + t1852*t79)*t923 + t4231*t930;
  p_output1[128]=-1.*t41*t4456*t74 + t4410*t79 + t41*t66*(t2183 + t2184 - 1.*t1584*t79 - 1.*t1513*t87) + (t2174 - 1.*t1584*t41*t74)*t876;
  p_output1[129]=-1.*t41*t4410*t61*t66 - 1.*t4456*t66*t73 + t41*t66*(t2222 + t2224 + t4501 + t4512 - 1.*t1513*t41*t61*t74 + t1623*t74*t79) + (t2211 + t2214 + t1623*t4001*t41 + t4464 + t4467 + t1513*t73*t74)*t876;
  p_output1[130]=t41*t66*(t1951 + t2254 + t4219 + t4222 + t4561 - 1.*t1727*t79) + (t2240 + t1692*t41*t73 - 1.*t1727*t41*t74)*t876 + t4410*t923;
  p_output1[131]=t41*t66*(-1.*t1513*t164 + t2285 + t2286 + t4606 + t4608 - 1.*t1852*t79) + (t2267 + t1828*t41*t73 - 1.*t1852*t41*t74)*t876 + t4410*t930;
  p_output1[132]=t4630*t642 - 1.*t381*t4651*t74 + t1138*(t2500 + t2496*t381*t74) + t381*t66*(t2511 + t2512 + t2496*t642 + t2387*t816);
  p_output1[133]=-1.*t381*t4630*t466*t66 - 1.*t4651*t477*t66 + t1138*(t2561 + t2589 - 1.*t2547*t381*t4001 + t4676 + t4679 - 1.*t2387*t477*t74) + t381*t66*(t2643 + t2645 + t4709 + t4712 + t2387*t381*t466*t74 - 1.*t2547*t642*t74);
  p_output1[134]=t1295*t4630 + t1138*(t2746 - 1.*t2680*t381*t477 + t2755*t381*t74) + t381*t66*(t2783 + t2784 + t4803 + t4818 + t2755*t642 + t2387*t848);
  p_output1[135]=t1092*t4630 + t381*(t2867 + t2872 + t4888 + t4891 + t4893 + t2838*t642)*t66 + t1138*(t2829 - 1.*t2819*t381*t477 + t2838*t381*t74);
  p_output1[136]=t489*t4981 + t1138*(t2980 + t2986 + t2496*t489 + t2387*t518) + t4938*t642 + t1092*(t3011 + t3015 - 1.*t2496*t642 - 1.*t2387*t816);
  p_output1[137]=-1.*t381*t466*t4938*t66 - 1.*t381*t417*t4981*t66 + t1138*(t3072 + t3073 + t5016 + t5022 + t2387*t381*t417*t74 - 1.*t2547*t489*t74) + t1092*(t3096 + t3109 + t5041 + t5042 - 1.*t2387*t381*t466*t74 + t2547*t642*t74);
  p_output1[138]=t1295*t4938 + t1138*t4981 + t1138*(t2478 + t3147 + t4647 + t4648 + t2755*t489 + t5087) + t1092*(t3175 + t3176 + t5108 + t5111 - 1.*t2755*t642 - 1.*t2387*t848);
  p_output1[139]=t1092*t4938 + t1150*t4981 + t1092*(t3239 + t3241 + t5189 + t5190 + t5191 - 1.*t2838*t642) + t1138*(t3216 + t3217 + t2838*t489 + t5165 + t5167 + t2387*t729);
  p_output1[140]=t489*t5208 + t381*(t3595 + t3596 - 1.*t2496*t489 - 1.*t2387*t518)*t66 - 1.*t381*t5233*t74 + t1092*(t3576 - 1.*t2496*t381*t74);
  p_output1[141]=-1.*t381*t417*t5208*t66 - 1.*t477*t5233*t66 + t1092*(t3641 + t3656 + t2547*t381*t4001 + t5244 + t5262 + t2387*t477*t74) + t381*t66*(t3688 + t3689 + t5272 + t5273 - 1.*t2387*t381*t417*t74 + t2547*t489*t74);
  p_output1[142]=t1138*t5208 + t381*(t2960 + t3736 - 1.*t2755*t489 + t4960 + t4966 + t5318)*t66 + t1092*(t3717 + t2680*t381*t477 - 1.*t2755*t381*t74);
  p_output1[143]=t1150*t5208 + t381*t66*(t3856 + t3861 - 1.*t2838*t489 + t5363 + t5366 - 1.*t2387*t729) + t1092*(t3801 + t2819*t381*t477 - 1.*t2838*t381*t74);
  p_output1[144]=t41*(t3927 + t5434 + t5436) - 1.*t5420*t70*t73 + t41*t70*(t3985 + t3998 - 1.*t1623*t41 + t1510*t73) + t73*(t4049 + t4057 - 1.*t1510*t41*t70 - 1.*t1623*t70*t73);
  p_output1[145]=t105*t41*t5420 + t73*(t119*t1500 + t105*t1706 + t4100 + t4110 + t1692*t5459*t70 - 1.*t105*t1510*t73);
  p_output1[146]=t41*t5420*t61 + (t105*t1836 + t4172 + t4174 + t5472 + t5476 + t1828*t5459*t70)*t73;
  p_output1[147]=-1.*t5492*t61*t73 - 1.*t5500*t70*t73 + t41*t70*(t4271 + t4280 - 1.*t1510*t41*t61 - 1.*t1623*t61*t73) + t41*t61*(t4318 + t4319 + t1510*t41*t70 + t1623*t70*t73);
  p_output1[148]=t105*t41*t5500 + t41*t5492*t70 + t41*(t3927 + t4343 + t5434 + t5436 + t5535 + t1692*t5459*t61)*t70 + t41*t61*(t4347 + t4348 + t5511 + t5513 - 1.*t1692*t5459*t70 + t105*t1510*t73);
  p_output1[149]=t119*t41*t5492 + t41*t5500*t61 + t41*t61*(t4389 + t4390 + t5545 + t5546 + t5548 - 1.*t1828*t5459*t70) + t41*t70*(t4366 + t4367 + t5567 + t5574 + t1828*t5459*t61 - 1.*t119*t1510*t73);
  p_output1[150]=t41*(t4389 + t5545 + t5548) - 1.*t5582*t61*t73 + t41*t61*(t1623*t41 + t4464 + t4467 - 1.*t1510*t73) + t73*(t4501 + t4512 + t1510*t41*t61 + t1623*t61*t73);
  p_output1[151]=t41*t5582*t70 + (t4219 + t4561 + t5490 + t5491 - 1.*t1692*t5459*t61 - 1.*t1706*t70)*t73;
  p_output1[152]=t119*t41*t5582 + t73*(t4606 + t4608 - 1.*t1500*t61 - 1.*t1828*t5459*t61 - 1.*t1836*t70 + t119*t1510*t73);
  p_output1[153]=t381*t466*(-1.*t2547*t381 + t4676 + t4679 + t2384*t477) + t477*(-1.*t2384*t381*t466 + t4709 + t4712 - 1.*t2547*t466*t477) - 1.*t466*t477*t5684 + t381*(t4647 + t5705 + t5706);
  p_output1[154]=t381*t5684*t626 + t477*(t4803 + t4818 + t2680*t466*t5739 + t2699*t626 - 1.*t2384*t477*t626 + t2361*t710);
  p_output1[155]=t381*t417*t5684 + t477*(t4888 + t4891 + t2819*t466*t5739 + t5751 + t5754 + t2826*t626);
  p_output1[156]=t381*t466*(-1.*t2384*t381*t417 - 1.*t2547*t417*t477 + t5016 + t5022) + t381*t417*(t2384*t381*t466 + t2547*t466*t477 + t5041 + t5042) - 1.*t417*t477*t5799 - 1.*t466*t477*t5823;
  p_output1[157]=t381*t466*t5799 + t381*t466*(t4647 + t5087 + t5705 + t5706 + t2680*t417*t5739 + t5879) + t381*t5823*t626 + t381*t417*(t5108 + t5111 - 1.*t2680*t466*t5739 + t5837 + t5846 + t2384*t477*t626);
  p_output1[158]=t381*t417*t5823 + t381*t417*(t5189 + t5190 - 1.*t2819*t466*t5739 + t5896 + t5898 + t5908) + t381*t5799*t710 + t381*t466*(t5165 + t5167 + t2819*t417*t5739 + t5928 + t5936 - 1.*t2384*t477*t710);
  p_output1[159]=t381*t417*(t2547*t381 - 1.*t2384*t477 + t5244 + t5262) + t477*(t2384*t381*t417 + t2547*t417*t477 + t5272 + t5273) + t381*(t5189 + t5896 + t5908) - 1.*t417*t477*t5949;
  p_output1[160]=t477*(-1.*t2699*t466 + t4960 + t5318 - 1.*t2680*t417*t5739 + t5782 + t5791) + t381*t466*t5949;
  p_output1[161]=t381*t5949*t710 + t477*(-1.*t2361*t417 - 1.*t2826*t466 + t5363 + t5366 - 1.*t2819*t417*t5739 + t2384*t477*t710);
  p_output1[162]=0.2255*t119 + 0.1575*t70;
  p_output1[163]=0.1575*t119 + 0.2255*t70;
  p_output1[164]=t119*t6227 + t105*t6262 + t105*(t5434 + t5535 + t1692*t61 + t1484*t70) + t70*(-1.*t105*t1484 + t5511 + t5513 - 1.*t1692*t70);
  p_output1[165]=t105*(t119*t1484 + t5567 + t5574 + t1828*t61) + t61*t6262 + t6227*t70 + t70*(t5546 + t5548 - 1.*t1484*t61 - 1.*t1828*t70);
  p_output1[166]=-0.068*t105;
  p_output1[167]=-0.068*t61;
  p_output1[168]=0.325*t46 - 1.*t1479*t46 - 1.*t1812*t46;
  p_output1[169]=0.325*t58 - 1.*t1479*t58 - 1.*t1812*t58;
  p_output1[170]=0.1575*t466 + 0.2255*t710;
  p_output1[171]=0.2255*t466 + 0.1575*t710;
  p_output1[172]=(t2680*t417 + t2332*t466 + t5705 + t5879)*t626 + t466*(-1.*t2680*t466 + t5837 + t5846 - 1.*t2332*t626) + t626*t6461 + t6403*t710;
  p_output1[173]=t466*(-1.*t2332*t417 - 1.*t2819*t466 + t5898 + t5908) + t466*t6403 + t417*t6461 + t626*(t2819*t417 + t5928 + t5936 + t2332*t710);
  p_output1[174]=-0.068*t626;
  p_output1[175]=-0.068*t417;
  p_output1[176]=-0.325*t382 - 1.*t2327*t382 - 1.*t2816*t382;
  p_output1[177]=-0.325*t400 - 1.*t2327*t400 - 1.*t2816*t400;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
