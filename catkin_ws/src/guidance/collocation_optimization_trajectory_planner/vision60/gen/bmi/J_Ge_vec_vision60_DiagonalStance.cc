/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:57:16 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t5343;
  double t5632;
  double t10934;
  double t5638;
  double t10953;
  double t5552;
  double t5600;
  double t12260;
  double t12413;
  double t12510;
  double t12527;
  double t10914;
  double t10966;
  double t10972;
  double t31621;
  double t38606;
  double t11628;
  double t38790;
  double t38799;
  double t5614;
  double t12308;
  double t12352;
  double t12936;
  double t12953;
  double t29959;
  double t29968;
  double t39531;
  double t40010;
  double t40012;
  double t40015;
  double t40017;
  double t31975;
  double t38615;
  double t38616;
  double t38618;
  double t38623;
  double t38738;
  double t38739;
  double t53652;
  double t53937;
  double t53945;
  double t53992;
  double t54014;
  double t38798;
  double t38800;
  double t39128;
  double t39230;
  double t39253;
  double t39467;
  double t39478;
  double t54225;
  double t54269;
  double t54270;
  double t54271;
  double t54273;
  double t39561;
  double t39590;
  double t39885;
  double t39997;
  double t40065;
  double t40088;
  double t40094;
  double t40124;
  double t57006;
  double t59253;
  double t59264;
  double t59316;
  double t59352;
  double t53723;
  double t53783;
  double t53924;
  double t53926;
  double t54062;
  double t54066;
  double t54095;
  double t54096;
  double t59622;
  double t59623;
  double t59624;
  double t59626;
  double t59639;
  double t54226;
  double t54239;
  double t54255;
  double t54267;
  double t54278;
  double t54283;
  double t54293;
  double t54299;
  double t59714;
  double t59986;
  double t60059;
  double t60065;
  double t60110;
  double t32971;
  double t60322;
  double t60389;
  double t60323;
  double t60347;
  double t60374;
  double t60471;
  double t60508;
  double t60554;
  double t60582;
  double t60608;
  double t60637;
  double t60639;
  double t60644;
  double t60657;
  double t60609;
  double t60615;
  double t60616;
  double t60628;
  double t60669;
  double t60673;
  double t60684;
  double t60686;
  double t60710;
  double t60872;
  double t60915;
  double t60922;
  double t60938;
  double t62381;
  double t62382;
  double t62390;
  double t62392;
  double t62393;
  double t62396;
  double t62491;
  double t62492;
  double t62493;
  double t62432;
  double t62433;
  double t62434;
  double t62436;
  double t62438;
  double t62849;
  double t62870;
  double t62884;
  double t62446;
  double t62457;
  double t62481;
  double t62482;
  double t62484;
  double t62910;
  double t62916;
  double t62929;
  double t62488;
  double t62490;
  double t62496;
  double t59431;
  double t59439;
  double t62499;
  double t62571;
  double t62587;
  double t62965;
  double t62966;
  double t62967;
  double t62821;
  double t62843;
  double t62885;
  double t59641;
  double t59648;
  double t62887;
  double t62892;
  double t62893;
  double t62986;
  double t63011;
  double t63033;
  double t62898;
  double t62903;
  double t62934;
  double t60123;
  double t60180;
  double t62940;
  double t62945;
  double t62946;
  double t63271;
  double t63272;
  double t63273;
  double t62426;
  double t63289;
  double t63291;
  double t63292;
  double t63293;
  double t63299;
  double t63326;
  double t63329;
  double t63330;
  double t63312;
  double t63318;
  double t63332;
  double t60711;
  double t60713;
  double t63337;
  double t63338;
  double t63340;
  double t63350;
  double t63351;
  double t63352;
  double t63365;
  double t63367;
  double t63368;
  double t63371;
  double t63372;
  double t63374;
  double t63375;
  double t63591;
  double t63369;
  double t63585;
  double t63561;
  double t63631;
  double t63633;
  double t63634;
  double t63635;
  double t63637;
  double t63638;
  double t63678;
  double t63679;
  double t63683;
  double t63643;
  double t63644;
  double t63645;
  double t63646;
  double t63647;
  double t63649;
  double t63694;
  double t63695;
  double t63696;
  double t63657;
  double t63660;
  double t63661;
  double t63662;
  double t63664;
  double t63669;
  double t63707;
  double t63708;
  double t63709;
  double t63627;
  double t63726;
  double t63730;
  double t63732;
  double t63756;
  double t63765;
  double t63779;
  double t63929;
  double t63930;
  double t63931;
  double t63941;
  double t63942;
  double t63943;
  double t63944;
  double t63945;
  double t63950;
  double t63953;
  double t63955;
  double t63956;
  double t63980;
  double t63981;
  double t63982;
  double t63977;
  double t63983;
  double t63984;
  double t63985;
  double t63986;
  double t63991;
  double t63992;
  double t63993;
  double t64003;
  double t64005;
  double t64006;
  double t64197;
  double t64198;
  double t64199;
  double t64200;
  double t64201;
  double t64212;
  double t64213;
  double t64214;
  double t64209;
  double t64245;
  double t64246;
  double t64247;
  double t64251;
  double t64252;
  double t64258;
  double t64260;
  double t64261;
  double t64272;
  double t64273;
  double t64274;
  double t64282;
  double t64311;
  double t64489;
  double t64490;
  double t64494;
  double t64501;
  double t64502;
  double t64503;
  double t64495;
  double t64517;
  double t64520;
  double t64521;
  double t64523;
  double t64528;
  double t64536;
  double t64541;
  double t64542;
  double t64552;
  double t64553;
  double t64554;
  double t64562;
  double t64563;
  double t64564;
  double t64565;
  double t64566;
  double t64676;
  double t64708;
  double t64774;
  double t64567;
  double t64785;
  double t64786;
  double t64787;
  double t64788;
  double t64789;
  double t64795;
  double t64796;
  double t64797;
  double t64817;
  double t64818;
  double t64821;
  double t62403;
  double t62412;
  double t62419;
  double t62439;
  double t62440;
  double t62441;
  double t62485;
  double t62486;
  double t62487;
  double t62662;
  double t62704;
  double t62809;
  double t62894;
  double t62895;
  double t62896;
  double t62950;
  double t62954;
  double t62959;
  double t62968;
  double t62969;
  double t62970;
  double t62971;
  double t62972;
  double t62973;
  double t62974;
  double t62982;
  double t63121;
  double t63124;
  double t63160;
  double t63173;
  double t63177;
  double t63197;
  double t63235;
  double t63270;
  double t63274;
  double t63275;
  double t63276;
  double t63281;
  double t63283;
  double t63284;
  double t63287;
  double t63288;
  double t63304;
  double t63307;
  double t63308;
  double t63341;
  double t63342;
  double t63344;
  double t63347;
  double t63354;
  double t63355;
  double t63356;
  double t63359;
  double t63360;
  double t63362;
  double t63363;
  double t63364;
  double t64830;
  double t64831;
  double t64832;
  double t64833;
  double t65066;
  double t65067;
  double t64838;
  double t64840;
  double t64841;
  double t65083;
  double t65096;
  double t64845;
  double t64846;
  double t64847;
  double t65139;
  double t65140;
  double t65029;
  double t65065;
  double t65068;
  double t65069;
  double t65070;
  double t65071;
  double t65151;
  double t65155;
  double t65156;
  double t65076;
  double t65079;
  double t65100;
  double t65101;
  double t65110;
  double t65122;
  double t65169;
  double t65171;
  double t65172;
  double t65132;
  double t65134;
  double t65143;
  double t65144;
  double t65145;
  double t65146;
  double t65191;
  double t65192;
  double t65193;
  double t64837;
  double t65204;
  double t65289;
  double t65405;
  double t65411;
  double t65412;
  double t65409;
  double t65410;
  double t65413;
  double t65414;
  double t65415;
  double t65417;
  double t65425;
  double t65426;
  double t65427;
  double t65446;
  double t65459;
  double t65444;
  double t65456;
  double t65449;
  double t65470;
  double t65471;
  double t65472;
  double t65473;
  double t65474;
  double t65475;
  double t65693;
  double t65694;
  double t65695;
  double t65479;
  double t65480;
  double t65481;
  double t65482;
  double t65483;
  double t65484;
  double t65704;
  double t65706;
  double t65707;
  double t65489;
  double t65490;
  double t65491;
  double t65492;
  double t65493;
  double t65494;
  double t65721;
  double t65723;
  double t65724;
  double t65464;
  double t65734;
  double t65735;
  double t65736;
  double t65737;
  double t65738;
  double t65739;
  double t65746;
  double t65747;
  double t65748;
  double t65761;
  double t65762;
  double t65763;
  double t65764;
  double t65765;
  double t65769;
  double t65772;
  double t65773;
  double t65774;
  double t65945;
  double t65946;
  double t65947;
  double t65948;
  double t65949;
  double t65954;
  double t65955;
  double t65957;
  double t65986;
  double t65994;
  double t65995;
  double t66008;
  double t66012;
  double t66016;
  double t66018;
  double t66019;
  double t66026;
  double t66030;
  double t66031;
  double t66023;
  double t66157;
  double t66158;
  double t66159;
  double t66160;
  double t66161;
  double t66174;
  double t66176;
  double t66179;
  double t66203;
  double t66205;
  double t66206;
  double t66225;
  double t66226;
  double t66228;
  double t66230;
  double t66231;
  double t66240;
  double t66241;
  double t66242;
  double t66232;
  double t66253;
  double t66344;
  double t66345;
  double t66346;
  double t66347;
  double t66352;
  double t66353;
  double t66354;
  double t66365;
  double t66370;
  double t66371;
  double t66387;
  double t66388;
  double t66391;
  double t66392;
  double t66393;
  double t66403;
  double t66404;
  double t66405;
  double t66394;
  double t66416;
  double t66417;
  double t66457;
  double t66459;
  double t66472;
  double t66477;
  double t66478;
  double t66479;
  double t66493;
  double t66494;
  double t66496;
  double t63370;
  double t63393;
  double t63533;
  double t63566;
  double t63577;
  double t63583;
  double t63590;
  double t63612;
  double t63622;
  double t63628;
  double t63629;
  double t63630;
  double t63639;
  double t63640;
  double t63642;
  double t63651;
  double t63653;
  double t63655;
  double t63670;
  double t63674;
  double t63676;
  double t63677;
  double t63685;
  double t63686;
  double t63687;
  double t63688;
  double t63689;
  double t63691;
  double t63692;
  double t63693;
  double t63697;
  double t63698;
  double t63699;
  double t63701;
  double t63702;
  double t63703;
  double t63705;
  double t63706;
  double t63710;
  double t63711;
  double t63712;
  double t63713;
  double t63714;
  double t63715;
  double t63717;
  double t63827;
  double t63867;
  double t63903;
  double t63924;
  double t63932;
  double t63933;
  double t63934;
  double t63935;
  double t63936;
  double t63938;
  double t63939;
  double t63940;
  double t65445;
  double t65447;
  double t65448;
  double t65450;
  double t65453;
  double t65454;
  double t65458;
  double t65461;
  double t65462;
  double t65465;
  double t65468;
  double t65469;
  double t65476;
  double t65477;
  double t65478;
  double t65485;
  double t65486;
  double t65487;
  double t65495;
  double t65496;
  double t65497;
  double t65692;
  double t65696;
  double t65697;
  double t65698;
  double t65699;
  double t65700;
  double t65701;
  double t65702;
  double t65703;
  double t65708;
  double t65709;
  double t65710;
  double t65712;
  double t65716;
  double t65718;
  double t65719;
  double t65720;
  double t65725;
  double t65727;
  double t65729;
  double t65730;
  double t65731;
  double t65732;
  double t65733;
  double t65742;
  double t65743;
  double t65744;
  double t65745;
  double t65750;
  double t65751;
  double t65754;
  double t65756;
  double t65757;
  double t65758;
  double t65759;
  double t65760;
  double t66533;
  double t66534;
  double t66535;
  double t66539;
  double t66560;
  double t66561;
  double t66546;
  double t66547;
  double t66548;
  double t66549;
  double t66574;
  double t66575;
  double t66553;
  double t66554;
  double t66555;
  double t66556;
  double t66588;
  double t66589;
  double t66602;
  double t66603;
  double t66604;
  double t66605;
  double t66613;
  double t66614;
  double t66638;
  double t66639;
  double t66640;
  double t66637;
  double t66641;
  double t66642;
  double t66643;
  double t66644;
  double t66650;
  double t66651;
  double t66652;
  double t66663;
  double t66664;
  double t66665;
  double t66688;
  double t66690;
  double t66691;
  double t66693;
  double t66694;
  double t66698;
  double t66699;
  double t66700;
  double t66711;
  double t66712;
  double t66713;
  double t66748;
  double t66752;
  double t66753;
  double t66757;
  double t66761;
  double t66766;
  double t66767;
  double t66770;
  double t66788;
  double t66789;
  double t66790;
  double t66824;
  double t66825;
  double t66828;
  double t66829;
  double t66830;
  double t66835;
  double t66836;
  double t66931;
  double t67017;
  double t67018;
  double t67020;
  double t63946;
  double t63947;
  double t63948;
  double t63951;
  double t63952;
  double t63957;
  double t63959;
  double t63962;
  double t63965;
  double t63967;
  double t63968;
  double t63970;
  double t63972;
  double t63973;
  double t63976;
  double t65766;
  double t65767;
  double t65768;
  double t65770;
  double t65771;
  double t65775;
  double t65777;
  double t65778;
  double t65779;
  double t65780;
  double t65784;
  double t65803;
  double t65942;
  double t65943;
  double t65944;
  double t66625;
  double t66626;
  double t66627;
  double t66628;
  double t66629;
  double t66630;
  double t66631;
  double t66632;
  double t66633;
  double t66634;
  double t66635;
  double t66636;
  double t67036;
  double t67040;
  double t67042;
  double t67048;
  double t67051;
  double t67053;
  double t63987;
  double t63988;
  double t63989;
  double t63990;
  double t63994;
  double t63995;
  double t63996;
  double t63997;
  double t63998;
  double t63999;
  double t64000;
  double t64001;
  double t65950;
  double t65951;
  double t65952;
  double t65953;
  double t65966;
  double t65968;
  double t65969;
  double t65971;
  double t65972;
  double t65973;
  double t65974;
  double t65975;
  double t66645;
  double t66646;
  double t66647;
  double t66649;
  double t66653;
  double t66654;
  double t66655;
  double t66656;
  double t66657;
  double t66658;
  double t66659;
  double t66660;
  double t67069;
  double t67070;
  double t67071;
  double t67073;
  double t67074;
  double t67077;
  double t67078;
  double t67079;
  double t67080;
  double t67090;
  double t67091;
  double t67092;
  double t67095;
  double t67096;
  double t67097;
  double t67093;
  double t67098;
  double t67099;
  double t67100;
  double t67101;
  double t67106;
  double t67210;
  double t67212;
  double t67278;
  double t67279;
  double t67280;
  double t64002;
  double t64023;
  double t64053;
  double t64115;
  double t64173;
  double t64194;
  double t64195;
  double t64196;
  double t65985;
  double t65996;
  double t65999;
  double t66001;
  double t66003;
  double t66004;
  double t66005;
  double t66006;
  double t66661;
  double t66666;
  double t66667;
  double t66668;
  double t66669;
  double t66670;
  double t66671;
  double t66673;
  double t67081;
  double t67082;
  double t67083;
  double t67084;
  double t67085;
  double t67086;
  double t67087;
  double t67088;
  double t67277;
  double t67281;
  double t67283;
  double t67284;
  double t67285;
  double t67286;
  double t67287;
  double t67289;
  double t67293;
  double t67295;
  double t67296;
  double t64203;
  double t64204;
  double t64205;
  double t64210;
  double t64211;
  double t64215;
  double t64216;
  double t64217;
  double t64221;
  double t64225;
  double t64227;
  double t64228;
  double t64231;
  double t64237;
  double t64243;
  double t66020;
  double t66021;
  double t66022;
  double t66024;
  double t66025;
  double t66139;
  double t66146;
  double t66147;
  double t66148;
  double t66150;
  double t66151;
  double t66152;
  double t66153;
  double t66155;
  double t66156;
  double t66674;
  double t66676;
  double t66677;
  double t66678;
  double t66679;
  double t66680;
  double t66681;
  double t66682;
  double t66683;
  double t66684;
  double t66685;
  double t66687;
  double t67309;
  double t67310;
  double t67311;
  double t67316;
  double t67319;
  double t67322;
  double t64253;
  double t64255;
  double t64256;
  double t64257;
  double t64262;
  double t64263;
  double t64264;
  double t64265;
  double t64267;
  double t64268;
  double t64269;
  double t64270;
  double t66164;
  double t66166;
  double t66171;
  double t66172;
  double t66182;
  double t66183;
  double t66184;
  double t66185;
  double t66186;
  double t66195;
  double t66199;
  double t66201;
  double t66695;
  double t66696;
  double t66697;
  double t66701;
  double t66702;
  double t66703;
  double t66704;
  double t66705;
  double t66706;
  double t66708;
  double t66709;
  double t66710;
  double t67338;
  double t67339;
  double t67340;
  double t67341;
  double t67343;
  double t67344;
  double t67345;
  double t67346;
  double t67347;
  double t67360;
  double t67361;
  double t67362;
  double t67359;
  double t67363;
  double t67364;
  double t67413;
  double t67450;
  double t67513;
  double t67514;
  double t67515;
  double t67536;
  double t67538;
  double t67539;
  double t64271;
  double t64275;
  double t64276;
  double t64277;
  double t64278;
  double t64279;
  double t64280;
  double t64281;
  double t66202;
  double t66213;
  double t66214;
  double t66215;
  double t66218;
  double t66219;
  double t66220;
  double t66223;
  double t66714;
  double t66715;
  double t66716;
  double t66717;
  double t66718;
  double t66719;
  double t66721;
  double t66722;
  double t67348;
  double t67349;
  double t67351;
  double t67352;
  double t67353;
  double t67354;
  double t67355;
  double t67356;
  double t67542;
  double t67543;
  double t67544;
  double t67545;
  double t67546;
  double t67555;
  double t67556;
  double t67559;
  double t67567;
  double t67568;
  double t67570;
  double t64496;
  double t64497;
  double t64498;
  double t64499;
  double t64500;
  double t64505;
  double t64506;
  double t64507;
  double t64508;
  double t64509;
  double t64510;
  double t64511;
  double t64513;
  double t64514;
  double t64516;
  double t66233;
  double t66234;
  double t66237;
  double t66238;
  double t66239;
  double t66243;
  double t66244;
  double t66245;
  double t66246;
  double t66247;
  double t66248;
  double t66249;
  double t66250;
  double t66251;
  double t66252;
  double t66723;
  double t66724;
  double t66725;
  double t66726;
  double t66727;
  double t66728;
  double t66731;
  double t66735;
  double t66740;
  double t66745;
  double t66746;
  double t66747;
  double t67585;
  double t67590;
  double t67591;
  double t67592;
  double t67599;
  double t67600;
  double t64529;
  double t64532;
  double t64534;
  double t64535;
  double t64543;
  double t64544;
  double t64545;
  double t64546;
  double t64547;
  double t64548;
  double t64549;
  double t64550;
  double t66348;
  double t66349;
  double t66350;
  double t66351;
  double t66355;
  double t66356;
  double t66357;
  double t66358;
  double t66359;
  double t66360;
  double t66361;
  double t66363;
  double t66763;
  double t66764;
  double t66765;
  double t66772;
  double t66775;
  double t66777;
  double t66778;
  double t66779;
  double t66780;
  double t66781;
  double t66782;
  double t66783;
  double t67691;
  double t67692;
  double t67693;
  double t67694;
  double t67695;
  double t67696;
  double t67697;
  double t67701;
  double t67703;
  double t67729;
  double t67732;
  double t67734;
  double t67722;
  double t67735;
  double t67736;
  double t67738;
  double t67739;
  double t67752;
  double t67753;
  double t67755;
  double t67772;
  double t67773;
  double t67774;
  double t64551;
  double t64555;
  double t64556;
  double t64557;
  double t64558;
  double t64559;
  double t64560;
  double t64561;
  double t66364;
  double t66372;
  double t66374;
  double t66375;
  double t66376;
  double t66377;
  double t66378;
  double t66379;
  double t66791;
  double t66792;
  double t66793;
  double t66796;
  double t66797;
  double t66800;
  double t66801;
  double t66802;
  double t67707;
  double t67708;
  double t67709;
  double t67711;
  double t67714;
  double t67717;
  double t67718;
  double t67719;
  double t67775;
  double t67776;
  double t67777;
  double t67779;
  double t67780;
  double t67781;
  double t67782;
  double t67783;
  double t67785;
  double t67786;
  double t67787;
  double t64571;
  double t64579;
  double t64585;
  double t64599;
  double t64615;
  double t64775;
  double t64776;
  double t64777;
  double t64778;
  double t64779;
  double t64780;
  double t64781;
  double t64782;
  double t64783;
  double t64784;
  double t66397;
  double t66398;
  double t66399;
  double t66400;
  double t66401;
  double t66406;
  double t66407;
  double t66408;
  double t66409;
  double t66410;
  double t66411;
  double t66412;
  double t66413;
  double t66414;
  double t66415;
  double t66803;
  double t66804;
  double t66805;
  double t66809;
  double t66810;
  double t66815;
  double t66816;
  double t66817;
  double t66820;
  double t66821;
  double t66822;
  double t66823;
  double t67891;
  double t67892;
  double t67893;
  double t67894;
  double t67900;
  double t67902;
  double t64790;
  double t64792;
  double t64793;
  double t64794;
  double t64799;
  double t64800;
  double t64801;
  double t64804;
  double t64807;
  double t64809;
  double t64810;
  double t64813;
  double t66473;
  double t66474;
  double t66475;
  double t66476;
  double t66480;
  double t66481;
  double t66482;
  double t66483;
  double t66484;
  double t66485;
  double t66486;
  double t66491;
  double t66831;
  double t66832;
  double t66833;
  double t67008;
  double t67009;
  double t67010;
  double t67011;
  double t67012;
  double t67013;
  double t67014;
  double t67015;
  double t67016;
  double t67918;
  double t67919;
  double t67928;
  double t67929;
  double t67931;
  double t67932;
  double t67933;
  double t67934;
  double t67937;
  double t67950;
  double t67952;
  double t67953;
  double t67949;
  double t67954;
  double t67955;
  double t67956;
  double t67957;
  double t68013;
  double t68014;
  double t68015;
  double t68029;
  double t68030;
  double t68031;
  double t64814;
  double t64822;
  double t64823;
  double t64824;
  double t64826;
  double t64827;
  double t64828;
  double t64829;
  double t66492;
  double t66497;
  double t66499;
  double t66502;
  double t66503;
  double t66505;
  double t66509;
  double t66510;
  double t67021;
  double t67022;
  double t67023;
  double t67024;
  double t67026;
  double t67030;
  double t67031;
  double t67032;
  double t67938;
  double t67940;
  double t67941;
  double t67942;
  double t67944;
  double t67945;
  double t67946;
  double t67947;
  double t68032;
  double t68034;
  double t68035;
  double t68037;
  double t68040;
  double t68041;
  double t68047;
  double t68048;
  double t68050;
  double t68051;
  double t68052;
  t5343 = Cos(var1[3]);
  t5632 = Cos(var1[5]);
  t10934 = Sin(var1[3]);
  t5638 = Sin(var1[4]);
  t10953 = Sin(var1[5]);
  t5552 = Cos(var1[4]);
  t5600 = Sin(var1[9]);
  t12260 = Cos(var1[9]);
  t12413 = -1.*t5632*t10934;
  t12510 = -1.*t5343*t5638*t10953;
  t12527 = t12413 + t12510;
  t10914 = t5343*t5632*t5638;
  t10966 = -1.*t10934*t10953;
  t10972 = t10914 + t10966;
  t31621 = Sin(var1[12]);
  t38606 = Cos(var1[12]);
  t11628 = -0.325*t10972;
  t38790 = Sin(var1[15]);
  t38799 = Cos(var1[15]);
  t5614 = 0.1575*t5343*t5552*t5600;
  t12308 = -1.*t12260;
  t12352 = 1. + t12308;
  t12936 = 0.1575*t12352*t12527;
  t12953 = -1.*t5343*t5552*t5600;
  t29959 = t12260*t12527;
  t29968 = t12953 + t29959;
  t39531 = Cos(var1[10]);
  t40010 = Sin(var1[10]);
  t40012 = -1.*t12260*t5343*t5552;
  t40015 = -1.*t5600*t12527;
  t40017 = t40012 + t40015;
  t31975 = -0.1575*t5343*t5552*t31621;
  t38615 = -1.*t38606;
  t38616 = 1. + t38615;
  t38618 = -0.1575*t38616*t12527;
  t38623 = -1.*t5343*t5552*t31621;
  t38738 = t38606*t12527;
  t38739 = t38623 + t38738;
  t53652 = Cos(var1[13]);
  t53937 = Sin(var1[13]);
  t53945 = -1.*t38606*t5343*t5552;
  t53992 = -1.*t31621*t12527;
  t54014 = t53945 + t53992;
  t38798 = -0.1575*t5343*t5552*t38790;
  t38800 = -1.*t38799;
  t39128 = 1. + t38800;
  t39230 = -0.1575*t39128*t12527;
  t39253 = -1.*t5343*t5552*t38790;
  t39467 = t38799*t12527;
  t39478 = t39253 + t39467;
  t54225 = Cos(var1[16]);
  t54269 = Sin(var1[16]);
  t54270 = -1.*t38799*t5343*t5552;
  t54271 = -1.*t38790*t12527;
  t54273 = t54270 + t54271;
  t39561 = -1.*t39531;
  t39590 = 1. + t39561;
  t39885 = -0.325*t39590*t10972;
  t39997 = 0.2255*t29968;
  t40065 = 0.325*t40010*t40017;
  t40088 = t39531*t10972;
  t40094 = t40010*t40017;
  t40124 = t40088 + t40094;
  t57006 = Sin(var1[11]);
  t59253 = -1.*t40010*t10972;
  t59264 = t39531*t40017;
  t59316 = t59253 + t59264;
  t59352 = Cos(var1[11]);
  t53723 = -1.*t53652;
  t53783 = 1. + t53723;
  t53924 = 0.325*t53783*t10972;
  t53926 = -0.2255*t38739;
  t54062 = -0.325*t53937*t54014;
  t54066 = t53652*t10972;
  t54095 = t53937*t54014;
  t54096 = t54066 + t54095;
  t59622 = Sin(var1[14]);
  t59623 = -1.*t53937*t10972;
  t59624 = t53652*t54014;
  t59626 = t59623 + t59624;
  t59639 = Cos(var1[14]);
  t54226 = -1.*t54225;
  t54239 = 1. + t54226;
  t54255 = -0.325*t54239*t10972;
  t54267 = -0.2255*t39478;
  t54278 = 0.325*t54269*t54273;
  t54283 = t54225*t10972;
  t54293 = t54269*t54273;
  t54299 = t54283 + t54293;
  t59714 = Sin(var1[17]);
  t59986 = -1.*t54269*t10972;
  t60059 = t54225*t54273;
  t60065 = t59986 + t60059;
  t60110 = Cos(var1[17]);
  t32971 = 0.325*t10972;
  t60322 = Cos(var1[6]);
  t60389 = Sin(var1[6]);
  t60323 = -1.*t60322;
  t60347 = 1. + t60323;
  t60374 = 0.1575*t60347*t12527;
  t60471 = 0.1575*t5343*t5552*t60389;
  t60508 = t60322*t12527;
  t60554 = -1.*t5343*t5552*t60389;
  t60582 = t60508 + t60554;
  t60608 = Cos(var1[7]);
  t60637 = -1.*t5343*t5552*t60322;
  t60639 = -1.*t12527*t60389;
  t60644 = t60637 + t60639;
  t60657 = Sin(var1[7]);
  t60609 = -1.*t60608;
  t60615 = 1. + t60609;
  t60616 = 0.325*t60615*t10972;
  t60628 = 0.2255*t60582;
  t60669 = -0.325*t60644*t60657;
  t60673 = t60608*t10972;
  t60684 = t60644*t60657;
  t60686 = t60673 + t60684;
  t60710 = Cos(var1[8]);
  t60872 = t60608*t60644;
  t60915 = -1.*t10972*t60657;
  t60922 = t60872 + t60915;
  t60938 = Sin(var1[8]);
  t62381 = -0.325*t5552*t5632*t10934;
  t62382 = -0.1575*t5600*t10934*t5638;
  t62390 = -0.1575*t12352*t5552*t10934*t10953;
  t62392 = t5600*t10934*t5638;
  t62393 = -1.*t12260*t5552*t10934*t10953;
  t62396 = t62392 + t62393;
  t62491 = t12260*t10934*t5638;
  t62492 = t5552*t5600*t10934*t10953;
  t62493 = t62491 + t62492;
  t62432 = 0.1575*t31621*t10934*t5638;
  t62433 = 0.1575*t38616*t5552*t10934*t10953;
  t62434 = t31621*t10934*t5638;
  t62436 = -1.*t38606*t5552*t10934*t10953;
  t62438 = t62434 + t62436;
  t62849 = t38606*t10934*t5638;
  t62870 = t5552*t31621*t10934*t10953;
  t62884 = t62849 + t62870;
  t62446 = 0.1575*t38790*t10934*t5638;
  t62457 = 0.1575*t39128*t5552*t10934*t10953;
  t62481 = t38790*t10934*t5638;
  t62482 = -1.*t38799*t5552*t10934*t10953;
  t62484 = t62481 + t62482;
  t62910 = t38799*t10934*t5638;
  t62916 = t5552*t38790*t10934*t10953;
  t62929 = t62910 + t62916;
  t62488 = -0.325*t39590*t5552*t5632*t10934;
  t62490 = 0.2255*t62396;
  t62496 = 0.325*t40010*t62493;
  t59431 = -1.*t59352;
  t59439 = 1. + t59431;
  t62499 = t39531*t5552*t5632*t10934;
  t62571 = t40010*t62493;
  t62587 = t62499 + t62571;
  t62965 = -1.*t5552*t5632*t40010*t10934;
  t62966 = t39531*t62493;
  t62967 = t62965 + t62966;
  t62821 = 0.325*t53783*t5552*t5632*t10934;
  t62843 = -0.2255*t62438;
  t62885 = -0.325*t53937*t62884;
  t59641 = -1.*t59639;
  t59648 = 1. + t59641;
  t62887 = t53652*t5552*t5632*t10934;
  t62892 = t53937*t62884;
  t62893 = t62887 + t62892;
  t62986 = -1.*t5552*t5632*t53937*t10934;
  t63011 = t53652*t62884;
  t63033 = t62986 + t63011;
  t62898 = -0.325*t54239*t5552*t5632*t10934;
  t62903 = -0.2255*t62484;
  t62934 = 0.325*t54269*t62929;
  t60123 = -1.*t60110;
  t60180 = 1. + t60123;
  t62940 = t54225*t5552*t5632*t10934;
  t62945 = t54269*t62929;
  t62946 = t62940 + t62945;
  t63271 = -1.*t5552*t5632*t54269*t10934;
  t63272 = t54225*t62929;
  t63273 = t63271 + t63272;
  t62426 = 0.325*t5552*t5632*t10934;
  t63289 = -0.1575*t5552*t60347*t10934*t10953;
  t63291 = -0.1575*t10934*t5638*t60389;
  t63292 = -1.*t5552*t60322*t10934*t10953;
  t63293 = t10934*t5638*t60389;
  t63299 = t63292 + t63293;
  t63326 = t60322*t10934*t5638;
  t63329 = t5552*t10934*t10953*t60389;
  t63330 = t63326 + t63329;
  t63312 = 0.325*t5552*t5632*t60615*t10934;
  t63318 = 0.2255*t63299;
  t63332 = -0.325*t63330*t60657;
  t60711 = -1.*t60710;
  t60713 = 1. + t60711;
  t63337 = t5552*t5632*t60608*t10934;
  t63338 = t63330*t60657;
  t63340 = t63337 + t63338;
  t63350 = t60608*t63330;
  t63351 = -1.*t5552*t5632*t10934*t60657;
  t63352 = t63350 + t63351;
  t63365 = -1.*t5632*t10934*t5638;
  t63367 = -1.*t5343*t10953;
  t63368 = t63365 + t63367;
  t63371 = t5343*t5632;
  t63372 = -1.*t10934*t5638*t10953;
  t63374 = t63371 + t63372;
  t63375 = -0.325*t63374;
  t63591 = 0.325*t63374;
  t63369 = 0.1575*t12352*t63368;
  t63585 = -0.1575*t38616*t63368;
  t63561 = -0.1575*t39128*t63368;
  t63631 = 0.2255*t12260*t63368;
  t63633 = -0.325*t5600*t40010*t63368;
  t63634 = -0.325*t39590*t63374;
  t63635 = -1.*t5600*t40010*t63368;
  t63637 = t39531*t63374;
  t63638 = t63635 + t63637;
  t63678 = -1.*t39531*t5600*t63368;
  t63679 = -1.*t40010*t63374;
  t63683 = t63678 + t63679;
  t63643 = -0.2255*t38606*t63368;
  t63644 = 0.325*t31621*t53937*t63368;
  t63645 = 0.325*t53783*t63374;
  t63646 = -1.*t31621*t53937*t63368;
  t63647 = t53652*t63374;
  t63649 = t63646 + t63647;
  t63694 = -1.*t53652*t31621*t63368;
  t63695 = -1.*t53937*t63374;
  t63696 = t63694 + t63695;
  t63657 = -0.2255*t38799*t63368;
  t63660 = -0.325*t38790*t54269*t63368;
  t63661 = -0.325*t54239*t63374;
  t63662 = -1.*t38790*t54269*t63368;
  t63664 = t54225*t63374;
  t63669 = t63662 + t63664;
  t63707 = -1.*t54225*t38790*t63368;
  t63708 = -1.*t54269*t63374;
  t63709 = t63707 + t63708;
  t63627 = 0.1575*t60347*t63368;
  t63726 = 0.2255*t60322*t63368;
  t63730 = 0.325*t60615*t63374;
  t63732 = 0.325*t63368*t60389*t60657;
  t63756 = t60608*t63374;
  t63765 = -1.*t63368*t60389*t60657;
  t63779 = t63756 + t63765;
  t63929 = -1.*t60608*t63368*t60389;
  t63930 = -1.*t63374*t60657;
  t63931 = t63929 + t63930;
  t63941 = 0.1575*t5552*t60322*t10934;
  t63942 = 0.1575*t63374*t60389;
  t63943 = -1.*t5552*t60322*t10934;
  t63944 = -1.*t63374*t60389;
  t63945 = t63943 + t63944;
  t63950 = 0.2255*t63945;
  t63953 = -1.*t60322*t63374;
  t63955 = t5552*t10934*t60389;
  t63956 = t63953 + t63955;
  t63980 = t5632*t10934*t5638;
  t63981 = t5343*t10953;
  t63982 = t63980 + t63981;
  t63977 = -0.325*t60608*t63945;
  t63983 = 0.325*t63982*t60657;
  t63984 = t60608*t63945;
  t63985 = -1.*t63982*t60657;
  t63986 = t63984 + t63985;
  t63991 = -1.*t60608*t63982;
  t63992 = -1.*t63945*t60657;
  t63993 = t63991 + t63992;
  t64003 = t60608*t63982;
  t64005 = t63945*t60657;
  t64006 = t64003 + t64005;
  t64197 = 0.1575*t12260*t5552*t10934;
  t64198 = 0.1575*t5600*t63374;
  t64199 = -1.*t12260*t5552*t10934;
  t64200 = -1.*t5600*t63374;
  t64201 = t64199 + t64200;
  t64212 = t5552*t5600*t10934;
  t64213 = -1.*t12260*t63374;
  t64214 = t64212 + t64213;
  t64209 = 0.2255*t64201;
  t64245 = -0.325*t40010*t63982;
  t64246 = 0.325*t39531*t64201;
  t64247 = -1.*t40010*t63982;
  t64251 = t39531*t64201;
  t64252 = t64247 + t64251;
  t64258 = -1.*t39531*t63982;
  t64260 = -1.*t40010*t64201;
  t64261 = t64258 + t64260;
  t64272 = t39531*t63982;
  t64273 = t40010*t64201;
  t64274 = t64272 + t64273;
  t64282 = -0.1575*t38606*t5552*t10934;
  t64311 = -0.1575*t31621*t63374;
  t64489 = -1.*t38606*t5552*t10934;
  t64490 = -1.*t31621*t63374;
  t64494 = t64489 + t64490;
  t64501 = t5552*t31621*t10934;
  t64502 = -1.*t38606*t63374;
  t64503 = t64501 + t64502;
  t64495 = -0.2255*t64494;
  t64517 = 0.325*t53937*t63982;
  t64520 = -0.325*t53652*t64494;
  t64521 = -1.*t53937*t63982;
  t64523 = t53652*t64494;
  t64528 = t64521 + t64523;
  t64536 = -1.*t53652*t63982;
  t64541 = -1.*t53937*t64494;
  t64542 = t64536 + t64541;
  t64552 = t53652*t63982;
  t64553 = t53937*t64494;
  t64554 = t64552 + t64553;
  t64562 = -0.1575*t38799*t5552*t10934;
  t64563 = -0.1575*t38790*t63374;
  t64564 = -1.*t38799*t5552*t10934;
  t64565 = -1.*t38790*t63374;
  t64566 = t64564 + t64565;
  t64676 = t5552*t38790*t10934;
  t64708 = -1.*t38799*t63374;
  t64774 = t64676 + t64708;
  t64567 = -0.2255*t64566;
  t64785 = -0.325*t54269*t63982;
  t64786 = 0.325*t54225*t64566;
  t64787 = -1.*t54269*t63982;
  t64788 = t54225*t64566;
  t64789 = t64787 + t64788;
  t64795 = -1.*t54225*t63982;
  t64796 = -1.*t54269*t64566;
  t64797 = t64795 + t64796;
  t64817 = t54225*t63982;
  t64818 = t54269*t64566;
  t64821 = t64817 + t64818;
  t62403 = 0.1575*t62396;
  t62412 = t62381 + t62382 + t62390 + t62403;
  t62419 = -26.977500000000003*t62412;
  t62439 = -0.1575*t62438;
  t62440 = t62426 + t62432 + t62433 + t62439;
  t62441 = -26.977500000000003*t62440;
  t62485 = -0.1575*t62484;
  t62486 = t62381 + t62446 + t62457 + t62485;
  t62487 = -26.977500000000003*t62486;
  t62662 = -0.325*t62587;
  t62704 = t62488 + t62382 + t62390 + t62490 + t62496 + t62662;
  t62809 = -6.1312500000000005*t62704;
  t62894 = 0.325*t62893;
  t62895 = t62821 + t62432 + t62433 + t62843 + t62885 + t62894;
  t62896 = -6.1312500000000005*t62895;
  t62950 = -0.325*t62946;
  t62954 = t62898 + t62446 + t62457 + t62903 + t62934 + t62950;
  t62959 = -6.1312500000000005*t62954;
  t62968 = -0.575*t57006*t62967;
  t62969 = -0.575*t59439*t62587;
  t62970 = -1.*t57006*t62967;
  t62971 = t59352*t62587;
  t62972 = t62970 + t62971;
  t62973 = -0.575*t62972;
  t62974 = t62488 + t62382 + t62390 + t62490 + t62496 + t62968 + t62969 + t62973;
  t62982 = -1.9620000000000002*t62974;
  t63121 = 0.075*t59622*t63033;
  t63124 = 0.075*t59648*t62893;
  t63160 = -1.*t59622*t63033;
  t63173 = t59639*t62893;
  t63177 = t63160 + t63173;
  t63197 = 0.075*t63177;
  t63235 = t62821 + t62432 + t62433 + t62843 + t62885 + t63121 + t63124 + t63197;
  t63270 = -1.9620000000000002*t63235;
  t63274 = -0.575*t59714*t63273;
  t63275 = -0.575*t60180*t62946;
  t63276 = -1.*t59714*t63273;
  t63281 = t60110*t62946;
  t63283 = t63276 + t63281;
  t63284 = -0.575*t63283;
  t63287 = t62898 + t62446 + t62457 + t62903 + t62934 + t63274 + t63275 + t63284;
  t63288 = -1.9620000000000002*t63287;
  t63304 = 0.1575*t63299;
  t63307 = t62426 + t63289 + t63291 + t63304;
  t63308 = -26.977500000000003*t63307;
  t63341 = 0.325*t63340;
  t63342 = t63312 + t63289 + t63291 + t63318 + t63332 + t63341;
  t63344 = -6.1312500000000005*t63342;
  t63347 = 0.075*t60713*t63340;
  t63354 = 0.075*t63352*t60938;
  t63355 = t60710*t63340;
  t63356 = -1.*t63352*t60938;
  t63359 = t63355 + t63356;
  t63360 = 0.075*t63359;
  t63362 = t63312 + t63289 + t63291 + t63318 + t63332 + t63347 + t63354 + t63360;
  t63363 = -1.9620000000000002*t63362;
  t63364 = t62419 + t62441 + t62487 + t62809 + t62896 + t62959 + t62982 + t63270 + t63288 + t63308 + t63344 + t63363;
  t64830 = -0.325*t5343*t5632*t5638;
  t64831 = -0.1575*t12352*t5343*t5638*t10953;
  t64832 = -1.*t12260*t5343*t5638*t10953;
  t64833 = t12953 + t64832;
  t65066 = t5343*t5600*t5638*t10953;
  t65067 = t40012 + t65066;
  t64838 = 0.1575*t38616*t5343*t5638*t10953;
  t64840 = -1.*t38606*t5343*t5638*t10953;
  t64841 = t38623 + t64840;
  t65083 = t5343*t31621*t5638*t10953;
  t65096 = t53945 + t65083;
  t64845 = 0.1575*t39128*t5343*t5638*t10953;
  t64846 = -1.*t38799*t5343*t5638*t10953;
  t64847 = t39253 + t64846;
  t65139 = t5343*t38790*t5638*t10953;
  t65140 = t54270 + t65139;
  t65029 = -0.325*t39590*t5343*t5632*t5638;
  t65065 = 0.2255*t64833;
  t65068 = 0.325*t40010*t65067;
  t65069 = t39531*t5343*t5632*t5638;
  t65070 = t40010*t65067;
  t65071 = t65069 + t65070;
  t65151 = -1.*t5343*t5632*t40010*t5638;
  t65155 = t39531*t65067;
  t65156 = t65151 + t65155;
  t65076 = 0.325*t53783*t5343*t5632*t5638;
  t65079 = -0.2255*t64841;
  t65100 = -0.325*t53937*t65096;
  t65101 = t53652*t5343*t5632*t5638;
  t65110 = t53937*t65096;
  t65122 = t65101 + t65110;
  t65169 = -1.*t5343*t5632*t53937*t5638;
  t65171 = t53652*t65096;
  t65172 = t65169 + t65171;
  t65132 = -0.325*t54239*t5343*t5632*t5638;
  t65134 = -0.2255*t64847;
  t65143 = 0.325*t54269*t65140;
  t65144 = t54225*t5343*t5632*t5638;
  t65145 = t54269*t65140;
  t65146 = t65144 + t65145;
  t65191 = -1.*t5343*t5632*t54269*t5638;
  t65192 = t54225*t65140;
  t65193 = t65191 + t65192;
  t64837 = 0.325*t5343*t5632*t5638;
  t65204 = -0.1575*t5343*t60347*t5638*t10953;
  t65289 = -1.*t5343*t60322*t5638*t10953;
  t65405 = t65289 + t60554;
  t65411 = t5343*t5638*t10953*t60389;
  t65412 = t60637 + t65411;
  t65409 = 0.325*t5343*t5632*t60615*t5638;
  t65410 = 0.2255*t65405;
  t65413 = -0.325*t65412*t60657;
  t65414 = t5343*t5632*t60608*t5638;
  t65415 = t65412*t60657;
  t65417 = t65414 + t65415;
  t65425 = t60608*t65412;
  t65426 = -1.*t5343*t5632*t5638*t60657;
  t65427 = t65425 + t65426;
  t65446 = -0.325*t5343*t5552*t10953;
  t65459 = 0.325*t5343*t5552*t10953;
  t65444 = 0.1575*t12352*t5343*t5552*t5632;
  t65456 = -0.1575*t38616*t5343*t5552*t5632;
  t65449 = -0.1575*t39128*t5343*t5552*t5632;
  t65470 = 0.2255*t12260*t5343*t5552*t5632;
  t65471 = -0.325*t5343*t5552*t5632*t5600*t40010;
  t65472 = -0.325*t39590*t5343*t5552*t10953;
  t65473 = -1.*t5343*t5552*t5632*t5600*t40010;
  t65474 = t39531*t5343*t5552*t10953;
  t65475 = t65473 + t65474;
  t65693 = -1.*t39531*t5343*t5552*t5632*t5600;
  t65694 = -1.*t5343*t5552*t40010*t10953;
  t65695 = t65693 + t65694;
  t65479 = -0.2255*t38606*t5343*t5552*t5632;
  t65480 = 0.325*t5343*t5552*t5632*t31621*t53937;
  t65481 = 0.325*t53783*t5343*t5552*t10953;
  t65482 = -1.*t5343*t5552*t5632*t31621*t53937;
  t65483 = t53652*t5343*t5552*t10953;
  t65484 = t65482 + t65483;
  t65704 = -1.*t53652*t5343*t5552*t5632*t31621;
  t65706 = -1.*t5343*t5552*t53937*t10953;
  t65707 = t65704 + t65706;
  t65489 = -0.2255*t38799*t5343*t5552*t5632;
  t65490 = -0.325*t5343*t5552*t5632*t38790*t54269;
  t65491 = -0.325*t54239*t5343*t5552*t10953;
  t65492 = -1.*t5343*t5552*t5632*t38790*t54269;
  t65493 = t54225*t5343*t5552*t10953;
  t65494 = t65492 + t65493;
  t65721 = -1.*t54225*t5343*t5552*t5632*t38790;
  t65723 = -1.*t5343*t5552*t54269*t10953;
  t65724 = t65721 + t65723;
  t65464 = 0.1575*t5343*t5552*t5632*t60347;
  t65734 = 0.2255*t5343*t5552*t5632*t60322;
  t65735 = 0.325*t5343*t5552*t60615*t10953;
  t65736 = 0.325*t5343*t5552*t5632*t60389*t60657;
  t65737 = t5343*t5552*t60608*t10953;
  t65738 = -1.*t5343*t5552*t5632*t60389*t60657;
  t65739 = t65737 + t65738;
  t65746 = -1.*t5343*t5552*t5632*t60608*t60389;
  t65747 = -1.*t5343*t5552*t10953*t60657;
  t65748 = t65746 + t65747;
  t65761 = 0.1575*t5343*t60322*t5638;
  t65762 = 0.1575*t5343*t5552*t10953*t60389;
  t65763 = -1.*t5343*t60322*t5638;
  t65764 = -1.*t5343*t5552*t10953*t60389;
  t65765 = t65763 + t65764;
  t65769 = 0.2255*t65765;
  t65772 = -1.*t5343*t5552*t60322*t10953;
  t65773 = t5343*t5638*t60389;
  t65774 = t65772 + t65773;
  t65945 = -0.325*t60608*t65765;
  t65946 = -0.325*t5343*t5552*t5632*t60657;
  t65947 = t60608*t65765;
  t65948 = t5343*t5552*t5632*t60657;
  t65949 = t65947 + t65948;
  t65954 = t5343*t5552*t5632*t60608;
  t65955 = -1.*t65765*t60657;
  t65957 = t65954 + t65955;
  t65986 = -1.*t5343*t5552*t5632*t60608;
  t65994 = t65765*t60657;
  t65995 = t65986 + t65994;
  t66008 = 0.1575*t12260*t5343*t5638;
  t66012 = 0.1575*t5343*t5552*t5600*t10953;
  t66016 = -1.*t12260*t5343*t5638;
  t66018 = -1.*t5343*t5552*t5600*t10953;
  t66019 = t66016 + t66018;
  t66026 = t5343*t5600*t5638;
  t66030 = -1.*t12260*t5343*t5552*t10953;
  t66031 = t66026 + t66030;
  t66023 = 0.2255*t66019;
  t66157 = 0.325*t5343*t5552*t5632*t40010;
  t66158 = 0.325*t39531*t66019;
  t66159 = t5343*t5552*t5632*t40010;
  t66160 = t39531*t66019;
  t66161 = t66159 + t66160;
  t66174 = t39531*t5343*t5552*t5632;
  t66176 = -1.*t40010*t66019;
  t66179 = t66174 + t66176;
  t66203 = -1.*t39531*t5343*t5552*t5632;
  t66205 = t40010*t66019;
  t66206 = t66203 + t66205;
  t66225 = -0.1575*t38606*t5343*t5638;
  t66226 = -0.1575*t5343*t5552*t31621*t10953;
  t66228 = -1.*t38606*t5343*t5638;
  t66230 = -1.*t5343*t5552*t31621*t10953;
  t66231 = t66228 + t66230;
  t66240 = t5343*t31621*t5638;
  t66241 = -1.*t38606*t5343*t5552*t10953;
  t66242 = t66240 + t66241;
  t66232 = -0.2255*t66231;
  t66253 = -0.325*t5343*t5552*t5632*t53937;
  t66344 = -0.325*t53652*t66231;
  t66345 = t5343*t5552*t5632*t53937;
  t66346 = t53652*t66231;
  t66347 = t66345 + t66346;
  t66352 = t53652*t5343*t5552*t5632;
  t66353 = -1.*t53937*t66231;
  t66354 = t66352 + t66353;
  t66365 = -1.*t53652*t5343*t5552*t5632;
  t66370 = t53937*t66231;
  t66371 = t66365 + t66370;
  t66387 = -0.1575*t38799*t5343*t5638;
  t66388 = -0.1575*t5343*t5552*t38790*t10953;
  t66391 = -1.*t38799*t5343*t5638;
  t66392 = -1.*t5343*t5552*t38790*t10953;
  t66393 = t66391 + t66392;
  t66403 = t5343*t38790*t5638;
  t66404 = -1.*t38799*t5343*t5552*t10953;
  t66405 = t66403 + t66404;
  t66394 = -0.2255*t66393;
  t66416 = 0.325*t5343*t5552*t5632*t54269;
  t66417 = 0.325*t54225*t66393;
  t66457 = t5343*t5552*t5632*t54269;
  t66459 = t54225*t66393;
  t66472 = t66457 + t66459;
  t66477 = t54225*t5343*t5552*t5632;
  t66478 = -1.*t54269*t66393;
  t66479 = t66477 + t66478;
  t66493 = -1.*t54225*t5343*t5552*t5632;
  t66494 = t54269*t66393;
  t66496 = t66493 + t66494;
  t63370 = 0.1575*t12260*t63368;
  t63393 = t63369 + t63370 + t63375;
  t63533 = -26.977500000000003*t63393;
  t63566 = -0.1575*t38799*t63368;
  t63577 = t63561 + t63566 + t63375;
  t63583 = -26.977500000000003*t63577;
  t63590 = -0.1575*t38606*t63368;
  t63612 = t63585 + t63590 + t63591;
  t63622 = -26.977500000000003*t63612;
  t63628 = 0.1575*t60322*t63368;
  t63629 = t63627 + t63628 + t63591;
  t63630 = -26.977500000000003*t63629;
  t63639 = -0.325*t63638;
  t63640 = t63369 + t63631 + t63633 + t63634 + t63639;
  t63642 = -6.1312500000000005*t63640;
  t63651 = 0.325*t63649;
  t63653 = t63585 + t63643 + t63644 + t63645 + t63651;
  t63655 = -6.1312500000000005*t63653;
  t63670 = -0.325*t63669;
  t63674 = t63561 + t63657 + t63660 + t63661 + t63670;
  t63676 = -6.1312500000000005*t63674;
  t63677 = -0.575*t59439*t63638;
  t63685 = -0.575*t57006*t63683;
  t63686 = t59352*t63638;
  t63687 = -1.*t57006*t63683;
  t63688 = t63686 + t63687;
  t63689 = -0.575*t63688;
  t63691 = t63369 + t63631 + t63633 + t63634 + t63677 + t63685 + t63689;
  t63692 = -1.9620000000000002*t63691;
  t63693 = 0.075*t59648*t63649;
  t63697 = 0.075*t59622*t63696;
  t63698 = t59639*t63649;
  t63699 = -1.*t59622*t63696;
  t63701 = t63698 + t63699;
  t63702 = 0.075*t63701;
  t63703 = t63585 + t63643 + t63644 + t63645 + t63693 + t63697 + t63702;
  t63705 = -1.9620000000000002*t63703;
  t63706 = -0.575*t60180*t63669;
  t63710 = -0.575*t59714*t63709;
  t63711 = t60110*t63669;
  t63712 = -1.*t59714*t63709;
  t63713 = t63711 + t63712;
  t63714 = -0.575*t63713;
  t63715 = t63561 + t63657 + t63660 + t63661 + t63706 + t63710 + t63714;
  t63717 = -1.9620000000000002*t63715;
  t63827 = 0.325*t63779;
  t63867 = t63627 + t63726 + t63730 + t63732 + t63827;
  t63903 = -6.1312500000000005*t63867;
  t63924 = 0.075*t60713*t63779;
  t63932 = 0.075*t63931*t60938;
  t63933 = t60710*t63779;
  t63934 = -1.*t63931*t60938;
  t63935 = t63933 + t63934;
  t63936 = 0.075*t63935;
  t63938 = t63627 + t63726 + t63730 + t63732 + t63924 + t63932 + t63936;
  t63939 = -1.9620000000000002*t63938;
  t63940 = t63533 + t63583 + t63622 + t63630 + t63642 + t63655 + t63676 + t63692 + t63705 + t63717 + t63903 + t63939;
  t65445 = 0.1575*t12260*t5343*t5552*t5632;
  t65447 = t65444 + t65445 + t65446;
  t65448 = -26.977500000000003*t65447;
  t65450 = -0.1575*t38799*t5343*t5552*t5632;
  t65453 = t65449 + t65450 + t65446;
  t65454 = -26.977500000000003*t65453;
  t65458 = -0.1575*t38606*t5343*t5552*t5632;
  t65461 = t65456 + t65458 + t65459;
  t65462 = -26.977500000000003*t65461;
  t65465 = 0.1575*t5343*t5552*t5632*t60322;
  t65468 = t65464 + t65465 + t65459;
  t65469 = -26.977500000000003*t65468;
  t65476 = -0.325*t65475;
  t65477 = t65444 + t65470 + t65471 + t65472 + t65476;
  t65478 = -6.1312500000000005*t65477;
  t65485 = 0.325*t65484;
  t65486 = t65456 + t65479 + t65480 + t65481 + t65485;
  t65487 = -6.1312500000000005*t65486;
  t65495 = -0.325*t65494;
  t65496 = t65449 + t65489 + t65490 + t65491 + t65495;
  t65497 = -6.1312500000000005*t65496;
  t65692 = -0.575*t59439*t65475;
  t65696 = -0.575*t57006*t65695;
  t65697 = t59352*t65475;
  t65698 = -1.*t57006*t65695;
  t65699 = t65697 + t65698;
  t65700 = -0.575*t65699;
  t65701 = t65444 + t65470 + t65471 + t65472 + t65692 + t65696 + t65700;
  t65702 = -1.9620000000000002*t65701;
  t65703 = 0.075*t59648*t65484;
  t65708 = 0.075*t59622*t65707;
  t65709 = t59639*t65484;
  t65710 = -1.*t59622*t65707;
  t65712 = t65709 + t65710;
  t65716 = 0.075*t65712;
  t65718 = t65456 + t65479 + t65480 + t65481 + t65703 + t65708 + t65716;
  t65719 = -1.9620000000000002*t65718;
  t65720 = -0.575*t60180*t65494;
  t65725 = -0.575*t59714*t65724;
  t65727 = t60110*t65494;
  t65729 = -1.*t59714*t65724;
  t65730 = t65727 + t65729;
  t65731 = -0.575*t65730;
  t65732 = t65449 + t65489 + t65490 + t65491 + t65720 + t65725 + t65731;
  t65733 = -1.9620000000000002*t65732;
  t65742 = 0.325*t65739;
  t65743 = t65464 + t65734 + t65735 + t65736 + t65742;
  t65744 = -6.1312500000000005*t65743;
  t65745 = 0.075*t60713*t65739;
  t65750 = 0.075*t65748*t60938;
  t65751 = t60710*t65739;
  t65754 = -1.*t65748*t60938;
  t65756 = t65751 + t65754;
  t65757 = 0.075*t65756;
  t65758 = t65464 + t65734 + t65735 + t65736 + t65745 + t65750 + t65757;
  t65759 = -1.9620000000000002*t65758;
  t65760 = t65448 + t65454 + t65462 + t65469 + t65478 + t65487 + t65497 + t65702 + t65719 + t65733 + t65744 + t65759;
  t66533 = 0.2255*t12260*t12527;
  t66534 = -0.325*t5600*t40010*t12527;
  t66535 = -1.*t5600*t40010*t12527;
  t66539 = t40088 + t66535;
  t66560 = -1.*t39531*t5600*t12527;
  t66561 = t59253 + t66560;
  t66546 = -0.2255*t38606*t12527;
  t66547 = 0.325*t31621*t53937*t12527;
  t66548 = -1.*t31621*t53937*t12527;
  t66549 = t54066 + t66548;
  t66574 = -1.*t53652*t31621*t12527;
  t66575 = t59623 + t66574;
  t66553 = -0.2255*t38799*t12527;
  t66554 = -0.325*t38790*t54269*t12527;
  t66555 = -1.*t38790*t54269*t12527;
  t66556 = t54283 + t66555;
  t66588 = -1.*t54225*t38790*t12527;
  t66589 = t59986 + t66588;
  t66602 = 0.2255*t60322*t12527;
  t66603 = 0.325*t12527*t60389*t60657;
  t66604 = -1.*t12527*t60389*t60657;
  t66605 = t60673 + t66604;
  t66613 = -1.*t60608*t12527*t60389;
  t66614 = t66613 + t60915;
  t66638 = t5632*t10934;
  t66639 = t5343*t5638*t10953;
  t66640 = t66638 + t66639;
  t66637 = 0.325*t60608*t10972*t60389;
  t66641 = 0.325*t66640*t60657;
  t66642 = -1.*t60608*t10972*t60389;
  t66643 = -1.*t66640*t60657;
  t66644 = t66642 + t66643;
  t66650 = -1.*t60608*t66640;
  t66651 = t10972*t60389*t60657;
  t66652 = t66650 + t66651;
  t66663 = t60608*t66640;
  t66664 = -1.*t10972*t60389*t60657;
  t66665 = t66663 + t66664;
  t66688 = -0.325*t39531*t5600*t10972;
  t66690 = -0.325*t40010*t66640;
  t66691 = -1.*t39531*t5600*t10972;
  t66693 = -1.*t40010*t66640;
  t66694 = t66691 + t66693;
  t66698 = t5600*t40010*t10972;
  t66699 = -1.*t39531*t66640;
  t66700 = t66698 + t66699;
  t66711 = -1.*t5600*t40010*t10972;
  t66712 = t39531*t66640;
  t66713 = t66711 + t66712;
  t66748 = 0.325*t53652*t31621*t10972;
  t66752 = 0.325*t53937*t66640;
  t66753 = -1.*t53652*t31621*t10972;
  t66757 = -1.*t53937*t66640;
  t66761 = t66753 + t66757;
  t66766 = t31621*t53937*t10972;
  t66767 = -1.*t53652*t66640;
  t66770 = t66766 + t66767;
  t66788 = -1.*t31621*t53937*t10972;
  t66789 = t53652*t66640;
  t66790 = t66788 + t66789;
  t66824 = -0.325*t54225*t38790*t10972;
  t66825 = -0.325*t54269*t66640;
  t66828 = -1.*t54225*t38790*t10972;
  t66829 = -1.*t54269*t66640;
  t66830 = t66828 + t66829;
  t66835 = t38790*t54269*t10972;
  t66836 = -1.*t54225*t66640;
  t66931 = t66835 + t66836;
  t67017 = -1.*t38790*t54269*t10972;
  t67018 = t54225*t66640;
  t67020 = t67017 + t67018;
  t63946 = 0.1575*t63945;
  t63947 = t63941 + t63942 + t63946;
  t63948 = -26.977500000000003*t63947;
  t63951 = t63941 + t63942 + t63950;
  t63952 = -6.1312500000000005*t63951;
  t63957 = -0.325*t63956*t60657;
  t63959 = 0.075*t60713*t63956*t60657;
  t63962 = 0.075*t60608*t63956*t60938;
  t63965 = t60710*t63956*t60657;
  t63967 = -1.*t60608*t63956*t60938;
  t63968 = t63965 + t63967;
  t63970 = 0.075*t63968;
  t63972 = t63941 + t63942 + t63950 + t63957 + t63959 + t63962 + t63970;
  t63973 = -1.9620000000000002*t63972;
  t63976 = t63948 + t63952 + t63973;
  t65766 = 0.1575*t65765;
  t65767 = t65761 + t65762 + t65766;
  t65768 = -26.977500000000003*t65767;
  t65770 = t65761 + t65762 + t65769;
  t65771 = -6.1312500000000005*t65770;
  t65775 = -0.325*t65774*t60657;
  t65777 = 0.075*t60713*t65774*t60657;
  t65778 = 0.075*t60608*t65774*t60938;
  t65779 = t60710*t65774*t60657;
  t65780 = -1.*t60608*t65774*t60938;
  t65784 = t65779 + t65780;
  t65803 = 0.075*t65784;
  t65942 = t65761 + t65762 + t65769 + t65775 + t65777 + t65778 + t65803;
  t65943 = -1.9620000000000002*t65942;
  t65944 = t65768 + t65771 + t65943;
  t66625 = 0.41692500000000005*t10972*t60389;
  t66626 = -0.068*t10972*t60389;
  t66627 = 0.325*t60322*t10972*t60657;
  t66628 = -0.075*t60322*t60713*t10972*t60657;
  t66629 = -0.075*t60322*t60608*t10972*t60938;
  t66630 = -1.*t60322*t60710*t10972*t60657;
  t66631 = t60322*t60608*t10972*t60938;
  t66632 = t66630 + t66631;
  t66633 = 0.075*t66632;
  t66634 = t66626 + t66627 + t66628 + t66629 + t66633;
  t66635 = -1.9620000000000002*t66634;
  t66636 = 0. + t66625 + t66635;
  t67036 = 0.1575*t60322*t66640;
  t67040 = -1.*t60322*t66640;
  t67042 = t67040 + t60554;
  t67048 = 0.2255*t67042;
  t67051 = t66640*t60389;
  t67053 = t60637 + t67051;
  t63987 = 0.325*t63986;
  t63988 = t63977 + t63983 + t63987;
  t63989 = -6.1312500000000005*t63988;
  t63990 = 0.075*t60713*t63986;
  t63994 = 0.075*t63993*t60938;
  t63995 = t60710*t63986;
  t63996 = -1.*t63993*t60938;
  t63997 = t63995 + t63996;
  t63998 = 0.075*t63997;
  t63999 = t63977 + t63983 + t63990 + t63994 + t63998;
  t64000 = -1.9620000000000002*t63999;
  t64001 = t63989 + t64000;
  t65950 = 0.325*t65949;
  t65951 = t65945 + t65946 + t65950;
  t65952 = -6.1312500000000005*t65951;
  t65953 = 0.075*t60713*t65949;
  t65966 = 0.075*t65957*t60938;
  t65968 = t60710*t65949;
  t65969 = -1.*t65957*t60938;
  t65971 = t65968 + t65969;
  t65972 = 0.075*t65971;
  t65973 = t65945 + t65946 + t65953 + t65966 + t65972;
  t65974 = -1.9620000000000002*t65973;
  t65975 = t65952 + t65974;
  t66645 = 0.325*t66644;
  t66646 = t66637 + t66641 + t66645;
  t66647 = -6.1312500000000005*t66646;
  t66649 = 0.075*t60713*t66644;
  t66653 = 0.075*t66652*t60938;
  t66654 = t60710*t66644;
  t66655 = -1.*t66652*t60938;
  t66656 = t66654 + t66655;
  t66657 = 0.075*t66656;
  t66658 = t66637 + t66641 + t66649 + t66653 + t66657;
  t66659 = -1.9620000000000002*t66658;
  t66660 = t66647 + t66659;
  t67069 = -0.325*t60608*t67042;
  t67070 = 0.075*t60608*t60713*t67042;
  t67071 = -0.075*t67042*t60657*t60938;
  t67073 = t60608*t60710*t67042;
  t67074 = t67042*t60657*t60938;
  t67077 = t67073 + t67074;
  t67078 = 0.075*t67077;
  t67079 = t67069 + t67070 + t67071 + t67078;
  t67080 = -1.9620000000000002*t67079;
  t67090 = -1.*t5343*t5632*t5638;
  t67091 = t10934*t10953;
  t67092 = t67090 + t67091;
  t67095 = t5343*t5552*t60322;
  t67096 = -1.*t66640*t60389;
  t67097 = t67095 + t67096;
  t67093 = 0.325*t60608*t67092;
  t67098 = 0.325*t67097*t60657;
  t67099 = -1.*t60608*t67092;
  t67100 = -1.*t67097*t60657;
  t67101 = t67099 + t67100;
  t67106 = -1.*t60608*t67097;
  t67210 = t67092*t60657;
  t67212 = t67106 + t67210;
  t67278 = t60608*t67097;
  t67279 = -1.*t67092*t60657;
  t67280 = t67278 + t67279;
  t64002 = 0.075*t60710*t63986;
  t64023 = 0.075*t64006*t60938;
  t64053 = -1.*t60710*t63986;
  t64115 = -1.*t64006*t60938;
  t64173 = t64053 + t64115;
  t64194 = 0.075*t64173;
  t64195 = t64002 + t64023 + t64194;
  t64196 = -1.9620000000000002*t64195;
  t65985 = 0.075*t60710*t65949;
  t65996 = 0.075*t65995*t60938;
  t65999 = -1.*t60710*t65949;
  t66001 = -1.*t65995*t60938;
  t66003 = t65999 + t66001;
  t66004 = 0.075*t66003;
  t66005 = t65985 + t65996 + t66004;
  t66006 = -1.9620000000000002*t66005;
  t66661 = 0.075*t60710*t66644;
  t66666 = 0.075*t66665*t60938;
  t66667 = -1.*t60710*t66644;
  t66668 = -1.*t66665*t60938;
  t66669 = t66667 + t66668;
  t66670 = 0.075*t66669;
  t66671 = t66661 + t66666 + t66670;
  t66673 = -1.9620000000000002*t66671;
  t67081 = 0.075*t60608*t60710*t67042;
  t67082 = 0.075*t67042*t60657*t60938;
  t67083 = -1.*t60608*t60710*t67042;
  t67084 = -1.*t67042*t60657*t60938;
  t67085 = t67083 + t67084;
  t67086 = 0.075*t67085;
  t67087 = t67081 + t67082 + t67086;
  t67088 = -1.9620000000000002*t67087;
  t67277 = 0.075*t60710*t67101;
  t67281 = 0.075*t67280*t60938;
  t67283 = -1.*t60710*t67101;
  t67284 = -1.*t67280*t60938;
  t67285 = t67283 + t67284;
  t67286 = 0.075*t67285;
  t67287 = t67277 + t67281 + t67286;
  t67289 = -1.9620000000000002*t67287;
  t67293 = t60608*t67092;
  t67295 = t67097*t60657;
  t67296 = t67293 + t67295;
  t64203 = 0.1575*t64201;
  t64204 = t64197 + t64198 + t64203;
  t64205 = -26.977500000000003*t64204;
  t64210 = t64197 + t64198 + t64209;
  t64211 = -6.1312500000000005*t64210;
  t64215 = 0.325*t40010*t64214;
  t64216 = -0.575*t59439*t40010*t64214;
  t64217 = -0.575*t39531*t57006*t64214;
  t64221 = t59352*t40010*t64214;
  t64225 = -1.*t39531*t57006*t64214;
  t64227 = t64221 + t64225;
  t64228 = -0.575*t64227;
  t64231 = t64197 + t64198 + t64215 + t64216 + t64217 + t64209 + t64228;
  t64237 = -1.9620000000000002*t64231;
  t64243 = t64205 + t64211 + t64237;
  t66020 = 0.1575*t66019;
  t66021 = t66008 + t66012 + t66020;
  t66022 = -26.977500000000003*t66021;
  t66024 = t66008 + t66012 + t66023;
  t66025 = -6.1312500000000005*t66024;
  t66139 = 0.325*t40010*t66031;
  t66146 = -0.575*t59439*t40010*t66031;
  t66147 = -0.575*t39531*t57006*t66031;
  t66148 = t59352*t40010*t66031;
  t66150 = -1.*t39531*t57006*t66031;
  t66151 = t66148 + t66150;
  t66152 = -0.575*t66151;
  t66153 = t66008 + t66012 + t66139 + t66146 + t66147 + t66023 + t66152;
  t66155 = -1.9620000000000002*t66153;
  t66156 = t66022 + t66025 + t66155;
  t66674 = 0.41692500000000005*t5600*t10972;
  t66676 = -0.068*t5600*t10972;
  t66677 = -0.325*t12260*t40010*t10972;
  t66678 = 0.575*t12260*t59439*t40010*t10972;
  t66679 = 0.575*t12260*t39531*t57006*t10972;
  t66680 = -1.*t12260*t59352*t40010*t10972;
  t66681 = t12260*t39531*t57006*t10972;
  t66682 = t66680 + t66681;
  t66683 = -0.575*t66682;
  t66684 = t66676 + t66677 + t66678 + t66679 + t66683;
  t66685 = -1.9620000000000002*t66684;
  t66687 = 0. + t66674 + t66685;
  t67309 = 0.1575*t12260*t66640;
  t67310 = -1.*t12260*t66640;
  t67311 = t12953 + t67310;
  t67316 = 0.2255*t67311;
  t67319 = t5600*t66640;
  t67322 = t40012 + t67319;
  t64253 = -0.325*t64252;
  t64255 = t64245 + t64246 + t64253;
  t64256 = -6.1312500000000005*t64255;
  t64257 = -0.575*t59439*t64252;
  t64262 = -0.575*t57006*t64261;
  t64263 = t59352*t64252;
  t64264 = -1.*t57006*t64261;
  t64265 = t64263 + t64264;
  t64267 = -0.575*t64265;
  t64268 = t64245 + t64246 + t64257 + t64262 + t64267;
  t64269 = -1.9620000000000002*t64268;
  t64270 = t64256 + t64269;
  t66164 = -0.325*t66161;
  t66166 = t66157 + t66158 + t66164;
  t66171 = -6.1312500000000005*t66166;
  t66172 = -0.575*t59439*t66161;
  t66182 = -0.575*t57006*t66179;
  t66183 = t59352*t66161;
  t66184 = -1.*t57006*t66179;
  t66185 = t66183 + t66184;
  t66186 = -0.575*t66185;
  t66195 = t66157 + t66158 + t66172 + t66182 + t66186;
  t66199 = -1.9620000000000002*t66195;
  t66201 = t66171 + t66199;
  t66695 = -0.325*t66694;
  t66696 = t66688 + t66690 + t66695;
  t66697 = -6.1312500000000005*t66696;
  t66701 = -0.575*t57006*t66700;
  t66702 = -0.575*t59439*t66694;
  t66703 = -1.*t57006*t66700;
  t66704 = t59352*t66694;
  t66705 = t66703 + t66704;
  t66706 = -0.575*t66705;
  t66708 = t66688 + t66690 + t66701 + t66702 + t66706;
  t66709 = -1.9620000000000002*t66708;
  t66710 = t66697 + t66709;
  t67338 = 0.325*t39531*t67311;
  t67339 = -0.575*t39531*t59439*t67311;
  t67340 = 0.575*t40010*t57006*t67311;
  t67341 = t39531*t59352*t67311;
  t67343 = t40010*t57006*t67311;
  t67344 = t67341 + t67343;
  t67345 = -0.575*t67344;
  t67346 = t67338 + t67339 + t67340 + t67345;
  t67347 = -1.9620000000000002*t67346;
  t67360 = t12260*t5343*t5552;
  t67361 = -1.*t5600*t66640;
  t67362 = t67360 + t67361;
  t67359 = -0.325*t39531*t67092;
  t67363 = -0.325*t40010*t67362;
  t67364 = -1.*t39531*t67092;
  t67413 = -1.*t40010*t67362;
  t67450 = t67364 + t67413;
  t67513 = t40010*t67092;
  t67514 = -1.*t39531*t67362;
  t67515 = t67513 + t67514;
  t67536 = -1.*t40010*t67092;
  t67538 = t39531*t67362;
  t67539 = t67536 + t67538;
  t64271 = -0.575*t59352*t64252;
  t64275 = -0.575*t57006*t64274;
  t64276 = -1.*t59352*t64252;
  t64277 = -1.*t57006*t64274;
  t64278 = t64276 + t64277;
  t64279 = -0.575*t64278;
  t64280 = t64271 + t64275 + t64279;
  t64281 = -1.9620000000000002*t64280;
  t66202 = -0.575*t59352*t66161;
  t66213 = -0.575*t57006*t66206;
  t66214 = -1.*t59352*t66161;
  t66215 = -1.*t57006*t66206;
  t66218 = t66214 + t66215;
  t66219 = -0.575*t66218;
  t66220 = t66202 + t66213 + t66219;
  t66223 = -1.9620000000000002*t66220;
  t66714 = -0.575*t57006*t66713;
  t66715 = -0.575*t59352*t66694;
  t66716 = -1.*t57006*t66713;
  t66717 = -1.*t59352*t66694;
  t66718 = t66716 + t66717;
  t66719 = -0.575*t66718;
  t66721 = t66714 + t66715 + t66719;
  t66722 = -1.9620000000000002*t66721;
  t67348 = -0.575*t39531*t59352*t67311;
  t67349 = -0.575*t40010*t57006*t67311;
  t67351 = -1.*t39531*t59352*t67311;
  t67352 = -1.*t40010*t57006*t67311;
  t67353 = t67351 + t67352;
  t67354 = -0.575*t67353;
  t67355 = t67348 + t67349 + t67354;
  t67356 = -1.9620000000000002*t67355;
  t67542 = -0.575*t57006*t67539;
  t67543 = -0.575*t59352*t67450;
  t67544 = -1.*t57006*t67539;
  t67545 = -1.*t59352*t67450;
  t67546 = t67544 + t67545;
  t67555 = -0.575*t67546;
  t67556 = t67542 + t67543 + t67555;
  t67559 = -1.9620000000000002*t67556;
  t67567 = t39531*t67092;
  t67568 = t40010*t67362;
  t67570 = t67567 + t67568;
  t64496 = t64282 + t64311 + t64495;
  t64497 = -6.1312500000000005*t64496;
  t64498 = -0.1575*t64494;
  t64499 = t64282 + t64311 + t64498;
  t64500 = -26.977500000000003*t64499;
  t64505 = -0.325*t53937*t64503;
  t64506 = 0.075*t59648*t53937*t64503;
  t64507 = 0.075*t53652*t59622*t64503;
  t64508 = t59639*t53937*t64503;
  t64509 = -1.*t53652*t59622*t64503;
  t64510 = t64508 + t64509;
  t64511 = 0.075*t64510;
  t64513 = t64282 + t64311 + t64505 + t64506 + t64507 + t64495 + t64511;
  t64514 = -1.9620000000000002*t64513;
  t64516 = t64497 + t64500 + t64514;
  t66233 = t66225 + t66226 + t66232;
  t66234 = -6.1312500000000005*t66233;
  t66237 = -0.1575*t66231;
  t66238 = t66225 + t66226 + t66237;
  t66239 = -26.977500000000003*t66238;
  t66243 = -0.325*t53937*t66242;
  t66244 = 0.075*t59648*t53937*t66242;
  t66245 = 0.075*t53652*t59622*t66242;
  t66246 = t59639*t53937*t66242;
  t66247 = -1.*t53652*t59622*t66242;
  t66248 = t66246 + t66247;
  t66249 = 0.075*t66248;
  t66250 = t66225 + t66226 + t66243 + t66244 + t66245 + t66232 + t66249;
  t66251 = -1.9620000000000002*t66250;
  t66252 = t66234 + t66239 + t66251;
  t66723 = -0.41692500000000005*t31621*t10972;
  t66724 = 0.068*t31621*t10972;
  t66725 = 0.325*t38606*t53937*t10972;
  t66726 = -0.075*t38606*t59648*t53937*t10972;
  t66727 = -0.075*t38606*t53652*t59622*t10972;
  t66728 = -1.*t38606*t59639*t53937*t10972;
  t66731 = t38606*t53652*t59622*t10972;
  t66735 = t66728 + t66731;
  t66740 = 0.075*t66735;
  t66745 = t66724 + t66725 + t66726 + t66727 + t66740;
  t66746 = -1.9620000000000002*t66745;
  t66747 = 0. + t66723 + t66746;
  t67585 = -0.1575*t38606*t66640;
  t67590 = -1.*t38606*t66640;
  t67591 = t38623 + t67590;
  t67592 = -0.2255*t67591;
  t67599 = t31621*t66640;
  t67600 = t53945 + t67599;
  t64529 = 0.325*t64528;
  t64532 = t64517 + t64520 + t64529;
  t64534 = -6.1312500000000005*t64532;
  t64535 = 0.075*t59648*t64528;
  t64543 = 0.075*t59622*t64542;
  t64544 = t59639*t64528;
  t64545 = -1.*t59622*t64542;
  t64546 = t64544 + t64545;
  t64547 = 0.075*t64546;
  t64548 = t64517 + t64520 + t64535 + t64543 + t64547;
  t64549 = -1.9620000000000002*t64548;
  t64550 = t64534 + t64549;
  t66348 = 0.325*t66347;
  t66349 = t66253 + t66344 + t66348;
  t66350 = -6.1312500000000005*t66349;
  t66351 = 0.075*t59648*t66347;
  t66355 = 0.075*t59622*t66354;
  t66356 = t59639*t66347;
  t66357 = -1.*t59622*t66354;
  t66358 = t66356 + t66357;
  t66359 = 0.075*t66358;
  t66360 = t66253 + t66344 + t66351 + t66355 + t66359;
  t66361 = -1.9620000000000002*t66360;
  t66363 = t66350 + t66361;
  t66763 = 0.325*t66761;
  t66764 = t66748 + t66752 + t66763;
  t66765 = -6.1312500000000005*t66764;
  t66772 = 0.075*t59622*t66770;
  t66775 = 0.075*t59648*t66761;
  t66777 = -1.*t59622*t66770;
  t66778 = t59639*t66761;
  t66779 = t66777 + t66778;
  t66780 = 0.075*t66779;
  t66781 = t66748 + t66752 + t66772 + t66775 + t66780;
  t66782 = -1.9620000000000002*t66781;
  t66783 = t66765 + t66782;
  t67691 = -0.325*t53652*t67591;
  t67692 = 0.075*t53652*t59648*t67591;
  t67693 = -0.075*t53937*t59622*t67591;
  t67694 = t53652*t59639*t67591;
  t67695 = t53937*t59622*t67591;
  t67696 = t67694 + t67695;
  t67697 = 0.075*t67696;
  t67701 = t67691 + t67692 + t67693 + t67697;
  t67703 = -1.9620000000000002*t67701;
  t67729 = t38606*t5343*t5552;
  t67732 = -1.*t31621*t66640;
  t67734 = t67729 + t67732;
  t67722 = 0.325*t53652*t67092;
  t67735 = 0.325*t53937*t67734;
  t67736 = -1.*t53652*t67092;
  t67738 = -1.*t53937*t67734;
  t67739 = t67736 + t67738;
  t67752 = t53937*t67092;
  t67753 = -1.*t53652*t67734;
  t67755 = t67752 + t67753;
  t67772 = -1.*t53937*t67092;
  t67773 = t53652*t67734;
  t67774 = t67772 + t67773;
  t64551 = 0.075*t59639*t64528;
  t64555 = 0.075*t59622*t64554;
  t64556 = -1.*t59639*t64528;
  t64557 = -1.*t59622*t64554;
  t64558 = t64556 + t64557;
  t64559 = 0.075*t64558;
  t64560 = t64551 + t64555 + t64559;
  t64561 = -1.9620000000000002*t64560;
  t66364 = 0.075*t59639*t66347;
  t66372 = 0.075*t59622*t66371;
  t66374 = -1.*t59639*t66347;
  t66375 = -1.*t59622*t66371;
  t66376 = t66374 + t66375;
  t66377 = 0.075*t66376;
  t66378 = t66364 + t66372 + t66377;
  t66379 = -1.9620000000000002*t66378;
  t66791 = 0.075*t59622*t66790;
  t66792 = 0.075*t59639*t66761;
  t66793 = -1.*t59622*t66790;
  t66796 = -1.*t59639*t66761;
  t66797 = t66793 + t66796;
  t66800 = 0.075*t66797;
  t66801 = t66791 + t66792 + t66800;
  t66802 = -1.9620000000000002*t66801;
  t67707 = 0.075*t53652*t59639*t67591;
  t67708 = 0.075*t53937*t59622*t67591;
  t67709 = -1.*t53652*t59639*t67591;
  t67711 = -1.*t53937*t59622*t67591;
  t67714 = t67709 + t67711;
  t67717 = 0.075*t67714;
  t67718 = t67707 + t67708 + t67717;
  t67719 = -1.9620000000000002*t67718;
  t67775 = 0.075*t59622*t67774;
  t67776 = 0.075*t59639*t67739;
  t67777 = -1.*t59622*t67774;
  t67779 = -1.*t59639*t67739;
  t67780 = t67777 + t67779;
  t67781 = 0.075*t67780;
  t67782 = t67775 + t67776 + t67781;
  t67783 = -1.9620000000000002*t67782;
  t67785 = t53652*t67092;
  t67786 = t53937*t67734;
  t67787 = t67785 + t67786;
  t64571 = t64562 + t64563 + t64567;
  t64579 = -6.1312500000000005*t64571;
  t64585 = -0.1575*t64566;
  t64599 = t64562 + t64563 + t64585;
  t64615 = -26.977500000000003*t64599;
  t64775 = 0.325*t54269*t64774;
  t64776 = -0.575*t60180*t54269*t64774;
  t64777 = -0.575*t54225*t59714*t64774;
  t64778 = t60110*t54269*t64774;
  t64779 = -1.*t54225*t59714*t64774;
  t64780 = t64778 + t64779;
  t64781 = -0.575*t64780;
  t64782 = t64562 + t64563 + t64775 + t64776 + t64777 + t64567 + t64781;
  t64783 = -1.9620000000000002*t64782;
  t64784 = t64579 + t64615 + t64783;
  t66397 = t66387 + t66388 + t66394;
  t66398 = -6.1312500000000005*t66397;
  t66399 = -0.1575*t66393;
  t66400 = t66387 + t66388 + t66399;
  t66401 = -26.977500000000003*t66400;
  t66406 = 0.325*t54269*t66405;
  t66407 = -0.575*t60180*t54269*t66405;
  t66408 = -0.575*t54225*t59714*t66405;
  t66409 = t60110*t54269*t66405;
  t66410 = -1.*t54225*t59714*t66405;
  t66411 = t66409 + t66410;
  t66412 = -0.575*t66411;
  t66413 = t66387 + t66388 + t66406 + t66407 + t66408 + t66394 + t66412;
  t66414 = -1.9620000000000002*t66413;
  t66415 = t66398 + t66401 + t66414;
  t66803 = -0.41692500000000005*t38790*t10972;
  t66804 = 0.068*t38790*t10972;
  t66805 = -0.325*t38799*t54269*t10972;
  t66809 = 0.575*t38799*t60180*t54269*t10972;
  t66810 = 0.575*t38799*t54225*t59714*t10972;
  t66815 = -1.*t38799*t60110*t54269*t10972;
  t66816 = t38799*t54225*t59714*t10972;
  t66817 = t66815 + t66816;
  t66820 = -0.575*t66817;
  t66821 = t66804 + t66805 + t66809 + t66810 + t66820;
  t66822 = -1.9620000000000002*t66821;
  t66823 = 0. + t66803 + t66822;
  t67891 = -0.1575*t38799*t66640;
  t67892 = -1.*t38799*t66640;
  t67893 = t39253 + t67892;
  t67894 = -0.2255*t67893;
  t67900 = t38790*t66640;
  t67902 = t54270 + t67900;
  t64790 = -0.325*t64789;
  t64792 = t64785 + t64786 + t64790;
  t64793 = -6.1312500000000005*t64792;
  t64794 = -0.575*t60180*t64789;
  t64799 = -0.575*t59714*t64797;
  t64800 = t60110*t64789;
  t64801 = -1.*t59714*t64797;
  t64804 = t64800 + t64801;
  t64807 = -0.575*t64804;
  t64809 = t64785 + t64786 + t64794 + t64799 + t64807;
  t64810 = -1.9620000000000002*t64809;
  t64813 = t64793 + t64810;
  t66473 = -0.325*t66472;
  t66474 = t66416 + t66417 + t66473;
  t66475 = -6.1312500000000005*t66474;
  t66476 = -0.575*t60180*t66472;
  t66480 = -0.575*t59714*t66479;
  t66481 = t60110*t66472;
  t66482 = -1.*t59714*t66479;
  t66483 = t66481 + t66482;
  t66484 = -0.575*t66483;
  t66485 = t66416 + t66417 + t66476 + t66480 + t66484;
  t66486 = -1.9620000000000002*t66485;
  t66491 = t66475 + t66486;
  t66831 = -0.325*t66830;
  t66832 = t66824 + t66825 + t66831;
  t66833 = -6.1312500000000005*t66832;
  t67008 = -0.575*t59714*t66931;
  t67009 = -0.575*t60180*t66830;
  t67010 = -1.*t59714*t66931;
  t67011 = t60110*t66830;
  t67012 = t67010 + t67011;
  t67013 = -0.575*t67012;
  t67014 = t66824 + t66825 + t67008 + t67009 + t67013;
  t67015 = -1.9620000000000002*t67014;
  t67016 = t66833 + t67015;
  t67918 = 0.325*t54225*t67893;
  t67919 = -0.575*t54225*t60180*t67893;
  t67928 = 0.575*t54269*t59714*t67893;
  t67929 = t54225*t60110*t67893;
  t67931 = t54269*t59714*t67893;
  t67932 = t67929 + t67931;
  t67933 = -0.575*t67932;
  t67934 = t67918 + t67919 + t67928 + t67933;
  t67937 = -1.9620000000000002*t67934;
  t67950 = t38799*t5343*t5552;
  t67952 = -1.*t38790*t66640;
  t67953 = t67950 + t67952;
  t67949 = -0.325*t54225*t67092;
  t67954 = -0.325*t54269*t67953;
  t67955 = -1.*t54225*t67092;
  t67956 = -1.*t54269*t67953;
  t67957 = t67955 + t67956;
  t68013 = t54269*t67092;
  t68014 = -1.*t54225*t67953;
  t68015 = t68013 + t68014;
  t68029 = -1.*t54269*t67092;
  t68030 = t54225*t67953;
  t68031 = t68029 + t68030;
  t64814 = -0.575*t60110*t64789;
  t64822 = -0.575*t59714*t64821;
  t64823 = -1.*t60110*t64789;
  t64824 = -1.*t59714*t64821;
  t64826 = t64823 + t64824;
  t64827 = -0.575*t64826;
  t64828 = t64814 + t64822 + t64827;
  t64829 = -1.9620000000000002*t64828;
  t66492 = -0.575*t60110*t66472;
  t66497 = -0.575*t59714*t66496;
  t66499 = -1.*t60110*t66472;
  t66502 = -1.*t59714*t66496;
  t66503 = t66499 + t66502;
  t66505 = -0.575*t66503;
  t66509 = t66492 + t66497 + t66505;
  t66510 = -1.9620000000000002*t66509;
  t67021 = -0.575*t59714*t67020;
  t67022 = -0.575*t60110*t66830;
  t67023 = -1.*t59714*t67020;
  t67024 = -1.*t60110*t66830;
  t67026 = t67023 + t67024;
  t67030 = -0.575*t67026;
  t67031 = t67021 + t67022 + t67030;
  t67032 = -1.9620000000000002*t67031;
  t67938 = -0.575*t54225*t60110*t67893;
  t67940 = -0.575*t54269*t59714*t67893;
  t67941 = -1.*t54225*t60110*t67893;
  t67942 = -1.*t54269*t59714*t67893;
  t67944 = t67941 + t67942;
  t67945 = -0.575*t67944;
  t67946 = t67938 + t67940 + t67945;
  t67947 = -1.9620000000000002*t67946;
  t68032 = -0.575*t59714*t68031;
  t68034 = -0.575*t60110*t67957;
  t68035 = -1.*t59714*t68031;
  t68037 = -1.*t60110*t67957;
  t68040 = t68035 + t68037;
  t68041 = -0.575*t68040;
  t68047 = t68032 + t68034 + t68041;
  t68048 = -1.9620000000000002*t68047;
  t68050 = t54225*t67092;
  t68051 = t54269*t67953;
  t68052 = t68050 + t68051;
  p_output1[0]=-26.977500000000003*(t31975 + t32971 + t38618 - 0.1575*t38739) - 26.977500000000003*(t11628 + t38798 + t39230 - 0.1575*t39478) - 6.1312500000000005*(t31975 + t38618 + t53924 + t53926 + t54062 + 0.325*t54096) - 6.1312500000000005*(t38798 + t39230 + t54255 + t54267 + t54278 - 0.325*t54299) - 26.977500000000003*(t11628 + t12936 + 0.1575*t29968 + t5614) - 6.1312500000000005*(t12936 + t39885 + t39997 + t40065 - 0.325*t40124 + t5614) - 1.9620000000000002*(t12936 + t39885 + t39997 + t40065 + t5614 - 0.575*t57006*t59316 - 0.575*(-1.*t57006*t59316 + t40124*t59352) - 0.575*t40124*t59439) - 1.9620000000000002*(t31975 + t38618 + t53924 + t53926 + t54062 + 0.075*t59622*t59626 + 0.075*(-1.*t59622*t59626 + t54096*t59639) + 0.075*t54096*t59648) - 1.9620000000000002*(t38798 + t39230 + t54255 + t54267 + t54278 - 0.575*t59714*t60065 - 0.575*(-1.*t59714*t60065 + t54299*t60110) - 0.575*t54299*t60180) - 26.977500000000003*(t32971 + t60374 + t60471 + 0.1575*t60582) - 6.1312500000000005*(t60374 + t60471 + t60616 + t60628 + t60669 + 0.325*t60686) - 1.9620000000000002*(t60374 + t60471 + t60616 + t60628 + t60669 + 0.075*t60686*t60713 + 0.075*t60922*t60938 + 0.075*(t60686*t60710 - 1.*t60922*t60938));
  p_output1[1]=t63364;
  p_output1[2]=t63940;
  p_output1[3]=t63976;
  p_output1[4]=t64001;
  p_output1[5]=t64196;
  p_output1[6]=t64243;
  p_output1[7]=t64270;
  p_output1[8]=t64281;
  p_output1[9]=t64516;
  p_output1[10]=t64550;
  p_output1[11]=t64561;
  p_output1[12]=t64784;
  p_output1[13]=t64813;
  p_output1[14]=t64829;
  p_output1[15]=t63364;
  p_output1[16]=-26.977500000000003*(t5614 + t64830 + t64831 + 0.1575*t64833) - 26.977500000000003*(t31975 + t64837 + t64838 - 0.1575*t64841) - 26.977500000000003*(t38798 + t64830 + t64845 - 0.1575*t64847) - 6.1312500000000005*(t5614 + t64831 + t65029 + t65065 + t65068 - 0.325*t65071) - 6.1312500000000005*(t31975 + t64838 + t65076 + t65079 + t65100 + 0.325*t65122) - 6.1312500000000005*(t38798 + t64845 + t65132 + t65134 + t65143 - 0.325*t65146) - 1.9620000000000002*(t5614 + t64831 + t65029 + t65065 + t65068 - 0.575*t59439*t65071 - 0.575*t57006*t65156 - 0.575*(t59352*t65071 - 1.*t57006*t65156)) - 1.9620000000000002*(t31975 + t64838 + t65076 + t65079 + t65100 + 0.075*t59648*t65122 + 0.075*t59622*t65172 + 0.075*(t59639*t65122 - 1.*t59622*t65172)) - 1.9620000000000002*(t38798 + t64845 + t65132 + t65134 + t65143 - 0.575*t60180*t65146 - 0.575*t59714*t65193 - 0.575*(t60110*t65146 - 1.*t59714*t65193)) - 26.977500000000003*(t60471 + t64837 + t65204 + 0.1575*t65405) - 6.1312500000000005*(t60471 + t65204 + t65409 + t65410 + t65413 + 0.325*t65417) - 1.9620000000000002*(t60471 + t65204 + t65409 + t65410 + t65413 + 0.075*t60713*t65417 + 0.075*t60938*t65427 + 0.075*(t60710*t65417 - 1.*t60938*t65427));
  p_output1[17]=t65760;
  p_output1[18]=t65944;
  p_output1[19]=t65975;
  p_output1[20]=t66006;
  p_output1[21]=t66156;
  p_output1[22]=t66201;
  p_output1[23]=t66223;
  p_output1[24]=t66252;
  p_output1[25]=t66363;
  p_output1[26]=t66379;
  p_output1[27]=t66415;
  p_output1[28]=t66491;
  p_output1[29]=t66510;
  p_output1[30]=t63940;
  p_output1[31]=t65760;
  p_output1[32]=-26.977500000000003*(t11628 + 0.1575*t12260*t12527 + t12936) - 26.977500000000003*(t32971 - 0.1575*t12527*t38606 + t38618) - 26.977500000000003*(t11628 - 0.1575*t12527*t38799 + t39230) - 26.977500000000003*(t32971 + 0.1575*t12527*t60322 + t60374) - 6.1312500000000005*(t12936 + t39885 + t66533 + t66534 - 0.325*t66539) - 6.1312500000000005*(t38618 + t53924 + t66546 + t66547 + 0.325*t66549) - 6.1312500000000005*(t39230 + t54255 + t66553 + t66554 - 0.325*t66556) - 1.9620000000000002*(t12936 + t39885 + t66533 + t66534 - 0.575*t59439*t66539 - 0.575*t57006*t66561 - 0.575*(t59352*t66539 - 1.*t57006*t66561)) - 1.9620000000000002*(t38618 + t53924 + t66546 + t66547 + 0.075*t59648*t66549 + 0.075*t59622*t66575 + 0.075*(t59639*t66549 - 1.*t59622*t66575)) - 1.9620000000000002*(t39230 + t54255 + t66553 + t66554 - 0.575*t60180*t66556 - 0.575*t59714*t66589 - 0.575*(t60110*t66556 - 1.*t59714*t66589)) - 6.1312500000000005*(t60374 + t60616 + t66602 + t66603 + 0.325*t66605) - 1.9620000000000002*(t60374 + t60616 + t66602 + t66603 + 0.075*t60713*t66605 + 0.075*t60938*t66614 + 0.075*(t60710*t66605 - 1.*t60938*t66614));
  p_output1[33]=t66636;
  p_output1[34]=t66660;
  p_output1[35]=t66673;
  p_output1[36]=t66687;
  p_output1[37]=t66710;
  p_output1[38]=t66722;
  p_output1[39]=t66747;
  p_output1[40]=t66783;
  p_output1[41]=t66802;
  p_output1[42]=t66823;
  p_output1[43]=t67016;
  p_output1[44]=t67032;
  p_output1[45]=t63976;
  p_output1[46]=t65944;
  p_output1[47]=t66636;
  p_output1[48]=-26.977500000000003*(t60471 + t67036 + 0.1575*t67042) - 6.1312500000000005*(t60471 + t67036 + t67048) - 1.9620000000000002*(t60471 + t67036 + t67048 - 0.325*t60657*t67053 + 0.075*t60657*t60713*t67053 + 0.075*t60608*t60938*t67053 + 0.075*(t60657*t60710*t67053 - 1.*t60608*t60938*t67053));
  p_output1[49]=t67080;
  p_output1[50]=t67088;
  p_output1[51]=t64001;
  p_output1[52]=t65975;
  p_output1[53]=t66660;
  p_output1[54]=0. + t67080;
  p_output1[55]=-6.1312500000000005*(t67093 + t67098 + 0.325*t67101) - 1.9620000000000002*(t67093 + t67098 + 0.075*t60713*t67101 + 0.075*t60938*t67212 + 0.075*(t60710*t67101 - 1.*t60938*t67212));
  p_output1[56]=t67289;
  p_output1[57]=t64196;
  p_output1[58]=t66006;
  p_output1[59]=t66673;
  p_output1[60]=t67088;
  p_output1[61]=t67289;
  p_output1[62]=-1.9620000000000002*(-0.075*t60938*t67280 + 0.075*t60710*t67296 + 0.075*(t60938*t67280 - 1.*t60710*t67296));
  p_output1[63]=t64243;
  p_output1[64]=t66156;
  p_output1[65]=t66687;
  p_output1[66]=-26.977500000000003*(t5614 + t67309 + 0.1575*t67311) - 6.1312500000000005*(t5614 + t67309 + t67316) - 1.9620000000000002*(t5614 + t67309 + t67316 + 0.325*t40010*t67322 - 0.575*t39531*t57006*t67322 - 0.575*t40010*t59439*t67322 - 0.575*(-1.*t39531*t57006*t67322 + t40010*t59352*t67322));
  p_output1[67]=t67347;
  p_output1[68]=t67356;
  p_output1[69]=t64270;
  p_output1[70]=t66201;
  p_output1[71]=t66710;
  p_output1[72]=0. + t67347;
  p_output1[73]=-6.1312500000000005*(t67359 + t67363 - 0.325*t67450) - 1.9620000000000002*(t67359 + t67363 - 0.575*t59439*t67450 - 0.575*t57006*t67515 - 0.575*(t59352*t67450 - 1.*t57006*t67515));
  p_output1[74]=t67559;
  p_output1[75]=t64281;
  p_output1[76]=t66223;
  p_output1[77]=t66722;
  p_output1[78]=t67356;
  p_output1[79]=t67559;
  p_output1[80]=-1.9620000000000002*(0.575*t57006*t67539 - 0.575*t59352*t67570 - 0.575*(t57006*t67539 - 1.*t59352*t67570));
  p_output1[81]=t64516;
  p_output1[82]=t66252;
  p_output1[83]=t66747;
  p_output1[84]=-26.977500000000003*(t31975 + t67585 - 0.1575*t67591) - 6.1312500000000005*(t31975 + t67585 + t67592) - 1.9620000000000002*(t31975 + t67585 + t67592 - 0.325*t53937*t67600 + 0.075*t53652*t59622*t67600 + 0.075*t53937*t59648*t67600 + 0.075*(-1.*t53652*t59622*t67600 + t53937*t59639*t67600));
  p_output1[85]=t67703;
  p_output1[86]=t67719;
  p_output1[87]=t64550;
  p_output1[88]=t66363;
  p_output1[89]=t66783;
  p_output1[90]=0. + t67703;
  p_output1[91]=-6.1312500000000005*(t67722 + t67735 + 0.325*t67739) - 1.9620000000000002*(t67722 + t67735 + 0.075*t59648*t67739 + 0.075*t59622*t67755 + 0.075*(t59639*t67739 - 1.*t59622*t67755));
  p_output1[92]=t67783;
  p_output1[93]=t64561;
  p_output1[94]=t66379;
  p_output1[95]=t66802;
  p_output1[96]=t67719;
  p_output1[97]=t67783;
  p_output1[98]=-1.9620000000000002*(-0.075*t59622*t67774 + 0.075*t59639*t67787 + 0.075*(t59622*t67774 - 1.*t59639*t67787));
  p_output1[99]=t64784;
  p_output1[100]=t66415;
  p_output1[101]=t66823;
  p_output1[102]=-26.977500000000003*(t38798 + t67891 - 0.1575*t67893) - 6.1312500000000005*(t38798 + t67891 + t67894) - 1.9620000000000002*(t38798 + t67891 + t67894 + 0.325*t54269*t67902 - 0.575*t54225*t59714*t67902 - 0.575*t54269*t60180*t67902 - 0.575*(-1.*t54225*t59714*t67902 + t54269*t60110*t67902));
  p_output1[103]=t67937;
  p_output1[104]=t67947;
  p_output1[105]=t64813;
  p_output1[106]=t66491;
  p_output1[107]=t67016;
  p_output1[108]=0. + t67937;
  p_output1[109]=-6.1312500000000005*(t67949 + t67954 - 0.325*t67957) - 1.9620000000000002*(t67949 + t67954 - 0.575*t60180*t67957 - 0.575*t59714*t68015 - 0.575*(t60110*t67957 - 1.*t59714*t68015));
  p_output1[110]=t68048;
  p_output1[111]=t64829;
  p_output1[112]=t66510;
  p_output1[113]=t67032;
  p_output1[114]=t67947;
  p_output1[115]=t68048;
  p_output1[116]=-1.9620000000000002*(0.575*t59714*t68031 - 0.575*t60110*t68052 - 0.575*(t59714*t68031 - 1.*t60110*t68052));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 117, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Ge_vec_vision60_DiagonalStance.hh"

namespace SymFunction
{

void J_Ge_vec_vision60_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
