/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:57:12 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t61;
  double t51;
  double t55;
  double t64;
  double t60;
  double t65;
  double t66;
  double t50;
  double t71;
  double t81;
  double t73;
  double t74;
  double t75;
  double t82;
  double t69;
  double t42;
  double t400;
  double t466;
  double t626;
  double t120;
  double t121;
  double t342;
  double t345;
  double t355;
  double t367;
  double t79;
  double t86;
  double t88;
  double t1365;
  double t1353;
  double t1355;
  double t1369;
  double t1356;
  double t1370;
  double t1371;
  double t1382;
  double t1374;
  double t1378;
  double t1379;
  double t1341;
  double t1472;
  double t1476;
  double t1479;
  double t1450;
  double t1458;
  double t1459;
  double t1460;
  double t1462;
  double t1463;
  double t1381;
  double t1383;
  double t1397;
  double t68;
  double t90;
  double t95;
  double t1862;
  double t1960;
  double t96;
  double t103;
  double t106;
  double t1108;
  double t1125;
  double t1132;
  double t842;
  double t843;
  double t868;
  double t1041;
  double t1043;
  double t1054;
  double t2235;
  double t2262;
  double t2267;
  double t1134;
  double t1135;
  double t1146;
  double t1170;
  double t1189;
  double t1234;
  double t1867;
  double t1913;
  double t1928;
  double t1373;
  double t1403;
  double t1408;
  double t1409;
  double t1419;
  double t1422;
  double t1655;
  double t1667;
  double t1668;
  double t1486;
  double t1490;
  double t1509;
  double t1601;
  double t1602;
  double t1621;
  double t7469;
  double t7470;
  double t7471;
  double t1703;
  double t1706;
  double t1707;
  double t1837;
  double t1839;
  double t1842;
  double t7144;
  double t7146;
  double t7147;
  double t6973;
  double t6982;
  double t7139;
  double t2090;
  double t2091;
  double t2125;
  double t2174;
  double t2179;
  double t2180;
  double t2360;
  double t2410;
  double t2450;
  double t2669;
  double t2683;
  double t2767;
  double t2958;
  double t3092;
  double t3217;
  double t4818;
  double t4819;
  double t4873;
  double t2270;
  double t2280;
  double t2286;
  double t5559;
  double t5574;
  double t5594;
  double t5655;
  double t6451;
  double t6461;
  double t6535;
  double t6549;
  double t6594;
  double t6818;
  double t6840;
  double t6841;
  double t9351;
  double t9366;
  double t9383;
  double t7231;
  double t7243;
  double t7249;
  double t7399;
  double t7418;
  double t7426;
  double t7509;
  double t7514;
  double t7519;
  double t7524;
  double t7526;
  double t7531;
  double t7615;
  double t7621;
  double t7625;
  double t7715;
  double t7716;
  double t7717;
  double t7482;
  double t7484;
  double t7486;
  double t8309;
  double t8337;
  double t8342;
  double t8590;
  double t8664;
  double t8745;
  double t9286;
  double t9314;
  double t9324;
  double t9327;
  double t9331;
  double t9341;
  double t114;
  double t383;
  double t384;
  double t11666;
  double t11699;
  double t11723;
  double t11783;
  double t11813;
  double t11905;
  double t11908;
  double t11910;
  double t11911;
  double t11649;
  double t11779;
  double t11940;
  double t11950;
  double t11638;
  double t11971;
  double t11978;
  double t11984;
  double t11986;
  double t12014;
  double t12023;
  double t12055;
  double t12057;
  double t12058;
  double t12059;
  double t12064;
  double t12081;
  double t12092;
  double t12101;
  double t12124;
  double t12148;
  double t12213;
  double t12328;
  double t12331;
  double t12349;
  double t12317;
  double t12324;
  double t12326;
  double t12270;
  double t12273;
  double t12286;
  double t11981;
  double t12227;
  double t12253;
  double t12652;
  double t12681;
  double t12740;
  double t14414;
  double t14438;
  double t14752;
  double t12835;
  double t12870;
  double t12892;
  double t12898;
  double t13514;
  double t13547;
  double t13620;
  double t13685;
  double t1150;
  double t1161;
  double t1162;
  double t17041;
  double t17085;
  double t17099;
  double t17381;
  double t17425;
  double t1085;
  double t1093;
  double t1106;
  double t17753;
  double t17839;
  double t17844;
  double t19055;
  double t19058;
  double t19361;
  double t1168;
  double t1326;
  double t1332;
  double t19504;
  double t19505;
  double t19507;
  double t19669;
  double t19684;
  double t19685;
  double t19694;
  double t19712;
  double t19713;
  double t19506;
  double t19687;
  double t19689;
  double t19692;
  double t19715;
  double t19721;
  double t19756;
  double t19757;
  double t19759;
  double t1335;
  double t1336;
  double t1340;
  double t19842;
  double t19843;
  double t19844;
  double t19841;
  double t19846;
  double t19851;
  double t19879;
  double t19893;
  double t19944;
  double t19946;
  double t19947;
  double t19852;
  double t19907;
  double t19914;
  double t19943;
  double t19958;
  double t19967;
  double t19981;
  double t19991;
  double t19992;
  double t20023;
  double t20090;
  double t20097;
  double t21979;
  double t26338;
  double t26666;
  double t26673;
  double t27061;
  double t109;
  double t111;
  double t112;
  double t631;
  double t928;
  double t1015;
  double t34588;
  double t34589;
  double t34592;
  double t36923;
  double t36935;
  double t36944;
  double t36968;
  double t37885;
  double t17040;
  double t1446;
  double t1465;
  double t1469;
  double t38746;
  double t38747;
  double t38748;
  double t38750;
  double t38751;
  double t38754;
  double t38755;
  double t38756;
  double t38757;
  double t38744;
  double t38749;
  double t38758;
  double t38759;
  double t38743;
  double t38760;
  double t38761;
  double t38763;
  double t38764;
  double t38765;
  double t38766;
  double t38767;
  double t38768;
  double t38769;
  double t38770;
  double t38771;
  double t38773;
  double t38774;
  double t38775;
  double t38777;
  double t38778;
  double t38779;
  double t38794;
  double t38795;
  double t38796;
  double t38791;
  double t38792;
  double t38793;
  double t38784;
  double t38785;
  double t38786;
  double t38762;
  double t38780;
  double t38781;
  double t38808;
  double t38809;
  double t38810;
  double t38874;
  double t38879;
  double t38880;
  double t38821;
  double t38822;
  double t38823;
  double t38832;
  double t38860;
  double t38861;
  double t38862;
  double t38863;
  double t1727;
  double t1736;
  double t1771;
  double t38952;
  double t38953;
  double t38955;
  double t38957;
  double t38960;
  double t1642;
  double t1646;
  double t1647;
  double t38962;
  double t38993;
  double t38994;
  double t39002;
  double t39004;
  double t39007;
  double t1772;
  double t1852;
  double t1856;
  double t39058;
  double t39059;
  double t39063;
  double t39064;
  double t39073;
  double t39074;
  double t39090;
  double t39091;
  double t39092;
  double t39062;
  double t39075;
  double t39078;
  double t39083;
  double t39094;
  double t39095;
  double t39098;
  double t39099;
  double t39100;
  double t1857;
  double t1858;
  double t1860;
  double t39136;
  double t39138;
  double t39141;
  double t39133;
  double t39142;
  double t39143;
  double t39159;
  double t39164;
  double t39195;
  double t39199;
  double t39200;
  double t39157;
  double t39165;
  double t39189;
  double t39193;
  double t39202;
  double t39205;
  double t39221;
  double t39224;
  double t39228;
  double t39261;
  double t39263;
  double t39264;
  double t39291;
  double t39302;
  double t39303;
  double t39305;
  double t39311;
  double t1435;
  double t1442;
  double t1443;
  double t1480;
  double t1545;
  double t1599;
  double t39535;
  double t39554;
  double t39557;
  double t39898;
  double t39899;
  double t39974;
  double t39978;
  double t40018;
  double t14834;
  double t15070;
  double t15306;
  double t47397;
  double t47406;
  double t47407;
  double t17379;
  double t18537;
  double t19430;
  double t19435;
  double t47414;
  double t47416;
  double t47417;
  double t19691;
  double t19779;
  double t19804;
  double t19927;
  double t48516;
  double t20014;
  double t28454;
  double t28876;
  double t49682;
  double t49710;
  double t31717;
  double t31718;
  double t32045;
  double t32163;
  double t49814;
  double t32859;
  double t32893;
  double t49837;
  double t49860;
  double t49861;
  double t33703;
  double t34428;
  double t34434;
  double t34487;
  double t34502;
  double t34576;
  double t38296;
  double t38417;
  double t38421;
  double t51080;
  double t51089;
  double t51113;
  double t51122;
  double t51135;
  double t38610;
  double t47468;
  double t38614;
  double t38635;
  double t38636;
  double t51294;
  double t38682;
  double t38692;
  double t38715;
  double t38730;
  double t38733;
  double t38891;
  double t38902;
  double t38903;
  double t52060;
  double t52074;
  double t52076;
  double t38956;
  double t38998;
  double t39035;
  double t39036;
  double t52121;
  double t52122;
  double t52128;
  double t39082;
  double t39106;
  double t39107;
  double t39190;
  double t53085;
  double t39255;
  double t39315;
  double t39316;
  double t53117;
  double t53119;
  double t39339;
  double t39341;
  double t39373;
  double t39376;
  double t53178;
  double t39454;
  double t39455;
  double t53187;
  double t53189;
  double t53190;
  double t39473;
  double t39479;
  double t39489;
  double t39507;
  double t39508;
  double t39533;
  double t40075;
  double t40149;
  double t40158;
  double t53611;
  double t53633;
  double t53795;
  double t53804;
  double t53857;
  double t40371;
  double t41230;
  double t45564;
  double t45600;
  double t54060;
  double t46326;
  double t47202;
  double t47323;
  double t47358;
  double t47373;
  double t47440;
  double t47456;
  double t47504;
  double t47535;
  double t54311;
  double t54313;
  double t48501;
  double t48528;
  double t49709;
  double t54377;
  double t50003;
  double t50015;
  double t50042;
  double t50044;
  double t54395;
  double t54403;
  double t54427;
  double t54442;
  double t54449;
  double t54501;
  double t50186;
  double t50197;
  double t50087;
  double t54346;
  double t54347;
  double t51081;
  double t50352;
  double t50359;
  double t51314;
  double t51322;
  double t51395;
  double t51409;
  double t56134;
  double t56136;
  double t56365;
  double t56369;
  double t51504;
  double t51843;
  double t51957;
  double t52228;
  double t52309;
  double t52541;
  double t53036;
  double t56517;
  double t56518;
  double t53084;
  double t53087;
  double t53118;
  double t56712;
  double t53205;
  double t53206;
  double t53224;
  double t53273;
  double t56750;
  double t56783;
  double t57009;
  double t57025;
  double t57034;
  double t57050;
  double t53323;
  double t53330;
  double t53317;
  double t56636;
  double t56640;
  double t53620;
  double t53340;
  double t53493;
  double t54069;
  double t54083;
  double t54136;
  double t54205;
  double t57192;
  double t57202;
  double t58137;
  double t58169;
  double t54261;
  double t54280;
  double t54282;
  double t57123;
  double t57126;
  double t57157;
  double t59358;
  double t59393;
  double t59498;
  double t59550;
  double t57193;
  double t57497;
  double t57626;
  double t55855;
  double t55908;
  double t56035;
  double t59686;
  double t59710;
  double t59734;
  double t59748;
  double t56135;
  double t56327;
  double t56350;
  t61 = Cos(var1[13]);
  t51 = Cos(var1[14]);
  t55 = Sin(var1[13]);
  t64 = Sin(var1[14]);
  t60 = t51*t55;
  t65 = -1.*t61*t64;
  t66 = t60 + t65;
  t50 = Cos(var1[4]);
  t71 = Cos(var1[5]);
  t81 = Sin(var1[12]);
  t73 = t61*t51;
  t74 = t55*t64;
  t75 = t73 + t74;
  t82 = Sin(var1[5]);
  t69 = Sin(var1[4]);
  t42 = Cos(var1[12]);
  t400 = -1.*t61*t51;
  t466 = -1.*t55*t64;
  t626 = t400 + t466;
  t120 = -1.*t51*t55;
  t121 = t61*t64;
  t342 = t120 + t121;
  t345 = t71*t342;
  t355 = t81*t75*t82;
  t367 = t345 + t355;
  t79 = t71*t75;
  t86 = t81*t66*t82;
  t88 = t79 + t86;
  t1365 = Cos(var1[10]);
  t1353 = Cos(var1[11]);
  t1355 = Sin(var1[10]);
  t1369 = Sin(var1[11]);
  t1356 = t1353*t1355;
  t1370 = -1.*t1365*t1369;
  t1371 = t1356 + t1370;
  t1382 = Sin(var1[9]);
  t1374 = t1365*t1353;
  t1378 = t1355*t1369;
  t1379 = t1374 + t1378;
  t1341 = Cos(var1[9]);
  t1472 = -1.*t1365*t1353;
  t1476 = -1.*t1355*t1369;
  t1479 = t1472 + t1476;
  t1450 = -1.*t1353*t1355;
  t1458 = t1365*t1369;
  t1459 = t1450 + t1458;
  t1460 = t71*t1459;
  t1462 = t1382*t1379*t82;
  t1463 = t1460 + t1462;
  t1381 = t71*t1379;
  t1383 = t1382*t1371*t82;
  t1397 = t1381 + t1383;
  t68 = t42*t50*t66;
  t90 = -1.*t69*t88;
  t95 = t68 + t90;
  t1862 = Sin(var1[3]);
  t1960 = Cos(var1[3]);
  t96 = t71*t81*t66;
  t103 = -1.*t75*t82;
  t106 = t96 + t103;
  t1108 = t42*t50*t75;
  t1125 = -1.*t69*t367;
  t1132 = t1108 + t1125;
  t842 = t71*t66;
  t843 = t81*t626*t82;
  t868 = t842 + t843;
  t1041 = t50*t81;
  t1043 = t42*t69*t82;
  t1054 = t1041 + t1043;
  t2235 = -1.*t71*t81*t75;
  t2262 = t342*t82;
  t2267 = t2235 + t2262;
  t1134 = t71*t81*t75;
  t1135 = -1.*t342*t82;
  t1146 = t1134 + t1135;
  t1170 = t71*t626;
  t1189 = t81*t342*t82;
  t1234 = t1170 + t1189;
  t1867 = -1.*t71*t81*t66;
  t1913 = t75*t82;
  t1928 = t1867 + t1913;
  t1373 = t1341*t50*t1371;
  t1403 = -1.*t69*t1397;
  t1408 = t1373 + t1403;
  t1409 = t71*t1382*t1371;
  t1419 = -1.*t1379*t82;
  t1422 = t1409 + t1419;
  t1655 = t1341*t50*t1379;
  t1667 = -1.*t69*t1463;
  t1668 = t1655 + t1667;
  t1486 = t71*t1371;
  t1490 = t1382*t1479*t82;
  t1509 = t1486 + t1490;
  t1601 = t50*t1382;
  t1602 = t1341*t69*t82;
  t1621 = t1601 + t1602;
  t7469 = -1.*t71*t1382*t1379;
  t7470 = t1459*t82;
  t7471 = t7469 + t7470;
  t1703 = t71*t1382*t1379;
  t1706 = -1.*t1459*t82;
  t1707 = t1703 + t1706;
  t1837 = t71*t1479;
  t1839 = t1382*t1459*t82;
  t1842 = t1837 + t1839;
  t7144 = -1.*t71*t1382*t1371;
  t7146 = t1379*t82;
  t7147 = t7144 + t7146;
  t6973 = t1960*t1928;
  t6982 = -1.*t1862*t95;
  t7139 = t6973 + t6982;
  t2090 = -1.*t42*t66*t69;
  t2091 = -1.*t50*t88;
  t2125 = t2090 + t2091;
  t2174 = -1.*t50*t81*t66;
  t2179 = -1.*t42*t66*t69*t82;
  t2180 = t2174 + t2179;
  t2360 = -1.*t71*t81*t626;
  t2410 = t66*t82;
  t2450 = t2360 + t2410;
  t2669 = t42*t50*t626;
  t2683 = -1.*t69*t868;
  t2767 = t2669 + t2683;
  t2958 = -1.*t81*t69;
  t3092 = t42*t50*t82;
  t3217 = t2958 + t3092;
  t4818 = t42*t50;
  t4819 = -1.*t81*t69*t82;
  t4873 = t4818 + t4819;
  t2270 = t1960*t2267;
  t2280 = -1.*t1862*t1132;
  t2286 = t2270 + t2280;
  t5559 = -1.*t42*t75*t69;
  t5574 = -1.*t50*t367;
  t5594 = t5559 + t5574;
  t5655 = -1.*t50*t81*t75;
  t6451 = -1.*t42*t75*t69*t82;
  t6461 = t5655 + t6451;
  t6535 = -1.*t71*t81*t342;
  t6549 = t626*t82;
  t6594 = t6535 + t6549;
  t6818 = t42*t50*t342;
  t6840 = -1.*t69*t1234;
  t6841 = t6818 + t6840;
  t9351 = t1960*t7147;
  t9366 = -1.*t1862*t1408;
  t9383 = t9351 + t9366;
  t7231 = -1.*t1341*t1371*t69;
  t7243 = -1.*t50*t1397;
  t7249 = t7231 + t7243;
  t7399 = -1.*t50*t1382*t1371;
  t7418 = -1.*t1341*t1371*t69*t82;
  t7426 = t7399 + t7418;
  t7509 = -1.*t71*t1382*t1479;
  t7514 = t1371*t82;
  t7519 = t7509 + t7514;
  t7524 = t1341*t50*t1479;
  t7526 = -1.*t69*t1509;
  t7531 = t7524 + t7526;
  t7615 = -1.*t1382*t69;
  t7621 = t1341*t50*t82;
  t7625 = t7615 + t7621;
  t7715 = t1341*t50;
  t7716 = -1.*t1382*t69*t82;
  t7717 = t7715 + t7716;
  t7482 = t1960*t7471;
  t7484 = -1.*t1862*t1668;
  t7486 = t7482 + t7484;
  t8309 = -1.*t1341*t1379*t69;
  t8337 = -1.*t50*t1463;
  t8342 = t8309 + t8337;
  t8590 = -1.*t50*t1382*t1379;
  t8664 = -1.*t1341*t1379*t69*t82;
  t8745 = t8590 + t8664;
  t9286 = -1.*t71*t1382*t1459;
  t9314 = t1479*t82;
  t9324 = t9286 + t9314;
  t9327 = t1341*t50*t1459;
  t9331 = -1.*t69*t1842;
  t9341 = t9327 + t9331;
  t114 = t42*t75*t69;
  t383 = t50*t367;
  t384 = t114 + t383;
  t11666 = -0.0641*t51;
  t11699 = -0.28*t64;
  t11723 = t11666 + t11699;
  t11783 = -1.*t51;
  t11813 = 1. + t11783;
  t11905 = 0.075*t11813;
  t11908 = 0.355*t51;
  t11910 = -0.0641*t64;
  t11911 = t11905 + t11908 + t11910;
  t11649 = -0.325*t55;
  t11779 = t61*t11723;
  t11940 = t55*t11911;
  t11950 = t11649 + t11779 + t11940;
  t11638 = -0.068*t81;
  t11971 = t42*t11950;
  t11978 = t11638 + t11971;
  t11984 = -1.*t61;
  t11986 = 1. + t11984;
  t12014 = 0.325*t11986;
  t12023 = -1.*t55*t11723;
  t12055 = t61*t11911;
  t12057 = t12014 + t12023 + t12055;
  t12058 = t71*t12057;
  t12059 = -1.*t42;
  t12064 = 1. + t12059;
  t12081 = -0.1575*t12064;
  t12092 = -0.2255*t42;
  t12101 = -1.*t81*t11950;
  t12124 = t12081 + t12092 + t12101;
  t12148 = -1.*t12124*t82;
  t12213 = t12058 + t12148;
  t12328 = t50*t11978;
  t12331 = -1.*t69*t12213;
  t12349 = t12328 + t12331;
  t12317 = t81*t69;
  t12324 = -1.*t42*t50*t82;
  t12326 = t12317 + t12324;
  t12270 = t11978*t69;
  t12273 = t50*t12213;
  t12286 = t12270 + t12273;
  t11981 = -1.*t11978*t69;
  t12227 = -1.*t50*t12213;
  t12253 = t11981 + t12227;
  t12652 = t71*t12124;
  t12681 = t12057*t82;
  t12740 = t12652 + t12681;
  t14414 = -1.*t71*t12124;
  t14438 = -1.*t12057*t82;
  t14752 = t14414 + t14438;
  t12835 = -1.*t42*t71*t12740;
  t12870 = -1.*t12326*t12286;
  t12892 = -1.*t1054*t12349;
  t12898 = t12835 + t12870 + t12892;
  t13514 = t12740*t2267;
  t13547 = t12286*t384;
  t13620 = t12349*t1132;
  t13685 = t13514 + t13547 + t13620;
  t1150 = -1.*t81*t75*t69;
  t1161 = t42*t50*t75*t82;
  t1162 = t1150 + t1161;
  t17041 = 0.068*t81;
  t17085 = -1.*t42*t11950;
  t17099 = t17041 + t17085;
  t17381 = -0.068*t42;
  t17425 = t17381 + t12101;
  t1085 = t42*t69;
  t1093 = t50*t81*t82;
  t1106 = t1085 + t1093;
  t17753 = t17425*t69;
  t17839 = -1.*t50*t17099*t82;
  t17844 = t17753 + t17839;
  t19055 = t50*t17425;
  t19058 = t17099*t69*t82;
  t19361 = t19055 + t19058;
  t1168 = t42*t342*t69;
  t1326 = t50*t1234;
  t1332 = t1168 + t1326;
  t19504 = -0.325*t61;
  t19505 = t19504 + t12023 + t12055;
  t19507 = 0.325*t55;
  t19669 = -1.*t61*t11723;
  t19684 = -1.*t55*t11911;
  t19685 = t19507 + t19669 + t19684;
  t19694 = t71*t19685;
  t19712 = t81*t19505*t82;
  t19713 = t19694 + t19712;
  t19506 = -1.*t71*t81*t19505;
  t19687 = t19685*t82;
  t19689 = t19506 + t19687;
  t19692 = t42*t19505*t69;
  t19715 = t50*t19713;
  t19721 = t19692 + t19715;
  t19756 = t42*t50*t19505;
  t19757 = -1.*t69*t19713;
  t19759 = t19756 + t19757;
  t1335 = t42*t66*t69;
  t1336 = t50*t88;
  t1340 = t1335 + t1336;
  t19842 = -0.28*t51;
  t19843 = 0.0641*t64;
  t19844 = t19842 + t19843;
  t19841 = t55*t11723;
  t19846 = t61*t19844;
  t19851 = t19841 + t19846;
  t19879 = -1.*t55*t19844;
  t19893 = t11779 + t19879;
  t19944 = t71*t19893;
  t19946 = t81*t19851*t82;
  t19947 = t19944 + t19946;
  t19852 = -1.*t71*t81*t19851;
  t19907 = t19893*t82;
  t19914 = t19852 + t19907;
  t19943 = t42*t19851*t69;
  t19958 = t50*t19947;
  t19967 = t19943 + t19958;
  t19981 = t42*t50*t19851;
  t19991 = -1.*t69*t19947;
  t19992 = t19981 + t19991;
  t20023 = t12740*t1928;
  t20090 = t12286*t1340;
  t20097 = t12349*t95;
  t21979 = t20023 + t20090 + t20097;
  t26338 = -1.*t12740*t2267;
  t26666 = -1.*t12286*t384;
  t26673 = -1.*t12349*t1132;
  t27061 = t26338 + t26666 + t26673;
  t109 = -1.*t81*t66*t69;
  t111 = t42*t50*t66*t82;
  t112 = t109 + t111;
  t631 = t42*t626*t69;
  t928 = t50*t868;
  t1015 = t631 + t928;
  t34588 = -1.*t12740*t1928;
  t34589 = -1.*t12286*t1340;
  t34592 = -1.*t12349*t95;
  t36923 = t42*t71*t12740;
  t36935 = t12326*t12286;
  t36944 = t1054*t12349;
  t36968 = t36923 + t36935 + t36944;
  t37885 = t34588 + t34589 + t34592;
  t17040 = Power(t71,2);
  t1446 = t1341*t1379*t69;
  t1465 = t50*t1463;
  t1469 = t1446 + t1465;
  t38746 = -0.0641*t1353;
  t38747 = -0.28*t1369;
  t38748 = t38746 + t38747;
  t38750 = -1.*t1353;
  t38751 = 1. + t38750;
  t38754 = -0.575*t38751;
  t38755 = -0.295*t1353;
  t38756 = -0.0641*t1369;
  t38757 = t38754 + t38755 + t38756;
  t38744 = 0.325*t1355;
  t38749 = t1365*t38748;
  t38758 = t1355*t38757;
  t38759 = t38744 + t38749 + t38758;
  t38743 = 0.068*t1382;
  t38760 = t1341*t38759;
  t38761 = t38743 + t38760;
  t38763 = -1.*t1365;
  t38764 = 1. + t38763;
  t38765 = -0.325*t38764;
  t38766 = -1.*t1355*t38748;
  t38767 = t1365*t38757;
  t38768 = t38765 + t38766 + t38767;
  t38769 = t71*t38768;
  t38770 = -1.*t1341;
  t38771 = 1. + t38770;
  t38773 = 0.1575*t38771;
  t38774 = 0.2255*t1341;
  t38775 = -1.*t1382*t38759;
  t38777 = t38773 + t38774 + t38775;
  t38778 = -1.*t38777*t82;
  t38779 = t38769 + t38778;
  t38794 = t50*t38761;
  t38795 = -1.*t69*t38779;
  t38796 = t38794 + t38795;
  t38791 = t1382*t69;
  t38792 = -1.*t1341*t50*t82;
  t38793 = t38791 + t38792;
  t38784 = t38761*t69;
  t38785 = t50*t38779;
  t38786 = t38784 + t38785;
  t38762 = -1.*t38761*t69;
  t38780 = -1.*t50*t38779;
  t38781 = t38762 + t38780;
  t38808 = t71*t38777;
  t38809 = t38768*t82;
  t38810 = t38808 + t38809;
  t38874 = -1.*t71*t38777;
  t38879 = -1.*t38768*t82;
  t38880 = t38874 + t38879;
  t38821 = -1.*t1341*t71*t38810;
  t38822 = -1.*t38793*t38786;
  t38823 = -1.*t1621*t38796;
  t38832 = t38821 + t38822 + t38823;
  t38860 = t38810*t7471;
  t38861 = t38786*t1469;
  t38862 = t38796*t1668;
  t38863 = t38860 + t38861 + t38862;
  t1727 = -1.*t1382*t1379*t69;
  t1736 = t1341*t50*t1379*t82;
  t1771 = t1727 + t1736;
  t38952 = -0.068*t1382;
  t38953 = -1.*t1341*t38759;
  t38955 = t38952 + t38953;
  t38957 = 0.068*t1341;
  t38960 = t38957 + t38775;
  t1642 = t1341*t69;
  t1646 = t50*t1382*t82;
  t1647 = t1642 + t1646;
  t38962 = t38960*t69;
  t38993 = -1.*t50*t38955*t82;
  t38994 = t38962 + t38993;
  t39002 = t50*t38960;
  t39004 = t38955*t69*t82;
  t39007 = t39002 + t39004;
  t1772 = t1341*t1459*t69;
  t1852 = t50*t1842;
  t1856 = t1772 + t1852;
  t39058 = 0.325*t1365;
  t39059 = t39058 + t38766 + t38767;
  t39063 = -0.325*t1355;
  t39064 = -1.*t1365*t38748;
  t39073 = -1.*t1355*t38757;
  t39074 = t39063 + t39064 + t39073;
  t39090 = t71*t39074;
  t39091 = t1382*t39059*t82;
  t39092 = t39090 + t39091;
  t39062 = -1.*t71*t1382*t39059;
  t39075 = t39074*t82;
  t39078 = t39062 + t39075;
  t39083 = t1341*t39059*t69;
  t39094 = t50*t39092;
  t39095 = t39083 + t39094;
  t39098 = t1341*t50*t39059;
  t39099 = -1.*t69*t39092;
  t39100 = t39098 + t39099;
  t1857 = t1341*t1371*t69;
  t1858 = t50*t1397;
  t1860 = t1857 + t1858;
  t39136 = -0.28*t1353;
  t39138 = 0.0641*t1369;
  t39141 = t39136 + t39138;
  t39133 = t1355*t38748;
  t39142 = t1365*t39141;
  t39143 = t39133 + t39142;
  t39159 = -1.*t1355*t39141;
  t39164 = t38749 + t39159;
  t39195 = t71*t39164;
  t39199 = t1382*t39143*t82;
  t39200 = t39195 + t39199;
  t39157 = -1.*t71*t1382*t39143;
  t39165 = t39164*t82;
  t39189 = t39157 + t39165;
  t39193 = t1341*t39143*t69;
  t39202 = t50*t39200;
  t39205 = t39193 + t39202;
  t39221 = t1341*t50*t39143;
  t39224 = -1.*t69*t39200;
  t39228 = t39221 + t39224;
  t39261 = t38810*t7147;
  t39263 = t38786*t1860;
  t39264 = t38796*t1408;
  t39291 = t39261 + t39263 + t39264;
  t39302 = -1.*t38810*t7471;
  t39303 = -1.*t38786*t1469;
  t39305 = -1.*t38796*t1668;
  t39311 = t39302 + t39303 + t39305;
  t1435 = -1.*t1382*t1371*t69;
  t1442 = t1341*t50*t1371*t82;
  t1443 = t1435 + t1442;
  t1480 = t1341*t1479*t69;
  t1545 = t50*t1509;
  t1599 = t1480 + t1545;
  t39535 = -1.*t38810*t7147;
  t39554 = -1.*t38786*t1860;
  t39557 = -1.*t38796*t1408;
  t39898 = t1341*t71*t38810;
  t39899 = t38793*t38786;
  t39974 = t1621*t38796;
  t39978 = t39898 + t39899 + t39974;
  t40018 = t39535 + t39554 + t39557;
  t14834 = t42*t82*t12740;
  t15070 = t12213*t2267;
  t15306 = t12740*t367;
  t47397 = -1.*t81*t11978;
  t47406 = t42*t82*t12213;
  t47407 = t47397 + t47406 + t12835;
  t17379 = -1.*t42*t17040*t17099;
  t18537 = t71*t81*t12740;
  t19430 = -1.*t42*t71*t75*t12740;
  t19435 = t71*t17099*t2267;
  t47414 = t42*t11978*t75;
  t47416 = t12213*t367;
  t47417 = t47414 + t13514 + t47416;
  t19691 = -1.*t42*t71*t19689;
  t19779 = t19689*t2267;
  t19804 = t12740*t6594;
  t19927 = -1.*t42*t71*t19914;
  t48516 = Power(t42,2);
  t20014 = t19914*t2267;
  t28454 = t12740*t88;
  t28876 = t12213*t1928;
  t49682 = t42*t11978*t66;
  t49710 = t12213*t88;
  t31717 = -1.*t12213*t2267;
  t31718 = -1.*t12740*t367;
  t32045 = -1.*t42*t71*t66*t12740;
  t32163 = t71*t17099*t1928;
  t49814 = t49682 + t49710 + t20023;
  t32859 = t42*t71*t75*t12740;
  t32893 = -1.*t71*t17099*t2267;
  t49837 = -1.*t42*t11978*t75;
  t49860 = -1.*t12213*t367;
  t49861 = t49837 + t26338 + t49860;
  t33703 = t19689*t1928;
  t34428 = -1.*t19689*t2267;
  t34434 = -1.*t12740*t6594;
  t34487 = t12740*t2450;
  t34502 = t19914*t1928;
  t34576 = -1.*t19914*t2267;
  t38296 = -1.*t42*t82*t12740;
  t38417 = -1.*t12740*t88;
  t38421 = -1.*t12213*t1928;
  t51080 = -1.*t42*t11978*t66;
  t51089 = -1.*t12213*t88;
  t51113 = t81*t11978;
  t51122 = -1.*t42*t82*t12213;
  t51135 = t51113 + t51122 + t36923;
  t38610 = t42*t17040*t17099;
  t47468 = Power(t82,2);
  t38614 = -1.*t71*t81*t12740;
  t38635 = t42*t71*t66*t12740;
  t38636 = -1.*t71*t17099*t1928;
  t51294 = t51080 + t51089 + t34588;
  t38682 = t42*t71*t19689;
  t38692 = -1.*t19689*t1928;
  t38715 = t42*t71*t19914;
  t38730 = -1.*t12740*t2450;
  t38733 = -1.*t19914*t1928;
  t38891 = t1341*t82*t38810;
  t38902 = t38779*t7471;
  t38903 = t38810*t1463;
  t52060 = -1.*t1382*t38761;
  t52074 = t1341*t82*t38779;
  t52076 = t52060 + t52074 + t38821;
  t38956 = -1.*t1341*t17040*t38955;
  t38998 = t71*t1382*t38810;
  t39035 = -1.*t1341*t71*t1379*t38810;
  t39036 = t71*t38955*t7471;
  t52121 = t1341*t38761*t1379;
  t52122 = t38779*t1463;
  t52128 = t52121 + t38860 + t52122;
  t39082 = -1.*t1341*t71*t39078;
  t39106 = t39078*t7471;
  t39107 = t38810*t9324;
  t39190 = -1.*t1341*t71*t39189;
  t53085 = Power(t1341,2);
  t39255 = t39189*t7471;
  t39315 = t38810*t1397;
  t39316 = t38779*t7147;
  t53117 = t1341*t38761*t1371;
  t53119 = t38779*t1397;
  t39339 = -1.*t38779*t7471;
  t39341 = -1.*t38810*t1463;
  t39373 = -1.*t1341*t71*t1371*t38810;
  t39376 = t71*t38955*t7147;
  t53178 = t53117 + t53119 + t39261;
  t39454 = t1341*t71*t1379*t38810;
  t39455 = -1.*t71*t38955*t7471;
  t53187 = -1.*t1341*t38761*t1379;
  t53189 = -1.*t38779*t1463;
  t53190 = t53187 + t39302 + t53189;
  t39473 = t39078*t7147;
  t39479 = -1.*t39078*t7471;
  t39489 = -1.*t38810*t9324;
  t39507 = t38810*t7519;
  t39508 = t39189*t7147;
  t39533 = -1.*t39189*t7471;
  t40075 = -1.*t1341*t82*t38810;
  t40149 = -1.*t38810*t1397;
  t40158 = -1.*t38779*t7147;
  t53611 = -1.*t1341*t38761*t1371;
  t53633 = -1.*t38779*t1397;
  t53795 = t1382*t38761;
  t53804 = -1.*t1341*t82*t38779;
  t53857 = t53795 + t53804 + t39898;
  t40371 = t1341*t17040*t38955;
  t41230 = -1.*t71*t1382*t38810;
  t45564 = t1341*t71*t1371*t38810;
  t45600 = -1.*t71*t38955*t7147;
  t54060 = t53611 + t53633 + t39535;
  t46326 = t1341*t71*t39078;
  t47202 = -1.*t39078*t7147;
  t47323 = t1341*t71*t39189;
  t47358 = -1.*t38810*t7519;
  t47373 = -1.*t39189*t7147;
  t47440 = -1.*t42*t11978;
  t47456 = -1.*t81*t17425;
  t47504 = -1.*t81*t11978*t75;
  t47535 = t42*t17425*t75;
  t54311 = -1.*t42*t12124;
  t54313 = t47397 + t54311;
  t48501 = t42*t11978*t342;
  t48528 = t48516*t19505*t75;
  t49709 = t48516*t19851*t75;
  t54377 = Power(t81,2);
  t50003 = -1.*t81*t11978*t66;
  t50015 = t42*t17425*t66;
  t50042 = t81*t11978*t75;
  t50044 = -1.*t42*t17425*t75;
  t54395 = -1.*t81*t12124*t66;
  t54403 = t12057*t75;
  t54427 = -1.*t12057*t342;
  t54442 = t81*t12124*t75;
  t54449 = t54427 + t49837 + t54442;
  t54501 = t49682 + t54395 + t54403;
  t50186 = -1.*t42*t11978*t342;
  t50197 = -1.*t48516*t19505*t75;
  t50087 = t48516*t19505*t66;
  t54346 = t12057*t342;
  t54347 = -1.*t81*t12124*t75;
  t51081 = -1.*t48516*t19851*t75;
  t50352 = t48516*t19851*t66;
  t50359 = t42*t11978*t626;
  t51314 = t42*t11978;
  t51322 = t81*t17425;
  t51395 = t81*t11978*t66;
  t51409 = -1.*t42*t17425*t66;
  t56134 = t81*t12124*t66;
  t56136 = -1.*t12057*t75;
  t56365 = t42*t12124;
  t56369 = t51113 + t56365;
  t51504 = -1.*t48516*t19505*t66;
  t51843 = -1.*t48516*t19851*t66;
  t51957 = -1.*t42*t11978*t626;
  t52228 = -1.*t1341*t38761;
  t52309 = -1.*t1382*t38960;
  t52541 = -1.*t1382*t38761*t1379;
  t53036 = t1341*t38960*t1379;
  t56517 = -1.*t1341*t38777;
  t56518 = t52060 + t56517;
  t53084 = t1341*t38761*t1459;
  t53087 = t53085*t39059*t1379;
  t53118 = t53085*t39143*t1379;
  t56712 = Power(t1382,2);
  t53205 = -1.*t1382*t38761*t1371;
  t53206 = t1341*t38960*t1371;
  t53224 = t1382*t38761*t1379;
  t53273 = -1.*t1341*t38960*t1379;
  t56750 = -1.*t1382*t38777*t1371;
  t56783 = t38768*t1379;
  t57009 = -1.*t38768*t1459;
  t57025 = t1382*t38777*t1379;
  t57034 = t57009 + t53187 + t57025;
  t57050 = t53117 + t56750 + t56783;
  t53323 = -1.*t1341*t38761*t1459;
  t53330 = -1.*t53085*t39059*t1379;
  t53317 = t53085*t39059*t1371;
  t56636 = t38768*t1459;
  t56640 = -1.*t1382*t38777*t1379;
  t53620 = -1.*t53085*t39143*t1379;
  t53340 = t53085*t39143*t1371;
  t53493 = t1341*t38761*t1479;
  t54069 = t1341*t38761;
  t54083 = t1382*t38960;
  t54136 = t1382*t38761*t1371;
  t54205 = -1.*t1341*t38960*t1371;
  t57192 = t1382*t38777*t1371;
  t57202 = -1.*t38768*t1379;
  t58137 = t1341*t38777;
  t58169 = t53795 + t58137;
  t54261 = -1.*t53085*t39059*t1371;
  t54280 = -1.*t53085*t39143*t1371;
  t54282 = -1.*t1341*t38761*t1479;
  t57123 = -1.*t39074*t1459;
  t57126 = -1.*t38768*t1479;
  t57157 = t39074*t1379;
  t59358 = t38759*t1371;
  t59393 = t59358 + t56783;
  t59498 = -1.*t38759*t1379;
  t59550 = t57009 + t59498;
  t57193 = -1.*t39164*t1459;
  t57497 = t38768*t1371;
  t57626 = t39164*t1379;
  t55855 = -1.*t19685*t342;
  t55908 = -1.*t12057*t626;
  t56035 = t19685*t75;
  t59686 = t11950*t66;
  t59710 = t59686 + t54403;
  t59734 = -1.*t11950*t75;
  t59748 = t54427 + t59734;
  t56135 = -1.*t19893*t342;
  t56327 = t12057*t66;
  t56350 = t19893*t75;
  p_output1[0]=t95;
  p_output1[1]=t106*t50;
  p_output1[2]=t112;
  p_output1[3]=t384;
  p_output1[4]=t1015;
  p_output1[5]=t1054;
  p_output1[6]=-1.*t42*t50*t71;
  p_output1[7]=t1106;
  p_output1[8]=t1132;
  p_output1[9]=t1146*t50;
  p_output1[10]=t1162;
  p_output1[11]=t1332;
  p_output1[12]=t1340;
  p_output1[13]=t1408;
  p_output1[14]=t1422*t50;
  p_output1[15]=t1443;
  p_output1[16]=t1469;
  p_output1[17]=t1599;
  p_output1[18]=t1621;
  p_output1[19]=-1.*t1341*t50*t71;
  p_output1[20]=t1647;
  p_output1[21]=t1668;
  p_output1[22]=t1707*t50;
  p_output1[23]=t1771;
  p_output1[24]=t1856;
  p_output1[25]=t1860;
  p_output1[26]=-1.*t1862*t1928 - 1.*t1960*t95;
  p_output1[27]=-1.*t1862*t2125;
  p_output1[28]=t106*t1862*t69 + t1960*t88;
  p_output1[29]=-1.*t1862*t2180 - 1.*t1960*t42*t66*t71;
  p_output1[30]=t2286;
  p_output1[31]=t1960*t2450 - 1.*t1862*t2767;
  p_output1[32]=-1.*t1054*t1960 - 1.*t1862*t42*t71;
  p_output1[33]=-1.*t1862*t3217;
  p_output1[34]=-1.*t1862*t42*t69*t71 - 1.*t1960*t42*t82;
  p_output1[35]=-1.*t1862*t4873 - 1.*t1960*t71*t81;
  p_output1[36]=-1.*t1132*t1960 - 1.*t1862*t2267;
  p_output1[37]=-1.*t1862*t5594;
  p_output1[38]=t1960*t367 + t1146*t1862*t69;
  p_output1[39]=-1.*t1862*t6461 - 1.*t1960*t42*t71*t75;
  p_output1[40]=t1960*t6594 - 1.*t1862*t6841;
  p_output1[41]=t7139;
  p_output1[42]=-1.*t1408*t1960 - 1.*t1862*t7147;
  p_output1[43]=-1.*t1862*t7249;
  p_output1[44]=t1397*t1960 + t1422*t1862*t69;
  p_output1[45]=-1.*t1341*t1371*t1960*t71 - 1.*t1862*t7426;
  p_output1[46]=t7486;
  p_output1[47]=t1960*t7519 - 1.*t1862*t7531;
  p_output1[48]=-1.*t1621*t1960 - 1.*t1341*t1862*t71;
  p_output1[49]=-1.*t1862*t7625;
  p_output1[50]=-1.*t1341*t1862*t69*t71 - 1.*t1341*t1960*t82;
  p_output1[51]=-1.*t1382*t1960*t71 - 1.*t1862*t7717;
  p_output1[52]=-1.*t1668*t1960 - 1.*t1862*t7471;
  p_output1[53]=-1.*t1862*t8342;
  p_output1[54]=t1463*t1960 + t1707*t1862*t69;
  p_output1[55]=-1.*t1341*t1379*t1960*t71 - 1.*t1862*t8745;
  p_output1[56]=t1960*t9324 - 1.*t1862*t9341;
  p_output1[57]=t9383;
  p_output1[58]=t7139;
  p_output1[59]=t1960*t2125;
  p_output1[60]=-1.*t106*t1960*t69 + t1862*t88;
  p_output1[61]=t1960*t2180 - 1.*t1862*t42*t66*t71;
  p_output1[62]=t1132*t1960 + t1862*t2267;
  p_output1[63]=t1862*t2450 + t1960*t2767;
  p_output1[64]=-1.*t1054*t1862 + t1960*t42*t71;
  p_output1[65]=t1960*t3217;
  p_output1[66]=t1960*t42*t69*t71 - 1.*t1862*t42*t82;
  p_output1[67]=t1960*t4873 - 1.*t1862*t71*t81;
  p_output1[68]=t2286;
  p_output1[69]=t1960*t5594;
  p_output1[70]=t1862*t367 - 1.*t1146*t1960*t69;
  p_output1[71]=t1960*t6461 - 1.*t1862*t42*t71*t75;
  p_output1[72]=t1862*t6594 + t1960*t6841;
  p_output1[73]=t1862*t1928 + t1960*t95;
  p_output1[74]=t9383;
  p_output1[75]=t1960*t7249;
  p_output1[76]=t1397*t1862 - 1.*t1422*t1960*t69;
  p_output1[77]=-1.*t1341*t1371*t1862*t71 + t1960*t7426;
  p_output1[78]=t1668*t1960 + t1862*t7471;
  p_output1[79]=t1862*t7519 + t1960*t7531;
  p_output1[80]=-1.*t1621*t1862 + t1341*t1960*t71;
  p_output1[81]=t1960*t7625;
  p_output1[82]=t1341*t1960*t69*t71 - 1.*t1341*t1862*t82;
  p_output1[83]=-1.*t1382*t1862*t71 + t1960*t7717;
  p_output1[84]=t7486;
  p_output1[85]=t1960*t8342;
  p_output1[86]=t1463*t1862 - 1.*t1707*t1960*t69;
  p_output1[87]=-1.*t1341*t1379*t1862*t71 + t1960*t8745;
  p_output1[88]=t1862*t9324 + t1960*t9341;
  p_output1[89]=t1408*t1960 + t1862*t7147;
  p_output1[90]=t1132*t12898 + t1054*t13685 + (-1.*t1054*t12253 - 1.*t1054*t12286 - 1.*t12326*t12349 - 1.*t12349*t3217)*t384 + t12326*(t1132*t12253 + t1132*t12286 + t12349*t384 + t12349*t5594);
  p_output1[91]=t1146*t12898*t50 + t12326*(t15070 + t15306 + t1146*t12286*t50 + t14752*t384*t50 - 1.*t1146*t12349*t69 - 1.*t1132*t14752*t69) - 1.*t13685*t42*t50*t71 + t384*(t14834 - 1.*t12326*t14752*t50 + t1054*t14752*t69 - 1.*t12213*t42*t71 + t12286*t42*t50*t71 - 1.*t12349*t42*t69*t71);
  p_output1[92]=t1162*t12898 + t1106*t13685 + t384*(-1.*t1106*t12286 + t17379 - 1.*t12326*t17844 + t18537 - 1.*t1054*t19361 - 1.*t12349*t4873) + t12326*(t1162*t12286 + t1132*t19361 + t19430 + t19435 + t17844*t384 + t12349*t6461);
  p_output1[93]=t12898*t1332 + (t19691 - 1.*t12326*t19721 - 1.*t1054*t19759)*t384 + t12326*(t12286*t1332 + t1132*t19759 + t19779 + t19804 + t19721*t384 + t12349*t6841);
  p_output1[94]=t12898*t1340 + (t19927 - 1.*t12326*t19967 - 1.*t1054*t19992)*t384 + t12326*(t1132*t19992 + t20014 + t20023 + t20090 + t20097 + t19967*t384);
  p_output1[95]=t1132*t21979 + t1340*(-1.*t1132*t12253 - 1.*t1132*t12286 - 1.*t12349*t384 - 1.*t12349*t5594) + t27061*t95 + t384*(t12349*t1340 + t12349*t2125 + t12253*t95 + t12286*t95);
  p_output1[96]=t1146*t21979*t50 + t106*t27061*t50 + t1340*(t31717 + t31718 - 1.*t1146*t12286*t50 - 1.*t14752*t384*t50 + t1146*t12349*t69 + t1132*t14752*t69) + t384*(t28454 + t28876 + t106*t12286*t50 + t1340*t14752*t50 - 1.*t106*t12349*t69 - 1.*t14752*t69*t95);
  p_output1[97]=t1162*t21979 + t112*t27061 + t1340*(-1.*t1162*t12286 - 1.*t1132*t19361 + t32859 + t32893 - 1.*t17844*t384 - 1.*t12349*t6461) + t384*(t112*t12286 + t1340*t17844 + t12349*t2180 + t32045 + t32163 + t19361*t95);
  p_output1[98]=t1332*t21979 + t27061*t384 + t1340*(-1.*t12286*t1332 - 1.*t1132*t19759 + t34428 + t34434 - 1.*t19721*t384 - 1.*t12349*t6841) + t384*(t13514 + t13547 + t13620 + t1340*t19721 + t33703 + t19759*t95);
  p_output1[99]=t1340*t21979 + t1015*t27061 + t1340*(-1.*t1132*t19992 + t34576 + t34588 + t34589 + t34592 - 1.*t19967*t384) + t384*(t1015*t12286 + t1340*t19967 + t12349*t2767 + t34487 + t34502 + t19992*t95);
  p_output1[100]=t1340*(t1054*t12253 + t1054*t12286 + t12326*t12349 + t12349*t3217) + t1054*t37885 + t36968*t95 + t12326*(-1.*t12349*t1340 - 1.*t12349*t2125 - 1.*t12253*t95 - 1.*t12286*t95);
  p_output1[101]=t106*t36968*t50 - 1.*t37885*t42*t50*t71 + t1340*(t38296 + t12326*t14752*t50 - 1.*t1054*t14752*t69 + t12213*t42*t71 - 1.*t12286*t42*t50*t71 + t12349*t42*t69*t71) + t12326*(t38417 + t38421 - 1.*t106*t12286*t50 - 1.*t1340*t14752*t50 + t106*t12349*t69 + t14752*t69*t95);
  p_output1[102]=t112*t36968 + t1106*t37885 + t1340*(t1106*t12286 + t12326*t17844 + t1054*t19361 + t38610 + t38614 + t12349*t4873) + t12326*(-1.*t112*t12286 - 1.*t1340*t17844 - 1.*t12349*t2180 + t38635 + t38636 - 1.*t19361*t95);
  p_output1[103]=t36968*t384 + t1340*(t12326*t19721 + t1054*t19759 + t38682) + t12326*(-1.*t1340*t19721 + t26338 + t26666 + t26673 + t38692 - 1.*t19759*t95);
  p_output1[104]=t1015*t36968 + t1340*(t12326*t19967 + t1054*t19992 + t38715) + t12326*(-1.*t1015*t12286 - 1.*t1340*t19967 - 1.*t12349*t2767 + t38730 + t38733 - 1.*t19992*t95);
  p_output1[105]=t1668*t38832 + t1621*t38863 + t1469*(-1.*t1621*t38781 - 1.*t1621*t38786 - 1.*t38793*t38796 - 1.*t38796*t7625) + t38793*(t1668*t38781 + t1668*t38786 + t1469*t38796 + t38796*t8342);
  p_output1[106]=t1707*t38832*t50 + t38793*(t38902 + t38903 + t1707*t38786*t50 + t1469*t38880*t50 - 1.*t1707*t38796*t69 - 1.*t1668*t38880*t69) - 1.*t1341*t38863*t50*t71 + t1469*(t38891 - 1.*t38793*t38880*t50 + t1621*t38880*t69 - 1.*t1341*t38779*t71 + t1341*t38786*t50*t71 - 1.*t1341*t38796*t69*t71);
  p_output1[107]=t1771*t38832 + t1647*t38863 + t1469*(-1.*t1647*t38786 + t38956 - 1.*t38793*t38994 + t38998 - 1.*t1621*t39007 - 1.*t38796*t7717) + t38793*(t1771*t38786 + t1469*t38994 + t1668*t39007 + t39035 + t39036 + t38796*t8745);
  p_output1[108]=t1856*t38832 + t1469*(t39082 - 1.*t38793*t39095 - 1.*t1621*t39100) + t38793*(t1856*t38786 + t1469*t39095 + t1668*t39100 + t39106 + t39107 + t38796*t9341);
  p_output1[109]=t1860*t38832 + t1469*(t39190 - 1.*t38793*t39205 - 1.*t1621*t39228) + t38793*(t1469*t39205 + t1668*t39228 + t39255 + t39261 + t39263 + t39264);
  p_output1[110]=t1668*t39291 + t1408*t39311 + t1469*(t1408*t38781 + t1408*t38786 + t1860*t38796 + t38796*t7249) + t1860*(-1.*t1668*t38781 - 1.*t1668*t38786 - 1.*t1469*t38796 - 1.*t38796*t8342);
  p_output1[111]=t1707*t39291*t50 + t1422*t39311*t50 + t1469*(t39315 + t39316 + t1422*t38786*t50 + t1860*t38880*t50 - 1.*t1422*t38796*t69 - 1.*t1408*t38880*t69) + t1860*(t39339 + t39341 - 1.*t1707*t38786*t50 - 1.*t1469*t38880*t50 + t1707*t38796*t69 + t1668*t38880*t69);
  p_output1[112]=t1771*t39291 + t1443*t39311 + t1469*(t1443*t38786 + t1860*t38994 + t1408*t39007 + t39373 + t39376 + t38796*t7426) + t1860*(-1.*t1771*t38786 - 1.*t1469*t38994 - 1.*t1668*t39007 + t39454 + t39455 - 1.*t38796*t8745);
  p_output1[113]=t1856*t39291 + t1469*t39311 + t1469*(t38860 + t38861 + t38862 + t1860*t39095 + t1408*t39100 + t39473) + t1860*(-1.*t1856*t38786 - 1.*t1469*t39095 - 1.*t1668*t39100 + t39479 + t39489 - 1.*t38796*t9341);
  p_output1[114]=t1860*t39291 + t1599*t39311 + t1860*(-1.*t1469*t39205 - 1.*t1668*t39228 + t39533 + t39535 + t39554 + t39557) + t1469*(t1599*t38786 + t1860*t39205 + t1408*t39228 + t39507 + t39508 + t38796*t7531);
  p_output1[115]=t1408*t39978 + t1621*t40018 + t38793*(-1.*t1408*t38781 - 1.*t1408*t38786 - 1.*t1860*t38796 - 1.*t38796*t7249) + t1860*(t1621*t38781 + t1621*t38786 + t38793*t38796 + t38796*t7625);
  p_output1[116]=t1422*t39978*t50 + t38793*(t40149 + t40158 - 1.*t1422*t38786*t50 - 1.*t1860*t38880*t50 + t1422*t38796*t69 + t1408*t38880*t69) - 1.*t1341*t40018*t50*t71 + t1860*(t40075 + t38793*t38880*t50 - 1.*t1621*t38880*t69 + t1341*t38779*t71 - 1.*t1341*t38786*t50*t71 + t1341*t38796*t69*t71);
  p_output1[117]=t1443*t39978 + t1647*t40018 + t38793*(-1.*t1443*t38786 - 1.*t1860*t38994 - 1.*t1408*t39007 + t45564 + t45600 - 1.*t38796*t7426) + t1860*(t1647*t38786 + t38793*t38994 + t1621*t39007 + t40371 + t41230 + t38796*t7717);
  p_output1[118]=t1469*t39978 + t1860*(t38793*t39095 + t1621*t39100 + t46326) + t38793*(-1.*t1860*t39095 - 1.*t1408*t39100 + t39302 + t39303 + t39305 + t47202);
  p_output1[119]=t1599*t39978 + t1860*(t38793*t39205 + t1621*t39228 + t47323) + t38793*(-1.*t1599*t38786 - 1.*t1860*t39205 - 1.*t1408*t39228 + t47358 + t47373 - 1.*t38796*t7531);
  p_output1[120]=t367*t47407 + (t1146*t12213 + t15070 + t15306 + t14752*t367)*t42*t71 - 1.*t42*t47417*t82 + t2267*(t14834 + t14752*t42*t82);
  p_output1[121]=-1.*t42*t47407*t71*t75 - 1.*t47417*t71*t81 + t42*t71*(t19430 + t19435 + t47504 + t47535 - 1.*t17099*t367*t82 + t12213*t42*t75*t82) + t2267*(t17379 + t18537 + t47440 + t47456 - 1.*t17099*t42*t47468 - 1.*t12213*t81*t82);
  p_output1[122]=t47407*t6594 + t42*(t12213*t1234 + t19779 + t19804 + t19713*t367 + t48501 + t48528)*t71 + t2267*(t19691 - 1.*t19505*t42*t81 + t19713*t42*t82);
  p_output1[123]=t1928*t47407 + t42*(t20014 + t20023 + t19947*t367 + t49682 + t49709 + t49710)*t71 + t2267*(t19927 - 1.*t19851*t42*t81 + t19947*t42*t82);
  p_output1[124]=t1928*(-1.*t1146*t12213 + t31717 + t31718 - 1.*t14752*t367) + t367*t49814 + t49861*t88 + t2267*(t106*t12213 + t28454 + t28876 + t14752*t88);
  p_output1[125]=-1.*t42*t49861*t66*t71 - 1.*t42*t49814*t71*t75 + t1928*(t32859 + t32893 + t50042 + t50044 + t17099*t367*t82 - 1.*t12213*t42*t75*t82) + t2267*(t32045 + t32163 + t50003 + t50015 + t12213*t42*t66*t82 - 1.*t17099*t82*t88);
  p_output1[126]=t2267*t49861 + t1928*(-1.*t12213*t1234 + t34428 + t34434 - 1.*t19713*t367 + t50186 + t50197) + t49814*t6594 + t2267*(t13514 + t33703 + t47414 + t47416 + t50087 + t19713*t88);
  p_output1[127]=t1928*t49814 + t2450*t49861 + t1928*(t34576 + t34588 - 1.*t19947*t367 + t51080 + t51081 + t51089) + t2267*(t34487 + t34502 + t50352 + t50359 + t12213*t868 + t19947*t88);
  p_output1[128]=-1.*t42*t51294*t82 + t1928*(t38296 - 1.*t14752*t42*t82) + t51135*t88 + t42*t71*(-1.*t106*t12213 + t38417 + t38421 - 1.*t14752*t88);
  p_output1[129]=-1.*t42*t51135*t66*t71 - 1.*t51294*t71*t81 + t1928*(t38610 + t38614 + t17099*t42*t47468 + t51314 + t51322 + t12213*t81*t82) + t42*t71*(t38635 + t38636 + t51395 + t51409 - 1.*t12213*t42*t66*t82 + t17099*t82*t88);
  p_output1[130]=t2267*t51135 + t1928*(t38682 + t19505*t42*t81 - 1.*t19713*t42*t82) + t42*t71*(t26338 + t38692 + t49837 + t49860 + t51504 - 1.*t19713*t88);
  p_output1[131]=t2450*t51135 + t1928*(t38715 + t19851*t42*t81 - 1.*t19947*t42*t82) + t42*t71*(t38730 + t38733 + t51843 + t51957 - 1.*t12213*t868 - 1.*t19947*t88);
  p_output1[132]=t1463*t52076 + t1341*(t1707*t38779 + t1463*t38880 + t38902 + t38903)*t71 - 1.*t1341*t52128*t82 + t7471*(t38891 + t1341*t38880*t82);
  p_output1[133]=-1.*t1341*t1379*t52076*t71 - 1.*t1382*t52128*t71 + t7471*(t38956 + t38998 - 1.*t1341*t38955*t47468 + t52228 + t52309 - 1.*t1382*t38779*t82) + t1341*t71*(t39035 + t39036 + t52541 + t53036 + t1341*t1379*t38779*t82 - 1.*t1463*t38955*t82);
  p_output1[134]=t1341*(t1842*t38779 + t1463*t39092 + t39106 + t39107 + t53084 + t53087)*t71 + t7471*(-1.*t1341*t1382*t39059 + t39082 + t1341*t39092*t82) + t52076*t9324;
  p_output1[135]=t1341*(t1463*t39200 + t39255 + t39261 + t53117 + t53118 + t53119)*t71 + t52076*t7147 + t7471*(-1.*t1341*t1382*t39143 + t39190 + t1341*t39200*t82);
  p_output1[136]=t1463*t53178 + t1397*t53190 + (-1.*t1707*t38779 - 1.*t1463*t38880 + t39339 + t39341)*t7147 + (t1422*t38779 + t1397*t38880 + t39315 + t39316)*t7471;
  p_output1[137]=-1.*t1341*t1379*t53178*t71 - 1.*t1341*t1371*t53190*t71 + t7471*(t39373 + t39376 + t53205 + t53206 + t1341*t1371*t38779*t82 - 1.*t1397*t38955*t82) + t7147*(t39454 + t39455 + t53224 + t53273 - 1.*t1341*t1379*t38779*t82 + t1463*t38955*t82);
  p_output1[138]=(-1.*t1842*t38779 - 1.*t1463*t39092 + t39479 + t39489 + t53323 + t53330)*t7147 + t53190*t7471 + (t38860 + t1397*t39092 + t39473 + t52121 + t52122 + t53317)*t7471 + t53178*t9324;
  p_output1[139]=t53178*t7147 + (-1.*t1463*t39200 + t39533 + t39535 + t53611 + t53620 + t53633)*t7147 + (t1509*t38779 + t1397*t39200 + t39507 + t39508 + t53340 + t53493)*t7471 + t53190*t7519;
  p_output1[140]=t1397*t53857 + t1341*(-1.*t1422*t38779 - 1.*t1397*t38880 + t40149 + t40158)*t71 - 1.*t1341*t54060*t82 + t7147*(t40075 - 1.*t1341*t38880*t82);
  p_output1[141]=-1.*t1341*t1371*t53857*t71 - 1.*t1382*t54060*t71 + t7147*(t40371 + t41230 + t1341*t38955*t47468 + t54069 + t54083 + t1382*t38779*t82) + t1341*t71*(t45564 + t45600 + t54136 + t54205 - 1.*t1341*t1371*t38779*t82 + t1397*t38955*t82);
  p_output1[142]=t1341*(-1.*t1397*t39092 + t39302 + t47202 + t53187 + t53189 + t54261)*t71 + t53857*t7471 + t7147*(t1341*t1382*t39059 + t46326 - 1.*t1341*t39092*t82);
  p_output1[143]=t1341*(-1.*t1509*t38779 - 1.*t1397*t39200 + t47358 + t47373 + t54280 + t54282)*t71 + t53857*t7519 + t7147*(t1341*t1382*t39143 + t47323 - 1.*t1341*t39200*t82);
  p_output1[144]=t42*(t47414 + t54346 + t54347) - 1.*t54313*t75*t81 + t42*t75*(-1.*t17099*t42 + t47440 + t47456 + t12124*t81) + t81*(t47504 + t47535 - 1.*t12124*t42*t75 - 1.*t17099*t75*t81);
  p_output1[145]=t342*t42*t54313 + t81*(t19685*t342 + t48501 + t48528 + t12057*t626 + t19505*t54377*t75 - 1.*t12124*t342*t81);
  p_output1[146]=t42*t54313*t66 + (t19893*t342 + t49682 + t49709 + t54395 + t54403 + t19851*t54377*t75)*t81;
  p_output1[147]=-1.*t54449*t66*t81 - 1.*t54501*t75*t81 + t42*t75*(t50003 + t50015 - 1.*t12124*t42*t66 - 1.*t17099*t66*t81) + t42*t66*(t50042 + t50044 + t12124*t42*t75 + t17099*t75*t81);
  p_output1[148]=t342*t42*t54501 + t42*t54449*t75 + t42*(t47414 + t50087 + t54346 + t54347 + t56035 + t19505*t54377*t66)*t75 + t42*t66*(t50186 + t50197 + t55855 + t55908 - 1.*t19505*t54377*t75 + t12124*t342*t81);
  p_output1[149]=t42*t54449*t626 + t42*t54501*t66 + t42*t66*(t51080 + t51081 + t56134 + t56135 + t56136 - 1.*t19851*t54377*t75) + t42*t75*(t50352 + t50359 + t56327 + t56350 + t19851*t54377*t66 - 1.*t12124*t626*t81);
  p_output1[150]=t42*(t51080 + t56134 + t56136) - 1.*t56369*t66*t81 + t42*t66*(t17099*t42 + t51314 + t51322 - 1.*t12124*t81) + t81*(t51395 + t51409 + t12124*t42*t66 + t17099*t66*t81);
  p_output1[151]=t42*t56369*t75 + (t49837 + t51504 + t54427 + t54442 - 1.*t19505*t54377*t66 - 1.*t19685*t75)*t81;
  p_output1[152]=t42*t56369*t626 + t81*(t51843 + t51957 - 1.*t12057*t66 - 1.*t19851*t54377*t66 - 1.*t19893*t75 + t12124*t626*t81);
  p_output1[153]=t1341*t1379*(t1382*t38777 - 1.*t1341*t38955 + t52228 + t52309) + t1382*(-1.*t1341*t1379*t38777 - 1.*t1379*t1382*t38955 + t52541 + t53036) - 1.*t1379*t1382*t56518 + t1341*(t52121 + t56636 + t56640);
  p_output1[154]=t1341*t1459*t56518 + t1382*(t1479*t38768 - 1.*t1382*t1459*t38777 + t1459*t39074 + t53084 + t53087 + t1379*t39059*t56712);
  p_output1[155]=t1341*t1371*t56518 + t1382*(t1459*t39164 + t53117 + t53118 + t1379*t39143*t56712 + t56750 + t56783);
  p_output1[156]=t1341*t1379*(-1.*t1341*t1371*t38777 - 1.*t1371*t1382*t38955 + t53205 + t53206) + t1341*t1371*(t1341*t1379*t38777 + t1379*t1382*t38955 + t53224 + t53273) - 1.*t1371*t1382*t57034 - 1.*t1379*t1382*t57050;
  p_output1[157]=t1341*t1379*t57034 + t1341*t1459*t57050 + t1341*t1371*(t1382*t1459*t38777 + t53323 + t53330 - 1.*t1379*t39059*t56712 + t57123 + t57126) + t1341*t1379*(t52121 + t53317 + t56636 + t56640 + t1371*t39059*t56712 + t57157);
  p_output1[158]=t1341*t1479*t57034 + t1341*t1371*t57050 + t1341*t1371*(t53611 + t53620 - 1.*t1379*t39143*t56712 + t57192 + t57193 + t57202) + t1341*t1379*(-1.*t1382*t1479*t38777 + t53340 + t53493 + t1371*t39143*t56712 + t57497 + t57626);
  p_output1[159]=t1341*t1371*(-1.*t1382*t38777 + t1341*t38955 + t54069 + t54083) + t1382*(t1341*t1371*t38777 + t1371*t1382*t38955 + t54136 + t54205) + t1341*(t53611 + t57192 + t57202) - 1.*t1371*t1382*t58169;
  p_output1[160]=t1382*(-1.*t1379*t39074 + t53187 + t54261 - 1.*t1371*t39059*t56712 + t57009 + t57025) + t1341*t1379*t58169;
  p_output1[161]=t1382*(-1.*t1371*t38768 + t1382*t1479*t38777 - 1.*t1379*t39164 + t54280 + t54282 - 1.*t1371*t39143*t56712) + t1341*t1479*t58169;
  p_output1[162]=-0.1575*t1379 - 0.2255*t1479;
  p_output1[163]=-0.2255*t1379 - 0.1575*t1479;
  p_output1[164]=t1379*(-1.*t1459*t38759 - 1.*t1379*t39059 + t57123 + t57126) + t1459*(t1379*t38759 + t1371*t39059 + t56636 + t57157) + t1479*t59393 + t1459*t59550;
  p_output1[165]=t1379*(-1.*t1371*t38759 - 1.*t1379*t39143 + t57193 + t57202) + t1459*(t1479*t38759 + t1371*t39143 + t57497 + t57626) + t1379*t59393 + t1371*t59550;
  p_output1[166]=0.068*t1459;
  p_output1[167]=0.068*t1371;
  p_output1[168]=-0.325*t1353 - 1.*t1353*t38757 - 1.*t1353*t39141;
  p_output1[169]=-0.325*t1369 - 1.*t1369*t38757 - 1.*t1369*t39141;
  p_output1[170]=0.2255*t626 + 0.1575*t75;
  p_output1[171]=0.1575*t626 + 0.2255*t75;
  p_output1[172]=t342*t59748 + t59710*t626 + t342*(t54346 + t56035 + t19505*t66 + t11950*t75) + t75*(-1.*t11950*t342 + t55855 + t55908 - 1.*t19505*t75);
  p_output1[173]=t59748*t66 + t342*(t56327 + t56350 + t11950*t626 + t19851*t66) + t59710*t75 + t75*(t56135 + t56136 - 1.*t11950*t66 - 1.*t19851*t75);
  p_output1[174]=-0.068*t342;
  p_output1[175]=-0.068*t66;
  p_output1[176]=0.325*t51 - 1.*t11911*t51 - 1.*t19844*t51;
  p_output1[177]=0.325*t64 - 1.*t11911*t64 - 1.*t19844*t64;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
