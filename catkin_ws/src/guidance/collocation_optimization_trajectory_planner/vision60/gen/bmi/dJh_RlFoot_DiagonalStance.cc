/*
 * Automatically Generated from Mathematica.
 * Sat 11 Jun 2022 14:27:17 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t7282;
  double t6900;
  double t6908;
  double t8547;
  double t7060;
  double t8844;
  double t8899;
  double t4904;
  double t11272;
  double t15107;
  double t17016;
  double t6890;
  double t17017;
  double t17201;
  double t9002;
  double t17020;
  double t17197;
  double t1634;
  double t17203;
  double t17218;
  double t17751;
  double t17762;
  double t17763;
  double t17764;
  double t17770;
  double t17771;
  double t17772;
  double t17792;
  double t17802;
  double t17923;
  double t17960;
  double t17962;
  double t17968;
  double t17952;
  double t17973;
  double t17975;
  double t17980;
  double t17981;
  double t17982;
  double t17984;
  double t17985;
  double t17986;
  double t17999;
  double t18001;
  double t18002;
  double t18013;
  double t18017;
  double t18018;
  double t18082;
  double t18083;
  double t18088;
  double t18090;
  double t18091;
  double t18092;
  double t18012;
  double t18078;
  double t18093;
  double t18094;
  double t18011;
  double t18095;
  double t18096;
  double t18098;
  double t18099;
  double t18100;
  double t18101;
  double t18102;
  double t18106;
  double t18107;
  double t18108;
  double t18109;
  double t18110;
  double t18111;
  double t18112;
  double t18113;
  double t18114;
  double t18115;
  double t18133;
  double t18134;
  double t18136;
  double t18129;
  double t18130;
  double t18132;
  double t18119;
  double t18120;
  double t18124;
  double t18006;
  double t18007;
  double t18009;
  double t18097;
  double t18116;
  double t18117;
  double t18151;
  double t18152;
  double t18153;
  double t18142;
  double t18146;
  double t18147;
  double t18197;
  double t18198;
  double t18202;
  double t18159;
  double t18160;
  double t18161;
  double t18289;
  double t18290;
  double t18291;
  double t18154;
  double t18173;
  double t18309;
  double t18310;
  double t18311;
  double t18313;
  double t18320;
  double t18321;
  double t18322;
  double t18155;
  double t18156;
  double t18157;
  double t18324;
  double t18328;
  double t18175;
  double t18179;
  double t18180;
  double t18208;
  double t18225;
  double t18371;
  double t18373;
  double t18209;
  double t18213;
  double t18214;
  double t18385;
  double t18387;
  double t18226;
  double t18230;
  double t18234;
  double t18260;
  double t18281;
  double t18461;
  double t18261;
  double t18262;
  double t18264;
  double t18468;
  double t18470;
  double t18282;
  double t18283;
  double t18284;
  double t18305;
  double t18511;
  double t18512;
  double t18514;
  double t18518;
  double t18519;
  double t18316;
  double t18542;
  double t18543;
  double t18544;
  double t18306;
  double t18307;
  double t18517;
  double t18520;
  double t18525;
  double t18526;
  double t18317;
  double t18318;
  double t18553;
  double t18554;
  double t18559;
  double t18564;
  double t18565;
  double t18572;
  double t18573;
  double t18574;
  double t18576;
  double t18577;
  double t18578;
  double t18583;
  double t18584;
  double t18585;
  double t18587;
  double t18588;
  double t18589;
  double t18380;
  double t18376;
  double t18593;
  double t18598;
  double t18599;
  double t18637;
  double t18638;
  double t18377;
  double t18378;
  double t18646;
  double t18650;
  double t18381;
  double t18382;
  double t18680;
  double t18682;
  double t18536;
  double t18537;
  double t18539;
  double t18687;
  double t18688;
  double t18613;
  double t18617;
  double t18618;
  double t18447;
  double t18473;
  double t18451;
  double t18455;
  double t18719;
  double t18720;
  double t18555;
  double t18725;
  double t18727;
  double t18474;
  double t18475;
  double t18751;
  double t18754;
  double t18758;
  double t18760;
  double t18507;
  double t18508;
  double t18783;
  double t18784;
  double t18785;
  double t18800;
  double t18801;
  double t17993;
  double t17995;
  double t17996;
  double t18793;
  double t18794;
  double t18795;
  double t18796;
  double t18791;
  double t18799;
  double t18802;
  double t18824;
  double t18825;
  double t18826;
  double t18815;
  double t18816;
  double t18817;
  double t18820;
  double t18821;
  double t18822;
  double t18831;
  double t18832;
  double t18833;
  double t18827;
  double t18830;
  double t18835;
  double t18841;
  double t18842;
  double t18843;
  double t18845;
  double t18846;
  double t18847;
  double t18849;
  double t18850;
  double t18851;
  double t18654;
  double t18655;
  double t18656;
  double t18658;
  double t18659;
  double t18660;
  double t18803;
  double t18530;
  double t18531;
  double t18871;
  double t18872;
  double t18879;
  double t18877;
  double t18869;
  double t18873;
  double t18904;
  double t18907;
  double t18909;
  double t18856;
  double t18857;
  double t18858;
  double t18715;
  double t18716;
  double t18932;
  double t18951;
  double t18955;
  double t18974;
  double t18975;
  double t18976;
  double t18988;
  double t18989;
  double t18990;
  double t18998;
  double t18999;
  double t19000;
  double t19004;
  double t19005;
  double t19006;
  double t19009;
  double t19010;
  double t19011;
  double t18985;
  double t18986;
  double t18991;
  double t19025;
  double t19026;
  double t19027;
  double t19021;
  double t19022;
  double t19023;
  double t19028;
  double t19031;
  double t19038;
  double t19039;
  double t19040;
  double t19042;
  double t19043;
  double t19044;
  double t18732;
  double t18733;
  double t18884;
  double t18885;
  double t18891;
  double t18892;
  double t19057;
  double t19062;
  double t19067;
  double t19063;
  double t19065;
  double t19058;
  double t19085;
  double t19088;
  double t18997;
  double t19001;
  double t19002;
  double t19092;
  double t17780;
  double t17785;
  double t17786;
  double t19121;
  double t19123;
  double t19140;
  double t19143;
  double t19146;
  t7282 = Cos(var1[10]);
  t6900 = Cos(var1[11]);
  t6908 = Sin(var1[10]);
  t8547 = Sin(var1[11]);
  t7060 = t6900*t6908;
  t8844 = -1.*t7282*t8547;
  t8899 = t7060 + t8844;
  t4904 = Cos(var1[5]);
  t11272 = t7282*t6900;
  t15107 = t6908*t8547;
  t17016 = t11272 + t15107;
  t6890 = Sin(var1[9]);
  t17017 = Sin(var1[5]);
  t17201 = Cos(var1[3]);
  t9002 = -1.*t4904*t6890*t8899;
  t17020 = t17016*t17017;
  t17197 = t9002 + t17020;
  t1634 = Sin(var1[3]);
  t17203 = Cos(var1[9]);
  t17218 = Cos(var1[4]);
  t17751 = t17203*t17218*t8899;
  t17762 = Sin(var1[4]);
  t17763 = t4904*t17016;
  t17764 = t6890*t8899*t17017;
  t17770 = t17763 + t17764;
  t17771 = -1.*t17762*t17770;
  t17772 = t17751 + t17771;
  t17792 = t17218*t6890;
  t17802 = t17203*t17762*t17017;
  t17923 = t17792 + t17802;
  t17960 = -1.*t6900*t6908;
  t17962 = t7282*t8547;
  t17968 = t17960 + t17962;
  t17952 = -1.*t4904*t6890*t17016;
  t17973 = t17968*t17017;
  t17975 = t17952 + t17973;
  t17980 = t17203*t17218*t17016;
  t17981 = t4904*t17968;
  t17982 = t6890*t17016*t17017;
  t17984 = t17981 + t17982;
  t17985 = -1.*t17762*t17984;
  t17986 = t17980 + t17985;
  t17999 = -1.*t17203*t8899*t17762;
  t18001 = -1.*t17218*t17770;
  t18002 = t17999 + t18001;
  t18013 = -0.0641*t6900;
  t18017 = -0.28*t8547;
  t18018 = t18013 + t18017;
  t18082 = -1.*t6900;
  t18083 = 1. + t18082;
  t18088 = -0.575*t18083;
  t18090 = -0.295*t6900;
  t18091 = -0.0641*t8547;
  t18092 = t18088 + t18090 + t18091;
  t18012 = 0.325*t6908;
  t18078 = t7282*t18018;
  t18093 = t6908*t18092;
  t18094 = t18012 + t18078 + t18093;
  t18011 = 0.068*t6890;
  t18095 = t17203*t18094;
  t18096 = t18011 + t18095;
  t18098 = -1.*t7282;
  t18099 = 1. + t18098;
  t18100 = -0.325*t18099;
  t18101 = -1.*t6908*t18018;
  t18102 = t7282*t18092;
  t18106 = t18100 + t18101 + t18102;
  t18107 = t4904*t18106;
  t18108 = -1.*t17203;
  t18109 = 1. + t18108;
  t18110 = 0.1575*t18109;
  t18111 = 0.2255*t17203;
  t18112 = -1.*t6890*t18094;
  t18113 = t18110 + t18111 + t18112;
  t18114 = -1.*t18113*t17017;
  t18115 = t18107 + t18114;
  t18133 = t17218*t18096;
  t18134 = -1.*t17762*t18115;
  t18136 = t18133 + t18134;
  t18129 = t6890*t17762;
  t18130 = -1.*t17203*t17218*t17017;
  t18132 = t18129 + t18130;
  t18119 = t18096*t17762;
  t18120 = t17218*t18115;
  t18124 = t18119 + t18120;
  t18006 = t17203*t17016*t17762;
  t18007 = t17218*t17984;
  t18009 = t18006 + t18007;
  t18097 = -1.*t18096*t17762;
  t18116 = -1.*t17218*t18115;
  t18117 = t18097 + t18116;
  t18151 = t4904*t18113;
  t18152 = t18106*t17017;
  t18153 = t18151 + t18152;
  t18142 = -1.*t6890*t17762;
  t18146 = t17203*t17218*t17017;
  t18147 = t18142 + t18146;
  t18197 = t17203*t8899*t17762;
  t18198 = t17218*t17770;
  t18202 = t18197 + t18198;
  t18159 = -1.*t17203*t17016*t17762;
  t18160 = -1.*t17218*t17984;
  t18161 = t18159 + t18160;
  t18289 = t4904*t6890*t8899;
  t18290 = -1.*t17016*t17017;
  t18291 = t18289 + t18290;
  t18154 = -1.*t17203*t4904*t18153;
  t18173 = t18153*t17975;
  t18309 = -1.*t4904*t18113;
  t18310 = -1.*t18106*t17017;
  t18311 = t18309 + t18310;
  t18313 = t17203*t17017*t18153;
  t18320 = t4904*t6890*t17016;
  t18321 = -1.*t17968*t17017;
  t18322 = t18320 + t18321;
  t18155 = -1.*t18132*t18124;
  t18156 = -1.*t17923*t18136;
  t18157 = t18154 + t18155 + t18156;
  t18324 = t18115*t17975;
  t18328 = t18153*t17984;
  t18175 = t18124*t18009;
  t18179 = t18136*t17986;
  t18180 = t18173 + t18175 + t18179;
  t18208 = t18153*t17197;
  t18225 = -1.*t18153*t17975;
  t18371 = t18153*t17770;
  t18373 = t18115*t17197;
  t18209 = t18124*t18202;
  t18213 = t18136*t17772;
  t18214 = t18208 + t18209 + t18213;
  t18385 = -1.*t18115*t17975;
  t18387 = -1.*t18153*t17984;
  t18226 = -1.*t18124*t18009;
  t18230 = -1.*t18136*t17986;
  t18234 = t18225 + t18226 + t18230;
  t18260 = t17203*t4904*t18153;
  t18281 = -1.*t18153*t17197;
  t18461 = -1.*t17203*t17017*t18153;
  t18261 = t18132*t18124;
  t18262 = t17923*t18136;
  t18264 = t18260 + t18261 + t18262;
  t18468 = -1.*t18153*t17770;
  t18470 = -1.*t18115*t17197;
  t18282 = -1.*t18124*t18202;
  t18283 = -1.*t18136*t17772;
  t18284 = t18281 + t18282 + t18283;
  t18305 = -1.*t6890*t18096;
  t18511 = -0.068*t6890;
  t18512 = -1.*t17203*t18094;
  t18514 = t18511 + t18512;
  t18518 = 0.068*t17203;
  t18519 = t18518 + t18112;
  t18316 = t17203*t18096*t17016;
  t18542 = -1.*t17218*t6890*t8899;
  t18543 = -1.*t17203*t8899*t17762*t17017;
  t18544 = t18542 + t18543;
  t18306 = t17203*t17017*t18115;
  t18307 = t18305 + t18306 + t18154;
  t18517 = -1.*t17203*t18096;
  t18520 = -1.*t6890*t18519;
  t18525 = -1.*t6890*t18096*t17016;
  t18526 = t17203*t18519*t17016;
  t18317 = t18115*t17984;
  t18318 = t18316 + t18173 + t18317;
  t18553 = Power(t4904,2);
  t18554 = -1.*t17203*t18553*t18514;
  t18559 = t4904*t6890*t18153;
  t18564 = -1.*t17203*t4904*t17016*t18153;
  t18565 = t4904*t18514*t17975;
  t18572 = -1.*t6890*t17016*t17762;
  t18573 = t17203*t17218*t17016*t17017;
  t18574 = t18572 + t18573;
  t18576 = t18519*t17762;
  t18577 = -1.*t17218*t18514*t17017;
  t18578 = t18576 + t18577;
  t18583 = t17218*t18519;
  t18584 = t18514*t17762*t17017;
  t18585 = t18583 + t18584;
  t18587 = t17203*t17762;
  t18588 = t17218*t6890*t17017;
  t18589 = t18587 + t18588;
  t18380 = -1.*t17203*t18096*t17016;
  t18376 = t17203*t18096*t8899;
  t18593 = t17203*t17218;
  t18598 = -1.*t6890*t17762*t17017;
  t18599 = t18593 + t18598;
  t18637 = -1.*t6890*t18096*t8899;
  t18638 = t17203*t18519*t8899;
  t18377 = t18115*t17770;
  t18378 = t18376 + t18377 + t18208;
  t18646 = t6890*t18096*t17016;
  t18650 = -1.*t17203*t18519*t17016;
  t18381 = -1.*t18115*t17984;
  t18382 = t18380 + t18225 + t18381;
  t18680 = -1.*t17203*t4904*t8899*t18153;
  t18682 = t4904*t18514*t17197;
  t18536 = -1.*t6890*t8899*t17762;
  t18537 = t17203*t17218*t8899*t17017;
  t18539 = t18536 + t18537;
  t18687 = t17203*t4904*t17016*t18153;
  t18688 = -1.*t4904*t18514*t17975;
  t18613 = -1.*t17218*t6890*t17016;
  t18617 = -1.*t17203*t17016*t17762*t17017;
  t18618 = t18613 + t18617;
  t18447 = t6890*t18096;
  t18473 = -1.*t17203*t18096*t8899;
  t18451 = -1.*t17203*t17017*t18115;
  t18455 = t18447 + t18451 + t18260;
  t18719 = t17203*t18096;
  t18720 = t6890*t18519;
  t18555 = Power(t17017,2);
  t18725 = t6890*t18096*t8899;
  t18727 = -1.*t17203*t18519*t8899;
  t18474 = -1.*t18115*t17770;
  t18475 = t18473 + t18474 + t18281;
  t18751 = t17203*t18553*t18514;
  t18754 = -1.*t4904*t6890*t18153;
  t18758 = t17203*t4904*t8899*t18153;
  t18760 = -1.*t4904*t18514*t17197;
  t18507 = -1.*t17203*t18113;
  t18508 = t18305 + t18507;
  t18783 = -1.*t7282*t6900;
  t18784 = -1.*t6908*t8547;
  t18785 = t18783 + t18784;
  t18800 = 0.325*t7282;
  t18801 = t18800 + t18101 + t18102;
  t17993 = t17201*t17975;
  t17995 = -1.*t1634*t17986;
  t17996 = t17993 + t17995;
  t18793 = -0.325*t6908;
  t18794 = -1.*t7282*t18018;
  t18795 = -1.*t6908*t18092;
  t18796 = t18793 + t18794 + t18795;
  t18791 = t17203*t18096*t17968;
  t18799 = Power(t17203,2);
  t18802 = t18799*t18801*t17016;
  t18824 = -1.*t4904*t6890*t18801;
  t18825 = t18796*t17017;
  t18826 = t18824 + t18825;
  t18815 = -1.*t4904*t6890*t17968;
  t18816 = t18785*t17017;
  t18817 = t18815 + t18816;
  t18820 = t4904*t18796;
  t18821 = t6890*t18801*t17017;
  t18822 = t18820 + t18821;
  t18831 = t4904*t18785;
  t18832 = t6890*t17968*t17017;
  t18833 = t18831 + t18832;
  t18827 = -1.*t17203*t4904*t18826;
  t18830 = t18826*t17975;
  t18835 = t18153*t18817;
  t18841 = t17203*t17968*t17762;
  t18842 = t17218*t18833;
  t18843 = t18841 + t18842;
  t18845 = t17203*t18801*t17762;
  t18846 = t17218*t18822;
  t18847 = t18845 + t18846;
  t18849 = t17203*t17218*t18801;
  t18850 = -1.*t17762*t18822;
  t18851 = t18849 + t18850;
  t18654 = -1.*t18106*t17968;
  t18655 = t6890*t18113*t17016;
  t18656 = t18654 + t18380 + t18655;
  t18658 = -1.*t6890*t18113*t8899;
  t18659 = t18106*t17016;
  t18660 = t18376 + t18658 + t18659;
  t18803 = Power(t6890,2);
  t18530 = t18106*t17968;
  t18531 = -1.*t6890*t18113*t17016;
  t18871 = -1.*t18796*t17968;
  t18872 = -1.*t18106*t18785;
  t18879 = t18796*t17016;
  t18877 = t18799*t18801*t8899;
  t18869 = -1.*t17203*t18096*t17968;
  t18873 = -1.*t18799*t18801*t17016;
  t18904 = t18826*t17197;
  t18907 = -1.*t18826*t17975;
  t18909 = -1.*t18153*t18817;
  t18856 = t17203*t17218*t17968;
  t18857 = -1.*t17762*t18833;
  t18858 = t18856 + t18857;
  t18715 = t17203*t18113;
  t18716 = t18447 + t18715;
  t18932 = -1.*t18799*t18801*t8899;
  t18951 = t17203*t4904*t18826;
  t18955 = -1.*t18826*t17197;
  t18974 = -0.28*t6900;
  t18975 = 0.0641*t8547;
  t18976 = t18974 + t18975;
  t18988 = t6908*t18018;
  t18989 = t7282*t18976;
  t18990 = t18988 + t18989;
  t18998 = t4904*t8899;
  t18999 = t6890*t18785*t17017;
  t19000 = t18998 + t18999;
  t19004 = -1.*t4904*t6890*t18785;
  t19005 = t8899*t17017;
  t19006 = t19004 + t19005;
  t19009 = t17203*t17218*t18785;
  t19010 = -1.*t17762*t19000;
  t19011 = t19009 + t19010;
  t18985 = -1.*t6908*t18976;
  t18986 = t18078 + t18985;
  t18991 = t18799*t18990*t17016;
  t19025 = -1.*t4904*t6890*t18990;
  t19026 = t18986*t17017;
  t19027 = t19025 + t19026;
  t19021 = t4904*t18986;
  t19022 = t6890*t18990*t17017;
  t19023 = t19021 + t19022;
  t19028 = -1.*t17203*t4904*t19027;
  t19031 = t19027*t17975;
  t19038 = t17203*t18990*t17762;
  t19039 = t17218*t19023;
  t19040 = t19038 + t19039;
  t19042 = t17203*t17218*t18990;
  t19043 = -1.*t17762*t19023;
  t19044 = t19042 + t19043;
  t18732 = t6890*t18113*t8899;
  t18733 = -1.*t18106*t17016;
  t18884 = t18094*t8899;
  t18885 = t18884 + t18659;
  t18891 = -1.*t18094*t17016;
  t18892 = t18654 + t18891;
  t19057 = -1.*t18986*t17968;
  t19062 = t18106*t8899;
  t19067 = t18986*t17016;
  t19063 = t18799*t18990*t8899;
  t19065 = t17203*t18096*t18785;
  t19058 = -1.*t18799*t18990*t17016;
  t19085 = t18153*t19006;
  t19088 = t19027*t17197;
  t18997 = t17203*t18785*t17762;
  t19001 = t17218*t19000;
  t19002 = t18997 + t19001;
  t19092 = -1.*t19027*t17975;
  t17780 = t17201*t17197;
  t17785 = -1.*t1634*t17772;
  t17786 = t17780 + t17785;
  t19121 = -1.*t18799*t18990*t8899;
  t19123 = -1.*t17203*t18096*t18785;
  t19140 = t17203*t4904*t19027;
  t19143 = -1.*t18153*t19006;
  t19146 = -1.*t19027*t17197;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t1634*t17197 - 1.*t17201*t17772)*var2[1] + t17786*var2[2];
  p_output1[10]=(-1.*t17201*t17923 - 1.*t1634*t17203*t4904)*var2[1] + (-1.*t1634*t17923 + t17201*t17203*t4904)*var2[2];
  p_output1[11]=(-1.*t1634*t17975 - 1.*t17201*t17986)*var2[1] + t17996*var2[2];
  p_output1[12]=t17772*var2[0] - 1.*t1634*t18002*var2[1] + t17201*t18002*var2[2] + (t18009*(-1.*t17923*t18117 - 1.*t17923*t18124 - 1.*t18132*t18136 - 1.*t18136*t18147) + t17986*t18157 + t18132*(t17986*t18117 + t17986*t18124 + t18009*t18136 + t18136*t18161) + t17923*t18180)*var2[3];
  p_output1[13]=t17923*var2[0] - 1.*t1634*t18147*var2[1] + t17201*t18147*var2[2] + ((-1.*t17986*t18117 - 1.*t17986*t18124 - 1.*t18009*t18136 - 1.*t18136*t18161)*t18202 + t18009*(t17772*t18117 + t17772*t18124 + t18002*t18136 + t18136*t18202) + t17986*t18214 + t17772*t18234)*var2[3];
  p_output1[14]=t17986*var2[0] - 1.*t1634*t18161*var2[1] + t17201*t18161*var2[2] + ((t17923*t18117 + t17923*t18124 + t18132*t18136 + t18136*t18147)*t18202 + t18132*(-1.*t17772*t18117 - 1.*t17772*t18124 - 1.*t18002*t18136 - 1.*t18136*t18202) + t17772*t18264 + t17923*t18284)*var2[3];
  p_output1[15]=t17218*t18291*var2[0] + (t17201*t17770 + t1634*t17762*t18291)*var2[1] + (t1634*t17770 - 1.*t17201*t17762*t18291)*var2[2] + (t17218*t18157*t18322 + t18132*(-1.*t17762*t17986*t18311 + t17218*t18009*t18311 + t17218*t18124*t18322 - 1.*t17762*t18136*t18322 + t18324 + t18328) - 1.*t17203*t17218*t18180*t4904 + t18009*(t17762*t17923*t18311 - 1.*t17218*t18132*t18311 + t18313 - 1.*t17203*t18115*t4904 + t17203*t17218*t18124*t4904 - 1.*t17203*t17762*t18136*t4904))*var2[3] + (t17984*t18307 + t17975*(t17017*t17203*t18311 + t18313) - 1.*t17017*t17203*t18318 + t17203*(t17984*t18311 + t18115*t18322 + t18324 + t18328)*t4904)*var2[4];
  p_output1[16]=-1.*t17203*t17218*t4904*var2[0] + (-1.*t17017*t17201*t17203 - 1.*t1634*t17203*t17762*t4904)*var2[1] + (-1.*t1634*t17017*t17203 + t17201*t17203*t17762*t4904)*var2[2] + (t17218*t18234*t18291 + t17218*t18214*t18322 + t18009*(t17218*t18124*t18291 - 1.*t17762*t18136*t18291 - 1.*t17762*t17772*t18311 + t17218*t18202*t18311 + t18371 + t18373) + t18202*(t17762*t17986*t18311 - 1.*t17218*t18009*t18311 - 1.*t17218*t18124*t18322 + t17762*t18136*t18322 + t18385 + t18387))*var2[3] + (t17975*(t18115*t18291 + t17770*t18311 + t18371 + t18373) + t17984*t18378 + t17770*t18382 + t17197*(-1.*t17984*t18311 - 1.*t18115*t18322 + t18385 + t18387))*var2[4];
  p_output1[17]=t17218*t18322*var2[0] + (t17201*t17984 + t1634*t17762*t18322)*var2[1] + (t1634*t17984 - 1.*t17201*t17762*t18322)*var2[2] + (t17218*t18264*t18291 + t18132*(-1.*t17218*t18124*t18291 + t17762*t18136*t18291 + t17762*t17772*t18311 - 1.*t17218*t18202*t18311 + t18468 + t18470) - 1.*t17203*t17218*t18284*t4904 + t18202*(-1.*t17762*t17923*t18311 + t17218*t18132*t18311 + t18461 + t17203*t18115*t4904 - 1.*t17203*t17218*t18124*t4904 + t17203*t17762*t18136*t4904))*var2[3] + (t17770*t18455 + t17197*(-1.*t17017*t17203*t18311 + t18461) - 1.*t17017*t17203*t18475 + t17203*(-1.*t18115*t18291 - 1.*t17770*t18311 + t18468 + t18470)*t4904)*var2[4];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=t18539*var2[0] + (-1.*t1634*t18544 - 1.*t17201*t17203*t4904*t8899)*var2[1] + (t17201*t18544 - 1.*t1634*t17203*t4904*t8899)*var2[2] + (t18157*t18574 + t18180*t18589 + t18009*(t18554 + t18559 - 1.*t18132*t18578 - 1.*t17923*t18585 - 1.*t18124*t18589 - 1.*t18136*t18599) + t18132*(t18564 + t18565 + t18124*t18574 + t18009*t18578 + t17986*t18585 + t18136*t18618))*var2[3] + (-1.*t17016*t17203*t18307*t4904 + t17203*(t17016*t17017*t17203*t18115 - 1.*t17017*t17984*t18514 + t18525 + t18526 + t18564 + t18565)*t4904 - 1.*t18318*t4904*t6890 + t17975*(t18517 + t18520 + t18554 - 1.*t17203*t18514*t18555 + t18559 - 1.*t17017*t18115*t6890))*var2[4] + (t17203*(t18316 + t18530 + t18531) - 1.*t17016*t18508*t6890 + t17016*t17203*(-1.*t17203*t18514 + t18517 + t18520 + t18113*t6890) + t6890*(-1.*t17016*t17203*t18113 + t18525 + t18526 - 1.*t17016*t18514*t6890))*var2[5];
  p_output1[28]=t18589*var2[0] + (-1.*t1634*t18599 - 1.*t17201*t4904*t6890)*var2[1] + (t17201*t18599 - 1.*t1634*t4904*t6890)*var2[2] + (t18234*t18539 + t18214*t18574 + t18009*(t18124*t18539 + t18136*t18544 + t18202*t18578 + t17772*t18585 + t18680 + t18682) + t18202*(-1.*t18124*t18574 - 1.*t18009*t18578 - 1.*t17986*t18585 - 1.*t18136*t18618 + t18687 + t18688))*var2[3] + (t17197*(-1.*t17016*t17017*t17203*t18115 + t17017*t17984*t18514 + t18646 + t18650 + t18687 + t18688) - 1.*t17016*t17203*t18378*t4904 - 1.*t17203*t18382*t4904*t8899 + t17975*(-1.*t17017*t17770*t18514 + t18637 + t18638 + t18680 + t18682 + t17017*t17203*t18115*t8899))*var2[4] + (-1.*t17016*t18660*t6890 - 1.*t18656*t6890*t8899 + t17203*(t17016*t17203*t18113 + t18646 + t18650 + t17016*t18514*t6890)*t8899 + t17016*t17203*(t18637 + t18638 - 1.*t17203*t18113*t8899 - 1.*t18514*t6890*t8899))*var2[5];
  p_output1[29]=t18574*var2[0] + (-1.*t1634*t18618 - 1.*t17016*t17201*t17203*t4904)*var2[1] + (t17201*t18618 - 1.*t1634*t17016*t17203*t4904)*var2[2] + (t18264*t18539 + t18284*t18589 + t18202*(t18132*t18578 + t17923*t18585 + t18124*t18589 + t18136*t18599 + t18751 + t18754) + t18132*(-1.*t18124*t18539 - 1.*t18136*t18544 - 1.*t18202*t18578 - 1.*t17772*t18585 + t18758 + t18760))*var2[3] + (-1.*t18475*t4904*t6890 + t17197*(t17203*t18514*t18555 + t18719 + t18720 + t18751 + t18754 + t17017*t18115*t6890) - 1.*t17203*t18455*t4904*t8899 + t17203*t4904*(t17017*t17770*t18514 + t18725 + t18727 + t18758 + t18760 - 1.*t17017*t17203*t18115*t8899))*var2[4] + (t17203*(t18473 + t18732 + t18733) - 1.*t18716*t6890*t8899 + t17203*(t17203*t18514 + t18719 + t18720 - 1.*t18113*t6890)*t8899 + t6890*(t18725 + t18727 + t17203*t18113*t8899 + t18514*t6890*t8899))*var2[5];
  p_output1[30]=t18009*var2[0] + t17996*var2[1] + (t1634*t17975 + t17201*t17986)*var2[2] + (t18157*t18843 + t18009*(t18827 - 1.*t18132*t18847 - 1.*t17923*t18851) + t18132*(t18830 + t18835 + t18124*t18843 + t18009*t18847 + t17986*t18851 + t18136*t18858))*var2[3] + (t18307*t18817 + t17203*(t18791 + t18802 + t17984*t18822 + t18830 + t18115*t18833 + t18835)*t4904 + t17975*(t17017*t17203*t18822 + t18827 - 1.*t17203*t18801*t6890))*var2[4] + (t17203*t17968*t18508 + t6890*(t18106*t18785 + t18791 + t17968*t18796 + t18802 + t17016*t18801*t18803 - 1.*t17968*t18113*t6890))*var2[5] + (-0.1575*t17016 - 0.2255*t18785)*var2[9];
  p_output1[31]=(t18009*t18234 + t18214*t18843 + t18009*(t18173 + t18175 + t18179 + t18202*t18847 + t17772*t18851 + t18904) + t18202*(-1.*t18124*t18843 - 1.*t18009*t18847 - 1.*t17986*t18851 - 1.*t18136*t18858 + t18907 + t18909))*var2[3] + (t17975*t18382 + t18378*t18817 + t17975*(t18173 + t18316 + t18317 + t17770*t18822 + t18877 + t18904) + t17197*(-1.*t17984*t18822 - 1.*t18115*t18833 + t18869 + t18873 + t18907 + t18909))*var2[4] + (t17016*t17203*t18656 + t17203*t17968*t18660 + t17203*(-1.*t17016*t18801*t18803 + t18869 + t18871 + t18872 + t18873 + t17968*t18113*t6890)*t8899 + t17016*t17203*(t18316 + t18530 + t18531 + t18877 + t18879 + t18801*t18803*t8899))*var2[5] + (t17016*(-1.*t17968*t18094 - 1.*t17016*t18801 + t18871 + t18872) + t18785*t18885 + t17968*t18892 + t17968*(t17016*t18094 + t18530 + t18879 + t18801*t8899))*var2[9];
  p_output1[32]=t18843*var2[0] + (t17201*t18817 - 1.*t1634*t18858)*var2[1] + (t1634*t18817 + t17201*t18858)*var2[2] + (t18009*t18264 + t18202*(t18132*t18847 + t17923*t18851 + t18951) + t18132*(t18225 + t18226 + t18230 - 1.*t18202*t18847 - 1.*t17772*t18851 + t18955))*var2[3] + (t17975*t18455 + t17203*(t18225 + t18380 + t18381 - 1.*t17770*t18822 + t18932 + t18955)*t4904 + t17197*(-1.*t17017*t17203*t18822 + t18951 + t17203*t18801*t6890))*var2[4] + (t17016*t17203*t18716 + t6890*(t18380 + t18654 + t18655 - 1.*t17016*t18796 + t18932 - 1.*t18801*t18803*t8899))*var2[5] + 0.068*t17968*var2[9];
  p_output1[33]=t19002*var2[0] + (t17201*t19006 - 1.*t1634*t19011)*var2[1] + (t1634*t19006 + t17201*t19011)*var2[2] + (t18157*t18202 + t18009*(t19028 - 1.*t18132*t19040 - 1.*t17923*t19044) + t18132*(t18208 + t18209 + t18213 + t19031 + t18009*t19040 + t17986*t19044))*var2[3] + (t17197*t18307 + t17203*(t18208 + t18376 + t18377 + t18991 + t17984*t19023 + t19031)*t4904 + t17975*(t17017*t17203*t19023 + t19028 - 1.*t17203*t18990*t6890))*var2[4] + ((t18376 + t18658 + t18659 + t17968*t18986 + t17016*t18803*t18990 + t18991)*t6890 + t17203*t18508*t8899)*var2[5] + (-0.2255*t17016 - 0.1575*t18785)*var2[9] + (-0.325*t6900 - 1.*t18092*t6900 - 1.*t18976*t6900)*var2[10];
  p_output1[34]=(t18202*t18214 + t18234*t19002 + t18009*(t18124*t19002 + t18136*t19011 + t18202*t19040 + t17772*t19044 + t19085 + t19088) + t18202*(t18281 + t18282 + t18283 - 1.*t18009*t19040 - 1.*t17986*t19044 + t19092))*var2[3] + (t17197*t18378 + t18382*t19006 + t17975*(t18115*t19000 + t17770*t19023 + t19063 + t19065 + t19085 + t19088) + t17197*(t18281 + t18473 + t18474 - 1.*t17984*t19023 + t19058 + t19092))*var2[4] + (t17203*t18656*t18785 + t17203*t18660*t8899 + t17203*(t18473 + t18732 + t18733 - 1.*t17016*t18803*t18990 + t19057 + t19058)*t8899 + t17016*t17203*(t19062 + t19063 + t19065 + t19067 - 1.*t18113*t18785*t6890 + t18803*t18990*t8899))*var2[5] + (t17016*t18885 + t18892*t8899 + t17016*(t18733 - 1.*t17016*t18990 + t19057 - 1.*t18094*t8899) + t17968*(t18094*t18785 + t19062 + t19067 + t18990*t8899))*var2[9];
  p_output1[35]=t18202*var2[0] + t17786*var2[1] + (t1634*t17197 + t17201*t17772)*var2[2] + (t18264*t19002 + t18202*(t18132*t19040 + t17923*t19044 + t19140) + t18132*(-1.*t18124*t19002 - 1.*t18136*t19011 - 1.*t18202*t19040 - 1.*t17772*t19044 + t19143 + t19146))*var2[3] + (t18455*t19006 + t17203*(-1.*t18115*t19000 - 1.*t17770*t19023 + t19121 + t19123 + t19143 + t19146)*t4904 + t17197*(-1.*t17017*t17203*t19023 + t19140 + t17203*t18990*t6890))*var2[4] + (t17203*t18716*t18785 + t6890*(-1.*t17016*t18986 + t19121 + t19123 + t18113*t18785*t6890 - 1.*t18106*t8899 - 1.*t18803*t18990*t8899))*var2[5] + 0.068*t8899*var2[9] + (-0.325*t8547 - 1.*t18092*t8547 - 1.*t18976*t8547)*var2[10];
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJh_RlFoot_DiagonalStance.hh"

namespace SymFunction
{

void dJh_RlFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
