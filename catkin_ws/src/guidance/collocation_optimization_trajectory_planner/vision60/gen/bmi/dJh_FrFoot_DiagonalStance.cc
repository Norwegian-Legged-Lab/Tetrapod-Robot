/*
 * Automatically Generated from Mathematica.
 * Sat 11 Jun 2022 14:27:14 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t5105;
  double t5086;
  double t5089;
  double t5111;
  double t5097;
  double t5113;
  double t5114;
  double t5054;
  double t5123;
  double t5124;
  double t5132;
  double t5061;
  double t5133;
  double t7823;
  double t5115;
  double t7558;
  double t7793;
  double t1809;
  double t8160;
  double t8235;
  double t8377;
  double t8831;
  double t8840;
  double t8879;
  double t8955;
  double t8968;
  double t9106;
  double t17005;
  double t17009;
  double t17010;
  double t17206;
  double t17209;
  double t17210;
  double t17205;
  double t17215;
  double t17217;
  double t17224;
  double t17226;
  double t17227;
  double t17228;
  double t17235;
  double t17236;
  double t17400;
  double t17401;
  double t17403;
  double t17417;
  double t17424;
  double t17425;
  double t17427;
  double t17431;
  double t17432;
  double t17433;
  double t17434;
  double t17435;
  double t17416;
  double t17426;
  double t17436;
  double t17438;
  double t17415;
  double t17439;
  double t17445;
  double t17447;
  double t17449;
  double t17454;
  double t17455;
  double t17456;
  double t17457;
  double t17458;
  double t17459;
  double t17460;
  double t17461;
  double t17462;
  double t17463;
  double t17466;
  double t17470;
  double t17473;
  double t17487;
  double t17488;
  double t17489;
  double t17484;
  double t17485;
  double t17486;
  double t17480;
  double t17481;
  double t17482;
  double t17411;
  double t17412;
  double t17413;
  double t17446;
  double t17474;
  double t17475;
  double t17498;
  double t17688;
  double t17691;
  double t17492;
  double t17493;
  double t17494;
  double t17729;
  double t17730;
  double t17731;
  double t17701;
  double t17702;
  double t17703;
  double t17926;
  double t17932;
  double t17933;
  double t17692;
  double t17713;
  double t17956;
  double t17958;
  double t17959;
  double t17961;
  double t17970;
  double t17971;
  double t17972;
  double t17693;
  double t17695;
  double t17696;
  double t17974;
  double t17976;
  double t17715;
  double t17716;
  double t17717;
  double t17738;
  double t17757;
  double t18014;
  double t18016;
  double t17739;
  double t17740;
  double t17743;
  double t18084;
  double t18089;
  double t17758;
  double t17759;
  double t17760;
  double t17781;
  double t17793;
  double t18131;
  double t17782;
  double t17783;
  double t17784;
  double t18135;
  double t18137;
  double t17794;
  double t17795;
  double t17798;
  double t17949;
  double t17964;
  double t18170;
  double t18171;
  double t18172;
  double t18176;
  double t18177;
  double t18199;
  double t18200;
  double t18201;
  double t17950;
  double t17951;
  double t18174;
  double t18178;
  double t18186;
  double t18189;
  double t17965;
  double t17966;
  double t18210;
  double t18211;
  double t18215;
  double t18219;
  double t18220;
  double t18227;
  double t18228;
  double t18229;
  double t18231;
  double t18232;
  double t18233;
  double t18235;
  double t18236;
  double t18237;
  double t18239;
  double t18240;
  double t18241;
  double t18079;
  double t18075;
  double t18243;
  double t18244;
  double t18245;
  double t18263;
  double t18265;
  double t18076;
  double t18077;
  double t18273;
  double t18275;
  double t18080;
  double t18081;
  double t18294;
  double t18296;
  double t18194;
  double t18195;
  double t18196;
  double t18301;
  double t18302;
  double t18250;
  double t18251;
  double t18252;
  double t18126;
  double t18143;
  double t18127;
  double t18128;
  double t18330;
  double t18332;
  double t18212;
  double t18336;
  double t18338;
  double t18144;
  double t18145;
  double t18357;
  double t18360;
  double t18364;
  double t18366;
  double t18167;
  double t18168;
  double t18389;
  double t18390;
  double t18391;
  double t18406;
  double t18407;
  double t17244;
  double t17245;
  double t17246;
  double t18399;
  double t18400;
  double t18401;
  double t18402;
  double t18397;
  double t18405;
  double t18408;
  double t18431;
  double t18432;
  double t18433;
  double t18421;
  double t18422;
  double t18423;
  double t18426;
  double t18427;
  double t18428;
  double t18438;
  double t18439;
  double t18440;
  double t18434;
  double t18437;
  double t18442;
  double t18448;
  double t18449;
  double t18450;
  double t18452;
  double t18453;
  double t18454;
  double t18456;
  double t18457;
  double t18458;
  double t18268;
  double t18269;
  double t18270;
  double t18278;
  double t18279;
  double t18280;
  double t18409;
  double t18181;
  double t18182;
  double t18478;
  double t18479;
  double t18486;
  double t18484;
  double t18476;
  double t18480;
  double t18510;
  double t18513;
  double t18515;
  double t18463;
  double t18464;
  double t18465;
  double t18326;
  double t18327;
  double t18538;
  double t18557;
  double t18561;
  double t18580;
  double t18581;
  double t18582;
  double t18594;
  double t18595;
  double t18596;
  double t18604;
  double t18605;
  double t18606;
  double t18610;
  double t18611;
  double t18612;
  double t18614;
  double t18615;
  double t18616;
  double t18591;
  double t18592;
  double t18597;
  double t18630;
  double t18631;
  double t18632;
  double t18626;
  double t18627;
  double t18628;
  double t18633;
  double t18636;
  double t18643;
  double t18644;
  double t18645;
  double t18647;
  double t18648;
  double t18649;
  double t18341;
  double t18342;
  double t18491;
  double t18492;
  double t18498;
  double t18499;
  double t18662;
  double t18667;
  double t18672;
  double t18668;
  double t18670;
  double t18663;
  double t18690;
  double t18693;
  double t18603;
  double t18607;
  double t18608;
  double t18697;
  double t15012;
  double t15019;
  double t15078;
  double t18726;
  double t18728;
  double t18744;
  double t18747;
  double t18750;
  t5105 = Cos(var1[13]);
  t5086 = Cos(var1[14]);
  t5089 = Sin(var1[13]);
  t5111 = Sin(var1[14]);
  t5097 = t5086*t5089;
  t5113 = -1.*t5105*t5111;
  t5114 = t5097 + t5113;
  t5054 = Cos(var1[5]);
  t5123 = t5105*t5086;
  t5124 = t5089*t5111;
  t5132 = t5123 + t5124;
  t5061 = Sin(var1[12]);
  t5133 = Sin(var1[5]);
  t7823 = Cos(var1[3]);
  t5115 = -1.*t5054*t5061*t5114;
  t7558 = t5132*t5133;
  t7793 = t5115 + t7558;
  t1809 = Sin(var1[3]);
  t8160 = Cos(var1[12]);
  t8235 = Cos(var1[4]);
  t8377 = t8160*t8235*t5114;
  t8831 = Sin(var1[4]);
  t8840 = t5054*t5132;
  t8879 = t5061*t5114*t5133;
  t8955 = t8840 + t8879;
  t8968 = -1.*t8831*t8955;
  t9106 = t8377 + t8968;
  t17005 = t8235*t5061;
  t17009 = t8160*t8831*t5133;
  t17010 = t17005 + t17009;
  t17206 = -1.*t5086*t5089;
  t17209 = t5105*t5111;
  t17210 = t17206 + t17209;
  t17205 = -1.*t5054*t5061*t5132;
  t17215 = t17210*t5133;
  t17217 = t17205 + t17215;
  t17224 = t8160*t8235*t5132;
  t17226 = t5054*t17210;
  t17227 = t5061*t5132*t5133;
  t17228 = t17226 + t17227;
  t17235 = -1.*t8831*t17228;
  t17236 = t17224 + t17235;
  t17400 = -1.*t8160*t5114*t8831;
  t17401 = -1.*t8235*t8955;
  t17403 = t17400 + t17401;
  t17417 = -0.0641*t5086;
  t17424 = -0.28*t5111;
  t17425 = t17417 + t17424;
  t17427 = -1.*t5086;
  t17431 = 1. + t17427;
  t17432 = 0.075*t17431;
  t17433 = 0.355*t5086;
  t17434 = -0.0641*t5111;
  t17435 = t17432 + t17433 + t17434;
  t17416 = -0.325*t5089;
  t17426 = t5105*t17425;
  t17436 = t5089*t17435;
  t17438 = t17416 + t17426 + t17436;
  t17415 = -0.068*t5061;
  t17439 = t8160*t17438;
  t17445 = t17415 + t17439;
  t17447 = -1.*t5105;
  t17449 = 1. + t17447;
  t17454 = 0.325*t17449;
  t17455 = -1.*t5089*t17425;
  t17456 = t5105*t17435;
  t17457 = t17454 + t17455 + t17456;
  t17458 = t5054*t17457;
  t17459 = -1.*t8160;
  t17460 = 1. + t17459;
  t17461 = -0.1575*t17460;
  t17462 = -0.2255*t8160;
  t17463 = -1.*t5061*t17438;
  t17466 = t17461 + t17462 + t17463;
  t17470 = -1.*t17466*t5133;
  t17473 = t17458 + t17470;
  t17487 = t8235*t17445;
  t17488 = -1.*t8831*t17473;
  t17489 = t17487 + t17488;
  t17484 = t5061*t8831;
  t17485 = -1.*t8160*t8235*t5133;
  t17486 = t17484 + t17485;
  t17480 = t17445*t8831;
  t17481 = t8235*t17473;
  t17482 = t17480 + t17481;
  t17411 = t8160*t5132*t8831;
  t17412 = t8235*t17228;
  t17413 = t17411 + t17412;
  t17446 = -1.*t17445*t8831;
  t17474 = -1.*t8235*t17473;
  t17475 = t17446 + t17474;
  t17498 = t5054*t17466;
  t17688 = t17457*t5133;
  t17691 = t17498 + t17688;
  t17492 = -1.*t5061*t8831;
  t17493 = t8160*t8235*t5133;
  t17494 = t17492 + t17493;
  t17729 = t8160*t5114*t8831;
  t17730 = t8235*t8955;
  t17731 = t17729 + t17730;
  t17701 = -1.*t8160*t5132*t8831;
  t17702 = -1.*t8235*t17228;
  t17703 = t17701 + t17702;
  t17926 = t5054*t5061*t5114;
  t17932 = -1.*t5132*t5133;
  t17933 = t17926 + t17932;
  t17692 = -1.*t8160*t5054*t17691;
  t17713 = t17691*t17217;
  t17956 = -1.*t5054*t17466;
  t17958 = -1.*t17457*t5133;
  t17959 = t17956 + t17958;
  t17961 = t8160*t5133*t17691;
  t17970 = t5054*t5061*t5132;
  t17971 = -1.*t17210*t5133;
  t17972 = t17970 + t17971;
  t17693 = -1.*t17486*t17482;
  t17695 = -1.*t17010*t17489;
  t17696 = t17692 + t17693 + t17695;
  t17974 = t17473*t17217;
  t17976 = t17691*t17228;
  t17715 = t17482*t17413;
  t17716 = t17489*t17236;
  t17717 = t17713 + t17715 + t17716;
  t17738 = t17691*t7793;
  t17757 = -1.*t17691*t17217;
  t18014 = t17691*t8955;
  t18016 = t17473*t7793;
  t17739 = t17482*t17731;
  t17740 = t17489*t9106;
  t17743 = t17738 + t17739 + t17740;
  t18084 = -1.*t17473*t17217;
  t18089 = -1.*t17691*t17228;
  t17758 = -1.*t17482*t17413;
  t17759 = -1.*t17489*t17236;
  t17760 = t17757 + t17758 + t17759;
  t17781 = t8160*t5054*t17691;
  t17793 = -1.*t17691*t7793;
  t18131 = -1.*t8160*t5133*t17691;
  t17782 = t17486*t17482;
  t17783 = t17010*t17489;
  t17784 = t17781 + t17782 + t17783;
  t18135 = -1.*t17691*t8955;
  t18137 = -1.*t17473*t7793;
  t17794 = -1.*t17482*t17731;
  t17795 = -1.*t17489*t9106;
  t17798 = t17793 + t17794 + t17795;
  t17949 = -1.*t5061*t17445;
  t17964 = t8160*t17445*t5132;
  t18170 = 0.068*t5061;
  t18171 = -1.*t8160*t17438;
  t18172 = t18170 + t18171;
  t18176 = -0.068*t8160;
  t18177 = t18176 + t17463;
  t18199 = -1.*t8235*t5061*t5114;
  t18200 = -1.*t8160*t5114*t8831*t5133;
  t18201 = t18199 + t18200;
  t17950 = t8160*t5133*t17473;
  t17951 = t17949 + t17950 + t17692;
  t18174 = -1.*t8160*t17445;
  t18178 = -1.*t5061*t18177;
  t18186 = -1.*t5061*t17445*t5132;
  t18189 = t8160*t18177*t5132;
  t17965 = t17473*t17228;
  t17966 = t17964 + t17713 + t17965;
  t18210 = Power(t5054,2);
  t18211 = -1.*t8160*t18210*t18172;
  t18215 = t5054*t5061*t17691;
  t18219 = -1.*t8160*t5054*t5132*t17691;
  t18220 = t5054*t18172*t17217;
  t18227 = -1.*t5061*t5132*t8831;
  t18228 = t8160*t8235*t5132*t5133;
  t18229 = t18227 + t18228;
  t18231 = t18177*t8831;
  t18232 = -1.*t8235*t18172*t5133;
  t18233 = t18231 + t18232;
  t18235 = t8235*t18177;
  t18236 = t18172*t8831*t5133;
  t18237 = t18235 + t18236;
  t18239 = t8160*t8831;
  t18240 = t8235*t5061*t5133;
  t18241 = t18239 + t18240;
  t18079 = -1.*t8160*t17445*t5132;
  t18075 = t8160*t17445*t5114;
  t18243 = t8160*t8235;
  t18244 = -1.*t5061*t8831*t5133;
  t18245 = t18243 + t18244;
  t18263 = -1.*t5061*t17445*t5114;
  t18265 = t8160*t18177*t5114;
  t18076 = t17473*t8955;
  t18077 = t18075 + t18076 + t17738;
  t18273 = t5061*t17445*t5132;
  t18275 = -1.*t8160*t18177*t5132;
  t18080 = -1.*t17473*t17228;
  t18081 = t18079 + t17757 + t18080;
  t18294 = -1.*t8160*t5054*t5114*t17691;
  t18296 = t5054*t18172*t7793;
  t18194 = -1.*t5061*t5114*t8831;
  t18195 = t8160*t8235*t5114*t5133;
  t18196 = t18194 + t18195;
  t18301 = t8160*t5054*t5132*t17691;
  t18302 = -1.*t5054*t18172*t17217;
  t18250 = -1.*t8235*t5061*t5132;
  t18251 = -1.*t8160*t5132*t8831*t5133;
  t18252 = t18250 + t18251;
  t18126 = t5061*t17445;
  t18143 = -1.*t8160*t17445*t5114;
  t18127 = -1.*t8160*t5133*t17473;
  t18128 = t18126 + t18127 + t17781;
  t18330 = t8160*t17445;
  t18332 = t5061*t18177;
  t18212 = Power(t5133,2);
  t18336 = t5061*t17445*t5114;
  t18338 = -1.*t8160*t18177*t5114;
  t18144 = -1.*t17473*t8955;
  t18145 = t18143 + t18144 + t17793;
  t18357 = t8160*t18210*t18172;
  t18360 = -1.*t5054*t5061*t17691;
  t18364 = t8160*t5054*t5114*t17691;
  t18366 = -1.*t5054*t18172*t7793;
  t18167 = -1.*t8160*t17466;
  t18168 = t17949 + t18167;
  t18389 = -1.*t5105*t5086;
  t18390 = -1.*t5089*t5111;
  t18391 = t18389 + t18390;
  t18406 = -0.325*t5105;
  t18407 = t18406 + t17455 + t17456;
  t17244 = t7823*t17217;
  t17245 = -1.*t1809*t17236;
  t17246 = t17244 + t17245;
  t18399 = 0.325*t5089;
  t18400 = -1.*t5105*t17425;
  t18401 = -1.*t5089*t17435;
  t18402 = t18399 + t18400 + t18401;
  t18397 = t8160*t17445*t17210;
  t18405 = Power(t8160,2);
  t18408 = t18405*t18407*t5132;
  t18431 = -1.*t5054*t5061*t18407;
  t18432 = t18402*t5133;
  t18433 = t18431 + t18432;
  t18421 = -1.*t5054*t5061*t17210;
  t18422 = t18391*t5133;
  t18423 = t18421 + t18422;
  t18426 = t5054*t18402;
  t18427 = t5061*t18407*t5133;
  t18428 = t18426 + t18427;
  t18438 = t5054*t18391;
  t18439 = t5061*t17210*t5133;
  t18440 = t18438 + t18439;
  t18434 = -1.*t8160*t5054*t18433;
  t18437 = t18433*t17217;
  t18442 = t17691*t18423;
  t18448 = t8160*t17210*t8831;
  t18449 = t8235*t18440;
  t18450 = t18448 + t18449;
  t18452 = t8160*t18407*t8831;
  t18453 = t8235*t18428;
  t18454 = t18452 + t18453;
  t18456 = t8160*t8235*t18407;
  t18457 = -1.*t8831*t18428;
  t18458 = t18456 + t18457;
  t18268 = -1.*t17457*t17210;
  t18269 = t5061*t17466*t5132;
  t18270 = t18268 + t18079 + t18269;
  t18278 = -1.*t5061*t17466*t5114;
  t18279 = t17457*t5132;
  t18280 = t18075 + t18278 + t18279;
  t18409 = Power(t5061,2);
  t18181 = t17457*t17210;
  t18182 = -1.*t5061*t17466*t5132;
  t18478 = -1.*t18402*t17210;
  t18479 = -1.*t17457*t18391;
  t18486 = t18402*t5132;
  t18484 = t18405*t18407*t5114;
  t18476 = -1.*t8160*t17445*t17210;
  t18480 = -1.*t18405*t18407*t5132;
  t18510 = t18433*t7793;
  t18513 = -1.*t18433*t17217;
  t18515 = -1.*t17691*t18423;
  t18463 = t8160*t8235*t17210;
  t18464 = -1.*t8831*t18440;
  t18465 = t18463 + t18464;
  t18326 = t8160*t17466;
  t18327 = t18126 + t18326;
  t18538 = -1.*t18405*t18407*t5114;
  t18557 = t8160*t5054*t18433;
  t18561 = -1.*t18433*t7793;
  t18580 = -0.28*t5086;
  t18581 = 0.0641*t5111;
  t18582 = t18580 + t18581;
  t18594 = t5089*t17425;
  t18595 = t5105*t18582;
  t18596 = t18594 + t18595;
  t18604 = t5054*t5114;
  t18605 = t5061*t18391*t5133;
  t18606 = t18604 + t18605;
  t18610 = -1.*t5054*t5061*t18391;
  t18611 = t5114*t5133;
  t18612 = t18610 + t18611;
  t18614 = t8160*t8235*t18391;
  t18615 = -1.*t8831*t18606;
  t18616 = t18614 + t18615;
  t18591 = -1.*t5089*t18582;
  t18592 = t17426 + t18591;
  t18597 = t18405*t18596*t5132;
  t18630 = -1.*t5054*t5061*t18596;
  t18631 = t18592*t5133;
  t18632 = t18630 + t18631;
  t18626 = t5054*t18592;
  t18627 = t5061*t18596*t5133;
  t18628 = t18626 + t18627;
  t18633 = -1.*t8160*t5054*t18632;
  t18636 = t18632*t17217;
  t18643 = t8160*t18596*t8831;
  t18644 = t8235*t18628;
  t18645 = t18643 + t18644;
  t18647 = t8160*t8235*t18596;
  t18648 = -1.*t8831*t18628;
  t18649 = t18647 + t18648;
  t18341 = t5061*t17466*t5114;
  t18342 = -1.*t17457*t5132;
  t18491 = t17438*t5114;
  t18492 = t18491 + t18279;
  t18498 = -1.*t17438*t5132;
  t18499 = t18268 + t18498;
  t18662 = -1.*t18592*t17210;
  t18667 = t17457*t5114;
  t18672 = t18592*t5132;
  t18668 = t18405*t18596*t5114;
  t18670 = t8160*t17445*t18391;
  t18663 = -1.*t18405*t18596*t5132;
  t18690 = t17691*t18612;
  t18693 = t18632*t7793;
  t18603 = t8160*t18391*t8831;
  t18607 = t8235*t18606;
  t18608 = t18603 + t18607;
  t18697 = -1.*t18632*t17217;
  t15012 = t7823*t7793;
  t15019 = -1.*t1809*t9106;
  t15078 = t15012 + t15019;
  t18726 = -1.*t18405*t18596*t5114;
  t18728 = -1.*t8160*t17445*t18391;
  t18744 = t8160*t5054*t18632;
  t18747 = -1.*t17691*t18612;
  t18750 = -1.*t18632*t7793;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t1809*t7793 - 1.*t7823*t9106)*var2[1] + t15078*var2[2];
  p_output1[10]=(-1.*t17010*t7823 - 1.*t1809*t5054*t8160)*var2[1] + (-1.*t17010*t1809 + t5054*t7823*t8160)*var2[2];
  p_output1[11]=(-1.*t17217*t1809 - 1.*t17236*t7823)*var2[1] + t17246*var2[2];
  p_output1[12]=t9106*var2[0] - 1.*t17403*t1809*var2[1] + t17403*t7823*var2[2] + (t17413*(-1.*t17010*t17475 - 1.*t17010*t17482 - 1.*t17486*t17489 - 1.*t17489*t17494) + t17236*t17696 + t17486*(t17236*t17475 + t17236*t17482 + t17413*t17489 + t17489*t17703) + t17010*t17717)*var2[3];
  p_output1[13]=t17010*var2[0] - 1.*t17494*t1809*var2[1] + t17494*t7823*var2[2] + ((-1.*t17236*t17475 - 1.*t17236*t17482 - 1.*t17413*t17489 - 1.*t17489*t17703)*t17731 + t17236*t17743 + t17760*t9106 + t17413*(t17403*t17489 + t17489*t17731 + t17475*t9106 + t17482*t9106))*var2[3];
  p_output1[14]=t17236*var2[0] - 1.*t17703*t1809*var2[1] + t17703*t7823*var2[2] + ((t17010*t17475 + t17010*t17482 + t17486*t17489 + t17489*t17494)*t17731 + t17010*t17798 + t17784*t9106 + t17486*(-1.*t17403*t17489 - 1.*t17489*t17731 - 1.*t17475*t9106 - 1.*t17482*t9106))*var2[3];
  p_output1[15]=t17933*t8235*var2[0] + (t17933*t1809*t8831 + t7823*t8955)*var2[1] + (-1.*t17933*t7823*t8831 + t1809*t8955)*var2[2] + (t17696*t17972*t8235 - 1.*t17717*t5054*t8160*t8235 + t17486*(t17974 + t17976 + t17413*t17959*t8235 + t17482*t17972*t8235 - 1.*t17236*t17959*t8831 - 1.*t17489*t17972*t8831) + t17413*(t17961 - 1.*t17473*t5054*t8160 - 1.*t17486*t17959*t8235 + t17482*t5054*t8160*t8235 + t17010*t17959*t8831 - 1.*t17489*t5054*t8160*t8831))*var2[3] + (t17228*t17951 + (t17228*t17959 + t17473*t17972 + t17974 + t17976)*t5054*t8160 - 1.*t17966*t5133*t8160 + t17217*(t17961 + t17959*t5133*t8160))*var2[4];
  p_output1[16]=-1.*t5054*t8160*t8235*var2[0] + (-1.*t5133*t7823*t8160 - 1.*t1809*t5054*t8160*t8831)*var2[1] + (-1.*t1809*t5133*t8160 + t5054*t7823*t8160*t8831)*var2[2] + (t17760*t17933*t8235 + t17743*t17972*t8235 + t17731*(t18084 + t18089 - 1.*t17413*t17959*t8235 - 1.*t17482*t17972*t8235 + t17236*t17959*t8831 + t17489*t17972*t8831) + t17413*(t18014 + t18016 + t17482*t17933*t8235 + t17731*t17959*t8235 - 1.*t17489*t17933*t8831 - 1.*t17959*t8831*t9106))*var2[3] + (t17228*t18077 + (-1.*t17228*t17959 - 1.*t17473*t17972 + t18084 + t18089)*t7793 + t18081*t8955 + t17217*(t17473*t17933 + t18014 + t18016 + t17959*t8955))*var2[4];
  p_output1[17]=t17972*t8235*var2[0] + (t17228*t7823 + t17972*t1809*t8831)*var2[1] + (t17228*t1809 - 1.*t17972*t7823*t8831)*var2[2] + (t17784*t17933*t8235 - 1.*t17798*t5054*t8160*t8235 + t17731*(t18131 + t17473*t5054*t8160 + t17486*t17959*t8235 - 1.*t17482*t5054*t8160*t8235 - 1.*t17010*t17959*t8831 + t17489*t5054*t8160*t8831) + t17486*(t18135 + t18137 - 1.*t17482*t17933*t8235 - 1.*t17731*t17959*t8235 + t17489*t17933*t8831 + t17959*t8831*t9106))*var2[3] + (-1.*t18145*t5133*t8160 + t7793*(t18131 - 1.*t17959*t5133*t8160) + t18128*t8955 + t5054*t8160*(-1.*t17473*t17933 + t18135 + t18137 - 1.*t17959*t8955))*var2[4];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t18196*var2[0] + (-1.*t1809*t18201 - 1.*t5054*t5114*t7823*t8160)*var2[1] + (t18201*t7823 - 1.*t1809*t5054*t5114*t8160)*var2[2] + (t17696*t18229 + t17717*t18241 + t17413*(t18211 + t18215 - 1.*t17486*t18233 - 1.*t17010*t18237 - 1.*t17482*t18241 - 1.*t17489*t18245) + t17486*(t18219 + t18220 + t17482*t18229 + t17413*t18233 + t17236*t18237 + t17489*t18252))*var2[3] + (-1.*t17966*t5054*t5061 - 1.*t17951*t5054*t5132*t8160 + t17217*(t18174 + t18178 + t18211 + t18215 - 1.*t17473*t5061*t5133 - 1.*t18172*t18212*t8160) + t5054*t8160*(t18186 + t18189 + t18219 + t18220 - 1.*t17228*t18172*t5133 + t17473*t5132*t5133*t8160))*var2[4] + (-1.*t18168*t5061*t5132 + (t17964 + t18181 + t18182)*t8160 + t5132*t8160*(t18174 + t18178 + t17466*t5061 - 1.*t18172*t8160) + t5061*(t18186 + t18189 - 1.*t18172*t5061*t5132 - 1.*t17466*t5132*t8160))*var2[5];
  p_output1[37]=t18241*var2[0] + (-1.*t1809*t18245 - 1.*t5054*t5061*t7823)*var2[1] + (-1.*t1809*t5054*t5061 + t18245*t7823)*var2[2] + (t17760*t18196 + t17743*t18229 + t17731*(-1.*t17482*t18229 - 1.*t17413*t18233 - 1.*t17236*t18237 - 1.*t17489*t18252 + t18301 + t18302) + t17413*(t17482*t18196 + t17489*t18201 + t17731*t18233 + t18294 + t18296 + t18237*t9106))*var2[3] + (-1.*t18081*t5054*t5114*t8160 - 1.*t18077*t5054*t5132*t8160 + t7793*(t18273 + t18275 + t18301 + t18302 + t17228*t18172*t5133 - 1.*t17473*t5132*t5133*t8160) + t17217*(t18263 + t18265 + t18294 + t18296 + t17473*t5114*t5133*t8160 - 1.*t18172*t5133*t8955))*var2[4] + (-1.*t18270*t5061*t5114 - 1.*t18280*t5061*t5132 + t5132*t8160*(t18263 + t18265 - 1.*t18172*t5061*t5114 - 1.*t17466*t5114*t8160) + t5114*t8160*(t18273 + t18275 + t18172*t5061*t5132 + t17466*t5132*t8160))*var2[5];
  p_output1[38]=t18229*var2[0] + (-1.*t1809*t18252 - 1.*t5054*t5132*t7823*t8160)*var2[1] + (t18252*t7823 - 1.*t1809*t5054*t5132*t8160)*var2[2] + (t17784*t18196 + t17798*t18241 + t17731*(t17486*t18233 + t17010*t18237 + t17482*t18241 + t17489*t18245 + t18357 + t18360) + t17486*(-1.*t17482*t18196 - 1.*t17489*t18201 - 1.*t17731*t18233 + t18364 + t18366 - 1.*t18237*t9106))*var2[3] + (-1.*t18145*t5054*t5061 - 1.*t18128*t5054*t5114*t8160 + t7793*(t18330 + t18332 + t18357 + t18360 + t17473*t5061*t5133 + t18172*t18212*t8160) + t5054*t8160*(t18336 + t18338 + t18364 + t18366 - 1.*t17473*t5114*t5133*t8160 + t18172*t5133*t8955))*var2[4] + (-1.*t18327*t5061*t5114 + (t18143 + t18341 + t18342)*t8160 + t5114*t8160*(t18330 + t18332 - 1.*t17466*t5061 + t18172*t8160) + t5061*(t18336 + t18338 + t18172*t5061*t5114 + t17466*t5114*t8160))*var2[5];
  p_output1[39]=t17413*var2[0] + t17246*var2[1] + (t17217*t1809 + t17236*t7823)*var2[2] + (t17696*t18450 + t17413*(t18434 - 1.*t17486*t18454 - 1.*t17010*t18458) + t17486*(t18437 + t18442 + t17482*t18450 + t17413*t18454 + t17236*t18458 + t17489*t18465))*var2[3] + (t17951*t18423 + (t18397 + t18408 + t17228*t18428 + t18437 + t17473*t18440 + t18442)*t5054*t8160 + t17217*(t18434 - 1.*t18407*t5061*t8160 + t18428*t5133*t8160))*var2[4] + (t5061*(t17457*t18391 + t18397 + t17210*t18402 + t18408 - 1.*t17210*t17466*t5061 + t18407*t18409*t5132) + t17210*t18168*t8160)*var2[5] + (0.2255*t18391 + 0.1575*t5132)*var2[12];
  p_output1[40]=(t17413*t17760 + t17743*t18450 + t17731*(-1.*t17482*t18450 - 1.*t17413*t18454 - 1.*t17236*t18458 - 1.*t17489*t18465 + t18513 + t18515) + t17413*(t17713 + t17715 + t17716 + t17731*t18454 + t18510 + t18458*t9106))*var2[3] + (t17217*t18081 + t18077*t18423 + (-1.*t17228*t18428 - 1.*t17473*t18440 + t18476 + t18480 + t18513 + t18515)*t7793 + t17217*(t17713 + t17964 + t17965 + t18484 + t18510 + t18428*t8955))*var2[4] + (t17210*t18280*t8160 + t18270*t5132*t8160 + (t17964 + t18181 + t18182 + t18484 + t18486 + t18407*t18409*t5114)*t5132*t8160 + t5114*(t18476 + t18478 + t18479 + t18480 + t17210*t17466*t5061 - 1.*t18407*t18409*t5132)*t8160)*var2[5] + (t18391*t18492 + t17210*t18499 + t17210*(t18181 + t18486 + t18407*t5114 + t17438*t5132) + t5132*(-1.*t17210*t17438 + t18478 + t18479 - 1.*t18407*t5132))*var2[12];
  p_output1[41]=t18450*var2[0] + (-1.*t1809*t18465 + t18423*t7823)*var2[1] + (t1809*t18423 + t18465*t7823)*var2[2] + (t17413*t17784 + t17731*(t17486*t18454 + t17010*t18458 + t18557) + t17486*(t17757 + t17758 + t17759 - 1.*t17731*t18454 + t18561 - 1.*t18458*t9106))*var2[3] + (t17217*t18128 + t7793*(t18557 + t18407*t5061*t8160 - 1.*t18428*t5133*t8160) + t5054*t8160*(t17757 + t18079 + t18080 + t18538 + t18561 - 1.*t18428*t8955))*var2[4] + (t5061*(t18079 + t18268 + t18269 + t18538 - 1.*t18407*t18409*t5114 - 1.*t18402*t5132) + t18327*t5132*t8160)*var2[5] - 0.068*t17210*var2[12];
  p_output1[42]=t18608*var2[0] + (-1.*t1809*t18616 + t18612*t7823)*var2[1] + (t1809*t18612 + t18616*t7823)*var2[2] + (t17696*t17731 + t17413*(t18633 - 1.*t17486*t18645 - 1.*t17010*t18649) + t17486*(t17738 + t17739 + t17740 + t18636 + t17413*t18645 + t17236*t18649))*var2[3] + (t17951*t7793 + (t17738 + t18075 + t18076 + t18597 + t17228*t18628 + t18636)*t5054*t8160 + t17217*(t18633 - 1.*t18596*t5061*t8160 + t18628*t5133*t8160))*var2[4] + (t5061*(t18075 + t18278 + t18279 + t17210*t18592 + t18597 + t18409*t18596*t5132) + t18168*t5114*t8160)*var2[5] + (0.1575*t18391 + 0.2255*t5132)*var2[12] + (0.325*t5086 - 1.*t17435*t5086 - 1.*t18582*t5086)*var2[13];
  p_output1[43]=(t17731*t17743 + t17760*t18608 + t17731*(t17793 + t17794 + t17795 - 1.*t17413*t18645 - 1.*t17236*t18649 + t18697) + t17413*(t17482*t18608 + t17489*t18616 + t17731*t18645 + t18690 + t18693 + t18649*t9106))*var2[3] + (t18081*t18612 + t18077*t7793 + (t17793 + t18143 + t18144 - 1.*t17228*t18628 + t18663 + t18697)*t7793 + t17217*(t17473*t18606 + t18668 + t18670 + t18690 + t18693 + t18628*t8955))*var2[4] + (t18270*t18391*t8160 + t18280*t5114*t8160 + (t18667 + t18668 + t18670 + t18672 - 1.*t17466*t18391*t5061 + t18409*t18596*t5114)*t5132*t8160 + t5114*(t18143 + t18341 + t18342 + t18662 + t18663 - 1.*t18409*t18596*t5132)*t8160)*var2[5] + (t18499*t5114 + t17210*(t17438*t18391 + t18667 + t18672 + t18596*t5114) + t18492*t5132 + t5132*(t18342 + t18662 - 1.*t17438*t5114 - 1.*t18596*t5132))*var2[12];
  p_output1[44]=t17731*var2[0] + t15078*var2[1] + (t1809*t7793 + t7823*t9106)*var2[2] + (t17784*t18608 + t17731*(t17486*t18645 + t17010*t18649 + t18744) + t17486*(-1.*t17482*t18608 - 1.*t17489*t18616 - 1.*t17731*t18645 + t18747 + t18750 - 1.*t18649*t9106))*var2[3] + (t18128*t18612 + t7793*(t18744 + t18596*t5061*t8160 - 1.*t18628*t5133*t8160) + t5054*t8160*(-1.*t17473*t18606 + t18726 + t18728 + t18747 + t18750 - 1.*t18628*t8955))*var2[4] + (t5061*(t18726 + t18728 + t17466*t18391*t5061 - 1.*t17457*t5114 - 1.*t18409*t18596*t5114 - 1.*t18592*t5132) + t18327*t18391*t8160)*var2[5] - 0.068*t5114*var2[12] + (0.325*t5111 - 1.*t17435*t5111 - 1.*t18582*t5111)*var2[13];
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJh_FrFoot_DiagonalStance.hh"

namespace SymFunction
{

void dJh_FrFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
