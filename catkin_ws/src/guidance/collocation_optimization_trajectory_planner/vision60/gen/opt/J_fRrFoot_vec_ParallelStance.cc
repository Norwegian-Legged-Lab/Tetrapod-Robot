/*
 * Automatically Generated from Mathematica.
 * Sun 3 Apr 2022 21:47:47 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2548;
  double t2532;
  double t2551;
  double t24906;
  double t24701;
  double t24702;
  double t24908;
  double t2542;
  double t24747;
  double t24991;
  double t25004;
  double t2561;
  double t25031;
  double t25038;
  double t25040;
  double t25012;
  double t25080;
  double t25081;
  double t25082;
  double t25084;
  double t25091;
  double t25096;
  double t25047;
  double t25060;
  double t25061;
  double t25220;
  double t25310;
  double t25311;
  double t25356;
  double t25358;
  double t25359;
  double t25334;
  double t25336;
  double t25343;
  double t2543;
  double t24290;
  double t24429;
  double t25382;
  double t25385;
  double t25011;
  double t25068;
  double t25071;
  double t25074;
  double t25098;
  double t25100;
  double t25129;
  double t25131;
  double t25132;
  double t25122;
  double t25123;
  double t25126;
  double t25313;
  double t25314;
  double t25319;
  double t25403;
  double t25404;
  double t25405;
  double t25396;
  double t25397;
  double t25398;
  double t25366;
  double t25367;
  double t25369;
  double t25644;
  double t25645;
  double t25647;
  double t25624;
  double t25628;
  double t25630;
  double t25675;
  double t25678;
  double t25679;
  double t25411;
  double t25412;
  double t25413;
  double t25415;
  double t25420;
  double t25421;
  double t25426;
  double t25427;
  double t25428;
  double t25530;
  double t25531;
  double t25537;
  double t25560;
  double t25570;
  double t25571;
  double t25585;
  double t25586;
  double t25591;
  double t25607;
  double t25608;
  double t25609;
  double t25612;
  double t25613;
  double t25620;
  double t25661;
  double t25662;
  double t25663;
  double t25666;
  double t25667;
  double t25670;
  double t25760;
  double t25761;
  double t25762;
  double t25753;
  double t25754;
  double t25755;
  double t25778;
  double t25782;
  double t25783;
  double t25785;
  double t25786;
  double t25787;
  double t25788;
  double t25789;
  double t25790;
  double t25777;
  double t25784;
  double t25791;
  double t25794;
  double t25776;
  double t25799;
  double t25800;
  double t25802;
  double t25803;
  double t25806;
  double t25808;
  double t25809;
  double t25810;
  double t25811;
  double t25812;
  double t25813;
  double t25814;
  double t25815;
  double t25816;
  double t25817;
  double t25835;
  double t25840;
  double t25375;
  double t25377;
  double t25381;
  double t25850;
  double t25851;
  double t25852;
  double t25845;
  double t25846;
  double t25847;
  double t25801;
  double t25841;
  double t25842;
  double t25867;
  double t25868;
  double t25869;
  double t26015;
  double t26016;
  double t26017;
  double t25870;
  double t25871;
  double t25872;
  double t25873;
  double t25887;
  double t25888;
  double t25892;
  double t25893;
  double t25933;
  double t25934;
  double t25935;
  double t25936;
  double t25947;
  double t25949;
  double t25950;
  double t25957;
  double t25988;
  double t25989;
  double t25990;
  double t25992;
  double t26001;
  double t26002;
  double t26003;
  double t26004;
  double t25143;
  double t25146;
  double t25147;
  double t26120;
  double t26121;
  double t26122;
  double t26127;
  double t26128;
  double t25137;
  double t25139;
  double t25141;
  double t26129;
  double t26130;
  double t26132;
  double t26141;
  double t26142;
  double t26144;
  double t25157;
  double t25158;
  double t25160;
  double t26119;
  double t26272;
  double t26273;
  double t26276;
  double t26277;
  double t26278;
  double t26279;
  double t26288;
  double t26289;
  double t26290;
  double t26274;
  double t26280;
  double t26281;
  double t26286;
  double t26295;
  double t26296;
  double t26298;
  double t26299;
  double t26301;
  double t25201;
  double t25326;
  double t25327;
  double t25365;
  double t25370;
  double t25371;
  double t26371;
  double t26372;
  double t26373;
  double t26370;
  double t26375;
  double t26377;
  double t26379;
  double t26380;
  double t26385;
  double t26387;
  double t26389;
  double t26378;
  double t26381;
  double t26382;
  double t26384;
  double t26390;
  double t26391;
  double t26393;
  double t26394;
  double t26395;
  double t26019;
  double t26030;
  double t26031;
  double t26052;
  double t26053;
  double t26065;
  double t26066;
  double t26088;
  double t26100;
  double t26101;
  double t26465;
  double t26466;
  double t26467;
  double t26123;
  double t26136;
  double t26159;
  double t26161;
  double t26478;
  double t26479;
  double t26481;
  double t26180;
  double t26181;
  double t26492;
  double t26493;
  double t26494;
  double t26195;
  double t26197;
  double t26496;
  double t26497;
  double t26498;
  double t26507;
  double t26508;
  double t26509;
  double t26244;
  double t26531;
  double t26246;
  double t26255;
  double t26256;
  double t26515;
  double t26516;
  double t26517;
  double t26285;
  double t26307;
  double t26595;
  double t26322;
  double t26332;
  double t26333;
  double t26348;
  double t26354;
  double t26355;
  double t26383;
  double t26400;
  double t26401;
  double t26415;
  double t26416;
  double t26425;
  double t26436;
  double t26445;
  double t26568;
  double t26569;
  double t26577;
  double t26578;
  double t26529;
  double t26530;
  double t26538;
  double t26539;
  double t26549;
  double t26550;
  double t26557;
  double t26558;
  double t26706;
  double t26707;
  double t26632;
  double t26633;
  double t26727;
  double t26728;
  double t26596;
  double t26772;
  double t26751;
  double t26752;
  double t26753;
  double t26760;
  double t26761;
  double t26762;
  double t26617;
  double t26619;
  double t26610;
  double t26714;
  double t26715;
  double t26686;
  double t26649;
  double t26650;
  double t26739;
  double t26740;
  double t26674;
  double t26660;
  double t26661;
  double t26716;
  double t26742;
  double t26790;
  double t26791;
  double t26797;
  double t26856;
  double t26857;
  double t26864;
  double t26865;
  double t26825;
  double t26829;
  double t26833;
  double t26945;
  double t26946;
  t2548 = Cos(var1[15]);
  t2532 = Cos(var1[4]);
  t2551 = Sin(var1[4]);
  t24906 = Cos(var1[16]);
  t24701 = Cos(var1[17]);
  t24702 = Sin(var1[16]);
  t24908 = Sin(var1[17]);
  t2542 = Sin(var1[15]);
  t24747 = t24701*t24702;
  t24991 = -1.*t24906*t24908;
  t25004 = t24747 + t24991;
  t2561 = Sin(var1[5]);
  t25031 = t24906*t24701;
  t25038 = t24702*t24908;
  t25040 = t25031 + t25038;
  t25012 = Cos(var1[5]);
  t25080 = -1.*t24701*t24702;
  t25081 = t24906*t24908;
  t25082 = t25080 + t25081;
  t25084 = t25012*t25082;
  t25091 = t2542*t25040*t2561;
  t25096 = t25084 + t25091;
  t25047 = t25012*t25040;
  t25060 = t2542*t25004*t2561;
  t25061 = t25047 + t25060;
  t25220 = -1.*t24906*t24701;
  t25310 = -1.*t24702*t24908;
  t25311 = t25220 + t25310;
  t25356 = t2548*t25004*t2551;
  t25358 = t2532*t25061;
  t25359 = t25356 + t25358;
  t25334 = t2548*t25040*t2551;
  t25336 = t2532*t25096;
  t25343 = t25334 + t25336;
  t2543 = t2532*t2542;
  t24290 = t2548*t2551*t2561;
  t24429 = t2543 + t24290;
  t25382 = Sin(var1[3]);
  t25385 = Cos(var1[3]);
  t25011 = t2548*t2532*t25004;
  t25068 = -1.*t2551*t25061;
  t25071 = t25011 + t25068;
  t25074 = t2548*t2532*t25040;
  t25098 = -1.*t2551*t25096;
  t25100 = t25074 + t25098;
  t25129 = t25012*t2542*t25004;
  t25131 = -1.*t25040*t2561;
  t25132 = t25129 + t25131;
  t25122 = t25012*t2542*t25040;
  t25123 = -1.*t25082*t2561;
  t25126 = t25122 + t25123;
  t25313 = t25012*t25311;
  t25314 = t2542*t25082*t2561;
  t25319 = t25313 + t25314;
  t25403 = -1.*t25012*t2542*t25040;
  t25404 = t25082*t2561;
  t25405 = t25403 + t25404;
  t25396 = -1.*t25012*t2542*t25004;
  t25397 = t25040*t2561;
  t25398 = t25396 + t25397;
  t25366 = t25012*t25004;
  t25367 = t2542*t25311*t2561;
  t25369 = t25366 + t25367;
  t25644 = t25385*t25398;
  t25645 = -1.*t25382*t25071;
  t25647 = t25644 + t25645;
  t25624 = t25385*t25405;
  t25628 = -1.*t25382*t25100;
  t25630 = t25624 + t25628;
  t25675 = t2548*t25385*t25012;
  t25678 = -1.*t25382*t24429;
  t25679 = t25675 + t25678;
  t25411 = -1.*t2542*t2551;
  t25412 = t2548*t2532*t2561;
  t25413 = t25411 + t25412;
  t25415 = -1.*t2548*t25004*t2551;
  t25420 = -1.*t2532*t25061;
  t25421 = t25415 + t25420;
  t25426 = -1.*t2548*t25040*t2551;
  t25427 = -1.*t2532*t25096;
  t25428 = t25426 + t25427;
  t25530 = t2548*t2532;
  t25531 = -1.*t2542*t2551*t2561;
  t25537 = t25530 + t25531;
  t25560 = -1.*t2532*t2542*t25004;
  t25570 = -1.*t2548*t25004*t2551*t2561;
  t25571 = t25560 + t25570;
  t25585 = -1.*t2532*t2542*t25040;
  t25586 = -1.*t2548*t25040*t2551*t2561;
  t25591 = t25585 + t25586;
  t25607 = -1.*t25012*t2542*t25082;
  t25608 = t25311*t2561;
  t25609 = t25607 + t25608;
  t25612 = t2548*t2532*t25082;
  t25613 = -1.*t2551*t25319;
  t25620 = t25612 + t25613;
  t25661 = -1.*t25012*t2542*t25311;
  t25662 = t25004*t2561;
  t25663 = t25661 + t25662;
  t25666 = t2548*t2532*t25311;
  t25667 = -1.*t2551*t25369;
  t25670 = t25666 + t25667;
  t25760 = t25382*t25398;
  t25761 = t25385*t25071;
  t25762 = t25760 + t25761;
  t25753 = t25382*t25405;
  t25754 = t25385*t25100;
  t25755 = t25753 + t25754;
  t25778 = -0.0641*t24701;
  t25782 = -0.28*t24908;
  t25783 = t25778 + t25782;
  t25785 = -1.*t24701;
  t25786 = 1. + t25785;
  t25787 = -0.575*t25786;
  t25788 = -0.295*t24701;
  t25789 = -0.0641*t24908;
  t25790 = t25787 + t25788 + t25789;
  t25777 = 0.325*t24702;
  t25784 = t24906*t25783;
  t25791 = t24702*t25790;
  t25794 = t25777 + t25784 + t25791;
  t25776 = -0.068*t2542;
  t25799 = t2548*t25794;
  t25800 = t25776 + t25799;
  t25802 = -1.*t24906;
  t25803 = 1. + t25802;
  t25806 = -0.325*t25803;
  t25808 = -1.*t24702*t25783;
  t25809 = t24906*t25790;
  t25810 = t25806 + t25808 + t25809;
  t25811 = t25012*t25810;
  t25812 = -1.*t2548;
  t25813 = 1. + t25812;
  t25814 = -0.1575*t25813;
  t25815 = -0.2255*t2548;
  t25816 = -1.*t2542*t25794;
  t25817 = t25814 + t25815 + t25816;
  t25835 = -1.*t25817*t2561;
  t25840 = t25811 + t25835;
  t25375 = t2542*t2551;
  t25377 = -1.*t2548*t2532*t2561;
  t25381 = t25375 + t25377;
  t25850 = t2532*t25800;
  t25851 = -1.*t2551*t25840;
  t25852 = t25850 + t25851;
  t25845 = t25800*t2551;
  t25846 = t2532*t25840;
  t25847 = t25845 + t25846;
  t25801 = -1.*t25800*t2551;
  t25841 = -1.*t2532*t25840;
  t25842 = t25801 + t25841;
  t25867 = t25012*t25817;
  t25868 = t25810*t2561;
  t25869 = t25867 + t25868;
  t26015 = -1.*t25012*t25817;
  t26016 = -1.*t25810*t2561;
  t26017 = t26015 + t26016;
  t25870 = t2548*t25012*t25869;
  t25871 = t25381*t25847;
  t25872 = t24429*t25852;
  t25873 = t25870 + t25871 + t25872;
  t25887 = -1.*t25869*t25398;
  t25888 = -1.*t25847*t25359;
  t25892 = -1.*t25852*t25071;
  t25893 = t25887 + t25888 + t25892;
  t25933 = t25869*t25398;
  t25934 = t25847*t25359;
  t25935 = t25852*t25071;
  t25936 = t25933 + t25934 + t25935;
  t25947 = -1.*t25869*t25405;
  t25949 = -1.*t25847*t25343;
  t25950 = -1.*t25852*t25100;
  t25957 = t25947 + t25949 + t25950;
  t25988 = -1.*t2548*t25012*t25869;
  t25989 = -1.*t25381*t25847;
  t25990 = -1.*t24429*t25852;
  t25992 = t25988 + t25989 + t25990;
  t26001 = t25869*t25405;
  t26002 = t25847*t25343;
  t26003 = t25852*t25100;
  t26004 = t26001 + t26002 + t26003;
  t25143 = -1.*t2542*t25004*t2551;
  t25146 = t2548*t2532*t25004*t2561;
  t25147 = t25143 + t25146;
  t26120 = 0.068*t2542;
  t26121 = -1.*t2548*t25794;
  t26122 = t26120 + t26121;
  t26127 = -0.068*t2548;
  t26128 = t26127 + t25816;
  t25137 = t2548*t2551;
  t25139 = t2532*t2542*t2561;
  t25141 = t25137 + t25139;
  t26129 = t26128*t2551;
  t26130 = -1.*t2532*t26122*t2561;
  t26132 = t26129 + t26130;
  t26141 = t2532*t26128;
  t26142 = t26122*t2551*t2561;
  t26144 = t26141 + t26142;
  t25157 = -1.*t2542*t25040*t2551;
  t25158 = t2548*t2532*t25040*t2561;
  t25160 = t25157 + t25158;
  t26119 = Power(t25012,2);
  t26272 = 0.325*t24906;
  t26273 = t26272 + t25808 + t25809;
  t26276 = -0.325*t24702;
  t26277 = -1.*t24906*t25783;
  t26278 = -1.*t24702*t25790;
  t26279 = t26276 + t26277 + t26278;
  t26288 = t25012*t26279;
  t26289 = t2542*t26273*t2561;
  t26290 = t26288 + t26289;
  t26274 = -1.*t25012*t2542*t26273;
  t26280 = t26279*t2561;
  t26281 = t26274 + t26280;
  t26286 = t2548*t26273*t2551;
  t26295 = t2532*t26290;
  t26296 = t26286 + t26295;
  t26298 = t2548*t2532*t26273;
  t26299 = -1.*t2551*t26290;
  t26301 = t26298 + t26299;
  t25201 = t2548*t25082*t2551;
  t25326 = t2532*t25319;
  t25327 = t25201 + t25326;
  t25365 = t2548*t25311*t2551;
  t25370 = t2532*t25369;
  t25371 = t25365 + t25370;
  t26371 = -0.28*t24701;
  t26372 = 0.0641*t24908;
  t26373 = t26371 + t26372;
  t26370 = t24702*t25783;
  t26375 = t24906*t26373;
  t26377 = t26370 + t26375;
  t26379 = -1.*t24702*t26373;
  t26380 = t25784 + t26379;
  t26385 = t25012*t26380;
  t26387 = t2542*t26377*t2561;
  t26389 = t26385 + t26387;
  t26378 = -1.*t25012*t2542*t26377;
  t26381 = t26380*t2561;
  t26382 = t26378 + t26381;
  t26384 = t2548*t26377*t2551;
  t26390 = t2532*t26389;
  t26391 = t26384 + t26390;
  t26393 = t2548*t2532*t26377;
  t26394 = -1.*t2551*t26389;
  t26395 = t26393 + t26394;
  t26019 = -1.*t2548*t2561*t25869;
  t26030 = -1.*t25869*t25061;
  t26031 = -1.*t25840*t25398;
  t26052 = t25869*t25061;
  t26053 = t25840*t25398;
  t26065 = -1.*t25840*t25405;
  t26066 = -1.*t25869*t25096;
  t26088 = t2548*t2561*t25869;
  t26100 = t25840*t25405;
  t26101 = t25869*t25096;
  t26465 = t2542*t25800;
  t26466 = -1.*t2548*t2561*t25840;
  t26467 = t26465 + t26466 + t25870;
  t26123 = t2548*t26119*t26122;
  t26136 = -1.*t25012*t2542*t25869;
  t26159 = t2548*t25012*t25004*t25869;
  t26161 = -1.*t25012*t26122*t25398;
  t26478 = -1.*t2548*t25800*t25004;
  t26479 = -1.*t25840*t25061;
  t26481 = t26478 + t26479 + t25887;
  t26180 = -1.*t2548*t25012*t25004*t25869;
  t26181 = t25012*t26122*t25398;
  t26492 = t2548*t25800*t25004;
  t26493 = t25840*t25061;
  t26494 = t26492 + t26493 + t25933;
  t26195 = t2548*t25012*t25040*t25869;
  t26197 = -1.*t25012*t26122*t25405;
  t26496 = -1.*t2548*t25800*t25040;
  t26497 = -1.*t25840*t25096;
  t26498 = t26496 + t25947 + t26497;
  t26507 = -1.*t2542*t25800;
  t26508 = t2548*t2561*t25840;
  t26509 = t26507 + t26508 + t25988;
  t26244 = -1.*t2548*t26119*t26122;
  t26531 = Power(t2561,2);
  t26246 = t25012*t2542*t25869;
  t26255 = -1.*t2548*t25012*t25040*t25869;
  t26256 = t25012*t26122*t25405;
  t26515 = t2548*t25800*t25040;
  t26516 = t25840*t25096;
  t26517 = t26515 + t26001 + t26516;
  t26285 = t2548*t25012*t26281;
  t26307 = -1.*t26281*t25398;
  t26595 = Power(t2548,2);
  t26322 = t26281*t25398;
  t26332 = -1.*t26281*t25405;
  t26333 = -1.*t25869*t25609;
  t26348 = -1.*t2548*t25012*t26281;
  t26354 = t26281*t25405;
  t26355 = t25869*t25609;
  t26383 = t2548*t25012*t26382;
  t26400 = -1.*t25869*t25663;
  t26401 = -1.*t26382*t25398;
  t26415 = t25869*t25663;
  t26416 = t26382*t25398;
  t26425 = -1.*t26382*t25405;
  t26436 = -1.*t2548*t25012*t26382;
  t26445 = t26382*t25405;
  t26568 = -1.*t2548*t25800;
  t26569 = -1.*t2542*t26128;
  t26577 = -1.*t2542*t25800*t25040;
  t26578 = t2548*t26128*t25040;
  t26529 = t2548*t25800;
  t26530 = t2542*t26128;
  t26538 = t2542*t25800*t25004;
  t26539 = -1.*t2548*t26128*t25004;
  t26549 = -1.*t2542*t25800*t25004;
  t26550 = t2548*t26128*t25004;
  t26557 = t2542*t25800*t25040;
  t26558 = -1.*t2548*t26128*t25040;
  t26706 = -1.*t2548*t25817;
  t26707 = t26507 + t26706;
  t26632 = t2548*t25800*t25082;
  t26633 = t26595*t26273*t25040;
  t26727 = t2548*t25817;
  t26728 = t26465 + t26727;
  t26596 = -1.*t26595*t26273*t25004;
  t26772 = Power(t2542,2);
  t26751 = -1.*t25810*t25082;
  t26752 = t2542*t25817*t25040;
  t26753 = t26751 + t26496 + t26752;
  t26760 = -1.*t2542*t25817*t25004;
  t26761 = t25810*t25040;
  t26762 = t26492 + t26760 + t26761;
  t26617 = -1.*t2548*t25800*t25082;
  t26619 = -1.*t26595*t26273*t25040;
  t26610 = t26595*t26273*t25004;
  t26714 = t25810*t25082;
  t26715 = -1.*t2542*t25817*t25040;
  t26686 = t26595*t26377*t25040;
  t26649 = -1.*t26595*t26377*t25004;
  t26650 = -1.*t2548*t25800*t25311;
  t26739 = t2542*t25817*t25004;
  t26740 = -1.*t25810*t25040;
  t26674 = -1.*t26595*t26377*t25040;
  t26660 = t26595*t26377*t25004;
  t26661 = t2548*t25800*t25311;
  t26716 = t26714 + t26515 + t26715;
  t26742 = t26478 + t26739 + t26740;
  t26790 = -1.*t26279*t25082;
  t26791 = -1.*t25810*t25311;
  t26797 = t26279*t25040;
  t26856 = t25794*t25004;
  t26857 = t26856 + t26761;
  t26864 = -1.*t25794*t25040;
  t26865 = t26751 + t26864;
  t26825 = -1.*t26380*t25082;
  t26829 = t25810*t25004;
  t26833 = t26380*t25040;
  t26945 = -0.325*t24908;
  t26946 = -1.*t25790*t24908;
  p_output1[0]=t25071*var2[0] + t24429*var2[1] + t25100*var2[2];
  p_output1[1]=t25132*t2532*var2[0] - 1.*t25012*t2532*t2548*var2[1] + t25126*t2532*var2[2];
  p_output1[2]=t25147*var2[0] + t25141*var2[1] + t25160*var2[2];
  p_output1[3]=t25343*var2[0] + t25327*var2[2];
  p_output1[4]=t25371*var2[0] + t25359*var2[2];
  p_output1[5]=t25359;
  p_output1[6]=t25381;
  p_output1[7]=t25343;
  p_output1[8]=(-1.*t25071*t25385 - 1.*t25382*t25398)*var2[0] + (-1.*t24429*t25385 - 1.*t25012*t25382*t2548)*var2[1] + (-1.*t25100*t25385 - 1.*t25382*t25405)*var2[2];
  p_output1[9]=-1.*t25382*t25421*var2[0] - 1.*t25382*t25413*var2[1] - 1.*t25382*t25428*var2[2];
  p_output1[10]=(t25061*t25385 + t25132*t25382*t2551)*var2[0] + (-1.*t25012*t25382*t2548*t2551 - 1.*t25385*t2548*t2561)*var2[1] + (t25096*t25385 + t25126*t25382*t2551)*var2[2];
  p_output1[11]=(-1.*t25004*t25012*t25385*t2548 - 1.*t25382*t25571)*var2[0] + (-1.*t25012*t25385*t2542 - 1.*t25382*t25537)*var2[1] + (-1.*t25012*t25040*t25385*t2548 - 1.*t25382*t25591)*var2[2];
  p_output1[12]=t25630*var2[0] + (t25385*t25609 - 1.*t25382*t25620)*var2[2];
  p_output1[13]=(t25385*t25663 - 1.*t25382*t25670)*var2[0] + t25647*var2[2];
  p_output1[14]=t25647;
  p_output1[15]=t25679;
  p_output1[16]=t25630;
  p_output1[17]=t25647*var2[0] + t25679*var2[1] + t25630*var2[2];
  p_output1[18]=t25385*t25421*var2[0] + t25385*t25413*var2[1] + t25385*t25428*var2[2];
  p_output1[19]=(t25061*t25382 - 1.*t25132*t25385*t2551)*var2[0] + (t25012*t25385*t2548*t2551 - 1.*t25382*t2548*t2561)*var2[1] + (t25096*t25382 - 1.*t25126*t25385*t2551)*var2[2];
  p_output1[20]=(-1.*t25004*t25012*t25382*t2548 + t25385*t25571)*var2[0] + (-1.*t25012*t25382*t2542 + t25385*t25537)*var2[1] + (-1.*t25012*t25040*t25382*t2548 + t25385*t25591)*var2[2];
  p_output1[21]=t25755*var2[0] + (t25382*t25609 + t25385*t25620)*var2[2];
  p_output1[22]=(t25382*t25663 + t25385*t25670)*var2[0] + t25762*var2[2];
  p_output1[23]=t25762;
  p_output1[24]=t24429*t25385 + t25012*t25382*t2548;
  p_output1[25]=t25755;
  p_output1[26]=(t25343*(-1.*t24429*t25842 - 1.*t24429*t25847 - 1.*t25381*t25852 - 1.*t25413*t25852) + t25381*(t25100*t25842 + t25100*t25847 + t25343*t25852 + t25428*t25852) + t25100*t25992 + t24429*t26004)*var2[0] + (t25343*(t25071*t25842 + t25071*t25847 + t25359*t25852 + t25421*t25852) + t25359*(-1.*t25100*t25842 - 1.*t25100*t25847 - 1.*t25343*t25852 - 1.*t25428*t25852) + t25100*t25936 + t25071*t25957)*var2[1] + (t25359*(t24429*t25842 + t24429*t25847 + t25381*t25852 + t25413*t25852) + t25381*(-1.*t25071*t25842 - 1.*t25071*t25847 - 1.*t25359*t25852 - 1.*t25421*t25852) + t25071*t25873 + t24429*t25893)*var2[2];
  p_output1[27]=(t25126*t2532*t25992 - 1.*t25012*t2532*t2548*t26004 + t25343*(-1.*t25012*t2548*t25840 + t25012*t2532*t2548*t25847 - 1.*t25012*t2548*t2551*t25852 - 1.*t2532*t25381*t26017 + t24429*t2551*t26017 + t26088) + t25381*(t25126*t2532*t25847 - 1.*t25126*t2551*t25852 + t2532*t25343*t26017 - 1.*t25100*t2551*t26017 + t26100 + t26101))*var2[0] + (t25126*t2532*t25936 + t25132*t2532*t25957 + t25343*(t25132*t2532*t25847 - 1.*t25132*t2551*t25852 + t2532*t25359*t26017 - 1.*t25071*t2551*t26017 + t26052 + t26053) + t25359*(-1.*t25126*t2532*t25847 + t25126*t2551*t25852 - 1.*t2532*t25343*t26017 + t25100*t2551*t26017 + t26065 + t26066))*var2[1] + (t25132*t2532*t25873 - 1.*t25012*t2532*t2548*t25893 + t25359*(t25012*t2548*t25840 - 1.*t25012*t2532*t2548*t25847 + t25012*t2548*t2551*t25852 + t2532*t25381*t26017 - 1.*t24429*t2551*t26017 + t26019) + t25381*(-1.*t25132*t2532*t25847 + t25132*t2551*t25852 - 1.*t2532*t25359*t26017 + t25071*t2551*t26017 + t26030 + t26031))*var2[2];
  p_output1[28]=(t25160*t25992 + t25141*t26004 + t25343*(-1.*t25141*t25847 - 1.*t25537*t25852 - 1.*t25381*t26132 - 1.*t24429*t26144 + t26244 + t26246) + t25381*(t25160*t25847 + t25591*t25852 + t25343*t26132 + t25100*t26144 + t26255 + t26256))*var2[0] + (t25160*t25936 + t25147*t25957 + t25343*(t25147*t25847 + t25571*t25852 + t25359*t26132 + t25071*t26144 + t26180 + t26181) + t25359*(-1.*t25160*t25847 - 1.*t25591*t25852 - 1.*t25343*t26132 - 1.*t25100*t26144 + t26195 + t26197))*var2[1] + (t25147*t25873 + t25141*t25893 + t25359*(t25141*t25847 + t25537*t25852 + t26123 + t25381*t26132 + t26136 + t24429*t26144) + t25381*(-1.*t25147*t25847 - 1.*t25571*t25852 - 1.*t25359*t26132 - 1.*t25071*t26144 + t26159 + t26161))*var2[2];
  p_output1[29]=(t25327*t25992 + t25343*(-1.*t25381*t26296 - 1.*t24429*t26301 + t26348) + t25381*(t25327*t25847 + t25620*t25852 + t25343*t26296 + t25100*t26301 + t26354 + t26355))*var2[0] + (t25327*t25936 + t25343*t25957 + t25343*(t26001 + t26002 + t26003 + t25359*t26296 + t25071*t26301 + t26322) + t25359*(-1.*t25327*t25847 - 1.*t25620*t25852 - 1.*t25343*t26296 - 1.*t25100*t26301 + t26332 + t26333))*var2[1] + (t25343*t25873 + t25359*(t26285 + t25381*t26296 + t24429*t26301) + t25381*(t25947 + t25949 + t25950 - 1.*t25359*t26296 - 1.*t25071*t26301 + t26307))*var2[2];
  p_output1[30]=(t25359*t25992 + t25343*(-1.*t25381*t26391 - 1.*t24429*t26395 + t26436) + t25381*(t25933 + t25934 + t25935 + t25343*t26391 + t25100*t26395 + t26445))*var2[0] + (t25359*t25936 + t25371*t25957 + t25343*(t25371*t25847 + t25670*t25852 + t25359*t26391 + t25071*t26395 + t26415 + t26416) + t25359*(t25887 + t25888 + t25892 - 1.*t25343*t26391 - 1.*t25100*t26395 + t26425))*var2[1] + (t25371*t25873 + t25359*(t26383 + t25381*t26391 + t24429*t26395) + t25381*(-1.*t25371*t25847 - 1.*t25670*t25852 - 1.*t25359*t26391 - 1.*t25071*t26395 + t26400 + t26401))*var2[2];
  p_output1[31]=t25343*t25992 + t25381*t26004;
  p_output1[32]=t25343*t25936 + t25359*t25957;
  p_output1[33]=t25359*t25873 + t25381*t25893;
  p_output1[34]=(t25405*(t2548*t2561*t26017 + t26088) + t25012*t2548*(t25126*t25840 + t25096*t26017 + t26100 + t26101) + t25096*t26509 - 1.*t2548*t2561*t26517)*var2[0] + (t25405*(t25132*t25840 + t25061*t26017 + t26052 + t26053) + t25398*(-1.*t25126*t25840 - 1.*t25096*t26017 + t26065 + t26066) + t25096*t26494 + t25061*t26498)*var2[1] + (t25398*(-1.*t2548*t2561*t26017 + t26019) + t25012*t2548*(-1.*t25132*t25840 - 1.*t25061*t26017 + t26030 + t26031) + t25061*t26467 - 1.*t2548*t2561*t26481)*var2[2];
  p_output1[35]=(-1.*t25012*t25040*t2548*t26509 - 1.*t25012*t2542*t26517 + t25405*(-1.*t2542*t2561*t25840 + t26244 + t26246 - 1.*t2548*t26122*t26531 + t26568 + t26569) + t25012*t2548*(t25040*t2548*t2561*t25840 - 1.*t25096*t2561*t26122 + t26255 + t26256 + t26577 + t26578))*var2[0] + (-1.*t25012*t25040*t2548*t26494 - 1.*t25004*t25012*t2548*t26498 + t25405*(t25004*t2548*t2561*t25840 - 1.*t25061*t2561*t26122 + t26180 + t26181 + t26549 + t26550) + t25398*(-1.*t25040*t2548*t2561*t25840 + t25096*t2561*t26122 + t26195 + t26197 + t26557 + t26558))*var2[1] + (-1.*t25004*t25012*t2548*t26467 - 1.*t25012*t2542*t26481 + t25398*(t2542*t2561*t25840 + t26123 + t26136 + t26529 + t26530 + t2548*t26122*t26531) + t25012*t2548*(-1.*t25004*t2548*t2561*t25840 + t25061*t2561*t26122 + t26159 + t26161 + t26538 + t26539))*var2[2];
  p_output1[36]=(t25405*(-1.*t2542*t2548*t26273 + t2548*t2561*t26290 + t26348) + t25609*t26509 + t25012*t2548*(t25319*t25840 + t25096*t26290 + t26354 + t26355 + t26632 + t26633))*var2[0] + (t25609*t26494 + t25405*t26498 + t25405*(t26001 + t25061*t26290 + t26322 + t26515 + t26516 + t26610) + t25398*(-1.*t25319*t25840 - 1.*t25096*t26290 + t26332 + t26333 + t26617 + t26619))*var2[1] + (t25398*(t2542*t2548*t26273 + t26285 - 1.*t2548*t2561*t26290) + t25405*t26467 + t25012*t2548*(t25947 - 1.*t25061*t26290 + t26307 + t26496 + t26497 + t26596))*var2[2];
  p_output1[37]=(t25405*(-1.*t2542*t2548*t26377 + t2548*t2561*t26389 + t26436) + t25398*t26509 + t25012*t2548*(t25933 + t25096*t26389 + t26445 + t26492 + t26493 + t26686))*var2[0] + (t25398*t26494 + t25663*t26498 + t25405*(t25369*t25840 + t25061*t26389 + t26415 + t26416 + t26660 + t26661) + t25398*(t25887 - 1.*t25096*t26389 + t26425 + t26478 + t26479 + t26674))*var2[1] + (t25398*(t2542*t2548*t26377 + t26383 - 1.*t2548*t2561*t26389) + t25663*t26467 + t25012*t2548*(-1.*t25369*t25840 - 1.*t25061*t26389 + t26400 + t26401 + t26649 + t26650))*var2[2];
  p_output1[38]=t25405*t26509 + t25012*t2548*t26517;
  p_output1[39]=t25405*t26494 + t25398*t26498;
  p_output1[40]=t25398*t26467 + t25012*t2548*t26481;
  p_output1[41]=(t25040*t2548*(t2542*t25817 - 1.*t2548*t26122 + t26568 + t26569) + t2542*(-1.*t25040*t2548*t25817 - 1.*t25040*t2542*t26122 + t26577 + t26578) - 1.*t25040*t2542*t26707 + t2548*t26716)*var2[0] + (t25040*t2548*(-1.*t25004*t2548*t25817 - 1.*t25004*t2542*t26122 + t26549 + t26550) + t25004*t2548*(t25040*t2548*t25817 + t25040*t2542*t26122 + t26557 + t26558) - 1.*t25004*t2542*t26753 - 1.*t25040*t2542*t26762)*var2[1] + (t25004*t2548*(-1.*t2542*t25817 + t2548*t26122 + t26529 + t26530) + t2542*(t25004*t2548*t25817 + t25004*t2542*t26122 + t26538 + t26539) - 1.*t25004*t2542*t26728 + t2548*t26742)*var2[2];
  p_output1[42]=(t25082*t2548*t26707 + t2542*(t25311*t25810 - 1.*t25082*t2542*t25817 + t25082*t26279 + t26632 + t26633 + t25040*t26273*t26772))*var2[0] + (t25040*t2548*t26753 + t25082*t2548*t26762 + t25004*t2548*(t25082*t2542*t25817 + t26617 + t26619 - 1.*t25040*t26273*t26772 + t26790 + t26791) + t25040*t2548*(t26515 + t26610 + t26714 + t26715 + t25004*t26273*t26772 + t26797))*var2[1] + (t25040*t2548*t26728 + t2542*(-1.*t25040*t26279 + t26496 + t26596 + t26751 + t26752 - 1.*t25004*t26273*t26772))*var2[2];
  p_output1[43]=(t25004*t2548*t26707 + t2542*(t25082*t26380 + t26492 + t26686 + t26760 + t26761 + t25040*t26377*t26772))*var2[0] + (t25311*t2548*t26753 + t25004*t2548*t26762 + t25004*t2548*(t26478 + t26674 + t26739 + t26740 - 1.*t25040*t26377*t26772 + t26825) + t25040*t2548*(-1.*t25311*t2542*t25817 + t26660 + t26661 + t25004*t26377*t26772 + t26829 + t26833))*var2[1] + (t25311*t2548*t26728 + t2542*(-1.*t25004*t25810 + t25311*t2542*t25817 - 1.*t25040*t26380 + t26649 + t26650 - 1.*t25004*t26377*t26772))*var2[2];
  p_output1[44]=t25040*t2548*t26707 + t2542*t26716;
  p_output1[45]=t25004*t2548*t26753 + t25040*t2548*t26762;
  p_output1[46]=t25004*t2548*t26728 + t2542*t26742;
  p_output1[47]=(0.1575*t25040 + 0.2255*t25311)*var2[0] + (t25040*(-1.*t25082*t25794 - 1.*t25040*t26273 + t26790 + t26791) + t25082*(t25040*t25794 + t25004*t26273 + t26714 + t26797) + t25311*t26857 + t25082*t26865)*var2[1] - 0.068*t25082*var2[2];
  p_output1[48]=(0.2255*t25040 + 0.1575*t25311)*var2[0] + (t25040*(-1.*t25004*t25794 - 1.*t25040*t26377 + t26740 + t26825) + t25082*(t25311*t25794 + t25004*t26377 + t26829 + t26833) + t25040*t26857 + t25004*t26865)*var2[1] - 0.068*t25004*var2[2];
  p_output1[49]=0.1575*t25004 + 0.2255*t25082;
  p_output1[50]=t25082*t26857 + t25040*t26865;
  p_output1[51]=-0.068*t25040;
  p_output1[52]=(-0.325*t24701 - 1.*t24701*t25790 - 1.*t24701*t26373)*var2[0] + (-1.*t24908*t26373 + t26945 + t26946)*var2[2];
  p_output1[53]=-1.*t24701*t25783 + t26945 + t26946;
  p_output1[54]=0.325*t24701 - 1.*t24908*t25783 + t24701*t25790;
  p_output1[55]=-0.0641;
  p_output1[56]=-0.28;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 57, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_ParallelStance.hh"

namespace ParallelStance
{

void J_fRrFoot_vec_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
