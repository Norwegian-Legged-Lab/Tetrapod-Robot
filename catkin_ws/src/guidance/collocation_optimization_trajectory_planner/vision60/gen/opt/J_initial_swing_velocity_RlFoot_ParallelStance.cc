/*
 * Automatically Generated from Mathematica.
 * Sun 3 Apr 2022 21:48:36 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t395;
  double t24683;
  double t71;
  double t24753;
  double t25101;
  double t25155;
  double t25161;
  double t25169;
  double t25182;
  double t25324;
  double t25512;
  double t25723;
  double t30519;
  double t25399;
  double t25407;
  double t31415;
  double t31506;
  double t31546;
  double t31717;
  double t31751;
  double t31794;
  double t31134;
  double t31325;
  double t30516;
  double t30518;
  double t32338;
  double t32359;
  double t32726;
  double t32771;
  double t32773;
  double t32774;
  double t32777;
  double t32778;
  double t32779;
  double t26397;
  double t26407;
  double t26417;
  double t32938;
  double t32956;
  double t32961;
  double t32963;
  double t32964;
  double t32965;
  double t33033;
  double t33034;
  double t33035;
  double t33114;
  double t33131;
  double t33201;
  double t33311;
  double t33312;
  double t33314;
  double t33433;
  double t33437;
  double t33438;
  double t32279;
  double t32305;
  double t33540;
  double t33541;
  double t33543;
  double t33544;
  double t30520;
  double t30673;
  double t31083;
  double t31414;
  double t31586;
  double t31834;
  double t31851;
  double t32064;
  double t32194;
  double t32201;
  double t32207;
  double t32232;
  double t32252;
  double t32266;
  double t32272;
  double t33061;
  double t33062;
  double t33063;
  double t33064;
  double t33065;
  double t33066;
  double t33067;
  double t33068;
  double t33070;
  double t33071;
  double t33073;
  double t33078;
  double t33082;
  double t32308;
  double t32314;
  double t32326;
  double t32281;
  double t32332;
  double t32748;
  double t22277;
  double t25127;
  double t25320;
  double t25431;
  double t25752;
  double t26448;
  double t26998;
  double t27232;
  double t27280;
  double t27404;
  double t27556;
  double t27606;
  double t30086;
  double t30455;
  double t30493;
  double t33697;
  double t33698;
  double t33699;
  double t33700;
  double t33701;
  double t33702;
  double t33703;
  double t33704;
  double t33714;
  double t33715;
  double t33717;
  double t33719;
  double t33423;
  double t33429;
  double t33439;
  double t33441;
  double t33442;
  double t33443;
  double t33444;
  double t33445;
  double t33446;
  double t33464;
  double t33523;
  double t33524;
  double t33525;
  double t33950;
  double t33951;
  double t33952;
  double t33949;
  double t33953;
  double t33954;
  double t33973;
  double t33974;
  double t34049;
  double t34050;
  double t32909;
  double t32932;
  double t32962;
  double t32973;
  double t32974;
  double t32975;
  double t32976;
  double t32978;
  double t32990;
  double t33012;
  double t33019;
  double t33020;
  double t33021;
  double t33637;
  double t33638;
  double t33641;
  double t33642;
  double t33646;
  double t33681;
  double t33683;
  double t33687;
  double t33693;
  double t33694;
  double t33695;
  double t33294;
  double t33315;
  double t33316;
  double t33318;
  double t33320;
  double t33322;
  double t33323;
  double t33324;
  double t33325;
  double t33371;
  double t33380;
  double t33955;
  double t34024;
  double t34025;
  double t34030;
  double t34036;
  double t34039;
  double t34040;
  double t34042;
  double t34043;
  double t34044;
  double t34045;
  double t34104;
  double t34105;
  double t34106;
  double t33032;
  double t33036;
  double t33038;
  double t33039;
  double t33040;
  double t33041;
  double t33042;
  double t33046;
  double t33048;
  double t33049;
  double t33050;
  double t34109;
  double t34075;
  double t34114;
  double t34115;
  double t34116;
  double t34220;
  double t34231;
  double t34232;
  double t34233;
  double t34235;
  double t34236;
  double t34237;
  double t34240;
  double t34242;
  double t34243;
  double t34256;
  double t34258;
  double t34259;
  double t34260;
  double t34262;
  double t34263;
  double t34264;
  double t34283;
  double t34285;
  double t34286;
  double t34291;
  double t34292;
  double t34293;
  double t34296;
  double t34297;
  double t34298;
  double t34268;
  double t34269;
  double t34270;
  double t34310;
  double t34312;
  double t34313;
  double t34316;
  double t34317;
  double t34318;
  double t34320;
  double t34321;
  double t34322;
  double t34341;
  double t34342;
  double t34343;
  double t34360;
  double t34361;
  double t34362;
  double t34356;
  double t34357;
  double t34358;
  double t34368;
  double t34369;
  double t34370;
  double t34372;
  double t34373;
  double t34375;
  double t34377;
  double t34378;
  double t34379;
  double t34400;
  double t34401;
  double t34402;
  double t34424;
  double t34426;
  double t34427;
  double t34429;
  double t34430;
  double t34431;
  double t34221;
  double t34223;
  double t34225;
  double t34227;
  double t34228;
  double t34229;
  double t34230;
  double t34234;
  double t34238;
  double t34244;
  double t34245;
  double t34246;
  double t34247;
  double t34248;
  double t34249;
  double t34250;
  double t34251;
  double t34252;
  double t34253;
  double t34406;
  double t34407;
  double t34408;
  double t34448;
  double t34450;
  double t34451;
  double t34453;
  double t34454;
  double t34455;
  double t34468;
  double t34469;
  double t34470;
  double t34355;
  double t34364;
  double t34487;
  double t34488;
  double t34490;
  double t34492;
  double t34493;
  double t34495;
  double t34497;
  double t34498;
  double t34420;
  double t34421;
  double t34422;
  double t34423;
  double t34428;
  double t34432;
  double t34433;
  double t34434;
  double t34435;
  double t34436;
  double t34437;
  double t34438;
  double t34439;
  double t34440;
  double t34442;
  double t34287;
  double t34288;
  double t34289;
  double t34290;
  double t34295;
  double t34299;
  double t34300;
  double t34301;
  double t34302;
  double t34303;
  double t34304;
  double t34305;
  double t34306;
  double t34307;
  double t34308;
  double t34541;
  double t34542;
  double t34543;
  double t34540;
  double t34544;
  double t34545;
  double t34547;
  double t34549;
  double t34551;
  double t34569;
  double t34570;
  double t34571;
  double t34359;
  double t34363;
  double t34593;
  double t34594;
  double t34596;
  double t34597;
  double t34519;
  double t34521;
  double t34522;
  double t34523;
  double t34525;
  double t34527;
  double t34528;
  double t34529;
  double t34530;
  double t34531;
  double t34533;
  double t34535;
  double t34536;
  double t34398;
  double t34399;
  double t34403;
  double t34404;
  double t34405;
  double t34409;
  double t34410;
  double t34411;
  double t34412;
  double t34413;
  double t34414;
  double t34415;
  double t34416;
  double t34417;
  double t34418;
  double t34255;
  double t34261;
  double t34265;
  double t34266;
  double t34267;
  double t34272;
  double t34273;
  double t34274;
  double t34275;
  double t34276;
  double t34277;
  double t34278;
  double t34279;
  double t34280;
  double t34281;
  double t34613;
  double t34614;
  double t34647;
  double t34648;
  double t34446;
  double t34447;
  double t34452;
  double t34456;
  double t34457;
  double t34458;
  double t34459;
  double t34460;
  double t34461;
  double t34462;
  double t34463;
  double t34464;
  double t34465;
  double t34628;
  double t34629;
  double t34630;
  double t34631;
  double t34632;
  double t34634;
  double t34636;
  double t34638;
  double t34640;
  double t34641;
  double t34642;
  double t34643;
  double t34567;
  double t34568;
  double t34572;
  double t34573;
  double t34574;
  double t34577;
  double t34578;
  double t34580;
  double t34582;
  double t34583;
  double t34584;
  double t34585;
  double t34587;
  double t34314;
  double t34315;
  double t34319;
  double t34323;
  double t34325;
  double t34326;
  double t34329;
  double t34330;
  double t34331;
  double t34332;
  double t34333;
  double t34334;
  double t34337;
  double t34668;
  double t34669;
  double t34670;
  double t34672;
  double t34673;
  double t34674;
  double t34671;
  double t34675;
  double t34676;
  double t34678;
  double t34679;
  double t34680;
  double t34695;
  double t34696;
  double t34697;
  double t34467;
  double t34471;
  double t34472;
  double t34473;
  double t34474;
  double t34475;
  double t34476;
  double t34477;
  double t34478;
  double t34479;
  double t34480;
  double t34615;
  double t34616;
  double t34617;
  double t34618;
  double t34619;
  double t34620;
  double t34621;
  double t34622;
  double t34623;
  double t34624;
  double t34625;
  double t34546;
  double t34552;
  double t34556;
  double t34557;
  double t34558;
  double t34559;
  double t34560;
  double t34562;
  double t34563;
  double t34564;
  double t34565;
  double t34340;
  double t34344;
  double t34345;
  double t34346;
  double t34347;
  double t34348;
  double t34349;
  double t34350;
  double t34351;
  double t34352;
  double t34353;
  double t34677;
  double t34681;
  double t34682;
  double t34683;
  double t34684;
  double t34685;
  double t34686;
  double t34687;
  double t34688;
  double t34689;
  double t34690;
  double t34721;
  double t34722;
  double t34723;
  double t34725;
  double t34702;
  double t34729;
  double t34730;
  double t34731;
  double t34753;
  double t34754;
  double t34755;
  double t34756;
  double t34757;
  double t34758;
  double t34759;
  double t34760;
  double t34761;
  double t34762;
  double t34763;
  double t34764;
  double t34765;
  double t34766;
  double t34767;
  double t34779;
  double t34780;
  double t34782;
  double t34783;
  double t34784;
  double t34785;
  double t34786;
  double t34787;
  double t34789;
  double t34768;
  double t34769;
  double t34770;
  double t34771;
  double t34772;
  double t34773;
  double t34774;
  double t34775;
  double t34776;
  double t34777;
  double t34778;
  double t34736;
  double t34737;
  double t34738;
  double t34739;
  double t34740;
  double t34741;
  double t34742;
  double t34743;
  double t34744;
  double t34745;
  double t34747;
  double t34748;
  double t34750;
  double t34751;
  double t34752;
  double t34791;
  double t34792;
  double t34793;
  double t34794;
  double t34795;
  double t34797;
  double t34798;
  double t34799;
  double t34800;
  double t34801;
  double t34802;
  double t34804;
  double t34806;
  double t34808;
  double t34809;
  double t34854;
  double t34855;
  double t34856;
  double t34861;
  double t34866;
  double t34867;
  double t34827;
  double t34828;
  double t34829;
  double t34889;
  double t34890;
  double t34891;
  double t34895;
  double t34896;
  double t34915;
  double t34916;
  double t34917;
  double t34940;
  double t34941;
  double t34943;
  double t34945;
  double t34946;
  double t34949;
  double t34950;
  double t34951;
  double t34844;
  double t34845;
  double t34848;
  double t34850;
  double t34857;
  double t34868;
  double t34869;
  double t34870;
  double t34872;
  double t34875;
  double t34876;
  double t34877;
  double t34878;
  double t34881;
  double t34882;
  double t34988;
  double t34989;
  double t34991;
  double t34994;
  double t35009;
  double t35010;
  double t35011;
  double t35008;
  double t35012;
  double t35013;
  double t35015;
  double t35016;
  double t35017;
  double t35034;
  double t35035;
  double t35036;
  double t34820;
  double t34821;
  double t34823;
  double t34824;
  double t34825;
  double t34830;
  double t34831;
  double t34833;
  double t34835;
  double t34836;
  double t34837;
  double t34838;
  double t34839;
  double t34841;
  double t34842;
  double t34969;
  double t34970;
  double t34972;
  double t34973;
  double t34974;
  double t34975;
  double t34976;
  double t34977;
  double t34978;
  double t34980;
  double t34982;
  double t34983;
  double t34984;
  double t35060;
  double t35061;
  double t35098;
  double t35099;
  double t34885;
  double t34886;
  double t34894;
  double t34899;
  double t34902;
  double t34903;
  double t34904;
  double t34905;
  double t34906;
  double t34909;
  double t34910;
  double t34911;
  double t34912;
  double t35077;
  double t35078;
  double t35080;
  double t35081;
  double t35083;
  double t35084;
  double t35085;
  double t35086;
  double t35087;
  double t35088;
  double t35090;
  double t35092;
  double t35031;
  double t35033;
  double t35038;
  double t35040;
  double t35041;
  double t35042;
  double t35043;
  double t35045;
  double t35047;
  double t35048;
  double t35049;
  double t35051;
  double t35052;
  double t35123;
  double t35124;
  double t35125;
  double t35122;
  double t35126;
  double t35127;
  double t35129;
  double t35130;
  double t35131;
  double t35145;
  double t35146;
  double t35148;
  double t34914;
  double t34918;
  double t34921;
  double t34922;
  double t34923;
  double t34924;
  double t34925;
  double t34926;
  double t34927;
  double t34928;
  double t34930;
  double t35063;
  double t35064;
  double t35065;
  double t35066;
  double t35067;
  double t35068;
  double t35069;
  double t35070;
  double t35071;
  double t35072;
  double t35073;
  double t35014;
  double t35018;
  double t35019;
  double t35020;
  double t35021;
  double t35022;
  double t35024;
  double t35025;
  double t35026;
  double t35027;
  double t35028;
  double t35128;
  double t35132;
  double t35133;
  double t35134;
  double t35135;
  double t35136;
  double t35137;
  double t35138;
  double t35139;
  double t35140;
  double t35141;
  double t35169;
  double t35170;
  double t35171;
  double t35173;
  double t35153;
  double t35177;
  double t35178;
  double t35179;
  t395 = Cos(var1[4]);
  t24683 = Sin(var1[9]);
  t71 = Cos(var1[9]);
  t24753 = Sin(var1[4]);
  t25101 = Sin(var1[5]);
  t25155 = Sin(var1[10]);
  t25161 = -1.*t395*t24683;
  t25169 = -1.*t71*t24753*t25101;
  t25182 = t25161 + t25169;
  t25324 = Cos(var1[11]);
  t25512 = Cos(var1[10]);
  t25723 = Sin(var1[11]);
  t30519 = Cos(var1[5]);
  t25399 = -1.*t25324;
  t25407 = 1. + t25399;
  t31415 = -1.*t30519*t24683*t25155*t24753;
  t31506 = t25512*t24753*t25101;
  t31546 = t31415 + t31506;
  t31717 = -1.*t25512*t30519*t24683*t24753;
  t31751 = -1.*t25155*t24753*t25101;
  t31794 = t31717 + t31751;
  t31134 = -1.*t25512;
  t31325 = 1. + t31134;
  t30516 = -1.*t71;
  t30518 = 1. + t30516;
  t32338 = -1.*t71*t24753;
  t32359 = -1.*t395*t24683*t25101;
  t32726 = t32338 + t32359;
  t32771 = t395*t30519*t25155;
  t32773 = t25512*t32726;
  t32774 = t32771 + t32773;
  t32777 = -1.*t25512*t395*t30519;
  t32778 = t25155*t32726;
  t32779 = t32777 + t32778;
  t26397 = t71*t395;
  t26407 = -1.*t24683*t24753*t25101;
  t26417 = t26397 + t26407;
  t32938 = t30519*t25155*t24753;
  t32956 = t25512*t26417;
  t32961 = t32938 + t32956;
  t32963 = t25512*t30519*t24753;
  t32964 = -1.*t25155*t26417;
  t32965 = t32963 + t32964;
  t33033 = -1.*t25512*t30519*t24753;
  t33034 = t25155*t26417;
  t33035 = t33033 + t33034;
  t33114 = t395*t30519*t24683*t25155;
  t33131 = -1.*t25512*t395*t25101;
  t33201 = t33114 + t33131;
  t33311 = t25512*t395*t30519*t24683;
  t33312 = t395*t25155*t25101;
  t33314 = t33311 + t33312;
  t33433 = -1.*t395*t30519*t24683*t25155;
  t33437 = t25512*t395*t25101;
  t33438 = t33433 + t33437;
  t32279 = 0.325*t31325*t395*t30519;
  t32305 = 0.1575*t30518*t395*t25101;
  t33540 = -1.*t25512*t395*t24683*t25101;
  t33541 = t32771 + t33540;
  t33543 = -1.*t395*t24683*t25155*t25101;
  t33544 = t32777 + t33543;
  t30520 = 0.1575*t30518*t30519*t24753;
  t30673 = 0.2255*t71*t30519*t24753;
  t31083 = -0.325*t30519*t24683*t25155*t24753;
  t31414 = -0.325*t31325*t24753*t25101;
  t31586 = -0.575*t25407*t31546;
  t31834 = -0.575*t25723*t31794;
  t31851 = t25723*t31546;
  t32064 = t25324*t31794;
  t32194 = t31851 + t32064;
  t32201 = -0.0641*t32194;
  t32207 = t25324*t31546;
  t32232 = -1.*t25723*t31794;
  t32252 = t32207 + t32232;
  t32266 = -0.295*t32252;
  t32272 = t30520 + t30673 + t31083 + t31414 + t31586 + t31834 + t32201 + t32266;
  t33061 = 0.068*t395*t30519*t24683;
  t33062 = 0.325*t71*t395*t30519*t25155;
  t33063 = -0.575*t71*t25407*t395*t30519*t25155;
  t33064 = -0.575*t71*t25512*t395*t30519*t25723;
  t33065 = t71*t25324*t395*t30519*t25155;
  t33066 = -1.*t71*t25512*t395*t30519*t25723;
  t33067 = t33065 + t33066;
  t33068 = -0.295*t33067;
  t33070 = t71*t25512*t25324*t395*t30519;
  t33071 = t71*t395*t30519*t25155*t25723;
  t33073 = t33070 + t33071;
  t33078 = -0.0641*t33073;
  t33082 = t33061 + t33062 + t33063 + t33064 + t33068 + t33078;
  t32308 = -1.*t24683*t24753;
  t32314 = t71*t395*t25101;
  t32326 = t32308 + t32314;
  t32281 = 0.1575*t24683*t24753;
  t32332 = 0.2255*t32326;
  t32748 = 0.325*t25155*t32726;
  t22277 = -0.1575*t71*t395;
  t25127 = 0.1575*t24683*t24753*t25101;
  t25320 = 0.325*t25155*t25182;
  t25431 = -0.575*t25407*t25155*t25182;
  t25752 = -0.575*t25512*t25723*t25182;
  t26448 = 0.2255*t26417;
  t26998 = t25324*t25155*t25182;
  t27232 = -1.*t25512*t25723*t25182;
  t27280 = t26998 + t27232;
  t27404 = -0.295*t27280;
  t27556 = t25512*t25324*t25182;
  t27606 = t25155*t25723*t25182;
  t30086 = t27556 + t27606;
  t30455 = -0.0641*t30086;
  t30493 = t22277 + t25127 + t25320 + t25431 + t25752 + t26448 + t27404 + t30455;
  t33697 = 0.325*t25512*t32326;
  t33698 = -0.575*t25512*t25407*t32326;
  t33699 = 0.575*t25155*t25723*t32326;
  t33700 = -1.*t25324*t25155*t32326;
  t33701 = t25512*t25723*t32326;
  t33702 = t33700 + t33701;
  t33703 = -0.0641*t33702;
  t33704 = t25512*t25324*t32326;
  t33714 = t25155*t25723*t32326;
  t33715 = t33704 + t33714;
  t33717 = -0.295*t33715;
  t33719 = t33697 + t33698 + t33699 + t33703 + t33717;
  t33423 = 0.325*t25512*t395*t30519*t24683;
  t33429 = 0.325*t395*t25155*t25101;
  t33439 = -0.575*t25723*t33438;
  t33441 = -0.575*t25407*t33314;
  t33442 = -1.*t25723*t33438;
  t33443 = t25324*t33314;
  t33444 = t33442 + t33443;
  t33445 = -0.295*t33444;
  t33446 = t25324*t33438;
  t33464 = t25723*t33314;
  t33523 = t33446 + t33464;
  t33524 = -0.0641*t33523;
  t33525 = t33423 + t33429 + t33439 + t33441 + t33445 + t33524;
  t33950 = t71*t24753;
  t33951 = t395*t24683*t25101;
  t33952 = t33950 + t33951;
  t33949 = -1.*t395*t30519*t25155;
  t33953 = t25512*t33952;
  t33954 = t33949 + t33953;
  t33973 = -1.*t25155*t33952;
  t33974 = t32777 + t33973;
  t34049 = -1.*t25512*t33952;
  t34050 = t32771 + t34049;
  t32909 = 0.325*t30519*t25155*t24753;
  t32932 = 0.325*t25512*t26417;
  t32962 = -0.575*t25407*t32961;
  t32973 = -0.575*t25723*t32965;
  t32974 = t25723*t32961;
  t32975 = t25324*t32965;
  t32976 = t32974 + t32975;
  t32978 = -0.0641*t32976;
  t32990 = t25324*t32961;
  t33012 = -1.*t25723*t32965;
  t33019 = t32990 + t33012;
  t33020 = -0.295*t33019;
  t33021 = t32909 + t32932 + t32962 + t32973 + t32978 + t33020;
  t33637 = -0.575*t25512*t25324*t32326;
  t33638 = -0.575*t25155*t25723*t32326;
  t33641 = t25324*t25155*t32326;
  t33642 = -1.*t25512*t25723*t32326;
  t33646 = t33641 + t33642;
  t33681 = -0.0641*t33646;
  t33683 = -1.*t25512*t25324*t32326;
  t33687 = -1.*t25155*t25723*t32326;
  t33693 = t33683 + t33687;
  t33694 = -0.295*t33693;
  t33695 = t33637 + t33638 + t33681 + t33694;
  t33294 = -0.575*t25723*t33201;
  t33315 = -0.575*t25324*t33314;
  t33316 = -1.*t25723*t33201;
  t33318 = -1.*t25324*t33314;
  t33320 = t33316 + t33318;
  t33322 = -0.295*t33320;
  t33323 = t25324*t33201;
  t33324 = -1.*t25723*t33314;
  t33325 = t33323 + t33324;
  t33371 = -0.0641*t33325;
  t33380 = t33294 + t33315 + t33322 + t33371;
  t33955 = -0.575*t25723*t33954;
  t34024 = -0.575*t25324*t33974;
  t34025 = -1.*t25723*t33954;
  t34030 = -1.*t25324*t33974;
  t34036 = t34025 + t34030;
  t34039 = -0.295*t34036;
  t34040 = t25324*t33954;
  t34042 = -1.*t25723*t33974;
  t34043 = t34040 + t34042;
  t34044 = -0.0641*t34043;
  t34045 = t33955 + t34024 + t34039 + t34044;
  t34104 = t25512*t395*t30519;
  t34105 = t25155*t33952;
  t34106 = t34104 + t34105;
  t33032 = -0.575*t25324*t32961;
  t33036 = -0.575*t25723*t33035;
  t33038 = -1.*t25723*t32961;
  t33039 = t25324*t33035;
  t33040 = t33038 + t33039;
  t33041 = -0.0641*t33040;
  t33042 = -1.*t25324*t32961;
  t33046 = -1.*t25723*t33035;
  t33048 = t33042 + t33046;
  t33049 = -0.295*t33048;
  t33050 = t33032 + t33036 + t33041 + t33049;
  t34109 = t25723*t33954;
  t34075 = t25324*t33974;
  t34114 = -1.*t25324*t33954;
  t34115 = -1.*t25723*t34106;
  t34116 = t34114 + t34115;
  t34220 = Cos(var1[3]);
  t34231 = t71*t34220*t24753;
  t34232 = t34220*t395*t24683*t25101;
  t34233 = t34231 + t34232;
  t34235 = -1.*t34220*t395*t30519*t25155;
  t34236 = t25512*t34233;
  t34237 = t34235 + t34236;
  t34240 = t25512*t34220*t395*t30519;
  t34242 = t25155*t34233;
  t34243 = t34240 + t34242;
  t34256 = Sin(var1[3]);
  t34258 = -1.*t30519*t34256;
  t34259 = -1.*t34220*t24753*t25101;
  t34260 = t34258 + t34259;
  t34262 = t34220*t395*t24683;
  t34263 = -1.*t71*t34260;
  t34264 = t34262 + t34263;
  t34283 = -1.*t34220*t30519*t24753;
  t34285 = t34256*t25101;
  t34286 = t34283 + t34285;
  t34291 = -1.*t24683*t25155*t34286;
  t34292 = t25512*t34260;
  t34293 = t34291 + t34292;
  t34296 = -1.*t25512*t24683*t34286;
  t34297 = -1.*t25155*t34260;
  t34298 = t34296 + t34297;
  t34268 = -1.*t71*t34220*t395;
  t34269 = -1.*t24683*t34260;
  t34270 = t34268 + t34269;
  t34310 = t34220*t30519*t24753;
  t34312 = -1.*t34256*t25101;
  t34313 = t34310 + t34312;
  t34316 = -1.*t25155*t34313;
  t34317 = t25512*t34270;
  t34318 = t34316 + t34317;
  t34320 = -1.*t25512*t34313;
  t34321 = -1.*t25155*t34270;
  t34322 = t34320 + t34321;
  t34341 = t25512*t34313;
  t34342 = t25155*t34270;
  t34343 = t34341 + t34342;
  t34360 = -1.*t34220*t30519;
  t34361 = t34256*t24753*t25101;
  t34362 = t34360 + t34361;
  t34356 = -1.*t30519*t34256*t24753;
  t34357 = -1.*t34220*t25101;
  t34358 = t34356 + t34357;
  t34368 = t71*t395*t34256;
  t34369 = -1.*t24683*t34362;
  t34370 = t34368 + t34369;
  t34372 = -1.*t25155*t34358;
  t34373 = t25512*t34370;
  t34375 = t34372 + t34373;
  t34377 = t25512*t34358;
  t34378 = t25155*t34370;
  t34379 = t34377 + t34378;
  t34400 = -1.*t24683*t34256*t24753;
  t34401 = t71*t395*t34256*t25101;
  t34402 = t34400 + t34401;
  t34424 = t395*t30519*t24683*t25155*t34256;
  t34426 = -1.*t25512*t395*t34256*t25101;
  t34427 = t34424 + t34426;
  t34429 = t25512*t395*t30519*t24683*t34256;
  t34430 = t395*t25155*t34256*t25101;
  t34431 = t34429 + t34430;
  t34221 = -0.325*t31325*t34220*t395*t30519;
  t34223 = -0.1575*t34220*t24683*t24753;
  t34225 = -0.1575*t30518*t34220*t395*t25101;
  t34227 = t34220*t24683*t24753;
  t34228 = -1.*t71*t34220*t395*t25101;
  t34229 = t34227 + t34228;
  t34230 = 0.2255*t34229;
  t34234 = 0.325*t25155*t34233;
  t34238 = -0.575*t25723*t34237;
  t34244 = -0.575*t25407*t34243;
  t34245 = -1.*t25723*t34237;
  t34246 = t25324*t34243;
  t34247 = t34245 + t34246;
  t34248 = -0.295*t34247;
  t34249 = t25324*t34237;
  t34250 = t25723*t34243;
  t34251 = t34249 + t34250;
  t34252 = -0.0641*t34251;
  t34253 = t34221 + t34223 + t34225 + t34230 + t34234 + t34238 + t34244 + t34248 + t34252;
  t34406 = t71*t34256*t24753;
  t34407 = t395*t24683*t34256*t25101;
  t34408 = t34406 + t34407;
  t34448 = -1.*t395*t30519*t25155*t34256;
  t34450 = t25512*t34408;
  t34451 = t34448 + t34450;
  t34453 = -1.*t25512*t395*t30519*t34256;
  t34454 = -1.*t25155*t34408;
  t34455 = t34453 + t34454;
  t34468 = t25512*t395*t30519*t34256;
  t34469 = t25155*t34408;
  t34470 = t34468 + t34469;
  t34355 = -0.1575*t395*t24683*t34256;
  t34364 = t395*t24683*t34256;
  t34487 = -1.*t24683*t34256*t24753*t25101;
  t34488 = t34368 + t34487;
  t34490 = t30519*t25155*t34256*t24753;
  t34492 = t25512*t34488;
  t34493 = t34490 + t34492;
  t34495 = -1.*t25512*t30519*t34256*t24753;
  t34497 = t25155*t34488;
  t34498 = t34495 + t34497;
  t34420 = -0.1575*t30518*t395*t30519*t34256;
  t34421 = -0.2255*t71*t395*t30519*t34256;
  t34422 = 0.325*t395*t30519*t24683*t25155*t34256;
  t34423 = 0.325*t31325*t395*t34256*t25101;
  t34428 = -0.575*t25407*t34427;
  t34432 = -0.575*t25723*t34431;
  t34433 = t25723*t34427;
  t34434 = t25324*t34431;
  t34435 = t34433 + t34434;
  t34436 = -0.0641*t34435;
  t34437 = t25324*t34427;
  t34438 = -1.*t25723*t34431;
  t34439 = t34437 + t34438;
  t34440 = -0.295*t34439;
  t34442 = t34420 + t34421 + t34422 + t34423 + t34428 + t34432 + t34436 + t34440;
  t34287 = 0.1575*t30518*t34286;
  t34288 = 0.2255*t71*t34286;
  t34289 = -0.325*t24683*t25155*t34286;
  t34290 = -0.325*t31325*t34260;
  t34295 = -0.575*t25407*t34293;
  t34299 = -0.575*t25723*t34298;
  t34300 = t25723*t34293;
  t34301 = t25324*t34298;
  t34302 = t34300 + t34301;
  t34303 = -0.0641*t34302;
  t34304 = t25324*t34293;
  t34305 = -1.*t25723*t34298;
  t34306 = t34304 + t34305;
  t34307 = -0.295*t34306;
  t34308 = t34287 + t34288 + t34289 + t34290 + t34295 + t34299 + t34303 + t34307;
  t34541 = t34220*t30519;
  t34542 = -1.*t34256*t24753*t25101;
  t34543 = t34541 + t34542;
  t34540 = -1.*t24683*t25155*t34358;
  t34544 = t25512*t34543;
  t34545 = t34540 + t34544;
  t34547 = -1.*t25512*t24683*t34358;
  t34549 = -1.*t25155*t34543;
  t34551 = t34547 + t34549;
  t34569 = t24683*t25155*t34358;
  t34570 = -1.*t25512*t34543;
  t34571 = t34569 + t34570;
  t34359 = -0.325*t31325*t34358;
  t34363 = 0.1575*t30518*t34362;
  t34593 = -1.*t25512*t24683*t34362;
  t34594 = t34372 + t34593;
  t34596 = -1.*t24683*t25155*t34362;
  t34597 = t34377 + t34596;
  t34519 = -0.068*t24683*t34358;
  t34521 = -0.325*t71*t25155*t34358;
  t34522 = 0.575*t71*t25407*t25155*t34358;
  t34523 = 0.575*t71*t25512*t25723*t34358;
  t34525 = -1.*t71*t25324*t25155*t34358;
  t34527 = t71*t25512*t25723*t34358;
  t34528 = t34525 + t34527;
  t34529 = -0.295*t34528;
  t34530 = -1.*t71*t25512*t25324*t34358;
  t34531 = -1.*t71*t25155*t25723*t34358;
  t34533 = t34530 + t34531;
  t34535 = -0.0641*t34533;
  t34536 = t34519 + t34521 + t34522 + t34523 + t34529 + t34535;
  t34398 = -0.1575*t71*t34256*t24753;
  t34399 = -0.1575*t395*t24683*t34256*t25101;
  t34403 = 0.325*t25155*t34402;
  t34404 = -0.575*t25407*t25155*t34402;
  t34405 = -0.575*t25512*t25723*t34402;
  t34409 = 0.2255*t34408;
  t34410 = t25324*t25155*t34402;
  t34411 = -1.*t25512*t25723*t34402;
  t34412 = t34410 + t34411;
  t34413 = -0.295*t34412;
  t34414 = t25512*t25324*t34402;
  t34415 = t25155*t25723*t34402;
  t34416 = t34414 + t34415;
  t34417 = -0.0641*t34416;
  t34418 = t34398 + t34399 + t34403 + t34404 + t34405 + t34409 + t34413 + t34417;
  t34255 = 0.1575*t71*t34220*t395;
  t34261 = 0.1575*t24683*t34260;
  t34265 = 0.325*t25155*t34264;
  t34266 = -0.575*t25407*t25155*t34264;
  t34267 = -0.575*t25512*t25723*t34264;
  t34272 = 0.2255*t34270;
  t34273 = t25324*t25155*t34264;
  t34274 = -1.*t25512*t25723*t34264;
  t34275 = t34273 + t34274;
  t34276 = -0.295*t34275;
  t34277 = t25512*t25324*t34264;
  t34278 = t25155*t25723*t34264;
  t34279 = t34277 + t34278;
  t34280 = -0.0641*t34279;
  t34281 = t34255 + t34261 + t34265 + t34266 + t34267 + t34272 + t34276 + t34280;
  t34613 = -1.*t71*t34543;
  t34614 = t34364 + t34613;
  t34647 = t24683*t34543;
  t34648 = t34368 + t34647;
  t34446 = -0.325*t395*t30519*t25155*t34256;
  t34447 = 0.325*t25512*t34408;
  t34452 = -0.575*t25407*t34451;
  t34456 = -0.575*t25723*t34455;
  t34457 = t25723*t34451;
  t34458 = t25324*t34455;
  t34459 = t34457 + t34458;
  t34460 = -0.0641*t34459;
  t34461 = t25324*t34451;
  t34462 = -1.*t25723*t34455;
  t34463 = t34461 + t34462;
  t34464 = -0.295*t34463;
  t34465 = t34446 + t34447 + t34452 + t34456 + t34460 + t34464;
  t34628 = 0.325*t25512*t34614;
  t34629 = -0.575*t25512*t25407*t34614;
  t34630 = 0.575*t25155*t25723*t34614;
  t34631 = -1.*t25324*t25155*t34614;
  t34632 = t25512*t25723*t34614;
  t34634 = t34631 + t34632;
  t34636 = -0.0641*t34634;
  t34638 = t25512*t25324*t34614;
  t34640 = t25155*t25723*t34614;
  t34641 = t34638 + t34640;
  t34642 = -0.295*t34641;
  t34643 = t34628 + t34629 + t34630 + t34636 + t34642;
  t34567 = -0.325*t25512*t24683*t34358;
  t34568 = -0.325*t25155*t34543;
  t34572 = -0.575*t25723*t34571;
  t34573 = -0.575*t25407*t34551;
  t34574 = -1.*t25723*t34571;
  t34577 = t25324*t34551;
  t34578 = t34574 + t34577;
  t34580 = -0.295*t34578;
  t34582 = t25324*t34571;
  t34583 = t25723*t34551;
  t34584 = t34582 + t34583;
  t34585 = -0.0641*t34584;
  t34587 = t34567 + t34568 + t34572 + t34573 + t34580 + t34585;
  t34314 = -0.325*t25155*t34313;
  t34315 = 0.325*t25512*t34270;
  t34319 = -0.575*t25407*t34318;
  t34323 = -0.575*t25723*t34322;
  t34325 = t25723*t34318;
  t34326 = t25324*t34322;
  t34329 = t34325 + t34326;
  t34330 = -0.0641*t34329;
  t34331 = t25324*t34318;
  t34332 = -1.*t25723*t34322;
  t34333 = t34331 + t34332;
  t34334 = -0.295*t34333;
  t34337 = t34314 + t34315 + t34319 + t34323 + t34330 + t34334;
  t34668 = t30519*t34256*t24753;
  t34669 = t34220*t25101;
  t34670 = t34668 + t34669;
  t34672 = -1.*t71*t395*t34256;
  t34673 = -1.*t24683*t34543;
  t34674 = t34672 + t34673;
  t34671 = -1.*t25155*t34670;
  t34675 = t25512*t34674;
  t34676 = t34671 + t34675;
  t34678 = -1.*t25512*t34670;
  t34679 = -1.*t25155*t34674;
  t34680 = t34678 + t34679;
  t34695 = t25155*t34670;
  t34696 = -1.*t25512*t34674;
  t34697 = t34695 + t34696;
  t34467 = -0.575*t25324*t34451;
  t34471 = -0.575*t25723*t34470;
  t34472 = -1.*t25723*t34451;
  t34473 = t25324*t34470;
  t34474 = t34472 + t34473;
  t34475 = -0.0641*t34474;
  t34476 = -1.*t25324*t34451;
  t34477 = -1.*t25723*t34470;
  t34478 = t34476 + t34477;
  t34479 = -0.295*t34478;
  t34480 = t34467 + t34471 + t34475 + t34479;
  t34615 = -0.575*t25512*t25324*t34614;
  t34616 = -0.575*t25155*t25723*t34614;
  t34617 = t25324*t25155*t34614;
  t34618 = -1.*t25512*t25723*t34614;
  t34619 = t34617 + t34618;
  t34620 = -0.0641*t34619;
  t34621 = -1.*t25512*t25324*t34614;
  t34622 = -1.*t25155*t25723*t34614;
  t34623 = t34621 + t34622;
  t34624 = -0.295*t34623;
  t34625 = t34615 + t34616 + t34620 + t34624;
  t34546 = -0.575*t25723*t34545;
  t34552 = -0.575*t25324*t34551;
  t34556 = -1.*t25723*t34545;
  t34557 = -1.*t25324*t34551;
  t34558 = t34556 + t34557;
  t34559 = -0.295*t34558;
  t34560 = t25324*t34545;
  t34562 = -1.*t25723*t34551;
  t34563 = t34560 + t34562;
  t34564 = -0.0641*t34563;
  t34565 = t34546 + t34552 + t34559 + t34564;
  t34340 = -0.575*t25324*t34318;
  t34344 = -0.575*t25723*t34343;
  t34345 = -1.*t25723*t34318;
  t34346 = t25324*t34343;
  t34347 = t34345 + t34346;
  t34348 = -0.0641*t34347;
  t34349 = -1.*t25324*t34318;
  t34350 = -1.*t25723*t34343;
  t34351 = t34349 + t34350;
  t34352 = -0.295*t34351;
  t34353 = t34340 + t34344 + t34348 + t34352;
  t34677 = -0.575*t25723*t34676;
  t34681 = -0.575*t25324*t34680;
  t34682 = -1.*t25723*t34676;
  t34683 = -1.*t25324*t34680;
  t34684 = t34682 + t34683;
  t34685 = -0.295*t34684;
  t34686 = t25324*t34676;
  t34687 = -1.*t25723*t34680;
  t34688 = t34686 + t34687;
  t34689 = -0.0641*t34688;
  t34690 = t34677 + t34681 + t34685 + t34689;
  t34721 = t25512*t34670;
  t34722 = t25155*t34674;
  t34723 = t34721 + t34722;
  t34725 = t25723*t34676;
  t34702 = t25324*t34680;
  t34729 = -1.*t25324*t34676;
  t34730 = -1.*t25723*t34723;
  t34731 = t34729 + t34730;
  t34753 = -0.325*t31325*t395*t30519*t34256;
  t34754 = -0.1575*t24683*t34256*t24753;
  t34755 = -0.1575*t30518*t395*t34256*t25101;
  t34756 = t24683*t34256*t24753;
  t34757 = -1.*t71*t395*t34256*t25101;
  t34758 = t34756 + t34757;
  t34759 = 0.2255*t34758;
  t34760 = 0.325*t25155*t34408;
  t34761 = -0.575*t25723*t34451;
  t34762 = -0.575*t25407*t34470;
  t34763 = -0.295*t34474;
  t34764 = t25723*t34470;
  t34765 = t34461 + t34764;
  t34766 = -0.0641*t34765;
  t34767 = t34753 + t34754 + t34755 + t34759 + t34760 + t34761 + t34762 + t34763 + t34766;
  t34779 = 0.1575*t71*t395*t34256;
  t34780 = 0.1575*t24683*t34543;
  t34782 = 0.325*t25155*t34614;
  t34783 = -0.575*t25407*t25155*t34614;
  t34784 = -0.575*t25512*t25723*t34614;
  t34785 = 0.2255*t34674;
  t34786 = -0.295*t34619;
  t34787 = -0.0641*t34641;
  t34789 = t34779 + t34780 + t34782 + t34783 + t34784 + t34785 + t34786 + t34787;
  t34768 = 0.1575*t30518*t34358;
  t34769 = 0.2255*t71*t34358;
  t34770 = -0.325*t24683*t25155*t34358;
  t34771 = -0.325*t31325*t34543;
  t34772 = -0.575*t25407*t34545;
  t34773 = -0.575*t25723*t34551;
  t34774 = t25723*t34545;
  t34775 = t34774 + t34577;
  t34776 = -0.0641*t34775;
  t34777 = -0.295*t34563;
  t34778 = t34768 + t34769 + t34770 + t34771 + t34772 + t34773 + t34776 + t34777;
  t34736 = 0.1575*t34220*t395*t24683;
  t34737 = -0.325*t31325*t34313;
  t34738 = 0.1575*t30518*t34260;
  t34739 = -1.*t34220*t395*t24683;
  t34740 = t71*t34260;
  t34741 = t34739 + t34740;
  t34742 = 0.2255*t34741;
  t34743 = 0.325*t25155*t34270;
  t34744 = -0.575*t25723*t34318;
  t34745 = -0.575*t25407*t34343;
  t34747 = -0.295*t34347;
  t34748 = t25723*t34343;
  t34750 = t34331 + t34748;
  t34751 = -0.0641*t34750;
  t34752 = t34736 + t34737 + t34738 + t34742 + t34743 + t34744 + t34745 + t34747 + t34751;
  t34791 = -0.325*t25155*t34670;
  t34792 = 0.325*t25512*t34674;
  t34793 = -0.575*t25407*t34676;
  t34794 = -0.575*t25723*t34680;
  t34795 = t34725 + t34702;
  t34797 = -0.0641*t34795;
  t34798 = -0.295*t34688;
  t34799 = t34791 + t34792 + t34793 + t34794 + t34797 + t34798;
  t34800 = -0.575*t25324*t34676;
  t34801 = -0.575*t25723*t34723;
  t34802 = t25324*t34723;
  t34804 = t34682 + t34802;
  t34806 = -0.0641*t34804;
  t34808 = -0.295*t34731;
  t34809 = t34800 + t34801 + t34806 + t34808;
  t34854 = -1.*t34220*t395*t30519*t24683*t25155;
  t34855 = t25512*t34220*t395*t25101;
  t34856 = t34854 + t34855;
  t34861 = -1.*t25512*t34220*t395*t30519*t24683;
  t34866 = -1.*t34220*t395*t25155*t25101;
  t34867 = t34861 + t34866;
  t34827 = -1.*t71*t34220*t24753;
  t34828 = -1.*t34220*t395*t24683*t25101;
  t34829 = t34827 + t34828;
  t34889 = t34220*t395*t30519*t25155;
  t34890 = t25512*t34829;
  t34891 = t34889 + t34890;
  t34895 = -1.*t25155*t34829;
  t34896 = t34240 + t34895;
  t34915 = -1.*t25512*t34220*t395*t30519;
  t34916 = t25155*t34829;
  t34917 = t34915 + t34916;
  t34940 = t34220*t24683*t24753*t25101;
  t34941 = t34268 + t34940;
  t34943 = -1.*t34220*t30519*t25155*t24753;
  t34945 = t25512*t34941;
  t34946 = t34943 + t34945;
  t34949 = t25512*t34220*t30519*t24753;
  t34950 = t25155*t34941;
  t34951 = t34949 + t34950;
  t34844 = 0.1575*t30518*t34220*t395*t30519;
  t34845 = 0.2255*t71*t34220*t395*t30519;
  t34848 = -0.325*t34220*t395*t30519*t24683*t25155;
  t34850 = -0.325*t31325*t34220*t395*t25101;
  t34857 = -0.575*t25407*t34856;
  t34868 = -0.575*t25723*t34867;
  t34869 = t25723*t34856;
  t34870 = t25324*t34867;
  t34872 = t34869 + t34870;
  t34875 = -0.0641*t34872;
  t34876 = t25324*t34856;
  t34877 = -1.*t25723*t34867;
  t34878 = t34876 + t34877;
  t34881 = -0.295*t34878;
  t34882 = t34844 + t34845 + t34848 + t34850 + t34857 + t34868 + t34875 + t34881;
  t34988 = -1.*t25512*t24683*t34260;
  t34989 = t34316 + t34988;
  t34991 = -1.*t24683*t25155*t34260;
  t34994 = t34341 + t34991;
  t35009 = t30519*t34256;
  t35010 = t34220*t24753*t25101;
  t35011 = t35009 + t35010;
  t35008 = -1.*t24683*t25155*t34313;
  t35012 = t25512*t35011;
  t35013 = t35008 + t35012;
  t35015 = -1.*t25512*t24683*t34313;
  t35016 = -1.*t25155*t35011;
  t35017 = t35015 + t35016;
  t35034 = t24683*t25155*t34313;
  t35035 = -1.*t25512*t35011;
  t35036 = t35034 + t35035;
  t34820 = 0.1575*t71*t34220*t24753;
  t34821 = 0.1575*t34220*t395*t24683*t25101;
  t34823 = 0.325*t25155*t34229;
  t34824 = -0.575*t25407*t25155*t34229;
  t34825 = -0.575*t25512*t25723*t34229;
  t34830 = 0.2255*t34829;
  t34831 = t25324*t25155*t34229;
  t34833 = -1.*t25512*t25723*t34229;
  t34835 = t34831 + t34833;
  t34836 = -0.295*t34835;
  t34837 = t25512*t25324*t34229;
  t34838 = t25155*t25723*t34229;
  t34839 = t34837 + t34838;
  t34841 = -0.0641*t34839;
  t34842 = t34820 + t34821 + t34823 + t34824 + t34825 + t34830 + t34836 + t34841;
  t34969 = -0.068*t24683*t34313;
  t34970 = -0.325*t71*t25155*t34313;
  t34972 = 0.575*t71*t25407*t25155*t34313;
  t34973 = 0.575*t71*t25512*t25723*t34313;
  t34974 = -1.*t71*t25324*t25155*t34313;
  t34975 = t71*t25512*t25723*t34313;
  t34976 = t34974 + t34975;
  t34977 = -0.295*t34976;
  t34978 = -1.*t71*t25512*t25324*t34313;
  t34980 = -1.*t71*t25155*t25723*t34313;
  t34982 = t34978 + t34980;
  t34983 = -0.0641*t34982;
  t34984 = t34969 + t34970 + t34972 + t34973 + t34977 + t34983;
  t35060 = -1.*t71*t35011;
  t35061 = t34739 + t35060;
  t35098 = t24683*t35011;
  t35099 = t34268 + t35098;
  t34885 = 0.325*t34220*t395*t30519*t25155;
  t34886 = 0.325*t25512*t34829;
  t34894 = -0.575*t25407*t34891;
  t34899 = -0.575*t25723*t34896;
  t34902 = t25723*t34891;
  t34903 = t25324*t34896;
  t34904 = t34902 + t34903;
  t34905 = -0.0641*t34904;
  t34906 = t25324*t34891;
  t34909 = -1.*t25723*t34896;
  t34910 = t34906 + t34909;
  t34911 = -0.295*t34910;
  t34912 = t34885 + t34886 + t34894 + t34899 + t34905 + t34911;
  t35077 = 0.325*t25512*t35061;
  t35078 = -0.575*t25512*t25407*t35061;
  t35080 = 0.575*t25155*t25723*t35061;
  t35081 = -1.*t25324*t25155*t35061;
  t35083 = t25512*t25723*t35061;
  t35084 = t35081 + t35083;
  t35085 = -0.0641*t35084;
  t35086 = t25512*t25324*t35061;
  t35087 = t25155*t25723*t35061;
  t35088 = t35086 + t35087;
  t35090 = -0.295*t35088;
  t35092 = t35077 + t35078 + t35080 + t35085 + t35090;
  t35031 = -0.325*t25512*t24683*t34313;
  t35033 = -0.325*t25155*t35011;
  t35038 = -0.575*t25723*t35036;
  t35040 = -0.575*t25407*t35017;
  t35041 = -1.*t25723*t35036;
  t35042 = t25324*t35017;
  t35043 = t35041 + t35042;
  t35045 = -0.295*t35043;
  t35047 = t25324*t35036;
  t35048 = t25723*t35017;
  t35049 = t35047 + t35048;
  t35051 = -0.0641*t35049;
  t35052 = t35031 + t35033 + t35038 + t35040 + t35045 + t35051;
  t35123 = t71*t34220*t395;
  t35124 = -1.*t24683*t35011;
  t35125 = t35123 + t35124;
  t35122 = -1.*t25155*t34286;
  t35126 = t25512*t35125;
  t35127 = t35122 + t35126;
  t35129 = -1.*t25512*t34286;
  t35130 = -1.*t25155*t35125;
  t35131 = t35129 + t35130;
  t35145 = t25155*t34286;
  t35146 = -1.*t25512*t35125;
  t35148 = t35145 + t35146;
  t34914 = -0.575*t25324*t34891;
  t34918 = -0.575*t25723*t34917;
  t34921 = -1.*t25723*t34891;
  t34922 = t25324*t34917;
  t34923 = t34921 + t34922;
  t34924 = -0.0641*t34923;
  t34925 = -1.*t25324*t34891;
  t34926 = -1.*t25723*t34917;
  t34927 = t34925 + t34926;
  t34928 = -0.295*t34927;
  t34930 = t34914 + t34918 + t34924 + t34928;
  t35063 = -0.575*t25512*t25324*t35061;
  t35064 = -0.575*t25155*t25723*t35061;
  t35065 = t25324*t25155*t35061;
  t35066 = -1.*t25512*t25723*t35061;
  t35067 = t35065 + t35066;
  t35068 = -0.0641*t35067;
  t35069 = -1.*t25512*t25324*t35061;
  t35070 = -1.*t25155*t25723*t35061;
  t35071 = t35069 + t35070;
  t35072 = -0.295*t35071;
  t35073 = t35063 + t35064 + t35068 + t35072;
  t35014 = -0.575*t25723*t35013;
  t35018 = -0.575*t25324*t35017;
  t35019 = -1.*t25723*t35013;
  t35020 = -1.*t25324*t35017;
  t35021 = t35019 + t35020;
  t35022 = -0.295*t35021;
  t35024 = t25324*t35013;
  t35025 = -1.*t25723*t35017;
  t35026 = t35024 + t35025;
  t35027 = -0.0641*t35026;
  t35028 = t35014 + t35018 + t35022 + t35027;
  t35128 = -0.575*t25723*t35127;
  t35132 = -0.575*t25324*t35131;
  t35133 = -1.*t25723*t35127;
  t35134 = -1.*t25324*t35131;
  t35135 = t35133 + t35134;
  t35136 = -0.295*t35135;
  t35137 = t25324*t35127;
  t35138 = -1.*t25723*t35131;
  t35139 = t35137 + t35138;
  t35140 = -0.0641*t35139;
  t35141 = t35128 + t35132 + t35136 + t35140;
  t35169 = t25512*t34286;
  t35170 = t25155*t35125;
  t35171 = t35169 + t35170;
  t35173 = t25723*t35127;
  t35153 = t25324*t35131;
  t35177 = -1.*t25324*t35127;
  t35178 = -1.*t25723*t35171;
  t35179 = t35177 + t35178;
  p_output1[0]=(t32279 + t32281 + t32305 + t32332 + t32748 - 0.575*t25723*t32774 - 0.575*t25407*t32779 - 0.295*(-1.*t25723*t32774 + t25324*t32779) - 0.0641*(t25324*t32774 + t25723*t32779))*var2[4] + t32272*var2[5] + t30493*var2[9] + t33021*var2[10] + t33050*var2[11];
  p_output1[1]=t32272*var2[4] + (t32279 + t32305 - 0.575*t25723*t33541 - 0.575*t25407*t33544 - 0.295*(-1.*t25723*t33541 + t25324*t33544) - 0.0641*(t25324*t33541 + t25723*t33544) - 0.325*t24683*t25101*t25155*t395 + 0.2255*t25101*t395*t71)*var2[5] + t33082*var2[9] + t33525*var2[10] + t33380*var2[11];
  p_output1[2]=t30493*var2[4] + t33082*var2[5] + (t32281 + t32332 - 0.575*t25155*t25407*t32726 - 0.575*t25512*t25723*t32726 - 0.0641*(t25324*t25512*t32726 + t25155*t25723*t32726) - 0.295*(t25155*t25324*t32726 - 1.*t25512*t25723*t32726) + t32748 - 0.1575*t25101*t395*t71)*var2[9] + t33719*var2[10] + t33695*var2[11];
  p_output1[3]=t33021*var2[4] + t33525*var2[5] + t33719*var2[9] + (-0.325*t25155*t33952 - 0.575*t25407*t33974 - 0.575*t25723*t34050 - 0.0641*(t25723*t33974 + t25324*t34050) - 0.295*(-1.*t25723*t34050 + t34075) - 0.325*t25512*t30519*t395)*var2[10] + t34045*var2[11];
  p_output1[4]=t33050*var2[4] + t33380*var2[5] + t33695*var2[9] + t34045*var2[10] + (0.575*t25723*t33954 - 0.575*t25324*t34106 - 0.295*(-1.*t25324*t34106 + t34109) - 0.0641*t34116)*var2[11];
  p_output1[5]=1.;
  p_output1[6]=0.325*t25155*t26417 + 0.1575*t24753*t25101*t30518 + 0.325*t24753*t30519*t31325 - 0.575*t25723*t32961 - 0.575*t25407*t33035 - 0.0641*(t32990 + t25723*t33035) - 0.295*t33040 - 0.1575*t24683*t395 + 0.2255*(t24683*t395 + t24753*t25101*t71);
  p_output1[7]=-0.575*t25407*t33201 - 0.575*t25723*t33314 - 0.295*t33325 - 0.0641*(t25723*t33201 + t33443) + 0.325*t24683*t25155*t30519*t395 - 0.1575*t30518*t30519*t395 + 0.325*t25101*t31325*t395 - 0.2255*t30519*t395*t71;
  p_output1[8]=0.325*t25155*t32326 - 0.575*t25155*t25407*t32326 - 0.575*t25512*t25723*t32326 - 0.295*t33646 - 0.0641*t33715 + 0.2255*t33952 - 0.1575*t24683*t25101*t395 - 0.1575*t24753*t71;
  p_output1[9]=0.325*t25512*t33952 - 0.575*t25407*t33954 - 0.575*t25723*t33974 - 0.295*t34043 - 0.0641*(t34075 + t34109) - 0.325*t25155*t30519*t395;
  p_output1[10]=-0.575*t25324*t33954 - 0.575*t25723*t34106 - 0.0641*(t34025 + t25324*t34106) - 0.295*t34116;
  p_output1[11]=(t34355 + t34359 + t34363 + 0.325*t25155*t34370 - 0.575*t25723*t34375 - 0.575*t25407*t34379 - 0.295*(-1.*t25723*t34375 + t25324*t34379) - 0.0641*(t25324*t34375 + t25723*t34379) + 0.2255*(t34364 + t34362*t71))*var2[3] + t34253*var2[4] + t34308*var2[5] + t34281*var2[9] + t34337*var2[10] + t34353*var2[11];
  p_output1[12]=t34253*var2[3] + (0.1575*t24753*t25101*t30518*t34256 + 0.325*t24753*t30519*t31325*t34256 + t34355 + 0.325*t25155*t34488 - 0.575*t25723*t34493 - 0.575*t25407*t34498 - 0.295*(-1.*t25723*t34493 + t25324*t34498) - 0.0641*(t25324*t34493 + t25723*t34498) + 0.2255*(t34364 + t24753*t25101*t34256*t71))*var2[4] + t34442*var2[5] + t34418*var2[9] + t34465*var2[10] + t34480*var2[11];
  p_output1[13]=t34308*var2[3] + t34442*var2[4] + (t34359 - 0.325*t24683*t25155*t34362 + t34363 - 0.575*t25723*t34594 - 0.575*t25407*t34597 - 0.295*(-1.*t25723*t34594 + t25324*t34597) - 0.0641*(t25324*t34594 + t25723*t34597) + 0.2255*t34362*t71)*var2[5] + t34536*var2[9] + t34587*var2[10] + t34565*var2[11];
  p_output1[14]=t34281*var2[3] + t34418*var2[4] + t34536*var2[5] + (t34355 + 0.2255*t34614 + 0.325*t25155*t34648 - 0.575*t25155*t25407*t34648 - 0.575*t25512*t25723*t34648 - 0.0641*(t25324*t25512*t34648 + t25155*t25723*t34648) - 0.295*(t25155*t25324*t34648 - 1.*t25512*t25723*t34648) + 0.1575*t34543*t71)*var2[9] + t34643*var2[10] + t34625*var2[11];
  p_output1[15]=t34337*var2[3] + t34465*var2[4] + t34587*var2[5] + t34643*var2[9] + (-0.325*t25512*t34670 - 0.325*t25155*t34674 - 0.575*t25407*t34680 - 0.575*t25723*t34697 - 0.0641*(t25723*t34680 + t25324*t34697) - 0.295*(-1.*t25723*t34697 + t34702))*var2[10] + t34690*var2[11];
  p_output1[16]=t34353*var2[3] + t34480*var2[4] + t34565*var2[5] + t34625*var2[9] + t34690*var2[10] + (0.575*t25723*t34676 - 0.575*t25324*t34723 - 0.295*(-1.*t25324*t34723 + t34725) - 0.0641*t34731)*var2[11];
  p_output1[17]=1.;
  p_output1[18]=t34752;
  p_output1[19]=t34767;
  p_output1[20]=t34778;
  p_output1[21]=t34789;
  p_output1[22]=t34799;
  p_output1[23]=t34809;
  p_output1[24]=t34752*var2[3] + t34767*var2[4] + t34778*var2[5] + t34789*var2[9] + t34799*var2[10] + t34809*var2[11];
  p_output1[25]=t34767*var2[3] + (-0.1575*t24753*t25101*t30518*t34220 - 0.325*t24753*t30519*t31325*t34220 + t34736 + 0.325*t25155*t34941 - 0.575*t25723*t34946 - 0.575*t25407*t34951 - 0.295*(-1.*t25723*t34946 + t25324*t34951) - 0.0641*(t25324*t34946 + t25723*t34951) + 0.2255*(t34739 - 1.*t24753*t25101*t34220*t71))*var2[4] + t34882*var2[5] + t34842*var2[9] + t34912*var2[10] + t34930*var2[11];
  p_output1[26]=t34778*var2[3] + t34882*var2[4] + (-0.325*t24683*t25155*t34260 + t34737 + t34738 - 0.575*t25723*t34989 - 0.575*t25407*t34994 - 0.295*(-1.*t25723*t34989 + t25324*t34994) - 0.0641*(t25324*t34989 + t25723*t34994) + 0.2255*t34260*t71)*var2[5] + t34984*var2[9] + t35052*var2[10] + t35028*var2[11];
  p_output1[27]=t34789*var2[3] + t34842*var2[4] + t34984*var2[5] + (t34736 + 0.2255*t35061 + 0.325*t25155*t35099 - 0.575*t25155*t25407*t35099 - 0.575*t25512*t25723*t35099 - 0.0641*(t25324*t25512*t35099 + t25155*t25723*t35099) - 0.295*(t25155*t25324*t35099 - 1.*t25512*t25723*t35099) + 0.1575*t35011*t71)*var2[9] + t35092*var2[10] + t35073*var2[11];
  p_output1[28]=t34799*var2[3] + t34912*var2[4] + t35052*var2[5] + t35092*var2[9] + (-0.325*t25512*t34286 - 0.325*t25155*t35125 - 0.575*t25407*t35131 - 0.575*t25723*t35148 - 0.0641*(t25723*t35131 + t25324*t35148) - 0.295*(-1.*t25723*t35148 + t35153))*var2[10] + t35141*var2[11];
  p_output1[29]=t34809*var2[3] + t34930*var2[4] + t35028*var2[5] + t35073*var2[9] + t35141*var2[10] + (0.575*t25723*t35127 - 0.575*t25324*t35171 - 0.295*(-1.*t25324*t35171 + t35173) - 0.0641*t35179)*var2[11];
  p_output1[30]=1.;
  p_output1[31]=0.1575*t30518*t34543 - 0.325*t31325*t34670 + 0.325*t25155*t34674 + t34677 - 0.575*t25407*t34723 - 0.0641*(t34686 + t25723*t34723) - 0.295*t34804 + 0.1575*t24683*t34256*t395 + 0.2255*(-1.*t24683*t34256*t395 + t34543*t71);
  p_output1[32]=0.1575*t24683*t24753*t34220 + 0.325*t25155*t34829 - 0.575*t25723*t34891 - 0.575*t25407*t34917 - 0.0641*(t34906 + t25723*t34917) - 0.295*t34923 + 0.1575*t25101*t30518*t34220*t395 + 0.325*t30519*t31325*t34220*t395 + 0.2255*(-1.*t24683*t24753*t34220 + t25101*t34220*t395*t71);
  p_output1[33]=-0.325*t24683*t25155*t34313 + 0.1575*t30518*t34313 - 0.325*t31325*t35011 - 0.575*t25407*t35013 - 0.575*t25723*t35017 - 0.295*t35026 - 0.0641*(t25723*t35013 + t35042) + 0.2255*t34313*t71;
  p_output1[34]=0.1575*t24683*t35011 + 0.325*t25155*t35061 - 0.575*t25155*t25407*t35061 - 0.575*t25512*t25723*t35061 - 0.295*t35067 - 0.0641*t35088 + 0.2255*t35125 - 0.1575*t34220*t395*t71;
  p_output1[35]=-0.325*t25155*t34286 + 0.325*t25512*t35125 - 0.575*t25407*t35127 - 0.575*t25723*t35131 - 0.295*t35139 - 0.0641*(t35153 + t35173);
  p_output1[36]=-0.575*t25324*t35127 - 0.575*t25723*t35171 - 0.0641*(t35133 + t25324*t35171) - 0.295*t35179;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 37, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_initial_swing_velocity_RlFoot_ParallelStance.hh"

namespace ParallelStance
{

void J_initial_swing_velocity_RlFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
