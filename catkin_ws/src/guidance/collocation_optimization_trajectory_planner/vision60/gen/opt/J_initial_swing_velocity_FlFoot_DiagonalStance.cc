/*
 * Automatically Generated from Mathematica.
 * Tue 7 Jun 2022 14:07:02 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t256;
  double t257;
  double t496;
  double t514;
  double t682;
  double t2407;
  double t3627;
  double t4093;
  double t4554;
  double t4767;
  double t6630;
  double t6705;
  double t8752;
  double t4918;
  double t5965;
  double t9256;
  double t9262;
  double t9267;
  double t10125;
  double t10128;
  double t10154;
  double t9123;
  double t9215;
  double t8754;
  double t8791;
  double t10670;
  double t10671;
  double t10673;
  double t10675;
  double t10677;
  double t10678;
  double t10681;
  double t10686;
  double t10695;
  double t1098;
  double t1564;
  double t1736;
  double t10914;
  double t10916;
  double t10937;
  double t10881;
  double t10899;
  double t10912;
  double t11013;
  double t11043;
  double t11045;
  double t13521;
  double t13574;
  double t13576;
  double t13387;
  double t13432;
  double t13457;
  double t14503;
  double t14504;
  double t14650;
  double t9045;
  double t9084;
  double t9238;
  double t9244;
  double t9315;
  double t10189;
  double t10218;
  double t10221;
  double t10246;
  double t10251;
  double t10294;
  double t10379;
  double t10419;
  double t10498;
  double t10520;
  double t10524;
  double t10616;
  double t14749;
  double t14750;
  double t14755;
  double t14756;
  double t12391;
  double t12392;
  double t12402;
  double t12409;
  double t12463;
  double t12485;
  double t12496;
  double t12580;
  double t13278;
  double t13282;
  double t13336;
  double t13382;
  double t13383;
  double t421;
  double t744;
  double t2372;
  double t4640;
  double t6146;
  double t6758;
  double t6759;
  double t6816;
  double t6819;
  double t6846;
  double t6875;
  double t7567;
  double t7669;
  double t7678;
  double t7719;
  double t10640;
  double t10647;
  double t10650;
  double t10623;
  double t10669;
  double t10674;
  double t15492;
  double t15493;
  double t15498;
  double t15510;
  double t15512;
  double t15515;
  double t15517;
  double t15518;
  double t15554;
  double t15556;
  double t15564;
  double t15568;
  double t13385;
  double t13386;
  double t13508;
  double t13676;
  double t14431;
  double t14459;
  double t14460;
  double t14471;
  double t14478;
  double t14482;
  double t14483;
  double t14484;
  double t14486;
  double t15971;
  double t15983;
  double t16006;
  double t16008;
  double t16043;
  double t16139;
  double t16161;
  double t16165;
  double t16216;
  double t16222;
  double t10816;
  double t10833;
  double t10913;
  double t10938;
  double t10939;
  double t10940;
  double t10941;
  double t10945;
  double t10962;
  double t10963;
  double t10964;
  double t10996;
  double t10997;
  double t15111;
  double t15134;
  double t15273;
  double t15314;
  double t15329;
  double t15330;
  double t15331;
  double t15332;
  double t15338;
  double t15484;
  double t15486;
  double t14489;
  double t14660;
  double t14665;
  double t14668;
  double t14669;
  double t14674;
  double t14675;
  double t14677;
  double t14678;
  double t14679;
  double t14680;
  double t16138;
  double t16171;
  double t16179;
  double t16182;
  double t16183;
  double t16188;
  double t16192;
  double t16193;
  double t16196;
  double t16197;
  double t16201;
  double t16305;
  double t16307;
  double t16309;
  double t11001;
  double t11103;
  double t11105;
  double t11117;
  double t11119;
  double t11238;
  double t11371;
  double t11393;
  double t11410;
  double t11623;
  double t11800;
  double t16249;
  double t16331;
  double t16335;
  double t16336;
  double t16337;
  double t16395;
  double t16397;
  double t16398;
  double t16402;
  double t16409;
  double t16422;
  double t16429;
  double t16430;
  double t16444;
  double t16445;
  double t16446;
  double t16467;
  double t16468;
  double t16469;
  double t16471;
  double t16472;
  double t16473;
  double t16708;
  double t16710;
  double t16711;
  double t16713;
  double t16717;
  double t16727;
  double t16733;
  double t16737;
  double t16738;
  double t16411;
  double t16418;
  double t16419;
  double t16915;
  double t16916;
  double t16921;
  double t16952;
  double t16954;
  double t16956;
  double t16925;
  double t16931;
  double t16933;
  double t17385;
  double t17394;
  double t17395;
  double t17439;
  double t17447;
  double t17448;
  double t17420;
  double t17425;
  double t17426;
  double t17458;
  double t17460;
  double t17463;
  double t17465;
  double t17466;
  double t17469;
  double t17474;
  double t17475;
  double t17476;
  double t17698;
  double t17699;
  double t17703;
  double t17785;
  double t17786;
  double t17788;
  double t17791;
  double t17792;
  double t17793;
  double t16672;
  double t16688;
  double t16692;
  double t16694;
  double t16695;
  double t16696;
  double t16705;
  double t16712;
  double t16728;
  double t16739;
  double t16742;
  double t16744;
  double t16745;
  double t16747;
  double t16749;
  double t16753;
  double t16862;
  double t16911;
  double t16912;
  double t17689;
  double t17691;
  double t17692;
  double t17820;
  double t17821;
  double t17824;
  double t17813;
  double t17815;
  double t17816;
  double t17840;
  double t17841;
  double t17843;
  double t17451;
  double t17454;
  double t18056;
  double t18062;
  double t18073;
  double t18074;
  double t18077;
  double t18097;
  double t18107;
  double t18111;
  double t17780;
  double t17781;
  double t17782;
  double t17784;
  double t17790;
  double t17794;
  double t17795;
  double t17796;
  double t17797;
  double t17799;
  double t17800;
  double t17801;
  double t17803;
  double t17804;
  double t17805;
  double t18187;
  double t18191;
  double t18249;
  double t18259;
  double t18268;
  double t18279;
  double t18169;
  double t18250;
  double t18255;
  double t18423;
  double t18477;
  double t18478;
  double t16447;
  double t16449;
  double t16457;
  double t16462;
  double t16470;
  double t16475;
  double t16476;
  double t16477;
  double t16482;
  double t16483;
  double t16484;
  double t16533;
  double t16577;
  double t16588;
  double t16594;
  double t17438;
  double t17450;
  double t18804;
  double t18806;
  double t18808;
  double t18809;
  double t18136;
  double t18138;
  double t18143;
  double t18144;
  double t18145;
  double t18147;
  double t18148;
  double t18149;
  double t18150;
  double t18151;
  double t18153;
  double t18155;
  double t18162;
  double t16396;
  double t16410;
  double t16420;
  double t16431;
  double t16432;
  double t16433;
  double t16434;
  double t16435;
  double t16436;
  double t16437;
  double t16438;
  double t16439;
  double t16440;
  double t16441;
  double t16442;
  double t18831;
  double t18832;
  double t17674;
  double t17682;
  double t17695;
  double t17704;
  double t17705;
  double t17728;
  double t17747;
  double t17750;
  double t17761;
  double t17765;
  double t17766;
  double t17767;
  double t17769;
  double t17770;
  double t17771;
  double t18870;
  double t18871;
  double t18852;
  double t18853;
  double t18854;
  double t18855;
  double t18856;
  double t18858;
  double t18859;
  double t18860;
  double t18862;
  double t18863;
  double t18864;
  double t18865;
  double t18305;
  double t18306;
  double t18313;
  double t18521;
  double t18702;
  double t18714;
  double t18725;
  double t18726;
  double t18731;
  double t18741;
  double t18743;
  double t18748;
  double t18750;
  double t17811;
  double t17812;
  double t17817;
  double t17826;
  double t17827;
  double t17830;
  double t17831;
  double t17832;
  double t17833;
  double t17834;
  double t17835;
  double t17836;
  double t17837;
  double t16914;
  double t16923;
  double t16937;
  double t16960;
  double t16961;
  double t16964;
  double t16965;
  double t16967;
  double t16968;
  double t16970;
  double t16977;
  double t17193;
  double t17381;
  double t18899;
  double t18900;
  double t18901;
  double t18894;
  double t18895;
  double t18896;
  double t18897;
  double t18902;
  double t18903;
  double t18906;
  double t18907;
  double t18908;
  double t18926;
  double t18927;
  double t18928;
  double t18833;
  double t18835;
  double t18836;
  double t18839;
  double t18840;
  double t18843;
  double t18844;
  double t18845;
  double t18846;
  double t18848;
  double t18849;
  double t18256;
  double t18280;
  double t18284;
  double t18285;
  double t18287;
  double t18288;
  double t18296;
  double t18297;
  double t18300;
  double t18302;
  double t18303;
  double t17839;
  double t17844;
  double t17847;
  double t17848;
  double t17849;
  double t17850;
  double t17851;
  double t17852;
  double t17855;
  double t17856;
  double t17857;
  double t17383;
  double t17399;
  double t17400;
  double t17401;
  double t17410;
  double t17411;
  double t17412;
  double t17414;
  double t17415;
  double t17416;
  double t17417;
  double t18905;
  double t18909;
  double t18910;
  double t18912;
  double t18915;
  double t18916;
  double t18917;
  double t18918;
  double t18919;
  double t18920;
  double t18921;
  double t18946;
  double t18947;
  double t18948;
  double t18930;
  double t18952;
  double t18955;
  double t18956;
  double t18957;
  double t19007;
  double t19008;
  double t19009;
  double t19010;
  double t19011;
  double t19012;
  double t19013;
  double t19014;
  double t19015;
  double t18996;
  double t18997;
  double t18998;
  double t18999;
  double t19000;
  double t19001;
  double t19002;
  double t19003;
  double t19004;
  double t19005;
  double t19006;
  double t18980;
  double t18981;
  double t18982;
  double t18983;
  double t18984;
  double t18985;
  double t18987;
  double t18988;
  double t18989;
  double t18990;
  double t18991;
  double t18992;
  double t18993;
  double t18994;
  double t18995;
  double t18962;
  double t18964;
  double t18965;
  double t18966;
  double t18967;
  double t18969;
  double t18970;
  double t18971;
  double t18972;
  double t18973;
  double t18974;
  double t18975;
  double t18976;
  double t18977;
  double t18979;
  double t19016;
  double t19017;
  double t19018;
  double t19019;
  double t19020;
  double t19021;
  double t19022;
  double t19023;
  double t19024;
  double t19025;
  double t19026;
  double t19027;
  double t19028;
  double t19029;
  double t19030;
  double t19061;
  double t19062;
  double t19063;
  double t19065;
  double t19066;
  double t19067;
  double t19040;
  double t19041;
  double t19042;
  double t19085;
  double t19086;
  double t19081;
  double t19082;
  double t19083;
  double t19099;
  double t19100;
  double t19101;
  double t19119;
  double t19120;
  double t19122;
  double t19123;
  double t19124;
  double t19126;
  double t19127;
  double t19128;
  double t19057;
  double t19058;
  double t19059;
  double t19060;
  double t19064;
  double t19068;
  double t19069;
  double t19070;
  double t19071;
  double t19072;
  double t19073;
  double t19074;
  double t19075;
  double t19076;
  double t19077;
  double t19158;
  double t19159;
  double t19160;
  double t19164;
  double t19165;
  double t19166;
  double t19157;
  double t19161;
  double t19162;
  double t19181;
  double t19182;
  double t19183;
  double t19197;
  double t19198;
  double t19200;
  double t19201;
  double t19141;
  double t19142;
  double t19143;
  double t19144;
  double t19145;
  double t19146;
  double t19147;
  double t19148;
  double t19149;
  double t19150;
  double t19151;
  double t19152;
  double t19153;
  double t19215;
  double t19216;
  double t19038;
  double t19039;
  double t19043;
  double t19044;
  double t19045;
  double t19046;
  double t19047;
  double t19048;
  double t19049;
  double t19050;
  double t19051;
  double t19052;
  double t19053;
  double t19054;
  double t19055;
  double t19246;
  double t19247;
  double t19229;
  double t19230;
  double t19231;
  double t19232;
  double t19233;
  double t19234;
  double t19235;
  double t19236;
  double t19237;
  double t19238;
  double t19239;
  double t19240;
  double t19178;
  double t19179;
  double t19180;
  double t19184;
  double t19185;
  double t19186;
  double t19187;
  double t19188;
  double t19189;
  double t19190;
  double t19191;
  double t19192;
  double t19193;
  double t19079;
  double t19080;
  double t19084;
  double t19087;
  double t19088;
  double t19089;
  double t19090;
  double t19091;
  double t19092;
  double t19093;
  double t19094;
  double t19095;
  double t19096;
  double t19266;
  double t19267;
  double t19268;
  double t19265;
  double t19269;
  double t19270;
  double t19272;
  double t19273;
  double t19274;
  double t19289;
  double t19290;
  double t19291;
  double t19217;
  double t19218;
  double t19219;
  double t19220;
  double t19221;
  double t19222;
  double t19223;
  double t19224;
  double t19225;
  double t19226;
  double t19227;
  double t19163;
  double t19167;
  double t19168;
  double t19169;
  double t19170;
  double t19171;
  double t19172;
  double t19173;
  double t19174;
  double t19175;
  double t19176;
  double t19098;
  double t19102;
  double t19103;
  double t19104;
  double t19105;
  double t19106;
  double t19107;
  double t19108;
  double t19109;
  double t19110;
  double t19111;
  double t19271;
  double t19275;
  double t19276;
  double t19277;
  double t19278;
  double t19279;
  double t19280;
  double t19281;
  double t19282;
  double t19283;
  double t19284;
  double t19309;
  double t19310;
  double t19311;
  double t19293;
  double t19315;
  double t19318;
  double t19319;
  double t19320;
  t256 = Cos(var1[4]);
  t257 = Cos(var1[6]);
  t496 = Sin(var1[4]);
  t514 = Sin(var1[5]);
  t682 = Sin(var1[6]);
  t2407 = -1.*t257*t496*t514;
  t3627 = -1.*t256*t682;
  t4093 = t2407 + t3627;
  t4554 = Sin(var1[7]);
  t4767 = Cos(var1[8]);
  t6630 = Cos(var1[7]);
  t6705 = Sin(var1[8]);
  t8752 = Cos(var1[5]);
  t4918 = -1.*t4767;
  t5965 = 1. + t4918;
  t9256 = t6630*t496*t514;
  t9262 = -1.*t8752*t496*t682*t4554;
  t9267 = t9256 + t9262;
  t10125 = -1.*t8752*t6630*t496*t682;
  t10128 = -1.*t496*t514*t4554;
  t10154 = t10125 + t10128;
  t9123 = -1.*t6630;
  t9215 = 1. + t9123;
  t8754 = -1.*t257;
  t8791 = 1. + t8754;
  t10670 = -1.*t257*t496;
  t10671 = -1.*t256*t514*t682;
  t10673 = t10670 + t10671;
  t10675 = -1.*t256*t8752*t6630;
  t10677 = t10673*t4554;
  t10678 = t10675 + t10677;
  t10681 = t6630*t10673;
  t10686 = t256*t8752*t4554;
  t10695 = t10681 + t10686;
  t1098 = t256*t257;
  t1564 = -1.*t496*t514*t682;
  t1736 = t1098 + t1564;
  t10914 = t8752*t6630*t496;
  t10916 = -1.*t1736*t4554;
  t10937 = t10914 + t10916;
  t10881 = t6630*t1736;
  t10899 = t8752*t496*t4554;
  t10912 = t10881 + t10899;
  t11013 = -1.*t8752*t6630*t496;
  t11043 = t1736*t4554;
  t11045 = t11013 + t11043;
  t13521 = t256*t6630*t514;
  t13574 = -1.*t256*t8752*t682*t4554;
  t13576 = t13521 + t13574;
  t13387 = t256*t8752*t6630*t682;
  t13432 = t256*t514*t4554;
  t13457 = t13387 + t13432;
  t14503 = -1.*t256*t6630*t514;
  t14504 = t256*t8752*t682*t4554;
  t14650 = t14503 + t14504;
  t9045 = 0.1575*t8752*t8791*t496;
  t9084 = 0.2255*t8752*t257*t496;
  t9238 = 0.325*t9215*t496*t514;
  t9244 = 0.325*t8752*t496*t682*t4554;
  t9315 = 0.075*t5965*t9267;
  t10189 = 0.075*t10154*t6705;
  t10218 = t4767*t9267;
  t10221 = -1.*t10154*t6705;
  t10246 = t10218 + t10221;
  t10251 = 0.355*t10246;
  t10294 = t4767*t10154;
  t10379 = t9267*t6705;
  t10419 = t10294 + t10379;
  t10498 = -0.0641*t10419;
  t10520 = t9045 + t9084 + t9238 + t9244 + t9315 + t10189 + t10251 + t10498;
  t10524 = -0.325*t256*t8752*t9215;
  t10616 = 0.1575*t256*t8791*t514;
  t14749 = -1.*t256*t514*t682*t4554;
  t14750 = t10675 + t14749;
  t14755 = -1.*t256*t6630*t514*t682;
  t14756 = t14755 + t10686;
  t12391 = 0.068*t256*t8752*t682;
  t12392 = -0.325*t256*t8752*t257*t4554;
  t12402 = 0.075*t256*t8752*t257*t5965*t4554;
  t12409 = 0.075*t256*t8752*t257*t6630*t6705;
  t12463 = t256*t8752*t257*t4767*t4554;
  t12485 = -1.*t256*t8752*t257*t6630*t6705;
  t12496 = t12463 + t12485;
  t12580 = 0.355*t12496;
  t13278 = t256*t8752*t257*t6630*t4767;
  t13282 = t256*t8752*t257*t4554*t6705;
  t13336 = t13278 + t13282;
  t13382 = -0.0641*t13336;
  t13383 = t12391 + t12392 + t12402 + t12409 + t12580 + t13382;
  t421 = -0.1575*t256*t257;
  t744 = 0.1575*t496*t514*t682;
  t2372 = 0.2255*t1736;
  t4640 = -0.325*t4093*t4554;
  t6146 = 0.075*t5965*t4093*t4554;
  t6758 = 0.075*t6630*t4093*t6705;
  t6759 = t4767*t4093*t4554;
  t6816 = -1.*t6630*t4093*t6705;
  t6819 = t6759 + t6816;
  t6846 = 0.355*t6819;
  t6875 = t6630*t4767*t4093;
  t7567 = t4093*t4554*t6705;
  t7669 = t6875 + t7567;
  t7678 = -0.0641*t7669;
  t7719 = t421 + t744 + t2372 + t4640 + t6146 + t6758 + t6846 + t7678;
  t10640 = t256*t257*t514;
  t10647 = -1.*t496*t682;
  t10650 = t10640 + t10647;
  t10623 = 0.1575*t496*t682;
  t10669 = 0.2255*t10650;
  t10674 = -0.325*t10673*t4554;
  t15492 = -0.325*t6630*t10650;
  t15493 = 0.075*t6630*t5965*t10650;
  t15498 = -0.075*t10650*t4554*t6705;
  t15510 = -1.*t4767*t10650*t4554;
  t15512 = t6630*t10650*t6705;
  t15515 = t15510 + t15512;
  t15517 = -0.0641*t15515;
  t15518 = t6630*t4767*t10650;
  t15554 = t10650*t4554*t6705;
  t15556 = t15518 + t15554;
  t15564 = 0.355*t15556;
  t15568 = t15492 + t15493 + t15498 + t15517 + t15564;
  t13385 = -0.325*t256*t8752*t6630*t682;
  t13386 = -0.325*t256*t514*t4554;
  t13508 = 0.075*t5965*t13457;
  t13676 = 0.075*t13576*t6705;
  t14431 = t4767*t13576;
  t14459 = t13457*t6705;
  t14460 = t14431 + t14459;
  t14471 = -0.0641*t14460;
  t14478 = t4767*t13457;
  t14482 = -1.*t13576*t6705;
  t14483 = t14478 + t14482;
  t14484 = 0.355*t14483;
  t14486 = t13385 + t13386 + t13508 + t13676 + t14471 + t14484;
  t15971 = t257*t496;
  t15983 = t256*t514*t682;
  t16006 = t15971 + t15983;
  t16008 = -1.*t16006*t4554;
  t16043 = t10675 + t16008;
  t16139 = t6630*t16006;
  t16161 = -1.*t256*t8752*t4554;
  t16165 = t16139 + t16161;
  t16216 = -1.*t6630*t16006;
  t16222 = t16216 + t10686;
  t10816 = -0.325*t6630*t1736;
  t10833 = -0.325*t8752*t496*t4554;
  t10913 = 0.075*t5965*t10912;
  t10938 = 0.075*t10937*t6705;
  t10939 = t4767*t10937;
  t10940 = t10912*t6705;
  t10941 = t10939 + t10940;
  t10945 = -0.0641*t10941;
  t10962 = t4767*t10912;
  t10963 = -1.*t10937*t6705;
  t10964 = t10962 + t10963;
  t10996 = 0.355*t10964;
  t10997 = t10816 + t10833 + t10913 + t10938 + t10945 + t10996;
  t15111 = 0.075*t6630*t4767*t10650;
  t15134 = 0.075*t10650*t4554*t6705;
  t15273 = t4767*t10650*t4554;
  t15314 = -1.*t6630*t10650*t6705;
  t15329 = t15273 + t15314;
  t15330 = -0.0641*t15329;
  t15331 = -1.*t6630*t4767*t10650;
  t15332 = -1.*t10650*t4554*t6705;
  t15338 = t15331 + t15332;
  t15484 = 0.355*t15338;
  t15486 = t15111 + t15134 + t15330 + t15484;
  t14489 = 0.075*t4767*t13457;
  t14660 = 0.075*t14650*t6705;
  t14665 = t4767*t14650;
  t14668 = -1.*t13457*t6705;
  t14669 = t14665 + t14668;
  t14674 = -0.0641*t14669;
  t14675 = -1.*t4767*t13457;
  t14677 = -1.*t14650*t6705;
  t14678 = t14675 + t14677;
  t14679 = 0.355*t14678;
  t14680 = t14489 + t14660 + t14674 + t14679;
  t16138 = 0.075*t4767*t16043;
  t16171 = 0.075*t16165*t6705;
  t16179 = -1.*t4767*t16043;
  t16182 = -1.*t16165*t6705;
  t16183 = t16179 + t16182;
  t16188 = 0.355*t16183;
  t16192 = t4767*t16165;
  t16193 = -1.*t16043*t6705;
  t16196 = t16192 + t16193;
  t16197 = -0.0641*t16196;
  t16201 = t16138 + t16171 + t16188 + t16197;
  t16305 = t256*t8752*t6630;
  t16307 = t16006*t4554;
  t16309 = t16305 + t16307;
  t11001 = 0.075*t4767*t10912;
  t11103 = 0.075*t11045*t6705;
  t11105 = t4767*t11045;
  t11117 = -1.*t10912*t6705;
  t11119 = t11105 + t11117;
  t11238 = -0.0641*t11119;
  t11371 = -1.*t4767*t10912;
  t11393 = -1.*t11045*t6705;
  t11410 = t11371 + t11393;
  t11623 = 0.355*t11410;
  t11800 = t11001 + t11103 + t11238 + t11623;
  t16249 = t4767*t16043;
  t16331 = t16165*t6705;
  t16335 = -1.*t4767*t16165;
  t16336 = -1.*t16309*t6705;
  t16337 = t16335 + t16336;
  t16395 = Cos(var1[3]);
  t16397 = Sin(var1[3]);
  t16398 = -1.*t8752*t16397;
  t16402 = -1.*t16395*t496*t514;
  t16409 = t16398 + t16402;
  t16422 = -1.*t257*t16409;
  t16429 = t16395*t256*t682;
  t16430 = t16422 + t16429;
  t16444 = -1.*t16395*t8752*t496;
  t16445 = t16397*t514;
  t16446 = t16444 + t16445;
  t16467 = t6630*t16409;
  t16468 = -1.*t16446*t682*t4554;
  t16469 = t16467 + t16468;
  t16471 = -1.*t6630*t16446*t682;
  t16472 = -1.*t16409*t4554;
  t16473 = t16471 + t16472;
  t16708 = t16395*t257*t496;
  t16710 = t16395*t256*t514*t682;
  t16711 = t16708 + t16710;
  t16713 = t16395*t256*t8752*t6630;
  t16717 = t16711*t4554;
  t16727 = t16713 + t16717;
  t16733 = t6630*t16711;
  t16737 = -1.*t16395*t256*t8752*t4554;
  t16738 = t16733 + t16737;
  t16411 = -1.*t16395*t256*t257;
  t16418 = -1.*t16409*t682;
  t16419 = t16411 + t16418;
  t16915 = t16395*t8752*t496;
  t16916 = -1.*t16397*t514;
  t16921 = t16915 + t16916;
  t16952 = -1.*t6630*t16921;
  t16954 = -1.*t16419*t4554;
  t16956 = t16952 + t16954;
  t16925 = t6630*t16419;
  t16931 = -1.*t16921*t4554;
  t16933 = t16925 + t16931;
  t17385 = t6630*t16921;
  t17394 = t16419*t4554;
  t17395 = t17385 + t17394;
  t17439 = -1.*t16395*t8752;
  t17447 = t16397*t496*t514;
  t17448 = t17439 + t17447;
  t17420 = -1.*t8752*t16397*t496;
  t17425 = -1.*t16395*t514;
  t17426 = t17420 + t17425;
  t17458 = t256*t257*t16397;
  t17460 = -1.*t17448*t682;
  t17463 = t17458 + t17460;
  t17465 = t6630*t17426;
  t17466 = t17463*t4554;
  t17469 = t17465 + t17466;
  t17474 = t6630*t17463;
  t17475 = -1.*t17426*t4554;
  t17476 = t17474 + t17475;
  t17698 = t256*t257*t16397*t514;
  t17699 = -1.*t16397*t496*t682;
  t17703 = t17698 + t17699;
  t17785 = -1.*t256*t6630*t16397*t514;
  t17786 = t256*t8752*t16397*t682*t4554;
  t17788 = t17785 + t17786;
  t17791 = t256*t8752*t6630*t16397*t682;
  t17792 = t256*t16397*t514*t4554;
  t17793 = t17791 + t17792;
  t16672 = 0.325*t16395*t256*t8752*t9215;
  t16688 = -0.1575*t16395*t256*t8791*t514;
  t16692 = -0.1575*t16395*t496*t682;
  t16694 = -1.*t16395*t256*t257*t514;
  t16695 = t16395*t496*t682;
  t16696 = t16694 + t16695;
  t16705 = 0.2255*t16696;
  t16712 = -0.325*t16711*t4554;
  t16728 = 0.075*t5965*t16727;
  t16739 = 0.075*t16738*t6705;
  t16742 = t4767*t16727;
  t16744 = -1.*t16738*t6705;
  t16745 = t16742 + t16744;
  t16747 = 0.355*t16745;
  t16749 = t4767*t16738;
  t16753 = t16727*t6705;
  t16862 = t16749 + t16753;
  t16911 = -0.0641*t16862;
  t16912 = t16672 + t16688 + t16692 + t16705 + t16712 + t16728 + t16739 + t16747 + t16911;
  t17689 = t257*t16397*t496;
  t17691 = t256*t16397*t514*t682;
  t17692 = t17689 + t17691;
  t17820 = -1.*t256*t8752*t6630*t16397;
  t17821 = -1.*t17692*t4554;
  t17824 = t17820 + t17821;
  t17813 = t6630*t17692;
  t17815 = -1.*t256*t8752*t16397*t4554;
  t17816 = t17813 + t17815;
  t17840 = t256*t8752*t6630*t16397;
  t17841 = t17692*t4554;
  t17843 = t17840 + t17841;
  t17451 = -0.1575*t256*t16397*t682;
  t17454 = t256*t16397*t682;
  t18056 = -1.*t16397*t496*t514*t682;
  t18062 = t17458 + t18056;
  t18073 = -1.*t8752*t6630*t16397*t496;
  t18074 = t18062*t4554;
  t18077 = t18073 + t18074;
  t18097 = t6630*t18062;
  t18107 = t8752*t16397*t496*t4554;
  t18111 = t18097 + t18107;
  t17780 = -0.1575*t256*t8752*t8791*t16397;
  t17781 = -0.2255*t256*t8752*t257*t16397;
  t17782 = -0.325*t256*t9215*t16397*t514;
  t17784 = -0.325*t256*t8752*t16397*t682*t4554;
  t17790 = 0.075*t5965*t17788;
  t17794 = 0.075*t17793*t6705;
  t17795 = t4767*t17788;
  t17796 = -1.*t17793*t6705;
  t17797 = t17795 + t17796;
  t17799 = 0.355*t17797;
  t17800 = t4767*t17793;
  t17801 = t17788*t6705;
  t17803 = t17800 + t17801;
  t17804 = -0.0641*t17803;
  t17805 = t17780 + t17781 + t17782 + t17784 + t17790 + t17794 + t17799 + t17804;
  t18187 = t16395*t8752;
  t18191 = -1.*t16397*t496*t514;
  t18249 = t18187 + t18191;
  t18259 = t6630*t18249;
  t18268 = -1.*t17426*t682*t4554;
  t18279 = t18259 + t18268;
  t18169 = -1.*t6630*t17426*t682;
  t18250 = -1.*t18249*t4554;
  t18255 = t18169 + t18250;
  t18423 = -1.*t6630*t18249;
  t18477 = t17426*t682*t4554;
  t18478 = t18423 + t18477;
  t16447 = 0.1575*t8791*t16446;
  t16449 = 0.2255*t257*t16446;
  t16457 = 0.325*t9215*t16409;
  t16462 = 0.325*t16446*t682*t4554;
  t16470 = 0.075*t5965*t16469;
  t16475 = 0.075*t16473*t6705;
  t16476 = t4767*t16469;
  t16477 = -1.*t16473*t6705;
  t16482 = t16476 + t16477;
  t16483 = 0.355*t16482;
  t16484 = t4767*t16473;
  t16533 = t16469*t6705;
  t16577 = t16484 + t16533;
  t16588 = -0.0641*t16577;
  t16594 = t16447 + t16449 + t16457 + t16462 + t16470 + t16475 + t16483 + t16588;
  t17438 = 0.325*t9215*t17426;
  t17450 = 0.1575*t8791*t17448;
  t18804 = -1.*t17448*t682*t4554;
  t18806 = t17465 + t18804;
  t18808 = -1.*t6630*t17448*t682;
  t18809 = t18808 + t17475;
  t18136 = -0.068*t17426*t682;
  t18138 = 0.325*t257*t17426*t4554;
  t18143 = -0.075*t257*t5965*t17426*t4554;
  t18144 = -0.075*t257*t6630*t17426*t6705;
  t18145 = -1.*t257*t4767*t17426*t4554;
  t18147 = t257*t6630*t17426*t6705;
  t18148 = t18145 + t18147;
  t18149 = 0.355*t18148;
  t18150 = -1.*t257*t6630*t4767*t17426;
  t18151 = -1.*t257*t17426*t4554*t6705;
  t18153 = t18150 + t18151;
  t18155 = -0.0641*t18153;
  t18162 = t18136 + t18138 + t18143 + t18144 + t18149 + t18155;
  t16396 = 0.1575*t16395*t256*t257;
  t16410 = 0.1575*t16409*t682;
  t16420 = 0.2255*t16419;
  t16431 = -0.325*t16430*t4554;
  t16432 = 0.075*t5965*t16430*t4554;
  t16433 = 0.075*t6630*t16430*t6705;
  t16434 = t4767*t16430*t4554;
  t16435 = -1.*t6630*t16430*t6705;
  t16436 = t16434 + t16435;
  t16437 = 0.355*t16436;
  t16438 = t6630*t4767*t16430;
  t16439 = t16430*t4554*t6705;
  t16440 = t16438 + t16439;
  t16441 = -0.0641*t16440;
  t16442 = t16396 + t16410 + t16420 + t16431 + t16432 + t16433 + t16437 + t16441;
  t18831 = -1.*t257*t18249;
  t18832 = t18831 + t17454;
  t17674 = -0.1575*t257*t16397*t496;
  t17682 = -0.1575*t256*t16397*t514*t682;
  t17695 = 0.2255*t17692;
  t17704 = -0.325*t17703*t4554;
  t17705 = 0.075*t5965*t17703*t4554;
  t17728 = 0.075*t6630*t17703*t6705;
  t17747 = t4767*t17703*t4554;
  t17750 = -1.*t6630*t17703*t6705;
  t17761 = t17747 + t17750;
  t17765 = 0.355*t17761;
  t17766 = t6630*t4767*t17703;
  t17767 = t17703*t4554*t6705;
  t17769 = t17766 + t17767;
  t17770 = -0.0641*t17769;
  t17771 = t17674 + t17682 + t17695 + t17704 + t17705 + t17728 + t17765 + t17770;
  t18870 = t18249*t682;
  t18871 = t17458 + t18870;
  t18852 = -0.325*t6630*t18832;
  t18853 = 0.075*t6630*t5965*t18832;
  t18854 = -0.075*t18832*t4554*t6705;
  t18855 = -1.*t4767*t18832*t4554;
  t18856 = t6630*t18832*t6705;
  t18858 = t18855 + t18856;
  t18859 = -0.0641*t18858;
  t18860 = t6630*t4767*t18832;
  t18862 = t18832*t4554*t6705;
  t18863 = t18860 + t18862;
  t18864 = 0.355*t18863;
  t18865 = t18852 + t18853 + t18854 + t18859 + t18864;
  t18305 = 0.325*t6630*t17426*t682;
  t18306 = 0.325*t18249*t4554;
  t18313 = 0.075*t5965*t18255;
  t18521 = 0.075*t18478*t6705;
  t18702 = t4767*t18478;
  t18714 = t18255*t6705;
  t18725 = t18702 + t18714;
  t18726 = -0.0641*t18725;
  t18731 = t4767*t18255;
  t18741 = -1.*t18478*t6705;
  t18743 = t18731 + t18741;
  t18748 = 0.355*t18743;
  t18750 = t18305 + t18306 + t18313 + t18521 + t18726 + t18748;
  t17811 = -0.325*t6630*t17692;
  t17812 = 0.325*t256*t8752*t16397*t4554;
  t17817 = 0.075*t5965*t17816;
  t17826 = 0.075*t17824*t6705;
  t17827 = t4767*t17824;
  t17830 = t17816*t6705;
  t17831 = t17827 + t17830;
  t17832 = -0.0641*t17831;
  t17833 = t4767*t17816;
  t17834 = -1.*t17824*t6705;
  t17835 = t17833 + t17834;
  t17836 = 0.355*t17835;
  t17837 = t17811 + t17812 + t17817 + t17826 + t17832 + t17836;
  t16914 = -0.325*t6630*t16419;
  t16923 = 0.325*t16921*t4554;
  t16937 = 0.075*t5965*t16933;
  t16960 = 0.075*t16956*t6705;
  t16961 = t4767*t16956;
  t16964 = t16933*t6705;
  t16965 = t16961 + t16964;
  t16967 = -0.0641*t16965;
  t16968 = t4767*t16933;
  t16970 = -1.*t16956*t6705;
  t16977 = t16968 + t16970;
  t17193 = 0.355*t16977;
  t17381 = t16914 + t16923 + t16937 + t16960 + t16967 + t17193;
  t18899 = -1.*t256*t257*t16397;
  t18900 = -1.*t18249*t682;
  t18901 = t18899 + t18900;
  t18894 = t8752*t16397*t496;
  t18895 = t16395*t514;
  t18896 = t18894 + t18895;
  t18897 = -1.*t6630*t18896;
  t18902 = -1.*t18901*t4554;
  t18903 = t18897 + t18902;
  t18906 = t6630*t18901;
  t18907 = -1.*t18896*t4554;
  t18908 = t18906 + t18907;
  t18926 = -1.*t6630*t18901;
  t18927 = t18896*t4554;
  t18928 = t18926 + t18927;
  t18833 = 0.075*t6630*t4767*t18832;
  t18835 = 0.075*t18832*t4554*t6705;
  t18836 = t4767*t18832*t4554;
  t18839 = -1.*t6630*t18832*t6705;
  t18840 = t18836 + t18839;
  t18843 = -0.0641*t18840;
  t18844 = -1.*t6630*t4767*t18832;
  t18845 = -1.*t18832*t4554*t6705;
  t18846 = t18844 + t18845;
  t18848 = 0.355*t18846;
  t18849 = t18833 + t18835 + t18843 + t18848;
  t18256 = 0.075*t4767*t18255;
  t18280 = 0.075*t18279*t6705;
  t18284 = t4767*t18279;
  t18285 = -1.*t18255*t6705;
  t18287 = t18284 + t18285;
  t18288 = -0.0641*t18287;
  t18296 = -1.*t4767*t18255;
  t18297 = -1.*t18279*t6705;
  t18300 = t18296 + t18297;
  t18302 = 0.355*t18300;
  t18303 = t18256 + t18280 + t18288 + t18302;
  t17839 = 0.075*t4767*t17816;
  t17844 = 0.075*t17843*t6705;
  t17847 = t4767*t17843;
  t17848 = -1.*t17816*t6705;
  t17849 = t17847 + t17848;
  t17850 = -0.0641*t17849;
  t17851 = -1.*t4767*t17816;
  t17852 = -1.*t17843*t6705;
  t17855 = t17851 + t17852;
  t17856 = 0.355*t17855;
  t17857 = t17839 + t17844 + t17850 + t17856;
  t17383 = 0.075*t4767*t16933;
  t17399 = 0.075*t17395*t6705;
  t17400 = t4767*t17395;
  t17401 = -1.*t16933*t6705;
  t17410 = t17400 + t17401;
  t17411 = -0.0641*t17410;
  t17412 = -1.*t4767*t16933;
  t17414 = -1.*t17395*t6705;
  t17415 = t17412 + t17414;
  t17416 = 0.355*t17415;
  t17417 = t17383 + t17399 + t17411 + t17416;
  t18905 = 0.075*t4767*t18903;
  t18909 = 0.075*t18908*t6705;
  t18910 = -1.*t4767*t18903;
  t18912 = -1.*t18908*t6705;
  t18915 = t18910 + t18912;
  t18916 = 0.355*t18915;
  t18917 = t4767*t18908;
  t18918 = -1.*t18903*t6705;
  t18919 = t18917 + t18918;
  t18920 = -0.0641*t18919;
  t18921 = t18905 + t18909 + t18916 + t18920;
  t18946 = t6630*t18896;
  t18947 = t18901*t4554;
  t18948 = t18946 + t18947;
  t18930 = t4767*t18903;
  t18952 = t18908*t6705;
  t18955 = -1.*t4767*t18908;
  t18956 = -1.*t18948*t6705;
  t18957 = t18955 + t18956;
  t19007 = 0.1575*t256*t257*t16397;
  t19008 = 0.1575*t18249*t682;
  t19009 = 0.2255*t18901;
  t19010 = -0.325*t18832*t4554;
  t19011 = 0.075*t5965*t18832*t4554;
  t19012 = 0.075*t6630*t18832*t6705;
  t19013 = 0.355*t18840;
  t19014 = -0.0641*t18863;
  t19015 = t19007 + t19008 + t19009 + t19010 + t19011 + t19012 + t19013 + t19014;
  t18996 = 0.1575*t8791*t17426;
  t18997 = 0.2255*t257*t17426;
  t18998 = 0.325*t9215*t18249;
  t18999 = 0.325*t17426*t682*t4554;
  t19000 = 0.075*t5965*t18279;
  t19001 = 0.075*t18255*t6705;
  t19002 = 0.355*t18287;
  t19003 = t18279*t6705;
  t19004 = t18731 + t19003;
  t19005 = -0.0641*t19004;
  t19006 = t18996 + t18997 + t18998 + t18999 + t19000 + t19001 + t19002 + t19005;
  t18980 = 0.325*t256*t8752*t9215*t16397;
  t18981 = -0.1575*t256*t8791*t16397*t514;
  t18982 = -0.1575*t16397*t496*t682;
  t18983 = -1.*t256*t257*t16397*t514;
  t18984 = t16397*t496*t682;
  t18985 = t18983 + t18984;
  t18987 = 0.2255*t18985;
  t18988 = -0.325*t17692*t4554;
  t18989 = 0.075*t5965*t17843;
  t18990 = 0.075*t17816*t6705;
  t18991 = 0.355*t17849;
  t18992 = t17843*t6705;
  t18993 = t17833 + t18992;
  t18994 = -0.0641*t18993;
  t18995 = t18980 + t18981 + t18982 + t18987 + t18988 + t18989 + t18990 + t18991 + t18994;
  t18962 = 0.325*t9215*t16921;
  t18964 = 0.1575*t8791*t16409;
  t18965 = 0.1575*t16395*t256*t682;
  t18966 = t257*t16409;
  t18967 = -1.*t16395*t256*t682;
  t18969 = t18966 + t18967;
  t18970 = 0.2255*t18969;
  t18971 = -0.325*t16419*t4554;
  t18972 = 0.075*t5965*t17395;
  t18973 = 0.075*t16933*t6705;
  t18974 = 0.355*t17410;
  t18975 = t17395*t6705;
  t18976 = t16968 + t18975;
  t18977 = -0.0641*t18976;
  t18979 = t18962 + t18964 + t18965 + t18970 + t18971 + t18972 + t18973 + t18974 + t18977;
  t19016 = -0.325*t6630*t18901;
  t19017 = 0.325*t18896*t4554;
  t19018 = 0.075*t5965*t18908;
  t19019 = 0.075*t18903*t6705;
  t19020 = t18930 + t18952;
  t19021 = -0.0641*t19020;
  t19022 = 0.355*t18919;
  t19023 = t19016 + t19017 + t19018 + t19019 + t19021 + t19022;
  t19024 = 0.075*t4767*t18908;
  t19025 = 0.075*t18948*t6705;
  t19026 = t4767*t18948;
  t19027 = t19026 + t18912;
  t19028 = -0.0641*t19027;
  t19029 = 0.355*t18957;
  t19030 = t19024 + t19025 + t19028 + t19029;
  t19061 = t16395*t256*t6630*t514;
  t19062 = -1.*t16395*t256*t8752*t682*t4554;
  t19063 = t19061 + t19062;
  t19065 = -1.*t16395*t256*t8752*t6630*t682;
  t19066 = -1.*t16395*t256*t514*t4554;
  t19067 = t19065 + t19066;
  t19040 = -1.*t16395*t257*t496;
  t19041 = -1.*t16395*t256*t514*t682;
  t19042 = t19040 + t19041;
  t19085 = -1.*t19042*t4554;
  t19086 = t16713 + t19085;
  t19081 = t6630*t19042;
  t19082 = t16395*t256*t8752*t4554;
  t19083 = t19081 + t19082;
  t19099 = -1.*t16395*t256*t8752*t6630;
  t19100 = t19042*t4554;
  t19101 = t19099 + t19100;
  t19119 = t16395*t496*t514*t682;
  t19120 = t16411 + t19119;
  t19122 = t16395*t8752*t6630*t496;
  t19123 = t19120*t4554;
  t19124 = t19122 + t19123;
  t19126 = t6630*t19120;
  t19127 = -1.*t16395*t8752*t496*t4554;
  t19128 = t19126 + t19127;
  t19057 = 0.1575*t16395*t256*t8752*t8791;
  t19058 = 0.2255*t16395*t256*t8752*t257;
  t19059 = 0.325*t16395*t256*t9215*t514;
  t19060 = 0.325*t16395*t256*t8752*t682*t4554;
  t19064 = 0.075*t5965*t19063;
  t19068 = 0.075*t19067*t6705;
  t19069 = t4767*t19063;
  t19070 = -1.*t19067*t6705;
  t19071 = t19069 + t19070;
  t19072 = 0.355*t19071;
  t19073 = t4767*t19067;
  t19074 = t19063*t6705;
  t19075 = t19073 + t19074;
  t19076 = -0.0641*t19075;
  t19077 = t19057 + t19058 + t19059 + t19060 + t19064 + t19068 + t19072 + t19076;
  t19158 = t8752*t16397;
  t19159 = t16395*t496*t514;
  t19160 = t19158 + t19159;
  t19164 = t6630*t19160;
  t19165 = -1.*t16921*t682*t4554;
  t19166 = t19164 + t19165;
  t19157 = -1.*t6630*t16921*t682;
  t19161 = -1.*t19160*t4554;
  t19162 = t19157 + t19161;
  t19181 = -1.*t6630*t19160;
  t19182 = t16921*t682*t4554;
  t19183 = t19181 + t19182;
  t19197 = -1.*t16409*t682*t4554;
  t19198 = t17385 + t19197;
  t19200 = -1.*t6630*t16409*t682;
  t19201 = t19200 + t16931;
  t19141 = -0.068*t16921*t682;
  t19142 = 0.325*t257*t16921*t4554;
  t19143 = -0.075*t257*t5965*t16921*t4554;
  t19144 = -0.075*t257*t6630*t16921*t6705;
  t19145 = -1.*t257*t4767*t16921*t4554;
  t19146 = t257*t6630*t16921*t6705;
  t19147 = t19145 + t19146;
  t19148 = 0.355*t19147;
  t19149 = -1.*t257*t6630*t4767*t16921;
  t19150 = -1.*t257*t16921*t4554*t6705;
  t19151 = t19149 + t19150;
  t19152 = -0.0641*t19151;
  t19153 = t19141 + t19142 + t19143 + t19144 + t19148 + t19152;
  t19215 = -1.*t257*t19160;
  t19216 = t19215 + t18967;
  t19038 = 0.1575*t16395*t257*t496;
  t19039 = 0.1575*t16395*t256*t514*t682;
  t19043 = 0.2255*t19042;
  t19044 = -0.325*t16696*t4554;
  t19045 = 0.075*t5965*t16696*t4554;
  t19046 = 0.075*t6630*t16696*t6705;
  t19047 = t4767*t16696*t4554;
  t19048 = -1.*t6630*t16696*t6705;
  t19049 = t19047 + t19048;
  t19050 = 0.355*t19049;
  t19051 = t6630*t4767*t16696;
  t19052 = t16696*t4554*t6705;
  t19053 = t19051 + t19052;
  t19054 = -0.0641*t19053;
  t19055 = t19038 + t19039 + t19043 + t19044 + t19045 + t19046 + t19050 + t19054;
  t19246 = t19160*t682;
  t19247 = t16411 + t19246;
  t19229 = -0.325*t6630*t19216;
  t19230 = 0.075*t6630*t5965*t19216;
  t19231 = -0.075*t19216*t4554*t6705;
  t19232 = -1.*t4767*t19216*t4554;
  t19233 = t6630*t19216*t6705;
  t19234 = t19232 + t19233;
  t19235 = -0.0641*t19234;
  t19236 = t6630*t4767*t19216;
  t19237 = t19216*t4554*t6705;
  t19238 = t19236 + t19237;
  t19239 = 0.355*t19238;
  t19240 = t19229 + t19230 + t19231 + t19235 + t19239;
  t19178 = 0.325*t6630*t16921*t682;
  t19179 = 0.325*t19160*t4554;
  t19180 = 0.075*t5965*t19162;
  t19184 = 0.075*t19183*t6705;
  t19185 = t4767*t19183;
  t19186 = t19162*t6705;
  t19187 = t19185 + t19186;
  t19188 = -0.0641*t19187;
  t19189 = t4767*t19162;
  t19190 = -1.*t19183*t6705;
  t19191 = t19189 + t19190;
  t19192 = 0.355*t19191;
  t19193 = t19178 + t19179 + t19180 + t19184 + t19188 + t19192;
  t19079 = -0.325*t6630*t19042;
  t19080 = -0.325*t16395*t256*t8752*t4554;
  t19084 = 0.075*t5965*t19083;
  t19087 = 0.075*t19086*t6705;
  t19088 = t4767*t19086;
  t19089 = t19083*t6705;
  t19090 = t19088 + t19089;
  t19091 = -0.0641*t19090;
  t19092 = t4767*t19083;
  t19093 = -1.*t19086*t6705;
  t19094 = t19092 + t19093;
  t19095 = 0.355*t19094;
  t19096 = t19079 + t19080 + t19084 + t19087 + t19091 + t19095;
  t19266 = t16395*t256*t257;
  t19267 = -1.*t19160*t682;
  t19268 = t19266 + t19267;
  t19265 = -1.*t6630*t16446;
  t19269 = -1.*t19268*t4554;
  t19270 = t19265 + t19269;
  t19272 = t6630*t19268;
  t19273 = -1.*t16446*t4554;
  t19274 = t19272 + t19273;
  t19289 = -1.*t6630*t19268;
  t19290 = t16446*t4554;
  t19291 = t19289 + t19290;
  t19217 = 0.075*t6630*t4767*t19216;
  t19218 = 0.075*t19216*t4554*t6705;
  t19219 = t4767*t19216*t4554;
  t19220 = -1.*t6630*t19216*t6705;
  t19221 = t19219 + t19220;
  t19222 = -0.0641*t19221;
  t19223 = -1.*t6630*t4767*t19216;
  t19224 = -1.*t19216*t4554*t6705;
  t19225 = t19223 + t19224;
  t19226 = 0.355*t19225;
  t19227 = t19217 + t19218 + t19222 + t19226;
  t19163 = 0.075*t4767*t19162;
  t19167 = 0.075*t19166*t6705;
  t19168 = t4767*t19166;
  t19169 = -1.*t19162*t6705;
  t19170 = t19168 + t19169;
  t19171 = -0.0641*t19170;
  t19172 = -1.*t4767*t19162;
  t19173 = -1.*t19166*t6705;
  t19174 = t19172 + t19173;
  t19175 = 0.355*t19174;
  t19176 = t19163 + t19167 + t19171 + t19175;
  t19098 = 0.075*t4767*t19083;
  t19102 = 0.075*t19101*t6705;
  t19103 = t4767*t19101;
  t19104 = -1.*t19083*t6705;
  t19105 = t19103 + t19104;
  t19106 = -0.0641*t19105;
  t19107 = -1.*t4767*t19083;
  t19108 = -1.*t19101*t6705;
  t19109 = t19107 + t19108;
  t19110 = 0.355*t19109;
  t19111 = t19098 + t19102 + t19106 + t19110;
  t19271 = 0.075*t4767*t19270;
  t19275 = 0.075*t19274*t6705;
  t19276 = -1.*t4767*t19270;
  t19277 = -1.*t19274*t6705;
  t19278 = t19276 + t19277;
  t19279 = 0.355*t19278;
  t19280 = t4767*t19274;
  t19281 = -1.*t19270*t6705;
  t19282 = t19280 + t19281;
  t19283 = -0.0641*t19282;
  t19284 = t19271 + t19275 + t19279 + t19283;
  t19309 = t6630*t16446;
  t19310 = t19268*t4554;
  t19311 = t19309 + t19310;
  t19293 = t4767*t19270;
  t19315 = t19274*t6705;
  t19318 = -1.*t4767*t19274;
  t19319 = -1.*t19311*t6705;
  t19320 = t19318 + t19319;
  p_output1[0]=(t10524 + t10616 + t10623 + t10669 + t10674 + 0.075*t10678*t5965 + 0.075*t10695*t6705 - 0.0641*(t10695*t4767 + t10678*t6705) + 0.355*(t10678*t4767 - 1.*t10695*t6705))*var2[4] + t10520*var2[5] + t7719*var2[6] + t10997*var2[7] + t11800*var2[8];
  p_output1[1]=t10520*var2[4] + (t10524 + t10616 + 0.2255*t256*t257*t514 + 0.075*t14750*t5965 + 0.075*t14756*t6705 - 0.0641*(t14756*t4767 + t14750*t6705) + 0.355*(t14750*t4767 - 1.*t14756*t6705) + 0.325*t256*t4554*t514*t682)*var2[5] + t13383*var2[6] + t14486*var2[7] + t14680*var2[8];
  p_output1[2]=t7719*var2[4] + t13383*var2[5] + (t10623 + t10669 + t10674 - 0.1575*t256*t257*t514 + 0.075*t10673*t4554*t5965 + 0.075*t10673*t6630*t6705 - 0.0641*(t10673*t4767*t6630 + t10673*t4554*t6705) + 0.355*(t10673*t4554*t4767 - 1.*t10673*t6630*t6705))*var2[6] + t15568*var2[7] + t15486*var2[8];
  p_output1[3]=t10997*var2[4] + t14486*var2[5] + t15568*var2[6] + (0.325*t16006*t4554 + 0.075*t16043*t5965 + 0.075*t16222*t6705 - 0.0641*(t16222*t4767 + t16043*t6705) + 0.355*(t16249 - 1.*t16222*t6705) + 0.325*t256*t6630*t8752)*var2[7] + t16201*var2[8];
  p_output1[4]=t11800*var2[4] + t14680*var2[5] + t15486*var2[6] + t16201*var2[7] + (-0.0641*t16337 + 0.075*t16309*t4767 + 0.355*(t16331 - 1.*t16309*t4767) - 0.075*t16165*t6705)*var2[8];
  p_output1[5]=1.;
  p_output1[6]=0.355*t11119 - 0.325*t1736*t4554 + 0.075*t11045*t5965 + 0.075*t10912*t6705 - 0.0641*(t10962 + t11045*t6705) - 0.1575*t256*t682 + 0.2255*(t257*t496*t514 + t256*t682) + 0.1575*t496*t514*t8791 - 0.325*t496*t8752*t9215;
  p_output1[7]=0.355*t14669 + 0.075*t14650*t5965 + 0.075*t13457*t6705 - 0.0641*(t14478 + t14650*t6705) - 0.2255*t256*t257*t8752 - 0.325*t256*t4554*t682*t8752 - 0.1575*t256*t8752*t8791 - 0.325*t256*t514*t9215;
  p_output1[8]=0.355*t15329 - 0.0641*t15556 + 0.2255*t16006 - 0.325*t10650*t4554 - 0.1575*t257*t496 + 0.075*t10650*t4554*t5965 + 0.075*t10650*t6630*t6705 - 0.1575*t256*t514*t682;
  p_output1[9]=0.355*t16196 - 0.0641*(t16249 + t16331) + 0.075*t16165*t5965 - 0.325*t16006*t6630 + 0.075*t16043*t6705 + 0.325*t256*t4554*t8752;
  p_output1[10]=0.355*t16337 + 0.075*t16165*t4767 - 0.0641*(t16182 + t16309*t4767) + 0.075*t16309*t6705;
  p_output1[11]=(t17438 + t17450 + t17451 + 0.2255*(t17454 + t17448*t257) - 0.325*t17463*t4554 + 0.075*t17469*t5965 + 0.075*t17476*t6705 - 0.0641*(t17476*t4767 + t17469*t6705) + 0.355*(t17469*t4767 - 1.*t17476*t6705))*var2[3] + t16912*var2[4] + t16594*var2[5] + t16442*var2[6] + t17381*var2[7] + t17417*var2[8];
  p_output1[12]=t16912*var2[3] + (t17451 - 0.325*t18062*t4554 + 0.2255*(t17454 + t16397*t257*t496*t514) + 0.075*t18077*t5965 + 0.075*t18111*t6705 - 0.0641*(t18111*t4767 + t18077*t6705) + 0.355*(t18077*t4767 - 1.*t18111*t6705) + 0.1575*t16397*t496*t514*t8791 - 0.325*t16397*t496*t8752*t9215)*var2[4] + t17805*var2[5] + t17771*var2[6] + t17837*var2[7] + t17857*var2[8];
  p_output1[13]=t16594*var2[3] + t17805*var2[4] + (t17438 + t17450 + 0.2255*t17448*t257 + 0.075*t18806*t5965 + 0.075*t18809*t6705 - 0.0641*(t18809*t4767 + t18806*t6705) + 0.355*(t18806*t4767 - 1.*t18809*t6705) + 0.325*t17448*t4554*t682)*var2[5] + t18162*var2[6] + t18750*var2[7] + t18303*var2[8];
  p_output1[14]=t16442*var2[3] + t17771*var2[4] + t18162*var2[5] + (t17451 + 0.2255*t18832 + 0.1575*t18249*t257 - 0.325*t18871*t4554 + 0.075*t18871*t4554*t5965 + 0.075*t18871*t6630*t6705 - 0.0641*(t18871*t4767*t6630 + t18871*t4554*t6705) + 0.355*(t18871*t4554*t4767 - 1.*t18871*t6630*t6705))*var2[6] + t18865*var2[7] + t18849*var2[8];
  p_output1[15]=t17381*var2[3] + t17837*var2[4] + t18750*var2[5] + t18865*var2[6] + (0.325*t18901*t4554 + 0.075*t18903*t5965 + 0.325*t18896*t6630 + 0.075*t18928*t6705 - 0.0641*(t18928*t4767 + t18903*t6705) + 0.355*(t18930 - 1.*t18928*t6705))*var2[7] + t18921*var2[8];
  p_output1[16]=t17417*var2[3] + t17857*var2[4] + t18303*var2[5] + t18849*var2[6] + t18921*var2[7] + (-0.0641*t18957 + 0.075*t18948*t4767 + 0.355*(t18952 - 1.*t18948*t4767) - 0.075*t18908*t6705)*var2[8];
  p_output1[17]=1.;
  p_output1[18]=t18979;
  p_output1[19]=t18995;
  p_output1[20]=t19006;
  p_output1[21]=t19015;
  p_output1[22]=t19023;
  p_output1[23]=t19030;
  p_output1[24]=t18979*var2[3] + t18995*var2[4] + t19006*var2[5] + t19015*var2[6] + t19023*var2[7] + t19030*var2[8];
  p_output1[25]=t18995*var2[3] + (t18965 - 0.325*t19120*t4554 + 0.2255*(t18967 - 1.*t16395*t257*t496*t514) + 0.075*t19124*t5965 + 0.075*t19128*t6705 - 0.0641*(t19128*t4767 + t19124*t6705) + 0.355*(t19124*t4767 - 1.*t19128*t6705) - 0.1575*t16395*t496*t514*t8791 + 0.325*t16395*t496*t8752*t9215)*var2[4] + t19077*var2[5] + t19055*var2[6] + t19096*var2[7] + t19111*var2[8];
  p_output1[26]=t19006*var2[3] + t19077*var2[4] + (t18962 + t18964 + 0.2255*t16409*t257 + 0.075*t19198*t5965 + 0.075*t19201*t6705 - 0.0641*(t19201*t4767 + t19198*t6705) + 0.355*(t19198*t4767 - 1.*t19201*t6705) + 0.325*t16409*t4554*t682)*var2[5] + t19153*var2[6] + t19193*var2[7] + t19176*var2[8];
  p_output1[27]=t19015*var2[3] + t19055*var2[4] + t19153*var2[5] + (t18965 + 0.2255*t19216 + 0.1575*t19160*t257 - 0.325*t19247*t4554 + 0.075*t19247*t4554*t5965 + 0.075*t19247*t6630*t6705 - 0.0641*(t19247*t4767*t6630 + t19247*t4554*t6705) + 0.355*(t19247*t4554*t4767 - 1.*t19247*t6630*t6705))*var2[6] + t19240*var2[7] + t19227*var2[8];
  p_output1[28]=t19023*var2[3] + t19096*var2[4] + t19193*var2[5] + t19240*var2[6] + (0.325*t19268*t4554 + 0.075*t19270*t5965 + 0.325*t16446*t6630 + 0.075*t19291*t6705 - 0.0641*(t19291*t4767 + t19270*t6705) + 0.355*(t19293 - 1.*t19291*t6705))*var2[7] + t19284*var2[8];
  p_output1[29]=t19030*var2[3] + t19111*var2[4] + t19176*var2[5] + t19227*var2[6] + t19284*var2[7] + (-0.0641*t19320 + 0.075*t19311*t4767 + 0.355*(t19315 - 1.*t19311*t4767) - 0.075*t19274*t6705)*var2[8];
  p_output1[30]=1.;
  p_output1[31]=t18909 + 0.355*t19027 - 0.325*t18901*t4554 + 0.075*t18948*t5965 - 0.0641*(t18917 + t18948*t6705) + 0.1575*t16397*t256*t682 + 0.2255*(t18249*t257 - 1.*t16397*t256*t682) + 0.1575*t18249*t8791 + 0.325*t18896*t9215;
  p_output1[32]=0.355*t19105 - 0.325*t19042*t4554 + 0.075*t19101*t5965 + 0.075*t19083*t6705 - 0.0641*(t19092 + t19101*t6705) + 0.1575*t16395*t496*t682 + 0.2255*(t16395*t256*t257*t514 - 1.*t16395*t496*t682) + 0.1575*t16395*t256*t514*t8791 - 0.325*t16395*t256*t8752*t9215;
  p_output1[33]=0.355*t19170 + 0.2255*t16921*t257 + 0.075*t19166*t5965 + 0.075*t19162*t6705 - 0.0641*(t19189 + t19166*t6705) + 0.325*t16921*t4554*t682 + 0.1575*t16921*t8791 + 0.325*t19160*t9215;
  p_output1[34]=0.355*t19221 - 0.0641*t19238 + 0.2255*t19268 - 0.1575*t16395*t256*t257 - 0.325*t19216*t4554 + 0.075*t19216*t4554*t5965 + 0.075*t19216*t6630*t6705 + 0.1575*t19160*t682;
  p_output1[35]=0.355*t19282 - 0.0641*(t19293 + t19315) + 0.325*t16446*t4554 + 0.075*t19274*t5965 - 0.325*t19268*t6630 + 0.075*t19270*t6705;
  p_output1[36]=0.355*t19320 + 0.075*t19274*t4767 - 0.0641*(t19277 + t19311*t4767) + 0.075*t19311*t6705;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 37, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_initial_swing_velocity_FlFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void J_initial_swing_velocity_FlFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
