/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 18:38:01 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t184;
  double t149;
  double t164;
  double t196;
  double t169;
  double t206;
  double t508;
  double t128;
  double t901;
  double t1721;
  double t1110;
  double t1156;
  double t1411;
  double t1800;
  double t688;
  double t59;
  double t2172;
  double t2175;
  double t2177;
  double t1973;
  double t1976;
  double t1977;
  double t1979;
  double t1981;
  double t2167;
  double t1580;
  double t1876;
  double t1901;
  double t2661;
  double t2657;
  double t2659;
  double t2662;
  double t2660;
  double t2663;
  double t2682;
  double t3096;
  double t2926;
  double t2960;
  double t3045;
  double t2656;
  double t3514;
  double t3515;
  double t3600;
  double t3291;
  double t3292;
  double t3295;
  double t3296;
  double t3437;
  double t3446;
  double t3068;
  double t3125;
  double t3216;
  double t625;
  double t1903;
  double t1933;
  double t5151;
  double t5263;
  double t1935;
  double t1937;
  double t1942;
  double t2387;
  double t2388;
  double t2390;
  double t2182;
  double t2183;
  double t2198;
  double t2207;
  double t2211;
  double t2212;
  double t5403;
  double t5404;
  double t5410;
  double t2392;
  double t2396;
  double t2397;
  double t2433;
  double t2442;
  double t2444;
  double t5185;
  double t5191;
  double t5202;
  double t2918;
  double t3228;
  double t3230;
  double t3238;
  double t3260;
  double t3261;
  double t4288;
  double t4324;
  double t4453;
  double t3698;
  double t3699;
  double t3792;
  double t3946;
  double t3963;
  double t3985;
  double t6007;
  double t6016;
  double t6017;
  double t4523;
  double t4533;
  double t4550;
  double t4904;
  double t4918;
  double t4938;
  double t5635;
  double t5642;
  double t5658;
  double t5613;
  double t5620;
  double t5626;
  double t5284;
  double t5298;
  double t5334;
  double t5387;
  double t5391;
  double t5396;
  double t5423;
  double t5428;
  double t5429;
  double t5443;
  double t5445;
  double t5450;
  double t5468;
  double t5470;
  double t5472;
  double t5506;
  double t5508;
  double t5510;
  double t5418;
  double t5420;
  double t5421;
  double t5520;
  double t5524;
  double t5527;
  double t5539;
  double t5540;
  double t5543;
  double t5551;
  double t5556;
  double t5561;
  double t5564;
  double t5567;
  double t5568;
  double t7305;
  double t7306;
  double t7307;
  double t5685;
  double t5688;
  double t5696;
  double t5881;
  double t5919;
  double t5969;
  double t6072;
  double t6083;
  double t6215;
  double t6452;
  double t6643;
  double t6675;
  double t7043;
  double t7102;
  double t7108;
  double t7151;
  double t7162;
  double t7170;
  double t6019;
  double t6056;
  double t6065;
  double t7233;
  double t7239;
  double t7240;
  double t7269;
  double t7276;
  double t7280;
  double t7286;
  double t7291;
  double t7292;
  double t7294;
  double t7295;
  double t7297;
  double t1965;
  double t2168;
  double t2170;
  double t9620;
  double t9623;
  double t9630;
  double t9645;
  double t9650;
  double t9651;
  double t9653;
  double t9660;
  double t9667;
  double t9613;
  double t9635;
  double t9668;
  double t9678;
  double t9609;
  double t9703;
  double t9742;
  double t9793;
  double t9796;
  double t9798;
  double t9804;
  double t9809;
  double t9810;
  double t9816;
  double t9817;
  double t9821;
  double t9827;
  double t9856;
  double t9861;
  double t9866;
  double t9879;
  double t9919;
  double t10072;
  double t10080;
  double t10082;
  double t10052;
  double t10058;
  double t10059;
  double t10008;
  double t10035;
  double t10036;
  double t9784;
  double t9923;
  double t9951;
  double t10274;
  double t10278;
  double t10284;
  double t10546;
  double t10566;
  double t10582;
  double t10291;
  double t10302;
  double t10313;
  double t10333;
  double t10402;
  double t10410;
  double t10431;
  double t10445;
  double t2403;
  double t2404;
  double t2430;
  double t11216;
  double t11217;
  double t11221;
  double t11240;
  double t11396;
  double t2362;
  double t2363;
  double t2381;
  double t11446;
  double t11470;
  double t11473;
  double t11494;
  double t11504;
  double t11590;
  double t2432;
  double t2445;
  double t2550;
  double t12511;
  double t12512;
  double t12518;
  double t12519;
  double t12522;
  double t12523;
  double t12572;
  double t12603;
  double t12678;
  double t12516;
  double t12529;
  double t12534;
  double t12566;
  double t12693;
  double t12704;
  double t12708;
  double t12711;
  double t12728;
  double t2651;
  double t2653;
  double t2654;
  double t12945;
  double t12946;
  double t12948;
  double t12943;
  double t12951;
  double t12952;
  double t12958;
  double t12959;
  double t13099;
  double t13100;
  double t13111;
  double t12953;
  double t12964;
  double t12974;
  double t13094;
  double t13117;
  double t13136;
  double t13161;
  double t13170;
  double t13175;
  double t13198;
  double t13256;
  double t13265;
  double t13419;
  double t13533;
  double t13539;
  double t13547;
  double t13555;
  double t1947;
  double t1948;
  double t1955;
  double t2181;
  double t2201;
  double t2205;
  double t14544;
  double t14565;
  double t14593;
  double t14895;
  double t14903;
  double t14933;
  double t14939;
  double t15015;
  double t11187;
  double t3288;
  double t3451;
  double t3455;
  double t15936;
  double t15942;
  double t15972;
  double t15983;
  double t15987;
  double t15994;
  double t15998;
  double t16005;
  double t16006;
  double t15920;
  double t15980;
  double t16007;
  double t16022;
  double t15902;
  double t16024;
  double t16026;
  double t16039;
  double t16041;
  double t16048;
  double t16062;
  double t16064;
  double t16076;
  double t16087;
  double t16090;
  double t16105;
  double t16112;
  double t16121;
  double t16136;
  double t16151;
  double t16158;
  double t16160;
  double t16195;
  double t16197;
  double t16198;
  double t16175;
  double t16178;
  double t16186;
  double t16168;
  double t16169;
  double t16172;
  double t16027;
  double t16162;
  double t16163;
  double t16220;
  double t16225;
  double t16227;
  double t16436;
  double t16484;
  double t16487;
  double t16229;
  double t16234;
  double t16238;
  double t16245;
  double t16273;
  double t16313;
  double t16314;
  double t16336;
  double t4816;
  double t4817;
  double t4820;
  double t17048;
  double t17070;
  double t17279;
  double t17300;
  double t17306;
  double t4065;
  double t4115;
  double t4124;
  double t17310;
  double t17353;
  double t17356;
  double t17590;
  double t17592;
  double t17619;
  double t4874;
  double t4944;
  double t4965;
  double t18151;
  double t18160;
  double t18171;
  double t18172;
  double t18205;
  double t18209;
  double t18444;
  double t18445;
  double t18446;
  double t18169;
  double t18218;
  double t18237;
  double t18251;
  double t18471;
  double t18480;
  double t18494;
  double t18507;
  double t18519;
  double t5011;
  double t5026;
  double t5056;
  double t18779;
  double t18807;
  double t18808;
  double t18777;
  double t18811;
  double t18812;
  double t18843;
  double t18847;
  double t18901;
  double t18909;
  double t19045;
  double t18816;
  double t18848;
  double t18850;
  double t18898;
  double t19059;
  double t19078;
  double t19105;
  double t19107;
  double t19108;
  double t19176;
  double t19191;
  double t19197;
  double t19243;
  double t19393;
  double t19403;
  double t19488;
  double t19498;
  double t3269;
  double t3280;
  double t3285;
  double t3695;
  double t3856;
  double t3863;
  double t20603;
  double t20616;
  double t20627;
  double t20782;
  double t20783;
  double t20784;
  double t20790;
  double t20833;
  double t10632;
  double t10843;
  double t10844;
  double t21707;
  double t21723;
  double t21734;
  double t11239;
  double t11485;
  double t11664;
  double t11913;
  double t21876;
  double t21942;
  double t21972;
  double t12542;
  double t12853;
  double t12855;
  double t13070;
  double t22696;
  double t13187;
  double t13572;
  double t13573;
  double t22909;
  double t22912;
  double t13657;
  double t13688;
  double t13949;
  double t13977;
  double t22969;
  double t14069;
  double t14073;
  double t22973;
  double t22978;
  double t22982;
  double t14184;
  double t14225;
  double t14226;
  double t14454;
  double t14459;
  double t14529;
  double t15047;
  double t15094;
  double t15130;
  double t23601;
  double t23617;
  double t23654;
  double t23663;
  double t23698;
  double t15187;
  double t22298;
  double t15236;
  double t15311;
  double t15318;
  double t23963;
  double t15396;
  double t15410;
  double t15684;
  double t15763;
  double t15813;
  double t16578;
  double t16697;
  double t16727;
  double t24481;
  double t24483;
  double t24486;
  double t17280;
  double t17586;
  double t17867;
  double t17884;
  double t24501;
  double t24502;
  double t24503;
  double t18241;
  double t18629;
  double t18670;
  double t18883;
  double t24854;
  double t19171;
  double t19599;
  double t19603;
  double t25090;
  double t25124;
  double t19741;
  double t19742;
  double t19830;
  double t19831;
  double t25205;
  double t19993;
  double t20021;
  double t25221;
  double t25224;
  double t25238;
  double t20379;
  double t20439;
  double t20440;
  double t20527;
  double t20529;
  double t20594;
  double t20861;
  double t20910;
  double t20924;
  double t25508;
  double t25510;
  double t25564;
  double t25576;
  double t25587;
  double t21111;
  double t21147;
  double t21199;
  double t21247;
  double t25697;
  double t21425;
  double t21474;
  double t21581;
  double t21617;
  double t21629;
  double t22238;
  double t22289;
  double t22469;
  double t22471;
  double t26185;
  double t26186;
  double t22681;
  double t22706;
  double t22911;
  double t26313;
  double t23068;
  double t23087;
  double t23104;
  double t23126;
  double t26354;
  double t26357;
  double t26437;
  double t26454;
  double t26456;
  double t26493;
  double t23333;
  double t23337;
  double t23282;
  double t26219;
  double t26220;
  double t23609;
  double t23549;
  double t23554;
  double t24160;
  double t24173;
  double t24190;
  double t24196;
  double t26560;
  double t26568;
  double t26644;
  double t26645;
  double t24250;
  double t24417;
  double t24451;
  double t24527;
  double t24528;
  double t24559;
  double t24721;
  double t26952;
  double t26970;
  double t24843;
  double t24862;
  double t25116;
  double t27171;
  double t25304;
  double t25305;
  double t25397;
  double t25399;
  double t27218;
  double t27227;
  double t27293;
  double t27294;
  double t27297;
  double t27444;
  double t25450;
  double t25453;
  double t25440;
  double t27076;
  double t27084;
  double t25509;
  double t25483;
  double t25484;
  double t25764;
  double t25766;
  double t25893;
  double t25912;
  double t27700;
  double t27707;
  double t27746;
  double t27751;
  double t26031;
  double t26080;
  double t26099;
  double t27580;
  double t27581;
  double t27644;
  double t27909;
  double t27910;
  double t27927;
  double t27929;
  double t27704;
  double t27727;
  double t27739;
  double t26500;
  double t26503;
  double t26537;
  double t28059;
  double t28060;
  double t28075;
  double t28076;
  double t26564;
  double t26628;
  double t26631;
  t184 = Cos(var1[13]);
  t149 = Cos(var1[14]);
  t164 = Sin(var1[13]);
  t196 = Sin(var1[14]);
  t169 = t149*t164;
  t206 = -1.*t184*t196;
  t508 = t169 + t206;
  t128 = Cos(var1[4]);
  t901 = Cos(var1[5]);
  t1721 = Sin(var1[12]);
  t1110 = t184*t149;
  t1156 = t164*t196;
  t1411 = t1110 + t1156;
  t1800 = Sin(var1[5]);
  t688 = Sin(var1[4]);
  t59 = Cos(var1[12]);
  t2172 = -1.*t184*t149;
  t2175 = -1.*t164*t196;
  t2177 = t2172 + t2175;
  t1973 = -1.*t149*t164;
  t1976 = t184*t196;
  t1977 = t1973 + t1976;
  t1979 = t901*t1977;
  t1981 = t1721*t1411*t1800;
  t2167 = t1979 + t1981;
  t1580 = t901*t1411;
  t1876 = t1721*t508*t1800;
  t1901 = t1580 + t1876;
  t2661 = Cos(var1[10]);
  t2657 = Cos(var1[11]);
  t2659 = Sin(var1[10]);
  t2662 = Sin(var1[11]);
  t2660 = t2657*t2659;
  t2663 = -1.*t2661*t2662;
  t2682 = t2660 + t2663;
  t3096 = Sin(var1[9]);
  t2926 = t2661*t2657;
  t2960 = t2659*t2662;
  t3045 = t2926 + t2960;
  t2656 = Cos(var1[9]);
  t3514 = -1.*t2661*t2657;
  t3515 = -1.*t2659*t2662;
  t3600 = t3514 + t3515;
  t3291 = -1.*t2657*t2659;
  t3292 = t2661*t2662;
  t3295 = t3291 + t3292;
  t3296 = t901*t3295;
  t3437 = t3096*t3045*t1800;
  t3446 = t3296 + t3437;
  t3068 = t901*t3045;
  t3125 = t3096*t2682*t1800;
  t3216 = t3068 + t3125;
  t625 = t59*t128*t508;
  t1903 = -1.*t688*t1901;
  t1933 = t625 + t1903;
  t5151 = Sin(var1[3]);
  t5263 = Cos(var1[3]);
  t1935 = t901*t1721*t508;
  t1937 = -1.*t1411*t1800;
  t1942 = t1935 + t1937;
  t2387 = t59*t128*t1411;
  t2388 = -1.*t688*t2167;
  t2390 = t2387 + t2388;
  t2182 = t901*t508;
  t2183 = t1721*t2177*t1800;
  t2198 = t2182 + t2183;
  t2207 = t128*t1721;
  t2211 = t59*t688*t1800;
  t2212 = t2207 + t2211;
  t5403 = -1.*t901*t1721*t1411;
  t5404 = t1977*t1800;
  t5410 = t5403 + t5404;
  t2392 = t901*t1721*t1411;
  t2396 = -1.*t1977*t1800;
  t2397 = t2392 + t2396;
  t2433 = t901*t2177;
  t2442 = t1721*t1977*t1800;
  t2444 = t2433 + t2442;
  t5185 = -1.*t901*t1721*t508;
  t5191 = t1411*t1800;
  t5202 = t5185 + t5191;
  t2918 = t2656*t128*t2682;
  t3228 = -1.*t688*t3216;
  t3230 = t2918 + t3228;
  t3238 = t901*t3096*t2682;
  t3260 = -1.*t3045*t1800;
  t3261 = t3238 + t3260;
  t4288 = t2656*t128*t3045;
  t4324 = -1.*t688*t3446;
  t4453 = t4288 + t4324;
  t3698 = t901*t2682;
  t3699 = t3096*t3600*t1800;
  t3792 = t3698 + t3699;
  t3946 = t128*t3096;
  t3963 = t2656*t688*t1800;
  t3985 = t3946 + t3963;
  t6007 = -1.*t901*t3096*t3045;
  t6016 = t3295*t1800;
  t6017 = t6007 + t6016;
  t4523 = t901*t3096*t3045;
  t4533 = -1.*t3295*t1800;
  t4550 = t4523 + t4533;
  t4904 = t901*t3600;
  t4918 = t3096*t3295*t1800;
  t4938 = t4904 + t4918;
  t5635 = -1.*t901*t3096*t2682;
  t5642 = t3045*t1800;
  t5658 = t5635 + t5642;
  t5613 = t5263*t5202;
  t5620 = -1.*t5151*t1933;
  t5626 = t5613 + t5620;
  t5284 = -1.*t59*t508*t688;
  t5298 = -1.*t128*t1901;
  t5334 = t5284 + t5298;
  t5387 = -1.*t128*t1721*t508;
  t5391 = -1.*t59*t508*t688*t1800;
  t5396 = t5387 + t5391;
  t5423 = -1.*t901*t1721*t2177;
  t5428 = t508*t1800;
  t5429 = t5423 + t5428;
  t5443 = t59*t128*t2177;
  t5445 = -1.*t688*t2198;
  t5450 = t5443 + t5445;
  t5468 = -1.*t1721*t688;
  t5470 = t59*t128*t1800;
  t5472 = t5468 + t5470;
  t5506 = t59*t128;
  t5508 = -1.*t1721*t688*t1800;
  t5510 = t5506 + t5508;
  t5418 = t5263*t5410;
  t5420 = -1.*t5151*t2390;
  t5421 = t5418 + t5420;
  t5520 = -1.*t59*t1411*t688;
  t5524 = -1.*t128*t2167;
  t5527 = t5520 + t5524;
  t5539 = -1.*t128*t1721*t1411;
  t5540 = -1.*t59*t1411*t688*t1800;
  t5543 = t5539 + t5540;
  t5551 = -1.*t901*t1721*t1977;
  t5556 = t2177*t1800;
  t5561 = t5551 + t5556;
  t5564 = t59*t128*t1977;
  t5567 = -1.*t688*t2444;
  t5568 = t5564 + t5567;
  t7305 = t5263*t5658;
  t7306 = -1.*t5151*t3230;
  t7307 = t7305 + t7306;
  t5685 = -1.*t2656*t2682*t688;
  t5688 = -1.*t128*t3216;
  t5696 = t5685 + t5688;
  t5881 = -1.*t128*t3096*t2682;
  t5919 = -1.*t2656*t2682*t688*t1800;
  t5969 = t5881 + t5919;
  t6072 = -1.*t901*t3096*t3600;
  t6083 = t2682*t1800;
  t6215 = t6072 + t6083;
  t6452 = t2656*t128*t3600;
  t6643 = -1.*t688*t3792;
  t6675 = t6452 + t6643;
  t7043 = -1.*t3096*t688;
  t7102 = t2656*t128*t1800;
  t7108 = t7043 + t7102;
  t7151 = t2656*t128;
  t7162 = -1.*t3096*t688*t1800;
  t7170 = t7151 + t7162;
  t6019 = t5263*t6017;
  t6056 = -1.*t5151*t4453;
  t6065 = t6019 + t6056;
  t7233 = -1.*t2656*t3045*t688;
  t7239 = -1.*t128*t3446;
  t7240 = t7233 + t7239;
  t7269 = -1.*t128*t3096*t3045;
  t7276 = -1.*t2656*t3045*t688*t1800;
  t7280 = t7269 + t7276;
  t7286 = -1.*t901*t3096*t3295;
  t7291 = t3600*t1800;
  t7292 = t7286 + t7291;
  t7294 = t2656*t128*t3295;
  t7295 = -1.*t688*t4938;
  t7297 = t7294 + t7295;
  t1965 = t59*t1411*t688;
  t2168 = t128*t2167;
  t2170 = t1965 + t2168;
  t9620 = -0.0641*t149;
  t9623 = -0.28*t196;
  t9630 = t9620 + t9623;
  t9645 = -1.*t149;
  t9650 = 1. + t9645;
  t9651 = 0.075*t9650;
  t9653 = 0.355*t149;
  t9660 = -0.0641*t196;
  t9667 = t9651 + t9653 + t9660;
  t9613 = -0.325*t164;
  t9635 = t184*t9630;
  t9668 = t164*t9667;
  t9678 = t9613 + t9635 + t9668;
  t9609 = -0.068*t1721;
  t9703 = t59*t9678;
  t9742 = t9609 + t9703;
  t9793 = -1.*t184;
  t9796 = 1. + t9793;
  t9798 = 0.325*t9796;
  t9804 = -1.*t164*t9630;
  t9809 = t184*t9667;
  t9810 = t9798 + t9804 + t9809;
  t9816 = t901*t9810;
  t9817 = -1.*t59;
  t9821 = 1. + t9817;
  t9827 = -0.1575*t9821;
  t9856 = -0.2255*t59;
  t9861 = -1.*t1721*t9678;
  t9866 = t9827 + t9856 + t9861;
  t9879 = -1.*t9866*t1800;
  t9919 = t9816 + t9879;
  t10072 = t128*t9742;
  t10080 = -1.*t688*t9919;
  t10082 = t10072 + t10080;
  t10052 = t1721*t688;
  t10058 = -1.*t59*t128*t1800;
  t10059 = t10052 + t10058;
  t10008 = t9742*t688;
  t10035 = t128*t9919;
  t10036 = t10008 + t10035;
  t9784 = -1.*t9742*t688;
  t9923 = -1.*t128*t9919;
  t9951 = t9784 + t9923;
  t10274 = t901*t9866;
  t10278 = t9810*t1800;
  t10284 = t10274 + t10278;
  t10546 = -1.*t901*t9866;
  t10566 = -1.*t9810*t1800;
  t10582 = t10546 + t10566;
  t10291 = -1.*t59*t901*t10284;
  t10302 = -1.*t10059*t10036;
  t10313 = -1.*t2212*t10082;
  t10333 = t10291 + t10302 + t10313;
  t10402 = t10284*t5410;
  t10410 = t10036*t2170;
  t10431 = t10082*t2390;
  t10445 = t10402 + t10410 + t10431;
  t2403 = -1.*t1721*t1411*t688;
  t2404 = t59*t128*t1411*t1800;
  t2430 = t2403 + t2404;
  t11216 = 0.068*t1721;
  t11217 = -1.*t59*t9678;
  t11221 = t11216 + t11217;
  t11240 = -0.068*t59;
  t11396 = t11240 + t9861;
  t2362 = t59*t688;
  t2363 = t128*t1721*t1800;
  t2381 = t2362 + t2363;
  t11446 = t11396*t688;
  t11470 = -1.*t128*t11221*t1800;
  t11473 = t11446 + t11470;
  t11494 = t128*t11396;
  t11504 = t11221*t688*t1800;
  t11590 = t11494 + t11504;
  t2432 = t59*t1977*t688;
  t2445 = t128*t2444;
  t2550 = t2432 + t2445;
  t12511 = -0.325*t184;
  t12512 = t12511 + t9804 + t9809;
  t12518 = 0.325*t164;
  t12519 = -1.*t184*t9630;
  t12522 = -1.*t164*t9667;
  t12523 = t12518 + t12519 + t12522;
  t12572 = t901*t12523;
  t12603 = t1721*t12512*t1800;
  t12678 = t12572 + t12603;
  t12516 = -1.*t901*t1721*t12512;
  t12529 = t12523*t1800;
  t12534 = t12516 + t12529;
  t12566 = t59*t12512*t688;
  t12693 = t128*t12678;
  t12704 = t12566 + t12693;
  t12708 = t59*t128*t12512;
  t12711 = -1.*t688*t12678;
  t12728 = t12708 + t12711;
  t2651 = t59*t508*t688;
  t2653 = t128*t1901;
  t2654 = t2651 + t2653;
  t12945 = -0.28*t149;
  t12946 = 0.0641*t196;
  t12948 = t12945 + t12946;
  t12943 = t164*t9630;
  t12951 = t184*t12948;
  t12952 = t12943 + t12951;
  t12958 = -1.*t164*t12948;
  t12959 = t9635 + t12958;
  t13099 = t901*t12959;
  t13100 = t1721*t12952*t1800;
  t13111 = t13099 + t13100;
  t12953 = -1.*t901*t1721*t12952;
  t12964 = t12959*t1800;
  t12974 = t12953 + t12964;
  t13094 = t59*t12952*t688;
  t13117 = t128*t13111;
  t13136 = t13094 + t13117;
  t13161 = t59*t128*t12952;
  t13170 = -1.*t688*t13111;
  t13175 = t13161 + t13170;
  t13198 = t10284*t5202;
  t13256 = t10036*t2654;
  t13265 = t10082*t1933;
  t13419 = t13198 + t13256 + t13265;
  t13533 = -1.*t10284*t5410;
  t13539 = -1.*t10036*t2170;
  t13547 = -1.*t10082*t2390;
  t13555 = t13533 + t13539 + t13547;
  t1947 = -1.*t1721*t508*t688;
  t1948 = t59*t128*t508*t1800;
  t1955 = t1947 + t1948;
  t2181 = t59*t2177*t688;
  t2201 = t128*t2198;
  t2205 = t2181 + t2201;
  t14544 = -1.*t10284*t5202;
  t14565 = -1.*t10036*t2654;
  t14593 = -1.*t10082*t1933;
  t14895 = t59*t901*t10284;
  t14903 = t10059*t10036;
  t14933 = t2212*t10082;
  t14939 = t14895 + t14903 + t14933;
  t15015 = t14544 + t14565 + t14593;
  t11187 = Power(t901,2);
  t3288 = t2656*t3045*t688;
  t3451 = t128*t3446;
  t3455 = t3288 + t3451;
  t15936 = -0.0641*t2657;
  t15942 = -0.28*t2662;
  t15972 = t15936 + t15942;
  t15983 = -1.*t2657;
  t15987 = 1. + t15983;
  t15994 = -0.575*t15987;
  t15998 = -0.295*t2657;
  t16005 = -0.0641*t2662;
  t16006 = t15994 + t15998 + t16005;
  t15920 = 0.325*t2659;
  t15980 = t2661*t15972;
  t16007 = t2659*t16006;
  t16022 = t15920 + t15980 + t16007;
  t15902 = 0.068*t3096;
  t16024 = t2656*t16022;
  t16026 = t15902 + t16024;
  t16039 = -1.*t2661;
  t16041 = 1. + t16039;
  t16048 = -0.325*t16041;
  t16062 = -1.*t2659*t15972;
  t16064 = t2661*t16006;
  t16076 = t16048 + t16062 + t16064;
  t16087 = t901*t16076;
  t16090 = -1.*t2656;
  t16105 = 1. + t16090;
  t16112 = 0.1575*t16105;
  t16121 = 0.2255*t2656;
  t16136 = -1.*t3096*t16022;
  t16151 = t16112 + t16121 + t16136;
  t16158 = -1.*t16151*t1800;
  t16160 = t16087 + t16158;
  t16195 = t128*t16026;
  t16197 = -1.*t688*t16160;
  t16198 = t16195 + t16197;
  t16175 = t3096*t688;
  t16178 = -1.*t2656*t128*t1800;
  t16186 = t16175 + t16178;
  t16168 = t16026*t688;
  t16169 = t128*t16160;
  t16172 = t16168 + t16169;
  t16027 = -1.*t16026*t688;
  t16162 = -1.*t128*t16160;
  t16163 = t16027 + t16162;
  t16220 = t901*t16151;
  t16225 = t16076*t1800;
  t16227 = t16220 + t16225;
  t16436 = -1.*t901*t16151;
  t16484 = -1.*t16076*t1800;
  t16487 = t16436 + t16484;
  t16229 = -1.*t2656*t901*t16227;
  t16234 = -1.*t16186*t16172;
  t16238 = -1.*t3985*t16198;
  t16245 = t16229 + t16234 + t16238;
  t16273 = t16227*t6017;
  t16313 = t16172*t3455;
  t16314 = t16198*t4453;
  t16336 = t16273 + t16313 + t16314;
  t4816 = -1.*t3096*t3045*t688;
  t4817 = t2656*t128*t3045*t1800;
  t4820 = t4816 + t4817;
  t17048 = -0.068*t3096;
  t17070 = -1.*t2656*t16022;
  t17279 = t17048 + t17070;
  t17300 = 0.068*t2656;
  t17306 = t17300 + t16136;
  t4065 = t2656*t688;
  t4115 = t128*t3096*t1800;
  t4124 = t4065 + t4115;
  t17310 = t17306*t688;
  t17353 = -1.*t128*t17279*t1800;
  t17356 = t17310 + t17353;
  t17590 = t128*t17306;
  t17592 = t17279*t688*t1800;
  t17619 = t17590 + t17592;
  t4874 = t2656*t3295*t688;
  t4944 = t128*t4938;
  t4965 = t4874 + t4944;
  t18151 = 0.325*t2661;
  t18160 = t18151 + t16062 + t16064;
  t18171 = -0.325*t2659;
  t18172 = -1.*t2661*t15972;
  t18205 = -1.*t2659*t16006;
  t18209 = t18171 + t18172 + t18205;
  t18444 = t901*t18209;
  t18445 = t3096*t18160*t1800;
  t18446 = t18444 + t18445;
  t18169 = -1.*t901*t3096*t18160;
  t18218 = t18209*t1800;
  t18237 = t18169 + t18218;
  t18251 = t2656*t18160*t688;
  t18471 = t128*t18446;
  t18480 = t18251 + t18471;
  t18494 = t2656*t128*t18160;
  t18507 = -1.*t688*t18446;
  t18519 = t18494 + t18507;
  t5011 = t2656*t2682*t688;
  t5026 = t128*t3216;
  t5056 = t5011 + t5026;
  t18779 = -0.28*t2657;
  t18807 = 0.0641*t2662;
  t18808 = t18779 + t18807;
  t18777 = t2659*t15972;
  t18811 = t2661*t18808;
  t18812 = t18777 + t18811;
  t18843 = -1.*t2659*t18808;
  t18847 = t15980 + t18843;
  t18901 = t901*t18847;
  t18909 = t3096*t18812*t1800;
  t19045 = t18901 + t18909;
  t18816 = -1.*t901*t3096*t18812;
  t18848 = t18847*t1800;
  t18850 = t18816 + t18848;
  t18898 = t2656*t18812*t688;
  t19059 = t128*t19045;
  t19078 = t18898 + t19059;
  t19105 = t2656*t128*t18812;
  t19107 = -1.*t688*t19045;
  t19108 = t19105 + t19107;
  t19176 = t16227*t5658;
  t19191 = t16172*t5056;
  t19197 = t16198*t3230;
  t19243 = t19176 + t19191 + t19197;
  t19393 = -1.*t16227*t6017;
  t19403 = -1.*t16172*t3455;
  t19488 = -1.*t16198*t4453;
  t19498 = t19393 + t19403 + t19488;
  t3269 = -1.*t3096*t2682*t688;
  t3280 = t2656*t128*t2682*t1800;
  t3285 = t3269 + t3280;
  t3695 = t2656*t3600*t688;
  t3856 = t128*t3792;
  t3863 = t3695 + t3856;
  t20603 = -1.*t16227*t5658;
  t20616 = -1.*t16172*t5056;
  t20627 = -1.*t16198*t3230;
  t20782 = t2656*t901*t16227;
  t20783 = t16186*t16172;
  t20784 = t3985*t16198;
  t20790 = t20782 + t20783 + t20784;
  t20833 = t20603 + t20616 + t20627;
  t10632 = t59*t1800*t10284;
  t10843 = t9919*t5410;
  t10844 = t10284*t2167;
  t21707 = -1.*t1721*t9742;
  t21723 = t59*t1800*t9919;
  t21734 = t21707 + t21723 + t10291;
  t11239 = -1.*t59*t11187*t11221;
  t11485 = t901*t1721*t10284;
  t11664 = -1.*t59*t901*t1411*t10284;
  t11913 = t901*t11221*t5410;
  t21876 = t59*t9742*t1411;
  t21942 = t9919*t2167;
  t21972 = t21876 + t10402 + t21942;
  t12542 = -1.*t59*t901*t12534;
  t12853 = t12534*t5410;
  t12855 = t10284*t5561;
  t13070 = -1.*t59*t901*t12974;
  t22696 = Power(t59,2);
  t13187 = t12974*t5410;
  t13572 = t10284*t1901;
  t13573 = t9919*t5202;
  t22909 = t59*t9742*t508;
  t22912 = t9919*t1901;
  t13657 = -1.*t9919*t5410;
  t13688 = -1.*t10284*t2167;
  t13949 = -1.*t59*t901*t508*t10284;
  t13977 = t901*t11221*t5202;
  t22969 = t22909 + t22912 + t13198;
  t14069 = t59*t901*t1411*t10284;
  t14073 = -1.*t901*t11221*t5410;
  t22973 = -1.*t59*t9742*t1411;
  t22978 = -1.*t9919*t2167;
  t22982 = t22973 + t13533 + t22978;
  t14184 = t12534*t5202;
  t14225 = -1.*t12534*t5410;
  t14226 = -1.*t10284*t5561;
  t14454 = t10284*t5429;
  t14459 = t12974*t5202;
  t14529 = -1.*t12974*t5410;
  t15047 = -1.*t59*t1800*t10284;
  t15094 = -1.*t10284*t1901;
  t15130 = -1.*t9919*t5202;
  t23601 = -1.*t59*t9742*t508;
  t23617 = -1.*t9919*t1901;
  t23654 = t1721*t9742;
  t23663 = -1.*t59*t1800*t9919;
  t23698 = t23654 + t23663 + t14895;
  t15187 = t59*t11187*t11221;
  t22298 = Power(t1800,2);
  t15236 = -1.*t901*t1721*t10284;
  t15311 = t59*t901*t508*t10284;
  t15318 = -1.*t901*t11221*t5202;
  t23963 = t23601 + t23617 + t14544;
  t15396 = t59*t901*t12534;
  t15410 = -1.*t12534*t5202;
  t15684 = t59*t901*t12974;
  t15763 = -1.*t10284*t5429;
  t15813 = -1.*t12974*t5202;
  t16578 = t2656*t1800*t16227;
  t16697 = t16160*t6017;
  t16727 = t16227*t3446;
  t24481 = -1.*t3096*t16026;
  t24483 = t2656*t1800*t16160;
  t24486 = t24481 + t24483 + t16229;
  t17280 = -1.*t2656*t11187*t17279;
  t17586 = t901*t3096*t16227;
  t17867 = -1.*t2656*t901*t3045*t16227;
  t17884 = t901*t17279*t6017;
  t24501 = t2656*t16026*t3045;
  t24502 = t16160*t3446;
  t24503 = t24501 + t16273 + t24502;
  t18241 = -1.*t2656*t901*t18237;
  t18629 = t18237*t6017;
  t18670 = t16227*t7292;
  t18883 = -1.*t2656*t901*t18850;
  t24854 = Power(t2656,2);
  t19171 = t18850*t6017;
  t19599 = t16227*t3216;
  t19603 = t16160*t5658;
  t25090 = t2656*t16026*t2682;
  t25124 = t16160*t3216;
  t19741 = -1.*t16160*t6017;
  t19742 = -1.*t16227*t3446;
  t19830 = -1.*t2656*t901*t2682*t16227;
  t19831 = t901*t17279*t5658;
  t25205 = t25090 + t25124 + t19176;
  t19993 = t2656*t901*t3045*t16227;
  t20021 = -1.*t901*t17279*t6017;
  t25221 = -1.*t2656*t16026*t3045;
  t25224 = -1.*t16160*t3446;
  t25238 = t25221 + t19393 + t25224;
  t20379 = t18237*t5658;
  t20439 = -1.*t18237*t6017;
  t20440 = -1.*t16227*t7292;
  t20527 = t16227*t6215;
  t20529 = t18850*t5658;
  t20594 = -1.*t18850*t6017;
  t20861 = -1.*t2656*t1800*t16227;
  t20910 = -1.*t16227*t3216;
  t20924 = -1.*t16160*t5658;
  t25508 = -1.*t2656*t16026*t2682;
  t25510 = -1.*t16160*t3216;
  t25564 = t3096*t16026;
  t25576 = -1.*t2656*t1800*t16160;
  t25587 = t25564 + t25576 + t20782;
  t21111 = t2656*t11187*t17279;
  t21147 = -1.*t901*t3096*t16227;
  t21199 = t2656*t901*t2682*t16227;
  t21247 = -1.*t901*t17279*t5658;
  t25697 = t25508 + t25510 + t20603;
  t21425 = t2656*t901*t18237;
  t21474 = -1.*t18237*t5658;
  t21581 = t2656*t901*t18850;
  t21617 = -1.*t16227*t6215;
  t21629 = -1.*t18850*t5658;
  t22238 = -1.*t59*t9742;
  t22289 = -1.*t1721*t11396;
  t22469 = -1.*t1721*t9742*t1411;
  t22471 = t59*t11396*t1411;
  t26185 = -1.*t59*t9866;
  t26186 = t21707 + t26185;
  t22681 = t59*t9742*t1977;
  t22706 = t22696*t12512*t1411;
  t22911 = t22696*t12952*t1411;
  t26313 = Power(t1721,2);
  t23068 = -1.*t1721*t9742*t508;
  t23087 = t59*t11396*t508;
  t23104 = t1721*t9742*t1411;
  t23126 = -1.*t59*t11396*t1411;
  t26354 = -1.*t1721*t9866*t508;
  t26357 = t9810*t1411;
  t26437 = -1.*t9810*t1977;
  t26454 = t1721*t9866*t1411;
  t26456 = t26437 + t22973 + t26454;
  t26493 = t22909 + t26354 + t26357;
  t23333 = -1.*t59*t9742*t1977;
  t23337 = -1.*t22696*t12512*t1411;
  t23282 = t22696*t12512*t508;
  t26219 = t9810*t1977;
  t26220 = -1.*t1721*t9866*t1411;
  t23609 = -1.*t22696*t12952*t1411;
  t23549 = t22696*t12952*t508;
  t23554 = t59*t9742*t2177;
  t24160 = t59*t9742;
  t24173 = t1721*t11396;
  t24190 = t1721*t9742*t508;
  t24196 = -1.*t59*t11396*t508;
  t26560 = t1721*t9866*t508;
  t26568 = -1.*t9810*t1411;
  t26644 = t59*t9866;
  t26645 = t23654 + t26644;
  t24250 = -1.*t22696*t12512*t508;
  t24417 = -1.*t22696*t12952*t508;
  t24451 = -1.*t59*t9742*t2177;
  t24527 = -1.*t2656*t16026;
  t24528 = -1.*t3096*t17306;
  t24559 = -1.*t3096*t16026*t3045;
  t24721 = t2656*t17306*t3045;
  t26952 = -1.*t2656*t16151;
  t26970 = t24481 + t26952;
  t24843 = t2656*t16026*t3295;
  t24862 = t24854*t18160*t3045;
  t25116 = t24854*t18812*t3045;
  t27171 = Power(t3096,2);
  t25304 = -1.*t3096*t16026*t2682;
  t25305 = t2656*t17306*t2682;
  t25397 = t3096*t16026*t3045;
  t25399 = -1.*t2656*t17306*t3045;
  t27218 = -1.*t3096*t16151*t2682;
  t27227 = t16076*t3045;
  t27293 = -1.*t16076*t3295;
  t27294 = t3096*t16151*t3045;
  t27297 = t27293 + t25221 + t27294;
  t27444 = t25090 + t27218 + t27227;
  t25450 = -1.*t2656*t16026*t3295;
  t25453 = -1.*t24854*t18160*t3045;
  t25440 = t24854*t18160*t2682;
  t27076 = t16076*t3295;
  t27084 = -1.*t3096*t16151*t3045;
  t25509 = -1.*t24854*t18812*t3045;
  t25483 = t24854*t18812*t2682;
  t25484 = t2656*t16026*t3600;
  t25764 = t2656*t16026;
  t25766 = t3096*t17306;
  t25893 = t3096*t16026*t2682;
  t25912 = -1.*t2656*t17306*t2682;
  t27700 = t3096*t16151*t2682;
  t27707 = -1.*t16076*t3045;
  t27746 = t2656*t16151;
  t27751 = t25564 + t27746;
  t26031 = -1.*t24854*t18160*t2682;
  t26080 = -1.*t24854*t18812*t2682;
  t26099 = -1.*t2656*t16026*t3600;
  t27580 = -1.*t18209*t3295;
  t27581 = -1.*t16076*t3600;
  t27644 = t18209*t3045;
  t27909 = t16022*t2682;
  t27910 = t27909 + t27227;
  t27927 = -1.*t16022*t3045;
  t27929 = t27293 + t27927;
  t27704 = -1.*t18847*t3295;
  t27727 = t16076*t2682;
  t27739 = t18847*t3045;
  t26500 = -1.*t12523*t1977;
  t26503 = -1.*t9810*t2177;
  t26537 = t12523*t1411;
  t28059 = t9678*t508;
  t28060 = t28059 + t26357;
  t28075 = -1.*t9678*t1411;
  t28076 = t26437 + t28075;
  t26564 = -1.*t12959*t1977;
  t26628 = t9810*t508;
  t26631 = t12959*t1411;
  p_output1[0]=t1933;
  p_output1[1]=t128*t1942;
  p_output1[2]=t1955;
  p_output1[3]=t2170;
  p_output1[4]=t2205;
  p_output1[5]=t2212;
  p_output1[6]=-1.*t128*t59*t901;
  p_output1[7]=t2381;
  p_output1[8]=t2390;
  p_output1[9]=t128*t2397;
  p_output1[10]=t2430;
  p_output1[11]=t2550;
  p_output1[12]=t2654;
  p_output1[13]=t3230;
  p_output1[14]=t128*t3261;
  p_output1[15]=t3285;
  p_output1[16]=t3455;
  p_output1[17]=t3863;
  p_output1[18]=t3985;
  p_output1[19]=-1.*t128*t2656*t901;
  p_output1[20]=t4124;
  p_output1[21]=t4453;
  p_output1[22]=t128*t4550;
  p_output1[23]=t4820;
  p_output1[24]=t4965;
  p_output1[25]=t5056;
  p_output1[26]=-1.*t5151*t5202 - 1.*t1933*t5263;
  p_output1[27]=-1.*t5151*t5334;
  p_output1[28]=t1901*t5263 + t1942*t5151*t688;
  p_output1[29]=-1.*t5151*t5396 - 1.*t508*t5263*t59*t901;
  p_output1[30]=t5421;
  p_output1[31]=t5263*t5429 - 1.*t5151*t5450;
  p_output1[32]=-1.*t2212*t5263 - 1.*t5151*t59*t901;
  p_output1[33]=-1.*t5151*t5472;
  p_output1[34]=-1.*t1800*t5263*t59 - 1.*t5151*t59*t688*t901;
  p_output1[35]=-1.*t5151*t5510 - 1.*t1721*t5263*t901;
  p_output1[36]=-1.*t2390*t5263 - 1.*t5151*t5410;
  p_output1[37]=-1.*t5151*t5527;
  p_output1[38]=t2167*t5263 + t2397*t5151*t688;
  p_output1[39]=-1.*t5151*t5543 - 1.*t1411*t5263*t59*t901;
  p_output1[40]=t5263*t5561 - 1.*t5151*t5568;
  p_output1[41]=t5626;
  p_output1[42]=-1.*t3230*t5263 - 1.*t5151*t5658;
  p_output1[43]=-1.*t5151*t5696;
  p_output1[44]=t3216*t5263 + t3261*t5151*t688;
  p_output1[45]=-1.*t5151*t5969 - 1.*t2656*t2682*t5263*t901;
  p_output1[46]=t6065;
  p_output1[47]=t5263*t6215 - 1.*t5151*t6675;
  p_output1[48]=-1.*t3985*t5263 - 1.*t2656*t5151*t901;
  p_output1[49]=-1.*t5151*t7108;
  p_output1[50]=-1.*t1800*t2656*t5263 - 1.*t2656*t5151*t688*t901;
  p_output1[51]=-1.*t5151*t7170 - 1.*t3096*t5263*t901;
  p_output1[52]=-1.*t4453*t5263 - 1.*t5151*t6017;
  p_output1[53]=-1.*t5151*t7240;
  p_output1[54]=t3446*t5263 + t4550*t5151*t688;
  p_output1[55]=-1.*t5151*t7280 - 1.*t2656*t3045*t5263*t901;
  p_output1[56]=t5263*t7292 - 1.*t5151*t7297;
  p_output1[57]=t7307;
  p_output1[58]=t5626;
  p_output1[59]=t5263*t5334;
  p_output1[60]=t1901*t5151 - 1.*t1942*t5263*t688;
  p_output1[61]=t5263*t5396 - 1.*t508*t5151*t59*t901;
  p_output1[62]=t2390*t5263 + t5151*t5410;
  p_output1[63]=t5151*t5429 + t5263*t5450;
  p_output1[64]=-1.*t2212*t5151 + t5263*t59*t901;
  p_output1[65]=t5263*t5472;
  p_output1[66]=-1.*t1800*t5151*t59 + t5263*t59*t688*t901;
  p_output1[67]=t5263*t5510 - 1.*t1721*t5151*t901;
  p_output1[68]=t5421;
  p_output1[69]=t5263*t5527;
  p_output1[70]=t2167*t5151 - 1.*t2397*t5263*t688;
  p_output1[71]=t5263*t5543 - 1.*t1411*t5151*t59*t901;
  p_output1[72]=t5151*t5561 + t5263*t5568;
  p_output1[73]=t5151*t5202 + t1933*t5263;
  p_output1[74]=t7307;
  p_output1[75]=t5263*t5696;
  p_output1[76]=t3216*t5151 - 1.*t3261*t5263*t688;
  p_output1[77]=t5263*t5969 - 1.*t2656*t2682*t5151*t901;
  p_output1[78]=t4453*t5263 + t5151*t6017;
  p_output1[79]=t5151*t6215 + t5263*t6675;
  p_output1[80]=-1.*t3985*t5151 + t2656*t5263*t901;
  p_output1[81]=t5263*t7108;
  p_output1[82]=-1.*t1800*t2656*t5151 + t2656*t5263*t688*t901;
  p_output1[83]=t5263*t7170 - 1.*t3096*t5151*t901;
  p_output1[84]=t6065;
  p_output1[85]=t5263*t7240;
  p_output1[86]=t3446*t5151 - 1.*t4550*t5263*t688;
  p_output1[87]=t5263*t7280 - 1.*t2656*t3045*t5151*t901;
  p_output1[88]=t5151*t7292 + t5263*t7297;
  p_output1[89]=t3230*t5263 + t5151*t5658;
  p_output1[90]=t10445*t2212 + t10333*t2390 + t2170*(-1.*t10059*t10082 - 1.*t10036*t2212 - 1.*t10082*t5472 - 1.*t2212*t9951) + t10059*(t10082*t2170 + t10036*t2390 + t10082*t5527 + t2390*t9951);
  p_output1[91]=t10333*t128*t2397 + t10059*(t10843 + t10844 + t10582*t128*t2170 + t10036*t128*t2397 - 1.*t10582*t2390*t688 - 1.*t10082*t2397*t688) - 1.*t10445*t128*t59*t901 + t2170*(t10632 - 1.*t10059*t10582*t128 + t10582*t2212*t688 + t10036*t128*t59*t901 - 1.*t10082*t59*t688*t901 - 1.*t59*t901*t9919);
  p_output1[92]=t10445*t2381 + t10333*t2430 + t2170*(t11239 - 1.*t10059*t11473 + t11485 - 1.*t11590*t2212 - 1.*t10036*t2381 - 1.*t10082*t5510) + t10059*(t11664 + t11913 + t11473*t2170 + t11590*t2390 + t10036*t2430 + t10082*t5543);
  p_output1[93]=t2170*(t12542 - 1.*t10059*t12704 - 1.*t12728*t2212) + t10333*t2550 + t10059*(t12853 + t12855 + t12704*t2170 + t12728*t2390 + t10036*t2550 + t10082*t5568);
  p_output1[94]=t2170*(t13070 - 1.*t10059*t13136 - 1.*t13175*t2212) + t10059*(t13187 + t13198 + t13256 + t13265 + t13136*t2170 + t13175*t2390) + t10333*t2654;
  p_output1[95]=t13555*t1933 + t13419*t2390 + t2170*(t10036*t1933 + t10082*t2654 + t10082*t5334 + t1933*t9951) + t2654*(-1.*t10082*t2170 - 1.*t10036*t2390 - 1.*t10082*t5527 - 1.*t2390*t9951);
  p_output1[96]=t128*t13555*t1942 + t128*t13419*t2397 + t2170*(t13572 + t13573 + t10036*t128*t1942 + t10582*t128*t2654 - 1.*t10582*t1933*t688 - 1.*t10082*t1942*t688) + t2654*(t13657 + t13688 - 1.*t10582*t128*t2170 - 1.*t10036*t128*t2397 + t10582*t2390*t688 + t10082*t2397*t688);
  p_output1[97]=t13555*t1955 + t13419*t2430 + t2170*(t13949 + t13977 + t11590*t1933 + t10036*t1955 + t11473*t2654 + t10082*t5396) + t2654*(t14069 + t14073 - 1.*t11473*t2170 - 1.*t11590*t2390 - 1.*t10036*t2430 - 1.*t10082*t5543);
  p_output1[98]=t13555*t2170 + t13419*t2550 + t2170*(t10402 + t10410 + t10431 + t14184 + t12728*t1933 + t12704*t2654) + t2654*(t14225 + t14226 - 1.*t12704*t2170 - 1.*t12728*t2390 - 1.*t10036*t2550 - 1.*t10082*t5568);
  p_output1[99]=t13555*t2205 + t13419*t2654 + (t14529 + t14544 + t14565 + t14593 - 1.*t13136*t2170 - 1.*t13175*t2390)*t2654 + t2170*(t14454 + t14459 + t13175*t1933 + t10036*t2205 + t13136*t2654 + t10082*t5450);
  p_output1[100]=t14939*t1933 + t15015*t2212 + t10059*(-1.*t10036*t1933 - 1.*t10082*t2654 - 1.*t10082*t5334 - 1.*t1933*t9951) + t2654*(t10059*t10082 + t10036*t2212 + t10082*t5472 + t2212*t9951);
  p_output1[101]=t128*t14939*t1942 + t10059*(t15094 + t15130 - 1.*t10036*t128*t1942 - 1.*t10582*t128*t2654 + t10582*t1933*t688 + t10082*t1942*t688) - 1.*t128*t15015*t59*t901 + t2654*(t10059*t10582*t128 + t15047 - 1.*t10582*t2212*t688 - 1.*t10036*t128*t59*t901 + t10082*t59*t688*t901 + t59*t901*t9919);
  p_output1[102]=t14939*t1955 + t15015*t2381 + t10059*(t15311 + t15318 - 1.*t11590*t1933 - 1.*t10036*t1955 - 1.*t11473*t2654 - 1.*t10082*t5396) + t2654*(t10059*t11473 + t15187 + t15236 + t11590*t2212 + t10036*t2381 + t10082*t5510);
  p_output1[103]=t14939*t2170 + (t10059*t12704 + t15396 + t12728*t2212)*t2654 + t10059*(t13533 + t13539 + t13547 + t15410 - 1.*t12728*t1933 - 1.*t12704*t2654);
  p_output1[104]=t14939*t2205 + (t10059*t13136 + t15684 + t13175*t2212)*t2654 + t10059*(t15763 + t15813 - 1.*t13175*t1933 - 1.*t10036*t2205 - 1.*t13136*t2654 - 1.*t10082*t5450);
  p_output1[105]=t16336*t3985 + t16245*t4453 + t3455*(-1.*t16186*t16198 - 1.*t16163*t3985 - 1.*t16172*t3985 - 1.*t16198*t7108) + t16186*(t16198*t3455 + t16163*t4453 + t16172*t4453 + t16198*t7240);
  p_output1[106]=t128*t16245*t4550 + t16186*(t16697 + t16727 + t128*t16487*t3455 + t128*t16172*t4550 - 1.*t16487*t4453*t688 - 1.*t16198*t4550*t688) - 1.*t128*t16336*t2656*t901 + t3455*(-1.*t128*t16186*t16487 + t16578 + t16487*t3985*t688 - 1.*t16160*t2656*t901 + t128*t16172*t2656*t901 - 1.*t16198*t2656*t688*t901);
  p_output1[107]=t16336*t4124 + t16245*t4820 + t3455*(t17280 - 1.*t16186*t17356 + t17586 - 1.*t17619*t3985 - 1.*t16172*t4124 - 1.*t16198*t7170) + t16186*(t17867 + t17884 + t17356*t3455 + t17619*t4453 + t16172*t4820 + t16198*t7280);
  p_output1[108]=t3455*(t18241 - 1.*t16186*t18480 - 1.*t18519*t3985) + t16245*t4965 + t16186*(t18629 + t18670 + t18480*t3455 + t18519*t4453 + t16172*t4965 + t16198*t7297);
  p_output1[109]=t3455*(t18883 - 1.*t16186*t19078 - 1.*t19108*t3985) + t16186*(t19171 + t19176 + t19191 + t19197 + t19078*t3455 + t19108*t4453) + t16245*t5056;
  p_output1[110]=t19498*t3230 + t19243*t4453 + t3455*(t16163*t3230 + t16172*t3230 + t16198*t5056 + t16198*t5696) + t5056*(-1.*t16198*t3455 - 1.*t16163*t4453 - 1.*t16172*t4453 - 1.*t16198*t7240);
  p_output1[111]=t128*t19498*t3261 + t128*t19243*t4550 + t3455*(t19599 + t19603 + t128*t16172*t3261 + t128*t16487*t5056 - 1.*t16487*t3230*t688 - 1.*t16198*t3261*t688) + t5056*(t19741 + t19742 - 1.*t128*t16487*t3455 - 1.*t128*t16172*t4550 + t16487*t4453*t688 + t16198*t4550*t688);
  p_output1[112]=t19498*t3285 + t19243*t4820 + t3455*(t19830 + t19831 + t17619*t3230 + t16172*t3285 + t17356*t5056 + t16198*t5969) + t5056*(t19993 + t20021 - 1.*t17356*t3455 - 1.*t17619*t4453 - 1.*t16172*t4820 - 1.*t16198*t7280);
  p_output1[113]=t19498*t3455 + t19243*t4965 + t3455*(t16273 + t16313 + t16314 + t20379 + t18519*t3230 + t18480*t5056) + t5056*(t20439 + t20440 - 1.*t18480*t3455 - 1.*t18519*t4453 - 1.*t16172*t4965 - 1.*t16198*t7297);
  p_output1[114]=t19498*t3863 + t19243*t5056 + (t20594 + t20603 + t20616 + t20627 - 1.*t19078*t3455 - 1.*t19108*t4453)*t5056 + t3455*(t20527 + t20529 + t19108*t3230 + t16172*t3863 + t19078*t5056 + t16198*t6675);
  p_output1[115]=t20790*t3230 + t20833*t3985 + t16186*(-1.*t16163*t3230 - 1.*t16172*t3230 - 1.*t16198*t5056 - 1.*t16198*t5696) + t5056*(t16186*t16198 + t16163*t3985 + t16172*t3985 + t16198*t7108);
  p_output1[116]=t128*t20790*t3261 + t16186*(t20910 + t20924 - 1.*t128*t16172*t3261 - 1.*t128*t16487*t5056 + t16487*t3230*t688 + t16198*t3261*t688) - 1.*t128*t20833*t2656*t901 + t5056*(t128*t16186*t16487 + t20861 - 1.*t16487*t3985*t688 + t16160*t2656*t901 - 1.*t128*t16172*t2656*t901 + t16198*t2656*t688*t901);
  p_output1[117]=t20790*t3285 + t20833*t4124 + t16186*(t21199 + t21247 - 1.*t17619*t3230 - 1.*t16172*t3285 - 1.*t17356*t5056 - 1.*t16198*t5969) + t5056*(t16186*t17356 + t21111 + t21147 + t17619*t3985 + t16172*t4124 + t16198*t7170);
  p_output1[118]=t20790*t3455 + (t16186*t18480 + t21425 + t18519*t3985)*t5056 + t16186*(t19393 + t19403 + t19488 + t21474 - 1.*t18519*t3230 - 1.*t18480*t5056);
  p_output1[119]=t20790*t3863 + (t16186*t19078 + t21581 + t19108*t3985)*t5056 + t16186*(t21617 + t21629 - 1.*t19108*t3230 - 1.*t16172*t3863 - 1.*t19078*t5056 - 1.*t16198*t6675);
  p_output1[120]=t2167*t21734 - 1.*t1800*t21972*t59 + t5410*(t10632 + t10582*t1800*t59) + t59*t901*(t10843 + t10844 + t10582*t2167 + t2397*t9919);
  p_output1[121]=-1.*t1721*t21972*t901 - 1.*t1411*t21734*t59*t901 + t5410*(t11239 + t11485 + t22238 + t22289 - 1.*t11221*t22298*t59 - 1.*t1721*t1800*t9919) + t59*t901*(t11664 + t11913 - 1.*t11221*t1800*t2167 + t22469 + t22471 + t1411*t1800*t59*t9919);
  p_output1[122]=t21734*t5561 + t5410*(t12542 - 1.*t12512*t1721*t59 + t12678*t1800*t59) + t59*t901*(t12853 + t12855 + t12678*t2167 + t22681 + t22706 + t2444*t9919);
  p_output1[123]=t21734*t5202 + t5410*(t13070 - 1.*t12952*t1721*t59 + t13111*t1800*t59) + (t13187 + t13198 + t13111*t2167 + t22909 + t22911 + t22912)*t59*t901;
  p_output1[124]=t2167*t22969 + t1901*t22982 + t5410*(t13572 + t13573 + t10582*t1901 + t1942*t9919) + t5202*(t13657 + t13688 - 1.*t10582*t2167 - 1.*t2397*t9919);
  p_output1[125]=-1.*t1411*t22969*t59*t901 - 1.*t22982*t508*t59*t901 + t5202*(t14069 + t14073 + t11221*t1800*t2167 + t23104 + t23126 - 1.*t1411*t1800*t59*t9919) + t5410*(t13949 + t13977 - 1.*t11221*t1800*t1901 + t23068 + t23087 + t1800*t508*t59*t9919);
  p_output1[126]=t22982*t5410 + (t10402 + t14184 + t12678*t1901 + t21876 + t21942 + t23282)*t5410 + t22969*t5561 + t5202*(t14225 + t14226 - 1.*t12678*t2167 + t23333 + t23337 - 1.*t2444*t9919);
  p_output1[127]=t22969*t5202 + (t14529 + t14544 - 1.*t13111*t2167 + t23601 + t23609 + t23617)*t5202 + t22982*t5429 + t5410*(t14454 + t14459 + t13111*t1901 + t23549 + t23554 + t2198*t9919);
  p_output1[128]=t1901*t23698 - 1.*t1800*t23963*t59 + t5202*(t15047 - 1.*t10582*t1800*t59) + t59*t901*(t15094 + t15130 - 1.*t10582*t1901 - 1.*t1942*t9919);
  p_output1[129]=-1.*t1721*t23963*t901 - 1.*t23698*t508*t59*t901 + t5202*(t15187 + t15236 + t24160 + t24173 + t11221*t22298*t59 + t1721*t1800*t9919) + t59*t901*(t15311 + t15318 + t11221*t1800*t1901 + t24190 + t24196 - 1.*t1800*t508*t59*t9919);
  p_output1[130]=t23698*t5410 + t5202*(t15396 + t12512*t1721*t59 - 1.*t12678*t1800*t59) + (t13533 + t15410 - 1.*t12678*t1901 + t22973 + t22978 + t24250)*t59*t901;
  p_output1[131]=t23698*t5429 + t5202*(t15684 + t12952*t1721*t59 - 1.*t13111*t1800*t59) + t59*t901*(t15763 + t15813 - 1.*t13111*t1901 + t24417 + t24451 - 1.*t2198*t9919);
  p_output1[132]=-1.*t1800*t24503*t2656 + t24486*t3446 + (t16578 + t16487*t1800*t2656)*t6017 + t2656*(t16697 + t16727 + t16487*t3446 + t16160*t4550)*t901;
  p_output1[133]=(t17280 + t17586 + t24527 + t24528 - 1.*t17279*t22298*t2656 - 1.*t16160*t1800*t3096)*t6017 - 1.*t24486*t2656*t3045*t901 - 1.*t24503*t3096*t901 + t2656*(t17867 + t17884 + t24559 + t24721 + t16160*t1800*t2656*t3045 - 1.*t17279*t1800*t3446)*t901;
  p_output1[134]=(t18241 + t1800*t18446*t2656 - 1.*t18160*t2656*t3096)*t6017 + t24486*t7292 + t2656*(t18629 + t18670 + t24843 + t24862 + t18446*t3446 + t16160*t4938)*t901;
  p_output1[135]=t24486*t5658 + (t18883 + t1800*t19045*t2656 - 1.*t18812*t2656*t3096)*t6017 + t2656*(t19171 + t19176 + t25090 + t25116 + t25124 + t19045*t3446)*t901;
  p_output1[136]=t25238*t3216 + t25205*t3446 + (t19741 + t19742 - 1.*t16487*t3446 - 1.*t16160*t4550)*t5658 + (t19599 + t19603 + t16487*t3216 + t16160*t3261)*t6017;
  p_output1[137]=(t19993 + t20021 + t25397 + t25399 - 1.*t16160*t1800*t2656*t3045 + t17279*t1800*t3446)*t5658 + (t19830 + t19831 + t25304 + t25305 + t16160*t1800*t2656*t2682 - 1.*t17279*t1800*t3216)*t6017 - 1.*t25238*t2656*t2682*t901 - 1.*t25205*t2656*t3045*t901;
  p_output1[138]=(t20439 + t20440 + t25450 + t25453 - 1.*t18446*t3446 - 1.*t16160*t4938)*t5658 + t25238*t6017 + (t16273 + t20379 + t24501 + t24502 + t25440 + t18446*t3216)*t6017 + t25205*t7292;
  p_output1[139]=t25205*t5658 + (t20594 + t20603 + t25508 + t25509 + t25510 - 1.*t19045*t3446)*t5658 + (t20527 + t20529 + t25483 + t25484 + t19045*t3216 + t16160*t3792)*t6017 + t25238*t6215;
  p_output1[140]=-1.*t1800*t25697*t2656 + t25587*t3216 + (t20861 - 1.*t16487*t1800*t2656)*t5658 + t2656*(t20910 + t20924 - 1.*t16487*t3216 - 1.*t16160*t3261)*t901;
  p_output1[141]=(t21111 + t21147 + t25764 + t25766 + t17279*t22298*t2656 + t16160*t1800*t3096)*t5658 - 1.*t25587*t2656*t2682*t901 - 1.*t25697*t3096*t901 + t2656*(t21199 + t21247 + t25893 + t25912 - 1.*t16160*t1800*t2656*t2682 + t17279*t1800*t3216)*t901;
  p_output1[142]=(t21425 - 1.*t1800*t18446*t2656 + t18160*t2656*t3096)*t5658 + t25587*t6017 + t2656*(t19393 + t21474 + t25221 + t25224 + t26031 - 1.*t18446*t3216)*t901;
  p_output1[143]=(t21581 - 1.*t1800*t19045*t2656 + t18812*t2656*t3096)*t5658 + t25587*t6215 + t2656*(t21617 + t21629 + t26080 + t26099 - 1.*t19045*t3216 - 1.*t16160*t3792)*t901;
  p_output1[144]=-1.*t1411*t1721*t26186 + (t21876 + t26219 + t26220)*t59 + t1411*t59*(t22238 + t22289 - 1.*t11221*t59 + t1721*t9866) + t1721*(-1.*t11221*t1411*t1721 + t22469 + t22471 - 1.*t1411*t59*t9866);
  p_output1[145]=t1977*t26186*t59 + t1721*(t12523*t1977 + t22681 + t22706 + t12512*t1411*t26313 + t2177*t9810 - 1.*t1721*t1977*t9866);
  p_output1[146]=t1721*(t12959*t1977 + t22909 + t22911 + t12952*t1411*t26313 + t26354 + t26357) + t26186*t508*t59;
  p_output1[147]=-1.*t1411*t1721*t26493 - 1.*t1721*t26456*t508 + t508*t59*(t11221*t1411*t1721 + t23104 + t23126 + t1411*t59*t9866) + t1411*t59*(t23068 + t23087 - 1.*t11221*t1721*t508 - 1.*t508*t59*t9866);
  p_output1[148]=t1411*t26456*t59 + t1977*t26493*t59 + t1411*(t21876 + t23282 + t26219 + t26220 + t26537 + t12512*t26313*t508)*t59 + t508*t59*(t23333 + t23337 - 1.*t12512*t1411*t26313 + t26500 + t26503 + t1721*t1977*t9866);
  p_output1[149]=t2177*t26456*t59 + t26493*t508*t59 + (t23601 + t23609 - 1.*t12952*t1411*t26313 + t26560 + t26564 + t26568)*t508*t59 + t1411*t59*(t23549 + t23554 + t26628 + t26631 + t12952*t26313*t508 - 1.*t1721*t2177*t9866);
  p_output1[150]=-1.*t1721*t26645*t508 + (t23601 + t26560 + t26568)*t59 + t508*t59*(t24160 + t24173 + t11221*t59 - 1.*t1721*t9866) + t1721*(t24190 + t24196 + t11221*t1721*t508 + t508*t59*t9866);
  p_output1[151]=t1721*(-1.*t12523*t1411 + t22973 + t24250 + t26437 + t26454 - 1.*t12512*t26313*t508) + t1411*t26645*t59;
  p_output1[152]=t2177*t26645*t59 + t1721*(-1.*t12959*t1411 + t24417 + t24451 - 1.*t12952*t26313*t508 - 1.*t508*t9810 + t1721*t2177*t9866);
  p_output1[153]=t2656*(t24501 + t27076 + t27084) - 1.*t26970*t3045*t3096 + t2656*t3045*(t24527 + t24528 - 1.*t17279*t2656 + t16151*t3096) + t3096*(t24559 + t24721 - 1.*t16151*t2656*t3045 - 1.*t17279*t3045*t3096);
  p_output1[154]=t2656*t26970*t3295 + t3096*(t24843 + t24862 + t18160*t27171*t3045 + t18209*t3295 - 1.*t16151*t3096*t3295 + t16076*t3600);
  p_output1[155]=t2656*t2682*t26970 + t3096*(t25090 + t25116 + t27218 + t27227 + t18812*t27171*t3045 + t18847*t3295);
  p_output1[156]=-1.*t2682*t27297*t3096 - 1.*t27444*t3045*t3096 + t2656*t3045*(t25304 + t25305 - 1.*t16151*t2656*t2682 - 1.*t17279*t2682*t3096) + t2656*t2682*(t25397 + t25399 + t16151*t2656*t3045 + t17279*t3045*t3096);
  p_output1[157]=t2656*t27297*t3045 + t2656*(t24501 + t25440 + t27076 + t27084 + t18160*t2682*t27171 + t27644)*t3045 + t2656*t27444*t3295 + t2656*t2682*(t25450 + t25453 + t27580 + t27581 - 1.*t18160*t27171*t3045 + t16151*t3096*t3295);
  p_output1[158]=t2656*t2682*t27444 + t2656*t2682*(t25508 + t25509 + t27700 + t27704 + t27707 - 1.*t18812*t27171*t3045) + t2656*t27297*t3600 + t2656*t3045*(t25483 + t25484 + t18812*t2682*t27171 + t27727 + t27739 - 1.*t16151*t3096*t3600);
  p_output1[159]=t2656*(t25508 + t27700 + t27707) - 1.*t2682*t27751*t3096 + t2656*t2682*(t25764 + t25766 + t17279*t2656 - 1.*t16151*t3096) + t3096*(t25893 + t25912 + t16151*t2656*t2682 + t17279*t2682*t3096);
  p_output1[160]=t2656*t27751*t3045 + (t25221 + t26031 - 1.*t18160*t2682*t27171 + t27293 + t27294 - 1.*t18209*t3045)*t3096;
  p_output1[161]=t2656*t27751*t3600 + t3096*(t26080 + t26099 - 1.*t16076*t2682 - 1.*t18812*t2682*t27171 - 1.*t18847*t3045 + t16151*t3096*t3600);
  p_output1[162]=-0.1575*t3045 - 0.2255*t3600;
  p_output1[163]=-0.2255*t3045 - 0.1575*t3600;
  p_output1[164]=t27929*t3295 + (t18160*t2682 + t27076 + t27644 + t16022*t3045)*t3295 + t3045*(t27580 + t27581 - 1.*t18160*t3045 - 1.*t16022*t3295) + t27910*t3600;
  p_output1[165]=t2682*t27929 + t27910*t3045 + t3045*(-1.*t16022*t2682 + t27704 + t27707 - 1.*t18812*t3045) + t3295*(t18812*t2682 + t27727 + t27739 + t16022*t3600);
  p_output1[166]=0.068*t3295;
  p_output1[167]=0.068*t2682;
  p_output1[168]=-0.325*t2657 - 1.*t16006*t2657 - 1.*t18808*t2657;
  p_output1[169]=-0.325*t2662 - 1.*t16006*t2662 - 1.*t18808*t2662;
  p_output1[170]=0.1575*t1411 + 0.2255*t2177;
  p_output1[171]=0.2255*t1411 + 0.1575*t2177;
  p_output1[172]=t2177*t28060 + t1977*t28076 + t1977*(t26219 + t26537 + t12512*t508 + t1411*t9678) + t1411*(-1.*t12512*t1411 + t26500 + t26503 - 1.*t1977*t9678);
  p_output1[173]=t1411*t28060 + t28076*t508 + t1977*(t26628 + t26631 + t12952*t508 + t2177*t9678) + t1411*(-1.*t12952*t1411 + t26564 + t26568 - 1.*t508*t9678);
  p_output1[174]=-0.068*t1977;
  p_output1[175]=-0.068*t508;
  p_output1[176]=0.325*t149 - 1.*t12948*t149 - 1.*t149*t9667;
  p_output1[177]=0.325*t196 - 1.*t12948*t196 - 1.*t196*t9667;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
