/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 18:38:40 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t378;
  double t433;
  double t514;
  double t530;
  double t568;
  double t610;
  double t614;
  double t139;
  double t725;
  double t654;
  double t640;
  double t731;
  double t732;
  double t790;
  double t173;
  double t627;
  double t1243;
  double t1251;
  double t1286;
  double t1015;
  double t1040;
  double t1042;
  double t1051;
  double t1065;
  double t1081;
  double t715;
  double t842;
  double t856;
  double t2443;
  double t2421;
  double t2435;
  double t2447;
  double t2436;
  double t2449;
  double t2454;
  double t2635;
  double t2456;
  double t2461;
  double t2477;
  double t2399;
  double t2911;
  double t2919;
  double t2938;
  double t2767;
  double t2769;
  double t2784;
  double t2858;
  double t2878;
  double t2887;
  double t2536;
  double t2648;
  double t2669;
  double t626;
  double t868;
  double t880;
  double t3220;
  double t3243;
  double t920;
  double t938;
  double t941;
  double t1892;
  double t1899;
  double t1930;
  double t1401;
  double t1426;
  double t1482;
  double t1501;
  double t1513;
  double t1741;
  double t3402;
  double t3415;
  double t3419;
  double t1931;
  double t1932;
  double t1952;
  double t2236;
  double t2264;
  double t2272;
  double t3221;
  double t3222;
  double t3227;
  double t2455;
  double t2674;
  double t2683;
  double t2692;
  double t2701;
  double t2703;
  double t3105;
  double t3108;
  double t3123;
  double t2951;
  double t2965;
  double t2970;
  double t3070;
  double t3074;
  double t3076;
  double t3822;
  double t3825;
  double t3830;
  double t3133;
  double t3144;
  double t3151;
  double t3188;
  double t3191;
  double t3194;
  double t3789;
  double t3791;
  double t3793;
  double t3777;
  double t3782;
  double t3786;
  double t3259;
  double t3266;
  double t3290;
  double t3335;
  double t3362;
  double t3368;
  double t3472;
  double t3479;
  double t3488;
  double t3530;
  double t3532;
  double t3563;
  double t3636;
  double t3638;
  double t3646;
  double t3663;
  double t3669;
  double t3672;
  double t3425;
  double t3435;
  double t3448;
  double t3728;
  double t3732;
  double t3738;
  double t3749;
  double t3752;
  double t3759;
  double t3763;
  double t3764;
  double t3765;
  double t3768;
  double t3769;
  double t3770;
  double t4502;
  double t4517;
  double t4524;
  double t3800;
  double t3802;
  double t3803;
  double t3814;
  double t3815;
  double t3817;
  double t3864;
  double t3869;
  double t3870;
  double t3872;
  double t3874;
  double t3876;
  double t3929;
  double t3934;
  double t3945;
  double t3997;
  double t3999;
  double t4025;
  double t3835;
  double t3848;
  double t3852;
  double t4066;
  double t4104;
  double t4160;
  double t4268;
  double t4282;
  double t4295;
  double t4406;
  double t4422;
  double t4429;
  double t4456;
  double t4476;
  double t4481;
  double t5067;
  double t5074;
  double t5082;
  double t5086;
  double t5088;
  double t5091;
  double t5098;
  double t5099;
  double t5100;
  double t5066;
  double t5085;
  double t5101;
  double t5104;
  double t5003;
  double t5004;
  double t5012;
  double t5065;
  double t5136;
  double t5143;
  double t5162;
  double t5210;
  double t5216;
  double t5247;
  double t5300;
  double t5326;
  double t5336;
  double t5337;
  double t5339;
  double t5344;
  double t5348;
  double t5350;
  double t5355;
  double t5365;
  double t5372;
  double t987;
  double t1088;
  double t1140;
  double t5389;
  double t5405;
  double t5406;
  double t5457;
  double t5458;
  double t5477;
  double t5498;
  double t5502;
  double t5505;
  double t5408;
  double t5438;
  double t5441;
  double t5490;
  double t5494;
  double t5526;
  double t5550;
  double t5789;
  double t5806;
  double t5814;
  double t5651;
  double t5653;
  double t5667;
  double t5678;
  double t2164;
  double t2165;
  double t2174;
  double t1852;
  double t1866;
  double t1868;
  double t6414;
  double t6420;
  double t6433;
  double t6501;
  double t6527;
  double t6574;
  double t6582;
  double t6586;
  double t6499;
  double t6568;
  double t6572;
  double t2191;
  double t2276;
  double t2368;
  double t6757;
  double t6759;
  double t6761;
  double t6766;
  double t6767;
  double t6773;
  double t6777;
  double t6780;
  double t6784;
  double t6894;
  double t6896;
  double t6904;
  double t6874;
  double t6887;
  double t6888;
  double t6808;
  double t6810;
  double t6871;
  double t2373;
  double t2380;
  double t2382;
  double t7136;
  double t7143;
  double t7157;
  double t7118;
  double t7169;
  double t7179;
  double t7194;
  double t7213;
  double t7247;
  double t7265;
  double t7272;
  double t7302;
  double t7335;
  double t7337;
  double t7284;
  double t7287;
  double t7290;
  double t7275;
  double t7277;
  double t7279;
  double t7360;
  double t7424;
  double t7483;
  double t7527;
  double t7597;
  double t7599;
  double t7601;
  double t7602;
  double t971;
  double t979;
  double t983;
  double t1359;
  double t1491;
  double t1494;
  double t7943;
  double t7947;
  double t7953;
  double t8017;
  double t8019;
  double t8020;
  double t8021;
  double t8028;
  double t6593;
  double t2764;
  double t2906;
  double t2909;
  double t8369;
  double t8370;
  double t8372;
  double t8376;
  double t8377;
  double t8380;
  double t8383;
  double t8384;
  double t8391;
  double t8367;
  double t8374;
  double t8393;
  double t8395;
  double t8366;
  double t8398;
  double t8407;
  double t8415;
  double t8432;
  double t8435;
  double t8441;
  double t8455;
  double t8467;
  double t8472;
  double t8473;
  double t8476;
  double t8483;
  double t8484;
  double t8488;
  double t8491;
  double t8522;
  double t8580;
  double t8788;
  double t8792;
  double t8797;
  double t8769;
  double t8773;
  double t8784;
  double t8697;
  double t8726;
  double t8741;
  double t8408;
  double t8676;
  double t8692;
  double t8820;
  double t8826;
  double t8828;
  double t9012;
  double t9023;
  double t9024;
  double t8834;
  double t8837;
  double t8838;
  double t8887;
  double t8951;
  double t8965;
  double t8966;
  double t8968;
  double t3157;
  double t3158;
  double t3163;
  double t9156;
  double t9157;
  double t9158;
  double t9162;
  double t9163;
  double t3082;
  double t3100;
  double t3102;
  double t9171;
  double t9179;
  double t9180;
  double t9184;
  double t9185;
  double t9187;
  double t3186;
  double t3199;
  double t3202;
  double t9212;
  double t9214;
  double t9216;
  double t9223;
  double t9224;
  double t9225;
  double t9263;
  double t9269;
  double t9276;
  double t9215;
  double t9236;
  double t9241;
  double t9255;
  double t9277;
  double t9278;
  double t9282;
  double t9283;
  double t9286;
  double t3207;
  double t3209;
  double t3211;
  double t9313;
  double t9314;
  double t9315;
  double t9311;
  double t9316;
  double t9317;
  double t9320;
  double t9321;
  double t9327;
  double t9330;
  double t9331;
  double t9319;
  double t9323;
  double t9324;
  double t9326;
  double t9332;
  double t9335;
  double t9337;
  double t9340;
  double t9341;
  double t9349;
  double t9350;
  double t9351;
  double t9366;
  double t9383;
  double t9384;
  double t9386;
  double t9387;
  double t2736;
  double t2749;
  double t2757;
  double t2946;
  double t3057;
  double t3069;
  double t9851;
  double t9852;
  double t9853;
  double t9930;
  double t9935;
  double t9944;
  double t9945;
  double t9956;
  double t5854;
  double t5895;
  double t5987;
  double t10332;
  double t10339;
  double t10343;
  double t6589;
  double t6601;
  double t10383;
  double t10396;
  double t10400;
  double t6639;
  double t6651;
  double t6908;
  double t6915;
  double t6927;
  double t7342;
  double t10680;
  double t7422;
  double t7616;
  double t7620;
  double t10827;
  double t10835;
  double t7629;
  double t7635;
  double t10884;
  double t7666;
  double t7685;
  double t10892;
  double t10904;
  double t10907;
  double t7733;
  double t7843;
  double t7870;
  double t7897;
  double t7900;
  double t7921;
  double t7922;
  double t7945;
  double t8101;
  double t8126;
  double t8159;
  double t11285;
  double t11287;
  double t11298;
  double t11300;
  double t11301;
  double t8230;
  double t8239;
  double t10436;
  double t11405;
  double t8263;
  double t8271;
  double t8287;
  double t8309;
  double t8337;
  double t8342;
  double t8343;
  double t9028;
  double t9093;
  double t9102;
  double t11936;
  double t11939;
  double t11940;
  double t9160;
  double t9183;
  double t9196;
  double t9197;
  double t11978;
  double t11984;
  double t11986;
  double t9248;
  double t9294;
  double t9295;
  double t9325;
  double t12270;
  double t9347;
  double t9394;
  double t9396;
  double t12395;
  double t12399;
  double t9428;
  double t9434;
  double t9472;
  double t9475;
  double t12510;
  double t9493;
  double t9494;
  double t12527;
  double t12539;
  double t12549;
  double t9592;
  double t9632;
  double t9679;
  double t9825;
  double t9826;
  double t9846;
  double t9964;
  double t9972;
  double t9974;
  double t13105;
  double t13110;
  double t13185;
  double t13192;
  double t13201;
  double t9988;
  double t9990;
  double t10022;
  double t10026;
  double t13344;
  double t10166;
  double t10182;
  double t10234;
  double t10279;
  double t10283;
  double t10448;
  double t10452;
  double t10473;
  double t10477;
  double t13520;
  double t13521;
  double t10623;
  double t10726;
  double t10828;
  double t13685;
  double t11005;
  double t11015;
  double t11078;
  double t11096;
  double t13717;
  double t13728;
  double t13803;
  double t13823;
  double t13844;
  double t13874;
  double t11184;
  double t11188;
  double t11135;
  double t13569;
  double t13588;
  double t11286;
  double t11236;
  double t11247;
  double t11484;
  double t11488;
  double t11568;
  double t11584;
  double t14059;
  double t14064;
  double t14198;
  double t14230;
  double t11667;
  double t11884;
  double t11910;
  double t12016;
  double t12019;
  double t12051;
  double t12059;
  double t14595;
  double t14605;
  double t12260;
  double t12273;
  double t12398;
  double t14751;
  double t12575;
  double t12576;
  double t12785;
  double t12786;
  double t14820;
  double t14838;
  double t14936;
  double t14949;
  double t14951;
  double t14999;
  double t12898;
  double t12917;
  double t12852;
  double t14647;
  double t14658;
  double t13107;
  double t13078;
  double t13081;
  double t13363;
  double t13369;
  double t13389;
  double t13396;
  double t15096;
  double t15100;
  double t15159;
  double t15165;
  double t13467;
  double t13499;
  double t13507;
  double t13944;
  double t13946;
  double t13988;
  double t15889;
  double t15898;
  double t16018;
  double t16021;
  double t14061;
  double t14135;
  double t14158;
  double t15029;
  double t15043;
  double t15063;
  double t16191;
  double t16193;
  double t16611;
  double t16612;
  double t15097;
  double t15133;
  double t15138;
  t378 = Cos(var1[8]);
  t433 = Sin(var1[7]);
  t514 = t378*t433;
  t530 = Cos(var1[7]);
  t568 = Sin(var1[8]);
  t610 = -1.*t530*t568;
  t614 = t514 + t610;
  t139 = Cos(var1[4]);
  t725 = Cos(var1[5]);
  t654 = Sin(var1[6]);
  t640 = Sin(var1[5]);
  t731 = t530*t378;
  t732 = t433*t568;
  t790 = t731 + t732;
  t173 = Cos(var1[6]);
  t627 = Sin(var1[4]);
  t1243 = -1.*t530*t378;
  t1251 = -1.*t433*t568;
  t1286 = t1243 + t1251;
  t1015 = -1.*t378*t433;
  t1040 = t530*t568;
  t1042 = t1015 + t1040;
  t1051 = t725*t1042;
  t1065 = t640*t654*t790;
  t1081 = t1051 + t1065;
  t715 = t640*t654*t614;
  t842 = t725*t790;
  t856 = t715 + t842;
  t2443 = Cos(var1[16]);
  t2421 = Cos(var1[17]);
  t2435 = Sin(var1[16]);
  t2447 = Sin(var1[17]);
  t2436 = t2421*t2435;
  t2449 = -1.*t2443*t2447;
  t2454 = t2436 + t2449;
  t2635 = Sin(var1[15]);
  t2456 = t2443*t2421;
  t2461 = t2435*t2447;
  t2477 = t2456 + t2461;
  t2399 = Cos(var1[15]);
  t2911 = -1.*t2443*t2421;
  t2919 = -1.*t2435*t2447;
  t2938 = t2911 + t2919;
  t2767 = -1.*t2421*t2435;
  t2769 = t2443*t2447;
  t2784 = t2767 + t2769;
  t2858 = t725*t2784;
  t2878 = t2635*t2477*t640;
  t2887 = t2858 + t2878;
  t2536 = t725*t2477;
  t2648 = t2635*t2454*t640;
  t2669 = t2536 + t2648;
  t626 = t139*t173*t614;
  t868 = -1.*t627*t856;
  t880 = t626 + t868;
  t3220 = Sin(var1[3]);
  t3243 = Cos(var1[3]);
  t920 = t725*t654*t614;
  t938 = -1.*t640*t790;
  t941 = t920 + t938;
  t1892 = t139*t173*t790;
  t1899 = -1.*t627*t1081;
  t1930 = t1892 + t1899;
  t1401 = t725*t614;
  t1426 = t640*t654*t1286;
  t1482 = t1401 + t1426;
  t1501 = t173*t627*t640;
  t1513 = t139*t654;
  t1741 = t1501 + t1513;
  t3402 = t640*t1042;
  t3415 = -1.*t725*t654*t790;
  t3419 = t3402 + t3415;
  t1931 = -1.*t640*t1042;
  t1932 = t725*t654*t790;
  t1952 = t1931 + t1932;
  t2236 = t640*t654*t1042;
  t2264 = t725*t1286;
  t2272 = t2236 + t2264;
  t3221 = -1.*t725*t654*t614;
  t3222 = t640*t790;
  t3227 = t3221 + t3222;
  t2455 = t2399*t139*t2454;
  t2674 = -1.*t627*t2669;
  t2683 = t2455 + t2674;
  t2692 = t725*t2635*t2454;
  t2701 = -1.*t2477*t640;
  t2703 = t2692 + t2701;
  t3105 = t2399*t139*t2477;
  t3108 = -1.*t627*t2887;
  t3123 = t3105 + t3108;
  t2951 = t725*t2454;
  t2965 = t2635*t2938*t640;
  t2970 = t2951 + t2965;
  t3070 = t139*t2635;
  t3074 = t2399*t627*t640;
  t3076 = t3070 + t3074;
  t3822 = -1.*t725*t2635*t2477;
  t3825 = t2784*t640;
  t3830 = t3822 + t3825;
  t3133 = t725*t2635*t2477;
  t3144 = -1.*t2784*t640;
  t3151 = t3133 + t3144;
  t3188 = t725*t2938;
  t3191 = t2635*t2784*t640;
  t3194 = t3188 + t3191;
  t3789 = -1.*t725*t2635*t2454;
  t3791 = t2477*t640;
  t3793 = t3789 + t3791;
  t3777 = t3243*t3227;
  t3782 = -1.*t3220*t880;
  t3786 = t3777 + t3782;
  t3259 = -1.*t173*t627*t614;
  t3266 = -1.*t139*t856;
  t3290 = t3259 + t3266;
  t3335 = -1.*t173*t627*t640*t614;
  t3362 = -1.*t139*t654*t614;
  t3368 = t3335 + t3362;
  t3472 = t640*t614;
  t3479 = -1.*t725*t654*t1286;
  t3488 = t3472 + t3479;
  t3530 = t139*t173*t1286;
  t3532 = -1.*t627*t1482;
  t3563 = t3530 + t3532;
  t3636 = t139*t173*t640;
  t3638 = -1.*t627*t654;
  t3646 = t3636 + t3638;
  t3663 = t139*t173;
  t3669 = -1.*t627*t640*t654;
  t3672 = t3663 + t3669;
  t3425 = t3243*t3419;
  t3435 = -1.*t3220*t1930;
  t3448 = t3425 + t3435;
  t3728 = -1.*t173*t627*t790;
  t3732 = -1.*t139*t1081;
  t3738 = t3728 + t3732;
  t3749 = -1.*t173*t627*t640*t790;
  t3752 = -1.*t139*t654*t790;
  t3759 = t3749 + t3752;
  t3763 = -1.*t725*t654*t1042;
  t3764 = t640*t1286;
  t3765 = t3763 + t3764;
  t3768 = t139*t173*t1042;
  t3769 = -1.*t627*t2272;
  t3770 = t3768 + t3769;
  t4502 = t3243*t3793;
  t4517 = -1.*t3220*t2683;
  t4524 = t4502 + t4517;
  t3800 = -1.*t2399*t2454*t627;
  t3802 = -1.*t139*t2669;
  t3803 = t3800 + t3802;
  t3814 = -1.*t139*t2635*t2454;
  t3815 = -1.*t2399*t2454*t627*t640;
  t3817 = t3814 + t3815;
  t3864 = -1.*t725*t2635*t2938;
  t3869 = t2454*t640;
  t3870 = t3864 + t3869;
  t3872 = t2399*t139*t2938;
  t3874 = -1.*t627*t2970;
  t3876 = t3872 + t3874;
  t3929 = -1.*t2635*t627;
  t3934 = t2399*t139*t640;
  t3945 = t3929 + t3934;
  t3997 = t2399*t139;
  t3999 = -1.*t2635*t627*t640;
  t4025 = t3997 + t3999;
  t3835 = t3243*t3830;
  t3848 = -1.*t3220*t3123;
  t3852 = t3835 + t3848;
  t4066 = -1.*t2399*t2477*t627;
  t4104 = -1.*t139*t2887;
  t4160 = t4066 + t4104;
  t4268 = -1.*t139*t2635*t2477;
  t4282 = -1.*t2399*t2477*t627*t640;
  t4295 = t4268 + t4282;
  t4406 = -1.*t725*t2635*t2784;
  t4422 = t2938*t640;
  t4429 = t4406 + t4422;
  t4456 = t2399*t139*t2784;
  t4476 = -1.*t627*t3194;
  t4481 = t4456 + t4476;
  t5067 = -0.0641*t378;
  t5074 = -0.28*t568;
  t5082 = t5067 + t5074;
  t5086 = -1.*t378;
  t5088 = 1. + t5086;
  t5091 = 0.075*t5088;
  t5098 = 0.355*t378;
  t5099 = -0.0641*t568;
  t5100 = t5091 + t5098 + t5099;
  t5066 = -0.325*t433;
  t5085 = t530*t5082;
  t5101 = t433*t5100;
  t5104 = t5066 + t5085 + t5101;
  t5003 = -1.*t173;
  t5004 = 1. + t5003;
  t5012 = 0.1575*t5004;
  t5065 = 0.2255*t173;
  t5136 = -1.*t654*t5104;
  t5143 = t5012 + t5065 + t5136;
  t5162 = -1.*t640*t5143;
  t5210 = -1.*t530;
  t5216 = 1. + t5210;
  t5247 = 0.325*t5216;
  t5300 = -1.*t433*t5082;
  t5326 = t530*t5100;
  t5336 = t5247 + t5300 + t5326;
  t5337 = t725*t5336;
  t5339 = t5162 + t5337;
  t5344 = -1.*t627*t5339;
  t5348 = 0.068*t654;
  t5350 = t173*t5104;
  t5355 = t5348 + t5350;
  t5365 = t139*t5355;
  t5372 = t5344 + t5365;
  t987 = t173*t627*t790;
  t1088 = t139*t1081;
  t1140 = t987 + t1088;
  t5389 = -1.*t139*t173*t640;
  t5405 = t627*t654;
  t5406 = t5389 + t5405;
  t5457 = t139*t5339;
  t5458 = t627*t5355;
  t5477 = t5457 + t5458;
  t5498 = t725*t5143;
  t5502 = t640*t5336;
  t5505 = t5498 + t5502;
  t5408 = -1.*t139*t5339;
  t5438 = -1.*t627*t5355;
  t5441 = t5408 + t5438;
  t5490 = -1.*t1741*t5372;
  t5494 = -1.*t5406*t5477;
  t5526 = -1.*t725*t173*t5505;
  t5550 = t5490 + t5494 + t5526;
  t5789 = -1.*t725*t5143;
  t5806 = -1.*t640*t5336;
  t5814 = t5789 + t5806;
  t5651 = t5505*t3419;
  t5653 = t5477*t1140;
  t5667 = t5372*t1930;
  t5678 = t5651 + t5653 + t5667;
  t2164 = t139*t173*t640*t790;
  t2165 = -1.*t627*t654*t790;
  t2174 = t2164 + t2165;
  t1852 = t173*t627;
  t1866 = t139*t640*t654;
  t1868 = t1852 + t1866;
  t6414 = -0.068*t654;
  t6420 = -1.*t173*t5104;
  t6433 = t6414 + t6420;
  t6501 = 0.068*t173;
  t6527 = t6501 + t5136;
  t6574 = -1.*t139*t640*t6433;
  t6582 = t627*t6527;
  t6586 = t6574 + t6582;
  t6499 = t627*t640*t6433;
  t6568 = t139*t6527;
  t6572 = t6499 + t6568;
  t2191 = t173*t627*t1042;
  t2276 = t139*t2272;
  t2368 = t2191 + t2276;
  t6757 = -0.325*t530;
  t6759 = t6757 + t5300 + t5326;
  t6761 = t640*t654*t6759;
  t6766 = 0.325*t433;
  t6767 = -1.*t530*t5082;
  t6773 = -1.*t433*t5100;
  t6777 = t6766 + t6767 + t6773;
  t6780 = t725*t6777;
  t6784 = t6761 + t6780;
  t6894 = -1.*t725*t654*t6759;
  t6896 = t640*t6777;
  t6904 = t6894 + t6896;
  t6874 = t139*t6784;
  t6887 = t173*t627*t6759;
  t6888 = t6874 + t6887;
  t6808 = -1.*t627*t6784;
  t6810 = t139*t173*t6759;
  t6871 = t6808 + t6810;
  t2373 = t173*t627*t614;
  t2380 = t139*t856;
  t2382 = t2373 + t2380;
  t7136 = -0.28*t378;
  t7143 = 0.0641*t568;
  t7157 = t7136 + t7143;
  t7118 = t433*t5082;
  t7169 = t530*t7157;
  t7179 = t7118 + t7169;
  t7194 = t640*t654*t7179;
  t7213 = -1.*t433*t7157;
  t7247 = t5085 + t7213;
  t7265 = t725*t7247;
  t7272 = t7194 + t7265;
  t7302 = -1.*t725*t654*t7179;
  t7335 = t640*t7247;
  t7337 = t7302 + t7335;
  t7284 = t139*t7272;
  t7287 = t173*t627*t7179;
  t7290 = t7284 + t7287;
  t7275 = -1.*t627*t7272;
  t7277 = t139*t173*t7179;
  t7279 = t7275 + t7277;
  t7360 = t5505*t3227;
  t7424 = t5477*t2382;
  t7483 = t5372*t880;
  t7527 = t7360 + t7424 + t7483;
  t7597 = -1.*t5505*t3419;
  t7599 = -1.*t5477*t1140;
  t7601 = -1.*t5372*t1930;
  t7602 = t7597 + t7599 + t7601;
  t971 = t139*t173*t640*t614;
  t979 = -1.*t627*t654*t614;
  t983 = t971 + t979;
  t1359 = t173*t627*t1286;
  t1491 = t139*t1482;
  t1494 = t1359 + t1491;
  t7943 = -1.*t5505*t3227;
  t7947 = -1.*t5477*t2382;
  t7953 = -1.*t5372*t880;
  t8017 = t1741*t5372;
  t8019 = t5406*t5477;
  t8020 = t725*t173*t5505;
  t8021 = t8017 + t8019 + t8020;
  t8028 = t7943 + t7947 + t7953;
  t6593 = Power(t725,2);
  t2764 = t2399*t2477*t627;
  t2906 = t139*t2887;
  t2909 = t2764 + t2906;
  t8369 = -0.0641*t2421;
  t8370 = -0.28*t2447;
  t8372 = t8369 + t8370;
  t8376 = -1.*t2421;
  t8377 = 1. + t8376;
  t8380 = -0.575*t8377;
  t8383 = -0.295*t2421;
  t8384 = -0.0641*t2447;
  t8391 = t8380 + t8383 + t8384;
  t8367 = 0.325*t2435;
  t8374 = t2443*t8372;
  t8393 = t2435*t8391;
  t8395 = t8367 + t8374 + t8393;
  t8366 = -0.068*t2635;
  t8398 = t2399*t8395;
  t8407 = t8366 + t8398;
  t8415 = -1.*t2443;
  t8432 = 1. + t8415;
  t8435 = -0.325*t8432;
  t8441 = -1.*t2435*t8372;
  t8455 = t2443*t8391;
  t8467 = t8435 + t8441 + t8455;
  t8472 = t725*t8467;
  t8473 = -1.*t2399;
  t8476 = 1. + t8473;
  t8483 = -0.1575*t8476;
  t8484 = -0.2255*t2399;
  t8488 = -1.*t2635*t8395;
  t8491 = t8483 + t8484 + t8488;
  t8522 = -1.*t8491*t640;
  t8580 = t8472 + t8522;
  t8788 = t139*t8407;
  t8792 = -1.*t627*t8580;
  t8797 = t8788 + t8792;
  t8769 = t2635*t627;
  t8773 = -1.*t2399*t139*t640;
  t8784 = t8769 + t8773;
  t8697 = t8407*t627;
  t8726 = t139*t8580;
  t8741 = t8697 + t8726;
  t8408 = -1.*t8407*t627;
  t8676 = -1.*t139*t8580;
  t8692 = t8408 + t8676;
  t8820 = t725*t8491;
  t8826 = t8467*t640;
  t8828 = t8820 + t8826;
  t9012 = -1.*t725*t8491;
  t9023 = -1.*t8467*t640;
  t9024 = t9012 + t9023;
  t8834 = -1.*t2399*t725*t8828;
  t8837 = -1.*t8784*t8741;
  t8838 = -1.*t3076*t8797;
  t8887 = t8834 + t8837 + t8838;
  t8951 = t8828*t3830;
  t8965 = t8741*t2909;
  t8966 = t8797*t3123;
  t8968 = t8951 + t8965 + t8966;
  t3157 = -1.*t2635*t2477*t627;
  t3158 = t2399*t139*t2477*t640;
  t3163 = t3157 + t3158;
  t9156 = 0.068*t2635;
  t9157 = -1.*t2399*t8395;
  t9158 = t9156 + t9157;
  t9162 = -0.068*t2399;
  t9163 = t9162 + t8488;
  t3082 = t2399*t627;
  t3100 = t139*t2635*t640;
  t3102 = t3082 + t3100;
  t9171 = t9163*t627;
  t9179 = -1.*t139*t9158*t640;
  t9180 = t9171 + t9179;
  t9184 = t139*t9163;
  t9185 = t9158*t627*t640;
  t9187 = t9184 + t9185;
  t3186 = t2399*t2784*t627;
  t3199 = t139*t3194;
  t3202 = t3186 + t3199;
  t9212 = 0.325*t2443;
  t9214 = t9212 + t8441 + t8455;
  t9216 = -0.325*t2435;
  t9223 = -1.*t2443*t8372;
  t9224 = -1.*t2435*t8391;
  t9225 = t9216 + t9223 + t9224;
  t9263 = t725*t9225;
  t9269 = t2635*t9214*t640;
  t9276 = t9263 + t9269;
  t9215 = -1.*t725*t2635*t9214;
  t9236 = t9225*t640;
  t9241 = t9215 + t9236;
  t9255 = t2399*t9214*t627;
  t9277 = t139*t9276;
  t9278 = t9255 + t9277;
  t9282 = t2399*t139*t9214;
  t9283 = -1.*t627*t9276;
  t9286 = t9282 + t9283;
  t3207 = t2399*t2454*t627;
  t3209 = t139*t2669;
  t3211 = t3207 + t3209;
  t9313 = -0.28*t2421;
  t9314 = 0.0641*t2447;
  t9315 = t9313 + t9314;
  t9311 = t2435*t8372;
  t9316 = t2443*t9315;
  t9317 = t9311 + t9316;
  t9320 = -1.*t2435*t9315;
  t9321 = t8374 + t9320;
  t9327 = t725*t9321;
  t9330 = t2635*t9317*t640;
  t9331 = t9327 + t9330;
  t9319 = -1.*t725*t2635*t9317;
  t9323 = t9321*t640;
  t9324 = t9319 + t9323;
  t9326 = t2399*t9317*t627;
  t9332 = t139*t9331;
  t9335 = t9326 + t9332;
  t9337 = t2399*t139*t9317;
  t9340 = -1.*t627*t9331;
  t9341 = t9337 + t9340;
  t9349 = t8828*t3793;
  t9350 = t8741*t3211;
  t9351 = t8797*t2683;
  t9366 = t9349 + t9350 + t9351;
  t9383 = -1.*t8828*t3830;
  t9384 = -1.*t8741*t2909;
  t9386 = -1.*t8797*t3123;
  t9387 = t9383 + t9384 + t9386;
  t2736 = -1.*t2635*t2454*t627;
  t2749 = t2399*t139*t2454*t640;
  t2757 = t2736 + t2749;
  t2946 = t2399*t2938*t627;
  t3057 = t139*t2970;
  t3069 = t2946 + t3057;
  t9851 = -1.*t8828*t3793;
  t9852 = -1.*t8741*t3211;
  t9853 = -1.*t8797*t2683;
  t9930 = t2399*t725*t8828;
  t9935 = t8784*t8741;
  t9944 = t3076*t8797;
  t9945 = t9930 + t9935 + t9944;
  t9956 = t9851 + t9852 + t9853;
  t5854 = t173*t640*t5505;
  t5895 = t5339*t3419;
  t5987 = t5505*t1081;
  t10332 = t173*t640*t5339;
  t10339 = -1.*t654*t5355;
  t10343 = t10332 + t5526 + t10339;
  t6589 = t725*t654*t5505;
  t6601 = -1.*t6593*t173*t6433;
  t10383 = t173*t5355*t790;
  t10396 = t5339*t1081;
  t10400 = t10383 + t5651 + t10396;
  t6639 = -1.*t725*t173*t5505*t790;
  t6651 = t725*t6433*t3419;
  t6908 = -1.*t725*t173*t6904;
  t6915 = t5505*t3765;
  t6927 = t6904*t3419;
  t7342 = -1.*t725*t173*t7337;
  t10680 = Power(t173,2);
  t7422 = t7337*t3419;
  t7616 = t5505*t856;
  t7620 = t5339*t3227;
  t10827 = t173*t5355*t614;
  t10835 = t5339*t856;
  t7629 = -1.*t5339*t3419;
  t7635 = -1.*t5505*t1081;
  t10884 = t10827 + t10835 + t7360;
  t7666 = -1.*t725*t173*t5505*t614;
  t7685 = t725*t6433*t3227;
  t10892 = -1.*t173*t5355*t790;
  t10904 = -1.*t5339*t1081;
  t10907 = t10892 + t7597 + t10904;
  t7733 = t725*t173*t5505*t790;
  t7843 = -1.*t725*t6433*t3419;
  t7870 = t6904*t3227;
  t7897 = -1.*t5505*t3765;
  t7900 = -1.*t6904*t3419;
  t7921 = t5505*t3488;
  t7922 = t7337*t3227;
  t7945 = -1.*t7337*t3419;
  t8101 = -1.*t173*t640*t5505;
  t8126 = -1.*t5505*t856;
  t8159 = -1.*t5339*t3227;
  t11285 = -1.*t173*t5355*t614;
  t11287 = -1.*t5339*t856;
  t11298 = -1.*t173*t640*t5339;
  t11300 = t654*t5355;
  t11301 = t11298 + t8020 + t11300;
  t8230 = -1.*t725*t654*t5505;
  t8239 = t6593*t173*t6433;
  t10436 = Power(t640,2);
  t11405 = t11285 + t11287 + t7943;
  t8263 = t725*t173*t5505*t614;
  t8271 = -1.*t725*t6433*t3227;
  t8287 = t725*t173*t6904;
  t8309 = -1.*t6904*t3227;
  t8337 = t725*t173*t7337;
  t8342 = -1.*t5505*t3488;
  t8343 = -1.*t7337*t3227;
  t9028 = t2399*t640*t8828;
  t9093 = t8580*t3830;
  t9102 = t8828*t2887;
  t11936 = -1.*t2635*t8407;
  t11939 = t2399*t640*t8580;
  t11940 = t11936 + t11939 + t8834;
  t9160 = -1.*t2399*t6593*t9158;
  t9183 = t725*t2635*t8828;
  t9196 = -1.*t2399*t725*t2477*t8828;
  t9197 = t725*t9158*t3830;
  t11978 = t2399*t8407*t2477;
  t11984 = t8580*t2887;
  t11986 = t11978 + t8951 + t11984;
  t9248 = -1.*t2399*t725*t9241;
  t9294 = t9241*t3830;
  t9295 = t8828*t4429;
  t9325 = -1.*t2399*t725*t9324;
  t12270 = Power(t2399,2);
  t9347 = t9324*t3830;
  t9394 = t8828*t2669;
  t9396 = t8580*t3793;
  t12395 = t2399*t8407*t2454;
  t12399 = t8580*t2669;
  t9428 = -1.*t8580*t3830;
  t9434 = -1.*t8828*t2887;
  t9472 = -1.*t2399*t725*t2454*t8828;
  t9475 = t725*t9158*t3793;
  t12510 = t12395 + t12399 + t9349;
  t9493 = t2399*t725*t2477*t8828;
  t9494 = -1.*t725*t9158*t3830;
  t12527 = -1.*t2399*t8407*t2477;
  t12539 = -1.*t8580*t2887;
  t12549 = t12527 + t9383 + t12539;
  t9592 = t9241*t3793;
  t9632 = -1.*t9241*t3830;
  t9679 = -1.*t8828*t4429;
  t9825 = t8828*t3870;
  t9826 = t9324*t3793;
  t9846 = -1.*t9324*t3830;
  t9964 = -1.*t2399*t640*t8828;
  t9972 = -1.*t8828*t2669;
  t9974 = -1.*t8580*t3793;
  t13105 = -1.*t2399*t8407*t2454;
  t13110 = -1.*t8580*t2669;
  t13185 = t2635*t8407;
  t13192 = -1.*t2399*t640*t8580;
  t13201 = t13185 + t13192 + t9930;
  t9988 = t2399*t6593*t9158;
  t9990 = -1.*t725*t2635*t8828;
  t10022 = t2399*t725*t2454*t8828;
  t10026 = -1.*t725*t9158*t3793;
  t13344 = t13105 + t13110 + t9851;
  t10166 = t2399*t725*t9241;
  t10182 = -1.*t9241*t3793;
  t10234 = t2399*t725*t9324;
  t10279 = -1.*t8828*t3870;
  t10283 = -1.*t9324*t3793;
  t10448 = -1.*t173*t5355;
  t10452 = -1.*t654*t6527;
  t10473 = -1.*t654*t5355*t790;
  t10477 = t173*t6527*t790;
  t13520 = -1.*t173*t5143;
  t13521 = t10339 + t13520;
  t10623 = t173*t5355*t1042;
  t10726 = t10680*t6759*t790;
  t10828 = t10680*t7179*t790;
  t13685 = Power(t654,2);
  t11005 = -1.*t654*t5355*t614;
  t11015 = t173*t6527*t614;
  t11078 = t654*t5355*t790;
  t11096 = -1.*t173*t6527*t790;
  t13717 = -1.*t654*t5143*t614;
  t13728 = t5336*t790;
  t13803 = -1.*t5336*t1042;
  t13823 = t654*t5143*t790;
  t13844 = t13803 + t10892 + t13823;
  t13874 = t10827 + t13717 + t13728;
  t11184 = -1.*t173*t5355*t1042;
  t11188 = -1.*t10680*t6759*t790;
  t11135 = t10680*t6759*t614;
  t13569 = t5336*t1042;
  t13588 = -1.*t654*t5143*t790;
  t11286 = -1.*t10680*t7179*t790;
  t11236 = t10680*t7179*t614;
  t11247 = t173*t5355*t1286;
  t11484 = t173*t5355;
  t11488 = t654*t6527;
  t11568 = t654*t5355*t614;
  t11584 = -1.*t173*t6527*t614;
  t14059 = t654*t5143*t614;
  t14064 = -1.*t5336*t790;
  t14198 = t173*t5143;
  t14230 = t11300 + t14198;
  t11667 = -1.*t10680*t6759*t614;
  t11884 = -1.*t10680*t7179*t614;
  t11910 = -1.*t173*t5355*t1286;
  t12016 = -1.*t2399*t8407;
  t12019 = -1.*t2635*t9163;
  t12051 = -1.*t2635*t8407*t2477;
  t12059 = t2399*t9163*t2477;
  t14595 = -1.*t2399*t8491;
  t14605 = t11936 + t14595;
  t12260 = t2399*t8407*t2784;
  t12273 = t12270*t9214*t2477;
  t12398 = t12270*t9317*t2477;
  t14751 = Power(t2635,2);
  t12575 = -1.*t2635*t8407*t2454;
  t12576 = t2399*t9163*t2454;
  t12785 = t2635*t8407*t2477;
  t12786 = -1.*t2399*t9163*t2477;
  t14820 = -1.*t2635*t8491*t2454;
  t14838 = t8467*t2477;
  t14936 = -1.*t8467*t2784;
  t14949 = t2635*t8491*t2477;
  t14951 = t14936 + t12527 + t14949;
  t14999 = t12395 + t14820 + t14838;
  t12898 = -1.*t2399*t8407*t2784;
  t12917 = -1.*t12270*t9214*t2477;
  t12852 = t12270*t9214*t2454;
  t14647 = t8467*t2784;
  t14658 = -1.*t2635*t8491*t2477;
  t13107 = -1.*t12270*t9317*t2477;
  t13078 = t12270*t9317*t2454;
  t13081 = t2399*t8407*t2938;
  t13363 = t2399*t8407;
  t13369 = t2635*t9163;
  t13389 = t2635*t8407*t2454;
  t13396 = -1.*t2399*t9163*t2454;
  t15096 = t2635*t8491*t2454;
  t15100 = -1.*t8467*t2477;
  t15159 = t2399*t8491;
  t15165 = t13185 + t15159;
  t13467 = -1.*t12270*t9214*t2454;
  t13499 = -1.*t12270*t9317*t2454;
  t13507 = -1.*t2399*t8407*t2938;
  t13944 = -1.*t6777*t1042;
  t13946 = -1.*t5336*t1286;
  t13988 = t6777*t790;
  t15889 = t5104*t614;
  t15898 = t15889 + t13728;
  t16018 = -1.*t5104*t790;
  t16021 = t13803 + t16018;
  t14061 = -1.*t7247*t1042;
  t14135 = t5336*t614;
  t14158 = t7247*t790;
  t15029 = -1.*t9225*t2784;
  t15043 = -1.*t8467*t2938;
  t15063 = t9225*t2477;
  t16191 = t8395*t2454;
  t16193 = t16191 + t14838;
  t16611 = -1.*t8395*t2477;
  t16612 = t14936 + t16611;
  t15097 = -1.*t9321*t2784;
  t15133 = t8467*t2454;
  t15138 = t9321*t2477;
  p_output1[0]=t880;
  p_output1[1]=t139*t941;
  p_output1[2]=t983;
  p_output1[3]=t1140;
  p_output1[4]=t1494;
  p_output1[5]=t1741;
  p_output1[6]=-1.*t139*t173*t725;
  p_output1[7]=t1868;
  p_output1[8]=t1930;
  p_output1[9]=t139*t1952;
  p_output1[10]=t2174;
  p_output1[11]=t2368;
  p_output1[12]=t2382;
  p_output1[13]=t2683;
  p_output1[14]=t139*t2703;
  p_output1[15]=t2757;
  p_output1[16]=t2909;
  p_output1[17]=t3069;
  p_output1[18]=t3076;
  p_output1[19]=-1.*t139*t2399*t725;
  p_output1[20]=t3102;
  p_output1[21]=t3123;
  p_output1[22]=t139*t3151;
  p_output1[23]=t3163;
  p_output1[24]=t3202;
  p_output1[25]=t3211;
  p_output1[26]=-1.*t3220*t3227 - 1.*t3243*t880;
  p_output1[27]=-1.*t3220*t3290;
  p_output1[28]=t3243*t856 + t3220*t627*t941;
  p_output1[29]=-1.*t3220*t3368 - 1.*t173*t3243*t614*t725;
  p_output1[30]=t3448;
  p_output1[31]=t3243*t3488 - 1.*t3220*t3563;
  p_output1[32]=-1.*t1741*t3243 - 1.*t173*t3220*t725;
  p_output1[33]=-1.*t3220*t3646;
  p_output1[34]=-1.*t173*t3243*t640 - 1.*t173*t3220*t627*t725;
  p_output1[35]=-1.*t3220*t3672 - 1.*t3243*t654*t725;
  p_output1[36]=-1.*t1930*t3243 - 1.*t3220*t3419;
  p_output1[37]=-1.*t3220*t3738;
  p_output1[38]=t1081*t3243 + t1952*t3220*t627;
  p_output1[39]=-1.*t3220*t3759 - 1.*t173*t3243*t725*t790;
  p_output1[40]=t3243*t3765 - 1.*t3220*t3770;
  p_output1[41]=t3786;
  p_output1[42]=-1.*t2683*t3243 - 1.*t3220*t3793;
  p_output1[43]=-1.*t3220*t3803;
  p_output1[44]=t2669*t3243 + t2703*t3220*t627;
  p_output1[45]=-1.*t3220*t3817 - 1.*t2399*t2454*t3243*t725;
  p_output1[46]=t3852;
  p_output1[47]=t3243*t3870 - 1.*t3220*t3876;
  p_output1[48]=-1.*t3076*t3243 - 1.*t2399*t3220*t725;
  p_output1[49]=-1.*t3220*t3945;
  p_output1[50]=-1.*t2399*t3243*t640 - 1.*t2399*t3220*t627*t725;
  p_output1[51]=-1.*t3220*t4025 - 1.*t2635*t3243*t725;
  p_output1[52]=-1.*t3123*t3243 - 1.*t3220*t3830;
  p_output1[53]=-1.*t3220*t4160;
  p_output1[54]=t2887*t3243 + t3151*t3220*t627;
  p_output1[55]=-1.*t3220*t4295 - 1.*t2399*t2477*t3243*t725;
  p_output1[56]=t3243*t4429 - 1.*t3220*t4481;
  p_output1[57]=t4524;
  p_output1[58]=t3786;
  p_output1[59]=t3243*t3290;
  p_output1[60]=t3220*t856 - 1.*t3243*t627*t941;
  p_output1[61]=t3243*t3368 - 1.*t173*t3220*t614*t725;
  p_output1[62]=t1930*t3243 + t3220*t3419;
  p_output1[63]=t3220*t3488 + t3243*t3563;
  p_output1[64]=-1.*t1741*t3220 + t173*t3243*t725;
  p_output1[65]=t3243*t3646;
  p_output1[66]=-1.*t173*t3220*t640 + t173*t3243*t627*t725;
  p_output1[67]=t3243*t3672 - 1.*t3220*t654*t725;
  p_output1[68]=t3448;
  p_output1[69]=t3243*t3738;
  p_output1[70]=t1081*t3220 - 1.*t1952*t3243*t627;
  p_output1[71]=t3243*t3759 - 1.*t173*t3220*t725*t790;
  p_output1[72]=t3220*t3765 + t3243*t3770;
  p_output1[73]=t3220*t3227 + t3243*t880;
  p_output1[74]=t4524;
  p_output1[75]=t3243*t3803;
  p_output1[76]=t2669*t3220 - 1.*t2703*t3243*t627;
  p_output1[77]=t3243*t3817 - 1.*t2399*t2454*t3220*t725;
  p_output1[78]=t3123*t3243 + t3220*t3830;
  p_output1[79]=t3220*t3870 + t3243*t3876;
  p_output1[80]=-1.*t3076*t3220 + t2399*t3243*t725;
  p_output1[81]=t3243*t3945;
  p_output1[82]=-1.*t2399*t3220*t640 + t2399*t3243*t627*t725;
  p_output1[83]=t3243*t4025 - 1.*t2635*t3220*t725;
  p_output1[84]=t3852;
  p_output1[85]=t3243*t4160;
  p_output1[86]=t2887*t3220 - 1.*t3151*t3243*t627;
  p_output1[87]=t3243*t4295 - 1.*t2399*t2477*t3220*t725;
  p_output1[88]=t3220*t4429 + t3243*t4481;
  p_output1[89]=t2683*t3243 + t3220*t3793;
  p_output1[90]=t1140*(-1.*t3646*t5372 - 1.*t5372*t5406 - 1.*t1741*t5441 - 1.*t1741*t5477) + t5406*(t1140*t5372 + t3738*t5372 + t1930*t5441 + t1930*t5477) + t1930*t5550 + t1741*t5678;
  p_output1[91]=t139*t1952*t5550 + t5406*(t139*t1952*t5477 + t1140*t139*t5814 + t5895 + t5987 - 1.*t1952*t5372*t627 - 1.*t1930*t5814*t627) - 1.*t139*t173*t5678*t725 + t1140*(-1.*t139*t5406*t5814 + t5854 + t1741*t5814*t627 - 1.*t173*t5339*t725 + t139*t173*t5477*t725 - 1.*t173*t5372*t627*t725);
  p_output1[92]=t2174*t5550 + t1868*t5678 + t1140*(-1.*t3672*t5372 - 1.*t1868*t5477 - 1.*t1741*t6572 - 1.*t5406*t6586 + t6589 + t6601) + t5406*(t3759*t5372 + t2174*t5477 + t1930*t6572 + t1140*t6586 + t6639 + t6651);
  p_output1[93]=t2368*t5550 + t1140*(-1.*t1741*t6871 - 1.*t5406*t6888 + t6908) + t5406*(t3770*t5372 + t2368*t5477 + t1930*t6871 + t1140*t6888 + t6915 + t6927);
  p_output1[94]=t2382*t5550 + t1140*(-1.*t1741*t7279 - 1.*t5406*t7290 + t7342) + t5406*(t1930*t7279 + t1140*t7290 + t7360 + t7422 + t7424 + t7483);
  p_output1[95]=t2382*(-1.*t1140*t5372 - 1.*t3738*t5372 - 1.*t1930*t5441 - 1.*t1930*t5477) + t1930*t7527 + t7602*t880 + t1140*(t2382*t5372 + t3290*t5372 + t5441*t880 + t5477*t880);
  p_output1[96]=t139*t1952*t7527 + t2382*(-1.*t139*t1952*t5477 - 1.*t1140*t139*t5814 + t1952*t5372*t627 + t1930*t5814*t627 + t7629 + t7635) + t139*t7602*t941 + t1140*(t139*t2382*t5814 + t7616 + t7620 - 1.*t5814*t627*t880 + t139*t5477*t941 - 1.*t5372*t627*t941);
  p_output1[97]=t2174*t7527 + t2382*(-1.*t3759*t5372 - 1.*t2174*t5477 - 1.*t1930*t6572 - 1.*t1140*t6586 + t7733 + t7843) + t7602*t983 + t1140*(t3368*t5372 + t2382*t6586 + t7666 + t7685 + t6572*t880 + t5477*t983);
  p_output1[98]=t2368*t7527 + t1140*t7602 + t2382*(-1.*t3770*t5372 - 1.*t2368*t5477 - 1.*t1930*t6871 - 1.*t1140*t6888 + t7897 + t7900) + t1140*(t5651 + t5653 + t5667 + t2382*t6888 + t7870 + t6871*t880);
  p_output1[99]=t2382*t7527 + t1494*t7602 + t2382*(-1.*t1930*t7279 - 1.*t1140*t7290 + t7943 + t7945 + t7947 + t7953) + t1140*(t3563*t5372 + t1494*t5477 + t2382*t7290 + t7921 + t7922 + t7279*t880);
  p_output1[100]=t2382*(t3646*t5372 + t5372*t5406 + t1741*t5441 + t1741*t5477) + t1741*t8028 + t8021*t880 + t5406*(-1.*t2382*t5372 - 1.*t3290*t5372 - 1.*t5441*t880 - 1.*t5477*t880);
  p_output1[101]=-1.*t139*t173*t725*t8028 + t2382*(t139*t5406*t5814 - 1.*t1741*t5814*t627 + t173*t5339*t725 - 1.*t139*t173*t5477*t725 + t173*t5372*t627*t725 + t8101) + t139*t8021*t941 + t5406*(-1.*t139*t2382*t5814 + t8126 + t8159 + t5814*t627*t880 - 1.*t139*t5477*t941 + t5372*t627*t941);
  p_output1[102]=t1868*t8028 + t2382*(t3672*t5372 + t1868*t5477 + t1741*t6572 + t5406*t6586 + t8230 + t8239) + t8021*t983 + t5406*(-1.*t3368*t5372 - 1.*t2382*t6586 + t8263 + t8271 - 1.*t6572*t880 - 1.*t5477*t983);
  p_output1[103]=t1140*t8021 + t2382*(t1741*t6871 + t5406*t6888 + t8287) + t5406*(-1.*t2382*t6888 + t7597 + t7599 + t7601 + t8309 - 1.*t6871*t880);
  p_output1[104]=t1494*t8021 + t2382*(t1741*t7279 + t5406*t7290 + t8337) + t5406*(-1.*t3563*t5372 - 1.*t1494*t5477 - 1.*t2382*t7290 + t8342 + t8343 - 1.*t7279*t880);
  p_output1[105]=t8784*(t3123*t8692 + t3123*t8741 + t2909*t8797 + t4160*t8797) + t2909*(-1.*t3076*t8692 - 1.*t3076*t8741 - 1.*t3945*t8797 - 1.*t8784*t8797) + t3123*t8887 + t3076*t8968;
  p_output1[106]=t139*t3151*t8887 - 1.*t139*t2399*t725*t8968 + t2909*(-1.*t2399*t725*t8580 + t139*t2399*t725*t8741 - 1.*t2399*t627*t725*t8797 + t3076*t627*t9024 - 1.*t139*t8784*t9024 + t9028) + t8784*(t139*t3151*t8741 - 1.*t3151*t627*t8797 + t139*t2909*t9024 - 1.*t3123*t627*t9024 + t9093 + t9102);
  p_output1[107]=t3163*t8887 + t3102*t8968 + t2909*(-1.*t3102*t8741 - 1.*t4025*t8797 + t9160 - 1.*t8784*t9180 + t9183 - 1.*t3076*t9187) + t8784*(t3163*t8741 + t4295*t8797 + t2909*t9180 + t3123*t9187 + t9196 + t9197);
  p_output1[108]=t3202*t8887 + t2909*(t9248 - 1.*t8784*t9278 - 1.*t3076*t9286) + t8784*(t3202*t8741 + t4481*t8797 + t2909*t9278 + t3123*t9286 + t9294 + t9295);
  p_output1[109]=t3211*t8887 + t2909*(t9325 - 1.*t8784*t9335 - 1.*t3076*t9341) + t8784*(t2909*t9335 + t3123*t9341 + t9347 + t9349 + t9350 + t9351);
  p_output1[110]=t2909*(t2683*t8692 + t2683*t8741 + t3211*t8797 + t3803*t8797) + t3211*(-1.*t3123*t8692 - 1.*t3123*t8741 - 1.*t2909*t8797 - 1.*t4160*t8797) + t3123*t9366 + t2683*t9387;
  p_output1[111]=t139*t3151*t9366 + t139*t2703*t9387 + t2909*(t139*t2703*t8741 - 1.*t2703*t627*t8797 + t139*t3211*t9024 - 1.*t2683*t627*t9024 + t9394 + t9396) + t3211*(-1.*t139*t3151*t8741 + t3151*t627*t8797 - 1.*t139*t2909*t9024 + t3123*t627*t9024 + t9428 + t9434);
  p_output1[112]=t3163*t9366 + t2757*t9387 + t2909*(t2757*t8741 + t3817*t8797 + t3211*t9180 + t2683*t9187 + t9472 + t9475) + t3211*(-1.*t3163*t8741 - 1.*t4295*t8797 - 1.*t2909*t9180 - 1.*t3123*t9187 + t9493 + t9494);
  p_output1[113]=t3202*t9366 + t2909*t9387 + t2909*(t8951 + t8965 + t8966 + t3211*t9278 + t2683*t9286 + t9592) + t3211*(-1.*t3202*t8741 - 1.*t4481*t8797 - 1.*t2909*t9278 - 1.*t3123*t9286 + t9632 + t9679);
  p_output1[114]=t3211*t9366 + t3069*t9387 + t2909*(t3069*t8741 + t3876*t8797 + t3211*t9335 + t2683*t9341 + t9825 + t9826) + t3211*(-1.*t2909*t9335 - 1.*t3123*t9341 + t9846 + t9851 + t9852 + t9853);
  p_output1[115]=t8784*(-1.*t2683*t8692 - 1.*t2683*t8741 - 1.*t3211*t8797 - 1.*t3803*t8797) + t3211*(t3076*t8692 + t3076*t8741 + t3945*t8797 + t8784*t8797) + t2683*t9945 + t3076*t9956;
  p_output1[116]=t139*t2703*t9945 - 1.*t139*t2399*t725*t9956 + t3211*(t2399*t725*t8580 - 1.*t139*t2399*t725*t8741 + t2399*t627*t725*t8797 - 1.*t3076*t627*t9024 + t139*t8784*t9024 + t9964) + t8784*(-1.*t139*t2703*t8741 + t2703*t627*t8797 - 1.*t139*t3211*t9024 + t2683*t627*t9024 + t9972 + t9974);
  p_output1[117]=t8784*(t10022 + t10026 - 1.*t2757*t8741 - 1.*t3817*t8797 - 1.*t3211*t9180 - 1.*t2683*t9187) + t2757*t9945 + t3102*t9956 + t3211*(t3102*t8741 + t4025*t8797 + t8784*t9180 + t3076*t9187 + t9988 + t9990);
  p_output1[118]=t3211*(t10166 + t8784*t9278 + t3076*t9286) + t8784*(t10182 - 1.*t3211*t9278 - 1.*t2683*t9286 + t9383 + t9384 + t9386) + t2909*t9945;
  p_output1[119]=t8784*(t10279 + t10283 - 1.*t3069*t8741 - 1.*t3876*t8797 - 1.*t3211*t9335 - 1.*t2683*t9341) + t3211*(t10234 + t8784*t9335 + t3076*t9341) + t3069*t9945;
  p_output1[120]=t10343*t1081 - 1.*t10400*t173*t640 + t3419*(t5854 + t173*t5814*t640) + t173*(t1952*t5339 + t1081*t5814 + t5895 + t5987)*t725;
  p_output1[121]=t3419*(t10448 + t10452 - 1.*t10436*t173*t6433 - 1.*t5339*t640*t654 + t6589 + t6601) - 1.*t10400*t654*t725 - 1.*t10343*t173*t725*t790 + t173*t725*(t10473 + t10477 - 1.*t1081*t640*t6433 + t6639 + t6651 + t173*t5339*t640*t790);
  p_output1[122]=t10343*t3765 + t3419*(-1.*t173*t654*t6759 + t173*t640*t6784 + t6908) + t173*(t10623 + t10726 + t2272*t5339 + t1081*t6784 + t6915 + t6927)*t725;
  p_output1[123]=t10343*t3227 + t3419*(-1.*t173*t654*t7179 + t173*t640*t7272 + t7342) + t173*t725*(t10827 + t10828 + t10835 + t1081*t7272 + t7360 + t7422);
  p_output1[124]=t1081*t10884 + t3227*(-1.*t1952*t5339 - 1.*t1081*t5814 + t7629 + t7635) + t10907*t856 + t3419*(t7616 + t7620 + t5814*t856 + t5339*t941);
  p_output1[125]=-1.*t10907*t173*t614*t725 - 1.*t10884*t173*t725*t790 + t3227*(t11078 + t11096 + t1081*t640*t6433 + t7733 + t7843 - 1.*t173*t5339*t640*t790) + t3419*(t11005 + t11015 + t173*t5339*t614*t640 + t7666 + t7685 - 1.*t640*t6433*t856);
  p_output1[126]=t10907*t3419 + t10884*t3765 + t3227*(t11184 + t11188 - 1.*t2272*t5339 - 1.*t1081*t6784 + t7897 + t7900) + t3419*(t10383 + t10396 + t11135 + t5651 + t7870 + t6784*t856);
  p_output1[127]=t10884*t3227 + t10907*t3488 + t3227*(t11285 + t11286 + t11287 - 1.*t1081*t7272 + t7943 + t7945) + t3419*(t11236 + t11247 + t1482*t5339 + t7921 + t7922 + t7272*t856);
  p_output1[128]=-1.*t11405*t173*t640 + t3227*(-1.*t173*t5814*t640 + t8101) + t11301*t856 + t173*t725*(t8126 + t8159 - 1.*t5814*t856 - 1.*t5339*t941);
  p_output1[129]=-1.*t11301*t173*t614*t725 - 1.*t11405*t654*t725 + t3227*(t11484 + t11488 + t10436*t173*t6433 + t5339*t640*t654 + t8230 + t8239) + t173*t725*(t11568 + t11584 - 1.*t173*t5339*t614*t640 + t8263 + t8271 + t640*t6433*t856);
  p_output1[130]=t11301*t3419 + t3227*(t173*t654*t6759 - 1.*t173*t640*t6784 + t8287) + t173*t725*(t10892 + t10904 + t11667 + t7597 + t8309 - 1.*t6784*t856);
  p_output1[131]=t11301*t3488 + t3227*(t173*t654*t7179 - 1.*t173*t640*t7272 + t8337) + t173*t725*(t11884 + t11910 - 1.*t1482*t5339 + t8342 + t8343 - 1.*t7272*t856);
  p_output1[132]=t11940*t2887 - 1.*t11986*t2399*t640 + t3830*(t2399*t640*t9024 + t9028) + t2399*t725*(t3151*t8580 + t2887*t9024 + t9093 + t9102);
  p_output1[133]=-1.*t11940*t2399*t2477*t725 - 1.*t11986*t2635*t725 + t3830*(t12016 + t12019 - 1.*t2635*t640*t8580 - 1.*t10436*t2399*t9158 + t9160 + t9183) + t2399*t725*(t12051 + t12059 + t2399*t2477*t640*t8580 - 1.*t2887*t640*t9158 + t9196 + t9197);
  p_output1[134]=t11940*t4429 + t3830*(-1.*t2399*t2635*t9214 + t9248 + t2399*t640*t9276) + t2399*t725*(t12260 + t12273 + t3194*t8580 + t2887*t9276 + t9294 + t9295);
  p_output1[135]=t11940*t3793 + t3830*(-1.*t2399*t2635*t9317 + t9325 + t2399*t640*t9331) + t2399*t725*(t12395 + t12398 + t12399 + t2887*t9331 + t9347 + t9349);
  p_output1[136]=t12549*t2669 + t12510*t2887 + t3830*(t2703*t8580 + t2669*t9024 + t9394 + t9396) + t3793*(-1.*t3151*t8580 - 1.*t2887*t9024 + t9428 + t9434);
  p_output1[137]=-1.*t12549*t2399*t2454*t725 - 1.*t12510*t2399*t2477*t725 + t3830*(t12575 + t12576 + t2399*t2454*t640*t8580 - 1.*t2669*t640*t9158 + t9472 + t9475) + t3793*(t12785 + t12786 - 1.*t2399*t2477*t640*t8580 + t2887*t640*t9158 + t9493 + t9494);
  p_output1[138]=t12549*t3830 + t12510*t4429 + t3830*(t11978 + t11984 + t12852 + t8951 + t2669*t9276 + t9592) + t3793*(t12898 + t12917 - 1.*t3194*t8580 - 1.*t2887*t9276 + t9632 + t9679);
  p_output1[139]=t12510*t3793 + t12549*t3870 + t3830*(t13078 + t13081 + t2970*t8580 + t2669*t9331 + t9825 + t9826) + t3793*(t13105 + t13107 + t13110 - 1.*t2887*t9331 + t9846 + t9851);
  p_output1[140]=t13201*t2669 - 1.*t13344*t2399*t640 + t3793*(-1.*t2399*t640*t9024 + t9964) + t2399*t725*(-1.*t2703*t8580 - 1.*t2669*t9024 + t9972 + t9974);
  p_output1[141]=-1.*t13201*t2399*t2454*t725 - 1.*t13344*t2635*t725 + t2399*t725*(t10022 + t10026 + t13389 + t13396 - 1.*t2399*t2454*t640*t8580 + t2669*t640*t9158) + t3793*(t13363 + t13369 + t2635*t640*t8580 + t10436*t2399*t9158 + t9988 + t9990);
  p_output1[142]=t13201*t3830 + t3793*(t10166 + t2399*t2635*t9214 - 1.*t2399*t640*t9276) + t2399*t725*(t10182 + t12527 + t12539 + t13467 - 1.*t2669*t9276 + t9383);
  p_output1[143]=t13201*t3870 + t2399*t725*(t10279 + t10283 + t13499 + t13507 - 1.*t2970*t8580 - 1.*t2669*t9331) + t3793*(t10234 + t2399*t2635*t9317 - 1.*t2399*t640*t9331);
  p_output1[144]=(t10383 + t13569 + t13588)*t173 - 1.*t13521*t654*t790 + t173*(t10448 + t10452 - 1.*t173*t6433 + t5143*t654)*t790 + t654*(t10473 + t10477 - 1.*t173*t5143*t790 - 1.*t6433*t654*t790);
  p_output1[145]=t1042*t13521*t173 + t654*(t10623 + t10726 + t1286*t5336 - 1.*t1042*t5143*t654 + t1042*t6777 + t13685*t6759*t790);
  p_output1[146]=t13521*t173*t614 + t654*(t10827 + t10828 + t13717 + t13728 + t1042*t7247 + t13685*t7179*t790);
  p_output1[147]=-1.*t13844*t614*t654 - 1.*t13874*t654*t790 + t173*(t11005 + t11015 - 1.*t173*t5143*t614 - 1.*t614*t6433*t654)*t790 + t173*t614*(t11078 + t11096 + t173*t5143*t790 + t6433*t654*t790);
  p_output1[148]=t1042*t13874*t173 + t13844*t173*t790 + t173*(t10383 + t11135 + t13569 + t13588 + t13988 + t13685*t614*t6759)*t790 + t173*t614*(t11184 + t11188 + t13944 + t13946 + t1042*t5143*t654 - 1.*t13685*t6759*t790);
  p_output1[149]=t1286*t13844*t173 + t13874*t173*t614 + t173*(t11236 + t11247 + t14135 + t14158 - 1.*t1286*t5143*t654 + t13685*t614*t7179)*t790 + t173*t614*(t11285 + t11286 + t14059 + t14061 + t14064 - 1.*t13685*t7179*t790);
  p_output1[150]=(t11285 + t14059 + t14064)*t173 - 1.*t14230*t614*t654 + t173*t614*(t11484 + t11488 + t173*t6433 - 1.*t5143*t654) + t654*(t11568 + t11584 + t173*t5143*t614 + t614*t6433*t654);
  p_output1[151]=t14230*t173*t790 + t654*(t10892 + t11667 + t13803 + t13823 - 1.*t13685*t614*t6759 - 1.*t6777*t790);
  p_output1[152]=t1286*t14230*t173 + t654*(t11884 + t11910 - 1.*t5336*t614 + t1286*t5143*t654 - 1.*t13685*t614*t7179 - 1.*t7247*t790);
  p_output1[153]=(t11978 + t14647 + t14658)*t2399 - 1.*t14605*t2477*t2635 + t2399*t2477*(t12016 + t12019 + t2635*t8491 - 1.*t2399*t9158) + t2635*(t12051 + t12059 - 1.*t2399*t2477*t8491 - 1.*t2477*t2635*t9158);
  p_output1[154]=t14605*t2399*t2784 + t2635*(t12260 + t12273 + t2938*t8467 - 1.*t2635*t2784*t8491 + t14751*t2477*t9214 + t2784*t9225);
  p_output1[155]=t14605*t2399*t2454 + t2635*(t12395 + t12398 + t14820 + t14838 + t14751*t2477*t9317 + t2784*t9321);
  p_output1[156]=-1.*t14951*t2454*t2635 - 1.*t14999*t2477*t2635 + t2399*t2477*(t12575 + t12576 - 1.*t2399*t2454*t8491 - 1.*t2454*t2635*t9158) + t2399*t2454*(t12785 + t12786 + t2399*t2477*t8491 + t2477*t2635*t9158);
  p_output1[157]=t14951*t2399*t2477 + t14999*t2399*t2784 + t2399*t2477*(t11978 + t12852 + t14647 + t14658 + t15063 + t14751*t2454*t9214) + t2399*t2454*(t12898 + t12917 + t15029 + t15043 + t2635*t2784*t8491 - 1.*t14751*t2477*t9214);
  p_output1[158]=t14999*t2399*t2454 + t14951*t2399*t2938 + t2399*t2477*(t13078 + t13081 + t15133 + t15138 - 1.*t2635*t2938*t8491 + t14751*t2454*t9317) + t2399*t2454*(t13105 + t13107 + t15096 + t15097 + t15100 - 1.*t14751*t2477*t9317);
  p_output1[159]=(t13105 + t15096 + t15100)*t2399 - 1.*t15165*t2454*t2635 + t2399*t2454*(t13363 + t13369 - 1.*t2635*t8491 + t2399*t9158) + t2635*(t13389 + t13396 + t2399*t2454*t8491 + t2454*t2635*t9158);
  p_output1[160]=t15165*t2399*t2477 + t2635*(t12527 + t13467 + t14936 + t14949 - 1.*t14751*t2454*t9214 - 1.*t2477*t9225);
  p_output1[161]=t15165*t2399*t2938 + t2635*(t13499 + t13507 - 1.*t2454*t8467 + t2635*t2938*t8491 - 1.*t14751*t2454*t9317 - 1.*t2477*t9321);
  p_output1[162]=-0.2255*t1286 - 0.1575*t790;
  p_output1[163]=-0.1575*t1286 - 0.2255*t790;
  p_output1[164]=t1286*t15898 + t1042*t16021 + t1042*(t13569 + t13988 + t614*t6759 + t5104*t790) + t790*(t13944 + t13946 - 1.*t1042*t5104 - 1.*t6759*t790);
  p_output1[165]=t16021*t614 + t1042*(t14135 + t14158 + t1286*t5104 + t614*t7179) + t15898*t790 + t790*(t14061 + t14064 - 1.*t5104*t614 - 1.*t7179*t790);
  p_output1[166]=0.068*t1042;
  p_output1[167]=0.068*t614;
  p_output1[168]=0.325*t378 - 1.*t378*t5100 - 1.*t378*t7157;
  p_output1[169]=0.325*t568 - 1.*t5100*t568 - 1.*t568*t7157;
  p_output1[170]=0.1575*t2477 + 0.2255*t2938;
  p_output1[171]=0.2255*t2477 + 0.1575*t2938;
  p_output1[172]=t16612*t2784 + t16193*t2938 + t2784*(t14647 + t15063 + t2477*t8395 + t2454*t9214) + t2477*(t15029 + t15043 - 1.*t2784*t8395 - 1.*t2477*t9214);
  p_output1[173]=t16612*t2454 + t16193*t2477 + t2784*(t15133 + t15138 + t2938*t8395 + t2454*t9317) + t2477*(t15097 + t15100 - 1.*t2454*t8395 - 1.*t2477*t9317);
  p_output1[174]=-0.068*t2784;
  p_output1[175]=-0.068*t2454;
  p_output1[176]=-0.325*t2421 - 1.*t2421*t8391 - 1.*t2421*t9315;
  p_output1[177]=-0.325*t2447 - 1.*t2447*t8391 - 1.*t2447*t9315;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
