/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 18:25:48 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t433;
  double t514;
  double t530;
  double t568;
  double t573;
  double t610;
  double t614;
  double t173;
  double t695;
  double t654;
  double t640;
  double t715;
  double t725;
  double t732;
  double t378;
  double t627;
  double t1065;
  double t1081;
  double t1088;
  double t971;
  double t979;
  double t983;
  double t987;
  double t1015;
  double t1040;
  double t668;
  double t756;
  double t775;
  double t2692;
  double t2646;
  double t2648;
  double t2703;
  double t2674;
  double t2727;
  double t2748;
  double t2770;
  double t2760;
  double t2764;
  double t2767;
  double t2595;
  double t3419;
  double t3479;
  double t3506;
  double t3234;
  double t3266;
  double t3277;
  double t3326;
  double t3330;
  double t3335;
  double t2769;
  double t2858;
  double t2878;
  double t626;
  double t790;
  double t842;
  double t4255;
  double t4502;
  double t856;
  double t868;
  double t880;
  double t1817;
  double t1851;
  double t1852;
  double t1286;
  double t1325;
  double t1359;
  double t1482;
  double t1520;
  double t1559;
  double t5003;
  double t5088;
  double t5143;
  double t1866;
  double t1868;
  double t1899;
  double t2272;
  double t2276;
  double t2368;
  double t4268;
  double t4282;
  double t4295;
  double t2757;
  double t2895;
  double t2944;
  double t2948;
  double t3073;
  double t3082;
  double t3849;
  double t3873;
  double t3881;
  double t3591;
  double t3631;
  double t3636;
  double t3668;
  double t3684;
  double t3688;
  double t7272;
  double t7274;
  double t7275;
  double t3888;
  double t3908;
  double t3929;
  double t4033;
  double t4047;
  double t4054;
  double t7143;
  double t7157;
  double t7169;
  double t7135;
  double t7136;
  double t7139;
  double t4583;
  double t4640;
  double t4656;
  double t4883;
  double t4884;
  double t4891;
  double t5407;
  double t5408;
  double t5409;
  double t5438;
  double t5458;
  double t5478;
  double t5710;
  double t5734;
  double t5789;
  double t6018;
  double t6020;
  double t6060;
  double t5216;
  double t5247;
  double t5300;
  double t6074;
  double t6091;
  double t6097;
  double t7005;
  double t7013;
  double t7017;
  double t7106;
  double t7107;
  double t7110;
  double t7113;
  double t7115;
  double t7118;
  double t8784;
  double t8788;
  double t8792;
  double t7179;
  double t7194;
  double t7213;
  double t7247;
  double t7263;
  double t7265;
  double t7281;
  double t7282;
  double t7284;
  double t7287;
  double t7289;
  double t7290;
  double t7300;
  double t7302;
  double t7304;
  double t7346;
  double t7360;
  double t7376;
  double t7277;
  double t7278;
  double t7279;
  double t7661;
  double t7668;
  double t7843;
  double t8482;
  double t8488;
  double t8491;
  double t8580;
  double t8676;
  double t8696;
  double t8757;
  double t8763;
  double t8769;
  double t10827;
  double t10828;
  double t10835;
  double t10847;
  double t10860;
  double t10861;
  double t10867;
  double t10868;
  double t10907;
  double t10819;
  double t10841;
  double t10909;
  double t11013;
  double t10794;
  double t10795;
  double t10809;
  double t10812;
  double t11078;
  double t11124;
  double t11229;
  double t11231;
  double t11232;
  double t11247;
  double t11248;
  double t11278;
  double t11286;
  double t11288;
  double t11296;
  double t11298;
  double t11306;
  double t11405;
  double t11420;
  double t11478;
  double t11501;
  double t954;
  double t1042;
  double t1051;
  double t11584;
  double t11586;
  double t11591;
  double t11780;
  double t11844;
  double t11884;
  double t12051;
  double t12061;
  double t12071;
  double t11627;
  double t11632;
  double t11667;
  double t12026;
  double t12042;
  double t12073;
  double t12225;
  double t12576;
  double t12649;
  double t12658;
  double t12254;
  double t12284;
  double t12315;
  double t12323;
  double t1930;
  double t2098;
  double t2191;
  double t1668;
  double t1741;
  double t1783;
  double t12968;
  double t12970;
  double t12989;
  double t13081;
  double t13082;
  double t13105;
  double t13107;
  double t13110;
  double t13052;
  double t13097;
  double t13098;
  double t2236;
  double t2373;
  double t2420;
  double t13363;
  double t13369;
  double t13379;
  double t13389;
  double t13396;
  double t13401;
  double t13440;
  double t13452;
  double t13459;
  double t13515;
  double t13521;
  double t13531;
  double t13492;
  double t13494;
  double t13507;
  double t13460;
  double t13467;
  double t13473;
  double t2435;
  double t2438;
  double t2449;
  double t13730;
  double t13732;
  double t13735;
  double t13728;
  double t13742;
  double t13744;
  double t13745;
  double t13746;
  double t13751;
  double t13752;
  double t13758;
  double t13874;
  double t13877;
  double t13886;
  double t13829;
  double t13844;
  double t13848;
  double t13763;
  double t13776;
  double t13777;
  double t14018;
  double t14059;
  double t14064;
  double t14144;
  double t14258;
  double t14292;
  double t14315;
  double t14346;
  double t920;
  double t938;
  double t941;
  double t1140;
  double t1400;
  double t1426;
  double t15422;
  double t15427;
  double t15434;
  double t15889;
  double t15896;
  double t15898;
  double t15903;
  double t15924;
  double t13114;
  double t3163;
  double t3367;
  double t3382;
  double t16701;
  double t16710;
  double t16728;
  double t16738;
  double t16739;
  double t16740;
  double t16741;
  double t16743;
  double t16746;
  double t16700;
  double t16731;
  double t16774;
  double t16788;
  double t16699;
  double t16789;
  double t16797;
  double t16862;
  double t16876;
  double t16880;
  double t16962;
  double t16963;
  double t16964;
  double t16967;
  double t16970;
  double t16982;
  double t17011;
  double t17026;
  double t17039;
  double t17079;
  double t17081;
  double t17090;
  double t17652;
  double t17663;
  double t17707;
  double t17350;
  double t17568;
  double t17571;
  double t17281;
  double t17296;
  double t17327;
  double t16833;
  double t17091;
  double t17273;
  double t17904;
  double t17910;
  double t17911;
  double t18474;
  double t18476;
  double t18483;
  double t17946;
  double t17971;
  double t17976;
  double t18150;
  double t18252;
  double t18255;
  double t18428;
  double t18432;
  double t3958;
  double t3969;
  double t3995;
  double t18884;
  double t18902;
  double t18903;
  double t18935;
  double t19031;
  double t3709;
  double t3815;
  double t3830;
  double t19036;
  double t19063;
  double t19069;
  double t19085;
  double t19087;
  double t19102;
  double t4025;
  double t4066;
  double t4104;
  double t19250;
  double t19251;
  double t19288;
  double t19298;
  double t19307;
  double t19327;
  double t19362;
  double t19396;
  double t19437;
  double t19255;
  double t19334;
  double t19344;
  double t19356;
  double t19484;
  double t19485;
  double t19499;
  double t19527;
  double t19528;
  double t4126;
  double t4160;
  double t4203;
  double t20008;
  double t20016;
  double t20036;
  double t19865;
  double t20094;
  double t20100;
  double t20120;
  double t20162;
  double t20281;
  double t20311;
  double t20319;
  double t20106;
  double t20163;
  double t20165;
  double t20280;
  double t20325;
  double t20342;
  double t20372;
  double t20411;
  double t20430;
  double t20505;
  double t20506;
  double t20507;
  double t20631;
  double t20753;
  double t20756;
  double t20757;
  double t20779;
  double t3123;
  double t3141;
  double t3154;
  double t3532;
  double t3647;
  double t3663;
  double t21678;
  double t21679;
  double t21680;
  double t22240;
  double t22305;
  double t22342;
  double t22427;
  double t22620;
  double t12737;
  double t12869;
  double t12936;
  double t23878;
  double t23903;
  double t23906;
  double t13113;
  double t13122;
  double t23976;
  double t24005;
  double t24050;
  double t13185;
  double t13263;
  double t13534;
  double t13550;
  double t13557;
  double t13944;
  double t24495;
  double t14054;
  double t14546;
  double t14584;
  double t24517;
  double t24524;
  double t14889;
  double t14912;
  double t24779;
  double t14992;
  double t15014;
  double t24791;
  double t24853;
  double t24859;
  double t15056;
  double t15063;
  double t15170;
  double t15238;
  double t15272;
  double t15360;
  double t15368;
  double t15425;
  double t16128;
  double t16161;
  double t16165;
  double t25454;
  double t25457;
  double t25487;
  double t25494;
  double t25496;
  double t16184;
  double t16192;
  double t24188;
  double t25520;
  double t16204;
  double t16218;
  double t16253;
  double t16260;
  double t16543;
  double t16673;
  double t16674;
  double t18531;
  double t18762;
  double t18772;
  double t26194;
  double t26197;
  double t26201;
  double t18932;
  double t19081;
  double t19188;
  double t19192;
  double t26244;
  double t26251;
  double t26274;
  double t19346;
  double t19623;
  double t19704;
  double t20166;
  double t26522;
  double t20502;
  double t20788;
  double t20795;
  double t26585;
  double t26589;
  double t20868;
  double t20871;
  double t20965;
  double t20992;
  double t26651;
  double t21161;
  double t21164;
  double t26662;
  double t26664;
  double t26668;
  double t21459;
  double t21484;
  double t21504;
  double t21596;
  double t21611;
  double t21674;
  double t22674;
  double t22822;
  double t22829;
  double t27240;
  double t27257;
  double t27274;
  double t27276;
  double t27280;
  double t22924;
  double t22957;
  double t23006;
  double t23063;
  double t27295;
  double t23221;
  double t23249;
  double t23562;
  double t23602;
  double t23607;
  double t24228;
  double t24233;
  double t24257;
  double t24264;
  double t27728;
  double t27731;
  double t24493;
  double t24496;
  double t24523;
  double t27861;
  double t25197;
  double t25199;
  double t25231;
  double t25232;
  double t27882;
  double t27885;
  double t27913;
  double t27914;
  double t27917;
  double t27920;
  double t25385;
  double t25409;
  double t25335;
  double t27806;
  double t27810;
  double t25455;
  double t25428;
  double t25432;
  double t25639;
  double t25642;
  double t25741;
  double t25749;
  double t28003;
  double t28007;
  double t28035;
  double t28036;
  double t25989;
  double t26092;
  double t26112;
  double t26343;
  double t26358;
  double t26429;
  double t26436;
  double t28137;
  double t28140;
  double t26509;
  double t26526;
  double t26586;
  double t28190;
  double t26697;
  double t26700;
  double t26890;
  double t26896;
  double t28283;
  double t28297;
  double t28382;
  double t28383;
  double t28384;
  double t28386;
  double t27131;
  double t27139;
  double t27082;
  double t28178;
  double t28181;
  double t27250;
  double t27223;
  double t27225;
  double t27309;
  double t27456;
  double t27533;
  double t27534;
  double t28433;
  double t28440;
  double t28462;
  double t28463;
  double t27640;
  double t27703;
  double t27706;
  double t27931;
  double t27934;
  double t27991;
  double t28670;
  double t28671;
  double t28687;
  double t28688;
  double t28004;
  double t28019;
  double t28025;
  double t28401;
  double t28402;
  double t28418;
  double t28791;
  double t28799;
  double t28879;
  double t28891;
  double t28438;
  double t28447;
  double t28456;
  t433 = Cos(var1[8]);
  t514 = Sin(var1[7]);
  t530 = t433*t514;
  t568 = Cos(var1[7]);
  t573 = Sin(var1[8]);
  t610 = -1.*t568*t573;
  t614 = t530 + t610;
  t173 = Cos(var1[4]);
  t695 = Cos(var1[5]);
  t654 = Sin(var1[6]);
  t640 = Sin(var1[5]);
  t715 = t568*t433;
  t725 = t514*t573;
  t732 = t715 + t725;
  t378 = Cos(var1[6]);
  t627 = Sin(var1[4]);
  t1065 = -1.*t568*t433;
  t1081 = -1.*t514*t573;
  t1088 = t1065 + t1081;
  t971 = -1.*t433*t514;
  t979 = t568*t573;
  t983 = t971 + t979;
  t987 = t695*t983;
  t1015 = t640*t654*t732;
  t1040 = t987 + t1015;
  t668 = t640*t654*t614;
  t756 = t695*t732;
  t775 = t668 + t756;
  t2692 = Cos(var1[10]);
  t2646 = Cos(var1[11]);
  t2648 = Sin(var1[10]);
  t2703 = Sin(var1[11]);
  t2674 = t2646*t2648;
  t2727 = -1.*t2692*t2703;
  t2748 = t2674 + t2727;
  t2770 = Sin(var1[9]);
  t2760 = t2692*t2646;
  t2764 = t2648*t2703;
  t2767 = t2760 + t2764;
  t2595 = Cos(var1[9]);
  t3419 = -1.*t2692*t2646;
  t3479 = -1.*t2648*t2703;
  t3506 = t3419 + t3479;
  t3234 = -1.*t2646*t2648;
  t3266 = t2692*t2703;
  t3277 = t3234 + t3266;
  t3326 = t695*t3277;
  t3330 = t2770*t2767*t640;
  t3335 = t3326 + t3330;
  t2769 = t695*t2767;
  t2858 = t2770*t2748*t640;
  t2878 = t2769 + t2858;
  t626 = t173*t378*t614;
  t790 = -1.*t627*t775;
  t842 = t626 + t790;
  t4255 = Sin(var1[3]);
  t4502 = Cos(var1[3]);
  t856 = t695*t654*t614;
  t868 = -1.*t640*t732;
  t880 = t856 + t868;
  t1817 = t173*t378*t732;
  t1851 = -1.*t627*t1040;
  t1852 = t1817 + t1851;
  t1286 = t695*t614;
  t1325 = t640*t654*t1088;
  t1359 = t1286 + t1325;
  t1482 = t378*t627*t640;
  t1520 = t173*t654;
  t1559 = t1482 + t1520;
  t5003 = t640*t983;
  t5088 = -1.*t695*t654*t732;
  t5143 = t5003 + t5088;
  t1866 = -1.*t640*t983;
  t1868 = t695*t654*t732;
  t1899 = t1866 + t1868;
  t2272 = t640*t654*t983;
  t2276 = t695*t1088;
  t2368 = t2272 + t2276;
  t4268 = -1.*t695*t654*t614;
  t4282 = t640*t732;
  t4295 = t4268 + t4282;
  t2757 = t2595*t173*t2748;
  t2895 = -1.*t627*t2878;
  t2944 = t2757 + t2895;
  t2948 = t695*t2770*t2748;
  t3073 = -1.*t2767*t640;
  t3082 = t2948 + t3073;
  t3849 = t2595*t173*t2767;
  t3873 = -1.*t627*t3335;
  t3881 = t3849 + t3873;
  t3591 = t695*t2748;
  t3631 = t2770*t3506*t640;
  t3636 = t3591 + t3631;
  t3668 = t173*t2770;
  t3684 = t2595*t627*t640;
  t3688 = t3668 + t3684;
  t7272 = -1.*t695*t2770*t2767;
  t7274 = t3277*t640;
  t7275 = t7272 + t7274;
  t3888 = t695*t2770*t2767;
  t3908 = -1.*t3277*t640;
  t3929 = t3888 + t3908;
  t4033 = t695*t3506;
  t4047 = t2770*t3277*t640;
  t4054 = t4033 + t4047;
  t7143 = -1.*t695*t2770*t2748;
  t7157 = t2767*t640;
  t7169 = t7143 + t7157;
  t7135 = t4502*t4295;
  t7136 = -1.*t4255*t842;
  t7139 = t7135 + t7136;
  t4583 = -1.*t378*t627*t614;
  t4640 = -1.*t173*t775;
  t4656 = t4583 + t4640;
  t4883 = -1.*t378*t627*t640*t614;
  t4884 = -1.*t173*t654*t614;
  t4891 = t4883 + t4884;
  t5407 = t640*t614;
  t5408 = -1.*t695*t654*t1088;
  t5409 = t5407 + t5408;
  t5438 = t173*t378*t1088;
  t5458 = -1.*t627*t1359;
  t5478 = t5438 + t5458;
  t5710 = t173*t378*t640;
  t5734 = -1.*t627*t654;
  t5789 = t5710 + t5734;
  t6018 = t173*t378;
  t6020 = -1.*t627*t640*t654;
  t6060 = t6018 + t6020;
  t5216 = t4502*t5143;
  t5247 = -1.*t4255*t1852;
  t5300 = t5216 + t5247;
  t6074 = -1.*t378*t627*t732;
  t6091 = -1.*t173*t1040;
  t6097 = t6074 + t6091;
  t7005 = -1.*t378*t627*t640*t732;
  t7013 = -1.*t173*t654*t732;
  t7017 = t7005 + t7013;
  t7106 = -1.*t695*t654*t983;
  t7107 = t640*t1088;
  t7110 = t7106 + t7107;
  t7113 = t173*t378*t983;
  t7115 = -1.*t627*t2368;
  t7118 = t7113 + t7115;
  t8784 = t4502*t7169;
  t8788 = -1.*t4255*t2944;
  t8792 = t8784 + t8788;
  t7179 = -1.*t2595*t2748*t627;
  t7194 = -1.*t173*t2878;
  t7213 = t7179 + t7194;
  t7247 = -1.*t173*t2770*t2748;
  t7263 = -1.*t2595*t2748*t627*t640;
  t7265 = t7247 + t7263;
  t7281 = -1.*t695*t2770*t3506;
  t7282 = t2748*t640;
  t7284 = t7281 + t7282;
  t7287 = t2595*t173*t3506;
  t7289 = -1.*t627*t3636;
  t7290 = t7287 + t7289;
  t7300 = -1.*t2770*t627;
  t7302 = t2595*t173*t640;
  t7304 = t7300 + t7302;
  t7346 = t2595*t173;
  t7360 = -1.*t2770*t627*t640;
  t7376 = t7346 + t7360;
  t7277 = t4502*t7275;
  t7278 = -1.*t4255*t3881;
  t7279 = t7277 + t7278;
  t7661 = -1.*t2595*t2767*t627;
  t7668 = -1.*t173*t3335;
  t7843 = t7661 + t7668;
  t8482 = -1.*t173*t2770*t2767;
  t8488 = -1.*t2595*t2767*t627*t640;
  t8491 = t8482 + t8488;
  t8580 = -1.*t695*t2770*t3277;
  t8676 = t3506*t640;
  t8696 = t8580 + t8676;
  t8757 = t2595*t173*t3277;
  t8763 = -1.*t627*t4054;
  t8769 = t8757 + t8763;
  t10827 = -0.0641*t433;
  t10828 = -0.28*t573;
  t10835 = t10827 + t10828;
  t10847 = -1.*t433;
  t10860 = 1. + t10847;
  t10861 = 0.075*t10860;
  t10867 = 0.355*t433;
  t10868 = -0.0641*t573;
  t10907 = t10861 + t10867 + t10868;
  t10819 = -0.325*t514;
  t10841 = t568*t10835;
  t10909 = t514*t10907;
  t11013 = t10819 + t10841 + t10909;
  t10794 = -1.*t378;
  t10795 = 1. + t10794;
  t10809 = 0.1575*t10795;
  t10812 = 0.2255*t378;
  t11078 = -1.*t654*t11013;
  t11124 = t10809 + t10812 + t11078;
  t11229 = -1.*t640*t11124;
  t11231 = -1.*t568;
  t11232 = 1. + t11231;
  t11247 = 0.325*t11232;
  t11248 = -1.*t514*t10835;
  t11278 = t568*t10907;
  t11286 = t11247 + t11248 + t11278;
  t11288 = t695*t11286;
  t11296 = t11229 + t11288;
  t11298 = -1.*t627*t11296;
  t11306 = 0.068*t654;
  t11405 = t378*t11013;
  t11420 = t11306 + t11405;
  t11478 = t173*t11420;
  t11501 = t11298 + t11478;
  t954 = t378*t627*t732;
  t1042 = t173*t1040;
  t1051 = t954 + t1042;
  t11584 = -1.*t173*t378*t640;
  t11586 = t627*t654;
  t11591 = t11584 + t11586;
  t11780 = t173*t11296;
  t11844 = t627*t11420;
  t11884 = t11780 + t11844;
  t12051 = t695*t11124;
  t12061 = t640*t11286;
  t12071 = t12051 + t12061;
  t11627 = -1.*t173*t11296;
  t11632 = -1.*t627*t11420;
  t11667 = t11627 + t11632;
  t12026 = -1.*t1559*t11501;
  t12042 = -1.*t11591*t11884;
  t12073 = -1.*t695*t378*t12071;
  t12225 = t12026 + t12042 + t12073;
  t12576 = -1.*t695*t11124;
  t12649 = -1.*t640*t11286;
  t12658 = t12576 + t12649;
  t12254 = t12071*t5143;
  t12284 = t11884*t1051;
  t12315 = t11501*t1852;
  t12323 = t12254 + t12284 + t12315;
  t1930 = t173*t378*t640*t732;
  t2098 = -1.*t627*t654*t732;
  t2191 = t1930 + t2098;
  t1668 = t378*t627;
  t1741 = t173*t640*t654;
  t1783 = t1668 + t1741;
  t12968 = -0.068*t654;
  t12970 = -1.*t378*t11013;
  t12989 = t12968 + t12970;
  t13081 = 0.068*t378;
  t13082 = t13081 + t11078;
  t13105 = -1.*t173*t640*t12989;
  t13107 = t627*t13082;
  t13110 = t13105 + t13107;
  t13052 = t627*t640*t12989;
  t13097 = t173*t13082;
  t13098 = t13052 + t13097;
  t2236 = t378*t627*t983;
  t2373 = t173*t2368;
  t2420 = t2236 + t2373;
  t13363 = -0.325*t568;
  t13369 = t13363 + t11248 + t11278;
  t13379 = t640*t654*t13369;
  t13389 = 0.325*t514;
  t13396 = -1.*t568*t10835;
  t13401 = -1.*t514*t10907;
  t13440 = t13389 + t13396 + t13401;
  t13452 = t695*t13440;
  t13459 = t13379 + t13452;
  t13515 = -1.*t695*t654*t13369;
  t13521 = t640*t13440;
  t13531 = t13515 + t13521;
  t13492 = t173*t13459;
  t13494 = t378*t627*t13369;
  t13507 = t13492 + t13494;
  t13460 = -1.*t627*t13459;
  t13467 = t173*t378*t13369;
  t13473 = t13460 + t13467;
  t2435 = t378*t627*t614;
  t2438 = t173*t775;
  t2449 = t2435 + t2438;
  t13730 = -0.28*t433;
  t13732 = 0.0641*t573;
  t13735 = t13730 + t13732;
  t13728 = t514*t10835;
  t13742 = t568*t13735;
  t13744 = t13728 + t13742;
  t13745 = t640*t654*t13744;
  t13746 = -1.*t514*t13735;
  t13751 = t10841 + t13746;
  t13752 = t695*t13751;
  t13758 = t13745 + t13752;
  t13874 = -1.*t695*t654*t13744;
  t13877 = t640*t13751;
  t13886 = t13874 + t13877;
  t13829 = t173*t13758;
  t13844 = t378*t627*t13744;
  t13848 = t13829 + t13844;
  t13763 = -1.*t627*t13758;
  t13776 = t173*t378*t13744;
  t13777 = t13763 + t13776;
  t14018 = t12071*t4295;
  t14059 = t11884*t2449;
  t14064 = t11501*t842;
  t14144 = t14018 + t14059 + t14064;
  t14258 = -1.*t12071*t5143;
  t14292 = -1.*t11884*t1051;
  t14315 = -1.*t11501*t1852;
  t14346 = t14258 + t14292 + t14315;
  t920 = t173*t378*t640*t614;
  t938 = -1.*t627*t654*t614;
  t941 = t920 + t938;
  t1140 = t378*t627*t1088;
  t1400 = t173*t1359;
  t1426 = t1140 + t1400;
  t15422 = -1.*t12071*t4295;
  t15427 = -1.*t11884*t2449;
  t15434 = -1.*t11501*t842;
  t15889 = t1559*t11501;
  t15896 = t11591*t11884;
  t15898 = t695*t378*t12071;
  t15903 = t15889 + t15896 + t15898;
  t15924 = t15422 + t15427 + t15434;
  t13114 = Power(t695,2);
  t3163 = t2595*t2767*t627;
  t3367 = t173*t3335;
  t3382 = t3163 + t3367;
  t16701 = -0.0641*t2646;
  t16710 = -0.28*t2703;
  t16728 = t16701 + t16710;
  t16738 = -1.*t2646;
  t16739 = 1. + t16738;
  t16740 = -0.575*t16739;
  t16741 = -0.295*t2646;
  t16743 = -0.0641*t2703;
  t16746 = t16740 + t16741 + t16743;
  t16700 = 0.325*t2648;
  t16731 = t2692*t16728;
  t16774 = t2648*t16746;
  t16788 = t16700 + t16731 + t16774;
  t16699 = 0.068*t2770;
  t16789 = t2595*t16788;
  t16797 = t16699 + t16789;
  t16862 = -1.*t2692;
  t16876 = 1. + t16862;
  t16880 = -0.325*t16876;
  t16962 = -1.*t2648*t16728;
  t16963 = t2692*t16746;
  t16964 = t16880 + t16962 + t16963;
  t16967 = t695*t16964;
  t16970 = -1.*t2595;
  t16982 = 1. + t16970;
  t17011 = 0.1575*t16982;
  t17026 = 0.2255*t2595;
  t17039 = -1.*t2770*t16788;
  t17079 = t17011 + t17026 + t17039;
  t17081 = -1.*t17079*t640;
  t17090 = t16967 + t17081;
  t17652 = t173*t16797;
  t17663 = -1.*t627*t17090;
  t17707 = t17652 + t17663;
  t17350 = t2770*t627;
  t17568 = -1.*t2595*t173*t640;
  t17571 = t17350 + t17568;
  t17281 = t16797*t627;
  t17296 = t173*t17090;
  t17327 = t17281 + t17296;
  t16833 = -1.*t16797*t627;
  t17091 = -1.*t173*t17090;
  t17273 = t16833 + t17091;
  t17904 = t695*t17079;
  t17910 = t16964*t640;
  t17911 = t17904 + t17910;
  t18474 = -1.*t695*t17079;
  t18476 = -1.*t16964*t640;
  t18483 = t18474 + t18476;
  t17946 = -1.*t2595*t695*t17911;
  t17971 = -1.*t17571*t17327;
  t17976 = -1.*t3688*t17707;
  t18150 = t17946 + t17971 + t17976;
  t18252 = t17911*t7275;
  t18255 = t17327*t3382;
  t18428 = t17707*t3881;
  t18432 = t18252 + t18255 + t18428;
  t3958 = -1.*t2770*t2767*t627;
  t3969 = t2595*t173*t2767*t640;
  t3995 = t3958 + t3969;
  t18884 = -0.068*t2770;
  t18902 = -1.*t2595*t16788;
  t18903 = t18884 + t18902;
  t18935 = 0.068*t2595;
  t19031 = t18935 + t17039;
  t3709 = t2595*t627;
  t3815 = t173*t2770*t640;
  t3830 = t3709 + t3815;
  t19036 = t19031*t627;
  t19063 = -1.*t173*t18903*t640;
  t19069 = t19036 + t19063;
  t19085 = t173*t19031;
  t19087 = t18903*t627*t640;
  t19102 = t19085 + t19087;
  t4025 = t2595*t3277*t627;
  t4066 = t173*t4054;
  t4104 = t4025 + t4066;
  t19250 = 0.325*t2692;
  t19251 = t19250 + t16962 + t16963;
  t19288 = -0.325*t2648;
  t19298 = -1.*t2692*t16728;
  t19307 = -1.*t2648*t16746;
  t19327 = t19288 + t19298 + t19307;
  t19362 = t695*t19327;
  t19396 = t2770*t19251*t640;
  t19437 = t19362 + t19396;
  t19255 = -1.*t695*t2770*t19251;
  t19334 = t19327*t640;
  t19344 = t19255 + t19334;
  t19356 = t2595*t19251*t627;
  t19484 = t173*t19437;
  t19485 = t19356 + t19484;
  t19499 = t2595*t173*t19251;
  t19527 = -1.*t627*t19437;
  t19528 = t19499 + t19527;
  t4126 = t2595*t2748*t627;
  t4160 = t173*t2878;
  t4203 = t4126 + t4160;
  t20008 = -0.28*t2646;
  t20016 = 0.0641*t2703;
  t20036 = t20008 + t20016;
  t19865 = t2648*t16728;
  t20094 = t2692*t20036;
  t20100 = t19865 + t20094;
  t20120 = -1.*t2648*t20036;
  t20162 = t16731 + t20120;
  t20281 = t695*t20162;
  t20311 = t2770*t20100*t640;
  t20319 = t20281 + t20311;
  t20106 = -1.*t695*t2770*t20100;
  t20163 = t20162*t640;
  t20165 = t20106 + t20163;
  t20280 = t2595*t20100*t627;
  t20325 = t173*t20319;
  t20342 = t20280 + t20325;
  t20372 = t2595*t173*t20100;
  t20411 = -1.*t627*t20319;
  t20430 = t20372 + t20411;
  t20505 = t17911*t7169;
  t20506 = t17327*t4203;
  t20507 = t17707*t2944;
  t20631 = t20505 + t20506 + t20507;
  t20753 = -1.*t17911*t7275;
  t20756 = -1.*t17327*t3382;
  t20757 = -1.*t17707*t3881;
  t20779 = t20753 + t20756 + t20757;
  t3123 = -1.*t2770*t2748*t627;
  t3141 = t2595*t173*t2748*t640;
  t3154 = t3123 + t3141;
  t3532 = t2595*t3506*t627;
  t3647 = t173*t3636;
  t3663 = t3532 + t3647;
  t21678 = -1.*t17911*t7169;
  t21679 = -1.*t17327*t4203;
  t21680 = -1.*t17707*t2944;
  t22240 = t2595*t695*t17911;
  t22305 = t17571*t17327;
  t22342 = t3688*t17707;
  t22427 = t22240 + t22305 + t22342;
  t22620 = t21678 + t21679 + t21680;
  t12737 = t378*t640*t12071;
  t12869 = t11296*t5143;
  t12936 = t12071*t1040;
  t23878 = t378*t640*t11296;
  t23903 = -1.*t654*t11420;
  t23906 = t23878 + t12073 + t23903;
  t13113 = t695*t654*t12071;
  t13122 = -1.*t13114*t378*t12989;
  t23976 = t378*t11420*t732;
  t24005 = t11296*t1040;
  t24050 = t23976 + t12254 + t24005;
  t13185 = -1.*t695*t378*t12071*t732;
  t13263 = t695*t12989*t5143;
  t13534 = -1.*t695*t378*t13531;
  t13550 = t12071*t7110;
  t13557 = t13531*t5143;
  t13944 = -1.*t695*t378*t13886;
  t24495 = Power(t378,2);
  t14054 = t13886*t5143;
  t14546 = t12071*t775;
  t14584 = t11296*t4295;
  t24517 = t378*t11420*t614;
  t24524 = t11296*t775;
  t14889 = -1.*t11296*t5143;
  t14912 = -1.*t12071*t1040;
  t24779 = t24517 + t24524 + t14018;
  t14992 = -1.*t695*t378*t12071*t614;
  t15014 = t695*t12989*t4295;
  t24791 = -1.*t378*t11420*t732;
  t24853 = -1.*t11296*t1040;
  t24859 = t24791 + t14258 + t24853;
  t15056 = t695*t378*t12071*t732;
  t15063 = -1.*t695*t12989*t5143;
  t15170 = t13531*t4295;
  t15238 = -1.*t12071*t7110;
  t15272 = -1.*t13531*t5143;
  t15360 = t12071*t5409;
  t15368 = t13886*t4295;
  t15425 = -1.*t13886*t5143;
  t16128 = -1.*t378*t640*t12071;
  t16161 = -1.*t12071*t775;
  t16165 = -1.*t11296*t4295;
  t25454 = -1.*t378*t11420*t614;
  t25457 = -1.*t11296*t775;
  t25487 = -1.*t378*t640*t11296;
  t25494 = t654*t11420;
  t25496 = t25487 + t15898 + t25494;
  t16184 = -1.*t695*t654*t12071;
  t16192 = t13114*t378*t12989;
  t24188 = Power(t640,2);
  t25520 = t25454 + t25457 + t15422;
  t16204 = t695*t378*t12071*t614;
  t16218 = -1.*t695*t12989*t4295;
  t16253 = t695*t378*t13531;
  t16260 = -1.*t13531*t4295;
  t16543 = t695*t378*t13886;
  t16673 = -1.*t12071*t5409;
  t16674 = -1.*t13886*t4295;
  t18531 = t2595*t640*t17911;
  t18762 = t17090*t7275;
  t18772 = t17911*t3335;
  t26194 = -1.*t2770*t16797;
  t26197 = t2595*t640*t17090;
  t26201 = t26194 + t26197 + t17946;
  t18932 = -1.*t2595*t13114*t18903;
  t19081 = t695*t2770*t17911;
  t19188 = -1.*t2595*t695*t2767*t17911;
  t19192 = t695*t18903*t7275;
  t26244 = t2595*t16797*t2767;
  t26251 = t17090*t3335;
  t26274 = t26244 + t18252 + t26251;
  t19346 = -1.*t2595*t695*t19344;
  t19623 = t19344*t7275;
  t19704 = t17911*t8696;
  t20166 = -1.*t2595*t695*t20165;
  t26522 = Power(t2595,2);
  t20502 = t20165*t7275;
  t20788 = t17911*t2878;
  t20795 = t17090*t7169;
  t26585 = t2595*t16797*t2748;
  t26589 = t17090*t2878;
  t20868 = -1.*t17090*t7275;
  t20871 = -1.*t17911*t3335;
  t20965 = -1.*t2595*t695*t2748*t17911;
  t20992 = t695*t18903*t7169;
  t26651 = t26585 + t26589 + t20505;
  t21161 = t2595*t695*t2767*t17911;
  t21164 = -1.*t695*t18903*t7275;
  t26662 = -1.*t2595*t16797*t2767;
  t26664 = -1.*t17090*t3335;
  t26668 = t26662 + t20753 + t26664;
  t21459 = t19344*t7169;
  t21484 = -1.*t19344*t7275;
  t21504 = -1.*t17911*t8696;
  t21596 = t17911*t7284;
  t21611 = t20165*t7169;
  t21674 = -1.*t20165*t7275;
  t22674 = -1.*t2595*t640*t17911;
  t22822 = -1.*t17911*t2878;
  t22829 = -1.*t17090*t7169;
  t27240 = -1.*t2595*t16797*t2748;
  t27257 = -1.*t17090*t2878;
  t27274 = t2770*t16797;
  t27276 = -1.*t2595*t640*t17090;
  t27280 = t27274 + t27276 + t22240;
  t22924 = t2595*t13114*t18903;
  t22957 = -1.*t695*t2770*t17911;
  t23006 = t2595*t695*t2748*t17911;
  t23063 = -1.*t695*t18903*t7169;
  t27295 = t27240 + t27257 + t21678;
  t23221 = t2595*t695*t19344;
  t23249 = -1.*t19344*t7169;
  t23562 = t2595*t695*t20165;
  t23602 = -1.*t17911*t7284;
  t23607 = -1.*t20165*t7169;
  t24228 = -1.*t378*t11420;
  t24233 = -1.*t654*t13082;
  t24257 = -1.*t654*t11420*t732;
  t24264 = t378*t13082*t732;
  t27728 = -1.*t378*t11124;
  t27731 = t23903 + t27728;
  t24493 = t378*t11420*t983;
  t24496 = t24495*t13369*t732;
  t24523 = t24495*t13744*t732;
  t27861 = Power(t654,2);
  t25197 = -1.*t654*t11420*t614;
  t25199 = t378*t13082*t614;
  t25231 = t654*t11420*t732;
  t25232 = -1.*t378*t13082*t732;
  t27882 = -1.*t654*t11124*t614;
  t27885 = t11286*t732;
  t27913 = -1.*t11286*t983;
  t27914 = t654*t11124*t732;
  t27917 = t27913 + t24791 + t27914;
  t27920 = t24517 + t27882 + t27885;
  t25385 = -1.*t378*t11420*t983;
  t25409 = -1.*t24495*t13369*t732;
  t25335 = t24495*t13369*t614;
  t27806 = t11286*t983;
  t27810 = -1.*t654*t11124*t732;
  t25455 = -1.*t24495*t13744*t732;
  t25428 = t24495*t13744*t614;
  t25432 = t378*t11420*t1088;
  t25639 = t378*t11420;
  t25642 = t654*t13082;
  t25741 = t654*t11420*t614;
  t25749 = -1.*t378*t13082*t614;
  t28003 = t654*t11124*t614;
  t28007 = -1.*t11286*t732;
  t28035 = t378*t11124;
  t28036 = t25494 + t28035;
  t25989 = -1.*t24495*t13369*t614;
  t26092 = -1.*t24495*t13744*t614;
  t26112 = -1.*t378*t11420*t1088;
  t26343 = -1.*t2595*t16797;
  t26358 = -1.*t2770*t19031;
  t26429 = -1.*t2770*t16797*t2767;
  t26436 = t2595*t19031*t2767;
  t28137 = -1.*t2595*t17079;
  t28140 = t26194 + t28137;
  t26509 = t2595*t16797*t3277;
  t26526 = t26522*t19251*t2767;
  t26586 = t26522*t20100*t2767;
  t28190 = Power(t2770,2);
  t26697 = -1.*t2770*t16797*t2748;
  t26700 = t2595*t19031*t2748;
  t26890 = t2770*t16797*t2767;
  t26896 = -1.*t2595*t19031*t2767;
  t28283 = -1.*t2770*t17079*t2748;
  t28297 = t16964*t2767;
  t28382 = -1.*t16964*t3277;
  t28383 = t2770*t17079*t2767;
  t28384 = t28382 + t26662 + t28383;
  t28386 = t26585 + t28283 + t28297;
  t27131 = -1.*t2595*t16797*t3277;
  t27139 = -1.*t26522*t19251*t2767;
  t27082 = t26522*t19251*t2748;
  t28178 = t16964*t3277;
  t28181 = -1.*t2770*t17079*t2767;
  t27250 = -1.*t26522*t20100*t2767;
  t27223 = t26522*t20100*t2748;
  t27225 = t2595*t16797*t3506;
  t27309 = t2595*t16797;
  t27456 = t2770*t19031;
  t27533 = t2770*t16797*t2748;
  t27534 = -1.*t2595*t19031*t2748;
  t28433 = t2770*t17079*t2748;
  t28440 = -1.*t16964*t2767;
  t28462 = t2595*t17079;
  t28463 = t27274 + t28462;
  t27640 = -1.*t26522*t19251*t2748;
  t27703 = -1.*t26522*t20100*t2748;
  t27706 = -1.*t2595*t16797*t3506;
  t27931 = -1.*t13440*t983;
  t27934 = -1.*t11286*t1088;
  t27991 = t13440*t732;
  t28670 = t11013*t614;
  t28671 = t28670 + t27885;
  t28687 = -1.*t11013*t732;
  t28688 = t27913 + t28687;
  t28004 = -1.*t13751*t983;
  t28019 = t11286*t614;
  t28025 = t13751*t732;
  t28401 = -1.*t19327*t3277;
  t28402 = -1.*t16964*t3506;
  t28418 = t19327*t2767;
  t28791 = t16788*t2748;
  t28799 = t28791 + t28297;
  t28879 = -1.*t16788*t2767;
  t28891 = t28382 + t28879;
  t28438 = -1.*t20162*t3277;
  t28447 = t16964*t2748;
  t28456 = t20162*t2767;
  p_output1[0]=t842;
  p_output1[1]=t173*t880;
  p_output1[2]=t941;
  p_output1[3]=t1051;
  p_output1[4]=t1426;
  p_output1[5]=t1559;
  p_output1[6]=-1.*t173*t378*t695;
  p_output1[7]=t1783;
  p_output1[8]=t1852;
  p_output1[9]=t173*t1899;
  p_output1[10]=t2191;
  p_output1[11]=t2420;
  p_output1[12]=t2449;
  p_output1[13]=t2944;
  p_output1[14]=t173*t3082;
  p_output1[15]=t3154;
  p_output1[16]=t3382;
  p_output1[17]=t3663;
  p_output1[18]=t3688;
  p_output1[19]=-1.*t173*t2595*t695;
  p_output1[20]=t3830;
  p_output1[21]=t3881;
  p_output1[22]=t173*t3929;
  p_output1[23]=t3995;
  p_output1[24]=t4104;
  p_output1[25]=t4203;
  p_output1[26]=-1.*t4255*t4295 - 1.*t4502*t842;
  p_output1[27]=-1.*t4255*t4656;
  p_output1[28]=t4502*t775 + t4255*t627*t880;
  p_output1[29]=-1.*t4255*t4891 - 1.*t378*t4502*t614*t695;
  p_output1[30]=t5300;
  p_output1[31]=t4502*t5409 - 1.*t4255*t5478;
  p_output1[32]=-1.*t1559*t4502 - 1.*t378*t4255*t695;
  p_output1[33]=-1.*t4255*t5789;
  p_output1[34]=-1.*t378*t4502*t640 - 1.*t378*t4255*t627*t695;
  p_output1[35]=-1.*t4255*t6060 - 1.*t4502*t654*t695;
  p_output1[36]=-1.*t1852*t4502 - 1.*t4255*t5143;
  p_output1[37]=-1.*t4255*t6097;
  p_output1[38]=t1040*t4502 + t1899*t4255*t627;
  p_output1[39]=-1.*t4255*t7017 - 1.*t378*t4502*t695*t732;
  p_output1[40]=t4502*t7110 - 1.*t4255*t7118;
  p_output1[41]=t7139;
  p_output1[42]=-1.*t2944*t4502 - 1.*t4255*t7169;
  p_output1[43]=-1.*t4255*t7213;
  p_output1[44]=t2878*t4502 + t3082*t4255*t627;
  p_output1[45]=-1.*t2595*t2748*t4502*t695 - 1.*t4255*t7265;
  p_output1[46]=t7279;
  p_output1[47]=t4502*t7284 - 1.*t4255*t7290;
  p_output1[48]=-1.*t3688*t4502 - 1.*t2595*t4255*t695;
  p_output1[49]=-1.*t4255*t7304;
  p_output1[50]=-1.*t2595*t4502*t640 - 1.*t2595*t4255*t627*t695;
  p_output1[51]=-1.*t2770*t4502*t695 - 1.*t4255*t7376;
  p_output1[52]=-1.*t3881*t4502 - 1.*t4255*t7275;
  p_output1[53]=-1.*t4255*t7843;
  p_output1[54]=t3335*t4502 + t3929*t4255*t627;
  p_output1[55]=-1.*t2595*t2767*t4502*t695 - 1.*t4255*t8491;
  p_output1[56]=t4502*t8696 - 1.*t4255*t8769;
  p_output1[57]=t8792;
  p_output1[58]=t7139;
  p_output1[59]=t4502*t4656;
  p_output1[60]=t4255*t775 - 1.*t4502*t627*t880;
  p_output1[61]=t4502*t4891 - 1.*t378*t4255*t614*t695;
  p_output1[62]=t1852*t4502 + t4255*t5143;
  p_output1[63]=t4255*t5409 + t4502*t5478;
  p_output1[64]=-1.*t1559*t4255 + t378*t4502*t695;
  p_output1[65]=t4502*t5789;
  p_output1[66]=-1.*t378*t4255*t640 + t378*t4502*t627*t695;
  p_output1[67]=t4502*t6060 - 1.*t4255*t654*t695;
  p_output1[68]=t5300;
  p_output1[69]=t4502*t6097;
  p_output1[70]=t1040*t4255 - 1.*t1899*t4502*t627;
  p_output1[71]=t4502*t7017 - 1.*t378*t4255*t695*t732;
  p_output1[72]=t4255*t7110 + t4502*t7118;
  p_output1[73]=t4255*t4295 + t4502*t842;
  p_output1[74]=t8792;
  p_output1[75]=t4502*t7213;
  p_output1[76]=t2878*t4255 - 1.*t3082*t4502*t627;
  p_output1[77]=-1.*t2595*t2748*t4255*t695 + t4502*t7265;
  p_output1[78]=t3881*t4502 + t4255*t7275;
  p_output1[79]=t4255*t7284 + t4502*t7290;
  p_output1[80]=-1.*t3688*t4255 + t2595*t4502*t695;
  p_output1[81]=t4502*t7304;
  p_output1[82]=-1.*t2595*t4255*t640 + t2595*t4502*t627*t695;
  p_output1[83]=-1.*t2770*t4255*t695 + t4502*t7376;
  p_output1[84]=t7279;
  p_output1[85]=t4502*t7843;
  p_output1[86]=t3335*t4255 - 1.*t3929*t4502*t627;
  p_output1[87]=-1.*t2595*t2767*t4255*t695 + t4502*t8491;
  p_output1[88]=t4255*t8696 + t4502*t8769;
  p_output1[89]=t2944*t4502 + t4255*t7169;
  p_output1[90]=t12323*t1559 + t12225*t1852 + t1051*(-1.*t11501*t11591 - 1.*t11667*t1559 - 1.*t11884*t1559 - 1.*t11501*t5789) + t11591*(t1051*t11501 + t11667*t1852 + t11884*t1852 + t11501*t6097);
  p_output1[91]=t12225*t173*t1899 + t11591*(t12869 + t12936 + t1051*t12658*t173 + t11884*t173*t1899 - 1.*t12658*t1852*t627 - 1.*t11501*t1899*t627) - 1.*t12323*t173*t378*t695 + t1051*(t12737 - 1.*t11591*t12658*t173 + t12658*t1559*t627 - 1.*t11296*t378*t695 + t11884*t173*t378*t695 - 1.*t11501*t378*t627*t695);
  p_output1[92]=t12323*t1783 + t12225*t2191 + t1051*(-1.*t11591*t13110 + t13113 + t13122 - 1.*t13098*t1559 - 1.*t11884*t1783 - 1.*t11501*t6060) + t11591*(t1051*t13110 + t13185 + t13263 + t13098*t1852 + t11884*t2191 + t11501*t7017);
  p_output1[93]=t1051*(-1.*t11591*t13507 + t13534 - 1.*t13473*t1559) + t12225*t2420 + t11591*(t1051*t13507 + t13550 + t13557 + t13473*t1852 + t11884*t2420 + t11501*t7118);
  p_output1[94]=t1051*(-1.*t11591*t13848 + t13944 - 1.*t13777*t1559) + t11591*(t1051*t13848 + t14018 + t14054 + t14059 + t14064 + t13777*t1852) + t12225*t2449;
  p_output1[95]=t14144*t1852 + t2449*(-1.*t1051*t11501 - 1.*t11667*t1852 - 1.*t11884*t1852 - 1.*t11501*t6097) + t14346*t842 + t1051*(t11501*t2449 + t11501*t4656 + t11667*t842 + t11884*t842);
  p_output1[96]=t14144*t173*t1899 + t2449*(t14889 + t14912 - 1.*t1051*t12658*t173 - 1.*t11884*t173*t1899 + t12658*t1852*t627 + t11501*t1899*t627) + t14346*t173*t880 + t1051*(t14546 + t14584 + t12658*t173*t2449 - 1.*t12658*t627*t842 + t11884*t173*t880 - 1.*t11501*t627*t880);
  p_output1[97]=t14144*t2191 + t2449*(-1.*t1051*t13110 + t15056 + t15063 - 1.*t13098*t1852 - 1.*t11884*t2191 - 1.*t11501*t7017) + t14346*t941 + t1051*(t14992 + t15014 + t13110*t2449 + t11501*t4891 + t13098*t842 + t11884*t941);
  p_output1[98]=t1051*t14346 + t14144*t2420 + t2449*(-1.*t1051*t13507 + t15238 + t15272 - 1.*t13473*t1852 - 1.*t11884*t2420 - 1.*t11501*t7118) + t1051*(t12254 + t12284 + t12315 + t15170 + t13507*t2449 + t13473*t842);
  p_output1[99]=t1426*t14346 + t14144*t2449 + (-1.*t1051*t13848 + t15422 + t15425 + t15427 + t15434 - 1.*t13777*t1852)*t2449 + t1051*(t11884*t1426 + t15360 + t15368 + t13848*t2449 + t11501*t5478 + t13777*t842);
  p_output1[100]=t1559*t15924 + t2449*(t11501*t11591 + t11667*t1559 + t11884*t1559 + t11501*t5789) + t15903*t842 + t11591*(-1.*t11501*t2449 - 1.*t11501*t4656 - 1.*t11667*t842 - 1.*t11884*t842);
  p_output1[101]=-1.*t15924*t173*t378*t695 + t2449*(t16128 + t11591*t12658*t173 - 1.*t12658*t1559*t627 + t11296*t378*t695 - 1.*t11884*t173*t378*t695 + t11501*t378*t627*t695) + t15903*t173*t880 + t11591*(t16161 + t16165 - 1.*t12658*t173*t2449 + t12658*t627*t842 - 1.*t11884*t173*t880 + t11501*t627*t880);
  p_output1[102]=t15924*t1783 + t2449*(t11591*t13110 + t13098*t1559 + t16184 + t16192 + t11884*t1783 + t11501*t6060) + t15903*t941 + t11591*(t16204 + t16218 - 1.*t13110*t2449 - 1.*t11501*t4891 - 1.*t13098*t842 - 1.*t11884*t941);
  p_output1[103]=t1051*t15903 + (t11591*t13507 + t13473*t1559 + t16253)*t2449 + t11591*(t14258 + t14292 + t14315 + t16260 - 1.*t13507*t2449 - 1.*t13473*t842);
  p_output1[104]=t1426*t15903 + (t11591*t13848 + t13777*t1559 + t16543)*t2449 + t11591*(-1.*t11884*t1426 + t16673 + t16674 - 1.*t13848*t2449 - 1.*t11501*t5478 - 1.*t13777*t842);
  p_output1[105]=t18432*t3688 + t18150*t3881 + t3382*(-1.*t17571*t17707 - 1.*t17273*t3688 - 1.*t17327*t3688 - 1.*t17707*t7304) + t17571*(t17707*t3382 + t17273*t3881 + t17327*t3881 + t17707*t7843);
  p_output1[106]=t173*t18150*t3929 + t17571*(t18762 + t18772 + t173*t18483*t3382 + t173*t17327*t3929 - 1.*t18483*t3881*t627 - 1.*t17707*t3929*t627) - 1.*t173*t18432*t2595*t695 + t3382*(-1.*t173*t17571*t18483 + t18531 + t18483*t3688*t627 - 1.*t17090*t2595*t695 + t173*t17327*t2595*t695 - 1.*t17707*t2595*t627*t695);
  p_output1[107]=t18432*t3830 + t18150*t3995 + t3382*(t18932 - 1.*t17571*t19069 + t19081 - 1.*t19102*t3688 - 1.*t17327*t3830 - 1.*t17707*t7376) + t17571*(t19188 + t19192 + t19069*t3382 + t19102*t3881 + t17327*t3995 + t17707*t8491);
  p_output1[108]=t3382*(t19346 - 1.*t17571*t19485 - 1.*t19528*t3688) + t18150*t4104 + t17571*(t19623 + t19704 + t19485*t3382 + t19528*t3881 + t17327*t4104 + t17707*t8769);
  p_output1[109]=t3382*(t20166 - 1.*t17571*t20342 - 1.*t20430*t3688) + t17571*(t20502 + t20505 + t20506 + t20507 + t20342*t3382 + t20430*t3881) + t18150*t4203;
  p_output1[110]=t20779*t2944 + t20631*t3881 + t3382*(t17273*t2944 + t17327*t2944 + t17707*t4203 + t17707*t7213) + t4203*(-1.*t17707*t3382 - 1.*t17273*t3881 - 1.*t17327*t3881 - 1.*t17707*t7843);
  p_output1[111]=t173*t20779*t3082 + t173*t20631*t3929 + t3382*(t20788 + t20795 + t173*t17327*t3082 + t173*t18483*t4203 - 1.*t18483*t2944*t627 - 1.*t17707*t3082*t627) + t4203*(t20868 + t20871 - 1.*t173*t18483*t3382 - 1.*t173*t17327*t3929 + t18483*t3881*t627 + t17707*t3929*t627);
  p_output1[112]=t20779*t3154 + t20631*t3995 + t3382*(t20965 + t20992 + t19102*t2944 + t17327*t3154 + t19069*t4203 + t17707*t7265) + t4203*(t21161 + t21164 - 1.*t19069*t3382 - 1.*t19102*t3881 - 1.*t17327*t3995 - 1.*t17707*t8491);
  p_output1[113]=t20779*t3382 + t20631*t4104 + t3382*(t18252 + t18255 + t18428 + t21459 + t19528*t2944 + t19485*t4203) + t4203*(t21484 + t21504 - 1.*t19485*t3382 - 1.*t19528*t3881 - 1.*t17327*t4104 - 1.*t17707*t8769);
  p_output1[114]=t20779*t3663 + t20631*t4203 + (t21674 + t21678 + t21679 + t21680 - 1.*t20342*t3382 - 1.*t20430*t3881)*t4203 + t3382*(t21596 + t21611 + t20430*t2944 + t17327*t3663 + t20342*t4203 + t17707*t7290);
  p_output1[115]=t22427*t2944 + t22620*t3688 + t17571*(-1.*t17273*t2944 - 1.*t17327*t2944 - 1.*t17707*t4203 - 1.*t17707*t7213) + t4203*(t17571*t17707 + t17273*t3688 + t17327*t3688 + t17707*t7304);
  p_output1[116]=t173*t22427*t3082 + t17571*(t22822 + t22829 - 1.*t173*t17327*t3082 - 1.*t173*t18483*t4203 + t18483*t2944*t627 + t17707*t3082*t627) - 1.*t173*t22620*t2595*t695 + t4203*(t173*t17571*t18483 + t22674 - 1.*t18483*t3688*t627 + t17090*t2595*t695 - 1.*t173*t17327*t2595*t695 + t17707*t2595*t627*t695);
  p_output1[117]=t22427*t3154 + t22620*t3830 + t17571*(t23006 + t23063 - 1.*t19102*t2944 - 1.*t17327*t3154 - 1.*t19069*t4203 - 1.*t17707*t7265) + t4203*(t17571*t19069 + t22924 + t22957 + t19102*t3688 + t17327*t3830 + t17707*t7376);
  p_output1[118]=t22427*t3382 + (t17571*t19485 + t23221 + t19528*t3688)*t4203 + t17571*(t20753 + t20756 + t20757 + t23249 - 1.*t19528*t2944 - 1.*t19485*t4203);
  p_output1[119]=t22427*t3663 + (t17571*t20342 + t23562 + t20430*t3688)*t4203 + t17571*(t23602 + t23607 - 1.*t20430*t2944 - 1.*t17327*t3663 - 1.*t20342*t4203 - 1.*t17707*t7290);
  p_output1[120]=t1040*t23906 - 1.*t24050*t378*t640 + t5143*(t12737 + t12658*t378*t640) + (t1040*t12658 + t12869 + t12936 + t11296*t1899)*t378*t695;
  p_output1[121]=t5143*(t13113 + t13122 + t24228 + t24233 - 1.*t12989*t24188*t378 - 1.*t11296*t640*t654) - 1.*t24050*t654*t695 - 1.*t23906*t378*t695*t732 + t378*t695*(t13185 + t13263 + t24257 + t24264 - 1.*t1040*t12989*t640 + t11296*t378*t640*t732);
  p_output1[122]=t5143*(t13534 + t13459*t378*t640 - 1.*t13369*t378*t654) + (t1040*t13459 + t13550 + t13557 + t11296*t2368 + t24493 + t24496)*t378*t695 + t23906*t7110;
  p_output1[123]=t23906*t4295 + t5143*(t13944 + t13758*t378*t640 - 1.*t13744*t378*t654) + (t1040*t13758 + t14018 + t14054 + t24517 + t24523 + t24524)*t378*t695;
  p_output1[124]=t1040*t24779 + (-1.*t1040*t12658 + t14889 + t14912 - 1.*t11296*t1899)*t4295 + t24859*t775 + t5143*(t14546 + t14584 + t12658*t775 + t11296*t880);
  p_output1[125]=-1.*t24859*t378*t614*t695 - 1.*t24779*t378*t695*t732 + t4295*(t15056 + t15063 + t25231 + t25232 + t1040*t12989*t640 - 1.*t11296*t378*t640*t732) + t5143*(t14992 + t15014 + t25197 + t25199 + t11296*t378*t614*t640 - 1.*t12989*t640*t775);
  p_output1[126]=(-1.*t1040*t13459 + t15238 + t15272 - 1.*t11296*t2368 + t25385 + t25409)*t4295 + t24859*t5143 + t24779*t7110 + t5143*(t12254 + t15170 + t23976 + t24005 + t25335 + t13459*t775);
  p_output1[127]=t24779*t4295 + (-1.*t1040*t13758 + t15422 + t15425 + t25454 + t25455 + t25457)*t4295 + t24859*t5409 + t5143*(t11296*t1359 + t15360 + t15368 + t25428 + t25432 + t13758*t775);
  p_output1[128]=-1.*t25520*t378*t640 + t4295*(t16128 - 1.*t12658*t378*t640) + t25496*t775 + t378*t695*(t16161 + t16165 - 1.*t12658*t775 - 1.*t11296*t880);
  p_output1[129]=t4295*(t16184 + t16192 + t25639 + t25642 + t12989*t24188*t378 + t11296*t640*t654) - 1.*t25496*t378*t614*t695 - 1.*t25520*t654*t695 + t378*t695*(t16204 + t16218 + t25741 + t25749 - 1.*t11296*t378*t614*t640 + t12989*t640*t775);
  p_output1[130]=t25496*t5143 + t4295*(t16253 - 1.*t13459*t378*t640 + t13369*t378*t654) + t378*t695*(t14258 + t16260 + t24791 + t24853 + t25989 - 1.*t13459*t775);
  p_output1[131]=t25496*t5409 + t4295*(t16543 - 1.*t13758*t378*t640 + t13744*t378*t654) + t378*t695*(-1.*t11296*t1359 + t16673 + t16674 + t26092 + t26112 - 1.*t13758*t775);
  p_output1[132]=t26201*t3335 - 1.*t2595*t26274*t640 + t2595*(t18762 + t18772 + t18483*t3335 + t17090*t3929)*t695 + (t18531 + t18483*t2595*t640)*t7275;
  p_output1[133]=-1.*t2595*t26201*t2767*t695 - 1.*t26274*t2770*t695 + t2595*(t19188 + t19192 + t26429 + t26436 + t17090*t2595*t2767*t640 - 1.*t18903*t3335*t640)*t695 + (t18932 + t19081 - 1.*t18903*t24188*t2595 + t26343 + t26358 - 1.*t17090*t2770*t640)*t7275;
  p_output1[134]=t2595*(t19623 + t19704 + t26509 + t26526 + t19437*t3335 + t17090*t4054)*t695 + (t19346 - 1.*t19251*t2595*t2770 + t19437*t2595*t640)*t7275 + t26201*t8696;
  p_output1[135]=t2595*(t20502 + t20505 + t26585 + t26586 + t26589 + t20319*t3335)*t695 + t26201*t7169 + (t20166 - 1.*t20100*t2595*t2770 + t20319*t2595*t640)*t7275;
  p_output1[136]=t26668*t2878 + t26651*t3335 + (t20868 + t20871 - 1.*t18483*t3335 - 1.*t17090*t3929)*t7169 + (t20788 + t20795 + t18483*t2878 + t17090*t3082)*t7275;
  p_output1[137]=-1.*t2595*t26668*t2748*t695 - 1.*t2595*t26651*t2767*t695 + (t21161 + t21164 + t26890 + t26896 - 1.*t17090*t2595*t2767*t640 + t18903*t3335*t640)*t7169 + (t20965 + t20992 + t26697 + t26700 + t17090*t2595*t2748*t640 - 1.*t18903*t2878*t640)*t7275;
  p_output1[138]=(t21484 + t21504 + t27131 + t27139 - 1.*t19437*t3335 - 1.*t17090*t4054)*t7169 + t26668*t7275 + (t18252 + t21459 + t26244 + t26251 + t27082 + t19437*t2878)*t7275 + t26651*t8696;
  p_output1[139]=t26651*t7169 + (t21674 + t21678 + t27240 + t27250 + t27257 - 1.*t20319*t3335)*t7169 + (t21596 + t21611 + t27223 + t27225 + t20319*t2878 + t17090*t3636)*t7275 + t26668*t7284;
  p_output1[140]=t27280*t2878 - 1.*t2595*t27295*t640 + t2595*(t22822 + t22829 - 1.*t18483*t2878 - 1.*t17090*t3082)*t695 + (t22674 - 1.*t18483*t2595*t640)*t7169;
  p_output1[141]=-1.*t2595*t27280*t2748*t695 - 1.*t27295*t2770*t695 + t2595*(t23006 + t23063 + t27533 + t27534 - 1.*t17090*t2595*t2748*t640 + t18903*t2878*t640)*t695 + (t22924 + t22957 + t18903*t24188*t2595 + t27309 + t27456 + t17090*t2770*t640)*t7169;
  p_output1[142]=t2595*(t20753 + t23249 + t26662 + t26664 + t27640 - 1.*t19437*t2878)*t695 + (t23221 + t19251*t2595*t2770 - 1.*t19437*t2595*t640)*t7169 + t27280*t7275;
  p_output1[143]=t2595*(t23602 + t23607 + t27703 + t27706 - 1.*t20319*t2878 - 1.*t17090*t3636)*t695 + (t23562 + t20100*t2595*t2770 - 1.*t20319*t2595*t640)*t7169 + t27280*t7284;
  p_output1[144]=(t23976 + t27806 + t27810)*t378 - 1.*t27731*t654*t732 + t378*(t24228 + t24233 - 1.*t12989*t378 + t11124*t654)*t732 + t654*(t24257 + t24264 - 1.*t11124*t378*t732 - 1.*t12989*t654*t732);
  p_output1[145]=t27731*t378*t983 + t654*(t1088*t11286 + t24493 + t24496 + t13369*t27861*t732 + t13440*t983 - 1.*t11124*t654*t983);
  p_output1[146]=t27731*t378*t614 + t654*(t24517 + t24523 + t27882 + t27885 + t13744*t27861*t732 + t13751*t983);
  p_output1[147]=-1.*t27917*t614*t654 - 1.*t27920*t654*t732 + t378*(t25197 + t25199 - 1.*t11124*t378*t614 - 1.*t12989*t614*t654)*t732 + t378*t614*(t25231 + t25232 + t11124*t378*t732 + t12989*t654*t732);
  p_output1[148]=t27917*t378*t732 + t378*(t23976 + t25335 + t27806 + t27810 + t27991 + t13369*t27861*t614)*t732 + t27920*t378*t983 + t378*t614*(t25385 + t25409 + t27931 + t27934 - 1.*t13369*t27861*t732 + t11124*t654*t983);
  p_output1[149]=t1088*t27917*t378 + t27920*t378*t614 + t378*(t25428 + t25432 + t28019 + t28025 + t13744*t27861*t614 - 1.*t1088*t11124*t654)*t732 + t378*t614*(t25454 + t25455 + t28003 + t28004 + t28007 - 1.*t13744*t27861*t732);
  p_output1[150]=(t25454 + t28003 + t28007)*t378 - 1.*t28036*t614*t654 + t378*t614*(t25639 + t25642 + t12989*t378 - 1.*t11124*t654) + t654*(t25741 + t25749 + t11124*t378*t614 + t12989*t614*t654);
  p_output1[151]=t28036*t378*t732 + t654*(t24791 + t25989 + t27913 + t27914 - 1.*t13369*t27861*t614 - 1.*t13440*t732);
  p_output1[152]=t1088*t28036*t378 + t654*(t26092 + t26112 - 1.*t11286*t614 - 1.*t13744*t27861*t614 + t1088*t11124*t654 - 1.*t13751*t732);
  p_output1[153]=t2595*t2767*(-1.*t18903*t2595 + t26343 + t26358 + t17079*t2770) + t2770*(t26429 + t26436 - 1.*t17079*t2595*t2767 - 1.*t18903*t2767*t2770) - 1.*t2767*t2770*t28140 + t2595*(t26244 + t28178 + t28181);
  p_output1[154]=t2595*t28140*t3277 + t2770*(t26509 + t26526 + t19251*t2767*t28190 + t19327*t3277 - 1.*t17079*t2770*t3277 + t16964*t3506);
  p_output1[155]=t2595*t2748*t28140 + t2770*(t26585 + t26586 + t20100*t2767*t28190 + t28283 + t28297 + t20162*t3277);
  p_output1[156]=t2595*t2767*(t26697 + t26700 - 1.*t17079*t2595*t2748 - 1.*t18903*t2748*t2770) + t2595*t2748*(t26890 + t26896 + t17079*t2595*t2767 + t18903*t2767*t2770) - 1.*t2748*t2770*t28384 - 1.*t2767*t2770*t28386;
  p_output1[157]=t2595*t2767*t28384 + t2595*t2767*(t26244 + t27082 + t28178 + t28181 + t19251*t2748*t28190 + t28418) + t2595*t28386*t3277 + t2595*t2748*(t27131 + t27139 - 1.*t19251*t2767*t28190 + t28401 + t28402 + t17079*t2770*t3277);
  p_output1[158]=t2595*t2748*t28386 + t2595*t2748*(t27240 + t27250 - 1.*t20100*t2767*t28190 + t28433 + t28438 + t28440) + t2595*t28384*t3506 + t2595*t2767*(t27223 + t27225 + t20100*t2748*t28190 + t28447 + t28456 - 1.*t17079*t2770*t3506);
  p_output1[159]=t2595*t2748*(t18903*t2595 + t27309 + t27456 - 1.*t17079*t2770) + t2770*(t17079*t2595*t2748 + t27533 + t27534 + t18903*t2748*t2770) + t2595*(t27240 + t28433 + t28440) - 1.*t2748*t2770*t28463;
  p_output1[160]=t2770*(t26662 + t27640 - 1.*t19327*t2767 - 1.*t19251*t2748*t28190 + t28382 + t28383) + t2595*t2767*t28463;
  p_output1[161]=t2595*t28463*t3506 + t2770*(-1.*t16964*t2748 - 1.*t20162*t2767 + t27703 + t27706 - 1.*t20100*t2748*t28190 + t17079*t2770*t3506);
  p_output1[162]=-0.2255*t1088 - 0.1575*t732;
  p_output1[163]=-0.1575*t1088 - 0.2255*t732;
  p_output1[164]=t1088*t28671 + t28688*t983 + (t27806 + t27991 + t13369*t614 + t11013*t732)*t983 + t732*(t27931 + t27934 - 1.*t13369*t732 - 1.*t11013*t983);
  p_output1[165]=t28688*t614 + t28671*t732 + t732*(t28004 + t28007 - 1.*t11013*t614 - 1.*t13744*t732) + (t1088*t11013 + t28019 + t28025 + t13744*t614)*t983;
  p_output1[166]=0.068*t983;
  p_output1[167]=0.068*t614;
  p_output1[168]=0.325*t433 - 1.*t10907*t433 - 1.*t13735*t433;
  p_output1[169]=0.325*t573 - 1.*t10907*t573 - 1.*t13735*t573;
  p_output1[170]=-0.1575*t2767 - 0.2255*t3506;
  p_output1[171]=-0.2255*t2767 - 0.1575*t3506;
  p_output1[172]=(t19251*t2748 + t16788*t2767 + t28178 + t28418)*t3277 + t28891*t3277 + t2767*(-1.*t19251*t2767 + t28401 + t28402 - 1.*t16788*t3277) + t28799*t3506;
  p_output1[173]=t2767*(-1.*t16788*t2748 - 1.*t20100*t2767 + t28438 + t28440) + t2767*t28799 + t2748*t28891 + t3277*(t20100*t2748 + t28447 + t28456 + t16788*t3506);
  p_output1[174]=0.068*t3277;
  p_output1[175]=0.068*t2748;
  p_output1[176]=-0.325*t2646 - 1.*t16746*t2646 - 1.*t20036*t2646;
  p_output1[177]=-0.325*t2703 - 1.*t16746*t2703 - 1.*t20036*t2703;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance2.hh"

namespace SymFunction
{

void J_Je_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
