/*
 * Automatically Generated from Mathematica.
 * Wed 6 Apr 2022 13:26:47 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t35;
  double t62;
  double t70;
  double t89;
  double t90;
  double t124;
  double t148;
  double t6;
  double t297;
  double t270;
  double t249;
  double t302;
  double t305;
  double t348;
  double t9;
  double t234;
  double t418;
  double t422;
  double t425;
  double t400;
  double t405;
  double t406;
  double t407;
  double t410;
  double t414;
  double t276;
  double t356;
  double t361;
  double t510;
  double t506;
  double t508;
  double t512;
  double t509;
  double t513;
  double t515;
  double t525;
  double t518;
  double t520;
  double t522;
  double t504;
  double t614;
  double t616;
  double t618;
  double t601;
  double t602;
  double t603;
  double t604;
  double t606;
  double t608;
  double t524;
  double t527;
  double t533;
  double t203;
  double t363;
  double t370;
  double t694;
  double t717;
  double t372;
  double t373;
  double t380;
  double t470;
  double t472;
  double t473;
  double t436;
  double t437;
  double t442;
  double t450;
  double t456;
  double t459;
  double t761;
  double t762;
  double t764;
  double t474;
  double t476;
  double t479;
  double t486;
  double t488;
  double t489;
  double t699;
  double t701;
  double t702;
  double t517;
  double t534;
  double t552;
  double t561;
  double t566;
  double t575;
  double t647;
  double t648;
  double t652;
  double t626;
  double t627;
  double t628;
  double t632;
  double t633;
  double t635;
  double t933;
  double t934;
  double t936;
  double t654;
  double t655;
  double t657;
  double t667;
  double t671;
  double t673;
  double t898;
  double t899;
  double t901;
  double t894;
  double t895;
  double t896;
  double t732;
  double t733;
  double t742;
  double t752;
  double t753;
  double t754;
  double t784;
  double t788;
  double t789;
  double t791;
  double t795;
  double t796;
  double t812;
  double t815;
  double t817;
  double t834;
  double t835;
  double t837;
  double t765;
  double t780;
  double t783;
  double t851;
  double t857;
  double t858;
  double t869;
  double t872;
  double t875;
  double t878;
  double t880;
  double t881;
  double t883;
  double t885;
  double t887;
  double t1085;
  double t1088;
  double t1089;
  double t909;
  double t910;
  double t912;
  double t925;
  double t926;
  double t927;
  double t941;
  double t944;
  double t946;
  double t948;
  double t950;
  double t952;
  double t969;
  double t985;
  double t989;
  double t1010;
  double t1018;
  double t1019;
  double t937;
  double t939;
  double t940;
  double t1031;
  double t1032;
  double t1033;
  double t1049;
  double t1051;
  double t1053;
  double t1058;
  double t1059;
  double t1060;
  double t1069;
  double t1070;
  double t1074;
  double t1244;
  double t1246;
  double t1248;
  double t1252;
  double t1254;
  double t1257;
  double t1258;
  double t1259;
  double t1261;
  double t1242;
  double t1250;
  double t1262;
  double t1265;
  double t1232;
  double t1234;
  double t1236;
  double t1238;
  double t1267;
  double t1268;
  double t1269;
  double t1270;
  double t1271;
  double t1272;
  double t1274;
  double t1275;
  double t1276;
  double t1281;
  double t1282;
  double t1287;
  double t1288;
  double t1289;
  double t1290;
  double t1298;
  double t1299;
  double t399;
  double t416;
  double t417;
  double t1302;
  double t1303;
  double t1305;
  double t1311;
  double t1312;
  double t1313;
  double t1320;
  double t1321;
  double t1323;
  double t1307;
  double t1308;
  double t1309;
  double t1318;
  double t1319;
  double t1324;
  double t1325;
  double t1350;
  double t1352;
  double t1353;
  double t1328;
  double t1329;
  double t1330;
  double t1332;
  double t482;
  double t483;
  double t484;
  double t465;
  double t467;
  double t468;
  double t1380;
  double t1384;
  double t1385;
  double t1387;
  double t1388;
  double t1393;
  double t1397;
  double t1398;
  double t1386;
  double t1390;
  double t1391;
  double t485;
  double t490;
  double t492;
  double t1433;
  double t1434;
  double t1437;
  double t1438;
  double t1443;
  double t1450;
  double t1451;
  double t1452;
  double t1453;
  double t1477;
  double t1478;
  double t1479;
  double t1467;
  double t1472;
  double t1473;
  double t1458;
  double t1459;
  double t1460;
  double t494;
  double t500;
  double t503;
  double t1505;
  double t1506;
  double t1508;
  double t1504;
  double t1509;
  double t1510;
  double t1513;
  double t1514;
  double t1515;
  double t1519;
  double t1520;
  double t1535;
  double t1537;
  double t1538;
  double t1529;
  double t1530;
  double t1531;
  double t1521;
  double t1525;
  double t1526;
  double t1543;
  double t1548;
  double t1549;
  double t1558;
  double t1571;
  double t1572;
  double t1574;
  double t1575;
  double t390;
  double t392;
  double t397;
  double t431;
  double t444;
  double t447;
  double t1695;
  double t1706;
  double t1711;
  double t1745;
  double t1747;
  double t1748;
  double t1750;
  double t1752;
  double t1402;
  double t599;
  double t609;
  double t612;
  double t1866;
  double t1867;
  double t1869;
  double t1872;
  double t1873;
  double t1877;
  double t1878;
  double t1879;
  double t1881;
  double t1864;
  double t1871;
  double t1882;
  double t1883;
  double t1863;
  double t1888;
  double t1889;
  double t1894;
  double t1896;
  double t1897;
  double t1901;
  double t1902;
  double t1905;
  double t1907;
  double t1908;
  double t1910;
  double t1912;
  double t1913;
  double t1914;
  double t1919;
  double t1920;
  double t1922;
  double t1957;
  double t1959;
  double t1961;
  double t1941;
  double t1947;
  double t1948;
  double t1929;
  double t1932;
  double t1937;
  double t1891;
  double t1925;
  double t1926;
  double t1981;
  double t1984;
  double t1985;
  double t2031;
  double t2033;
  double t2034;
  double t1986;
  double t1987;
  double t1989;
  double t1990;
  double t2013;
  double t2022;
  double t2023;
  double t2024;
  double t660;
  double t662;
  double t664;
  double t2076;
  double t2077;
  double t2079;
  double t2081;
  double t2082;
  double t639;
  double t640;
  double t645;
  double t2084;
  double t2085;
  double t2086;
  double t2090;
  double t2092;
  double t2093;
  double t665;
  double t675;
  double t680;
  double t2115;
  double t2117;
  double t2119;
  double t2121;
  double t2122;
  double t2123;
  double t2130;
  double t2131;
  double t2133;
  double t2118;
  double t2125;
  double t2126;
  double t2129;
  double t2134;
  double t2135;
  double t2138;
  double t2139;
  double t2141;
  double t682;
  double t683;
  double t688;
  double t2167;
  double t2168;
  double t2170;
  double t2163;
  double t2172;
  double t2174;
  double t2176;
  double t2177;
  double t2189;
  double t2194;
  double t2201;
  double t2175;
  double t2179;
  double t2181;
  double t2183;
  double t2205;
  double t2207;
  double t2213;
  double t2214;
  double t2215;
  double t2221;
  double t2223;
  double t2224;
  double t2239;
  double t2250;
  double t2257;
  double t2258;
  double t2259;
  double t590;
  double t591;
  double t597;
  double t619;
  double t630;
  double t631;
  double t2372;
  double t2379;
  double t2387;
  double t2429;
  double t2430;
  double t2433;
  double t2435;
  double t2448;
  double t1358;
  double t1366;
  double t1369;
  double t2547;
  double t2548;
  double t2549;
  double t1401;
  double t1403;
  double t2551;
  double t2552;
  double t2554;
  double t1411;
  double t1414;
  double t1480;
  double t1485;
  double t1487;
  double t1539;
  double t2589;
  double t1547;
  double t1590;
  double t1595;
  double t2604;
  double t2606;
  double t1604;
  double t1609;
  double t2616;
  double t1618;
  double t1621;
  double t2619;
  double t2620;
  double t2621;
  double t1630;
  double t1633;
  double t1646;
  double t1657;
  double t1658;
  double t1674;
  double t1676;
  double t1704;
  double t1773;
  double t1777;
  double t1781;
  double t2761;
  double t2764;
  double t2771;
  double t2772;
  double t2775;
  double t1797;
  double t1798;
  double t2564;
  double t2788;
  double t1805;
  double t1810;
  double t1825;
  double t1831;
  double t1843;
  double t1847;
  double t1850;
  double t2038;
  double t2058;
  double t2060;
  double t2867;
  double t2868;
  double t2869;
  double t2080;
  double t2089;
  double t2101;
  double t2102;
  double t2874;
  double t2875;
  double t2876;
  double t2127;
  double t2146;
  double t2147;
  double t2182;
  double t2962;
  double t2220;
  double t2265;
  double t2267;
  double t2986;
  double t2989;
  double t2276;
  double t2277;
  double t2287;
  double t2288;
  double t3001;
  double t2298;
  double t2299;
  double t3003;
  double t3005;
  double t3006;
  double t2315;
  double t2321;
  double t2325;
  double t2342;
  double t2343;
  double t2362;
  double t2454;
  double t2472;
  double t2473;
  double t3095;
  double t3101;
  double t3109;
  double t3110;
  double t3111;
  double t2488;
  double t2491;
  double t2498;
  double t2499;
  double t3133;
  double t2512;
  double t2519;
  double t2527;
  double t2533;
  double t2534;
  double t2566;
  double t2568;
  double t2574;
  double t2575;
  double t3222;
  double t3224;
  double t2588;
  double t2590;
  double t2605;
  double t3265;
  double t2631;
  double t2633;
  double t2640;
  double t2641;
  double t3276;
  double t3280;
  double t3298;
  double t3301;
  double t3302;
  double t3307;
  double t2661;
  double t2662;
  double t2654;
  double t3237;
  double t3244;
  double t2763;
  double t2722;
  double t2729;
  double t2797;
  double t2798;
  double t2804;
  double t2805;
  double t3337;
  double t3340;
  double t3368;
  double t3372;
  double t2838;
  double t2859;
  double t2860;
  double t2892;
  double t2894;
  double t2914;
  double t2916;
  double t3440;
  double t3441;
  double t2956;
  double t2966;
  double t2987;
  double t3484;
  double t3015;
  double t3016;
  double t3024;
  double t3025;
  double t3514;
  double t3516;
  double t3537;
  double t3538;
  double t3539;
  double t3545;
  double t3046;
  double t3061;
  double t3040;
  double t3464;
  double t3465;
  double t3096;
  double t3078;
  double t3079;
  double t3143;
  double t3146;
  double t3160;
  double t3162;
  double t3574;
  double t3580;
  double t3597;
  double t3598;
  double t3194;
  double t3212;
  double t3214;
  double t3315;
  double t3316;
  double t3322;
  double t3668;
  double t3670;
  double t3685;
  double t3686;
  double t3339;
  double t3344;
  double t3349;
  double t3555;
  double t3556;
  double t3567;
  double t3756;
  double t3759;
  double t3774;
  double t3775;
  double t3577;
  double t3585;
  double t3590;
  t35 = Cos(var1[8]);
  t62 = Sin(var1[7]);
  t70 = t35*t62;
  t89 = Cos(var1[7]);
  t90 = Sin(var1[8]);
  t124 = -1.*t89*t90;
  t148 = t70 + t124;
  t6 = Cos(var1[4]);
  t297 = Cos(var1[5]);
  t270 = Sin(var1[6]);
  t249 = Sin(var1[5]);
  t302 = t89*t35;
  t305 = t62*t90;
  t348 = t302 + t305;
  t9 = Cos(var1[6]);
  t234 = Sin(var1[4]);
  t418 = -1.*t89*t35;
  t422 = -1.*t62*t90;
  t425 = t418 + t422;
  t400 = -1.*t35*t62;
  t405 = t89*t90;
  t406 = t400 + t405;
  t407 = t297*t406;
  t410 = t249*t270*t348;
  t414 = t407 + t410;
  t276 = t249*t270*t148;
  t356 = t297*t348;
  t361 = t276 + t356;
  t510 = Cos(var1[10]);
  t506 = Cos(var1[11]);
  t508 = Sin(var1[10]);
  t512 = Sin(var1[11]);
  t509 = t506*t508;
  t513 = -1.*t510*t512;
  t515 = t509 + t513;
  t525 = Sin(var1[9]);
  t518 = t510*t506;
  t520 = t508*t512;
  t522 = t518 + t520;
  t504 = Cos(var1[9]);
  t614 = -1.*t510*t506;
  t616 = -1.*t508*t512;
  t618 = t614 + t616;
  t601 = -1.*t506*t508;
  t602 = t510*t512;
  t603 = t601 + t602;
  t604 = t297*t603;
  t606 = t525*t522*t249;
  t608 = t604 + t606;
  t524 = t297*t522;
  t527 = t525*t515*t249;
  t533 = t524 + t527;
  t203 = t6*t9*t148;
  t363 = -1.*t234*t361;
  t370 = t203 + t363;
  t694 = Sin(var1[3]);
  t717 = Cos(var1[3]);
  t372 = t297*t270*t148;
  t373 = -1.*t249*t348;
  t380 = t372 + t373;
  t470 = t6*t9*t348;
  t472 = -1.*t234*t414;
  t473 = t470 + t472;
  t436 = t297*t148;
  t437 = t249*t270*t425;
  t442 = t436 + t437;
  t450 = t9*t234*t249;
  t456 = t6*t270;
  t459 = t450 + t456;
  t761 = t249*t406;
  t762 = -1.*t297*t270*t348;
  t764 = t761 + t762;
  t474 = -1.*t249*t406;
  t476 = t297*t270*t348;
  t479 = t474 + t476;
  t486 = t249*t270*t406;
  t488 = t297*t425;
  t489 = t486 + t488;
  t699 = -1.*t297*t270*t148;
  t701 = t249*t348;
  t702 = t699 + t701;
  t517 = t504*t6*t515;
  t534 = -1.*t234*t533;
  t552 = t517 + t534;
  t561 = t297*t525*t515;
  t566 = -1.*t522*t249;
  t575 = t561 + t566;
  t647 = t504*t6*t522;
  t648 = -1.*t234*t608;
  t652 = t647 + t648;
  t626 = t297*t515;
  t627 = t525*t618*t249;
  t628 = t626 + t627;
  t632 = t6*t525;
  t633 = t504*t234*t249;
  t635 = t632 + t633;
  t933 = -1.*t297*t525*t522;
  t934 = t603*t249;
  t936 = t933 + t934;
  t654 = t297*t525*t522;
  t655 = -1.*t603*t249;
  t657 = t654 + t655;
  t667 = t297*t618;
  t671 = t525*t603*t249;
  t673 = t667 + t671;
  t898 = -1.*t297*t525*t515;
  t899 = t522*t249;
  t901 = t898 + t899;
  t894 = t717*t702;
  t895 = -1.*t694*t370;
  t896 = t894 + t895;
  t732 = -1.*t9*t234*t148;
  t733 = -1.*t6*t361;
  t742 = t732 + t733;
  t752 = -1.*t9*t234*t249*t148;
  t753 = -1.*t6*t270*t148;
  t754 = t752 + t753;
  t784 = t249*t148;
  t788 = -1.*t297*t270*t425;
  t789 = t784 + t788;
  t791 = t6*t9*t425;
  t795 = -1.*t234*t442;
  t796 = t791 + t795;
  t812 = t6*t9*t249;
  t815 = -1.*t234*t270;
  t817 = t812 + t815;
  t834 = t6*t9;
  t835 = -1.*t234*t249*t270;
  t837 = t834 + t835;
  t765 = t717*t764;
  t780 = -1.*t694*t473;
  t783 = t765 + t780;
  t851 = -1.*t9*t234*t348;
  t857 = -1.*t6*t414;
  t858 = t851 + t857;
  t869 = -1.*t9*t234*t249*t348;
  t872 = -1.*t6*t270*t348;
  t875 = t869 + t872;
  t878 = -1.*t297*t270*t406;
  t880 = t249*t425;
  t881 = t878 + t880;
  t883 = t6*t9*t406;
  t885 = -1.*t234*t489;
  t887 = t883 + t885;
  t1085 = t717*t901;
  t1088 = -1.*t694*t552;
  t1089 = t1085 + t1088;
  t909 = -1.*t504*t515*t234;
  t910 = -1.*t6*t533;
  t912 = t909 + t910;
  t925 = -1.*t6*t525*t515;
  t926 = -1.*t504*t515*t234*t249;
  t927 = t925 + t926;
  t941 = -1.*t297*t525*t618;
  t944 = t515*t249;
  t946 = t941 + t944;
  t948 = t504*t6*t618;
  t950 = -1.*t234*t628;
  t952 = t948 + t950;
  t969 = -1.*t525*t234;
  t985 = t504*t6*t249;
  t989 = t969 + t985;
  t1010 = t504*t6;
  t1018 = -1.*t525*t234*t249;
  t1019 = t1010 + t1018;
  t937 = t717*t936;
  t939 = -1.*t694*t652;
  t940 = t937 + t939;
  t1031 = -1.*t504*t522*t234;
  t1032 = -1.*t6*t608;
  t1033 = t1031 + t1032;
  t1049 = -1.*t6*t525*t522;
  t1051 = -1.*t504*t522*t234*t249;
  t1053 = t1049 + t1051;
  t1058 = -1.*t297*t525*t603;
  t1059 = t618*t249;
  t1060 = t1058 + t1059;
  t1069 = t504*t6*t603;
  t1070 = -1.*t234*t673;
  t1074 = t1069 + t1070;
  t1244 = -0.0641*t35;
  t1246 = -0.28*t90;
  t1248 = t1244 + t1246;
  t1252 = -1.*t35;
  t1254 = 1. + t1252;
  t1257 = 0.075*t1254;
  t1258 = 0.355*t35;
  t1259 = -0.0641*t90;
  t1261 = t1257 + t1258 + t1259;
  t1242 = -0.325*t62;
  t1250 = t89*t1248;
  t1262 = t62*t1261;
  t1265 = t1242 + t1250 + t1262;
  t1232 = -1.*t9;
  t1234 = 1. + t1232;
  t1236 = 0.1575*t1234;
  t1238 = 0.2255*t9;
  t1267 = -1.*t270*t1265;
  t1268 = t1236 + t1238 + t1267;
  t1269 = -1.*t249*t1268;
  t1270 = -1.*t89;
  t1271 = 1. + t1270;
  t1272 = 0.325*t1271;
  t1274 = -1.*t62*t1248;
  t1275 = t89*t1261;
  t1276 = t1272 + t1274 + t1275;
  t1281 = t297*t1276;
  t1282 = t1269 + t1281;
  t1287 = -1.*t234*t1282;
  t1288 = 0.068*t270;
  t1289 = t9*t1265;
  t1290 = t1288 + t1289;
  t1298 = t6*t1290;
  t1299 = t1287 + t1298;
  t399 = t9*t234*t348;
  t416 = t6*t414;
  t417 = t399 + t416;
  t1302 = -1.*t6*t9*t249;
  t1303 = t234*t270;
  t1305 = t1302 + t1303;
  t1311 = t6*t1282;
  t1312 = t234*t1290;
  t1313 = t1311 + t1312;
  t1320 = t297*t1268;
  t1321 = t249*t1276;
  t1323 = t1320 + t1321;
  t1307 = -1.*t6*t1282;
  t1308 = -1.*t234*t1290;
  t1309 = t1307 + t1308;
  t1318 = -1.*t459*t1299;
  t1319 = -1.*t1305*t1313;
  t1324 = -1.*t297*t9*t1323;
  t1325 = t1318 + t1319 + t1324;
  t1350 = -1.*t297*t1268;
  t1352 = -1.*t249*t1276;
  t1353 = t1350 + t1352;
  t1328 = t1323*t764;
  t1329 = t1313*t417;
  t1330 = t1299*t473;
  t1332 = t1328 + t1329 + t1330;
  t482 = t6*t9*t249*t348;
  t483 = -1.*t234*t270*t348;
  t484 = t482 + t483;
  t465 = t9*t234;
  t467 = t6*t249*t270;
  t468 = t465 + t467;
  t1380 = -0.068*t270;
  t1384 = -1.*t9*t1265;
  t1385 = t1380 + t1384;
  t1387 = 0.068*t9;
  t1388 = t1387 + t1267;
  t1393 = -1.*t6*t249*t1385;
  t1397 = t234*t1388;
  t1398 = t1393 + t1397;
  t1386 = t234*t249*t1385;
  t1390 = t6*t1388;
  t1391 = t1386 + t1390;
  t485 = t9*t234*t406;
  t490 = t6*t489;
  t492 = t485 + t490;
  t1433 = -0.325*t89;
  t1434 = t1433 + t1274 + t1275;
  t1437 = t249*t270*t1434;
  t1438 = 0.325*t62;
  t1443 = -1.*t89*t1248;
  t1450 = -1.*t62*t1261;
  t1451 = t1438 + t1443 + t1450;
  t1452 = t297*t1451;
  t1453 = t1437 + t1452;
  t1477 = -1.*t297*t270*t1434;
  t1478 = t249*t1451;
  t1479 = t1477 + t1478;
  t1467 = t6*t1453;
  t1472 = t9*t234*t1434;
  t1473 = t1467 + t1472;
  t1458 = -1.*t234*t1453;
  t1459 = t6*t9*t1434;
  t1460 = t1458 + t1459;
  t494 = t9*t234*t148;
  t500 = t6*t361;
  t503 = t494 + t500;
  t1505 = -0.28*t35;
  t1506 = 0.0641*t90;
  t1508 = t1505 + t1506;
  t1504 = t62*t1248;
  t1509 = t89*t1508;
  t1510 = t1504 + t1509;
  t1513 = t249*t270*t1510;
  t1514 = -1.*t62*t1508;
  t1515 = t1250 + t1514;
  t1519 = t297*t1515;
  t1520 = t1513 + t1519;
  t1535 = -1.*t297*t270*t1510;
  t1537 = t249*t1515;
  t1538 = t1535 + t1537;
  t1529 = t6*t1520;
  t1530 = t9*t234*t1510;
  t1531 = t1529 + t1530;
  t1521 = -1.*t234*t1520;
  t1525 = t6*t9*t1510;
  t1526 = t1521 + t1525;
  t1543 = t1323*t702;
  t1548 = t1313*t503;
  t1549 = t1299*t370;
  t1558 = t1543 + t1548 + t1549;
  t1571 = -1.*t1323*t764;
  t1572 = -1.*t1313*t417;
  t1574 = -1.*t1299*t473;
  t1575 = t1571 + t1572 + t1574;
  t390 = t6*t9*t249*t148;
  t392 = -1.*t234*t270*t148;
  t397 = t390 + t392;
  t431 = t9*t234*t425;
  t444 = t6*t442;
  t447 = t431 + t444;
  t1695 = -1.*t1323*t702;
  t1706 = -1.*t1313*t503;
  t1711 = -1.*t1299*t370;
  t1745 = t459*t1299;
  t1747 = t1305*t1313;
  t1748 = t297*t9*t1323;
  t1750 = t1745 + t1747 + t1748;
  t1752 = t1695 + t1706 + t1711;
  t1402 = Power(t297,2);
  t599 = t504*t522*t234;
  t609 = t6*t608;
  t612 = t599 + t609;
  t1866 = -0.0641*t506;
  t1867 = -0.28*t512;
  t1869 = t1866 + t1867;
  t1872 = -1.*t506;
  t1873 = 1. + t1872;
  t1877 = -0.575*t1873;
  t1878 = -0.295*t506;
  t1879 = -0.0641*t512;
  t1881 = t1877 + t1878 + t1879;
  t1864 = 0.325*t508;
  t1871 = t510*t1869;
  t1882 = t508*t1881;
  t1883 = t1864 + t1871 + t1882;
  t1863 = 0.068*t525;
  t1888 = t504*t1883;
  t1889 = t1863 + t1888;
  t1894 = -1.*t510;
  t1896 = 1. + t1894;
  t1897 = -0.325*t1896;
  t1901 = -1.*t508*t1869;
  t1902 = t510*t1881;
  t1905 = t1897 + t1901 + t1902;
  t1907 = t297*t1905;
  t1908 = -1.*t504;
  t1910 = 1. + t1908;
  t1912 = 0.1575*t1910;
  t1913 = 0.2255*t504;
  t1914 = -1.*t525*t1883;
  t1919 = t1912 + t1913 + t1914;
  t1920 = -1.*t1919*t249;
  t1922 = t1907 + t1920;
  t1957 = t6*t1889;
  t1959 = -1.*t234*t1922;
  t1961 = t1957 + t1959;
  t1941 = t525*t234;
  t1947 = -1.*t504*t6*t249;
  t1948 = t1941 + t1947;
  t1929 = t1889*t234;
  t1932 = t6*t1922;
  t1937 = t1929 + t1932;
  t1891 = -1.*t1889*t234;
  t1925 = -1.*t6*t1922;
  t1926 = t1891 + t1925;
  t1981 = t297*t1919;
  t1984 = t1905*t249;
  t1985 = t1981 + t1984;
  t2031 = -1.*t297*t1919;
  t2033 = -1.*t1905*t249;
  t2034 = t2031 + t2033;
  t1986 = -1.*t504*t297*t1985;
  t1987 = -1.*t1948*t1937;
  t1989 = -1.*t635*t1961;
  t1990 = t1986 + t1987 + t1989;
  t2013 = t1985*t936;
  t2022 = t1937*t612;
  t2023 = t1961*t652;
  t2024 = t2013 + t2022 + t2023;
  t660 = -1.*t525*t522*t234;
  t662 = t504*t6*t522*t249;
  t664 = t660 + t662;
  t2076 = -0.068*t525;
  t2077 = -1.*t504*t1883;
  t2079 = t2076 + t2077;
  t2081 = 0.068*t504;
  t2082 = t2081 + t1914;
  t639 = t504*t234;
  t640 = t6*t525*t249;
  t645 = t639 + t640;
  t2084 = t2082*t234;
  t2085 = -1.*t6*t2079*t249;
  t2086 = t2084 + t2085;
  t2090 = t6*t2082;
  t2092 = t2079*t234*t249;
  t2093 = t2090 + t2092;
  t665 = t504*t603*t234;
  t675 = t6*t673;
  t680 = t665 + t675;
  t2115 = 0.325*t510;
  t2117 = t2115 + t1901 + t1902;
  t2119 = -0.325*t508;
  t2121 = -1.*t510*t1869;
  t2122 = -1.*t508*t1881;
  t2123 = t2119 + t2121 + t2122;
  t2130 = t297*t2123;
  t2131 = t525*t2117*t249;
  t2133 = t2130 + t2131;
  t2118 = -1.*t297*t525*t2117;
  t2125 = t2123*t249;
  t2126 = t2118 + t2125;
  t2129 = t504*t2117*t234;
  t2134 = t6*t2133;
  t2135 = t2129 + t2134;
  t2138 = t504*t6*t2117;
  t2139 = -1.*t234*t2133;
  t2141 = t2138 + t2139;
  t682 = t504*t515*t234;
  t683 = t6*t533;
  t688 = t682 + t683;
  t2167 = -0.28*t506;
  t2168 = 0.0641*t512;
  t2170 = t2167 + t2168;
  t2163 = t508*t1869;
  t2172 = t510*t2170;
  t2174 = t2163 + t2172;
  t2176 = -1.*t508*t2170;
  t2177 = t1871 + t2176;
  t2189 = t297*t2177;
  t2194 = t525*t2174*t249;
  t2201 = t2189 + t2194;
  t2175 = -1.*t297*t525*t2174;
  t2179 = t2177*t249;
  t2181 = t2175 + t2179;
  t2183 = t504*t2174*t234;
  t2205 = t6*t2201;
  t2207 = t2183 + t2205;
  t2213 = t504*t6*t2174;
  t2214 = -1.*t234*t2201;
  t2215 = t2213 + t2214;
  t2221 = t1985*t901;
  t2223 = t1937*t688;
  t2224 = t1961*t552;
  t2239 = t2221 + t2223 + t2224;
  t2250 = -1.*t1985*t936;
  t2257 = -1.*t1937*t612;
  t2258 = -1.*t1961*t652;
  t2259 = t2250 + t2257 + t2258;
  t590 = -1.*t525*t515*t234;
  t591 = t504*t6*t515*t249;
  t597 = t590 + t591;
  t619 = t504*t618*t234;
  t630 = t6*t628;
  t631 = t619 + t630;
  t2372 = -1.*t1985*t901;
  t2379 = -1.*t1937*t688;
  t2387 = -1.*t1961*t552;
  t2429 = t504*t297*t1985;
  t2430 = t1948*t1937;
  t2433 = t635*t1961;
  t2435 = t2429 + t2430 + t2433;
  t2448 = t2372 + t2379 + t2387;
  t1358 = t9*t249*t1323;
  t1366 = t1282*t764;
  t1369 = t1323*t414;
  t2547 = t9*t249*t1282;
  t2548 = -1.*t270*t1290;
  t2549 = t2547 + t1324 + t2548;
  t1401 = t297*t270*t1323;
  t1403 = -1.*t1402*t9*t1385;
  t2551 = t9*t1290*t348;
  t2552 = t1282*t414;
  t2554 = t2551 + t1328 + t2552;
  t1411 = -1.*t297*t9*t1323*t348;
  t1414 = t297*t1385*t764;
  t1480 = -1.*t297*t9*t1479;
  t1485 = t1323*t881;
  t1487 = t1479*t764;
  t1539 = -1.*t297*t9*t1538;
  t2589 = Power(t9,2);
  t1547 = t1538*t764;
  t1590 = t1323*t361;
  t1595 = t1282*t702;
  t2604 = t9*t1290*t148;
  t2606 = t1282*t361;
  t1604 = -1.*t1282*t764;
  t1609 = -1.*t1323*t414;
  t2616 = t2604 + t2606 + t1543;
  t1618 = -1.*t297*t9*t1323*t148;
  t1621 = t297*t1385*t702;
  t2619 = -1.*t9*t1290*t348;
  t2620 = -1.*t1282*t414;
  t2621 = t2619 + t1571 + t2620;
  t1630 = t297*t9*t1323*t348;
  t1633 = -1.*t297*t1385*t764;
  t1646 = t1479*t702;
  t1657 = -1.*t1323*t881;
  t1658 = -1.*t1479*t764;
  t1674 = t1323*t789;
  t1676 = t1538*t702;
  t1704 = -1.*t1538*t764;
  t1773 = -1.*t9*t249*t1323;
  t1777 = -1.*t1323*t361;
  t1781 = -1.*t1282*t702;
  t2761 = -1.*t9*t1290*t148;
  t2764 = -1.*t1282*t361;
  t2771 = -1.*t9*t249*t1282;
  t2772 = t270*t1290;
  t2775 = t2771 + t1748 + t2772;
  t1797 = -1.*t297*t270*t1323;
  t1798 = t1402*t9*t1385;
  t2564 = Power(t249,2);
  t2788 = t2761 + t2764 + t1695;
  t1805 = t297*t9*t1323*t148;
  t1810 = -1.*t297*t1385*t702;
  t1825 = t297*t9*t1479;
  t1831 = -1.*t1479*t702;
  t1843 = t297*t9*t1538;
  t1847 = -1.*t1323*t789;
  t1850 = -1.*t1538*t702;
  t2038 = t504*t249*t1985;
  t2058 = t1922*t936;
  t2060 = t1985*t608;
  t2867 = -1.*t525*t1889;
  t2868 = t504*t249*t1922;
  t2869 = t2867 + t2868 + t1986;
  t2080 = -1.*t504*t1402*t2079;
  t2089 = t297*t525*t1985;
  t2101 = -1.*t504*t297*t522*t1985;
  t2102 = t297*t2079*t936;
  t2874 = t504*t1889*t522;
  t2875 = t1922*t608;
  t2876 = t2874 + t2013 + t2875;
  t2127 = -1.*t504*t297*t2126;
  t2146 = t2126*t936;
  t2147 = t1985*t1060;
  t2182 = -1.*t504*t297*t2181;
  t2962 = Power(t504,2);
  t2220 = t2181*t936;
  t2265 = t1985*t533;
  t2267 = t1922*t901;
  t2986 = t504*t1889*t515;
  t2989 = t1922*t533;
  t2276 = -1.*t1922*t936;
  t2277 = -1.*t1985*t608;
  t2287 = -1.*t504*t297*t515*t1985;
  t2288 = t297*t2079*t901;
  t3001 = t2986 + t2989 + t2221;
  t2298 = t504*t297*t522*t1985;
  t2299 = -1.*t297*t2079*t936;
  t3003 = -1.*t504*t1889*t522;
  t3005 = -1.*t1922*t608;
  t3006 = t3003 + t2250 + t3005;
  t2315 = t2126*t901;
  t2321 = -1.*t2126*t936;
  t2325 = -1.*t1985*t1060;
  t2342 = t1985*t946;
  t2343 = t2181*t901;
  t2362 = -1.*t2181*t936;
  t2454 = -1.*t504*t249*t1985;
  t2472 = -1.*t1985*t533;
  t2473 = -1.*t1922*t901;
  t3095 = -1.*t504*t1889*t515;
  t3101 = -1.*t1922*t533;
  t3109 = t525*t1889;
  t3110 = -1.*t504*t249*t1922;
  t3111 = t3109 + t3110 + t2429;
  t2488 = t504*t1402*t2079;
  t2491 = -1.*t297*t525*t1985;
  t2498 = t504*t297*t515*t1985;
  t2499 = -1.*t297*t2079*t901;
  t3133 = t3095 + t3101 + t2372;
  t2512 = t504*t297*t2126;
  t2519 = -1.*t2126*t901;
  t2527 = t504*t297*t2181;
  t2533 = -1.*t1985*t946;
  t2534 = -1.*t2181*t901;
  t2566 = -1.*t9*t1290;
  t2568 = -1.*t270*t1388;
  t2574 = -1.*t270*t1290*t348;
  t2575 = t9*t1388*t348;
  t3222 = -1.*t9*t1268;
  t3224 = t2548 + t3222;
  t2588 = t9*t1290*t406;
  t2590 = t2589*t1434*t348;
  t2605 = t2589*t1510*t348;
  t3265 = Power(t270,2);
  t2631 = -1.*t270*t1290*t148;
  t2633 = t9*t1388*t148;
  t2640 = t270*t1290*t348;
  t2641 = -1.*t9*t1388*t348;
  t3276 = -1.*t270*t1268*t148;
  t3280 = t1276*t348;
  t3298 = -1.*t1276*t406;
  t3301 = t270*t1268*t348;
  t3302 = t3298 + t2619 + t3301;
  t3307 = t2604 + t3276 + t3280;
  t2661 = -1.*t9*t1290*t406;
  t2662 = -1.*t2589*t1434*t348;
  t2654 = t2589*t1434*t148;
  t3237 = t1276*t406;
  t3244 = -1.*t270*t1268*t348;
  t2763 = -1.*t2589*t1510*t348;
  t2722 = t2589*t1510*t148;
  t2729 = t9*t1290*t425;
  t2797 = t9*t1290;
  t2798 = t270*t1388;
  t2804 = t270*t1290*t148;
  t2805 = -1.*t9*t1388*t148;
  t3337 = t270*t1268*t148;
  t3340 = -1.*t1276*t348;
  t3368 = t9*t1268;
  t3372 = t2772 + t3368;
  t2838 = -1.*t2589*t1434*t148;
  t2859 = -1.*t2589*t1510*t148;
  t2860 = -1.*t9*t1290*t425;
  t2892 = -1.*t504*t1889;
  t2894 = -1.*t525*t2082;
  t2914 = -1.*t525*t1889*t522;
  t2916 = t504*t2082*t522;
  t3440 = -1.*t504*t1919;
  t3441 = t2867 + t3440;
  t2956 = t504*t1889*t603;
  t2966 = t2962*t2117*t522;
  t2987 = t2962*t2174*t522;
  t3484 = Power(t525,2);
  t3015 = -1.*t525*t1889*t515;
  t3016 = t504*t2082*t515;
  t3024 = t525*t1889*t522;
  t3025 = -1.*t504*t2082*t522;
  t3514 = -1.*t525*t1919*t515;
  t3516 = t1905*t522;
  t3537 = -1.*t1905*t603;
  t3538 = t525*t1919*t522;
  t3539 = t3537 + t3003 + t3538;
  t3545 = t2986 + t3514 + t3516;
  t3046 = -1.*t504*t1889*t603;
  t3061 = -1.*t2962*t2117*t522;
  t3040 = t2962*t2117*t515;
  t3464 = t1905*t603;
  t3465 = -1.*t525*t1919*t522;
  t3096 = -1.*t2962*t2174*t522;
  t3078 = t2962*t2174*t515;
  t3079 = t504*t1889*t618;
  t3143 = t504*t1889;
  t3146 = t525*t2082;
  t3160 = t525*t1889*t515;
  t3162 = -1.*t504*t2082*t515;
  t3574 = t525*t1919*t515;
  t3580 = -1.*t1905*t522;
  t3597 = t504*t1919;
  t3598 = t3109 + t3597;
  t3194 = -1.*t2962*t2117*t515;
  t3212 = -1.*t2962*t2174*t515;
  t3214 = -1.*t504*t1889*t618;
  t3315 = -1.*t1451*t406;
  t3316 = -1.*t1276*t425;
  t3322 = t1451*t348;
  t3668 = t1265*t148;
  t3670 = t3668 + t3280;
  t3685 = -1.*t1265*t348;
  t3686 = t3298 + t3685;
  t3339 = -1.*t1515*t406;
  t3344 = t1276*t148;
  t3349 = t1515*t348;
  t3555 = -1.*t2123*t603;
  t3556 = -1.*t1905*t618;
  t3567 = t2123*t522;
  t3756 = t1883*t515;
  t3759 = t3756 + t3516;
  t3774 = -1.*t1883*t522;
  t3775 = t3537 + t3774;
  t3577 = -1.*t2177*t603;
  t3585 = t1905*t515;
  t3590 = t2177*t522;
  p_output1[0]=t370;
  p_output1[1]=t380*t6;
  p_output1[2]=t397;
  p_output1[3]=t417;
  p_output1[4]=t447;
  p_output1[5]=t459;
  p_output1[6]=-1.*t297*t6*t9;
  p_output1[7]=t468;
  p_output1[8]=t473;
  p_output1[9]=t479*t6;
  p_output1[10]=t484;
  p_output1[11]=t492;
  p_output1[12]=t503;
  p_output1[13]=t552;
  p_output1[14]=t575*t6;
  p_output1[15]=t597;
  p_output1[16]=t612;
  p_output1[17]=t631;
  p_output1[18]=t635;
  p_output1[19]=-1.*t297*t504*t6;
  p_output1[20]=t645;
  p_output1[21]=t652;
  p_output1[22]=t6*t657;
  p_output1[23]=t664;
  p_output1[24]=t680;
  p_output1[25]=t688;
  p_output1[26]=-1.*t694*t702 - 1.*t370*t717;
  p_output1[27]=-1.*t694*t742;
  p_output1[28]=t234*t380*t694 + t361*t717;
  p_output1[29]=-1.*t694*t754 - 1.*t148*t297*t717*t9;
  p_output1[30]=t783;
  p_output1[31]=t717*t789 - 1.*t694*t796;
  p_output1[32]=-1.*t459*t717 - 1.*t297*t694*t9;
  p_output1[33]=-1.*t694*t817;
  p_output1[34]=-1.*t234*t297*t694*t9 - 1.*t249*t717*t9;
  p_output1[35]=-1.*t270*t297*t717 - 1.*t694*t837;
  p_output1[36]=-1.*t473*t717 - 1.*t694*t764;
  p_output1[37]=-1.*t694*t858;
  p_output1[38]=t234*t479*t694 + t414*t717;
  p_output1[39]=-1.*t694*t875 - 1.*t297*t348*t717*t9;
  p_output1[40]=t717*t881 - 1.*t694*t887;
  p_output1[41]=t896;
  p_output1[42]=-1.*t552*t717 - 1.*t694*t901;
  p_output1[43]=-1.*t694*t912;
  p_output1[44]=t234*t575*t694 + t533*t717;
  p_output1[45]=-1.*t297*t504*t515*t717 - 1.*t694*t927;
  p_output1[46]=t940;
  p_output1[47]=t717*t946 - 1.*t694*t952;
  p_output1[48]=-1.*t297*t504*t694 - 1.*t635*t717;
  p_output1[49]=-1.*t694*t989;
  p_output1[50]=-1.*t234*t297*t504*t694 - 1.*t249*t504*t717;
  p_output1[51]=-1.*t1019*t694 - 1.*t297*t525*t717;
  p_output1[52]=-1.*t652*t717 - 1.*t694*t936;
  p_output1[53]=-1.*t1033*t694;
  p_output1[54]=t234*t657*t694 + t608*t717;
  p_output1[55]=-1.*t1053*t694 - 1.*t297*t504*t522*t717;
  p_output1[56]=-1.*t1074*t694 + t1060*t717;
  p_output1[57]=t1089;
  p_output1[58]=t896;
  p_output1[59]=t717*t742;
  p_output1[60]=t361*t694 - 1.*t234*t380*t717;
  p_output1[61]=t717*t754 - 1.*t148*t297*t694*t9;
  p_output1[62]=t473*t717 + t694*t764;
  p_output1[63]=t694*t789 + t717*t796;
  p_output1[64]=-1.*t459*t694 + t297*t717*t9;
  p_output1[65]=t717*t817;
  p_output1[66]=-1.*t249*t694*t9 + t234*t297*t717*t9;
  p_output1[67]=-1.*t270*t297*t694 + t717*t837;
  p_output1[68]=t783;
  p_output1[69]=t717*t858;
  p_output1[70]=t414*t694 - 1.*t234*t479*t717;
  p_output1[71]=t717*t875 - 1.*t297*t348*t694*t9;
  p_output1[72]=t694*t881 + t717*t887;
  p_output1[73]=t694*t702 + t370*t717;
  p_output1[74]=t1089;
  p_output1[75]=t717*t912;
  p_output1[76]=t533*t694 - 1.*t234*t575*t717;
  p_output1[77]=-1.*t297*t504*t515*t694 + t717*t927;
  p_output1[78]=t652*t717 + t694*t936;
  p_output1[79]=t694*t946 + t717*t952;
  p_output1[80]=-1.*t635*t694 + t297*t504*t717;
  p_output1[81]=t717*t989;
  p_output1[82]=-1.*t249*t504*t694 + t234*t297*t504*t717;
  p_output1[83]=-1.*t297*t525*t694 + t1019*t717;
  p_output1[84]=t940;
  p_output1[85]=t1033*t717;
  p_output1[86]=t608*t694 - 1.*t234*t657*t717;
  p_output1[87]=-1.*t297*t504*t522*t694 + t1053*t717;
  p_output1[88]=t1060*t694 + t1074*t717;
  p_output1[89]=t552*t717 + t694*t901;
  p_output1[90]=t1332*t459 + t1325*t473 + t417*(-1.*t1299*t1305 - 1.*t1309*t459 - 1.*t1313*t459 - 1.*t1299*t817) + t1305*(t1299*t417 + t1309*t473 + t1313*t473 + t1299*t858);
  p_output1[91]=t1325*t479*t6 + t1305*(t1366 + t1369 - 1.*t1353*t234*t473 - 1.*t1299*t234*t479 + t1353*t417*t6 + t1313*t479*t6) - 1.*t1332*t297*t6*t9 + t417*(t1358 + t1353*t234*t459 - 1.*t1305*t1353*t6 - 1.*t1282*t297*t9 - 1.*t1299*t234*t297*t9 + t1313*t297*t6*t9);
  p_output1[92]=t1332*t468 + t1325*t484 + t417*(-1.*t1305*t1398 + t1401 + t1403 - 1.*t1391*t459 - 1.*t1313*t468 - 1.*t1299*t837) + t1305*(t1411 + t1414 + t1398*t417 + t1391*t473 + t1313*t484 + t1299*t875);
  p_output1[93]=t417*(-1.*t1305*t1473 + t1480 - 1.*t1460*t459) + t1325*t492 + t1305*(t1485 + t1487 + t1473*t417 + t1460*t473 + t1313*t492 + t1299*t887);
  p_output1[94]=t417*(-1.*t1305*t1531 + t1539 - 1.*t1526*t459) + t1305*(t1543 + t1547 + t1548 + t1549 + t1531*t417 + t1526*t473) + t1325*t503;
  p_output1[95]=t1575*t370 + t1558*t473 + t417*(t1309*t370 + t1313*t370 + t1299*t503 + t1299*t742) + t503*(-1.*t1299*t417 - 1.*t1309*t473 - 1.*t1313*t473 - 1.*t1299*t858);
  p_output1[96]=t1575*t380*t6 + t1558*t479*t6 + t503*(t1604 + t1609 + t1353*t234*t473 + t1299*t234*t479 - 1.*t1353*t417*t6 - 1.*t1313*t479*t6) + t417*(t1590 + t1595 - 1.*t1353*t234*t370 - 1.*t1299*t234*t380 + t1313*t380*t6 + t1353*t503*t6);
  p_output1[97]=t1575*t397 + t1558*t484 + t417*(t1618 + t1621 + t1391*t370 + t1313*t397 + t1398*t503 + t1299*t754) + t503*(t1630 + t1633 - 1.*t1398*t417 - 1.*t1391*t473 - 1.*t1313*t484 - 1.*t1299*t875);
  p_output1[98]=t1575*t417 + t1558*t492 + t417*(t1328 + t1329 + t1330 + t1646 + t1460*t370 + t1473*t503) + t503*(t1657 + t1658 - 1.*t1473*t417 - 1.*t1460*t473 - 1.*t1313*t492 - 1.*t1299*t887);
  p_output1[99]=t1575*t447 + t1558*t503 + (t1695 + t1704 + t1706 + t1711 - 1.*t1531*t417 - 1.*t1526*t473)*t503 + t417*(t1674 + t1676 + t1526*t370 + t1313*t447 + t1531*t503 + t1299*t796);
  p_output1[100]=t1750*t370 + t1752*t459 + t1305*(-1.*t1309*t370 - 1.*t1313*t370 - 1.*t1299*t503 - 1.*t1299*t742) + t503*(t1299*t1305 + t1309*t459 + t1313*t459 + t1299*t817);
  p_output1[101]=t1750*t380*t6 + t1305*(t1777 + t1781 + t1353*t234*t370 + t1299*t234*t380 - 1.*t1313*t380*t6 - 1.*t1353*t503*t6) - 1.*t1752*t297*t6*t9 + t503*(t1773 - 1.*t1353*t234*t459 + t1305*t1353*t6 + t1282*t297*t9 + t1299*t234*t297*t9 - 1.*t1313*t297*t6*t9);
  p_output1[102]=t1750*t397 + t1752*t468 + t1305*(t1805 + t1810 - 1.*t1391*t370 - 1.*t1313*t397 - 1.*t1398*t503 - 1.*t1299*t754) + t503*(t1305*t1398 + t1797 + t1798 + t1391*t459 + t1313*t468 + t1299*t837);
  p_output1[103]=t1750*t417 + (t1305*t1473 + t1825 + t1460*t459)*t503 + t1305*(t1571 + t1572 + t1574 + t1831 - 1.*t1460*t370 - 1.*t1473*t503);
  p_output1[104]=t1750*t447 + (t1305*t1531 + t1843 + t1526*t459)*t503 + t1305*(t1847 + t1850 - 1.*t1526*t370 - 1.*t1313*t447 - 1.*t1531*t503 - 1.*t1299*t796);
  p_output1[105]=t2024*t635 + t1990*t652 + t1948*(t1033*t1961 + t1961*t612 + t1926*t652 + t1937*t652) + t612*(-1.*t1948*t1961 - 1.*t1926*t635 - 1.*t1937*t635 - 1.*t1961*t989);
  p_output1[106]=-1.*t2024*t297*t504*t6 + t612*(t2038 - 1.*t1922*t297*t504 - 1.*t1961*t234*t297*t504 - 1.*t1948*t2034*t6 + t1937*t297*t504*t6 + t2034*t234*t635) + t1990*t6*t657 + t1948*(t2058 + t2060 + t2034*t6*t612 - 1.*t2034*t234*t652 - 1.*t1961*t234*t657 + t1937*t6*t657);
  p_output1[107]=t2024*t645 + t612*(-1.*t1019*t1961 + t2080 - 1.*t1948*t2086 + t2089 - 1.*t2093*t635 - 1.*t1937*t645) + t1990*t664 + t1948*(t1053*t1961 + t2101 + t2102 + t2086*t612 + t2093*t652 + t1937*t664);
  p_output1[108]=t612*(t2127 - 1.*t1948*t2135 - 1.*t2141*t635) + t1990*t680 + t1948*(t1074*t1961 + t2146 + t2147 + t2135*t612 + t2141*t652 + t1937*t680);
  p_output1[109]=t612*(t2182 - 1.*t1948*t2207 - 1.*t2215*t635) + t1948*(t2220 + t2221 + t2223 + t2224 + t2207*t612 + t2215*t652) + t1990*t688;
  p_output1[110]=t2259*t552 + t2239*t652 + (-1.*t1033*t1961 - 1.*t1961*t612 - 1.*t1926*t652 - 1.*t1937*t652)*t688 + t612*(t1926*t552 + t1937*t552 + t1961*t688 + t1961*t912);
  p_output1[111]=t2259*t575*t6 + t2239*t6*t657 + (t2276 + t2277 - 1.*t2034*t6*t612 + t2034*t234*t652 + t1961*t234*t657 - 1.*t1937*t6*t657)*t688 + t612*(t2265 + t2267 - 1.*t2034*t234*t552 - 1.*t1961*t234*t575 + t1937*t575*t6 + t2034*t6*t688);
  p_output1[112]=t2259*t597 + t2239*t664 + (-1.*t1053*t1961 + t2298 + t2299 - 1.*t2086*t612 - 1.*t2093*t652 - 1.*t1937*t664)*t688 + t612*(t2287 + t2288 + t2093*t552 + t1937*t597 + t2086*t688 + t1961*t927);
  p_output1[113]=t2259*t612 + t2239*t680 + (-1.*t1074*t1961 + t2321 + t2325 - 1.*t2135*t612 - 1.*t2141*t652 - 1.*t1937*t680)*t688 + t612*(t2013 + t2022 + t2023 + t2315 + t2141*t552 + t2135*t688);
  p_output1[114]=t2259*t631 + t2239*t688 + (t2362 + t2372 + t2379 + t2387 - 1.*t2207*t612 - 1.*t2215*t652)*t688 + t612*(t2342 + t2343 + t2215*t552 + t1937*t631 + t2207*t688 + t1961*t952);
  p_output1[115]=t2435*t552 + t2448*t635 + t1948*(-1.*t1926*t552 - 1.*t1937*t552 - 1.*t1961*t688 - 1.*t1961*t912) + t688*(t1948*t1961 + t1926*t635 + t1937*t635 + t1961*t989);
  p_output1[116]=-1.*t2448*t297*t504*t6 + t2435*t575*t6 + (t2454 + t1922*t297*t504 + t1961*t234*t297*t504 + t1948*t2034*t6 - 1.*t1937*t297*t504*t6 - 1.*t2034*t234*t635)*t688 + t1948*(t2472 + t2473 + t2034*t234*t552 + t1961*t234*t575 - 1.*t1937*t575*t6 - 1.*t2034*t6*t688);
  p_output1[117]=t2435*t597 + t2448*t645 + (t1019*t1961 + t1948*t2086 + t2488 + t2491 + t2093*t635 + t1937*t645)*t688 + t1948*(t2498 + t2499 - 1.*t2093*t552 - 1.*t1937*t597 - 1.*t2086*t688 - 1.*t1961*t927);
  p_output1[118]=t2435*t612 + (t1948*t2135 + t2512 + t2141*t635)*t688 + t1948*(t2250 + t2257 + t2258 + t2519 - 1.*t2141*t552 - 1.*t2135*t688);
  p_output1[119]=t2435*t631 + (t1948*t2207 + t2527 + t2215*t635)*t688 + t1948*(t2533 + t2534 - 1.*t2215*t552 - 1.*t1937*t631 - 1.*t2207*t688 - 1.*t1961*t952);
  p_output1[120]=t2549*t414 - 1.*t249*t2554*t9 + t297*(t1366 + t1369 + t1353*t414 + t1282*t479)*t9 + t764*(t1358 + t1353*t249*t9);
  p_output1[121]=-1.*t2554*t270*t297 - 1.*t2549*t297*t348*t9 + t764*(t1401 + t1403 + t2566 + t2568 - 1.*t1282*t249*t270 - 1.*t1385*t2564*t9) + t297*t9*(t1411 + t1414 + t2574 + t2575 - 1.*t1385*t249*t414 + t1282*t249*t348*t9);
  p_output1[122]=t2549*t881 + t297*(t1485 + t1487 + t2588 + t2590 + t1453*t414 + t1282*t489)*t9 + t764*(t1480 + t1453*t249*t9 - 1.*t1434*t270*t9);
  p_output1[123]=t2549*t702 + t297*(t1543 + t1547 + t2604 + t2605 + t2606 + t1520*t414)*t9 + t764*(t1539 + t1520*t249*t9 - 1.*t1510*t270*t9);
  p_output1[124]=t2621*t361 + t2616*t414 + (t1604 + t1609 - 1.*t1353*t414 - 1.*t1282*t479)*t702 + (t1590 + t1595 + t1353*t361 + t1282*t380)*t764;
  p_output1[125]=-1.*t148*t2621*t297*t9 - 1.*t2616*t297*t348*t9 + t764*(t1618 + t1621 + t2631 + t2633 - 1.*t1385*t249*t361 + t1282*t148*t249*t9) + t702*(t1630 + t1633 + t2640 + t2641 + t1385*t249*t414 - 1.*t1282*t249*t348*t9);
  p_output1[126]=(t1657 + t1658 + t2661 + t2662 - 1.*t1453*t414 - 1.*t1282*t489)*t702 + t2621*t764 + (t1328 + t1646 + t2551 + t2552 + t2654 + t1453*t361)*t764 + t2616*t881;
  p_output1[127]=t2616*t702 + (t1695 + t1704 + t2761 + t2763 + t2764 - 1.*t1520*t414)*t702 + (t1674 + t1676 + t2722 + t2729 + t1520*t361 + t1282*t442)*t764 + t2621*t789;
  p_output1[128]=t2775*t361 - 1.*t249*t2788*t9 + t297*(t1777 + t1781 - 1.*t1353*t361 - 1.*t1282*t380)*t9 + t702*(t1773 - 1.*t1353*t249*t9);
  p_output1[129]=-1.*t270*t2788*t297 - 1.*t148*t2775*t297*t9 + t297*t9*(t1805 + t1810 + t2804 + t2805 + t1385*t249*t361 - 1.*t1282*t148*t249*t9) + t702*(t1797 + t1798 + t1282*t249*t270 + t2797 + t2798 + t1385*t2564*t9);
  p_output1[130]=t2775*t764 + t297*(t1571 + t1831 + t2619 + t2620 + t2838 - 1.*t1453*t361)*t9 + t702*(t1825 - 1.*t1453*t249*t9 + t1434*t270*t9);
  p_output1[131]=t2775*t789 + t297*(t1847 + t1850 + t2859 + t2860 - 1.*t1520*t361 - 1.*t1282*t442)*t9 + t702*(t1843 - 1.*t1520*t249*t9 + t1510*t270*t9);
  p_output1[132]=-1.*t249*t2876*t504 + t2869*t608 + t297*t504*(t2058 + t2060 + t2034*t608 + t1922*t657) + (t2038 + t2034*t249*t504)*t936;
  p_output1[133]=-1.*t2869*t297*t504*t522 - 1.*t2876*t297*t525 + t297*t504*(t2101 + t2102 + t2914 + t2916 + t1922*t249*t504*t522 - 1.*t2079*t249*t608) + (t2080 + t2089 + t2892 + t2894 - 1.*t2079*t2564*t504 - 1.*t1922*t249*t525)*t936;
  p_output1[134]=t1060*t2869 + t297*t504*(t2146 + t2147 + t2956 + t2966 + t2133*t608 + t1922*t673) + (t2127 + t2133*t249*t504 - 1.*t2117*t504*t525)*t936;
  p_output1[135]=t297*t504*(t2220 + t2221 + t2986 + t2987 + t2989 + t2201*t608) + t2869*t901 + (t2182 + t2201*t249*t504 - 1.*t2174*t504*t525)*t936;
  p_output1[136]=t3006*t533 + t3001*t608 + (t2276 + t2277 - 1.*t2034*t608 - 1.*t1922*t657)*t901 + (t2265 + t2267 + t2034*t533 + t1922*t575)*t936;
  p_output1[137]=-1.*t297*t3006*t504*t515 - 1.*t297*t3001*t504*t522 + (t2298 + t2299 + t3024 + t3025 - 1.*t1922*t249*t504*t522 + t2079*t249*t608)*t901 + (t2287 + t2288 + t3015 + t3016 + t1922*t249*t504*t515 - 1.*t2079*t249*t533)*t936;
  p_output1[138]=t1060*t3001 + (t2321 + t2325 + t3046 + t3061 - 1.*t2133*t608 - 1.*t1922*t673)*t901 + t3006*t936 + (t2013 + t2315 + t2874 + t2875 + t3040 + t2133*t533)*t936;
  p_output1[139]=t3001*t901 + (t2362 + t2372 + t3095 + t3096 + t3101 - 1.*t2201*t608)*t901 + (t2342 + t2343 + t3078 + t3079 + t2201*t533 + t1922*t628)*t936 + t3006*t946;
  p_output1[140]=-1.*t249*t3133*t504 + t3111*t533 + t297*t504*(t2472 + t2473 - 1.*t2034*t533 - 1.*t1922*t575) + (t2454 - 1.*t2034*t249*t504)*t901;
  p_output1[141]=-1.*t297*t3111*t504*t515 - 1.*t297*t3133*t525 + t297*t504*(t2498 + t2499 + t3160 + t3162 - 1.*t1922*t249*t504*t515 + t2079*t249*t533) + (t2488 + t2491 + t3143 + t3146 + t2079*t2564*t504 + t1922*t249*t525)*t901;
  p_output1[142]=t297*t504*(t2250 + t2519 + t3003 + t3005 + t3194 - 1.*t2133*t533) + (t2512 - 1.*t2133*t249*t504 + t2117*t504*t525)*t901 + t3111*t936;
  p_output1[143]=t297*t504*(t2533 + t2534 + t3212 + t3214 - 1.*t2201*t533 - 1.*t1922*t628) + (t2527 - 1.*t2201*t249*t504 + t2174*t504*t525)*t901 + t3111*t946;
  p_output1[144]=-1.*t270*t3224*t348 + (t2551 + t3237 + t3244)*t9 + t348*t9*(t2566 + t2568 + t1268*t270 - 1.*t1385*t9) + t270*(t2574 + t2575 - 1.*t1385*t270*t348 - 1.*t1268*t348*t9);
  p_output1[145]=t270*(t2588 + t2590 + t1434*t3265*t348 + t1451*t406 - 1.*t1268*t270*t406 + t1276*t425) + t3224*t406*t9;
  p_output1[146]=t270*(t2604 + t2605 + t3276 + t3280 + t1510*t3265*t348 + t1515*t406) + t148*t3224*t9;
  p_output1[147]=-1.*t148*t270*t3302 - 1.*t270*t3307*t348 + t348*t9*(t2631 + t2633 - 1.*t1385*t148*t270 - 1.*t1268*t148*t9) + t148*t9*(t2640 + t2641 + t1385*t270*t348 + t1268*t348*t9);
  p_output1[148]=t3302*t348*t9 + (t2551 + t2654 + t3237 + t3244 + t1434*t148*t3265 + t3322)*t348*t9 + t3307*t406*t9 + t148*(t2661 + t2662 + t3315 + t3316 - 1.*t1434*t3265*t348 + t1268*t270*t406)*t9;
  p_output1[149]=t148*t3307*t9 + t148*(t2761 + t2763 + t3337 + t3339 + t3340 - 1.*t1510*t3265*t348)*t9 + t3302*t425*t9 + t348*(t2722 + t2729 + t148*t1510*t3265 + t3344 + t3349 - 1.*t1268*t270*t425)*t9;
  p_output1[150]=-1.*t148*t270*t3372 + (t2761 + t3337 + t3340)*t9 + t148*t9*(-1.*t1268*t270 + t2797 + t2798 + t1385*t9) + t270*(t1385*t148*t270 + t2804 + t2805 + t1268*t148*t9);
  p_output1[151]=t270*(t2619 + t2838 - 1.*t1434*t148*t3265 + t3298 + t3301 - 1.*t1451*t348) + t3372*t348*t9;
  p_output1[152]=t270*(-1.*t1276*t148 + t2859 + t2860 - 1.*t148*t1510*t3265 - 1.*t1515*t348 + t1268*t270*t425) + t3372*t425*t9;
  p_output1[153]=(t2874 + t3464 + t3465)*t504 - 1.*t3441*t522*t525 + t504*t522*(t2892 + t2894 - 1.*t2079*t504 + t1919*t525) + t525*(t2914 + t2916 - 1.*t1919*t504*t522 - 1.*t2079*t522*t525);
  p_output1[154]=t3441*t504*t603 + t525*(t2956 + t2966 + t2117*t3484*t522 + t2123*t603 - 1.*t1919*t525*t603 + t1905*t618);
  p_output1[155]=t3441*t504*t515 + t525*(t2986 + t2987 + t3514 + t3516 + t2174*t3484*t522 + t2177*t603);
  p_output1[156]=-1.*t3539*t515*t525 - 1.*t3545*t522*t525 + t504*t522*(t3015 + t3016 - 1.*t1919*t504*t515 - 1.*t2079*t515*t525) + t504*t515*(t3024 + t3025 + t1919*t504*t522 + t2079*t522*t525);
  p_output1[157]=t3539*t504*t522 + t504*(t2874 + t3040 + t3464 + t3465 + t3567 + t2117*t3484*t515)*t522 + t3545*t504*t603 + t504*t515*(t3046 + t3061 + t3555 + t3556 - 1.*t2117*t3484*t522 + t1919*t525*t603);
  p_output1[158]=t3545*t504*t515 + t504*t515*(t3095 + t3096 + t3574 + t3577 + t3580 - 1.*t2174*t3484*t522) + t3539*t504*t618 + t504*t522*(t3078 + t3079 + t3585 + t3590 + t2174*t3484*t515 - 1.*t1919*t525*t618);
  p_output1[159]=(t3095 + t3574 + t3580)*t504 - 1.*t3598*t515*t525 + t504*t515*(t3143 + t3146 + t2079*t504 - 1.*t1919*t525) + t525*(t3160 + t3162 + t1919*t504*t515 + t2079*t515*t525);
  p_output1[160]=t3598*t504*t522 + (t3003 + t3194 + t3537 + t3538 - 1.*t2117*t3484*t515 - 1.*t2123*t522)*t525;
  p_output1[161]=t3598*t504*t618 + t525*(t3212 + t3214 - 1.*t1905*t515 - 1.*t2174*t3484*t515 - 1.*t2177*t522 + t1919*t525*t618);
  p_output1[162]=-0.1575*t348 - 0.2255*t425;
  p_output1[163]=-0.2255*t348 - 0.1575*t425;
  p_output1[164]=(t1434*t148 + t3237 + t3322 + t1265*t348)*t406 + t3686*t406 + t348*(t3315 + t3316 - 1.*t1434*t348 - 1.*t1265*t406) + t3670*t425;
  p_output1[165]=t348*(-1.*t1265*t148 + t3339 + t3340 - 1.*t1510*t348) + t348*t3670 + t148*t3686 + t406*(t148*t1510 + t3344 + t3349 + t1265*t425);
  p_output1[166]=0.068*t406;
  p_output1[167]=0.068*t148;
  p_output1[168]=0.325*t35 - 1.*t1261*t35 - 1.*t1508*t35;
  p_output1[169]=0.325*t90 - 1.*t1261*t90 - 1.*t1508*t90;
  p_output1[170]=-0.1575*t522 - 0.2255*t618;
  p_output1[171]=-0.2255*t522 - 0.1575*t618;
  p_output1[172]=t3775*t603 + (t3464 + t3567 + t2117*t515 + t1883*t522)*t603 + t522*(t3555 + t3556 - 1.*t2117*t522 - 1.*t1883*t603) + t3759*t618;
  p_output1[173]=t3775*t515 + t3759*t522 + t522*(t3577 + t3580 - 1.*t1883*t515 - 1.*t2174*t522) + t603*(t3585 + t3590 + t2174*t515 + t1883*t618);
  p_output1[174]=0.068*t603;
  p_output1[175]=0.068*t515;
  p_output1[176]=-0.325*t506 - 1.*t1881*t506 - 1.*t2170*t506;
  p_output1[177]=-0.325*t512 - 1.*t1881*t512 - 1.*t2170*t512;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance2.hh"

namespace SymFunction
{

void J_Je_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
