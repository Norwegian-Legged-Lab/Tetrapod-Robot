/*
 * Automatically Generated from Mathematica.
 * Wed 6 Apr 2022 13:26:26 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t17;
  double t18;
  double t19;
  double t21;
  double t23;
  double t25;
  double t30;
  double t14;
  double t42;
  double t38;
  double t37;
  double t45;
  double t47;
  double t48;
  double t16;
  double t36;
  double t96;
  double t97;
  double t98;
  double t78;
  double t79;
  double t82;
  double t87;
  double t88;
  double t91;
  double t40;
  double t52;
  double t53;
  double t201;
  double t193;
  double t195;
  double t202;
  double t196;
  double t204;
  double t211;
  double t230;
  double t213;
  double t218;
  double t219;
  double t189;
  double t327;
  double t335;
  double t341;
  double t288;
  double t289;
  double t290;
  double t293;
  double t294;
  double t295;
  double t223;
  double t231;
  double t232;
  double t33;
  double t54;
  double t56;
  double t578;
  double t588;
  double t59;
  double t65;
  double t68;
  double t140;
  double t141;
  double t142;
  double t105;
  double t106;
  double t107;
  double t116;
  double t118;
  double t123;
  double t674;
  double t676;
  double t677;
  double t143;
  double t146;
  double t147;
  double t167;
  double t168;
  double t169;
  double t580;
  double t581;
  double t582;
  double t212;
  double t237;
  double t238;
  double t239;
  double t240;
  double t244;
  double t438;
  double t439;
  double t460;
  double t349;
  double t359;
  double t360;
  double t378;
  double t386;
  double t412;
  double t1492;
  double t1500;
  double t1523;
  double t498;
  double t507;
  double t532;
  double t562;
  double t568;
  double t570;
  double t1253;
  double t1264;
  double t1279;
  double t1178;
  double t1241;
  double t1251;
  double t594;
  double t596;
  double t611;
  double t659;
  double t669;
  double t670;
  double t718;
  double t805;
  double t809;
  double t832;
  double t846;
  double t874;
  double t921;
  double t935;
  double t945;
  double t971;
  double t978;
  double t987;
  double t679;
  double t684;
  double t685;
  double t998;
  double t1001;
  double t1020;
  double t1077;
  double t1081;
  double t1082;
  double t1139;
  double t1140;
  double t1143;
  double t1150;
  double t1151;
  double t1158;
  double t2967;
  double t2968;
  double t2973;
  double t1334;
  double t1346;
  double t1359;
  double t1422;
  double t1431;
  double t1470;
  double t1560;
  double t1561;
  double t1570;
  double t1576;
  double t1585;
  double t1603;
  double t1692;
  double t1708;
  double t1724;
  double t1930;
  double t2021;
  double t2037;
  double t1534;
  double t1545;
  double t1553;
  double t2329;
  double t2383;
  double t2394;
  double t2645;
  double t2649;
  double t2652;
  double t2778;
  double t2779;
  double t2880;
  double t2900;
  double t2906;
  double t2919;
  double t3782;
  double t3789;
  double t3795;
  double t3800;
  double t3803;
  double t3804;
  double t3806;
  double t3814;
  double t3816;
  double t3777;
  double t3798;
  double t3817;
  double t3821;
  double t3769;
  double t3770;
  double t3771;
  double t3772;
  double t3823;
  double t3825;
  double t3826;
  double t3827;
  double t3831;
  double t3834;
  double t3841;
  double t3843;
  double t3847;
  double t3848;
  double t3849;
  double t3851;
  double t3852;
  double t3857;
  double t3861;
  double t3862;
  double t3863;
  double t77;
  double t92;
  double t93;
  double t3865;
  double t3868;
  double t3872;
  double t3885;
  double t3886;
  double t3887;
  double t3905;
  double t3907;
  double t3915;
  double t3875;
  double t3877;
  double t3878;
  double t3897;
  double t3898;
  double t3916;
  double t3920;
  double t4008;
  double t4009;
  double t4013;
  double t3928;
  double t3939;
  double t3942;
  double t3945;
  double t160;
  double t162;
  double t163;
  double t127;
  double t130;
  double t134;
  double t4118;
  double t4119;
  double t4125;
  double t4139;
  double t4146;
  double t4222;
  double t4223;
  double t4224;
  double t4133;
  double t4152;
  double t4157;
  double t164;
  double t172;
  double t173;
  double t4343;
  double t4358;
  double t4382;
  double t4390;
  double t4400;
  double t4402;
  double t4419;
  double t4423;
  double t4444;
  double t4504;
  double t4508;
  double t4509;
  double t4493;
  double t4499;
  double t4500;
  double t4449;
  double t4450;
  double t4452;
  double t175;
  double t176;
  double t177;
  double t4542;
  double t4556;
  double t4576;
  double t4538;
  double t4578;
  double t4581;
  double t4583;
  double t4586;
  double t4587;
  double t4589;
  double t4591;
  double t4618;
  double t4635;
  double t4636;
  double t4608;
  double t4610;
  double t4613;
  double t4600;
  double t4602;
  double t4604;
  double t4643;
  double t4650;
  double t4653;
  double t4669;
  double t4687;
  double t4689;
  double t4690;
  double t4691;
  double t71;
  double t72;
  double t75;
  double t99;
  double t109;
  double t111;
  double t4977;
  double t4982;
  double t4985;
  double t5026;
  double t5029;
  double t5047;
  double t5098;
  double t5136;
  double t4244;
  double t287;
  double t296;
  double t317;
  double t6225;
  double t6226;
  double t6227;
  double t6234;
  double t6243;
  double t6245;
  double t6253;
  double t6261;
  double t6266;
  double t6222;
  double t6231;
  double t6278;
  double t6281;
  double t6219;
  double t6315;
  double t6333;
  double t6342;
  double t6384;
  double t6385;
  double t6390;
  double t6403;
  double t6408;
  double t6415;
  double t6419;
  double t6421;
  double t6423;
  double t6444;
  double t6457;
  double t6460;
  double t6466;
  double t6471;
  double t6524;
  double t6527;
  double t6530;
  double t6513;
  double t6514;
  double t6518;
  double t6480;
  double t6485;
  double t6489;
  double t6340;
  double t6472;
  double t6473;
  double t6542;
  double t6543;
  double t6544;
  double t6600;
  double t6601;
  double t6604;
  double t6545;
  double t6546;
  double t6550;
  double t6554;
  double t6578;
  double t6579;
  double t6581;
  double t6582;
  double t539;
  double t541;
  double t543;
  double t6650;
  double t6651;
  double t6655;
  double t6670;
  double t6674;
  double t426;
  double t428;
  double t429;
  double t6676;
  double t6677;
  double t6679;
  double t6683;
  double t6692;
  double t6705;
  double t556;
  double t571;
  double t572;
  double t6799;
  double t6805;
  double t6808;
  double t6830;
  double t6832;
  double t6833;
  double t6868;
  double t6878;
  double t6881;
  double t6806;
  double t6834;
  double t6835;
  double t6862;
  double t6907;
  double t6909;
  double t6915;
  double t6917;
  double t6918;
  double t573;
  double t576;
  double t577;
  double t7029;
  double t7043;
  double t7048;
  double t7019;
  double t7052;
  double t7053;
  double t7079;
  double t7092;
  double t7141;
  double t7142;
  double t7144;
  double t7056;
  double t7108;
  double t7110;
  double t7140;
  double t7153;
  double t7171;
  double t7180;
  double t7182;
  double t7184;
  double t7219;
  double t7220;
  double t7226;
  double t7281;
  double t7295;
  double t7297;
  double t7298;
  double t7304;
  double t250;
  double t266;
  double t269;
  double t346;
  double t366;
  double t375;
  double t7912;
  double t7913;
  double t7914;
  double t8030;
  double t8033;
  double t8063;
  double t8068;
  double t8137;
  double t4031;
  double t4049;
  double t4061;
  double t8680;
  double t8683;
  double t8684;
  double t4243;
  double t4263;
  double t8694;
  double t8705;
  double t8710;
  double t4292;
  double t4316;
  double t4515;
  double t4518;
  double t4519;
  double t4639;
  double t8828;
  double t4646;
  double t4711;
  double t4727;
  double t8845;
  double t8848;
  double t4733;
  double t4739;
  double t8863;
  double t4759;
  double t4763;
  double t8865;
  double t8868;
  double t8869;
  double t4776;
  double t4780;
  double t4827;
  double t4857;
  double t4865;
  double t4934;
  double t4937;
  double t4981;
  double t5364;
  double t5394;
  double t5417;
  double t9025;
  double t9034;
  double t9063;
  double t9068;
  double t9069;
  double t5518;
  double t5558;
  double t8753;
  double t9136;
  double t5784;
  double t5800;
  double t5868;
  double t5899;
  double t6144;
  double t6171;
  double t6173;
  double t6608;
  double t6623;
  double t6624;
  double t9222;
  double t9224;
  double t9225;
  double t6669;
  double t6682;
  double t6723;
  double t6732;
  double t9230;
  double t9231;
  double t9232;
  double t6843;
  double t6946;
  double t6970;
  double t7115;
  double t9263;
  double t7216;
  double t7321;
  double t7328;
  double t9275;
  double t9278;
  double t7395;
  double t7409;
  double t7483;
  double t7612;
  double t9293;
  double t7678;
  double t7682;
  double t9296;
  double t9297;
  double t9302;
  double t7769;
  double t7805;
  double t7812;
  double t7865;
  double t7867;
  double t7909;
  double t8162;
  double t8178;
  double t8193;
  double t9494;
  double t9507;
  double t9537;
  double t9543;
  double t9550;
  double t8278;
  double t8300;
  double t8337;
  double t8354;
  double t9675;
  double t8452;
  double t8490;
  double t8559;
  double t8597;
  double t8599;
  double t8765;
  double t8768;
  double t8786;
  double t8799;
  double t9901;
  double t9902;
  double t8825;
  double t8829;
  double t8846;
  double t9932;
  double t8886;
  double t8887;
  double t8897;
  double t8898;
  double t9942;
  double t9945;
  double t9998;
  double t9999;
  double t10000;
  double t10005;
  double t8934;
  double t8943;
  double t8918;
  double t9917;
  double t9920;
  double t9031;
  double t8995;
  double t9005;
  double t9154;
  double t9155;
  double t9171;
  double t9174;
  double t10050;
  double t10055;
  double t10116;
  double t10118;
  double t9195;
  double t9209;
  double t9210;
  double t9240;
  double t9241;
  double t9247;
  double t9248;
  double t10206;
  double t10208;
  double t9262;
  double t9264;
  double t9277;
  double t10247;
  double t9337;
  double t9343;
  double t9361;
  double t9362;
  double t10258;
  double t10265;
  double t10286;
  double t10289;
  double t10290;
  double t10302;
  double t9432;
  double t9433;
  double t9412;
  double t10218;
  double t10221;
  double t9503;
  double t9475;
  double t9478;
  double t9711;
  double t9729;
  double t9785;
  double t9788;
  double t10351;
  double t10354;
  double t10390;
  double t10391;
  double t9827;
  double t9889;
  double t9891;
  double t10019;
  double t10020;
  double t10035;
  double t10502;
  double t10503;
  double t10526;
  double t10530;
  double t10052;
  double t10068;
  double t10093;
  double t10314;
  double t10316;
  double t10328;
  double t10675;
  double t10676;
  double t10688;
  double t10690;
  double t10352;
  double t10360;
  double t10367;
  t17 = Cos(var1[8]);
  t18 = Sin(var1[7]);
  t19 = t17*t18;
  t21 = Cos(var1[7]);
  t23 = Sin(var1[8]);
  t25 = -1.*t21*t23;
  t30 = t19 + t25;
  t14 = Cos(var1[4]);
  t42 = Cos(var1[5]);
  t38 = Sin(var1[6]);
  t37 = Sin(var1[5]);
  t45 = t21*t17;
  t47 = t18*t23;
  t48 = t45 + t47;
  t16 = Cos(var1[6]);
  t36 = Sin(var1[4]);
  t96 = -1.*t21*t17;
  t97 = -1.*t18*t23;
  t98 = t96 + t97;
  t78 = -1.*t17*t18;
  t79 = t21*t23;
  t82 = t78 + t79;
  t87 = t42*t82;
  t88 = t37*t38*t48;
  t91 = t87 + t88;
  t40 = t37*t38*t30;
  t52 = t42*t48;
  t53 = t40 + t52;
  t201 = Cos(var1[16]);
  t193 = Cos(var1[17]);
  t195 = Sin(var1[16]);
  t202 = Sin(var1[17]);
  t196 = t193*t195;
  t204 = -1.*t201*t202;
  t211 = t196 + t204;
  t230 = Sin(var1[15]);
  t213 = t201*t193;
  t218 = t195*t202;
  t219 = t213 + t218;
  t189 = Cos(var1[15]);
  t327 = -1.*t201*t193;
  t335 = -1.*t195*t202;
  t341 = t327 + t335;
  t288 = -1.*t193*t195;
  t289 = t201*t202;
  t290 = t288 + t289;
  t293 = t42*t290;
  t294 = t230*t219*t37;
  t295 = t293 + t294;
  t223 = t42*t219;
  t231 = t230*t211*t37;
  t232 = t223 + t231;
  t33 = t14*t16*t30;
  t54 = -1.*t36*t53;
  t56 = t33 + t54;
  t578 = Sin(var1[3]);
  t588 = Cos(var1[3]);
  t59 = t42*t38*t30;
  t65 = -1.*t37*t48;
  t68 = t59 + t65;
  t140 = t14*t16*t48;
  t141 = -1.*t36*t91;
  t142 = t140 + t141;
  t105 = t42*t30;
  t106 = t37*t38*t98;
  t107 = t105 + t106;
  t116 = t16*t36*t37;
  t118 = t14*t38;
  t123 = t116 + t118;
  t674 = t37*t82;
  t676 = -1.*t42*t38*t48;
  t677 = t674 + t676;
  t143 = -1.*t37*t82;
  t146 = t42*t38*t48;
  t147 = t143 + t146;
  t167 = t37*t38*t82;
  t168 = t42*t98;
  t169 = t167 + t168;
  t580 = -1.*t42*t38*t30;
  t581 = t37*t48;
  t582 = t580 + t581;
  t212 = t189*t14*t211;
  t237 = -1.*t36*t232;
  t238 = t212 + t237;
  t239 = t42*t230*t211;
  t240 = -1.*t219*t37;
  t244 = t239 + t240;
  t438 = t189*t14*t219;
  t439 = -1.*t36*t295;
  t460 = t438 + t439;
  t349 = t42*t211;
  t359 = t230*t341*t37;
  t360 = t349 + t359;
  t378 = t14*t230;
  t386 = t189*t36*t37;
  t412 = t378 + t386;
  t1492 = -1.*t42*t230*t219;
  t1500 = t290*t37;
  t1523 = t1492 + t1500;
  t498 = t42*t230*t219;
  t507 = -1.*t290*t37;
  t532 = t498 + t507;
  t562 = t42*t341;
  t568 = t230*t290*t37;
  t570 = t562 + t568;
  t1253 = -1.*t42*t230*t211;
  t1264 = t219*t37;
  t1279 = t1253 + t1264;
  t1178 = t588*t582;
  t1241 = -1.*t578*t56;
  t1251 = t1178 + t1241;
  t594 = -1.*t16*t36*t30;
  t596 = -1.*t14*t53;
  t611 = t594 + t596;
  t659 = -1.*t16*t36*t37*t30;
  t669 = -1.*t14*t38*t30;
  t670 = t659 + t669;
  t718 = t37*t30;
  t805 = -1.*t42*t38*t98;
  t809 = t718 + t805;
  t832 = t14*t16*t98;
  t846 = -1.*t36*t107;
  t874 = t832 + t846;
  t921 = t14*t16*t37;
  t935 = -1.*t36*t38;
  t945 = t921 + t935;
  t971 = t14*t16;
  t978 = -1.*t36*t37*t38;
  t987 = t971 + t978;
  t679 = t588*t677;
  t684 = -1.*t578*t142;
  t685 = t679 + t684;
  t998 = -1.*t16*t36*t48;
  t1001 = -1.*t14*t91;
  t1020 = t998 + t1001;
  t1077 = -1.*t16*t36*t37*t48;
  t1081 = -1.*t14*t38*t48;
  t1082 = t1077 + t1081;
  t1139 = -1.*t42*t38*t82;
  t1140 = t37*t98;
  t1143 = t1139 + t1140;
  t1150 = t14*t16*t82;
  t1151 = -1.*t36*t169;
  t1158 = t1150 + t1151;
  t2967 = t588*t1279;
  t2968 = -1.*t578*t238;
  t2973 = t2967 + t2968;
  t1334 = -1.*t189*t211*t36;
  t1346 = -1.*t14*t232;
  t1359 = t1334 + t1346;
  t1422 = -1.*t14*t230*t211;
  t1431 = -1.*t189*t211*t36*t37;
  t1470 = t1422 + t1431;
  t1560 = -1.*t42*t230*t341;
  t1561 = t211*t37;
  t1570 = t1560 + t1561;
  t1576 = t189*t14*t341;
  t1585 = -1.*t36*t360;
  t1603 = t1576 + t1585;
  t1692 = -1.*t230*t36;
  t1708 = t189*t14*t37;
  t1724 = t1692 + t1708;
  t1930 = t189*t14;
  t2021 = -1.*t230*t36*t37;
  t2037 = t1930 + t2021;
  t1534 = t588*t1523;
  t1545 = -1.*t578*t460;
  t1553 = t1534 + t1545;
  t2329 = -1.*t189*t219*t36;
  t2383 = -1.*t14*t295;
  t2394 = t2329 + t2383;
  t2645 = -1.*t14*t230*t219;
  t2649 = -1.*t189*t219*t36*t37;
  t2652 = t2645 + t2649;
  t2778 = -1.*t42*t230*t290;
  t2779 = t341*t37;
  t2880 = t2778 + t2779;
  t2900 = t189*t14*t290;
  t2906 = -1.*t36*t570;
  t2919 = t2900 + t2906;
  t3782 = -0.0641*t17;
  t3789 = -0.28*t23;
  t3795 = t3782 + t3789;
  t3800 = -1.*t17;
  t3803 = 1. + t3800;
  t3804 = 0.075*t3803;
  t3806 = 0.355*t17;
  t3814 = -0.0641*t23;
  t3816 = t3804 + t3806 + t3814;
  t3777 = -0.325*t18;
  t3798 = t21*t3795;
  t3817 = t18*t3816;
  t3821 = t3777 + t3798 + t3817;
  t3769 = -1.*t16;
  t3770 = 1. + t3769;
  t3771 = 0.1575*t3770;
  t3772 = 0.2255*t16;
  t3823 = -1.*t38*t3821;
  t3825 = t3771 + t3772 + t3823;
  t3826 = -1.*t37*t3825;
  t3827 = -1.*t21;
  t3831 = 1. + t3827;
  t3834 = 0.325*t3831;
  t3841 = -1.*t18*t3795;
  t3843 = t21*t3816;
  t3847 = t3834 + t3841 + t3843;
  t3848 = t42*t3847;
  t3849 = t3826 + t3848;
  t3851 = -1.*t36*t3849;
  t3852 = 0.068*t38;
  t3857 = t16*t3821;
  t3861 = t3852 + t3857;
  t3862 = t14*t3861;
  t3863 = t3851 + t3862;
  t77 = t16*t36*t48;
  t92 = t14*t91;
  t93 = t77 + t92;
  t3865 = -1.*t14*t16*t37;
  t3868 = t36*t38;
  t3872 = t3865 + t3868;
  t3885 = t14*t3849;
  t3886 = t36*t3861;
  t3887 = t3885 + t3886;
  t3905 = t42*t3825;
  t3907 = t37*t3847;
  t3915 = t3905 + t3907;
  t3875 = -1.*t14*t3849;
  t3877 = -1.*t36*t3861;
  t3878 = t3875 + t3877;
  t3897 = -1.*t123*t3863;
  t3898 = -1.*t3872*t3887;
  t3916 = -1.*t42*t16*t3915;
  t3920 = t3897 + t3898 + t3916;
  t4008 = -1.*t42*t3825;
  t4009 = -1.*t37*t3847;
  t4013 = t4008 + t4009;
  t3928 = t3915*t677;
  t3939 = t3887*t93;
  t3942 = t3863*t142;
  t3945 = t3928 + t3939 + t3942;
  t160 = t14*t16*t37*t48;
  t162 = -1.*t36*t38*t48;
  t163 = t160 + t162;
  t127 = t16*t36;
  t130 = t14*t37*t38;
  t134 = t127 + t130;
  t4118 = -0.068*t38;
  t4119 = -1.*t16*t3821;
  t4125 = t4118 + t4119;
  t4139 = 0.068*t16;
  t4146 = t4139 + t3823;
  t4222 = -1.*t14*t37*t4125;
  t4223 = t36*t4146;
  t4224 = t4222 + t4223;
  t4133 = t36*t37*t4125;
  t4152 = t14*t4146;
  t4157 = t4133 + t4152;
  t164 = t16*t36*t82;
  t172 = t14*t169;
  t173 = t164 + t172;
  t4343 = -0.325*t21;
  t4358 = t4343 + t3841 + t3843;
  t4382 = t37*t38*t4358;
  t4390 = 0.325*t18;
  t4400 = -1.*t21*t3795;
  t4402 = -1.*t18*t3816;
  t4419 = t4390 + t4400 + t4402;
  t4423 = t42*t4419;
  t4444 = t4382 + t4423;
  t4504 = -1.*t42*t38*t4358;
  t4508 = t37*t4419;
  t4509 = t4504 + t4508;
  t4493 = t14*t4444;
  t4499 = t16*t36*t4358;
  t4500 = t4493 + t4499;
  t4449 = -1.*t36*t4444;
  t4450 = t14*t16*t4358;
  t4452 = t4449 + t4450;
  t175 = t16*t36*t30;
  t176 = t14*t53;
  t177 = t175 + t176;
  t4542 = -0.28*t17;
  t4556 = 0.0641*t23;
  t4576 = t4542 + t4556;
  t4538 = t18*t3795;
  t4578 = t21*t4576;
  t4581 = t4538 + t4578;
  t4583 = t37*t38*t4581;
  t4586 = -1.*t18*t4576;
  t4587 = t3798 + t4586;
  t4589 = t42*t4587;
  t4591 = t4583 + t4589;
  t4618 = -1.*t42*t38*t4581;
  t4635 = t37*t4587;
  t4636 = t4618 + t4635;
  t4608 = t14*t4591;
  t4610 = t16*t36*t4581;
  t4613 = t4608 + t4610;
  t4600 = -1.*t36*t4591;
  t4602 = t14*t16*t4581;
  t4604 = t4600 + t4602;
  t4643 = t3915*t582;
  t4650 = t3887*t177;
  t4653 = t3863*t56;
  t4669 = t4643 + t4650 + t4653;
  t4687 = -1.*t3915*t677;
  t4689 = -1.*t3887*t93;
  t4690 = -1.*t3863*t142;
  t4691 = t4687 + t4689 + t4690;
  t71 = t14*t16*t37*t30;
  t72 = -1.*t36*t38*t30;
  t75 = t71 + t72;
  t99 = t16*t36*t98;
  t109 = t14*t107;
  t111 = t99 + t109;
  t4977 = -1.*t3915*t582;
  t4982 = -1.*t3887*t177;
  t4985 = -1.*t3863*t56;
  t5026 = t123*t3863;
  t5029 = t3872*t3887;
  t5047 = t42*t16*t3915;
  t5098 = t5026 + t5029 + t5047;
  t5136 = t4977 + t4982 + t4985;
  t4244 = Power(t42,2);
  t287 = t189*t219*t36;
  t296 = t14*t295;
  t317 = t287 + t296;
  t6225 = -0.0641*t193;
  t6226 = -0.28*t202;
  t6227 = t6225 + t6226;
  t6234 = -1.*t193;
  t6243 = 1. + t6234;
  t6245 = -0.575*t6243;
  t6253 = -0.295*t193;
  t6261 = -0.0641*t202;
  t6266 = t6245 + t6253 + t6261;
  t6222 = 0.325*t195;
  t6231 = t201*t6227;
  t6278 = t195*t6266;
  t6281 = t6222 + t6231 + t6278;
  t6219 = -0.068*t230;
  t6315 = t189*t6281;
  t6333 = t6219 + t6315;
  t6342 = -1.*t201;
  t6384 = 1. + t6342;
  t6385 = -0.325*t6384;
  t6390 = -1.*t195*t6227;
  t6403 = t201*t6266;
  t6408 = t6385 + t6390 + t6403;
  t6415 = t42*t6408;
  t6419 = -1.*t189;
  t6421 = 1. + t6419;
  t6423 = -0.1575*t6421;
  t6444 = -0.2255*t189;
  t6457 = -1.*t230*t6281;
  t6460 = t6423 + t6444 + t6457;
  t6466 = -1.*t6460*t37;
  t6471 = t6415 + t6466;
  t6524 = t14*t6333;
  t6527 = -1.*t36*t6471;
  t6530 = t6524 + t6527;
  t6513 = t230*t36;
  t6514 = -1.*t189*t14*t37;
  t6518 = t6513 + t6514;
  t6480 = t6333*t36;
  t6485 = t14*t6471;
  t6489 = t6480 + t6485;
  t6340 = -1.*t6333*t36;
  t6472 = -1.*t14*t6471;
  t6473 = t6340 + t6472;
  t6542 = t42*t6460;
  t6543 = t6408*t37;
  t6544 = t6542 + t6543;
  t6600 = -1.*t42*t6460;
  t6601 = -1.*t6408*t37;
  t6604 = t6600 + t6601;
  t6545 = -1.*t189*t42*t6544;
  t6546 = -1.*t6518*t6489;
  t6550 = -1.*t412*t6530;
  t6554 = t6545 + t6546 + t6550;
  t6578 = t6544*t1523;
  t6579 = t6489*t317;
  t6581 = t6530*t460;
  t6582 = t6578 + t6579 + t6581;
  t539 = -1.*t230*t219*t36;
  t541 = t189*t14*t219*t37;
  t543 = t539 + t541;
  t6650 = 0.068*t230;
  t6651 = -1.*t189*t6281;
  t6655 = t6650 + t6651;
  t6670 = -0.068*t189;
  t6674 = t6670 + t6457;
  t426 = t189*t36;
  t428 = t14*t230*t37;
  t429 = t426 + t428;
  t6676 = t6674*t36;
  t6677 = -1.*t14*t6655*t37;
  t6679 = t6676 + t6677;
  t6683 = t14*t6674;
  t6692 = t6655*t36*t37;
  t6705 = t6683 + t6692;
  t556 = t189*t290*t36;
  t571 = t14*t570;
  t572 = t556 + t571;
  t6799 = 0.325*t201;
  t6805 = t6799 + t6390 + t6403;
  t6808 = -0.325*t195;
  t6830 = -1.*t201*t6227;
  t6832 = -1.*t195*t6266;
  t6833 = t6808 + t6830 + t6832;
  t6868 = t42*t6833;
  t6878 = t230*t6805*t37;
  t6881 = t6868 + t6878;
  t6806 = -1.*t42*t230*t6805;
  t6834 = t6833*t37;
  t6835 = t6806 + t6834;
  t6862 = t189*t6805*t36;
  t6907 = t14*t6881;
  t6909 = t6862 + t6907;
  t6915 = t189*t14*t6805;
  t6917 = -1.*t36*t6881;
  t6918 = t6915 + t6917;
  t573 = t189*t211*t36;
  t576 = t14*t232;
  t577 = t573 + t576;
  t7029 = -0.28*t193;
  t7043 = 0.0641*t202;
  t7048 = t7029 + t7043;
  t7019 = t195*t6227;
  t7052 = t201*t7048;
  t7053 = t7019 + t7052;
  t7079 = -1.*t195*t7048;
  t7092 = t6231 + t7079;
  t7141 = t42*t7092;
  t7142 = t230*t7053*t37;
  t7144 = t7141 + t7142;
  t7056 = -1.*t42*t230*t7053;
  t7108 = t7092*t37;
  t7110 = t7056 + t7108;
  t7140 = t189*t7053*t36;
  t7153 = t14*t7144;
  t7171 = t7140 + t7153;
  t7180 = t189*t14*t7053;
  t7182 = -1.*t36*t7144;
  t7184 = t7180 + t7182;
  t7219 = t6544*t1279;
  t7220 = t6489*t577;
  t7226 = t6530*t238;
  t7281 = t7219 + t7220 + t7226;
  t7295 = -1.*t6544*t1523;
  t7297 = -1.*t6489*t317;
  t7298 = -1.*t6530*t460;
  t7304 = t7295 + t7297 + t7298;
  t250 = -1.*t230*t211*t36;
  t266 = t189*t14*t211*t37;
  t269 = t250 + t266;
  t346 = t189*t341*t36;
  t366 = t14*t360;
  t375 = t346 + t366;
  t7912 = -1.*t6544*t1279;
  t7913 = -1.*t6489*t577;
  t7914 = -1.*t6530*t238;
  t8030 = t189*t42*t6544;
  t8033 = t6518*t6489;
  t8063 = t412*t6530;
  t8068 = t8030 + t8033 + t8063;
  t8137 = t7912 + t7913 + t7914;
  t4031 = t16*t37*t3915;
  t4049 = t3849*t677;
  t4061 = t3915*t91;
  t8680 = t16*t37*t3849;
  t8683 = -1.*t38*t3861;
  t8684 = t8680 + t3916 + t8683;
  t4243 = t42*t38*t3915;
  t4263 = -1.*t4244*t16*t4125;
  t8694 = t16*t3861*t48;
  t8705 = t3849*t91;
  t8710 = t8694 + t3928 + t8705;
  t4292 = -1.*t42*t16*t3915*t48;
  t4316 = t42*t4125*t677;
  t4515 = -1.*t42*t16*t4509;
  t4518 = t3915*t1143;
  t4519 = t4509*t677;
  t4639 = -1.*t42*t16*t4636;
  t8828 = Power(t16,2);
  t4646 = t4636*t677;
  t4711 = t3915*t53;
  t4727 = t3849*t582;
  t8845 = t16*t3861*t30;
  t8848 = t3849*t53;
  t4733 = -1.*t3849*t677;
  t4739 = -1.*t3915*t91;
  t8863 = t8845 + t8848 + t4643;
  t4759 = -1.*t42*t16*t3915*t30;
  t4763 = t42*t4125*t582;
  t8865 = -1.*t16*t3861*t48;
  t8868 = -1.*t3849*t91;
  t8869 = t8865 + t4687 + t8868;
  t4776 = t42*t16*t3915*t48;
  t4780 = -1.*t42*t4125*t677;
  t4827 = t4509*t582;
  t4857 = -1.*t3915*t1143;
  t4865 = -1.*t4509*t677;
  t4934 = t3915*t809;
  t4937 = t4636*t582;
  t4981 = -1.*t4636*t677;
  t5364 = -1.*t16*t37*t3915;
  t5394 = -1.*t3915*t53;
  t5417 = -1.*t3849*t582;
  t9025 = -1.*t16*t3861*t30;
  t9034 = -1.*t3849*t53;
  t9063 = -1.*t16*t37*t3849;
  t9068 = t38*t3861;
  t9069 = t9063 + t5047 + t9068;
  t5518 = -1.*t42*t38*t3915;
  t5558 = t4244*t16*t4125;
  t8753 = Power(t37,2);
  t9136 = t9025 + t9034 + t4977;
  t5784 = t42*t16*t3915*t30;
  t5800 = -1.*t42*t4125*t582;
  t5868 = t42*t16*t4509;
  t5899 = -1.*t4509*t582;
  t6144 = t42*t16*t4636;
  t6171 = -1.*t3915*t809;
  t6173 = -1.*t4636*t582;
  t6608 = t189*t37*t6544;
  t6623 = t6471*t1523;
  t6624 = t6544*t295;
  t9222 = -1.*t230*t6333;
  t9224 = t189*t37*t6471;
  t9225 = t9222 + t9224 + t6545;
  t6669 = -1.*t189*t4244*t6655;
  t6682 = t42*t230*t6544;
  t6723 = -1.*t189*t42*t219*t6544;
  t6732 = t42*t6655*t1523;
  t9230 = t189*t6333*t219;
  t9231 = t6471*t295;
  t9232 = t9230 + t6578 + t9231;
  t6843 = -1.*t189*t42*t6835;
  t6946 = t6835*t1523;
  t6970 = t6544*t2880;
  t7115 = -1.*t189*t42*t7110;
  t9263 = Power(t189,2);
  t7216 = t7110*t1523;
  t7321 = t6544*t232;
  t7328 = t6471*t1279;
  t9275 = t189*t6333*t211;
  t9278 = t6471*t232;
  t7395 = -1.*t6471*t1523;
  t7409 = -1.*t6544*t295;
  t7483 = -1.*t189*t42*t211*t6544;
  t7612 = t42*t6655*t1279;
  t9293 = t9275 + t9278 + t7219;
  t7678 = t189*t42*t219*t6544;
  t7682 = -1.*t42*t6655*t1523;
  t9296 = -1.*t189*t6333*t219;
  t9297 = -1.*t6471*t295;
  t9302 = t9296 + t7295 + t9297;
  t7769 = t6835*t1279;
  t7805 = -1.*t6835*t1523;
  t7812 = -1.*t6544*t2880;
  t7865 = t6544*t1570;
  t7867 = t7110*t1279;
  t7909 = -1.*t7110*t1523;
  t8162 = -1.*t189*t37*t6544;
  t8178 = -1.*t6544*t232;
  t8193 = -1.*t6471*t1279;
  t9494 = -1.*t189*t6333*t211;
  t9507 = -1.*t6471*t232;
  t9537 = t230*t6333;
  t9543 = -1.*t189*t37*t6471;
  t9550 = t9537 + t9543 + t8030;
  t8278 = t189*t4244*t6655;
  t8300 = -1.*t42*t230*t6544;
  t8337 = t189*t42*t211*t6544;
  t8354 = -1.*t42*t6655*t1279;
  t9675 = t9494 + t9507 + t7912;
  t8452 = t189*t42*t6835;
  t8490 = -1.*t6835*t1279;
  t8559 = t189*t42*t7110;
  t8597 = -1.*t6544*t1570;
  t8599 = -1.*t7110*t1279;
  t8765 = -1.*t16*t3861;
  t8768 = -1.*t38*t4146;
  t8786 = -1.*t38*t3861*t48;
  t8799 = t16*t4146*t48;
  t9901 = -1.*t16*t3825;
  t9902 = t8683 + t9901;
  t8825 = t16*t3861*t82;
  t8829 = t8828*t4358*t48;
  t8846 = t8828*t4581*t48;
  t9932 = Power(t38,2);
  t8886 = -1.*t38*t3861*t30;
  t8887 = t16*t4146*t30;
  t8897 = t38*t3861*t48;
  t8898 = -1.*t16*t4146*t48;
  t9942 = -1.*t38*t3825*t30;
  t9945 = t3847*t48;
  t9998 = -1.*t3847*t82;
  t9999 = t38*t3825*t48;
  t10000 = t9998 + t8865 + t9999;
  t10005 = t8845 + t9942 + t9945;
  t8934 = -1.*t16*t3861*t82;
  t8943 = -1.*t8828*t4358*t48;
  t8918 = t8828*t4358*t30;
  t9917 = t3847*t82;
  t9920 = -1.*t38*t3825*t48;
  t9031 = -1.*t8828*t4581*t48;
  t8995 = t8828*t4581*t30;
  t9005 = t16*t3861*t98;
  t9154 = t16*t3861;
  t9155 = t38*t4146;
  t9171 = t38*t3861*t30;
  t9174 = -1.*t16*t4146*t30;
  t10050 = t38*t3825*t30;
  t10055 = -1.*t3847*t48;
  t10116 = t16*t3825;
  t10118 = t9068 + t10116;
  t9195 = -1.*t8828*t4358*t30;
  t9209 = -1.*t8828*t4581*t30;
  t9210 = -1.*t16*t3861*t98;
  t9240 = -1.*t189*t6333;
  t9241 = -1.*t230*t6674;
  t9247 = -1.*t230*t6333*t219;
  t9248 = t189*t6674*t219;
  t10206 = -1.*t189*t6460;
  t10208 = t9222 + t10206;
  t9262 = t189*t6333*t290;
  t9264 = t9263*t6805*t219;
  t9277 = t9263*t7053*t219;
  t10247 = Power(t230,2);
  t9337 = -1.*t230*t6333*t211;
  t9343 = t189*t6674*t211;
  t9361 = t230*t6333*t219;
  t9362 = -1.*t189*t6674*t219;
  t10258 = -1.*t230*t6460*t211;
  t10265 = t6408*t219;
  t10286 = -1.*t6408*t290;
  t10289 = t230*t6460*t219;
  t10290 = t10286 + t9296 + t10289;
  t10302 = t9275 + t10258 + t10265;
  t9432 = -1.*t189*t6333*t290;
  t9433 = -1.*t9263*t6805*t219;
  t9412 = t9263*t6805*t211;
  t10218 = t6408*t290;
  t10221 = -1.*t230*t6460*t219;
  t9503 = -1.*t9263*t7053*t219;
  t9475 = t9263*t7053*t211;
  t9478 = t189*t6333*t341;
  t9711 = t189*t6333;
  t9729 = t230*t6674;
  t9785 = t230*t6333*t211;
  t9788 = -1.*t189*t6674*t211;
  t10351 = t230*t6460*t211;
  t10354 = -1.*t6408*t219;
  t10390 = t189*t6460;
  t10391 = t9537 + t10390;
  t9827 = -1.*t9263*t6805*t211;
  t9889 = -1.*t9263*t7053*t211;
  t9891 = -1.*t189*t6333*t341;
  t10019 = -1.*t4419*t82;
  t10020 = -1.*t3847*t98;
  t10035 = t4419*t48;
  t10502 = t3821*t30;
  t10503 = t10502 + t9945;
  t10526 = -1.*t3821*t48;
  t10530 = t9998 + t10526;
  t10052 = -1.*t4587*t82;
  t10068 = t3847*t30;
  t10093 = t4587*t48;
  t10314 = -1.*t6833*t290;
  t10316 = -1.*t6408*t341;
  t10328 = t6833*t219;
  t10675 = t6281*t211;
  t10676 = t10675 + t10265;
  t10688 = -1.*t6281*t219;
  t10690 = t10286 + t10688;
  t10352 = -1.*t7092*t290;
  t10360 = t6408*t211;
  t10367 = t7092*t219;
  p_output1[0]=t56;
  p_output1[1]=t14*t68;
  p_output1[2]=t75;
  p_output1[3]=t93;
  p_output1[4]=t111;
  p_output1[5]=t123;
  p_output1[6]=-1.*t14*t16*t42;
  p_output1[7]=t134;
  p_output1[8]=t142;
  p_output1[9]=t14*t147;
  p_output1[10]=t163;
  p_output1[11]=t173;
  p_output1[12]=t177;
  p_output1[13]=t238;
  p_output1[14]=t14*t244;
  p_output1[15]=t269;
  p_output1[16]=t317;
  p_output1[17]=t375;
  p_output1[18]=t412;
  p_output1[19]=-1.*t14*t189*t42;
  p_output1[20]=t429;
  p_output1[21]=t460;
  p_output1[22]=t14*t532;
  p_output1[23]=t543;
  p_output1[24]=t572;
  p_output1[25]=t577;
  p_output1[26]=-1.*t578*t582 - 1.*t56*t588;
  p_output1[27]=-1.*t578*t611;
  p_output1[28]=t53*t588 + t36*t578*t68;
  p_output1[29]=-1.*t16*t30*t42*t588 - 1.*t578*t670;
  p_output1[30]=t685;
  p_output1[31]=t588*t809 - 1.*t578*t874;
  p_output1[32]=-1.*t16*t42*t578 - 1.*t123*t588;
  p_output1[33]=-1.*t578*t945;
  p_output1[34]=-1.*t16*t36*t42*t578 - 1.*t16*t37*t588;
  p_output1[35]=-1.*t38*t42*t588 - 1.*t578*t987;
  p_output1[36]=-1.*t142*t588 - 1.*t578*t677;
  p_output1[37]=-1.*t1020*t578;
  p_output1[38]=t147*t36*t578 + t588*t91;
  p_output1[39]=-1.*t1082*t578 - 1.*t16*t42*t48*t588;
  p_output1[40]=-1.*t1158*t578 + t1143*t588;
  p_output1[41]=t1251;
  p_output1[42]=-1.*t1279*t578 - 1.*t238*t588;
  p_output1[43]=-1.*t1359*t578;
  p_output1[44]=t244*t36*t578 + t232*t588;
  p_output1[45]=-1.*t1470*t578 - 1.*t189*t211*t42*t588;
  p_output1[46]=t1553;
  p_output1[47]=-1.*t1603*t578 + t1570*t588;
  p_output1[48]=-1.*t189*t42*t578 - 1.*t412*t588;
  p_output1[49]=-1.*t1724*t578;
  p_output1[50]=-1.*t189*t36*t42*t578 - 1.*t189*t37*t588;
  p_output1[51]=-1.*t2037*t578 - 1.*t230*t42*t588;
  p_output1[52]=-1.*t1523*t578 - 1.*t460*t588;
  p_output1[53]=-1.*t2394*t578;
  p_output1[54]=t36*t532*t578 + t295*t588;
  p_output1[55]=-1.*t2652*t578 - 1.*t189*t219*t42*t588;
  p_output1[56]=-1.*t2919*t578 + t2880*t588;
  p_output1[57]=t2973;
  p_output1[58]=t1251;
  p_output1[59]=t588*t611;
  p_output1[60]=t53*t578 - 1.*t36*t588*t68;
  p_output1[61]=-1.*t16*t30*t42*t578 + t588*t670;
  p_output1[62]=t142*t588 + t578*t677;
  p_output1[63]=t578*t809 + t588*t874;
  p_output1[64]=-1.*t123*t578 + t16*t42*t588;
  p_output1[65]=t588*t945;
  p_output1[66]=-1.*t16*t37*t578 + t16*t36*t42*t588;
  p_output1[67]=-1.*t38*t42*t578 + t588*t987;
  p_output1[68]=t685;
  p_output1[69]=t1020*t588;
  p_output1[70]=-1.*t147*t36*t588 + t578*t91;
  p_output1[71]=-1.*t16*t42*t48*t578 + t1082*t588;
  p_output1[72]=t1143*t578 + t1158*t588;
  p_output1[73]=t578*t582 + t56*t588;
  p_output1[74]=t2973;
  p_output1[75]=t1359*t588;
  p_output1[76]=t232*t578 - 1.*t244*t36*t588;
  p_output1[77]=-1.*t189*t211*t42*t578 + t1470*t588;
  p_output1[78]=t1523*t578 + t460*t588;
  p_output1[79]=t1570*t578 + t1603*t588;
  p_output1[80]=-1.*t412*t578 + t189*t42*t588;
  p_output1[81]=t1724*t588;
  p_output1[82]=-1.*t189*t37*t578 + t189*t36*t42*t588;
  p_output1[83]=-1.*t230*t42*t578 + t2037*t588;
  p_output1[84]=t1553;
  p_output1[85]=t2394*t588;
  p_output1[86]=t295*t578 - 1.*t36*t532*t588;
  p_output1[87]=-1.*t189*t219*t42*t578 + t2652*t588;
  p_output1[88]=t2880*t578 + t2919*t588;
  p_output1[89]=t1279*t578 + t238*t588;
  p_output1[90]=t142*t3920 + t123*t3945 + t3872*(t1020*t3863 + t142*t3878 + t142*t3887 + t3863*t93) + t93*(-1.*t3863*t3872 - 1.*t123*t3878 - 1.*t123*t3887 - 1.*t3863*t945);
  p_output1[91]=t14*t147*t3920 - 1.*t14*t16*t3945*t42 + (t123*t36*t4013 - 1.*t14*t3872*t4013 + t4031 - 1.*t16*t3849*t42 - 1.*t16*t36*t3863*t42 + t14*t16*t3887*t42)*t93 + t3872*(-1.*t147*t36*t3863 + t14*t147*t3887 - 1.*t142*t36*t4013 + t4049 + t4061 + t14*t4013*t93);
  p_output1[92]=t163*t3920 + t134*t3945 + t3872*(t1082*t3863 + t163*t3887 + t142*t4157 + t4292 + t4316 + t4224*t93) + t93*(-1.*t134*t3887 - 1.*t123*t4157 - 1.*t3872*t4224 + t4243 + t4263 - 1.*t3863*t987);
  p_output1[93]=t173*t3920 + (-1.*t123*t4452 - 1.*t3872*t4500 + t4515)*t93 + t3872*(t1158*t3863 + t173*t3887 + t142*t4452 + t4518 + t4519 + t4500*t93);
  p_output1[94]=t177*t3920 + (-1.*t123*t4604 - 1.*t3872*t4613 + t4639)*t93 + t3872*(t142*t4604 + t4643 + t4646 + t4650 + t4653 + t4613*t93);
  p_output1[95]=t142*t4669 + t4691*t56 + (t177*t3863 + t3878*t56 + t3887*t56 + t3863*t611)*t93 + t177*(-1.*t1020*t3863 - 1.*t142*t3878 - 1.*t142*t3887 - 1.*t3863*t93);
  p_output1[96]=t14*t147*t4669 + t14*t4691*t68 + (t14*t177*t4013 + t4711 + t4727 - 1.*t36*t4013*t56 - 1.*t36*t3863*t68 + t14*t3887*t68)*t93 + t177*(t147*t36*t3863 - 1.*t14*t147*t3887 + t142*t36*t4013 + t4733 + t4739 - 1.*t14*t4013*t93);
  p_output1[97]=t163*t4669 + t4691*t75 + (t177*t4224 + t4759 + t4763 + t4157*t56 + t3863*t670 + t3887*t75)*t93 + t177*(-1.*t1082*t3863 - 1.*t163*t3887 - 1.*t142*t4157 + t4776 + t4780 - 1.*t4224*t93);
  p_output1[98]=t173*t4669 + t4691*t93 + (t3928 + t3939 + t3942 + t177*t4500 + t4827 + t4452*t56)*t93 + t177*(-1.*t1158*t3863 - 1.*t173*t3887 - 1.*t142*t4452 + t4857 + t4865 - 1.*t4500*t93);
  p_output1[99]=t177*t4669 + t111*t4691 + (t111*t3887 + t177*t4613 + t4934 + t4937 + t4604*t56 + t3863*t874)*t93 + t177*(-1.*t142*t4604 + t4977 + t4981 + t4982 + t4985 - 1.*t4613*t93);
  p_output1[100]=t123*t5136 + t5098*t56 + t3872*(-1.*t177*t3863 - 1.*t3878*t56 - 1.*t3887*t56 - 1.*t3863*t611) + t177*(t3863*t3872 + t123*t3878 + t123*t3887 + t3863*t945);
  p_output1[101]=-1.*t14*t16*t42*t5136 + t177*(-1.*t123*t36*t4013 + t14*t3872*t4013 + t16*t3849*t42 + t16*t36*t3863*t42 - 1.*t14*t16*t3887*t42 + t5364) + t14*t5098*t68 + t3872*(-1.*t14*t177*t4013 + t5394 + t5417 + t36*t4013*t56 + t36*t3863*t68 - 1.*t14*t3887*t68);
  p_output1[102]=t134*t5136 + t5098*t75 + t3872*(-1.*t177*t4224 - 1.*t4157*t56 + t5784 + t5800 - 1.*t3863*t670 - 1.*t3887*t75) + t177*(t134*t3887 + t123*t4157 + t3872*t4224 + t5518 + t5558 + t3863*t987);
  p_output1[103]=t177*(t123*t4452 + t3872*t4500 + t5868) + t3872*(-1.*t177*t4500 + t4687 + t4689 + t4690 - 1.*t4452*t56 + t5899) + t5098*t93;
  p_output1[104]=t111*t5098 + t177*(t123*t4604 + t3872*t4613 + t6144) + t3872*(-1.*t111*t3887 - 1.*t177*t4613 - 1.*t4604*t56 + t6171 + t6173 - 1.*t3863*t874);
  p_output1[105]=t6518*(t460*t6473 + t460*t6489 + t2394*t6530 + t317*t6530) + t317*(-1.*t412*t6473 - 1.*t412*t6489 - 1.*t1724*t6530 - 1.*t6518*t6530) + t460*t6554 + t412*t6582;
  p_output1[106]=t14*t532*t6554 - 1.*t14*t189*t42*t6582 + t317*(-1.*t189*t42*t6471 + t14*t189*t42*t6489 - 1.*t189*t36*t42*t6530 + t36*t412*t6604 - 1.*t14*t6518*t6604 + t6608) + t6518*(t14*t532*t6489 - 1.*t36*t532*t6530 + t14*t317*t6604 - 1.*t36*t460*t6604 + t6623 + t6624);
  p_output1[107]=t543*t6554 + t429*t6582 + t317*(-1.*t429*t6489 - 1.*t2037*t6530 + t6669 - 1.*t6518*t6679 + t6682 - 1.*t412*t6705) + t6518*(t543*t6489 + t2652*t6530 + t317*t6679 + t460*t6705 + t6723 + t6732);
  p_output1[108]=t572*t6554 + t317*(t6843 - 1.*t6518*t6909 - 1.*t412*t6918) + t6518*(t572*t6489 + t2919*t6530 + t317*t6909 + t460*t6918 + t6946 + t6970);
  p_output1[109]=t577*t6554 + t317*(t7115 - 1.*t6518*t7171 - 1.*t412*t7184) + t6518*(t317*t7171 + t460*t7184 + t7216 + t7219 + t7220 + t7226);
  p_output1[110]=t577*(-1.*t460*t6473 - 1.*t460*t6489 - 1.*t2394*t6530 - 1.*t317*t6530) + t317*(t238*t6473 + t238*t6489 + t1359*t6530 + t577*t6530) + t460*t7281 + t238*t7304;
  p_output1[111]=t14*t532*t7281 + t14*t244*t7304 + t317*(t14*t244*t6489 - 1.*t244*t36*t6530 - 1.*t238*t36*t6604 + t14*t577*t6604 + t7321 + t7328) + t577*(-1.*t14*t532*t6489 + t36*t532*t6530 - 1.*t14*t317*t6604 + t36*t460*t6604 + t7395 + t7409);
  p_output1[112]=t543*t7281 + t269*t7304 + t317*(t269*t6489 + t1470*t6530 + t577*t6679 + t238*t6705 + t7483 + t7612) + t577*(-1.*t543*t6489 - 1.*t2652*t6530 - 1.*t317*t6679 - 1.*t460*t6705 + t7678 + t7682);
  p_output1[113]=t572*t7281 + t317*t7304 + t317*(t6578 + t6579 + t6581 + t577*t6909 + t238*t6918 + t7769) + t577*(-1.*t572*t6489 - 1.*t2919*t6530 - 1.*t317*t6909 - 1.*t460*t6918 + t7805 + t7812);
  p_output1[114]=t577*t7281 + t375*t7304 + t317*(t375*t6489 + t1603*t6530 + t577*t7171 + t238*t7184 + t7865 + t7867) + t577*(-1.*t317*t7171 - 1.*t460*t7184 + t7909 + t7912 + t7913 + t7914);
  p_output1[115]=t6518*(-1.*t238*t6473 - 1.*t238*t6489 - 1.*t1359*t6530 - 1.*t577*t6530) + t577*(t412*t6473 + t412*t6489 + t1724*t6530 + t6518*t6530) + t238*t8068 + t412*t8137;
  p_output1[116]=t14*t244*t8068 - 1.*t14*t189*t42*t8137 + t577*(t189*t42*t6471 - 1.*t14*t189*t42*t6489 + t189*t36*t42*t6530 - 1.*t36*t412*t6604 + t14*t6518*t6604 + t8162) + t6518*(-1.*t14*t244*t6489 + t244*t36*t6530 + t238*t36*t6604 - 1.*t14*t577*t6604 + t8178 + t8193);
  p_output1[117]=t269*t8068 + t429*t8137 + t577*(t429*t6489 + t2037*t6530 + t6518*t6679 + t412*t6705 + t8278 + t8300) + t6518*(-1.*t269*t6489 - 1.*t1470*t6530 - 1.*t577*t6679 - 1.*t238*t6705 + t8337 + t8354);
  p_output1[118]=t317*t8068 + t577*(t6518*t6909 + t412*t6918 + t8452) + t6518*(-1.*t577*t6909 - 1.*t238*t6918 + t7295 + t7297 + t7298 + t8490);
  p_output1[119]=t375*t8068 + t577*(t6518*t7171 + t412*t7184 + t8559) + t6518*(-1.*t375*t6489 - 1.*t1603*t6530 - 1.*t577*t7171 - 1.*t238*t7184 + t8597 + t8599);
  p_output1[120]=(t16*t37*t4013 + t4031)*t677 - 1.*t16*t37*t8710 + t8684*t91 + t16*t42*(t147*t3849 + t4049 + t4061 + t4013*t91);
  p_output1[121]=-1.*t16*t42*t48*t8684 - 1.*t38*t42*t8710 + t677*(-1.*t37*t38*t3849 + t4243 + t4263 - 1.*t16*t4125*t8753 + t8765 + t8768) + t16*t42*(t4292 + t4316 + t16*t37*t3849*t48 + t8786 + t8799 - 1.*t37*t4125*t91);
  p_output1[122]=(-1.*t16*t38*t4358 + t16*t37*t4444 + t4515)*t677 + t1143*t8684 + t16*t42*(t169*t3849 + t4518 + t4519 + t8825 + t8829 + t4444*t91);
  p_output1[123]=(-1.*t16*t38*t4581 + t16*t37*t4591 + t4639)*t677 + t582*t8684 + t16*t42*(t4643 + t4646 + t8845 + t8846 + t8848 + t4591*t91);
  p_output1[124]=t677*(t4711 + t4727 + t4013*t53 + t3849*t68) + t53*t8869 + t8863*t91 + t582*(-1.*t147*t3849 + t4733 + t4739 - 1.*t4013*t91);
  p_output1[125]=-1.*t16*t42*t48*t8863 - 1.*t16*t30*t42*t8869 + t677*(t16*t30*t37*t3849 + t4759 + t4763 - 1.*t37*t4125*t53 + t8886 + t8887) + t582*(t4776 + t4780 - 1.*t16*t37*t3849*t48 + t8897 + t8898 + t37*t4125*t91);
  p_output1[126]=t1143*t8863 + t677*t8869 + t677*(t3928 + t4827 + t4444*t53 + t8694 + t8705 + t8918) + t582*(-1.*t169*t3849 + t4857 + t4865 + t8934 + t8943 - 1.*t4444*t91);
  p_output1[127]=t582*t8863 + t809*t8869 + t677*(t107*t3849 + t4934 + t4937 + t4591*t53 + t8995 + t9005) + t582*(t4977 + t4981 + t9025 + t9031 + t9034 - 1.*t4591*t91);
  p_output1[128]=(-1.*t16*t37*t4013 + t5364)*t582 + t16*t42*(-1.*t4013*t53 + t5394 + t5417 - 1.*t3849*t68) + t53*t9069 - 1.*t16*t37*t9136;
  p_output1[129]=-1.*t16*t30*t42*t9069 - 1.*t38*t42*t9136 + t582*(t37*t38*t3849 + t5518 + t5558 + t16*t4125*t8753 + t9154 + t9155) + t16*t42*(-1.*t16*t30*t37*t3849 + t37*t4125*t53 + t5784 + t5800 + t9171 + t9174);
  p_output1[130]=t582*(t16*t38*t4358 - 1.*t16*t37*t4444 + t5868) + t677*t9069 + t16*t42*(t4687 - 1.*t4444*t53 + t5899 + t8865 + t8868 + t9195);
  p_output1[131]=t582*(t16*t38*t4581 - 1.*t16*t37*t4591 + t6144) + t809*t9069 + t16*t42*(-1.*t107*t3849 - 1.*t4591*t53 + t6171 + t6173 + t9209 + t9210);
  p_output1[132]=t1523*(t189*t37*t6604 + t6608) + t189*t42*(t532*t6471 + t295*t6604 + t6623 + t6624) + t295*t9225 - 1.*t189*t37*t9232;
  p_output1[133]=-1.*t189*t219*t42*t9225 - 1.*t230*t42*t9232 + t1523*(-1.*t230*t37*t6471 + t6669 + t6682 - 1.*t189*t6655*t8753 + t9240 + t9241) + t189*t42*(t189*t219*t37*t6471 - 1.*t295*t37*t6655 + t6723 + t6732 + t9247 + t9248);
  p_output1[134]=t1523*(-1.*t189*t230*t6805 + t6843 + t189*t37*t6881) + t2880*t9225 + t189*t42*(t570*t6471 + t295*t6881 + t6946 + t6970 + t9262 + t9264);
  p_output1[135]=t1523*(-1.*t189*t230*t7053 + t7115 + t189*t37*t7144) + t1279*t9225 + t189*t42*(t295*t7144 + t7216 + t7219 + t9275 + t9277 + t9278);
  p_output1[136]=t1523*(t244*t6471 + t232*t6604 + t7321 + t7328) + t1279*(-1.*t532*t6471 - 1.*t295*t6604 + t7395 + t7409) + t295*t9293 + t232*t9302;
  p_output1[137]=-1.*t189*t219*t42*t9293 - 1.*t189*t211*t42*t9302 + t1523*(t189*t211*t37*t6471 - 1.*t232*t37*t6655 + t7483 + t7612 + t9337 + t9343) + t1279*(-1.*t189*t219*t37*t6471 + t295*t37*t6655 + t7678 + t7682 + t9361 + t9362);
  p_output1[138]=t2880*t9293 + t1523*t9302 + t1523*(t6578 + t232*t6881 + t7769 + t9230 + t9231 + t9412) + t1279*(-1.*t570*t6471 - 1.*t295*t6881 + t7805 + t7812 + t9432 + t9433);
  p_output1[139]=t1279*t9293 + t1570*t9302 + t1523*(t360*t6471 + t232*t7144 + t7865 + t7867 + t9475 + t9478) + t1279*(-1.*t295*t7144 + t7909 + t7912 + t9494 + t9503 + t9507);
  p_output1[140]=t1279*(-1.*t189*t37*t6604 + t8162) + t189*t42*(-1.*t244*t6471 - 1.*t232*t6604 + t8178 + t8193) + t232*t9550 - 1.*t189*t37*t9675;
  p_output1[141]=-1.*t189*t211*t42*t9550 - 1.*t230*t42*t9675 + t1279*(t230*t37*t6471 + t8278 + t8300 + t189*t6655*t8753 + t9711 + t9729) + t189*t42*(-1.*t189*t211*t37*t6471 + t232*t37*t6655 + t8337 + t8354 + t9785 + t9788);
  p_output1[142]=t1279*(t189*t230*t6805 - 1.*t189*t37*t6881 + t8452) + t1523*t9550 + t189*t42*(-1.*t232*t6881 + t7295 + t8490 + t9296 + t9297 + t9827);
  p_output1[143]=t1279*(t189*t230*t7053 - 1.*t189*t37*t7144 + t8559) + t1570*t9550 + t189*t42*(-1.*t360*t6471 - 1.*t232*t7144 + t8597 + t8599 + t9889 + t9891);
  p_output1[144]=t16*t48*(t38*t3825 - 1.*t16*t4125 + t8765 + t8768) + t38*(-1.*t16*t3825*t48 - 1.*t38*t4125*t48 + t8786 + t8799) - 1.*t38*t48*t9902 + t16*(t8694 + t9917 + t9920);
  p_output1[145]=t16*t82*t9902 + t38*(-1.*t38*t3825*t82 + t4419*t82 + t8825 + t8829 + t3847*t98 + t4358*t48*t9932);
  p_output1[146]=t16*t30*t9902 + t38*(t4587*t82 + t8845 + t8846 + t4581*t48*t9932 + t9942 + t9945);
  p_output1[147]=-1.*t10000*t30*t38 - 1.*t10005*t38*t48 + t16*t48*(-1.*t16*t30*t3825 - 1.*t30*t38*t4125 + t8886 + t8887) + t16*t30*(t16*t3825*t48 + t38*t4125*t48 + t8897 + t8898);
  p_output1[148]=t10000*t16*t48 + t10005*t16*t82 + t16*t48*(t10035 + t8694 + t8918 + t9917 + t9920 + t30*t4358*t9932) + t16*t30*(t10019 + t10020 + t38*t3825*t82 + t8934 + t8943 - 1.*t4358*t48*t9932);
  p_output1[149]=t10005*t16*t30 + t10000*t16*t98 + t16*t48*(t10068 + t10093 + t8995 + t9005 - 1.*t38*t3825*t98 + t30*t4581*t9932) + t16*t30*(t10050 + t10052 + t10055 + t9025 + t9031 - 1.*t4581*t48*t9932);
  p_output1[150]=-1.*t10118*t30*t38 + t16*(t10050 + t10055 + t9025) + t16*t30*(-1.*t38*t3825 + t16*t4125 + t9154 + t9155) + t38*(t16*t30*t3825 + t30*t38*t4125 + t9171 + t9174);
  p_output1[151]=t10118*t16*t48 + t38*(-1.*t4419*t48 + t8865 + t9195 - 1.*t30*t4358*t9932 + t9998 + t9999);
  p_output1[152]=t10118*t16*t98 + t38*(-1.*t30*t3847 - 1.*t4587*t48 + t9209 + t9210 + t38*t3825*t98 - 1.*t30*t4581*t9932);
  p_output1[153]=-1.*t10208*t219*t230 + t189*(t10218 + t10221 + t9230) + t189*t219*(t230*t6460 - 1.*t189*t6655 + t9240 + t9241) + t230*(-1.*t189*t219*t6460 - 1.*t219*t230*t6655 + t9247 + t9248);
  p_output1[154]=t10208*t189*t290 + t230*(t341*t6408 - 1.*t230*t290*t6460 + t10247*t219*t6805 + t290*t6833 + t9262 + t9264);
  p_output1[155]=t10208*t189*t211 + t230*(t10258 + t10265 + t10247*t219*t7053 + t290*t7092 + t9275 + t9277);
  p_output1[156]=-1.*t10290*t211*t230 - 1.*t10302*t219*t230 + t189*t219*(-1.*t189*t211*t6460 - 1.*t211*t230*t6655 + t9337 + t9343) + t189*t211*(t189*t219*t6460 + t219*t230*t6655 + t9361 + t9362);
  p_output1[157]=t10290*t189*t219 + t10302*t189*t290 + t189*t219*(t10218 + t10221 + t10328 + t10247*t211*t6805 + t9230 + t9412) + t189*t211*(t10314 + t10316 + t230*t290*t6460 - 1.*t10247*t219*t6805 + t9432 + t9433);
  p_output1[158]=t10302*t189*t211 + t10290*t189*t341 + t189*t219*(t10360 + t10367 - 1.*t230*t341*t6460 + t10247*t211*t7053 + t9475 + t9478) + t189*t211*(t10351 + t10352 + t10354 - 1.*t10247*t219*t7053 + t9494 + t9503);
  p_output1[159]=-1.*t10391*t211*t230 + t189*(t10351 + t10354 + t9494) + t189*t211*(-1.*t230*t6460 + t189*t6655 + t9711 + t9729) + t230*(t189*t211*t6460 + t211*t230*t6655 + t9785 + t9788);
  p_output1[160]=t10391*t189*t219 + t230*(t10286 + t10289 - 1.*t10247*t211*t6805 - 1.*t219*t6833 + t9296 + t9827);
  p_output1[161]=t10391*t189*t341 + t230*(-1.*t211*t6408 + t230*t341*t6460 - 1.*t10247*t211*t7053 - 1.*t219*t7092 + t9889 + t9891);
  p_output1[162]=-0.1575*t48 - 0.2255*t98;
  p_output1[163]=-0.2255*t48 - 0.1575*t98;
  p_output1[164]=t10530*t82 + t48*(t10019 + t10020 - 1.*t4358*t48 - 1.*t3821*t82) + t10503*t98 + t82*(t10035 + t30*t4358 + t3821*t48 + t9917);
  p_output1[165]=t10530*t30 + t10503*t48 + t48*(t10052 + t10055 - 1.*t30*t3821 - 1.*t4581*t48) + t82*(t10068 + t10093 + t30*t4581 + t3821*t98);
  p_output1[166]=0.068*t82;
  p_output1[167]=0.068*t30;
  p_output1[168]=0.325*t17 - 1.*t17*t3816 - 1.*t17*t4576;
  p_output1[169]=0.325*t23 - 1.*t23*t3816 - 1.*t23*t4576;
  p_output1[170]=0.1575*t219 + 0.2255*t341;
  p_output1[171]=0.2255*t219 + 0.1575*t341;
  p_output1[172]=t10690*t290 + t10676*t341 + t290*(t10218 + t10328 + t219*t6281 + t211*t6805) + t219*(t10314 + t10316 - 1.*t290*t6281 - 1.*t219*t6805);
  p_output1[173]=t10690*t211 + t10676*t219 + t290*(t10360 + t10367 + t341*t6281 + t211*t7053) + t219*(t10352 + t10354 - 1.*t211*t6281 - 1.*t219*t7053);
  p_output1[174]=-0.068*t290;
  p_output1[175]=-0.068*t211;
  p_output1[176]=-0.325*t193 - 1.*t193*t6266 - 1.*t193*t7048;
  p_output1[177]=-0.325*t202 - 1.*t202*t6266 - 1.*t202*t7048;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
