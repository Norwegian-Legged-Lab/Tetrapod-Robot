/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 18:25:34 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t14;
  double t15;
  double t16;
  double t17;
  double t18;
  double t19;
  double t20;
  double t6;
  double t26;
  double t24;
  double t23;
  double t28;
  double t29;
  double t30;
  double t8;
  double t22;
  double t55;
  double t56;
  double t57;
  double t46;
  double t47;
  double t48;
  double t50;
  double t51;
  double t52;
  double t25;
  double t31;
  double t32;
  double t99;
  double t96;
  double t97;
  double t100;
  double t98;
  double t102;
  double t103;
  double t110;
  double t106;
  double t107;
  double t108;
  double t95;
  double t134;
  double t135;
  double t136;
  double t124;
  double t125;
  double t126;
  double t127;
  double t129;
  double t130;
  double t109;
  double t111;
  double t112;
  double t21;
  double t33;
  double t35;
  double t175;
  double t180;
  double t36;
  double t37;
  double t38;
  double t74;
  double t75;
  double t76;
  double t60;
  double t61;
  double t63;
  double t66;
  double t68;
  double t69;
  double t198;
  double t199;
  double t200;
  double t77;
  double t78;
  double t79;
  double t86;
  double t87;
  double t88;
  double t176;
  double t177;
  double t178;
  double t105;
  double t113;
  double t114;
  double t115;
  double t116;
  double t118;
  double t152;
  double t153;
  double t154;
  double t138;
  double t140;
  double t141;
  double t144;
  double t145;
  double t146;
  double t310;
  double t312;
  double t315;
  double t155;
  double t156;
  double t157;
  double t163;
  double t165;
  double t166;
  double t283;
  double t284;
  double t285;
  double t277;
  double t279;
  double t282;
  double t183;
  double t185;
  double t186;
  double t192;
  double t193;
  double t194;
  double t204;
  double t205;
  double t207;
  double t209;
  double t210;
  double t211;
  double t220;
  double t221;
  double t222;
  double t231;
  double t232;
  double t233;
  double t201;
  double t202;
  double t203;
  double t240;
  double t244;
  double t245;
  double t253;
  double t254;
  double t255;
  double t261;
  double t262;
  double t263;
  double t269;
  double t271;
  double t274;
  double t438;
  double t439;
  double t440;
  double t289;
  double t291;
  double t292;
  double t299;
  double t302;
  double t306;
  double t327;
  double t328;
  double t329;
  double t338;
  double t339;
  double t340;
  double t350;
  double t351;
  double t353;
  double t363;
  double t364;
  double t368;
  double t319;
  double t320;
  double t321;
  double t381;
  double t385;
  double t387;
  double t394;
  double t396;
  double t398;
  double t409;
  double t410;
  double t411;
  double t419;
  double t421;
  double t428;
  double t616;
  double t617;
  double t619;
  double t621;
  double t623;
  double t624;
  double t630;
  double t633;
  double t635;
  double t611;
  double t620;
  double t636;
  double t637;
  double t605;
  double t607;
  double t608;
  double t609;
  double t638;
  double t639;
  double t644;
  double t645;
  double t647;
  double t648;
  double t649;
  double t651;
  double t652;
  double t658;
  double t662;
  double t663;
  double t665;
  double t672;
  double t677;
  double t678;
  double t679;
  double t45;
  double t53;
  double t54;
  double t681;
  double t682;
  double t683;
  double t690;
  double t692;
  double t693;
  double t705;
  double t706;
  double t707;
  double t685;
  double t686;
  double t687;
  double t700;
  double t703;
  double t721;
  double t723;
  double t743;
  double t745;
  double t747;
  double t726;
  double t727;
  double t728;
  double t729;
  double t81;
  double t82;
  double t84;
  double t71;
  double t72;
  double t73;
  double t784;
  double t785;
  double t787;
  double t791;
  double t792;
  double t800;
  double t802;
  double t803;
  double t788;
  double t793;
  double t797;
  double t85;
  double t89;
  double t90;
  double t863;
  double t864;
  double t865;
  double t875;
  double t876;
  double t877;
  double t884;
  double t888;
  double t891;
  double t927;
  double t929;
  double t932;
  double t913;
  double t924;
  double t925;
  double t897;
  double t898;
  double t899;
  double t91;
  double t92;
  double t93;
  double t1017;
  double t1022;
  double t1029;
  double t1004;
  double t1034;
  double t1035;
  double t1038;
  double t1045;
  double t1046;
  double t1048;
  double t1049;
  double t1059;
  double t1060;
  double t1062;
  double t1055;
  double t1056;
  double t1057;
  double t1050;
  double t1052;
  double t1053;
  double t1067;
  double t1069;
  double t1070;
  double t1077;
  double t1087;
  double t1089;
  double t1090;
  double t1092;
  double t41;
  double t42;
  double t43;
  double t58;
  double t64;
  double t65;
  double t1247;
  double t1249;
  double t1250;
  double t1269;
  double t1280;
  double t1283;
  double t1293;
  double t1295;
  double t812;
  double t123;
  double t131;
  double t133;
  double t1522;
  double t1523;
  double t1526;
  double t1538;
  double t1539;
  double t1540;
  double t1541;
  double t1542;
  double t1547;
  double t1516;
  double t1530;
  double t1555;
  double t1556;
  double t1515;
  double t1557;
  double t1558;
  double t1567;
  double t1570;
  double t1573;
  double t1574;
  double t1575;
  double t1576;
  double t1584;
  double t1585;
  double t1586;
  double t1592;
  double t1594;
  double t1595;
  double t1596;
  double t1604;
  double t1607;
  double t1637;
  double t1638;
  double t1639;
  double t1630;
  double t1631;
  double t1632;
  double t1615;
  double t1616;
  double t1623;
  double t1563;
  double t1612;
  double t1613;
  double t1657;
  double t1664;
  double t1665;
  double t1729;
  double t1731;
  double t1735;
  double t1675;
  double t1681;
  double t1685;
  double t1695;
  double t1714;
  double t1715;
  double t1716;
  double t1717;
  double t159;
  double t160;
  double t161;
  double t1794;
  double t1798;
  double t1799;
  double t1807;
  double t1808;
  double t148;
  double t150;
  double t151;
  double t1809;
  double t1810;
  double t1812;
  double t1826;
  double t1827;
  double t1828;
  double t162;
  double t167;
  double t168;
  double t1869;
  double t1871;
  double t1874;
  double t1879;
  double t1880;
  double t1881;
  double t1900;
  double t1904;
  double t1905;
  double t1873;
  double t1888;
  double t1894;
  double t1897;
  double t1906;
  double t1911;
  double t1914;
  double t1919;
  double t1921;
  double t171;
  double t172;
  double t174;
  double t2015;
  double t2018;
  double t2019;
  double t2011;
  double t2024;
  double t2027;
  double t2032;
  double t2033;
  double t2046;
  double t2047;
  double t2059;
  double t2031;
  double t2037;
  double t2039;
  double t2045;
  double t2071;
  double t2076;
  double t2083;
  double t2084;
  double t2085;
  double t2107;
  double t2115;
  double t2117;
  double t2151;
  double t2237;
  double t2238;
  double t2239;
  double t2241;
  double t120;
  double t121;
  double t122;
  double t137;
  double t142;
  double t143;
  double t2950;
  double t2957;
  double t2966;
  double t3104;
  double t3112;
  double t3121;
  double t3128;
  double t3196;
  double t754;
  double t768;
  double t772;
  double t3824;
  double t3826;
  double t3829;
  double t809;
  double t819;
  double t3839;
  double t3840;
  double t3843;
  double t832;
  double t834;
  double t945;
  double t949;
  double t958;
  double t1063;
  double t3935;
  double t1068;
  double t1107;
  double t1111;
  double t3962;
  double t3973;
  double t1130;
  double t1139;
  double t4001;
  double t1165;
  double t1169;
  double t4003;
  double t4004;
  double t4007;
  double t1183;
  double t1195;
  double t1205;
  double t1212;
  double t1213;
  double t1237;
  double t1238;
  double t1248;
  double t1349;
  double t1358;
  double t1368;
  double t4130;
  double t4140;
  double t4196;
  double t4200;
  double t4201;
  double t1406;
  double t1412;
  double t3877;
  double t4234;
  double t1420;
  double t1433;
  double t1456;
  double t1466;
  double t1492;
  double t1498;
  double t1500;
  double t1737;
  double t1756;
  double t1760;
  double t4458;
  double t4460;
  double t4462;
  double t1804;
  double t1823;
  double t1848;
  double t1849;
  double t4495;
  double t4500;
  double t4501;
  double t1896;
  double t1957;
  double t1966;
  double t2041;
  double t4638;
  double t2105;
  double t2249;
  double t2250;
  double t4822;
  double t4885;
  double t2274;
  double t2275;
  double t2295;
  double t2304;
  double t4915;
  double t2489;
  double t2505;
  double t4925;
  double t4935;
  double t4937;
  double t2611;
  double t2650;
  double t2675;
  double t2840;
  double t2856;
  double t2942;
  double t3236;
  double t3404;
  double t3407;
  double t5174;
  double t5179;
  double t5199;
  double t5203;
  double t5205;
  double t3574;
  double t3606;
  double t3632;
  double t3635;
  double t5293;
  double t3667;
  double t3681;
  double t3701;
  double t3715;
  double t3717;
  double t3879;
  double t3882;
  double t3892;
  double t3894;
  double t5702;
  double t5705;
  double t3927;
  double t3939;
  double t3965;
  double t5812;
  double t4027;
  double t4028;
  double t4041;
  double t4042;
  double t5866;
  double t5870;
  double t6641;
  double t7259;
  double t7423;
  double t7538;
  double t4063;
  double t4064;
  double t4056;
  double t5751;
  double t5752;
  double t4134;
  double t4109;
  double t4110;
  double t4259;
  double t4260;
  double t4274;
  double t4276;
  double t8166;
  double t8299;
  double t8416;
  double t8418;
  double t4313;
  double t4402;
  double t4410;
  double t4526;
  double t4527;
  double t4540;
  double t4547;
  double t8772;
  double t8774;
  double t4637;
  double t4644;
  double t4882;
  double t8810;
  double t4960;
  double t4966;
  double t4983;
  double t4990;
  double t8830;
  double t8845;
  double t8882;
  double t8884;
  double t8885;
  double t8913;
  double t5037;
  double t5041;
  double t5022;
  double t8782;
  double t8785;
  double t5175;
  double t5087;
  double t5093;
  double t5327;
  double t5341;
  double t5390;
  double t5394;
  double t9610;
  double t9614;
  double t9639;
  double t9641;
  double t5447;
  double t5609;
  double t5660;
  double t7562;
  double t7585;
  double t7674;
  double t9802;
  double t9803;
  double t9819;
  double t9830;
  double t8273;
  double t8387;
  double t8392;
  double t9531;
  double t9533;
  double t9556;
  double t10060;
  double t10071;
  double t10100;
  double t10113;
  double t9611;
  double t9627;
  double t9633;
  t14 = Cos(var1[8]);
  t15 = Sin(var1[7]);
  t16 = t14*t15;
  t17 = Cos(var1[7]);
  t18 = Sin(var1[8]);
  t19 = -1.*t17*t18;
  t20 = t16 + t19;
  t6 = Cos(var1[4]);
  t26 = Cos(var1[5]);
  t24 = Sin(var1[6]);
  t23 = Sin(var1[5]);
  t28 = t17*t14;
  t29 = t15*t18;
  t30 = t28 + t29;
  t8 = Cos(var1[6]);
  t22 = Sin(var1[4]);
  t55 = -1.*t17*t14;
  t56 = -1.*t15*t18;
  t57 = t55 + t56;
  t46 = -1.*t14*t15;
  t47 = t17*t18;
  t48 = t46 + t47;
  t50 = t26*t48;
  t51 = t23*t24*t30;
  t52 = t50 + t51;
  t25 = t23*t24*t20;
  t31 = t26*t30;
  t32 = t25 + t31;
  t99 = Cos(var1[16]);
  t96 = Cos(var1[17]);
  t97 = Sin(var1[16]);
  t100 = Sin(var1[17]);
  t98 = t96*t97;
  t102 = -1.*t99*t100;
  t103 = t98 + t102;
  t110 = Sin(var1[15]);
  t106 = t99*t96;
  t107 = t97*t100;
  t108 = t106 + t107;
  t95 = Cos(var1[15]);
  t134 = -1.*t99*t96;
  t135 = -1.*t97*t100;
  t136 = t134 + t135;
  t124 = -1.*t96*t97;
  t125 = t99*t100;
  t126 = t124 + t125;
  t127 = t26*t126;
  t129 = t110*t108*t23;
  t130 = t127 + t129;
  t109 = t26*t108;
  t111 = t110*t103*t23;
  t112 = t109 + t111;
  t21 = t6*t8*t20;
  t33 = -1.*t22*t32;
  t35 = t21 + t33;
  t175 = Sin(var1[3]);
  t180 = Cos(var1[3]);
  t36 = t26*t24*t20;
  t37 = -1.*t23*t30;
  t38 = t36 + t37;
  t74 = t6*t8*t30;
  t75 = -1.*t22*t52;
  t76 = t74 + t75;
  t60 = t26*t20;
  t61 = t23*t24*t57;
  t63 = t60 + t61;
  t66 = t8*t22*t23;
  t68 = t6*t24;
  t69 = t66 + t68;
  t198 = t23*t48;
  t199 = -1.*t26*t24*t30;
  t200 = t198 + t199;
  t77 = -1.*t23*t48;
  t78 = t26*t24*t30;
  t79 = t77 + t78;
  t86 = t23*t24*t48;
  t87 = t26*t57;
  t88 = t86 + t87;
  t176 = -1.*t26*t24*t20;
  t177 = t23*t30;
  t178 = t176 + t177;
  t105 = t95*t6*t103;
  t113 = -1.*t22*t112;
  t114 = t105 + t113;
  t115 = t26*t110*t103;
  t116 = -1.*t108*t23;
  t118 = t115 + t116;
  t152 = t95*t6*t108;
  t153 = -1.*t22*t130;
  t154 = t152 + t153;
  t138 = t26*t103;
  t140 = t110*t136*t23;
  t141 = t138 + t140;
  t144 = t6*t110;
  t145 = t95*t22*t23;
  t146 = t144 + t145;
  t310 = -1.*t26*t110*t108;
  t312 = t126*t23;
  t315 = t310 + t312;
  t155 = t26*t110*t108;
  t156 = -1.*t126*t23;
  t157 = t155 + t156;
  t163 = t26*t136;
  t165 = t110*t126*t23;
  t166 = t163 + t165;
  t283 = -1.*t26*t110*t103;
  t284 = t108*t23;
  t285 = t283 + t284;
  t277 = t180*t178;
  t279 = -1.*t175*t35;
  t282 = t277 + t279;
  t183 = -1.*t8*t22*t20;
  t185 = -1.*t6*t32;
  t186 = t183 + t185;
  t192 = -1.*t8*t22*t23*t20;
  t193 = -1.*t6*t24*t20;
  t194 = t192 + t193;
  t204 = t23*t20;
  t205 = -1.*t26*t24*t57;
  t207 = t204 + t205;
  t209 = t6*t8*t57;
  t210 = -1.*t22*t63;
  t211 = t209 + t210;
  t220 = t6*t8*t23;
  t221 = -1.*t22*t24;
  t222 = t220 + t221;
  t231 = t6*t8;
  t232 = -1.*t22*t23*t24;
  t233 = t231 + t232;
  t201 = t180*t200;
  t202 = -1.*t175*t76;
  t203 = t201 + t202;
  t240 = -1.*t8*t22*t30;
  t244 = -1.*t6*t52;
  t245 = t240 + t244;
  t253 = -1.*t8*t22*t23*t30;
  t254 = -1.*t6*t24*t30;
  t255 = t253 + t254;
  t261 = -1.*t26*t24*t48;
  t262 = t23*t57;
  t263 = t261 + t262;
  t269 = t6*t8*t48;
  t271 = -1.*t22*t88;
  t274 = t269 + t271;
  t438 = t180*t285;
  t439 = -1.*t175*t114;
  t440 = t438 + t439;
  t289 = -1.*t95*t103*t22;
  t291 = -1.*t6*t112;
  t292 = t289 + t291;
  t299 = -1.*t6*t110*t103;
  t302 = -1.*t95*t103*t22*t23;
  t306 = t299 + t302;
  t327 = -1.*t26*t110*t136;
  t328 = t103*t23;
  t329 = t327 + t328;
  t338 = t95*t6*t136;
  t339 = -1.*t22*t141;
  t340 = t338 + t339;
  t350 = -1.*t110*t22;
  t351 = t95*t6*t23;
  t353 = t350 + t351;
  t363 = t95*t6;
  t364 = -1.*t110*t22*t23;
  t368 = t363 + t364;
  t319 = t180*t315;
  t320 = -1.*t175*t154;
  t321 = t319 + t320;
  t381 = -1.*t95*t108*t22;
  t385 = -1.*t6*t130;
  t387 = t381 + t385;
  t394 = -1.*t6*t110*t108;
  t396 = -1.*t95*t108*t22*t23;
  t398 = t394 + t396;
  t409 = -1.*t26*t110*t126;
  t410 = t136*t23;
  t411 = t409 + t410;
  t419 = t95*t6*t126;
  t421 = -1.*t22*t166;
  t428 = t419 + t421;
  t616 = -0.0641*t14;
  t617 = -0.28*t18;
  t619 = t616 + t617;
  t621 = -1.*t14;
  t623 = 1. + t621;
  t624 = 0.075*t623;
  t630 = 0.355*t14;
  t633 = -0.0641*t18;
  t635 = t624 + t630 + t633;
  t611 = -0.325*t15;
  t620 = t17*t619;
  t636 = t15*t635;
  t637 = t611 + t620 + t636;
  t605 = -1.*t8;
  t607 = 1. + t605;
  t608 = 0.1575*t607;
  t609 = 0.2255*t8;
  t638 = -1.*t24*t637;
  t639 = t608 + t609 + t638;
  t644 = -1.*t23*t639;
  t645 = -1.*t17;
  t647 = 1. + t645;
  t648 = 0.325*t647;
  t649 = -1.*t15*t619;
  t651 = t17*t635;
  t652 = t648 + t649 + t651;
  t658 = t26*t652;
  t662 = t644 + t658;
  t663 = -1.*t22*t662;
  t665 = 0.068*t24;
  t672 = t8*t637;
  t677 = t665 + t672;
  t678 = t6*t677;
  t679 = t663 + t678;
  t45 = t8*t22*t30;
  t53 = t6*t52;
  t54 = t45 + t53;
  t681 = -1.*t6*t8*t23;
  t682 = t22*t24;
  t683 = t681 + t682;
  t690 = t6*t662;
  t692 = t22*t677;
  t693 = t690 + t692;
  t705 = t26*t639;
  t706 = t23*t652;
  t707 = t705 + t706;
  t685 = -1.*t6*t662;
  t686 = -1.*t22*t677;
  t687 = t685 + t686;
  t700 = -1.*t69*t679;
  t703 = -1.*t683*t693;
  t721 = -1.*t26*t8*t707;
  t723 = t700 + t703 + t721;
  t743 = -1.*t26*t639;
  t745 = -1.*t23*t652;
  t747 = t743 + t745;
  t726 = t707*t200;
  t727 = t693*t54;
  t728 = t679*t76;
  t729 = t726 + t727 + t728;
  t81 = t6*t8*t23*t30;
  t82 = -1.*t22*t24*t30;
  t84 = t81 + t82;
  t71 = t8*t22;
  t72 = t6*t23*t24;
  t73 = t71 + t72;
  t784 = -0.068*t24;
  t785 = -1.*t8*t637;
  t787 = t784 + t785;
  t791 = 0.068*t8;
  t792 = t791 + t638;
  t800 = -1.*t6*t23*t787;
  t802 = t22*t792;
  t803 = t800 + t802;
  t788 = t22*t23*t787;
  t793 = t6*t792;
  t797 = t788 + t793;
  t85 = t8*t22*t48;
  t89 = t6*t88;
  t90 = t85 + t89;
  t863 = -0.325*t17;
  t864 = t863 + t649 + t651;
  t865 = t23*t24*t864;
  t875 = 0.325*t15;
  t876 = -1.*t17*t619;
  t877 = -1.*t15*t635;
  t884 = t875 + t876 + t877;
  t888 = t26*t884;
  t891 = t865 + t888;
  t927 = -1.*t26*t24*t864;
  t929 = t23*t884;
  t932 = t927 + t929;
  t913 = t6*t891;
  t924 = t8*t22*t864;
  t925 = t913 + t924;
  t897 = -1.*t22*t891;
  t898 = t6*t8*t864;
  t899 = t897 + t898;
  t91 = t8*t22*t20;
  t92 = t6*t32;
  t93 = t91 + t92;
  t1017 = -0.28*t14;
  t1022 = 0.0641*t18;
  t1029 = t1017 + t1022;
  t1004 = t15*t619;
  t1034 = t17*t1029;
  t1035 = t1004 + t1034;
  t1038 = t23*t24*t1035;
  t1045 = -1.*t15*t1029;
  t1046 = t620 + t1045;
  t1048 = t26*t1046;
  t1049 = t1038 + t1048;
  t1059 = -1.*t26*t24*t1035;
  t1060 = t23*t1046;
  t1062 = t1059 + t1060;
  t1055 = t6*t1049;
  t1056 = t8*t22*t1035;
  t1057 = t1055 + t1056;
  t1050 = -1.*t22*t1049;
  t1052 = t6*t8*t1035;
  t1053 = t1050 + t1052;
  t1067 = t707*t178;
  t1069 = t693*t93;
  t1070 = t679*t35;
  t1077 = t1067 + t1069 + t1070;
  t1087 = -1.*t707*t200;
  t1089 = -1.*t693*t54;
  t1090 = -1.*t679*t76;
  t1092 = t1087 + t1089 + t1090;
  t41 = t6*t8*t23*t20;
  t42 = -1.*t22*t24*t20;
  t43 = t41 + t42;
  t58 = t8*t22*t57;
  t64 = t6*t63;
  t65 = t58 + t64;
  t1247 = -1.*t707*t178;
  t1249 = -1.*t693*t93;
  t1250 = -1.*t679*t35;
  t1269 = t69*t679;
  t1280 = t683*t693;
  t1283 = t26*t8*t707;
  t1293 = t1269 + t1280 + t1283;
  t1295 = t1247 + t1249 + t1250;
  t812 = Power(t26,2);
  t123 = t95*t108*t22;
  t131 = t6*t130;
  t133 = t123 + t131;
  t1522 = -0.0641*t96;
  t1523 = -0.28*t100;
  t1526 = t1522 + t1523;
  t1538 = -1.*t96;
  t1539 = 1. + t1538;
  t1540 = -0.575*t1539;
  t1541 = -0.295*t96;
  t1542 = -0.0641*t100;
  t1547 = t1540 + t1541 + t1542;
  t1516 = 0.325*t97;
  t1530 = t99*t1526;
  t1555 = t97*t1547;
  t1556 = t1516 + t1530 + t1555;
  t1515 = -0.068*t110;
  t1557 = t95*t1556;
  t1558 = t1515 + t1557;
  t1567 = -1.*t99;
  t1570 = 1. + t1567;
  t1573 = -0.325*t1570;
  t1574 = -1.*t97*t1526;
  t1575 = t99*t1547;
  t1576 = t1573 + t1574 + t1575;
  t1584 = t26*t1576;
  t1585 = -1.*t95;
  t1586 = 1. + t1585;
  t1592 = -0.1575*t1586;
  t1594 = -0.2255*t95;
  t1595 = -1.*t110*t1556;
  t1596 = t1592 + t1594 + t1595;
  t1604 = -1.*t1596*t23;
  t1607 = t1584 + t1604;
  t1637 = t6*t1558;
  t1638 = -1.*t22*t1607;
  t1639 = t1637 + t1638;
  t1630 = t110*t22;
  t1631 = -1.*t95*t6*t23;
  t1632 = t1630 + t1631;
  t1615 = t1558*t22;
  t1616 = t6*t1607;
  t1623 = t1615 + t1616;
  t1563 = -1.*t1558*t22;
  t1612 = -1.*t6*t1607;
  t1613 = t1563 + t1612;
  t1657 = t26*t1596;
  t1664 = t1576*t23;
  t1665 = t1657 + t1664;
  t1729 = -1.*t26*t1596;
  t1731 = -1.*t1576*t23;
  t1735 = t1729 + t1731;
  t1675 = -1.*t95*t26*t1665;
  t1681 = -1.*t1632*t1623;
  t1685 = -1.*t146*t1639;
  t1695 = t1675 + t1681 + t1685;
  t1714 = t1665*t315;
  t1715 = t1623*t133;
  t1716 = t1639*t154;
  t1717 = t1714 + t1715 + t1716;
  t159 = -1.*t110*t108*t22;
  t160 = t95*t6*t108*t23;
  t161 = t159 + t160;
  t1794 = 0.068*t110;
  t1798 = -1.*t95*t1556;
  t1799 = t1794 + t1798;
  t1807 = -0.068*t95;
  t1808 = t1807 + t1595;
  t148 = t95*t22;
  t150 = t6*t110*t23;
  t151 = t148 + t150;
  t1809 = t1808*t22;
  t1810 = -1.*t6*t1799*t23;
  t1812 = t1809 + t1810;
  t1826 = t6*t1808;
  t1827 = t1799*t22*t23;
  t1828 = t1826 + t1827;
  t162 = t95*t126*t22;
  t167 = t6*t166;
  t168 = t162 + t167;
  t1869 = 0.325*t99;
  t1871 = t1869 + t1574 + t1575;
  t1874 = -0.325*t97;
  t1879 = -1.*t99*t1526;
  t1880 = -1.*t97*t1547;
  t1881 = t1874 + t1879 + t1880;
  t1900 = t26*t1881;
  t1904 = t110*t1871*t23;
  t1905 = t1900 + t1904;
  t1873 = -1.*t26*t110*t1871;
  t1888 = t1881*t23;
  t1894 = t1873 + t1888;
  t1897 = t95*t1871*t22;
  t1906 = t6*t1905;
  t1911 = t1897 + t1906;
  t1914 = t95*t6*t1871;
  t1919 = -1.*t22*t1905;
  t1921 = t1914 + t1919;
  t171 = t95*t103*t22;
  t172 = t6*t112;
  t174 = t171 + t172;
  t2015 = -0.28*t96;
  t2018 = 0.0641*t100;
  t2019 = t2015 + t2018;
  t2011 = t97*t1526;
  t2024 = t99*t2019;
  t2027 = t2011 + t2024;
  t2032 = -1.*t97*t2019;
  t2033 = t1530 + t2032;
  t2046 = t26*t2033;
  t2047 = t110*t2027*t23;
  t2059 = t2046 + t2047;
  t2031 = -1.*t26*t110*t2027;
  t2037 = t2033*t23;
  t2039 = t2031 + t2037;
  t2045 = t95*t2027*t22;
  t2071 = t6*t2059;
  t2076 = t2045 + t2071;
  t2083 = t95*t6*t2027;
  t2084 = -1.*t22*t2059;
  t2085 = t2083 + t2084;
  t2107 = t1665*t285;
  t2115 = t1623*t174;
  t2117 = t1639*t114;
  t2151 = t2107 + t2115 + t2117;
  t2237 = -1.*t1665*t315;
  t2238 = -1.*t1623*t133;
  t2239 = -1.*t1639*t154;
  t2241 = t2237 + t2238 + t2239;
  t120 = -1.*t110*t103*t22;
  t121 = t95*t6*t103*t23;
  t122 = t120 + t121;
  t137 = t95*t136*t22;
  t142 = t6*t141;
  t143 = t137 + t142;
  t2950 = -1.*t1665*t285;
  t2957 = -1.*t1623*t174;
  t2966 = -1.*t1639*t114;
  t3104 = t95*t26*t1665;
  t3112 = t1632*t1623;
  t3121 = t146*t1639;
  t3128 = t3104 + t3112 + t3121;
  t3196 = t2950 + t2957 + t2966;
  t754 = t8*t23*t707;
  t768 = t662*t200;
  t772 = t707*t52;
  t3824 = t8*t23*t662;
  t3826 = -1.*t24*t677;
  t3829 = t3824 + t721 + t3826;
  t809 = t26*t24*t707;
  t819 = -1.*t812*t8*t787;
  t3839 = t8*t677*t30;
  t3840 = t662*t52;
  t3843 = t3839 + t726 + t3840;
  t832 = -1.*t26*t8*t707*t30;
  t834 = t26*t787*t200;
  t945 = -1.*t26*t8*t932;
  t949 = t707*t263;
  t958 = t932*t200;
  t1063 = -1.*t26*t8*t1062;
  t3935 = Power(t8,2);
  t1068 = t1062*t200;
  t1107 = t707*t32;
  t1111 = t662*t178;
  t3962 = t8*t677*t20;
  t3973 = t662*t32;
  t1130 = -1.*t662*t200;
  t1139 = -1.*t707*t52;
  t4001 = t3962 + t3973 + t1067;
  t1165 = -1.*t26*t8*t707*t20;
  t1169 = t26*t787*t178;
  t4003 = -1.*t8*t677*t30;
  t4004 = -1.*t662*t52;
  t4007 = t4003 + t1087 + t4004;
  t1183 = t26*t8*t707*t30;
  t1195 = -1.*t26*t787*t200;
  t1205 = t932*t178;
  t1212 = -1.*t707*t263;
  t1213 = -1.*t932*t200;
  t1237 = t707*t207;
  t1238 = t1062*t178;
  t1248 = -1.*t1062*t200;
  t1349 = -1.*t8*t23*t707;
  t1358 = -1.*t707*t32;
  t1368 = -1.*t662*t178;
  t4130 = -1.*t8*t677*t20;
  t4140 = -1.*t662*t32;
  t4196 = -1.*t8*t23*t662;
  t4200 = t24*t677;
  t4201 = t4196 + t1283 + t4200;
  t1406 = -1.*t26*t24*t707;
  t1412 = t812*t8*t787;
  t3877 = Power(t23,2);
  t4234 = t4130 + t4140 + t1247;
  t1420 = t26*t8*t707*t20;
  t1433 = -1.*t26*t787*t178;
  t1456 = t26*t8*t932;
  t1466 = -1.*t932*t178;
  t1492 = t26*t8*t1062;
  t1498 = -1.*t707*t207;
  t1500 = -1.*t1062*t178;
  t1737 = t95*t23*t1665;
  t1756 = t1607*t315;
  t1760 = t1665*t130;
  t4458 = -1.*t110*t1558;
  t4460 = t95*t23*t1607;
  t4462 = t4458 + t4460 + t1675;
  t1804 = -1.*t95*t812*t1799;
  t1823 = t26*t110*t1665;
  t1848 = -1.*t95*t26*t108*t1665;
  t1849 = t26*t1799*t315;
  t4495 = t95*t1558*t108;
  t4500 = t1607*t130;
  t4501 = t4495 + t1714 + t4500;
  t1896 = -1.*t95*t26*t1894;
  t1957 = t1894*t315;
  t1966 = t1665*t411;
  t2041 = -1.*t95*t26*t2039;
  t4638 = Power(t95,2);
  t2105 = t2039*t315;
  t2249 = t1665*t112;
  t2250 = t1607*t285;
  t4822 = t95*t1558*t103;
  t4885 = t1607*t112;
  t2274 = -1.*t1607*t315;
  t2275 = -1.*t1665*t130;
  t2295 = -1.*t95*t26*t103*t1665;
  t2304 = t26*t1799*t285;
  t4915 = t4822 + t4885 + t2107;
  t2489 = t95*t26*t108*t1665;
  t2505 = -1.*t26*t1799*t315;
  t4925 = -1.*t95*t1558*t108;
  t4935 = -1.*t1607*t130;
  t4937 = t4925 + t2237 + t4935;
  t2611 = t1894*t285;
  t2650 = -1.*t1894*t315;
  t2675 = -1.*t1665*t411;
  t2840 = t1665*t329;
  t2856 = t2039*t285;
  t2942 = -1.*t2039*t315;
  t3236 = -1.*t95*t23*t1665;
  t3404 = -1.*t1665*t112;
  t3407 = -1.*t1607*t285;
  t5174 = -1.*t95*t1558*t103;
  t5179 = -1.*t1607*t112;
  t5199 = t110*t1558;
  t5203 = -1.*t95*t23*t1607;
  t5205 = t5199 + t5203 + t3104;
  t3574 = t95*t812*t1799;
  t3606 = -1.*t26*t110*t1665;
  t3632 = t95*t26*t103*t1665;
  t3635 = -1.*t26*t1799*t285;
  t5293 = t5174 + t5179 + t2950;
  t3667 = t95*t26*t1894;
  t3681 = -1.*t1894*t285;
  t3701 = t95*t26*t2039;
  t3715 = -1.*t1665*t329;
  t3717 = -1.*t2039*t285;
  t3879 = -1.*t8*t677;
  t3882 = -1.*t24*t792;
  t3892 = -1.*t24*t677*t30;
  t3894 = t8*t792*t30;
  t5702 = -1.*t8*t639;
  t5705 = t3826 + t5702;
  t3927 = t8*t677*t48;
  t3939 = t3935*t864*t30;
  t3965 = t3935*t1035*t30;
  t5812 = Power(t24,2);
  t4027 = -1.*t24*t677*t20;
  t4028 = t8*t792*t20;
  t4041 = t24*t677*t30;
  t4042 = -1.*t8*t792*t30;
  t5866 = -1.*t24*t639*t20;
  t5870 = t652*t30;
  t6641 = -1.*t652*t48;
  t7259 = t24*t639*t30;
  t7423 = t6641 + t4003 + t7259;
  t7538 = t3962 + t5866 + t5870;
  t4063 = -1.*t8*t677*t48;
  t4064 = -1.*t3935*t864*t30;
  t4056 = t3935*t864*t20;
  t5751 = t652*t48;
  t5752 = -1.*t24*t639*t30;
  t4134 = -1.*t3935*t1035*t30;
  t4109 = t3935*t1035*t20;
  t4110 = t8*t677*t57;
  t4259 = t8*t677;
  t4260 = t24*t792;
  t4274 = t24*t677*t20;
  t4276 = -1.*t8*t792*t20;
  t8166 = t24*t639*t20;
  t8299 = -1.*t652*t30;
  t8416 = t8*t639;
  t8418 = t4200 + t8416;
  t4313 = -1.*t3935*t864*t20;
  t4402 = -1.*t3935*t1035*t20;
  t4410 = -1.*t8*t677*t57;
  t4526 = -1.*t95*t1558;
  t4527 = -1.*t110*t1808;
  t4540 = -1.*t110*t1558*t108;
  t4547 = t95*t1808*t108;
  t8772 = -1.*t95*t1596;
  t8774 = t4458 + t8772;
  t4637 = t95*t1558*t126;
  t4644 = t4638*t1871*t108;
  t4882 = t4638*t2027*t108;
  t8810 = Power(t110,2);
  t4960 = -1.*t110*t1558*t103;
  t4966 = t95*t1808*t103;
  t4983 = t110*t1558*t108;
  t4990 = -1.*t95*t1808*t108;
  t8830 = -1.*t110*t1596*t103;
  t8845 = t1576*t108;
  t8882 = -1.*t1576*t126;
  t8884 = t110*t1596*t108;
  t8885 = t8882 + t4925 + t8884;
  t8913 = t4822 + t8830 + t8845;
  t5037 = -1.*t95*t1558*t126;
  t5041 = -1.*t4638*t1871*t108;
  t5022 = t4638*t1871*t103;
  t8782 = t1576*t126;
  t8785 = -1.*t110*t1596*t108;
  t5175 = -1.*t4638*t2027*t108;
  t5087 = t4638*t2027*t103;
  t5093 = t95*t1558*t136;
  t5327 = t95*t1558;
  t5341 = t110*t1808;
  t5390 = t110*t1558*t103;
  t5394 = -1.*t95*t1808*t103;
  t9610 = t110*t1596*t103;
  t9614 = -1.*t1576*t108;
  t9639 = t95*t1596;
  t9641 = t5199 + t9639;
  t5447 = -1.*t4638*t1871*t103;
  t5609 = -1.*t4638*t2027*t103;
  t5660 = -1.*t95*t1558*t136;
  t7562 = -1.*t884*t48;
  t7585 = -1.*t652*t57;
  t7674 = t884*t30;
  t9802 = t637*t20;
  t9803 = t9802 + t5870;
  t9819 = -1.*t637*t30;
  t9830 = t6641 + t9819;
  t8273 = -1.*t1046*t48;
  t8387 = t652*t20;
  t8392 = t1046*t30;
  t9531 = -1.*t1881*t126;
  t9533 = -1.*t1576*t136;
  t9556 = t1881*t108;
  t10060 = t1556*t103;
  t10071 = t10060 + t8845;
  t10100 = -1.*t1556*t108;
  t10113 = t8882 + t10100;
  t9611 = -1.*t2033*t126;
  t9627 = t1576*t103;
  t9633 = t2033*t108;
  p_output1[0]=t35;
  p_output1[1]=t38*t6;
  p_output1[2]=t43;
  p_output1[3]=t54;
  p_output1[4]=t65;
  p_output1[5]=t69;
  p_output1[6]=-1.*t26*t6*t8;
  p_output1[7]=t73;
  p_output1[8]=t76;
  p_output1[9]=t6*t79;
  p_output1[10]=t84;
  p_output1[11]=t90;
  p_output1[12]=t93;
  p_output1[13]=t114;
  p_output1[14]=t118*t6;
  p_output1[15]=t122;
  p_output1[16]=t133;
  p_output1[17]=t143;
  p_output1[18]=t146;
  p_output1[19]=-1.*t26*t6*t95;
  p_output1[20]=t151;
  p_output1[21]=t154;
  p_output1[22]=t157*t6;
  p_output1[23]=t161;
  p_output1[24]=t168;
  p_output1[25]=t174;
  p_output1[26]=-1.*t175*t178 - 1.*t180*t35;
  p_output1[27]=-1.*t175*t186;
  p_output1[28]=t180*t32 + t175*t22*t38;
  p_output1[29]=-1.*t175*t194 - 1.*t180*t20*t26*t8;
  p_output1[30]=t203;
  p_output1[31]=t180*t207 - 1.*t175*t211;
  p_output1[32]=-1.*t180*t69 - 1.*t175*t26*t8;
  p_output1[33]=-1.*t175*t222;
  p_output1[34]=-1.*t180*t23*t8 - 1.*t175*t22*t26*t8;
  p_output1[35]=-1.*t175*t233 - 1.*t180*t24*t26;
  p_output1[36]=-1.*t175*t200 - 1.*t180*t76;
  p_output1[37]=-1.*t175*t245;
  p_output1[38]=t180*t52 + t175*t22*t79;
  p_output1[39]=-1.*t175*t255 - 1.*t180*t26*t30*t8;
  p_output1[40]=t180*t263 - 1.*t175*t274;
  p_output1[41]=t282;
  p_output1[42]=-1.*t114*t180 - 1.*t175*t285;
  p_output1[43]=-1.*t175*t292;
  p_output1[44]=t112*t180 + t118*t175*t22;
  p_output1[45]=-1.*t175*t306 - 1.*t103*t180*t26*t95;
  p_output1[46]=t321;
  p_output1[47]=t180*t329 - 1.*t175*t340;
  p_output1[48]=-1.*t146*t180 - 1.*t175*t26*t95;
  p_output1[49]=-1.*t175*t353;
  p_output1[50]=-1.*t180*t23*t95 - 1.*t175*t22*t26*t95;
  p_output1[51]=-1.*t110*t180*t26 - 1.*t175*t368;
  p_output1[52]=-1.*t154*t180 - 1.*t175*t315;
  p_output1[53]=-1.*t175*t387;
  p_output1[54]=t130*t180 + t157*t175*t22;
  p_output1[55]=-1.*t175*t398 - 1.*t108*t180*t26*t95;
  p_output1[56]=t180*t411 - 1.*t175*t428;
  p_output1[57]=t440;
  p_output1[58]=t282;
  p_output1[59]=t180*t186;
  p_output1[60]=t175*t32 - 1.*t180*t22*t38;
  p_output1[61]=t180*t194 - 1.*t175*t20*t26*t8;
  p_output1[62]=t175*t200 + t180*t76;
  p_output1[63]=t175*t207 + t180*t211;
  p_output1[64]=-1.*t175*t69 + t180*t26*t8;
  p_output1[65]=t180*t222;
  p_output1[66]=-1.*t175*t23*t8 + t180*t22*t26*t8;
  p_output1[67]=t180*t233 - 1.*t175*t24*t26;
  p_output1[68]=t203;
  p_output1[69]=t180*t245;
  p_output1[70]=t175*t52 - 1.*t180*t22*t79;
  p_output1[71]=t180*t255 - 1.*t175*t26*t30*t8;
  p_output1[72]=t175*t263 + t180*t274;
  p_output1[73]=t175*t178 + t180*t35;
  p_output1[74]=t440;
  p_output1[75]=t180*t292;
  p_output1[76]=t112*t175 - 1.*t118*t180*t22;
  p_output1[77]=t180*t306 - 1.*t103*t175*t26*t95;
  p_output1[78]=t154*t180 + t175*t315;
  p_output1[79]=t175*t329 + t180*t340;
  p_output1[80]=-1.*t146*t175 + t180*t26*t95;
  p_output1[81]=t180*t353;
  p_output1[82]=-1.*t175*t23*t95 + t180*t22*t26*t95;
  p_output1[83]=-1.*t110*t175*t26 + t180*t368;
  p_output1[84]=t321;
  p_output1[85]=t180*t387;
  p_output1[86]=t130*t175 - 1.*t157*t180*t22;
  p_output1[87]=t180*t398 - 1.*t108*t175*t26*t95;
  p_output1[88]=t175*t411 + t180*t428;
  p_output1[89]=t114*t180 + t175*t285;
  p_output1[90]=t54*(-1.*t222*t679 - 1.*t679*t683 - 1.*t687*t69 - 1.*t69*t693) + t69*t729 + t723*t76 + t683*(t245*t679 + t54*t679 + t687*t76 + t693*t76);
  p_output1[91]=t6*t723*t79 + t683*(t54*t6*t747 - 1.*t22*t747*t76 + t768 + t772 - 1.*t22*t679*t79 + t6*t693*t79) - 1.*t26*t6*t729*t8 + t54*(-1.*t6*t683*t747 + t22*t69*t747 + t754 - 1.*t26*t662*t8 - 1.*t22*t26*t679*t8 + t26*t6*t693*t8);
  p_output1[92]=t729*t73 + t54*(-1.*t233*t679 - 1.*t693*t73 - 1.*t69*t797 - 1.*t683*t803 + t809 + t819) + t723*t84 + t683*(t255*t679 + t76*t797 + t54*t803 + t832 + t834 + t693*t84);
  p_output1[93]=t723*t90 + t54*(-1.*t69*t899 - 1.*t683*t925 + t945) + t683*(t274*t679 + t76*t899 + t693*t90 + t54*t925 + t949 + t958);
  p_output1[94]=t54*(t1063 - 1.*t1057*t683 - 1.*t1053*t69) + t683*(t1067 + t1068 + t1069 + t1070 + t1057*t54 + t1053*t76) + t723*t93;
  p_output1[95]=t1092*t35 + t1077*t76 + (-1.*t245*t679 - 1.*t54*t679 - 1.*t687*t76 - 1.*t693*t76)*t93 + t54*(t186*t679 + t35*t687 + t35*t693 + t679*t93);
  p_output1[96]=t1092*t38*t6 + t1077*t6*t79 + (t1130 + t1139 - 1.*t54*t6*t747 + t22*t747*t76 + t22*t679*t79 - 1.*t6*t693*t79)*t93 + t54*(t1107 + t1111 - 1.*t22*t38*t679 + t38*t6*t693 - 1.*t22*t35*t747 + t6*t747*t93);
  p_output1[97]=t1092*t43 + t1077*t84 + (t1183 + t1195 - 1.*t255*t679 - 1.*t76*t797 - 1.*t54*t803 - 1.*t693*t84)*t93 + t54*(t1165 + t1169 + t194*t679 + t43*t693 + t35*t797 + t803*t93);
  p_output1[98]=t1092*t54 + t1077*t90 + (t1212 + t1213 - 1.*t274*t679 - 1.*t76*t899 - 1.*t693*t90 - 1.*t54*t925)*t93 + t54*(t1205 + t726 + t727 + t728 + t35*t899 + t925*t93);
  p_output1[99]=t1092*t65 + t1077*t93 + (t1247 + t1248 + t1249 + t1250 - 1.*t1057*t54 - 1.*t1053*t76)*t93 + t54*(t1237 + t1238 + t1053*t35 + t211*t679 + t65*t693 + t1057*t93);
  p_output1[100]=t1293*t35 + t1295*t69 + (t222*t679 + t679*t683 + t687*t69 + t69*t693)*t93 + t683*(-1.*t186*t679 - 1.*t35*t687 - 1.*t35*t693 - 1.*t679*t93);
  p_output1[101]=t1293*t38*t6 - 1.*t1295*t26*t6*t8 + (t1349 + t6*t683*t747 - 1.*t22*t69*t747 + t26*t662*t8 + t22*t26*t679*t8 - 1.*t26*t6*t693*t8)*t93 + t683*(t1358 + t1368 + t22*t38*t679 - 1.*t38*t6*t693 + t22*t35*t747 - 1.*t6*t747*t93);
  p_output1[102]=t1293*t43 + t1295*t73 + (t1406 + t1412 + t233*t679 + t693*t73 + t69*t797 + t683*t803)*t93 + t683*(t1420 + t1433 - 1.*t194*t679 - 1.*t43*t693 - 1.*t35*t797 - 1.*t803*t93);
  p_output1[103]=t1293*t54 + (t1456 + t69*t899 + t683*t925)*t93 + t683*(t1087 + t1089 + t1090 + t1466 - 1.*t35*t899 - 1.*t925*t93);
  p_output1[104]=t1293*t65 + (t1492 + t1057*t683 + t1053*t69)*t93 + t683*(t1498 + t1500 - 1.*t1053*t35 - 1.*t211*t679 - 1.*t65*t693 - 1.*t1057*t93);
  p_output1[105]=t154*t1695 + t146*t1717 + t133*(-1.*t146*t1613 - 1.*t146*t1623 - 1.*t1632*t1639 - 1.*t1639*t353) + t1632*(t154*t1613 + t154*t1623 + t133*t1639 + t1639*t387);
  p_output1[106]=t157*t1695*t6 + t1632*(t1756 + t1760 - 1.*t157*t1639*t22 - 1.*t154*t1735*t22 + t157*t1623*t6 + t133*t1735*t6) - 1.*t1717*t26*t6*t95 + t133*(t1737 + t146*t1735*t22 - 1.*t1632*t1735*t6 - 1.*t1607*t26*t95 - 1.*t1639*t22*t26*t95 + t1623*t26*t6*t95);
  p_output1[107]=t161*t1695 + t151*t1717 + t133*(-1.*t151*t1623 + t1804 - 1.*t1632*t1812 + t1823 - 1.*t146*t1828 - 1.*t1639*t368) + t1632*(t161*t1623 + t133*t1812 + t154*t1828 + t1848 + t1849 + t1639*t398);
  p_output1[108]=t168*t1695 + t133*(t1896 - 1.*t1632*t1911 - 1.*t146*t1921) + t1632*(t1623*t168 + t133*t1911 + t154*t1921 + t1957 + t1966 + t1639*t428);
  p_output1[109]=t1695*t174 + t133*(t2041 - 1.*t1632*t2076 - 1.*t146*t2085) + t1632*(t133*t2076 + t154*t2085 + t2105 + t2107 + t2115 + t2117);
  p_output1[110]=t154*t2151 + t114*t2241 + t133*(t114*t1613 + t114*t1623 + t1639*t174 + t1639*t292) + t174*(-1.*t154*t1613 - 1.*t154*t1623 - 1.*t133*t1639 - 1.*t1639*t387);
  p_output1[111]=t157*t2151*t6 + t118*t2241*t6 + t174*(t157*t1639*t22 + t154*t1735*t22 + t2274 + t2275 - 1.*t157*t1623*t6 - 1.*t133*t1735*t6) + t133*(-1.*t118*t1639*t22 - 1.*t114*t1735*t22 + t2249 + t2250 + t118*t1623*t6 + t1735*t174*t6);
  p_output1[112]=t161*t2151 + t122*t2241 + t133*(t122*t1623 + t174*t1812 + t114*t1828 + t2295 + t2304 + t1639*t306) + t174*(-1.*t161*t1623 - 1.*t133*t1812 - 1.*t154*t1828 + t2489 + t2505 - 1.*t1639*t398);
  p_output1[113]=t168*t2151 + t133*t2241 + t133*(t1714 + t1715 + t1716 + t174*t1911 + t114*t1921 + t2611) + t174*(-1.*t1623*t168 - 1.*t133*t1911 - 1.*t154*t1921 + t2650 + t2675 - 1.*t1639*t428);
  p_output1[114]=t174*t2151 + t143*t2241 + t174*(-1.*t133*t2076 - 1.*t154*t2085 + t2942 + t2950 + t2957 + t2966) + t133*(t143*t1623 + t174*t2076 + t114*t2085 + t2840 + t2856 + t1639*t340);
  p_output1[115]=t1632*(-1.*t114*t1613 - 1.*t114*t1623 - 1.*t1639*t174 - 1.*t1639*t292) + t114*t3128 + t146*t3196 + t174*(t146*t1613 + t146*t1623 + t1632*t1639 + t1639*t353);
  p_output1[116]=t118*t3128*t6 + t1632*(t118*t1639*t22 + t114*t1735*t22 + t3404 + t3407 - 1.*t118*t1623*t6 - 1.*t1735*t174*t6) - 1.*t26*t3196*t6*t95 + t174*(-1.*t146*t1735*t22 + t3236 + t1632*t1735*t6 + t1607*t26*t95 + t1639*t22*t26*t95 - 1.*t1623*t26*t6*t95);
  p_output1[117]=t122*t3128 + t151*t3196 + t1632*(-1.*t122*t1623 - 1.*t174*t1812 - 1.*t114*t1828 - 1.*t1639*t306 + t3632 + t3635) + t174*(t151*t1623 + t1632*t1812 + t146*t1828 + t3574 + t3606 + t1639*t368);
  p_output1[118]=t133*t3128 + t174*(t1632*t1911 + t146*t1921 + t3667) + t1632*(-1.*t174*t1911 - 1.*t114*t1921 + t2237 + t2238 + t2239 + t3681);
  p_output1[119]=t143*t3128 + t174*(t1632*t2076 + t146*t2085 + t3701) + t1632*(-1.*t143*t1623 - 1.*t174*t2076 - 1.*t114*t2085 - 1.*t1639*t340 + t3715 + t3717);
  p_output1[120]=t3829*t52 - 1.*t23*t3843*t8 + t26*(t52*t747 + t768 + t772 + t662*t79)*t8 + t200*(t754 + t23*t747*t8);
  p_output1[121]=-1.*t24*t26*t3843 - 1.*t26*t30*t3829*t8 + t200*(t3879 + t3882 - 1.*t23*t24*t662 - 1.*t3877*t787*t8 + t809 + t819) + t26*t8*(t3892 + t3894 - 1.*t23*t52*t787 + t23*t30*t662*t8 + t832 + t834);
  p_output1[122]=t263*t3829 + t200*(-1.*t24*t8*t864 + t23*t8*t891 + t945) + t26*t8*(t3927 + t3939 + t662*t88 + t52*t891 + t949 + t958);
  p_output1[123]=t178*t3829 + t26*(t1067 + t1068 + t3962 + t3965 + t3973 + t1049*t52)*t8 + t200*(t1063 + t1049*t23*t8 - 1.*t1035*t24*t8);
  p_output1[124]=t32*t4007 + t4001*t52 + t200*(t1107 + t1111 + t38*t662 + t32*t747) + t178*(t1130 + t1139 - 1.*t52*t747 - 1.*t662*t79);
  p_output1[125]=-1.*t26*t30*t4001*t8 - 1.*t20*t26*t4007*t8 + t200*(t1165 + t1169 + t4027 + t4028 - 1.*t23*t32*t787 + t20*t23*t662*t8) + t178*(t1183 + t1195 + t4041 + t4042 + t23*t52*t787 - 1.*t23*t30*t662*t8);
  p_output1[126]=t263*t4001 + t200*t4007 + t200*(t1205 + t3839 + t3840 + t4056 + t726 + t32*t891) + t178*(t1212 + t1213 + t4063 + t4064 - 1.*t662*t88 - 1.*t52*t891);
  p_output1[127]=t178*t4001 + t207*t4007 + t178*(t1247 + t1248 + t4130 + t4134 + t4140 - 1.*t1049*t52) + t200*(t1237 + t1238 + t1049*t32 + t4109 + t4110 + t63*t662);
  p_output1[128]=t32*t4201 - 1.*t23*t4234*t8 + t26*(t1358 + t1368 - 1.*t38*t662 - 1.*t32*t747)*t8 + t178*(t1349 - 1.*t23*t747*t8);
  p_output1[129]=-1.*t24*t26*t4234 - 1.*t20*t26*t4201*t8 + t26*t8*(t1420 + t1433 + t4274 + t4276 + t23*t32*t787 - 1.*t20*t23*t662*t8) + t178*(t1406 + t1412 + t4259 + t4260 + t23*t24*t662 + t3877*t787*t8);
  p_output1[130]=t200*t4201 + t26*t8*(t1087 + t1466 + t4003 + t4004 + t4313 - 1.*t32*t891) + t178*(t1456 + t24*t8*t864 - 1.*t23*t8*t891);
  p_output1[131]=t207*t4201 + t26*(t1498 + t1500 - 1.*t1049*t32 + t4402 + t4410 - 1.*t63*t662)*t8 + t178*(t1492 - 1.*t1049*t23*t8 + t1035*t24*t8);
  p_output1[132]=t130*t4462 + (t157*t1607 + t130*t1735 + t1756 + t1760)*t26*t95 - 1.*t23*t4501*t95 + t315*(t1737 + t1735*t23*t95);
  p_output1[133]=-1.*t110*t26*t4501 - 1.*t108*t26*t4462*t95 + t26*t95*(t1848 + t1849 - 1.*t130*t1799*t23 + t4540 + t4547 + t108*t1607*t23*t95) + t315*(t1804 + t1823 - 1.*t110*t1607*t23 + t4526 + t4527 - 1.*t1799*t3877*t95);
  p_output1[134]=t411*t4462 + t26*(t1607*t166 + t130*t1905 + t1957 + t1966 + t4637 + t4644)*t95 + t315*(t1896 - 1.*t110*t1871*t95 + t1905*t23*t95);
  p_output1[135]=t285*t4462 + t26*(t130*t2059 + t2105 + t2107 + t4822 + t4882 + t4885)*t95 + t315*(t2041 - 1.*t110*t2027*t95 + t2059*t23*t95);
  p_output1[136]=(-1.*t157*t1607 - 1.*t130*t1735 + t2274 + t2275)*t285 + (t118*t1607 + t112*t1735 + t2249 + t2250)*t315 + t130*t4915 + t112*t4937;
  p_output1[137]=-1.*t108*t26*t4915*t95 - 1.*t103*t26*t4937*t95 + t315*(t2295 - 1.*t112*t1799*t23 + t2304 + t4960 + t4966 + t103*t1607*t23*t95) + t285*(t130*t1799*t23 + t2489 + t2505 + t4983 + t4990 - 1.*t108*t1607*t23*t95);
  p_output1[138]=t411*t4915 + t315*t4937 + t315*(t1714 + t112*t1905 + t2611 + t4495 + t4500 + t5022) + t285*(-1.*t1607*t166 - 1.*t130*t1905 + t2650 + t2675 + t5037 + t5041);
  p_output1[139]=t285*t4915 + t329*t4937 + t315*(t141*t1607 + t112*t2059 + t2840 + t2856 + t5087 + t5093) + t285*(-1.*t130*t2059 + t2942 + t2950 + t5174 + t5175 + t5179);
  p_output1[140]=t112*t5205 + t26*(-1.*t118*t1607 - 1.*t112*t1735 + t3404 + t3407)*t95 - 1.*t23*t5293*t95 + t285*(t3236 - 1.*t1735*t23*t95);
  p_output1[141]=-1.*t110*t26*t5293 - 1.*t103*t26*t5205*t95 + t26*t95*(t112*t1799*t23 + t3632 + t3635 + t5390 + t5394 - 1.*t103*t1607*t23*t95) + t285*(t110*t1607*t23 + t3574 + t3606 + t5327 + t5341 + t1799*t3877*t95);
  p_output1[142]=t315*t5205 + t26*(-1.*t112*t1905 + t2237 + t3681 + t4925 + t4935 + t5447)*t95 + t285*(t3667 + t110*t1871*t95 - 1.*t1905*t23*t95);
  p_output1[143]=t329*t5205 + t26*(-1.*t141*t1607 - 1.*t112*t2059 + t3715 + t3717 + t5609 + t5660)*t95 + t285*(t3701 + t110*t2027*t95 - 1.*t2059*t23*t95);
  p_output1[144]=-1.*t24*t30*t5705 + (t3839 + t5751 + t5752)*t8 + t24*(t3892 + t3894 - 1.*t24*t30*t787 - 1.*t30*t639*t8) + t30*t8*(t3879 + t3882 + t24*t639 - 1.*t787*t8);
  p_output1[145]=t48*t5705*t8 + t24*(t3927 + t3939 - 1.*t24*t48*t639 + t57*t652 + t30*t5812*t864 + t48*t884);
  p_output1[146]=t24*(t3962 + t3965 + t1046*t48 + t1035*t30*t5812 + t5866 + t5870) + t20*t5705*t8;
  p_output1[147]=-1.*t20*t24*t7423 - 1.*t24*t30*t7538 + t30*t8*(t4027 + t4028 - 1.*t20*t24*t787 - 1.*t20*t639*t8) + t20*t8*(t4041 + t4042 + t24*t30*t787 + t30*t639*t8);
  p_output1[148]=t30*t7423*t8 + t48*t7538*t8 + t30*t8*(t3839 + t4056 + t5751 + t5752 + t7674 + t20*t5812*t864) + t20*t8*(t4063 + t4064 + t24*t48*t639 + t7562 + t7585 - 1.*t30*t5812*t864);
  p_output1[149]=t57*t7423*t8 + t20*t7538*t8 + t20*t8*(t4130 + t4134 - 1.*t1035*t30*t5812 + t8166 + t8273 + t8299) + t30*t8*(t4109 + t4110 + t1035*t20*t5812 - 1.*t24*t57*t639 + t8387 + t8392);
  p_output1[150]=t24*(t4274 + t4276 + t20*t24*t787 + t20*t639*t8) + t20*t8*(t4259 + t4260 - 1.*t24*t639 + t787*t8) + t8*(t4130 + t8166 + t8299) - 1.*t20*t24*t8418;
  p_output1[151]=t30*t8*t8418 + t24*(t4003 + t4313 + t6641 + t7259 - 1.*t20*t5812*t864 - 1.*t30*t884);
  p_output1[152]=t24*(-1.*t1046*t30 + t4402 + t4410 - 1.*t1035*t20*t5812 + t24*t57*t639 - 1.*t20*t652) + t57*t8*t8418;
  p_output1[153]=-1.*t108*t110*t8774 + (t4495 + t8782 + t8785)*t95 + t110*(-1.*t108*t110*t1799 + t4540 + t4547 - 1.*t108*t1596*t95) + t108*t95*(t110*t1596 + t4526 + t4527 - 1.*t1799*t95);
  p_output1[154]=t110*(t136*t1576 - 1.*t110*t126*t1596 + t126*t1881 + t4637 + t4644 + t108*t1871*t8810) + t126*t8774*t95;
  p_output1[155]=t110*(t126*t2033 + t4822 + t4882 + t108*t2027*t8810 + t8830 + t8845) + t103*t8774*t95;
  p_output1[156]=-1.*t103*t110*t8885 - 1.*t108*t110*t8913 + t108*t95*(-1.*t103*t110*t1799 + t4960 + t4966 - 1.*t103*t1596*t95) + t103*t95*(t108*t110*t1799 + t4983 + t4990 + t108*t1596*t95);
  p_output1[157]=t108*t8885*t95 + t126*t8913*t95 + t103*t95*(t110*t126*t1596 + t5037 + t5041 - 1.*t108*t1871*t8810 + t9531 + t9533) + t108*t95*(t4495 + t5022 + t8782 + t8785 + t103*t1871*t8810 + t9556);
  p_output1[158]=t136*t8885*t95 + t103*t8913*t95 + t103*t95*(t5174 + t5175 - 1.*t108*t2027*t8810 + t9610 + t9611 + t9614) + t108*t95*(-1.*t110*t136*t1596 + t5087 + t5093 + t103*t2027*t8810 + t9627 + t9633);
  p_output1[159]=t110*(t103*t110*t1799 + t5390 + t5394 + t103*t1596*t95) + t103*t95*(-1.*t110*t1596 + t5327 + t5341 + t1799*t95) + t95*(t5174 + t9610 + t9614) - 1.*t103*t110*t9641;
  p_output1[160]=t110*(-1.*t108*t1881 + t4925 + t5447 - 1.*t103*t1871*t8810 + t8882 + t8884) + t108*t95*t9641;
  p_output1[161]=t110*(-1.*t103*t1576 + t110*t136*t1596 - 1.*t108*t2033 + t5609 + t5660 - 1.*t103*t2027*t8810) + t136*t95*t9641;
  p_output1[162]=-0.1575*t30 - 0.2255*t57;
  p_output1[163]=-0.2255*t30 - 0.1575*t57;
  p_output1[164]=t48*(t5751 + t30*t637 + t7674 + t20*t864) + t30*(-1.*t48*t637 + t7562 + t7585 - 1.*t30*t864) + t57*t9803 + t48*t9830;
  p_output1[165]=t30*(-1.*t1035*t30 - 1.*t20*t637 + t8273 + t8299) + t48*(t1035*t20 + t57*t637 + t8387 + t8392) + t30*t9803 + t20*t9830;
  p_output1[166]=0.068*t48;
  p_output1[167]=0.068*t20;
  p_output1[168]=0.325*t14 - 1.*t1029*t14 - 1.*t14*t635;
  p_output1[169]=0.325*t18 - 1.*t1029*t18 - 1.*t18*t635;
  p_output1[170]=0.1575*t108 + 0.2255*t136;
  p_output1[171]=0.2255*t108 + 0.1575*t136;
  p_output1[172]=t10113*t126 + t10071*t136 + t108*(-1.*t126*t1556 - 1.*t108*t1871 + t9531 + t9533) + t126*(t108*t1556 + t103*t1871 + t8782 + t9556);
  p_output1[173]=t10113*t103 + t10071*t108 + t108*(-1.*t103*t1556 - 1.*t108*t2027 + t9611 + t9614) + t126*(t136*t1556 + t103*t2027 + t9627 + t9633);
  p_output1[174]=-0.068*t126;
  p_output1[175]=-0.068*t103;
  p_output1[176]=-0.325*t96 - 1.*t1547*t96 - 1.*t2019*t96;
  p_output1[177]=-0.325*t100 - 1.*t100*t1547 - 1.*t100*t2019;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
