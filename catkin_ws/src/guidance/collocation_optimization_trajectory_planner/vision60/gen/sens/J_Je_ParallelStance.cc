/*
 * Automatically Generated from Mathematica.
 * Wed 6 Apr 2022 13:26:05 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t35;
  double t19;
  double t23;
  double t36;
  double t24;
  double t41;
  double t42;
  double t17;
  double t52;
  double t65;
  double t57;
  double t58;
  double t59;
  double t75;
  double t45;
  double t14;
  double t129;
  double t130;
  double t154;
  double t102;
  double t103;
  double t106;
  double t108;
  double t114;
  double t118;
  double t64;
  double t76;
  double t79;
  double t575;
  double t571;
  double t573;
  double t577;
  double t574;
  double t580;
  double t582;
  double t594;
  double t587;
  double t589;
  double t590;
  double t570;
  double t674;
  double t675;
  double t677;
  double t650;
  double t653;
  double t654;
  double t659;
  double t669;
  double t670;
  double t592;
  double t595;
  double t596;
  double t43;
  double t80;
  double t82;
  double t993;
  double t1020;
  double t84;
  double t85;
  double t87;
  double t427;
  double t429;
  double t438;
  double t208;
  double t222;
  double t230;
  double t271;
  double t286;
  double t293;
  double t1147;
  double t1149;
  double t1151;
  double t440;
  double t457;
  double t532;
  double t547;
  double t548;
  double t556;
  double t995;
  double t997;
  double t998;
  double t584;
  double t610;
  double t612;
  double t613;
  double t617;
  double t627;
  double t905;
  double t908;
  double t909;
  double t680;
  double t682;
  double t684;
  double t796;
  double t809;
  double t832;
  double t1721;
  double t1722;
  double t1729;
  double t911;
  double t930;
  double t945;
  double t964;
  double t966;
  double t967;
  double t1571;
  double t1577;
  double t1585;
  double t1561;
  double t1562;
  double t1570;
  double t1053;
  double t1066;
  double t1067;
  double t1140;
  double t1141;
  double t1143;
  double t1164;
  double t1165;
  double t1166;
  double t1214;
  double t1224;
  double t1241;
  double t1278;
  double t1279;
  double t1281;
  double t1341;
  double t1357;
  double t1360;
  double t1157;
  double t1159;
  double t1163;
  double t1394;
  double t1407;
  double t1418;
  double t1478;
  double t1485;
  double t1492;
  double t1499;
  double t1501;
  double t1534;
  double t1546;
  double t1549;
  double t1553;
  double t3135;
  double t3140;
  double t3141;
  double t1617;
  double t1618;
  double t1619;
  double t1680;
  double t1684;
  double t1687;
  double t1738;
  double t1744;
  double t1745;
  double t1770;
  double t1772;
  double t1787;
  double t1967;
  double t1972;
  double t1998;
  double t2052;
  double t2379;
  double t2383;
  double t1732;
  double t1736;
  double t1737;
  double t2451;
  double t2452;
  double t2455;
  double t2892;
  double t2906;
  double t2916;
  double t2968;
  double t2974;
  double t3033;
  double t3066;
  double t3075;
  double t3111;
  double t101;
  double t122;
  double t124;
  double t3755;
  double t3759;
  double t3766;
  double t3770;
  double t3771;
  double t3775;
  double t3786;
  double t3789;
  double t3798;
  double t3754;
  double t3768;
  double t3802;
  double t3803;
  double t3744;
  double t3805;
  double t3816;
  double t3823;
  double t3826;
  double t3829;
  double t3830;
  double t3836;
  double t3844;
  double t3848;
  double t3849;
  double t3852;
  double t3856;
  double t3861;
  double t3865;
  double t3868;
  double t3873;
  double t3875;
  double t3924;
  double t3926;
  double t3939;
  double t3900;
  double t3919;
  double t3920;
  double t3886;
  double t3890;
  double t3894;
  double t3821;
  double t3876;
  double t3878;
  double t3989;
  double t3999;
  double t4000;
  double t4119;
  double t4133;
  double t4139;
  double t4001;
  double t4002;
  double t4013;
  double t4019;
  double t4061;
  double t4070;
  double t4089;
  double t4092;
  double t535;
  double t540;
  double t541;
  double t4317;
  double t4327;
  double t4328;
  double t4339;
  double t4340;
  double t373;
  double t380;
  double t386;
  double t4342;
  double t4343;
  double t4358;
  double t4400;
  double t4402;
  double t4423;
  double t542;
  double t557;
  double t561;
  double t4499;
  double t4500;
  double t4508;
  double t4509;
  double t4517;
  double t4518;
  double t4542;
  double t4576;
  double t4578;
  double t4507;
  double t4525;
  double t4529;
  double t4532;
  double t4579;
  double t4583;
  double t4586;
  double t4587;
  double t4589;
  double t564;
  double t565;
  double t568;
  double t4649;
  double t4653;
  double t4654;
  double t4643;
  double t4656;
  double t4663;
  double t4667;
  double t4675;
  double t4688;
  double t4692;
  double t4697;
  double t4665;
  double t4679;
  double t4680;
  double t4686;
  double t4700;
  double t4706;
  double t4711;
  double t4714;
  double t4744;
  double t4866;
  double t4871;
  double t4880;
  double t4934;
  double t4963;
  double t4964;
  double t4967;
  double t4968;
  double t90;
  double t95;
  double t96;
  double t180;
  double t243;
  double t261;
  double t5747;
  double t5784;
  double t5791;
  double t5855;
  double t5856;
  double t5869;
  double t5872;
  double t5957;
  double t4316;
  double t649;
  double t672;
  double t673;
  double t6518;
  double t6524;
  double t6527;
  double t6531;
  double t6533;
  double t6534;
  double t6535;
  double t6543;
  double t6544;
  double t6515;
  double t6528;
  double t6545;
  double t6556;
  double t6514;
  double t6557;
  double t6561;
  double t6570;
  double t6572;
  double t6578;
  double t6579;
  double t6581;
  double t6583;
  double t6585;
  double t6588;
  double t6598;
  double t6600;
  double t6601;
  double t6607;
  double t6608;
  double t6609;
  double t6613;
  double t6637;
  double t6638;
  double t6649;
  double t6631;
  double t6633;
  double t6635;
  double t6620;
  double t6623;
  double t6626;
  double t6569;
  double t6614;
  double t6615;
  double t6663;
  double t6669;
  double t6674;
  double t6749;
  double t6754;
  double t6762;
  double t6676;
  double t6679;
  double t6681;
  double t6682;
  double t6711;
  double t6712;
  double t6716;
  double t6722;
  double t955;
  double t957;
  double t962;
  double t6913;
  double t6915;
  double t6917;
  double t6950;
  double t6986;
  double t871;
  double t889;
  double t893;
  double t6988;
  double t6989;
  double t6990;
  double t7005;
  double t7009;
  double t7019;
  double t963;
  double t968;
  double t978;
  double t7108;
  double t7110;
  double t7140;
  double t7141;
  double t7142;
  double t7144;
  double t7203;
  double t7206;
  double t7211;
  double t7139;
  double t7151;
  double t7153;
  double t7180;
  double t7216;
  double t7219;
  double t7228;
  double t7231;
  double t7236;
  double t983;
  double t988;
  double t991;
  double t7269;
  double t7270;
  double t7272;
  double t7266;
  double t7278;
  double t7281;
  double t7285;
  double t7287;
  double t7294;
  double t7295;
  double t7297;
  double t7283;
  double t7289;
  double t7290;
  double t7293;
  double t7298;
  double t7301;
  double t7305;
  double t7311;
  double t7321;
  double t7329;
  double t7330;
  double t7332;
  double t7417;
  double t7443;
  double t7444;
  double t7449;
  double t7456;
  double t637;
  double t640;
  double t647;
  double t678;
  double t686;
  double t717;
  double t7821;
  double t7822;
  double t7829;
  double t7860;
  double t7865;
  double t7866;
  double t7868;
  double t7888;
  double t4143;
  double t4223;
  double t4281;
  double t8119;
  double t8120;
  double t8125;
  double t4330;
  double t4382;
  double t4449;
  double t4452;
  double t8132;
  double t8137;
  double t8138;
  double t4531;
  double t4603;
  double t4604;
  double t4683;
  double t8224;
  double t4865;
  double t4977;
  double t4982;
  double t8263;
  double t8267;
  double t5001;
  double t5003;
  double t5023;
  double t5026;
  double t8289;
  double t5138;
  double t5147;
  double t8300;
  double t8301;
  double t8306;
  double t5349;
  double t5369;
  double t5370;
  double t5417;
  double t5445;
  double t5745;
  double t6085;
  double t6161;
  double t6177;
  double t8483;
  double t8490;
  double t8517;
  double t8523;
  double t8525;
  double t6220;
  double t8167;
  double t6225;
  double t6261;
  double t6281;
  double t8547;
  double t6385;
  double t6423;
  double t6457;
  double t6471;
  double t6472;
  double t6772;
  double t6832;
  double t6834;
  double t8672;
  double t8675;
  double t8679;
  double t6946;
  double t7003;
  double t7048;
  double t7052;
  double t8692;
  double t8694;
  double t8706;
  double t7176;
  double t7248;
  double t7249;
  double t7292;
  double t8769;
  double t7328;
  double t7480;
  double t7483;
  double t8822;
  double t8872;
  double t7614;
  double t7617;
  double t7639;
  double t7640;
  double t8943;
  double t7678;
  double t7679;
  double t9016;
  double t9017;
  double t9034;
  double t7741;
  double t7757;
  double t7758;
  double t7798;
  double t7799;
  double t7817;
  double t7903;
  double t7912;
  double t7913;
  double t9184;
  double t9187;
  double t9204;
  double t9207;
  double t9235;
  double t7940;
  double t7942;
  double t7961;
  double t7971;
  double t9675;
  double t8016;
  double t8030;
  double t8063;
  double t8084;
  double t8085;
  double t8162;
  double t8166;
  double t8176;
  double t8177;
  double t10129;
  double t10132;
  double t8222;
  double t8225;
  double t8265;
  double t10593;
  double t8333;
  double t8337;
  double t8354;
  double t8356;
  double t10719;
  double t10737;
  double t10820;
  double t10835;
  double t10837;
  double t11064;
  double t8394;
  double t8401;
  double t8373;
  double t10216;
  double t10234;
  double t8486;
  double t8428;
  double t8452;
  double t8552;
  double t8553;
  double t8559;
  double t8562;
  double t11455;
  double t11496;
  double t11632;
  double t11641;
  double t8588;
  double t8617;
  double t8623;
  double t8729;
  double t8730;
  double t8739;
  double t8740;
  double t11796;
  double t11805;
  double t8768;
  double t8770;
  double t8851;
  double t12021;
  double t9073;
  double t9074;
  double t9085;
  double t9088;
  double t12054;
  double t12058;
  double t12116;
  double t12118;
  double t12121;
  double t12145;
  double t9153;
  double t9154;
  double t9145;
  double t11968;
  double t11969;
  double t9185;
  double t9168;
  double t9171;
  double t9700;
  double t9711;
  double t9761;
  double t9766;
  double t12313;
  double t12318;
  double t12397;
  double t12413;
  double t10024;
  double t10058;
  double t10068;
  double t11273;
  double t11275;
  double t11416;
  double t12532;
  double t12536;
  double t12547;
  double t12548;
  double t11493;
  double t11610;
  double t11625;
  double t12255;
  double t12256;
  double t12281;
  double t12723;
  double t12724;
  double t12750;
  double t12758;
  double t12315;
  double t12336;
  double t12360;
  t35 = Cos(var1[13]);
  t19 = Cos(var1[14]);
  t23 = Sin(var1[13]);
  t36 = Sin(var1[14]);
  t24 = t19*t23;
  t41 = -1.*t35*t36;
  t42 = t24 + t41;
  t17 = Cos(var1[4]);
  t52 = Cos(var1[5]);
  t65 = Sin(var1[12]);
  t57 = t35*t19;
  t58 = t23*t36;
  t59 = t57 + t58;
  t75 = Sin(var1[5]);
  t45 = Sin(var1[4]);
  t14 = Cos(var1[12]);
  t129 = -1.*t35*t19;
  t130 = -1.*t23*t36;
  t154 = t129 + t130;
  t102 = -1.*t19*t23;
  t103 = t35*t36;
  t106 = t102 + t103;
  t108 = t52*t106;
  t114 = t65*t59*t75;
  t118 = t108 + t114;
  t64 = t52*t59;
  t76 = t65*t42*t75;
  t79 = t64 + t76;
  t575 = Cos(var1[16]);
  t571 = Cos(var1[17]);
  t573 = Sin(var1[16]);
  t577 = Sin(var1[17]);
  t574 = t571*t573;
  t580 = -1.*t575*t577;
  t582 = t574 + t580;
  t594 = Sin(var1[15]);
  t587 = t575*t571;
  t589 = t573*t577;
  t590 = t587 + t589;
  t570 = Cos(var1[15]);
  t674 = -1.*t575*t571;
  t675 = -1.*t573*t577;
  t677 = t674 + t675;
  t650 = -1.*t571*t573;
  t653 = t575*t577;
  t654 = t650 + t653;
  t659 = t52*t654;
  t669 = t594*t590*t75;
  t670 = t659 + t669;
  t592 = t52*t590;
  t595 = t594*t582*t75;
  t596 = t592 + t595;
  t43 = t14*t17*t42;
  t80 = -1.*t45*t79;
  t82 = t43 + t80;
  t993 = Sin(var1[3]);
  t1020 = Cos(var1[3]);
  t84 = t52*t65*t42;
  t85 = -1.*t59*t75;
  t87 = t84 + t85;
  t427 = t14*t17*t59;
  t429 = -1.*t45*t118;
  t438 = t427 + t429;
  t208 = t52*t42;
  t222 = t65*t154*t75;
  t230 = t208 + t222;
  t271 = t17*t65;
  t286 = t14*t45*t75;
  t293 = t271 + t286;
  t1147 = -1.*t52*t65*t59;
  t1149 = t106*t75;
  t1151 = t1147 + t1149;
  t440 = t52*t65*t59;
  t457 = -1.*t106*t75;
  t532 = t440 + t457;
  t547 = t52*t154;
  t548 = t65*t106*t75;
  t556 = t547 + t548;
  t995 = -1.*t52*t65*t42;
  t997 = t59*t75;
  t998 = t995 + t997;
  t584 = t570*t17*t582;
  t610 = -1.*t45*t596;
  t612 = t584 + t610;
  t613 = t52*t594*t582;
  t617 = -1.*t590*t75;
  t627 = t613 + t617;
  t905 = t570*t17*t590;
  t908 = -1.*t45*t670;
  t909 = t905 + t908;
  t680 = t52*t582;
  t682 = t594*t677*t75;
  t684 = t680 + t682;
  t796 = t17*t594;
  t809 = t570*t45*t75;
  t832 = t796 + t809;
  t1721 = -1.*t52*t594*t590;
  t1722 = t654*t75;
  t1729 = t1721 + t1722;
  t911 = t52*t594*t590;
  t930 = -1.*t654*t75;
  t945 = t911 + t930;
  t964 = t52*t677;
  t966 = t594*t654*t75;
  t967 = t964 + t966;
  t1571 = -1.*t52*t594*t582;
  t1577 = t590*t75;
  t1585 = t1571 + t1577;
  t1561 = t1020*t998;
  t1562 = -1.*t993*t82;
  t1570 = t1561 + t1562;
  t1053 = -1.*t14*t42*t45;
  t1066 = -1.*t17*t79;
  t1067 = t1053 + t1066;
  t1140 = -1.*t17*t65*t42;
  t1141 = -1.*t14*t42*t45*t75;
  t1143 = t1140 + t1141;
  t1164 = -1.*t52*t65*t154;
  t1165 = t42*t75;
  t1166 = t1164 + t1165;
  t1214 = t14*t17*t154;
  t1224 = -1.*t45*t230;
  t1241 = t1214 + t1224;
  t1278 = -1.*t65*t45;
  t1279 = t14*t17*t75;
  t1281 = t1278 + t1279;
  t1341 = t14*t17;
  t1357 = -1.*t65*t45*t75;
  t1360 = t1341 + t1357;
  t1157 = t1020*t1151;
  t1159 = -1.*t993*t438;
  t1163 = t1157 + t1159;
  t1394 = -1.*t14*t59*t45;
  t1407 = -1.*t17*t118;
  t1418 = t1394 + t1407;
  t1478 = -1.*t17*t65*t59;
  t1485 = -1.*t14*t59*t45*t75;
  t1492 = t1478 + t1485;
  t1499 = -1.*t52*t65*t106;
  t1501 = t154*t75;
  t1534 = t1499 + t1501;
  t1546 = t14*t17*t106;
  t1549 = -1.*t45*t556;
  t1553 = t1546 + t1549;
  t3135 = t1020*t1585;
  t3140 = -1.*t993*t612;
  t3141 = t3135 + t3140;
  t1617 = -1.*t570*t582*t45;
  t1618 = -1.*t17*t596;
  t1619 = t1617 + t1618;
  t1680 = -1.*t17*t594*t582;
  t1684 = -1.*t570*t582*t45*t75;
  t1687 = t1680 + t1684;
  t1738 = -1.*t52*t594*t677;
  t1744 = t582*t75;
  t1745 = t1738 + t1744;
  t1770 = t570*t17*t677;
  t1772 = -1.*t45*t684;
  t1787 = t1770 + t1772;
  t1967 = -1.*t594*t45;
  t1972 = t570*t17*t75;
  t1998 = t1967 + t1972;
  t2052 = t570*t17;
  t2379 = -1.*t594*t45*t75;
  t2383 = t2052 + t2379;
  t1732 = t1020*t1729;
  t1736 = -1.*t993*t909;
  t1737 = t1732 + t1736;
  t2451 = -1.*t570*t590*t45;
  t2452 = -1.*t17*t670;
  t2455 = t2451 + t2452;
  t2892 = -1.*t17*t594*t590;
  t2906 = -1.*t570*t590*t45*t75;
  t2916 = t2892 + t2906;
  t2968 = -1.*t52*t594*t654;
  t2974 = t677*t75;
  t3033 = t2968 + t2974;
  t3066 = t570*t17*t654;
  t3075 = -1.*t45*t967;
  t3111 = t3066 + t3075;
  t101 = t14*t59*t45;
  t122 = t17*t118;
  t124 = t101 + t122;
  t3755 = -0.0641*t19;
  t3759 = -0.28*t36;
  t3766 = t3755 + t3759;
  t3770 = -1.*t19;
  t3771 = 1. + t3770;
  t3775 = 0.075*t3771;
  t3786 = 0.355*t19;
  t3789 = -0.0641*t36;
  t3798 = t3775 + t3786 + t3789;
  t3754 = -0.325*t23;
  t3768 = t35*t3766;
  t3802 = t23*t3798;
  t3803 = t3754 + t3768 + t3802;
  t3744 = -0.068*t65;
  t3805 = t14*t3803;
  t3816 = t3744 + t3805;
  t3823 = -1.*t35;
  t3826 = 1. + t3823;
  t3829 = 0.325*t3826;
  t3830 = -1.*t23*t3766;
  t3836 = t35*t3798;
  t3844 = t3829 + t3830 + t3836;
  t3848 = t52*t3844;
  t3849 = -1.*t14;
  t3852 = 1. + t3849;
  t3856 = -0.1575*t3852;
  t3861 = -0.2255*t14;
  t3865 = -1.*t65*t3803;
  t3868 = t3856 + t3861 + t3865;
  t3873 = -1.*t3868*t75;
  t3875 = t3848 + t3873;
  t3924 = t17*t3816;
  t3926 = -1.*t45*t3875;
  t3939 = t3924 + t3926;
  t3900 = t65*t45;
  t3919 = -1.*t14*t17*t75;
  t3920 = t3900 + t3919;
  t3886 = t3816*t45;
  t3890 = t17*t3875;
  t3894 = t3886 + t3890;
  t3821 = -1.*t3816*t45;
  t3876 = -1.*t17*t3875;
  t3878 = t3821 + t3876;
  t3989 = t52*t3868;
  t3999 = t3844*t75;
  t4000 = t3989 + t3999;
  t4119 = -1.*t52*t3868;
  t4133 = -1.*t3844*t75;
  t4139 = t4119 + t4133;
  t4001 = -1.*t14*t52*t4000;
  t4002 = -1.*t3920*t3894;
  t4013 = -1.*t293*t3939;
  t4019 = t4001 + t4002 + t4013;
  t4061 = t4000*t1151;
  t4070 = t3894*t124;
  t4089 = t3939*t438;
  t4092 = t4061 + t4070 + t4089;
  t535 = -1.*t65*t59*t45;
  t540 = t14*t17*t59*t75;
  t541 = t535 + t540;
  t4317 = 0.068*t65;
  t4327 = -1.*t14*t3803;
  t4328 = t4317 + t4327;
  t4339 = -0.068*t14;
  t4340 = t4339 + t3865;
  t373 = t14*t45;
  t380 = t17*t65*t75;
  t386 = t373 + t380;
  t4342 = t4340*t45;
  t4343 = -1.*t17*t4328*t75;
  t4358 = t4342 + t4343;
  t4400 = t17*t4340;
  t4402 = t4328*t45*t75;
  t4423 = t4400 + t4402;
  t542 = t14*t106*t45;
  t557 = t17*t556;
  t561 = t542 + t557;
  t4499 = -0.325*t35;
  t4500 = t4499 + t3830 + t3836;
  t4508 = 0.325*t23;
  t4509 = -1.*t35*t3766;
  t4517 = -1.*t23*t3798;
  t4518 = t4508 + t4509 + t4517;
  t4542 = t52*t4518;
  t4576 = t65*t4500*t75;
  t4578 = t4542 + t4576;
  t4507 = -1.*t52*t65*t4500;
  t4525 = t4518*t75;
  t4529 = t4507 + t4525;
  t4532 = t14*t4500*t45;
  t4579 = t17*t4578;
  t4583 = t4532 + t4579;
  t4586 = t14*t17*t4500;
  t4587 = -1.*t45*t4578;
  t4589 = t4586 + t4587;
  t564 = t14*t42*t45;
  t565 = t17*t79;
  t568 = t564 + t565;
  t4649 = -0.28*t19;
  t4653 = 0.0641*t36;
  t4654 = t4649 + t4653;
  t4643 = t23*t3766;
  t4656 = t35*t4654;
  t4663 = t4643 + t4656;
  t4667 = -1.*t23*t4654;
  t4675 = t3768 + t4667;
  t4688 = t52*t4675;
  t4692 = t65*t4663*t75;
  t4697 = t4688 + t4692;
  t4665 = -1.*t52*t65*t4663;
  t4679 = t4675*t75;
  t4680 = t4665 + t4679;
  t4686 = t14*t4663*t45;
  t4700 = t17*t4697;
  t4706 = t4686 + t4700;
  t4711 = t14*t17*t4663;
  t4714 = -1.*t45*t4697;
  t4744 = t4711 + t4714;
  t4866 = t4000*t998;
  t4871 = t3894*t568;
  t4880 = t3939*t82;
  t4934 = t4866 + t4871 + t4880;
  t4963 = -1.*t4000*t1151;
  t4964 = -1.*t3894*t124;
  t4967 = -1.*t3939*t438;
  t4968 = t4963 + t4964 + t4967;
  t90 = -1.*t65*t42*t45;
  t95 = t14*t17*t42*t75;
  t96 = t90 + t95;
  t180 = t14*t154*t45;
  t243 = t17*t230;
  t261 = t180 + t243;
  t5747 = -1.*t4000*t998;
  t5784 = -1.*t3894*t568;
  t5791 = -1.*t3939*t82;
  t5855 = t14*t52*t4000;
  t5856 = t3920*t3894;
  t5869 = t293*t3939;
  t5872 = t5855 + t5856 + t5869;
  t5957 = t5747 + t5784 + t5791;
  t4316 = Power(t52,2);
  t649 = t570*t590*t45;
  t672 = t17*t670;
  t673 = t649 + t672;
  t6518 = -0.0641*t571;
  t6524 = -0.28*t577;
  t6527 = t6518 + t6524;
  t6531 = -1.*t571;
  t6533 = 1. + t6531;
  t6534 = -0.575*t6533;
  t6535 = -0.295*t571;
  t6543 = -0.0641*t577;
  t6544 = t6534 + t6535 + t6543;
  t6515 = 0.325*t573;
  t6528 = t575*t6527;
  t6545 = t573*t6544;
  t6556 = t6515 + t6528 + t6545;
  t6514 = -0.068*t594;
  t6557 = t570*t6556;
  t6561 = t6514 + t6557;
  t6570 = -1.*t575;
  t6572 = 1. + t6570;
  t6578 = -0.325*t6572;
  t6579 = -1.*t573*t6527;
  t6581 = t575*t6544;
  t6583 = t6578 + t6579 + t6581;
  t6585 = t52*t6583;
  t6588 = -1.*t570;
  t6598 = 1. + t6588;
  t6600 = -0.1575*t6598;
  t6601 = -0.2255*t570;
  t6607 = -1.*t594*t6556;
  t6608 = t6600 + t6601 + t6607;
  t6609 = -1.*t6608*t75;
  t6613 = t6585 + t6609;
  t6637 = t17*t6561;
  t6638 = -1.*t45*t6613;
  t6649 = t6637 + t6638;
  t6631 = t594*t45;
  t6633 = -1.*t570*t17*t75;
  t6635 = t6631 + t6633;
  t6620 = t6561*t45;
  t6623 = t17*t6613;
  t6626 = t6620 + t6623;
  t6569 = -1.*t6561*t45;
  t6614 = -1.*t17*t6613;
  t6615 = t6569 + t6614;
  t6663 = t52*t6608;
  t6669 = t6583*t75;
  t6674 = t6663 + t6669;
  t6749 = -1.*t52*t6608;
  t6754 = -1.*t6583*t75;
  t6762 = t6749 + t6754;
  t6676 = -1.*t570*t52*t6674;
  t6679 = -1.*t6635*t6626;
  t6681 = -1.*t832*t6649;
  t6682 = t6676 + t6679 + t6681;
  t6711 = t6674*t1729;
  t6712 = t6626*t673;
  t6716 = t6649*t909;
  t6722 = t6711 + t6712 + t6716;
  t955 = -1.*t594*t590*t45;
  t957 = t570*t17*t590*t75;
  t962 = t955 + t957;
  t6913 = 0.068*t594;
  t6915 = -1.*t570*t6556;
  t6917 = t6913 + t6915;
  t6950 = -0.068*t570;
  t6986 = t6950 + t6607;
  t871 = t570*t45;
  t889 = t17*t594*t75;
  t893 = t871 + t889;
  t6988 = t6986*t45;
  t6989 = -1.*t17*t6917*t75;
  t6990 = t6988 + t6989;
  t7005 = t17*t6986;
  t7009 = t6917*t45*t75;
  t7019 = t7005 + t7009;
  t963 = t570*t654*t45;
  t968 = t17*t967;
  t978 = t963 + t968;
  t7108 = 0.325*t575;
  t7110 = t7108 + t6579 + t6581;
  t7140 = -0.325*t573;
  t7141 = -1.*t575*t6527;
  t7142 = -1.*t573*t6544;
  t7144 = t7140 + t7141 + t7142;
  t7203 = t52*t7144;
  t7206 = t594*t7110*t75;
  t7211 = t7203 + t7206;
  t7139 = -1.*t52*t594*t7110;
  t7151 = t7144*t75;
  t7153 = t7139 + t7151;
  t7180 = t570*t7110*t45;
  t7216 = t17*t7211;
  t7219 = t7180 + t7216;
  t7228 = t570*t17*t7110;
  t7231 = -1.*t45*t7211;
  t7236 = t7228 + t7231;
  t983 = t570*t582*t45;
  t988 = t17*t596;
  t991 = t983 + t988;
  t7269 = -0.28*t571;
  t7270 = 0.0641*t577;
  t7272 = t7269 + t7270;
  t7266 = t573*t6527;
  t7278 = t575*t7272;
  t7281 = t7266 + t7278;
  t7285 = -1.*t573*t7272;
  t7287 = t6528 + t7285;
  t7294 = t52*t7287;
  t7295 = t594*t7281*t75;
  t7297 = t7294 + t7295;
  t7283 = -1.*t52*t594*t7281;
  t7289 = t7287*t75;
  t7290 = t7283 + t7289;
  t7293 = t570*t7281*t45;
  t7298 = t17*t7297;
  t7301 = t7293 + t7298;
  t7305 = t570*t17*t7281;
  t7311 = -1.*t45*t7297;
  t7321 = t7305 + t7311;
  t7329 = t6674*t1585;
  t7330 = t6626*t991;
  t7332 = t6649*t612;
  t7417 = t7329 + t7330 + t7332;
  t7443 = -1.*t6674*t1729;
  t7444 = -1.*t6626*t673;
  t7449 = -1.*t6649*t909;
  t7456 = t7443 + t7444 + t7449;
  t637 = -1.*t594*t582*t45;
  t640 = t570*t17*t582*t75;
  t647 = t637 + t640;
  t678 = t570*t677*t45;
  t686 = t17*t684;
  t717 = t678 + t686;
  t7821 = -1.*t6674*t1585;
  t7822 = -1.*t6626*t991;
  t7829 = -1.*t6649*t612;
  t7860 = t570*t52*t6674;
  t7865 = t6635*t6626;
  t7866 = t832*t6649;
  t7868 = t7860 + t7865 + t7866;
  t7888 = t7821 + t7822 + t7829;
  t4143 = t14*t75*t4000;
  t4223 = t3875*t1151;
  t4281 = t4000*t118;
  t8119 = -1.*t65*t3816;
  t8120 = t14*t75*t3875;
  t8125 = t8119 + t8120 + t4001;
  t4330 = -1.*t14*t4316*t4328;
  t4382 = t52*t65*t4000;
  t4449 = -1.*t14*t52*t59*t4000;
  t4452 = t52*t4328*t1151;
  t8132 = t14*t3816*t59;
  t8137 = t3875*t118;
  t8138 = t8132 + t4061 + t8137;
  t4531 = -1.*t14*t52*t4529;
  t4603 = t4529*t1151;
  t4604 = t4000*t1534;
  t4683 = -1.*t14*t52*t4680;
  t8224 = Power(t14,2);
  t4865 = t4680*t1151;
  t4977 = t4000*t79;
  t4982 = t3875*t998;
  t8263 = t14*t3816*t42;
  t8267 = t3875*t79;
  t5001 = -1.*t3875*t1151;
  t5003 = -1.*t4000*t118;
  t5023 = -1.*t14*t52*t42*t4000;
  t5026 = t52*t4328*t998;
  t8289 = t8263 + t8267 + t4866;
  t5138 = t14*t52*t59*t4000;
  t5147 = -1.*t52*t4328*t1151;
  t8300 = -1.*t14*t3816*t59;
  t8301 = -1.*t3875*t118;
  t8306 = t8300 + t4963 + t8301;
  t5349 = t4529*t998;
  t5369 = -1.*t4529*t1151;
  t5370 = -1.*t4000*t1534;
  t5417 = t4000*t1166;
  t5445 = t4680*t998;
  t5745 = -1.*t4680*t1151;
  t6085 = -1.*t14*t75*t4000;
  t6161 = -1.*t4000*t79;
  t6177 = -1.*t3875*t998;
  t8483 = -1.*t14*t3816*t42;
  t8490 = -1.*t3875*t79;
  t8517 = t65*t3816;
  t8523 = -1.*t14*t75*t3875;
  t8525 = t8517 + t8523 + t5855;
  t6220 = t14*t4316*t4328;
  t8167 = Power(t75,2);
  t6225 = -1.*t52*t65*t4000;
  t6261 = t14*t52*t42*t4000;
  t6281 = -1.*t52*t4328*t998;
  t8547 = t8483 + t8490 + t5747;
  t6385 = t14*t52*t4529;
  t6423 = -1.*t4529*t998;
  t6457 = t14*t52*t4680;
  t6471 = -1.*t4000*t1166;
  t6472 = -1.*t4680*t998;
  t6772 = t570*t75*t6674;
  t6832 = t6613*t1729;
  t6834 = t6674*t670;
  t8672 = -1.*t594*t6561;
  t8675 = t570*t75*t6613;
  t8679 = t8672 + t8675 + t6676;
  t6946 = -1.*t570*t4316*t6917;
  t7003 = t52*t594*t6674;
  t7048 = -1.*t570*t52*t590*t6674;
  t7052 = t52*t6917*t1729;
  t8692 = t570*t6561*t590;
  t8694 = t6613*t670;
  t8706 = t8692 + t6711 + t8694;
  t7176 = -1.*t570*t52*t7153;
  t7248 = t7153*t1729;
  t7249 = t6674*t3033;
  t7292 = -1.*t570*t52*t7290;
  t8769 = Power(t570,2);
  t7328 = t7290*t1729;
  t7480 = t6674*t596;
  t7483 = t6613*t1585;
  t8822 = t570*t6561*t582;
  t8872 = t6613*t596;
  t7614 = -1.*t6613*t1729;
  t7617 = -1.*t6674*t670;
  t7639 = -1.*t570*t52*t582*t6674;
  t7640 = t52*t6917*t1585;
  t8943 = t8822 + t8872 + t7329;
  t7678 = t570*t52*t590*t6674;
  t7679 = -1.*t52*t6917*t1729;
  t9016 = -1.*t570*t6561*t590;
  t9017 = -1.*t6613*t670;
  t9034 = t9016 + t7443 + t9017;
  t7741 = t7153*t1585;
  t7757 = -1.*t7153*t1729;
  t7758 = -1.*t6674*t3033;
  t7798 = t6674*t1745;
  t7799 = t7290*t1585;
  t7817 = -1.*t7290*t1729;
  t7903 = -1.*t570*t75*t6674;
  t7912 = -1.*t6674*t596;
  t7913 = -1.*t6613*t1585;
  t9184 = -1.*t570*t6561*t582;
  t9187 = -1.*t6613*t596;
  t9204 = t594*t6561;
  t9207 = -1.*t570*t75*t6613;
  t9235 = t9204 + t9207 + t7860;
  t7940 = t570*t4316*t6917;
  t7942 = -1.*t52*t594*t6674;
  t7961 = t570*t52*t582*t6674;
  t7971 = -1.*t52*t6917*t1585;
  t9675 = t9184 + t9187 + t7821;
  t8016 = t570*t52*t7153;
  t8030 = -1.*t7153*t1585;
  t8063 = t570*t52*t7290;
  t8084 = -1.*t6674*t1745;
  t8085 = -1.*t7290*t1585;
  t8162 = -1.*t14*t3816;
  t8166 = -1.*t65*t4340;
  t8176 = -1.*t65*t3816*t59;
  t8177 = t14*t4340*t59;
  t10129 = -1.*t14*t3868;
  t10132 = t8119 + t10129;
  t8222 = t14*t3816*t106;
  t8225 = t8224*t4500*t59;
  t8265 = t8224*t4663*t59;
  t10593 = Power(t65,2);
  t8333 = -1.*t65*t3816*t42;
  t8337 = t14*t4340*t42;
  t8354 = t65*t3816*t59;
  t8356 = -1.*t14*t4340*t59;
  t10719 = -1.*t65*t3868*t42;
  t10737 = t3844*t59;
  t10820 = -1.*t3844*t106;
  t10835 = t65*t3868*t59;
  t10837 = t10820 + t8300 + t10835;
  t11064 = t8263 + t10719 + t10737;
  t8394 = -1.*t14*t3816*t106;
  t8401 = -1.*t8224*t4500*t59;
  t8373 = t8224*t4500*t42;
  t10216 = t3844*t106;
  t10234 = -1.*t65*t3868*t59;
  t8486 = -1.*t8224*t4663*t59;
  t8428 = t8224*t4663*t42;
  t8452 = t14*t3816*t154;
  t8552 = t14*t3816;
  t8553 = t65*t4340;
  t8559 = t65*t3816*t42;
  t8562 = -1.*t14*t4340*t42;
  t11455 = t65*t3868*t42;
  t11496 = -1.*t3844*t59;
  t11632 = t14*t3868;
  t11641 = t8517 + t11632;
  t8588 = -1.*t8224*t4500*t42;
  t8617 = -1.*t8224*t4663*t42;
  t8623 = -1.*t14*t3816*t154;
  t8729 = -1.*t570*t6561;
  t8730 = -1.*t594*t6986;
  t8739 = -1.*t594*t6561*t590;
  t8740 = t570*t6986*t590;
  t11796 = -1.*t570*t6608;
  t11805 = t8672 + t11796;
  t8768 = t570*t6561*t654;
  t8770 = t8769*t7110*t590;
  t8851 = t8769*t7281*t590;
  t12021 = Power(t594,2);
  t9073 = -1.*t594*t6561*t582;
  t9074 = t570*t6986*t582;
  t9085 = t594*t6561*t590;
  t9088 = -1.*t570*t6986*t590;
  t12054 = -1.*t594*t6608*t582;
  t12058 = t6583*t590;
  t12116 = -1.*t6583*t654;
  t12118 = t594*t6608*t590;
  t12121 = t12116 + t9016 + t12118;
  t12145 = t8822 + t12054 + t12058;
  t9153 = -1.*t570*t6561*t654;
  t9154 = -1.*t8769*t7110*t590;
  t9145 = t8769*t7110*t582;
  t11968 = t6583*t654;
  t11969 = -1.*t594*t6608*t590;
  t9185 = -1.*t8769*t7281*t590;
  t9168 = t8769*t7281*t582;
  t9171 = t570*t6561*t677;
  t9700 = t570*t6561;
  t9711 = t594*t6986;
  t9761 = t594*t6561*t582;
  t9766 = -1.*t570*t6986*t582;
  t12313 = t594*t6608*t582;
  t12318 = -1.*t6583*t590;
  t12397 = t570*t6608;
  t12413 = t9204 + t12397;
  t10024 = -1.*t8769*t7110*t582;
  t10058 = -1.*t8769*t7281*t582;
  t10068 = -1.*t570*t6561*t677;
  t11273 = -1.*t4518*t106;
  t11275 = -1.*t3844*t154;
  t11416 = t4518*t59;
  t12532 = t3803*t42;
  t12536 = t12532 + t10737;
  t12547 = -1.*t3803*t59;
  t12548 = t10820 + t12547;
  t11493 = -1.*t4675*t106;
  t11610 = t3844*t42;
  t11625 = t4675*t59;
  t12255 = -1.*t7144*t654;
  t12256 = -1.*t6583*t677;
  t12281 = t7144*t590;
  t12723 = t6556*t582;
  t12724 = t12723 + t12058;
  t12750 = -1.*t6556*t590;
  t12758 = t12116 + t12750;
  t12315 = -1.*t7287*t654;
  t12336 = t6583*t582;
  t12360 = t7287*t590;
  p_output1[0]=t82;
  p_output1[1]=t17*t87;
  p_output1[2]=t96;
  p_output1[3]=t124;
  p_output1[4]=t261;
  p_output1[5]=t293;
  p_output1[6]=-1.*t14*t17*t52;
  p_output1[7]=t386;
  p_output1[8]=t438;
  p_output1[9]=t17*t532;
  p_output1[10]=t541;
  p_output1[11]=t561;
  p_output1[12]=t568;
  p_output1[13]=t612;
  p_output1[14]=t17*t627;
  p_output1[15]=t647;
  p_output1[16]=t673;
  p_output1[17]=t717;
  p_output1[18]=t832;
  p_output1[19]=-1.*t17*t52*t570;
  p_output1[20]=t893;
  p_output1[21]=t909;
  p_output1[22]=t17*t945;
  p_output1[23]=t962;
  p_output1[24]=t978;
  p_output1[25]=t991;
  p_output1[26]=-1.*t1020*t82 - 1.*t993*t998;
  p_output1[27]=-1.*t1067*t993;
  p_output1[28]=t1020*t79 + t45*t87*t993;
  p_output1[29]=-1.*t1020*t14*t42*t52 - 1.*t1143*t993;
  p_output1[30]=t1163;
  p_output1[31]=t1020*t1166 - 1.*t1241*t993;
  p_output1[32]=-1.*t1020*t293 - 1.*t14*t52*t993;
  p_output1[33]=-1.*t1281*t993;
  p_output1[34]=-1.*t1020*t14*t75 - 1.*t14*t45*t52*t993;
  p_output1[35]=-1.*t1020*t52*t65 - 1.*t1360*t993;
  p_output1[36]=-1.*t1020*t438 - 1.*t1151*t993;
  p_output1[37]=-1.*t1418*t993;
  p_output1[38]=t1020*t118 + t45*t532*t993;
  p_output1[39]=-1.*t1020*t14*t52*t59 - 1.*t1492*t993;
  p_output1[40]=t1020*t1534 - 1.*t1553*t993;
  p_output1[41]=t1570;
  p_output1[42]=-1.*t1020*t612 - 1.*t1585*t993;
  p_output1[43]=-1.*t1619*t993;
  p_output1[44]=t1020*t596 + t45*t627*t993;
  p_output1[45]=-1.*t1020*t52*t570*t582 - 1.*t1687*t993;
  p_output1[46]=t1737;
  p_output1[47]=t1020*t1745 - 1.*t1787*t993;
  p_output1[48]=-1.*t1020*t832 - 1.*t52*t570*t993;
  p_output1[49]=-1.*t1998*t993;
  p_output1[50]=-1.*t1020*t570*t75 - 1.*t45*t52*t570*t993;
  p_output1[51]=-1.*t1020*t52*t594 - 1.*t2383*t993;
  p_output1[52]=-1.*t1020*t909 - 1.*t1729*t993;
  p_output1[53]=-1.*t2455*t993;
  p_output1[54]=t1020*t670 + t45*t945*t993;
  p_output1[55]=-1.*t1020*t52*t570*t590 - 1.*t2916*t993;
  p_output1[56]=t1020*t3033 - 1.*t3111*t993;
  p_output1[57]=t3141;
  p_output1[58]=t1570;
  p_output1[59]=t1020*t1067;
  p_output1[60]=-1.*t1020*t45*t87 + t79*t993;
  p_output1[61]=t1020*t1143 - 1.*t14*t42*t52*t993;
  p_output1[62]=t1020*t438 + t1151*t993;
  p_output1[63]=t1020*t1241 + t1166*t993;
  p_output1[64]=t1020*t14*t52 - 1.*t293*t993;
  p_output1[65]=t1020*t1281;
  p_output1[66]=t1020*t14*t45*t52 - 1.*t14*t75*t993;
  p_output1[67]=t1020*t1360 - 1.*t52*t65*t993;
  p_output1[68]=t1163;
  p_output1[69]=t1020*t1418;
  p_output1[70]=-1.*t1020*t45*t532 + t118*t993;
  p_output1[71]=t1020*t1492 - 1.*t14*t52*t59*t993;
  p_output1[72]=t1020*t1553 + t1534*t993;
  p_output1[73]=t1020*t82 + t993*t998;
  p_output1[74]=t3141;
  p_output1[75]=t1020*t1619;
  p_output1[76]=-1.*t1020*t45*t627 + t596*t993;
  p_output1[77]=t1020*t1687 - 1.*t52*t570*t582*t993;
  p_output1[78]=t1020*t909 + t1729*t993;
  p_output1[79]=t1020*t1787 + t1745*t993;
  p_output1[80]=t1020*t52*t570 - 1.*t832*t993;
  p_output1[81]=t1020*t1998;
  p_output1[82]=t1020*t45*t52*t570 - 1.*t570*t75*t993;
  p_output1[83]=t1020*t2383 - 1.*t52*t594*t993;
  p_output1[84]=t1737;
  p_output1[85]=t1020*t2455;
  p_output1[86]=-1.*t1020*t45*t945 + t670*t993;
  p_output1[87]=t1020*t2916 - 1.*t52*t570*t590*t993;
  p_output1[88]=t1020*t3111 + t3033*t993;
  p_output1[89]=t1020*t612 + t1585*t993;
  p_output1[90]=t124*(-1.*t293*t3878 - 1.*t293*t3894 - 1.*t1281*t3939 - 1.*t3920*t3939) + t293*t4092 + t4019*t438 + t3920*(t124*t3939 + t1418*t3939 + t3878*t438 + t3894*t438);
  p_output1[91]=-1.*t14*t17*t4092*t52 + t124*(-1.*t17*t3920*t4139 + t4143 + t293*t4139*t45 - 1.*t14*t3875*t52 + t14*t17*t3894*t52 - 1.*t14*t3939*t45*t52) + t17*t4019*t532 + t3920*(t124*t17*t4139 + t4223 + t4281 - 1.*t4139*t438*t45 + t17*t3894*t532 - 1.*t3939*t45*t532);
  p_output1[92]=t386*t4092 + t124*(-1.*t386*t3894 - 1.*t1360*t3939 + t4330 - 1.*t3920*t4358 + t4382 - 1.*t293*t4423) + t4019*t541 + t3920*(t1492*t3939 + t124*t4358 + t438*t4423 + t4449 + t4452 + t3894*t541);
  p_output1[93]=t124*(t4531 - 1.*t3920*t4583 - 1.*t293*t4589) + t4019*t561 + t3920*(t1553*t3939 + t124*t4583 + t438*t4589 + t4603 + t4604 + t3894*t561);
  p_output1[94]=t124*(t4683 - 1.*t3920*t4706 - 1.*t293*t4744) + t3920*(t124*t4706 + t438*t4744 + t4865 + t4866 + t4871 + t4880) + t4019*t568;
  p_output1[95]=t438*t4934 + (-1.*t124*t3939 - 1.*t1418*t3939 - 1.*t3878*t438 - 1.*t3894*t438)*t568 + t4968*t82 + t124*(t1067*t3939 + t3939*t568 + t3878*t82 + t3894*t82);
  p_output1[96]=t17*t4934*t532 + (-1.*t124*t17*t4139 + t4139*t438*t45 + t5001 + t5003 - 1.*t17*t3894*t532 + t3939*t45*t532)*t568 + t17*t4968*t87 + t124*(t4977 + t4982 + t17*t4139*t568 - 1.*t4139*t45*t82 + t17*t3894*t87 - 1.*t3939*t45*t87);
  p_output1[97]=t4934*t541 + (-1.*t1492*t3939 - 1.*t124*t4358 - 1.*t438*t4423 + t5138 + t5147 - 1.*t3894*t541)*t568 + t4968*t96 + t124*(t1143*t3939 + t5023 + t5026 + t4358*t568 + t4423*t82 + t3894*t96);
  p_output1[98]=t124*t4968 + t4934*t561 + (-1.*t1553*t3939 - 1.*t124*t4583 - 1.*t438*t4589 + t5369 + t5370 - 1.*t3894*t561)*t568 + t124*(t4061 + t4070 + t4089 + t5349 + t4583*t568 + t4589*t82);
  p_output1[99]=t261*t4968 + t4934*t568 + t568*(-1.*t124*t4706 - 1.*t438*t4744 + t5745 + t5747 + t5784 + t5791) + t124*(t261*t3894 + t1241*t3939 + t5417 + t5445 + t4706*t568 + t4744*t82);
  p_output1[100]=(t293*t3878 + t293*t3894 + t1281*t3939 + t3920*t3939)*t568 + t293*t5957 + t5872*t82 + t3920*(-1.*t1067*t3939 - 1.*t3939*t568 - 1.*t3878*t82 - 1.*t3894*t82);
  p_output1[101]=-1.*t14*t17*t52*t5957 + t568*(t17*t3920*t4139 - 1.*t293*t4139*t45 + t14*t3875*t52 - 1.*t14*t17*t3894*t52 + t14*t3939*t45*t52 + t6085) + t17*t5872*t87 + t3920*(-1.*t17*t4139*t568 + t6161 + t6177 + t4139*t45*t82 - 1.*t17*t3894*t87 + t3939*t45*t87);
  p_output1[102]=t386*t5957 + t568*(t386*t3894 + t1360*t3939 + t3920*t4358 + t293*t4423 + t6220 + t6225) + t5872*t96 + t3920*(-1.*t1143*t3939 - 1.*t4358*t568 + t6261 + t6281 - 1.*t4423*t82 - 1.*t3894*t96);
  p_output1[103]=t124*t5872 + t568*(t3920*t4583 + t293*t4589 + t6385) + t3920*(t4963 + t4964 + t4967 - 1.*t4583*t568 + t6423 - 1.*t4589*t82);
  p_output1[104]=t261*t5872 + t568*(t3920*t4706 + t293*t4744 + t6457) + t3920*(-1.*t261*t3894 - 1.*t1241*t3939 - 1.*t4706*t568 + t6471 + t6472 - 1.*t4744*t82);
  p_output1[105]=t6722*t832 + t673*(-1.*t1998*t6649 - 1.*t6635*t6649 - 1.*t6615*t832 - 1.*t6626*t832) + t6682*t909 + t6635*(t2455*t6649 + t6649*t673 + t6615*t909 + t6626*t909);
  p_output1[106]=-1.*t17*t52*t570*t6722 + t673*(-1.*t52*t570*t6613 + t17*t52*t570*t6626 - 1.*t45*t52*t570*t6649 - 1.*t17*t6635*t6762 + t6772 + t45*t6762*t832) + t17*t6682*t945 + t6635*(t17*t673*t6762 + t6832 + t6834 - 1.*t45*t6762*t909 + t17*t6626*t945 - 1.*t45*t6649*t945);
  p_output1[107]=t6722*t893 + t673*(-1.*t2383*t6649 + t6946 - 1.*t6635*t6990 + t7003 - 1.*t7019*t832 - 1.*t6626*t893) + t6682*t962 + t6635*(t2916*t6649 + t673*t6990 + t7048 + t7052 + t7019*t909 + t6626*t962);
  p_output1[108]=t673*(t7176 - 1.*t6635*t7219 - 1.*t7236*t832) + t6682*t978 + t6635*(t3111*t6649 + t673*t7219 + t7248 + t7249 + t7236*t909 + t6626*t978);
  p_output1[109]=t673*(t7292 - 1.*t6635*t7301 - 1.*t7321*t832) + t6635*(t673*t7301 + t7328 + t7329 + t7330 + t7332 + t7321*t909) + t6682*t991;
  p_output1[110]=t612*t7456 + t7417*t909 + (-1.*t2455*t6649 - 1.*t6649*t673 - 1.*t6615*t909 - 1.*t6626*t909)*t991 + t673*(t612*t6615 + t612*t6626 + t1619*t6649 + t6649*t991);
  p_output1[111]=t17*t627*t7456 + t17*t7417*t945 + (-1.*t17*t673*t6762 + t7614 + t7617 + t45*t6762*t909 - 1.*t17*t6626*t945 + t45*t6649*t945)*t991 + t673*(t17*t627*t6626 - 1.*t45*t627*t6649 - 1.*t45*t612*t6762 + t7480 + t7483 + t17*t6762*t991);
  p_output1[112]=t647*t7456 + t7417*t962 + (-1.*t2916*t6649 - 1.*t673*t6990 + t7678 + t7679 - 1.*t7019*t909 - 1.*t6626*t962)*t991 + t673*(t647*t6626 + t1687*t6649 + t612*t7019 + t7639 + t7640 + t6990*t991);
  p_output1[113]=t673*t7456 + t7417*t978 + (-1.*t3111*t6649 - 1.*t673*t7219 + t7757 + t7758 - 1.*t7236*t909 - 1.*t6626*t978)*t991 + t673*(t6711 + t6712 + t6716 + t612*t7236 + t7741 + t7219*t991);
  p_output1[114]=t717*t7456 + t7417*t991 + (-1.*t673*t7301 + t7817 + t7821 + t7822 + t7829 - 1.*t7321*t909)*t991 + t673*(t1787*t6649 + t6626*t717 + t612*t7321 + t7798 + t7799 + t7301*t991);
  p_output1[115]=t612*t7868 + t7888*t832 + (t1998*t6649 + t6635*t6649 + t6615*t832 + t6626*t832)*t991 + t6635*(-1.*t612*t6615 - 1.*t612*t6626 - 1.*t1619*t6649 - 1.*t6649*t991);
  p_output1[116]=t17*t627*t7868 - 1.*t17*t52*t570*t7888 + (t52*t570*t6613 - 1.*t17*t52*t570*t6626 + t45*t52*t570*t6649 + t17*t6635*t6762 + t7903 - 1.*t45*t6762*t832)*t991 + t6635*(-1.*t17*t627*t6626 + t45*t627*t6649 + t45*t612*t6762 + t7912 + t7913 - 1.*t17*t6762*t991);
  p_output1[117]=t647*t7868 + t7888*t893 + (t2383*t6649 + t6635*t6990 + t7940 + t7942 + t7019*t832 + t6626*t893)*t991 + t6635*(-1.*t647*t6626 - 1.*t1687*t6649 - 1.*t612*t7019 + t7961 + t7971 - 1.*t6990*t991);
  p_output1[118]=t673*t7868 + (t6635*t7219 + t8016 + t7236*t832)*t991 + t6635*(-1.*t612*t7236 + t7443 + t7444 + t7449 + t8030 - 1.*t7219*t991);
  p_output1[119]=t717*t7868 + (t6635*t7301 + t8063 + t7321*t832)*t991 + t6635*(-1.*t1787*t6649 - 1.*t6626*t717 - 1.*t612*t7321 + t8084 + t8085 - 1.*t7301*t991);
  p_output1[120]=t14*t52*(t118*t4139 + t4223 + t4281 + t3875*t532) + t1151*(t4143 + t14*t4139*t75) + t118*t8125 - 1.*t14*t75*t8138;
  p_output1[121]=-1.*t14*t52*t59*t8125 - 1.*t52*t65*t8138 + t1151*(t4330 + t4382 - 1.*t3875*t65*t75 + t8162 + t8166 - 1.*t14*t4328*t8167) + t14*t52*(t4449 + t4452 - 1.*t118*t4328*t75 + t14*t3875*t59*t75 + t8176 + t8177);
  p_output1[122]=t1151*(t4531 - 1.*t14*t4500*t65 + t14*t4578*t75) + t1534*t8125 + t14*t52*(t118*t4578 + t4603 + t4604 + t3875*t556 + t8222 + t8225);
  p_output1[123]=t1151*(t4683 - 1.*t14*t4663*t65 + t14*t4697*t75) + t14*t52*(t118*t4697 + t4865 + t4866 + t8263 + t8265 + t8267) + t8125*t998;
  p_output1[124]=t118*t8289 + t79*t8306 + t1151*(t4977 + t4982 + t4139*t79 + t3875*t87) + (-1.*t118*t4139 + t5001 + t5003 - 1.*t3875*t532)*t998;
  p_output1[125]=-1.*t14*t52*t59*t8289 - 1.*t14*t42*t52*t8306 + t1151*(t5023 + t5026 + t14*t3875*t42*t75 - 1.*t4328*t75*t79 + t8333 + t8337) + (t5138 + t5147 + t118*t4328*t75 - 1.*t14*t3875*t59*t75 + t8354 + t8356)*t998;
  p_output1[126]=t1534*t8289 + t1151*t8306 + t1151*(t4061 + t5349 + t4578*t79 + t8132 + t8137 + t8373) + (-1.*t118*t4578 + t5369 + t5370 - 1.*t3875*t556 + t8394 + t8401)*t998;
  p_output1[127]=t1166*t8306 + t1151*(t230*t3875 + t5417 + t5445 + t4697*t79 + t8428 + t8452) + t8289*t998 + (-1.*t118*t4697 + t5745 + t5747 + t8483 + t8486 + t8490)*t998;
  p_output1[128]=t79*t8525 - 1.*t14*t75*t8547 + t14*t52*(t6161 + t6177 - 1.*t4139*t79 - 1.*t3875*t87) + (t6085 - 1.*t14*t4139*t75)*t998;
  p_output1[129]=-1.*t14*t42*t52*t8525 - 1.*t52*t65*t8547 + t14*t52*(t6261 + t6281 - 1.*t14*t3875*t42*t75 + t4328*t75*t79 + t8559 + t8562) + (t6220 + t6225 + t3875*t65*t75 + t14*t4328*t8167 + t8552 + t8553)*t998;
  p_output1[130]=t1151*t8525 + t14*t52*(t4963 + t6423 - 1.*t4578*t79 + t8300 + t8301 + t8588) + (t6385 + t14*t4500*t65 - 1.*t14*t4578*t75)*t998;
  p_output1[131]=t1166*t8525 + t14*t52*(-1.*t230*t3875 + t6471 + t6472 - 1.*t4697*t79 + t8617 + t8623) + (t6457 + t14*t4663*t65 - 1.*t14*t4697*t75)*t998;
  p_output1[132]=t1729*(t6772 + t570*t6762*t75) + t670*t8679 - 1.*t570*t75*t8706 + t52*t570*(t670*t6762 + t6832 + t6834 + t6613*t945);
  p_output1[133]=-1.*t52*t570*t590*t8679 - 1.*t52*t594*t8706 + t1729*(t6946 + t7003 - 1.*t594*t6613*t75 - 1.*t570*t6917*t8167 + t8729 + t8730) + t52*t570*(t7048 + t7052 + t570*t590*t6613*t75 - 1.*t670*t6917*t75 + t8739 + t8740);
  p_output1[134]=t1729*(-1.*t570*t594*t7110 + t7176 + t570*t7211*t75) + t3033*t8679 + t52*t570*(t670*t7211 + t7248 + t7249 + t8768 + t8770 + t6613*t967);
  p_output1[135]=t1729*(-1.*t570*t594*t7281 + t7292 + t570*t7297*t75) + t1585*t8679 + t52*t570*(t670*t7297 + t7328 + t7329 + t8822 + t8851 + t8872);
  p_output1[136]=t1729*(t627*t6613 + t596*t6762 + t7480 + t7483) + t670*t8943 + t596*t9034 + t1585*(-1.*t670*t6762 + t7614 + t7617 - 1.*t6613*t945);
  p_output1[137]=-1.*t52*t570*t590*t8943 - 1.*t52*t570*t582*t9034 + t1729*(t570*t582*t6613*t75 - 1.*t596*t6917*t75 + t7639 + t7640 + t9073 + t9074) + t1585*(-1.*t570*t590*t6613*t75 + t670*t6917*t75 + t7678 + t7679 + t9085 + t9088);
  p_output1[138]=t3033*t8943 + t1729*t9034 + t1729*(t6711 + t596*t7211 + t7741 + t8692 + t8694 + t9145) + t1585*(-1.*t670*t7211 + t7757 + t7758 + t9153 + t9154 - 1.*t6613*t967);
  p_output1[139]=t1585*t8943 + t1745*t9034 + t1729*(t6613*t684 + t596*t7297 + t7798 + t7799 + t9168 + t9171) + t1585*(-1.*t670*t7297 + t7817 + t7821 + t9184 + t9185 + t9187);
  p_output1[140]=t1585*(-1.*t570*t6762*t75 + t7903) + t52*t570*(-1.*t627*t6613 - 1.*t596*t6762 + t7912 + t7913) + t596*t9235 - 1.*t570*t75*t9675;
  p_output1[141]=-1.*t52*t570*t582*t9235 - 1.*t52*t594*t9675 + t1585*(t594*t6613*t75 + t7940 + t7942 + t570*t6917*t8167 + t9700 + t9711) + t52*t570*(-1.*t570*t582*t6613*t75 + t596*t6917*t75 + t7961 + t7971 + t9761 + t9766);
  p_output1[142]=t1585*(t570*t594*t7110 - 1.*t570*t7211*t75 + t8016) + t52*t570*(t10024 - 1.*t596*t7211 + t7443 + t8030 + t9016 + t9017) + t1729*t9235;
  p_output1[143]=t1585*(t570*t594*t7281 - 1.*t570*t7297*t75 + t8063) + t52*t570*(t10058 + t10068 - 1.*t6613*t684 - 1.*t596*t7297 + t8084 + t8085) + t1745*t9235;
  p_output1[144]=-1.*t10132*t59*t65 + t14*(t10216 + t10234 + t8132) + t14*t59*(-1.*t14*t4328 + t3868*t65 + t8162 + t8166) + t65*(-1.*t14*t3868*t59 - 1.*t4328*t59*t65 + t8176 + t8177);
  p_output1[145]=t10132*t106*t14 + t65*(t154*t3844 + t106*t4518 + t10593*t4500*t59 - 1.*t106*t3868*t65 + t8222 + t8225);
  p_output1[146]=t10132*t14*t42 + t65*(t10719 + t10737 + t106*t4675 + t10593*t4663*t59 + t8263 + t8265);
  p_output1[147]=-1.*t10837*t42*t65 - 1.*t11064*t59*t65 + t14*t59*(-1.*t14*t3868*t42 - 1.*t42*t4328*t65 + t8333 + t8337) + t14*t42*(t14*t3868*t59 + t4328*t59*t65 + t8354 + t8356);
  p_output1[148]=t106*t11064*t14 + t10837*t14*t59 + t14*t59*(t10216 + t10234 + t11416 + t10593*t42*t4500 + t8132 + t8373) + t14*t42*(t11273 + t11275 - 1.*t10593*t4500*t59 + t106*t3868*t65 + t8394 + t8401);
  p_output1[149]=t10837*t14*t154 + t11064*t14*t42 + t14*t59*(t11610 + t11625 + t10593*t42*t4663 - 1.*t154*t3868*t65 + t8428 + t8452) + t14*t42*(t11455 + t11493 + t11496 - 1.*t10593*t4663*t59 + t8483 + t8486);
  p_output1[150]=-1.*t11641*t42*t65 + t14*(t11455 + t11496 + t8483) + t14*t42*(t14*t4328 - 1.*t3868*t65 + t8552 + t8553) + t65*(t14*t3868*t42 + t42*t4328*t65 + t8559 + t8562);
  p_output1[151]=t11641*t14*t59 + t65*(t10820 + t10835 - 1.*t10593*t42*t4500 - 1.*t4518*t59 + t8300 + t8588);
  p_output1[152]=t11641*t14*t154 + t65*(-1.*t3844*t42 - 1.*t10593*t42*t4663 - 1.*t4675*t59 + t154*t3868*t65 + t8617 + t8623);
  p_output1[153]=-1.*t11805*t590*t594 + t570*(t11968 + t11969 + t8692) + t570*t590*(t594*t6608 - 1.*t570*t6917 + t8729 + t8730) + t594*(-1.*t570*t590*t6608 - 1.*t590*t594*t6917 + t8739 + t8740);
  p_output1[154]=t11805*t570*t654 + t594*(-1.*t594*t654*t6608 + t6583*t677 + t12021*t590*t7110 + t654*t7144 + t8768 + t8770);
  p_output1[155]=t11805*t570*t582 + t594*(t12054 + t12058 + t12021*t590*t7281 + t654*t7287 + t8822 + t8851);
  p_output1[156]=-1.*t12121*t582*t594 - 1.*t12145*t590*t594 + t570*t590*(-1.*t570*t582*t6608 - 1.*t582*t594*t6917 + t9073 + t9074) + t570*t582*(t570*t590*t6608 + t590*t594*t6917 + t9085 + t9088);
  p_output1[157]=t12121*t570*t590 + t12145*t570*t654 + t570*t590*(t11968 + t11969 + t12281 + t12021*t582*t7110 + t8692 + t9145) + t570*t582*(t12255 + t12256 + t594*t654*t6608 - 1.*t12021*t590*t7110 + t9153 + t9154);
  p_output1[158]=t12145*t570*t582 + t12121*t570*t677 + t570*t590*(t12336 + t12360 - 1.*t594*t6608*t677 + t12021*t582*t7281 + t9168 + t9171) + t570*t582*(t12313 + t12315 + t12318 - 1.*t12021*t590*t7281 + t9184 + t9185);
  p_output1[159]=-1.*t12413*t582*t594 + t570*(t12313 + t12318 + t9184) + t570*t582*(-1.*t594*t6608 + t570*t6917 + t9700 + t9711) + t594*(t570*t582*t6608 + t582*t594*t6917 + t9761 + t9766);
  p_output1[160]=t12413*t570*t590 + t594*(t10024 + t12116 + t12118 - 1.*t12021*t582*t7110 - 1.*t590*t7144 + t9016);
  p_output1[161]=t12413*t570*t677 + t594*(t10058 + t10068 - 1.*t582*t6583 + t594*t6608*t677 - 1.*t12021*t582*t7281 - 1.*t590*t7287);
  p_output1[162]=0.2255*t154 + 0.1575*t59;
  p_output1[163]=0.1575*t154 + 0.2255*t59;
  p_output1[164]=t106*t12548 + t12536*t154 + t106*(t10216 + t11416 + t42*t4500 + t3803*t59) + t59*(t11273 + t11275 - 1.*t106*t3803 - 1.*t4500*t59);
  p_output1[165]=t12548*t42 + t106*(t11610 + t11625 + t154*t3803 + t42*t4663) + t12536*t59 + t59*(t11493 + t11496 - 1.*t3803*t42 - 1.*t4663*t59);
  p_output1[166]=-0.068*t106;
  p_output1[167]=-0.068*t42;
  p_output1[168]=0.325*t19 - 1.*t19*t3798 - 1.*t19*t4654;
  p_output1[169]=0.325*t36 - 1.*t36*t3798 - 1.*t36*t4654;
  p_output1[170]=0.1575*t590 + 0.2255*t677;
  p_output1[171]=0.2255*t590 + 0.1575*t677;
  p_output1[172]=t12758*t654 + t12724*t677 + t654*(t11968 + t12281 + t590*t6556 + t582*t7110) + t590*(t12255 + t12256 - 1.*t654*t6556 - 1.*t590*t7110);
  p_output1[173]=t12758*t582 + t12724*t590 + t654*(t12336 + t12360 + t6556*t677 + t582*t7281) + t590*(t12315 + t12318 - 1.*t582*t6556 - 1.*t590*t7281);
  p_output1[174]=-0.068*t654;
  p_output1[175]=-0.068*t582;
  p_output1[176]=-0.325*t571 - 1.*t571*t6544 - 1.*t571*t7272;
  p_output1[177]=-0.325*t577 - 1.*t577*t6544 - 1.*t577*t7272;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 178, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
