/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:53 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t530;
  double t533;
  double t576;
  double t201;
  double t368;
  double t418;
  double t470;
  double t648;
  double t681;
  double t593;
  double t627;
  double t808;
  double t829;
  double t832;
  double t930;
  double t1001;
  double t1015;
  double t1056;
  double t1063;
  double t1066;
  double t1073;
  double t467;
  double t1174;
  double t1181;
  double t1188;
  double t1200;
  double t1214;
  double t1309;
  double t504;
  double t522;
  double t862;
  double t880;
  double t883;
  double t886;
  double t1125;
  double t1128;
  double t1156;
  double t1265;
  double t1266;
  double t137;
  double t1346;
  double t1349;
  double t1378;
  double t1384;
  double t1394;
  double t1395;
  double t1432;
  double t1448;
  double t1450;
  double t1453;
  double t1466;
  double t97;
  double t1567;
  double t1623;
  double t1701;
  double t1291;
  double t1479;
  double t1503;
  double t1730;
  double t1860;
  double t1524;
  double t1761;
  double t1771;
  double t41;
  double t1877;
  double t1878;
  double t1895;
  double t1909;
  double t1910;
  double t1917;
  double t1941;
  double t1955;
  double t1956;
  double t1981;
  double t1989;
  double t1999;
  double t2013;
  double t2030;
  double t2054;
  double t2068;
  double t2124;
  double t2263;
  double t2276;
  double t2281;
  double t2357;
  double t2498;
  double t2499;
  double t2602;
  double t2638;
  double t2649;
  double t2317;
  double t2607;
  double t2660;
  double t2691;
  double t2711;
  double t2736;
  double t2746;
  double t2754;
  double t2801;
  double t2811;
  double t2813;
  double t2704;
  double t2763;
  double t2767;
  double t2787;
  double t2821;
  double t2844;
  double t2930;
  double t2937;
  double t2959;
  double t2999;
  double t3036;
  double t3054;
  double t3063;
  double t3066;
  double t3104;
  double t3113;
  double t3265;
  double t3238;
  double t3269;
  double t3271;
  double t3275;
  double t3305;
  double t3308;
  double t3318;
  double t3319;
  double t3321;
  double t3332;
  double t3333;
  double t3338;
  double t3339;
  double t3342;
  double t3344;
  double t3353;
  double t3365;
  double t3402;
  double t3405;
  double t3317;
  double t3341;
  double t3409;
  double t3425;
  double t3444;
  double t3470;
  double t3481;
  double t3487;
  double t3536;
  double t3546;
  double t3553;
  double t3426;
  double t3520;
  double t3530;
  double t3533;
  double t3573;
  double t3580;
  double t3585;
  double t3587;
  double t3590;
  double t3592;
  double t3618;
  double t3619;
  double t3630;
  double t3631;
  double t3643;
  double t3645;
  double t3702;
  double t3704;
  double t3716;
  double t3788;
  double t3849;
  double t3854;
  double t3856;
  double t3857;
  double t3859;
  double t3877;
  double t3881;
  double t3890;
  double t3892;
  double t3908;
  double t3917;
  double t3919;
  double t3921;
  double t3923;
  double t3940;
  double t3946;
  double t3952;
  double t3959;
  double t3962;
  double t3963;
  double t3970;
  double t3984;
  double t3992;
  double t3997;
  double t4003;
  double t4006;
  double t4013;
  double t4015;
  double t4018;
  double t4048;
  double t4051;
  double t4059;
  double t4090;
  double t3832;
  double t3841;
  double t4071;
  double t4074;
  double t4077;
  double t4079;
  double t4087;
  double t4093;
  double t4112;
  double t4115;
  double t4118;
  double t4122;
  double t4123;
  double t4126;
  double t4127;
  double t4134;
  double t4142;
  double t4144;
  double t4145;
  double t4156;
  double t4159;
  double t4165;
  double t4189;
  double t4190;
  double t4192;
  double t3766;
  double t3776;
  double t3800;
  double t3825;
  double t3844;
  double t3846;
  double t3914;
  double t3988;
  double t4060;
  double t4063;
  double t4078;
  double t4128;
  double t4194;
  double t4196;
  double t4197;
  double t4203;
  double t4204;
  double t4206;
  double t4208;
  double t4209;
  double t4213;
  double t4237;
  double t4238;
  double t4239;
  double t4247;
  double t4249;
  double t4250;
  double t4224;
  double t4225;
  double t4226;
  double t3749;
  double t3753;
  double t3757;
  double t4067;
  double t4220;
  double t4221;
  double t4255;
  double t4257;
  double t4259;
  double t4233;
  double t4234;
  double t4236;
  double t4355;
  double t4357;
  double t4358;
  double t4274;
  double t4275;
  double t4278;
  double t4506;
  double t4507;
  double t4509;
  double t4260;
  double t4530;
  double t4531;
  double t4532;
  double t4293;
  double t4529;
  double t4536;
  double t4523;
  double t4524;
  double t4525;
  double t4561;
  double t4562;
  double t4566;
  double t4267;
  double t4268;
  double t4269;
  double t4560;
  double t4568;
  double t4294;
  double t4299;
  double t4300;
  double t4371;
  double t4416;
  double t4660;
  double t4664;
  double t4374;
  double t4380;
  double t4383;
  double t4669;
  double t4676;
  double t4417;
  double t4418;
  double t4419;
  double t4459;
  double t4491;
  double t4754;
  double t4757;
  double t4763;
  double t4766;
  double t4473;
  double t4475;
  double t4476;
  double t4492;
  double t4493;
  double t4494;
  double t4840;
  double t4841;
  double t4819;
  double t4820;
  double t4825;
  double t4826;
  double t4877;
  double t4880;
  double t4883;
  double t4884;
  double t4886;
  double t4893;
  double t4894;
  double t4852;
  double t4853;
  double t4854;
  double t4540;
  double t4545;
  double t4548;
  double t4831;
  double t4833;
  double t4834;
  double t4913;
  double t4914;
  double t4939;
  double t4941;
  double t4942;
  double t4916;
  double t4918;
  double t4921;
  double t4931;
  double t4932;
  double t4572;
  double t4573;
  double t4575;
  double t4925;
  double t4935;
  double t4926;
  double t4927;
  double t4966;
  double t4967;
  double t4964;
  double t4970;
  double t4643;
  double t4645;
  double t4646;
  double t4683;
  double t4684;
  double t4687;
  double t5071;
  double t5083;
  double t5092;
  double t5099;
  double t4746;
  double t4748;
  double t4749;
  double t4771;
  double t4773;
  double t4774;
  double t5280;
  double t5282;
  double t5290;
  double t5293;
  double t5337;
  double t5338;
  double t5341;
  double t5342;
  double t5371;
  double t5372;
  double t5347;
  double t5362;
  double t5407;
  double t5456;
  double t5477;
  double t5483;
  double t5496;
  double t5497;
  double t5503;
  double t5509;
  double t5511;
  double t5513;
  double t5514;
  double t5515;
  double t5518;
  double t5414;
  double t5415;
  double t5416;
  double t5421;
  double t5423;
  double t5426;
  double t5428;
  double t5431;
  double t5432;
  double t5538;
  double t5546;
  double t5548;
  double t5550;
  double t5454;
  double t5455;
  double t5465;
  double t5470;
  double t5475;
  double t5478;
  double t5482;
  double t5487;
  double t5491;
  double t5522;
  double t5525;
  double t5528;
  double t5532;
  double t5495;
  double t5534;
  double t5436;
  double t5439;
  double t5444;
  double t5445;
  double t5382;
  double t5386;
  double t5388;
  double t5394;
  double t5594;
  double t5612;
  double t5677;
  double t5680;
  double t5682;
  double t5668;
  double t5669;
  double t5674;
  double t5567;
  double t5577;
  double t5583;
  double t5585;
  double t5595;
  double t5602;
  double t5607;
  double t5610;
  double t5336;
  double t5340;
  double t5343;
  double t5344;
  double t5370;
  double t5375;
  double t5377;
  double t5378;
  double t5757;
  double t5760;
  double t5761;
  double t5749;
  double t5750;
  double t5755;
  double t5743;
  double t5744;
  double t5745;
  double t5746;
  double t5756;
  double t5763;
  double t5765;
  double t5780;
  double t5783;
  double t5787;
  double t5789;
  double t5790;
  double t5793;
  double t5728;
  double t5732;
  double t5733;
  double t5720;
  double t5721;
  double t5724;
  double t5655;
  double t5657;
  double t5661;
  double t5645;
  double t5646;
  double t5647;
  double t5835;
  double t5841;
  double t5850;
  double t5861;
  double t5864;
  double t5867;
  double t5855;
  double t5856;
  double t5858;
  double t5817;
  double t5819;
  double t5825;
  double t5883;
  double t5886;
  double t5887;
  double t5852;
  double t5859;
  double t5827;
  double t5829;
  double t5831;
  double t5911;
  double t5920;
  double t5921;
  double t5881;
  double t5882;
  double t5941;
  double t5942;
  double t5949;
  double t5960;
  double t5961;
  double t5969;
  double t5899;
  double t5903;
  double t5904;
  double t6033;
  double t6040;
  double t6058;
  double t6062;
  double t5926;
  double t5935;
  double t5937;
  double t6193;
  double t6212;
  double t5747;
  double t5769;
  double t5776;
  double t6238;
  double t6241;
  double t5992;
  double t5993;
  double t5995;
  double t6330;
  double t6338;
  double t6355;
  double t6362;
  double t6477;
  double t6478;
  double t6489;
  double t6490;
  double t6632;
  double t6613;
  double t6615;
  double t6617;
  double t6623;
  double t6626;
  double t6633;
  double t6634;
  double t6638;
  double t6639;
  double t6643;
  double t6647;
  double t6676;
  double t5554;
  double t5557;
  double t5558;
  double t6712;
  double t6717;
  double t6690;
  double t6694;
  double t6695;
  double t6677;
  double t6740;
  double t6744;
  double t6745;
  double t6749;
  double t6751;
  double t6752;
  double t6754;
  double t6755;
  double t6758;
  double t6765;
  double t6769;
  double t6771;
  double t6772;
  double t6778;
  double t6780;
  double t6785;
  double t6788;
  double t6789;
  double t6790;
  double t6791;
  double t6792;
  double t6795;
  double t6800;
  double t6804;
  double t6835;
  double t6841;
  double t6847;
  double t6848;
  double t6852;
  double t6856;
  double t6859;
  double t6679;
  double t6680;
  double t6684;
  double t6697;
  double t6705;
  double t6706;
  double t6715;
  double t6718;
  double t6722;
  double t6724;
  double t6689;
  double t6710;
  double t6732;
  double t6733;
  double t6756;
  double t6787;
  double t6807;
  double t6810;
  double t6814;
  double t6815;
  double t6816;
  double t6818;
  double t6822;
  double t6826;
  double t6831;
  double t6832;
  double t6894;
  double t6896;
  double t6898;
  double t6899;
  double t5624;
  double t5627;
  double t5629;
  double t6950;
  double t6951;
  double t6952;
  double t6953;
  double t6954;
  double t6955;
  double t6956;
  double t6961;
  double t6962;
  double t6964;
  double t6965;
  double t6968;
  double t6972;
  double t6973;
  double t6976;
  double t6979;
  double t6980;
  double t6987;
  double t6991;
  double t6995;
  double t6996;
  double t7000;
  double t5639;
  double t5640;
  double t5641;
  double t6834;
  double t6901;
  double t6846;
  double t6851;
  double t6860;
  double t6863;
  double t6876;
  double t6885;
  double t6889;
  double t6890;
  double t6928;
  double t6931;
  double t6914;
  double t6917;
  double t6919;
  double t6921;
  double t6904;
  double t6905;
  double t6908;
  double t6909;
  double t7044;
  double t7045;
  double t7049;
  double t7057;
  double t7058;
  double t7060;
  double t5702;
  double t5703;
  double t5706;
  double t6631;
  double t6636;
  double t6657;
  double t6659;
  double t6663;
  double t6664;
  double t6672;
  double t6674;
  double t7183;
  double t7189;
  double t7190;
  double t7172;
  double t7173;
  double t7176;
  double t7159;
  double t7160;
  double t7165;
  double t7170;
  double t7179;
  double t7194;
  double t7196;
  double t7210;
  double t7211;
  double t7213;
  double t7216;
  double t7218;
  double t7220;
  double t7126;
  double t7128;
  double t7130;
  double t7133;
  double t7134;
  double t7137;
  double t7087;
  double t7090;
  double t7091;
  double t7062;
  double t7066;
  double t7067;
  double t7231;
  double t7233;
  double t7235;
  double t7239;
  double t7245;
  double t7248;
  double t7252;
  double t7253;
  double t7256;
  double t7274;
  double t7276;
  double t7278;
  double t7286;
  double t7287;
  double t7288;
  double t7257;
  double t7279;
  double t7263;
  double t7264;
  double t7265;
  double t7296;
  double t7298;
  double t7309;
  double t7311;
  double t7312;
  double t7315;
  double t7318;
  double t7324;
  double t7327;
  double t7328;
  double t7329;
  double t7335;
  double t7338;
  double t7341;
  double t6048;
  double t6052;
  double t6053;
  double t6065;
  double t6066;
  double t6068;
  double t7429;
  double t7433;
  double t7434;
  double t7435;
  double t7440;
  double t7441;
  double t7443;
  double t7445;
  double t7449;
  double t7451;
  double t7454;
  double t7456;
  double t7457;
  double t7458;
  double t7461;
  double t7463;
  double t7464;
  double t7465;
  double t7467;
  double t7468;
  double t7469;
  double t7470;
  double t6086;
  double t6091;
  double t6094;
  double t7396;
  double t7401;
  double t7407;
  double t7412;
  double t6115;
  double t6116;
  double t6117;
  double t7344;
  double t7348;
  double t7351;
  double t7542;
  double t7544;
  double t7171;
  double t7197;
  double t7200;
  double t7552;
  double t7558;
  double t7362;
  double t7364;
  double t7366;
  double t6342;
  double t6343;
  double t6344;
  double t6366;
  double t6367;
  double t6370;
  double t7676;
  double t7677;
  double t7680;
  double t7682;
  double t7684;
  double t7685;
  double t7686;
  double t7687;
  double t7688;
  double t7689;
  double t7690;
  double t7696;
  double t7698;
  double t7699;
  double t7701;
  double t7703;
  double t7705;
  double t7706;
  double t7709;
  double t7710;
  double t7712;
  double t7715;
  double t6389;
  double t6405;
  double t6406;
  double t6414;
  double t6415;
  double t6417;
  double t7632;
  double t7636;
  double t7650;
  double t7655;
  double t7789;
  double t7791;
  double t7795;
  double t7797;
  t530 = Cos(var1[17]);
  t533 = -1.*t530;
  t576 = 1. + t533;
  t201 = Cos(var1[16]);
  t368 = -1.*t201;
  t418 = 1. + t368;
  t470 = Sin(var1[16]);
  t648 = Sin(var1[17]);
  t681 = 4.e-6*t648;
  t593 = 1.000000000016*t576;
  t627 = -7.e-6*t576;
  t808 = t627 + t681;
  t829 = -7.e-6*t808;
  t832 = -1. + t593 + t829;
  t930 = 2.8e-11*t576;
  t1001 = 4.e-6*t576;
  t1015 = 7.e-6*t648;
  t1056 = t1001 + t1015;
  t1063 = -7.e-6*t1056;
  t1066 = -1.*t648;
  t1073 = t930 + t1063 + t1066;
  t467 = -7.e-6*t418;
  t1174 = -6.5e-11*t576;
  t1181 = 1. + t1174;
  t1188 = -7.e-6*t1181;
  t1200 = 7.e-6*t576;
  t1214 = t1188 + t1200 + t681;
  t1309 = Sin(var1[15]);
  t504 = -4.e-6*t470;
  t522 = t467 + t504;
  t862 = t522*t832;
  t880 = 4.e-6*t418;
  t883 = -7.e-6*t470;
  t886 = t880 + t883;
  t1125 = t886*t1073;
  t1128 = -6.5e-11*t418;
  t1156 = 1. + t1128;
  t1265 = t1156*t1214;
  t1266 = t862 + t1125 + t1265;
  t137 = Cos(var1[15]);
  t1346 = -1.000000000016*t418;
  t1349 = 1. + t1346;
  t1378 = t1349*t832;
  t1384 = -2.8e-11*t418;
  t1394 = -1.*t470;
  t1395 = t1384 + t1394;
  t1432 = t1395*t1073;
  t1448 = 4.e-6*t470;
  t1450 = t467 + t1448;
  t1453 = t1450*t1214;
  t1466 = t1378 + t1432 + t1453;
  t97 = Cos(var1[5]);
  t1567 = -1.*t1309*t1266;
  t1623 = t137*t1466;
  t1701 = t1567 + t1623;
  t1291 = t137*t1266;
  t1479 = t1309*t1466;
  t1503 = t1291 + t1479;
  t1730 = Sin(var1[5]);
  t1860 = Cos(var1[3]);
  t1524 = t97*t1503;
  t1761 = t1701*t1730;
  t1771 = t1524 + t1761;
  t41 = Sin(var1[3]);
  t1877 = Cos(var1[4]);
  t1878 = t1384 + t470;
  t1895 = t1878*t832;
  t1909 = -1.000000000049*t418;
  t1910 = 1. + t1909;
  t1917 = t1910*t1073;
  t1941 = 7.e-6*t470;
  t1955 = t880 + t1941;
  t1956 = t1955*t1214;
  t1981 = t1895 + t1917 + t1956;
  t1989 = t1877*t1981;
  t1999 = Sin(var1[4]);
  t2013 = t97*t1701;
  t2030 = -1.*t1503*t1730;
  t2054 = t2013 + t2030;
  t2068 = -1.*t1999*t2054;
  t2124 = t1989 + t2068;
  t2263 = 1.000000000049*t576;
  t2276 = 4.e-6*t1056;
  t2281 = -1. + t2263 + t2276;
  t2357 = 4.e-6*t1181;
  t2498 = -1. + t530;
  t2499 = 4.e-6*t2498;
  t2602 = t2357 + t2499 + t1015;
  t2638 = 4.e-6*t808;
  t2649 = t930 + t2638 + t648;
  t2317 = t1395*t2281;
  t2607 = t1450*t2602;
  t2660 = t1349*t2649;
  t2691 = t2317 + t2607 + t2660;
  t2711 = t886*t2281;
  t2736 = t1156*t2602;
  t2746 = t522*t2649;
  t2754 = t2711 + t2736 + t2746;
  t2801 = t137*t2691;
  t2811 = -1.*t1309*t2754;
  t2813 = t2801 + t2811;
  t2704 = t1309*t2691;
  t2763 = t137*t2754;
  t2767 = t2704 + t2763;
  t2787 = t97*t2767;
  t2821 = t2813*t1730;
  t2844 = t2787 + t2821;
  t2930 = t1910*t2281;
  t2937 = t1955*t2602;
  t2959 = t1878*t2649;
  t2999 = t2930 + t2937 + t2959;
  t3036 = t1877*t2999;
  t3054 = t97*t2813;
  t3063 = -1.*t2767*t1730;
  t3066 = t3054 + t3063;
  t3104 = -1.*t1999*t3066;
  t3113 = t3036 + t3104;
  t3265 = -4.e-6*t648;
  t3238 = 6.5e-11*t576;
  t3269 = t627 + t3265;
  t3271 = 7.e-6*t3269;
  t3275 = t2499 + t1015;
  t3305 = 4.e-6*t3275;
  t3308 = -1. + t3238 + t3271 + t3305;
  t3318 = -1. + t2263;
  t3319 = 4.e-6*t3318;
  t3321 = -7.e-6*t648;
  t3332 = -2.8e-11*t576;
  t3333 = t3332 + t648;
  t3338 = 7.e-6*t3333;
  t3339 = t3319 + t2499 + t3321 + t3338;
  t3342 = -1.000000000016*t576;
  t3344 = 1. + t3342;
  t3353 = 7.e-6*t3344;
  t3365 = t930 + t648;
  t3402 = 4.e-6*t3365;
  t3405 = t3353 + t1200 + t3265 + t3402;
  t3317 = t1450*t3308;
  t3341 = t1395*t3339;
  t3409 = t1349*t3405;
  t3425 = t3317 + t3341 + t3409;
  t3444 = t1156*t3308;
  t3470 = t886*t3339;
  t3481 = t522*t3405;
  t3487 = t3444 + t3470 + t3481;
  t3536 = t137*t3425;
  t3546 = -1.*t1309*t3487;
  t3553 = t3536 + t3546;
  t3426 = t1309*t3425;
  t3520 = t137*t3487;
  t3530 = t3426 + t3520;
  t3533 = t97*t3530;
  t3573 = t3553*t1730;
  t3580 = t3533 + t3573;
  t3585 = t1955*t3308;
  t3587 = t1910*t3339;
  t3590 = t1878*t3405;
  t3592 = t3585 + t3587 + t3590;
  t3618 = t1877*t3592;
  t3619 = t97*t3553;
  t3630 = -1.*t3530*t1730;
  t3631 = t3619 + t3630;
  t3643 = -1.*t1999*t3631;
  t3645 = t3618 + t3643;
  t3702 = -1.*t1981*t1999;
  t3704 = -1.*t1877*t2054;
  t3716 = t3702 + t3704;
  t3788 = 2.8e-11*t418;
  t3849 = 2.826290000000002e-7*var1[17];
  t3854 = -0.148715*t1181;
  t3856 = -2.18904205e-16*t576;
  t3857 = t1001 + t3321;
  t3859 = -0.038576*t3857;
  t3877 = -0.80315*t3269;
  t3881 = t1200 + t681;
  t3890 = -0.5031510000080001*t3881;
  t3892 = -0.038575000014*t3275;
  t3908 = t3849 + t3854 + t3856 + t3859 + t3877 + t3890 + t3892;
  t3917 = 1.1305160000000008e-12*var1[17];
  t3919 = -1.000000000049*t576;
  t3921 = 1. + t3919;
  t3923 = -0.038576*t3921;
  t3940 = -0.03857500001589017*t576;
  t3946 = t930 + t1066;
  t3952 = -0.5031510000080001*t3946;
  t3959 = t2499 + t3321;
  t3962 = -3.367757e-6*t3959;
  t3963 = -0.148715*t1056;
  t3970 = -0.80315*t3333;
  t3984 = t3917 + t3923 + t3940 + t3952 + t3962 + t3963 + t3970;
  t3992 = -1.9784030000000015e-12*var1[17];
  t3997 = -0.80315*t3344;
  t4003 = -0.5031510000160505*t576;
  t4006 = t3332 + t1066;
  t4013 = -0.038576*t4006;
  t4015 = t1200 + t3265;
  t4018 = -3.367757e-6*t4015;
  t4048 = -0.148715*t808;
  t4051 = -0.038575000014*t3365;
  t4059 = t3992 + t3997 + t4003 + t4013 + t4018 + t4048 + t4051;
  t4090 = 7.e-6*t418;
  t3832 = -1. + t201;
  t3841 = 4.e-6*t3832;
  t4071 = -1.*t137;
  t4074 = 1. + t4071;
  t4077 = -0.15121*t4074;
  t4079 = -2.7726089999999997e-12*var1[16];
  t4087 = -0.2812110000084994*t418;
  t4093 = t4090 + t504;
  t4112 = -1.8134809999999998e-6*t4093;
  t4115 = t3788 + t470;
  t4118 = -0.038749000006999997*t4115;
  t4122 = t1450*t3908;
  t4123 = t1395*t3984;
  t4126 = t1349*t4059;
  t4127 = t4079 + t4087 + t4112 + t4118 + t4122 + t4123 + t4126;
  t4134 = 3.9608699999999997e-7*var1[16];
  t4142 = -1.1787626499999999e-16*t418;
  t4144 = t4090 + t1448;
  t4145 = -0.281211000004*t4144;
  t4156 = t3841 + t1941;
  t4159 = -0.038749000006999997*t4156;
  t4165 = t1156*t3908;
  t4189 = t886*t3984;
  t4190 = t522*t4059;
  t4192 = t4134 + t4142 + t4145 + t4159 + t4165 + t4189 + t4190;
  t3766 = 1.5843479999999999e-12*var1[16];
  t3776 = -0.03874900000889869*t418;
  t3800 = t3788 + t1394;
  t3825 = -0.281211000004*t3800;
  t3844 = t3841 + t883;
  t3846 = -1.8134809999999998e-6*t3844;
  t3914 = t1955*t3908;
  t3988 = t1910*t3984;
  t4060 = t1878*t4059;
  t4063 = t3766 + t3776 + t3825 + t3846 + t3914 + t3988 + t4060;
  t4078 = -0.15121*t1309;
  t4128 = t137*t4127;
  t4194 = -1.*t1309*t4192;
  t4196 = t4077 + t4078 + t4128 + t4194;
  t4197 = t97*t4196;
  t4203 = 0.15121*t1309;
  t4204 = t1309*t4127;
  t4206 = t137*t4192;
  t4208 = t4077 + t4203 + t4204 + t4206;
  t4209 = -1.*t4208*t1730;
  t4213 = t4197 + t4209;
  t4237 = t1877*t4063;
  t4238 = -1.*t1999*t4213;
  t4239 = t4237 + t4238;
  t4247 = t2999*t1999;
  t4249 = t1877*t3066;
  t4250 = t4247 + t4249;
  t4224 = t4063*t1999;
  t4225 = t1877*t4213;
  t4226 = t4224 + t4225;
  t3749 = t3592*t1999;
  t3753 = t1877*t3631;
  t3757 = t3749 + t3753;
  t4067 = -1.*t4063*t1999;
  t4220 = -1.*t1877*t4213;
  t4221 = t4067 + t4220;
  t4255 = t97*t4208;
  t4257 = t4196*t1730;
  t4259 = t4255 + t4257;
  t4233 = -1.*t2999*t1999;
  t4234 = -1.*t1877*t3066;
  t4236 = t4233 + t4234;
  t4355 = t1981*t1999;
  t4357 = t1877*t2054;
  t4358 = t4355 + t4357;
  t4274 = -1.*t3592*t1999;
  t4275 = -1.*t1877*t3631;
  t4278 = t4274 + t4275;
  t4506 = -1.*t97*t1503;
  t4507 = -1.*t1701*t1730;
  t4509 = t4506 + t4507;
  t4260 = -1.*t2844*t4259;
  t4530 = -1.*t97*t4208;
  t4531 = -1.*t4196*t1730;
  t4532 = t4530 + t4531;
  t4293 = t4259*t3580;
  t4529 = -1.*t2844*t4213;
  t4536 = -1.*t3066*t4259;
  t4523 = -1.*t97*t2767;
  t4524 = -1.*t2813*t1730;
  t4525 = t4523 + t4524;
  t4561 = -1.*t97*t3530;
  t4562 = -1.*t3553*t1730;
  t4566 = t4561 + t4562;
  t4267 = -1.*t4250*t4226;
  t4268 = -1.*t3113*t4239;
  t4269 = t4260 + t4267 + t4268;
  t4560 = t4259*t3631;
  t4568 = t4213*t3580;
  t4294 = t4226*t3757;
  t4299 = t4239*t3645;
  t4300 = t4293 + t4294 + t4299;
  t4371 = t1771*t4259;
  t4416 = -1.*t4259*t3580;
  t4660 = t1771*t4213;
  t4664 = t2054*t4259;
  t4374 = t4358*t4226;
  t4380 = t2124*t4239;
  t4383 = t4371 + t4374 + t4380;
  t4669 = -1.*t4259*t3631;
  t4676 = -1.*t4213*t3580;
  t4417 = -1.*t4226*t3757;
  t4418 = -1.*t4239*t3645;
  t4419 = t4416 + t4417 + t4418;
  t4459 = -1.*t1771*t4259;
  t4491 = t2844*t4259;
  t4754 = -1.*t1771*t4213;
  t4757 = -1.*t2054*t4259;
  t4763 = t2844*t4213;
  t4766 = t3066*t4259;
  t4473 = -1.*t4358*t4226;
  t4475 = -1.*t2124*t4239;
  t4476 = t4459 + t4473 + t4475;
  t4492 = t4250*t4226;
  t4493 = t3113*t4239;
  t4494 = t4491 + t4492 + t4493;
  t4840 = 0.15121*t137;
  t4841 = t4840 + t4078 + t4128 + t4194;
  t4819 = -0.15121*t137;
  t4820 = -1.*t1309*t4127;
  t4825 = -1.*t137*t4192;
  t4826 = t4819 + t4078 + t4820 + t4825;
  t4877 = -1.*t137*t1266;
  t4880 = -1.*t1309*t1466;
  t4883 = t4877 + t4880;
  t4884 = t97*t4883;
  t4886 = t4884 + t4507;
  t4893 = t4883*t1730;
  t4894 = t2013 + t4893;
  t4852 = -1.*t1309*t3425;
  t4853 = -1.*t137*t3487;
  t4854 = t4852 + t4853;
  t4540 = -1.*t2999*t4063;
  t4545 = -1.*t3066*t4213;
  t4548 = t4540 + t4545 + t4260;
  t4831 = -1.*t1309*t2691;
  t4833 = -1.*t137*t2754;
  t4834 = t4831 + t4833;
  t4913 = t4854*t1730;
  t4914 = t3619 + t4913;
  t4939 = t97*t4826;
  t4941 = -1.*t4841*t1730;
  t4942 = t4939 + t4941;
  t4916 = t97*t4841;
  t4918 = t4826*t1730;
  t4921 = t4916 + t4918;
  t4931 = t4834*t1730;
  t4932 = t3054 + t4931;
  t4572 = t4063*t3592;
  t4573 = t4213*t3631;
  t4575 = t4572 + t4573 + t4293;
  t4925 = -1.*t2844*t4921;
  t4935 = -1.*t4932*t4259;
  t4926 = t97*t4834;
  t4927 = t4926 + t4524;
  t4966 = t97*t4854;
  t4967 = t4966 + t4562;
  t4964 = t4259*t4914;
  t4970 = t4921*t3580;
  t4643 = t1981*t4063;
  t4645 = t2054*t4213;
  t4646 = t4643 + t4645 + t4371;
  t4683 = -1.*t4063*t3592;
  t4684 = -1.*t4213*t3631;
  t4687 = t4683 + t4684 + t4416;
  t5071 = t1771*t4921;
  t5083 = t4894*t4259;
  t5092 = -1.*t4259*t4914;
  t5099 = -1.*t4921*t3580;
  t4746 = -1.*t1981*t4063;
  t4748 = -1.*t2054*t4213;
  t4749 = t4746 + t4748 + t4459;
  t4771 = t2999*t4063;
  t4773 = t3066*t4213;
  t4774 = t4771 + t4773 + t4491;
  t5280 = -1.*t1771*t4921;
  t5282 = -1.*t4894*t4259;
  t5290 = t2844*t4921;
  t5293 = t4932*t4259;
  t5337 = -2.8e-11*t470;
  t5338 = t368 + t5337;
  t5341 = 4.e-6*t201;
  t5342 = t5341 + t883;
  t5371 = -7.e-6*t201;
  t5372 = t5371 + t1448;
  t5347 = -4.e-6*t201;
  t5362 = t5347 + t883;
  t5407 = 7.e-6*t201;
  t5456 = 2.8e-11*t470;
  t5477 = t5407 + t1448;
  t5483 = t201 + t5337;
  t5496 = t201 + t5456;
  t5497 = -0.038749000006999997*t5496;
  t5503 = t5347 + t1941;
  t5509 = -1.8134809999999998e-6*t5503;
  t5511 = -0.2812110000084994*t470;
  t5513 = t5342*t3908;
  t5514 = t5338*t3984;
  t5515 = -1.000000000016*t470*t4059;
  t5518 = -2.7726089999999997e-12 + t5497 + t5509 + t5511 + t5513 + t5514 + t5515;
  t5414 = t5407 + t504;
  t5415 = -0.038749000006999997*t5414;
  t5416 = t5341 + t1941;
  t5421 = -0.281211000004*t5416;
  t5423 = -1.1787626499999999e-16*t470;
  t5426 = -6.5e-11*t470*t3908;
  t5428 = t5372*t3984;
  t5431 = t5362*t4059;
  t5432 = 3.9608699999999997e-7 + t5415 + t5421 + t5423 + t5426 + t5428 + t5431;
  t5538 = t5477*t3308;
  t5546 = -1.000000000049*t470*t3339;
  t5548 = t5483*t3405;
  t5550 = t5538 + t5546 + t5548;
  t5454 = t5371 + t504;
  t5455 = -1.8134809999999998e-6*t5454;
  t5465 = t368 + t5456;
  t5470 = -0.281211000004*t5465;
  t5475 = -0.03874900000889869*t470;
  t5478 = t5477*t3908;
  t5482 = -1.000000000049*t470*t3984;
  t5487 = t5483*t4059;
  t5491 = 1.5843479999999999e-12 + t5455 + t5470 + t5475 + t5478 + t5482 + t5487;
  t5522 = -1.000000000049*t470*t2281;
  t5525 = t5477*t2602;
  t5528 = t5483*t2649;
  t5532 = t5522 + t5525 + t5528;
  t5495 = -1.*t2999*t5491;
  t5534 = -1.*t5532*t4063;
  t5436 = t5372*t2281;
  t5439 = -6.5e-11*t470*t2602;
  t5444 = t5362*t2649;
  t5445 = t5436 + t5439 + t5444;
  t5382 = t5338*t2281;
  t5386 = t5342*t2602;
  t5388 = -1.000000000016*t470*t2649;
  t5394 = t5382 + t5386 + t5388;
  t5594 = t4063*t5550;
  t5612 = t5491*t3592;
  t5677 = t137*t5432;
  t5680 = t1309*t5518;
  t5682 = t5677 + t5680;
  t5668 = -1.*t1309*t5432;
  t5669 = t137*t5518;
  t5674 = t5668 + t5669;
  t5567 = -6.5e-11*t470*t3308;
  t5577 = t5372*t3339;
  t5583 = t5362*t3405;
  t5585 = t5567 + t5577 + t5583;
  t5595 = t5342*t3308;
  t5602 = t5338*t3339;
  t5607 = -1.000000000016*t470*t3405;
  t5610 = t5595 + t5602 + t5607;
  t5336 = -1.000000000016*t470*t832;
  t5340 = t5338*t1073;
  t5343 = t5342*t1214;
  t5344 = t5336 + t5340 + t5343;
  t5370 = t5362*t832;
  t5375 = t5372*t1073;
  t5377 = -6.5e-11*t470*t1214;
  t5378 = t5370 + t5375 + t5377;
  t5757 = t1309*t5344;
  t5760 = t137*t5378;
  t5761 = t5757 + t5760;
  t5749 = t137*t5344;
  t5750 = -1.*t1309*t5378;
  t5755 = t5749 + t5750;
  t5743 = t5483*t832;
  t5744 = -1.000000000049*t470*t1073;
  t5745 = t5477*t1214;
  t5746 = t5743 + t5744 + t5745;
  t5756 = t97*t5755;
  t5763 = -1.*t5761*t1730;
  t5765 = t5756 + t5763;
  t5780 = t97*t5761;
  t5783 = t5755*t1730;
  t5787 = t5780 + t5783;
  t5789 = t1877*t5746;
  t5790 = -1.*t1999*t5765;
  t5793 = t5789 + t5790;
  t5728 = t137*t5585;
  t5732 = t1309*t5610;
  t5733 = t5728 + t5732;
  t5720 = -1.*t1309*t5585;
  t5721 = t137*t5610;
  t5724 = t5720 + t5721;
  t5655 = -1.*t1309*t5445;
  t5657 = t137*t5394;
  t5661 = t5655 + t5657;
  t5645 = t137*t5445;
  t5646 = t1309*t5394;
  t5647 = t5645 + t5646;
  t5835 = t97*t5647;
  t5841 = t5661*t1730;
  t5850 = t5835 + t5841;
  t5861 = t97*t5674;
  t5864 = -1.*t5682*t1730;
  t5867 = t5861 + t5864;
  t5855 = t97*t5682;
  t5856 = t5674*t1730;
  t5858 = t5855 + t5856;
  t5817 = t97*t5733;
  t5819 = t5724*t1730;
  t5825 = t5817 + t5819;
  t5883 = t97*t5724;
  t5886 = -1.*t5733*t1730;
  t5887 = t5883 + t5886;
  t5852 = -1.*t5850*t4259;
  t5859 = -1.*t2844*t5858;
  t5827 = t97*t5661;
  t5829 = -1.*t5647*t1730;
  t5831 = t5827 + t5829;
  t5911 = t5532*t1999;
  t5920 = t1877*t5831;
  t5921 = t5911 + t5920;
  t5881 = t5858*t3580;
  t5882 = t4259*t5825;
  t5941 = t5491*t1999;
  t5942 = t1877*t5867;
  t5949 = t5941 + t5942;
  t5960 = t1877*t5491;
  t5961 = -1.*t1999*t5867;
  t5969 = t5960 + t5961;
  t5899 = t5550*t1999;
  t5903 = t1877*t5887;
  t5904 = t5899 + t5903;
  t6033 = t1981*t5491;
  t6040 = t5746*t4063;
  t6058 = -1.*t4063*t5550;
  t6062 = -1.*t5491*t3592;
  t5926 = t1877*t5532;
  t5935 = -1.*t1999*t5831;
  t5937 = t5926 + t5935;
  t6193 = t5787*t4259;
  t6212 = t1771*t5858;
  t5747 = t5746*t1999;
  t5769 = t1877*t5765;
  t5776 = t5747 + t5769;
  t6238 = -1.*t5858*t3580;
  t6241 = -1.*t4259*t5825;
  t5992 = t1877*t5550;
  t5993 = -1.*t1999*t5887;
  t5995 = t5992 + t5993;
  t6330 = -1.*t1981*t5491;
  t6338 = -1.*t5746*t4063;
  t6355 = t2999*t5491;
  t6362 = t5532*t4063;
  t6477 = -1.*t5787*t4259;
  t6478 = -1.*t1771*t5858;
  t6489 = t5850*t4259;
  t6490 = t2844*t5858;
  t6632 = 4.e-6*t530;
  t6613 = 7.e-6*t530;
  t6615 = t6613 + t681;
  t6617 = -7.e-6*t6615;
  t6623 = 2.8e-11*t648;
  t6626 = t533 + t6617 + t6623;
  t6633 = 7.000000000455e-6*t648;
  t6634 = t6632 + t6633;
  t6638 = t6632 + t3321;
  t6639 = -7.e-6*t6638;
  t6643 = 1.000000000016*t648;
  t6647 = t6639 + t6643;
  t6676 = -4.e-6*t530;
  t5554 = -1.*t2691*t4127;
  t5557 = -1.*t2754*t4192;
  t5558 = t5554 + t5557 + t4540;
  t6712 = t6676 + t3321;
  t6717 = t6613 + t3265;
  t6690 = -7.e-6*t530;
  t6694 = -2.8e-11*t648;
  t6695 = t530 + t6694;
  t6677 = t530 + t6623;
  t6740 = -0.80315*t6712;
  t6744 = -0.038575000014*t6717;
  t6745 = t6690 + t681;
  t6749 = -0.038576*t6745;
  t6751 = t6632 + t1015;
  t6752 = -0.5031510000080001*t6751;
  t6754 = 9.666256095795e-12*t648;
  t6755 = 2.826290000000002e-7 + t6740 + t6744 + t6749 + t6752 + t6754;
  t6758 = t6690 + t3265;
  t6765 = -3.367757e-6*t6758;
  t6769 = -0.80315*t6695;
  t6771 = t533 + t6623;
  t6772 = -0.5031510000080001*t6771;
  t6778 = -0.148715*t6615;
  t6780 = 9.99986000053965e-7*t648;
  t6785 = 1.1305160000000008e-12 + t6765 + t6769 + t6772 + t6778 + t6780;
  t6788 = -0.148715*t6638;
  t6789 = t533 + t6694;
  t6790 = -0.038576*t6789;
  t6791 = -0.038575000014*t6677;
  t6792 = t6676 + t1015;
  t6795 = -3.367757e-6*t6792;
  t6800 = 0.2999989999967999*t648;
  t6804 = -1.9784030000000015e-12 + t6788 + t6790 + t6791 + t6795 + t6800;
  t6835 = -4.00000000026e-6*t648;
  t6841 = t6613 + t6835;
  t6847 = 4.e-6*t6638;
  t6848 = t530 + t6847 + t6623;
  t6852 = 4.e-6*t6615;
  t6856 = 1.000000000049*t648;
  t6859 = t6852 + t6856;
  t6679 = 4.e-6*t6677;
  t6680 = -1.12e-16*t648;
  t6684 = t6676 + t6679 + t6680;
  t6697 = 7.e-6*t6695;
  t6705 = 1.96e-16*t648;
  t6706 = t6690 + t6697 + t6705;
  t6715 = 7.e-6*t6712;
  t6718 = 4.e-6*t6717;
  t6722 = 6.5e-11*t648;
  t6724 = t6715 + t6718 + t6722;
  t6689 = t1878*t6684;
  t6710 = t1910*t6706;
  t6732 = t1955*t6724;
  t6733 = t6689 + t6710 + t6732;
  t6756 = t1450*t6755;
  t6787 = t1395*t6785;
  t6807 = t1349*t6804;
  t6810 = t6756 + t6787 + t6807;
  t6814 = t1156*t6755;
  t6815 = t886*t6785;
  t6816 = t522*t6804;
  t6818 = t6814 + t6815 + t6816;
  t6822 = t1955*t6755;
  t6826 = t1910*t6785;
  t6831 = t1878*t6804;
  t6832 = t6822 + t6826 + t6831;
  t6894 = t1955*t6841;
  t6896 = t1878*t6848;
  t6898 = t1910*t6859;
  t6899 = t6894 + t6896 + t6898;
  t5624 = t4127*t3425;
  t5627 = t4192*t3487;
  t5629 = t5624 + t5627 + t4572;
  t6950 = -1.*t3908*t6841;
  t6951 = -1.*t2281*t6785;
  t6952 = -1.*t6755*t2602;
  t6953 = -1.*t6804*t2649;
  t6954 = -1.*t6859*t3984;
  t6955 = -1.*t6848*t4059;
  t6956 = t6950 + t6951 + t6952 + t6953 + t6954 + t6955;
  t6961 = -1.*t3908*t2602;
  t6962 = -1.*t2281*t3984;
  t6964 = -1.*t2649*t4059;
  t6965 = t6961 + t6962 + t6964;
  t6968 = t3308*t6755;
  t6972 = t3908*t6724;
  t6973 = t6706*t3984;
  t6976 = t6785*t3339;
  t6979 = t6684*t4059;
  t6980 = t6804*t3405;
  t6987 = t6968 + t6972 + t6973 + t6976 + t6979 + t6980;
  t6991 = t3908*t3308;
  t6995 = t3984*t3339;
  t6996 = t4059*t3405;
  t7000 = t6991 + t6995 + t6996;
  t5639 = -1.*t2767*t4208;
  t5640 = -1.*t2813*t4196;
  t5641 = t4540 + t5639 + t5640;
  t6834 = -1.*t6832*t2999;
  t6901 = -1.*t6899*t4063;
  t6846 = t1450*t6841;
  t6851 = t1349*t6848;
  t6860 = t1395*t6859;
  t6863 = t6846 + t6851 + t6860;
  t6876 = t1156*t6841;
  t6885 = t522*t6848;
  t6889 = t886*t6859;
  t6890 = t6876 + t6885 + t6889;
  t6928 = t6733*t4063;
  t6931 = t6832*t3592;
  t6914 = t522*t6684;
  t6917 = t886*t6706;
  t6919 = t1156*t6724;
  t6921 = t6914 + t6917 + t6919;
  t6904 = t1349*t6684;
  t6905 = t1395*t6706;
  t6908 = t1450*t6724;
  t6909 = t6904 + t6905 + t6908;
  t7044 = t1309*t6810;
  t7045 = t137*t6818;
  t7049 = t7044 + t7045;
  t7057 = t137*t6810;
  t7058 = -1.*t1309*t6818;
  t7060 = t7057 + t7058;
  t5702 = t4208*t3530;
  t5703 = t4196*t3553;
  t5706 = t4572 + t5702 + t5703;
  t6631 = t1395*t6626;
  t6636 = t1450*t6634;
  t6657 = t1349*t6647;
  t6659 = t6631 + t6636 + t6657;
  t6663 = t886*t6626;
  t6664 = t1156*t6634;
  t6672 = t522*t6647;
  t6674 = t6663 + t6664 + t6672;
  t7183 = t1309*t6659;
  t7189 = t137*t6674;
  t7190 = t7183 + t7189;
  t7172 = t137*t6659;
  t7173 = -1.*t1309*t6674;
  t7176 = t7172 + t7173;
  t7159 = t1910*t6626;
  t7160 = t1955*t6634;
  t7165 = t1878*t6647;
  t7170 = t7159 + t7160 + t7165;
  t7179 = t97*t7176;
  t7194 = -1.*t7190*t1730;
  t7196 = t7179 + t7194;
  t7210 = t97*t7190;
  t7211 = t7176*t1730;
  t7213 = t7210 + t7211;
  t7216 = t1877*t7170;
  t7218 = -1.*t1999*t7196;
  t7220 = t7216 + t7218;
  t7126 = t137*t6921;
  t7128 = t1309*t6909;
  t7130 = t7126 + t7128;
  t7133 = -1.*t1309*t6921;
  t7134 = t137*t6909;
  t7137 = t7133 + t7134;
  t7087 = t137*t6863;
  t7090 = -1.*t1309*t6890;
  t7091 = t7087 + t7090;
  t7062 = t1309*t6863;
  t7066 = t137*t6890;
  t7067 = t7062 + t7066;
  t7231 = t97*t7130;
  t7233 = t7137*t1730;
  t7235 = t7231 + t7233;
  t7239 = t97*t7060;
  t7245 = -1.*t7049*t1730;
  t7248 = t7239 + t7245;
  t7252 = t97*t7049;
  t7253 = t7060*t1730;
  t7256 = t7252 + t7253;
  t7274 = t97*t7067;
  t7276 = t7091*t1730;
  t7278 = t7274 + t7276;
  t7286 = t97*t7137;
  t7287 = -1.*t7130*t1730;
  t7288 = t7286 + t7287;
  t7257 = -1.*t7256*t2844;
  t7279 = -1.*t7278*t4259;
  t7263 = t97*t7091;
  t7264 = -1.*t7067*t1730;
  t7265 = t7263 + t7264;
  t7296 = t7235*t4259;
  t7298 = t7256*t3580;
  t7309 = t6733*t1999;
  t7311 = t1877*t7288;
  t7312 = t7309 + t7311;
  t7315 = t6832*t1999;
  t7318 = t1877*t7248;
  t7324 = t7315 + t7318;
  t7327 = t1877*t6832;
  t7328 = -1.*t1999*t7248;
  t7329 = t7327 + t7328;
  t7335 = t6899*t1999;
  t7338 = t1877*t7265;
  t7341 = t7335 + t7338;
  t6048 = t1466*t4127;
  t6052 = t1266*t4192;
  t6053 = t6048 + t6052 + t4643;
  t6065 = -1.*t4127*t3425;
  t6066 = -1.*t4192*t3487;
  t6068 = t6065 + t6066 + t4683;
  t7429 = t3908*t1214;
  t7433 = t1073*t3984;
  t7434 = t832*t4059;
  t7435 = t7429 + t7433 + t7434;
  t7440 = t1073*t6785;
  t7441 = t6755*t1214;
  t7443 = t3908*t6634;
  t7445 = t832*t6804;
  t7449 = t6626*t3984;
  t7451 = t6647*t4059;
  t7454 = t7440 + t7441 + t7443 + t7445 + t7449 + t7451;
  t7456 = -1.*t3308*t6755;
  t7457 = -1.*t3908*t6724;
  t7458 = -1.*t6706*t3984;
  t7461 = -1.*t6785*t3339;
  t7463 = -1.*t6684*t4059;
  t7464 = -1.*t6804*t3405;
  t7465 = t7456 + t7457 + t7458 + t7461 + t7463 + t7464;
  t7467 = -1.*t3908*t3308;
  t7468 = -1.*t3984*t3339;
  t7469 = -1.*t4059*t3405;
  t7470 = t7467 + t7468 + t7469;
  t6086 = t1503*t4208;
  t6091 = t1701*t4196;
  t6094 = t4643 + t6086 + t6091;
  t7396 = t1981*t6832;
  t7401 = t7170*t4063;
  t7407 = -1.*t6733*t4063;
  t7412 = -1.*t6832*t3592;
  t6115 = -1.*t4208*t3530;
  t6116 = -1.*t4196*t3553;
  t6117 = t4683 + t6115 + t6116;
  t7344 = t1877*t6899;
  t7348 = -1.*t1999*t7265;
  t7351 = t7344 + t7348;
  t7542 = t1771*t7256;
  t7544 = t7213*t4259;
  t7171 = t7170*t1999;
  t7197 = t1877*t7196;
  t7200 = t7171 + t7197;
  t7552 = -1.*t7235*t4259;
  t7558 = -1.*t7256*t3580;
  t7362 = t1877*t6733;
  t7364 = -1.*t1999*t7288;
  t7366 = t7362 + t7364;
  t6342 = -1.*t1466*t4127;
  t6343 = -1.*t1266*t4192;
  t6344 = t6342 + t6343 + t4746;
  t6366 = t2691*t4127;
  t6367 = t2754*t4192;
  t6370 = t6366 + t6367 + t4771;
  t7676 = -1.*t3908*t1214;
  t7677 = -1.*t1073*t3984;
  t7680 = -1.*t832*t4059;
  t7682 = t7676 + t7677 + t7680;
  t7684 = t3908*t6841;
  t7685 = t2281*t6785;
  t7686 = t6755*t2602;
  t7687 = t6804*t2649;
  t7688 = t6859*t3984;
  t7689 = t6848*t4059;
  t7690 = t7684 + t7685 + t7686 + t7687 + t7688 + t7689;
  t7696 = t3908*t2602;
  t7698 = t2281*t3984;
  t7699 = t2649*t4059;
  t7701 = t7696 + t7698 + t7699;
  t7703 = -1.*t1073*t6785;
  t7705 = -1.*t6755*t1214;
  t7706 = -1.*t3908*t6634;
  t7709 = -1.*t832*t6804;
  t7710 = -1.*t6626*t3984;
  t7712 = -1.*t6647*t4059;
  t7715 = t7703 + t7705 + t7706 + t7709 + t7710 + t7712;
  t6389 = -1.*t1503*t4208;
  t6405 = -1.*t1701*t4196;
  t6406 = t4746 + t6389 + t6405;
  t6414 = t2767*t4208;
  t6415 = t2813*t4196;
  t6417 = t4771 + t6414 + t6415;
  t7632 = -1.*t1981*t6832;
  t7636 = -1.*t7170*t4063;
  t7650 = t6832*t2999;
  t7655 = t6899*t4063;
  t7789 = -1.*t1771*t7256;
  t7791 = -1.*t7213*t4259;
  t7795 = t7256*t2844;
  t7797 = t7278*t4259;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t1860*t2124 - 1.*t1771*t41)*var2[1] + (t1771*t1860 - 1.*t2124*t41)*var2[2];
  p_output1[10]=(-1.*t1860*t3113 - 1.*t2844*t41)*var2[1] + (t1860*t2844 - 1.*t3113*t41)*var2[2];
  p_output1[11]=(-1.*t1860*t3645 - 1.*t3580*t41)*var2[1] + (t1860*t3580 - 1.*t3645*t41)*var2[2];
  p_output1[12]=t2124*var2[0] - 1.*t3716*t41*var2[1] + t1860*t3716*var2[2] + (t3757*(-1.*t3113*t4221 - 1.*t3113*t4226 - 1.*t4236*t4239 - 1.*t4239*t4250) + t3645*t4269 + t4250*(t3645*t4221 + t3645*t4226 + t3757*t4239 + t4239*t4278) + t3113*t4300)*var2[3];
  p_output1[13]=t3113*var2[0] - 1.*t41*t4236*var2[1] + t1860*t4236*var2[2] + ((-1.*t3645*t4221 - 1.*t3645*t4226 - 1.*t3757*t4239 - 1.*t4239*t4278)*t4358 + t3757*(t2124*t4221 + t2124*t4226 + t3716*t4239 + t4239*t4358) + t3645*t4383 + t2124*t4419)*var2[3];
  p_output1[14]=t3645*var2[0] - 1.*t41*t4278*var2[1] + t1860*t4278*var2[2] + ((t3113*t4221 + t3113*t4226 + t4236*t4239 + t4239*t4250)*t4358 + t4250*(-1.*t2124*t4221 - 1.*t2124*t4226 - 1.*t3716*t4239 - 1.*t4239*t4358) + t3113*t4476 + t2124*t4494)*var2[3];
  p_output1[15]=t1877*t4509*var2[0] + (t1860*t2054 + t1999*t41*t4509)*var2[1] + (t2054*t41 - 1.*t1860*t1999*t4509)*var2[2] + (t1877*t4300*t4525 + t3757*(-1.*t1877*t4226*t4525 + t1999*t4239*t4525 + t4529 + t1999*t3113*t4532 - 1.*t1877*t4250*t4532 + t4536) + t1877*t4269*t4566 + t4250*(-1.*t1999*t3645*t4532 + t1877*t3757*t4532 + t4560 + t1877*t4226*t4566 - 1.*t1999*t4239*t4566 + t4568))*var2[3] + (t3580*(-1.*t4213*t4525 + t4529 - 1.*t3066*t4532 + t4536) + t3631*t4548 + t2844*(t3631*t4532 + t4560 + t4213*t4566 + t4568) + t3066*t4575)*var2[4];
  p_output1[16]=t1877*t4525*var2[0] + (t1860*t3066 + t1999*t41*t4525)*var2[1] + (t3066*t41 - 1.*t1860*t1999*t4525)*var2[2] + (t1877*t4419*t4509 + t1877*t4383*t4566 + t3757*(t1877*t4226*t4509 - 1.*t1999*t4239*t4509 - 1.*t1999*t2124*t4532 + t1877*t4358*t4532 + t4660 + t4664) + t4358*(t1999*t3645*t4532 - 1.*t1877*t3757*t4532 - 1.*t1877*t4226*t4566 + t1999*t4239*t4566 + t4669 + t4676))*var2[3] + (t3631*t4646 + t3580*(t4213*t4509 + t2054*t4532 + t4660 + t4664) + t1771*(-1.*t3631*t4532 - 1.*t4213*t4566 + t4669 + t4676) + t2054*t4687)*var2[4];
  p_output1[17]=t1877*t4566*var2[0] + (t1860*t3631 + t1999*t41*t4566)*var2[1] + (t3631*t41 - 1.*t1860*t1999*t4566)*var2[2] + (t1877*t4494*t4509 + t1877*t4476*t4525 + t4250*(-1.*t1877*t4226*t4509 + t1999*t4239*t4509 + t1999*t2124*t4532 - 1.*t1877*t4358*t4532 + t4754 + t4757) + t4358*(t1877*t4226*t4525 - 1.*t1999*t4239*t4525 - 1.*t1999*t3113*t4532 + t1877*t4250*t4532 + t4763 + t4766))*var2[3] + (t3066*t4749 + t2844*(-1.*t4213*t4509 - 1.*t2054*t4532 + t4754 + t4757) + t1771*(t4213*t4525 + t3066*t4532 + t4763 + t4766) + t2054*t4774)*var2[4];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=t1877*t4886*var2[0] + (t1999*t41*t4886 + t1860*t4894)*var2[1] + (-1.*t1860*t1999*t4886 + t41*t4894)*var2[2] + (t1877*t4300*t4927 + t3757*(t4925 - 1.*t1877*t4226*t4927 + t1999*t4239*t4927 + t4935 + t1999*t3113*t4942 - 1.*t1877*t4250*t4942) + t1877*t4269*t4967 + t4250*(-1.*t1999*t3645*t4942 + t1877*t3757*t4942 + t4964 + t1877*t4226*t4967 - 1.*t1999*t4239*t4967 + t4970))*var2[3] + (t4548*t4914 + t4575*t4932 + t3580*(t4925 - 1.*t4213*t4927 + t4935 - 1.*t3066*t4942) + t2844*(t3631*t4942 + t4964 + t4213*t4967 + t4970))*var2[4] + (t3592*(-1.*t2813*t4208 - 1.*t2813*t4826 - 1.*t4196*t4834 - 1.*t2767*t4841) + t2999*(t3553*t4208 + t3553*t4826 + t3530*t4841 + t4196*t4854))*var2[5];
  p_output1[46]=t1877*t4927*var2[0] + (t1999*t41*t4927 + t1860*t4932)*var2[1] + (-1.*t1860*t1999*t4927 + t41*t4932)*var2[2] + (t1877*t4419*t4886 + t1877*t4383*t4967 + t3757*(t1877*t4226*t4886 - 1.*t1999*t4239*t4886 - 1.*t1999*t2124*t4942 + t1877*t4358*t4942 + t5071 + t5083) + t4358*(t1999*t3645*t4942 - 1.*t1877*t3757*t4942 - 1.*t1877*t4226*t4967 + t1999*t4239*t4967 + t5092 + t5099))*var2[3] + (t4687*t4894 + t4646*t4914 + t3580*(t4213*t4886 + t2054*t4942 + t5071 + t5083) + t1771*(-1.*t3631*t4942 - 1.*t4213*t4967 + t5092 + t5099))*var2[4] + (t1981*(-1.*t3553*t4208 - 1.*t3553*t4826 - 1.*t3530*t4841 - 1.*t4196*t4854) + t3592*(t1701*t4208 + t1701*t4826 + t1503*t4841 + t4196*t4883))*var2[5];
  p_output1[47]=t1877*t4967*var2[0] + (t1860*t4914 + t1999*t41*t4967)*var2[1] + (t41*t4914 - 1.*t1860*t1999*t4967)*var2[2] + (t1877*t4494*t4886 + t1877*t4476*t4927 + t4250*(-1.*t1877*t4226*t4886 + t1999*t4239*t4886 + t1999*t2124*t4942 - 1.*t1877*t4358*t4942 + t5280 + t5282) + t4358*(t1877*t4226*t4927 - 1.*t1999*t4239*t4927 - 1.*t1999*t3113*t4942 + t1877*t4250*t4942 + t5290 + t5293))*var2[3] + (t4774*t4894 + t4749*t4932 + t2844*(-1.*t4213*t4886 - 1.*t2054*t4942 + t5280 + t5282) + t1771*(t4213*t4927 + t3066*t4942 + t5290 + t5293))*var2[4] + (t1981*(t2813*t4208 + t2813*t4826 + t4196*t4834 + t2767*t4841) + t2999*(-1.*t1701*t4208 - 1.*t1701*t4826 - 1.*t1503*t4841 - 1.*t4196*t4883))*var2[5];
  p_output1[48]=t5776*var2[0] + (t1860*t5787 - 1.*t41*t5793)*var2[1] + (t41*t5787 + t1860*t5793)*var2[2] + (t4269*t5904 + t4300*t5921 + t3757*(t5852 + t5859 - 1.*t4226*t5921 - 1.*t4239*t5937 - 1.*t4250*t5949 - 1.*t3113*t5969) + t4250*(t5881 + t5882 + t4226*t5904 + t3757*t5949 + t3645*t5969 + t4239*t5995))*var2[3] + (t4548*t5825 + t4575*t5850 + t3580*(t5495 + t5534 - 1.*t4213*t5831 + t5852 + t5859 - 1.*t3066*t5867) + t2844*(t5594 + t5612 + t3631*t5867 + t5881 + t5882 + t4213*t5887))*var2[4] + (t5550*t5641 + t3592*(t5495 + t5534 - 1.*t4208*t5647 - 1.*t4196*t5661 - 1.*t2813*t5674 - 1.*t2767*t5682) + t5532*t5706 + t2999*(t5594 + t5612 + t3553*t5674 + t3530*t5682 + t4196*t5724 + t4208*t5733))*var2[5] + (-0.15121*t5344 + 0.15121*t5378 + t3592*(-1.*t4127*t5394 - 1.*t2754*t5432 - 1.*t4192*t5445 + t5495 - 1.*t2691*t5518 + t5534) + t5550*t5558 + t2999*(t3487*t5432 + t3425*t5518 + t4192*t5585 + t5594 + t4127*t5610 + t5612) + t5532*t5629)*var2[15];
  p_output1[49]=t5921*var2[0] + (t1860*t5850 - 1.*t41*t5937)*var2[1] + (t41*t5850 + t1860*t5937)*var2[2] + (t4419*t5776 + t4383*t5904 + t3757*(t4226*t5776 + t4239*t5793 + t4358*t5949 + t2124*t5969 + t6193 + t6212) + t4358*(-1.*t4226*t5904 - 1.*t3757*t5949 - 1.*t3645*t5969 - 1.*t4239*t5995 + t6238 + t6241))*var2[3] + (t4687*t5787 + t4646*t5825 + t3580*(t4213*t5765 + t2054*t5867 + t6033 + t6040 + t6193 + t6212) + t1771*(-1.*t3631*t5867 - 1.*t4213*t5887 + t6058 + t6062 + t6238 + t6241))*var2[4] + (t3592*(t1701*t5674 + t1503*t5682 + t4196*t5755 + t4208*t5761 + t6033 + t6040) + t1981*(-1.*t3553*t5674 - 1.*t3530*t5682 - 1.*t4196*t5724 - 1.*t4208*t5733 + t6058 + t6062) + t5550*t6094 + t5746*t6117)*var2[5] + (-0.15121*t5394 + 0.15121*t5445 + t3592*(t4127*t5344 + t4192*t5378 + t1266*t5432 + t1466*t5518 + t6033 + t6040) + t5550*t6053 + t1981*(-1.*t3487*t5432 - 1.*t3425*t5518 - 1.*t4192*t5585 - 1.*t4127*t5610 + t6058 + t6062) + t5746*t6068)*var2[15];
  p_output1[50]=t5904*var2[0] + (t1860*t5825 - 1.*t41*t5995)*var2[1] + (t41*t5825 + t1860*t5995)*var2[2] + (t4494*t5776 + t4476*t5921 + t4250*(-1.*t4226*t5776 - 1.*t4239*t5793 - 1.*t4358*t5949 - 1.*t2124*t5969 + t6477 + t6478) + t4358*(t4226*t5921 + t4239*t5937 + t4250*t5949 + t3113*t5969 + t6489 + t6490))*var2[3] + (t4774*t5787 + t4749*t5850 + t2844*(-1.*t4213*t5765 - 1.*t2054*t5867 + t6330 + t6338 + t6477 + t6478) + t1771*(t4213*t5831 + t3066*t5867 + t6355 + t6362 + t6489 + t6490))*var2[4] + (t2999*(-1.*t1701*t5674 - 1.*t1503*t5682 - 1.*t4196*t5755 - 1.*t4208*t5761 + t6330 + t6338) + t1981*(t4208*t5647 + t4196*t5661 + t2813*t5674 + t2767*t5682 + t6355 + t6362) + t5532*t6406 + t5746*t6417)*var2[5] + (0.15121*t5585 - 0.15121*t5610 + t2999*(-1.*t4127*t5344 - 1.*t4192*t5378 - 1.*t1266*t5432 - 1.*t1466*t5518 + t6330 + t6338) + t5532*t6344 + t1981*(t4127*t5394 + t2754*t5432 + t4192*t5445 + t2691*t5518 + t6355 + t6362) + t5746*t6370)*var2[15];
  p_output1[51]=t7200*var2[0] + (t1860*t7213 - 1.*t41*t7220)*var2[1] + (t41*t7213 + t1860*t7220)*var2[2] + (t4269*t7312 + t4300*t7341 + t3757*(t7257 + t7279 - 1.*t4250*t7324 - 1.*t3113*t7329 - 1.*t4226*t7341 - 1.*t4239*t7351) + t4250*(t7296 + t7298 + t4226*t7312 + t3757*t7324 + t3645*t7329 + t4239*t7366))*var2[3] + (t4548*t7235 + t4575*t7278 + t3580*(t6834 + t6901 - 1.*t3066*t7248 + t7257 - 1.*t4213*t7265 + t7279) + t2844*(t6928 + t6931 + t3631*t7248 + t4213*t7288 + t7296 + t7298))*var2[4] + (t5641*t6733 + t5706*t6899 + t3592*(t6834 + t6901 - 1.*t2767*t7049 - 1.*t2813*t7060 - 1.*t4208*t7067 - 1.*t4196*t7091) + t2999*(t6928 + t6931 + t3530*t7049 + t3553*t7060 + t4208*t7130 + t4196*t7137))*var2[5] + (-0.15121*t6659 + 0.15121*t6674 + t5558*t6733 + t5629*t6899 + t3592*(-1.*t2691*t6810 - 1.*t2754*t6818 + t6834 - 1.*t4127*t6863 - 1.*t4192*t6890 + t6901) + t2999*(t3425*t6810 + t3487*t6818 + t4127*t6909 + t4192*t6921 + t6928 + t6931))*var2[15] + (0.281211*t6626 - 0.038749*t6647 + 1.e-6*(-7.000000000455e-6*t648 + t6676) - 1.*t3308*t6956 - 1.*t6724*t6965 - 1.*t2602*t6987 - 1.*t6841*t7000 + 7.e-6*(t3405*t6956 + t6684*t6965 + t2649*t6987 + t6848*t7000) + 4.e-6*(-1.*t3339*t6956 - 1.*t6706*t6965 - 1.*t2281*t6987 - 1.*t6859*t7000))*var2[16];
  p_output1[52]=t7341*var2[0] + (t1860*t7278 - 1.*t41*t7351)*var2[1] + (t41*t7278 + t1860*t7351)*var2[2] + (t4419*t7200 + t4383*t7312 + t3757*(t4226*t7200 + t4239*t7220 + t4358*t7324 + t2124*t7329 + t7542 + t7544) + t4358*(-1.*t4226*t7312 - 1.*t3757*t7324 - 1.*t3645*t7329 - 1.*t4239*t7366 + t7552 + t7558))*var2[3] + (t4687*t7213 + t4646*t7235 + t3580*(t4213*t7196 + t2054*t7248 + t7396 + t7401 + t7542 + t7544) + t1771*(-1.*t3631*t7248 - 1.*t4213*t7288 + t7407 + t7412 + t7552 + t7558))*var2[4] + (t6094*t6733 + t6117*t7170 + t3592*(t1503*t7049 + t1701*t7060 + t4196*t7176 + t4208*t7190 + t7396 + t7401) + t1981*(-1.*t3530*t7049 - 1.*t3553*t7060 - 1.*t4208*t7130 - 1.*t4196*t7137 + t7407 + t7412))*var2[5] + (t6053*t6733 - 0.15121*t6863 + 0.15121*t6890 + t6068*t7170 + t3592*(t4127*t6659 + t4192*t6674 + t1466*t6810 + t1266*t6818 + t7396 + t7401) + t1981*(-1.*t3425*t6810 - 1.*t3487*t6818 - 1.*t4127*t6909 - 1.*t4192*t6921 + t7407 + t7412))*var2[15] + (1.e-6*(4.00000000026e-6*t648 + t6690) - 0.038749*t6848 + 0.281211*t6859 - 1.*t6724*t7435 - 1.*t3308*t7454 - 1.*t1214*t7465 - 1.*t6634*t7470 + 4.e-6*(-1.*t6706*t7435 - 1.*t3339*t7454 - 1.*t1073*t7465 - 1.*t6626*t7470) + 7.e-6*(t6684*t7435 + t3405*t7454 + t6647*t7470 + t7465*t832))*var2[16];
  p_output1[53]=t7312*var2[0] + (t1860*t7235 - 1.*t41*t7366)*var2[1] + (t41*t7235 + t1860*t7366)*var2[2] + (t4494*t7200 + t4476*t7341 + t4250*(-1.*t4226*t7200 - 1.*t4239*t7220 - 1.*t4358*t7324 - 1.*t2124*t7329 + t7789 + t7791) + t4358*(t4250*t7324 + t3113*t7329 + t4226*t7341 + t4239*t7351 + t7795 + t7797))*var2[3] + (t4774*t7213 + t4749*t7278 + t2844*(-1.*t4213*t7196 - 1.*t2054*t7248 + t7632 + t7636 + t7789 + t7791) + t1771*(t3066*t7248 + t4213*t7265 + t7650 + t7655 + t7795 + t7797))*var2[4] + (t6406*t6899 + t6417*t7170 + t2999*(-1.*t1503*t7049 - 1.*t1701*t7060 - 1.*t4196*t7176 - 1.*t4208*t7190 + t7632 + t7636) + t1981*(t2767*t7049 + t2813*t7060 + t4208*t7067 + t4196*t7091 + t7650 + t7655))*var2[5] + (t6344*t6899 - 0.15121*t6909 + 0.15121*t6921 + t6370*t7170 + t2999*(-1.*t4127*t6659 - 1.*t4192*t6674 - 1.*t1466*t6810 - 1.*t1266*t6818 + t7632 + t7636) + t1981*(t2691*t6810 + t2754*t6818 + t4127*t6863 + t4192*t6890 + t7650 + t7655))*var2[15] + (-0.038749*t6684 + 0.281211*t6706 + 1.e-6*(-6.5e-11*t648 - 7.e-6*t6712 + 4.e-6*t6745) - 1.*t6841*t7682 - 1.*t1214*t7690 - 1.*t6634*t7701 - 1.*t2602*t7715 + 4.e-6*(-1.*t6859*t7682 - 1.*t1073*t7690 - 1.*t6626*t7701 - 1.*t2281*t7715) + 7.e-6*(t6848*t7682 + t6647*t7701 + t2649*t7715 + t7690*t832))*var2[16];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJh_RrFoot_ParallelStance.hh"

namespace SymFunction
{

void dJh_RrFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
