/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:32 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t15;
  double t43;
  double t27;
  double t28;
  double t44;
  double t6;
  double t34;
  double t47;
  double t61;
  double t102;
  double t103;
  double t117;
  double t121;
  double t122;
  double t65;
  double t67;
  double t83;
  double t101;
  double t174;
  double t180;
  double t184;
  double t196;
  double t197;
  double t260;
  double t261;
  double t263;
  double t264;
  double t267;
  double t358;
  double t120;
  double t140;
  double t141;
  double t143;
  double t144;
  double t145;
  double t364;
  double t367;
  double t380;
  double t392;
  double t150;
  double t156;
  double t157;
  double t162;
  double t163;
  double t166;
  double t518;
  double t522;
  double t525;
  double t535;
  double t185;
  double t203;
  double t207;
  double t209;
  double t211;
  double t220;
  double t531;
  double t224;
  double t233;
  double t238;
  double t557;
  double t590;
  double t243;
  double t246;
  double t248;
  double t616;
  double t627;
  double t582;
  double t640;
  double t596;
  double t680;
  double t686;
  double t536;
  double t633;
  double t756;
  double t760;
  double t766;
  double t783;
  double t268;
  double t278;
  double t284;
  double t285;
  double t287;
  double t288;
  double t790;
  double t798;
  double t300;
  double t302;
  double t309;
  double t836;
  double t778;
  double t320;
  double t326;
  double t327;
  double t885;
  double t801;
  double t911;
  double t785;
  double t966;
  double t851;
  double t921;
  double t840;
  double t357;
  double t370;
  double t389;
  double t397;
  double t399;
  double t402;
  double t403;
  double t405;
  double t407;
  double t417;
  double t420;
  double t424;
  double t425;
  double t428;
  double t437;
  double t441;
  double t442;
  double t444;
  double t446;
  double t451;
  double t454;
  double t455;
  double t1032;
  double t1035;
  double t1040;
  double t1053;
  double t475;
  double t482;
  double t484;
  double t485;
  double t1068;
  double t488;
  double t490;
  double t491;
  double t492;
  double t493;
  double t499;
  double t511;
  double t526;
  double t543;
  double t556;
  double t567;
  double t568;
  double t569;
  double t571;
  double t577;
  double t581;
  double t583;
  double t586;
  double t597;
  double t601;
  double t603;
  double t608;
  double t611;
  double t612;
  double t618;
  double t623;
  double t628;
  double t629;
  double t631;
  double t632;
  double t1209;
  double t1210;
  double t1217;
  double t1221;
  double t634;
  double t639;
  double t644;
  double t651;
  double t663;
  double t665;
  double t671;
  double t676;
  double t1238;
  double t691;
  double t694;
  double t699;
  double t702;
  double t706;
  double t707;
  double t708;
  double t710;
  double t1268;
  double t1219;
  double t714;
  double t723;
  double t725;
  double t726;
  double t728;
  double t734;
  double t742;
  double t743;
  double t1288;
  double t1240;
  double t1306;
  double t1223;
  double t1340;
  double t1276;
  double t1317;
  double t1319;
  double t1270;
  double t753;
  double t774;
  double t788;
  double t789;
  double t805;
  double t810;
  double t828;
  double t831;
  double t832;
  double t833;
  double t842;
  double t843;
  double t852;
  double t861;
  double t867;
  double t878;
  double t881;
  double t882;
  double t888;
  double t891;
  double t892;
  double t896;
  double t900;
  double t907;
  double t1401;
  double t1410;
  double t1412;
  double t1418;
  double t912;
  double t913;
  double t925;
  double t932;
  double t936;
  double t937;
  double t948;
  double t951;
  double t1457;
  double t958;
  double t963;
  double t965;
  double t974;
  double t978;
  double t983;
  double t990;
  double t992;
  double t1417;
  double t1521;
  double t1522;
  double t998;
  double t1000;
  double t1003;
  double t1005;
  double t1008;
  double t1015;
  double t1016;
  double t1017;
  double t1551;
  double t1566;
  double t1495;
  double t1600;
  double t1527;
  double t1664;
  double t1596;
  double t1428;
  double t259;
  double t1781;
  double t1785;
  double t1786;
  double t1787;
  double t1789;
  double t1809;
  double t1816;
  double t1817;
  double t1823;
  double t1830;
  double t1835;
  double t1836;
  double t1847;
  double t1852;
  double t1860;
  double t1863;
  double t1864;
  double t1915;
  double t1918;
  double t1922;
  double t1927;
  double t2066;
  double t1904;
  double t1925;
  double t1947;
  double t1949;
  double t1952;
  double t1964;
  double t1970;
  double t1975;
  double t1976;
  double t1977;
  double t1981;
  double t1983;
  double t1990;
  double t1992;
  double t2091;
  double t2099;
  double t2100;
  double t2104;
  double t2106;
  double t2108;
  double t2000;
  double t2012;
  double t2023;
  double t2030;
  double t2041;
  double t2043;
  double t2147;
  double t2169;
  double t2172;
  double t2177;
  double t2120;
  double t2126;
  double t2128;
  double t2132;
  double t2216;
  double t2349;
  double t2343;
  double t2351;
  double t2357;
  double t2359;
  double t2369;
  double t2387;
  double t2391;
  double t2403;
  double t2412;
  double t2413;
  double t2422;
  double t2424;
  double t2427;
  double t2438;
  double t2459;
  double t2460;
  double t2479;
  double t2485;
  double t2486;
  double t2487;
  double t2488;
  double t2494;
  double t2495;
  double t2496;
  double t2507;
  double t2508;
  double t2510;
  double t1044;
  double t1054;
  double t1055;
  double t2514;
  double t2519;
  double t2529;
  double t2531;
  double t1062;
  double t1065;
  double t1069;
  double t1078;
  double t1080;
  double t2541;
  double t2543;
  double t2546;
  double t2547;
  double t1086;
  double t1092;
  double t1100;
  double t1104;
  double t1105;
  double t2553;
  double t2554;
  double t2555;
  double t2562;
  double t1119;
  double t1120;
  double t1174;
  double t1186;
  double t2573;
  double t2574;
  double t2575;
  double t1208;
  double t1218;
  double t1230;
  double t1234;
  double t1244;
  double t1246;
  double t1250;
  double t2580;
  double t2581;
  double t2582;
  double t2585;
  double t1262;
  double t1264;
  double t1273;
  double t1274;
  double t1277;
  double t1280;
  double t1281;
  double t2590;
  double t2591;
  double t2600;
  double t2601;
  double t1285;
  double t1286;
  double t1289;
  double t1292;
  double t1294;
  double t1298;
  double t1300;
  double t2604;
  double t2611;
  double t2618;
  double t2620;
  double t1310;
  double t1320;
  double t1323;
  double t1325;
  double t1332;
  double t1333;
  double t1341;
  double t1350;
  double t1360;
  double t1368;
  double t1369;
  double t1381;
  double t2633;
  double t2641;
  double t2647;
  double t1392;
  double t1413;
  double t1442;
  double t1443;
  double t1468;
  double t1469;
  double t1473;
  double t2648;
  double t2655;
  double t2661;
  double t2670;
  double t1480;
  double t1493;
  double t1508;
  double t1517;
  double t1529;
  double t1530;
  double t1535;
  double t2682;
  double t2699;
  double t2703;
  double t2706;
  double t1547;
  double t1548;
  double t1558;
  double t1565;
  double t1568;
  double t1571;
  double t1572;
  double t2715;
  double t2717;
  double t2720;
  double t2721;
  double t1598;
  double t1605;
  double t1621;
  double t1626;
  double t1673;
  double t1678;
  double t1685;
  double t1691;
  double t1723;
  double t1729;
  double t1735;
  double t1746;
  double t2483;
  double t3016;
  double t3019;
  double t3021;
  double t3027;
  double t3034;
  double t3041;
  double t3044;
  double t3049;
  double t3063;
  double t3066;
  double t3079;
  double t3144;
  double t3148;
  double t3149;
  double t3152;
  double t2145;
  double t2176;
  double t2182;
  double t2186;
  double t3086;
  double t3101;
  double t3106;
  double t3113;
  double t2189;
  double t2192;
  double t2196;
  double t3159;
  double t3166;
  double t3175;
  double t3181;
  double t2204;
  double t2205;
  double t2208;
  double t2214;
  double t2218;
  double t2220;
  double t2271;
  double t2272;
  double t3334;
  double t3338;
  double t3339;
  double t3342;
  double t3344;
  double t3345;
  double t3353;
  double t3357;
  double t3361;
  double t3364;
  double t3378;
  double t3381;
  double t3384;
  double t3388;
  double t3406;
  double t3408;
  double t3416;
  double t3418;
  double t3419;
  double t3423;
  double t3429;
  double t3430;
  double t3449;
  double t3454;
  double t3461;
  double t3464;
  double t3471;
  double t3475;
  double t3481;
  double t3484;
  double t3499;
  double t3507;
  double t3508;
  double t3516;
  double t3520;
  double t3522;
  double t3523;
  double t3540;
  double t3545;
  double t3548;
  double t3553;
  double t3582;
  double t3587;
  double t3590;
  double t3596;
  double t3598;
  double t3629;
  double t3631;
  double t3632;
  double t3637;
  double t3641;
  double t3642;
  double t3657;
  double t3663;
  double t3667;
  double t3675;
  double t3678;
  double t3684;
  double t3694;
  double t3698;
  double t3703;
  double t3705;
  double t3752;
  double t4076;
  double t4084;
  double t4109;
  double t4111;
  double t4112;
  double t4086;
  double t4089;
  double t4091;
  double t4125;
  double t4131;
  double t4132;
  double t4139;
  double t4141;
  double t4171;
  double t4183;
  double t4195;
  double t4147;
  double t4148;
  double t4149;
  double t4326;
  double t4329;
  double t4330;
  double t4319;
  double t4320;
  double t4325;
  double t4335;
  double t4336;
  double t4337;
  double t4367;
  double t4368;
  double t4343;
  double t4344;
  double t4375;
  double t4377;
  double t4379;
  double t4381;
  double t4386;
  double t4418;
  double t4422;
  double t4426;
  double t4399;
  double t4403;
  double t4413;
  double t4520;
  double t4534;
  double t4544;
  double t4486;
  double t4487;
  double t4492;
  double t4497;
  double t4501;
  double t4505;
  double t4506;
  double t4509;
  double t4552;
  double t4560;
  double t4564;
  double t4572;
  double t4621;
  double t4630;
  double t4636;
  double t4638;
  double t4654;
  double t4655;
  double t4657;
  double t4660;
  double t4576;
  double t4599;
  double t4606;
  double t4619;
  double t4791;
  double t4792;
  double t4794;
  double t4796;
  double t4767;
  double t4770;
  double t4775;
  double t4777;
  double t4818;
  double t4819;
  double t4879;
  double t4882;
  double t4883;
  double t4884;
  double t4886;
  double t4889;
  double t4891;
  double t4896;
  double t4899;
  double t4902;
  double t4913;
  double t4914;
  double t4918;
  double t4919;
  double t4920;
  double t4925;
  double t4926;
  double t4928;
  double t4934;
  double t4936;
  double t4937;
  double t5007;
  double t5008;
  double t5011;
  double t4991;
  double t4994;
  double t4996;
  double t4998;
  double t4999;
  double t5000;
  double t5002;
  double t5003;
  double t5004;
  double t5005;
  double t5012;
  double t5015;
  double t5020;
  double t5023;
  double t5025;
  double t5026;
  double t5028;
  double t5030;
  double t5035;
  double t5036;
  double t5037;
  double t5038;
  double t5101;
  double t5105;
  double t5108;
  double t5109;
  double t5117;
  double t5118;
  double t5121;
  double t5142;
  double t5145;
  double t5147;
  double t5149;
  double t5212;
  double t5213;
  double t5215;
  double t5217;
  double t5218;
  double t5219;
  double t5220;
  double t5223;
  double t5225;
  double t5226;
  double t5236;
  double t5237;
  double t5242;
  double t5246;
  double t5249;
  double t5256;
  double t5260;
  double t5261;
  double t5264;
  double t5268;
  double t5274;
  double t5346;
  double t5375;
  double t5380;
  double t5412;
  double t5413;
  double t5418;
  double t5354;
  double t5445;
  double t5403;
  double t5351;
  double t5352;
  double t5361;
  double t5366;
  double t5370;
  double t5372;
  double t5374;
  double t5376;
  double t5378;
  double t5382;
  double t5384;
  double t5386;
  double t5389;
  double t5391;
  double t5395;
  double t5398;
  double t5406;
  double t5407;
  double t5408;
  double t5411;
  double t5419;
  double t5423;
  double t5424;
  double t5425;
  double t5428;
  double t5429;
  double t5430;
  double t5434;
  double t5437;
  double t5443;
  double t5446;
  double t5447;
  double t5448;
  double t5457;
  double t5459;
  double t5463;
  double t5464;
  double t5467;
  double t5468;
  double t5549;
  double t5572;
  double t5559;
  double t5561;
  double t5562;
  double t5565;
  double t5587;
  double t5591;
  double t5592;
  double t5596;
  double t5568;
  double t5609;
  double t5610;
  double t5612;
  double t5613;
  double t5552;
  double t5652;
  double t5601;
  double t5698;
  double t5699;
  double t5701;
  double t5702;
  double t5703;
  double t5704;
  double t5708;
  double t5711;
  double t5713;
  double t5718;
  double t5727;
  double t5730;
  double t5734;
  double t5737;
  double t5739;
  double t5747;
  double t5750;
  double t5751;
  double t5758;
  double t5767;
  double t5773;
  double t5861;
  double t5878;
  double t5893;
  double t5939;
  double t5940;
  double t5942;
  double t5846;
  double t5982;
  double t5920;
  double t5851;
  double t5854;
  double t5863;
  double t5873;
  double t5875;
  double t5876;
  double t5877;
  double t5879;
  double t5889;
  double t5895;
  double t5897;
  double t5899;
  double t5901;
  double t5902;
  double t5914;
  double t5918;
  double t5921;
  double t5927;
  double t5933;
  double t5936;
  double t5943;
  double t5946;
  double t5947;
  double t5951;
  double t5961;
  double t5963;
  double t5966;
  double t5973;
  double t5977;
  double t5980;
  double t5992;
  double t5995;
  double t6003;
  double t6010;
  double t6011;
  double t6013;
  double t6014;
  double t6015;
  double t6022;
  double t6094;
  double t6105;
  double t6110;
  double t6112;
  double t6121;
  double t6151;
  double t6159;
  double t6160;
  double t6163;
  double t6097;
  double t6192;
  double t6194;
  double t6195;
  double t6197;
  double t6202;
  double t6130;
  double t6176;
  double t6169;
  t15 = Sin(var1[3]);
  t43 = Cos(var1[3]);
  t27 = Cos(var1[5]);
  t28 = Sin(var1[4]);
  t44 = Sin(var1[5]);
  t6 = Cos(var1[4]);
  t34 = t27*t15*t28;
  t47 = t43*t44;
  t61 = t34 + t47;
  t102 = Cos(var1[9]);
  t103 = -1.*t102;
  t117 = 1. + t103;
  t121 = Sin(var1[9]);
  t122 = -0.15121*t121;
  t65 = t43*t27;
  t67 = -1.*t15*t28*t44;
  t83 = t65 + t67;
  t101 = 0.036395*t6*t15;
  t174 = Cos(var1[12]);
  t180 = -1.*t174;
  t184 = 1. + t180;
  t196 = Sin(var1[12]);
  t197 = 0.15121*t196;
  t260 = Cos(var1[15]);
  t261 = -1.*t260;
  t263 = 1. + t261;
  t264 = -0.15121*t263;
  t267 = Sin(var1[15]);
  t358 = Cos(var1[10]);
  t120 = 0.15121*t117;
  t140 = t120 + t122;
  t141 = t140*t61;
  t143 = -0.15121*t117;
  t144 = t143 + t122;
  t145 = t144*t83;
  t364 = -1.*t358;
  t367 = 1. + t364;
  t380 = -1. + t358;
  t392 = Sin(var1[10]);
  t150 = -1.*t121*t61;
  t156 = t102*t83;
  t157 = t150 + t156;
  t162 = t102*t61;
  t163 = t121*t83;
  t166 = t162 + t163;
  t518 = Cos(var1[13]);
  t522 = -1.*t518;
  t525 = 1. + t522;
  t535 = Sin(var1[13]);
  t185 = -0.15121*t184;
  t203 = t185 + t197;
  t207 = t203*t61;
  t209 = 0.15121*t184;
  t211 = t209 + t197;
  t220 = t211*t83;
  t531 = 4.e-6*t525;
  t224 = -1.*t196*t61;
  t233 = t174*t83;
  t238 = t224 + t233;
  t557 = -2.8e-11*t525;
  t590 = 7.e-6*t525;
  t243 = t174*t61;
  t246 = t196*t83;
  t248 = t243 + t246;
  t616 = -1.*t535;
  t627 = -4.e-6*t535;
  t582 = -7.e-6*t535;
  t640 = -7.e-6*t525;
  t596 = 4.e-6*t535;
  t680 = -1. + t518;
  t686 = 4.e-6*t680;
  t536 = 7.e-6*t535;
  t633 = 2.8e-11*t525;
  t756 = Cos(var1[16]);
  t760 = -1.*t756;
  t766 = 1. + t760;
  t783 = Sin(var1[16]);
  t268 = -0.15121*t267;
  t278 = t264 + t268;
  t284 = t278*t61;
  t285 = 0.15121*t267;
  t287 = t264 + t285;
  t288 = t287*t83;
  t790 = -1. + t756;
  t798 = 4.e-6*t790;
  t300 = -1.*t267*t61;
  t302 = t260*t83;
  t309 = t300 + t302;
  t836 = 7.e-6*t766;
  t778 = 2.8e-11*t766;
  t320 = t260*t61;
  t326 = t267*t83;
  t327 = t320 + t326;
  t885 = -4.e-6*t783;
  t801 = -7.e-6*t783;
  t911 = -2.8e-11*t766;
  t785 = -1.*t783;
  t966 = 4.e-6*t766;
  t851 = 7.e-6*t783;
  t921 = -7.e-6*t766;
  t840 = 4.e-6*t783;
  t357 = -4.9936e-13*var1[10];
  t370 = -0.038749*t367;
  t389 = 6.19984e-13*t380;
  t397 = -0.281210000004*t392;
  t399 = t357 + t370 + t389 + t397;
  t402 = -1.*t6*t399*t15;
  t403 = -1.2484e-7*var1[10];
  t405 = 2.479936e-18*t367;
  t407 = -1.54996e-7*t380;
  t417 = 1.124840000016e-6*t392;
  t420 = t403 + t405 + t407 + t417;
  t424 = t420*t157;
  t425 = 0.281210000008499*t367;
  t428 = -0.03874900000062*t392;
  t437 = t425 + t428;
  t441 = t437*t166;
  t442 = -1.*t6*t392*t15;
  t444 = -4.e-6*t392*t157;
  t446 = -1.000000000016*t367;
  t451 = 1. + t446;
  t454 = t451*t166;
  t455 = t442 + t444 + t454;
  t1032 = Cos(var1[11]);
  t1035 = -1.*t1032;
  t1040 = 1. + t1035;
  t1053 = Sin(var1[11]);
  t475 = -1.*t358*t6*t15;
  t482 = 4.e-6*t367*t157;
  t484 = -1.*t392*t166;
  t485 = t475 + t482 + t484;
  t1068 = -1. + t1032;
  t488 = -4.e-6*t367*t6*t15;
  t490 = 1.6e-11*t380;
  t491 = 1. + t490;
  t492 = t491*t157;
  t493 = 4.e-6*t392*t166;
  t499 = t488 + t492 + t493;
  t511 = 5.856279999999999e-13*var1[13];
  t526 = -0.0387489999948987*t525;
  t543 = t531 + t536;
  t556 = -2.123459e-6*t543;
  t567 = t557 + t535;
  t568 = -0.281209000004*t567;
  t569 = t511 + t526 + t556 + t568;
  t571 = -1.*t6*t569*t15;
  t577 = -1.4640699999999997e-7*var1[13];
  t581 = -1.38024835e-16*t525;
  t583 = t531 + t582;
  t586 = -0.038748999993*t583;
  t597 = t590 + t596;
  t601 = -0.281209000004*t597;
  t603 = t577 + t581 + t586 + t601;
  t608 = t603*t238;
  t611 = 1.0248489999999998e-12*var1[13];
  t612 = -0.28120900000849935*t525;
  t618 = t557 + t616;
  t623 = -0.038748999993*t618;
  t628 = t590 + t627;
  t629 = -2.123459e-6*t628;
  t631 = t611 + t612 + t623 + t629;
  t632 = t631*t248;
  t1209 = Cos(var1[14]);
  t1210 = -1.*t1209;
  t1217 = 1. + t1210;
  t1221 = Sin(var1[14]);
  t634 = t633 + t616;
  t639 = -1.*t6*t634*t15;
  t644 = t640 + t627;
  t651 = t644*t238;
  t663 = -1.000000000016*t525;
  t665 = 1. + t663;
  t671 = t665*t248;
  t676 = t639 + t651 + t671;
  t1238 = 7.e-6*t1217;
  t691 = t686 + t582;
  t694 = -1.*t6*t691*t15;
  t699 = -6.5e-11*t525;
  t702 = 1. + t699;
  t706 = t702*t238;
  t707 = t640 + t596;
  t708 = t707*t248;
  t710 = t694 + t706 + t708;
  t1268 = 4.e-6*t1217;
  t1219 = -2.8e-11*t1217;
  t714 = -1.000000000049*t525;
  t723 = 1. + t714;
  t725 = -1.*t723*t6*t15;
  t726 = t686 + t536;
  t728 = t726*t238;
  t734 = t633 + t535;
  t742 = t734*t248;
  t743 = t725 + t728 + t742;
  t1288 = 7.e-6*t1221;
  t1240 = -4.e-6*t1221;
  t1306 = 2.8e-11*t1217;
  t1223 = -1.*t1221;
  t1340 = -7.e-6*t1217;
  t1276 = 4.e-6*t1221;
  t1317 = -1. + t1209;
  t1319 = 4.e-6*t1317;
  t1270 = -7.e-6*t1221;
  t753 = 1.5843479999999999e-12*var1[16];
  t774 = -0.03874900000889869*t766;
  t788 = t778 + t785;
  t789 = -0.281211000004*t788;
  t805 = t798 + t801;
  t810 = -1.8134809999999998e-6*t805;
  t828 = t753 + t774 + t789 + t810;
  t831 = -1.*t6*t828*t15;
  t832 = 3.9608699999999997e-7*var1[16];
  t833 = -1.1787626499999999e-16*t766;
  t842 = t836 + t840;
  t843 = -0.281211000004*t842;
  t852 = t798 + t851;
  t861 = -0.038749000006999997*t852;
  t867 = t832 + t833 + t843 + t861;
  t878 = t867*t309;
  t881 = -2.7726089999999997e-12*var1[16];
  t882 = -0.2812110000084994*t766;
  t888 = t836 + t885;
  t891 = -1.8134809999999998e-6*t888;
  t892 = t778 + t783;
  t896 = -0.038749000006999997*t892;
  t900 = t881 + t882 + t891 + t896;
  t907 = t900*t327;
  t1401 = Cos(var1[17]);
  t1410 = -1.*t1401;
  t1412 = 1. + t1410;
  t1418 = Sin(var1[17]);
  t912 = t911 + t783;
  t913 = -1.*t6*t912*t15;
  t925 = t921 + t885;
  t932 = t925*t309;
  t936 = -1.000000000016*t766;
  t937 = 1. + t936;
  t948 = t937*t327;
  t951 = t913 + t932 + t948;
  t1457 = 2.8e-11*t1412;
  t958 = -1.000000000049*t766;
  t963 = 1. + t958;
  t965 = -1.*t963*t6*t15;
  t974 = t966 + t801;
  t978 = t974*t309;
  t983 = t911 + t785;
  t990 = t983*t327;
  t992 = t965 + t978 + t990;
  t1417 = 7.e-6*t1412;
  t1521 = -1. + t1401;
  t1522 = 4.e-6*t1521;
  t998 = t966 + t851;
  t1000 = -1.*t6*t998*t15;
  t1003 = -6.5e-11*t766;
  t1005 = 1. + t1003;
  t1008 = t1005*t309;
  t1015 = t921 + t840;
  t1016 = t1015*t327;
  t1017 = t1000 + t1008 + t1016;
  t1551 = 4.e-6*t1418;
  t1566 = 7.e-6*t1418;
  t1495 = -1.*t1418;
  t1600 = 4.e-6*t1412;
  t1527 = -7.e-6*t1418;
  t1664 = -2.8e-11*t1412;
  t1596 = -7.e-6*t1412;
  t1428 = -4.e-6*t1418;
  t259 = 0.036336*t6*t15;
  t1781 = Cos(var1[6]);
  t1785 = -1.*t1781;
  t1786 = 1. + t1785;
  t1787 = 0.15121*t1786;
  t1789 = Sin(var1[6]);
  t1809 = -0.15121*t1789;
  t1816 = t1787 + t1809;
  t1817 = t83*t1816;
  t1823 = 0.15121*t1789;
  t1830 = t1787 + t1823;
  t1835 = t61*t1830;
  t1836 = t1781*t83;
  t1847 = -1.*t61*t1789;
  t1852 = t1836 + t1847;
  t1860 = t1781*t61;
  t1863 = t83*t1789;
  t1864 = t1860 + t1863;
  t1915 = Cos(var1[7]);
  t1918 = -1.*t1915;
  t1922 = 1. + t1918;
  t1927 = Sin(var1[7]);
  t2066 = -1. + t1915;
  t1904 = -1.2484e-7*var1[7];
  t1925 = -1.5499600000248e-7*t1922;
  t1947 = 1.124840000016e-6*t1927;
  t1949 = t1904 + t1925 + t1947;
  t1952 = t1852*t1949;
  t1964 = 0.281210000008499*t1922;
  t1970 = 0.03874900000062*t1927;
  t1975 = t1964 + t1970;
  t1976 = t1864*t1975;
  t1977 = 4.9936e-13*var1[7];
  t1981 = -0.03874900000062*t1922;
  t1983 = 0.281210000004*t1927;
  t1990 = t1977 + t1981 + t1983;
  t1992 = -1.*t6*t15*t1990;
  t2091 = -4.e-6*t6*t2066*t15;
  t2099 = 1.6e-11*t2066;
  t2100 = 1. + t2099;
  t2104 = t2100*t1852;
  t2106 = 4.e-6*t1864*t1927;
  t2108 = t2091 + t2104 + t2106;
  t2000 = -1.000000000016*t1922;
  t2012 = 1. + t2000;
  t2023 = t2012*t1864;
  t2030 = t6*t15*t1927;
  t2041 = -4.e-6*t1852*t1927;
  t2043 = t2023 + t2030 + t2041;
  t2147 = Cos(var1[8]);
  t2169 = -1.*t2147;
  t2172 = 1. + t2169;
  t2177 = Sin(var1[8]);
  t2120 = -1.*t6*t1915*t15;
  t2126 = 4.e-6*t2066*t1852;
  t2128 = t1864*t1927;
  t2132 = t2120 + t2126 + t2128;
  t2216 = -1. + t2147;
  t2349 = 0.036395*t43*t28;
  t2343 = -1.*t43*t6*t27*t140;
  t2351 = t43*t6*t144*t44;
  t2357 = t43*t6*t27*t121;
  t2359 = t102*t43*t6*t44;
  t2369 = t2357 + t2359;
  t2387 = -1.*t102*t43*t6*t27;
  t2391 = t43*t6*t121*t44;
  t2403 = t2387 + t2391;
  t2412 = -1.*t43*t6*t27*t203;
  t2413 = t43*t6*t211*t44;
  t2422 = t43*t6*t27*t196;
  t2424 = t174*t43*t6*t44;
  t2427 = t2422 + t2424;
  t2438 = -1.*t174*t43*t6*t27;
  t2459 = t43*t6*t196*t44;
  t2460 = t2438 + t2459;
  t2479 = -1.*t43*t6*t27*t278;
  t2485 = t43*t6*t287*t44;
  t2486 = t43*t6*t27*t267;
  t2487 = t260*t43*t6*t44;
  t2488 = t2486 + t2487;
  t2494 = -1.*t260*t43*t6*t27;
  t2495 = t43*t6*t267*t44;
  t2496 = t2494 + t2495;
  t2507 = -1.*t43*t399*t28;
  t2508 = t420*t2369;
  t2510 = t437*t2403;
  t1044 = 0.50315000001605*t1040;
  t1054 = -0.0398890000006382*t1053;
  t1055 = t1044 + t1054;
  t2514 = -1.*t43*t392*t28;
  t2519 = -4.e-6*t392*t2369;
  t2529 = t451*t2403;
  t2531 = t2514 + t2519 + t2529;
  t1062 = -5.04e-14*var1[11];
  t1065 = -0.039889*t1040;
  t1069 = 6.38224e-13*t1068;
  t1078 = -0.503150000008*t1053;
  t1080 = t1062 + t1065 + t1069 + t1078;
  t2541 = -1.*t358*t43*t28;
  t2543 = 4.e-6*t367*t2369;
  t2546 = -1.*t392*t2403;
  t2547 = t2541 + t2543 + t2546;
  t1086 = -1.26e-8*var1[11];
  t1092 = 2.552896e-18*t1040;
  t1100 = -1.59556e-7*t1068;
  t1104 = 2.012600000032e-6*t1053;
  t1105 = t1086 + t1092 + t1100 + t1104;
  t2553 = -4.e-6*t367*t43*t28;
  t2554 = t491*t2369;
  t2555 = 4.e-6*t392*t2403;
  t2562 = t2553 + t2554 + t2555;
  t1119 = 1.6e-11*t1068;
  t1120 = 1. + t1119;
  t1174 = -1.000000000016*t1040;
  t1186 = 1. + t1174;
  t2573 = -1.*t43*t569*t28;
  t2574 = t603*t2427;
  t2575 = t631*t2460;
  t1208 = 1.8190549999999993e-12*var1[14];
  t1218 = -0.5031490000160505*t1217;
  t1230 = t1219 + t1223;
  t1234 = -0.038922999986*t1230;
  t1244 = t1238 + t1240;
  t1246 = -3.6777349999999994e-6*t1244;
  t1250 = t1208 + t1218 + t1234 + t1246;
  t2580 = -1.*t43*t634*t28;
  t2581 = t644*t2427;
  t2582 = t665*t2460;
  t2585 = t2580 + t2581 + t2582;
  t1262 = -2.598649999999999e-7*var1[14];
  t1264 = -2.3905277499999995e-16*t1217;
  t1273 = t1268 + t1270;
  t1274 = -0.038922999986*t1273;
  t1277 = t1238 + t1276;
  t1280 = -0.503149000008*t1277;
  t1281 = t1262 + t1264 + t1274 + t1280;
  t2590 = -1.*t43*t691*t28;
  t2591 = t702*t2427;
  t2600 = t707*t2460;
  t2601 = t2590 + t2591 + t2600;
  t1285 = 1.0394599999999997e-12*var1[14];
  t1286 = -0.03892299998790722*t1217;
  t1289 = t1268 + t1288;
  t1292 = -3.6777349999999994e-6*t1289;
  t1294 = t1219 + t1221;
  t1298 = -0.503149000008*t1294;
  t1300 = t1285 + t1286 + t1292 + t1298;
  t2604 = -1.*t723*t43*t28;
  t2611 = t726*t2427;
  t2618 = t734*t2460;
  t2620 = t2604 + t2611 + t2618;
  t1310 = t1306 + t1221;
  t1320 = t1319 + t1288;
  t1323 = -1.000000000049*t1217;
  t1325 = 1. + t1323;
  t1332 = -1.000000000016*t1217;
  t1333 = 1. + t1332;
  t1341 = t1340 + t1240;
  t1350 = t1306 + t1223;
  t1360 = t1340 + t1276;
  t1368 = -6.5e-11*t1217;
  t1369 = 1. + t1368;
  t1381 = t1319 + t1270;
  t2633 = -1.*t43*t828*t28;
  t2641 = t867*t2488;
  t2647 = t900*t2496;
  t1392 = -1.9784030000000015e-12*var1[17];
  t1413 = -0.5031510000160505*t1412;
  t1442 = t1417 + t1428;
  t1443 = -3.367757e-6*t1442;
  t1468 = t1457 + t1418;
  t1469 = -0.038575000014*t1468;
  t1473 = t1392 + t1413 + t1443 + t1469;
  t2648 = -1.*t43*t912*t28;
  t2655 = t925*t2488;
  t2661 = t937*t2496;
  t2670 = t2648 + t2655 + t2661;
  t1480 = 1.1305160000000008e-12*var1[17];
  t1493 = -0.03857500001589017*t1412;
  t1508 = t1457 + t1495;
  t1517 = -0.5031510000080001*t1508;
  t1529 = t1522 + t1527;
  t1530 = -3.367757e-6*t1529;
  t1535 = t1480 + t1493 + t1517 + t1530;
  t2682 = -1.*t963*t43*t28;
  t2699 = t974*t2488;
  t2703 = t983*t2496;
  t2706 = t2682 + t2699 + t2703;
  t1547 = 2.826290000000002e-7*var1[17];
  t1548 = -2.18904205e-16*t1412;
  t1558 = t1417 + t1551;
  t1565 = -0.5031510000080001*t1558;
  t1568 = t1522 + t1566;
  t1571 = -0.038575000014*t1568;
  t1572 = t1547 + t1548 + t1565 + t1571;
  t2715 = -1.*t43*t998*t28;
  t2717 = t1005*t2488;
  t2720 = t1015*t2496;
  t2721 = t2715 + t2717 + t2720;
  t1598 = t1596 + t1551;
  t1605 = t1600 + t1566;
  t1621 = -6.5e-11*t1412;
  t1626 = 1. + t1621;
  t1673 = t1664 + t1495;
  t1678 = -1.000000000049*t1412;
  t1685 = 1. + t1678;
  t1691 = t1600 + t1527;
  t1723 = -1.000000000016*t1412;
  t1729 = 1. + t1723;
  t1735 = t1664 + t1418;
  t1746 = t1596 + t1428;
  t2483 = 0.036336*t43*t28;
  t3016 = t43*t6*t44*t1816;
  t3019 = -1.*t43*t6*t27*t1830;
  t3021 = t43*t6*t1781*t44;
  t3027 = t43*t6*t27*t1789;
  t3034 = t3021 + t3027;
  t3041 = -1.*t43*t6*t27*t1781;
  t3044 = t43*t6*t44*t1789;
  t3049 = t3041 + t3044;
  t3063 = t3034*t1949;
  t3066 = t3049*t1975;
  t3079 = -1.*t43*t28*t1990;
  t3144 = -4.e-6*t43*t2066*t28;
  t3148 = t2100*t3034;
  t3149 = 4.e-6*t3049*t1927;
  t3152 = t3144 + t3148 + t3149;
  t2145 = -1.284e-8*var1[8];
  t2176 = -1.5499600000248e-7*t2172;
  t2182 = 2.012840000032e-6*t2177;
  t2186 = t2145 + t2176 + t2182;
  t3086 = t2012*t3049;
  t3101 = t43*t28*t1927;
  t3106 = -4.e-6*t3034*t1927;
  t3113 = t3086 + t3101 + t3106;
  t2189 = 0.503210000016051*t2172;
  t2192 = 0.03874900000062*t2177;
  t2196 = t2189 + t2192;
  t3159 = -1.*t43*t1915*t28;
  t3166 = 4.e-6*t2066*t3034;
  t3175 = t3049*t1927;
  t3181 = t3159 + t3166 + t3175;
  t2204 = 5.136e-14*var1[8];
  t2205 = -0.03874900000062*t2172;
  t2208 = 0.503210000008*t2177;
  t2214 = t2204 + t2205 + t2208;
  t2218 = 1.6e-11*t2216;
  t2220 = 1. + t2218;
  t2271 = -1.000000000016*t2172;
  t2272 = 1. + t2271;
  t3334 = t43*t27*t28;
  t3338 = -1.*t15*t44;
  t3339 = t3334 + t3338;
  t3342 = t27*t15;
  t3344 = t43*t28*t44;
  t3345 = t3342 + t3344;
  t3353 = t144*t3339;
  t3357 = t140*t3345;
  t3361 = t121*t3339;
  t3364 = t102*t3345;
  t3378 = t3361 + t3364;
  t3381 = t102*t3339;
  t3384 = -1.*t121*t3345;
  t3388 = t3381 + t3384;
  t3406 = t211*t3339;
  t3408 = t203*t3345;
  t3416 = t196*t3339;
  t3418 = t174*t3345;
  t3419 = t3416 + t3418;
  t3423 = t174*t3339;
  t3429 = -1.*t196*t3345;
  t3430 = t3423 + t3429;
  t3449 = t287*t3339;
  t3454 = t278*t3345;
  t3461 = t267*t3339;
  t3464 = t260*t3345;
  t3471 = t3461 + t3464;
  t3475 = t260*t3339;
  t3481 = -1.*t267*t3345;
  t3484 = t3475 + t3481;
  t3499 = t437*t3378;
  t3507 = t420*t3388;
  t3508 = 4.e-6*t392*t3378;
  t3516 = t491*t3388;
  t3520 = t3508 + t3516;
  t3522 = -1.*t392*t3378;
  t3523 = 4.e-6*t367*t3388;
  t3540 = t3522 + t3523;
  t3545 = t451*t3378;
  t3548 = -4.e-6*t392*t3388;
  t3553 = t3545 + t3548;
  t3582 = t631*t3419;
  t3587 = t603*t3430;
  t3590 = t707*t3419;
  t3596 = t702*t3430;
  t3598 = t3590 + t3596;
  t3629 = t665*t3419;
  t3631 = t644*t3430;
  t3632 = t3629 + t3631;
  t3637 = t734*t3419;
  t3641 = t726*t3430;
  t3642 = t3637 + t3641;
  t3657 = t900*t3471;
  t3663 = t867*t3484;
  t3667 = t1015*t3471;
  t3675 = t1005*t3484;
  t3678 = t3667 + t3675;
  t3684 = t983*t3471;
  t3694 = t974*t3484;
  t3698 = t3684 + t3694;
  t3703 = t937*t3471;
  t3705 = t925*t3484;
  t3752 = t3703 + t3705;
  t4076 = t3339*t1816;
  t4084 = t3345*t1830;
  t4109 = t1781*t3339;
  t4111 = -1.*t3345*t1789;
  t4112 = t4109 + t4111;
  t4086 = t1781*t3345;
  t4089 = t3339*t1789;
  t4091 = t4086 + t4089;
  t4125 = t4112*t1949;
  t4131 = t4091*t1975;
  t4132 = t2100*t4112;
  t4139 = 4.e-6*t4091*t1927;
  t4141 = t4132 + t4139;
  t4171 = t2012*t4091;
  t4183 = -4.e-6*t4112*t1927;
  t4195 = t4171 + t4183;
  t4147 = 4.e-6*t2066*t4112;
  t4148 = t4091*t1927;
  t4149 = t4147 + t4148;
  t4326 = -1.*t43*t27*t28;
  t4329 = t15*t44;
  t4330 = t4326 + t4329;
  t4319 = -0.15121*t1781;
  t4320 = t4319 + t1823;
  t4325 = t3345*t4320;
  t4335 = 0.15121*t1781;
  t4336 = t4335 + t1823;
  t4337 = t4330*t4336;
  t4367 = -1.*t1781*t4330;
  t4368 = t4367 + t4111;
  t4343 = -1.*t4330*t1789;
  t4344 = t4086 + t4343;
  t4375 = t4368*t1949;
  t4377 = t4344*t1975;
  t4379 = t2100*t4368;
  t4381 = 4.e-6*t4344*t1927;
  t4386 = t4379 + t4381;
  t4418 = t2012*t4344;
  t4422 = -4.e-6*t4368*t1927;
  t4426 = t4418 + t4422;
  t4399 = 4.e-6*t2066*t4368;
  t4403 = t4344*t1927;
  t4413 = t4399 + t4403;
  t4520 = t1781*t4330;
  t4534 = t3345*t1789;
  t4544 = t4520 + t4534;
  t4486 = 0.281210000004*t1915;
  t4487 = -0.03874900000062*t1927;
  t4492 = 4.9936e-13 + t4486 + t4487;
  t4497 = t43*t6*t4492;
  t4501 = 1.124840000016e-6*t1915;
  t4505 = -1.5499600000248e-7*t1927;
  t4506 = -1.2484e-7 + t4501 + t4505;
  t4509 = t4344*t4506;
  t4552 = 0.03874900000062*t1915;
  t4560 = 0.281210000008499*t1927;
  t4564 = t4552 + t4560;
  t4572 = t4544*t4564;
  t4621 = 4.e-6*t1915*t4544;
  t4630 = -4.e-6*t43*t6*t1927;
  t4636 = -1.6e-11*t4344*t1927;
  t4638 = t4621 + t4630 + t4636;
  t4654 = -1.*t43*t6*t1915;
  t4655 = -4.e-6*t1915*t4344;
  t4657 = -1.000000000016*t4544*t1927;
  t4660 = t4654 + t4655 + t4657;
  t4576 = t1915*t4544;
  t4599 = -1.*t43*t6*t1927;
  t4606 = -4.e-6*t4344*t1927;
  t4619 = t4576 + t4599 + t4606;
  t4791 = 4.e-6*t43*t6*t2066;
  t4792 = t2100*t4344;
  t4794 = 4.e-6*t4544*t1927;
  t4796 = t4791 + t4792 + t4794;
  t4767 = t43*t6*t1915;
  t4770 = 4.e-6*t2066*t4344;
  t4775 = t4544*t1927;
  t4777 = t4767 + t4770 + t4775;
  t4818 = t2012*t4544;
  t4819 = t4818 + t4599 + t4606;
  t4879 = -0.15121*t102;
  t4882 = 0.15121*t121;
  t4883 = t4879 + t4882;
  t4884 = t4883*t4330;
  t4886 = t4879 + t122;
  t4889 = t4886*t3345;
  t4891 = -1.*t121*t4330;
  t4896 = t4891 + t3364;
  t4899 = -1.*t102*t4330;
  t4902 = t4899 + t3384;
  t4913 = t437*t4896;
  t4914 = t420*t4902;
  t4918 = 4.e-6*t392*t4896;
  t4919 = t491*t4902;
  t4920 = t4918 + t4919;
  t4925 = -1.*t392*t4896;
  t4926 = 4.e-6*t367*t4902;
  t4928 = t4925 + t4926;
  t4934 = t451*t4896;
  t4936 = -4.e-6*t392*t4902;
  t4937 = t4934 + t4936;
  t5007 = t102*t4330;
  t5008 = t121*t3345;
  t5011 = t5007 + t5008;
  t4991 = -0.281210000004*t358;
  t4994 = -4.9936e-13 + t4991 + t428;
  t4996 = t43*t6*t4994;
  t4998 = 1.124840000016e-6*t358;
  t4999 = 1.5499600000248e-7*t392;
  t5000 = -1.2484e-7 + t4998 + t4999;
  t5002 = t5000*t4896;
  t5003 = -0.03874900000062*t358;
  t5004 = 0.281210000008499*t392;
  t5005 = t5003 + t5004;
  t5012 = t5005*t5011;
  t5015 = -1.*t43*t6*t392;
  t5020 = -1.*t358*t5011;
  t5023 = t5015 + t4918 + t5020;
  t5025 = 4.e-6*t43*t6*t392;
  t5026 = -1.6e-11*t392*t4896;
  t5028 = 4.e-6*t358*t5011;
  t5030 = t5025 + t5026 + t5028;
  t5035 = t358*t43*t6;
  t5036 = -4.e-6*t358*t4896;
  t5037 = -1.000000000016*t392*t5011;
  t5038 = t5035 + t5036 + t5037;
  t5101 = t43*t6*t392;
  t5105 = -4.e-6*t392*t4896;
  t5108 = t451*t5011;
  t5109 = t5101 + t5105 + t5108;
  t5117 = 4.e-6*t367*t4896;
  t5118 = -1.*t392*t5011;
  t5121 = t5035 + t5117 + t5118;
  t5142 = 4.e-6*t367*t43*t6;
  t5145 = t491*t4896;
  t5147 = 4.e-6*t392*t5011;
  t5149 = t5142 + t5145 + t5147;
  t5212 = 0.15121*t174;
  t5213 = -0.15121*t196;
  t5215 = t5212 + t5213;
  t5217 = t5215*t4330;
  t5218 = t5212 + t197;
  t5219 = t5218*t3345;
  t5220 = -1.*t196*t4330;
  t5223 = t5220 + t3418;
  t5225 = -1.*t174*t4330;
  t5226 = t5225 + t3429;
  t5236 = t631*t5223;
  t5237 = t603*t5226;
  t5242 = t707*t5223;
  t5246 = t702*t5226;
  t5249 = t5242 + t5246;
  t5256 = t665*t5223;
  t5260 = t644*t5226;
  t5261 = t5256 + t5260;
  t5264 = t734*t5223;
  t5268 = t726*t5226;
  t5274 = t5264 + t5268;
  t5346 = -2.8e-11*t535;
  t5375 = -7.e-6*t518;
  t5380 = 4.e-6*t518;
  t5412 = t174*t4330;
  t5413 = t196*t3345;
  t5418 = t5412 + t5413;
  t5354 = 7.e-6*t518;
  t5445 = 2.8e-11*t535;
  t5403 = -4.e-6*t518;
  t5351 = t518 + t5346;
  t5352 = -0.281209000004*t5351;
  t5361 = t5354 + t596;
  t5366 = -2.123459e-6*t5361;
  t5370 = -0.0387489999948987*t535;
  t5372 = 5.856279999999999e-13 + t5352 + t5366 + t5370;
  t5374 = t43*t6*t5372;
  t5376 = t5375 + t596;
  t5378 = -0.038748999993*t5376;
  t5382 = t5380 + t536;
  t5384 = -0.281209000004*t5382;
  t5386 = -1.38024835e-16*t535;
  t5389 = -1.4640699999999997e-7 + t5378 + t5384 + t5386;
  t5391 = t5389*t5223;
  t5395 = t522 + t5346;
  t5398 = -0.038748999993*t5395;
  t5406 = t5403 + t536;
  t5407 = -2.123459e-6*t5406;
  t5408 = -0.28120900000849935*t535;
  t5411 = 1.0248489999999998e-12 + t5398 + t5407 + t5408;
  t5419 = t5411*t5418;
  t5423 = t5375 + t627;
  t5424 = t43*t6*t5423;
  t5425 = -6.5e-11*t535*t5223;
  t5428 = t5380 + t582;
  t5429 = t5428*t5418;
  t5430 = t5424 + t5425 + t5429;
  t5434 = -1.000000000049*t43*t6*t535;
  t5437 = t5354 + t627;
  t5443 = t5437*t5223;
  t5446 = t518 + t5445;
  t5447 = t5446*t5418;
  t5448 = t5434 + t5443 + t5447;
  t5457 = t522 + t5445;
  t5459 = t43*t6*t5457;
  t5463 = t5403 + t582;
  t5464 = t5463*t5223;
  t5467 = -1.000000000016*t535*t5418;
  t5468 = t5459 + t5464 + t5467;
  t5549 = -2.8e-11*t1221;
  t5572 = 4.e-6*t1209;
  t5559 = t43*t6*t634;
  t5561 = t644*t5223;
  t5562 = t665*t5418;
  t5565 = t5559 + t5561 + t5562;
  t5587 = t43*t6*t691;
  t5591 = t702*t5223;
  t5592 = t707*t5418;
  t5596 = t5587 + t5591 + t5592;
  t5568 = -7.e-6*t1209;
  t5609 = t723*t43*t6;
  t5610 = t726*t5223;
  t5612 = t734*t5418;
  t5613 = t5609 + t5610 + t5612;
  t5552 = -4.e-6*t1209;
  t5652 = 2.8e-11*t1221;
  t5601 = 7.e-6*t1209;
  t5698 = -0.15121*t260;
  t5699 = t5698 + t268;
  t5701 = t5699*t4330;
  t5702 = 0.15121*t260;
  t5703 = t5702 + t268;
  t5704 = t5703*t3345;
  t5708 = -1.*t267*t4330;
  t5711 = t5708 + t3464;
  t5713 = -1.*t260*t4330;
  t5718 = t5713 + t3481;
  t5727 = t900*t5711;
  t5730 = t867*t5718;
  t5734 = t1015*t5711;
  t5737 = t1005*t5718;
  t5739 = t5734 + t5737;
  t5747 = t983*t5711;
  t5750 = t974*t5718;
  t5751 = t5747 + t5750;
  t5758 = t937*t5711;
  t5767 = t925*t5718;
  t5773 = t5758 + t5767;
  t5861 = 2.8e-11*t783;
  t5878 = 7.e-6*t756;
  t5893 = 4.e-6*t756;
  t5939 = t260*t4330;
  t5940 = t267*t3345;
  t5942 = t5939 + t5940;
  t5846 = -7.e-6*t756;
  t5982 = -2.8e-11*t783;
  t5920 = -4.e-6*t756;
  t5851 = t5846 + t885;
  t5854 = -1.8134809999999998e-6*t5851;
  t5863 = t760 + t5861;
  t5873 = -0.281211000004*t5863;
  t5875 = -0.03874900000889869*t783;
  t5876 = 1.5843479999999999e-12 + t5854 + t5873 + t5875;
  t5877 = t43*t6*t5876;
  t5879 = t5878 + t885;
  t5889 = -0.038749000006999997*t5879;
  t5895 = t5893 + t851;
  t5897 = -0.281211000004*t5895;
  t5899 = -1.1787626499999999e-16*t783;
  t5901 = 3.9608699999999997e-7 + t5889 + t5897 + t5899;
  t5902 = t5901*t5711;
  t5914 = t756 + t5861;
  t5918 = -0.038749000006999997*t5914;
  t5921 = t5920 + t851;
  t5927 = -1.8134809999999998e-6*t5921;
  t5933 = -0.2812110000084994*t783;
  t5936 = -2.7726089999999997e-12 + t5918 + t5927 + t5933;
  t5943 = t5936*t5942;
  t5946 = t5878 + t840;
  t5947 = t43*t6*t5946;
  t5951 = -6.5e-11*t783*t5711;
  t5961 = t5893 + t801;
  t5963 = t5961*t5942;
  t5966 = t5947 + t5951 + t5963;
  t5973 = -1.000000000049*t43*t6*t783;
  t5977 = t5846 + t840;
  t5980 = t5977*t5711;
  t5992 = t760 + t5982;
  t5995 = t5992*t5942;
  t6003 = t5973 + t5980 + t5995;
  t6010 = t756 + t5982;
  t6011 = t43*t6*t6010;
  t6013 = t5920 + t801;
  t6014 = t6013*t5711;
  t6015 = -1.000000000016*t783*t5942;
  t6022 = t6011 + t6014 + t6015;
  t6094 = 2.8e-11*t1418;
  t6105 = t43*t6*t912;
  t6110 = t925*t5711;
  t6112 = t937*t5942;
  t6121 = t6105 + t6110 + t6112;
  t6151 = t963*t43*t6;
  t6159 = t974*t5711;
  t6160 = t983*t5942;
  t6163 = t6151 + t6159 + t6160;
  t6097 = -4.e-6*t1401;
  t6192 = t43*t6*t998;
  t6194 = t1005*t5711;
  t6195 = t1015*t5942;
  t6197 = t6192 + t6194 + t6195;
  t6202 = -2.8e-11*t1418;
  t6130 = -7.e-6*t1401;
  t6176 = 4.e-6*t1401;
  t6169 = 7.e-6*t1401;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-241.56491273999998;
  p_output1[3]=-21.4087554*(t101 + t141 + t145 - 0.18763*t157 + 0.204386*t166) - 14.542344*(t1817 + t1835 + t1952 + t1976 + t1992 + 0.308948*t2043 + 0.178694*t2108 - 0.038721*t2132) - 3.0471822000000004*(t1817 + t1835 + t1952 + t1976 + t1992 + t2108*t2186 + t2043*t2196 + t2132*t2214 - 0.03919*(t2132*t2147 + t2043*t2177 + 4.e-6*t2108*t2216) + 0.08826*(4.e-6*t2043*t2177 + 4.e-6*t2132*t2216 + t2108*t2220) + 0.81997*(-4.e-6*t2108*t2177 - 1.*t2132*t2177 + t2043*t2272)) - 21.4087554*(t101 + t207 + t220 + 0.18763*t238 - 0.204386*t248) - 21.33236493*(t1817 + t1835 + 0.187814*t1852 + 0.204368*t1864 + t259) - 21.33236493*(t259 + t284 + t288 - 0.187814*t309 - 0.204368*t327) - 14.54228514*(t141 + t145 + t402 + t424 + t441 + 0.308947*t455 - 0.0389*t485 - 0.178694*t499) - 3.04720182*(t141 + t145 + t402 + t424 + t441 + t1055*t455 + t1080*t485 + t1105*t499 - 0.040917*(-1.*t1053*t455 + t1032*t485 + 4.e-6*t1040*t499) + 0.59796*(t1186*t455 + t1053*t485 - 4.e-6*t1053*t499) - 0.14916*(4.e-6*t1053*t455 + 4.e-6*t1040*t485 + t1120*t499)) - 14.54228514*(t207 + t220 + t571 + t608 + t632 - 0.308948*t676 + 0.178693*t710 - 0.038779*t743) - 3.04720182*(t207 + t220 + t571 + t608 + t632 + t1250*t676 + t1281*t710 + t1300*t743 - 0.038309*(t1310*t676 + t1320*t710 + t1325*t743) - 0.597964*(t1333*t676 + t1341*t710 + t1350*t743) + 0.149257*(t1360*t676 + t1369*t710 + t1381*t743)) - 85.72468500000001*(0.024028*t15*t6 + 0.00183*t61 - 0.002264*t83) - 14.54228514*(-0.178695*t1017 + t284 + t288 + t831 + t878 + t907 - 0.308948*t951 - 0.038721*t992) - 3.04720182*(t1017*t1572 + t284 + t288 + t831 + t878 + t907 + t1473*t951 + t1535*t992 - 0.149263*(t1017*t1626 + t1598*t951 + t1605*t992) - 0.039191*(t1017*t1691 + t1673*t951 + t1685*t992) - 0.597964*(t1017*t1746 + t1729*t951 + t1735*t992));
  p_output1[4]=-21.4087554*(t2343 + t2349 + t2351 - 0.18763*t2369 + 0.204386*t2403) - 21.4087554*(t2349 + t2412 + t2413 + 0.18763*t2427 - 0.204386*t2460) - 21.33236493*(t2479 + t2483 + t2485 - 0.187814*t2488 - 0.204368*t2496) - 14.54228514*(t2343 + t2351 + t2507 + t2508 + t2510 + 0.308947*t2531 - 0.0389*t2547 - 0.178694*t2562) - 3.04720182*(t2343 + t2351 + t2507 + t2508 + t2510 + t1055*t2531 + t1080*t2547 + t1105*t2562 - 0.040917*(-1.*t1053*t2531 + t1032*t2547 + 4.e-6*t1040*t2562) + 0.59796*(t1186*t2531 + t1053*t2547 - 4.e-6*t1053*t2562) - 0.14916*(4.e-6*t1053*t2531 + 4.e-6*t1040*t2547 + t1120*t2562)) - 14.54228514*(t2412 + t2413 + t2573 + t2574 + t2575 - 0.308948*t2585 + 0.178693*t2601 - 0.038779*t2620) - 3.04720182*(t2412 + t2413 + t2573 + t2574 + t2575 + t1250*t2585 + t1281*t2601 + t1300*t2620 - 0.038309*(t1310*t2585 + t1320*t2601 + t1325*t2620) - 0.597964*(t1333*t2585 + t1341*t2601 + t1350*t2620) + 0.149257*(t1360*t2585 + t1369*t2601 + t1381*t2620)) - 14.54228514*(t2479 + t2485 + t2633 + t2641 + t2647 - 0.308948*t2670 - 0.038721*t2706 - 0.178695*t2721) - 3.04720182*(t2479 + t2485 + t2633 + t2641 + t2647 + t1473*t2670 + t1535*t2706 + t1572*t2721 - 0.149263*(t1598*t2670 + t1605*t2706 + t1626*t2721) - 0.039191*(t1673*t2670 + t1685*t2706 + t1691*t2721) - 0.597964*(t1729*t2670 + t1735*t2706 + t1746*t2721)) - 21.33236493*(t2483 + t3016 + t3019 + 0.187814*t3034 + 0.204368*t3049) - 14.542344*(t3016 + t3019 + t3063 + t3066 + t3079 + 0.308948*t3113 + 0.178694*t3152 - 0.038721*t3181) - 3.0471822000000004*(t3016 + t3019 + t3063 + t3066 + t3079 + t2196*t3113 + t2186*t3152 + t2214*t3181 - 0.03919*(t2177*t3113 + 4.e-6*t2216*t3152 + t2147*t3181) + 0.81997*(t2272*t3113 - 4.e-6*t2177*t3152 - 1.*t2177*t3181) + 0.08826*(4.e-6*t2177*t3113 + t2220*t3152 + 4.e-6*t2216*t3181)) - 85.72468500000001*(0.024028*t28*t43 - 0.00183*t27*t43*t6 - 0.002264*t43*t44*t6);
  p_output1[5]=-85.72468500000001*(-0.002264*t3339 + 0.00183*t3345) - 21.4087554*(t3353 + t3357 + 0.204386*t3378 - 0.18763*t3388) - 21.4087554*(t3406 + t3408 - 0.204386*t3419 + 0.18763*t3430) - 21.33236493*(t3449 + t3454 - 0.204368*t3471 - 0.187814*t3484) - 14.54228514*(t3353 + t3357 + t3499 + t3507 - 0.178694*t3520 - 0.0389*t3540 + 0.308947*t3553) - 3.04720182*(t3353 + t3357 + t3499 + t3507 + t1105*t3520 + t1080*t3540 + t1055*t3553 - 0.040917*(4.e-6*t1040*t3520 + t1032*t3540 - 1.*t1053*t3553) - 0.14916*(t1120*t3520 + 4.e-6*t1040*t3540 + 4.e-6*t1053*t3553) + 0.59796*(-4.e-6*t1053*t3520 + t1053*t3540 + t1186*t3553)) - 14.54228514*(t3406 + t3408 + t3582 + t3587 + 0.178693*t3598 - 0.308948*t3632 - 0.038779*t3642) - 3.04720182*(t3406 + t3408 + t3582 + t3587 + t1281*t3598 + t1250*t3632 + t1300*t3642 - 0.038309*(t1320*t3598 + t1310*t3632 + t1325*t3642) - 0.597964*(t1341*t3598 + t1333*t3632 + t1350*t3642) + 0.149257*(t1369*t3598 + t1360*t3632 + t1381*t3642)) - 14.54228514*(t3449 + t3454 + t3657 + t3663 - 0.178695*t3678 - 0.038721*t3698 - 0.308948*t3752) - 3.04720182*(t3449 + t3454 + t3657 + t3663 + t1572*t3678 + t1535*t3698 + t1473*t3752 - 0.149263*(t1626*t3678 + t1605*t3698 + t1598*t3752) - 0.039191*(t1691*t3678 + t1685*t3698 + t1673*t3752) - 0.597964*(t1746*t3678 + t1735*t3698 + t1729*t3752)) - 21.33236493*(t4076 + t4084 + 0.204368*t4091 + 0.187814*t4112) - 14.542344*(t4076 + t4084 + t4125 + t4131 + 0.178694*t4141 - 0.038721*t4149 + 0.308948*t4195) - 3.0471822000000004*(t4076 + t4084 + t4125 + t4131 + t2186*t4141 + t2214*t4149 + t2196*t4195 + 0.08826*(t2220*t4141 + 4.e-6*t2216*t4149 + 4.e-6*t2177*t4195) - 0.03919*(4.e-6*t2216*t4141 + t2147*t4149 + t2177*t4195) + 0.81997*(-4.e-6*t2177*t4141 - 1.*t2177*t4149 + t2272*t4195));
  p_output1[6]=-21.33236493*(t4325 + t4337 + 0.204368*t4344 + 0.187814*t4368) - 14.542344*(t4325 + t4337 + t4375 + t4377 + 0.178694*t4386 - 0.038721*t4413 + 0.308948*t4426) - 3.0471822000000004*(t4325 + t4337 + t4375 + t4377 + t2186*t4386 + t2214*t4413 + t2196*t4426 + 0.08826*(t2220*t4386 + 4.e-6*t2216*t4413 + 4.e-6*t2177*t4426) - 0.03919*(4.e-6*t2216*t4386 + t2147*t4413 + t2177*t4426) + 0.81997*(-4.e-6*t2177*t4386 - 1.*t2177*t4413 + t2272*t4426));
  p_output1[7]=-14.542344*(t4497 + t4509 + t4572 - 0.038721*t4619 + 0.178694*t4638 + 0.308948*t4660) - 3.0471822000000004*(t4497 + t4509 + t4572 + t2214*t4619 + t2186*t4638 + t2196*t4660 + 0.08826*(4.e-6*t2216*t4619 + t2220*t4638 + 4.e-6*t2177*t4660) - 0.03919*(t2147*t4619 + 4.e-6*t2216*t4638 + t2177*t4660) + 0.81997*(-1.*t2177*t4619 - 4.e-6*t2177*t4638 + t2272*t4660));
  p_output1[8]=-3.0471822000000004*((5.136e-14 + 0.503210000008*t2147 - 0.03874900000062*t2177)*t4777 + (-1.284e-8 + 2.012840000032e-6*t2147 - 1.5499600000248e-7*t2177)*t4796 + (0.03874900000062*t2147 + 0.503210000016051*t2177)*t4819 + 0.08826*(-4.e-6*t2177*t4777 - 1.6e-11*t2177*t4796 + 4.e-6*t2147*t4819) - 0.03919*(-1.*t2177*t4777 - 4.e-6*t2177*t4796 + t2147*t4819) + 0.81997*(-1.*t2147*t4777 - 4.e-6*t2147*t4796 - 1.000000000016*t2177*t4819));
  p_output1[9]=-21.4087554*(t4884 + t4889 + 0.204386*t4896 - 0.18763*t4902) - 14.54228514*(t4884 + t4889 + t4913 + t4914 - 0.178694*t4920 - 0.0389*t4928 + 0.308947*t4937) - 3.04720182*(t4884 + t4889 + t4913 + t4914 + t1105*t4920 + t1080*t4928 + t1055*t4937 - 0.040917*(4.e-6*t1040*t4920 + t1032*t4928 - 1.*t1053*t4937) - 0.14916*(t1120*t4920 + 4.e-6*t1040*t4928 + 4.e-6*t1053*t4937) + 0.59796*(-4.e-6*t1053*t4920 + t1053*t4928 + t1186*t4937));
  p_output1[10]=-14.54228514*(t4996 + t5002 + t5012 - 0.0389*t5023 - 0.178694*t5030 + 0.308947*t5038) - 3.04720182*(t4996 + t5002 + t5012 + t1080*t5023 + t1105*t5030 + t1055*t5038 - 0.040917*(t1032*t5023 + 4.e-6*t1040*t5030 - 1.*t1053*t5038) - 0.14916*(4.e-6*t1040*t5023 + t1120*t5030 + 4.e-6*t1053*t5038) + 0.59796*(t1053*t5023 - 4.e-6*t1053*t5030 + t1186*t5038));
  p_output1[11]=-3.04720182*((-0.0398890000006382*t1032 + 0.50315000001605*t1053)*t5109 + (-5.04e-14 - 0.503150000008*t1032 + t1054)*t5121 + (-1.26e-8 + 2.012600000032e-6*t1032 + 1.59556000002553e-7*t1053)*t5149 + 0.59796*(-1.000000000016*t1053*t5109 + t1032*t5121 - 4.e-6*t1032*t5149) - 0.14916*(4.e-6*t1032*t5109 + 4.e-6*t1053*t5121 - 1.6e-11*t1053*t5149) - 0.040917*(-1.*t1032*t5109 - 1.*t1053*t5121 + 4.e-6*t1053*t5149));
  p_output1[12]=-21.4087554*(t5217 + t5219 - 0.204386*t5223 + 0.18763*t5226) - 14.54228514*(t5217 + t5219 + t5236 + t5237 + 0.178693*t5249 - 0.308948*t5261 - 0.038779*t5274) - 3.04720182*(t5217 + t5219 + t5236 + t5237 + t1281*t5249 + t1250*t5261 + t1300*t5274 - 0.038309*(t1320*t5249 + t1310*t5261 + t1325*t5274) - 0.597964*(t1341*t5249 + t1333*t5261 + t1350*t5274) + 0.149257*(t1369*t5249 + t1360*t5261 + t1381*t5274));
  p_output1[13]=-14.54228514*(t5374 + t5391 + t5419 + 0.178693*t5430 - 0.038779*t5448 - 0.308948*t5468) - 3.04720182*(t5374 + t5391 + t5419 + t1281*t5430 + t1300*t5448 + t1250*t5468 - 0.038309*(t1320*t5430 + t1325*t5448 + t1310*t5468) - 0.597964*(t1341*t5430 + t1350*t5448 + t1333*t5468) + 0.149257*(t1369*t5430 + t1381*t5448 + t1360*t5468));
  p_output1[14]=-3.04720182*((1.8190549999999993e-12 - 0.5031490000160505*t1221 - 0.038922999986*(t1210 + t5549) - 3.6777349999999994e-6*(t1288 + t5552))*t5565 + (-2.598649999999999e-7 - 2.3905277499999995e-16*t1221 - 0.038922999986*(t1276 + t5568) - 0.503149000008*(t1288 + t5572))*t5596 + (1.0394599999999997e-12 - 0.03892299998790722*t1221 - 0.503149000008*(t1209 + t5549) - 3.6777349999999994e-6*(t1276 + t5601))*t5613 + 0.149257*(t5565*(t1270 + t5572) - 6.5e-11*t1221*t5596 + (t1240 + t5568)*t5613) - 0.038309*(t5596*(t1240 + t5601) - 1.000000000049*t1221*t5613 + t5565*(t1209 + t5652)) - 0.597964*(-1.000000000016*t1221*t5565 + (t1270 + t5552)*t5596 + t5613*(t1210 + t5652)));
  p_output1[15]=-21.33236493*(t5701 + t5704 - 0.204368*t5711 - 0.187814*t5718) - 14.54228514*(t5701 + t5704 + t5727 + t5730 - 0.178695*t5739 - 0.038721*t5751 - 0.308948*t5773) - 3.04720182*(t5701 + t5704 + t5727 + t5730 + t1572*t5739 + t1535*t5751 + t1473*t5773 - 0.149263*(t1626*t5739 + t1605*t5751 + t1598*t5773) - 0.039191*(t1691*t5739 + t1685*t5751 + t1673*t5773) - 0.597964*(t1746*t5739 + t1735*t5751 + t1729*t5773));
  p_output1[16]=-14.54228514*(t5877 + t5902 + t5943 - 0.178695*t5966 - 0.038721*t6003 - 0.308948*t6022) - 3.04720182*(t5877 + t5902 + t5943 + t1572*t5966 + t1535*t6003 + t1473*t6022 - 0.149263*(t1626*t5966 + t1605*t6003 + t1598*t6022) - 0.039191*(t1691*t5966 + t1685*t6003 + t1673*t6022) - 0.597964*(t1746*t5966 + t1735*t6003 + t1729*t6022));
  p_output1[17]=-3.04720182*((-1.9784030000000015e-12 - 0.5031510000160505*t1418 - 0.038575000014*(t1401 + t6094) - 3.367757e-6*(t1566 + t6097))*t6121 + (1.1305160000000008e-12 - 0.03857500001589017*t1418 - 0.5031510000080001*(t1410 + t6094) - 3.367757e-6*(t1428 + t6130))*t6163 + (2.826290000000002e-7 - 2.18904205e-16*t1418 - 0.038575000014*(t1428 + t6169) - 0.5031510000080001*(t1566 + t6176))*t6197 - 0.149263*(t6163*(t1551 + t6169) + t6121*(t1527 + t6176) - 6.5e-11*t1418*t6197) - 0.597964*(-1.000000000016*t1418*t6121 + (t1527 + t6097)*t6197 + t6163*(t1401 + t6202)) - 0.039191*(-1.000000000049*t1418*t6163 + (t1551 + t6130)*t6197 + t6121*(t1410 + t6202)));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_ASTRo_urdf.hh"

namespace SymFunction
{

void Ge_vec_ASTRo_urdf_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
