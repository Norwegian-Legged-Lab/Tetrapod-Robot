/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:39 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t340;
  double t100;
  double t170;
  double t400;
  double t344;
  double t382;
  double t459;
  double t780;
  double t800;
  double t802;
  double t20;
  double t398;
  double t533;
  double t538;
  double t1111;
  double t1124;
  double t1139;
  double t1162;
  double t1245;
  double t1247;
  double t1252;
  double t1279;
  double t1420;
  double t1430;
  double t1431;
  double t1463;
  double t929;
  double t959;
  double t1036;
  double t1089;
  double t1662;
  double t1876;
  double t1950;
  double t1953;
  double t1964;
  double t1968;
  double t1979;
  double t1993;
  double t1874;
  double t1883;
  double t1893;
  double t1911;
  double t2048;
  double t2058;
  double t2062;
  double t2069;
  double t2085;
  double t2101;
  double t2424;
  double t2429;
  double t2437;
  double t2474;
  double t2476;
  double t2536;
  double t1109;
  double t1151;
  double t1167;
  double t1229;
  double t1331;
  double t1335;
  double t1371;
  double t1475;
  double t1494;
  double t1497;
  double t1516;
  double t1536;
  double t1538;
  double t2705;
  double t2715;
  double t2729;
  double t2615;
  double t2680;
  double t2683;
  double t2758;
  double t2762;
  double t2789;
  double t1693;
  double t1708;
  double t2452;
  double t2537;
  double t2552;
  double t2556;
  double t2566;
  double t2582;
  double t2594;
  double t2595;
  double t2605;
  double t2609;
  double t2693;
  double t2730;
  double t2800;
  double t2804;
  double t2807;
  double t2823;
  double t2832;
  double t2837;
  double t2842;
  double t2866;
  double t2890;
  double t2892;
  double t2935;
  double t2936;
  double t2947;
  double t2955;
  double t2956;
  double t2957;
  double t2443;
  double t2446;
  double t2453;
  double t3137;
  double t3149;
  double t3156;
  double t3160;
  double t3176;
  double t3189;
  double t3231;
  double t3239;
  double t3242;
  double t3247;
  double t3311;
  double t3319;
  double t3327;
  double t3330;
  double t3261;
  double t3293;
  double t3302;
  double t3304;
  double t3510;
  double t3209;
  double t3215;
  double t3218;
  double t3226;
  double t3533;
  double t3534;
  double t3545;
  double t3557;
  double t3559;
  double t3570;
  double t3595;
  double t3601;
  double t3603;
  double t3608;
  double t3650;
  double t3652;
  double t3655;
  double t3661;
  double t3628;
  double t3631;
  double t3635;
  double t3638;
  double t3779;
  double t3770;
  double t3792;
  double t3794;
  double t3799;
  double t3806;
  double t3823;
  double t3833;
  double t3837;
  double t3843;
  double t3853;
  double t3862;
  double t3863;
  double t3871;
  double t3873;
  double t3880;
  double t3884;
  double t3902;
  double t3907;
  double t3909;
  double t3912;
  double t3889;
  double t3890;
  double t3891;
  double t3896;
  double t4028;
  double t4029;
  double t4033;
  double t4039;
  double t4041;
  double t4044;
  double t4052;
  double t4054;
  double t4055;
  double t4058;
  double t4060;
  double t4061;
  double t4099;
  double t4101;
  double t4103;
  double t4063;
  double t4071;
  double t4073;
  double t4113;
  double t4114;
  double t4119;
  double t3000;
  double t3013;
  double t3052;
  double t3062;
  double t4208;
  double t4209;
  double t4210;
  double t4212;
  double t4214;
  double t4218;
  double t4219;
  double t4235;
  double t4239;
  double t4243;
  double t4224;
  double t4225;
  double t4228;
  double t4245;
  double t4247;
  double t4248;
  double t146;
  double t307;
  double t332;
  double t579;
  double t641;
  double t650;
  double t838;
  double t845;
  double t868;
  double t4345;
  double t4348;
  double t4350;
  double t4365;
  double t4366;
  double t4369;
  double t4370;
  double t4373;
  double t4374;
  double t4379;
  double t4382;
  double t4353;
  double t4354;
  double t4360;
  double t4361;
  double t1913;
  double t1923;
  double t1933;
  double t1998;
  double t2020;
  double t2041;
  double t2109;
  double t2111;
  double t2114;
  double t4442;
  double t4443;
  double t4446;
  double t4449;
  double t4430;
  double t4432;
  double t4433;
  double t4436;
  double t4452;
  double t4458;
  double t4534;
  double t4549;
  double t4554;
  double t4576;
  double t4581;
  double t4585;
  double t4620;
  double t4623;
  double t4624;
  double t4625;
  double t4664;
  double t4665;
  double t4666;
  double t4672;
  double t4641;
  double t4651;
  double t4654;
  double t4658;
  double t4751;
  double t4757;
  double t4759;
  double t4782;
  double t4785;
  double t4795;
  double t4797;
  double t4802;
  double t4830;
  double t4832;
  double t4838;
  double t4810;
  double t4818;
  double t4821;
  double t4841;
  double t4850;
  double t4851;
  double t4911;
  double t4915;
  double t4917;
  double t4922;
  double t4924;
  double t4933;
  double t4934;
  double t4950;
  double t4961;
  double t4963;
  double t4942;
  double t4945;
  double t4946;
  double t4975;
  double t4977;
  double t4978;
  double t5063;
  double t5069;
  double t5073;
  double t5084;
  double t5086;
  double t5087;
  double t5092;
  double t5101;
  double t5102;
  double t5103;
  double t5077;
  double t5078;
  double t5080;
  double t5082;
  double t5171;
  double t5179;
  double t5180;
  double t5183;
  double t5162;
  double t5165;
  double t5167;
  double t5168;
  double t5189;
  double t5192;
  double t4478;
  double t4480;
  double t5318;
  double t5321;
  double t5352;
  double t5353;
  double t5358;
  double t5361;
  double t5393;
  double t5385;
  double t5322;
  double t5389;
  double t5405;
  double t5406;
  double t5359;
  double t5416;
  double t5421;
  double t5424;
  double t5440;
  double t5335;
  double t5463;
  double t5372;
  double t5365;
  double t5370;
  double t5379;
  double t5384;
  double t5407;
  double t5411;
  double t5413;
  double t5428;
  double t5435;
  double t5458;
  double t5459;
  double t5461;
  double t5464;
  double t5470;
  double t5471;
  double t5475;
  double t5476;
  double t5480;
  double t5484;
  double t5332;
  double t5507;
  double t5508;
  double t5509;
  double t5510;
  double t5512;
  double t5514;
  double t5520;
  double t5521;
  double t5525;
  double t5526;
  double t5447;
  double t5541;
  double t5437;
  double t5493;
  double t5547;
  double t5489;
  double t5575;
  double t5633;
  double t5705;
  double t5644;
  double t5651;
  double t5729;
  double t5731;
  double t5619;
  double t5714;
  double t5762;
  double t5805;
  double t5680;
  double t5742;
  double t5744;
  double t5747;
  double t5749;
  double t5750;
  double t5754;
  double t5787;
  double t5788;
  double t5790;
  double t5812;
  double t5821;
  double t5822;
  double t5847;
  double t5863;
  double t5870;
  double t5879;
  double t5890;
  double t5894;
  double t5910;
  double t5767;
  double t5939;
  double t5897;
  double t6006;
  double t6008;
  double t6010;
  double t6060;
  double t5703;
  double t5706;
  double t5715;
  double t5726;
  double t5734;
  double t5737;
  double t5740;
  double t6140;
  double t6142;
  double t6144;
  double t5758;
  double t5759;
  double t5769;
  double t5770;
  double t5774;
  double t5778;
  double t5781;
  double t5827;
  double t5828;
  double t5830;
  double t5831;
  double t5833;
  double t5835;
  double t5845;
  double t5901;
  double t6151;
  double t6152;
  double t6157;
  double t5914;
  double t6165;
  double t6167;
  double t6168;
  double t5922;
  double t5923;
  double t6178;
  double t6179;
  double t6181;
  double t5945;
  double t5950;
  double t5954;
  double t5956;
  double t5974;
  double t5976;
  double t5978;
  double t5987;
  double t6024;
  double t6033;
  double t6051;
  double t6065;
  double t6069;
  double t6071;
  double t6074;
  double t6075;
  double t6081;
  double t6083;
  double t6100;
  double t6101;
  double t6104;
  double t6105;
  double t6128;
  double t6134;
  double t6137;
  double t6138;
  double t6139;
  double t6149;
  double t6159;
  double t6175;
  double t6185;
  double t6186;
  double t6187;
  double t6188;
  double t6191;
  double t6199;
  double t6204;
  double t6207;
  double t6209;
  double t6213;
  double t6214;
  double t6220;
  double t6223;
  double t6227;
  double t6233;
  double t6234;
  double t6026;
  double t6011;
  double t6013;
  double t6289;
  double t6295;
  double t6297;
  double t6299;
  double t6300;
  double t6302;
  double t6306;
  double t6309;
  double t6310;
  double t6311;
  double t6313;
  double t6314;
  double t6317;
  double t6319;
  double t6323;
  double t6324;
  double t6325;
  double t6326;
  double t6256;
  double t6265;
  double t6266;
  double t6267;
  double t6268;
  double t6269;
  double t6279;
  double t6379;
  double t6384;
  double t6385;
  double t6387;
  double t6391;
  double t6393;
  double t6400;
  double t6401;
  double t6402;
  double t6408;
  double t6411;
  double t6413;
  double t6416;
  double t6419;
  double t6422;
  double t6424;
  double t6425;
  double t6426;
  double t6471;
  double t6472;
  double t6473;
  double t6478;
  double t6479;
  double t6480;
  double t6486;
  double t6489;
  double t6490;
  double t6492;
  double t6498;
  double t6499;
  double t6502;
  double t6503;
  double t6506;
  double t6507;
  double t6509;
  double t6510;
  double t6576;
  double t6585;
  double t6586;
  double t6589;
  double t6593;
  double t6601;
  double t6604;
  double t6605;
  double t6611;
  double t6616;
  double t6617;
  double t6621;
  double t6628;
  double t6629;
  double t6630;
  double t6240;
  double t6242;
  double t6244;
  double t6245;
  double t6730;
  double t6736;
  double t6739;
  double t6741;
  double t6746;
  double t6748;
  double t6750;
  double t6755;
  double t6756;
  double t6757;
  double t6761;
  double t6772;
  double t6777;
  double t5328;
  double t5331;
  double t5336;
  double t5340;
  double t5342;
  double t5351;
  double t5443;
  double t5446;
  double t5450;
  double t5452;
  double t5454;
  double t5457;
  double t6825;
  double t6826;
  double t6827;
  double t5490;
  double t5491;
  double t5494;
  double t5496;
  double t5500;
  double t5501;
  double t6822;
  double t6823;
  double t6828;
  double t6829;
  double t5544;
  double t6833;
  double t6836;
  double t6838;
  double t6839;
  double t5551;
  double t6841;
  double t6842;
  double t6844;
  double t6850;
  double t5559;
  double t5576;
  double t5586;
  double t5604;
  double t5629;
  double t5630;
  double t5637;
  double t5639;
  double t5640;
  double t5642;
  double t5648;
  double t5650;
  double t5654;
  double t5655;
  double t5657;
  double t5660;
  double t5677;
  double t5678;
  double t5681;
  double t5683;
  double t5690;
  double t5694;
  double t6906;
  double t6907;
  double t6909;
  double t6911;
  double t6916;
  double t6919;
  double t6926;
  double t6927;
  double t6935;
  double t6940;
  double t6942;
  double t6946;
  double t7004;
  double t7006;
  double t7007;
  double t7017;
  double t7019;
  double t7021;
  double t7026;
  double t7028;
  double t7034;
  double t7035;
  double t7039;
  double t7040;
  double t7041;
  double t7042;
  double t7048;
  double t7049;
  double t7051;
  double t7055;
  double t7101;
  double t7102;
  double t7103;
  double t7109;
  double t7110;
  double t7119;
  double t7121;
  double t7124;
  double t7127;
  double t7129;
  double t7138;
  double t7140;
  double t7141;
  double t7142;
  double t7185;
  double t7188;
  double t7191;
  double t7192;
  double t7198;
  double t7201;
  double t7202;
  double t7204;
  double t7206;
  double t7207;
  double t7209;
  double t7212;
  double t7217;
  double t7267;
  double t7269;
  double t7272;
  double t7265;
  double t7266;
  double t7273;
  double t7275;
  double t7280;
  double t7281;
  double t7282;
  double t7283;
  double t7287;
  double t7289;
  double t7290;
  double t7291;
  double t7332;
  double t7334;
  double t7335;
  double t7336;
  double t7340;
  double t7341;
  double t7342;
  double t7343;
  double t7346;
  double t7347;
  double t7348;
  double t7349;
  double t7507;
  double t7508;
  double t7510;
  double t7513;
  double t7519;
  double t7521;
  double t7549;
  double t7550;
  double t7553;
  double t7556;
  double t7557;
  double t7563;
  double t7564;
  double t7565;
  double t7568;
  double t7569;
  double t7631;
  double t7577;
  double t7578;
  double t7581;
  double t7585;
  double t7555;
  double t7559;
  double t7566;
  double t7573;
  double t7649;
  double t7657;
  double t7697;
  double t7679;
  double t7691;
  t340 = Cos(var1[4]);
  t100 = Cos(var1[7]);
  t170 = Sin(var1[7]);
  t400 = Cos(var1[5]);
  t344 = Cos(var1[6]);
  t382 = Sin(var1[5]);
  t459 = Sin(var1[6]);
  t780 = t340*t400*t344;
  t800 = -1.*t340*t382*t459;
  t802 = t780 + t800;
  t20 = Sin(var1[4]);
  t398 = -1.*t340*t344*t382;
  t533 = -1.*t340*t400*t459;
  t538 = t398 + t533;
  t1111 = Cos(var1[8]);
  t1124 = -1.*t1111;
  t1139 = 1. + t1124;
  t1162 = Sin(var1[8]);
  t1245 = -1.*t100*t20;
  t1247 = -4.e-6*t100*t538;
  t1252 = -1.000000000016*t802*t170;
  t1279 = t1245 + t1247 + t1252;
  t1420 = t100*t802;
  t1430 = -1.*t20*t170;
  t1431 = -4.e-6*t538*t170;
  t1463 = t1420 + t1430 + t1431;
  t929 = 4.e-6*t100*t802;
  t959 = -4.e-6*t20*t170;
  t1036 = -1.6e-11*t538*t170;
  t1089 = t929 + t959 + t1036;
  t1662 = -1. + t1111;
  t1876 = -1. + t100;
  t1950 = 4.e-6*t1876*t20;
  t1953 = 1.6e-11*t1876;
  t1964 = 1. + t1953;
  t1968 = t1964*t538;
  t1979 = 4.e-6*t802*t170;
  t1993 = t1950 + t1968 + t1979;
  t1874 = t100*t20;
  t1883 = 4.e-6*t1876*t538;
  t1893 = t802*t170;
  t1911 = t1874 + t1883 + t1893;
  t2048 = -1.*t100;
  t2058 = 1. + t2048;
  t2062 = -1.000000000016*t2058;
  t2069 = 1. + t2062;
  t2085 = t2069*t802;
  t2101 = t2085 + t1430 + t1431;
  t2424 = -1.*t344;
  t2429 = 1. + t2424;
  t2437 = 0.15121*t2429;
  t2474 = -1.*t340*t400*t344;
  t2476 = t340*t382*t459;
  t2536 = t2474 + t2476;
  t1109 = -1.284e-8*var1[8];
  t1151 = -1.5499600000248e-7*t1139;
  t1167 = 2.012840000032e-6*t1162;
  t1229 = t1109 + t1151 + t1167;
  t1331 = 0.503210000016051*t1139;
  t1335 = 0.03874900000062*t1162;
  t1371 = t1331 + t1335;
  t1475 = 5.136e-14*var1[8];
  t1494 = -0.03874900000062*t1139;
  t1497 = 0.503210000008*t1162;
  t1516 = t1475 + t1494 + t1497;
  t1536 = -1.000000000016*t1139;
  t1538 = 1. + t1536;
  t2705 = t2069*t538;
  t2715 = -4.e-6*t2536*t170;
  t2729 = t2705 + t2715;
  t2615 = t1964*t2536;
  t2680 = 4.e-6*t538*t170;
  t2683 = t2615 + t2680;
  t2758 = 4.e-6*t1876*t2536;
  t2762 = t538*t170;
  t2789 = t2758 + t2762;
  t1693 = 1.6e-11*t1662;
  t1708 = 1. + t1693;
  t2452 = 0.15121*t459;
  t2537 = -1.2484e-7*var1[7];
  t2552 = -1.5499600000248e-7*t2058;
  t2556 = 1.124840000016e-6*t170;
  t2566 = t2537 + t2552 + t2556;
  t2582 = t2536*t2566;
  t2594 = 0.281210000008499*t2058;
  t2595 = 0.03874900000062*t170;
  t2605 = t2594 + t2595;
  t2609 = t538*t2605;
  t2693 = t2683*t1229;
  t2730 = t2729*t1371;
  t2800 = t2789*t1516;
  t2804 = t1538*t2729;
  t2807 = -4.e-6*t2683*t1162;
  t2823 = -1.*t2789*t1162;
  t2832 = t2804 + t2807 + t2823;
  t2837 = 0.80321*t2832;
  t2842 = t1708*t2683;
  t2866 = 4.e-6*t1662*t2789;
  t2890 = 4.e-6*t2729*t1162;
  t2892 = t2842 + t2866 + t2890;
  t2935 = 0.14871*t2892;
  t2936 = 4.e-6*t1662*t2683;
  t2947 = t1111*t2789;
  t2955 = t2729*t1162;
  t2956 = t2936 + t2947 + t2955;
  t2957 = -0.03875*t2956;
  t2443 = -0.15121*t459;
  t2446 = t2437 + t2443;
  t2453 = t2437 + t2452;
  t3137 = t344*t20*t382;
  t3149 = t400*t20*t459;
  t3156 = t3137 + t3149;
  t3160 = -1.*t400*t344*t20;
  t3176 = t20*t382*t459;
  t3189 = t3160 + t3176;
  t3231 = 4.e-6*t340*t1876;
  t3239 = t1964*t3156;
  t3242 = 4.e-6*t3189*t170;
  t3247 = t3231 + t3239 + t3242;
  t3311 = t340*t100;
  t3319 = 4.e-6*t1876*t3156;
  t3327 = t3189*t170;
  t3330 = t3311 + t3319 + t3327;
  t3261 = t2069*t3189;
  t3293 = -1.*t340*t170;
  t3302 = -4.e-6*t3156*t170;
  t3304 = t3261 + t3293 + t3302;
  t3510 = Sin(var1[3]);
  t3209 = 4.9936e-13*var1[7];
  t3215 = -0.03874900000062*t2058;
  t3218 = 0.281210000004*t170;
  t3226 = t3209 + t3215 + t3218;
  t3533 = -1.*t340*t344*t3510*t382;
  t3534 = -1.*t340*t400*t3510*t459;
  t3545 = t3533 + t3534;
  t3557 = t340*t400*t344*t3510;
  t3559 = -1.*t340*t3510*t382*t459;
  t3570 = t3557 + t3559;
  t3595 = 4.e-6*t1876*t3510*t20;
  t3601 = t1964*t3545;
  t3603 = 4.e-6*t3570*t170;
  t3608 = t3595 + t3601 + t3603;
  t3650 = t100*t3510*t20;
  t3652 = 4.e-6*t1876*t3545;
  t3655 = t3570*t170;
  t3661 = t3650 + t3652 + t3655;
  t3628 = t2069*t3570;
  t3631 = -1.*t3510*t20*t170;
  t3635 = -4.e-6*t3545*t170;
  t3638 = t3628 + t3631 + t3635;
  t3779 = Cos(var1[3]);
  t3770 = -1.*t400*t3510;
  t3792 = -1.*t3779*t20*t382;
  t3794 = t3770 + t3792;
  t3799 = t3779*t400*t20;
  t3806 = -1.*t3510*t382;
  t3823 = t3799 + t3806;
  t3833 = t344*t3794;
  t3837 = -1.*t3823*t459;
  t3843 = t3833 + t3837;
  t3853 = t344*t3823;
  t3862 = t3794*t459;
  t3863 = t3853 + t3862;
  t3871 = -4.e-6*t3779*t340*t1876;
  t3873 = t1964*t3843;
  t3880 = 4.e-6*t3863*t170;
  t3884 = t3871 + t3873 + t3880;
  t3902 = -1.*t3779*t340*t100;
  t3907 = 4.e-6*t1876*t3843;
  t3909 = t3863*t170;
  t3912 = t3902 + t3907 + t3909;
  t3889 = t2069*t3863;
  t3890 = t3779*t340*t170;
  t3891 = -4.e-6*t3843*t170;
  t3896 = t3889 + t3890 + t3891;
  t4028 = -1.*t400*t3510*t20;
  t4029 = -1.*t3779*t382;
  t4033 = t4028 + t4029;
  t4039 = t3779*t400;
  t4041 = -1.*t3510*t20*t382;
  t4044 = t4039 + t4041;
  t4052 = t344*t4033;
  t4054 = -1.*t4044*t459;
  t4055 = t4052 + t4054;
  t4058 = t344*t4044;
  t4060 = t4033*t459;
  t4061 = t4058 + t4060;
  t4099 = t2069*t4061;
  t4101 = -4.e-6*t4055*t170;
  t4103 = t4099 + t4101;
  t4063 = t1964*t4055;
  t4071 = 4.e-6*t4061*t170;
  t4073 = t4063 + t4071;
  t4113 = 4.e-6*t1876*t4055;
  t4114 = t4061*t170;
  t4119 = t4113 + t4114;
  t3000 = -0.15121*t344;
  t3013 = t3000 + t2452;
  t3052 = 0.15121*t344;
  t3062 = t3052 + t2452;
  t4208 = t400*t3510*t20;
  t4209 = t3779*t382;
  t4210 = t4208 + t4209;
  t4212 = -1.*t344*t4210;
  t4214 = t4212 + t4054;
  t4218 = -1.*t4210*t459;
  t4219 = t4058 + t4218;
  t4235 = t2069*t4219;
  t4239 = -4.e-6*t4214*t170;
  t4243 = t4235 + t4239;
  t4224 = t1964*t4214;
  t4225 = 4.e-6*t4219*t170;
  t4228 = t4224 + t4225;
  t4245 = 4.e-6*t1876*t4214;
  t4247 = t4219*t170;
  t4248 = t4245 + t4247;
  t146 = 0.281210000004*t100;
  t307 = -0.03874900000062*t170;
  t332 = 4.9936e-13 + t146 + t307;
  t579 = 1.124840000016e-6*t100;
  t641 = -1.5499600000248e-7*t170;
  t650 = -1.2484e-7 + t579 + t641;
  t838 = 0.03874900000062*t100;
  t845 = 0.281210000008499*t170;
  t868 = t838 + t845;
  t4345 = t344*t4210;
  t4348 = t4044*t459;
  t4350 = t4345 + t4348;
  t4365 = t340*t100*t3510;
  t4366 = -4.e-6*t100*t4219;
  t4369 = -1.000000000016*t4350*t170;
  t4370 = t4365 + t4366 + t4369;
  t4373 = t100*t4350;
  t4374 = t340*t3510*t170;
  t4379 = -4.e-6*t4219*t170;
  t4382 = t4373 + t4374 + t4379;
  t4353 = 4.e-6*t100*t4350;
  t4354 = 4.e-6*t340*t3510*t170;
  t4360 = -1.6e-11*t4219*t170;
  t4361 = t4353 + t4354 + t4360;
  t1913 = 0.503210000008*t1111;
  t1923 = -0.03874900000062*t1162;
  t1933 = 5.136e-14 + t1913 + t1923;
  t1998 = 2.012840000032e-6*t1111;
  t2020 = -1.5499600000248e-7*t1162;
  t2041 = -1.284e-8 + t1998 + t2020;
  t2109 = 0.03874900000062*t1111;
  t2111 = 0.503210000016051*t1162;
  t2114 = t2109 + t2111;
  t4442 = -4.e-6*t340*t1876*t3510;
  t4443 = t1964*t4219;
  t4446 = 4.e-6*t4350*t170;
  t4449 = t4442 + t4443 + t4446;
  t4430 = -1.*t340*t100*t3510;
  t4432 = 4.e-6*t1876*t4219;
  t4433 = t4350*t170;
  t4436 = t4430 + t4432 + t4433;
  t4452 = t2069*t4350;
  t4458 = t4452 + t4374 + t4379;
  t4534 = t3779*t340*t344*t382;
  t4549 = t3779*t340*t400*t459;
  t4554 = t4534 + t4549;
  t4576 = -1.*t3779*t340*t400*t344;
  t4581 = t3779*t340*t382*t459;
  t4585 = t4576 + t4581;
  t4620 = -4.e-6*t3779*t1876*t20;
  t4623 = t1964*t4554;
  t4624 = 4.e-6*t4585*t170;
  t4625 = t4620 + t4623 + t4624;
  t4664 = -1.*t3779*t100*t20;
  t4665 = 4.e-6*t1876*t4554;
  t4666 = t4585*t170;
  t4672 = t4664 + t4665 + t4666;
  t4641 = t2069*t4585;
  t4651 = t3779*t20*t170;
  t4654 = -4.e-6*t4554*t170;
  t4658 = t4641 + t4651 + t4654;
  t4751 = t400*t3510;
  t4757 = t3779*t20*t382;
  t4759 = t4751 + t4757;
  t4782 = -1.*t4759*t459;
  t4785 = t3853 + t4782;
  t4795 = t344*t4759;
  t4797 = t3823*t459;
  t4802 = t4795 + t4797;
  t4830 = t2069*t4802;
  t4832 = -4.e-6*t4785*t170;
  t4838 = t4830 + t4832;
  t4810 = t1964*t4785;
  t4818 = 4.e-6*t4802*t170;
  t4821 = t4810 + t4818;
  t4841 = 4.e-6*t1876*t4785;
  t4850 = t4802*t170;
  t4851 = t4841 + t4850;
  t4911 = -1.*t3779*t400*t20;
  t4915 = t3510*t382;
  t4917 = t4911 + t4915;
  t4922 = -1.*t344*t4917;
  t4924 = t4922 + t4782;
  t4933 = -1.*t4917*t459;
  t4934 = t4795 + t4933;
  t4950 = t2069*t4934;
  t4961 = -4.e-6*t4924*t170;
  t4963 = t4950 + t4961;
  t4942 = t1964*t4924;
  t4945 = 4.e-6*t4934*t170;
  t4946 = t4942 + t4945;
  t4975 = 4.e-6*t1876*t4924;
  t4977 = t4934*t170;
  t4978 = t4975 + t4977;
  t5063 = t344*t4917;
  t5069 = t4759*t459;
  t5073 = t5063 + t5069;
  t5084 = -4.e-6*t100*t4934;
  t5086 = -1.000000000016*t5073*t170;
  t5087 = t3902 + t5084 + t5086;
  t5092 = t100*t5073;
  t5101 = -1.*t3779*t340*t170;
  t5102 = -4.e-6*t4934*t170;
  t5103 = t5092 + t5101 + t5102;
  t5077 = 4.e-6*t100*t5073;
  t5078 = -4.e-6*t3779*t340*t170;
  t5080 = -1.6e-11*t4934*t170;
  t5082 = t5077 + t5078 + t5080;
  t5171 = 4.e-6*t3779*t340*t1876;
  t5179 = t1964*t4934;
  t5180 = 4.e-6*t5073*t170;
  t5183 = t5171 + t5179 + t5180;
  t5162 = t3779*t340*t100;
  t5165 = 4.e-6*t1876*t4934;
  t5167 = t5073*t170;
  t5168 = t5162 + t5165 + t5167;
  t5189 = t2069*t5073;
  t5192 = t5189 + t5101 + t5102;
  t4478 = -4.e-6*t4449*t1162;
  t4480 = -1.*t4436*t1162;
  t5318 = Cos(var1[17]);
  t5321 = Sin(var1[17]);
  t5352 = Cos(var1[16]);
  t5353 = -1.*t5352;
  t5358 = 1. + t5353;
  t5361 = Sin(var1[16]);
  t5393 = Cos(var1[15]);
  t5385 = Sin(var1[15]);
  t5322 = 2.8e-11*t5321;
  t5389 = -1.*t340*t400*t5385;
  t5405 = -1.*t5393*t340*t382;
  t5406 = t5389 + t5405;
  t5359 = -2.8e-11*t5358;
  t5416 = t5393*t340*t400;
  t5421 = -1.*t340*t5385*t382;
  t5424 = t5416 + t5421;
  t5440 = -4.e-6*t5321;
  t5335 = 7.e-6*t5321;
  t5463 = 4.e-6*t5358;
  t5372 = -7.e-6*t5358;
  t5365 = t5359 + t5361;
  t5370 = t5365*t20;
  t5379 = -4.e-6*t5361;
  t5384 = t5372 + t5379;
  t5407 = t5384*t5406;
  t5411 = -1.000000000016*t5358;
  t5413 = 1. + t5411;
  t5428 = t5413*t5424;
  t5435 = t5370 + t5407 + t5428;
  t5458 = -1.000000000049*t5358;
  t5459 = 1. + t5458;
  t5461 = t5459*t20;
  t5464 = -7.e-6*t5361;
  t5470 = t5463 + t5464;
  t5471 = t5470*t5406;
  t5475 = -1.*t5361;
  t5476 = t5359 + t5475;
  t5480 = t5476*t5424;
  t5484 = t5461 + t5471 + t5480;
  t5332 = -4.e-6*t5318;
  t5507 = 7.e-6*t5361;
  t5508 = t5463 + t5507;
  t5509 = t5508*t20;
  t5510 = -6.5e-11*t5358;
  t5512 = 1. + t5510;
  t5514 = t5512*t5406;
  t5520 = 4.e-6*t5361;
  t5521 = t5372 + t5520;
  t5525 = t5521*t5424;
  t5526 = t5509 + t5514 + t5525;
  t5447 = -1.*t5318;
  t5541 = -2.8e-11*t5321;
  t5437 = -7.e-6*t5318;
  t5493 = 4.e-6*t5318;
  t5547 = -7.e-6*t5321;
  t5489 = 7.e-6*t5318;
  t5575 = 4.e-6*t5321;
  t5633 = 2.8e-11*t5361;
  t5705 = 1. + t5447;
  t5644 = 7.e-6*t5352;
  t5651 = 4.e-6*t5352;
  t5729 = -1. + t5318;
  t5731 = 4.e-6*t5729;
  t5619 = -7.e-6*t5352;
  t5714 = 7.e-6*t5705;
  t5762 = 2.8e-11*t5705;
  t5805 = -2.8e-11*t5361;
  t5680 = -4.e-6*t5352;
  t5742 = t5644 + t5520;
  t5744 = t5742*t20;
  t5747 = -6.5e-11*t5361*t5406;
  t5749 = t5651 + t5464;
  t5750 = t5749*t5424;
  t5754 = t5744 + t5747 + t5750;
  t5787 = -1.000000000049*t5361*t20;
  t5788 = t5619 + t5520;
  t5790 = t5788*t5406;
  t5812 = t5353 + t5805;
  t5821 = t5812*t5424;
  t5822 = t5787 + t5790 + t5821;
  t5847 = t5352 + t5805;
  t5863 = t5847*t20;
  t5870 = t5680 + t5464;
  t5879 = t5870*t5406;
  t5890 = -1.000000000016*t5361*t5424;
  t5894 = t5863 + t5879 + t5890;
  t5910 = -2.8e-11*t5705;
  t5767 = -1.*t5321;
  t5939 = 4.e-6*t5705;
  t5897 = -7.e-6*t5705;
  t6006 = -1.*t5393;
  t6008 = 1. + t6006;
  t6010 = -0.15121*t6008;
  t6060 = 7.e-6*t5358;
  t5703 = 2.826290000000002e-7*var1[17];
  t5706 = -2.18904205e-16*t5705;
  t5715 = t5714 + t5575;
  t5726 = -0.5031510000080001*t5715;
  t5734 = t5731 + t5335;
  t5737 = -0.038575000014*t5734;
  t5740 = t5703 + t5706 + t5726 + t5737;
  t6140 = -1.*t5393*t340*t400;
  t6142 = t340*t5385*t382;
  t6144 = t6140 + t6142;
  t5758 = 1.1305160000000008e-12*var1[17];
  t5759 = -0.03857500001589017*t5705;
  t5769 = t5762 + t5767;
  t5770 = -0.5031510000080001*t5769;
  t5774 = t5731 + t5547;
  t5778 = -3.367757e-6*t5774;
  t5781 = t5758 + t5759 + t5770 + t5778;
  t5827 = -1.9784030000000015e-12*var1[17];
  t5828 = -0.5031510000160505*t5705;
  t5830 = t5714 + t5440;
  t5831 = -3.367757e-6*t5830;
  t5833 = t5762 + t5321;
  t5835 = -0.038575000014*t5833;
  t5845 = t5827 + t5828 + t5831 + t5835;
  t5901 = t5897 + t5440;
  t6151 = t5521*t5406;
  t6152 = t5512*t6144;
  t6157 = t6151 + t6152;
  t5914 = t5910 + t5321;
  t6165 = t5476*t5406;
  t6167 = t5470*t6144;
  t6168 = t6165 + t6167;
  t5922 = -1.000000000016*t5705;
  t5923 = 1. + t5922;
  t6178 = t5413*t5406;
  t6179 = t5384*t6144;
  t6181 = t6178 + t6179;
  t5945 = t5939 + t5547;
  t5950 = -1.000000000049*t5705;
  t5954 = 1. + t5950;
  t5956 = t5910 + t5767;
  t5974 = -6.5e-11*t5705;
  t5976 = 1. + t5974;
  t5978 = t5939 + t5335;
  t5987 = t5897 + t5575;
  t6024 = -0.15121*t5385;
  t6033 = -2.7726089999999997e-12*var1[16];
  t6051 = -0.2812110000084994*t5358;
  t6065 = t6060 + t5379;
  t6069 = -1.8134809999999998e-6*t6065;
  t6071 = 2.8e-11*t5358;
  t6074 = t6071 + t5361;
  t6075 = -0.038749000006999997*t6074;
  t6081 = t6033 + t6051 + t6069 + t6075;
  t6083 = t6081*t5406;
  t6100 = 3.9608699999999997e-7*var1[16];
  t6101 = -1.1787626499999999e-16*t5358;
  t6104 = t6060 + t5520;
  t6105 = -0.281211000004*t6104;
  t6128 = -1. + t5352;
  t6134 = 4.e-6*t6128;
  t6137 = t6134 + t5507;
  t6138 = -0.038749000006999997*t6137;
  t6139 = t6100 + t6101 + t6105 + t6138;
  t6149 = t6139*t6144;
  t6159 = t5740*t6157;
  t6175 = t5781*t6168;
  t6185 = t5845*t6181;
  t6186 = t5901*t6157;
  t6187 = t5914*t6168;
  t6188 = t5923*t6181;
  t6191 = t6186 + t6187 + t6188;
  t6199 = -0.80315*t6191;
  t6204 = t5945*t6157;
  t6207 = t5954*t6168;
  t6209 = t5956*t6181;
  t6213 = t6204 + t6207 + t6209;
  t6214 = -0.038576*t6213;
  t6220 = t5976*t6157;
  t6223 = t5978*t6168;
  t6227 = t5987*t6181;
  t6233 = t6220 + t6223 + t6227;
  t6234 = -0.148715*t6233;
  t6026 = t6010 + t6024;
  t6011 = 0.15121*t5385;
  t6013 = t6010 + t6011;
  t6289 = t400*t5385*t20;
  t6295 = t5393*t20*t382;
  t6297 = t6289 + t6295;
  t6299 = -1.*t5393*t400*t20;
  t6300 = t5385*t20*t382;
  t6302 = t6299 + t6300;
  t6306 = t340*t5365;
  t6309 = t5384*t6297;
  t6310 = t5413*t6302;
  t6311 = t6306 + t6309 + t6310;
  t6313 = t5459*t340;
  t6314 = t5470*t6297;
  t6317 = t5476*t6302;
  t6319 = t6313 + t6314 + t6317;
  t6323 = t340*t5508;
  t6324 = t5512*t6297;
  t6325 = t5521*t6302;
  t6326 = t6323 + t6324 + t6325;
  t6256 = 1.5843479999999999e-12*var1[16];
  t6265 = -0.03874900000889869*t5358;
  t6266 = t6071 + t5475;
  t6267 = -0.281211000004*t6266;
  t6268 = t6134 + t5464;
  t6269 = -1.8134809999999998e-6*t6268;
  t6279 = t6256 + t6265 + t6267 + t6269;
  t6379 = -1.*t340*t400*t5385*t3510;
  t6384 = -1.*t5393*t340*t3510*t382;
  t6385 = t6379 + t6384;
  t6387 = t5393*t340*t400*t3510;
  t6391 = -1.*t340*t5385*t3510*t382;
  t6393 = t6387 + t6391;
  t6400 = t5365*t3510*t20;
  t6401 = t5384*t6385;
  t6402 = t5413*t6393;
  t6408 = t6400 + t6401 + t6402;
  t6411 = t5459*t3510*t20;
  t6413 = t5470*t6385;
  t6416 = t5476*t6393;
  t6419 = t6411 + t6413 + t6416;
  t6422 = t5508*t3510*t20;
  t6424 = t5512*t6385;
  t6425 = t5521*t6393;
  t6426 = t6422 + t6424 + t6425;
  t6471 = -1.*t5385*t3823;
  t6472 = t5393*t3794;
  t6473 = t6471 + t6472;
  t6478 = t5393*t3823;
  t6479 = t5385*t3794;
  t6480 = t6478 + t6479;
  t6486 = -1.*t3779*t340*t5365;
  t6489 = t5384*t6473;
  t6490 = t5413*t6480;
  t6492 = t6486 + t6489 + t6490;
  t6498 = -1.*t5459*t3779*t340;
  t6499 = t5470*t6473;
  t6502 = t5476*t6480;
  t6503 = t6498 + t6499 + t6502;
  t6506 = -1.*t3779*t340*t5508;
  t6507 = t5512*t6473;
  t6509 = t5521*t6480;
  t6510 = t6506 + t6507 + t6509;
  t6576 = t5385*t4033;
  t6585 = t5393*t4044;
  t6586 = t6576 + t6585;
  t6589 = t5393*t4033;
  t6593 = -1.*t5385*t4044;
  t6601 = t6589 + t6593;
  t6604 = t5521*t6586;
  t6605 = t5512*t6601;
  t6611 = t6604 + t6605;
  t6616 = t5476*t6586;
  t6617 = t5470*t6601;
  t6621 = t6616 + t6617;
  t6628 = t5413*t6586;
  t6629 = t5384*t6601;
  t6630 = t6628 + t6629;
  t6240 = -0.15121*t5393;
  t6242 = t6240 + t6024;
  t6244 = 0.15121*t5393;
  t6245 = t6244 + t6024;
  t6730 = -1.*t5385*t4210;
  t6736 = t6730 + t6585;
  t6739 = -1.*t5393*t4210;
  t6741 = t6739 + t6593;
  t6746 = t5521*t6736;
  t6748 = t5512*t6741;
  t6750 = t6746 + t6748;
  t6755 = t5476*t6736;
  t6756 = t5470*t6741;
  t6757 = t6755 + t6756;
  t6761 = t5413*t6736;
  t6772 = t5384*t6741;
  t6777 = t6761 + t6772;
  t5328 = t5318 + t5322;
  t5331 = -0.038575000014*t5328;
  t5336 = t5332 + t5335;
  t5340 = -3.367757e-6*t5336;
  t5342 = -0.5031510000160505*t5321;
  t5351 = -1.9784030000000015e-12 + t5331 + t5340 + t5342;
  t5443 = t5437 + t5440;
  t5446 = -3.367757e-6*t5443;
  t5450 = t5447 + t5322;
  t5452 = -0.5031510000080001*t5450;
  t5454 = -0.03857500001589017*t5321;
  t5457 = 1.1305160000000008e-12 + t5446 + t5452 + t5454;
  t6825 = t5393*t4210;
  t6826 = t5385*t4044;
  t6827 = t6825 + t6826;
  t5490 = t5489 + t5440;
  t5491 = -0.038575000014*t5490;
  t5494 = t5493 + t5335;
  t5496 = -0.5031510000080001*t5494;
  t5500 = -2.18904205e-16*t5321;
  t5501 = 2.826290000000002e-7 + t5491 + t5496 + t5500;
  t6822 = -1.*t340*t5365*t3510;
  t6823 = t5384*t6736;
  t6828 = t5413*t6827;
  t6829 = t6822 + t6823 + t6828;
  t5544 = t5318 + t5541;
  t6833 = -1.*t5459*t340*t3510;
  t6836 = t5470*t6736;
  t6838 = t5476*t6827;
  t6839 = t6833 + t6836 + t6838;
  t5551 = t5332 + t5547;
  t6841 = -1.*t340*t5508*t3510;
  t6842 = t5512*t6736;
  t6844 = t5521*t6827;
  t6850 = t6841 + t6842 + t6844;
  t5559 = t5447 + t5541;
  t5576 = t5437 + t5575;
  t5586 = t5493 + t5547;
  t5604 = t5489 + t5575;
  t5629 = t5619 + t5379;
  t5630 = -1.8134809999999998e-6*t5629;
  t5637 = t5353 + t5633;
  t5639 = -0.281211000004*t5637;
  t5640 = -0.03874900000889869*t5361;
  t5642 = 1.5843479999999999e-12 + t5630 + t5639 + t5640;
  t5648 = t5644 + t5379;
  t5650 = -0.038749000006999997*t5648;
  t5654 = t5651 + t5507;
  t5655 = -0.281211000004*t5654;
  t5657 = -1.1787626499999999e-16*t5361;
  t5660 = 3.9608699999999997e-7 + t5650 + t5655 + t5657;
  t5677 = t5352 + t5633;
  t5678 = -0.038749000006999997*t5677;
  t5681 = t5680 + t5507;
  t5683 = -1.8134809999999998e-6*t5681;
  t5690 = -0.2812110000084994*t5361;
  t5694 = -2.7726089999999997e-12 + t5678 + t5683 + t5690;
  t6906 = -1.*t340*t5742*t3510;
  t6907 = -6.5e-11*t5361*t6736;
  t6909 = t5749*t6827;
  t6911 = t6906 + t6907 + t6909;
  t6916 = 1.000000000049*t340*t5361*t3510;
  t6919 = t5788*t6736;
  t6926 = t5812*t6827;
  t6927 = t6916 + t6919 + t6926;
  t6935 = -1.*t340*t5847*t3510;
  t6940 = t5870*t6736;
  t6942 = -1.000000000016*t5361*t6827;
  t6946 = t6935 + t6940 + t6942;
  t7004 = t3779*t340*t400*t5385;
  t7006 = t5393*t3779*t340*t382;
  t7007 = t7004 + t7006;
  t7017 = -1.*t5393*t3779*t340*t400;
  t7019 = t3779*t340*t5385*t382;
  t7021 = t7017 + t7019;
  t7026 = -1.*t3779*t5365*t20;
  t7028 = t5384*t7007;
  t7034 = t5413*t7021;
  t7035 = t7026 + t7028 + t7034;
  t7039 = -1.*t5459*t3779*t20;
  t7040 = t5470*t7007;
  t7041 = t5476*t7021;
  t7042 = t7039 + t7040 + t7041;
  t7048 = -1.*t3779*t5508*t20;
  t7049 = t5512*t7007;
  t7051 = t5521*t7021;
  t7055 = t7048 + t7049 + t7051;
  t7101 = t5385*t3823;
  t7102 = t5393*t4759;
  t7103 = t7101 + t7102;
  t7109 = -1.*t5385*t4759;
  t7110 = t6478 + t7109;
  t7119 = t5521*t7103;
  t7121 = t5512*t7110;
  t7124 = t7119 + t7121;
  t7127 = t5476*t7103;
  t7129 = t5470*t7110;
  t7138 = t7127 + t7129;
  t7140 = t5413*t7103;
  t7141 = t5384*t7110;
  t7142 = t7140 + t7141;
  t7185 = -1.*t5385*t4917;
  t7188 = t7185 + t7102;
  t7191 = -1.*t5393*t4917;
  t7192 = t7191 + t7109;
  t7198 = t5521*t7188;
  t7201 = t5512*t7192;
  t7202 = t7198 + t7201;
  t7204 = t5476*t7188;
  t7206 = t5470*t7192;
  t7207 = t7204 + t7206;
  t7209 = t5413*t7188;
  t7212 = t5384*t7192;
  t7217 = t7209 + t7212;
  t7267 = t5393*t4917;
  t7269 = t5385*t4759;
  t7272 = t7267 + t7269;
  t7265 = t3779*t340*t5365;
  t7266 = t5384*t7188;
  t7273 = t5413*t7272;
  t7275 = t7265 + t7266 + t7273;
  t7280 = t5459*t3779*t340;
  t7281 = t5470*t7188;
  t7282 = t5476*t7272;
  t7283 = t7280 + t7281 + t7282;
  t7287 = t3779*t340*t5508;
  t7289 = t5512*t7188;
  t7290 = t5521*t7272;
  t7291 = t7287 + t7289 + t7290;
  t7332 = t3779*t340*t5742;
  t7334 = -6.5e-11*t5361*t7188;
  t7335 = t5749*t7272;
  t7336 = t7332 + t7334 + t7335;
  t7340 = -1.000000000049*t3779*t340*t5361;
  t7341 = t5788*t7188;
  t7342 = t5812*t7272;
  t7343 = t7340 + t7341 + t7342;
  t7346 = t3779*t340*t5847;
  t7347 = t5870*t7188;
  t7348 = -1.000000000016*t5361*t7272;
  t7349 = t7346 + t7347 + t7348;
  t7507 = Power(t340,2);
  t7508 = Power(t400,2);
  t7510 = t7507*t7508;
  t7513 = Power(t4210,2);
  t7519 = t7510 + t7513;
  t7521 = 1/t7519;
  t7549 = Cos(var1[9]);
  t7550 = -1.*t7549;
  t7553 = 1. + t7550;
  t7556 = Sin(var1[9]);
  t7557 = -0.15121*t7556;
  t7563 = Cos(var1[12]);
  t7564 = -1.*t7563;
  t7565 = 1. + t7564;
  t7568 = Sin(var1[12]);
  t7569 = 0.15121*t7568;
  t7631 = -0.15121*t7549;
  t7577 = -0.15121*t7553;
  t7578 = t7577 + t7557;
  t7581 = 0.15121*t7565;
  t7585 = t7581 + t7569;
  t7555 = 0.15121*t7553;
  t7559 = t7555 + t7557;
  t7566 = -0.15121*t7565;
  t7573 = t7566 + t7569;
  t7649 = t7549*t4759;
  t7657 = -1.*t7556*t4759;
  t7697 = 0.15121*t7563;
  t7679 = t7563*t4759;
  t7691 = -1.*t7568*t4759;
  p_output1[0]=var2[0] + (t2566*t3156 + t2605*t3189 + t1229*t3247 + t1371*t3304 + t1516*t3330 - 0.03875*(4.e-6*t1662*t3247 + t1162*t3304 + t1111*t3330) + 0.80321*(-4.e-6*t1162*t3247 + t1538*t3304 - 1.*t1162*t3330) + 0.14871*(t1708*t3247 + 4.e-6*t1162*t3304 + 4.e-6*t1662*t3330) + t3226*t340 + t20*t2446*t382 - 1.*t20*t2453*t400)*var2[4] + (t2582 + t2609 + t2693 + t2730 + t2800 + t2837 + t2935 + t2957 - 1.*t2453*t340*t382 - 1.*t2446*t340*t400)*var2[5] + (t2582 + t2609 + t2693 + t2730 + t2800 + t2837 + t2935 + t2957 - 1.*t3013*t340*t382 + t3062*t340*t400)*var2[6] + (t1089*t1229 + t1279*t1371 + t1463*t1516 + 0.80321*(-4.e-6*t1089*t1162 - 1.*t1162*t1463 + t1279*t1538) - 0.03875*(t1162*t1279 + t1111*t1463 + 4.e-6*t1089*t1662) + 0.14871*(4.e-6*t1162*t1279 + 4.e-6*t1463*t1662 + t1089*t1708) + t20*t332 + t538*t650 + t802*t868)*var2[7] + (t1911*t1933 + t1993*t2041 + 0.14871*(-4.e-6*t1162*t1911 - 1.6e-11*t1162*t1993 + 4.e-6*t1111*t2101) - 0.03875*(-1.*t1162*t1911 - 4.e-6*t1162*t1993 + t1111*t2101) + 0.80321*(-1.*t1111*t1911 - 4.e-6*t1111*t1993 - 1.000000000016*t1162*t2101) + t2101*t2114)*var2[8];
  p_output1[1]=var2[1] + (-1.*t3226*t340*t3779 + t2446*t3794 + t2453*t3823 + t2566*t3843 + t2605*t3863 + t1229*t3884 + t1371*t3896 + t1516*t3912 - 0.03875*(4.e-6*t1662*t3884 + t1162*t3896 + t1111*t3912) + 0.80321*(-4.e-6*t1162*t3884 + t1538*t3896 - 1.*t1162*t3912) + 0.14871*(t1708*t3884 + 4.e-6*t1162*t3896 + 4.e-6*t1662*t3912))*var2[3] + (t20*t3226*t3510 + t2566*t3545 + t2605*t3570 + t1229*t3608 + t1371*t3638 + t1516*t3661 - 0.03875*(4.e-6*t1662*t3608 + t1162*t3638 + t1111*t3661) + 0.80321*(-4.e-6*t1162*t3608 + t1538*t3638 - 1.*t1162*t3661) + 0.14871*(t1708*t3608 + 4.e-6*t1162*t3638 + 4.e-6*t1662*t3661) - 1.*t2446*t340*t3510*t382 + t2453*t340*t3510*t400)*var2[4] + (t2446*t4033 + t2453*t4044 + t2566*t4055 + t2605*t4061 + t1229*t4073 + t1371*t4103 + t1516*t4119 - 0.03875*(4.e-6*t1662*t4073 + t1162*t4103 + t1111*t4119) + 0.80321*(-4.e-6*t1162*t4073 + t1538*t4103 - 1.*t1162*t4119) + 0.14871*(t1708*t4073 + 4.e-6*t1162*t4103 + 4.e-6*t1662*t4119))*var2[5] + (t3013*t4044 + t3062*t4210 + t2566*t4214 + t2605*t4219 + t1229*t4228 + t1371*t4243 + t1516*t4248 - 0.03875*(4.e-6*t1662*t4228 + t1162*t4243 + t1111*t4248) + 0.80321*(-4.e-6*t1162*t4228 + t1538*t4243 - 1.*t1162*t4248) + 0.14871*(t1708*t4228 + 4.e-6*t1162*t4243 + 4.e-6*t1662*t4248))*var2[6] + (-1.*t332*t340*t3510 + t1229*t4361 + t1371*t4370 + t1516*t4382 - 0.03875*(4.e-6*t1662*t4361 + t1162*t4370 + t1111*t4382) + 0.80321*(-4.e-6*t1162*t4361 + t1538*t4370 - 1.*t1162*t4382) + 0.14871*(t1708*t4361 + 4.e-6*t1162*t4370 + 4.e-6*t1662*t4382) + t4219*t650 + t4350*t868)*var2[7] + (t1933*t4436 + t2041*t4449 + t2114*t4458 + 0.14871*(-4.e-6*t1162*t4436 - 1.6e-11*t1162*t4449 + 4.e-6*t1111*t4458) + 0.80321*(-1.*t1111*t4436 - 4.e-6*t1111*t4449 - 1.000000000016*t1162*t4458) - 0.03875*(t1111*t4458 + t4478 + t4480))*var2[8];
  p_output1[2]=var2[2] + (-1.*t3226*t340*t3510 + t2446*t4044 + t2453*t4210 + t2566*t4219 + t2605*t4350 + t1516*t4436 + t1229*t4449 + t1371*t4458 + 0.14871*(4.e-6*t1662*t4436 + t1708*t4449 + 4.e-6*t1162*t4458) - 0.03875*(t1111*t4436 + 4.e-6*t1662*t4449 + t1162*t4458) + 0.80321*(t1538*t4458 + t4478 + t4480))*var2[3] + (-1.*t20*t3226*t3779 + t2446*t340*t3779*t382 - 1.*t2453*t340*t3779*t400 + t2566*t4554 + t2605*t4585 + t1229*t4625 + t1371*t4658 + t1516*t4672 - 0.03875*(4.e-6*t1662*t4625 + t1162*t4658 + t1111*t4672) + 0.80321*(-4.e-6*t1162*t4625 + t1538*t4658 - 1.*t1162*t4672) + 0.14871*(t1708*t4625 + 4.e-6*t1162*t4658 + 4.e-6*t1662*t4672))*var2[4] + (t2446*t3823 + t2453*t4759 + t2566*t4785 + t2605*t4802 + t1229*t4821 + t1371*t4838 + t1516*t4851 - 0.03875*(4.e-6*t1662*t4821 + t1162*t4838 + t1111*t4851) + 0.80321*(-4.e-6*t1162*t4821 + t1538*t4838 - 1.*t1162*t4851) + 0.14871*(t1708*t4821 + 4.e-6*t1162*t4838 + 4.e-6*t1662*t4851))*var2[5] + (t3013*t4759 + t3062*t4917 + t2566*t4924 + t2605*t4934 + t1229*t4946 + t1371*t4963 + t1516*t4978 - 0.03875*(4.e-6*t1662*t4946 + t1162*t4963 + t1111*t4978) + 0.80321*(-4.e-6*t1162*t4946 + t1538*t4963 - 1.*t1162*t4978) + 0.14871*(t1708*t4946 + 4.e-6*t1162*t4963 + 4.e-6*t1662*t4978))*var2[6] + (t332*t340*t3779 + t1229*t5082 + t1371*t5087 + t1516*t5103 - 0.03875*(4.e-6*t1662*t5082 + t1162*t5087 + t1111*t5103) + 0.80321*(-4.e-6*t1162*t5082 + t1538*t5087 - 1.*t1162*t5103) + 0.14871*(t1708*t5082 + 4.e-6*t1162*t5087 + 4.e-6*t1662*t5103) + t4934*t650 + t5073*t868)*var2[7] + (t1933*t5168 + t2041*t5183 + t2114*t5192 + 0.14871*(-4.e-6*t1162*t5168 - 1.6e-11*t1162*t5183 + 4.e-6*t1111*t5192) - 0.03875*(-1.*t1162*t5168 - 4.e-6*t1162*t5183 + t1111*t5192) + 0.80321*(-1.*t1111*t5168 - 4.e-6*t1111*t5183 - 1.000000000016*t1162*t5192))*var2[8];
  p_output1[3]=var2[0] + (t20*t382*t6013 - 1.*t20*t400*t6026 + t340*t6279 + t6139*t6297 + t6081*t6302 + t5845*t6311 + t5781*t6319 + t5740*t6326 - 0.80315*(t5923*t6311 + t5914*t6319 + t5901*t6326) - 0.038576*(t5956*t6311 + t5954*t6319 + t5945*t6326) - 0.148715*(t5987*t6311 + t5978*t6319 + t5976*t6326))*var2[4] + (-1.*t340*t400*t6013 - 1.*t340*t382*t6026 + t6083 + t6149 + t6159 + t6175 + t6185 + t6199 + t6214 + t6234)*var2[5] + (t6083 + t6149 + t6159 + t6175 + t6185 + t6199 + t6214 + t6234 + t340*t400*t6242 - 1.*t340*t382*t6245)*var2[15] + (t20*t5642 + t5406*t5660 + t5424*t5694 + t5740*t5754 + t5781*t5822 + t5845*t5894 - 0.80315*(t5754*t5901 + t5822*t5914 + t5894*t5923) - 0.038576*(t5754*t5945 + t5822*t5954 + t5894*t5956) - 0.148715*(t5754*t5976 + t5822*t5978 + t5894*t5987))*var2[16] + (t5351*t5435 + t5457*t5484 + t5501*t5526 - 0.80315*(-1.000000000016*t5321*t5435 + t5484*t5544 + t5526*t5551) - 0.038576*(-1.000000000049*t5321*t5484 + t5435*t5559 + t5526*t5576) - 0.148715*(-6.5e-11*t5321*t5526 + t5435*t5586 + t5484*t5604))*var2[17];
  p_output1[4]=var2[1] + (t3794*t6013 + t3823*t6026 - 1.*t340*t3779*t6279 + t6139*t6473 + t6081*t6480 + t5845*t6492 + t5781*t6503 + t5740*t6510 - 0.80315*(t5923*t6492 + t5914*t6503 + t5901*t6510) - 0.038576*(t5956*t6492 + t5954*t6503 + t5945*t6510) - 0.148715*(t5987*t6492 + t5978*t6503 + t5976*t6510))*var2[3] + (-1.*t340*t3510*t382*t6013 + t340*t3510*t400*t6026 + t20*t3510*t6279 + t6139*t6385 + t6081*t6393 + t5845*t6408 + t5781*t6419 + t5740*t6426 - 0.80315*(t5923*t6408 + t5914*t6419 + t5901*t6426) - 0.038576*(t5956*t6408 + t5954*t6419 + t5945*t6426) - 0.148715*(t5987*t6408 + t5978*t6419 + t5976*t6426))*var2[4] + (t4033*t6013 + t4044*t6026 + t6081*t6586 + t6139*t6601 + t5740*t6611 + t5781*t6621 + t5845*t6630 - 0.80315*(t5901*t6611 + t5914*t6621 + t5923*t6630) - 0.038576*(t5945*t6611 + t5954*t6621 + t5956*t6630) - 0.148715*(t5976*t6611 + t5978*t6621 + t5987*t6630))*var2[5] + (t4210*t6242 + t4044*t6245 + t6081*t6736 + t6139*t6741 + t5740*t6750 + t5781*t6757 + t5845*t6777 - 0.80315*(t5901*t6750 + t5914*t6757 + t5923*t6777) - 0.038576*(t5945*t6750 + t5954*t6757 + t5956*t6777) - 0.148715*(t5976*t6750 + t5978*t6757 + t5987*t6777))*var2[15] + (-1.*t340*t3510*t5642 + t5660*t6736 + t5694*t6827 + t5740*t6911 + t5781*t6927 + t5845*t6946 - 0.80315*(t5901*t6911 + t5914*t6927 + t5923*t6946) - 0.038576*(t5945*t6911 + t5954*t6927 + t5956*t6946) - 0.148715*(t5976*t6911 + t5978*t6927 + t5987*t6946))*var2[16] + (t5351*t6829 + t5457*t6839 + t5501*t6850 - 0.148715*(t5586*t6829 + t5604*t6839 - 6.5e-11*t5321*t6850) - 0.80315*(-1.000000000016*t5321*t6829 + t5544*t6839 + t5551*t6850) - 0.038576*(t5559*t6829 - 1.000000000049*t5321*t6839 + t5576*t6850))*var2[17];
  p_output1[5]=var2[2] + (t4044*t6013 + t4210*t6026 - 1.*t340*t3510*t6279 + t6139*t6736 + t6081*t6827 + t5845*t6829 + t5781*t6839 + t5740*t6850 - 0.80315*(t5923*t6829 + t5914*t6839 + t5901*t6850) - 0.038576*(t5956*t6829 + t5954*t6839 + t5945*t6850) - 0.148715*(t5987*t6829 + t5978*t6839 + t5976*t6850))*var2[3] + (t340*t3779*t382*t6013 - 1.*t340*t3779*t400*t6026 - 1.*t20*t3779*t6279 + t6139*t7007 + t6081*t7021 + t5845*t7035 + t5781*t7042 + t5740*t7055 - 0.80315*(t5923*t7035 + t5914*t7042 + t5901*t7055) - 0.038576*(t5956*t7035 + t5954*t7042 + t5945*t7055) - 0.148715*(t5987*t7035 + t5978*t7042 + t5976*t7055))*var2[4] + (t3823*t6013 + t4759*t6026 + t6081*t7103 + t6139*t7110 + t5740*t7124 + t5781*t7138 + t5845*t7142 - 0.80315*(t5901*t7124 + t5914*t7138 + t5923*t7142) - 0.038576*(t5945*t7124 + t5954*t7138 + t5956*t7142) - 0.148715*(t5976*t7124 + t5978*t7138 + t5987*t7142))*var2[5] + (t4917*t6242 + t4759*t6245 + t6081*t7188 + t6139*t7192 + t5740*t7202 + t5781*t7207 + t5845*t7217 - 0.80315*(t5901*t7202 + t5914*t7207 + t5923*t7217) - 0.038576*(t5945*t7202 + t5954*t7207 + t5956*t7217) - 0.148715*(t5976*t7202 + t5978*t7207 + t5987*t7217))*var2[15] + (t340*t3779*t5642 + t5660*t7188 + t5694*t7272 + t5740*t7336 + t5781*t7343 + t5845*t7349 - 0.80315*(t5901*t7336 + t5914*t7343 + t5923*t7349) - 0.038576*(t5945*t7336 + t5954*t7343 + t5956*t7349) - 0.148715*(t5976*t7336 + t5978*t7343 + t5987*t7349))*var2[16] + (t5351*t7275 + t5457*t7283 + t5501*t7291 - 0.148715*(t5586*t7275 + t5604*t7283 - 6.5e-11*t5321*t7291) - 0.80315*(-1.000000000016*t5321*t7275 + t5544*t7283 + t5551*t7291) - 0.038576*(t5559*t7275 - 1.000000000049*t5321*t7283 + t5576*t7291))*var2[17];
  p_output1[6]=var2[1] + (0.024028*t340*t3779 - 0.002264*t3794 + 0.00183*t3823)*var2[3] + (-0.024028*t20*t3510 + 0.002264*t340*t3510*t382 + 0.00183*t340*t3510*t400)*var2[4] + (-0.002264*t4033 + 0.00183*t4044)*var2[5];
  p_output1[7]=var2[2] + (0.024028*t340*t3510 - 0.002264*t4044 + 0.00183*t4210)*var2[3] + (0.024028*t20*t3779 - 0.002264*t340*t3779*t382 - 0.00183*t340*t3779*t400)*var2[4] + (-0.002264*t3823 + 0.00183*t4759)*var2[5];
  p_output1[8]=t340*t3823*t400*t7521*var2[3] + (-1.*t20*t400*t4033*t7521 + t3510*t7507*t7508*t7521)*var2[4] + (-1.*t340*t382*t4033*t7521 + t340*t400*t4044*t7521)*var2[5];
  p_output1[9]=(0.15121*(t4210*t7549 + t4044*t7556) - 0.15121*(t4044*t7549 - 1.*t4210*t7556) + t4210*t7559 + 0.15121*(t4210*t7563 + t4044*t7568) - 0.15121*(t4044*t7563 - 1.*t4210*t7568) - 1.*t4210*t7573 + t4044*t7578 - 1.*t4044*t7585)*var2[3] + (0.15121*(-1.*t340*t3779*t400*t7549 + t340*t3779*t382*t7556) - 0.15121*(t340*t3779*t382*t7549 + t340*t3779*t400*t7556) - 1.*t340*t3779*t400*t7559 + 0.15121*(-1.*t340*t3779*t400*t7563 + t340*t3779*t382*t7568) - 0.15121*(t340*t3779*t382*t7563 + t340*t3779*t400*t7568) + t340*t3779*t400*t7573 + t340*t3779*t382*t7578 - 1.*t340*t3779*t382*t7585)*var2[4] + (t4759*t7559 - 1.*t4759*t7573 + t3823*t7578 - 1.*t3823*t7585 + 0.15121*(t3823*t7556 + t7649) - 0.15121*(t3823*t7549 + t7657) + 0.15121*(t3823*t7568 + t7679) - 0.15121*(t3823*t7563 + t7691))*var2[5] + (t4917*(0.15121*t7556 + t7631) + t4759*(t7557 + t7631) + 0.15121*(-1.*t4917*t7556 + t7649) - 0.15121*(-1.*t4917*t7549 + t7657))*var2[9] + (0.15121*(-1.*t4917*t7568 + t7679) - 0.15121*(-1.*t4917*t7563 + t7691) - 1.*t4917*(-0.15121*t7568 + t7697) - 1.*t4759*(t7569 + t7697))*var2[12];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "d1ya_position_DiagonalStance.hh"

namespace SymFunction
{

void d1ya_position_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
