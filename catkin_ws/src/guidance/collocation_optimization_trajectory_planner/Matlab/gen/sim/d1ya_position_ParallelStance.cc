/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:55 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t472;
  double t197;
  double t265;
  double t566;
  double t473;
  double t489;
  double t568;
  double t666;
  double t682;
  double t716;
  double t163;
  double t548;
  double t575;
  double t615;
  double t998;
  double t1007;
  double t1013;
  double t1036;
  double t1202;
  double t1212;
  double t1234;
  double t1291;
  double t1378;
  double t1395;
  double t1413;
  double t1422;
  double t845;
  double t849;
  double t872;
  double t892;
  double t1518;
  double t1688;
  double t1806;
  double t1820;
  double t1850;
  double t1886;
  double t1895;
  double t1917;
  double t1676;
  double t1718;
  double t1726;
  double t1728;
  double t1964;
  double t2000;
  double t2013;
  double t2016;
  double t2027;
  double t2029;
  double t2269;
  double t2300;
  double t2330;
  double t2393;
  double t2450;
  double t2456;
  double t897;
  double t1019;
  double t1119;
  double t1125;
  double t1311;
  double t1313;
  double t1334;
  double t1425;
  double t1429;
  double t1432;
  double t1450;
  double t1457;
  double t1464;
  double t2722;
  double t2731;
  double t2736;
  double t2704;
  double t2711;
  double t2713;
  double t2758;
  double t2759;
  double t2760;
  double t1537;
  double t1563;
  double t2368;
  double t2552;
  double t2560;
  double t2571;
  double t2607;
  double t2623;
  double t2652;
  double t2674;
  double t2680;
  double t2700;
  double t2715;
  double t2746;
  double t2761;
  double t2762;
  double t2763;
  double t2787;
  double t2790;
  double t2803;
  double t2809;
  double t2898;
  double t2911;
  double t2920;
  double t2928;
  double t2930;
  double t2970;
  double t2979;
  double t2982;
  double t2993;
  double t2335;
  double t2338;
  double t2378;
  double t3146;
  double t3153;
  double t3158;
  double t3165;
  double t3172;
  double t3204;
  double t3297;
  double t3311;
  double t3315;
  double t3320;
  double t3413;
  double t3415;
  double t3422;
  double t3426;
  double t3367;
  double t3378;
  double t3386;
  double t3393;
  double t3660;
  double t3227;
  double t3232;
  double t3245;
  double t3249;
  double t3672;
  double t3679;
  double t3681;
  double t3691;
  double t3693;
  double t3699;
  double t3735;
  double t3748;
  double t3774;
  double t3776;
  double t3866;
  double t3879;
  double t3881;
  double t3885;
  double t3800;
  double t3801;
  double t3819;
  double t3825;
  double t4015;
  double t4003;
  double t4017;
  double t4036;
  double t4060;
  double t4079;
  double t4091;
  double t4111;
  double t4115;
  double t4122;
  double t4128;
  double t4133;
  double t4134;
  double t4144;
  double t4145;
  double t4150;
  double t4156;
  double t4168;
  double t4184;
  double t4189;
  double t4190;
  double t4159;
  double t4161;
  double t4162;
  double t4164;
  double t4285;
  double t4288;
  double t4289;
  double t4293;
  double t4294;
  double t4299;
  double t4311;
  double t4313;
  double t4314;
  double t4317;
  double t4319;
  double t4321;
  double t4343;
  double t4345;
  double t4355;
  double t4325;
  double t4337;
  double t4339;
  double t4360;
  double t4362;
  double t4363;
  double t3031;
  double t3036;
  double t3057;
  double t3060;
  double t4453;
  double t4454;
  double t4467;
  double t4481;
  double t4484;
  double t4486;
  double t4487;
  double t4496;
  double t4503;
  double t4504;
  double t4491;
  double t4492;
  double t4493;
  double t4513;
  double t4514;
  double t4515;
  double t198;
  double t386;
  double t427;
  double t628;
  double t633;
  double t651;
  double t775;
  double t809;
  double t818;
  double t4576;
  double t4578;
  double t4579;
  double t4588;
  double t4589;
  double t4590;
  double t4591;
  double t4598;
  double t4602;
  double t4604;
  double t4608;
  double t4581;
  double t4583;
  double t4584;
  double t4586;
  double t1761;
  double t1764;
  double t1783;
  double t1928;
  double t1930;
  double t1950;
  double t2032;
  double t2076;
  double t2077;
  double t4666;
  double t4667;
  double t4671;
  double t4678;
  double t4645;
  double t4648;
  double t4655;
  double t4663;
  double t4686;
  double t4688;
  double t4727;
  double t4731;
  double t4732;
  double t4734;
  double t4735;
  double t4736;
  double t4742;
  double t4743;
  double t4744;
  double t4752;
  double t4768;
  double t4769;
  double t4771;
  double t4773;
  double t4755;
  double t4760;
  double t4761;
  double t4762;
  double t4806;
  double t4810;
  double t4811;
  double t4814;
  double t4816;
  double t4824;
  double t4828;
  double t4829;
  double t4845;
  double t4856;
  double t4857;
  double t4836;
  double t4837;
  double t4842;
  double t4865;
  double t4867;
  double t4868;
  double t4918;
  double t4923;
  double t4926;
  double t4930;
  double t4931;
  double t4939;
  double t4947;
  double t4966;
  double t4968;
  double t4971;
  double t4953;
  double t4962;
  double t4963;
  double t4978;
  double t4979;
  double t4981;
  double t5022;
  double t5027;
  double t5028;
  double t5041;
  double t5042;
  double t5043;
  double t5045;
  double t5047;
  double t5048;
  double t5050;
  double t5032;
  double t5033;
  double t5035;
  double t5037;
  double t5096;
  double t5097;
  double t5100;
  double t5101;
  double t5086;
  double t5088;
  double t5090;
  double t5091;
  double t5105;
  double t5106;
  double t4706;
  double t4708;
  double t5244;
  double t5250;
  double t5265;
  double t5254;
  double t5286;
  double t5298;
  double t5296;
  double t5328;
  double t5329;
  double t5333;
  double t5340;
  double t5273;
  double t5297;
  double t5299;
  double t5300;
  double t5281;
  double t5316;
  double t5317;
  double t5323;
  double t5338;
  double t5264;
  double t5382;
  double t5440;
  double t5362;
  double t5303;
  double t5475;
  double t5309;
  double t5402;
  double t5503;
  double t5386;
  double t5387;
  double t5401;
  double t5414;
  double t5415;
  double t5416;
  double t5488;
  double t5455;
  double t5465;
  double t5470;
  double t5477;
  double t5478;
  double t5480;
  double t5514;
  double t5521;
  double t5525;
  double t5528;
  double t5529;
  double t5535;
  double t5342;
  double t5538;
  double t5370;
  double t5602;
  double t5606;
  double t5431;
  double t5560;
  double t5677;
  double t5700;
  double t5663;
  double t5734;
  double t5735;
  double t5680;
  double t5727;
  double t5687;
  double t5695;
  double t5698;
  double t5701;
  double t5702;
  double t5703;
  double t5704;
  double t5714;
  double t5715;
  double t5736;
  double t5737;
  double t5739;
  double t5741;
  double t5743;
  double t5745;
  double t5747;
  double t5749;
  double t5718;
  double t5780;
  double t5783;
  double t5785;
  double t5788;
  double t5789;
  double t5792;
  double t5794;
  double t5795;
  double t5669;
  double t5818;
  double t5760;
  double t5872;
  double t5876;
  double t5880;
  double t5907;
  double t5327;
  double t5334;
  double t5343;
  double t5346;
  double t5372;
  double t5375;
  double t5381;
  double t5971;
  double t5972;
  double t5973;
  double t5483;
  double t5487;
  double t5496;
  double t5497;
  double t5509;
  double t5511;
  double t5513;
  double t5423;
  double t5428;
  double t5434;
  double t5436;
  double t5444;
  double t5446;
  double t5454;
  double t5624;
  double t5982;
  double t5988;
  double t5989;
  double t5634;
  double t5997;
  double t5998;
  double t6002;
  double t5630;
  double t5632;
  double t6009;
  double t6015;
  double t6018;
  double t5548;
  double t5577;
  double t5581;
  double t5563;
  double t5593;
  double t5595;
  double t5616;
  double t5608;
  double t6057;
  double t5895;
  double t5896;
  double t5898;
  double t5899;
  double t5903;
  double t5911;
  double t5920;
  double t5924;
  double t5926;
  double t5939;
  double t5941;
  double t5942;
  double t5946;
  double t5947;
  double t5959;
  double t5960;
  double t5962;
  double t5979;
  double t5992;
  double t6006;
  double t6019;
  double t6020;
  double t6021;
  double t6023;
  double t6027;
  double t6029;
  double t6035;
  double t6039;
  double t6041;
  double t6043;
  double t6044;
  double t6048;
  double t6049;
  double t6050;
  double t6052;
  double t6054;
  double t5889;
  double t5891;
  double t5879;
  double t5883;
  double t6113;
  double t6118;
  double t6122;
  double t6126;
  double t6128;
  double t6129;
  double t6133;
  double t6134;
  double t6135;
  double t6137;
  double t6141;
  double t6142;
  double t6147;
  double t6148;
  double t6152;
  double t6153;
  double t6154;
  double t6156;
  double t6086;
  double t6091;
  double t6097;
  double t6100;
  double t6101;
  double t6104;
  double t6106;
  double t6270;
  double t6271;
  double t6272;
  double t6274;
  double t6275;
  double t6276;
  double t6281;
  double t6283;
  double t6285;
  double t6286;
  double t6288;
  double t6296;
  double t6300;
  double t6306;
  double t6310;
  double t6313;
  double t6314;
  double t6321;
  double t6416;
  double t6418;
  double t6422;
  double t6427;
  double t6428;
  double t6429;
  double t6433;
  double t6434;
  double t6435;
  double t6436;
  double t6445;
  double t6447;
  double t6455;
  double t6457;
  double t6466;
  double t6467;
  double t6468;
  double t6470;
  double t6562;
  double t6568;
  double t6569;
  double t6573;
  double t6580;
  double t6583;
  double t6591;
  double t6592;
  double t6594;
  double t6596;
  double t6597;
  double t6598;
  double t6603;
  double t6605;
  double t6607;
  double t6059;
  double t6063;
  double t6069;
  double t6709;
  double t6710;
  double t6723;
  double t6729;
  double t6734;
  double t6737;
  double t6744;
  double t6752;
  double t6754;
  double t6756;
  double t6765;
  double t6766;
  double t6771;
  double t5255;
  double t5259;
  double t5266;
  double t5268;
  double t5269;
  double t5270;
  double t5276;
  double t5279;
  double t5287;
  double t5288;
  double t5292;
  double t5294;
  double t5305;
  double t5308;
  double t5310;
  double t5311;
  double t5314;
  double t5315;
  double t6846;
  double t6851;
  double t6860;
  double t6872;
  double t6875;
  double t6876;
  double t6884;
  double t6887;
  double t6889;
  double t6891;
  double t6894;
  double t6898;
  double t6902;
  double t6903;
  double t6904;
  double t5666;
  double t5667;
  double t5670;
  double t5671;
  double t5675;
  double t5676;
  double t5721;
  double t5725;
  double t5728;
  double t5730;
  double t5731;
  double t5732;
  double t5756;
  double t5757;
  double t5768;
  double t5769;
  double t5773;
  double t5778;
  double t5797;
  double t6945;
  double t6947;
  double t6948;
  double t6949;
  double t6960;
  double t6967;
  double t6968;
  double t6972;
  double t5803;
  double t6975;
  double t6976;
  double t6978;
  double t6979;
  double t5812;
  double t5819;
  double t5833;
  double t5841;
  double t7030;
  double t7031;
  double t7033;
  double t7036;
  double t7041;
  double t7043;
  double t7045;
  double t7050;
  double t7051;
  double t7056;
  double t7061;
  double t7062;
  double t7066;
  double t7069;
  double t7087;
  double t7092;
  double t7098;
  double t7103;
  double t7160;
  double t7165;
  double t7171;
  double t7179;
  double t7183;
  double t7191;
  double t7192;
  double t7197;
  double t7201;
  double t7202;
  double t7203;
  double t7207;
  double t7210;
  double t7211;
  double t7263;
  double t7271;
  double t7274;
  double t7276;
  double t7285;
  double t7286;
  double t7289;
  double t7297;
  double t7299;
  double t7300;
  double t7306;
  double t7307;
  double t7308;
  double t7357;
  double t7358;
  double t7359;
  double t7368;
  double t7370;
  double t7372;
  double t7375;
  double t7378;
  double t7382;
  double t7383;
  double t7384;
  double t7386;
  double t7387;
  double t7388;
  double t7391;
  double t7421;
  double t7423;
  double t7424;
  double t7426;
  double t7428;
  double t7429;
  double t7433;
  double t7434;
  double t7438;
  double t7440;
  double t7441;
  double t7443;
  double t7583;
  double t7584;
  double t7587;
  double t7588;
  double t7592;
  double t7594;
  double t7617;
  double t7618;
  double t7620;
  double t7624;
  double t7626;
  double t7629;
  double t7630;
  double t7634;
  double t7635;
  double t7638;
  double t7689;
  double t7648;
  double t7651;
  double t7658;
  double t7659;
  double t7622;
  double t7627;
  double t7640;
  double t7644;
  double t7716;
  double t7722;
  double t7751;
  double t7762;
  t472 = Cos(var1[4]);
  t197 = Cos(var1[7]);
  t265 = Sin(var1[7]);
  t566 = Cos(var1[5]);
  t473 = Cos(var1[6]);
  t489 = Sin(var1[5]);
  t568 = Sin(var1[6]);
  t666 = t472*t566*t473;
  t682 = -1.*t472*t489*t568;
  t716 = t666 + t682;
  t163 = Sin(var1[4]);
  t548 = -1.*t472*t473*t489;
  t575 = -1.*t472*t566*t568;
  t615 = t548 + t575;
  t998 = Cos(var1[8]);
  t1007 = -1.*t998;
  t1013 = 1. + t1007;
  t1036 = Sin(var1[8]);
  t1202 = -1.*t197*t163;
  t1212 = -4.e-6*t197*t615;
  t1234 = -1.000000000016*t716*t265;
  t1291 = t1202 + t1212 + t1234;
  t1378 = t197*t716;
  t1395 = -1.*t163*t265;
  t1413 = -4.e-6*t615*t265;
  t1422 = t1378 + t1395 + t1413;
  t845 = 4.e-6*t197*t716;
  t849 = -4.e-6*t163*t265;
  t872 = -1.6e-11*t615*t265;
  t892 = t845 + t849 + t872;
  t1518 = -1. + t998;
  t1688 = -1. + t197;
  t1806 = 4.e-6*t1688*t163;
  t1820 = 1.6e-11*t1688;
  t1850 = 1. + t1820;
  t1886 = t1850*t615;
  t1895 = 4.e-6*t716*t265;
  t1917 = t1806 + t1886 + t1895;
  t1676 = t197*t163;
  t1718 = 4.e-6*t1688*t615;
  t1726 = t716*t265;
  t1728 = t1676 + t1718 + t1726;
  t1964 = -1.*t197;
  t2000 = 1. + t1964;
  t2013 = -1.000000000016*t2000;
  t2016 = 1. + t2013;
  t2027 = t2016*t716;
  t2029 = t2027 + t1395 + t1413;
  t2269 = -1.*t473;
  t2300 = 1. + t2269;
  t2330 = 0.15121*t2300;
  t2393 = -1.*t472*t566*t473;
  t2450 = t472*t489*t568;
  t2456 = t2393 + t2450;
  t897 = -1.284e-8*var1[8];
  t1019 = -1.5499600000248e-7*t1013;
  t1119 = 2.012840000032e-6*t1036;
  t1125 = t897 + t1019 + t1119;
  t1311 = 0.503210000016051*t1013;
  t1313 = 0.03874900000062*t1036;
  t1334 = t1311 + t1313;
  t1425 = 5.136e-14*var1[8];
  t1429 = -0.03874900000062*t1013;
  t1432 = 0.503210000008*t1036;
  t1450 = t1425 + t1429 + t1432;
  t1457 = -1.000000000016*t1013;
  t1464 = 1. + t1457;
  t2722 = t2016*t615;
  t2731 = -4.e-6*t2456*t265;
  t2736 = t2722 + t2731;
  t2704 = t1850*t2456;
  t2711 = 4.e-6*t615*t265;
  t2713 = t2704 + t2711;
  t2758 = 4.e-6*t1688*t2456;
  t2759 = t615*t265;
  t2760 = t2758 + t2759;
  t1537 = 1.6e-11*t1518;
  t1563 = 1. + t1537;
  t2368 = 0.15121*t568;
  t2552 = -1.2484e-7*var1[7];
  t2560 = -1.5499600000248e-7*t2000;
  t2571 = 1.124840000016e-6*t265;
  t2607 = t2552 + t2560 + t2571;
  t2623 = t2456*t2607;
  t2652 = 0.281210000008499*t2000;
  t2674 = 0.03874900000062*t265;
  t2680 = t2652 + t2674;
  t2700 = t615*t2680;
  t2715 = t2713*t1125;
  t2746 = t2736*t1334;
  t2761 = t2760*t1450;
  t2762 = t1464*t2736;
  t2763 = -4.e-6*t2713*t1036;
  t2787 = -1.*t2760*t1036;
  t2790 = t2762 + t2763 + t2787;
  t2803 = 0.80321*t2790;
  t2809 = t1563*t2713;
  t2898 = 4.e-6*t1518*t2760;
  t2911 = 4.e-6*t2736*t1036;
  t2920 = t2809 + t2898 + t2911;
  t2928 = 0.14871*t2920;
  t2930 = 4.e-6*t1518*t2713;
  t2970 = t998*t2760;
  t2979 = t2736*t1036;
  t2982 = t2930 + t2970 + t2979;
  t2993 = -0.03875*t2982;
  t2335 = -0.15121*t568;
  t2338 = t2330 + t2335;
  t2378 = t2330 + t2368;
  t3146 = t473*t163*t489;
  t3153 = t566*t163*t568;
  t3158 = t3146 + t3153;
  t3165 = -1.*t566*t473*t163;
  t3172 = t163*t489*t568;
  t3204 = t3165 + t3172;
  t3297 = 4.e-6*t472*t1688;
  t3311 = t1850*t3158;
  t3315 = 4.e-6*t3204*t265;
  t3320 = t3297 + t3311 + t3315;
  t3413 = t472*t197;
  t3415 = 4.e-6*t1688*t3158;
  t3422 = t3204*t265;
  t3426 = t3413 + t3415 + t3422;
  t3367 = t2016*t3204;
  t3378 = -1.*t472*t265;
  t3386 = -4.e-6*t3158*t265;
  t3393 = t3367 + t3378 + t3386;
  t3660 = Sin(var1[3]);
  t3227 = 4.9936e-13*var1[7];
  t3232 = -0.03874900000062*t2000;
  t3245 = 0.281210000004*t265;
  t3249 = t3227 + t3232 + t3245;
  t3672 = -1.*t472*t473*t3660*t489;
  t3679 = -1.*t472*t566*t3660*t568;
  t3681 = t3672 + t3679;
  t3691 = t472*t566*t473*t3660;
  t3693 = -1.*t472*t3660*t489*t568;
  t3699 = t3691 + t3693;
  t3735 = 4.e-6*t1688*t3660*t163;
  t3748 = t1850*t3681;
  t3774 = 4.e-6*t3699*t265;
  t3776 = t3735 + t3748 + t3774;
  t3866 = t197*t3660*t163;
  t3879 = 4.e-6*t1688*t3681;
  t3881 = t3699*t265;
  t3885 = t3866 + t3879 + t3881;
  t3800 = t2016*t3699;
  t3801 = -1.*t3660*t163*t265;
  t3819 = -4.e-6*t3681*t265;
  t3825 = t3800 + t3801 + t3819;
  t4015 = Cos(var1[3]);
  t4003 = -1.*t566*t3660;
  t4017 = -1.*t4015*t163*t489;
  t4036 = t4003 + t4017;
  t4060 = t4015*t566*t163;
  t4079 = -1.*t3660*t489;
  t4091 = t4060 + t4079;
  t4111 = t473*t4036;
  t4115 = -1.*t4091*t568;
  t4122 = t4111 + t4115;
  t4128 = t473*t4091;
  t4133 = t4036*t568;
  t4134 = t4128 + t4133;
  t4144 = -4.e-6*t4015*t472*t1688;
  t4145 = t1850*t4122;
  t4150 = 4.e-6*t4134*t265;
  t4156 = t4144 + t4145 + t4150;
  t4168 = -1.*t4015*t472*t197;
  t4184 = 4.e-6*t1688*t4122;
  t4189 = t4134*t265;
  t4190 = t4168 + t4184 + t4189;
  t4159 = t2016*t4134;
  t4161 = t4015*t472*t265;
  t4162 = -4.e-6*t4122*t265;
  t4164 = t4159 + t4161 + t4162;
  t4285 = -1.*t566*t3660*t163;
  t4288 = -1.*t4015*t489;
  t4289 = t4285 + t4288;
  t4293 = t4015*t566;
  t4294 = -1.*t3660*t163*t489;
  t4299 = t4293 + t4294;
  t4311 = t473*t4289;
  t4313 = -1.*t4299*t568;
  t4314 = t4311 + t4313;
  t4317 = t473*t4299;
  t4319 = t4289*t568;
  t4321 = t4317 + t4319;
  t4343 = t2016*t4321;
  t4345 = -4.e-6*t4314*t265;
  t4355 = t4343 + t4345;
  t4325 = t1850*t4314;
  t4337 = 4.e-6*t4321*t265;
  t4339 = t4325 + t4337;
  t4360 = 4.e-6*t1688*t4314;
  t4362 = t4321*t265;
  t4363 = t4360 + t4362;
  t3031 = -0.15121*t473;
  t3036 = t3031 + t2368;
  t3057 = 0.15121*t473;
  t3060 = t3057 + t2368;
  t4453 = t566*t3660*t163;
  t4454 = t4015*t489;
  t4467 = t4453 + t4454;
  t4481 = -1.*t473*t4467;
  t4484 = t4481 + t4313;
  t4486 = -1.*t4467*t568;
  t4487 = t4317 + t4486;
  t4496 = t2016*t4487;
  t4503 = -4.e-6*t4484*t265;
  t4504 = t4496 + t4503;
  t4491 = t1850*t4484;
  t4492 = 4.e-6*t4487*t265;
  t4493 = t4491 + t4492;
  t4513 = 4.e-6*t1688*t4484;
  t4514 = t4487*t265;
  t4515 = t4513 + t4514;
  t198 = 0.281210000004*t197;
  t386 = -0.03874900000062*t265;
  t427 = 4.9936e-13 + t198 + t386;
  t628 = 1.124840000016e-6*t197;
  t633 = -1.5499600000248e-7*t265;
  t651 = -1.2484e-7 + t628 + t633;
  t775 = 0.03874900000062*t197;
  t809 = 0.281210000008499*t265;
  t818 = t775 + t809;
  t4576 = t473*t4467;
  t4578 = t4299*t568;
  t4579 = t4576 + t4578;
  t4588 = t472*t197*t3660;
  t4589 = -4.e-6*t197*t4487;
  t4590 = -1.000000000016*t4579*t265;
  t4591 = t4588 + t4589 + t4590;
  t4598 = t197*t4579;
  t4602 = t472*t3660*t265;
  t4604 = -4.e-6*t4487*t265;
  t4608 = t4598 + t4602 + t4604;
  t4581 = 4.e-6*t197*t4579;
  t4583 = 4.e-6*t472*t3660*t265;
  t4584 = -1.6e-11*t4487*t265;
  t4586 = t4581 + t4583 + t4584;
  t1761 = 0.503210000008*t998;
  t1764 = -0.03874900000062*t1036;
  t1783 = 5.136e-14 + t1761 + t1764;
  t1928 = 2.012840000032e-6*t998;
  t1930 = -1.5499600000248e-7*t1036;
  t1950 = -1.284e-8 + t1928 + t1930;
  t2032 = 0.03874900000062*t998;
  t2076 = 0.503210000016051*t1036;
  t2077 = t2032 + t2076;
  t4666 = -4.e-6*t472*t1688*t3660;
  t4667 = t1850*t4487;
  t4671 = 4.e-6*t4579*t265;
  t4678 = t4666 + t4667 + t4671;
  t4645 = -1.*t472*t197*t3660;
  t4648 = 4.e-6*t1688*t4487;
  t4655 = t4579*t265;
  t4663 = t4645 + t4648 + t4655;
  t4686 = t2016*t4579;
  t4688 = t4686 + t4602 + t4604;
  t4727 = t4015*t472*t473*t489;
  t4731 = t4015*t472*t566*t568;
  t4732 = t4727 + t4731;
  t4734 = -1.*t4015*t472*t566*t473;
  t4735 = t4015*t472*t489*t568;
  t4736 = t4734 + t4735;
  t4742 = -4.e-6*t4015*t1688*t163;
  t4743 = t1850*t4732;
  t4744 = 4.e-6*t4736*t265;
  t4752 = t4742 + t4743 + t4744;
  t4768 = -1.*t4015*t197*t163;
  t4769 = 4.e-6*t1688*t4732;
  t4771 = t4736*t265;
  t4773 = t4768 + t4769 + t4771;
  t4755 = t2016*t4736;
  t4760 = t4015*t163*t265;
  t4761 = -4.e-6*t4732*t265;
  t4762 = t4755 + t4760 + t4761;
  t4806 = t566*t3660;
  t4810 = t4015*t163*t489;
  t4811 = t4806 + t4810;
  t4814 = -1.*t4811*t568;
  t4816 = t4128 + t4814;
  t4824 = t473*t4811;
  t4828 = t4091*t568;
  t4829 = t4824 + t4828;
  t4845 = t2016*t4829;
  t4856 = -4.e-6*t4816*t265;
  t4857 = t4845 + t4856;
  t4836 = t1850*t4816;
  t4837 = 4.e-6*t4829*t265;
  t4842 = t4836 + t4837;
  t4865 = 4.e-6*t1688*t4816;
  t4867 = t4829*t265;
  t4868 = t4865 + t4867;
  t4918 = -1.*t4015*t566*t163;
  t4923 = t3660*t489;
  t4926 = t4918 + t4923;
  t4930 = -1.*t473*t4926;
  t4931 = t4930 + t4814;
  t4939 = -1.*t4926*t568;
  t4947 = t4824 + t4939;
  t4966 = t2016*t4947;
  t4968 = -4.e-6*t4931*t265;
  t4971 = t4966 + t4968;
  t4953 = t1850*t4931;
  t4962 = 4.e-6*t4947*t265;
  t4963 = t4953 + t4962;
  t4978 = 4.e-6*t1688*t4931;
  t4979 = t4947*t265;
  t4981 = t4978 + t4979;
  t5022 = t473*t4926;
  t5027 = t4811*t568;
  t5028 = t5022 + t5027;
  t5041 = -4.e-6*t197*t4947;
  t5042 = -1.000000000016*t5028*t265;
  t5043 = t4168 + t5041 + t5042;
  t5045 = t197*t5028;
  t5047 = -1.*t4015*t472*t265;
  t5048 = -4.e-6*t4947*t265;
  t5050 = t5045 + t5047 + t5048;
  t5032 = 4.e-6*t197*t5028;
  t5033 = -4.e-6*t4015*t472*t265;
  t5035 = -1.6e-11*t4947*t265;
  t5037 = t5032 + t5033 + t5035;
  t5096 = 4.e-6*t4015*t472*t1688;
  t5097 = t1850*t4947;
  t5100 = 4.e-6*t5028*t265;
  t5101 = t5096 + t5097 + t5100;
  t5086 = t4015*t472*t197;
  t5088 = 4.e-6*t1688*t4947;
  t5090 = t5028*t265;
  t5091 = t5086 + t5088 + t5090;
  t5105 = t2016*t5028;
  t5106 = t5105 + t5047 + t5048;
  t4706 = -4.e-6*t4678*t1036;
  t4708 = -1.*t4663*t1036;
  t5244 = Cos(var1[13]);
  t5250 = Sin(var1[13]);
  t5265 = 4.e-6*t5250;
  t5254 = -2.8e-11*t5250;
  t5286 = 7.e-6*t5250;
  t5298 = Cos(var1[12]);
  t5296 = Sin(var1[12]);
  t5328 = Cos(var1[14]);
  t5329 = -1.*t5328;
  t5333 = 1. + t5329;
  t5340 = Sin(var1[14]);
  t5273 = -7.e-6*t5244;
  t5297 = -1.*t472*t566*t5296;
  t5299 = -1.*t5298*t472*t489;
  t5300 = t5297 + t5299;
  t5281 = 4.e-6*t5244;
  t5316 = t5298*t472*t566;
  t5317 = -1.*t472*t5296*t489;
  t5323 = t5316 + t5317;
  t5338 = 4.e-6*t5333;
  t5264 = 7.e-6*t5244;
  t5382 = -4.e-6*t5250;
  t5440 = -2.8e-11*t5333;
  t5362 = 7.e-6*t5333;
  t5303 = -1.*t5244;
  t5475 = 2.8e-11*t5250;
  t5309 = -4.e-6*t5244;
  t5402 = -7.e-6*t5250;
  t5503 = -4.e-6*t5340;
  t5386 = t5273 + t5382;
  t5387 = t5386*t163;
  t5401 = -6.5e-11*t5250*t5300;
  t5414 = t5281 + t5402;
  t5415 = t5414*t5323;
  t5416 = t5387 + t5401 + t5415;
  t5488 = -1.*t5340;
  t5455 = -1.000000000049*t5250*t163;
  t5465 = t5264 + t5382;
  t5470 = t5465*t5300;
  t5477 = t5244 + t5475;
  t5478 = t5477*t5323;
  t5480 = t5455 + t5470 + t5478;
  t5514 = t5303 + t5475;
  t5521 = t5514*t163;
  t5525 = t5309 + t5402;
  t5528 = t5525*t5300;
  t5529 = -1.000000000016*t5250*t5323;
  t5535 = t5521 + t5528 + t5529;
  t5342 = -7.e-6*t5340;
  t5538 = -7.e-6*t5333;
  t5370 = 4.e-6*t5340;
  t5602 = -1. + t5328;
  t5606 = 4.e-6*t5602;
  t5431 = 7.e-6*t5340;
  t5560 = 2.8e-11*t5333;
  t5677 = 1. + t5303;
  t5700 = -7.e-6*t5677;
  t5663 = -2.8e-11*t5340;
  t5734 = -1. + t5244;
  t5735 = 4.e-6*t5734;
  t5680 = 2.8e-11*t5677;
  t5727 = 4.e-6*t5328;
  t5687 = -1.*t5250;
  t5695 = t5680 + t5687;
  t5698 = t5695*t163;
  t5701 = t5700 + t5382;
  t5702 = t5701*t5300;
  t5703 = -1.000000000016*t5677;
  t5704 = 1. + t5703;
  t5714 = t5704*t5323;
  t5715 = t5698 + t5702 + t5714;
  t5736 = t5735 + t5402;
  t5737 = t5736*t163;
  t5739 = -6.5e-11*t5677;
  t5741 = 1. + t5739;
  t5743 = t5741*t5300;
  t5745 = t5700 + t5265;
  t5747 = t5745*t5323;
  t5749 = t5737 + t5743 + t5747;
  t5718 = -7.e-6*t5328;
  t5780 = -1.000000000049*t5677;
  t5783 = 1. + t5780;
  t5785 = t5783*t163;
  t5788 = t5735 + t5286;
  t5789 = t5788*t5300;
  t5792 = t5680 + t5250;
  t5794 = t5792*t5323;
  t5795 = t5785 + t5789 + t5794;
  t5669 = -4.e-6*t5328;
  t5818 = 2.8e-11*t5340;
  t5760 = 7.e-6*t5328;
  t5872 = -1.*t5298;
  t5876 = 1. + t5872;
  t5880 = 0.15121*t5296;
  t5907 = 7.e-6*t5677;
  t5327 = -2.598649999999999e-7*var1[14];
  t5334 = -2.3905277499999995e-16*t5333;
  t5343 = t5338 + t5342;
  t5346 = -0.038922999986*t5343;
  t5372 = t5362 + t5370;
  t5375 = -0.503149000008*t5372;
  t5381 = t5327 + t5334 + t5346 + t5375;
  t5971 = -1.*t5298*t472*t566;
  t5972 = t472*t5296*t489;
  t5973 = t5971 + t5972;
  t5483 = 1.8190549999999993e-12*var1[14];
  t5487 = -0.5031490000160505*t5333;
  t5496 = t5440 + t5488;
  t5497 = -0.038922999986*t5496;
  t5509 = t5362 + t5503;
  t5511 = -3.6777349999999994e-6*t5509;
  t5513 = t5483 + t5487 + t5497 + t5511;
  t5423 = 1.0394599999999997e-12*var1[14];
  t5428 = -0.03892299998790722*t5333;
  t5434 = t5338 + t5431;
  t5436 = -3.6777349999999994e-6*t5434;
  t5444 = t5440 + t5340;
  t5446 = -0.503149000008*t5444;
  t5454 = t5423 + t5428 + t5436 + t5446;
  t5624 = t5606 + t5431;
  t5982 = t5745*t5300;
  t5988 = t5741*t5973;
  t5989 = t5982 + t5988;
  t5634 = t5560 + t5340;
  t5997 = t5704*t5300;
  t5998 = t5701*t5973;
  t6002 = t5997 + t5998;
  t5630 = -1.000000000049*t5333;
  t5632 = 1. + t5630;
  t6009 = t5792*t5300;
  t6015 = t5788*t5973;
  t6018 = t6009 + t6015;
  t5548 = t5538 + t5503;
  t5577 = -1.000000000016*t5333;
  t5581 = 1. + t5577;
  t5563 = t5560 + t5488;
  t5593 = -6.5e-11*t5333;
  t5595 = 1. + t5593;
  t5616 = t5538 + t5370;
  t5608 = t5606 + t5342;
  t6057 = 0.15121*t5298;
  t5895 = 1.0248489999999998e-12*var1[13];
  t5896 = -0.28120900000849935*t5677;
  t5898 = -2.8e-11*t5677;
  t5899 = t5898 + t5687;
  t5903 = -0.038748999993*t5899;
  t5911 = t5907 + t5382;
  t5920 = -2.123459e-6*t5911;
  t5924 = t5895 + t5896 + t5903 + t5920;
  t5926 = t5924*t5300;
  t5939 = -1.4640699999999997e-7*var1[13];
  t5941 = -1.38024835e-16*t5677;
  t5942 = 4.e-6*t5677;
  t5946 = t5942 + t5402;
  t5947 = -0.038748999993*t5946;
  t5959 = t5907 + t5265;
  t5960 = -0.281209000004*t5959;
  t5962 = t5939 + t5941 + t5947 + t5960;
  t5979 = t5962*t5973;
  t5992 = t5381*t5989;
  t6006 = t5513*t6002;
  t6019 = t5454*t6018;
  t6020 = t5624*t5989;
  t6021 = t5634*t6002;
  t6023 = t5632*t6018;
  t6027 = t6020 + t6021 + t6023;
  t6029 = -0.038924*t6027;
  t6035 = t5548*t5989;
  t6039 = t5581*t6002;
  t6041 = t5563*t6018;
  t6043 = t6035 + t6039 + t6041;
  t6044 = -0.80315*t6043;
  t6048 = t5595*t5989;
  t6049 = t5616*t6002;
  t6050 = t5608*t6018;
  t6052 = t6048 + t6049 + t6050;
  t6054 = 0.148705*t6052;
  t5889 = -0.15121*t5876;
  t5891 = t5889 + t5880;
  t5879 = 0.15121*t5876;
  t5883 = t5879 + t5880;
  t6113 = t566*t5296*t163;
  t6118 = t5298*t163*t489;
  t6122 = t6113 + t6118;
  t6126 = -1.*t5298*t566*t163;
  t6128 = t5296*t163*t489;
  t6129 = t6126 + t6128;
  t6133 = t472*t5695;
  t6134 = t5701*t6122;
  t6135 = t5704*t6129;
  t6137 = t6133 + t6134 + t6135;
  t6141 = t472*t5736;
  t6142 = t5741*t6122;
  t6147 = t5745*t6129;
  t6148 = t6141 + t6142 + t6147;
  t6152 = t5783*t472;
  t6153 = t5788*t6122;
  t6154 = t5792*t6129;
  t6156 = t6152 + t6153 + t6154;
  t6086 = 5.856279999999999e-13*var1[13];
  t6091 = -0.0387489999948987*t5677;
  t6097 = t5942 + t5286;
  t6100 = -2.123459e-6*t6097;
  t6101 = t5898 + t5250;
  t6104 = -0.281209000004*t6101;
  t6106 = t6086 + t6091 + t6100 + t6104;
  t6270 = -1.*t472*t566*t5296*t3660;
  t6271 = -1.*t5298*t472*t3660*t489;
  t6272 = t6270 + t6271;
  t6274 = t5298*t472*t566*t3660;
  t6275 = -1.*t472*t5296*t3660*t489;
  t6276 = t6274 + t6275;
  t6281 = t5695*t3660*t163;
  t6283 = t5701*t6272;
  t6285 = t5704*t6276;
  t6286 = t6281 + t6283 + t6285;
  t6288 = t5736*t3660*t163;
  t6296 = t5741*t6272;
  t6300 = t5745*t6276;
  t6306 = t6288 + t6296 + t6300;
  t6310 = t5783*t3660*t163;
  t6313 = t5788*t6272;
  t6314 = t5792*t6276;
  t6321 = t6310 + t6313 + t6314;
  t6416 = -1.*t5296*t4091;
  t6418 = t5298*t4036;
  t6422 = t6416 + t6418;
  t6427 = t5298*t4091;
  t6428 = t5296*t4036;
  t6429 = t6427 + t6428;
  t6433 = -1.*t4015*t472*t5695;
  t6434 = t5701*t6422;
  t6435 = t5704*t6429;
  t6436 = t6433 + t6434 + t6435;
  t6445 = -1.*t4015*t472*t5736;
  t6447 = t5741*t6422;
  t6455 = t5745*t6429;
  t6457 = t6445 + t6447 + t6455;
  t6466 = -1.*t5783*t4015*t472;
  t6467 = t5788*t6422;
  t6468 = t5792*t6429;
  t6470 = t6466 + t6467 + t6468;
  t6562 = t5296*t4289;
  t6568 = t5298*t4299;
  t6569 = t6562 + t6568;
  t6573 = t5298*t4289;
  t6580 = -1.*t5296*t4299;
  t6583 = t6573 + t6580;
  t6591 = t5745*t6569;
  t6592 = t5741*t6583;
  t6594 = t6591 + t6592;
  t6596 = t5704*t6569;
  t6597 = t5701*t6583;
  t6598 = t6596 + t6597;
  t6603 = t5792*t6569;
  t6605 = t5788*t6583;
  t6607 = t6603 + t6605;
  t6059 = -0.15121*t5296;
  t6063 = t6057 + t6059;
  t6069 = t6057 + t5880;
  t6709 = -1.*t5296*t4467;
  t6710 = t6709 + t6568;
  t6723 = -1.*t5298*t4467;
  t6729 = t6723 + t6580;
  t6734 = t5745*t6710;
  t6737 = t5741*t6729;
  t6744 = t6734 + t6737;
  t6752 = t5704*t6710;
  t6754 = t5701*t6729;
  t6756 = t6752 + t6754;
  t6765 = t5792*t6710;
  t6766 = t5788*t6729;
  t6771 = t6765 + t6766;
  t5255 = t5244 + t5254;
  t5259 = -0.281209000004*t5255;
  t5266 = t5264 + t5265;
  t5268 = -2.123459e-6*t5266;
  t5269 = -0.0387489999948987*t5250;
  t5270 = 5.856279999999999e-13 + t5259 + t5268 + t5269;
  t5276 = t5273 + t5265;
  t5279 = -0.038748999993*t5276;
  t5287 = t5281 + t5286;
  t5288 = -0.281209000004*t5287;
  t5292 = -1.38024835e-16*t5250;
  t5294 = -1.4640699999999997e-7 + t5279 + t5288 + t5292;
  t5305 = t5303 + t5254;
  t5308 = -0.038748999993*t5305;
  t5310 = t5309 + t5286;
  t5311 = -2.123459e-6*t5310;
  t5314 = -0.28120900000849935*t5250;
  t5315 = 1.0248489999999998e-12 + t5308 + t5311 + t5314;
  t6846 = t5298*t4467;
  t6851 = t5296*t4299;
  t6860 = t6846 + t6851;
  t6872 = -1.*t472*t5386*t3660;
  t6875 = -6.5e-11*t5250*t6710;
  t6876 = t5414*t6860;
  t6884 = t6872 + t6875 + t6876;
  t6887 = 1.000000000049*t472*t5250*t3660;
  t6889 = t5465*t6710;
  t6891 = t5477*t6860;
  t6894 = t6887 + t6889 + t6891;
  t6898 = -1.*t472*t5514*t3660;
  t6902 = t5525*t6710;
  t6903 = -1.000000000016*t5250*t6860;
  t6904 = t6898 + t6902 + t6903;
  t5666 = t5329 + t5663;
  t5667 = -0.038922999986*t5666;
  t5670 = t5669 + t5431;
  t5671 = -3.6777349999999994e-6*t5670;
  t5675 = -0.5031490000160505*t5340;
  t5676 = 1.8190549999999993e-12 + t5667 + t5671 + t5675;
  t5721 = t5718 + t5370;
  t5725 = -0.038922999986*t5721;
  t5728 = t5727 + t5431;
  t5730 = -0.503149000008*t5728;
  t5731 = -2.3905277499999995e-16*t5340;
  t5732 = -2.598649999999999e-7 + t5725 + t5730 + t5731;
  t5756 = t5328 + t5663;
  t5757 = -0.503149000008*t5756;
  t5768 = t5760 + t5370;
  t5769 = -3.6777349999999994e-6*t5768;
  t5773 = -0.03892299998790722*t5340;
  t5778 = 1.0394599999999997e-12 + t5757 + t5769 + t5773;
  t5797 = t5727 + t5342;
  t6945 = -1.*t472*t5695*t3660;
  t6947 = t5701*t6710;
  t6948 = t5704*t6860;
  t6949 = t6945 + t6947 + t6948;
  t6960 = -1.*t472*t5736*t3660;
  t6967 = t5741*t6710;
  t6968 = t5745*t6860;
  t6972 = t6960 + t6967 + t6968;
  t5803 = t5718 + t5503;
  t6975 = -1.*t5783*t472*t3660;
  t6976 = t5788*t6710;
  t6978 = t5792*t6860;
  t6979 = t6975 + t6976 + t6978;
  t5812 = t5669 + t5342;
  t5819 = t5329 + t5818;
  t5833 = t5328 + t5818;
  t5841 = t5760 + t5503;
  t7030 = t4015*t472*t566*t5296;
  t7031 = t5298*t4015*t472*t489;
  t7033 = t7030 + t7031;
  t7036 = -1.*t5298*t4015*t472*t566;
  t7041 = t4015*t472*t5296*t489;
  t7043 = t7036 + t7041;
  t7045 = -1.*t4015*t5695*t163;
  t7050 = t5701*t7033;
  t7051 = t5704*t7043;
  t7056 = t7045 + t7050 + t7051;
  t7061 = -1.*t4015*t5736*t163;
  t7062 = t5741*t7033;
  t7066 = t5745*t7043;
  t7069 = t7061 + t7062 + t7066;
  t7087 = -1.*t5783*t4015*t163;
  t7092 = t5788*t7033;
  t7098 = t5792*t7043;
  t7103 = t7087 + t7092 + t7098;
  t7160 = t5296*t4091;
  t7165 = t5298*t4811;
  t7171 = t7160 + t7165;
  t7179 = -1.*t5296*t4811;
  t7183 = t6427 + t7179;
  t7191 = t5745*t7171;
  t7192 = t5741*t7183;
  t7197 = t7191 + t7192;
  t7201 = t5704*t7171;
  t7202 = t5701*t7183;
  t7203 = t7201 + t7202;
  t7207 = t5792*t7171;
  t7210 = t5788*t7183;
  t7211 = t7207 + t7210;
  t7263 = -1.*t5296*t4926;
  t7271 = t7263 + t7165;
  t7274 = -1.*t5298*t4926;
  t7276 = t7274 + t7179;
  t7285 = t5745*t7271;
  t7286 = t5741*t7276;
  t7289 = t7285 + t7286;
  t7297 = t5704*t7271;
  t7299 = t5701*t7276;
  t7300 = t7297 + t7299;
  t7306 = t5792*t7271;
  t7307 = t5788*t7276;
  t7308 = t7306 + t7307;
  t7357 = t5298*t4926;
  t7358 = t5296*t4811;
  t7359 = t7357 + t7358;
  t7368 = t4015*t472*t5386;
  t7370 = -6.5e-11*t5250*t7271;
  t7372 = t5414*t7359;
  t7375 = t7368 + t7370 + t7372;
  t7378 = -1.000000000049*t4015*t472*t5250;
  t7382 = t5465*t7271;
  t7383 = t5477*t7359;
  t7384 = t7378 + t7382 + t7383;
  t7386 = t4015*t472*t5514;
  t7387 = t5525*t7271;
  t7388 = -1.000000000016*t5250*t7359;
  t7391 = t7386 + t7387 + t7388;
  t7421 = t4015*t472*t5695;
  t7423 = t5701*t7271;
  t7424 = t5704*t7359;
  t7426 = t7421 + t7423 + t7424;
  t7428 = t4015*t472*t5736;
  t7429 = t5741*t7271;
  t7433 = t5745*t7359;
  t7434 = t7428 + t7429 + t7433;
  t7438 = t5783*t4015*t472;
  t7440 = t5788*t7271;
  t7441 = t5792*t7359;
  t7443 = t7438 + t7440 + t7441;
  t7583 = Power(t472,2);
  t7584 = Power(t566,2);
  t7587 = t7583*t7584;
  t7588 = Power(t4467,2);
  t7592 = t7587 + t7588;
  t7594 = 1/t7592;
  t7617 = Cos(var1[9]);
  t7618 = -1.*t7617;
  t7620 = 1. + t7618;
  t7624 = Sin(var1[9]);
  t7626 = -0.15121*t7624;
  t7629 = Cos(var1[15]);
  t7630 = -1.*t7629;
  t7634 = 1. + t7630;
  t7635 = -0.15121*t7634;
  t7638 = Sin(var1[15]);
  t7689 = -0.15121*t7617;
  t7648 = -0.15121*t7620;
  t7651 = t7648 + t7626;
  t7658 = 0.15121*t7638;
  t7659 = t7635 + t7658;
  t7622 = 0.15121*t7620;
  t7627 = t7622 + t7626;
  t7640 = -0.15121*t7638;
  t7644 = t7635 + t7640;
  t7716 = t7617*t4811;
  t7722 = -1.*t7624*t4811;
  t7751 = t7629*t4811;
  t7762 = -1.*t7638*t4811;
  p_output1[0]=var2[0] + (t2607*t3158 + t2680*t3204 + t1125*t3320 + t1334*t3393 + t1450*t3426 + 0.80321*(-4.e-6*t1036*t3320 + t1464*t3393 - 1.*t1036*t3426) + 0.14871*(t1563*t3320 + 4.e-6*t1036*t3393 + 4.e-6*t1518*t3426) + t3249*t472 + t163*t2338*t489 - 1.*t163*t2378*t566 - 0.03875*(4.e-6*t1518*t3320 + t1036*t3393 + t3426*t998))*var2[4] + (t2623 + t2700 + t2715 + t2746 + t2761 + t2803 + t2928 + t2993 - 1.*t2378*t472*t489 - 1.*t2338*t472*t566)*var2[5] + (t2623 + t2700 + t2715 + t2746 + t2761 + t2803 + t2928 + t2993 - 1.*t3036*t472*t489 + t3060*t472*t566)*var2[6] + (t1291*t1334 + t1422*t1450 + t163*t427 + t615*t651 + t716*t818 + t1125*t892 + 0.80321*(-1.*t1036*t1422 + t1291*t1464 - 4.e-6*t1036*t892) + 0.14871*(4.e-6*t1036*t1291 + 4.e-6*t1422*t1518 + t1563*t892) - 0.03875*(t1036*t1291 + 4.e-6*t1518*t892 + t1422*t998))*var2[7] + (t1728*t1783 + t1917*t1950 + t2029*t2077 + 0.80321*(-1.000000000016*t1036*t2029 - 1.*t1728*t998 - 4.e-6*t1917*t998) + 0.14871*(-4.e-6*t1036*t1728 - 1.6e-11*t1036*t1917 + 4.e-6*t2029*t998) - 0.03875*(-1.*t1036*t1728 - 4.e-6*t1036*t1917 + t2029*t998))*var2[8];
  p_output1[1]=var2[1] + (t2338*t4036 + t2378*t4091 + t2607*t4122 + t2680*t4134 + t1125*t4156 + t1334*t4164 + t1450*t4190 + 0.80321*(-4.e-6*t1036*t4156 + t1464*t4164 - 1.*t1036*t4190) + 0.14871*(t1563*t4156 + 4.e-6*t1036*t4164 + 4.e-6*t1518*t4190) - 1.*t3249*t4015*t472 - 0.03875*(4.e-6*t1518*t4156 + t1036*t4164 + t4190*t998))*var2[3] + (t163*t3249*t3660 + t2607*t3681 + t2680*t3699 + t1125*t3776 + t1334*t3825 + t1450*t3885 + 0.80321*(-4.e-6*t1036*t3776 + t1464*t3825 - 1.*t1036*t3885) + 0.14871*(t1563*t3776 + 4.e-6*t1036*t3825 + 4.e-6*t1518*t3885) - 1.*t2338*t3660*t472*t489 + t2378*t3660*t472*t566 - 0.03875*(4.e-6*t1518*t3776 + t1036*t3825 + t3885*t998))*var2[4] + (t2338*t4289 + t2378*t4299 + t2607*t4314 + t2680*t4321 + t1125*t4339 + t1334*t4355 + t1450*t4363 + 0.80321*(-4.e-6*t1036*t4339 + t1464*t4355 - 1.*t1036*t4363) + 0.14871*(t1563*t4339 + 4.e-6*t1036*t4355 + 4.e-6*t1518*t4363) - 0.03875*(4.e-6*t1518*t4339 + t1036*t4355 + t4363*t998))*var2[5] + (t3036*t4299 + t3060*t4467 + t2607*t4484 + t2680*t4487 + t1125*t4493 + t1334*t4504 + t1450*t4515 + 0.80321*(-4.e-6*t1036*t4493 + t1464*t4504 - 1.*t1036*t4515) + 0.14871*(t1563*t4493 + 4.e-6*t1036*t4504 + 4.e-6*t1518*t4515) - 0.03875*(4.e-6*t1518*t4493 + t1036*t4504 + t4515*t998))*var2[6] + (t1125*t4586 + t1334*t4591 + t1450*t4608 + 0.80321*(-4.e-6*t1036*t4586 + t1464*t4591 - 1.*t1036*t4608) + 0.14871*(t1563*t4586 + 4.e-6*t1036*t4591 + 4.e-6*t1518*t4608) - 1.*t3660*t427*t472 + t4487*t651 + t4579*t818 - 0.03875*(4.e-6*t1518*t4586 + t1036*t4591 + t4608*t998))*var2[7] + (t1783*t4663 + t1950*t4678 + t2077*t4688 + 0.80321*(-1.000000000016*t1036*t4688 - 1.*t4663*t998 - 4.e-6*t4678*t998) + 0.14871*(-4.e-6*t1036*t4663 - 1.6e-11*t1036*t4678 + 4.e-6*t4688*t998) - 0.03875*(t4706 + t4708 + t4688*t998))*var2[8];
  p_output1[2]=var2[2] + (t2338*t4299 + t2378*t4467 + t2607*t4487 + t2680*t4579 + t1450*t4663 + t1125*t4678 + t1334*t4688 + 0.14871*(4.e-6*t1518*t4663 + t1563*t4678 + 4.e-6*t1036*t4688) + 0.80321*(t1464*t4688 + t4706 + t4708) - 1.*t3249*t3660*t472 - 0.03875*(4.e-6*t1518*t4678 + t1036*t4688 + t4663*t998))*var2[3] + (-1.*t163*t3249*t4015 + t2607*t4732 + t2680*t4736 + t1125*t4752 + t1334*t4762 + t1450*t4773 + 0.80321*(-4.e-6*t1036*t4752 + t1464*t4762 - 1.*t1036*t4773) + 0.14871*(t1563*t4752 + 4.e-6*t1036*t4762 + 4.e-6*t1518*t4773) + t2338*t4015*t472*t489 - 1.*t2378*t4015*t472*t566 - 0.03875*(4.e-6*t1518*t4752 + t1036*t4762 + t4773*t998))*var2[4] + (t2338*t4091 + t2378*t4811 + t2607*t4816 + t2680*t4829 + t1125*t4842 + t1334*t4857 + t1450*t4868 + 0.80321*(-4.e-6*t1036*t4842 + t1464*t4857 - 1.*t1036*t4868) + 0.14871*(t1563*t4842 + 4.e-6*t1036*t4857 + 4.e-6*t1518*t4868) - 0.03875*(4.e-6*t1518*t4842 + t1036*t4857 + t4868*t998))*var2[5] + (t3036*t4811 + t3060*t4926 + t2607*t4931 + t2680*t4947 + t1125*t4963 + t1334*t4971 + t1450*t4981 + 0.80321*(-4.e-6*t1036*t4963 + t1464*t4971 - 1.*t1036*t4981) + 0.14871*(t1563*t4963 + 4.e-6*t1036*t4971 + 4.e-6*t1518*t4981) - 0.03875*(4.e-6*t1518*t4963 + t1036*t4971 + t4981*t998))*var2[6] + (t4015*t427*t472 + t1125*t5037 + t1334*t5043 + t1450*t5050 + 0.80321*(-4.e-6*t1036*t5037 + t1464*t5043 - 1.*t1036*t5050) + 0.14871*(t1563*t5037 + 4.e-6*t1036*t5043 + 4.e-6*t1518*t5050) + t4947*t651 + t5028*t818 - 0.03875*(4.e-6*t1518*t5037 + t1036*t5043 + t5050*t998))*var2[7] + (t1783*t5091 + t1950*t5101 + t2077*t5106 + 0.80321*(-1.000000000016*t1036*t5106 - 1.*t5091*t998 - 4.e-6*t5101*t998) + 0.14871*(-4.e-6*t1036*t5091 - 1.6e-11*t1036*t5101 + 4.e-6*t5106*t998) - 0.03875*(-1.*t1036*t5091 - 4.e-6*t1036*t5101 + t5106*t998))*var2[8];
  p_output1[3]=var2[0] + (t163*t489*t5883 - 1.*t163*t566*t5891 + t472*t6106 + t5962*t6122 + t5924*t6129 + t5513*t6137 + t5381*t6148 + t5454*t6156 - 0.80315*(t5581*t6137 + t5548*t6148 + t5563*t6156) + 0.148705*(t5616*t6137 + t5595*t6148 + t5608*t6156) - 0.038924*(t5634*t6137 + t5624*t6148 + t5632*t6156))*var2[4] + (-1.*t472*t566*t5883 - 1.*t472*t489*t5891 + t5926 + t5979 + t5992 + t6006 + t6019 + t6029 + t6044 + t6054)*var2[5] + (t5926 + t5979 + t5992 + t6006 + t6019 + t6029 + t6044 + t6054 + t472*t566*t6063 - 1.*t472*t489*t6069)*var2[12] + (t163*t5270 + t5294*t5300 + t5315*t5323 + t5381*t5416 + t5454*t5480 + t5513*t5535 - 0.80315*(t5416*t5548 + t5480*t5563 + t5535*t5581) + 0.148705*(t5416*t5595 + t5480*t5608 + t5535*t5616) - 0.038924*(t5416*t5624 + t5480*t5632 + t5535*t5634))*var2[13] + (t5676*t5715 + t5732*t5749 + t5778*t5795 + 0.148705*(-6.5e-11*t5340*t5749 + t5715*t5797 + t5795*t5803) - 0.80315*(-1.000000000016*t5340*t5715 + t5749*t5812 + t5795*t5819) - 0.038924*(-1.000000000049*t5340*t5795 + t5715*t5833 + t5749*t5841))*var2[14];
  p_output1[4]=var2[1] + (t4036*t5883 + t4091*t5891 - 1.*t4015*t472*t6106 + t5962*t6422 + t5924*t6429 + t5513*t6436 + t5381*t6457 + t5454*t6470 - 0.80315*(t5581*t6436 + t5548*t6457 + t5563*t6470) + 0.148705*(t5616*t6436 + t5595*t6457 + t5608*t6470) - 0.038924*(t5634*t6436 + t5624*t6457 + t5632*t6470))*var2[3] + (-1.*t3660*t472*t489*t5883 + t3660*t472*t566*t5891 + t163*t3660*t6106 + t5962*t6272 + t5924*t6276 + t5513*t6286 + t5381*t6306 + t5454*t6321 - 0.80315*(t5581*t6286 + t5548*t6306 + t5563*t6321) + 0.148705*(t5616*t6286 + t5595*t6306 + t5608*t6321) - 0.038924*(t5634*t6286 + t5624*t6306 + t5632*t6321))*var2[4] + (t4289*t5883 + t4299*t5891 + t5924*t6569 + t5962*t6583 + t5381*t6594 + t5513*t6598 + t5454*t6607 - 0.80315*(t5548*t6594 + t5581*t6598 + t5563*t6607) + 0.148705*(t5595*t6594 + t5616*t6598 + t5608*t6607) - 0.038924*(t5624*t6594 + t5634*t6598 + t5632*t6607))*var2[5] + (t4467*t6063 + t4299*t6069 + t5924*t6710 + t5962*t6729 + t5381*t6744 + t5513*t6756 + t5454*t6771 - 0.80315*(t5548*t6744 + t5581*t6756 + t5563*t6771) + 0.148705*(t5595*t6744 + t5616*t6756 + t5608*t6771) - 0.038924*(t5624*t6744 + t5634*t6756 + t5632*t6771))*var2[12] + (-1.*t3660*t472*t5270 + t5294*t6710 + t5315*t6860 + t5381*t6884 + t5454*t6894 + t5513*t6904 - 0.80315*(t5548*t6884 + t5563*t6894 + t5581*t6904) + 0.148705*(t5595*t6884 + t5608*t6894 + t5616*t6904) - 0.038924*(t5624*t6884 + t5632*t6894 + t5634*t6904))*var2[13] + (t5676*t6949 + t5732*t6972 + t5778*t6979 - 0.038924*(t5833*t6949 + t5841*t6972 - 1.000000000049*t5340*t6979) + 0.148705*(t5797*t6949 - 6.5e-11*t5340*t6972 + t5803*t6979) - 0.80315*(-1.000000000016*t5340*t6949 + t5812*t6972 + t5819*t6979))*var2[14];
  p_output1[5]=var2[2] + (t4299*t5883 + t4467*t5891 - 1.*t3660*t472*t6106 + t5962*t6710 + t5924*t6860 + t5513*t6949 + t5381*t6972 + t5454*t6979 - 0.80315*(t5581*t6949 + t5548*t6972 + t5563*t6979) + 0.148705*(t5616*t6949 + t5595*t6972 + t5608*t6979) - 0.038924*(t5634*t6949 + t5624*t6972 + t5632*t6979))*var2[3] + (t4015*t472*t489*t5883 - 1.*t4015*t472*t566*t5891 - 1.*t163*t4015*t6106 + t5962*t7033 + t5924*t7043 + t5513*t7056 + t5381*t7069 + t5454*t7103 - 0.80315*(t5581*t7056 + t5548*t7069 + t5563*t7103) + 0.148705*(t5616*t7056 + t5595*t7069 + t5608*t7103) - 0.038924*(t5634*t7056 + t5624*t7069 + t5632*t7103))*var2[4] + (t4091*t5883 + t4811*t5891 + t5924*t7171 + t5962*t7183 + t5381*t7197 + t5513*t7203 + t5454*t7211 - 0.80315*(t5548*t7197 + t5581*t7203 + t5563*t7211) + 0.148705*(t5595*t7197 + t5616*t7203 + t5608*t7211) - 0.038924*(t5624*t7197 + t5634*t7203 + t5632*t7211))*var2[5] + (t4926*t6063 + t4811*t6069 + t5924*t7271 + t5962*t7276 + t5381*t7289 + t5513*t7300 + t5454*t7308 - 0.80315*(t5548*t7289 + t5581*t7300 + t5563*t7308) + 0.148705*(t5595*t7289 + t5616*t7300 + t5608*t7308) - 0.038924*(t5624*t7289 + t5634*t7300 + t5632*t7308))*var2[12] + (t4015*t472*t5270 + t5294*t7271 + t5315*t7359 + t5381*t7375 + t5454*t7384 + t5513*t7391 - 0.80315*(t5548*t7375 + t5563*t7384 + t5581*t7391) + 0.148705*(t5595*t7375 + t5608*t7384 + t5616*t7391) - 0.038924*(t5624*t7375 + t5632*t7384 + t5634*t7391))*var2[13] + (t5676*t7426 + t5732*t7434 + t5778*t7443 - 0.038924*(t5833*t7426 + t5841*t7434 - 1.000000000049*t5340*t7443) + 0.148705*(t5797*t7426 - 6.5e-11*t5340*t7434 + t5803*t7443) - 0.80315*(-1.000000000016*t5340*t7426 + t5812*t7434 + t5819*t7443))*var2[14];
  p_output1[6]=var2[1] + (-0.002264*t4036 + 0.00183*t4091 + 0.024028*t4015*t472)*var2[3] + (-0.024028*t163*t3660 + 0.002264*t3660*t472*t489 + 0.00183*t3660*t472*t566)*var2[4] + (-0.002264*t4289 + 0.00183*t4299)*var2[5];
  p_output1[7]=var2[2] + (-0.002264*t4299 + 0.00183*t4467 + 0.024028*t3660*t472)*var2[3] + (0.024028*t163*t4015 - 0.002264*t4015*t472*t489 - 0.00183*t4015*t472*t566)*var2[4] + (-0.002264*t4091 + 0.00183*t4811)*var2[5];
  p_output1[8]=t4091*t472*t566*t7594*var2[3] + (-1.*t163*t4289*t566*t7594 + t3660*t7583*t7584*t7594)*var2[4] + (-1.*t4289*t472*t489*t7594 + t4299*t472*t566*t7594)*var2[5];
  p_output1[9]=(0.15121*(t4467*t7617 + t4299*t7624) - 0.15121*(t4299*t7617 - 1.*t4467*t7624) + t4467*t7627 + 0.15121*(t4467*t7629 + t4299*t7638) + 0.15121*(t4299*t7629 - 1.*t4467*t7638) - 1.*t4467*t7644 + t4299*t7651 - 1.*t4299*t7659)*var2[3] + (0.15121*(-1.*t4015*t472*t566*t7617 + t4015*t472*t489*t7624) - 0.15121*(t4015*t472*t489*t7617 + t4015*t472*t566*t7624) - 1.*t4015*t472*t566*t7627 + 0.15121*(-1.*t4015*t472*t566*t7629 + t4015*t472*t489*t7638) + 0.15121*(t4015*t472*t489*t7629 + t4015*t472*t566*t7638) + t4015*t472*t566*t7644 + t4015*t472*t489*t7651 - 1.*t4015*t472*t489*t7659)*var2[4] + (t4811*t7627 - 1.*t4811*t7644 + t4091*t7651 - 1.*t4091*t7659 + 0.15121*(t4091*t7624 + t7716) - 0.15121*(t4091*t7617 + t7722) + 0.15121*(t4091*t7638 + t7751) + 0.15121*(t4091*t7629 + t7762))*var2[5] + (t4926*(0.15121*t7624 + t7689) + t4811*(t7626 + t7689) + 0.15121*(-1.*t4926*t7624 + t7716) - 0.15121*(-1.*t4926*t7617 + t7722))*var2[9] + (-1.*t4926*(-0.15121*t7629 + t7640) - 1.*t4811*(0.15121*t7629 + t7640) + 0.15121*(-1.*t4926*t7638 + t7751) + 0.15121*(-1.*t4926*t7629 + t7762))*var2[15];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "d1ya_position_ParallelStance.hh"

namespace SymFunction
{

void d1ya_position_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
