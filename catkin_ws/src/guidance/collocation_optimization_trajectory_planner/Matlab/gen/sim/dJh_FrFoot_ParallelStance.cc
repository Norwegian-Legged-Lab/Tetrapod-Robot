/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:50 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t523;
  double t562;
  double t596;
  double t611;
  double t363;
  double t850;
  double t597;
  double t690;
  double t729;
  double t1233;
  double t1275;
  double t912;
  double t913;
  double t922;
  double t1077;
  double t1096;
  double t1397;
  double t1447;
  double t1542;
  double t1779;
  double t409;
  double t430;
  double t446;
  double t829;
  double t1215;
  double t1564;
  double t1604;
  double t273;
  double t1797;
  double t1801;
  double t1822;
  double t1855;
  double t1864;
  double t1867;
  double t144;
  double t1920;
  double t1924;
  double t1935;
  double t1689;
  double t1895;
  double t1902;
  double t1977;
  double t2070;
  double t1910;
  double t1981;
  double t1983;
  double t136;
  double t2088;
  double t2106;
  double t2230;
  double t2268;
  double t2356;
  double t2374;
  double t2406;
  double t2433;
  double t2438;
  double t2444;
  double t2475;
  double t2482;
  double t2747;
  double t2787;
  double t2819;
  double t2846;
  double t2859;
  double t2877;
  double t2911;
  double t2961;
  double t2973;
  double t2990;
  double t3001;
  double t3036;
  double t3041;
  double t2842;
  double t2974;
  double t3067;
  double t3069;
  double t3084;
  double t3109;
  double t3122;
  double t3140;
  double t3194;
  double t3233;
  double t3239;
  double t3071;
  double t3158;
  double t3169;
  double t3186;
  double t3241;
  double t3260;
  double t3265;
  double t3267;
  double t3271;
  double t3272;
  double t3275;
  double t3294;
  double t3296;
  double t3299;
  double t3301;
  double t3306;
  double t3436;
  double t3444;
  double t3477;
  double t3502;
  double t3439;
  double t3519;
  double t3528;
  double t3548;
  double t3551;
  double t3579;
  double t3621;
  double t3628;
  double t3649;
  double t3536;
  double t3594;
  double t3611;
  double t3614;
  double t3656;
  double t3658;
  double t3670;
  double t3672;
  double t3675;
  double t3684;
  double t3688;
  double t3692;
  double t3696;
  double t3706;
  double t3708;
  double t3767;
  double t3768;
  double t3771;
  double t3815;
  double t3817;
  double t3820;
  double t3822;
  double t3830;
  double t3832;
  double t3834;
  double t3841;
  double t3847;
  double t3848;
  double t3855;
  double t3862;
  double t3868;
  double t3869;
  double t3870;
  double t3872;
  double t3875;
  double t3899;
  double t3900;
  double t3904;
  double t3906;
  double t3915;
  double t3916;
  double t3918;
  double t3919;
  double t3926;
  double t3927;
  double t3928;
  double t3934;
  double t3935;
  double t3937;
  double t3940;
  double t3941;
  double t3945;
  double t3802;
  double t3803;
  double t3809;
  double t3814;
  double t3839;
  double t3857;
  double t3877;
  double t3878;
  double t3903;
  double t3931;
  double t3946;
  double t3949;
  double t3956;
  double t3959;
  double t3962;
  double t3970;
  double t3974;
  double t3975;
  double t3976;
  double t4007;
  double t4010;
  double t3997;
  double t4003;
  double t4004;
  double t3988;
  double t3989;
  double t3990;
  double t4047;
  double t3895;
  double t3978;
  double t3983;
  double t4058;
  double t3786;
  double t3788;
  double t3799;
  double t4012;
  double t4059;
  double t4060;
  double t4062;
  double t4080;
  double t4082;
  double t4085;
  double t4024;
  double t4027;
  double t4045;
  double t3781;
  double t4130;
  double t4134;
  double t4137;
  double t4271;
  double t4272;
  double t4273;
  double t4277;
  double t4063;
  double t4295;
  double t4296;
  double t4297;
  double t4315;
  double t4302;
  double t4095;
  double t4301;
  double t4305;
  double t4306;
  double t4307;
  double t4308;
  double t4327;
  double t4329;
  double t4331;
  double t4333;
  double t4335;
  double t4067;
  double t4071;
  double t4072;
  double t4097;
  double t4098;
  double t4114;
  double t4180;
  double t4206;
  double t4451;
  double t4452;
  double t4182;
  double t4186;
  double t4188;
  double t4471;
  double t4472;
  double t4208;
  double t4209;
  double t4217;
  double t4247;
  double t4262;
  double t4526;
  double t4528;
  double t4249;
  double t4250;
  double t4251;
  double t4541;
  double t4546;
  double t4263;
  double t4264;
  double t4265;
  double t4599;
  double t4603;
  double t4605;
  double t4611;
  double t4613;
  double t4615;
  double t4650;
  double t4651;
  double t4652;
  double t4655;
  double t4657;
  double t4659;
  double t4661;
  double t4667;
  double t4669;
  double t4674;
  double t4629;
  double t4631;
  double t4632;
  double t4622;
  double t4595;
  double t4596;
  double t4597;
  double t4316;
  double t4317;
  double t4318;
  double t4714;
  double t4715;
  double t4719;
  double t4694;
  double t4695;
  double t4696;
  double t4699;
  double t4701;
  double t4702;
  double t4691;
  double t4692;
  double t4349;
  double t4351;
  double t4353;
  double t4693;
  double t4705;
  double t4706;
  double t4707;
  double t4724;
  double t4726;
  double t4727;
  double t4728;
  double t4730;
  double t4466;
  double t4467;
  double t4468;
  double t4479;
  double t4481;
  double t4483;
  double t4844;
  double t4848;
  double t4863;
  double t4864;
  double t4532;
  double t4533;
  double t4534;
  double t4553;
  double t4557;
  double t4559;
  double t5008;
  double t5013;
  double t5036;
  double t5039;
  double t5112;
  double t5114;
  double t5116;
  double t5117;
  double t5122;
  double t5123;
  double t5128;
  double t5130;
  double t5153;
  double t5154;
  double t5155;
  double t5157;
  double t5159;
  double t5160;
  double t5164;
  double t5167;
  double t5170;
  double t5179;
  double t5184;
  double t5185;
  double t5234;
  double t5235;
  double t5238;
  double t5243;
  double t5247;
  double t5251;
  double t5162;
  double t5186;
  double t5188;
  double t5191;
  double t5193;
  double t5194;
  double t5206;
  double t5207;
  double t5213;
  double t5200;
  double t5201;
  double t5301;
  double t5214;
  double t5277;
  double t5349;
  double t5355;
  double t5357;
  double t5359;
  double t5363;
  double t5364;
  double t5367;
  double t5369;
  double t5143;
  double t5145;
  double t5151;
  double t5120;
  double t5132;
  double t5137;
  double t5259;
  double t5264;
  double t5267;
  double t5240;
  double t5252;
  double t5253;
  double t5275;
  double t5428;
  double t5432;
  double t5433;
  double t5205;
  double t5416;
  double t5421;
  double t5422;
  double t5446;
  double t5450;
  double t5452;
  double t5455;
  double t5456;
  double t5461;
  double t5388;
  double t5394;
  double t5396;
  double t5382;
  double t5383;
  double t5384;
  double t5375;
  double t5376;
  double t5386;
  double t5399;
  double t5400;
  double t5514;
  double t5515;
  double t5516;
  double t5521;
  double t5523;
  double t5524;
  double t5475;
  double t5485;
  double t5486;
  double t5439;
  double t5442;
  double t5443;
  double t5438;
  double t5463;
  double t5557;
  double t5558;
  double t5561;
  double t5471;
  double t5494;
  double t5548;
  double t5550;
  double t5553;
  double t5585;
  double t5587;
  double t5588;
  double t5595;
  double t5597;
  double t5600;
  double t5662;
  double t5679;
  double t5612;
  double t5615;
  double t5620;
  double t5678;
  double t5664;
  double t5377;
  double t5402;
  double t5404;
  double t5824;
  double t5828;
  double t5577;
  double t5579;
  double t5582;
  double t5834;
  double t5849;
  double t5915;
  double t5958;
  double t5955;
  double t5918;
  double t6073;
  double t6099;
  double t6107;
  double t6112;
  double t6167;
  double t6168;
  double t6171;
  double t6179;
  double t6183;
  double t6186;
  double t6194;
  double t6196;
  double t6173;
  double t6188;
  double t6204;
  double t6205;
  double t6212;
  double t6215;
  double t6220;
  double t6221;
  double t6239;
  double t6243;
  double t6252;
  double t6256;
  double t6259;
  double t6261;
  double t6268;
  double t6269;
  double t6247;
  double t6260;
  double t6274;
  double t6277;
  double t6282;
  double t6288;
  double t6290;
  double t6293;
  double t5286;
  double t5287;
  double t5289;
  double t6330;
  double t6331;
  double t6332;
  double t6333;
  double t6209;
  double t6226;
  double t6227;
  double t6230;
  double t6231;
  double t6235;
  double t6314;
  double t6320;
  double t6322;
  double t6324;
  double t6325;
  double t5340;
  double t5342;
  double t5343;
  double t5345;
  double t6382;
  double t6387;
  double t6397;
  double t6346;
  double t6438;
  double t6439;
  double t6441;
  double t6442;
  double t6444;
  double t6448;
  double t6451;
  double t6468;
  double t6470;
  double t6472;
  double t6457;
  double t6459;
  double t6465;
  double t6381;
  double t6389;
  double t6399;
  double t6402;
  double t6406;
  double t6409;
  double t6411;
  double t6413;
  double t6524;
  double t6533;
  double t6537;
  double t6500;
  double t6509;
  double t6514;
  double t6494;
  double t6495;
  double t6496;
  double t6497;
  double t6519;
  double t6540;
  double t6543;
  double t6562;
  double t6569;
  double t6579;
  double t6584;
  double t6585;
  double t6588;
  double t6306;
  double t6310;
  double t6312;
  double t6278;
  double t6296;
  double t6298;
  double t6334;
  double t6605;
  double t6608;
  double t6612;
  double t6617;
  double t6618;
  double t6619;
  double t6634;
  double t6636;
  double t6642;
  double t6616;
  double t6659;
  double t6660;
  double t6662;
  double t6654;
  double t6658;
  double t6676;
  double t6677;
  double t6678;
  double t6684;
  double t6685;
  double t6687;
  double t6695;
  double t6697;
  double t6700;
  double t5685;
  double t5686;
  double t5690;
  double t6764;
  double t5770;
  double t5774;
  double t5777;
  double t5779;
  double t6783;
  double t6848;
  double t6851;
  double t6852;
  double t6856;
  double t6859;
  double t6860;
  double t6861;
  double t6879;
  double t6881;
  double t6883;
  double t6866;
  double t6869;
  double t6874;
  double t6718;
  double t6720;
  double t6721;
  double t6761;
  double t6926;
  double t6499;
  double t6556;
  double t6557;
  double t6932;
  double t6937;
  double t5927;
  double t5928;
  double t5931;
  double t5961;
  double t5969;
  double t5970;
  double t6000;
  double t6002;
  double t6005;
  double t6007;
  double t6040;
  double t6041;
  double t6044;
  double t6046;
  double t6984;
  double t7002;
  double t7128;
  double t7130;
  double t7131;
  double t7133;
  double t7134;
  double t7137;
  double t7139;
  double t7102;
  double t7104;
  double t7113;
  double t7115;
  double t7116;
  double t7120;
  double t7121;
  double t7090;
  double t7091;
  double t7092;
  double t7096;
  double t7073;
  double t7080;
  double t7085;
  double t7086;
  double t7009;
  double t6982;
  double t7163;
  double t7169;
  double t7182;
  double t7184;
  t523 = Cos(var1[11]);
  t562 = -1.*t523;
  t596 = 1. + t562;
  t611 = Sin(var1[11]);
  t363 = Cos(var1[10]);
  t850 = Sin(var1[10]);
  t597 = -1.7408e-8*t596;
  t690 = -3.999964e-6*t611;
  t729 = t597 + t690;
  t1233 = -1.*t363;
  t1275 = 1. + t1233;
  t912 = -1.000000000016*t596;
  t913 = 1. + t912;
  t922 = 0.999991*t913;
  t1077 = 0.004352*t611;
  t1096 = t922 + t1077;
  t1397 = -0.004352*t523;
  t1447 = 0.999991*t611;
  t1542 = t1397 + t1447;
  t1779 = Sin(var1[9]);
  t409 = -1. + t363;
  t430 = 1.6e-11*t409;
  t446 = 1. + t430;
  t829 = t446*t729;
  t1215 = -4.e-6*t850*t1096;
  t1564 = 4.e-6*t1275*t1542;
  t1604 = 0. + t829 + t1215 + t1564;
  t273 = Cos(var1[9]);
  t1797 = 4.e-6*t850*t729;
  t1801 = -1.000000000016*t1275;
  t1822 = 1. + t1801;
  t1855 = t1822*t1096;
  t1864 = -1.*t850*t1542;
  t1867 = 0. + t1797 + t1855 + t1864;
  t144 = Cos(var1[5]);
  t1920 = -1.*t1779*t1604;
  t1924 = t273*t1867;
  t1935 = 0. + t1920 + t1924;
  t1689 = t273*t1604;
  t1895 = t1779*t1867;
  t1902 = 0. + t1689 + t1895;
  t1977 = Sin(var1[5]);
  t2070 = Cos(var1[3]);
  t1910 = t144*t1902;
  t1981 = t1935*t1977;
  t1983 = 0. + t1910 + t1981;
  t136 = Sin(var1[3]);
  t2088 = Cos(var1[4]);
  t2106 = 4.e-6*t1275*t729;
  t2230 = t850*t1096;
  t2268 = t363*t1542;
  t2356 = 0. + t2106 + t2230 + t2268;
  t2374 = t2088*t2356;
  t2406 = Sin(var1[4]);
  t2433 = t144*t1935;
  t2438 = -1.*t1902*t1977;
  t2444 = 0. + t2433 + t2438;
  t2475 = -1.*t2406*t2444;
  t2482 = 0. + t2374 + t2475;
  t2747 = 0.004352*t913;
  t2787 = -0.9999910000159999*t611;
  t2819 = t2747 + t2787;
  t2846 = 1.6e-11*t596;
  t2859 = -1. + t2846;
  t2877 = 4.e-6*t2859;
  t2911 = 3.999964e-6*t596;
  t2961 = -1.7408e-8*t611;
  t2973 = t2877 + t2911 + t2961;
  t2990 = -1. + t523;
  t3001 = 1.6e-11*t2990;
  t3036 = 0.999991*t523;
  t3041 = t3001 + t3036 + t1077;
  t2842 = -4.e-6*t850*t2819;
  t2974 = t446*t2973;
  t3067 = 4.e-6*t1275*t3041;
  t3069 = 0. + t2842 + t2974 + t3067;
  t3084 = t1822*t2819;
  t3109 = 4.e-6*t850*t2973;
  t3122 = -1.*t850*t3041;
  t3140 = 0. + t3084 + t3109 + t3122;
  t3194 = -1.*t1779*t3069;
  t3233 = t273*t3140;
  t3239 = 0. + t3194 + t3233;
  t3071 = t273*t3069;
  t3158 = t1779*t3140;
  t3169 = 0. + t3071 + t3158;
  t3186 = t144*t3169;
  t3241 = t3239*t1977;
  t3260 = 0. + t3186 + t3241;
  t3265 = t850*t2819;
  t3267 = 4.e-6*t1275*t2973;
  t3271 = t363*t3041;
  t3272 = 0. + t3265 + t3267 + t3271;
  t3275 = t2088*t3272;
  t3294 = t144*t3239;
  t3296 = -1.*t3169*t1977;
  t3299 = 0. + t3294 + t3296;
  t3301 = -1.*t2406*t3299;
  t3306 = 0. + t3275 + t3301;
  t3436 = -1. + t2846 + t3001;
  t3444 = 4.e-6*t2990;
  t3477 = -4.e-6*t523;
  t3502 = t3444 + t3477;
  t3439 = t446*t3436;
  t3519 = 4.e-6*t1275*t3502;
  t3528 = t3439 + t3519;
  t3548 = 4.e-6*t3436*t850;
  t3551 = -1.*t3502*t850;
  t3579 = t3548 + t3551;
  t3621 = -1.*t3528*t1779;
  t3628 = t273*t3579;
  t3649 = t3621 + t3628;
  t3536 = t273*t3528;
  t3594 = t1779*t3579;
  t3611 = t3536 + t3594;
  t3614 = t144*t3611;
  t3656 = t3649*t1977;
  t3658 = t3614 + t3656;
  t3670 = 4.e-6*t1275*t3436;
  t3672 = t363*t3502;
  t3675 = t3670 + t3672;
  t3684 = t3675*t2088;
  t3688 = t144*t3649;
  t3692 = -1.*t3611*t1977;
  t3696 = t3688 + t3692;
  t3706 = -1.*t2406*t3696;
  t3708 = t3684 + t3706;
  t3767 = -1.*t2356*t2406;
  t3768 = -1.*t2088*t2444;
  t3771 = t3767 + t3768;
  t3815 = -1.26e-8*var1[11];
  t3817 = 1. + t3001;
  t3820 = -0.14871*t3817;
  t3822 = -1.64779999997447e-7*t596;
  t3830 = -1.59556e-7*t2990;
  t3832 = -1.199987999968e-6*t611;
  t3834 = t3815 + t3820 + t3822 + t3830 + t3832;
  t3841 = 0.803147*t913;
  t3847 = 0.50315000001605*t596;
  t3848 = 0.00130540515936178*t611;
  t3855 = t3841 + t3847 + t3848;
  t3862 = -5.04e-14*var1[11];
  t3868 = -0.03988959484*t596;
  t3869 = 6.38224e-13*t2990;
  t3870 = -0.041195*t523;
  t3872 = 0.299996999992*t611;
  t3875 = t3862 + t3868 + t3869 + t3870 + t3872;
  t3899 = -1.*t273;
  t3900 = 1. + t3899;
  t3904 = -0.15121*t1779;
  t3906 = -1.2484e-7*var1[10];
  t3915 = 2.479936e-18*t1275;
  t3916 = -1.54996e-7*t409;
  t3918 = 1.124840000016e-6*t850;
  t3919 = t446*t3834;
  t3926 = -4.e-6*t850*t3855;
  t3927 = 4.e-6*t1275*t3875;
  t3928 = t3906 + t3915 + t3916 + t3918 + t3919 + t3926 + t3927;
  t3934 = 0.281210000008499*t1275;
  t3935 = -0.03874900000062*t850;
  t3937 = 4.e-6*t850*t3834;
  t3940 = t1822*t3855;
  t3941 = -1.*t850*t3875;
  t3945 = t3934 + t3935 + t3937 + t3940 + t3941;
  t3802 = -4.9936e-13*var1[10];
  t3803 = -0.038749*t1275;
  t3809 = 6.19984e-13*t409;
  t3814 = -0.281210000004*t850;
  t3839 = 4.e-6*t1275*t3834;
  t3857 = t850*t3855;
  t3877 = t363*t3875;
  t3878 = 0. + t3802 + t3803 + t3809 + t3814 + t3839 + t3857 + t3877;
  t3903 = 0.15121*t3900;
  t3931 = -1.*t1779*t3928;
  t3946 = t273*t3945;
  t3949 = t3903 + t3904 + t3931 + t3946;
  t3956 = t144*t3949;
  t3959 = -0.15121*t3900;
  t3962 = t273*t3928;
  t3970 = t1779*t3945;
  t3974 = t3959 + t3904 + t3962 + t3970;
  t3975 = -1.*t3974*t1977;
  t3976 = 0. + t3956 + t3975;
  t4007 = t2088*t3878;
  t4010 = -1.*t2406*t3976;
  t3997 = t3675*t2406;
  t4003 = t2088*t3696;
  t4004 = t3997 + t4003;
  t3988 = t3878*t2406;
  t3989 = t2088*t3976;
  t3990 = 0. + t3988 + t3989;
  t4047 = 0. + t4007 + t4010;
  t3895 = -1.*t3878*t2406;
  t3978 = -1.*t2088*t3976;
  t3983 = t3895 + t3978;
  t4058 = t3275 + t3301;
  t3786 = t3272*t2406;
  t3788 = t2088*t3299;
  t3799 = 0. + t3786 + t3788;
  t4012 = t4007 + t4010;
  t4059 = t144*t3974;
  t4060 = t3949*t1977;
  t4062 = 0. + t4059 + t4060;
  t4080 = -1.*t3272*t2406;
  t4082 = -1.*t2088*t3299;
  t4085 = t4080 + t4082;
  t4024 = -1.*t3675*t2406;
  t4027 = -1.*t2088*t3696;
  t4045 = t4024 + t4027;
  t3781 = t2374 + t2475;
  t4130 = t2356*t2406;
  t4134 = t2088*t2444;
  t4137 = 0. + t4130 + t4134;
  t4271 = -1.*t144*t1902;
  t4272 = -1.*t1935*t1977;
  t4273 = t4271 + t4272;
  t4277 = t2433 + t2438;
  t4063 = t3658*t4062;
  t4295 = -1.*t144*t3974;
  t4296 = -1.*t3949*t1977;
  t4297 = t4295 + t4296;
  t4315 = t3294 + t3296;
  t4302 = t3956 + t3975;
  t4095 = -1.*t3260*t4062;
  t4301 = t3696*t4062;
  t4305 = t3658*t4302;
  t4306 = -1.*t144*t3611;
  t4307 = -1.*t3649*t1977;
  t4308 = t4306 + t4307;
  t4327 = -1.*t4315*t4062;
  t4329 = -1.*t3260*t4302;
  t4331 = -1.*t144*t3169;
  t4333 = -1.*t3239*t1977;
  t4335 = t4331 + t4333;
  t4067 = t4004*t3990;
  t4071 = t3708*t4047;
  t4072 = t4063 + t4067 + t4071;
  t4097 = -1.*t3799*t3990;
  t4098 = -1.*t3306*t4047;
  t4114 = t4095 + t4097 + t4098;
  t4180 = -1.*t3658*t4062;
  t4206 = t4062*t1983;
  t4451 = -1.*t3696*t4062;
  t4452 = -1.*t3658*t4302;
  t4182 = -1.*t4004*t3990;
  t4186 = -1.*t3708*t4047;
  t4188 = t4180 + t4182 + t4186;
  t4471 = t4302*t1983;
  t4472 = t4062*t4277;
  t4208 = t3990*t4137;
  t4209 = t4047*t2482;
  t4217 = t4206 + t4208 + t4209;
  t4247 = t3260*t4062;
  t4262 = -1.*t4062*t1983;
  t4526 = t4315*t4062;
  t4528 = t3260*t4302;
  t4249 = t3799*t3990;
  t4250 = t3306*t4047;
  t4251 = t4247 + t4249 + t4250;
  t4541 = -1.*t4302*t1983;
  t4546 = -1.*t4062*t4277;
  t4263 = -1.*t3990*t4137;
  t4264 = -1.*t4047*t2482;
  t4265 = t4262 + t4263 + t4264;
  t4599 = -0.15121*t273;
  t4603 = t4599 + t3904 + t3931 + t3946;
  t4605 = 0.15121*t1779;
  t4611 = -1.*t273*t3928;
  t4613 = -1.*t1779*t3945;
  t4615 = t4599 + t4605 + t4611 + t4613;
  t4650 = -1.*t273*t1604;
  t4651 = -1.*t1779*t1867;
  t4652 = t4650 + t4651;
  t4655 = t144*t4652;
  t4657 = t1920 + t1924;
  t4659 = -1.*t4657*t1977;
  t4661 = t4655 + t4659;
  t4667 = t144*t4657;
  t4669 = t4652*t1977;
  t4674 = t4667 + t4669;
  t4629 = -1.*t273*t3528;
  t4631 = -1.*t1779*t3579;
  t4632 = t4629 + t4631;
  t4622 = t3194 + t3233;
  t4595 = -1.*t273*t3069;
  t4596 = -1.*t1779*t3140;
  t4597 = t4595 + t4596;
  t4316 = t3675*t3878;
  t4317 = t3696*t3976;
  t4318 = t4316 + t4063 + t4317;
  t4714 = t144*t4622;
  t4715 = t4597*t1977;
  t4719 = t4714 + t4715;
  t4694 = t144*t4615;
  t4695 = -1.*t4603*t1977;
  t4696 = t4694 + t4695;
  t4699 = t144*t4603;
  t4701 = t4615*t1977;
  t4702 = t4699 + t4701;
  t4691 = t4632*t1977;
  t4692 = t3688 + t4691;
  t4349 = -1.*t3272*t3878;
  t4351 = -1.*t3299*t3976;
  t4353 = t4349 + t4095 + t4351;
  t4693 = t4692*t4062;
  t4705 = t3658*t4702;
  t4706 = t144*t4632;
  t4707 = t4706 + t4307;
  t4724 = -1.*t4719*t4062;
  t4726 = -1.*t3260*t4702;
  t4727 = t144*t4597;
  t4728 = -1.*t4622*t1977;
  t4730 = t4727 + t4728;
  t4466 = -1.*t3675*t3878;
  t4467 = -1.*t3696*t3976;
  t4468 = t4466 + t4180 + t4467;
  t4479 = t3878*t2356;
  t4481 = t3976*t2444;
  t4483 = t4479 + t4206 + t4481;
  t4844 = -1.*t4692*t4062;
  t4848 = -1.*t3658*t4702;
  t4863 = t4702*t1983;
  t4864 = t4062*t4674;
  t4532 = t3272*t3878;
  t4533 = t3299*t3976;
  t4534 = t4532 + t4247 + t4533;
  t4553 = -1.*t3878*t2356;
  t4557 = -1.*t3976*t2444;
  t4559 = t4553 + t4262 + t4557;
  t5008 = t4719*t4062;
  t5013 = t3260*t4702;
  t5036 = -1.*t4702*t1983;
  t5039 = -1.*t4062*t4674;
  t5112 = -1.000000000016*t850*t2819;
  t5114 = 4.e-6*t363*t2973;
  t5116 = -1.*t363*t3041;
  t5117 = t5112 + t5114 + t5116;
  t5122 = -4.e-6*t363*t2819;
  t5123 = -1.6e-11*t850*t2973;
  t5128 = 4.e-6*t850*t3041;
  t5130 = t5122 + t5123 + t5128;
  t5153 = -0.03874900000062*t363;
  t5154 = 0.281210000008499*t850;
  t5155 = 4.e-6*t363*t3834;
  t5157 = -1.000000000016*t850*t3855;
  t5159 = -1.*t363*t3875;
  t5160 = t5153 + t5154 + t5155 + t5157 + t5159;
  t5164 = 1.124840000016e-6*t363;
  t5167 = 1.5499600000248e-7*t850;
  t5170 = -1.6e-11*t850*t3834;
  t5179 = -4.e-6*t363*t3855;
  t5184 = 4.e-6*t850*t3875;
  t5185 = -1.2484e-7 + t5164 + t5167 + t5170 + t5179 + t5184;
  t5234 = 4.e-6*t363*t3436;
  t5235 = -1.*t363*t3502;
  t5238 = t5234 + t5235;
  t5243 = -1.6e-11*t3436*t850;
  t5247 = 4.e-6*t3502*t850;
  t5251 = t5243 + t5247;
  t5162 = t1779*t5160;
  t5186 = t273*t5185;
  t5188 = t5162 + t5186;
  t5191 = t273*t5160;
  t5193 = -1.*t1779*t5185;
  t5194 = t5191 + t5193;
  t5206 = -0.281210000004*t363;
  t5207 = t363*t3855;
  t5213 = -4.9936e-13 + t5206 + t3935 + t3937 + t5207 + t3941;
  t5200 = t363*t2819;
  t5201 = t5200 + t3109 + t3122;
  t5301 = t3802 + t3803 + t3809 + t3814 + t3839 + t3857 + t3877;
  t5214 = -1.*t3272*t5213;
  t5277 = t3675*t5213;
  t5349 = 4.e-6*t363*t729;
  t5355 = -1.000000000016*t850*t1096;
  t5357 = -1.*t363*t1542;
  t5359 = t5349 + t5355 + t5357;
  t5363 = -1.6e-11*t850*t729;
  t5364 = -4.e-6*t363*t1096;
  t5367 = 4.e-6*t850*t1542;
  t5369 = t5363 + t5364 + t5367;
  t5143 = t1779*t5117;
  t5145 = t273*t5130;
  t5151 = t5143 + t5145;
  t5120 = t273*t5117;
  t5132 = -1.*t1779*t5130;
  t5137 = t5120 + t5132;
  t5259 = t5238*t1779;
  t5264 = t273*t5251;
  t5267 = t5259 + t5264;
  t5240 = t273*t5238;
  t5252 = -1.*t1779*t5251;
  t5253 = t5240 + t5252;
  t5275 = t3579*t3878;
  t5428 = t144*t5267;
  t5432 = t5253*t1977;
  t5433 = t5428 + t5432;
  t5205 = -1.*t5201*t3878;
  t5416 = t144*t5151;
  t5421 = t5137*t1977;
  t5422 = t5416 + t5421;
  t5446 = t144*t5194;
  t5450 = -1.*t5188*t1977;
  t5452 = t5446 + t5450;
  t5455 = t144*t5188;
  t5456 = t5194*t1977;
  t5461 = t5455 + t5456;
  t5388 = t1779*t5359;
  t5394 = t273*t5369;
  t5396 = t5388 + t5394;
  t5382 = t273*t5359;
  t5383 = -1.*t1779*t5369;
  t5384 = t5382 + t5383;
  t5375 = t363*t1096;
  t5376 = t1797 + t5375 + t1864;
  t5386 = t144*t5384;
  t5399 = -1.*t5396*t1977;
  t5400 = t5386 + t5399;
  t5514 = t144*t5396;
  t5515 = t5384*t1977;
  t5516 = t5514 + t5515;
  t5521 = t2088*t5376;
  t5523 = -1.*t2406*t5400;
  t5524 = t5521 + t5523;
  t5475 = t144*t5137;
  t5485 = -1.*t5151*t1977;
  t5486 = t5475 + t5485;
  t5439 = t144*t5253;
  t5442 = -1.*t5267*t1977;
  t5443 = t5439 + t5442;
  t5438 = t5433*t4062;
  t5463 = t3658*t5461;
  t5557 = t3579*t2406;
  t5558 = t2088*t5443;
  t5561 = t5557 + t5558;
  t5471 = -1.*t5422*t4062;
  t5494 = -1.*t3260*t5461;
  t5548 = t5201*t2406;
  t5550 = t2088*t5486;
  t5553 = t5548 + t5550;
  t5585 = t5213*t2406;
  t5587 = t2088*t5452;
  t5588 = t5585 + t5587;
  t5595 = t2088*t5213;
  t5597 = -1.*t2406*t5452;
  t5600 = t5595 + t5597;
  t5662 = t5213*t2356;
  t5679 = -1.*t3675*t5213;
  t5612 = t2088*t5201;
  t5615 = -1.*t2406*t5486;
  t5620 = t5612 + t5615;
  t5678 = -1.*t3579*t3878;
  t5664 = t3878*t5376;
  t5377 = t5376*t2406;
  t5402 = t2088*t5400;
  t5404 = t5377 + t5402;
  t5824 = -1.*t5433*t4062;
  t5828 = -1.*t3658*t5461;
  t5577 = t2088*t3579;
  t5579 = -1.*t2406*t5443;
  t5582 = t5577 + t5579;
  t5834 = t5461*t1983;
  t5849 = t4062*t5516;
  t5915 = -1.*t5213*t2356;
  t5958 = t3272*t5213;
  t5955 = t5201*t3878;
  t5918 = -1.*t3878*t5376;
  t6073 = t5422*t4062;
  t6099 = t3260*t5461;
  t6107 = -1.*t5461*t1983;
  t6112 = -1.*t4062*t5516;
  t6167 = 0.00130540515936178*t523;
  t6168 = -0.2999969999968001*t611;
  t6171 = t6167 + t6168;
  t6179 = -1.199987999968e-6*t523;
  t6183 = -5.2216206374471e-9*t611;
  t6186 = -1.26e-8 + t6179 + t6183;
  t6194 = 0.299996999992*t523;
  t6196 = -5.04e-14 + t6194 + t3848;
  t6173 = -4.e-6*t850*t6171;
  t6188 = t446*t6186;
  t6204 = 4.e-6*t1275*t6196;
  t6205 = t6173 + t6188 + t6204;
  t6212 = t1822*t6171;
  t6215 = 4.e-6*t850*t6186;
  t6220 = -1.*t850*t6196;
  t6221 = t6212 + t6215 + t6220;
  t6239 = 0.004352*t523;
  t6243 = t6239 + t2787;
  t6252 = -0.9999910000159999*t523;
  t6256 = -0.00435200000006963*t611;
  t6259 = t6252 + t6256;
  t6261 = -1.7408e-8*t523;
  t6268 = 3.999964000064e-6*t611;
  t6269 = t6261 + t6268;
  t6247 = 4.e-6*t1275*t6243;
  t6260 = -4.e-6*t850*t6259;
  t6274 = t446*t6269;
  t6277 = t6247 + t6260 + t6274;
  t6282 = -1.*t850*t6243;
  t6288 = t1822*t6259;
  t6290 = 4.e-6*t850*t6269;
  t6293 = t6282 + t6288 + t6290;
  t5286 = t3649*t3949;
  t5287 = t3611*t3974;
  t5289 = t5286 + t5287 + t4316;
  t6330 = t363*t6243;
  t6331 = t850*t6259;
  t6332 = 4.e-6*t1275*t6269;
  t6333 = t6330 + t6331 + t6332;
  t6209 = -1.*t1779*t6205;
  t6226 = t273*t6221;
  t6227 = t6209 + t6226;
  t6230 = t273*t6205;
  t6231 = t1779*t6221;
  t6235 = t6230 + t6231;
  t6314 = t850*t6171;
  t6320 = 4.e-6*t1275*t6186;
  t6322 = t363*t6196;
  t6324 = t6314 + t6320 + t6322;
  t6325 = -1.*t6324*t3272;
  t5340 = t3528*t3928;
  t5342 = t3675*t5301;
  t5343 = t3579*t3945;
  t5345 = t5340 + t5342 + t5343;
  t6382 = -3.999964e-6*t523;
  t6387 = t6382 + t2961;
  t6397 = t3036 + t1077;
  t6346 = t3675*t6324;
  t6438 = -1.*t2819*t6171;
  t6439 = -1.*t2973*t6186;
  t6441 = -1.*t3834*t6269;
  t6442 = -1.*t6259*t3855;
  t6444 = -1.*t6196*t3041;
  t6448 = -1.*t6243*t3875;
  t6451 = t6438 + t6439 + t6441 + t6442 + t6444 + t6448;
  t6468 = t3436*t6186;
  t6470 = t3502*t6196;
  t6472 = t6468 + t6470;
  t6457 = t3436*t3834;
  t6459 = t3502*t3875;
  t6465 = t6457 + t6459;
  t6381 = -4.e-6*t850*t6243;
  t6389 = t446*t6387;
  t6399 = 4.e-6*t1275*t6397;
  t6402 = t6381 + t6389 + t6399;
  t6406 = t1822*t6243;
  t6409 = 4.e-6*t850*t6387;
  t6411 = -1.*t850*t6397;
  t6413 = t6406 + t6409 + t6411;
  t6524 = t273*t6402;
  t6533 = t1779*t6413;
  t6537 = t6524 + t6533;
  t6500 = -1.*t1779*t6402;
  t6509 = t273*t6413;
  t6514 = t6500 + t6509;
  t6494 = t850*t6243;
  t6495 = 4.e-6*t1275*t6387;
  t6496 = t363*t6397;
  t6497 = t6494 + t6495 + t6496;
  t6519 = t144*t6514;
  t6540 = -1.*t6537*t1977;
  t6543 = t6519 + t6540;
  t6562 = t144*t6537;
  t6569 = t6514*t1977;
  t6579 = t6562 + t6569;
  t6584 = t2088*t6497;
  t6585 = -1.*t2406*t6543;
  t6588 = t6584 + t6585;
  t6306 = t273*t6277;
  t6310 = t1779*t6293;
  t6312 = t6306 + t6310;
  t6278 = -1.*t1779*t6277;
  t6296 = t273*t6293;
  t6298 = t6278 + t6296;
  t6334 = -1.*t6333*t3878;
  t6605 = t144*t6235;
  t6608 = t6227*t1977;
  t6612 = t6605 + t6608;
  t6617 = t144*t6227;
  t6618 = -1.*t6235*t1977;
  t6619 = t6617 + t6618;
  t6634 = t144*t6312;
  t6636 = t6298*t1977;
  t6642 = t6634 + t6636;
  t6616 = t3658*t6612;
  t6659 = t144*t6298;
  t6660 = -1.*t6312*t1977;
  t6662 = t6659 + t6660;
  t6654 = -1.*t6612*t3260;
  t6658 = -1.*t6642*t4062;
  t6676 = t6324*t2406;
  t6677 = t2088*t6619;
  t6678 = t6676 + t6677;
  t6684 = t2088*t6324;
  t6685 = -1.*t2406*t6619;
  t6687 = t6684 + t6685;
  t6695 = t6333*t2406;
  t6697 = t2088*t6662;
  t6700 = t6695 + t6697;
  t5685 = -1.*t3649*t3949;
  t5686 = -1.*t3611*t3974;
  t5690 = t5685 + t5686 + t4466;
  t6764 = t6324*t2356;
  t5770 = -1.*t3528*t3928;
  t5774 = -1.*t3675*t5301;
  t5777 = -1.*t3579*t3945;
  t5779 = t5770 + t5774 + t5777;
  t6783 = -1.*t3675*t6324;
  t6848 = t3834*t6387;
  t6851 = t729*t6186;
  t6852 = t6243*t3855;
  t6856 = t6171*t1096;
  t6859 = t6397*t3875;
  t6860 = t6196*t1542;
  t6861 = t6848 + t6851 + t6852 + t6856 + t6859 + t6860;
  t6879 = -1.*t3436*t6186;
  t6881 = -1.*t3502*t6196;
  t6883 = t6879 + t6881;
  t6866 = -1.*t3436*t3834;
  t6869 = -1.*t3502*t3875;
  t6874 = t6866 + t6869;
  t6718 = t2088*t6333;
  t6720 = -1.*t2406*t6662;
  t6721 = t6718 + t6720;
  t6761 = t6497*t3878;
  t6926 = -1.*t3658*t6612;
  t6499 = t6497*t2406;
  t6556 = t2088*t6543;
  t6557 = t6499 + t6556;
  t6932 = t6579*t4062;
  t6937 = t6612*t1983;
  t5927 = -1.*t3949*t1935;
  t5928 = -1.*t3974*t1902;
  t5931 = t5927 + t5928 + t4553;
  t5961 = t3239*t3949;
  t5969 = t3169*t3974;
  t5970 = t5961 + t5969 + t4532;
  t6000 = -1.*t3928*t1604;
  t6002 = -1.*t5301*t2356;
  t6005 = -1.*t3945*t1867;
  t6007 = t6000 + t6002 + t6005;
  t6040 = t3069*t3928;
  t6041 = t3272*t5301;
  t6044 = t3140*t3945;
  t6046 = t6040 + t6041 + t6044;
  t6984 = -1.*t6324*t2356;
  t7002 = t6324*t3272;
  t7128 = t2819*t6171;
  t7130 = t2973*t6186;
  t7131 = t3834*t6269;
  t7133 = t6259*t3855;
  t7134 = t6196*t3041;
  t7137 = t6243*t3875;
  t7139 = t7128 + t7130 + t7131 + t7133 + t7134 + t7137;
  t7102 = -1.*t3834*t6387;
  t7104 = -1.*t729*t6186;
  t7113 = -1.*t6243*t3855;
  t7115 = -1.*t6171*t1096;
  t7116 = -1.*t6397*t3875;
  t7120 = -1.*t6196*t1542;
  t7121 = t7102 + t7104 + t7113 + t7115 + t7116 + t7120;
  t7090 = t3834*t2973;
  t7091 = t2819*t3855;
  t7092 = t3041*t3875;
  t7096 = t7090 + t7091 + t7092;
  t7073 = -1.*t729*t3834;
  t7080 = -1.*t3855*t1096;
  t7085 = -1.*t3875*t1542;
  t7086 = t7073 + t7080 + t7085;
  t7009 = t6333*t3878;
  t6982 = -1.*t6497*t3878;
  t7163 = t6612*t3260;
  t7169 = t6642*t4062;
  t7182 = -1.*t6579*t4062;
  t7184 = -1.*t6612*t1983;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t136*t1983 - 1.*t2070*t2482)*var2[1] + (t1983*t2070 - 1.*t136*t2482)*var2[2];
  p_output1[10]=(-1.*t136*t3260 - 1.*t2070*t3306)*var2[1] + (t2070*t3260 - 1.*t136*t3306)*var2[2];
  p_output1[11]=(-1.*t136*t3658 - 1.*t2070*t3708)*var2[1] + (t2070*t3658 - 1.*t136*t3708)*var2[2];
  p_output1[12]=t3781*var2[0] - 1.*t136*t3771*var2[1] + t2070*t3771*var2[2] + (t3799*(t3708*t3983 + t3708*t3990 + t4004*t4012 + t4045*t4047) + t4058*t4072 + t4004*(-1.*t3306*t3983 - 1.*t3799*t4012 - 1.*t3990*t4058 - 1.*t4047*t4085) + t3708*t4114)*var2[3];
  p_output1[13]=t4058*var2[0] - 1.*t136*t4085*var2[1] + t2070*t4085*var2[2] + ((-1.*t3708*t3983 - 1.*t3708*t3990 - 1.*t4004*t4012 - 1.*t4045*t4047)*t4137 + t4004*(t2482*t3983 + t3781*t3990 + t3771*t4047 + t4012*t4137) + t3781*t4188 + t3708*t4217)*var2[3];
  p_output1[14]=t3708*var2[0] - 1.*t136*t4045*var2[1] + t2070*t4045*var2[2] + ((t3306*t3983 + t3799*t4012 + t3990*t4058 + t4047*t4085)*t4137 + t3799*(-1.*t2482*t3983 - 1.*t3781*t3990 - 1.*t3771*t4047 - 1.*t4012*t4137) + t3781*t4251 + t4058*t4265)*var2[3];
  p_output1[15]=t2088*t4273*var2[0] + (t136*t2406*t4273 + t2070*t4277)*var2[1] + (-1.*t2070*t2406*t4273 + t136*t4277)*var2[2] + (t2088*t4114*t4308 + t3799*(-1.*t2406*t3708*t4297 + t2088*t4004*t4297 + t4301 + t4305 + t2088*t3990*t4308 - 1.*t2406*t4047*t4308) + t2088*t4072*t4335 + t4004*(t2406*t3306*t4297 - 1.*t2088*t3799*t4297 + t4327 + t4329 - 1.*t2088*t3990*t4335 + t2406*t4047*t4335))*var2[3] + (t3260*(t3696*t4297 + t4301 + t4305 + t3976*t4308) + t4315*t4318 + t3658*(-1.*t3299*t4297 + t4327 + t4329 - 1.*t3976*t4335) + t3696*t4353)*var2[4];
  p_output1[16]=t2088*t4335*var2[0] + (t2070*t4315 + t136*t2406*t4335)*var2[1] + (t136*t4315 - 1.*t2070*t2406*t4335)*var2[2] + (t2088*t4188*t4273 + t2088*t4217*t4308 + t4137*(t2406*t3708*t4297 - 1.*t2088*t4004*t4297 - 1.*t2088*t3990*t4308 + t2406*t4047*t4308 + t4451 + t4452) + t4004*(t2088*t3990*t4273 - 1.*t2406*t4047*t4273 - 1.*t2406*t2482*t4297 + t2088*t4137*t4297 + t4471 + t4472))*var2[3] + (t1983*(-1.*t3696*t4297 - 1.*t3976*t4308 + t4451 + t4452) + t4277*t4468 + t3658*(t3976*t4273 + t2444*t4297 + t4471 + t4472) + t3696*t4483)*var2[4];
  p_output1[17]=t2088*t4308*var2[0] + (t2070*t3696 + t136*t2406*t4308)*var2[1] + (t136*t3696 - 1.*t2070*t2406*t4308)*var2[2] + (t2088*t4251*t4273 + t2088*t4265*t4335 + t4137*(-1.*t2406*t3306*t4297 + t2088*t3799*t4297 + t2088*t3990*t4335 - 1.*t2406*t4047*t4335 + t4526 + t4528) + t3799*(-1.*t2088*t3990*t4273 + t2406*t4047*t4273 + t2406*t2482*t4297 - 1.*t2088*t4137*t4297 + t4541 + t4546))*var2[3] + (t1983*(t3299*t4297 + t3976*t4335 + t4526 + t4528) + t4277*t4534 + t3260*(-1.*t3976*t4273 - 1.*t2444*t4297 + t4541 + t4546) + t4315*t4559)*var2[4];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=t2088*t4661*var2[0] + (t136*t2406*t4661 + t2070*t4674)*var2[1] + (-1.*t2070*t2406*t4661 + t136*t4674)*var2[2] + (t2088*t4114*t4707 + t3799*(t4693 - 1.*t2406*t3708*t4696 + t2088*t4004*t4696 + t4705 + t2088*t3990*t4707 - 1.*t2406*t4047*t4707) + t2088*t4072*t4730 + t4004*(t2406*t3306*t4696 - 1.*t2088*t3799*t4696 + t4724 + t4726 - 1.*t2088*t3990*t4730 + t2406*t4047*t4730))*var2[3] + (t4353*t4692 + t3260*(t4693 + t3696*t4696 + t4705 + t3976*t4707) + t4318*t4719 + t3658*(-1.*t3299*t4696 + t4724 + t4726 - 1.*t3976*t4730))*var2[4] + (t3675*(-1.*t3949*t4597 - 1.*t3169*t4603 - 1.*t3239*t4615 - 1.*t3974*t4622) + t3272*(t3649*t3974 + t3611*t4603 + t3649*t4615 + t3949*t4632))*var2[5];
  p_output1[28]=t2088*t4730*var2[0] + (t2070*t4719 + t136*t2406*t4730)*var2[1] + (t136*t4719 - 1.*t2070*t2406*t4730)*var2[2] + (t2088*t4188*t4661 + t2088*t4217*t4707 + t4137*(t2406*t3708*t4696 - 1.*t2088*t4004*t4696 - 1.*t2088*t3990*t4707 + t2406*t4047*t4707 + t4844 + t4848) + t4004*(t2088*t3990*t4661 - 1.*t2406*t4047*t4661 - 1.*t2406*t2482*t4696 + t2088*t4137*t4696 + t4863 + t4864))*var2[3] + (t4468*t4674 + t4483*t4692 + t1983*(-1.*t3696*t4696 - 1.*t3976*t4707 + t4844 + t4848) + t3658*(t3976*t4661 + t2444*t4696 + t4863 + t4864))*var2[4] + (t2356*(-1.*t3649*t3974 - 1.*t3611*t4603 - 1.*t3649*t4615 - 1.*t3949*t4632) + t3675*(t1902*t4603 + t1935*t4615 + t3949*t4652 + t3974*t4657))*var2[5];
  p_output1[29]=t2088*t4707*var2[0] + (t2070*t4692 + t136*t2406*t4707)*var2[1] + (t136*t4692 - 1.*t2070*t2406*t4707)*var2[2] + (t2088*t4251*t4661 + t2088*t4265*t4730 + t4137*(-1.*t2406*t3306*t4696 + t2088*t3799*t4696 + t2088*t3990*t4730 - 1.*t2406*t4047*t4730 + t5008 + t5013) + t3799*(-1.*t2088*t3990*t4661 + t2406*t4047*t4661 + t2406*t2482*t4696 - 1.*t2088*t4137*t4696 + t5036 + t5039))*var2[3] + (t4534*t4674 + t4559*t4719 + t1983*(t3299*t4696 + t3976*t4730 + t5008 + t5013) + t3260*(-1.*t3976*t4661 - 1.*t2444*t4696 + t5036 + t5039))*var2[4] + (t2356*(t3949*t4597 + t3169*t4603 + t3239*t4615 + t3974*t4622) + t3272*(-1.*t1902*t4603 - 1.*t1935*t4615 - 1.*t3949*t4652 - 1.*t3974*t4657))*var2[5];
  p_output1[30]=t5404*var2[0] + (t2070*t5516 - 1.*t136*t5524)*var2[1] + (t136*t5516 + t2070*t5524)*var2[2] + (t4072*t5553 + t4114*t5561 + t3799*(t5438 + t5463 + t3990*t5561 + t4047*t5582 + t4004*t5588 + t3708*t5600) + t4004*(t5471 + t5494 - 1.*t3990*t5553 - 1.*t3799*t5588 - 1.*t3306*t5600 - 1.*t4047*t5620))*var2[3] + (t4318*t5422 + t4353*t5433 + t3260*(t5275 + t5277 + t5438 + t3976*t5443 + t3696*t5452 + t5463) + t3658*(t5205 + t5214 - 1.*t3299*t5452 + t5471 - 1.*t3976*t5486 + t5494))*var2[4] + (t3579*(-1.*t3239*t3949 - 1.*t3169*t3974 + t4349) + t3675*(-1.*t3949*t5137 - 1.*t3974*t5151 - 1.*t3169*t5188 - 1.*t3239*t5194 + t5205 + t5214) + t3272*(t3611*t5188 + t3649*t5194 + t3949*t5253 + t3974*t5267 + t5275 + t5277) + t5201*t5289)*var2[5] + (t3579*(-1.*t3069*t3928 - 1.*t3140*t3945 - 1.*t3272*t5301) + t3272*(t3579*t5160 + t3528*t5185 + t3945*t5238 + t3928*t5251 + t5277 + t3579*t5301) + t3675*(-1.*t3945*t5117 - 1.*t3928*t5130 - 1.*t3140*t5160 - 1.*t3069*t5185 + t5214 - 1.*t5201*t5301) + t5201*t5345 - 0.15121*t5359 - 0.15121*t5369)*var2[9];
  p_output1[31]=t5553*var2[0] + (t2070*t5422 - 1.*t136*t5620)*var2[1] + (t136*t5422 + t2070*t5620)*var2[2] + (t4188*t5404 + t4217*t5561 + t4137*(-1.*t3990*t5561 - 1.*t4047*t5582 - 1.*t4004*t5588 - 1.*t3708*t5600 + t5824 + t5828) + t4004*(t3990*t5404 + t4047*t5524 + t4137*t5588 + t2482*t5600 + t5834 + t5849))*var2[3] + (t4483*t5433 + t4468*t5516 + t1983*(-1.*t3976*t5443 - 1.*t3696*t5452 + t5678 + t5679 + t5824 + t5828) + t3658*(t3976*t5400 + t2444*t5452 + t5662 + t5664 + t5834 + t5849))*var2[4] + (t3579*(t1935*t3949 + t1902*t3974 + t4479) + t3675*(t1902*t5188 + t1935*t5194 + t3949*t5384 + t3974*t5396 + t5662 + t5664) + t2356*(-1.*t3611*t5188 - 1.*t3649*t5194 - 1.*t3949*t5253 - 1.*t3974*t5267 + t5678 + t5679) + t5376*t5690)*var2[5] + (-0.15121*t5117 - 0.15121*t5130 + t3579*(t1604*t3928 + t1867*t3945 + t2356*t5301) + t3675*(t1867*t5160 + t1604*t5185 + t3945*t5359 + t3928*t5369 + t5301*t5376 + t5662) + t2356*(-1.*t3579*t5160 - 1.*t3528*t5185 - 1.*t3945*t5238 - 1.*t3928*t5251 - 1.*t3579*t5301 + t5679) + t5376*t5779)*var2[9];
  p_output1[32]=t5561*var2[0] + (t2070*t5433 - 1.*t136*t5582)*var2[1] + (t136*t5433 + t2070*t5582)*var2[2] + (t4251*t5404 + t4265*t5553 + t4137*(t3990*t5553 + t3799*t5588 + t3306*t5600 + t4047*t5620 + t6073 + t6099) + t3799*(-1.*t3990*t5404 - 1.*t4047*t5524 - 1.*t4137*t5588 - 1.*t2482*t5600 + t6107 + t6112))*var2[3] + (t4559*t5422 + t4534*t5516 + t1983*(t3299*t5452 + t3976*t5486 + t5955 + t5958 + t6073 + t6099) + t3260*(-1.*t3976*t5400 - 1.*t2444*t5452 + t5915 + t5918 + t6107 + t6112))*var2[4] + (t3272*(-1.*t1902*t5188 - 1.*t1935*t5194 - 1.*t3949*t5384 - 1.*t3974*t5396 + t5915 + t5918) + t5201*t5931 + t2356*(t3949*t5137 + t3974*t5151 + t3169*t5188 + t3239*t5194 + t5955 + t5958) + t5376*t5970)*var2[5] + (-0.15121*t5238 - 0.15121*t5251 + t3272*(-1.*t1867*t5160 - 1.*t1604*t5185 - 1.*t3945*t5359 - 1.*t3928*t5369 - 1.*t5301*t5376 + t5915) + t2356*(t3945*t5117 + t3928*t5130 + t3140*t5160 + t3069*t5185 + t5201*t5301 + t5958) + t5201*t6007 + t5376*t6046)*var2[9];
  p_output1[33]=t6557*var2[0] + (t2070*t6579 - 1.*t136*t6588)*var2[1] + (t136*t6579 + t2070*t6588)*var2[2] + (t3799*(t6616 + t4004*t6678 + t3708*t6687) + t4072*t6700 + t4004*(t6654 + t6658 - 1.*t3799*t6678 - 1.*t3306*t6687 - 1.*t3990*t6700 - 1.*t4047*t6721))*var2[3] + (t3260*(t6346 + t6616 + t3696*t6619) + t4318*t6642 + t3658*(t6325 + t6334 - 1.*t3299*t6619 + t6654 + t6658 - 1.*t3976*t6662))*var2[4] + (t5289*t6333 + t3675*(-1.*t3239*t6227 - 1.*t3169*t6235 - 1.*t3949*t6298 - 1.*t3974*t6312 + t6325 + t6334) + t3272*(t3649*t6227 + t3611*t6235 + t6346))*var2[5] + (t5345*t6333 + t3675*(-1.*t3069*t6205 - 1.*t3140*t6221 - 1.*t3928*t6277 - 1.*t3945*t6293 + t6325 - 1.*t5301*t6333) + t3272*(t3528*t6205 + t3579*t6221 + t6346) - 0.15121*t6402 - 0.15121*t6413)*var2[9] + (-0.038749*t6243 + 1.e-6*t6387 - 0.28121*t6397 - 1.*t3436*t6451 - 1.*t6269*t6465 - 1.*t2973*t6472 + 4.e-6*(-1.*t3502*t6451 - 1.*t6243*t6465 - 1.*t3041*t6472))*var2[10];
  p_output1[34]=t6700*var2[0] + (t2070*t6642 - 1.*t136*t6721)*var2[1] + (t136*t6642 + t2070*t6721)*var2[2] + (t4188*t6557 + t4137*(-1.*t4004*t6678 - 1.*t3708*t6687 + t6926) + t4004*(t3990*t6557 + t4047*t6588 + t4137*t6678 + t2482*t6687 + t6932 + t6937))*var2[3] + (t4468*t6579 + t1983*(-1.*t3696*t6619 + t6783 + t6926) + t3658*(t3976*t6543 + t2444*t6619 + t6761 + t6764 + t6932 + t6937))*var2[4] + (t5690*t6497 + t3675*(t1935*t6227 + t1902*t6235 + t3949*t6514 + t3974*t6537 + t6761 + t6764) + t2356*(-1.*t3649*t6227 - 1.*t3611*t6235 + t6783))*var2[5] + (-0.15121*t6277 - 0.15121*t6293 + t5779*t6497 + t3675*(t1604*t6205 + t1867*t6221 + t3928*t6402 + t3945*t6413 + t5301*t6497 + t6764) + t2356*(-1.*t3528*t6205 - 1.*t3579*t6221 + t6783))*var2[9] + (-0.28121*t6243 - 0.038749*t6259 + 1.e-6*t6269 - 1.*t3436*t6861 - 1.*t6387*t6874 + 4.e-6*(-1.*t3502*t6861 - 1.*t6397*t6874 - 1.*t1542*t6883) - 1.*t6883*t729)*var2[10];
  p_output1[35]=(t4251*t6557 + t4265*t6700 + t4137*(t3799*t6678 + t3306*t6687 + t3990*t6700 + t4047*t6721 + t7163 + t7169) + t3799*(-1.*t3990*t6557 - 1.*t4047*t6588 - 1.*t4137*t6678 - 1.*t2482*t6687 + t7182 + t7184))*var2[3] + (t4534*t6579 + t4559*t6642 + t1983*(t3299*t6619 + t3976*t6662 + t7002 + t7009 + t7163 + t7169) + t3260*(-1.*t3976*t6543 - 1.*t2444*t6619 + t6982 + t6984 + t7182 + t7184))*var2[4] + (t5931*t6333 + t5970*t6497 + t3272*(-1.*t1935*t6227 - 1.*t1902*t6235 - 1.*t3949*t6514 - 1.*t3974*t6537 + t6982 + t6984) + t2356*(t3239*t6227 + t3169*t6235 + t3949*t6298 + t3974*t6312 + t7002 + t7009))*var2[5] + (t6007*t6333 + t6046*t6497 + t3272*(-1.*t1604*t6205 - 1.*t1867*t6221 - 1.*t3928*t6402 - 1.*t3945*t6413 - 1.*t5301*t6497 + t6984) + t2356*(t3069*t6205 + t3140*t6221 + t3928*t6277 + t3945*t6293 + t5301*t6333 + t7002))*var2[9] + (-1.*t6269*t7086 - 1.*t6387*t7096 - 1.*t2973*t7121 + 4.e-6*(-1.*t6243*t7086 - 1.*t6397*t7096 - 1.*t3041*t7121 - 1.*t1542*t7139) - 1.*t7139*t729)*var2[10];
  p_output1[36]=0;
  p_output1[37]=0;
  p_output1[38]=0;
  p_output1[39]=0;
  p_output1[40]=0;
  p_output1[41]=0;
  p_output1[42]=0;
  p_output1[43]=0;
  p_output1[44]=0;
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJh_FrFoot_ParallelStance.hh"

namespace SymFunction
{

void dJh_FrFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
