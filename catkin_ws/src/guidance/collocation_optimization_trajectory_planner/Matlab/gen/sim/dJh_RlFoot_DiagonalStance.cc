/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:10:36 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t812;
  double t815;
  double t890;
  double t436;
  double t523;
  double t583;
  double t1049;
  double t1117;
  double t762;
  double t894;
  double t916;
  double t1142;
  double t1166;
  double t1172;
  double t750;
  double t1261;
  double t1267;
  double t1280;
  double t1289;
  double t1294;
  double t1439;
  double t1465;
  double t1502;
  double t1513;
  double t1544;
  double t1564;
  double t1599;
  double t1720;
  double t772;
  double t774;
  double t1229;
  double t1235;
  double t1254;
  double t1371;
  double t1387;
  double t1400;
  double t1426;
  double t1431;
  double t1643;
  double t1644;
  double t395;
  double t1722;
  double t1776;
  double t1818;
  double t1820;
  double t1837;
  double t1842;
  double t1860;
  double t1876;
  double t1893;
  double t1898;
  double t336;
  double t1941;
  double t1953;
  double t1995;
  double t1708;
  double t1913;
  double t1929;
  double t1997;
  double t2039;
  double t1933;
  double t1998;
  double t2015;
  double t324;
  double t2056;
  double t2070;
  double t2085;
  double t2102;
  double t2136;
  double t2240;
  double t2249;
  double t2265;
  double t2288;
  double t2308;
  double t2341;
  double t2342;
  double t2363;
  double t2365;
  double t2397;
  double t2404;
  double t2409;
  double t2410;
  double t2484;
  double t2497;
  double t2530;
  double t2548;
  double t2552;
  double t2565;
  double t2584;
  double t2586;
  double t2591;
  double t2537;
  double t2582;
  double t2595;
  double t2596;
  double t2645;
  double t2646;
  double t2650;
  double t2661;
  double t2712;
  double t2717;
  double t2720;
  double t2605;
  double t2693;
  double t2710;
  double t2711;
  double t2722;
  double t2728;
  double t2730;
  double t2736;
  double t2737;
  double t2755;
  double t2758;
  double t2762;
  double t2763;
  double t2768;
  double t2770;
  double t2778;
  double t2895;
  double t2835;
  double t2843;
  double t2854;
  double t2862;
  double t2863;
  double t2869;
  double t2872;
  double t2879;
  double t2888;
  double t2891;
  double t2896;
  double t2897;
  double t2900;
  double t2921;
  double t2923;
  double t2925;
  double t2934;
  double t2940;
  double t2945;
  double t2878;
  double t2916;
  double t2947;
  double t2949;
  double t2956;
  double t2957;
  double t2966;
  double t2968;
  double t2994;
  double t2995;
  double t2997;
  double t2954;
  double t2977;
  double t2985;
  double t2986;
  double t3003;
  double t3012;
  double t3020;
  double t3045;
  double t3052;
  double t3055;
  double t3062;
  double t3075;
  double t3091;
  double t3094;
  double t3097;
  double t3101;
  double t3193;
  double t3195;
  double t3199;
  double t3227;
  double t3231;
  double t3237;
  double t3239;
  double t3242;
  double t3244;
  double t3246;
  double t3247;
  double t3249;
  double t3251;
  double t3252;
  double t3261;
  double t3268;
  double t3274;
  double t3288;
  double t3290;
  double t3292;
  double t3303;
  double t3310;
  double t3312;
  double t3319;
  double t3323;
  double t3336;
  double t3341;
  double t3348;
  double t3351;
  double t3358;
  double t3360;
  double t3361;
  double t3362;
  double t3363;
  double t3366;
  double t3222;
  double t3404;
  double t3381;
  double t3382;
  double t3385;
  double t3394;
  double t3397;
  double t3399;
  double t3403;
  double t3416;
  double t3418;
  double t3421;
  double t3423;
  double t3427;
  double t3432;
  double t3437;
  double t3442;
  double t3446;
  double t3453;
  double t3455;
  double t3458;
  double t3461;
  double t3462;
  double t3464;
  double t3466;
  double t3220;
  double t3221;
  double t3224;
  double t3226;
  double t3228;
  double t3230;
  double t3256;
  double t3326;
  double t3372;
  double t3375;
  double t3383;
  double t3434;
  double t3470;
  double t3472;
  double t3475;
  double t3485;
  double t3489;
  double t3490;
  double t3514;
  double t3516;
  double t3521;
  double t3570;
  double t3571;
  double t3575;
  double t3578;
  double t3581;
  double t3591;
  double t3537;
  double t3545;
  double t3547;
  double t3379;
  double t3525;
  double t3526;
  double t3215;
  double t3218;
  double t3219;
  double t3603;
  double t3608;
  double t3620;
  double t3656;
  double t3660;
  double t3667;
  double t3562;
  double t3565;
  double t3568;
  double t3763;
  double t3768;
  double t3769;
  double t4035;
  double t4037;
  double t4038;
  double t3628;
  double t4079;
  double t4086;
  double t4089;
  double t3701;
  double t4075;
  double t4094;
  double t4068;
  double t4069;
  double t4070;
  double t4135;
  double t4148;
  double t4120;
  double t4121;
  double t4132;
  double t3631;
  double t3635;
  double t3637;
  double t3702;
  double t3703;
  double t3705;
  double t3821;
  double t3863;
  double t4276;
  double t4280;
  double t4320;
  double t4336;
  double t3826;
  double t3830;
  double t3831;
  double t3873;
  double t3880;
  double t3882;
  double t3952;
  double t4001;
  double t4431;
  double t4435;
  double t4445;
  double t4447;
  double t3953;
  double t3957;
  double t3965;
  double t4008;
  double t4012;
  double t4019;
  double t4536;
  double t4538;
  double t4542;
  double t4551;
  double t4564;
  double t4614;
  double t4668;
  double t4671;
  double t4673;
  double t4674;
  double t4681;
  double t4708;
  double t4709;
  double t4637;
  double t4640;
  double t4644;
  double t4109;
  double t4113;
  double t4116;
  double t4577;
  double t4584;
  double t4600;
  double t4160;
  double t4162;
  double t4171;
  double t4785;
  double t4791;
  double t4797;
  double t4810;
  double t4815;
  double t4759;
  double t4764;
  double t4832;
  double t4836;
  double t4839;
  double t4820;
  double t4831;
  double t4821;
  double t4827;
  double t4855;
  double t4866;
  double t4856;
  double t4860;
  double t4286;
  double t4287;
  double t4288;
  double t4307;
  double t4308;
  double t4311;
  double t5046;
  double t5051;
  double t5062;
  double t5067;
  double t4424;
  double t4425;
  double t4428;
  double t4452;
  double t4458;
  double t4463;
  double t5218;
  double t5230;
  double t5239;
  double t5242;
  double t5334;
  double t5348;
  double t5351;
  double t5353;
  double t5330;
  double t5331;
  double t5335;
  double t5385;
  double t5386;
  double t5389;
  double t5390;
  double t5320;
  double t5321;
  double t5313;
  double t5314;
  double t5453;
  double t5344;
  double t5352;
  double t5361;
  double t5366;
  double t5413;
  double t5416;
  double t5421;
  double t5424;
  double t5428;
  double t5429;
  double t5436;
  double t5437;
  double t5441;
  double t5457;
  double t5458;
  double t5459;
  double t5461;
  double t5463;
  double t5464;
  double t5469;
  double t5471;
  double t5472;
  double t5475;
  double t5480;
  double t5484;
  double t5488;
  double t5489;
  double t5490;
  double t5491;
  double t5492;
  double t5499;
  double t5412;
  double t5473;
  double t5445;
  double t5446;
  double t5447;
  double t5449;
  double t5406;
  double t5407;
  double t5408;
  double t5409;
  double t5527;
  double t5545;
  double t5534;
  double t5539;
  double t5541;
  double t5542;
  double t5510;
  double t5514;
  double t5517;
  double t5519;
  double t5599;
  double t5600;
  double t5603;
  double t5605;
  double t5606;
  double t5609;
  double t5315;
  double t5316;
  double t5322;
  double t5325;
  double t5329;
  double t5332;
  double t5336;
  double t5339;
  double t5681;
  double t5683;
  double t5684;
  double t5665;
  double t5669;
  double t5673;
  double t5655;
  double t5657;
  double t5658;
  double t5659;
  double t5678;
  double t5687;
  double t5688;
  double t5703;
  double t5705;
  double t5712;
  double t5715;
  double t5721;
  double t5722;
  double t5614;
  double t5619;
  double t5623;
  double t5631;
  double t5633;
  double t5635;
  double t5576;
  double t5577;
  double t5578;
  double t5581;
  double t5583;
  double t5584;
  double t5758;
  double t5762;
  double t5764;
  double t5747;
  double t5750;
  double t5752;
  double t5778;
  double t5790;
  double t5791;
  double t5805;
  double t5806;
  double t5813;
  double t5830;
  double t5832;
  double t5837;
  double t5769;
  double t5771;
  double t5772;
  double t5775;
  double t5798;
  double t5914;
  double t5918;
  double t5925;
  double t5851;
  double t5862;
  double t5897;
  double t5901;
  double t5905;
  double t5954;
  double t5955;
  double t5957;
  double t5961;
  double t5963;
  double t5964;
  double t6077;
  double t6096;
  double t6110;
  double t6135;
  double t5979;
  double t5980;
  double t5986;
  double t5660;
  double t5690;
  double t5692;
  double t6263;
  double t6264;
  double t5939;
  double t5940;
  double t5944;
  double t6273;
  double t6275;
  double t6354;
  double t6357;
  double t6368;
  double t6376;
  double t6475;
  double t6476;
  double t6481;
  double t6484;
  double t6545;
  double t6533;
  double t6534;
  double t6537;
  double t6539;
  double t6541;
  double t6546;
  double t6549;
  double t6551;
  double t6552;
  double t6553;
  double t6555;
  double t6575;
  double t6606;
  double t6570;
  double t6571;
  double t6573;
  double t6577;
  double t6580;
  double t6583;
  double t6585;
  double t6586;
  double t6587;
  double t6589;
  double t6590;
  double t6600;
  double t6602;
  double t6604;
  double t6607;
  double t6609;
  double t6611;
  double t6616;
  double t6617;
  double t6620;
  double t6625;
  double t6627;
  double t6628;
  double t6631;
  double t6633;
  double t6634;
  double t6635;
  double t6641;
  double t6644;
  double t6694;
  double t6695;
  double t6698;
  double t6699;
  double t6704;
  double t6707;
  double t6708;
  double t6712;
  double t6713;
  double t6714;
  double t6593;
  double t6621;
  double t6645;
  double t6655;
  double t6660;
  double t6662;
  double t6663;
  double t6665;
  double t6672;
  double t6676;
  double t6679;
  double t6688;
  double t6762;
  double t6766;
  double t6767;
  double t6774;
  double t6775;
  double t6780;
  double t6782;
  double t6788;
  double t6790;
  double t6792;
  double t6794;
  double t5370;
  double t5372;
  double t5373;
  double t6721;
  double t6724;
  double t6730;
  double t6731;
  double t5395;
  double t5397;
  double t5398;
  double t6829;
  double t6830;
  double t6833;
  double t6836;
  double t6838;
  double t6841;
  double t6843;
  double t6845;
  double t6847;
  double t6849;
  double t6852;
  double t6854;
  double t6855;
  double t6857;
  double t6863;
  double t6864;
  double t6865;
  double t6867;
  double t6873;
  double t6874;
  double t6875;
  double t6877;
  double t6668;
  double t6735;
  double t6736;
  double t6738;
  double t6739;
  double t6742;
  double t6701;
  double t6710;
  double t6715;
  double t6716;
  double t6760;
  double t6797;
  double t6909;
  double t6911;
  double t6912;
  double t6916;
  double t6918;
  double t6923;
  double t6772;
  double t6779;
  double t6783;
  double t6784;
  double t6798;
  double t6799;
  double t6800;
  double t6801;
  double t5559;
  double t5561;
  double t5562;
  double t5566;
  double t5569;
  double t5570;
  double t6542;
  double t6550;
  double t6557;
  double t6558;
  double t6563;
  double t6564;
  double t6565;
  double t6566;
  double t7007;
  double t7008;
  double t7013;
  double t6998;
  double t7002;
  double t7003;
  double t6987;
  double t6988;
  double t6989;
  double t6990;
  double t7006;
  double t7015;
  double t7016;
  double t7021;
  double t7024;
  double t7025;
  double t7028;
  double t7030;
  double t7032;
  double t6941;
  double t6942;
  double t6943;
  double t6927;
  double t6929;
  double t6933;
  double t7044;
  double t7046;
  double t7047;
  double t7049;
  double t7051;
  double t7054;
  double t6965;
  double t6966;
  double t6971;
  double t6956;
  double t6958;
  double t6959;
  double t7088;
  double t7089;
  double t7093;
  double t7068;
  double t7069;
  double t7071;
  double t7059;
  double t7072;
  double t7060;
  double t7062;
  double t7064;
  double t7079;
  double t7094;
  double t7103;
  double t7104;
  double t7107;
  double t7110;
  double t7111;
  double t7118;
  double t7081;
  double t7082;
  double t7083;
  double t7147;
  double t7148;
  double t7150;
  double t7121;
  double t7124;
  double t7125;
  double t6037;
  double t6049;
  double t6050;
  double t6065;
  double t6071;
  double t6072;
  double t7232;
  double t7233;
  double t7236;
  double t7238;
  double t7241;
  double t7244;
  double t7246;
  double t7247;
  double t7250;
  double t7253;
  double t7254;
  double t7258;
  double t7259;
  double t7261;
  double t7262;
  double t7265;
  double t7266;
  double t7267;
  double t7272;
  double t7273;
  double t7275;
  double t7277;
  double t7181;
  double t7186;
  double t6143;
  double t6144;
  double t6150;
  double t6157;
  double t6159;
  double t6160;
  double t7199;
  double t7205;
  double t7155;
  double t7158;
  double t7161;
  double t7353;
  double t7355;
  double t7129;
  double t7132;
  double t7135;
  double t6996;
  double t7017;
  double t7018;
  double t7369;
  double t7373;
  double t6337;
  double t6338;
  double t6339;
  double t6341;
  double t6343;
  double t6348;
  double t7477;
  double t7479;
  double t7480;
  double t7481;
  double t7493;
  double t7494;
  double t7496;
  double t7497;
  double t7498;
  double t7500;
  double t7501;
  double t7504;
  double t7506;
  double t7507;
  double t7509;
  double t7511;
  double t7516;
  double t7517;
  double t7523;
  double t7524;
  double t7526;
  double t7530;
  double t7425;
  double t7432;
  double t6394;
  double t6395;
  double t6398;
  double t6402;
  double t6408;
  double t6410;
  double t7446;
  double t7453;
  double t7619;
  double t7623;
  double t7642;
  double t7647;
  t812 = Cos(var1[14]);
  t815 = -1.*t812;
  t890 = 1. + t815;
  t436 = Cos(var1[13]);
  t523 = -1.*t436;
  t583 = 1. + t523;
  t1049 = Sin(var1[14]);
  t1117 = 4.e-6*t1049;
  t762 = Sin(var1[13]);
  t894 = 1.000000000016*t890;
  t916 = -7.e-6*t890;
  t1142 = t916 + t1117;
  t1166 = -7.e-6*t1142;
  t1172 = -1. + t894 + t1166;
  t750 = -7.e-6*t583;
  t1261 = -6.5e-11*t890;
  t1267 = 1. + t1261;
  t1280 = -7.e-6*t1267;
  t1289 = 7.e-6*t890;
  t1294 = t1280 + t1289 + t1117;
  t1439 = -2.8e-11*t890;
  t1465 = -1. + t812;
  t1502 = 4.e-6*t1465;
  t1513 = -7.e-6*t1049;
  t1544 = t1502 + t1513;
  t1564 = -7.e-6*t1544;
  t1599 = t1439 + t1564 + t1049;
  t1720 = Sin(var1[12]);
  t772 = -4.e-6*t762;
  t774 = t750 + t772;
  t1229 = t774*t1172;
  t1235 = -6.5e-11*t583;
  t1254 = 1. + t1235;
  t1371 = t1254*t1294;
  t1387 = -1. + t436;
  t1400 = 4.e-6*t1387;
  t1426 = 7.e-6*t762;
  t1431 = t1400 + t1426;
  t1643 = t1431*t1599;
  t1644 = t1229 + t1371 + t1643;
  t395 = Cos(var1[12]);
  t1722 = -1.000000000016*t583;
  t1776 = 1. + t1722;
  t1818 = t1776*t1172;
  t1820 = 4.e-6*t762;
  t1837 = t750 + t1820;
  t1842 = t1837*t1294;
  t1860 = 2.8e-11*t583;
  t1876 = t1860 + t762;
  t1893 = t1876*t1599;
  t1898 = t1818 + t1842 + t1893;
  t336 = Cos(var1[5]);
  t1941 = -1.*t1720*t1644;
  t1953 = t395*t1898;
  t1995 = t1941 + t1953;
  t1708 = t395*t1644;
  t1913 = t1720*t1898;
  t1929 = t1708 + t1913;
  t1997 = Sin(var1[5]);
  t2039 = Cos(var1[3]);
  t1933 = t336*t1929;
  t1998 = t1995*t1997;
  t2015 = t1933 + t1998;
  t324 = Sin(var1[3]);
  t2056 = Cos(var1[4]);
  t2070 = -1.*t762;
  t2085 = t1860 + t2070;
  t2102 = t2085*t1172;
  t2136 = -7.e-6*t762;
  t2240 = t1400 + t2136;
  t2249 = t2240*t1294;
  t2265 = -1.000000000049*t583;
  t2288 = 1. + t2265;
  t2308 = t2288*t1599;
  t2341 = t2102 + t2249 + t2308;
  t2342 = t2056*t2341;
  t2363 = Sin(var1[4]);
  t2365 = t336*t1995;
  t2397 = -1.*t1929*t1997;
  t2404 = t2365 + t2397;
  t2409 = -1.*t2363*t2404;
  t2410 = t2342 + t2409;
  t2484 = -1.000000000049*t890;
  t2497 = 4.e-6*t1544;
  t2530 = 1. + t2484 + t2497;
  t2548 = 4.e-6*t1267;
  t2552 = 7.e-6*t1049;
  t2565 = t2548 + t1502 + t2552;
  t2584 = 2.8e-11*t890;
  t2586 = 4.e-6*t1142;
  t2591 = t2584 + t2586 + t1049;
  t2537 = t1876*t2530;
  t2582 = t1837*t2565;
  t2595 = t1776*t2591;
  t2596 = t2537 + t2582 + t2595;
  t2645 = t1431*t2530;
  t2646 = t1254*t2565;
  t2650 = t774*t2591;
  t2661 = t2645 + t2646 + t2650;
  t2712 = t395*t2596;
  t2717 = -1.*t1720*t2661;
  t2720 = t2712 + t2717;
  t2605 = t1720*t2596;
  t2693 = t395*t2661;
  t2710 = t2605 + t2693;
  t2711 = t336*t2710;
  t2722 = t2720*t1997;
  t2728 = t2711 + t2722;
  t2730 = t2288*t2530;
  t2736 = t2240*t2565;
  t2737 = t2085*t2591;
  t2755 = t2730 + t2736 + t2737;
  t2758 = t2056*t2755;
  t2762 = t336*t2720;
  t2763 = -1.*t2710*t1997;
  t2768 = t2762 + t2763;
  t2770 = -1.*t2363*t2768;
  t2778 = t2758 + t2770;
  t2895 = -1.*t1049;
  t2835 = 4.e-6*t890;
  t2843 = t2835 + t1513;
  t2854 = 4.e-6*t2843;
  t2862 = -4.e-6*t1049;
  t2863 = t916 + t2862;
  t2869 = -7.e-6*t2863;
  t2872 = 1. + t1261 + t2854 + t2869;
  t2879 = 1.000000000049*t890;
  t2888 = -1. + t2879;
  t2891 = 4.e-6*t2888;
  t2896 = t2584 + t2895;
  t2897 = -7.e-6*t2896;
  t2900 = t2891 + t1502 + t2897 + t1513;
  t2921 = -1.000000000016*t890;
  t2923 = 1. + t2921;
  t2925 = -7.e-6*t2923;
  t2934 = t1439 + t2895;
  t2940 = 4.e-6*t2934;
  t2945 = t2925 + t916 + t2940 + t1117;
  t2878 = t1837*t2872;
  t2916 = t1876*t2900;
  t2947 = t1776*t2945;
  t2949 = t2878 + t2916 + t2947;
  t2956 = t1254*t2872;
  t2957 = t1431*t2900;
  t2966 = t774*t2945;
  t2968 = t2956 + t2957 + t2966;
  t2994 = t395*t2949;
  t2995 = -1.*t1720*t2968;
  t2997 = t2994 + t2995;
  t2954 = t1720*t2949;
  t2977 = t395*t2968;
  t2985 = t2954 + t2977;
  t2986 = t336*t2985;
  t3003 = t2997*t1997;
  t3012 = t2986 + t3003;
  t3020 = t2240*t2872;
  t3045 = t2288*t2900;
  t3052 = t2085*t2945;
  t3055 = t3020 + t3045 + t3052;
  t3062 = t2056*t3055;
  t3075 = t336*t2997;
  t3091 = -1.*t2985*t1997;
  t3094 = t3075 + t3091;
  t3097 = -1.*t2363*t3094;
  t3101 = t3062 + t3097;
  t3193 = -1.*t2341*t2363;
  t3195 = -1.*t2056*t2404;
  t3199 = t3193 + t3195;
  t3227 = -2.8e-11*t583;
  t3231 = -2.598649999999999e-7*var1[14];
  t3237 = 0.148705*t1267;
  t3239 = -2.3905277499999995e-16*t890;
  t3242 = -0.038922999986*t2843;
  t3244 = -0.80315*t2863;
  t3246 = t1289 + t1117;
  t3247 = -0.503149000008*t3246;
  t3249 = t1502 + t2552;
  t3251 = -0.038924*t3249;
  t3252 = t3231 + t3237 + t3239 + t3242 + t3244 + t3247 + t3251;
  t3261 = 1.0394599999999997e-12*var1[14];
  t3268 = 1. + t2484;
  t3274 = -0.038924*t3268;
  t3288 = -0.03892299998790722*t890;
  t3290 = -0.80315*t2896;
  t3292 = 0.148705*t1544;
  t3303 = t2835 + t2552;
  t3310 = -3.6777349999999994e-6*t3303;
  t3312 = t1439 + t1049;
  t3319 = -0.503149000008*t3312;
  t3323 = t3261 + t3274 + t3288 + t3290 + t3292 + t3310 + t3319;
  t3336 = 1.8190549999999993e-12*var1[14];
  t3341 = -0.80315*t2923;
  t3348 = -0.5031490000160505*t890;
  t3351 = -0.038922999986*t2934;
  t3358 = t1289 + t2862;
  t3360 = -3.6777349999999994e-6*t3358;
  t3361 = 0.148705*t1142;
  t3362 = t2584 + t1049;
  t3363 = -0.038924*t3362;
  t3366 = t3336 + t3341 + t3348 + t3351 + t3360 + t3361 + t3363;
  t3222 = 4.e-6*t583;
  t3404 = 7.e-6*t583;
  t3381 = -1.*t395;
  t3382 = 1. + t3381;
  t3385 = 0.15121*t1720;
  t3394 = 1.0248489999999998e-12*var1[13];
  t3397 = -0.28120900000849935*t583;
  t3399 = t3227 + t2070;
  t3403 = -0.038748999993*t3399;
  t3416 = t3404 + t772;
  t3418 = -2.123459e-6*t3416;
  t3421 = t1837*t3252;
  t3423 = t1876*t3323;
  t3427 = t1776*t3366;
  t3432 = t3394 + t3397 + t3403 + t3418 + t3421 + t3423 + t3427;
  t3437 = -1.4640699999999997e-7*var1[13];
  t3442 = -1.38024835e-16*t583;
  t3446 = t3222 + t2136;
  t3453 = -0.038748999993*t3446;
  t3455 = t3404 + t1820;
  t3458 = -0.281209000004*t3455;
  t3461 = t1254*t3252;
  t3462 = t1431*t3323;
  t3464 = t774*t3366;
  t3466 = t3437 + t3442 + t3453 + t3458 + t3461 + t3462 + t3464;
  t3220 = 5.856279999999999e-13*var1[13];
  t3221 = -0.0387489999948987*t583;
  t3224 = t3222 + t1426;
  t3226 = -2.123459e-6*t3224;
  t3228 = t3227 + t762;
  t3230 = -0.281209000004*t3228;
  t3256 = t2240*t3252;
  t3326 = t2288*t3323;
  t3372 = t2085*t3366;
  t3375 = t3220 + t3221 + t3226 + t3230 + t3256 + t3326 + t3372;
  t3383 = -0.15121*t3382;
  t3434 = t395*t3432;
  t3470 = -1.*t1720*t3466;
  t3472 = t3383 + t3385 + t3434 + t3470;
  t3475 = t336*t3472;
  t3485 = 0.15121*t3382;
  t3489 = t1720*t3432;
  t3490 = t395*t3466;
  t3514 = t3485 + t3385 + t3489 + t3490;
  t3516 = -1.*t3514*t1997;
  t3521 = t3475 + t3516;
  t3570 = t2056*t3375;
  t3571 = -1.*t2363*t3521;
  t3575 = t3570 + t3571;
  t3578 = t3055*t2363;
  t3581 = t2056*t3094;
  t3591 = t3578 + t3581;
  t3537 = t3375*t2363;
  t3545 = t2056*t3521;
  t3547 = t3537 + t3545;
  t3379 = -1.*t3375*t2363;
  t3525 = -1.*t2056*t3521;
  t3526 = t3379 + t3525;
  t3215 = t2755*t2363;
  t3218 = t2056*t2768;
  t3219 = t3215 + t3218;
  t3603 = t336*t3514;
  t3608 = t3472*t1997;
  t3620 = t3603 + t3608;
  t3656 = -1.*t2755*t2363;
  t3660 = -1.*t2056*t2768;
  t3667 = t3656 + t3660;
  t3562 = -1.*t3055*t2363;
  t3565 = -1.*t2056*t3094;
  t3568 = t3562 + t3565;
  t3763 = t2341*t2363;
  t3768 = t2056*t2404;
  t3769 = t3763 + t3768;
  t4035 = -1.*t336*t1929;
  t4037 = -1.*t1995*t1997;
  t4038 = t4035 + t4037;
  t3628 = t3012*t3620;
  t4079 = -1.*t336*t3514;
  t4086 = -1.*t3472*t1997;
  t4089 = t4079 + t4086;
  t3701 = -1.*t2728*t3620;
  t4075 = t3012*t3521;
  t4094 = t3094*t3620;
  t4068 = -1.*t336*t2985;
  t4069 = -1.*t2997*t1997;
  t4070 = t4068 + t4069;
  t4135 = -1.*t2728*t3521;
  t4148 = -1.*t2768*t3620;
  t4120 = -1.*t336*t2710;
  t4121 = -1.*t2720*t1997;
  t4132 = t4120 + t4121;
  t3631 = t3591*t3547;
  t3635 = t3101*t3575;
  t3637 = t3628 + t3631 + t3635;
  t3702 = -1.*t3219*t3547;
  t3703 = -1.*t2778*t3575;
  t3705 = t3701 + t3702 + t3703;
  t3821 = -1.*t3012*t3620;
  t3863 = t2015*t3620;
  t4276 = -1.*t3012*t3521;
  t4280 = -1.*t3094*t3620;
  t4320 = t2015*t3521;
  t4336 = t2404*t3620;
  t3826 = -1.*t3591*t3547;
  t3830 = -1.*t3101*t3575;
  t3831 = t3821 + t3826 + t3830;
  t3873 = t3769*t3547;
  t3880 = t2410*t3575;
  t3882 = t3863 + t3873 + t3880;
  t3952 = -1.*t2015*t3620;
  t4001 = t2728*t3620;
  t4431 = -1.*t2015*t3521;
  t4435 = -1.*t2404*t3620;
  t4445 = t2728*t3521;
  t4447 = t2768*t3620;
  t3953 = -1.*t3769*t3547;
  t3957 = -1.*t2410*t3575;
  t3965 = t3952 + t3953 + t3957;
  t4008 = t3219*t3547;
  t4012 = t2778*t3575;
  t4019 = t4001 + t4008 + t4012;
  t4536 = 0.15121*t395;
  t4538 = -0.15121*t1720;
  t4542 = -1.*t1720*t3432;
  t4551 = -1.*t395*t3466;
  t4564 = t4536 + t4538 + t4542 + t4551;
  t4614 = t4536 + t3385 + t3434 + t3470;
  t4668 = -1.*t395*t1644;
  t4671 = -1.*t1720*t1898;
  t4673 = t4668 + t4671;
  t4674 = t336*t4673;
  t4681 = t4674 + t4037;
  t4708 = t4673*t1997;
  t4709 = t2365 + t4708;
  t4637 = -1.*t1720*t2596;
  t4640 = -1.*t395*t2661;
  t4644 = t4637 + t4640;
  t4109 = t3055*t3375;
  t4113 = t3094*t3521;
  t4116 = t4109 + t4113 + t3628;
  t4577 = -1.*t1720*t2949;
  t4584 = -1.*t395*t2968;
  t4600 = t4577 + t4584;
  t4160 = -1.*t2755*t3375;
  t4162 = -1.*t2768*t3521;
  t4171 = t4160 + t4162 + t3701;
  t4785 = t4600*t1997;
  t4791 = t3075 + t4785;
  t4797 = t336*t4614;
  t4810 = t4564*t1997;
  t4815 = t4797 + t4810;
  t4759 = t4644*t1997;
  t4764 = t2762 + t4759;
  t4832 = t336*t4564;
  t4836 = -1.*t4614*t1997;
  t4839 = t4832 + t4836;
  t4820 = t3012*t4815;
  t4831 = t4791*t3620;
  t4821 = t336*t4600;
  t4827 = t4821 + t4069;
  t4855 = -1.*t2728*t4815;
  t4866 = -1.*t4764*t3620;
  t4856 = t336*t4644;
  t4860 = t4856 + t4121;
  t4286 = -1.*t3055*t3375;
  t4287 = -1.*t3094*t3521;
  t4288 = t4286 + t4287 + t3821;
  t4307 = t2341*t3375;
  t4308 = t2404*t3521;
  t4311 = t4307 + t4308 + t3863;
  t5046 = -1.*t3012*t4815;
  t5051 = -1.*t4791*t3620;
  t5062 = t2015*t4815;
  t5067 = t4709*t3620;
  t4424 = -1.*t2341*t3375;
  t4425 = -1.*t2404*t3521;
  t4428 = t4424 + t4425 + t3952;
  t4452 = t2755*t3375;
  t4458 = t2768*t3521;
  t4463 = t4452 + t4458 + t4001;
  t5218 = -1.*t2015*t4815;
  t5230 = -1.*t4709*t3620;
  t5239 = t2728*t4815;
  t5242 = t4764*t3620;
  t5334 = 2.8e-11*t762;
  t5348 = -7.e-6*t436;
  t5351 = t5348 + t772;
  t5353 = t523 + t5334;
  t5330 = 4.e-6*t436;
  t5331 = t5330 + t2136;
  t5335 = t436 + t5334;
  t5385 = t5351*t2872;
  t5386 = -1.000000000049*t762*t2900;
  t5389 = t5353*t2945;
  t5390 = t5385 + t5386 + t5389;
  t5320 = 7.e-6*t436;
  t5321 = t5320 + t772;
  t5313 = -4.e-6*t436;
  t5314 = t5313 + t2136;
  t5453 = -2.8e-11*t762;
  t5344 = -1.000000000049*t762*t2530;
  t5352 = t5351*t2565;
  t5361 = t5353*t2591;
  t5366 = t5344 + t5352 + t5361;
  t5413 = t5348 + t1820;
  t5416 = -0.038748999993*t5413;
  t5421 = t5330 + t1426;
  t5424 = -0.281209000004*t5421;
  t5428 = -1.38024835e-16*t762;
  t5429 = -6.5e-11*t762*t3252;
  t5436 = t5321*t3323;
  t5437 = t5314*t3366;
  t5441 = -1.4640699999999997e-7 + t5416 + t5424 + t5428 + t5429 + t5436 + t5437;
  t5457 = t436 + t5453;
  t5458 = -0.281209000004*t5457;
  t5459 = t5320 + t1820;
  t5461 = -2.123459e-6*t5459;
  t5463 = -0.0387489999948987*t762;
  t5464 = t5351*t3252;
  t5469 = -1.000000000049*t762*t3323;
  t5471 = t5353*t3366;
  t5472 = 5.856279999999999e-13 + t5458 + t5461 + t5463 + t5464 + t5469 + t5471;
  t5475 = t523 + t5453;
  t5480 = -0.038748999993*t5475;
  t5484 = t5313 + t1426;
  t5488 = -2.123459e-6*t5484;
  t5489 = -0.28120900000849935*t762;
  t5490 = t5331*t3252;
  t5491 = t5335*t3323;
  t5492 = -1.000000000016*t762*t3366;
  t5499 = 1.0248489999999998e-12 + t5480 + t5488 + t5489 + t5490 + t5491 + t5492;
  t5412 = t5390*t3375;
  t5473 = t3055*t5472;
  t5445 = -6.5e-11*t762*t2872;
  t5446 = t5321*t2900;
  t5447 = t5314*t2945;
  t5449 = t5445 + t5446 + t5447;
  t5406 = t5331*t2872;
  t5407 = t5335*t2900;
  t5408 = -1.000000000016*t762*t2945;
  t5409 = t5406 + t5407 + t5408;
  t5527 = -1.*t5366*t3375;
  t5545 = -1.*t2755*t5472;
  t5534 = t5321*t2530;
  t5539 = -6.5e-11*t762*t2565;
  t5541 = t5314*t2591;
  t5542 = t5534 + t5539 + t5541;
  t5510 = t5335*t2530;
  t5514 = t5331*t2565;
  t5517 = -1.000000000016*t762*t2591;
  t5519 = t5510 + t5514 + t5517;
  t5599 = -1.*t1720*t5441;
  t5600 = t395*t5499;
  t5603 = t5599 + t5600;
  t5605 = t395*t5441;
  t5606 = t1720*t5499;
  t5609 = t5605 + t5606;
  t5315 = t5314*t1172;
  t5316 = -6.5e-11*t762*t1294;
  t5322 = t5321*t1599;
  t5325 = t5315 + t5316 + t5322;
  t5329 = -1.000000000016*t762*t1172;
  t5332 = t5331*t1294;
  t5336 = t5335*t1599;
  t5339 = t5329 + t5332 + t5336;
  t5681 = t395*t5325;
  t5683 = t1720*t5339;
  t5684 = t5681 + t5683;
  t5665 = -1.*t1720*t5325;
  t5669 = t395*t5339;
  t5673 = t5665 + t5669;
  t5655 = t5353*t1172;
  t5657 = t5351*t1294;
  t5658 = -1.000000000049*t762*t1599;
  t5659 = t5655 + t5657 + t5658;
  t5678 = t336*t5673;
  t5687 = -1.*t5684*t1997;
  t5688 = t5678 + t5687;
  t5703 = t336*t5684;
  t5705 = t5673*t1997;
  t5712 = t5703 + t5705;
  t5715 = t2056*t5659;
  t5721 = -1.*t2363*t5688;
  t5722 = t5715 + t5721;
  t5614 = t395*t5542;
  t5619 = t1720*t5519;
  t5623 = t5614 + t5619;
  t5631 = -1.*t1720*t5542;
  t5633 = t395*t5519;
  t5635 = t5631 + t5633;
  t5576 = t395*t5449;
  t5577 = t1720*t5409;
  t5578 = t5576 + t5577;
  t5581 = -1.*t1720*t5449;
  t5583 = t395*t5409;
  t5584 = t5581 + t5583;
  t5758 = t336*t5578;
  t5762 = t5584*t1997;
  t5764 = t5758 + t5762;
  t5747 = t336*t5623;
  t5750 = t5635*t1997;
  t5752 = t5747 + t5750;
  t5778 = t336*t5609;
  t5790 = t5603*t1997;
  t5791 = t5778 + t5790;
  t5805 = t336*t5603;
  t5806 = -1.*t5609*t1997;
  t5813 = t5805 + t5806;
  t5830 = t336*t5635;
  t5832 = -1.*t5623*t1997;
  t5837 = t5830 + t5832;
  t5769 = t336*t5584;
  t5771 = -1.*t5578*t1997;
  t5772 = t5769 + t5771;
  t5775 = t5764*t3620;
  t5798 = t3012*t5791;
  t5914 = t5390*t2363;
  t5918 = t2056*t5772;
  t5925 = t5914 + t5918;
  t5851 = -1.*t5752*t3620;
  t5862 = -1.*t2728*t5791;
  t5897 = t5366*t2363;
  t5901 = t2056*t5837;
  t5905 = t5897 + t5901;
  t5954 = t5472*t2363;
  t5955 = t2056*t5813;
  t5957 = t5954 + t5955;
  t5961 = t2056*t5472;
  t5963 = -1.*t2363*t5813;
  t5964 = t5961 + t5963;
  t6077 = -1.*t5390*t3375;
  t6096 = -1.*t3055*t5472;
  t6110 = t5659*t3375;
  t6135 = t2341*t5472;
  t5979 = t2056*t5366;
  t5980 = -1.*t2363*t5837;
  t5986 = t5979 + t5980;
  t5660 = t5659*t2363;
  t5690 = t2056*t5688;
  t5692 = t5660 + t5690;
  t6263 = -1.*t5764*t3620;
  t6264 = -1.*t3012*t5791;
  t5939 = t2056*t5390;
  t5940 = -1.*t2363*t5772;
  t5944 = t5939 + t5940;
  t6273 = t5712*t3620;
  t6275 = t2015*t5791;
  t6354 = -1.*t5659*t3375;
  t6357 = -1.*t2341*t5472;
  t6368 = t5366*t3375;
  t6376 = t2755*t5472;
  t6475 = -1.*t5712*t3620;
  t6476 = -1.*t2015*t5791;
  t6481 = t5752*t3620;
  t6484 = t2728*t5791;
  t6545 = 4.e-6*t812;
  t6533 = -7.e-6*t812;
  t6534 = t6533 + t2862;
  t6537 = -7.e-6*t6534;
  t6539 = -2.8e-11*t1049;
  t6541 = t812 + t6537 + t6539;
  t6546 = 7.000000000455e-6*t1049;
  t6549 = t6545 + t6546;
  t6551 = t6545 + t1513;
  t6552 = -7.e-6*t6551;
  t6553 = 1.000000000016*t1049;
  t6555 = t6552 + t6553;
  t6575 = 7.e-6*t812;
  t6606 = 2.8e-11*t1049;
  t6570 = -4.e-6*t812;
  t6571 = t6570 + t1513;
  t6573 = -0.80315*t6571;
  t6577 = t6575 + t2862;
  t6580 = -0.038924*t6577;
  t6583 = t6533 + t1117;
  t6585 = -0.038922999986*t6583;
  t6586 = t6545 + t2552;
  t6587 = -0.503149000008*t6586;
  t6589 = -9.666064052774999e-12*t1049;
  t6590 = -2.598649999999999e-7 + t6573 + t6580 + t6585 + t6587 + t6589;
  t6600 = 0.148705*t6534;
  t6602 = t812 + t6539;
  t6604 = -0.503149000008*t6602;
  t6607 = t815 + t6606;
  t6609 = -0.80315*t6607;
  t6611 = t6575 + t1117;
  t6616 = -3.6777349999999994e-6*t6611;
  t6617 = 1.0000140000590574e-6*t1049;
  t6620 = 1.0394599999999997e-12 + t6600 + t6604 + t6609 + t6616 + t6617;
  t6625 = 0.148705*t6551;
  t6627 = t815 + t6539;
  t6628 = -0.038922999986*t6627;
  t6631 = t812 + t6606;
  t6633 = -0.038924*t6631;
  t6634 = t6570 + t2552;
  t6635 = -3.6777349999999994e-6*t6634;
  t6641 = 0.30000099999679997*t1049;
  t6644 = 1.8190549999999993e-12 + t6625 + t6628 + t6633 + t6635 + t6641;
  t6694 = -7.e-6*t6571;
  t6695 = 4.e-6*t6583;
  t6698 = -6.5e-11*t1049;
  t6699 = t6694 + t6695 + t6698;
  t6704 = 4.e-6*t6627;
  t6707 = 1.12e-16*t1049;
  t6708 = t6545 + t6704 + t6707;
  t6712 = -7.e-6*t6607;
  t6713 = 1.96e-16*t1049;
  t6714 = t6533 + t6712 + t6713;
  t6593 = t1837*t6590;
  t6621 = t1876*t6620;
  t6645 = t1776*t6644;
  t6655 = t6593 + t6621 + t6645;
  t6660 = t2240*t6590;
  t6662 = t2288*t6620;
  t6663 = t2085*t6644;
  t6665 = t6660 + t6662 + t6663;
  t6672 = t1254*t6590;
  t6676 = t1431*t6620;
  t6679 = t774*t6644;
  t6688 = t6672 + t6676 + t6679;
  t6762 = 4.e-6*t6534;
  t6766 = -1.000000000049*t1049;
  t6767 = t6762 + t6766;
  t6774 = -4.00000000026e-6*t1049;
  t6775 = t6575 + t6774;
  t6780 = 4.e-6*t6551;
  t6782 = t812 + t6780 + t6606;
  t6788 = t2288*t6767;
  t6790 = t2240*t6775;
  t6792 = t2085*t6782;
  t6794 = t6788 + t6790 + t6792;
  t5370 = t2949*t3432;
  t5372 = t2968*t3466;
  t5373 = t5370 + t4109 + t5372;
  t6721 = t2240*t6699;
  t6724 = t2085*t6708;
  t6730 = t2288*t6714;
  t6731 = t6721 + t6724 + t6730;
  t5395 = -1.*t2596*t3432;
  t5397 = -1.*t2661*t3466;
  t5398 = t5395 + t4160 + t5397;
  t6829 = t3252*t6699;
  t6830 = t2872*t6590;
  t6833 = t2900*t6620;
  t6836 = t2945*t6644;
  t6838 = t6714*t3323;
  t6841 = t6708*t3366;
  t6843 = t6829 + t6830 + t6833 + t6836 + t6838 + t6841;
  t6845 = -1.*t3252*t6775;
  t6847 = -1.*t2530*t6620;
  t6849 = -1.*t6590*t2565;
  t6852 = -1.*t6644*t2591;
  t6854 = -1.*t6767*t3323;
  t6855 = -1.*t6782*t3366;
  t6857 = t6845 + t6847 + t6849 + t6852 + t6854 + t6855;
  t6863 = t2872*t3252;
  t6864 = t2900*t3323;
  t6865 = t2945*t3366;
  t6867 = t6863 + t6864 + t6865;
  t6873 = -1.*t3252*t2565;
  t6874 = -1.*t2530*t3323;
  t6875 = -1.*t2591*t3366;
  t6877 = t6873 + t6874 + t6875;
  t6668 = t3055*t6665;
  t6735 = t6731*t3375;
  t6736 = t1254*t6699;
  t6738 = t774*t6708;
  t6739 = t1431*t6714;
  t6742 = t6736 + t6738 + t6739;
  t6701 = t1837*t6699;
  t6710 = t1776*t6708;
  t6715 = t1876*t6714;
  t6716 = t6701 + t6710 + t6715;
  t6760 = -1.*t6665*t2755;
  t6797 = -1.*t6794*t3375;
  t6909 = t1720*t6655;
  t6911 = t395*t6688;
  t6912 = t6909 + t6911;
  t6916 = t395*t6655;
  t6918 = -1.*t1720*t6688;
  t6923 = t6916 + t6918;
  t6772 = t1876*t6767;
  t6779 = t1837*t6775;
  t6783 = t1776*t6782;
  t6784 = t6772 + t6779 + t6783;
  t6798 = t1431*t6767;
  t6799 = t1254*t6775;
  t6800 = t774*t6782;
  t6801 = t6798 + t6799 + t6800;
  t5559 = t2985*t3514;
  t5561 = t2997*t3472;
  t5562 = t4109 + t5559 + t5561;
  t5566 = -1.*t2710*t3514;
  t5569 = -1.*t2720*t3472;
  t5570 = t4160 + t5566 + t5569;
  t6542 = t1876*t6541;
  t6550 = t1837*t6549;
  t6557 = t1776*t6555;
  t6558 = t6542 + t6550 + t6557;
  t6563 = t1431*t6541;
  t6564 = t1254*t6549;
  t6565 = t774*t6555;
  t6566 = t6563 + t6564 + t6565;
  t7007 = t1720*t6558;
  t7008 = t395*t6566;
  t7013 = t7007 + t7008;
  t6998 = t395*t6558;
  t7002 = -1.*t1720*t6566;
  t7003 = t6998 + t7002;
  t6987 = t2288*t6541;
  t6988 = t2240*t6549;
  t6989 = t2085*t6555;
  t6990 = t6987 + t6988 + t6989;
  t7006 = t336*t7003;
  t7015 = -1.*t7013*t1997;
  t7016 = t7006 + t7015;
  t7021 = t336*t7013;
  t7024 = t7003*t1997;
  t7025 = t7021 + t7024;
  t7028 = t2056*t6990;
  t7030 = -1.*t2363*t7016;
  t7032 = t7028 + t7030;
  t6941 = -1.*t1720*t6742;
  t6942 = t395*t6716;
  t6943 = t6941 + t6942;
  t6927 = t395*t6742;
  t6929 = t1720*t6716;
  t6933 = t6927 + t6929;
  t7044 = t336*t6923;
  t7046 = -1.*t6912*t1997;
  t7047 = t7044 + t7046;
  t7049 = t336*t6912;
  t7051 = t6923*t1997;
  t7054 = t7049 + t7051;
  t6965 = t395*t6784;
  t6966 = -1.*t1720*t6801;
  t6971 = t6965 + t6966;
  t6956 = t1720*t6784;
  t6958 = t395*t6801;
  t6959 = t6956 + t6958;
  t7088 = t336*t6959;
  t7089 = t6971*t1997;
  t7093 = t7088 + t7089;
  t7068 = t336*t6933;
  t7069 = t6943*t1997;
  t7071 = t7068 + t7069;
  t7059 = t3012*t7054;
  t7072 = t7071*t3620;
  t7060 = t336*t6943;
  t7062 = -1.*t6933*t1997;
  t7064 = t7060 + t7062;
  t7079 = -1.*t7054*t2728;
  t7094 = -1.*t7093*t3620;
  t7103 = t6665*t2363;
  t7104 = t2056*t7047;
  t7107 = t7103 + t7104;
  t7110 = t2056*t6665;
  t7111 = -1.*t2363*t7047;
  t7118 = t7110 + t7111;
  t7081 = t336*t6971;
  t7082 = -1.*t6959*t1997;
  t7083 = t7081 + t7082;
  t7147 = t6794*t2363;
  t7148 = t2056*t7083;
  t7150 = t7147 + t7148;
  t7121 = t6731*t2363;
  t7124 = t2056*t7064;
  t7125 = t7121 + t7124;
  t6037 = -1.*t2949*t3432;
  t6049 = -1.*t2968*t3466;
  t6050 = t6037 + t4286 + t6049;
  t6065 = t1898*t3432;
  t6071 = t1644*t3466;
  t6072 = t6065 + t4307 + t6071;
  t7232 = t3252*t1294;
  t7233 = t1599*t3323;
  t7236 = t1172*t3366;
  t7238 = t7232 + t7233 + t7236;
  t7241 = -1.*t3252*t6699;
  t7244 = -1.*t2872*t6590;
  t7246 = -1.*t2900*t6620;
  t7247 = -1.*t2945*t6644;
  t7250 = -1.*t6714*t3323;
  t7253 = -1.*t6708*t3366;
  t7254 = t7241 + t7244 + t7246 + t7247 + t7250 + t7253;
  t7258 = -1.*t2872*t3252;
  t7259 = -1.*t2900*t3323;
  t7261 = -1.*t2945*t3366;
  t7262 = t7258 + t7259 + t7261;
  t7265 = t6590*t1294;
  t7266 = t3252*t6549;
  t7267 = t1172*t6644;
  t7272 = t6620*t1599;
  t7273 = t6541*t3323;
  t7275 = t6555*t3366;
  t7277 = t7265 + t7266 + t7267 + t7272 + t7273 + t7275;
  t7181 = -1.*t3055*t6665;
  t7186 = -1.*t6731*t3375;
  t6143 = -1.*t2985*t3514;
  t6144 = -1.*t2997*t3472;
  t6150 = t4286 + t6143 + t6144;
  t6157 = t1929*t3514;
  t6159 = t1995*t3472;
  t6160 = t4307 + t6157 + t6159;
  t7199 = t6665*t2341;
  t7205 = t6990*t3375;
  t7155 = t2056*t6794;
  t7158 = -1.*t2363*t7083;
  t7161 = t7155 + t7158;
  t7353 = -1.*t3012*t7054;
  t7355 = -1.*t7071*t3620;
  t7129 = t2056*t6731;
  t7132 = -1.*t2363*t7064;
  t7135 = t7129 + t7132;
  t6996 = t6990*t2363;
  t7017 = t2056*t7016;
  t7018 = t6996 + t7017;
  t7369 = t7054*t2015;
  t7373 = t7025*t3620;
  t6337 = -1.*t1898*t3432;
  t6338 = -1.*t1644*t3466;
  t6339 = t6337 + t4424 + t6338;
  t6341 = t2596*t3432;
  t6343 = t2661*t3466;
  t6348 = t6341 + t4452 + t6343;
  t7477 = -1.*t3252*t1294;
  t7479 = -1.*t1599*t3323;
  t7480 = -1.*t1172*t3366;
  t7481 = t7477 + t7479 + t7480;
  t7493 = t3252*t6775;
  t7494 = t2530*t6620;
  t7496 = t6590*t2565;
  t7497 = t6644*t2591;
  t7498 = t6767*t3323;
  t7500 = t6782*t3366;
  t7501 = t7493 + t7494 + t7496 + t7497 + t7498 + t7500;
  t7504 = t3252*t2565;
  t7506 = t2530*t3323;
  t7507 = t2591*t3366;
  t7509 = t7504 + t7506 + t7507;
  t7511 = -1.*t6590*t1294;
  t7516 = -1.*t3252*t6549;
  t7517 = -1.*t1172*t6644;
  t7523 = -1.*t6620*t1599;
  t7524 = -1.*t6541*t3323;
  t7526 = -1.*t6555*t3366;
  t7530 = t7511 + t7516 + t7517 + t7523 + t7524 + t7526;
  t7425 = t6665*t2755;
  t7432 = t6794*t3375;
  t6394 = -1.*t1929*t3514;
  t6395 = -1.*t1995*t3472;
  t6398 = t4424 + t6394 + t6395;
  t6402 = t2710*t3514;
  t6408 = t2720*t3472;
  t6410 = t4452 + t6402 + t6408;
  t7446 = -1.*t6665*t2341;
  t7453 = -1.*t6990*t3375;
  t7619 = t7054*t2728;
  t7623 = t7093*t3620;
  t7642 = -1.*t7054*t2015;
  t7647 = -1.*t7025*t3620;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=0;
  p_output1[4]=0;
  p_output1[5]=0;
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=(-1.*t2039*t2410 - 1.*t2015*t324)*var2[1] + (t2015*t2039 - 1.*t2410*t324)*var2[2];
  p_output1[10]=(-1.*t2039*t2778 - 1.*t2728*t324)*var2[1] + (t2039*t2728 - 1.*t2778*t324)*var2[2];
  p_output1[11]=(-1.*t2039*t3101 - 1.*t3012*t324)*var2[1] + (t2039*t3012 - 1.*t3101*t324)*var2[2];
  p_output1[12]=t2410*var2[0] - 1.*t3199*t324*var2[1] + t2039*t3199*var2[2] + (t3219*(t3101*t3526 + t3101*t3547 + t3568*t3575 + t3575*t3591) + t2778*t3637 + t3591*(-1.*t2778*t3526 - 1.*t2778*t3547 - 1.*t3219*t3575 - 1.*t3575*t3667) + t3101*t3705)*var2[3];
  p_output1[13]=t2778*var2[0] - 1.*t324*t3667*var2[1] + t2039*t3667*var2[2] + ((-1.*t3101*t3526 - 1.*t3101*t3547 - 1.*t3568*t3575 - 1.*t3575*t3591)*t3769 + t3591*(t2410*t3526 + t2410*t3547 + t3199*t3575 + t3575*t3769) + t2410*t3831 + t3101*t3882)*var2[3];
  p_output1[14]=t3101*var2[0] - 1.*t324*t3568*var2[1] + t2039*t3568*var2[2] + ((t2778*t3526 + t2778*t3547 + t3219*t3575 + t3575*t3667)*t3769 + t3219*(-1.*t2410*t3526 - 1.*t2410*t3547 - 1.*t3199*t3575 - 1.*t3575*t3769) + t2778*t3965 + t2410*t4019)*var2[3];
  p_output1[15]=t2056*t4038*var2[0] + (t2039*t2404 + t2363*t324*t4038)*var2[1] + (t2404*t324 - 1.*t2039*t2363*t4038)*var2[2] + (t2056*t3705*t4070 + t3219*(t2056*t3547*t4070 - 1.*t2363*t3575*t4070 + t4075 - 1.*t2363*t3101*t4089 + t2056*t3591*t4089 + t4094) + t2056*t3637*t4132 + t3591*(t2363*t2778*t4089 - 1.*t2056*t3219*t4089 - 1.*t2056*t3547*t4132 + t2363*t3575*t4132 + t4135 + t4148))*var2[3] + (t2728*(t3521*t4070 + t4075 + t3094*t4089 + t4094) + t2768*t4116 + t3012*(-1.*t2768*t4089 - 1.*t3521*t4132 + t4135 + t4148) + t3094*t4171)*var2[4];
  p_output1[16]=t2056*t4132*var2[0] + (t2039*t2768 + t2363*t324*t4132)*var2[1] + (t2768*t324 - 1.*t2039*t2363*t4132)*var2[2] + (t2056*t3831*t4038 + t2056*t3882*t4070 + t3769*(-1.*t2056*t3547*t4070 + t2363*t3575*t4070 + t2363*t3101*t4089 - 1.*t2056*t3591*t4089 + t4276 + t4280) + t3591*(t2056*t3547*t4038 - 1.*t2363*t3575*t4038 - 1.*t2363*t2410*t4089 + t2056*t3769*t4089 + t4320 + t4336))*var2[3] + (t2015*(-1.*t3521*t4070 - 1.*t3094*t4089 + t4276 + t4280) + t2404*t4288 + t3094*t4311 + t3012*(t3521*t4038 + t2404*t4089 + t4320 + t4336))*var2[4];
  p_output1[17]=t2056*t4070*var2[0] + (t2039*t3094 + t2363*t324*t4070)*var2[1] + (t3094*t324 - 1.*t2039*t2363*t4070)*var2[2] + (t2056*t4019*t4038 + t2056*t3965*t4132 + t3219*(-1.*t2056*t3547*t4038 + t2363*t3575*t4038 + t2363*t2410*t4089 - 1.*t2056*t3769*t4089 + t4431 + t4435) + t3769*(-1.*t2363*t2778*t4089 + t2056*t3219*t4089 + t2056*t3547*t4132 - 1.*t2363*t3575*t4132 + t4445 + t4447))*var2[3] + (t2768*t4428 + t2728*(-1.*t3521*t4038 - 1.*t2404*t4089 + t4431 + t4435) + t2015*(t2768*t4089 + t3521*t4132 + t4445 + t4447) + t2404*t4463)*var2[4];
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
  p_output1[22]=0;
  p_output1[23]=0;
  p_output1[24]=0;
  p_output1[25]=0;
  p_output1[26]=0;
  p_output1[27]=0;
  p_output1[28]=0;
  p_output1[29]=0;
  p_output1[30]=0;
  p_output1[31]=0;
  p_output1[32]=0;
  p_output1[33]=0;
  p_output1[34]=0;
  p_output1[35]=0;
  p_output1[36]=t2056*t4681*var2[0] + (t2363*t324*t4681 + t2039*t4709)*var2[1] + (-1.*t2039*t2363*t4681 + t324*t4709)*var2[2] + (t2056*t3705*t4827 + t3219*(t4820 + t2056*t3547*t4827 - 1.*t2363*t3575*t4827 + t4831 - 1.*t2363*t3101*t4839 + t2056*t3591*t4839) + t2056*t3637*t4860 + t3591*(t2363*t2778*t4839 - 1.*t2056*t3219*t4839 + t4855 - 1.*t2056*t3547*t4860 + t2363*t3575*t4860 + t4866))*var2[3] + (t4116*t4764 + t4171*t4791 + t2728*(t4820 + t3521*t4827 + t4831 + t3094*t4839) + t3012*(-1.*t2768*t4839 + t4855 - 1.*t3521*t4860 + t4866))*var2[4] + (t2755*(t2997*t3514 + t2997*t4564 + t3472*t4600 + t2985*t4614) + t3055*(-1.*t2720*t3514 - 1.*t2720*t4564 - 1.*t2710*t4614 - 1.*t3472*t4644))*var2[5];
  p_output1[37]=t2056*t4860*var2[0] + (t2039*t4764 + t2363*t324*t4860)*var2[1] + (t324*t4764 - 1.*t2039*t2363*t4860)*var2[2] + (t2056*t3831*t4681 + t2056*t3882*t4827 + t3769*(-1.*t2056*t3547*t4827 + t2363*t3575*t4827 + t2363*t3101*t4839 - 1.*t2056*t3591*t4839 + t5046 + t5051) + t3591*(t2056*t3547*t4681 - 1.*t2363*t3575*t4681 - 1.*t2363*t2410*t4839 + t2056*t3769*t4839 + t5062 + t5067))*var2[3] + (t4288*t4709 + t4311*t4791 + t2015*(-1.*t3521*t4827 - 1.*t3094*t4839 + t5046 + t5051) + t3012*(t3521*t4681 + t2404*t4839 + t5062 + t5067))*var2[4] + (t2341*(-1.*t2997*t3514 - 1.*t2997*t4564 - 1.*t3472*t4600 - 1.*t2985*t4614) + t3055*(t1995*t3514 + t1995*t4564 + t1929*t4614 + t3472*t4673))*var2[5];
  p_output1[38]=t2056*t4827*var2[0] + (t2039*t4791 + t2363*t324*t4827)*var2[1] + (t324*t4791 - 1.*t2039*t2363*t4827)*var2[2] + (t2056*t4019*t4681 + t2056*t3965*t4860 + t3219*(-1.*t2056*t3547*t4681 + t2363*t3575*t4681 + t2363*t2410*t4839 - 1.*t2056*t3769*t4839 + t5218 + t5230) + t3769*(-1.*t2363*t2778*t4839 + t2056*t3219*t4839 + t2056*t3547*t4860 - 1.*t2363*t3575*t4860 + t5239 + t5242))*var2[3] + (t4463*t4709 + t4428*t4764 + t2728*(-1.*t3521*t4681 - 1.*t2404*t4839 + t5218 + t5230) + t2015*(t2768*t4839 + t3521*t4860 + t5239 + t5242))*var2[4] + (t2341*(t2720*t3514 + t2720*t4564 + t2710*t4614 + t3472*t4644) + t2755*(-1.*t1995*t3514 - 1.*t1995*t4564 - 1.*t1929*t4614 - 1.*t3472*t4673))*var2[5];
  p_output1[39]=t5692*var2[0] + (t2039*t5712 - 1.*t324*t5722)*var2[1] + (t324*t5712 + t2039*t5722)*var2[2] + (t3637*t5905 + t3705*t5925 + t3219*(t5775 + t5798 + t3547*t5925 + t3575*t5944 + t3591*t5957 + t3101*t5964) + t3591*(t5851 + t5862 - 1.*t3547*t5905 - 1.*t3219*t5957 - 1.*t2778*t5964 - 1.*t3575*t5986))*var2[3] + (t4116*t5752 + t4171*t5764 + t2728*(t5412 + t5473 + t3521*t5772 + t5775 + t5798 + t3094*t5813) + t3012*(t5527 + t5545 - 1.*t2768*t5813 - 1.*t3521*t5837 + t5851 + t5862))*var2[4] + (t5366*t5562 + t5390*t5570 + t2755*(t5412 + t5473 + t3514*t5578 + t3472*t5584 + t2997*t5603 + t2985*t5609) + t3055*(t5527 + t5545 - 1.*t2720*t5603 - 1.*t2710*t5609 - 1.*t3514*t5623 - 1.*t3472*t5635))*var2[5] + (0.15121*t5325 + 0.15121*t5339 + t5366*t5373 + t5390*t5398 + t2755*(t3432*t5409 + t5412 + t2968*t5441 + t3466*t5449 + t5473 + t2949*t5499) + t3055*(-1.*t2661*t5441 - 1.*t2596*t5499 - 1.*t3432*t5519 + t5527 - 1.*t3466*t5542 + t5545))*var2[12];
  p_output1[40]=t5905*var2[0] + (t2039*t5752 - 1.*t324*t5986)*var2[1] + (t324*t5752 + t2039*t5986)*var2[2] + (t3831*t5692 + t3882*t5925 + t3769*(-1.*t3547*t5925 - 1.*t3575*t5944 - 1.*t3591*t5957 - 1.*t3101*t5964 + t6263 + t6264) + t3591*(t3547*t5692 + t3575*t5722 + t3769*t5957 + t2410*t5964 + t6273 + t6275))*var2[3] + (t4288*t5712 + t4311*t5764 + t2015*(-1.*t3521*t5772 - 1.*t3094*t5813 + t6077 + t6096 + t6263 + t6264) + t3012*(t3521*t5688 + t2404*t5813 + t6110 + t6135 + t6273 + t6275))*var2[4] + (t2341*(-1.*t3514*t5578 - 1.*t3472*t5584 - 1.*t2997*t5603 - 1.*t2985*t5609 + t6077 + t6096) + t3055*(t1995*t5603 + t1929*t5609 + t3472*t5673 + t3514*t5684 + t6110 + t6135) + t5659*t6150 + t5390*t6160)*var2[5] + (0.15121*t5519 + 0.15121*t5542 + t5659*t6050 + t5390*t6072 + t2341*(-1.*t3432*t5409 - 1.*t2968*t5441 - 1.*t3466*t5449 - 1.*t2949*t5499 + t6077 + t6096) + t3055*(t3466*t5325 + t3432*t5339 + t1644*t5441 + t1898*t5499 + t6110 + t6135))*var2[12];
  p_output1[41]=t5925*var2[0] + (t2039*t5764 - 1.*t324*t5944)*var2[1] + (t324*t5764 + t2039*t5944)*var2[2] + (t4019*t5692 + t3965*t5905 + t3219*(-1.*t3547*t5692 - 1.*t3575*t5722 - 1.*t3769*t5957 - 1.*t2410*t5964 + t6475 + t6476) + t3769*(t3547*t5905 + t3219*t5957 + t2778*t5964 + t3575*t5986 + t6481 + t6484))*var2[3] + (t4463*t5712 + t4428*t5752 + t2728*(-1.*t3521*t5688 - 1.*t2404*t5813 + t6354 + t6357 + t6475 + t6476) + t2015*(t2768*t5813 + t3521*t5837 + t6368 + t6376 + t6481 + t6484))*var2[4] + (t2755*(-1.*t1995*t5603 - 1.*t1929*t5609 - 1.*t3472*t5673 - 1.*t3514*t5684 + t6354 + t6357) + t2341*(t2720*t5603 + t2710*t5609 + t3514*t5623 + t3472*t5635 + t6368 + t6376) + t5366*t6398 + t5659*t6410)*var2[5] + (0.15121*t5409 + 0.15121*t5449 + t5366*t6339 + t5659*t6348 + t2755*(-1.*t3466*t5325 - 1.*t3432*t5339 - 1.*t1644*t5441 - 1.*t1898*t5499 + t6354 + t6357) + t2341*(t2661*t5441 + t2596*t5499 + t3432*t5519 + t3466*t5542 + t6368 + t6376))*var2[12];
  p_output1[42]=t7018*var2[0] + (t2039*t7025 - 1.*t324*t7032)*var2[1] + (t324*t7025 + t2039*t7032)*var2[2] + (t3705*t7125 + t3219*(t7059 + t7072 + t3591*t7107 + t3101*t7118 + t3547*t7125 + t3575*t7135) + t3637*t7150 + t3591*(t7079 + t7094 - 1.*t3219*t7107 - 1.*t2778*t7118 - 1.*t3547*t7150 - 1.*t3575*t7161))*var2[3] + (t4171*t7071 + t2728*(t6668 + t6735 + t3094*t7047 + t7059 + t3521*t7064 + t7072) + t4116*t7093 + t3012*(t6760 + t6797 - 1.*t2768*t7047 + t7079 - 1.*t3521*t7083 + t7094))*var2[4] + (t5570*t6731 + t5562*t6794 + t2755*(t6668 + t6735 + t2985*t6912 + t2997*t6923 + t3514*t6933 + t3472*t6943) + t3055*(t6760 + t6797 - 1.*t2710*t6912 - 1.*t2720*t6923 - 1.*t3514*t6959 - 1.*t3472*t6971))*var2[5] + (0.15121*t6558 + 0.15121*t6566 + t5398*t6731 + t2755*(t2949*t6655 + t6668 + t2968*t6688 + t3432*t6716 + t6735 + t3466*t6742) + t5373*t6794 + t3055*(-1.*t2596*t6655 - 1.*t2661*t6688 + t6760 - 1.*t3432*t6784 + t6797 - 1.*t3466*t6801))*var2[12] + (-0.281209*t6541 + 0.038749*t6555 + 1.e-6*(-7.000000000455e-6*t1049 + t6570) + t2565*t6843 + t2872*t6857 + t6775*t6867 + t6699*t6877 - 7.e-6*(t2591*t6843 + t2945*t6857 + t6782*t6867 + t6708*t6877) + 4.e-6*(-1.*t2530*t6843 - 1.*t2900*t6857 - 1.*t6767*t6867 - 1.*t6714*t6877))*var2[13];
  p_output1[43]=t7150*var2[0] + (t2039*t7093 - 1.*t324*t7161)*var2[1] + (t324*t7093 + t2039*t7161)*var2[2] + (t3831*t7018 + t3882*t7125 + t3769*(-1.*t3591*t7107 - 1.*t3101*t7118 - 1.*t3547*t7125 - 1.*t3575*t7135 + t7353 + t7355) + t3591*(t3547*t7018 + t3575*t7032 + t3769*t7107 + t2410*t7118 + t7369 + t7373))*var2[3] + (t4288*t7025 + t4311*t7071 + t2015*(-1.*t3094*t7047 - 1.*t3521*t7064 + t7181 + t7186 + t7353 + t7355) + t3012*(t3521*t7016 + t2404*t7047 + t7199 + t7205 + t7369 + t7373))*var2[4] + (t6160*t6731 + t6150*t6990 + t2341*(-1.*t2985*t6912 - 1.*t2997*t6923 - 1.*t3514*t6933 - 1.*t3472*t6943 + t7181 + t7186) + t3055*(t1929*t6912 + t1995*t6923 + t3472*t7003 + t3514*t7013 + t7199 + t7205))*var2[5] + (t6072*t6731 + 0.15121*t6784 + 0.15121*t6801 + t6050*t6990 + t2341*(-1.*t2949*t6655 - 1.*t2968*t6688 - 1.*t3432*t6716 - 1.*t3466*t6742 + t7181 + t7186) + t3055*(t3432*t6558 + t3466*t6566 + t1898*t6655 + t1644*t6688 + t7199 + t7205))*var2[12] + (1.e-6*(4.00000000026e-6*t1049 + t6533) - 0.281209*t6767 + 0.038749*t6782 + t6699*t7238 + t1294*t7254 + t6549*t7262 + t2872*t7277 + 4.e-6*(-1.*t6714*t7238 - 1.*t1599*t7254 - 1.*t6541*t7262 - 1.*t2900*t7277) - 7.e-6*(t6708*t7238 + t1172*t7254 + t6555*t7262 + t2945*t7277))*var2[13];
  p_output1[44]=t7125*var2[0] + (t2039*t7071 - 1.*t324*t7135)*var2[1] + (t324*t7071 + t2039*t7135)*var2[2] + (t4019*t7018 + t3965*t7150 + t3769*(t3219*t7107 + t2778*t7118 + t3547*t7150 + t3575*t7161 + t7619 + t7623) + t3219*(-1.*t3547*t7018 - 1.*t3575*t7032 - 1.*t3769*t7107 - 1.*t2410*t7118 + t7642 + t7647))*var2[3] + (t4463*t7025 + t4428*t7093 + t2015*(t2768*t7047 + t3521*t7083 + t7425 + t7432 + t7619 + t7623) + t2728*(-1.*t3521*t7016 - 1.*t2404*t7047 + t7446 + t7453 + t7642 + t7647))*var2[4] + (t6398*t6794 + t6410*t6990 + t2341*(t2710*t6912 + t2720*t6923 + t3514*t6959 + t3472*t6971 + t7425 + t7432) + t2755*(-1.*t1929*t6912 - 1.*t1995*t6923 - 1.*t3472*t7003 - 1.*t3514*t7013 + t7446 + t7453))*var2[5] + (0.15121*t6716 + 0.15121*t6742 + t6339*t6794 + t6348*t6990 + t2341*(t2596*t6655 + t2661*t6688 + t3432*t6784 + t3466*t6801 + t7425 + t7432) + t2755*(-1.*t3432*t6558 - 1.*t3466*t6566 - 1.*t1898*t6655 - 1.*t1644*t6688 + t7446 + t7453))*var2[12] + (1.e-6*(6.5e-11*t1049 + 7.e-6*t6571 + 4.e-6*t6577) + 0.038749*t6708 - 0.281209*t6714 + t6775*t7481 + t1294*t7501 + t6549*t7509 + t2565*t7530 + 4.e-6*(-1.*t6767*t7481 - 1.*t1599*t7501 - 1.*t6541*t7509 - 1.*t2530*t7530) - 7.e-6*(t6782*t7481 + t1172*t7501 + t6555*t7509 + t2591*t7530))*var2[13];
  p_output1[45]=0;
  p_output1[46]=0;
  p_output1[47]=0;
  p_output1[48]=0;
  p_output1[49]=0;
  p_output1[50]=0;
  p_output1[51]=0;
  p_output1[52]=0;
  p_output1[53]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 18, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "dJh_RlFoot_DiagonalStance.hh"

namespace SymFunction
{

void dJh_RlFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
