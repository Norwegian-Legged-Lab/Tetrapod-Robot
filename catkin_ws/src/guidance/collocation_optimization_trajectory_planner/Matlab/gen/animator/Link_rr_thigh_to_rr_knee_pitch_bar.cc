/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 23:17:41 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t953;
  double t977;
  double t1003;
  double t1067;
  double t295;
  double t345;
  double t407;
  double t421;
  double t554;
  double t600;
  double t1181;
  double t1205;
  double t307;
  double t1335;
  double t1415;
  double t1038;
  double t1270;
  double t1550;
  double t1518;
  double t1522;
  double t1529;
  double t1584;
  double t1586;
  double t1591;
  double t1230;
  double t1597;
  double t1086;
  double t1687;
  double t1481;
  double t1605;
  double t1420;
  double t726;
  double t747;
  double t813;
  double t941;
  double t1036;
  double t1145;
  double t1164;
  double t1234;
  double t1239;
  double t1245;
  double t1276;
  double t1292;
  double t1300;
  double t1342;
  double t1374;
  double t1385;
  double t1434;
  double t1459;
  double t1487;
  double t1494;
  double t1504;
  double t1544;
  double t1545;
  double t1548;
  double t1555;
  double t1556;
  double t1562;
  double t1565;
  double t1574;
  double t1592;
  double t1600;
  double t1604;
  double t1608;
  double t1609;
  double t1611;
  double t1621;
  double t1635;
  double t1638;
  double t1652;
  double t1662;
  double t1685;
  double t1688;
  double t1696;
  double t1697;
  double t1698;
  double t1701;
  double t1705;
  double t1706;
  double t1709;
  double t1715;
  double t1716;
  double t1719;
  double t1721;
  double t1723;
  double t1650;
  double t1704;
  double t1728;
  double t1731;
  double t2231;
  double t2274;
  double t2251;
  double t2277;
  double t2284;
  double t2292;
  double t2305;
  double t2316;
  double t2323;
  double t2330;
  double t2336;
  double t2347;
  double t2353;
  double t2356;
  double t2246;
  double t2289;
  double t2322;
  double t2341;
  double t2362;
  double t2373;
  double t2375;
  double t2382;
  double t2392;
  double t2400;
  double t2402;
  double t2421;
  double t2428;
  double t2435;
  double t2437;
  double t2448;
  double t2456;
  double t2395;
  double t2429;
  double t2479;
  double t2486;
  double t3049;
  double t3061;
  double t3063;
  double t3068;
  double t3077;
  double t3088;
  double t3117;
  double t3122;
  double t3132;
  double t3148;
  double t3162;
  double t3166;
  double t3042;
  double t3065;
  double t3093;
  double t3146;
  double t3169;
  double t3176;
  double t3178;
  double t3190;
  double t3195;
  double t3203;
  double t3220;
  double t3236;
  double t3250;
  double t3254;
  double t3255;
  double t3265;
  double t3267;
  double t3200;
  double t3253;
  double t3276;
  double t3286;
  double t3622;
  double t3625;
  double t3627;
  double t3631;
  double t4059;
  double t4060;
  double t4062;
  double t4064;
  double t4303;
  double t4305;
  double t4306;
  double t4307;
  t953 = Cos(var1[16]);
  t977 = -1.*t953;
  t1003 = 1. + t977;
  t1067 = Sin(var1[16]);
  t295 = Cos(var1[4]);
  t345 = Cos(var1[15]);
  t407 = -1.*t345;
  t421 = 1. + t407;
  t554 = -0.15121*t421;
  t600 = Sin(var1[15]);
  t1181 = -1. + t953;
  t1205 = 4.e-6*t1181;
  t307 = Cos(var1[5]);
  t1335 = Sin(var1[5]);
  t1415 = 7.e-6*t1003;
  t1038 = 2.8e-11*t1003;
  t1270 = Sin(var1[4]);
  t1550 = -4.e-6*t1067;
  t1518 = -1.*t295*t307*t600;
  t1522 = -1.*t345*t295*t1335;
  t1529 = t1518 + t1522;
  t1584 = t345*t295*t307;
  t1586 = -1.*t295*t600*t1335;
  t1591 = t1584 + t1586;
  t1230 = -7.e-6*t1067;
  t1597 = -2.8e-11*t1003;
  t1086 = -1.*t1067;
  t1687 = 4.e-6*t1003;
  t1481 = 7.e-6*t1067;
  t1605 = -7.e-6*t1003;
  t1420 = 4.e-6*t1067;
  t726 = -0.15121*t600;
  t747 = t554 + t726;
  t813 = t295*t307*t747;
  t941 = 1.5843479999999999e-12*var1[16];
  t1036 = -0.03874900000889869*t1003;
  t1145 = t1038 + t1086;
  t1164 = -0.281211000004*t1145;
  t1234 = t1205 + t1230;
  t1239 = -1.8134809999999998e-6*t1234;
  t1245 = t941 + t1036 + t1164 + t1239;
  t1276 = t1245*t1270;
  t1292 = 0.15121*t600;
  t1300 = t554 + t1292;
  t1342 = -1.*t295*t1300*t1335;
  t1374 = 3.9608699999999997e-7*var1[16];
  t1385 = -1.1787626499999999e-16*t1003;
  t1434 = t1415 + t1420;
  t1459 = -0.281211000004*t1434;
  t1487 = t1205 + t1481;
  t1494 = -0.038749000006999997*t1487;
  t1504 = t1374 + t1385 + t1459 + t1494;
  t1544 = t1504*t1529;
  t1545 = -2.7726089999999997e-12*var1[16];
  t1548 = -0.2812110000084994*t1003;
  t1555 = t1415 + t1550;
  t1556 = -1.8134809999999998e-6*t1555;
  t1562 = t1038 + t1067;
  t1565 = -0.038749000006999997*t1562;
  t1574 = t1545 + t1548 + t1556 + t1565;
  t1592 = t1574*t1591;
  t1600 = t1597 + t1067;
  t1604 = t1600*t1270;
  t1608 = t1605 + t1550;
  t1609 = t1608*t1529;
  t1611 = -1.000000000016*t1003;
  t1621 = 1. + t1611;
  t1635 = t1621*t1591;
  t1638 = t1604 + t1609 + t1635;
  t1652 = -1.000000000049*t1003;
  t1662 = 1. + t1652;
  t1685 = t1662*t1270;
  t1688 = t1687 + t1230;
  t1696 = t1688*t1529;
  t1697 = t1597 + t1086;
  t1698 = t1697*t1591;
  t1701 = t1685 + t1696 + t1698;
  t1705 = t1687 + t1481;
  t1706 = t1705*t1270;
  t1709 = -6.5e-11*t1003;
  t1715 = 1. + t1709;
  t1716 = t1715*t1529;
  t1719 = t1605 + t1420;
  t1721 = t1719*t1591;
  t1723 = t1706 + t1716 + t1721;
  t1650 = -0.277324*t1638;
  t1704 = -0.035535*t1701;
  t1728 = -0.212584*t1723;
  t1731 = var1[0] + t813 + t1276 + t1342 + t1544 + t1592 + t1650 + t1704 + t1728;
  t2231 = Sin(var1[3]);
  t2274 = Cos(var1[3]);
  t2251 = t307*t2231*t1270;
  t2277 = t2274*t1335;
  t2284 = t2251 + t2277;
  t2292 = t2274*t307;
  t2305 = -1.*t2231*t1270*t1335;
  t2316 = t2292 + t2305;
  t2323 = -1.*t600*t2284;
  t2330 = t345*t2316;
  t2336 = t2323 + t2330;
  t2347 = t345*t2284;
  t2353 = t600*t2316;
  t2356 = t2347 + t2353;
  t2246 = -1.*t295*t1245*t2231;
  t2289 = t747*t2284;
  t2322 = t1300*t2316;
  t2341 = t1504*t2336;
  t2362 = t1574*t2356;
  t2373 = -1.*t295*t1600*t2231;
  t2375 = t1608*t2336;
  t2382 = t1621*t2356;
  t2392 = t2373 + t2375 + t2382;
  t2400 = -1.*t1662*t295*t2231;
  t2402 = t1688*t2336;
  t2421 = t1697*t2356;
  t2428 = t2400 + t2402 + t2421;
  t2435 = -1.*t295*t1705*t2231;
  t2437 = t1715*t2336;
  t2448 = t1719*t2356;
  t2456 = t2435 + t2437 + t2448;
  t2395 = -0.277324*t2392;
  t2429 = -0.035535*t2428;
  t2479 = -0.212584*t2456;
  t2486 = var1[1] + t2246 + t2289 + t2322 + t2341 + t2362 + t2395 + t2429 + t2479;
  t3049 = -1.*t2274*t307*t1270;
  t3061 = t2231*t1335;
  t3063 = t3049 + t3061;
  t3068 = t307*t2231;
  t3077 = t2274*t1270*t1335;
  t3088 = t3068 + t3077;
  t3117 = -1.*t600*t3063;
  t3122 = t345*t3088;
  t3132 = t3117 + t3122;
  t3148 = t345*t3063;
  t3162 = t600*t3088;
  t3166 = t3148 + t3162;
  t3042 = t2274*t295*t1245;
  t3065 = t747*t3063;
  t3093 = t1300*t3088;
  t3146 = t1504*t3132;
  t3169 = t1574*t3166;
  t3176 = t2274*t295*t1600;
  t3178 = t1608*t3132;
  t3190 = t1621*t3166;
  t3195 = t3176 + t3178 + t3190;
  t3203 = t1662*t2274*t295;
  t3220 = t1688*t3132;
  t3236 = t1697*t3166;
  t3250 = t3203 + t3220 + t3236;
  t3254 = t2274*t295*t1705;
  t3255 = t1715*t3132;
  t3265 = t1719*t3166;
  t3267 = t3254 + t3255 + t3265;
  t3200 = -0.277324*t3195;
  t3253 = -0.035535*t3250;
  t3276 = -0.212584*t3267;
  t3286 = var1[2] + t3042 + t3065 + t3093 + t3146 + t3169 + t3200 + t3253 + t3276;
  t3622 = -0.499265*t1638;
  t3625 = -0.035361*t1701;
  t3627 = -0.151585*t1723;
  t3631 = var1[0] + t813 + t1276 + t1342 + t1544 + t1592 + t3622 + t3625 + t3627;
  t4059 = -0.499265*t2392;
  t4060 = -0.035361*t2428;
  t4062 = -0.151585*t2456;
  t4064 = var1[1] + t2246 + t2289 + t2322 + t2341 + t2362 + t4059 + t4060 + t4062;
  t4303 = -0.499265*t3195;
  t4305 = -0.035361*t3250;
  t4306 = -0.151585*t3267;
  t4307 = var1[2] + t3042 + t3065 + t3093 + t3146 + t3169 + t4303 + t4305 + t4306;
  p_output1[0]=t1731;
  p_output1[1]=t1276 + t1342 + t1544 + t1592 - 0.277262*t1638 - 0.040467*t1701 - 0.212342*t1723 + t813 + var1[0];
  p_output1[2]=t1276 + t1342 + t1544 + t1592 - 0.277627*t1638 - 0.045212*t1701 - 0.213657*t1723 + t813 + var1[0];
  p_output1[3]=t1276 + t1342 + t1544 + t1592 - 0.27838*t1638 - 0.049258*t1701 - 0.216387*t1723 + t813 + var1[0];
  p_output1[4]=t1276 + t1342 + t1544 + t1592 - 0.27944*t1638 - 0.052164*t1701 - 0.220235*t1723 + t813 + var1[0];
  p_output1[5]=t1276 + t1342 + t1544 + t1592 - 0.280692*t1638 - 0.053617*t1701 - 0.224786*t1723 + t813 + var1[0];
  p_output1[6]=t1276 + t1342 + t1544 + t1592 - 0.282*t1638 - 0.053459*t1701 - 0.229544*t1723 + t813 + var1[0];
  p_output1[7]=t1276 + t1342 + t1544 + t1592 - 0.283222*t1638 - 0.051707*t1701 - 0.233996*t1723 + t813 + var1[0];
  p_output1[8]=t1276 + t1342 + t1544 + t1592 - 0.284226*t1638 - 0.04855*t1701 - 0.237659*t1723 + t813 + var1[0];
  p_output1[9]=t1276 + t1342 + t1544 + t1592 - 0.284903*t1638 - 0.044332*t1701 - 0.240135*t1723 + t813 + var1[0];
  p_output1[10]=t1276 + t1342 + t1544 + t1592 - 0.28518*t1638 - 0.039509*t1701 - 0.241156*t1723 + t813 + var1[0];
  p_output1[11]=t1276 + t1342 + t1544 + t1592 - 0.285027*t1638 - 0.034604*t1701 - 0.240612*t1723 + t813 + var1[0];
  p_output1[12]=t1276 + t1342 + t1544 + t1592 - 0.28446*t1638 - 0.030148*t1701 - 0.238561*t1723 + t813 + var1[0];
  p_output1[13]=t1276 + t1342 + t1544 + t1592 - 0.28354*t1638 - 0.026624*t1701 - 0.235227*t1723 + t813 + var1[0];
  p_output1[14]=t1276 + t1342 + t1544 + t1592 - 0.282369*t1638 - 0.024414*t1701 - 0.230969*t1723 + t813 + var1[0];
  p_output1[15]=t1276 + t1342 + t1544 + t1592 - 0.281071*t1638 - 0.023758*t1701 - 0.226251*t1723 + t813 + var1[0];
  p_output1[16]=t1276 + t1342 + t1544 + t1592 - 0.279789*t1638 - 0.024726*t1701 - 0.221582*t1723 + t813 + var1[0];
  p_output1[17]=t1276 + t1342 + t1544 + t1592 - 0.27866*t1638 - 0.027214*t1701 - 0.217468*t1723 + t813 + var1[0];
  p_output1[18]=t1276 + t1342 + t1544 + t1592 - 0.277808*t1638 - 0.030952*t1701 - 0.214357*t1723 + t813 + var1[0];
  p_output1[19]=t1731;
  p_output1[20]=t2486;
  p_output1[21]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.277262*t2392 - 0.040467*t2428 - 0.212342*t2456 + var1[1];
  p_output1[22]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.277627*t2392 - 0.045212*t2428 - 0.213657*t2456 + var1[1];
  p_output1[23]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.27838*t2392 - 0.049258*t2428 - 0.216387*t2456 + var1[1];
  p_output1[24]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.27944*t2392 - 0.052164*t2428 - 0.220235*t2456 + var1[1];
  p_output1[25]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.280692*t2392 - 0.053617*t2428 - 0.224786*t2456 + var1[1];
  p_output1[26]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.282*t2392 - 0.053459*t2428 - 0.229544*t2456 + var1[1];
  p_output1[27]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.283222*t2392 - 0.051707*t2428 - 0.233996*t2456 + var1[1];
  p_output1[28]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.284226*t2392 - 0.04855*t2428 - 0.237659*t2456 + var1[1];
  p_output1[29]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.284903*t2392 - 0.044332*t2428 - 0.240135*t2456 + var1[1];
  p_output1[30]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.28518*t2392 - 0.039509*t2428 - 0.241156*t2456 + var1[1];
  p_output1[31]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.285027*t2392 - 0.034604*t2428 - 0.240612*t2456 + var1[1];
  p_output1[32]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.28446*t2392 - 0.030148*t2428 - 0.238561*t2456 + var1[1];
  p_output1[33]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.28354*t2392 - 0.026624*t2428 - 0.235227*t2456 + var1[1];
  p_output1[34]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.282369*t2392 - 0.024414*t2428 - 0.230969*t2456 + var1[1];
  p_output1[35]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.281071*t2392 - 0.023758*t2428 - 0.226251*t2456 + var1[1];
  p_output1[36]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.279789*t2392 - 0.024726*t2428 - 0.221582*t2456 + var1[1];
  p_output1[37]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.27866*t2392 - 0.027214*t2428 - 0.217468*t2456 + var1[1];
  p_output1[38]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.277808*t2392 - 0.030952*t2428 - 0.214357*t2456 + var1[1];
  p_output1[39]=t2486;
  p_output1[40]=t3286;
  p_output1[41]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.277262*t3195 - 0.040467*t3250 - 0.212342*t3267 + var1[2];
  p_output1[42]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.277627*t3195 - 0.045212*t3250 - 0.213657*t3267 + var1[2];
  p_output1[43]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.27838*t3195 - 0.049258*t3250 - 0.216387*t3267 + var1[2];
  p_output1[44]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.27944*t3195 - 0.052164*t3250 - 0.220235*t3267 + var1[2];
  p_output1[45]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.280692*t3195 - 0.053617*t3250 - 0.224786*t3267 + var1[2];
  p_output1[46]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.282*t3195 - 0.053459*t3250 - 0.229544*t3267 + var1[2];
  p_output1[47]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.283222*t3195 - 0.051707*t3250 - 0.233996*t3267 + var1[2];
  p_output1[48]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.284226*t3195 - 0.04855*t3250 - 0.237659*t3267 + var1[2];
  p_output1[49]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.284903*t3195 - 0.044332*t3250 - 0.240135*t3267 + var1[2];
  p_output1[50]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.28518*t3195 - 0.039509*t3250 - 0.241156*t3267 + var1[2];
  p_output1[51]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.285027*t3195 - 0.034604*t3250 - 0.240612*t3267 + var1[2];
  p_output1[52]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.28446*t3195 - 0.030148*t3250 - 0.238561*t3267 + var1[2];
  p_output1[53]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.28354*t3195 - 0.026624*t3250 - 0.235227*t3267 + var1[2];
  p_output1[54]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.282369*t3195 - 0.024414*t3250 - 0.230969*t3267 + var1[2];
  p_output1[55]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.281071*t3195 - 0.023758*t3250 - 0.226251*t3267 + var1[2];
  p_output1[56]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.279789*t3195 - 0.024726*t3250 - 0.221582*t3267 + var1[2];
  p_output1[57]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.27866*t3195 - 0.027214*t3250 - 0.217468*t3267 + var1[2];
  p_output1[58]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.277808*t3195 - 0.030952*t3250 - 0.214357*t3267 + var1[2];
  p_output1[59]=t3286;
  p_output1[60]=t3631;
  p_output1[61]=t1276 + t1342 + t1544 + t1592 - 0.499202*t1638 - 0.040293*t1701 - 0.151344*t1723 + t813 + var1[0];
  p_output1[62]=t1276 + t1342 + t1544 + t1592 - 0.499567*t1638 - 0.045038*t1701 - 0.152659*t1723 + t813 + var1[0];
  p_output1[63]=t1276 + t1342 + t1544 + t1592 - 0.500321*t1638 - 0.049083*t1701 - 0.155388*t1723 + t813 + var1[0];
  p_output1[64]=t1276 + t1342 + t1544 + t1592 - 0.501381*t1638 - 0.05199*t1701 - 0.159237*t1723 + t813 + var1[0];
  p_output1[65]=t1276 + t1342 + t1544 + t1592 - 0.502632*t1638 - 0.053443*t1701 - 0.163787*t1723 + t813 + var1[0];
  p_output1[66]=t1276 + t1342 + t1544 + t1592 - 0.50394*t1638 - 0.053284*t1701 - 0.168546*t1723 + t813 + var1[0];
  p_output1[67]=t1276 + t1342 + t1544 + t1592 - 0.505162*t1638 - 0.051532*t1701 - 0.172998*t1723 + t813 + var1[0];
  p_output1[68]=t1276 + t1342 + t1544 + t1592 - 0.506166*t1638 - 0.048376*t1701 - 0.17666*t1723 + t813 + var1[0];
  p_output1[69]=t1276 + t1342 + t1544 + t1592 - 0.506844*t1638 - 0.044158*t1701 - 0.179136*t1723 + t813 + var1[0];
  p_output1[70]=t1276 + t1342 + t1544 + t1592 - 0.507121*t1638 - 0.039335*t1701 - 0.180157*t1723 + t813 + var1[0];
  p_output1[71]=t1276 + t1342 + t1544 + t1592 - 0.506967*t1638 - 0.03443*t1701 - 0.179613*t1723 + t813 + var1[0];
  p_output1[72]=t1276 + t1342 + t1544 + t1592 - 0.5064*t1638 - 0.029973*t1701 - 0.177563*t1723 + t813 + var1[0];
  p_output1[73]=t1276 + t1342 + t1544 + t1592 - 0.505481*t1638 - 0.02645*t1701 - 0.174228*t1723 + t813 + var1[0];
  p_output1[74]=t1276 + t1342 + t1544 + t1592 - 0.504309*t1638 - 0.02424*t1701 - 0.169971*t1723 + t813 + var1[0];
  p_output1[75]=t1276 + t1342 + t1544 + t1592 - 0.503012*t1638 - 0.023583*t1701 - 0.165252*t1723 + t813 + var1[0];
  p_output1[76]=t1276 + t1342 + t1544 + t1592 - 0.501729*t1638 - 0.024552*t1701 - 0.160583*t1723 + t813 + var1[0];
  p_output1[77]=t1276 + t1342 + t1544 + t1592 - 0.500601*t1638 - 0.02704*t1701 - 0.15647*t1723 + t813 + var1[0];
  p_output1[78]=t1276 + t1342 + t1544 + t1592 - 0.499748*t1638 - 0.030778*t1701 - 0.153358*t1723 + t813 + var1[0];
  p_output1[79]=t3631;
  p_output1[80]=t4064;
  p_output1[81]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.499202*t2392 - 0.040293*t2428 - 0.151344*t2456 + var1[1];
  p_output1[82]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.499567*t2392 - 0.045038*t2428 - 0.152659*t2456 + var1[1];
  p_output1[83]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.500321*t2392 - 0.049083*t2428 - 0.155388*t2456 + var1[1];
  p_output1[84]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.501381*t2392 - 0.05199*t2428 - 0.159237*t2456 + var1[1];
  p_output1[85]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.502632*t2392 - 0.053443*t2428 - 0.163787*t2456 + var1[1];
  p_output1[86]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.50394*t2392 - 0.053284*t2428 - 0.168546*t2456 + var1[1];
  p_output1[87]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.505162*t2392 - 0.051532*t2428 - 0.172998*t2456 + var1[1];
  p_output1[88]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.506166*t2392 - 0.048376*t2428 - 0.17666*t2456 + var1[1];
  p_output1[89]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.506844*t2392 - 0.044158*t2428 - 0.179136*t2456 + var1[1];
  p_output1[90]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.507121*t2392 - 0.039335*t2428 - 0.180157*t2456 + var1[1];
  p_output1[91]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.506967*t2392 - 0.03443*t2428 - 0.179613*t2456 + var1[1];
  p_output1[92]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.5064*t2392 - 0.029973*t2428 - 0.177563*t2456 + var1[1];
  p_output1[93]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.505481*t2392 - 0.02645*t2428 - 0.174228*t2456 + var1[1];
  p_output1[94]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.504309*t2392 - 0.02424*t2428 - 0.169971*t2456 + var1[1];
  p_output1[95]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.503012*t2392 - 0.023583*t2428 - 0.165252*t2456 + var1[1];
  p_output1[96]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.501729*t2392 - 0.024552*t2428 - 0.160583*t2456 + var1[1];
  p_output1[97]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.500601*t2392 - 0.02704*t2428 - 0.15647*t2456 + var1[1];
  p_output1[98]=t2246 + t2289 + t2322 + t2341 + t2362 - 0.499748*t2392 - 0.030778*t2428 - 0.153358*t2456 + var1[1];
  p_output1[99]=t4064;
  p_output1[100]=t4307;
  p_output1[101]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.499202*t3195 - 0.040293*t3250 - 0.151344*t3267 + var1[2];
  p_output1[102]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.499567*t3195 - 0.045038*t3250 - 0.152659*t3267 + var1[2];
  p_output1[103]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.500321*t3195 - 0.049083*t3250 - 0.155388*t3267 + var1[2];
  p_output1[104]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.501381*t3195 - 0.05199*t3250 - 0.159237*t3267 + var1[2];
  p_output1[105]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.502632*t3195 - 0.053443*t3250 - 0.163787*t3267 + var1[2];
  p_output1[106]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.50394*t3195 - 0.053284*t3250 - 0.168546*t3267 + var1[2];
  p_output1[107]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.505162*t3195 - 0.051532*t3250 - 0.172998*t3267 + var1[2];
  p_output1[108]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.506166*t3195 - 0.048376*t3250 - 0.17666*t3267 + var1[2];
  p_output1[109]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.506844*t3195 - 0.044158*t3250 - 0.179136*t3267 + var1[2];
  p_output1[110]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.507121*t3195 - 0.039335*t3250 - 0.180157*t3267 + var1[2];
  p_output1[111]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.506967*t3195 - 0.03443*t3250 - 0.179613*t3267 + var1[2];
  p_output1[112]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.5064*t3195 - 0.029973*t3250 - 0.177563*t3267 + var1[2];
  p_output1[113]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.505481*t3195 - 0.02645*t3250 - 0.174228*t3267 + var1[2];
  p_output1[114]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.504309*t3195 - 0.02424*t3250 - 0.169971*t3267 + var1[2];
  p_output1[115]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.503012*t3195 - 0.023583*t3250 - 0.165252*t3267 + var1[2];
  p_output1[116]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.501729*t3195 - 0.024552*t3250 - 0.160583*t3267 + var1[2];
  p_output1[117]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.500601*t3195 - 0.02704*t3250 - 0.15647*t3267 + var1[2];
  p_output1[118]=t3042 + t3065 + t3093 + t3146 + t3169 - 0.499748*t3195 - 0.030778*t3250 - 0.153358*t3267 + var1[2];
  p_output1[119]=t4307;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_rr_thigh_to_rr_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_rr_thigh_to_rr_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
