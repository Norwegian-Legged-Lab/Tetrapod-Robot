/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 18:01:30 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1865;
  double t517;
  double t985;
  double t1322;
  double t1435;
  double t1789;
  double t1839;
  double t1871;
  double t1891;
  double t1913;
  double t2032;
  double t643;
  double t2211;
  double t2127;
  double t2286;
  double t2331;
  double t2397;
  double t2423;
  double t2432;
  double t2434;
  double t1610;
  double t1848;
  double t1851;
  double t1860;
  double t1894;
  double t1915;
  double t2111;
  double t2118;
  double t2147;
  double t2167;
  double t2171;
  double t2231;
  double t2251;
  double t2252;
  double t2255;
  double t2271;
  double t2285;
  double t2402;
  double t2411;
  double t2412;
  double t2414;
  double t2437;
  double t2443;
  double t2444;
  double t2445;
  double t2450;
  double t2458;
  double t2460;
  double t2487;
  double t2507;
  double t2518;
  double t2532;
  double t2572;
  double t2579;
  double t2584;
  double t2585;
  double t2586;
  double t2598;
  double t2462;
  double t2555;
  double t2600;
  double t2606;
  double t2888;
  double t2912;
  double t2909;
  double t2916;
  double t2925;
  double t2936;
  double t2937;
  double t2938;
  double t2942;
  double t2951;
  double t2953;
  double t2967;
  double t2975;
  double t2978;
  double t2907;
  double t2928;
  double t2941;
  double t2965;
  double t2980;
  double t2981;
  double t2985;
  double t2986;
  double t2993;
  double t3002;
  double t3003;
  double t3004;
  double t3006;
  double t3013;
  double t3016;
  double t3017;
  double t3018;
  double t2994;
  double t3012;
  double t3021;
  double t3026;
  double t3274;
  double t3278;
  double t3281;
  double t3289;
  double t3291;
  double t3301;
  double t3304;
  double t3305;
  double t3306;
  double t3317;
  double t3325;
  double t3327;
  double t3270;
  double t3283;
  double t3303;
  double t3313;
  double t3328;
  double t3330;
  double t3333;
  double t3335;
  double t3340;
  double t3345;
  double t3348;
  double t3357;
  double t3359;
  double t3363;
  double t3367;
  double t3371;
  double t3375;
  double t3344;
  double t3362;
  double t3378;
  double t3380;
  double t3581;
  double t3582;
  double t3583;
  double t3587;
  double t3778;
  double t3779;
  double t3780;
  double t3781;
  double t4012;
  double t4014;
  double t4015;
  double t4021;
  t1865 = Cos(var1[10]);
  t517 = Cos(var1[4]);
  t985 = Cos(var1[9]);
  t1322 = -1.*t985;
  t1435 = 1. + t1322;
  t1789 = Sin(var1[9]);
  t1839 = -0.15121*t1789;
  t1871 = -1.*t1865;
  t1891 = 1. + t1871;
  t1913 = -1. + t1865;
  t2032 = Sin(var1[10]);
  t643 = Cos(var1[5]);
  t2211 = Sin(var1[5]);
  t2127 = Sin(var1[4]);
  t2286 = -1.*t517*t643*t1789;
  t2331 = -1.*t985*t517*t2211;
  t2397 = t2286 + t2331;
  t2423 = t985*t517*t643;
  t2432 = -1.*t517*t1789*t2211;
  t2434 = t2423 + t2432;
  t1610 = 0.15121*t1435;
  t1848 = t1610 + t1839;
  t1851 = t517*t643*t1848;
  t1860 = -4.9936e-13*var1[10];
  t1894 = -0.038749*t1891;
  t1915 = 6.19984e-13*t1913;
  t2111 = -0.281210000004*t2032;
  t2118 = t1860 + t1894 + t1915 + t2111;
  t2147 = t2118*t2127;
  t2167 = -0.15121*t1435;
  t2171 = t2167 + t1839;
  t2231 = -1.*t517*t2171*t2211;
  t2251 = -1.2484e-7*var1[10];
  t2252 = 2.479936e-18*t1891;
  t2255 = -1.54996e-7*t1913;
  t2271 = 1.124840000016e-6*t2032;
  t2285 = t2251 + t2252 + t2255 + t2271;
  t2402 = t2285*t2397;
  t2411 = 0.281210000008499*t1891;
  t2412 = -0.03874900000062*t2032;
  t2414 = t2411 + t2412;
  t2437 = t2414*t2434;
  t2443 = t2032*t2127;
  t2444 = -4.e-6*t2032*t2397;
  t2445 = -1.000000000016*t1891;
  t2450 = 1. + t2445;
  t2458 = t2450*t2434;
  t2460 = t2443 + t2444 + t2458;
  t2487 = t1865*t2127;
  t2507 = 4.e-6*t1891*t2397;
  t2518 = -1.*t2032*t2434;
  t2532 = t2487 + t2507 + t2518;
  t2572 = 4.e-6*t1891*t2127;
  t2579 = 1.6e-11*t1913;
  t2584 = 1. + t2579;
  t2585 = t2584*t2397;
  t2586 = 4.e-6*t2032*t2434;
  t2598 = t2572 + t2585 + t2586;
  t2462 = 0.277967*t2460;
  t2555 = -0.047648*t2532;
  t2600 = -0.215078*t2598;
  t2606 = var1[0] + t1851 + t2147 + t2231 + t2402 + t2437 + t2462 + t2555 + t2600;
  t2888 = Sin(var1[3]);
  t2912 = Cos(var1[3]);
  t2909 = t643*t2888*t2127;
  t2916 = t2912*t2211;
  t2925 = t2909 + t2916;
  t2936 = t2912*t643;
  t2937 = -1.*t2888*t2127*t2211;
  t2938 = t2936 + t2937;
  t2942 = -1.*t1789*t2925;
  t2951 = t985*t2938;
  t2953 = t2942 + t2951;
  t2967 = t985*t2925;
  t2975 = t1789*t2938;
  t2978 = t2967 + t2975;
  t2907 = -1.*t517*t2118*t2888;
  t2928 = t1848*t2925;
  t2941 = t2171*t2938;
  t2965 = t2285*t2953;
  t2980 = t2414*t2978;
  t2981 = -1.*t517*t2032*t2888;
  t2985 = -4.e-6*t2032*t2953;
  t2986 = t2450*t2978;
  t2993 = t2981 + t2985 + t2986;
  t3002 = -1.*t1865*t517*t2888;
  t3003 = 4.e-6*t1891*t2953;
  t3004 = -1.*t2032*t2978;
  t3006 = t3002 + t3003 + t3004;
  t3013 = -4.e-6*t1891*t517*t2888;
  t3016 = t2584*t2953;
  t3017 = 4.e-6*t2032*t2978;
  t3018 = t3013 + t3016 + t3017;
  t2994 = 0.277967*t2993;
  t3012 = -0.047648*t3006;
  t3021 = -0.215078*t3018;
  t3026 = var1[1] + t2907 + t2928 + t2941 + t2965 + t2980 + t2994 + t3012 + t3021;
  t3274 = -1.*t2912*t643*t2127;
  t3278 = t2888*t2211;
  t3281 = t3274 + t3278;
  t3289 = t643*t2888;
  t3291 = t2912*t2127*t2211;
  t3301 = t3289 + t3291;
  t3304 = -1.*t1789*t3281;
  t3305 = t985*t3301;
  t3306 = t3304 + t3305;
  t3317 = t985*t3281;
  t3325 = t1789*t3301;
  t3327 = t3317 + t3325;
  t3270 = t2912*t517*t2118;
  t3283 = t1848*t3281;
  t3303 = t2171*t3301;
  t3313 = t2285*t3306;
  t3328 = t2414*t3327;
  t3330 = t2912*t517*t2032;
  t3333 = -4.e-6*t2032*t3306;
  t3335 = t2450*t3327;
  t3340 = t3330 + t3333 + t3335;
  t3345 = t1865*t2912*t517;
  t3348 = 4.e-6*t1891*t3306;
  t3357 = -1.*t2032*t3327;
  t3359 = t3345 + t3348 + t3357;
  t3363 = 4.e-6*t1891*t2912*t517;
  t3367 = t2584*t3306;
  t3371 = 4.e-6*t2032*t3327;
  t3375 = t3363 + t3367 + t3371;
  t3344 = 0.277967*t3340;
  t3362 = -0.047648*t3359;
  t3378 = -0.215078*t3375;
  t3380 = var1[2] + t3270 + t3283 + t3303 + t3313 + t3328 + t3344 + t3362 + t3378;
  t3581 = 0.499907*t2460;
  t3582 = -0.048788*t2532;
  t3583 = -0.154078*t2598;
  t3587 = var1[0] + t1851 + t2147 + t2231 + t2402 + t2437 + t3581 + t3582 + t3583;
  t3778 = 0.499907*t2993;
  t3779 = -0.048788*t3006;
  t3780 = -0.154078*t3018;
  t3781 = var1[1] + t2907 + t2928 + t2941 + t2965 + t2980 + t3778 + t3779 + t3780;
  t4012 = 0.499907*t3340;
  t4014 = -0.048788*t3359;
  t4015 = -0.154078*t3375;
  t4021 = var1[2] + t3270 + t3283 + t3303 + t3313 + t3328 + t4012 + t4014 + t4015;
  p_output1[0]=t2606;
  p_output1[1]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.277396*t2460 - 0.043245*t2532 - 0.212917*t2598 + var1[0];
  p_output1[2]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.277238*t2460 - 0.038355*t2532 - 0.212251*t2598 + var1[0];
  p_output1[3]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.27751*t2460 - 0.033508*t2532 - 0.213152*t2598 + var1[0];
  p_output1[4]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.278184*t2460 - 0.029228*t2532 - 0.215522*t2598 + var1[0];
  p_output1[5]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.279185*t2460 - 0.025981*t2532 - 0.219104*t2598 + var1[0];
  p_output1[6]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.280406*t2460 - 0.024117*t2532 - 0.223511*t2598 + var1[0];
  p_output1[7]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.281714*t2460 - 0.023839*t2532 - 0.228264*t2598 + var1[0];
  p_output1[8]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.282967*t2460 - 0.025177*t2532 - 0.232849*t2598 + var1[0];
  p_output1[9]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.28403*t2460 - 0.027986*t2532 - 0.236769*t2598 + var1[0];
  p_output1[10]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.284787*t2460 - 0.031961*t2532 - 0.239598*t2598 + var1[0];
  p_output1[11]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.285157*t2460 - 0.036672*t2532 - 0.241031*t2598 + var1[0];
  p_output1[12]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.285099*t2460 - 0.041608*t2532 - 0.240912*t2598 + var1[0];
  p_output1[13]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.284619*t2460 - 0.046234*t2532 - 0.239255*t2598 + var1[0];
  p_output1[14]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.283771*t2460 - 0.050049*t2532 - 0.236237*t2598 + var1[0];
  p_output1[15]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.282644*t2460 - 0.05264*t2532 - 0.232187*t2598 + var1[0];
  p_output1[16]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.281362*t2460 - 0.053726*t2532 - 0.227544*t2598 + var1[0];
  p_output1[17]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.280064*t2460 - 0.053189*t2532 - 0.22281*t2598 + var1[0];
  p_output1[18]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.27889*t2460 - 0.051087*t2532 - 0.218499*t2598 + var1[0];
  p_output1[19]=t2606;
  p_output1[20]=t3026;
  p_output1[21]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.277396*t2993 - 0.043245*t3006 - 0.212917*t3018 + var1[1];
  p_output1[22]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.277238*t2993 - 0.038355*t3006 - 0.212251*t3018 + var1[1];
  p_output1[23]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.27751*t2993 - 0.033508*t3006 - 0.213152*t3018 + var1[1];
  p_output1[24]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.278184*t2993 - 0.029228*t3006 - 0.215522*t3018 + var1[1];
  p_output1[25]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.279185*t2993 - 0.025981*t3006 - 0.219104*t3018 + var1[1];
  p_output1[26]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.280406*t2993 - 0.024117*t3006 - 0.223511*t3018 + var1[1];
  p_output1[27]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.281714*t2993 - 0.023839*t3006 - 0.228264*t3018 + var1[1];
  p_output1[28]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.282967*t2993 - 0.025177*t3006 - 0.232849*t3018 + var1[1];
  p_output1[29]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.28403*t2993 - 0.027986*t3006 - 0.236769*t3018 + var1[1];
  p_output1[30]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.284787*t2993 - 0.031961*t3006 - 0.239598*t3018 + var1[1];
  p_output1[31]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.285157*t2993 - 0.036672*t3006 - 0.241031*t3018 + var1[1];
  p_output1[32]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.285099*t2993 - 0.041608*t3006 - 0.240912*t3018 + var1[1];
  p_output1[33]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.284619*t2993 - 0.046234*t3006 - 0.239255*t3018 + var1[1];
  p_output1[34]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.283771*t2993 - 0.050049*t3006 - 0.236237*t3018 + var1[1];
  p_output1[35]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.282644*t2993 - 0.05264*t3006 - 0.232187*t3018 + var1[1];
  p_output1[36]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.281362*t2993 - 0.053726*t3006 - 0.227544*t3018 + var1[1];
  p_output1[37]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.280064*t2993 - 0.053189*t3006 - 0.22281*t3018 + var1[1];
  p_output1[38]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.27889*t2993 - 0.051087*t3006 - 0.218499*t3018 + var1[1];
  p_output1[39]=t3026;
  p_output1[40]=t3380;
  p_output1[41]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.277396*t3340 - 0.043245*t3359 - 0.212917*t3375 + var1[2];
  p_output1[42]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.277238*t3340 - 0.038355*t3359 - 0.212251*t3375 + var1[2];
  p_output1[43]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.27751*t3340 - 0.033508*t3359 - 0.213152*t3375 + var1[2];
  p_output1[44]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.278184*t3340 - 0.029228*t3359 - 0.215522*t3375 + var1[2];
  p_output1[45]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.279185*t3340 - 0.025981*t3359 - 0.219104*t3375 + var1[2];
  p_output1[46]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.280406*t3340 - 0.024117*t3359 - 0.223511*t3375 + var1[2];
  p_output1[47]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.281714*t3340 - 0.023839*t3359 - 0.228264*t3375 + var1[2];
  p_output1[48]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.282967*t3340 - 0.025177*t3359 - 0.232849*t3375 + var1[2];
  p_output1[49]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.28403*t3340 - 0.027986*t3359 - 0.236769*t3375 + var1[2];
  p_output1[50]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.284787*t3340 - 0.031961*t3359 - 0.239598*t3375 + var1[2];
  p_output1[51]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.285157*t3340 - 0.036672*t3359 - 0.241031*t3375 + var1[2];
  p_output1[52]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.285099*t3340 - 0.041608*t3359 - 0.240912*t3375 + var1[2];
  p_output1[53]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.284619*t3340 - 0.046234*t3359 - 0.239255*t3375 + var1[2];
  p_output1[54]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.283771*t3340 - 0.050049*t3359 - 0.236237*t3375 + var1[2];
  p_output1[55]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.282644*t3340 - 0.05264*t3359 - 0.232187*t3375 + var1[2];
  p_output1[56]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.281362*t3340 - 0.053726*t3359 - 0.227544*t3375 + var1[2];
  p_output1[57]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.280064*t3340 - 0.053189*t3359 - 0.22281*t3375 + var1[2];
  p_output1[58]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.27889*t3340 - 0.051087*t3359 - 0.218499*t3375 + var1[2];
  p_output1[59]=t3380;
  p_output1[60]=t3587;
  p_output1[61]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.499336*t2460 - 0.044385*t2532 - 0.151917*t2598 + var1[0];
  p_output1[62]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.499178*t2460 - 0.039495*t2532 - 0.151251*t2598 + var1[0];
  p_output1[63]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.49945*t2460 - 0.034647*t2532 - 0.152152*t2598 + var1[0];
  p_output1[64]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.500124*t2460 - 0.030368*t2532 - 0.154522*t2598 + var1[0];
  p_output1[65]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.501125*t2460 - 0.027121*t2532 - 0.158104*t2598 + var1[0];
  p_output1[66]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.502346*t2460 - 0.025257*t2532 - 0.162511*t2598 + var1[0];
  p_output1[67]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.503654*t2460 - 0.024979*t2532 - 0.167264*t2598 + var1[0];
  p_output1[68]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.504907*t2460 - 0.026317*t2532 - 0.171849*t2598 + var1[0];
  p_output1[69]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.50597*t2460 - 0.029125*t2532 - 0.175769*t2598 + var1[0];
  p_output1[70]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.506727*t2460 - 0.0331*t2532 - 0.178598*t2598 + var1[0];
  p_output1[71]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.507097*t2460 - 0.037811*t2532 - 0.180031*t2598 + var1[0];
  p_output1[72]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.507039*t2460 - 0.042747*t2532 - 0.179912*t2598 + var1[0];
  p_output1[73]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.506559*t2460 - 0.047374*t2532 - 0.178255*t2598 + var1[0];
  p_output1[74]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.505711*t2460 - 0.051189*t2532 - 0.175237*t2598 + var1[0];
  p_output1[75]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.504584*t2460 - 0.05378*t2532 - 0.171187*t2598 + var1[0];
  p_output1[76]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.503302*t2460 - 0.054866*t2532 - 0.166544*t2598 + var1[0];
  p_output1[77]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.502004*t2460 - 0.054329*t2532 - 0.16181*t2598 + var1[0];
  p_output1[78]=t1851 + t2147 + t2231 + t2402 + t2437 + 0.50083*t2460 - 0.052227*t2532 - 0.157499*t2598 + var1[0];
  p_output1[79]=t3587;
  p_output1[80]=t3781;
  p_output1[81]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.499336*t2993 - 0.044385*t3006 - 0.151917*t3018 + var1[1];
  p_output1[82]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.499178*t2993 - 0.039495*t3006 - 0.151251*t3018 + var1[1];
  p_output1[83]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.49945*t2993 - 0.034647*t3006 - 0.152152*t3018 + var1[1];
  p_output1[84]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.500124*t2993 - 0.030368*t3006 - 0.154522*t3018 + var1[1];
  p_output1[85]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.501125*t2993 - 0.027121*t3006 - 0.158104*t3018 + var1[1];
  p_output1[86]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.502346*t2993 - 0.025257*t3006 - 0.162511*t3018 + var1[1];
  p_output1[87]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.503654*t2993 - 0.024979*t3006 - 0.167264*t3018 + var1[1];
  p_output1[88]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.504907*t2993 - 0.026317*t3006 - 0.171849*t3018 + var1[1];
  p_output1[89]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.50597*t2993 - 0.029125*t3006 - 0.175769*t3018 + var1[1];
  p_output1[90]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.506727*t2993 - 0.0331*t3006 - 0.178598*t3018 + var1[1];
  p_output1[91]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.507097*t2993 - 0.037811*t3006 - 0.180031*t3018 + var1[1];
  p_output1[92]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.507039*t2993 - 0.042747*t3006 - 0.179912*t3018 + var1[1];
  p_output1[93]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.506559*t2993 - 0.047374*t3006 - 0.178255*t3018 + var1[1];
  p_output1[94]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.505711*t2993 - 0.051189*t3006 - 0.175237*t3018 + var1[1];
  p_output1[95]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.504584*t2993 - 0.05378*t3006 - 0.171187*t3018 + var1[1];
  p_output1[96]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.503302*t2993 - 0.054866*t3006 - 0.166544*t3018 + var1[1];
  p_output1[97]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.502004*t2993 - 0.054329*t3006 - 0.16181*t3018 + var1[1];
  p_output1[98]=t2907 + t2928 + t2941 + t2965 + t2980 + 0.50083*t2993 - 0.052227*t3006 - 0.157499*t3018 + var1[1];
  p_output1[99]=t3781;
  p_output1[100]=t4021;
  p_output1[101]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.499336*t3340 - 0.044385*t3359 - 0.151917*t3375 + var1[2];
  p_output1[102]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.499178*t3340 - 0.039495*t3359 - 0.151251*t3375 + var1[2];
  p_output1[103]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.49945*t3340 - 0.034647*t3359 - 0.152152*t3375 + var1[2];
  p_output1[104]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.500124*t3340 - 0.030368*t3359 - 0.154522*t3375 + var1[2];
  p_output1[105]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.501125*t3340 - 0.027121*t3359 - 0.158104*t3375 + var1[2];
  p_output1[106]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.502346*t3340 - 0.025257*t3359 - 0.162511*t3375 + var1[2];
  p_output1[107]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.503654*t3340 - 0.024979*t3359 - 0.167264*t3375 + var1[2];
  p_output1[108]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.504907*t3340 - 0.026317*t3359 - 0.171849*t3375 + var1[2];
  p_output1[109]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.50597*t3340 - 0.029125*t3359 - 0.175769*t3375 + var1[2];
  p_output1[110]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.506727*t3340 - 0.0331*t3359 - 0.178598*t3375 + var1[2];
  p_output1[111]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.507097*t3340 - 0.037811*t3359 - 0.180031*t3375 + var1[2];
  p_output1[112]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.507039*t3340 - 0.042747*t3359 - 0.179912*t3375 + var1[2];
  p_output1[113]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.506559*t3340 - 0.047374*t3359 - 0.178255*t3375 + var1[2];
  p_output1[114]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.505711*t3340 - 0.051189*t3359 - 0.175237*t3375 + var1[2];
  p_output1[115]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.504584*t3340 - 0.05378*t3359 - 0.171187*t3375 + var1[2];
  p_output1[116]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.503302*t3340 - 0.054866*t3359 - 0.166544*t3375 + var1[2];
  p_output1[117]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.502004*t3340 - 0.054329*t3359 - 0.16181*t3375 + var1[2];
  p_output1[118]=t3270 + t3283 + t3303 + t3313 + t3328 + 0.50083*t3340 - 0.052227*t3359 - 0.157499*t3375 + var1[2];
  p_output1[119]=t4021;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_fr_thigh_to_fr_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_fr_thigh_to_fr_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
