/*
 * Automatically Generated from Mathematica.
 * Fri 4 Feb 2022 15:51:56 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t5412;
  double t2599;
  double t4736;
  double t4752;
  double t4868;
  double t5116;
  double t5143;
  double t5510;
  double t5561;
  double t5587;
  double t5605;
  double t2989;
  double t6026;
  double t5670;
  double t6497;
  double t6504;
  double t6516;
  double t6632;
  double t6639;
  double t6663;
  double t4970;
  double t5191;
  double t5255;
  double t5393;
  double t5563;
  double t5601;
  double t5616;
  double t5659;
  double t5713;
  double t5770;
  double t5819;
  double t6199;
  double t6389;
  double t6440;
  double t6449;
  double t6463;
  double t6483;
  double t6526;
  double t6534;
  double t6598;
  double t6600;
  double t6669;
  double t6673;
  double t6758;
  double t6765;
  double t6768;
  double t6776;
  double t6778;
  double t6783;
  double t6792;
  double t6793;
  double t6809;
  double t6839;
  double t6872;
  double t6930;
  double t7081;
  double t7088;
  double t7091;
  double t6779;
  double t6825;
  double t7157;
  double t7187;
  double t7950;
  double t8010;
  double t8002;
  double t8053;
  double t8059;
  double t8112;
  double t8113;
  double t8114;
  double t8120;
  double t8142;
  double t8145;
  double t8176;
  double t8177;
  double t8178;
  double t7967;
  double t8110;
  double t8118;
  double t8147;
  double t8179;
  double t8180;
  double t8181;
  double t8186;
  double t8187;
  double t8191;
  double t8210;
  double t8213;
  double t8216;
  double t8220;
  double t8222;
  double t8238;
  double t8239;
  double t8189;
  double t8219;
  double t8256;
  double t8257;
  double t9108;
  double t9119;
  double t9123;
  double t9169;
  double t9212;
  double t9224;
  double t9237;
  double t9243;
  double t9529;
  double t9915;
  double t10010;
  double t10051;
  double t9102;
  double t9142;
  double t9230;
  double t9563;
  double t10053;
  double t10222;
  double t10224;
  double t10225;
  double t10331;
  double t10658;
  double t10973;
  double t11014;
  double t11068;
  double t11321;
  double t11343;
  double t11357;
  double t11446;
  double t10598;
  double t11136;
  double t11451;
  double t11474;
  double t12177;
  double t12178;
  double t12186;
  double t12188;
  double t12403;
  double t12405;
  double t12406;
  double t12417;
  double t14447;
  double t14448;
  double t14449;
  double t14450;
  t5412 = Cos(var1[10]);
  t2599 = Cos(var1[4]);
  t4736 = Cos(var1[9]);
  t4752 = -1.*t4736;
  t4868 = 1. + t4752;
  t5116 = Sin(var1[9]);
  t5143 = -0.15121*t5116;
  t5510 = -1.*t5412;
  t5561 = 1. + t5510;
  t5587 = -1. + t5412;
  t5605 = Sin(var1[10]);
  t2989 = Cos(var1[5]);
  t6026 = Sin(var1[5]);
  t5670 = Sin(var1[4]);
  t6497 = -1.*t2599*t2989*t5116;
  t6504 = -1.*t4736*t2599*t6026;
  t6516 = t6497 + t6504;
  t6632 = t4736*t2599*t2989;
  t6639 = -1.*t2599*t5116*t6026;
  t6663 = t6632 + t6639;
  t4970 = 0.15121*t4868;
  t5191 = t4970 + t5143;
  t5255 = t2599*t2989*t5191;
  t5393 = -4.9936e-13*var1[10];
  t5563 = -0.038749*t5561;
  t5601 = 6.19984e-13*t5587;
  t5616 = -0.281210000004*t5605;
  t5659 = t5393 + t5563 + t5601 + t5616;
  t5713 = t5659*t5670;
  t5770 = -0.15121*t4868;
  t5819 = t5770 + t5143;
  t6199 = -1.*t2599*t5819*t6026;
  t6389 = -1.2484e-7*var1[10];
  t6440 = 2.479936e-18*t5561;
  t6449 = -1.54996e-7*t5587;
  t6463 = 1.124840000016e-6*t5605;
  t6483 = t6389 + t6440 + t6449 + t6463;
  t6526 = t6483*t6516;
  t6534 = 0.281210000008499*t5561;
  t6598 = -0.03874900000062*t5605;
  t6600 = t6534 + t6598;
  t6669 = t6600*t6663;
  t6673 = t5605*t5670;
  t6758 = -4.e-6*t5605*t6516;
  t6765 = -1.000000000016*t5561;
  t6768 = 1. + t6765;
  t6776 = t6768*t6663;
  t6778 = t6673 + t6758 + t6776;
  t6783 = t5412*t5670;
  t6792 = 4.e-6*t5561*t6516;
  t6793 = -1.*t5605*t6663;
  t6809 = t6783 + t6792 + t6793;
  t6839 = 4.e-6*t5561*t5670;
  t6872 = 1.6e-11*t5587;
  t6930 = 1. + t6872;
  t7081 = t6930*t6516;
  t7088 = 4.e-6*t5605*t6663;
  t7091 = t6839 + t7081 + t7088;
  t6779 = 0.285172*t6778;
  t6825 = -0.037246*t6809;
  t7157 = -0.241099*t7091;
  t7187 = var1[0] + t5255 + t5713 + t6199 + t6526 + t6669 + t6779 + t6825 + t7157;
  t7950 = Sin(var1[3]);
  t8010 = Cos(var1[3]);
  t8002 = t2989*t7950*t5670;
  t8053 = t8010*t6026;
  t8059 = t8002 + t8053;
  t8112 = t8010*t2989;
  t8113 = -1.*t7950*t5670*t6026;
  t8114 = t8112 + t8113;
  t8120 = -1.*t5116*t8059;
  t8142 = t4736*t8114;
  t8145 = t8120 + t8142;
  t8176 = t4736*t8059;
  t8177 = t5116*t8114;
  t8178 = t8176 + t8177;
  t7967 = -1.*t2599*t5659*t7950;
  t8110 = t5191*t8059;
  t8118 = t5819*t8114;
  t8147 = t6483*t8145;
  t8179 = t6600*t8178;
  t8180 = -1.*t2599*t5605*t7950;
  t8181 = -4.e-6*t5605*t8145;
  t8186 = t6768*t8178;
  t8187 = t8180 + t8181 + t8186;
  t8191 = -1.*t5412*t2599*t7950;
  t8210 = 4.e-6*t5561*t8145;
  t8213 = -1.*t5605*t8178;
  t8216 = t8191 + t8210 + t8213;
  t8220 = -4.e-6*t5561*t2599*t7950;
  t8222 = t6930*t8145;
  t8238 = 4.e-6*t5605*t8178;
  t8239 = t8220 + t8222 + t8238;
  t8189 = 0.285172*t8187;
  t8219 = -0.037246*t8216;
  t8256 = -0.241099*t8239;
  t8257 = var1[1] + t7967 + t8110 + t8118 + t8147 + t8179 + t8189 + t8219 + t8256;
  t9108 = -1.*t8010*t2989*t5670;
  t9119 = t7950*t6026;
  t9123 = t9108 + t9119;
  t9169 = t2989*t7950;
  t9212 = t8010*t5670*t6026;
  t9224 = t9169 + t9212;
  t9237 = -1.*t5116*t9123;
  t9243 = t4736*t9224;
  t9529 = t9237 + t9243;
  t9915 = t4736*t9123;
  t10010 = t5116*t9224;
  t10051 = t9915 + t10010;
  t9102 = t8010*t2599*t5659;
  t9142 = t5191*t9123;
  t9230 = t5819*t9224;
  t9563 = t6483*t9529;
  t10053 = t6600*t10051;
  t10222 = t8010*t2599*t5605;
  t10224 = -4.e-6*t5605*t9529;
  t10225 = t6768*t10051;
  t10331 = t10222 + t10224 + t10225;
  t10658 = t5412*t8010*t2599;
  t10973 = 4.e-6*t5561*t9529;
  t11014 = -1.*t5605*t10051;
  t11068 = t10658 + t10973 + t11014;
  t11321 = 4.e-6*t5561*t8010*t2599;
  t11343 = t6930*t9529;
  t11357 = 4.e-6*t5605*t10051;
  t11446 = t11321 + t11343 + t11357;
  t10598 = 0.285172*t10331;
  t11136 = -0.037246*t11068;
  t11451 = -0.241099*t11446;
  t11474 = var1[2] + t9102 + t9142 + t9230 + t9563 + t10053 + t10598 + t11136 + t11451;
  t12177 = 0.507112*t6778;
  t12178 = -0.038386*t6809;
  t12186 = -0.180099*t7091;
  t12188 = var1[0] + t5255 + t5713 + t6199 + t6526 + t6669 + t12177 + t12178 + t12186;
  t12403 = 0.507112*t8187;
  t12405 = -0.038386*t8216;
  t12406 = -0.180099*t8239;
  t12417 = var1[1] + t7967 + t8110 + t8118 + t8147 + t8179 + t12403 + t12405 + t12406;
  t14447 = 0.507112*t10331;
  t14448 = -0.038386*t11068;
  t14449 = -0.180099*t11446;
  t14450 = var1[2] + t9102 + t9142 + t9230 + t9563 + t10053 + t14447 + t14448 + t14449;
  p_output1[0]=t7187;
  p_output1[1]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.285064*t6778 - 0.042173*t6809 - 0.240796*t7091 + var1[0];
  p_output1[2]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.284538*t6778 - 0.04673*t6809 - 0.238968*t7091 + var1[0];
  p_output1[3]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.283651*t6778 - 0.050421*t6809 - 0.235811*t7091 + var1[0];
  p_output1[4]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.2825*t6778 - 0.052848*t6809 - 0.231667*t7091 + var1[0];
  p_output1[5]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.281209*t6778 - 0.053747*t6809 - 0.226987*t7091 + var1[0];
  p_output1[6]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.279918*t6778 - 0.053021*t6809 - 0.222276*t7091 + var1[0];
  p_output1[7]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.278767*t6778 - 0.050749*t6809 - 0.218046*t7091 + var1[0];
  p_output1[8]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.277881*t6778 - 0.047176*t6809 - 0.214755*t7091 + var1[0];
  p_output1[9]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.277355*t6778 - 0.04269*t6809 - 0.212759*t7091 + var1[0];
  p_output1[10]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.277248*t6778 - 0.037777*t6809 - 0.212276*t7091 + var1[0];
  p_output1[11]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.277569*t6778 - 0.03297*t6809 - 0.213356*t7091 + var1[0];
  p_output1[12]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.278285*t6778 - 0.028789*t6809 - 0.215883*t7091 + var1[0];
  p_output1[13]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.279318*t6778 - 0.025687*t6809 - 0.219584*t7091 + var1[0];
  p_output1[14]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.280557*t6778 - 0.024001*t6809 - 0.224057*t7091 + var1[0];
  p_output1[15]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.281865*t6778 - 0.023913*t6809 - 0.228817*t7091 + var1[0];
  p_output1[16]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.283103*t6778 - 0.025433*t6809 - 0.233349*t7091 + var1[0];
  p_output1[17]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.284136*t6778 - 0.028396*t6809 - 0.237162*t7091 + var1[0];
  p_output1[18]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.284851*t6778 - 0.032481*t6809 - 0.239842*t7091 + var1[0];
  p_output1[19]=t7187;
  p_output1[20]=t8257;
  p_output1[21]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.285064*t8187 - 0.042173*t8216 - 0.240796*t8239 + var1[1];
  p_output1[22]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.284538*t8187 - 0.04673*t8216 - 0.238968*t8239 + var1[1];
  p_output1[23]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.283651*t8187 - 0.050421*t8216 - 0.235811*t8239 + var1[1];
  p_output1[24]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.2825*t8187 - 0.052848*t8216 - 0.231667*t8239 + var1[1];
  p_output1[25]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.281209*t8187 - 0.053747*t8216 - 0.226987*t8239 + var1[1];
  p_output1[26]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.279918*t8187 - 0.053021*t8216 - 0.222276*t8239 + var1[1];
  p_output1[27]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.278767*t8187 - 0.050749*t8216 - 0.218046*t8239 + var1[1];
  p_output1[28]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.277881*t8187 - 0.047176*t8216 - 0.214755*t8239 + var1[1];
  p_output1[29]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.277355*t8187 - 0.04269*t8216 - 0.212759*t8239 + var1[1];
  p_output1[30]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.277248*t8187 - 0.037777*t8216 - 0.212276*t8239 + var1[1];
  p_output1[31]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.277569*t8187 - 0.03297*t8216 - 0.213356*t8239 + var1[1];
  p_output1[32]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.278285*t8187 - 0.028789*t8216 - 0.215883*t8239 + var1[1];
  p_output1[33]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.279318*t8187 - 0.025687*t8216 - 0.219584*t8239 + var1[1];
  p_output1[34]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.280557*t8187 - 0.024001*t8216 - 0.224057*t8239 + var1[1];
  p_output1[35]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.281865*t8187 - 0.023913*t8216 - 0.228817*t8239 + var1[1];
  p_output1[36]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.283103*t8187 - 0.025433*t8216 - 0.233349*t8239 + var1[1];
  p_output1[37]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.284136*t8187 - 0.028396*t8216 - 0.237162*t8239 + var1[1];
  p_output1[38]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.284851*t8187 - 0.032481*t8216 - 0.239842*t8239 + var1[1];
  p_output1[39]=t8257;
  p_output1[40]=t11474;
  p_output1[41]=t10053 + 0.285064*t10331 - 0.042173*t11068 - 0.240796*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[42]=t10053 + 0.284538*t10331 - 0.04673*t11068 - 0.238968*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[43]=t10053 + 0.283651*t10331 - 0.050421*t11068 - 0.235811*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[44]=t10053 + 0.2825*t10331 - 0.052848*t11068 - 0.231667*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[45]=t10053 + 0.281209*t10331 - 0.053747*t11068 - 0.226987*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[46]=t10053 + 0.279918*t10331 - 0.053021*t11068 - 0.222276*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[47]=t10053 + 0.278767*t10331 - 0.050749*t11068 - 0.218046*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[48]=t10053 + 0.277881*t10331 - 0.047176*t11068 - 0.214755*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[49]=t10053 + 0.277355*t10331 - 0.04269*t11068 - 0.212759*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[50]=t10053 + 0.277248*t10331 - 0.037777*t11068 - 0.212276*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[51]=t10053 + 0.277569*t10331 - 0.03297*t11068 - 0.213356*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[52]=t10053 + 0.278285*t10331 - 0.028789*t11068 - 0.215883*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[53]=t10053 + 0.279318*t10331 - 0.025687*t11068 - 0.219584*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[54]=t10053 + 0.280557*t10331 - 0.024001*t11068 - 0.224057*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[55]=t10053 + 0.281865*t10331 - 0.023913*t11068 - 0.228817*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[56]=t10053 + 0.283103*t10331 - 0.025433*t11068 - 0.233349*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[57]=t10053 + 0.284136*t10331 - 0.028396*t11068 - 0.237162*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[58]=t10053 + 0.284851*t10331 - 0.032481*t11068 - 0.239842*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[59]=t11474;
  p_output1[60]=t12188;
  p_output1[61]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.507004*t6778 - 0.043313*t6809 - 0.179796*t7091 + var1[0];
  p_output1[62]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.506478*t6778 - 0.047869*t6809 - 0.177968*t7091 + var1[0];
  p_output1[63]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.505591*t6778 - 0.051561*t6809 - 0.174811*t7091 + var1[0];
  p_output1[64]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.50444*t6778 - 0.053988*t6809 - 0.170667*t7091 + var1[0];
  p_output1[65]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.503149*t6778 - 0.054887*t6809 - 0.165987*t7091 + var1[0];
  p_output1[66]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.501858*t6778 - 0.054161*t6809 - 0.161276*t7091 + var1[0];
  p_output1[67]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.500707*t6778 - 0.051889*t6809 - 0.157046*t7091 + var1[0];
  p_output1[68]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.499821*t6778 - 0.048316*t6809 - 0.153755*t7091 + var1[0];
  p_output1[69]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.499295*t6778 - 0.04383*t6809 - 0.151759*t7091 + var1[0];
  p_output1[70]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.499188*t6778 - 0.038917*t6809 - 0.151276*t7091 + var1[0];
  p_output1[71]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.499509*t6778 - 0.03411*t6809 - 0.152356*t7091 + var1[0];
  p_output1[72]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.500225*t6778 - 0.029928*t6809 - 0.154883*t7091 + var1[0];
  p_output1[73]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.501258*t6778 - 0.026827*t6809 - 0.158584*t7091 + var1[0];
  p_output1[74]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.502497*t6778 - 0.025141*t6809 - 0.163057*t7091 + var1[0];
  p_output1[75]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.503805*t6778 - 0.025053*t6809 - 0.167817*t7091 + var1[0];
  p_output1[76]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.505043*t6778 - 0.026573*t6809 - 0.172349*t7091 + var1[0];
  p_output1[77]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.506076*t6778 - 0.029536*t6809 - 0.176162*t7091 + var1[0];
  p_output1[78]=t5255 + t5713 + t6199 + t6526 + t6669 + 0.506791*t6778 - 0.033621*t6809 - 0.178842*t7091 + var1[0];
  p_output1[79]=t12188;
  p_output1[80]=t12417;
  p_output1[81]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.507004*t8187 - 0.043313*t8216 - 0.179796*t8239 + var1[1];
  p_output1[82]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.506478*t8187 - 0.047869*t8216 - 0.177968*t8239 + var1[1];
  p_output1[83]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.505591*t8187 - 0.051561*t8216 - 0.174811*t8239 + var1[1];
  p_output1[84]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.50444*t8187 - 0.053988*t8216 - 0.170667*t8239 + var1[1];
  p_output1[85]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.503149*t8187 - 0.054887*t8216 - 0.165987*t8239 + var1[1];
  p_output1[86]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.501858*t8187 - 0.054161*t8216 - 0.161276*t8239 + var1[1];
  p_output1[87]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.500707*t8187 - 0.051889*t8216 - 0.157046*t8239 + var1[1];
  p_output1[88]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.499821*t8187 - 0.048316*t8216 - 0.153755*t8239 + var1[1];
  p_output1[89]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.499295*t8187 - 0.04383*t8216 - 0.151759*t8239 + var1[1];
  p_output1[90]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.499188*t8187 - 0.038917*t8216 - 0.151276*t8239 + var1[1];
  p_output1[91]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.499509*t8187 - 0.03411*t8216 - 0.152356*t8239 + var1[1];
  p_output1[92]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.500225*t8187 - 0.029928*t8216 - 0.154883*t8239 + var1[1];
  p_output1[93]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.501258*t8187 - 0.026827*t8216 - 0.158584*t8239 + var1[1];
  p_output1[94]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.502497*t8187 - 0.025141*t8216 - 0.163057*t8239 + var1[1];
  p_output1[95]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.503805*t8187 - 0.025053*t8216 - 0.167817*t8239 + var1[1];
  p_output1[96]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.505043*t8187 - 0.026573*t8216 - 0.172349*t8239 + var1[1];
  p_output1[97]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.506076*t8187 - 0.029536*t8216 - 0.176162*t8239 + var1[1];
  p_output1[98]=t7967 + t8110 + t8118 + t8147 + t8179 + 0.506791*t8187 - 0.033621*t8216 - 0.178842*t8239 + var1[1];
  p_output1[99]=t12417;
  p_output1[100]=t14450;
  p_output1[101]=t10053 + 0.507004*t10331 - 0.043313*t11068 - 0.179796*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[102]=t10053 + 0.506478*t10331 - 0.047869*t11068 - 0.177968*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[103]=t10053 + 0.505591*t10331 - 0.051561*t11068 - 0.174811*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[104]=t10053 + 0.50444*t10331 - 0.053988*t11068 - 0.170667*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[105]=t10053 + 0.503149*t10331 - 0.054887*t11068 - 0.165987*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[106]=t10053 + 0.501858*t10331 - 0.054161*t11068 - 0.161276*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[107]=t10053 + 0.500707*t10331 - 0.051889*t11068 - 0.157046*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[108]=t10053 + 0.499821*t10331 - 0.048316*t11068 - 0.153755*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[109]=t10053 + 0.499295*t10331 - 0.04383*t11068 - 0.151759*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[110]=t10053 + 0.499188*t10331 - 0.038917*t11068 - 0.151276*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[111]=t10053 + 0.499509*t10331 - 0.03411*t11068 - 0.152356*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[112]=t10053 + 0.500225*t10331 - 0.029928*t11068 - 0.154883*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[113]=t10053 + 0.501258*t10331 - 0.026827*t11068 - 0.158584*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[114]=t10053 + 0.502497*t10331 - 0.025141*t11068 - 0.163057*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[115]=t10053 + 0.503805*t10331 - 0.025053*t11068 - 0.167817*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[116]=t10053 + 0.505043*t10331 - 0.026573*t11068 - 0.172349*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[117]=t10053 + 0.506076*t10331 - 0.029536*t11068 - 0.176162*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[118]=t10053 + 0.506791*t10331 - 0.033621*t11068 - 0.178842*t11446 + t9102 + t9142 + t9230 + t9563 + var1[2];
  p_output1[119]=t14450;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_fr_thigh_to_fr_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_fr_thigh_to_fr_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
