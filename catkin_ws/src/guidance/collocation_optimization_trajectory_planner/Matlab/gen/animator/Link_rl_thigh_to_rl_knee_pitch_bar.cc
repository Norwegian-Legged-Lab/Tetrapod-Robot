/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 18:01:37 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1147;
  double t1168;
  double t1172;
  double t1228;
  double t198;
  double t721;
  double t767;
  double t829;
  double t1118;
  double t1122;
  double t1202;
  double t688;
  double t1658;
  double t1323;
  double t1964;
  double t2093;
  double t1513;
  double t2109;
  double t2052;
  double t2053;
  double t2067;
  double t2146;
  double t2149;
  double t2150;
  double t1928;
  double t2181;
  double t1972;
  double t2223;
  double t2229;
  double t1236;
  double t2168;
  double t933;
  double t1123;
  double t1138;
  double t1146;
  double t1190;
  double t1310;
  double t1319;
  double t1340;
  double t1344;
  double t1413;
  double t1544;
  double t1554;
  double t1597;
  double t1671;
  double t1869;
  double t1917;
  double t1938;
  double t1952;
  double t1991;
  double t2022;
  double t2040;
  double t2079;
  double t2081;
  double t2083;
  double t2101;
  double t2106;
  double t2116;
  double t2139;
  double t2145;
  double t2153;
  double t2177;
  double t2179;
  double t2188;
  double t2190;
  double t2192;
  double t2200;
  double t2204;
  double t2206;
  double t2234;
  double t2243;
  double t2268;
  double t2273;
  double t2276;
  double t2293;
  double t2314;
  double t2317;
  double t2334;
  double t2336;
  double t2367;
  double t2373;
  double t2381;
  double t2384;
  double t2392;
  double t2409;
  double t2214;
  double t2326;
  double t2449;
  double t2461;
  double t3143;
  double t3147;
  double t3146;
  double t3153;
  double t3154;
  double t3156;
  double t3158;
  double t3159;
  double t3162;
  double t3164;
  double t3168;
  double t3173;
  double t3176;
  double t3180;
  double t3145;
  double t3155;
  double t3160;
  double t3172;
  double t3191;
  double t3194;
  double t3195;
  double t3197;
  double t3201;
  double t3210;
  double t3212;
  double t3217;
  double t3218;
  double t3223;
  double t3224;
  double t3226;
  double t3228;
  double t3202;
  double t3222;
  double t3229;
  double t3230;
  double t3485;
  double t3495;
  double t3496;
  double t3506;
  double t3508;
  double t3510;
  double t3516;
  double t3520;
  double t3521;
  double t3533;
  double t3535;
  double t3536;
  double t3484;
  double t3502;
  double t3513;
  double t3523;
  double t3544;
  double t3546;
  double t3547;
  double t3550;
  double t3562;
  double t3565;
  double t3567;
  double t3570;
  double t3573;
  double t3577;
  double t3578;
  double t3579;
  double t3580;
  double t3564;
  double t3576;
  double t3581;
  double t3586;
  double t3743;
  double t3751;
  double t3752;
  double t3755;
  double t3938;
  double t3939;
  double t3941;
  double t3945;
  double t4117;
  double t4119;
  double t4120;
  double t4121;
  t1147 = Cos(var1[13]);
  t1168 = -1.*t1147;
  t1172 = 1. + t1168;
  t1228 = Sin(var1[13]);
  t198 = Cos(var1[4]);
  t721 = Cos(var1[12]);
  t767 = -1.*t721;
  t829 = 1. + t767;
  t1118 = Sin(var1[12]);
  t1122 = 0.15121*t1118;
  t1202 = 4.e-6*t1172;
  t688 = Cos(var1[5]);
  t1658 = Sin(var1[5]);
  t1323 = -2.8e-11*t1172;
  t1964 = 7.e-6*t1172;
  t2093 = -1.*t1228;
  t1513 = Sin(var1[4]);
  t2109 = -4.e-6*t1228;
  t2052 = -1.*t198*t688*t1118;
  t2053 = -1.*t721*t198*t1658;
  t2067 = t2052 + t2053;
  t2146 = t721*t198*t688;
  t2149 = -1.*t198*t1118*t1658;
  t2150 = t2146 + t2149;
  t1928 = -7.e-6*t1228;
  t2181 = -7.e-6*t1172;
  t1972 = 4.e-6*t1228;
  t2223 = -1. + t1147;
  t2229 = 4.e-6*t2223;
  t1236 = 7.e-6*t1228;
  t2168 = 2.8e-11*t1172;
  t933 = -0.15121*t829;
  t1123 = t933 + t1122;
  t1138 = t198*t688*t1123;
  t1146 = 5.856279999999999e-13*var1[13];
  t1190 = -0.0387489999948987*t1172;
  t1310 = t1202 + t1236;
  t1319 = -2.123459e-6*t1310;
  t1340 = t1323 + t1228;
  t1344 = -0.281209000004*t1340;
  t1413 = t1146 + t1190 + t1319 + t1344;
  t1544 = t1413*t1513;
  t1554 = 0.15121*t829;
  t1597 = t1554 + t1122;
  t1671 = -1.*t198*t1597*t1658;
  t1869 = -1.4640699999999997e-7*var1[13];
  t1917 = -1.38024835e-16*t1172;
  t1938 = t1202 + t1928;
  t1952 = -0.038748999993*t1938;
  t1991 = t1964 + t1972;
  t2022 = -0.281209000004*t1991;
  t2040 = t1869 + t1917 + t1952 + t2022;
  t2079 = t2040*t2067;
  t2081 = 1.0248489999999998e-12*var1[13];
  t2083 = -0.28120900000849935*t1172;
  t2101 = t1323 + t2093;
  t2106 = -0.038748999993*t2101;
  t2116 = t1964 + t2109;
  t2139 = -2.123459e-6*t2116;
  t2145 = t2081 + t2083 + t2106 + t2139;
  t2153 = t2145*t2150;
  t2177 = t2168 + t2093;
  t2179 = t2177*t1513;
  t2188 = t2181 + t2109;
  t2190 = t2188*t2067;
  t2192 = -1.000000000016*t1172;
  t2200 = 1. + t2192;
  t2204 = t2200*t2150;
  t2206 = t2179 + t2190 + t2204;
  t2234 = t2229 + t1928;
  t2243 = t2234*t1513;
  t2268 = -6.5e-11*t1172;
  t2273 = 1. + t2268;
  t2276 = t2273*t2067;
  t2293 = t2181 + t1972;
  t2314 = t2293*t2150;
  t2317 = t2243 + t2276 + t2314;
  t2334 = -1.000000000049*t1172;
  t2336 = 1. + t2334;
  t2367 = t2336*t1513;
  t2373 = t2229 + t1236;
  t2381 = t2373*t2067;
  t2384 = t2168 + t1228;
  t2392 = t2384*t2150;
  t2409 = t2367 + t2381 + t2392;
  t2214 = -0.278229*t2206;
  t2326 = 0.215888*t2317;
  t2449 = -0.048701*t2409;
  t2461 = var1[0] + t1138 + t1544 + t1671 + t2079 + t2153 + t2214 + t2326 + t2449;
  t3143 = Sin(var1[3]);
  t3147 = Cos(var1[3]);
  t3146 = t688*t3143*t1513;
  t3153 = t3147*t1658;
  t3154 = t3146 + t3153;
  t3156 = t3147*t688;
  t3158 = -1.*t3143*t1513*t1658;
  t3159 = t3156 + t3158;
  t3162 = -1.*t1118*t3154;
  t3164 = t721*t3159;
  t3168 = t3162 + t3164;
  t3173 = t721*t3154;
  t3176 = t1118*t3159;
  t3180 = t3173 + t3176;
  t3145 = -1.*t198*t1413*t3143;
  t3155 = t1123*t3154;
  t3160 = t1597*t3159;
  t3172 = t2040*t3168;
  t3191 = t2145*t3180;
  t3194 = -1.*t198*t2177*t3143;
  t3195 = t2188*t3168;
  t3197 = t2200*t3180;
  t3201 = t3194 + t3195 + t3197;
  t3210 = -1.*t198*t2234*t3143;
  t3212 = t2273*t3168;
  t3217 = t2293*t3180;
  t3218 = t3210 + t3212 + t3217;
  t3223 = -1.*t2336*t198*t3143;
  t3224 = t2373*t3168;
  t3226 = t2384*t3180;
  t3228 = t3223 + t3224 + t3226;
  t3202 = -0.278229*t3201;
  t3222 = 0.215888*t3218;
  t3229 = -0.048701*t3228;
  t3230 = var1[1] + t3145 + t3155 + t3160 + t3172 + t3191 + t3202 + t3222 + t3229;
  t3485 = -1.*t3147*t688*t1513;
  t3495 = t3143*t1658;
  t3496 = t3485 + t3495;
  t3506 = t688*t3143;
  t3508 = t3147*t1513*t1658;
  t3510 = t3506 + t3508;
  t3516 = -1.*t1118*t3496;
  t3520 = t721*t3510;
  t3521 = t3516 + t3520;
  t3533 = t721*t3496;
  t3535 = t1118*t3510;
  t3536 = t3533 + t3535;
  t3484 = t3147*t198*t1413;
  t3502 = t1123*t3496;
  t3513 = t1597*t3510;
  t3523 = t2040*t3521;
  t3544 = t2145*t3536;
  t3546 = t3147*t198*t2177;
  t3547 = t2188*t3521;
  t3550 = t2200*t3536;
  t3562 = t3546 + t3547 + t3550;
  t3565 = t3147*t198*t2234;
  t3567 = t2273*t3521;
  t3570 = t2293*t3536;
  t3573 = t3565 + t3567 + t3570;
  t3577 = t2336*t3147*t198;
  t3578 = t2373*t3521;
  t3579 = t2384*t3536;
  t3580 = t3577 + t3578 + t3579;
  t3564 = -0.278229*t3562;
  t3576 = 0.215888*t3573;
  t3581 = -0.048701*t3580;
  t3586 = var1[2] + t3484 + t3502 + t3513 + t3523 + t3544 + t3564 + t3576 + t3581;
  t3743 = -0.500168*t2206;
  t3751 = 0.154887*t2317;
  t3752 = -0.048875*t2409;
  t3755 = var1[0] + t1138 + t1544 + t1671 + t2079 + t2153 + t3743 + t3751 + t3752;
  t3938 = -0.500168*t3201;
  t3939 = 0.154887*t3218;
  t3941 = -0.048875*t3228;
  t3945 = var1[1] + t3145 + t3155 + t3160 + t3172 + t3191 + t3938 + t3939 + t3941;
  t4117 = -0.500168*t3562;
  t4119 = 0.154887*t3573;
  t4120 = -0.048875*t3580;
  t4121 = var1[2] + t3484 + t3502 + t3513 + t3523 + t3544 + t4117 + t4119 + t4120;
  p_output1[0]=t2461;
  p_output1[1]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.277537*t2206 + 0.213358*t2317 - 0.044517*t2409 + var1[0];
  p_output1[2]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.277243*t2206 + 0.212275*t2317 - 0.039709*t2409 + var1[0];
  p_output1[3]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.277379*t2206 + 0.212756*t2317 - 0.034796*t2409 + var1[0];
  p_output1[4]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.27793*t2206 + 0.214749*t2317 - 0.030312*t2409 + var1[0];
  p_output1[5]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.278837*t2206 + 0.218038*t2317 - 0.026743*t2409 + var1[0];
  p_output1[6]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.280001*t2206 + 0.222267*t2317 - 0.024474*t2409 + var1[0];
  p_output1[7]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.281296*t2206 + 0.226977*t2317 - 0.023753*t2409 + var1[0];
  p_output1[8]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.282582*t2206 + 0.231658*t2317 - 0.024656*t2409 + var1[0];
  p_output1[9]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.283719*t2206 + 0.235803*t2317 - 0.027087*t2409 + var1[0];
  p_output1[10]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.284585*t2206 + 0.238962*t2317 - 0.030782*t2409 + var1[0];
  p_output1[11]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.285084*t2206 + 0.240793*t2317 - 0.03534*t2409 + var1[0];
  p_output1[12]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.285164*t2206 + 0.241099*t2317 - 0.040268*t2409 + var1[0];
  p_output1[13]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.284816*t2206 + 0.239845*t2317 - 0.045031*t2409 + var1[0];
  p_output1[14]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.284077*t2206 + 0.237167*t2317 - 0.049114*t2409 + var1[0];
  p_output1[15]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.283027*t2206 + 0.233356*t2317 - 0.052073*t2409 + var1[0];
  p_output1[16]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.281781*t2206 + 0.228825*t2317 - 0.053589*t2409 + var1[0];
  p_output1[17]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.280472*t2206 + 0.224065*t2317 - 0.053497*t2409 + var1[0];
  p_output1[18]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.279244*t2206 + 0.219591*t2317 - 0.051806*t2409 + var1[0];
  p_output1[19]=t2461;
  p_output1[20]=t3230;
  p_output1[21]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.277537*t3201 + 0.213358*t3218 - 0.044517*t3228 + var1[1];
  p_output1[22]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.277243*t3201 + 0.212275*t3218 - 0.039709*t3228 + var1[1];
  p_output1[23]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.277379*t3201 + 0.212756*t3218 - 0.034796*t3228 + var1[1];
  p_output1[24]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.27793*t3201 + 0.214749*t3218 - 0.030312*t3228 + var1[1];
  p_output1[25]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.278837*t3201 + 0.218038*t3218 - 0.026743*t3228 + var1[1];
  p_output1[26]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.280001*t3201 + 0.222267*t3218 - 0.024474*t3228 + var1[1];
  p_output1[27]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.281296*t3201 + 0.226977*t3218 - 0.023753*t3228 + var1[1];
  p_output1[28]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.282582*t3201 + 0.231658*t3218 - 0.024656*t3228 + var1[1];
  p_output1[29]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.283719*t3201 + 0.235803*t3218 - 0.027087*t3228 + var1[1];
  p_output1[30]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.284585*t3201 + 0.238962*t3218 - 0.030782*t3228 + var1[1];
  p_output1[31]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.285084*t3201 + 0.240793*t3218 - 0.03534*t3228 + var1[1];
  p_output1[32]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.285164*t3201 + 0.241099*t3218 - 0.040268*t3228 + var1[1];
  p_output1[33]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.284816*t3201 + 0.239845*t3218 - 0.045031*t3228 + var1[1];
  p_output1[34]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.284077*t3201 + 0.237167*t3218 - 0.049114*t3228 + var1[1];
  p_output1[35]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.283027*t3201 + 0.233356*t3218 - 0.052073*t3228 + var1[1];
  p_output1[36]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.281781*t3201 + 0.228825*t3218 - 0.053589*t3228 + var1[1];
  p_output1[37]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.280472*t3201 + 0.224065*t3218 - 0.053497*t3228 + var1[1];
  p_output1[38]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.279244*t3201 + 0.219591*t3218 - 0.051806*t3228 + var1[1];
  p_output1[39]=t3230;
  p_output1[40]=t3586;
  p_output1[41]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.277537*t3562 + 0.213358*t3573 - 0.044517*t3580 + var1[2];
  p_output1[42]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.277243*t3562 + 0.212275*t3573 - 0.039709*t3580 + var1[2];
  p_output1[43]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.277379*t3562 + 0.212756*t3573 - 0.034796*t3580 + var1[2];
  p_output1[44]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.27793*t3562 + 0.214749*t3573 - 0.030312*t3580 + var1[2];
  p_output1[45]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.278837*t3562 + 0.218038*t3573 - 0.026743*t3580 + var1[2];
  p_output1[46]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.280001*t3562 + 0.222267*t3573 - 0.024474*t3580 + var1[2];
  p_output1[47]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.281296*t3562 + 0.226977*t3573 - 0.023753*t3580 + var1[2];
  p_output1[48]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.282582*t3562 + 0.231658*t3573 - 0.024656*t3580 + var1[2];
  p_output1[49]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.283719*t3562 + 0.235803*t3573 - 0.027087*t3580 + var1[2];
  p_output1[50]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.284585*t3562 + 0.238962*t3573 - 0.030782*t3580 + var1[2];
  p_output1[51]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.285084*t3562 + 0.240793*t3573 - 0.03534*t3580 + var1[2];
  p_output1[52]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.285164*t3562 + 0.241099*t3573 - 0.040268*t3580 + var1[2];
  p_output1[53]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.284816*t3562 + 0.239845*t3573 - 0.045031*t3580 + var1[2];
  p_output1[54]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.284077*t3562 + 0.237167*t3573 - 0.049114*t3580 + var1[2];
  p_output1[55]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.283027*t3562 + 0.233356*t3573 - 0.052073*t3580 + var1[2];
  p_output1[56]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.281781*t3562 + 0.228825*t3573 - 0.053589*t3580 + var1[2];
  p_output1[57]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.280472*t3562 + 0.224065*t3573 - 0.053497*t3580 + var1[2];
  p_output1[58]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.279244*t3562 + 0.219591*t3573 - 0.051806*t3580 + var1[2];
  p_output1[59]=t3586;
  p_output1[60]=t3755;
  p_output1[61]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.499476*t2206 + 0.152357*t2317 - 0.044691*t2409 + var1[0];
  p_output1[62]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.499182*t2206 + 0.151274*t2317 - 0.039883*t2409 + var1[0];
  p_output1[63]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.499318*t2206 + 0.151755*t2317 - 0.03497*t2409 + var1[0];
  p_output1[64]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.499869*t2206 + 0.153748*t2317 - 0.030486*t2409 + var1[0];
  p_output1[65]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.500776*t2206 + 0.157037*t2317 - 0.026916*t2409 + var1[0];
  p_output1[66]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.50194*t2206 + 0.161265*t2317 - 0.024648*t2409 + var1[0];
  p_output1[67]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.503235*t2206 + 0.165975*t2317 - 0.023926*t2409 + var1[0];
  p_output1[68]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.504521*t2206 + 0.170656*t2317 - 0.02483*t2409 + var1[0];
  p_output1[69]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.505659*t2206 + 0.174801*t2317 - 0.027261*t2409 + var1[0];
  p_output1[70]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.506524*t2206 + 0.17796*t2317 - 0.030956*t2409 + var1[0];
  p_output1[71]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.507024*t2206 + 0.179792*t2317 - 0.035514*t2409 + var1[0];
  p_output1[72]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.507104*t2206 + 0.180097*t2317 - 0.040442*t2409 + var1[0];
  p_output1[73]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.506756*t2206 + 0.178843*t2317 - 0.045205*t2409 + var1[0];
  p_output1[74]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.506016*t2206 + 0.176166*t2317 - 0.049288*t2409 + var1[0];
  p_output1[75]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.504967*t2206 + 0.172355*t2317 - 0.052247*t2409 + var1[0];
  p_output1[76]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.50372*t2206 + 0.167824*t2317 - 0.053763*t2409 + var1[0];
  p_output1[77]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.502412*t2206 + 0.163063*t2317 - 0.05367*t2409 + var1[0];
  p_output1[78]=t1138 + t1544 + t1671 + t2079 + t2153 - 0.501183*t2206 + 0.158589*t2317 - 0.05198*t2409 + var1[0];
  p_output1[79]=t3755;
  p_output1[80]=t3945;
  p_output1[81]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.499476*t3201 + 0.152357*t3218 - 0.044691*t3228 + var1[1];
  p_output1[82]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.499182*t3201 + 0.151274*t3218 - 0.039883*t3228 + var1[1];
  p_output1[83]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.499318*t3201 + 0.151755*t3218 - 0.03497*t3228 + var1[1];
  p_output1[84]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.499869*t3201 + 0.153748*t3218 - 0.030486*t3228 + var1[1];
  p_output1[85]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.500776*t3201 + 0.157037*t3218 - 0.026916*t3228 + var1[1];
  p_output1[86]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.50194*t3201 + 0.161265*t3218 - 0.024648*t3228 + var1[1];
  p_output1[87]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.503235*t3201 + 0.165975*t3218 - 0.023926*t3228 + var1[1];
  p_output1[88]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.504521*t3201 + 0.170656*t3218 - 0.02483*t3228 + var1[1];
  p_output1[89]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.505659*t3201 + 0.174801*t3218 - 0.027261*t3228 + var1[1];
  p_output1[90]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.506524*t3201 + 0.17796*t3218 - 0.030956*t3228 + var1[1];
  p_output1[91]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.507024*t3201 + 0.179792*t3218 - 0.035514*t3228 + var1[1];
  p_output1[92]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.507104*t3201 + 0.180097*t3218 - 0.040442*t3228 + var1[1];
  p_output1[93]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.506756*t3201 + 0.178843*t3218 - 0.045205*t3228 + var1[1];
  p_output1[94]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.506016*t3201 + 0.176166*t3218 - 0.049288*t3228 + var1[1];
  p_output1[95]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.504967*t3201 + 0.172355*t3218 - 0.052247*t3228 + var1[1];
  p_output1[96]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.50372*t3201 + 0.167824*t3218 - 0.053763*t3228 + var1[1];
  p_output1[97]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.502412*t3201 + 0.163063*t3218 - 0.05367*t3228 + var1[1];
  p_output1[98]=t3145 + t3155 + t3160 + t3172 + t3191 - 0.501183*t3201 + 0.158589*t3218 - 0.05198*t3228 + var1[1];
  p_output1[99]=t3945;
  p_output1[100]=t4121;
  p_output1[101]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.499476*t3562 + 0.152357*t3573 - 0.044691*t3580 + var1[2];
  p_output1[102]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.499182*t3562 + 0.151274*t3573 - 0.039883*t3580 + var1[2];
  p_output1[103]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.499318*t3562 + 0.151755*t3573 - 0.03497*t3580 + var1[2];
  p_output1[104]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.499869*t3562 + 0.153748*t3573 - 0.030486*t3580 + var1[2];
  p_output1[105]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.500776*t3562 + 0.157037*t3573 - 0.026916*t3580 + var1[2];
  p_output1[106]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.50194*t3562 + 0.161265*t3573 - 0.024648*t3580 + var1[2];
  p_output1[107]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.503235*t3562 + 0.165975*t3573 - 0.023926*t3580 + var1[2];
  p_output1[108]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.504521*t3562 + 0.170656*t3573 - 0.02483*t3580 + var1[2];
  p_output1[109]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.505659*t3562 + 0.174801*t3573 - 0.027261*t3580 + var1[2];
  p_output1[110]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.506524*t3562 + 0.17796*t3573 - 0.030956*t3580 + var1[2];
  p_output1[111]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.507024*t3562 + 0.179792*t3573 - 0.035514*t3580 + var1[2];
  p_output1[112]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.507104*t3562 + 0.180097*t3573 - 0.040442*t3580 + var1[2];
  p_output1[113]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.506756*t3562 + 0.178843*t3573 - 0.045205*t3580 + var1[2];
  p_output1[114]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.506016*t3562 + 0.176166*t3573 - 0.049288*t3580 + var1[2];
  p_output1[115]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.504967*t3562 + 0.172355*t3573 - 0.052247*t3580 + var1[2];
  p_output1[116]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.50372*t3562 + 0.167824*t3573 - 0.053763*t3580 + var1[2];
  p_output1[117]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.502412*t3562 + 0.163063*t3573 - 0.05367*t3580 + var1[2];
  p_output1[118]=t3484 + t3502 + t3513 + t3523 + t3544 - 0.501183*t3562 + 0.158589*t3573 - 0.05198*t3580 + var1[2];
  p_output1[119]=t4121;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_rl_thigh_to_rl_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_rl_thigh_to_rl_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
