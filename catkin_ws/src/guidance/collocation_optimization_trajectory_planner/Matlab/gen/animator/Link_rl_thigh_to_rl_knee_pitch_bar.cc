/*
 * Automatically Generated from Mathematica.
 * Fri 4 Feb 2022 15:52:03 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t2267;
  double t2294;
  double t2295;
  double t2314;
  double t723;
  double t888;
  double t2108;
  double t2194;
  double t2212;
  double t2219;
  double t2313;
  double t814;
  double t2449;
  double t2338;
  double t2540;
  double t2820;
  double t2397;
  double t3063;
  double t2803;
  double t2806;
  double t2808;
  double t3073;
  double t3081;
  double t3082;
  double t2498;
  double t3093;
  double t2614;
  double t3155;
  double t3157;
  double t2320;
  double t3087;
  double t2210;
  double t2247;
  double t2250;
  double t2252;
  double t2306;
  double t2331;
  double t2335;
  double t2343;
  double t2347;
  double t2378;
  double t2410;
  double t2421;
  double t2425;
  double t2472;
  double t2478;
  double t2484;
  double t2500;
  double t2529;
  double t2785;
  double t2797;
  double t2799;
  double t2811;
  double t2812;
  double t2818;
  double t2831;
  double t3058;
  double t3066;
  double t3071;
  double t3072;
  double t3086;
  double t3088;
  double t3092;
  double t3094;
  double t3097;
  double t3098;
  double t3099;
  double t3108;
  double t3109;
  double t3174;
  double t3188;
  double t3201;
  double t3238;
  double t3409;
  double t3428;
  double t3444;
  double t3492;
  double t3497;
  double t3506;
  double t3509;
  double t3515;
  double t3577;
  double t3611;
  double t3622;
  double t3658;
  double t3110;
  double t3494;
  double t3677;
  double t3694;
  double t4526;
  double t4551;
  double t4547;
  double t4559;
  double t4573;
  double t4575;
  double t4580;
  double t4583;
  double t4587;
  double t4591;
  double t4594;
  double t4597;
  double t4599;
  double t4603;
  double t4542;
  double t4574;
  double t4584;
  double t4595;
  double t4613;
  double t4614;
  double t4634;
  double t4635;
  double t4639;
  double t4647;
  double t4694;
  double t4699;
  double t4705;
  double t4740;
  double t4753;
  double t4754;
  double t4755;
  double t4643;
  double t4721;
  double t4777;
  double t4784;
  double t5484;
  double t5486;
  double t5488;
  double t5490;
  double t5514;
  double t5517;
  double t5528;
  double t5529;
  double t5534;
  double t5582;
  double t5583;
  double t5584;
  double t5483;
  double t5489;
  double t5518;
  double t5557;
  double t5588;
  double t5589;
  double t5590;
  double t5595;
  double t5614;
  double t5627;
  double t5631;
  double t5638;
  double t5641;
  double t5657;
  double t5664;
  double t5673;
  double t5677;
  double t5619;
  double t5646;
  double t5693;
  double t5694;
  double t6021;
  double t6022;
  double t6029;
  double t6031;
  double t6511;
  double t6514;
  double t6515;
  double t6521;
  double t6963;
  double t6965;
  double t6974;
  double t6982;
  t2267 = Cos(var1[13]);
  t2294 = -1.*t2267;
  t2295 = 1. + t2294;
  t2314 = Sin(var1[13]);
  t723 = Cos(var1[4]);
  t888 = Cos(var1[12]);
  t2108 = -1.*t888;
  t2194 = 1. + t2108;
  t2212 = Sin(var1[12]);
  t2219 = 0.15121*t2212;
  t2313 = 4.e-6*t2295;
  t814 = Cos(var1[5]);
  t2449 = Sin(var1[5]);
  t2338 = -2.8e-11*t2295;
  t2540 = 7.e-6*t2295;
  t2820 = -1.*t2314;
  t2397 = Sin(var1[4]);
  t3063 = -4.e-6*t2314;
  t2803 = -1.*t723*t814*t2212;
  t2806 = -1.*t888*t723*t2449;
  t2808 = t2803 + t2806;
  t3073 = t888*t723*t814;
  t3081 = -1.*t723*t2212*t2449;
  t3082 = t3073 + t3081;
  t2498 = -7.e-6*t2314;
  t3093 = -7.e-6*t2295;
  t2614 = 4.e-6*t2314;
  t3155 = -1. + t2267;
  t3157 = 4.e-6*t3155;
  t2320 = 7.e-6*t2314;
  t3087 = 2.8e-11*t2295;
  t2210 = -0.15121*t2194;
  t2247 = t2210 + t2219;
  t2250 = t723*t814*t2247;
  t2252 = 5.856279999999999e-13*var1[13];
  t2306 = -0.0387489999948987*t2295;
  t2331 = t2313 + t2320;
  t2335 = -2.123459e-6*t2331;
  t2343 = t2338 + t2314;
  t2347 = -0.281209000004*t2343;
  t2378 = t2252 + t2306 + t2335 + t2347;
  t2410 = t2378*t2397;
  t2421 = 0.15121*t2194;
  t2425 = t2421 + t2219;
  t2472 = -1.*t723*t2425*t2449;
  t2478 = -1.4640699999999997e-7*var1[13];
  t2484 = -1.38024835e-16*t2295;
  t2500 = t2313 + t2498;
  t2529 = -0.038748999993*t2500;
  t2785 = t2540 + t2614;
  t2797 = -0.281209000004*t2785;
  t2799 = t2478 + t2484 + t2529 + t2797;
  t2811 = t2799*t2808;
  t2812 = 1.0248489999999998e-12*var1[13];
  t2818 = -0.28120900000849935*t2295;
  t2831 = t2338 + t2820;
  t3058 = -0.038748999993*t2831;
  t3066 = t2540 + t3063;
  t3071 = -2.123459e-6*t3066;
  t3072 = t2812 + t2818 + t3058 + t3071;
  t3086 = t3072*t3082;
  t3088 = t3087 + t2820;
  t3092 = t3088*t2397;
  t3094 = t3093 + t3063;
  t3097 = t3094*t2808;
  t3098 = -1.000000000016*t2295;
  t3099 = 1. + t3098;
  t3108 = t3099*t3082;
  t3109 = t3092 + t3097 + t3108;
  t3174 = t3157 + t2498;
  t3188 = t3174*t2397;
  t3201 = -6.5e-11*t2295;
  t3238 = 1. + t3201;
  t3409 = t3238*t2808;
  t3428 = t3093 + t2614;
  t3444 = t3428*t3082;
  t3492 = t3188 + t3409 + t3444;
  t3497 = -1.000000000049*t2295;
  t3506 = 1. + t3497;
  t3509 = t3506*t2397;
  t3515 = t3157 + t2320;
  t3577 = t3515*t2808;
  t3611 = t3087 + t2314;
  t3622 = t3611*t3082;
  t3658 = t3509 + t3577 + t3622;
  t3110 = -0.277303*t3109;
  t3494 = 0.2125*t3492;
  t3677 = -0.041546*t3658;
  t3694 = var1[0] + t2250 + t2410 + t2472 + t2811 + t3086 + t3110 + t3494 + t3677;
  t4526 = Sin(var1[3]);
  t4551 = Cos(var1[3]);
  t4547 = t814*t4526*t2397;
  t4559 = t4551*t2449;
  t4573 = t4547 + t4559;
  t4575 = t4551*t814;
  t4580 = -1.*t4526*t2397*t2449;
  t4583 = t4575 + t4580;
  t4587 = -1.*t2212*t4573;
  t4591 = t888*t4583;
  t4594 = t4587 + t4591;
  t4597 = t888*t4573;
  t4599 = t2212*t4583;
  t4603 = t4597 + t4599;
  t4542 = -1.*t723*t2378*t4526;
  t4574 = t2247*t4573;
  t4584 = t2425*t4583;
  t4595 = t2799*t4594;
  t4613 = t3072*t4603;
  t4614 = -1.*t723*t3088*t4526;
  t4634 = t3094*t4594;
  t4635 = t3099*t4603;
  t4639 = t4614 + t4634 + t4635;
  t4647 = -1.*t723*t3174*t4526;
  t4694 = t3238*t4594;
  t4699 = t3428*t4603;
  t4705 = t4647 + t4694 + t4699;
  t4740 = -1.*t3506*t723*t4526;
  t4753 = t3515*t4594;
  t4754 = t3611*t4603;
  t4755 = t4740 + t4753 + t4754;
  t4643 = -0.277303*t4639;
  t4721 = 0.2125*t4705;
  t4777 = -0.041546*t4755;
  t4784 = var1[1] + t4542 + t4574 + t4584 + t4595 + t4613 + t4643 + t4721 + t4777;
  t5484 = -1.*t4551*t814*t2397;
  t5486 = t4526*t2449;
  t5488 = t5484 + t5486;
  t5490 = t814*t4526;
  t5514 = t4551*t2397*t2449;
  t5517 = t5490 + t5514;
  t5528 = -1.*t2212*t5488;
  t5529 = t888*t5517;
  t5534 = t5528 + t5529;
  t5582 = t888*t5488;
  t5583 = t2212*t5517;
  t5584 = t5582 + t5583;
  t5483 = t4551*t723*t2378;
  t5489 = t2247*t5488;
  t5518 = t2425*t5517;
  t5557 = t2799*t5534;
  t5588 = t3072*t5584;
  t5589 = t4551*t723*t3088;
  t5590 = t3094*t5534;
  t5595 = t3099*t5584;
  t5614 = t5589 + t5590 + t5595;
  t5627 = t4551*t723*t3174;
  t5631 = t3238*t5534;
  t5638 = t3428*t5584;
  t5641 = t5627 + t5631 + t5638;
  t5657 = t3506*t4551*t723;
  t5664 = t3515*t5534;
  t5673 = t3611*t5584;
  t5677 = t5657 + t5664 + t5673;
  t5619 = -0.277303*t5614;
  t5646 = 0.2125*t5641;
  t5693 = -0.041546*t5677;
  t5694 = var1[2] + t5483 + t5489 + t5518 + t5557 + t5588 + t5619 + t5646 + t5693;
  t6021 = -0.499242*t3109;
  t6022 = 0.151498*t3492;
  t6029 = -0.04172*t3658;
  t6031 = var1[0] + t2250 + t2410 + t2472 + t2811 + t3086 + t6021 + t6022 + t6029;
  t6511 = -0.499242*t4639;
  t6514 = 0.151498*t4705;
  t6515 = -0.04172*t4755;
  t6521 = var1[1] + t4542 + t4574 + t4584 + t4595 + t4613 + t6511 + t6514 + t6515;
  t6963 = -0.499242*t5614;
  t6965 = 0.151498*t5641;
  t6974 = -0.04172*t5677;
  t6982 = var1[2] + t5483 + t5489 + t5518 + t5557 + t5588 + t6963 + t6965 + t6974;
  p_output1[0]=t3694;
  p_output1[1]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.277277*t3109 + 0.212393*t3492 - 0.036609*t3658 + var1[0];
  p_output1[2]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.277678*t3109 + 0.213838*t3492 - 0.031905*t3658 + var1[0];
  p_output1[3]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.278462*t3109 + 0.216678*t3492 - 0.027942*t3658 + var1[0];
  p_output1[4]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.279543*t3109 + 0.220604*t3492 - 0.02515*t3658 + var1[0];
  p_output1[5]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.280805*t3109 + 0.225193*t3492 - 0.023832*t3658 + var1[0];
  p_output1[6]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.282111*t3109 + 0.229945*t3492 - 0.024131*t3658 + var1[0];
  p_output1[7]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.28332*t3109 + 0.234347*t3492 - 0.026014*t3658 + var1[0];
  p_output1[8]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.2843*t3109 + 0.237921*t3492 - 0.029277*t3658 + var1[0];
  p_output1[9]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.284945*t3109 + 0.240281*t3492 - 0.033566*t3658 + var1[0];
  p_output1[10]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.285185*t3109 + 0.241169*t3492 - 0.038418*t3658 + var1[0];
  p_output1[11]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.284995*t3109 + 0.240491*t3492 - 0.043305*t3658 + var1[0];
  p_output1[12]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.284395*t3109 + 0.238319*t3492 - 0.047699*t3658 + var1[0];
  p_output1[13]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.283449*t3109 + 0.234889*t3492 - 0.051123*t3658 + var1[0];
  p_output1[14]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.282261*t3109 + 0.230572*t3492 - 0.053206*t3658 + var1[0];
  p_output1[15]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.280959*t3109 + 0.225837*t3492 - 0.053723*t3658 + var1[0];
  p_output1[16]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.279685*t3109 + 0.221197*t3492 - 0.052617*t3658 + var1[0];
  p_output1[17]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.278575*t3109 + 0.217154*t3492 - 0.050008*t3658 + var1[0];
  p_output1[18]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.277752*t3109 + 0.214146*t3492 - 0.04618*t3658 + var1[0];
  p_output1[19]=t3694;
  p_output1[20]=t4784;
  p_output1[21]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.277277*t4639 + 0.212393*t4705 - 0.036609*t4755 + var1[1];
  p_output1[22]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.277678*t4639 + 0.213838*t4705 - 0.031905*t4755 + var1[1];
  p_output1[23]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.278462*t4639 + 0.216678*t4705 - 0.027942*t4755 + var1[1];
  p_output1[24]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.279543*t4639 + 0.220604*t4705 - 0.02515*t4755 + var1[1];
  p_output1[25]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.280805*t4639 + 0.225193*t4705 - 0.023832*t4755 + var1[1];
  p_output1[26]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.282111*t4639 + 0.229945*t4705 - 0.024131*t4755 + var1[1];
  p_output1[27]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.28332*t4639 + 0.234347*t4705 - 0.026014*t4755 + var1[1];
  p_output1[28]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.2843*t4639 + 0.237921*t4705 - 0.029277*t4755 + var1[1];
  p_output1[29]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.284945*t4639 + 0.240281*t4705 - 0.033566*t4755 + var1[1];
  p_output1[30]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.285185*t4639 + 0.241169*t4705 - 0.038418*t4755 + var1[1];
  p_output1[31]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.284995*t4639 + 0.240491*t4705 - 0.043305*t4755 + var1[1];
  p_output1[32]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.284395*t4639 + 0.238319*t4705 - 0.047699*t4755 + var1[1];
  p_output1[33]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.283449*t4639 + 0.234889*t4705 - 0.051123*t4755 + var1[1];
  p_output1[34]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.282261*t4639 + 0.230572*t4705 - 0.053206*t4755 + var1[1];
  p_output1[35]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.280959*t4639 + 0.225837*t4705 - 0.053723*t4755 + var1[1];
  p_output1[36]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.279685*t4639 + 0.221197*t4705 - 0.052617*t4755 + var1[1];
  p_output1[37]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.278575*t4639 + 0.217154*t4705 - 0.050008*t4755 + var1[1];
  p_output1[38]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.277752*t4639 + 0.214146*t4705 - 0.04618*t4755 + var1[1];
  p_output1[39]=t4784;
  p_output1[40]=t5694;
  p_output1[41]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.277277*t5614 + 0.212393*t5641 - 0.036609*t5677 + var1[2];
  p_output1[42]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.277678*t5614 + 0.213838*t5641 - 0.031905*t5677 + var1[2];
  p_output1[43]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.278462*t5614 + 0.216678*t5641 - 0.027942*t5677 + var1[2];
  p_output1[44]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.279543*t5614 + 0.220604*t5641 - 0.02515*t5677 + var1[2];
  p_output1[45]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.280805*t5614 + 0.225193*t5641 - 0.023832*t5677 + var1[2];
  p_output1[46]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.282111*t5614 + 0.229945*t5641 - 0.024131*t5677 + var1[2];
  p_output1[47]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.28332*t5614 + 0.234347*t5641 - 0.026014*t5677 + var1[2];
  p_output1[48]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.2843*t5614 + 0.237921*t5641 - 0.029277*t5677 + var1[2];
  p_output1[49]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.284945*t5614 + 0.240281*t5641 - 0.033566*t5677 + var1[2];
  p_output1[50]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.285185*t5614 + 0.241169*t5641 - 0.038418*t5677 + var1[2];
  p_output1[51]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.284995*t5614 + 0.240491*t5641 - 0.043305*t5677 + var1[2];
  p_output1[52]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.284395*t5614 + 0.238319*t5641 - 0.047699*t5677 + var1[2];
  p_output1[53]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.283449*t5614 + 0.234889*t5641 - 0.051123*t5677 + var1[2];
  p_output1[54]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.282261*t5614 + 0.230572*t5641 - 0.053206*t5677 + var1[2];
  p_output1[55]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.280959*t5614 + 0.225837*t5641 - 0.053723*t5677 + var1[2];
  p_output1[56]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.279685*t5614 + 0.221197*t5641 - 0.052617*t5677 + var1[2];
  p_output1[57]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.278575*t5614 + 0.217154*t5641 - 0.050008*t5677 + var1[2];
  p_output1[58]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.277752*t5614 + 0.214146*t5641 - 0.04618*t5677 + var1[2];
  p_output1[59]=t5694;
  p_output1[60]=t6031;
  p_output1[61]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.499217*t3109 + 0.151392*t3492 - 0.036783*t3658 + var1[0];
  p_output1[62]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.499618*t3109 + 0.152836*t3492 - 0.032079*t3658 + var1[0];
  p_output1[63]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.500401*t3109 + 0.155676*t3492 - 0.028116*t3658 + var1[0];
  p_output1[64]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.501483*t3109 + 0.159603*t3492 - 0.025324*t3658 + var1[0];
  p_output1[65]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.502745*t3109 + 0.164191*t3492 - 0.024006*t3658 + var1[0];
  p_output1[66]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.504051*t3109 + 0.168944*t3492 - 0.024305*t3658 + var1[0];
  p_output1[67]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.505259*t3109 + 0.173346*t3492 - 0.026188*t3658 + var1[0];
  p_output1[68]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.506239*t3109 + 0.17692*t3492 - 0.029451*t3658 + var1[0];
  p_output1[69]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.506884*t3109 + 0.179279*t3492 - 0.03374*t3658 + var1[0];
  p_output1[70]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.507125*t3109 + 0.180168*t3492 - 0.038591*t3658 + var1[0];
  p_output1[71]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.506934*t3109 + 0.179489*t3492 - 0.043479*t3658 + var1[0];
  p_output1[72]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.506334*t3109 + 0.177317*t3492 - 0.047872*t3658 + var1[0];
  p_output1[73]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.505389*t3109 + 0.173887*t3492 - 0.051296*t3658 + var1[0];
  p_output1[74]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.504201*t3109 + 0.169571*t3492 - 0.05338*t3658 + var1[0];
  p_output1[75]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.502899*t3109 + 0.164836*t3492 - 0.053896*t3658 + var1[0];
  p_output1[76]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.501624*t3109 + 0.160195*t3492 - 0.05279*t3658 + var1[0];
  p_output1[77]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.500515*t3109 + 0.156152*t3492 - 0.050182*t3658 + var1[0];
  p_output1[78]=t2250 + t2410 + t2472 + t2811 + t3086 - 0.499691*t3109 + 0.153144*t3492 - 0.046353*t3658 + var1[0];
  p_output1[79]=t6031;
  p_output1[80]=t6521;
  p_output1[81]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.499217*t4639 + 0.151392*t4705 - 0.036783*t4755 + var1[1];
  p_output1[82]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.499618*t4639 + 0.152836*t4705 - 0.032079*t4755 + var1[1];
  p_output1[83]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.500401*t4639 + 0.155676*t4705 - 0.028116*t4755 + var1[1];
  p_output1[84]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.501483*t4639 + 0.159603*t4705 - 0.025324*t4755 + var1[1];
  p_output1[85]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.502745*t4639 + 0.164191*t4705 - 0.024006*t4755 + var1[1];
  p_output1[86]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.504051*t4639 + 0.168944*t4705 - 0.024305*t4755 + var1[1];
  p_output1[87]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.505259*t4639 + 0.173346*t4705 - 0.026188*t4755 + var1[1];
  p_output1[88]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.506239*t4639 + 0.17692*t4705 - 0.029451*t4755 + var1[1];
  p_output1[89]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.506884*t4639 + 0.179279*t4705 - 0.03374*t4755 + var1[1];
  p_output1[90]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.507125*t4639 + 0.180168*t4705 - 0.038591*t4755 + var1[1];
  p_output1[91]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.506934*t4639 + 0.179489*t4705 - 0.043479*t4755 + var1[1];
  p_output1[92]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.506334*t4639 + 0.177317*t4705 - 0.047872*t4755 + var1[1];
  p_output1[93]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.505389*t4639 + 0.173887*t4705 - 0.051296*t4755 + var1[1];
  p_output1[94]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.504201*t4639 + 0.169571*t4705 - 0.05338*t4755 + var1[1];
  p_output1[95]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.502899*t4639 + 0.164836*t4705 - 0.053896*t4755 + var1[1];
  p_output1[96]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.501624*t4639 + 0.160195*t4705 - 0.05279*t4755 + var1[1];
  p_output1[97]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.500515*t4639 + 0.156152*t4705 - 0.050182*t4755 + var1[1];
  p_output1[98]=t4542 + t4574 + t4584 + t4595 + t4613 - 0.499691*t4639 + 0.153144*t4705 - 0.046353*t4755 + var1[1];
  p_output1[99]=t6521;
  p_output1[100]=t6982;
  p_output1[101]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.499217*t5614 + 0.151392*t5641 - 0.036783*t5677 + var1[2];
  p_output1[102]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.499618*t5614 + 0.152836*t5641 - 0.032079*t5677 + var1[2];
  p_output1[103]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.500401*t5614 + 0.155676*t5641 - 0.028116*t5677 + var1[2];
  p_output1[104]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.501483*t5614 + 0.159603*t5641 - 0.025324*t5677 + var1[2];
  p_output1[105]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.502745*t5614 + 0.164191*t5641 - 0.024006*t5677 + var1[2];
  p_output1[106]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.504051*t5614 + 0.168944*t5641 - 0.024305*t5677 + var1[2];
  p_output1[107]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.505259*t5614 + 0.173346*t5641 - 0.026188*t5677 + var1[2];
  p_output1[108]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.506239*t5614 + 0.17692*t5641 - 0.029451*t5677 + var1[2];
  p_output1[109]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.506884*t5614 + 0.179279*t5641 - 0.03374*t5677 + var1[2];
  p_output1[110]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.507125*t5614 + 0.180168*t5641 - 0.038591*t5677 + var1[2];
  p_output1[111]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.506934*t5614 + 0.179489*t5641 - 0.043479*t5677 + var1[2];
  p_output1[112]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.506334*t5614 + 0.177317*t5641 - 0.047872*t5677 + var1[2];
  p_output1[113]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.505389*t5614 + 0.173887*t5641 - 0.051296*t5677 + var1[2];
  p_output1[114]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.504201*t5614 + 0.169571*t5641 - 0.05338*t5677 + var1[2];
  p_output1[115]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.502899*t5614 + 0.164836*t5641 - 0.053896*t5677 + var1[2];
  p_output1[116]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.501624*t5614 + 0.160195*t5641 - 0.05279*t5677 + var1[2];
  p_output1[117]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.500515*t5614 + 0.156152*t5641 - 0.050182*t5677 + var1[2];
  p_output1[118]=t5483 + t5489 + t5518 + t5557 + t5588 - 0.499691*t5614 + 0.153144*t5641 - 0.046353*t5677 + var1[2];
  p_output1[119]=t6982;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_rl_thigh_to_rl_knee_pitch_bar.hh"

namespace SymFunction
{

void Link_rl_thigh_to_rl_knee_pitch_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
