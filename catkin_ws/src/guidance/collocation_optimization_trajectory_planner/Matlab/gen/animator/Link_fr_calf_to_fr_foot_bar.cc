/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 15:18:34 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1118;
  double t17;
  double t190;
  double t301;
  double t452;
  double t924;
  double t928;
  double t1151;
  double t1575;
  double t1887;
  double t2485;
  double t25;
  double t2776;
  double t2643;
  double t3457;
  double t3499;
  double t3518;
  double t3937;
  double t3951;
  double t3966;
  double t4167;
  double t4214;
  double t4240;
  double t4246;
  double t4515;
  double t4406;
  double t4411;
  double t4416;
  double t4420;
  double t4422;
  double t4428;
  double t4577;
  double t4609;
  double t4634;
  double t4745;
  double t4939;
  double t4951;
  double t4953;
  double t4956;
  double t4963;
  double t4992;
  double t900;
  double t964;
  double t1022;
  double t1025;
  double t1884;
  double t2167;
  double t2523;
  double t2589;
  double t2703;
  double t2764;
  double t2767;
  double t2780;
  double t2824;
  double t2859;
  double t3201;
  double t3254;
  double t3406;
  double t3519;
  double t3579;
  double t3600;
  double t3603;
  double t4087;
  double t4241;
  double t4247;
  double t4253;
  double t4436;
  double t4439;
  double t4490;
  double t4518;
  double t4551;
  double t4576;
  double t4848;
  double t4905;
  double t4910;
  double t4919;
  double t4926;
  double t4937;
  double t5025;
  double t5072;
  double t5076;
  double t5078;
  double t5120;
  double t5139;
  double t5145;
  double t5158;
  double t5183;
  double t5195;
  double t5235;
  double t5281;
  double t5294;
  double t5297;
  double t5298;
  double t5304;
  double t5308;
  double t5155;
  double t5245;
  double t5309;
  double t5318;
  double t5625;
  double t5628;
  double t5627;
  double t5629;
  double t5630;
  double t5635;
  double t5638;
  double t5639;
  double t5641;
  double t5642;
  double t5643;
  double t5645;
  double t5646;
  double t5647;
  double t5649;
  double t5650;
  double t5651;
  double t5652;
  double t5654;
  double t5655;
  double t5656;
  double t5657;
  double t5659;
  double t5660;
  double t5661;
  double t5662;
  double t5626;
  double t5631;
  double t5640;
  double t5644;
  double t5648;
  double t5653;
  double t5658;
  double t5663;
  double t5666;
  double t5667;
  double t5668;
  double t5669;
  double t5671;
  double t5672;
  double t5673;
  double t5674;
  double t5681;
  double t5682;
  double t5683;
  double t5684;
  double t5670;
  double t5677;
  double t5685;
  double t5686;
  double t5766;
  double t5767;
  double t5768;
  double t5770;
  double t5771;
  double t5772;
  double t5774;
  double t5775;
  double t5776;
  double t5778;
  double t5779;
  double t5780;
  double t5782;
  double t5783;
  double t5784;
  double t5785;
  double t5787;
  double t5788;
  double t5789;
  double t5790;
  double t5792;
  double t5793;
  double t5794;
  double t5795;
  double t5765;
  double t5769;
  double t5773;
  double t5777;
  double t5781;
  double t5786;
  double t5791;
  double t5796;
  double t5797;
  double t5798;
  double t5799;
  double t5800;
  double t5802;
  double t5803;
  double t5804;
  double t5805;
  double t5807;
  double t5808;
  double t5809;
  double t5810;
  double t5801;
  double t5806;
  double t5811;
  double t5812;
  double t5885;
  double t5886;
  double t5887;
  double t5888;
  double t5961;
  double t5962;
  double t5963;
  double t5964;
  double t6037;
  double t6038;
  double t6039;
  double t6040;
  t1118 = Cos(var1[10]);
  t17 = Cos(var1[4]);
  t190 = Cos(var1[9]);
  t301 = -1.*t190;
  t452 = 1. + t301;
  t924 = Sin(var1[9]);
  t928 = -0.15121*t924;
  t1151 = -1.*t1118;
  t1575 = 1. + t1151;
  t1887 = -1. + t1118;
  t2485 = Sin(var1[10]);
  t25 = Cos(var1[5]);
  t2776 = Sin(var1[5]);
  t2643 = Sin(var1[4]);
  t3457 = -1.*t17*t25*t924;
  t3499 = -1.*t190*t17*t2776;
  t3518 = t3457 + t3499;
  t3937 = t190*t17*t25;
  t3951 = -1.*t17*t924*t2776;
  t3966 = t3937 + t3951;
  t4167 = Cos(var1[11]);
  t4214 = -1.*t4167;
  t4240 = 1. + t4214;
  t4246 = Sin(var1[11]);
  t4515 = -1. + t4167;
  t4406 = t2485*t2643;
  t4411 = -4.e-6*t2485*t3518;
  t4416 = -1.000000000016*t1575;
  t4420 = 1. + t4416;
  t4422 = t4420*t3966;
  t4428 = t4406 + t4411 + t4422;
  t4577 = t1118*t2643;
  t4609 = 4.e-6*t1575*t3518;
  t4634 = -1.*t2485*t3966;
  t4745 = t4577 + t4609 + t4634;
  t4939 = 4.e-6*t1575*t2643;
  t4951 = 1.6e-11*t1887;
  t4953 = 1. + t4951;
  t4956 = t4953*t3518;
  t4963 = 4.e-6*t2485*t3966;
  t4992 = t4939 + t4956 + t4963;
  t900 = 0.15121*t452;
  t964 = t900 + t928;
  t1022 = t17*t25*t964;
  t1025 = -4.9936e-13*var1[10];
  t1884 = -0.038749*t1575;
  t2167 = 6.19984e-13*t1887;
  t2523 = -0.281210000004*t2485;
  t2589 = t1025 + t1884 + t2167 + t2523;
  t2703 = t2589*t2643;
  t2764 = -0.15121*t452;
  t2767 = t2764 + t928;
  t2780 = -1.*t17*t2767*t2776;
  t2824 = -1.2484e-7*var1[10];
  t2859 = 2.479936e-18*t1575;
  t3201 = -1.54996e-7*t1887;
  t3254 = 1.124840000016e-6*t2485;
  t3406 = t2824 + t2859 + t3201 + t3254;
  t3519 = t3406*t3518;
  t3579 = 0.281210000008499*t1575;
  t3600 = -0.03874900000062*t2485;
  t3603 = t3579 + t3600;
  t4087 = t3603*t3966;
  t4241 = 0.50315000001605*t4240;
  t4247 = -0.0398890000006382*t4246;
  t4253 = t4241 + t4247;
  t4436 = t4253*t4428;
  t4439 = -5.04e-14*var1[11];
  t4490 = -0.039889*t4240;
  t4518 = 6.38224e-13*t4515;
  t4551 = -0.503150000008*t4246;
  t4576 = t4439 + t4490 + t4518 + t4551;
  t4848 = t4576*t4745;
  t4905 = -1.26e-8*var1[11];
  t4910 = 2.552896e-18*t4240;
  t4919 = -1.59556e-7*t4515;
  t4926 = 2.012600000032e-6*t4246;
  t4937 = t4905 + t4910 + t4919 + t4926;
  t5025 = t4937*t4992;
  t5072 = 4.e-6*t4246*t4428;
  t5076 = 4.e-6*t4240*t4745;
  t5078 = 1.6e-11*t4515;
  t5120 = 1. + t5078;
  t5139 = t5120*t4992;
  t5145 = t5072 + t5076 + t5139;
  t5158 = -1.*t4246*t4428;
  t5183 = t4167*t4745;
  t5195 = 4.e-6*t4240*t4992;
  t5235 = t5158 + t5183 + t5195;
  t5281 = -1.000000000016*t4240;
  t5294 = 1. + t5281;
  t5297 = t5294*t4428;
  t5298 = t4246*t4745;
  t5304 = -4.e-6*t4246*t4992;
  t5308 = t5297 + t5298 + t5304;
  t5155 = -0.15894*t5145;
  t5245 = -0.053268*t5235;
  t5309 = 0.502708*t5308;
  t5318 = var1[0] + t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 + t5155 + t5245 + t5309;
  t5625 = Sin(var1[3]);
  t5628 = Cos(var1[3]);
  t5627 = t25*t5625*t2643;
  t5629 = t5628*t2776;
  t5630 = t5627 + t5629;
  t5635 = t5628*t25;
  t5638 = -1.*t5625*t2643*t2776;
  t5639 = t5635 + t5638;
  t5641 = -1.*t924*t5630;
  t5642 = t190*t5639;
  t5643 = t5641 + t5642;
  t5645 = t190*t5630;
  t5646 = t924*t5639;
  t5647 = t5645 + t5646;
  t5649 = -1.*t17*t2485*t5625;
  t5650 = -4.e-6*t2485*t5643;
  t5651 = t4420*t5647;
  t5652 = t5649 + t5650 + t5651;
  t5654 = -1.*t1118*t17*t5625;
  t5655 = 4.e-6*t1575*t5643;
  t5656 = -1.*t2485*t5647;
  t5657 = t5654 + t5655 + t5656;
  t5659 = -4.e-6*t1575*t17*t5625;
  t5660 = t4953*t5643;
  t5661 = 4.e-6*t2485*t5647;
  t5662 = t5659 + t5660 + t5661;
  t5626 = -1.*t17*t2589*t5625;
  t5631 = t964*t5630;
  t5640 = t2767*t5639;
  t5644 = t3406*t5643;
  t5648 = t3603*t5647;
  t5653 = t4253*t5652;
  t5658 = t4576*t5657;
  t5663 = t4937*t5662;
  t5666 = 4.e-6*t4246*t5652;
  t5667 = 4.e-6*t4240*t5657;
  t5668 = t5120*t5662;
  t5669 = t5666 + t5667 + t5668;
  t5671 = -1.*t4246*t5652;
  t5672 = t4167*t5657;
  t5673 = 4.e-6*t4240*t5662;
  t5674 = t5671 + t5672 + t5673;
  t5681 = t5294*t5652;
  t5682 = t4246*t5657;
  t5683 = -4.e-6*t4246*t5662;
  t5684 = t5681 + t5682 + t5683;
  t5670 = -0.15894*t5669;
  t5677 = -0.053268*t5674;
  t5685 = 0.502708*t5684;
  t5686 = var1[1] + t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 + t5670 + t5677 + t5685;
  t5766 = -1.*t5628*t25*t2643;
  t5767 = t5625*t2776;
  t5768 = t5766 + t5767;
  t5770 = t25*t5625;
  t5771 = t5628*t2643*t2776;
  t5772 = t5770 + t5771;
  t5774 = -1.*t924*t5768;
  t5775 = t190*t5772;
  t5776 = t5774 + t5775;
  t5778 = t190*t5768;
  t5779 = t924*t5772;
  t5780 = t5778 + t5779;
  t5782 = t5628*t17*t2485;
  t5783 = -4.e-6*t2485*t5776;
  t5784 = t4420*t5780;
  t5785 = t5782 + t5783 + t5784;
  t5787 = t1118*t5628*t17;
  t5788 = 4.e-6*t1575*t5776;
  t5789 = -1.*t2485*t5780;
  t5790 = t5787 + t5788 + t5789;
  t5792 = 4.e-6*t1575*t5628*t17;
  t5793 = t4953*t5776;
  t5794 = 4.e-6*t2485*t5780;
  t5795 = t5792 + t5793 + t5794;
  t5765 = t5628*t17*t2589;
  t5769 = t964*t5768;
  t5773 = t2767*t5772;
  t5777 = t3406*t5776;
  t5781 = t3603*t5780;
  t5786 = t4253*t5785;
  t5791 = t4576*t5790;
  t5796 = t4937*t5795;
  t5797 = 4.e-6*t4246*t5785;
  t5798 = 4.e-6*t4240*t5790;
  t5799 = t5120*t5795;
  t5800 = t5797 + t5798 + t5799;
  t5802 = -1.*t4246*t5785;
  t5803 = t4167*t5790;
  t5804 = 4.e-6*t4240*t5795;
  t5805 = t5802 + t5803 + t5804;
  t5807 = t5294*t5785;
  t5808 = t4246*t5790;
  t5809 = -4.e-6*t4246*t5795;
  t5810 = t5807 + t5808 + t5809;
  t5801 = -0.15894*t5800;
  t5806 = -0.053268*t5805;
  t5811 = 0.502708*t5810;
  t5812 = var1[2] + t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 + t5801 + t5806 + t5811;
  t5885 = -0.14194*t5145;
  t5886 = -0.054573*t5235;
  t5887 = 0.802705*t5308;
  t5888 = var1[0] + t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 + t5885 + t5886 + t5887;
  t5961 = -0.14194*t5669;
  t5962 = -0.054573*t5674;
  t5963 = 0.802705*t5684;
  t5964 = var1[1] + t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 + t5961 + t5962 + t5963;
  t6037 = -0.14194*t5800;
  t6038 = -0.054573*t5805;
  t6039 = 0.802705*t5810;
  t6040 = var1[2] + t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 + t6037 + t6038 + t6039;
  p_output1[0]=t5318;
  p_output1[1]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.15497*t5145 - 0.05034*t5235 + 0.502496*t5308 + var1[0];
  p_output1[2]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.152163*t5145 - 0.04628*t5235 + 0.502355*t5308 + var1[0];
  p_output1[3]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.150824*t5145 - 0.041528*t5235 + 0.502299*t5308 + var1[0];
  p_output1[4]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.151098*t5145 - 0.036598*t5235 + 0.502336*t5308 + var1[0];
  p_output1[5]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.152956*t5145 - 0.032024*t5235 + 0.502462*t5308 + var1[0];
  p_output1[6]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.156196*t5145 - 0.028303*t5235 + 0.502661*t5308 + var1[0];
  p_output1[7]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.160467*t5145 - 0.025838*t5235 + 0.502914*t5308 + var1[0];
  p_output1[8]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.165306*t5145 - 0.024895*t5235 + 0.503192*t5308 + var1[0];
  p_output1[9]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.170189*t5145 - 0.025577*t5235 + 0.503466*t5308 + var1[0];
  p_output1[10]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.174586*t5145 - 0.027811*t5235 + 0.503706*t5308 + var1[0];
  p_output1[11]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.178022*t5145 - 0.031353*t5235 + 0.503885*t5308 + var1[0];
  p_output1[12]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.180123*t5145 - 0.03582*t5235 + 0.503984*t5308 + var1[0];
  p_output1[13]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.180663*t5145 - 0.040728*t5235 + 0.503994*t5308 + var1[0];
  p_output1[14]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.179582*t5145 - 0.045546*t5235 + 0.503911*t5308 + var1[0];
  p_output1[15]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.176998*t5145 - 0.04975*t5235 + 0.503747*t5308 + var1[0];
  p_output1[16]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.173191*t5145 - 0.052886*t5235 + 0.503517*t5308 + var1[0];
  p_output1[17]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.168573*t5145 - 0.054614*t5235 + 0.503248*t5308 + var1[0];
  p_output1[18]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.163645*t5145 - 0.054746*t5235 + 0.502968*t5308 + var1[0];
  p_output1[19]=t5318;
  p_output1[20]=t5686;
  p_output1[21]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.15497*t5669 - 0.05034*t5674 + 0.502496*t5684 + var1[1];
  p_output1[22]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.152163*t5669 - 0.04628*t5674 + 0.502355*t5684 + var1[1];
  p_output1[23]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.150824*t5669 - 0.041528*t5674 + 0.502299*t5684 + var1[1];
  p_output1[24]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.151098*t5669 - 0.036598*t5674 + 0.502336*t5684 + var1[1];
  p_output1[25]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.152956*t5669 - 0.032024*t5674 + 0.502462*t5684 + var1[1];
  p_output1[26]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.156196*t5669 - 0.028303*t5674 + 0.502661*t5684 + var1[1];
  p_output1[27]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.160467*t5669 - 0.025838*t5674 + 0.502914*t5684 + var1[1];
  p_output1[28]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.165306*t5669 - 0.024895*t5674 + 0.503192*t5684 + var1[1];
  p_output1[29]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.170189*t5669 - 0.025577*t5674 + 0.503466*t5684 + var1[1];
  p_output1[30]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.174586*t5669 - 0.027811*t5674 + 0.503706*t5684 + var1[1];
  p_output1[31]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.178022*t5669 - 0.031353*t5674 + 0.503885*t5684 + var1[1];
  p_output1[32]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.180123*t5669 - 0.03582*t5674 + 0.503984*t5684 + var1[1];
  p_output1[33]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.180663*t5669 - 0.040728*t5674 + 0.503994*t5684 + var1[1];
  p_output1[34]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.179582*t5669 - 0.045546*t5674 + 0.503911*t5684 + var1[1];
  p_output1[35]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.176998*t5669 - 0.04975*t5674 + 0.503747*t5684 + var1[1];
  p_output1[36]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.173191*t5669 - 0.052886*t5674 + 0.503517*t5684 + var1[1];
  p_output1[37]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.168573*t5669 - 0.054614*t5674 + 0.503248*t5684 + var1[1];
  p_output1[38]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.163645*t5669 - 0.054746*t5674 + 0.502968*t5684 + var1[1];
  p_output1[39]=t5686;
  p_output1[40]=t5812;
  p_output1[41]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.15497*t5800 - 0.05034*t5805 + 0.502496*t5810 + var1[2];
  p_output1[42]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.152163*t5800 - 0.04628*t5805 + 0.502355*t5810 + var1[2];
  p_output1[43]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.150824*t5800 - 0.041528*t5805 + 0.502299*t5810 + var1[2];
  p_output1[44]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.151098*t5800 - 0.036598*t5805 + 0.502336*t5810 + var1[2];
  p_output1[45]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.152956*t5800 - 0.032024*t5805 + 0.502462*t5810 + var1[2];
  p_output1[46]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.156196*t5800 - 0.028303*t5805 + 0.502661*t5810 + var1[2];
  p_output1[47]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.160467*t5800 - 0.025838*t5805 + 0.502914*t5810 + var1[2];
  p_output1[48]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.165306*t5800 - 0.024895*t5805 + 0.503192*t5810 + var1[2];
  p_output1[49]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.170189*t5800 - 0.025577*t5805 + 0.503466*t5810 + var1[2];
  p_output1[50]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.174586*t5800 - 0.027811*t5805 + 0.503706*t5810 + var1[2];
  p_output1[51]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.178022*t5800 - 0.031353*t5805 + 0.503885*t5810 + var1[2];
  p_output1[52]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.180123*t5800 - 0.03582*t5805 + 0.503984*t5810 + var1[2];
  p_output1[53]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.180663*t5800 - 0.040728*t5805 + 0.503994*t5810 + var1[2];
  p_output1[54]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.179582*t5800 - 0.045546*t5805 + 0.503911*t5810 + var1[2];
  p_output1[55]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.176998*t5800 - 0.04975*t5805 + 0.503747*t5810 + var1[2];
  p_output1[56]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.173191*t5800 - 0.052886*t5805 + 0.503517*t5810 + var1[2];
  p_output1[57]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.168573*t5800 - 0.054614*t5805 + 0.503248*t5810 + var1[2];
  p_output1[58]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.163645*t5800 - 0.054746*t5805 + 0.502968*t5810 + var1[2];
  p_output1[59]=t5812;
  p_output1[60]=t5888;
  p_output1[61]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.13797*t5145 - 0.051646*t5235 + 0.802493*t5308 + var1[0];
  p_output1[62]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.135163*t5145 - 0.047586*t5235 + 0.802352*t5308 + var1[0];
  p_output1[63]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.133824*t5145 - 0.042833*t5235 + 0.802297*t5308 + var1[0];
  p_output1[64]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.134098*t5145 - 0.037903*t5235 + 0.802334*t5308 + var1[0];
  p_output1[65]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.135956*t5145 - 0.03333*t5235 + 0.802459*t5308 + var1[0];
  p_output1[66]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.139196*t5145 - 0.029609*t5235 + 0.802659*t5308 + var1[0];
  p_output1[67]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.143467*t5145 - 0.027143*t5235 + 0.802911*t5308 + var1[0];
  p_output1[68]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.148306*t5145 - 0.026201*t5235 + 0.80319*t5308 + var1[0];
  p_output1[69]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.153189*t5145 - 0.026883*t5235 + 0.803463*t5308 + var1[0];
  p_output1[70]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.157586*t5145 - 0.029116*t5235 + 0.803703*t5308 + var1[0];
  p_output1[71]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.161022*t5145 - 0.032658*t5235 + 0.803882*t5308 + var1[0];
  p_output1[72]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.163123*t5145 - 0.037126*t5235 + 0.803982*t5308 + var1[0];
  p_output1[73]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.163663*t5145 - 0.042034*t5235 + 0.803991*t5308 + var1[0];
  p_output1[74]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.162582*t5145 - 0.046851*t5235 + 0.803909*t5308 + var1[0];
  p_output1[75]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.159998*t5145 - 0.051056*t5235 + 0.803744*t5308 + var1[0];
  p_output1[76]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.156191*t5145 - 0.054192*t5235 + 0.803515*t5308 + var1[0];
  p_output1[77]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.151573*t5145 - 0.055919*t5235 + 0.803245*t5308 + var1[0];
  p_output1[78]=t1022 + t2703 + t2780 + t3519 + t4087 + t4436 + t4848 + t5025 - 0.146645*t5145 - 0.056051*t5235 + 0.802966*t5308 + var1[0];
  p_output1[79]=t5888;
  p_output1[80]=t5964;
  p_output1[81]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.13797*t5669 - 0.051646*t5674 + 0.802493*t5684 + var1[1];
  p_output1[82]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.135163*t5669 - 0.047586*t5674 + 0.802352*t5684 + var1[1];
  p_output1[83]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.133824*t5669 - 0.042833*t5674 + 0.802297*t5684 + var1[1];
  p_output1[84]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.134098*t5669 - 0.037903*t5674 + 0.802334*t5684 + var1[1];
  p_output1[85]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.135956*t5669 - 0.03333*t5674 + 0.802459*t5684 + var1[1];
  p_output1[86]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.139196*t5669 - 0.029609*t5674 + 0.802659*t5684 + var1[1];
  p_output1[87]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.143467*t5669 - 0.027143*t5674 + 0.802911*t5684 + var1[1];
  p_output1[88]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.148306*t5669 - 0.026201*t5674 + 0.80319*t5684 + var1[1];
  p_output1[89]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.153189*t5669 - 0.026883*t5674 + 0.803463*t5684 + var1[1];
  p_output1[90]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.157586*t5669 - 0.029116*t5674 + 0.803703*t5684 + var1[1];
  p_output1[91]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.161022*t5669 - 0.032658*t5674 + 0.803882*t5684 + var1[1];
  p_output1[92]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.163123*t5669 - 0.037126*t5674 + 0.803982*t5684 + var1[1];
  p_output1[93]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.163663*t5669 - 0.042034*t5674 + 0.803991*t5684 + var1[1];
  p_output1[94]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.162582*t5669 - 0.046851*t5674 + 0.803909*t5684 + var1[1];
  p_output1[95]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.159998*t5669 - 0.051056*t5674 + 0.803744*t5684 + var1[1];
  p_output1[96]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.156191*t5669 - 0.054192*t5674 + 0.803515*t5684 + var1[1];
  p_output1[97]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.151573*t5669 - 0.055919*t5674 + 0.803245*t5684 + var1[1];
  p_output1[98]=t5626 + t5631 + t5640 + t5644 + t5648 + t5653 + t5658 + t5663 - 0.146645*t5669 - 0.056051*t5674 + 0.802966*t5684 + var1[1];
  p_output1[99]=t5964;
  p_output1[100]=t6040;
  p_output1[101]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.13797*t5800 - 0.051646*t5805 + 0.802493*t5810 + var1[2];
  p_output1[102]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.135163*t5800 - 0.047586*t5805 + 0.802352*t5810 + var1[2];
  p_output1[103]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.133824*t5800 - 0.042833*t5805 + 0.802297*t5810 + var1[2];
  p_output1[104]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.134098*t5800 - 0.037903*t5805 + 0.802334*t5810 + var1[2];
  p_output1[105]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.135956*t5800 - 0.03333*t5805 + 0.802459*t5810 + var1[2];
  p_output1[106]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.139196*t5800 - 0.029609*t5805 + 0.802659*t5810 + var1[2];
  p_output1[107]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.143467*t5800 - 0.027143*t5805 + 0.802911*t5810 + var1[2];
  p_output1[108]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.148306*t5800 - 0.026201*t5805 + 0.80319*t5810 + var1[2];
  p_output1[109]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.153189*t5800 - 0.026883*t5805 + 0.803463*t5810 + var1[2];
  p_output1[110]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.157586*t5800 - 0.029116*t5805 + 0.803703*t5810 + var1[2];
  p_output1[111]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.161022*t5800 - 0.032658*t5805 + 0.803882*t5810 + var1[2];
  p_output1[112]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.163123*t5800 - 0.037126*t5805 + 0.803982*t5810 + var1[2];
  p_output1[113]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.163663*t5800 - 0.042034*t5805 + 0.803991*t5810 + var1[2];
  p_output1[114]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.162582*t5800 - 0.046851*t5805 + 0.803909*t5810 + var1[2];
  p_output1[115]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.159998*t5800 - 0.051056*t5805 + 0.803744*t5810 + var1[2];
  p_output1[116]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.156191*t5800 - 0.054192*t5805 + 0.803515*t5810 + var1[2];
  p_output1[117]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.151573*t5800 - 0.055919*t5805 + 0.803245*t5810 + var1[2];
  p_output1[118]=t5765 + t5769 + t5773 + t5777 + t5781 + t5786 + t5791 + t5796 - 0.146645*t5800 - 0.056051*t5805 + 0.802966*t5810 + var1[2];
  p_output1[119]=t6040;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_fr_calf_to_fr_foot_bar.hh"

namespace SymFunction
{

void Link_fr_calf_to_fr_foot_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
