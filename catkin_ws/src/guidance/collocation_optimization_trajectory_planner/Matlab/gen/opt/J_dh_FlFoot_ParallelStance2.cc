/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:11 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1031;
  double t1433;
  double t1586;
  double t259;
  double t501;
  double t730;
  double t816;
  double t822;
  double t927;
  double t2773;
  double t938;
  double t1548;
  double t1574;
  double t1944;
  double t2035;
  double t2660;
  double t111;
  double t3345;
  double t3628;
  double t3636;
  double t3637;
  double t3650;
  double t3687;
  double t3690;
  double t3763;
  double t2696;
  double t3699;
  double t3707;
  double t59;
  double t3773;
  double t3790;
  double t3796;
  double t3819;
  double t3712;
  double t3798;
  double t3802;
  double t14;
  double t3823;
  double t3834;
  double t3835;
  double t3849;
  double t3858;
  double t3865;
  double t3873;
  double t3874;
  double t3965;
  double t4095;
  double t4115;
  double t4116;
  double t4244;
  double t4259;
  double t4260;
  double t4287;
  double t4282;
  double t4332;
  double t4351;
  double t4375;
  double t4389;
  double t4403;
  double t4454;
  double t4455;
  double t4487;
  double t4504;
  double t4505;
  double t4510;
  double t4610;
  double t4611;
  double t4616;
  double t4624;
  double t4665;
  double t4668;
  double t4673;
  double t4676;
  double t4690;
  double t4704;
  double t4707;
  double t4712;
  double t4732;
  double t4745;
  double t4746;
  double t4748;
  double t4751;
  double t4558;
  double t4566;
  double t4570;
  double t4588;
  double t4595;
  double t4671;
  double t4744;
  double t4752;
  double t4754;
  double t4757;
  double t4761;
  double t4762;
  double t4770;
  double t4772;
  double t4773;
  double t4774;
  double t4355;
  double t4412;
  double t4416;
  double t4489;
  double t4516;
  double t4517;
  double t4518;
  double t4520;
  double t4522;
  double t4523;
  double t4528;
  double t4530;
  double t4582;
  double t4755;
  double t4776;
  double t4777;
  double t4787;
  double t4794;
  double t4795;
  double t4800;
  double t4822;
  double t4832;
  double t4838;
  double t4839;
  double t4840;
  double t4842;
  double t4844;
  double t4847;
  double t4854;
  double t4857;
  double t4860;
  double t4865;
  double t4869;
  double t4881;
  double t4884;
  double t4885;
  double t4937;
  double t4939;
  double t4940;
  double t4950;
  double t4953;
  double t5019;
  double t5021;
  double t5025;
  double t5029;
  double t5035;
  double t5037;
  double t5040;
  double t5043;
  double t4873;
  double t4874;
  double t4876;
  double t4914;
  double t4921;
  double t4930;
  double t4951;
  double t4955;
  double t4956;
  double t4957;
  double t5034;
  double t5048;
  double t5052;
  double t5053;
  double t5058;
  double t5059;
  double t5061;
  double t5062;
  double t5063;
  double t5105;
  double t5106;
  double t5112;
  double t4975;
  double t5076;
  double t5082;
  double t5121;
  double t5122;
  double t5124;
  double t4888;
  double t4896;
  double t4899;
  double t5177;
  double t5180;
  double t5186;
  double t5099;
  double t5101;
  double t5102;
  double t5114;
  double t5129;
  double t5131;
  double t5133;
  double t5220;
  double t5221;
  double t5222;
  double t5136;
  double t5115;
  double t5116;
  double t5119;
  double t5241;
  double t5243;
  double t5248;
  double t5219;
  double t5227;
  double t5214;
  double t5215;
  double t5216;
  double t5239;
  double t5251;
  double t5137;
  double t5141;
  double t5143;
  double t5304;
  double t5305;
  double t5306;
  double t5308;
  double t5309;
  double t5316;
  double t5317;
  double t5347;
  double t5349;
  double t5328;
  double t5329;
  double t5332;
  double t5333;
  double t5203;
  double t5208;
  double t5211;
  double t5354;
  double t5361;
  double t5362;
  double t5339;
  double t5341;
  double t5343;
  double t5394;
  double t5398;
  double t5261;
  double t5262;
  double t5263;
  double t5381;
  double t5383;
  double t5405;
  double t5406;
  double t5409;
  double t5400;
  double t5401;
  double t5402;
  double t5423;
  double t5424;
  double t5399;
  double t5404;
  double t5389;
  double t5390;
  double t5418;
  double t5426;
  double t5552;
  double t5553;
  double t5554;
  double t5542;
  double t5544;
  double t5546;
  double t5547;
  double t5549;
  double t5495;
  double t5497;
  double t5501;
  double t5503;
  double t5530;
  double t5533;
  double t5534;
  double t5537;
  double t5538;
  double t5540;
  double t5515;
  double t5516;
  double t5517;
  double t5519;
  double t5524;
  double t5526;
  double t5482;
  double t5485;
  double t5487;
  double t5506;
  double t5509;
  double t5511;
  double t5512;
  double t5556;
  double t5557;
  double t5558;
  double t5528;
  double t5555;
  double t5577;
  double t5580;
  double t5650;
  double t5651;
  double t5652;
  double t5643;
  double t5645;
  double t5646;
  double t5569;
  double t5571;
  double t5573;
  double t5574;
  double t5582;
  double t5585;
  double t5586;
  double t5607;
  double t5608;
  double t5609;
  double t5618;
  double t5619;
  double t5622;
  double t5602;
  double t5603;
  double t5617;
  double t5623;
  double t5624;
  double t5732;
  double t5733;
  double t5736;
  double t5738;
  double t5739;
  double t5740;
  double t5655;
  double t5662;
  double t5663;
  double t5666;
  double t5667;
  double t5669;
  double t5697;
  double t5700;
  double t5702;
  double t5712;
  double t5714;
  double t5716;
  double t5785;
  double t5786;
  double t5787;
  double t5770;
  double t5771;
  double t5772;
  double t5764;
  double t5765;
  double t5768;
  double t5794;
  double t5801;
  double t5804;
  double t5769;
  double t5788;
  double t5774;
  double t5776;
  double t5782;
  double t5816;
  double t5818;
  double t5819;
  double t5853;
  double t5858;
  double t5859;
  double t5812;
  double t5815;
  double t5838;
  double t5841;
  double t5842;
  double t5834;
  double t5835;
  double t5836;
  double t5868;
  double t5870;
  double t5872;
  double t5489;
  double t5490;
  double t5491;
  double t5927;
  double t5928;
  double t5934;
  double t5948;
  double t5950;
  double t5951;
  double t5954;
  double t5955;
  double t5956;
  double t5976;
  double t5977;
  double t5980;
  double t5984;
  double t5911;
  double t5912;
  double t5913;
  double t5947;
  double t5953;
  double t5958;
  double t5959;
  double t5965;
  double t5966;
  double t5969;
  double t5972;
  double t6039;
  double t6042;
  double t6044;
  double t6048;
  double t6050;
  double t6052;
  double t6054;
  double t6055;
  double t6056;
  double t6057;
  double t6058;
  double t6059;
  double t6061;
  double t5907;
  double t5908;
  double t5919;
  double t5921;
  double t5922;
  double t5637;
  double t5639;
  double t5640;
  double t5973;
  double t6018;
  double t6020;
  double t6111;
  double t6112;
  double t6113;
  double t6106;
  double t6108;
  double t6109;
  double t5996;
  double t6001;
  double t6003;
  double t6008;
  double t6022;
  double t6024;
  double t6086;
  double t6087;
  double t6088;
  double t6094;
  double t6096;
  double t6097;
  double t6080;
  double t6082;
  double t6083;
  double t6091;
  double t6099;
  double t6101;
  double t6140;
  double t6141;
  double t6144;
  double t6146;
  double t6147;
  double t6148;
  double t6124;
  double t6125;
  double t6126;
  double t6128;
  double t6131;
  double t6132;
  double t6166;
  double t6168;
  double t6173;
  double t6162;
  double t6163;
  double t6164;
  double t6190;
  double t6191;
  double t6192;
  double t6165;
  double t6210;
  double t6212;
  double t6214;
  double t6206;
  double t6208;
  double t6232;
  double t6235;
  double t6237;
  double t6223;
  double t6227;
  double t6230;
  double t6241;
  double t6249;
  double t6250;
  double t4210;
  double t4212;
  double t4215;
  double t5683;
  double t5684;
  double t5687;
  double t5562;
  double t5564;
  double t5565;
  double t6350;
  double t6357;
  double t6366;
  double t6367;
  double t5154;
  double t5155;
  double t5157;
  double t4437;
  double t4537;
  double t4551;
  double t6282;
  double t6285;
  double t6286;
  double t6421;
  double t6430;
  double t6422;
  double t6423;
  double t6424;
  double t6472;
  double t6475;
  double t6492;
  double t6497;
  double t6432;
  double t6433;
  double t6434;
  double t6482;
  double t6483;
  double t6484;
  double t6487;
  double t6488;
  double t6489;
  double t6567;
  double t6570;
  double t6578;
  double t6579;
  double t6623;
  double t6629;
  double t6659;
  double t6668;
  double t5885;
  double t5888;
  double t5891;
  double t6715;
  double t6722;
  double t5845;
  double t5846;
  double t5851;
  double t5604;
  double t5625;
  double t5628;
  double t6737;
  double t6743;
  double t6643;
  double t6646;
  double t6648;
  double t6824;
  double t6825;
  double t6826;
  double t6829;
  double t6830;
  double t6831;
  double t6833;
  double t6834;
  double t6837;
  double t6838;
  double t6839;
  double t6840;
  double t6842;
  double t6802;
  double t6681;
  double t6683;
  double t6685;
  double t6813;
  double t6817;
  double t6256;
  double t6258;
  double t6259;
  double t6875;
  double t6084;
  double t6102;
  double t6103;
  double t6892;
  double t6899;
  double t6390;
  double t6391;
  double t6393;
  double t6692;
  double t6695;
  double t6697;
  double t6652;
  double t6653;
  double t6654;
  double t6047;
  double t6969;
  double t6970;
  double t6971;
  double t6972;
  double t7001;
  double t7023;
  double t7066;
  double t7069;
  double t7002;
  double t7003;
  double t7004;
  double t7077;
  double t7079;
  double t7024;
  double t7025;
  double t7026;
  double t7057;
  double t7058;
  double t7059;
  double t7085;
  double t7086;
  double t7087;
  double t7143;
  double t7144;
  double t7152;
  double t7156;
  double t7206;
  double t7209;
  double t7223;
  double t7225;
  double t7261;
  double t7269;
  double t7278;
  double t7279;
  double t7198;
  double t7199;
  double t7202;
  double t7212;
  double t7215;
  double t7216;
  double t7339;
  double t7341;
  double t7342;
  double t7346;
  double t7349;
  double t7350;
  double t7351;
  double t7352;
  double t7353;
  double t7354;
  double t7356;
  double t7358;
  double t7360;
  double t7362;
  double t7364;
  double t7365;
  double t7366;
  double t7368;
  double t7369;
  double t7370;
  double t7232;
  double t7233;
  double t7234;
  double t7247;
  double t7248;
  double t7249;
  double t7316;
  double t7319;
  double t7326;
  double t7331;
  double t7430;
  double t7435;
  double t7442;
  double t7443;
  double t6990;
  double t6991;
  double t6992;
  t1031 = Cos(var1[7]);
  t1433 = -1. + t1031;
  t1586 = Sin(var1[8]);
  t259 = Cos(var1[8]);
  t501 = -1.*t259;
  t730 = 1. + t501;
  t816 = -1.000000000016*t730;
  t822 = 1. + t816;
  t927 = Sin(var1[7]);
  t2773 = Cos(var1[6]);
  t938 = -4.e-6*t822*t927;
  t1548 = 1.6e-11*t1433;
  t1574 = 1. + t1548;
  t1944 = -4.e-6*t1574*t1586;
  t2035 = -4.e-6*t1433*t1586;
  t2660 = t938 + t1944 + t2035;
  t111 = Sin(var1[6]);
  t3345 = -1.*t1031;
  t3628 = 1. + t3345;
  t3636 = -1.000000000016*t3628;
  t3637 = 1. + t3636;
  t3650 = t3637*t822;
  t3687 = -1.000000000016*t927*t1586;
  t3690 = t3650 + t3687;
  t3763 = Cos(var1[5]);
  t2696 = -1.*t111*t2660;
  t3699 = t2773*t3690;
  t3707 = t2696 + t3699;
  t59 = Sin(var1[5]);
  t3773 = t2773*t2660;
  t3790 = t111*t3690;
  t3796 = t3773 + t3790;
  t3819 = Cos(var1[3]);
  t3712 = t59*t3707;
  t3798 = t3763*t3796;
  t3802 = t3712 + t3798;
  t14 = Sin(var1[3]);
  t3823 = Cos(var1[4]);
  t3834 = -1.*t822*t927;
  t3835 = -1.6e-11*t1433*t1586;
  t3849 = -1.*t1031*t1586;
  t3858 = t3834 + t3835 + t3849;
  t3865 = t3823*t3858;
  t3873 = Sin(var1[4]);
  t3874 = t3763*t3707;
  t3965 = -1.*t59*t3796;
  t4095 = t3874 + t3965;
  t4115 = -1.*t3873*t4095;
  t4116 = t3865 + t4115;
  t4244 = -1.*t3873*t3858;
  t4259 = -1.*t3823*t4095;
  t4260 = t4244 + t4259;
  t4287 = -1. + t259;
  t4282 = 1.6e-11*t730;
  t4332 = 1.6e-11*t4287;
  t4351 = 1. + t4282 + t4332;
  t4375 = 4.e-6*t4287;
  t4389 = -4.e-6*t259;
  t4403 = t4375 + t4389;
  t4454 = t1574*t4351;
  t4455 = 4.e-6*t1433*t4403;
  t4487 = t4454 + t4455;
  t4504 = 4.e-6*t4351*t927;
  t4505 = t4403*t927;
  t4510 = t4504 + t4505;
  t4610 = 5.136e-14*var1[8];
  t4611 = -0.03874900000062*t730;
  t4616 = 5.9484e-7*t4287;
  t4624 = -0.03875*t259;
  t4665 = -0.299999999992*t1586;
  t4668 = t4610 + t4611 + t4616 + t4624 + t4665;
  t4673 = -1.284e-8*var1[8];
  t4676 = 1. + t4332;
  t4690 = 0.14871*t4676;
  t4704 = -1.5499600000248e-7*t730;
  t4707 = -1.55e-7*t4287;
  t4712 = -1.199999999968e-6*t1586;
  t4732 = t4673 + t4690 + t4704 + t4707 + t4712;
  t4745 = 0.80321*t822;
  t4746 = 0.503210000016051*t730;
  t4748 = -4.05159380016e-7*t1586;
  t4751 = t4745 + t4746 + t4748;
  t4558 = -1.*t2773;
  t4566 = 1. + t4558;
  t4570 = 0.15121*t4566;
  t4588 = 0.281210000008499*t3628;
  t4595 = 0.03874900000062*t927;
  t4671 = t927*t4668;
  t4744 = 4.e-6*t927*t4732;
  t4752 = t3637*t4751;
  t4754 = t4588 + t4595 + t4671 + t4744 + t4752;
  t4757 = -1.2484e-7*var1[7];
  t4761 = -1.5499600000248e-7*t3628;
  t4762 = 1.124840000016e-6*t927;
  t4770 = 4.e-6*t1433*t4668;
  t4772 = t1574*t4732;
  t4773 = -4.e-6*t927*t4751;
  t4774 = t4757 + t4761 + t4762 + t4770 + t4772 + t4773;
  t4355 = 4.e-6*t1433*t4351;
  t4412 = t1031*t4403;
  t4416 = t4355 + t4412;
  t4489 = -1.*t4487*t111;
  t4516 = t2773*t4510;
  t4517 = t4489 + t4516;
  t4518 = t3763*t4517;
  t4520 = t2773*t4487;
  t4522 = t111*t4510;
  t4523 = t4520 + t4522;
  t4528 = -1.*t59*t4523;
  t4530 = t4518 + t4528;
  t4582 = -0.15121*t111;
  t4755 = t111*t4754;
  t4776 = t2773*t4774;
  t4777 = t4570 + t4582 + t4755 + t4776;
  t4787 = -1.*t59*t4777;
  t4794 = 0.15121*t111;
  t4795 = t2773*t4754;
  t4800 = -1.*t111*t4774;
  t4822 = t4570 + t4794 + t4795 + t4800;
  t4832 = t3763*t4822;
  t4838 = t4787 + t4832;
  t4839 = -1.*t3873*t4838;
  t4840 = 4.9936e-13*var1[7];
  t4842 = -0.03874900000062*t3628;
  t4844 = 0.281210000004*t927;
  t4847 = t1031*t4668;
  t4854 = 4.e-6*t1433*t4732;
  t4857 = -1.*t927*t4751;
  t4860 = t4840 + t4842 + t4844 + t4847 + t4854 + t4857;
  t4865 = t3823*t4860;
  t4869 = t4839 + t4865;
  t4881 = t3823*t4416;
  t4884 = -1.*t3873*t4530;
  t4885 = t4881 + t4884;
  t4937 = -1. + t4282;
  t4939 = 4.e-6*t4937;
  t4940 = 4.e-6*t730;
  t4950 = t4939 + t4940;
  t4953 = t4282 + t501;
  t5019 = 4.e-6*t4950*t927;
  t5021 = t4953*t927;
  t5025 = -1.000000000016*t3637*t1586;
  t5029 = t5019 + t5021 + t5025;
  t5035 = t1574*t4950;
  t5037 = 4.e-6*t1433*t4953;
  t5040 = 4.000000000064e-6*t927*t1586;
  t5043 = t5035 + t5037 + t5040;
  t4873 = t4416*t3873;
  t4874 = t3823*t4530;
  t4876 = t4873 + t4874;
  t4914 = t3823*t4838;
  t4921 = t3873*t4860;
  t4930 = t4914 + t4921;
  t4951 = 4.e-6*t1433*t4950;
  t4955 = t1031*t4953;
  t4956 = 1.000000000016*t927*t1586;
  t4957 = t4951 + t4955 + t4956;
  t5034 = t111*t5029;
  t5048 = t2773*t5043;
  t5052 = t5034 + t5048;
  t5053 = -1.*t59*t5052;
  t5058 = t2773*t5029;
  t5059 = -1.*t111*t5043;
  t5061 = t5058 + t5059;
  t5062 = t3763*t5061;
  t5063 = t5053 + t5062;
  t5105 = t3763*t4777;
  t5106 = t59*t4822;
  t5112 = t5105 + t5106;
  t4975 = t3873*t4957;
  t5076 = t3823*t5063;
  t5082 = t4975 + t5076;
  t5121 = t3823*t4957;
  t5122 = -1.*t3873*t5063;
  t5124 = t5121 + t5122;
  t4888 = -1.*t3823*t4838;
  t4896 = -1.*t3873*t4860;
  t4899 = t4888 + t4896;
  t5177 = -1.*t59*t3707;
  t5180 = -1.*t3763*t3796;
  t5186 = t5177 + t5180;
  t5099 = t59*t4517;
  t5101 = t3763*t4523;
  t5102 = t5099 + t5101;
  t5114 = t5102*t5112;
  t5129 = t3763*t5052;
  t5131 = t59*t5061;
  t5133 = t5129 + t5131;
  t5220 = -1.*t3763*t4777;
  t5221 = -1.*t59*t4822;
  t5222 = t5220 + t5221;
  t5136 = -1.*t5112*t5133;
  t5115 = t4885*t4869;
  t5116 = t4876*t4930;
  t5119 = t5114 + t5115 + t5116;
  t5241 = -1.*t3763*t5052;
  t5243 = -1.*t59*t5061;
  t5248 = t5241 + t5243;
  t5219 = t5102*t4838;
  t5227 = t4530*t5112;
  t5214 = -1.*t59*t4517;
  t5215 = -1.*t3763*t4523;
  t5216 = t5214 + t5215;
  t5239 = -1.*t5112*t5063;
  t5251 = -1.*t4838*t5133;
  t5137 = -1.*t4930*t5082;
  t5141 = -1.*t4869*t5124;
  t5143 = t5136 + t5137 + t5141;
  t5304 = -1.*t2773*t2660;
  t5305 = -1.*t111*t3690;
  t5306 = t5304 + t5305;
  t5308 = t3763*t5306;
  t5309 = t5177 + t5308;
  t5316 = t59*t5306;
  t5317 = t3874 + t5316;
  t5347 = -0.15121*t2773;
  t5349 = t5347 + t4794 + t4795 + t4800;
  t5328 = 0.15121*t2773;
  t5329 = -1.*t111*t4754;
  t5332 = -1.*t2773*t4774;
  t5333 = t5328 + t4794 + t5329 + t5332;
  t5203 = t4530*t4838;
  t5208 = t4416*t4860;
  t5211 = t5203 + t5114 + t5208;
  t5354 = -1.*t111*t5029;
  t5361 = -1.*t2773*t5043;
  t5362 = t5354 + t5361;
  t5339 = -1.*t2773*t4487;
  t5341 = -1.*t111*t4510;
  t5343 = t5339 + t5341;
  t5394 = t59*t5343;
  t5398 = t4518 + t5394;
  t5261 = -1.*t4860*t4957;
  t5262 = -1.*t4838*t5063;
  t5263 = t5261 + t5262 + t5136;
  t5381 = t59*t5362;
  t5383 = t5381 + t5062;
  t5405 = t3763*t5333;
  t5406 = -1.*t59*t5349;
  t5409 = t5405 + t5406;
  t5400 = t59*t5333;
  t5401 = t3763*t5349;
  t5402 = t5400 + t5401;
  t5423 = t3763*t5362;
  t5424 = t5423 + t5243;
  t5399 = t5398*t5112;
  t5404 = t5102*t5402;
  t5389 = t3763*t5343;
  t5390 = t5214 + t5389;
  t5418 = -1.*t5112*t5383;
  t5426 = -1.*t5402*t5133;
  t5552 = -4.e-6*t4351*t927;
  t5553 = -1.*t4403*t927;
  t5554 = t5552 + t5553;
  t5542 = 0.03874900000062*t1031;
  t5544 = 0.281210000008499*t927;
  t5546 = 4.e-6*t1031*t4732;
  t5547 = -1.000000000016*t927*t4751;
  t5549 = t5542 + t5544 + t4847 + t5546 + t5547;
  t5495 = -4.e-6*t4950*t927;
  t5497 = -1.*t4953*t927;
  t5501 = 1.000000000016*t1031*t1586;
  t5503 = t5495 + t5497 + t5501;
  t5530 = 1.124840000016e-6*t1031;
  t5533 = -1.5499600000248e-7*t927;
  t5534 = -4.e-6*t927*t4668;
  t5537 = -1.6e-11*t927*t4732;
  t5538 = -4.e-6*t1031*t4751;
  t5540 = -1.2484e-7 + t5530 + t5533 + t5534 + t5537 + t5538;
  t5515 = 0.281210000004*t1031;
  t5516 = -0.03874900000062*t927;
  t5517 = -1.*t927*t4668;
  t5519 = -4.e-6*t927*t4732;
  t5524 = -1.*t1031*t4751;
  t5526 = 4.9936e-13 + t5515 + t5516 + t5517 + t5519 + t5524;
  t5482 = -1.000000000016*t822*t927;
  t5485 = -1.000000000016*t1031*t1586;
  t5487 = t5482 + t5485;
  t5506 = -4.e-6*t1031*t822;
  t5509 = t5506 + t5040;
  t5511 = 4.e-6*t1031*t4351;
  t5512 = t5511 + t4412;
  t5556 = -1.6e-11*t4351*t927;
  t5557 = -4.e-6*t4403*t927;
  t5558 = t5556 + t5557;
  t5528 = t4416*t5526;
  t5555 = t5554*t4860;
  t5577 = -1.*t4860*t5503;
  t5580 = -1.*t5526*t4957;
  t5650 = t2773*t5540;
  t5651 = t111*t5549;
  t5652 = t5650 + t5651;
  t5643 = -1.*t111*t5540;
  t5645 = t2773*t5549;
  t5646 = t5643 + t5645;
  t5569 = -1.6e-11*t4950*t927;
  t5571 = -4.e-6*t4953*t927;
  t5573 = 4.000000000064e-6*t1031*t1586;
  t5574 = t5569 + t5571 + t5573;
  t5582 = 4.e-6*t1031*t4950;
  t5585 = 1.000000000032*t927*t1586;
  t5586 = t5582 + t4955 + t5585;
  t5607 = t111*t5487;
  t5608 = t2773*t5509;
  t5609 = t5607 + t5608;
  t5618 = t2773*t5487;
  t5619 = -1.*t111*t5509;
  t5622 = t5618 + t5619;
  t5602 = -1.*t1031*t822;
  t5603 = t5602 + t4956;
  t5617 = -1.*t59*t5609;
  t5623 = t3763*t5622;
  t5624 = t5617 + t5623;
  t5732 = t3763*t5609;
  t5733 = t59*t5622;
  t5736 = t5732 + t5733;
  t5738 = t3823*t5603;
  t5739 = -1.*t3873*t5624;
  t5740 = t5738 + t5739;
  t5655 = t5512*t111;
  t5662 = t2773*t5558;
  t5663 = t5655 + t5662;
  t5666 = t2773*t5512;
  t5667 = -1.*t111*t5558;
  t5669 = t5666 + t5667;
  t5697 = -1.*t111*t5574;
  t5700 = t2773*t5586;
  t5702 = t5697 + t5700;
  t5712 = t2773*t5574;
  t5714 = t111*t5586;
  t5716 = t5712 + t5714;
  t5785 = t3763*t5663;
  t5786 = t59*t5669;
  t5787 = t5785 + t5786;
  t5770 = t3763*t5646;
  t5771 = -1.*t59*t5652;
  t5772 = t5770 + t5771;
  t5764 = t59*t5646;
  t5765 = t3763*t5652;
  t5768 = t5764 + t5765;
  t5794 = t59*t5702;
  t5801 = t3763*t5716;
  t5804 = t5794 + t5801;
  t5769 = t5102*t5768;
  t5788 = t5787*t5112;
  t5774 = -1.*t59*t5663;
  t5776 = t3763*t5669;
  t5782 = t5774 + t5776;
  t5816 = t3763*t5702;
  t5818 = -1.*t59*t5716;
  t5819 = t5816 + t5818;
  t5853 = t3873*t5554;
  t5858 = t3823*t5782;
  t5859 = t5853 + t5858;
  t5812 = -1.*t5768*t5133;
  t5815 = -1.*t5112*t5804;
  t5838 = t3823*t5772;
  t5841 = t3873*t5526;
  t5842 = t5838 + t5841;
  t5834 = -1.*t3873*t5772;
  t5835 = t3823*t5526;
  t5836 = t5834 + t5835;
  t5868 = t3873*t5503;
  t5870 = t3823*t5819;
  t5872 = t5868 + t5870;
  t5489 = t4510*t4754;
  t5490 = t4487*t4774;
  t5491 = t5489 + t5208 + t5490;
  t5927 = -4.05159380016e-7*t259;
  t5928 = -0.2999999999968*t1586;
  t5934 = t5927 + t5928;
  t5948 = -1.199999999968e-6*t259;
  t5950 = 1.620637520064e-12*t1586;
  t5951 = -1.284e-8 + t5948 + t5950;
  t5954 = -0.299999999992*t259;
  t5955 = 4.05159380016e-7*t1586;
  t5956 = 5.136e-14 + t5954 + t5955;
  t5976 = t3637*t5934;
  t5977 = 4.e-6*t927*t5951;
  t5980 = t927*t5956;
  t5984 = t5976 + t5977 + t5980;
  t5911 = 1.000000000016*t259*t927;
  t5912 = 1.6000000000256e-11*t1433*t1586;
  t5913 = t5911 + t5912 + t5501;
  t5947 = -4.e-6*t927*t5934;
  t5953 = t1574*t5951;
  t5958 = 4.e-6*t1433*t5956;
  t5959 = t5947 + t5953 + t5958;
  t5965 = -1.*t927*t5934;
  t5966 = 4.e-6*t1433*t5951;
  t5969 = t1031*t5956;
  t5972 = t5965 + t5966 + t5969;
  t6039 = t4351*t5951;
  t6042 = t4403*t5956;
  t6044 = t6039 + t6042;
  t6048 = t4403*t4668;
  t6050 = t4351*t4732;
  t6052 = t6048 + t6050;
  t6054 = 1.000000000016*t259*t4751;
  t6055 = -1.*t4950*t5951;
  t6056 = -1.*t4953*t5956;
  t6057 = 1.000000000016*t5934*t1586;
  t6058 = -1.000000000016*t4668*t1586;
  t6059 = -4.000000000064e-6*t4732*t1586;
  t6061 = t6054 + t6055 + t6056 + t6057 + t6058 + t6059;
  t5907 = -1.000000000016*t259*t927;
  t5908 = t5907 + t5025;
  t5919 = -4.e-6*t1574*t259;
  t5921 = -4.e-6*t1433*t259;
  t5922 = t5919 + t5921 + t5040;
  t5637 = t4523*t4777;
  t5639 = t4517*t4822;
  t5640 = t5637 + t5639 + t5208;
  t5973 = t4416*t5972;
  t6018 = -1.*t4860*t5913;
  t6020 = -1.*t5972*t4957;
  t6111 = t2773*t5959;
  t6112 = t111*t5984;
  t6113 = t6111 + t6112;
  t6106 = -1.*t111*t5959;
  t6108 = t2773*t5984;
  t6109 = t6106 + t6108;
  t5996 = 4.000000000064e-6*t259*t927;
  t6001 = 4.000000000064e-6*t1574*t1586;
  t6003 = 4.000000000064e-6*t1433*t1586;
  t6008 = t5996 + t6001 + t6003;
  t6022 = -1.000000000016*t3637*t259;
  t6024 = t6022 + t5585;
  t6086 = t111*t5908;
  t6087 = t2773*t5922;
  t6088 = t6086 + t6087;
  t6094 = t2773*t5908;
  t6096 = -1.*t111*t5922;
  t6097 = t6094 + t6096;
  t6080 = -1.6e-11*t1433*t259;
  t6082 = -1.*t1031*t259;
  t6083 = t6080 + t6082 + t4956;
  t6091 = -1.*t59*t6088;
  t6099 = t3763*t6097;
  t6101 = t6091 + t6099;
  t6140 = t3763*t6088;
  t6141 = t59*t6097;
  t6144 = t6140 + t6141;
  t6146 = t3823*t6083;
  t6147 = -1.*t3873*t6101;
  t6148 = t6146 + t6147;
  t6124 = -1.*t111*t6008;
  t6125 = t2773*t6024;
  t6126 = t6124 + t6125;
  t6128 = t2773*t6008;
  t6131 = t111*t6024;
  t6132 = t6128 + t6131;
  t6166 = t3763*t6109;
  t6168 = -1.*t59*t6113;
  t6173 = t6166 + t6168;
  t6162 = t59*t6109;
  t6163 = t3763*t6113;
  t6164 = t6162 + t6163;
  t6190 = t59*t6126;
  t6191 = t3763*t6132;
  t6192 = t6190 + t6191;
  t6165 = t5102*t6164;
  t6210 = t3763*t6126;
  t6212 = -1.*t59*t6132;
  t6214 = t6210 + t6212;
  t6206 = -1.*t6164*t5133;
  t6208 = -1.*t5112*t6192;
  t6232 = t3823*t6173;
  t6235 = t3873*t5972;
  t6237 = t6232 + t6235;
  t6223 = -1.*t3873*t6173;
  t6227 = t3823*t5972;
  t6230 = t6223 + t6227;
  t6241 = t3873*t5913;
  t6249 = t3823*t6214;
  t6250 = t6241 + t6249;
  t4210 = t3819*t3802;
  t4212 = -1.*t14*t4116;
  t4215 = t4210 + t4212;
  t5683 = -1.*t4777*t5052;
  t5684 = -1.*t4822*t5061;
  t5687 = t5261 + t5683 + t5684;
  t5562 = -1.*t4754*t5029;
  t5564 = -1.*t4774*t5043;
  t5565 = t5562 + t5564 + t5261;
  t6350 = -1.*t4953*t4668;
  t6357 = -1.*t4950*t4732;
  t6366 = 1.000000000016*t4751*t1586;
  t6367 = t6350 + t6357 + t6366;
  t5154 = -1.*t3873*t4957;
  t5155 = -1.*t3823*t5063;
  t5157 = t5154 + t5155;
  t4437 = -1.*t4416*t3873;
  t4537 = -1.*t3823*t4530;
  t4551 = t4437 + t4537;
  t6282 = t3873*t3858;
  t6285 = t3823*t4095;
  t6286 = t6282 + t6285;
  t6421 = -1.*t5102*t5112;
  t6430 = t5112*t3802;
  t6422 = -1.*t4885*t4869;
  t6423 = -1.*t4876*t4930;
  t6424 = t6421 + t6422 + t6423;
  t6472 = -1.*t5102*t4838;
  t6475 = -1.*t4530*t5112;
  t6492 = t4838*t3802;
  t6497 = t5112*t4095;
  t6432 = t4930*t6286;
  t6433 = t4869*t4116;
  t6434 = t6430 + t6432 + t6433;
  t6482 = -1.*t4530*t4838;
  t6483 = -1.*t4416*t4860;
  t6484 = t6482 + t6421 + t6483;
  t6487 = t4860*t3858;
  t6488 = t4838*t4095;
  t6489 = t6487 + t6430 + t6488;
  t6567 = -1.*t5398*t5112;
  t6570 = -1.*t5102*t5402;
  t6578 = t5112*t5317;
  t6579 = t5402*t3802;
  t6623 = -1.*t4416*t5526;
  t6629 = -1.*t5554*t4860;
  t6659 = t5526*t3858;
  t6668 = t4860*t5603;
  t5885 = t3823*t5503;
  t5888 = -1.*t3873*t5819;
  t5891 = t5885 + t5888;
  t6715 = -1.*t5102*t5768;
  t6722 = -1.*t5787*t5112;
  t5845 = t3823*t5554;
  t5846 = -1.*t3873*t5782;
  t5851 = t5845 + t5846;
  t5604 = t3873*t5603;
  t5625 = t3823*t5624;
  t5628 = t5604 + t5625;
  t6737 = t5768*t3802;
  t6743 = t5112*t5736;
  t6643 = -1.*t4510*t4754;
  t6646 = -1.*t4487*t4774;
  t6648 = t6643 + t6483 + t6646;
  t6824 = -1.*t4403*t4668;
  t6825 = -1.*t4351*t4732;
  t6826 = t6824 + t6825;
  t6829 = -1.*t4351*t5951;
  t6830 = -1.*t4403*t5956;
  t6831 = t6829 + t6830;
  t6833 = t822*t5934;
  t6834 = -1.*t259*t4668;
  t6837 = -4.e-6*t259*t4732;
  t6838 = -1.000000000016*t4751*t1586;
  t6839 = -4.e-6*t5951*t1586;
  t6840 = -1.*t5956*t1586;
  t6842 = t6833 + t6834 + t6837 + t6838 + t6839 + t6840;
  t6802 = -1.*t4416*t5972;
  t6681 = -1.*t4523*t4777;
  t6683 = -1.*t4517*t4822;
  t6685 = t6681 + t6683 + t6483;
  t6813 = t5972*t3858;
  t6817 = t4860*t6083;
  t6256 = t3823*t5913;
  t6258 = -1.*t3873*t6214;
  t6259 = t6256 + t6258;
  t6875 = -1.*t5102*t6164;
  t6084 = t3873*t6083;
  t6102 = t3823*t6101;
  t6103 = t6084 + t6102;
  t6892 = t6164*t3802;
  t6899 = t5112*t6144;
  t6390 = t3819*t5133;
  t6391 = -1.*t14*t5124;
  t6393 = t6390 + t6391;
  t6692 = t4822*t3707;
  t6695 = t4777*t3796;
  t6697 = t6487 + t6692 + t6695;
  t6652 = t4774*t2660;
  t6653 = t4754*t3690;
  t6654 = t6652 + t6487 + t6653;
  t6047 = -0.03874900000062*t1586;
  t6969 = t822*t4751;
  t6970 = -1.*t4668*t1586;
  t6971 = -4.e-6*t4732*t1586;
  t6972 = t6969 + t6970 + t6971;
  t7001 = -1.*t5112*t3802;
  t7023 = t5112*t5133;
  t7066 = -1.*t4838*t3802;
  t7069 = -1.*t5112*t4095;
  t7002 = -1.*t4930*t6286;
  t7003 = -1.*t4869*t4116;
  t7004 = t7001 + t7002 + t7003;
  t7077 = t5112*t5063;
  t7079 = t4838*t5133;
  t7024 = t4930*t5082;
  t7025 = t4869*t5124;
  t7026 = t7023 + t7024 + t7025;
  t7057 = -1.*t4860*t3858;
  t7058 = -1.*t4838*t4095;
  t7059 = t7057 + t7001 + t7058;
  t7085 = t4860*t4957;
  t7086 = t4838*t5063;
  t7087 = t7085 + t7086 + t7023;
  t7143 = -1.*t5112*t5317;
  t7144 = -1.*t5402*t3802;
  t7152 = t5112*t5383;
  t7156 = t5402*t5133;
  t7206 = -1.*t5526*t3858;
  t7209 = -1.*t4860*t5603;
  t7223 = t4860*t5503;
  t7225 = t5526*t4957;
  t7261 = -1.*t5768*t3802;
  t7269 = -1.*t5112*t5736;
  t7278 = t5768*t5133;
  t7279 = t5112*t5804;
  t7198 = -1.*t4774*t2660;
  t7199 = -1.*t4754*t3690;
  t7202 = t7198 + t7057 + t7199;
  t7212 = t4754*t5029;
  t7215 = t4774*t5043;
  t7216 = t7212 + t7215 + t7085;
  t7339 = -1.*t822*t4751;
  t7341 = t4668*t1586;
  t7342 = 4.e-6*t4732*t1586;
  t7346 = t7339 + t7341 + t7342;
  t7349 = -1.000000000016*t259*t4751;
  t7350 = t4950*t5951;
  t7351 = t4953*t5956;
  t7352 = -1.000000000016*t5934*t1586;
  t7353 = 1.000000000016*t4668*t1586;
  t7354 = 4.000000000064e-6*t4732*t1586;
  t7356 = t7349 + t7350 + t7351 + t7352 + t7353 + t7354;
  t7358 = t4953*t4668;
  t7360 = t4950*t4732;
  t7362 = t7358 + t7360 + t6838;
  t7364 = -1.*t822*t5934;
  t7365 = t259*t4668;
  t7366 = 4.e-6*t259*t4732;
  t7368 = 4.e-6*t5951*t1586;
  t7369 = t5956*t1586;
  t7370 = t7364 + t7365 + t7366 + t6366 + t7368 + t7369;
  t7232 = -1.*t4822*t3707;
  t7233 = -1.*t4777*t3796;
  t7234 = t7057 + t7232 + t7233;
  t7247 = t4777*t5052;
  t7248 = t4822*t5061;
  t7249 = t7085 + t7247 + t7248;
  t7316 = -1.*t5972*t3858;
  t7319 = -1.*t4860*t6083;
  t7326 = t4860*t5913;
  t7331 = t5972*t4957;
  t7430 = -1.*t6164*t3802;
  t7435 = -1.*t5112*t6144;
  t7442 = t6164*t5133;
  t7443 = t5112*t6192;
  t6990 = t3819*t5102;
  t6991 = -1.*t14*t4885;
  t6992 = t6990 + t6991;
  p_output1[0]=(-1.*t14*t3802 - 1.*t3819*t4116)*var2[1] + t4215*var2[2];
  p_output1[1]=t4116*var2[0] - 1.*t14*t4260*var2[1] + t3819*t4260*var2[2] + ((t4551*t4869 + t4869*t4876 + t4885*t4899 + t4885*t4930)*t5082 + t5119*t5124 + t4885*t5143 + t4876*(-1.*t4869*t5082 - 1.*t4899*t5124 - 1.*t4930*t5124 - 1.*t4869*t5157))*var2[3];
  p_output1[2]=t3823*t5186*var2[0] + (t3819*t4095 + t14*t3873*t5186)*var2[1] + (t14*t4095 - 1.*t3819*t3873*t5186)*var2[2] + (t3823*t5143*t5216 + t5082*(-1.*t3873*t4869*t5216 + t3823*t4930*t5216 + t5219 + t3823*t4876*t5222 - 1.*t3873*t4885*t5222 + t5227) + t3823*t5119*t5248 + t4876*(-1.*t3823*t5082*t5222 + t3873*t5124*t5222 + t5239 + t3873*t4869*t5248 - 1.*t3823*t4930*t5248 + t5251))*var2[3] + (t5063*t5211 + t5133*(t4838*t5216 + t5219 + t4530*t5222 + t5227) + t5102*(-1.*t5063*t5222 + t5239 - 1.*t4838*t5248 + t5251) + t4530*t5263)*var2[4];
  p_output1[3]=t3823*t5309*var2[0] + (t14*t3873*t5309 + t3819*t5317)*var2[1] + (-1.*t3819*t3873*t5309 + t14*t5317)*var2[2] + (t3823*t5143*t5390 + t5082*(-1.*t3873*t4869*t5390 + t3823*t4930*t5390 + t5399 + t5404 + t3823*t4876*t5409 - 1.*t3873*t4885*t5409) + t3823*t5119*t5424 + t4876*(-1.*t3823*t5082*t5409 + t3873*t5124*t5409 + t5418 + t3873*t4869*t5424 - 1.*t3823*t4930*t5424 + t5426))*var2[3] + (t5211*t5383 + t5263*t5398 + t5133*(t4838*t5390 + t5399 + t5404 + t4530*t5409) + t5102*(-1.*t5063*t5409 + t5418 - 1.*t4838*t5424 + t5426))*var2[4] + (t4957*(t4517*t4777 + t4517*t5333 + t4822*t5343 + t4523*t5349) + t4416*(-1.*t4777*t5061 - 1.*t5061*t5333 - 1.*t5052*t5349 - 1.*t4822*t5362))*var2[5];
  p_output1[4]=t5628*var2[0] + (t3819*t5736 - 1.*t14*t5740)*var2[1] + (t14*t5736 + t3819*t5740)*var2[2] + (t5143*t5859 + t5082*(t5769 + t5788 + t4885*t5836 + t4876*t5842 + t4869*t5851 + t4930*t5859) + t5119*t5872 + t4876*(t5812 + t5815 - 1.*t5124*t5836 - 1.*t5082*t5842 - 1.*t4930*t5872 - 1.*t4869*t5891))*var2[3] + (t5263*t5787 + t5133*(t5528 + t5555 + t5769 + t4530*t5772 + t4838*t5782 + t5788) + t5211*t5804 + t5102*(t5577 + t5580 - 1.*t5063*t5772 + t5812 + t5815 - 1.*t4838*t5819))*var2[4] + (t5503*t5640 + t4957*(t5528 + t5555 + t4517*t5646 + t4523*t5652 + t4777*t5663 + t4822*t5669) + t5554*t5687 + t4416*(t5577 + t5580 - 1.*t5061*t5646 - 1.*t5052*t5652 - 1.*t4822*t5702 - 1.*t4777*t5716))*var2[5] + (0.15121*t5487 + t5491*t5503 - 0.15121*t5509 + t4957*(t4754*t5512 + t5528 + t4487*t5540 + t4510*t5549 + t5555 + t4774*t5558) + t5554*t5565 + t4416*(-1.*t5043*t5540 - 1.*t5029*t5549 - 1.*t4774*t5574 + t5577 + t5580 - 1.*t4754*t5586))*var2[6];
  p_output1[5]=t6103*var2[0] + (t3819*t6144 - 1.*t14*t6148)*var2[1] + (t14*t6144 + t3819*t6148)*var2[2] + (t5082*(t6165 + t4885*t6230 + t4876*t6237) + t5119*t6250 + t4876*(t6206 + t6208 - 1.*t5124*t6230 - 1.*t5082*t6237 - 1.*t4930*t6250 - 1.*t4869*t6259))*var2[3] + (t5133*(t5973 + t6165 + t4530*t6173) + t5211*t6192 + t5102*(t6018 + t6020 - 1.*t5063*t6173 + t6206 + t6208 - 1.*t4838*t6214))*var2[4] + (t5640*t5913 + t4957*(t5973 + t4517*t6109 + t4523*t6113) + t4416*(t6018 + t6020 - 1.*t5061*t6109 - 1.*t5052*t6113 - 1.*t4822*t6126 - 1.*t4777*t6132))*var2[5] + (0.15121*t5908 + t5491*t5913 - 0.15121*t5922 + t4957*(t4487*t5959 + t5973 + t4510*t5984) + t4416*(-1.*t5043*t5959 - 1.*t5029*t5984 - 1.*t4774*t6008 + t6018 + t6020 - 1.*t4754*t6024))*var2[6] + (-0.281210000004*t259 + t4950*t6044 + t6047 + 4.000000000064e-6*t1586*t6052 + t4351*t6061 + 4.e-6*(-1.*t4953*t6044 - 1.000000000016*t1586*t6052 - 1.*t4403*t6061))*var2[7];
  p_output1[6]=t6286;
  p_output1[7]=t4215;
  p_output1[8]=t14*t3802 + t3819*t4116;
  p_output1[9]=t5082*t5119 + t4876*t5143;
  p_output1[10]=t5133*t5211 + t5102*t5263;
  p_output1[11]=t4957*t5640 + t4416*t5687;
  p_output1[12]=-0.15121*t2660 + 0.15121*t3690 + t4957*t5491 + t4416*t5565;
  p_output1[13]=-0.281210000004*t1586 + t4950*t6052 + t4351*t6367 + 4.e-6*(-1.*t4953*t6052 - 1.*t4403*t6367) + 0.038749*t822;
  p_output1[14]=-4.05160619990483e-7;
  p_output1[15]=(-1.*t3819*t5124 - 1.*t14*t5133)*var2[1] + t6393*var2[2];
  p_output1[16]=t5124*var2[0] - 1.*t14*t5157*var2[1] + t3819*t5157*var2[2] + ((-1.*t4551*t4869 - 1.*t4869*t4876 - 1.*t4885*t4899 - 1.*t4885*t4930)*t6286 + t4876*(t4260*t4869 + t4116*t4899 + t4116*t4930 + t4869*t6286) + t4116*t6424 + t4885*t6434)*var2[3];
  p_output1[17]=t3823*t5248*var2[0] + (t3819*t5063 + t14*t3873*t5248)*var2[1] + (t14*t5063 - 1.*t3819*t3873*t5248)*var2[2] + (t3823*t5186*t6424 + t3823*t5216*t6434 + t6286*(t3873*t4869*t5216 - 1.*t3823*t4930*t5216 - 1.*t3823*t4876*t5222 + t3873*t4885*t5222 + t6472 + t6475) + t4876*(-1.*t3873*t4869*t5186 + t3823*t4930*t5186 - 1.*t3873*t4116*t5222 + t3823*t5222*t6286 + t6492 + t6497))*var2[3] + (t3802*(-1.*t4838*t5216 - 1.*t4530*t5222 + t6472 + t6475) + t4095*t6484 + t4530*t6489 + t5102*(t4838*t5186 + t4095*t5222 + t6492 + t6497))*var2[4];
  p_output1[18]=t3823*t5424*var2[0] + (t3819*t5383 + t14*t3873*t5424)*var2[1] + (t14*t5383 - 1.*t3819*t3873*t5424)*var2[2] + (t3823*t5309*t6424 + t3823*t5390*t6434 + t6286*(t3873*t4869*t5390 - 1.*t3823*t4930*t5390 - 1.*t3823*t4876*t5409 + t3873*t4885*t5409 + t6567 + t6570) + t4876*(-1.*t3873*t4869*t5309 + t3823*t4930*t5309 - 1.*t3873*t4116*t5409 + t3823*t5409*t6286 + t6578 + t6579))*var2[3] + (t5317*t6484 + t5398*t6489 + t3802*(-1.*t4838*t5390 - 1.*t4530*t5409 + t6567 + t6570) + t5102*(t4838*t5309 + t4095*t5409 + t6578 + t6579))*var2[4] + (t4416*(t3707*t4777 + t4822*t5306 + t3707*t5333 + t3796*t5349) + t3858*(-1.*t4517*t4777 - 1.*t4517*t5333 - 1.*t4822*t5343 - 1.*t4523*t5349))*var2[5];
  p_output1[19]=t5872*var2[0] + (t3819*t5804 - 1.*t14*t5891)*var2[1] + (t14*t5804 + t3819*t5891)*var2[2] + (t5628*t6424 + t5859*t6434 + t6286*(-1.*t4885*t5836 - 1.*t4876*t5842 - 1.*t4869*t5851 - 1.*t4930*t5859 + t6715 + t6722) + t4876*(t4930*t5628 + t4869*t5740 + t4116*t5836 + t5842*t6286 + t6737 + t6743))*var2[3] + (t5736*t6484 + t5787*t6489 + t3802*(-1.*t4530*t5772 - 1.*t4838*t5782 + t6623 + t6629 + t6715 + t6722) + t5102*(t4838*t5624 + t4095*t5772 + t6659 + t6668 + t6737 + t6743))*var2[4] + (t3858*(-1.*t4517*t5646 - 1.*t4523*t5652 - 1.*t4777*t5663 - 1.*t4822*t5669 + t6623 + t6629) + t4416*(t4777*t5609 + t4822*t5622 + t3707*t5646 + t3796*t5652 + t6659 + t6668) + t5603*t6685 + t5554*t6697)*var2[5] + (-0.15121*t5574 + 0.15121*t5586 + t3858*(-1.*t4754*t5512 - 1.*t4487*t5540 - 1.*t4510*t5549 - 1.*t4774*t5558 + t6623 + t6629) + t5603*t6648 + t5554*t6654 + t4416*(t4754*t5487 + t4774*t5509 + t2660*t5540 + t3690*t5549 + t6659 + t6668))*var2[6];
  p_output1[20]=t6250*var2[0] + (t3819*t6192 - 1.*t14*t6259)*var2[1] + (t14*t6192 + t3819*t6259)*var2[2] + (t6103*t6424 + t6286*(-1.*t4885*t6230 - 1.*t4876*t6237 + t6875) + t4876*(t4930*t6103 + t4869*t6148 + t4116*t6230 + t6237*t6286 + t6892 + t6899))*var2[3] + (t6144*t6484 + t3802*(-1.*t4530*t6173 + t6802 + t6875) + t5102*(t4838*t6101 + t4095*t6173 + t6813 + t6817 + t6892 + t6899))*var2[4] + (t6083*t6685 + t3858*(-1.*t4517*t6109 - 1.*t4523*t6113 + t6802) + t4416*(t4777*t6088 + t4822*t6097 + t3707*t6109 + t3796*t6113 + t6813 + t6817))*var2[5] + (-0.15121*t6008 + 0.15121*t6024 + t6083*t6648 + t3858*(-1.*t4487*t5959 - 1.*t4510*t5984 + t6802) + t4416*(t4754*t5908 + t4774*t5922 + t2660*t5959 + t3690*t5984 + t6813 + t6817))*var2[6] + (0.281210000008499*t1586 - 0.03874900000062*t259 - 4.e-6*t259*t6826 - 4.e-6*t1586*t6831 + t4351*t6842 + 4.e-6*(t259*t6826 + t1586*t6831 - 1.*t4403*t6842))*var2[7];
  p_output1[21]=t5082;
  p_output1[22]=t6393;
  p_output1[23]=t3819*t5124 + t14*t5133;
  p_output1[24]=t6286*t6424 + t4876*t6434;
  p_output1[25]=t3802*t6484 + t5102*t6489;
  p_output1[26]=t3858*t6685 + t4416*t6697;
  p_output1[27]=0.15121*t5029 - 0.15121*t5043 + t3858*t6648 + t4416*t6654;
  p_output1[28]=1.e-6*t4950 + 0.28121*t4953 + t6047 - 4.e-6*t1586*t6826 + t4351*t6972 + 4.e-6*(t1586*t6826 - 1.*t4403*t6972);
  p_output1[29]=0.300000000004851;
  p_output1[30]=(-1.*t3819*t4885 - 1.*t14*t5102)*var2[1] + t6992*var2[2];
  p_output1[31]=t4885*var2[0] - 1.*t14*t4551*var2[1] + t3819*t4551*var2[2] + ((t4869*t5082 + t4899*t5124 + t4930*t5124 + t4869*t5157)*t6286 + t5082*(-1.*t4260*t4869 - 1.*t4116*t4899 - 1.*t4116*t4930 - 1.*t4869*t6286) + t5124*t7004 + t4116*t7026)*var2[3];
  p_output1[32]=t3823*t5216*var2[0] + (t3819*t4530 + t14*t3873*t5216)*var2[1] + (t14*t4530 - 1.*t3819*t3873*t5216)*var2[2] + (t3823*t5248*t7004 + t3823*t5186*t7026 + t5082*(t3873*t4869*t5186 - 1.*t3823*t4930*t5186 + t3873*t4116*t5222 - 1.*t3823*t5222*t6286 + t7066 + t7069) + t6286*(t3823*t5082*t5222 - 1.*t3873*t5124*t5222 - 1.*t3873*t4869*t5248 + t3823*t4930*t5248 + t7077 + t7079))*var2[3] + (t5063*t7059 + t5133*(-1.*t4838*t5186 - 1.*t4095*t5222 + t7066 + t7069) + t3802*(t5063*t5222 + t4838*t5248 + t7077 + t7079) + t4095*t7087)*var2[4];
  p_output1[33]=t3823*t5390*var2[0] + (t14*t3873*t5390 + t3819*t5398)*var2[1] + (-1.*t3819*t3873*t5390 + t14*t5398)*var2[2] + (t3823*t5424*t7004 + t3823*t5309*t7026 + t5082*(t3873*t4869*t5309 - 1.*t3823*t4930*t5309 + t3873*t4116*t5409 - 1.*t3823*t5409*t6286 + t7143 + t7144) + t6286*(t3823*t5082*t5409 - 1.*t3873*t5124*t5409 - 1.*t3873*t4869*t5424 + t3823*t4930*t5424 + t7152 + t7156))*var2[3] + (t5383*t7059 + t5317*t7087 + t5133*(-1.*t4838*t5309 - 1.*t4095*t5409 + t7143 + t7144) + t3802*(t5063*t5409 + t4838*t5424 + t7152 + t7156))*var2[4] + (t4957*(-1.*t3707*t4777 - 1.*t4822*t5306 - 1.*t3707*t5333 - 1.*t3796*t5349) + t3858*(t4777*t5061 + t5061*t5333 + t5052*t5349 + t4822*t5362))*var2[5];
  p_output1[34]=t5859*var2[0] + (t3819*t5787 - 1.*t14*t5851)*var2[1] + (t14*t5787 + t3819*t5851)*var2[2] + (t5872*t7004 + t5628*t7026 + t5082*(-1.*t4930*t5628 - 1.*t4869*t5740 - 1.*t4116*t5836 - 1.*t5842*t6286 + t7261 + t7269) + t6286*(t5124*t5836 + t5082*t5842 + t4930*t5872 + t4869*t5891 + t7278 + t7279))*var2[3] + (t5804*t7059 + t5736*t7087 + t5133*(-1.*t4838*t5624 - 1.*t4095*t5772 + t7206 + t7209 + t7261 + t7269) + t3802*(t5063*t5772 + t4838*t5819 + t7223 + t7225 + t7278 + t7279))*var2[4] + (t4957*(-1.*t4777*t5609 - 1.*t4822*t5622 - 1.*t3707*t5646 - 1.*t3796*t5652 + t7206 + t7209) + t3858*(t5061*t5646 + t5052*t5652 + t4822*t5702 + t4777*t5716 + t7223 + t7225) + t5503*t7234 + t5603*t7249)*var2[5] + (0.15121*t5512 - 0.15121*t5558 + t5503*t7202 + t4957*(-1.*t4754*t5487 - 1.*t4774*t5509 - 1.*t2660*t5540 - 1.*t3690*t5549 + t7206 + t7209) + t5603*t7216 + t3858*(t5043*t5540 + t5029*t5549 + t4774*t5574 + t4754*t5586 + t7223 + t7225))*var2[6];
  p_output1[35]=(t6250*t7004 + t6103*t7026 + t5082*(-1.*t4930*t6103 - 1.*t4869*t6148 - 1.*t4116*t6230 - 1.*t6237*t6286 + t7430 + t7435) + t6286*(t5124*t6230 + t5082*t6237 + t4930*t6250 + t4869*t6259 + t7442 + t7443))*var2[3] + (t6192*t7059 + t6144*t7087 + t5133*(-1.*t4838*t6101 - 1.*t4095*t6173 + t7316 + t7319 + t7430 + t7435) + t3802*(t5063*t6173 + t4838*t6214 + t7326 + t7331 + t7442 + t7443))*var2[4] + (t5913*t7234 + t6083*t7249 + t4957*(-1.*t4777*t6088 - 1.*t4822*t6097 - 1.*t3707*t6109 - 1.*t3796*t6113 + t7316 + t7319) + t3858*(t5061*t6109 + t5052*t6113 + t4822*t6126 + t4777*t6132 + t7326 + t7331))*var2[5] + (t5913*t7202 + t6083*t7216 + t4957*(-1.*t4754*t5908 - 1.*t4774*t5922 - 1.*t2660*t5959 - 1.*t3690*t5984 + t7316 + t7319) + t3858*(t5043*t5959 + t5029*t5984 + t4774*t6008 + t4754*t6024 + t7326 + t7331))*var2[6] + (4.000000000064e-6*t1586*t7346 - 4.e-6*t1586*t7356 - 4.e-6*t259*t7362 + t4950*t7370 + 4.e-6*(-1.000000000016*t1586*t7346 + t1586*t7356 + t259*t7362 - 1.*t4953*t7370))*var2[7];
  p_output1[36]=t4876;
  p_output1[37]=t6992;
  p_output1[38]=t3819*t4885 + t14*t5102;
  p_output1[39]=t5082*t7004 + t6286*t7026;
  p_output1[40]=t5133*t7059 + t3802*t7087;
  p_output1[41]=t4957*t7234 + t3858*t7249;
  p_output1[42]=-0.15121*t4487 + 0.15121*t4510 + t4957*t7202 + t3858*t7216;
  p_output1[43]=1.e-6*t4351 + 0.28121*t4403 + t4950*t7346 - 4.e-6*t1586*t7362 + 4.e-6*(-1.*t4953*t7346 + t1586*t7362);
  p_output1[44]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void J_dh_FlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
