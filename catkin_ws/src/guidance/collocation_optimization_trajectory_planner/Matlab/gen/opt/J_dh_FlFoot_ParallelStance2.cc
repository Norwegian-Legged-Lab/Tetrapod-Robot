/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:13 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1889;
  double t1900;
  double t2264;
  double t1294;
  double t1348;
  double t1583;
  double t1607;
  double t1694;
  double t1700;
  double t3388;
  double t1865;
  double t2133;
  double t2197;
  double t2335;
  double t2413;
  double t2620;
  double t264;
  double t3493;
  double t3502;
  double t3604;
  double t3699;
  double t3830;
  double t3840;
  double t3939;
  double t3978;
  double t2806;
  double t3954;
  double t3973;
  double t100;
  double t4008;
  double t4024;
  double t4035;
  double t4099;
  double t3977;
  double t4067;
  double t4078;
  double t55;
  double t4100;
  double t4104;
  double t4106;
  double t4107;
  double t4114;
  double t4264;
  double t4270;
  double t4289;
  double t4361;
  double t4435;
  double t4438;
  double t4441;
  double t4593;
  double t4598;
  double t4602;
  double t4674;
  double t4621;
  double t4685;
  double t4694;
  double t4705;
  double t4708;
  double t4712;
  double t4852;
  double t4871;
  double t4892;
  double t4922;
  double t4924;
  double t4925;
  double t4981;
  double t4983;
  double t4984;
  double t5008;
  double t5051;
  double t5053;
  double t5055;
  double t5059;
  double t5068;
  double t5071;
  double t5076;
  double t5077;
  double t5082;
  double t5085;
  double t5088;
  double t5089;
  double t5092;
  double t4960;
  double t4962;
  double t4964;
  double t4968;
  double t4978;
  double t5054;
  double t5083;
  double t5095;
  double t5096;
  double t5105;
  double t5122;
  double t5127;
  double t5143;
  double t5155;
  double t5157;
  double t5159;
  double t4700;
  double t4714;
  double t4780;
  double t4901;
  double t4928;
  double t4932;
  double t4933;
  double t4935;
  double t4937;
  double t4938;
  double t4955;
  double t4957;
  double t4965;
  double t5097;
  double t5160;
  double t5163;
  double t5164;
  double t5167;
  double t5168;
  double t5169;
  double t5170;
  double t5171;
  double t5172;
  double t5174;
  double t5175;
  double t5180;
  double t5187;
  double t5193;
  double t5194;
  double t5203;
  double t5208;
  double t5216;
  double t5226;
  double t5266;
  double t5270;
  double t5272;
  double t5300;
  double t5302;
  double t5305;
  double t5327;
  double t5357;
  double t5412;
  double t5413;
  double t5414;
  double t5415;
  double t5421;
  double t5428;
  double t5437;
  double t5439;
  double t5258;
  double t5259;
  double t5262;
  double t5279;
  double t5282;
  double t5297;
  double t5342;
  double t5376;
  double t5377;
  double t5390;
  double t5418;
  double t5441;
  double t5444;
  double t5446;
  double t5447;
  double t5453;
  double t5455;
  double t5456;
  double t5466;
  double t5481;
  double t5482;
  double t5483;
  double t5410;
  double t5471;
  double t5472;
  double t5496;
  double t5498;
  double t5499;
  double t5273;
  double t5276;
  double t5277;
  double t5543;
  double t5547;
  double t5548;
  double t5475;
  double t5478;
  double t5480;
  double t5484;
  double t5506;
  double t5507;
  double t5512;
  double t5578;
  double t5579;
  double t5580;
  double t5513;
  double t5485;
  double t5489;
  double t5495;
  double t5592;
  double t5593;
  double t5594;
  double t5577;
  double t5583;
  double t5570;
  double t5572;
  double t5573;
  double t5591;
  double t5598;
  double t5515;
  double t5516;
  double t5518;
  double t5652;
  double t5659;
  double t5661;
  double t5662;
  double t5664;
  double t5673;
  double t5675;
  double t5739;
  double t5740;
  double t5708;
  double t5709;
  double t5710;
  double t5711;
  double t5565;
  double t5566;
  double t5567;
  double t5747;
  double t5749;
  double t5752;
  double t5722;
  double t5728;
  double t5735;
  double t5787;
  double t5792;
  double t5604;
  double t5606;
  double t5607;
  double t5772;
  double t5780;
  double t5805;
  double t5806;
  double t5807;
  double t5794;
  double t5797;
  double t5799;
  double t5820;
  double t5822;
  double t5793;
  double t5801;
  double t5784;
  double t5785;
  double t5816;
  double t5825;
  double t5948;
  double t5949;
  double t5950;
  double t5935;
  double t5936;
  double t5938;
  double t5940;
  double t5943;
  double t5873;
  double t5877;
  double t5878;
  double t5879;
  double t5916;
  double t5918;
  double t5921;
  double t5928;
  double t5929;
  double t5932;
  double t5903;
  double t5908;
  double t5909;
  double t5910;
  double t5913;
  double t5914;
  double t5860;
  double t5862;
  double t5863;
  double t5884;
  double t5885;
  double t5890;
  double t5898;
  double t5952;
  double t5958;
  double t5961;
  double t5915;
  double t5951;
  double t5996;
  double t5998;
  double t6048;
  double t6049;
  double t6050;
  double t6039;
  double t6045;
  double t6046;
  double t5982;
  double t5985;
  double t5986;
  double t5994;
  double t6003;
  double t6006;
  double t6007;
  double t6018;
  double t6019;
  double t6020;
  double t6022;
  double t6023;
  double t6024;
  double t6014;
  double t6015;
  double t6021;
  double t6025;
  double t6027;
  double t6110;
  double t6111;
  double t6114;
  double t6118;
  double t6120;
  double t6121;
  double t6056;
  double t6057;
  double t6058;
  double t6060;
  double t6061;
  double t6062;
  double t6091;
  double t6093;
  double t6094;
  double t6098;
  double t6100;
  double t6102;
  double t6170;
  double t6171;
  double t6176;
  double t6150;
  double t6151;
  double t6152;
  double t6142;
  double t6143;
  double t6146;
  double t6183;
  double t6186;
  double t6194;
  double t6149;
  double t6177;
  double t6154;
  double t6158;
  double t6160;
  double t6215;
  double t6217;
  double t6218;
  double t6268;
  double t6276;
  double t6277;
  double t6208;
  double t6210;
  double t6246;
  double t6253;
  double t6255;
  double t6237;
  double t6239;
  double t6244;
  double t6281;
  double t6283;
  double t6284;
  double t5867;
  double t5871;
  double t5872;
  double t6329;
  double t6330;
  double t6333;
  double t6338;
  double t6340;
  double t6342;
  double t6344;
  double t6346;
  double t6347;
  double t6373;
  double t6374;
  double t6385;
  double t6388;
  double t6312;
  double t6315;
  double t6319;
  double t6334;
  double t6343;
  double t6350;
  double t6352;
  double t6355;
  double t6356;
  double t6367;
  double t6370;
  double t6427;
  double t6428;
  double t6429;
  double t6434;
  double t6435;
  double t6436;
  double t6438;
  double t6439;
  double t6440;
  double t6442;
  double t6443;
  double t6444;
  double t6445;
  double t6307;
  double t6310;
  double t6324;
  double t6326;
  double t6327;
  double t6034;
  double t6036;
  double t6037;
  double t6372;
  double t6406;
  double t6408;
  double t6515;
  double t6516;
  double t6517;
  double t6511;
  double t6512;
  double t6513;
  double t6397;
  double t6398;
  double t6399;
  double t6403;
  double t6411;
  double t6415;
  double t6489;
  double t6490;
  double t6491;
  double t6496;
  double t6497;
  double t6499;
  double t6470;
  double t6472;
  double t6487;
  double t6492;
  double t6500;
  double t6502;
  double t6586;
  double t6587;
  double t6588;
  double t6590;
  double t6592;
  double t6593;
  double t6553;
  double t6554;
  double t6559;
  double t6561;
  double t6563;
  double t6566;
  double t6611;
  double t6614;
  double t6620;
  double t6607;
  double t6608;
  double t6609;
  double t6662;
  double t6663;
  double t6665;
  double t6610;
  double t6679;
  double t6681;
  double t6682;
  double t6673;
  double t6675;
  double t6705;
  double t6706;
  double t6707;
  double t6697;
  double t6700;
  double t6702;
  double t6721;
  double t6724;
  double t6726;
  double t4485;
  double t4486;
  double t4491;
  double t6074;
  double t6075;
  double t6078;
  double t5969;
  double t5971;
  double t5972;
  double t6813;
  double t6817;
  double t6818;
  double t6822;
  double t5523;
  double t5525;
  double t5526;
  double t4847;
  double t4958;
  double t4959;
  double t6759;
  double t6761;
  double t6763;
  double t6896;
  double t6908;
  double t6900;
  double t6901;
  double t6904;
  double t6950;
  double t6952;
  double t6974;
  double t6976;
  double t6909;
  double t6910;
  double t6913;
  double t6955;
  double t6956;
  double t6958;
  double t6964;
  double t6966;
  double t6967;
  double t7087;
  double t7093;
  double t7101;
  double t7103;
  double t7149;
  double t7153;
  double t7188;
  double t7192;
  double t6296;
  double t6297;
  double t6298;
  double t7257;
  double t7266;
  double t6261;
  double t6263;
  double t6264;
  double t6016;
  double t6028;
  double t6031;
  double t7278;
  double t7283;
  double t7166;
  double t7167;
  double t7170;
  double t7377;
  double t7378;
  double t7379;
  double t7383;
  double t7384;
  double t7386;
  double t7388;
  double t7389;
  double t7394;
  double t7395;
  double t7402;
  double t7405;
  double t7407;
  double t7345;
  double t7212;
  double t7215;
  double t7216;
  double t7362;
  double t7366;
  double t6741;
  double t6743;
  double t6745;
  double t7457;
  double t6488;
  double t6503;
  double t6506;
  double t7466;
  double t7476;
  double t6851;
  double t6852;
  double t6853;
  double t7218;
  double t7219;
  double t7220;
  double t7180;
  double t7181;
  double t7182;
  double t6431;
  double t7558;
  double t7559;
  double t7560;
  double t7561;
  double t7593;
  double t7616;
  double t7669;
  double t7672;
  double t7594;
  double t7595;
  double t7599;
  double t7677;
  double t7682;
  double t7618;
  double t7623;
  double t7626;
  double t7663;
  double t7664;
  double t7665;
  double t7690;
  double t7693;
  double t7698;
  double t7813;
  double t7814;
  double t7820;
  double t7824;
  double t7882;
  double t7885;
  double t7895;
  double t7901;
  double t7944;
  double t7951;
  double t7962;
  double t7963;
  double t7873;
  double t7874;
  double t7875;
  double t7888;
  double t7889;
  double t7890;
  double t8055;
  double t8056;
  double t8059;
  double t8060;
  double t8065;
  double t8067;
  double t8070;
  double t8074;
  double t8077;
  double t8081;
  double t8082;
  double t8087;
  double t8090;
  double t8091;
  double t8095;
  double t8097;
  double t8098;
  double t8101;
  double t8104;
  double t8105;
  double t7910;
  double t7911;
  double t7912;
  double t7924;
  double t7925;
  double t7926;
  double t8007;
  double t8020;
  double t8033;
  double t8039;
  double t8162;
  double t8167;
  double t8177;
  double t8180;
  double t7581;
  double t7582;
  double t7583;
  t1889 = Cos(var1[7]);
  t1900 = -1. + t1889;
  t2264 = Sin(var1[8]);
  t1294 = Cos(var1[8]);
  t1348 = -1.*t1294;
  t1583 = 1. + t1348;
  t1607 = -1.000000000016*t1583;
  t1694 = 1. + t1607;
  t1700 = Sin(var1[7]);
  t3388 = Cos(var1[6]);
  t1865 = -4.e-6*t1694*t1700;
  t2133 = 1.6e-11*t1900;
  t2197 = 1. + t2133;
  t2335 = -4.e-6*t2197*t2264;
  t2413 = -4.e-6*t1900*t2264;
  t2620 = t1865 + t2335 + t2413;
  t264 = Sin(var1[6]);
  t3493 = -1.*t1889;
  t3502 = 1. + t3493;
  t3604 = -1.000000000016*t3502;
  t3699 = 1. + t3604;
  t3830 = t3699*t1694;
  t3840 = -1.000000000016*t1700*t2264;
  t3939 = t3830 + t3840;
  t3978 = Cos(var1[5]);
  t2806 = -1.*t264*t2620;
  t3954 = t3388*t3939;
  t3973 = t2806 + t3954;
  t100 = Sin(var1[5]);
  t4008 = t3388*t2620;
  t4024 = t264*t3939;
  t4035 = t4008 + t4024;
  t4099 = Cos(var1[3]);
  t3977 = t100*t3973;
  t4067 = t3978*t4035;
  t4078 = t3977 + t4067;
  t55 = Sin(var1[3]);
  t4100 = Cos(var1[4]);
  t4104 = -1.*t1694*t1700;
  t4106 = -1.6e-11*t1900*t2264;
  t4107 = -1.*t1889*t2264;
  t4114 = t4104 + t4106 + t4107;
  t4264 = t4100*t4114;
  t4270 = Sin(var1[4]);
  t4289 = t3978*t3973;
  t4361 = -1.*t100*t4035;
  t4435 = t4289 + t4361;
  t4438 = -1.*t4270*t4435;
  t4441 = t4264 + t4438;
  t4593 = -1.*t4270*t4114;
  t4598 = -1.*t4100*t4435;
  t4602 = t4593 + t4598;
  t4674 = -1. + t1294;
  t4621 = 1.6e-11*t1583;
  t4685 = 1.6e-11*t4674;
  t4694 = 1. + t4621 + t4685;
  t4705 = 4.e-6*t4674;
  t4708 = -4.e-6*t1294;
  t4712 = t4705 + t4708;
  t4852 = t2197*t4694;
  t4871 = 4.e-6*t1900*t4712;
  t4892 = t4852 + t4871;
  t4922 = 4.e-6*t4694*t1700;
  t4924 = t4712*t1700;
  t4925 = t4922 + t4924;
  t4981 = 5.136e-14*var1[8];
  t4983 = -0.03874900000062*t1583;
  t4984 = 5.9484e-7*t4674;
  t5008 = -0.03875*t1294;
  t5051 = -0.299999999992*t2264;
  t5053 = t4981 + t4983 + t4984 + t5008 + t5051;
  t5055 = -1.284e-8*var1[8];
  t5059 = 1. + t4685;
  t5068 = 0.14871*t5059;
  t5071 = -1.5499600000248e-7*t1583;
  t5076 = -1.55e-7*t4674;
  t5077 = -1.199999999968e-6*t2264;
  t5082 = t5055 + t5068 + t5071 + t5076 + t5077;
  t5085 = 0.80321*t1694;
  t5088 = 0.503210000016051*t1583;
  t5089 = -4.05159380016e-7*t2264;
  t5092 = t5085 + t5088 + t5089;
  t4960 = -1.*t3388;
  t4962 = 1. + t4960;
  t4964 = 0.15121*t4962;
  t4968 = 0.281210000008499*t3502;
  t4978 = 0.03874900000062*t1700;
  t5054 = t1700*t5053;
  t5083 = 4.e-6*t1700*t5082;
  t5095 = t3699*t5092;
  t5096 = t4968 + t4978 + t5054 + t5083 + t5095;
  t5105 = -1.2484e-7*var1[7];
  t5122 = -1.5499600000248e-7*t3502;
  t5127 = 1.124840000016e-6*t1700;
  t5143 = 4.e-6*t1900*t5053;
  t5155 = t2197*t5082;
  t5157 = -4.e-6*t1700*t5092;
  t5159 = t5105 + t5122 + t5127 + t5143 + t5155 + t5157;
  t4700 = 4.e-6*t1900*t4694;
  t4714 = t1889*t4712;
  t4780 = t4700 + t4714;
  t4901 = -1.*t4892*t264;
  t4928 = t3388*t4925;
  t4932 = t4901 + t4928;
  t4933 = t3978*t4932;
  t4935 = t3388*t4892;
  t4937 = t264*t4925;
  t4938 = t4935 + t4937;
  t4955 = -1.*t100*t4938;
  t4957 = t4933 + t4955;
  t4965 = -0.15121*t264;
  t5097 = t264*t5096;
  t5160 = t3388*t5159;
  t5163 = t4964 + t4965 + t5097 + t5160;
  t5164 = -1.*t100*t5163;
  t5167 = 0.15121*t264;
  t5168 = t3388*t5096;
  t5169 = -1.*t264*t5159;
  t5170 = t4964 + t5167 + t5168 + t5169;
  t5171 = t3978*t5170;
  t5172 = t5164 + t5171;
  t5174 = -1.*t4270*t5172;
  t5175 = 4.9936e-13*var1[7];
  t5180 = -0.03874900000062*t3502;
  t5187 = 0.281210000004*t1700;
  t5193 = t1889*t5053;
  t5194 = 4.e-6*t1900*t5082;
  t5203 = -1.*t1700*t5092;
  t5208 = t5175 + t5180 + t5187 + t5193 + t5194 + t5203;
  t5216 = t4100*t5208;
  t5226 = t5174 + t5216;
  t5266 = t4100*t4780;
  t5270 = -1.*t4270*t4957;
  t5272 = t5266 + t5270;
  t5300 = -1. + t4621;
  t5302 = 4.e-6*t5300;
  t5305 = 4.e-6*t1583;
  t5327 = t5302 + t5305;
  t5357 = t4621 + t1348;
  t5412 = 4.e-6*t5327*t1700;
  t5413 = t5357*t1700;
  t5414 = -1.000000000016*t3699*t2264;
  t5415 = t5412 + t5413 + t5414;
  t5421 = t2197*t5327;
  t5428 = 4.e-6*t1900*t5357;
  t5437 = 4.000000000064e-6*t1700*t2264;
  t5439 = t5421 + t5428 + t5437;
  t5258 = t4780*t4270;
  t5259 = t4100*t4957;
  t5262 = t5258 + t5259;
  t5279 = t4100*t5172;
  t5282 = t4270*t5208;
  t5297 = t5279 + t5282;
  t5342 = 4.e-6*t1900*t5327;
  t5376 = t1889*t5357;
  t5377 = 1.000000000016*t1700*t2264;
  t5390 = t5342 + t5376 + t5377;
  t5418 = t264*t5415;
  t5441 = t3388*t5439;
  t5444 = t5418 + t5441;
  t5446 = -1.*t100*t5444;
  t5447 = t3388*t5415;
  t5453 = -1.*t264*t5439;
  t5455 = t5447 + t5453;
  t5456 = t3978*t5455;
  t5466 = t5446 + t5456;
  t5481 = t3978*t5163;
  t5482 = t100*t5170;
  t5483 = t5481 + t5482;
  t5410 = t4270*t5390;
  t5471 = t4100*t5466;
  t5472 = t5410 + t5471;
  t5496 = t4100*t5390;
  t5498 = -1.*t4270*t5466;
  t5499 = t5496 + t5498;
  t5273 = -1.*t4100*t5172;
  t5276 = -1.*t4270*t5208;
  t5277 = t5273 + t5276;
  t5543 = -1.*t100*t3973;
  t5547 = -1.*t3978*t4035;
  t5548 = t5543 + t5547;
  t5475 = t100*t4932;
  t5478 = t3978*t4938;
  t5480 = t5475 + t5478;
  t5484 = t5480*t5483;
  t5506 = t3978*t5444;
  t5507 = t100*t5455;
  t5512 = t5506 + t5507;
  t5578 = -1.*t3978*t5163;
  t5579 = -1.*t100*t5170;
  t5580 = t5578 + t5579;
  t5513 = -1.*t5483*t5512;
  t5485 = t5272*t5226;
  t5489 = t5262*t5297;
  t5495 = t5484 + t5485 + t5489;
  t5592 = -1.*t3978*t5444;
  t5593 = -1.*t100*t5455;
  t5594 = t5592 + t5593;
  t5577 = t5480*t5172;
  t5583 = t4957*t5483;
  t5570 = -1.*t100*t4932;
  t5572 = -1.*t3978*t4938;
  t5573 = t5570 + t5572;
  t5591 = -1.*t5483*t5466;
  t5598 = -1.*t5172*t5512;
  t5515 = -1.*t5297*t5472;
  t5516 = -1.*t5226*t5499;
  t5518 = t5513 + t5515 + t5516;
  t5652 = -1.*t3388*t2620;
  t5659 = -1.*t264*t3939;
  t5661 = t5652 + t5659;
  t5662 = t3978*t5661;
  t5664 = t5543 + t5662;
  t5673 = t100*t5661;
  t5675 = t4289 + t5673;
  t5739 = -0.15121*t3388;
  t5740 = t5739 + t5167 + t5168 + t5169;
  t5708 = 0.15121*t3388;
  t5709 = -1.*t264*t5096;
  t5710 = -1.*t3388*t5159;
  t5711 = t5708 + t5167 + t5709 + t5710;
  t5565 = t4957*t5172;
  t5566 = t4780*t5208;
  t5567 = t5565 + t5484 + t5566;
  t5747 = -1.*t264*t5415;
  t5749 = -1.*t3388*t5439;
  t5752 = t5747 + t5749;
  t5722 = -1.*t3388*t4892;
  t5728 = -1.*t264*t4925;
  t5735 = t5722 + t5728;
  t5787 = t100*t5735;
  t5792 = t4933 + t5787;
  t5604 = -1.*t5208*t5390;
  t5606 = -1.*t5172*t5466;
  t5607 = t5604 + t5606 + t5513;
  t5772 = t100*t5752;
  t5780 = t5772 + t5456;
  t5805 = t3978*t5711;
  t5806 = -1.*t100*t5740;
  t5807 = t5805 + t5806;
  t5794 = t100*t5711;
  t5797 = t3978*t5740;
  t5799 = t5794 + t5797;
  t5820 = t3978*t5752;
  t5822 = t5820 + t5593;
  t5793 = t5792*t5483;
  t5801 = t5480*t5799;
  t5784 = t3978*t5735;
  t5785 = t5570 + t5784;
  t5816 = -1.*t5483*t5780;
  t5825 = -1.*t5799*t5512;
  t5948 = -4.e-6*t4694*t1700;
  t5949 = -1.*t4712*t1700;
  t5950 = t5948 + t5949;
  t5935 = 0.03874900000062*t1889;
  t5936 = 0.281210000008499*t1700;
  t5938 = 4.e-6*t1889*t5082;
  t5940 = -1.000000000016*t1700*t5092;
  t5943 = t5935 + t5936 + t5193 + t5938 + t5940;
  t5873 = -4.e-6*t5327*t1700;
  t5877 = -1.*t5357*t1700;
  t5878 = 1.000000000016*t1889*t2264;
  t5879 = t5873 + t5877 + t5878;
  t5916 = 1.124840000016e-6*t1889;
  t5918 = -1.5499600000248e-7*t1700;
  t5921 = -4.e-6*t1700*t5053;
  t5928 = -1.6e-11*t1700*t5082;
  t5929 = -4.e-6*t1889*t5092;
  t5932 = -1.2484e-7 + t5916 + t5918 + t5921 + t5928 + t5929;
  t5903 = 0.281210000004*t1889;
  t5908 = -0.03874900000062*t1700;
  t5909 = -1.*t1700*t5053;
  t5910 = -4.e-6*t1700*t5082;
  t5913 = -1.*t1889*t5092;
  t5914 = 4.9936e-13 + t5903 + t5908 + t5909 + t5910 + t5913;
  t5860 = -1.000000000016*t1694*t1700;
  t5862 = -1.000000000016*t1889*t2264;
  t5863 = t5860 + t5862;
  t5884 = -4.e-6*t1889*t1694;
  t5885 = t5884 + t5437;
  t5890 = 4.e-6*t1889*t4694;
  t5898 = t5890 + t4714;
  t5952 = -1.6e-11*t4694*t1700;
  t5958 = -4.e-6*t4712*t1700;
  t5961 = t5952 + t5958;
  t5915 = t4780*t5914;
  t5951 = t5950*t5208;
  t5996 = -1.*t5208*t5879;
  t5998 = -1.*t5914*t5390;
  t6048 = t3388*t5932;
  t6049 = t264*t5943;
  t6050 = t6048 + t6049;
  t6039 = -1.*t264*t5932;
  t6045 = t3388*t5943;
  t6046 = t6039 + t6045;
  t5982 = -1.6e-11*t5327*t1700;
  t5985 = -4.e-6*t5357*t1700;
  t5986 = 4.000000000064e-6*t1889*t2264;
  t5994 = t5982 + t5985 + t5986;
  t6003 = 4.e-6*t1889*t5327;
  t6006 = 1.000000000032*t1700*t2264;
  t6007 = t6003 + t5376 + t6006;
  t6018 = t264*t5863;
  t6019 = t3388*t5885;
  t6020 = t6018 + t6019;
  t6022 = t3388*t5863;
  t6023 = -1.*t264*t5885;
  t6024 = t6022 + t6023;
  t6014 = -1.*t1889*t1694;
  t6015 = t6014 + t5377;
  t6021 = -1.*t100*t6020;
  t6025 = t3978*t6024;
  t6027 = t6021 + t6025;
  t6110 = t3978*t6020;
  t6111 = t100*t6024;
  t6114 = t6110 + t6111;
  t6118 = t4100*t6015;
  t6120 = -1.*t4270*t6027;
  t6121 = t6118 + t6120;
  t6056 = t5898*t264;
  t6057 = t3388*t5961;
  t6058 = t6056 + t6057;
  t6060 = t3388*t5898;
  t6061 = -1.*t264*t5961;
  t6062 = t6060 + t6061;
  t6091 = -1.*t264*t5994;
  t6093 = t3388*t6007;
  t6094 = t6091 + t6093;
  t6098 = t3388*t5994;
  t6100 = t264*t6007;
  t6102 = t6098 + t6100;
  t6170 = t3978*t6058;
  t6171 = t100*t6062;
  t6176 = t6170 + t6171;
  t6150 = t3978*t6046;
  t6151 = -1.*t100*t6050;
  t6152 = t6150 + t6151;
  t6142 = t100*t6046;
  t6143 = t3978*t6050;
  t6146 = t6142 + t6143;
  t6183 = t100*t6094;
  t6186 = t3978*t6102;
  t6194 = t6183 + t6186;
  t6149 = t5480*t6146;
  t6177 = t6176*t5483;
  t6154 = -1.*t100*t6058;
  t6158 = t3978*t6062;
  t6160 = t6154 + t6158;
  t6215 = t3978*t6094;
  t6217 = -1.*t100*t6102;
  t6218 = t6215 + t6217;
  t6268 = t4270*t5950;
  t6276 = t4100*t6160;
  t6277 = t6268 + t6276;
  t6208 = -1.*t6146*t5512;
  t6210 = -1.*t5483*t6194;
  t6246 = t4100*t6152;
  t6253 = t4270*t5914;
  t6255 = t6246 + t6253;
  t6237 = -1.*t4270*t6152;
  t6239 = t4100*t5914;
  t6244 = t6237 + t6239;
  t6281 = t4270*t5879;
  t6283 = t4100*t6218;
  t6284 = t6281 + t6283;
  t5867 = t4925*t5096;
  t5871 = t4892*t5159;
  t5872 = t5867 + t5566 + t5871;
  t6329 = -4.05159380016e-7*t1294;
  t6330 = -0.2999999999968*t2264;
  t6333 = t6329 + t6330;
  t6338 = -1.199999999968e-6*t1294;
  t6340 = 1.620637520064e-12*t2264;
  t6342 = -1.284e-8 + t6338 + t6340;
  t6344 = -0.299999999992*t1294;
  t6346 = 4.05159380016e-7*t2264;
  t6347 = 5.136e-14 + t6344 + t6346;
  t6373 = t3699*t6333;
  t6374 = 4.e-6*t1700*t6342;
  t6385 = t1700*t6347;
  t6388 = t6373 + t6374 + t6385;
  t6312 = 1.000000000016*t1294*t1700;
  t6315 = 1.6000000000256e-11*t1900*t2264;
  t6319 = t6312 + t6315 + t5878;
  t6334 = -4.e-6*t1700*t6333;
  t6343 = t2197*t6342;
  t6350 = 4.e-6*t1900*t6347;
  t6352 = t6334 + t6343 + t6350;
  t6355 = -1.*t1700*t6333;
  t6356 = 4.e-6*t1900*t6342;
  t6367 = t1889*t6347;
  t6370 = t6355 + t6356 + t6367;
  t6427 = t4694*t6342;
  t6428 = t4712*t6347;
  t6429 = t6427 + t6428;
  t6434 = t4712*t5053;
  t6435 = t4694*t5082;
  t6436 = t6434 + t6435;
  t6438 = 1.000000000016*t1294*t5092;
  t6439 = -1.*t5327*t6342;
  t6440 = -1.*t5357*t6347;
  t6442 = 1.000000000016*t6333*t2264;
  t6443 = -1.000000000016*t5053*t2264;
  t6444 = -4.000000000064e-6*t5082*t2264;
  t6445 = t6438 + t6439 + t6440 + t6442 + t6443 + t6444;
  t6307 = -1.000000000016*t1294*t1700;
  t6310 = t6307 + t5414;
  t6324 = -4.e-6*t2197*t1294;
  t6326 = -4.e-6*t1900*t1294;
  t6327 = t6324 + t6326 + t5437;
  t6034 = t4938*t5163;
  t6036 = t4932*t5170;
  t6037 = t6034 + t6036 + t5566;
  t6372 = t4780*t6370;
  t6406 = -1.*t5208*t6319;
  t6408 = -1.*t6370*t5390;
  t6515 = t3388*t6352;
  t6516 = t264*t6388;
  t6517 = t6515 + t6516;
  t6511 = -1.*t264*t6352;
  t6512 = t3388*t6388;
  t6513 = t6511 + t6512;
  t6397 = 4.000000000064e-6*t1294*t1700;
  t6398 = 4.000000000064e-6*t2197*t2264;
  t6399 = 4.000000000064e-6*t1900*t2264;
  t6403 = t6397 + t6398 + t6399;
  t6411 = -1.000000000016*t3699*t1294;
  t6415 = t6411 + t6006;
  t6489 = t264*t6310;
  t6490 = t3388*t6327;
  t6491 = t6489 + t6490;
  t6496 = t3388*t6310;
  t6497 = -1.*t264*t6327;
  t6499 = t6496 + t6497;
  t6470 = -1.6e-11*t1900*t1294;
  t6472 = -1.*t1889*t1294;
  t6487 = t6470 + t6472 + t5377;
  t6492 = -1.*t100*t6491;
  t6500 = t3978*t6499;
  t6502 = t6492 + t6500;
  t6586 = t3978*t6491;
  t6587 = t100*t6499;
  t6588 = t6586 + t6587;
  t6590 = t4100*t6487;
  t6592 = -1.*t4270*t6502;
  t6593 = t6590 + t6592;
  t6553 = -1.*t264*t6403;
  t6554 = t3388*t6415;
  t6559 = t6553 + t6554;
  t6561 = t3388*t6403;
  t6563 = t264*t6415;
  t6566 = t6561 + t6563;
  t6611 = t3978*t6513;
  t6614 = -1.*t100*t6517;
  t6620 = t6611 + t6614;
  t6607 = t100*t6513;
  t6608 = t3978*t6517;
  t6609 = t6607 + t6608;
  t6662 = t100*t6559;
  t6663 = t3978*t6566;
  t6665 = t6662 + t6663;
  t6610 = t5480*t6609;
  t6679 = t3978*t6559;
  t6681 = -1.*t100*t6566;
  t6682 = t6679 + t6681;
  t6673 = -1.*t6609*t5512;
  t6675 = -1.*t5483*t6665;
  t6705 = t4100*t6620;
  t6706 = t4270*t6370;
  t6707 = t6705 + t6706;
  t6697 = -1.*t4270*t6620;
  t6700 = t4100*t6370;
  t6702 = t6697 + t6700;
  t6721 = t4270*t6319;
  t6724 = t4100*t6682;
  t6726 = t6721 + t6724;
  t4485 = t4099*t4078;
  t4486 = -1.*t55*t4441;
  t4491 = t4485 + t4486;
  t6074 = -1.*t5163*t5444;
  t6075 = -1.*t5170*t5455;
  t6078 = t5604 + t6074 + t6075;
  t5969 = -1.*t5096*t5415;
  t5971 = -1.*t5159*t5439;
  t5972 = t5969 + t5971 + t5604;
  t6813 = -1.*t5357*t5053;
  t6817 = -1.*t5327*t5082;
  t6818 = 1.000000000016*t5092*t2264;
  t6822 = t6813 + t6817 + t6818;
  t5523 = -1.*t4270*t5390;
  t5525 = -1.*t4100*t5466;
  t5526 = t5523 + t5525;
  t4847 = -1.*t4780*t4270;
  t4958 = -1.*t4100*t4957;
  t4959 = t4847 + t4958;
  t6759 = t4270*t4114;
  t6761 = t4100*t4435;
  t6763 = t6759 + t6761;
  t6896 = -1.*t5480*t5483;
  t6908 = t5483*t4078;
  t6900 = -1.*t5272*t5226;
  t6901 = -1.*t5262*t5297;
  t6904 = t6896 + t6900 + t6901;
  t6950 = -1.*t5480*t5172;
  t6952 = -1.*t4957*t5483;
  t6974 = t5172*t4078;
  t6976 = t5483*t4435;
  t6909 = t5297*t6763;
  t6910 = t5226*t4441;
  t6913 = t6908 + t6909 + t6910;
  t6955 = -1.*t4957*t5172;
  t6956 = -1.*t4780*t5208;
  t6958 = t6955 + t6896 + t6956;
  t6964 = t5208*t4114;
  t6966 = t5172*t4435;
  t6967 = t6964 + t6908 + t6966;
  t7087 = -1.*t5792*t5483;
  t7093 = -1.*t5480*t5799;
  t7101 = t5483*t5675;
  t7103 = t5799*t4078;
  t7149 = -1.*t4780*t5914;
  t7153 = -1.*t5950*t5208;
  t7188 = t5914*t4114;
  t7192 = t5208*t6015;
  t6296 = t4100*t5879;
  t6297 = -1.*t4270*t6218;
  t6298 = t6296 + t6297;
  t7257 = -1.*t5480*t6146;
  t7266 = -1.*t6176*t5483;
  t6261 = t4100*t5950;
  t6263 = -1.*t4270*t6160;
  t6264 = t6261 + t6263;
  t6016 = t4270*t6015;
  t6028 = t4100*t6027;
  t6031 = t6016 + t6028;
  t7278 = t6146*t4078;
  t7283 = t5483*t6114;
  t7166 = -1.*t4925*t5096;
  t7167 = -1.*t4892*t5159;
  t7170 = t7166 + t6956 + t7167;
  t7377 = -1.*t4712*t5053;
  t7378 = -1.*t4694*t5082;
  t7379 = t7377 + t7378;
  t7383 = -1.*t4694*t6342;
  t7384 = -1.*t4712*t6347;
  t7386 = t7383 + t7384;
  t7388 = t1694*t6333;
  t7389 = -1.*t1294*t5053;
  t7394 = -4.e-6*t1294*t5082;
  t7395 = -1.000000000016*t5092*t2264;
  t7402 = -4.e-6*t6342*t2264;
  t7405 = -1.*t6347*t2264;
  t7407 = t7388 + t7389 + t7394 + t7395 + t7402 + t7405;
  t7345 = -1.*t4780*t6370;
  t7212 = -1.*t4938*t5163;
  t7215 = -1.*t4932*t5170;
  t7216 = t7212 + t7215 + t6956;
  t7362 = t6370*t4114;
  t7366 = t5208*t6487;
  t6741 = t4100*t6319;
  t6743 = -1.*t4270*t6682;
  t6745 = t6741 + t6743;
  t7457 = -1.*t5480*t6609;
  t6488 = t4270*t6487;
  t6503 = t4100*t6502;
  t6506 = t6488 + t6503;
  t7466 = t6609*t4078;
  t7476 = t5483*t6588;
  t6851 = t4099*t5512;
  t6852 = -1.*t55*t5499;
  t6853 = t6851 + t6852;
  t7218 = t5170*t3973;
  t7219 = t5163*t4035;
  t7220 = t6964 + t7218 + t7219;
  t7180 = t5159*t2620;
  t7181 = t5096*t3939;
  t7182 = t7180 + t6964 + t7181;
  t6431 = -0.03874900000062*t2264;
  t7558 = t1694*t5092;
  t7559 = -1.*t5053*t2264;
  t7560 = -4.e-6*t5082*t2264;
  t7561 = t7558 + t7559 + t7560;
  t7593 = -1.*t5483*t4078;
  t7616 = t5483*t5512;
  t7669 = -1.*t5172*t4078;
  t7672 = -1.*t5483*t4435;
  t7594 = -1.*t5297*t6763;
  t7595 = -1.*t5226*t4441;
  t7599 = t7593 + t7594 + t7595;
  t7677 = t5483*t5466;
  t7682 = t5172*t5512;
  t7618 = t5297*t5472;
  t7623 = t5226*t5499;
  t7626 = t7616 + t7618 + t7623;
  t7663 = -1.*t5208*t4114;
  t7664 = -1.*t5172*t4435;
  t7665 = t7663 + t7593 + t7664;
  t7690 = t5208*t5390;
  t7693 = t5172*t5466;
  t7698 = t7690 + t7693 + t7616;
  t7813 = -1.*t5483*t5675;
  t7814 = -1.*t5799*t4078;
  t7820 = t5483*t5780;
  t7824 = t5799*t5512;
  t7882 = -1.*t5914*t4114;
  t7885 = -1.*t5208*t6015;
  t7895 = t5208*t5879;
  t7901 = t5914*t5390;
  t7944 = -1.*t6146*t4078;
  t7951 = -1.*t5483*t6114;
  t7962 = t6146*t5512;
  t7963 = t5483*t6194;
  t7873 = -1.*t5159*t2620;
  t7874 = -1.*t5096*t3939;
  t7875 = t7873 + t7663 + t7874;
  t7888 = t5096*t5415;
  t7889 = t5159*t5439;
  t7890 = t7888 + t7889 + t7690;
  t8055 = -1.*t1694*t5092;
  t8056 = t5053*t2264;
  t8059 = 4.e-6*t5082*t2264;
  t8060 = t8055 + t8056 + t8059;
  t8065 = -1.000000000016*t1294*t5092;
  t8067 = t5327*t6342;
  t8070 = t5357*t6347;
  t8074 = -1.000000000016*t6333*t2264;
  t8077 = 1.000000000016*t5053*t2264;
  t8081 = 4.000000000064e-6*t5082*t2264;
  t8082 = t8065 + t8067 + t8070 + t8074 + t8077 + t8081;
  t8087 = t5357*t5053;
  t8090 = t5327*t5082;
  t8091 = t8087 + t8090 + t7395;
  t8095 = -1.*t1694*t6333;
  t8097 = t1294*t5053;
  t8098 = 4.e-6*t1294*t5082;
  t8101 = 4.e-6*t6342*t2264;
  t8104 = t6347*t2264;
  t8105 = t8095 + t8097 + t8098 + t6818 + t8101 + t8104;
  t7910 = -1.*t5170*t3973;
  t7911 = -1.*t5163*t4035;
  t7912 = t7663 + t7910 + t7911;
  t7924 = t5163*t5444;
  t7925 = t5170*t5455;
  t7926 = t7690 + t7924 + t7925;
  t8007 = -1.*t6370*t4114;
  t8020 = -1.*t5208*t6487;
  t8033 = t5208*t6319;
  t8039 = t6370*t5390;
  t8162 = -1.*t6609*t4078;
  t8167 = -1.*t5483*t6588;
  t8177 = t6609*t5512;
  t8180 = t5483*t6665;
  t7581 = t4099*t5480;
  t7582 = -1.*t55*t5272;
  t7583 = t7581 + t7582;
  p_output1[0]=(-1.*t4099*t4441 - 1.*t4078*t55)*var2[1] + t4491*var2[2];
  p_output1[1]=t4441*var2[0] - 1.*t4602*t55*var2[1] + t4099*t4602*var2[2] + ((t4959*t5226 + t5226*t5262 + t5272*t5277 + t5272*t5297)*t5472 + t5495*t5499 + t5272*t5518 + t5262*(-1.*t5226*t5472 - 1.*t5277*t5499 - 1.*t5297*t5499 - 1.*t5226*t5526))*var2[3];
  p_output1[2]=t4100*t5548*var2[0] + (t4099*t4435 + t4270*t55*t5548)*var2[1] + (t4435*t55 - 1.*t4099*t4270*t5548)*var2[2] + (t4100*t5518*t5573 + t5472*(-1.*t4270*t5226*t5573 + t4100*t5297*t5573 + t5577 + t4100*t5262*t5580 - 1.*t4270*t5272*t5580 + t5583) + t4100*t5495*t5594 + t5262*(-1.*t4100*t5472*t5580 + t4270*t5499*t5580 + t5591 + t4270*t5226*t5594 - 1.*t4100*t5297*t5594 + t5598))*var2[3] + (t5466*t5567 + t5512*(t5172*t5573 + t5577 + t4957*t5580 + t5583) + t5480*(-1.*t5466*t5580 + t5591 - 1.*t5172*t5594 + t5598) + t4957*t5607)*var2[4];
  p_output1[3]=t4100*t5664*var2[0] + (t4270*t55*t5664 + t4099*t5675)*var2[1] + (-1.*t4099*t4270*t5664 + t55*t5675)*var2[2] + (t4100*t5518*t5785 + t5472*(-1.*t4270*t5226*t5785 + t4100*t5297*t5785 + t5793 + t5801 + t4100*t5262*t5807 - 1.*t4270*t5272*t5807) + t4100*t5495*t5822 + t5262*(-1.*t4100*t5472*t5807 + t4270*t5499*t5807 + t5816 + t4270*t5226*t5822 - 1.*t4100*t5297*t5822 + t5825))*var2[3] + (t5567*t5780 + t5607*t5792 + t5512*(t5172*t5785 + t5793 + t5801 + t4957*t5807) + t5480*(-1.*t5466*t5807 + t5816 - 1.*t5172*t5822 + t5825))*var2[4] + (t5390*(t4932*t5163 + t4932*t5711 + t5170*t5735 + t4938*t5740) + t4780*(-1.*t5163*t5455 - 1.*t5455*t5711 - 1.*t5444*t5740 - 1.*t5170*t5752))*var2[5];
  p_output1[4]=t6031*var2[0] + (t4099*t6114 - 1.*t55*t6121)*var2[1] + (t55*t6114 + t4099*t6121)*var2[2] + (t5518*t6277 + t5472*(t6149 + t6177 + t5272*t6244 + t5262*t6255 + t5226*t6264 + t5297*t6277) + t5495*t6284 + t5262*(t6208 + t6210 - 1.*t5499*t6244 - 1.*t5472*t6255 - 1.*t5297*t6284 - 1.*t5226*t6298))*var2[3] + (t5607*t6176 + t5512*(t5915 + t5951 + t6149 + t4957*t6152 + t5172*t6160 + t6177) + t5567*t6194 + t5480*(t5996 + t5998 - 1.*t5466*t6152 + t6208 + t6210 - 1.*t5172*t6218))*var2[4] + (t5879*t6037 + t5390*(t5915 + t5951 + t4932*t6046 + t4938*t6050 + t5163*t6058 + t5170*t6062) + t5950*t6078 + t4780*(t5996 + t5998 - 1.*t5455*t6046 - 1.*t5444*t6050 - 1.*t5170*t6094 - 1.*t5163*t6102))*var2[5] + (0.15121*t5863 + t5872*t5879 - 0.15121*t5885 + t5390*(t5096*t5898 + t5915 + t4892*t5932 + t4925*t5943 + t5951 + t5159*t5961) + t5950*t5972 + t4780*(-1.*t5439*t5932 - 1.*t5415*t5943 - 1.*t5159*t5994 + t5996 + t5998 - 1.*t5096*t6007))*var2[6];
  p_output1[5]=t6506*var2[0] + (t4099*t6588 - 1.*t55*t6593)*var2[1] + (t55*t6588 + t4099*t6593)*var2[2] + (t5472*(t6610 + t5272*t6702 + t5262*t6707) + t5495*t6726 + t5262*(t6673 + t6675 - 1.*t5499*t6702 - 1.*t5472*t6707 - 1.*t5297*t6726 - 1.*t5226*t6745))*var2[3] + (t5512*(t6372 + t6610 + t4957*t6620) + t5567*t6665 + t5480*(t6406 + t6408 - 1.*t5466*t6620 + t6673 + t6675 - 1.*t5172*t6682))*var2[4] + (t6037*t6319 + t5390*(t6372 + t4932*t6513 + t4938*t6517) + t4780*(t6406 + t6408 - 1.*t5455*t6513 - 1.*t5444*t6517 - 1.*t5170*t6559 - 1.*t5163*t6566))*var2[5] + (0.15121*t6310 + t5872*t6319 - 0.15121*t6327 + t5390*(t4892*t6352 + t6372 + t4925*t6388) + t4780*(-1.*t5439*t6352 - 1.*t5415*t6388 - 1.*t5159*t6403 + t6406 + t6408 - 1.*t5096*t6415))*var2[6] + (-0.281210000004*t1294 + t5327*t6429 + t6431 + 4.000000000064e-6*t2264*t6436 + t4694*t6445 + 4.e-6*(-1.*t5357*t6429 - 1.000000000016*t2264*t6436 - 1.*t4712*t6445))*var2[7];
  p_output1[6]=t6763;
  p_output1[7]=t4491;
  p_output1[8]=t4099*t4441 + t4078*t55;
  p_output1[9]=t5472*t5495 + t5262*t5518;
  p_output1[10]=t5512*t5567 + t5480*t5607;
  p_output1[11]=t5390*t6037 + t4780*t6078;
  p_output1[12]=-0.15121*t2620 + 0.15121*t3939 + t5390*t5872 + t4780*t5972;
  p_output1[13]=0.038749*t1694 - 0.281210000004*t2264 + t5327*t6436 + t4694*t6822 + 4.e-6*(-1.*t5357*t6436 - 1.*t4712*t6822);
  p_output1[14]=-4.05160619990483e-7;
  p_output1[15]=(-1.*t4099*t5499 - 1.*t55*t5512)*var2[1] + t6853*var2[2];
  p_output1[16]=t5499*var2[0] - 1.*t55*t5526*var2[1] + t4099*t5526*var2[2] + ((-1.*t4959*t5226 - 1.*t5226*t5262 - 1.*t5272*t5277 - 1.*t5272*t5297)*t6763 + t5262*(t4602*t5226 + t4441*t5277 + t4441*t5297 + t5226*t6763) + t4441*t6904 + t5272*t6913)*var2[3];
  p_output1[17]=t4100*t5594*var2[0] + (t4099*t5466 + t4270*t55*t5594)*var2[1] + (t5466*t55 - 1.*t4099*t4270*t5594)*var2[2] + (t4100*t5548*t6904 + t4100*t5573*t6913 + t6763*(t4270*t5226*t5573 - 1.*t4100*t5297*t5573 - 1.*t4100*t5262*t5580 + t4270*t5272*t5580 + t6950 + t6952) + t5262*(-1.*t4270*t5226*t5548 + t4100*t5297*t5548 - 1.*t4270*t4441*t5580 + t4100*t5580*t6763 + t6974 + t6976))*var2[3] + (t4078*(-1.*t5172*t5573 - 1.*t4957*t5580 + t6950 + t6952) + t4435*t6958 + t4957*t6967 + t5480*(t5172*t5548 + t4435*t5580 + t6974 + t6976))*var2[4];
  p_output1[18]=t4100*t5822*var2[0] + (t4099*t5780 + t4270*t55*t5822)*var2[1] + (t55*t5780 - 1.*t4099*t4270*t5822)*var2[2] + (t4100*t5664*t6904 + t4100*t5785*t6913 + t6763*(t4270*t5226*t5785 - 1.*t4100*t5297*t5785 - 1.*t4100*t5262*t5807 + t4270*t5272*t5807 + t7087 + t7093) + t5262*(-1.*t4270*t5226*t5664 + t4100*t5297*t5664 - 1.*t4270*t4441*t5807 + t4100*t5807*t6763 + t7101 + t7103))*var2[3] + (t5675*t6958 + t5792*t6967 + t4078*(-1.*t5172*t5785 - 1.*t4957*t5807 + t7087 + t7093) + t5480*(t5172*t5664 + t4435*t5807 + t7101 + t7103))*var2[4] + (t4780*(t3973*t5163 + t5170*t5661 + t3973*t5711 + t4035*t5740) + t4114*(-1.*t4932*t5163 - 1.*t4932*t5711 - 1.*t5170*t5735 - 1.*t4938*t5740))*var2[5];
  p_output1[19]=t6284*var2[0] + (t4099*t6194 - 1.*t55*t6298)*var2[1] + (t55*t6194 + t4099*t6298)*var2[2] + (t6031*t6904 + t6277*t6913 + t6763*(-1.*t5272*t6244 - 1.*t5262*t6255 - 1.*t5226*t6264 - 1.*t5297*t6277 + t7257 + t7266) + t5262*(t5297*t6031 + t5226*t6121 + t4441*t6244 + t6255*t6763 + t7278 + t7283))*var2[3] + (t6114*t6958 + t6176*t6967 + t4078*(-1.*t4957*t6152 - 1.*t5172*t6160 + t7149 + t7153 + t7257 + t7266) + t5480*(t5172*t6027 + t4435*t6152 + t7188 + t7192 + t7278 + t7283))*var2[4] + (t4114*(-1.*t4932*t6046 - 1.*t4938*t6050 - 1.*t5163*t6058 - 1.*t5170*t6062 + t7149 + t7153) + t4780*(t5163*t6020 + t5170*t6024 + t3973*t6046 + t4035*t6050 + t7188 + t7192) + t6015*t7216 + t5950*t7220)*var2[5] + (-0.15121*t5994 + 0.15121*t6007 + t4114*(-1.*t5096*t5898 - 1.*t4892*t5932 - 1.*t4925*t5943 - 1.*t5159*t5961 + t7149 + t7153) + t6015*t7170 + t5950*t7182 + t4780*(t5096*t5863 + t5159*t5885 + t2620*t5932 + t3939*t5943 + t7188 + t7192))*var2[6];
  p_output1[20]=t6726*var2[0] + (t4099*t6665 - 1.*t55*t6745)*var2[1] + (t55*t6665 + t4099*t6745)*var2[2] + (t6506*t6904 + t6763*(-1.*t5272*t6702 - 1.*t5262*t6707 + t7457) + t5262*(t5297*t6506 + t5226*t6593 + t4441*t6702 + t6707*t6763 + t7466 + t7476))*var2[3] + (t6588*t6958 + t4078*(-1.*t4957*t6620 + t7345 + t7457) + t5480*(t5172*t6502 + t4435*t6620 + t7362 + t7366 + t7466 + t7476))*var2[4] + (t6487*t7216 + t4114*(-1.*t4932*t6513 - 1.*t4938*t6517 + t7345) + t4780*(t5163*t6491 + t5170*t6499 + t3973*t6513 + t4035*t6517 + t7362 + t7366))*var2[5] + (-0.15121*t6403 + 0.15121*t6415 + t6487*t7170 + t4114*(-1.*t4892*t6352 - 1.*t4925*t6388 + t7345) + t4780*(t5096*t6310 + t5159*t6327 + t2620*t6352 + t3939*t6388 + t7362 + t7366))*var2[6] + (-0.03874900000062*t1294 + 0.281210000008499*t2264 - 4.e-6*t1294*t7379 - 4.e-6*t2264*t7386 + t4694*t7407 + 4.e-6*(t1294*t7379 + t2264*t7386 - 1.*t4712*t7407))*var2[7];
  p_output1[21]=t5472;
  p_output1[22]=t6853;
  p_output1[23]=t4099*t5499 + t55*t5512;
  p_output1[24]=t6763*t6904 + t5262*t6913;
  p_output1[25]=t4078*t6958 + t5480*t6967;
  p_output1[26]=t4114*t7216 + t4780*t7220;
  p_output1[27]=0.15121*t5415 - 0.15121*t5439 + t4114*t7170 + t4780*t7182;
  p_output1[28]=1.e-6*t5327 + 0.28121*t5357 + t6431 - 4.e-6*t2264*t7379 + t4694*t7561 + 4.e-6*(t2264*t7379 - 1.*t4712*t7561);
  p_output1[29]=0.300000000004851;
  p_output1[30]=(-1.*t4099*t5272 - 1.*t5480*t55)*var2[1] + t7583*var2[2];
  p_output1[31]=t5272*var2[0] - 1.*t4959*t55*var2[1] + t4099*t4959*var2[2] + ((t5226*t5472 + t5277*t5499 + t5297*t5499 + t5226*t5526)*t6763 + t5472*(-1.*t4602*t5226 - 1.*t4441*t5277 - 1.*t4441*t5297 - 1.*t5226*t6763) + t5499*t7599 + t4441*t7626)*var2[3];
  p_output1[32]=t4100*t5573*var2[0] + (t4099*t4957 + t4270*t55*t5573)*var2[1] + (t4957*t55 - 1.*t4099*t4270*t5573)*var2[2] + (t4100*t5594*t7599 + t4100*t5548*t7626 + t5472*(t4270*t5226*t5548 - 1.*t4100*t5297*t5548 + t4270*t4441*t5580 - 1.*t4100*t5580*t6763 + t7669 + t7672) + t6763*(t4100*t5472*t5580 - 1.*t4270*t5499*t5580 - 1.*t4270*t5226*t5594 + t4100*t5297*t5594 + t7677 + t7682))*var2[3] + (t5466*t7665 + t5512*(-1.*t5172*t5548 - 1.*t4435*t5580 + t7669 + t7672) + t4078*(t5466*t5580 + t5172*t5594 + t7677 + t7682) + t4435*t7698)*var2[4];
  p_output1[33]=t4100*t5785*var2[0] + (t4270*t55*t5785 + t4099*t5792)*var2[1] + (-1.*t4099*t4270*t5785 + t55*t5792)*var2[2] + (t4100*t5822*t7599 + t4100*t5664*t7626 + t5472*(t4270*t5226*t5664 - 1.*t4100*t5297*t5664 + t4270*t4441*t5807 - 1.*t4100*t5807*t6763 + t7813 + t7814) + t6763*(t4100*t5472*t5807 - 1.*t4270*t5499*t5807 - 1.*t4270*t5226*t5822 + t4100*t5297*t5822 + t7820 + t7824))*var2[3] + (t5780*t7665 + t5675*t7698 + t5512*(-1.*t5172*t5664 - 1.*t4435*t5807 + t7813 + t7814) + t4078*(t5466*t5807 + t5172*t5822 + t7820 + t7824))*var2[4] + (t5390*(-1.*t3973*t5163 - 1.*t5170*t5661 - 1.*t3973*t5711 - 1.*t4035*t5740) + t4114*(t5163*t5455 + t5455*t5711 + t5444*t5740 + t5170*t5752))*var2[5];
  p_output1[34]=t6277*var2[0] + (t4099*t6176 - 1.*t55*t6264)*var2[1] + (t55*t6176 + t4099*t6264)*var2[2] + (t6284*t7599 + t6031*t7626 + t5472*(-1.*t5297*t6031 - 1.*t5226*t6121 - 1.*t4441*t6244 - 1.*t6255*t6763 + t7944 + t7951) + t6763*(t5499*t6244 + t5472*t6255 + t5297*t6284 + t5226*t6298 + t7962 + t7963))*var2[3] + (t6194*t7665 + t6114*t7698 + t5512*(-1.*t5172*t6027 - 1.*t4435*t6152 + t7882 + t7885 + t7944 + t7951) + t4078*(t5466*t6152 + t5172*t6218 + t7895 + t7901 + t7962 + t7963))*var2[4] + (t5390*(-1.*t5163*t6020 - 1.*t5170*t6024 - 1.*t3973*t6046 - 1.*t4035*t6050 + t7882 + t7885) + t4114*(t5455*t6046 + t5444*t6050 + t5170*t6094 + t5163*t6102 + t7895 + t7901) + t5879*t7912 + t6015*t7926)*var2[5] + (0.15121*t5898 - 0.15121*t5961 + t5879*t7875 + t5390*(-1.*t5096*t5863 - 1.*t5159*t5885 - 1.*t2620*t5932 - 1.*t3939*t5943 + t7882 + t7885) + t6015*t7890 + t4114*(t5439*t5932 + t5415*t5943 + t5159*t5994 + t5096*t6007 + t7895 + t7901))*var2[6];
  p_output1[35]=(t6726*t7599 + t6506*t7626 + t5472*(-1.*t5297*t6506 - 1.*t5226*t6593 - 1.*t4441*t6702 - 1.*t6707*t6763 + t8162 + t8167) + t6763*(t5499*t6702 + t5472*t6707 + t5297*t6726 + t5226*t6745 + t8177 + t8180))*var2[3] + (t6665*t7665 + t6588*t7698 + t5512*(-1.*t5172*t6502 - 1.*t4435*t6620 + t8007 + t8020 + t8162 + t8167) + t4078*(t5466*t6620 + t5172*t6682 + t8033 + t8039 + t8177 + t8180))*var2[4] + (t6319*t7912 + t6487*t7926 + t5390*(-1.*t5163*t6491 - 1.*t5170*t6499 - 1.*t3973*t6513 - 1.*t4035*t6517 + t8007 + t8020) + t4114*(t5455*t6513 + t5444*t6517 + t5170*t6559 + t5163*t6566 + t8033 + t8039))*var2[5] + (t6319*t7875 + t6487*t7890 + t5390*(-1.*t5096*t6310 - 1.*t5159*t6327 - 1.*t2620*t6352 - 1.*t3939*t6388 + t8007 + t8020) + t4114*(t5439*t6352 + t5415*t6388 + t5159*t6403 + t5096*t6415 + t8033 + t8039))*var2[6] + (4.000000000064e-6*t2264*t8060 - 4.e-6*t2264*t8082 - 4.e-6*t1294*t8091 + t5327*t8105 + 4.e-6*(-1.000000000016*t2264*t8060 + t2264*t8082 + t1294*t8091 - 1.*t5357*t8105))*var2[7];
  p_output1[36]=t5262;
  p_output1[37]=t7583;
  p_output1[38]=t4099*t5272 + t5480*t55;
  p_output1[39]=t5472*t7599 + t6763*t7626;
  p_output1[40]=t5512*t7665 + t4078*t7698;
  p_output1[41]=t5390*t7912 + t4114*t7926;
  p_output1[42]=-0.15121*t4892 + 0.15121*t4925 + t5390*t7875 + t4114*t7890;
  p_output1[43]=1.e-6*t4694 + 0.28121*t4712 + t5327*t8060 - 4.e-6*t2264*t8091 + 4.e-6*(-1.*t5357*t8060 + t2264*t8091);
  p_output1[44]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void J_dh_FlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
