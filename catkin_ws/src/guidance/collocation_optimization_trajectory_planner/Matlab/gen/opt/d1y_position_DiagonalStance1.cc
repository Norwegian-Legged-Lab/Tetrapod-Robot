/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:27:23 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  double t26;
  double t82;
  double t115;
  double t159;
  double t174;
  double t204;
  double t209;
  double t260;
  double t292;
  double t330;
  double t334;
  double t365;
  double t372;
  double t385;
  double t398;
  double t401;
  double t417;
  double t423;
  double t424;
  double t458;
  double t479;
  double t531;
  double t629;
  double t573;
  double t605;
  double t651;
  double t632;
  double t640;
  double t656;
  double t707;
  double t720;
  double t741;
  double t560;
  double t644;
  double t679;
  double t681;
  double t772;
  double t774;
  double t786;
  double t795;
  double t806;
  double t808;
  double t822;
  double t831;
  double t866;
  double t872;
  double t901;
  double t903;
  double t752;
  double t755;
  double t758;
  double t760;
  double t1004;
  double t1184;
  double t1228;
  double t1241;
  double t1254;
  double t1255;
  double t1265;
  double t1296;
  double t1177;
  double t1186;
  double t1196;
  double t1203;
  double t1335;
  double t1337;
  double t1346;
  double t1348;
  double t1349;
  double t1350;
  double t1456;
  double t1468;
  double t1470;
  double t1551;
  double t1570;
  double t1578;
  double t771;
  double t787;
  double t798;
  double t800;
  double t840;
  double t844;
  double t847;
  double t910;
  double t911;
  double t927;
  double t934;
  double t944;
  double t949;
  double t1777;
  double t1788;
  double t1790;
  double t1710;
  double t1740;
  double t1748;
  double t1823;
  double t1865;
  double t1868;
  double t1055;
  double t1062;
  double t1535;
  double t1589;
  double t1602;
  double t1620;
  double t1624;
  double t1626;
  double t1637;
  double t1660;
  double t1692;
  double t1693;
  double t1774;
  double t1813;
  double t1871;
  double t1875;
  double t1898;
  double t1911;
  double t1916;
  double t1927;
  double t1943;
  double t1955;
  double t1964;
  double t1967;
  double t1995;
  double t2006;
  double t2013;
  double t2030;
  double t2031;
  double t2047;
  double t1480;
  double t1502;
  double t1537;
  double t2099;
  double t2101;
  double t2102;
  double t2116;
  double t2118;
  double t2121;
  double t2159;
  double t2165;
  double t2199;
  double t2200;
  double t2259;
  double t2267;
  double t2269;
  double t2270;
  double t2215;
  double t2227;
  double t2251;
  double t2252;
  double t2477;
  double t2132;
  double t2133;
  double t2137;
  double t2149;
  double t2502;
  double t2506;
  double t2510;
  double t2517;
  double t2520;
  double t2530;
  double t2541;
  double t2542;
  double t2545;
  double t2549;
  double t2582;
  double t2586;
  double t2587;
  double t2589;
  double t2564;
  double t2566;
  double t2569;
  double t2571;
  double t2666;
  double t2658;
  double t2680;
  double t2690;
  double t2706;
  double t2714;
  double t2718;
  double t2735;
  double t2738;
  double t2753;
  double t2762;
  double t2774;
  double t2815;
  double t2826;
  double t2838;
  double t2857;
  double t2874;
  double t2887;
  double t2889;
  double t2891;
  double t2895;
  double t2881;
  double t2883;
  double t2884;
  double t2885;
  double t2954;
  double t2959;
  double t2961;
  double t2972;
  double t2983;
  double t2985;
  double t2991;
  double t2995;
  double t3001;
  double t3005;
  double t3009;
  double t3010;
  double t3020;
  double t3026;
  double t3029;
  double t3014;
  double t3016;
  double t3017;
  double t3034;
  double t3037;
  double t3039;
  double t2058;
  double t2062;
  double t2065;
  double t2066;
  double t3095;
  double t3103;
  double t3108;
  double t3117;
  double t3129;
  double t3146;
  double t3150;
  double t3173;
  double t3177;
  double t3180;
  double t3158;
  double t3159;
  double t3160;
  double t3186;
  double t3192;
  double t3193;
  double t603;
  double t621;
  double t624;
  double t696;
  double t701;
  double t703;
  double t745;
  double t746;
  double t748;
  double t3279;
  double t3280;
  double t3286;
  double t3304;
  double t3306;
  double t3307;
  double t3313;
  double t3315;
  double t3317;
  double t3320;
  double t3322;
  double t3291;
  double t3294;
  double t3299;
  double t3302;
  double t1205;
  double t1218;
  double t1223;
  double t1303;
  double t1316;
  double t1327;
  double t1351;
  double t1353;
  double t1361;
  double t3409;
  double t3417;
  double t3418;
  double t3423;
  double t3396;
  double t3400;
  double t3402;
  double t3405;
  double t3440;
  double t3445;
  double t3582;
  double t3583;
  double t3592;
  double t3600;
  double t3601;
  double t3603;
  double t3606;
  double t3609;
  double t3610;
  double t3612;
  double t3649;
  double t3650;
  double t3654;
  double t3657;
  double t3618;
  double t3622;
  double t3624;
  double t3647;
  double t3747;
  double t3749;
  double t3761;
  double t3767;
  double t3770;
  double t3783;
  double t3784;
  double t3786;
  double t3829;
  double t3838;
  double t3839;
  double t3790;
  double t3798;
  double t3802;
  double t3844;
  double t3845;
  double t3846;
  double t3909;
  double t3910;
  double t3912;
  double t3919;
  double t3920;
  double t3932;
  double t3933;
  double t3964;
  double t3968;
  double t3970;
  double t3942;
  double t3944;
  double t3950;
  double t3973;
  double t3981;
  double t3990;
  double t4090;
  double t4096;
  double t4097;
  double t4123;
  double t4126;
  double t4129;
  double t4133;
  double t4136;
  double t4139;
  double t4151;
  double t4100;
  double t4101;
  double t4102;
  double t4112;
  double t4294;
  double t4298;
  double t4301;
  double t4308;
  double t4277;
  double t4278;
  double t4279;
  double t4283;
  double t4324;
  double t4325;
  double t3465;
  double t3467;
  double t4448;
  double t4451;
  double t4482;
  double t4484;
  double t4502;
  double t4521;
  double t4556;
  double t4554;
  double t4453;
  double t4555;
  double t4557;
  double t4558;
  double t4509;
  double t4572;
  double t4574;
  double t4578;
  double t4597;
  double t4468;
  double t4644;
  double t4534;
  double t4529;
  double t4531;
  double t4541;
  double t4542;
  double t4559;
  double t4562;
  double t4570;
  double t4582;
  double t4583;
  double t4629;
  double t4640;
  double t4643;
  double t4645;
  double t4647;
  double t4648;
  double t4649;
  double t4651;
  double t4652;
  double t4656;
  double t4467;
  double t4675;
  double t4678;
  double t4679;
  double t4680;
  double t4681;
  double t4683;
  double t4684;
  double t4685;
  double t4686;
  double t4689;
  double t4606;
  double t4696;
  double t4596;
  double t4667;
  double t4700;
  double t4660;
  double t4734;
  double t4800;
  double t4853;
  double t4810;
  double t4821;
  double t4890;
  double t4892;
  double t4790;
  double t4858;
  double t4965;
  double t5004;
  double t4841;
  double t4911;
  double t4918;
  double t4923;
  double t4928;
  double t4940;
  double t4941;
  double t4997;
  double t4999;
  double t5001;
  double t5006;
  double t5012;
  double t5014;
  double t5080;
  double t5086;
  double t5090;
  double t5096;
  double t5097;
  double t5102;
  double t5119;
  double t4969;
  double t5187;
  double t5109;
  double t5279;
  double t5280;
  double t5314;
  double t5352;
  double t4850;
  double t4855;
  double t4863;
  double t4874;
  double t4893;
  double t4899;
  double t4902;
  double t5431;
  double t5432;
  double t5435;
  double t4958;
  double t4963;
  double t4978;
  double t4985;
  double t4988;
  double t4989;
  double t4996;
  double t5029;
  double t5030;
  double t5058;
  double t5060;
  double t5061;
  double t5062;
  double t5063;
  double t5113;
  double t5439;
  double t5452;
  double t5453;
  double t5125;
  double t5461;
  double t5462;
  double t5471;
  double t5152;
  double t5153;
  double t5473;
  double t5477;
  double t5478;
  double t5188;
  double t5195;
  double t5198;
  double t5214;
  double t5229;
  double t5235;
  double t5242;
  double t5258;
  double t5328;
  double t5340;
  double t5347;
  double t5353;
  double t5357;
  double t5371;
  double t5372;
  double t5375;
  double t5376;
  double t5379;
  double t5399;
  double t5406;
  double t5408;
  double t5411;
  double t5413;
  double t5422;
  double t5425;
  double t5427;
  double t5428;
  double t5436;
  double t5460;
  double t5472;
  double t5485;
  double t5489;
  double t5493;
  double t5494;
  double t5502;
  double t5504;
  double t5506;
  double t5508;
  double t5512;
  double t5522;
  double t5528;
  double t5529;
  double t5542;
  double t5546;
  double t5548;
  double t5563;
  double t5329;
  double t5321;
  double t5323;
  double t5642;
  double t5645;
  double t5651;
  double t5662;
  double t5666;
  double t5669;
  double t5678;
  double t5679;
  double t5688;
  double t5689;
  double t5696;
  double t5703;
  double t5704;
  double t5711;
  double t5716;
  double t5723;
  double t5732;
  double t5733;
  double t5605;
  double t5607;
  double t5615;
  double t5617;
  double t5620;
  double t5624;
  double t5630;
  double t5845;
  double t5846;
  double t5850;
  double t5859;
  double t5860;
  double t5866;
  double t5874;
  double t5878;
  double t5881;
  double t5882;
  double t5887;
  double t5890;
  double t5893;
  double t5902;
  double t5907;
  double t5909;
  double t5917;
  double t5926;
  double t5973;
  double t5976;
  double t5980;
  double t5982;
  double t5983;
  double t5984;
  double t5986;
  double t5991;
  double t5992;
  double t5993;
  double t6000;
  double t6007;
  double t6014;
  double t6015;
  double t6024;
  double t6036;
  double t6037;
  double t6043;
  double t6104;
  double t6107;
  double t6110;
  double t6117;
  double t6120;
  double t6122;
  double t6126;
  double t6133;
  double t6136;
  double t6141;
  double t6148;
  double t6161;
  double t6170;
  double t6181;
  double t6183;
  double t5578;
  double t5580;
  double t5587;
  double t5590;
  double t6242;
  double t6243;
  double t6245;
  double t6251;
  double t6259;
  double t6261;
  double t6263;
  double t6272;
  double t6277;
  double t6283;
  double t6297;
  double t6303;
  double t6304;
  double t4456;
  double t4462;
  double t4470;
  double t4471;
  double t4472;
  double t4478;
  double t4598;
  double t4600;
  double t4615;
  double t4620;
  double t4623;
  double t4626;
  double t6354;
  double t6359;
  double t6360;
  double t4663;
  double t4665;
  double t4669;
  double t4670;
  double t4672;
  double t4674;
  double t6351;
  double t6352;
  double t6361;
  double t6368;
  double t4697;
  double t6377;
  double t6379;
  double t6381;
  double t6384;
  double t4707;
  double t6404;
  double t6406;
  double t6407;
  double t6420;
  double t4720;
  double t4735;
  double t4752;
  double t4759;
  double t4791;
  double t4797;
  double t4801;
  double t4802;
  double t4803;
  double t4807;
  double t4813;
  double t4820;
  double t4825;
  double t4826;
  double t4829;
  double t4830;
  double t4833;
  double t4838;
  double t4842;
  double t4845;
  double t4846;
  double t4847;
  double t6514;
  double t6519;
  double t6520;
  double t6521;
  double t6523;
  double t6527;
  double t6528;
  double t6530;
  double t6533;
  double t6535;
  double t6538;
  double t6540;
  double t6680;
  double t6684;
  double t6690;
  double t6693;
  double t6695;
  double t6696;
  double t6699;
  double t6700;
  double t6704;
  double t6705;
  double t6708;
  double t6710;
  double t6713;
  double t6714;
  double t6725;
  double t6731;
  double t6733;
  double t6739;
  double t6821;
  double t6824;
  double t6825;
  double t6844;
  double t6845;
  double t6860;
  double t6874;
  double t6876;
  double t6886;
  double t6893;
  double t6894;
  double t6902;
  double t6903;
  double t6904;
  double t6968;
  double t6972;
  double t6980;
  double t6984;
  double t6986;
  double t6987;
  double t6989;
  double t6993;
  double t6994;
  double t6995;
  double t6997;
  double t6998;
  double t7003;
  double t7061;
  double t7065;
  double t7066;
  double t7054;
  double t7055;
  double t7068;
  double t7069;
  double t7071;
  double t7072;
  double t7073;
  double t7074;
  double t7076;
  double t7078;
  double t7079;
  double t7080;
  double t7139;
  double t7140;
  double t7141;
  double t7143;
  double t7145;
  double t7146;
  double t7147;
  double t7150;
  double t7152;
  double t7155;
  double t7159;
  double t7160;
  double t7409;
  double t7410;
  double t7411;
  double t7412;
  double t7415;
  double t7416;
  double t7461;
  double t7463;
  double t7467;
  double t7473;
  double t7475;
  double t7481;
  double t7482;
  double t7483;
  double t7489;
  double t7493;
  double t7545;
  double t7499;
  double t7503;
  double t7505;
  double t7511;
  double t7471;
  double t7479;
  double t7484;
  double t7494;
  double t7558;
  double t7564;
  double t7626;
  double t7603;
  double t7618;
  t26 = -1.*var5[0];
  t82 = t26 + var5[1];
  t115 = Power(t82,-5);
  t159 = -1. + var6[0];
  t174 = -1. + var7[0];
  t204 = 1/t174;
  t209 = -1.*var1[0];
  t260 = t209 + var1[1];
  t292 = t159*t204*t260;
  t330 = t26 + var1[0] + t292;
  t334 = Power(t330,4);
  t365 = Power(t82,-4);
  t372 = Power(t330,3);
  t385 = 1/t82;
  t398 = -1.*t385*t330;
  t401 = 1. + t398;
  t417 = Power(t82,-3);
  t423 = Power(t330,2);
  t424 = Power(t401,2);
  t458 = Power(t82,-2);
  t479 = Power(t401,3);
  t531 = Power(t401,4);
  t629 = Cos(var2[4]);
  t573 = Cos(var2[7]);
  t605 = Sin(var2[7]);
  t651 = Cos(var2[5]);
  t632 = Cos(var2[6]);
  t640 = Sin(var2[5]);
  t656 = Sin(var2[6]);
  t707 = t629*t651*t632;
  t720 = -1.*t629*t640*t656;
  t741 = t707 + t720;
  t560 = Sin(var2[4]);
  t644 = -1.*t629*t632*t640;
  t679 = -1.*t629*t651*t656;
  t681 = t644 + t679;
  t772 = Cos(var2[8]);
  t774 = -1.*t772;
  t786 = 1. + t774;
  t795 = Sin(var2[8]);
  t806 = -1.*t573*t560;
  t808 = -4.e-6*t573*t681;
  t822 = -1.000000000016*t741*t605;
  t831 = t806 + t808 + t822;
  t866 = t573*t741;
  t872 = -1.*t560*t605;
  t901 = -4.e-6*t681*t605;
  t903 = t866 + t872 + t901;
  t752 = 4.e-6*t573*t741;
  t755 = -4.e-6*t560*t605;
  t758 = -1.6e-11*t681*t605;
  t760 = t752 + t755 + t758;
  t1004 = -1. + t772;
  t1184 = -1. + t573;
  t1228 = 4.e-6*t1184*t560;
  t1241 = 1.6e-11*t1184;
  t1254 = 1. + t1241;
  t1255 = t1254*t681;
  t1265 = 4.e-6*t741*t605;
  t1296 = t1228 + t1255 + t1265;
  t1177 = t573*t560;
  t1186 = 4.e-6*t1184*t681;
  t1196 = t741*t605;
  t1203 = t1177 + t1186 + t1196;
  t1335 = -1.*t573;
  t1337 = 1. + t1335;
  t1346 = -1.000000000016*t1337;
  t1348 = 1. + t1346;
  t1349 = t1348*t741;
  t1350 = t1349 + t872 + t901;
  t1456 = -1.*t632;
  t1468 = 1. + t1456;
  t1470 = 0.15121*t1468;
  t1551 = -1.*t629*t651*t632;
  t1570 = t629*t640*t656;
  t1578 = t1551 + t1570;
  t771 = -1.284e-8*var2[8];
  t787 = -1.5499600000248e-7*t786;
  t798 = 2.012840000032e-6*t795;
  t800 = t771 + t787 + t798;
  t840 = 0.503210000016051*t786;
  t844 = 0.03874900000062*t795;
  t847 = t840 + t844;
  t910 = 5.136e-14*var2[8];
  t911 = -0.03874900000062*t786;
  t927 = 0.503210000008*t795;
  t934 = t910 + t911 + t927;
  t944 = -1.000000000016*t786;
  t949 = 1. + t944;
  t1777 = t1348*t681;
  t1788 = -4.e-6*t1578*t605;
  t1790 = t1777 + t1788;
  t1710 = t1254*t1578;
  t1740 = 4.e-6*t681*t605;
  t1748 = t1710 + t1740;
  t1823 = 4.e-6*t1184*t1578;
  t1865 = t681*t605;
  t1868 = t1823 + t1865;
  t1055 = 1.6e-11*t1004;
  t1062 = 1. + t1055;
  t1535 = 0.15121*t656;
  t1589 = -1.2484e-7*var2[7];
  t1602 = -1.5499600000248e-7*t1337;
  t1620 = 1.124840000016e-6*t605;
  t1624 = t1589 + t1602 + t1620;
  t1626 = t1578*t1624;
  t1637 = 0.281210000008499*t1337;
  t1660 = 0.03874900000062*t605;
  t1692 = t1637 + t1660;
  t1693 = t681*t1692;
  t1774 = t1748*t800;
  t1813 = t1790*t847;
  t1871 = t1868*t934;
  t1875 = t949*t1790;
  t1898 = -4.e-6*t1748*t795;
  t1911 = -1.*t1868*t795;
  t1916 = t1875 + t1898 + t1911;
  t1927 = 0.80321*t1916;
  t1943 = t1062*t1748;
  t1955 = 4.e-6*t1004*t1868;
  t1964 = 4.e-6*t1790*t795;
  t1967 = t1943 + t1955 + t1964;
  t1995 = 0.14871*t1967;
  t2006 = 4.e-6*t1004*t1748;
  t2013 = t772*t1868;
  t2030 = t1790*t795;
  t2031 = t2006 + t2013 + t2030;
  t2047 = -0.03875*t2031;
  t1480 = -0.15121*t656;
  t1502 = t1470 + t1480;
  t1537 = t1470 + t1535;
  t2099 = t632*t560*t640;
  t2101 = t651*t560*t656;
  t2102 = t2099 + t2101;
  t2116 = -1.*t651*t632*t560;
  t2118 = t560*t640*t656;
  t2121 = t2116 + t2118;
  t2159 = 4.e-6*t629*t1184;
  t2165 = t1254*t2102;
  t2199 = 4.e-6*t2121*t605;
  t2200 = t2159 + t2165 + t2199;
  t2259 = t629*t573;
  t2267 = 4.e-6*t1184*t2102;
  t2269 = t2121*t605;
  t2270 = t2259 + t2267 + t2269;
  t2215 = t1348*t2121;
  t2227 = -1.*t629*t605;
  t2251 = -4.e-6*t2102*t605;
  t2252 = t2215 + t2227 + t2251;
  t2477 = Sin(var2[3]);
  t2132 = 4.9936e-13*var2[7];
  t2133 = -0.03874900000062*t1337;
  t2137 = 0.281210000004*t605;
  t2149 = t2132 + t2133 + t2137;
  t2502 = -1.*t629*t632*t2477*t640;
  t2506 = -1.*t629*t651*t2477*t656;
  t2510 = t2502 + t2506;
  t2517 = t629*t651*t632*t2477;
  t2520 = -1.*t629*t2477*t640*t656;
  t2530 = t2517 + t2520;
  t2541 = 4.e-6*t1184*t2477*t560;
  t2542 = t1254*t2510;
  t2545 = 4.e-6*t2530*t605;
  t2549 = t2541 + t2542 + t2545;
  t2582 = t573*t2477*t560;
  t2586 = 4.e-6*t1184*t2510;
  t2587 = t2530*t605;
  t2589 = t2582 + t2586 + t2587;
  t2564 = t1348*t2530;
  t2566 = -1.*t2477*t560*t605;
  t2569 = -4.e-6*t2510*t605;
  t2571 = t2564 + t2566 + t2569;
  t2666 = Cos(var2[3]);
  t2658 = -1.*t651*t2477;
  t2680 = -1.*t2666*t560*t640;
  t2690 = t2658 + t2680;
  t2706 = t2666*t651*t560;
  t2714 = -1.*t2477*t640;
  t2718 = t2706 + t2714;
  t2735 = t632*t2690;
  t2738 = -1.*t2718*t656;
  t2753 = t2735 + t2738;
  t2762 = t632*t2718;
  t2774 = t2690*t656;
  t2815 = t2762 + t2774;
  t2826 = -4.e-6*t2666*t629*t1184;
  t2838 = t1254*t2753;
  t2857 = 4.e-6*t2815*t605;
  t2874 = t2826 + t2838 + t2857;
  t2887 = -1.*t2666*t629*t573;
  t2889 = 4.e-6*t1184*t2753;
  t2891 = t2815*t605;
  t2895 = t2887 + t2889 + t2891;
  t2881 = t1348*t2815;
  t2883 = t2666*t629*t605;
  t2884 = -4.e-6*t2753*t605;
  t2885 = t2881 + t2883 + t2884;
  t2954 = -1.*t651*t2477*t560;
  t2959 = -1.*t2666*t640;
  t2961 = t2954 + t2959;
  t2972 = t2666*t651;
  t2983 = -1.*t2477*t560*t640;
  t2985 = t2972 + t2983;
  t2991 = t632*t2961;
  t2995 = -1.*t2985*t656;
  t3001 = t2991 + t2995;
  t3005 = t632*t2985;
  t3009 = t2961*t656;
  t3010 = t3005 + t3009;
  t3020 = t1348*t3010;
  t3026 = -4.e-6*t3001*t605;
  t3029 = t3020 + t3026;
  t3014 = t1254*t3001;
  t3016 = 4.e-6*t3010*t605;
  t3017 = t3014 + t3016;
  t3034 = 4.e-6*t1184*t3001;
  t3037 = t3010*t605;
  t3039 = t3034 + t3037;
  t2058 = -0.15121*t632;
  t2062 = t2058 + t1535;
  t2065 = 0.15121*t632;
  t2066 = t2065 + t1535;
  t3095 = t651*t2477*t560;
  t3103 = t2666*t640;
  t3108 = t3095 + t3103;
  t3117 = -1.*t632*t3108;
  t3129 = t3117 + t2995;
  t3146 = -1.*t3108*t656;
  t3150 = t3005 + t3146;
  t3173 = t1348*t3150;
  t3177 = -4.e-6*t3129*t605;
  t3180 = t3173 + t3177;
  t3158 = t1254*t3129;
  t3159 = 4.e-6*t3150*t605;
  t3160 = t3158 + t3159;
  t3186 = 4.e-6*t1184*t3129;
  t3192 = t3150*t605;
  t3193 = t3186 + t3192;
  t603 = 0.281210000004*t573;
  t621 = -0.03874900000062*t605;
  t624 = 4.9936e-13 + t603 + t621;
  t696 = 1.124840000016e-6*t573;
  t701 = -1.5499600000248e-7*t605;
  t703 = -1.2484e-7 + t696 + t701;
  t745 = 0.03874900000062*t573;
  t746 = 0.281210000008499*t605;
  t748 = t745 + t746;
  t3279 = t632*t3108;
  t3280 = t2985*t656;
  t3286 = t3279 + t3280;
  t3304 = t629*t573*t2477;
  t3306 = -4.e-6*t573*t3150;
  t3307 = -1.000000000016*t3286*t605;
  t3313 = t3304 + t3306 + t3307;
  t3315 = t573*t3286;
  t3317 = t629*t2477*t605;
  t3320 = -4.e-6*t3150*t605;
  t3322 = t3315 + t3317 + t3320;
  t3291 = 4.e-6*t573*t3286;
  t3294 = 4.e-6*t629*t2477*t605;
  t3299 = -1.6e-11*t3150*t605;
  t3302 = t3291 + t3294 + t3299;
  t1205 = 0.503210000008*t772;
  t1218 = -0.03874900000062*t795;
  t1223 = 5.136e-14 + t1205 + t1218;
  t1303 = 2.012840000032e-6*t772;
  t1316 = -1.5499600000248e-7*t795;
  t1327 = -1.284e-8 + t1303 + t1316;
  t1351 = 0.03874900000062*t772;
  t1353 = 0.503210000016051*t795;
  t1361 = t1351 + t1353;
  t3409 = -4.e-6*t629*t1184*t2477;
  t3417 = t1254*t3150;
  t3418 = 4.e-6*t3286*t605;
  t3423 = t3409 + t3417 + t3418;
  t3396 = -1.*t629*t573*t2477;
  t3400 = 4.e-6*t1184*t3150;
  t3402 = t3286*t605;
  t3405 = t3396 + t3400 + t3402;
  t3440 = t1348*t3286;
  t3445 = t3440 + t3317 + t3320;
  t3582 = t2666*t629*t632*t640;
  t3583 = t2666*t629*t651*t656;
  t3592 = t3582 + t3583;
  t3600 = -1.*t2666*t629*t651*t632;
  t3601 = t2666*t629*t640*t656;
  t3603 = t3600 + t3601;
  t3606 = -4.e-6*t2666*t1184*t560;
  t3609 = t1254*t3592;
  t3610 = 4.e-6*t3603*t605;
  t3612 = t3606 + t3609 + t3610;
  t3649 = -1.*t2666*t573*t560;
  t3650 = 4.e-6*t1184*t3592;
  t3654 = t3603*t605;
  t3657 = t3649 + t3650 + t3654;
  t3618 = t1348*t3603;
  t3622 = t2666*t560*t605;
  t3624 = -4.e-6*t3592*t605;
  t3647 = t3618 + t3622 + t3624;
  t3747 = t651*t2477;
  t3749 = t2666*t560*t640;
  t3761 = t3747 + t3749;
  t3767 = -1.*t3761*t656;
  t3770 = t2762 + t3767;
  t3783 = t632*t3761;
  t3784 = t2718*t656;
  t3786 = t3783 + t3784;
  t3829 = t1348*t3786;
  t3838 = -4.e-6*t3770*t605;
  t3839 = t3829 + t3838;
  t3790 = t1254*t3770;
  t3798 = 4.e-6*t3786*t605;
  t3802 = t3790 + t3798;
  t3844 = 4.e-6*t1184*t3770;
  t3845 = t3786*t605;
  t3846 = t3844 + t3845;
  t3909 = -1.*t2666*t651*t560;
  t3910 = t2477*t640;
  t3912 = t3909 + t3910;
  t3919 = -1.*t632*t3912;
  t3920 = t3919 + t3767;
  t3932 = -1.*t3912*t656;
  t3933 = t3783 + t3932;
  t3964 = t1348*t3933;
  t3968 = -4.e-6*t3920*t605;
  t3970 = t3964 + t3968;
  t3942 = t1254*t3920;
  t3944 = 4.e-6*t3933*t605;
  t3950 = t3942 + t3944;
  t3973 = 4.e-6*t1184*t3920;
  t3981 = t3933*t605;
  t3990 = t3973 + t3981;
  t4090 = t632*t3912;
  t4096 = t3761*t656;
  t4097 = t4090 + t4096;
  t4123 = -4.e-6*t573*t3933;
  t4126 = -1.000000000016*t4097*t605;
  t4129 = t2887 + t4123 + t4126;
  t4133 = t573*t4097;
  t4136 = -1.*t2666*t629*t605;
  t4139 = -4.e-6*t3933*t605;
  t4151 = t4133 + t4136 + t4139;
  t4100 = 4.e-6*t573*t4097;
  t4101 = -4.e-6*t2666*t629*t605;
  t4102 = -1.6e-11*t3933*t605;
  t4112 = t4100 + t4101 + t4102;
  t4294 = 4.e-6*t2666*t629*t1184;
  t4298 = t1254*t3933;
  t4301 = 4.e-6*t4097*t605;
  t4308 = t4294 + t4298 + t4301;
  t4277 = t2666*t629*t573;
  t4278 = 4.e-6*t1184*t3933;
  t4279 = t4097*t605;
  t4283 = t4277 + t4278 + t4279;
  t4324 = t1348*t4097;
  t4325 = t4324 + t4136 + t4139;
  t3465 = -4.e-6*t3423*t795;
  t3467 = -1.*t3405*t795;
  t4448 = Cos(var2[17]);
  t4451 = Sin(var2[17]);
  t4482 = Cos(var2[16]);
  t4484 = -1.*t4482;
  t4502 = 1. + t4484;
  t4521 = Sin(var2[16]);
  t4556 = Cos(var2[15]);
  t4554 = Sin(var2[15]);
  t4453 = 2.8e-11*t4451;
  t4555 = -1.*t629*t651*t4554;
  t4557 = -1.*t4556*t629*t640;
  t4558 = t4555 + t4557;
  t4509 = -2.8e-11*t4502;
  t4572 = t4556*t629*t651;
  t4574 = -1.*t629*t4554*t640;
  t4578 = t4572 + t4574;
  t4597 = -4.e-6*t4451;
  t4468 = 7.e-6*t4451;
  t4644 = 4.e-6*t4502;
  t4534 = -7.e-6*t4502;
  t4529 = t4509 + t4521;
  t4531 = t4529*t560;
  t4541 = -4.e-6*t4521;
  t4542 = t4534 + t4541;
  t4559 = t4542*t4558;
  t4562 = -1.000000000016*t4502;
  t4570 = 1. + t4562;
  t4582 = t4570*t4578;
  t4583 = t4531 + t4559 + t4582;
  t4629 = -1.000000000049*t4502;
  t4640 = 1. + t4629;
  t4643 = t4640*t560;
  t4645 = -7.e-6*t4521;
  t4647 = t4644 + t4645;
  t4648 = t4647*t4558;
  t4649 = -1.*t4521;
  t4651 = t4509 + t4649;
  t4652 = t4651*t4578;
  t4656 = t4643 + t4648 + t4652;
  t4467 = -4.e-6*t4448;
  t4675 = 7.e-6*t4521;
  t4678 = t4644 + t4675;
  t4679 = t4678*t560;
  t4680 = -6.5e-11*t4502;
  t4681 = 1. + t4680;
  t4683 = t4681*t4558;
  t4684 = 4.e-6*t4521;
  t4685 = t4534 + t4684;
  t4686 = t4685*t4578;
  t4689 = t4679 + t4683 + t4686;
  t4606 = -1.*t4448;
  t4696 = -2.8e-11*t4451;
  t4596 = -7.e-6*t4448;
  t4667 = 4.e-6*t4448;
  t4700 = -7.e-6*t4451;
  t4660 = 7.e-6*t4448;
  t4734 = 4.e-6*t4451;
  t4800 = 2.8e-11*t4521;
  t4853 = 1. + t4606;
  t4810 = 7.e-6*t4482;
  t4821 = 4.e-6*t4482;
  t4890 = -1. + t4448;
  t4892 = 4.e-6*t4890;
  t4790 = -7.e-6*t4482;
  t4858 = 7.e-6*t4853;
  t4965 = 2.8e-11*t4853;
  t5004 = -2.8e-11*t4521;
  t4841 = -4.e-6*t4482;
  t4911 = t4810 + t4684;
  t4918 = t4911*t560;
  t4923 = -6.5e-11*t4521*t4558;
  t4928 = t4821 + t4645;
  t4940 = t4928*t4578;
  t4941 = t4918 + t4923 + t4940;
  t4997 = -1.000000000049*t4521*t560;
  t4999 = t4790 + t4684;
  t5001 = t4999*t4558;
  t5006 = t4484 + t5004;
  t5012 = t5006*t4578;
  t5014 = t4997 + t5001 + t5012;
  t5080 = t4482 + t5004;
  t5086 = t5080*t560;
  t5090 = t4841 + t4645;
  t5096 = t5090*t4558;
  t5097 = -1.000000000016*t4521*t4578;
  t5102 = t5086 + t5096 + t5097;
  t5119 = -2.8e-11*t4853;
  t4969 = -1.*t4451;
  t5187 = 4.e-6*t4853;
  t5109 = -7.e-6*t4853;
  t5279 = -1.*t4556;
  t5280 = 1. + t5279;
  t5314 = -0.15121*t5280;
  t5352 = 7.e-6*t4502;
  t4850 = 2.826290000000002e-7*var2[17];
  t4855 = -2.18904205e-16*t4853;
  t4863 = t4858 + t4734;
  t4874 = -0.5031510000080001*t4863;
  t4893 = t4892 + t4468;
  t4899 = -0.038575000014*t4893;
  t4902 = t4850 + t4855 + t4874 + t4899;
  t5431 = -1.*t4556*t629*t651;
  t5432 = t629*t4554*t640;
  t5435 = t5431 + t5432;
  t4958 = 1.1305160000000008e-12*var2[17];
  t4963 = -0.03857500001589017*t4853;
  t4978 = t4965 + t4969;
  t4985 = -0.5031510000080001*t4978;
  t4988 = t4892 + t4700;
  t4989 = -3.367757e-6*t4988;
  t4996 = t4958 + t4963 + t4985 + t4989;
  t5029 = -1.9784030000000015e-12*var2[17];
  t5030 = -0.5031510000160505*t4853;
  t5058 = t4858 + t4597;
  t5060 = -3.367757e-6*t5058;
  t5061 = t4965 + t4451;
  t5062 = -0.038575000014*t5061;
  t5063 = t5029 + t5030 + t5060 + t5062;
  t5113 = t5109 + t4597;
  t5439 = t4685*t4558;
  t5452 = t4681*t5435;
  t5453 = t5439 + t5452;
  t5125 = t5119 + t4451;
  t5461 = t4651*t4558;
  t5462 = t4647*t5435;
  t5471 = t5461 + t5462;
  t5152 = -1.000000000016*t4853;
  t5153 = 1. + t5152;
  t5473 = t4570*t4558;
  t5477 = t4542*t5435;
  t5478 = t5473 + t5477;
  t5188 = t5187 + t4700;
  t5195 = -1.000000000049*t4853;
  t5198 = 1. + t5195;
  t5214 = t5119 + t4969;
  t5229 = -6.5e-11*t4853;
  t5235 = 1. + t5229;
  t5242 = t5187 + t4468;
  t5258 = t5109 + t4734;
  t5328 = -0.15121*t4554;
  t5340 = -2.7726089999999997e-12*var2[16];
  t5347 = -0.2812110000084994*t4502;
  t5353 = t5352 + t4541;
  t5357 = -1.8134809999999998e-6*t5353;
  t5371 = 2.8e-11*t4502;
  t5372 = t5371 + t4521;
  t5375 = -0.038749000006999997*t5372;
  t5376 = t5340 + t5347 + t5357 + t5375;
  t5379 = t5376*t4558;
  t5399 = 3.9608699999999997e-7*var2[16];
  t5406 = -1.1787626499999999e-16*t4502;
  t5408 = t5352 + t4684;
  t5411 = -0.281211000004*t5408;
  t5413 = -1. + t4482;
  t5422 = 4.e-6*t5413;
  t5425 = t5422 + t4675;
  t5427 = -0.038749000006999997*t5425;
  t5428 = t5399 + t5406 + t5411 + t5427;
  t5436 = t5428*t5435;
  t5460 = t4902*t5453;
  t5472 = t4996*t5471;
  t5485 = t5063*t5478;
  t5489 = t5113*t5453;
  t5493 = t5125*t5471;
  t5494 = t5153*t5478;
  t5502 = t5489 + t5493 + t5494;
  t5504 = -0.80315*t5502;
  t5506 = t5188*t5453;
  t5508 = t5198*t5471;
  t5512 = t5214*t5478;
  t5522 = t5506 + t5508 + t5512;
  t5528 = -0.038576*t5522;
  t5529 = t5235*t5453;
  t5542 = t5242*t5471;
  t5546 = t5258*t5478;
  t5548 = t5529 + t5542 + t5546;
  t5563 = -0.148715*t5548;
  t5329 = t5314 + t5328;
  t5321 = 0.15121*t4554;
  t5323 = t5314 + t5321;
  t5642 = t651*t4554*t560;
  t5645 = t4556*t560*t640;
  t5651 = t5642 + t5645;
  t5662 = -1.*t4556*t651*t560;
  t5666 = t4554*t560*t640;
  t5669 = t5662 + t5666;
  t5678 = t629*t4529;
  t5679 = t4542*t5651;
  t5688 = t4570*t5669;
  t5689 = t5678 + t5679 + t5688;
  t5696 = t4640*t629;
  t5703 = t4647*t5651;
  t5704 = t4651*t5669;
  t5711 = t5696 + t5703 + t5704;
  t5716 = t629*t4678;
  t5723 = t4681*t5651;
  t5732 = t4685*t5669;
  t5733 = t5716 + t5723 + t5732;
  t5605 = 1.5843479999999999e-12*var2[16];
  t5607 = -0.03874900000889869*t4502;
  t5615 = t5371 + t4649;
  t5617 = -0.281211000004*t5615;
  t5620 = t5422 + t4645;
  t5624 = -1.8134809999999998e-6*t5620;
  t5630 = t5605 + t5607 + t5617 + t5624;
  t5845 = -1.*t629*t651*t4554*t2477;
  t5846 = -1.*t4556*t629*t2477*t640;
  t5850 = t5845 + t5846;
  t5859 = t4556*t629*t651*t2477;
  t5860 = -1.*t629*t4554*t2477*t640;
  t5866 = t5859 + t5860;
  t5874 = t4529*t2477*t560;
  t5878 = t4542*t5850;
  t5881 = t4570*t5866;
  t5882 = t5874 + t5878 + t5881;
  t5887 = t4640*t2477*t560;
  t5890 = t4647*t5850;
  t5893 = t4651*t5866;
  t5902 = t5887 + t5890 + t5893;
  t5907 = t4678*t2477*t560;
  t5909 = t4681*t5850;
  t5917 = t4685*t5866;
  t5926 = t5907 + t5909 + t5917;
  t5973 = -1.*t4554*t2718;
  t5976 = t4556*t2690;
  t5980 = t5973 + t5976;
  t5982 = t4556*t2718;
  t5983 = t4554*t2690;
  t5984 = t5982 + t5983;
  t5986 = -1.*t2666*t629*t4529;
  t5991 = t4542*t5980;
  t5992 = t4570*t5984;
  t5993 = t5986 + t5991 + t5992;
  t6000 = -1.*t4640*t2666*t629;
  t6007 = t4647*t5980;
  t6014 = t4651*t5984;
  t6015 = t6000 + t6007 + t6014;
  t6024 = -1.*t2666*t629*t4678;
  t6036 = t4681*t5980;
  t6037 = t4685*t5984;
  t6043 = t6024 + t6036 + t6037;
  t6104 = t4554*t2961;
  t6107 = t4556*t2985;
  t6110 = t6104 + t6107;
  t6117 = t4556*t2961;
  t6120 = -1.*t4554*t2985;
  t6122 = t6117 + t6120;
  t6126 = t4685*t6110;
  t6133 = t4681*t6122;
  t6136 = t6126 + t6133;
  t6141 = t4651*t6110;
  t6148 = t4647*t6122;
  t6161 = t6141 + t6148;
  t6170 = t4570*t6110;
  t6181 = t4542*t6122;
  t6183 = t6170 + t6181;
  t5578 = -0.15121*t4556;
  t5580 = t5578 + t5328;
  t5587 = 0.15121*t4556;
  t5590 = t5587 + t5328;
  t6242 = -1.*t4554*t3108;
  t6243 = t6242 + t6107;
  t6245 = -1.*t4556*t3108;
  t6251 = t6245 + t6120;
  t6259 = t4685*t6243;
  t6261 = t4681*t6251;
  t6263 = t6259 + t6261;
  t6272 = t4651*t6243;
  t6277 = t4647*t6251;
  t6283 = t6272 + t6277;
  t6297 = t4570*t6243;
  t6303 = t4542*t6251;
  t6304 = t6297 + t6303;
  t4456 = t4448 + t4453;
  t4462 = -0.038575000014*t4456;
  t4470 = t4467 + t4468;
  t4471 = -3.367757e-6*t4470;
  t4472 = -0.5031510000160505*t4451;
  t4478 = -1.9784030000000015e-12 + t4462 + t4471 + t4472;
  t4598 = t4596 + t4597;
  t4600 = -3.367757e-6*t4598;
  t4615 = t4606 + t4453;
  t4620 = -0.5031510000080001*t4615;
  t4623 = -0.03857500001589017*t4451;
  t4626 = 1.1305160000000008e-12 + t4600 + t4620 + t4623;
  t6354 = t4556*t3108;
  t6359 = t4554*t2985;
  t6360 = t6354 + t6359;
  t4663 = t4660 + t4597;
  t4665 = -0.038575000014*t4663;
  t4669 = t4667 + t4468;
  t4670 = -0.5031510000080001*t4669;
  t4672 = -2.18904205e-16*t4451;
  t4674 = 2.826290000000002e-7 + t4665 + t4670 + t4672;
  t6351 = -1.*t629*t4529*t2477;
  t6352 = t4542*t6243;
  t6361 = t4570*t6360;
  t6368 = t6351 + t6352 + t6361;
  t4697 = t4448 + t4696;
  t6377 = -1.*t4640*t629*t2477;
  t6379 = t4647*t6243;
  t6381 = t4651*t6360;
  t6384 = t6377 + t6379 + t6381;
  t4707 = t4467 + t4700;
  t6404 = -1.*t629*t4678*t2477;
  t6406 = t4681*t6243;
  t6407 = t4685*t6360;
  t6420 = t6404 + t6406 + t6407;
  t4720 = t4606 + t4696;
  t4735 = t4596 + t4734;
  t4752 = t4667 + t4700;
  t4759 = t4660 + t4734;
  t4791 = t4790 + t4541;
  t4797 = -1.8134809999999998e-6*t4791;
  t4801 = t4484 + t4800;
  t4802 = -0.281211000004*t4801;
  t4803 = -0.03874900000889869*t4521;
  t4807 = 1.5843479999999999e-12 + t4797 + t4802 + t4803;
  t4813 = t4810 + t4541;
  t4820 = -0.038749000006999997*t4813;
  t4825 = t4821 + t4675;
  t4826 = -0.281211000004*t4825;
  t4829 = -1.1787626499999999e-16*t4521;
  t4830 = 3.9608699999999997e-7 + t4820 + t4826 + t4829;
  t4833 = t4482 + t4800;
  t4838 = -0.038749000006999997*t4833;
  t4842 = t4841 + t4675;
  t4845 = -1.8134809999999998e-6*t4842;
  t4846 = -0.2812110000084994*t4521;
  t4847 = -2.7726089999999997e-12 + t4838 + t4845 + t4846;
  t6514 = -1.*t629*t4911*t2477;
  t6519 = -6.5e-11*t4521*t6243;
  t6520 = t4928*t6360;
  t6521 = t6514 + t6519 + t6520;
  t6523 = 1.000000000049*t629*t4521*t2477;
  t6527 = t4999*t6243;
  t6528 = t5006*t6360;
  t6530 = t6523 + t6527 + t6528;
  t6533 = -1.*t629*t5080*t2477;
  t6535 = t5090*t6243;
  t6538 = -1.000000000016*t4521*t6360;
  t6540 = t6533 + t6535 + t6538;
  t6680 = t2666*t629*t651*t4554;
  t6684 = t4556*t2666*t629*t640;
  t6690 = t6680 + t6684;
  t6693 = -1.*t4556*t2666*t629*t651;
  t6695 = t2666*t629*t4554*t640;
  t6696 = t6693 + t6695;
  t6699 = -1.*t2666*t4529*t560;
  t6700 = t4542*t6690;
  t6704 = t4570*t6696;
  t6705 = t6699 + t6700 + t6704;
  t6708 = -1.*t4640*t2666*t560;
  t6710 = t4647*t6690;
  t6713 = t4651*t6696;
  t6714 = t6708 + t6710 + t6713;
  t6725 = -1.*t2666*t4678*t560;
  t6731 = t4681*t6690;
  t6733 = t4685*t6696;
  t6739 = t6725 + t6731 + t6733;
  t6821 = t4554*t2718;
  t6824 = t4556*t3761;
  t6825 = t6821 + t6824;
  t6844 = -1.*t4554*t3761;
  t6845 = t5982 + t6844;
  t6860 = t4685*t6825;
  t6874 = t4681*t6845;
  t6876 = t6860 + t6874;
  t6886 = t4651*t6825;
  t6893 = t4647*t6845;
  t6894 = t6886 + t6893;
  t6902 = t4570*t6825;
  t6903 = t4542*t6845;
  t6904 = t6902 + t6903;
  t6968 = -1.*t4554*t3912;
  t6972 = t6968 + t6824;
  t6980 = -1.*t4556*t3912;
  t6984 = t6980 + t6844;
  t6986 = t4685*t6972;
  t6987 = t4681*t6984;
  t6989 = t6986 + t6987;
  t6993 = t4651*t6972;
  t6994 = t4647*t6984;
  t6995 = t6993 + t6994;
  t6997 = t4570*t6972;
  t6998 = t4542*t6984;
  t7003 = t6997 + t6998;
  t7061 = t4556*t3912;
  t7065 = t4554*t3761;
  t7066 = t7061 + t7065;
  t7054 = t2666*t629*t4529;
  t7055 = t4542*t6972;
  t7068 = t4570*t7066;
  t7069 = t7054 + t7055 + t7068;
  t7071 = t4640*t2666*t629;
  t7072 = t4647*t6972;
  t7073 = t4651*t7066;
  t7074 = t7071 + t7072 + t7073;
  t7076 = t2666*t629*t4678;
  t7078 = t4681*t6972;
  t7079 = t4685*t7066;
  t7080 = t7076 + t7078 + t7079;
  t7139 = t2666*t629*t4911;
  t7140 = -6.5e-11*t4521*t6972;
  t7141 = t4928*t7066;
  t7143 = t7139 + t7140 + t7141;
  t7145 = -1.000000000049*t2666*t629*t4521;
  t7146 = t4999*t6972;
  t7147 = t5006*t7066;
  t7150 = t7145 + t7146 + t7147;
  t7152 = t2666*t629*t5080;
  t7155 = t5090*t6972;
  t7159 = -1.000000000016*t4521*t7066;
  t7160 = t7152 + t7155 + t7159;
  t7409 = Power(t629,2);
  t7410 = Power(t651,2);
  t7411 = t7409*t7410;
  t7412 = Power(t3108,2);
  t7415 = t7411 + t7412;
  t7416 = 1/t7415;
  t7461 = Cos(var2[9]);
  t7463 = -1.*t7461;
  t7467 = 1. + t7463;
  t7473 = Sin(var2[9]);
  t7475 = -0.15121*t7473;
  t7481 = Cos(var2[12]);
  t7482 = -1.*t7481;
  t7483 = 1. + t7482;
  t7489 = Sin(var2[12]);
  t7493 = 0.15121*t7489;
  t7545 = -0.15121*t7461;
  t7499 = -0.15121*t7467;
  t7503 = t7499 + t7475;
  t7505 = 0.15121*t7483;
  t7511 = t7505 + t7493;
  t7471 = 0.15121*t7467;
  t7479 = t7471 + t7475;
  t7484 = -0.15121*t7483;
  t7494 = t7484 + t7493;
  t7558 = t7461*t3761;
  t7564 = -1.*t7473*t3761;
  t7626 = 0.15121*t7481;
  t7603 = t7481*t3761;
  t7618 = -1.*t7489*t3761;
  p_output1[0]=var3[0] + (t1624*t2102 + t1692*t2121 + t2149*t629 + t1502*t560*t640 - 1.*t1537*t560*t651 + 0.14871*(t1062*t2200 + 4.e-6*t1004*t2270 + 4.e-6*t2252*t795) - 0.03875*(4.e-6*t1004*t2200 + t2270*t772 + t2252*t795) + t2200*t800 + t2252*t847 + t2270*t934 + 0.80321*(-4.e-6*t2200*t795 - 1.*t2270*t795 + t2252*t949))*var3[4] + (t1626 + t1693 + t1774 + t1813 + t1871 + t1927 + t1995 + t2047 - 1.*t1537*t629*t640 - 1.*t1502*t629*t651)*var3[5] + (t1626 + t1693 + t1774 + t1813 + t1871 + t1927 + t1995 + t2047 - 1.*t2062*t629*t640 + t2066*t629*t651)*var3[6] + (t560*t624 + t681*t703 + t741*t748 + t760*t800 + t831*t847 + 0.14871*(t1062*t760 + 4.e-6*t795*t831 + 4.e-6*t1004*t903) - 0.03875*(4.e-6*t1004*t760 + t795*t831 + t772*t903) + t903*t934 + 0.80321*(-4.e-6*t760*t795 - 1.*t795*t903 + t831*t949))*var3[7] + (t1203*t1223 + t1296*t1327 + t1350*t1361 - 0.03875*(t1350*t772 - 1.*t1203*t795 - 4.e-6*t1296*t795) + 0.14871*(4.e-6*t1350*t772 - 4.e-6*t1203*t795 - 1.6e-11*t1296*t795) + 0.80321*(-1.*t1203*t772 - 4.e-6*t1296*t772 - 1.000000000016*t1350*t795))*var3[8] + 5.*t385*t531*var4[0] + 20.*t330*t458*t479*var4[10] - 5.*t385*t531*var4[10] + 30.*t417*t423*t424*var4[20] - 20.*t330*t458*t479*var4[20] + 20.*t365*t372*t401*var4[30] - 30.*t417*t423*t424*var4[30] + 5.*t115*t334*var4[40] - 20.*t365*t372*t401*var4[40] - 5.*t115*t334*var4[50];
  p_output1[1]=var3[1] + (t1502*t2690 + t1537*t2718 + t1624*t2753 + t1692*t2815 - 1.*t2149*t2666*t629 + 0.14871*(t1062*t2874 + 4.e-6*t1004*t2895 + 4.e-6*t2885*t795) - 0.03875*(4.e-6*t1004*t2874 + t2895*t772 + t2885*t795) + t2874*t800 + t2885*t847 + t2895*t934 + 0.80321*(-4.e-6*t2874*t795 - 1.*t2895*t795 + t2885*t949))*var3[3] + (t1624*t2510 + t1692*t2530 + t2149*t2477*t560 - 1.*t1502*t2477*t629*t640 + t1537*t2477*t629*t651 + 0.14871*(t1062*t2549 + 4.e-6*t1004*t2589 + 4.e-6*t2571*t795) - 0.03875*(4.e-6*t1004*t2549 + t2589*t772 + t2571*t795) + t2549*t800 + t2571*t847 + t2589*t934 + 0.80321*(-4.e-6*t2549*t795 - 1.*t2589*t795 + t2571*t949))*var3[4] + (t1502*t2961 + t1537*t2985 + t1624*t3001 + t1692*t3010 + 0.14871*(t1062*t3017 + 4.e-6*t1004*t3039 + 4.e-6*t3029*t795) - 0.03875*(4.e-6*t1004*t3017 + t3039*t772 + t3029*t795) + t3017*t800 + t3029*t847 + t3039*t934 + 0.80321*(-4.e-6*t3017*t795 - 1.*t3039*t795 + t3029*t949))*var3[5] + (t2062*t2985 + t2066*t3108 + t1624*t3129 + t1692*t3150 + 0.14871*(t1062*t3160 + 4.e-6*t1004*t3193 + 4.e-6*t3180*t795) - 0.03875*(4.e-6*t1004*t3160 + t3193*t772 + t3180*t795) + t3160*t800 + t3180*t847 + t3193*t934 + 0.80321*(-4.e-6*t3160*t795 - 1.*t3193*t795 + t3180*t949))*var3[6] + (-1.*t2477*t624*t629 + t3150*t703 + t3286*t748 + 0.14871*(t1062*t3302 + 4.e-6*t1004*t3322 + 4.e-6*t3313*t795) - 0.03875*(4.e-6*t1004*t3302 + t3322*t772 + t3313*t795) + t3302*t800 + t3313*t847 + t3322*t934 + 0.80321*(-4.e-6*t3302*t795 - 1.*t3322*t795 + t3313*t949))*var3[7] + (t1223*t3405 + t1327*t3423 + t1361*t3445 - 0.03875*(t3465 + t3467 + t3445*t772) + 0.14871*(4.e-6*t3445*t772 - 4.e-6*t3405*t795 - 1.6e-11*t3423*t795) + 0.80321*(-1.*t3405*t772 - 4.e-6*t3423*t772 - 1.000000000016*t3445*t795))*var3[8] + 5.*t385*t531*var4[1] + 20.*t330*t458*t479*var4[11] - 5.*t385*t531*var4[11] + 30.*t417*t423*t424*var4[21] - 20.*t330*t458*t479*var4[21] + 20.*t365*t372*t401*var4[31] - 30.*t417*t423*t424*var4[31] + 5.*t115*t334*var4[41] - 20.*t365*t372*t401*var4[41] - 5.*t115*t334*var4[51];
  p_output1[2]=var3[2] + (t1502*t2985 + t1537*t3108 + t1624*t3150 + t1692*t3286 - 1.*t2149*t2477*t629 + 0.14871*(4.e-6*t1004*t3405 + t1062*t3423 + 4.e-6*t3445*t795) - 0.03875*(4.e-6*t1004*t3423 + t3405*t772 + t3445*t795) + t3423*t800 + t3445*t847 + t3405*t934 + 0.80321*(t3465 + t3467 + t3445*t949))*var3[3] + (t1624*t3592 + t1692*t3603 - 1.*t2149*t2666*t560 + t1502*t2666*t629*t640 - 1.*t1537*t2666*t629*t651 + 0.14871*(t1062*t3612 + 4.e-6*t1004*t3657 + 4.e-6*t3647*t795) - 0.03875*(4.e-6*t1004*t3612 + t3657*t772 + t3647*t795) + t3612*t800 + t3647*t847 + t3657*t934 + 0.80321*(-4.e-6*t3612*t795 - 1.*t3657*t795 + t3647*t949))*var3[4] + (t1502*t2718 + t1537*t3761 + t1624*t3770 + t1692*t3786 + 0.14871*(t1062*t3802 + 4.e-6*t1004*t3846 + 4.e-6*t3839*t795) - 0.03875*(4.e-6*t1004*t3802 + t3846*t772 + t3839*t795) + t3802*t800 + t3839*t847 + t3846*t934 + 0.80321*(-4.e-6*t3802*t795 - 1.*t3846*t795 + t3839*t949))*var3[5] + (t2062*t3761 + t2066*t3912 + t1624*t3920 + t1692*t3933 + 0.14871*(t1062*t3950 + 4.e-6*t1004*t3990 + 4.e-6*t3970*t795) - 0.03875*(4.e-6*t1004*t3950 + t3990*t772 + t3970*t795) + t3950*t800 + t3970*t847 + t3990*t934 + 0.80321*(-4.e-6*t3950*t795 - 1.*t3990*t795 + t3970*t949))*var3[6] + (t2666*t624*t629 + t3933*t703 + t4097*t748 + 0.14871*(t1062*t4112 + 4.e-6*t1004*t4151 + 4.e-6*t4129*t795) - 0.03875*(4.e-6*t1004*t4112 + t4151*t772 + t4129*t795) + t4112*t800 + t4129*t847 + t4151*t934 + 0.80321*(-4.e-6*t4112*t795 - 1.*t4151*t795 + t4129*t949))*var3[7] + (t1223*t4283 + t1327*t4308 + t1361*t4325 - 0.03875*(t4325*t772 - 1.*t4283*t795 - 4.e-6*t4308*t795) + 0.14871*(4.e-6*t4325*t772 - 4.e-6*t4283*t795 - 1.6e-11*t4308*t795) + 0.80321*(-1.*t4283*t772 - 4.e-6*t4308*t772 - 1.000000000016*t4325*t795))*var3[8] + 5.*t385*t531*var4[2] + 20.*t330*t458*t479*var4[12] - 5.*t385*t531*var4[12] + 30.*t417*t423*t424*var4[22] - 20.*t330*t458*t479*var4[22] + 20.*t365*t372*t401*var4[32] - 30.*t417*t423*t424*var4[32] + 5.*t115*t334*var4[42] - 20.*t365*t372*t401*var4[42] - 5.*t115*t334*var4[52];
  p_output1[3]=var3[0] + (t5428*t5651 + t5376*t5669 + t5063*t5689 + t4996*t5711 + t4902*t5733 - 0.80315*(t5153*t5689 + t5125*t5711 + t5113*t5733) - 0.038576*(t5214*t5689 + t5198*t5711 + t5188*t5733) - 0.148715*(t5258*t5689 + t5242*t5711 + t5235*t5733) + t5630*t629 + t5323*t560*t640 - 1.*t5329*t560*t651)*var3[4] + (t5379 + t5436 + t5460 + t5472 + t5485 + t5504 + t5528 + t5563 - 1.*t5329*t629*t640 - 1.*t5323*t629*t651)*var3[5] + (t5379 + t5436 + t5460 + t5472 + t5485 + t5504 + t5528 + t5563 - 1.*t5590*t629*t640 + t5580*t629*t651)*var3[15] + (t4558*t4830 + t4578*t4847 + t4902*t4941 + t4996*t5014 + t5063*t5102 - 0.80315*(t4941*t5113 + t5014*t5125 + t5102*t5153) - 0.038576*(t4941*t5188 + t5014*t5198 + t5102*t5214) - 0.148715*(t4941*t5235 + t5014*t5242 + t5102*t5258) + t4807*t560)*var3[16] + (t4478*t4583 + t4626*t4656 + t4674*t4689 - 0.80315*(-1.000000000016*t4451*t4583 + t4656*t4697 + t4689*t4707) - 0.038576*(-1.000000000049*t4451*t4656 + t4583*t4720 + t4689*t4735) - 0.148715*(-6.5e-11*t4451*t4689 + t4583*t4752 + t4656*t4759))*var3[17] + 5.*t385*t531*var4[3] + 20.*t330*t458*t479*var4[13] - 5.*t385*t531*var4[13] + 30.*t417*t423*t424*var4[23] - 20.*t330*t458*t479*var4[23] + 20.*t365*t372*t401*var4[33] - 30.*t417*t423*t424*var4[33] + 5.*t115*t334*var4[43] - 20.*t365*t372*t401*var4[43] - 5.*t115*t334*var4[53];
  p_output1[4]=var3[1] + (t2690*t5323 + t2718*t5329 + t5428*t5980 + t5376*t5984 + t5063*t5993 + t4996*t6015 + t4902*t6043 - 0.80315*(t5153*t5993 + t5125*t6015 + t5113*t6043) - 0.038576*(t5214*t5993 + t5198*t6015 + t5188*t6043) - 0.148715*(t5258*t5993 + t5242*t6015 + t5235*t6043) - 1.*t2666*t5630*t629)*var3[3] + (t2477*t560*t5630 + t5428*t5850 + t5376*t5866 + t5063*t5882 + t4996*t5902 + t4902*t5926 - 0.80315*(t5153*t5882 + t5125*t5902 + t5113*t5926) - 0.038576*(t5214*t5882 + t5198*t5902 + t5188*t5926) - 0.148715*(t5258*t5882 + t5242*t5902 + t5235*t5926) - 1.*t2477*t5323*t629*t640 + t2477*t5329*t629*t651)*var3[4] + (t2961*t5323 + t2985*t5329 + t5376*t6110 + t5428*t6122 + t4902*t6136 + t4996*t6161 + t5063*t6183 - 0.80315*(t5113*t6136 + t5125*t6161 + t5153*t6183) - 0.038576*(t5188*t6136 + t5198*t6161 + t5214*t6183) - 0.148715*(t5235*t6136 + t5242*t6161 + t5258*t6183))*var3[5] + (t3108*t5580 + t2985*t5590 + t5376*t6243 + t5428*t6251 + t4902*t6263 + t4996*t6283 + t5063*t6304 - 0.80315*(t5113*t6263 + t5125*t6283 + t5153*t6304) - 0.038576*(t5188*t6263 + t5198*t6283 + t5214*t6304) - 0.148715*(t5235*t6263 + t5242*t6283 + t5258*t6304))*var3[15] + (t4830*t6243 - 1.*t2477*t4807*t629 + t4847*t6360 + t4902*t6521 + t4996*t6530 + t5063*t6540 - 0.80315*(t5113*t6521 + t5125*t6530 + t5153*t6540) - 0.038576*(t5188*t6521 + t5198*t6530 + t5214*t6540) - 0.148715*(t5235*t6521 + t5242*t6530 + t5258*t6540))*var3[16] + (t4478*t6368 + t4626*t6384 + t4674*t6420 - 0.148715*(t4752*t6368 + t4759*t6384 - 6.5e-11*t4451*t6420) - 0.80315*(-1.000000000016*t4451*t6368 + t4697*t6384 + t4707*t6420) - 0.038576*(t4720*t6368 - 1.000000000049*t4451*t6384 + t4735*t6420))*var3[17] + 5.*t385*t531*var4[4] + 20.*t330*t458*t479*var4[14] - 5.*t385*t531*var4[14] + 30.*t417*t423*t424*var4[24] - 20.*t330*t458*t479*var4[24] + 20.*t365*t372*t401*var4[34] - 30.*t417*t423*t424*var4[34] + 5.*t115*t334*var4[44] - 20.*t365*t372*t401*var4[44] - 5.*t115*t334*var4[54];
  p_output1[5]=var3[2] + (t2985*t5323 + t3108*t5329 + t5428*t6243 - 1.*t2477*t5630*t629 + t5376*t6360 + t5063*t6368 + t4996*t6384 + t4902*t6420 - 0.80315*(t5153*t6368 + t5125*t6384 + t5113*t6420) - 0.038576*(t5214*t6368 + t5198*t6384 + t5188*t6420) - 0.148715*(t5258*t6368 + t5242*t6384 + t5235*t6420))*var3[3] + (-1.*t2666*t560*t5630 + t2666*t5323*t629*t640 - 1.*t2666*t5329*t629*t651 + t5428*t6690 + t5376*t6696 + t5063*t6705 + t4996*t6714 + t4902*t6739 - 0.80315*(t5153*t6705 + t5125*t6714 + t5113*t6739) - 0.038576*(t5214*t6705 + t5198*t6714 + t5188*t6739) - 0.148715*(t5258*t6705 + t5242*t6714 + t5235*t6739))*var3[4] + (t2718*t5323 + t3761*t5329 + t5376*t6825 + t5428*t6845 + t4902*t6876 + t4996*t6894 + t5063*t6904 - 0.80315*(t5113*t6876 + t5125*t6894 + t5153*t6904) - 0.038576*(t5188*t6876 + t5198*t6894 + t5214*t6904) - 0.148715*(t5235*t6876 + t5242*t6894 + t5258*t6904))*var3[5] + (t3912*t5580 + t3761*t5590 + t5376*t6972 + t5428*t6984 + t4902*t6989 + t4996*t6995 + t5063*t7003 - 0.80315*(t5113*t6989 + t5125*t6995 + t5153*t7003) - 0.038576*(t5188*t6989 + t5198*t6995 + t5214*t7003) - 0.148715*(t5235*t6989 + t5242*t6995 + t5258*t7003))*var3[15] + (t2666*t4807*t629 + t4830*t6972 + t4847*t7066 + t4902*t7143 + t4996*t7150 + t5063*t7160 - 0.80315*(t5113*t7143 + t5125*t7150 + t5153*t7160) - 0.038576*(t5188*t7143 + t5198*t7150 + t5214*t7160) - 0.148715*(t5235*t7143 + t5242*t7150 + t5258*t7160))*var3[16] + (t4478*t7069 + t4626*t7074 + t4674*t7080 - 0.148715*(t4752*t7069 + t4759*t7074 - 6.5e-11*t4451*t7080) - 0.80315*(-1.000000000016*t4451*t7069 + t4697*t7074 + t4707*t7080) - 0.038576*(t4720*t7069 - 1.000000000049*t4451*t7074 + t4735*t7080))*var3[17] + 5.*t385*t531*var4[5] + 20.*t330*t458*t479*var4[15] - 5.*t385*t531*var4[15] + 30.*t417*t423*t424*var4[25] - 20.*t330*t458*t479*var4[25] + 20.*t365*t372*t401*var4[35] - 30.*t417*t423*t424*var4[35] + 5.*t115*t334*var4[45] - 20.*t365*t372*t401*var4[45] - 5.*t115*t334*var4[55];
  p_output1[6]=var3[1] + (-0.002264*t2690 + 0.00183*t2718 + 0.024028*t2666*t629)*var3[3] + (-0.024028*t2477*t560 + 0.002264*t2477*t629*t640 + 0.00183*t2477*t629*t651)*var3[4] + (-0.002264*t2961 + 0.00183*t2985)*var3[5] + 5.*t385*t531*var4[6] + 20.*t330*t458*t479*var4[16] - 5.*t385*t531*var4[16] + 30.*t417*t423*t424*var4[26] - 20.*t330*t458*t479*var4[26] + 20.*t365*t372*t401*var4[36] - 30.*t417*t423*t424*var4[36] + 5.*t115*t334*var4[46] - 20.*t365*t372*t401*var4[46] - 5.*t115*t334*var4[56];
  p_output1[7]=var3[2] + (-0.002264*t2985 + 0.00183*t3108 + 0.024028*t2477*t629)*var3[3] + (0.024028*t2666*t560 - 0.002264*t2666*t629*t640 - 0.00183*t2666*t629*t651)*var3[4] + (-0.002264*t2718 + 0.00183*t3761)*var3[5] + 5.*t385*t531*var4[7] + 20.*t330*t458*t479*var4[17] - 5.*t385*t531*var4[17] + 30.*t417*t423*t424*var4[27] - 20.*t330*t458*t479*var4[27] + 20.*t365*t372*t401*var4[37] - 30.*t417*t423*t424*var4[37] + 5.*t115*t334*var4[47] - 20.*t365*t372*t401*var4[47] - 5.*t115*t334*var4[57];
  p_output1[8]=t2718*t629*t651*t7416*var3[3] + (-1.*t2961*t560*t651*t7416 + t2477*t7409*t7410*t7416)*var3[4] + (-1.*t2961*t629*t640*t7416 + t2985*t629*t651*t7416)*var3[5] + 5.*t385*t531*var4[8] + 20.*t330*t458*t479*var4[18] - 5.*t385*t531*var4[18] + 30.*t417*t423*t424*var4[28] - 20.*t330*t458*t479*var4[28] + 20.*t365*t372*t401*var4[38] - 30.*t417*t423*t424*var4[38] + 5.*t115*t334*var4[48] - 20.*t365*t372*t401*var4[48] - 5.*t115*t334*var4[58];
  p_output1[9]=(0.15121*(t3108*t7461 + t2985*t7473) - 0.15121*(t2985*t7461 - 1.*t3108*t7473) + t3108*t7479 + 0.15121*(t3108*t7481 + t2985*t7489) - 0.15121*(t2985*t7481 - 1.*t3108*t7489) - 1.*t3108*t7494 + t2985*t7503 - 1.*t2985*t7511)*var3[3] + (0.15121*(-1.*t2666*t629*t651*t7461 + t2666*t629*t640*t7473) - 0.15121*(t2666*t629*t640*t7461 + t2666*t629*t651*t7473) - 1.*t2666*t629*t651*t7479 + 0.15121*(-1.*t2666*t629*t651*t7481 + t2666*t629*t640*t7489) - 0.15121*(t2666*t629*t640*t7481 + t2666*t629*t651*t7489) + t2666*t629*t651*t7494 + t2666*t629*t640*t7503 - 1.*t2666*t629*t640*t7511)*var3[4] + (t3761*t7479 - 1.*t3761*t7494 + t2718*t7503 - 1.*t2718*t7511 + 0.15121*(t2718*t7473 + t7558) - 0.15121*(t2718*t7461 + t7564) + 0.15121*(t2718*t7489 + t7603) - 0.15121*(t2718*t7481 + t7618))*var3[5] + (t3912*(0.15121*t7473 + t7545) + t3761*(t7475 + t7545) + 0.15121*(-1.*t3912*t7473 + t7558) - 0.15121*(-1.*t3912*t7461 + t7564))*var3[9] + (0.15121*(-1.*t3912*t7489 + t7603) - 0.15121*(-1.*t3912*t7481 + t7618) - 1.*t3912*(-0.15121*t7489 + t7626) - 1.*t3761*(t7493 + t7626))*var3[12] + 5.*t385*t531*var4[9] + 20.*t330*t458*t479*var4[19] - 5.*t385*t531*var4[19] + 30.*t417*t423*t424*var4[29] - 20.*t330*t458*t479*var4[29] + 20.*t365*t372*t401*var4[39] - 30.*t417*t423*t424*var4[39] + 5.*t115*t334*var4[49] - 20.*t365*t372*t401*var4[49] - 5.*t115*t334*var4[59];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4,*var5,*var6,*var7;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 7)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Seven input(s) required (var1,var2,var3,var4,var5,var6,var7).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 60 && ncols == 1) && 
      !(mrows == 1 && ncols == 60))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }
  mrows = mxGetM(prhs[4]);
  ncols = mxGetN(prhs[4]);
  if( !mxIsDouble(prhs[4]) || mxIsComplex(prhs[4]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var5 is wrong.");
    }
  mrows = mxGetM(prhs[5]);
  ncols = mxGetN(prhs[5]);
  if( !mxIsDouble(prhs[5]) || mxIsComplex(prhs[5]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var6 is wrong.");
    }
  mrows = mxGetM(prhs[6]);
  ncols = mxGetN(prhs[6]);
  if( !mxIsDouble(prhs[6]) || mxIsComplex(prhs[6]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var7 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
  var5 = mxGetPr(prhs[4]);
  var6 = mxGetPr(prhs[5]);
  var7 = mxGetPr(prhs[6]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4,var5,var6,var7);


}

#else // MATLAB_MEX_FILE

#include "d1y_position_DiagonalStance1.hh"

namespace DiagonalStance1
{

void d1y_position_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4, var5, var6, var7);

}

}

#endif // MATLAB_MEX_FILE
