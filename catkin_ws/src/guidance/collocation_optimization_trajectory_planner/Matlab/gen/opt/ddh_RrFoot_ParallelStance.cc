/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:20 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t200;
  double t218;
  double t223;
  double t143;
  double t156;
  double t160;
  double t178;
  double t261;
  double t269;
  double t233;
  double t246;
  double t281;
  double t299;
  double t304;
  double t508;
  double t539;
  double t547;
  double t566;
  double t588;
  double t590;
  double t596;
  double t177;
  double t662;
  double t666;
  double t684;
  double t698;
  double t704;
  double t349;
  double t1075;
  double t1089;
  double t842;
  double t1005;
  double t852;
  double t870;
  double t1171;
  double t927;
  double t935;
  double t778;
  double t827;
  double t194;
  double t1182;
  double t1016;
  double t1093;
  double t1196;
  double t1205;
  double t1234;
  double t1249;
  double t1260;
  double t470;
  double t484;
  double t1309;
  double t1318;
  double t637;
  double t655;
  double t1344;
  double t1349;
  double t199;
  double t1365;
  double t1379;
  double t1417;
  double t965;
  double t1466;
  double t1469;
  double t1499;
  double t1502;
  double t1509;
  double t1547;
  double t1554;
  double t1558;
  double t1563;
  double t1570;
  double t1590;
  double t1593;
  double t1608;
  double t1622;
  double t1632;
  double t1646;
  double t1651;
  double t1659;
  double t1661;
  double t1694;
  double t1699;
  double t1715;
  double t1727;
  double t1734;
  double t1735;
  double t1750;
  double t1756;
  double t1764;
  double t1768;
  double t1781;
  double t1806;
  double t1809;
  double t1156;
  double t1162;
  double t972;
  double t1233;
  double t1427;
  double t1925;
  double t1928;
  double t1980;
  double t1982;
  double t1997;
  double t1998;
  double t1405;
  double t1408;
  double t1418;
  double t1420;
  double t1449;
  double t1463;
  double t1578;
  double t1723;
  double t1810;
  double t1827;
  double t978;
  double t1071;
  double t1120;
  double t1132;
  double t1175;
  double t1179;
  double t1211;
  double t1223;
  double t1255;
  double t1263;
  double t1264;
  double t1878;
  double t1895;
  double t1901;
  double t1908;
  double t1930;
  double t1950;
  double t1959;
  double t1964;
  double t1972;
  double t1975;
  double t2022;
  double t2024;
  double t2028;
  double t2041;
  double t2046;
  double t2054;
  double t2073;
  double t2074;
  double t2079;
  double t2082;
  double t1138;
  double t1225;
  double t1269;
  double t1302;
  double t321;
  double t624;
  double t748;
  double t759;
  double t762;
  double t833;
  double t893;
  double t943;
  double t948;
  double t957;
  double t1337;
  double t1354;
  double t1382;
  double t1383;
  double t1829;
  double t1832;
  double t1833;
  double t1850;
  double t1870;
  double t1979;
  double t2111;
  double t2114;
  double t2120;
  double t2125;
  double t2129;
  double t2130;
  double t2132;
  double t2134;
  double t2154;
  double t2166;
  double t2172;
  double t2174;
  double t2183;
  double t2187;
  double t2199;
  double t2210;
  double t2217;
  double t2285;
  double t2292;
  double t2296;
  double t2297;
  double t2309;
  double t2326;
  double t2327;
  double t2331;
  double t2245;
  double t2246;
  double t2249;
  double t2257;
  double t2276;
  double t2305;
  double t2338;
  double t2343;
  double t2364;
  double t2382;
  double t2388;
  double t2402;
  double t2421;
  double t2424;
  double t2433;
  double t2445;
  double t100;
  double t61;
  double t79;
  double t83;
  double t86;
  double t104;
  double t2473;
  double t2474;
  double t2486;
  double t2489;
  double t2523;
  double t2526;
  double t2528;
  double t2461;
  double t2464;
  double t2469;
  double t2494;
  double t2498;
  double t2503;
  double t2522;
  double t2535;
  double t2546;
  double t2549;
  double t2560;
  double t2565;
  double t2570;
  double t2571;
  double t2577;
  double t2580;
  double t2600;
  double t2605;
  double t2625;
  double t2632;
  double t2633;
  double t39;
  double t52;
  double t2672;
  double t2658;
  double t2702;
  double t2712;
  double t2713;
  double t2734;
  double t2746;
  double t2750;
  double t2907;
  double t2913;
  double t2914;
  double t2918;
  double t2921;
  double t2927;
  double t2929;
  double t2946;
  double t2949;
  double t2954;
  double t2956;
  double t2958;
  double t2964;
  double t2965;
  double t2968;
  double t2970;
  double t2798;
  double t2811;
  double t2814;
  double t2824;
  double t2842;
  double t2854;
  double t2863;
  double t2869;
  double t2884;
  double t2889;
  double t2895;
  double t2901;
  double t3139;
  double t3148;
  double t3155;
  double t3157;
  double t3158;
  double t3159;
  double t3167;
  double t3169;
  double t3172;
  double t3176;
  double t3178;
  double t3191;
  double t3197;
  double t3200;
  double t3265;
  double t3266;
  double t3293;
  double t3229;
  double t3244;
  double t3250;
  double t3304;
  double t3305;
  double t3308;
  double t3210;
  double t3215;
  double t3216;
  double t3221;
  double t3223;
  double t3228;
  double t3260;
  double t3310;
  double t3315;
  double t3321;
  double t3322;
  double t3323;
  double t3325;
  double t3354;
  double t3359;
  double t3364;
  double t3368;
  double t3372;
  double t3477;
  double t3480;
  double t3482;
  double t3483;
  double t3492;
  double t3496;
  double t3462;
  double t3467;
  double t3471;
  double t3517;
  double t3533;
  double t3539;
  double t3500;
  double t3502;
  double t3505;
  double t3506;
  double t3541;
  double t3551;
  double t3558;
  double t3562;
  double t3568;
  double t3572;
  double t3573;
  double t3574;
  double t3576;
  double t3577;
  double t3578;
  double t3653;
  double t3658;
  double t3596;
  double t3601;
  double t3602;
  double t3610;
  double t3792;
  double t3795;
  double t3799;
  double t3801;
  double t3802;
  double t3808;
  double t3816;
  double t3817;
  double t3732;
  double t3739;
  double t3740;
  double t3633;
  double t3643;
  double t3648;
  double t3845;
  double t3846;
  double t3915;
  double t3920;
  double t3921;
  double t3849;
  double t3856;
  double t3858;
  double t3894;
  double t3913;
  double t3873;
  double t3914;
  double t3874;
  double t3879;
  double t3880;
  double t3943;
  double t3944;
  double t3945;
  double t3940;
  double t3962;
  double t4080;
  double t4083;
  double t4146;
  double t4163;
  double t4175;
  double t4144;
  double t4201;
  double t4129;
  double t4131;
  double t4230;
  double t4236;
  double t4227;
  double t4250;
  double t4379;
  double t4380;
  double t4383;
  double t4396;
  double t4403;
  double t4411;
  double t4574;
  double t4560;
  double t4564;
  double t4567;
  double t4568;
  double t4570;
  double t4580;
  double t4583;
  double t4592;
  double t4593;
  double t4599;
  double t4600;
  double t4645;
  double t4721;
  double t4729;
  double t4690;
  double t4692;
  double t4698;
  double t4647;
  double t4799;
  double t4812;
  double t4814;
  double t4816;
  double t4824;
  double t4825;
  double t4841;
  double t4846;
  double t4860;
  double t4861;
  double t4873;
  double t4875;
  double t4881;
  double t4885;
  double t4888;
  double t4892;
  double t4896;
  double t4899;
  double t4927;
  double t4928;
  double t4934;
  double t4935;
  double t4946;
  double t4954;
  double t5062;
  double t5065;
  double t5071;
  double t5072;
  double t5077;
  double t5083;
  double t5084;
  double t4662;
  double t4674;
  double t4676;
  double t4704;
  double t4711;
  double t4714;
  double t4726;
  double t4730;
  double t4755;
  double t4762;
  double t4683;
  double t4720;
  double t4772;
  double t4776;
  double t4851;
  double t4894;
  double t4958;
  double t4960;
  double t4963;
  double t4968;
  double t4982;
  double t4984;
  double t5007;
  double t5030;
  double t5038;
  double t5042;
  double t5144;
  double t5147;
  double t5150;
  double t5151;
  double t5262;
  double t5268;
  double t5269;
  double t5270;
  double t5273;
  double t5274;
  double t5278;
  double t5283;
  double t5285;
  double t5286;
  double t5289;
  double t5290;
  double t5291;
  double t5296;
  double t5061;
  double t5159;
  double t5066;
  double t5074;
  double t5088;
  double t5094;
  double t5121;
  double t5126;
  double t5132;
  double t5135;
  double t5218;
  double t5226;
  double t5199;
  double t5204;
  double t5205;
  double t5206;
  double t5169;
  double t5178;
  double t5186;
  double t5190;
  double t5387;
  double t5394;
  double t5401;
  double t5404;
  double t5425;
  double t5427;
  double t4572;
  double t4590;
  double t4604;
  double t4610;
  double t4626;
  double t4630;
  double t4632;
  double t4637;
  double t5579;
  double t5583;
  double t5584;
  double t5557;
  double t5559;
  double t5561;
  double t5522;
  double t5525;
  double t5530;
  double t5534;
  double t5567;
  double t5586;
  double t5589;
  double t5595;
  double t5598;
  double t5599;
  double t5603;
  double t5604;
  double t5610;
  double t5449;
  double t5451;
  double t5457;
  double t5464;
  double t5466;
  double t5478;
  double t5440;
  double t5442;
  double t5443;
  double t5433;
  double t5435;
  double t5437;
  double t5664;
  double t5665;
  double t5666;
  double t5671;
  double t5677;
  double t5679;
  double t5685;
  double t5686;
  double t5687;
  double t5737;
  double t5754;
  double t5760;
  double t5825;
  double t5831;
  double t5832;
  double t5692;
  double t5761;
  double t5696;
  double t5703;
  double t5706;
  double t5854;
  double t5860;
  double t5906;
  double t5917;
  double t5919;
  double t5929;
  double t5947;
  double t5954;
  double t5972;
  double t5975;
  double t5981;
  double t6006;
  double t6009;
  double t6013;
  double t6171;
  double t6185;
  double t6198;
  double t6210;
  double t6265;
  double t6269;
  double t6238;
  double t6260;
  double t6311;
  double t6388;
  double t6401;
  double t6413;
  double t6420;
  double t6422;
  double t6423;
  double t6425;
  double t6426;
  double t6427;
  double t6433;
  double t6438;
  double t6445;
  double t6315;
  double t6318;
  double t6323;
  double t6324;
  double t6327;
  double t6330;
  double t6336;
  double t6341;
  double t6344;
  double t6532;
  double t6554;
  double t6556;
  double t6563;
  double t6386;
  double t6387;
  double t6390;
  double t6391;
  double t6397;
  double t6410;
  double t6412;
  double t6414;
  double t6417;
  double t6477;
  double t6480;
  double t6485;
  double t6487;
  double t6419;
  double t6488;
  double t6350;
  double t6353;
  double t6370;
  double t6381;
  double t6290;
  double t6291;
  double t6293;
  double t6298;
  double t6622;
  double t6639;
  double t6766;
  double t6768;
  double t6769;
  double t6747;
  double t6754;
  double t6755;
  double t6602;
  double t6603;
  double t6607;
  double t6612;
  double t6623;
  double t6627;
  double t6628;
  double t6630;
  double t6168;
  double t6196;
  double t6214;
  double t6217;
  double t6264;
  double t6271;
  double t6273;
  double t6284;
  double t6880;
  double t6881;
  double t6882;
  double t6851;
  double t6860;
  double t6872;
  double t6828;
  double t6834;
  double t6838;
  double t6844;
  double t6874;
  double t6885;
  double t6887;
  double t6893;
  double t6896;
  double t6899;
  double t6915;
  double t6916;
  double t6917;
  double t6796;
  double t6798;
  double t6800;
  double t6790;
  double t6791;
  double t6792;
  double t6737;
  double t6739;
  double t6741;
  double t6706;
  double t6709;
  double t6725;
  double t6978;
  double t6995;
  double t6999;
  double t7034;
  double t7041;
  double t7044;
  double t7016;
  double t7020;
  double t7022;
  double t6939;
  double t6943;
  double t6947;
  double t7082;
  double t7086;
  double t7098;
  double t7011;
  double t7024;
  double t6967;
  double t6969;
  double t6970;
  double t7190;
  double t7192;
  double t7195;
  double t7073;
  double t7077;
  double t7214;
  double t7216;
  double t7222;
  double t7234;
  double t7239;
  double t7243;
  double t7151;
  double t7163;
  double t7166;
  double t7342;
  double t7368;
  double t7372;
  double t7373;
  double t7377;
  double t7379;
  double t7385;
  double t7387;
  double t7390;
  double t7394;
  double t7408;
  double t7410;
  double t7412;
  double t7435;
  double t7439;
  double t7445;
  double t7447;
  double t7451;
  double t7453;
  double t7455;
  double t7458;
  double t7417;
  double t7418;
  double t7425;
  double t7427;
  double t7433;
  double t7434;
  double t7448;
  double t7459;
  double t7460;
  double t7461;
  double t7462;
  double t7464;
  double t7465;
  double t7468;
  double t7469;
  double t7473;
  double t7474;
  double t7516;
  double t7519;
  double t7522;
  double t7523;
  double t7526;
  double t7528;
  double t7545;
  double t7546;
  double t7553;
  double t2653;
  double t117;
  double t2667;
  double t2697;
  double t7562;
  double t7567;
  double t7575;
  double t7579;
  double t7581;
  double t7582;
  double t2730;
  double t7631;
  double t7634;
  double t7647;
  double t7657;
  double t7658;
  double t7659;
  double t7667;
  double t7668;
  double t7669;
  double t7672;
  double t7675;
  double t7676;
  double t7677;
  double t7678;
  double t7681;
  double t2795;
  double t7611;
  double t7617;
  double t7619;
  double t7622;
  double t7624;
  double t7625;
  double t2834;
  double t2876;
  double t7816;
  double t7817;
  double t7818;
  double t7819;
  double t7820;
  double t7821;
  double t7823;
  double t7827;
  double t7829;
  double t7689;
  double t7692;
  double t7695;
  double t7701;
  double t7705;
  double t7707;
  double t7727;
  double t7728;
  double t7740;
  double t7741;
  double t7751;
  double t7757;
  double t7953;
  double t7956;
  double t7961;
  double t7972;
  double t8062;
  double t8068;
  double t8078;
  double t8090;
  double t4433;
  double t4438;
  double t4440;
  double t4470;
  double t4473;
  double t4486;
  double t8256;
  double t8257;
  double t8260;
  double t8262;
  double t8265;
  double t8269;
  double t8270;
  double t8272;
  double t8273;
  double t8274;
  double t8276;
  double t8281;
  double t8284;
  double t8287;
  double t8206;
  double t8215;
  double t8226;
  double t8231;
  double t6030;
  double t6040;
  double t6050;
  double t8378;
  double t8384;
  double t5550;
  double t5590;
  double t5591;
  double t8390;
  double t8404;
  double t6065;
  double t6068;
  double t6104;
  double t8455;
  double t8464;
  double t8474;
  double t8478;
  double t7203;
  double t7206;
  double t7208;
  double t8564;
  double t8565;
  double t6847;
  double t6888;
  double t6891;
  double t8573;
  double t8574;
  double t7284;
  double t7287;
  double t7288;
  double t8640;
  double t8643;
  double t8644;
  double t8645;
  double t8646;
  double t8651;
  double t8656;
  double t8658;
  double t8660;
  double t8662;
  double t8664;
  double t8665;
  double t8666;
  double t8686;
  double t8688;
  double t8690;
  double t8691;
  double t8696;
  double t8697;
  double t8698;
  double t8702;
  double t8673;
  double t8675;
  double t8676;
  double t8679;
  double t8684;
  double t8685;
  double t8692;
  double t8711;
  double t8713;
  double t8714;
  double t8720;
  double t8721;
  double t8723;
  double t8725;
  double t8728;
  double t8730;
  double t8732;
  double t8735;
  double t8736;
  double t8737;
  double t8740;
  double t8741;
  double t8743;
  double t8745;
  double t8746;
  double t8747;
  double t8750;
  double t8751;
  double t8752;
  double t8754;
  double t8755;
  double t8756;
  double t8772;
  double t8779;
  double t8781;
  double t8784;
  double t8785;
  double t8786;
  double t8788;
  double t8789;
  double t8790;
  double t8794;
  double t8795;
  double t8796;
  double t8802;
  double t8803;
  double t8804;
  double t8761;
  double t8762;
  double t8763;
  double t8768;
  double t8769;
  double t8770;
  double t8856;
  double t8859;
  double t8860;
  double t8861;
  double t8862;
  double t8864;
  double t8865;
  double t8866;
  double t8867;
  double t8809;
  double t8812;
  double t8814;
  double t8817;
  double t8827;
  double t8830;
  double t8840;
  double t8841;
  double t8845;
  double t8850;
  double t8851;
  double t8854;
  double t8954;
  double t8959;
  double t8969;
  double t8977;
  double t9029;
  double t9034;
  double t9040;
  double t9042;
  double t9181;
  double t9182;
  double t9183;
  double t9184;
  double t9185;
  double t9186;
  double t9188;
  double t9191;
  double t9192;
  double t9193;
  double t9194;
  double t9195;
  double t9196;
  double t9197;
  double t9135;
  double t9146;
  double t9153;
  double t9158;
  double t9265;
  double t9271;
  double t9276;
  double t9282;
  double t9328;
  double t9332;
  double t9343;
  double t9348;
  double t9385;
  double t9386;
  double t9393;
  double t9396;
  t200 = Cos(var1[17]);
  t218 = -1.*t200;
  t223 = 1. + t218;
  t143 = Cos(var1[16]);
  t156 = -1.*t143;
  t160 = 1. + t156;
  t178 = Sin(var1[16]);
  t261 = Sin(var1[17]);
  t269 = 4.e-6*t261;
  t233 = 1.000000000016*t223;
  t246 = -7.e-6*t223;
  t281 = t246 + t269;
  t299 = -7.e-6*t281;
  t304 = -1. + t233 + t299;
  t508 = 2.8e-11*t223;
  t539 = 4.e-6*t223;
  t547 = 7.e-6*t261;
  t566 = t539 + t547;
  t588 = -7.e-6*t566;
  t590 = -1.*t261;
  t596 = t508 + t588 + t590;
  t177 = -7.e-6*t160;
  t662 = -6.5e-11*t223;
  t666 = 1. + t662;
  t684 = -7.e-6*t666;
  t698 = 7.e-6*t223;
  t704 = t684 + t698 + t269;
  t349 = 4.e-6*t160;
  t1075 = -1. + t200;
  t1089 = 4.e-6*t1075;
  t842 = -2.8e-11*t160;
  t1005 = -4.e-6*t261;
  t852 = -1.*t178;
  t870 = t842 + t852;
  t1171 = 1.000000000049*t223;
  t927 = 4.e-6*t178;
  t935 = t177 + t927;
  t778 = -1.000000000016*t160;
  t827 = 1. + t778;
  t194 = -4.e-6*t178;
  t1182 = -7.e-6*t261;
  t1016 = t246 + t1005;
  t1093 = t1089 + t547;
  t1196 = -2.8e-11*t223;
  t1205 = t1196 + t261;
  t1234 = -1.000000000016*t223;
  t1249 = 1. + t1234;
  t1260 = t508 + t261;
  t470 = -7.e-6*t178;
  t484 = t349 + t470;
  t1309 = 4.e-6*t566;
  t1318 = -1. + t1171 + t1309;
  t637 = -6.5e-11*t160;
  t655 = 1. + t637;
  t1344 = 4.e-6*t666;
  t1349 = t1344 + t1089 + t547;
  t199 = t177 + t194;
  t1365 = 4.e-6*t281;
  t1379 = t508 + t1365 + t261;
  t1417 = 7.e-6*t160;
  t965 = 7.e-6*t178;
  t1466 = 2.826290000000002e-7*var1[17];
  t1469 = -0.148715*t666;
  t1499 = -2.18904205e-16*t223;
  t1502 = t539 + t1182;
  t1509 = -0.038576*t1502;
  t1547 = -0.80315*t1016;
  t1554 = t698 + t269;
  t1558 = -0.5031510000080001*t1554;
  t1563 = -0.038575000014*t1093;
  t1570 = t1466 + t1469 + t1499 + t1509 + t1547 + t1558 + t1563;
  t1590 = 1.1305160000000008e-12*var1[17];
  t1593 = -1.000000000049*t223;
  t1608 = 1. + t1593;
  t1622 = -0.038576*t1608;
  t1632 = -0.03857500001589017*t223;
  t1646 = t508 + t590;
  t1651 = -0.5031510000080001*t1646;
  t1659 = t1089 + t1182;
  t1661 = -3.367757e-6*t1659;
  t1694 = -0.148715*t566;
  t1699 = -0.80315*t1205;
  t1715 = t1590 + t1622 + t1632 + t1651 + t1661 + t1694 + t1699;
  t1727 = -1.9784030000000015e-12*var1[17];
  t1734 = -0.80315*t1249;
  t1735 = -0.5031510000160505*t223;
  t1750 = t1196 + t590;
  t1756 = -0.038576*t1750;
  t1764 = t698 + t1005;
  t1768 = -3.367757e-6*t1764;
  t1781 = -0.148715*t281;
  t1806 = -0.038575000014*t1260;
  t1809 = t1727 + t1734 + t1735 + t1756 + t1768 + t1781 + t1806;
  t1156 = -1.000000000049*t160;
  t1162 = 1. + t1156;
  t972 = t349 + t965;
  t1233 = t842 + t178;
  t1427 = 2.8e-11*t160;
  t1925 = -1. + t143;
  t1928 = 4.e-6*t1925;
  t1980 = t1162*t1318;
  t1982 = t972*t1349;
  t1997 = t1233*t1379;
  t1998 = t1980 + t1982 + t1997;
  t1405 = -2.7726089999999997e-12*var1[16];
  t1408 = -0.2812110000084994*t160;
  t1418 = t1417 + t194;
  t1420 = -1.8134809999999998e-6*t1418;
  t1449 = t1427 + t178;
  t1463 = -0.038749000006999997*t1449;
  t1578 = t935*t1570;
  t1723 = t870*t1715;
  t1810 = t827*t1809;
  t1827 = t1405 + t1408 + t1420 + t1463 + t1578 + t1723 + t1810;
  t978 = 6.5e-11*t223;
  t1071 = 7.e-6*t1016;
  t1120 = 4.e-6*t1093;
  t1132 = -1. + t978 + t1071 + t1120;
  t1175 = -1. + t1171;
  t1179 = 4.e-6*t1175;
  t1211 = 7.e-6*t1205;
  t1223 = t1179 + t1089 + t1182 + t1211;
  t1255 = 7.e-6*t1249;
  t1263 = 4.e-6*t1260;
  t1264 = t1255 + t698 + t1005 + t1263;
  t1878 = 3.9608699999999997e-7*var1[16];
  t1895 = -1.1787626499999999e-16*t160;
  t1901 = t1417 + t927;
  t1908 = -0.281211000004*t1901;
  t1930 = t1928 + t965;
  t1950 = -0.038749000006999997*t1930;
  t1959 = t655*t1570;
  t1964 = t484*t1715;
  t1972 = t199*t1809;
  t1975 = t1878 + t1895 + t1908 + t1950 + t1959 + t1964 + t1972;
  t2022 = 1.5843479999999999e-12*var1[16];
  t2024 = -0.03874900000889869*t160;
  t2028 = t1427 + t852;
  t2041 = -0.281211000004*t2028;
  t2046 = t1928 + t470;
  t2054 = -1.8134809999999998e-6*t2046;
  t2073 = t972*t1570;
  t2074 = t1162*t1715;
  t2079 = t1233*t1809;
  t2082 = t2022 + t2024 + t2041 + t2054 + t2073 + t2074 + t2079;
  t1138 = t972*t1132;
  t1225 = t1162*t1223;
  t1269 = t1233*t1264;
  t1302 = t1138 + t1225 + t1269;
  t321 = t199*t304;
  t624 = t484*t596;
  t748 = t655*t704;
  t759 = t321 + t624 + t748;
  t762 = 0.15121*t759;
  t833 = t827*t304;
  t893 = t870*t596;
  t943 = t935*t704;
  t948 = t833 + t893 + t943;
  t957 = -0.15121*t948;
  t1337 = t870*t1318;
  t1354 = t935*t1349;
  t1382 = t827*t1379;
  t1383 = t1337 + t1354 + t1382;
  t1829 = -1.*t1383*t1827;
  t1832 = t484*t1318;
  t1833 = t655*t1349;
  t1850 = t199*t1379;
  t1870 = t1832 + t1833 + t1850;
  t1979 = -1.*t1870*t1975;
  t2111 = -1.*t1998*t2082;
  t2114 = t1829 + t1979 + t2111;
  t2120 = t1302*t2114;
  t2125 = t935*t1132;
  t2129 = t870*t1223;
  t2130 = t827*t1264;
  t2132 = t2125 + t2129 + t2130;
  t2134 = t1827*t2132;
  t2154 = t655*t1132;
  t2166 = t484*t1223;
  t2172 = t199*t1264;
  t2174 = t2154 + t2166 + t2172;
  t2183 = t1975*t2174;
  t2187 = t2082*t1302;
  t2199 = t2134 + t2183 + t2187;
  t2210 = t1998*t2199;
  t2217 = t762 + t957 + t2120 + t2210;
  t2285 = -1.*t1570*t1349;
  t2292 = -1.*t1318*t1715;
  t2296 = -1.*t1379*t1809;
  t2297 = t2285 + t2292 + t2296;
  t2309 = t1570*t1132;
  t2326 = t1715*t1223;
  t2327 = t1809*t1264;
  t2331 = t2309 + t2326 + t2327;
  t2245 = -0.038749*t304;
  t2246 = 0.281211*t596;
  t2249 = 7.e-6*t666;
  t2257 = t2249 + t246 + t1005;
  t2276 = 1.e-6*t2257;
  t2305 = -1.*t1132*t2297;
  t2338 = -1.*t1349*t2331;
  t2343 = -1.*t1223*t2297;
  t2364 = -1.*t1318*t2331;
  t2382 = t2343 + t2364;
  t2388 = 4.e-6*t2382;
  t2402 = t1264*t2297;
  t2421 = t1379*t2331;
  t2424 = t2402 + t2421;
  t2433 = 7.e-6*t2424;
  t2445 = t2245 + t2246 + t2276 + t2305 + t2338 + t2388 + t2433;
  t100 = Sin(var1[15]);
  t61 = Cos(var1[15]);
  t79 = -1.*t61;
  t83 = 1. + t79;
  t86 = -0.15121*t83;
  t104 = -0.15121*t100;
  t2473 = 0.15121*t100;
  t2474 = t100*t1827;
  t2486 = t61*t1975;
  t2489 = t86 + t2473 + t2474 + t2486;
  t2523 = t61*t1827;
  t2526 = -1.*t100*t1975;
  t2528 = t86 + t104 + t2523 + t2526;
  t2461 = t100*t1383;
  t2464 = t61*t1870;
  t2469 = t2461 + t2464;
  t2494 = -1.*t2469*t2489;
  t2498 = t61*t1383;
  t2503 = -1.*t100*t1870;
  t2522 = t2498 + t2503;
  t2535 = -1.*t2522*t2528;
  t2546 = t2111 + t2494 + t2535;
  t2549 = t1302*t2546;
  t2560 = t100*t2132;
  t2565 = t61*t2174;
  t2570 = t2560 + t2565;
  t2571 = t2489*t2570;
  t2577 = t61*t2132;
  t2580 = -1.*t100*t2174;
  t2600 = t2577 + t2580;
  t2605 = t2528*t2600;
  t2625 = t2187 + t2571 + t2605;
  t2632 = t1998*t2625;
  t2633 = t2549 + t2632;
  t39 = Cos(var1[4]);
  t52 = Cos(var1[5]);
  t2672 = Sin(var1[5]);
  t2658 = Sin(var1[4]);
  t2702 = -1.*t39*t52*t100;
  t2712 = -1.*t61*t39*t2672;
  t2713 = t2702 + t2712;
  t2734 = t61*t39*t52;
  t2746 = -1.*t39*t100*t2672;
  t2750 = t2734 + t2746;
  t2907 = t1233*t304;
  t2913 = t1162*t596;
  t2914 = t972*t704;
  t2918 = t2907 + t2913 + t2914;
  t2921 = t2918*t2658;
  t2927 = -1.*t100*t759;
  t2929 = t61*t948;
  t2946 = t2927 + t2929;
  t2949 = t52*t2946;
  t2954 = t61*t759;
  t2956 = t100*t948;
  t2958 = t2954 + t2956;
  t2964 = -1.*t2958*t2672;
  t2965 = t2949 + t2964;
  t2968 = t39*t2965;
  t2970 = t2921 + t2968;
  t2798 = t1233*t2658;
  t2811 = t199*t2713;
  t2814 = t827*t2750;
  t2824 = t2798 + t2811 + t2814;
  t2842 = t1162*t2658;
  t2854 = t484*t2713;
  t2863 = t870*t2750;
  t2869 = t2842 + t2854 + t2863;
  t2884 = t972*t2658;
  t2889 = t655*t2713;
  t2895 = t935*t2750;
  t2901 = t2884 + t2889 + t2895;
  t3139 = Sin(var1[3]);
  t3148 = t52*t2958;
  t3155 = t2946*t2672;
  t3157 = t3148 + t3155;
  t3158 = t3139*t3157;
  t3159 = Cos(var1[3]);
  t3167 = t39*t2918;
  t3169 = -1.*t2658*t2965;
  t3172 = t3167 + t3169;
  t3176 = t3159*t3172;
  t3178 = t3158 + t3176;
  t3191 = t3159*t3157;
  t3197 = -1.*t3139*t3172;
  t3200 = t3191 + t3197;
  t3265 = t52*t2469;
  t3266 = t2522*t2672;
  t3293 = t3265 + t3266;
  t3229 = t52*t2528;
  t3244 = -1.*t2489*t2672;
  t3250 = t3229 + t3244;
  t3304 = t52*t2489;
  t3305 = t2528*t2672;
  t3308 = t3304 + t3305;
  t3210 = t52*t2570;
  t3215 = t2600*t2672;
  t3216 = t3210 + t3215;
  t3221 = t52*t2522;
  t3223 = -1.*t2469*t2672;
  t3228 = t3221 + t3223;
  t3260 = -1.*t3228*t3250;
  t3310 = -1.*t3293*t3308;
  t3315 = t2111 + t3260 + t3310;
  t3321 = t3216*t3315;
  t3322 = t52*t2600;
  t3323 = -1.*t2570*t2672;
  t3325 = t3322 + t3323;
  t3354 = t3250*t3325;
  t3359 = t3308*t3216;
  t3364 = t2187 + t3354 + t3359;
  t3368 = t3293*t3364;
  t3372 = t3321 + t3368;
  t3477 = t1998*t2658;
  t3480 = t39*t3228;
  t3482 = t3477 + t3480;
  t3483 = t2082*t2658;
  t3492 = t39*t3250;
  t3496 = t3483 + t3492;
  t3462 = t1302*t2658;
  t3467 = t39*t3325;
  t3471 = t3462 + t3467;
  t3517 = t39*t2082;
  t3533 = -1.*t2658*t3250;
  t3539 = t3517 + t3533;
  t3500 = -1.*t3482*t3496;
  t3502 = t39*t1998;
  t3505 = -1.*t2658*t3228;
  t3506 = t3502 + t3505;
  t3541 = -1.*t3506*t3539;
  t3551 = t3310 + t3500 + t3541;
  t3558 = t3471*t3551;
  t3562 = t3496*t3471;
  t3568 = t39*t1302;
  t3572 = -1.*t2658*t3325;
  t3573 = t3568 + t3572;
  t3574 = t3539*t3573;
  t3576 = t3359 + t3562 + t3574;
  t3577 = t3482*t3576;
  t3578 = t3558 + t3577;
  t3653 = 0.15121*t61;
  t3658 = t3653 + t104 + t2523 + t2526;
  t3596 = -0.15121*t61;
  t3601 = -1.*t100*t1827;
  t3602 = -1.*t61*t1975;
  t3610 = t3596 + t104 + t3601 + t3602;
  t3792 = -1.*t61*t759;
  t3795 = -1.*t100*t948;
  t3799 = t3792 + t3795;
  t3801 = t52*t3799;
  t3802 = -1.*t2946*t2672;
  t3808 = t3801 + t3802;
  t3816 = t3799*t2672;
  t3817 = t2949 + t3816;
  t3732 = -1.*t100*t2132;
  t3739 = -1.*t61*t2174;
  t3740 = t3732 + t3739;
  t3633 = -1.*t100*t1383;
  t3643 = -1.*t61*t1870;
  t3648 = t3633 + t3643;
  t3845 = t3740*t2672;
  t3846 = t3322 + t3845;
  t3915 = t52*t3610;
  t3920 = -1.*t3658*t2672;
  t3921 = t3915 + t3920;
  t3849 = t52*t3658;
  t3856 = t3610*t2672;
  t3858 = t3849 + t3856;
  t3894 = t3648*t2672;
  t3913 = t3221 + t3894;
  t3873 = -1.*t3293*t3858;
  t3914 = -1.*t3913*t3308;
  t3874 = t52*t3648;
  t3879 = -1.*t2522*t2672;
  t3880 = t3874 + t3879;
  t3943 = t52*t3740;
  t3944 = -1.*t2600*t2672;
  t3945 = t3943 + t3944;
  t3940 = t3308*t3846;
  t3962 = t3858*t3216;
  t4080 = -1.*t52*t2958;
  t4083 = t4080 + t3802;
  t4146 = -1.*t52*t2489;
  t4163 = -1.*t2528*t2672;
  t4175 = t4146 + t4163;
  t4144 = -1.*t3293*t3250;
  t4201 = -1.*t3228*t3308;
  t4129 = -1.*t52*t2469;
  t4131 = t4129 + t3879;
  t4230 = -1.*t52*t2570;
  t4236 = t4230 + t3944;
  t4227 = t3308*t3325;
  t4250 = t3250*t3216;
  t4379 = -1.*t2918*t2658;
  t4380 = -1.*t39*t2965;
  t4383 = t4379 + t4380;
  t4396 = -1.*t2082*t2658;
  t4403 = -1.*t39*t3250;
  t4411 = t4396 + t4403;
  t4574 = 4.e-6*t200;
  t4560 = 7.e-6*t200;
  t4564 = t4560 + t269;
  t4567 = -7.e-6*t4564;
  t4568 = 2.8e-11*t261;
  t4570 = t218 + t4567 + t4568;
  t4580 = 7.000000000455e-6*t261;
  t4583 = t4574 + t4580;
  t4592 = t4574 + t1182;
  t4593 = -7.e-6*t4592;
  t4599 = 1.000000000016*t261;
  t4600 = t4593 + t4599;
  t4645 = -4.e-6*t200;
  t4721 = t4645 + t1182;
  t4729 = t4560 + t1005;
  t4690 = -7.e-6*t200;
  t4692 = -2.8e-11*t261;
  t4698 = t200 + t4692;
  t4647 = t200 + t4568;
  t4799 = -0.80315*t4721;
  t4812 = -0.038575000014*t4729;
  t4814 = t4690 + t269;
  t4816 = -0.038576*t4814;
  t4824 = t4574 + t547;
  t4825 = -0.5031510000080001*t4824;
  t4841 = 9.666256095795e-12*t261;
  t4846 = 2.826290000000002e-7 + t4799 + t4812 + t4816 + t4825 + t4841;
  t4860 = t4690 + t1005;
  t4861 = -3.367757e-6*t4860;
  t4873 = -0.80315*t4698;
  t4875 = t218 + t4568;
  t4881 = -0.5031510000080001*t4875;
  t4885 = -0.148715*t4564;
  t4888 = 9.99986000053965e-7*t261;
  t4892 = 1.1305160000000008e-12 + t4861 + t4873 + t4881 + t4885 + t4888;
  t4896 = -0.148715*t4592;
  t4899 = t218 + t4692;
  t4927 = -0.038576*t4899;
  t4928 = -0.038575000014*t4647;
  t4934 = t4645 + t547;
  t4935 = -3.367757e-6*t4934;
  t4946 = 0.2999989999967999*t261;
  t4954 = -1.9784030000000015e-12 + t4896 + t4927 + t4928 + t4935 + t4946;
  t5062 = -4.00000000026e-6*t261;
  t5065 = t4560 + t5062;
  t5071 = 4.e-6*t4592;
  t5072 = t200 + t5071 + t4568;
  t5077 = 4.e-6*t4564;
  t5083 = 1.000000000049*t261;
  t5084 = t5077 + t5083;
  t4662 = 4.e-6*t4647;
  t4674 = -1.12e-16*t261;
  t4676 = t4645 + t4662 + t4674;
  t4704 = 7.e-6*t4698;
  t4711 = 1.96e-16*t261;
  t4714 = t4690 + t4704 + t4711;
  t4726 = 7.e-6*t4721;
  t4730 = 4.e-6*t4729;
  t4755 = 6.5e-11*t261;
  t4762 = t4726 + t4730 + t4755;
  t4683 = t1233*t4676;
  t4720 = t1162*t4714;
  t4772 = t972*t4762;
  t4776 = t4683 + t4720 + t4772;
  t4851 = t935*t4846;
  t4894 = t870*t4892;
  t4958 = t827*t4954;
  t4960 = t4851 + t4894 + t4958;
  t4963 = t655*t4846;
  t4968 = t484*t4892;
  t4982 = t199*t4954;
  t4984 = t4963 + t4968 + t4982;
  t5007 = t972*t4846;
  t5030 = t1162*t4892;
  t5038 = t1233*t4954;
  t5042 = t5007 + t5030 + t5038;
  t5144 = t972*t5065;
  t5147 = t1233*t5072;
  t5150 = t1162*t5084;
  t5151 = t5144 + t5147 + t5150;
  t5262 = -1.*t1570*t5065;
  t5268 = -1.*t1318*t4892;
  t5269 = -1.*t4846*t1349;
  t5270 = -1.*t4954*t1379;
  t5273 = -1.*t5084*t1715;
  t5274 = -1.*t5072*t1809;
  t5278 = t5262 + t5268 + t5269 + t5270 + t5273 + t5274;
  t5283 = t1132*t4846;
  t5285 = t1570*t4762;
  t5286 = t4714*t1715;
  t5289 = t4892*t1223;
  t5290 = t4676*t1809;
  t5291 = t4954*t1264;
  t5296 = t5283 + t5285 + t5286 + t5289 + t5290 + t5291;
  t5061 = -1.*t5042*t1998;
  t5159 = -1.*t5151*t2082;
  t5066 = t935*t5065;
  t5074 = t827*t5072;
  t5088 = t870*t5084;
  t5094 = t5066 + t5074 + t5088;
  t5121 = t655*t5065;
  t5126 = t199*t5072;
  t5132 = t484*t5084;
  t5135 = t5121 + t5126 + t5132;
  t5218 = t4776*t2082;
  t5226 = t5042*t1302;
  t5199 = t199*t4676;
  t5204 = t484*t4714;
  t5205 = t655*t4762;
  t5206 = t5199 + t5204 + t5205;
  t5169 = t827*t4676;
  t5178 = t870*t4714;
  t5186 = t935*t4762;
  t5190 = t5169 + t5178 + t5186;
  t5387 = t100*t4960;
  t5394 = t61*t4984;
  t5401 = t5387 + t5394;
  t5404 = t61*t4960;
  t5425 = -1.*t100*t4984;
  t5427 = t5404 + t5425;
  t4572 = t870*t4570;
  t4590 = t935*t4583;
  t4604 = t827*t4600;
  t4610 = t4572 + t4590 + t4604;
  t4626 = t484*t4570;
  t4630 = t655*t4583;
  t4632 = t199*t4600;
  t4637 = t4626 + t4630 + t4632;
  t5579 = t100*t4610;
  t5583 = t61*t4637;
  t5584 = t5579 + t5583;
  t5557 = t61*t4610;
  t5559 = -1.*t100*t4637;
  t5561 = t5557 + t5559;
  t5522 = t1162*t4570;
  t5525 = t972*t4583;
  t5530 = t1233*t4600;
  t5534 = t5522 + t5525 + t5530;
  t5567 = t52*t5561;
  t5586 = -1.*t5584*t2672;
  t5589 = t5567 + t5586;
  t5595 = t52*t5584;
  t5598 = t5561*t2672;
  t5599 = t5595 + t5598;
  t5603 = t39*t5534;
  t5604 = -1.*t2658*t5589;
  t5610 = t5603 + t5604;
  t5449 = t61*t5206;
  t5451 = t100*t5190;
  t5457 = t5449 + t5451;
  t5464 = -1.*t100*t5206;
  t5466 = t61*t5190;
  t5478 = t5464 + t5466;
  t5440 = t61*t5094;
  t5442 = -1.*t100*t5135;
  t5443 = t5440 + t5442;
  t5433 = t100*t5094;
  t5435 = t61*t5135;
  t5437 = t5433 + t5435;
  t5664 = t52*t5457;
  t5665 = t5478*t2672;
  t5666 = t5664 + t5665;
  t5671 = t52*t5427;
  t5677 = -1.*t5401*t2672;
  t5679 = t5671 + t5677;
  t5685 = t52*t5401;
  t5686 = t5427*t2672;
  t5687 = t5685 + t5686;
  t5737 = t52*t5437;
  t5754 = t5443*t2672;
  t5760 = t5737 + t5754;
  t5825 = t52*t5478;
  t5831 = -1.*t5457*t2672;
  t5832 = t5825 + t5831;
  t5692 = -1.*t5687*t3293;
  t5761 = -1.*t5760*t3308;
  t5696 = t52*t5443;
  t5703 = -1.*t5437*t2672;
  t5706 = t5696 + t5703;
  t5854 = t5666*t3308;
  t5860 = t5687*t3216;
  t5906 = t4776*t2658;
  t5917 = t39*t5832;
  t5919 = t5906 + t5917;
  t5929 = t5042*t2658;
  t5947 = t39*t5679;
  t5954 = t5929 + t5947;
  t5972 = t39*t5042;
  t5975 = -1.*t2658*t5679;
  t5981 = t5972 + t5975;
  t6006 = t5151*t2658;
  t6009 = t39*t5706;
  t6013 = t6006 + t6009;
  t6171 = -2.8e-11*t178;
  t6185 = t156 + t6171;
  t6198 = 4.e-6*t143;
  t6210 = t6198 + t470;
  t6265 = -7.e-6*t143;
  t6269 = t6265 + t927;
  t6238 = -4.e-6*t143;
  t6260 = t6238 + t470;
  t6311 = 7.e-6*t143;
  t6388 = 2.8e-11*t178;
  t6401 = t6311 + t927;
  t6413 = t143 + t6171;
  t6420 = t143 + t6388;
  t6422 = -0.038749000006999997*t6420;
  t6423 = t6238 + t965;
  t6425 = -1.8134809999999998e-6*t6423;
  t6426 = -0.2812110000084994*t178;
  t6427 = t6210*t1570;
  t6433 = t6185*t1715;
  t6438 = -1.000000000016*t178*t1809;
  t6445 = -2.7726089999999997e-12 + t6422 + t6425 + t6426 + t6427 + t6433 + t6438;
  t6315 = t6311 + t194;
  t6318 = -0.038749000006999997*t6315;
  t6323 = t6198 + t965;
  t6324 = -0.281211000004*t6323;
  t6327 = -1.1787626499999999e-16*t178;
  t6330 = -6.5e-11*t178*t1570;
  t6336 = t6269*t1715;
  t6341 = t6260*t1809;
  t6344 = 3.9608699999999997e-7 + t6318 + t6324 + t6327 + t6330 + t6336 + t6341;
  t6532 = t6401*t1132;
  t6554 = -1.000000000049*t178*t1223;
  t6556 = t6413*t1264;
  t6563 = t6532 + t6554 + t6556;
  t6386 = t6265 + t194;
  t6387 = -1.8134809999999998e-6*t6386;
  t6390 = t156 + t6388;
  t6391 = -0.281211000004*t6390;
  t6397 = -0.03874900000889869*t178;
  t6410 = t6401*t1570;
  t6412 = -1.000000000049*t178*t1715;
  t6414 = t6413*t1809;
  t6417 = 1.5843479999999999e-12 + t6387 + t6391 + t6397 + t6410 + t6412 + t6414;
  t6477 = -1.000000000049*t178*t1318;
  t6480 = t6401*t1349;
  t6485 = t6413*t1379;
  t6487 = t6477 + t6480 + t6485;
  t6419 = -1.*t1998*t6417;
  t6488 = -1.*t6487*t2082;
  t6350 = t6269*t1318;
  t6353 = -6.5e-11*t178*t1349;
  t6370 = t6260*t1379;
  t6381 = t6350 + t6353 + t6370;
  t6290 = t6185*t1318;
  t6291 = t6210*t1349;
  t6293 = -1.000000000016*t178*t1379;
  t6298 = t6290 + t6291 + t6293;
  t6622 = t2082*t6563;
  t6639 = t6417*t1302;
  t6766 = t61*t6344;
  t6768 = t100*t6445;
  t6769 = t6766 + t6768;
  t6747 = -1.*t100*t6344;
  t6754 = t61*t6445;
  t6755 = t6747 + t6754;
  t6602 = -6.5e-11*t178*t1132;
  t6603 = t6269*t1223;
  t6607 = t6260*t1264;
  t6612 = t6602 + t6603 + t6607;
  t6623 = t6210*t1132;
  t6627 = t6185*t1223;
  t6628 = -1.000000000016*t178*t1264;
  t6630 = t6623 + t6627 + t6628;
  t6168 = -1.000000000016*t178*t304;
  t6196 = t6185*t596;
  t6214 = t6210*t704;
  t6217 = t6168 + t6196 + t6214;
  t6264 = t6260*t304;
  t6271 = t6269*t596;
  t6273 = -6.5e-11*t178*t704;
  t6284 = t6264 + t6271 + t6273;
  t6880 = t100*t6217;
  t6881 = t61*t6284;
  t6882 = t6880 + t6881;
  t6851 = t61*t6217;
  t6860 = -1.*t100*t6284;
  t6872 = t6851 + t6860;
  t6828 = t6413*t304;
  t6834 = -1.000000000049*t178*t596;
  t6838 = t6401*t704;
  t6844 = t6828 + t6834 + t6838;
  t6874 = t52*t6872;
  t6885 = -1.*t6882*t2672;
  t6887 = t6874 + t6885;
  t6893 = t52*t6882;
  t6896 = t6872*t2672;
  t6899 = t6893 + t6896;
  t6915 = t39*t6844;
  t6916 = -1.*t2658*t6887;
  t6917 = t6915 + t6916;
  t6796 = t61*t6612;
  t6798 = t100*t6630;
  t6800 = t6796 + t6798;
  t6790 = -1.*t100*t6612;
  t6791 = t61*t6630;
  t6792 = t6790 + t6791;
  t6737 = -1.*t100*t6381;
  t6739 = t61*t6298;
  t6741 = t6737 + t6739;
  t6706 = t61*t6381;
  t6709 = t100*t6298;
  t6725 = t6706 + t6709;
  t6978 = t52*t6725;
  t6995 = t6741*t2672;
  t6999 = t6978 + t6995;
  t7034 = t52*t6755;
  t7041 = -1.*t6769*t2672;
  t7044 = t7034 + t7041;
  t7016 = t52*t6769;
  t7020 = t6755*t2672;
  t7022 = t7016 + t7020;
  t6939 = t52*t6800;
  t6943 = t6792*t2672;
  t6947 = t6939 + t6943;
  t7082 = t52*t6792;
  t7086 = -1.*t6800*t2672;
  t7098 = t7082 + t7086;
  t7011 = -1.*t6999*t3308;
  t7024 = -1.*t3293*t7022;
  t6967 = t52*t6741;
  t6969 = -1.*t6725*t2672;
  t6970 = t6967 + t6969;
  t7190 = t6487*t2658;
  t7192 = t39*t6970;
  t7195 = t7190 + t7192;
  t7073 = t7022*t3216;
  t7077 = t3308*t6947;
  t7214 = t6417*t2658;
  t7216 = t39*t7044;
  t7222 = t7214 + t7216;
  t7234 = t39*t6417;
  t7239 = -1.*t2658*t7044;
  t7243 = t7234 + t7239;
  t7151 = t6563*t2658;
  t7163 = t39*t7098;
  t7166 = t7151 + t7163;
  t7342 = -0.15121*t1383;
  t7368 = 0.15121*t1870;
  t7372 = t948*t1827;
  t7373 = t759*t1975;
  t7377 = t2918*t2082;
  t7379 = t7372 + t7373 + t7377;
  t7385 = t1302*t7379;
  t7387 = -1.*t1827*t2132;
  t7390 = -1.*t1975*t2174;
  t7394 = -1.*t2082*t1302;
  t7408 = t7387 + t7390 + t7394;
  t7410 = t2918*t7408;
  t7412 = t7342 + t7368 + t7385 + t7410;
  t7435 = t1570*t704;
  t7439 = t596*t1715;
  t7445 = t304*t1809;
  t7447 = t7435 + t7439 + t7445;
  t7451 = -1.*t1570*t1132;
  t7453 = -1.*t1715*t1223;
  t7455 = -1.*t1809*t1264;
  t7458 = t7451 + t7453 + t7455;
  t7417 = 0.281211*t1318;
  t7418 = -1. + t978;
  t7425 = 4.e-6*t7418;
  t7427 = t7425 + t539 + t1182;
  t7433 = 1.e-6*t7427;
  t7434 = -0.038749*t1379;
  t7448 = -1.*t1132*t7447;
  t7459 = -1.*t704*t7458;
  t7460 = t1264*t7447;
  t7461 = t304*t7458;
  t7462 = t7460 + t7461;
  t7464 = 7.e-6*t7462;
  t7465 = -1.*t1223*t7447;
  t7468 = -1.*t596*t7458;
  t7469 = t7465 + t7468;
  t7473 = 4.e-6*t7469;
  t7474 = t7417 + t7433 + t7434 + t7448 + t7459 + t7464 + t7473;
  t7516 = t2958*t2489;
  t7519 = t2946*t2528;
  t7522 = t7377 + t7516 + t7519;
  t7523 = t1302*t7522;
  t7526 = -1.*t2489*t2570;
  t7528 = -1.*t2528*t2600;
  t7545 = t7394 + t7526 + t7528;
  t7546 = t2918*t7545;
  t7553 = t7523 + t7546;
  t2653 = t2022 + t2024 + t2041 + t2054;
  t117 = t86 + t104;
  t2667 = t86 + t2473;
  t2697 = t1878 + t1895 + t1908 + t1950;
  t7562 = t52*t3139*t2658;
  t7567 = t3159*t2672;
  t7575 = t7562 + t7567;
  t7579 = t3159*t52;
  t7581 = -1.*t3139*t2658*t2672;
  t7582 = t7579 + t7581;
  t2730 = t1405 + t1408 + t1420 + t1463;
  t7631 = t3139*t3293;
  t7634 = t3159*t3506;
  t7647 = t7631 + t7634;
  t7657 = t3159*t3293;
  t7658 = -1.*t3139*t3506;
  t7659 = t7657 + t7658;
  t7667 = t2965*t3250;
  t7668 = t3157*t3308;
  t7669 = t7377 + t7667 + t7668;
  t7672 = t3216*t7669;
  t7675 = -1.*t3250*t3325;
  t7676 = -1.*t3308*t3216;
  t7677 = t7394 + t7675 + t7676;
  t7678 = t3157*t7677;
  t7681 = t7672 + t7678;
  t2795 = t1727 + t1735 + t1768 + t1806;
  t7611 = -1.*t100*t7575;
  t7617 = t61*t7582;
  t7619 = t7611 + t7617;
  t7622 = t61*t7575;
  t7624 = t100*t7582;
  t7625 = t7622 + t7624;
  t2834 = t1590 + t1632 + t1651 + t1661;
  t2876 = t1466 + t1499 + t1558 + t1563;
  t7816 = t2970*t3496;
  t7817 = t3172*t3539;
  t7818 = t7668 + t7816 + t7817;
  t7819 = t3471*t7818;
  t7820 = -1.*t3496*t3471;
  t7821 = -1.*t3539*t3573;
  t7823 = t7676 + t7820 + t7821;
  t7827 = t2970*t7823;
  t7829 = t7819 + t7827;
  t7689 = -1.*t39*t1233*t3139;
  t7692 = t199*t7619;
  t7695 = t827*t7625;
  t7701 = t7689 + t7692 + t7695;
  t7705 = -1.*t1162*t39*t3139;
  t7707 = t484*t7619;
  t7727 = t870*t7625;
  t7728 = t7705 + t7707 + t7727;
  t7740 = -1.*t39*t972*t3139;
  t7741 = t655*t7619;
  t7751 = t935*t7625;
  t7757 = t7740 + t7741 + t7751;
  t7953 = t3157*t3858;
  t7956 = t3817*t3308;
  t7961 = -1.*t3308*t3846;
  t7972 = -1.*t3858*t3216;
  t8062 = t3157*t3250;
  t8068 = t2965*t3308;
  t8078 = -1.*t3308*t3325;
  t8090 = -1.*t3250*t3216;
  t4433 = -1.*t1998*t2658;
  t4438 = -1.*t39*t3228;
  t4440 = t4433 + t4438;
  t4470 = -1.*t1302*t2658;
  t4473 = -1.*t39*t3325;
  t4486 = t4470 + t4473;
  t8256 = t596*t4892;
  t8257 = t4846*t704;
  t8260 = t1570*t4583;
  t8262 = t304*t4954;
  t8265 = t4570*t1715;
  t8269 = t4600*t1809;
  t8270 = t8256 + t8257 + t8260 + t8262 + t8265 + t8269;
  t8272 = -1.*t1132*t4846;
  t8273 = -1.*t1570*t4762;
  t8274 = -1.*t4714*t1715;
  t8276 = -1.*t4892*t1223;
  t8281 = -1.*t4676*t1809;
  t8284 = -1.*t4954*t1264;
  t8287 = t8272 + t8273 + t8274 + t8276 + t8281 + t8284;
  t8206 = t2918*t5042;
  t8215 = t5534*t2082;
  t8226 = -1.*t4776*t2082;
  t8231 = -1.*t5042*t1302;
  t6030 = t39*t5151;
  t6040 = -1.*t2658*t5706;
  t6050 = t6030 + t6040;
  t8378 = t3157*t5687;
  t8384 = t5599*t3308;
  t5550 = t5534*t2658;
  t5590 = t39*t5589;
  t5591 = t5550 + t5590;
  t8390 = -1.*t5666*t3308;
  t8404 = -1.*t5687*t3216;
  t6065 = t39*t4776;
  t6068 = -1.*t2658*t5832;
  t6104 = t6065 + t6068;
  t8455 = t2918*t6417;
  t8464 = t6844*t2082;
  t8474 = -1.*t2082*t6563;
  t8478 = -1.*t6417*t1302;
  t7203 = t39*t6487;
  t7206 = -1.*t2658*t6970;
  t7208 = t7203 + t7206;
  t8564 = t6899*t3308;
  t8565 = t3157*t7022;
  t6847 = t6844*t2658;
  t6888 = t39*t6887;
  t6891 = t6847 + t6888;
  t8573 = -1.*t7022*t3216;
  t8574 = -1.*t3308*t6947;
  t7284 = t39*t6563;
  t7287 = -1.*t2658*t7098;
  t7288 = t7284 + t7287;
  t8640 = -0.15121*t2132;
  t8643 = 0.15121*t2174;
  t8644 = -1.*t948*t1827;
  t8645 = -1.*t759*t1975;
  t8646 = -1.*t2918*t2082;
  t8651 = t8644 + t8645 + t8646;
  t8656 = t1998*t8651;
  t8658 = t1383*t1827;
  t8660 = t1870*t1975;
  t8662 = t1998*t2082;
  t8664 = t8658 + t8660 + t8662;
  t8665 = t2918*t8664;
  t8666 = t8640 + t8643 + t8656 + t8665;
  t8686 = -1.*t1570*t704;
  t8688 = -1.*t596*t1715;
  t8690 = -1.*t304*t1809;
  t8691 = t8686 + t8688 + t8690;
  t8696 = t1570*t1349;
  t8697 = t1318*t1715;
  t8698 = t1379*t1809;
  t8702 = t8696 + t8697 + t8698;
  t8673 = 4.e-6*t1502;
  t8675 = -7.e-6*t1016;
  t8676 = 1. + t662 + t8673 + t8675;
  t8679 = 1.e-6*t8676;
  t8684 = 0.281211*t1223;
  t8685 = -0.038749*t1264;
  t8692 = -1.*t1349*t8691;
  t8711 = -1.*t704*t8702;
  t8713 = t1379*t8691;
  t8714 = t304*t8702;
  t8720 = t8713 + t8714;
  t8721 = 7.e-6*t8720;
  t8723 = -1.*t1318*t8691;
  t8725 = -1.*t596*t8702;
  t8728 = t8723 + t8725;
  t8730 = 4.e-6*t8728;
  t8732 = t8679 + t8684 + t8685 + t8692 + t8711 + t8721 + t8730;
  t8735 = -1.*t2958*t2489;
  t8736 = -1.*t2946*t2528;
  t8737 = t8646 + t8735 + t8736;
  t8740 = t1998*t8737;
  t8741 = t2469*t2489;
  t8743 = t2522*t2528;
  t8745 = t8662 + t8741 + t8743;
  t8746 = t2918*t8745;
  t8747 = t8740 + t8746;
  t8750 = -1.*t3159*t52*t2658;
  t8751 = t3139*t2672;
  t8752 = t8750 + t8751;
  t8754 = t52*t3139;
  t8755 = t3159*t2658*t2672;
  t8756 = t8754 + t8755;
  t8772 = -1.*t2965*t3250;
  t8779 = -1.*t3157*t3308;
  t8781 = t8646 + t8772 + t8779;
  t8784 = t3293*t8781;
  t8785 = t3228*t3250;
  t8786 = t3293*t3308;
  t8788 = t8662 + t8785 + t8786;
  t8789 = t3157*t8788;
  t8790 = t8784 + t8789;
  t8794 = t3139*t3216;
  t8795 = t3159*t3573;
  t8796 = t8794 + t8795;
  t8802 = t3159*t3216;
  t8803 = -1.*t3139*t3573;
  t8804 = t8802 + t8803;
  t8761 = -1.*t100*t8752;
  t8762 = t61*t8756;
  t8763 = t8761 + t8762;
  t8768 = t61*t8752;
  t8769 = t100*t8756;
  t8770 = t8768 + t8769;
  t8856 = -1.*t2970*t3496;
  t8859 = -1.*t3172*t3539;
  t8860 = t8779 + t8856 + t8859;
  t8861 = t3482*t8860;
  t8862 = t3482*t3496;
  t8864 = t3506*t3539;
  t8865 = t8786 + t8862 + t8864;
  t8866 = t2970*t8865;
  t8867 = t8861 + t8866;
  t8809 = t3159*t39*t1233;
  t8812 = t199*t8763;
  t8814 = t827*t8770;
  t8817 = t8809 + t8812 + t8814;
  t8827 = t1162*t3159*t39;
  t8830 = t484*t8763;
  t8840 = t870*t8770;
  t8841 = t8827 + t8830 + t8840;
  t8845 = t3159*t39*t972;
  t8850 = t655*t8763;
  t8851 = t935*t8770;
  t8854 = t8845 + t8850 + t8851;
  t8954 = -1.*t3157*t3858;
  t8959 = -1.*t3817*t3308;
  t8969 = t3293*t3858;
  t8977 = t3913*t3308;
  t9029 = -1.*t3157*t3250;
  t9034 = -1.*t2965*t3308;
  t9040 = t3293*t3250;
  t9042 = t3228*t3308;
  t9181 = t1570*t5065;
  t9182 = t1318*t4892;
  t9183 = t4846*t1349;
  t9184 = t4954*t1379;
  t9185 = t5084*t1715;
  t9186 = t5072*t1809;
  t9188 = t9181 + t9182 + t9183 + t9184 + t9185 + t9186;
  t9191 = -1.*t596*t4892;
  t9192 = -1.*t4846*t704;
  t9193 = -1.*t1570*t4583;
  t9194 = -1.*t304*t4954;
  t9195 = -1.*t4570*t1715;
  t9196 = -1.*t4600*t1809;
  t9197 = t9191 + t9192 + t9193 + t9194 + t9195 + t9196;
  t9135 = -1.*t2918*t5042;
  t9146 = -1.*t5534*t2082;
  t9153 = t5042*t1998;
  t9158 = t5151*t2082;
  t9265 = -1.*t3157*t5687;
  t9271 = -1.*t5599*t3308;
  t9276 = t5687*t3293;
  t9282 = t5760*t3308;
  t9328 = -1.*t2918*t6417;
  t9332 = -1.*t6844*t2082;
  t9343 = t1998*t6417;
  t9348 = t6487*t2082;
  t9385 = -1.*t6899*t3308;
  t9386 = -1.*t3157*t7022;
  t9393 = t6999*t3308;
  t9396 = t3293*t7022;
  p_output1[0]=t2653*t2658 + t2697*t2713 + t2730*t2750 + t2795*t2824 + t2834*t2869 + t2876*t2901 - 0.80315*(t1249*t2824 + t1205*t2869 + t1016*t2901) - 0.038576*(t1750*t2824 + t1608*t2869 + t1502*t2901) - 1.*t2667*t2672*t39 + t117*t39*t52 - 0.148715*(t281*t2824 + t2869*t566 + t2901*t666) + var1[0] + t2970*var2[0] + t3200*var2[1] + t3178*var2[2] + t3578*var2[3] + ((-1.*t3139*t3157 - 1.*t3159*t3172)*var2[1] + t3200*var2[2])*var2[3] + t3372*var2[4] + (t3172*var2[0] - 1.*t3139*t4383*var2[1] + t3159*t4383*var2[2] + (t3551*t3573 + t3506*t3576 + t3471*(-1.*t3496*t3506 - 1.*t3482*t3539 - 1.*t3506*t4411 - 1.*t3539*t4440) + t3482*(t3471*t3539 + t3496*t3573 + t3573*t4411 + t3539*t4486))*var2[3])*var2[4] + t2633*var2[5] + (t39*t4083*var2[0] + (t2965*t3159 + t2658*t3139*t4083)*var2[1] + (t2965*t3139 - 1.*t2658*t3159*t4083)*var2[2] + (t3576*t39*t4131 + t3471*(t2658*t3539*t4131 - 1.*t3496*t39*t4131 + t4144 + t2658*t3506*t4175 - 1.*t3482*t39*t4175 + t4201) + t3551*t39*t4236 + t3482*(-1.*t2658*t3573*t4175 + t3471*t39*t4175 + t4227 - 1.*t2658*t3539*t4236 + t3496*t39*t4236 + t4250))*var2[3] + (t3315*t3325 + t3228*t3364 + t3216*(-1.*t3250*t4131 + t4144 - 1.*t3228*t4175 + t4201) + t3293*(t3325*t4175 + t4227 + t3250*t4236 + t4250))*var2[4])*var2[5] + t2217*var2[15] + (t3808*t39*var2[0] + (t2658*t3139*t3808 + t3159*t3817)*var2[1] + (-1.*t2658*t3159*t3808 + t3139*t3817)*var2[2] + (t3576*t3880*t39 + t3471*(t3873 + t2658*t3539*t3880 - 1.*t3496*t3880*t39 + t3914 + t2658*t3506*t3921 - 1.*t3482*t39*t3921) + t3551*t39*t3945 + t3482*(-1.*t2658*t3573*t3921 + t3471*t39*t3921 + t3940 - 1.*t2658*t3539*t3945 + t3496*t39*t3945 + t3962))*var2[3] + (t3315*t3846 + t3364*t3913 + t3216*(t3873 - 1.*t3250*t3880 + t3914 - 1.*t3228*t3921) + t3293*(t3325*t3921 + t3940 + t3250*t3945 + t3962))*var2[4] + (t1302*(-1.*t2489*t2522 - 1.*t2522*t3610 - 1.*t2528*t3648 - 1.*t2469*t3658) + t1998*(t2489*t2600 + t2600*t3610 + t2570*t3658 + t2528*t3740))*var2[5])*var2[15] + t2445*var2[16] + (t6891*var2[0] + (t3159*t6899 - 1.*t3139*t6917)*var2[1] + (t3139*t6899 + t3159*t6917)*var2[2] + (t3551*t7166 + t3576*t7195 + t3471*(t7011 + t7024 - 1.*t3496*t7195 - 1.*t3539*t7208 - 1.*t3482*t7222 - 1.*t3506*t7243) + t3482*(t7073 + t7077 + t3496*t7166 + t3471*t7222 + t3573*t7243 + t3539*t7288))*var2[3] + (t3315*t6947 + t3364*t6999 + t3216*(t6419 + t6488 - 1.*t3250*t6970 + t7011 + t7024 - 1.*t3228*t7044) + t3293*(t6622 + t6639 + t3325*t7044 + t7073 + t7077 + t3250*t7098))*var2[4] + (t2625*t6487 + t2546*t6563 + t1302*(t6419 + t6488 - 1.*t2489*t6725 - 1.*t2528*t6741 - 1.*t2522*t6755 - 1.*t2469*t6769) + t1998*(t6622 + t6639 + t2600*t6755 + t2570*t6769 + t2528*t6792 + t2489*t6800))*var2[5] + (-0.15121*t6217 + 0.15121*t6284 + t2199*t6487 + t1302*(-1.*t1827*t6298 - 1.*t1870*t6344 - 1.*t1975*t6381 + t6419 - 1.*t1383*t6445 + t6488) + t2114*t6563 + t1998*(t2174*t6344 + t2132*t6445 + t1975*t6612 + t6622 + t1827*t6630 + t6639))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t5591*var2[0] + (t3159*t5599 - 1.*t3139*t5610)*var2[1] + (t3139*t5599 + t3159*t5610)*var2[2] + (t3551*t5919 + t3576*t6013 + t3471*(t5692 + t5761 - 1.*t3482*t5954 - 1.*t3506*t5981 - 1.*t3496*t6013 - 1.*t3539*t6050) + t3482*(t5854 + t5860 + t3496*t5919 + t3471*t5954 + t3573*t5981 + t3539*t6104))*var2[3] + (t3315*t5666 + t3364*t5760 + t3216*(t5061 + t5159 - 1.*t3228*t5679 + t5692 - 1.*t3250*t5706 + t5761) + t3293*(t5218 + t5226 + t3325*t5679 + t3250*t5832 + t5854 + t5860))*var2[4] + (t2546*t4776 + t2625*t5151 + t1302*(t5061 + t5159 - 1.*t2469*t5401 - 1.*t2522*t5427 - 1.*t2489*t5437 - 1.*t2528*t5443) + t1998*(t5218 + t5226 + t2570*t5401 + t2600*t5427 + t2489*t5457 + t2528*t5478))*var2[5] + (-0.15121*t4610 + 0.15121*t4637 + t2114*t4776 + t2199*t5151 + t1302*(-1.*t1383*t4960 - 1.*t1870*t4984 + t5061 - 1.*t1827*t5094 - 1.*t1975*t5135 + t5159) + t1998*(t2132*t4960 + t2174*t4984 + t1827*t5190 + t1975*t5206 + t5218 + t5226))*var2[15] + (0.281211*t4570 - 0.038749*t4600 + 1.e-6*(-7.000000000455e-6*t261 + t4645) - 1.*t2297*t4762 - 1.*t2331*t5065 - 1.*t1132*t5278 - 1.*t1349*t5296 + 4.e-6*(-1.*t2297*t4714 - 1.*t2331*t5084 - 1.*t1223*t5278 - 1.*t1318*t5296) + 7.e-6*(t2297*t4676 + t2331*t5072 + t1264*t5278 + t1379*t5296))*var2[16])*var2[17] + t2970*var3[0] + t3200*var3[1] + t3178*var3[2] + t3578*var3[3] + t3372*var3[4] + t2633*var3[5] + t2217*var3[15] + t2445*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=-1.*t2653*t3139*t39 + t117*t7575 + t2667*t7582 + t2697*t7619 + t2730*t7625 + t2795*t7701 + t2834*t7728 + t2876*t7757 - 0.80315*(t1249*t7701 + t1205*t7728 + t1016*t7757) - 0.038576*(t1750*t7701 + t1608*t7728 + t1502*t7757) - 0.148715*(t281*t7701 + t566*t7728 + t666*t7757) + var1[1] + t3482*var2[0] + t7659*var2[1] + t7647*var2[2] + t7829*var2[3] + ((-1.*t3139*t3293 - 1.*t3159*t3506)*var2[1] + t7659*var2[2])*var2[3] + t7681*var2[4] + (t3506*var2[0] - 1.*t3139*t4440*var2[1] + t3159*t4440*var2[2] + (t3471*(t3172*t3496 + t2970*t3539 + t3539*t4383 + t3172*t4411) + t2970*(-1.*t3471*t3539 - 1.*t3496*t3573 - 1.*t3573*t4411 - 1.*t3539*t4486) + t3573*t7818 + t3172*t7823)*var2[3])*var2[4] + t7553*var2[5] + (t39*t4131*var2[0] + (t3159*t3228 + t2658*t3139*t4131)*var2[1] + (t3139*t3228 - 1.*t2658*t3159*t4131)*var2[2] + (t39*t4236*t7818 + t39*t4083*t7823 + t3471*(-1.*t2658*t3539*t4083 + t3496*t39*t4083 - 1.*t2658*t3172*t4175 + t2970*t39*t4175 + t8062 + t8068) + t2970*(t2658*t3573*t4175 - 1.*t3471*t39*t4175 + t2658*t3539*t4236 - 1.*t3496*t39*t4236 + t8078 + t8090))*var2[3] + (t3325*t7669 + t2965*t7677 + t3216*(t3250*t4083 + t2965*t4175 + t8062 + t8068) + t3157*(-1.*t3325*t4175 - 1.*t3250*t4236 + t8078 + t8090))*var2[4])*var2[5] + t7412*var2[15] + (t3880*t39*var2[0] + (t2658*t3139*t3880 + t3159*t3913)*var2[1] + (-1.*t2658*t3159*t3880 + t3139*t3913)*var2[2] + (t39*t3945*t7818 + t3808*t39*t7823 + t3471*(-1.*t2658*t3539*t3808 + t3496*t3808*t39 - 1.*t2658*t3172*t3921 + t2970*t39*t3921 + t7953 + t7956) + t2970*(t2658*t3573*t3921 - 1.*t3471*t39*t3921 + t2658*t3539*t3945 - 1.*t3496*t39*t3945 + t7961 + t7972))*var2[3] + (t3846*t7669 + t3817*t7677 + t3216*(t3250*t3808 + t2965*t3921 + t7953 + t7956) + t3157*(-1.*t3325*t3921 - 1.*t3250*t3945 + t7961 + t7972))*var2[4] + (t2918*(-1.*t2489*t2600 - 1.*t2600*t3610 - 1.*t2570*t3658 - 1.*t2528*t3740) + t1302*(t2489*t2946 + t2946*t3610 + t2958*t3658 + t2528*t3799))*var2[5])*var2[15] + t7474*var2[16] + (t7195*var2[0] + (t3159*t6999 - 1.*t3139*t7208)*var2[1] + (t3139*t6999 + t3159*t7208)*var2[2] + (t7166*t7818 + t6891*t7823 + t3471*(t3496*t6891 + t3539*t6917 + t2970*t7222 + t3172*t7243 + t8564 + t8565) + t2970*(-1.*t3496*t7166 - 1.*t3471*t7222 - 1.*t3573*t7243 - 1.*t3539*t7288 + t8573 + t8574))*var2[3] + (t6947*t7669 + t6899*t7677 + t3216*(t3250*t6887 + t2965*t7044 + t8455 + t8464 + t8564 + t8565) + t3157*(-1.*t3325*t7044 - 1.*t3250*t7098 + t8474 + t8478 + t8573 + t8574))*var2[4] + (t6563*t7522 + t6844*t7545 + t1302*(t2946*t6755 + t2958*t6769 + t2528*t6872 + t2489*t6882 + t8455 + t8464) + t2918*(-1.*t2600*t6755 - 1.*t2570*t6769 - 1.*t2528*t6792 - 1.*t2489*t6800 + t8474 + t8478))*var2[5] + (-0.15121*t6298 + 0.15121*t6381 + t6563*t7379 + t6844*t7408 + t2918*(-1.*t2174*t6344 - 1.*t2132*t6445 - 1.*t1975*t6612 - 1.*t1827*t6630 + t8474 + t8478) + t1302*(t1827*t6217 + t1975*t6284 + t6344*t759 + t8455 + t8464 + t6445*t948))*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t6013*var2[0] + (t3159*t5760 - 1.*t3139*t6050)*var2[1] + (t3139*t5760 + t3159*t6050)*var2[2] + (t5919*t7818 + t5591*t7823 + t3471*(t3496*t5591 + t3539*t5610 + t2970*t5954 + t3172*t5981 + t8378 + t8384) + t2970*(-1.*t3496*t5919 - 1.*t3471*t5954 - 1.*t3573*t5981 - 1.*t3539*t6104 + t8390 + t8404))*var2[3] + (t5666*t7669 + t5599*t7677 + t3216*(t3250*t5589 + t2965*t5679 + t8206 + t8215 + t8378 + t8384) + t3157*(-1.*t3325*t5679 - 1.*t3250*t5832 + t8226 + t8231 + t8390 + t8404))*var2[4] + (t4776*t7522 + t5534*t7545 + t1302*(t2958*t5401 + t2946*t5427 + t2528*t5561 + t2489*t5584 + t8206 + t8215) + t2918*(-1.*t2570*t5401 - 1.*t2600*t5427 - 1.*t2489*t5457 - 1.*t2528*t5478 + t8226 + t8231))*var2[5] + (-0.15121*t5094 + 0.15121*t5135 + t4776*t7379 + t5534*t7408 + t2918*(-1.*t2132*t4960 - 1.*t2174*t4984 - 1.*t1827*t5190 - 1.*t1975*t5206 + t8226 + t8231) + t1302*(t1827*t4610 + t1975*t4637 + t4984*t759 + t8206 + t8215 + t4960*t948))*var2[15] + (1.e-6*(4.00000000026e-6*t261 + t4690) - 0.038749*t5072 + 0.281211*t5084 - 1.*t4762*t7447 - 1.*t4583*t7458 - 1.*t1132*t8270 - 1.*t704*t8287 + 7.e-6*(t4676*t7447 + t4600*t7458 + t1264*t8270 + t304*t8287) + 4.e-6*(-1.*t4714*t7447 - 1.*t4570*t7458 - 1.*t1223*t8270 - 1.*t596*t8287))*var2[16])*var2[17] + t3482*var3[0] + t7659*var3[1] + t7647*var3[2] + t7829*var3[3] + t7681*var3[4] + t7553*var3[5] + t7412*var3[15] + t7474*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=t2653*t3159*t39 + t117*t8752 + t2667*t8756 + t2697*t8763 + t2730*t8770 + t2795*t8817 + t2834*t8841 + t2876*t8854 - 0.80315*(t1249*t8817 + t1205*t8841 + t1016*t8854) - 0.038576*(t1750*t8817 + t1608*t8841 + t1502*t8854) - 0.148715*(t281*t8817 + t566*t8841 + t666*t8854) + var1[2] + t3471*var2[0] + t8804*var2[1] + t8796*var2[2] + t8867*var2[3] + ((-1.*t3139*t3216 - 1.*t3159*t3573)*var2[1] + t8804*var2[2])*var2[3] + t8790*var2[4] + (t3573*var2[0] - 1.*t3139*t4486*var2[1] + t3159*t4486*var2[2] + (t3482*(-1.*t3172*t3496 - 1.*t2970*t3539 - 1.*t3539*t4383 - 1.*t3172*t4411) + t2970*(t3496*t3506 + t3482*t3539 + t3506*t4411 + t3539*t4440) + t3506*t8860 + t3172*t8865)*var2[3])*var2[4] + t8747*var2[5] + (t39*t4236*var2[0] + (t3159*t3325 + t2658*t3139*t4236)*var2[1] + (t3139*t3325 - 1.*t2658*t3159*t4236)*var2[2] + (t39*t4131*t8860 + t39*t4083*t8865 + t3482*(t2658*t3539*t4083 - 1.*t3496*t39*t4083 + t2658*t3172*t4175 - 1.*t2970*t39*t4175 + t9029 + t9034) + t2970*(-1.*t2658*t3539*t4131 + t3496*t39*t4131 - 1.*t2658*t3506*t4175 + t3482*t39*t4175 + t9040 + t9042))*var2[3] + (t3228*t8781 + t2965*t8788 + t3293*(-1.*t3250*t4083 - 1.*t2965*t4175 + t9029 + t9034) + t3157*(t3250*t4131 + t3228*t4175 + t9040 + t9042))*var2[4])*var2[5] + t8666*var2[15] + (t39*t3945*var2[0] + (t3159*t3846 + t2658*t3139*t3945)*var2[1] + (t3139*t3846 - 1.*t2658*t3159*t3945)*var2[2] + (t3880*t39*t8860 + t3808*t39*t8865 + t3482*(t2658*t3539*t3808 - 1.*t3496*t3808*t39 + t2658*t3172*t3921 - 1.*t2970*t39*t3921 + t8954 + t8959) + t2970*(-1.*t2658*t3539*t3880 + t3496*t3880*t39 - 1.*t2658*t3506*t3921 + t3482*t39*t3921 + t8969 + t8977))*var2[3] + (t3913*t8781 + t3817*t8788 + t3293*(-1.*t3250*t3808 - 1.*t2965*t3921 + t8954 + t8959) + t3157*(t3250*t3880 + t3228*t3921 + t8969 + t8977))*var2[4] + (t2918*(t2489*t2522 + t2522*t3610 + t2528*t3648 + t2469*t3658) + t1998*(-1.*t2489*t2946 - 1.*t2946*t3610 - 1.*t2958*t3658 - 1.*t2528*t3799))*var2[5])*var2[15] + t8732*var2[16] + (t7166*var2[0] + (t3159*t6947 - 1.*t3139*t7288)*var2[1] + (t3139*t6947 + t3159*t7288)*var2[2] + (t7195*t8860 + t6891*t8865 + t3482*(-1.*t3496*t6891 - 1.*t3539*t6917 - 1.*t2970*t7222 - 1.*t3172*t7243 + t9385 + t9386) + t2970*(t3496*t7195 + t3539*t7208 + t3482*t7222 + t3506*t7243 + t9393 + t9396))*var2[3] + (t6999*t8781 + t6899*t8788 + t3293*(-1.*t3250*t6887 - 1.*t2965*t7044 + t9328 + t9332 + t9385 + t9386) + t3157*(t3250*t6970 + t3228*t7044 + t9343 + t9348 + t9393 + t9396))*var2[4] + (t6487*t8737 + t6844*t8745 + t1998*(-1.*t2946*t6755 - 1.*t2958*t6769 - 1.*t2528*t6872 - 1.*t2489*t6882 + t9328 + t9332) + t2918*(t2489*t6725 + t2528*t6741 + t2522*t6755 + t2469*t6769 + t9343 + t9348))*var2[5] + (0.15121*t6612 - 0.15121*t6630 + t6487*t8651 + t6844*t8664 + t2918*(t1827*t6298 + t1870*t6344 + t1975*t6381 + t1383*t6445 + t9343 + t9348) + t1998*(-1.*t1827*t6217 - 1.*t1975*t6284 - 1.*t6344*t759 + t9328 + t9332 - 1.*t6445*t948))*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t5919*var2[0] + (t3159*t5666 - 1.*t3139*t6104)*var2[1] + (t3139*t5666 + t3159*t6104)*var2[2] + (t6013*t8860 + t5591*t8865 + t3482*(-1.*t3496*t5591 - 1.*t3539*t5610 - 1.*t2970*t5954 - 1.*t3172*t5981 + t9265 + t9271) + t2970*(t3482*t5954 + t3506*t5981 + t3496*t6013 + t3539*t6050 + t9276 + t9282))*var2[3] + (t5760*t8781 + t5599*t8788 + t3293*(-1.*t3250*t5589 - 1.*t2965*t5679 + t9135 + t9146 + t9265 + t9271) + t3157*(t3228*t5679 + t3250*t5706 + t9153 + t9158 + t9276 + t9282))*var2[4] + (t5151*t8737 + t5534*t8745 + t1998*(-1.*t2958*t5401 - 1.*t2946*t5427 - 1.*t2528*t5561 - 1.*t2489*t5584 + t9135 + t9146) + t2918*(t2469*t5401 + t2522*t5427 + t2489*t5437 + t2528*t5443 + t9153 + t9158))*var2[5] + (-0.15121*t5190 + 0.15121*t5206 + t5151*t8651 + t5534*t8664 + t2918*(t1383*t4960 + t1870*t4984 + t1827*t5094 + t1975*t5135 + t9153 + t9158) + t1998*(-1.*t1827*t4610 - 1.*t1975*t4637 - 1.*t4984*t759 + t9135 + t9146 - 1.*t4960*t948))*var2[15] + (-0.038749*t4676 + 0.281211*t4714 + 1.e-6*(-6.5e-11*t261 - 7.e-6*t4721 + 4.e-6*t4814) - 1.*t5065*t8691 - 1.*t4583*t8702 - 1.*t704*t9188 - 1.*t1349*t9197 + 4.e-6*(-1.*t5084*t8691 - 1.*t4570*t8702 - 1.*t596*t9188 - 1.*t1318*t9197) + 7.e-6*(t5072*t8691 + t4600*t8702 + t304*t9188 + t1379*t9197))*var2[16])*var2[17] + t3471*var3[0] + t8804*var3[1] + t8796*var3[2] + t8867*var3[3] + t8790*var3[4] + t8747*var3[5] + t8666*var3[15] + t8732*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_ParallelStance.hh"

namespace ParallelStance
{

void ddh_RrFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
