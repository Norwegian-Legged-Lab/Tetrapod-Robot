/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:40 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t373;
  double t393;
  double t428;
  double t262;
  double t264;
  double t276;
  double t290;
  double t472;
  double t488;
  double t447;
  double t455;
  double t510;
  double t511;
  double t516;
  double t634;
  double t683;
  double t695;
  double t764;
  double t779;
  double t820;
  double t837;
  double t288;
  double t956;
  double t976;
  double t984;
  double t987;
  double t1040;
  double t533;
  double t1582;
  double t1585;
  double t1263;
  double t1535;
  double t1287;
  double t1289;
  double t1675;
  double t1293;
  double t1298;
  double t1146;
  double t1160;
  double t302;
  double t1733;
  double t1570;
  double t1603;
  double t1748;
  double t1752;
  double t1839;
  double t1850;
  double t1863;
  double t579;
  double t609;
  double t1899;
  double t1903;
  double t853;
  double t891;
  double t1937;
  double t1943;
  double t344;
  double t1966;
  double t1968;
  double t2002;
  double t1478;
  double t2076;
  double t2077;
  double t2078;
  double t2148;
  double t2190;
  double t2200;
  double t2203;
  double t2209;
  double t2210;
  double t2217;
  double t2220;
  double t2221;
  double t2228;
  double t2230;
  double t2235;
  double t2237;
  double t2240;
  double t2259;
  double t2268;
  double t2273;
  double t2294;
  double t2314;
  double t2337;
  double t2341;
  double t2374;
  double t2375;
  double t2380;
  double t2385;
  double t2388;
  double t2392;
  double t2394;
  double t2410;
  double t1636;
  double t1655;
  double t1484;
  double t1831;
  double t2020;
  double t2523;
  double t2549;
  double t2624;
  double t2637;
  double t2638;
  double t2643;
  double t1999;
  double t2000;
  double t2011;
  double t2018;
  double t2040;
  double t2068;
  double t2218;
  double t2326;
  double t2430;
  double t2444;
  double t1520;
  double t1581;
  double t1605;
  double t1615;
  double t1681;
  double t1689;
  double t1778;
  double t1793;
  double t1853;
  double t1873;
  double t1874;
  double t2474;
  double t2478;
  double t2481;
  double t2521;
  double t2551;
  double t2553;
  double t2568;
  double t2576;
  double t2611;
  double t2614;
  double t2663;
  double t2673;
  double t2674;
  double t2678;
  double t2712;
  double t2713;
  double t2728;
  double t2729;
  double t2732;
  double t2739;
  double t1627;
  double t1818;
  double t1883;
  double t1894;
  double t521;
  double t845;
  double t1045;
  double t1054;
  double t1085;
  double t1199;
  double t1290;
  double t1336;
  double t1459;
  double t1471;
  double t1905;
  double t1964;
  double t1970;
  double t1994;
  double t2455;
  double t2459;
  double t2460;
  double t2463;
  double t2468;
  double t2622;
  double t2750;
  double t2751;
  double t2770;
  double t2771;
  double t2787;
  double t2801;
  double t2804;
  double t2807;
  double t2813;
  double t2815;
  double t2817;
  double t2827;
  double t2829;
  double t2832;
  double t2843;
  double t2844;
  double t2849;
  double t2935;
  double t2940;
  double t2945;
  double t2951;
  double t2966;
  double t2968;
  double t2970;
  double t2972;
  double t2890;
  double t2917;
  double t2922;
  double t2925;
  double t2934;
  double t2965;
  double t2973;
  double t2975;
  double t2976;
  double t2980;
  double t2987;
  double t2989;
  double t2994;
  double t2997;
  double t3000;
  double t3015;
  double t168;
  double t134;
  double t144;
  double t153;
  double t156;
  double t192;
  double t3073;
  double t3074;
  double t3076;
  double t3093;
  double t3124;
  double t3129;
  double t3143;
  double t3027;
  double t3030;
  double t3070;
  double t3095;
  double t3118;
  double t3120;
  double t3122;
  double t3148;
  double t3149;
  double t3153;
  double t3157;
  double t3166;
  double t3167;
  double t3168;
  double t3169;
  double t3171;
  double t3172;
  double t3175;
  double t3183;
  double t3211;
  double t3217;
  double t103;
  double t115;
  double t3277;
  double t3247;
  double t3282;
  double t3286;
  double t3290;
  double t3305;
  double t3308;
  double t3312;
  double t3445;
  double t3450;
  double t3476;
  double t3490;
  double t3497;
  double t3504;
  double t3506;
  double t3514;
  double t3518;
  double t3520;
  double t3523;
  double t3525;
  double t3528;
  double t3529;
  double t3530;
  double t3533;
  double t3325;
  double t3326;
  double t3331;
  double t3335;
  double t3357;
  double t3360;
  double t3362;
  double t3367;
  double t3387;
  double t3393;
  double t3394;
  double t3411;
  double t3592;
  double t3602;
  double t3604;
  double t3612;
  double t3614;
  double t3616;
  double t3624;
  double t3629;
  double t3639;
  double t3653;
  double t3659;
  double t3672;
  double t3673;
  double t3682;
  double t3759;
  double t3773;
  double t3775;
  double t3738;
  double t3751;
  double t3754;
  double t3786;
  double t3789;
  double t3792;
  double t3696;
  double t3707;
  double t3713;
  double t3721;
  double t3725;
  double t3726;
  double t3758;
  double t3795;
  double t3797;
  double t3803;
  double t3814;
  double t3815;
  double t3816;
  double t3817;
  double t3830;
  double t3834;
  double t3839;
  double t3843;
  double t3922;
  double t3928;
  double t3930;
  double t3940;
  double t3941;
  double t3942;
  double t3914;
  double t3916;
  double t3920;
  double t3948;
  double t3950;
  double t3952;
  double t3943;
  double t3944;
  double t3946;
  double t3947;
  double t3953;
  double t3956;
  double t3958;
  double t3961;
  double t3962;
  double t3964;
  double t3966;
  double t3968;
  double t3969;
  double t3970;
  double t3971;
  double t4032;
  double t4033;
  double t3987;
  double t3992;
  double t3997;
  double t3998;
  double t4081;
  double t4082;
  double t4090;
  double t4093;
  double t4094;
  double t4096;
  double t4112;
  double t4121;
  double t4048;
  double t4051;
  double t4052;
  double t4013;
  double t4015;
  double t4018;
  double t4164;
  double t4168;
  double t4229;
  double t4234;
  double t4241;
  double t4182;
  double t4184;
  double t4188;
  double t4221;
  double t4227;
  double t4195;
  double t4228;
  double t4206;
  double t4211;
  double t4214;
  double t4249;
  double t4250;
  double t4251;
  double t4246;
  double t4257;
  double t4339;
  double t4340;
  double t4406;
  double t4407;
  double t4412;
  double t4401;
  double t4422;
  double t4397;
  double t4399;
  double t4442;
  double t4448;
  double t4439;
  double t4466;
  double t4561;
  double t4565;
  double t4568;
  double t4584;
  double t4586;
  double t4590;
  double t4702;
  double t4673;
  double t4674;
  double t4675;
  double t4676;
  double t4678;
  double t4708;
  double t4711;
  double t4725;
  double t4728;
  double t4742;
  double t4758;
  double t4807;
  double t4885;
  double t4890;
  double t4863;
  double t4865;
  double t4869;
  double t4808;
  double t4922;
  double t4938;
  double t4951;
  double t4954;
  double t4955;
  double t4956;
  double t4957;
  double t4961;
  double t4964;
  double t4970;
  double t4981;
  double t4983;
  double t4985;
  double t4987;
  double t4989;
  double t4991;
  double t4993;
  double t4994;
  double t5007;
  double t5021;
  double t5026;
  double t5028;
  double t5034;
  double t5036;
  double t5097;
  double t5098;
  double t5100;
  double t5102;
  double t5107;
  double t5112;
  double t5119;
  double t4814;
  double t4827;
  double t4829;
  double t4877;
  double t4879;
  double t4882;
  double t4888;
  double t4894;
  double t4899;
  double t4901;
  double t4852;
  double t4883;
  double t4904;
  double t4906;
  double t4962;
  double t4992;
  double t5039;
  double t5040;
  double t5049;
  double t5051;
  double t5052;
  double t5053;
  double t5058;
  double t5059;
  double t5082;
  double t5087;
  double t5166;
  double t5170;
  double t5171;
  double t5175;
  double t5316;
  double t5318;
  double t5320;
  double t5323;
  double t5324;
  double t5325;
  double t5331;
  double t5335;
  double t5336;
  double t5341;
  double t5342;
  double t5343;
  double t5356;
  double t5366;
  double t5092;
  double t5177;
  double t5099;
  double t5103;
  double t5123;
  double t5124;
  double t5146;
  double t5148;
  double t5154;
  double t5164;
  double t5259;
  double t5269;
  double t5238;
  double t5240;
  double t5241;
  double t5246;
  double t5203;
  double t5204;
  double t5214;
  double t5228;
  double t5442;
  double t5443;
  double t5444;
  double t5451;
  double t5453;
  double t5455;
  double t4685;
  double t4720;
  double t4759;
  double t4760;
  double t4762;
  double t4776;
  double t4787;
  double t4796;
  double t5590;
  double t5595;
  double t5597;
  double t5578;
  double t5582;
  double t5586;
  double t5562;
  double t5564;
  double t5566;
  double t5574;
  double t5588;
  double t5603;
  double t5607;
  double t5619;
  double t5620;
  double t5621;
  double t5627;
  double t5629;
  double t5633;
  double t5506;
  double t5511;
  double t5515;
  double t5524;
  double t5526;
  double t5527;
  double t5486;
  double t5487;
  double t5497;
  double t5459;
  double t5462;
  double t5471;
  double t5654;
  double t5663;
  double t5664;
  double t5668;
  double t5669;
  double t5671;
  double t5675;
  double t5677;
  double t5679;
  double t5694;
  double t5696;
  double t5699;
  double t5704;
  double t5706;
  double t5707;
  double t5683;
  double t5700;
  double t5684;
  double t5686;
  double t5689;
  double t5724;
  double t5727;
  double t5752;
  double t5755;
  double t5763;
  double t5766;
  double t5769;
  double t5770;
  double t5783;
  double t5785;
  double t5787;
  double t5797;
  double t5799;
  double t5801;
  double t5882;
  double t5883;
  double t5888;
  double t5892;
  double t5906;
  double t5910;
  double t5901;
  double t5902;
  double t5931;
  double t5967;
  double t5972;
  double t5982;
  double t5998;
  double t6010;
  double t6017;
  double t6029;
  double t6030;
  double t6036;
  double t6039;
  double t6041;
  double t6042;
  double t5933;
  double t5935;
  double t5936;
  double t5937;
  double t5939;
  double t5940;
  double t5941;
  double t5945;
  double t5952;
  double t6065;
  double t6066;
  double t6067;
  double t6072;
  double t5961;
  double t5963;
  double t5968;
  double t5970;
  double t5971;
  double t5976;
  double t5980;
  double t5987;
  double t5993;
  double t6049;
  double t6050;
  double t6051;
  double t6052;
  double t5997;
  double t6054;
  double t5955;
  double t5956;
  double t5957;
  double t5959;
  double t5924;
  double t5925;
  double t5928;
  double t5929;
  double t6092;
  double t6105;
  double t6184;
  double t6185;
  double t6196;
  double t6161;
  double t6165;
  double t6166;
  double t6082;
  double t6085;
  double t6086;
  double t6087;
  double t6094;
  double t6096;
  double t6098;
  double t6100;
  double t5873;
  double t5884;
  double t5893;
  double t5897;
  double t5903;
  double t5916;
  double t5919;
  double t5920;
  double t6273;
  double t6276;
  double t6278;
  double t6263;
  double t6264;
  double t6271;
  double t6249;
  double t6250;
  double t6257;
  double t6258;
  double t6272;
  double t6282;
  double t6286;
  double t6298;
  double t6299;
  double t6306;
  double t6313;
  double t6314;
  double t6316;
  double t6231;
  double t6232;
  double t6233;
  double t6207;
  double t6208;
  double t6223;
  double t6138;
  double t6147;
  double t6151;
  double t6121;
  double t6127;
  double t6132;
  double t6338;
  double t6341;
  double t6344;
  double t6356;
  double t6359;
  double t6361;
  double t6350;
  double t6351;
  double t6352;
  double t6330;
  double t6331;
  double t6332;
  double t6379;
  double t6382;
  double t6384;
  double t6348;
  double t6354;
  double t6334;
  double t6335;
  double t6336;
  double t6412;
  double t6416;
  double t6425;
  double t6376;
  double t6377;
  double t6441;
  double t6448;
  double t6478;
  double t6496;
  double t6497;
  double t6499;
  double t6400;
  double t6401;
  double t6403;
  double t6539;
  double t6540;
  double t6541;
  double t6549;
  double t6551;
  double t6552;
  double t6553;
  double t6559;
  double t6560;
  double t6561;
  double t6567;
  double t6569;
  double t6585;
  double t6612;
  double t6621;
  double t6626;
  double t6630;
  double t6632;
  double t6633;
  double t6634;
  double t6638;
  double t6593;
  double t6594;
  double t6595;
  double t6598;
  double t6608;
  double t6611;
  double t6631;
  double t6641;
  double t6644;
  double t6648;
  double t6649;
  double t6650;
  double t6652;
  double t6653;
  double t6654;
  double t6655;
  double t6656;
  double t6663;
  double t6664;
  double t6666;
  double t6667;
  double t6668;
  double t6669;
  double t6672;
  double t6673;
  double t6676;
  double t3238;
  double t193;
  double t3276;
  double t3281;
  double t6685;
  double t6686;
  double t6687;
  double t6689;
  double t6691;
  double t6693;
  double t3296;
  double t6719;
  double t6720;
  double t6721;
  double t6727;
  double t6728;
  double t6730;
  double t6734;
  double t6740;
  double t6741;
  double t6742;
  double t6751;
  double t6752;
  double t6753;
  double t6756;
  double t6758;
  double t3315;
  double t6697;
  double t6698;
  double t6700;
  double t6705;
  double t6707;
  double t6709;
  double t3348;
  double t3375;
  double t6808;
  double t6810;
  double t6811;
  double t6813;
  double t6814;
  double t6815;
  double t6817;
  double t6818;
  double t6826;
  double t6761;
  double t6762;
  double t6763;
  double t6764;
  double t6769;
  double t6773;
  double t6780;
  double t6781;
  double t6783;
  double t6784;
  double t6789;
  double t6792;
  double t6927;
  double t6929;
  double t6937;
  double t6941;
  double t7004;
  double t7006;
  double t7018;
  double t7022;
  double t4603;
  double t4606;
  double t4607;
  double t4623;
  double t4629;
  double t4630;
  double t7206;
  double t7209;
  double t7210;
  double t7213;
  double t7217;
  double t7218;
  double t7220;
  double t7227;
  double t7229;
  double t7231;
  double t7234;
  double t7235;
  double t7240;
  double t7242;
  double t7136;
  double t7145;
  double t7156;
  double t7167;
  double t5805;
  double t5814;
  double t5816;
  double t7347;
  double t7351;
  double t5575;
  double t5609;
  double t5612;
  double t7363;
  double t7366;
  double t5843;
  double t5845;
  double t5847;
  double t7430;
  double t7432;
  double t7439;
  double t7443;
  double t6437;
  double t6438;
  double t6439;
  double t7516;
  double t7519;
  double t6262;
  double t6287;
  double t6290;
  double t7528;
  double t7533;
  double t6515;
  double t6518;
  double t6519;
  double t7574;
  double t7575;
  double t7576;
  double t7578;
  double t7580;
  double t7581;
  double t7584;
  double t7586;
  double t7587;
  double t7588;
  double t7590;
  double t7591;
  double t7592;
  double t7614;
  double t7616;
  double t7617;
  double t7618;
  double t7621;
  double t7623;
  double t7624;
  double t7627;
  double t7598;
  double t7602;
  double t7604;
  double t7610;
  double t7611;
  double t7612;
  double t7620;
  double t7629;
  double t7632;
  double t7636;
  double t7637;
  double t7639;
  double t7641;
  double t7642;
  double t7644;
  double t7646;
  double t7647;
  double t7650;
  double t7651;
  double t7652;
  double t7653;
  double t7654;
  double t7655;
  double t7656;
  double t7657;
  double t7658;
  double t7664;
  double t7670;
  double t7671;
  double t7676;
  double t7677;
  double t7678;
  double t7690;
  double t7692;
  double t7693;
  double t7694;
  double t7695;
  double t7696;
  double t7700;
  double t7701;
  double t7704;
  double t7708;
  double t7709;
  double t7710;
  double t7714;
  double t7716;
  double t7717;
  double t7682;
  double t7683;
  double t7684;
  double t7686;
  double t7687;
  double t7688;
  double t7753;
  double t7755;
  double t7756;
  double t7757;
  double t7758;
  double t7759;
  double t7760;
  double t7762;
  double t7763;
  double t7721;
  double t7724;
  double t7725;
  double t7726;
  double t7729;
  double t7731;
  double t7732;
  double t7737;
  double t7740;
  double t7742;
  double t7743;
  double t7749;
  double t7837;
  double t7839;
  double t7844;
  double t7848;
  double t7904;
  double t7906;
  double t7910;
  double t7914;
  double t8004;
  double t8006;
  double t8007;
  double t8008;
  double t8010;
  double t8012;
  double t8014;
  double t8017;
  double t8018;
  double t8019;
  double t8020;
  double t8021;
  double t8022;
  double t8023;
  double t7972;
  double t7975;
  double t7981;
  double t7986;
  double t8078;
  double t8080;
  double t8084;
  double t8087;
  double t8132;
  double t8137;
  double t8151;
  double t8153;
  double t8181;
  double t8182;
  double t8188;
  double t8189;
  t373 = Cos(var1[17]);
  t393 = -1.*t373;
  t428 = 1. + t393;
  t262 = Cos(var1[16]);
  t264 = -1.*t262;
  t276 = 1. + t264;
  t290 = Sin(var1[16]);
  t472 = Sin(var1[17]);
  t488 = 4.e-6*t472;
  t447 = 1.000000000016*t428;
  t455 = -7.e-6*t428;
  t510 = t455 + t488;
  t511 = -7.e-6*t510;
  t516 = -1. + t447 + t511;
  t634 = 2.8e-11*t428;
  t683 = 4.e-6*t428;
  t695 = 7.e-6*t472;
  t764 = t683 + t695;
  t779 = -7.e-6*t764;
  t820 = -1.*t472;
  t837 = t634 + t779 + t820;
  t288 = -7.e-6*t276;
  t956 = -6.5e-11*t428;
  t976 = 1. + t956;
  t984 = -7.e-6*t976;
  t987 = 7.e-6*t428;
  t1040 = t984 + t987 + t488;
  t533 = 4.e-6*t276;
  t1582 = -1. + t373;
  t1585 = 4.e-6*t1582;
  t1263 = -2.8e-11*t276;
  t1535 = -4.e-6*t472;
  t1287 = -1.*t290;
  t1289 = t1263 + t1287;
  t1675 = 1.000000000049*t428;
  t1293 = 4.e-6*t290;
  t1298 = t288 + t1293;
  t1146 = -1.000000000016*t276;
  t1160 = 1. + t1146;
  t302 = -4.e-6*t290;
  t1733 = -7.e-6*t472;
  t1570 = t455 + t1535;
  t1603 = t1585 + t695;
  t1748 = -2.8e-11*t428;
  t1752 = t1748 + t472;
  t1839 = -1.000000000016*t428;
  t1850 = 1. + t1839;
  t1863 = t634 + t472;
  t579 = -7.e-6*t290;
  t609 = t533 + t579;
  t1899 = 4.e-6*t764;
  t1903 = -1. + t1675 + t1899;
  t853 = -6.5e-11*t276;
  t891 = 1. + t853;
  t1937 = 4.e-6*t976;
  t1943 = t1937 + t1585 + t695;
  t344 = t288 + t302;
  t1966 = 4.e-6*t510;
  t1968 = t634 + t1966 + t472;
  t2002 = 7.e-6*t276;
  t1478 = 7.e-6*t290;
  t2076 = 2.826290000000002e-7*var1[17];
  t2077 = -0.148715*t976;
  t2078 = -2.18904205e-16*t428;
  t2148 = t683 + t1733;
  t2190 = -0.038576*t2148;
  t2200 = -0.80315*t1570;
  t2203 = t987 + t488;
  t2209 = -0.5031510000080001*t2203;
  t2210 = -0.038575000014*t1603;
  t2217 = t2076 + t2077 + t2078 + t2190 + t2200 + t2209 + t2210;
  t2220 = 1.1305160000000008e-12*var1[17];
  t2221 = -1.000000000049*t428;
  t2228 = 1. + t2221;
  t2230 = -0.038576*t2228;
  t2235 = -0.03857500001589017*t428;
  t2237 = t634 + t820;
  t2240 = -0.5031510000080001*t2237;
  t2259 = t1585 + t1733;
  t2268 = -3.367757e-6*t2259;
  t2273 = -0.148715*t764;
  t2294 = -0.80315*t1752;
  t2314 = t2220 + t2230 + t2235 + t2240 + t2268 + t2273 + t2294;
  t2337 = -1.9784030000000015e-12*var1[17];
  t2341 = -0.80315*t1850;
  t2374 = -0.5031510000160505*t428;
  t2375 = t1748 + t820;
  t2380 = -0.038576*t2375;
  t2385 = t987 + t1535;
  t2388 = -3.367757e-6*t2385;
  t2392 = -0.148715*t510;
  t2394 = -0.038575000014*t1863;
  t2410 = t2337 + t2341 + t2374 + t2380 + t2388 + t2392 + t2394;
  t1636 = -1.000000000049*t276;
  t1655 = 1. + t1636;
  t1484 = t533 + t1478;
  t1831 = t1263 + t290;
  t2020 = 2.8e-11*t276;
  t2523 = -1. + t262;
  t2549 = 4.e-6*t2523;
  t2624 = t1655*t1903;
  t2637 = t1484*t1943;
  t2638 = t1831*t1968;
  t2643 = t2624 + t2637 + t2638;
  t1999 = -2.7726089999999997e-12*var1[16];
  t2000 = -0.2812110000084994*t276;
  t2011 = t2002 + t302;
  t2018 = -1.8134809999999998e-6*t2011;
  t2040 = t2020 + t290;
  t2068 = -0.038749000006999997*t2040;
  t2218 = t1298*t2217;
  t2326 = t1289*t2314;
  t2430 = t1160*t2410;
  t2444 = t1999 + t2000 + t2018 + t2068 + t2218 + t2326 + t2430;
  t1520 = 6.5e-11*t428;
  t1581 = 7.e-6*t1570;
  t1605 = 4.e-6*t1603;
  t1615 = -1. + t1520 + t1581 + t1605;
  t1681 = -1. + t1675;
  t1689 = 4.e-6*t1681;
  t1778 = 7.e-6*t1752;
  t1793 = t1689 + t1585 + t1733 + t1778;
  t1853 = 7.e-6*t1850;
  t1873 = 4.e-6*t1863;
  t1874 = t1853 + t987 + t1535 + t1873;
  t2474 = 3.9608699999999997e-7*var1[16];
  t2478 = -1.1787626499999999e-16*t276;
  t2481 = t2002 + t1293;
  t2521 = -0.281211000004*t2481;
  t2551 = t2549 + t1478;
  t2553 = -0.038749000006999997*t2551;
  t2568 = t891*t2217;
  t2576 = t609*t2314;
  t2611 = t344*t2410;
  t2614 = t2474 + t2478 + t2521 + t2553 + t2568 + t2576 + t2611;
  t2663 = 1.5843479999999999e-12*var1[16];
  t2673 = -0.03874900000889869*t276;
  t2674 = t2020 + t1287;
  t2678 = -0.281211000004*t2674;
  t2712 = t2549 + t579;
  t2713 = -1.8134809999999998e-6*t2712;
  t2728 = t1484*t2217;
  t2729 = t1655*t2314;
  t2732 = t1831*t2410;
  t2739 = t2663 + t2673 + t2678 + t2713 + t2728 + t2729 + t2732;
  t1627 = t1484*t1615;
  t1818 = t1655*t1793;
  t1883 = t1831*t1874;
  t1894 = t1627 + t1818 + t1883;
  t521 = t344*t516;
  t845 = t609*t837;
  t1045 = t891*t1040;
  t1054 = t521 + t845 + t1045;
  t1085 = 0.15121*t1054;
  t1199 = t1160*t516;
  t1290 = t1289*t837;
  t1336 = t1298*t1040;
  t1459 = t1199 + t1290 + t1336;
  t1471 = -0.15121*t1459;
  t1905 = t1289*t1903;
  t1964 = t1298*t1943;
  t1970 = t1160*t1968;
  t1994 = t1905 + t1964 + t1970;
  t2455 = -1.*t1994*t2444;
  t2459 = t609*t1903;
  t2460 = t891*t1943;
  t2463 = t344*t1968;
  t2468 = t2459 + t2460 + t2463;
  t2622 = -1.*t2468*t2614;
  t2750 = -1.*t2643*t2739;
  t2751 = t2455 + t2622 + t2750;
  t2770 = t1894*t2751;
  t2771 = t1298*t1615;
  t2787 = t1289*t1793;
  t2801 = t1160*t1874;
  t2804 = t2771 + t2787 + t2801;
  t2807 = t2444*t2804;
  t2813 = t891*t1615;
  t2815 = t609*t1793;
  t2817 = t344*t1874;
  t2827 = t2813 + t2815 + t2817;
  t2829 = t2614*t2827;
  t2832 = t2739*t1894;
  t2843 = t2807 + t2829 + t2832;
  t2844 = t2643*t2843;
  t2849 = t1085 + t1471 + t2770 + t2844;
  t2935 = -1.*t2217*t1943;
  t2940 = -1.*t1903*t2314;
  t2945 = -1.*t1968*t2410;
  t2951 = t2935 + t2940 + t2945;
  t2966 = t2217*t1615;
  t2968 = t2314*t1793;
  t2970 = t2410*t1874;
  t2972 = t2966 + t2968 + t2970;
  t2890 = -0.038749*t516;
  t2917 = 0.281211*t837;
  t2922 = 7.e-6*t976;
  t2925 = t2922 + t455 + t1535;
  t2934 = 1.e-6*t2925;
  t2965 = -1.*t1615*t2951;
  t2973 = -1.*t1943*t2972;
  t2975 = -1.*t1793*t2951;
  t2976 = -1.*t1903*t2972;
  t2980 = t2975 + t2976;
  t2987 = 4.e-6*t2980;
  t2989 = t1874*t2951;
  t2994 = t1968*t2972;
  t2997 = t2989 + t2994;
  t3000 = 7.e-6*t2997;
  t3015 = t2890 + t2917 + t2934 + t2965 + t2973 + t2987 + t3000;
  t168 = Sin(var1[15]);
  t134 = Cos(var1[15]);
  t144 = -1.*t134;
  t153 = 1. + t144;
  t156 = -0.15121*t153;
  t192 = -0.15121*t168;
  t3073 = 0.15121*t168;
  t3074 = t168*t2444;
  t3076 = t134*t2614;
  t3093 = t156 + t3073 + t3074 + t3076;
  t3124 = t134*t2444;
  t3129 = -1.*t168*t2614;
  t3143 = t156 + t192 + t3124 + t3129;
  t3027 = t168*t1994;
  t3030 = t134*t2468;
  t3070 = t3027 + t3030;
  t3095 = -1.*t3070*t3093;
  t3118 = t134*t1994;
  t3120 = -1.*t168*t2468;
  t3122 = t3118 + t3120;
  t3148 = -1.*t3122*t3143;
  t3149 = t2750 + t3095 + t3148;
  t3153 = t1894*t3149;
  t3157 = t168*t2804;
  t3166 = t134*t2827;
  t3167 = t3157 + t3166;
  t3168 = t3093*t3167;
  t3169 = t134*t2804;
  t3171 = -1.*t168*t2827;
  t3172 = t3169 + t3171;
  t3175 = t3143*t3172;
  t3183 = t2832 + t3168 + t3175;
  t3211 = t2643*t3183;
  t3217 = t3153 + t3211;
  t103 = Cos(var1[4]);
  t115 = Cos(var1[5]);
  t3277 = Sin(var1[5]);
  t3247 = Sin(var1[4]);
  t3282 = -1.*t103*t115*t168;
  t3286 = -1.*t134*t103*t3277;
  t3290 = t3282 + t3286;
  t3305 = t134*t103*t115;
  t3308 = -1.*t103*t168*t3277;
  t3312 = t3305 + t3308;
  t3445 = t1831*t516;
  t3450 = t1655*t837;
  t3476 = t1484*t1040;
  t3490 = t3445 + t3450 + t3476;
  t3497 = t3490*t3247;
  t3504 = -1.*t168*t1054;
  t3506 = t134*t1459;
  t3514 = t3504 + t3506;
  t3518 = t115*t3514;
  t3520 = t134*t1054;
  t3523 = t168*t1459;
  t3525 = t3520 + t3523;
  t3528 = -1.*t3525*t3277;
  t3529 = t3518 + t3528;
  t3530 = t103*t3529;
  t3533 = t3497 + t3530;
  t3325 = t1831*t3247;
  t3326 = t344*t3290;
  t3331 = t1160*t3312;
  t3335 = t3325 + t3326 + t3331;
  t3357 = t1655*t3247;
  t3360 = t609*t3290;
  t3362 = t1289*t3312;
  t3367 = t3357 + t3360 + t3362;
  t3387 = t1484*t3247;
  t3393 = t891*t3290;
  t3394 = t1298*t3312;
  t3411 = t3387 + t3393 + t3394;
  t3592 = Sin(var1[3]);
  t3602 = t115*t3525;
  t3604 = t3514*t3277;
  t3612 = t3602 + t3604;
  t3614 = t3592*t3612;
  t3616 = Cos(var1[3]);
  t3624 = t103*t3490;
  t3629 = -1.*t3247*t3529;
  t3639 = t3624 + t3629;
  t3653 = t3616*t3639;
  t3659 = t3614 + t3653;
  t3672 = t3616*t3612;
  t3673 = -1.*t3592*t3639;
  t3682 = t3672 + t3673;
  t3759 = t115*t3070;
  t3773 = t3122*t3277;
  t3775 = t3759 + t3773;
  t3738 = t115*t3143;
  t3751 = -1.*t3093*t3277;
  t3754 = t3738 + t3751;
  t3786 = t115*t3093;
  t3789 = t3143*t3277;
  t3792 = t3786 + t3789;
  t3696 = t115*t3167;
  t3707 = t3172*t3277;
  t3713 = t3696 + t3707;
  t3721 = t115*t3122;
  t3725 = -1.*t3070*t3277;
  t3726 = t3721 + t3725;
  t3758 = -1.*t3726*t3754;
  t3795 = -1.*t3775*t3792;
  t3797 = t2750 + t3758 + t3795;
  t3803 = t3713*t3797;
  t3814 = t115*t3172;
  t3815 = -1.*t3167*t3277;
  t3816 = t3814 + t3815;
  t3817 = t3754*t3816;
  t3830 = t3792*t3713;
  t3834 = t2832 + t3817 + t3830;
  t3839 = t3775*t3834;
  t3843 = t3803 + t3839;
  t3922 = t2643*t3247;
  t3928 = t103*t3726;
  t3930 = t3922 + t3928;
  t3940 = t2739*t3247;
  t3941 = t103*t3754;
  t3942 = t3940 + t3941;
  t3914 = t1894*t3247;
  t3916 = t103*t3816;
  t3920 = t3914 + t3916;
  t3948 = t103*t2739;
  t3950 = -1.*t3247*t3754;
  t3952 = t3948 + t3950;
  t3943 = -1.*t3930*t3942;
  t3944 = t103*t2643;
  t3946 = -1.*t3247*t3726;
  t3947 = t3944 + t3946;
  t3953 = -1.*t3947*t3952;
  t3956 = t3795 + t3943 + t3953;
  t3958 = t3920*t3956;
  t3961 = t3942*t3920;
  t3962 = t103*t1894;
  t3964 = -1.*t3247*t3816;
  t3966 = t3962 + t3964;
  t3968 = t3952*t3966;
  t3969 = t3830 + t3961 + t3968;
  t3970 = t3930*t3969;
  t3971 = t3958 + t3970;
  t4032 = 0.15121*t134;
  t4033 = t4032 + t192 + t3124 + t3129;
  t3987 = -0.15121*t134;
  t3992 = -1.*t168*t2444;
  t3997 = -1.*t134*t2614;
  t3998 = t3987 + t192 + t3992 + t3997;
  t4081 = -1.*t134*t1054;
  t4082 = -1.*t168*t1459;
  t4090 = t4081 + t4082;
  t4093 = t115*t4090;
  t4094 = -1.*t3514*t3277;
  t4096 = t4093 + t4094;
  t4112 = t4090*t3277;
  t4121 = t3518 + t4112;
  t4048 = -1.*t168*t2804;
  t4051 = -1.*t134*t2827;
  t4052 = t4048 + t4051;
  t4013 = -1.*t168*t1994;
  t4015 = -1.*t134*t2468;
  t4018 = t4013 + t4015;
  t4164 = t4052*t3277;
  t4168 = t3814 + t4164;
  t4229 = t115*t3998;
  t4234 = -1.*t4033*t3277;
  t4241 = t4229 + t4234;
  t4182 = t115*t4033;
  t4184 = t3998*t3277;
  t4188 = t4182 + t4184;
  t4221 = t4018*t3277;
  t4227 = t3721 + t4221;
  t4195 = -1.*t3775*t4188;
  t4228 = -1.*t4227*t3792;
  t4206 = t115*t4018;
  t4211 = -1.*t3122*t3277;
  t4214 = t4206 + t4211;
  t4249 = t115*t4052;
  t4250 = -1.*t3172*t3277;
  t4251 = t4249 + t4250;
  t4246 = t3792*t4168;
  t4257 = t4188*t3713;
  t4339 = -1.*t115*t3525;
  t4340 = t4339 + t4094;
  t4406 = -1.*t115*t3093;
  t4407 = -1.*t3143*t3277;
  t4412 = t4406 + t4407;
  t4401 = -1.*t3775*t3754;
  t4422 = -1.*t3726*t3792;
  t4397 = -1.*t115*t3070;
  t4399 = t4397 + t4211;
  t4442 = -1.*t115*t3167;
  t4448 = t4442 + t4250;
  t4439 = t3792*t3816;
  t4466 = t3754*t3713;
  t4561 = -1.*t3490*t3247;
  t4565 = -1.*t103*t3529;
  t4568 = t4561 + t4565;
  t4584 = -1.*t2739*t3247;
  t4586 = -1.*t103*t3754;
  t4590 = t4584 + t4586;
  t4702 = 4.e-6*t373;
  t4673 = 7.e-6*t373;
  t4674 = t4673 + t488;
  t4675 = -7.e-6*t4674;
  t4676 = 2.8e-11*t472;
  t4678 = t393 + t4675 + t4676;
  t4708 = 7.000000000455e-6*t472;
  t4711 = t4702 + t4708;
  t4725 = t4702 + t1733;
  t4728 = -7.e-6*t4725;
  t4742 = 1.000000000016*t472;
  t4758 = t4728 + t4742;
  t4807 = -4.e-6*t373;
  t4885 = t4807 + t1733;
  t4890 = t4673 + t1535;
  t4863 = -7.e-6*t373;
  t4865 = -2.8e-11*t472;
  t4869 = t373 + t4865;
  t4808 = t373 + t4676;
  t4922 = -0.80315*t4885;
  t4938 = -0.038575000014*t4890;
  t4951 = t4863 + t488;
  t4954 = -0.038576*t4951;
  t4955 = t4702 + t695;
  t4956 = -0.5031510000080001*t4955;
  t4957 = 9.666256095795e-12*t472;
  t4961 = 2.826290000000002e-7 + t4922 + t4938 + t4954 + t4956 + t4957;
  t4964 = t4863 + t1535;
  t4970 = -3.367757e-6*t4964;
  t4981 = -0.80315*t4869;
  t4983 = t393 + t4676;
  t4985 = -0.5031510000080001*t4983;
  t4987 = -0.148715*t4674;
  t4989 = 9.99986000053965e-7*t472;
  t4991 = 1.1305160000000008e-12 + t4970 + t4981 + t4985 + t4987 + t4989;
  t4993 = -0.148715*t4725;
  t4994 = t393 + t4865;
  t5007 = -0.038576*t4994;
  t5021 = -0.038575000014*t4808;
  t5026 = t4807 + t695;
  t5028 = -3.367757e-6*t5026;
  t5034 = 0.2999989999967999*t472;
  t5036 = -1.9784030000000015e-12 + t4993 + t5007 + t5021 + t5028 + t5034;
  t5097 = -4.00000000026e-6*t472;
  t5098 = t4673 + t5097;
  t5100 = 4.e-6*t4725;
  t5102 = t373 + t5100 + t4676;
  t5107 = 4.e-6*t4674;
  t5112 = 1.000000000049*t472;
  t5119 = t5107 + t5112;
  t4814 = 4.e-6*t4808;
  t4827 = -1.12e-16*t472;
  t4829 = t4807 + t4814 + t4827;
  t4877 = 7.e-6*t4869;
  t4879 = 1.96e-16*t472;
  t4882 = t4863 + t4877 + t4879;
  t4888 = 7.e-6*t4885;
  t4894 = 4.e-6*t4890;
  t4899 = 6.5e-11*t472;
  t4901 = t4888 + t4894 + t4899;
  t4852 = t1831*t4829;
  t4883 = t1655*t4882;
  t4904 = t1484*t4901;
  t4906 = t4852 + t4883 + t4904;
  t4962 = t1298*t4961;
  t4992 = t1289*t4991;
  t5039 = t1160*t5036;
  t5040 = t4962 + t4992 + t5039;
  t5049 = t891*t4961;
  t5051 = t609*t4991;
  t5052 = t344*t5036;
  t5053 = t5049 + t5051 + t5052;
  t5058 = t1484*t4961;
  t5059 = t1655*t4991;
  t5082 = t1831*t5036;
  t5087 = t5058 + t5059 + t5082;
  t5166 = t1484*t5098;
  t5170 = t1831*t5102;
  t5171 = t1655*t5119;
  t5175 = t5166 + t5170 + t5171;
  t5316 = -1.*t2217*t5098;
  t5318 = -1.*t1903*t4991;
  t5320 = -1.*t4961*t1943;
  t5323 = -1.*t5036*t1968;
  t5324 = -1.*t5119*t2314;
  t5325 = -1.*t5102*t2410;
  t5331 = t5316 + t5318 + t5320 + t5323 + t5324 + t5325;
  t5335 = t1615*t4961;
  t5336 = t2217*t4901;
  t5341 = t4882*t2314;
  t5342 = t4991*t1793;
  t5343 = t4829*t2410;
  t5356 = t5036*t1874;
  t5366 = t5335 + t5336 + t5341 + t5342 + t5343 + t5356;
  t5092 = -1.*t5087*t2643;
  t5177 = -1.*t5175*t2739;
  t5099 = t1298*t5098;
  t5103 = t1160*t5102;
  t5123 = t1289*t5119;
  t5124 = t5099 + t5103 + t5123;
  t5146 = t891*t5098;
  t5148 = t344*t5102;
  t5154 = t609*t5119;
  t5164 = t5146 + t5148 + t5154;
  t5259 = t4906*t2739;
  t5269 = t5087*t1894;
  t5238 = t344*t4829;
  t5240 = t609*t4882;
  t5241 = t891*t4901;
  t5246 = t5238 + t5240 + t5241;
  t5203 = t1160*t4829;
  t5204 = t1289*t4882;
  t5214 = t1298*t4901;
  t5228 = t5203 + t5204 + t5214;
  t5442 = t168*t5040;
  t5443 = t134*t5053;
  t5444 = t5442 + t5443;
  t5451 = t134*t5040;
  t5453 = -1.*t168*t5053;
  t5455 = t5451 + t5453;
  t4685 = t1289*t4678;
  t4720 = t1298*t4711;
  t4759 = t1160*t4758;
  t4760 = t4685 + t4720 + t4759;
  t4762 = t609*t4678;
  t4776 = t891*t4711;
  t4787 = t344*t4758;
  t4796 = t4762 + t4776 + t4787;
  t5590 = t168*t4760;
  t5595 = t134*t4796;
  t5597 = t5590 + t5595;
  t5578 = t134*t4760;
  t5582 = -1.*t168*t4796;
  t5586 = t5578 + t5582;
  t5562 = t1655*t4678;
  t5564 = t1484*t4711;
  t5566 = t1831*t4758;
  t5574 = t5562 + t5564 + t5566;
  t5588 = t115*t5586;
  t5603 = -1.*t5597*t3277;
  t5607 = t5588 + t5603;
  t5619 = t115*t5597;
  t5620 = t5586*t3277;
  t5621 = t5619 + t5620;
  t5627 = t103*t5574;
  t5629 = -1.*t3247*t5607;
  t5633 = t5627 + t5629;
  t5506 = t134*t5246;
  t5511 = t168*t5228;
  t5515 = t5506 + t5511;
  t5524 = -1.*t168*t5246;
  t5526 = t134*t5228;
  t5527 = t5524 + t5526;
  t5486 = t134*t5124;
  t5487 = -1.*t168*t5164;
  t5497 = t5486 + t5487;
  t5459 = t168*t5124;
  t5462 = t134*t5164;
  t5471 = t5459 + t5462;
  t5654 = t115*t5515;
  t5663 = t5527*t3277;
  t5664 = t5654 + t5663;
  t5668 = t115*t5455;
  t5669 = -1.*t5444*t3277;
  t5671 = t5668 + t5669;
  t5675 = t115*t5444;
  t5677 = t5455*t3277;
  t5679 = t5675 + t5677;
  t5694 = t115*t5471;
  t5696 = t5497*t3277;
  t5699 = t5694 + t5696;
  t5704 = t115*t5527;
  t5706 = -1.*t5515*t3277;
  t5707 = t5704 + t5706;
  t5683 = -1.*t5679*t3775;
  t5700 = -1.*t5699*t3792;
  t5684 = t115*t5497;
  t5686 = -1.*t5471*t3277;
  t5689 = t5684 + t5686;
  t5724 = t5664*t3792;
  t5727 = t5679*t3713;
  t5752 = t4906*t3247;
  t5755 = t103*t5707;
  t5763 = t5752 + t5755;
  t5766 = t5087*t3247;
  t5769 = t103*t5671;
  t5770 = t5766 + t5769;
  t5783 = t103*t5087;
  t5785 = -1.*t3247*t5671;
  t5787 = t5783 + t5785;
  t5797 = t5175*t3247;
  t5799 = t103*t5689;
  t5801 = t5797 + t5799;
  t5882 = -2.8e-11*t290;
  t5883 = t264 + t5882;
  t5888 = 4.e-6*t262;
  t5892 = t5888 + t579;
  t5906 = -7.e-6*t262;
  t5910 = t5906 + t1293;
  t5901 = -4.e-6*t262;
  t5902 = t5901 + t579;
  t5931 = 7.e-6*t262;
  t5967 = 2.8e-11*t290;
  t5972 = t5931 + t1293;
  t5982 = t262 + t5882;
  t5998 = t262 + t5967;
  t6010 = -0.038749000006999997*t5998;
  t6017 = t5901 + t1478;
  t6029 = -1.8134809999999998e-6*t6017;
  t6030 = -0.2812110000084994*t290;
  t6036 = t5892*t2217;
  t6039 = t5883*t2314;
  t6041 = -1.000000000016*t290*t2410;
  t6042 = -2.7726089999999997e-12 + t6010 + t6029 + t6030 + t6036 + t6039 + t6041;
  t5933 = t5931 + t302;
  t5935 = -0.038749000006999997*t5933;
  t5936 = t5888 + t1478;
  t5937 = -0.281211000004*t5936;
  t5939 = -1.1787626499999999e-16*t290;
  t5940 = -6.5e-11*t290*t2217;
  t5941 = t5910*t2314;
  t5945 = t5902*t2410;
  t5952 = 3.9608699999999997e-7 + t5935 + t5937 + t5939 + t5940 + t5941 + t5945;
  t6065 = t5972*t1615;
  t6066 = -1.000000000049*t290*t1793;
  t6067 = t5982*t1874;
  t6072 = t6065 + t6066 + t6067;
  t5961 = t5906 + t302;
  t5963 = -1.8134809999999998e-6*t5961;
  t5968 = t264 + t5967;
  t5970 = -0.281211000004*t5968;
  t5971 = -0.03874900000889869*t290;
  t5976 = t5972*t2217;
  t5980 = -1.000000000049*t290*t2314;
  t5987 = t5982*t2410;
  t5993 = 1.5843479999999999e-12 + t5963 + t5970 + t5971 + t5976 + t5980 + t5987;
  t6049 = -1.000000000049*t290*t1903;
  t6050 = t5972*t1943;
  t6051 = t5982*t1968;
  t6052 = t6049 + t6050 + t6051;
  t5997 = -1.*t2643*t5993;
  t6054 = -1.*t6052*t2739;
  t5955 = t5910*t1903;
  t5956 = -6.5e-11*t290*t1943;
  t5957 = t5902*t1968;
  t5959 = t5955 + t5956 + t5957;
  t5924 = t5883*t1903;
  t5925 = t5892*t1943;
  t5928 = -1.000000000016*t290*t1968;
  t5929 = t5924 + t5925 + t5928;
  t6092 = t2739*t6072;
  t6105 = t5993*t1894;
  t6184 = t134*t5952;
  t6185 = t168*t6042;
  t6196 = t6184 + t6185;
  t6161 = -1.*t168*t5952;
  t6165 = t134*t6042;
  t6166 = t6161 + t6165;
  t6082 = -6.5e-11*t290*t1615;
  t6085 = t5910*t1793;
  t6086 = t5902*t1874;
  t6087 = t6082 + t6085 + t6086;
  t6094 = t5892*t1615;
  t6096 = t5883*t1793;
  t6098 = -1.000000000016*t290*t1874;
  t6100 = t6094 + t6096 + t6098;
  t5873 = -1.000000000016*t290*t516;
  t5884 = t5883*t837;
  t5893 = t5892*t1040;
  t5897 = t5873 + t5884 + t5893;
  t5903 = t5902*t516;
  t5916 = t5910*t837;
  t5919 = -6.5e-11*t290*t1040;
  t5920 = t5903 + t5916 + t5919;
  t6273 = t168*t5897;
  t6276 = t134*t5920;
  t6278 = t6273 + t6276;
  t6263 = t134*t5897;
  t6264 = -1.*t168*t5920;
  t6271 = t6263 + t6264;
  t6249 = t5982*t516;
  t6250 = -1.000000000049*t290*t837;
  t6257 = t5972*t1040;
  t6258 = t6249 + t6250 + t6257;
  t6272 = t115*t6271;
  t6282 = -1.*t6278*t3277;
  t6286 = t6272 + t6282;
  t6298 = t115*t6278;
  t6299 = t6271*t3277;
  t6306 = t6298 + t6299;
  t6313 = t103*t6258;
  t6314 = -1.*t3247*t6286;
  t6316 = t6313 + t6314;
  t6231 = t134*t6087;
  t6232 = t168*t6100;
  t6233 = t6231 + t6232;
  t6207 = -1.*t168*t6087;
  t6208 = t134*t6100;
  t6223 = t6207 + t6208;
  t6138 = -1.*t168*t5959;
  t6147 = t134*t5929;
  t6151 = t6138 + t6147;
  t6121 = t134*t5959;
  t6127 = t168*t5929;
  t6132 = t6121 + t6127;
  t6338 = t115*t6132;
  t6341 = t6151*t3277;
  t6344 = t6338 + t6341;
  t6356 = t115*t6166;
  t6359 = -1.*t6196*t3277;
  t6361 = t6356 + t6359;
  t6350 = t115*t6196;
  t6351 = t6166*t3277;
  t6352 = t6350 + t6351;
  t6330 = t115*t6233;
  t6331 = t6223*t3277;
  t6332 = t6330 + t6331;
  t6379 = t115*t6223;
  t6382 = -1.*t6233*t3277;
  t6384 = t6379 + t6382;
  t6348 = -1.*t6344*t3792;
  t6354 = -1.*t3775*t6352;
  t6334 = t115*t6151;
  t6335 = -1.*t6132*t3277;
  t6336 = t6334 + t6335;
  t6412 = t6052*t3247;
  t6416 = t103*t6336;
  t6425 = t6412 + t6416;
  t6376 = t6352*t3713;
  t6377 = t3792*t6332;
  t6441 = t5993*t3247;
  t6448 = t103*t6361;
  t6478 = t6441 + t6448;
  t6496 = t103*t5993;
  t6497 = -1.*t3247*t6361;
  t6499 = t6496 + t6497;
  t6400 = t6072*t3247;
  t6401 = t103*t6384;
  t6403 = t6400 + t6401;
  t6539 = -0.15121*t1994;
  t6540 = 0.15121*t2468;
  t6541 = t1459*t2444;
  t6549 = t1054*t2614;
  t6551 = t3490*t2739;
  t6552 = t6541 + t6549 + t6551;
  t6553 = t1894*t6552;
  t6559 = -1.*t2444*t2804;
  t6560 = -1.*t2614*t2827;
  t6561 = -1.*t2739*t1894;
  t6567 = t6559 + t6560 + t6561;
  t6569 = t3490*t6567;
  t6585 = t6539 + t6540 + t6553 + t6569;
  t6612 = t2217*t1040;
  t6621 = t837*t2314;
  t6626 = t516*t2410;
  t6630 = t6612 + t6621 + t6626;
  t6632 = -1.*t2217*t1615;
  t6633 = -1.*t2314*t1793;
  t6634 = -1.*t2410*t1874;
  t6638 = t6632 + t6633 + t6634;
  t6593 = 0.281211*t1903;
  t6594 = -1. + t1520;
  t6595 = 4.e-6*t6594;
  t6598 = t6595 + t683 + t1733;
  t6608 = 1.e-6*t6598;
  t6611 = -0.038749*t1968;
  t6631 = -1.*t1615*t6630;
  t6641 = -1.*t1040*t6638;
  t6644 = t1874*t6630;
  t6648 = t516*t6638;
  t6649 = t6644 + t6648;
  t6650 = 7.e-6*t6649;
  t6652 = -1.*t1793*t6630;
  t6653 = -1.*t837*t6638;
  t6654 = t6652 + t6653;
  t6655 = 4.e-6*t6654;
  t6656 = t6593 + t6608 + t6611 + t6631 + t6641 + t6650 + t6655;
  t6663 = t3525*t3093;
  t6664 = t3514*t3143;
  t6666 = t6551 + t6663 + t6664;
  t6667 = t1894*t6666;
  t6668 = -1.*t3093*t3167;
  t6669 = -1.*t3143*t3172;
  t6672 = t6561 + t6668 + t6669;
  t6673 = t3490*t6672;
  t6676 = t6667 + t6673;
  t3238 = t2663 + t2673 + t2678 + t2713;
  t193 = t156 + t192;
  t3276 = t156 + t3073;
  t3281 = t2474 + t2478 + t2521 + t2553;
  t6685 = t115*t3592*t3247;
  t6686 = t3616*t3277;
  t6687 = t6685 + t6686;
  t6689 = t3616*t115;
  t6691 = -1.*t3592*t3247*t3277;
  t6693 = t6689 + t6691;
  t3296 = t1999 + t2000 + t2018 + t2068;
  t6719 = t3592*t3775;
  t6720 = t3616*t3947;
  t6721 = t6719 + t6720;
  t6727 = t3616*t3775;
  t6728 = -1.*t3592*t3947;
  t6730 = t6727 + t6728;
  t6734 = t3529*t3754;
  t6740 = t3612*t3792;
  t6741 = t6551 + t6734 + t6740;
  t6742 = t3713*t6741;
  t6751 = -1.*t3754*t3816;
  t6752 = -1.*t3792*t3713;
  t6753 = t6561 + t6751 + t6752;
  t6756 = t3612*t6753;
  t6758 = t6742 + t6756;
  t3315 = t2337 + t2374 + t2388 + t2394;
  t6697 = -1.*t168*t6687;
  t6698 = t134*t6693;
  t6700 = t6697 + t6698;
  t6705 = t134*t6687;
  t6707 = t168*t6693;
  t6709 = t6705 + t6707;
  t3348 = t2220 + t2235 + t2240 + t2268;
  t3375 = t2076 + t2078 + t2209 + t2210;
  t6808 = t3533*t3942;
  t6810 = t3639*t3952;
  t6811 = t6740 + t6808 + t6810;
  t6813 = t3920*t6811;
  t6814 = -1.*t3942*t3920;
  t6815 = -1.*t3952*t3966;
  t6817 = t6752 + t6814 + t6815;
  t6818 = t3533*t6817;
  t6826 = t6813 + t6818;
  t6761 = -1.*t103*t1831*t3592;
  t6762 = t344*t6700;
  t6763 = t1160*t6709;
  t6764 = t6761 + t6762 + t6763;
  t6769 = -1.*t1655*t103*t3592;
  t6773 = t609*t6700;
  t6780 = t1289*t6709;
  t6781 = t6769 + t6773 + t6780;
  t6783 = -1.*t103*t1484*t3592;
  t6784 = t891*t6700;
  t6789 = t1298*t6709;
  t6792 = t6783 + t6784 + t6789;
  t6927 = t3612*t4188;
  t6929 = t4121*t3792;
  t6937 = -1.*t3792*t4168;
  t6941 = -1.*t4188*t3713;
  t7004 = t3612*t3754;
  t7006 = t3529*t3792;
  t7018 = -1.*t3792*t3816;
  t7022 = -1.*t3754*t3713;
  t4603 = -1.*t2643*t3247;
  t4606 = -1.*t103*t3726;
  t4607 = t4603 + t4606;
  t4623 = -1.*t1894*t3247;
  t4629 = -1.*t103*t3816;
  t4630 = t4623 + t4629;
  t7206 = t837*t4991;
  t7209 = t4961*t1040;
  t7210 = t2217*t4711;
  t7213 = t516*t5036;
  t7217 = t4678*t2314;
  t7218 = t4758*t2410;
  t7220 = t7206 + t7209 + t7210 + t7213 + t7217 + t7218;
  t7227 = -1.*t1615*t4961;
  t7229 = -1.*t2217*t4901;
  t7231 = -1.*t4882*t2314;
  t7234 = -1.*t4991*t1793;
  t7235 = -1.*t4829*t2410;
  t7240 = -1.*t5036*t1874;
  t7242 = t7227 + t7229 + t7231 + t7234 + t7235 + t7240;
  t7136 = t3490*t5087;
  t7145 = t5574*t2739;
  t7156 = -1.*t4906*t2739;
  t7167 = -1.*t5087*t1894;
  t5805 = t103*t5175;
  t5814 = -1.*t3247*t5689;
  t5816 = t5805 + t5814;
  t7347 = t3612*t5679;
  t7351 = t5621*t3792;
  t5575 = t5574*t3247;
  t5609 = t103*t5607;
  t5612 = t5575 + t5609;
  t7363 = -1.*t5664*t3792;
  t7366 = -1.*t5679*t3713;
  t5843 = t103*t4906;
  t5845 = -1.*t3247*t5707;
  t5847 = t5843 + t5845;
  t7430 = t3490*t5993;
  t7432 = t6258*t2739;
  t7439 = -1.*t2739*t6072;
  t7443 = -1.*t5993*t1894;
  t6437 = t103*t6052;
  t6438 = -1.*t3247*t6336;
  t6439 = t6437 + t6438;
  t7516 = t6306*t3792;
  t7519 = t3612*t6352;
  t6262 = t6258*t3247;
  t6287 = t103*t6286;
  t6290 = t6262 + t6287;
  t7528 = -1.*t6352*t3713;
  t7533 = -1.*t3792*t6332;
  t6515 = t103*t6072;
  t6518 = -1.*t3247*t6384;
  t6519 = t6515 + t6518;
  t7574 = -0.15121*t2804;
  t7575 = 0.15121*t2827;
  t7576 = -1.*t1459*t2444;
  t7578 = -1.*t1054*t2614;
  t7580 = -1.*t3490*t2739;
  t7581 = t7576 + t7578 + t7580;
  t7584 = t2643*t7581;
  t7586 = t1994*t2444;
  t7587 = t2468*t2614;
  t7588 = t2643*t2739;
  t7590 = t7586 + t7587 + t7588;
  t7591 = t3490*t7590;
  t7592 = t7574 + t7575 + t7584 + t7591;
  t7614 = -1.*t2217*t1040;
  t7616 = -1.*t837*t2314;
  t7617 = -1.*t516*t2410;
  t7618 = t7614 + t7616 + t7617;
  t7621 = t2217*t1943;
  t7623 = t1903*t2314;
  t7624 = t1968*t2410;
  t7627 = t7621 + t7623 + t7624;
  t7598 = 4.e-6*t2148;
  t7602 = -7.e-6*t1570;
  t7604 = 1. + t956 + t7598 + t7602;
  t7610 = 1.e-6*t7604;
  t7611 = 0.281211*t1793;
  t7612 = -0.038749*t1874;
  t7620 = -1.*t1943*t7618;
  t7629 = -1.*t1040*t7627;
  t7632 = t1968*t7618;
  t7636 = t516*t7627;
  t7637 = t7632 + t7636;
  t7639 = 7.e-6*t7637;
  t7641 = -1.*t1903*t7618;
  t7642 = -1.*t837*t7627;
  t7644 = t7641 + t7642;
  t7646 = 4.e-6*t7644;
  t7647 = t7610 + t7611 + t7612 + t7620 + t7629 + t7639 + t7646;
  t7650 = -1.*t3525*t3093;
  t7651 = -1.*t3514*t3143;
  t7652 = t7580 + t7650 + t7651;
  t7653 = t2643*t7652;
  t7654 = t3070*t3093;
  t7655 = t3122*t3143;
  t7656 = t7588 + t7654 + t7655;
  t7657 = t3490*t7656;
  t7658 = t7653 + t7657;
  t7664 = -1.*t3616*t115*t3247;
  t7670 = t3592*t3277;
  t7671 = t7664 + t7670;
  t7676 = t115*t3592;
  t7677 = t3616*t3247*t3277;
  t7678 = t7676 + t7677;
  t7690 = -1.*t3529*t3754;
  t7692 = -1.*t3612*t3792;
  t7693 = t7580 + t7690 + t7692;
  t7694 = t3775*t7693;
  t7695 = t3726*t3754;
  t7696 = t3775*t3792;
  t7700 = t7588 + t7695 + t7696;
  t7701 = t3612*t7700;
  t7704 = t7694 + t7701;
  t7708 = t3592*t3713;
  t7709 = t3616*t3966;
  t7710 = t7708 + t7709;
  t7714 = t3616*t3713;
  t7716 = -1.*t3592*t3966;
  t7717 = t7714 + t7716;
  t7682 = -1.*t168*t7671;
  t7683 = t134*t7678;
  t7684 = t7682 + t7683;
  t7686 = t134*t7671;
  t7687 = t168*t7678;
  t7688 = t7686 + t7687;
  t7753 = -1.*t3533*t3942;
  t7755 = -1.*t3639*t3952;
  t7756 = t7692 + t7753 + t7755;
  t7757 = t3930*t7756;
  t7758 = t3930*t3942;
  t7759 = t3947*t3952;
  t7760 = t7696 + t7758 + t7759;
  t7762 = t3533*t7760;
  t7763 = t7757 + t7762;
  t7721 = t3616*t103*t1831;
  t7724 = t344*t7684;
  t7725 = t1160*t7688;
  t7726 = t7721 + t7724 + t7725;
  t7729 = t1655*t3616*t103;
  t7731 = t609*t7684;
  t7732 = t1289*t7688;
  t7737 = t7729 + t7731 + t7732;
  t7740 = t3616*t103*t1484;
  t7742 = t891*t7684;
  t7743 = t1298*t7688;
  t7749 = t7740 + t7742 + t7743;
  t7837 = -1.*t3612*t4188;
  t7839 = -1.*t4121*t3792;
  t7844 = t3775*t4188;
  t7848 = t4227*t3792;
  t7904 = -1.*t3612*t3754;
  t7906 = -1.*t3529*t3792;
  t7910 = t3775*t3754;
  t7914 = t3726*t3792;
  t8004 = t2217*t5098;
  t8006 = t1903*t4991;
  t8007 = t4961*t1943;
  t8008 = t5036*t1968;
  t8010 = t5119*t2314;
  t8012 = t5102*t2410;
  t8014 = t8004 + t8006 + t8007 + t8008 + t8010 + t8012;
  t8017 = -1.*t837*t4991;
  t8018 = -1.*t4961*t1040;
  t8019 = -1.*t2217*t4711;
  t8020 = -1.*t516*t5036;
  t8021 = -1.*t4678*t2314;
  t8022 = -1.*t4758*t2410;
  t8023 = t8017 + t8018 + t8019 + t8020 + t8021 + t8022;
  t7972 = -1.*t3490*t5087;
  t7975 = -1.*t5574*t2739;
  t7981 = t5087*t2643;
  t7986 = t5175*t2739;
  t8078 = -1.*t3612*t5679;
  t8080 = -1.*t5621*t3792;
  t8084 = t5679*t3775;
  t8087 = t5699*t3792;
  t8132 = -1.*t3490*t5993;
  t8137 = -1.*t6258*t2739;
  t8151 = t2643*t5993;
  t8153 = t6052*t2739;
  t8181 = -1.*t6306*t3792;
  t8182 = -1.*t3612*t6352;
  t8188 = t6344*t3792;
  t8189 = t3775*t6352;
  p_output1[0]=t103*t115*t193 + t3238*t3247 - 1.*t103*t3276*t3277 + t3281*t3290 + t3296*t3312 + t3315*t3335 + t3348*t3367 + t3375*t3411 - 0.80315*(t1850*t3335 + t1752*t3367 + t1570*t3411) - 0.038576*(t2375*t3335 + t2228*t3367 + t2148*t3411) - 0.148715*(t3335*t510 + t3367*t764 + t3411*t976) + var1[0] + t3533*var2[0] + t3682*var2[1] + t3659*var2[2] + t3971*var2[3] + ((-1.*t3592*t3612 - 1.*t3616*t3639)*var2[1] + t3682*var2[2])*var2[3] + t3843*var2[4] + (t3639*var2[0] - 1.*t3592*t4568*var2[1] + t3616*t4568*var2[2] + (t3956*t3966 + t3947*t3969 + t3920*(-1.*t3942*t3947 - 1.*t3930*t3952 - 1.*t3947*t4590 - 1.*t3952*t4607) + t3930*(t3920*t3952 + t3942*t3966 + t3966*t4590 + t3952*t4630))*var2[3])*var2[4] + t3217*var2[5] + (t103*t4340*var2[0] + (t3529*t3616 + t3247*t3592*t4340)*var2[1] + (t3529*t3592 - 1.*t3247*t3616*t4340)*var2[2] + (t103*t3969*t4399 + t3920*(-1.*t103*t3942*t4399 + t3247*t3952*t4399 + t4401 - 1.*t103*t3930*t4412 + t3247*t3947*t4412 + t4422) + t103*t3956*t4448 + t3930*(t103*t3920*t4412 - 1.*t3247*t3966*t4412 + t4439 + t103*t3942*t4448 - 1.*t3247*t3952*t4448 + t4466))*var2[3] + (t3797*t3816 + t3726*t3834 + t3713*(-1.*t3754*t4399 + t4401 - 1.*t3726*t4412 + t4422) + t3775*(t3816*t4412 + t4439 + t3754*t4448 + t4466))*var2[4])*var2[5] + t2849*var2[15] + (t103*t4096*var2[0] + (t3247*t3592*t4096 + t3616*t4121)*var2[1] + (-1.*t3247*t3616*t4096 + t3592*t4121)*var2[2] + (t103*t3969*t4214 + t3920*(t4195 - 1.*t103*t3942*t4214 + t3247*t3952*t4214 + t4228 - 1.*t103*t3930*t4241 + t3247*t3947*t4241) + t103*t3956*t4251 + t3930*(t103*t3920*t4241 - 1.*t3247*t3966*t4241 + t4246 + t103*t3942*t4251 - 1.*t3247*t3952*t4251 + t4257))*var2[3] + (t3797*t4168 + t3834*t4227 + t3713*(t4195 - 1.*t3754*t4214 + t4228 - 1.*t3726*t4241) + t3775*(t3816*t4241 + t4246 + t3754*t4251 + t4257))*var2[4] + (t1894*(-1.*t3093*t3122 - 1.*t3122*t3998 - 1.*t3143*t4018 - 1.*t3070*t4033) + t2643*(t3093*t3172 + t3172*t3998 + t3167*t4033 + t3143*t4052))*var2[5])*var2[15] + t3015*var2[16] + (t6290*var2[0] + (t3616*t6306 - 1.*t3592*t6316)*var2[1] + (t3592*t6306 + t3616*t6316)*var2[2] + (t3956*t6403 + t3969*t6425 + t3920*(t6348 + t6354 - 1.*t3942*t6425 - 1.*t3952*t6439 - 1.*t3930*t6478 - 1.*t3947*t6499) + t3930*(t6376 + t6377 + t3942*t6403 + t3920*t6478 + t3966*t6499 + t3952*t6519))*var2[3] + (t3797*t6332 + t3834*t6344 + t3713*(t5997 + t6054 - 1.*t3754*t6336 + t6348 + t6354 - 1.*t3726*t6361) + t3775*(t6092 + t6105 + t3816*t6361 + t6376 + t6377 + t3754*t6384))*var2[4] + (t3183*t6052 + t3149*t6072 + t1894*(t5997 + t6054 - 1.*t3093*t6132 - 1.*t3143*t6151 - 1.*t3122*t6166 - 1.*t3070*t6196) + t2643*(t6092 + t6105 + t3172*t6166 + t3167*t6196 + t3143*t6223 + t3093*t6233))*var2[5] + (-0.15121*t5897 + 0.15121*t5920 + t2843*t6052 + t1894*(-1.*t2444*t5929 - 1.*t2468*t5952 - 1.*t2614*t5959 + t5997 - 1.*t1994*t6042 + t6054) + t2751*t6072 + t2643*(t2827*t5952 + t2804*t6042 + t2614*t6087 + t6092 + t2444*t6100 + t6105))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t5612*var2[0] + (t3616*t5621 - 1.*t3592*t5633)*var2[1] + (t3592*t5621 + t3616*t5633)*var2[2] + (t3956*t5763 + t3969*t5801 + t3920*(t5683 + t5700 - 1.*t3930*t5770 - 1.*t3947*t5787 - 1.*t3942*t5801 - 1.*t3952*t5816) + t3930*(t5724 + t5727 + t3942*t5763 + t3920*t5770 + t3966*t5787 + t3952*t5847))*var2[3] + (t3797*t5664 + t3834*t5699 + t3713*(t5092 + t5177 - 1.*t3726*t5671 + t5683 - 1.*t3754*t5689 + t5700) + t3775*(t5259 + t5269 + t3816*t5671 + t3754*t5707 + t5724 + t5727))*var2[4] + (t3149*t4906 + t3183*t5175 + t1894*(t5092 + t5177 - 1.*t3070*t5444 - 1.*t3122*t5455 - 1.*t3093*t5471 - 1.*t3143*t5497) + t2643*(t5259 + t5269 + t3167*t5444 + t3172*t5455 + t3093*t5515 + t3143*t5527))*var2[5] + (-0.15121*t4760 + 0.15121*t4796 + t2751*t4906 + t2843*t5175 + t1894*(-1.*t1994*t5040 - 1.*t2468*t5053 + t5092 - 1.*t2444*t5124 - 1.*t2614*t5164 + t5177) + t2643*(t2804*t5040 + t2827*t5053 + t2444*t5228 + t2614*t5246 + t5259 + t5269))*var2[15] + (0.281211*t4678 - 0.038749*t4758 + 1.e-6*(-7.000000000455e-6*t472 + t4807) - 1.*t2951*t4901 - 1.*t2972*t5098 - 1.*t1615*t5331 - 1.*t1943*t5366 + 4.e-6*(-1.*t2951*t4882 - 1.*t2972*t5119 - 1.*t1793*t5331 - 1.*t1903*t5366) + 7.e-6*(t2951*t4829 + t2972*t5102 + t1874*t5331 + t1968*t5366))*var2[16])*var2[17] + t3533*var3[0] + t3682*var3[1] + t3659*var3[2] + t3971*var3[3] + t3843*var3[4] + t3217*var3[5] + t2849*var3[15] + t3015*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=-1.*t103*t3238*t3592 + t193*t6687 + t3276*t6693 + t3281*t6700 + t3296*t6709 + t3315*t6764 + t3348*t6781 + t3375*t6792 - 0.80315*(t1850*t6764 + t1752*t6781 + t1570*t6792) - 0.038576*(t2375*t6764 + t2228*t6781 + t2148*t6792) - 0.148715*(t510*t6764 + t6781*t764 + t6792*t976) + var1[1] + t3930*var2[0] + t6730*var2[1] + t6721*var2[2] + t6826*var2[3] + ((-1.*t3592*t3775 - 1.*t3616*t3947)*var2[1] + t6730*var2[2])*var2[3] + t6758*var2[4] + (t3947*var2[0] - 1.*t3592*t4607*var2[1] + t3616*t4607*var2[2] + (t3920*(t3639*t3942 + t3533*t3952 + t3952*t4568 + t3639*t4590) + t3533*(-1.*t3920*t3952 - 1.*t3942*t3966 - 1.*t3966*t4590 - 1.*t3952*t4630) + t3966*t6811 + t3639*t6817)*var2[3])*var2[4] + t6676*var2[5] + (t103*t4399*var2[0] + (t3616*t3726 + t3247*t3592*t4399)*var2[1] + (t3592*t3726 - 1.*t3247*t3616*t4399)*var2[2] + (t103*t4448*t6811 + t103*t4340*t6817 + t3920*(t103*t3942*t4340 - 1.*t3247*t3952*t4340 + t103*t3533*t4412 - 1.*t3247*t3639*t4412 + t7004 + t7006) + t3533*(-1.*t103*t3920*t4412 + t3247*t3966*t4412 - 1.*t103*t3942*t4448 + t3247*t3952*t4448 + t7018 + t7022))*var2[3] + (t3816*t6741 + t3529*t6753 + t3713*(t3754*t4340 + t3529*t4412 + t7004 + t7006) + t3612*(-1.*t3816*t4412 - 1.*t3754*t4448 + t7018 + t7022))*var2[4])*var2[5] + t6585*var2[15] + (t103*t4214*var2[0] + (t3247*t3592*t4214 + t3616*t4227)*var2[1] + (-1.*t3247*t3616*t4214 + t3592*t4227)*var2[2] + (t103*t4251*t6811 + t103*t4096*t6817 + t3920*(t103*t3942*t4096 - 1.*t3247*t3952*t4096 + t103*t3533*t4241 - 1.*t3247*t3639*t4241 + t6927 + t6929) + t3533*(-1.*t103*t3920*t4241 + t3247*t3966*t4241 - 1.*t103*t3942*t4251 + t3247*t3952*t4251 + t6937 + t6941))*var2[3] + (t4168*t6741 + t4121*t6753 + t3713*(t3754*t4096 + t3529*t4241 + t6927 + t6929) + t3612*(-1.*t3816*t4241 - 1.*t3754*t4251 + t6937 + t6941))*var2[4] + (t3490*(-1.*t3093*t3172 - 1.*t3172*t3998 - 1.*t3167*t4033 - 1.*t3143*t4052) + t1894*(t3093*t3514 + t3514*t3998 + t3525*t4033 + t3143*t4090))*var2[5])*var2[15] + t6656*var2[16] + (t6425*var2[0] + (t3616*t6344 - 1.*t3592*t6439)*var2[1] + (t3592*t6344 + t3616*t6439)*var2[2] + (t6403*t6811 + t6290*t6817 + t3920*(t3942*t6290 + t3952*t6316 + t3533*t6478 + t3639*t6499 + t7516 + t7519) + t3533*(-1.*t3942*t6403 - 1.*t3920*t6478 - 1.*t3966*t6499 - 1.*t3952*t6519 + t7528 + t7533))*var2[3] + (t6332*t6741 + t6306*t6753 + t3713*(t3754*t6286 + t3529*t6361 + t7430 + t7432 + t7516 + t7519) + t3612*(-1.*t3816*t6361 - 1.*t3754*t6384 + t7439 + t7443 + t7528 + t7533))*var2[4] + (t6072*t6666 + t6258*t6672 + t1894*(t3514*t6166 + t3525*t6196 + t3143*t6271 + t3093*t6278 + t7430 + t7432) + t3490*(-1.*t3172*t6166 - 1.*t3167*t6196 - 1.*t3143*t6223 - 1.*t3093*t6233 + t7439 + t7443))*var2[5] + (-0.15121*t5929 + 0.15121*t5959 + t6072*t6552 + t6258*t6567 + t1894*(t2444*t5897 + t2614*t5920 + t1054*t5952 + t1459*t6042 + t7430 + t7432) + t3490*(-1.*t2827*t5952 - 1.*t2804*t6042 - 1.*t2614*t6087 - 1.*t2444*t6100 + t7439 + t7443))*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t5801*var2[0] + (t3616*t5699 - 1.*t3592*t5816)*var2[1] + (t3592*t5699 + t3616*t5816)*var2[2] + (t5763*t6811 + t5612*t6817 + t3920*(t3942*t5612 + t3952*t5633 + t3533*t5770 + t3639*t5787 + t7347 + t7351) + t3533*(-1.*t3942*t5763 - 1.*t3920*t5770 - 1.*t3966*t5787 - 1.*t3952*t5847 + t7363 + t7366))*var2[3] + (t5664*t6741 + t5621*t6753 + t3713*(t3754*t5607 + t3529*t5671 + t7136 + t7145 + t7347 + t7351) + t3612*(-1.*t3816*t5671 - 1.*t3754*t5707 + t7156 + t7167 + t7363 + t7366))*var2[4] + (t4906*t6666 + t5574*t6672 + t1894*(t3525*t5444 + t3514*t5455 + t3143*t5586 + t3093*t5597 + t7136 + t7145) + t3490*(-1.*t3167*t5444 - 1.*t3172*t5455 - 1.*t3093*t5515 - 1.*t3143*t5527 + t7156 + t7167))*var2[5] + (-0.15121*t5124 + 0.15121*t5164 + t4906*t6552 + t5574*t6567 + t1894*(t2444*t4760 + t2614*t4796 + t1459*t5040 + t1054*t5053 + t7136 + t7145) + t3490*(-1.*t2804*t5040 - 1.*t2827*t5053 - 1.*t2444*t5228 - 1.*t2614*t5246 + t7156 + t7167))*var2[15] + (1.e-6*(4.00000000026e-6*t472 + t4863) - 0.038749*t5102 + 0.281211*t5119 - 1.*t4901*t6630 - 1.*t4711*t6638 - 1.*t1615*t7220 - 1.*t1040*t7242 + 7.e-6*(t4829*t6630 + t4758*t6638 + t1874*t7220 + t516*t7242) + 4.e-6*(-1.*t4882*t6630 - 1.*t4678*t6638 - 1.*t1793*t7220 - 1.*t7242*t837))*var2[16])*var2[17] + t3930*var3[0] + t6730*var3[1] + t6721*var3[2] + t6826*var3[3] + t6758*var3[4] + t6676*var3[5] + t6585*var3[15] + t6656*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=t103*t3238*t3616 + t193*t7671 + t3276*t7678 + t3281*t7684 + t3296*t7688 + t3315*t7726 + t3348*t7737 + t3375*t7749 - 0.80315*(t1850*t7726 + t1752*t7737 + t1570*t7749) - 0.038576*(t2375*t7726 + t2228*t7737 + t2148*t7749) - 0.148715*(t510*t7726 + t764*t7737 + t7749*t976) + var1[2] + t3920*var2[0] + t7717*var2[1] + t7710*var2[2] + t7763*var2[3] + ((-1.*t3592*t3713 - 1.*t3616*t3966)*var2[1] + t7717*var2[2])*var2[3] + t7704*var2[4] + (t3966*var2[0] - 1.*t3592*t4630*var2[1] + t3616*t4630*var2[2] + (t3930*(-1.*t3639*t3942 - 1.*t3533*t3952 - 1.*t3952*t4568 - 1.*t3639*t4590) + t3533*(t3942*t3947 + t3930*t3952 + t3947*t4590 + t3952*t4607) + t3947*t7756 + t3639*t7760)*var2[3])*var2[4] + t7658*var2[5] + (t103*t4448*var2[0] + (t3616*t3816 + t3247*t3592*t4448)*var2[1] + (t3592*t3816 - 1.*t3247*t3616*t4448)*var2[2] + (t103*t4399*t7756 + t103*t4340*t7760 + t3930*(-1.*t103*t3942*t4340 + t3247*t3952*t4340 - 1.*t103*t3533*t4412 + t3247*t3639*t4412 + t7904 + t7906) + t3533*(t103*t3942*t4399 - 1.*t3247*t3952*t4399 + t103*t3930*t4412 - 1.*t3247*t3947*t4412 + t7910 + t7914))*var2[3] + (t3726*t7693 + t3529*t7700 + t3775*(-1.*t3754*t4340 - 1.*t3529*t4412 + t7904 + t7906) + t3612*(t3754*t4399 + t3726*t4412 + t7910 + t7914))*var2[4])*var2[5] + t7592*var2[15] + (t103*t4251*var2[0] + (t3616*t4168 + t3247*t3592*t4251)*var2[1] + (t3592*t4168 - 1.*t3247*t3616*t4251)*var2[2] + (t103*t4214*t7756 + t103*t4096*t7760 + t3930*(-1.*t103*t3942*t4096 + t3247*t3952*t4096 - 1.*t103*t3533*t4241 + t3247*t3639*t4241 + t7837 + t7839) + t3533*(t103*t3942*t4214 - 1.*t3247*t3952*t4214 + t103*t3930*t4241 - 1.*t3247*t3947*t4241 + t7844 + t7848))*var2[3] + (t4227*t7693 + t4121*t7700 + t3775*(-1.*t3754*t4096 - 1.*t3529*t4241 + t7837 + t7839) + t3612*(t3754*t4214 + t3726*t4241 + t7844 + t7848))*var2[4] + (t3490*(t3093*t3122 + t3122*t3998 + t3143*t4018 + t3070*t4033) + t2643*(-1.*t3093*t3514 - 1.*t3514*t3998 - 1.*t3525*t4033 - 1.*t3143*t4090))*var2[5])*var2[15] + t7647*var2[16] + (t6403*var2[0] + (t3616*t6332 - 1.*t3592*t6519)*var2[1] + (t3592*t6332 + t3616*t6519)*var2[2] + (t6425*t7756 + t6290*t7760 + t3930*(-1.*t3942*t6290 - 1.*t3952*t6316 - 1.*t3533*t6478 - 1.*t3639*t6499 + t8181 + t8182) + t3533*(t3942*t6425 + t3952*t6439 + t3930*t6478 + t3947*t6499 + t8188 + t8189))*var2[3] + (t6344*t7693 + t6306*t7700 + t3775*(-1.*t3754*t6286 - 1.*t3529*t6361 + t8132 + t8137 + t8181 + t8182) + t3612*(t3754*t6336 + t3726*t6361 + t8151 + t8153 + t8188 + t8189))*var2[4] + (t6052*t7652 + t6258*t7656 + t2643*(-1.*t3514*t6166 - 1.*t3525*t6196 - 1.*t3143*t6271 - 1.*t3093*t6278 + t8132 + t8137) + t3490*(t3093*t6132 + t3143*t6151 + t3122*t6166 + t3070*t6196 + t8151 + t8153))*var2[5] + (0.15121*t6087 - 0.15121*t6100 + t6052*t7581 + t6258*t7590 + t2643*(-1.*t2444*t5897 - 1.*t2614*t5920 - 1.*t1054*t5952 - 1.*t1459*t6042 + t8132 + t8137) + t3490*(t2444*t5929 + t2468*t5952 + t2614*t5959 + t1994*t6042 + t8151 + t8153))*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t5763*var2[0] + (t3616*t5664 - 1.*t3592*t5847)*var2[1] + (t3592*t5664 + t3616*t5847)*var2[2] + (t5801*t7756 + t5612*t7760 + t3930*(-1.*t3942*t5612 - 1.*t3952*t5633 - 1.*t3533*t5770 - 1.*t3639*t5787 + t8078 + t8080) + t3533*(t3930*t5770 + t3947*t5787 + t3942*t5801 + t3952*t5816 + t8084 + t8087))*var2[3] + (t5699*t7693 + t5621*t7700 + t3775*(-1.*t3754*t5607 - 1.*t3529*t5671 + t7972 + t7975 + t8078 + t8080) + t3612*(t3726*t5671 + t3754*t5689 + t7981 + t7986 + t8084 + t8087))*var2[4] + (t5175*t7652 + t5574*t7656 + t2643*(-1.*t3525*t5444 - 1.*t3514*t5455 - 1.*t3143*t5586 - 1.*t3093*t5597 + t7972 + t7975) + t3490*(t3070*t5444 + t3122*t5455 + t3093*t5471 + t3143*t5497 + t7981 + t7986))*var2[5] + (-0.15121*t5228 + 0.15121*t5246 + t5175*t7581 + t5574*t7590 + t2643*(-1.*t2444*t4760 - 1.*t2614*t4796 - 1.*t1459*t5040 - 1.*t1054*t5053 + t7972 + t7975) + t3490*(t1994*t5040 + t2468*t5053 + t2444*t5124 + t2614*t5164 + t7981 + t7986))*var2[15] + (-0.038749*t4829 + 0.281211*t4882 + 1.e-6*(-6.5e-11*t472 - 7.e-6*t4885 + 4.e-6*t4951) - 1.*t5098*t7618 - 1.*t4711*t7627 - 1.*t1040*t8014 - 1.*t1943*t8023 + 7.e-6*(t5102*t7618 + t4758*t7627 + t516*t8014 + t1968*t8023) + 4.e-6*(-1.*t5119*t7618 - 1.*t4678*t7627 - 1.*t1903*t8023 - 1.*t8014*t837))*var2[16])*var2[17] + t3920*var3[0] + t7717*var3[1] + t7710*var3[2] + t7763*var3[3] + t7704*var3[4] + t7658*var3[5] + t7592*var3[15] + t7647*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void ddh_RrFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
