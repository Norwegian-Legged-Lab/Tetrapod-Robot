/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:52:15 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t266;
  double t270;
  double t278;
  double t188;
  double t195;
  double t205;
  double t223;
  double t290;
  double t291;
  double t282;
  double t288;
  double t303;
  double t306;
  double t311;
  double t364;
  double t379;
  double t394;
  double t396;
  double t408;
  double t436;
  double t450;
  double t219;
  double t489;
  double t508;
  double t519;
  double t524;
  double t526;
  double t334;
  double t606;
  double t608;
  double t553;
  double t595;
  double t556;
  double t558;
  double t628;
  double t563;
  double t564;
  double t539;
  double t543;
  double t228;
  double t650;
  double t596;
  double t609;
  double t655;
  double t661;
  double t688;
  double t689;
  double t691;
  double t353;
  double t360;
  double t713;
  double t714;
  double t456;
  double t472;
  double t723;
  double t740;
  double t242;
  double t751;
  double t754;
  double t776;
  double t584;
  double t806;
  double t809;
  double t815;
  double t818;
  double t819;
  double t821;
  double t822;
  double t833;
  double t845;
  double t847;
  double t865;
  double t878;
  double t879;
  double t881;
  double t885;
  double t888;
  double t900;
  double t903;
  double t908;
  double t916;
  double t917;
  double t932;
  double t946;
  double t948;
  double t950;
  double t952;
  double t963;
  double t969;
  double t970;
  double t972;
  double t978;
  double t986;
  double t623;
  double t627;
  double t585;
  double t684;
  double t785;
  double t1021;
  double t1026;
  double t1058;
  double t1063;
  double t1065;
  double t1076;
  double t770;
  double t771;
  double t777;
  double t781;
  double t789;
  double t797;
  double t850;
  double t941;
  double t992;
  double t995;
  double t590;
  double t604;
  double t614;
  double t616;
  double t633;
  double t638;
  double t663;
  double t664;
  double t690;
  double t692;
  double t693;
  double t1015;
  double t1017;
  double t1018;
  double t1019;
  double t1032;
  double t1034;
  double t1040;
  double t1046;
  double t1050;
  double t1051;
  double t1077;
  double t1085;
  double t1088;
  double t1090;
  double t1093;
  double t1097;
  double t1110;
  double t1112;
  double t1115;
  double t1116;
  double t621;
  double t672;
  double t700;
  double t711;
  double t322;
  double t453;
  double t531;
  double t534;
  double t536;
  double t547;
  double t561;
  double t566;
  double t567;
  double t570;
  double t719;
  double t747;
  double t757;
  double t758;
  double t996;
  double t1001;
  double t1002;
  double t1007;
  double t1014;
  double t1052;
  double t1119;
  double t1124;
  double t1127;
  double t1130;
  double t1134;
  double t1137;
  double t1139;
  double t1148;
  double t1149;
  double t1155;
  double t1158;
  double t1164;
  double t1166;
  double t1167;
  double t1171;
  double t1176;
  double t1179;
  double t1213;
  double t1214;
  double t1217;
  double t1222;
  double t1237;
  double t1240;
  double t1249;
  double t1251;
  double t1194;
  double t1200;
  double t1206;
  double t1208;
  double t1211;
  double t1233;
  double t1253;
  double t1255;
  double t1264;
  double t1267;
  double t1269;
  double t1271;
  double t1272;
  double t1280;
  double t1282;
  double t1284;
  double t162;
  double t92;
  double t116;
  double t124;
  double t148;
  double t167;
  double t1328;
  double t1338;
  double t1342;
  double t1348;
  double t1365;
  double t1366;
  double t1376;
  double t1294;
  double t1313;
  double t1321;
  double t1350;
  double t1352;
  double t1355;
  double t1363;
  double t1380;
  double t1388;
  double t1389;
  double t1392;
  double t1393;
  double t1394;
  double t1395;
  double t1396;
  double t1401;
  double t1417;
  double t1427;
  double t1433;
  double t1438;
  double t1439;
  double t63;
  double t78;
  double t1477;
  double t1450;
  double t1488;
  double t1490;
  double t1494;
  double t1515;
  double t1516;
  double t1517;
  double t1613;
  double t1622;
  double t1627;
  double t1640;
  double t1645;
  double t1646;
  double t1647;
  double t1648;
  double t1649;
  double t1650;
  double t1652;
  double t1653;
  double t1656;
  double t1661;
  double t1669;
  double t1672;
  double t1531;
  double t1532;
  double t1533;
  double t1534;
  double t1541;
  double t1543;
  double t1545;
  double t1552;
  double t1572;
  double t1573;
  double t1575;
  double t1589;
  double t1795;
  double t1796;
  double t1802;
  double t1804;
  double t1814;
  double t1817;
  double t1818;
  double t1823;
  double t1824;
  double t1825;
  double t1834;
  double t1846;
  double t1860;
  double t1888;
  double t1983;
  double t1987;
  double t1989;
  double t1958;
  double t1965;
  double t1980;
  double t2004;
  double t2008;
  double t2012;
  double t1924;
  double t1926;
  double t1927;
  double t1931;
  double t1935;
  double t1956;
  double t1981;
  double t2014;
  double t2016;
  double t2018;
  double t2020;
  double t2021;
  double t2025;
  double t2027;
  double t2032;
  double t2038;
  double t2048;
  double t2049;
  double t2111;
  double t2112;
  double t2120;
  double t2128;
  double t2130;
  double t2132;
  double t2098;
  double t2099;
  double t2100;
  double t2159;
  double t2160;
  double t2164;
  double t2136;
  double t2137;
  double t2141;
  double t2144;
  double t2167;
  double t2169;
  double t2170;
  double t2182;
  double t2186;
  double t2203;
  double t2205;
  double t2207;
  double t2212;
  double t2215;
  double t2220;
  double t2272;
  double t2274;
  double t2226;
  double t2230;
  double t2231;
  double t2235;
  double t2355;
  double t2360;
  double t2369;
  double t2378;
  double t2379;
  double t2382;
  double t2416;
  double t2431;
  double t2286;
  double t2290;
  double t2291;
  double t2256;
  double t2266;
  double t2269;
  double t2480;
  double t2483;
  double t2571;
  double t2576;
  double t2590;
  double t2495;
  double t2496;
  double t2499;
  double t2538;
  double t2548;
  double t2501;
  double t2554;
  double t2504;
  double t2529;
  double t2530;
  double t2647;
  double t2651;
  double t2669;
  double t2612;
  double t2675;
  double t2773;
  double t2778;
  double t2836;
  double t2838;
  double t2845;
  double t2829;
  double t2853;
  double t2816;
  double t2819;
  double t2866;
  double t2867;
  double t2863;
  double t2870;
  double t2948;
  double t2949;
  double t2952;
  double t2959;
  double t2961;
  double t2963;
  double t3050;
  double t3034;
  double t3039;
  double t3043;
  double t3045;
  double t3046;
  double t3051;
  double t3052;
  double t3056;
  double t3059;
  double t3062;
  double t3065;
  double t3119;
  double t3185;
  double t3194;
  double t3161;
  double t3162;
  double t3166;
  double t3124;
  double t3211;
  double t3213;
  double t3214;
  double t3216;
  double t3217;
  double t3218;
  double t3223;
  double t3225;
  double t3232;
  double t3234;
  double t3237;
  double t3238;
  double t3241;
  double t3242;
  double t3245;
  double t3246;
  double t3260;
  double t3266;
  double t3272;
  double t3274;
  double t3278;
  double t3281;
  double t3282;
  double t3287;
  double t3338;
  double t3341;
  double t3352;
  double t3360;
  double t3363;
  double t3376;
  double t3379;
  double t3130;
  double t3135;
  double t3142;
  double t3175;
  double t3182;
  double t3183;
  double t3190;
  double t3195;
  double t3199;
  double t3200;
  double t3154;
  double t3184;
  double t3202;
  double t3203;
  double t3230;
  double t3259;
  double t3289;
  double t3299;
  double t3303;
  double t3309;
  double t3317;
  double t3322;
  double t3328;
  double t3331;
  double t3335;
  double t3336;
  double t3400;
  double t3404;
  double t3405;
  double t3406;
  double t3508;
  double t3509;
  double t3510;
  double t3513;
  double t3514;
  double t3515;
  double t3519;
  double t3532;
  double t3533;
  double t3534;
  double t3543;
  double t3544;
  double t3545;
  double t3554;
  double t3337;
  double t3409;
  double t3344;
  double t3362;
  double t3380;
  double t3382;
  double t3388;
  double t3389;
  double t3392;
  double t3393;
  double t3458;
  double t3473;
  double t3440;
  double t3445;
  double t3446;
  double t3453;
  double t3419;
  double t3428;
  double t3429;
  double t3431;
  double t3613;
  double t3614;
  double t3617;
  double t3622;
  double t3623;
  double t3624;
  double t3047;
  double t3053;
  double t3069;
  double t3072;
  double t3085;
  double t3098;
  double t3101;
  double t3104;
  double t3741;
  double t3743;
  double t3744;
  double t3720;
  double t3725;
  double t3728;
  double t3706;
  double t3707;
  double t3708;
  double t3713;
  double t3736;
  double t3749;
  double t3750;
  double t3767;
  double t3771;
  double t3773;
  double t3780;
  double t3783;
  double t3786;
  double t3663;
  double t3664;
  double t3665;
  double t3674;
  double t3679;
  double t3680;
  double t3634;
  double t3645;
  double t3648;
  double t3628;
  double t3629;
  double t3631;
  double t3825;
  double t3833;
  double t3836;
  double t3843;
  double t3846;
  double t3849;
  double t3859;
  double t3860;
  double t3862;
  double t3883;
  double t3884;
  double t3885;
  double t3897;
  double t3900;
  double t3902;
  double t3864;
  double t3889;
  double t3865;
  double t3867;
  double t3868;
  double t3905;
  double t3908;
  double t3926;
  double t3929;
  double t3935;
  double t3939;
  double t3941;
  double t3953;
  double t3957;
  double t3958;
  double t3961;
  double t3968;
  double t3972;
  double t3973;
  double t4066;
  double t4068;
  double t4073;
  double t4074;
  double t4101;
  double t4102;
  double t4090;
  double t4096;
  double t4135;
  double t4187;
  double t4191;
  double t4201;
  double t4208;
  double t4209;
  double t4211;
  double t4215;
  double t4216;
  double t4219;
  double t4220;
  double t4221;
  double t4230;
  double t4137;
  double t4139;
  double t4144;
  double t4148;
  double t4155;
  double t4156;
  double t4157;
  double t4159;
  double t4162;
  double t4268;
  double t4271;
  double t4289;
  double t4297;
  double t4184;
  double t4185;
  double t4188;
  double t4189;
  double t4190;
  double t4198;
  double t4199;
  double t4202;
  double t4204;
  double t4237;
  double t4247;
  double t4248;
  double t4249;
  double t4207;
  double t4254;
  double t4166;
  double t4169;
  double t4175;
  double t4179;
  double t4119;
  double t4123;
  double t4126;
  double t4128;
  double t4357;
  double t4380;
  double t4429;
  double t4431;
  double t4440;
  double t4416;
  double t4419;
  double t4420;
  double t4314;
  double t4319;
  double t4324;
  double t4330;
  double t4361;
  double t4364;
  double t4369;
  double t4376;
  double t4060;
  double t4070;
  double t4077;
  double t4078;
  double t4100;
  double t4103;
  double t4107;
  double t4114;
  double t4543;
  double t4544;
  double t4545;
  double t4536;
  double t4538;
  double t4541;
  double t4525;
  double t4526;
  double t4531;
  double t4532;
  double t4542;
  double t4548;
  double t4550;
  double t4556;
  double t4557;
  double t4559;
  double t4561;
  double t4564;
  double t4567;
  double t4509;
  double t4512;
  double t4513;
  double t4482;
  double t4501;
  double t4504;
  double t4410;
  double t4411;
  double t4413;
  double t4396;
  double t4401;
  double t4408;
  double t4594;
  double t4598;
  double t4599;
  double t4606;
  double t4607;
  double t4608;
  double t4602;
  double t4603;
  double t4604;
  double t4579;
  double t4582;
  double t4584;
  double t4623;
  double t4627;
  double t4630;
  double t4601;
  double t4605;
  double t4586;
  double t4587;
  double t4589;
  double t4657;
  double t4658;
  double t4659;
  double t4615;
  double t4617;
  double t4671;
  double t4684;
  double t4686;
  double t4689;
  double t4691;
  double t4695;
  double t4649;
  double t4650;
  double t4652;
  double t4734;
  double t4735;
  double t4741;
  double t4747;
  double t4757;
  double t4759;
  double t4761;
  double t4762;
  double t4766;
  double t4770;
  double t4772;
  double t4773;
  double t4777;
  double t4802;
  double t4804;
  double t4806;
  double t4811;
  double t4819;
  double t4820;
  double t4824;
  double t4825;
  double t4788;
  double t4793;
  double t4794;
  double t4798;
  double t4800;
  double t4801;
  double t4816;
  double t4828;
  double t4840;
  double t4843;
  double t4844;
  double t4845;
  double t4846;
  double t4854;
  double t4868;
  double t4869;
  double t4871;
  double t4881;
  double t4882;
  double t4886;
  double t4887;
  double t4890;
  double t4891;
  double t4893;
  double t4894;
  double t4896;
  double t1449;
  double t171;
  double t1467;
  double t1483;
  double t4906;
  double t4907;
  double t4908;
  double t4912;
  double t4913;
  double t4914;
  double t1505;
  double t4939;
  double t4941;
  double t4942;
  double t4952;
  double t4953;
  double t4958;
  double t4963;
  double t4964;
  double t4971;
  double t4972;
  double t4980;
  double t4982;
  double t4983;
  double t4985;
  double t4986;
  double t1524;
  double t4919;
  double t4921;
  double t4922;
  double t4927;
  double t4930;
  double t4932;
  double t1538;
  double t1567;
  double t5055;
  double t5057;
  double t5059;
  double t5062;
  double t5063;
  double t5065;
  double t5067;
  double t5069;
  double t5071;
  double t4991;
  double t4995;
  double t5002;
  double t5008;
  double t5011;
  double t5012;
  double t5014;
  double t5017;
  double t5019;
  double t5020;
  double t5021;
  double t5025;
  double t5181;
  double t5184;
  double t5191;
  double t5196;
  double t5290;
  double t5293;
  double t5310;
  double t5314;
  double t2969;
  double t2971;
  double t2974;
  double t2988;
  double t2989;
  double t2990;
  double t5515;
  double t5516;
  double t5517;
  double t5518;
  double t5520;
  double t5524;
  double t5528;
  double t5531;
  double t5532;
  double t5533;
  double t5534;
  double t5535;
  double t5536;
  double t5538;
  double t5459;
  double t5466;
  double t5483;
  double t5486;
  double t3984;
  double t3993;
  double t3998;
  double t5635;
  double t5646;
  double t3716;
  double t3751;
  double t3758;
  double t5652;
  double t5656;
  double t4006;
  double t4012;
  double t4018;
  double t5726;
  double t5730;
  double t5747;
  double t5752;
  double t4663;
  double t4666;
  double t4668;
  double t5826;
  double t5828;
  double t4533;
  double t4553;
  double t4554;
  double t5834;
  double t5836;
  double t4707;
  double t4710;
  double t4712;
  double t5891;
  double t5892;
  double t5894;
  double t5897;
  double t5898;
  double t5900;
  double t5902;
  double t5904;
  double t5906;
  double t5911;
  double t5912;
  double t5922;
  double t5925;
  double t5949;
  double t5950;
  double t5952;
  double t5953;
  double t5955;
  double t5957;
  double t5962;
  double t5964;
  double t5934;
  double t5937;
  double t5939;
  double t5944;
  double t5945;
  double t5947;
  double t5954;
  double t5966;
  double t5969;
  double t5970;
  double t5971;
  double t5972;
  double t5974;
  double t5976;
  double t5977;
  double t5979;
  double t5981;
  double t5985;
  double t5986;
  double t5987;
  double t5988;
  double t5989;
  double t5995;
  double t5996;
  double t5999;
  double t6001;
  double t6004;
  double t6005;
  double t6007;
  double t6018;
  double t6019;
  double t6020;
  double t6055;
  double t6057;
  double t6059;
  double t6060;
  double t6062;
  double t6063;
  double t6065;
  double t6067;
  double t6069;
  double t6078;
  double t6080;
  double t6081;
  double t6088;
  double t6095;
  double t6096;
  double t6029;
  double t6030;
  double t6031;
  double t6041;
  double t6047;
  double t6048;
  double t6123;
  double t6124;
  double t6126;
  double t6127;
  double t6128;
  double t6129;
  double t6134;
  double t6138;
  double t6140;
  double t6100;
  double t6102;
  double t6103;
  double t6104;
  double t6111;
  double t6112;
  double t6113;
  double t6115;
  double t6118;
  double t6119;
  double t6120;
  double t6121;
  double t6272;
  double t6274;
  double t6280;
  double t6282;
  double t6359;
  double t6361;
  double t6366;
  double t6370;
  double t6527;
  double t6529;
  double t6531;
  double t6532;
  double t6533;
  double t6534;
  double t6536;
  double t6544;
  double t6545;
  double t6546;
  double t6550;
  double t6555;
  double t6557;
  double t6558;
  double t6476;
  double t6479;
  double t6490;
  double t6501;
  double t6642;
  double t6646;
  double t6659;
  double t6665;
  double t6722;
  double t6725;
  double t6741;
  double t6744;
  double t6823;
  double t6825;
  double t6834;
  double t6835;
  t266 = Cos(var1[17]);
  t270 = -1.*t266;
  t278 = 1. + t270;
  t188 = Cos(var1[16]);
  t195 = -1.*t188;
  t205 = 1. + t195;
  t223 = Sin(var1[16]);
  t290 = Sin(var1[17]);
  t291 = 4.e-6*t290;
  t282 = 1.000000000016*t278;
  t288 = -7.e-6*t278;
  t303 = t288 + t291;
  t306 = -7.e-6*t303;
  t311 = -1. + t282 + t306;
  t364 = 2.8e-11*t278;
  t379 = 4.e-6*t278;
  t394 = 7.e-6*t290;
  t396 = t379 + t394;
  t408 = -7.e-6*t396;
  t436 = -1.*t290;
  t450 = t364 + t408 + t436;
  t219 = -7.e-6*t205;
  t489 = -6.5e-11*t278;
  t508 = 1. + t489;
  t519 = -7.e-6*t508;
  t524 = 7.e-6*t278;
  t526 = t519 + t524 + t291;
  t334 = 4.e-6*t205;
  t606 = -1. + t266;
  t608 = 4.e-6*t606;
  t553 = -2.8e-11*t205;
  t595 = -4.e-6*t290;
  t556 = -1.*t223;
  t558 = t553 + t556;
  t628 = 1.000000000049*t278;
  t563 = 4.e-6*t223;
  t564 = t219 + t563;
  t539 = -1.000000000016*t205;
  t543 = 1. + t539;
  t228 = -4.e-6*t223;
  t650 = -7.e-6*t290;
  t596 = t288 + t595;
  t609 = t608 + t394;
  t655 = -2.8e-11*t278;
  t661 = t655 + t290;
  t688 = -1.000000000016*t278;
  t689 = 1. + t688;
  t691 = t364 + t290;
  t353 = -7.e-6*t223;
  t360 = t334 + t353;
  t713 = 4.e-6*t396;
  t714 = -1. + t628 + t713;
  t456 = -6.5e-11*t205;
  t472 = 1. + t456;
  t723 = 4.e-6*t508;
  t740 = t723 + t608 + t394;
  t242 = t219 + t228;
  t751 = 4.e-6*t303;
  t754 = t364 + t751 + t290;
  t776 = 7.e-6*t205;
  t584 = 7.e-6*t223;
  t806 = 2.826290000000002e-7*var1[17];
  t809 = -0.148715*t508;
  t815 = -2.18904205e-16*t278;
  t818 = t379 + t650;
  t819 = -0.038576*t818;
  t821 = -0.80315*t596;
  t822 = t524 + t291;
  t833 = -0.5031510000080001*t822;
  t845 = -0.038575000014*t609;
  t847 = t806 + t809 + t815 + t819 + t821 + t833 + t845;
  t865 = 1.1305160000000008e-12*var1[17];
  t878 = -1.000000000049*t278;
  t879 = 1. + t878;
  t881 = -0.038576*t879;
  t885 = -0.03857500001589017*t278;
  t888 = t364 + t436;
  t900 = -0.5031510000080001*t888;
  t903 = t608 + t650;
  t908 = -3.367757e-6*t903;
  t916 = -0.148715*t396;
  t917 = -0.80315*t661;
  t932 = t865 + t881 + t885 + t900 + t908 + t916 + t917;
  t946 = -1.9784030000000015e-12*var1[17];
  t948 = -0.80315*t689;
  t950 = -0.5031510000160505*t278;
  t952 = t655 + t436;
  t963 = -0.038576*t952;
  t969 = t524 + t595;
  t970 = -3.367757e-6*t969;
  t972 = -0.148715*t303;
  t978 = -0.038575000014*t691;
  t986 = t946 + t948 + t950 + t963 + t970 + t972 + t978;
  t623 = -1.000000000049*t205;
  t627 = 1. + t623;
  t585 = t334 + t584;
  t684 = t553 + t223;
  t785 = 2.8e-11*t205;
  t1021 = -1. + t188;
  t1026 = 4.e-6*t1021;
  t1058 = t627*t714;
  t1063 = t585*t740;
  t1065 = t684*t754;
  t1076 = t1058 + t1063 + t1065;
  t770 = -2.7726089999999997e-12*var1[16];
  t771 = -0.2812110000084994*t205;
  t777 = t776 + t228;
  t781 = -1.8134809999999998e-6*t777;
  t789 = t785 + t223;
  t797 = -0.038749000006999997*t789;
  t850 = t564*t847;
  t941 = t558*t932;
  t992 = t543*t986;
  t995 = t770 + t771 + t781 + t797 + t850 + t941 + t992;
  t590 = 6.5e-11*t278;
  t604 = 7.e-6*t596;
  t614 = 4.e-6*t609;
  t616 = -1. + t590 + t604 + t614;
  t633 = -1. + t628;
  t638 = 4.e-6*t633;
  t663 = 7.e-6*t661;
  t664 = t638 + t608 + t650 + t663;
  t690 = 7.e-6*t689;
  t692 = 4.e-6*t691;
  t693 = t690 + t524 + t595 + t692;
  t1015 = 3.9608699999999997e-7*var1[16];
  t1017 = -1.1787626499999999e-16*t205;
  t1018 = t776 + t563;
  t1019 = -0.281211000004*t1018;
  t1032 = t1026 + t584;
  t1034 = -0.038749000006999997*t1032;
  t1040 = t472*t847;
  t1046 = t360*t932;
  t1050 = t242*t986;
  t1051 = t1015 + t1017 + t1019 + t1034 + t1040 + t1046 + t1050;
  t1077 = 1.5843479999999999e-12*var1[16];
  t1085 = -0.03874900000889869*t205;
  t1088 = t785 + t556;
  t1090 = -0.281211000004*t1088;
  t1093 = t1026 + t353;
  t1097 = -1.8134809999999998e-6*t1093;
  t1110 = t585*t847;
  t1112 = t627*t932;
  t1115 = t684*t986;
  t1116 = t1077 + t1085 + t1090 + t1097 + t1110 + t1112 + t1115;
  t621 = t585*t616;
  t672 = t627*t664;
  t700 = t684*t693;
  t711 = t621 + t672 + t700;
  t322 = t242*t311;
  t453 = t360*t450;
  t531 = t472*t526;
  t534 = t322 + t453 + t531;
  t536 = 0.15121*t534;
  t547 = t543*t311;
  t561 = t558*t450;
  t566 = t564*t526;
  t567 = t547 + t561 + t566;
  t570 = -0.15121*t567;
  t719 = t558*t714;
  t747 = t564*t740;
  t757 = t543*t754;
  t758 = t719 + t747 + t757;
  t996 = -1.*t758*t995;
  t1001 = t360*t714;
  t1002 = t472*t740;
  t1007 = t242*t754;
  t1014 = t1001 + t1002 + t1007;
  t1052 = -1.*t1014*t1051;
  t1119 = -1.*t1076*t1116;
  t1124 = t996 + t1052 + t1119;
  t1127 = t711*t1124;
  t1130 = t564*t616;
  t1134 = t558*t664;
  t1137 = t543*t693;
  t1139 = t1130 + t1134 + t1137;
  t1148 = t995*t1139;
  t1149 = t472*t616;
  t1155 = t360*t664;
  t1158 = t242*t693;
  t1164 = t1149 + t1155 + t1158;
  t1166 = t1051*t1164;
  t1167 = t1116*t711;
  t1171 = t1148 + t1166 + t1167;
  t1176 = t1076*t1171;
  t1179 = t536 + t570 + t1127 + t1176;
  t1213 = -1.*t847*t740;
  t1214 = -1.*t714*t932;
  t1217 = -1.*t754*t986;
  t1222 = t1213 + t1214 + t1217;
  t1237 = t847*t616;
  t1240 = t932*t664;
  t1249 = t986*t693;
  t1251 = t1237 + t1240 + t1249;
  t1194 = -0.038749*t311;
  t1200 = 0.281211*t450;
  t1206 = 7.e-6*t508;
  t1208 = t1206 + t288 + t595;
  t1211 = 1.e-6*t1208;
  t1233 = -1.*t616*t1222;
  t1253 = -1.*t740*t1251;
  t1255 = -1.*t664*t1222;
  t1264 = -1.*t714*t1251;
  t1267 = t1255 + t1264;
  t1269 = 4.e-6*t1267;
  t1271 = t693*t1222;
  t1272 = t754*t1251;
  t1280 = t1271 + t1272;
  t1282 = 7.e-6*t1280;
  t1284 = t1194 + t1200 + t1211 + t1233 + t1253 + t1269 + t1282;
  t162 = Sin(var1[15]);
  t92 = Cos(var1[15]);
  t116 = -1.*t92;
  t124 = 1. + t116;
  t148 = -0.15121*t124;
  t167 = -0.15121*t162;
  t1328 = 0.15121*t162;
  t1338 = t162*t995;
  t1342 = t92*t1051;
  t1348 = t148 + t1328 + t1338 + t1342;
  t1365 = t92*t995;
  t1366 = -1.*t162*t1051;
  t1376 = t148 + t167 + t1365 + t1366;
  t1294 = t162*t758;
  t1313 = t92*t1014;
  t1321 = t1294 + t1313;
  t1350 = -1.*t1321*t1348;
  t1352 = t92*t758;
  t1355 = -1.*t162*t1014;
  t1363 = t1352 + t1355;
  t1380 = -1.*t1363*t1376;
  t1388 = t1119 + t1350 + t1380;
  t1389 = t711*t1388;
  t1392 = t162*t1139;
  t1393 = t92*t1164;
  t1394 = t1392 + t1393;
  t1395 = t1348*t1394;
  t1396 = t92*t1139;
  t1401 = -1.*t162*t1164;
  t1417 = t1396 + t1401;
  t1427 = t1376*t1417;
  t1433 = t1167 + t1395 + t1427;
  t1438 = t1076*t1433;
  t1439 = t1389 + t1438;
  t63 = Cos(var1[4]);
  t78 = Cos(var1[5]);
  t1477 = Sin(var1[5]);
  t1450 = Sin(var1[4]);
  t1488 = -1.*t63*t78*t162;
  t1490 = -1.*t92*t63*t1477;
  t1494 = t1488 + t1490;
  t1515 = t92*t63*t78;
  t1516 = -1.*t63*t162*t1477;
  t1517 = t1515 + t1516;
  t1613 = t684*t311;
  t1622 = t627*t450;
  t1627 = t585*t526;
  t1640 = t1613 + t1622 + t1627;
  t1645 = t1640*t1450;
  t1646 = -1.*t162*t534;
  t1647 = t92*t567;
  t1648 = t1646 + t1647;
  t1649 = t78*t1648;
  t1650 = t92*t534;
  t1652 = t162*t567;
  t1653 = t1650 + t1652;
  t1656 = -1.*t1653*t1477;
  t1661 = t1649 + t1656;
  t1669 = t63*t1661;
  t1672 = t1645 + t1669;
  t1531 = t684*t1450;
  t1532 = t242*t1494;
  t1533 = t543*t1517;
  t1534 = t1531 + t1532 + t1533;
  t1541 = t627*t1450;
  t1543 = t360*t1494;
  t1545 = t558*t1517;
  t1552 = t1541 + t1543 + t1545;
  t1572 = t585*t1450;
  t1573 = t472*t1494;
  t1575 = t564*t1517;
  t1589 = t1572 + t1573 + t1575;
  t1795 = Sin(var1[3]);
  t1796 = t78*t1653;
  t1802 = t1648*t1477;
  t1804 = t1796 + t1802;
  t1814 = t1795*t1804;
  t1817 = Cos(var1[3]);
  t1818 = t63*t1640;
  t1823 = -1.*t1450*t1661;
  t1824 = t1818 + t1823;
  t1825 = t1817*t1824;
  t1834 = t1814 + t1825;
  t1846 = t1817*t1804;
  t1860 = -1.*t1795*t1824;
  t1888 = t1846 + t1860;
  t1983 = t78*t1321;
  t1987 = t1363*t1477;
  t1989 = t1983 + t1987;
  t1958 = t78*t1376;
  t1965 = -1.*t1348*t1477;
  t1980 = t1958 + t1965;
  t2004 = t78*t1348;
  t2008 = t1376*t1477;
  t2012 = t2004 + t2008;
  t1924 = t78*t1394;
  t1926 = t1417*t1477;
  t1927 = t1924 + t1926;
  t1931 = t78*t1363;
  t1935 = -1.*t1321*t1477;
  t1956 = t1931 + t1935;
  t1981 = -1.*t1956*t1980;
  t2014 = -1.*t1989*t2012;
  t2016 = t1119 + t1981 + t2014;
  t2018 = t1927*t2016;
  t2020 = t78*t1417;
  t2021 = -1.*t1394*t1477;
  t2025 = t2020 + t2021;
  t2027 = t1980*t2025;
  t2032 = t2012*t1927;
  t2038 = t1167 + t2027 + t2032;
  t2048 = t1989*t2038;
  t2049 = t2018 + t2048;
  t2111 = t1076*t1450;
  t2112 = t63*t1956;
  t2120 = t2111 + t2112;
  t2128 = t1116*t1450;
  t2130 = t63*t1980;
  t2132 = t2128 + t2130;
  t2098 = t711*t1450;
  t2099 = t63*t2025;
  t2100 = t2098 + t2099;
  t2159 = t63*t1116;
  t2160 = -1.*t1450*t1980;
  t2164 = t2159 + t2160;
  t2136 = -1.*t2120*t2132;
  t2137 = t63*t1076;
  t2141 = -1.*t1450*t1956;
  t2144 = t2137 + t2141;
  t2167 = -1.*t2144*t2164;
  t2169 = t2014 + t2136 + t2167;
  t2170 = t2100*t2169;
  t2182 = t2132*t2100;
  t2186 = t63*t711;
  t2203 = -1.*t1450*t2025;
  t2205 = t2186 + t2203;
  t2207 = t2164*t2205;
  t2212 = t2032 + t2182 + t2207;
  t2215 = t2120*t2212;
  t2220 = t2170 + t2215;
  t2272 = 0.15121*t92;
  t2274 = t2272 + t167 + t1365 + t1366;
  t2226 = -0.15121*t92;
  t2230 = -1.*t162*t995;
  t2231 = -1.*t92*t1051;
  t2235 = t2226 + t167 + t2230 + t2231;
  t2355 = -1.*t92*t534;
  t2360 = -1.*t162*t567;
  t2369 = t2355 + t2360;
  t2378 = t78*t2369;
  t2379 = -1.*t1648*t1477;
  t2382 = t2378 + t2379;
  t2416 = t2369*t1477;
  t2431 = t1649 + t2416;
  t2286 = -1.*t162*t1139;
  t2290 = -1.*t92*t1164;
  t2291 = t2286 + t2290;
  t2256 = -1.*t162*t758;
  t2266 = -1.*t92*t1014;
  t2269 = t2256 + t2266;
  t2480 = t2291*t1477;
  t2483 = t2020 + t2480;
  t2571 = t78*t2235;
  t2576 = -1.*t2274*t1477;
  t2590 = t2571 + t2576;
  t2495 = t78*t2274;
  t2496 = t2235*t1477;
  t2499 = t2495 + t2496;
  t2538 = t2269*t1477;
  t2548 = t1931 + t2538;
  t2501 = -1.*t1989*t2499;
  t2554 = -1.*t2548*t2012;
  t2504 = t78*t2269;
  t2529 = -1.*t1363*t1477;
  t2530 = t2504 + t2529;
  t2647 = t78*t2291;
  t2651 = -1.*t1417*t1477;
  t2669 = t2647 + t2651;
  t2612 = t2012*t2483;
  t2675 = t2499*t1927;
  t2773 = -1.*t78*t1653;
  t2778 = t2773 + t2379;
  t2836 = -1.*t78*t1348;
  t2838 = -1.*t1376*t1477;
  t2845 = t2836 + t2838;
  t2829 = -1.*t1989*t1980;
  t2853 = -1.*t1956*t2012;
  t2816 = -1.*t78*t1321;
  t2819 = t2816 + t2529;
  t2866 = -1.*t78*t1394;
  t2867 = t2866 + t2651;
  t2863 = t2012*t2025;
  t2870 = t1980*t1927;
  t2948 = -1.*t1640*t1450;
  t2949 = -1.*t63*t1661;
  t2952 = t2948 + t2949;
  t2959 = -1.*t1116*t1450;
  t2961 = -1.*t63*t1980;
  t2963 = t2959 + t2961;
  t3050 = 4.e-6*t266;
  t3034 = 7.e-6*t266;
  t3039 = t3034 + t291;
  t3043 = -7.e-6*t3039;
  t3045 = 2.8e-11*t290;
  t3046 = t270 + t3043 + t3045;
  t3051 = 7.000000000455e-6*t290;
  t3052 = t3050 + t3051;
  t3056 = t3050 + t650;
  t3059 = -7.e-6*t3056;
  t3062 = 1.000000000016*t290;
  t3065 = t3059 + t3062;
  t3119 = -4.e-6*t266;
  t3185 = t3119 + t650;
  t3194 = t3034 + t595;
  t3161 = -7.e-6*t266;
  t3162 = -2.8e-11*t290;
  t3166 = t266 + t3162;
  t3124 = t266 + t3045;
  t3211 = -0.80315*t3185;
  t3213 = -0.038575000014*t3194;
  t3214 = t3161 + t291;
  t3216 = -0.038576*t3214;
  t3217 = t3050 + t394;
  t3218 = -0.5031510000080001*t3217;
  t3223 = 9.666256095795e-12*t290;
  t3225 = 2.826290000000002e-7 + t3211 + t3213 + t3216 + t3218 + t3223;
  t3232 = t3161 + t595;
  t3234 = -3.367757e-6*t3232;
  t3237 = -0.80315*t3166;
  t3238 = t270 + t3045;
  t3241 = -0.5031510000080001*t3238;
  t3242 = -0.148715*t3039;
  t3245 = 9.99986000053965e-7*t290;
  t3246 = 1.1305160000000008e-12 + t3234 + t3237 + t3241 + t3242 + t3245;
  t3260 = -0.148715*t3056;
  t3266 = t270 + t3162;
  t3272 = -0.038576*t3266;
  t3274 = -0.038575000014*t3124;
  t3278 = t3119 + t394;
  t3281 = -3.367757e-6*t3278;
  t3282 = 0.2999989999967999*t290;
  t3287 = -1.9784030000000015e-12 + t3260 + t3272 + t3274 + t3281 + t3282;
  t3338 = -4.00000000026e-6*t290;
  t3341 = t3034 + t3338;
  t3352 = 4.e-6*t3056;
  t3360 = t266 + t3352 + t3045;
  t3363 = 4.e-6*t3039;
  t3376 = 1.000000000049*t290;
  t3379 = t3363 + t3376;
  t3130 = 4.e-6*t3124;
  t3135 = -1.12e-16*t290;
  t3142 = t3119 + t3130 + t3135;
  t3175 = 7.e-6*t3166;
  t3182 = 1.96e-16*t290;
  t3183 = t3161 + t3175 + t3182;
  t3190 = 7.e-6*t3185;
  t3195 = 4.e-6*t3194;
  t3199 = 6.5e-11*t290;
  t3200 = t3190 + t3195 + t3199;
  t3154 = t684*t3142;
  t3184 = t627*t3183;
  t3202 = t585*t3200;
  t3203 = t3154 + t3184 + t3202;
  t3230 = t564*t3225;
  t3259 = t558*t3246;
  t3289 = t543*t3287;
  t3299 = t3230 + t3259 + t3289;
  t3303 = t472*t3225;
  t3309 = t360*t3246;
  t3317 = t242*t3287;
  t3322 = t3303 + t3309 + t3317;
  t3328 = t585*t3225;
  t3331 = t627*t3246;
  t3335 = t684*t3287;
  t3336 = t3328 + t3331 + t3335;
  t3400 = t585*t3341;
  t3404 = t684*t3360;
  t3405 = t627*t3379;
  t3406 = t3400 + t3404 + t3405;
  t3508 = -1.*t847*t3341;
  t3509 = -1.*t714*t3246;
  t3510 = -1.*t3225*t740;
  t3513 = -1.*t3287*t754;
  t3514 = -1.*t3379*t932;
  t3515 = -1.*t3360*t986;
  t3519 = t3508 + t3509 + t3510 + t3513 + t3514 + t3515;
  t3532 = t616*t3225;
  t3533 = t847*t3200;
  t3534 = t3183*t932;
  t3543 = t3246*t664;
  t3544 = t3142*t986;
  t3545 = t3287*t693;
  t3554 = t3532 + t3533 + t3534 + t3543 + t3544 + t3545;
  t3337 = -1.*t3336*t1076;
  t3409 = -1.*t3406*t1116;
  t3344 = t564*t3341;
  t3362 = t543*t3360;
  t3380 = t558*t3379;
  t3382 = t3344 + t3362 + t3380;
  t3388 = t472*t3341;
  t3389 = t242*t3360;
  t3392 = t360*t3379;
  t3393 = t3388 + t3389 + t3392;
  t3458 = t3203*t1116;
  t3473 = t3336*t711;
  t3440 = t242*t3142;
  t3445 = t360*t3183;
  t3446 = t472*t3200;
  t3453 = t3440 + t3445 + t3446;
  t3419 = t543*t3142;
  t3428 = t558*t3183;
  t3429 = t564*t3200;
  t3431 = t3419 + t3428 + t3429;
  t3613 = t162*t3299;
  t3614 = t92*t3322;
  t3617 = t3613 + t3614;
  t3622 = t92*t3299;
  t3623 = -1.*t162*t3322;
  t3624 = t3622 + t3623;
  t3047 = t558*t3046;
  t3053 = t564*t3052;
  t3069 = t543*t3065;
  t3072 = t3047 + t3053 + t3069;
  t3085 = t360*t3046;
  t3098 = t472*t3052;
  t3101 = t242*t3065;
  t3104 = t3085 + t3098 + t3101;
  t3741 = t162*t3072;
  t3743 = t92*t3104;
  t3744 = t3741 + t3743;
  t3720 = t92*t3072;
  t3725 = -1.*t162*t3104;
  t3728 = t3720 + t3725;
  t3706 = t627*t3046;
  t3707 = t585*t3052;
  t3708 = t684*t3065;
  t3713 = t3706 + t3707 + t3708;
  t3736 = t78*t3728;
  t3749 = -1.*t3744*t1477;
  t3750 = t3736 + t3749;
  t3767 = t78*t3744;
  t3771 = t3728*t1477;
  t3773 = t3767 + t3771;
  t3780 = t63*t3713;
  t3783 = -1.*t1450*t3750;
  t3786 = t3780 + t3783;
  t3663 = t92*t3453;
  t3664 = t162*t3431;
  t3665 = t3663 + t3664;
  t3674 = -1.*t162*t3453;
  t3679 = t92*t3431;
  t3680 = t3674 + t3679;
  t3634 = t92*t3382;
  t3645 = -1.*t162*t3393;
  t3648 = t3634 + t3645;
  t3628 = t162*t3382;
  t3629 = t92*t3393;
  t3631 = t3628 + t3629;
  t3825 = t78*t3665;
  t3833 = t3680*t1477;
  t3836 = t3825 + t3833;
  t3843 = t78*t3624;
  t3846 = -1.*t3617*t1477;
  t3849 = t3843 + t3846;
  t3859 = t78*t3617;
  t3860 = t3624*t1477;
  t3862 = t3859 + t3860;
  t3883 = t78*t3631;
  t3884 = t3648*t1477;
  t3885 = t3883 + t3884;
  t3897 = t78*t3680;
  t3900 = -1.*t3665*t1477;
  t3902 = t3897 + t3900;
  t3864 = -1.*t3862*t1989;
  t3889 = -1.*t3885*t2012;
  t3865 = t78*t3648;
  t3867 = -1.*t3631*t1477;
  t3868 = t3865 + t3867;
  t3905 = t3836*t2012;
  t3908 = t3862*t1927;
  t3926 = t3203*t1450;
  t3929 = t63*t3902;
  t3935 = t3926 + t3929;
  t3939 = t3336*t1450;
  t3941 = t63*t3849;
  t3953 = t3939 + t3941;
  t3957 = t63*t3336;
  t3958 = -1.*t1450*t3849;
  t3961 = t3957 + t3958;
  t3968 = t3406*t1450;
  t3972 = t63*t3868;
  t3973 = t3968 + t3972;
  t4066 = -2.8e-11*t223;
  t4068 = t195 + t4066;
  t4073 = 4.e-6*t188;
  t4074 = t4073 + t353;
  t4101 = -7.e-6*t188;
  t4102 = t4101 + t563;
  t4090 = -4.e-6*t188;
  t4096 = t4090 + t353;
  t4135 = 7.e-6*t188;
  t4187 = 2.8e-11*t223;
  t4191 = t4135 + t563;
  t4201 = t188 + t4066;
  t4208 = t188 + t4187;
  t4209 = -0.038749000006999997*t4208;
  t4211 = t4090 + t584;
  t4215 = -1.8134809999999998e-6*t4211;
  t4216 = -0.2812110000084994*t223;
  t4219 = t4074*t847;
  t4220 = t4068*t932;
  t4221 = -1.000000000016*t223*t986;
  t4230 = -2.7726089999999997e-12 + t4209 + t4215 + t4216 + t4219 + t4220 + t4221;
  t4137 = t4135 + t228;
  t4139 = -0.038749000006999997*t4137;
  t4144 = t4073 + t584;
  t4148 = -0.281211000004*t4144;
  t4155 = -1.1787626499999999e-16*t223;
  t4156 = -6.5e-11*t223*t847;
  t4157 = t4102*t932;
  t4159 = t4096*t986;
  t4162 = 3.9608699999999997e-7 + t4139 + t4148 + t4155 + t4156 + t4157 + t4159;
  t4268 = t4191*t616;
  t4271 = -1.000000000049*t223*t664;
  t4289 = t4201*t693;
  t4297 = t4268 + t4271 + t4289;
  t4184 = t4101 + t228;
  t4185 = -1.8134809999999998e-6*t4184;
  t4188 = t195 + t4187;
  t4189 = -0.281211000004*t4188;
  t4190 = -0.03874900000889869*t223;
  t4198 = t4191*t847;
  t4199 = -1.000000000049*t223*t932;
  t4202 = t4201*t986;
  t4204 = 1.5843479999999999e-12 + t4185 + t4189 + t4190 + t4198 + t4199 + t4202;
  t4237 = -1.000000000049*t223*t714;
  t4247 = t4191*t740;
  t4248 = t4201*t754;
  t4249 = t4237 + t4247 + t4248;
  t4207 = -1.*t1076*t4204;
  t4254 = -1.*t4249*t1116;
  t4166 = t4102*t714;
  t4169 = -6.5e-11*t223*t740;
  t4175 = t4096*t754;
  t4179 = t4166 + t4169 + t4175;
  t4119 = t4068*t714;
  t4123 = t4074*t740;
  t4126 = -1.000000000016*t223*t754;
  t4128 = t4119 + t4123 + t4126;
  t4357 = t1116*t4297;
  t4380 = t4204*t711;
  t4429 = t92*t4162;
  t4431 = t162*t4230;
  t4440 = t4429 + t4431;
  t4416 = -1.*t162*t4162;
  t4419 = t92*t4230;
  t4420 = t4416 + t4419;
  t4314 = -6.5e-11*t223*t616;
  t4319 = t4102*t664;
  t4324 = t4096*t693;
  t4330 = t4314 + t4319 + t4324;
  t4361 = t4074*t616;
  t4364 = t4068*t664;
  t4369 = -1.000000000016*t223*t693;
  t4376 = t4361 + t4364 + t4369;
  t4060 = -1.000000000016*t223*t311;
  t4070 = t4068*t450;
  t4077 = t4074*t526;
  t4078 = t4060 + t4070 + t4077;
  t4100 = t4096*t311;
  t4103 = t4102*t450;
  t4107 = -6.5e-11*t223*t526;
  t4114 = t4100 + t4103 + t4107;
  t4543 = t162*t4078;
  t4544 = t92*t4114;
  t4545 = t4543 + t4544;
  t4536 = t92*t4078;
  t4538 = -1.*t162*t4114;
  t4541 = t4536 + t4538;
  t4525 = t4201*t311;
  t4526 = -1.000000000049*t223*t450;
  t4531 = t4191*t526;
  t4532 = t4525 + t4526 + t4531;
  t4542 = t78*t4541;
  t4548 = -1.*t4545*t1477;
  t4550 = t4542 + t4548;
  t4556 = t78*t4545;
  t4557 = t4541*t1477;
  t4559 = t4556 + t4557;
  t4561 = t63*t4532;
  t4564 = -1.*t1450*t4550;
  t4567 = t4561 + t4564;
  t4509 = t92*t4330;
  t4512 = t162*t4376;
  t4513 = t4509 + t4512;
  t4482 = -1.*t162*t4330;
  t4501 = t92*t4376;
  t4504 = t4482 + t4501;
  t4410 = -1.*t162*t4179;
  t4411 = t92*t4128;
  t4413 = t4410 + t4411;
  t4396 = t92*t4179;
  t4401 = t162*t4128;
  t4408 = t4396 + t4401;
  t4594 = t78*t4408;
  t4598 = t4413*t1477;
  t4599 = t4594 + t4598;
  t4606 = t78*t4420;
  t4607 = -1.*t4440*t1477;
  t4608 = t4606 + t4607;
  t4602 = t78*t4440;
  t4603 = t4420*t1477;
  t4604 = t4602 + t4603;
  t4579 = t78*t4513;
  t4582 = t4504*t1477;
  t4584 = t4579 + t4582;
  t4623 = t78*t4504;
  t4627 = -1.*t4513*t1477;
  t4630 = t4623 + t4627;
  t4601 = -1.*t4599*t2012;
  t4605 = -1.*t1989*t4604;
  t4586 = t78*t4413;
  t4587 = -1.*t4408*t1477;
  t4589 = t4586 + t4587;
  t4657 = t4249*t1450;
  t4658 = t63*t4589;
  t4659 = t4657 + t4658;
  t4615 = t4604*t1927;
  t4617 = t2012*t4584;
  t4671 = t4204*t1450;
  t4684 = t63*t4608;
  t4686 = t4671 + t4684;
  t4689 = t63*t4204;
  t4691 = -1.*t1450*t4608;
  t4695 = t4689 + t4691;
  t4649 = t4297*t1450;
  t4650 = t63*t4630;
  t4652 = t4649 + t4650;
  t4734 = -0.15121*t758;
  t4735 = 0.15121*t1014;
  t4741 = t567*t995;
  t4747 = t534*t1051;
  t4757 = t1640*t1116;
  t4759 = t4741 + t4747 + t4757;
  t4761 = t711*t4759;
  t4762 = -1.*t995*t1139;
  t4766 = -1.*t1051*t1164;
  t4770 = -1.*t1116*t711;
  t4772 = t4762 + t4766 + t4770;
  t4773 = t1640*t4772;
  t4777 = t4734 + t4735 + t4761 + t4773;
  t4802 = t847*t526;
  t4804 = t450*t932;
  t4806 = t311*t986;
  t4811 = t4802 + t4804 + t4806;
  t4819 = -1.*t847*t616;
  t4820 = -1.*t932*t664;
  t4824 = -1.*t986*t693;
  t4825 = t4819 + t4820 + t4824;
  t4788 = 0.281211*t714;
  t4793 = -1. + t590;
  t4794 = 4.e-6*t4793;
  t4798 = t4794 + t379 + t650;
  t4800 = 1.e-6*t4798;
  t4801 = -0.038749*t754;
  t4816 = -1.*t616*t4811;
  t4828 = -1.*t526*t4825;
  t4840 = t693*t4811;
  t4843 = t311*t4825;
  t4844 = t4840 + t4843;
  t4845 = 7.e-6*t4844;
  t4846 = -1.*t664*t4811;
  t4854 = -1.*t450*t4825;
  t4868 = t4846 + t4854;
  t4869 = 4.e-6*t4868;
  t4871 = t4788 + t4800 + t4801 + t4816 + t4828 + t4845 + t4869;
  t4881 = t1653*t1348;
  t4882 = t1648*t1376;
  t4886 = t4757 + t4881 + t4882;
  t4887 = t711*t4886;
  t4890 = -1.*t1348*t1394;
  t4891 = -1.*t1376*t1417;
  t4893 = t4770 + t4890 + t4891;
  t4894 = t1640*t4893;
  t4896 = t4887 + t4894;
  t1449 = t1077 + t1085 + t1090 + t1097;
  t171 = t148 + t167;
  t1467 = t148 + t1328;
  t1483 = t1015 + t1017 + t1019 + t1034;
  t4906 = t78*t1795*t1450;
  t4907 = t1817*t1477;
  t4908 = t4906 + t4907;
  t4912 = t1817*t78;
  t4913 = -1.*t1795*t1450*t1477;
  t4914 = t4912 + t4913;
  t1505 = t770 + t771 + t781 + t797;
  t4939 = t1795*t1989;
  t4941 = t1817*t2144;
  t4942 = t4939 + t4941;
  t4952 = t1817*t1989;
  t4953 = -1.*t1795*t2144;
  t4958 = t4952 + t4953;
  t4963 = t1661*t1980;
  t4964 = t1804*t2012;
  t4971 = t4757 + t4963 + t4964;
  t4972 = t1927*t4971;
  t4980 = -1.*t1980*t2025;
  t4982 = -1.*t2012*t1927;
  t4983 = t4770 + t4980 + t4982;
  t4985 = t1804*t4983;
  t4986 = t4972 + t4985;
  t1524 = t946 + t950 + t970 + t978;
  t4919 = -1.*t162*t4908;
  t4921 = t92*t4914;
  t4922 = t4919 + t4921;
  t4927 = t92*t4908;
  t4930 = t162*t4914;
  t4932 = t4927 + t4930;
  t1538 = t865 + t885 + t900 + t908;
  t1567 = t806 + t815 + t833 + t845;
  t5055 = t1672*t2132;
  t5057 = t1824*t2164;
  t5059 = t4964 + t5055 + t5057;
  t5062 = t2100*t5059;
  t5063 = -1.*t2132*t2100;
  t5065 = -1.*t2164*t2205;
  t5067 = t4982 + t5063 + t5065;
  t5069 = t1672*t5067;
  t5071 = t5062 + t5069;
  t4991 = -1.*t63*t684*t1795;
  t4995 = t242*t4922;
  t5002 = t543*t4932;
  t5008 = t4991 + t4995 + t5002;
  t5011 = -1.*t627*t63*t1795;
  t5012 = t360*t4922;
  t5014 = t558*t4932;
  t5017 = t5011 + t5012 + t5014;
  t5019 = -1.*t63*t585*t1795;
  t5020 = t472*t4922;
  t5021 = t564*t4932;
  t5025 = t5019 + t5020 + t5021;
  t5181 = t1804*t2499;
  t5184 = t2431*t2012;
  t5191 = -1.*t2012*t2483;
  t5196 = -1.*t2499*t1927;
  t5290 = t1804*t1980;
  t5293 = t1661*t2012;
  t5310 = -1.*t2012*t2025;
  t5314 = -1.*t1980*t1927;
  t2969 = -1.*t1076*t1450;
  t2971 = -1.*t63*t1956;
  t2974 = t2969 + t2971;
  t2988 = -1.*t711*t1450;
  t2989 = -1.*t63*t2025;
  t2990 = t2988 + t2989;
  t5515 = t450*t3246;
  t5516 = t3225*t526;
  t5517 = t847*t3052;
  t5518 = t311*t3287;
  t5520 = t3046*t932;
  t5524 = t3065*t986;
  t5528 = t5515 + t5516 + t5517 + t5518 + t5520 + t5524;
  t5531 = -1.*t616*t3225;
  t5532 = -1.*t847*t3200;
  t5533 = -1.*t3183*t932;
  t5534 = -1.*t3246*t664;
  t5535 = -1.*t3142*t986;
  t5536 = -1.*t3287*t693;
  t5538 = t5531 + t5532 + t5533 + t5534 + t5535 + t5536;
  t5459 = t1640*t3336;
  t5466 = t3713*t1116;
  t5483 = -1.*t3203*t1116;
  t5486 = -1.*t3336*t711;
  t3984 = t63*t3406;
  t3993 = -1.*t1450*t3868;
  t3998 = t3984 + t3993;
  t5635 = t1804*t3862;
  t5646 = t3773*t2012;
  t3716 = t3713*t1450;
  t3751 = t63*t3750;
  t3758 = t3716 + t3751;
  t5652 = -1.*t3836*t2012;
  t5656 = -1.*t3862*t1927;
  t4006 = t63*t3203;
  t4012 = -1.*t1450*t3902;
  t4018 = t4006 + t4012;
  t5726 = t1640*t4204;
  t5730 = t4532*t1116;
  t5747 = -1.*t1116*t4297;
  t5752 = -1.*t4204*t711;
  t4663 = t63*t4249;
  t4666 = -1.*t1450*t4589;
  t4668 = t4663 + t4666;
  t5826 = t4559*t2012;
  t5828 = t1804*t4604;
  t4533 = t4532*t1450;
  t4553 = t63*t4550;
  t4554 = t4533 + t4553;
  t5834 = -1.*t4604*t1927;
  t5836 = -1.*t2012*t4584;
  t4707 = t63*t4297;
  t4710 = -1.*t1450*t4630;
  t4712 = t4707 + t4710;
  t5891 = -0.15121*t1139;
  t5892 = 0.15121*t1164;
  t5894 = -1.*t567*t995;
  t5897 = -1.*t534*t1051;
  t5898 = -1.*t1640*t1116;
  t5900 = t5894 + t5897 + t5898;
  t5902 = t1076*t5900;
  t5904 = t758*t995;
  t5906 = t1014*t1051;
  t5911 = t1076*t1116;
  t5912 = t5904 + t5906 + t5911;
  t5922 = t1640*t5912;
  t5925 = t5891 + t5892 + t5902 + t5922;
  t5949 = -1.*t847*t526;
  t5950 = -1.*t450*t932;
  t5952 = -1.*t311*t986;
  t5953 = t5949 + t5950 + t5952;
  t5955 = t847*t740;
  t5957 = t714*t932;
  t5962 = t754*t986;
  t5964 = t5955 + t5957 + t5962;
  t5934 = 4.e-6*t818;
  t5937 = -7.e-6*t596;
  t5939 = 1. + t489 + t5934 + t5937;
  t5944 = 1.e-6*t5939;
  t5945 = 0.281211*t664;
  t5947 = -0.038749*t693;
  t5954 = -1.*t740*t5953;
  t5966 = -1.*t526*t5964;
  t5969 = t754*t5953;
  t5970 = t311*t5964;
  t5971 = t5969 + t5970;
  t5972 = 7.e-6*t5971;
  t5974 = -1.*t714*t5953;
  t5976 = -1.*t450*t5964;
  t5977 = t5974 + t5976;
  t5979 = 4.e-6*t5977;
  t5981 = t5944 + t5945 + t5947 + t5954 + t5966 + t5972 + t5979;
  t5985 = -1.*t1653*t1348;
  t5986 = -1.*t1648*t1376;
  t5987 = t5898 + t5985 + t5986;
  t5988 = t1076*t5987;
  t5989 = t1321*t1348;
  t5995 = t1363*t1376;
  t5996 = t5911 + t5989 + t5995;
  t5999 = t1640*t5996;
  t6001 = t5988 + t5999;
  t6004 = -1.*t1817*t78*t1450;
  t6005 = t1795*t1477;
  t6007 = t6004 + t6005;
  t6018 = t78*t1795;
  t6019 = t1817*t1450*t1477;
  t6020 = t6018 + t6019;
  t6055 = -1.*t1661*t1980;
  t6057 = -1.*t1804*t2012;
  t6059 = t5898 + t6055 + t6057;
  t6060 = t1989*t6059;
  t6062 = t1956*t1980;
  t6063 = t1989*t2012;
  t6065 = t5911 + t6062 + t6063;
  t6067 = t1804*t6065;
  t6069 = t6060 + t6067;
  t6078 = t1795*t1927;
  t6080 = t1817*t2205;
  t6081 = t6078 + t6080;
  t6088 = t1817*t1927;
  t6095 = -1.*t1795*t2205;
  t6096 = t6088 + t6095;
  t6029 = -1.*t162*t6007;
  t6030 = t92*t6020;
  t6031 = t6029 + t6030;
  t6041 = t92*t6007;
  t6047 = t162*t6020;
  t6048 = t6041 + t6047;
  t6123 = -1.*t1672*t2132;
  t6124 = -1.*t1824*t2164;
  t6126 = t6057 + t6123 + t6124;
  t6127 = t2120*t6126;
  t6128 = t2120*t2132;
  t6129 = t2144*t2164;
  t6134 = t6063 + t6128 + t6129;
  t6138 = t1672*t6134;
  t6140 = t6127 + t6138;
  t6100 = t1817*t63*t684;
  t6102 = t242*t6031;
  t6103 = t543*t6048;
  t6104 = t6100 + t6102 + t6103;
  t6111 = t627*t1817*t63;
  t6112 = t360*t6031;
  t6113 = t558*t6048;
  t6115 = t6111 + t6112 + t6113;
  t6118 = t1817*t63*t585;
  t6119 = t472*t6031;
  t6120 = t564*t6048;
  t6121 = t6118 + t6119 + t6120;
  t6272 = -1.*t1804*t2499;
  t6274 = -1.*t2431*t2012;
  t6280 = t1989*t2499;
  t6282 = t2548*t2012;
  t6359 = -1.*t1804*t1980;
  t6361 = -1.*t1661*t2012;
  t6366 = t1989*t1980;
  t6370 = t1956*t2012;
  t6527 = t847*t3341;
  t6529 = t714*t3246;
  t6531 = t3225*t740;
  t6532 = t3287*t754;
  t6533 = t3379*t932;
  t6534 = t3360*t986;
  t6536 = t6527 + t6529 + t6531 + t6532 + t6533 + t6534;
  t6544 = -1.*t450*t3246;
  t6545 = -1.*t3225*t526;
  t6546 = -1.*t847*t3052;
  t6550 = -1.*t311*t3287;
  t6555 = -1.*t3046*t932;
  t6557 = -1.*t3065*t986;
  t6558 = t6544 + t6545 + t6546 + t6550 + t6555 + t6557;
  t6476 = -1.*t1640*t3336;
  t6479 = -1.*t3713*t1116;
  t6490 = t3336*t1076;
  t6501 = t3406*t1116;
  t6642 = -1.*t1804*t3862;
  t6646 = -1.*t3773*t2012;
  t6659 = t3862*t1989;
  t6665 = t3885*t2012;
  t6722 = -1.*t1640*t4204;
  t6725 = -1.*t4532*t1116;
  t6741 = t1076*t4204;
  t6744 = t4249*t1116;
  t6823 = -1.*t4559*t2012;
  t6825 = -1.*t1804*t4604;
  t6834 = t4599*t2012;
  t6835 = t1989*t4604;
  p_output1[0]=t1449*t1450 + t1483*t1494 + t1505*t1517 + t1524*t1534 + t1538*t1552 + t1567*t1589 - 0.148715*(t1534*t303 + t1552*t396 + t1589*t508) - 1.*t1467*t1477*t63 - 0.80315*(t1589*t596 + t1552*t661 + t1534*t689) + t171*t63*t78 - 0.038576*(t1589*t818 + t1552*t879 + t1534*t952) + var1[0] + t1672*var2[0] + t1888*var2[1] + t1834*var2[2] + t2220*var2[3] + ((-1.*t1795*t1804 - 1.*t1817*t1824)*var2[1] + t1888*var2[2])*var2[3] + t2049*var2[4] + (t1824*var2[0] - 1.*t1795*t2952*var2[1] + t1817*t2952*var2[2] + (t2169*t2205 + t2144*t2212 + t2100*(-1.*t2132*t2144 - 1.*t2120*t2164 - 1.*t2144*t2963 - 1.*t2164*t2974) + t2120*(t2100*t2164 + t2132*t2205 + t2205*t2963 + t2164*t2990))*var2[3])*var2[4] + t1439*var2[5] + (t2778*t63*var2[0] + (t1661*t1817 + t1450*t1795*t2778)*var2[1] + (t1661*t1795 - 1.*t1450*t1817*t2778)*var2[2] + (t2212*t2819*t63 + t2169*t2867*t63 + t2100*(t1450*t2164*t2819 + t2829 + t1450*t2144*t2845 + t2853 - 1.*t2132*t2819*t63 - 1.*t2120*t2845*t63) + t2120*(-1.*t1450*t2205*t2845 + t2863 - 1.*t1450*t2164*t2867 + t2870 + t2100*t2845*t63 + t2132*t2867*t63))*var2[3] + (t2016*t2025 + t1956*t2038 + t1927*(-1.*t1980*t2819 + t2829 - 1.*t1956*t2845 + t2853) + t1989*(t2025*t2845 + t2863 + t1980*t2867 + t2870))*var2[4])*var2[5] + t1179*var2[15] + (t2382*t63*var2[0] + (t1450*t1795*t2382 + t1817*t2431)*var2[1] + (-1.*t1450*t1817*t2382 + t1795*t2431)*var2[2] + (t2212*t2530*t63 + t2169*t2669*t63 + t2100*(t2501 + t1450*t2164*t2530 + t2554 + t1450*t2144*t2590 - 1.*t2132*t2530*t63 - 1.*t2120*t2590*t63) + t2120*(-1.*t1450*t2205*t2590 + t2612 - 1.*t1450*t2164*t2669 + t2675 + t2100*t2590*t63 + t2132*t2669*t63))*var2[3] + (t2016*t2483 + t2038*t2548 + t1927*(t2501 - 1.*t1980*t2530 + t2554 - 1.*t1956*t2590) + t1989*(t2025*t2590 + t2612 + t1980*t2669 + t2675))*var2[4] + (t1076*(t1348*t1417 + t1417*t2235 + t1394*t2274 + t1376*t2291) + (-1.*t1348*t1363 - 1.*t1363*t2235 - 1.*t1376*t2269 - 1.*t1321*t2274)*t711)*var2[5])*var2[15] + t1284*var2[16] + (t4554*var2[0] + (t1817*t4559 - 1.*t1795*t4567)*var2[1] + (t1795*t4559 + t1817*t4567)*var2[2] + (t2169*t4652 + t2212*t4659 + t2100*(t4601 + t4605 - 1.*t2132*t4659 - 1.*t2164*t4668 - 1.*t2120*t4686 - 1.*t2144*t4695) + t2120*(t4615 + t4617 + t2132*t4652 + t2100*t4686 + t2205*t4695 + t2164*t4712))*var2[3] + (t2016*t4584 + t2038*t4599 + t1927*(t4207 + t4254 - 1.*t1980*t4589 + t4601 + t4605 - 1.*t1956*t4608) + t1989*(t4357 + t4380 + t2025*t4608 + t4615 + t4617 + t1980*t4630))*var2[4] + (t1433*t4249 + t1388*t4297 + t1076*(t4357 + t4380 + t1417*t4420 + t1394*t4440 + t1376*t4504 + t1348*t4513) + (t4207 + t4254 - 1.*t1348*t4408 - 1.*t1376*t4413 - 1.*t1363*t4420 - 1.*t1321*t4440)*t711)*var2[5] + (-0.15121*t4078 + 0.15121*t4114 + t1171*t4249 + t1124*t4297 + t711*(-1.*t1014*t4162 - 1.*t1051*t4179 + t4207 + t4254 - 1.*t4230*t758 - 1.*t4128*t995) + t1076*(t1164*t4162 + t1139*t4230 + t1051*t4330 + t4357 + t4380 + t4376*t995))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t3758*var2[0] + (t1817*t3773 - 1.*t1795*t3786)*var2[1] + (t1795*t3773 + t1817*t3786)*var2[2] + (t2169*t3935 + t2212*t3973 + t2100*(t3864 + t3889 - 1.*t2120*t3953 - 1.*t2144*t3961 - 1.*t2132*t3973 - 1.*t2164*t3998) + t2120*(t3905 + t3908 + t2132*t3935 + t2100*t3953 + t2205*t3961 + t2164*t4018))*var2[3] + (t2016*t3836 + t2038*t3885 + t1927*(t3337 + t3409 - 1.*t1956*t3849 + t3864 - 1.*t1980*t3868 + t3889) + t1989*(t3458 + t3473 + t2025*t3849 + t1980*t3902 + t3905 + t3908))*var2[4] + (t1388*t3203 + t1433*t3406 + t1076*(t3458 + t3473 + t1394*t3617 + t1417*t3624 + t1348*t3665 + t1376*t3680) + (t3337 + t3409 - 1.*t1321*t3617 - 1.*t1363*t3624 - 1.*t1348*t3631 - 1.*t1376*t3648)*t711)*var2[5] + (-0.15121*t3072 + 0.15121*t3104 + t1124*t3203 + t1171*t3406 + t711*(-1.*t1014*t3322 + t3337 - 1.*t1051*t3393 + t3409 - 1.*t3299*t758 - 1.*t3382*t995) + t1076*(t1139*t3299 + t1164*t3322 + t1051*t3453 + t3458 + t3473 + t3431*t995))*var2[15] + (0.281211*t3046 - 0.038749*t3065 + 1.e-6*(-7.000000000455e-6*t290 + t3119) - 1.*t1222*t3200 - 1.*t1251*t3341 - 1.*t3519*t616 + 4.e-6*(-1.*t1222*t3183 - 1.*t1251*t3379 - 1.*t3519*t664 - 1.*t3554*t714) - 1.*t3554*t740 + 7.e-6*(t1222*t3142 + t1251*t3360 + t3519*t693 + t3554*t754))*var2[16])*var2[17] + t1672*var3[0] + t1888*var3[1] + t1834*var3[2] + t2220*var3[3] + t2049*var3[4] + t1439*var3[5] + t1179*var3[15] + t1284*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=t171*t4908 + t1467*t4914 + t1483*t4922 + t1505*t4932 + t1524*t5008 + t1538*t5017 + t1567*t5025 - 0.148715*(t303*t5008 + t396*t5017 + t5025*t508) - 1.*t1449*t1795*t63 - 0.80315*(t5025*t596 + t5017*t661 + t5008*t689) - 0.038576*(t5025*t818 + t5017*t879 + t5008*t952) + var1[1] + t2120*var2[0] + t4958*var2[1] + t4942*var2[2] + t5071*var2[3] + ((-1.*t1795*t1989 - 1.*t1817*t2144)*var2[1] + t4958*var2[2])*var2[3] + t4986*var2[4] + (t2144*var2[0] - 1.*t1795*t2974*var2[1] + t1817*t2974*var2[2] + (t2100*(t1824*t2132 + t1672*t2164 + t2164*t2952 + t1824*t2963) + t1672*(-1.*t2100*t2164 - 1.*t2132*t2205 - 1.*t2205*t2963 - 1.*t2164*t2990) + t2205*t5059 + t1824*t5067)*var2[3])*var2[4] + t4896*var2[5] + (t2819*t63*var2[0] + (t1817*t1956 + t1450*t1795*t2819)*var2[1] + (t1795*t1956 - 1.*t1450*t1817*t2819)*var2[2] + (t2867*t5059*t63 + t2778*t5067*t63 + t2100*(-1.*t1450*t2164*t2778 - 1.*t1450*t1824*t2845 + t5290 + t5293 + t2132*t2778*t63 + t1672*t2845*t63) + t1672*(t1450*t2205*t2845 + t1450*t2164*t2867 + t5310 + t5314 - 1.*t2100*t2845*t63 - 1.*t2132*t2867*t63))*var2[3] + (t2025*t4971 + t1661*t4983 + t1927*(t1980*t2778 + t1661*t2845 + t5290 + t5293) + t1804*(-1.*t2025*t2845 - 1.*t1980*t2867 + t5310 + t5314))*var2[4])*var2[5] + t4777*var2[15] + (t2530*t63*var2[0] + (t1450*t1795*t2530 + t1817*t2548)*var2[1] + (-1.*t1450*t1817*t2530 + t1795*t2548)*var2[2] + (t2669*t5059*t63 + t2382*t5067*t63 + t2100*(-1.*t1450*t2164*t2382 - 1.*t1450*t1824*t2590 + t5181 + t5184 + t2132*t2382*t63 + t1672*t2590*t63) + t1672*(t1450*t2205*t2590 + t1450*t2164*t2669 + t5191 + t5196 - 1.*t2100*t2590*t63 - 1.*t2132*t2669*t63))*var2[3] + (t2483*t4971 + t2431*t4983 + t1927*(t1980*t2382 + t1661*t2590 + t5181 + t5184) + t1804*(-1.*t2025*t2590 - 1.*t1980*t2669 + t5191 + t5196))*var2[4] + (t1640*(-1.*t1348*t1417 - 1.*t1417*t2235 - 1.*t1394*t2274 - 1.*t1376*t2291) + (t1348*t1648 + t1648*t2235 + t1653*t2274 + t1376*t2369)*t711)*var2[5])*var2[15] + t4871*var2[16] + (t4659*var2[0] + (t1817*t4599 - 1.*t1795*t4668)*var2[1] + (t1795*t4599 + t1817*t4668)*var2[2] + (t4652*t5059 + t4554*t5067 + t2100*(t2132*t4554 + t2164*t4567 + t1672*t4686 + t1824*t4695 + t5826 + t5828) + t1672*(-1.*t2132*t4652 - 1.*t2100*t4686 - 1.*t2205*t4695 - 1.*t2164*t4712 + t5834 + t5836))*var2[3] + (t4584*t4971 + t4559*t4983 + t1927*(t1980*t4550 + t1661*t4608 + t5726 + t5730 + t5826 + t5828) + t1804*(-1.*t2025*t4608 - 1.*t1980*t4630 + t5747 + t5752 + t5834 + t5836))*var2[4] + (t4297*t4886 + t4532*t4893 + t1640*(-1.*t1417*t4420 - 1.*t1394*t4440 - 1.*t1376*t4504 - 1.*t1348*t4513 + t5747 + t5752) + (t1648*t4420 + t1653*t4440 + t1376*t4541 + t1348*t4545 + t5726 + t5730)*t711)*var2[5] + (-0.15121*t4128 + 0.15121*t4179 + t4297*t4759 + t4532*t4772 + t711*(t1051*t4114 + t4162*t534 + t4230*t567 + t5726 + t5730 + t4078*t995) + t1640*(-1.*t1164*t4162 - 1.*t1139*t4230 - 1.*t1051*t4330 + t5747 + t5752 - 1.*t4376*t995))*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t3973*var2[0] + (t1817*t3885 - 1.*t1795*t3998)*var2[1] + (t1795*t3885 + t1817*t3998)*var2[2] + (t3935*t5059 + t3758*t5067 + t2100*(t2132*t3758 + t2164*t3786 + t1672*t3953 + t1824*t3961 + t5635 + t5646) + t1672*(-1.*t2132*t3935 - 1.*t2100*t3953 - 1.*t2205*t3961 - 1.*t2164*t4018 + t5652 + t5656))*var2[3] + (t3836*t4971 + t3773*t4983 + t1927*(t1980*t3750 + t1661*t3849 + t5459 + t5466 + t5635 + t5646) + t1804*(-1.*t2025*t3849 - 1.*t1980*t3902 + t5483 + t5486 + t5652 + t5656))*var2[4] + (t3203*t4886 + t3713*t4893 + t1640*(-1.*t1394*t3617 - 1.*t1417*t3624 - 1.*t1348*t3665 - 1.*t1376*t3680 + t5483 + t5486) + (t1653*t3617 + t1648*t3624 + t1376*t3728 + t1348*t3744 + t5459 + t5466)*t711)*var2[5] + (-0.15121*t3382 + 0.15121*t3393 + t3203*t4759 + t3713*t4772 + t711*(t1051*t3104 + t3322*t534 + t5459 + t5466 + t3299*t567 + t3072*t995) + t1640*(-1.*t1139*t3299 - 1.*t1164*t3322 - 1.*t1051*t3453 + t5483 + t5486 - 1.*t3431*t995))*var2[15] + (1.e-6*(4.00000000026e-6*t290 + t3161) - 0.038749*t3360 + 0.281211*t3379 - 1.*t3200*t4811 - 1.*t3052*t4825 - 1.*t526*t5538 - 1.*t5528*t616 + 4.e-6*(-1.*t3183*t4811 - 1.*t3046*t4825 - 1.*t450*t5538 - 1.*t5528*t664) + 7.e-6*(t3142*t4811 + t3065*t4825 + t311*t5538 + t5528*t693))*var2[16])*var2[17] + t2120*var3[0] + t4958*var3[1] + t4942*var3[2] + t5071*var3[3] + t4986*var3[4] + t4896*var3[5] + t4777*var3[15] + t4871*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=t171*t6007 + t1467*t6020 + t1483*t6031 + t1505*t6048 + t1524*t6104 + t1538*t6115 + t1567*t6121 - 0.148715*(t303*t6104 + t396*t6115 + t508*t6121) + t1449*t1817*t63 - 0.80315*(t596*t6121 + t6115*t661 + t6104*t689) - 0.038576*(t6121*t818 + t6115*t879 + t6104*t952) + var1[2] + t2100*var2[0] + t6096*var2[1] + t6081*var2[2] + t6140*var2[3] + ((-1.*t1795*t1927 - 1.*t1817*t2205)*var2[1] + t6096*var2[2])*var2[3] + t6069*var2[4] + (t2205*var2[0] - 1.*t1795*t2990*var2[1] + t1817*t2990*var2[2] + (t2120*(-1.*t1824*t2132 - 1.*t1672*t2164 - 1.*t2164*t2952 - 1.*t1824*t2963) + t1672*(t2132*t2144 + t2120*t2164 + t2144*t2963 + t2164*t2974) + t2144*t6126 + t1824*t6134)*var2[3])*var2[4] + t6001*var2[5] + (t2867*t63*var2[0] + (t1817*t2025 + t1450*t1795*t2867)*var2[1] + (t1795*t2025 - 1.*t1450*t1817*t2867)*var2[2] + (t2819*t6126*t63 + t2778*t6134*t63 + t2120*(t1450*t2164*t2778 + t1450*t1824*t2845 - 1.*t2132*t2778*t63 - 1.*t1672*t2845*t63 + t6359 + t6361) + t1672*(-1.*t1450*t2164*t2819 - 1.*t1450*t2144*t2845 + t2132*t2819*t63 + t2120*t2845*t63 + t6366 + t6370))*var2[3] + (t1956*t6059 + t1661*t6065 + t1989*(-1.*t1980*t2778 - 1.*t1661*t2845 + t6359 + t6361) + t1804*(t1980*t2819 + t1956*t2845 + t6366 + t6370))*var2[4])*var2[5] + t5925*var2[15] + (t2669*t63*var2[0] + (t1817*t2483 + t1450*t1795*t2669)*var2[1] + (t1795*t2483 - 1.*t1450*t1817*t2669)*var2[2] + (t2530*t6126*t63 + t2382*t6134*t63 + t2120*(t1450*t2164*t2382 + t1450*t1824*t2590 + t6272 + t6274 - 1.*t2132*t2382*t63 - 1.*t1672*t2590*t63) + t1672*(-1.*t1450*t2164*t2530 - 1.*t1450*t2144*t2590 + t6280 + t6282 + t2132*t2530*t63 + t2120*t2590*t63))*var2[3] + (t2548*t6059 + t2431*t6065 + t1989*(-1.*t1980*t2382 - 1.*t1661*t2590 + t6272 + t6274) + t1804*(t1980*t2530 + t1956*t2590 + t6280 + t6282))*var2[4] + (t1640*(t1348*t1363 + t1363*t2235 + t1376*t2269 + t1321*t2274) + t1076*(-1.*t1348*t1648 - 1.*t1648*t2235 - 1.*t1653*t2274 - 1.*t1376*t2369))*var2[5])*var2[15] + t5981*var2[16] + (t4652*var2[0] + (t1817*t4584 - 1.*t1795*t4712)*var2[1] + (t1795*t4584 + t1817*t4712)*var2[2] + (t4659*t6126 + t4554*t6134 + t2120*(-1.*t2132*t4554 - 1.*t2164*t4567 - 1.*t1672*t4686 - 1.*t1824*t4695 + t6823 + t6825) + t1672*(t2132*t4659 + t2164*t4668 + t2120*t4686 + t2144*t4695 + t6834 + t6835))*var2[3] + (t4599*t6059 + t4559*t6065 + t1989*(-1.*t1980*t4550 - 1.*t1661*t4608 + t6722 + t6725 + t6823 + t6825) + t1804*(t1980*t4589 + t1956*t4608 + t6741 + t6744 + t6834 + t6835))*var2[4] + (t4249*t5987 + t4532*t5996 + t1076*(-1.*t1648*t4420 - 1.*t1653*t4440 - 1.*t1376*t4541 - 1.*t1348*t4545 + t6722 + t6725) + t1640*(t1348*t4408 + t1376*t4413 + t1363*t4420 + t1321*t4440 + t6741 + t6744))*var2[5] + (0.15121*t4330 - 0.15121*t4376 + t4249*t5900 + t4532*t5912 + t1076*(-1.*t1051*t4114 - 1.*t4162*t534 - 1.*t4230*t567 + t6722 + t6725 - 1.*t4078*t995) + t1640*(t1014*t4162 + t1051*t4179 + t6741 + t6744 + t4230*t758 + t4128*t995))*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t3935*var2[0] + (t1817*t3836 - 1.*t1795*t4018)*var2[1] + (t1795*t3836 + t1817*t4018)*var2[2] + (t3973*t6126 + t3758*t6134 + t2120*(-1.*t2132*t3758 - 1.*t2164*t3786 - 1.*t1672*t3953 - 1.*t1824*t3961 + t6642 + t6646) + t1672*(t2120*t3953 + t2144*t3961 + t2132*t3973 + t2164*t3998 + t6659 + t6665))*var2[3] + (t3885*t6059 + t3773*t6065 + t1989*(-1.*t1980*t3750 - 1.*t1661*t3849 + t6476 + t6479 + t6642 + t6646) + t1804*(t1956*t3849 + t1980*t3868 + t6490 + t6501 + t6659 + t6665))*var2[4] + (t3406*t5987 + t3713*t5996 + t1076*(-1.*t1653*t3617 - 1.*t1648*t3624 - 1.*t1376*t3728 - 1.*t1348*t3744 + t6476 + t6479) + t1640*(t1321*t3617 + t1363*t3624 + t1348*t3631 + t1376*t3648 + t6490 + t6501))*var2[5] + (-0.15121*t3431 + 0.15121*t3453 + t3406*t5900 + t3713*t5912 + t1076*(-1.*t1051*t3104 - 1.*t3322*t534 - 1.*t3299*t567 + t6476 + t6479 - 1.*t3072*t995) + t1640*(t1014*t3322 + t1051*t3393 + t6490 + t6501 + t3299*t758 + t3382*t995))*var2[15] + (-0.038749*t3142 + 0.281211*t3183 + 1.e-6*(-6.5e-11*t290 - 7.e-6*t3185 + 4.e-6*t3214) - 1.*t3341*t5953 - 1.*t3052*t5964 - 1.*t526*t6536 + 4.e-6*(-1.*t3379*t5953 - 1.*t3046*t5964 - 1.*t450*t6536 - 1.*t6558*t714) - 1.*t6558*t740 + 7.e-6*(t3360*t5953 + t3065*t5964 + t311*t6536 + t6558*t754))*var2[16])*var2[17] + t2100*var3[0] + t6096*var3[1] + t6081*var3[2] + t6140*var3[3] + t6069*var3[4] + t6001*var3[5] + t5925*var3[15] + t5981*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void ddh_RrFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
