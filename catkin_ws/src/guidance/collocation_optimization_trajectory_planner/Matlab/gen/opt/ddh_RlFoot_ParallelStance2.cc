/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:22 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t818;
  double t871;
  double t889;
  double t711;
  double t726;
  double t766;
  double t1001;
  double t1025;
  double t775;
  double t890;
  double t905;
  double t1040;
  double t1062;
  double t1081;
  double t767;
  double t1200;
  double t1222;
  double t1276;
  double t1282;
  double t1334;
  double t1428;
  double t1485;
  double t1601;
  double t1699;
  double t1710;
  double t1712;
  double t1721;
  double t1365;
  double t1375;
  double t2462;
  double t2237;
  double t2243;
  double t2510;
  double t2936;
  double t2117;
  double t2185;
  double t3315;
  double t2892;
  double t789;
  double t3036;
  double t3076;
  double t3093;
  double t3112;
  double t2865;
  double t2648;
  double t3329;
  double t3381;
  double t3402;
  double t3425;
  double t2730;
  double t2774;
  double t3081;
  double t3128;
  double t3165;
  double t2611;
  double t2625;
  double t3272;
  double t3289;
  double t3298;
  double t3330;
  double t3343;
  double t2897;
  double t3422;
  double t3433;
  double t3435;
  double t1395;
  double t3496;
  double t3530;
  double t3531;
  double t3541;
  double t3559;
  double t3571;
  double t3572;
  double t3573;
  double t3582;
  double t3584;
  double t3587;
  double t3594;
  double t3606;
  double t3608;
  double t3610;
  double t3641;
  double t3645;
  double t3680;
  double t3718;
  double t3727;
  double t3748;
  double t3753;
  double t3800;
  double t3801;
  double t3847;
  double t3855;
  double t3880;
  double t3885;
  double t3892;
  double t3899;
  double t3906;
  double t3908;
  double t1134;
  double t1197;
  double t1414;
  double t800;
  double t4022;
  double t3510;
  double t3989;
  double t3990;
  double t3999;
  double t4010;
  double t2653;
  double t2661;
  double t2832;
  double t2877;
  double t2966;
  double t3004;
  double t3462;
  double t3482;
  double t3502;
  double t3506;
  double t3516;
  double t3517;
  double t3590;
  double t3754;
  double t3948;
  double t3960;
  double t2698;
  double t2879;
  double t3005;
  double t3006;
  double t4015;
  double t4020;
  double t4039;
  double t4048;
  double t4093;
  double t4148;
  double t4161;
  double t4163;
  double t4197;
  double t4204;
  double t4280;
  double t4281;
  double t4292;
  double t4297;
  double t4298;
  double t4307;
  double t4357;
  double t4376;
  double t4388;
  double t4393;
  double t1106;
  double t1358;
  double t1750;
  double t2014;
  double t2032;
  double t2210;
  double t2393;
  double t2521;
  double t2595;
  double t2609;
  double t3200;
  double t3354;
  double t3439;
  double t3461;
  double t3964;
  double t4243;
  double t4258;
  double t4265;
  double t4271;
  double t4272;
  double t4405;
  double t4408;
  double t4460;
  double t4463;
  double t4471;
  double t4475;
  double t4535;
  double t4549;
  double t4574;
  double t4575;
  double t4675;
  double t4679;
  double t4702;
  double t4766;
  double t4779;
  double t4791;
  double t4792;
  double t4878;
  double t4890;
  double t4892;
  double t4897;
  double t4918;
  double t4923;
  double t4926;
  double t4943;
  double t4804;
  double t4810;
  double t4826;
  double t4833;
  double t4861;
  double t4906;
  double t4988;
  double t4989;
  double t5000;
  double t5004;
  double t5028;
  double t5045;
  double t5070;
  double t5074;
  double t5081;
  double t5092;
  double t641;
  double t444;
  double t450;
  double t468;
  double t662;
  double t610;
  double t5287;
  double t5313;
  double t5330;
  double t5368;
  double t5433;
  double t5438;
  double t5439;
  double t5206;
  double t5231;
  double t5286;
  double t5376;
  double t5378;
  double t5379;
  double t5382;
  double t5456;
  double t5605;
  double t5641;
  double t5660;
  double t5665;
  double t5752;
  double t5753;
  double t5878;
  double t5935;
  double t5937;
  double t5940;
  double t5987;
  double t5991;
  double t5999;
  double t399;
  double t434;
  double t6340;
  double t6198;
  double t6501;
  double t6550;
  double t6604;
  double t6870;
  double t6894;
  double t6901;
  double t7461;
  double t7462;
  double t7478;
  double t7481;
  double t7532;
  double t7550;
  double t7563;
  double t7586;
  double t7645;
  double t7653;
  double t7665;
  double t7697;
  double t7710;
  double t7740;
  double t7748;
  double t7768;
  double t6977;
  double t7027;
  double t7047;
  double t7052;
  double t7168;
  double t7173;
  double t7180;
  double t7182;
  double t7200;
  double t7219;
  double t7243;
  double t7255;
  double t8266;
  double t8289;
  double t8293;
  double t8297;
  double t8299;
  double t8301;
  double t8315;
  double t8327;
  double t8330;
  double t8334;
  double t8338;
  double t8347;
  double t8350;
  double t8352;
  double t8389;
  double t8395;
  double t8457;
  double t8374;
  double t8377;
  double t8383;
  double t8357;
  double t8360;
  double t8362;
  double t8474;
  double t8554;
  double t8576;
  double t8363;
  double t8365;
  double t8371;
  double t8387;
  double t8587;
  double t8606;
  double t8628;
  double t8649;
  double t8669;
  double t8670;
  double t8672;
  double t8673;
  double t8677;
  double t8679;
  double t8681;
  double t8747;
  double t8762;
  double t8765;
  double t8739;
  double t8740;
  double t8745;
  double t8766;
  double t8769;
  double t8770;
  double t8787;
  double t8796;
  double t8802;
  double t8776;
  double t8781;
  double t8783;
  double t8784;
  double t8806;
  double t8807;
  double t8809;
  double t8820;
  double t8821;
  double t8823;
  double t8826;
  double t8828;
  double t8830;
  double t8832;
  double t8833;
  double t8838;
  double t8840;
  double t8842;
  double t8843;
  double t8846;
  double t8871;
  double t9148;
  double t9153;
  double t9159;
  double t9169;
  double t9171;
  double t9172;
  double t9180;
  double t9181;
  double t9038;
  double t9047;
  double t9074;
  double t8850;
  double t8851;
  double t8853;
  double t9306;
  double t9310;
  double t9325;
  double t9329;
  double t9331;
  double t9269;
  double t9271;
  double t9369;
  double t9377;
  double t9378;
  double t9340;
  double t9361;
  double t9349;
  double t9357;
  double t9358;
  double t9383;
  double t9399;
  double t9384;
  double t9392;
  double t9393;
  double t9507;
  double t9509;
  double t9576;
  double t9577;
  double t9582;
  double t9575;
  double t9585;
  double t9563;
  double t9567;
  double t9615;
  double t9627;
  double t9601;
  double t9602;
  double t9922;
  double t9846;
  double t9848;
  double t9861;
  double t9869;
  double t9899;
  double t9947;
  double t9990;
  double t10005;
  double t10008;
  double t10017;
  double t10026;
  double t10128;
  double t10204;
  double t10049;
  double t10072;
  double t10120;
  double t10133;
  double t10135;
  double t10145;
  double t10154;
  double t10155;
  double t10157;
  double t10159;
  double t10161;
  double t10169;
  double t10178;
  double t10183;
  double t10227;
  double t10232;
  double t10235;
  double t10248;
  double t10250;
  double t10254;
  double t10257;
  double t10269;
  double t10272;
  double t10273;
  double t10289;
  double t10292;
  double t10295;
  double t10296;
  double t10298;
  double t10369;
  double t10371;
  double t10373;
  double t10390;
  double t10392;
  double t10393;
  double t10395;
  double t10417;
  double t10419;
  double t10422;
  double t10165;
  double t10256;
  double t10299;
  double t10300;
  double t10332;
  double t10334;
  double t10337;
  double t10338;
  double t10352;
  double t10354;
  double t10357;
  double t10363;
  double t10462;
  double t10465;
  double t10468;
  double t10470;
  double t10471;
  double t10473;
  double t10474;
  double t10485;
  double t10487;
  double t10489;
  double t10491;
  double t10427;
  double t10432;
  double t10433;
  double t10439;
  double t10567;
  double t10568;
  double t10569;
  double t10570;
  double t10571;
  double t10573;
  double t10578;
  double t10583;
  double t10596;
  double t10606;
  double t10609;
  double t10614;
  double t10623;
  double t10624;
  double t10344;
  double t10444;
  double t10445;
  double t10446;
  double t10447;
  double t10448;
  double t10391;
  double t10413;
  double t10423;
  double t10424;
  double t10459;
  double t10493;
  double t10696;
  double t10716;
  double t10720;
  double t10728;
  double t10732;
  double t10738;
  double t10469;
  double t10472;
  double t10476;
  double t10477;
  double t10494;
  double t10495;
  double t10500;
  double t10502;
  double t9918;
  double t10000;
  double t10030;
  double t10031;
  double t10037;
  double t10038;
  double t10039;
  double t10041;
  double t10911;
  double t10912;
  double t10913;
  double t10906;
  double t10907;
  double t10908;
  double t10901;
  double t10902;
  double t10903;
  double t10904;
  double t10909;
  double t10914;
  double t10916;
  double t10920;
  double t10921;
  double t10923;
  double t10925;
  double t10926;
  double t10927;
  double t10755;
  double t10756;
  double t10757;
  double t10750;
  double t10751;
  double t10752;
  double t11079;
  double t11080;
  double t11084;
  double t11104;
  double t11106;
  double t11107;
  double t10796;
  double t10843;
  double t10845;
  double t10766;
  double t10768;
  double t10770;
  double t11158;
  double t11239;
  double t11263;
  double t11114;
  double t11115;
  double t11116;
  double t11108;
  double t11121;
  double t11110;
  double t11111;
  double t11112;
  double t11129;
  double t11264;
  double t11271;
  double t11272;
  double t11273;
  double t11276;
  double t11280;
  double t11282;
  double t11130;
  double t11133;
  double t11153;
  double t11308;
  double t11309;
  double t11312;
  double t11289;
  double t11291;
  double t11292;
  double t11328;
  double t11329;
  double t11368;
  double t11461;
  double t11483;
  double t11484;
  double t11585;
  double t11593;
  double t11597;
  double t11599;
  double t11581;
  double t11583;
  double t11588;
  double t11606;
  double t11608;
  double t11612;
  double t11613;
  double t11574;
  double t11575;
  double t11569;
  double t11571;
  double t11649;
  double t11592;
  double t11598;
  double t11602;
  double t11603;
  double t11627;
  double t11631;
  double t11632;
  double t11633;
  double t11635;
  double t11637;
  double t11638;
  double t11640;
  double t11641;
  double t11650;
  double t11651;
  double t11652;
  double t11653;
  double t11654;
  double t11655;
  double t11656;
  double t11657;
  double t11658;
  double t11660;
  double t11661;
  double t11662;
  double t11663;
  double t11667;
  double t11668;
  double t11777;
  double t11814;
  double t11863;
  double t11626;
  double t11659;
  double t11644;
  double t11645;
  double t11646;
  double t11647;
  double t11617;
  double t11618;
  double t11621;
  double t11622;
  double t11892;
  double t11899;
  double t11894;
  double t11895;
  double t11896;
  double t11897;
  double t11882;
  double t11887;
  double t11889;
  double t11890;
  double t11994;
  double t11995;
  double t11998;
  double t12002;
  double t12005;
  double t12006;
  double t11572;
  double t11573;
  double t11576;
  double t11577;
  double t11580;
  double t11584;
  double t11589;
  double t11590;
  double t12049;
  double t12051;
  double t12052;
  double t12045;
  double t12046;
  double t12047;
  double t12039;
  double t12040;
  double t12041;
  double t12043;
  double t12048;
  double t12053;
  double t12054;
  double t12060;
  double t12061;
  double t12063;
  double t12066;
  double t12068;
  double t12069;
  double t12010;
  double t12011;
  double t12012;
  double t12015;
  double t12017;
  double t12018;
  double t11970;
  double t11974;
  double t11976;
  double t11989;
  double t11991;
  double t11992;
  double t12085;
  double t12086;
  double t12087;
  double t12081;
  double t12082;
  double t12083;
  double t12097;
  double t12099;
  double t12100;
  double t12105;
  double t12108;
  double t12109;
  double t12114;
  double t12115;
  double t12117;
  double t12089;
  double t12090;
  double t12091;
  double t12093;
  double t12101;
  double t12269;
  double t12270;
  double t12273;
  double t12181;
  double t12220;
  double t12265;
  double t12266;
  double t12267;
  double t12282;
  double t12289;
  double t12314;
  double t12322;
  double t12328;
  double t12333;
  double t12368;
  double t12369;
  double t12370;
  double t12371;
  double t12372;
  double t12373;
  double t12378;
  double t12379;
  double t12380;
  double t12381;
  double t12382;
  double t12383;
  double t12384;
  double t12414;
  double t12415;
  double t12416;
  double t12417;
  double t12420;
  double t12421;
  double t12422;
  double t12423;
  double t12397;
  double t12399;
  double t12409;
  double t12410;
  double t12411;
  double t12412;
  double t12413;
  double t12418;
  double t12424;
  double t12425;
  double t12426;
  double t12427;
  double t12428;
  double t12429;
  double t12430;
  double t12431;
  double t12432;
  double t12436;
  double t12442;
  double t12443;
  double t12444;
  double t12446;
  double t12449;
  double t12452;
  double t12453;
  double t12454;
  double t12456;
  double t6197;
  double t683;
  double t6284;
  double t6498;
  double t12460;
  double t12461;
  double t12462;
  double t12464;
  double t12465;
  double t12466;
  double t6804;
  double t12478;
  double t12479;
  double t12480;
  double t12483;
  double t12484;
  double t12485;
  double t12488;
  double t12489;
  double t12491;
  double t12493;
  double t12494;
  double t12495;
  double t12496;
  double t12497;
  double t12498;
  double t6960;
  double t12470;
  double t12471;
  double t12472;
  double t12474;
  double t12475;
  double t12476;
  double t7159;
  double t7187;
  double t12554;
  double t12555;
  double t12556;
  double t12557;
  double t12558;
  double t12559;
  double t12560;
  double t12564;
  double t12570;
  double t12503;
  double t12504;
  double t12507;
  double t12511;
  double t12513;
  double t12514;
  double t12516;
  double t12521;
  double t12523;
  double t12528;
  double t12529;
  double t12530;
  double t12688;
  double t12690;
  double t12694;
  double t12747;
  double t12943;
  double t12946;
  double t12969;
  double t12971;
  double t11520;
  double t11521;
  double t11522;
  double t11492;
  double t11498;
  double t11503;
  double t13332;
  double t13333;
  double t13334;
  double t13335;
  double t13336;
  double t13337;
  double t13338;
  double t13368;
  double t13370;
  double t13371;
  double t13372;
  double t13373;
  double t13374;
  double t13375;
  double t13135;
  double t13138;
  double t13289;
  double t13301;
  double t11314;
  double t11315;
  double t11316;
  double t13423;
  double t13425;
  double t11296;
  double t11299;
  double t11301;
  double t10905;
  double t10917;
  double t10918;
  double t13431;
  double t13434;
  double t13659;
  double t13666;
  double t13672;
  double t13675;
  double t12346;
  double t12348;
  double t12349;
  double t12044;
  double t12056;
  double t12058;
  double t13768;
  double t13769;
  double t12278;
  double t12279;
  double t12280;
  double t13774;
  double t13775;
  double t13811;
  double t13812;
  double t13813;
  double t13814;
  double t13815;
  double t13816;
  double t13817;
  double t13818;
  double t13819;
  double t13820;
  double t13821;
  double t13822;
  double t13823;
  double t13833;
  double t13838;
  double t13839;
  double t13840;
  double t13843;
  double t13846;
  double t13847;
  double t13848;
  double t13826;
  double t13827;
  double t13828;
  double t13829;
  double t13830;
  double t13832;
  double t13841;
  double t13849;
  double t13850;
  double t13851;
  double t13852;
  double t13853;
  double t13854;
  double t13855;
  double t13856;
  double t13857;
  double t13858;
  double t13861;
  double t13862;
  double t13863;
  double t13864;
  double t13865;
  double t13866;
  double t13867;
  double t13868;
  double t13869;
  double t13872;
  double t13873;
  double t13874;
  double t13876;
  double t13877;
  double t13899;
  double t14057;
  double t14058;
  double t14059;
  double t14062;
  double t14063;
  double t14064;
  double t14068;
  double t14069;
  double t14070;
  double t14071;
  double t14076;
  double t14078;
  double t14079;
  double t14098;
  double t14102;
  double t14034;
  double t14041;
  double t14047;
  double t14051;
  double t14053;
  double t14055;
  double t14164;
  double t14168;
  double t14169;
  double t14170;
  double t14172;
  double t14173;
  double t14174;
  double t14175;
  double t14176;
  double t14132;
  double t14139;
  double t14140;
  double t14142;
  double t14144;
  double t14145;
  double t14146;
  double t14147;
  double t14149;
  double t14150;
  double t14151;
  double t14154;
  double t14240;
  double t14243;
  double t14250;
  double t14253;
  double t14293;
  double t14295;
  double t14299;
  double t14301;
  double t14396;
  double t14397;
  double t14398;
  double t14399;
  double t14400;
  double t14402;
  double t14403;
  double t14406;
  double t14407;
  double t14408;
  double t14409;
  double t14410;
  double t14411;
  double t14412;
  double t14369;
  double t14372;
  double t14378;
  double t14382;
  double t14456;
  double t14459;
  double t14466;
  double t14469;
  double t14497;
  double t14500;
  double t14505;
  double t14508;
  double t14542;
  double t14543;
  double t14548;
  double t14549;
  t818 = Cos(var1[14]);
  t871 = -1.*t818;
  t889 = 1. + t871;
  t711 = Cos(var1[13]);
  t726 = -1.*t711;
  t766 = 1. + t726;
  t1001 = Sin(var1[14]);
  t1025 = 4.e-6*t1001;
  t775 = Sin(var1[13]);
  t890 = 1.000000000016*t889;
  t905 = -7.e-6*t889;
  t1040 = t905 + t1025;
  t1062 = -7.e-6*t1040;
  t1081 = -1. + t890 + t1062;
  t767 = -7.e-6*t766;
  t1200 = -6.5e-11*t889;
  t1222 = 1. + t1200;
  t1276 = -7.e-6*t1222;
  t1282 = 7.e-6*t889;
  t1334 = t1276 + t1282 + t1025;
  t1428 = -2.8e-11*t889;
  t1485 = -1. + t818;
  t1601 = 4.e-6*t1485;
  t1699 = -7.e-6*t1001;
  t1710 = t1601 + t1699;
  t1712 = -7.e-6*t1710;
  t1721 = t1428 + t1712 + t1001;
  t1365 = -1. + t711;
  t1375 = 4.e-6*t1365;
  t2462 = 2.8e-11*t766;
  t2237 = 4.e-6*t775;
  t2243 = t767 + t2237;
  t2510 = t2462 + t775;
  t2936 = 2.8e-11*t889;
  t2117 = -1.000000000016*t766;
  t2185 = 1. + t2117;
  t3315 = -1.*t1001;
  t2892 = -1.*t775;
  t789 = -4.e-6*t775;
  t3036 = 4.e-6*t889;
  t3076 = t3036 + t1699;
  t3093 = -4.e-6*t1001;
  t3112 = t905 + t3093;
  t2865 = 7.e-6*t1001;
  t2648 = -1.000000000049*t889;
  t3329 = t2936 + t3315;
  t3381 = -1.000000000016*t889;
  t3402 = 1. + t3381;
  t3425 = t1428 + t3315;
  t2730 = -7.e-6*t775;
  t2774 = t1375 + t2730;
  t3081 = 4.e-6*t3076;
  t3128 = -7.e-6*t3112;
  t3165 = 1. + t1200 + t3081 + t3128;
  t2611 = -1.000000000049*t766;
  t2625 = 1. + t2611;
  t3272 = 1.000000000049*t889;
  t3289 = -1. + t3272;
  t3298 = 4.e-6*t3289;
  t3330 = -7.e-6*t3329;
  t3343 = t3298 + t1601 + t3330 + t1699;
  t2897 = t2462 + t2892;
  t3422 = -7.e-6*t3402;
  t3433 = 4.e-6*t3425;
  t3435 = t3422 + t905 + t3433 + t1025;
  t1395 = 7.e-6*t775;
  t3496 = -2.8e-11*t766;
  t3530 = -2.598649999999999e-7*var1[14];
  t3531 = 0.148705*t1222;
  t3541 = -2.3905277499999995e-16*t889;
  t3559 = -0.038922999986*t3076;
  t3571 = -0.80315*t3112;
  t3572 = t1282 + t1025;
  t3573 = -0.503149000008*t3572;
  t3582 = t1601 + t2865;
  t3584 = -0.038924*t3582;
  t3587 = t3530 + t3531 + t3541 + t3559 + t3571 + t3573 + t3584;
  t3594 = 1.0394599999999997e-12*var1[14];
  t3606 = 1. + t2648;
  t3608 = -0.038924*t3606;
  t3610 = -0.03892299998790722*t889;
  t3641 = -0.80315*t3329;
  t3645 = 0.148705*t1710;
  t3680 = t3036 + t2865;
  t3718 = -3.6777349999999994e-6*t3680;
  t3727 = t1428 + t1001;
  t3748 = -0.503149000008*t3727;
  t3753 = t3594 + t3608 + t3610 + t3641 + t3645 + t3718 + t3748;
  t3800 = 1.8190549999999993e-12*var1[14];
  t3801 = -0.80315*t3402;
  t3847 = -0.5031490000160505*t889;
  t3855 = -0.038922999986*t3425;
  t3880 = t1282 + t3093;
  t3885 = -3.6777349999999994e-6*t3880;
  t3892 = 0.148705*t1040;
  t3899 = t2936 + t1001;
  t3906 = -0.038924*t3899;
  t3908 = t3800 + t3801 + t3847 + t3855 + t3885 + t3892 + t3906;
  t1134 = -6.5e-11*t766;
  t1197 = 1. + t1134;
  t1414 = t1375 + t1395;
  t800 = t767 + t789;
  t4022 = 4.e-6*t766;
  t3510 = 7.e-6*t766;
  t3989 = t2774*t3165;
  t3990 = t2625*t3343;
  t3999 = t2897*t3435;
  t4010 = t3989 + t3990 + t3999;
  t2653 = 4.e-6*t1710;
  t2661 = 1. + t2648 + t2653;
  t2832 = 4.e-6*t1222;
  t2877 = t2832 + t1601 + t2865;
  t2966 = 4.e-6*t1040;
  t3004 = t2936 + t2966 + t1001;
  t3462 = 1.0248489999999998e-12*var1[13];
  t3482 = -0.28120900000849935*t766;
  t3502 = t3496 + t2892;
  t3506 = -0.038748999993*t3502;
  t3516 = t3510 + t789;
  t3517 = -2.123459e-6*t3516;
  t3590 = t2243*t3587;
  t3754 = t2510*t3753;
  t3948 = t2185*t3908;
  t3960 = t3462 + t3482 + t3506 + t3517 + t3590 + t3754 + t3948;
  t2698 = t2625*t2661;
  t2879 = t2774*t2877;
  t3005 = t2897*t3004;
  t3006 = t2698 + t2879 + t3005;
  t4015 = 5.856279999999999e-13*var1[13];
  t4020 = -0.0387489999948987*t766;
  t4039 = t4022 + t1395;
  t4048 = -2.123459e-6*t4039;
  t4093 = t3496 + t775;
  t4148 = -0.281209000004*t4093;
  t4161 = t2774*t3587;
  t4163 = t2625*t3753;
  t4197 = t2897*t3908;
  t4204 = t4015 + t4020 + t4048 + t4148 + t4161 + t4163 + t4197;
  t4280 = -1.4640699999999997e-7*var1[13];
  t4281 = -1.38024835e-16*t766;
  t4292 = t4022 + t2730;
  t4297 = -0.038748999993*t4292;
  t4298 = t3510 + t2237;
  t4307 = -0.281209000004*t4298;
  t4357 = t1197*t3587;
  t4376 = t1414*t3753;
  t4388 = t800*t3908;
  t4393 = t4280 + t4281 + t4297 + t4307 + t4357 + t4376 + t4388;
  t1106 = t800*t1081;
  t1358 = t1197*t1334;
  t1750 = t1414*t1721;
  t2014 = t1106 + t1358 + t1750;
  t2032 = 0.15121*t2014;
  t2210 = t2185*t1081;
  t2393 = t2243*t1334;
  t2521 = t2510*t1721;
  t2595 = t2210 + t2393 + t2521;
  t2609 = 0.15121*t2595;
  t3200 = t2243*t3165;
  t3354 = t2510*t3343;
  t3439 = t2185*t3435;
  t3461 = t3200 + t3354 + t3439;
  t3964 = t3461*t3960;
  t4243 = t4010*t4204;
  t4258 = t1197*t3165;
  t4265 = t1414*t3343;
  t4271 = t800*t3435;
  t4272 = t4258 + t4265 + t4271;
  t4405 = t4272*t4393;
  t4408 = t3964 + t4243 + t4405;
  t4460 = t3006*t4408;
  t4463 = t2510*t2661;
  t4471 = t2243*t2877;
  t4475 = t2185*t3004;
  t4535 = t4463 + t4471 + t4475;
  t4549 = -1.*t4535*t3960;
  t4574 = -1.*t3006*t4204;
  t4575 = t1414*t2661;
  t4675 = t1197*t2877;
  t4679 = t800*t3004;
  t4702 = t4575 + t4675 + t4679;
  t4766 = -1.*t4702*t4393;
  t4779 = t4549 + t4574 + t4766;
  t4791 = t4010*t4779;
  t4792 = t2032 + t2609 + t4460 + t4791;
  t4878 = t3165*t3587;
  t4890 = t3343*t3753;
  t4892 = t3435*t3908;
  t4897 = t4878 + t4890 + t4892;
  t4918 = -1.*t3587*t2877;
  t4923 = -1.*t2661*t3753;
  t4926 = -1.*t3004*t3908;
  t4943 = t4918 + t4923 + t4926;
  t4804 = 0.038749*t1081;
  t4810 = 7.e-6*t1222;
  t4826 = t4810 + t905 + t3093;
  t4833 = 1.e-6*t4826;
  t4861 = -0.281209*t1721;
  t4906 = t2877*t4897;
  t4988 = t3165*t4943;
  t4989 = -1.*t2661*t4897;
  t5000 = -1.*t3343*t4943;
  t5004 = t4989 + t5000;
  t5028 = 4.e-6*t5004;
  t5045 = t3004*t4897;
  t5070 = t3435*t4943;
  t5074 = t5045 + t5070;
  t5081 = -7.e-6*t5074;
  t5092 = t4804 + t4833 + t4861 + t4906 + t4988 + t5028 + t5081;
  t641 = Sin(var1[12]);
  t444 = Cos(var1[12]);
  t450 = -1.*t444;
  t468 = 1. + t450;
  t662 = 0.15121*t641;
  t610 = -0.15121*t468;
  t5287 = 0.15121*t468;
  t5313 = t641*t3960;
  t5330 = t444*t4393;
  t5368 = t5287 + t662 + t5313 + t5330;
  t5433 = t444*t3960;
  t5438 = -1.*t641*t4393;
  t5439 = t610 + t662 + t5433 + t5438;
  t5206 = t641*t3461;
  t5231 = t444*t4272;
  t5286 = t5206 + t5231;
  t5376 = t5286*t5368;
  t5378 = t444*t3461;
  t5379 = -1.*t641*t4272;
  t5382 = t5378 + t5379;
  t5456 = t5382*t5439;
  t5605 = t4243 + t5376 + t5456;
  t5641 = t3006*t5605;
  t5660 = t641*t4535;
  t5665 = t444*t4702;
  t5752 = t5660 + t5665;
  t5753 = -1.*t5752*t5368;
  t5878 = t444*t4535;
  t5935 = -1.*t641*t4702;
  t5937 = t5878 + t5935;
  t5940 = -1.*t5937*t5439;
  t5987 = t4574 + t5753 + t5940;
  t5991 = t4010*t5987;
  t5999 = t5641 + t5991;
  t399 = Cos(var1[4]);
  t434 = Cos(var1[5]);
  t6340 = Sin(var1[5]);
  t6198 = Sin(var1[4]);
  t6501 = -1.*t399*t434*t641;
  t6550 = -1.*t444*t399*t6340;
  t6604 = t6501 + t6550;
  t6870 = t444*t399*t434;
  t6894 = -1.*t399*t641*t6340;
  t6901 = t6870 + t6894;
  t7461 = t2897*t1081;
  t7462 = t2774*t1334;
  t7478 = t2625*t1721;
  t7481 = t7461 + t7462 + t7478;
  t7532 = t7481*t6198;
  t7550 = -1.*t641*t2014;
  t7563 = t444*t2595;
  t7586 = t7550 + t7563;
  t7645 = t434*t7586;
  t7653 = t444*t2014;
  t7665 = t641*t2595;
  t7697 = t7653 + t7665;
  t7710 = -1.*t7697*t6340;
  t7740 = t7645 + t7710;
  t7748 = t399*t7740;
  t7768 = t7532 + t7748;
  t6977 = t2897*t6198;
  t7027 = t800*t6604;
  t7047 = t2185*t6901;
  t7052 = t6977 + t7027 + t7047;
  t7168 = t2774*t6198;
  t7173 = t1197*t6604;
  t7180 = t2243*t6901;
  t7182 = t7168 + t7173 + t7180;
  t7200 = t2625*t6198;
  t7219 = t1414*t6604;
  t7243 = t2510*t6901;
  t7255 = t7200 + t7219 + t7243;
  t8266 = Sin(var1[3]);
  t8289 = t434*t7697;
  t8293 = t7586*t6340;
  t8297 = t8289 + t8293;
  t8299 = t8266*t8297;
  t8301 = Cos(var1[3]);
  t8315 = t399*t7481;
  t8327 = -1.*t6198*t7740;
  t8330 = t8315 + t8327;
  t8334 = t8301*t8330;
  t8338 = t8299 + t8334;
  t8347 = t8301*t8297;
  t8350 = -1.*t8266*t8330;
  t8352 = t8347 + t8350;
  t8389 = t434*t5286;
  t8395 = t5382*t6340;
  t8457 = t8389 + t8395;
  t8374 = t434*t5439;
  t8377 = -1.*t5368*t6340;
  t8383 = t8374 + t8377;
  t8357 = t434*t5752;
  t8360 = t5937*t6340;
  t8362 = t8357 + t8360;
  t8474 = t434*t5368;
  t8554 = t5439*t6340;
  t8576 = t8474 + t8554;
  t8363 = t434*t5382;
  t8365 = -1.*t5286*t6340;
  t8371 = t8363 + t8365;
  t8387 = t8371*t8383;
  t8587 = t8457*t8576;
  t8606 = t4243 + t8387 + t8587;
  t8628 = t8362*t8606;
  t8649 = t434*t5937;
  t8669 = -1.*t5752*t6340;
  t8670 = t8649 + t8669;
  t8672 = -1.*t8670*t8383;
  t8673 = -1.*t8362*t8576;
  t8677 = t4574 + t8672 + t8673;
  t8679 = t8457*t8677;
  t8681 = t8628 + t8679;
  t8747 = t4010*t6198;
  t8762 = t399*t8371;
  t8765 = t8747 + t8762;
  t8739 = t3006*t6198;
  t8740 = t399*t8670;
  t8745 = t8739 + t8740;
  t8766 = t4204*t6198;
  t8769 = t399*t8383;
  t8770 = t8766 + t8769;
  t8787 = t399*t4204;
  t8796 = -1.*t6198*t8383;
  t8802 = t8787 + t8796;
  t8776 = t8765*t8770;
  t8781 = t399*t4010;
  t8783 = -1.*t6198*t8371;
  t8784 = t8781 + t8783;
  t8806 = t8784*t8802;
  t8807 = t8587 + t8776 + t8806;
  t8809 = t8745*t8807;
  t8820 = -1.*t8745*t8770;
  t8821 = t399*t3006;
  t8823 = -1.*t6198*t8670;
  t8826 = t8821 + t8823;
  t8828 = -1.*t8826*t8802;
  t8830 = t8673 + t8820 + t8828;
  t8832 = t8765*t8830;
  t8833 = t8809 + t8832;
  t8838 = 0.15121*t444;
  t8840 = -0.15121*t641;
  t8842 = -1.*t641*t3960;
  t8843 = -1.*t444*t4393;
  t8846 = t8838 + t8840 + t8842 + t8843;
  t8871 = t8838 + t662 + t5433 + t5438;
  t9148 = -1.*t444*t2014;
  t9153 = -1.*t641*t2595;
  t9159 = t9148 + t9153;
  t9169 = t434*t9159;
  t9171 = -1.*t7586*t6340;
  t9172 = t9169 + t9171;
  t9180 = t9159*t6340;
  t9181 = t7645 + t9180;
  t9038 = -1.*t641*t4535;
  t9047 = -1.*t444*t4702;
  t9074 = t9038 + t9047;
  t8850 = -1.*t641*t3461;
  t8851 = -1.*t444*t4272;
  t8853 = t8850 + t8851;
  t9306 = t8853*t6340;
  t9310 = t8363 + t9306;
  t9325 = t434*t8871;
  t9329 = t8846*t6340;
  t9331 = t9325 + t9329;
  t9269 = t9074*t6340;
  t9271 = t8649 + t9269;
  t9369 = t434*t8846;
  t9377 = -1.*t8871*t6340;
  t9378 = t9369 + t9377;
  t9340 = t8457*t9331;
  t9361 = t9310*t8576;
  t9349 = t434*t8853;
  t9357 = -1.*t5382*t6340;
  t9358 = t9349 + t9357;
  t9383 = -1.*t8362*t9331;
  t9399 = -1.*t9271*t8576;
  t9384 = t434*t9074;
  t9392 = -1.*t5937*t6340;
  t9393 = t9384 + t9392;
  t9507 = -1.*t434*t7697;
  t9509 = t9507 + t9171;
  t9576 = -1.*t434*t5368;
  t9577 = -1.*t5439*t6340;
  t9582 = t9576 + t9577;
  t9575 = t8457*t8383;
  t9585 = t8371*t8576;
  t9563 = -1.*t434*t5286;
  t9567 = t9563 + t9357;
  t9615 = -1.*t8362*t8383;
  t9627 = -1.*t8670*t8576;
  t9601 = -1.*t434*t5752;
  t9602 = t9601 + t9392;
  t9922 = 4.e-6*t818;
  t9846 = -7.e-6*t818;
  t9848 = t9846 + t3093;
  t9861 = -7.e-6*t9848;
  t9869 = -2.8e-11*t1001;
  t9899 = t818 + t9861 + t9869;
  t9947 = 7.000000000455e-6*t1001;
  t9990 = t9922 + t9947;
  t10005 = t9922 + t1699;
  t10008 = -7.e-6*t10005;
  t10017 = 1.000000000016*t1001;
  t10026 = t10008 + t10017;
  t10128 = 7.e-6*t818;
  t10204 = 2.8e-11*t1001;
  t10049 = -4.e-6*t818;
  t10072 = t10049 + t1699;
  t10120 = -0.80315*t10072;
  t10133 = t10128 + t3093;
  t10135 = -0.038924*t10133;
  t10145 = t9846 + t1025;
  t10154 = -0.038922999986*t10145;
  t10155 = t9922 + t2865;
  t10157 = -0.503149000008*t10155;
  t10159 = -9.666064052774999e-12*t1001;
  t10161 = -2.598649999999999e-7 + t10120 + t10135 + t10154 + t10157 + t10159;
  t10169 = 0.148705*t9848;
  t10178 = t818 + t9869;
  t10183 = -0.503149000008*t10178;
  t10227 = t871 + t10204;
  t10232 = -0.80315*t10227;
  t10235 = t10128 + t1025;
  t10248 = -3.6777349999999994e-6*t10235;
  t10250 = 1.0000140000590574e-6*t1001;
  t10254 = 1.0394599999999997e-12 + t10169 + t10183 + t10232 + t10248 + t10250;
  t10257 = 0.148705*t10005;
  t10269 = t871 + t9869;
  t10272 = -0.038922999986*t10269;
  t10273 = t818 + t10204;
  t10289 = -0.038924*t10273;
  t10292 = t10049 + t2865;
  t10295 = -3.6777349999999994e-6*t10292;
  t10296 = 0.30000099999679997*t1001;
  t10298 = 1.8190549999999993e-12 + t10257 + t10272 + t10289 + t10295 + t10296;
  t10369 = -7.e-6*t10072;
  t10371 = 4.e-6*t10145;
  t10373 = -6.5e-11*t1001;
  t10390 = t10369 + t10371 + t10373;
  t10392 = 4.e-6*t10269;
  t10393 = 1.12e-16*t1001;
  t10395 = t9922 + t10392 + t10393;
  t10417 = -7.e-6*t10227;
  t10419 = 1.96e-16*t1001;
  t10422 = t9846 + t10417 + t10419;
  t10165 = t2243*t10161;
  t10256 = t2510*t10254;
  t10299 = t2185*t10298;
  t10300 = t10165 + t10256 + t10299;
  t10332 = t2774*t10161;
  t10334 = t2625*t10254;
  t10337 = t2897*t10298;
  t10338 = t10332 + t10334 + t10337;
  t10352 = t1197*t10161;
  t10354 = t1414*t10254;
  t10357 = t800*t10298;
  t10363 = t10352 + t10354 + t10357;
  t10462 = 4.e-6*t9848;
  t10465 = -1.000000000049*t1001;
  t10468 = t10462 + t10465;
  t10470 = -4.00000000026e-6*t1001;
  t10471 = t10128 + t10470;
  t10473 = 4.e-6*t10005;
  t10474 = t818 + t10473 + t10204;
  t10485 = t2625*t10468;
  t10487 = t2774*t10471;
  t10489 = t2897*t10474;
  t10491 = t10485 + t10487 + t10489;
  t10427 = t2774*t10390;
  t10432 = t2897*t10395;
  t10433 = t2625*t10422;
  t10439 = t10427 + t10432 + t10433;
  t10567 = t3587*t10390;
  t10568 = t3165*t10161;
  t10569 = t3343*t10254;
  t10570 = t3435*t10298;
  t10571 = t10422*t3753;
  t10573 = t10395*t3908;
  t10578 = t10567 + t10568 + t10569 + t10570 + t10571 + t10573;
  t10583 = -1.*t3587*t10471;
  t10596 = -1.*t2661*t10254;
  t10606 = -1.*t10161*t2877;
  t10609 = -1.*t10298*t3004;
  t10614 = -1.*t10468*t3753;
  t10623 = -1.*t10474*t3908;
  t10624 = t10583 + t10596 + t10606 + t10609 + t10614 + t10623;
  t10344 = t4010*t10338;
  t10444 = t10439*t4204;
  t10445 = t1197*t10390;
  t10446 = t800*t10395;
  t10447 = t1414*t10422;
  t10448 = t10445 + t10446 + t10447;
  t10391 = t2243*t10390;
  t10413 = t2185*t10395;
  t10423 = t2510*t10422;
  t10424 = t10391 + t10413 + t10423;
  t10459 = -1.*t10338*t3006;
  t10493 = -1.*t10491*t4204;
  t10696 = t641*t10300;
  t10716 = t444*t10363;
  t10720 = t10696 + t10716;
  t10728 = t444*t10300;
  t10732 = -1.*t641*t10363;
  t10738 = t10728 + t10732;
  t10469 = t2510*t10468;
  t10472 = t2243*t10471;
  t10476 = t2185*t10474;
  t10477 = t10469 + t10472 + t10476;
  t10494 = t1414*t10468;
  t10495 = t1197*t10471;
  t10500 = t800*t10474;
  t10502 = t10494 + t10495 + t10500;
  t9918 = t2510*t9899;
  t10000 = t2243*t9990;
  t10030 = t2185*t10026;
  t10031 = t9918 + t10000 + t10030;
  t10037 = t1414*t9899;
  t10038 = t1197*t9990;
  t10039 = t800*t10026;
  t10041 = t10037 + t10038 + t10039;
  t10911 = t641*t10031;
  t10912 = t444*t10041;
  t10913 = t10911 + t10912;
  t10906 = t444*t10031;
  t10907 = -1.*t641*t10041;
  t10908 = t10906 + t10907;
  t10901 = t2625*t9899;
  t10902 = t2774*t9990;
  t10903 = t2897*t10026;
  t10904 = t10901 + t10902 + t10903;
  t10909 = t434*t10908;
  t10914 = -1.*t10913*t6340;
  t10916 = t10909 + t10914;
  t10920 = t434*t10913;
  t10921 = t10908*t6340;
  t10923 = t10920 + t10921;
  t10925 = t399*t10904;
  t10926 = -1.*t6198*t10916;
  t10927 = t10925 + t10926;
  t10755 = -1.*t641*t10448;
  t10756 = t444*t10424;
  t10757 = t10755 + t10756;
  t10750 = t444*t10448;
  t10751 = t641*t10424;
  t10752 = t10750 + t10751;
  t11079 = t434*t10738;
  t11080 = -1.*t10720*t6340;
  t11084 = t11079 + t11080;
  t11104 = t434*t10720;
  t11106 = t10738*t6340;
  t11107 = t11104 + t11106;
  t10796 = t444*t10477;
  t10843 = -1.*t641*t10502;
  t10845 = t10796 + t10843;
  t10766 = t641*t10477;
  t10768 = t444*t10502;
  t10770 = t10766 + t10768;
  t11158 = t434*t10770;
  t11239 = t10845*t6340;
  t11263 = t11158 + t11239;
  t11114 = t434*t10752;
  t11115 = t10757*t6340;
  t11116 = t11114 + t11115;
  t11108 = t8457*t11107;
  t11121 = t11116*t8576;
  t11110 = t434*t10757;
  t11111 = -1.*t10752*t6340;
  t11112 = t11110 + t11111;
  t11129 = -1.*t11107*t8362;
  t11264 = -1.*t11263*t8576;
  t11271 = t10338*t6198;
  t11272 = t399*t11084;
  t11273 = t11271 + t11272;
  t11276 = t399*t10338;
  t11280 = -1.*t6198*t11084;
  t11282 = t11276 + t11280;
  t11130 = t434*t10845;
  t11133 = -1.*t10770*t6340;
  t11153 = t11130 + t11133;
  t11308 = t10491*t6198;
  t11309 = t399*t11153;
  t11312 = t11308 + t11309;
  t11289 = t10439*t6198;
  t11291 = t399*t11112;
  t11292 = t11289 + t11291;
  t11328 = -1.*t7481*t6198;
  t11329 = -1.*t399*t7740;
  t11368 = t11328 + t11329;
  t11461 = -1.*t4204*t6198;
  t11483 = -1.*t399*t8383;
  t11484 = t11461 + t11483;
  t11585 = 2.8e-11*t775;
  t11593 = -7.e-6*t711;
  t11597 = t11593 + t789;
  t11599 = t726 + t11585;
  t11581 = 4.e-6*t711;
  t11583 = t11581 + t2730;
  t11588 = t711 + t11585;
  t11606 = t11597*t3165;
  t11608 = -1.000000000049*t775*t3343;
  t11612 = t11599*t3435;
  t11613 = t11606 + t11608 + t11612;
  t11574 = 7.e-6*t711;
  t11575 = t11574 + t789;
  t11569 = -4.e-6*t711;
  t11571 = t11569 + t2730;
  t11649 = -2.8e-11*t775;
  t11592 = -1.000000000049*t775*t2661;
  t11598 = t11597*t2877;
  t11602 = t11599*t3004;
  t11603 = t11592 + t11598 + t11602;
  t11627 = t11593 + t2237;
  t11631 = -0.038748999993*t11627;
  t11632 = t11581 + t1395;
  t11633 = -0.281209000004*t11632;
  t11635 = -1.38024835e-16*t775;
  t11637 = -6.5e-11*t775*t3587;
  t11638 = t11575*t3753;
  t11640 = t11571*t3908;
  t11641 = -1.4640699999999997e-7 + t11631 + t11633 + t11635 + t11637 + t11638 + t11640;
  t11650 = t711 + t11649;
  t11651 = -0.281209000004*t11650;
  t11652 = t11574 + t2237;
  t11653 = -2.123459e-6*t11652;
  t11654 = -0.0387489999948987*t775;
  t11655 = t11597*t3587;
  t11656 = -1.000000000049*t775*t3753;
  t11657 = t11599*t3908;
  t11658 = 5.856279999999999e-13 + t11651 + t11653 + t11654 + t11655 + t11656 + t11657;
  t11660 = t726 + t11649;
  t11661 = -0.038748999993*t11660;
  t11662 = t11569 + t1395;
  t11663 = -2.123459e-6*t11662;
  t11667 = -0.28120900000849935*t775;
  t11668 = t11583*t3587;
  t11777 = t11588*t3753;
  t11814 = -1.000000000016*t775*t3908;
  t11863 = 1.0248489999999998e-12 + t11661 + t11663 + t11667 + t11668 + t11777 + t11814;
  t11626 = t11613*t4204;
  t11659 = t4010*t11658;
  t11644 = -6.5e-11*t775*t3165;
  t11645 = t11575*t3343;
  t11646 = t11571*t3435;
  t11647 = t11644 + t11645 + t11646;
  t11617 = t11583*t3165;
  t11618 = t11588*t3343;
  t11621 = -1.000000000016*t775*t3435;
  t11622 = t11617 + t11618 + t11621;
  t11892 = -1.*t11603*t4204;
  t11899 = -1.*t3006*t11658;
  t11894 = t11575*t2661;
  t11895 = -6.5e-11*t775*t2877;
  t11896 = t11571*t3004;
  t11897 = t11894 + t11895 + t11896;
  t11882 = t11588*t2661;
  t11887 = t11583*t2877;
  t11889 = -1.000000000016*t775*t3004;
  t11890 = t11882 + t11887 + t11889;
  t11994 = -1.*t641*t11641;
  t11995 = t444*t11863;
  t11998 = t11994 + t11995;
  t12002 = t444*t11641;
  t12005 = t641*t11863;
  t12006 = t12002 + t12005;
  t11572 = t11571*t1081;
  t11573 = -6.5e-11*t775*t1334;
  t11576 = t11575*t1721;
  t11577 = t11572 + t11573 + t11576;
  t11580 = -1.000000000016*t775*t1081;
  t11584 = t11583*t1334;
  t11589 = t11588*t1721;
  t11590 = t11580 + t11584 + t11589;
  t12049 = t444*t11577;
  t12051 = t641*t11590;
  t12052 = t12049 + t12051;
  t12045 = -1.*t641*t11577;
  t12046 = t444*t11590;
  t12047 = t12045 + t12046;
  t12039 = t11599*t1081;
  t12040 = t11597*t1334;
  t12041 = -1.000000000049*t775*t1721;
  t12043 = t12039 + t12040 + t12041;
  t12048 = t434*t12047;
  t12053 = -1.*t12052*t6340;
  t12054 = t12048 + t12053;
  t12060 = t434*t12052;
  t12061 = t12047*t6340;
  t12063 = t12060 + t12061;
  t12066 = t399*t12043;
  t12068 = -1.*t6198*t12054;
  t12069 = t12066 + t12068;
  t12010 = t444*t11897;
  t12011 = t641*t11890;
  t12012 = t12010 + t12011;
  t12015 = -1.*t641*t11897;
  t12017 = t444*t11890;
  t12018 = t12015 + t12017;
  t11970 = t444*t11647;
  t11974 = t641*t11622;
  t11976 = t11970 + t11974;
  t11989 = -1.*t641*t11647;
  t11991 = t444*t11622;
  t11992 = t11989 + t11991;
  t12085 = t434*t11976;
  t12086 = t11992*t6340;
  t12087 = t12085 + t12086;
  t12081 = t434*t12012;
  t12082 = t12018*t6340;
  t12083 = t12081 + t12082;
  t12097 = t434*t12006;
  t12099 = t11998*t6340;
  t12100 = t12097 + t12099;
  t12105 = t434*t11998;
  t12108 = -1.*t12006*t6340;
  t12109 = t12105 + t12108;
  t12114 = t434*t12018;
  t12115 = -1.*t12012*t6340;
  t12117 = t12114 + t12115;
  t12089 = t434*t11992;
  t12090 = -1.*t11976*t6340;
  t12091 = t12089 + t12090;
  t12093 = t12087*t8576;
  t12101 = t8457*t12100;
  t12269 = t11613*t6198;
  t12270 = t399*t12091;
  t12273 = t12269 + t12270;
  t12181 = -1.*t12083*t8576;
  t12220 = -1.*t8362*t12100;
  t12265 = t11603*t6198;
  t12266 = t399*t12117;
  t12267 = t12265 + t12266;
  t12282 = t11658*t6198;
  t12289 = t399*t12109;
  t12314 = t12282 + t12289;
  t12322 = t399*t11658;
  t12328 = -1.*t6198*t12109;
  t12333 = t12322 + t12328;
  t12368 = 0.15121*t4535;
  t12369 = 0.15121*t4702;
  t12370 = -1.*t3461*t3960;
  t12371 = -1.*t4010*t4204;
  t12372 = -1.*t4272*t4393;
  t12373 = t12370 + t12371 + t12372;
  t12378 = t7481*t12373;
  t12379 = t2595*t3960;
  t12380 = t7481*t4204;
  t12381 = t2014*t4393;
  t12382 = t12379 + t12380 + t12381;
  t12383 = t4010*t12382;
  t12384 = t12368 + t12369 + t12378 + t12383;
  t12414 = t3587*t1334;
  t12415 = t1721*t3753;
  t12416 = t1081*t3908;
  t12417 = t12414 + t12415 + t12416;
  t12420 = -1.*t3165*t3587;
  t12421 = -1.*t3343*t3753;
  t12422 = -1.*t3435*t3908;
  t12423 = t12420 + t12421 + t12422;
  t12397 = -0.281209*t2661;
  t12399 = 6.5e-11*t889;
  t12409 = -1. + t12399;
  t12410 = 4.e-6*t12409;
  t12411 = t12410 + t3036 + t1699;
  t12412 = 1.e-6*t12411;
  t12413 = 0.038749*t3004;
  t12418 = t3165*t12417;
  t12424 = t1334*t12423;
  t12425 = t3435*t12417;
  t12426 = t1081*t12423;
  t12427 = t12425 + t12426;
  t12428 = -7.e-6*t12427;
  t12429 = -1.*t3343*t12417;
  t12430 = -1.*t1721*t12423;
  t12431 = t12429 + t12430;
  t12432 = 4.e-6*t12431;
  t12436 = t12397 + t12412 + t12413 + t12418 + t12424 + t12428 + t12432;
  t12442 = -1.*t5286*t5368;
  t12443 = -1.*t5382*t5439;
  t12444 = t12371 + t12442 + t12443;
  t12446 = t7481*t12444;
  t12449 = t7697*t5368;
  t12452 = t7586*t5439;
  t12453 = t12380 + t12449 + t12452;
  t12454 = t4010*t12453;
  t12456 = t12446 + t12454;
  t6197 = t4015 + t4020 + t4048 + t4148;
  t683 = t610 + t662;
  t6284 = t5287 + t662;
  t6498 = t4280 + t4281 + t4297 + t4307;
  t12460 = t434*t8266*t6198;
  t12461 = t8301*t6340;
  t12462 = t12460 + t12461;
  t12464 = t8301*t434;
  t12465 = -1.*t8266*t6198*t6340;
  t12466 = t12464 + t12465;
  t6804 = t3462 + t3482 + t3506 + t3517;
  t12478 = t8266*t8362;
  t12479 = t8301*t8826;
  t12480 = t12478 + t12479;
  t12483 = t8301*t8362;
  t12484 = -1.*t8266*t8826;
  t12485 = t12483 + t12484;
  t12488 = -1.*t8371*t8383;
  t12489 = -1.*t8457*t8576;
  t12491 = t12371 + t12488 + t12489;
  t12493 = t8297*t12491;
  t12494 = t7740*t8383;
  t12495 = t8297*t8576;
  t12496 = t12380 + t12494 + t12495;
  t12497 = t8457*t12496;
  t12498 = t12493 + t12497;
  t6960 = t3800 + t3847 + t3855 + t3885;
  t12470 = -1.*t641*t12462;
  t12471 = t444*t12466;
  t12472 = t12470 + t12471;
  t12474 = t444*t12462;
  t12475 = t641*t12466;
  t12476 = t12474 + t12475;
  t7159 = t3530 + t3541 + t3559 + t3573;
  t7187 = t3594 + t3610 + t3718 + t3748;
  t12554 = -1.*t8765*t8770;
  t12555 = -1.*t8784*t8802;
  t12556 = t12489 + t12554 + t12555;
  t12557 = t7768*t12556;
  t12558 = t7768*t8770;
  t12559 = t8330*t8802;
  t12560 = t12495 + t12558 + t12559;
  t12564 = t8765*t12560;
  t12570 = t12557 + t12564;
  t12503 = -1.*t399*t2897*t8266;
  t12504 = t800*t12472;
  t12507 = t2185*t12476;
  t12511 = t12503 + t12504 + t12507;
  t12513 = -1.*t399*t2774*t8266;
  t12514 = t1197*t12472;
  t12516 = t2243*t12476;
  t12521 = t12513 + t12514 + t12516;
  t12523 = -1.*t2625*t399*t8266;
  t12528 = t1414*t12472;
  t12529 = t2510*t12476;
  t12530 = t12523 + t12528 + t12529;
  t12688 = -1.*t8457*t9331;
  t12690 = -1.*t9310*t8576;
  t12694 = t8297*t9331;
  t12747 = t9181*t8576;
  t12943 = -1.*t8457*t8383;
  t12946 = -1.*t8371*t8576;
  t12969 = t8297*t8383;
  t12971 = t7740*t8576;
  t11520 = -1.*t3006*t6198;
  t11521 = -1.*t399*t8670;
  t11522 = t11520 + t11521;
  t11492 = -1.*t4010*t6198;
  t11498 = -1.*t399*t8371;
  t11503 = t11492 + t11498;
  t13332 = -1.*t3587*t10390;
  t13333 = -1.*t3165*t10161;
  t13334 = -1.*t3343*t10254;
  t13335 = -1.*t3435*t10298;
  t13336 = -1.*t10422*t3753;
  t13337 = -1.*t10395*t3908;
  t13338 = t13332 + t13333 + t13334 + t13335 + t13336 + t13337;
  t13368 = t10161*t1334;
  t13370 = t3587*t9990;
  t13371 = t1081*t10298;
  t13372 = t10254*t1721;
  t13373 = t9899*t3753;
  t13374 = t10026*t3908;
  t13375 = t13368 + t13370 + t13371 + t13372 + t13373 + t13374;
  t13135 = -1.*t4010*t10338;
  t13138 = -1.*t10439*t4204;
  t13289 = t10338*t7481;
  t13301 = t10904*t4204;
  t11314 = t399*t10491;
  t11315 = -1.*t6198*t11153;
  t11316 = t11314 + t11315;
  t13423 = -1.*t8457*t11107;
  t13425 = -1.*t11116*t8576;
  t11296 = t399*t10439;
  t11299 = -1.*t6198*t11112;
  t11301 = t11296 + t11299;
  t10905 = t10904*t6198;
  t10917 = t399*t10916;
  t10918 = t10905 + t10917;
  t13431 = t11107*t8297;
  t13434 = t10923*t8576;
  t13659 = -1.*t11613*t4204;
  t13666 = -1.*t4010*t11658;
  t13672 = t12043*t4204;
  t13675 = t7481*t11658;
  t12346 = t399*t11603;
  t12348 = -1.*t6198*t12117;
  t12349 = t12346 + t12348;
  t12044 = t12043*t6198;
  t12056 = t399*t12054;
  t12058 = t12044 + t12056;
  t13768 = -1.*t12087*t8576;
  t13769 = -1.*t8457*t12100;
  t12278 = t399*t11613;
  t12279 = -1.*t6198*t12091;
  t12280 = t12278 + t12279;
  t13774 = t12063*t8576;
  t13775 = t8297*t12100;
  t13811 = 0.15121*t3461;
  t13812 = 0.15121*t4272;
  t13813 = -1.*t2595*t3960;
  t13814 = -1.*t7481*t4204;
  t13815 = -1.*t2014*t4393;
  t13816 = t13813 + t13814 + t13815;
  t13817 = t3006*t13816;
  t13818 = t4535*t3960;
  t13819 = t3006*t4204;
  t13820 = t4702*t4393;
  t13821 = t13818 + t13819 + t13820;
  t13822 = t7481*t13821;
  t13823 = t13811 + t13812 + t13817 + t13822;
  t13833 = -1.*t3587*t1334;
  t13838 = -1.*t1721*t3753;
  t13839 = -1.*t1081*t3908;
  t13840 = t13833 + t13838 + t13839;
  t13843 = t3587*t2877;
  t13846 = t2661*t3753;
  t13847 = t3004*t3908;
  t13848 = t13843 + t13846 + t13847;
  t13826 = 7.e-6*t3112;
  t13827 = 4.e-6*t3582;
  t13828 = -1. + t12399 + t13826 + t13827;
  t13829 = 1.e-6*t13828;
  t13830 = -0.281209*t3343;
  t13832 = 0.038749*t3435;
  t13841 = t2877*t13840;
  t13849 = t1334*t13848;
  t13850 = t3004*t13840;
  t13851 = t1081*t13848;
  t13852 = t13850 + t13851;
  t13853 = -7.e-6*t13852;
  t13854 = -1.*t2661*t13840;
  t13855 = -1.*t1721*t13848;
  t13856 = t13854 + t13855;
  t13857 = 4.e-6*t13856;
  t13858 = t13829 + t13830 + t13832 + t13841 + t13849 + t13853 + t13857;
  t13861 = -1.*t7697*t5368;
  t13862 = -1.*t7586*t5439;
  t13863 = t13814 + t13861 + t13862;
  t13864 = t3006*t13863;
  t13865 = t5752*t5368;
  t13866 = t5937*t5439;
  t13867 = t13819 + t13865 + t13866;
  t13868 = t7481*t13867;
  t13869 = t13864 + t13868;
  t13872 = -1.*t8301*t434*t6198;
  t13873 = t8266*t6340;
  t13874 = t13872 + t13873;
  t13876 = t434*t8266;
  t13877 = t8301*t6198*t6340;
  t13899 = t13876 + t13877;
  t14057 = t8266*t8457;
  t14058 = t8301*t8784;
  t14059 = t14057 + t14058;
  t14062 = t8301*t8457;
  t14063 = -1.*t8266*t8784;
  t14064 = t14062 + t14063;
  t14068 = -1.*t7740*t8383;
  t14069 = -1.*t8297*t8576;
  t14070 = t13814 + t14068 + t14069;
  t14071 = t8362*t14070;
  t14076 = t8670*t8383;
  t14078 = t8362*t8576;
  t14079 = t13819 + t14076 + t14078;
  t14098 = t8297*t14079;
  t14102 = t14071 + t14098;
  t14034 = -1.*t641*t13874;
  t14041 = t444*t13899;
  t14047 = t14034 + t14041;
  t14051 = t444*t13874;
  t14053 = t641*t13899;
  t14055 = t14051 + t14053;
  t14164 = -1.*t7768*t8770;
  t14168 = -1.*t8330*t8802;
  t14169 = t14069 + t14164 + t14168;
  t14170 = t8745*t14169;
  t14172 = t8745*t8770;
  t14173 = t8826*t8802;
  t14174 = t14078 + t14172 + t14173;
  t14175 = t7768*t14174;
  t14176 = t14170 + t14175;
  t14132 = t8301*t399*t2897;
  t14139 = t800*t14047;
  t14140 = t2185*t14055;
  t14142 = t14132 + t14139 + t14140;
  t14144 = t8301*t399*t2774;
  t14145 = t1197*t14047;
  t14146 = t2243*t14055;
  t14147 = t14144 + t14145 + t14146;
  t14149 = t2625*t8301*t399;
  t14150 = t1414*t14047;
  t14151 = t2510*t14055;
  t14154 = t14149 + t14150 + t14151;
  t14240 = -1.*t8297*t9331;
  t14243 = -1.*t9181*t8576;
  t14250 = t8362*t9331;
  t14253 = t9271*t8576;
  t14293 = -1.*t8297*t8383;
  t14295 = -1.*t7740*t8576;
  t14299 = t8362*t8383;
  t14301 = t8670*t8576;
  t14396 = t3587*t10471;
  t14397 = t2661*t10254;
  t14398 = t10161*t2877;
  t14399 = t10298*t3004;
  t14400 = t10468*t3753;
  t14402 = t10474*t3908;
  t14403 = t14396 + t14397 + t14398 + t14399 + t14400 + t14402;
  t14406 = -1.*t10161*t1334;
  t14407 = -1.*t3587*t9990;
  t14408 = -1.*t1081*t10298;
  t14409 = -1.*t10254*t1721;
  t14410 = -1.*t9899*t3753;
  t14411 = -1.*t10026*t3908;
  t14412 = t14406 + t14407 + t14408 + t14409 + t14410 + t14411;
  t14369 = t10338*t3006;
  t14372 = t10491*t4204;
  t14378 = -1.*t10338*t7481;
  t14382 = -1.*t10904*t4204;
  t14456 = t11107*t8362;
  t14459 = t11263*t8576;
  t14466 = -1.*t11107*t8297;
  t14469 = -1.*t10923*t8576;
  t14497 = -1.*t12043*t4204;
  t14500 = -1.*t7481*t11658;
  t14505 = t11603*t4204;
  t14508 = t3006*t11658;
  t14542 = -1.*t12063*t8576;
  t14543 = -1.*t8297*t12100;
  t14548 = t12083*t8576;
  t14549 = t8362*t12100;
  p_output1[0]=t6197*t6198 - 1.*t399*t6284*t6340 + t6498*t6604 + t399*t434*t683 + t6804*t6901 + t6960*t7052 + t7159*t7182 + t7187*t7255 + 0.148705*(t1040*t7052 + t1222*t7182 + t1710*t7255) - 0.80315*(t3402*t7052 + t3112*t7182 + t3329*t7255) - 0.038924*(t3899*t7052 + t3582*t7182 + t3606*t7255) + var1[0] + t7768*var2[0] + t8352*var2[1] + t8338*var2[2] + t8833*var2[3] + ((-1.*t8266*t8297 - 1.*t8301*t8330)*var2[1] + t8352*var2[2])*var2[3] + t8681*var2[4] + (t8330*var2[0] - 1.*t11368*t8266*var2[1] + t11368*t8301*var2[2] + (t8745*(t11484*t8784 + t8770*t8784 + t11503*t8802 + t8765*t8802) + t8807*t8826 + t8765*(-1.*t11522*t8802 - 1.*t8745*t8802 - 1.*t11484*t8826 - 1.*t8770*t8826) + t8784*t8830)*var2[3])*var2[4] + t5999*var2[5] + (t399*t9509*var2[0] + (t7740*t8301 + t6198*t8266*t9509)*var2[1] + (t7740*t8266 - 1.*t6198*t8301*t9509)*var2[2] + (t399*t8830*t9567 + t8745*(t399*t8770*t9567 - 1.*t6198*t8802*t9567 + t9575 + t399*t8765*t9582 - 1.*t6198*t8784*t9582 + t9585) + t399*t8807*t9602 + t8765*(-1.*t399*t8745*t9582 + t6198*t8826*t9582 - 1.*t399*t8770*t9602 + t6198*t8802*t9602 + t9615 + t9627))*var2[3] + (t8606*t8670 + t8371*t8677 + t8362*(t8383*t9567 + t9575 + t8371*t9582 + t9585) + t8457*(-1.*t8670*t9582 - 1.*t8383*t9602 + t9615 + t9627))*var2[4])*var2[5] + t4792*var2[12] + (t399*t9172*var2[0] + (t6198*t8266*t9172 + t8301*t9181)*var2[1] + (-1.*t6198*t8301*t9172 + t8266*t9181)*var2[2] + (t399*t8830*t9358 + t8745*(t9340 + t399*t8770*t9358 - 1.*t6198*t8802*t9358 + t9361 + t399*t8765*t9378 - 1.*t6198*t8784*t9378) + t399*t8807*t9393 + t8765*(-1.*t399*t8745*t9378 + t6198*t8826*t9378 + t9383 - 1.*t399*t8770*t9393 + t6198*t8802*t9393 + t9399))*var2[3] + (t8606*t9271 + t8677*t9310 + t8362*(t9340 + t8383*t9358 + t9361 + t8371*t9378) + t8457*(-1.*t8670*t9378 + t9383 - 1.*t8383*t9393 + t9399))*var2[4] + (t3006*(t5368*t5382 + t5382*t8846 + t5439*t8853 + t5286*t8871) + t4010*(-1.*t5368*t5937 - 1.*t5937*t8846 - 1.*t5752*t8871 - 1.*t5439*t9074))*var2[5])*var2[12] + t5092*var2[13] + (t12058*var2[0] + (-1.*t12069*t8266 + t12063*t8301)*var2[1] + (t12063*t8266 + t12069*t8301)*var2[2] + (t8745*(t12093 + t12101 + t12314*t8765 + t12273*t8770 + t12333*t8784 + t12280*t8802) + t12267*t8807 + t8765*(t12181 + t12220 - 1.*t12314*t8745 - 1.*t12267*t8770 - 1.*t12349*t8802 - 1.*t12333*t8826) + t12273*t8830)*var2[3] + (t8362*(t11626 + t11659 + t12093 + t12101 + t12109*t8371 + t12091*t8383) + t12083*t8606 + t8457*(t11892 + t11899 + t12181 + t12220 - 1.*t12117*t8383 - 1.*t12109*t8670) + t12087*t8677)*var2[4] + (t3006*(t11626 + t11659 + t12006*t5286 + t11976*t5368 + t11998*t5382 + t11992*t5439) + t11603*t5605 + t4010*(t11892 + t11899 - 1.*t12012*t5368 - 1.*t12018*t5439 - 1.*t12006*t5752 - 1.*t11998*t5937) + t11613*t5987)*var2[5] + (0.15121*t11577 + 0.15121*t11590 + t3006*(t11626 + t11659 + t11863*t3461 + t11622*t3960 + t11641*t4272 + t11647*t4393) + t11603*t4408 + t4010*(t11892 + t11899 - 1.*t11890*t3960 - 1.*t11897*t4393 - 1.*t11863*t4535 - 1.*t11641*t4702) + t11613*t4779)*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t10918*var2[0] + (-1.*t10927*t8266 + t10923*t8301)*var2[1] + (t10923*t8266 + t10927*t8301)*var2[2] + (t8745*(t11108 + t11121 + t11273*t8765 + t11292*t8770 + t11282*t8784 + t11301*t8802) + t11312*t8807 + t8765*(t11129 + t11264 - 1.*t11273*t8745 - 1.*t11312*t8770 - 1.*t11316*t8802 - 1.*t11282*t8826) + t11292*t8830)*var2[3] + (t8362*(t10344 + t10444 + t11108 + t11121 + t11084*t8371 + t11112*t8383) + t11263*t8606 + t8457*(t10459 + t10493 + t11129 + t11264 - 1.*t11153*t8383 - 1.*t11084*t8670) + t11116*t8677)*var2[4] + (t3006*(t10344 + t10444 + t10720*t5286 + t10752*t5368 + t10738*t5382 + t10757*t5439) + t10491*t5605 + t4010*(t10459 + t10493 - 1.*t10770*t5368 - 1.*t10845*t5439 - 1.*t10720*t5752 - 1.*t10738*t5937) + t10439*t5987)*var2[5] + (0.15121*t10031 + 0.15121*t10041 + t3006*(t10344 + t10444 + t10300*t3461 + t10424*t3960 + t10363*t4272 + t10448*t4393) + t10491*t4408 + t4010*(t10459 + t10493 - 1.*t10477*t3960 - 1.*t10502*t4393 - 1.*t10300*t4535 - 1.*t10363*t4702) + t10439*t4779)*var2[12] + (0.038749*t10026 + 1.e-6*(-7.000000000455e-6*t1001 + t10049) + t10578*t2877 + t10624*t3165 + t10471*t4897 + t10390*t4943 - 7.e-6*(t10578*t3004 + t10624*t3435 + t10474*t4897 + t10395*t4943) + 4.e-6*(-1.*t10578*t2661 - 1.*t10624*t3343 - 1.*t10468*t4897 - 1.*t10422*t4943) - 0.281209*t9899)*var2[13])*var2[14] + t7768*var3[0] + t8352*var3[1] + t8338*var3[2] + t8833*var3[3] + t8681*var3[4] + t5999*var3[5] + t4792*var3[12] + t5092*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=0.148705*(t1040*t12511 + t1222*t12521 + t12530*t1710) - 0.80315*(t12521*t3112 + t12530*t3329 + t12511*t3402) - 0.038924*(t12521*t3582 + t12530*t3606 + t12511*t3899) + t12466*t6284 + t12472*t6498 + t12476*t6804 + t12462*t683 + t12511*t6960 + t12521*t7159 + t12530*t7187 - 1.*t399*t6197*t8266 + var1[1] + t8745*var2[0] + t12485*var2[1] + t12480*var2[2] + t12570*var2[3] + ((-1.*t8266*t8362 - 1.*t8301*t8826)*var2[1] + t12485*var2[2])*var2[3] + t12498*var2[4] + (t8826*var2[0] - 1.*t11522*t8266*var2[1] + t11522*t8301*var2[2] + (t12556*t8330 + t12560*t8784 + t8765*(t11484*t8330 + t8330*t8770 + t11368*t8802 + t7768*t8802) + t7768*(-1.*t11484*t8784 - 1.*t8770*t8784 - 1.*t11503*t8802 - 1.*t8765*t8802))*var2[3])*var2[4] + t12456*var2[5] + (t399*t9602*var2[0] + (t8301*t8670 + t6198*t8266*t9602)*var2[1] + (t8266*t8670 - 1.*t6198*t8301*t9602)*var2[2] + (t12556*t399*t9509 + t12560*t399*t9567 + t8765*(t12969 + t12971 + t399*t8770*t9509 - 1.*t6198*t8802*t9509 + t399*t7768*t9582 - 1.*t6198*t8330*t9582) + t7768*(t12943 + t12946 - 1.*t399*t8770*t9567 + t6198*t8802*t9567 - 1.*t399*t8765*t9582 + t6198*t8784*t9582))*var2[3] + (t12491*t7740 + t12496*t8371 + t8457*(t12969 + t12971 + t8383*t9509 + t7740*t9582) + t8297*(t12943 + t12946 - 1.*t8383*t9567 - 1.*t8371*t9582))*var2[4])*var2[5] + t12384*var2[12] + (t399*t9393*var2[0] + (t8301*t9271 + t6198*t8266*t9393)*var2[1] + (t8266*t9271 - 1.*t6198*t8301*t9393)*var2[2] + (t12556*t399*t9172 + t12560*t399*t9358 + t8765*(t12694 + t12747 + t399*t8770*t9172 - 1.*t6198*t8802*t9172 + t399*t7768*t9378 - 1.*t6198*t8330*t9378) + t7768*(t12688 + t12690 - 1.*t399*t8770*t9358 + t6198*t8802*t9358 - 1.*t399*t8765*t9378 + t6198*t8784*t9378))*var2[3] + (t12491*t9181 + t12496*t9310 + t8457*(t12694 + t12747 + t8383*t9172 + t7740*t9378) + t8297*(t12688 + t12690 - 1.*t8383*t9358 - 1.*t8371*t9378))*var2[4] + (t7481*(-1.*t5368*t5382 - 1.*t5382*t8846 - 1.*t5439*t8853 - 1.*t5286*t8871) + t4010*(t5368*t7586 + t7586*t8846 + t7697*t8871 + t5439*t9159))*var2[5])*var2[12] + t12436*var2[13] + (t12267*var2[0] + (-1.*t12349*t8266 + t12083*t8301)*var2[1] + (t12083*t8266 + t12349*t8301)*var2[2] + (t12058*t12556 + t12273*t12560 + t8765*(t13774 + t13775 + t12314*t7768 + t12333*t8330 + t12058*t8770 + t12069*t8802) + t7768*(t13768 + t13769 - 1.*t12314*t8765 - 1.*t12273*t8770 - 1.*t12333*t8784 - 1.*t12280*t8802))*var2[3] + (t12063*t12491 + t12087*t12496 + t8297*(t13659 + t13666 + t13768 + t13769 - 1.*t12109*t8371 - 1.*t12091*t8383) + (t13672 + t13675 + t13774 + t13775 + t12109*t7740 + t12054*t8383)*t8457)*var2[4] + (t12043*t12444 + t11613*t12453 + (t13659 + t13666 - 1.*t12006*t5286 - 1.*t11976*t5368 - 1.*t11998*t5382 - 1.*t11992*t5439)*t7481 + t4010*(t13672 + t13675 + t12052*t5368 + t12047*t5439 + t11998*t7586 + t12006*t7697))*var2[5] + (0.15121*t11890 + 0.15121*t11897 + t12043*t12373 + t11613*t12382 + t4010*(t13672 + t13675 + t11641*t2014 + t11863*t2595 + t11590*t3960 + t11577*t4393) + (t13659 + t13666 - 1.*t11863*t3461 - 1.*t11622*t3960 - 1.*t11641*t4272 - 1.*t11647*t4393)*t7481)*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t11312*var2[0] + (-1.*t11316*t8266 + t11263*t8301)*var2[1] + (t11263*t8266 + t11316*t8301)*var2[2] + (t10918*t12556 + t11292*t12560 + t8765*(t13431 + t13434 + t11273*t7768 + t11282*t8330 + t10918*t8770 + t10927*t8802) + t7768*(t13423 + t13425 - 1.*t11273*t8765 - 1.*t11292*t8770 - 1.*t11282*t8784 - 1.*t11301*t8802))*var2[3] + (t10923*t12491 + t11116*t12496 + t8297*(t13135 + t13138 + t13423 + t13425 - 1.*t11084*t8371 - 1.*t11112*t8383) + (t13289 + t13301 + t13431 + t13434 + t11084*t7740 + t10916*t8383)*t8457)*var2[4] + (t10904*t12444 + t10439*t12453 + (t13135 + t13138 - 1.*t10720*t5286 - 1.*t10752*t5368 - 1.*t10738*t5382 - 1.*t10757*t5439)*t7481 + t4010*(t13289 + t13301 + t10913*t5368 + t10908*t5439 + t10738*t7586 + t10720*t7697))*var2[5] + (0.15121*t10477 + 0.15121*t10502 + t10904*t12373 + t10439*t12382 + t4010*(t13289 + t13301 + t10363*t2014 + t10300*t2595 + t10031*t3960 + t10041*t4393) + (t13135 + t13138 - 1.*t10300*t3461 - 1.*t10424*t3960 - 1.*t10363*t4272 - 1.*t10448*t4393)*t7481)*var2[12] + (-0.281209*t10468 + 0.038749*t10474 + t10390*t12417 + t13338*t1334 + t13375*t3165 - 7.e-6*(t10395*t12417 + t10026*t12423 + t1081*t13338 + t13375*t3435) + 1.e-6*(4.00000000026e-6*t1001 + t9846) + 4.e-6*(-1.*t10422*t12417 - 1.*t13338*t1721 - 1.*t13375*t3343 - 1.*t12423*t9899) + t12423*t9990)*var2[13])*var2[14] + t8745*var3[0] + t12485*var3[1] + t12480*var3[2] + t12570*var3[3] + t12498*var3[4] + t12456*var3[5] + t12384*var3[12] + t12436*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=0.148705*(t1040*t14142 + t1222*t14147 + t14154*t1710) - 0.80315*(t14147*t3112 + t14154*t3329 + t14142*t3402) - 0.038924*(t14147*t3582 + t14154*t3606 + t14142*t3899) + t13899*t6284 + t14047*t6498 + t14055*t6804 + t13874*t683 + t14142*t6960 + t14147*t7159 + t14154*t7187 + t399*t6197*t8301 + var1[2] + t8765*var2[0] + t14064*var2[1] + t14059*var2[2] + t14176*var2[3] + ((-1.*t8266*t8457 - 1.*t8301*t8784)*var2[1] + t14064*var2[2])*var2[3] + t14102*var2[4] + (t8784*var2[0] - 1.*t11503*t8266*var2[1] + t11503*t8301*var2[2] + (t14174*t8330 + t8745*(-1.*t11484*t8330 - 1.*t8330*t8770 - 1.*t11368*t8802 - 1.*t7768*t8802) + t14169*t8826 + t7768*(t11522*t8802 + t8745*t8802 + t11484*t8826 + t8770*t8826))*var2[3])*var2[4] + t13869*var2[5] + (t399*t9567*var2[0] + (t8301*t8371 + t6198*t8266*t9567)*var2[1] + (t8266*t8371 - 1.*t6198*t8301*t9567)*var2[2] + (t14174*t399*t9509 + t8745*(t14293 + t14295 - 1.*t399*t8770*t9509 + t6198*t8802*t9509 - 1.*t399*t7768*t9582 + t6198*t8330*t9582) + t14169*t399*t9602 + t7768*(t14299 + t14301 + t399*t8745*t9582 - 1.*t6198*t8826*t9582 + t399*t8770*t9602 - 1.*t6198*t8802*t9602))*var2[3] + (t14079*t7740 + t14070*t8670 + t8362*(t14293 + t14295 - 1.*t8383*t9509 - 1.*t7740*t9582) + t8297*(t14299 + t14301 + t8670*t9582 + t8383*t9602))*var2[4])*var2[5] + t13823*var2[12] + (t399*t9358*var2[0] + (t8301*t9310 + t6198*t8266*t9358)*var2[1] + (t8266*t9310 - 1.*t6198*t8301*t9358)*var2[2] + (t14174*t399*t9172 + t8745*(t14240 + t14243 - 1.*t399*t8770*t9172 + t6198*t8802*t9172 - 1.*t399*t7768*t9378 + t6198*t8330*t9378) + t14169*t399*t9393 + t7768*(t14250 + t14253 + t399*t8745*t9378 - 1.*t6198*t8826*t9378 + t399*t8770*t9393 - 1.*t6198*t8802*t9393))*var2[3] + (t14079*t9181 + t14070*t9271 + t8362*(t14240 + t14243 - 1.*t8383*t9172 - 1.*t7740*t9378) + t8297*(t14250 + t14253 + t8670*t9378 + t8383*t9393))*var2[4] + (t7481*(t5368*t5937 + t5937*t8846 + t5752*t8871 + t5439*t9074) + t3006*(-1.*t5368*t7586 - 1.*t7586*t8846 - 1.*t7697*t8871 - 1.*t5439*t9159))*var2[5])*var2[12] + t13858*var2[13] + (t12273*var2[0] + (-1.*t12280*t8266 + t12087*t8301)*var2[1] + (t12087*t8266 + t12280*t8301)*var2[2] + (t12267*t14169 + t12058*t14174 + t8745*(t14542 + t14543 - 1.*t12314*t7768 - 1.*t12333*t8330 - 1.*t12058*t8770 - 1.*t12069*t8802) + t7768*(t14548 + t14549 + t12314*t8745 + t12267*t8770 + t12349*t8802 + t12333*t8826))*var2[3] + (t12083*t14070 + t12063*t14079 + t8362*(t14497 + t14500 + t14542 + t14543 - 1.*t12109*t7740 - 1.*t12054*t8383) + t8297*(t14505 + t14508 + t14548 + t14549 + t12117*t8383 + t12109*t8670))*var2[4] + (t11603*t13863 + t12043*t13867 + (t14505 + t14508 + t12012*t5368 + t12018*t5439 + t12006*t5752 + t11998*t5937)*t7481 + t3006*(t14497 + t14500 - 1.*t12052*t5368 - 1.*t12047*t5439 - 1.*t11998*t7586 - 1.*t12006*t7697))*var2[5] + (0.15121*t11622 + 0.15121*t11647 + t11603*t13816 + t12043*t13821 + t3006*(t14497 + t14500 - 1.*t11641*t2014 - 1.*t11863*t2595 - 1.*t11590*t3960 - 1.*t11577*t4393) + (t14505 + t14508 + t11890*t3960 + t11897*t4393 + t11863*t4535 + t11641*t4702)*t7481)*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t11292*var2[0] + (-1.*t11301*t8266 + t11116*t8301)*var2[1] + (t11116*t8266 + t11301*t8301)*var2[2] + (t11312*t14169 + t10918*t14174 + t8745*(t14466 + t14469 - 1.*t11273*t7768 - 1.*t11282*t8330 - 1.*t10918*t8770 - 1.*t10927*t8802) + t7768*(t14456 + t14459 + t11273*t8745 + t11312*t8770 + t11316*t8802 + t11282*t8826))*var2[3] + (t11263*t14070 + t10923*t14079 + t8362*(t14378 + t14382 + t14466 + t14469 - 1.*t11084*t7740 - 1.*t10916*t8383) + t8297*(t14369 + t14372 + t14456 + t14459 + t11153*t8383 + t11084*t8670))*var2[4] + (t10491*t13863 + t10904*t13867 + (t14369 + t14372 + t10770*t5368 + t10845*t5439 + t10720*t5752 + t10738*t5937)*t7481 + t3006*(t14378 + t14382 - 1.*t10913*t5368 - 1.*t10908*t5439 - 1.*t10738*t7586 - 1.*t10720*t7697))*var2[5] + (0.15121*t10424 + 0.15121*t10448 + t10491*t13816 + t10904*t13821 + t3006*(t14378 + t14382 - 1.*t10363*t2014 - 1.*t10300*t2595 - 1.*t10031*t3960 - 1.*t10041*t4393) + (t14369 + t14372 + t10477*t3960 + t10502*t4393 + t10300*t4535 + t10363*t4702)*t7481)*var2[12] + (1.e-6*(6.5e-11*t1001 + 7.e-6*t10072 + 4.e-6*t10133) + 0.038749*t10395 - 0.281209*t10422 + t10471*t13840 + t1334*t14403 + t14412*t2877 - 7.e-6*(t10474*t13840 + t10026*t13848 + t1081*t14403 + t14412*t3004) + 4.e-6*(-1.*t10468*t13840 - 1.*t14403*t1721 - 1.*t14412*t2661 - 1.*t13848*t9899) + t13848*t9990)*var2[13])*var2[14] + t8765*var3[0] + t14064*var3[1] + t14059*var3[2] + t14176*var3[3] + t14102*var3[4] + t13869*var3[5] + t13823*var3[12] + t13858*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void ddh_RlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
