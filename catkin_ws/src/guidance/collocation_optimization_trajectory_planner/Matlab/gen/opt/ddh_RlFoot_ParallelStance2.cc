/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:23 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t1229;
  double t1253;
  double t1256;
  double t659;
  double t828;
  double t941;
  double t1400;
  double t1424;
  double t1038;
  double t1258;
  double t1331;
  double t1433;
  double t1449;
  double t1463;
  double t971;
  double t1734;
  double t1793;
  double t1834;
  double t2053;
  double t2060;
  double t2203;
  double t2263;
  double t2306;
  double t2376;
  double t2492;
  double t2604;
  double t2792;
  double t2098;
  double t2140;
  double t3069;
  double t3028;
  double t3039;
  double t3112;
  double t3404;
  double t2863;
  double t2890;
  double t3963;
  double t3350;
  double t1127;
  double t3618;
  double t3628;
  double t3638;
  double t3661;
  double t3334;
  double t3214;
  double t3989;
  double t4120;
  double t4158;
  double t4179;
  double t3259;
  double t3308;
  double t3636;
  double t3685;
  double t3768;
  double t3206;
  double t3212;
  double t3823;
  double t3831;
  double t3861;
  double t4009;
  double t4062;
  double t3379;
  double t4165;
  double t4187;
  double t4194;
  double t2152;
  double t4277;
  double t4507;
  double t4562;
  double t4623;
  double t4676;
  double t4784;
  double t4829;
  double t4841;
  double t5018;
  double t5029;
  double t5244;
  double t5264;
  double t5372;
  double t5417;
  double t5448;
  double t5517;
  double t5585;
  double t5596;
  double t5633;
  double t5640;
  double t5658;
  double t5702;
  double t5855;
  double t5892;
  double t5966;
  double t5976;
  double t5987;
  double t5990;
  double t6076;
  double t6135;
  double t6157;
  double t6189;
  double t1686;
  double t1722;
  double t2165;
  double t1192;
  double t6639;
  double t4375;
  double t6543;
  double t6570;
  double t6591;
  double t6627;
  double t3228;
  double t3250;
  double t3310;
  double t3335;
  double t3405;
  double t3492;
  double t4249;
  double t4253;
  double t4285;
  double t4356;
  double t4390;
  double t4459;
  double t5261;
  double t5846;
  double t6248;
  double t6361;
  double t3252;
  double t3342;
  double t3519;
  double t3522;
  double t6628;
  double t6634;
  double t6766;
  double t6835;
  double t6871;
  double t6933;
  double t6985;
  double t7048;
  double t7236;
  double t7263;
  double t7294;
  double t7313;
  double t7415;
  double t7659;
  double t7744;
  double t7836;
  double t7841;
  double t7844;
  double t7908;
  double t7914;
  double t1620;
  double t2086;
  double t2796;
  double t2818;
  double t2844;
  double t2980;
  double t3046;
  double t3132;
  double t3149;
  double t3175;
  double t3771;
  double t4105;
  double t4201;
  double t4246;
  double t6505;
  double t7279;
  double t7285;
  double t7289;
  double t7292;
  double t7293;
  double t7920;
  double t7923;
  double t7965;
  double t7968;
  double t7991;
  double t8048;
  double t8100;
  double t8113;
  double t8154;
  double t8192;
  double t8202;
  double t8208;
  double t8210;
  double t8216;
  double t8228;
  double t8235;
  double t8247;
  double t8330;
  double t8335;
  double t8336;
  double t8337;
  double t8459;
  double t8463;
  double t8497;
  double t8558;
  double t8259;
  double t8276;
  double t8278;
  double t8282;
  double t8295;
  double t8436;
  double t8560;
  double t8565;
  double t8569;
  double t8596;
  double t8603;
  double t8608;
  double t8631;
  double t8636;
  double t8645;
  double t8654;
  double t506;
  double t411;
  double t441;
  double t449;
  double t523;
  double t471;
  double t8682;
  double t8684;
  double t8688;
  double t8692;
  double t8744;
  double t8746;
  double t8747;
  double t8661;
  double t8662;
  double t8663;
  double t8710;
  double t8716;
  double t8728;
  double t8737;
  double t8753;
  double t8758;
  double t8767;
  double t8776;
  double t8800;
  double t8801;
  double t8805;
  double t8807;
  double t8817;
  double t8831;
  double t8878;
  double t8917;
  double t8929;
  double t9043;
  double t257;
  double t403;
  double t9147;
  double t9138;
  double t9159;
  double t9163;
  double t9174;
  double t9185;
  double t9190;
  double t9192;
  double t9409;
  double t9411;
  double t9415;
  double t9433;
  double t9437;
  double t9440;
  double t9441;
  double t9443;
  double t9444;
  double t9450;
  double t9458;
  double t9467;
  double t9468;
  double t9470;
  double t9475;
  double t9479;
  double t9281;
  double t9290;
  double t9298;
  double t9299;
  double t9314;
  double t9322;
  double t9330;
  double t9331;
  double t9346;
  double t9354;
  double t9380;
  double t9383;
  double t9552;
  double t9556;
  double t9559;
  double t9560;
  double t9561;
  double t9562;
  double t9567;
  double t9568;
  double t9573;
  double t9574;
  double t9575;
  double t9596;
  double t9601;
  double t9604;
  double t9682;
  double t9734;
  double t9768;
  double t9628;
  double t9629;
  double t9630;
  double t9616;
  double t9617;
  double t9619;
  double t9803;
  double t9841;
  double t9863;
  double t9620;
  double t9622;
  double t9626;
  double t9663;
  double t9878;
  double t9896;
  double t9921;
  double t9927;
  double t9928;
  double t9932;
  double t9935;
  double t9936;
  double t9937;
  double t9938;
  double t9939;
  double t10027;
  double t10039;
  double t10041;
  double t10017;
  double t10019;
  double t10024;
  double t10045;
  double t10046;
  double t10065;
  double t10091;
  double t10092;
  double t10099;
  double t10079;
  double t10080;
  double t10085;
  double t10088;
  double t10104;
  double t10108;
  double t10110;
  double t10117;
  double t10119;
  double t10135;
  double t10136;
  double t10137;
  double t10138;
  double t10139;
  double t10140;
  double t10170;
  double t10182;
  double t10184;
  double t10185;
  double t10195;
  double t10215;
  double t10271;
  double t10289;
  double t10291;
  double t10293;
  double t10294;
  double t10299;
  double t10307;
  double t10308;
  double t10236;
  double t10238;
  double t10243;
  double t10201;
  double t10203;
  double t10207;
  double t10326;
  double t10328;
  double t10330;
  double t10332;
  double t10333;
  double t10321;
  double t10323;
  double t10350;
  double t10351;
  double t10355;
  double t10336;
  double t10349;
  double t10338;
  double t10341;
  double t10344;
  double t10365;
  double t10390;
  double t10366;
  double t10367;
  double t10375;
  double t10500;
  double t10523;
  double t10605;
  double t10616;
  double t10626;
  double t10601;
  double t10638;
  double t10572;
  double t10598;
  double t10677;
  double t10684;
  double t10671;
  double t10675;
  double t10887;
  double t10875;
  double t10876;
  double t10877;
  double t10881;
  double t10883;
  double t10888;
  double t10889;
  double t10891;
  double t10894;
  double t10895;
  double t10896;
  double t10939;
  double t11085;
  double t10909;
  double t10910;
  double t10936;
  double t11053;
  double t11058;
  double t11063;
  double t11068;
  double t11073;
  double t11075;
  double t11079;
  double t11080;
  double t11082;
  double t11083;
  double t11084;
  double t11086;
  double t11088;
  double t11089;
  double t11090;
  double t11098;
  double t11103;
  double t11118;
  double t11119;
  double t11132;
  double t11147;
  double t11193;
  double t11239;
  double t11284;
  double t11290;
  double t11292;
  double t11324;
  double t11333;
  double t11336;
  double t11338;
  double t11341;
  double t11342;
  double t11345;
  double t11347;
  double t11348;
  double t11352;
  double t11081;
  double t11104;
  double t11295;
  double t11298;
  double t11303;
  double t11305;
  double t11308;
  double t11309;
  double t11316;
  double t11317;
  double t11318;
  double t11319;
  double t11558;
  double t11560;
  double t11576;
  double t11583;
  double t11605;
  double t11626;
  double t11630;
  double t11647;
  double t11650;
  double t11652;
  double t11653;
  double t11360;
  double t11361;
  double t11366;
  double t11369;
  double t11751;
  double t11752;
  double t11753;
  double t11754;
  double t11755;
  double t11756;
  double t11757;
  double t11760;
  double t11767;
  double t11768;
  double t11769;
  double t11770;
  double t11771;
  double t11772;
  double t11311;
  double t11370;
  double t11372;
  double t11375;
  double t11378;
  double t11381;
  double t11340;
  double t11346;
  double t11353;
  double t11356;
  double t11516;
  double t11657;
  double t11806;
  double t11807;
  double t11808;
  double t11811;
  double t11812;
  double t11813;
  double t11580;
  double t11621;
  double t11639;
  double t11640;
  double t11658;
  double t11660;
  double t11661;
  double t11694;
  double t10884;
  double t10890;
  double t10897;
  double t10898;
  double t10903;
  double t10904;
  double t10906;
  double t10907;
  double t12082;
  double t12085;
  double t12088;
  double t12071;
  double t12072;
  double t12079;
  double t12039;
  double t12041;
  double t12043;
  double t12048;
  double t12080;
  double t12089;
  double t12090;
  double t12097;
  double t12100;
  double t12102;
  double t12104;
  double t12133;
  double t12152;
  double t11819;
  double t11820;
  double t11821;
  double t11815;
  double t11816;
  double t11817;
  double t12217;
  double t12218;
  double t12221;
  double t12228;
  double t12232;
  double t12233;
  double t11833;
  double t11899;
  double t11934;
  double t11829;
  double t11830;
  double t11831;
  double t12264;
  double t12265;
  double t12266;
  double t12245;
  double t12246;
  double t12247;
  double t12236;
  double t12250;
  double t12237;
  double t12239;
  double t12242;
  double t12258;
  double t12267;
  double t12275;
  double t12276;
  double t12277;
  double t12279;
  double t12280;
  double t12281;
  double t12260;
  double t12261;
  double t12262;
  double t12298;
  double t12300;
  double t12304;
  double t12283;
  double t12284;
  double t12285;
  double t12326;
  double t12327;
  double t12328;
  double t12332;
  double t12333;
  double t12334;
  double t12621;
  double t12635;
  double t12636;
  double t12638;
  double t12612;
  double t12613;
  double t12625;
  double t12644;
  double t12645;
  double t12646;
  double t12647;
  double t12563;
  double t12564;
  double t12554;
  double t12555;
  double t12704;
  double t12634;
  double t12637;
  double t12640;
  double t12641;
  double t12663;
  double t12664;
  double t12665;
  double t12674;
  double t12680;
  double t12692;
  double t12693;
  double t12694;
  double t12695;
  double t12705;
  double t12706;
  double t12707;
  double t12708;
  double t12709;
  double t12710;
  double t12711;
  double t12712;
  double t12714;
  double t12716;
  double t12717;
  double t12719;
  double t12720;
  double t12722;
  double t12723;
  double t12724;
  double t12725;
  double t12726;
  double t12662;
  double t12715;
  double t12697;
  double t12699;
  double t12701;
  double t12702;
  double t12650;
  double t12651;
  double t12652;
  double t12657;
  double t12740;
  double t12749;
  double t12744;
  double t12745;
  double t12746;
  double t12747;
  double t12733;
  double t12735;
  double t12736;
  double t12737;
  double t12784;
  double t12785;
  double t12786;
  double t12789;
  double t12792;
  double t12793;
  double t12558;
  double t12562;
  double t12579;
  double t12596;
  double t12606;
  double t12618;
  double t12629;
  double t12632;
  double t12856;
  double t12857;
  double t12861;
  double t12852;
  double t12853;
  double t12854;
  double t12823;
  double t12824;
  double t12830;
  double t12831;
  double t12855;
  double t12864;
  double t12866;
  double t12887;
  double t12903;
  double t12907;
  double t12923;
  double t12924;
  double t12925;
  double t12798;
  double t12801;
  double t12802;
  double t12804;
  double t12805;
  double t12808;
  double t12775;
  double t12776;
  double t12778;
  double t12780;
  double t12781;
  double t12782;
  double t12939;
  double t12940;
  double t12941;
  double t12935;
  double t12936;
  double t12937;
  double t12950;
  double t12951;
  double t12952;
  double t12955;
  double t12960;
  double t12966;
  double t12975;
  double t12979;
  double t12983;
  double t12943;
  double t12945;
  double t12947;
  double t12949;
  double t12954;
  double t13014;
  double t13015;
  double t13016;
  double t12999;
  double t13004;
  double t13010;
  double t13011;
  double t13012;
  double t13129;
  double t13170;
  double t13171;
  double t13173;
  double t13174;
  double t13175;
  double t13257;
  double t13261;
  double t13262;
  double t13263;
  double t13265;
  double t13270;
  double t13272;
  double t13276;
  double t13287;
  double t13288;
  double t13290;
  double t13292;
  double t13293;
  double t13413;
  double t13414;
  double t13415;
  double t13416;
  double t13418;
  double t13419;
  double t13420;
  double t13421;
  double t13300;
  double t13301;
  double t13302;
  double t13311;
  double t13335;
  double t13343;
  double t13359;
  double t13417;
  double t13422;
  double t13423;
  double t13424;
  double t13425;
  double t13428;
  double t13430;
  double t13431;
  double t13432;
  double t13433;
  double t13434;
  double t13440;
  double t13441;
  double t13442;
  double t13443;
  double t13444;
  double t13445;
  double t13446;
  double t13447;
  double t13448;
  double t9112;
  double t538;
  double t9141;
  double t9156;
  double t13452;
  double t13453;
  double t13454;
  double t13456;
  double t13457;
  double t13458;
  double t9179;
  double t13564;
  double t13603;
  double t13622;
  double t13636;
  double t13640;
  double t13641;
  double t13650;
  double t13653;
  double t13660;
  double t13663;
  double t13667;
  double t13671;
  double t13676;
  double t13677;
  double t13678;
  double t9197;
  double t13464;
  double t13465;
  double t13466;
  double t13475;
  double t13486;
  double t13507;
  double t9312;
  double t9342;
  double t13757;
  double t13758;
  double t13759;
  double t13760;
  double t13761;
  double t13762;
  double t13763;
  double t13764;
  double t13765;
  double t13684;
  double t13685;
  double t13687;
  double t13688;
  double t13693;
  double t13696;
  double t13704;
  double t13714;
  double t13721;
  double t13727;
  double t13738;
  double t13739;
  double t13917;
  double t14009;
  double t14016;
  double t14025;
  double t14151;
  double t14156;
  double t14164;
  double t14166;
  double t12456;
  double t12459;
  double t12469;
  double t12337;
  double t12338;
  double t12339;
  double t14427;
  double t14428;
  double t14429;
  double t14430;
  double t14431;
  double t14432;
  double t14433;
  double t14442;
  double t14462;
  double t14477;
  double t14482;
  double t14487;
  double t14494;
  double t14501;
  double t14228;
  double t14233;
  double t14239;
  double t14384;
  double t12309;
  double t12310;
  double t12312;
  double t14575;
  double t14577;
  double t12288;
  double t12289;
  double t12290;
  double t12055;
  double t12091;
  double t12095;
  double t14582;
  double t14585;
  double t14619;
  double t14622;
  double t14627;
  double t14630;
  double t13180;
  double t13185;
  double t13186;
  double t12833;
  double t12867;
  double t12868;
  double t14669;
  double t14670;
  double t13020;
  double t13043;
  double t13046;
  double t14679;
  double t14680;
  double t14725;
  double t14726;
  double t14727;
  double t14728;
  double t14729;
  double t14730;
  double t14731;
  double t14732;
  double t14733;
  double t14734;
  double t14735;
  double t14736;
  double t14737;
  double t14746;
  double t14747;
  double t14748;
  double t14749;
  double t14751;
  double t14752;
  double t14753;
  double t14754;
  double t14740;
  double t14741;
  double t14742;
  double t14743;
  double t14744;
  double t14745;
  double t14750;
  double t14755;
  double t14756;
  double t14757;
  double t14758;
  double t14759;
  double t14760;
  double t14761;
  double t14762;
  double t14763;
  double t14764;
  double t14767;
  double t14768;
  double t14769;
  double t14770;
  double t14772;
  double t14773;
  double t14774;
  double t14775;
  double t14776;
  double t14779;
  double t14780;
  double t14781;
  double t14783;
  double t14784;
  double t14785;
  double t14799;
  double t14800;
  double t14801;
  double t14805;
  double t14806;
  double t14807;
  double t14810;
  double t14811;
  double t14813;
  double t14814;
  double t14815;
  double t14816;
  double t14817;
  double t14818;
  double t14819;
  double t14790;
  double t14791;
  double t14792;
  double t14794;
  double t14795;
  double t14796;
  double t14847;
  double t14848;
  double t14849;
  double t14850;
  double t14851;
  double t14852;
  double t14853;
  double t14854;
  double t14855;
  double t14824;
  double t14825;
  double t14827;
  double t14828;
  double t14830;
  double t14831;
  double t14832;
  double t14833;
  double t14835;
  double t14836;
  double t14837;
  double t14838;
  double t14900;
  double t14902;
  double t14906;
  double t14908;
  double t14943;
  double t14945;
  double t14949;
  double t14951;
  double t15027;
  double t15028;
  double t15029;
  double t15030;
  double t15031;
  double t15032;
  double t15033;
  double t15036;
  double t15037;
  double t15038;
  double t15039;
  double t15040;
  double t15041;
  double t15042;
  double t15000;
  double t15003;
  double t15009;
  double t15013;
  double t15085;
  double t15087;
  double t15092;
  double t15095;
  double t15126;
  double t15129;
  double t15134;
  double t15137;
  double t15172;
  double t15173;
  double t15178;
  double t15179;
  t1229 = Cos(var1[14]);
  t1253 = -1.*t1229;
  t1256 = 1. + t1253;
  t659 = Cos(var1[13]);
  t828 = -1.*t659;
  t941 = 1. + t828;
  t1400 = Sin(var1[14]);
  t1424 = 4.e-6*t1400;
  t1038 = Sin(var1[13]);
  t1258 = 1.000000000016*t1256;
  t1331 = -7.e-6*t1256;
  t1433 = t1331 + t1424;
  t1449 = -7.e-6*t1433;
  t1463 = -1. + t1258 + t1449;
  t971 = -7.e-6*t941;
  t1734 = -6.5e-11*t1256;
  t1793 = 1. + t1734;
  t1834 = -7.e-6*t1793;
  t2053 = 7.e-6*t1256;
  t2060 = t1834 + t2053 + t1424;
  t2203 = -2.8e-11*t1256;
  t2263 = -1. + t1229;
  t2306 = 4.e-6*t2263;
  t2376 = -7.e-6*t1400;
  t2492 = t2306 + t2376;
  t2604 = -7.e-6*t2492;
  t2792 = t2203 + t2604 + t1400;
  t2098 = -1. + t659;
  t2140 = 4.e-6*t2098;
  t3069 = 2.8e-11*t941;
  t3028 = 4.e-6*t1038;
  t3039 = t971 + t3028;
  t3112 = t3069 + t1038;
  t3404 = 2.8e-11*t1256;
  t2863 = -1.000000000016*t941;
  t2890 = 1. + t2863;
  t3963 = -1.*t1400;
  t3350 = -1.*t1038;
  t1127 = -4.e-6*t1038;
  t3618 = 4.e-6*t1256;
  t3628 = t3618 + t2376;
  t3638 = -4.e-6*t1400;
  t3661 = t1331 + t3638;
  t3334 = 7.e-6*t1400;
  t3214 = -1.000000000049*t1256;
  t3989 = t3404 + t3963;
  t4120 = -1.000000000016*t1256;
  t4158 = 1. + t4120;
  t4179 = t2203 + t3963;
  t3259 = -7.e-6*t1038;
  t3308 = t2140 + t3259;
  t3636 = 4.e-6*t3628;
  t3685 = -7.e-6*t3661;
  t3768 = 1. + t1734 + t3636 + t3685;
  t3206 = -1.000000000049*t941;
  t3212 = 1. + t3206;
  t3823 = 1.000000000049*t1256;
  t3831 = -1. + t3823;
  t3861 = 4.e-6*t3831;
  t4009 = -7.e-6*t3989;
  t4062 = t3861 + t2306 + t4009 + t2376;
  t3379 = t3069 + t3350;
  t4165 = -7.e-6*t4158;
  t4187 = 4.e-6*t4179;
  t4194 = t4165 + t1331 + t4187 + t1424;
  t2152 = 7.e-6*t1038;
  t4277 = -2.8e-11*t941;
  t4507 = -2.598649999999999e-7*var1[14];
  t4562 = 0.148705*t1793;
  t4623 = -2.3905277499999995e-16*t1256;
  t4676 = -0.038922999986*t3628;
  t4784 = -0.80315*t3661;
  t4829 = t2053 + t1424;
  t4841 = -0.503149000008*t4829;
  t5018 = t2306 + t3334;
  t5029 = -0.038924*t5018;
  t5244 = t4507 + t4562 + t4623 + t4676 + t4784 + t4841 + t5029;
  t5264 = 1.0394599999999997e-12*var1[14];
  t5372 = 1. + t3214;
  t5417 = -0.038924*t5372;
  t5448 = -0.03892299998790722*t1256;
  t5517 = -0.80315*t3989;
  t5585 = 0.148705*t2492;
  t5596 = t3618 + t3334;
  t5633 = -3.6777349999999994e-6*t5596;
  t5640 = t2203 + t1400;
  t5658 = -0.503149000008*t5640;
  t5702 = t5264 + t5417 + t5448 + t5517 + t5585 + t5633 + t5658;
  t5855 = 1.8190549999999993e-12*var1[14];
  t5892 = -0.80315*t4158;
  t5966 = -0.5031490000160505*t1256;
  t5976 = -0.038922999986*t4179;
  t5987 = t2053 + t3638;
  t5990 = -3.6777349999999994e-6*t5987;
  t6076 = 0.148705*t1433;
  t6135 = t3404 + t1400;
  t6157 = -0.038924*t6135;
  t6189 = t5855 + t5892 + t5966 + t5976 + t5990 + t6076 + t6157;
  t1686 = -6.5e-11*t941;
  t1722 = 1. + t1686;
  t2165 = t2140 + t2152;
  t1192 = t971 + t1127;
  t6639 = 4.e-6*t941;
  t4375 = 7.e-6*t941;
  t6543 = t3308*t3768;
  t6570 = t3212*t4062;
  t6591 = t3379*t4194;
  t6627 = t6543 + t6570 + t6591;
  t3228 = 4.e-6*t2492;
  t3250 = 1. + t3214 + t3228;
  t3310 = 4.e-6*t1793;
  t3335 = t3310 + t2306 + t3334;
  t3405 = 4.e-6*t1433;
  t3492 = t3404 + t3405 + t1400;
  t4249 = 1.0248489999999998e-12*var1[13];
  t4253 = -0.28120900000849935*t941;
  t4285 = t4277 + t3350;
  t4356 = -0.038748999993*t4285;
  t4390 = t4375 + t1127;
  t4459 = -2.123459e-6*t4390;
  t5261 = t3039*t5244;
  t5846 = t3112*t5702;
  t6248 = t2890*t6189;
  t6361 = t4249 + t4253 + t4356 + t4459 + t5261 + t5846 + t6248;
  t3252 = t3212*t3250;
  t3342 = t3308*t3335;
  t3519 = t3379*t3492;
  t3522 = t3252 + t3342 + t3519;
  t6628 = 5.856279999999999e-13*var1[13];
  t6634 = -0.0387489999948987*t941;
  t6766 = t6639 + t2152;
  t6835 = -2.123459e-6*t6766;
  t6871 = t4277 + t1038;
  t6933 = -0.281209000004*t6871;
  t6985 = t3308*t5244;
  t7048 = t3212*t5702;
  t7236 = t3379*t6189;
  t7263 = t6628 + t6634 + t6835 + t6933 + t6985 + t7048 + t7236;
  t7294 = -1.4640699999999997e-7*var1[13];
  t7313 = -1.38024835e-16*t941;
  t7415 = t6639 + t3259;
  t7659 = -0.038748999993*t7415;
  t7744 = t4375 + t3028;
  t7836 = -0.281209000004*t7744;
  t7841 = t1722*t5244;
  t7844 = t2165*t5702;
  t7908 = t1192*t6189;
  t7914 = t7294 + t7313 + t7659 + t7836 + t7841 + t7844 + t7908;
  t1620 = t1192*t1463;
  t2086 = t1722*t2060;
  t2796 = t2165*t2792;
  t2818 = t1620 + t2086 + t2796;
  t2844 = 0.15121*t2818;
  t2980 = t2890*t1463;
  t3046 = t3039*t2060;
  t3132 = t3112*t2792;
  t3149 = t2980 + t3046 + t3132;
  t3175 = 0.15121*t3149;
  t3771 = t3039*t3768;
  t4105 = t3112*t4062;
  t4201 = t2890*t4194;
  t4246 = t3771 + t4105 + t4201;
  t6505 = t4246*t6361;
  t7279 = t6627*t7263;
  t7285 = t1722*t3768;
  t7289 = t2165*t4062;
  t7292 = t1192*t4194;
  t7293 = t7285 + t7289 + t7292;
  t7920 = t7293*t7914;
  t7923 = t6505 + t7279 + t7920;
  t7965 = t3522*t7923;
  t7968 = t3112*t3250;
  t7991 = t3039*t3335;
  t8048 = t2890*t3492;
  t8100 = t7968 + t7991 + t8048;
  t8113 = -1.*t8100*t6361;
  t8154 = -1.*t3522*t7263;
  t8192 = t2165*t3250;
  t8202 = t1722*t3335;
  t8208 = t1192*t3492;
  t8210 = t8192 + t8202 + t8208;
  t8216 = -1.*t8210*t7914;
  t8228 = t8113 + t8154 + t8216;
  t8235 = t6627*t8228;
  t8247 = t2844 + t3175 + t7965 + t8235;
  t8330 = t3768*t5244;
  t8335 = t4062*t5702;
  t8336 = t4194*t6189;
  t8337 = t8330 + t8335 + t8336;
  t8459 = -1.*t5244*t3335;
  t8463 = -1.*t3250*t5702;
  t8497 = -1.*t3492*t6189;
  t8558 = t8459 + t8463 + t8497;
  t8259 = 0.038749*t1463;
  t8276 = 7.e-6*t1793;
  t8278 = t8276 + t1331 + t3638;
  t8282 = 1.e-6*t8278;
  t8295 = -0.281209*t2792;
  t8436 = t3335*t8337;
  t8560 = t3768*t8558;
  t8565 = -1.*t3250*t8337;
  t8569 = -1.*t4062*t8558;
  t8596 = t8565 + t8569;
  t8603 = 4.e-6*t8596;
  t8608 = t3492*t8337;
  t8631 = t4194*t8558;
  t8636 = t8608 + t8631;
  t8645 = -7.e-6*t8636;
  t8654 = t8259 + t8282 + t8295 + t8436 + t8560 + t8603 + t8645;
  t506 = Sin(var1[12]);
  t411 = Cos(var1[12]);
  t441 = -1.*t411;
  t449 = 1. + t441;
  t523 = 0.15121*t506;
  t471 = -0.15121*t449;
  t8682 = 0.15121*t449;
  t8684 = t506*t6361;
  t8688 = t411*t7914;
  t8692 = t8682 + t523 + t8684 + t8688;
  t8744 = t411*t6361;
  t8746 = -1.*t506*t7914;
  t8747 = t471 + t523 + t8744 + t8746;
  t8661 = t506*t4246;
  t8662 = t411*t7293;
  t8663 = t8661 + t8662;
  t8710 = t8663*t8692;
  t8716 = t411*t4246;
  t8728 = -1.*t506*t7293;
  t8737 = t8716 + t8728;
  t8753 = t8737*t8747;
  t8758 = t7279 + t8710 + t8753;
  t8767 = t3522*t8758;
  t8776 = t506*t8100;
  t8800 = t411*t8210;
  t8801 = t8776 + t8800;
  t8805 = -1.*t8801*t8692;
  t8807 = t411*t8100;
  t8817 = -1.*t506*t8210;
  t8831 = t8807 + t8817;
  t8878 = -1.*t8831*t8747;
  t8917 = t8154 + t8805 + t8878;
  t8929 = t6627*t8917;
  t9043 = t8767 + t8929;
  t257 = Cos(var1[4]);
  t403 = Cos(var1[5]);
  t9147 = Sin(var1[5]);
  t9138 = Sin(var1[4]);
  t9159 = -1.*t257*t403*t506;
  t9163 = -1.*t411*t257*t9147;
  t9174 = t9159 + t9163;
  t9185 = t411*t257*t403;
  t9190 = -1.*t257*t506*t9147;
  t9192 = t9185 + t9190;
  t9409 = t3379*t1463;
  t9411 = t3308*t2060;
  t9415 = t3212*t2792;
  t9433 = t9409 + t9411 + t9415;
  t9437 = t9433*t9138;
  t9440 = -1.*t506*t2818;
  t9441 = t411*t3149;
  t9443 = t9440 + t9441;
  t9444 = t403*t9443;
  t9450 = t411*t2818;
  t9458 = t506*t3149;
  t9467 = t9450 + t9458;
  t9468 = -1.*t9467*t9147;
  t9470 = t9444 + t9468;
  t9475 = t257*t9470;
  t9479 = t9437 + t9475;
  t9281 = t3379*t9138;
  t9290 = t1192*t9174;
  t9298 = t2890*t9192;
  t9299 = t9281 + t9290 + t9298;
  t9314 = t3308*t9138;
  t9322 = t1722*t9174;
  t9330 = t3039*t9192;
  t9331 = t9314 + t9322 + t9330;
  t9346 = t3212*t9138;
  t9354 = t2165*t9174;
  t9380 = t3112*t9192;
  t9383 = t9346 + t9354 + t9380;
  t9552 = Sin(var1[3]);
  t9556 = t403*t9467;
  t9559 = t9443*t9147;
  t9560 = t9556 + t9559;
  t9561 = t9552*t9560;
  t9562 = Cos(var1[3]);
  t9567 = t257*t9433;
  t9568 = -1.*t9138*t9470;
  t9573 = t9567 + t9568;
  t9574 = t9562*t9573;
  t9575 = t9561 + t9574;
  t9596 = t9562*t9560;
  t9601 = -1.*t9552*t9573;
  t9604 = t9596 + t9601;
  t9682 = t403*t8663;
  t9734 = t8737*t9147;
  t9768 = t9682 + t9734;
  t9628 = t403*t8747;
  t9629 = -1.*t8692*t9147;
  t9630 = t9628 + t9629;
  t9616 = t403*t8801;
  t9617 = t8831*t9147;
  t9619 = t9616 + t9617;
  t9803 = t403*t8692;
  t9841 = t8747*t9147;
  t9863 = t9803 + t9841;
  t9620 = t403*t8737;
  t9622 = -1.*t8663*t9147;
  t9626 = t9620 + t9622;
  t9663 = t9626*t9630;
  t9878 = t9768*t9863;
  t9896 = t7279 + t9663 + t9878;
  t9921 = t9619*t9896;
  t9927 = t403*t8831;
  t9928 = -1.*t8801*t9147;
  t9932 = t9927 + t9928;
  t9935 = -1.*t9932*t9630;
  t9936 = -1.*t9619*t9863;
  t9937 = t8154 + t9935 + t9936;
  t9938 = t9768*t9937;
  t9939 = t9921 + t9938;
  t10027 = t6627*t9138;
  t10039 = t257*t9626;
  t10041 = t10027 + t10039;
  t10017 = t3522*t9138;
  t10019 = t257*t9932;
  t10024 = t10017 + t10019;
  t10045 = t7263*t9138;
  t10046 = t257*t9630;
  t10065 = t10045 + t10046;
  t10091 = t257*t7263;
  t10092 = -1.*t9138*t9630;
  t10099 = t10091 + t10092;
  t10079 = t10041*t10065;
  t10080 = t257*t6627;
  t10085 = -1.*t9138*t9626;
  t10088 = t10080 + t10085;
  t10104 = t10088*t10099;
  t10108 = t9878 + t10079 + t10104;
  t10110 = t10024*t10108;
  t10117 = -1.*t10024*t10065;
  t10119 = t257*t3522;
  t10135 = -1.*t9138*t9932;
  t10136 = t10119 + t10135;
  t10137 = -1.*t10136*t10099;
  t10138 = t9936 + t10117 + t10137;
  t10139 = t10041*t10138;
  t10140 = t10110 + t10139;
  t10170 = 0.15121*t411;
  t10182 = -0.15121*t506;
  t10184 = -1.*t506*t6361;
  t10185 = -1.*t411*t7914;
  t10195 = t10170 + t10182 + t10184 + t10185;
  t10215 = t10170 + t523 + t8744 + t8746;
  t10271 = -1.*t411*t2818;
  t10289 = -1.*t506*t3149;
  t10291 = t10271 + t10289;
  t10293 = t403*t10291;
  t10294 = -1.*t9443*t9147;
  t10299 = t10293 + t10294;
  t10307 = t10291*t9147;
  t10308 = t9444 + t10307;
  t10236 = -1.*t506*t8100;
  t10238 = -1.*t411*t8210;
  t10243 = t10236 + t10238;
  t10201 = -1.*t506*t4246;
  t10203 = -1.*t411*t7293;
  t10207 = t10201 + t10203;
  t10326 = t10207*t9147;
  t10328 = t9620 + t10326;
  t10330 = t403*t10215;
  t10332 = t10195*t9147;
  t10333 = t10330 + t10332;
  t10321 = t10243*t9147;
  t10323 = t9927 + t10321;
  t10350 = t403*t10195;
  t10351 = -1.*t10215*t9147;
  t10355 = t10350 + t10351;
  t10336 = t9768*t10333;
  t10349 = t10328*t9863;
  t10338 = t403*t10207;
  t10341 = -1.*t8737*t9147;
  t10344 = t10338 + t10341;
  t10365 = -1.*t9619*t10333;
  t10390 = -1.*t10323*t9863;
  t10366 = t403*t10243;
  t10367 = -1.*t8831*t9147;
  t10375 = t10366 + t10367;
  t10500 = -1.*t403*t9467;
  t10523 = t10500 + t10294;
  t10605 = -1.*t403*t8692;
  t10616 = -1.*t8747*t9147;
  t10626 = t10605 + t10616;
  t10601 = t9768*t9630;
  t10638 = t9626*t9863;
  t10572 = -1.*t403*t8663;
  t10598 = t10572 + t10341;
  t10677 = -1.*t9619*t9630;
  t10684 = -1.*t9932*t9863;
  t10671 = -1.*t403*t8801;
  t10675 = t10671 + t10367;
  t10887 = 4.e-6*t1229;
  t10875 = -7.e-6*t1229;
  t10876 = t10875 + t3638;
  t10877 = -7.e-6*t10876;
  t10881 = -2.8e-11*t1400;
  t10883 = t1229 + t10877 + t10881;
  t10888 = 7.000000000455e-6*t1400;
  t10889 = t10887 + t10888;
  t10891 = t10887 + t2376;
  t10894 = -7.e-6*t10891;
  t10895 = 1.000000000016*t1400;
  t10896 = t10894 + t10895;
  t10939 = 7.e-6*t1229;
  t11085 = 2.8e-11*t1400;
  t10909 = -4.e-6*t1229;
  t10910 = t10909 + t2376;
  t10936 = -0.80315*t10910;
  t11053 = t10939 + t3638;
  t11058 = -0.038924*t11053;
  t11063 = t10875 + t1424;
  t11068 = -0.038922999986*t11063;
  t11073 = t10887 + t3334;
  t11075 = -0.503149000008*t11073;
  t11079 = -9.666064052774999e-12*t1400;
  t11080 = -2.598649999999999e-7 + t10936 + t11058 + t11068 + t11075 + t11079;
  t11082 = 0.148705*t10876;
  t11083 = t1229 + t10881;
  t11084 = -0.503149000008*t11083;
  t11086 = t1253 + t11085;
  t11088 = -0.80315*t11086;
  t11089 = t10939 + t1424;
  t11090 = -3.6777349999999994e-6*t11089;
  t11098 = 1.0000140000590574e-6*t1400;
  t11103 = 1.0394599999999997e-12 + t11082 + t11084 + t11088 + t11090 + t11098;
  t11118 = 0.148705*t10891;
  t11119 = t1253 + t10881;
  t11132 = -0.038922999986*t11119;
  t11147 = t1229 + t11085;
  t11193 = -0.038924*t11147;
  t11239 = t10909 + t3334;
  t11284 = -3.6777349999999994e-6*t11239;
  t11290 = 0.30000099999679997*t1400;
  t11292 = 1.8190549999999993e-12 + t11118 + t11132 + t11193 + t11284 + t11290;
  t11324 = -7.e-6*t10910;
  t11333 = 4.e-6*t11063;
  t11336 = -6.5e-11*t1400;
  t11338 = t11324 + t11333 + t11336;
  t11341 = 4.e-6*t11119;
  t11342 = 1.12e-16*t1400;
  t11345 = t10887 + t11341 + t11342;
  t11347 = -7.e-6*t11086;
  t11348 = 1.96e-16*t1400;
  t11352 = t10875 + t11347 + t11348;
  t11081 = t3039*t11080;
  t11104 = t3112*t11103;
  t11295 = t2890*t11292;
  t11298 = t11081 + t11104 + t11295;
  t11303 = t3308*t11080;
  t11305 = t3212*t11103;
  t11308 = t3379*t11292;
  t11309 = t11303 + t11305 + t11308;
  t11316 = t1722*t11080;
  t11317 = t2165*t11103;
  t11318 = t1192*t11292;
  t11319 = t11316 + t11317 + t11318;
  t11558 = 4.e-6*t10876;
  t11560 = -1.000000000049*t1400;
  t11576 = t11558 + t11560;
  t11583 = -4.00000000026e-6*t1400;
  t11605 = t10939 + t11583;
  t11626 = 4.e-6*t10891;
  t11630 = t1229 + t11626 + t11085;
  t11647 = t3212*t11576;
  t11650 = t3308*t11605;
  t11652 = t3379*t11630;
  t11653 = t11647 + t11650 + t11652;
  t11360 = t3308*t11338;
  t11361 = t3379*t11345;
  t11366 = t3212*t11352;
  t11369 = t11360 + t11361 + t11366;
  t11751 = t5244*t11338;
  t11752 = t3768*t11080;
  t11753 = t4062*t11103;
  t11754 = t4194*t11292;
  t11755 = t11352*t5702;
  t11756 = t11345*t6189;
  t11757 = t11751 + t11752 + t11753 + t11754 + t11755 + t11756;
  t11760 = -1.*t5244*t11605;
  t11767 = -1.*t3250*t11103;
  t11768 = -1.*t11080*t3335;
  t11769 = -1.*t11292*t3492;
  t11770 = -1.*t11576*t5702;
  t11771 = -1.*t11630*t6189;
  t11772 = t11760 + t11767 + t11768 + t11769 + t11770 + t11771;
  t11311 = t6627*t11309;
  t11370 = t11369*t7263;
  t11372 = t1722*t11338;
  t11375 = t1192*t11345;
  t11378 = t2165*t11352;
  t11381 = t11372 + t11375 + t11378;
  t11340 = t3039*t11338;
  t11346 = t2890*t11345;
  t11353 = t3112*t11352;
  t11356 = t11340 + t11346 + t11353;
  t11516 = -1.*t11309*t3522;
  t11657 = -1.*t11653*t7263;
  t11806 = t506*t11298;
  t11807 = t411*t11319;
  t11808 = t11806 + t11807;
  t11811 = t411*t11298;
  t11812 = -1.*t506*t11319;
  t11813 = t11811 + t11812;
  t11580 = t3112*t11576;
  t11621 = t3039*t11605;
  t11639 = t2890*t11630;
  t11640 = t11580 + t11621 + t11639;
  t11658 = t2165*t11576;
  t11660 = t1722*t11605;
  t11661 = t1192*t11630;
  t11694 = t11658 + t11660 + t11661;
  t10884 = t3112*t10883;
  t10890 = t3039*t10889;
  t10897 = t2890*t10896;
  t10898 = t10884 + t10890 + t10897;
  t10903 = t2165*t10883;
  t10904 = t1722*t10889;
  t10906 = t1192*t10896;
  t10907 = t10903 + t10904 + t10906;
  t12082 = t506*t10898;
  t12085 = t411*t10907;
  t12088 = t12082 + t12085;
  t12071 = t411*t10898;
  t12072 = -1.*t506*t10907;
  t12079 = t12071 + t12072;
  t12039 = t3212*t10883;
  t12041 = t3308*t10889;
  t12043 = t3379*t10896;
  t12048 = t12039 + t12041 + t12043;
  t12080 = t403*t12079;
  t12089 = -1.*t12088*t9147;
  t12090 = t12080 + t12089;
  t12097 = t403*t12088;
  t12100 = t12079*t9147;
  t12102 = t12097 + t12100;
  t12104 = t257*t12048;
  t12133 = -1.*t9138*t12090;
  t12152 = t12104 + t12133;
  t11819 = -1.*t506*t11381;
  t11820 = t411*t11356;
  t11821 = t11819 + t11820;
  t11815 = t411*t11381;
  t11816 = t506*t11356;
  t11817 = t11815 + t11816;
  t12217 = t403*t11813;
  t12218 = -1.*t11808*t9147;
  t12221 = t12217 + t12218;
  t12228 = t403*t11808;
  t12232 = t11813*t9147;
  t12233 = t12228 + t12232;
  t11833 = t411*t11640;
  t11899 = -1.*t506*t11694;
  t11934 = t11833 + t11899;
  t11829 = t506*t11640;
  t11830 = t411*t11694;
  t11831 = t11829 + t11830;
  t12264 = t403*t11831;
  t12265 = t11934*t9147;
  t12266 = t12264 + t12265;
  t12245 = t403*t11817;
  t12246 = t11821*t9147;
  t12247 = t12245 + t12246;
  t12236 = t9768*t12233;
  t12250 = t12247*t9863;
  t12237 = t403*t11821;
  t12239 = -1.*t11817*t9147;
  t12242 = t12237 + t12239;
  t12258 = -1.*t12233*t9619;
  t12267 = -1.*t12266*t9863;
  t12275 = t11309*t9138;
  t12276 = t257*t12221;
  t12277 = t12275 + t12276;
  t12279 = t257*t11309;
  t12280 = -1.*t9138*t12221;
  t12281 = t12279 + t12280;
  t12260 = t403*t11934;
  t12261 = -1.*t11831*t9147;
  t12262 = t12260 + t12261;
  t12298 = t11653*t9138;
  t12300 = t257*t12262;
  t12304 = t12298 + t12300;
  t12283 = t11369*t9138;
  t12284 = t257*t12242;
  t12285 = t12283 + t12284;
  t12326 = -1.*t9433*t9138;
  t12327 = -1.*t257*t9470;
  t12328 = t12326 + t12327;
  t12332 = -1.*t7263*t9138;
  t12333 = -1.*t257*t9630;
  t12334 = t12332 + t12333;
  t12621 = 2.8e-11*t1038;
  t12635 = -7.e-6*t659;
  t12636 = t12635 + t1127;
  t12638 = t828 + t12621;
  t12612 = 4.e-6*t659;
  t12613 = t12612 + t3259;
  t12625 = t659 + t12621;
  t12644 = t12636*t3768;
  t12645 = -1.000000000049*t1038*t4062;
  t12646 = t12638*t4194;
  t12647 = t12644 + t12645 + t12646;
  t12563 = 7.e-6*t659;
  t12564 = t12563 + t1127;
  t12554 = -4.e-6*t659;
  t12555 = t12554 + t3259;
  t12704 = -2.8e-11*t1038;
  t12634 = -1.000000000049*t1038*t3250;
  t12637 = t12636*t3335;
  t12640 = t12638*t3492;
  t12641 = t12634 + t12637 + t12640;
  t12663 = t12635 + t3028;
  t12664 = -0.038748999993*t12663;
  t12665 = t12612 + t2152;
  t12674 = -0.281209000004*t12665;
  t12680 = -1.38024835e-16*t1038;
  t12692 = -6.5e-11*t1038*t5244;
  t12693 = t12564*t5702;
  t12694 = t12555*t6189;
  t12695 = -1.4640699999999997e-7 + t12664 + t12674 + t12680 + t12692 + t12693 + t12694;
  t12705 = t659 + t12704;
  t12706 = -0.281209000004*t12705;
  t12707 = t12563 + t3028;
  t12708 = -2.123459e-6*t12707;
  t12709 = -0.0387489999948987*t1038;
  t12710 = t12636*t5244;
  t12711 = -1.000000000049*t1038*t5702;
  t12712 = t12638*t6189;
  t12714 = 5.856279999999999e-13 + t12706 + t12708 + t12709 + t12710 + t12711 + t12712;
  t12716 = t828 + t12704;
  t12717 = -0.038748999993*t12716;
  t12719 = t12554 + t2152;
  t12720 = -2.123459e-6*t12719;
  t12722 = -0.28120900000849935*t1038;
  t12723 = t12613*t5244;
  t12724 = t12625*t5702;
  t12725 = -1.000000000016*t1038*t6189;
  t12726 = 1.0248489999999998e-12 + t12717 + t12720 + t12722 + t12723 + t12724 + t12725;
  t12662 = t12647*t7263;
  t12715 = t6627*t12714;
  t12697 = -6.5e-11*t1038*t3768;
  t12699 = t12564*t4062;
  t12701 = t12555*t4194;
  t12702 = t12697 + t12699 + t12701;
  t12650 = t12613*t3768;
  t12651 = t12625*t4062;
  t12652 = -1.000000000016*t1038*t4194;
  t12657 = t12650 + t12651 + t12652;
  t12740 = -1.*t12641*t7263;
  t12749 = -1.*t3522*t12714;
  t12744 = t12564*t3250;
  t12745 = -6.5e-11*t1038*t3335;
  t12746 = t12555*t3492;
  t12747 = t12744 + t12745 + t12746;
  t12733 = t12625*t3250;
  t12735 = t12613*t3335;
  t12736 = -1.000000000016*t1038*t3492;
  t12737 = t12733 + t12735 + t12736;
  t12784 = -1.*t506*t12695;
  t12785 = t411*t12726;
  t12786 = t12784 + t12785;
  t12789 = t411*t12695;
  t12792 = t506*t12726;
  t12793 = t12789 + t12792;
  t12558 = t12555*t1463;
  t12562 = -6.5e-11*t1038*t2060;
  t12579 = t12564*t2792;
  t12596 = t12558 + t12562 + t12579;
  t12606 = -1.000000000016*t1038*t1463;
  t12618 = t12613*t2060;
  t12629 = t12625*t2792;
  t12632 = t12606 + t12618 + t12629;
  t12856 = t411*t12596;
  t12857 = t506*t12632;
  t12861 = t12856 + t12857;
  t12852 = -1.*t506*t12596;
  t12853 = t411*t12632;
  t12854 = t12852 + t12853;
  t12823 = t12638*t1463;
  t12824 = t12636*t2060;
  t12830 = -1.000000000049*t1038*t2792;
  t12831 = t12823 + t12824 + t12830;
  t12855 = t403*t12854;
  t12864 = -1.*t12861*t9147;
  t12866 = t12855 + t12864;
  t12887 = t403*t12861;
  t12903 = t12854*t9147;
  t12907 = t12887 + t12903;
  t12923 = t257*t12831;
  t12924 = -1.*t9138*t12866;
  t12925 = t12923 + t12924;
  t12798 = t411*t12747;
  t12801 = t506*t12737;
  t12802 = t12798 + t12801;
  t12804 = -1.*t506*t12747;
  t12805 = t411*t12737;
  t12808 = t12804 + t12805;
  t12775 = t411*t12702;
  t12776 = t506*t12657;
  t12778 = t12775 + t12776;
  t12780 = -1.*t506*t12702;
  t12781 = t411*t12657;
  t12782 = t12780 + t12781;
  t12939 = t403*t12778;
  t12940 = t12782*t9147;
  t12941 = t12939 + t12940;
  t12935 = t403*t12802;
  t12936 = t12808*t9147;
  t12937 = t12935 + t12936;
  t12950 = t403*t12793;
  t12951 = t12786*t9147;
  t12952 = t12950 + t12951;
  t12955 = t403*t12786;
  t12960 = -1.*t12793*t9147;
  t12966 = t12955 + t12960;
  t12975 = t403*t12808;
  t12979 = -1.*t12802*t9147;
  t12983 = t12975 + t12979;
  t12943 = t403*t12782;
  t12945 = -1.*t12778*t9147;
  t12947 = t12943 + t12945;
  t12949 = t12941*t9863;
  t12954 = t9768*t12952;
  t13014 = t12647*t9138;
  t13015 = t257*t12947;
  t13016 = t13014 + t13015;
  t12999 = -1.*t12937*t9863;
  t13004 = -1.*t9619*t12952;
  t13010 = t12641*t9138;
  t13011 = t257*t12983;
  t13012 = t13010 + t13011;
  t13129 = t12714*t9138;
  t13170 = t257*t12966;
  t13171 = t13129 + t13170;
  t13173 = t257*t12714;
  t13174 = -1.*t9138*t12966;
  t13175 = t13173 + t13174;
  t13257 = 0.15121*t8100;
  t13261 = 0.15121*t8210;
  t13262 = -1.*t4246*t6361;
  t13263 = -1.*t6627*t7263;
  t13265 = -1.*t7293*t7914;
  t13270 = t13262 + t13263 + t13265;
  t13272 = t9433*t13270;
  t13276 = t3149*t6361;
  t13287 = t9433*t7263;
  t13288 = t2818*t7914;
  t13290 = t13276 + t13287 + t13288;
  t13292 = t6627*t13290;
  t13293 = t13257 + t13261 + t13272 + t13292;
  t13413 = t5244*t2060;
  t13414 = t2792*t5702;
  t13415 = t1463*t6189;
  t13416 = t13413 + t13414 + t13415;
  t13418 = -1.*t3768*t5244;
  t13419 = -1.*t4062*t5702;
  t13420 = -1.*t4194*t6189;
  t13421 = t13418 + t13419 + t13420;
  t13300 = -0.281209*t3250;
  t13301 = 6.5e-11*t1256;
  t13302 = -1. + t13301;
  t13311 = 4.e-6*t13302;
  t13335 = t13311 + t3618 + t2376;
  t13343 = 1.e-6*t13335;
  t13359 = 0.038749*t3492;
  t13417 = t3768*t13416;
  t13422 = t2060*t13421;
  t13423 = t4194*t13416;
  t13424 = t1463*t13421;
  t13425 = t13423 + t13424;
  t13428 = -7.e-6*t13425;
  t13430 = -1.*t4062*t13416;
  t13431 = -1.*t2792*t13421;
  t13432 = t13430 + t13431;
  t13433 = 4.e-6*t13432;
  t13434 = t13300 + t13343 + t13359 + t13417 + t13422 + t13428 + t13433;
  t13440 = -1.*t8663*t8692;
  t13441 = -1.*t8737*t8747;
  t13442 = t13263 + t13440 + t13441;
  t13443 = t9433*t13442;
  t13444 = t9467*t8692;
  t13445 = t9443*t8747;
  t13446 = t13287 + t13444 + t13445;
  t13447 = t6627*t13446;
  t13448 = t13443 + t13447;
  t9112 = t6628 + t6634 + t6835 + t6933;
  t538 = t471 + t523;
  t9141 = t8682 + t523;
  t9156 = t7294 + t7313 + t7659 + t7836;
  t13452 = t403*t9552*t9138;
  t13453 = t9562*t9147;
  t13454 = t13452 + t13453;
  t13456 = t9562*t403;
  t13457 = -1.*t9552*t9138*t9147;
  t13458 = t13456 + t13457;
  t9179 = t4249 + t4253 + t4356 + t4459;
  t13564 = t9552*t9619;
  t13603 = t9562*t10136;
  t13622 = t13564 + t13603;
  t13636 = t9562*t9619;
  t13640 = -1.*t9552*t10136;
  t13641 = t13636 + t13640;
  t13650 = -1.*t9626*t9630;
  t13653 = -1.*t9768*t9863;
  t13660 = t13263 + t13650 + t13653;
  t13663 = t9560*t13660;
  t13667 = t9470*t9630;
  t13671 = t9560*t9863;
  t13676 = t13287 + t13667 + t13671;
  t13677 = t9768*t13676;
  t13678 = t13663 + t13677;
  t9197 = t5855 + t5966 + t5976 + t5990;
  t13464 = -1.*t506*t13454;
  t13465 = t411*t13458;
  t13466 = t13464 + t13465;
  t13475 = t411*t13454;
  t13486 = t506*t13458;
  t13507 = t13475 + t13486;
  t9312 = t4507 + t4623 + t4676 + t4841;
  t9342 = t5264 + t5448 + t5633 + t5658;
  t13757 = -1.*t10041*t10065;
  t13758 = -1.*t10088*t10099;
  t13759 = t13653 + t13757 + t13758;
  t13760 = t9479*t13759;
  t13761 = t9479*t10065;
  t13762 = t9573*t10099;
  t13763 = t13671 + t13761 + t13762;
  t13764 = t10041*t13763;
  t13765 = t13760 + t13764;
  t13684 = -1.*t257*t3379*t9552;
  t13685 = t1192*t13466;
  t13687 = t2890*t13507;
  t13688 = t13684 + t13685 + t13687;
  t13693 = -1.*t257*t3308*t9552;
  t13696 = t1722*t13466;
  t13704 = t3039*t13507;
  t13714 = t13693 + t13696 + t13704;
  t13721 = -1.*t3212*t257*t9552;
  t13727 = t2165*t13466;
  t13738 = t3112*t13507;
  t13739 = t13721 + t13727 + t13738;
  t13917 = -1.*t9768*t10333;
  t14009 = -1.*t10328*t9863;
  t14016 = t9560*t10333;
  t14025 = t10308*t9863;
  t14151 = -1.*t9768*t9630;
  t14156 = -1.*t9626*t9863;
  t14164 = t9560*t9630;
  t14166 = t9470*t9863;
  t12456 = -1.*t3522*t9138;
  t12459 = -1.*t257*t9932;
  t12469 = t12456 + t12459;
  t12337 = -1.*t6627*t9138;
  t12338 = -1.*t257*t9626;
  t12339 = t12337 + t12338;
  t14427 = -1.*t5244*t11338;
  t14428 = -1.*t3768*t11080;
  t14429 = -1.*t4062*t11103;
  t14430 = -1.*t4194*t11292;
  t14431 = -1.*t11352*t5702;
  t14432 = -1.*t11345*t6189;
  t14433 = t14427 + t14428 + t14429 + t14430 + t14431 + t14432;
  t14442 = t11080*t2060;
  t14462 = t5244*t10889;
  t14477 = t1463*t11292;
  t14482 = t11103*t2792;
  t14487 = t10883*t5702;
  t14494 = t10896*t6189;
  t14501 = t14442 + t14462 + t14477 + t14482 + t14487 + t14494;
  t14228 = -1.*t6627*t11309;
  t14233 = -1.*t11369*t7263;
  t14239 = t11309*t9433;
  t14384 = t12048*t7263;
  t12309 = t257*t11653;
  t12310 = -1.*t9138*t12262;
  t12312 = t12309 + t12310;
  t14575 = -1.*t9768*t12233;
  t14577 = -1.*t12247*t9863;
  t12288 = t257*t11369;
  t12289 = -1.*t9138*t12242;
  t12290 = t12288 + t12289;
  t12055 = t12048*t9138;
  t12091 = t257*t12090;
  t12095 = t12055 + t12091;
  t14582 = t12233*t9560;
  t14585 = t12102*t9863;
  t14619 = -1.*t12647*t7263;
  t14622 = -1.*t6627*t12714;
  t14627 = t12831*t7263;
  t14630 = t9433*t12714;
  t13180 = t257*t12641;
  t13185 = -1.*t9138*t12983;
  t13186 = t13180 + t13185;
  t12833 = t12831*t9138;
  t12867 = t257*t12866;
  t12868 = t12833 + t12867;
  t14669 = -1.*t12941*t9863;
  t14670 = -1.*t9768*t12952;
  t13020 = t257*t12647;
  t13043 = -1.*t9138*t12947;
  t13046 = t13020 + t13043;
  t14679 = t12907*t9863;
  t14680 = t9560*t12952;
  t14725 = 0.15121*t4246;
  t14726 = 0.15121*t7293;
  t14727 = -1.*t3149*t6361;
  t14728 = -1.*t9433*t7263;
  t14729 = -1.*t2818*t7914;
  t14730 = t14727 + t14728 + t14729;
  t14731 = t3522*t14730;
  t14732 = t8100*t6361;
  t14733 = t3522*t7263;
  t14734 = t8210*t7914;
  t14735 = t14732 + t14733 + t14734;
  t14736 = t9433*t14735;
  t14737 = t14725 + t14726 + t14731 + t14736;
  t14746 = -1.*t5244*t2060;
  t14747 = -1.*t2792*t5702;
  t14748 = -1.*t1463*t6189;
  t14749 = t14746 + t14747 + t14748;
  t14751 = t5244*t3335;
  t14752 = t3250*t5702;
  t14753 = t3492*t6189;
  t14754 = t14751 + t14752 + t14753;
  t14740 = 7.e-6*t3661;
  t14741 = 4.e-6*t5018;
  t14742 = -1. + t13301 + t14740 + t14741;
  t14743 = 1.e-6*t14742;
  t14744 = -0.281209*t4062;
  t14745 = 0.038749*t4194;
  t14750 = t3335*t14749;
  t14755 = t2060*t14754;
  t14756 = t3492*t14749;
  t14757 = t1463*t14754;
  t14758 = t14756 + t14757;
  t14759 = -7.e-6*t14758;
  t14760 = -1.*t3250*t14749;
  t14761 = -1.*t2792*t14754;
  t14762 = t14760 + t14761;
  t14763 = 4.e-6*t14762;
  t14764 = t14743 + t14744 + t14745 + t14750 + t14755 + t14759 + t14763;
  t14767 = -1.*t9467*t8692;
  t14768 = -1.*t9443*t8747;
  t14769 = t14728 + t14767 + t14768;
  t14770 = t3522*t14769;
  t14772 = t8801*t8692;
  t14773 = t8831*t8747;
  t14774 = t14733 + t14772 + t14773;
  t14775 = t9433*t14774;
  t14776 = t14770 + t14775;
  t14779 = -1.*t9562*t403*t9138;
  t14780 = t9552*t9147;
  t14781 = t14779 + t14780;
  t14783 = t403*t9552;
  t14784 = t9562*t9138*t9147;
  t14785 = t14783 + t14784;
  t14799 = t9552*t9768;
  t14800 = t9562*t10088;
  t14801 = t14799 + t14800;
  t14805 = t9562*t9768;
  t14806 = -1.*t9552*t10088;
  t14807 = t14805 + t14806;
  t14810 = -1.*t9470*t9630;
  t14811 = -1.*t9560*t9863;
  t14813 = t14728 + t14810 + t14811;
  t14814 = t9619*t14813;
  t14815 = t9932*t9630;
  t14816 = t9619*t9863;
  t14817 = t14733 + t14815 + t14816;
  t14818 = t9560*t14817;
  t14819 = t14814 + t14818;
  t14790 = -1.*t506*t14781;
  t14791 = t411*t14785;
  t14792 = t14790 + t14791;
  t14794 = t411*t14781;
  t14795 = t506*t14785;
  t14796 = t14794 + t14795;
  t14847 = -1.*t9479*t10065;
  t14848 = -1.*t9573*t10099;
  t14849 = t14811 + t14847 + t14848;
  t14850 = t10024*t14849;
  t14851 = t10024*t10065;
  t14852 = t10136*t10099;
  t14853 = t14816 + t14851 + t14852;
  t14854 = t9479*t14853;
  t14855 = t14850 + t14854;
  t14824 = t9562*t257*t3379;
  t14825 = t1192*t14792;
  t14827 = t2890*t14796;
  t14828 = t14824 + t14825 + t14827;
  t14830 = t9562*t257*t3308;
  t14831 = t1722*t14792;
  t14832 = t3039*t14796;
  t14833 = t14830 + t14831 + t14832;
  t14835 = t3212*t9562*t257;
  t14836 = t2165*t14792;
  t14837 = t3112*t14796;
  t14838 = t14835 + t14836 + t14837;
  t14900 = -1.*t9560*t10333;
  t14902 = -1.*t10308*t9863;
  t14906 = t9619*t10333;
  t14908 = t10323*t9863;
  t14943 = -1.*t9560*t9630;
  t14945 = -1.*t9470*t9863;
  t14949 = t9619*t9630;
  t14951 = t9932*t9863;
  t15027 = t5244*t11605;
  t15028 = t3250*t11103;
  t15029 = t11080*t3335;
  t15030 = t11292*t3492;
  t15031 = t11576*t5702;
  t15032 = t11630*t6189;
  t15033 = t15027 + t15028 + t15029 + t15030 + t15031 + t15032;
  t15036 = -1.*t11080*t2060;
  t15037 = -1.*t5244*t10889;
  t15038 = -1.*t1463*t11292;
  t15039 = -1.*t11103*t2792;
  t15040 = -1.*t10883*t5702;
  t15041 = -1.*t10896*t6189;
  t15042 = t15036 + t15037 + t15038 + t15039 + t15040 + t15041;
  t15000 = t11309*t3522;
  t15003 = t11653*t7263;
  t15009 = -1.*t11309*t9433;
  t15013 = -1.*t12048*t7263;
  t15085 = t12233*t9619;
  t15087 = t12266*t9863;
  t15092 = -1.*t12233*t9560;
  t15095 = -1.*t12102*t9863;
  t15126 = -1.*t12831*t7263;
  t15129 = -1.*t9433*t12714;
  t15134 = t12641*t7263;
  t15137 = t3522*t12714;
  t15172 = -1.*t12907*t9863;
  t15173 = -1.*t9560*t12952;
  t15178 = t12937*t9863;
  t15179 = t9619*t12952;
  p_output1[0]=t257*t403*t538 + t9112*t9138 - 1.*t257*t9141*t9147 + t9156*t9174 + t9179*t9192 + t9197*t9299 + t9312*t9331 + t9342*t9383 + 0.148705*(t1433*t9299 + t1793*t9331 + t2492*t9383) - 0.80315*(t4158*t9299 + t3661*t9331 + t3989*t9383) - 0.038924*(t6135*t9299 + t5018*t9331 + t5372*t9383) + var1[0] + t9479*var2[0] + t9604*var2[1] + t9575*var2[2] + t10140*var2[3] + ((-1.*t9552*t9560 - 1.*t9562*t9573)*var2[1] + t9604*var2[2])*var2[3] + t9939*var2[4] + (t9573*var2[0] - 1.*t12328*t9552*var2[1] + t12328*t9562*var2[2] + (t10108*t10136 + t10088*t10138 + t10024*(t10065*t10088 + t10041*t10099 + t10088*t12334 + t10099*t12339) + t10041*(-1.*t10024*t10099 - 1.*t10065*t10136 - 1.*t10136*t12334 - 1.*t10099*t12469))*var2[3])*var2[4] + t9043*var2[5] + (t10523*t257*var2[0] + (t10523*t9138*t9552 + t9470*t9562)*var2[1] + (t9470*t9552 - 1.*t10523*t9138*t9562)*var2[2] + (t10138*t10598*t257 + t10108*t10675*t257 + t10024*(t10601 + t10638 + t10065*t10598*t257 + t10041*t10626*t257 - 1.*t10099*t10598*t9138 - 1.*t10088*t10626*t9138) + t10041*(t10677 + t10684 - 1.*t10024*t10626*t257 - 1.*t10065*t10675*t257 + t10136*t10626*t9138 + t10099*t10675*t9138))*var2[3] + (t9619*(t10601 + t10638 + t10626*t9626 + t10598*t9630) + t9896*t9932 + t9768*(t10677 + t10684 - 1.*t10675*t9630 - 1.*t10626*t9932) + t9626*t9937)*var2[4])*var2[5] + t8247*var2[12] + (t10299*t257*var2[0] + (t10299*t9138*t9552 + t10308*t9562)*var2[1] + (t10308*t9552 - 1.*t10299*t9138*t9562)*var2[2] + (t10138*t10344*t257 + t10108*t10375*t257 + t10024*(t10336 + t10349 + t10065*t10344*t257 + t10041*t10355*t257 - 1.*t10099*t10344*t9138 - 1.*t10088*t10355*t9138) + t10041*(t10365 + t10390 - 1.*t10024*t10355*t257 - 1.*t10065*t10375*t257 + t10136*t10355*t9138 + t10099*t10375*t9138))*var2[3] + (t9619*(t10336 + t10349 + t10355*t9626 + t10344*t9630) + t10323*t9896 + t9768*(t10365 + t10390 - 1.*t10375*t9630 - 1.*t10355*t9932) + t10328*t9937)*var2[4] + (t3522*(t10215*t8663 + t10195*t8737 + t8692*t8737 + t10207*t8747) + t6627*(-1.*t10243*t8747 - 1.*t10215*t8801 - 1.*t10195*t8831 - 1.*t8692*t8831))*var2[5])*var2[12] + t8654*var2[13] + (t12868*var2[0] + (-1.*t12925*t9552 + t12907*t9562)*var2[1] + (t12907*t9552 + t12925*t9562)*var2[2] + (t10108*t13012 + t10138*t13016 + t10024*(t12949 + t12954 + t10065*t13016 + t10099*t13046 + t10041*t13171 + t10088*t13175) + t10041*(t12999 + t13004 - 1.*t10065*t13012 - 1.*t10024*t13171 - 1.*t10136*t13175 - 1.*t10099*t13186))*var2[3] + (t9619*(t12662 + t12715 + t12949 + t12954 + t12966*t9626 + t12947*t9630) + t12937*t9896 + t9768*(t12740 + t12749 + t12999 + t13004 - 1.*t12983*t9630 - 1.*t12966*t9932) + t12941*t9937)*var2[4] + (t3522*(t12662 + t12715 + t12793*t8663 + t12778*t8692 + t12786*t8737 + t12782*t8747) + t12641*t8758 + t6627*(t12740 + t12749 - 1.*t12802*t8692 - 1.*t12808*t8747 - 1.*t12793*t8801 - 1.*t12786*t8831) + t12647*t8917)*var2[5] + (0.15121*t12596 + 0.15121*t12632 + t3522*(t12662 + t12715 + t12726*t4246 + t12657*t6361 + t12695*t7293 + t12702*t7914) + t12641*t7923 + t6627*(t12740 + t12749 - 1.*t12737*t6361 - 1.*t12747*t7914 - 1.*t12726*t8100 - 1.*t12695*t8210) + t12647*t8228)*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t12095*var2[0] + (-1.*t12152*t9552 + t12102*t9562)*var2[1] + (t12102*t9552 + t12152*t9562)*var2[2] + (t10138*t12285 + t10024*(t12236 + t12250 + t10041*t12277 + t10088*t12281 + t10065*t12285 + t10099*t12290) + t10108*t12304 + t10041*(t12258 + t12267 - 1.*t10024*t12277 - 1.*t10136*t12281 - 1.*t10065*t12304 - 1.*t10099*t12312))*var2[3] + (t9619*(t11311 + t11370 + t12236 + t12250 + t12221*t9626 + t12242*t9630) + t12266*t9896 + t9768*(t11516 + t11657 + t12258 + t12267 - 1.*t12262*t9630 - 1.*t12221*t9932) + t12247*t9937)*var2[4] + (t3522*(t11311 + t11370 + t11808*t8663 + t11817*t8692 + t11813*t8737 + t11821*t8747) + t11653*t8758 + t6627*(t11516 + t11657 - 1.*t11831*t8692 - 1.*t11934*t8747 - 1.*t11808*t8801 - 1.*t11813*t8831) + t11369*t8917)*var2[5] + (0.15121*t10898 + 0.15121*t10907 + t3522*(t11311 + t11370 + t11298*t4246 + t11356*t6361 + t11319*t7293 + t11381*t7914) + t11653*t7923 + t6627*(t11516 + t11657 - 1.*t11640*t6361 - 1.*t11694*t7914 - 1.*t11298*t8100 - 1.*t11319*t8210) + t11369*t8228)*var2[12] + (-0.281209*t10883 + 0.038749*t10896 + 1.e-6*(t10909 - 7.000000000455e-6*t1400) + t11757*t3335 + t11772*t3768 + t11605*t8337 + t11338*t8558 - 7.e-6*(t11757*t3492 + t11772*t4194 + t11630*t8337 + t11345*t8558) + 4.e-6*(-1.*t11757*t3250 - 1.*t11772*t4062 - 1.*t11576*t8337 - 1.*t11352*t8558))*var2[13])*var2[14] + t9479*var3[0] + t9604*var3[1] + t9575*var3[2] + t10140*var3[3] + t9939*var3[4] + t9043*var3[5] + t8247*var3[12] + t8654*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=0.148705*(t13688*t1433 + t13714*t1793 + t13739*t2492) - 0.80315*(t13714*t3661 + t13739*t3989 + t13688*t4158) + t13454*t538 - 0.038924*(t13714*t5018 + t13739*t5372 + t13688*t6135) + t13458*t9141 + t13466*t9156 + t13507*t9179 + t13688*t9197 + t13714*t9312 + t13739*t9342 - 1.*t257*t9112*t9552 + var1[1] + t10024*var2[0] + t13641*var2[1] + t13622*var2[2] + t13765*var2[3] + ((-1.*t10136*t9562 - 1.*t9552*t9619)*var2[1] + t13641*var2[2])*var2[3] + t13678*var2[4] + (t10136*var2[0] - 1.*t12469*t9552*var2[1] + t12469*t9562*var2[2] + (t10088*t13763 + (-1.*t10065*t10088 - 1.*t10041*t10099 - 1.*t10088*t12334 - 1.*t10099*t12339)*t9479 + t13759*t9573 + t10041*(t10099*t12328 + t10099*t9479 + t10065*t9573 + t12334*t9573))*var2[3])*var2[4] + t13448*var2[5] + (t10675*t257*var2[0] + (t10675*t9138*t9552 + t9562*t9932)*var2[1] + (-1.*t10675*t9138*t9562 + t9552*t9932)*var2[2] + (t10523*t13759*t257 + t10598*t13763*t257 + (t14151 + t14156 - 1.*t10065*t10598*t257 - 1.*t10041*t10626*t257 + t10099*t10598*t9138 + t10088*t10626*t9138)*t9479 + t10041*(t14164 + t14166 + t10065*t10523*t257 - 1.*t10099*t10523*t9138 + t10626*t257*t9479 - 1.*t10626*t9138*t9573))*var2[3] + (t13660*t9470 + t13676*t9626 + t9560*(t14151 + t14156 - 1.*t10626*t9626 - 1.*t10598*t9630) + (t14164 + t14166 + t10626*t9470 + t10523*t9630)*t9768)*var2[4])*var2[5] + t13293*var2[12] + (t10375*t257*var2[0] + (t10375*t9138*t9552 + t10323*t9562)*var2[1] + (t10323*t9552 - 1.*t10375*t9138*t9562)*var2[2] + (t10299*t13759*t257 + t10344*t13763*t257 + (t13917 + t14009 - 1.*t10065*t10344*t257 - 1.*t10041*t10355*t257 + t10099*t10344*t9138 + t10088*t10355*t9138)*t9479 + t10041*(t14016 + t14025 + t10065*t10299*t257 - 1.*t10099*t10299*t9138 + t10355*t257*t9479 - 1.*t10355*t9138*t9573))*var2[3] + (t10308*t13660 + t10328*t13676 + t9560*(t13917 + t14009 - 1.*t10355*t9626 - 1.*t10344*t9630) + (t14016 + t14025 + t10355*t9470 + t10299*t9630)*t9768)*var2[4] + ((-1.*t10215*t8663 - 1.*t10195*t8737 - 1.*t8692*t8737 - 1.*t10207*t8747)*t9433 + t6627*(t10291*t8747 + t10195*t9443 + t8692*t9443 + t10215*t9467))*var2[5])*var2[12] + t13434*var2[13] + (t13012*var2[0] + (-1.*t13186*t9552 + t12937*t9562)*var2[1] + (t12937*t9552 + t13186*t9562)*var2[2] + (t12868*t13759 + t13016*t13763 + (-1.*t10065*t13016 - 1.*t10099*t13046 - 1.*t10041*t13171 - 1.*t10088*t13175 + t14669 + t14670)*t9479 + t10041*(t10065*t12868 + t10099*t12925 + t14679 + t14680 + t13171*t9479 + t13175*t9573))*var2[3] + (t12907*t13660 + t12941*t13676 + t9560*(t14619 + t14622 + t14669 + t14670 - 1.*t12966*t9626 - 1.*t12947*t9630) + (t14627 + t14630 + t14679 + t14680 + t12966*t9470 + t12866*t9630)*t9768)*var2[4] + (t12831*t13442 + t12647*t13446 + (t14619 + t14622 - 1.*t12793*t8663 - 1.*t12778*t8692 - 1.*t12786*t8737 - 1.*t12782*t8747)*t9433 + t6627*(t14627 + t14630 + t12861*t8692 + t12854*t8747 + t12786*t9443 + t12793*t9467))*var2[5] + (0.15121*t12737 + 0.15121*t12747 + t12831*t13270 + t12647*t13290 + t6627*(t14627 + t14630 + t12695*t2818 + t12726*t3149 + t12632*t6361 + t12596*t7914) + (t14619 + t14622 - 1.*t12726*t4246 - 1.*t12657*t6361 - 1.*t12695*t7293 - 1.*t12702*t7914)*t9433)*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t12304*var2[0] + (-1.*t12312*t9552 + t12266*t9562)*var2[1] + (t12266*t9552 + t12312*t9562)*var2[2] + (t12095*t13759 + t12285*t13763 + (-1.*t10041*t12277 - 1.*t10088*t12281 - 1.*t10065*t12285 - 1.*t10099*t12290 + t14575 + t14577)*t9479 + t10041*(t10065*t12095 + t10099*t12152 + t14582 + t14585 + t12277*t9479 + t12281*t9573))*var2[3] + (t12102*t13660 + t12247*t13676 + t9560*(t14228 + t14233 + t14575 + t14577 - 1.*t12221*t9626 - 1.*t12242*t9630) + (t14239 + t14384 + t14582 + t14585 + t12221*t9470 + t12090*t9630)*t9768)*var2[4] + (t12048*t13442 + t11369*t13446 + (t14228 + t14233 - 1.*t11808*t8663 - 1.*t11817*t8692 - 1.*t11813*t8737 - 1.*t11821*t8747)*t9433 + t6627*(t14239 + t14384 + t12088*t8692 + t12079*t8747 + t11813*t9443 + t11808*t9467))*var2[5] + (0.15121*t11640 + 0.15121*t11694 + t12048*t13270 + t11369*t13290 + t6627*(t14239 + t14384 + t11319*t2818 + t11298*t3149 + t10898*t6361 + t10907*t7914) + (t14228 + t14233 - 1.*t11298*t4246 - 1.*t11356*t6361 - 1.*t11319*t7293 - 1.*t11381*t7914)*t9433)*var2[12] + (-0.281209*t11576 + 0.038749*t11630 + t11338*t13416 + t10889*t13421 + 1.e-6*(t10875 + 4.00000000026e-6*t1400) + t14433*t2060 + t14501*t3768 + 4.e-6*(-1.*t11352*t13416 - 1.*t10883*t13421 - 1.*t14433*t2792 - 1.*t14501*t4062) - 7.e-6*(t11345*t13416 + t10896*t13421 + t14433*t1463 + t14501*t4194))*var2[13])*var2[14] + t10024*var3[0] + t13641*var3[1] + t13622*var3[2] + t13765*var3[3] + t13678*var3[4] + t13448*var3[5] + t13293*var3[12] + t13434*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=0.148705*(t1433*t14828 + t14833*t1793 + t14838*t2492) - 0.80315*(t14833*t3661 + t14838*t3989 + t14828*t4158) + t14781*t538 - 0.038924*(t14833*t5018 + t14838*t5372 + t14828*t6135) + t14785*t9141 + t14792*t9156 + t14796*t9179 + t14828*t9197 + t14833*t9312 + t14838*t9342 + t257*t9112*t9562 + var1[2] + t10041*var2[0] + t14807*var2[1] + t14801*var2[2] + t14855*var2[3] + ((-1.*t10088*t9562 - 1.*t9552*t9768)*var2[1] + t14807*var2[2])*var2[3] + t14819*var2[4] + (t10088*var2[0] - 1.*t12339*t9552*var2[1] + t12339*t9562*var2[2] + (t10136*t14849 + (t10024*t10099 + t10065*t10136 + t10136*t12334 + t10099*t12469)*t9479 + t14853*t9573 + t10024*(-1.*t10099*t12328 - 1.*t10099*t9479 - 1.*t10065*t9573 - 1.*t12334*t9573))*var2[3])*var2[4] + t14776*var2[5] + (t10598*t257*var2[0] + (t10598*t9138*t9552 + t9562*t9626)*var2[1] + (-1.*t10598*t9138*t9562 + t9552*t9626)*var2[2] + (t10675*t14849*t257 + t10523*t14853*t257 + (t14949 + t14951 + t10024*t10626*t257 + t10065*t10675*t257 - 1.*t10136*t10626*t9138 - 1.*t10099*t10675*t9138)*t9479 + t10024*(t14943 + t14945 - 1.*t10065*t10523*t257 + t10099*t10523*t9138 - 1.*t10626*t257*t9479 + t10626*t9138*t9573))*var2[3] + (t14817*t9470 + t9619*(t14943 + t14945 - 1.*t10626*t9470 - 1.*t10523*t9630) + t14813*t9932 + t9560*(t14949 + t14951 + t10675*t9630 + t10626*t9932))*var2[4])*var2[5] + t14737*var2[12] + (t10344*t257*var2[0] + (t10344*t9138*t9552 + t10328*t9562)*var2[1] + (t10328*t9552 - 1.*t10344*t9138*t9562)*var2[2] + (t10375*t14849*t257 + t10299*t14853*t257 + (t14906 + t14908 + t10024*t10355*t257 + t10065*t10375*t257 - 1.*t10136*t10355*t9138 - 1.*t10099*t10375*t9138)*t9479 + t10024*(t14900 + t14902 - 1.*t10065*t10299*t257 + t10099*t10299*t9138 - 1.*t10355*t257*t9479 + t10355*t9138*t9573))*var2[3] + (t10323*t14813 + t10308*t14817 + t9619*(t14900 + t14902 - 1.*t10355*t9470 - 1.*t10299*t9630) + t9560*(t14906 + t14908 + t10375*t9630 + t10355*t9932))*var2[4] + ((t10243*t8747 + t10215*t8801 + t10195*t8831 + t8692*t8831)*t9433 + t3522*(-1.*t10291*t8747 - 1.*t10195*t9443 - 1.*t8692*t9443 - 1.*t10215*t9467))*var2[5])*var2[12] + t14764*var2[13] + (t13016*var2[0] + (-1.*t13046*t9552 + t12941*t9562)*var2[1] + (t12941*t9552 + t13046*t9562)*var2[2] + (t13012*t14849 + t12868*t14853 + (t10065*t13012 + t10024*t13171 + t10136*t13175 + t10099*t13186 + t15178 + t15179)*t9479 + t10024*(-1.*t10065*t12868 - 1.*t10099*t12925 + t15172 + t15173 - 1.*t13171*t9479 - 1.*t13175*t9573))*var2[3] + (t12937*t14813 + t12907*t14817 + t9619*(t15126 + t15129 + t15172 + t15173 - 1.*t12966*t9470 - 1.*t12866*t9630) + t9560*(t15134 + t15137 + t15178 + t15179 + t12983*t9630 + t12966*t9932))*var2[4] + (t12641*t14769 + t12831*t14774 + (t15134 + t15137 + t12802*t8692 + t12808*t8747 + t12793*t8801 + t12786*t8831)*t9433 + t3522*(t15126 + t15129 - 1.*t12861*t8692 - 1.*t12854*t8747 - 1.*t12786*t9443 - 1.*t12793*t9467))*var2[5] + (0.15121*t12657 + 0.15121*t12702 + t12641*t14730 + t12831*t14735 + t3522*(t15126 + t15129 - 1.*t12695*t2818 - 1.*t12726*t3149 - 1.*t12632*t6361 - 1.*t12596*t7914) + (t15134 + t15137 + t12737*t6361 + t12747*t7914 + t12726*t8100 + t12695*t8210)*t9433)*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t12285*var2[0] + (-1.*t12290*t9552 + t12247*t9562)*var2[1] + (t12247*t9552 + t12290*t9562)*var2[2] + (t12304*t14849 + t12095*t14853 + (t10024*t12277 + t10136*t12281 + t10065*t12304 + t10099*t12312 + t15085 + t15087)*t9479 + t10024*(-1.*t10065*t12095 - 1.*t10099*t12152 + t15092 + t15095 - 1.*t12277*t9479 - 1.*t12281*t9573))*var2[3] + (t12266*t14813 + t12102*t14817 + t9619*(t15009 + t15013 + t15092 + t15095 - 1.*t12221*t9470 - 1.*t12090*t9630) + t9560*(t15000 + t15003 + t15085 + t15087 + t12262*t9630 + t12221*t9932))*var2[4] + (t11653*t14769 + t12048*t14774 + (t15000 + t15003 + t11831*t8692 + t11934*t8747 + t11808*t8801 + t11813*t8831)*t9433 + t3522*(t15009 + t15013 - 1.*t12088*t8692 - 1.*t12079*t8747 - 1.*t11813*t9443 - 1.*t11808*t9467))*var2[5] + (0.15121*t11356 + 0.15121*t11381 + t11653*t14730 + t12048*t14735 + t3522*(t15009 + t15013 - 1.*t11319*t2818 - 1.*t11298*t3149 - 1.*t10898*t6361 - 1.*t10907*t7914) + (t15000 + t15003 + t11640*t6361 + t11694*t7914 + t11298*t8100 + t11319*t8210)*t9433)*var2[12] + (0.038749*t11345 - 0.281209*t11352 + 1.e-6*(7.e-6*t10910 + 4.e-6*t11053 + 6.5e-11*t1400) + t11605*t14749 + t10889*t14754 + t15033*t2060 + 4.e-6*(-1.*t11576*t14749 - 1.*t10883*t14754 - 1.*t15033*t2792 - 1.*t15042*t3250) + t15042*t3335 - 7.e-6*(t11630*t14749 + t10896*t14754 + t1463*t15033 + t15042*t3492))*var2[13])*var2[14] + t10041*var3[0] + t14807*var3[1] + t14801*var3[2] + t14855*var3[3] + t14819*var3[4] + t14776*var3[5] + t14737*var3[12] + t14764*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void ddh_RlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
