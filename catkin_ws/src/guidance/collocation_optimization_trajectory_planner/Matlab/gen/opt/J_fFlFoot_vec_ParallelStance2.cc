/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:07 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1109;
  double t868;
  double t1141;
  double t942;
  double t1118;
  double t1136;
  double t1140;
  double t1144;
  double t1154;
  double t1160;
  double t1162;
  double t1169;
  double t1305;
  double t1296;
  double t1222;
  double t1233;
  double t1240;
  double t1242;
  double t1267;
  double t1269;
  double t1309;
  double t1311;
  double t1312;
  double t553;
  double t1405;
  double t1209;
  double t1215;
  double t1394;
  double t1401;
  double t1324;
  double t1420;
  double t1425;
  double t1427;
  double t1428;
  double t1442;
  double t1443;
  double t1454;
  double t1467;
  double t1473;
  double t1479;
  double t1487;
  double t1551;
  double t1552;
  double t1557;
  double t1558;
  double t1562;
  double t1568;
  double t1569;
  double t1571;
  double t1572;
  double t1575;
  double t1576;
  double t1578;
  double t1580;
  double t1281;
  double t1314;
  double t1318;
  double t1330;
  double t1335;
  double t1338;
  double t1438;
  double t1492;
  double t1500;
  double t1508;
  double t1512;
  double t1517;
  double t1574;
  double t1588;
  double t1589;
  double t1593;
  double t1597;
  double t1598;
  double t1628;
  double t1640;
  double t1654;
  double t1181;
  double t1758;
  double t1760;
  double t1770;
  double t1773;
  double t1782;
  double t1564;
  double t1826;
  double t1829;
  double t1830;
  double t1838;
  double t1840;
  double t1563;
  double t1872;
  double t1874;
  double t1876;
  double t1877;
  double t1885;
  double t1887;
  double t1888;
  double t1928;
  double t1932;
  double t1938;
  double t1939;
  double t1941;
  double t1866;
  double t1980;
  double t1981;
  double t1986;
  double t1987;
  double t1990;
  double t1992;
  double t1403;
  double t1406;
  double t1416;
  double t1417;
  double t1507;
  double t1522;
  double t1534;
  double t1560;
  double t1565;
  double t1592;
  double t1599;
  double t1605;
  double t1157;
  double t1200;
  double t1323;
  double t1339;
  double t1357;
  double t1207;
  double t1359;
  double t1377;
  double t2042;
  double t2051;
  double t1418;
  double t1539;
  double t1547;
  double t1566;
  double t1613;
  double t1616;
  double t1632;
  double t1637;
  double t1647;
  double t1650;
  double t1653;
  double t1656;
  double t1682;
  double t1683;
  double t1687;
  double t1692;
  double t1696;
  double t1698;
  double t1701;
  double t1707;
  double t1714;
  double t1717;
  double t1726;
  double t1736;
  double t1741;
  double t1742;
  double t1745;
  double t1765;
  double t1786;
  double t1787;
  double t1795;
  double t1796;
  double t1798;
  double t1751;
  double t1752;
  double t1753;
  double t1794;
  double t1801;
  double t1804;
  double t1832;
  double t1841;
  double t1842;
  double t1845;
  double t1848;
  double t1849;
  double t1821;
  double t1824;
  double t1844;
  double t1852;
  double t1853;
  double t1883;
  double t1892;
  double t1894;
  double t1897;
  double t1898;
  double t1902;
  double t1861;
  double t1863;
  double t1867;
  double t1896;
  double t1903;
  double t1905;
  double t1935;
  double t1945;
  double t1946;
  double t1952;
  double t1953;
  double t1955;
  double t1920;
  double t1921;
  double t1923;
  double t1949;
  double t1958;
  double t1961;
  double t1989;
  double t1993;
  double t1995;
  double t2005;
  double t2006;
  double t2008;
  double t1970;
  double t1974;
  double t1975;
  double t1996;
  double t2012;
  double t2013;
  double t2064;
  double t2066;
  double t2067;
  double t2080;
  double t2082;
  double t2083;
  double t2043;
  double t2047;
  double t2049;
  double t2334;
  double t2336;
  double t2338;
  double t2320;
  double t2324;
  double t2325;
  double t2330;
  double t2332;
  double t2333;
  double t2104;
  double t2105;
  double t2108;
  double t2114;
  double t2116;
  double t2120;
  double t2122;
  double t2123;
  double t2124;
  double t2179;
  double t2180;
  double t2188;
  double t2189;
  double t2207;
  double t2211;
  double t2222;
  double t2223;
  double t2225;
  double t2229;
  double t2230;
  double t2231;
  double t2237;
  double t2241;
  double t2242;
  double t2247;
  double t2248;
  double t2249;
  double t2260;
  double t2261;
  double t2266;
  double t2269;
  double t2272;
  double t2273;
  double t2286;
  double t2287;
  double t2288;
  double t2291;
  double t2292;
  double t2294;
  double t2301;
  double t2302;
  double t2305;
  double t2308;
  double t2312;
  double t2313;
  double t2482;
  double t2486;
  double t2487;
  double t2488;
  double t2489;
  double t2493;
  double t2498;
  double t2499;
  double t2500;
  double t2503;
  double t2505;
  double t2507;
  double t2508;
  double t2510;
  double t2511;
  double t2512;
  double t2513;
  double t2474;
  double t2475;
  double t2476;
  double t2479;
  double t2481;
  double t2494;
  double t2509;
  double t2514;
  double t2516;
  double t2520;
  double t2521;
  double t2529;
  double t2531;
  double t2533;
  double t2535;
  double t2536;
  double t2038;
  double t2039;
  double t2040;
  double t2477;
  double t2517;
  double t2537;
  double t2538;
  double t2541;
  double t2542;
  double t2543;
  double t2547;
  double t2550;
  double t2553;
  double t2557;
  double t2558;
  double t2560;
  double t2562;
  double t2568;
  double t2569;
  double t2571;
  double t2573;
  double t2577;
  double t2578;
  double t2580;
  double t2023;
  double t2027;
  double t2028;
  double t2595;
  double t2598;
  double t2600;
  double t2610;
  double t2615;
  double t2617;
  double t2587;
  double t2590;
  double t2591;
  double t2030;
  double t2031;
  double t2034;
  double t2619;
  double t2621;
  double t2623;
  double t2624;
  double t2770;
  double t2771;
  double t2773;
  double t2627;
  double t2632;
  double t2633;
  double t2635;
  double t2675;
  double t2676;
  double t2682;
  double t2689;
  double t2693;
  double t2694;
  double t2695;
  double t2700;
  double t2720;
  double t2721;
  double t2724;
  double t2725;
  double t2740;
  double t2743;
  double t2744;
  double t2745;
  double t2934;
  double t2935;
  double t2936;
  double t2939;
  double t2947;
  double t2948;
  double t2958;
  double t2959;
  double t2964;
  double t2943;
  double t2949;
  double t2951;
  double t3123;
  double t3128;
  double t3131;
  double t3135;
  double t3136;
  double t3139;
  double t3142;
  double t3143;
  double t3145;
  double t3150;
  double t3151;
  double t3140;
  double t3154;
  double t3160;
  double t3164;
  double t3165;
  double t3168;
  double t3178;
  double t3179;
  double t3185;
  double t3192;
  double t3198;
  double t3200;
  double t3204;
  double t3208;
  double t3209;
  double t1756;
  double t1810;
  double t1812;
  double t1825;
  double t1854;
  double t1856;
  double t3162;
  double t3169;
  double t3171;
  double t3216;
  double t3217;
  double t3221;
  double t3187;
  double t3210;
  double t3211;
  double t1870;
  double t1909;
  double t1911;
  double t3347;
  double t3348;
  double t3349;
  double t3354;
  double t3356;
  double t3358;
  double t3365;
  double t3366;
  double t3367;
  double t3351;
  double t3364;
  double t3368;
  double t3371;
  double t3376;
  double t3385;
  double t3390;
  double t3393;
  double t3375;
  double t3394;
  double t3395;
  double t3398;
  double t3402;
  double t3406;
  double t3420;
  double t3421;
  double t3422;
  double t3426;
  double t3427;
  double t3428;
  double t3434;
  double t1926;
  double t1965;
  double t1966;
  double t3396;
  double t3410;
  double t3413;
  double t3441;
  double t3445;
  double t3448;
  double t3425;
  double t3435;
  double t3436;
  double t1977;
  double t2016;
  double t2018;
  double t2766;
  double t2779;
  double t2798;
  double t2799;
  double t2826;
  double t2837;
  double t2845;
  double t2855;
  double t2879;
  double t2880;
  double t2892;
  double t2902;
  double t3615;
  double t3616;
  double t3619;
  double t2929;
  double t2952;
  double t3622;
  double t3623;
  double t3625;
  double t2982;
  double t2985;
  double t3640;
  double t3643;
  double t3647;
  double t2999;
  double t3002;
  double t3659;
  double t3660;
  double t3664;
  double t3015;
  double t3022;
  double t3671;
  double t3672;
  double t3674;
  double t3049;
  double t3051;
  double t3700;
  double t3703;
  double t3704;
  double t3078;
  double t3087;
  double t3173;
  double t3176;
  double t3238;
  double t3243;
  double t3269;
  double t3270;
  double t3287;
  double t3288;
  double t3305;
  double t3306;
  double t3324;
  double t3325;
  double t3418;
  double t3456;
  double t3459;
  double t3477;
  double t3496;
  double t3497;
  double t3535;
  double t3536;
  double t3552;
  double t3557;
  double t3804;
  double t3806;
  double t3815;
  double t3817;
  double t3834;
  double t3835;
  double t3845;
  double t3846;
  double t3864;
  double t3866;
  double t3880;
  double t3883;
  double t3912;
  double t4195;
  double t4196;
  double t4198;
  double t3923;
  double t3928;
  double t4237;
  double t4238;
  double t4239;
  double t3950;
  double t3966;
  double t3967;
  double t4278;
  double t4279;
  double t4281;
  double t4294;
  double t4295;
  double t4296;
  double t3990;
  double t3991;
  double t4010;
  double t4015;
  double t4251;
  double t4252;
  double t4254;
  double t4200;
  double t4205;
  double t4209;
  double t4480;
  double t4481;
  double t4484;
  double t4514;
  double t4516;
  double t4517;
  double t4566;
  double t4567;
  double t4571;
  double t4586;
  double t4587;
  double t4590;
  double t4535;
  double t4538;
  double t4541;
  double t4487;
  double t4489;
  double t4490;
  double t4767;
  double t4768;
  double t4770;
  double t4781;
  double t4782;
  double t4785;
  double t4790;
  double t4793;
  double t4795;
  double t4798;
  double t4800;
  double t4801;
  double t4803;
  double t4823;
  double t4826;
  double t4828;
  double t4834;
  double t4835;
  double t4836;
  double t4838;
  double t4843;
  double t4845;
  double t4846;
  double t4848;
  double t4850;
  double t4851;
  double t4863;
  double t4865;
  double t4867;
  double t4869;
  double t4872;
  double t4873;
  double t4875;
  double t4877;
  double t4882;
  double t4885;
  double t4890;
  double t4894;
  double t4895;
  double t4897;
  double t4904;
  double t4905;
  double t4906;
  double t4907;
  double t4908;
  double t4911;
  double t4916;
  double t4945;
  double t4946;
  double t4948;
  double t4778;
  double t4974;
  double t4975;
  double t4976;
  double t4977;
  t1109 = Cos(var1[8]);
  t868 = Cos(var1[7]);
  t1141 = -1. + t1109;
  t942 = -1. + t868;
  t1118 = -1.*t1109;
  t1136 = 1. + t1118;
  t1140 = 1.6e-11*t1136;
  t1144 = 1.6e-11*t1141;
  t1154 = 1. + t1140 + t1144;
  t1160 = 4.e-6*t1141;
  t1162 = -4.e-6*t1109;
  t1169 = t1160 + t1162;
  t1305 = Sin(var1[7]);
  t1296 = Cos(var1[6]);
  t1222 = 1.6e-11*t942;
  t1233 = 1. + t1222;
  t1240 = t1233*t1154;
  t1242 = 4.e-6*t942*t1169;
  t1267 = t1240 + t1242;
  t1269 = Sin(var1[6]);
  t1309 = 4.e-6*t1154*t1305;
  t1311 = t1169*t1305;
  t1312 = t1309 + t1311;
  t553 = Cos(var1[4]);
  t1405 = Sin(var1[8]);
  t1209 = Sin(var1[4]);
  t1215 = Cos(var1[5]);
  t1394 = -1.000000000016*t1136;
  t1401 = 1. + t1394;
  t1324 = Sin(var1[5]);
  t1420 = -4.e-6*t1401*t1305;
  t1425 = -4.e-6*t1233*t1405;
  t1427 = -4.e-6*t942*t1405;
  t1428 = t1420 + t1425 + t1427;
  t1442 = -1.*t868;
  t1443 = 1. + t1442;
  t1454 = -1.000000000016*t1443;
  t1467 = 1. + t1454;
  t1473 = t1467*t1401;
  t1479 = -1.000000000016*t1305*t1405;
  t1487 = t1473 + t1479;
  t1551 = -1. + t1140;
  t1552 = 4.e-6*t1551;
  t1557 = 4.e-6*t1136;
  t1558 = t1552 + t1557;
  t1562 = t1140 + t1118;
  t1568 = 4.e-6*t1558*t1305;
  t1569 = t1562*t1305;
  t1571 = -1.000000000016*t1467*t1405;
  t1572 = t1568 + t1569 + t1571;
  t1575 = t1233*t1558;
  t1576 = 4.e-6*t942*t1562;
  t1578 = 4.000000000064e-6*t1305*t1405;
  t1580 = t1575 + t1576 + t1578;
  t1281 = -1.*t1267*t1269;
  t1314 = t1296*t1312;
  t1318 = t1281 + t1314;
  t1330 = t1296*t1267;
  t1335 = t1269*t1312;
  t1338 = t1330 + t1335;
  t1438 = -1.*t1269*t1428;
  t1492 = t1296*t1487;
  t1500 = t1438 + t1492;
  t1508 = t1296*t1428;
  t1512 = t1269*t1487;
  t1517 = t1508 + t1512;
  t1574 = t1269*t1572;
  t1588 = t1296*t1580;
  t1589 = t1574 + t1588;
  t1593 = t1296*t1572;
  t1597 = -1.*t1269*t1580;
  t1598 = t1593 + t1597;
  t1628 = -1.*t1324*t1318;
  t1640 = -1.*t1324*t1500;
  t1654 = -1.*t1324*t1598;
  t1181 = t868*t1169;
  t1758 = 4.e-6*t868*t1154;
  t1760 = t1758 + t1181;
  t1770 = -1.6e-11*t1154*t1305;
  t1773 = -4.e-6*t1169*t1305;
  t1782 = t1770 + t1773;
  t1564 = 1.000000000016*t1305*t1405;
  t1826 = -1.000000000016*t1401*t1305;
  t1829 = -1.000000000016*t868*t1405;
  t1830 = t1826 + t1829;
  t1838 = -4.e-6*t868*t1401;
  t1840 = t1838 + t1578;
  t1563 = t868*t1562;
  t1872 = -1.6e-11*t1558*t1305;
  t1874 = -4.e-6*t1562*t1305;
  t1876 = 4.000000000064e-6*t868*t1405;
  t1877 = t1872 + t1874 + t1876;
  t1885 = 4.e-6*t868*t1558;
  t1887 = 1.000000000032*t1305*t1405;
  t1888 = t1885 + t1563 + t1887;
  t1928 = -1.000000000016*t1109*t1305;
  t1932 = t1928 + t1571;
  t1938 = -4.e-6*t1233*t1109;
  t1939 = -4.e-6*t942*t1109;
  t1941 = t1938 + t1939 + t1578;
  t1866 = 1.000000000016*t868*t1405;
  t1980 = 4.000000000064e-6*t1109*t1305;
  t1981 = 4.000000000064e-6*t1233*t1405;
  t1986 = 4.000000000064e-6*t942*t1405;
  t1987 = t1980 + t1981 + t1986;
  t1990 = -1.000000000016*t1467*t1109;
  t1992 = t1990 + t1887;
  t1403 = -1.*t1401*t1305;
  t1406 = -1.6e-11*t942*t1405;
  t1416 = -1.*t868*t1405;
  t1417 = t1403 + t1406 + t1416;
  t1507 = t1215*t1500;
  t1522 = -1.*t1324*t1517;
  t1534 = t1507 + t1522;
  t1560 = 4.e-6*t942*t1558;
  t1565 = t1560 + t1563 + t1564;
  t1592 = -1.*t1324*t1589;
  t1599 = t1215*t1598;
  t1605 = t1592 + t1599;
  t1157 = 4.e-6*t942*t1154;
  t1200 = t1157 + t1181;
  t1323 = t1215*t1318;
  t1339 = -1.*t1324*t1338;
  t1357 = t1323 + t1339;
  t1207 = t553*t1200;
  t1359 = -1.*t1209*t1357;
  t1377 = t1207 + t1359;
  t2042 = Sin(var1[3]);
  t2051 = Cos(var1[3]);
  t1418 = t553*t1417;
  t1539 = -1.*t1209*t1534;
  t1547 = t1418 + t1539;
  t1566 = t553*t1565;
  t1613 = -1.*t1209*t1605;
  t1616 = t1566 + t1613;
  t1632 = -1.*t1215*t1338;
  t1637 = t1628 + t1632;
  t1647 = -1.*t1215*t1517;
  t1650 = t1640 + t1647;
  t1653 = -1.*t1215*t1589;
  t1656 = t1653 + t1654;
  t1682 = -1.*t1296*t1267;
  t1683 = -1.*t1269*t1312;
  t1687 = t1682 + t1683;
  t1692 = t1215*t1687;
  t1696 = t1628 + t1692;
  t1698 = -1.*t1296*t1428;
  t1701 = -1.*t1269*t1487;
  t1707 = t1698 + t1701;
  t1714 = t1215*t1707;
  t1717 = t1640 + t1714;
  t1726 = -1.*t1269*t1572;
  t1736 = -1.*t1296*t1580;
  t1741 = t1726 + t1736;
  t1742 = t1215*t1741;
  t1745 = t1742 + t1654;
  t1765 = t1760*t1269;
  t1786 = t1296*t1782;
  t1787 = t1765 + t1786;
  t1795 = t1296*t1760;
  t1796 = -1.*t1269*t1782;
  t1798 = t1795 + t1796;
  t1751 = -4.e-6*t1154*t1305;
  t1752 = -1.*t1169*t1305;
  t1753 = t1751 + t1752;
  t1794 = -1.*t1324*t1787;
  t1801 = t1215*t1798;
  t1804 = t1794 + t1801;
  t1832 = t1269*t1830;
  t1841 = t1296*t1840;
  t1842 = t1832 + t1841;
  t1845 = t1296*t1830;
  t1848 = -1.*t1269*t1840;
  t1849 = t1845 + t1848;
  t1821 = -1.*t868*t1401;
  t1824 = t1821 + t1564;
  t1844 = -1.*t1324*t1842;
  t1852 = t1215*t1849;
  t1853 = t1844 + t1852;
  t1883 = -1.*t1269*t1877;
  t1892 = t1296*t1888;
  t1894 = t1883 + t1892;
  t1897 = t1296*t1877;
  t1898 = t1269*t1888;
  t1902 = t1897 + t1898;
  t1861 = -4.e-6*t1558*t1305;
  t1863 = -1.*t1562*t1305;
  t1867 = t1861 + t1863 + t1866;
  t1896 = t1215*t1894;
  t1903 = -1.*t1324*t1902;
  t1905 = t1896 + t1903;
  t1935 = t1269*t1932;
  t1945 = t1296*t1941;
  t1946 = t1935 + t1945;
  t1952 = t1296*t1932;
  t1953 = -1.*t1269*t1941;
  t1955 = t1952 + t1953;
  t1920 = -1.6e-11*t942*t1109;
  t1921 = -1.*t868*t1109;
  t1923 = t1920 + t1921 + t1564;
  t1949 = -1.*t1324*t1946;
  t1958 = t1215*t1955;
  t1961 = t1949 + t1958;
  t1989 = -1.*t1269*t1987;
  t1993 = t1296*t1992;
  t1995 = t1989 + t1993;
  t2005 = t1296*t1987;
  t2006 = t1269*t1992;
  t2008 = t2005 + t2006;
  t1970 = 1.000000000016*t1109*t1305;
  t1974 = 1.6000000000256e-11*t942*t1405;
  t1975 = t1970 + t1974 + t1866;
  t1996 = t1215*t1995;
  t2012 = -1.*t1324*t2008;
  t2013 = t1996 + t2012;
  t2064 = t1324*t1500;
  t2066 = t1215*t1517;
  t2067 = t2064 + t2066;
  t2080 = t1215*t1589;
  t2082 = t1324*t1598;
  t2083 = t2080 + t2082;
  t2043 = t1324*t1318;
  t2047 = t1215*t1338;
  t2049 = t2043 + t2047;
  t2334 = t2051*t2049;
  t2336 = -1.*t2042*t1377;
  t2338 = t2334 + t2336;
  t2320 = t2051*t2067;
  t2324 = -1.*t2042*t1547;
  t2325 = t2320 + t2324;
  t2330 = t2051*t2083;
  t2332 = -1.*t2042*t1616;
  t2333 = t2330 + t2332;
  t2104 = -1.*t1200*t1209;
  t2105 = -1.*t553*t1357;
  t2108 = t2104 + t2105;
  t2114 = -1.*t1209*t1417;
  t2116 = -1.*t553*t1534;
  t2120 = t2114 + t2116;
  t2122 = -1.*t1209*t1565;
  t2123 = -1.*t553*t1605;
  t2124 = t2122 + t2123;
  t2179 = t1324*t1687;
  t2180 = t1323 + t2179;
  t2188 = t1324*t1707;
  t2189 = t1507 + t2188;
  t2207 = t1324*t1741;
  t2211 = t2207 + t1599;
  t2222 = t1215*t1787;
  t2223 = t1324*t1798;
  t2225 = t2222 + t2223;
  t2229 = t553*t1753;
  t2230 = -1.*t1209*t1804;
  t2231 = t2229 + t2230;
  t2237 = t1215*t1842;
  t2241 = t1324*t1849;
  t2242 = t2237 + t2241;
  t2247 = t553*t1824;
  t2248 = -1.*t1209*t1853;
  t2249 = t2247 + t2248;
  t2260 = t1324*t1894;
  t2261 = t1215*t1902;
  t2266 = t2260 + t2261;
  t2269 = t553*t1867;
  t2272 = -1.*t1209*t1905;
  t2273 = t2269 + t2272;
  t2286 = t1215*t1946;
  t2287 = t1324*t1955;
  t2288 = t2286 + t2287;
  t2291 = t553*t1923;
  t2292 = -1.*t1209*t1961;
  t2294 = t2291 + t2292;
  t2301 = t1324*t1995;
  t2302 = t1215*t2008;
  t2305 = t2301 + t2302;
  t2308 = t553*t1975;
  t2312 = -1.*t1209*t2013;
  t2313 = t2308 + t2312;
  t2482 = 5.136e-14*var1[8];
  t2486 = -0.03874900000062*t1136;
  t2487 = 5.9484e-7*t1141;
  t2488 = -0.03875*t1109;
  t2489 = -0.299999999992*t1405;
  t2493 = t2482 + t2486 + t2487 + t2488 + t2489;
  t2498 = -1.284e-8*var1[8];
  t2499 = 1. + t1144;
  t2500 = 0.14871*t2499;
  t2503 = -1.5499600000248e-7*t1136;
  t2505 = -1.55e-7*t1141;
  t2507 = -1.199999999968e-6*t1405;
  t2508 = t2498 + t2500 + t2503 + t2505 + t2507;
  t2510 = 0.80321*t1401;
  t2511 = 0.503210000016051*t1136;
  t2512 = -4.05159380016e-7*t1405;
  t2513 = t2510 + t2511 + t2512;
  t2474 = -1.*t1296;
  t2475 = 1. + t2474;
  t2476 = 0.15121*t2475;
  t2479 = 0.281210000008499*t1443;
  t2481 = 0.03874900000062*t1305;
  t2494 = t1305*t2493;
  t2509 = 4.e-6*t1305*t2508;
  t2514 = t1467*t2513;
  t2516 = t2479 + t2481 + t2494 + t2509 + t2514;
  t2520 = -1.2484e-7*var1[7];
  t2521 = -1.5499600000248e-7*t1443;
  t2529 = 1.124840000016e-6*t1305;
  t2531 = 4.e-6*t942*t2493;
  t2533 = t1233*t2508;
  t2535 = -4.e-6*t1305*t2513;
  t2536 = t2520 + t2521 + t2529 + t2531 + t2533 + t2535;
  t2038 = t1200*t1209;
  t2039 = t553*t1357;
  t2040 = t2038 + t2039;
  t2477 = -0.15121*t1269;
  t2517 = t1269*t2516;
  t2537 = t1296*t2536;
  t2538 = t2476 + t2477 + t2517 + t2537;
  t2541 = -1.*t1324*t2538;
  t2542 = 0.15121*t1269;
  t2543 = t1296*t2516;
  t2547 = -1.*t1269*t2536;
  t2550 = t2476 + t2542 + t2543 + t2547;
  t2553 = t1215*t2550;
  t2557 = t2541 + t2553;
  t2558 = -1.*t1209*t2557;
  t2560 = 4.9936e-13*var1[7];
  t2562 = -0.03874900000062*t1443;
  t2568 = 0.281210000004*t1305;
  t2569 = t868*t2493;
  t2571 = 4.e-6*t942*t2508;
  t2573 = -1.*t1305*t2513;
  t2577 = t2560 + t2562 + t2568 + t2569 + t2571 + t2573;
  t2578 = t553*t2577;
  t2580 = t2558 + t2578;
  t2023 = t1209*t1417;
  t2027 = t553*t1534;
  t2028 = t2023 + t2027;
  t2595 = t553*t2557;
  t2598 = t1209*t2577;
  t2600 = t2595 + t2598;
  t2610 = t1215*t2538;
  t2615 = t1324*t2550;
  t2617 = t2610 + t2615;
  t2587 = -1.*t553*t2557;
  t2590 = -1.*t1209*t2577;
  t2591 = t2587 + t2590;
  t2030 = t1209*t1565;
  t2031 = t553*t1605;
  t2034 = t2030 + t2031;
  t2619 = -1.*t2049*t2617;
  t2621 = -1.*t1377*t2580;
  t2623 = -1.*t2040*t2600;
  t2624 = t2619 + t2621 + t2623;
  t2770 = -1.*t1215*t2538;
  t2771 = -1.*t1324*t2550;
  t2773 = t2770 + t2771;
  t2627 = t2617*t2067;
  t2632 = t2600*t2028;
  t2633 = t2580*t1547;
  t2635 = t2627 + t2632 + t2633;
  t2675 = t2049*t2617;
  t2676 = t1377*t2580;
  t2682 = t2040*t2600;
  t2689 = t2675 + t2676 + t2682;
  t2693 = -1.*t2617*t2083;
  t2694 = -1.*t2600*t2034;
  t2695 = -1.*t2580*t1616;
  t2700 = t2693 + t2694 + t2695;
  t2720 = -1.*t2617*t2067;
  t2721 = -1.*t2600*t2028;
  t2724 = -1.*t2580*t1547;
  t2725 = t2720 + t2721 + t2724;
  t2740 = t2617*t2083;
  t2743 = t2600*t2034;
  t2744 = t2580*t1616;
  t2745 = t2740 + t2743 + t2744;
  t2934 = 0.15121*t1296;
  t2935 = -1.*t1269*t2516;
  t2936 = -1.*t1296*t2536;
  t2939 = t2934 + t2542 + t2935 + t2936;
  t2947 = -0.15121*t1296;
  t2948 = t2947 + t2542 + t2543 + t2547;
  t2958 = t1215*t2939;
  t2959 = -1.*t1324*t2948;
  t2964 = t2958 + t2959;
  t2943 = t1324*t2939;
  t2949 = t1215*t2948;
  t2951 = t2943 + t2949;
  t3123 = 1.124840000016e-6*t868;
  t3128 = -1.5499600000248e-7*t1305;
  t3131 = -4.e-6*t1305*t2493;
  t3135 = -1.6e-11*t1305*t2508;
  t3136 = -4.e-6*t868*t2513;
  t3139 = -1.2484e-7 + t3123 + t3128 + t3131 + t3135 + t3136;
  t3142 = 0.03874900000062*t868;
  t3143 = 0.281210000008499*t1305;
  t3145 = 4.e-6*t868*t2508;
  t3150 = -1.000000000016*t1305*t2513;
  t3151 = t3142 + t3143 + t2569 + t3145 + t3150;
  t3140 = -1.*t1269*t3139;
  t3154 = t1296*t3151;
  t3160 = t3140 + t3154;
  t3164 = t1296*t3139;
  t3165 = t1269*t3151;
  t3168 = t3164 + t3165;
  t3178 = t1215*t3160;
  t3179 = -1.*t1324*t3168;
  t3185 = t3178 + t3179;
  t3192 = 0.281210000004*t868;
  t3198 = -0.03874900000062*t1305;
  t3200 = -1.*t1305*t2493;
  t3204 = -4.e-6*t1305*t2508;
  t3208 = -1.*t868*t2513;
  t3209 = 4.9936e-13 + t3192 + t3198 + t3200 + t3204 + t3208;
  t1756 = t1209*t1753;
  t1810 = t553*t1804;
  t1812 = t1756 + t1810;
  t1825 = t1209*t1824;
  t1854 = t553*t1853;
  t1856 = t1825 + t1854;
  t3162 = t1324*t3160;
  t3169 = t1215*t3168;
  t3171 = t3162 + t3169;
  t3216 = t553*t3185;
  t3217 = t1209*t3209;
  t3221 = t3216 + t3217;
  t3187 = -1.*t1209*t3185;
  t3210 = t553*t3209;
  t3211 = t3187 + t3210;
  t1870 = t1209*t1867;
  t1909 = t553*t1905;
  t1911 = t1870 + t1909;
  t3347 = -4.05159380016e-7*t1109;
  t3348 = -0.2999999999968*t1405;
  t3349 = t3347 + t3348;
  t3354 = -1.199999999968e-6*t1109;
  t3356 = 1.620637520064e-12*t1405;
  t3358 = -1.284e-8 + t3354 + t3356;
  t3365 = -0.299999999992*t1109;
  t3366 = 4.05159380016e-7*t1405;
  t3367 = 5.136e-14 + t3365 + t3366;
  t3351 = -4.e-6*t1305*t3349;
  t3364 = t1233*t3358;
  t3368 = 4.e-6*t942*t3367;
  t3371 = t3351 + t3364 + t3368;
  t3376 = t1467*t3349;
  t3385 = 4.e-6*t1305*t3358;
  t3390 = t1305*t3367;
  t3393 = t3376 + t3385 + t3390;
  t3375 = -1.*t1269*t3371;
  t3394 = t1296*t3393;
  t3395 = t3375 + t3394;
  t3398 = t1296*t3371;
  t3402 = t1269*t3393;
  t3406 = t3398 + t3402;
  t3420 = t1215*t3395;
  t3421 = -1.*t1324*t3406;
  t3422 = t3420 + t3421;
  t3426 = -1.*t1305*t3349;
  t3427 = 4.e-6*t942*t3358;
  t3428 = t868*t3367;
  t3434 = t3426 + t3427 + t3428;
  t1926 = t1209*t1923;
  t1965 = t553*t1961;
  t1966 = t1926 + t1965;
  t3396 = t1324*t3395;
  t3410 = t1215*t3406;
  t3413 = t3396 + t3410;
  t3441 = t553*t3422;
  t3445 = t1209*t3434;
  t3448 = t3441 + t3445;
  t3425 = -1.*t1209*t3422;
  t3435 = t553*t3434;
  t3436 = t3425 + t3435;
  t1977 = t1209*t1975;
  t2016 = t553*t2013;
  t2018 = t1977 + t2016;
  t2766 = -1.*t2049*t2557;
  t2779 = -1.*t1357*t2617;
  t2798 = t2557*t2067;
  t2799 = t2617*t1534;
  t2826 = t2049*t2557;
  t2837 = t1357*t2617;
  t2845 = -1.*t2617*t1605;
  t2855 = -1.*t2557*t2083;
  t2879 = -1.*t2557*t2067;
  t2880 = -1.*t2617*t1534;
  t2892 = t2617*t1605;
  t2902 = t2557*t2083;
  t3615 = -1.*t1357*t2557;
  t3616 = -1.*t1200*t2577;
  t3619 = t3615 + t2619 + t3616;
  t2929 = -1.*t2180*t2617;
  t2952 = -1.*t2049*t2951;
  t3622 = t2577*t1417;
  t3623 = t2557*t1534;
  t3625 = t3622 + t2627 + t3623;
  t2982 = t2617*t2189;
  t2985 = t2951*t2067;
  t3640 = t1357*t2557;
  t3643 = t1200*t2577;
  t3647 = t3640 + t2675 + t3643;
  t2999 = t2180*t2617;
  t3002 = t2049*t2951;
  t3659 = -1.*t2577*t1565;
  t3660 = -1.*t2557*t1605;
  t3664 = t3659 + t3660 + t2693;
  t3015 = -1.*t2617*t2211;
  t3022 = -1.*t2951*t2083;
  t3671 = -1.*t2577*t1417;
  t3672 = -1.*t2557*t1534;
  t3674 = t3671 + t2720 + t3672;
  t3049 = -1.*t2617*t2189;
  t3051 = -1.*t2951*t2067;
  t3700 = t2577*t1565;
  t3703 = t2557*t1605;
  t3704 = t3700 + t3703 + t2740;
  t3078 = t2617*t2211;
  t3087 = t2951*t2083;
  t3173 = -1.*t2049*t3171;
  t3176 = -1.*t2225*t2617;
  t3238 = t3171*t2067;
  t3243 = t2617*t2242;
  t3269 = t2049*t3171;
  t3270 = t2225*t2617;
  t3287 = -1.*t3171*t2083;
  t3288 = -1.*t2617*t2266;
  t3305 = -1.*t3171*t2067;
  t3306 = -1.*t2617*t2242;
  t3324 = t3171*t2083;
  t3325 = t2617*t2266;
  t3418 = -1.*t2049*t3413;
  t3456 = t3413*t2067;
  t3459 = t2617*t2288;
  t3477 = t2049*t3413;
  t3496 = -1.*t3413*t2083;
  t3497 = -1.*t2617*t2305;
  t3535 = -1.*t3413*t2067;
  t3536 = -1.*t2617*t2288;
  t3552 = t3413*t2083;
  t3557 = t2617*t2305;
  t3804 = -1.*t1200*t3209;
  t3806 = -1.*t1753*t2577;
  t3815 = t3209*t1417;
  t3817 = t2577*t1824;
  t3834 = t1200*t3209;
  t3835 = t1753*t2577;
  t3845 = -1.*t2577*t1867;
  t3846 = -1.*t3209*t1565;
  t3864 = -1.*t3209*t1417;
  t3866 = -1.*t2577*t1824;
  t3880 = t2577*t1867;
  t3883 = t3209*t1565;
  t3912 = -1.*t1200*t3434;
  t4195 = -1.*t1338*t2538;
  t4196 = -1.*t1318*t2550;
  t4198 = t4195 + t4196 + t3616;
  t3923 = t3434*t1417;
  t3928 = t2577*t1923;
  t4237 = t1338*t2538;
  t4238 = t1318*t2550;
  t4239 = t4237 + t4238 + t3643;
  t3950 = t1200*t3434;
  t3966 = -1.*t2577*t1975;
  t3967 = -1.*t3434*t1565;
  t4278 = -1.*t2550*t1500;
  t4279 = -1.*t2538*t1517;
  t4281 = t3671 + t4278 + t4279;
  t4294 = t2538*t1589;
  t4295 = t2550*t1598;
  t4296 = t3700 + t4294 + t4295;
  t3990 = -1.*t3434*t1417;
  t3991 = -1.*t2577*t1923;
  t4010 = t2577*t1975;
  t4015 = t3434*t1565;
  t4251 = -1.*t2538*t1589;
  t4252 = -1.*t2550*t1598;
  t4254 = t3659 + t4251 + t4252;
  t4200 = t2550*t1500;
  t4205 = t2538*t1517;
  t4209 = t3622 + t4200 + t4205;
  t4480 = -1.*t1312*t2516;
  t4481 = -1.*t1267*t2536;
  t4484 = t4480 + t3616 + t4481;
  t4514 = t1312*t2516;
  t4516 = t1267*t2536;
  t4517 = t4514 + t3643 + t4516;
  t4566 = -1.*t2536*t1428;
  t4567 = -1.*t2516*t1487;
  t4571 = t4566 + t3671 + t4567;
  t4586 = t2516*t1572;
  t4587 = t2536*t1580;
  t4590 = t4586 + t4587 + t3700;
  t4535 = -1.*t2516*t1572;
  t4538 = -1.*t2536*t1580;
  t4541 = t4535 + t4538 + t3659;
  t4487 = t2536*t1428;
  t4489 = t2516*t1487;
  t4490 = t4487 + t3622 + t4489;
  t4767 = t1154*t3358;
  t4768 = t1169*t3367;
  t4770 = t4767 + t4768;
  t4781 = t1169*t2493;
  t4782 = t1154*t2508;
  t4785 = t4781 + t4782;
  t4790 = 1.000000000016*t1109*t2513;
  t4793 = -1.*t1558*t3358;
  t4795 = -1.*t1562*t3367;
  t4798 = 1.000000000016*t3349*t1405;
  t4800 = -1.000000000016*t2493*t1405;
  t4801 = -4.000000000064e-6*t2508*t1405;
  t4803 = t4790 + t4793 + t4795 + t4798 + t4800 + t4801;
  t4823 = -1.*t1169*t2493;
  t4826 = -1.*t1154*t2508;
  t4828 = t4823 + t4826;
  t4834 = -1.*t1154*t3358;
  t4835 = -1.*t1169*t3367;
  t4836 = t4834 + t4835;
  t4838 = t1401*t3349;
  t4843 = -1.*t1109*t2493;
  t4845 = -4.e-6*t1109*t2508;
  t4846 = -1.000000000016*t2513*t1405;
  t4848 = -4.e-6*t3358*t1405;
  t4850 = -1.*t3367*t1405;
  t4851 = t4838 + t4843 + t4845 + t4846 + t4848 + t4850;
  t4863 = -1.*t1401*t2513;
  t4865 = t2493*t1405;
  t4867 = 4.e-6*t2508*t1405;
  t4869 = t4863 + t4865 + t4867;
  t4872 = -1.000000000016*t1109*t2513;
  t4873 = t1558*t3358;
  t4875 = t1562*t3367;
  t4877 = -1.000000000016*t3349*t1405;
  t4882 = 1.000000000016*t2493*t1405;
  t4885 = 4.000000000064e-6*t2508*t1405;
  t4890 = t4872 + t4873 + t4875 + t4877 + t4882 + t4885;
  t4894 = t1562*t2493;
  t4895 = t1558*t2508;
  t4897 = t4894 + t4895 + t4846;
  t4904 = -1.*t1401*t3349;
  t4905 = t1109*t2493;
  t4906 = 4.e-6*t1109*t2508;
  t4907 = 1.000000000016*t2513*t1405;
  t4908 = 4.e-6*t3358*t1405;
  t4911 = t3367*t1405;
  t4916 = t4904 + t4905 + t4906 + t4907 + t4908 + t4911;
  t4945 = -1.*t1562*t2493;
  t4946 = -1.*t1558*t2508;
  t4948 = t4945 + t4946 + t4907;
  t4778 = -0.03874900000062*t1405;
  t4974 = t1401*t2513;
  t4975 = -1.*t2493*t1405;
  t4976 = -4.e-6*t2508*t1405;
  t4977 = t4974 + t4975 + t4976;
  p_output1[0]=t1547*var2[0] + t1616*var2[1] + t1377*var2[2];
  p_output1[1]=t1650*t553*var2[0] + t1656*t553*var2[1] + t1637*t553*var2[2];
  p_output1[2]=t1717*t553*var2[0] + t1745*t553*var2[1] + t1696*t553*var2[2];
  p_output1[3]=t1856*var2[0] + t1911*var2[1] + t1812*var2[2];
  p_output1[4]=t1966*var2[0] + t2018*var2[1];
  p_output1[5]=t2028;
  p_output1[6]=t2034;
  p_output1[7]=t2040;
  p_output1[8]=(-1.*t1547*t2051 - 1.*t2042*t2067)*var2[0] + (-1.*t1616*t2051 - 1.*t2042*t2083)*var2[1] + (-1.*t2042*t2049 - 1.*t1377*t2051)*var2[2];
  p_output1[9]=-1.*t2042*t2120*var2[0] - 1.*t2042*t2124*var2[1] - 1.*t2042*t2108*var2[2];
  p_output1[10]=(t1209*t1650*t2042 + t1534*t2051)*var2[0] + (t1209*t1656*t2042 + t1605*t2051)*var2[1] + (t1209*t1637*t2042 + t1357*t2051)*var2[2];
  p_output1[11]=(t1209*t1717*t2042 + t2051*t2189)*var2[0] + (t1209*t1745*t2042 + t2051*t2211)*var2[1] + (t1209*t1696*t2042 + t2051*t2180)*var2[2];
  p_output1[12]=(t2051*t2242 - 1.*t2042*t2249)*var2[0] + (t2051*t2266 - 1.*t2042*t2273)*var2[1] + (t2051*t2225 - 1.*t2042*t2231)*var2[2];
  p_output1[13]=(t2051*t2288 - 1.*t2042*t2294)*var2[0] + (t2051*t2305 - 1.*t2042*t2313)*var2[1];
  p_output1[14]=t2325;
  p_output1[15]=t2333;
  p_output1[16]=t2338;
  p_output1[17]=t2325*var2[0] + t2333*var2[1] + t2338*var2[2];
  p_output1[18]=t2051*t2120*var2[0] + t2051*t2124*var2[1] + t2051*t2108*var2[2];
  p_output1[19]=(t1534*t2042 - 1.*t1209*t1650*t2051)*var2[0] + (t1605*t2042 - 1.*t1209*t1656*t2051)*var2[1] + (t1357*t2042 - 1.*t1209*t1637*t2051)*var2[2];
  p_output1[20]=(-1.*t1209*t1717*t2051 + t2042*t2189)*var2[0] + (-1.*t1209*t1745*t2051 + t2042*t2211)*var2[1] + (-1.*t1209*t1696*t2051 + t2042*t2180)*var2[2];
  p_output1[21]=(t2042*t2242 + t2051*t2249)*var2[0] + (t2042*t2266 + t2051*t2273)*var2[1] + (t2042*t2225 + t2051*t2231)*var2[2];
  p_output1[22]=(t2042*t2288 + t2051*t2294)*var2[0] + (t2042*t2305 + t2051*t2313)*var2[1];
  p_output1[23]=t1547*t2051 + t2042*t2067;
  p_output1[24]=t1616*t2051 + t2042*t2083;
  p_output1[25]=t2042*t2049 + t1377*t2051;
  p_output1[26]=(t2034*(t2040*t2580 + t2108*t2580 + t1377*t2591 + t1377*t2600) + t2040*(-1.*t2034*t2580 - 1.*t2124*t2580 - 1.*t1616*t2591 - 1.*t1616*t2600) + t1616*t2689 + t1377*t2700)*var2[0] + (t2028*(-1.*t2040*t2580 - 1.*t2108*t2580 - 1.*t1377*t2591 - 1.*t1377*t2600) + t2040*(t2028*t2580 + t2120*t2580 + t1547*t2591 + t1547*t2600) + t1547*t2624 + t1377*t2635)*var2[1] + (t2034*(-1.*t2028*t2580 - 1.*t2120*t2580 - 1.*t1547*t2591 - 1.*t1547*t2600) + t2028*(t2034*t2580 + t2124*t2580 + t1616*t2591 + t1616*t2600) + t1616*t2725 + t1547*t2745)*var2[2];
  p_output1[27]=(t1656*t2689*t553 + t1637*t2700*t553 + t2040*(t1209*t1656*t2580 + t1209*t1616*t2773 + t2845 + t2855 - 1.*t1656*t2600*t553 - 1.*t2034*t2773*t553) + t2034*(-1.*t1209*t1637*t2580 - 1.*t1209*t1377*t2773 + t2826 + t2837 + t1637*t2600*t553 + t2040*t2773*t553))*var2[0] + (t1650*t2624*t553 + t1637*t2635*t553 + t2040*(-1.*t1209*t1650*t2580 - 1.*t1209*t1547*t2773 + t2798 + t2799 + t1650*t2600*t553 + t2028*t2773*t553) + t2028*(t1209*t1637*t2580 + t2766 + t1209*t1377*t2773 + t2779 - 1.*t1637*t2600*t553 - 1.*t2040*t2773*t553))*var2[1] + (t1656*t2725*t553 + t1650*t2745*t553 + t2034*(t1209*t1650*t2580 + t1209*t1547*t2773 + t2879 + t2880 - 1.*t1650*t2600*t553 - 1.*t2028*t2773*t553) + t2028*(-1.*t1209*t1656*t2580 - 1.*t1209*t1616*t2773 + t2892 + t2902 + t1656*t2600*t553 + t2034*t2773*t553))*var2[2];
  p_output1[28]=(t1745*t2689*t553 + t1696*t2700*t553 + t2040*(t1209*t1745*t2580 + t1209*t1616*t2964 + t3015 + t3022 - 1.*t1745*t2600*t553 - 1.*t2034*t2964*t553) + t2034*(-1.*t1209*t1696*t2580 - 1.*t1209*t1377*t2964 + t2999 + t3002 + t1696*t2600*t553 + t2040*t2964*t553))*var2[0] + (t1717*t2624*t553 + t1696*t2635*t553 + t2040*(-1.*t1209*t1717*t2580 - 1.*t1209*t1547*t2964 + t2982 + t2985 + t1717*t2600*t553 + t2028*t2964*t553) + t2028*(t1209*t1696*t2580 + t2929 + t2952 + t1209*t1377*t2964 - 1.*t1696*t2600*t553 - 1.*t2040*t2964*t553))*var2[1] + (t1745*t2725*t553 + t1717*t2745*t553 + t2034*(t1209*t1717*t2580 + t1209*t1547*t2964 + t3049 + t3051 - 1.*t1717*t2600*t553 - 1.*t2028*t2964*t553) + t2028*(-1.*t1209*t1745*t2580 - 1.*t1209*t1616*t2964 + t3078 + t3087 + t1745*t2600*t553 + t2034*t2964*t553))*var2[2];
  p_output1[29]=(t1911*t2689 + t1812*t2700 + t2034*(t2231*t2580 + t1812*t2600 + t1377*t3211 + t2040*t3221 + t3269 + t3270) + t2040*(-1.*t2273*t2580 - 1.*t1911*t2600 - 1.*t1616*t3211 - 1.*t2034*t3221 + t3287 + t3288))*var2[0] + (t1856*t2624 + t1812*t2635 + t2028*(-1.*t2231*t2580 - 1.*t1812*t2600 + t3173 + t3176 - 1.*t1377*t3211 - 1.*t2040*t3221) + t2040*(t2249*t2580 + t1856*t2600 + t1547*t3211 + t2028*t3221 + t3238 + t3243))*var2[1] + (t1911*t2725 + t1856*t2745 + t2034*(-1.*t2249*t2580 - 1.*t1856*t2600 - 1.*t1547*t3211 - 1.*t2028*t3221 + t3305 + t3306) + t2028*(t2273*t2580 + t1911*t2600 + t1616*t3211 + t2034*t3221 + t3324 + t3325))*var2[2];
  p_output1[30]=(t2018*t2689 + t2034*(t1377*t3436 + t2040*t3448 + t3477) + t2040*(-1.*t2313*t2580 - 1.*t2018*t2600 - 1.*t1616*t3436 - 1.*t2034*t3448 + t3496 + t3497))*var2[0] + (t1966*t2624 + t2028*(t3418 - 1.*t1377*t3436 - 1.*t2040*t3448) + t2040*(t2294*t2580 + t1966*t2600 + t1547*t3436 + t2028*t3448 + t3456 + t3459))*var2[1] + (t2018*t2725 + t1966*t2745 + t2034*(-1.*t2294*t2580 - 1.*t1966*t2600 - 1.*t1547*t3436 - 1.*t2028*t3448 + t3535 + t3536) + t2028*(t2313*t2580 + t2018*t2600 + t1616*t3436 + t2034*t3448 + t3552 + t3557))*var2[2];
  p_output1[31]=t2034*t2689 + t2040*t2700;
  p_output1[32]=t2028*t2624 + t2040*t2635;
  p_output1[33]=t2034*t2725 + t2028*t2745;
  p_output1[34]=(t2083*(t1637*t2557 + t1357*t2773 + t2826 + t2837) + t2049*(-1.*t1656*t2557 - 1.*t1605*t2773 + t2845 + t2855) + t1605*t3647 + t1357*t3664)*var2[0] + (t2067*(-1.*t1637*t2557 + t2766 - 1.*t1357*t2773 + t2779) + t2049*(t1650*t2557 + t1534*t2773 + t2798 + t2799) + t1534*t3619 + t1357*t3625)*var2[1] + (t2083*(-1.*t1650*t2557 - 1.*t1534*t2773 + t2879 + t2880) + t2067*(t1656*t2557 + t1605*t2773 + t2892 + t2902) + t1605*t3674 + t1534*t3704)*var2[2];
  p_output1[35]=(t2083*(t1696*t2557 + t1357*t2964 + t2999 + t3002) + t2049*(-1.*t1745*t2557 - 1.*t1605*t2964 + t3015 + t3022) + t2211*t3647 + t2180*t3664)*var2[0] + (t2067*(-1.*t1696*t2557 + t2929 + t2952 - 1.*t1357*t2964) + t2049*(t1717*t2557 + t1534*t2964 + t2982 + t2985) + t2189*t3619 + t2180*t3625)*var2[1] + (t2083*(-1.*t1717*t2557 - 1.*t1534*t2964 + t3049 + t3051) + t2067*(t1745*t2557 + t1605*t2964 + t3078 + t3087) + t2211*t3674 + t2189*t3704)*var2[2];
  p_output1[36]=(t2266*t3647 + t2225*t3664 + t2083*(t1804*t2557 + t1357*t3185 + t3269 + t3270 + t3834 + t3835) + t2049*(-1.*t1905*t2557 - 1.*t1605*t3185 + t3287 + t3288 + t3845 + t3846))*var2[0] + (t2242*t3619 + t2225*t3625 + t2067*(-1.*t1804*t2557 + t3173 + t3176 - 1.*t1357*t3185 + t3804 + t3806) + t2049*(t1853*t2557 + t1534*t3185 + t3238 + t3243 + t3815 + t3817))*var2[1] + (t2266*t3674 + t2242*t3704 + t2083*(-1.*t1853*t2557 - 1.*t1534*t3185 + t3305 + t3306 + t3864 + t3866) + t2067*(t1905*t2557 + t1605*t3185 + t3324 + t3325 + t3880 + t3883))*var2[2];
  p_output1[37]=(t2305*t3647 + t2083*(t1357*t3422 + t3477 + t3950) + t2049*(-1.*t2013*t2557 - 1.*t1605*t3422 + t3496 + t3497 + t3966 + t3967))*var2[0] + (t2288*t3619 + t2067*(t3418 - 1.*t1357*t3422 + t3912) + t2049*(t1961*t2557 + t1534*t3422 + t3456 + t3459 + t3923 + t3928))*var2[1] + (t2305*t3674 + t2288*t3704 + t2083*(-1.*t1961*t2557 - 1.*t1534*t3422 + t3535 + t3536 + t3990 + t3991) + t2067*(t2013*t2557 + t1605*t3422 + t3552 + t3557 + t4010 + t4015))*var2[2];
  p_output1[38]=t2083*t3647 + t2049*t3664;
  p_output1[39]=t2067*t3619 + t2049*t3625;
  p_output1[40]=t2083*t3674 + t2067*t3704;
  p_output1[41]=(t1565*(t1318*t2538 + t1687*t2550 + t1318*t2939 + t1338*t2948) + t1200*(-1.*t1598*t2538 - 1.*t1741*t2550 - 1.*t1598*t2939 - 1.*t1589*t2948))*var2[0] + (t1417*(-1.*t1318*t2538 - 1.*t1687*t2550 - 1.*t1318*t2939 - 1.*t1338*t2948) + t1200*(t1500*t2538 + t1707*t2550 + t1500*t2939 + t1517*t2948))*var2[1] + (t1565*(-1.*t1500*t2538 - 1.*t1707*t2550 - 1.*t1500*t2939 - 1.*t1517*t2948) + t1417*(t1598*t2538 + t1741*t2550 + t1598*t2939 + t1589*t2948))*var2[2];
  p_output1[42]=(t1565*(t1787*t2538 + t1798*t2550 + t1318*t3160 + t1338*t3168 + t3834 + t3835) + t1200*(-1.*t1902*t2538 - 1.*t1894*t2550 - 1.*t1598*t3160 - 1.*t1589*t3168 + t3845 + t3846) + t1867*t4239 + t1753*t4254)*var2[0] + (t1417*(-1.*t1787*t2538 - 1.*t1798*t2550 - 1.*t1318*t3160 - 1.*t1338*t3168 + t3804 + t3806) + t1200*(t1842*t2538 + t1849*t2550 + t1500*t3160 + t1517*t3168 + t3815 + t3817) + t1824*t4198 + t1753*t4209)*var2[1] + (t1565*(-1.*t1842*t2538 - 1.*t1849*t2550 - 1.*t1500*t3160 - 1.*t1517*t3168 + t3864 + t3866) + t1417*(t1902*t2538 + t1894*t2550 + t1598*t3160 + t1589*t3168 + t3880 + t3883) + t1867*t4281 + t1824*t4296)*var2[2];
  p_output1[43]=(t1565*(t1318*t3395 + t1338*t3406 + t3950) + t1200*(-1.*t2008*t2538 - 1.*t1995*t2550 - 1.*t1598*t3395 - 1.*t1589*t3406 + t3966 + t3967) + t1975*t4239)*var2[0] + (t1417*(-1.*t1318*t3395 - 1.*t1338*t3406 + t3912) + t1200*(t1946*t2538 + t1955*t2550 + t1500*t3395 + t1517*t3406 + t3923 + t3928) + t1923*t4198)*var2[1] + (t1565*(-1.*t1946*t2538 - 1.*t1955*t2550 - 1.*t1500*t3395 - 1.*t1517*t3406 + t3990 + t3991) + t1417*(t2008*t2538 + t1995*t2550 + t1598*t3395 + t1589*t3406 + t4010 + t4015) + t1975*t4281 + t1923*t4296)*var2[2];
  p_output1[44]=t1565*t4239 + t1200*t4254;
  p_output1[45]=t1417*t4198 + t1200*t4209;
  p_output1[46]=t1565*t4281 + t1417*t4296;
  p_output1[47]=(0.15121*t1830 - 0.15121*t1840 + t1565*(t1760*t2516 + t1782*t2536 + t1267*t3139 + t1312*t3151 + t3834 + t3835) + t1200*(-1.*t1888*t2516 - 1.*t1877*t2536 - 1.*t1580*t3139 - 1.*t1572*t3151 + t3845 + t3846) + t1867*t4517 + t1753*t4541)*var2[0] + (-0.15121*t1877 + 0.15121*t1888 + t1417*(-1.*t1760*t2516 - 1.*t1782*t2536 - 1.*t1267*t3139 - 1.*t1312*t3151 + t3804 + t3806) + t1200*(t1830*t2516 + t1840*t2536 + t1428*t3139 + t1487*t3151 + t3815 + t3817) + t1824*t4484 + t1753*t4490)*var2[1] + (0.15121*t1760 - 0.15121*t1782 + t1565*(-1.*t1830*t2516 - 1.*t1840*t2536 - 1.*t1428*t3139 - 1.*t1487*t3151 + t3864 + t3866) + t1417*(t1888*t2516 + t1877*t2536 + t1580*t3139 + t1572*t3151 + t3880 + t3883) + t1867*t4571 + t1824*t4590)*var2[2];
  p_output1[48]=(0.15121*t1932 - 0.15121*t1941 + t1565*(t1267*t3371 + t1312*t3393 + t3950) + t1200*(-1.*t1992*t2516 - 1.*t1987*t2536 - 1.*t1580*t3371 - 1.*t1572*t3393 + t3966 + t3967) + t1975*t4517)*var2[0] + (-0.15121*t1987 + 0.15121*t1992 + t1417*(-1.*t1267*t3371 - 1.*t1312*t3393 + t3912) + t1200*(t1932*t2516 + t1941*t2536 + t1428*t3371 + t1487*t3393 + t3923 + t3928) + t1923*t4484)*var2[1] + (t1565*(-1.*t1932*t2516 - 1.*t1941*t2536 - 1.*t1428*t3371 - 1.*t1487*t3393 + t3990 + t3991) + t1417*(t1992*t2516 + t1987*t2536 + t1580*t3371 + t1572*t3393 + t4010 + t4015) + t1975*t4571 + t1923*t4590)*var2[2];
  p_output1[49]=-0.15121*t1428 + 0.15121*t1487 + t1565*t4517 + t1200*t4541;
  p_output1[50]=0.15121*t1572 - 0.15121*t1580 + t1417*t4484 + t1200*t4490;
  p_output1[51]=-0.15121*t1267 + 0.15121*t1312 + t1565*t4571 + t1417*t4590;
  p_output1[52]=(-0.281210000004*t1109 + t1558*t4770 + t4778 + 4.000000000064e-6*t1405*t4785 + t1154*t4803 + 4.e-6*(-1.*t1562*t4770 - 1.000000000016*t1405*t4785 - 1.*t1169*t4803))*var2[0] + (-0.03874900000062*t1109 + 0.281210000008499*t1405 - 4.e-6*t1109*t4828 - 4.e-6*t1405*t4836 + t1154*t4851 + 4.e-6*(t1109*t4828 + t1405*t4836 - 1.*t1169*t4851))*var2[1] + (4.000000000064e-6*t1405*t4869 - 4.e-6*t1405*t4890 - 4.e-6*t1109*t4897 + t1558*t4916 + 4.e-6*(-1.000000000016*t1405*t4869 + t1405*t4890 + t1109*t4897 - 1.*t1562*t4916))*var2[2];
  p_output1[53]=0.038749*t1401 - 0.281210000004*t1405 + t1558*t4785 + t1154*t4948 + 4.e-6*(-1.*t1562*t4785 - 1.*t1169*t4948);
  p_output1[54]=1.e-6*t1558 + 0.28121*t1562 + t4778 - 4.e-6*t1405*t4828 + t1154*t4977 + 4.e-6*(t1405*t4828 - 1.*t1169*t4977);
  p_output1[55]=1.e-6*t1154 + 0.28121*t1169 + t1558*t4869 - 4.e-6*t1405*t4897 + 4.e-6*(-1.*t1562*t4869 + t1405*t4897);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_ParallelStance2.hh"

namespace ParallelStance2
{

void J_fFlFoot_vec_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
