/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:04 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1095;
  double t830;
  double t1133;
  double t918;
  double t1102;
  double t1126;
  double t1129;
  double t1136;
  double t1154;
  double t1160;
  double t1161;
  double t1167;
  double t1261;
  double t1251;
  double t1201;
  double t1211;
  double t1216;
  double t1217;
  double t1232;
  double t1239;
  double t1263;
  double t1264;
  double t1265;
  double t315;
  double t1320;
  double t1192;
  double t1199;
  double t1311;
  double t1316;
  double t1274;
  double t1332;
  double t1339;
  double t1340;
  double t1342;
  double t1351;
  double t1352;
  double t1360;
  double t1366;
  double t1369;
  double t1373;
  double t1377;
  double t1449;
  double t1450;
  double t1453;
  double t1454;
  double t1457;
  double t1471;
  double t1473;
  double t1474;
  double t1475;
  double t1477;
  double t1478;
  double t1479;
  double t1481;
  double t1244;
  double t1266;
  double t1272;
  double t1278;
  double t1281;
  double t1283;
  double t1349;
  double t1380;
  double t1389;
  double t1406;
  double t1408;
  double t1409;
  double t1476;
  double t1491;
  double t1497;
  double t1502;
  double t1505;
  double t1507;
  double t1525;
  double t1542;
  double t1557;
  double t1173;
  double t1623;
  double t1625;
  double t1631;
  double t1633;
  double t1634;
  double t1466;
  double t1663;
  double t1664;
  double t1665;
  double t1667;
  double t1670;
  double t1461;
  double t1706;
  double t1708;
  double t1716;
  double t1717;
  double t1722;
  double t1723;
  double t1729;
  double t1768;
  double t1770;
  double t1772;
  double t1774;
  double t1778;
  double t1701;
  double t1805;
  double t1807;
  double t1809;
  double t1811;
  double t1816;
  double t1818;
  double t1317;
  double t1322;
  double t1327;
  double t1329;
  double t1405;
  double t1418;
  double t1434;
  double t1456;
  double t1469;
  double t1500;
  double t1508;
  double t1512;
  double t1157;
  double t1183;
  double t1273;
  double t1284;
  double t1290;
  double t1185;
  double t1294;
  double t1299;
  double t1862;
  double t1872;
  double t1330;
  double t1437;
  double t1445;
  double t1470;
  double t1513;
  double t1516;
  double t1530;
  double t1537;
  double t1544;
  double t1550;
  double t1556;
  double t1559;
  double t1569;
  double t1572;
  double t1573;
  double t1577;
  double t1581;
  double t1583;
  double t1585;
  double t1589;
  double t1590;
  double t1591;
  double t1600;
  double t1604;
  double t1610;
  double t1613;
  double t1614;
  double t1627;
  double t1637;
  double t1639;
  double t1643;
  double t1648;
  double t1649;
  double t1617;
  double t1618;
  double t1619;
  double t1641;
  double t1650;
  double t1652;
  double t1666;
  double t1672;
  double t1673;
  double t1682;
  double t1683;
  double t1684;
  double t1658;
  double t1659;
  double t1676;
  double t1685;
  double t1686;
  double t1718;
  double t1730;
  double t1733;
  double t1741;
  double t1743;
  double t1745;
  double t1696;
  double t1698;
  double t1703;
  double t1740;
  double t1746;
  double t1751;
  double t1771;
  double t1782;
  double t1783;
  double t1787;
  double t1788;
  double t1791;
  double t1760;
  double t1762;
  double t1763;
  double t1784;
  double t1792;
  double t1793;
  double t1812;
  double t1823;
  double t1826;
  double t1832;
  double t1833;
  double t1835;
  double t1800;
  double t1801;
  double t1803;
  double t1830;
  double t1838;
  double t1839;
  double t1876;
  double t1878;
  double t1879;
  double t1887;
  double t1888;
  double t1889;
  double t1863;
  double t1867;
  double t1869;
  double t2142;
  double t2143;
  double t2148;
  double t2133;
  double t2135;
  double t2136;
  double t2139;
  double t2140;
  double t2141;
  double t1909;
  double t1910;
  double t1911;
  double t1914;
  double t1915;
  double t1916;
  double t1919;
  double t1920;
  double t1923;
  double t1969;
  double t1975;
  double t1981;
  double t1982;
  double t2001;
  double t2006;
  double t2016;
  double t2017;
  double t2020;
  double t2023;
  double t2024;
  double t2029;
  double t2036;
  double t2037;
  double t2040;
  double t2044;
  double t2045;
  double t2055;
  double t2071;
  double t2074;
  double t2076;
  double t2087;
  double t2088;
  double t2091;
  double t2101;
  double t2102;
  double t2103;
  double t2105;
  double t2106;
  double t2108;
  double t2114;
  double t2118;
  double t2120;
  double t2123;
  double t2124;
  double t2125;
  double t2283;
  double t2284;
  double t2285;
  double t2287;
  double t2288;
  double t2290;
  double t2292;
  double t2295;
  double t2296;
  double t2297;
  double t2298;
  double t2304;
  double t2307;
  double t2309;
  double t2313;
  double t2315;
  double t2316;
  double t2272;
  double t2276;
  double t2279;
  double t2281;
  double t2282;
  double t2291;
  double t2308;
  double t2318;
  double t2320;
  double t2324;
  double t2325;
  double t2331;
  double t2334;
  double t2335;
  double t2339;
  double t2340;
  double t1857;
  double t1858;
  double t1860;
  double t2280;
  double t2321;
  double t2343;
  double t2348;
  double t2351;
  double t2353;
  double t2354;
  double t2358;
  double t2359;
  double t2363;
  double t2364;
  double t2365;
  double t2367;
  double t2368;
  double t2369;
  double t2371;
  double t2372;
  double t2373;
  double t2377;
  double t2379;
  double t2383;
  double t1849;
  double t1850;
  double t1851;
  double t2394;
  double t2395;
  double t2398;
  double t2410;
  double t2412;
  double t2415;
  double t2388;
  double t2390;
  double t2392;
  double t1853;
  double t1854;
  double t1856;
  double t2419;
  double t2421;
  double t2422;
  double t2424;
  double t2601;
  double t2604;
  double t2605;
  double t2427;
  double t2428;
  double t2430;
  double t2432;
  double t2475;
  double t2478;
  double t2481;
  double t2482;
  double t2489;
  double t2490;
  double t2495;
  double t2496;
  double t2524;
  double t2525;
  double t2526;
  double t2527;
  double t2541;
  double t2545;
  double t2551;
  double t2552;
  double t2750;
  double t2753;
  double t2758;
  double t2761;
  double t2763;
  double t2768;
  double t2780;
  double t2781;
  double t2783;
  double t2762;
  double t2770;
  double t2771;
  double t2906;
  double t2908;
  double t2910;
  double t2911;
  double t2912;
  double t2916;
  double t2919;
  double t2923;
  double t2924;
  double t2929;
  double t2930;
  double t2918;
  double t2931;
  double t2932;
  double t2934;
  double t2937;
  double t2938;
  double t2946;
  double t2948;
  double t2949;
  double t2952;
  double t2953;
  double t2954;
  double t2957;
  double t2960;
  double t2962;
  double t1621;
  double t1653;
  double t1656;
  double t1661;
  double t1687;
  double t1691;
  double t2933;
  double t2940;
  double t2941;
  double t2967;
  double t2969;
  double t2978;
  double t2950;
  double t2963;
  double t2965;
  double t1705;
  double t1752;
  double t1753;
  double t3127;
  double t3129;
  double t3132;
  double t3135;
  double t3154;
  double t3157;
  double t3160;
  double t3161;
  double t3162;
  double t3134;
  double t3159;
  double t3163;
  double t3169;
  double t3173;
  double t3174;
  double t3178;
  double t3179;
  double t3170;
  double t3180;
  double t3182;
  double t3187;
  double t3189;
  double t3194;
  double t3203;
  double t3205;
  double t3206;
  double t3209;
  double t3211;
  double t3215;
  double t3216;
  double t1767;
  double t1794;
  double t1798;
  double t3184;
  double t3195;
  double t3198;
  double t3224;
  double t3225;
  double t3226;
  double t3208;
  double t3219;
  double t3220;
  double t1804;
  double t1845;
  double t1846;
  double t2598;
  double t2610;
  double t2630;
  double t2631;
  double t2650;
  double t2655;
  double t2671;
  double t2679;
  double t2699;
  double t2702;
  double t2716;
  double t2720;
  double t3405;
  double t3409;
  double t3415;
  double t2749;
  double t2776;
  double t3424;
  double t3426;
  double t3428;
  double t2800;
  double t2802;
  double t3455;
  double t3457;
  double t3459;
  double t2822;
  double t2823;
  double t3485;
  double t3486;
  double t3487;
  double t2833;
  double t2840;
  double t3497;
  double t3499;
  double t3500;
  double t2864;
  double t2867;
  double t3521;
  double t3524;
  double t3527;
  double t2880;
  double t2888;
  double t2943;
  double t2944;
  double t2996;
  double t2997;
  double t3027;
  double t3031;
  double t3064;
  double t3065;
  double t3088;
  double t3090;
  double t3104;
  double t3105;
  double t3202;
  double t3237;
  double t3240;
  double t3259;
  double t3279;
  double t3280;
  double t3308;
  double t3310;
  double t3340;
  double t3349;
  double t3629;
  double t3630;
  double t3646;
  double t3649;
  double t3666;
  double t3669;
  double t3683;
  double t3686;
  double t3698;
  double t3700;
  double t3709;
  double t3713;
  double t3729;
  double t3969;
  double t3970;
  double t3971;
  double t3736;
  double t3737;
  double t4000;
  double t4002;
  double t4005;
  double t3751;
  double t3757;
  double t3758;
  double t4053;
  double t4054;
  double t4064;
  double t4085;
  double t4086;
  double t4088;
  double t3794;
  double t3795;
  double t3811;
  double t3813;
  double t4024;
  double t4025;
  double t4028;
  double t3974;
  double t3975;
  double t3976;
  double t4264;
  double t4266;
  double t4267;
  double t4299;
  double t4301;
  double t4303;
  double t4345;
  double t4346;
  double t4347;
  double t4358;
  double t4359;
  double t4360;
  double t4317;
  double t4319;
  double t4320;
  double t4277;
  double t4278;
  double t4279;
  double t4533;
  double t4534;
  double t4538;
  double t4543;
  double t4544;
  double t4545;
  double t4550;
  double t4552;
  double t4554;
  double t4555;
  double t4557;
  double t4559;
  double t4562;
  double t4581;
  double t4583;
  double t4586;
  double t4590;
  double t4592;
  double t4593;
  double t4596;
  double t4597;
  double t4600;
  double t4601;
  double t4604;
  double t4605;
  double t4609;
  double t4625;
  double t4626;
  double t4628;
  double t4630;
  double t4635;
  double t4636;
  double t4638;
  double t4639;
  double t4640;
  double t4641;
  double t4642;
  double t4648;
  double t4649;
  double t4650;
  double t4654;
  double t4655;
  double t4656;
  double t4658;
  double t4659;
  double t4662;
  double t4663;
  double t4695;
  double t4696;
  double t4697;
  double t4541;
  double t4719;
  double t4721;
  double t4723;
  double t4724;
  t1095 = Cos(var1[8]);
  t830 = Cos(var1[7]);
  t1133 = -1. + t1095;
  t918 = -1. + t830;
  t1102 = -1.*t1095;
  t1126 = 1. + t1102;
  t1129 = 1.6e-11*t1126;
  t1136 = 1.6e-11*t1133;
  t1154 = 1. + t1129 + t1136;
  t1160 = 4.e-6*t1133;
  t1161 = -4.e-6*t1095;
  t1167 = t1160 + t1161;
  t1261 = Sin(var1[7]);
  t1251 = Cos(var1[6]);
  t1201 = 1.6e-11*t918;
  t1211 = 1. + t1201;
  t1216 = t1211*t1154;
  t1217 = 4.e-6*t918*t1167;
  t1232 = t1216 + t1217;
  t1239 = Sin(var1[6]);
  t1263 = 4.e-6*t1154*t1261;
  t1264 = t1167*t1261;
  t1265 = t1263 + t1264;
  t315 = Cos(var1[4]);
  t1320 = Sin(var1[8]);
  t1192 = Sin(var1[4]);
  t1199 = Cos(var1[5]);
  t1311 = -1.000000000016*t1126;
  t1316 = 1. + t1311;
  t1274 = Sin(var1[5]);
  t1332 = -4.e-6*t1316*t1261;
  t1339 = -4.e-6*t1211*t1320;
  t1340 = -4.e-6*t918*t1320;
  t1342 = t1332 + t1339 + t1340;
  t1351 = -1.*t830;
  t1352 = 1. + t1351;
  t1360 = -1.000000000016*t1352;
  t1366 = 1. + t1360;
  t1369 = t1366*t1316;
  t1373 = -1.000000000016*t1261*t1320;
  t1377 = t1369 + t1373;
  t1449 = -1. + t1129;
  t1450 = 4.e-6*t1449;
  t1453 = 4.e-6*t1126;
  t1454 = t1450 + t1453;
  t1457 = t1129 + t1102;
  t1471 = 4.e-6*t1454*t1261;
  t1473 = t1457*t1261;
  t1474 = -1.000000000016*t1366*t1320;
  t1475 = t1471 + t1473 + t1474;
  t1477 = t1211*t1454;
  t1478 = 4.e-6*t918*t1457;
  t1479 = 4.000000000064e-6*t1261*t1320;
  t1481 = t1477 + t1478 + t1479;
  t1244 = -1.*t1232*t1239;
  t1266 = t1251*t1265;
  t1272 = t1244 + t1266;
  t1278 = t1251*t1232;
  t1281 = t1239*t1265;
  t1283 = t1278 + t1281;
  t1349 = -1.*t1239*t1342;
  t1380 = t1251*t1377;
  t1389 = t1349 + t1380;
  t1406 = t1251*t1342;
  t1408 = t1239*t1377;
  t1409 = t1406 + t1408;
  t1476 = t1239*t1475;
  t1491 = t1251*t1481;
  t1497 = t1476 + t1491;
  t1502 = t1251*t1475;
  t1505 = -1.*t1239*t1481;
  t1507 = t1502 + t1505;
  t1525 = -1.*t1274*t1272;
  t1542 = -1.*t1274*t1389;
  t1557 = -1.*t1274*t1507;
  t1173 = t830*t1167;
  t1623 = 4.e-6*t830*t1154;
  t1625 = t1623 + t1173;
  t1631 = -1.6e-11*t1154*t1261;
  t1633 = -4.e-6*t1167*t1261;
  t1634 = t1631 + t1633;
  t1466 = 1.000000000016*t1261*t1320;
  t1663 = -1.000000000016*t1316*t1261;
  t1664 = -1.000000000016*t830*t1320;
  t1665 = t1663 + t1664;
  t1667 = -4.e-6*t830*t1316;
  t1670 = t1667 + t1479;
  t1461 = t830*t1457;
  t1706 = -1.6e-11*t1454*t1261;
  t1708 = -4.e-6*t1457*t1261;
  t1716 = 4.000000000064e-6*t830*t1320;
  t1717 = t1706 + t1708 + t1716;
  t1722 = 4.e-6*t830*t1454;
  t1723 = 1.000000000032*t1261*t1320;
  t1729 = t1722 + t1461 + t1723;
  t1768 = -1.000000000016*t1095*t1261;
  t1770 = t1768 + t1474;
  t1772 = -4.e-6*t1211*t1095;
  t1774 = -4.e-6*t918*t1095;
  t1778 = t1772 + t1774 + t1479;
  t1701 = 1.000000000016*t830*t1320;
  t1805 = 4.000000000064e-6*t1095*t1261;
  t1807 = 4.000000000064e-6*t1211*t1320;
  t1809 = 4.000000000064e-6*t918*t1320;
  t1811 = t1805 + t1807 + t1809;
  t1816 = -1.000000000016*t1366*t1095;
  t1818 = t1816 + t1723;
  t1317 = -1.*t1316*t1261;
  t1322 = -1.6e-11*t918*t1320;
  t1327 = -1.*t830*t1320;
  t1329 = t1317 + t1322 + t1327;
  t1405 = t1199*t1389;
  t1418 = -1.*t1274*t1409;
  t1434 = t1405 + t1418;
  t1456 = 4.e-6*t918*t1454;
  t1469 = t1456 + t1461 + t1466;
  t1500 = -1.*t1274*t1497;
  t1508 = t1199*t1507;
  t1512 = t1500 + t1508;
  t1157 = 4.e-6*t918*t1154;
  t1183 = t1157 + t1173;
  t1273 = t1199*t1272;
  t1284 = -1.*t1274*t1283;
  t1290 = t1273 + t1284;
  t1185 = t315*t1183;
  t1294 = -1.*t1192*t1290;
  t1299 = t1185 + t1294;
  t1862 = Sin(var1[3]);
  t1872 = Cos(var1[3]);
  t1330 = t315*t1329;
  t1437 = -1.*t1192*t1434;
  t1445 = t1330 + t1437;
  t1470 = t315*t1469;
  t1513 = -1.*t1192*t1512;
  t1516 = t1470 + t1513;
  t1530 = -1.*t1199*t1283;
  t1537 = t1525 + t1530;
  t1544 = -1.*t1199*t1409;
  t1550 = t1542 + t1544;
  t1556 = -1.*t1199*t1497;
  t1559 = t1556 + t1557;
  t1569 = -1.*t1251*t1232;
  t1572 = -1.*t1239*t1265;
  t1573 = t1569 + t1572;
  t1577 = t1199*t1573;
  t1581 = t1525 + t1577;
  t1583 = -1.*t1251*t1342;
  t1585 = -1.*t1239*t1377;
  t1589 = t1583 + t1585;
  t1590 = t1199*t1589;
  t1591 = t1542 + t1590;
  t1600 = -1.*t1239*t1475;
  t1604 = -1.*t1251*t1481;
  t1610 = t1600 + t1604;
  t1613 = t1199*t1610;
  t1614 = t1613 + t1557;
  t1627 = t1625*t1239;
  t1637 = t1251*t1634;
  t1639 = t1627 + t1637;
  t1643 = t1251*t1625;
  t1648 = -1.*t1239*t1634;
  t1649 = t1643 + t1648;
  t1617 = -4.e-6*t1154*t1261;
  t1618 = -1.*t1167*t1261;
  t1619 = t1617 + t1618;
  t1641 = -1.*t1274*t1639;
  t1650 = t1199*t1649;
  t1652 = t1641 + t1650;
  t1666 = t1239*t1665;
  t1672 = t1251*t1670;
  t1673 = t1666 + t1672;
  t1682 = t1251*t1665;
  t1683 = -1.*t1239*t1670;
  t1684 = t1682 + t1683;
  t1658 = -1.*t830*t1316;
  t1659 = t1658 + t1466;
  t1676 = -1.*t1274*t1673;
  t1685 = t1199*t1684;
  t1686 = t1676 + t1685;
  t1718 = -1.*t1239*t1717;
  t1730 = t1251*t1729;
  t1733 = t1718 + t1730;
  t1741 = t1251*t1717;
  t1743 = t1239*t1729;
  t1745 = t1741 + t1743;
  t1696 = -4.e-6*t1454*t1261;
  t1698 = -1.*t1457*t1261;
  t1703 = t1696 + t1698 + t1701;
  t1740 = t1199*t1733;
  t1746 = -1.*t1274*t1745;
  t1751 = t1740 + t1746;
  t1771 = t1239*t1770;
  t1782 = t1251*t1778;
  t1783 = t1771 + t1782;
  t1787 = t1251*t1770;
  t1788 = -1.*t1239*t1778;
  t1791 = t1787 + t1788;
  t1760 = -1.6e-11*t918*t1095;
  t1762 = -1.*t830*t1095;
  t1763 = t1760 + t1762 + t1466;
  t1784 = -1.*t1274*t1783;
  t1792 = t1199*t1791;
  t1793 = t1784 + t1792;
  t1812 = -1.*t1239*t1811;
  t1823 = t1251*t1818;
  t1826 = t1812 + t1823;
  t1832 = t1251*t1811;
  t1833 = t1239*t1818;
  t1835 = t1832 + t1833;
  t1800 = 1.000000000016*t1095*t1261;
  t1801 = 1.6000000000256e-11*t918*t1320;
  t1803 = t1800 + t1801 + t1701;
  t1830 = t1199*t1826;
  t1838 = -1.*t1274*t1835;
  t1839 = t1830 + t1838;
  t1876 = t1274*t1389;
  t1878 = t1199*t1409;
  t1879 = t1876 + t1878;
  t1887 = t1199*t1497;
  t1888 = t1274*t1507;
  t1889 = t1887 + t1888;
  t1863 = t1274*t1272;
  t1867 = t1199*t1283;
  t1869 = t1863 + t1867;
  t2142 = t1872*t1869;
  t2143 = -1.*t1862*t1299;
  t2148 = t2142 + t2143;
  t2133 = t1872*t1879;
  t2135 = -1.*t1862*t1445;
  t2136 = t2133 + t2135;
  t2139 = t1872*t1889;
  t2140 = -1.*t1862*t1516;
  t2141 = t2139 + t2140;
  t1909 = -1.*t1183*t1192;
  t1910 = -1.*t315*t1290;
  t1911 = t1909 + t1910;
  t1914 = -1.*t1192*t1329;
  t1915 = -1.*t315*t1434;
  t1916 = t1914 + t1915;
  t1919 = -1.*t1192*t1469;
  t1920 = -1.*t315*t1512;
  t1923 = t1919 + t1920;
  t1969 = t1274*t1573;
  t1975 = t1273 + t1969;
  t1981 = t1274*t1589;
  t1982 = t1405 + t1981;
  t2001 = t1274*t1610;
  t2006 = t2001 + t1508;
  t2016 = t1199*t1639;
  t2017 = t1274*t1649;
  t2020 = t2016 + t2017;
  t2023 = t315*t1619;
  t2024 = -1.*t1192*t1652;
  t2029 = t2023 + t2024;
  t2036 = t1199*t1673;
  t2037 = t1274*t1684;
  t2040 = t2036 + t2037;
  t2044 = t315*t1659;
  t2045 = -1.*t1192*t1686;
  t2055 = t2044 + t2045;
  t2071 = t1274*t1733;
  t2074 = t1199*t1745;
  t2076 = t2071 + t2074;
  t2087 = t315*t1703;
  t2088 = -1.*t1192*t1751;
  t2091 = t2087 + t2088;
  t2101 = t1199*t1783;
  t2102 = t1274*t1791;
  t2103 = t2101 + t2102;
  t2105 = t315*t1763;
  t2106 = -1.*t1192*t1793;
  t2108 = t2105 + t2106;
  t2114 = t1274*t1826;
  t2118 = t1199*t1835;
  t2120 = t2114 + t2118;
  t2123 = t315*t1803;
  t2124 = -1.*t1192*t1839;
  t2125 = t2123 + t2124;
  t2283 = 5.136e-14*var1[8];
  t2284 = -0.03874900000062*t1126;
  t2285 = 5.9484e-7*t1133;
  t2287 = -0.03875*t1095;
  t2288 = -0.299999999992*t1320;
  t2290 = t2283 + t2284 + t2285 + t2287 + t2288;
  t2292 = -1.284e-8*var1[8];
  t2295 = 1. + t1136;
  t2296 = 0.14871*t2295;
  t2297 = -1.5499600000248e-7*t1126;
  t2298 = -1.55e-7*t1133;
  t2304 = -1.199999999968e-6*t1320;
  t2307 = t2292 + t2296 + t2297 + t2298 + t2304;
  t2309 = 0.80321*t1316;
  t2313 = 0.503210000016051*t1126;
  t2315 = -4.05159380016e-7*t1320;
  t2316 = t2309 + t2313 + t2315;
  t2272 = -1.*t1251;
  t2276 = 1. + t2272;
  t2279 = 0.15121*t2276;
  t2281 = 0.281210000008499*t1352;
  t2282 = 0.03874900000062*t1261;
  t2291 = t1261*t2290;
  t2308 = 4.e-6*t1261*t2307;
  t2318 = t1366*t2316;
  t2320 = t2281 + t2282 + t2291 + t2308 + t2318;
  t2324 = -1.2484e-7*var1[7];
  t2325 = -1.5499600000248e-7*t1352;
  t2331 = 1.124840000016e-6*t1261;
  t2334 = 4.e-6*t918*t2290;
  t2335 = t1211*t2307;
  t2339 = -4.e-6*t1261*t2316;
  t2340 = t2324 + t2325 + t2331 + t2334 + t2335 + t2339;
  t1857 = t1183*t1192;
  t1858 = t315*t1290;
  t1860 = t1857 + t1858;
  t2280 = -0.15121*t1239;
  t2321 = t1239*t2320;
  t2343 = t1251*t2340;
  t2348 = t2279 + t2280 + t2321 + t2343;
  t2351 = -1.*t1274*t2348;
  t2353 = 0.15121*t1239;
  t2354 = t1251*t2320;
  t2358 = -1.*t1239*t2340;
  t2359 = t2279 + t2353 + t2354 + t2358;
  t2363 = t1199*t2359;
  t2364 = t2351 + t2363;
  t2365 = -1.*t1192*t2364;
  t2367 = 4.9936e-13*var1[7];
  t2368 = -0.03874900000062*t1352;
  t2369 = 0.281210000004*t1261;
  t2371 = t830*t2290;
  t2372 = 4.e-6*t918*t2307;
  t2373 = -1.*t1261*t2316;
  t2377 = t2367 + t2368 + t2369 + t2371 + t2372 + t2373;
  t2379 = t315*t2377;
  t2383 = t2365 + t2379;
  t1849 = t1192*t1329;
  t1850 = t315*t1434;
  t1851 = t1849 + t1850;
  t2394 = t315*t2364;
  t2395 = t1192*t2377;
  t2398 = t2394 + t2395;
  t2410 = t1199*t2348;
  t2412 = t1274*t2359;
  t2415 = t2410 + t2412;
  t2388 = -1.*t315*t2364;
  t2390 = -1.*t1192*t2377;
  t2392 = t2388 + t2390;
  t1853 = t1192*t1469;
  t1854 = t315*t1512;
  t1856 = t1853 + t1854;
  t2419 = -1.*t1869*t2415;
  t2421 = -1.*t1299*t2383;
  t2422 = -1.*t1860*t2398;
  t2424 = t2419 + t2421 + t2422;
  t2601 = -1.*t1199*t2348;
  t2604 = -1.*t1274*t2359;
  t2605 = t2601 + t2604;
  t2427 = t2415*t1879;
  t2428 = t2398*t1851;
  t2430 = t2383*t1445;
  t2432 = t2427 + t2428 + t2430;
  t2475 = t1869*t2415;
  t2478 = t1299*t2383;
  t2481 = t1860*t2398;
  t2482 = t2475 + t2478 + t2481;
  t2489 = -1.*t2415*t1889;
  t2490 = -1.*t2398*t1856;
  t2495 = -1.*t2383*t1516;
  t2496 = t2489 + t2490 + t2495;
  t2524 = -1.*t2415*t1879;
  t2525 = -1.*t2398*t1851;
  t2526 = -1.*t2383*t1445;
  t2527 = t2524 + t2525 + t2526;
  t2541 = t2415*t1889;
  t2545 = t2398*t1856;
  t2551 = t2383*t1516;
  t2552 = t2541 + t2545 + t2551;
  t2750 = 0.15121*t1251;
  t2753 = -1.*t1239*t2320;
  t2758 = -1.*t1251*t2340;
  t2761 = t2750 + t2353 + t2753 + t2758;
  t2763 = -0.15121*t1251;
  t2768 = t2763 + t2353 + t2354 + t2358;
  t2780 = t1199*t2761;
  t2781 = -1.*t1274*t2768;
  t2783 = t2780 + t2781;
  t2762 = t1274*t2761;
  t2770 = t1199*t2768;
  t2771 = t2762 + t2770;
  t2906 = 1.124840000016e-6*t830;
  t2908 = -1.5499600000248e-7*t1261;
  t2910 = -4.e-6*t1261*t2290;
  t2911 = -1.6e-11*t1261*t2307;
  t2912 = -4.e-6*t830*t2316;
  t2916 = -1.2484e-7 + t2906 + t2908 + t2910 + t2911 + t2912;
  t2919 = 0.03874900000062*t830;
  t2923 = 0.281210000008499*t1261;
  t2924 = 4.e-6*t830*t2307;
  t2929 = -1.000000000016*t1261*t2316;
  t2930 = t2919 + t2923 + t2371 + t2924 + t2929;
  t2918 = -1.*t1239*t2916;
  t2931 = t1251*t2930;
  t2932 = t2918 + t2931;
  t2934 = t1251*t2916;
  t2937 = t1239*t2930;
  t2938 = t2934 + t2937;
  t2946 = t1199*t2932;
  t2948 = -1.*t1274*t2938;
  t2949 = t2946 + t2948;
  t2952 = 0.281210000004*t830;
  t2953 = -0.03874900000062*t1261;
  t2954 = -1.*t1261*t2290;
  t2957 = -4.e-6*t1261*t2307;
  t2960 = -1.*t830*t2316;
  t2962 = 4.9936e-13 + t2952 + t2953 + t2954 + t2957 + t2960;
  t1621 = t1192*t1619;
  t1653 = t315*t1652;
  t1656 = t1621 + t1653;
  t1661 = t1192*t1659;
  t1687 = t315*t1686;
  t1691 = t1661 + t1687;
  t2933 = t1274*t2932;
  t2940 = t1199*t2938;
  t2941 = t2933 + t2940;
  t2967 = t315*t2949;
  t2969 = t1192*t2962;
  t2978 = t2967 + t2969;
  t2950 = -1.*t1192*t2949;
  t2963 = t315*t2962;
  t2965 = t2950 + t2963;
  t1705 = t1192*t1703;
  t1752 = t315*t1751;
  t1753 = t1705 + t1752;
  t3127 = -4.05159380016e-7*t1095;
  t3129 = -0.2999999999968*t1320;
  t3132 = t3127 + t3129;
  t3135 = -1.199999999968e-6*t1095;
  t3154 = 1.620637520064e-12*t1320;
  t3157 = -1.284e-8 + t3135 + t3154;
  t3160 = -0.299999999992*t1095;
  t3161 = 4.05159380016e-7*t1320;
  t3162 = 5.136e-14 + t3160 + t3161;
  t3134 = -4.e-6*t1261*t3132;
  t3159 = t1211*t3157;
  t3163 = 4.e-6*t918*t3162;
  t3169 = t3134 + t3159 + t3163;
  t3173 = t1366*t3132;
  t3174 = 4.e-6*t1261*t3157;
  t3178 = t1261*t3162;
  t3179 = t3173 + t3174 + t3178;
  t3170 = -1.*t1239*t3169;
  t3180 = t1251*t3179;
  t3182 = t3170 + t3180;
  t3187 = t1251*t3169;
  t3189 = t1239*t3179;
  t3194 = t3187 + t3189;
  t3203 = t1199*t3182;
  t3205 = -1.*t1274*t3194;
  t3206 = t3203 + t3205;
  t3209 = -1.*t1261*t3132;
  t3211 = 4.e-6*t918*t3157;
  t3215 = t830*t3162;
  t3216 = t3209 + t3211 + t3215;
  t1767 = t1192*t1763;
  t1794 = t315*t1793;
  t1798 = t1767 + t1794;
  t3184 = t1274*t3182;
  t3195 = t1199*t3194;
  t3198 = t3184 + t3195;
  t3224 = t315*t3206;
  t3225 = t1192*t3216;
  t3226 = t3224 + t3225;
  t3208 = -1.*t1192*t3206;
  t3219 = t315*t3216;
  t3220 = t3208 + t3219;
  t1804 = t1192*t1803;
  t1845 = t315*t1839;
  t1846 = t1804 + t1845;
  t2598 = -1.*t1869*t2364;
  t2610 = -1.*t1290*t2415;
  t2630 = t2364*t1879;
  t2631 = t2415*t1434;
  t2650 = t1869*t2364;
  t2655 = t1290*t2415;
  t2671 = -1.*t2415*t1512;
  t2679 = -1.*t2364*t1889;
  t2699 = -1.*t2364*t1879;
  t2702 = -1.*t2415*t1434;
  t2716 = t2415*t1512;
  t2720 = t2364*t1889;
  t3405 = -1.*t1290*t2364;
  t3409 = -1.*t1183*t2377;
  t3415 = t3405 + t2419 + t3409;
  t2749 = -1.*t1975*t2415;
  t2776 = -1.*t1869*t2771;
  t3424 = t2377*t1329;
  t3426 = t2364*t1434;
  t3428 = t3424 + t2427 + t3426;
  t2800 = t2415*t1982;
  t2802 = t2771*t1879;
  t3455 = t1290*t2364;
  t3457 = t1183*t2377;
  t3459 = t3455 + t2475 + t3457;
  t2822 = t1975*t2415;
  t2823 = t1869*t2771;
  t3485 = -1.*t2377*t1469;
  t3486 = -1.*t2364*t1512;
  t3487 = t3485 + t3486 + t2489;
  t2833 = -1.*t2415*t2006;
  t2840 = -1.*t2771*t1889;
  t3497 = -1.*t2377*t1329;
  t3499 = -1.*t2364*t1434;
  t3500 = t3497 + t2524 + t3499;
  t2864 = -1.*t2415*t1982;
  t2867 = -1.*t2771*t1879;
  t3521 = t2377*t1469;
  t3524 = t2364*t1512;
  t3527 = t3521 + t3524 + t2541;
  t2880 = t2415*t2006;
  t2888 = t2771*t1889;
  t2943 = -1.*t1869*t2941;
  t2944 = -1.*t2020*t2415;
  t2996 = t2941*t1879;
  t2997 = t2415*t2040;
  t3027 = t1869*t2941;
  t3031 = t2020*t2415;
  t3064 = -1.*t2941*t1889;
  t3065 = -1.*t2415*t2076;
  t3088 = -1.*t2941*t1879;
  t3090 = -1.*t2415*t2040;
  t3104 = t2941*t1889;
  t3105 = t2415*t2076;
  t3202 = -1.*t1869*t3198;
  t3237 = t3198*t1879;
  t3240 = t2415*t2103;
  t3259 = t1869*t3198;
  t3279 = -1.*t3198*t1889;
  t3280 = -1.*t2415*t2120;
  t3308 = -1.*t3198*t1879;
  t3310 = -1.*t2415*t2103;
  t3340 = t3198*t1889;
  t3349 = t2415*t2120;
  t3629 = -1.*t1183*t2962;
  t3630 = -1.*t1619*t2377;
  t3646 = t2962*t1329;
  t3649 = t2377*t1659;
  t3666 = t1183*t2962;
  t3669 = t1619*t2377;
  t3683 = -1.*t2377*t1703;
  t3686 = -1.*t2962*t1469;
  t3698 = -1.*t2962*t1329;
  t3700 = -1.*t2377*t1659;
  t3709 = t2377*t1703;
  t3713 = t2962*t1469;
  t3729 = -1.*t1183*t3216;
  t3969 = -1.*t1283*t2348;
  t3970 = -1.*t1272*t2359;
  t3971 = t3969 + t3970 + t3409;
  t3736 = t3216*t1329;
  t3737 = t2377*t1763;
  t4000 = t1283*t2348;
  t4002 = t1272*t2359;
  t4005 = t4000 + t4002 + t3457;
  t3751 = t1183*t3216;
  t3757 = -1.*t2377*t1803;
  t3758 = -1.*t3216*t1469;
  t4053 = -1.*t2359*t1389;
  t4054 = -1.*t2348*t1409;
  t4064 = t3497 + t4053 + t4054;
  t4085 = t2348*t1497;
  t4086 = t2359*t1507;
  t4088 = t3521 + t4085 + t4086;
  t3794 = -1.*t3216*t1329;
  t3795 = -1.*t2377*t1763;
  t3811 = t2377*t1803;
  t3813 = t3216*t1469;
  t4024 = -1.*t2348*t1497;
  t4025 = -1.*t2359*t1507;
  t4028 = t3485 + t4024 + t4025;
  t3974 = t2359*t1389;
  t3975 = t2348*t1409;
  t3976 = t3424 + t3974 + t3975;
  t4264 = -1.*t1265*t2320;
  t4266 = -1.*t1232*t2340;
  t4267 = t4264 + t3409 + t4266;
  t4299 = t1265*t2320;
  t4301 = t1232*t2340;
  t4303 = t4299 + t3457 + t4301;
  t4345 = -1.*t2340*t1342;
  t4346 = -1.*t2320*t1377;
  t4347 = t4345 + t3497 + t4346;
  t4358 = t2320*t1475;
  t4359 = t2340*t1481;
  t4360 = t4358 + t4359 + t3521;
  t4317 = -1.*t2320*t1475;
  t4319 = -1.*t2340*t1481;
  t4320 = t4317 + t4319 + t3485;
  t4277 = t2340*t1342;
  t4278 = t2320*t1377;
  t4279 = t4277 + t3424 + t4278;
  t4533 = t1154*t3157;
  t4534 = t1167*t3162;
  t4538 = t4533 + t4534;
  t4543 = t1167*t2290;
  t4544 = t1154*t2307;
  t4545 = t4543 + t4544;
  t4550 = 1.000000000016*t1095*t2316;
  t4552 = -1.*t1454*t3157;
  t4554 = -1.*t1457*t3162;
  t4555 = 1.000000000016*t3132*t1320;
  t4557 = -1.000000000016*t2290*t1320;
  t4559 = -4.000000000064e-6*t2307*t1320;
  t4562 = t4550 + t4552 + t4554 + t4555 + t4557 + t4559;
  t4581 = -1.*t1167*t2290;
  t4583 = -1.*t1154*t2307;
  t4586 = t4581 + t4583;
  t4590 = -1.*t1154*t3157;
  t4592 = -1.*t1167*t3162;
  t4593 = t4590 + t4592;
  t4596 = t1316*t3132;
  t4597 = -1.*t1095*t2290;
  t4600 = -4.e-6*t1095*t2307;
  t4601 = -1.000000000016*t2316*t1320;
  t4604 = -4.e-6*t3157*t1320;
  t4605 = -1.*t3162*t1320;
  t4609 = t4596 + t4597 + t4600 + t4601 + t4604 + t4605;
  t4625 = -1.*t1316*t2316;
  t4626 = t2290*t1320;
  t4628 = 4.e-6*t2307*t1320;
  t4630 = t4625 + t4626 + t4628;
  t4635 = -1.000000000016*t1095*t2316;
  t4636 = t1454*t3157;
  t4638 = t1457*t3162;
  t4639 = -1.000000000016*t3132*t1320;
  t4640 = 1.000000000016*t2290*t1320;
  t4641 = 4.000000000064e-6*t2307*t1320;
  t4642 = t4635 + t4636 + t4638 + t4639 + t4640 + t4641;
  t4648 = t1457*t2290;
  t4649 = t1454*t2307;
  t4650 = t4648 + t4649 + t4601;
  t4654 = -1.*t1316*t3132;
  t4655 = t1095*t2290;
  t4656 = 4.e-6*t1095*t2307;
  t4658 = 1.000000000016*t2316*t1320;
  t4659 = 4.e-6*t3157*t1320;
  t4662 = t3162*t1320;
  t4663 = t4654 + t4655 + t4656 + t4658 + t4659 + t4662;
  t4695 = -1.*t1457*t2290;
  t4696 = -1.*t1454*t2307;
  t4697 = t4695 + t4696 + t4658;
  t4541 = -0.03874900000062*t1320;
  t4719 = t1316*t2316;
  t4721 = -1.*t2290*t1320;
  t4723 = -4.e-6*t2307*t1320;
  t4724 = t4719 + t4721 + t4723;
  p_output1[0]=t1445*var2[0] + t1516*var2[1] + t1299*var2[2];
  p_output1[1]=t1550*t315*var2[0] + t1559*t315*var2[1] + t1537*t315*var2[2];
  p_output1[2]=t1591*t315*var2[0] + t1614*t315*var2[1] + t1581*t315*var2[2];
  p_output1[3]=t1691*var2[0] + t1753*var2[1] + t1656*var2[2];
  p_output1[4]=t1798*var2[0] + t1846*var2[1];
  p_output1[5]=t1851;
  p_output1[6]=t1856;
  p_output1[7]=t1860;
  p_output1[8]=(-1.*t1445*t1872 - 1.*t1862*t1879)*var2[0] + (-1.*t1516*t1872 - 1.*t1862*t1889)*var2[1] + (-1.*t1862*t1869 - 1.*t1299*t1872)*var2[2];
  p_output1[9]=-1.*t1862*t1916*var2[0] - 1.*t1862*t1923*var2[1] - 1.*t1862*t1911*var2[2];
  p_output1[10]=(t1192*t1550*t1862 + t1434*t1872)*var2[0] + (t1192*t1559*t1862 + t1512*t1872)*var2[1] + (t1192*t1537*t1862 + t1290*t1872)*var2[2];
  p_output1[11]=(t1192*t1591*t1862 + t1872*t1982)*var2[0] + (t1192*t1614*t1862 + t1872*t2006)*var2[1] + (t1192*t1581*t1862 + t1872*t1975)*var2[2];
  p_output1[12]=(t1872*t2040 - 1.*t1862*t2055)*var2[0] + (t1872*t2076 - 1.*t1862*t2091)*var2[1] + (t1872*t2020 - 1.*t1862*t2029)*var2[2];
  p_output1[13]=(t1872*t2103 - 1.*t1862*t2108)*var2[0] + (t1872*t2120 - 1.*t1862*t2125)*var2[1];
  p_output1[14]=t2136;
  p_output1[15]=t2141;
  p_output1[16]=t2148;
  p_output1[17]=t2136*var2[0] + t2141*var2[1] + t2148*var2[2];
  p_output1[18]=t1872*t1916*var2[0] + t1872*t1923*var2[1] + t1872*t1911*var2[2];
  p_output1[19]=(t1434*t1862 - 1.*t1192*t1550*t1872)*var2[0] + (t1512*t1862 - 1.*t1192*t1559*t1872)*var2[1] + (t1290*t1862 - 1.*t1192*t1537*t1872)*var2[2];
  p_output1[20]=(-1.*t1192*t1591*t1872 + t1862*t1982)*var2[0] + (-1.*t1192*t1614*t1872 + t1862*t2006)*var2[1] + (-1.*t1192*t1581*t1872 + t1862*t1975)*var2[2];
  p_output1[21]=(t1862*t2040 + t1872*t2055)*var2[0] + (t1862*t2076 + t1872*t2091)*var2[1] + (t1862*t2020 + t1872*t2029)*var2[2];
  p_output1[22]=(t1862*t2103 + t1872*t2108)*var2[0] + (t1862*t2120 + t1872*t2125)*var2[1];
  p_output1[23]=t1445*t1872 + t1862*t1879;
  p_output1[24]=t1516*t1872 + t1862*t1889;
  p_output1[25]=t1862*t1869 + t1299*t1872;
  p_output1[26]=(t1856*(t1860*t2383 + t1911*t2383 + t1299*t2392 + t1299*t2398) + t1860*(-1.*t1856*t2383 - 1.*t1923*t2383 - 1.*t1516*t2392 - 1.*t1516*t2398) + t1516*t2482 + t1299*t2496)*var2[0] + (t1851*(-1.*t1860*t2383 - 1.*t1911*t2383 - 1.*t1299*t2392 - 1.*t1299*t2398) + t1860*(t1851*t2383 + t1916*t2383 + t1445*t2392 + t1445*t2398) + t1445*t2424 + t1299*t2432)*var2[1] + (t1856*(-1.*t1851*t2383 - 1.*t1916*t2383 - 1.*t1445*t2392 - 1.*t1445*t2398) + t1851*(t1856*t2383 + t1923*t2383 + t1516*t2392 + t1516*t2398) + t1516*t2527 + t1445*t2552)*var2[2];
  p_output1[27]=(t1559*t2482*t315 + t1537*t2496*t315 + t1860*(t1192*t1559*t2383 + t1192*t1516*t2605 + t2671 + t2679 - 1.*t1559*t2398*t315 - 1.*t1856*t2605*t315) + t1856*(-1.*t1192*t1537*t2383 - 1.*t1192*t1299*t2605 + t2650 + t2655 + t1537*t2398*t315 + t1860*t2605*t315))*var2[0] + (t1550*t2424*t315 + t1537*t2432*t315 + t1860*(-1.*t1192*t1550*t2383 - 1.*t1192*t1445*t2605 + t2630 + t2631 + t1550*t2398*t315 + t1851*t2605*t315) + t1851*(t1192*t1537*t2383 + t2598 + t1192*t1299*t2605 + t2610 - 1.*t1537*t2398*t315 - 1.*t1860*t2605*t315))*var2[1] + (t1559*t2527*t315 + t1550*t2552*t315 + t1856*(t1192*t1550*t2383 + t1192*t1445*t2605 + t2699 + t2702 - 1.*t1550*t2398*t315 - 1.*t1851*t2605*t315) + t1851*(-1.*t1192*t1559*t2383 - 1.*t1192*t1516*t2605 + t2716 + t2720 + t1559*t2398*t315 + t1856*t2605*t315))*var2[2];
  p_output1[28]=(t1614*t2482*t315 + t1581*t2496*t315 + t1860*(t1192*t1614*t2383 + t1192*t1516*t2783 + t2833 + t2840 - 1.*t1614*t2398*t315 - 1.*t1856*t2783*t315) + t1856*(-1.*t1192*t1581*t2383 - 1.*t1192*t1299*t2783 + t2822 + t2823 + t1581*t2398*t315 + t1860*t2783*t315))*var2[0] + (t1591*t2424*t315 + t1581*t2432*t315 + t1860*(-1.*t1192*t1591*t2383 - 1.*t1192*t1445*t2783 + t2800 + t2802 + t1591*t2398*t315 + t1851*t2783*t315) + t1851*(t1192*t1581*t2383 + t2749 + t2776 + t1192*t1299*t2783 - 1.*t1581*t2398*t315 - 1.*t1860*t2783*t315))*var2[1] + (t1614*t2527*t315 + t1591*t2552*t315 + t1856*(t1192*t1591*t2383 + t1192*t1445*t2783 + t2864 + t2867 - 1.*t1591*t2398*t315 - 1.*t1851*t2783*t315) + t1851*(-1.*t1192*t1614*t2383 - 1.*t1192*t1516*t2783 + t2880 + t2888 + t1614*t2398*t315 + t1856*t2783*t315))*var2[2];
  p_output1[29]=(t1753*t2482 + t1656*t2496 + t1856*(t2029*t2383 + t1656*t2398 + t1299*t2965 + t1860*t2978 + t3027 + t3031) + t1860*(-1.*t2091*t2383 - 1.*t1753*t2398 - 1.*t1516*t2965 - 1.*t1856*t2978 + t3064 + t3065))*var2[0] + (t1691*t2424 + t1656*t2432 + t1851*(-1.*t2029*t2383 - 1.*t1656*t2398 + t2943 + t2944 - 1.*t1299*t2965 - 1.*t1860*t2978) + t1860*(t2055*t2383 + t1691*t2398 + t1445*t2965 + t1851*t2978 + t2996 + t2997))*var2[1] + (t1753*t2527 + t1691*t2552 + t1856*(-1.*t2055*t2383 - 1.*t1691*t2398 - 1.*t1445*t2965 - 1.*t1851*t2978 + t3088 + t3090) + t1851*(t2091*t2383 + t1753*t2398 + t1516*t2965 + t1856*t2978 + t3104 + t3105))*var2[2];
  p_output1[30]=(t1846*t2482 + t1856*(t1299*t3220 + t1860*t3226 + t3259) + t1860*(-1.*t2125*t2383 - 1.*t1846*t2398 - 1.*t1516*t3220 - 1.*t1856*t3226 + t3279 + t3280))*var2[0] + (t1798*t2424 + t1851*(t3202 - 1.*t1299*t3220 - 1.*t1860*t3226) + t1860*(t2108*t2383 + t1798*t2398 + t1445*t3220 + t1851*t3226 + t3237 + t3240))*var2[1] + (t1846*t2527 + t1798*t2552 + t1856*(-1.*t2108*t2383 - 1.*t1798*t2398 - 1.*t1445*t3220 - 1.*t1851*t3226 + t3308 + t3310) + t1851*(t2125*t2383 + t1846*t2398 + t1516*t3220 + t1856*t3226 + t3340 + t3349))*var2[2];
  p_output1[31]=t1856*t2482 + t1860*t2496;
  p_output1[32]=t1851*t2424 + t1860*t2432;
  p_output1[33]=t1856*t2527 + t1851*t2552;
  p_output1[34]=(t1889*(t1537*t2364 + t1290*t2605 + t2650 + t2655) + t1869*(-1.*t1559*t2364 - 1.*t1512*t2605 + t2671 + t2679) + t1512*t3459 + t1290*t3487)*var2[0] + (t1879*(-1.*t1537*t2364 + t2598 - 1.*t1290*t2605 + t2610) + t1869*(t1550*t2364 + t1434*t2605 + t2630 + t2631) + t1434*t3415 + t1290*t3428)*var2[1] + (t1889*(-1.*t1550*t2364 - 1.*t1434*t2605 + t2699 + t2702) + t1879*(t1559*t2364 + t1512*t2605 + t2716 + t2720) + t1512*t3500 + t1434*t3527)*var2[2];
  p_output1[35]=(t1889*(t1581*t2364 + t1290*t2783 + t2822 + t2823) + t1869*(-1.*t1614*t2364 - 1.*t1512*t2783 + t2833 + t2840) + t2006*t3459 + t1975*t3487)*var2[0] + (t1879*(-1.*t1581*t2364 + t2749 + t2776 - 1.*t1290*t2783) + t1869*(t1591*t2364 + t1434*t2783 + t2800 + t2802) + t1982*t3415 + t1975*t3428)*var2[1] + (t1889*(-1.*t1591*t2364 - 1.*t1434*t2783 + t2864 + t2867) + t1879*(t1614*t2364 + t1512*t2783 + t2880 + t2888) + t2006*t3500 + t1982*t3527)*var2[2];
  p_output1[36]=(t2076*t3459 + t2020*t3487 + t1889*(t1652*t2364 + t1290*t2949 + t3027 + t3031 + t3666 + t3669) + t1869*(-1.*t1751*t2364 - 1.*t1512*t2949 + t3064 + t3065 + t3683 + t3686))*var2[0] + (t2040*t3415 + t2020*t3428 + t1879*(-1.*t1652*t2364 + t2943 + t2944 - 1.*t1290*t2949 + t3629 + t3630) + t1869*(t1686*t2364 + t1434*t2949 + t2996 + t2997 + t3646 + t3649))*var2[1] + (t2076*t3500 + t2040*t3527 + t1889*(-1.*t1686*t2364 - 1.*t1434*t2949 + t3088 + t3090 + t3698 + t3700) + t1879*(t1751*t2364 + t1512*t2949 + t3104 + t3105 + t3709 + t3713))*var2[2];
  p_output1[37]=(t2120*t3459 + t1889*(t1290*t3206 + t3259 + t3751) + t1869*(-1.*t1839*t2364 - 1.*t1512*t3206 + t3279 + t3280 + t3757 + t3758))*var2[0] + (t2103*t3415 + t1879*(t3202 - 1.*t1290*t3206 + t3729) + t1869*(t1793*t2364 + t1434*t3206 + t3237 + t3240 + t3736 + t3737))*var2[1] + (t2120*t3500 + t2103*t3527 + t1889*(-1.*t1793*t2364 - 1.*t1434*t3206 + t3308 + t3310 + t3794 + t3795) + t1879*(t1839*t2364 + t1512*t3206 + t3340 + t3349 + t3811 + t3813))*var2[2];
  p_output1[38]=t1889*t3459 + t1869*t3487;
  p_output1[39]=t1879*t3415 + t1869*t3428;
  p_output1[40]=t1889*t3500 + t1879*t3527;
  p_output1[41]=(t1469*(t1272*t2348 + t1573*t2359 + t1272*t2761 + t1283*t2768) + t1183*(-1.*t1507*t2348 - 1.*t1610*t2359 - 1.*t1507*t2761 - 1.*t1497*t2768))*var2[0] + (t1329*(-1.*t1272*t2348 - 1.*t1573*t2359 - 1.*t1272*t2761 - 1.*t1283*t2768) + t1183*(t1389*t2348 + t1589*t2359 + t1389*t2761 + t1409*t2768))*var2[1] + (t1469*(-1.*t1389*t2348 - 1.*t1589*t2359 - 1.*t1389*t2761 - 1.*t1409*t2768) + t1329*(t1507*t2348 + t1610*t2359 + t1507*t2761 + t1497*t2768))*var2[2];
  p_output1[42]=(t1469*(t1639*t2348 + t1649*t2359 + t1272*t2932 + t1283*t2938 + t3666 + t3669) + t1183*(-1.*t1745*t2348 - 1.*t1733*t2359 - 1.*t1507*t2932 - 1.*t1497*t2938 + t3683 + t3686) + t1703*t4005 + t1619*t4028)*var2[0] + (t1329*(-1.*t1639*t2348 - 1.*t1649*t2359 - 1.*t1272*t2932 - 1.*t1283*t2938 + t3629 + t3630) + t1183*(t1673*t2348 + t1684*t2359 + t1389*t2932 + t1409*t2938 + t3646 + t3649) + t1659*t3971 + t1619*t3976)*var2[1] + (t1469*(-1.*t1673*t2348 - 1.*t1684*t2359 - 1.*t1389*t2932 - 1.*t1409*t2938 + t3698 + t3700) + t1329*(t1745*t2348 + t1733*t2359 + t1507*t2932 + t1497*t2938 + t3709 + t3713) + t1703*t4064 + t1659*t4088)*var2[2];
  p_output1[43]=(t1469*(t1272*t3182 + t1283*t3194 + t3751) + t1183*(-1.*t1835*t2348 - 1.*t1826*t2359 - 1.*t1507*t3182 - 1.*t1497*t3194 + t3757 + t3758) + t1803*t4005)*var2[0] + (t1329*(-1.*t1272*t3182 - 1.*t1283*t3194 + t3729) + t1183*(t1783*t2348 + t1791*t2359 + t1389*t3182 + t1409*t3194 + t3736 + t3737) + t1763*t3971)*var2[1] + (t1469*(-1.*t1783*t2348 - 1.*t1791*t2359 - 1.*t1389*t3182 - 1.*t1409*t3194 + t3794 + t3795) + t1329*(t1835*t2348 + t1826*t2359 + t1507*t3182 + t1497*t3194 + t3811 + t3813) + t1803*t4064 + t1763*t4088)*var2[2];
  p_output1[44]=t1469*t4005 + t1183*t4028;
  p_output1[45]=t1329*t3971 + t1183*t3976;
  p_output1[46]=t1469*t4064 + t1329*t4088;
  p_output1[47]=(0.15121*t1665 - 0.15121*t1670 + t1469*(t1625*t2320 + t1634*t2340 + t1232*t2916 + t1265*t2930 + t3666 + t3669) + t1183*(-1.*t1729*t2320 - 1.*t1717*t2340 - 1.*t1481*t2916 - 1.*t1475*t2930 + t3683 + t3686) + t1703*t4303 + t1619*t4320)*var2[0] + (-0.15121*t1717 + 0.15121*t1729 + t1329*(-1.*t1625*t2320 - 1.*t1634*t2340 - 1.*t1232*t2916 - 1.*t1265*t2930 + t3629 + t3630) + t1183*(t1665*t2320 + t1670*t2340 + t1342*t2916 + t1377*t2930 + t3646 + t3649) + t1659*t4267 + t1619*t4279)*var2[1] + (0.15121*t1625 - 0.15121*t1634 + t1469*(-1.*t1665*t2320 - 1.*t1670*t2340 - 1.*t1342*t2916 - 1.*t1377*t2930 + t3698 + t3700) + t1329*(t1729*t2320 + t1717*t2340 + t1481*t2916 + t1475*t2930 + t3709 + t3713) + t1703*t4347 + t1659*t4360)*var2[2];
  p_output1[48]=(0.15121*t1770 - 0.15121*t1778 + t1469*(t1232*t3169 + t1265*t3179 + t3751) + t1183*(-1.*t1818*t2320 - 1.*t1811*t2340 - 1.*t1481*t3169 - 1.*t1475*t3179 + t3757 + t3758) + t1803*t4303)*var2[0] + (-0.15121*t1811 + 0.15121*t1818 + t1329*(-1.*t1232*t3169 - 1.*t1265*t3179 + t3729) + t1183*(t1770*t2320 + t1778*t2340 + t1342*t3169 + t1377*t3179 + t3736 + t3737) + t1763*t4267)*var2[1] + (t1469*(-1.*t1770*t2320 - 1.*t1778*t2340 - 1.*t1342*t3169 - 1.*t1377*t3179 + t3794 + t3795) + t1329*(t1818*t2320 + t1811*t2340 + t1481*t3169 + t1475*t3179 + t3811 + t3813) + t1803*t4347 + t1763*t4360)*var2[2];
  p_output1[49]=-0.15121*t1342 + 0.15121*t1377 + t1469*t4303 + t1183*t4320;
  p_output1[50]=0.15121*t1475 - 0.15121*t1481 + t1329*t4267 + t1183*t4279;
  p_output1[51]=-0.15121*t1232 + 0.15121*t1265 + t1469*t4347 + t1329*t4360;
  p_output1[52]=(-0.281210000004*t1095 + t1454*t4538 + t4541 + 4.000000000064e-6*t1320*t4545 + t1154*t4562 + 4.e-6*(-1.*t1457*t4538 - 1.000000000016*t1320*t4545 - 1.*t1167*t4562))*var2[0] + (-0.03874900000062*t1095 + 0.281210000008499*t1320 - 4.e-6*t1095*t4586 - 4.e-6*t1320*t4593 + t1154*t4609 + 4.e-6*(t1095*t4586 + t1320*t4593 - 1.*t1167*t4609))*var2[1] + (4.000000000064e-6*t1320*t4630 - 4.e-6*t1320*t4642 - 4.e-6*t1095*t4650 + t1454*t4663 + 4.e-6*(-1.000000000016*t1320*t4630 + t1320*t4642 + t1095*t4650 - 1.*t1457*t4663))*var2[2];
  p_output1[53]=0.038749*t1316 - 0.281210000004*t1320 + t1454*t4545 + t1154*t4697 + 4.e-6*(-1.*t1457*t4545 - 1.*t1167*t4697);
  p_output1[54]=1.e-6*t1454 + 0.28121*t1457 + t4541 - 4.e-6*t1320*t4586 + t1154*t4724 + 4.e-6*(t1320*t4586 - 1.*t1167*t4724);
  p_output1[55]=1.e-6*t1154 + 0.28121*t1167 + t1454*t4630 - 4.e-6*t1320*t4650 + 4.e-6*(-1.*t1457*t4630 + t1320*t4650);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_ParallelStance2.hh"

namespace ParallelStance2
{

void J_fFlFoot_vec_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
