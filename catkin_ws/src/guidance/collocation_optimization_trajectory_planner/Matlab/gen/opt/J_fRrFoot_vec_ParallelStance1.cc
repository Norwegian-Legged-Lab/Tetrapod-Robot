/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:28:46 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t116;
  double t127;
  double t141;
  double t78;
  double t87;
  double t91;
  double t176;
  double t96;
  double t187;
  double t152;
  double t165;
  double t196;
  double t207;
  double t216;
  double t782;
  double t248;
  double t253;
  double t258;
  double t334;
  double t462;
  double t474;
  double t670;
  double t940;
  double t968;
  double t1026;
  double t1027;
  double t1034;
  double t92;
  double t1157;
  double t1293;
  double t1160;
  double t1221;
  double t1223;
  double t1226;
  double t1232;
  double t1244;
  double t1257;
  double t1265;
  double t1271;
  double t1284;
  double t1154;
  double t1304;
  double t1307;
  double t1309;
  double t1311;
  double t1332;
  double t1334;
  double t1346;
  double t1349;
  double t1351;
  double t1354;
  double t76;
  double t236;
  double t243;
  double t786;
  double t919;
  double t102;
  double t1119;
  double t1124;
  double t1478;
  double t1491;
  double t1492;
  double t1519;
  double t1530;
  double t1539;
  double t1550;
  double t1569;
  double t1572;
  double t1607;
  double t1611;
  double t1619;
  double t1624;
  double t1628;
  double t1642;
  double t1663;
  double t1666;
  double t1414;
  double t1745;
  double t1738;
  double t1746;
  double t1752;
  double t1758;
  double t1767;
  double t1773;
  double t1787;
  double t1790;
  double t1795;
  double t1796;
  double t1802;
  double t1808;
  double t1809;
  double t1818;
  double t1823;
  double t1825;
  double t1827;
  double t1841;
  double t1848;
  double t1868;
  double t1872;
  double t1873;
  double t1884;
  double t1887;
  double t1889;
  double t1894;
  double t1897;
  double t1384;
  double t1392;
  double t1410;
  double t1287;
  double t1366;
  double t1368;
  double t1693;
  double t1695;
  double t1703;
  double t1625;
  double t1667;
  double t1681;
  double t1917;
  double t1926;
  double t1930;
  double t1885;
  double t1905;
  double t1908;
  double t1962;
  double t1991;
  double t2026;
  double t2084;
  double t2113;
  double t2114;
  double t2115;
  double t2120;
  double t2121;
  double t2129;
  double t2130;
  double t2132;
  double t2137;
  double t2142;
  double t2144;
  double t2149;
  double t2150;
  double t2151;
  double t2152;
  double t2096;
  double t2098;
  double t2085;
  double t2212;
  double t2213;
  double t2217;
  double t2220;
  double t2233;
  double t2237;
  double t2238;
  double t2242;
  double t2289;
  double t2296;
  double t2300;
  double t2302;
  double t2309;
  double t2310;
  double t2312;
  double t2317;
  double t2351;
  double t2352;
  double t2354;
  double t2356;
  double t2358;
  double t2362;
  double t2370;
  double t2373;
  double t2375;
  double t2376;
  double t2377;
  double t2381;
  double t2383;
  double t2384;
  double t2387;
  double t2389;
  double t2391;
  double t2394;
  double t2395;
  double t2406;
  double t2408;
  double t2409;
  double t2412;
  double t2415;
  double t2430;
  double t2434;
  double t2435;
  double t2588;
  double t2548;
  double t2564;
  double t2575;
  double t2590;
  double t2597;
  double t2628;
  double t2630;
  double t2633;
  double t2639;
  double t2650;
  double t2651;
  double t2661;
  double t2665;
  double t2682;
  double t2683;
  double t2689;
  double t2690;
  double t2733;
  double t2735;
  double t2737;
  double t2739;
  double t2753;
  double t2754;
  double t2755;
  double t2768;
  double t2786;
  double t2787;
  double t2788;
  double t2791;
  double t2792;
  double t2795;
  double t2797;
  double t227;
  double t671;
  double t1081;
  double t1107;
  double t1383;
  double t1418;
  double t1423;
  double t1509;
  double t1567;
  double t1578;
  double t1580;
  double t1691;
  double t1721;
  double t1722;
  double t1780;
  double t1810;
  double t1858;
  double t1860;
  double t1913;
  double t1931;
  double t1932;
  double t1113;
  double t1441;
  double t1447;
  double t2875;
  double t2888;
  double t1604;
  double t1724;
  double t1731;
  double t1861;
  double t1936;
  double t1940;
  double t1961;
  double t1967;
  double t1985;
  double t1994;
  double t2015;
  double t2029;
  double t2034;
  double t2035;
  double t2037;
  double t2039;
  double t2040;
  double t2046;
  double t2052;
  double t2059;
  double t2061;
  double t2063;
  double t2066;
  double t2069;
  double t2071;
  double t2072;
  double t2078;
  double t2170;
  double t2172;
  double t2173;
  double t2131;
  double t2153;
  double t2157;
  double t2093;
  double t2095;
  double t2106;
  double t2109;
  double t2159;
  double t2177;
  double t2178;
  double t2256;
  double t2263;
  double t2264;
  double t2230;
  double t2249;
  double t2251;
  double t2193;
  double t2198;
  double t2205;
  double t2208;
  double t2253;
  double t2267;
  double t2268;
  double t2327;
  double t2328;
  double t2329;
  double t2307;
  double t2320;
  double t2321;
  double t2278;
  double t2279;
  double t2280;
  double t2285;
  double t2324;
  double t2340;
  double t2341;
  double t2449;
  double t2489;
  double t2497;
  double t2413;
  double t2437;
  double t2442;
  double t2366;
  double t2382;
  double t2397;
  double t2398;
  double t2446;
  double t2508;
  double t2527;
  double t2700;
  double t2701;
  double t2710;
  double t2679;
  double t2693;
  double t2695;
  double t2585;
  double t2611;
  double t2641;
  double t2646;
  double t2697;
  double t2712;
  double t2714;
  double t2815;
  double t2816;
  double t2817;
  double t2790;
  double t2801;
  double t2802;
  double t2736;
  double t2744;
  double t2761;
  double t2764;
  double t2814;
  double t2820;
  double t2821;
  double t2876;
  double t2880;
  double t2885;
  double t2892;
  double t2894;
  double t2895;
  double t2909;
  double t2911;
  double t2912;
  double t3263;
  double t3265;
  double t3269;
  double t3275;
  double t3277;
  double t3279;
  double t3280;
  double t3281;
  double t3283;
  double t2922;
  double t2923;
  double t2924;
  double t2929;
  double t2934;
  double t2935;
  double t2939;
  double t2940;
  double t2941;
  double t3003;
  double t3004;
  double t3016;
  double t3017;
  double t3024;
  double t3025;
  double t3046;
  double t3047;
  double t3049;
  double t3063;
  double t3064;
  double t3067;
  double t3075;
  double t3076;
  double t3078;
  double t3088;
  double t3090;
  double t3092;
  double t3103;
  double t3105;
  double t3106;
  double t3112;
  double t3113;
  double t3115;
  double t3123;
  double t3137;
  double t3158;
  double t3162;
  double t3170;
  double t3175;
  double t3185;
  double t3195;
  double t3199;
  double t3205;
  double t3206;
  double t3208;
  double t3226;
  double t3228;
  double t3230;
  double t3240;
  double t3245;
  double t3246;
  double t2841;
  double t2848;
  double t2855;
  double t3481;
  double t3495;
  double t3498;
  double t3500;
  double t3503;
  double t3509;
  double t3511;
  double t3512;
  double t3514;
  double t3519;
  double t3522;
  double t3527;
  double t3532;
  double t3540;
  double t3543;
  double t3544;
  double t3547;
  double t3548;
  double t3549;
  double t3553;
  double t3556;
  double t3557;
  double t3558;
  double t3560;
  double t3561;
  double t3562;
  double t3563;
  double t3564;
  double t3569;
  double t3572;
  double t3573;
  double t3574;
  double t3576;
  double t3598;
  double t3487;
  double t3489;
  double t3585;
  double t3587;
  double t3588;
  double t3595;
  double t3596;
  double t3599;
  double t3601;
  double t3603;
  double t3604;
  double t3608;
  double t3609;
  double t3611;
  double t3612;
  double t3614;
  double t3615;
  double t3616;
  double t3617;
  double t3618;
  double t3620;
  double t3621;
  double t3622;
  double t3623;
  double t3624;
  double t3477;
  double t3480;
  double t3485;
  double t3486;
  double t3491;
  double t3493;
  double t3525;
  double t3559;
  double t3581;
  double t3582;
  double t3591;
  double t3613;
  double t3625;
  double t3629;
  double t3630;
  double t3631;
  double t3633;
  double t3634;
  double t3636;
  double t3637;
  double t3639;
  double t2836;
  double t2839;
  double t2840;
  double t3651;
  double t3652;
  double t3653;
  double t3647;
  double t3648;
  double t3649;
  double t3583;
  double t3640;
  double t3643;
  double t3662;
  double t3663;
  double t3665;
  double t2869;
  double t2870;
  double t2874;
  double t3854;
  double t3856;
  double t3857;
  double t3669;
  double t3671;
  double t3675;
  double t3676;
  double t3696;
  double t3697;
  double t3698;
  double t3699;
  double t3722;
  double t3723;
  double t3724;
  double t3725;
  double t3745;
  double t3747;
  double t3750;
  double t3756;
  double t3778;
  double t3779;
  double t3783;
  double t3786;
  double t3825;
  double t3827;
  double t3839;
  double t3840;
  double t3982;
  double t3985;
  double t3986;
  double t3987;
  double t3975;
  double t3979;
  double t3994;
  double t3995;
  double t4002;
  double t3981;
  double t3988;
  double t3989;
  double t2209;
  double t2269;
  double t2270;
  double t2112;
  double t2179;
  double t2183;
  double t4151;
  double t4173;
  double t4176;
  double t4178;
  double t4179;
  double t4182;
  double t4190;
  double t4194;
  double t4199;
  double t4205;
  double t4207;
  double t4208;
  double t4210;
  double t4211;
  double t4212;
  double t4213;
  double t4215;
  double t4216;
  double t4217;
  double t4221;
  double t4222;
  double t4223;
  double t4200;
  double t4218;
  double t4219;
  double t4236;
  double t4237;
  double t4238;
  double t4239;
  double t4240;
  double t4244;
  double t4250;
  double t4252;
  double t4255;
  double t4259;
  double t4260;
  double t4265;
  double t4220;
  double t4224;
  double t4227;
  double t4256;
  double t4266;
  double t4267;
  double t4281;
  double t4283;
  double t4284;
  double t2286;
  double t2344;
  double t2345;
  double t2767;
  double t2823;
  double t2828;
  double t2648;
  double t2718;
  double t2719;
  double t4420;
  double t4421;
  double t4422;
  double t4423;
  double t4424;
  double t4427;
  double t4430;
  double t4431;
  double t4437;
  double t4441;
  double t4442;
  double t4450;
  double t4452;
  double t4459;
  double t4462;
  double t4470;
  double t4472;
  double t4473;
  double t4474;
  double t4475;
  double t4477;
  double t4479;
  double t4483;
  double t4484;
  double t4434;
  double t4471;
  double t4485;
  double t4488;
  double t4494;
  double t4495;
  double t4496;
  double t4497;
  double t4506;
  double t4508;
  double t4512;
  double t4490;
  double t4499;
  double t4500;
  double t4518;
  double t4523;
  double t4525;
  double t4526;
  double t4531;
  double t4534;
  double t4537;
  double t4503;
  double t4513;
  double t4515;
  double t4530;
  double t4538;
  double t4539;
  double t4544;
  double t4545;
  double t4546;
  double t2403;
  double t2529;
  double t2534;
  double t3849;
  double t3850;
  double t3869;
  double t3874;
  double t3894;
  double t3897;
  double t3919;
  double t3920;
  double t3936;
  double t3939;
  double t3947;
  double t3948;
  double t4730;
  double t4731;
  double t4732;
  double t4759;
  double t4760;
  double t4761;
  double t3990;
  double t3992;
  double t4028;
  double t4036;
  double t4773;
  double t4774;
  double t4775;
  double t4066;
  double t4067;
  double t4086;
  double t4089;
  double t4795;
  double t4796;
  double t4798;
  double t4812;
  double t4813;
  double t4818;
  double t4101;
  double t4102;
  double t4124;
  double t4125;
  double t4826;
  double t4827;
  double t4828;
  double t4150;
  double t4229;
  double t4306;
  double t4307;
  double t4333;
  double t4337;
  double t4348;
  double t4354;
  double t4371;
  double t4372;
  double t4390;
  double t4393;
  double t4516;
  double t4517;
  double t4557;
  double t4559;
  double t4594;
  double t4595;
  double t4616;
  double t4636;
  double t4656;
  double t4657;
  double t4684;
  double t4685;
  double t4903;
  double t4904;
  double t4915;
  double t4916;
  double t4927;
  double t4928;
  double t4939;
  double t4940;
  double t4952;
  double t4954;
  double t4964;
  double t4966;
  double t5159;
  double t5161;
  double t5162;
  double t5165;
  double t5167;
  double t5174;
  double t4981;
  double t4982;
  double t4993;
  double t4996;
  double t5211;
  double t5212;
  double t5216;
  double t5005;
  double t5006;
  double t5014;
  double t5015;
  double t5229;
  double t5230;
  double t5232;
  double t5244;
  double t5245;
  double t5246;
  double t5028;
  double t5030;
  double t5038;
  double t5040;
  double t5266;
  double t5267;
  double t5271;
  double t5427;
  double t5431;
  double t5432;
  double t5445;
  double t5446;
  double t5448;
  double t5469;
  double t5470;
  double t5471;
  double t5482;
  double t5483;
  double t5484;
  double t5507;
  double t5508;
  double t5509;
  double t5519;
  double t5520;
  double t5521;
  double t5653;
  double t5654;
  double t5655;
  double t5656;
  double t5658;
  double t5659;
  double t5660;
  double t5661;
  double t5663;
  double t5665;
  double t5667;
  double t5671;
  double t5673;
  double t5675;
  double t5678;
  double t5686;
  double t5688;
  double t5689;
  double t5690;
  double t5691;
  double t5692;
  double t5694;
  double t5721;
  double t5722;
  double t5723;
  double t5724;
  double t5727;
  double t5728;
  double t5729;
  double t5731;
  double t5732;
  double t5733;
  double t5734;
  double t5736;
  double t5737;
  double t5738;
  double t5740;
  double t5743;
  double t5744;
  double t5746;
  double t5749;
  double t5750;
  double t5751;
  double t5752;
  double t5784;
  double t5785;
  double t5787;
  double t5789;
  double t5790;
  double t5791;
  double t5792;
  double t5795;
  double t5796;
  double t5797;
  double t5799;
  double t5804;
  double t5805;
  double t5807;
  double t5809;
  double t5810;
  double t5811;
  double t5813;
  double t5815;
  double t5816;
  double t5817;
  double t5820;
  t116 = Cos(var1[17]);
  t127 = -1.*t116;
  t141 = 1. + t127;
  t78 = Cos(var1[16]);
  t87 = -1.*t78;
  t91 = 1. + t87;
  t176 = Sin(var1[17]);
  t96 = Sin(var1[16]);
  t187 = 4.e-6*t176;
  t152 = 1.000000000016*t141;
  t165 = -7.e-6*t141;
  t196 = t165 + t187;
  t207 = -7.e-6*t196;
  t216 = -1. + t152 + t207;
  t782 = 4.e-6*t91;
  t248 = 2.8e-11*t141;
  t253 = 4.e-6*t141;
  t258 = 7.e-6*t176;
  t334 = t253 + t258;
  t462 = -7.e-6*t334;
  t474 = -1.*t176;
  t670 = t248 + t462 + t474;
  t940 = -6.5e-11*t141;
  t968 = 1. + t940;
  t1026 = -7.e-6*t968;
  t1027 = 7.e-6*t141;
  t1034 = t1026 + t1027 + t187;
  t92 = -2.8e-11*t91;
  t1157 = -7.e-6*t91;
  t1293 = Cos(var1[15]);
  t1160 = -4.e-6*t96;
  t1221 = t1157 + t1160;
  t1223 = t1221*t216;
  t1226 = -7.e-6*t96;
  t1232 = t782 + t1226;
  t1244 = t1232*t670;
  t1257 = -6.5e-11*t91;
  t1265 = 1. + t1257;
  t1271 = t1265*t1034;
  t1284 = t1223 + t1244 + t1271;
  t1154 = Sin(var1[15]);
  t1304 = -1.000000000016*t91;
  t1307 = 1. + t1304;
  t1309 = t1307*t216;
  t1311 = -1.*t96;
  t1332 = t92 + t1311;
  t1334 = t1332*t670;
  t1346 = 4.e-6*t96;
  t1349 = t1157 + t1346;
  t1351 = t1349*t1034;
  t1354 = t1309 + t1334 + t1351;
  t76 = Cos(var1[4]);
  t236 = -1.000000000049*t91;
  t243 = 1. + t236;
  t786 = 7.e-6*t96;
  t919 = t782 + t786;
  t102 = t92 + t96;
  t1119 = Sin(var1[4]);
  t1124 = Cos(var1[5]);
  t1478 = 1.000000000049*t141;
  t1491 = 4.e-6*t334;
  t1492 = -1. + t1478 + t1491;
  t1519 = 4.e-6*t968;
  t1530 = -1. + t116;
  t1539 = 4.e-6*t1530;
  t1550 = t1519 + t1539 + t258;
  t1569 = 4.e-6*t196;
  t1572 = t248 + t1569 + t176;
  t1607 = t1332*t1492;
  t1611 = t1349*t1550;
  t1619 = t1307*t1572;
  t1624 = t1607 + t1611 + t1619;
  t1628 = t1232*t1492;
  t1642 = t1265*t1550;
  t1663 = t1221*t1572;
  t1666 = t1628 + t1642 + t1663;
  t1414 = Sin(var1[5]);
  t1745 = -4.e-6*t176;
  t1738 = 6.5e-11*t141;
  t1746 = t165 + t1745;
  t1752 = 7.e-6*t1746;
  t1758 = t1539 + t258;
  t1767 = 4.e-6*t1758;
  t1773 = -1. + t1738 + t1752 + t1767;
  t1787 = -1. + t1478;
  t1790 = 4.e-6*t1787;
  t1795 = -7.e-6*t176;
  t1796 = -2.8e-11*t141;
  t1802 = t1796 + t176;
  t1808 = 7.e-6*t1802;
  t1809 = t1790 + t1539 + t1795 + t1808;
  t1818 = -1.000000000016*t141;
  t1823 = 1. + t1818;
  t1825 = 7.e-6*t1823;
  t1827 = t248 + t176;
  t1841 = 4.e-6*t1827;
  t1848 = t1825 + t1027 + t1745 + t1841;
  t1868 = t1349*t1773;
  t1872 = t1332*t1809;
  t1873 = t1307*t1848;
  t1884 = t1868 + t1872 + t1873;
  t1887 = t1265*t1773;
  t1889 = t1232*t1809;
  t1894 = t1221*t1848;
  t1897 = t1887 + t1889 + t1894;
  t1384 = t1293*t1284;
  t1392 = t1154*t1354;
  t1410 = t1384 + t1392;
  t1287 = -1.*t1154*t1284;
  t1366 = t1293*t1354;
  t1368 = t1287 + t1366;
  t1693 = t1154*t1624;
  t1695 = t1293*t1666;
  t1703 = t1693 + t1695;
  t1625 = t1293*t1624;
  t1667 = -1.*t1154*t1666;
  t1681 = t1625 + t1667;
  t1917 = t1154*t1884;
  t1926 = t1293*t1897;
  t1930 = t1917 + t1926;
  t1885 = t1293*t1884;
  t1905 = -1.*t1154*t1897;
  t1908 = t1885 + t1905;
  t1962 = -1.*t1368*t1414;
  t1991 = -1.*t1681*t1414;
  t2026 = -1.*t1908*t1414;
  t2084 = -2.8e-11*t96;
  t2113 = -1.000000000016*t96*t216;
  t2114 = t87 + t2084;
  t2115 = t2114*t670;
  t2120 = 4.e-6*t78;
  t2121 = t2120 + t1226;
  t2129 = t2121*t1034;
  t2130 = t2113 + t2115 + t2129;
  t2132 = -4.e-6*t78;
  t2137 = t2132 + t1226;
  t2142 = t2137*t216;
  t2144 = -7.e-6*t78;
  t2149 = t2144 + t1346;
  t2150 = t2149*t670;
  t2151 = -6.5e-11*t96*t1034;
  t2152 = t2142 + t2150 + t2151;
  t2096 = 7.e-6*t78;
  t2098 = t2096 + t1346;
  t2085 = t78 + t2084;
  t2212 = t2149*t1492;
  t2213 = -6.5e-11*t96*t1550;
  t2217 = t2137*t1572;
  t2220 = t2212 + t2213 + t2217;
  t2233 = t2114*t1492;
  t2237 = t2121*t1550;
  t2238 = -1.000000000016*t96*t1572;
  t2242 = t2233 + t2237 + t2238;
  t2289 = -6.5e-11*t96*t1773;
  t2296 = t2149*t1809;
  t2300 = t2137*t1848;
  t2302 = t2289 + t2296 + t2300;
  t2309 = t2121*t1773;
  t2310 = t2114*t1809;
  t2312 = -1.000000000016*t96*t1848;
  t2317 = t2309 + t2310 + t2312;
  t2351 = -4.e-6*t116;
  t2352 = 2.8e-11*t176;
  t2354 = t116 + t2352;
  t2356 = 4.e-6*t2354;
  t2358 = -1.12e-16*t176;
  t2362 = t2351 + t2356 + t2358;
  t2370 = -7.e-6*t116;
  t2373 = -2.8e-11*t176;
  t2375 = t116 + t2373;
  t2376 = 7.e-6*t2375;
  t2377 = 1.96e-16*t176;
  t2381 = t2370 + t2376 + t2377;
  t2383 = t2351 + t1795;
  t2384 = 7.e-6*t2383;
  t2387 = 7.e-6*t116;
  t2389 = t2387 + t1745;
  t2391 = 4.e-6*t2389;
  t2394 = 6.5e-11*t176;
  t2395 = t2384 + t2391 + t2394;
  t2406 = t1221*t2362;
  t2408 = t1232*t2381;
  t2409 = t1265*t2395;
  t2412 = t2406 + t2408 + t2409;
  t2415 = t1307*t2362;
  t2430 = t1332*t2381;
  t2434 = t1349*t2395;
  t2435 = t2415 + t2430 + t2434;
  t2588 = 4.e-6*t116;
  t2548 = t2387 + t187;
  t2564 = -7.e-6*t2548;
  t2575 = t127 + t2564 + t2352;
  t2590 = 7.000000000455e-6*t176;
  t2597 = t2588 + t2590;
  t2628 = t2588 + t1795;
  t2630 = -7.e-6*t2628;
  t2633 = 1.000000000016*t176;
  t2639 = t2630 + t2633;
  t2650 = t1332*t2575;
  t2651 = t1349*t2597;
  t2661 = t1307*t2639;
  t2665 = t2650 + t2651 + t2661;
  t2682 = t1232*t2575;
  t2683 = t1265*t2597;
  t2689 = t1221*t2639;
  t2690 = t2682 + t2683 + t2689;
  t2733 = -4.00000000026e-6*t176;
  t2735 = t2387 + t2733;
  t2737 = 4.e-6*t2628;
  t2739 = t116 + t2737 + t2352;
  t2753 = 4.e-6*t2548;
  t2754 = 1.000000000049*t176;
  t2755 = t2753 + t2754;
  t2768 = t1349*t2735;
  t2786 = t1307*t2739;
  t2787 = t1332*t2755;
  t2788 = t2768 + t2786 + t2787;
  t2791 = t1265*t2735;
  t2792 = t1221*t2739;
  t2795 = t1232*t2755;
  t2797 = t2791 + t2792 + t2795;
  t227 = t102*t216;
  t671 = t243*t670;
  t1081 = t919*t1034;
  t1107 = t227 + t671 + t1081;
  t1383 = t1124*t1368;
  t1418 = -1.*t1410*t1414;
  t1423 = t1383 + t1418;
  t1509 = t243*t1492;
  t1567 = t919*t1550;
  t1578 = t102*t1572;
  t1580 = t1509 + t1567 + t1578;
  t1691 = t1124*t1681;
  t1721 = -1.*t1703*t1414;
  t1722 = t1691 + t1721;
  t1780 = t919*t1773;
  t1810 = t243*t1809;
  t1858 = t102*t1848;
  t1860 = t1780 + t1810 + t1858;
  t1913 = t1124*t1908;
  t1931 = -1.*t1930*t1414;
  t1932 = t1913 + t1931;
  t1113 = t76*t1107;
  t1441 = -1.*t1119*t1423;
  t1447 = t1113 + t1441;
  t2875 = Sin(var1[3]);
  t2888 = Cos(var1[3]);
  t1604 = t76*t1580;
  t1724 = -1.*t1119*t1722;
  t1731 = t1604 + t1724;
  t1861 = t76*t1860;
  t1936 = -1.*t1119*t1932;
  t1940 = t1861 + t1936;
  t1961 = -1.*t1124*t1410;
  t1967 = t1961 + t1962;
  t1985 = -1.*t1124*t1703;
  t1994 = t1985 + t1991;
  t2015 = -1.*t1124*t1930;
  t2029 = t2015 + t2026;
  t2034 = -1.*t1293*t1284;
  t2035 = -1.*t1154*t1354;
  t2037 = t2034 + t2035;
  t2039 = t1124*t2037;
  t2040 = t2039 + t1962;
  t2046 = -1.*t1154*t1624;
  t2052 = -1.*t1293*t1666;
  t2059 = t2046 + t2052;
  t2061 = t1124*t2059;
  t2063 = t2061 + t1991;
  t2066 = -1.*t1154*t1884;
  t2069 = -1.*t1293*t1897;
  t2071 = t2066 + t2069;
  t2072 = t1124*t2071;
  t2078 = t2072 + t2026;
  t2170 = t1154*t2130;
  t2172 = t1293*t2152;
  t2173 = t2170 + t2172;
  t2131 = t1293*t2130;
  t2153 = -1.*t1154*t2152;
  t2157 = t2131 + t2153;
  t2093 = t2085*t216;
  t2095 = -1.000000000049*t96*t670;
  t2106 = t2098*t1034;
  t2109 = t2093 + t2095 + t2106;
  t2159 = t1124*t2157;
  t2177 = -1.*t2173*t1414;
  t2178 = t2159 + t2177;
  t2256 = t1293*t2220;
  t2263 = t1154*t2242;
  t2264 = t2256 + t2263;
  t2230 = -1.*t1154*t2220;
  t2249 = t1293*t2242;
  t2251 = t2230 + t2249;
  t2193 = -1.000000000049*t96*t1492;
  t2198 = t2098*t1550;
  t2205 = t2085*t1572;
  t2208 = t2193 + t2198 + t2205;
  t2253 = t1124*t2251;
  t2267 = -1.*t2264*t1414;
  t2268 = t2253 + t2267;
  t2327 = t1293*t2302;
  t2328 = t1154*t2317;
  t2329 = t2327 + t2328;
  t2307 = -1.*t1154*t2302;
  t2320 = t1293*t2317;
  t2321 = t2307 + t2320;
  t2278 = t2098*t1773;
  t2279 = -1.000000000049*t96*t1809;
  t2280 = t2085*t1848;
  t2285 = t2278 + t2279 + t2280;
  t2324 = t1124*t2321;
  t2340 = -1.*t2329*t1414;
  t2341 = t2324 + t2340;
  t2449 = t1293*t2412;
  t2489 = t1154*t2435;
  t2497 = t2449 + t2489;
  t2413 = -1.*t1154*t2412;
  t2437 = t1293*t2435;
  t2442 = t2413 + t2437;
  t2366 = t102*t2362;
  t2382 = t243*t2381;
  t2397 = t919*t2395;
  t2398 = t2366 + t2382 + t2397;
  t2446 = t1124*t2442;
  t2508 = -1.*t2497*t1414;
  t2527 = t2446 + t2508;
  t2700 = t1154*t2665;
  t2701 = t1293*t2690;
  t2710 = t2700 + t2701;
  t2679 = t1293*t2665;
  t2693 = -1.*t1154*t2690;
  t2695 = t2679 + t2693;
  t2585 = t243*t2575;
  t2611 = t919*t2597;
  t2641 = t102*t2639;
  t2646 = t2585 + t2611 + t2641;
  t2697 = t1124*t2695;
  t2712 = -1.*t2710*t1414;
  t2714 = t2697 + t2712;
  t2815 = t1154*t2788;
  t2816 = t1293*t2797;
  t2817 = t2815 + t2816;
  t2790 = t1293*t2788;
  t2801 = -1.*t1154*t2797;
  t2802 = t2790 + t2801;
  t2736 = t919*t2735;
  t2744 = t102*t2739;
  t2761 = t243*t2755;
  t2764 = t2736 + t2744 + t2761;
  t2814 = t1124*t2802;
  t2820 = -1.*t2817*t1414;
  t2821 = t2814 + t2820;
  t2876 = t1124*t1410;
  t2880 = t1368*t1414;
  t2885 = t2876 + t2880;
  t2892 = t1124*t1703;
  t2894 = t1681*t1414;
  t2895 = t2892 + t2894;
  t2909 = t1124*t1930;
  t2911 = t1908*t1414;
  t2912 = t2909 + t2911;
  t3263 = t2888*t2885;
  t3265 = -1.*t2875*t1447;
  t3269 = t3263 + t3265;
  t3275 = t2888*t2895;
  t3277 = -1.*t2875*t1731;
  t3279 = t3275 + t3277;
  t3280 = t2888*t2912;
  t3281 = -1.*t2875*t1940;
  t3283 = t3280 + t3281;
  t2922 = -1.*t1107*t1119;
  t2923 = -1.*t76*t1423;
  t2924 = t2922 + t2923;
  t2929 = -1.*t1580*t1119;
  t2934 = -1.*t76*t1722;
  t2935 = t2929 + t2934;
  t2939 = -1.*t1860*t1119;
  t2940 = -1.*t76*t1932;
  t2941 = t2939 + t2940;
  t3003 = t2037*t1414;
  t3004 = t1383 + t3003;
  t3016 = t2059*t1414;
  t3017 = t1691 + t3016;
  t3024 = t2071*t1414;
  t3025 = t1913 + t3024;
  t3046 = t1124*t2173;
  t3047 = t2157*t1414;
  t3049 = t3046 + t3047;
  t3063 = t76*t2109;
  t3064 = -1.*t1119*t2178;
  t3067 = t3063 + t3064;
  t3075 = t1124*t2264;
  t3076 = t2251*t1414;
  t3078 = t3075 + t3076;
  t3088 = t76*t2208;
  t3090 = -1.*t1119*t2268;
  t3092 = t3088 + t3090;
  t3103 = t1124*t2329;
  t3105 = t2321*t1414;
  t3106 = t3103 + t3105;
  t3112 = t76*t2285;
  t3113 = -1.*t1119*t2341;
  t3115 = t3112 + t3113;
  t3123 = t1124*t2497;
  t3137 = t2442*t1414;
  t3158 = t3123 + t3137;
  t3162 = t76*t2398;
  t3170 = -1.*t1119*t2527;
  t3175 = t3162 + t3170;
  t3185 = t1124*t2710;
  t3195 = t2695*t1414;
  t3199 = t3185 + t3195;
  t3205 = t76*t2646;
  t3206 = -1.*t1119*t2714;
  t3208 = t3205 + t3206;
  t3226 = t1124*t2817;
  t3228 = t2802*t1414;
  t3230 = t3226 + t3228;
  t3240 = t76*t2764;
  t3245 = -1.*t1119*t2821;
  t3246 = t3240 + t3245;
  t2841 = t1580*t1119;
  t2848 = t76*t1722;
  t2855 = t2841 + t2848;
  t3481 = 2.8e-11*t91;
  t3495 = 2.826290000000002e-7*var1[17];
  t3498 = -0.148715*t968;
  t3500 = -2.18904205e-16*t141;
  t3503 = t253 + t1795;
  t3509 = -0.038576*t3503;
  t3511 = -0.80315*t1746;
  t3512 = t1027 + t187;
  t3514 = -0.5031510000080001*t3512;
  t3519 = -0.038575000014*t1758;
  t3522 = t3495 + t3498 + t3500 + t3509 + t3511 + t3514 + t3519;
  t3527 = 1.1305160000000008e-12*var1[17];
  t3532 = -1.000000000049*t141;
  t3540 = 1. + t3532;
  t3543 = -0.038576*t3540;
  t3544 = -0.03857500001589017*t141;
  t3547 = t248 + t474;
  t3548 = -0.5031510000080001*t3547;
  t3549 = t1539 + t1795;
  t3553 = -3.367757e-6*t3549;
  t3556 = -0.148715*t334;
  t3557 = -0.80315*t1802;
  t3558 = t3527 + t3543 + t3544 + t3548 + t3553 + t3556 + t3557;
  t3560 = -1.9784030000000015e-12*var1[17];
  t3561 = -0.80315*t1823;
  t3562 = -0.5031510000160505*t141;
  t3563 = t1796 + t474;
  t3564 = -0.038576*t3563;
  t3569 = t1027 + t1745;
  t3572 = -3.367757e-6*t3569;
  t3573 = -0.148715*t196;
  t3574 = -0.038575000014*t1827;
  t3576 = t3560 + t3561 + t3562 + t3564 + t3572 + t3573 + t3574;
  t3598 = 7.e-6*t91;
  t3487 = -1. + t78;
  t3489 = 4.e-6*t3487;
  t3585 = -1.*t1293;
  t3587 = 1. + t3585;
  t3588 = -0.15121*t3587;
  t3595 = -2.7726089999999997e-12*var1[16];
  t3596 = -0.2812110000084994*t91;
  t3599 = t3598 + t1160;
  t3601 = -1.8134809999999998e-6*t3599;
  t3603 = t3481 + t96;
  t3604 = -0.038749000006999997*t3603;
  t3608 = t1349*t3522;
  t3609 = t1332*t3558;
  t3611 = t1307*t3576;
  t3612 = t3595 + t3596 + t3601 + t3604 + t3608 + t3609 + t3611;
  t3614 = 3.9608699999999997e-7*var1[16];
  t3615 = -1.1787626499999999e-16*t91;
  t3616 = t3598 + t1346;
  t3617 = -0.281211000004*t3616;
  t3618 = t3489 + t786;
  t3620 = -0.038749000006999997*t3618;
  t3621 = t1265*t3522;
  t3622 = t1232*t3558;
  t3623 = t1221*t3576;
  t3624 = t3614 + t3615 + t3617 + t3620 + t3621 + t3622 + t3623;
  t3477 = 1.5843479999999999e-12*var1[16];
  t3480 = -0.03874900000889869*t91;
  t3485 = t3481 + t1311;
  t3486 = -0.281211000004*t3485;
  t3491 = t3489 + t1226;
  t3493 = -1.8134809999999998e-6*t3491;
  t3525 = t919*t3522;
  t3559 = t243*t3558;
  t3581 = t102*t3576;
  t3582 = t3477 + t3480 + t3486 + t3493 + t3525 + t3559 + t3581;
  t3591 = -0.15121*t1154;
  t3613 = t1293*t3612;
  t3625 = -1.*t1154*t3624;
  t3629 = t3588 + t3591 + t3613 + t3625;
  t3630 = t1124*t3629;
  t3631 = 0.15121*t1154;
  t3633 = t1154*t3612;
  t3634 = t1293*t3624;
  t3636 = t3588 + t3631 + t3633 + t3634;
  t3637 = -1.*t3636*t1414;
  t3639 = t3630 + t3637;
  t2836 = t1107*t1119;
  t2839 = t76*t1423;
  t2840 = t2836 + t2839;
  t3651 = t76*t3582;
  t3652 = -1.*t1119*t3639;
  t3653 = t3651 + t3652;
  t3647 = t3582*t1119;
  t3648 = t76*t3639;
  t3649 = t3647 + t3648;
  t3583 = -1.*t3582*t1119;
  t3640 = -1.*t76*t3639;
  t3643 = t3583 + t3640;
  t3662 = t1124*t3636;
  t3663 = t3629*t1414;
  t3665 = t3662 + t3663;
  t2869 = t1860*t1119;
  t2870 = t76*t1932;
  t2874 = t2869 + t2870;
  t3854 = -1.*t1124*t3636;
  t3856 = -1.*t3629*t1414;
  t3857 = t3854 + t3856;
  t3669 = -1.*t2885*t3665;
  t3671 = -1.*t2840*t3649;
  t3675 = -1.*t1447*t3653;
  t3676 = t3669 + t3671 + t3675;
  t3696 = t2895*t3665;
  t3697 = t2855*t3649;
  t3698 = t1731*t3653;
  t3699 = t3696 + t3697 + t3698;
  t3722 = t2885*t3665;
  t3723 = t2840*t3649;
  t3724 = t1447*t3653;
  t3725 = t3722 + t3723 + t3724;
  t3745 = -1.*t3665*t2912;
  t3747 = -1.*t3649*t2874;
  t3750 = -1.*t3653*t1940;
  t3756 = t3745 + t3747 + t3750;
  t3778 = -1.*t2895*t3665;
  t3779 = -1.*t2855*t3649;
  t3783 = -1.*t1731*t3653;
  t3786 = t3778 + t3779 + t3783;
  t3825 = t3665*t2912;
  t3827 = t3649*t2874;
  t3839 = t3653*t1940;
  t3840 = t3825 + t3827 + t3839;
  t3982 = -0.15121*t1293;
  t3985 = -1.*t1154*t3612;
  t3986 = -1.*t1293*t3624;
  t3987 = t3982 + t3591 + t3985 + t3986;
  t3975 = 0.15121*t1293;
  t3979 = t3975 + t3591 + t3613 + t3625;
  t3994 = t1124*t3987;
  t3995 = -1.*t3979*t1414;
  t4002 = t3994 + t3995;
  t3981 = t1124*t3979;
  t3988 = t3987*t1414;
  t3989 = t3981 + t3988;
  t2209 = t2208*t1119;
  t2269 = t76*t2268;
  t2270 = t2209 + t2269;
  t2112 = t2109*t1119;
  t2179 = t76*t2178;
  t2183 = t2112 + t2179;
  t4151 = t2096 + t1160;
  t4173 = -0.038749000006999997*t4151;
  t4176 = t2120 + t786;
  t4178 = -0.281211000004*t4176;
  t4179 = -1.1787626499999999e-16*t96;
  t4182 = -6.5e-11*t96*t3522;
  t4190 = t2149*t3558;
  t4194 = t2137*t3576;
  t4199 = 3.9608699999999997e-7 + t4173 + t4178 + t4179 + t4182 + t4190 + t4194;
  t4205 = 2.8e-11*t96;
  t4207 = t78 + t4205;
  t4208 = -0.038749000006999997*t4207;
  t4210 = t2132 + t786;
  t4211 = -1.8134809999999998e-6*t4210;
  t4212 = -0.2812110000084994*t96;
  t4213 = t2121*t3522;
  t4215 = t2114*t3558;
  t4216 = -1.000000000016*t96*t3576;
  t4217 = -2.7726089999999997e-12 + t4208 + t4211 + t4212 + t4213 + t4215 + t4216;
  t4221 = -1.*t1154*t4199;
  t4222 = t1293*t4217;
  t4223 = t4221 + t4222;
  t4200 = t1293*t4199;
  t4218 = t1154*t4217;
  t4219 = t4200 + t4218;
  t4236 = t2144 + t1160;
  t4237 = -1.8134809999999998e-6*t4236;
  t4238 = t87 + t4205;
  t4239 = -0.281211000004*t4238;
  t4240 = -0.03874900000889869*t96;
  t4244 = t2098*t3522;
  t4250 = -1.000000000049*t96*t3558;
  t4252 = t2085*t3576;
  t4255 = 1.5843479999999999e-12 + t4237 + t4239 + t4240 + t4244 + t4250 + t4252;
  t4259 = t1124*t4223;
  t4260 = -1.*t4219*t1414;
  t4265 = t4259 + t4260;
  t4220 = t1124*t4219;
  t4224 = t4223*t1414;
  t4227 = t4220 + t4224;
  t4256 = t4255*t1119;
  t4266 = t76*t4265;
  t4267 = t4256 + t4266;
  t4281 = t76*t4255;
  t4283 = -1.*t1119*t4265;
  t4284 = t4281 + t4283;
  t2286 = t2285*t1119;
  t2344 = t76*t2341;
  t2345 = t2286 + t2344;
  t2767 = t2764*t1119;
  t2823 = t76*t2821;
  t2828 = t2767 + t2823;
  t2648 = t2646*t1119;
  t2718 = t76*t2714;
  t2719 = t2648 + t2718;
  t4420 = -0.80315*t2383;
  t4421 = -0.038575000014*t2389;
  t4422 = t2370 + t187;
  t4423 = -0.038576*t4422;
  t4424 = t2588 + t258;
  t4427 = -0.5031510000080001*t4424;
  t4430 = 9.666256095795e-12*t176;
  t4431 = 2.826290000000002e-7 + t4420 + t4421 + t4423 + t4427 + t4430;
  t4437 = t2370 + t1745;
  t4441 = -3.367757e-6*t4437;
  t4442 = -0.80315*t2375;
  t4450 = t127 + t2352;
  t4452 = -0.5031510000080001*t4450;
  t4459 = -0.148715*t2548;
  t4462 = 9.99986000053965e-7*t176;
  t4470 = 1.1305160000000008e-12 + t4441 + t4442 + t4452 + t4459 + t4462;
  t4472 = -0.148715*t2628;
  t4473 = t127 + t2373;
  t4474 = -0.038576*t4473;
  t4475 = -0.038575000014*t2354;
  t4477 = t2351 + t258;
  t4479 = -3.367757e-6*t4477;
  t4483 = 0.2999989999967999*t176;
  t4484 = -1.9784030000000015e-12 + t4472 + t4474 + t4475 + t4479 + t4483;
  t4434 = t1349*t4431;
  t4471 = t1332*t4470;
  t4485 = t1307*t4484;
  t4488 = t4434 + t4471 + t4485;
  t4494 = t1265*t4431;
  t4495 = t1232*t4470;
  t4496 = t1221*t4484;
  t4497 = t4494 + t4495 + t4496;
  t4506 = t1293*t4488;
  t4508 = -1.*t1154*t4497;
  t4512 = t4506 + t4508;
  t4490 = t1154*t4488;
  t4499 = t1293*t4497;
  t4500 = t4490 + t4499;
  t4518 = t919*t4431;
  t4523 = t243*t4470;
  t4525 = t102*t4484;
  t4526 = t4518 + t4523 + t4525;
  t4531 = t1124*t4512;
  t4534 = -1.*t4500*t1414;
  t4537 = t4531 + t4534;
  t4503 = t1124*t4500;
  t4513 = t4512*t1414;
  t4515 = t4503 + t4513;
  t4530 = t4526*t1119;
  t4538 = t76*t4537;
  t4539 = t4530 + t4538;
  t4544 = t76*t4526;
  t4545 = -1.*t1119*t4537;
  t4546 = t4544 + t4545;
  t2403 = t2398*t1119;
  t2529 = t76*t2527;
  t2534 = t2403 + t2529;
  t3849 = -1.*t2885*t3639;
  t3850 = -1.*t1423*t3665;
  t3869 = t2895*t3639;
  t3874 = t1722*t3665;
  t3894 = t2885*t3639;
  t3897 = t1423*t3665;
  t3919 = -1.*t3665*t1932;
  t3920 = -1.*t3639*t2912;
  t3936 = -1.*t2895*t3639;
  t3939 = -1.*t1722*t3665;
  t3947 = t3665*t1932;
  t3948 = t3639*t2912;
  t4730 = -1.*t1107*t3582;
  t4731 = -1.*t1423*t3639;
  t4732 = t4730 + t4731 + t3669;
  t4759 = t1580*t3582;
  t4760 = t1722*t3639;
  t4761 = t4759 + t4760 + t3696;
  t3990 = -1.*t2885*t3989;
  t3992 = -1.*t3004*t3665;
  t4028 = t2895*t3989;
  t4036 = t3017*t3665;
  t4773 = t1107*t3582;
  t4774 = t1423*t3639;
  t4775 = t4773 + t4774 + t3722;
  t4066 = t2885*t3989;
  t4067 = t3004*t3665;
  t4086 = -1.*t3665*t3025;
  t4089 = -1.*t3989*t2912;
  t4795 = -1.*t3582*t1860;
  t4796 = -1.*t3639*t1932;
  t4798 = t4795 + t4796 + t3745;
  t4812 = -1.*t1580*t3582;
  t4813 = -1.*t1722*t3639;
  t4818 = t4812 + t4813 + t3778;
  t4101 = -1.*t2895*t3989;
  t4102 = -1.*t3017*t3665;
  t4124 = t3665*t3025;
  t4125 = t3989*t2912;
  t4826 = t3582*t1860;
  t4827 = t3639*t1932;
  t4828 = t4826 + t4827 + t3825;
  t4150 = -1.*t3049*t3665;
  t4229 = -1.*t2885*t4227;
  t4306 = t3078*t3665;
  t4307 = t2895*t4227;
  t4333 = t3049*t3665;
  t4337 = t2885*t4227;
  t4348 = -1.*t4227*t2912;
  t4354 = -1.*t3665*t3106;
  t4371 = -1.*t3078*t3665;
  t4372 = -1.*t2895*t4227;
  t4390 = t4227*t2912;
  t4393 = t3665*t3106;
  t4516 = -1.*t2885*t4515;
  t4517 = -1.*t3199*t3665;
  t4557 = t4515*t2895;
  t4559 = t3230*t3665;
  t4594 = t2885*t4515;
  t4595 = t3199*t3665;
  t4616 = -1.*t3158*t3665;
  t4636 = -1.*t4515*t2912;
  t4656 = -1.*t4515*t2895;
  t4657 = -1.*t3230*t3665;
  t4684 = t3158*t3665;
  t4685 = t4515*t2912;
  t4903 = -1.*t1107*t4255;
  t4904 = -1.*t2109*t3582;
  t4915 = t1580*t4255;
  t4916 = t2208*t3582;
  t4927 = t1107*t4255;
  t4928 = t2109*t3582;
  t4939 = -1.*t3582*t2285;
  t4940 = -1.*t4255*t1860;
  t4952 = -1.*t1580*t4255;
  t4954 = -1.*t2208*t3582;
  t4964 = t3582*t2285;
  t4966 = t4255*t1860;
  t5159 = -1.*t1410*t3636;
  t5161 = -1.*t1368*t3629;
  t5162 = t4730 + t5159 + t5161;
  t5165 = t1703*t3636;
  t5167 = t1681*t3629;
  t5174 = t4759 + t5165 + t5167;
  t4981 = -1.*t1107*t4526;
  t4982 = -1.*t2646*t3582;
  t4993 = t4526*t1580;
  t4996 = t2764*t3582;
  t5211 = t1410*t3636;
  t5212 = t1368*t3629;
  t5216 = t4773 + t5211 + t5212;
  t5005 = t1107*t4526;
  t5006 = t2646*t3582;
  t5014 = -1.*t2398*t3582;
  t5015 = -1.*t4526*t1860;
  t5229 = -1.*t3636*t1930;
  t5230 = -1.*t3629*t1908;
  t5232 = t4795 + t5229 + t5230;
  t5244 = -1.*t1703*t3636;
  t5245 = -1.*t1681*t3629;
  t5246 = t4812 + t5244 + t5245;
  t5028 = -1.*t4526*t1580;
  t5030 = -1.*t2764*t3582;
  t5038 = t2398*t3582;
  t5040 = t4526*t1860;
  t5266 = t3636*t1930;
  t5267 = t3629*t1908;
  t5271 = t4826 + t5266 + t5267;
  t5427 = -1.*t1354*t3612;
  t5431 = -1.*t1284*t3624;
  t5432 = t5427 + t5431 + t4730;
  t5445 = t1624*t3612;
  t5446 = t1666*t3624;
  t5448 = t5445 + t5446 + t4759;
  t5469 = t1354*t3612;
  t5470 = t1284*t3624;
  t5471 = t5469 + t5470 + t4773;
  t5482 = -1.*t3612*t1884;
  t5483 = -1.*t3624*t1897;
  t5484 = t5482 + t5483 + t4795;
  t5507 = -1.*t1624*t3612;
  t5508 = -1.*t1666*t3624;
  t5509 = t5507 + t5508 + t4812;
  t5519 = t3612*t1884;
  t5520 = t3624*t1897;
  t5521 = t5519 + t5520 + t4826;
  t5653 = -1.*t3522*t1034;
  t5654 = -1.*t670*t3558;
  t5655 = -1.*t216*t3576;
  t5656 = t5653 + t5654 + t5655;
  t5658 = t3522*t2735;
  t5659 = t1492*t4470;
  t5660 = t4431*t1550;
  t5661 = t4484*t1572;
  t5663 = t2755*t3558;
  t5665 = t2739*t3576;
  t5667 = t5658 + t5659 + t5660 + t5661 + t5663 + t5665;
  t5671 = t3522*t1550;
  t5673 = t1492*t3558;
  t5675 = t1572*t3576;
  t5678 = t5671 + t5673 + t5675;
  t5686 = -1.*t670*t4470;
  t5688 = -1.*t4431*t1034;
  t5689 = -1.*t3522*t2597;
  t5690 = -1.*t216*t4484;
  t5691 = -1.*t2575*t3558;
  t5692 = -1.*t2639*t3576;
  t5694 = t5686 + t5688 + t5689 + t5690 + t5691 + t5692;
  t5721 = t3522*t1034;
  t5722 = t670*t3558;
  t5723 = t216*t3576;
  t5724 = t5721 + t5722 + t5723;
  t5727 = t670*t4470;
  t5728 = t4431*t1034;
  t5729 = t3522*t2597;
  t5731 = t216*t4484;
  t5732 = t2575*t3558;
  t5733 = t2639*t3576;
  t5734 = t5727 + t5728 + t5729 + t5731 + t5732 + t5733;
  t5736 = -1.*t1773*t4431;
  t5737 = -1.*t3522*t2395;
  t5738 = -1.*t2381*t3558;
  t5740 = -1.*t4470*t1809;
  t5743 = -1.*t2362*t3576;
  t5744 = -1.*t4484*t1848;
  t5746 = t5736 + t5737 + t5738 + t5740 + t5743 + t5744;
  t5749 = -1.*t3522*t1773;
  t5750 = -1.*t3558*t1809;
  t5751 = -1.*t3576*t1848;
  t5752 = t5749 + t5750 + t5751;
  t5784 = -1.*t3522*t2735;
  t5785 = -1.*t1492*t4470;
  t5787 = -1.*t4431*t1550;
  t5789 = -1.*t4484*t1572;
  t5790 = -1.*t2755*t3558;
  t5791 = -1.*t2739*t3576;
  t5792 = t5784 + t5785 + t5787 + t5789 + t5790 + t5791;
  t5795 = -1.*t3522*t1550;
  t5796 = -1.*t1492*t3558;
  t5797 = -1.*t1572*t3576;
  t5799 = t5795 + t5796 + t5797;
  t5804 = t1773*t4431;
  t5805 = t3522*t2395;
  t5807 = t2381*t3558;
  t5809 = t4470*t1809;
  t5810 = t2362*t3576;
  t5811 = t4484*t1848;
  t5813 = t5804 + t5805 + t5807 + t5809 + t5810 + t5811;
  t5815 = t3522*t1773;
  t5816 = t3558*t1809;
  t5817 = t3576*t1848;
  t5820 = t5815 + t5816 + t5817;
  p_output1[0]=t1447*var2[0] + t1731*var2[1] + t1940*var2[2];
  p_output1[1]=t1967*t76*var2[0] + t1994*t76*var2[1] + t2029*t76*var2[2];
  p_output1[2]=t2040*t76*var2[0] + t2063*t76*var2[1] + t2078*t76*var2[2];
  p_output1[3]=t2183*var2[0] + t2270*var2[1] + t2345*var2[2];
  p_output1[4]=t2719*var2[0] + t2828*var2[1] + t2534*var2[2];
  p_output1[5]=t2840;
  p_output1[6]=t2855;
  p_output1[7]=t2874;
  p_output1[8]=(-1.*t2875*t2885 - 1.*t1447*t2888)*var2[0] + (-1.*t1731*t2888 - 1.*t2875*t2895)*var2[1] + (-1.*t1940*t2888 - 1.*t2875*t2912)*var2[2];
  p_output1[9]=-1.*t2875*t2924*var2[0] - 1.*t2875*t2935*var2[1] - 1.*t2875*t2941*var2[2];
  p_output1[10]=(t1119*t1967*t2875 + t1423*t2888)*var2[0] + (t1119*t1994*t2875 + t1722*t2888)*var2[1] + (t1119*t2029*t2875 + t1932*t2888)*var2[2];
  p_output1[11]=(t1119*t2040*t2875 + t2888*t3004)*var2[0] + (t1119*t2063*t2875 + t2888*t3017)*var2[1] + (t1119*t2078*t2875 + t2888*t3025)*var2[2];
  p_output1[12]=(t2888*t3049 - 1.*t2875*t3067)*var2[0] + (t2888*t3078 - 1.*t2875*t3092)*var2[1] + (t2888*t3106 - 1.*t2875*t3115)*var2[2];
  p_output1[13]=(t2888*t3199 - 1.*t2875*t3208)*var2[0] + (t2888*t3230 - 1.*t2875*t3246)*var2[1] + (t2888*t3158 - 1.*t2875*t3175)*var2[2];
  p_output1[14]=t3269;
  p_output1[15]=t3279;
  p_output1[16]=t3283;
  p_output1[17]=t3269*var2[0] + t3279*var2[1] + t3283*var2[2];
  p_output1[18]=t2888*t2924*var2[0] + t2888*t2935*var2[1] + t2888*t2941*var2[2];
  p_output1[19]=(t1423*t2875 - 1.*t1119*t1967*t2888)*var2[0] + (t1722*t2875 - 1.*t1119*t1994*t2888)*var2[1] + (t1932*t2875 - 1.*t1119*t2029*t2888)*var2[2];
  p_output1[20]=(-1.*t1119*t2040*t2888 + t2875*t3004)*var2[0] + (-1.*t1119*t2063*t2888 + t2875*t3017)*var2[1] + (-1.*t1119*t2078*t2888 + t2875*t3025)*var2[2];
  p_output1[21]=(t2875*t3049 + t2888*t3067)*var2[0] + (t2875*t3078 + t2888*t3092)*var2[1] + (t2875*t3106 + t2888*t3115)*var2[2];
  p_output1[22]=(t2875*t3199 + t2888*t3208)*var2[0] + (t2875*t3230 + t2888*t3246)*var2[1] + (t2875*t3158 + t2888*t3175)*var2[2];
  p_output1[23]=t2875*t2885 + t1447*t2888;
  p_output1[24]=t1731*t2888 + t2875*t2895;
  p_output1[25]=t1940*t2888 + t2875*t2912;
  p_output1[26]=(t2874*(-1.*t1731*t3643 - 1.*t1731*t3649 - 1.*t2855*t3653 - 1.*t2935*t3653) + t2855*(t1940*t3643 + t1940*t3649 + t2874*t3653 + t2941*t3653) + t1940*t3786 + t1731*t3840)*var2[0] + (t2874*(t1447*t3643 + t1447*t3649 + t2840*t3653 + t2924*t3653) + t2840*(-1.*t1940*t3643 - 1.*t1940*t3649 - 1.*t2874*t3653 - 1.*t2941*t3653) + t1940*t3725 + t1447*t3756)*var2[1] + (t2855*(-1.*t1447*t3643 - 1.*t1447*t3649 - 1.*t2840*t3653 - 1.*t2924*t3653) + t2840*(t1731*t3643 + t1731*t3649 + t2855*t3653 + t2935*t3653) + t1731*t3676 + t1447*t3699)*var2[2];
  p_output1[27]=(t2029*t3786*t76 + t1994*t3840*t76 + t2874*(t1119*t1994*t3653 + t1119*t1731*t3857 + t3936 + t3939 - 1.*t1994*t3649*t76 - 1.*t2855*t3857*t76) + t2855*(-1.*t1119*t2029*t3653 - 1.*t1119*t1940*t3857 + t3947 + t3948 + t2029*t3649*t76 + t2874*t3857*t76))*var2[0] + (t2029*t3725*t76 + t1967*t3756*t76 + t2874*(-1.*t1119*t1967*t3653 - 1.*t1119*t1447*t3857 + t3894 + t3897 + t1967*t3649*t76 + t2840*t3857*t76) + t2840*(t1119*t2029*t3653 + t1119*t1940*t3857 + t3919 + t3920 - 1.*t2029*t3649*t76 - 1.*t2874*t3857*t76))*var2[1] + (t1994*t3676*t76 + t1967*t3699*t76 + t2855*(t1119*t1967*t3653 + t3849 + t3850 + t1119*t1447*t3857 - 1.*t1967*t3649*t76 - 1.*t2840*t3857*t76) + t2840*(-1.*t1119*t1994*t3653 - 1.*t1119*t1731*t3857 + t3869 + t3874 + t1994*t3649*t76 + t2855*t3857*t76))*var2[2];
  p_output1[28]=(t2078*t3786*t76 + t2063*t3840*t76 + t2874*(t1119*t2063*t3653 + t1119*t1731*t4002 + t4101 + t4102 - 1.*t2063*t3649*t76 - 1.*t2855*t4002*t76) + t2855*(-1.*t1119*t2078*t3653 - 1.*t1119*t1940*t4002 + t4124 + t4125 + t2078*t3649*t76 + t2874*t4002*t76))*var2[0] + (t2078*t3725*t76 + t2040*t3756*t76 + t2874*(-1.*t1119*t2040*t3653 - 1.*t1119*t1447*t4002 + t4066 + t4067 + t2040*t3649*t76 + t2840*t4002*t76) + t2840*(t1119*t2078*t3653 + t1119*t1940*t4002 + t4086 + t4089 - 1.*t2078*t3649*t76 - 1.*t2874*t4002*t76))*var2[1] + (t2063*t3676*t76 + t2040*t3699*t76 + t2855*(t1119*t2040*t3653 + t3990 + t3992 + t1119*t1447*t4002 - 1.*t2040*t3649*t76 - 1.*t2840*t4002*t76) + t2840*(-1.*t1119*t2063*t3653 - 1.*t1119*t1731*t4002 + t4028 + t4036 + t2063*t3649*t76 + t2855*t4002*t76))*var2[2];
  p_output1[29]=(t2345*t3786 + t2270*t3840 + t2874*(-1.*t2270*t3649 - 1.*t3092*t3653 - 1.*t2855*t4267 - 1.*t1731*t4284 + t4371 + t4372) + t2855*(t2345*t3649 + t3115*t3653 + t2874*t4267 + t1940*t4284 + t4390 + t4393))*var2[0] + (t2345*t3725 + t2183*t3756 + t2874*(t2183*t3649 + t3067*t3653 + t2840*t4267 + t1447*t4284 + t4333 + t4337) + t2840*(-1.*t2345*t3649 - 1.*t3115*t3653 - 1.*t2874*t4267 - 1.*t1940*t4284 + t4348 + t4354))*var2[1] + (t2270*t3676 + t2183*t3699 + t2855*(-1.*t2183*t3649 - 1.*t3067*t3653 + t4150 + t4229 - 1.*t2840*t4267 - 1.*t1447*t4284) + t2840*(t2270*t3649 + t3092*t3653 + t2855*t4267 + t1731*t4284 + t4306 + t4307))*var2[2];
  p_output1[30]=(t2534*t3786 + t2828*t3840 + t2874*(-1.*t2828*t3649 - 1.*t3246*t3653 - 1.*t2855*t4539 - 1.*t1731*t4546 + t4656 + t4657) + t2855*(t2534*t3649 + t3175*t3653 + t2874*t4539 + t1940*t4546 + t4684 + t4685))*var2[0] + (t2534*t3725 + t2719*t3756 + t2874*(t2719*t3649 + t3208*t3653 + t2840*t4539 + t1447*t4546 + t4594 + t4595) + t2840*(-1.*t2534*t3649 - 1.*t3175*t3653 - 1.*t2874*t4539 - 1.*t1940*t4546 + t4616 + t4636))*var2[1] + (t2828*t3676 + t2719*t3699 + t2855*(-1.*t2719*t3649 - 1.*t3208*t3653 + t4516 + t4517 - 1.*t2840*t4539 - 1.*t1447*t4546) + t2840*(t2828*t3649 + t3246*t3653 + t2855*t4539 + t1731*t4546 + t4557 + t4559))*var2[2];
  p_output1[31]=t2874*t3786 + t2855*t3840;
  p_output1[32]=t2874*t3725 + t2840*t3756;
  p_output1[33]=t2855*t3676 + t2840*t3699;
  p_output1[34]=(t2912*(-1.*t1994*t3639 - 1.*t1722*t3857 + t3936 + t3939) + t2895*(t2029*t3639 + t1932*t3857 + t3947 + t3948) + t1932*t4818 + t1722*t4828)*var2[0] + (t2912*(t1967*t3639 + t1423*t3857 + t3894 + t3897) + t2885*(-1.*t2029*t3639 - 1.*t1932*t3857 + t3919 + t3920) + t1932*t4775 + t1423*t4798)*var2[1] + (t2895*(-1.*t1967*t3639 + t3849 + t3850 - 1.*t1423*t3857) + t2885*(t1994*t3639 + t1722*t3857 + t3869 + t3874) + t1722*t4732 + t1423*t4761)*var2[2];
  p_output1[35]=(t2912*(-1.*t2063*t3639 - 1.*t1722*t4002 + t4101 + t4102) + t2895*(t2078*t3639 + t1932*t4002 + t4124 + t4125) + t3025*t4818 + t3017*t4828)*var2[0] + (t2912*(t2040*t3639 + t1423*t4002 + t4066 + t4067) + t2885*(-1.*t2078*t3639 - 1.*t1932*t4002 + t4086 + t4089) + t3025*t4775 + t3004*t4798)*var2[1] + (t2895*(-1.*t2040*t3639 + t3990 + t3992 - 1.*t1423*t4002) + t2885*(t2063*t3639 + t1722*t4002 + t4028 + t4036) + t3017*t4732 + t3004*t4761)*var2[2];
  p_output1[36]=(t3106*t4818 + t3078*t4828 + t2912*(-1.*t2268*t3639 - 1.*t1722*t4265 + t4371 + t4372 + t4952 + t4954) + t2895*(t2341*t3639 + t1932*t4265 + t4390 + t4393 + t4964 + t4966))*var2[0] + (t3106*t4775 + t3049*t4798 + t2912*(t2178*t3639 + t1423*t4265 + t4333 + t4337 + t4927 + t4928) + t2885*(-1.*t2341*t3639 - 1.*t1932*t4265 + t4348 + t4354 + t4939 + t4940))*var2[1] + (t3078*t4732 + t3049*t4761 + t2895*(-1.*t2178*t3639 + t4150 + t4229 - 1.*t1423*t4265 + t4903 + t4904) + t2885*(t2268*t3639 + t1722*t4265 + t4306 + t4307 + t4915 + t4916))*var2[2];
  p_output1[37]=(t3158*t4818 + t3230*t4828 + t2912*(-1.*t2821*t3639 - 1.*t1722*t4537 + t4656 + t4657 + t5028 + t5030) + t2895*(t2527*t3639 + t1932*t4537 + t4684 + t4685 + t5038 + t5040))*var2[0] + (t3158*t4775 + t3199*t4798 + t2912*(t2714*t3639 + t1423*t4537 + t4594 + t4595 + t5005 + t5006) + t2885*(-1.*t2527*t3639 - 1.*t1932*t4537 + t4616 + t4636 + t5014 + t5015))*var2[1] + (t3230*t4732 + t3199*t4761 + t2895*(-1.*t2714*t3639 + t4516 + t4517 - 1.*t1423*t4537 + t4981 + t4982) + t2885*(t2821*t3639 + t1722*t4537 + t4557 + t4559 + t4993 + t4996))*var2[2];
  p_output1[38]=t2912*t4818 + t2895*t4828;
  p_output1[39]=t2912*t4775 + t2885*t4798;
  p_output1[40]=t2895*t4732 + t2885*t4761;
  p_output1[41]=(t1860*(-1.*t2059*t3629 - 1.*t1681*t3636 - 1.*t1703*t3979 - 1.*t1681*t3987) + t1580*(t2071*t3629 + t1908*t3636 + t1930*t3979 + t1908*t3987))*var2[0] + (t1860*(t2037*t3629 + t1368*t3636 + t1410*t3979 + t1368*t3987) + t1107*(-1.*t2071*t3629 - 1.*t1908*t3636 - 1.*t1930*t3979 - 1.*t1908*t3987))*var2[1] + (t1580*(-1.*t2037*t3629 - 1.*t1368*t3636 - 1.*t1410*t3979 - 1.*t1368*t3987) + t1107*(t2059*t3629 + t1681*t3636 + t1703*t3979 + t1681*t3987))*var2[2];
  p_output1[42]=(t1860*(-1.*t2251*t3629 - 1.*t2264*t3636 - 1.*t1703*t4219 - 1.*t1681*t4223 + t4952 + t4954) + t1580*(t2321*t3629 + t2329*t3636 + t1930*t4219 + t1908*t4223 + t4964 + t4966) + t2285*t5246 + t2208*t5271)*var2[0] + (t1860*(t2157*t3629 + t2173*t3636 + t1410*t4219 + t1368*t4223 + t4927 + t4928) + t1107*(-1.*t2321*t3629 - 1.*t2329*t3636 - 1.*t1930*t4219 - 1.*t1908*t4223 + t4939 + t4940) + t2285*t5216 + t2109*t5232)*var2[1] + (t1580*(-1.*t2157*t3629 - 1.*t2173*t3636 - 1.*t1410*t4219 - 1.*t1368*t4223 + t4903 + t4904) + t1107*(t2251*t3629 + t2264*t3636 + t1703*t4219 + t1681*t4223 + t4915 + t4916) + t2208*t5162 + t2109*t5174)*var2[2];
  p_output1[43]=(t1860*(-1.*t2802*t3629 - 1.*t2817*t3636 - 1.*t1703*t4500 - 1.*t1681*t4512 + t5028 + t5030) + t1580*(t2442*t3629 + t2497*t3636 + t1930*t4500 + t1908*t4512 + t5038 + t5040) + t2398*t5246 + t2764*t5271)*var2[0] + (t1860*(t2695*t3629 + t2710*t3636 + t1410*t4500 + t1368*t4512 + t5005 + t5006) + t1107*(-1.*t2442*t3629 - 1.*t2497*t3636 - 1.*t1930*t4500 - 1.*t1908*t4512 + t5014 + t5015) + t2398*t5216 + t2646*t5232)*var2[1] + (t1580*(-1.*t2695*t3629 - 1.*t2710*t3636 - 1.*t1410*t4500 - 1.*t1368*t4512 + t4981 + t4982) + t1107*(t2802*t3629 + t2817*t3636 + t1703*t4500 + t1681*t4512 + t4993 + t4996) + t2764*t5162 + t2646*t5174)*var2[2];
  p_output1[44]=t1860*t5246 + t1580*t5271;
  p_output1[45]=t1860*t5216 + t1107*t5232;
  p_output1[46]=t1580*t5162 + t1107*t5174;
  p_output1[47]=(-0.15121*t2130 + 0.15121*t2152 + t1860*(-1.*t2242*t3612 - 1.*t2220*t3624 - 1.*t1666*t4199 - 1.*t1624*t4217 + t4952 + t4954) + t1580*(t2317*t3612 + t2302*t3624 + t1897*t4199 + t1884*t4217 + t4964 + t4966) + t2285*t5509 + t2208*t5521)*var2[0] + (0.15121*t2220 - 0.15121*t2242 + t1860*(t2130*t3612 + t2152*t3624 + t1284*t4199 + t1354*t4217 + t4927 + t4928) + t1107*(-1.*t2317*t3612 - 1.*t2302*t3624 - 1.*t1897*t4199 - 1.*t1884*t4217 + t4939 + t4940) + t2285*t5471 + t2109*t5484)*var2[1] + (0.15121*t2302 - 0.15121*t2317 + t1580*(-1.*t2130*t3612 - 1.*t2152*t3624 - 1.*t1284*t4199 - 1.*t1354*t4217 + t4903 + t4904) + t1107*(t2242*t3612 + t2220*t3624 + t1666*t4199 + t1624*t4217 + t4915 + t4916) + t2208*t5432 + t2109*t5448)*var2[2];
  p_output1[48]=(-0.15121*t2665 + 0.15121*t2690 + t1860*(-1.*t2788*t3612 - 1.*t2797*t3624 - 1.*t1624*t4488 - 1.*t1666*t4497 + t5028 + t5030) + t1580*(t2435*t3612 + t2412*t3624 + t1884*t4488 + t1897*t4497 + t5038 + t5040) + t2398*t5509 + t2764*t5521)*var2[0] + (-0.15121*t2788 + 0.15121*t2797 + t1860*(t2665*t3612 + t2690*t3624 + t1354*t4488 + t1284*t4497 + t5005 + t5006) + t1107*(-1.*t2435*t3612 - 1.*t2412*t3624 - 1.*t1884*t4488 - 1.*t1897*t4497 + t5014 + t5015) + t2398*t5471 + t2646*t5484)*var2[1] + (0.15121*t2412 - 0.15121*t2435 + t1580*(-1.*t2665*t3612 - 1.*t2690*t3624 - 1.*t1354*t4488 - 1.*t1284*t4497 + t4981 + t4982) + t1107*(t2788*t3612 + t2797*t3624 + t1624*t4488 + t1666*t4497 + t4993 + t4996) + t2764*t5432 + t2646*t5448)*var2[2];
  p_output1[49]=0.15121*t1284 - 0.15121*t1354 + t1860*t5509 + t1580*t5521;
  p_output1[50]=-0.15121*t1624 + 0.15121*t1666 + t1860*t5471 + t1107*t5484;
  p_output1[51]=-0.15121*t1884 + 0.15121*t1897 + t1580*t5432 + t1107*t5448;
  p_output1[52]=(1.e-6*(-7.000000000455e-6*t176 + t2351) + 0.281211*t2575 - 0.038749*t2639 - 1.*t1773*t5792 - 1.*t2395*t5799 - 1.*t1550*t5813 - 1.*t2735*t5820 + 7.e-6*(t1848*t5792 + t2362*t5799 + t1572*t5813 + t2739*t5820) + 4.e-6*(-1.*t1809*t5792 - 1.*t2381*t5799 - 1.*t1492*t5813 - 1.*t2755*t5820))*var2[0] + (1.e-6*(4.00000000026e-6*t176 + t2370) - 0.038749*t2739 + 0.281211*t2755 - 1.*t2395*t5724 - 1.*t1773*t5734 - 1.*t1034*t5746 - 1.*t2597*t5752 + 7.e-6*(t2362*t5724 + t1848*t5734 + t216*t5746 + t2639*t5752) + 4.e-6*(-1.*t2381*t5724 - 1.*t1809*t5734 - 1.*t2575*t5752 - 1.*t5746*t670))*var2[1] + (-0.038749*t2362 + 0.281211*t2381 + 1.e-6*(-6.5e-11*t176 - 7.e-6*t2383 + 4.e-6*t4422) - 1.*t2735*t5656 - 1.*t1034*t5667 - 1.*t2597*t5678 - 1.*t1550*t5694 + 7.e-6*(t2739*t5656 + t216*t5667 + t2639*t5678 + t1572*t5694) + 4.e-6*(-1.*t2755*t5656 - 1.*t2575*t5678 - 1.*t1492*t5694 - 1.*t5667*t670))*var2[2];
  p_output1[53]=-0.038749*t216 - 1.*t1773*t5799 - 1.*t1550*t5820 + 4.e-6*(-1.*t1809*t5799 - 1.*t1492*t5820) + 7.e-6*(t1848*t5799 + t1572*t5820) + 0.281211*t670 + 1.e-6*(t165 + t1745 + 7.e-6*t968);
  p_output1[54]=0.281211*t1492 - 0.038749*t1572 + 1.e-6*(4.e-6*(-1. + t1738) + t1795 + t253) - 1.*t1773*t5724 - 1.*t1034*t5752 + 7.e-6*(t1848*t5724 + t216*t5752) + 4.e-6*(-1.*t1809*t5724 - 1.*t5752*t670);
  p_output1[55]=0.281211*t1809 - 0.038749*t1848 - 1.*t1550*t5656 - 1.*t1034*t5678 + 7.e-6*(t1572*t5656 + t216*t5678) + 4.e-6*(-1.*t1492*t5656 - 1.*t5678*t670) + 1.e-6*(1. - 7.e-6*t1746 + 4.e-6*t3503 + t940);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_ParallelStance1.hh"

namespace ParallelStance1
{

void J_fRrFoot_vec_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
