/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:11:19 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t532;
  double t562;
  double t571;
  double t86;
  double t111;
  double t371;
  double t786;
  double t394;
  double t892;
  double t690;
  double t760;
  double t933;
  double t959;
  double t996;
  double t1276;
  double t1146;
  double t1151;
  double t1184;
  double t1201;
  double t1211;
  double t1236;
  double t1245;
  double t1342;
  double t1404;
  double t1420;
  double t1458;
  double t1479;
  double t393;
  double t1655;
  double t1802;
  double t1657;
  double t1664;
  double t1665;
  double t1679;
  double t1683;
  double t1702;
  double t1707;
  double t1712;
  double t1719;
  double t1740;
  double t1640;
  double t1807;
  double t1811;
  double t1829;
  double t1842;
  double t1866;
  double t1870;
  double t1874;
  double t1885;
  double t1889;
  double t1897;
  double t21;
  double t1110;
  double t1133;
  double t1305;
  double t1335;
  double t498;
  double t1616;
  double t1633;
  double t1980;
  double t1984;
  double t1986;
  double t2003;
  double t2010;
  double t2035;
  double t2049;
  double t2085;
  double t2089;
  double t2109;
  double t2129;
  double t2132;
  double t2138;
  double t2142;
  double t2151;
  double t2168;
  double t2175;
  double t1953;
  double t2290;
  double t2282;
  double t2304;
  double t2323;
  double t2332;
  double t2342;
  double t2349;
  double t2381;
  double t2382;
  double t2407;
  double t2410;
  double t2411;
  double t2416;
  double t2426;
  double t2448;
  double t2451;
  double t2467;
  double t2469;
  double t2470;
  double t2474;
  double t2513;
  double t2518;
  double t2522;
  double t2527;
  double t2534;
  double t2538;
  double t2543;
  double t2555;
  double t1943;
  double t1948;
  double t1950;
  double t1762;
  double t1926;
  double t1929;
  double t2242;
  double t2244;
  double t2246;
  double t2139;
  double t2192;
  double t2218;
  double t2583;
  double t2584;
  double t2587;
  double t2529;
  double t2561;
  double t2565;
  double t2634;
  double t2654;
  double t2687;
  double t2837;
  double t2869;
  double t2870;
  double t2871;
  double t2873;
  double t2877;
  double t2878;
  double t2880;
  double t2894;
  double t2896;
  double t2898;
  double t2899;
  double t2908;
  double t2919;
  double t2927;
  double t2940;
  double t2843;
  double t2844;
  double t2839;
  double t3019;
  double t3020;
  double t3021;
  double t3022;
  double t3028;
  double t3030;
  double t3031;
  double t3032;
  double t3080;
  double t3082;
  double t3085;
  double t3086;
  double t3096;
  double t3097;
  double t3099;
  double t3101;
  double t3159;
  double t3160;
  double t3163;
  double t3164;
  double t3172;
  double t3180;
  double t3186;
  double t3187;
  double t3190;
  double t3191;
  double t3194;
  double t3196;
  double t3200;
  double t3201;
  double t3208;
  double t3209;
  double t3211;
  double t3216;
  double t3217;
  double t3227;
  double t3233;
  double t3234;
  double t3235;
  double t3238;
  double t3244;
  double t3251;
  double t3255;
  double t3299;
  double t3282;
  double t3283;
  double t3295;
  double t3300;
  double t3302;
  double t3305;
  double t3307;
  double t3308;
  double t3312;
  double t3326;
  double t3330;
  double t3331;
  double t3332;
  double t3335;
  double t3337;
  double t3338;
  double t3339;
  double t3365;
  double t3367;
  double t3370;
  double t3376;
  double t3382;
  double t3385;
  double t3386;
  double t3393;
  double t3395;
  double t3401;
  double t3405;
  double t3407;
  double t3425;
  double t3429;
  double t3430;
  double t1068;
  double t1262;
  double t1486;
  double t1532;
  double t1941;
  double t1955;
  double t1967;
  double t1991;
  double t2051;
  double t2096;
  double t2103;
  double t2224;
  double t2247;
  double t2250;
  double t2379;
  double t2447;
  double t2490;
  double t2500;
  double t2568;
  double t2590;
  double t2598;
  double t1579;
  double t1973;
  double t1975;
  double t3593;
  double t3611;
  double t2104;
  double t2265;
  double t2267;
  double t2502;
  double t2607;
  double t2608;
  double t2629;
  double t2638;
  double t2651;
  double t2657;
  double t2676;
  double t2707;
  double t2732;
  double t2735;
  double t2740;
  double t2742;
  double t2743;
  double t2764;
  double t2782;
  double t2784;
  double t2785;
  double t2786;
  double t2789;
  double t2806;
  double t2809;
  double t2812;
  double t2819;
  double t2962;
  double t2967;
  double t2970;
  double t2891;
  double t2946;
  double t2947;
  double t2840;
  double t2842;
  double t2848;
  double t2866;
  double t2960;
  double t2972;
  double t2974;
  double t3049;
  double t3050;
  double t3051;
  double t3027;
  double t3040;
  double t3045;
  double t3001;
  double t3005;
  double t3008;
  double t3012;
  double t3047;
  double t3053;
  double t3054;
  double t3115;
  double t3116;
  double t3125;
  double t3087;
  double t3107;
  double t3112;
  double t3062;
  double t3063;
  double t3071;
  double t3072;
  double t3114;
  double t3129;
  double t3131;
  double t3262;
  double t3266;
  double t3268;
  double t3237;
  double t3259;
  double t3260;
  double t3182;
  double t3198;
  double t3220;
  double t3221;
  double t3261;
  double t3269;
  double t3270;
  double t3343;
  double t3344;
  double t3348;
  double t3334;
  double t3340;
  double t3341;
  double t3298;
  double t3304;
  double t3317;
  double t3320;
  double t3342;
  double t3349;
  double t3351;
  double t3470;
  double t3476;
  double t3497;
  double t3406;
  double t3443;
  double t3444;
  double t3369;
  double t3381;
  double t3387;
  double t3390;
  double t3462;
  double t3519;
  double t3527;
  double t3599;
  double t3601;
  double t3603;
  double t3634;
  double t3636;
  double t3641;
  double t3663;
  double t3668;
  double t3674;
  double t4057;
  double t4061;
  double t4062;
  double t4063;
  double t4076;
  double t4078;
  double t4083;
  double t4086;
  double t4087;
  double t3687;
  double t3689;
  double t3693;
  double t3698;
  double t3702;
  double t3705;
  double t3722;
  double t3723;
  double t3727;
  double t3779;
  double t3780;
  double t3792;
  double t3805;
  double t3815;
  double t3820;
  double t3829;
  double t3830;
  double t3834;
  double t3840;
  double t3845;
  double t3848;
  double t3861;
  double t3862;
  double t3863;
  double t3867;
  double t3876;
  double t3877;
  double t3888;
  double t3889;
  double t3892;
  double t3901;
  double t3902;
  double t3904;
  double t3919;
  double t3926;
  double t3931;
  double t3933;
  double t3936;
  double t3940;
  double t3950;
  double t3953;
  double t3954;
  double t3957;
  double t3968;
  double t3978;
  double t4014;
  double t4019;
  double t4027;
  double t4032;
  double t4039;
  double t4042;
  double t3566;
  double t3569;
  double t3571;
  double t4336;
  double t4368;
  double t4369;
  double t4374;
  double t4375;
  double t4382;
  double t4390;
  double t4391;
  double t4392;
  double t4398;
  double t4399;
  double t4402;
  double t4403;
  double t4407;
  double t4408;
  double t4413;
  double t4414;
  double t4415;
  double t4416;
  double t4417;
  double t4418;
  double t4421;
  double t4422;
  double t4428;
  double t4442;
  double t4452;
  double t4454;
  double t4465;
  double t4466;
  double t4475;
  double t4482;
  double t4484;
  double t4491;
  double t4529;
  double t4345;
  double t4362;
  double t4514;
  double t4517;
  double t4518;
  double t4526;
  double t4527;
  double t4533;
  double t4534;
  double t4536;
  double t4537;
  double t4540;
  double t4542;
  double t4545;
  double t4546;
  double t4550;
  double t4551;
  double t4552;
  double t4555;
  double t4570;
  double t4572;
  double t4575;
  double t4581;
  double t4582;
  double t4583;
  double t4329;
  double t4333;
  double t4337;
  double t4340;
  double t4365;
  double t4367;
  double t4400;
  double t4425;
  double t4501;
  double t4505;
  double t4524;
  double t4549;
  double t4584;
  double t4588;
  double t4599;
  double t4601;
  double t4603;
  double t4618;
  double t4619;
  double t4622;
  double t4629;
  double t3558;
  double t3563;
  double t3565;
  double t4652;
  double t4656;
  double t4664;
  double t4638;
  double t4645;
  double t4647;
  double t4506;
  double t4634;
  double t4635;
  double t4678;
  double t4679;
  double t4680;
  double t3587;
  double t3590;
  double t3591;
  double t4886;
  double t4887;
  double t4889;
  double t4682;
  double t4684;
  double t4689;
  double t4690;
  double t4712;
  double t4717;
  double t4724;
  double t4725;
  double t4760;
  double t4763;
  double t4766;
  double t4767;
  double t4793;
  double t4794;
  double t4798;
  double t4799;
  double t4825;
  double t4839;
  double t4846;
  double t4851;
  double t4872;
  double t4873;
  double t4874;
  double t4875;
  double t5074;
  double t5076;
  double t5080;
  double t5086;
  double t5065;
  double t5067;
  double t5096;
  double t5097;
  double t5100;
  double t5070;
  double t5087;
  double t5089;
  double t3013;
  double t3058;
  double t3060;
  double t2868;
  double t2982;
  double t2994;
  double t5304;
  double t5306;
  double t5307;
  double t5309;
  double t5310;
  double t5321;
  double t5329;
  double t5335;
  double t5336;
  double t5345;
  double t5346;
  double t5354;
  double t5357;
  double t5359;
  double t5361;
  double t5364;
  double t5365;
  double t5369;
  double t5370;
  double t5380;
  double t5382;
  double t5383;
  double t5343;
  double t5371;
  double t5373;
  double t5404;
  double t5405;
  double t5408;
  double t5416;
  double t5425;
  double t5426;
  double t5432;
  double t5448;
  double t5452;
  double t5459;
  double t5468;
  double t5469;
  double t5379;
  double t5384;
  double t5389;
  double t5456;
  double t5475;
  double t5480;
  double t5484;
  double t5487;
  double t5488;
  double t3078;
  double t3144;
  double t3153;
  double t3392;
  double t3535;
  double t3542;
  double t3325;
  double t3354;
  double t3356;
  double t5655;
  double t5656;
  double t5657;
  double t5659;
  double t5664;
  double t5665;
  double t5671;
  double t5673;
  double t5676;
  double t5677;
  double t5679;
  double t5685;
  double t5686;
  double t5690;
  double t5691;
  double t5695;
  double t5700;
  double t5701;
  double t5708;
  double t5714;
  double t5720;
  double t5724;
  double t5734;
  double t5736;
  double t5675;
  double t5699;
  double t5740;
  double t5745;
  double t5754;
  double t5755;
  double t5756;
  double t5757;
  double t5770;
  double t5775;
  double t5776;
  double t5750;
  double t5762;
  double t5765;
  double t5787;
  double t5789;
  double t5791;
  double t5798;
  double t5800;
  double t5806;
  double t5807;
  double t5767;
  double t5779;
  double t5782;
  double t5799;
  double t5809;
  double t5810;
  double t5812;
  double t5814;
  double t5817;
  double t3223;
  double t3272;
  double t3275;
  double t4884;
  double t4885;
  double t4904;
  double t4905;
  double t4927;
  double t4928;
  double t4954;
  double t4957;
  double t4988;
  double t4989;
  double t5022;
  double t5023;
  double t6059;
  double t6061;
  double t6067;
  double t6096;
  double t6101;
  double t6103;
  double t5090;
  double t5091;
  double t5112;
  double t5115;
  double t6111;
  double t6114;
  double t6115;
  double t5167;
  double t5168;
  double t5187;
  double t5191;
  double t6135;
  double t6137;
  double t6138;
  double t6159;
  double t6160;
  double t6161;
  double t5225;
  double t5226;
  double t5251;
  double t5252;
  double t6172;
  double t6173;
  double t6174;
  double t5300;
  double t5393;
  double t5499;
  double t5500;
  double t5520;
  double t5521;
  double t5541;
  double t5543;
  double t5582;
  double t5584;
  double t5617;
  double t5620;
  double t5784;
  double t5786;
  double t5838;
  double t5842;
  double t5861;
  double t5862;
  double t5896;
  double t5898;
  double t5946;
  double t5947;
  double t5977;
  double t5979;
  double t6289;
  double t6290;
  double t6307;
  double t6311;
  double t6371;
  double t6379;
  double t6402;
  double t6403;
  double t6458;
  double t6463;
  double t6546;
  double t6547;
  double t7121;
  double t7122;
  double t7125;
  double t7131;
  double t7133;
  double t7140;
  double t6660;
  double t6664;
  double t6732;
  double t6736;
  double t7235;
  double t7245;
  double t7251;
  double t6775;
  double t6777;
  double t6795;
  double t6799;
  double t7276;
  double t7279;
  double t7280;
  double t7297;
  double t7299;
  double t7301;
  double t6869;
  double t6871;
  double t6885;
  double t6887;
  double t7371;
  double t7375;
  double t7387;
  double t7666;
  double t7668;
  double t7670;
  double t7701;
  double t7702;
  double t7703;
  double t7726;
  double t7729;
  double t7732;
  double t7767;
  double t7769;
  double t7772;
  double t7822;
  double t7835;
  double t7838;
  double t7856;
  double t7857;
  double t7871;
  double t8269;
  double t8270;
  double t8272;
  double t8274;
  double t8276;
  double t8278;
  double t8280;
  double t8282;
  double t8283;
  double t8285;
  double t8286;
  double t8290;
  double t8292;
  double t8294;
  double t8295;
  double t8297;
  double t8300;
  double t8302;
  double t8303;
  double t8305;
  double t8306;
  double t8307;
  double t8383;
  double t8391;
  double t8403;
  double t8409;
  double t8421;
  double t8432;
  double t8436;
  double t8451;
  double t8455;
  double t8458;
  double t8471;
  double t8495;
  double t8496;
  double t8508;
  double t8523;
  double t8525;
  double t8542;
  double t8546;
  double t8548;
  double t8569;
  double t8580;
  double t8583;
  double t8644;
  double t8645;
  double t8646;
  double t8647;
  double t8648;
  double t8649;
  double t8651;
  double t8653;
  double t8654;
  double t8656;
  double t8659;
  double t8662;
  double t8663;
  double t8666;
  double t8670;
  double t8677;
  double t8680;
  double t8684;
  double t8692;
  double t8693;
  double t8700;
  double t8702;
  t532 = Cos(var1[17]);
  t562 = -1.*t532;
  t571 = 1. + t562;
  t86 = Cos(var1[16]);
  t111 = -1.*t86;
  t371 = 1. + t111;
  t786 = Sin(var1[17]);
  t394 = Sin(var1[16]);
  t892 = 4.e-6*t786;
  t690 = 1.000000000016*t571;
  t760 = -7.e-6*t571;
  t933 = t760 + t892;
  t959 = -7.e-6*t933;
  t996 = -1. + t690 + t959;
  t1276 = 4.e-6*t371;
  t1146 = 2.8e-11*t571;
  t1151 = 4.e-6*t571;
  t1184 = 7.e-6*t786;
  t1201 = t1151 + t1184;
  t1211 = -7.e-6*t1201;
  t1236 = -1.*t786;
  t1245 = t1146 + t1211 + t1236;
  t1342 = -6.5e-11*t571;
  t1404 = 1. + t1342;
  t1420 = -7.e-6*t1404;
  t1458 = 7.e-6*t571;
  t1479 = t1420 + t1458 + t892;
  t393 = -2.8e-11*t371;
  t1655 = -7.e-6*t371;
  t1802 = Cos(var1[15]);
  t1657 = -4.e-6*t394;
  t1664 = t1655 + t1657;
  t1665 = t1664*t996;
  t1679 = -7.e-6*t394;
  t1683 = t1276 + t1679;
  t1702 = t1683*t1245;
  t1707 = -6.5e-11*t371;
  t1712 = 1. + t1707;
  t1719 = t1712*t1479;
  t1740 = t1665 + t1702 + t1719;
  t1640 = Sin(var1[15]);
  t1807 = -1.000000000016*t371;
  t1811 = 1. + t1807;
  t1829 = t1811*t996;
  t1842 = -1.*t394;
  t1866 = t393 + t1842;
  t1870 = t1866*t1245;
  t1874 = 4.e-6*t394;
  t1885 = t1655 + t1874;
  t1889 = t1885*t1479;
  t1897 = t1829 + t1870 + t1889;
  t21 = Cos(var1[4]);
  t1110 = -1.000000000049*t371;
  t1133 = 1. + t1110;
  t1305 = 7.e-6*t394;
  t1335 = t1276 + t1305;
  t498 = t393 + t394;
  t1616 = Sin(var1[4]);
  t1633 = Cos(var1[5]);
  t1980 = 1.000000000049*t571;
  t1984 = 4.e-6*t1201;
  t1986 = -1. + t1980 + t1984;
  t2003 = 4.e-6*t1404;
  t2010 = -1. + t532;
  t2035 = 4.e-6*t2010;
  t2049 = t2003 + t2035 + t1184;
  t2085 = 4.e-6*t933;
  t2089 = t1146 + t2085 + t786;
  t2109 = t1866*t1986;
  t2129 = t1885*t2049;
  t2132 = t1811*t2089;
  t2138 = t2109 + t2129 + t2132;
  t2142 = t1683*t1986;
  t2151 = t1712*t2049;
  t2168 = t1664*t2089;
  t2175 = t2142 + t2151 + t2168;
  t1953 = Sin(var1[5]);
  t2290 = -4.e-6*t786;
  t2282 = 6.5e-11*t571;
  t2304 = t760 + t2290;
  t2323 = 7.e-6*t2304;
  t2332 = t2035 + t1184;
  t2342 = 4.e-6*t2332;
  t2349 = -1. + t2282 + t2323 + t2342;
  t2381 = -1. + t1980;
  t2382 = 4.e-6*t2381;
  t2407 = -7.e-6*t786;
  t2410 = -2.8e-11*t571;
  t2411 = t2410 + t786;
  t2416 = 7.e-6*t2411;
  t2426 = t2382 + t2035 + t2407 + t2416;
  t2448 = -1.000000000016*t571;
  t2451 = 1. + t2448;
  t2467 = 7.e-6*t2451;
  t2469 = t1146 + t786;
  t2470 = 4.e-6*t2469;
  t2474 = t2467 + t1458 + t2290 + t2470;
  t2513 = t1885*t2349;
  t2518 = t1866*t2426;
  t2522 = t1811*t2474;
  t2527 = t2513 + t2518 + t2522;
  t2534 = t1712*t2349;
  t2538 = t1683*t2426;
  t2543 = t1664*t2474;
  t2555 = t2534 + t2538 + t2543;
  t1943 = t1802*t1740;
  t1948 = t1640*t1897;
  t1950 = t1943 + t1948;
  t1762 = -1.*t1640*t1740;
  t1926 = t1802*t1897;
  t1929 = t1762 + t1926;
  t2242 = t1640*t2138;
  t2244 = t1802*t2175;
  t2246 = t2242 + t2244;
  t2139 = t1802*t2138;
  t2192 = -1.*t1640*t2175;
  t2218 = t2139 + t2192;
  t2583 = t1640*t2527;
  t2584 = t1802*t2555;
  t2587 = t2583 + t2584;
  t2529 = t1802*t2527;
  t2561 = -1.*t1640*t2555;
  t2565 = t2529 + t2561;
  t2634 = -1.*t1929*t1953;
  t2654 = -1.*t2218*t1953;
  t2687 = -1.*t2565*t1953;
  t2837 = -2.8e-11*t394;
  t2869 = -1.000000000016*t394*t996;
  t2870 = t111 + t2837;
  t2871 = t2870*t1245;
  t2873 = 4.e-6*t86;
  t2877 = t2873 + t1679;
  t2878 = t2877*t1479;
  t2880 = t2869 + t2871 + t2878;
  t2894 = -4.e-6*t86;
  t2896 = t2894 + t1679;
  t2898 = t2896*t996;
  t2899 = -7.e-6*t86;
  t2908 = t2899 + t1874;
  t2919 = t2908*t1245;
  t2927 = -6.5e-11*t394*t1479;
  t2940 = t2898 + t2919 + t2927;
  t2843 = 7.e-6*t86;
  t2844 = t2843 + t1874;
  t2839 = t86 + t2837;
  t3019 = t2908*t1986;
  t3020 = -6.5e-11*t394*t2049;
  t3021 = t2896*t2089;
  t3022 = t3019 + t3020 + t3021;
  t3028 = t2870*t1986;
  t3030 = t2877*t2049;
  t3031 = -1.000000000016*t394*t2089;
  t3032 = t3028 + t3030 + t3031;
  t3080 = -6.5e-11*t394*t2349;
  t3082 = t2908*t2426;
  t3085 = t2896*t2474;
  t3086 = t3080 + t3082 + t3085;
  t3096 = t2877*t2349;
  t3097 = t2870*t2426;
  t3099 = -1.000000000016*t394*t2474;
  t3101 = t3096 + t3097 + t3099;
  t3159 = -4.e-6*t532;
  t3160 = 2.8e-11*t786;
  t3163 = t532 + t3160;
  t3164 = 4.e-6*t3163;
  t3172 = -1.12e-16*t786;
  t3180 = t3159 + t3164 + t3172;
  t3186 = -7.e-6*t532;
  t3187 = -2.8e-11*t786;
  t3190 = t532 + t3187;
  t3191 = 7.e-6*t3190;
  t3194 = 1.96e-16*t786;
  t3196 = t3186 + t3191 + t3194;
  t3200 = t3159 + t2407;
  t3201 = 7.e-6*t3200;
  t3208 = 7.e-6*t532;
  t3209 = t3208 + t2290;
  t3211 = 4.e-6*t3209;
  t3216 = 6.5e-11*t786;
  t3217 = t3201 + t3211 + t3216;
  t3227 = t1664*t3180;
  t3233 = t1683*t3196;
  t3234 = t1712*t3217;
  t3235 = t3227 + t3233 + t3234;
  t3238 = t1811*t3180;
  t3244 = t1866*t3196;
  t3251 = t1885*t3217;
  t3255 = t3238 + t3244 + t3251;
  t3299 = 4.e-6*t532;
  t3282 = t3208 + t892;
  t3283 = -7.e-6*t3282;
  t3295 = t562 + t3283 + t3160;
  t3300 = 7.000000000455e-6*t786;
  t3302 = t3299 + t3300;
  t3305 = t3299 + t2407;
  t3307 = -7.e-6*t3305;
  t3308 = 1.000000000016*t786;
  t3312 = t3307 + t3308;
  t3326 = t1866*t3295;
  t3330 = t1885*t3302;
  t3331 = t1811*t3312;
  t3332 = t3326 + t3330 + t3331;
  t3335 = t1683*t3295;
  t3337 = t1712*t3302;
  t3338 = t1664*t3312;
  t3339 = t3335 + t3337 + t3338;
  t3365 = -4.00000000026e-6*t786;
  t3367 = t3208 + t3365;
  t3370 = 4.e-6*t3305;
  t3376 = t532 + t3370 + t3160;
  t3382 = 4.e-6*t3282;
  t3385 = 1.000000000049*t786;
  t3386 = t3382 + t3385;
  t3393 = t1885*t3367;
  t3395 = t1811*t3376;
  t3401 = t1866*t3386;
  t3405 = t3393 + t3395 + t3401;
  t3407 = t1712*t3367;
  t3425 = t1664*t3376;
  t3429 = t1683*t3386;
  t3430 = t3407 + t3425 + t3429;
  t1068 = t498*t996;
  t1262 = t1133*t1245;
  t1486 = t1335*t1479;
  t1532 = t1068 + t1262 + t1486;
  t1941 = t1633*t1929;
  t1955 = -1.*t1950*t1953;
  t1967 = t1941 + t1955;
  t1991 = t1133*t1986;
  t2051 = t1335*t2049;
  t2096 = t498*t2089;
  t2103 = t1991 + t2051 + t2096;
  t2224 = t1633*t2218;
  t2247 = -1.*t2246*t1953;
  t2250 = t2224 + t2247;
  t2379 = t1335*t2349;
  t2447 = t1133*t2426;
  t2490 = t498*t2474;
  t2500 = t2379 + t2447 + t2490;
  t2568 = t1633*t2565;
  t2590 = -1.*t2587*t1953;
  t2598 = t2568 + t2590;
  t1579 = t21*t1532;
  t1973 = -1.*t1616*t1967;
  t1975 = t1579 + t1973;
  t3593 = Sin(var1[3]);
  t3611 = Cos(var1[3]);
  t2104 = t21*t2103;
  t2265 = -1.*t1616*t2250;
  t2267 = t2104 + t2265;
  t2502 = t21*t2500;
  t2607 = -1.*t1616*t2598;
  t2608 = t2502 + t2607;
  t2629 = -1.*t1633*t1950;
  t2638 = t2629 + t2634;
  t2651 = -1.*t1633*t2246;
  t2657 = t2651 + t2654;
  t2676 = -1.*t1633*t2587;
  t2707 = t2676 + t2687;
  t2732 = -1.*t1802*t1740;
  t2735 = -1.*t1640*t1897;
  t2740 = t2732 + t2735;
  t2742 = t1633*t2740;
  t2743 = t2742 + t2634;
  t2764 = -1.*t1640*t2138;
  t2782 = -1.*t1802*t2175;
  t2784 = t2764 + t2782;
  t2785 = t1633*t2784;
  t2786 = t2785 + t2654;
  t2789 = -1.*t1640*t2527;
  t2806 = -1.*t1802*t2555;
  t2809 = t2789 + t2806;
  t2812 = t1633*t2809;
  t2819 = t2812 + t2687;
  t2962 = t1640*t2880;
  t2967 = t1802*t2940;
  t2970 = t2962 + t2967;
  t2891 = t1802*t2880;
  t2946 = -1.*t1640*t2940;
  t2947 = t2891 + t2946;
  t2840 = t2839*t996;
  t2842 = -1.000000000049*t394*t1245;
  t2848 = t2844*t1479;
  t2866 = t2840 + t2842 + t2848;
  t2960 = t1633*t2947;
  t2972 = -1.*t2970*t1953;
  t2974 = t2960 + t2972;
  t3049 = t1802*t3022;
  t3050 = t1640*t3032;
  t3051 = t3049 + t3050;
  t3027 = -1.*t1640*t3022;
  t3040 = t1802*t3032;
  t3045 = t3027 + t3040;
  t3001 = -1.000000000049*t394*t1986;
  t3005 = t2844*t2049;
  t3008 = t2839*t2089;
  t3012 = t3001 + t3005 + t3008;
  t3047 = t1633*t3045;
  t3053 = -1.*t3051*t1953;
  t3054 = t3047 + t3053;
  t3115 = t1802*t3086;
  t3116 = t1640*t3101;
  t3125 = t3115 + t3116;
  t3087 = -1.*t1640*t3086;
  t3107 = t1802*t3101;
  t3112 = t3087 + t3107;
  t3062 = t2844*t2349;
  t3063 = -1.000000000049*t394*t2426;
  t3071 = t2839*t2474;
  t3072 = t3062 + t3063 + t3071;
  t3114 = t1633*t3112;
  t3129 = -1.*t3125*t1953;
  t3131 = t3114 + t3129;
  t3262 = t1802*t3235;
  t3266 = t1640*t3255;
  t3268 = t3262 + t3266;
  t3237 = -1.*t1640*t3235;
  t3259 = t1802*t3255;
  t3260 = t3237 + t3259;
  t3182 = t498*t3180;
  t3198 = t1133*t3196;
  t3220 = t1335*t3217;
  t3221 = t3182 + t3198 + t3220;
  t3261 = t1633*t3260;
  t3269 = -1.*t3268*t1953;
  t3270 = t3261 + t3269;
  t3343 = t1640*t3332;
  t3344 = t1802*t3339;
  t3348 = t3343 + t3344;
  t3334 = t1802*t3332;
  t3340 = -1.*t1640*t3339;
  t3341 = t3334 + t3340;
  t3298 = t1133*t3295;
  t3304 = t1335*t3302;
  t3317 = t498*t3312;
  t3320 = t3298 + t3304 + t3317;
  t3342 = t1633*t3341;
  t3349 = -1.*t3348*t1953;
  t3351 = t3342 + t3349;
  t3470 = t1640*t3405;
  t3476 = t1802*t3430;
  t3497 = t3470 + t3476;
  t3406 = t1802*t3405;
  t3443 = -1.*t1640*t3430;
  t3444 = t3406 + t3443;
  t3369 = t1335*t3367;
  t3381 = t498*t3376;
  t3387 = t1133*t3386;
  t3390 = t3369 + t3381 + t3387;
  t3462 = t1633*t3444;
  t3519 = -1.*t3497*t1953;
  t3527 = t3462 + t3519;
  t3599 = t1633*t1950;
  t3601 = t1929*t1953;
  t3603 = t3599 + t3601;
  t3634 = t1633*t2246;
  t3636 = t2218*t1953;
  t3641 = t3634 + t3636;
  t3663 = t1633*t2587;
  t3668 = t2565*t1953;
  t3674 = t3663 + t3668;
  t4057 = t3611*t3603;
  t4061 = -1.*t3593*t1975;
  t4062 = t4057 + t4061;
  t4063 = t3611*t3641;
  t4076 = -1.*t3593*t2267;
  t4078 = t4063 + t4076;
  t4083 = t3611*t3674;
  t4086 = -1.*t3593*t2608;
  t4087 = t4083 + t4086;
  t3687 = -1.*t1532*t1616;
  t3689 = -1.*t21*t1967;
  t3693 = t3687 + t3689;
  t3698 = -1.*t2103*t1616;
  t3702 = -1.*t21*t2250;
  t3705 = t3698 + t3702;
  t3722 = -1.*t2500*t1616;
  t3723 = -1.*t21*t2598;
  t3727 = t3722 + t3723;
  t3779 = t2740*t1953;
  t3780 = t1941 + t3779;
  t3792 = t2784*t1953;
  t3805 = t2224 + t3792;
  t3815 = t2809*t1953;
  t3820 = t2568 + t3815;
  t3829 = t1633*t2970;
  t3830 = t2947*t1953;
  t3834 = t3829 + t3830;
  t3840 = t21*t2866;
  t3845 = -1.*t1616*t2974;
  t3848 = t3840 + t3845;
  t3861 = t1633*t3051;
  t3862 = t3045*t1953;
  t3863 = t3861 + t3862;
  t3867 = t21*t3012;
  t3876 = -1.*t1616*t3054;
  t3877 = t3867 + t3876;
  t3888 = t1633*t3125;
  t3889 = t3112*t1953;
  t3892 = t3888 + t3889;
  t3901 = t21*t3072;
  t3902 = -1.*t1616*t3131;
  t3904 = t3901 + t3902;
  t3919 = t1633*t3268;
  t3926 = t3260*t1953;
  t3931 = t3919 + t3926;
  t3933 = t21*t3221;
  t3936 = -1.*t1616*t3270;
  t3940 = t3933 + t3936;
  t3950 = t1633*t3348;
  t3953 = t3341*t1953;
  t3954 = t3950 + t3953;
  t3957 = t21*t3320;
  t3968 = -1.*t1616*t3351;
  t3978 = t3957 + t3968;
  t4014 = t1633*t3497;
  t4019 = t3444*t1953;
  t4027 = t4014 + t4019;
  t4032 = t21*t3390;
  t4039 = -1.*t1616*t3527;
  t4042 = t4032 + t4039;
  t3566 = t2103*t1616;
  t3569 = t21*t2250;
  t3571 = t3566 + t3569;
  t4336 = 2.8e-11*t371;
  t4368 = 2.826290000000002e-7*var1[17];
  t4369 = -0.148715*t1404;
  t4374 = -2.18904205e-16*t571;
  t4375 = t1151 + t2407;
  t4382 = -0.038576*t4375;
  t4390 = -0.80315*t2304;
  t4391 = t1458 + t892;
  t4392 = -0.5031510000080001*t4391;
  t4398 = -0.038575000014*t2332;
  t4399 = t4368 + t4369 + t4374 + t4382 + t4390 + t4392 + t4398;
  t4402 = 1.1305160000000008e-12*var1[17];
  t4403 = -1.000000000049*t571;
  t4407 = 1. + t4403;
  t4408 = -0.038576*t4407;
  t4413 = -0.03857500001589017*t571;
  t4414 = t1146 + t1236;
  t4415 = -0.5031510000080001*t4414;
  t4416 = t2035 + t2407;
  t4417 = -3.367757e-6*t4416;
  t4418 = -0.148715*t1201;
  t4421 = -0.80315*t2411;
  t4422 = t4402 + t4408 + t4413 + t4415 + t4417 + t4418 + t4421;
  t4428 = -1.9784030000000015e-12*var1[17];
  t4442 = -0.80315*t2451;
  t4452 = -0.5031510000160505*t571;
  t4454 = t2410 + t1236;
  t4465 = -0.038576*t4454;
  t4466 = t1458 + t2290;
  t4475 = -3.367757e-6*t4466;
  t4482 = -0.148715*t933;
  t4484 = -0.038575000014*t2469;
  t4491 = t4428 + t4442 + t4452 + t4465 + t4475 + t4482 + t4484;
  t4529 = 7.e-6*t371;
  t4345 = -1. + t86;
  t4362 = 4.e-6*t4345;
  t4514 = -1.*t1802;
  t4517 = 1. + t4514;
  t4518 = -0.15121*t4517;
  t4526 = -2.7726089999999997e-12*var1[16];
  t4527 = -0.2812110000084994*t371;
  t4533 = t4529 + t1657;
  t4534 = -1.8134809999999998e-6*t4533;
  t4536 = t4336 + t394;
  t4537 = -0.038749000006999997*t4536;
  t4540 = t1885*t4399;
  t4542 = t1866*t4422;
  t4545 = t1811*t4491;
  t4546 = t4526 + t4527 + t4534 + t4537 + t4540 + t4542 + t4545;
  t4550 = 3.9608699999999997e-7*var1[16];
  t4551 = -1.1787626499999999e-16*t371;
  t4552 = t4529 + t1874;
  t4555 = -0.281211000004*t4552;
  t4570 = t4362 + t1305;
  t4572 = -0.038749000006999997*t4570;
  t4575 = t1712*t4399;
  t4581 = t1683*t4422;
  t4582 = t1664*t4491;
  t4583 = t4550 + t4551 + t4555 + t4572 + t4575 + t4581 + t4582;
  t4329 = 1.5843479999999999e-12*var1[16];
  t4333 = -0.03874900000889869*t371;
  t4337 = t4336 + t1842;
  t4340 = -0.281211000004*t4337;
  t4365 = t4362 + t1679;
  t4367 = -1.8134809999999998e-6*t4365;
  t4400 = t1335*t4399;
  t4425 = t1133*t4422;
  t4501 = t498*t4491;
  t4505 = t4329 + t4333 + t4340 + t4367 + t4400 + t4425 + t4501;
  t4524 = -0.15121*t1640;
  t4549 = t1802*t4546;
  t4584 = -1.*t1640*t4583;
  t4588 = t4518 + t4524 + t4549 + t4584;
  t4599 = t1633*t4588;
  t4601 = 0.15121*t1640;
  t4603 = t1640*t4546;
  t4618 = t1802*t4583;
  t4619 = t4518 + t4601 + t4603 + t4618;
  t4622 = -1.*t4619*t1953;
  t4629 = t4599 + t4622;
  t3558 = t1532*t1616;
  t3563 = t21*t1967;
  t3565 = t3558 + t3563;
  t4652 = t21*t4505;
  t4656 = -1.*t1616*t4629;
  t4664 = t4652 + t4656;
  t4638 = t4505*t1616;
  t4645 = t21*t4629;
  t4647 = t4638 + t4645;
  t4506 = -1.*t4505*t1616;
  t4634 = -1.*t21*t4629;
  t4635 = t4506 + t4634;
  t4678 = t1633*t4619;
  t4679 = t4588*t1953;
  t4680 = t4678 + t4679;
  t3587 = t2500*t1616;
  t3590 = t21*t2598;
  t3591 = t3587 + t3590;
  t4886 = -1.*t1633*t4619;
  t4887 = -1.*t4588*t1953;
  t4889 = t4886 + t4887;
  t4682 = -1.*t3603*t4680;
  t4684 = -1.*t3565*t4647;
  t4689 = -1.*t1975*t4664;
  t4690 = t4682 + t4684 + t4689;
  t4712 = t3641*t4680;
  t4717 = t3571*t4647;
  t4724 = t2267*t4664;
  t4725 = t4712 + t4717 + t4724;
  t4760 = t3603*t4680;
  t4763 = t3565*t4647;
  t4766 = t1975*t4664;
  t4767 = t4760 + t4763 + t4766;
  t4793 = -1.*t4680*t3674;
  t4794 = -1.*t4647*t3591;
  t4798 = -1.*t4664*t2608;
  t4799 = t4793 + t4794 + t4798;
  t4825 = -1.*t3641*t4680;
  t4839 = -1.*t3571*t4647;
  t4846 = -1.*t2267*t4664;
  t4851 = t4825 + t4839 + t4846;
  t4872 = t4680*t3674;
  t4873 = t4647*t3591;
  t4874 = t4664*t2608;
  t4875 = t4872 + t4873 + t4874;
  t5074 = -0.15121*t1802;
  t5076 = -1.*t1640*t4546;
  t5080 = -1.*t1802*t4583;
  t5086 = t5074 + t4524 + t5076 + t5080;
  t5065 = 0.15121*t1802;
  t5067 = t5065 + t4524 + t4549 + t4584;
  t5096 = t1633*t5086;
  t5097 = -1.*t5067*t1953;
  t5100 = t5096 + t5097;
  t5070 = t1633*t5067;
  t5087 = t5086*t1953;
  t5089 = t5070 + t5087;
  t3013 = t3012*t1616;
  t3058 = t21*t3054;
  t3060 = t3013 + t3058;
  t2868 = t2866*t1616;
  t2982 = t21*t2974;
  t2994 = t2868 + t2982;
  t5304 = t2843 + t1657;
  t5306 = -0.038749000006999997*t5304;
  t5307 = t2873 + t1305;
  t5309 = -0.281211000004*t5307;
  t5310 = -1.1787626499999999e-16*t394;
  t5321 = -6.5e-11*t394*t4399;
  t5329 = t2908*t4422;
  t5335 = t2896*t4491;
  t5336 = 3.9608699999999997e-7 + t5306 + t5309 + t5310 + t5321 + t5329 + t5335;
  t5345 = 2.8e-11*t394;
  t5346 = t86 + t5345;
  t5354 = -0.038749000006999997*t5346;
  t5357 = t2894 + t1305;
  t5359 = -1.8134809999999998e-6*t5357;
  t5361 = -0.2812110000084994*t394;
  t5364 = t2877*t4399;
  t5365 = t2870*t4422;
  t5369 = -1.000000000016*t394*t4491;
  t5370 = -2.7726089999999997e-12 + t5354 + t5359 + t5361 + t5364 + t5365 + t5369;
  t5380 = -1.*t1640*t5336;
  t5382 = t1802*t5370;
  t5383 = t5380 + t5382;
  t5343 = t1802*t5336;
  t5371 = t1640*t5370;
  t5373 = t5343 + t5371;
  t5404 = t2899 + t1657;
  t5405 = -1.8134809999999998e-6*t5404;
  t5408 = t111 + t5345;
  t5416 = -0.281211000004*t5408;
  t5425 = -0.03874900000889869*t394;
  t5426 = t2844*t4399;
  t5432 = -1.000000000049*t394*t4422;
  t5448 = t2839*t4491;
  t5452 = 1.5843479999999999e-12 + t5405 + t5416 + t5425 + t5426 + t5432 + t5448;
  t5459 = t1633*t5383;
  t5468 = -1.*t5373*t1953;
  t5469 = t5459 + t5468;
  t5379 = t1633*t5373;
  t5384 = t5383*t1953;
  t5389 = t5379 + t5384;
  t5456 = t5452*t1616;
  t5475 = t21*t5469;
  t5480 = t5456 + t5475;
  t5484 = t21*t5452;
  t5487 = -1.*t1616*t5469;
  t5488 = t5484 + t5487;
  t3078 = t3072*t1616;
  t3144 = t21*t3131;
  t3153 = t3078 + t3144;
  t3392 = t3390*t1616;
  t3535 = t21*t3527;
  t3542 = t3392 + t3535;
  t3325 = t3320*t1616;
  t3354 = t21*t3351;
  t3356 = t3325 + t3354;
  t5655 = -0.80315*t3200;
  t5656 = -0.038575000014*t3209;
  t5657 = t3186 + t892;
  t5659 = -0.038576*t5657;
  t5664 = t3299 + t1184;
  t5665 = -0.5031510000080001*t5664;
  t5671 = 9.666256095795e-12*t786;
  t5673 = 2.826290000000002e-7 + t5655 + t5656 + t5659 + t5665 + t5671;
  t5676 = t3186 + t2290;
  t5677 = -3.367757e-6*t5676;
  t5679 = -0.80315*t3190;
  t5685 = t562 + t3160;
  t5686 = -0.5031510000080001*t5685;
  t5690 = -0.148715*t3282;
  t5691 = 9.99986000053965e-7*t786;
  t5695 = 1.1305160000000008e-12 + t5677 + t5679 + t5686 + t5690 + t5691;
  t5700 = -0.148715*t3305;
  t5701 = t562 + t3187;
  t5708 = -0.038576*t5701;
  t5714 = -0.038575000014*t3163;
  t5720 = t3159 + t1184;
  t5724 = -3.367757e-6*t5720;
  t5734 = 0.2999989999967999*t786;
  t5736 = -1.9784030000000015e-12 + t5700 + t5708 + t5714 + t5724 + t5734;
  t5675 = t1885*t5673;
  t5699 = t1866*t5695;
  t5740 = t1811*t5736;
  t5745 = t5675 + t5699 + t5740;
  t5754 = t1712*t5673;
  t5755 = t1683*t5695;
  t5756 = t1664*t5736;
  t5757 = t5754 + t5755 + t5756;
  t5770 = t1802*t5745;
  t5775 = -1.*t1640*t5757;
  t5776 = t5770 + t5775;
  t5750 = t1640*t5745;
  t5762 = t1802*t5757;
  t5765 = t5750 + t5762;
  t5787 = t1335*t5673;
  t5789 = t1133*t5695;
  t5791 = t498*t5736;
  t5798 = t5787 + t5789 + t5791;
  t5800 = t1633*t5776;
  t5806 = -1.*t5765*t1953;
  t5807 = t5800 + t5806;
  t5767 = t1633*t5765;
  t5779 = t5776*t1953;
  t5782 = t5767 + t5779;
  t5799 = t5798*t1616;
  t5809 = t21*t5807;
  t5810 = t5799 + t5809;
  t5812 = t21*t5798;
  t5814 = -1.*t1616*t5807;
  t5817 = t5812 + t5814;
  t3223 = t3221*t1616;
  t3272 = t21*t3270;
  t3275 = t3223 + t3272;
  t4884 = -1.*t3603*t4629;
  t4885 = -1.*t1967*t4680;
  t4904 = t3641*t4629;
  t4905 = t2250*t4680;
  t4927 = t3603*t4629;
  t4928 = t1967*t4680;
  t4954 = -1.*t4680*t2598;
  t4957 = -1.*t4629*t3674;
  t4988 = -1.*t3641*t4629;
  t4989 = -1.*t2250*t4680;
  t5022 = t4680*t2598;
  t5023 = t4629*t3674;
  t6059 = -1.*t1532*t4505;
  t6061 = -1.*t1967*t4629;
  t6067 = t6059 + t6061 + t4682;
  t6096 = t2103*t4505;
  t6101 = t2250*t4629;
  t6103 = t6096 + t6101 + t4712;
  t5090 = -1.*t3603*t5089;
  t5091 = -1.*t3780*t4680;
  t5112 = t3641*t5089;
  t5115 = t3805*t4680;
  t6111 = t1532*t4505;
  t6114 = t1967*t4629;
  t6115 = t6111 + t6114 + t4760;
  t5167 = t3603*t5089;
  t5168 = t3780*t4680;
  t5187 = -1.*t4680*t3820;
  t5191 = -1.*t5089*t3674;
  t6135 = -1.*t4505*t2500;
  t6137 = -1.*t4629*t2598;
  t6138 = t6135 + t6137 + t4793;
  t6159 = -1.*t2103*t4505;
  t6160 = -1.*t2250*t4629;
  t6161 = t6159 + t6160 + t4825;
  t5225 = -1.*t3641*t5089;
  t5226 = -1.*t3805*t4680;
  t5251 = t4680*t3820;
  t5252 = t5089*t3674;
  t6172 = t4505*t2500;
  t6173 = t4629*t2598;
  t6174 = t6172 + t6173 + t4872;
  t5300 = -1.*t3834*t4680;
  t5393 = -1.*t3603*t5389;
  t5499 = t3863*t4680;
  t5500 = t3641*t5389;
  t5520 = t3834*t4680;
  t5521 = t3603*t5389;
  t5541 = -1.*t5389*t3674;
  t5543 = -1.*t4680*t3892;
  t5582 = -1.*t3863*t4680;
  t5584 = -1.*t3641*t5389;
  t5617 = t5389*t3674;
  t5620 = t4680*t3892;
  t5784 = -1.*t3603*t5782;
  t5786 = -1.*t3954*t4680;
  t5838 = t5782*t3641;
  t5842 = t4027*t4680;
  t5861 = t3603*t5782;
  t5862 = t3954*t4680;
  t5896 = -1.*t3931*t4680;
  t5898 = -1.*t5782*t3674;
  t5946 = -1.*t5782*t3641;
  t5947 = -1.*t4027*t4680;
  t5977 = t3931*t4680;
  t5979 = t5782*t3674;
  t6289 = -1.*t1532*t5452;
  t6290 = -1.*t2866*t4505;
  t6307 = t2103*t5452;
  t6311 = t3012*t4505;
  t6371 = t1532*t5452;
  t6379 = t2866*t4505;
  t6402 = -1.*t4505*t3072;
  t6403 = -1.*t5452*t2500;
  t6458 = -1.*t2103*t5452;
  t6463 = -1.*t3012*t4505;
  t6546 = t4505*t3072;
  t6547 = t5452*t2500;
  t7121 = -1.*t1950*t4619;
  t7122 = -1.*t1929*t4588;
  t7125 = t6059 + t7121 + t7122;
  t7131 = t2246*t4619;
  t7133 = t2218*t4588;
  t7140 = t6096 + t7131 + t7133;
  t6660 = -1.*t1532*t5798;
  t6664 = -1.*t3320*t4505;
  t6732 = t5798*t2103;
  t6736 = t3390*t4505;
  t7235 = t1950*t4619;
  t7245 = t1929*t4588;
  t7251 = t6111 + t7235 + t7245;
  t6775 = t1532*t5798;
  t6777 = t3320*t4505;
  t6795 = -1.*t3221*t4505;
  t6799 = -1.*t5798*t2500;
  t7276 = -1.*t4619*t2587;
  t7279 = -1.*t4588*t2565;
  t7280 = t6135 + t7276 + t7279;
  t7297 = -1.*t2246*t4619;
  t7299 = -1.*t2218*t4588;
  t7301 = t6159 + t7297 + t7299;
  t6869 = -1.*t5798*t2103;
  t6871 = -1.*t3390*t4505;
  t6885 = t3221*t4505;
  t6887 = t5798*t2500;
  t7371 = t4619*t2587;
  t7375 = t4588*t2565;
  t7387 = t6172 + t7371 + t7375;
  t7666 = -1.*t1897*t4546;
  t7668 = -1.*t1740*t4583;
  t7670 = t7666 + t7668 + t6059;
  t7701 = t2138*t4546;
  t7702 = t2175*t4583;
  t7703 = t7701 + t7702 + t6096;
  t7726 = t1897*t4546;
  t7729 = t1740*t4583;
  t7732 = t7726 + t7729 + t6111;
  t7767 = -1.*t4546*t2527;
  t7769 = -1.*t4583*t2555;
  t7772 = t7767 + t7769 + t6135;
  t7822 = -1.*t2138*t4546;
  t7835 = -1.*t2175*t4583;
  t7838 = t7822 + t7835 + t6159;
  t7856 = t4546*t2527;
  t7857 = t4583*t2555;
  t7871 = t7856 + t7857 + t6172;
  t8269 = -1.*t4399*t1479;
  t8270 = -1.*t1245*t4422;
  t8272 = -1.*t996*t4491;
  t8274 = t8269 + t8270 + t8272;
  t8276 = t4399*t3367;
  t8278 = t1986*t5695;
  t8280 = t5673*t2049;
  t8282 = t5736*t2089;
  t8283 = t3386*t4422;
  t8285 = t3376*t4491;
  t8286 = t8276 + t8278 + t8280 + t8282 + t8283 + t8285;
  t8290 = t4399*t2049;
  t8292 = t1986*t4422;
  t8294 = t2089*t4491;
  t8295 = t8290 + t8292 + t8294;
  t8297 = -1.*t1245*t5695;
  t8300 = -1.*t5673*t1479;
  t8302 = -1.*t4399*t3302;
  t8303 = -1.*t996*t5736;
  t8305 = -1.*t3295*t4422;
  t8306 = -1.*t3312*t4491;
  t8307 = t8297 + t8300 + t8302 + t8303 + t8305 + t8306;
  t8383 = t4399*t1479;
  t8391 = t1245*t4422;
  t8403 = t996*t4491;
  t8409 = t8383 + t8391 + t8403;
  t8421 = t1245*t5695;
  t8432 = t5673*t1479;
  t8436 = t4399*t3302;
  t8451 = t996*t5736;
  t8455 = t3295*t4422;
  t8458 = t3312*t4491;
  t8471 = t8421 + t8432 + t8436 + t8451 + t8455 + t8458;
  t8495 = -1.*t2349*t5673;
  t8496 = -1.*t4399*t3217;
  t8508 = -1.*t3196*t4422;
  t8523 = -1.*t5695*t2426;
  t8525 = -1.*t3180*t4491;
  t8542 = -1.*t5736*t2474;
  t8546 = t8495 + t8496 + t8508 + t8523 + t8525 + t8542;
  t8548 = -1.*t4399*t2349;
  t8569 = -1.*t4422*t2426;
  t8580 = -1.*t4491*t2474;
  t8583 = t8548 + t8569 + t8580;
  t8644 = -1.*t4399*t3367;
  t8645 = -1.*t1986*t5695;
  t8646 = -1.*t5673*t2049;
  t8647 = -1.*t5736*t2089;
  t8648 = -1.*t3386*t4422;
  t8649 = -1.*t3376*t4491;
  t8651 = t8644 + t8645 + t8646 + t8647 + t8648 + t8649;
  t8653 = -1.*t4399*t2049;
  t8654 = -1.*t1986*t4422;
  t8656 = -1.*t2089*t4491;
  t8659 = t8653 + t8654 + t8656;
  t8662 = t2349*t5673;
  t8663 = t4399*t3217;
  t8666 = t3196*t4422;
  t8670 = t5695*t2426;
  t8677 = t3180*t4491;
  t8680 = t5736*t2474;
  t8684 = t8662 + t8663 + t8666 + t8670 + t8677 + t8680;
  t8692 = t4399*t2349;
  t8693 = t4422*t2426;
  t8700 = t4491*t2474;
  t8702 = t8692 + t8693 + t8700;
  p_output1[0]=t1975*var2[0] + t2267*var2[1] + t2608*var2[2];
  p_output1[1]=t21*t2638*var2[0] + t21*t2657*var2[1] + t21*t2707*var2[2];
  p_output1[2]=t21*t2743*var2[0] + t21*t2786*var2[1] + t21*t2819*var2[2];
  p_output1[3]=t2994*var2[0] + t3060*var2[1] + t3153*var2[2];
  p_output1[4]=t3356*var2[0] + t3542*var2[1] + t3275*var2[2];
  p_output1[5]=t3565;
  p_output1[6]=t3571;
  p_output1[7]=t3591;
  p_output1[8]=(-1.*t3593*t3603 - 1.*t1975*t3611)*var2[0] + (-1.*t2267*t3611 - 1.*t3593*t3641)*var2[1] + (-1.*t2608*t3611 - 1.*t3593*t3674)*var2[2];
  p_output1[9]=-1.*t3593*t3693*var2[0] - 1.*t3593*t3705*var2[1] - 1.*t3593*t3727*var2[2];
  p_output1[10]=(t1616*t2638*t3593 + t1967*t3611)*var2[0] + (t1616*t2657*t3593 + t2250*t3611)*var2[1] + (t1616*t2707*t3593 + t2598*t3611)*var2[2];
  p_output1[11]=(t1616*t2743*t3593 + t3611*t3780)*var2[0] + (t1616*t2786*t3593 + t3611*t3805)*var2[1] + (t1616*t2819*t3593 + t3611*t3820)*var2[2];
  p_output1[12]=(t3611*t3834 - 1.*t3593*t3848)*var2[0] + (t3611*t3863 - 1.*t3593*t3877)*var2[1] + (t3611*t3892 - 1.*t3593*t3904)*var2[2];
  p_output1[13]=(t3611*t3954 - 1.*t3593*t3978)*var2[0] + (t3611*t4027 - 1.*t3593*t4042)*var2[1] + (t3611*t3931 - 1.*t3593*t3940)*var2[2];
  p_output1[14]=t4062;
  p_output1[15]=t4078;
  p_output1[16]=t4087;
  p_output1[17]=t4062*var2[0] + t4078*var2[1] + t4087*var2[2];
  p_output1[18]=t3611*t3693*var2[0] + t3611*t3705*var2[1] + t3611*t3727*var2[2];
  p_output1[19]=(t1967*t3593 - 1.*t1616*t2638*t3611)*var2[0] + (t2250*t3593 - 1.*t1616*t2657*t3611)*var2[1] + (t2598*t3593 - 1.*t1616*t2707*t3611)*var2[2];
  p_output1[20]=(-1.*t1616*t2743*t3611 + t3593*t3780)*var2[0] + (-1.*t1616*t2786*t3611 + t3593*t3805)*var2[1] + (-1.*t1616*t2819*t3611 + t3593*t3820)*var2[2];
  p_output1[21]=(t3593*t3834 + t3611*t3848)*var2[0] + (t3593*t3863 + t3611*t3877)*var2[1] + (t3593*t3892 + t3611*t3904)*var2[2];
  p_output1[22]=(t3593*t3954 + t3611*t3978)*var2[0] + (t3593*t4027 + t3611*t4042)*var2[1] + (t3593*t3931 + t3611*t3940)*var2[2];
  p_output1[23]=t3593*t3603 + t1975*t3611;
  p_output1[24]=t2267*t3611 + t3593*t3641;
  p_output1[25]=t2608*t3611 + t3593*t3674;
  p_output1[26]=(t3591*(-1.*t2267*t4635 - 1.*t2267*t4647 - 1.*t3571*t4664 - 1.*t3705*t4664) + t3571*(t2608*t4635 + t2608*t4647 + t3591*t4664 + t3727*t4664) + t2608*t4851 + t2267*t4875)*var2[0] + (t3591*(t1975*t4635 + t1975*t4647 + t3565*t4664 + t3693*t4664) + t3565*(-1.*t2608*t4635 - 1.*t2608*t4647 - 1.*t3591*t4664 - 1.*t3727*t4664) + t2608*t4767 + t1975*t4799)*var2[1] + (t3571*(-1.*t1975*t4635 - 1.*t1975*t4647 - 1.*t3565*t4664 - 1.*t3693*t4664) + t3565*(t2267*t4635 + t2267*t4647 + t3571*t4664 + t3705*t4664) + t2267*t4690 + t1975*t4725)*var2[2];
  p_output1[27]=(t21*t2707*t4851 + t21*t2657*t4875 + t3591*(-1.*t21*t2657*t4647 + t1616*t2657*t4664 + t1616*t2267*t4889 - 1.*t21*t3571*t4889 + t4988 + t4989) + t3571*(t21*t2707*t4647 - 1.*t1616*t2707*t4664 - 1.*t1616*t2608*t4889 + t21*t3591*t4889 + t5022 + t5023))*var2[0] + (t21*t2707*t4767 + t21*t2638*t4799 + t3591*(t21*t2638*t4647 - 1.*t1616*t2638*t4664 - 1.*t1616*t1975*t4889 + t21*t3565*t4889 + t4927 + t4928) + t3565*(-1.*t21*t2707*t4647 + t1616*t2707*t4664 + t1616*t2608*t4889 - 1.*t21*t3591*t4889 + t4954 + t4957))*var2[1] + (t21*t2657*t4690 + t21*t2638*t4725 + t3571*(-1.*t21*t2638*t4647 + t1616*t2638*t4664 + t4884 + t4885 + t1616*t1975*t4889 - 1.*t21*t3565*t4889) + t3565*(t21*t2657*t4647 - 1.*t1616*t2657*t4664 - 1.*t1616*t2267*t4889 + t21*t3571*t4889 + t4904 + t4905))*var2[2];
  p_output1[28]=(t21*t2819*t4851 + t21*t2786*t4875 + t3591*(-1.*t21*t2786*t4647 + t1616*t2786*t4664 + t1616*t2267*t5100 - 1.*t21*t3571*t5100 + t5225 + t5226) + t3571*(t21*t2819*t4647 - 1.*t1616*t2819*t4664 - 1.*t1616*t2608*t5100 + t21*t3591*t5100 + t5251 + t5252))*var2[0] + (t21*t2819*t4767 + t21*t2743*t4799 + t3591*(t21*t2743*t4647 - 1.*t1616*t2743*t4664 - 1.*t1616*t1975*t5100 + t21*t3565*t5100 + t5167 + t5168) + t3565*(-1.*t21*t2819*t4647 + t1616*t2819*t4664 + t1616*t2608*t5100 - 1.*t21*t3591*t5100 + t5187 + t5191))*var2[1] + (t21*t2786*t4690 + t21*t2743*t4725 + t3571*(-1.*t21*t2743*t4647 + t1616*t2743*t4664 + t5090 + t5091 + t1616*t1975*t5100 - 1.*t21*t3565*t5100) + t3565*(t21*t2786*t4647 - 1.*t1616*t2786*t4664 - 1.*t1616*t2267*t5100 + t21*t3571*t5100 + t5112 + t5115))*var2[2];
  p_output1[29]=(t3153*t4851 + t3060*t4875 + t3591*(-1.*t3060*t4647 - 1.*t3877*t4664 - 1.*t3571*t5480 - 1.*t2267*t5488 + t5582 + t5584) + t3571*(t3153*t4647 + t3904*t4664 + t3591*t5480 + t2608*t5488 + t5617 + t5620))*var2[0] + (t3153*t4767 + t2994*t4799 + t3591*(t2994*t4647 + t3848*t4664 + t3565*t5480 + t1975*t5488 + t5520 + t5521) + t3565*(-1.*t3153*t4647 - 1.*t3904*t4664 - 1.*t3591*t5480 - 1.*t2608*t5488 + t5541 + t5543))*var2[1] + (t3060*t4690 + t2994*t4725 + t3571*(-1.*t2994*t4647 - 1.*t3848*t4664 + t5300 + t5393 - 1.*t3565*t5480 - 1.*t1975*t5488) + t3565*(t3060*t4647 + t3877*t4664 + t3571*t5480 + t2267*t5488 + t5499 + t5500))*var2[2];
  p_output1[30]=(t3275*t4851 + t3542*t4875 + t3591*(-1.*t3542*t4647 - 1.*t4042*t4664 - 1.*t3571*t5810 - 1.*t2267*t5817 + t5946 + t5947) + t3571*(t3275*t4647 + t3940*t4664 + t3591*t5810 + t2608*t5817 + t5977 + t5979))*var2[0] + (t3275*t4767 + t3356*t4799 + t3591*(t3356*t4647 + t3978*t4664 + t3565*t5810 + t1975*t5817 + t5861 + t5862) + t3565*(-1.*t3275*t4647 - 1.*t3940*t4664 - 1.*t3591*t5810 - 1.*t2608*t5817 + t5896 + t5898))*var2[1] + (t3542*t4690 + t3356*t4725 + t3571*(-1.*t3356*t4647 - 1.*t3978*t4664 + t5784 + t5786 - 1.*t3565*t5810 - 1.*t1975*t5817) + t3565*(t3542*t4647 + t4042*t4664 + t3571*t5810 + t2267*t5817 + t5838 + t5842))*var2[2];
  p_output1[31]=t3591*t4851 + t3571*t4875;
  p_output1[32]=t3591*t4767 + t3565*t4799;
  p_output1[33]=t3571*t4690 + t3565*t4725;
  p_output1[34]=(t3674*(-1.*t2657*t4629 - 1.*t2250*t4889 + t4988 + t4989) + t3641*(t2707*t4629 + t2598*t4889 + t5022 + t5023) + t2598*t6161 + t2250*t6174)*var2[0] + (t3674*(t2638*t4629 + t1967*t4889 + t4927 + t4928) + t3603*(-1.*t2707*t4629 - 1.*t2598*t4889 + t4954 + t4957) + t2598*t6115 + t1967*t6138)*var2[1] + (t3641*(-1.*t2638*t4629 + t4884 + t4885 - 1.*t1967*t4889) + t3603*(t2657*t4629 + t2250*t4889 + t4904 + t4905) + t2250*t6067 + t1967*t6103)*var2[2];
  p_output1[35]=(t3674*(-1.*t2786*t4629 - 1.*t2250*t5100 + t5225 + t5226) + t3641*(t2819*t4629 + t2598*t5100 + t5251 + t5252) + t3820*t6161 + t3805*t6174)*var2[0] + (t3674*(t2743*t4629 + t1967*t5100 + t5167 + t5168) + t3603*(-1.*t2819*t4629 - 1.*t2598*t5100 + t5187 + t5191) + t3820*t6115 + t3780*t6138)*var2[1] + (t3641*(-1.*t2743*t4629 + t5090 + t5091 - 1.*t1967*t5100) + t3603*(t2786*t4629 + t2250*t5100 + t5112 + t5115) + t3805*t6067 + t3780*t6103)*var2[2];
  p_output1[36]=(t3892*t6161 + t3863*t6174 + t3674*(-1.*t3054*t4629 - 1.*t2250*t5469 + t5582 + t5584 + t6458 + t6463) + t3641*(t3131*t4629 + t2598*t5469 + t5617 + t5620 + t6546 + t6547))*var2[0] + (t3892*t6115 + t3834*t6138 + t3674*(t2974*t4629 + t1967*t5469 + t5520 + t5521 + t6371 + t6379) + t3603*(-1.*t3131*t4629 - 1.*t2598*t5469 + t5541 + t5543 + t6402 + t6403))*var2[1] + (t3863*t6067 + t3834*t6103 + t3641*(-1.*t2974*t4629 + t5300 + t5393 - 1.*t1967*t5469 + t6289 + t6290) + t3603*(t3054*t4629 + t2250*t5469 + t5499 + t5500 + t6307 + t6311))*var2[2];
  p_output1[37]=(t3931*t6161 + t4027*t6174 + t3674*(-1.*t3527*t4629 - 1.*t2250*t5807 + t5946 + t5947 + t6869 + t6871) + t3641*(t3270*t4629 + t2598*t5807 + t5977 + t5979 + t6885 + t6887))*var2[0] + (t3931*t6115 + t3954*t6138 + t3674*(t3351*t4629 + t1967*t5807 + t5861 + t5862 + t6775 + t6777) + t3603*(-1.*t3270*t4629 - 1.*t2598*t5807 + t5896 + t5898 + t6795 + t6799))*var2[1] + (t4027*t6067 + t3954*t6103 + t3641*(-1.*t3351*t4629 + t5784 + t5786 - 1.*t1967*t5807 + t6660 + t6664) + t3603*(t3527*t4629 + t2250*t5807 + t5838 + t5842 + t6732 + t6736))*var2[2];
  p_output1[38]=t3674*t6161 + t3641*t6174;
  p_output1[39]=t3674*t6115 + t3603*t6138;
  p_output1[40]=t3641*t6067 + t3603*t6103;
  p_output1[41]=(t2500*(-1.*t2784*t4588 - 1.*t2218*t4619 - 1.*t2246*t5067 - 1.*t2218*t5086) + t2103*(t2809*t4588 + t2565*t4619 + t2587*t5067 + t2565*t5086))*var2[0] + (t2500*(t2740*t4588 + t1929*t4619 + t1950*t5067 + t1929*t5086) + t1532*(-1.*t2809*t4588 - 1.*t2565*t4619 - 1.*t2587*t5067 - 1.*t2565*t5086))*var2[1] + (t2103*(-1.*t2740*t4588 - 1.*t1929*t4619 - 1.*t1950*t5067 - 1.*t1929*t5086) + t1532*(t2784*t4588 + t2218*t4619 + t2246*t5067 + t2218*t5086))*var2[2];
  p_output1[42]=(t2500*(-1.*t3045*t4588 - 1.*t3051*t4619 - 1.*t2246*t5373 - 1.*t2218*t5383 + t6458 + t6463) + t2103*(t3112*t4588 + t3125*t4619 + t2587*t5373 + t2565*t5383 + t6546 + t6547) + t3072*t7301 + t3012*t7387)*var2[0] + (t2500*(t2947*t4588 + t2970*t4619 + t1950*t5373 + t1929*t5383 + t6371 + t6379) + t1532*(-1.*t3112*t4588 - 1.*t3125*t4619 - 1.*t2587*t5373 - 1.*t2565*t5383 + t6402 + t6403) + t3072*t7251 + t2866*t7280)*var2[1] + (t2103*(-1.*t2947*t4588 - 1.*t2970*t4619 - 1.*t1950*t5373 - 1.*t1929*t5383 + t6289 + t6290) + t1532*(t3045*t4588 + t3051*t4619 + t2246*t5373 + t2218*t5383 + t6307 + t6311) + t3012*t7125 + t2866*t7140)*var2[2];
  p_output1[43]=(t2500*(-1.*t3444*t4588 - 1.*t3497*t4619 - 1.*t2246*t5765 - 1.*t2218*t5776 + t6869 + t6871) + t2103*(t3260*t4588 + t3268*t4619 + t2587*t5765 + t2565*t5776 + t6885 + t6887) + t3221*t7301 + t3390*t7387)*var2[0] + (t2500*(t3341*t4588 + t3348*t4619 + t1950*t5765 + t1929*t5776 + t6775 + t6777) + t1532*(-1.*t3260*t4588 - 1.*t3268*t4619 - 1.*t2587*t5765 - 1.*t2565*t5776 + t6795 + t6799) + t3221*t7251 + t3320*t7280)*var2[1] + (t2103*(-1.*t3341*t4588 - 1.*t3348*t4619 - 1.*t1950*t5765 - 1.*t1929*t5776 + t6660 + t6664) + t1532*(t3444*t4588 + t3497*t4619 + t2246*t5765 + t2218*t5776 + t6732 + t6736) + t3390*t7125 + t3320*t7140)*var2[2];
  p_output1[44]=t2500*t7301 + t2103*t7387;
  p_output1[45]=t2500*t7251 + t1532*t7280;
  p_output1[46]=t2103*t7125 + t1532*t7140;
  p_output1[47]=(-0.15121*t2880 + 0.15121*t2940 + t2500*(-1.*t3032*t4546 - 1.*t3022*t4583 - 1.*t2175*t5336 - 1.*t2138*t5370 + t6458 + t6463) + t2103*(t3101*t4546 + t3086*t4583 + t2555*t5336 + t2527*t5370 + t6546 + t6547) + t3072*t7838 + t3012*t7871)*var2[0] + (0.15121*t3022 - 0.15121*t3032 + t2500*(t2880*t4546 + t2940*t4583 + t1740*t5336 + t1897*t5370 + t6371 + t6379) + t1532*(-1.*t3101*t4546 - 1.*t3086*t4583 - 1.*t2555*t5336 - 1.*t2527*t5370 + t6402 + t6403) + t3072*t7732 + t2866*t7772)*var2[1] + (0.15121*t3086 - 0.15121*t3101 + t2103*(-1.*t2880*t4546 - 1.*t2940*t4583 - 1.*t1740*t5336 - 1.*t1897*t5370 + t6289 + t6290) + t1532*(t3032*t4546 + t3022*t4583 + t2175*t5336 + t2138*t5370 + t6307 + t6311) + t3012*t7670 + t2866*t7703)*var2[2];
  p_output1[48]=(-0.15121*t3332 + 0.15121*t3339 + t2500*(-1.*t3405*t4546 - 1.*t3430*t4583 - 1.*t2138*t5745 - 1.*t2175*t5757 + t6869 + t6871) + t2103*(t3255*t4546 + t3235*t4583 + t2527*t5745 + t2555*t5757 + t6885 + t6887) + t3221*t7838 + t3390*t7871)*var2[0] + (-0.15121*t3405 + 0.15121*t3430 + t2500*(t3332*t4546 + t3339*t4583 + t1897*t5745 + t1740*t5757 + t6775 + t6777) + t1532*(-1.*t3255*t4546 - 1.*t3235*t4583 - 1.*t2527*t5745 - 1.*t2555*t5757 + t6795 + t6799) + t3221*t7732 + t3320*t7772)*var2[1] + (0.15121*t3235 - 0.15121*t3255 + t2103*(-1.*t3332*t4546 - 1.*t3339*t4583 - 1.*t1897*t5745 - 1.*t1740*t5757 + t6660 + t6664) + t1532*(t3405*t4546 + t3430*t4583 + t2138*t5745 + t2175*t5757 + t6732 + t6736) + t3390*t7670 + t3320*t7703)*var2[2];
  p_output1[49]=0.15121*t1740 - 0.15121*t1897 + t2500*t7838 + t2103*t7871;
  p_output1[50]=-0.15121*t2138 + 0.15121*t2175 + t2500*t7732 + t1532*t7772;
  p_output1[51]=-0.15121*t2527 + 0.15121*t2555 + t2103*t7670 + t1532*t7703;
  p_output1[52]=(0.281211*t3295 - 0.038749*t3312 + 1.e-6*(t3159 - 7.000000000455e-6*t786) - 1.*t2349*t8651 - 1.*t3217*t8659 - 1.*t2049*t8684 - 1.*t3367*t8702 + 7.e-6*(t2474*t8651 + t3180*t8659 + t2089*t8684 + t3376*t8702) + 4.e-6*(-1.*t2426*t8651 - 1.*t3196*t8659 - 1.*t1986*t8684 - 1.*t3386*t8702))*var2[0] + (-0.038749*t3376 + 0.281211*t3386 + 1.e-6*(t3186 + 4.00000000026e-6*t786) - 1.*t3217*t8409 - 1.*t2349*t8471 - 1.*t1479*t8546 - 1.*t3302*t8583 + 4.e-6*(-1.*t3196*t8409 - 1.*t2426*t8471 - 1.*t1245*t8546 - 1.*t3295*t8583) + 7.e-6*(t3180*t8409 + t2474*t8471 + t3312*t8583 + t8546*t996))*var2[1] + (-0.038749*t3180 + 0.281211*t3196 + 1.e-6*(-7.e-6*t3200 + 4.e-6*t5657 - 6.5e-11*t786) - 1.*t3367*t8274 - 1.*t1479*t8286 - 1.*t3302*t8295 - 1.*t2049*t8307 + 4.e-6*(-1.*t3386*t8274 - 1.*t1245*t8286 - 1.*t3295*t8295 - 1.*t1986*t8307) + 7.e-6*(t3376*t8274 + t3312*t8295 + t2089*t8307 + t8286*t996))*var2[2];
  p_output1[53]=0.281211*t1245 + 1.e-6*(7.e-6*t1404 + t2290 + t760) - 1.*t2349*t8659 - 1.*t2049*t8702 + 4.e-6*(-1.*t2426*t8659 - 1.*t1986*t8702) + 7.e-6*(t2474*t8659 + t2089*t8702) - 0.038749*t996;
  p_output1[54]=0.281211*t1986 - 0.038749*t2089 + 1.e-6*(t1151 + 4.e-6*(-1. + t2282) + t2407) - 1.*t2349*t8409 - 1.*t1479*t8583 + 4.e-6*(-1.*t2426*t8409 - 1.*t1245*t8583) + 7.e-6*(t2474*t8409 + t8583*t996);
  p_output1[55]=0.281211*t2426 - 0.038749*t2474 + 1.e-6*(1. + t1342 - 7.e-6*t2304 + 4.e-6*t4375) - 1.*t2049*t8274 - 1.*t1479*t8295 + 4.e-6*(-1.*t1986*t8274 - 1.*t1245*t8295) + 7.e-6*(t2089*t8274 + t8295*t996);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_ParallelStance1.hh"

namespace ParallelStance1
{

void J_fRrFoot_vec_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
