/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:30 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6)
{
  double t45;
  double t9;
  double t25;
  double t28;
  double t31;
  double t33;
  double t46;
  double t49;
  double t59;
  double t72;
  double t79;
  double t83;
  double t92;
  double t136;
  double t151;
  double t154;
  double t167;
  double t190;
  double t230;
  double t276;
  double t291;
  double t353;
  double t360;
  double t388;
  double t534;
  double t619;
  double t628;
  double t655;
  double t702;
  double t709;
  double t720;
  double t543;
  double t565;
  double t568;
  double t573;
  double t598;
  double t752;
  double t531;
  double t821;
  double t825;
  double t836;
  double t898;
  double t900;
  double t909;
  double t943;
  double t950;
  double t953;
  double t984;
  double t1137;
  double t1056;
  double t1073;
  double t1077;
  double t1078;
  double t1079;
  double t1083;
  double t1163;
  double t1173;
  double t1182;
  double t1202;
  double t1245;
  double t1262;
  double t1267;
  double t1272;
  double t1311;
  double t1323;
  double t731;
  double t739;
  double t691;
  double t718;
  double t855;
  double t864;
  double t895;
  double t761;
  double t765;
  double t771;
  double t804;
  double t809;
  double t1218;
  double t1220;
  double t1224;
  double t1238;
  double t1239;
  double t1567;
  double t1575;
  double t1585;
  double t1591;
  double t1594;
  double t1596;
  double t1096;
  double t1104;
  double t1146;
  double t1148;
  double t1160;
  double t981;
  double t1008;
  double t1033;
  double t1609;
  double t1615;
  double t1624;
  double t1634;
  double t1638;
  double t1644;
  double t1489;
  double t1496;
  double t1657;
  double t1701;
  double t1703;
  double t1382;
  double t1395;
  double t1869;
  double t1589;
  double t1605;
  double t1631;
  double t1651;
  double t1728;
  double t1738;
  double t1739;
  double t1750;
  double t1752;
  double t1771;
  double t1773;
  double t1783;
  double t1792;
  double t1799;
  double t1814;
  double t1818;
  double t1826;
  double t1837;
  double t1839;
  double t1854;
  double t2056;
  double t2074;
  double t2083;
  double t2105;
  double t2130;
  double t2136;
  double t2150;
  double t2175;
  double t2185;
  double t2188;
  double t2224;
  double t2232;
  double t2235;
  double t2248;
  double t2531;
  double t2552;
  double t2589;
  double t2601;
  double t2667;
  double t2669;
  double t2684;
  double t2706;
  double t2710;
  double t2712;
  double t2729;
  double t2895;
  double t2924;
  double t2927;
  double t2919;
  double t532;
  double t566;
  double t571;
  double t575;
  double t581;
  double t3187;
  double t3213;
  double t3205;
  double t3218;
  double t3219;
  double t3225;
  double t3226;
  double t3228;
  double t3240;
  double t3245;
  double t3246;
  double t3261;
  double t3269;
  double t3272;
  double t3277;
  double t3283;
  double t3284;
  double t3286;
  double t3296;
  double t3300;
  double t3305;
  double t3306;
  double t3309;
  double t3312;
  double t3313;
  double t3314;
  double t3466;
  double t3468;
  double t3469;
  double t3477;
  double t3484;
  double t3491;
  double t3500;
  double t3506;
  double t3513;
  double t3514;
  double t3534;
  double t3538;
  double t3539;
  double t3543;
  double t3545;
  double t3551;
  double t3554;
  double t3564;
  double t3663;
  double t3665;
  double t3666;
  double t3670;
  double t3685;
  double t3688;
  double t3710;
  double t3713;
  double t3715;
  double t3719;
  double t3722;
  double t3724;
  double t3733;
  double t3739;
  double t3740;
  double t3742;
  double t3744;
  double t3745;
  double t3750;
  double t3752;
  double t3754;
  double t1877;
  double t1888;
  double t1896;
  double t3843;
  double t3845;
  double t3846;
  double t3861;
  double t3866;
  double t3869;
  double t3870;
  double t3877;
  double t3881;
  double t3882;
  double t3887;
  double t3891;
  double t3892;
  double t3907;
  double t3908;
  double t3909;
  double t1933;
  double t1942;
  double t1954;
  double t1961;
  double t1973;
  double t2020;
  double t2045;
  double t2047;
  double t3968;
  double t3969;
  double t3973;
  double t3978;
  double t3980;
  double t3984;
  double t3986;
  double t3987;
  double t3988;
  double t3989;
  double t3995;
  double t3999;
  double t4003;
  double t4005;
  double t2502;
  double t2511;
  double t2523;
  double t2634;
  double t2638;
  double t2690;
  double t2692;
  double t2700;
  double t4059;
  double t4065;
  double t4067;
  double t4069;
  double t4071;
  double t4073;
  double t4076;
  double t4081;
  double t4092;
  double t4095;
  double t4102;
  double t2854;
  double t2861;
  double t2863;
  double t2884;
  double t2890;
  double t2892;
  double t2908;
  double t4111;
  double t4410;
  double t4415;
  double t4416;
  double t4424;
  double t4425;
  double t4427;
  double t4436;
  double t4437;
  double t4440;
  double t4442;
  double t4447;
  double t4448;
  double t4451;
  double t4455;
  double t4475;
  double t4479;
  double t4480;
  double t4481;
  double t4553;
  double t4560;
  double t4563;
  double t4568;
  double t4569;
  double t4570;
  double t4572;
  double t4573;
  double t4579;
  double t4585;
  double t4598;
  double t4601;
  double t4602;
  double t4603;
  double t4605;
  double t4611;
  double t4612;
  double t4698;
  double t4699;
  double t4700;
  double t4710;
  double t4711;
  double t4719;
  double t4727;
  double t4737;
  double t4739;
  double t4745;
  double t4748;
  double t4750;
  double t4754;
  double t4760;
  double t4764;
  double t4787;
  double t4862;
  double t4875;
  double t4877;
  double t4884;
  double t4891;
  double t4899;
  double t4901;
  double t4903;
  double t4906;
  double t4909;
  double t4910;
  double t4911;
  double t4914;
  double t4990;
  double t4991;
  double t4992;
  double t4993;
  double t4997;
  double t5003;
  double t5008;
  double t5011;
  double t5012;
  double t5013;
  double t5015;
  double t5256;
  double t5257;
  double t5259;
  double t5271;
  double t5293;
  double t5300;
  double t5302;
  double t5316;
  double t5329;
  double t5269;
  double t5279;
  double t5380;
  double t5487;
  double t5488;
  double t5494;
  double t5506;
  double t5428;
  double t5451;
  double t5395;
  double t5407;
  double t5414;
  double t5469;
  double t5471;
  double t5473;
  double t5517;
  double t5364;
  double t5550;
  double t5385;
  double t5604;
  double t5505;
  double t5673;
  double t5676;
  double t5272;
  double t5544;
  double t5545;
  double t5549;
  double t5551;
  double t5560;
  double t5561;
  double t5575;
  double t5584;
  double t5588;
  double t5741;
  double t5679;
  double t5690;
  double t5693;
  double t5696;
  double t5701;
  double t5703;
  double t5705;
  double t5710;
  double t5773;
  double t5777;
  double t5780;
  double t5782;
  double t5783;
  double t5786;
  double t5792;
  double t5794;
  double t5522;
  double t5810;
  double t5507;
  double t5920;
  double t5624;
  double t5834;
  double t5845;
  double t5605;
  double t5340;
  double t5347;
  double t5307;
  double t5333;
  double t5421;
  double t5423;
  double t5438;
  double t5441;
  double t5454;
  double t5462;
  double t5464;
  double t5359;
  double t5361;
  double t5369;
  double t5373;
  double t5389;
  double t5390;
  double t5393;
  double t5595;
  double t5597;
  double t5609;
  double t5617;
  double t5640;
  double t5648;
  double t5669;
  double t6058;
  double t6062;
  double t6063;
  double t6067;
  double t6069;
  double t6070;
  double t5479;
  double t5501;
  double t5515;
  double t5516;
  double t5532;
  double t5533;
  double t5538;
  double t5726;
  double t5728;
  double t5744;
  double t5767;
  double t5768;
  double t5771;
  double t5772;
  double t5858;
  double t6079;
  double t6082;
  double t6084;
  double t5829;
  double t6089;
  double t6094;
  double t6098;
  double t5865;
  double t5874;
  double t6113;
  double t6123;
  double t6133;
  double t5927;
  double t5906;
  double t5912;
  double t5939;
  double t5980;
  double t5982;
  double t5977;
  double t6023;
  double t6283;
  double t6064;
  double t6077;
  double t6087;
  double t6101;
  double t6144;
  double t6148;
  double t6149;
  double t6150;
  double t6168;
  double t6171;
  double t6177;
  double t6212;
  double t6234;
  double t6251;
  double t6252;
  double t6258;
  double t6272;
  double t6274;
  double t6277;
  double t6278;
  double t6325;
  double t6345;
  double t6350;
  double t6402;
  double t6408;
  double t6413;
  double t6330;
  double t6503;
  double t6371;
  double t6428;
  double t6430;
  double t6446;
  double t6470;
  double t6474;
  double t6483;
  double t6485;
  double t6496;
  double t6502;
  double t6505;
  double t6506;
  double t6508;
  double t6512;
  double t6515;
  double t6517;
  double t6518;
  double t6536;
  double t6547;
  double t6629;
  double t6773;
  double t6680;
  double t6709;
  double t6730;
  double t6736;
  double t6783;
  double t6786;
  double t6787;
  double t6789;
  double t6766;
  double t6863;
  double t6865;
  double t6866;
  double t6874;
  double t6637;
  double t6951;
  double t6836;
  double t5251;
  double t5268;
  double t5274;
  double t5277;
  double t5282;
  double t5283;
  double t5290;
  double t7437;
  double t7440;
  double t7441;
  double t7451;
  double t7454;
  double t7457;
  double t7459;
  double t7463;
  double t7472;
  double t7476;
  double t7483;
  double t7488;
  double t7489;
  double t7491;
  double t7497;
  double t7499;
  double t7501;
  double t7504;
  double t7558;
  double t7560;
  double t7561;
  double t7564;
  double t7567;
  double t7571;
  double t7573;
  double t7574;
  double t7578;
  double t7579;
  double t7585;
  double t7589;
  double t7607;
  double t7622;
  double t7632;
  double t7644;
  double t7662;
  double t7667;
  double t7800;
  double t7807;
  double t7813;
  double t7828;
  double t7832;
  double t7837;
  double t7853;
  double t7866;
  double t7868;
  double t7901;
  double t7907;
  double t7923;
  double t7929;
  double t7934;
  double t7938;
  double t6284;
  double t6296;
  double t6311;
  double t8010;
  double t8025;
  double t8049;
  double t8058;
  double t8076;
  double t8085;
  double t8088;
  double t8095;
  double t8099;
  double t8104;
  double t8112;
  double t8116;
  double t8118;
  double t6327;
  double t6328;
  double t6333;
  double t6335;
  double t6337;
  double t6340;
  double t6346;
  double t6349;
  double t6351;
  double t6352;
  double t6356;
  double t6357;
  double t6361;
  double t6362;
  double t6384;
  double t6391;
  double t6393;
  double t6399;
  double t8181;
  double t8186;
  double t8188;
  double t8196;
  double t8199;
  double t8201;
  double t8206;
  double t8211;
  double t8212;
  double t8213;
  double t8216;
  double t8218;
  double t8219;
  double t8224;
  double t8225;
  double t6630;
  double t6634;
  double t6638;
  double t6643;
  double t6666;
  double t6672;
  double t6770;
  double t6771;
  double t6774;
  double t6780;
  double t6781;
  double t6782;
  double t6817;
  double t6833;
  double t6845;
  double t6848;
  double t6849;
  double t6859;
  double t6892;
  double t8285;
  double t8288;
  double t8289;
  double t8291;
  double t8296;
  double t8297;
  double t8300;
  double t8301;
  double t6910;
  double t8303;
  double t8304;
  double t8311;
  double t8315;
  double t6940;
  double t6964;
  double t6979;
  double t6990;
  double t8675;
  double t8678;
  double t8681;
  double t8686;
  double t8688;
  double t8689;
  double t8696;
  double t8701;
  double t8703;
  double t8704;
  double t8708;
  double t8709;
  double t8710;
  double t8713;
  double t8716;
  double t8721;
  double t8723;
  double t8728;
  double t8785;
  double t8795;
  double t8798;
  double t8808;
  double t8817;
  double t8819;
  double t8824;
  double t8825;
  double t8839;
  double t8841;
  double t8845;
  double t8849;
  double t8852;
  double t8864;
  double t8914;
  double t8915;
  double t8922;
  double t8923;
  double t8927;
  double t8928;
  double t8934;
  double t8948;
  double t8950;
  double t8960;
  double t8965;
  double t8966;
  double t8968;
  double t9037;
  double t9038;
  double t9039;
  double t9051;
  double t9056;
  double t9062;
  double t9066;
  double t9080;
  double t9083;
  double t9091;
  double t9094;
  double t9111;
  double t9112;
  double t9115;
  double t9119;
  double t9197;
  double t9200;
  double t9203;
  double t9207;
  double t9212;
  double t9215;
  double t9217;
  double t9218;
  double t9229;
  double t9230;
  double t9231;
  double t9232;
  double t10029;
  double t10032;
  double t10035;
  double t10037;
  double t10039;
  double t10053;
  double t4296;
  double t4299;
  double t4402;
  double t4405;
  double t4551;
  double t4566;
  double t4701;
  double t4704;
  t45 = -1.*var4[0];
  t9 = -1. + var5[0];
  t25 = -1. + var6[0];
  t28 = 1/t25;
  t31 = -1.*t9*t28;
  t33 = 1. + t31;
  t46 = t45 + var4[1];
  t49 = Power(t46,-5);
  t59 = -1.*var1[0];
  t72 = t59 + var1[1];
  t79 = t9*t28*t72;
  t83 = t45 + var1[0] + t79;
  t92 = Power(t83,4);
  t136 = Power(t46,-4);
  t151 = Power(t83,3);
  t154 = 1/t46;
  t167 = -1.*t154*t83;
  t190 = 1. + t167;
  t230 = Power(t46,-3);
  t276 = Power(t83,2);
  t291 = Power(t190,2);
  t353 = Power(t46,-2);
  t360 = Power(t190,3);
  t388 = Power(t190,4);
  t534 = Cos(var2[10]);
  t619 = Cos(var2[9]);
  t628 = -1.*t619;
  t655 = 1. + t628;
  t702 = Sin(var2[9]);
  t709 = -0.15121*t702;
  t720 = Sin(var2[4]);
  t543 = -1.*t534;
  t565 = 1. + t543;
  t568 = -1. + t534;
  t573 = Sin(var2[10]);
  t598 = Cos(var2[5]);
  t752 = Sin(var2[5]);
  t531 = Cos(var2[4]);
  t821 = t598*t702*t720;
  t825 = t619*t720*t752;
  t836 = t821 + t825;
  t898 = -1.*t619*t598*t720;
  t900 = t702*t720*t752;
  t909 = t898 + t900;
  t943 = Cos(var2[11]);
  t950 = -1.*t943;
  t953 = 1. + t950;
  t984 = Sin(var2[11]);
  t1137 = -1. + t943;
  t1056 = t531*t573;
  t1073 = -4.e-6*t573*t836;
  t1077 = -1.000000000016*t565;
  t1078 = 1. + t1077;
  t1079 = t1078*t909;
  t1083 = t1056 + t1073 + t1079;
  t1163 = t534*t531;
  t1173 = 4.e-6*t565*t836;
  t1182 = -1.*t573*t909;
  t1202 = t1163 + t1173 + t1182;
  t1245 = 4.e-6*t565*t531;
  t1262 = 1.6e-11*t568;
  t1267 = 1. + t1262;
  t1272 = t1267*t836;
  t1311 = 4.e-6*t573*t909;
  t1323 = t1245 + t1272 + t1311;
  t731 = -0.15121*t655;
  t739 = t731 + t709;
  t691 = 0.15121*t655;
  t718 = t691 + t709;
  t855 = 0.281210000008499*t565;
  t864 = -0.03874900000062*t573;
  t895 = t855 + t864;
  t761 = -1.2484e-7*var2[10];
  t765 = 2.479936e-18*t565;
  t771 = -1.54996e-7*t568;
  t804 = 1.124840000016e-6*t573;
  t809 = t761 + t765 + t771 + t804;
  t1218 = -1.26e-8*var2[11];
  t1220 = 2.552896e-18*t953;
  t1224 = -1.59556e-7*t1137;
  t1238 = 2.012600000032e-6*t984;
  t1239 = t1218 + t1220 + t1224 + t1238;
  t1567 = -1.*t531*t598*t702;
  t1575 = -1.*t619*t531*t752;
  t1585 = t1567 + t1575;
  t1591 = -1.*t619*t531*t598;
  t1594 = t531*t702*t752;
  t1596 = t1591 + t1594;
  t1096 = -5.04e-14*var2[11];
  t1104 = -0.039889*t953;
  t1146 = 6.38224e-13*t1137;
  t1148 = -0.503150000008*t984;
  t1160 = t1096 + t1104 + t1146 + t1148;
  t981 = 0.50315000001605*t953;
  t1008 = -0.0398890000006382*t984;
  t1033 = t981 + t1008;
  t1609 = 4.e-6*t573*t1585;
  t1615 = t1267*t1596;
  t1624 = t1609 + t1615;
  t1634 = -1.*t573*t1585;
  t1638 = 4.e-6*t565*t1596;
  t1644 = t1634 + t1638;
  t1489 = -1.000000000016*t953;
  t1496 = 1. + t1489;
  t1657 = t1078*t1585;
  t1701 = -4.e-6*t573*t1596;
  t1703 = t1657 + t1701;
  t1382 = 1.6e-11*t1137;
  t1395 = 1. + t1382;
  t1869 = -0.15121*t619;
  t1589 = t895*t1585;
  t1605 = t809*t1596;
  t1631 = t1239*t1624;
  t1651 = t1160*t1644;
  t1728 = t1033*t1703;
  t1738 = -4.e-6*t984*t1624;
  t1739 = t984*t1644;
  t1750 = t1496*t1703;
  t1752 = t1738 + t1739 + t1750;
  t1771 = 0.803147*t1752;
  t1773 = 4.e-6*t953*t1624;
  t1783 = t943*t1644;
  t1792 = -1.*t984*t1703;
  t1799 = t1773 + t1783 + t1792;
  t1814 = -0.041195*t1799;
  t1818 = t1395*t1624;
  t1826 = 4.e-6*t953*t1644;
  t1837 = 4.e-6*t984*t1703;
  t1839 = t1818 + t1826 + t1837;
  t1854 = -0.14871*t1839;
  t2056 = t619*t531*t598;
  t2074 = -1.*t531*t702*t752;
  t2083 = t2056 + t2074;
  t2105 = -1.*t573*t720;
  t2130 = -1.*t534*t2083;
  t2136 = t2105 + t1609 + t2130;
  t2150 = 4.e-6*t573*t720;
  t2175 = -1.6e-11*t573*t1585;
  t2185 = 4.e-6*t534*t2083;
  t2188 = t2150 + t2175 + t2185;
  t2224 = t534*t720;
  t2232 = -4.e-6*t534*t1585;
  t2235 = -1.000000000016*t573*t2083;
  t2248 = t2224 + t2232 + t2235;
  t2531 = t573*t720;
  t2552 = -4.e-6*t573*t1585;
  t2589 = t1078*t2083;
  t2601 = t2531 + t2552 + t2589;
  t2667 = 4.e-6*t565*t1585;
  t2669 = -1.*t573*t2083;
  t2684 = t2224 + t2667 + t2669;
  t2706 = 4.e-6*t565*t720;
  t2710 = t1267*t1585;
  t2712 = 4.e-6*t573*t2083;
  t2729 = t2706 + t2710 + t2712;
  t2895 = Power(t83,5);
  t2924 = -1.*t353*t83;
  t2927 = t154 + t2924;
  t2919 = Power(t46,-6);
  t532 = -4.9936e-13*var2[10];
  t566 = -0.038749*t565;
  t571 = 6.19984e-13*t568;
  t575 = -0.281210000004*t573;
  t581 = t532 + t566 + t571 + t575;
  t3187 = Cos(var2[3]);
  t3213 = Sin(var2[3]);
  t3205 = t3187*t598*t720;
  t3218 = -1.*t3213*t752;
  t3219 = t3205 + t3218;
  t3225 = -1.*t598*t3213;
  t3226 = -1.*t3187*t720*t752;
  t3228 = t3225 + t3226;
  t3240 = -1.*t702*t3219;
  t3245 = t619*t3228;
  t3246 = t3240 + t3245;
  t3261 = t619*t3219;
  t3269 = t702*t3228;
  t3272 = t3261 + t3269;
  t3277 = -1.*t3187*t531*t573;
  t3283 = -4.e-6*t573*t3246;
  t3284 = t1078*t3272;
  t3286 = t3277 + t3283 + t3284;
  t3296 = -1.*t534*t3187*t531;
  t3300 = 4.e-6*t565*t3246;
  t3305 = -1.*t573*t3272;
  t3306 = t3296 + t3300 + t3305;
  t3309 = -4.e-6*t565*t3187*t531;
  t3312 = t1267*t3246;
  t3313 = 4.e-6*t573*t3272;
  t3314 = t3309 + t3312 + t3313;
  t3466 = -1.*t531*t598*t702*t3213;
  t3468 = -1.*t619*t531*t3213*t752;
  t3469 = t3466 + t3468;
  t3477 = t619*t531*t598*t3213;
  t3484 = -1.*t531*t702*t3213*t752;
  t3491 = t3477 + t3484;
  t3500 = t573*t3213*t720;
  t3506 = -4.e-6*t573*t3469;
  t3513 = t1078*t3491;
  t3514 = t3500 + t3506 + t3513;
  t3534 = t534*t3213*t720;
  t3538 = 4.e-6*t565*t3469;
  t3539 = -1.*t573*t3491;
  t3543 = t3534 + t3538 + t3539;
  t3545 = 4.e-6*t565*t3213*t720;
  t3551 = t1267*t3469;
  t3554 = 4.e-6*t573*t3491;
  t3564 = t3545 + t3551 + t3554;
  t3663 = -1.*t598*t3213*t720;
  t3665 = -1.*t3187*t752;
  t3666 = t3663 + t3665;
  t3670 = t3187*t598;
  t3685 = -1.*t3213*t720*t752;
  t3688 = t3670 + t3685;
  t3710 = t702*t3666;
  t3713 = t619*t3688;
  t3715 = t3710 + t3713;
  t3719 = t619*t3666;
  t3722 = -1.*t702*t3688;
  t3724 = t3719 + t3722;
  t3733 = 4.e-6*t573*t3715;
  t3739 = t1267*t3724;
  t3740 = t3733 + t3739;
  t3742 = -1.*t573*t3715;
  t3744 = 4.e-6*t565*t3724;
  t3745 = t3742 + t3744;
  t3750 = t1078*t3715;
  t3752 = -4.e-6*t573*t3724;
  t3754 = t3750 + t3752;
  t1877 = 0.15121*t702;
  t1888 = t1869 + t1877;
  t1896 = t1869 + t709;
  t3843 = t598*t3213*t720;
  t3845 = t3187*t752;
  t3846 = t3843 + t3845;
  t3861 = -1.*t702*t3846;
  t3866 = t3861 + t3713;
  t3869 = -1.*t619*t3846;
  t3870 = t3869 + t3722;
  t3877 = 4.e-6*t573*t3866;
  t3881 = t1267*t3870;
  t3882 = t3877 + t3881;
  t3887 = -1.*t573*t3866;
  t3891 = 4.e-6*t565*t3870;
  t3892 = t3887 + t3891;
  t3907 = t1078*t3866;
  t3908 = -4.e-6*t573*t3870;
  t3909 = t3907 + t3908;
  t1933 = -0.281210000004*t534;
  t1942 = -4.9936e-13 + t1933 + t864;
  t1954 = 1.124840000016e-6*t534;
  t1961 = 1.5499600000248e-7*t573;
  t1973 = -1.2484e-7 + t1954 + t1961;
  t2020 = -0.03874900000062*t534;
  t2045 = 0.281210000008499*t573;
  t2047 = t2020 + t2045;
  t3968 = t619*t3846;
  t3969 = t702*t3688;
  t3973 = t3968 + t3969;
  t3978 = t531*t573*t3213;
  t3980 = -1.*t534*t3973;
  t3984 = t3978 + t3877 + t3980;
  t3986 = -4.e-6*t531*t573*t3213;
  t3987 = -1.6e-11*t573*t3866;
  t3988 = 4.e-6*t534*t3973;
  t3989 = t3986 + t3987 + t3988;
  t3995 = -1.*t534*t531*t3213;
  t3999 = -4.e-6*t534*t3866;
  t4003 = -1.000000000016*t573*t3973;
  t4005 = t3995 + t3999 + t4003;
  t2502 = -0.0398890000006382*t943;
  t2511 = 0.50315000001605*t984;
  t2523 = t2502 + t2511;
  t2634 = -0.503150000008*t943;
  t2638 = -5.04e-14 + t2634 + t1008;
  t2690 = 2.012600000032e-6*t943;
  t2692 = 1.59556000002553e-7*t984;
  t2700 = -1.26e-8 + t2690 + t2692;
  t4059 = -1.*t531*t573*t3213;
  t4065 = -4.e-6*t573*t3866;
  t4067 = t1078*t3973;
  t4069 = t4059 + t4065 + t4067;
  t4071 = 4.e-6*t565*t3866;
  t4073 = -1.*t573*t3973;
  t4076 = t3995 + t4071 + t4073;
  t4081 = -4.e-6*t565*t531*t3213;
  t4092 = t1267*t3866;
  t4095 = 4.e-6*t573*t3973;
  t4102 = t4081 + t4092 + t4095;
  t2854 = Power(t190,5);
  t2861 = -1.*t2854;
  t2863 = -5.*t154*t83*t388;
  t2884 = -10.*t353*t276*t360;
  t2890 = -10.*t230*t151*t291;
  t2892 = -5.*t136*t92*t190;
  t2908 = -1.*t49*t2895;
  t4111 = t943*t4076;
  t4410 = t3187*t531*t598*t702;
  t4415 = t619*t3187*t531*t752;
  t4416 = t4410 + t4415;
  t4424 = -1.*t619*t3187*t531*t598;
  t4425 = t3187*t531*t702*t752;
  t4427 = t4424 + t4425;
  t4436 = -1.*t3187*t573*t720;
  t4437 = -4.e-6*t573*t4416;
  t4440 = t1078*t4427;
  t4442 = t4436 + t4437 + t4440;
  t4447 = -1.*t534*t3187*t720;
  t4448 = 4.e-6*t565*t4416;
  t4451 = -1.*t573*t4427;
  t4455 = t4447 + t4448 + t4451;
  t4475 = -4.e-6*t565*t3187*t720;
  t4479 = t1267*t4416;
  t4480 = 4.e-6*t573*t4427;
  t4481 = t4475 + t4479 + t4480;
  t4553 = t598*t3213;
  t4560 = t3187*t720*t752;
  t4563 = t4553 + t4560;
  t4568 = t702*t3219;
  t4569 = t619*t4563;
  t4570 = t4568 + t4569;
  t4572 = -1.*t702*t4563;
  t4573 = t3261 + t4572;
  t4579 = 4.e-6*t573*t4570;
  t4585 = t1267*t4573;
  t4598 = t4579 + t4585;
  t4601 = -1.*t573*t4570;
  t4602 = 4.e-6*t565*t4573;
  t4603 = t4601 + t4602;
  t4605 = t1078*t4570;
  t4611 = -4.e-6*t573*t4573;
  t4612 = t4605 + t4611;
  t4698 = -1.*t3187*t598*t720;
  t4699 = t3213*t752;
  t4700 = t4698 + t4699;
  t4710 = -1.*t702*t4700;
  t4711 = t4710 + t4569;
  t4719 = -1.*t619*t4700;
  t4727 = t4719 + t4572;
  t4737 = 4.e-6*t573*t4711;
  t4739 = t1267*t4727;
  t4745 = t4737 + t4739;
  t4748 = -1.*t573*t4711;
  t4750 = 4.e-6*t565*t4727;
  t4754 = t4748 + t4750;
  t4760 = t1078*t4711;
  t4764 = -4.e-6*t573*t4727;
  t4787 = t4760 + t4764;
  t4862 = t619*t4700;
  t4875 = t702*t4563;
  t4877 = t4862 + t4875;
  t4884 = -1.*t534*t4877;
  t4891 = t3277 + t4737 + t4884;
  t4899 = 4.e-6*t3187*t531*t573;
  t4901 = -1.6e-11*t573*t4711;
  t4903 = 4.e-6*t534*t4877;
  t4906 = t4899 + t4901 + t4903;
  t4909 = t534*t3187*t531;
  t4910 = -4.e-6*t534*t4711;
  t4911 = -1.000000000016*t573*t4877;
  t4914 = t4909 + t4910 + t4911;
  t4990 = t3187*t531*t573;
  t4991 = -4.e-6*t573*t4711;
  t4992 = t1078*t4877;
  t4993 = t4990 + t4991 + t4992;
  t4997 = 4.e-6*t565*t4711;
  t5003 = -1.*t573*t4877;
  t5008 = t4909 + t4997 + t5003;
  t5011 = 4.e-6*t565*t3187*t531;
  t5012 = t1267*t4711;
  t5013 = 4.e-6*t573*t4877;
  t5015 = t5011 + t5012 + t5013;
  t5256 = Cos(var2[13]);
  t5257 = -1.*t5256;
  t5259 = 1. + t5257;
  t5271 = Sin(var2[13]);
  t5293 = Cos(var2[12]);
  t5300 = -1.*t5293;
  t5302 = 1. + t5300;
  t5316 = Sin(var2[12]);
  t5329 = 0.15121*t5316;
  t5269 = 4.e-6*t5259;
  t5279 = -2.8e-11*t5259;
  t5380 = 7.e-6*t5259;
  t5487 = Cos(var2[14]);
  t5488 = -1.*t5487;
  t5494 = 1. + t5488;
  t5506 = Sin(var2[14]);
  t5428 = -1.*t5271;
  t5451 = -4.e-6*t5271;
  t5395 = t598*t5316*t720;
  t5407 = t5293*t720*t752;
  t5414 = t5395 + t5407;
  t5469 = -1.*t5293*t598*t720;
  t5471 = t5316*t720*t752;
  t5473 = t5469 + t5471;
  t5517 = 7.e-6*t5494;
  t5364 = -7.e-6*t5271;
  t5550 = -7.e-6*t5259;
  t5385 = 4.e-6*t5271;
  t5604 = 4.e-6*t5494;
  t5505 = -2.8e-11*t5494;
  t5673 = -1. + t5256;
  t5676 = 4.e-6*t5673;
  t5272 = 7.e-6*t5271;
  t5544 = 2.8e-11*t5259;
  t5545 = t5544 + t5428;
  t5549 = t531*t5545;
  t5551 = t5550 + t5451;
  t5560 = t5551*t5414;
  t5561 = -1.000000000016*t5259;
  t5575 = 1. + t5561;
  t5584 = t5575*t5473;
  t5588 = t5549 + t5560 + t5584;
  t5741 = 7.e-6*t5506;
  t5679 = t5676 + t5364;
  t5690 = t531*t5679;
  t5693 = -6.5e-11*t5259;
  t5696 = 1. + t5693;
  t5701 = t5696*t5414;
  t5703 = t5550 + t5385;
  t5705 = t5703*t5473;
  t5710 = t5690 + t5701 + t5705;
  t5773 = -1.000000000049*t5259;
  t5777 = 1. + t5773;
  t5780 = t5777*t531;
  t5782 = t5676 + t5272;
  t5783 = t5782*t5414;
  t5786 = t5544 + t5271;
  t5792 = t5786*t5473;
  t5794 = t5780 + t5783 + t5792;
  t5522 = -4.e-6*t5506;
  t5810 = 2.8e-11*t5494;
  t5507 = -1.*t5506;
  t5920 = -7.e-6*t5494;
  t5624 = 4.e-6*t5506;
  t5834 = -1. + t5487;
  t5845 = 4.e-6*t5834;
  t5605 = -7.e-6*t5506;
  t5340 = 0.15121*t5302;
  t5347 = t5340 + t5329;
  t5307 = -0.15121*t5302;
  t5333 = t5307 + t5329;
  t5421 = 1.0248489999999998e-12*var2[13];
  t5423 = -0.28120900000849935*t5259;
  t5438 = t5279 + t5428;
  t5441 = -0.038748999993*t5438;
  t5454 = t5380 + t5451;
  t5462 = -2.123459e-6*t5454;
  t5464 = t5421 + t5423 + t5441 + t5462;
  t5359 = -1.4640699999999997e-7*var2[13];
  t5361 = -1.38024835e-16*t5259;
  t5369 = t5269 + t5364;
  t5373 = -0.038748999993*t5369;
  t5389 = t5380 + t5385;
  t5390 = -0.281209000004*t5389;
  t5393 = t5359 + t5361 + t5373 + t5390;
  t5595 = -2.598649999999999e-7*var2[14];
  t5597 = -2.3905277499999995e-16*t5494;
  t5609 = t5604 + t5605;
  t5617 = -0.038922999986*t5609;
  t5640 = t5517 + t5624;
  t5648 = -0.503149000008*t5640;
  t5669 = t5595 + t5597 + t5617 + t5648;
  t6058 = -1.*t531*t598*t5316;
  t6062 = -1.*t5293*t531*t752;
  t6063 = t6058 + t6062;
  t6067 = -1.*t5293*t531*t598;
  t6069 = t531*t5316*t752;
  t6070 = t6067 + t6069;
  t5479 = 1.8190549999999993e-12*var2[14];
  t5501 = -0.5031490000160505*t5494;
  t5515 = t5505 + t5507;
  t5516 = -0.038922999986*t5515;
  t5532 = t5517 + t5522;
  t5533 = -3.6777349999999994e-6*t5532;
  t5538 = t5479 + t5501 + t5516 + t5533;
  t5726 = 1.0394599999999997e-12*var2[14];
  t5728 = -0.03892299998790722*t5494;
  t5744 = t5604 + t5741;
  t5767 = -3.6777349999999994e-6*t5744;
  t5768 = t5505 + t5506;
  t5771 = -0.503149000008*t5768;
  t5772 = t5726 + t5728 + t5767 + t5771;
  t5858 = t5845 + t5741;
  t6079 = t5703*t6063;
  t6082 = t5696*t6070;
  t6084 = t6079 + t6082;
  t5829 = t5810 + t5506;
  t6089 = t5575*t6063;
  t6094 = t5551*t6070;
  t6098 = t6089 + t6094;
  t5865 = -1.000000000049*t5494;
  t5874 = 1. + t5865;
  t6113 = t5786*t6063;
  t6123 = t5782*t6070;
  t6133 = t6113 + t6123;
  t5927 = t5920 + t5522;
  t5906 = -1.000000000016*t5494;
  t5912 = 1. + t5906;
  t5939 = t5810 + t5507;
  t5980 = -6.5e-11*t5494;
  t5982 = 1. + t5980;
  t5977 = t5920 + t5624;
  t6023 = t5845 + t5605;
  t6283 = 0.15121*t5293;
  t6064 = t5464*t6063;
  t6077 = t5393*t6070;
  t6087 = t5669*t6084;
  t6101 = t5538*t6098;
  t6144 = t5772*t6133;
  t6148 = t5858*t6084;
  t6149 = t5829*t6098;
  t6150 = t5874*t6133;
  t6168 = t6148 + t6149 + t6150;
  t6171 = -0.038924*t6168;
  t6177 = t5927*t6084;
  t6212 = t5912*t6098;
  t6234 = t5939*t6133;
  t6251 = t6177 + t6212 + t6234;
  t6252 = -0.80315*t6251;
  t6258 = t5982*t6084;
  t6272 = t5977*t6098;
  t6274 = t6023*t6133;
  t6277 = t6258 + t6272 + t6274;
  t6278 = 0.148705*t6277;
  t6325 = -2.8e-11*t5271;
  t6345 = -7.e-6*t5256;
  t6350 = 4.e-6*t5256;
  t6402 = t5293*t531*t598;
  t6408 = -1.*t531*t5316*t752;
  t6413 = t6402 + t6408;
  t6330 = 7.e-6*t5256;
  t6503 = 2.8e-11*t5271;
  t6371 = -4.e-6*t5256;
  t6428 = t6345 + t5451;
  t6430 = t6428*t720;
  t6446 = -6.5e-11*t5271*t6063;
  t6470 = t6350 + t5364;
  t6474 = t6470*t6413;
  t6483 = t6430 + t6446 + t6474;
  t6485 = -1.000000000049*t5271*t720;
  t6496 = t6330 + t5451;
  t6502 = t6496*t6063;
  t6505 = t5256 + t6503;
  t6506 = t6505*t6413;
  t6508 = t6485 + t6502 + t6506;
  t6512 = t5257 + t6503;
  t6515 = t6512*t720;
  t6517 = t6371 + t5364;
  t6518 = t6517*t6063;
  t6536 = -1.000000000016*t5271*t6413;
  t6547 = t6515 + t6518 + t6536;
  t6629 = -2.8e-11*t5506;
  t6773 = 4.e-6*t5487;
  t6680 = t5545*t720;
  t6709 = t5551*t6063;
  t6730 = t5575*t6413;
  t6736 = t6680 + t6709 + t6730;
  t6783 = t5679*t720;
  t6786 = t5696*t6063;
  t6787 = t5703*t6413;
  t6789 = t6783 + t6786 + t6787;
  t6766 = -7.e-6*t5487;
  t6863 = t5777*t720;
  t6865 = t5782*t6063;
  t6866 = t5786*t6413;
  t6874 = t6863 + t6865 + t6866;
  t6637 = -4.e-6*t5487;
  t6951 = 2.8e-11*t5506;
  t6836 = 7.e-6*t5487;
  t5251 = 5.856279999999999e-13*var2[13];
  t5268 = -0.0387489999948987*t5259;
  t5274 = t5269 + t5272;
  t5277 = -2.123459e-6*t5274;
  t5282 = t5279 + t5271;
  t5283 = -0.281209000004*t5282;
  t5290 = t5251 + t5268 + t5277 + t5283;
  t7437 = -1.*t5316*t3219;
  t7440 = t5293*t3228;
  t7441 = t7437 + t7440;
  t7451 = t5293*t3219;
  t7454 = t5316*t3228;
  t7457 = t7451 + t7454;
  t7459 = -1.*t3187*t531*t5545;
  t7463 = t5551*t7441;
  t7472 = t5575*t7457;
  t7476 = t7459 + t7463 + t7472;
  t7483 = -1.*t3187*t531*t5679;
  t7488 = t5696*t7441;
  t7489 = t5703*t7457;
  t7491 = t7483 + t7488 + t7489;
  t7497 = -1.*t5777*t3187*t531;
  t7499 = t5782*t7441;
  t7501 = t5786*t7457;
  t7504 = t7497 + t7499 + t7501;
  t7558 = -1.*t531*t598*t5316*t3213;
  t7560 = -1.*t5293*t531*t3213*t752;
  t7561 = t7558 + t7560;
  t7564 = t5293*t531*t598*t3213;
  t7567 = -1.*t531*t5316*t3213*t752;
  t7571 = t7564 + t7567;
  t7573 = t5545*t3213*t720;
  t7574 = t5551*t7561;
  t7578 = t5575*t7571;
  t7579 = t7573 + t7574 + t7578;
  t7585 = t5679*t3213*t720;
  t7589 = t5696*t7561;
  t7607 = t5703*t7571;
  t7622 = t7585 + t7589 + t7607;
  t7632 = t5777*t3213*t720;
  t7644 = t5782*t7561;
  t7662 = t5786*t7571;
  t7667 = t7632 + t7644 + t7662;
  t7800 = t5316*t3666;
  t7807 = t5293*t3688;
  t7813 = t7800 + t7807;
  t7828 = t5293*t3666;
  t7832 = -1.*t5316*t3688;
  t7837 = t7828 + t7832;
  t7853 = t5703*t7813;
  t7866 = t5696*t7837;
  t7868 = t7853 + t7866;
  t7901 = t5575*t7813;
  t7907 = t5551*t7837;
  t7923 = t7901 + t7907;
  t7929 = t5786*t7813;
  t7934 = t5782*t7837;
  t7938 = t7929 + t7934;
  t6284 = -0.15121*t5316;
  t6296 = t6283 + t6284;
  t6311 = t6283 + t5329;
  t8010 = -1.*t5316*t3846;
  t8025 = t8010 + t7807;
  t8049 = -1.*t5293*t3846;
  t8058 = t8049 + t7832;
  t8076 = t5703*t8025;
  t8085 = t5696*t8058;
  t8088 = t8076 + t8085;
  t8095 = t5575*t8025;
  t8099 = t5551*t8058;
  t8104 = t8095 + t8099;
  t8112 = t5786*t8025;
  t8116 = t5782*t8058;
  t8118 = t8112 + t8116;
  t6327 = t5256 + t6325;
  t6328 = -0.281209000004*t6327;
  t6333 = t6330 + t5385;
  t6335 = -2.123459e-6*t6333;
  t6337 = -0.0387489999948987*t5271;
  t6340 = 5.856279999999999e-13 + t6328 + t6335 + t6337;
  t6346 = t6345 + t5385;
  t6349 = -0.038748999993*t6346;
  t6351 = t6350 + t5272;
  t6352 = -0.281209000004*t6351;
  t6356 = -1.38024835e-16*t5271;
  t6357 = -1.4640699999999997e-7 + t6349 + t6352 + t6356;
  t6361 = t5257 + t6325;
  t6362 = -0.038748999993*t6361;
  t6384 = t6371 + t5272;
  t6391 = -2.123459e-6*t6384;
  t6393 = -0.28120900000849935*t5271;
  t6399 = 1.0248489999999998e-12 + t6362 + t6391 + t6393;
  t8181 = t5293*t3846;
  t8186 = t5316*t3688;
  t8188 = t8181 + t8186;
  t8196 = -1.*t531*t6428*t3213;
  t8199 = -6.5e-11*t5271*t8025;
  t8201 = t6470*t8188;
  t8206 = t8196 + t8199 + t8201;
  t8211 = 1.000000000049*t531*t5271*t3213;
  t8212 = t6496*t8025;
  t8213 = t6505*t8188;
  t8216 = t8211 + t8212 + t8213;
  t8218 = -1.*t531*t6512*t3213;
  t8219 = t6517*t8025;
  t8224 = -1.000000000016*t5271*t8188;
  t8225 = t8218 + t8219 + t8224;
  t6630 = t5488 + t6629;
  t6634 = -0.038922999986*t6630;
  t6638 = t6637 + t5741;
  t6643 = -3.6777349999999994e-6*t6638;
  t6666 = -0.5031490000160505*t5506;
  t6672 = 1.8190549999999993e-12 + t6634 + t6643 + t6666;
  t6770 = t6766 + t5624;
  t6771 = -0.038922999986*t6770;
  t6774 = t6773 + t5741;
  t6780 = -0.503149000008*t6774;
  t6781 = -2.3905277499999995e-16*t5506;
  t6782 = -2.598649999999999e-7 + t6771 + t6780 + t6781;
  t6817 = t5487 + t6629;
  t6833 = -0.503149000008*t6817;
  t6845 = t6836 + t5624;
  t6848 = -3.6777349999999994e-6*t6845;
  t6849 = -0.03892299998790722*t5506;
  t6859 = 1.0394599999999997e-12 + t6833 + t6848 + t6849;
  t6892 = t6773 + t5605;
  t8285 = -1.*t531*t5545*t3213;
  t8288 = t5551*t8025;
  t8289 = t5575*t8188;
  t8291 = t8285 + t8288 + t8289;
  t8296 = -1.*t531*t5679*t3213;
  t8297 = t5696*t8025;
  t8300 = t5703*t8188;
  t8301 = t8296 + t8297 + t8300;
  t6910 = t6766 + t5522;
  t8303 = -1.*t5777*t531*t3213;
  t8304 = t5782*t8025;
  t8311 = t5786*t8188;
  t8315 = t8303 + t8304 + t8311;
  t6940 = t6637 + t5605;
  t6964 = t5488 + t6951;
  t6979 = t5487 + t6951;
  t6990 = t6836 + t5522;
  t8675 = t3187*t531*t598*t5316;
  t8678 = t5293*t3187*t531*t752;
  t8681 = t8675 + t8678;
  t8686 = -1.*t5293*t3187*t531*t598;
  t8688 = t3187*t531*t5316*t752;
  t8689 = t8686 + t8688;
  t8696 = -1.*t3187*t5545*t720;
  t8701 = t5551*t8681;
  t8703 = t5575*t8689;
  t8704 = t8696 + t8701 + t8703;
  t8708 = -1.*t3187*t5679*t720;
  t8709 = t5696*t8681;
  t8710 = t5703*t8689;
  t8713 = t8708 + t8709 + t8710;
  t8716 = -1.*t5777*t3187*t720;
  t8721 = t5782*t8681;
  t8723 = t5786*t8689;
  t8728 = t8716 + t8721 + t8723;
  t8785 = t5316*t3219;
  t8795 = t5293*t4563;
  t8798 = t8785 + t8795;
  t8808 = -1.*t5316*t4563;
  t8817 = t7451 + t8808;
  t8819 = t5703*t8798;
  t8824 = t5696*t8817;
  t8825 = t8819 + t8824;
  t8839 = t5575*t8798;
  t8841 = t5551*t8817;
  t8845 = t8839 + t8841;
  t8849 = t5786*t8798;
  t8852 = t5782*t8817;
  t8864 = t8849 + t8852;
  t8914 = -1.*t5316*t4700;
  t8915 = t8914 + t8795;
  t8922 = -1.*t5293*t4700;
  t8923 = t8922 + t8808;
  t8927 = t5703*t8915;
  t8928 = t5696*t8923;
  t8934 = t8927 + t8928;
  t8948 = t5575*t8915;
  t8950 = t5551*t8923;
  t8960 = t8948 + t8950;
  t8965 = t5786*t8915;
  t8966 = t5782*t8923;
  t8968 = t8965 + t8966;
  t9037 = t5293*t4700;
  t9038 = t5316*t4563;
  t9039 = t9037 + t9038;
  t9051 = t3187*t531*t6428;
  t9056 = -6.5e-11*t5271*t8915;
  t9062 = t6470*t9039;
  t9066 = t9051 + t9056 + t9062;
  t9080 = -1.000000000049*t3187*t531*t5271;
  t9083 = t6496*t8915;
  t9091 = t6505*t9039;
  t9094 = t9080 + t9083 + t9091;
  t9111 = t3187*t531*t6512;
  t9112 = t6517*t8915;
  t9115 = -1.000000000016*t5271*t9039;
  t9119 = t9111 + t9112 + t9115;
  t9197 = t3187*t531*t5545;
  t9200 = t5551*t8915;
  t9203 = t5575*t9039;
  t9207 = t9197 + t9200 + t9203;
  t9212 = t3187*t531*t5679;
  t9215 = t5696*t8915;
  t9217 = t5703*t9039;
  t9218 = t9212 + t9215 + t9217;
  t9229 = t5777*t3187*t531;
  t9230 = t5782*t8915;
  t9231 = t5786*t9039;
  t9232 = t9229 + t9230 + t9231;
  t10029 = Power(t531,2);
  t10032 = Power(t598,2);
  t10035 = t10029*t10032;
  t10037 = Power(t3846,2);
  t10039 = t10035 + t10037;
  t10053 = 1/t10039;
  t4296 = t718*t3846;
  t4299 = t739*t3688;
  t4402 = -1.*t3187*t531*t598*t718;
  t4405 = t3187*t531*t739*t752;
  t4551 = t739*t3219;
  t4566 = t718*t4563;
  t4701 = t1888*t4700;
  t4704 = t1896*t4563;
  p_output1[0]=5.*t154*t33*t388*var3[0] - 5.*t154*t33*t388*var3[10] + 20.*t33*t353*t360*t83*var3[10] + 30.*t230*t276*t291*t33*var3[20] - 20.*t33*t353*t360*t83*var3[20] + 20.*t136*t151*t190*t33*var3[30] - 30.*t230*t276*t291*t33*var3[30] - 20.*t136*t151*t190*t33*var3[40] + 5.*t33*t49*t92*var3[40] - 5.*t33*t49*t92*var3[50];
  p_output1[1]=5.*t154*t28*t388*t9*var3[0] - 5.*t154*t28*t388*t9*var3[10] + 20.*t28*t353*t360*t83*t9*var3[10] + 30.*t230*t276*t28*t291*t9*var3[20] - 20.*t28*t353*t360*t83*t9*var3[20] + 20.*t136*t151*t190*t28*t9*var3[30] - 30.*t230*t276*t28*t291*t9*var3[30] - 20.*t136*t151*t190*t28*t9*var3[40] + 5.*t28*t49*t9*t92*var3[40] - 5.*t28*t49*t9*t92*var3[50];
  p_output1[2]=1.;
  p_output1[3]=t1033*t1083 + t1160*t1202 + t1239*t1323 + t531*t581 - 1.*t598*t718*t720 + t720*t739*t752 + t809*t836 + t895*t909 - 0.041195*(t1202*t943 + 4.e-6*t1323*t953 - 1.*t1083*t984) - 0.14871*(t1323*t1395 + 4.e-6*t1202*t953 + 4.e-6*t1083*t984) + 0.803147*(t1083*t1496 + t1202*t984 - 4.e-6*t1323*t984);
  p_output1[4]=t1589 + t1605 + t1631 + t1651 + t1728 + t1771 + t1814 + t1854 - 1.*t531*t598*t739 - 1.*t531*t718*t752;
  p_output1[5]=t1589 + t1605 + t1631 + t1651 + t1728 + t1771 + t1814 + t1854 + t1888*t531*t598 - 1.*t1896*t531*t752;
  p_output1[6]=t1585*t1973 + t2047*t2083 + t1160*t2136 + t1239*t2188 + t1033*t2248 + t1942*t720 + 0.803147*(t1496*t2248 + t2136*t984 - 4.e-6*t2188*t984) - 0.041195*(t2136*t943 + 4.e-6*t2188*t953 - 1.*t2248*t984) - 0.14871*(t1395*t2188 + 4.e-6*t2136*t953 + 4.e-6*t2248*t984);
  p_output1[7]=t2523*t2601 + t2638*t2684 + t2700*t2729 + 0.803147*(t2684*t943 - 4.e-6*t2729*t943 - 1.000000000016*t2601*t984) - 0.14871*(4.e-6*t2601*t943 + 4.e-6*t2684*t984 - 1.6e-11*t2729*t984) - 0.041195*(-1.*t2601*t943 - 1.*t2684*t984 + 4.e-6*t2729*t984);
  p_output1[8]=t2861;
  p_output1[9]=t2863;
  p_output1[10]=t2884;
  p_output1[11]=t2890;
  p_output1[12]=t2892;
  p_output1[13]=t2908;
  p_output1[14]=-5.*t2927*t388*var3[0] + 5.*t154*t388*var3[10] - 20.*t154*t2927*t360*t83*var3[10] - 5.*t353*t388*t83*var3[10] - 30.*t276*t291*t2927*t353*var3[20] - 20.*t230*t276*t360*var3[20] + 20.*t353*t360*t83*var3[20] - 30.*t136*t151*t291*var3[30] + 30.*t230*t276*t291*var3[30] - 20.*t151*t190*t230*t2927*var3[30] + 20.*t136*t151*t190*var3[40] - 5.*t136*t2927*t92*var3[40] - 20.*t190*t49*t92*var3[40] - 5.*t2895*t2919*var3[50] + 5.*t49*t92*var3[50];
  p_output1[15]=-5.*t353*t388*t83*var3[0] - 20.*t230*t276*t360*var3[10] + 5.*t353*t388*t83*var3[10] - 30.*t136*t151*t291*var3[20] + 20.*t230*t276*t360*var3[20] + 30.*t136*t151*t291*var3[30] - 20.*t190*t49*t92*var3[30] - 5.*t2895*t2919*var3[40] + 20.*t190*t49*t92*var3[40] + 5.*t2895*t2919*var3[50];
  p_output1[16]=5.*t154*t33*t388*var3[1] - 5.*t154*t33*t388*var3[11] + 20.*t33*t353*t360*t83*var3[11] + 30.*t230*t276*t291*t33*var3[21] - 20.*t33*t353*t360*t83*var3[21] + 20.*t136*t151*t190*t33*var3[31] - 30.*t230*t276*t291*t33*var3[31] - 20.*t136*t151*t190*t33*var3[41] + 5.*t33*t49*t92*var3[41] - 5.*t33*t49*t92*var3[51];
  p_output1[17]=5.*t154*t28*t388*t9*var3[1] - 5.*t154*t28*t388*t9*var3[11] + 20.*t28*t353*t360*t83*t9*var3[11] + 30.*t230*t276*t28*t291*t9*var3[21] - 20.*t28*t353*t360*t83*t9*var3[21] + 20.*t136*t151*t190*t28*t9*var3[31] - 30.*t230*t276*t28*t291*t9*var3[31] - 20.*t136*t151*t190*t28*t9*var3[41] + 5.*t28*t49*t9*t92*var3[41] - 5.*t28*t49*t9*t92*var3[51];
  p_output1[18]=1.;
  p_output1[19]=t1033*t3286 + t1160*t3306 + t1239*t3314 - 1.*t3187*t531*t581 + t3219*t718 + t3228*t739 + t3246*t809 + t3272*t895 - 0.041195*(t3306*t943 + 4.e-6*t3314*t953 - 1.*t3286*t984) - 0.14871*(t1395*t3314 + 4.e-6*t3306*t953 + 4.e-6*t3286*t984) + 0.803147*(t1496*t3286 + t3306*t984 - 4.e-6*t3314*t984);
  p_output1[20]=t1033*t3514 + t1160*t3543 + t1239*t3564 + t3213*t531*t598*t718 + t3213*t581*t720 - 1.*t3213*t531*t739*t752 + t3469*t809 + t3491*t895 - 0.041195*(t3543*t943 + 4.e-6*t3564*t953 - 1.*t3514*t984) - 0.14871*(t1395*t3564 + 4.e-6*t3543*t953 + 4.e-6*t3514*t984) + 0.803147*(t1496*t3514 + t3543*t984 - 4.e-6*t3564*t984);
  p_output1[21]=t1239*t3740 + t1160*t3745 + t1033*t3754 + t3688*t718 + t3666*t739 + t3724*t809 + t3715*t895 + 0.803147*(t1496*t3754 - 4.e-6*t3740*t984 + t3745*t984) - 0.041195*(t3745*t943 + 4.e-6*t3740*t953 - 1.*t3754*t984) - 0.14871*(t1395*t3740 + 4.e-6*t3745*t953 + 4.e-6*t3754*t984);
  p_output1[22]=t1896*t3688 + t1888*t3846 + t1239*t3882 + t1160*t3892 + t1033*t3909 + t3870*t809 + t3866*t895 + 0.803147*(t1496*t3909 - 4.e-6*t3882*t984 + t3892*t984) - 0.041195*(t3892*t943 + 4.e-6*t3882*t953 - 1.*t3909*t984) - 0.14871*(t1395*t3882 + 4.e-6*t3892*t953 + 4.e-6*t3909*t984);
  p_output1[23]=t1973*t3866 + t2047*t3973 + t1160*t3984 + t1239*t3989 + t1033*t4005 - 1.*t1942*t3213*t531 + 0.803147*(t1496*t4005 + t3984*t984 - 4.e-6*t3989*t984) - 0.041195*(t3984*t943 + 4.e-6*t3989*t953 - 1.*t4005*t984) - 0.14871*(t1395*t3989 + 4.e-6*t3984*t953 + 4.e-6*t4005*t984);
  p_output1[24]=t2523*t4069 + t2638*t4076 + t2700*t4102 + 0.803147*(t4111 - 4.e-6*t4102*t943 - 1.000000000016*t4069*t984) - 0.14871*(4.e-6*t4069*t943 + 4.e-6*t4076*t984 - 1.6e-11*t4102*t984) - 0.041195*(-1.*t4069*t943 - 1.*t4076*t984 + 4.e-6*t4102*t984);
  p_output1[25]=t2861;
  p_output1[26]=t2863;
  p_output1[27]=t2884;
  p_output1[28]=t2890;
  p_output1[29]=t2892;
  p_output1[30]=t2908;
  p_output1[31]=-5.*t2927*t388*var3[1] + 5.*t154*t388*var3[11] - 20.*t154*t2927*t360*t83*var3[11] - 5.*t353*t388*t83*var3[11] - 30.*t276*t291*t2927*t353*var3[21] - 20.*t230*t276*t360*var3[21] + 20.*t353*t360*t83*var3[21] - 30.*t136*t151*t291*var3[31] + 30.*t230*t276*t291*var3[31] - 20.*t151*t190*t230*t2927*var3[31] + 20.*t136*t151*t190*var3[41] - 5.*t136*t2927*t92*var3[41] - 20.*t190*t49*t92*var3[41] - 5.*t2895*t2919*var3[51] + 5.*t49*t92*var3[51];
  p_output1[32]=-5.*t353*t388*t83*var3[1] - 20.*t230*t276*t360*var3[11] + 5.*t353*t388*t83*var3[11] - 30.*t136*t151*t291*var3[21] + 20.*t230*t276*t360*var3[21] + 30.*t136*t151*t291*var3[31] - 20.*t190*t49*t92*var3[31] - 5.*t2895*t2919*var3[41] + 20.*t190*t49*t92*var3[41] + 5.*t2895*t2919*var3[51];
  p_output1[33]=5.*t154*t33*t388*var3[2] - 5.*t154*t33*t388*var3[12] + 20.*t33*t353*t360*t83*var3[12] + 30.*t230*t276*t291*t33*var3[22] - 20.*t33*t353*t360*t83*var3[22] + 20.*t136*t151*t190*t33*var3[32] - 30.*t230*t276*t291*t33*var3[32] - 20.*t136*t151*t190*t33*var3[42] + 5.*t33*t49*t92*var3[42] - 5.*t33*t49*t92*var3[52];
  p_output1[34]=5.*t154*t28*t388*t9*var3[2] - 5.*t154*t28*t388*t9*var3[12] + 20.*t28*t353*t360*t83*t9*var3[12] + 30.*t230*t276*t28*t291*t9*var3[22] - 20.*t28*t353*t360*t83*t9*var3[22] + 20.*t136*t151*t190*t28*t9*var3[32] - 30.*t230*t276*t28*t291*t9*var3[32] - 20.*t136*t151*t190*t28*t9*var3[42] + 5.*t28*t49*t9*t92*var3[42] - 5.*t28*t49*t9*t92*var3[52];
  p_output1[35]=1.;
  p_output1[36]=t1033*t4069 + t1160*t4076 + t1239*t4102 + t4296 + t4299 - 1.*t3213*t531*t581 + t3866*t809 + t3973*t895 - 0.041195*(t4111 + 4.e-6*t4102*t953 - 1.*t4069*t984) - 0.14871*(t1395*t4102 + 4.e-6*t4076*t953 + 4.e-6*t4069*t984) + 0.803147*(t1496*t4069 + t4076*t984 - 4.e-6*t4102*t984);
  p_output1[37]=t4402 + t4405 + t1033*t4442 + t1160*t4455 + t1239*t4481 - 1.*t3187*t581*t720 + t4416*t809 + t4427*t895 - 0.041195*(t4455*t943 + 4.e-6*t4481*t953 - 1.*t4442*t984) - 0.14871*(t1395*t4481 + 4.e-6*t4455*t953 + 4.e-6*t4442*t984) + 0.803147*(t1496*t4442 + t4455*t984 - 4.e-6*t4481*t984);
  p_output1[38]=t4551 + t4566 + t1239*t4598 + t1160*t4603 + t1033*t4612 + t4573*t809 + t4570*t895 + 0.803147*(t1496*t4612 - 4.e-6*t4598*t984 + t4603*t984) - 0.041195*(t4603*t943 + 4.e-6*t4598*t953 - 1.*t4612*t984) - 0.14871*(t1395*t4598 + 4.e-6*t4603*t953 + 4.e-6*t4612*t984);
  p_output1[39]=t4701 + t4704 + t1239*t4745 + t1160*t4754 + t1033*t4787 + t4727*t809 + t4711*t895 + 0.803147*(t1496*t4787 - 4.e-6*t4745*t984 + t4754*t984) - 0.041195*(t4754*t943 + 4.e-6*t4745*t953 - 1.*t4787*t984) - 0.14871*(t1395*t4745 + 4.e-6*t4754*t953 + 4.e-6*t4787*t984);
  p_output1[40]=t1973*t4711 + t2047*t4877 + t1160*t4891 + t1239*t4906 + t1033*t4914 + t1942*t3187*t531 + 0.803147*(t1496*t4914 + t4891*t984 - 4.e-6*t4906*t984) - 0.041195*(t4891*t943 + 4.e-6*t4906*t953 - 1.*t4914*t984) - 0.14871*(t1395*t4906 + 4.e-6*t4891*t953 + 4.e-6*t4914*t984);
  p_output1[41]=t2523*t4993 + t2638*t5008 + t2700*t5015 + 0.803147*(t5008*t943 - 4.e-6*t5015*t943 - 1.000000000016*t4993*t984) - 0.14871*(4.e-6*t4993*t943 + 4.e-6*t5008*t984 - 1.6e-11*t5015*t984) - 0.041195*(-1.*t4993*t943 - 1.*t5008*t984 + 4.e-6*t5015*t984);
  p_output1[42]=t2861;
  p_output1[43]=t2863;
  p_output1[44]=t2884;
  p_output1[45]=t2890;
  p_output1[46]=t2892;
  p_output1[47]=t2908;
  p_output1[48]=-5.*t2927*t388*var3[2] + 5.*t154*t388*var3[12] - 20.*t154*t2927*t360*t83*var3[12] - 5.*t353*t388*t83*var3[12] - 30.*t276*t291*t2927*t353*var3[22] - 20.*t230*t276*t360*var3[22] + 20.*t353*t360*t83*var3[22] - 30.*t136*t151*t291*var3[32] + 30.*t230*t276*t291*var3[32] - 20.*t151*t190*t230*t2927*var3[32] + 20.*t136*t151*t190*var3[42] - 5.*t136*t2927*t92*var3[42] - 20.*t190*t49*t92*var3[42] - 5.*t2895*t2919*var3[52] + 5.*t49*t92*var3[52];
  p_output1[49]=-5.*t353*t388*t83*var3[2] - 20.*t230*t276*t360*var3[12] + 5.*t353*t388*t83*var3[12] - 30.*t136*t151*t291*var3[22] + 20.*t230*t276*t360*var3[22] + 30.*t136*t151*t291*var3[32] - 20.*t190*t49*t92*var3[32] - 5.*t2895*t2919*var3[42] + 20.*t190*t49*t92*var3[42] + 5.*t2895*t2919*var3[52];
  p_output1[50]=5.*t154*t33*t388*var3[3] - 5.*t154*t33*t388*var3[13] + 20.*t33*t353*t360*t83*var3[13] + 30.*t230*t276*t291*t33*var3[23] - 20.*t33*t353*t360*t83*var3[23] + 20.*t136*t151*t190*t33*var3[33] - 30.*t230*t276*t291*t33*var3[33] - 20.*t136*t151*t190*t33*var3[43] + 5.*t33*t49*t92*var3[43] - 5.*t33*t49*t92*var3[53];
  p_output1[51]=5.*t154*t28*t388*t9*var3[3] - 5.*t154*t28*t388*t9*var3[13] + 20.*t28*t353*t360*t83*t9*var3[13] + 30.*t230*t276*t28*t291*t9*var3[23] - 20.*t28*t353*t360*t83*t9*var3[23] + 20.*t136*t151*t190*t28*t9*var3[33] - 30.*t230*t276*t28*t291*t9*var3[33] - 20.*t136*t151*t190*t28*t9*var3[43] + 5.*t28*t49*t9*t92*var3[43] - 5.*t28*t49*t9*t92*var3[53];
  p_output1[52]=1.;
  p_output1[53]=t5290*t531 + t5393*t5414 + t5464*t5473 + t5538*t5588 + t5669*t5710 + t5772*t5794 - 0.038924*(t5588*t5829 + t5710*t5858 + t5794*t5874) - 0.80315*(t5588*t5912 + t5710*t5927 + t5794*t5939) + 0.148705*(t5588*t5977 + t5710*t5982 + t5794*t6023) - 1.*t5333*t598*t720 + t5347*t720*t752;
  p_output1[54]=-1.*t531*t5347*t598 + t6064 + t6077 + t6087 + t6101 + t6144 + t6171 + t6252 + t6278 - 1.*t531*t5333*t752;
  p_output1[55]=t6064 + t6077 + t6087 + t6101 + t6144 + t6171 + t6252 + t6278 + t531*t598*t6296 - 1.*t531*t6311*t752;
  p_output1[56]=t6063*t6357 + t6399*t6413 + t5669*t6483 + t5772*t6508 + t5538*t6547 - 0.038924*(t5858*t6483 + t5874*t6508 + t5829*t6547) - 0.80315*(t5927*t6483 + t5939*t6508 + t5912*t6547) + 0.148705*(t5982*t6483 + t6023*t6508 + t5977*t6547) + t6340*t720;
  p_output1[57]=t6672*t6736 + t6782*t6789 + t6859*t6874 + 0.148705*(-6.5e-11*t5506*t6789 + t6736*t6892 + t6874*t6910) - 0.80315*(-1.000000000016*t5506*t6736 + t6789*t6940 + t6874*t6964) - 0.038924*(-1.000000000049*t5506*t6874 + t6736*t6979 + t6789*t6990);
  p_output1[58]=t2861;
  p_output1[59]=t2863;
  p_output1[60]=t2884;
  p_output1[61]=t2890;
  p_output1[62]=t2892;
  p_output1[63]=t2908;
  p_output1[64]=-5.*t2927*t388*var3[3] + 5.*t154*t388*var3[13] - 20.*t154*t2927*t360*t83*var3[13] - 5.*t353*t388*t83*var3[13] - 30.*t276*t291*t2927*t353*var3[23] - 20.*t230*t276*t360*var3[23] + 20.*t353*t360*t83*var3[23] - 30.*t136*t151*t291*var3[33] + 30.*t230*t276*t291*var3[33] - 20.*t151*t190*t230*t2927*var3[33] + 20.*t136*t151*t190*var3[43] - 5.*t136*t2927*t92*var3[43] - 20.*t190*t49*t92*var3[43] - 5.*t2895*t2919*var3[53] + 5.*t49*t92*var3[53];
  p_output1[65]=-5.*t353*t388*t83*var3[3] - 20.*t230*t276*t360*var3[13] + 5.*t353*t388*t83*var3[13] - 30.*t136*t151*t291*var3[23] + 20.*t230*t276*t360*var3[23] + 30.*t136*t151*t291*var3[33] - 20.*t190*t49*t92*var3[33] - 5.*t2895*t2919*var3[43] + 20.*t190*t49*t92*var3[43] + 5.*t2895*t2919*var3[53];
  p_output1[66]=5.*t154*t33*t388*var3[4] - 5.*t154*t33*t388*var3[14] + 20.*t33*t353*t360*t83*var3[14] + 30.*t230*t276*t291*t33*var3[24] - 20.*t33*t353*t360*t83*var3[24] + 20.*t136*t151*t190*t33*var3[34] - 30.*t230*t276*t291*t33*var3[34] - 20.*t136*t151*t190*t33*var3[44] + 5.*t33*t49*t92*var3[44] - 5.*t33*t49*t92*var3[54];
  p_output1[67]=5.*t154*t28*t388*t9*var3[4] - 5.*t154*t28*t388*t9*var3[14] + 20.*t28*t353*t360*t83*t9*var3[14] + 30.*t230*t276*t28*t291*t9*var3[24] - 20.*t28*t353*t360*t83*t9*var3[24] + 20.*t136*t151*t190*t28*t9*var3[34] - 30.*t230*t276*t28*t291*t9*var3[34] - 20.*t136*t151*t190*t28*t9*var3[44] + 5.*t28*t49*t9*t92*var3[44] - 5.*t28*t49*t9*t92*var3[54];
  p_output1[68]=1.;
  p_output1[69]=-1.*t3187*t5290*t531 + t3219*t5333 + t3228*t5347 + t5393*t7441 + t5464*t7457 + t5538*t7476 + t5669*t7491 + t5772*t7504 - 0.038924*(t5829*t7476 + t5858*t7491 + t5874*t7504) - 0.80315*(t5912*t7476 + t5927*t7491 + t5939*t7504) + 0.148705*(t5977*t7476 + t5982*t7491 + t6023*t7504);
  p_output1[70]=t3213*t531*t5333*t598 + t3213*t5290*t720 - 1.*t3213*t531*t5347*t752 + t5393*t7561 + t5464*t7571 + t5538*t7579 + t5669*t7622 + t5772*t7667 - 0.038924*(t5829*t7579 + t5858*t7622 + t5874*t7667) - 0.80315*(t5912*t7579 + t5927*t7622 + t5939*t7667) + 0.148705*(t5977*t7579 + t5982*t7622 + t6023*t7667);
  p_output1[71]=t3688*t5333 + t3666*t5347 + t5464*t7813 + t5393*t7837 + t5669*t7868 + t5538*t7923 + t5772*t7938 - 0.038924*(t5858*t7868 + t5829*t7923 + t5874*t7938) - 0.80315*(t5927*t7868 + t5912*t7923 + t5939*t7938) + 0.148705*(t5982*t7868 + t5977*t7923 + t6023*t7938);
  p_output1[72]=t3846*t6296 + t3688*t6311 + t5464*t8025 + t5393*t8058 + t5669*t8088 + t5538*t8104 + t5772*t8118 - 0.038924*(t5858*t8088 + t5829*t8104 + t5874*t8118) - 0.80315*(t5927*t8088 + t5912*t8104 + t5939*t8118) + 0.148705*(t5982*t8088 + t5977*t8104 + t6023*t8118);
  p_output1[73]=-1.*t3213*t531*t6340 + t6357*t8025 + t6399*t8188 + t5669*t8206 + t5772*t8216 + t5538*t8225 - 0.038924*(t5858*t8206 + t5874*t8216 + t5829*t8225) - 0.80315*(t5927*t8206 + t5939*t8216 + t5912*t8225) + 0.148705*(t5982*t8206 + t6023*t8216 + t5977*t8225);
  p_output1[74]=t6672*t8291 + t6782*t8301 + t6859*t8315 - 0.038924*(t6979*t8291 + t6990*t8301 - 1.000000000049*t5506*t8315) + 0.148705*(t6892*t8291 - 6.5e-11*t5506*t8301 + t6910*t8315) - 0.80315*(-1.000000000016*t5506*t8291 + t6940*t8301 + t6964*t8315);
  p_output1[75]=t2861;
  p_output1[76]=t2863;
  p_output1[77]=t2884;
  p_output1[78]=t2890;
  p_output1[79]=t2892;
  p_output1[80]=t2908;
  p_output1[81]=-5.*t2927*t388*var3[4] + 5.*t154*t388*var3[14] - 20.*t154*t2927*t360*t83*var3[14] - 5.*t353*t388*t83*var3[14] - 30.*t276*t291*t2927*t353*var3[24] - 20.*t230*t276*t360*var3[24] + 20.*t353*t360*t83*var3[24] - 30.*t136*t151*t291*var3[34] + 30.*t230*t276*t291*var3[34] - 20.*t151*t190*t230*t2927*var3[34] + 20.*t136*t151*t190*var3[44] - 5.*t136*t2927*t92*var3[44] - 20.*t190*t49*t92*var3[44] - 5.*t2895*t2919*var3[54] + 5.*t49*t92*var3[54];
  p_output1[82]=-5.*t353*t388*t83*var3[4] - 20.*t230*t276*t360*var3[14] + 5.*t353*t388*t83*var3[14] - 30.*t136*t151*t291*var3[24] + 20.*t230*t276*t360*var3[24] + 30.*t136*t151*t291*var3[34] - 20.*t190*t49*t92*var3[34] - 5.*t2895*t2919*var3[44] + 20.*t190*t49*t92*var3[44] + 5.*t2895*t2919*var3[54];
  p_output1[83]=5.*t154*t33*t388*var3[5] - 5.*t154*t33*t388*var3[15] + 20.*t33*t353*t360*t83*var3[15] + 30.*t230*t276*t291*t33*var3[25] - 20.*t33*t353*t360*t83*var3[25] + 20.*t136*t151*t190*t33*var3[35] - 30.*t230*t276*t291*t33*var3[35] - 20.*t136*t151*t190*t33*var3[45] + 5.*t33*t49*t92*var3[45] - 5.*t33*t49*t92*var3[55];
  p_output1[84]=5.*t154*t28*t388*t9*var3[5] - 5.*t154*t28*t388*t9*var3[15] + 20.*t28*t353*t360*t83*t9*var3[15] + 30.*t230*t276*t28*t291*t9*var3[25] - 20.*t28*t353*t360*t83*t9*var3[25] + 20.*t136*t151*t190*t28*t9*var3[35] - 30.*t230*t276*t28*t291*t9*var3[35] - 20.*t136*t151*t190*t28*t9*var3[45] + 5.*t28*t49*t9*t92*var3[45] - 5.*t28*t49*t9*t92*var3[55];
  p_output1[85]=1.;
  p_output1[86]=-1.*t3213*t5290*t531 + t3846*t5333 + t3688*t5347 + t5393*t8025 + t5464*t8188 + t5538*t8291 + t5669*t8301 + t5772*t8315 - 0.038924*(t5829*t8291 + t5858*t8301 + t5874*t8315) - 0.80315*(t5912*t8291 + t5927*t8301 + t5939*t8315) + 0.148705*(t5977*t8291 + t5982*t8301 + t6023*t8315);
  p_output1[87]=-1.*t3187*t531*t5333*t598 - 1.*t3187*t5290*t720 + t3187*t531*t5347*t752 + t5393*t8681 + t5464*t8689 + t5538*t8704 + t5669*t8713 + t5772*t8728 - 0.038924*(t5829*t8704 + t5858*t8713 + t5874*t8728) - 0.80315*(t5912*t8704 + t5927*t8713 + t5939*t8728) + 0.148705*(t5977*t8704 + t5982*t8713 + t6023*t8728);
  p_output1[88]=t4563*t5333 + t3219*t5347 + t5464*t8798 + t5393*t8817 + t5669*t8825 + t5538*t8845 + t5772*t8864 - 0.038924*(t5858*t8825 + t5829*t8845 + t5874*t8864) - 0.80315*(t5927*t8825 + t5912*t8845 + t5939*t8864) + 0.148705*(t5982*t8825 + t5977*t8845 + t6023*t8864);
  p_output1[89]=t4700*t6296 + t4563*t6311 + t5464*t8915 + t5393*t8923 + t5669*t8934 + t5538*t8960 + t5772*t8968 - 0.038924*(t5858*t8934 + t5829*t8960 + t5874*t8968) - 0.80315*(t5927*t8934 + t5912*t8960 + t5939*t8968) + 0.148705*(t5982*t8934 + t5977*t8960 + t6023*t8968);
  p_output1[90]=t3187*t531*t6340 + t6357*t8915 + t6399*t9039 + t5669*t9066 + t5772*t9094 + t5538*t9119 - 0.038924*(t5858*t9066 + t5874*t9094 + t5829*t9119) - 0.80315*(t5927*t9066 + t5939*t9094 + t5912*t9119) + 0.148705*(t5982*t9066 + t6023*t9094 + t5977*t9119);
  p_output1[91]=t6672*t9207 + t6782*t9218 + t6859*t9232 - 0.038924*(t6979*t9207 + t6990*t9218 - 1.000000000049*t5506*t9232) + 0.148705*(t6892*t9207 - 6.5e-11*t5506*t9218 + t6910*t9232) - 0.80315*(-1.000000000016*t5506*t9207 + t6940*t9218 + t6964*t9232);
  p_output1[92]=t2861;
  p_output1[93]=t2863;
  p_output1[94]=t2884;
  p_output1[95]=t2890;
  p_output1[96]=t2892;
  p_output1[97]=t2908;
  p_output1[98]=-5.*t2927*t388*var3[5] + 5.*t154*t388*var3[15] - 20.*t154*t2927*t360*t83*var3[15] - 5.*t353*t388*t83*var3[15] - 30.*t276*t291*t2927*t353*var3[25] - 20.*t230*t276*t360*var3[25] + 20.*t353*t360*t83*var3[25] - 30.*t136*t151*t291*var3[35] + 30.*t230*t276*t291*var3[35] - 20.*t151*t190*t230*t2927*var3[35] + 20.*t136*t151*t190*var3[45] - 5.*t136*t2927*t92*var3[45] - 20.*t190*t49*t92*var3[45] - 5.*t2895*t2919*var3[55] + 5.*t49*t92*var3[55];
  p_output1[99]=-5.*t353*t388*t83*var3[5] - 20.*t230*t276*t360*var3[15] + 5.*t353*t388*t83*var3[15] - 30.*t136*t151*t291*var3[25] + 20.*t230*t276*t360*var3[25] + 30.*t136*t151*t291*var3[35] - 20.*t190*t49*t92*var3[35] - 5.*t2895*t2919*var3[45] + 20.*t190*t49*t92*var3[45] + 5.*t2895*t2919*var3[55];
  p_output1[100]=5.*t154*t33*t388*var3[6] - 5.*t154*t33*t388*var3[16] + 20.*t33*t353*t360*t83*var3[16] + 30.*t230*t276*t291*t33*var3[26] - 20.*t33*t353*t360*t83*var3[26] + 20.*t136*t151*t190*t33*var3[36] - 30.*t230*t276*t291*t33*var3[36] - 20.*t136*t151*t190*t33*var3[46] + 5.*t33*t49*t92*var3[46] - 5.*t33*t49*t92*var3[56];
  p_output1[101]=5.*t154*t28*t388*t9*var3[6] - 5.*t154*t28*t388*t9*var3[16] + 20.*t28*t353*t360*t83*t9*var3[16] + 30.*t230*t276*t28*t291*t9*var3[26] - 20.*t28*t353*t360*t83*t9*var3[26] + 20.*t136*t151*t190*t28*t9*var3[36] - 30.*t230*t276*t28*t291*t9*var3[36] - 20.*t136*t151*t190*t28*t9*var3[46] + 5.*t28*t49*t9*t92*var3[46] - 5.*t28*t49*t9*t92*var3[56];
  p_output1[102]=1.;
  p_output1[103]=0.00183*t3219 - 0.002264*t3228 + 0.024028*t3187*t531;
  p_output1[104]=0.00183*t3213*t531*t598 - 0.024028*t3213*t720 + 0.002264*t3213*t531*t752;
  p_output1[105]=-0.002264*t3666 + 0.00183*t3688;
  p_output1[106]=t2861;
  p_output1[107]=t2863;
  p_output1[108]=t2884;
  p_output1[109]=t2890;
  p_output1[110]=t2892;
  p_output1[111]=t2908;
  p_output1[112]=-5.*t2927*t388*var3[6] + 5.*t154*t388*var3[16] - 20.*t154*t2927*t360*t83*var3[16] - 5.*t353*t388*t83*var3[16] - 30.*t276*t291*t2927*t353*var3[26] - 20.*t230*t276*t360*var3[26] + 20.*t353*t360*t83*var3[26] - 30.*t136*t151*t291*var3[36] + 30.*t230*t276*t291*var3[36] - 20.*t151*t190*t230*t2927*var3[36] + 20.*t136*t151*t190*var3[46] - 5.*t136*t2927*t92*var3[46] - 20.*t190*t49*t92*var3[46] - 5.*t2895*t2919*var3[56] + 5.*t49*t92*var3[56];
  p_output1[113]=-5.*t353*t388*t83*var3[6] - 20.*t230*t276*t360*var3[16] + 5.*t353*t388*t83*var3[16] - 30.*t136*t151*t291*var3[26] + 20.*t230*t276*t360*var3[26] + 30.*t136*t151*t291*var3[36] - 20.*t190*t49*t92*var3[36] - 5.*t2895*t2919*var3[46] + 20.*t190*t49*t92*var3[46] + 5.*t2895*t2919*var3[56];
  p_output1[114]=5.*t154*t33*t388*var3[7] - 5.*t154*t33*t388*var3[17] + 20.*t33*t353*t360*t83*var3[17] + 30.*t230*t276*t291*t33*var3[27] - 20.*t33*t353*t360*t83*var3[27] + 20.*t136*t151*t190*t33*var3[37] - 30.*t230*t276*t291*t33*var3[37] - 20.*t136*t151*t190*t33*var3[47] + 5.*t33*t49*t92*var3[47] - 5.*t33*t49*t92*var3[57];
  p_output1[115]=5.*t154*t28*t388*t9*var3[7] - 5.*t154*t28*t388*t9*var3[17] + 20.*t28*t353*t360*t83*t9*var3[17] + 30.*t230*t276*t28*t291*t9*var3[27] - 20.*t28*t353*t360*t83*t9*var3[27] + 20.*t136*t151*t190*t28*t9*var3[37] - 30.*t230*t276*t28*t291*t9*var3[37] - 20.*t136*t151*t190*t28*t9*var3[47] + 5.*t28*t49*t9*t92*var3[47] - 5.*t28*t49*t9*t92*var3[57];
  p_output1[116]=1.;
  p_output1[117]=-0.002264*t3688 + 0.00183*t3846 + 0.024028*t3213*t531;
  p_output1[118]=-0.00183*t3187*t531*t598 + 0.024028*t3187*t720 - 0.002264*t3187*t531*t752;
  p_output1[119]=-0.002264*t3219 + 0.00183*t4563;
  p_output1[120]=t2861;
  p_output1[121]=t2863;
  p_output1[122]=t2884;
  p_output1[123]=t2890;
  p_output1[124]=t2892;
  p_output1[125]=t2908;
  p_output1[126]=-5.*t2927*t388*var3[7] + 5.*t154*t388*var3[17] - 20.*t154*t2927*t360*t83*var3[17] - 5.*t353*t388*t83*var3[17] - 30.*t276*t291*t2927*t353*var3[27] - 20.*t230*t276*t360*var3[27] + 20.*t353*t360*t83*var3[27] - 30.*t136*t151*t291*var3[37] + 30.*t230*t276*t291*var3[37] - 20.*t151*t190*t230*t2927*var3[37] + 20.*t136*t151*t190*var3[47] - 5.*t136*t2927*t92*var3[47] - 20.*t190*t49*t92*var3[47] - 5.*t2895*t2919*var3[57] + 5.*t49*t92*var3[57];
  p_output1[127]=-5.*t353*t388*t83*var3[7] - 20.*t230*t276*t360*var3[17] + 5.*t353*t388*t83*var3[17] - 30.*t136*t151*t291*var3[27] + 20.*t230*t276*t360*var3[27] + 30.*t136*t151*t291*var3[37] - 20.*t190*t49*t92*var3[37] - 5.*t2895*t2919*var3[47] + 20.*t190*t49*t92*var3[47] + 5.*t2895*t2919*var3[57];
  p_output1[128]=5.*t154*t33*t388*var3[8] - 5.*t154*t33*t388*var3[18] + 20.*t33*t353*t360*t83*var3[18] + 30.*t230*t276*t291*t33*var3[28] - 20.*t33*t353*t360*t83*var3[28] + 20.*t136*t151*t190*t33*var3[38] - 30.*t230*t276*t291*t33*var3[38] - 20.*t136*t151*t190*t33*var3[48] + 5.*t33*t49*t92*var3[48] - 5.*t33*t49*t92*var3[58];
  p_output1[129]=5.*t154*t28*t388*t9*var3[8] - 5.*t154*t28*t388*t9*var3[18] + 20.*t28*t353*t360*t83*t9*var3[18] + 30.*t230*t276*t28*t291*t9*var3[28] - 20.*t28*t353*t360*t83*t9*var3[28] + 20.*t136*t151*t190*t28*t9*var3[38] - 30.*t230*t276*t28*t291*t9*var3[38] - 20.*t136*t151*t190*t28*t9*var3[48] + 5.*t28*t49*t9*t92*var3[48] - 5.*t28*t49*t9*t92*var3[58];
  p_output1[130]=t10053*t3219*t531*t598;
  p_output1[131]=t10029*t10032*t10053*t3213 - 1.*t10053*t3666*t598*t720;
  p_output1[132]=t10053*t3688*t531*t598 - 1.*t10053*t3666*t531*t752;
  p_output1[133]=t2861;
  p_output1[134]=t2863;
  p_output1[135]=t2884;
  p_output1[136]=t2890;
  p_output1[137]=t2892;
  p_output1[138]=t2908;
  p_output1[139]=-5.*t2927*t388*var3[8] + 5.*t154*t388*var3[18] - 20.*t154*t2927*t360*t83*var3[18] - 5.*t353*t388*t83*var3[18] - 30.*t276*t291*t2927*t353*var3[28] - 20.*t230*t276*t360*var3[28] + 20.*t353*t360*t83*var3[28] - 30.*t136*t151*t291*var3[38] + 30.*t230*t276*t291*var3[38] - 20.*t151*t190*t230*t2927*var3[38] + 20.*t136*t151*t190*var3[48] - 5.*t136*t2927*t92*var3[48] - 20.*t190*t49*t92*var3[48] - 5.*t2895*t2919*var3[58] + 5.*t49*t92*var3[58];
  p_output1[140]=-5.*t353*t388*t83*var3[8] - 20.*t230*t276*t360*var3[18] + 5.*t353*t388*t83*var3[18] - 30.*t136*t151*t291*var3[28] + 20.*t230*t276*t360*var3[28] + 30.*t136*t151*t291*var3[38] - 20.*t190*t49*t92*var3[38] - 5.*t2895*t2919*var3[48] + 20.*t190*t49*t92*var3[48] + 5.*t2895*t2919*var3[58];
  p_output1[141]=5.*t154*t33*t388*var3[9] - 5.*t154*t33*t388*var3[19] + 20.*t33*t353*t360*t83*var3[19] + 30.*t230*t276*t291*t33*var3[29] - 20.*t33*t353*t360*t83*var3[29] + 20.*t136*t151*t190*t33*var3[39] - 30.*t230*t276*t291*t33*var3[39] - 20.*t136*t151*t190*t33*var3[49] + 5.*t33*t49*t92*var3[49] - 5.*t33*t49*t92*var3[59];
  p_output1[142]=5.*t154*t28*t388*t9*var3[9] - 5.*t154*t28*t388*t9*var3[19] + 20.*t28*t353*t360*t83*t9*var3[19] + 30.*t230*t276*t28*t291*t9*var3[29] - 20.*t28*t353*t360*t83*t9*var3[29] + 20.*t136*t151*t190*t28*t9*var3[39] - 30.*t230*t276*t28*t291*t9*var3[39] - 20.*t136*t151*t190*t28*t9*var3[49] + 5.*t28*t49*t9*t92*var3[49] - 5.*t28*t49*t9*t92*var3[59];
  p_output1[143]=-0.15121*t3866 + 0.15121*t3973 + t4296 + t4299 - 1.*t3846*t5333 - 1.*t3688*t5347 - 0.15121*t8025 + 0.15121*t8188;
  p_output1[144]=t4402 + t4405 - 0.15121*t4416 + 0.15121*t4427 + t3187*t531*t5333*t598 - 1.*t3187*t531*t5347*t752 - 0.15121*t8681 + 0.15121*t8689;
  p_output1[145]=t4551 + t4566 + 0.15121*t4570 - 0.15121*t4573 - 1.*t4563*t5333 - 1.*t3219*t5347 + 0.15121*t8798 - 0.15121*t8817;
  p_output1[146]=t4701 + t4704 + 0.15121*t4711 - 0.15121*t4727;
  p_output1[147]=-1.*t4700*t6296 - 1.*t4563*t6311 + 0.15121*t8915 - 0.15121*t8923;
  p_output1[148]=t2861;
  p_output1[149]=t2863;
  p_output1[150]=t2884;
  p_output1[151]=t2890;
  p_output1[152]=t2892;
  p_output1[153]=t2908;
  p_output1[154]=-5.*t2927*t388*var3[9] + 5.*t154*t388*var3[19] - 20.*t154*t2927*t360*t83*var3[19] - 5.*t353*t388*t83*var3[19] - 30.*t276*t291*t2927*t353*var3[29] - 20.*t230*t276*t360*var3[29] + 20.*t353*t360*t83*var3[29] - 30.*t136*t151*t291*var3[39] + 30.*t230*t276*t291*var3[39] - 20.*t151*t190*t230*t2927*var3[39] + 20.*t136*t151*t190*var3[49] - 5.*t136*t2927*t92*var3[49] - 20.*t190*t49*t92*var3[49] - 5.*t2895*t2919*var3[59] + 5.*t49*t92*var3[59];
  p_output1[155]=-5.*t353*t388*t83*var3[9] - 20.*t230*t276*t360*var3[19] + 5.*t353*t388*t83*var3[19] - 30.*t136*t151*t291*var3[29] + 20.*t230*t276*t360*var3[29] + 30.*t136*t151*t291*var3[39] - 20.*t190*t49*t92*var3[39] - 5.*t2895*t2919*var3[49] + 20.*t190*t49*t92*var3[49] + 5.*t2895*t2919*var3[59];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4,*var5,*var6;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 6)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Six input(s) required (var1,var2,var3,var4,var5,var6).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 60 && ncols == 1) && 
      !(mrows == 1 && ncols == 60))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }
  mrows = mxGetM(prhs[4]);
  ncols = mxGetN(prhs[4]);
  if( !mxIsDouble(prhs[4]) || mxIsComplex(prhs[4]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var5 is wrong.");
    }
  mrows = mxGetM(prhs[5]);
  ncols = mxGetN(prhs[5]);
  if( !mxIsDouble(prhs[5]) || mxIsComplex(prhs[5]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var6 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
  var5 = mxGetPr(prhs[4]);
  var6 = mxGetPr(prhs[5]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 156, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4,var5,var6);


}

#else // MATLAB_MEX_FILE

#include "J_y_position_DiagonalStance2.hh"

namespace TrotStance2
{

void J_y_position_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4, var5, var6);

}

}

#endif // MATLAB_MEX_FILE
