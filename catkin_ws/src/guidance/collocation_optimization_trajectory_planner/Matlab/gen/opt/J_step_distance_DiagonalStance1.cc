/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:10:14 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t120;
  double t1019;
  double t1030;
  double t1045;
  double t1086;
  double t1116;
  double t1265;
  double t127;
  double t193;
  double t568;
  double t757;
  double t921;
  double t1427;
  double t78;
  double t1954;
  double t2002;
  double t2040;
  double t2241;
  double t2243;
  double t2323;
  double t2329;
  double t2402;
  double t2412;
  double t2419;
  double t2592;
  double t2486;
  double t2528;
  double t2533;
  double t2555;
  double t2566;
  double t2573;
  double t2612;
  double t2613;
  double t2624;
  double t2664;
  double t2809;
  double t2833;
  double t2866;
  double t2920;
  double t2927;
  double t2957;
  double t3203;
  double t3208;
  double t3211;
  double t3217;
  double t3219;
  double t3318;
  double t3327;
  double t3346;
  double t3374;
  double t3461;
  double t3282;
  double t3283;
  double t3286;
  double t3409;
  double t3420;
  double t3421;
  double t3552;
  double t3576;
  double t3586;
  double t3588;
  double t3462;
  double t3463;
  double t3497;
  double t3501;
  double t3504;
  double t3521;
  double t3725;
  double t3686;
  double t3689;
  double t3697;
  double t3701;
  double t3634;
  double t3636;
  double t3648;
  double t3651;
  double t3658;
  double t3665;
  double t1318;
  double t1352;
  double t1075;
  double t1123;
  double t2114;
  double t2149;
  double t2166;
  double t1601;
  double t1689;
  double t1763;
  double t1805;
  double t1897;
  double t2727;
  double t2760;
  double t2764;
  double t2766;
  double t2786;
  double t3836;
  double t3840;
  double t3842;
  double t3852;
  double t3854;
  double t3855;
  double t2588;
  double t2590;
  double t2593;
  double t2602;
  double t2610;
  double t2417;
  double t2428;
  double t2456;
  double t3858;
  double t3861;
  double t3868;
  double t3873;
  double t3877;
  double t3878;
  double t3123;
  double t3127;
  double t3886;
  double t3891;
  double t3896;
  double t3087;
  double t3091;
  double t3229;
  double t3248;
  double t3262;
  double t3277;
  double t3309;
  double t3354;
  double t3389;
  double t3396;
  double t3424;
  double t3425;
  double t3428;
  double t3960;
  double t3962;
  double t3964;
  double t3969;
  double t3970;
  double t3971;
  double t3523;
  double t3587;
  double t3604;
  double t3615;
  double t3670;
  double t3671;
  double t3679;
  double t3708;
  double t3713;
  double t3714;
  double t3718;
  double t3800;
  double t3801;
  double t3985;
  double t3988;
  double t3989;
  double t3975;
  double t3976;
  double t3977;
  double t3997;
  double t4013;
  double t4024;
  double t3730;
  double t3737;
  double t3967;
  double t3973;
  double t3980;
  double t3990;
  double t4025;
  double t4030;
  double t4035;
  double t4037;
  double t4038;
  double t4041;
  double t4042;
  double t4044;
  double t4045;
  double t4052;
  double t4053;
  double t4062;
  double t4078;
  double t4083;
  double t4084;
  double t4085;
  double t4144;
  double t4148;
  double t4153;
  double t4206;
  double t4209;
  double t4217;
  double t4221;
  double t4224;
  double t4230;
  double t4231;
  double t4233;
  double t4191;
  double t4193;
  double t4194;
  double t4197;
  double t4297;
  double t4302;
  double t4309;
  double t4310;
  double t4278;
  double t4280;
  double t4281;
  double t4282;
  double t4328;
  double t4330;
  double t4379;
  double t3846;
  double t3857;
  double t3870;
  double t3880;
  double t3898;
  double t3899;
  double t3901;
  double t3906;
  double t3908;
  double t3909;
  double t3916;
  double t3920;
  double t3922;
  double t3927;
  double t3929;
  double t3933;
  double t3934;
  double t3944;
  double t3946;
  double t3949;
  double t4454;
  double t4459;
  double t4460;
  double t4463;
  double t4466;
  double t4467;
  double t4471;
  double t4476;
  double t4477;
  double t4478;
  double t4484;
  double t4485;
  double t4486;
  double t4488;
  double t4556;
  double t4559;
  double t4561;
  double t4563;
  double t4571;
  double t4572;
  double t4578;
  double t4593;
  double t4594;
  double t4596;
  double t4602;
  double t97;
  double t276;
  double t694;
  double t766;
  double t780;
  double t4654;
  double t4668;
  double t4659;
  double t4671;
  double t4681;
  double t4687;
  double t4689;
  double t4693;
  double t4703;
  double t4704;
  double t4708;
  double t4710;
  double t4712;
  double t4719;
  double t4731;
  double t4732;
  double t4735;
  double t4737;
  double t4743;
  double t4744;
  double t4745;
  double t4746;
  double t4753;
  double t4755;
  double t4758;
  double t4760;
  double t3442;
  double t3447;
  double t3448;
  double t3455;
  double t4838;
  double t4839;
  double t4845;
  double t4852;
  double t4854;
  double t4856;
  double t4863;
  double t4864;
  double t4869;
  double t4873;
  double t4889;
  double t4890;
  double t4896;
  double t4897;
  double t4878;
  double t4880;
  double t4881;
  double t4884;
  double t4982;
  double t4983;
  double t4985;
  double t4997;
  double t5002;
  double t5006;
  double t5012;
  double t5017;
  double t5020;
  double t5022;
  double t5033;
  double t5034;
  double t5038;
  double t5042;
  double t5059;
  double t5060;
  double t5063;
  double t5065;
  double t5119;
  double t5121;
  double t5125;
  double t5133;
  double t5134;
  double t5136;
  double t5141;
  double t5144;
  double t5146;
  double t5150;
  double t5165;
  double t5169;
  double t5170;
  double t5176;
  double t5156;
  double t5157;
  double t5158;
  double t5159;
  double t5231;
  double t5238;
  double t5239;
  double t5241;
  double t5243;
  double t5245;
  double t5248;
  double t5249;
  double t5250;
  double t5254;
  double t5261;
  double t5262;
  double t5269;
  double t5271;
  double t5276;
  double t5279;
  double t5280;
  double t5284;
  double t5287;
  double t5289;
  double t5292;
  double t5359;
  double t5367;
  double t5368;
  double t5371;
  double t5374;
  double t5381;
  double t5395;
  double t5398;
  double t5399;
  double t5385;
  double t5387;
  double t5388;
  double t5404;
  double t5405;
  double t5406;
  double t4088;
  double t4095;
  double t4103;
  double t4106;
  double t5461;
  double t5462;
  double t5466;
  double t5471;
  double t5473;
  double t5480;
  double t5482;
  double t5496;
  double t5497;
  double t5499;
  double t5484;
  double t5486;
  double t5487;
  double t5503;
  double t5506;
  double t5508;
  double t4113;
  double t4114;
  double t4115;
  double t4120;
  double t4124;
  double t4136;
  double t4157;
  double t4158;
  double t4159;
  double t5561;
  double t5562;
  double t5563;
  double t5574;
  double t5581;
  double t5584;
  double t5590;
  double t5592;
  double t5593;
  double t5595;
  double t5596;
  double t5565;
  double t5567;
  double t5568;
  double t5569;
  double t4288;
  double t4290;
  double t4292;
  double t4311;
  double t4314;
  double t4317;
  double t4334;
  double t4336;
  double t4339;
  double t5701;
  double t5703;
  double t5710;
  double t5719;
  double t5659;
  double t5677;
  double t5686;
  double t5696;
  double t5724;
  double t5728;
  double t4380;
  double t4383;
  double t4385;
  double t5795;
  double t5796;
  double t5801;
  double t5802;
  double t5805;
  double t5814;
  double t5815;
  double t5820;
  double t5822;
  double t5824;
  double t5830;
  double t5831;
  double t5832;
  double t4400;
  double t4407;
  double t4412;
  double t4413;
  double t4415;
  double t4429;
  double t4446;
  double t4453;
  double t5886;
  double t5887;
  double t5892;
  double t5897;
  double t5898;
  double t5900;
  double t5904;
  double t5906;
  double t5907;
  double t5911;
  double t5914;
  double t5917;
  double t5918;
  double t5923;
  double t4549;
  double t4550;
  double t4553;
  double t4568;
  double t4570;
  double t4582;
  double t4583;
  double t4588;
  double t5988;
  double t5990;
  double t5999;
  double t6002;
  double t6015;
  double t6019;
  double t6020;
  double t6026;
  double t6036;
  double t6037;
  double t6041;
  t120 = Cos(var1[10]);
  t1019 = Cos(var1[9]);
  t1030 = -1.*t1019;
  t1045 = 1. + t1030;
  t1086 = Sin(var1[9]);
  t1116 = -0.15121*t1086;
  t1265 = Sin(var1[4]);
  t127 = -1.*t120;
  t193 = 1. + t127;
  t568 = -1. + t120;
  t757 = Sin(var1[10]);
  t921 = Cos(var1[5]);
  t1427 = Sin(var1[5]);
  t78 = Cos(var1[4]);
  t1954 = t921*t1086*t1265;
  t2002 = t1019*t1265*t1427;
  t2040 = t1954 + t2002;
  t2241 = -1.*t1019*t921*t1265;
  t2243 = t1086*t1265*t1427;
  t2323 = t2241 + t2243;
  t2329 = Cos(var1[11]);
  t2402 = -1.*t2329;
  t2412 = 1. + t2402;
  t2419 = Sin(var1[11]);
  t2592 = -1. + t2329;
  t2486 = t78*t757;
  t2528 = -4.e-6*t757*t2040;
  t2533 = -1.000000000016*t193;
  t2555 = 1. + t2533;
  t2566 = t2555*t2323;
  t2573 = t2486 + t2528 + t2566;
  t2612 = t120*t78;
  t2613 = 4.e-6*t193*t2040;
  t2624 = -1.*t757*t2323;
  t2664 = t2612 + t2613 + t2624;
  t2809 = 4.e-6*t193*t78;
  t2833 = 1.6e-11*t568;
  t2866 = 1. + t2833;
  t2920 = t2866*t2040;
  t2927 = 4.e-6*t757*t2323;
  t2957 = t2809 + t2920 + t2927;
  t3203 = Cos(var1[6]);
  t3208 = -1.*t3203;
  t3211 = 1. + t3208;
  t3217 = 0.15121*t3211;
  t3219 = Sin(var1[6]);
  t3318 = Cos(var1[7]);
  t3327 = -1.*t3318;
  t3346 = 1. + t3327;
  t3374 = Sin(var1[7]);
  t3461 = -1. + t3318;
  t3282 = t3203*t1265*t1427;
  t3283 = t921*t1265*t3219;
  t3286 = t3282 + t3283;
  t3409 = -1.*t921*t3203*t1265;
  t3420 = t1265*t1427*t3219;
  t3421 = t3409 + t3420;
  t3552 = Cos(var1[8]);
  t3576 = -1.*t3552;
  t3586 = 1. + t3576;
  t3588 = Sin(var1[8]);
  t3462 = 4.e-6*t78*t3461;
  t3463 = 1.6e-11*t3461;
  t3497 = 1. + t3463;
  t3501 = t3497*t3286;
  t3504 = 4.e-6*t3421*t3374;
  t3521 = t3462 + t3501 + t3504;
  t3725 = -1. + t3552;
  t3686 = t78*t3318;
  t3689 = 4.e-6*t3461*t3286;
  t3697 = t3421*t3374;
  t3701 = t3686 + t3689 + t3697;
  t3634 = -1.000000000016*t3346;
  t3636 = 1. + t3634;
  t3648 = t3636*t3421;
  t3651 = -1.*t78*t3374;
  t3658 = -4.e-6*t3286*t3374;
  t3665 = t3648 + t3651 + t3658;
  t1318 = -0.15121*t1045;
  t1352 = t1318 + t1116;
  t1075 = 0.15121*t1045;
  t1123 = t1075 + t1116;
  t2114 = 0.281210000008499*t193;
  t2149 = -0.03874900000062*t757;
  t2166 = t2114 + t2149;
  t1601 = -1.2484e-7*var1[10];
  t1689 = 2.479936e-18*t193;
  t1763 = -1.54996e-7*t568;
  t1805 = 1.124840000016e-6*t757;
  t1897 = t1601 + t1689 + t1763 + t1805;
  t2727 = -1.26e-8*var1[11];
  t2760 = 2.552896e-18*t2412;
  t2764 = -1.59556e-7*t2592;
  t2766 = 2.012600000032e-6*t2419;
  t2786 = t2727 + t2760 + t2764 + t2766;
  t3836 = -1.*t78*t921*t1086;
  t3840 = -1.*t1019*t78*t1427;
  t3842 = t3836 + t3840;
  t3852 = -1.*t1019*t78*t921;
  t3854 = t78*t1086*t1427;
  t3855 = t3852 + t3854;
  t2588 = -5.04e-14*var1[11];
  t2590 = -0.039889*t2412;
  t2593 = 6.38224e-13*t2592;
  t2602 = -0.503150000008*t2419;
  t2610 = t2588 + t2590 + t2593 + t2602;
  t2417 = 0.50315000001605*t2412;
  t2428 = -0.0398890000006382*t2419;
  t2456 = t2417 + t2428;
  t3858 = 4.e-6*t757*t3842;
  t3861 = t2866*t3855;
  t3868 = t3858 + t3861;
  t3873 = -1.*t757*t3842;
  t3877 = 4.e-6*t193*t3855;
  t3878 = t3873 + t3877;
  t3123 = -1.000000000016*t2412;
  t3127 = 1. + t3123;
  t3886 = t2555*t3842;
  t3891 = -4.e-6*t757*t3855;
  t3896 = t3886 + t3891;
  t3087 = 1.6e-11*t2592;
  t3091 = 1. + t3087;
  t3229 = -0.15121*t3219;
  t3248 = t3217 + t3229;
  t3262 = 0.15121*t3219;
  t3277 = t3217 + t3262;
  t3309 = -1.2484e-7*var1[7];
  t3354 = -1.5499600000248e-7*t3346;
  t3389 = 1.124840000016e-6*t3374;
  t3396 = t3309 + t3354 + t3389;
  t3424 = 0.281210000008499*t3346;
  t3425 = 0.03874900000062*t3374;
  t3428 = t3424 + t3425;
  t3960 = -1.*t78*t921*t3203;
  t3962 = t78*t1427*t3219;
  t3964 = t3960 + t3962;
  t3969 = -1.*t78*t3203*t1427;
  t3970 = -1.*t78*t921*t3219;
  t3971 = t3969 + t3970;
  t3523 = -1.284e-8*var1[8];
  t3587 = -1.5499600000248e-7*t3586;
  t3604 = 2.012840000032e-6*t3588;
  t3615 = t3523 + t3587 + t3604;
  t3670 = 0.503210000016051*t3586;
  t3671 = 0.03874900000062*t3588;
  t3679 = t3670 + t3671;
  t3708 = 5.136e-14*var1[8];
  t3713 = -0.03874900000062*t3586;
  t3714 = 0.503210000008*t3588;
  t3718 = t3708 + t3713 + t3714;
  t3800 = -1.000000000016*t3586;
  t3801 = 1. + t3800;
  t3985 = t3636*t3971;
  t3988 = -4.e-6*t3964*t3374;
  t3989 = t3985 + t3988;
  t3975 = t3497*t3964;
  t3976 = 4.e-6*t3971*t3374;
  t3977 = t3975 + t3976;
  t3997 = 4.e-6*t3461*t3964;
  t4013 = t3971*t3374;
  t4024 = t3997 + t4013;
  t3730 = 1.6e-11*t3725;
  t3737 = 1. + t3730;
  t3967 = -1.*t3964*t3396;
  t3973 = -1.*t3971*t3428;
  t3980 = -1.*t3977*t3615;
  t3990 = -1.*t3989*t3679;
  t4025 = -1.*t4024*t3718;
  t4030 = t3801*t3989;
  t4035 = -4.e-6*t3977*t3588;
  t4037 = -1.*t4024*t3588;
  t4038 = t4030 + t4035 + t4037;
  t4041 = -0.80321*t4038;
  t4042 = t3737*t3977;
  t4044 = 4.e-6*t3725*t4024;
  t4045 = 4.e-6*t3989*t3588;
  t4052 = t4042 + t4044 + t4045;
  t4053 = -0.14871*t4052;
  t4062 = 4.e-6*t3725*t3977;
  t4078 = t3552*t4024;
  t4083 = t3989*t3588;
  t4084 = t4062 + t4078 + t4083;
  t4085 = 0.03875*t4084;
  t4144 = t78*t921*t3203;
  t4148 = -1.*t78*t1427*t3219;
  t4153 = t4144 + t4148;
  t4206 = -1.*t3318*t1265;
  t4209 = -4.e-6*t3318*t3971;
  t4217 = -1.000000000016*t4153*t3374;
  t4221 = t4206 + t4209 + t4217;
  t4224 = t3318*t4153;
  t4230 = -1.*t1265*t3374;
  t4231 = -4.e-6*t3971*t3374;
  t4233 = t4224 + t4230 + t4231;
  t4191 = 4.e-6*t3318*t4153;
  t4193 = -4.e-6*t1265*t3374;
  t4194 = -1.6e-11*t3971*t3374;
  t4197 = t4191 + t4193 + t4194;
  t4297 = 4.e-6*t3461*t1265;
  t4302 = t3497*t3971;
  t4309 = 4.e-6*t4153*t3374;
  t4310 = t4297 + t4302 + t4309;
  t4278 = t3318*t1265;
  t4280 = 4.e-6*t3461*t3971;
  t4281 = t4153*t3374;
  t4282 = t4278 + t4280 + t4281;
  t4328 = t3636*t4153;
  t4330 = t4328 + t4230 + t4231;
  t4379 = -0.15121*t1019;
  t3846 = t2166*t3842;
  t3857 = t1897*t3855;
  t3870 = t2786*t3868;
  t3880 = t2610*t3878;
  t3898 = t2456*t3896;
  t3899 = -4.e-6*t2419*t3868;
  t3901 = t2419*t3878;
  t3906 = t3127*t3896;
  t3908 = t3899 + t3901 + t3906;
  t3909 = 0.803147*t3908;
  t3916 = 4.e-6*t2412*t3868;
  t3920 = t2329*t3878;
  t3922 = -1.*t2419*t3896;
  t3927 = t3916 + t3920 + t3922;
  t3929 = -0.041195*t3927;
  t3933 = t3091*t3868;
  t3934 = 4.e-6*t2412*t3878;
  t3944 = 4.e-6*t2419*t3896;
  t3946 = t3933 + t3934 + t3944;
  t3949 = -0.14871*t3946;
  t4454 = t1019*t78*t921;
  t4459 = -1.*t78*t1086*t1427;
  t4460 = t4454 + t4459;
  t4463 = -1.*t757*t1265;
  t4466 = -1.*t120*t4460;
  t4467 = t4463 + t3858 + t4466;
  t4471 = 4.e-6*t757*t1265;
  t4476 = -1.6e-11*t757*t3842;
  t4477 = 4.e-6*t120*t4460;
  t4478 = t4471 + t4476 + t4477;
  t4484 = t120*t1265;
  t4485 = -4.e-6*t120*t3842;
  t4486 = -1.000000000016*t757*t4460;
  t4488 = t4484 + t4485 + t4486;
  t4556 = t757*t1265;
  t4559 = -4.e-6*t757*t3842;
  t4561 = t2555*t4460;
  t4563 = t4556 + t4559 + t4561;
  t4571 = 4.e-6*t193*t3842;
  t4572 = -1.*t757*t4460;
  t4578 = t4484 + t4571 + t4572;
  t4593 = 4.e-6*t193*t1265;
  t4594 = t2866*t3842;
  t4596 = 4.e-6*t757*t4460;
  t4602 = t4593 + t4594 + t4596;
  t97 = -4.9936e-13*var1[10];
  t276 = -0.038749*t193;
  t694 = 6.19984e-13*t568;
  t766 = -0.281210000004*t757;
  t780 = t97 + t276 + t694 + t766;
  t4654 = Cos(var1[3]);
  t4668 = Sin(var1[3]);
  t4659 = t4654*t921*t1265;
  t4671 = -1.*t4668*t1427;
  t4681 = t4659 + t4671;
  t4687 = -1.*t921*t4668;
  t4689 = -1.*t4654*t1265*t1427;
  t4693 = t4687 + t4689;
  t4703 = -1.*t1086*t4681;
  t4704 = t1019*t4693;
  t4708 = t4703 + t4704;
  t4710 = t1019*t4681;
  t4712 = t1086*t4693;
  t4719 = t4710 + t4712;
  t4731 = -1.*t4654*t78*t757;
  t4732 = -4.e-6*t757*t4708;
  t4735 = t2555*t4719;
  t4737 = t4731 + t4732 + t4735;
  t4743 = -1.*t120*t4654*t78;
  t4744 = 4.e-6*t193*t4708;
  t4745 = -1.*t757*t4719;
  t4746 = t4743 + t4744 + t4745;
  t4753 = -4.e-6*t193*t4654*t78;
  t4755 = t2866*t4708;
  t4758 = 4.e-6*t757*t4719;
  t4760 = t4753 + t4755 + t4758;
  t3442 = 4.9936e-13*var1[7];
  t3447 = -0.03874900000062*t3346;
  t3448 = 0.281210000004*t3374;
  t3455 = t3442 + t3447 + t3448;
  t4838 = t3203*t4693;
  t4839 = -1.*t4681*t3219;
  t4845 = t4838 + t4839;
  t4852 = t3203*t4681;
  t4854 = t4693*t3219;
  t4856 = t4852 + t4854;
  t4863 = -4.e-6*t4654*t78*t3461;
  t4864 = t3497*t4845;
  t4869 = 4.e-6*t4856*t3374;
  t4873 = t4863 + t4864 + t4869;
  t4889 = -1.*t4654*t78*t3318;
  t4890 = 4.e-6*t3461*t4845;
  t4896 = t4856*t3374;
  t4897 = t4889 + t4890 + t4896;
  t4878 = t3636*t4856;
  t4880 = t4654*t78*t3374;
  t4881 = -4.e-6*t4845*t3374;
  t4884 = t4878 + t4880 + t4881;
  t4982 = -1.*t78*t921*t1086*t4668;
  t4983 = -1.*t1019*t78*t4668*t1427;
  t4985 = t4982 + t4983;
  t4997 = t1019*t78*t921*t4668;
  t5002 = -1.*t78*t1086*t4668*t1427;
  t5006 = t4997 + t5002;
  t5012 = t757*t4668*t1265;
  t5017 = -4.e-6*t757*t4985;
  t5020 = t2555*t5006;
  t5022 = t5012 + t5017 + t5020;
  t5033 = t120*t4668*t1265;
  t5034 = 4.e-6*t193*t4985;
  t5038 = -1.*t757*t5006;
  t5042 = t5033 + t5034 + t5038;
  t5059 = 4.e-6*t193*t4668*t1265;
  t5060 = t2866*t4985;
  t5063 = 4.e-6*t757*t5006;
  t5065 = t5059 + t5060 + t5063;
  t5119 = -1.*t78*t3203*t4668*t1427;
  t5121 = -1.*t78*t921*t4668*t3219;
  t5125 = t5119 + t5121;
  t5133 = t78*t921*t3203*t4668;
  t5134 = -1.*t78*t4668*t1427*t3219;
  t5136 = t5133 + t5134;
  t5141 = 4.e-6*t3461*t4668*t1265;
  t5144 = t3497*t5125;
  t5146 = 4.e-6*t5136*t3374;
  t5150 = t5141 + t5144 + t5146;
  t5165 = t3318*t4668*t1265;
  t5169 = 4.e-6*t3461*t5125;
  t5170 = t5136*t3374;
  t5176 = t5165 + t5169 + t5170;
  t5156 = t3636*t5136;
  t5157 = -1.*t4668*t1265*t3374;
  t5158 = -4.e-6*t5125*t3374;
  t5159 = t5156 + t5157 + t5158;
  t5231 = -1.*t921*t4668*t1265;
  t5238 = -1.*t4654*t1427;
  t5239 = t5231 + t5238;
  t5241 = t4654*t921;
  t5243 = -1.*t4668*t1265*t1427;
  t5245 = t5241 + t5243;
  t5248 = t1086*t5239;
  t5249 = t1019*t5245;
  t5250 = t5248 + t5249;
  t5254 = t1019*t5239;
  t5261 = -1.*t1086*t5245;
  t5262 = t5254 + t5261;
  t5269 = 4.e-6*t757*t5250;
  t5271 = t2866*t5262;
  t5276 = t5269 + t5271;
  t5279 = -1.*t757*t5250;
  t5280 = 4.e-6*t193*t5262;
  t5284 = t5279 + t5280;
  t5287 = t2555*t5250;
  t5289 = -4.e-6*t757*t5262;
  t5292 = t5287 + t5289;
  t5359 = t3203*t5239;
  t5367 = -1.*t5245*t3219;
  t5368 = t5359 + t5367;
  t5371 = t3203*t5245;
  t5374 = t5239*t3219;
  t5381 = t5371 + t5374;
  t5395 = t3636*t5381;
  t5398 = -4.e-6*t5368*t3374;
  t5399 = t5395 + t5398;
  t5385 = t3497*t5368;
  t5387 = 4.e-6*t5381*t3374;
  t5388 = t5385 + t5387;
  t5404 = 4.e-6*t3461*t5368;
  t5405 = t5381*t3374;
  t5406 = t5404 + t5405;
  t4088 = -0.15121*t3203;
  t4095 = t4088 + t3262;
  t4103 = 0.15121*t3203;
  t4106 = t4103 + t3262;
  t5461 = t921*t4668*t1265;
  t5462 = t4654*t1427;
  t5466 = t5461 + t5462;
  t5471 = -1.*t3203*t5466;
  t5473 = t5471 + t5367;
  t5480 = -1.*t5466*t3219;
  t5482 = t5371 + t5480;
  t5496 = t3636*t5482;
  t5497 = -4.e-6*t5473*t3374;
  t5499 = t5496 + t5497;
  t5484 = t3497*t5473;
  t5486 = 4.e-6*t5482*t3374;
  t5487 = t5484 + t5486;
  t5503 = 4.e-6*t3461*t5473;
  t5506 = t5482*t3374;
  t5508 = t5503 + t5506;
  t4113 = 0.281210000004*t3318;
  t4114 = -0.03874900000062*t3374;
  t4115 = 4.9936e-13 + t4113 + t4114;
  t4120 = 1.124840000016e-6*t3318;
  t4124 = -1.5499600000248e-7*t3374;
  t4136 = -1.2484e-7 + t4120 + t4124;
  t4157 = 0.03874900000062*t3318;
  t4158 = 0.281210000008499*t3374;
  t4159 = t4157 + t4158;
  t5561 = t3203*t5466;
  t5562 = t5245*t3219;
  t5563 = t5561 + t5562;
  t5574 = t78*t3318*t4668;
  t5581 = -4.e-6*t3318*t5482;
  t5584 = -1.000000000016*t5563*t3374;
  t5590 = t5574 + t5581 + t5584;
  t5592 = t3318*t5563;
  t5593 = t78*t4668*t3374;
  t5595 = -4.e-6*t5482*t3374;
  t5596 = t5592 + t5593 + t5595;
  t5565 = 4.e-6*t3318*t5563;
  t5567 = 4.e-6*t78*t4668*t3374;
  t5568 = -1.6e-11*t5482*t3374;
  t5569 = t5565 + t5567 + t5568;
  t4288 = 0.503210000008*t3552;
  t4290 = -0.03874900000062*t3588;
  t4292 = 5.136e-14 + t4288 + t4290;
  t4311 = 2.012840000032e-6*t3552;
  t4314 = -1.5499600000248e-7*t3588;
  t4317 = -1.284e-8 + t4311 + t4314;
  t4334 = 0.03874900000062*t3552;
  t4336 = 0.503210000016051*t3588;
  t4339 = t4334 + t4336;
  t5701 = -4.e-6*t78*t3461*t4668;
  t5703 = t3497*t5482;
  t5710 = 4.e-6*t5563*t3374;
  t5719 = t5701 + t5703 + t5710;
  t5659 = -1.*t78*t3318*t4668;
  t5677 = 4.e-6*t3461*t5482;
  t5686 = t5563*t3374;
  t5696 = t5659 + t5677 + t5686;
  t5724 = t3636*t5563;
  t5728 = t5724 + t5593 + t5595;
  t4380 = 0.15121*t1086;
  t4383 = t4379 + t4380;
  t4385 = t4379 + t1116;
  t5795 = -1.*t1086*t5466;
  t5796 = t5795 + t5249;
  t5801 = -1.*t1019*t5466;
  t5802 = t5801 + t5261;
  t5805 = 4.e-6*t757*t5796;
  t5814 = t2866*t5802;
  t5815 = t5805 + t5814;
  t5820 = -1.*t757*t5796;
  t5822 = 4.e-6*t193*t5802;
  t5824 = t5820 + t5822;
  t5830 = t2555*t5796;
  t5831 = -4.e-6*t757*t5802;
  t5832 = t5830 + t5831;
  t4400 = -0.281210000004*t120;
  t4407 = -4.9936e-13 + t4400 + t2149;
  t4412 = 1.124840000016e-6*t120;
  t4413 = 1.5499600000248e-7*t757;
  t4415 = -1.2484e-7 + t4412 + t4413;
  t4429 = -0.03874900000062*t120;
  t4446 = 0.281210000008499*t757;
  t4453 = t4429 + t4446;
  t5886 = t1019*t5466;
  t5887 = t1086*t5245;
  t5892 = t5886 + t5887;
  t5897 = t78*t757*t4668;
  t5898 = -1.*t120*t5892;
  t5900 = t5897 + t5805 + t5898;
  t5904 = -4.e-6*t78*t757*t4668;
  t5906 = -1.6e-11*t757*t5796;
  t5907 = 4.e-6*t120*t5892;
  t5911 = t5904 + t5906 + t5907;
  t5914 = -1.*t120*t78*t4668;
  t5917 = -4.e-6*t120*t5796;
  t5918 = -1.000000000016*t757*t5892;
  t5923 = t5914 + t5917 + t5918;
  t4549 = -0.0398890000006382*t2329;
  t4550 = 0.50315000001605*t2419;
  t4553 = t4549 + t4550;
  t4568 = -0.503150000008*t2329;
  t4570 = -5.04e-14 + t4568 + t2428;
  t4582 = 2.012600000032e-6*t2329;
  t4583 = 1.59556000002553e-7*t2419;
  t4588 = -1.26e-8 + t4582 + t4583;
  t5988 = -1.*t78*t757*t4668;
  t5990 = -4.e-6*t757*t5796;
  t5999 = t2555*t5892;
  t6002 = t5988 + t5990 + t5999;
  t6015 = 4.e-6*t193*t5796;
  t6019 = -1.*t757*t5892;
  t6020 = t5914 + t6015 + t6019;
  t6026 = -4.e-6*t193*t78*t4668;
  t6036 = t2866*t5796;
  t6037 = 4.e-6*t757*t5892;
  t6041 = t6026 + t6036 + t6037;
  p_output1[0]=t1265*t1352*t1427 + t1897*t2040 + t2166*t2323 + t2456*t2573 + t2610*t2664 + t2786*t2957 - 0.041195*(-1.*t2419*t2573 + t2329*t2664 + 4.e-6*t2412*t2957) - 0.14871*(4.e-6*t2419*t2573 + 4.e-6*t2412*t2664 + t2957*t3091) + 0.803147*(t2419*t2664 - 4.e-6*t2419*t2957 + t2573*t3127) - 1.*t1265*t1427*t3248 - 1.*t3286*t3396 - 1.*t3421*t3428 - 1.*t3521*t3615 - 1.*t3665*t3679 - 1.*t3701*t3718 + 0.03875*(t3588*t3665 + t3552*t3701 + 4.e-6*t3521*t3725) - 0.14871*(4.e-6*t3588*t3665 + 4.e-6*t3701*t3725 + t3521*t3737) - 0.80321*(-4.e-6*t3521*t3588 - 1.*t3588*t3701 + t3665*t3801) - 1.*t3455*t78 + t78*t780 - 1.*t1123*t1265*t921 + t1265*t3277*t921;
  p_output1[1]=t3846 + t3857 + t3870 + t3880 + t3898 + t3909 + t3929 + t3949 + t3967 + t3973 + t3980 + t3990 + t4025 + t4041 + t4053 + t4085 - 1.*t1123*t1427*t78 + t1427*t3277*t78 - 1.*t1352*t78*t921 + t3248*t78*t921;
  p_output1[2]=t3967 + t3973 + t3980 + t3990 + t4025 + t4041 + t4053 + t4085 + t1427*t4095*t78 - 1.*t4106*t78*t921;
  p_output1[3]=-1.*t1265*t4115 - 1.*t3971*t4136 - 1.*t4153*t4159 - 1.*t3615*t4197 - 1.*t3679*t4221 - 1.*t3718*t4233 + 0.03875*(4.e-6*t3725*t4197 + t3588*t4221 + t3552*t4233) - 0.80321*(-4.e-6*t3588*t4197 + t3801*t4221 - 1.*t3588*t4233) - 0.14871*(t3737*t4197 + 4.e-6*t3588*t4221 + 4.e-6*t3725*t4233);
  p_output1[4]=-1.*t4282*t4292 - 1.*t4310*t4317 - 0.14871*(-4.e-6*t3588*t4282 - 1.6e-11*t3588*t4310 + 4.e-6*t3552*t4330) + 0.03875*(-1.*t3588*t4282 - 4.e-6*t3588*t4310 + t3552*t4330) - 0.80321*(-1.*t3552*t4282 - 4.e-6*t3552*t4310 - 1.000000000016*t3588*t4330) - 1.*t4330*t4339;
  p_output1[5]=t3846 + t3857 + t3870 + t3880 + t3898 + t3909 + t3929 + t3949 - 1.*t1427*t4385*t78 + t4383*t78*t921;
  p_output1[6]=t1265*t4407 + t3842*t4415 + t4453*t4460 + t2610*t4467 + t2786*t4478 + t2456*t4488 - 0.041195*(t2329*t4467 + 4.e-6*t2412*t4478 - 1.*t2419*t4488) - 0.14871*(4.e-6*t2412*t4467 + t3091*t4478 + 4.e-6*t2419*t4488) + 0.803147*(t2419*t4467 - 4.e-6*t2419*t4478 + t3127*t4488);
  p_output1[7]=t4553*t4563 + t4570*t4578 + t4588*t4602 + 0.803147*(-1.000000000016*t2419*t4563 + t2329*t4578 - 4.e-6*t2329*t4602) - 0.14871*(4.e-6*t2329*t4563 + 4.e-6*t2419*t4578 - 1.6e-11*t2419*t4602) - 0.041195*(-1.*t2329*t4563 - 1.*t2419*t4578 + 4.e-6*t2419*t4602);
  p_output1[8]=t1123*t4681 - 1.*t3277*t4681 + t1352*t4693 - 1.*t3248*t4693 + t1897*t4708 + t2166*t4719 + t2456*t4737 + t2610*t4746 + t2786*t4760 - 0.041195*(-1.*t2419*t4737 + t2329*t4746 + 4.e-6*t2412*t4760) + 0.803147*(t3127*t4737 + t2419*t4746 - 4.e-6*t2419*t4760) - 0.14871*(4.e-6*t2419*t4737 + 4.e-6*t2412*t4746 + t3091*t4760) - 1.*t3396*t4845 - 1.*t3428*t4856 - 1.*t3615*t4873 - 1.*t3679*t4884 - 1.*t3718*t4897 + 0.03875*(4.e-6*t3725*t4873 + t3588*t4884 + t3552*t4897) - 0.80321*(-4.e-6*t3588*t4873 + t3801*t4884 - 1.*t3588*t4897) - 0.14871*(t3737*t4873 + 4.e-6*t3588*t4884 + 4.e-6*t3725*t4897) + t3455*t4654*t78 - 1.*t4654*t78*t780;
  p_output1[9]=-1.*t1265*t3455*t4668 + t1897*t4985 + t2166*t5006 + t2456*t5022 + t2610*t5042 + t2786*t5065 - 0.041195*(-1.*t2419*t5022 + t2329*t5042 + 4.e-6*t2412*t5065) + 0.803147*(t3127*t5022 + t2419*t5042 - 4.e-6*t2419*t5065) - 0.14871*(4.e-6*t2419*t5022 + 4.e-6*t2412*t5042 + t3091*t5065) - 1.*t3396*t5125 - 1.*t3428*t5136 - 1.*t3615*t5150 - 1.*t3679*t5159 - 1.*t3718*t5176 + 0.03875*(4.e-6*t3725*t5150 + t3588*t5159 + t3552*t5176) - 0.80321*(-4.e-6*t3588*t5150 + t3801*t5159 - 1.*t3588*t5176) - 0.14871*(t3737*t5150 + 4.e-6*t3588*t5159 + 4.e-6*t3725*t5176) - 1.*t1352*t1427*t4668*t78 + t1427*t3248*t4668*t78 + t1265*t4668*t780 + t1123*t4668*t78*t921 - 1.*t3277*t4668*t78*t921;
  p_output1[10]=t1352*t5239 - 1.*t3248*t5239 + t1123*t5245 - 1.*t3277*t5245 + t2166*t5250 + t1897*t5262 + t2786*t5276 + t2610*t5284 + t2456*t5292 - 0.041195*(4.e-6*t2412*t5276 + t2329*t5284 - 1.*t2419*t5292) - 0.14871*(t3091*t5276 + 4.e-6*t2412*t5284 + 4.e-6*t2419*t5292) + 0.803147*(-4.e-6*t2419*t5276 + t2419*t5284 + t3127*t5292) - 1.*t3396*t5368 - 1.*t3428*t5381 - 1.*t3615*t5388 - 1.*t3679*t5399 - 1.*t3718*t5406 + 0.03875*(4.e-6*t3725*t5388 + t3588*t5399 + t3552*t5406) - 0.80321*(-4.e-6*t3588*t5388 + t3801*t5399 - 1.*t3588*t5406) - 0.14871*(t3737*t5388 + 4.e-6*t3588*t5399 + 4.e-6*t3725*t5406);
  p_output1[11]=-1.*t4095*t5245 - 1.*t4106*t5466 - 1.*t3396*t5473 - 1.*t3428*t5482 - 1.*t3615*t5487 - 1.*t3679*t5499 - 1.*t3718*t5508 + 0.03875*(4.e-6*t3725*t5487 + t3588*t5499 + t3552*t5508) - 0.80321*(-4.e-6*t3588*t5487 + t3801*t5499 - 1.*t3588*t5508) - 0.14871*(t3737*t5487 + 4.e-6*t3588*t5499 + 4.e-6*t3725*t5508);
  p_output1[12]=-1.*t4136*t5482 - 1.*t4159*t5563 - 1.*t3615*t5569 - 1.*t3679*t5590 - 1.*t3718*t5596 + 0.03875*(4.e-6*t3725*t5569 + t3588*t5590 + t3552*t5596) - 0.80321*(-4.e-6*t3588*t5569 + t3801*t5590 - 1.*t3588*t5596) - 0.14871*(t3737*t5569 + 4.e-6*t3588*t5590 + 4.e-6*t3725*t5596) + t4115*t4668*t78;
  p_output1[13]=-1.*t4292*t5696 - 1.*t4317*t5719 - 1.*t4339*t5728 - 0.14871*(-4.e-6*t3588*t5696 - 1.6e-11*t3588*t5719 + 4.e-6*t3552*t5728) + 0.03875*(-1.*t3588*t5696 - 4.e-6*t3588*t5719 + t3552*t5728) - 0.80321*(-1.*t3552*t5696 - 4.e-6*t3552*t5719 - 1.000000000016*t3588*t5728);
  p_output1[14]=t4385*t5245 + t4383*t5466 + t2166*t5796 + t1897*t5802 + t2786*t5815 + t2610*t5824 + t2456*t5832 - 0.041195*(4.e-6*t2412*t5815 + t2329*t5824 - 1.*t2419*t5832) - 0.14871*(t3091*t5815 + 4.e-6*t2412*t5824 + 4.e-6*t2419*t5832) + 0.803147*(-4.e-6*t2419*t5815 + t2419*t5824 + t3127*t5832);
  p_output1[15]=t4415*t5796 + t4453*t5892 + t2610*t5900 + t2786*t5911 + t2456*t5923 - 0.041195*(t2329*t5900 + 4.e-6*t2412*t5911 - 1.*t2419*t5923) - 0.14871*(4.e-6*t2412*t5900 + t3091*t5911 + 4.e-6*t2419*t5923) + 0.803147*(t2419*t5900 - 4.e-6*t2419*t5911 + t3127*t5923) - 1.*t4407*t4668*t78;
  p_output1[16]=t4553*t6002 + t4570*t6020 + t4588*t6041 + 0.803147*(-1.000000000016*t2419*t6002 + t2329*t6020 - 4.e-6*t2329*t6041) - 0.14871*(4.e-6*t2329*t6002 + 4.e-6*t2419*t6020 - 1.6e-11*t2419*t6041) - 0.041195*(-1.*t2329*t6002 - 1.*t2419*t6020 + 4.e-6*t2419*t6041);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 17, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_step_distance_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_step_distance_DiagonalStance1_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
