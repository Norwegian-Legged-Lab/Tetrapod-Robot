/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:17 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t770;
  double t811;
  double t834;
  double t319;
  double t320;
  double t453;
  double t589;
  double t857;
  double t879;
  double t845;
  double t850;
  double t915;
  double t998;
  double t1000;
  double t1053;
  double t1117;
  double t1122;
  double t1144;
  double t1145;
  double t1169;
  double t1229;
  double t544;
  double t1392;
  double t1422;
  double t1424;
  double t1432;
  double t1446;
  double t1468;
  double t691;
  double t721;
  double t1008;
  double t1011;
  double t1033;
  double t1044;
  double t1300;
  double t1309;
  double t1336;
  double t1452;
  double t1462;
  double t299;
  double t1478;
  double t1496;
  double t1506;
  double t1507;
  double t1511;
  double t1518;
  double t1521;
  double t1529;
  double t1531;
  double t1540;
  double t1543;
  double t269;
  double t1600;
  double t1608;
  double t1616;
  double t1467;
  double t1544;
  double t1572;
  double t1617;
  double t1641;
  double t1573;
  double t1623;
  double t1630;
  double t29;
  double t1645;
  double t1647;
  double t1657;
  double t1662;
  double t1668;
  double t1669;
  double t1684;
  double t1700;
  double t1711;
  double t1719;
  double t1725;
  double t1727;
  double t1749;
  double t1754;
  double t1755;
  double t1764;
  double t1766;
  double t1820;
  double t1832;
  double t1840;
  double t1882;
  double t1893;
  double t1862;
  double t1856;
  double t1872;
  double t1873;
  double t1904;
  double t1913;
  double t1914;
  double t1923;
  double t1924;
  double t1925;
  double t1930;
  double t1932;
  double t1934;
  double t1963;
  double t1965;
  double t1976;
  double t1995;
  double t1996;
  double t1997;
  double t2011;
  double t2019;
  double t2041;
  double t2050;
  double t2056;
  double t2060;
  double t2095;
  double t2099;
  double t2129;
  double t2142;
  double t2270;
  double t2273;
  double t2281;
  double t2285;
  double t2292;
  double t2306;
  double t2341;
  double t2372;
  double t2376;
  double t2397;
  double t2441;
  double t2446;
  double t2454;
  double t2458;
  double t2568;
  double t2774;
  double t2777;
  double t2778;
  double t2783;
  double t2788;
  double t2790;
  double t2791;
  double t2794;
  double t2795;
  double t2801;
  double t2809;
  double t2816;
  double t2818;
  double t2822;
  double t2824;
  double t2828;
  double t2837;
  double t2851;
  double t2854;
  double t2857;
  double t2858;
  double t2872;
  double t2877;
  double t2878;
  double t2883;
  double t2884;
  double t2890;
  double t2897;
  double t2899;
  double t2903;
  double t2908;
  double t2912;
  double t2951;
  double t2606;
  double t2711;
  double t2931;
  double t2935;
  double t2938;
  double t2942;
  double t2948;
  double t2955;
  double t2957;
  double t2959;
  double t2967;
  double t2979;
  double t3014;
  double t3020;
  double t3051;
  double t3114;
  double t3119;
  double t3122;
  double t3133;
  double t3139;
  double t3149;
  double t3154;
  double t3157;
  double t3162;
  double t3164;
  double t2277;
  double t2289;
  double t2312;
  double t2337;
  double t2339;
  double t2418;
  double t2467;
  double t2473;
  double t2478;
  double t2499;
  double t2500;
  double t2508;
  double t2509;
  double t2533;
  double t2536;
  double t2541;
  double t2552;
  double t2557;
  double t2581;
  double t2589;
  double t2727;
  double t2771;
  double t2808;
  double t2874;
  double t2916;
  double t2925;
  double t2939;
  double t3112;
  double t3165;
  double t3168;
  double t3175;
  double t3183;
  double t3186;
  double t3196;
  double t3206;
  double t3217;
  double t3223;
  double t3333;
  double t3335;
  double t3336;
  double t1919;
  double t1975;
  double t2033;
  double t2039;
  double t2072;
  double t2160;
  double t2178;
  double t2185;
  double t2187;
  double t2193;
  double t2210;
  double t2228;
  double t2241;
  double t3351;
  double t3352;
  double t3368;
  double t3261;
  double t3284;
  double t3292;
  double t2040;
  double t2258;
  double t2267;
  double t2927;
  double t3231;
  double t3232;
  double t3411;
  double t3426;
  double t3429;
  double t3458;
  double t3474;
  double t3481;
  double t3617;
  double t3619;
  double t3621;
  double t3587;
  double t3590;
  double t3592;
  double t3435;
  double t3438;
  double t3447;
  double t3483;
  double t3736;
  double t3757;
  double t3758;
  double t3597;
  double t3730;
  double t3776;
  double t3680;
  double t3692;
  double t3707;
  double t3813;
  double t3816;
  double t3819;
  double t3497;
  double t3524;
  double t3529;
  double t3812;
  double t3822;
  double t3601;
  double t3603;
  double t3604;
  double t4002;
  double t4019;
  double t3928;
  double t3935;
  double t3946;
  double t3947;
  double t4176;
  double t4178;
  double t4185;
  double t4189;
  double t4190;
  double t4201;
  double t4203;
  double t4088;
  double t4099;
  double t4103;
  double t3793;
  double t3800;
  double t3803;
  double t3975;
  double t3984;
  double t4000;
  double t4270;
  double t4272;
  double t4384;
  double t4394;
  double t4445;
  double t4281;
  double t4304;
  double t4312;
  double t4359;
  double t4370;
  double t3828;
  double t3829;
  double t3841;
  double t4315;
  double t4377;
  double t4330;
  double t4344;
  double t4507;
  double t4512;
  double t4488;
  double t4542;
  double t4832;
  double t4837;
  double t4841;
  double t4852;
  double t4892;
  double t4894;
  double t4870;
  double t4875;
  double t4961;
  double t5064;
  double t5079;
  double t5103;
  double t5135;
  double t5150;
  double t5152;
  double t5167;
  double t5197;
  double t5207;
  double t5219;
  double t5232;
  double t5248;
  double t4962;
  double t4968;
  double t4970;
  double t4977;
  double t4978;
  double t4990;
  double t4991;
  double t5004;
  double t5016;
  double t5302;
  double t5306;
  double t5307;
  double t5311;
  double t5046;
  double t5051;
  double t5070;
  double t5072;
  double t5073;
  double t5081;
  double t5094;
  double t5128;
  double t5129;
  double t5263;
  double t5288;
  double t5293;
  double t5296;
  double t5132;
  double t5297;
  double t5033;
  double t5035;
  double t5036;
  double t5040;
  double t4937;
  double t4944;
  double t4947;
  double t4957;
  double t5356;
  double t5391;
  double t5451;
  double t5454;
  double t5458;
  double t5444;
  double t5445;
  double t5446;
  double t5330;
  double t5333;
  double t5340;
  double t5342;
  double t5369;
  double t5370;
  double t5380;
  double t5382;
  double t4828;
  double t4838;
  double t4864;
  double t4865;
  double t4890;
  double t4895;
  double t4927;
  double t4931;
  double t5899;
  double t5900;
  double t5919;
  double t5781;
  double t5786;
  double t5800;
  double t5636;
  double t5715;
  double t5722;
  double t5733;
  double t5847;
  double t5952;
  double t5956;
  double t6017;
  double t6029;
  double t6059;
  double t6091;
  double t6095;
  double t6128;
  double t5514;
  double t5522;
  double t5523;
  double t5476;
  double t5508;
  double t5509;
  double t5438;
  double t5441;
  double t5442;
  double t5428;
  double t5429;
  double t5434;
  double t6405;
  double t6410;
  double t6414;
  double t6541;
  double t6591;
  double t6597;
  double t6438;
  double t6455;
  double t6473;
  double t6277;
  double t6278;
  double t6295;
  double t6689;
  double t6691;
  double t6699;
  double t6437;
  double t6479;
  double t6333;
  double t6340;
  double t6342;
  double t6777;
  double t6778;
  double t6785;
  double t6682;
  double t6686;
  double t6845;
  double t6849;
  double t6850;
  double t6873;
  double t6881;
  double t6895;
  double t6756;
  double t6759;
  double t6761;
  double t7017;
  double t6957;
  double t6963;
  double t6968;
  double t6977;
  double t6981;
  double t7067;
  double t7075;
  double t7082;
  double t7089;
  double t7100;
  double t7104;
  double t7168;
  double t5314;
  double t5319;
  double t5324;
  double t7325;
  double t7327;
  double t7238;
  double t7254;
  double t7266;
  double t7169;
  double t7352;
  double t7369;
  double t7381;
  double t7438;
  double t7455;
  double t7457;
  double t7462;
  double t7468;
  double t7511;
  double t7524;
  double t7527;
  double t7539;
  double t7561;
  double t7563;
  double t7569;
  double t7625;
  double t7639;
  double t7640;
  double t7641;
  double t7703;
  double t7732;
  double t7753;
  double t7766;
  double t7769;
  double t7852;
  double t7864;
  double t7877;
  double t7892;
  double t7961;
  double t7984;
  double t8023;
  double t7180;
  double t7181;
  double t7219;
  double t7285;
  double t7305;
  double t7311;
  double t7326;
  double t7329;
  double t7335;
  double t7336;
  double t7220;
  double t7315;
  double t7340;
  double t7345;
  double t7505;
  double t7629;
  double t7776;
  double t7785;
  double t7787;
  double t7805;
  double t7807;
  double t7809;
  double t7832;
  double t7835;
  double t7837;
  double t7840;
  double t8086;
  double t8087;
  double t8095;
  double t8096;
  double t5396;
  double t5398;
  double t5399;
  double t8295;
  double t8309;
  double t8320;
  double t8327;
  double t8335;
  double t8348;
  double t8361;
  double t8372;
  double t8390;
  double t8395;
  double t8402;
  double t8428;
  double t8429;
  double t8435;
  double t8444;
  double t8448;
  double t8471;
  double t8473;
  double t8494;
  double t8508;
  double t8531;
  double t8534;
  double t5417;
  double t5425;
  double t5426;
  double t7845;
  double t8098;
  double t7874;
  double t7954;
  double t8025;
  double t8038;
  double t8048;
  double t8070;
  double t8079;
  double t8081;
  double t8192;
  double t8209;
  double t8120;
  double t8148;
  double t8179;
  double t8187;
  double t8107;
  double t8108;
  double t8110;
  double t8115;
  double t8722;
  double t8726;
  double t8727;
  double t8730;
  double t8731;
  double t8733;
  double t5464;
  double t5466;
  double t5468;
  double t6982;
  double t7079;
  double t7113;
  double t7117;
  double t7125;
  double t7126;
  double t7132;
  double t7136;
  double t8897;
  double t8898;
  double t8904;
  double t8870;
  double t8871;
  double t8885;
  double t8825;
  double t8835;
  double t8844;
  double t8853;
  double t8896;
  double t8906;
  double t8907;
  double t8925;
  double t8926;
  double t8930;
  double t8938;
  double t8939;
  double t8944;
  double t8762;
  double t8766;
  double t8771;
  double t8778;
  double t8780;
  double t8807;
  double t8749;
  double t8752;
  double t8755;
  double t8743;
  double t8744;
  double t8746;
  double t8995;
  double t9006;
  double t9017;
  double t9032;
  double t9038;
  double t9054;
  double t9059;
  double t9060;
  double t9063;
  double t9107;
  double t9110;
  double t9114;
  double t9125;
  double t9128;
  double t9129;
  double t9070;
  double t9116;
  double t9071;
  double t9085;
  double t9087;
  double t9138;
  double t9175;
  double t9214;
  double t9215;
  double t9216;
  double t9224;
  double t9231;
  double t9233;
  double t9238;
  double t9241;
  double t9242;
  double t9253;
  double t9264;
  double t9268;
  double t1803;
  double t1805;
  double t1810;
  double t3321;
  double t3324;
  double t3331;
  double t9379;
  double t9389;
  double t9390;
  double t3568;
  double t3571;
  double t3574;
  double t9659;
  double t9685;
  double t9777;
  double t9801;
  double t9667;
  double t9669;
  double t9673;
  double t9896;
  double t9907;
  double t9691;
  double t9700;
  double t9701;
  double t9768;
  double t9770;
  double t9773;
  double t9920;
  double t9924;
  double t9940;
  double t10294;
  double t10298;
  double t10304;
  double t10307;
  double t10355;
  double t10359;
  double t10406;
  double t10410;
  double t6792;
  double t6804;
  double t6815;
  double t10536;
  double t10538;
  double t5744;
  double t5966;
  double t6013;
  double t10619;
  double t10644;
  double t6919;
  double t6922;
  double t6931;
  double t10369;
  double t10370;
  double t10373;
  double t10439;
  double t10440;
  double t10442;
  double t10870;
  double t10871;
  double t10872;
  double t10875;
  double t10881;
  double t10883;
  double t10885;
  double t10887;
  double t10888;
  double t10889;
  double t10893;
  double t10895;
  double t10896;
  double t10899;
  double t10905;
  double t10912;
  double t10913;
  double t10914;
  double t10918;
  double t10928;
  double t10930;
  double t10936;
  double t10452;
  double t10453;
  double t10455;
  double t10823;
  double t10835;
  double t10843;
  double t10846;
  double t10473;
  double t10477;
  double t10479;
  double t9293;
  double t9295;
  double t9296;
  double t11055;
  double t11075;
  double t8858;
  double t8910;
  double t8913;
  double t11121;
  double t11164;
  double t9316;
  double t9321;
  double t9344;
  double t9582;
  double t9584;
  double t9585;
  double t11695;
  double t11743;
  double t11800;
  double t11808;
  double t11830;
  double t11837;
  double t11714;
  double t11716;
  double t11717;
  double t11744;
  double t11749;
  double t11755;
  double t11785;
  double t11786;
  double t11787;
  double t11845;
  double t11846;
  double t11847;
  double t12286;
  double t12288;
  double t12292;
  double t12302;
  double t12430;
  double t12434;
  double t12453;
  double t12458;
  double t12557;
  double t12558;
  double t12580;
  double t12582;
  double t12444;
  double t12445;
  double t12447;
  double t12476;
  double t12477;
  double t12478;
  double t12685;
  double t12686;
  double t12691;
  double t12692;
  double t12696;
  double t12702;
  double t12703;
  double t12704;
  double t12722;
  double t12726;
  double t12727;
  double t12732;
  double t12734;
  double t12736;
  double t12737;
  double t12740;
  double t12745;
  double t12749;
  double t12758;
  double t12764;
  double t12765;
  double t12772;
  double t12483;
  double t12484;
  double t12486;
  double t12510;
  double t12511;
  double t12512;
  double t12647;
  double t12651;
  double t12661;
  double t12666;
  double t12951;
  double t12954;
  double t12960;
  double t12963;
  double t11659;
  double t11660;
  double t11661;
  t770 = Cos(var1[17]);
  t811 = -1.*t770;
  t834 = 1. + t811;
  t319 = Cos(var1[16]);
  t320 = -1.*t319;
  t453 = 1. + t320;
  t589 = Sin(var1[16]);
  t857 = Sin(var1[17]);
  t879 = 4.e-6*t857;
  t845 = 1.000000000016*t834;
  t850 = -7.e-6*t834;
  t915 = t850 + t879;
  t998 = -7.e-6*t915;
  t1000 = -1. + t845 + t998;
  t1053 = 2.8e-11*t834;
  t1117 = 4.e-6*t834;
  t1122 = 7.e-6*t857;
  t1144 = t1117 + t1122;
  t1145 = -7.e-6*t1144;
  t1169 = -1.*t857;
  t1229 = t1053 + t1145 + t1169;
  t544 = -7.e-6*t453;
  t1392 = -6.5e-11*t834;
  t1422 = 1. + t1392;
  t1424 = -7.e-6*t1422;
  t1432 = 7.e-6*t834;
  t1446 = t1424 + t1432 + t879;
  t1468 = Sin(var1[15]);
  t691 = -4.e-6*t589;
  t721 = t544 + t691;
  t1008 = t721*t1000;
  t1011 = 4.e-6*t453;
  t1033 = -7.e-6*t589;
  t1044 = t1011 + t1033;
  t1300 = t1044*t1229;
  t1309 = -6.5e-11*t453;
  t1336 = 1. + t1309;
  t1452 = t1336*t1446;
  t1462 = t1008 + t1300 + t1452;
  t299 = Cos(var1[15]);
  t1478 = -1.000000000016*t453;
  t1496 = 1. + t1478;
  t1506 = t1496*t1000;
  t1507 = -2.8e-11*t453;
  t1511 = -1.*t589;
  t1518 = t1507 + t1511;
  t1521 = t1518*t1229;
  t1529 = 4.e-6*t589;
  t1531 = t544 + t1529;
  t1540 = t1531*t1446;
  t1543 = t1506 + t1521 + t1540;
  t269 = Cos(var1[5]);
  t1600 = -1.*t1468*t1462;
  t1608 = t299*t1543;
  t1616 = t1600 + t1608;
  t1467 = t299*t1462;
  t1544 = t1468*t1543;
  t1572 = t1467 + t1544;
  t1617 = Sin(var1[5]);
  t1641 = Cos(var1[3]);
  t1573 = t269*t1572;
  t1623 = t1616*t1617;
  t1630 = t1573 + t1623;
  t29 = Sin(var1[3]);
  t1645 = Cos(var1[4]);
  t1647 = t1507 + t589;
  t1657 = t1647*t1000;
  t1662 = -1.000000000049*t453;
  t1668 = 1. + t1662;
  t1669 = t1668*t1229;
  t1684 = 7.e-6*t589;
  t1700 = t1011 + t1684;
  t1711 = t1700*t1446;
  t1719 = t1657 + t1669 + t1711;
  t1725 = t1645*t1719;
  t1727 = Sin(var1[4]);
  t1749 = t269*t1616;
  t1754 = -1.*t1572*t1617;
  t1755 = t1749 + t1754;
  t1764 = -1.*t1727*t1755;
  t1766 = t1725 + t1764;
  t1820 = -1.*t1719*t1727;
  t1832 = -1.*t1645*t1755;
  t1840 = t1820 + t1832;
  t1882 = -1. + t770;
  t1893 = 4.e-6*t1882;
  t1862 = -4.e-6*t857;
  t1856 = 6.5e-11*t834;
  t1872 = t850 + t1862;
  t1873 = 7.e-6*t1872;
  t1904 = t1893 + t1122;
  t1913 = 4.e-6*t1904;
  t1914 = -1. + t1856 + t1873 + t1913;
  t1923 = 1.000000000049*t834;
  t1924 = -1. + t1923;
  t1925 = 4.e-6*t1924;
  t1930 = -7.e-6*t857;
  t1932 = -2.8e-11*t834;
  t1934 = t1932 + t857;
  t1963 = 7.e-6*t1934;
  t1965 = t1925 + t1893 + t1930 + t1963;
  t1976 = -1.000000000016*t834;
  t1995 = 1. + t1976;
  t1996 = 7.e-6*t1995;
  t1997 = t1053 + t857;
  t2011 = 4.e-6*t1997;
  t2019 = t1996 + t1432 + t1862 + t2011;
  t2041 = t1531*t1914;
  t2050 = t1518*t1965;
  t2056 = t1496*t2019;
  t2060 = t2041 + t2050 + t2056;
  t2095 = t1336*t1914;
  t2099 = t1044*t1965;
  t2129 = t721*t2019;
  t2142 = t2095 + t2099 + t2129;
  t2270 = 4.e-6*t1144;
  t2273 = -1. + t1923 + t2270;
  t2281 = 4.e-6*t1422;
  t2285 = t2281 + t1893 + t1122;
  t2292 = 4.e-6*t915;
  t2306 = t1053 + t2292 + t857;
  t2341 = t1518*t2273;
  t2372 = t1531*t2285;
  t2376 = t1496*t2306;
  t2397 = t2341 + t2372 + t2376;
  t2441 = t1044*t2273;
  t2446 = t1336*t2285;
  t2454 = t721*t2306;
  t2458 = t2441 + t2446 + t2454;
  t2568 = 2.8e-11*t453;
  t2774 = 2.826290000000002e-7*var1[17];
  t2777 = -0.148715*t1422;
  t2778 = -2.18904205e-16*t834;
  t2783 = t1117 + t1930;
  t2788 = -0.038576*t2783;
  t2790 = -0.80315*t1872;
  t2791 = t1432 + t879;
  t2794 = -0.5031510000080001*t2791;
  t2795 = -0.038575000014*t1904;
  t2801 = t2774 + t2777 + t2778 + t2788 + t2790 + t2794 + t2795;
  t2809 = 1.1305160000000008e-12*var1[17];
  t2816 = -1.000000000049*t834;
  t2818 = 1. + t2816;
  t2822 = -0.038576*t2818;
  t2824 = -0.03857500001589017*t834;
  t2828 = t1053 + t1169;
  t2837 = -0.5031510000080001*t2828;
  t2851 = t1893 + t1930;
  t2854 = -3.367757e-6*t2851;
  t2857 = -0.148715*t1144;
  t2858 = -0.80315*t1934;
  t2872 = t2809 + t2822 + t2824 + t2837 + t2854 + t2857 + t2858;
  t2877 = -1.9784030000000015e-12*var1[17];
  t2878 = -0.80315*t1995;
  t2883 = -0.5031510000160505*t834;
  t2884 = t1932 + t1169;
  t2890 = -0.038576*t2884;
  t2897 = t1432 + t1862;
  t2899 = -3.367757e-6*t2897;
  t2903 = -0.148715*t915;
  t2908 = -0.038575000014*t1997;
  t2912 = t2877 + t2878 + t2883 + t2890 + t2899 + t2903 + t2908;
  t2951 = 7.e-6*t453;
  t2606 = -1. + t319;
  t2711 = 4.e-6*t2606;
  t2931 = -1.*t299;
  t2935 = 1. + t2931;
  t2938 = -0.15121*t2935;
  t2942 = -2.7726089999999997e-12*var1[16];
  t2948 = -0.2812110000084994*t453;
  t2955 = t2951 + t691;
  t2957 = -1.8134809999999998e-6*t2955;
  t2959 = t2568 + t589;
  t2967 = -0.038749000006999997*t2959;
  t2979 = t1531*t2801;
  t3014 = t1518*t2872;
  t3020 = t1496*t2912;
  t3051 = t2942 + t2948 + t2957 + t2967 + t2979 + t3014 + t3020;
  t3114 = 3.9608699999999997e-7*var1[16];
  t3119 = -1.1787626499999999e-16*t453;
  t3122 = t2951 + t1529;
  t3133 = -0.281211000004*t3122;
  t3139 = t2711 + t1684;
  t3149 = -0.038749000006999997*t3139;
  t3154 = t1336*t2801;
  t3157 = t1044*t2872;
  t3162 = t721*t2912;
  t3164 = t3114 + t3119 + t3133 + t3149 + t3154 + t3157 + t3162;
  t2277 = t1668*t2273;
  t2289 = t1700*t2285;
  t2312 = t1647*t2306;
  t2337 = t2277 + t2289 + t2312;
  t2339 = t1645*t2337;
  t2418 = t299*t2397;
  t2467 = -1.*t1468*t2458;
  t2473 = t2418 + t2467;
  t2478 = t269*t2473;
  t2499 = t1468*t2397;
  t2500 = t299*t2458;
  t2508 = t2499 + t2500;
  t2509 = -1.*t2508*t1617;
  t2533 = t2478 + t2509;
  t2536 = -1.*t1727*t2533;
  t2541 = t2339 + t2536;
  t2552 = 1.5843479999999999e-12*var1[16];
  t2557 = -0.03874900000889869*t453;
  t2581 = t2568 + t1511;
  t2589 = -0.281211000004*t2581;
  t2727 = t2711 + t1033;
  t2771 = -1.8134809999999998e-6*t2727;
  t2808 = t1700*t2801;
  t2874 = t1668*t2872;
  t2916 = t1647*t2912;
  t2925 = t2552 + t2557 + t2589 + t2771 + t2808 + t2874 + t2916;
  t2939 = -0.15121*t1468;
  t3112 = t299*t3051;
  t3165 = -1.*t1468*t3164;
  t3168 = t2938 + t2939 + t3112 + t3165;
  t3175 = t269*t3168;
  t3183 = 0.15121*t1468;
  t3186 = t1468*t3051;
  t3196 = t299*t3164;
  t3206 = t2938 + t3183 + t3186 + t3196;
  t3217 = -1.*t3206*t1617;
  t3223 = t3175 + t3217;
  t3333 = t1645*t2925;
  t3335 = -1.*t1727*t3223;
  t3336 = t3333 + t3335;
  t1919 = t1700*t1914;
  t1975 = t1668*t1965;
  t2033 = t1647*t2019;
  t2039 = t1919 + t1975 + t2033;
  t2072 = t299*t2060;
  t2160 = -1.*t1468*t2142;
  t2178 = t2072 + t2160;
  t2185 = t269*t2178;
  t2187 = t1468*t2060;
  t2193 = t299*t2142;
  t2210 = t2187 + t2193;
  t2228 = -1.*t2210*t1617;
  t2241 = t2185 + t2228;
  t3351 = t2337*t1727;
  t3352 = t1645*t2533;
  t3368 = t3351 + t3352;
  t3261 = t2925*t1727;
  t3284 = t1645*t3223;
  t3292 = t3261 + t3284;
  t2040 = t2039*t1727;
  t2258 = t1645*t2241;
  t2267 = t2040 + t2258;
  t2927 = -1.*t2925*t1727;
  t3231 = -1.*t1645*t3223;
  t3232 = t2927 + t3231;
  t3411 = t1645*t2039;
  t3426 = -1.*t1727*t2241;
  t3429 = t3411 + t3426;
  t3458 = t269*t3206;
  t3474 = t3168*t1617;
  t3481 = t3458 + t3474;
  t3617 = -1.*t269*t1572;
  t3619 = -1.*t1616*t1617;
  t3621 = t3617 + t3619;
  t3587 = t269*t2210;
  t3590 = t2178*t1617;
  t3592 = t3587 + t3590;
  t3435 = t269*t2508;
  t3438 = t2473*t1617;
  t3447 = t3435 + t3438;
  t3483 = -1.*t3447*t3481;
  t3736 = -1.*t269*t3206;
  t3757 = -1.*t3168*t1617;
  t3758 = t3736 + t3757;
  t3597 = t3481*t3592;
  t3730 = -1.*t3447*t3223;
  t3776 = -1.*t2533*t3481;
  t3680 = -1.*t269*t2508;
  t3692 = -1.*t2473*t1617;
  t3707 = t3680 + t3692;
  t3813 = -1.*t269*t2210;
  t3816 = -1.*t2178*t1617;
  t3819 = t3813 + t3816;
  t3497 = -1.*t3368*t3292;
  t3524 = -1.*t2541*t3336;
  t3529 = t3483 + t3497 + t3524;
  t3812 = t3481*t2241;
  t3822 = t3223*t3592;
  t3601 = t3292*t2267;
  t3603 = t3336*t3429;
  t3604 = t3597 + t3601 + t3603;
  t4002 = 0.15121*t299;
  t4019 = t4002 + t2939 + t3112 + t3165;
  t3928 = -0.15121*t299;
  t3935 = -1.*t1468*t3051;
  t3946 = -1.*t299*t3164;
  t3947 = t3928 + t2939 + t3935 + t3946;
  t4176 = -1.*t299*t1462;
  t4178 = -1.*t1468*t1543;
  t4185 = t4176 + t4178;
  t4189 = t269*t4185;
  t4190 = t4189 + t3619;
  t4201 = t4185*t1617;
  t4203 = t1749 + t4201;
  t4088 = -1.*t1468*t2060;
  t4099 = -1.*t299*t2142;
  t4103 = t4088 + t4099;
  t3793 = -1.*t2337*t2925;
  t3800 = -1.*t2533*t3223;
  t3803 = t3793 + t3800 + t3483;
  t3975 = -1.*t1468*t2397;
  t3984 = -1.*t299*t2458;
  t4000 = t3975 + t3984;
  t4270 = t4103*t1617;
  t4272 = t2185 + t4270;
  t4384 = t269*t3947;
  t4394 = -1.*t4019*t1617;
  t4445 = t4384 + t4394;
  t4281 = t269*t4019;
  t4304 = t3947*t1617;
  t4312 = t4281 + t4304;
  t4359 = t4000*t1617;
  t4370 = t2478 + t4359;
  t3828 = t2925*t2039;
  t3829 = t3223*t2241;
  t3841 = t3828 + t3829 + t3597;
  t4315 = -1.*t3447*t4312;
  t4377 = -1.*t4370*t3481;
  t4330 = t269*t4000;
  t4344 = t4330 + t3692;
  t4507 = t269*t4103;
  t4512 = t4507 + t3816;
  t4488 = t3481*t4272;
  t4542 = t4312*t3592;
  t4832 = -2.8e-11*t589;
  t4837 = t320 + t4832;
  t4841 = 4.e-6*t319;
  t4852 = t4841 + t1033;
  t4892 = -7.e-6*t319;
  t4894 = t4892 + t1529;
  t4870 = -4.e-6*t319;
  t4875 = t4870 + t1033;
  t4961 = 7.e-6*t319;
  t5064 = 2.8e-11*t589;
  t5079 = t4961 + t1529;
  t5103 = t319 + t4832;
  t5135 = t319 + t5064;
  t5150 = -0.038749000006999997*t5135;
  t5152 = t4870 + t1684;
  t5167 = -1.8134809999999998e-6*t5152;
  t5197 = -0.2812110000084994*t589;
  t5207 = t4852*t2801;
  t5219 = t4837*t2872;
  t5232 = -1.000000000016*t589*t2912;
  t5248 = -2.7726089999999997e-12 + t5150 + t5167 + t5197 + t5207 + t5219 + t5232;
  t4962 = t4961 + t691;
  t4968 = -0.038749000006999997*t4962;
  t4970 = t4841 + t1684;
  t4977 = -0.281211000004*t4970;
  t4978 = -1.1787626499999999e-16*t589;
  t4990 = -6.5e-11*t589*t2801;
  t4991 = t4894*t2872;
  t5004 = t4875*t2912;
  t5016 = 3.9608699999999997e-7 + t4968 + t4977 + t4978 + t4990 + t4991 + t5004;
  t5302 = t5079*t1914;
  t5306 = -1.000000000049*t589*t1965;
  t5307 = t5103*t2019;
  t5311 = t5302 + t5306 + t5307;
  t5046 = t4892 + t691;
  t5051 = -1.8134809999999998e-6*t5046;
  t5070 = t320 + t5064;
  t5072 = -0.281211000004*t5070;
  t5073 = -0.03874900000889869*t589;
  t5081 = t5079*t2801;
  t5094 = -1.000000000049*t589*t2872;
  t5128 = t5103*t2912;
  t5129 = 1.5843479999999999e-12 + t5051 + t5072 + t5073 + t5081 + t5094 + t5128;
  t5263 = -1.000000000049*t589*t2273;
  t5288 = t5079*t2285;
  t5293 = t5103*t2306;
  t5296 = t5263 + t5288 + t5293;
  t5132 = -1.*t2337*t5129;
  t5297 = -1.*t5296*t2925;
  t5033 = t4894*t2273;
  t5035 = -6.5e-11*t589*t2285;
  t5036 = t4875*t2306;
  t5040 = t5033 + t5035 + t5036;
  t4937 = t4837*t2273;
  t4944 = t4852*t2285;
  t4947 = -1.000000000016*t589*t2306;
  t4957 = t4937 + t4944 + t4947;
  t5356 = t2925*t5311;
  t5391 = t5129*t2039;
  t5451 = t299*t5016;
  t5454 = t1468*t5248;
  t5458 = t5451 + t5454;
  t5444 = -1.*t1468*t5016;
  t5445 = t299*t5248;
  t5446 = t5444 + t5445;
  t5330 = -6.5e-11*t589*t1914;
  t5333 = t4894*t1965;
  t5340 = t4875*t2019;
  t5342 = t5330 + t5333 + t5340;
  t5369 = t4852*t1914;
  t5370 = t4837*t1965;
  t5380 = -1.000000000016*t589*t2019;
  t5382 = t5369 + t5370 + t5380;
  t4828 = -1.000000000016*t589*t1000;
  t4838 = t4837*t1229;
  t4864 = t4852*t1446;
  t4865 = t4828 + t4838 + t4864;
  t4890 = t4875*t1000;
  t4895 = t4894*t1229;
  t4927 = -6.5e-11*t589*t1446;
  t4931 = t4890 + t4895 + t4927;
  t5899 = t1468*t4865;
  t5900 = t299*t4931;
  t5919 = t5899 + t5900;
  t5781 = t299*t4865;
  t5786 = -1.*t1468*t4931;
  t5800 = t5781 + t5786;
  t5636 = t5103*t1000;
  t5715 = -1.000000000049*t589*t1229;
  t5722 = t5079*t1446;
  t5733 = t5636 + t5715 + t5722;
  t5847 = t269*t5800;
  t5952 = -1.*t5919*t1617;
  t5956 = t5847 + t5952;
  t6017 = t269*t5919;
  t6029 = t5800*t1617;
  t6059 = t6017 + t6029;
  t6091 = t1645*t5733;
  t6095 = -1.*t1727*t5956;
  t6128 = t6091 + t6095;
  t5514 = t299*t5342;
  t5522 = t1468*t5382;
  t5523 = t5514 + t5522;
  t5476 = -1.*t1468*t5342;
  t5508 = t299*t5382;
  t5509 = t5476 + t5508;
  t5438 = -1.*t1468*t5040;
  t5441 = t299*t4957;
  t5442 = t5438 + t5441;
  t5428 = t299*t5040;
  t5429 = t1468*t4957;
  t5434 = t5428 + t5429;
  t6405 = t269*t5434;
  t6410 = t5442*t1617;
  t6414 = t6405 + t6410;
  t6541 = t269*t5446;
  t6591 = -1.*t5458*t1617;
  t6597 = t6541 + t6591;
  t6438 = t269*t5458;
  t6455 = t5446*t1617;
  t6473 = t6438 + t6455;
  t6277 = t269*t5523;
  t6278 = t5509*t1617;
  t6295 = t6277 + t6278;
  t6689 = t269*t5509;
  t6691 = -1.*t5523*t1617;
  t6699 = t6689 + t6691;
  t6437 = -1.*t6414*t3481;
  t6479 = -1.*t3447*t6473;
  t6333 = t269*t5442;
  t6340 = -1.*t5434*t1617;
  t6342 = t6333 + t6340;
  t6777 = t5296*t1727;
  t6778 = t1645*t6342;
  t6785 = t6777 + t6778;
  t6682 = t6473*t3592;
  t6686 = t3481*t6295;
  t6845 = t5129*t1727;
  t6849 = t1645*t6597;
  t6850 = t6845 + t6849;
  t6873 = t1645*t5129;
  t6881 = -1.*t1727*t6597;
  t6895 = t6873 + t6881;
  t6756 = t5311*t1727;
  t6759 = t1645*t6699;
  t6761 = t6756 + t6759;
  t7017 = 4.e-6*t770;
  t6957 = 7.e-6*t770;
  t6963 = t6957 + t879;
  t6968 = -7.e-6*t6963;
  t6977 = 2.8e-11*t857;
  t6981 = t811 + t6968 + t6977;
  t7067 = 7.000000000455e-6*t857;
  t7075 = t7017 + t7067;
  t7082 = t7017 + t1930;
  t7089 = -7.e-6*t7082;
  t7100 = 1.000000000016*t857;
  t7104 = t7089 + t7100;
  t7168 = -4.e-6*t770;
  t5314 = -1.*t2397*t3051;
  t5319 = -1.*t2458*t3164;
  t5324 = t5314 + t5319 + t3793;
  t7325 = t7168 + t1930;
  t7327 = t6957 + t1862;
  t7238 = -7.e-6*t770;
  t7254 = -2.8e-11*t857;
  t7266 = t770 + t7254;
  t7169 = t770 + t6977;
  t7352 = -0.80315*t7325;
  t7369 = -0.038575000014*t7327;
  t7381 = t7238 + t879;
  t7438 = -0.038576*t7381;
  t7455 = t7017 + t1122;
  t7457 = -0.5031510000080001*t7455;
  t7462 = 9.666256095795e-12*t857;
  t7468 = 2.826290000000002e-7 + t7352 + t7369 + t7438 + t7457 + t7462;
  t7511 = t7238 + t1862;
  t7524 = -3.367757e-6*t7511;
  t7527 = -0.80315*t7266;
  t7539 = t811 + t6977;
  t7561 = -0.5031510000080001*t7539;
  t7563 = -0.148715*t6963;
  t7569 = 9.99986000053965e-7*t857;
  t7625 = 1.1305160000000008e-12 + t7524 + t7527 + t7561 + t7563 + t7569;
  t7639 = -0.148715*t7082;
  t7640 = t811 + t7254;
  t7641 = -0.038576*t7640;
  t7703 = -0.038575000014*t7169;
  t7732 = t7168 + t1122;
  t7753 = -3.367757e-6*t7732;
  t7766 = 0.2999989999967999*t857;
  t7769 = -1.9784030000000015e-12 + t7639 + t7641 + t7703 + t7753 + t7766;
  t7852 = -4.00000000026e-6*t857;
  t7864 = t6957 + t7852;
  t7877 = 4.e-6*t7082;
  t7892 = t770 + t7877 + t6977;
  t7961 = 4.e-6*t6963;
  t7984 = 1.000000000049*t857;
  t8023 = t7961 + t7984;
  t7180 = 4.e-6*t7169;
  t7181 = -1.12e-16*t857;
  t7219 = t7168 + t7180 + t7181;
  t7285 = 7.e-6*t7266;
  t7305 = 1.96e-16*t857;
  t7311 = t7238 + t7285 + t7305;
  t7326 = 7.e-6*t7325;
  t7329 = 4.e-6*t7327;
  t7335 = 6.5e-11*t857;
  t7336 = t7326 + t7329 + t7335;
  t7220 = t1647*t7219;
  t7315 = t1668*t7311;
  t7340 = t1700*t7336;
  t7345 = t7220 + t7315 + t7340;
  t7505 = t1531*t7468;
  t7629 = t1518*t7625;
  t7776 = t1496*t7769;
  t7785 = t7505 + t7629 + t7776;
  t7787 = t1336*t7468;
  t7805 = t1044*t7625;
  t7807 = t721*t7769;
  t7809 = t7787 + t7805 + t7807;
  t7832 = t1700*t7468;
  t7835 = t1668*t7625;
  t7837 = t1647*t7769;
  t7840 = t7832 + t7835 + t7837;
  t8086 = t1700*t7864;
  t8087 = t1647*t7892;
  t8095 = t1668*t8023;
  t8096 = t8086 + t8087 + t8095;
  t5396 = t3051*t2060;
  t5398 = t3164*t2142;
  t5399 = t5396 + t5398 + t3828;
  t8295 = -1.*t2801*t7864;
  t8309 = -1.*t2273*t7625;
  t8320 = -1.*t7468*t2285;
  t8327 = -1.*t7769*t2306;
  t8335 = -1.*t8023*t2872;
  t8348 = -1.*t7892*t2912;
  t8361 = t8295 + t8309 + t8320 + t8327 + t8335 + t8348;
  t8372 = -1.*t2801*t2285;
  t8390 = -1.*t2273*t2872;
  t8395 = -1.*t2306*t2912;
  t8402 = t8372 + t8390 + t8395;
  t8428 = t1914*t7468;
  t8429 = t2801*t7336;
  t8435 = t7311*t2872;
  t8444 = t7625*t1965;
  t8448 = t7219*t2912;
  t8471 = t7769*t2019;
  t8473 = t8428 + t8429 + t8435 + t8444 + t8448 + t8471;
  t8494 = t2801*t1914;
  t8508 = t2872*t1965;
  t8531 = t2912*t2019;
  t8534 = t8494 + t8508 + t8531;
  t5417 = -1.*t2508*t3206;
  t5425 = -1.*t2473*t3168;
  t5426 = t3793 + t5417 + t5425;
  t7845 = -1.*t7840*t2337;
  t8098 = -1.*t8096*t2925;
  t7874 = t1531*t7864;
  t7954 = t1496*t7892;
  t8025 = t1518*t8023;
  t8038 = t7874 + t7954 + t8025;
  t8048 = t1336*t7864;
  t8070 = t721*t7892;
  t8079 = t1044*t8023;
  t8081 = t8048 + t8070 + t8079;
  t8192 = t7345*t2925;
  t8209 = t7840*t2039;
  t8120 = t721*t7219;
  t8148 = t1044*t7311;
  t8179 = t1336*t7336;
  t8187 = t8120 + t8148 + t8179;
  t8107 = t1496*t7219;
  t8108 = t1518*t7311;
  t8110 = t1531*t7336;
  t8115 = t8107 + t8108 + t8110;
  t8722 = t1468*t7785;
  t8726 = t299*t7809;
  t8727 = t8722 + t8726;
  t8730 = t299*t7785;
  t8731 = -1.*t1468*t7809;
  t8733 = t8730 + t8731;
  t5464 = t3206*t2210;
  t5466 = t3168*t2178;
  t5468 = t3828 + t5464 + t5466;
  t6982 = t1518*t6981;
  t7079 = t1531*t7075;
  t7113 = t1496*t7104;
  t7117 = t6982 + t7079 + t7113;
  t7125 = t1044*t6981;
  t7126 = t1336*t7075;
  t7132 = t721*t7104;
  t7136 = t7125 + t7126 + t7132;
  t8897 = t1468*t7117;
  t8898 = t299*t7136;
  t8904 = t8897 + t8898;
  t8870 = t299*t7117;
  t8871 = -1.*t1468*t7136;
  t8885 = t8870 + t8871;
  t8825 = t1668*t6981;
  t8835 = t1700*t7075;
  t8844 = t1647*t7104;
  t8853 = t8825 + t8835 + t8844;
  t8896 = t269*t8885;
  t8906 = -1.*t8904*t1617;
  t8907 = t8896 + t8906;
  t8925 = t269*t8904;
  t8926 = t8885*t1617;
  t8930 = t8925 + t8926;
  t8938 = t1645*t8853;
  t8939 = -1.*t1727*t8907;
  t8944 = t8938 + t8939;
  t8762 = t299*t8187;
  t8766 = t1468*t8115;
  t8771 = t8762 + t8766;
  t8778 = -1.*t1468*t8187;
  t8780 = t299*t8115;
  t8807 = t8778 + t8780;
  t8749 = t299*t8038;
  t8752 = -1.*t1468*t8081;
  t8755 = t8749 + t8752;
  t8743 = t1468*t8038;
  t8744 = t299*t8081;
  t8746 = t8743 + t8744;
  t8995 = t269*t8771;
  t9006 = t8807*t1617;
  t9017 = t8995 + t9006;
  t9032 = t269*t8733;
  t9038 = -1.*t8727*t1617;
  t9054 = t9032 + t9038;
  t9059 = t269*t8727;
  t9060 = t8733*t1617;
  t9063 = t9059 + t9060;
  t9107 = t269*t8746;
  t9110 = t8755*t1617;
  t9114 = t9107 + t9110;
  t9125 = t269*t8807;
  t9128 = -1.*t8771*t1617;
  t9129 = t9125 + t9128;
  t9070 = -1.*t9063*t3447;
  t9116 = -1.*t9114*t3481;
  t9071 = t269*t8755;
  t9085 = -1.*t8746*t1617;
  t9087 = t9071 + t9085;
  t9138 = t9017*t3481;
  t9175 = t9063*t3592;
  t9214 = t7345*t1727;
  t9215 = t1645*t9129;
  t9216 = t9214 + t9215;
  t9224 = t7840*t1727;
  t9231 = t1645*t9054;
  t9233 = t9224 + t9231;
  t9238 = t1645*t7840;
  t9241 = -1.*t1727*t9054;
  t9242 = t9238 + t9241;
  t9253 = t8096*t1727;
  t9264 = t1645*t9087;
  t9268 = t9253 + t9264;
  t1803 = t1641*t1630;
  t1805 = -1.*t29*t1766;
  t1810 = t1803 + t1805;
  t3321 = -1.*t2337*t1727;
  t3324 = -1.*t1645*t2533;
  t3331 = t3321 + t3324;
  t9379 = t1719*t1727;
  t9389 = t1645*t1755;
  t9390 = t9379 + t9389;
  t3568 = -1.*t2039*t1727;
  t3571 = -1.*t1645*t2241;
  t3574 = t3568 + t3571;
  t9659 = t1630*t3481;
  t9685 = -1.*t3481*t3592;
  t9777 = t1630*t3223;
  t9801 = t1755*t3481;
  t9667 = t9390*t3292;
  t9669 = t1766*t3336;
  t9673 = t9659 + t9667 + t9669;
  t9896 = -1.*t3481*t2241;
  t9907 = -1.*t3223*t3592;
  t9691 = -1.*t3292*t2267;
  t9700 = -1.*t3336*t3429;
  t9701 = t9685 + t9691 + t9700;
  t9768 = t1719*t2925;
  t9770 = t1755*t3223;
  t9773 = t9768 + t9770 + t9659;
  t9920 = -1.*t2925*t2039;
  t9924 = -1.*t3223*t2241;
  t9940 = t9920 + t9924 + t9685;
  t10294 = t1630*t4312;
  t10298 = t4203*t3481;
  t10304 = -1.*t3481*t4272;
  t10307 = -1.*t4312*t3592;
  t10355 = t1719*t5129;
  t10359 = t5733*t2925;
  t10406 = -1.*t2925*t5311;
  t10410 = -1.*t5129*t2039;
  t6792 = t1645*t5296;
  t6804 = -1.*t1727*t6342;
  t6815 = t6792 + t6804;
  t10536 = t6059*t3481;
  t10538 = t1630*t6473;
  t5744 = t5733*t1727;
  t5966 = t1645*t5956;
  t6013 = t5744 + t5966;
  t10619 = -1.*t6473*t3592;
  t10644 = -1.*t3481*t6295;
  t6919 = t1645*t5311;
  t6922 = -1.*t1727*t6699;
  t6931 = t6919 + t6922;
  t10369 = t1543*t3051;
  t10370 = t1462*t3164;
  t10373 = t10369 + t10370 + t9768;
  t10439 = -1.*t3051*t2060;
  t10440 = -1.*t3164*t2142;
  t10442 = t10439 + t10440 + t9920;
  t10870 = t2801*t1446;
  t10871 = t1229*t2872;
  t10872 = t1000*t2912;
  t10875 = t10870 + t10871 + t10872;
  t10881 = t1229*t7625;
  t10883 = t7468*t1446;
  t10885 = t2801*t7075;
  t10887 = t1000*t7769;
  t10888 = t6981*t2872;
  t10889 = t7104*t2912;
  t10893 = t10881 + t10883 + t10885 + t10887 + t10888 + t10889;
  t10895 = -1.*t1914*t7468;
  t10896 = -1.*t2801*t7336;
  t10899 = -1.*t7311*t2872;
  t10905 = -1.*t7625*t1965;
  t10912 = -1.*t7219*t2912;
  t10913 = -1.*t7769*t2019;
  t10914 = t10895 + t10896 + t10899 + t10905 + t10912 + t10913;
  t10918 = -1.*t2801*t1914;
  t10928 = -1.*t2872*t1965;
  t10930 = -1.*t2912*t2019;
  t10936 = t10918 + t10928 + t10930;
  t10452 = t1572*t3206;
  t10453 = t1616*t3168;
  t10455 = t9768 + t10452 + t10453;
  t10823 = t1719*t7840;
  t10835 = t8853*t2925;
  t10843 = -1.*t7345*t2925;
  t10846 = -1.*t7840*t2039;
  t10473 = -1.*t3206*t2210;
  t10477 = -1.*t3168*t2178;
  t10479 = t9920 + t10473 + t10477;
  t9293 = t1645*t8096;
  t9295 = -1.*t1727*t9087;
  t9296 = t9293 + t9295;
  t11055 = t1630*t9063;
  t11075 = t8930*t3481;
  t8858 = t8853*t1727;
  t8910 = t1645*t8907;
  t8913 = t8858 + t8910;
  t11121 = -1.*t9017*t3481;
  t11164 = -1.*t9063*t3592;
  t9316 = t1645*t7345;
  t9321 = -1.*t1727*t9129;
  t9344 = t9316 + t9321;
  t9582 = t1641*t3447;
  t9584 = -1.*t29*t2541;
  t9585 = t9582 + t9584;
  t11695 = -1.*t1630*t3481;
  t11743 = t3447*t3481;
  t11800 = -1.*t1630*t3223;
  t11808 = -1.*t1755*t3481;
  t11830 = t3447*t3223;
  t11837 = t2533*t3481;
  t11714 = -1.*t9390*t3292;
  t11716 = -1.*t1766*t3336;
  t11717 = t11695 + t11714 + t11716;
  t11744 = t3368*t3292;
  t11749 = t2541*t3336;
  t11755 = t11743 + t11744 + t11749;
  t11785 = -1.*t1719*t2925;
  t11786 = -1.*t1755*t3223;
  t11787 = t11785 + t11786 + t11695;
  t11845 = t2337*t2925;
  t11846 = t2533*t3223;
  t11847 = t11845 + t11846 + t11743;
  t12286 = -1.*t1630*t4312;
  t12288 = -1.*t4203*t3481;
  t12292 = t3447*t4312;
  t12302 = t4370*t3481;
  t12430 = -1.*t1719*t5129;
  t12434 = -1.*t5733*t2925;
  t12453 = t2337*t5129;
  t12458 = t5296*t2925;
  t12557 = -1.*t6059*t3481;
  t12558 = -1.*t1630*t6473;
  t12580 = t6414*t3481;
  t12582 = t3447*t6473;
  t12444 = -1.*t1543*t3051;
  t12445 = -1.*t1462*t3164;
  t12447 = t12444 + t12445 + t11785;
  t12476 = t2397*t3051;
  t12477 = t2458*t3164;
  t12478 = t12476 + t12477 + t11845;
  t12685 = -1.*t2801*t1446;
  t12686 = -1.*t1229*t2872;
  t12691 = -1.*t1000*t2912;
  t12692 = t12685 + t12686 + t12691;
  t12696 = t2801*t7864;
  t12702 = t2273*t7625;
  t12703 = t7468*t2285;
  t12704 = t7769*t2306;
  t12722 = t8023*t2872;
  t12726 = t7892*t2912;
  t12727 = t12696 + t12702 + t12703 + t12704 + t12722 + t12726;
  t12732 = t2801*t2285;
  t12734 = t2273*t2872;
  t12736 = t2306*t2912;
  t12737 = t12732 + t12734 + t12736;
  t12740 = -1.*t1229*t7625;
  t12745 = -1.*t7468*t1446;
  t12749 = -1.*t2801*t7075;
  t12758 = -1.*t1000*t7769;
  t12764 = -1.*t6981*t2872;
  t12765 = -1.*t7104*t2912;
  t12772 = t12740 + t12745 + t12749 + t12758 + t12764 + t12765;
  t12483 = -1.*t1572*t3206;
  t12484 = -1.*t1616*t3168;
  t12486 = t11785 + t12483 + t12484;
  t12510 = t2508*t3206;
  t12511 = t2473*t3168;
  t12512 = t11845 + t12510 + t12511;
  t12647 = -1.*t1719*t7840;
  t12651 = -1.*t8853*t2925;
  t12661 = t7840*t2337;
  t12666 = t8096*t2925;
  t12951 = -1.*t1630*t9063;
  t12954 = -1.*t8930*t3481;
  t12960 = t9063*t3447;
  t12963 = t9114*t3481;
  t11659 = t1641*t3592;
  t11660 = -1.*t29*t3429;
  t11661 = t11659 + t11660;
  p_output1[0]=(-1.*t1641*t1766 - 1.*t1630*t29)*var2[1] + t1810*var2[2];
  p_output1[1]=t1766*var2[0] - 1.*t1840*t29*var2[1] + t1641*t1840*var2[2] + (t2267*(-1.*t2541*t3232 - 1.*t2541*t3292 - 1.*t3331*t3336 - 1.*t3336*t3368) + t3429*t3529 + t3368*(t2267*t3336 + t3232*t3429 + t3292*t3429 + t3336*t3574) + t2541*t3604)*var2[3];
  p_output1[2]=t1645*t3621*var2[0] + (t1641*t1755 + t1727*t29*t3621)*var2[1] + (t1755*t29 - 1.*t1641*t1727*t3621)*var2[2] + (t1645*t3604*t3707 + t2267*(-1.*t1645*t3292*t3707 + t1727*t3336*t3707 + t3730 + t1727*t2541*t3758 - 1.*t1645*t3368*t3758 + t3776) + t1645*t3529*t3819 + t3368*(t1645*t2267*t3758 - 1.*t1727*t3429*t3758 + t3812 + t1645*t3292*t3819 - 1.*t1727*t3336*t3819 + t3822))*var2[3] + (t3592*(-1.*t3223*t3707 + t3730 - 1.*t2533*t3758 + t3776) + t2241*t3803 + t3447*(t2241*t3758 + t3812 + t3223*t3819 + t3822) + t2533*t3841)*var2[4];
  p_output1[3]=t1645*t4190*var2[0] + (t1727*t29*t4190 + t1641*t4203)*var2[1] + (-1.*t1641*t1727*t4190 + t29*t4203)*var2[2] + (t1645*t3604*t4344 + t2267*(t4315 - 1.*t1645*t3292*t4344 + t1727*t3336*t4344 + t4377 + t1727*t2541*t4445 - 1.*t1645*t3368*t4445) + t1645*t3529*t4512 + t3368*(t1645*t2267*t4445 - 1.*t1727*t3429*t4445 + t4488 + t1645*t3292*t4512 - 1.*t1727*t3336*t4512 + t4542))*var2[3] + (t3803*t4272 + t3841*t4370 + t3592*(t4315 - 1.*t3223*t4344 + t4377 - 1.*t2533*t4445) + t3447*(t2241*t4445 + t4488 + t3223*t4512 + t4542))*var2[4] + (t2039*(-1.*t2473*t3206 - 1.*t2473*t3947 - 1.*t3168*t4000 - 1.*t2508*t4019) + t2337*(t2178*t3206 + t2178*t3947 + t2210*t4019 + t3168*t4103))*var2[5];
  p_output1[4]=t6013*var2[0] + (t1641*t6059 - 1.*t29*t6128)*var2[1] + (t29*t6059 + t1641*t6128)*var2[2] + (t3529*t6761 + t3604*t6785 + t2267*(t6437 + t6479 - 1.*t3292*t6785 - 1.*t3336*t6815 - 1.*t3368*t6850 - 1.*t2541*t6895) + t3368*(t6682 + t6686 + t3292*t6761 + t2267*t6850 + t3429*t6895 + t3336*t6931))*var2[3] + (t3803*t6295 + t3841*t6414 + t3592*(t5132 + t5297 - 1.*t3223*t6342 + t6437 + t6479 - 1.*t2533*t6597) + t3447*(t5356 + t5391 + t2241*t6597 + t6682 + t6686 + t3223*t6699))*var2[4] + (t5311*t5426 + t2039*(t5132 + t5297 - 1.*t3206*t5434 - 1.*t3168*t5442 - 1.*t2473*t5446 - 1.*t2508*t5458) + t5296*t5468 + t2337*(t5356 + t5391 + t2178*t5446 + t2210*t5458 + t3168*t5509 + t3206*t5523))*var2[5] + (-0.15121*t4865 + 0.15121*t4931 + t2039*(-1.*t3051*t4957 - 1.*t2458*t5016 - 1.*t3164*t5040 + t5132 - 1.*t2397*t5248 + t5297) + t5311*t5324 + t2337*(t2142*t5016 + t2060*t5248 + t3164*t5342 + t5356 + t3051*t5382 + t5391) + t5296*t5399)*var2[15];
  p_output1[5]=t8913*var2[0] + (t1641*t8930 - 1.*t29*t8944)*var2[1] + (t29*t8930 + t1641*t8944)*var2[2] + (t3529*t9216 + t3604*t9268 + t2267*(t9070 + t9116 - 1.*t3368*t9233 - 1.*t2541*t9242 - 1.*t3292*t9268 - 1.*t3336*t9296) + t3368*(t9138 + t9175 + t3292*t9216 + t2267*t9233 + t3429*t9242 + t3336*t9344))*var2[3] + (t3803*t9017 + t3841*t9114 + t3592*(t7845 + t8098 - 1.*t2533*t9054 + t9070 - 1.*t3223*t9087 + t9116) + t3447*(t8192 + t8209 + t2241*t9054 + t3223*t9129 + t9138 + t9175))*var2[4] + (t5426*t7345 + t5468*t8096 + t2039*(t7845 + t8098 - 1.*t2508*t8727 - 1.*t2473*t8733 - 1.*t3206*t8746 - 1.*t3168*t8755) + t2337*(t8192 + t8209 + t2210*t8727 + t2178*t8733 + t3206*t8771 + t3168*t8807))*var2[5] + (-0.15121*t7117 + 0.15121*t7136 + t5324*t7345 + t5399*t8096 + t2039*(-1.*t2397*t7785 - 1.*t2458*t7809 + t7845 - 1.*t3051*t8038 - 1.*t3164*t8081 + t8098) + t2337*(t2060*t7785 + t2142*t7809 + t3051*t8115 + t3164*t8187 + t8192 + t8209))*var2[15] + (0.281211*t6981 - 0.038749*t7104 - 1.*t1914*t8361 - 1.*t7336*t8402 - 1.*t2285*t8473 - 1.*t7864*t8534 + 7.e-6*(t2019*t8361 + t7219*t8402 + t2306*t8473 + t7892*t8534) + 4.e-6*(-1.*t1965*t8361 - 1.*t7311*t8402 - 1.*t2273*t8473 - 1.*t8023*t8534) + 1.e-6*(t7168 - 7.000000000455e-6*t857))*var2[16];
  p_output1[6]=t9390;
  p_output1[7]=t1810;
  p_output1[8]=t1641*t1766 + t1630*t29;
  p_output1[9]=t2267*t3529 + t3368*t3604;
  p_output1[10]=t3592*t3803 + t3447*t3841;
  p_output1[11]=t2039*t5426 + t2337*t5468;
  p_output1[12]=0.15121*t1462 - 0.15121*t1543 + t2039*t5324 + t2337*t5399;
  p_output1[13]=-0.038749*t1000 + 0.281211*t1229 - 1.*t1914*t8402 + 1.e-6*(7.e-6*t1422 + t1862 + t850) - 1.*t2285*t8534 + 4.e-6*(-1.*t1965*t8402 - 1.*t2273*t8534) + 7.e-6*(t2019*t8402 + t2306*t8534);
  p_output1[14]=-4.051285074010787e-7;
  p_output1[15]=(-1.*t1641*t2541 - 1.*t29*t3447)*var2[1] + t9585*var2[2];
  p_output1[16]=t2541*var2[0] - 1.*t29*t3331*var2[1] + t1641*t3331*var2[2] + ((-1.*t2267*t3336 - 1.*t3232*t3429 - 1.*t3292*t3429 - 1.*t3336*t3574)*t9390 + t2267*(t1766*t3232 + t1766*t3292 + t1840*t3336 + t3336*t9390) + t3429*t9673 + t1766*t9701)*var2[3];
  p_output1[17]=t1645*t3707*var2[0] + (t1641*t2533 + t1727*t29*t3707)*var2[1] + (t2533*t29 - 1.*t1641*t1727*t3707)*var2[2] + (t1645*t3819*t9673 + t1645*t3621*t9701 + t2267*(t1645*t3292*t3621 - 1.*t1727*t3336*t3621 - 1.*t1727*t1766*t3758 + t1645*t3758*t9390 + t9777 + t9801) + t9390*(-1.*t1645*t2267*t3758 + t1727*t3429*t3758 - 1.*t1645*t3292*t3819 + t1727*t3336*t3819 + t9896 + t9907))*var2[3] + (t2241*t9773 + t3592*(t3223*t3621 + t1755*t3758 + t9777 + t9801) + t1630*(-1.*t2241*t3758 - 1.*t3223*t3819 + t9896 + t9907) + t1755*t9940)*var2[4];
  p_output1[18]=t1645*t4344*var2[0] + (t1727*t29*t4344 + t1641*t4370)*var2[1] + (-1.*t1641*t1727*t4344 + t29*t4370)*var2[2] + ((t10304 + t10307 - 1.*t1645*t2267*t4445 + t1727*t3429*t4445 - 1.*t1645*t3292*t4512 + t1727*t3336*t4512)*t9390 + t2267*(t10294 + t10298 + t1645*t3292*t4190 - 1.*t1727*t3336*t4190 - 1.*t1727*t1766*t4445 + t1645*t4445*t9390) + t1645*t4512*t9673 + t1645*t4190*t9701)*var2[3] + (t3592*(t10294 + t10298 + t3223*t4190 + t1755*t4445) + t1630*(t10304 + t10307 - 1.*t2241*t4445 - 1.*t3223*t4512) + t4272*t9773 + t4203*t9940)*var2[4] + (t1719*(-1.*t2178*t3206 - 1.*t2178*t3947 - 1.*t2210*t4019 - 1.*t3168*t4103) + t2039*(t1616*t3206 + t1616*t3947 + t1572*t4019 + t3168*t4185))*var2[5];
  p_output1[19]=t6785*var2[0] + (t1641*t6414 - 1.*t29*t6815)*var2[1] + (t29*t6414 + t1641*t6815)*var2[2] + ((t10619 + t10644 - 1.*t3292*t6761 - 1.*t2267*t6850 - 1.*t3429*t6895 - 1.*t3336*t6931)*t9390 + t2267*(t10536 + t10538 + t3292*t6013 + t3336*t6128 + t1766*t6895 + t6850*t9390) + t6761*t9673 + t6013*t9701)*var2[3] + (t3592*(t10355 + t10359 + t10536 + t10538 + t3223*t5956 + t1755*t6597) + t1630*(t10406 + t10410 + t10619 + t10644 - 1.*t2241*t6597 - 1.*t3223*t6699) + t6295*t9773 + t6059*t9940)*var2[4] + (t10455*t5311 + t1719*(t10406 + t10410 - 1.*t2178*t5446 - 1.*t2210*t5458 - 1.*t3168*t5509 - 1.*t3206*t5523) + t10479*t5733 + t2039*(t10355 + t10359 + t1616*t5446 + t1572*t5458 + t3168*t5800 + t3206*t5919))*var2[5] + (-0.15121*t4957 + 0.15121*t5040 + t2039*(t10355 + t10359 + t3051*t4865 + t3164*t4931 + t1462*t5016 + t1543*t5248) + t10373*t5311 + t1719*(t10406 + t10410 - 1.*t2142*t5016 - 1.*t2060*t5248 - 1.*t3164*t5342 - 1.*t3051*t5382) + t10442*t5733)*var2[15];
  p_output1[20]=t9268*var2[0] + (t1641*t9114 - 1.*t29*t9296)*var2[1] + (t29*t9114 + t1641*t9296)*var2[2] + ((t11121 + t11164 - 1.*t3292*t9216 - 1.*t2267*t9233 - 1.*t3429*t9242 - 1.*t3336*t9344)*t9390 + t2267*(t11055 + t11075 + t3292*t8913 + t3336*t8944 + t1766*t9242 + t9233*t9390) + t9216*t9673 + t8913*t9701)*var2[3] + (t3592*(t10823 + t10835 + t11055 + t11075 + t3223*t8907 + t1755*t9054) + t1630*(t10843 + t10846 + t11121 + t11164 - 1.*t2241*t9054 - 1.*t3223*t9129) + t9017*t9773 + t8930*t9940)*var2[4] + (t10455*t7345 + t1719*(t10843 + t10846 - 1.*t2210*t8727 - 1.*t2178*t8733 - 1.*t3206*t8771 - 1.*t3168*t8807) + t10479*t8853 + t2039*(t10823 + t10835 + t1572*t8727 + t1616*t8733 + t3168*t8885 + t3206*t8904))*var2[5] + (t10373*t7345 + t2039*(t10823 + t10835 + t3051*t7117 + t3164*t7136 + t1543*t7785 + t1462*t7809) - 0.15121*t8038 + 0.15121*t8081 + t1719*(t10843 + t10846 - 1.*t2060*t7785 - 1.*t2142*t7809 - 1.*t3051*t8115 - 1.*t3164*t8187) + t10442*t8853)*var2[15] + (-1.*t10914*t1446 - 1.*t10893*t1914 - 1.*t10936*t7075 + 7.e-6*(t1000*t10914 + t10893*t2019 + t10936*t7104 + t10875*t7219) + 4.e-6*(-1.*t10914*t1229 - 1.*t10893*t1965 - 1.*t10936*t6981 - 1.*t10875*t7311) - 1.*t10875*t7336 - 0.038749*t7892 + 0.281211*t8023 + 1.e-6*(t7238 + 4.00000000026e-6*t857))*var2[16];
  p_output1[21]=t3368;
  p_output1[22]=t9585;
  p_output1[23]=t1641*t2541 + t29*t3447;
  p_output1[24]=t2267*t9673 + t9390*t9701;
  p_output1[25]=t3592*t9773 + t1630*t9940;
  p_output1[26]=t10479*t1719 + t10455*t2039;
  p_output1[27]=t10442*t1719 + t10373*t2039 - 0.15121*t2397 + 0.15121*t2458;
  p_output1[28]=-1.*t10936*t1446 - 1.*t10875*t1914 + 1.e-6*(t1117 + 4.e-6*(-1. + t1856) + t1930) + 4.e-6*(-1.*t10936*t1229 - 1.*t10875*t1965) + 7.e-6*(t1000*t10936 + t10875*t2019) + 0.281211*t2273 - 0.038749*t2306;
  p_output1[29]=0.3000000410492048;
  p_output1[30]=(-1.*t1641*t3429 - 1.*t29*t3592)*var2[1] + t11661*var2[2];
  p_output1[31]=t3429*var2[0] - 1.*t29*t3574*var2[1] + t1641*t3574*var2[2] + (t11755*t1766 + t11717*t2541 + (t2541*t3232 + t2541*t3292 + t3331*t3336 + t3336*t3368)*t9390 + t3368*(-1.*t1766*t3232 - 1.*t1766*t3292 - 1.*t1840*t3336 - 1.*t3336*t9390))*var2[3];
  p_output1[32]=t1645*t3819*var2[0] + (t1641*t2241 + t1727*t29*t3819)*var2[1] + (t2241*t29 - 1.*t1641*t1727*t3819)*var2[2] + (t11755*t1645*t3621 + t11717*t1645*t3707 + (t11830 + t11837 + t1645*t3292*t3707 - 1.*t1727*t3336*t3707 - 1.*t1727*t2541*t3758 + t1645*t3368*t3758)*t9390 + t3368*(t11800 + t11808 - 1.*t1645*t3292*t3621 + t1727*t3336*t3621 + t1727*t1766*t3758 - 1.*t1645*t3758*t9390))*var2[3] + (t11847*t1755 + t11787*t2533 + t3447*(t11800 + t11808 - 1.*t3223*t3621 - 1.*t1755*t3758) + t1630*(t11830 + t11837 + t3223*t3707 + t2533*t3758))*var2[4];
  p_output1[33]=t1645*t4512*var2[0] + (t1641*t4272 + t1727*t29*t4512)*var2[1] + (t29*t4272 - 1.*t1641*t1727*t4512)*var2[2] + (t11755*t1645*t4190 + t11717*t1645*t4344 + (t12292 + t12302 + t1645*t3292*t4344 - 1.*t1727*t3336*t4344 - 1.*t1727*t2541*t4445 + t1645*t3368*t4445)*t9390 + t3368*(t12286 + t12288 - 1.*t1645*t3292*t4190 + t1727*t3336*t4190 + t1727*t1766*t4445 - 1.*t1645*t4445*t9390))*var2[3] + (t11847*t4203 + t11787*t4370 + t3447*(t12286 + t12288 - 1.*t3223*t4190 - 1.*t1755*t4445) + t1630*(t12292 + t12302 + t3223*t4344 + t2533*t4445))*var2[4] + (t1719*(t2473*t3206 + t2473*t3947 + t3168*t4000 + t2508*t4019) + t2337*(-1.*t1616*t3206 - 1.*t1616*t3947 - 1.*t1572*t4019 - 1.*t3168*t4185))*var2[5];
  p_output1[34]=t6761*var2[0] + (t1641*t6295 - 1.*t29*t6931)*var2[1] + (t29*t6295 + t1641*t6931)*var2[2] + (t11755*t6013 + t11717*t6785 + (t12580 + t12582 + t3292*t6785 + t3336*t6815 + t3368*t6850 + t2541*t6895)*t9390 + t3368*(t12557 + t12558 - 1.*t3292*t6013 - 1.*t3336*t6128 - 1.*t1766*t6895 - 1.*t6850*t9390))*var2[3] + (t11847*t6059 + t11787*t6414 + t3447*(t12430 + t12434 + t12557 + t12558 - 1.*t3223*t5956 - 1.*t1755*t6597) + t1630*(t12453 + t12458 + t12580 + t12582 + t3223*t6342 + t2533*t6597))*var2[4] + (t12486*t5296 + t1719*(t12453 + t12458 + t3206*t5434 + t3168*t5442 + t2473*t5446 + t2508*t5458) + t12512*t5733 + t2337*(t12430 + t12434 - 1.*t1616*t5446 - 1.*t1572*t5458 - 1.*t3168*t5800 - 1.*t3206*t5919))*var2[5] + (t2337*(t12430 + t12434 - 1.*t3051*t4865 - 1.*t3164*t4931 - 1.*t1462*t5016 - 1.*t1543*t5248) + t1719*(t12453 + t12458 + t3051*t4957 + t2458*t5016 + t3164*t5040 + t2397*t5248) + t12447*t5296 + 0.15121*t5342 - 0.15121*t5382 + t12478*t5733)*var2[15];
  p_output1[35]=t9216*var2[0] + (t1641*t9017 - 1.*t29*t9344)*var2[1] + (t29*t9017 + t1641*t9344)*var2[2] + (t11755*t8913 + t11717*t9268 + (t12960 + t12963 + t3368*t9233 + t2541*t9242 + t3292*t9268 + t3336*t9296)*t9390 + t3368*(t12951 + t12954 - 1.*t3292*t8913 - 1.*t3336*t8944 - 1.*t1766*t9242 - 1.*t9233*t9390))*var2[3] + (t11847*t8930 + t3447*(t12647 + t12651 + t12951 + t12954 - 1.*t3223*t8907 - 1.*t1755*t9054) + t1630*(t12661 + t12666 + t12960 + t12963 + t2533*t9054 + t3223*t9087) + t11787*t9114)*var2[4] + (t12486*t8096 + t1719*(t12661 + t12666 + t2508*t8727 + t2473*t8733 + t3206*t8746 + t3168*t8755) + t12512*t8853 + t2337*(t12647 + t12651 - 1.*t1572*t8727 - 1.*t1616*t8733 - 1.*t3168*t8885 - 1.*t3206*t8904))*var2[5] + (t2337*(t12647 + t12651 - 1.*t3051*t7117 - 1.*t3164*t7136 - 1.*t1543*t7785 - 1.*t1462*t7809) + t1719*(t12661 + t12666 + t2397*t7785 + t2458*t7809 + t3051*t8038 + t3164*t8081) + t12447*t8096 - 0.15121*t8115 + 0.15121*t8187 + t12478*t8853)*var2[15] + (-1.*t12727*t1446 - 1.*t12772*t2285 - 1.*t12737*t7075 - 0.038749*t7219 + 0.281211*t7311 - 1.*t12692*t7864 + 7.e-6*(t1000*t12727 + t12772*t2306 + t12737*t7104 + t12692*t7892) + 4.e-6*(-1.*t1229*t12727 - 1.*t12772*t2273 - 1.*t12737*t6981 - 1.*t12692*t8023) + 1.e-6*(-7.e-6*t7325 + 4.e-6*t7381 - 6.5e-11*t857))*var2[16];
  p_output1[36]=t2267;
  p_output1[37]=t11661;
  p_output1[38]=t1641*t3429 + t29*t3592;
  p_output1[39]=t11717*t3368 + t11755*t9390;
  p_output1[40]=t11847*t1630 + t11787*t3447;
  p_output1[41]=t12512*t1719 + t12486*t2337;
  p_output1[42]=t12478*t1719 - 0.15121*t2060 + 0.15121*t2142 + t12447*t2337;
  p_output1[43]=-1.*t12737*t1446 + 0.281211*t1965 - 0.038749*t2019 + 4.e-6*(-1.*t1229*t12737 - 1.*t12692*t2273) - 1.*t12692*t2285 + 7.e-6*(t1000*t12737 + t12692*t2306) + 1.e-6*(1. + t1392 - 7.e-6*t1872 + 4.e-6*t2783);
  p_output1[44]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RrFoot_DiagonalStance2.hh"

namespace TrotStance2
{

void J_dh_RrFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
