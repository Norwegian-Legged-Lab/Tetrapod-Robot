/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:06 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t411;
  double t442;
  double t458;
  double t220;
  double t222;
  double t290;
  double t522;
  double t357;
  double t558;
  double t489;
  double t516;
  double t581;
  double t595;
  double t650;
  double t821;
  double t711;
  double t747;
  double t761;
  double t764;
  double t779;
  double t786;
  double t789;
  double t986;
  double t1021;
  double t1026;
  double t1040;
  double t1058;
  double t348;
  double t1391;
  double t1854;
  double t1397;
  double t1402;
  double t1403;
  double t1519;
  double t1614;
  double t1642;
  double t1752;
  double t1785;
  double t1786;
  double t1790;
  double t1174;
  double t1994;
  double t2026;
  double t2094;
  double t2123;
  double t2125;
  double t2135;
  double t2155;
  double t2158;
  double t2232;
  double t2299;
  double t135;
  double t683;
  double t687;
  double t887;
  double t945;
  double t402;
  double t1128;
  double t1154;
  double t2610;
  double t2620;
  double t2621;
  double t2713;
  double t2714;
  double t2741;
  double t2799;
  double t2864;
  double t2885;
  double t2996;
  double t2999;
  double t3004;
  double t3021;
  double t3047;
  double t3055;
  double t3057;
  double t3085;
  double t2465;
  double t3443;
  double t3424;
  double t3479;
  double t3497;
  double t3505;
  double t3511;
  double t3512;
  double t3556;
  double t3561;
  double t3570;
  double t3602;
  double t3609;
  double t3620;
  double t3641;
  double t3675;
  double t3761;
  double t3776;
  double t3792;
  double t3815;
  double t3818;
  double t3825;
  double t3840;
  double t3844;
  double t3845;
  double t3881;
  double t3908;
  double t3937;
  double t3994;
  double t2416;
  double t2429;
  double t2449;
  double t1802;
  double t2334;
  double t2342;
  double t3144;
  double t3151;
  double t3163;
  double t3043;
  double t3090;
  double t3097;
  double t4009;
  double t4013;
  double t4029;
  double t3846;
  double t4001;
  double t4007;
  double t4192;
  double t4288;
  double t4326;
  double t4567;
  double t4619;
  double t4623;
  double t4627;
  double t4662;
  double t4690;
  double t4693;
  double t4706;
  double t4720;
  double t4723;
  double t4725;
  double t4752;
  double t4759;
  double t4777;
  double t4780;
  double t4783;
  double t4599;
  double t4602;
  double t4568;
  double t4928;
  double t4929;
  double t4930;
  double t4939;
  double t4953;
  double t4984;
  double t5011;
  double t5025;
  double t5167;
  double t5168;
  double t5210;
  double t5212;
  double t5216;
  double t5218;
  double t5219;
  double t5237;
  double t5273;
  double t5274;
  double t5276;
  double t5286;
  double t5291;
  double t5296;
  double t5310;
  double t5312;
  double t5318;
  double t5322;
  double t5323;
  double t5325;
  double t5327;
  double t5328;
  double t5332;
  double t5333;
  double t5334;
  double t5338;
  double t5340;
  double t5352;
  double t5353;
  double t5355;
  double t5356;
  double t5375;
  double t5383;
  double t5403;
  double t5407;
  double t5543;
  double t5520;
  double t5526;
  double t5531;
  double t5557;
  double t5584;
  double t5596;
  double t5601;
  double t5603;
  double t5624;
  double t5633;
  double t5635;
  double t5641;
  double t5642;
  double t5646;
  double t5647;
  double t5648;
  double t5652;
  double t5707;
  double t5708;
  double t5721;
  double t5722;
  double t5732;
  double t5735;
  double t5737;
  double t5760;
  double t5762;
  double t5763;
  double t5770;
  double t5804;
  double t5806;
  double t5813;
  double t5832;
  double t663;
  double t808;
  double t1067;
  double t1075;
  double t2356;
  double t2495;
  double t2515;
  double t2640;
  double t2835;
  double t2929;
  double t2985;
  double t3132;
  double t3198;
  double t3260;
  double t3522;
  double t3667;
  double t3820;
  double t3821;
  double t4008;
  double t4030;
  double t4040;
  double t1104;
  double t2569;
  double t2586;
  double t5938;
  double t5956;
  double t2992;
  double t3320;
  double t3365;
  double t3822;
  double t4068;
  double t4078;
  double t4147;
  double t4193;
  double t4220;
  double t4296;
  double t4310;
  double t4339;
  double t4362;
  double t4368;
  double t4385;
  double t4402;
  double t4413;
  double t4416;
  double t4418;
  double t4439;
  double t4444;
  double t4445;
  double t4455;
  double t4487;
  double t4493;
  double t4503;
  double t4541;
  double t4842;
  double t4852;
  double t4864;
  double t4707;
  double t4787;
  double t4832;
  double t4570;
  double t4588;
  double t4603;
  double t4605;
  double t4838;
  double t4877;
  double t4879;
  double t5075;
  double t5081;
  double t5093;
  double t4952;
  double t5039;
  double t5056;
  double t4899;
  double t4901;
  double t4912;
  double t4916;
  double t5058;
  double t5098;
  double t5120;
  double t5254;
  double t5255;
  double t5258;
  double t5214;
  double t5249;
  double t5251;
  double t5143;
  double t5144;
  double t5148;
  double t5152;
  double t5252;
  double t5259;
  double t5260;
  double t5451;
  double t5465;
  double t5469;
  double t5372;
  double t5417;
  double t5421;
  double t5299;
  double t5326;
  double t5341;
  double t5342;
  double t5441;
  double t5487;
  double t5494;
  double t5665;
  double t5673;
  double t5675;
  double t5643;
  double t5656;
  double t5657;
  double t5539;
  double t5593;
  double t5629;
  double t5631;
  double t5664;
  double t5691;
  double t5700;
  double t5847;
  double t5848;
  double t5850;
  double t5795;
  double t5836;
  double t5838;
  double t5716;
  double t5725;
  double t5739;
  double t5754;
  double t5839;
  double t5853;
  double t5857;
  double t5939;
  double t5941;
  double t5944;
  double t5976;
  double t5977;
  double t5978;
  double t6016;
  double t6017;
  double t6019;
  double t6449;
  double t6451;
  double t6453;
  double t6455;
  double t6472;
  double t6496;
  double t6497;
  double t6499;
  double t6531;
  double t6040;
  double t6042;
  double t6047;
  double t6050;
  double t6052;
  double t6055;
  double t6060;
  double t6069;
  double t6070;
  double t6102;
  double t6104;
  double t6110;
  double t6116;
  double t6127;
  double t6128;
  double t6139;
  double t6154;
  double t6166;
  double t6169;
  double t6172;
  double t6181;
  double t6188;
  double t6190;
  double t6196;
  double t6201;
  double t6205;
  double t6208;
  double t6217;
  double t6219;
  double t6220;
  double t6223;
  double t6224;
  double t6232;
  double t6249;
  double t6252;
  double t6257;
  double t6259;
  double t6260;
  double t6262;
  double t6270;
  double t6271;
  double t6289;
  double t6345;
  double t6348;
  double t6351;
  double t6380;
  double t6386;
  double t6401;
  double t6432;
  double t6437;
  double t6440;
  double t5896;
  double t5900;
  double t5902;
  double t6794;
  double t6810;
  double t6813;
  double t6817;
  double t6819;
  double t6820;
  double t6821;
  double t6826;
  double t6827;
  double t6829;
  double t6833;
  double t6841;
  double t6842;
  double t6843;
  double t6846;
  double t6847;
  double t6848;
  double t6851;
  double t6852;
  double t6853;
  double t6858;
  double t6859;
  double t6861;
  double t6863;
  double t6866;
  double t6867;
  double t6876;
  double t6879;
  double t6886;
  double t6888;
  double t6889;
  double t6893;
  double t6894;
  double t6926;
  double t6801;
  double t6805;
  double t6902;
  double t6904;
  double t6906;
  double t6914;
  double t6917;
  double t6930;
  double t6935;
  double t6940;
  double t6948;
  double t6961;
  double t6971;
  double t6974;
  double t6977;
  double t6986;
  double t6989;
  double t6990;
  double t6997;
  double t6998;
  double t6999;
  double t7001;
  double t7002;
  double t7003;
  double t7007;
  double t6789;
  double t6790;
  double t6797;
  double t6800;
  double t6806;
  double t6808;
  double t6840;
  double t6862;
  double t6896;
  double t6898;
  double t6911;
  double t6979;
  double t7009;
  double t7010;
  double t7011;
  double t7018;
  double t7019;
  double t7020;
  double t7021;
  double t7024;
  double t7026;
  double t5888;
  double t5891;
  double t5895;
  double t7063;
  double t7065;
  double t7066;
  double t7056;
  double t7058;
  double t7059;
  double t6901;
  double t7033;
  double t7039;
  double t7075;
  double t7076;
  double t7078;
  double t5921;
  double t5935;
  double t5936;
  double t7272;
  double t7273;
  double t7275;
  double t7079;
  double t7082;
  double t7083;
  double t7086;
  double t7095;
  double t7096;
  double t7097;
  double t7099;
  double t7117;
  double t7121;
  double t7122;
  double t7123;
  double t7150;
  double t7151;
  double t7152;
  double t7153;
  double t7184;
  double t7190;
  double t7204;
  double t7205;
  double t7245;
  double t7249;
  double t7251;
  double t7261;
  double t7444;
  double t7445;
  double t7446;
  double t7448;
  double t7430;
  double t7434;
  double t7457;
  double t7461;
  double t7462;
  double t7443;
  double t7451;
  double t7452;
  double t4926;
  double t5121;
  double t5124;
  double t4614;
  double t4892;
  double t4894;
  double t7587;
  double t7590;
  double t7592;
  double t7593;
  double t7598;
  double t7601;
  double t7602;
  double t7603;
  double t7607;
  double t7613;
  double t7614;
  double t7618;
  double t7620;
  double t7621;
  double t7622;
  double t7623;
  double t7624;
  double t7625;
  double t7626;
  double t7641;
  double t7642;
  double t7643;
  double t7612;
  double t7629;
  double t7633;
  double t7649;
  double t7654;
  double t7655;
  double t7656;
  double t7657;
  double t7659;
  double t7671;
  double t7674;
  double t7675;
  double t7678;
  double t7679;
  double t7682;
  double t7637;
  double t7644;
  double t7645;
  double t7677;
  double t7685;
  double t7687;
  double t7689;
  double t7690;
  double t7691;
  double t5164;
  double t5263;
  double t5264;
  double t5759;
  double t5870;
  double t5872;
  double t5632;
  double t5701;
  double t5703;
  double t7823;
  double t7824;
  double t7826;
  double t7827;
  double t7828;
  double t7829;
  double t7830;
  double t7834;
  double t7836;
  double t7837;
  double t7838;
  double t7839;
  double t7842;
  double t7843;
  double t7844;
  double t7845;
  double t7847;
  double t7850;
  double t7851;
  double t7854;
  double t7856;
  double t7858;
  double t7860;
  double t7863;
  double t7835;
  double t7846;
  double t7865;
  double t7866;
  double t7869;
  double t7872;
  double t7874;
  double t7877;
  double t7883;
  double t7884;
  double t7886;
  double t7868;
  double t7878;
  double t7879;
  double t7892;
  double t7893;
  double t7895;
  double t7896;
  double t7898;
  double t7899;
  double t7900;
  double t7882;
  double t7887;
  double t7889;
  double t7897;
  double t7901;
  double t7902;
  double t7906;
  double t7907;
  double t7908;
  double t5343;
  double t5505;
  double t5511;
  double t7270;
  double t7271;
  double t7284;
  double t7285;
  double t7330;
  double t7331;
  double t7348;
  double t7349;
  double t7367;
  double t7370;
  double t7398;
  double t7401;
  double t7988;
  double t7990;
  double t7991;
  double t8003;
  double t8004;
  double t8005;
  double t7455;
  double t7456;
  double t7485;
  double t7487;
  double t8009;
  double t8010;
  double t8011;
  double t7511;
  double t7512;
  double t7527;
  double t7531;
  double t8022;
  double t8023;
  double t8024;
  double t8032;
  double t8033;
  double t8034;
  double t7549;
  double t7550;
  double t7560;
  double t7561;
  double t8041;
  double t8042;
  double t8043;
  double t7586;
  double t7646;
  double t7702;
  double t7703;
  double t7717;
  double t7719;
  double t7747;
  double t7748;
  double t7770;
  double t7773;
  double t7793;
  double t7796;
  double t7890;
  double t7891;
  double t7915;
  double t7916;
  double t7927;
  double t7928;
  double t7936;
  double t7937;
  double t7953;
  double t7954;
  double t7961;
  double t7962;
  double t8094;
  double t8095;
  double t8100;
  double t8101;
  double t8113;
  double t8114;
  double t8120;
  double t8121;
  double t8133;
  double t8134;
  double t8141;
  double t8142;
  double t8271;
  double t8272;
  double t8273;
  double t8275;
  double t8276;
  double t8277;
  double t8152;
  double t8153;
  double t8158;
  double t8159;
  double t8308;
  double t8309;
  double t8310;
  double t8167;
  double t8168;
  double t8173;
  double t8174;
  double t8319;
  double t8320;
  double t8321;
  double t8340;
  double t8345;
  double t8346;
  double t8184;
  double t8185;
  double t8190;
  double t8191;
  double t8355;
  double t8356;
  double t8357;
  double t8439;
  double t8440;
  double t8441;
  double t8449;
  double t8450;
  double t8452;
  double t8466;
  double t8467;
  double t8468;
  double t8476;
  double t8478;
  double t8479;
  double t8491;
  double t8492;
  double t8494;
  double t8502;
  double t8503;
  double t8504;
  double t8588;
  double t8589;
  double t8590;
  double t8591;
  double t8593;
  double t8594;
  double t8595;
  double t8596;
  double t8597;
  double t8598;
  double t8599;
  double t8601;
  double t8602;
  double t8603;
  double t8604;
  double t8606;
  double t8607;
  double t8608;
  double t8610;
  double t8611;
  double t8612;
  double t8613;
  double t8635;
  double t8636;
  double t8637;
  double t8638;
  double t8640;
  double t8641;
  double t8642;
  double t8643;
  double t8644;
  double t8645;
  double t8646;
  double t8648;
  double t8649;
  double t8650;
  double t8651;
  double t8652;
  double t8653;
  double t8654;
  double t8656;
  double t8657;
  double t8658;
  double t8659;
  double t8683;
  double t8684;
  double t8686;
  double t8690;
  double t8691;
  double t8692;
  double t8693;
  double t8695;
  double t8696;
  double t8697;
  double t8698;
  double t8700;
  double t8701;
  double t8702;
  double t8703;
  double t8704;
  double t8705;
  double t8707;
  double t8709;
  double t8711;
  double t8712;
  double t8713;
  t411 = Cos(var1[17]);
  t442 = -1.*t411;
  t458 = 1. + t442;
  t220 = Cos(var1[16]);
  t222 = -1.*t220;
  t290 = 1. + t222;
  t522 = Sin(var1[17]);
  t357 = Sin(var1[16]);
  t558 = 4.e-6*t522;
  t489 = 1.000000000016*t458;
  t516 = -7.e-6*t458;
  t581 = t516 + t558;
  t595 = -7.e-6*t581;
  t650 = -1. + t489 + t595;
  t821 = 4.e-6*t290;
  t711 = 2.8e-11*t458;
  t747 = 4.e-6*t458;
  t761 = 7.e-6*t522;
  t764 = t747 + t761;
  t779 = -7.e-6*t764;
  t786 = -1.*t522;
  t789 = t711 + t779 + t786;
  t986 = -6.5e-11*t458;
  t1021 = 1. + t986;
  t1026 = -7.e-6*t1021;
  t1040 = 7.e-6*t458;
  t1058 = t1026 + t1040 + t558;
  t348 = -2.8e-11*t290;
  t1391 = -7.e-6*t290;
  t1854 = Cos(var1[15]);
  t1397 = -4.e-6*t357;
  t1402 = t1391 + t1397;
  t1403 = t1402*t650;
  t1519 = -7.e-6*t357;
  t1614 = t821 + t1519;
  t1642 = t1614*t789;
  t1752 = -6.5e-11*t290;
  t1785 = 1. + t1752;
  t1786 = t1785*t1058;
  t1790 = t1403 + t1642 + t1786;
  t1174 = Sin(var1[15]);
  t1994 = -1.000000000016*t290;
  t2026 = 1. + t1994;
  t2094 = t2026*t650;
  t2123 = -1.*t357;
  t2125 = t348 + t2123;
  t2135 = t2125*t789;
  t2155 = 4.e-6*t357;
  t2158 = t1391 + t2155;
  t2232 = t2158*t1058;
  t2299 = t2094 + t2135 + t2232;
  t135 = Cos(var1[4]);
  t683 = -1.000000000049*t290;
  t687 = 1. + t683;
  t887 = 7.e-6*t357;
  t945 = t821 + t887;
  t402 = t348 + t357;
  t1128 = Sin(var1[4]);
  t1154 = Cos(var1[5]);
  t2610 = 1.000000000049*t458;
  t2620 = 4.e-6*t764;
  t2621 = -1. + t2610 + t2620;
  t2713 = 4.e-6*t1021;
  t2714 = -1. + t411;
  t2741 = 4.e-6*t2714;
  t2799 = t2713 + t2741 + t761;
  t2864 = 4.e-6*t581;
  t2885 = t711 + t2864 + t522;
  t2996 = t2125*t2621;
  t2999 = t2158*t2799;
  t3004 = t2026*t2885;
  t3021 = t2996 + t2999 + t3004;
  t3047 = t1614*t2621;
  t3055 = t1785*t2799;
  t3057 = t1402*t2885;
  t3085 = t3047 + t3055 + t3057;
  t2465 = Sin(var1[5]);
  t3443 = -4.e-6*t522;
  t3424 = 6.5e-11*t458;
  t3479 = t516 + t3443;
  t3497 = 7.e-6*t3479;
  t3505 = t2741 + t761;
  t3511 = 4.e-6*t3505;
  t3512 = -1. + t3424 + t3497 + t3511;
  t3556 = -1. + t2610;
  t3561 = 4.e-6*t3556;
  t3570 = -7.e-6*t522;
  t3602 = -2.8e-11*t458;
  t3609 = t3602 + t522;
  t3620 = 7.e-6*t3609;
  t3641 = t3561 + t2741 + t3570 + t3620;
  t3675 = -1.000000000016*t458;
  t3761 = 1. + t3675;
  t3776 = 7.e-6*t3761;
  t3792 = t711 + t522;
  t3815 = 4.e-6*t3792;
  t3818 = t3776 + t1040 + t3443 + t3815;
  t3825 = t2158*t3512;
  t3840 = t2125*t3641;
  t3844 = t2026*t3818;
  t3845 = t3825 + t3840 + t3844;
  t3881 = t1785*t3512;
  t3908 = t1614*t3641;
  t3937 = t1402*t3818;
  t3994 = t3881 + t3908 + t3937;
  t2416 = t1854*t1790;
  t2429 = t1174*t2299;
  t2449 = t2416 + t2429;
  t1802 = -1.*t1174*t1790;
  t2334 = t1854*t2299;
  t2342 = t1802 + t2334;
  t3144 = t1174*t3021;
  t3151 = t1854*t3085;
  t3163 = t3144 + t3151;
  t3043 = t1854*t3021;
  t3090 = -1.*t1174*t3085;
  t3097 = t3043 + t3090;
  t4009 = t1174*t3845;
  t4013 = t1854*t3994;
  t4029 = t4009 + t4013;
  t3846 = t1854*t3845;
  t4001 = -1.*t1174*t3994;
  t4007 = t3846 + t4001;
  t4192 = -1.*t2342*t2465;
  t4288 = -1.*t3097*t2465;
  t4326 = -1.*t4007*t2465;
  t4567 = -2.8e-11*t357;
  t4619 = -1.000000000016*t357*t650;
  t4623 = t222 + t4567;
  t4627 = t4623*t789;
  t4662 = 4.e-6*t220;
  t4690 = t4662 + t1519;
  t4693 = t4690*t1058;
  t4706 = t4619 + t4627 + t4693;
  t4720 = -4.e-6*t220;
  t4723 = t4720 + t1519;
  t4725 = t4723*t650;
  t4752 = -7.e-6*t220;
  t4759 = t4752 + t2155;
  t4777 = t4759*t789;
  t4780 = -6.5e-11*t357*t1058;
  t4783 = t4725 + t4777 + t4780;
  t4599 = 7.e-6*t220;
  t4602 = t4599 + t2155;
  t4568 = t220 + t4567;
  t4928 = t4759*t2621;
  t4929 = -6.5e-11*t357*t2799;
  t4930 = t4723*t2885;
  t4939 = t4928 + t4929 + t4930;
  t4953 = t4623*t2621;
  t4984 = t4690*t2799;
  t5011 = -1.000000000016*t357*t2885;
  t5025 = t4953 + t4984 + t5011;
  t5167 = -6.5e-11*t357*t3512;
  t5168 = t4759*t3641;
  t5210 = t4723*t3818;
  t5212 = t5167 + t5168 + t5210;
  t5216 = t4690*t3512;
  t5218 = t4623*t3641;
  t5219 = -1.000000000016*t357*t3818;
  t5237 = t5216 + t5218 + t5219;
  t5273 = -4.e-6*t411;
  t5274 = 2.8e-11*t522;
  t5276 = t411 + t5274;
  t5286 = 4.e-6*t5276;
  t5291 = -1.12e-16*t522;
  t5296 = t5273 + t5286 + t5291;
  t5310 = -7.e-6*t411;
  t5312 = -2.8e-11*t522;
  t5318 = t411 + t5312;
  t5322 = 7.e-6*t5318;
  t5323 = 1.96e-16*t522;
  t5325 = t5310 + t5322 + t5323;
  t5327 = t5273 + t3570;
  t5328 = 7.e-6*t5327;
  t5332 = 7.e-6*t411;
  t5333 = t5332 + t3443;
  t5334 = 4.e-6*t5333;
  t5338 = 6.5e-11*t522;
  t5340 = t5328 + t5334 + t5338;
  t5352 = t1402*t5296;
  t5353 = t1614*t5325;
  t5355 = t1785*t5340;
  t5356 = t5352 + t5353 + t5355;
  t5375 = t2026*t5296;
  t5383 = t2125*t5325;
  t5403 = t2158*t5340;
  t5407 = t5375 + t5383 + t5403;
  t5543 = 4.e-6*t411;
  t5520 = t5332 + t558;
  t5526 = -7.e-6*t5520;
  t5531 = t442 + t5526 + t5274;
  t5557 = 7.000000000455e-6*t522;
  t5584 = t5543 + t5557;
  t5596 = t5543 + t3570;
  t5601 = -7.e-6*t5596;
  t5603 = 1.000000000016*t522;
  t5624 = t5601 + t5603;
  t5633 = t2125*t5531;
  t5635 = t2158*t5584;
  t5641 = t2026*t5624;
  t5642 = t5633 + t5635 + t5641;
  t5646 = t1614*t5531;
  t5647 = t1785*t5584;
  t5648 = t1402*t5624;
  t5652 = t5646 + t5647 + t5648;
  t5707 = -4.00000000026e-6*t522;
  t5708 = t5332 + t5707;
  t5721 = 4.e-6*t5596;
  t5722 = t411 + t5721 + t5274;
  t5732 = 4.e-6*t5520;
  t5735 = 1.000000000049*t522;
  t5737 = t5732 + t5735;
  t5760 = t2158*t5708;
  t5762 = t2026*t5722;
  t5763 = t2125*t5737;
  t5770 = t5760 + t5762 + t5763;
  t5804 = t1785*t5708;
  t5806 = t1402*t5722;
  t5813 = t1614*t5737;
  t5832 = t5804 + t5806 + t5813;
  t663 = t402*t650;
  t808 = t687*t789;
  t1067 = t945*t1058;
  t1075 = t663 + t808 + t1067;
  t2356 = t1154*t2342;
  t2495 = -1.*t2449*t2465;
  t2515 = t2356 + t2495;
  t2640 = t687*t2621;
  t2835 = t945*t2799;
  t2929 = t402*t2885;
  t2985 = t2640 + t2835 + t2929;
  t3132 = t1154*t3097;
  t3198 = -1.*t3163*t2465;
  t3260 = t3132 + t3198;
  t3522 = t945*t3512;
  t3667 = t687*t3641;
  t3820 = t402*t3818;
  t3821 = t3522 + t3667 + t3820;
  t4008 = t1154*t4007;
  t4030 = -1.*t4029*t2465;
  t4040 = t4008 + t4030;
  t1104 = t135*t1075;
  t2569 = -1.*t1128*t2515;
  t2586 = t1104 + t2569;
  t5938 = Sin(var1[3]);
  t5956 = Cos(var1[3]);
  t2992 = t135*t2985;
  t3320 = -1.*t1128*t3260;
  t3365 = t2992 + t3320;
  t3822 = t135*t3821;
  t4068 = -1.*t1128*t4040;
  t4078 = t3822 + t4068;
  t4147 = -1.*t1154*t2449;
  t4193 = t4147 + t4192;
  t4220 = -1.*t1154*t3163;
  t4296 = t4220 + t4288;
  t4310 = -1.*t1154*t4029;
  t4339 = t4310 + t4326;
  t4362 = -1.*t1854*t1790;
  t4368 = -1.*t1174*t2299;
  t4385 = t4362 + t4368;
  t4402 = t1154*t4385;
  t4413 = t4402 + t4192;
  t4416 = -1.*t1174*t3021;
  t4418 = -1.*t1854*t3085;
  t4439 = t4416 + t4418;
  t4444 = t1154*t4439;
  t4445 = t4444 + t4288;
  t4455 = -1.*t1174*t3845;
  t4487 = -1.*t1854*t3994;
  t4493 = t4455 + t4487;
  t4503 = t1154*t4493;
  t4541 = t4503 + t4326;
  t4842 = t1174*t4706;
  t4852 = t1854*t4783;
  t4864 = t4842 + t4852;
  t4707 = t1854*t4706;
  t4787 = -1.*t1174*t4783;
  t4832 = t4707 + t4787;
  t4570 = t4568*t650;
  t4588 = -1.000000000049*t357*t789;
  t4603 = t4602*t1058;
  t4605 = t4570 + t4588 + t4603;
  t4838 = t1154*t4832;
  t4877 = -1.*t4864*t2465;
  t4879 = t4838 + t4877;
  t5075 = t1854*t4939;
  t5081 = t1174*t5025;
  t5093 = t5075 + t5081;
  t4952 = -1.*t1174*t4939;
  t5039 = t1854*t5025;
  t5056 = t4952 + t5039;
  t4899 = -1.000000000049*t357*t2621;
  t4901 = t4602*t2799;
  t4912 = t4568*t2885;
  t4916 = t4899 + t4901 + t4912;
  t5058 = t1154*t5056;
  t5098 = -1.*t5093*t2465;
  t5120 = t5058 + t5098;
  t5254 = t1854*t5212;
  t5255 = t1174*t5237;
  t5258 = t5254 + t5255;
  t5214 = -1.*t1174*t5212;
  t5249 = t1854*t5237;
  t5251 = t5214 + t5249;
  t5143 = t4602*t3512;
  t5144 = -1.000000000049*t357*t3641;
  t5148 = t4568*t3818;
  t5152 = t5143 + t5144 + t5148;
  t5252 = t1154*t5251;
  t5259 = -1.*t5258*t2465;
  t5260 = t5252 + t5259;
  t5451 = t1854*t5356;
  t5465 = t1174*t5407;
  t5469 = t5451 + t5465;
  t5372 = -1.*t1174*t5356;
  t5417 = t1854*t5407;
  t5421 = t5372 + t5417;
  t5299 = t402*t5296;
  t5326 = t687*t5325;
  t5341 = t945*t5340;
  t5342 = t5299 + t5326 + t5341;
  t5441 = t1154*t5421;
  t5487 = -1.*t5469*t2465;
  t5494 = t5441 + t5487;
  t5665 = t1174*t5642;
  t5673 = t1854*t5652;
  t5675 = t5665 + t5673;
  t5643 = t1854*t5642;
  t5656 = -1.*t1174*t5652;
  t5657 = t5643 + t5656;
  t5539 = t687*t5531;
  t5593 = t945*t5584;
  t5629 = t402*t5624;
  t5631 = t5539 + t5593 + t5629;
  t5664 = t1154*t5657;
  t5691 = -1.*t5675*t2465;
  t5700 = t5664 + t5691;
  t5847 = t1174*t5770;
  t5848 = t1854*t5832;
  t5850 = t5847 + t5848;
  t5795 = t1854*t5770;
  t5836 = -1.*t1174*t5832;
  t5838 = t5795 + t5836;
  t5716 = t945*t5708;
  t5725 = t402*t5722;
  t5739 = t687*t5737;
  t5754 = t5716 + t5725 + t5739;
  t5839 = t1154*t5838;
  t5853 = -1.*t5850*t2465;
  t5857 = t5839 + t5853;
  t5939 = t1154*t2449;
  t5941 = t2342*t2465;
  t5944 = t5939 + t5941;
  t5976 = t1154*t3163;
  t5977 = t3097*t2465;
  t5978 = t5976 + t5977;
  t6016 = t1154*t4029;
  t6017 = t4007*t2465;
  t6019 = t6016 + t6017;
  t6449 = t5956*t5944;
  t6451 = -1.*t5938*t2586;
  t6453 = t6449 + t6451;
  t6455 = t5956*t5978;
  t6472 = -1.*t5938*t3365;
  t6496 = t6455 + t6472;
  t6497 = t5956*t6019;
  t6499 = -1.*t5938*t4078;
  t6531 = t6497 + t6499;
  t6040 = -1.*t1075*t1128;
  t6042 = -1.*t135*t2515;
  t6047 = t6040 + t6042;
  t6050 = -1.*t2985*t1128;
  t6052 = -1.*t135*t3260;
  t6055 = t6050 + t6052;
  t6060 = -1.*t3821*t1128;
  t6069 = -1.*t135*t4040;
  t6070 = t6060 + t6069;
  t6102 = t4385*t2465;
  t6104 = t2356 + t6102;
  t6110 = t4439*t2465;
  t6116 = t3132 + t6110;
  t6127 = t4493*t2465;
  t6128 = t4008 + t6127;
  t6139 = t1154*t4864;
  t6154 = t4832*t2465;
  t6166 = t6139 + t6154;
  t6169 = t135*t4605;
  t6172 = -1.*t1128*t4879;
  t6181 = t6169 + t6172;
  t6188 = t1154*t5093;
  t6190 = t5056*t2465;
  t6196 = t6188 + t6190;
  t6201 = t135*t4916;
  t6205 = -1.*t1128*t5120;
  t6208 = t6201 + t6205;
  t6217 = t1154*t5258;
  t6219 = t5251*t2465;
  t6220 = t6217 + t6219;
  t6223 = t135*t5152;
  t6224 = -1.*t1128*t5260;
  t6232 = t6223 + t6224;
  t6249 = t1154*t5469;
  t6252 = t5421*t2465;
  t6257 = t6249 + t6252;
  t6259 = t135*t5342;
  t6260 = -1.*t1128*t5494;
  t6262 = t6259 + t6260;
  t6270 = t1154*t5675;
  t6271 = t5657*t2465;
  t6289 = t6270 + t6271;
  t6345 = t135*t5631;
  t6348 = -1.*t1128*t5700;
  t6351 = t6345 + t6348;
  t6380 = t1154*t5850;
  t6386 = t5838*t2465;
  t6401 = t6380 + t6386;
  t6432 = t135*t5754;
  t6437 = -1.*t1128*t5857;
  t6440 = t6432 + t6437;
  t5896 = t2985*t1128;
  t5900 = t135*t3260;
  t5902 = t5896 + t5900;
  t6794 = 2.8e-11*t290;
  t6810 = 2.826290000000002e-7*var1[17];
  t6813 = -0.148715*t1021;
  t6817 = -2.18904205e-16*t458;
  t6819 = t747 + t3570;
  t6820 = -0.038576*t6819;
  t6821 = -0.80315*t3479;
  t6826 = t1040 + t558;
  t6827 = -0.5031510000080001*t6826;
  t6829 = -0.038575000014*t3505;
  t6833 = t6810 + t6813 + t6817 + t6820 + t6821 + t6827 + t6829;
  t6841 = 1.1305160000000008e-12*var1[17];
  t6842 = -1.000000000049*t458;
  t6843 = 1. + t6842;
  t6846 = -0.038576*t6843;
  t6847 = -0.03857500001589017*t458;
  t6848 = t711 + t786;
  t6851 = -0.5031510000080001*t6848;
  t6852 = t2741 + t3570;
  t6853 = -3.367757e-6*t6852;
  t6858 = -0.148715*t764;
  t6859 = -0.80315*t3609;
  t6861 = t6841 + t6846 + t6847 + t6851 + t6853 + t6858 + t6859;
  t6863 = -1.9784030000000015e-12*var1[17];
  t6866 = -0.80315*t3761;
  t6867 = -0.5031510000160505*t458;
  t6876 = t3602 + t786;
  t6879 = -0.038576*t6876;
  t6886 = t1040 + t3443;
  t6888 = -3.367757e-6*t6886;
  t6889 = -0.148715*t581;
  t6893 = -0.038575000014*t3792;
  t6894 = t6863 + t6866 + t6867 + t6879 + t6888 + t6889 + t6893;
  t6926 = 7.e-6*t290;
  t6801 = -1. + t220;
  t6805 = 4.e-6*t6801;
  t6902 = -1.*t1854;
  t6904 = 1. + t6902;
  t6906 = -0.15121*t6904;
  t6914 = -2.7726089999999997e-12*var1[16];
  t6917 = -0.2812110000084994*t290;
  t6930 = t6926 + t1397;
  t6935 = -1.8134809999999998e-6*t6930;
  t6940 = t6794 + t357;
  t6948 = -0.038749000006999997*t6940;
  t6961 = t2158*t6833;
  t6971 = t2125*t6861;
  t6974 = t2026*t6894;
  t6977 = t6914 + t6917 + t6935 + t6948 + t6961 + t6971 + t6974;
  t6986 = 3.9608699999999997e-7*var1[16];
  t6989 = -1.1787626499999999e-16*t290;
  t6990 = t6926 + t2155;
  t6997 = -0.281211000004*t6990;
  t6998 = t6805 + t887;
  t6999 = -0.038749000006999997*t6998;
  t7001 = t1785*t6833;
  t7002 = t1614*t6861;
  t7003 = t1402*t6894;
  t7007 = t6986 + t6989 + t6997 + t6999 + t7001 + t7002 + t7003;
  t6789 = 1.5843479999999999e-12*var1[16];
  t6790 = -0.03874900000889869*t290;
  t6797 = t6794 + t2123;
  t6800 = -0.281211000004*t6797;
  t6806 = t6805 + t1519;
  t6808 = -1.8134809999999998e-6*t6806;
  t6840 = t945*t6833;
  t6862 = t687*t6861;
  t6896 = t402*t6894;
  t6898 = t6789 + t6790 + t6800 + t6808 + t6840 + t6862 + t6896;
  t6911 = -0.15121*t1174;
  t6979 = t1854*t6977;
  t7009 = -1.*t1174*t7007;
  t7010 = t6906 + t6911 + t6979 + t7009;
  t7011 = t1154*t7010;
  t7018 = 0.15121*t1174;
  t7019 = t1174*t6977;
  t7020 = t1854*t7007;
  t7021 = t6906 + t7018 + t7019 + t7020;
  t7024 = -1.*t7021*t2465;
  t7026 = t7011 + t7024;
  t5888 = t1075*t1128;
  t5891 = t135*t2515;
  t5895 = t5888 + t5891;
  t7063 = t135*t6898;
  t7065 = -1.*t1128*t7026;
  t7066 = t7063 + t7065;
  t7056 = t6898*t1128;
  t7058 = t135*t7026;
  t7059 = t7056 + t7058;
  t6901 = -1.*t6898*t1128;
  t7033 = -1.*t135*t7026;
  t7039 = t6901 + t7033;
  t7075 = t1154*t7021;
  t7076 = t7010*t2465;
  t7078 = t7075 + t7076;
  t5921 = t3821*t1128;
  t5935 = t135*t4040;
  t5936 = t5921 + t5935;
  t7272 = -1.*t1154*t7021;
  t7273 = -1.*t7010*t2465;
  t7275 = t7272 + t7273;
  t7079 = -1.*t5944*t7078;
  t7082 = -1.*t5895*t7059;
  t7083 = -1.*t2586*t7066;
  t7086 = t7079 + t7082 + t7083;
  t7095 = t5978*t7078;
  t7096 = t5902*t7059;
  t7097 = t3365*t7066;
  t7099 = t7095 + t7096 + t7097;
  t7117 = t5944*t7078;
  t7121 = t5895*t7059;
  t7122 = t2586*t7066;
  t7123 = t7117 + t7121 + t7122;
  t7150 = -1.*t7078*t6019;
  t7151 = -1.*t7059*t5936;
  t7152 = -1.*t7066*t4078;
  t7153 = t7150 + t7151 + t7152;
  t7184 = -1.*t5978*t7078;
  t7190 = -1.*t5902*t7059;
  t7204 = -1.*t3365*t7066;
  t7205 = t7184 + t7190 + t7204;
  t7245 = t7078*t6019;
  t7249 = t7059*t5936;
  t7251 = t7066*t4078;
  t7261 = t7245 + t7249 + t7251;
  t7444 = -0.15121*t1854;
  t7445 = -1.*t1174*t6977;
  t7446 = -1.*t1854*t7007;
  t7448 = t7444 + t6911 + t7445 + t7446;
  t7430 = 0.15121*t1854;
  t7434 = t7430 + t6911 + t6979 + t7009;
  t7457 = t1154*t7448;
  t7461 = -1.*t7434*t2465;
  t7462 = t7457 + t7461;
  t7443 = t1154*t7434;
  t7451 = t7448*t2465;
  t7452 = t7443 + t7451;
  t4926 = t4916*t1128;
  t5121 = t135*t5120;
  t5124 = t4926 + t5121;
  t4614 = t4605*t1128;
  t4892 = t135*t4879;
  t4894 = t4614 + t4892;
  t7587 = t4599 + t1397;
  t7590 = -0.038749000006999997*t7587;
  t7592 = t4662 + t887;
  t7593 = -0.281211000004*t7592;
  t7598 = -1.1787626499999999e-16*t357;
  t7601 = -6.5e-11*t357*t6833;
  t7602 = t4759*t6861;
  t7603 = t4723*t6894;
  t7607 = 3.9608699999999997e-7 + t7590 + t7593 + t7598 + t7601 + t7602 + t7603;
  t7613 = 2.8e-11*t357;
  t7614 = t220 + t7613;
  t7618 = -0.038749000006999997*t7614;
  t7620 = t4720 + t887;
  t7621 = -1.8134809999999998e-6*t7620;
  t7622 = -0.2812110000084994*t357;
  t7623 = t4690*t6833;
  t7624 = t4623*t6861;
  t7625 = -1.000000000016*t357*t6894;
  t7626 = -2.7726089999999997e-12 + t7618 + t7621 + t7622 + t7623 + t7624 + t7625;
  t7641 = -1.*t1174*t7607;
  t7642 = t1854*t7626;
  t7643 = t7641 + t7642;
  t7612 = t1854*t7607;
  t7629 = t1174*t7626;
  t7633 = t7612 + t7629;
  t7649 = t4752 + t1397;
  t7654 = -1.8134809999999998e-6*t7649;
  t7655 = t222 + t7613;
  t7656 = -0.281211000004*t7655;
  t7657 = -0.03874900000889869*t357;
  t7659 = t4602*t6833;
  t7671 = -1.000000000049*t357*t6861;
  t7674 = t4568*t6894;
  t7675 = 1.5843479999999999e-12 + t7654 + t7656 + t7657 + t7659 + t7671 + t7674;
  t7678 = t1154*t7643;
  t7679 = -1.*t7633*t2465;
  t7682 = t7678 + t7679;
  t7637 = t1154*t7633;
  t7644 = t7643*t2465;
  t7645 = t7637 + t7644;
  t7677 = t7675*t1128;
  t7685 = t135*t7682;
  t7687 = t7677 + t7685;
  t7689 = t135*t7675;
  t7690 = -1.*t1128*t7682;
  t7691 = t7689 + t7690;
  t5164 = t5152*t1128;
  t5263 = t135*t5260;
  t5264 = t5164 + t5263;
  t5759 = t5754*t1128;
  t5870 = t135*t5857;
  t5872 = t5759 + t5870;
  t5632 = t5631*t1128;
  t5701 = t135*t5700;
  t5703 = t5632 + t5701;
  t7823 = -0.80315*t5327;
  t7824 = -0.038575000014*t5333;
  t7826 = t5310 + t558;
  t7827 = -0.038576*t7826;
  t7828 = t5543 + t761;
  t7829 = -0.5031510000080001*t7828;
  t7830 = 9.666256095795e-12*t522;
  t7834 = 2.826290000000002e-7 + t7823 + t7824 + t7827 + t7829 + t7830;
  t7836 = t5310 + t3443;
  t7837 = -3.367757e-6*t7836;
  t7838 = -0.80315*t5318;
  t7839 = t442 + t5274;
  t7842 = -0.5031510000080001*t7839;
  t7843 = -0.148715*t5520;
  t7844 = 9.99986000053965e-7*t522;
  t7845 = 1.1305160000000008e-12 + t7837 + t7838 + t7842 + t7843 + t7844;
  t7847 = -0.148715*t5596;
  t7850 = t442 + t5312;
  t7851 = -0.038576*t7850;
  t7854 = -0.038575000014*t5276;
  t7856 = t5273 + t761;
  t7858 = -3.367757e-6*t7856;
  t7860 = 0.2999989999967999*t522;
  t7863 = -1.9784030000000015e-12 + t7847 + t7851 + t7854 + t7858 + t7860;
  t7835 = t2158*t7834;
  t7846 = t2125*t7845;
  t7865 = t2026*t7863;
  t7866 = t7835 + t7846 + t7865;
  t7869 = t1785*t7834;
  t7872 = t1614*t7845;
  t7874 = t1402*t7863;
  t7877 = t7869 + t7872 + t7874;
  t7883 = t1854*t7866;
  t7884 = -1.*t1174*t7877;
  t7886 = t7883 + t7884;
  t7868 = t1174*t7866;
  t7878 = t1854*t7877;
  t7879 = t7868 + t7878;
  t7892 = t945*t7834;
  t7893 = t687*t7845;
  t7895 = t402*t7863;
  t7896 = t7892 + t7893 + t7895;
  t7898 = t1154*t7886;
  t7899 = -1.*t7879*t2465;
  t7900 = t7898 + t7899;
  t7882 = t1154*t7879;
  t7887 = t7886*t2465;
  t7889 = t7882 + t7887;
  t7897 = t7896*t1128;
  t7901 = t135*t7900;
  t7902 = t7897 + t7901;
  t7906 = t135*t7896;
  t7907 = -1.*t1128*t7900;
  t7908 = t7906 + t7907;
  t5343 = t5342*t1128;
  t5505 = t135*t5494;
  t5511 = t5343 + t5505;
  t7270 = -1.*t5944*t7026;
  t7271 = -1.*t2515*t7078;
  t7284 = t5978*t7026;
  t7285 = t3260*t7078;
  t7330 = t5944*t7026;
  t7331 = t2515*t7078;
  t7348 = -1.*t7078*t4040;
  t7349 = -1.*t7026*t6019;
  t7367 = -1.*t5978*t7026;
  t7370 = -1.*t3260*t7078;
  t7398 = t7078*t4040;
  t7401 = t7026*t6019;
  t7988 = -1.*t1075*t6898;
  t7990 = -1.*t2515*t7026;
  t7991 = t7988 + t7990 + t7079;
  t8003 = t2985*t6898;
  t8004 = t3260*t7026;
  t8005 = t8003 + t8004 + t7095;
  t7455 = -1.*t5944*t7452;
  t7456 = -1.*t6104*t7078;
  t7485 = t5978*t7452;
  t7487 = t6116*t7078;
  t8009 = t1075*t6898;
  t8010 = t2515*t7026;
  t8011 = t8009 + t8010 + t7117;
  t7511 = t5944*t7452;
  t7512 = t6104*t7078;
  t7527 = -1.*t7078*t6128;
  t7531 = -1.*t7452*t6019;
  t8022 = -1.*t6898*t3821;
  t8023 = -1.*t7026*t4040;
  t8024 = t8022 + t8023 + t7150;
  t8032 = -1.*t2985*t6898;
  t8033 = -1.*t3260*t7026;
  t8034 = t8032 + t8033 + t7184;
  t7549 = -1.*t5978*t7452;
  t7550 = -1.*t6116*t7078;
  t7560 = t7078*t6128;
  t7561 = t7452*t6019;
  t8041 = t6898*t3821;
  t8042 = t7026*t4040;
  t8043 = t8041 + t8042 + t7245;
  t7586 = -1.*t6166*t7078;
  t7646 = -1.*t5944*t7645;
  t7702 = t6196*t7078;
  t7703 = t5978*t7645;
  t7717 = t6166*t7078;
  t7719 = t5944*t7645;
  t7747 = -1.*t7645*t6019;
  t7748 = -1.*t7078*t6220;
  t7770 = -1.*t6196*t7078;
  t7773 = -1.*t5978*t7645;
  t7793 = t7645*t6019;
  t7796 = t7078*t6220;
  t7890 = -1.*t5944*t7889;
  t7891 = -1.*t6289*t7078;
  t7915 = t7889*t5978;
  t7916 = t6401*t7078;
  t7927 = t5944*t7889;
  t7928 = t6289*t7078;
  t7936 = -1.*t6257*t7078;
  t7937 = -1.*t7889*t6019;
  t7953 = -1.*t7889*t5978;
  t7954 = -1.*t6401*t7078;
  t7961 = t6257*t7078;
  t7962 = t7889*t6019;
  t8094 = -1.*t1075*t7675;
  t8095 = -1.*t4605*t6898;
  t8100 = t2985*t7675;
  t8101 = t4916*t6898;
  t8113 = t1075*t7675;
  t8114 = t4605*t6898;
  t8120 = -1.*t6898*t5152;
  t8121 = -1.*t7675*t3821;
  t8133 = -1.*t2985*t7675;
  t8134 = -1.*t4916*t6898;
  t8141 = t6898*t5152;
  t8142 = t7675*t3821;
  t8271 = -1.*t2449*t7021;
  t8272 = -1.*t2342*t7010;
  t8273 = t7988 + t8271 + t8272;
  t8275 = t3163*t7021;
  t8276 = t3097*t7010;
  t8277 = t8003 + t8275 + t8276;
  t8152 = -1.*t1075*t7896;
  t8153 = -1.*t5631*t6898;
  t8158 = t7896*t2985;
  t8159 = t5754*t6898;
  t8308 = t2449*t7021;
  t8309 = t2342*t7010;
  t8310 = t8009 + t8308 + t8309;
  t8167 = t1075*t7896;
  t8168 = t5631*t6898;
  t8173 = -1.*t5342*t6898;
  t8174 = -1.*t7896*t3821;
  t8319 = -1.*t7021*t4029;
  t8320 = -1.*t7010*t4007;
  t8321 = t8022 + t8319 + t8320;
  t8340 = -1.*t3163*t7021;
  t8345 = -1.*t3097*t7010;
  t8346 = t8032 + t8340 + t8345;
  t8184 = -1.*t7896*t2985;
  t8185 = -1.*t5754*t6898;
  t8190 = t5342*t6898;
  t8191 = t7896*t3821;
  t8355 = t7021*t4029;
  t8356 = t7010*t4007;
  t8357 = t8041 + t8355 + t8356;
  t8439 = -1.*t2299*t6977;
  t8440 = -1.*t1790*t7007;
  t8441 = t8439 + t8440 + t7988;
  t8449 = t3021*t6977;
  t8450 = t3085*t7007;
  t8452 = t8449 + t8450 + t8003;
  t8466 = t2299*t6977;
  t8467 = t1790*t7007;
  t8468 = t8466 + t8467 + t8009;
  t8476 = -1.*t6977*t3845;
  t8478 = -1.*t7007*t3994;
  t8479 = t8476 + t8478 + t8022;
  t8491 = -1.*t3021*t6977;
  t8492 = -1.*t3085*t7007;
  t8494 = t8491 + t8492 + t8032;
  t8502 = t6977*t3845;
  t8503 = t7007*t3994;
  t8504 = t8502 + t8503 + t8041;
  t8588 = -1.*t6833*t1058;
  t8589 = -1.*t789*t6861;
  t8590 = -1.*t650*t6894;
  t8591 = t8588 + t8589 + t8590;
  t8593 = t6833*t5708;
  t8594 = t2621*t7845;
  t8595 = t7834*t2799;
  t8596 = t7863*t2885;
  t8597 = t5737*t6861;
  t8598 = t5722*t6894;
  t8599 = t8593 + t8594 + t8595 + t8596 + t8597 + t8598;
  t8601 = t6833*t2799;
  t8602 = t2621*t6861;
  t8603 = t2885*t6894;
  t8604 = t8601 + t8602 + t8603;
  t8606 = -1.*t789*t7845;
  t8607 = -1.*t7834*t1058;
  t8608 = -1.*t6833*t5584;
  t8610 = -1.*t650*t7863;
  t8611 = -1.*t5531*t6861;
  t8612 = -1.*t5624*t6894;
  t8613 = t8606 + t8607 + t8608 + t8610 + t8611 + t8612;
  t8635 = t6833*t1058;
  t8636 = t789*t6861;
  t8637 = t650*t6894;
  t8638 = t8635 + t8636 + t8637;
  t8640 = t789*t7845;
  t8641 = t7834*t1058;
  t8642 = t6833*t5584;
  t8643 = t650*t7863;
  t8644 = t5531*t6861;
  t8645 = t5624*t6894;
  t8646 = t8640 + t8641 + t8642 + t8643 + t8644 + t8645;
  t8648 = -1.*t3512*t7834;
  t8649 = -1.*t6833*t5340;
  t8650 = -1.*t5325*t6861;
  t8651 = -1.*t7845*t3641;
  t8652 = -1.*t5296*t6894;
  t8653 = -1.*t7863*t3818;
  t8654 = t8648 + t8649 + t8650 + t8651 + t8652 + t8653;
  t8656 = -1.*t6833*t3512;
  t8657 = -1.*t6861*t3641;
  t8658 = -1.*t6894*t3818;
  t8659 = t8656 + t8657 + t8658;
  t8683 = -1.*t6833*t5708;
  t8684 = -1.*t2621*t7845;
  t8686 = -1.*t7834*t2799;
  t8690 = -1.*t7863*t2885;
  t8691 = -1.*t5737*t6861;
  t8692 = -1.*t5722*t6894;
  t8693 = t8683 + t8684 + t8686 + t8690 + t8691 + t8692;
  t8695 = -1.*t6833*t2799;
  t8696 = -1.*t2621*t6861;
  t8697 = -1.*t2885*t6894;
  t8698 = t8695 + t8696 + t8697;
  t8700 = t3512*t7834;
  t8701 = t6833*t5340;
  t8702 = t5325*t6861;
  t8703 = t7845*t3641;
  t8704 = t5296*t6894;
  t8705 = t7863*t3818;
  t8707 = t8700 + t8701 + t8702 + t8703 + t8704 + t8705;
  t8709 = t6833*t3512;
  t8711 = t6861*t3641;
  t8712 = t6894*t3818;
  t8713 = t8709 + t8711 + t8712;
  p_output1[0]=t2586*var2[0] + t3365*var2[1] + t4078*var2[2];
  p_output1[1]=t135*t4193*var2[0] + t135*t4296*var2[1] + t135*t4339*var2[2];
  p_output1[2]=t135*t4413*var2[0] + t135*t4445*var2[1] + t135*t4541*var2[2];
  p_output1[3]=t4894*var2[0] + t5124*var2[1] + t5264*var2[2];
  p_output1[4]=t5703*var2[0] + t5872*var2[1] + t5511*var2[2];
  p_output1[5]=t5895;
  p_output1[6]=t5902;
  p_output1[7]=t5936;
  p_output1[8]=(-1.*t5938*t5944 - 1.*t2586*t5956)*var2[0] + (-1.*t3365*t5956 - 1.*t5938*t5978)*var2[1] + (-1.*t4078*t5956 - 1.*t5938*t6019)*var2[2];
  p_output1[9]=-1.*t5938*t6047*var2[0] - 1.*t5938*t6055*var2[1] - 1.*t5938*t6070*var2[2];
  p_output1[10]=(t1128*t4193*t5938 + t2515*t5956)*var2[0] + (t1128*t4296*t5938 + t3260*t5956)*var2[1] + (t1128*t4339*t5938 + t4040*t5956)*var2[2];
  p_output1[11]=(t1128*t4413*t5938 + t5956*t6104)*var2[0] + (t1128*t4445*t5938 + t5956*t6116)*var2[1] + (t1128*t4541*t5938 + t5956*t6128)*var2[2];
  p_output1[12]=(t5956*t6166 - 1.*t5938*t6181)*var2[0] + (t5956*t6196 - 1.*t5938*t6208)*var2[1] + (t5956*t6220 - 1.*t5938*t6232)*var2[2];
  p_output1[13]=(t5956*t6289 - 1.*t5938*t6351)*var2[0] + (t5956*t6401 - 1.*t5938*t6440)*var2[1] + (t5956*t6257 - 1.*t5938*t6262)*var2[2];
  p_output1[14]=t6453;
  p_output1[15]=t6496;
  p_output1[16]=t6531;
  p_output1[17]=t6453*var2[0] + t6496*var2[1] + t6531*var2[2];
  p_output1[18]=t5956*t6047*var2[0] + t5956*t6055*var2[1] + t5956*t6070*var2[2];
  p_output1[19]=(t2515*t5938 - 1.*t1128*t4193*t5956)*var2[0] + (t3260*t5938 - 1.*t1128*t4296*t5956)*var2[1] + (t4040*t5938 - 1.*t1128*t4339*t5956)*var2[2];
  p_output1[20]=(-1.*t1128*t4413*t5956 + t5938*t6104)*var2[0] + (-1.*t1128*t4445*t5956 + t5938*t6116)*var2[1] + (-1.*t1128*t4541*t5956 + t5938*t6128)*var2[2];
  p_output1[21]=(t5938*t6166 + t5956*t6181)*var2[0] + (t5938*t6196 + t5956*t6208)*var2[1] + (t5938*t6220 + t5956*t6232)*var2[2];
  p_output1[22]=(t5938*t6289 + t5956*t6351)*var2[0] + (t5938*t6401 + t5956*t6440)*var2[1] + (t5938*t6257 + t5956*t6262)*var2[2];
  p_output1[23]=t5938*t5944 + t2586*t5956;
  p_output1[24]=t3365*t5956 + t5938*t5978;
  p_output1[25]=t4078*t5956 + t5938*t6019;
  p_output1[26]=(t5936*(-1.*t3365*t7039 - 1.*t3365*t7059 - 1.*t5902*t7066 - 1.*t6055*t7066) + t5902*(t4078*t7039 + t4078*t7059 + t5936*t7066 + t6070*t7066) + t4078*t7205 + t3365*t7261)*var2[0] + (t5936*(t2586*t7039 + t2586*t7059 + t5895*t7066 + t6047*t7066) + t5895*(-1.*t4078*t7039 - 1.*t4078*t7059 - 1.*t5936*t7066 - 1.*t6070*t7066) + t4078*t7123 + t2586*t7153)*var2[1] + (t5902*(-1.*t2586*t7039 - 1.*t2586*t7059 - 1.*t5895*t7066 - 1.*t6047*t7066) + t5895*(t3365*t7039 + t3365*t7059 + t5902*t7066 + t6055*t7066) + t3365*t7086 + t2586*t7099)*var2[2];
  p_output1[27]=(t135*t4339*t7205 + t135*t4296*t7261 + t5936*(-1.*t135*t4296*t7059 + t1128*t4296*t7066 + t1128*t3365*t7275 - 1.*t135*t5902*t7275 + t7367 + t7370) + t5902*(t135*t4339*t7059 - 1.*t1128*t4339*t7066 - 1.*t1128*t4078*t7275 + t135*t5936*t7275 + t7398 + t7401))*var2[0] + (t135*t4339*t7123 + t135*t4193*t7153 + t5936*(t135*t4193*t7059 - 1.*t1128*t4193*t7066 - 1.*t1128*t2586*t7275 + t135*t5895*t7275 + t7330 + t7331) + t5895*(-1.*t135*t4339*t7059 + t1128*t4339*t7066 + t1128*t4078*t7275 - 1.*t135*t5936*t7275 + t7348 + t7349))*var2[1] + (t135*t4296*t7086 + t135*t4193*t7099 + t5902*(-1.*t135*t4193*t7059 + t1128*t4193*t7066 + t7270 + t7271 + t1128*t2586*t7275 - 1.*t135*t5895*t7275) + t5895*(t135*t4296*t7059 - 1.*t1128*t4296*t7066 - 1.*t1128*t3365*t7275 + t135*t5902*t7275 + t7284 + t7285))*var2[2];
  p_output1[28]=(t135*t4541*t7205 + t135*t4445*t7261 + t5936*(-1.*t135*t4445*t7059 + t1128*t4445*t7066 + t1128*t3365*t7462 - 1.*t135*t5902*t7462 + t7549 + t7550) + t5902*(t135*t4541*t7059 - 1.*t1128*t4541*t7066 - 1.*t1128*t4078*t7462 + t135*t5936*t7462 + t7560 + t7561))*var2[0] + (t135*t4541*t7123 + t135*t4413*t7153 + t5936*(t135*t4413*t7059 - 1.*t1128*t4413*t7066 - 1.*t1128*t2586*t7462 + t135*t5895*t7462 + t7511 + t7512) + t5895*(-1.*t135*t4541*t7059 + t1128*t4541*t7066 + t1128*t4078*t7462 - 1.*t135*t5936*t7462 + t7527 + t7531))*var2[1] + (t135*t4445*t7086 + t135*t4413*t7099 + t5902*(-1.*t135*t4413*t7059 + t1128*t4413*t7066 + t7455 + t7456 + t1128*t2586*t7462 - 1.*t135*t5895*t7462) + t5895*(t135*t4445*t7059 - 1.*t1128*t4445*t7066 - 1.*t1128*t3365*t7462 + t135*t5902*t7462 + t7485 + t7487))*var2[2];
  p_output1[29]=(t5264*t7205 + t5124*t7261 + t5936*(-1.*t5124*t7059 - 1.*t6208*t7066 - 1.*t5902*t7687 - 1.*t3365*t7691 + t7770 + t7773) + t5902*(t5264*t7059 + t6232*t7066 + t5936*t7687 + t4078*t7691 + t7793 + t7796))*var2[0] + (t5264*t7123 + t4894*t7153 + t5936*(t4894*t7059 + t6181*t7066 + t5895*t7687 + t2586*t7691 + t7717 + t7719) + t5895*(-1.*t5264*t7059 - 1.*t6232*t7066 - 1.*t5936*t7687 - 1.*t4078*t7691 + t7747 + t7748))*var2[1] + (t5124*t7086 + t4894*t7099 + t5902*(-1.*t4894*t7059 - 1.*t6181*t7066 + t7586 + t7646 - 1.*t5895*t7687 - 1.*t2586*t7691) + t5895*(t5124*t7059 + t6208*t7066 + t5902*t7687 + t3365*t7691 + t7702 + t7703))*var2[2];
  p_output1[30]=(t5511*t7205 + t5872*t7261 + t5936*(-1.*t5872*t7059 - 1.*t6440*t7066 - 1.*t5902*t7902 - 1.*t3365*t7908 + t7953 + t7954) + t5902*(t5511*t7059 + t6262*t7066 + t5936*t7902 + t4078*t7908 + t7961 + t7962))*var2[0] + (t5511*t7123 + t5703*t7153 + t5936*(t5703*t7059 + t6351*t7066 + t5895*t7902 + t2586*t7908 + t7927 + t7928) + t5895*(-1.*t5511*t7059 - 1.*t6262*t7066 - 1.*t5936*t7902 - 1.*t4078*t7908 + t7936 + t7937))*var2[1] + (t5872*t7086 + t5703*t7099 + t5902*(-1.*t5703*t7059 - 1.*t6351*t7066 + t7890 + t7891 - 1.*t5895*t7902 - 1.*t2586*t7908) + t5895*(t5872*t7059 + t6440*t7066 + t5902*t7902 + t3365*t7908 + t7915 + t7916))*var2[2];
  p_output1[31]=t5936*t7205 + t5902*t7261;
  p_output1[32]=t5936*t7123 + t5895*t7153;
  p_output1[33]=t5902*t7086 + t5895*t7099;
  p_output1[34]=(t6019*(-1.*t4296*t7026 - 1.*t3260*t7275 + t7367 + t7370) + t5978*(t4339*t7026 + t4040*t7275 + t7398 + t7401) + t4040*t8034 + t3260*t8043)*var2[0] + (t6019*(t4193*t7026 + t2515*t7275 + t7330 + t7331) + t5944*(-1.*t4339*t7026 - 1.*t4040*t7275 + t7348 + t7349) + t4040*t8011 + t2515*t8024)*var2[1] + (t5978*(-1.*t4193*t7026 + t7270 + t7271 - 1.*t2515*t7275) + t5944*(t4296*t7026 + t3260*t7275 + t7284 + t7285) + t3260*t7991 + t2515*t8005)*var2[2];
  p_output1[35]=(t6019*(-1.*t4445*t7026 - 1.*t3260*t7462 + t7549 + t7550) + t5978*(t4541*t7026 + t4040*t7462 + t7560 + t7561) + t6128*t8034 + t6116*t8043)*var2[0] + (t6019*(t4413*t7026 + t2515*t7462 + t7511 + t7512) + t5944*(-1.*t4541*t7026 - 1.*t4040*t7462 + t7527 + t7531) + t6128*t8011 + t6104*t8024)*var2[1] + (t5978*(-1.*t4413*t7026 + t7455 + t7456 - 1.*t2515*t7462) + t5944*(t4445*t7026 + t3260*t7462 + t7485 + t7487) + t6116*t7991 + t6104*t8005)*var2[2];
  p_output1[36]=(t6220*t8034 + t6196*t8043 + t6019*(-1.*t5120*t7026 - 1.*t3260*t7682 + t7770 + t7773 + t8133 + t8134) + t5978*(t5260*t7026 + t4040*t7682 + t7793 + t7796 + t8141 + t8142))*var2[0] + (t6220*t8011 + t6166*t8024 + t6019*(t4879*t7026 + t2515*t7682 + t7717 + t7719 + t8113 + t8114) + t5944*(-1.*t5260*t7026 - 1.*t4040*t7682 + t7747 + t7748 + t8120 + t8121))*var2[1] + (t6196*t7991 + t6166*t8005 + t5978*(-1.*t4879*t7026 + t7586 + t7646 - 1.*t2515*t7682 + t8094 + t8095) + t5944*(t5120*t7026 + t3260*t7682 + t7702 + t7703 + t8100 + t8101))*var2[2];
  p_output1[37]=(t6257*t8034 + t6401*t8043 + t6019*(-1.*t5857*t7026 - 1.*t3260*t7900 + t7953 + t7954 + t8184 + t8185) + t5978*(t5494*t7026 + t4040*t7900 + t7961 + t7962 + t8190 + t8191))*var2[0] + (t6257*t8011 + t6289*t8024 + t6019*(t5700*t7026 + t2515*t7900 + t7927 + t7928 + t8167 + t8168) + t5944*(-1.*t5494*t7026 - 1.*t4040*t7900 + t7936 + t7937 + t8173 + t8174))*var2[1] + (t6401*t7991 + t6289*t8005 + t5978*(-1.*t5700*t7026 + t7890 + t7891 - 1.*t2515*t7900 + t8152 + t8153) + t5944*(t5857*t7026 + t3260*t7900 + t7915 + t7916 + t8158 + t8159))*var2[2];
  p_output1[38]=t6019*t8034 + t5978*t8043;
  p_output1[39]=t6019*t8011 + t5944*t8024;
  p_output1[40]=t5978*t7991 + t5944*t8005;
  p_output1[41]=(t3821*(-1.*t4439*t7010 - 1.*t3097*t7021 - 1.*t3163*t7434 - 1.*t3097*t7448) + t2985*(t4493*t7010 + t4007*t7021 + t4029*t7434 + t4007*t7448))*var2[0] + (t3821*(t4385*t7010 + t2342*t7021 + t2449*t7434 + t2342*t7448) + t1075*(-1.*t4493*t7010 - 1.*t4007*t7021 - 1.*t4029*t7434 - 1.*t4007*t7448))*var2[1] + (t2985*(-1.*t4385*t7010 - 1.*t2342*t7021 - 1.*t2449*t7434 - 1.*t2342*t7448) + t1075*(t4439*t7010 + t3097*t7021 + t3163*t7434 + t3097*t7448))*var2[2];
  p_output1[42]=(t3821*(-1.*t5056*t7010 - 1.*t5093*t7021 - 1.*t3163*t7633 - 1.*t3097*t7643 + t8133 + t8134) + t2985*(t5251*t7010 + t5258*t7021 + t4029*t7633 + t4007*t7643 + t8141 + t8142) + t5152*t8346 + t4916*t8357)*var2[0] + (t3821*(t4832*t7010 + t4864*t7021 + t2449*t7633 + t2342*t7643 + t8113 + t8114) + t1075*(-1.*t5251*t7010 - 1.*t5258*t7021 - 1.*t4029*t7633 - 1.*t4007*t7643 + t8120 + t8121) + t5152*t8310 + t4605*t8321)*var2[1] + (t2985*(-1.*t4832*t7010 - 1.*t4864*t7021 - 1.*t2449*t7633 - 1.*t2342*t7643 + t8094 + t8095) + t1075*(t5056*t7010 + t5093*t7021 + t3163*t7633 + t3097*t7643 + t8100 + t8101) + t4916*t8273 + t4605*t8277)*var2[2];
  p_output1[43]=(t3821*(-1.*t5838*t7010 - 1.*t5850*t7021 - 1.*t3163*t7879 - 1.*t3097*t7886 + t8184 + t8185) + t2985*(t5421*t7010 + t5469*t7021 + t4029*t7879 + t4007*t7886 + t8190 + t8191) + t5342*t8346 + t5754*t8357)*var2[0] + (t3821*(t5657*t7010 + t5675*t7021 + t2449*t7879 + t2342*t7886 + t8167 + t8168) + t1075*(-1.*t5421*t7010 - 1.*t5469*t7021 - 1.*t4029*t7879 - 1.*t4007*t7886 + t8173 + t8174) + t5342*t8310 + t5631*t8321)*var2[1] + (t2985*(-1.*t5657*t7010 - 1.*t5675*t7021 - 1.*t2449*t7879 - 1.*t2342*t7886 + t8152 + t8153) + t1075*(t5838*t7010 + t5850*t7021 + t3163*t7879 + t3097*t7886 + t8158 + t8159) + t5754*t8273 + t5631*t8277)*var2[2];
  p_output1[44]=t3821*t8346 + t2985*t8357;
  p_output1[45]=t3821*t8310 + t1075*t8321;
  p_output1[46]=t2985*t8273 + t1075*t8277;
  p_output1[47]=(-0.15121*t4706 + 0.15121*t4783 + t3821*(-1.*t5025*t6977 - 1.*t4939*t7007 - 1.*t3085*t7607 - 1.*t3021*t7626 + t8133 + t8134) + t2985*(t5237*t6977 + t5212*t7007 + t3994*t7607 + t3845*t7626 + t8141 + t8142) + t5152*t8494 + t4916*t8504)*var2[0] + (0.15121*t4939 - 0.15121*t5025 + t3821*(t4706*t6977 + t4783*t7007 + t1790*t7607 + t2299*t7626 + t8113 + t8114) + t1075*(-1.*t5237*t6977 - 1.*t5212*t7007 - 1.*t3994*t7607 - 1.*t3845*t7626 + t8120 + t8121) + t5152*t8468 + t4605*t8479)*var2[1] + (0.15121*t5212 - 0.15121*t5237 + t2985*(-1.*t4706*t6977 - 1.*t4783*t7007 - 1.*t1790*t7607 - 1.*t2299*t7626 + t8094 + t8095) + t1075*(t5025*t6977 + t4939*t7007 + t3085*t7607 + t3021*t7626 + t8100 + t8101) + t4916*t8441 + t4605*t8452)*var2[2];
  p_output1[48]=(-0.15121*t5642 + 0.15121*t5652 + t3821*(-1.*t5770*t6977 - 1.*t5832*t7007 - 1.*t3021*t7866 - 1.*t3085*t7877 + t8184 + t8185) + t2985*(t5407*t6977 + t5356*t7007 + t3845*t7866 + t3994*t7877 + t8190 + t8191) + t5342*t8494 + t5754*t8504)*var2[0] + (-0.15121*t5770 + 0.15121*t5832 + t3821*(t5642*t6977 + t5652*t7007 + t2299*t7866 + t1790*t7877 + t8167 + t8168) + t1075*(-1.*t5407*t6977 - 1.*t5356*t7007 - 1.*t3845*t7866 - 1.*t3994*t7877 + t8173 + t8174) + t5342*t8468 + t5631*t8479)*var2[1] + (0.15121*t5356 - 0.15121*t5407 + t2985*(-1.*t5642*t6977 - 1.*t5652*t7007 - 1.*t2299*t7866 - 1.*t1790*t7877 + t8152 + t8153) + t1075*(t5770*t6977 + t5832*t7007 + t3021*t7866 + t3085*t7877 + t8158 + t8159) + t5754*t8441 + t5631*t8452)*var2[2];
  p_output1[49]=0.15121*t1790 - 0.15121*t2299 + t3821*t8494 + t2985*t8504;
  p_output1[50]=-0.15121*t3021 + 0.15121*t3085 + t3821*t8468 + t1075*t8479;
  p_output1[51]=-0.15121*t3845 + 0.15121*t3994 + t2985*t8441 + t1075*t8452;
  p_output1[52]=(1.e-6*(-7.000000000455e-6*t522 + t5273) + 0.281211*t5531 - 0.038749*t5624 - 1.*t3512*t8693 - 1.*t5340*t8698 - 1.*t2799*t8707 - 1.*t5708*t8713 + 7.e-6*(t3818*t8693 + t5296*t8698 + t2885*t8707 + t5722*t8713) + 4.e-6*(-1.*t3641*t8693 - 1.*t5325*t8698 - 1.*t2621*t8707 - 1.*t5737*t8713))*var2[0] + (1.e-6*(4.00000000026e-6*t522 + t5310) - 0.038749*t5722 + 0.281211*t5737 - 1.*t5340*t8638 - 1.*t3512*t8646 - 1.*t1058*t8654 - 1.*t5584*t8659 + 4.e-6*(-1.*t5325*t8638 - 1.*t3641*t8646 - 1.*t789*t8654 - 1.*t5531*t8659) + 7.e-6*(t5296*t8638 + t3818*t8646 + t650*t8654 + t5624*t8659))*var2[1] + (-0.038749*t5296 + 0.281211*t5325 + 1.e-6*(-6.5e-11*t522 - 7.e-6*t5327 + 4.e-6*t7826) - 1.*t5708*t8591 - 1.*t1058*t8599 - 1.*t5584*t8604 - 1.*t2799*t8613 + 4.e-6*(-1.*t5737*t8591 - 1.*t789*t8599 - 1.*t5531*t8604 - 1.*t2621*t8613) + 7.e-6*(t5722*t8591 + t650*t8599 + t5624*t8604 + t2885*t8613))*var2[2];
  p_output1[53]=1.e-6*(7.e-6*t1021 + t3443 + t516) - 0.038749*t650 + 0.281211*t789 - 1.*t3512*t8698 - 1.*t2799*t8713 + 4.e-6*(-1.*t3641*t8698 - 1.*t2621*t8713) + 7.e-6*(t3818*t8698 + t2885*t8713);
  p_output1[54]=0.281211*t2621 - 0.038749*t2885 + 1.e-6*(4.e-6*(-1. + t3424) + t3570 + t747) - 1.*t3512*t8638 - 1.*t1058*t8659 + 7.e-6*(t3818*t8638 + t650*t8659) + 4.e-6*(-1.*t3641*t8638 - 1.*t789*t8659);
  p_output1[55]=0.281211*t3641 - 0.038749*t3818 - 1.*t2799*t8591 - 1.*t1058*t8604 + 7.e-6*(t2885*t8591 + t650*t8604) + 4.e-6*(-1.*t2621*t8591 - 1.*t789*t8604) + 1.e-6*(1. - 7.e-6*t3479 + 4.e-6*t6819 + t986);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fRrFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
