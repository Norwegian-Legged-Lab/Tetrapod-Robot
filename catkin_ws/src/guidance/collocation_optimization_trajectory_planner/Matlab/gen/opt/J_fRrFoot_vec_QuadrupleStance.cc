/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:51:40 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t415;
  double t416;
  double t458;
  double t107;
  double t112;
  double t122;
  double t572;
  double t341;
  double t640;
  double t523;
  double t548;
  double t643;
  double t659;
  double t660;
  double t1193;
  double t923;
  double t924;
  double t956;
  double t1072;
  double t1114;
  double t1117;
  double t1126;
  double t1438;
  double t1475;
  double t1512;
  double t1549;
  double t1553;
  double t165;
  double t1604;
  double t1899;
  double t1621;
  double t1635;
  double t1701;
  double t1724;
  double t1735;
  double t1744;
  double t1753;
  double t1774;
  double t1809;
  double t1825;
  double t1601;
  double t1924;
  double t1934;
  double t1935;
  double t1944;
  double t1961;
  double t1970;
  double t2000;
  double t2002;
  double t2023;
  double t2102;
  double t29;
  double t907;
  double t921;
  double t1224;
  double t1368;
  double t385;
  double t1582;
  double t1598;
  double t2355;
  double t2369;
  double t2384;
  double t2411;
  double t2417;
  double t2424;
  double t2449;
  double t2493;
  double t2500;
  double t2511;
  double t2521;
  double t2529;
  double t2555;
  double t2566;
  double t2570;
  double t2572;
  double t2592;
  double t2270;
  double t2762;
  double t2747;
  double t2822;
  double t2831;
  double t2832;
  double t2856;
  double t2874;
  double t2901;
  double t2904;
  double t2910;
  double t2928;
  double t2930;
  double t2939;
  double t2944;
  double t3041;
  double t3084;
  double t3091;
  double t3114;
  double t3124;
  double t3128;
  double t3178;
  double t3180;
  double t3192;
  double t3203;
  double t3221;
  double t3231;
  double t3233;
  double t3236;
  double t2240;
  double t2253;
  double t2268;
  double t1833;
  double t2149;
  double t2228;
  double t2661;
  double t2670;
  double t2671;
  double t2560;
  double t2627;
  double t2636;
  double t3318;
  double t3333;
  double t3343;
  double t3213;
  double t3248;
  double t3253;
  double t3495;
  double t3609;
  double t3696;
  double t3960;
  double t4032;
  double t4038;
  double t4052;
  double t4055;
  double t4065;
  double t4068;
  double t4078;
  double t4125;
  double t4130;
  double t4148;
  double t4152;
  double t4153;
  double t4164;
  double t4173;
  double t4178;
  double t3982;
  double t3999;
  double t3962;
  double t4342;
  double t4345;
  double t4360;
  double t4364;
  double t4372;
  double t4377;
  double t4400;
  double t4415;
  double t4717;
  double t4732;
  double t4733;
  double t4737;
  double t4748;
  double t4750;
  double t4752;
  double t4758;
  double t4879;
  double t4889;
  double t4908;
  double t4923;
  double t4984;
  double t5005;
  double t5030;
  double t5034;
  double t5062;
  double t5066;
  double t5068;
  double t5069;
  double t5080;
  double t5086;
  double t5093;
  double t5107;
  double t5113;
  double t5124;
  double t5128;
  double t5158;
  double t5160;
  double t5183;
  double t5201;
  double t5207;
  double t5208;
  double t5230;
  double t5239;
  double t5372;
  double t5352;
  double t5362;
  double t5364;
  double t5410;
  double t5414;
  double t5437;
  double t5439;
  double t5464;
  double t5468;
  double t5506;
  double t5513;
  double t5536;
  double t5543;
  double t5548;
  double t5555;
  double t5557;
  double t5558;
  double t5650;
  double t5652;
  double t5663;
  double t5664;
  double t5668;
  double t5680;
  double t5681;
  double t5700;
  double t5712;
  double t5715;
  double t5716;
  double t5734;
  double t5745;
  double t5747;
  double t5748;
  double t724;
  double t1167;
  double t1559;
  double t1569;
  double t2239;
  double t2276;
  double t2280;
  double t2388;
  double t2462;
  double t2502;
  double t2504;
  double t2637;
  double t2694;
  double t2695;
  double t2880;
  double t3008;
  double t3131;
  double t3173;
  double t3256;
  double t3346;
  double t3365;
  double t1579;
  double t2305;
  double t2319;
  double t5917;
  double t5956;
  double t2509;
  double t2696;
  double t2699;
  double t3176;
  double t3423;
  double t3450;
  double t3491;
  double t3540;
  double t3586;
  double t3612;
  double t3656;
  double t3700;
  double t3733;
  double t3753;
  double t3772;
  double t3790;
  double t3793;
  double t3837;
  double t3851;
  double t3852;
  double t3870;
  double t3875;
  double t3919;
  double t3927;
  double t3940;
  double t3942;
  double t3945;
  double t4244;
  double t4254;
  double t4256;
  double t4096;
  double t4211;
  double t4212;
  double t3968;
  double t3969;
  double t4000;
  double t4009;
  double t4242;
  double t4261;
  double t4265;
  double t4461;
  double t4468;
  double t4480;
  double t4368;
  double t4418;
  double t4432;
  double t4318;
  double t4319;
  double t4325;
  double t4332;
  double t4454;
  double t4482;
  double t4520;
  double t4796;
  double t4811;
  double t4815;
  double t4743;
  double t4776;
  double t4793;
  double t4643;
  double t4644;
  double t4652;
  double t4662;
  double t4794;
  double t4835;
  double t4850;
  double t5272;
  double t5295;
  double t5300;
  double t5205;
  double t5242;
  double t5244;
  double t5019;
  double t5074;
  double t5141;
  double t5150;
  double t5251;
  double t5303;
  double t5320;
  double t5592;
  double t5603;
  double t5610;
  double t5544;
  double t5569;
  double t5581;
  double t5367;
  double t5416;
  double t5490;
  double t5496;
  double t5589;
  double t5619;
  double t5623;
  double t5768;
  double t5771;
  double t5785;
  double t5721;
  double t5757;
  double t5762;
  double t5660;
  double t5666;
  double t5682;
  double t5693;
  double t5763;
  double t5794;
  double t5800;
  double t5929;
  double t5931;
  double t5936;
  double t5983;
  double t5990;
  double t5994;
  double t6031;
  double t6032;
  double t6033;
  double t6731;
  double t6732;
  double t6734;
  double t6738;
  double t6740;
  double t6741;
  double t6744;
  double t6746;
  double t6749;
  double t6073;
  double t6074;
  double t6079;
  double t6087;
  double t6088;
  double t6089;
  double t6103;
  double t6104;
  double t6107;
  double t6220;
  double t6223;
  double t6264;
  double t6291;
  double t6344;
  double t6345;
  double t6364;
  double t6366;
  double t6368;
  double t6383;
  double t6387;
  double t6400;
  double t6426;
  double t6427;
  double t6433;
  double t6446;
  double t6456;
  double t6457;
  double t6467;
  double t6468;
  double t6495;
  double t6501;
  double t6504;
  double t6509;
  double t6545;
  double t6548;
  double t6550;
  double t6553;
  double t6559;
  double t6561;
  double t6633;
  double t6635;
  double t6636;
  double t6648;
  double t6652;
  double t6659;
  double t6676;
  double t6677;
  double t6687;
  double t6694;
  double t6698;
  double t6703;
  double t5857;
  double t5886;
  double t5889;
  double t7211;
  double t7240;
  double t7243;
  double t7246;
  double t7256;
  double t7259;
  double t7262;
  double t7263;
  double t7267;
  double t7268;
  double t7269;
  double t7292;
  double t7297;
  double t7306;
  double t7315;
  double t7321;
  double t7324;
  double t7325;
  double t7326;
  double t7337;
  double t7389;
  double t7411;
  double t7417;
  double t7440;
  double t7441;
  double t7453;
  double t7457;
  double t7458;
  double t7541;
  double t7552;
  double t7562;
  double t7570;
  double t7571;
  double t7616;
  double t7227;
  double t7228;
  double t7582;
  double t7591;
  double t7594;
  double t7611;
  double t7615;
  double t7621;
  double t7640;
  double t7650;
  double t7662;
  double t7663;
  double t7664;
  double t7668;
  double t7678;
  double t7688;
  double t7690;
  double t7694;
  double t7715;
  double t7717;
  double t7718;
  double t7721;
  double t7724;
  double t7733;
  double t7736;
  double t7208;
  double t7210;
  double t7221;
  double t7224;
  double t7230;
  double t7231;
  double t7270;
  double t7418;
  double t7574;
  double t7576;
  double t7605;
  double t7681;
  double t7745;
  double t7746;
  double t7747;
  double t7749;
  double t7756;
  double t7763;
  double t7767;
  double t7768;
  double t7771;
  double t5814;
  double t5815;
  double t5856;
  double t7832;
  double t7842;
  double t7843;
  double t7790;
  double t7793;
  double t7810;
  double t7580;
  double t7772;
  double t7774;
  double t7878;
  double t7879;
  double t7883;
  double t5906;
  double t5913;
  double t5915;
  double t8110;
  double t8111;
  double t8119;
  double t7886;
  double t7889;
  double t7903;
  double t7904;
  double t7945;
  double t7946;
  double t7951;
  double t7956;
  double t7996;
  double t7998;
  double t8000;
  double t8002;
  double t8020;
  double t8021;
  double t8025;
  double t8030;
  double t8053;
  double t8055;
  double t8056;
  double t8060;
  double t8089;
  double t8090;
  double t8094;
  double t8096;
  double t8356;
  double t8365;
  double t8368;
  double t8370;
  double t8353;
  double t8354;
  double t8375;
  double t8377;
  double t8378;
  double t8355;
  double t8371;
  double t8372;
  double t4337;
  double t4538;
  double t4556;
  double t4020;
  double t4277;
  double t4307;
  double t8743;
  double t8747;
  double t8751;
  double t8752;
  double t8760;
  double t8762;
  double t8773;
  double t8774;
  double t8775;
  double t8777;
  double t8780;
  double t8786;
  double t8788;
  double t8791;
  double t8794;
  double t8798;
  double t8801;
  double t8803;
  double t8807;
  double t8823;
  double t8824;
  double t8826;
  double t8776;
  double t8813;
  double t8815;
  double t8850;
  double t8851;
  double t8854;
  double t8856;
  double t8857;
  double t8859;
  double t8861;
  double t8868;
  double t8870;
  double t8874;
  double t8876;
  double t8877;
  double t8821;
  double t8827;
  double t8830;
  double t8873;
  double t8879;
  double t8880;
  double t8888;
  double t8889;
  double t8891;
  double t4712;
  double t4866;
  double t4868;
  double t5694;
  double t5803;
  double t5806;
  double t5498;
  double t5629;
  double t5634;
  double t9097;
  double t9098;
  double t9099;
  double t9100;
  double t9101;
  double t9102;
  double t9104;
  double t9105;
  double t9110;
  double t9116;
  double t9123;
  double t9124;
  double t9125;
  double t9126;
  double t9131;
  double t9133;
  double t9145;
  double t9151;
  double t9152;
  double t9160;
  double t9166;
  double t9179;
  double t9185;
  double t9188;
  double t9108;
  double t9144;
  double t9191;
  double t9192;
  double t9225;
  double t9232;
  double t9234;
  double t9235;
  double t9239;
  double t9241;
  double t9243;
  double t9199;
  double t9236;
  double t9237;
  double t9258;
  double t9266;
  double t9275;
  double t9279;
  double t9284;
  double t9287;
  double t9291;
  double t9238;
  double t9248;
  double t9252;
  double t9282;
  double t9294;
  double t9300;
  double t9305;
  double t9307;
  double t9309;
  double t5154;
  double t5321;
  double t5329;
  double t8106;
  double t8109;
  double t8132;
  double t8138;
  double t8165;
  double t8170;
  double t8207;
  double t8208;
  double t8246;
  double t8250;
  double t8286;
  double t8292;
  double t9472;
  double t9474;
  double t9476;
  double t9506;
  double t9511;
  double t9513;
  double t8373;
  double t8374;
  double t8428;
  double t8429;
  double t9519;
  double t9521;
  double t9522;
  double t8481;
  double t8483;
  double t8530;
  double t8531;
  double t9538;
  double t9539;
  double t9540;
  double t9559;
  double t9563;
  double t9564;
  double t8570;
  double t8572;
  double t8611;
  double t8612;
  double t9577;
  double t9579;
  double t9582;
  double t8740;
  double t8831;
  double t8900;
  double t8901;
  double t8934;
  double t8947;
  double t8962;
  double t8967;
  double t9001;
  double t9002;
  double t9053;
  double t9054;
  double t9253;
  double t9255;
  double t9330;
  double t9331;
  double t9370;
  double t9376;
  double t9390;
  double t9391;
  double t9411;
  double t9416;
  double t9433;
  double t9434;
  double t9669;
  double t9670;
  double t9683;
  double t9684;
  double t9703;
  double t9705;
  double t9715;
  double t9716;
  double t9731;
  double t9732;
  double t9744;
  double t9746;
  double t10034;
  double t10040;
  double t10043;
  double t10047;
  double t10049;
  double t10053;
  double t9770;
  double t9772;
  double t9785;
  double t9786;
  double t10088;
  double t10089;
  double t10091;
  double t9814;
  double t9820;
  double t9832;
  double t9836;
  double t10101;
  double t10104;
  double t10109;
  double t10129;
  double t10132;
  double t10133;
  double t9864;
  double t9866;
  double t9881;
  double t9886;
  double t10142;
  double t10143;
  double t10144;
  double t10317;
  double t10318;
  double t10320;
  double t10350;
  double t10351;
  double t10352;
  double t10373;
  double t10374;
  double t10375;
  double t10392;
  double t10393;
  double t10394;
  double t10422;
  double t10423;
  double t10427;
  double t10445;
  double t10446;
  double t10447;
  double t10606;
  double t10607;
  double t10609;
  double t10610;
  double t10614;
  double t10616;
  double t10618;
  double t10622;
  double t10623;
  double t10624;
  double t10632;
  double t10636;
  double t10638;
  double t10639;
  double t10640;
  double t10644;
  double t10645;
  double t10647;
  double t10648;
  double t10650;
  double t10651;
  double t10652;
  double t10683;
  double t10684;
  double t10685;
  double t10688;
  double t10690;
  double t10691;
  double t10692;
  double t10693;
  double t10694;
  double t10695;
  double t10700;
  double t10703;
  double t10706;
  double t10707;
  double t10708;
  double t10709;
  double t10710;
  double t10711;
  double t10715;
  double t10717;
  double t10718;
  double t10719;
  double t10755;
  double t10756;
  double t10757;
  double t10760;
  double t10761;
  double t10768;
  double t10769;
  double t10774;
  double t10775;
  double t10776;
  double t10777;
  double t10780;
  double t10782;
  double t10783;
  double t10786;
  double t10787;
  double t10788;
  double t10792;
  double t10794;
  double t10795;
  double t10797;
  double t10798;
  t415 = Cos(var1[17]);
  t416 = -1.*t415;
  t458 = 1. + t416;
  t107 = Cos(var1[16]);
  t112 = -1.*t107;
  t122 = 1. + t112;
  t572 = Sin(var1[17]);
  t341 = Sin(var1[16]);
  t640 = 4.e-6*t572;
  t523 = 1.000000000016*t458;
  t548 = -7.e-6*t458;
  t643 = t548 + t640;
  t659 = -7.e-6*t643;
  t660 = -1. + t523 + t659;
  t1193 = 4.e-6*t122;
  t923 = 2.8e-11*t458;
  t924 = 4.e-6*t458;
  t956 = 7.e-6*t572;
  t1072 = t924 + t956;
  t1114 = -7.e-6*t1072;
  t1117 = -1.*t572;
  t1126 = t923 + t1114 + t1117;
  t1438 = -6.5e-11*t458;
  t1475 = 1. + t1438;
  t1512 = -7.e-6*t1475;
  t1549 = 7.e-6*t458;
  t1553 = t1512 + t1549 + t640;
  t165 = -2.8e-11*t122;
  t1604 = -7.e-6*t122;
  t1899 = Cos(var1[15]);
  t1621 = -4.e-6*t341;
  t1635 = t1604 + t1621;
  t1701 = t1635*t660;
  t1724 = -7.e-6*t341;
  t1735 = t1193 + t1724;
  t1744 = t1735*t1126;
  t1753 = -6.5e-11*t122;
  t1774 = 1. + t1753;
  t1809 = t1774*t1553;
  t1825 = t1701 + t1744 + t1809;
  t1601 = Sin(var1[15]);
  t1924 = -1.000000000016*t122;
  t1934 = 1. + t1924;
  t1935 = t1934*t660;
  t1944 = -1.*t341;
  t1961 = t165 + t1944;
  t1970 = t1961*t1126;
  t2000 = 4.e-6*t341;
  t2002 = t1604 + t2000;
  t2023 = t2002*t1553;
  t2102 = t1935 + t1970 + t2023;
  t29 = Cos(var1[4]);
  t907 = -1.000000000049*t122;
  t921 = 1. + t907;
  t1224 = 7.e-6*t341;
  t1368 = t1193 + t1224;
  t385 = t165 + t341;
  t1582 = Sin(var1[4]);
  t1598 = Cos(var1[5]);
  t2355 = 1.000000000049*t458;
  t2369 = 4.e-6*t1072;
  t2384 = -1. + t2355 + t2369;
  t2411 = 4.e-6*t1475;
  t2417 = -1. + t415;
  t2424 = 4.e-6*t2417;
  t2449 = t2411 + t2424 + t956;
  t2493 = 4.e-6*t643;
  t2500 = t923 + t2493 + t572;
  t2511 = t1961*t2384;
  t2521 = t2002*t2449;
  t2529 = t1934*t2500;
  t2555 = t2511 + t2521 + t2529;
  t2566 = t1735*t2384;
  t2570 = t1774*t2449;
  t2572 = t1635*t2500;
  t2592 = t2566 + t2570 + t2572;
  t2270 = Sin(var1[5]);
  t2762 = -4.e-6*t572;
  t2747 = 6.5e-11*t458;
  t2822 = t548 + t2762;
  t2831 = 7.e-6*t2822;
  t2832 = t2424 + t956;
  t2856 = 4.e-6*t2832;
  t2874 = -1. + t2747 + t2831 + t2856;
  t2901 = -1. + t2355;
  t2904 = 4.e-6*t2901;
  t2910 = -7.e-6*t572;
  t2928 = -2.8e-11*t458;
  t2930 = t2928 + t572;
  t2939 = 7.e-6*t2930;
  t2944 = t2904 + t2424 + t2910 + t2939;
  t3041 = -1.000000000016*t458;
  t3084 = 1. + t3041;
  t3091 = 7.e-6*t3084;
  t3114 = t923 + t572;
  t3124 = 4.e-6*t3114;
  t3128 = t3091 + t1549 + t2762 + t3124;
  t3178 = t2002*t2874;
  t3180 = t1961*t2944;
  t3192 = t1934*t3128;
  t3203 = t3178 + t3180 + t3192;
  t3221 = t1774*t2874;
  t3231 = t1735*t2944;
  t3233 = t1635*t3128;
  t3236 = t3221 + t3231 + t3233;
  t2240 = t1899*t1825;
  t2253 = t1601*t2102;
  t2268 = t2240 + t2253;
  t1833 = -1.*t1601*t1825;
  t2149 = t1899*t2102;
  t2228 = t1833 + t2149;
  t2661 = t1601*t2555;
  t2670 = t1899*t2592;
  t2671 = t2661 + t2670;
  t2560 = t1899*t2555;
  t2627 = -1.*t1601*t2592;
  t2636 = t2560 + t2627;
  t3318 = t1601*t3203;
  t3333 = t1899*t3236;
  t3343 = t3318 + t3333;
  t3213 = t1899*t3203;
  t3248 = -1.*t1601*t3236;
  t3253 = t3213 + t3248;
  t3495 = -1.*t2228*t2270;
  t3609 = -1.*t2636*t2270;
  t3696 = -1.*t3253*t2270;
  t3960 = -2.8e-11*t341;
  t4032 = -1.000000000016*t341*t660;
  t4038 = t112 + t3960;
  t4052 = t4038*t1126;
  t4055 = 4.e-6*t107;
  t4065 = t4055 + t1724;
  t4068 = t4065*t1553;
  t4078 = t4032 + t4052 + t4068;
  t4125 = -4.e-6*t107;
  t4130 = t4125 + t1724;
  t4148 = t4130*t660;
  t4152 = -7.e-6*t107;
  t4153 = t4152 + t2000;
  t4164 = t4153*t1126;
  t4173 = -6.5e-11*t341*t1553;
  t4178 = t4148 + t4164 + t4173;
  t3982 = 7.e-6*t107;
  t3999 = t3982 + t2000;
  t3962 = t107 + t3960;
  t4342 = t4153*t2384;
  t4345 = -6.5e-11*t341*t2449;
  t4360 = t4130*t2500;
  t4364 = t4342 + t4345 + t4360;
  t4372 = t4038*t2384;
  t4377 = t4065*t2449;
  t4400 = -1.000000000016*t341*t2500;
  t4415 = t4372 + t4377 + t4400;
  t4717 = -6.5e-11*t341*t2874;
  t4732 = t4153*t2944;
  t4733 = t4130*t3128;
  t4737 = t4717 + t4732 + t4733;
  t4748 = t4065*t2874;
  t4750 = t4038*t2944;
  t4752 = -1.000000000016*t341*t3128;
  t4758 = t4748 + t4750 + t4752;
  t4879 = -4.e-6*t415;
  t4889 = 2.8e-11*t572;
  t4908 = t415 + t4889;
  t4923 = 4.e-6*t4908;
  t4984 = -1.12e-16*t572;
  t5005 = t4879 + t4923 + t4984;
  t5030 = -7.e-6*t415;
  t5034 = -2.8e-11*t572;
  t5062 = t415 + t5034;
  t5066 = 7.e-6*t5062;
  t5068 = 1.96e-16*t572;
  t5069 = t5030 + t5066 + t5068;
  t5080 = t4879 + t2910;
  t5086 = 7.e-6*t5080;
  t5093 = 7.e-6*t415;
  t5107 = t5093 + t2762;
  t5113 = 4.e-6*t5107;
  t5124 = 6.5e-11*t572;
  t5128 = t5086 + t5113 + t5124;
  t5158 = t1635*t5005;
  t5160 = t1735*t5069;
  t5183 = t1774*t5128;
  t5201 = t5158 + t5160 + t5183;
  t5207 = t1934*t5005;
  t5208 = t1961*t5069;
  t5230 = t2002*t5128;
  t5239 = t5207 + t5208 + t5230;
  t5372 = 4.e-6*t415;
  t5352 = t5093 + t640;
  t5362 = -7.e-6*t5352;
  t5364 = t416 + t5362 + t4889;
  t5410 = 7.000000000455e-6*t572;
  t5414 = t5372 + t5410;
  t5437 = t5372 + t2910;
  t5439 = -7.e-6*t5437;
  t5464 = 1.000000000016*t572;
  t5468 = t5439 + t5464;
  t5506 = t1961*t5364;
  t5513 = t2002*t5414;
  t5536 = t1934*t5468;
  t5543 = t5506 + t5513 + t5536;
  t5548 = t1735*t5364;
  t5555 = t1774*t5414;
  t5557 = t1635*t5468;
  t5558 = t5548 + t5555 + t5557;
  t5650 = -4.00000000026e-6*t572;
  t5652 = t5093 + t5650;
  t5663 = 4.e-6*t5437;
  t5664 = t415 + t5663 + t4889;
  t5668 = 4.e-6*t5352;
  t5680 = 1.000000000049*t572;
  t5681 = t5668 + t5680;
  t5700 = t2002*t5652;
  t5712 = t1934*t5664;
  t5715 = t1961*t5681;
  t5716 = t5700 + t5712 + t5715;
  t5734 = t1774*t5652;
  t5745 = t1635*t5664;
  t5747 = t1735*t5681;
  t5748 = t5734 + t5745 + t5747;
  t724 = t385*t660;
  t1167 = t921*t1126;
  t1559 = t1368*t1553;
  t1569 = t724 + t1167 + t1559;
  t2239 = t1598*t2228;
  t2276 = -1.*t2268*t2270;
  t2280 = t2239 + t2276;
  t2388 = t921*t2384;
  t2462 = t1368*t2449;
  t2502 = t385*t2500;
  t2504 = t2388 + t2462 + t2502;
  t2637 = t1598*t2636;
  t2694 = -1.*t2671*t2270;
  t2695 = t2637 + t2694;
  t2880 = t1368*t2874;
  t3008 = t921*t2944;
  t3131 = t385*t3128;
  t3173 = t2880 + t3008 + t3131;
  t3256 = t1598*t3253;
  t3346 = -1.*t3343*t2270;
  t3365 = t3256 + t3346;
  t1579 = t29*t1569;
  t2305 = -1.*t1582*t2280;
  t2319 = t1579 + t2305;
  t5917 = Sin(var1[3]);
  t5956 = Cos(var1[3]);
  t2509 = t29*t2504;
  t2696 = -1.*t1582*t2695;
  t2699 = t2509 + t2696;
  t3176 = t29*t3173;
  t3423 = -1.*t1582*t3365;
  t3450 = t3176 + t3423;
  t3491 = -1.*t1598*t2268;
  t3540 = t3491 + t3495;
  t3586 = -1.*t1598*t2671;
  t3612 = t3586 + t3609;
  t3656 = -1.*t1598*t3343;
  t3700 = t3656 + t3696;
  t3733 = -1.*t1899*t1825;
  t3753 = -1.*t1601*t2102;
  t3772 = t3733 + t3753;
  t3790 = t1598*t3772;
  t3793 = t3790 + t3495;
  t3837 = -1.*t1601*t2555;
  t3851 = -1.*t1899*t2592;
  t3852 = t3837 + t3851;
  t3870 = t1598*t3852;
  t3875 = t3870 + t3609;
  t3919 = -1.*t1601*t3203;
  t3927 = -1.*t1899*t3236;
  t3940 = t3919 + t3927;
  t3942 = t1598*t3940;
  t3945 = t3942 + t3696;
  t4244 = t1601*t4078;
  t4254 = t1899*t4178;
  t4256 = t4244 + t4254;
  t4096 = t1899*t4078;
  t4211 = -1.*t1601*t4178;
  t4212 = t4096 + t4211;
  t3968 = t3962*t660;
  t3969 = -1.000000000049*t341*t1126;
  t4000 = t3999*t1553;
  t4009 = t3968 + t3969 + t4000;
  t4242 = t1598*t4212;
  t4261 = -1.*t4256*t2270;
  t4265 = t4242 + t4261;
  t4461 = t1899*t4364;
  t4468 = t1601*t4415;
  t4480 = t4461 + t4468;
  t4368 = -1.*t1601*t4364;
  t4418 = t1899*t4415;
  t4432 = t4368 + t4418;
  t4318 = -1.000000000049*t341*t2384;
  t4319 = t3999*t2449;
  t4325 = t3962*t2500;
  t4332 = t4318 + t4319 + t4325;
  t4454 = t1598*t4432;
  t4482 = -1.*t4480*t2270;
  t4520 = t4454 + t4482;
  t4796 = t1899*t4737;
  t4811 = t1601*t4758;
  t4815 = t4796 + t4811;
  t4743 = -1.*t1601*t4737;
  t4776 = t1899*t4758;
  t4793 = t4743 + t4776;
  t4643 = t3999*t2874;
  t4644 = -1.000000000049*t341*t2944;
  t4652 = t3962*t3128;
  t4662 = t4643 + t4644 + t4652;
  t4794 = t1598*t4793;
  t4835 = -1.*t4815*t2270;
  t4850 = t4794 + t4835;
  t5272 = t1899*t5201;
  t5295 = t1601*t5239;
  t5300 = t5272 + t5295;
  t5205 = -1.*t1601*t5201;
  t5242 = t1899*t5239;
  t5244 = t5205 + t5242;
  t5019 = t385*t5005;
  t5074 = t921*t5069;
  t5141 = t1368*t5128;
  t5150 = t5019 + t5074 + t5141;
  t5251 = t1598*t5244;
  t5303 = -1.*t5300*t2270;
  t5320 = t5251 + t5303;
  t5592 = t1601*t5543;
  t5603 = t1899*t5558;
  t5610 = t5592 + t5603;
  t5544 = t1899*t5543;
  t5569 = -1.*t1601*t5558;
  t5581 = t5544 + t5569;
  t5367 = t921*t5364;
  t5416 = t1368*t5414;
  t5490 = t385*t5468;
  t5496 = t5367 + t5416 + t5490;
  t5589 = t1598*t5581;
  t5619 = -1.*t5610*t2270;
  t5623 = t5589 + t5619;
  t5768 = t1601*t5716;
  t5771 = t1899*t5748;
  t5785 = t5768 + t5771;
  t5721 = t1899*t5716;
  t5757 = -1.*t1601*t5748;
  t5762 = t5721 + t5757;
  t5660 = t1368*t5652;
  t5666 = t385*t5664;
  t5682 = t921*t5681;
  t5693 = t5660 + t5666 + t5682;
  t5763 = t1598*t5762;
  t5794 = -1.*t5785*t2270;
  t5800 = t5763 + t5794;
  t5929 = t1598*t2268;
  t5931 = t2228*t2270;
  t5936 = t5929 + t5931;
  t5983 = t1598*t2671;
  t5990 = t2636*t2270;
  t5994 = t5983 + t5990;
  t6031 = t1598*t3343;
  t6032 = t3253*t2270;
  t6033 = t6031 + t6032;
  t6731 = t5956*t5936;
  t6732 = -1.*t5917*t2319;
  t6734 = t6731 + t6732;
  t6738 = t5956*t5994;
  t6740 = -1.*t5917*t2699;
  t6741 = t6738 + t6740;
  t6744 = t5956*t6033;
  t6746 = -1.*t5917*t3450;
  t6749 = t6744 + t6746;
  t6073 = -1.*t1569*t1582;
  t6074 = -1.*t29*t2280;
  t6079 = t6073 + t6074;
  t6087 = -1.*t2504*t1582;
  t6088 = -1.*t29*t2695;
  t6089 = t6087 + t6088;
  t6103 = -1.*t3173*t1582;
  t6104 = -1.*t29*t3365;
  t6107 = t6103 + t6104;
  t6220 = t3772*t2270;
  t6223 = t2239 + t6220;
  t6264 = t3852*t2270;
  t6291 = t2637 + t6264;
  t6344 = t3940*t2270;
  t6345 = t3256 + t6344;
  t6364 = t1598*t4256;
  t6366 = t4212*t2270;
  t6368 = t6364 + t6366;
  t6383 = t29*t4009;
  t6387 = -1.*t1582*t4265;
  t6400 = t6383 + t6387;
  t6426 = t1598*t4480;
  t6427 = t4432*t2270;
  t6433 = t6426 + t6427;
  t6446 = t29*t4332;
  t6456 = -1.*t1582*t4520;
  t6457 = t6446 + t6456;
  t6467 = t1598*t4815;
  t6468 = t4793*t2270;
  t6495 = t6467 + t6468;
  t6501 = t29*t4662;
  t6504 = -1.*t1582*t4850;
  t6509 = t6501 + t6504;
  t6545 = t1598*t5300;
  t6548 = t5244*t2270;
  t6550 = t6545 + t6548;
  t6553 = t29*t5150;
  t6559 = -1.*t1582*t5320;
  t6561 = t6553 + t6559;
  t6633 = t1598*t5610;
  t6635 = t5581*t2270;
  t6636 = t6633 + t6635;
  t6648 = t29*t5496;
  t6652 = -1.*t1582*t5623;
  t6659 = t6648 + t6652;
  t6676 = t1598*t5785;
  t6677 = t5762*t2270;
  t6687 = t6676 + t6677;
  t6694 = t29*t5693;
  t6698 = -1.*t1582*t5800;
  t6703 = t6694 + t6698;
  t5857 = t2504*t1582;
  t5886 = t29*t2695;
  t5889 = t5857 + t5886;
  t7211 = 2.8e-11*t122;
  t7240 = 2.826290000000002e-7*var1[17];
  t7243 = -0.148715*t1475;
  t7246 = -2.18904205e-16*t458;
  t7256 = t924 + t2910;
  t7259 = -0.038576*t7256;
  t7262 = -0.80315*t2822;
  t7263 = t1549 + t640;
  t7267 = -0.5031510000080001*t7263;
  t7268 = -0.038575000014*t2832;
  t7269 = t7240 + t7243 + t7246 + t7259 + t7262 + t7267 + t7268;
  t7292 = 1.1305160000000008e-12*var1[17];
  t7297 = -1.000000000049*t458;
  t7306 = 1. + t7297;
  t7315 = -0.038576*t7306;
  t7321 = -0.03857500001589017*t458;
  t7324 = t923 + t1117;
  t7325 = -0.5031510000080001*t7324;
  t7326 = t2424 + t2910;
  t7337 = -3.367757e-6*t7326;
  t7389 = -0.148715*t1072;
  t7411 = -0.80315*t2930;
  t7417 = t7292 + t7315 + t7321 + t7325 + t7337 + t7389 + t7411;
  t7440 = -1.9784030000000015e-12*var1[17];
  t7441 = -0.80315*t3084;
  t7453 = -0.5031510000160505*t458;
  t7457 = t2928 + t1117;
  t7458 = -0.038576*t7457;
  t7541 = t1549 + t2762;
  t7552 = -3.367757e-6*t7541;
  t7562 = -0.148715*t643;
  t7570 = -0.038575000014*t3114;
  t7571 = t7440 + t7441 + t7453 + t7458 + t7552 + t7562 + t7570;
  t7616 = 7.e-6*t122;
  t7227 = -1. + t107;
  t7228 = 4.e-6*t7227;
  t7582 = -1.*t1899;
  t7591 = 1. + t7582;
  t7594 = -0.15121*t7591;
  t7611 = -2.7726089999999997e-12*var1[16];
  t7615 = -0.2812110000084994*t122;
  t7621 = t7616 + t1621;
  t7640 = -1.8134809999999998e-6*t7621;
  t7650 = t7211 + t341;
  t7662 = -0.038749000006999997*t7650;
  t7663 = t2002*t7269;
  t7664 = t1961*t7417;
  t7668 = t1934*t7571;
  t7678 = t7611 + t7615 + t7640 + t7662 + t7663 + t7664 + t7668;
  t7688 = 3.9608699999999997e-7*var1[16];
  t7690 = -1.1787626499999999e-16*t122;
  t7694 = t7616 + t2000;
  t7715 = -0.281211000004*t7694;
  t7717 = t7228 + t1224;
  t7718 = -0.038749000006999997*t7717;
  t7721 = t1774*t7269;
  t7724 = t1735*t7417;
  t7733 = t1635*t7571;
  t7736 = t7688 + t7690 + t7715 + t7718 + t7721 + t7724 + t7733;
  t7208 = 1.5843479999999999e-12*var1[16];
  t7210 = -0.03874900000889869*t122;
  t7221 = t7211 + t1944;
  t7224 = -0.281211000004*t7221;
  t7230 = t7228 + t1724;
  t7231 = -1.8134809999999998e-6*t7230;
  t7270 = t1368*t7269;
  t7418 = t921*t7417;
  t7574 = t385*t7571;
  t7576 = t7208 + t7210 + t7224 + t7231 + t7270 + t7418 + t7574;
  t7605 = -0.15121*t1601;
  t7681 = t1899*t7678;
  t7745 = -1.*t1601*t7736;
  t7746 = t7594 + t7605 + t7681 + t7745;
  t7747 = t1598*t7746;
  t7749 = 0.15121*t1601;
  t7756 = t1601*t7678;
  t7763 = t1899*t7736;
  t7767 = t7594 + t7749 + t7756 + t7763;
  t7768 = -1.*t7767*t2270;
  t7771 = t7747 + t7768;
  t5814 = t1569*t1582;
  t5815 = t29*t2280;
  t5856 = t5814 + t5815;
  t7832 = t29*t7576;
  t7842 = -1.*t1582*t7771;
  t7843 = t7832 + t7842;
  t7790 = t7576*t1582;
  t7793 = t29*t7771;
  t7810 = t7790 + t7793;
  t7580 = -1.*t7576*t1582;
  t7772 = -1.*t29*t7771;
  t7774 = t7580 + t7772;
  t7878 = t1598*t7767;
  t7879 = t7746*t2270;
  t7883 = t7878 + t7879;
  t5906 = t3173*t1582;
  t5913 = t29*t3365;
  t5915 = t5906 + t5913;
  t8110 = -1.*t1598*t7767;
  t8111 = -1.*t7746*t2270;
  t8119 = t8110 + t8111;
  t7886 = -1.*t5936*t7883;
  t7889 = -1.*t5856*t7810;
  t7903 = -1.*t2319*t7843;
  t7904 = t7886 + t7889 + t7903;
  t7945 = t5994*t7883;
  t7946 = t5889*t7810;
  t7951 = t2699*t7843;
  t7956 = t7945 + t7946 + t7951;
  t7996 = t5936*t7883;
  t7998 = t5856*t7810;
  t8000 = t2319*t7843;
  t8002 = t7996 + t7998 + t8000;
  t8020 = -1.*t7883*t6033;
  t8021 = -1.*t7810*t5915;
  t8025 = -1.*t7843*t3450;
  t8030 = t8020 + t8021 + t8025;
  t8053 = -1.*t5994*t7883;
  t8055 = -1.*t5889*t7810;
  t8056 = -1.*t2699*t7843;
  t8060 = t8053 + t8055 + t8056;
  t8089 = t7883*t6033;
  t8090 = t7810*t5915;
  t8094 = t7843*t3450;
  t8096 = t8089 + t8090 + t8094;
  t8356 = -0.15121*t1899;
  t8365 = -1.*t1601*t7678;
  t8368 = -1.*t1899*t7736;
  t8370 = t8356 + t7605 + t8365 + t8368;
  t8353 = 0.15121*t1899;
  t8354 = t8353 + t7605 + t7681 + t7745;
  t8375 = t1598*t8370;
  t8377 = -1.*t8354*t2270;
  t8378 = t8375 + t8377;
  t8355 = t1598*t8354;
  t8371 = t8370*t2270;
  t8372 = t8355 + t8371;
  t4337 = t4332*t1582;
  t4538 = t29*t4520;
  t4556 = t4337 + t4538;
  t4020 = t4009*t1582;
  t4277 = t29*t4265;
  t4307 = t4020 + t4277;
  t8743 = t3982 + t1621;
  t8747 = -0.038749000006999997*t8743;
  t8751 = t4055 + t1224;
  t8752 = -0.281211000004*t8751;
  t8760 = -1.1787626499999999e-16*t341;
  t8762 = -6.5e-11*t341*t7269;
  t8773 = t4153*t7417;
  t8774 = t4130*t7571;
  t8775 = 3.9608699999999997e-7 + t8747 + t8752 + t8760 + t8762 + t8773 + t8774;
  t8777 = 2.8e-11*t341;
  t8780 = t107 + t8777;
  t8786 = -0.038749000006999997*t8780;
  t8788 = t4125 + t1224;
  t8791 = -1.8134809999999998e-6*t8788;
  t8794 = -0.2812110000084994*t341;
  t8798 = t4065*t7269;
  t8801 = t4038*t7417;
  t8803 = -1.000000000016*t341*t7571;
  t8807 = -2.7726089999999997e-12 + t8786 + t8791 + t8794 + t8798 + t8801 + t8803;
  t8823 = -1.*t1601*t8775;
  t8824 = t1899*t8807;
  t8826 = t8823 + t8824;
  t8776 = t1899*t8775;
  t8813 = t1601*t8807;
  t8815 = t8776 + t8813;
  t8850 = t4152 + t1621;
  t8851 = -1.8134809999999998e-6*t8850;
  t8854 = t112 + t8777;
  t8856 = -0.281211000004*t8854;
  t8857 = -0.03874900000889869*t341;
  t8859 = t3999*t7269;
  t8861 = -1.000000000049*t341*t7417;
  t8868 = t3962*t7571;
  t8870 = 1.5843479999999999e-12 + t8851 + t8856 + t8857 + t8859 + t8861 + t8868;
  t8874 = t1598*t8826;
  t8876 = -1.*t8815*t2270;
  t8877 = t8874 + t8876;
  t8821 = t1598*t8815;
  t8827 = t8826*t2270;
  t8830 = t8821 + t8827;
  t8873 = t8870*t1582;
  t8879 = t29*t8877;
  t8880 = t8873 + t8879;
  t8888 = t29*t8870;
  t8889 = -1.*t1582*t8877;
  t8891 = t8888 + t8889;
  t4712 = t4662*t1582;
  t4866 = t29*t4850;
  t4868 = t4712 + t4866;
  t5694 = t5693*t1582;
  t5803 = t29*t5800;
  t5806 = t5694 + t5803;
  t5498 = t5496*t1582;
  t5629 = t29*t5623;
  t5634 = t5498 + t5629;
  t9097 = -0.80315*t5080;
  t9098 = -0.038575000014*t5107;
  t9099 = t5030 + t640;
  t9100 = -0.038576*t9099;
  t9101 = t5372 + t956;
  t9102 = -0.5031510000080001*t9101;
  t9104 = 9.666256095795e-12*t572;
  t9105 = 2.826290000000002e-7 + t9097 + t9098 + t9100 + t9102 + t9104;
  t9110 = t5030 + t2762;
  t9116 = -3.367757e-6*t9110;
  t9123 = -0.80315*t5062;
  t9124 = t416 + t4889;
  t9125 = -0.5031510000080001*t9124;
  t9126 = -0.148715*t5352;
  t9131 = 9.99986000053965e-7*t572;
  t9133 = 1.1305160000000008e-12 + t9116 + t9123 + t9125 + t9126 + t9131;
  t9145 = -0.148715*t5437;
  t9151 = t416 + t5034;
  t9152 = -0.038576*t9151;
  t9160 = -0.038575000014*t4908;
  t9166 = t4879 + t956;
  t9179 = -3.367757e-6*t9166;
  t9185 = 0.2999989999967999*t572;
  t9188 = -1.9784030000000015e-12 + t9145 + t9152 + t9160 + t9179 + t9185;
  t9108 = t2002*t9105;
  t9144 = t1961*t9133;
  t9191 = t1934*t9188;
  t9192 = t9108 + t9144 + t9191;
  t9225 = t1774*t9105;
  t9232 = t1735*t9133;
  t9234 = t1635*t9188;
  t9235 = t9225 + t9232 + t9234;
  t9239 = t1899*t9192;
  t9241 = -1.*t1601*t9235;
  t9243 = t9239 + t9241;
  t9199 = t1601*t9192;
  t9236 = t1899*t9235;
  t9237 = t9199 + t9236;
  t9258 = t1368*t9105;
  t9266 = t921*t9133;
  t9275 = t385*t9188;
  t9279 = t9258 + t9266 + t9275;
  t9284 = t1598*t9243;
  t9287 = -1.*t9237*t2270;
  t9291 = t9284 + t9287;
  t9238 = t1598*t9237;
  t9248 = t9243*t2270;
  t9252 = t9238 + t9248;
  t9282 = t9279*t1582;
  t9294 = t29*t9291;
  t9300 = t9282 + t9294;
  t9305 = t29*t9279;
  t9307 = -1.*t1582*t9291;
  t9309 = t9305 + t9307;
  t5154 = t5150*t1582;
  t5321 = t29*t5320;
  t5329 = t5154 + t5321;
  t8106 = -1.*t5936*t7771;
  t8109 = -1.*t2280*t7883;
  t8132 = t5994*t7771;
  t8138 = t2695*t7883;
  t8165 = t5936*t7771;
  t8170 = t2280*t7883;
  t8207 = -1.*t7883*t3365;
  t8208 = -1.*t7771*t6033;
  t8246 = -1.*t5994*t7771;
  t8250 = -1.*t2695*t7883;
  t8286 = t7883*t3365;
  t8292 = t7771*t6033;
  t9472 = -1.*t1569*t7576;
  t9474 = -1.*t2280*t7771;
  t9476 = t9472 + t9474 + t7886;
  t9506 = t2504*t7576;
  t9511 = t2695*t7771;
  t9513 = t9506 + t9511 + t7945;
  t8373 = -1.*t5936*t8372;
  t8374 = -1.*t6223*t7883;
  t8428 = t5994*t8372;
  t8429 = t6291*t7883;
  t9519 = t1569*t7576;
  t9521 = t2280*t7771;
  t9522 = t9519 + t9521 + t7996;
  t8481 = t5936*t8372;
  t8483 = t6223*t7883;
  t8530 = -1.*t7883*t6345;
  t8531 = -1.*t8372*t6033;
  t9538 = -1.*t7576*t3173;
  t9539 = -1.*t7771*t3365;
  t9540 = t9538 + t9539 + t8020;
  t9559 = -1.*t2504*t7576;
  t9563 = -1.*t2695*t7771;
  t9564 = t9559 + t9563 + t8053;
  t8570 = -1.*t5994*t8372;
  t8572 = -1.*t6291*t7883;
  t8611 = t7883*t6345;
  t8612 = t8372*t6033;
  t9577 = t7576*t3173;
  t9579 = t7771*t3365;
  t9582 = t9577 + t9579 + t8089;
  t8740 = -1.*t6368*t7883;
  t8831 = -1.*t5936*t8830;
  t8900 = t6433*t7883;
  t8901 = t5994*t8830;
  t8934 = t6368*t7883;
  t8947 = t5936*t8830;
  t8962 = -1.*t8830*t6033;
  t8967 = -1.*t7883*t6495;
  t9001 = -1.*t6433*t7883;
  t9002 = -1.*t5994*t8830;
  t9053 = t8830*t6033;
  t9054 = t7883*t6495;
  t9253 = -1.*t5936*t9252;
  t9255 = -1.*t6636*t7883;
  t9330 = t9252*t5994;
  t9331 = t6687*t7883;
  t9370 = t5936*t9252;
  t9376 = t6636*t7883;
  t9390 = -1.*t6550*t7883;
  t9391 = -1.*t9252*t6033;
  t9411 = -1.*t9252*t5994;
  t9416 = -1.*t6687*t7883;
  t9433 = t6550*t7883;
  t9434 = t9252*t6033;
  t9669 = -1.*t1569*t8870;
  t9670 = -1.*t4009*t7576;
  t9683 = t2504*t8870;
  t9684 = t4332*t7576;
  t9703 = t1569*t8870;
  t9705 = t4009*t7576;
  t9715 = -1.*t7576*t4662;
  t9716 = -1.*t8870*t3173;
  t9731 = -1.*t2504*t8870;
  t9732 = -1.*t4332*t7576;
  t9744 = t7576*t4662;
  t9746 = t8870*t3173;
  t10034 = -1.*t2268*t7767;
  t10040 = -1.*t2228*t7746;
  t10043 = t9472 + t10034 + t10040;
  t10047 = t2671*t7767;
  t10049 = t2636*t7746;
  t10053 = t9506 + t10047 + t10049;
  t9770 = -1.*t1569*t9279;
  t9772 = -1.*t5496*t7576;
  t9785 = t9279*t2504;
  t9786 = t5693*t7576;
  t10088 = t2268*t7767;
  t10089 = t2228*t7746;
  t10091 = t9519 + t10088 + t10089;
  t9814 = t1569*t9279;
  t9820 = t5496*t7576;
  t9832 = -1.*t5150*t7576;
  t9836 = -1.*t9279*t3173;
  t10101 = -1.*t7767*t3343;
  t10104 = -1.*t7746*t3253;
  t10109 = t9538 + t10101 + t10104;
  t10129 = -1.*t2671*t7767;
  t10132 = -1.*t2636*t7746;
  t10133 = t9559 + t10129 + t10132;
  t9864 = -1.*t9279*t2504;
  t9866 = -1.*t5693*t7576;
  t9881 = t5150*t7576;
  t9886 = t9279*t3173;
  t10142 = t7767*t3343;
  t10143 = t7746*t3253;
  t10144 = t9577 + t10142 + t10143;
  t10317 = -1.*t2102*t7678;
  t10318 = -1.*t1825*t7736;
  t10320 = t10317 + t10318 + t9472;
  t10350 = t2555*t7678;
  t10351 = t2592*t7736;
  t10352 = t10350 + t10351 + t9506;
  t10373 = t2102*t7678;
  t10374 = t1825*t7736;
  t10375 = t10373 + t10374 + t9519;
  t10392 = -1.*t7678*t3203;
  t10393 = -1.*t7736*t3236;
  t10394 = t10392 + t10393 + t9538;
  t10422 = -1.*t2555*t7678;
  t10423 = -1.*t2592*t7736;
  t10427 = t10422 + t10423 + t9559;
  t10445 = t7678*t3203;
  t10446 = t7736*t3236;
  t10447 = t10445 + t10446 + t9577;
  t10606 = -1.*t7269*t1553;
  t10607 = -1.*t1126*t7417;
  t10609 = -1.*t660*t7571;
  t10610 = t10606 + t10607 + t10609;
  t10614 = t7269*t5652;
  t10616 = t2384*t9133;
  t10618 = t9105*t2449;
  t10622 = t9188*t2500;
  t10623 = t5681*t7417;
  t10624 = t5664*t7571;
  t10632 = t10614 + t10616 + t10618 + t10622 + t10623 + t10624;
  t10636 = t7269*t2449;
  t10638 = t2384*t7417;
  t10639 = t2500*t7571;
  t10640 = t10636 + t10638 + t10639;
  t10644 = -1.*t1126*t9133;
  t10645 = -1.*t9105*t1553;
  t10647 = -1.*t7269*t5414;
  t10648 = -1.*t660*t9188;
  t10650 = -1.*t5364*t7417;
  t10651 = -1.*t5468*t7571;
  t10652 = t10644 + t10645 + t10647 + t10648 + t10650 + t10651;
  t10683 = t7269*t1553;
  t10684 = t1126*t7417;
  t10685 = t660*t7571;
  t10688 = t10683 + t10684 + t10685;
  t10690 = t1126*t9133;
  t10691 = t9105*t1553;
  t10692 = t7269*t5414;
  t10693 = t660*t9188;
  t10694 = t5364*t7417;
  t10695 = t5468*t7571;
  t10700 = t10690 + t10691 + t10692 + t10693 + t10694 + t10695;
  t10703 = -1.*t2874*t9105;
  t10706 = -1.*t7269*t5128;
  t10707 = -1.*t5069*t7417;
  t10708 = -1.*t9133*t2944;
  t10709 = -1.*t5005*t7571;
  t10710 = -1.*t9188*t3128;
  t10711 = t10703 + t10706 + t10707 + t10708 + t10709 + t10710;
  t10715 = -1.*t7269*t2874;
  t10717 = -1.*t7417*t2944;
  t10718 = -1.*t7571*t3128;
  t10719 = t10715 + t10717 + t10718;
  t10755 = -1.*t7269*t5652;
  t10756 = -1.*t2384*t9133;
  t10757 = -1.*t9105*t2449;
  t10760 = -1.*t9188*t2500;
  t10761 = -1.*t5681*t7417;
  t10768 = -1.*t5664*t7571;
  t10769 = t10755 + t10756 + t10757 + t10760 + t10761 + t10768;
  t10774 = -1.*t7269*t2449;
  t10775 = -1.*t2384*t7417;
  t10776 = -1.*t2500*t7571;
  t10777 = t10774 + t10775 + t10776;
  t10780 = t2874*t9105;
  t10782 = t7269*t5128;
  t10783 = t5069*t7417;
  t10786 = t9133*t2944;
  t10787 = t5005*t7571;
  t10788 = t9188*t3128;
  t10792 = t10780 + t10782 + t10783 + t10786 + t10787 + t10788;
  t10794 = t7269*t2874;
  t10795 = t7417*t2944;
  t10797 = t7571*t3128;
  t10798 = t10794 + t10795 + t10797;
  p_output1[0]=t2319*var2[0] + t2699*var2[1] + t3450*var2[2];
  p_output1[1]=t29*t3540*var2[0] + t29*t3612*var2[1] + t29*t3700*var2[2];
  p_output1[2]=t29*t3793*var2[0] + t29*t3875*var2[1] + t29*t3945*var2[2];
  p_output1[3]=t4307*var2[0] + t4556*var2[1] + t4868*var2[2];
  p_output1[4]=t5634*var2[0] + t5806*var2[1] + t5329*var2[2];
  p_output1[5]=t5856;
  p_output1[6]=t5889;
  p_output1[7]=t5915;
  p_output1[8]=(-1.*t5917*t5936 - 1.*t2319*t5956)*var2[0] + (-1.*t2699*t5956 - 1.*t5917*t5994)*var2[1] + (-1.*t3450*t5956 - 1.*t5917*t6033)*var2[2];
  p_output1[9]=-1.*t5917*t6079*var2[0] - 1.*t5917*t6089*var2[1] - 1.*t5917*t6107*var2[2];
  p_output1[10]=(t1582*t3540*t5917 + t2280*t5956)*var2[0] + (t1582*t3612*t5917 + t2695*t5956)*var2[1] + (t1582*t3700*t5917 + t3365*t5956)*var2[2];
  p_output1[11]=(t1582*t3793*t5917 + t5956*t6223)*var2[0] + (t1582*t3875*t5917 + t5956*t6291)*var2[1] + (t1582*t3945*t5917 + t5956*t6345)*var2[2];
  p_output1[12]=(t5956*t6368 - 1.*t5917*t6400)*var2[0] + (t5956*t6433 - 1.*t5917*t6457)*var2[1] + (t5956*t6495 - 1.*t5917*t6509)*var2[2];
  p_output1[13]=(t5956*t6636 - 1.*t5917*t6659)*var2[0] + (t5956*t6687 - 1.*t5917*t6703)*var2[1] + (t5956*t6550 - 1.*t5917*t6561)*var2[2];
  p_output1[14]=t6734;
  p_output1[15]=t6741;
  p_output1[16]=t6749;
  p_output1[17]=t6734*var2[0] + t6741*var2[1] + t6749*var2[2];
  p_output1[18]=t5956*t6079*var2[0] + t5956*t6089*var2[1] + t5956*t6107*var2[2];
  p_output1[19]=(t2280*t5917 - 1.*t1582*t3540*t5956)*var2[0] + (t2695*t5917 - 1.*t1582*t3612*t5956)*var2[1] + (t3365*t5917 - 1.*t1582*t3700*t5956)*var2[2];
  p_output1[20]=(-1.*t1582*t3793*t5956 + t5917*t6223)*var2[0] + (-1.*t1582*t3875*t5956 + t5917*t6291)*var2[1] + (-1.*t1582*t3945*t5956 + t5917*t6345)*var2[2];
  p_output1[21]=(t5917*t6368 + t5956*t6400)*var2[0] + (t5917*t6433 + t5956*t6457)*var2[1] + (t5917*t6495 + t5956*t6509)*var2[2];
  p_output1[22]=(t5917*t6636 + t5956*t6659)*var2[0] + (t5917*t6687 + t5956*t6703)*var2[1] + (t5917*t6550 + t5956*t6561)*var2[2];
  p_output1[23]=t5917*t5936 + t2319*t5956;
  p_output1[24]=t2699*t5956 + t5917*t5994;
  p_output1[25]=t3450*t5956 + t5917*t6033;
  p_output1[26]=(t5915*(-1.*t2699*t7774 - 1.*t2699*t7810 - 1.*t5889*t7843 - 1.*t6089*t7843) + t5889*(t3450*t7774 + t3450*t7810 + t5915*t7843 + t6107*t7843) + t3450*t8060 + t2699*t8096)*var2[0] + (t5915*(t2319*t7774 + t2319*t7810 + t5856*t7843 + t6079*t7843) + t5856*(-1.*t3450*t7774 - 1.*t3450*t7810 - 1.*t5915*t7843 - 1.*t6107*t7843) + t3450*t8002 + t2319*t8030)*var2[1] + (t5889*(-1.*t2319*t7774 - 1.*t2319*t7810 - 1.*t5856*t7843 - 1.*t6079*t7843) + t5856*(t2699*t7774 + t2699*t7810 + t5889*t7843 + t6089*t7843) + t2699*t7904 + t2319*t7956)*var2[2];
  p_output1[27]=(t29*t3700*t8060 + t29*t3612*t8096 + t5915*(-1.*t29*t3612*t7810 + t1582*t3612*t7843 + t1582*t2699*t8119 - 1.*t29*t5889*t8119 + t8246 + t8250) + t5889*(t29*t3700*t7810 - 1.*t1582*t3700*t7843 - 1.*t1582*t3450*t8119 + t29*t5915*t8119 + t8286 + t8292))*var2[0] + (t29*t3700*t8002 + t29*t3540*t8030 + t5915*(t29*t3540*t7810 - 1.*t1582*t3540*t7843 - 1.*t1582*t2319*t8119 + t29*t5856*t8119 + t8165 + t8170) + t5856*(-1.*t29*t3700*t7810 + t1582*t3700*t7843 + t1582*t3450*t8119 - 1.*t29*t5915*t8119 + t8207 + t8208))*var2[1] + (t29*t3612*t7904 + t29*t3540*t7956 + t5889*(-1.*t29*t3540*t7810 + t1582*t3540*t7843 + t8106 + t8109 + t1582*t2319*t8119 - 1.*t29*t5856*t8119) + t5856*(t29*t3612*t7810 - 1.*t1582*t3612*t7843 - 1.*t1582*t2699*t8119 + t29*t5889*t8119 + t8132 + t8138))*var2[2];
  p_output1[28]=(t29*t3945*t8060 + t29*t3875*t8096 + t5915*(-1.*t29*t3875*t7810 + t1582*t3875*t7843 + t1582*t2699*t8378 - 1.*t29*t5889*t8378 + t8570 + t8572) + t5889*(t29*t3945*t7810 - 1.*t1582*t3945*t7843 - 1.*t1582*t3450*t8378 + t29*t5915*t8378 + t8611 + t8612))*var2[0] + (t29*t3945*t8002 + t29*t3793*t8030 + t5915*(t29*t3793*t7810 - 1.*t1582*t3793*t7843 - 1.*t1582*t2319*t8378 + t29*t5856*t8378 + t8481 + t8483) + t5856*(-1.*t29*t3945*t7810 + t1582*t3945*t7843 + t1582*t3450*t8378 - 1.*t29*t5915*t8378 + t8530 + t8531))*var2[1] + (t29*t3875*t7904 + t29*t3793*t7956 + t5889*(-1.*t29*t3793*t7810 + t1582*t3793*t7843 + t8373 + t8374 + t1582*t2319*t8378 - 1.*t29*t5856*t8378) + t5856*(t29*t3875*t7810 - 1.*t1582*t3875*t7843 - 1.*t1582*t2699*t8378 + t29*t5889*t8378 + t8428 + t8429))*var2[2];
  p_output1[29]=(t4868*t8060 + t4556*t8096 + t5915*(-1.*t4556*t7810 - 1.*t6457*t7843 - 1.*t5889*t8880 - 1.*t2699*t8891 + t9001 + t9002) + t5889*(t4868*t7810 + t6509*t7843 + t5915*t8880 + t3450*t8891 + t9053 + t9054))*var2[0] + (t4868*t8002 + t4307*t8030 + t5915*(t4307*t7810 + t6400*t7843 + t5856*t8880 + t2319*t8891 + t8934 + t8947) + t5856*(-1.*t4868*t7810 - 1.*t6509*t7843 - 1.*t5915*t8880 - 1.*t3450*t8891 + t8962 + t8967))*var2[1] + (t4556*t7904 + t4307*t7956 + t5889*(-1.*t4307*t7810 - 1.*t6400*t7843 + t8740 + t8831 - 1.*t5856*t8880 - 1.*t2319*t8891) + t5856*(t4556*t7810 + t6457*t7843 + t5889*t8880 + t2699*t8891 + t8900 + t8901))*var2[2];
  p_output1[30]=(t5329*t8060 + t5806*t8096 + t5915*(-1.*t5806*t7810 - 1.*t6703*t7843 - 1.*t5889*t9300 - 1.*t2699*t9309 + t9411 + t9416) + t5889*(t5329*t7810 + t6561*t7843 + t5915*t9300 + t3450*t9309 + t9433 + t9434))*var2[0] + (t5329*t8002 + t5634*t8030 + t5915*(t5634*t7810 + t6659*t7843 + t5856*t9300 + t2319*t9309 + t9370 + t9376) + t5856*(-1.*t5329*t7810 - 1.*t6561*t7843 - 1.*t5915*t9300 - 1.*t3450*t9309 + t9390 + t9391))*var2[1] + (t5806*t7904 + t5634*t7956 + t5889*(-1.*t5634*t7810 - 1.*t6659*t7843 + t9253 + t9255 - 1.*t5856*t9300 - 1.*t2319*t9309) + t5856*(t5806*t7810 + t6703*t7843 + t5889*t9300 + t2699*t9309 + t9330 + t9331))*var2[2];
  p_output1[31]=t5915*t8060 + t5889*t8096;
  p_output1[32]=t5915*t8002 + t5856*t8030;
  p_output1[33]=t5889*t7904 + t5856*t7956;
  p_output1[34]=(t6033*(-1.*t3612*t7771 - 1.*t2695*t8119 + t8246 + t8250) + t5994*(t3700*t7771 + t3365*t8119 + t8286 + t8292) + t3365*t9564 + t2695*t9582)*var2[0] + (t6033*(t3540*t7771 + t2280*t8119 + t8165 + t8170) + t5936*(-1.*t3700*t7771 - 1.*t3365*t8119 + t8207 + t8208) + t3365*t9522 + t2280*t9540)*var2[1] + (t5994*(-1.*t3540*t7771 + t8106 + t8109 - 1.*t2280*t8119) + t5936*(t3612*t7771 + t2695*t8119 + t8132 + t8138) + t2695*t9476 + t2280*t9513)*var2[2];
  p_output1[35]=(t6033*(-1.*t3875*t7771 - 1.*t2695*t8378 + t8570 + t8572) + t5994*(t3945*t7771 + t3365*t8378 + t8611 + t8612) + t6345*t9564 + t6291*t9582)*var2[0] + (t6033*(t3793*t7771 + t2280*t8378 + t8481 + t8483) + t5936*(-1.*t3945*t7771 - 1.*t3365*t8378 + t8530 + t8531) + t6345*t9522 + t6223*t9540)*var2[1] + (t5994*(-1.*t3793*t7771 + t8373 + t8374 - 1.*t2280*t8378) + t5936*(t3875*t7771 + t2695*t8378 + t8428 + t8429) + t6291*t9476 + t6223*t9513)*var2[2];
  p_output1[36]=(t6495*t9564 + t6433*t9582 + t6033*(-1.*t4520*t7771 - 1.*t2695*t8877 + t9001 + t9002 + t9731 + t9732) + t5994*(t4850*t7771 + t3365*t8877 + t9053 + t9054 + t9744 + t9746))*var2[0] + (t6495*t9522 + t6368*t9540 + t6033*(t4265*t7771 + t2280*t8877 + t8934 + t8947 + t9703 + t9705) + t5936*(-1.*t4850*t7771 - 1.*t3365*t8877 + t8962 + t8967 + t9715 + t9716))*var2[1] + (t6433*t9476 + t6368*t9513 + t5994*(-1.*t4265*t7771 + t8740 + t8831 - 1.*t2280*t8877 + t9669 + t9670) + t5936*(t4520*t7771 + t2695*t8877 + t8900 + t8901 + t9683 + t9684))*var2[2];
  p_output1[37]=(t6550*t9564 + t6687*t9582 + t6033*(-1.*t5800*t7771 - 1.*t2695*t9291 + t9411 + t9416 + t9864 + t9866) + t5994*(t5320*t7771 + t3365*t9291 + t9433 + t9434 + t9881 + t9886))*var2[0] + (t6550*t9522 + t6636*t9540 + t6033*(t5623*t7771 + t2280*t9291 + t9370 + t9376 + t9814 + t9820) + t5936*(-1.*t5320*t7771 - 1.*t3365*t9291 + t9390 + t9391 + t9832 + t9836))*var2[1] + (t6687*t9476 + t6636*t9513 + t5994*(-1.*t5623*t7771 + t9253 + t9255 - 1.*t2280*t9291 + t9770 + t9772) + t5936*(t5800*t7771 + t2695*t9291 + t9330 + t9331 + t9785 + t9786))*var2[2];
  p_output1[38]=t6033*t9564 + t5994*t9582;
  p_output1[39]=t6033*t9522 + t5936*t9540;
  p_output1[40]=t5994*t9476 + t5936*t9513;
  p_output1[41]=(t3173*(-1.*t3852*t7746 - 1.*t2636*t7767 - 1.*t2671*t8354 - 1.*t2636*t8370) + t2504*(t3940*t7746 + t3253*t7767 + t3343*t8354 + t3253*t8370))*var2[0] + (t3173*(t3772*t7746 + t2228*t7767 + t2268*t8354 + t2228*t8370) + t1569*(-1.*t3940*t7746 - 1.*t3253*t7767 - 1.*t3343*t8354 - 1.*t3253*t8370))*var2[1] + (t2504*(-1.*t3772*t7746 - 1.*t2228*t7767 - 1.*t2268*t8354 - 1.*t2228*t8370) + t1569*(t3852*t7746 + t2636*t7767 + t2671*t8354 + t2636*t8370))*var2[2];
  p_output1[42]=(t10144*t4332 + t10133*t4662 + t3173*(-1.*t4432*t7746 - 1.*t4480*t7767 - 1.*t2671*t8815 - 1.*t2636*t8826 + t9731 + t9732) + t2504*(t4793*t7746 + t4815*t7767 + t3343*t8815 + t3253*t8826 + t9744 + t9746))*var2[0] + (t10109*t4009 + t10091*t4662 + t3173*(t4212*t7746 + t4256*t7767 + t2268*t8815 + t2228*t8826 + t9703 + t9705) + t1569*(-1.*t4793*t7746 - 1.*t4815*t7767 - 1.*t3343*t8815 - 1.*t3253*t8826 + t9715 + t9716))*var2[1] + (t10053*t4009 + t10043*t4332 + t2504*(-1.*t4212*t7746 - 1.*t4256*t7767 - 1.*t2268*t8815 - 1.*t2228*t8826 + t9669 + t9670) + t1569*(t4432*t7746 + t4480*t7767 + t2671*t8815 + t2636*t8826 + t9683 + t9684))*var2[2];
  p_output1[43]=(t10133*t5150 + t10144*t5693 + t3173*(-1.*t5762*t7746 - 1.*t5785*t7767 - 1.*t2671*t9237 - 1.*t2636*t9243 + t9864 + t9866) + t2504*(t5244*t7746 + t5300*t7767 + t3343*t9237 + t3253*t9243 + t9881 + t9886))*var2[0] + (t10091*t5150 + t10109*t5496 + t3173*(t5581*t7746 + t5610*t7767 + t2268*t9237 + t2228*t9243 + t9814 + t9820) + t1569*(-1.*t5244*t7746 - 1.*t5300*t7767 - 1.*t3343*t9237 - 1.*t3253*t9243 + t9832 + t9836))*var2[1] + (t10053*t5496 + t10043*t5693 + t2504*(-1.*t5581*t7746 - 1.*t5610*t7767 - 1.*t2268*t9237 - 1.*t2228*t9243 + t9770 + t9772) + t1569*(t5762*t7746 + t5785*t7767 + t2671*t9237 + t2636*t9243 + t9785 + t9786))*var2[2];
  p_output1[44]=t10144*t2504 + t10133*t3173;
  p_output1[45]=t10109*t1569 + t10091*t3173;
  p_output1[46]=t10053*t1569 + t10043*t2504;
  p_output1[47]=(-0.15121*t4078 + 0.15121*t4178 + t10447*t4332 + t10427*t4662 + t3173*(-1.*t4415*t7678 - 1.*t4364*t7736 - 1.*t2592*t8775 - 1.*t2555*t8807 + t9731 + t9732) + t2504*(t4758*t7678 + t4737*t7736 + t3236*t8775 + t3203*t8807 + t9744 + t9746))*var2[0] + (t10394*t4009 + 0.15121*t4364 - 0.15121*t4415 + t10375*t4662 + t3173*(t4078*t7678 + t4178*t7736 + t1825*t8775 + t2102*t8807 + t9703 + t9705) + t1569*(-1.*t4758*t7678 - 1.*t4737*t7736 - 1.*t3236*t8775 - 1.*t3203*t8807 + t9715 + t9716))*var2[1] + (t10352*t4009 + t10320*t4332 + 0.15121*t4737 - 0.15121*t4758 + t2504*(-1.*t4078*t7678 - 1.*t4178*t7736 - 1.*t1825*t8775 - 1.*t2102*t8807 + t9669 + t9670) + t1569*(t4415*t7678 + t4364*t7736 + t2592*t8775 + t2555*t8807 + t9683 + t9684))*var2[2];
  p_output1[48]=(t10427*t5150 - 0.15121*t5543 + 0.15121*t5558 + t10447*t5693 + t3173*(-1.*t5716*t7678 - 1.*t5748*t7736 - 1.*t2555*t9192 - 1.*t2592*t9235 + t9864 + t9866) + t2504*(t5239*t7678 + t5201*t7736 + t3203*t9192 + t3236*t9235 + t9881 + t9886))*var2[0] + (t10375*t5150 + t10394*t5496 - 0.15121*t5716 + 0.15121*t5748 + t3173*(t5543*t7678 + t5558*t7736 + t2102*t9192 + t1825*t9235 + t9814 + t9820) + t1569*(-1.*t5239*t7678 - 1.*t5201*t7736 - 1.*t3203*t9192 - 1.*t3236*t9235 + t9832 + t9836))*var2[1] + (0.15121*t5201 - 0.15121*t5239 + t10352*t5496 + t10320*t5693 + t2504*(-1.*t5543*t7678 - 1.*t5558*t7736 - 1.*t2102*t9192 - 1.*t1825*t9235 + t9770 + t9772) + t1569*(t5716*t7678 + t5748*t7736 + t2555*t9192 + t2592*t9235 + t9785 + t9786))*var2[2];
  p_output1[49]=0.15121*t1825 - 0.15121*t2102 + t10447*t2504 + t10427*t3173;
  p_output1[50]=t10394*t1569 - 0.15121*t2555 + 0.15121*t2592 + t10375*t3173;
  p_output1[51]=t10352*t1569 + t10320*t2504 - 0.15121*t3203 + 0.15121*t3236;
  p_output1[52]=(-1.*t10792*t2449 - 1.*t10769*t2874 - 1.*t10777*t5128 + 0.281211*t5364 - 0.038749*t5468 - 1.*t10798*t5652 + 7.e-6*(t10792*t2500 + t10769*t3128 + t10777*t5005 + t10798*t5664) + 4.e-6*(-1.*t10792*t2384 - 1.*t10769*t2944 - 1.*t10777*t5069 - 1.*t10798*t5681) + 1.e-6*(t4879 - 7.000000000455e-6*t572))*var2[0] + (-1.*t10711*t1553 - 1.*t10700*t2874 - 1.*t10688*t5128 + 4.e-6*(-1.*t10711*t1126 - 1.*t10700*t2944 - 1.*t10688*t5069 - 1.*t10719*t5364) - 1.*t10719*t5414 - 0.038749*t5664 + 0.281211*t5681 + 1.e-6*(t5030 + 4.00000000026e-6*t572) + 7.e-6*(t10700*t3128 + t10688*t5005 + t10719*t5468 + t10711*t660))*var2[1] + (-1.*t10632*t1553 - 1.*t10652*t2449 - 0.038749*t5005 + 0.281211*t5069 - 1.*t10640*t5414 - 1.*t10610*t5652 + 4.e-6*(-1.*t10632*t1126 - 1.*t10652*t2384 - 1.*t10640*t5364 - 1.*t10610*t5681) + 7.e-6*(t10652*t2500 + t10640*t5468 + t10610*t5664 + t10632*t660) + 1.e-6*(-7.e-6*t5080 - 6.5e-11*t572 + 4.e-6*t9099))*var2[2];
  p_output1[53]=0.281211*t1126 - 1.*t10798*t2449 - 1.*t10777*t2874 + 4.e-6*(-1.*t10798*t2384 - 1.*t10777*t2944) + 7.e-6*(t10798*t2500 + t10777*t3128) + 1.e-6*(7.e-6*t1475 + t2762 + t548) - 0.038749*t660;
  p_output1[54]=-1.*t10719*t1553 + 0.281211*t2384 - 0.038749*t2500 - 1.*t10688*t2874 + 4.e-6*(-1.*t10719*t1126 - 1.*t10688*t2944) + 7.e-6*(t10688*t3128 + t10719*t660) + 1.e-6*(4.e-6*(-1. + t2747) + t2910 + t924);
  p_output1[55]=-1.*t10640*t1553 + 4.e-6*(-1.*t10640*t1126 - 1.*t10610*t2384) - 1.*t10610*t2449 + 0.281211*t2944 - 0.038749*t3128 + 7.e-6*(t10610*t2500 + t10640*t660) + 1.e-6*(1. + t1438 - 7.e-6*t2822 + 4.e-6*t7256);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fRrFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
