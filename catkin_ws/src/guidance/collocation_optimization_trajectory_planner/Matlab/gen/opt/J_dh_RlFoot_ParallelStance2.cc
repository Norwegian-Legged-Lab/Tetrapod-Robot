/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:20 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t894;
  double t958;
  double t983;
  double t559;
  double t673;
  double t733;
  double t1011;
  double t1029;
  double t755;
  double t995;
  double t1002;
  double t1039;
  double t1050;
  double t1077;
  double t746;
  double t1112;
  double t1117;
  double t1135;
  double t1152;
  double t1212;
  double t1579;
  double t1620;
  double t1903;
  double t1957;
  double t2261;
  double t2404;
  double t2444;
  double t2538;
  double t850;
  double t871;
  double t1081;
  double t1100;
  double t1109;
  double t1222;
  double t1250;
  double t1328;
  double t1384;
  double t1414;
  double t2510;
  double t2517;
  double t342;
  double t2575;
  double t2590;
  double t2609;
  double t2640;
  double t2648;
  double t2653;
  double t2684;
  double t2698;
  double t2730;
  double t2769;
  double t140;
  double t2894;
  double t2897;
  double t2913;
  double t2521;
  double t2774;
  double t2795;
  double t2914;
  double t3014;
  double t2832;
  double t2936;
  double t2939;
  double t61;
  double t3034;
  double t3044;
  double t3076;
  double t3093;
  double t3102;
  double t3112;
  double t3128;
  double t3146;
  double t3153;
  double t3165;
  double t3176;
  double t3200;
  double t3264;
  double t3272;
  double t3278;
  double t3295;
  double t3301;
  double t3328;
  double t3410;
  double t3416;
  double t3423;
  double t3472;
  double t3473;
  double t3475;
  double t3490;
  double t3491;
  double t3493;
  double t3501;
  double t3504;
  double t3505;
  double t3517;
  double t3530;
  double t3531;
  double t3537;
  double t3559;
  double t3584;
  double t3590;
  double t3591;
  double t3859;
  double t3654;
  double t3678;
  double t3730;
  double t3739;
  double t3742;
  double t3747;
  double t3775;
  double t3810;
  double t3842;
  double t3852;
  double t3868;
  double t3869;
  double t3879;
  double t3887;
  double t3894;
  double t3897;
  double t3898;
  double t3904;
  double t3917;
  double t3990;
  double t4010;
  double t4015;
  double t4018;
  double t4022;
  double t4039;
  double t4048;
  double t4074;
  double t4263;
  double t4281;
  double t4289;
  double t4297;
  double t4298;
  double t4306;
  double t4357;
  double t4376;
  double t4377;
  double t4382;
  double t4386;
  double t4393;
  double t4396;
  double t4402;
  double t4405;
  double t4421;
  double t4438;
  double t4460;
  double t4463;
  double t4471;
  double t4475;
  double t4486;
  double t4549;
  double t4556;
  double t4574;
  double t4575;
  double t4675;
  double t4679;
  double t4683;
  double t4689;
  double t4692;
  double t4693;
  double t4214;
  double t4796;
  double t4710;
  double t4722;
  double t4735;
  double t4766;
  double t4779;
  double t4791;
  double t4792;
  double t4802;
  double t4804;
  double t4810;
  double t4826;
  double t4833;
  double t4835;
  double t4878;
  double t4890;
  double t4892;
  double t4897;
  double t4906;
  double t4918;
  double t4923;
  double t4926;
  double t4943;
  double t4976;
  double t3801;
  double t3885;
  double t3960;
  double t3985;
  double t3989;
  double t4020;
  double t4077;
  double t4127;
  double t4148;
  double t4161;
  double t4163;
  double t4174;
  double t4180;
  double t4186;
  double t4189;
  double t4195;
  double t4197;
  double t4204;
  double t4243;
  double t4258;
  double t4265;
  double t4280;
  double t4388;
  double t4535;
  double t4702;
  double t4708;
  double t4730;
  double t4861;
  double t4977;
  double t4984;
  double t4988;
  double t4998;
  double t5000;
  double t5004;
  double t5013;
  double t5016;
  double t5064;
  double t5313;
  double t5331;
  double t5348;
  double t3482;
  double t3496;
  double t3510;
  double t3514;
  double t3541;
  double t3603;
  double t3604;
  double t3606;
  double t3608;
  double t3610;
  double t3620;
  double t3622;
  double t3623;
  double t5378;
  double t5379;
  double t5380;
  double t5161;
  double t5206;
  double t5228;
  double t5456;
  double t5539;
  double t5599;
  double t4709;
  double t5078;
  double t5080;
  double t3516;
  double t3641;
  double t3643;
  double t5660;
  double t5665;
  double t5693;
  double t6581;
  double t6595;
  double t6600;
  double t6198;
  double t6245;
  double t6323;
  double t5605;
  double t5641;
  double t5653;
  double t5752;
  double t7145;
  double t7147;
  double t7164;
  double t6358;
  double t7130;
  double t7171;
  double t7076;
  double t7112;
  double t7113;
  double t7207;
  double t7226;
  double t7191;
  double t7192;
  double t7197;
  double t5753;
  double t5878;
  double t5931;
  double t6456;
  double t6464;
  double t6471;
  double t7919;
  double t7934;
  double t7984;
  double t7989;
  double t7991;
  double t8061;
  double t8304;
  double t8309;
  double t8312;
  double t8315;
  double t8326;
  double t8334;
  double t8337;
  double t8192;
  double t8213;
  double t8228;
  double t7182;
  double t7184;
  double t7185;
  double t8021;
  double t8037;
  double t8048;
  double t7276;
  double t7361;
  double t7376;
  double t8360;
  double t8361;
  double t8363;
  double t8365;
  double t8366;
  double t8355;
  double t8356;
  double t8377;
  double t8380;
  double t8381;
  double t8369;
  double t8375;
  double t8371;
  double t8373;
  double t8393;
  double t8543;
  double t8395;
  double t8473;
  double t8767;
  double t8779;
  double t8781;
  double t8784;
  double t8764;
  double t8765;
  double t8769;
  double t8807;
  double t8808;
  double t8809;
  double t8812;
  double t8744;
  double t8745;
  double t8738;
  double t8739;
  double t8847;
  double t8778;
  double t8783;
  double t8787;
  double t8792;
  double t8828;
  double t8830;
  double t8832;
  double t8833;
  double t8834;
  double t8836;
  double t8837;
  double t8838;
  double t8839;
  double t8848;
  double t8849;
  double t8850;
  double t8851;
  double t8853;
  double t8854;
  double t8855;
  double t8995;
  double t9012;
  double t9018;
  double t9027;
  double t9038;
  double t9047;
  double t9074;
  double t9123;
  double t9132;
  double t9133;
  double t9134;
  double t8827;
  double t9016;
  double t8841;
  double t8842;
  double t8843;
  double t8845;
  double t8821;
  double t8823;
  double t8824;
  double t8825;
  double t9170;
  double t9179;
  double t9172;
  double t9173;
  double t9174;
  double t9175;
  double t9153;
  double t9159;
  double t9167;
  double t9168;
  double t9311;
  double t9321;
  double t9324;
  double t9329;
  double t9331;
  double t9332;
  double t8740;
  double t8743;
  double t8747;
  double t8753;
  double t8763;
  double t8766;
  double t8770;
  double t8772;
  double t9433;
  double t9434;
  double t9435;
  double t9398;
  double t9399;
  double t9400;
  double t9392;
  double t9393;
  double t9395;
  double t9396;
  double t9431;
  double t9436;
  double t9438;
  double t9445;
  double t9452;
  double t9459;
  double t9461;
  double t9463;
  double t9464;
  double t9358;
  double t9359;
  double t9360;
  double t9362;
  double t9369;
  double t9375;
  double t9269;
  double t9271;
  double t9279;
  double t9304;
  double t9306;
  double t9307;
  double t9495;
  double t9500;
  double t9501;
  double t9483;
  double t9484;
  double t9488;
  double t9509;
  double t9510;
  double t9511;
  double t9520;
  double t9525;
  double t9526;
  double t9531;
  double t9533;
  double t9534;
  double t9503;
  double t9505;
  double t9506;
  double t9508;
  double t9512;
  double t9584;
  double t9585;
  double t9588;
  double t9544;
  double t9551;
  double t9576;
  double t9577;
  double t9578;
  double t9602;
  double t9603;
  double t9607;
  double t9621;
  double t9623;
  double t9626;
  double t9675;
  double t9659;
  double t9661;
  double t9662;
  double t9665;
  double t9666;
  double t9688;
  double t9693;
  double t9701;
  double t9704;
  double t9712;
  double t9718;
  double t9830;
  double t9870;
  double t9820;
  double t9821;
  double t9822;
  double t9831;
  double t9832;
  double t9837;
  double t9839;
  double t9840;
  double t9841;
  double t9846;
  double t9847;
  double t9852;
  double t9861;
  double t9869;
  double t9871;
  double t9875;
  double t9899;
  double t9918;
  double t9922;
  double t9944;
  double t9957;
  double t9967;
  double t9990;
  double t9991;
  double t9998;
  double t10000;
  double t10005;
  double t10008;
  double t10011;
  double t10044;
  double t10045;
  double t10046;
  double t10047;
  double t10060;
  double t10061;
  double t10066;
  double t10099;
  double t10108;
  double t10117;
  double t9848;
  double t9947;
  double t10017;
  double t10018;
  double t10030;
  double t10031;
  double t10032;
  double t10033;
  double t10037;
  double t10038;
  double t10039;
  double t10042;
  double t10223;
  double t10224;
  double t10225;
  double t10228;
  double t10233;
  double t10245;
  double t10246;
  double t10254;
  double t10256;
  double t10257;
  double t10262;
  double t8796;
  double t8802;
  double t8803;
  double t10133;
  double t10135;
  double t10145;
  double t10146;
  double t8813;
  double t8817;
  double t8819;
  double t10354;
  double t10357;
  double t10363;
  double t10368;
  double t10369;
  double t10371;
  double t10372;
  double t10375;
  double t10376;
  double t10377;
  double t10378;
  double t10379;
  double t10383;
  double t10388;
  double t10391;
  double t10392;
  double t10393;
  double t10394;
  double t10400;
  double t10409;
  double t10410;
  double t10412;
  double t10036;
  double t10148;
  double t10154;
  double t10155;
  double t10157;
  double t10158;
  double t10049;
  double t10072;
  double t10120;
  double t10123;
  double t10177;
  double t10271;
  double t10448;
  double t10452;
  double t10453;
  double t10455;
  double t10456;
  double t10457;
  double t10227;
  double t10235;
  double t10248;
  double t10249;
  double t10272;
  double t10273;
  double t10289;
  double t10291;
  double t9186;
  double t9189;
  double t9190;
  double t9227;
  double t9228;
  double t9235;
  double t9667;
  double t9699;
  double t9731;
  double t9739;
  double t9784;
  double t9816;
  double t9817;
  double t9818;
  double t10515;
  double t10516;
  double t10519;
  double t10507;
  double t10508;
  double t10513;
  double t10495;
  double t10500;
  double t10502;
  double t10503;
  double t10514;
  double t10525;
  double t10526;
  double t10535;
  double t10537;
  double t10545;
  double t10562;
  double t10564;
  double t10566;
  double t10463;
  double t10465;
  double t10466;
  double t10459;
  double t10460;
  double t10461;
  double t10583;
  double t10590;
  double t10595;
  double t10606;
  double t10614;
  double t10620;
  double t10477;
  double t10478;
  double t10483;
  double t10473;
  double t10474;
  double t10475;
  double t10649;
  double t10657;
  double t10672;
  double t10627;
  double t10629;
  double t10631;
  double t10621;
  double t10633;
  double t10623;
  double t10624;
  double t10625;
  double t10638;
  double t10687;
  double t10694;
  double t10696;
  double t10707;
  double t10720;
  double t10721;
  double t10722;
  double t10639;
  double t10640;
  double t10644;
  double t10756;
  double t10757;
  double t10759;
  double t10728;
  double t10732;
  double t10733;
  double t3354;
  double t3357;
  double t3375;
  double t5941;
  double t5945;
  double t5981;
  double t10845;
  double t10865;
  double t10895;
  double t5278;
  double t5292;
  double t5307;
  double t11117;
  double t11153;
  double t11277;
  double t11281;
  double t11297;
  double t11300;
  double t11118;
  double t11119;
  double t11120;
  double t11156;
  double t11158;
  double t11165;
  double t11284;
  double t11285;
  double t11286;
  double t11291;
  double t11292;
  double t11293;
  double t11523;
  double t11525;
  double t11529;
  double t11547;
  double t11604;
  double t11607;
  double t11616;
  double t11620;
  double t9633;
  double t9639;
  double t9648;
  double t9397;
  double t9440;
  double t9441;
  double t11674;
  double t11767;
  double t9593;
  double t9594;
  double t9596;
  double t11865;
  double t11866;
  double t11594;
  double t11595;
  double t11596;
  double t11598;
  double t11599;
  double t11601;
  double t12017;
  double t12018;
  double t12019;
  double t12021;
  double t12023;
  double t12024;
  double t12025;
  double t12026;
  double t12027;
  double t12028;
  double t12029;
  double t12031;
  double t12032;
  double t12033;
  double t12034;
  double t12036;
  double t12037;
  double t12038;
  double t12039;
  double t12040;
  double t12041;
  double t12042;
  double t11978;
  double t11990;
  double t11628;
  double t11629;
  double t11630;
  double t11632;
  double t11633;
  double t11634;
  double t11996;
  double t12003;
  double t10761;
  double t10762;
  double t10763;
  double t12094;
  double t12098;
  double t10743;
  double t10748;
  double t10749;
  double t10505;
  double t10527;
  double t10529;
  double t12107;
  double t12110;
  double t11084;
  double t11090;
  double t11094;
  double t12404;
  double t12416;
  double t12438;
  double t12440;
  double t12445;
  double t12448;
  double t12405;
  double t12406;
  double t12408;
  double t12417;
  double t12418;
  double t12419;
  double t12433;
  double t12434;
  double t12435;
  double t12453;
  double t12454;
  double t12455;
  double t12505;
  double t12508;
  double t12515;
  double t12520;
  double t12621;
  double t12624;
  double t12631;
  double t12635;
  double t12755;
  double t12768;
  double t12854;
  double t12855;
  double t12582;
  double t12594;
  double t12598;
  double t12603;
  double t12606;
  double t12618;
  double t12979;
  double t12980;
  double t12981;
  double t12982;
  double t13007;
  double t13025;
  double t13082;
  double t13083;
  double t13084;
  double t13085;
  double t13086;
  double t13088;
  double t13089;
  double t13090;
  double t13091;
  double t13093;
  double t13094;
  double t13097;
  double t13099;
  double t13100;
  double t13101;
  double t13102;
  double t12881;
  double t12932;
  double t12641;
  double t12642;
  double t12643;
  double t12645;
  double t12646;
  double t12647;
  double t12952;
  double t12963;
  double t13302;
  double t13309;
  double t13324;
  double t13327;
  double t12373;
  double t12376;
  double t12377;
  double t12347;
  t894 = Cos(var1[14]);
  t958 = -1.*t894;
  t983 = 1. + t958;
  t559 = Cos(var1[13]);
  t673 = -1.*t559;
  t733 = 1. + t673;
  t1011 = Sin(var1[14]);
  t1029 = 4.e-6*t1011;
  t755 = Sin(var1[13]);
  t995 = 1.000000000016*t983;
  t1002 = -7.e-6*t983;
  t1039 = t1002 + t1029;
  t1050 = -7.e-6*t1039;
  t1077 = -1. + t995 + t1050;
  t746 = -7.e-6*t733;
  t1112 = -6.5e-11*t983;
  t1117 = 1. + t1112;
  t1135 = -7.e-6*t1117;
  t1152 = 7.e-6*t983;
  t1212 = t1135 + t1152 + t1029;
  t1579 = -2.8e-11*t983;
  t1620 = -1. + t894;
  t1903 = 4.e-6*t1620;
  t1957 = -7.e-6*t1011;
  t2261 = t1903 + t1957;
  t2404 = -7.e-6*t2261;
  t2444 = t1579 + t2404 + t1011;
  t2538 = Sin(var1[12]);
  t850 = -4.e-6*t755;
  t871 = t746 + t850;
  t1081 = t871*t1077;
  t1100 = -6.5e-11*t733;
  t1109 = 1. + t1100;
  t1222 = t1109*t1212;
  t1250 = -1. + t559;
  t1328 = 4.e-6*t1250;
  t1384 = 7.e-6*t755;
  t1414 = t1328 + t1384;
  t2510 = t1414*t2444;
  t2517 = t1081 + t1222 + t2510;
  t342 = Cos(var1[12]);
  t2575 = -1.000000000016*t733;
  t2590 = 1. + t2575;
  t2609 = t2590*t1077;
  t2640 = 4.e-6*t755;
  t2648 = t746 + t2640;
  t2653 = t2648*t1212;
  t2684 = 2.8e-11*t733;
  t2698 = t2684 + t755;
  t2730 = t2698*t2444;
  t2769 = t2609 + t2653 + t2730;
  t140 = Cos(var1[5]);
  t2894 = -1.*t2538*t2517;
  t2897 = t342*t2769;
  t2913 = t2894 + t2897;
  t2521 = t342*t2517;
  t2774 = t2538*t2769;
  t2795 = t2521 + t2774;
  t2914 = Sin(var1[5]);
  t3014 = Cos(var1[3]);
  t2832 = t140*t2795;
  t2936 = t2913*t2914;
  t2939 = t2832 + t2936;
  t61 = Sin(var1[3]);
  t3034 = Cos(var1[4]);
  t3044 = -1.*t755;
  t3076 = t2684 + t3044;
  t3093 = t3076*t1077;
  t3102 = -7.e-6*t755;
  t3112 = t1328 + t3102;
  t3128 = t3112*t1212;
  t3146 = -1.000000000049*t733;
  t3153 = 1. + t3146;
  t3165 = t3153*t2444;
  t3176 = t3093 + t3128 + t3165;
  t3200 = t3034*t3176;
  t3264 = Sin(var1[4]);
  t3272 = t140*t2913;
  t3278 = -1.*t2795*t2914;
  t3295 = t3272 + t3278;
  t3301 = -1.*t3264*t3295;
  t3328 = t3200 + t3301;
  t3410 = -1.*t3176*t3264;
  t3416 = -1.*t3034*t3295;
  t3423 = t3410 + t3416;
  t3472 = -1.000000000049*t983;
  t3473 = 4.e-6*t2261;
  t3475 = 1. + t3472 + t3473;
  t3490 = 4.e-6*t1117;
  t3491 = 7.e-6*t1011;
  t3493 = t3490 + t1903 + t3491;
  t3501 = 2.8e-11*t983;
  t3504 = 4.e-6*t1039;
  t3505 = t3501 + t3504 + t1011;
  t3517 = t2698*t3475;
  t3530 = t2648*t3493;
  t3531 = t2590*t3505;
  t3537 = t3517 + t3530 + t3531;
  t3559 = t1414*t3475;
  t3584 = t1109*t3493;
  t3590 = t871*t3505;
  t3591 = t3559 + t3584 + t3590;
  t3859 = -1.*t1011;
  t3654 = 4.e-6*t983;
  t3678 = t3654 + t1957;
  t3730 = 4.e-6*t3678;
  t3739 = -4.e-6*t1011;
  t3742 = t1002 + t3739;
  t3747 = -7.e-6*t3742;
  t3775 = 1. + t1112 + t3730 + t3747;
  t3810 = 1.000000000049*t983;
  t3842 = -1. + t3810;
  t3852 = 4.e-6*t3842;
  t3868 = t3501 + t3859;
  t3869 = -7.e-6*t3868;
  t3879 = t3852 + t1903 + t3869 + t1957;
  t3887 = -1.000000000016*t983;
  t3894 = 1. + t3887;
  t3897 = -7.e-6*t3894;
  t3898 = t1579 + t3859;
  t3904 = 4.e-6*t3898;
  t3917 = t3897 + t1002 + t3904 + t1029;
  t3990 = t2648*t3775;
  t4010 = t2698*t3879;
  t4015 = t2590*t3917;
  t4018 = t3990 + t4010 + t4015;
  t4022 = t1109*t3775;
  t4039 = t1414*t3879;
  t4048 = t871*t3917;
  t4074 = t4022 + t4039 + t4048;
  t4263 = -2.8e-11*t733;
  t4281 = -2.598649999999999e-7*var1[14];
  t4289 = 0.148705*t1117;
  t4297 = -2.3905277499999995e-16*t983;
  t4298 = -0.038922999986*t3678;
  t4306 = -0.80315*t3742;
  t4357 = t1152 + t1029;
  t4376 = -0.503149000008*t4357;
  t4377 = t1903 + t3491;
  t4382 = -0.038924*t4377;
  t4386 = t4281 + t4289 + t4297 + t4298 + t4306 + t4376 + t4382;
  t4393 = 1.0394599999999997e-12*var1[14];
  t4396 = 1. + t3472;
  t4402 = -0.038924*t4396;
  t4405 = -0.03892299998790722*t983;
  t4421 = -0.80315*t3868;
  t4438 = 0.148705*t2261;
  t4460 = t3654 + t3491;
  t4463 = -3.6777349999999994e-6*t4460;
  t4471 = t1579 + t1011;
  t4475 = -0.503149000008*t4471;
  t4486 = t4393 + t4402 + t4405 + t4421 + t4438 + t4463 + t4475;
  t4549 = 1.8190549999999993e-12*var1[14];
  t4556 = -0.80315*t3894;
  t4574 = -0.5031490000160505*t983;
  t4575 = -0.038922999986*t3898;
  t4675 = t1152 + t3739;
  t4679 = -3.6777349999999994e-6*t4675;
  t4683 = 0.148705*t1039;
  t4689 = t3501 + t1011;
  t4692 = -0.038924*t4689;
  t4693 = t4549 + t4556 + t4574 + t4575 + t4679 + t4683 + t4692;
  t4214 = 4.e-6*t733;
  t4796 = 7.e-6*t733;
  t4710 = -1.*t342;
  t4722 = 1. + t4710;
  t4735 = 0.15121*t2538;
  t4766 = 1.0248489999999998e-12*var1[13];
  t4779 = -0.28120900000849935*t733;
  t4791 = t4263 + t3044;
  t4792 = -0.038748999993*t4791;
  t4802 = t4796 + t850;
  t4804 = -2.123459e-6*t4802;
  t4810 = t2648*t4386;
  t4826 = t2698*t4486;
  t4833 = t2590*t4693;
  t4835 = t4766 + t4779 + t4792 + t4804 + t4810 + t4826 + t4833;
  t4878 = -1.4640699999999997e-7*var1[13];
  t4890 = -1.38024835e-16*t733;
  t4892 = t4214 + t3102;
  t4897 = -0.038748999993*t4892;
  t4906 = t4796 + t2640;
  t4918 = -0.281209000004*t4906;
  t4923 = t1109*t4386;
  t4926 = t1414*t4486;
  t4943 = t871*t4693;
  t4976 = t4878 + t4890 + t4897 + t4918 + t4923 + t4926 + t4943;
  t3801 = t3112*t3775;
  t3885 = t3153*t3879;
  t3960 = t3076*t3917;
  t3985 = t3801 + t3885 + t3960;
  t3989 = t3034*t3985;
  t4020 = t342*t4018;
  t4077 = -1.*t2538*t4074;
  t4127 = t4020 + t4077;
  t4148 = t140*t4127;
  t4161 = t2538*t4018;
  t4163 = t342*t4074;
  t4174 = t4161 + t4163;
  t4180 = -1.*t4174*t2914;
  t4186 = t4148 + t4180;
  t4189 = -1.*t3264*t4186;
  t4195 = t3989 + t4189;
  t4197 = 5.856279999999999e-13*var1[13];
  t4204 = -0.0387489999948987*t733;
  t4243 = t4214 + t1384;
  t4258 = -2.123459e-6*t4243;
  t4265 = t4263 + t755;
  t4280 = -0.281209000004*t4265;
  t4388 = t3112*t4386;
  t4535 = t3153*t4486;
  t4702 = t3076*t4693;
  t4708 = t4197 + t4204 + t4258 + t4280 + t4388 + t4535 + t4702;
  t4730 = -0.15121*t4722;
  t4861 = t342*t4835;
  t4977 = -1.*t2538*t4976;
  t4984 = t4730 + t4735 + t4861 + t4977;
  t4988 = t140*t4984;
  t4998 = 0.15121*t4722;
  t5000 = t2538*t4835;
  t5004 = t342*t4976;
  t5013 = t4998 + t4735 + t5000 + t5004;
  t5016 = -1.*t5013*t2914;
  t5064 = t4988 + t5016;
  t5313 = t3034*t4708;
  t5331 = -1.*t3264*t5064;
  t5348 = t5313 + t5331;
  t3482 = t3153*t3475;
  t3496 = t3112*t3493;
  t3510 = t3076*t3505;
  t3514 = t3482 + t3496 + t3510;
  t3541 = t342*t3537;
  t3603 = -1.*t2538*t3591;
  t3604 = t3541 + t3603;
  t3606 = t140*t3604;
  t3608 = t2538*t3537;
  t3610 = t342*t3591;
  t3620 = t3608 + t3610;
  t3622 = -1.*t3620*t2914;
  t3623 = t3606 + t3622;
  t5378 = t3985*t3264;
  t5379 = t3034*t4186;
  t5380 = t5378 + t5379;
  t5161 = t4708*t3264;
  t5206 = t3034*t5064;
  t5228 = t5161 + t5206;
  t5456 = t3034*t3514;
  t5539 = -1.*t3264*t3623;
  t5599 = t5456 + t5539;
  t4709 = -1.*t4708*t3264;
  t5078 = -1.*t3034*t5064;
  t5080 = t4709 + t5078;
  t3516 = t3514*t3264;
  t3641 = t3034*t3623;
  t3643 = t3516 + t3641;
  t5660 = t140*t5013;
  t5665 = t4984*t2914;
  t5693 = t5660 + t5665;
  t6581 = -1.*t140*t2795;
  t6595 = -1.*t2913*t2914;
  t6600 = t6581 + t6595;
  t6198 = t140*t3620;
  t6245 = t3604*t2914;
  t6323 = t6198 + t6245;
  t5605 = t140*t4174;
  t5641 = t4127*t2914;
  t5653 = t5605 + t5641;
  t5752 = t5653*t5693;
  t7145 = -1.*t140*t5013;
  t7147 = -1.*t4984*t2914;
  t7164 = t7145 + t7147;
  t6358 = -1.*t6323*t5693;
  t7130 = t5653*t5064;
  t7171 = t4186*t5693;
  t7076 = -1.*t140*t4174;
  t7112 = -1.*t4127*t2914;
  t7113 = t7076 + t7112;
  t7207 = -1.*t6323*t5064;
  t7226 = -1.*t3623*t5693;
  t7191 = -1.*t140*t3620;
  t7192 = -1.*t3604*t2914;
  t7197 = t7191 + t7192;
  t5753 = t5380*t5228;
  t5878 = t4195*t5348;
  t5931 = t5752 + t5753 + t5878;
  t6456 = -1.*t3643*t5228;
  t6464 = -1.*t5599*t5348;
  t6471 = t6358 + t6456 + t6464;
  t7919 = 0.15121*t342;
  t7934 = -0.15121*t2538;
  t7984 = -1.*t2538*t4835;
  t7989 = -1.*t342*t4976;
  t7991 = t7919 + t7934 + t7984 + t7989;
  t8061 = t7919 + t4735 + t4861 + t4977;
  t8304 = -1.*t342*t2517;
  t8309 = -1.*t2538*t2769;
  t8312 = t8304 + t8309;
  t8315 = t140*t8312;
  t8326 = t8315 + t6595;
  t8334 = t8312*t2914;
  t8337 = t3272 + t8334;
  t8192 = -1.*t2538*t3537;
  t8213 = -1.*t342*t3591;
  t8228 = t8192 + t8213;
  t7182 = t3985*t4708;
  t7184 = t4186*t5064;
  t7185 = t7182 + t7184 + t5752;
  t8021 = -1.*t2538*t4018;
  t8037 = -1.*t342*t4074;
  t8048 = t8021 + t8037;
  t7276 = -1.*t3514*t4708;
  t7361 = -1.*t3623*t5064;
  t7376 = t7276 + t7361 + t6358;
  t8360 = t8048*t2914;
  t8361 = t4148 + t8360;
  t8363 = t140*t8061;
  t8365 = t7991*t2914;
  t8366 = t8363 + t8365;
  t8355 = t8228*t2914;
  t8356 = t3606 + t8355;
  t8377 = t140*t7991;
  t8380 = -1.*t8061*t2914;
  t8381 = t8377 + t8380;
  t8369 = t5653*t8366;
  t8375 = t8361*t5693;
  t8371 = t140*t8048;
  t8373 = t8371 + t7112;
  t8393 = -1.*t6323*t8366;
  t8543 = -1.*t8356*t5693;
  t8395 = t140*t8228;
  t8473 = t8395 + t7192;
  t8767 = 2.8e-11*t755;
  t8779 = -7.e-6*t559;
  t8781 = t8779 + t850;
  t8784 = t673 + t8767;
  t8764 = 4.e-6*t559;
  t8765 = t8764 + t3102;
  t8769 = t559 + t8767;
  t8807 = t8781*t3775;
  t8808 = -1.000000000049*t755*t3879;
  t8809 = t8784*t3917;
  t8812 = t8807 + t8808 + t8809;
  t8744 = 7.e-6*t559;
  t8745 = t8744 + t850;
  t8738 = -4.e-6*t559;
  t8739 = t8738 + t3102;
  t8847 = -2.8e-11*t755;
  t8778 = -1.000000000049*t755*t3475;
  t8783 = t8781*t3493;
  t8787 = t8784*t3505;
  t8792 = t8778 + t8783 + t8787;
  t8828 = t8779 + t2640;
  t8830 = -0.038748999993*t8828;
  t8832 = t8764 + t1384;
  t8833 = -0.281209000004*t8832;
  t8834 = -1.38024835e-16*t755;
  t8836 = -6.5e-11*t755*t4386;
  t8837 = t8745*t4486;
  t8838 = t8739*t4693;
  t8839 = -1.4640699999999997e-7 + t8830 + t8833 + t8834 + t8836 + t8837 + t8838;
  t8848 = t559 + t8847;
  t8849 = -0.281209000004*t8848;
  t8850 = t8744 + t2640;
  t8851 = -2.123459e-6*t8850;
  t8853 = -0.0387489999948987*t755;
  t8854 = t8781*t4386;
  t8855 = -1.000000000049*t755*t4486;
  t8995 = t8784*t4693;
  t9012 = 5.856279999999999e-13 + t8849 + t8851 + t8853 + t8854 + t8855 + t8995;
  t9018 = t673 + t8847;
  t9027 = -0.038748999993*t9018;
  t9038 = t8738 + t1384;
  t9047 = -2.123459e-6*t9038;
  t9074 = -0.28120900000849935*t755;
  t9123 = t8765*t4386;
  t9132 = t8769*t4486;
  t9133 = -1.000000000016*t755*t4693;
  t9134 = 1.0248489999999998e-12 + t9027 + t9047 + t9074 + t9123 + t9132 + t9133;
  t8827 = t8812*t4708;
  t9016 = t3985*t9012;
  t8841 = -6.5e-11*t755*t3775;
  t8842 = t8745*t3879;
  t8843 = t8739*t3917;
  t8845 = t8841 + t8842 + t8843;
  t8821 = t8765*t3775;
  t8823 = t8769*t3879;
  t8824 = -1.000000000016*t755*t3917;
  t8825 = t8821 + t8823 + t8824;
  t9170 = -1.*t8792*t4708;
  t9179 = -1.*t3514*t9012;
  t9172 = t8745*t3475;
  t9173 = -6.5e-11*t755*t3493;
  t9174 = t8739*t3505;
  t9175 = t9172 + t9173 + t9174;
  t9153 = t8769*t3475;
  t9159 = t8765*t3493;
  t9167 = -1.000000000016*t755*t3505;
  t9168 = t9153 + t9159 + t9167;
  t9311 = -1.*t2538*t8839;
  t9321 = t342*t9134;
  t9324 = t9311 + t9321;
  t9329 = t342*t8839;
  t9331 = t2538*t9134;
  t9332 = t9329 + t9331;
  t8740 = t8739*t1077;
  t8743 = -6.5e-11*t755*t1212;
  t8747 = t8745*t2444;
  t8753 = t8740 + t8743 + t8747;
  t8763 = -1.000000000016*t755*t1077;
  t8766 = t8765*t1212;
  t8770 = t8769*t2444;
  t8772 = t8763 + t8766 + t8770;
  t9433 = t342*t8753;
  t9434 = t2538*t8772;
  t9435 = t9433 + t9434;
  t9398 = -1.*t2538*t8753;
  t9399 = t342*t8772;
  t9400 = t9398 + t9399;
  t9392 = t8784*t1077;
  t9393 = t8781*t1212;
  t9395 = -1.000000000049*t755*t2444;
  t9396 = t9392 + t9393 + t9395;
  t9431 = t140*t9400;
  t9436 = -1.*t9435*t2914;
  t9438 = t9431 + t9436;
  t9445 = t140*t9435;
  t9452 = t9400*t2914;
  t9459 = t9445 + t9452;
  t9461 = t3034*t9396;
  t9463 = -1.*t3264*t9438;
  t9464 = t9461 + t9463;
  t9358 = t342*t9175;
  t9359 = t2538*t9168;
  t9360 = t9358 + t9359;
  t9362 = -1.*t2538*t9175;
  t9369 = t342*t9168;
  t9375 = t9362 + t9369;
  t9269 = t342*t8845;
  t9271 = t2538*t8825;
  t9279 = t9269 + t9271;
  t9304 = -1.*t2538*t8845;
  t9306 = t342*t8825;
  t9307 = t9304 + t9306;
  t9495 = t140*t9279;
  t9500 = t9307*t2914;
  t9501 = t9495 + t9500;
  t9483 = t140*t9360;
  t9484 = t9375*t2914;
  t9488 = t9483 + t9484;
  t9509 = t140*t9332;
  t9510 = t9324*t2914;
  t9511 = t9509 + t9510;
  t9520 = t140*t9324;
  t9525 = -1.*t9332*t2914;
  t9526 = t9520 + t9525;
  t9531 = t140*t9375;
  t9533 = -1.*t9360*t2914;
  t9534 = t9531 + t9533;
  t9503 = t140*t9307;
  t9505 = -1.*t9279*t2914;
  t9506 = t9503 + t9505;
  t9508 = t9501*t5693;
  t9512 = t5653*t9511;
  t9584 = t8812*t3264;
  t9585 = t3034*t9506;
  t9588 = t9584 + t9585;
  t9544 = -1.*t9488*t5693;
  t9551 = -1.*t6323*t9511;
  t9576 = t8792*t3264;
  t9577 = t3034*t9534;
  t9578 = t9576 + t9577;
  t9602 = t9012*t3264;
  t9603 = t3034*t9526;
  t9607 = t9602 + t9603;
  t9621 = t3034*t9012;
  t9623 = -1.*t3264*t9526;
  t9626 = t9621 + t9623;
  t9675 = 4.e-6*t894;
  t9659 = -7.e-6*t894;
  t9661 = t9659 + t3739;
  t9662 = -7.e-6*t9661;
  t9665 = -2.8e-11*t1011;
  t9666 = t894 + t9662 + t9665;
  t9688 = 7.000000000455e-6*t1011;
  t9693 = t9675 + t9688;
  t9701 = t9675 + t1957;
  t9704 = -7.e-6*t9701;
  t9712 = 1.000000000016*t1011;
  t9718 = t9704 + t9712;
  t9830 = 7.e-6*t894;
  t9870 = 2.8e-11*t1011;
  t9820 = -4.e-6*t894;
  t9821 = t9820 + t1957;
  t9822 = -0.80315*t9821;
  t9831 = t9830 + t3739;
  t9832 = -0.038924*t9831;
  t9837 = t9659 + t1029;
  t9839 = -0.038922999986*t9837;
  t9840 = t9675 + t3491;
  t9841 = -0.503149000008*t9840;
  t9846 = -9.666064052774999e-12*t1011;
  t9847 = -2.598649999999999e-7 + t9822 + t9832 + t9839 + t9841 + t9846;
  t9852 = 0.148705*t9661;
  t9861 = t894 + t9665;
  t9869 = -0.503149000008*t9861;
  t9871 = t958 + t9870;
  t9875 = -0.80315*t9871;
  t9899 = t9830 + t1029;
  t9918 = -3.6777349999999994e-6*t9899;
  t9922 = 1.0000140000590574e-6*t1011;
  t9944 = 1.0394599999999997e-12 + t9852 + t9869 + t9875 + t9918 + t9922;
  t9957 = 0.148705*t9701;
  t9967 = t958 + t9665;
  t9990 = -0.038922999986*t9967;
  t9991 = t894 + t9870;
  t9998 = -0.038924*t9991;
  t10000 = t9820 + t3491;
  t10005 = -3.6777349999999994e-6*t10000;
  t10008 = 0.30000099999679997*t1011;
  t10011 = 1.8190549999999993e-12 + t9957 + t9990 + t9998 + t10005 + t10008;
  t10044 = -7.e-6*t9821;
  t10045 = 4.e-6*t9837;
  t10046 = -6.5e-11*t1011;
  t10047 = t10044 + t10045 + t10046;
  t10060 = 4.e-6*t9967;
  t10061 = 1.12e-16*t1011;
  t10066 = t9675 + t10060 + t10061;
  t10099 = -7.e-6*t9871;
  t10108 = 1.96e-16*t1011;
  t10117 = t9659 + t10099 + t10108;
  t9848 = t2648*t9847;
  t9947 = t2698*t9944;
  t10017 = t2590*t10011;
  t10018 = t9848 + t9947 + t10017;
  t10030 = t3112*t9847;
  t10031 = t3153*t9944;
  t10032 = t3076*t10011;
  t10033 = t10030 + t10031 + t10032;
  t10037 = t1109*t9847;
  t10038 = t1414*t9944;
  t10039 = t871*t10011;
  t10042 = t10037 + t10038 + t10039;
  t10223 = 4.e-6*t9661;
  t10224 = -1.000000000049*t1011;
  t10225 = t10223 + t10224;
  t10228 = -4.00000000026e-6*t1011;
  t10233 = t9830 + t10228;
  t10245 = 4.e-6*t9701;
  t10246 = t894 + t10245 + t9870;
  t10254 = t3153*t10225;
  t10256 = t3112*t10233;
  t10257 = t3076*t10246;
  t10262 = t10254 + t10256 + t10257;
  t8796 = t4018*t4835;
  t8802 = t4074*t4976;
  t8803 = t8796 + t7182 + t8802;
  t10133 = t3112*t10047;
  t10135 = t3076*t10066;
  t10145 = t3153*t10117;
  t10146 = t10133 + t10135 + t10145;
  t8813 = -1.*t3537*t4835;
  t8817 = -1.*t3591*t4976;
  t8819 = t8813 + t7276 + t8817;
  t10354 = t4386*t10047;
  t10357 = t3775*t9847;
  t10363 = t3879*t9944;
  t10368 = t3917*t10011;
  t10369 = t10117*t4486;
  t10371 = t10066*t4693;
  t10372 = t10354 + t10357 + t10363 + t10368 + t10369 + t10371;
  t10375 = -1.*t4386*t10233;
  t10376 = -1.*t3475*t9944;
  t10377 = -1.*t9847*t3493;
  t10378 = -1.*t10011*t3505;
  t10379 = -1.*t10225*t4486;
  t10383 = -1.*t10246*t4693;
  t10388 = t10375 + t10376 + t10377 + t10378 + t10379 + t10383;
  t10391 = t3775*t4386;
  t10392 = t3879*t4486;
  t10393 = t3917*t4693;
  t10394 = t10391 + t10392 + t10393;
  t10400 = -1.*t4386*t3493;
  t10409 = -1.*t3475*t4486;
  t10410 = -1.*t3505*t4693;
  t10412 = t10400 + t10409 + t10410;
  t10036 = t3985*t10033;
  t10148 = t10146*t4708;
  t10154 = t1109*t10047;
  t10155 = t871*t10066;
  t10157 = t1414*t10117;
  t10158 = t10154 + t10155 + t10157;
  t10049 = t2648*t10047;
  t10072 = t2590*t10066;
  t10120 = t2698*t10117;
  t10123 = t10049 + t10072 + t10120;
  t10177 = -1.*t10033*t3514;
  t10271 = -1.*t10262*t4708;
  t10448 = t2538*t10018;
  t10452 = t342*t10042;
  t10453 = t10448 + t10452;
  t10455 = t342*t10018;
  t10456 = -1.*t2538*t10042;
  t10457 = t10455 + t10456;
  t10227 = t2698*t10225;
  t10235 = t2648*t10233;
  t10248 = t2590*t10246;
  t10249 = t10227 + t10235 + t10248;
  t10272 = t1414*t10225;
  t10273 = t1109*t10233;
  t10289 = t871*t10246;
  t10291 = t10272 + t10273 + t10289;
  t9186 = t4174*t5013;
  t9189 = t4127*t4984;
  t9190 = t7182 + t9186 + t9189;
  t9227 = -1.*t3620*t5013;
  t9228 = -1.*t3604*t4984;
  t9235 = t7276 + t9227 + t9228;
  t9667 = t2698*t9666;
  t9699 = t2648*t9693;
  t9731 = t2590*t9718;
  t9739 = t9667 + t9699 + t9731;
  t9784 = t1414*t9666;
  t9816 = t1109*t9693;
  t9817 = t871*t9718;
  t9818 = t9784 + t9816 + t9817;
  t10515 = t2538*t9739;
  t10516 = t342*t9818;
  t10519 = t10515 + t10516;
  t10507 = t342*t9739;
  t10508 = -1.*t2538*t9818;
  t10513 = t10507 + t10508;
  t10495 = t3153*t9666;
  t10500 = t3112*t9693;
  t10502 = t3076*t9718;
  t10503 = t10495 + t10500 + t10502;
  t10514 = t140*t10513;
  t10525 = -1.*t10519*t2914;
  t10526 = t10514 + t10525;
  t10535 = t140*t10519;
  t10537 = t10513*t2914;
  t10545 = t10535 + t10537;
  t10562 = t3034*t10503;
  t10564 = -1.*t3264*t10526;
  t10566 = t10562 + t10564;
  t10463 = -1.*t2538*t10158;
  t10465 = t342*t10123;
  t10466 = t10463 + t10465;
  t10459 = t342*t10158;
  t10460 = t2538*t10123;
  t10461 = t10459 + t10460;
  t10583 = t140*t10457;
  t10590 = -1.*t10453*t2914;
  t10595 = t10583 + t10590;
  t10606 = t140*t10453;
  t10614 = t10457*t2914;
  t10620 = t10606 + t10614;
  t10477 = t342*t10249;
  t10478 = -1.*t2538*t10291;
  t10483 = t10477 + t10478;
  t10473 = t2538*t10249;
  t10474 = t342*t10291;
  t10475 = t10473 + t10474;
  t10649 = t140*t10475;
  t10657 = t10483*t2914;
  t10672 = t10649 + t10657;
  t10627 = t140*t10461;
  t10629 = t10466*t2914;
  t10631 = t10627 + t10629;
  t10621 = t5653*t10620;
  t10633 = t10631*t5693;
  t10623 = t140*t10466;
  t10624 = -1.*t10461*t2914;
  t10625 = t10623 + t10624;
  t10638 = -1.*t10620*t6323;
  t10687 = -1.*t10672*t5693;
  t10694 = t10033*t3264;
  t10696 = t3034*t10595;
  t10707 = t10694 + t10696;
  t10720 = t3034*t10033;
  t10721 = -1.*t3264*t10595;
  t10722 = t10720 + t10721;
  t10639 = t140*t10483;
  t10640 = -1.*t10475*t2914;
  t10644 = t10639 + t10640;
  t10756 = t10262*t3264;
  t10757 = t3034*t10644;
  t10759 = t10756 + t10757;
  t10728 = t10146*t3264;
  t10732 = t3034*t10625;
  t10733 = t10728 + t10732;
  t3354 = t3014*t2939;
  t3357 = -1.*t61*t3328;
  t3375 = t3354 + t3357;
  t5941 = -1.*t3514*t3264;
  t5945 = -1.*t3034*t3623;
  t5981 = t5941 + t5945;
  t10845 = t3176*t3264;
  t10865 = t3034*t3295;
  t10895 = t10845 + t10865;
  t5278 = -1.*t3985*t3264;
  t5292 = -1.*t3034*t4186;
  t5307 = t5278 + t5292;
  t11117 = -1.*t5653*t5693;
  t11153 = t2939*t5693;
  t11277 = -1.*t5653*t5064;
  t11281 = -1.*t4186*t5693;
  t11297 = t2939*t5064;
  t11300 = t3295*t5693;
  t11118 = -1.*t5380*t5228;
  t11119 = -1.*t4195*t5348;
  t11120 = t11117 + t11118 + t11119;
  t11156 = t10895*t5228;
  t11158 = t3328*t5348;
  t11165 = t11153 + t11156 + t11158;
  t11284 = -1.*t3985*t4708;
  t11285 = -1.*t4186*t5064;
  t11286 = t11284 + t11285 + t11117;
  t11291 = t3176*t4708;
  t11292 = t3295*t5064;
  t11293 = t11291 + t11292 + t11153;
  t11523 = -1.*t5653*t8366;
  t11525 = -1.*t8361*t5693;
  t11529 = t2939*t8366;
  t11547 = t8337*t5693;
  t11604 = -1.*t8812*t4708;
  t11607 = -1.*t3985*t9012;
  t11616 = t9396*t4708;
  t11620 = t3176*t9012;
  t9633 = t3034*t8792;
  t9639 = -1.*t3264*t9534;
  t9648 = t9633 + t9639;
  t9397 = t9396*t3264;
  t9440 = t3034*t9438;
  t9441 = t9397 + t9440;
  t11674 = -1.*t9501*t5693;
  t11767 = -1.*t5653*t9511;
  t9593 = t3034*t8812;
  t9594 = -1.*t3264*t9506;
  t9596 = t9593 + t9594;
  t11865 = t9459*t5693;
  t11866 = t2939*t9511;
  t11594 = -1.*t4018*t4835;
  t11595 = -1.*t4074*t4976;
  t11596 = t11594 + t11284 + t11595;
  t11598 = t2769*t4835;
  t11599 = t2517*t4976;
  t11601 = t11598 + t11291 + t11599;
  t12017 = t4386*t1212;
  t12018 = t2444*t4486;
  t12019 = t1077*t4693;
  t12021 = t12017 + t12018 + t12019;
  t12023 = -1.*t4386*t10047;
  t12024 = -1.*t3775*t9847;
  t12025 = -1.*t3879*t9944;
  t12026 = -1.*t3917*t10011;
  t12027 = -1.*t10117*t4486;
  t12028 = -1.*t10066*t4693;
  t12029 = t12023 + t12024 + t12025 + t12026 + t12027 + t12028;
  t12031 = -1.*t3775*t4386;
  t12032 = -1.*t3879*t4486;
  t12033 = -1.*t3917*t4693;
  t12034 = t12031 + t12032 + t12033;
  t12036 = t9847*t1212;
  t12037 = t4386*t9693;
  t12038 = t1077*t10011;
  t12039 = t9944*t2444;
  t12040 = t9666*t4486;
  t12041 = t9718*t4693;
  t12042 = t12036 + t12037 + t12038 + t12039 + t12040 + t12041;
  t11978 = -1.*t3985*t10033;
  t11990 = -1.*t10146*t4708;
  t11628 = -1.*t4174*t5013;
  t11629 = -1.*t4127*t4984;
  t11630 = t11284 + t11628 + t11629;
  t11632 = t2795*t5013;
  t11633 = t2913*t4984;
  t11634 = t11291 + t11632 + t11633;
  t11996 = t10033*t3176;
  t12003 = t10503*t4708;
  t10761 = t3034*t10262;
  t10762 = -1.*t3264*t10644;
  t10763 = t10761 + t10762;
  t12094 = -1.*t5653*t10620;
  t12098 = -1.*t10631*t5693;
  t10743 = t3034*t10146;
  t10748 = -1.*t3264*t10625;
  t10749 = t10743 + t10748;
  t10505 = t10503*t3264;
  t10527 = t3034*t10526;
  t10529 = t10505 + t10527;
  t12107 = t10620*t2939;
  t12110 = t10545*t5693;
  t11084 = t3014*t6323;
  t11090 = -1.*t61*t5599;
  t11094 = t11084 + t11090;
  t12404 = -1.*t2939*t5693;
  t12416 = t6323*t5693;
  t12438 = -1.*t2939*t5064;
  t12440 = -1.*t3295*t5693;
  t12445 = t6323*t5064;
  t12448 = t3623*t5693;
  t12405 = -1.*t10895*t5228;
  t12406 = -1.*t3328*t5348;
  t12408 = t12404 + t12405 + t12406;
  t12417 = t3643*t5228;
  t12418 = t5599*t5348;
  t12419 = t12416 + t12417 + t12418;
  t12433 = -1.*t3176*t4708;
  t12434 = -1.*t3295*t5064;
  t12435 = t12433 + t12434 + t12404;
  t12453 = t3514*t4708;
  t12454 = t3623*t5064;
  t12455 = t12453 + t12454 + t12416;
  t12505 = -1.*t2939*t8366;
  t12508 = -1.*t8337*t5693;
  t12515 = t6323*t8366;
  t12520 = t8356*t5693;
  t12621 = -1.*t9396*t4708;
  t12624 = -1.*t3176*t9012;
  t12631 = t8792*t4708;
  t12635 = t3514*t9012;
  t12755 = -1.*t9459*t5693;
  t12768 = -1.*t2939*t9511;
  t12854 = t9488*t5693;
  t12855 = t6323*t9511;
  t12582 = -1.*t2769*t4835;
  t12594 = -1.*t2517*t4976;
  t12598 = t12582 + t12433 + t12594;
  t12603 = t3537*t4835;
  t12606 = t3591*t4976;
  t12618 = t12603 + t12453 + t12606;
  t12979 = -1.*t4386*t1212;
  t12980 = -1.*t2444*t4486;
  t12981 = -1.*t1077*t4693;
  t12982 = t12979 + t12980 + t12981;
  t13007 = t4386*t10233;
  t13025 = t3475*t9944;
  t13082 = t9847*t3493;
  t13083 = t10011*t3505;
  t13084 = t10225*t4486;
  t13085 = t10246*t4693;
  t13086 = t13007 + t13025 + t13082 + t13083 + t13084 + t13085;
  t13088 = t4386*t3493;
  t13089 = t3475*t4486;
  t13090 = t3505*t4693;
  t13091 = t13088 + t13089 + t13090;
  t13093 = -1.*t9847*t1212;
  t13094 = -1.*t4386*t9693;
  t13097 = -1.*t1077*t10011;
  t13099 = -1.*t9944*t2444;
  t13100 = -1.*t9666*t4486;
  t13101 = -1.*t9718*t4693;
  t13102 = t13093 + t13094 + t13097 + t13099 + t13100 + t13101;
  t12881 = t10033*t3514;
  t12932 = t10262*t4708;
  t12641 = -1.*t2795*t5013;
  t12642 = -1.*t2913*t4984;
  t12643 = t12433 + t12641 + t12642;
  t12645 = t3620*t5013;
  t12646 = t3604*t4984;
  t12647 = t12453 + t12645 + t12646;
  t12952 = -1.*t10033*t3176;
  t12963 = -1.*t10503*t4708;
  t13302 = t10620*t6323;
  t13309 = t10672*t5693;
  t13324 = -1.*t10620*t2939;
  t13327 = -1.*t10545*t5693;
  t12373 = t3014*t5653;
  t12376 = -1.*t61*t4195;
  t12377 = t12373 + t12376;
  t12347 = 6.5e-11*t983;
  p_output1[0]=(-1.*t3014*t3328 - 1.*t2939*t61)*var2[1] + t3375*var2[2];
  p_output1[1]=t3328*var2[0] - 1.*t3423*t61*var2[1] + t3014*t3423*var2[2] + (t3643*(t4195*t5080 + t4195*t5228 + t5307*t5348 + t5348*t5380) + t5599*t5931 + t5380*(-1.*t3643*t5348 - 1.*t5080*t5599 - 1.*t5228*t5599 - 1.*t5348*t5981) + t4195*t6471)*var2[3];
  p_output1[2]=t3034*t6600*var2[0] + (t3014*t3295 + t3264*t61*t6600)*var2[1] + (t3295*t61 - 1.*t3014*t3264*t6600)*var2[2] + (t3034*t6471*t7113 + t3643*(t3034*t5228*t7113 - 1.*t3264*t5348*t7113 + t7130 - 1.*t3264*t4195*t7164 + t3034*t5380*t7164 + t7171) + t3034*t5931*t7197 + t5380*(-1.*t3034*t3643*t7164 + t3264*t5599*t7164 - 1.*t3034*t5228*t7197 + t3264*t5348*t7197 + t7207 + t7226))*var2[3] + (t6323*(t5064*t7113 + t7130 + t4186*t7164 + t7171) + t3623*t7185 + t5653*(-1.*t3623*t7164 - 1.*t5064*t7197 + t7207 + t7226) + t4186*t7376)*var2[4];
  p_output1[3]=t3034*t8326*var2[0] + (t3264*t61*t8326 + t3014*t8337)*var2[1] + (-1.*t3014*t3264*t8326 + t61*t8337)*var2[2] + (t3034*t6471*t8373 + t3643*(t8369 + t3034*t5228*t8373 - 1.*t3264*t5348*t8373 + t8375 - 1.*t3264*t4195*t8381 + t3034*t5380*t8381) + t3034*t5931*t8473 + t5380*(-1.*t3034*t3643*t8381 + t3264*t5599*t8381 + t8393 - 1.*t3034*t5228*t8473 + t3264*t5348*t8473 + t8543))*var2[3] + (t7185*t8356 + t7376*t8361 + t6323*(t8369 + t5064*t8373 + t8375 + t4186*t8381) + t5653*(-1.*t3623*t8381 + t8393 - 1.*t5064*t8473 + t8543))*var2[4] + (t3514*(t4127*t5013 + t4127*t7991 + t4984*t8048 + t4174*t8061) + t3985*(-1.*t3604*t5013 - 1.*t3604*t7991 - 1.*t3620*t8061 - 1.*t4984*t8228))*var2[5];
  p_output1[4]=t9441*var2[0] + (t3014*t9459 - 1.*t61*t9464)*var2[1] + (t61*t9459 + t3014*t9464)*var2[2] + (t5931*t9578 + t6471*t9588 + t3643*(t9508 + t9512 + t5228*t9588 + t5348*t9596 + t5380*t9607 + t4195*t9626) + t5380*(t9544 + t9551 - 1.*t5228*t9578 - 1.*t3643*t9607 - 1.*t5599*t9626 - 1.*t5348*t9648))*var2[3] + (t7185*t9488 + t7376*t9501 + t6323*(t8827 + t9016 + t5064*t9506 + t9508 + t9512 + t4186*t9526) + t5653*(t9170 + t9179 - 1.*t3623*t9526 - 1.*t5064*t9534 + t9544 + t9551))*var2[4] + (t8792*t9190 + t8812*t9235 + t3514*(t8827 + t9016 + t5013*t9279 + t4984*t9307 + t4127*t9324 + t4174*t9332) + t3985*(t9170 + t9179 - 1.*t3604*t9324 - 1.*t3620*t9332 - 1.*t5013*t9360 - 1.*t4984*t9375))*var2[5] + (0.15121*t8753 + 0.15121*t8772 + t8792*t8803 + t8812*t8819 + t3514*(t4835*t8825 + t8827 + t4074*t8839 + t4976*t8845 + t9016 + t4018*t9134) + t3985*(-1.*t3591*t8839 - 1.*t3537*t9134 - 1.*t4835*t9168 + t9170 - 1.*t4976*t9175 + t9179))*var2[12];
  p_output1[5]=t10529*var2[0] + (t10545*t3014 - 1.*t10566*t61)*var2[1] + (t10566*t3014 + t10545*t61)*var2[2] + (t3643*(t10621 + t10633 + t10722*t4195 + t10733*t5228 + t10749*t5348 + t10707*t5380) + t5380*(t10638 + t10687 - 1.*t10707*t3643 - 1.*t10759*t5228 - 1.*t10763*t5348 - 1.*t10722*t5599) + t10759*t5931 + t10733*t6471)*var2[3] + ((t10177 + t10271 + t10638 + t10687 - 1.*t10595*t3623 - 1.*t10644*t5064)*t5653 + (t10036 + t10148 + t10621 + t10633 + t10595*t4186 + t10625*t5064)*t6323 + t10672*t7185 + t10631*t7376)*var2[4] + (t3514*(t10036 + t10148 + t10457*t4127 + t10453*t4174 + t10466*t4984 + t10461*t5013) + t3985*(t10177 + t10271 - 1.*t10457*t3604 - 1.*t10453*t3620 - 1.*t10483*t4984 - 1.*t10475*t5013) + t10262*t9190 + t10146*t9235)*var2[5] + (t3514*(t10036 + t10148 + t10018*t4018 + t10042*t4074 + t10123*t4835 + t10158*t4976) + t3985*(t10177 + t10271 - 1.*t10018*t3537 - 1.*t10042*t3591 - 1.*t10249*t4835 - 1.*t10291*t4976) + t10262*t8803 + t10146*t8819 + 0.15121*t9739 + 0.15121*t9818)*var2[12] + (t10233*t10394 + t10047*t10412 + t10372*t3493 + t10388*t3775 + 4.e-6*(-1.*t10225*t10394 - 1.*t10117*t10412 - 1.*t10372*t3475 - 1.*t10388*t3879) - 7.e-6*(t10246*t10394 + t10066*t10412 + t10372*t3505 + t10388*t3917) - 0.281209*t9666 + 0.038749*t9718 + 1.e-6*(-7.000000000455e-6*t1011 + t9820))*var2[13];
  p_output1[6]=t10895;
  p_output1[7]=t3375;
  p_output1[8]=t3014*t3328 + t2939*t61;
  p_output1[9]=t3643*t5931 + t5380*t6471;
  p_output1[10]=t6323*t7185 + t5653*t7376;
  p_output1[11]=t3514*t9190 + t3985*t9235;
  p_output1[12]=0.15121*t2517 + 0.15121*t2769 + t3514*t8803 + t3985*t8819;
  p_output1[13]=0.038749*t1077 - 0.281209*t2444 + t10394*t3493 + 1.e-6*(t1002 + 7.e-6*t1117 + t3739) + t10412*t3775 + 4.e-6*(-1.*t10394*t3475 - 1.*t10412*t3879) - 7.e-6*(t10394*t3505 + t10412*t3917);
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t3014*t5599 - 1.*t61*t6323)*var2[1] + t11094*var2[2];
  p_output1[16]=t5599*var2[0] - 1.*t5981*t61*var2[1] + t3014*t5981*var2[2] + (t11120*t3328 + t11165*t4195 + (t3328*t5080 + t3328*t5228 + t10895*t5348 + t3423*t5348)*t5380 + t10895*(-1.*t4195*t5080 - 1.*t4195*t5228 - 1.*t5307*t5348 - 1.*t5348*t5380))*var2[3];
  p_output1[17]=t3034*t7197*var2[0] + (t3014*t3623 + t3264*t61*t7197)*var2[1] + (t3623*t61 - 1.*t3014*t3264*t7197)*var2[2] + (t11120*t3034*t6600 + t11165*t3034*t7113 + t5380*(t11297 + t11300 + t3034*t5228*t6600 - 1.*t3264*t5348*t6600 + t10895*t3034*t7164 - 1.*t3264*t3328*t7164) + t10895*(t11277 + t11281 - 1.*t3034*t5228*t7113 + t3264*t5348*t7113 + t3264*t4195*t7164 - 1.*t3034*t5380*t7164))*var2[3] + (t11286*t3295 + t11293*t4186 + t5653*(t11297 + t11300 + t5064*t6600 + t3295*t7164) + t2939*(t11277 + t11281 - 1.*t5064*t7113 - 1.*t4186*t7164))*var2[4];
  p_output1[18]=t3034*t8473*var2[0] + (t3014*t8356 + t3264*t61*t8473)*var2[1] + (t61*t8356 - 1.*t3014*t3264*t8473)*var2[2] + (t11120*t3034*t8326 + t11165*t3034*t8373 + t5380*(t11529 + t11547 + t3034*t5228*t8326 - 1.*t3264*t5348*t8326 + t10895*t3034*t8381 - 1.*t3264*t3328*t8381) + t10895*(t11523 + t11525 - 1.*t3034*t5228*t8373 + t3264*t5348*t8373 + t3264*t4195*t8381 - 1.*t3034*t5380*t8381))*var2[3] + (t11286*t8337 + t11293*t8361 + t5653*(t11529 + t11547 + t5064*t8326 + t3295*t8381) + t2939*(t11523 + t11525 - 1.*t5064*t8373 - 1.*t4186*t8381))*var2[4] + (t3176*(-1.*t4127*t5013 - 1.*t4127*t7991 - 1.*t4984*t8048 - 1.*t4174*t8061) + t3985*(t2913*t5013 + t2913*t7991 + t2795*t8061 + t4984*t8312))*var2[5];
  p_output1[19]=t9578*var2[0] + (t3014*t9488 - 1.*t61*t9648)*var2[1] + (t61*t9488 + t3014*t9648)*var2[2] + (t11120*t9441 + t11165*t9588 + t5380*(t11865 + t11866 + t5228*t9441 + t5348*t9464 + t10895*t9607 + t3328*t9626) + t10895*(t11674 + t11767 - 1.*t5228*t9588 - 1.*t5348*t9596 - 1.*t5380*t9607 - 1.*t4195*t9626))*var2[3] + (t11286*t9459 + t11293*t9501 + t5653*(t11616 + t11620 + t11865 + t11866 + t5064*t9438 + t3295*t9526) + t2939*(t11604 + t11607 + t11674 + t11767 - 1.*t5064*t9506 - 1.*t4186*t9526))*var2[4] + (t11634*t8812 + t3176*(t11604 + t11607 - 1.*t5013*t9279 - 1.*t4984*t9307 - 1.*t4127*t9324 - 1.*t4174*t9332) + t11630*t9396 + t3985*(t11616 + t11620 + t2913*t9324 + t2795*t9332 + t4984*t9400 + t5013*t9435))*var2[5] + (t11601*t8812 + t3985*(t11616 + t11620 + t4976*t8753 + t4835*t8772 + t2517*t8839 + t2769*t9134) + t3176*(t11604 + t11607 - 1.*t4835*t8825 - 1.*t4074*t8839 - 1.*t4976*t8845 - 1.*t4018*t9134) + 0.15121*t9168 + 0.15121*t9175 + t11596*t9396)*var2[12];
  p_output1[20]=t10759*var2[0] + (t10672*t3014 - 1.*t10763*t61)*var2[1] + (t10763*t3014 + t10672*t61)*var2[2] + (t10529*t11120 + t10733*t11165 + (t10707*t10895 + t12107 + t12110 + t10722*t3328 + t10529*t5228 + t10566*t5348)*t5380 + t10895*(t12094 + t12098 - 1.*t10722*t4195 - 1.*t10733*t5228 - 1.*t10749*t5348 - 1.*t10707*t5380))*var2[3] + (t10545*t11286 + t10631*t11293 + t2939*(t11978 + t11990 + t12094 + t12098 - 1.*t10595*t4186 - 1.*t10625*t5064) + (t11996 + t12003 + t12107 + t12110 + t10595*t3295 + t10526*t5064)*t5653)*var2[4] + (t10503*t11630 + t10146*t11634 + t3176*(t11978 + t11990 - 1.*t10457*t4127 - 1.*t10453*t4174 - 1.*t10466*t4984 - 1.*t10461*t5013) + t3985*(t11996 + t12003 + t10453*t2795 + t10457*t2913 + t10513*t4984 + t10519*t5013))*var2[5] + (0.15121*t10249 + 0.15121*t10291 + t10503*t11596 + t10146*t11601 + t3176*(t11978 + t11990 - 1.*t10018*t4018 - 1.*t10042*t4074 - 1.*t10123*t4835 - 1.*t10158*t4976) + t3985*(t11996 + t12003 + t10042*t2517 + t10018*t2769 + t4835*t9739 + t4976*t9818))*var2[12] + (-0.281209*t10225 + 0.038749*t10246 + t10047*t12021 + t12029*t1212 + t12042*t3775 + 1.e-6*(4.00000000026e-6*t1011 + t9659) + 4.e-6*(-1.*t10117*t12021 - 1.*t12029*t2444 - 1.*t12042*t3879 - 1.*t12034*t9666) + t12034*t9693 - 7.e-6*(t10066*t12021 + t1077*t12029 + t12042*t3917 + t12034*t9718))*var2[13];
  p_output1[21]=t3643;
  p_output1[22]=t11094;
  p_output1[23]=t3014*t5599 + t61*t6323;
  p_output1[24]=t10895*t11120 + t11165*t5380;
  p_output1[25]=t11286*t2939 + t11293*t5653;
  p_output1[26]=t11630*t3176 + t11634*t3985;
  p_output1[27]=t11596*t3176 + 0.15121*t3537 + 0.15121*t3591 + t11601*t3985;
  p_output1[28]=t12034*t1212 - 0.281209*t3475 + 0.038749*t3505 + 1.e-6*(4.e-6*(-1. + t12347) + t1957 + t3654) + t12021*t3775 + 4.e-6*(-1.*t12034*t2444 - 1.*t12021*t3879) - 7.e-6*(t1077*t12034 + t12021*t3917);
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t3014*t4195 - 1.*t5653*t61)*var2[1] + t12377*var2[2];
  p_output1[31]=t4195*var2[0] - 1.*t5307*t61*var2[1] + t3014*t5307*var2[2] + (t12419*t3328 + t3643*(-1.*t3328*t5080 - 1.*t3328*t5228 - 1.*t10895*t5348 - 1.*t3423*t5348) + t12408*t5599 + t10895*(t3643*t5348 + t5080*t5599 + t5228*t5599 + t5348*t5981))*var2[3];
  p_output1[32]=t3034*t7113*var2[0] + (t3014*t4186 + t3264*t61*t7113)*var2[1] + (t4186*t61 - 1.*t3014*t3264*t7113)*var2[2] + (t12419*t3034*t6600 + t3643*(t12438 + t12440 - 1.*t3034*t5228*t6600 + t3264*t5348*t6600 - 1.*t10895*t3034*t7164 + t3264*t3328*t7164) + t12408*t3034*t7197 + t10895*(t12445 + t12448 + t3034*t3643*t7164 - 1.*t3264*t5599*t7164 + t3034*t5228*t7197 - 1.*t3264*t5348*t7197))*var2[3] + (t12455*t3295 + t12435*t3623 + t6323*(t12438 + t12440 - 1.*t5064*t6600 - 1.*t3295*t7164) + t2939*(t12445 + t12448 + t3623*t7164 + t5064*t7197))*var2[4];
  p_output1[33]=t3034*t8373*var2[0] + (t3014*t8361 + t3264*t61*t8373)*var2[1] + (t61*t8361 - 1.*t3014*t3264*t8373)*var2[2] + (t12419*t3034*t8326 + t3643*(t12505 + t12508 - 1.*t3034*t5228*t8326 + t3264*t5348*t8326 - 1.*t10895*t3034*t8381 + t3264*t3328*t8381) + t12408*t3034*t8473 + t10895*(t12515 + t12520 + t3034*t3643*t8381 - 1.*t3264*t5599*t8381 + t3034*t5228*t8473 - 1.*t3264*t5348*t8473))*var2[3] + (t12455*t8337 + t12435*t8356 + t6323*(t12505 + t12508 - 1.*t5064*t8326 - 1.*t3295*t8381) + t2939*(t12515 + t12520 + t3623*t8381 + t5064*t8473))*var2[4] + (t3176*(t3604*t5013 + t3604*t7991 + t3620*t8061 + t4984*t8228) + t3514*(-1.*t2913*t5013 - 1.*t2913*t7991 - 1.*t2795*t8061 - 1.*t4984*t8312))*var2[5];
  p_output1[34]=t9588*var2[0] + (t3014*t9501 - 1.*t61*t9596)*var2[1] + (t61*t9501 + t3014*t9596)*var2[2] + (t12419*t9441 + t12408*t9578 + t3643*(t12755 + t12768 - 1.*t5228*t9441 - 1.*t5348*t9464 - 1.*t10895*t9607 - 1.*t3328*t9626) + t10895*(t12854 + t12855 + t5228*t9578 + t3643*t9607 + t5599*t9626 + t5348*t9648))*var2[3] + (t12455*t9459 + t12435*t9488 + t6323*(t12621 + t12624 + t12755 + t12768 - 1.*t5064*t9438 - 1.*t3295*t9526) + t2939*(t12631 + t12635 + t12854 + t12855 + t3623*t9526 + t5064*t9534))*var2[4] + (t12643*t8792 + t3176*(t12631 + t12635 + t3604*t9324 + t3620*t9332 + t5013*t9360 + t4984*t9375) + t12647*t9396 + t3514*(t12621 + t12624 - 1.*t2913*t9324 - 1.*t2795*t9332 - 1.*t4984*t9400 - 1.*t5013*t9435))*var2[5] + (t12598*t8792 + 0.15121*t8825 + 0.15121*t8845 + t3514*(t12621 + t12624 - 1.*t4976*t8753 - 1.*t4835*t8772 - 1.*t2517*t8839 - 1.*t2769*t9134) + t3176*(t12631 + t12635 + t3591*t8839 + t3537*t9134 + t4835*t9168 + t4976*t9175) + t12618*t9396)*var2[12];
  p_output1[35]=t10733*var2[0] + (t10631*t3014 - 1.*t10749*t61)*var2[1] + (t10749*t3014 + t10631*t61)*var2[2] + (t10759*t12408 + t10529*t12419 + t3643*(-1.*t10707*t10895 + t13324 + t13327 - 1.*t10722*t3328 - 1.*t10529*t5228 - 1.*t10566*t5348) + t10895*(t13302 + t13309 + t10707*t3643 + t10759*t5228 + t10763*t5348 + t10722*t5599))*var2[3] + (t10672*t12435 + t10545*t12455 + t2939*(t12881 + t12932 + t13302 + t13309 + t10595*t3623 + t10644*t5064) + (t12952 + t12963 + t13324 + t13327 - 1.*t10595*t3295 - 1.*t10526*t5064)*t6323)*var2[4] + (t10262*t12643 + t10503*t12647 + t3176*(t12881 + t12932 + t10457*t3604 + t10453*t3620 + t10483*t4984 + t10475*t5013) + t3514*(t12952 + t12963 - 1.*t10453*t2795 - 1.*t10457*t2913 - 1.*t10513*t4984 - 1.*t10519*t5013))*var2[5] + (0.15121*t10123 + 0.15121*t10158 + t10262*t12598 + t10503*t12618 + t3176*(t12881 + t12932 + t10018*t3537 + t10042*t3591 + t10249*t4835 + t10291*t4976) + t3514*(t12952 + t12963 - 1.*t10042*t2517 - 1.*t10018*t2769 - 1.*t4835*t9739 - 1.*t4976*t9818))*var2[12] + (0.038749*t10066 - 0.281209*t10117 + t10233*t12982 + t1212*t13086 + t13102*t3493 + 4.e-6*(-1.*t10225*t12982 - 1.*t13086*t2444 - 1.*t13102*t3475 - 1.*t13091*t9666) + t13091*t9693 - 7.e-6*(t10246*t12982 + t1077*t13086 + t13102*t3505 + t13091*t9718) + 1.e-6*(6.5e-11*t1011 + 7.e-6*t9821 + 4.e-6*t9831))*var2[13];
  p_output1[36]=t5380;
  p_output1[37]=t12377;
  p_output1[38]=t3014*t4195 + t5653*t61;
  p_output1[39]=t10895*t12419 + t12408*t3643;
  p_output1[40]=t12455*t2939 + t12435*t6323;
  p_output1[41]=t12647*t3176 + t12643*t3514;
  p_output1[42]=t12618*t3176 + t12598*t3514 + 0.15121*t4018 + 0.15121*t4074;
  p_output1[43]=t1212*t13091 + 4.e-6*(-1.*t13091*t2444 - 1.*t12982*t3475) + t12982*t3493 - 7.e-6*(t1077*t13091 + t12982*t3505) - 0.281209*t3879 + 0.038749*t3917 + 1.e-6*(-1. + t12347 + 7.e-6*t3742 + 4.e-6*t4377);
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void J_dh_RlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
