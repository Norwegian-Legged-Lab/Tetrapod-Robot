/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:21 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t129;
  double t134;
  double t138;
  double t76;
  double t86;
  double t94;
  double t157;
  double t175;
  double t106;
  double t139;
  double t147;
  double t438;
  double t489;
  double t567;
  double t98;
  double t1076;
  double t1234;
  double t1298;
  double t1320;
  double t1383;
  double t1846;
  double t1934;
  double t1962;
  double t1988;
  double t2020;
  double t2099;
  double t2147;
  double t2283;
  double t119;
  double t128;
  double t580;
  double t611;
  double t843;
  double t1400;
  double t1529;
  double t1691;
  double t1767;
  double t1793;
  double t2165;
  double t2262;
  double t74;
  double t2358;
  double t2411;
  double t2604;
  double t2774;
  double t2792;
  double t2796;
  double t2804;
  double t2818;
  double t2844;
  double t2852;
  double t42;
  double t2945;
  double t2980;
  double t2992;
  double t2263;
  double t2863;
  double t2870;
  double t3037;
  double t3121;
  double t2890;
  double t3039;
  double t3083;
  double t40;
  double t3158;
  double t3172;
  double t3175;
  double t3214;
  double t3229;
  double t3250;
  double t3259;
  double t3268;
  double t3278;
  double t3335;
  double t3360;
  double t3404;
  double t3453;
  double t3492;
  double t3542;
  double t3546;
  double t3595;
  double t3603;
  double t3696;
  double t3698;
  double t3750;
  double t3832;
  double t3841;
  double t3857;
  double t3878;
  double t3916;
  double t3938;
  double t3972;
  double t3993;
  double t4056;
  double t4120;
  double t4158;
  double t4165;
  double t4173;
  double t4187;
  double t4194;
  double t4201;
  double t4203;
  double t4765;
  double t4418;
  double t4425;
  double t4444;
  double t4467;
  double t4471;
  double t4564;
  double t4614;
  double t4667;
  double t4704;
  double t4728;
  double t4776;
  double t4849;
  double t5000;
  double t5023;
  double t5312;
  double t5322;
  double t5354;
  double t5362;
  double t5370;
  double t5448;
  double t5517;
  double t5585;
  double t5609;
  double t5640;
  double t5658;
  double t5702;
  double t5703;
  double t5992;
  double t6157;
  double t6159;
  double t6248;
  double t6505;
  double t6591;
  double t6627;
  double t6634;
  double t6658;
  double t6796;
  double t6833;
  double t6871;
  double t6930;
  double t6932;
  double t6933;
  double t6937;
  double t6957;
  double t6985;
  double t7048;
  double t7236;
  double t7263;
  double t7277;
  double t7285;
  double t7288;
  double t7289;
  double t7292;
  double t7293;
  double t7294;
  double t7300;
  double t7308;
  double t7311;
  double t7312;
  double t5980;
  double t7868;
  double t7533;
  double t7549;
  double t7659;
  double t7744;
  double t7836;
  double t7841;
  double t7844;
  double t7908;
  double t7914;
  double t7920;
  double t7923;
  double t7968;
  double t7978;
  double t8048;
  double t8100;
  double t8192;
  double t8202;
  double t8208;
  double t8210;
  double t8216;
  double t8228;
  double t8235;
  double t8236;
  double t4623;
  double t5018;
  double t5372;
  double t5374;
  double t5417;
  double t5633;
  double t5770;
  double t5832;
  double t5846;
  double t5855;
  double t5892;
  double t5902;
  double t5933;
  double t5937;
  double t5945;
  double t5965;
  double t5966;
  double t5976;
  double t5987;
  double t5990;
  double t6076;
  double t6135;
  double t6835;
  double t7279;
  double t7313;
  double t7368;
  double t7622;
  double t7991;
  double t8240;
  double t8244;
  double t8247;
  double t8248;
  double t8251;
  double t8259;
  double t8261;
  double t8266;
  double t8267;
  double t8330;
  double t8331;
  double t8334;
  double t3861;
  double t3963;
  double t4062;
  double t4095;
  double t4179;
  double t4220;
  double t4230;
  double t4246;
  double t4249;
  double t4253;
  double t4268;
  double t4298;
  double t4338;
  double t8336;
  double t8337;
  double t8338;
  double t8278;
  double t8282;
  double t8284;
  double t8497;
  double t8544;
  double t8557;
  double t7385;
  double t8271;
  double t8274;
  double t4105;
  double t4356;
  double t4404;
  double t8565;
  double t8569;
  double t8575;
  double t8700;
  double t8701;
  double t8705;
  double t8662;
  double t8663;
  double t8664;
  double t8558;
  double t8560;
  double t8564;
  double t8596;
  double t8770;
  double t8771;
  double t8775;
  double t8666;
  double t8768;
  double t8783;
  double t8761;
  double t8762;
  double t8765;
  double t8861;
  double t8908;
  double t8820;
  double t8821;
  double t8822;
  double t8603;
  double t8608;
  double t8613;
  double t8672;
  double t8675;
  double t8681;
  double t9198;
  double t9240;
  double t9265;
  double t9273;
  double t9279;
  double t9309;
  double t9385;
  double t9387;
  double t9394;
  double t9395;
  double t9407;
  double t9415;
  double t9417;
  double t9335;
  double t9336;
  double t9338;
  double t8805;
  double t8807;
  double t8815;
  double t9293;
  double t9298;
  double t9305;
  double t8936;
  double t8943;
  double t9007;
  double t9468;
  double t9469;
  double t9475;
  double t9479;
  double t9480;
  double t9458;
  double t9462;
  double t9490;
  double t9492;
  double t9496;
  double t9482;
  double t9489;
  double t9483;
  double t9486;
  double t9507;
  double t9512;
  double t9508;
  double t9510;
  double t9618;
  double t9625;
  double t9626;
  double t9629;
  double t9615;
  double t9616;
  double t9619;
  double t9863;
  double t9865;
  double t9896;
  double t9899;
  double t9603;
  double t9604;
  double t9591;
  double t9596;
  double t10003;
  double t9623;
  double t9628;
  double t9630;
  double t9643;
  double t9935;
  double t9936;
  double t9937;
  double t9938;
  double t9939;
  double t9940;
  double t9941;
  double t9943;
  double t9944;
  double t10007;
  double t10009;
  double t10011;
  double t10017;
  double t10019;
  double t10024;
  double t10026;
  double t10027;
  double t10028;
  double t10039;
  double t10041;
  double t10045;
  double t10046;
  double t10065;
  double t10079;
  double t10080;
  double t10081;
  double t10084;
  double t9933;
  double t10033;
  double t9947;
  double t9958;
  double t9969;
  double t9991;
  double t9927;
  double t9928;
  double t9929;
  double t9931;
  double t10107;
  double t10134;
  double t10110;
  double t10112;
  double t10117;
  double t10118;
  double t10092;
  double t10099;
  double t10100;
  double t10103;
  double t10200;
  double t10201;
  double t10202;
  double t10207;
  double t10211;
  double t10213;
  double t9601;
  double t9602;
  double t9605;
  double t9606;
  double t9614;
  double t9617;
  double t9620;
  double t9621;
  double t10294;
  double t10299;
  double t10300;
  double t10290;
  double t10291;
  double t10292;
  double t10267;
  double t10271;
  double t10283;
  double t10288;
  double t10293;
  double t10301;
  double t10302;
  double t10307;
  double t10308;
  double t10309;
  double t10312;
  double t10313;
  double t10314;
  double t10219;
  double t10221;
  double t10225;
  double t10234;
  double t10236;
  double t10237;
  double t10184;
  double t10185;
  double t10190;
  double t10196;
  double t10197;
  double t10198;
  double t10329;
  double t10330;
  double t10331;
  double t10324;
  double t10326;
  double t10327;
  double t10338;
  double t10341;
  double t10342;
  double t10344;
  double t10346;
  double t10347;
  double t10351;
  double t10353;
  double t10354;
  double t10333;
  double t10334;
  double t10335;
  double t10337;
  double t10343;
  double t10390;
  double t10391;
  double t10403;
  double t10356;
  double t10357;
  double t10367;
  double t10375;
  double t10388;
  double t10414;
  double t10416;
  double t10417;
  double t10426;
  double t10432;
  double t10434;
  double t10501;
  double t10479;
  double t10481;
  double t10486;
  double t10490;
  double t10495;
  double t10506;
  double t10512;
  double t10524;
  double t10525;
  double t10526;
  double t10528;
  double t10542;
  double t10602;
  double t10538;
  double t10540;
  double t10541;
  double t10548;
  double t10550;
  double t10555;
  double t10563;
  double t10564;
  double t10568;
  double t10572;
  double t10581;
  double t10599;
  double t10600;
  double t10601;
  double t10603;
  double t10604;
  double t10605;
  double t10616;
  double t10626;
  double t10632;
  double t10636;
  double t10637;
  double t10638;
  double t10643;
  double t10649;
  double t10650;
  double t10655;
  double t10664;
  double t10670;
  double t10691;
  double t10692;
  double t10695;
  double t10696;
  double t10698;
  double t10699;
  double t10700;
  double t10703;
  double t10705;
  double t10707;
  double t10598;
  double t10634;
  double t10671;
  double t10674;
  double t10676;
  double t10677;
  double t10678;
  double t10682;
  double t10684;
  double t10686;
  double t10687;
  double t10688;
  double t10787;
  double t10796;
  double t10807;
  double t10816;
  double t10825;
  double t10870;
  double t10871;
  double t10875;
  double t10876;
  double t10877;
  double t10878;
  double t9663;
  double t9682;
  double t9710;
  double t10716;
  double t10718;
  double t10720;
  double t10724;
  double t9900;
  double t9910;
  double t9915;
  double t10904;
  double t10906;
  double t10907;
  double t10908;
  double t10909;
  double t10910;
  double t10927;
  double t10977;
  double t10979;
  double t10999;
  double t11030;
  double t11031;
  double t11035;
  double t11039;
  double t11058;
  double t11063;
  double t11068;
  double t11072;
  double t11074;
  double t11076;
  double t11077;
  double t11078;
  double t10683;
  double t10725;
  double t10726;
  double t10730;
  double t10731;
  double t10732;
  double t10697;
  double t10701;
  double t10708;
  double t10709;
  double t10778;
  double t10879;
  double t11119;
  double t11132;
  double t11136;
  double t11284;
  double t11287;
  double t11288;
  double t10810;
  double t10869;
  double t10872;
  double t10873;
  double t10881;
  double t10883;
  double t10884;
  double t10886;
  double t10140;
  double t10141;
  double t10142;
  double t10167;
  double t10169;
  double t10178;
  double t10500;
  double t10523;
  double t10529;
  double t10531;
  double t10533;
  double t10534;
  double t10535;
  double t10536;
  double t11360;
  double t11361;
  double t11363;
  double t11353;
  double t11354;
  double t11355;
  double t11346;
  double t11347;
  double t11348;
  double t11350;
  double t11358;
  double t11364;
  double t11365;
  double t11370;
  double t11372;
  double t11373;
  double t11381;
  double t11386;
  double t11410;
  double t11300;
  double t11301;
  double t11302;
  double t11292;
  double t11295;
  double t11296;
  double t11560;
  double t11564;
  double t11568;
  double t11580;
  double t11583;
  double t11585;
  double t11324;
  double t11329;
  double t11332;
  double t11317;
  double t11319;
  double t11320;
  double t11652;
  double t11653;
  double t11654;
  double t11626;
  double t11630;
  double t11634;
  double t11601;
  double t11638;
  double t11605;
  double t11606;
  double t11616;
  double t11645;
  double t11656;
  double t11701;
  double t11709;
  double t11715;
  double t11739;
  double t11740;
  double t11741;
  double t11647;
  double t11648;
  double t11649;
  double t11756;
  double t11757;
  double t11758;
  double t11744;
  double t11745;
  double t11746;
  double t3638;
  double t3642;
  double t3648;
  double t8648;
  double t8650;
  double t8651;
  double t11775;
  double t11781;
  double t11782;
  double t8314;
  double t8328;
  double t8329;
  double t12049;
  double t12089;
  double t12214;
  double t12219;
  double t12238;
  double t12241;
  double t12055;
  double t12061;
  double t12065;
  double t12090;
  double t12091;
  double t12093;
  double t12223;
  double t12224;
  double t12226;
  double t12232;
  double t12233;
  double t12234;
  double t12301;
  double t12305;
  double t12311;
  double t12313;
  double t12395;
  double t12473;
  double t12546;
  double t12551;
  double t10446;
  double t10449;
  double t10456;
  double t10289;
  double t10304;
  double t10305;
  double t12659;
  double t12661;
  double t10407;
  double t10408;
  double t10409;
  double t12667;
  double t12668;
  double t12341;
  double t12344;
  double t12345;
  double t12349;
  double t12353;
  double t12357;
  double t12747;
  double t12748;
  double t12749;
  double t12750;
  double t12752;
  double t12753;
  double t12754;
  double t12755;
  double t12756;
  double t12757;
  double t12758;
  double t12762;
  double t12764;
  double t12766;
  double t12767;
  double t12771;
  double t12772;
  double t12773;
  double t12774;
  double t12775;
  double t12776;
  double t12777;
  double t12718;
  double t12721;
  double t12559;
  double t12560;
  double t12561;
  double t12563;
  double t12564;
  double t12571;
  double t12727;
  double t12732;
  double t11760;
  double t11763;
  double t11765;
  double t12859;
  double t12863;
  double t11748;
  double t11749;
  double t11750;
  double t11352;
  double t11366;
  double t11368;
  double t12869;
  double t12891;
  double t11833;
  double t11834;
  double t11849;
  double t13181;
  double t13192;
  double t13289;
  double t13291;
  double t13295;
  double t13299;
  double t13182;
  double t13183;
  double t13184;
  double t13193;
  double t13194;
  double t13195;
  double t13280;
  double t13285;
  double t13286;
  double t13302;
  double t13311;
  double t13324;
  double t13461;
  double t13463;
  double t13469;
  double t13471;
  double t13690;
  double t13694;
  double t13736;
  double t13740;
  double t13793;
  double t13794;
  double t13800;
  double t13801;
  double t13680;
  double t13681;
  double t13682;
  double t13684;
  double t13685;
  double t13686;
  double t14122;
  double t14123;
  double t14124;
  double t14125;
  double t14127;
  double t14128;
  double t14129;
  double t14130;
  double t14131;
  double t14132;
  double t14133;
  double t14135;
  double t14136;
  double t14137;
  double t14139;
  double t14142;
  double t14143;
  double t14145;
  double t14146;
  double t14147;
  double t14148;
  double t14149;
  double t14017;
  double t14027;
  double t13748;
  double t13749;
  double t13750;
  double t13754;
  double t13755;
  double t13756;
  double t14045;
  double t14049;
  double t14201;
  double t14204;
  double t14211;
  double t14214;
  double t13129;
  double t13168;
  double t13169;
  double t12992;
  t129 = Cos(var1[14]);
  t134 = -1.*t129;
  t138 = 1. + t134;
  t76 = Cos(var1[13]);
  t86 = -1.*t76;
  t94 = 1. + t86;
  t157 = Sin(var1[14]);
  t175 = 4.e-6*t157;
  t106 = Sin(var1[13]);
  t139 = 1.000000000016*t138;
  t147 = -7.e-6*t138;
  t438 = t147 + t175;
  t489 = -7.e-6*t438;
  t567 = -1. + t139 + t489;
  t98 = -7.e-6*t94;
  t1076 = -6.5e-11*t138;
  t1234 = 1. + t1076;
  t1298 = -7.e-6*t1234;
  t1320 = 7.e-6*t138;
  t1383 = t1298 + t1320 + t175;
  t1846 = -2.8e-11*t138;
  t1934 = -1. + t129;
  t1962 = 4.e-6*t1934;
  t1988 = -7.e-6*t157;
  t2020 = t1962 + t1988;
  t2099 = -7.e-6*t2020;
  t2147 = t1846 + t2099 + t157;
  t2283 = Sin(var1[12]);
  t119 = -4.e-6*t106;
  t128 = t98 + t119;
  t580 = t128*t567;
  t611 = -6.5e-11*t94;
  t843 = 1. + t611;
  t1400 = t843*t1383;
  t1529 = -1. + t76;
  t1691 = 4.e-6*t1529;
  t1767 = 7.e-6*t106;
  t1793 = t1691 + t1767;
  t2165 = t1793*t2147;
  t2262 = t580 + t1400 + t2165;
  t74 = Cos(var1[12]);
  t2358 = -1.000000000016*t94;
  t2411 = 1. + t2358;
  t2604 = t2411*t567;
  t2774 = 4.e-6*t106;
  t2792 = t98 + t2774;
  t2796 = t2792*t1383;
  t2804 = 2.8e-11*t94;
  t2818 = t2804 + t106;
  t2844 = t2818*t2147;
  t2852 = t2604 + t2796 + t2844;
  t42 = Cos(var1[5]);
  t2945 = -1.*t2283*t2262;
  t2980 = t74*t2852;
  t2992 = t2945 + t2980;
  t2263 = t74*t2262;
  t2863 = t2283*t2852;
  t2870 = t2263 + t2863;
  t3037 = Sin(var1[5]);
  t3121 = Cos(var1[3]);
  t2890 = t42*t2870;
  t3039 = t2992*t3037;
  t3083 = t2890 + t3039;
  t40 = Sin(var1[3]);
  t3158 = Cos(var1[4]);
  t3172 = -1.*t106;
  t3175 = t2804 + t3172;
  t3214 = t3175*t567;
  t3229 = -7.e-6*t106;
  t3250 = t1691 + t3229;
  t3259 = t3250*t1383;
  t3268 = -1.000000000049*t94;
  t3278 = 1. + t3268;
  t3335 = t3278*t2147;
  t3360 = t3214 + t3259 + t3335;
  t3404 = t3158*t3360;
  t3453 = Sin(var1[4]);
  t3492 = t42*t2992;
  t3542 = -1.*t2870*t3037;
  t3546 = t3492 + t3542;
  t3595 = -1.*t3453*t3546;
  t3603 = t3404 + t3595;
  t3696 = -1.*t3360*t3453;
  t3698 = -1.*t3158*t3546;
  t3750 = t3696 + t3698;
  t3832 = -1.000000000049*t138;
  t3841 = 4.e-6*t2020;
  t3857 = 1. + t3832 + t3841;
  t3878 = 4.e-6*t1234;
  t3916 = 7.e-6*t157;
  t3938 = t3878 + t1962 + t3916;
  t3972 = 2.8e-11*t138;
  t3993 = 4.e-6*t438;
  t4056 = t3972 + t3993 + t157;
  t4120 = t2818*t3857;
  t4158 = t2792*t3938;
  t4165 = t2411*t4056;
  t4173 = t4120 + t4158 + t4165;
  t4187 = t1793*t3857;
  t4194 = t843*t3938;
  t4201 = t128*t4056;
  t4203 = t4187 + t4194 + t4201;
  t4765 = -1.*t157;
  t4418 = 4.e-6*t138;
  t4425 = t4418 + t1988;
  t4444 = 4.e-6*t4425;
  t4467 = -4.e-6*t157;
  t4471 = t147 + t4467;
  t4564 = -7.e-6*t4471;
  t4614 = 1. + t1076 + t4444 + t4564;
  t4667 = 1.000000000049*t138;
  t4704 = -1. + t4667;
  t4728 = 4.e-6*t4704;
  t4776 = t3972 + t4765;
  t4849 = -7.e-6*t4776;
  t5000 = t4728 + t1962 + t4849 + t1988;
  t5023 = -1.000000000016*t138;
  t5312 = 1. + t5023;
  t5322 = -7.e-6*t5312;
  t5354 = t1846 + t4765;
  t5362 = 4.e-6*t5354;
  t5370 = t5322 + t147 + t5362 + t175;
  t5448 = t2792*t4614;
  t5517 = t2818*t5000;
  t5585 = t2411*t5370;
  t5609 = t5448 + t5517 + t5585;
  t5640 = t843*t4614;
  t5658 = t1793*t5000;
  t5702 = t128*t5370;
  t5703 = t5640 + t5658 + t5702;
  t5992 = -2.8e-11*t94;
  t6157 = -2.598649999999999e-7*var1[14];
  t6159 = 0.148705*t1234;
  t6248 = -2.3905277499999995e-16*t138;
  t6505 = -0.038922999986*t4425;
  t6591 = -0.80315*t4471;
  t6627 = t1320 + t175;
  t6634 = -0.503149000008*t6627;
  t6658 = t1962 + t3916;
  t6796 = -0.038924*t6658;
  t6833 = t6157 + t6159 + t6248 + t6505 + t6591 + t6634 + t6796;
  t6871 = 1.0394599999999997e-12*var1[14];
  t6930 = 1. + t3832;
  t6932 = -0.038924*t6930;
  t6933 = -0.03892299998790722*t138;
  t6937 = -0.80315*t4776;
  t6957 = 0.148705*t2020;
  t6985 = t4418 + t3916;
  t7048 = -3.6777349999999994e-6*t6985;
  t7236 = t1846 + t157;
  t7263 = -0.503149000008*t7236;
  t7277 = t6871 + t6932 + t6933 + t6937 + t6957 + t7048 + t7263;
  t7285 = 1.8190549999999993e-12*var1[14];
  t7288 = -0.80315*t5312;
  t7289 = -0.5031490000160505*t138;
  t7292 = -0.038922999986*t5354;
  t7293 = t1320 + t4467;
  t7294 = -3.6777349999999994e-6*t7293;
  t7300 = 0.148705*t438;
  t7308 = t3972 + t157;
  t7311 = -0.038924*t7308;
  t7312 = t7285 + t7288 + t7289 + t7292 + t7294 + t7300 + t7311;
  t5980 = 4.e-6*t94;
  t7868 = 7.e-6*t94;
  t7533 = -1.*t74;
  t7549 = 1. + t7533;
  t7659 = 0.15121*t2283;
  t7744 = 1.0248489999999998e-12*var1[13];
  t7836 = -0.28120900000849935*t94;
  t7841 = t5992 + t3172;
  t7844 = -0.038748999993*t7841;
  t7908 = t7868 + t119;
  t7914 = -2.123459e-6*t7908;
  t7920 = t2792*t6833;
  t7923 = t2818*t7277;
  t7968 = t2411*t7312;
  t7978 = t7744 + t7836 + t7844 + t7914 + t7920 + t7923 + t7968;
  t8048 = -1.4640699999999997e-7*var1[13];
  t8100 = -1.38024835e-16*t94;
  t8192 = t5980 + t3229;
  t8202 = -0.038748999993*t8192;
  t8208 = t7868 + t2774;
  t8210 = -0.281209000004*t8208;
  t8216 = t843*t6833;
  t8228 = t1793*t7277;
  t8235 = t128*t7312;
  t8236 = t8048 + t8100 + t8202 + t8210 + t8216 + t8228 + t8235;
  t4623 = t3250*t4614;
  t5018 = t3278*t5000;
  t5372 = t3175*t5370;
  t5374 = t4623 + t5018 + t5372;
  t5417 = t3158*t5374;
  t5633 = t74*t5609;
  t5770 = -1.*t2283*t5703;
  t5832 = t5633 + t5770;
  t5846 = t42*t5832;
  t5855 = t2283*t5609;
  t5892 = t74*t5703;
  t5902 = t5855 + t5892;
  t5933 = -1.*t5902*t3037;
  t5937 = t5846 + t5933;
  t5945 = -1.*t3453*t5937;
  t5965 = t5417 + t5945;
  t5966 = 5.856279999999999e-13*var1[13];
  t5976 = -0.0387489999948987*t94;
  t5987 = t5980 + t1767;
  t5990 = -2.123459e-6*t5987;
  t6076 = t5992 + t106;
  t6135 = -0.281209000004*t6076;
  t6835 = t3250*t6833;
  t7279 = t3278*t7277;
  t7313 = t3175*t7312;
  t7368 = t5966 + t5976 + t5990 + t6135 + t6835 + t7279 + t7313;
  t7622 = -0.15121*t7549;
  t7991 = t74*t7978;
  t8240 = -1.*t2283*t8236;
  t8244 = t7622 + t7659 + t7991 + t8240;
  t8247 = t42*t8244;
  t8248 = 0.15121*t7549;
  t8251 = t2283*t7978;
  t8259 = t74*t8236;
  t8261 = t8248 + t7659 + t8251 + t8259;
  t8266 = -1.*t8261*t3037;
  t8267 = t8247 + t8266;
  t8330 = t3158*t7368;
  t8331 = -1.*t3453*t8267;
  t8334 = t8330 + t8331;
  t3861 = t3278*t3857;
  t3963 = t3250*t3938;
  t4062 = t3175*t4056;
  t4095 = t3861 + t3963 + t4062;
  t4179 = t74*t4173;
  t4220 = -1.*t2283*t4203;
  t4230 = t4179 + t4220;
  t4246 = t42*t4230;
  t4249 = t2283*t4173;
  t4253 = t74*t4203;
  t4268 = t4249 + t4253;
  t4298 = -1.*t4268*t3037;
  t4338 = t4246 + t4298;
  t8336 = t5374*t3453;
  t8337 = t3158*t5937;
  t8338 = t8336 + t8337;
  t8278 = t7368*t3453;
  t8282 = t3158*t8267;
  t8284 = t8278 + t8282;
  t8497 = t3158*t4095;
  t8544 = -1.*t3453*t4338;
  t8557 = t8497 + t8544;
  t7385 = -1.*t7368*t3453;
  t8271 = -1.*t3158*t8267;
  t8274 = t7385 + t8271;
  t4105 = t4095*t3453;
  t4356 = t3158*t4338;
  t4404 = t4105 + t4356;
  t8565 = t42*t8261;
  t8569 = t8244*t3037;
  t8575 = t8565 + t8569;
  t8700 = -1.*t42*t2870;
  t8701 = -1.*t2992*t3037;
  t8705 = t8700 + t8701;
  t8662 = t42*t4268;
  t8663 = t4230*t3037;
  t8664 = t8662 + t8663;
  t8558 = t42*t5902;
  t8560 = t5832*t3037;
  t8564 = t8558 + t8560;
  t8596 = t8564*t8575;
  t8770 = -1.*t42*t8261;
  t8771 = -1.*t8244*t3037;
  t8775 = t8770 + t8771;
  t8666 = -1.*t8664*t8575;
  t8768 = t8564*t8267;
  t8783 = t5937*t8575;
  t8761 = -1.*t42*t5902;
  t8762 = -1.*t5832*t3037;
  t8765 = t8761 + t8762;
  t8861 = -1.*t8664*t8267;
  t8908 = -1.*t4338*t8575;
  t8820 = -1.*t42*t4268;
  t8821 = -1.*t4230*t3037;
  t8822 = t8820 + t8821;
  t8603 = t8338*t8284;
  t8608 = t5965*t8334;
  t8613 = t8596 + t8603 + t8608;
  t8672 = -1.*t4404*t8284;
  t8675 = -1.*t8557*t8334;
  t8681 = t8666 + t8672 + t8675;
  t9198 = 0.15121*t74;
  t9240 = -0.15121*t2283;
  t9265 = -1.*t2283*t7978;
  t9273 = -1.*t74*t8236;
  t9279 = t9198 + t9240 + t9265 + t9273;
  t9309 = t9198 + t7659 + t7991 + t8240;
  t9385 = -1.*t74*t2262;
  t9387 = -1.*t2283*t2852;
  t9394 = t9385 + t9387;
  t9395 = t42*t9394;
  t9407 = t9395 + t8701;
  t9415 = t9394*t3037;
  t9417 = t3492 + t9415;
  t9335 = -1.*t2283*t4173;
  t9336 = -1.*t74*t4203;
  t9338 = t9335 + t9336;
  t8805 = t5374*t7368;
  t8807 = t5937*t8267;
  t8815 = t8805 + t8807 + t8596;
  t9293 = -1.*t2283*t5609;
  t9298 = -1.*t74*t5703;
  t9305 = t9293 + t9298;
  t8936 = -1.*t4095*t7368;
  t8943 = -1.*t4338*t8267;
  t9007 = t8936 + t8943 + t8666;
  t9468 = t9305*t3037;
  t9469 = t5846 + t9468;
  t9475 = t42*t9309;
  t9479 = t9279*t3037;
  t9480 = t9475 + t9479;
  t9458 = t9338*t3037;
  t9462 = t4246 + t9458;
  t9490 = t42*t9279;
  t9492 = -1.*t9309*t3037;
  t9496 = t9490 + t9492;
  t9482 = t8564*t9480;
  t9489 = t9469*t8575;
  t9483 = t42*t9305;
  t9486 = t9483 + t8762;
  t9507 = -1.*t8664*t9480;
  t9512 = -1.*t9462*t8575;
  t9508 = t42*t9338;
  t9510 = t9508 + t8821;
  t9618 = 2.8e-11*t106;
  t9625 = -7.e-6*t76;
  t9626 = t9625 + t119;
  t9629 = t86 + t9618;
  t9615 = 4.e-6*t76;
  t9616 = t9615 + t3229;
  t9619 = t76 + t9618;
  t9863 = t9626*t4614;
  t9865 = -1.000000000049*t106*t5000;
  t9896 = t9629*t5370;
  t9899 = t9863 + t9865 + t9896;
  t9603 = 7.e-6*t76;
  t9604 = t9603 + t119;
  t9591 = -4.e-6*t76;
  t9596 = t9591 + t3229;
  t10003 = -2.8e-11*t106;
  t9623 = -1.000000000049*t106*t3857;
  t9628 = t9626*t3938;
  t9630 = t9629*t4056;
  t9643 = t9623 + t9628 + t9630;
  t9935 = t9625 + t2774;
  t9936 = -0.038748999993*t9935;
  t9937 = t9615 + t1767;
  t9938 = -0.281209000004*t9937;
  t9939 = -1.38024835e-16*t106;
  t9940 = -6.5e-11*t106*t6833;
  t9941 = t9604*t7277;
  t9943 = t9596*t7312;
  t9944 = -1.4640699999999997e-7 + t9936 + t9938 + t9939 + t9940 + t9941 + t9943;
  t10007 = t76 + t10003;
  t10009 = -0.281209000004*t10007;
  t10011 = t9603 + t2774;
  t10017 = -2.123459e-6*t10011;
  t10019 = -0.0387489999948987*t106;
  t10024 = t9626*t6833;
  t10026 = -1.000000000049*t106*t7277;
  t10027 = t9629*t7312;
  t10028 = 5.856279999999999e-13 + t10009 + t10017 + t10019 + t10024 + t10026 + t10027;
  t10039 = t86 + t10003;
  t10041 = -0.038748999993*t10039;
  t10045 = t9591 + t1767;
  t10046 = -2.123459e-6*t10045;
  t10065 = -0.28120900000849935*t106;
  t10079 = t9616*t6833;
  t10080 = t9619*t7277;
  t10081 = -1.000000000016*t106*t7312;
  t10084 = 1.0248489999999998e-12 + t10041 + t10046 + t10065 + t10079 + t10080 + t10081;
  t9933 = t9899*t7368;
  t10033 = t5374*t10028;
  t9947 = -6.5e-11*t106*t4614;
  t9958 = t9604*t5000;
  t9969 = t9596*t5370;
  t9991 = t9947 + t9958 + t9969;
  t9927 = t9616*t4614;
  t9928 = t9619*t5000;
  t9929 = -1.000000000016*t106*t5370;
  t9931 = t9927 + t9928 + t9929;
  t10107 = -1.*t9643*t7368;
  t10134 = -1.*t4095*t10028;
  t10110 = t9604*t3857;
  t10112 = -6.5e-11*t106*t3938;
  t10117 = t9596*t4056;
  t10118 = t10110 + t10112 + t10117;
  t10092 = t9619*t3857;
  t10099 = t9616*t3938;
  t10100 = -1.000000000016*t106*t4056;
  t10103 = t10092 + t10099 + t10100;
  t10200 = -1.*t2283*t9944;
  t10201 = t74*t10084;
  t10202 = t10200 + t10201;
  t10207 = t74*t9944;
  t10211 = t2283*t10084;
  t10213 = t10207 + t10211;
  t9601 = t9596*t567;
  t9602 = -6.5e-11*t106*t1383;
  t9605 = t9604*t2147;
  t9606 = t9601 + t9602 + t9605;
  t9614 = -1.000000000016*t106*t567;
  t9617 = t9616*t1383;
  t9620 = t9619*t2147;
  t9621 = t9614 + t9617 + t9620;
  t10294 = t74*t9606;
  t10299 = t2283*t9621;
  t10300 = t10294 + t10299;
  t10290 = -1.*t2283*t9606;
  t10291 = t74*t9621;
  t10292 = t10290 + t10291;
  t10267 = t9629*t567;
  t10271 = t9626*t1383;
  t10283 = -1.000000000049*t106*t2147;
  t10288 = t10267 + t10271 + t10283;
  t10293 = t42*t10292;
  t10301 = -1.*t10300*t3037;
  t10302 = t10293 + t10301;
  t10307 = t42*t10300;
  t10308 = t10292*t3037;
  t10309 = t10307 + t10308;
  t10312 = t3158*t10288;
  t10313 = -1.*t3453*t10302;
  t10314 = t10312 + t10313;
  t10219 = t74*t10118;
  t10221 = t2283*t10103;
  t10225 = t10219 + t10221;
  t10234 = -1.*t2283*t10118;
  t10236 = t74*t10103;
  t10237 = t10234 + t10236;
  t10184 = t74*t9991;
  t10185 = t2283*t9931;
  t10190 = t10184 + t10185;
  t10196 = -1.*t2283*t9991;
  t10197 = t74*t9931;
  t10198 = t10196 + t10197;
  t10329 = t42*t10190;
  t10330 = t10198*t3037;
  t10331 = t10329 + t10330;
  t10324 = t42*t10225;
  t10326 = t10237*t3037;
  t10327 = t10324 + t10326;
  t10338 = t42*t10213;
  t10341 = t10202*t3037;
  t10342 = t10338 + t10341;
  t10344 = t42*t10202;
  t10346 = -1.*t10213*t3037;
  t10347 = t10344 + t10346;
  t10351 = t42*t10237;
  t10353 = -1.*t10225*t3037;
  t10354 = t10351 + t10353;
  t10333 = t42*t10198;
  t10334 = -1.*t10190*t3037;
  t10335 = t10333 + t10334;
  t10337 = t10331*t8575;
  t10343 = t8564*t10342;
  t10390 = t9899*t3453;
  t10391 = t3158*t10335;
  t10403 = t10390 + t10391;
  t10356 = -1.*t10327*t8575;
  t10357 = -1.*t8664*t10342;
  t10367 = t9643*t3453;
  t10375 = t3158*t10354;
  t10388 = t10367 + t10375;
  t10414 = t10028*t3453;
  t10416 = t3158*t10347;
  t10417 = t10414 + t10416;
  t10426 = t3158*t10028;
  t10432 = -1.*t3453*t10347;
  t10434 = t10426 + t10432;
  t10501 = 4.e-6*t129;
  t10479 = -7.e-6*t129;
  t10481 = t10479 + t4467;
  t10486 = -7.e-6*t10481;
  t10490 = -2.8e-11*t157;
  t10495 = t129 + t10486 + t10490;
  t10506 = 7.000000000455e-6*t157;
  t10512 = t10501 + t10506;
  t10524 = t10501 + t1988;
  t10525 = -7.e-6*t10524;
  t10526 = 1.000000000016*t157;
  t10528 = t10525 + t10526;
  t10542 = 7.e-6*t129;
  t10602 = 2.8e-11*t157;
  t10538 = -4.e-6*t129;
  t10540 = t10538 + t1988;
  t10541 = -0.80315*t10540;
  t10548 = t10542 + t4467;
  t10550 = -0.038924*t10548;
  t10555 = t10479 + t175;
  t10563 = -0.038922999986*t10555;
  t10564 = t10501 + t3916;
  t10568 = -0.503149000008*t10564;
  t10572 = -9.666064052774999e-12*t157;
  t10581 = -2.598649999999999e-7 + t10541 + t10550 + t10563 + t10568 + t10572;
  t10599 = 0.148705*t10481;
  t10600 = t129 + t10490;
  t10601 = -0.503149000008*t10600;
  t10603 = t134 + t10602;
  t10604 = -0.80315*t10603;
  t10605 = t10542 + t175;
  t10616 = -3.6777349999999994e-6*t10605;
  t10626 = 1.0000140000590574e-6*t157;
  t10632 = 1.0394599999999997e-12 + t10599 + t10601 + t10604 + t10616 + t10626;
  t10636 = 0.148705*t10524;
  t10637 = t134 + t10490;
  t10638 = -0.038922999986*t10637;
  t10643 = t129 + t10602;
  t10649 = -0.038924*t10643;
  t10650 = t10538 + t3916;
  t10655 = -3.6777349999999994e-6*t10650;
  t10664 = 0.30000099999679997*t157;
  t10670 = 1.8190549999999993e-12 + t10636 + t10638 + t10649 + t10655 + t10664;
  t10691 = -7.e-6*t10540;
  t10692 = 4.e-6*t10555;
  t10695 = -6.5e-11*t157;
  t10696 = t10691 + t10692 + t10695;
  t10698 = 4.e-6*t10637;
  t10699 = 1.12e-16*t157;
  t10700 = t10501 + t10698 + t10699;
  t10703 = -7.e-6*t10603;
  t10705 = 1.96e-16*t157;
  t10707 = t10479 + t10703 + t10705;
  t10598 = t2792*t10581;
  t10634 = t2818*t10632;
  t10671 = t2411*t10670;
  t10674 = t10598 + t10634 + t10671;
  t10676 = t3250*t10581;
  t10677 = t3278*t10632;
  t10678 = t3175*t10670;
  t10682 = t10676 + t10677 + t10678;
  t10684 = t843*t10581;
  t10686 = t1793*t10632;
  t10687 = t128*t10670;
  t10688 = t10684 + t10686 + t10687;
  t10787 = 4.e-6*t10481;
  t10796 = -1.000000000049*t157;
  t10807 = t10787 + t10796;
  t10816 = -4.00000000026e-6*t157;
  t10825 = t10542 + t10816;
  t10870 = 4.e-6*t10524;
  t10871 = t129 + t10870 + t10602;
  t10875 = t3278*t10807;
  t10876 = t3250*t10825;
  t10877 = t3175*t10871;
  t10878 = t10875 + t10876 + t10877;
  t9663 = t5609*t7978;
  t9682 = t5703*t8236;
  t9710 = t9663 + t8805 + t9682;
  t10716 = t3250*t10696;
  t10718 = t3175*t10700;
  t10720 = t3278*t10707;
  t10724 = t10716 + t10718 + t10720;
  t9900 = -1.*t4173*t7978;
  t9910 = -1.*t4203*t8236;
  t9915 = t9900 + t8936 + t9910;
  t10904 = t6833*t10696;
  t10906 = t4614*t10581;
  t10907 = t5000*t10632;
  t10908 = t5370*t10670;
  t10909 = t10707*t7277;
  t10910 = t10700*t7312;
  t10927 = t10904 + t10906 + t10907 + t10908 + t10909 + t10910;
  t10977 = -1.*t6833*t10825;
  t10979 = -1.*t3857*t10632;
  t10999 = -1.*t10581*t3938;
  t11030 = -1.*t10670*t4056;
  t11031 = -1.*t10807*t7277;
  t11035 = -1.*t10871*t7312;
  t11039 = t10977 + t10979 + t10999 + t11030 + t11031 + t11035;
  t11058 = t4614*t6833;
  t11063 = t5000*t7277;
  t11068 = t5370*t7312;
  t11072 = t11058 + t11063 + t11068;
  t11074 = -1.*t6833*t3938;
  t11076 = -1.*t3857*t7277;
  t11077 = -1.*t4056*t7312;
  t11078 = t11074 + t11076 + t11077;
  t10683 = t5374*t10682;
  t10725 = t10724*t7368;
  t10726 = t843*t10696;
  t10730 = t128*t10700;
  t10731 = t1793*t10707;
  t10732 = t10726 + t10730 + t10731;
  t10697 = t2792*t10696;
  t10701 = t2411*t10700;
  t10708 = t2818*t10707;
  t10709 = t10697 + t10701 + t10708;
  t10778 = -1.*t10682*t4095;
  t10879 = -1.*t10878*t7368;
  t11119 = t2283*t10674;
  t11132 = t74*t10688;
  t11136 = t11119 + t11132;
  t11284 = t74*t10674;
  t11287 = -1.*t2283*t10688;
  t11288 = t11284 + t11287;
  t10810 = t2818*t10807;
  t10869 = t2792*t10825;
  t10872 = t2411*t10871;
  t10873 = t10810 + t10869 + t10872;
  t10881 = t1793*t10807;
  t10883 = t843*t10825;
  t10884 = t128*t10871;
  t10886 = t10881 + t10883 + t10884;
  t10140 = t5902*t8261;
  t10141 = t5832*t8244;
  t10142 = t8805 + t10140 + t10141;
  t10167 = -1.*t4268*t8261;
  t10169 = -1.*t4230*t8244;
  t10178 = t8936 + t10167 + t10169;
  t10500 = t2818*t10495;
  t10523 = t2792*t10512;
  t10529 = t2411*t10528;
  t10531 = t10500 + t10523 + t10529;
  t10533 = t1793*t10495;
  t10534 = t843*t10512;
  t10535 = t128*t10528;
  t10536 = t10533 + t10534 + t10535;
  t11360 = t2283*t10531;
  t11361 = t74*t10536;
  t11363 = t11360 + t11361;
  t11353 = t74*t10531;
  t11354 = -1.*t2283*t10536;
  t11355 = t11353 + t11354;
  t11346 = t3278*t10495;
  t11347 = t3250*t10512;
  t11348 = t3175*t10528;
  t11350 = t11346 + t11347 + t11348;
  t11358 = t42*t11355;
  t11364 = -1.*t11363*t3037;
  t11365 = t11358 + t11364;
  t11370 = t42*t11363;
  t11372 = t11355*t3037;
  t11373 = t11370 + t11372;
  t11381 = t3158*t11350;
  t11386 = -1.*t3453*t11365;
  t11410 = t11381 + t11386;
  t11300 = -1.*t2283*t10732;
  t11301 = t74*t10709;
  t11302 = t11300 + t11301;
  t11292 = t74*t10732;
  t11295 = t2283*t10709;
  t11296 = t11292 + t11295;
  t11560 = t42*t11288;
  t11564 = -1.*t11136*t3037;
  t11568 = t11560 + t11564;
  t11580 = t42*t11136;
  t11583 = t11288*t3037;
  t11585 = t11580 + t11583;
  t11324 = t74*t10873;
  t11329 = -1.*t2283*t10886;
  t11332 = t11324 + t11329;
  t11317 = t2283*t10873;
  t11319 = t74*t10886;
  t11320 = t11317 + t11319;
  t11652 = t42*t11320;
  t11653 = t11332*t3037;
  t11654 = t11652 + t11653;
  t11626 = t42*t11296;
  t11630 = t11302*t3037;
  t11634 = t11626 + t11630;
  t11601 = t8564*t11585;
  t11638 = t11634*t8575;
  t11605 = t42*t11302;
  t11606 = -1.*t11296*t3037;
  t11616 = t11605 + t11606;
  t11645 = -1.*t11585*t8664;
  t11656 = -1.*t11654*t8575;
  t11701 = t10682*t3453;
  t11709 = t3158*t11568;
  t11715 = t11701 + t11709;
  t11739 = t3158*t10682;
  t11740 = -1.*t3453*t11568;
  t11741 = t11739 + t11740;
  t11647 = t42*t11332;
  t11648 = -1.*t11320*t3037;
  t11649 = t11647 + t11648;
  t11756 = t10878*t3453;
  t11757 = t3158*t11649;
  t11758 = t11756 + t11757;
  t11744 = t10724*t3453;
  t11745 = t3158*t11616;
  t11746 = t11744 + t11745;
  t3638 = t3121*t3083;
  t3642 = -1.*t40*t3603;
  t3648 = t3638 + t3642;
  t8648 = -1.*t4095*t3453;
  t8650 = -1.*t3158*t4338;
  t8651 = t8648 + t8650;
  t11775 = t3360*t3453;
  t11781 = t3158*t3546;
  t11782 = t11775 + t11781;
  t8314 = -1.*t5374*t3453;
  t8328 = -1.*t3158*t5937;
  t8329 = t8314 + t8328;
  t12049 = -1.*t8564*t8575;
  t12089 = t3083*t8575;
  t12214 = -1.*t8564*t8267;
  t12219 = -1.*t5937*t8575;
  t12238 = t3083*t8267;
  t12241 = t3546*t8575;
  t12055 = -1.*t8338*t8284;
  t12061 = -1.*t5965*t8334;
  t12065 = t12049 + t12055 + t12061;
  t12090 = t11782*t8284;
  t12091 = t3603*t8334;
  t12093 = t12089 + t12090 + t12091;
  t12223 = -1.*t5374*t7368;
  t12224 = -1.*t5937*t8267;
  t12226 = t12223 + t12224 + t12049;
  t12232 = t3360*t7368;
  t12233 = t3546*t8267;
  t12234 = t12232 + t12233 + t12089;
  t12301 = -1.*t8564*t9480;
  t12305 = -1.*t9469*t8575;
  t12311 = t3083*t9480;
  t12313 = t9417*t8575;
  t12395 = -1.*t9899*t7368;
  t12473 = -1.*t5374*t10028;
  t12546 = t10288*t7368;
  t12551 = t3360*t10028;
  t10446 = t3158*t9643;
  t10449 = -1.*t3453*t10354;
  t10456 = t10446 + t10449;
  t10289 = t10288*t3453;
  t10304 = t3158*t10302;
  t10305 = t10289 + t10304;
  t12659 = -1.*t10331*t8575;
  t12661 = -1.*t8564*t10342;
  t10407 = t3158*t9899;
  t10408 = -1.*t3453*t10335;
  t10409 = t10407 + t10408;
  t12667 = t10309*t8575;
  t12668 = t3083*t10342;
  t12341 = -1.*t5609*t7978;
  t12344 = -1.*t5703*t8236;
  t12345 = t12341 + t12223 + t12344;
  t12349 = t2852*t7978;
  t12353 = t2262*t8236;
  t12357 = t12349 + t12232 + t12353;
  t12747 = t6833*t1383;
  t12748 = t2147*t7277;
  t12749 = t567*t7312;
  t12750 = t12747 + t12748 + t12749;
  t12752 = -1.*t6833*t10696;
  t12753 = -1.*t4614*t10581;
  t12754 = -1.*t5000*t10632;
  t12755 = -1.*t5370*t10670;
  t12756 = -1.*t10707*t7277;
  t12757 = -1.*t10700*t7312;
  t12758 = t12752 + t12753 + t12754 + t12755 + t12756 + t12757;
  t12762 = -1.*t4614*t6833;
  t12764 = -1.*t5000*t7277;
  t12766 = -1.*t5370*t7312;
  t12767 = t12762 + t12764 + t12766;
  t12771 = t10581*t1383;
  t12772 = t6833*t10512;
  t12773 = t567*t10670;
  t12774 = t10632*t2147;
  t12775 = t10495*t7277;
  t12776 = t10528*t7312;
  t12777 = t12771 + t12772 + t12773 + t12774 + t12775 + t12776;
  t12718 = -1.*t5374*t10682;
  t12721 = -1.*t10724*t7368;
  t12559 = -1.*t5902*t8261;
  t12560 = -1.*t5832*t8244;
  t12561 = t12223 + t12559 + t12560;
  t12563 = t2870*t8261;
  t12564 = t2992*t8244;
  t12571 = t12232 + t12563 + t12564;
  t12727 = t10682*t3360;
  t12732 = t11350*t7368;
  t11760 = t3158*t10878;
  t11763 = -1.*t3453*t11649;
  t11765 = t11760 + t11763;
  t12859 = -1.*t8564*t11585;
  t12863 = -1.*t11634*t8575;
  t11748 = t3158*t10724;
  t11749 = -1.*t3453*t11616;
  t11750 = t11748 + t11749;
  t11352 = t11350*t3453;
  t11366 = t3158*t11365;
  t11368 = t11352 + t11366;
  t12869 = t11585*t3083;
  t12891 = t11373*t8575;
  t11833 = t3121*t8664;
  t11834 = -1.*t40*t8557;
  t11849 = t11833 + t11834;
  t13181 = -1.*t3083*t8575;
  t13192 = t8664*t8575;
  t13289 = -1.*t3083*t8267;
  t13291 = -1.*t3546*t8575;
  t13295 = t8664*t8267;
  t13299 = t4338*t8575;
  t13182 = -1.*t11782*t8284;
  t13183 = -1.*t3603*t8334;
  t13184 = t13181 + t13182 + t13183;
  t13193 = t4404*t8284;
  t13194 = t8557*t8334;
  t13195 = t13192 + t13193 + t13194;
  t13280 = -1.*t3360*t7368;
  t13285 = -1.*t3546*t8267;
  t13286 = t13280 + t13285 + t13181;
  t13302 = t4095*t7368;
  t13311 = t4338*t8267;
  t13324 = t13302 + t13311 + t13192;
  t13461 = -1.*t3083*t9480;
  t13463 = -1.*t9417*t8575;
  t13469 = t8664*t9480;
  t13471 = t9462*t8575;
  t13690 = -1.*t10288*t7368;
  t13694 = -1.*t3360*t10028;
  t13736 = t9643*t7368;
  t13740 = t4095*t10028;
  t13793 = -1.*t10309*t8575;
  t13794 = -1.*t3083*t10342;
  t13800 = t10327*t8575;
  t13801 = t8664*t10342;
  t13680 = -1.*t2852*t7978;
  t13681 = -1.*t2262*t8236;
  t13682 = t13680 + t13280 + t13681;
  t13684 = t4173*t7978;
  t13685 = t4203*t8236;
  t13686 = t13684 + t13302 + t13685;
  t14122 = -1.*t6833*t1383;
  t14123 = -1.*t2147*t7277;
  t14124 = -1.*t567*t7312;
  t14125 = t14122 + t14123 + t14124;
  t14127 = t6833*t10825;
  t14128 = t3857*t10632;
  t14129 = t10581*t3938;
  t14130 = t10670*t4056;
  t14131 = t10807*t7277;
  t14132 = t10871*t7312;
  t14133 = t14127 + t14128 + t14129 + t14130 + t14131 + t14132;
  t14135 = t6833*t3938;
  t14136 = t3857*t7277;
  t14137 = t4056*t7312;
  t14139 = t14135 + t14136 + t14137;
  t14142 = -1.*t10581*t1383;
  t14143 = -1.*t6833*t10512;
  t14145 = -1.*t567*t10670;
  t14146 = -1.*t10632*t2147;
  t14147 = -1.*t10495*t7277;
  t14148 = -1.*t10528*t7312;
  t14149 = t14142 + t14143 + t14145 + t14146 + t14147 + t14148;
  t14017 = t10682*t4095;
  t14027 = t10878*t7368;
  t13748 = -1.*t2870*t8261;
  t13749 = -1.*t2992*t8244;
  t13750 = t13280 + t13748 + t13749;
  t13754 = t4268*t8261;
  t13755 = t4230*t8244;
  t13756 = t13302 + t13754 + t13755;
  t14045 = -1.*t10682*t3360;
  t14049 = -1.*t11350*t7368;
  t14201 = t11585*t8664;
  t14204 = t11654*t8575;
  t14211 = -1.*t11585*t3083;
  t14214 = -1.*t11373*t8575;
  t13129 = t3121*t8564;
  t13168 = -1.*t40*t5965;
  t13169 = t13129 + t13168;
  t12992 = 6.5e-11*t138;
  p_output1[0]=(-1.*t3121*t3603 - 1.*t3083*t40)*var2[1] + t3648*var2[2];
  p_output1[1]=t3603*var2[0] - 1.*t3750*t40*var2[1] + t3121*t3750*var2[2] + (t4404*(t5965*t8274 + t5965*t8284 + t8329*t8334 + t8334*t8338) + t8557*t8613 + t8338*(-1.*t4404*t8334 - 1.*t8274*t8557 - 1.*t8284*t8557 - 1.*t8334*t8651) + t5965*t8681)*var2[3];
  p_output1[2]=t3158*t8705*var2[0] + (t3121*t3546 + t3453*t40*t8705)*var2[1] + (t3546*t40 - 1.*t3121*t3453*t8705)*var2[2] + (t3158*t8681*t8765 + t4404*(t3158*t8284*t8765 - 1.*t3453*t8334*t8765 + t8768 - 1.*t3453*t5965*t8775 + t3158*t8338*t8775 + t8783) + t3158*t8613*t8822 + t8338*(-1.*t3158*t4404*t8775 + t3453*t8557*t8775 - 1.*t3158*t8284*t8822 + t3453*t8334*t8822 + t8861 + t8908))*var2[3] + (t8664*(t8267*t8765 + t8768 + t5937*t8775 + t8783) + t4338*t8815 + t8564*(-1.*t4338*t8775 - 1.*t8267*t8822 + t8861 + t8908) + t5937*t9007)*var2[4];
  p_output1[3]=t3158*t9407*var2[0] + (t3453*t40*t9407 + t3121*t9417)*var2[1] + (-1.*t3121*t3453*t9407 + t40*t9417)*var2[2] + (t3158*t8681*t9486 + t4404*(t9482 + t3158*t8284*t9486 - 1.*t3453*t8334*t9486 + t9489 - 1.*t3453*t5965*t9496 + t3158*t8338*t9496) + t3158*t8613*t9510 + t8338*(-1.*t3158*t4404*t9496 + t3453*t8557*t9496 + t9507 - 1.*t3158*t8284*t9510 + t3453*t8334*t9510 + t9512))*var2[3] + (t8815*t9462 + t9007*t9469 + t8664*(t9482 + t8267*t9486 + t9489 + t5937*t9496) + t8564*(-1.*t4338*t9496 + t9507 - 1.*t8267*t9510 + t9512))*var2[4] + (t4095*(t5832*t8261 + t5832*t9279 + t8244*t9305 + t5902*t9309) + t5374*(-1.*t4230*t8261 - 1.*t4230*t9279 - 1.*t4268*t9309 - 1.*t8244*t9338))*var2[5];
  p_output1[4]=t10305*var2[0] + (t10309*t3121 - 1.*t10314*t40)*var2[1] + (t10314*t3121 + t10309*t40)*var2[2] + (t4404*(t10337 + t10343 + t10434*t5965 + t10403*t8284 + t10409*t8334 + t10417*t8338) + t8338*(t10356 + t10357 - 1.*t10417*t4404 - 1.*t10388*t8284 - 1.*t10456*t8334 - 1.*t10434*t8557) + t10388*t8613 + t10403*t8681)*var2[3] + ((t10107 + t10134 + t10356 + t10357 - 1.*t10347*t4338 - 1.*t10354*t8267)*t8564 + t10327*t8815 + t10331*t9007 + t8664*(t10033 + t10337 + t10343 + t10347*t5937 + t10335*t8267 + t9933))*var2[4] + (t5374*(t10107 + t10134 - 1.*t10202*t4230 - 1.*t10213*t4268 - 1.*t10237*t8244 - 1.*t10225*t8261) + t10142*t9643 + t10178*t9899 + t4095*(t10033 + t10202*t5832 + t10213*t5902 + t10198*t8244 + t10190*t8261 + t9933))*var2[5] + (0.15121*t9606 + 0.15121*t9621 + t9643*t9710 + t9899*t9915 + t5374*(t10107 + t10134 - 1.*t10084*t4173 - 1.*t10103*t7978 - 1.*t10118*t8236 - 1.*t4203*t9944) + t4095*(t10033 + t10084*t5609 + t7978*t9931 + t9933 + t5703*t9944 + t8236*t9991))*var2[12];
  p_output1[5]=t11368*var2[0] + (t11373*t3121 - 1.*t11410*t40)*var2[1] + (t11410*t3121 + t11373*t40)*var2[2] + (t4404*(t11601 + t11638 + t11741*t5965 + t11746*t8284 + t11750*t8334 + t11715*t8338) + t8338*(t11645 + t11656 - 1.*t11715*t4404 - 1.*t11758*t8284 - 1.*t11765*t8334 - 1.*t11741*t8557) + t11758*t8613 + t11746*t8681)*var2[3] + ((t10778 + t10879 + t11645 + t11656 - 1.*t11568*t4338 - 1.*t11649*t8267)*t8564 + (t10683 + t10725 + t11601 + t11638 + t11568*t5937 + t11616*t8267)*t8664 + t11654*t8815 + t11634*t9007)*var2[4] + (t10178*t10724 + t10142*t10878 + t4095*(t10683 + t10725 + t11288*t5832 + t11136*t5902 + t11302*t8244 + t11296*t8261) + t5374*(t10778 + t10879 - 1.*t11288*t4230 - 1.*t11136*t4268 - 1.*t11332*t8244 - 1.*t11320*t8261))*var2[5] + (0.15121*t10531 + 0.15121*t10536 + t4095*(t10683 + t10725 + t10674*t5609 + t10688*t5703 + t10709*t7978 + t10732*t8236) + t5374*(t10778 + t10879 - 1.*t10674*t4173 - 1.*t10688*t4203 - 1.*t10873*t7978 - 1.*t10886*t8236) + t10878*t9710 + t10724*t9915)*var2[12] + (-0.281209*t10495 + 0.038749*t10528 + t10825*t11072 + t10696*t11078 + 1.e-6*(t10538 - 7.000000000455e-6*t157) + t10927*t3938 + t11039*t4614 + 4.e-6*(-1.*t10807*t11072 - 1.*t10707*t11078 - 1.*t10927*t3857 - 1.*t11039*t5000) - 7.e-6*(t10871*t11072 + t10700*t11078 + t10927*t4056 + t11039*t5370))*var2[13];
  p_output1[6]=t11782;
  p_output1[7]=t3648;
  p_output1[8]=t3121*t3603 + t3083*t40;
  p_output1[9]=t4404*t8613 + t8338*t8681;
  p_output1[10]=t8664*t8815 + t8564*t9007;
  p_output1[11]=t10142*t4095 + t10178*t5374;
  p_output1[12]=0.15121*t2262 + 0.15121*t2852 + t4095*t9710 + t5374*t9915;
  p_output1[13]=-0.281209*t2147 + t11072*t3938 + 1.e-6*(7.e-6*t1234 + t147 + t4467) + t11078*t4614 + 4.e-6*(-1.*t11072*t3857 - 1.*t11078*t5000) - 7.e-6*(t11072*t4056 + t11078*t5370) + 0.038749*t567;
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t3121*t8557 - 1.*t40*t8664)*var2[1] + t11849*var2[2];
  p_output1[16]=t8557*var2[0] - 1.*t40*t8651*var2[1] + t3121*t8651*var2[2] + (t12065*t3603 + t12093*t5965 + (t3603*t8274 + t3603*t8284 + t11782*t8334 + t3750*t8334)*t8338 + t11782*(-1.*t5965*t8274 - 1.*t5965*t8284 - 1.*t8329*t8334 - 1.*t8334*t8338))*var2[3];
  p_output1[17]=t3158*t8822*var2[0] + (t3121*t4338 + t3453*t40*t8822)*var2[1] + (t40*t4338 - 1.*t3121*t3453*t8822)*var2[2] + (t12065*t3158*t8705 + t12093*t3158*t8765 + t8338*(t12238 + t12241 + t3158*t8284*t8705 - 1.*t3453*t8334*t8705 + t11782*t3158*t8775 - 1.*t3453*t3603*t8775) + t11782*(t12214 + t12219 - 1.*t3158*t8284*t8765 + t3453*t8334*t8765 + t3453*t5965*t8775 - 1.*t3158*t8338*t8775))*var2[3] + (t12226*t3546 + t12234*t5937 + t8564*(t12238 + t12241 + t8267*t8705 + t3546*t8775) + t3083*(t12214 + t12219 - 1.*t8267*t8765 - 1.*t5937*t8775))*var2[4];
  p_output1[18]=t3158*t9510*var2[0] + (t3121*t9462 + t3453*t40*t9510)*var2[1] + (t40*t9462 - 1.*t3121*t3453*t9510)*var2[2] + (t12065*t3158*t9407 + t12093*t3158*t9486 + t8338*(t12311 + t12313 + t3158*t8284*t9407 - 1.*t3453*t8334*t9407 + t11782*t3158*t9496 - 1.*t3453*t3603*t9496) + t11782*(t12301 + t12305 - 1.*t3158*t8284*t9486 + t3453*t8334*t9486 + t3453*t5965*t9496 - 1.*t3158*t8338*t9496))*var2[3] + (t12226*t9417 + t12234*t9469 + t8564*(t12311 + t12313 + t8267*t9407 + t3546*t9496) + t3083*(t12301 + t12305 - 1.*t8267*t9486 - 1.*t5937*t9496))*var2[4] + (t3360*(-1.*t5832*t8261 - 1.*t5832*t9279 - 1.*t8244*t9305 - 1.*t5902*t9309) + t5374*(t2992*t8261 + t2992*t9279 + t2870*t9309 + t8244*t9394))*var2[5];
  p_output1[19]=t10388*var2[0] + (t10327*t3121 - 1.*t10456*t40)*var2[1] + (t10456*t3121 + t10327*t40)*var2[2] + (t10305*t12065 + t10403*t12093 + (t10417*t11782 + t12667 + t12668 + t10434*t3603 + t10305*t8284 + t10314*t8334)*t8338 + t11782*(t12659 + t12661 - 1.*t10434*t5965 - 1.*t10403*t8284 - 1.*t10409*t8334 - 1.*t10417*t8338))*var2[3] + (t10309*t12226 + t10331*t12234 + t3083*(t12395 + t12473 + t12659 + t12661 - 1.*t10347*t5937 - 1.*t10335*t8267) + (t12546 + t12551 + t12667 + t12668 + t10347*t3546 + t10302*t8267)*t8564)*var2[4] + (t10288*t12561 + t3360*(t12395 + t12473 - 1.*t10202*t5832 - 1.*t10213*t5902 - 1.*t10198*t8244 - 1.*t10190*t8261) + t5374*(t12546 + t12551 + t10213*t2870 + t10202*t2992 + t10292*t8244 + t10300*t8261) + t12571*t9899)*var2[5] + (0.15121*t10103 + 0.15121*t10118 + t10288*t12345 + t12357*t9899 + t5374*(t12546 + t12551 + t10084*t2852 + t8236*t9606 + t7978*t9621 + t2262*t9944) + t3360*(t12395 + t12473 - 1.*t10084*t5609 - 1.*t7978*t9931 - 1.*t5703*t9944 - 1.*t8236*t9991))*var2[12];
  p_output1[20]=t11758*var2[0] + (t11654*t3121 - 1.*t11765*t40)*var2[1] + (t11765*t3121 + t11654*t40)*var2[2] + (t11368*t12065 + t11746*t12093 + (t11715*t11782 + t12869 + t12891 + t11741*t3603 + t11368*t8284 + t11410*t8334)*t8338 + t11782*(t12859 + t12863 - 1.*t11741*t5965 - 1.*t11746*t8284 - 1.*t11750*t8334 - 1.*t11715*t8338))*var2[3] + (t11373*t12226 + t11634*t12234 + t3083*(t12718 + t12721 + t12859 + t12863 - 1.*t11568*t5937 - 1.*t11616*t8267) + (t12727 + t12732 + t12869 + t12891 + t11568*t3546 + t11365*t8267)*t8564)*var2[4] + (t11350*t12561 + t10724*t12571 + t3360*(t12718 + t12721 - 1.*t11288*t5832 - 1.*t11136*t5902 - 1.*t11302*t8244 - 1.*t11296*t8261) + t5374*(t12727 + t12732 + t11136*t2870 + t11288*t2992 + t11355*t8244 + t11363*t8261))*var2[5] + (0.15121*t10873 + 0.15121*t10886 + t11350*t12345 + t10724*t12357 + t5374*(t12727 + t12732 + t10688*t2262 + t10674*t2852 + t10531*t7978 + t10536*t8236) + t3360*(t12718 + t12721 - 1.*t10674*t5609 - 1.*t10688*t5703 - 1.*t10709*t7978 - 1.*t10732*t8236))*var2[12] + (-0.281209*t10807 + 0.038749*t10871 + t10696*t12750 + t10512*t12767 + t12758*t1383 + 1.e-6*(t10479 + 4.00000000026e-6*t157) + t12777*t4614 + 4.e-6*(-1.*t10707*t12750 - 1.*t10495*t12767 - 1.*t12758*t2147 - 1.*t12777*t5000) - 7.e-6*(t10700*t12750 + t10528*t12767 + t12777*t5370 + t12758*t567))*var2[13];
  p_output1[21]=t4404;
  p_output1[22]=t11849;
  p_output1[23]=t3121*t8557 + t40*t8664;
  p_output1[24]=t11782*t12065 + t12093*t8338;
  p_output1[25]=t12226*t3083 + t12234*t8564;
  p_output1[26]=t12561*t3360 + t12571*t5374;
  p_output1[27]=t12345*t3360 + 0.15121*t4173 + 0.15121*t4203 + t12357*t5374;
  p_output1[28]=t12767*t1383 - 0.281209*t3857 + 0.038749*t4056 + 1.e-6*(4.e-6*(-1. + t12992) + t1988 + t4418) + t12750*t4614 + 4.e-6*(-1.*t12767*t2147 - 1.*t12750*t5000) - 7.e-6*(t12750*t5370 + t12767*t567);
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t3121*t5965 - 1.*t40*t8564)*var2[1] + t13169*var2[2];
  p_output1[31]=t5965*var2[0] - 1.*t40*t8329*var2[1] + t3121*t8329*var2[2] + (t13195*t3603 + t4404*(-1.*t3603*t8274 - 1.*t3603*t8284 - 1.*t11782*t8334 - 1.*t3750*t8334) + t13184*t8557 + t11782*(t4404*t8334 + t8274*t8557 + t8284*t8557 + t8334*t8651))*var2[3];
  p_output1[32]=t3158*t8765*var2[0] + (t3121*t5937 + t3453*t40*t8765)*var2[1] + (t40*t5937 - 1.*t3121*t3453*t8765)*var2[2] + (t13195*t3158*t8705 + t4404*(t13289 + t13291 - 1.*t3158*t8284*t8705 + t3453*t8334*t8705 - 1.*t11782*t3158*t8775 + t3453*t3603*t8775) + t13184*t3158*t8822 + t11782*(t13295 + t13299 + t3158*t4404*t8775 - 1.*t3453*t8557*t8775 + t3158*t8284*t8822 - 1.*t3453*t8334*t8822))*var2[3] + (t13324*t3546 + t13286*t4338 + t8664*(t13289 + t13291 - 1.*t8267*t8705 - 1.*t3546*t8775) + t3083*(t13295 + t13299 + t4338*t8775 + t8267*t8822))*var2[4];
  p_output1[33]=t3158*t9486*var2[0] + (t3121*t9469 + t3453*t40*t9486)*var2[1] + (t40*t9469 - 1.*t3121*t3453*t9486)*var2[2] + (t13195*t3158*t9407 + t4404*(t13461 + t13463 - 1.*t3158*t8284*t9407 + t3453*t8334*t9407 - 1.*t11782*t3158*t9496 + t3453*t3603*t9496) + t13184*t3158*t9510 + t11782*(t13469 + t13471 + t3158*t4404*t9496 - 1.*t3453*t8557*t9496 + t3158*t8284*t9510 - 1.*t3453*t8334*t9510))*var2[3] + (t13324*t9417 + t13286*t9462 + t8664*(t13461 + t13463 - 1.*t8267*t9407 - 1.*t3546*t9496) + t3083*(t13469 + t13471 + t4338*t9496 + t8267*t9510))*var2[4] + (t3360*(t4230*t8261 + t4230*t9279 + t4268*t9309 + t8244*t9338) + t4095*(-1.*t2992*t8261 - 1.*t2992*t9279 - 1.*t2870*t9309 - 1.*t8244*t9394))*var2[5];
  p_output1[34]=t10403*var2[0] + (t10331*t3121 - 1.*t10409*t40)*var2[1] + (t10409*t3121 + t10331*t40)*var2[2] + (t10388*t13184 + t10305*t13195 + t4404*(-1.*t10417*t11782 + t13793 + t13794 - 1.*t10434*t3603 - 1.*t10305*t8284 - 1.*t10314*t8334) + t11782*(t13800 + t13801 + t10417*t4404 + t10388*t8284 + t10456*t8334 + t10434*t8557))*var2[3] + (t10327*t13286 + t10309*t13324 + t3083*(t13736 + t13740 + t13800 + t13801 + t10347*t4338 + t10354*t8267) + (t13690 + t13694 + t13793 + t13794 - 1.*t10347*t3546 - 1.*t10302*t8267)*t8664)*var2[4] + (t10288*t13756 + t3360*(t13736 + t13740 + t10202*t4230 + t10213*t4268 + t10237*t8244 + t10225*t8261) + t4095*(t13690 + t13694 - 1.*t10213*t2870 - 1.*t10202*t2992 - 1.*t10292*t8244 - 1.*t10300*t8261) + t13750*t9643)*var2[5] + (t10288*t13686 + t13682*t9643 + 0.15121*t9931 + t4095*(t13690 + t13694 - 1.*t10084*t2852 - 1.*t8236*t9606 - 1.*t7978*t9621 - 1.*t2262*t9944) + t3360*(t13736 + t13740 + t10084*t4173 + t10103*t7978 + t10118*t8236 + t4203*t9944) + 0.15121*t9991)*var2[12];
  p_output1[35]=t11746*var2[0] + (t11634*t3121 - 1.*t11750*t40)*var2[1] + (t11750*t3121 + t11634*t40)*var2[2] + (t11758*t13184 + t11368*t13195 + t4404*(-1.*t11715*t11782 + t14211 + t14214 - 1.*t11741*t3603 - 1.*t11368*t8284 - 1.*t11410*t8334) + t11782*(t14201 + t14204 + t11715*t4404 + t11758*t8284 + t11765*t8334 + t11741*t8557))*var2[3] + (t11654*t13286 + t11373*t13324 + t3083*(t14017 + t14027 + t14201 + t14204 + t11568*t4338 + t11649*t8267) + (t14045 + t14049 + t14211 + t14214 - 1.*t11568*t3546 - 1.*t11365*t8267)*t8664)*var2[4] + (t10878*t13750 + t11350*t13756 + t3360*(t14017 + t14027 + t11288*t4230 + t11136*t4268 + t11332*t8244 + t11320*t8261) + t4095*(t14045 + t14049 - 1.*t11136*t2870 - 1.*t11288*t2992 - 1.*t11355*t8244 - 1.*t11363*t8261))*var2[5] + (0.15121*t10709 + 0.15121*t10732 + t10878*t13682 + t11350*t13686 + t4095*(t14045 + t14049 - 1.*t10688*t2262 - 1.*t10674*t2852 - 1.*t10531*t7978 - 1.*t10536*t8236) + t3360*(t14017 + t14027 + t10674*t4173 + t10688*t4203 + t10873*t7978 + t10886*t8236))*var2[12] + (0.038749*t10700 - 0.281209*t10707 + t10825*t14125 + t1383*t14133 + t10512*t14139 + 1.e-6*(7.e-6*t10540 + 4.e-6*t10548 + 6.5e-11*t157) + 4.e-6*(-1.*t10807*t14125 - 1.*t10495*t14139 - 1.*t14133*t2147 - 1.*t14149*t3857) + t14149*t3938 - 7.e-6*(t10871*t14125 + t10528*t14139 + t14149*t4056 + t14133*t567))*var2[13];
  p_output1[36]=t8338;
  p_output1[37]=t13169;
  p_output1[38]=t3121*t5965 + t40*t8564;
  p_output1[39]=t11782*t13195 + t13184*t4404;
  p_output1[40]=t13324*t3083 + t13286*t8664;
  p_output1[41]=t13756*t3360 + t13750*t4095;
  p_output1[42]=t13686*t3360 + t13682*t4095 + 0.15121*t5609 + 0.15121*t5703;
  p_output1[43]=t1383*t14139 + 4.e-6*(-1.*t14139*t2147 - 1.*t14125*t3857) + t14125*t3938 - 0.281209*t5000 + 0.038749*t5370 - 7.e-6*(t14125*t4056 + t14139*t567) + 1.e-6*(-1. + t12992 + 7.e-6*t4471 + 4.e-6*t6658);
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void J_dh_RlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
