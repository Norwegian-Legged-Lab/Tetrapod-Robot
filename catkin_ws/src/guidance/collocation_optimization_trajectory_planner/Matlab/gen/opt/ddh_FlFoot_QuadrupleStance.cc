/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:13 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t230;
  double t289;
  double t300;
  double t306;
  double t330;
  double t352;
  double t256;
  double t643;
  double t827;
  double t828;
  double t846;
  double t906;
  double t1149;
  double t1374;
  double t701;
  double t710;
  double t791;
  double t1046;
  double t1050;
  double t1063;
  double t1622;
  double t1651;
  double t1652;
  double t1728;
  double t1478;
  double t1481;
  double t1496;
  double t1527;
  double t1542;
  double t1569;
  double t2443;
  double t2214;
  double t2215;
  double t2305;
  double t2309;
  double t1874;
  double t1906;
  double t1913;
  double t1939;
  double t1981;
  double t2037;
  double t2694;
  double t2702;
  double t2463;
  double t1090;
  double t1091;
  double t2329;
  double t2363;
  double t1575;
  double t2472;
  double t1699;
  double t2148;
  double t2954;
  double t2980;
  double t3056;
  double t3086;
  double t3088;
  double t1182;
  double t1206;
  double t1221;
  double t3130;
  double t3183;
  double t3191;
  double t3196;
  double t3208;
  double t3209;
  double t3241;
  double t3243;
  double t3270;
  double t3271;
  double t3276;
  double t793;
  double t902;
  double t961;
  double t3390;
  double t3403;
  double t3411;
  double t3204;
  double t3258;
  double t3314;
  double t3383;
  double t3524;
  double t3531;
  double t3582;
  double t3628;
  double t3685;
  double t3474;
  double t3476;
  double t3487;
  double t3495;
  double t3412;
  double t3439;
  double t3458;
  double t3461;
  double t3644;
  double t3748;
  double t3751;
  double t3782;
  double t2831;
  double t2852;
  double t2858;
  double t2871;
  double t2905;
  double t2924;
  double t2940;
  double t2943;
  double t2947;
  double t3034;
  double t3098;
  double t3126;
  double t3389;
  double t3467;
  double t3469;
  double t3472;
  double t3473;
  double t3505;
  double t3519;
  double t3800;
  double t3813;
  double t3837;
  double t3873;
  double t3875;
  double t3885;
  double t3893;
  double t3895;
  double t3906;
  double t3931;
  double t3951;
  double t3952;
  double t3953;
  double t3955;
  double t3956;
  double t3969;
  double t3970;
  double t3978;
  double t3984;
  double t3985;
  double t3987;
  double t4006;
  double t3964;
  double t3979;
  double t3980;
  double t4065;
  double t4069;
  double t4081;
  double t4156;
  double t4185;
  double t4189;
  double t4386;
  double t4403;
  double t4417;
  double t4435;
  double t4515;
  double t4543;
  double t4549;
  double t4575;
  double t4601;
  double t4611;
  double t4618;
  double t4655;
  double t4667;
  double t4691;
  double t4719;
  double t4729;
  double t436;
  double t657;
  double t4814;
  double t4839;
  double t4881;
  double t4990;
  double t4991;
  double t4992;
  double t4757;
  double t4780;
  double t4796;
  double t4905;
  double t4917;
  double t4957;
  double t4968;
  double t5000;
  double t5002;
  double t5003;
  double t5006;
  double t5010;
  double t5017;
  double t5027;
  double t5028;
  double t5065;
  double t5072;
  double t5085;
  double t5142;
  double t5143;
  double t5146;
  double t5154;
  double t5185;
  double t5189;
  double t5240;
  double t5288;
  double t5323;
  double t5344;
  double t5425;
  double t5470;
  double t5484;
  double t5498;
  double t5562;
  double t5612;
  double t5617;
  double t5811;
  double t5819;
  double t5826;
  double t5749;
  double t5753;
  double t5775;
  double t5836;
  double t5862;
  double t5919;
  double t5930;
  double t5933;
  double t5934;
  double t5687;
  double t5714;
  double t5738;
  double t5777;
  double t5928;
  double t5929;
  double t5974;
  double t6042;
  double t6066;
  double t6067;
  double t6146;
  double t6312;
  double t6313;
  double t6350;
  double t6355;
  double t6663;
  double t6684;
  double t6686;
  double t6692;
  double t6693;
  double t6694;
  double t6732;
  double t6734;
  double t6741;
  double t6633;
  double t6634;
  double t6648;
  double t6610;
  double t6621;
  double t6630;
  double t6658;
  double t6722;
  double t6730;
  double t6742;
  double t6790;
  double t6795;
  double t6834;
  double t6849;
  double t6853;
  double t6869;
  double t6870;
  double t6873;
  double t6886;
  double t6912;
  double t6918;
  double t6919;
  double t6922;
  double t6976;
  double t7011;
  double t7016;
  double t7170;
  double t7171;
  double t7076;
  double t7106;
  double t7110;
  double t7112;
  double t7214;
  double t7235;
  double t7245;
  double t7133;
  double t7143;
  double t7145;
  double t7311;
  double t7315;
  double t7283;
  double t7286;
  double t7372;
  double t7374;
  double t7375;
  double t7336;
  double t7346;
  double t7368;
  double t7411;
  double t7417;
  double t7427;
  double t7323;
  double t7369;
  double t7292;
  double t7295;
  double t7302;
  double t7393;
  double t7430;
  double t7559;
  double t7562;
  double t7592;
  double t7593;
  double t7598;
  double t7621;
  double t7622;
  double t7591;
  double t7603;
  double t7584;
  double t7587;
  double t7620;
  double t7642;
  double t7874;
  double t7887;
  double t7895;
  double t7926;
  double t7929;
  double t7930;
  double t8115;
  double t8119;
  double t8129;
  double t8098;
  double t8108;
  double t8109;
  double t8110;
  double t8111;
  double t8015;
  double t8019;
  double t8020;
  double t8021;
  double t8072;
  double t8081;
  double t8086;
  double t8087;
  double t8088;
  double t8089;
  double t8042;
  double t8044;
  double t8045;
  double t8046;
  double t8049;
  double t8053;
  double t7999;
  double t8000;
  double t8004;
  double t8029;
  double t8030;
  double t8035;
  double t8040;
  double t8144;
  double t8145;
  double t8146;
  double t8057;
  double t8143;
  double t8189;
  double t8197;
  double t8284;
  double t8285;
  double t8286;
  double t8269;
  double t8270;
  double t8274;
  double t8175;
  double t8179;
  double t8186;
  double t8187;
  double t8201;
  double t8202;
  double t8203;
  double t8219;
  double t8220;
  double t8230;
  double t8232;
  double t8244;
  double t8245;
  double t8216;
  double t8217;
  double t8231;
  double t8256;
  double t8257;
  double t8349;
  double t8355;
  double t8356;
  double t8359;
  double t8360;
  double t8361;
  double t8293;
  double t8294;
  double t8295;
  double t8306;
  double t8311;
  double t8312;
  double t8323;
  double t8324;
  double t8325;
  double t8327;
  double t8328;
  double t8329;
  double t8393;
  double t8394;
  double t8395;
  double t8376;
  double t8377;
  double t8378;
  double t8372;
  double t8373;
  double t8374;
  double t8399;
  double t8400;
  double t8401;
  double t8375;
  double t8396;
  double t8380;
  double t8385;
  double t8387;
  double t8407;
  double t8408;
  double t8409;
  double t8438;
  double t8442;
  double t8443;
  double t8405;
  double t8406;
  double t8430;
  double t8431;
  double t8432;
  double t8420;
  double t8424;
  double t8425;
  double t8447;
  double t8448;
  double t8449;
  double t8484;
  double t8485;
  double t8486;
  double t8490;
  double t8493;
  double t8495;
  double t8497;
  double t8500;
  double t8501;
  double t8511;
  double t8512;
  double t8513;
  double t8514;
  double t8472;
  double t8473;
  double t8474;
  double t8487;
  double t8496;
  double t8502;
  double t8503;
  double t8506;
  double t8507;
  double t8508;
  double t8509;
  double t8545;
  double t8546;
  double t8548;
  double t8552;
  double t8553;
  double t8554;
  double t8555;
  double t8556;
  double t8557;
  double t8561;
  double t8469;
  double t8470;
  double t8480;
  double t8481;
  double t8482;
  double t8510;
  double t8525;
  double t8528;
  double t8603;
  double t8605;
  double t8609;
  double t8598;
  double t8600;
  double t8601;
  double t8519;
  double t8520;
  double t8521;
  double t8522;
  double t8529;
  double t8530;
  double t8579;
  double t8580;
  double t8581;
  double t8584;
  double t8585;
  double t8587;
  double t8573;
  double t8574;
  double t8576;
  double t8582;
  double t8592;
  double t8593;
  double t8633;
  double t8634;
  double t8635;
  double t8637;
  double t8639;
  double t8640;
  double t8620;
  double t8621;
  double t8622;
  double t8624;
  double t8625;
  double t8626;
  double t8679;
  double t8680;
  double t8681;
  double t8665;
  double t8666;
  double t8670;
  double t8688;
  double t8689;
  double t8690;
  double t8678;
  double t8701;
  double t8702;
  double t8703;
  double t8699;
  double t8700;
  double t8717;
  double t8718;
  double t8720;
  double t8711;
  double t8712;
  double t8715;
  double t8726;
  double t8728;
  double t8729;
  double t441;
  double t669;
  double t8749;
  double t8750;
  double t8751;
  double t8753;
  double t8754;
  double t8755;
  double t998;
  double t1130;
  double t1222;
  double t8757;
  double t8758;
  double t8759;
  double t8761;
  double t8762;
  double t8763;
  double t1779;
  double t1798;
  double t2183;
  double t2189;
  double t2394;
  double t2399;
  double t8766;
  double t8767;
  double t8768;
  double t8769;
  double t8780;
  double t8781;
  double t8782;
  double t8783;
  double t8771;
  double t8772;
  double t8777;
  double t8778;
  double t8813;
  double t8814;
  double t8815;
  double t8816;
  double t8817;
  double t8818;
  double t8819;
  double t8820;
  double t8821;
  double t8822;
  double t8823;
  double t8824;
  double t8825;
  double t8550;
  double t8830;
  double t8831;
  double t8835;
  double t8838;
  double t8840;
  double t8841;
  double t8842;
  double t8828;
  double t8829;
  double t8836;
  double t8844;
  double t8846;
  double t8847;
  double t8851;
  double t8852;
  double t8853;
  double t8856;
  double t8857;
  double t8858;
  double t8859;
  double t8860;
  double t8861;
  double t8862;
  double t8863;
  double t8864;
  double t8869;
  double t8870;
  double t8871;
  double t8872;
  double t8873;
  double t8874;
  double t8875;
  double t8876;
  double t8877;
  double t8880;
  double t8881;
  double t8882;
  double t8885;
  double t8886;
  double t8887;
  double t8890;
  double t8891;
  double t8892;
  double t8893;
  double t8894;
  double t8895;
  double t8898;
  double t8899;
  double t8900;
  double t8937;
  double t8939;
  double t8950;
  double t8951;
  double t9002;
  double t9004;
  double t9010;
  double t9012;
  double t7950;
  double t7951;
  double t7952;
  double t7911;
  double t7912;
  double t7914;
  double t9084;
  double t9087;
  double t9098;
  double t9102;
  double t8457;
  double t8458;
  double t8459;
  double t9126;
  double t9129;
  double t8434;
  double t8435;
  double t8436;
  double t8218;
  double t8258;
  double t8259;
  double t9135;
  double t9138;
  double t9194;
  double t9196;
  double t9197;
  double t9199;
  double t9200;
  double t9201;
  double t9202;
  double t9203;
  double t9204;
  double t9205;
  double t9173;
  double t9181;
  double t9184;
  double t8735;
  double t8736;
  double t8737;
  double t9228;
  double t8577;
  double t8594;
  double t8595;
  double t9233;
  double t9236;
  double t9268;
  double t9269;
  double t9270;
  double t9272;
  double t9273;
  double t9274;
  double t9287;
  double t9288;
  double t9289;
  double t9292;
  double t9293;
  double t9294;
  double t9276;
  double t9277;
  double t9278;
  double t9280;
  double t9281;
  double t9282;
  double t9305;
  double t9306;
  double t9307;
  double t9308;
  double t9315;
  double t9317;
  double t9318;
  double t9319;
  double t9310;
  double t9311;
  double t9312;
  double t9313;
  double t9337;
  double t9338;
  double t9339;
  double t9340;
  double t9341;
  double t9342;
  double t9343;
  double t9344;
  double t9345;
  double t9346;
  double t9347;
  double t9348;
  double t9349;
  double t9355;
  double t9356;
  double t9357;
  double t9358;
  double t9360;
  double t9361;
  double t9362;
  double t9353;
  double t9354;
  double t9359;
  double t9363;
  double t9364;
  double t9365;
  double t9366;
  double t9367;
  double t9368;
  double t9371;
  double t9372;
  double t9373;
  double t9374;
  double t9375;
  double t9376;
  double t9377;
  double t9378;
  double t9379;
  double t9382;
  double t9383;
  double t9384;
  double t9385;
  double t9386;
  double t9387;
  double t9388;
  double t9389;
  double t9390;
  double t9393;
  double t9394;
  double t9395;
  double t9396;
  double t9397;
  double t9398;
  double t9399;
  double t9400;
  double t9401;
  double t9430;
  double t9431;
  double t9436;
  double t9439;
  double t9475;
  double t9477;
  double t9481;
  double t9483;
  double t9542;
  double t9545;
  double t9551;
  double t9554;
  double t9578;
  double t9581;
  double t9587;
  double t9588;
  double t9633;
  double t9634;
  double t9635;
  double t9636;
  double t9637;
  double t9638;
  double t9639;
  double t9642;
  double t9643;
  double t9644;
  double t9645;
  double t9646;
  double t9647;
  double t9616;
  double t9619;
  double t9624;
  double t9626;
  double t9675;
  double t9678;
  double t9682;
  double t9683;
  t230 = Cos(var1[4]);
  t289 = Cos(var1[6]);
  t300 = -1.*t289;
  t306 = 1. + t300;
  t330 = 0.15121*t306;
  t352 = Sin(var1[6]);
  t256 = Sin(var1[5]);
  t643 = Cos(var1[5]);
  t827 = Cos(var1[7]);
  t828 = -1.*t827;
  t846 = 1. + t828;
  t906 = Sin(var1[7]);
  t1149 = Sin(var1[4]);
  t1374 = -1. + t827;
  t701 = -1.*t230*t289*t256;
  t710 = -1.*t230*t643*t352;
  t791 = t701 + t710;
  t1046 = t230*t643*t289;
  t1050 = -1.*t230*t256*t352;
  t1063 = t1046 + t1050;
  t1622 = Cos(var1[8]);
  t1651 = -1.*t1622;
  t1652 = 1. + t1651;
  t1728 = Sin(var1[8]);
  t1478 = 4.e-6*t1374*t1149;
  t1481 = 1.6e-11*t1374;
  t1496 = 1. + t1481;
  t1527 = t1496*t791;
  t1542 = 4.e-6*t1063*t906;
  t1569 = t1478 + t1527 + t1542;
  t2443 = -1. + t1622;
  t2214 = t827*t1149;
  t2215 = 4.e-6*t1374*t791;
  t2305 = t1063*t906;
  t2309 = t2214 + t2215 + t2305;
  t1874 = -1.000000000016*t846;
  t1906 = 1. + t1874;
  t1913 = t1906*t1063;
  t1939 = -1.*t1149*t906;
  t1981 = -4.e-6*t791*t906;
  t2037 = t1913 + t1939 + t1981;
  t2694 = -1.000000000016*t1652;
  t2702 = 1. + t2694;
  t2463 = 1.6e-11*t2443;
  t1090 = 0.281210000008499*t846;
  t1091 = 0.03874900000062*t906;
  t2329 = 5.136e-14*var1[8];
  t2363 = -0.03874900000062*t1652;
  t1575 = -1.284e-8*var1[8];
  t2472 = 1. + t2463;
  t1699 = -1.5499600000248e-7*t1652;
  t2148 = 0.503210000016051*t1652;
  t2954 = 1.6e-11*t1652;
  t2980 = 1. + t2954 + t2463;
  t3056 = 4.e-6*t2443;
  t3086 = -4.e-6*t1622;
  t3088 = t3056 + t3086;
  t1182 = 4.9936e-13*var1[7];
  t1206 = -0.03874900000062*t846;
  t1221 = 0.281210000004*t906;
  t3130 = 5.9484e-7*t2443;
  t3183 = -0.03875*t1622;
  t3191 = -0.299999999992*t1728;
  t3196 = t2329 + t2363 + t3130 + t3183 + t3191;
  t3208 = 0.14871*t2472;
  t3209 = -1.55e-7*t2443;
  t3241 = -1.199999999968e-6*t1728;
  t3243 = t1575 + t3208 + t1699 + t3209 + t3241;
  t3270 = 0.80321*t2702;
  t3271 = -4.05159380016e-7*t1728;
  t3276 = t3270 + t2148 + t3271;
  t793 = -1.2484e-7*var1[7];
  t902 = -1.5499600000248e-7*t846;
  t961 = 1.124840000016e-6*t906;
  t3390 = 4.e-6*t1374*t2980;
  t3403 = t827*t3088;
  t3411 = t3390 + t3403;
  t3204 = t906*t3196;
  t3258 = 4.e-6*t906*t3243;
  t3314 = t1906*t3276;
  t3383 = t1090 + t1091 + t3204 + t3258 + t3314;
  t3524 = -1. + t2954;
  t3531 = 4.e-6*t3524;
  t3582 = 4.e-6*t1652;
  t3628 = t3531 + t3582;
  t3685 = t2954 + t1651;
  t3474 = 4.e-6*t1374*t3196;
  t3476 = t1496*t3243;
  t3487 = -4.e-6*t906*t3276;
  t3495 = t793 + t902 + t961 + t3474 + t3476 + t3487;
  t3412 = t827*t3196;
  t3439 = 4.e-6*t1374*t3243;
  t3458 = -1.*t906*t3276;
  t3461 = t1182 + t1206 + t1221 + t3412 + t3439 + t3458;
  t3644 = 4.e-6*t1374*t3628;
  t3748 = t827*t3685;
  t3751 = 1.000000000016*t906*t1728;
  t3782 = t3644 + t3748 + t3751;
  t2831 = -4.e-6*t2702*t906;
  t2852 = -4.e-6*t1496*t1728;
  t2858 = -4.e-6*t1374*t1728;
  t2871 = t2831 + t2852 + t2858;
  t2905 = -0.15121*t2871;
  t2924 = t1906*t2702;
  t2940 = -1.000000000016*t906*t1728;
  t2943 = t2924 + t2940;
  t2947 = 0.15121*t2943;
  t3034 = 4.e-6*t2980*t906;
  t3098 = t3088*t906;
  t3126 = t3034 + t3098;
  t3389 = t3126*t3383;
  t3467 = t3411*t3461;
  t3469 = t1496*t2980;
  t3472 = 4.e-6*t1374*t3088;
  t3473 = t3469 + t3472;
  t3505 = t3473*t3495;
  t3519 = t3389 + t3467 + t3505;
  t3800 = t3519*t3782;
  t3813 = 4.e-6*t3628*t906;
  t3837 = t3685*t906;
  t3873 = -1.000000000016*t1906*t1728;
  t3875 = t3813 + t3837 + t3873;
  t3885 = -1.*t3383*t3875;
  t3893 = t1496*t3628;
  t3895 = 4.e-6*t1374*t3685;
  t3906 = 4.000000000064e-6*t906*t1728;
  t3931 = t3893 + t3895 + t3906;
  t3951 = -1.*t3495*t3931;
  t3952 = -1.*t3461*t3782;
  t3953 = t3885 + t3951 + t3952;
  t3955 = t3411*t3953;
  t3956 = t2905 + t2947 + t3800 + t3955;
  t3969 = t3088*t3196;
  t3970 = t2980*t3243;
  t3978 = t3969 + t3970;
  t3984 = -1.*t3685*t3196;
  t3985 = -1.*t3628*t3243;
  t3987 = 1.000000000016*t3276*t1728;
  t4006 = t3984 + t3985 + t3987;
  t3964 = 0.038749*t2702;
  t3979 = t3628*t3978;
  t3980 = -0.281210000004*t1728;
  t4065 = t2980*t4006;
  t4069 = -1.*t3685*t3978;
  t4081 = -1.*t3088*t4006;
  t4156 = t4069 + t4081;
  t4185 = 4.e-6*t4156;
  t4189 = t3964 + t3979 + t3980 + t4065 + t4185;
  t4386 = -1.*t2702*t906;
  t4403 = -1.6e-11*t1374*t1728;
  t4417 = -1.*t827*t1728;
  t4435 = t4386 + t4403 + t4417;
  t4515 = t1149*t4435;
  t4543 = -1.*t352*t2871;
  t4549 = t289*t2943;
  t4575 = t4543 + t4549;
  t4601 = t643*t4575;
  t4611 = t289*t2871;
  t4618 = t352*t2943;
  t4655 = t4611 + t4618;
  t4667 = -1.*t256*t4655;
  t4691 = t4601 + t4667;
  t4719 = t230*t4691;
  t4729 = t4515 + t4719;
  t436 = -0.15121*t352;
  t657 = 0.15121*t352;
  t4814 = t352*t3383;
  t4839 = t289*t3495;
  t4881 = t330 + t436 + t4814 + t4839;
  t4990 = t289*t3383;
  t4991 = -1.*t352*t3495;
  t4992 = t330 + t657 + t4990 + t4991;
  t4757 = t289*t3473;
  t4780 = t352*t3126;
  t4796 = t4757 + t4780;
  t4905 = t4796*t4881;
  t4917 = -1.*t3473*t352;
  t4957 = t289*t3126;
  t4968 = t4917 + t4957;
  t5000 = t4968*t4992;
  t5002 = t4905 + t5000 + t3467;
  t5003 = t5002*t3782;
  t5006 = t352*t3875;
  t5010 = t289*t3931;
  t5017 = t5006 + t5010;
  t5027 = -1.*t4881*t5017;
  t5028 = t289*t3875;
  t5065 = -1.*t352*t3931;
  t5072 = t5028 + t5065;
  t5085 = -1.*t4992*t5072;
  t5142 = t3952 + t5027 + t5085;
  t5143 = t3411*t5142;
  t5146 = t5003 + t5143;
  t5154 = Sin(var1[3]);
  t5185 = t256*t4575;
  t5189 = t643*t4655;
  t5240 = t5185 + t5189;
  t5288 = t5154*t5240;
  t5323 = Cos(var1[3]);
  t5344 = t230*t4435;
  t5425 = -1.*t1149*t4691;
  t5470 = t5344 + t5425;
  t5484 = t5323*t5470;
  t5498 = t5288 + t5484;
  t5562 = t5323*t5240;
  t5612 = -1.*t5154*t5470;
  t5617 = t5562 + t5612;
  t5811 = t256*t4968;
  t5819 = t643*t4796;
  t5826 = t5811 + t5819;
  t5749 = -1.*t256*t4881;
  t5753 = t643*t4992;
  t5775 = t5749 + t5753;
  t5836 = t643*t4881;
  t5862 = t256*t4992;
  t5919 = t5836 + t5862;
  t5930 = t643*t5017;
  t5933 = t256*t5072;
  t5934 = t5930 + t5933;
  t5687 = t643*t4968;
  t5714 = -1.*t256*t4796;
  t5738 = t5687 + t5714;
  t5777 = t5738*t5775;
  t5928 = t5826*t5919;
  t5929 = t5777 + t5928 + t3467;
  t5974 = t5929*t5934;
  t6042 = -1.*t256*t5017;
  t6066 = t643*t5072;
  t6067 = t6042 + t6066;
  t6146 = -1.*t5775*t6067;
  t6312 = -1.*t5919*t5934;
  t6313 = t3952 + t6146 + t6312;
  t6350 = t5826*t6313;
  t6355 = t5974 + t6350;
  t6663 = t3411*t1149;
  t6684 = t230*t5738;
  t6686 = t6663 + t6684;
  t6692 = t230*t5775;
  t6693 = t1149*t3461;
  t6694 = t6692 + t6693;
  t6732 = t1149*t3782;
  t6734 = t230*t6067;
  t6741 = t6732 + t6734;
  t6633 = -1.*t1149*t5775;
  t6634 = t230*t3461;
  t6648 = t6633 + t6634;
  t6610 = t230*t3411;
  t6621 = -1.*t1149*t5738;
  t6630 = t6610 + t6621;
  t6658 = t6630*t6648;
  t6722 = t6686*t6694;
  t6730 = t5928 + t6658 + t6722;
  t6742 = t6730*t6741;
  t6790 = -1.*t6694*t6741;
  t6795 = t230*t3782;
  t6834 = -1.*t1149*t6067;
  t6849 = t6795 + t6834;
  t6853 = -1.*t6648*t6849;
  t6869 = t6312 + t6790 + t6853;
  t6870 = t6686*t6869;
  t6873 = t6742 + t6870;
  t6886 = -1.*t256*t4575;
  t6912 = -1.*t289*t2871;
  t6918 = -1.*t352*t2943;
  t6919 = t6912 + t6918;
  t6922 = t643*t6919;
  t6976 = t6886 + t6922;
  t7011 = t256*t6919;
  t7016 = t4601 + t7011;
  t7170 = -0.15121*t289;
  t7171 = t7170 + t657 + t4990 + t4991;
  t7076 = 0.15121*t289;
  t7106 = -1.*t352*t3383;
  t7110 = -1.*t289*t3495;
  t7112 = t7076 + t657 + t7106 + t7110;
  t7214 = -1.*t352*t3875;
  t7235 = -1.*t289*t3931;
  t7245 = t7214 + t7235;
  t7133 = -1.*t289*t3473;
  t7143 = -1.*t352*t3126;
  t7145 = t7133 + t7143;
  t7311 = t256*t7145;
  t7315 = t5687 + t7311;
  t7283 = t256*t7245;
  t7286 = t7283 + t6066;
  t7372 = t643*t7112;
  t7374 = -1.*t256*t7171;
  t7375 = t7372 + t7374;
  t7336 = t256*t7112;
  t7346 = t643*t7171;
  t7368 = t7336 + t7346;
  t7411 = t643*t7245;
  t7417 = -1.*t256*t5072;
  t7427 = t7411 + t7417;
  t7323 = t7315*t5919;
  t7369 = t5826*t7368;
  t7292 = -1.*t256*t4968;
  t7295 = t643*t7145;
  t7302 = t7292 + t7295;
  t7393 = -1.*t5919*t7286;
  t7430 = -1.*t7368*t5934;
  t7559 = -1.*t643*t4655;
  t7562 = t6886 + t7559;
  t7592 = -1.*t643*t4881;
  t7593 = -1.*t256*t4992;
  t7598 = t7592 + t7593;
  t7621 = -1.*t643*t5017;
  t7622 = t7621 + t7417;
  t7591 = t5826*t5775;
  t7603 = t5738*t5919;
  t7584 = -1.*t643*t4796;
  t7587 = t7292 + t7584;
  t7620 = -1.*t5919*t6067;
  t7642 = -1.*t5775*t5934;
  t7874 = -1.*t1149*t4435;
  t7887 = -1.*t230*t4691;
  t7895 = t7874 + t7887;
  t7926 = -1.*t230*t5775;
  t7929 = -1.*t1149*t3461;
  t7930 = t7926 + t7929;
  t8115 = -4.e-6*t2980*t906;
  t8119 = -1.*t3088*t906;
  t8129 = t8115 + t8119;
  t8098 = 0.03874900000062*t827;
  t8108 = 0.281210000008499*t906;
  t8109 = 4.e-6*t827*t3243;
  t8110 = -1.000000000016*t906*t3276;
  t8111 = t8098 + t8108 + t3412 + t8109 + t8110;
  t8015 = -4.e-6*t3628*t906;
  t8019 = -1.*t3685*t906;
  t8020 = 1.000000000016*t827*t1728;
  t8021 = t8015 + t8019 + t8020;
  t8072 = 1.124840000016e-6*t827;
  t8081 = -1.5499600000248e-7*t906;
  t8086 = -4.e-6*t906*t3196;
  t8087 = -1.6e-11*t906*t3243;
  t8088 = -4.e-6*t827*t3276;
  t8089 = -1.2484e-7 + t8072 + t8081 + t8086 + t8087 + t8088;
  t8042 = 0.281210000004*t827;
  t8044 = -0.03874900000062*t906;
  t8045 = -1.*t906*t3196;
  t8046 = -4.e-6*t906*t3243;
  t8049 = -1.*t827*t3276;
  t8053 = 4.9936e-13 + t8042 + t8044 + t8045 + t8046 + t8049;
  t7999 = -1.000000000016*t2702*t906;
  t8000 = -1.000000000016*t827*t1728;
  t8004 = t7999 + t8000;
  t8029 = -4.e-6*t827*t2702;
  t8030 = t8029 + t3906;
  t8035 = 4.e-6*t827*t2980;
  t8040 = t8035 + t3403;
  t8144 = -1.6e-11*t2980*t906;
  t8145 = -4.e-6*t3088*t906;
  t8146 = t8144 + t8145;
  t8057 = t3411*t8053;
  t8143 = t8129*t3461;
  t8189 = -1.*t3461*t8021;
  t8197 = -1.*t8053*t3782;
  t8284 = t289*t8089;
  t8285 = t352*t8111;
  t8286 = t8284 + t8285;
  t8269 = -1.*t352*t8089;
  t8270 = t289*t8111;
  t8274 = t8269 + t8270;
  t8175 = -1.6e-11*t3628*t906;
  t8179 = -4.e-6*t3685*t906;
  t8186 = 4.000000000064e-6*t827*t1728;
  t8187 = t8175 + t8179 + t8186;
  t8201 = 4.e-6*t827*t3628;
  t8202 = 1.000000000032*t906*t1728;
  t8203 = t8201 + t3748 + t8202;
  t8219 = t352*t8004;
  t8220 = t289*t8030;
  t8230 = t8219 + t8220;
  t8232 = t289*t8004;
  t8244 = -1.*t352*t8030;
  t8245 = t8232 + t8244;
  t8216 = -1.*t827*t2702;
  t8217 = t8216 + t3751;
  t8231 = -1.*t256*t8230;
  t8256 = t643*t8245;
  t8257 = t8231 + t8256;
  t8349 = t643*t8230;
  t8355 = t256*t8245;
  t8356 = t8349 + t8355;
  t8359 = t230*t8217;
  t8360 = -1.*t1149*t8257;
  t8361 = t8359 + t8360;
  t8293 = t8040*t352;
  t8294 = t289*t8146;
  t8295 = t8293 + t8294;
  t8306 = t289*t8040;
  t8311 = -1.*t352*t8146;
  t8312 = t8306 + t8311;
  t8323 = -1.*t352*t8187;
  t8324 = t289*t8203;
  t8325 = t8323 + t8324;
  t8327 = t289*t8187;
  t8328 = t352*t8203;
  t8329 = t8327 + t8328;
  t8393 = t643*t8295;
  t8394 = t256*t8312;
  t8395 = t8393 + t8394;
  t8376 = t643*t8274;
  t8377 = -1.*t256*t8286;
  t8378 = t8376 + t8377;
  t8372 = t256*t8274;
  t8373 = t643*t8286;
  t8374 = t8372 + t8373;
  t8399 = t256*t8325;
  t8400 = t643*t8329;
  t8401 = t8399 + t8400;
  t8375 = t5826*t8374;
  t8396 = t8395*t5919;
  t8380 = -1.*t256*t8295;
  t8385 = t643*t8312;
  t8387 = t8380 + t8385;
  t8407 = t643*t8325;
  t8408 = -1.*t256*t8329;
  t8409 = t8407 + t8408;
  t8438 = t1149*t8129;
  t8442 = t230*t8387;
  t8443 = t8438 + t8442;
  t8405 = -1.*t8374*t5934;
  t8406 = -1.*t5919*t8401;
  t8430 = t230*t8378;
  t8431 = t1149*t8053;
  t8432 = t8430 + t8431;
  t8420 = -1.*t1149*t8378;
  t8424 = t230*t8053;
  t8425 = t8420 + t8424;
  t8447 = t1149*t8021;
  t8448 = t230*t8409;
  t8449 = t8447 + t8448;
  t8484 = -4.05159380016e-7*t1622;
  t8485 = -0.2999999999968*t1728;
  t8486 = t8484 + t8485;
  t8490 = -1.199999999968e-6*t1622;
  t8493 = 1.620637520064e-12*t1728;
  t8495 = -1.284e-8 + t8490 + t8493;
  t8497 = -0.299999999992*t1622;
  t8500 = 4.05159380016e-7*t1728;
  t8501 = 5.136e-14 + t8497 + t8500;
  t8511 = t1906*t8486;
  t8512 = 4.e-6*t906*t8495;
  t8513 = t906*t8501;
  t8514 = t8511 + t8512 + t8513;
  t8472 = 1.000000000016*t1622*t906;
  t8473 = 1.6000000000256e-11*t1374*t1728;
  t8474 = t8472 + t8473 + t8020;
  t8487 = -4.e-6*t906*t8486;
  t8496 = t1496*t8495;
  t8502 = 4.e-6*t1374*t8501;
  t8503 = t8487 + t8496 + t8502;
  t8506 = -1.*t906*t8486;
  t8507 = 4.e-6*t1374*t8495;
  t8508 = t827*t8501;
  t8509 = t8506 + t8507 + t8508;
  t8545 = t2980*t8495;
  t8546 = t3088*t8501;
  t8548 = t8545 + t8546;
  t8552 = 1.000000000016*t1622*t3276;
  t8553 = -1.*t3628*t8495;
  t8554 = -1.*t3685*t8501;
  t8555 = 1.000000000016*t8486*t1728;
  t8556 = -1.000000000016*t3196*t1728;
  t8557 = -4.000000000064e-6*t3243*t1728;
  t8561 = t8552 + t8553 + t8554 + t8555 + t8556 + t8557;
  t8469 = -1.000000000016*t1622*t906;
  t8470 = t8469 + t3873;
  t8480 = -4.e-6*t1496*t1622;
  t8481 = -4.e-6*t1374*t1622;
  t8482 = t8480 + t8481 + t3906;
  t8510 = t3411*t8509;
  t8525 = -1.*t3461*t8474;
  t8528 = -1.*t8509*t3782;
  t8603 = t289*t8503;
  t8605 = t352*t8514;
  t8609 = t8603 + t8605;
  t8598 = -1.*t352*t8503;
  t8600 = t289*t8514;
  t8601 = t8598 + t8600;
  t8519 = 4.000000000064e-6*t1622*t906;
  t8520 = 4.000000000064e-6*t1496*t1728;
  t8521 = 4.000000000064e-6*t1374*t1728;
  t8522 = t8519 + t8520 + t8521;
  t8529 = -1.000000000016*t1906*t1622;
  t8530 = t8529 + t8202;
  t8579 = t352*t8470;
  t8580 = t289*t8482;
  t8581 = t8579 + t8580;
  t8584 = t289*t8470;
  t8585 = -1.*t352*t8482;
  t8587 = t8584 + t8585;
  t8573 = -1.6e-11*t1374*t1622;
  t8574 = -1.*t827*t1622;
  t8576 = t8573 + t8574 + t3751;
  t8582 = -1.*t256*t8581;
  t8592 = t643*t8587;
  t8593 = t8582 + t8592;
  t8633 = t643*t8581;
  t8634 = t256*t8587;
  t8635 = t8633 + t8634;
  t8637 = t230*t8576;
  t8639 = -1.*t1149*t8593;
  t8640 = t8637 + t8639;
  t8620 = -1.*t352*t8522;
  t8621 = t289*t8530;
  t8622 = t8620 + t8621;
  t8624 = t289*t8522;
  t8625 = t352*t8530;
  t8626 = t8624 + t8625;
  t8679 = t643*t8601;
  t8680 = -1.*t256*t8609;
  t8681 = t8679 + t8680;
  t8665 = t256*t8601;
  t8666 = t643*t8609;
  t8670 = t8665 + t8666;
  t8688 = t256*t8622;
  t8689 = t643*t8626;
  t8690 = t8688 + t8689;
  t8678 = t5826*t8670;
  t8701 = t643*t8622;
  t8702 = -1.*t256*t8626;
  t8703 = t8701 + t8702;
  t8699 = -1.*t8670*t5934;
  t8700 = -1.*t5919*t8690;
  t8717 = t230*t8681;
  t8718 = t1149*t8509;
  t8720 = t8717 + t8718;
  t8711 = -1.*t1149*t8681;
  t8712 = t230*t8509;
  t8715 = t8711 + t8712;
  t8726 = t1149*t8474;
  t8728 = t230*t8703;
  t8729 = t8726 + t8728;
  t441 = t330 + t436;
  t669 = t330 + t657;
  t8749 = t5323*t643;
  t8750 = -1.*t5154*t1149*t256;
  t8751 = t8749 + t8750;
  t8753 = t643*t5154*t1149;
  t8754 = t5323*t256;
  t8755 = t8753 + t8754;
  t998 = t793 + t902 + t961;
  t1130 = t1090 + t1091;
  t1222 = t1182 + t1206 + t1221;
  t8757 = t289*t8751;
  t8758 = -1.*t8755*t352;
  t8759 = t8757 + t8758;
  t8761 = t289*t8755;
  t8762 = t8751*t352;
  t8763 = t8761 + t8762;
  t1779 = 2.012840000032e-6*t1728;
  t1798 = t1575 + t1699 + t1779;
  t2183 = 0.03874900000062*t1728;
  t2189 = t2148 + t2183;
  t2394 = 0.503210000008*t1728;
  t2399 = t2329 + t2363 + t2394;
  t8766 = -4.e-6*t230*t1374*t5154;
  t8767 = t1496*t8759;
  t8768 = 4.e-6*t8763*t906;
  t8769 = t8766 + t8767 + t8768;
  t8780 = -1.*t230*t827*t5154;
  t8781 = 4.e-6*t1374*t8759;
  t8782 = t8763*t906;
  t8783 = t8780 + t8781 + t8782;
  t8771 = t1906*t8763;
  t8772 = t230*t5154*t906;
  t8777 = -4.e-6*t8759*t906;
  t8778 = t8771 + t8772 + t8777;
  t8813 = 0.15121*t3875;
  t8814 = -1.*t3126*t3383;
  t8815 = -1.*t3411*t3461;
  t8816 = -1.*t3473*t3495;
  t8817 = t8814 + t8815 + t8816;
  t8818 = t8817*t4435;
  t8819 = -0.15121*t3931;
  t8820 = t3495*t2871;
  t8821 = t3461*t4435;
  t8822 = t3383*t2943;
  t8823 = t8820 + t8821 + t8822;
  t8824 = t3411*t8823;
  t8825 = t8813 + t8818 + t8819 + t8824;
  t8550 = -0.03874900000062*t1728;
  t8830 = -1.*t3088*t3196;
  t8831 = -1.*t2980*t3243;
  t8835 = t8830 + t8831;
  t8838 = t2702*t3276;
  t8840 = -1.*t3196*t1728;
  t8841 = -4.e-6*t3243*t1728;
  t8842 = t8838 + t8840 + t8841;
  t8828 = 1.e-6*t3628;
  t8829 = 0.28121*t3685;
  t8836 = -4.e-6*t8835*t1728;
  t8844 = t2980*t8842;
  t8846 = t8835*t1728;
  t8847 = -1.*t3088*t8842;
  t8851 = t8846 + t8847;
  t8852 = 4.e-6*t8851;
  t8853 = t8828 + t8829 + t8550 + t8836 + t8844 + t8852;
  t8856 = -1.*t4796*t4881;
  t8857 = -1.*t4968*t4992;
  t8858 = t8856 + t8857 + t8815;
  t8859 = t8858*t4435;
  t8860 = t4992*t4575;
  t8861 = t4881*t4655;
  t8862 = t8821 + t8860 + t8861;
  t8863 = t3411*t8862;
  t8864 = t8859 + t8863;
  t8869 = -1.*t5738*t5775;
  t8870 = -1.*t5826*t5919;
  t8871 = t8869 + t8870 + t8815;
  t8872 = t8871*t5240;
  t8873 = t5919*t5240;
  t8874 = t5775*t4691;
  t8875 = t8821 + t8873 + t8874;
  t8876 = t5826*t8875;
  t8877 = t8872 + t8876;
  t8880 = t5154*t5934;
  t8881 = t5323*t6849;
  t8882 = t8880 + t8881;
  t8885 = t5323*t5934;
  t8886 = -1.*t5154*t6849;
  t8887 = t8885 + t8886;
  t8890 = -1.*t6630*t6648;
  t8891 = -1.*t6686*t6694;
  t8892 = t8870 + t8890 + t8891;
  t8893 = t8892*t4729;
  t8894 = t6694*t4729;
  t8895 = t6648*t5470;
  t8898 = t8873 + t8894 + t8895;
  t8899 = t6686*t8898;
  t8900 = t8893 + t8899;
  t8937 = -1.*t7315*t5919;
  t8939 = -1.*t5826*t7368;
  t8950 = t5919*t7016;
  t8951 = t7368*t5240;
  t9002 = -1.*t5826*t5775;
  t9004 = -1.*t5738*t5919;
  t9010 = t5775*t5240;
  t9012 = t5919*t4691;
  t7950 = -1.*t1149*t3782;
  t7951 = -1.*t230*t6067;
  t7952 = t7950 + t7951;
  t7911 = -1.*t3411*t1149;
  t7912 = -1.*t230*t5738;
  t7914 = t7911 + t7912;
  t9084 = -1.*t3411*t8053;
  t9087 = -1.*t8129*t3461;
  t9098 = t8053*t4435;
  t9102 = t3461*t8217;
  t8457 = t230*t8021;
  t8458 = -1.*t1149*t8409;
  t8459 = t8457 + t8458;
  t9126 = -1.*t5826*t8374;
  t9129 = -1.*t8395*t5919;
  t8434 = t230*t8129;
  t8435 = -1.*t1149*t8387;
  t8436 = t8434 + t8435;
  t8218 = t1149*t8217;
  t8258 = t230*t8257;
  t8259 = t8218 + t8258;
  t9135 = t8374*t5240;
  t9138 = t5919*t8356;
  t9194 = -1.*t2980*t8495;
  t9196 = -1.*t3088*t8501;
  t9197 = t9194 + t9196;
  t9199 = t2702*t8486;
  t9200 = -1.*t1622*t3196;
  t9201 = -4.e-6*t1622*t3243;
  t9202 = -1.000000000016*t3276*t1728;
  t9203 = -4.e-6*t8495*t1728;
  t9204 = -1.*t8501*t1728;
  t9205 = t9199 + t9200 + t9201 + t9202 + t9203 + t9204;
  t9173 = -1.*t3411*t8509;
  t9181 = t8509*t4435;
  t9184 = t3461*t8576;
  t8735 = t230*t8474;
  t8736 = -1.*t1149*t8703;
  t8737 = t8735 + t8736;
  t9228 = -1.*t5826*t8670;
  t8577 = t1149*t8576;
  t8594 = t230*t8593;
  t8595 = t8577 + t8594;
  t9233 = t8670*t5240;
  t9236 = t5919*t8635;
  t9268 = t643*t5154;
  t9269 = t5323*t1149*t256;
  t9270 = t9268 + t9269;
  t9272 = -1.*t5323*t643*t1149;
  t9273 = t5154*t256;
  t9274 = t9272 + t9273;
  t9287 = t5154*t5826;
  t9288 = t5323*t6630;
  t9289 = t9287 + t9288;
  t9292 = t5323*t5826;
  t9293 = -1.*t5154*t6630;
  t9294 = t9292 + t9293;
  t9276 = t289*t9270;
  t9277 = -1.*t9274*t352;
  t9278 = t9276 + t9277;
  t9280 = t289*t9274;
  t9281 = t9270*t352;
  t9282 = t9280 + t9281;
  t9305 = 4.e-6*t5323*t230*t1374;
  t9306 = t1496*t9278;
  t9307 = 4.e-6*t9282*t906;
  t9308 = t9305 + t9306 + t9307;
  t9315 = t5323*t230*t827;
  t9317 = 4.e-6*t1374*t9278;
  t9318 = t9282*t906;
  t9319 = t9315 + t9317 + t9318;
  t9310 = t1906*t9282;
  t9311 = -1.*t5323*t230*t906;
  t9312 = -4.e-6*t9278*t906;
  t9313 = t9310 + t9311 + t9312;
  t9337 = -0.15121*t3473;
  t9338 = 0.15121*t3126;
  t9339 = -1.*t3495*t2871;
  t9340 = -1.*t3461*t4435;
  t9341 = -1.*t3383*t2943;
  t9342 = t9339 + t9340 + t9341;
  t9343 = t3782*t9342;
  t9344 = t3383*t3875;
  t9345 = t3495*t3931;
  t9346 = t3461*t3782;
  t9347 = t9344 + t9345 + t9346;
  t9348 = t4435*t9347;
  t9349 = t9337 + t9338 + t9343 + t9348;
  t9355 = -1.*t2702*t3276;
  t9356 = t3196*t1728;
  t9357 = 4.e-6*t3243*t1728;
  t9358 = t9355 + t9356 + t9357;
  t9360 = t3685*t3196;
  t9361 = t3628*t3243;
  t9362 = t9360 + t9361 + t9202;
  t9353 = 1.e-6*t2980;
  t9354 = 0.28121*t3088;
  t9359 = t3628*t9358;
  t9363 = -4.e-6*t1728*t9362;
  t9364 = -1.*t3685*t9358;
  t9365 = t1728*t9362;
  t9366 = t9364 + t9365;
  t9367 = 4.e-6*t9366;
  t9368 = t9353 + t9354 + t9359 + t9363 + t9367;
  t9371 = -1.*t4992*t4575;
  t9372 = -1.*t4881*t4655;
  t9373 = t9340 + t9371 + t9372;
  t9374 = t3782*t9373;
  t9375 = t4881*t5017;
  t9376 = t4992*t5072;
  t9377 = t9346 + t9375 + t9376;
  t9378 = t4435*t9377;
  t9379 = t9374 + t9378;
  t9382 = -1.*t5919*t5240;
  t9383 = -1.*t5775*t4691;
  t9384 = t9340 + t9382 + t9383;
  t9385 = t5934*t9384;
  t9386 = t5775*t6067;
  t9387 = t5919*t5934;
  t9388 = t9346 + t9386 + t9387;
  t9389 = t5240*t9388;
  t9390 = t9385 + t9389;
  t9393 = -1.*t6694*t4729;
  t9394 = -1.*t6648*t5470;
  t9395 = t9382 + t9393 + t9394;
  t9396 = t6741*t9395;
  t9397 = t6694*t6741;
  t9398 = t6648*t6849;
  t9399 = t9387 + t9397 + t9398;
  t9400 = t4729*t9399;
  t9401 = t9396 + t9400;
  t9430 = -1.*t5919*t7016;
  t9431 = -1.*t7368*t5240;
  t9436 = t5919*t7286;
  t9439 = t7368*t5934;
  t9475 = -1.*t5775*t5240;
  t9477 = -1.*t5919*t4691;
  t9481 = t5919*t6067;
  t9483 = t5775*t5934;
  t9542 = -1.*t8053*t4435;
  t9545 = -1.*t3461*t8217;
  t9551 = t3461*t8021;
  t9554 = t8053*t3782;
  t9578 = -1.*t8374*t5240;
  t9581 = -1.*t5919*t8356;
  t9587 = t8374*t5934;
  t9588 = t5919*t8401;
  t9633 = -1.000000000016*t1622*t3276;
  t9634 = t3628*t8495;
  t9635 = t3685*t8501;
  t9636 = -1.000000000016*t8486*t1728;
  t9637 = 1.000000000016*t3196*t1728;
  t9638 = 4.000000000064e-6*t3243*t1728;
  t9639 = t9633 + t9634 + t9635 + t9636 + t9637 + t9638;
  t9642 = -1.*t2702*t8486;
  t9643 = t1622*t3196;
  t9644 = 4.e-6*t1622*t3243;
  t9645 = 4.e-6*t8495*t1728;
  t9646 = t8501*t1728;
  t9647 = t9642 + t9643 + t9644 + t3987 + t9645 + t9646;
  t9616 = -1.*t8509*t4435;
  t9619 = -1.*t3461*t8576;
  t9624 = t3461*t8474;
  t9626 = t8509*t3782;
  t9675 = -1.*t8670*t5240;
  t9678 = -1.*t5919*t8635;
  t9682 = t8670*t5934;
  t9683 = t5919*t8690;
  p_output1[0]=t1063*t1130 + t1149*t1222 + t1569*t1798 + t2037*t2189 + t2309*t2399 - 0.03875*(t1728*t2037 + t1622*t2309 + 4.e-6*t1569*t2443) + 0.14871*(4.e-6*t1728*t2037 + 4.e-6*t2309*t2443 + t1569*t2472) + 0.80321*(-4.e-6*t1569*t1728 - 1.*t1728*t2309 + t2037*t2702) - 1.*t230*t256*t441 + t230*t643*t669 + t791*t998 + var1[0] + t4729*var2[0] + t5617*var2[1] + t5498*var2[2] + t6873*var2[3] + ((-1.*t5154*t5240 - 1.*t5323*t5470)*var2[1] + t5617*var2[2])*var2[3] + t6355*var2[4] + (t5470*var2[0] - 1.*t5154*t7895*var2[1] + t5323*t7895*var2[2] + (t6730*t6849 + t6630*t6869 + t6741*(t6648*t6686 + t6630*t6694 + t6648*t7914 + t6630*t7930) + t6686*(-1.*t6648*t6741 - 1.*t6694*t6849 - 1.*t6849*t7930 - 1.*t6648*t7952))*var2[3])*var2[4] + t5146*var2[5] + (t230*t7562*var2[0] + (t4691*t5323 + t1149*t5154*t7562)*var2[1] + (t4691*t5154 - 1.*t1149*t5323*t7562)*var2[2] + (t230*t6869*t7587 + t6741*(-1.*t1149*t6648*t7587 + t230*t6694*t7587 + t7591 - 1.*t1149*t6630*t7598 + t230*t6686*t7598 + t7603) + t230*t6730*t7622 + t6686*(-1.*t230*t6741*t7598 + t1149*t6849*t7598 + t7620 + t1149*t6648*t7622 - 1.*t230*t6694*t7622 + t7642))*var2[3] + (t5929*t6067 + t5738*t6313 + t5934*(t5775*t7587 + t7591 + t5738*t7598 + t7603) + t5826*(-1.*t6067*t7598 + t7620 - 1.*t5775*t7622 + t7642))*var2[4])*var2[5] + t3956*var2[6] + (t230*t6976*var2[0] + (t1149*t5154*t6976 + t5323*t7016)*var2[1] + (-1.*t1149*t5323*t6976 + t5154*t7016)*var2[2] + (t230*t6869*t7302 + t6741*(-1.*t1149*t6648*t7302 + t230*t6694*t7302 + t7323 + t7369 - 1.*t1149*t6630*t7375 + t230*t6686*t7375) + t230*t6730*t7427 + t6686*(-1.*t230*t6741*t7375 + t1149*t6849*t7375 + t7393 + t1149*t6648*t7427 - 1.*t230*t6694*t7427 + t7430))*var2[3] + (t5929*t7286 + t6313*t7315 + t5934*(t5775*t7302 + t7323 + t7369 + t5738*t7375) + t5826*(-1.*t6067*t7375 + t7393 - 1.*t5775*t7427 + t7430))*var2[4] + (t3782*(t4881*t4968 + t4968*t7112 + t4992*t7145 + t4796*t7171) + t3411*(-1.*t4881*t5072 - 1.*t5072*t7112 - 1.*t5017*t7171 - 1.*t4992*t7245))*var2[5])*var2[6] + t4189*var2[7] + (t8259*var2[0] + (t5323*t8356 - 1.*t5154*t8361)*var2[1] + (t5154*t8356 + t5323*t8361)*var2[2] + (t6869*t8443 + t6741*(t8375 + t8396 + t6630*t8425 + t6686*t8432 + t6648*t8436 + t6694*t8443) + t6730*t8449 + t6686*(t8405 + t8406 - 1.*t6849*t8425 - 1.*t6741*t8432 - 1.*t6694*t8449 - 1.*t6648*t8459))*var2[3] + (t6313*t8395 + t5934*(t8057 + t8143 + t8375 + t5738*t8378 + t5775*t8387 + t8396) + t5929*t8401 + t5826*(t8189 + t8197 - 1.*t6067*t8378 + t8405 + t8406 - 1.*t5775*t8409))*var2[4] + (t5002*t8021 + t5142*t8129 + t3782*(t8057 + t8143 + t4968*t8274 + t4796*t8286 + t4881*t8295 + t4992*t8312) + t3411*(t8189 + t8197 - 1.*t5072*t8274 - 1.*t5017*t8286 - 1.*t4992*t8325 - 1.*t4881*t8329))*var2[5] + (0.15121*t8004 + t3519*t8021 - 0.15121*t8030 + t3953*t8129 + t3782*(t3383*t8040 + t8057 + t3473*t8089 + t3126*t8111 + t8143 + t3495*t8146) + t3411*(-1.*t3931*t8089 - 1.*t3875*t8111 - 1.*t3495*t8187 + t8189 + t8197 - 1.*t3383*t8203))*var2[6])*var2[7] - 4.05160619990483e-7*var2[8] + (t8595*var2[0] + (t5323*t8635 - 1.*t5154*t8640)*var2[1] + (t5154*t8635 + t5323*t8640)*var2[2] + (t6741*(t8678 + t6630*t8715 + t6686*t8720) + t6730*t8729 + t6686*(t8699 + t8700 - 1.*t6849*t8715 - 1.*t6741*t8720 - 1.*t6694*t8729 - 1.*t6648*t8737))*var2[3] + (t5934*(t8510 + t8678 + t5738*t8681) + t5929*t8690 + t5826*(t8525 + t8528 - 1.*t6067*t8681 + t8699 + t8700 - 1.*t5775*t8703))*var2[4] + (t5002*t8474 + t3782*(t8510 + t4968*t8601 + t4796*t8609) + t3411*(t8525 + t8528 - 1.*t5072*t8601 - 1.*t5017*t8609 - 1.*t4992*t8622 - 1.*t4881*t8626))*var2[5] + (0.15121*t8470 + t3519*t8474 - 0.15121*t8482 + t3782*(t3473*t8503 + t8510 + t3126*t8514) + t3411*(-1.*t3931*t8503 - 1.*t3875*t8514 - 1.*t3495*t8522 + t8525 + t8528 - 1.*t3383*t8530))*var2[6] + (-0.281210000004*t1622 + 4.000000000064e-6*t1728*t3978 + t3628*t8548 + t8550 + t2980*t8561 + 4.e-6*(-1.000000000016*t1728*t3978 - 1.*t3685*t8548 - 1.*t3088*t8561))*var2[7])*var2[8] + t4729*var3[0] + t5617*var3[1] + t5498*var3[2] + t6873*var3[3] + t6355*var3[4] + t5146*var3[5] + t3956*var3[6] + t4189*var3[7] - 4.05160619990483e-7*var3[8] - 1.*var4[0];
  p_output1[1]=-1.*t1222*t230*t5154 + t441*t8751 + t669*t8755 + t1130*t8763 + t1798*t8769 + t2189*t8778 + t2399*t8783 - 0.03875*(4.e-6*t2443*t8769 + t1728*t8778 + t1622*t8783) + 0.80321*(-4.e-6*t1728*t8769 + t2702*t8778 - 1.*t1728*t8783) + 0.14871*(t2472*t8769 + 4.e-6*t1728*t8778 + 4.e-6*t2443*t8783) + t8759*t998 + var1[1] + t6741*var2[0] + t8887*var2[1] + t8882*var2[2] + t8900*var2[3] + ((-1.*t5154*t5934 - 1.*t5323*t6849)*var2[1] + t8887*var2[2])*var2[3] + t8877*var2[4] + (t6849*var2[0] - 1.*t5154*t7952*var2[1] + t5323*t7952*var2[2] + (t6686*(t4729*t6648 + t5470*t6694 + t6648*t7895 + t5470*t7930) + t4729*(-1.*t6648*t6686 - 1.*t6630*t6694 - 1.*t6648*t7914 - 1.*t6630*t7930) + t5470*t8892 + t6630*t8898)*var2[3])*var2[4] + t8864*var2[5] + (t230*t7622*var2[0] + (t5323*t6067 + t1149*t5154*t7622)*var2[1] + (t5154*t6067 - 1.*t1149*t5323*t7622)*var2[2] + (t230*t7562*t8892 + t230*t7587*t8898 + t4729*(t1149*t6648*t7587 - 1.*t230*t6694*t7587 + t1149*t6630*t7598 - 1.*t230*t6686*t7598 + t9002 + t9004) + t6686*(-1.*t1149*t6648*t7562 + t230*t6694*t7562 + t230*t4729*t7598 - 1.*t1149*t5470*t7598 + t9010 + t9012))*var2[3] + (t4691*t8871 + t5738*t8875 + t5240*(-1.*t5775*t7587 - 1.*t5738*t7598 + t9002 + t9004) + t5826*(t5775*t7562 + t4691*t7598 + t9010 + t9012))*var2[4])*var2[5] + t8825*var2[6] + (t230*t7427*var2[0] + (t5323*t7286 + t1149*t5154*t7427)*var2[1] + (t5154*t7286 - 1.*t1149*t5323*t7427)*var2[2] + (t230*t6976*t8892 + t230*t7302*t8898 + t4729*(t1149*t6648*t7302 - 1.*t230*t6694*t7302 + t1149*t6630*t7375 - 1.*t230*t6686*t7375 + t8937 + t8939) + t6686*(-1.*t1149*t6648*t6976 + t230*t6694*t6976 + t230*t4729*t7375 - 1.*t1149*t5470*t7375 + t8950 + t8951))*var2[3] + (t7016*t8871 + t7315*t8875 + t5240*(-1.*t5775*t7302 - 1.*t5738*t7375 + t8937 + t8939) + t5826*(t5775*t6976 + t4691*t7375 + t8950 + t8951))*var2[4] + (t3411*(t4575*t4881 + t4992*t6919 + t4575*t7112 + t4655*t7171) + t4435*(-1.*t4881*t4968 - 1.*t4968*t7112 - 1.*t4992*t7145 - 1.*t4796*t7171))*var2[5])*var2[6] + t8853*var2[7] + (t8449*var2[0] + (t5323*t8401 - 1.*t5154*t8459)*var2[1] + (t5154*t8401 + t5323*t8459)*var2[2] + (t8259*t8892 + t8443*t8898 + t4729*(-1.*t6630*t8425 - 1.*t6686*t8432 - 1.*t6648*t8436 - 1.*t6694*t8443 + t9126 + t9129) + t6686*(t6694*t8259 + t6648*t8361 + t5470*t8425 + t4729*t8432 + t9135 + t9138))*var2[3] + (t8356*t8871 + t8395*t8875 + t5240*(-1.*t5738*t8378 - 1.*t5775*t8387 + t9084 + t9087 + t9126 + t9129) + t5826*(t5775*t8257 + t4691*t8378 + t9098 + t9102 + t9135 + t9138))*var2[4] + (t8217*t8858 + t8129*t8862 + t4435*(-1.*t4968*t8274 - 1.*t4796*t8286 - 1.*t4881*t8295 - 1.*t4992*t8312 + t9084 + t9087) + t3411*(t4881*t8230 + t4992*t8245 + t4575*t8274 + t4655*t8286 + t9098 + t9102))*var2[5] + (-0.15121*t8187 + 0.15121*t8203 + t8217*t8817 + t8129*t8823 + t4435*(-1.*t3383*t8040 - 1.*t3473*t8089 - 1.*t3126*t8111 - 1.*t3495*t8146 + t9084 + t9087) + t3411*(t3383*t8004 + t3495*t8030 + t2871*t8089 + t2943*t8111 + t9098 + t9102))*var2[6])*var2[7] + 0.300000000004851*var2[8] + (t8729*var2[0] + (t5323*t8690 - 1.*t5154*t8737)*var2[1] + (t5154*t8690 + t5323*t8737)*var2[2] + (t8595*t8892 + t4729*(-1.*t6630*t8715 - 1.*t6686*t8720 + t9228) + t6686*(t6694*t8595 + t6648*t8640 + t5470*t8715 + t4729*t8720 + t9233 + t9236))*var2[3] + (t8635*t8871 + t5240*(-1.*t5738*t8681 + t9173 + t9228) + t5826*(t5775*t8593 + t4691*t8681 + t9181 + t9184 + t9233 + t9236))*var2[4] + (t8576*t8858 + t4435*(-1.*t4968*t8601 - 1.*t4796*t8609 + t9173) + t3411*(t4881*t8581 + t4992*t8587 + t4575*t8601 + t4655*t8609 + t9181 + t9184))*var2[5] + (-0.15121*t8522 + 0.15121*t8530 + t8576*t8817 + t4435*(-1.*t3473*t8503 - 1.*t3126*t8514 + t9173) + t3411*(t3383*t8470 + t3495*t8482 + t2871*t8503 + t2943*t8514 + t9181 + t9184))*var2[6] + (-0.03874900000062*t1622 + 0.281210000008499*t1728 - 4.e-6*t1622*t8835 - 4.e-6*t1728*t9197 + t2980*t9205 + 4.e-6*(t1622*t8835 + t1728*t9197 - 1.*t3088*t9205))*var2[7])*var2[8] + t6741*var3[0] + t8887*var3[1] + t8882*var3[2] + t8900*var3[3] + t8877*var3[4] + t8864*var3[5] + t8825*var3[6] + t8853*var3[7] + 0.300000000004851*var3[8] - 1.*var4[1];
  p_output1[2]=t1222*t230*t5323 + t441*t9270 + t669*t9274 + t1130*t9282 + t1798*t9308 + t2189*t9313 + t2399*t9319 - 0.03875*(4.e-6*t2443*t9308 + t1728*t9313 + t1622*t9319) + 0.80321*(-4.e-6*t1728*t9308 + t2702*t9313 - 1.*t1728*t9319) + 0.14871*(t2472*t9308 + 4.e-6*t1728*t9313 + 4.e-6*t2443*t9319) + t9278*t998 + var1[2] + t6686*var2[0] + t9294*var2[1] + t9289*var2[2] + t9401*var2[3] + ((-1.*t5154*t5826 - 1.*t5323*t6630)*var2[1] + t9294*var2[2])*var2[3] + t9390*var2[4] + (t6630*var2[0] - 1.*t5154*t7914*var2[1] + t5323*t7914*var2[2] + (t6741*(-1.*t4729*t6648 - 1.*t5470*t6694 - 1.*t6648*t7895 - 1.*t5470*t7930) + t4729*(t6648*t6741 + t6694*t6849 + t6849*t7930 + t6648*t7952) + t6849*t9395 + t5470*t9399)*var2[3])*var2[4] + t9379*var2[5] + (t230*t7587*var2[0] + (t5323*t5738 + t1149*t5154*t7587)*var2[1] + (t5154*t5738 - 1.*t1149*t5323*t7587)*var2[2] + (t230*t7622*t9395 + t230*t7562*t9399 + t6741*(t1149*t6648*t7562 - 1.*t230*t6694*t7562 - 1.*t230*t4729*t7598 + t1149*t5470*t7598 + t9475 + t9477) + t4729*(t230*t6741*t7598 - 1.*t1149*t6849*t7598 - 1.*t1149*t6648*t7622 + t230*t6694*t7622 + t9481 + t9483))*var2[3] + (t6067*t9384 + t4691*t9388 + t5934*(-1.*t5775*t7562 - 1.*t4691*t7598 + t9475 + t9477) + t5240*(t6067*t7598 + t5775*t7622 + t9481 + t9483))*var2[4])*var2[5] + t9349*var2[6] + (t230*t7302*var2[0] + (t1149*t5154*t7302 + t5323*t7315)*var2[1] + (-1.*t1149*t5323*t7302 + t5154*t7315)*var2[2] + (t230*t7427*t9395 + t230*t6976*t9399 + t6741*(t1149*t6648*t6976 - 1.*t230*t6694*t6976 - 1.*t230*t4729*t7375 + t1149*t5470*t7375 + t9430 + t9431) + t4729*(t230*t6741*t7375 - 1.*t1149*t6849*t7375 - 1.*t1149*t6648*t7427 + t230*t6694*t7427 + t9436 + t9439))*var2[3] + (t7286*t9384 + t7016*t9388 + t5934*(-1.*t5775*t6976 - 1.*t4691*t7375 + t9430 + t9431) + t5240*(t6067*t7375 + t5775*t7427 + t9436 + t9439))*var2[4] + (t3782*(-1.*t4575*t4881 - 1.*t4992*t6919 - 1.*t4575*t7112 - 1.*t4655*t7171) + t4435*(t4881*t5072 + t5072*t7112 + t5017*t7171 + t4992*t7245))*var2[5])*var2[6] + t9368*var2[7] + (t8443*var2[0] + (t5323*t8395 - 1.*t5154*t8436)*var2[1] + (t5154*t8395 + t5323*t8436)*var2[2] + (t8449*t9395 + t8259*t9399 + t6741*(-1.*t6694*t8259 - 1.*t6648*t8361 - 1.*t5470*t8425 - 1.*t4729*t8432 + t9578 + t9581) + t4729*(t6849*t8425 + t6741*t8432 + t6694*t8449 + t6648*t8459 + t9587 + t9588))*var2[3] + (t8401*t9384 + t8356*t9388 + t5934*(-1.*t5775*t8257 - 1.*t4691*t8378 + t9542 + t9545 + t9578 + t9581) + t5240*(t6067*t8378 + t5775*t8409 + t9551 + t9554 + t9587 + t9588))*var2[4] + (t8021*t9373 + t8217*t9377 + t3782*(-1.*t4881*t8230 - 1.*t4992*t8245 - 1.*t4575*t8274 - 1.*t4655*t8286 + t9542 + t9545) + t4435*(t5072*t8274 + t5017*t8286 + t4992*t8325 + t4881*t8329 + t9551 + t9554))*var2[5] + (0.15121*t8040 - 0.15121*t8146 + t8021*t9342 + t8217*t9347 + t3782*(-1.*t3383*t8004 - 1.*t3495*t8030 - 1.*t2871*t8089 - 1.*t2943*t8111 + t9542 + t9545) + t4435*(t3931*t8089 + t3875*t8111 + t3495*t8187 + t3383*t8203 + t9551 + t9554))*var2[6])*var2[7] - 1.284e-8*var2[8] + ((t8729*t9395 + t8595*t9399 + t6741*(-1.*t6694*t8595 - 1.*t6648*t8640 - 1.*t5470*t8715 - 1.*t4729*t8720 + t9675 + t9678) + t4729*(t6849*t8715 + t6741*t8720 + t6694*t8729 + t6648*t8737 + t9682 + t9683))*var2[3] + (t8690*t9384 + t8635*t9388 + t5934*(-1.*t5775*t8593 - 1.*t4691*t8681 + t9616 + t9619 + t9675 + t9678) + t5240*(t6067*t8681 + t5775*t8703 + t9624 + t9626 + t9682 + t9683))*var2[4] + (t8474*t9373 + t8576*t9377 + t3782*(-1.*t4881*t8581 - 1.*t4992*t8587 - 1.*t4575*t8601 - 1.*t4655*t8609 + t9616 + t9619) + t4435*(t5072*t8601 + t5017*t8609 + t4992*t8622 + t4881*t8626 + t9624 + t9626))*var2[5] + (t8474*t9342 + t8576*t9347 + t3782*(-1.*t3383*t8470 - 1.*t3495*t8482 - 1.*t2871*t8503 - 1.*t2943*t8514 + t9616 + t9619) + t4435*(t3931*t8503 + t3875*t8514 + t3495*t8522 + t3383*t8530 + t9624 + t9626))*var2[6] + (4.000000000064e-6*t1728*t9358 - 4.e-6*t1622*t9362 - 4.e-6*t1728*t9639 + t3628*t9647 + 4.e-6*(-1.000000000016*t1728*t9358 + t1622*t9362 + t1728*t9639 - 1.*t3685*t9647))*var2[7])*var2[8] + t6686*var3[0] + t9294*var3[1] + t9289*var3[2] + t9401*var3[3] + t9390*var3[4] + t9379*var3[5] + t9349*var3[6] + t9368*var3[7] - 1.284e-8*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FlFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void ddh_FlFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
