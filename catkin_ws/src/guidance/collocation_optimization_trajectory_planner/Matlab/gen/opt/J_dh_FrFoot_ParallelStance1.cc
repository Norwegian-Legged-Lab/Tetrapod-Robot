/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:11:24 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t207;
  double t219;
  double t233;
  double t240;
  double t74;
  double t313;
  double t234;
  double t278;
  double t285;
  double t391;
  double t399;
  double t328;
  double t337;
  double t338;
  double t348;
  double t361;
  double t414;
  double t425;
  double t433;
  double t486;
  double t92;
  double t95;
  double t143;
  double t308;
  double t377;
  double t434;
  double t450;
  double t58;
  double t491;
  double t536;
  double t541;
  double t547;
  double t561;
  double t563;
  double t31;
  double t615;
  double t624;
  double t637;
  double t453;
  double t569;
  double t580;
  double t651;
  double t680;
  double t595;
  double t659;
  double t668;
  double t22;
  double t694;
  double t703;
  double t706;
  double t709;
  double t720;
  double t726;
  double t741;
  double t761;
  double t764;
  double t767;
  double t791;
  double t807;
  double t908;
  double t953;
  double t1005;
  double t1121;
  double t1170;
  double t1200;
  double t1205;
  double t1274;
  double t1318;
  double t1422;
  double t1482;
  double t1570;
  double t1586;
  double t1634;
  double t1694;
  double t1709;
  double t1849;
  double t1892;
  double t1913;
  double t1956;
  double t1995;
  double t1996;
  double t2058;
  double t2077;
  double t2509;
  double t2539;
  double t2559;
  double t2595;
  double t2625;
  double t2630;
  double t2635;
  double t2647;
  double t2656;
  double t2659;
  double t2893;
  double t2897;
  double t2930;
  double t2954;
  double t2969;
  double t2975;
  double t2979;
  double t2985;
  double t2997;
  double t2998;
  double t3006;
  double t3016;
  double t3025;
  double t3030;
  double t3040;
  double t3047;
  double t3050;
  double t3114;
  double t3121;
  double t3185;
  double t3199;
  double t3215;
  double t3232;
  double t3240;
  double t3245;
  double t3246;
  double t3258;
  double t3272;
  double t3284;
  double t3290;
  double t3304;
  double t3309;
  double t3311;
  double t3316;
  double t2521;
  double t2614;
  double t2615;
  double t2622;
  double t2641;
  double t2665;
  double t2677;
  double t2700;
  double t2719;
  double t2722;
  double t2733;
  double t2739;
  double t2753;
  double t2757;
  double t2758;
  double t2771;
  double t2808;
  double t2853;
  double t2879;
  double t2982;
  double t3008;
  double t3095;
  double t3096;
  double t3165;
  double t3280;
  double t3317;
  double t3321;
  double t3337;
  double t3354;
  double t3364;
  double t3387;
  double t3393;
  double t3395;
  double t3397;
  double t3489;
  double t3508;
  double t1202;
  double t1584;
  double t1773;
  double t1797;
  double t1961;
  double t2178;
  double t2212;
  double t2235;
  double t2254;
  double t2261;
  double t2277;
  double t2314;
  double t2344;
  double t3478;
  double t3480;
  double t3482;
  double t3468;
  double t3471;
  double t3476;
  double t3555;
  double t3645;
  double t3657;
  double t3110;
  double t3407;
  double t3436;
  double t3661;
  double t1825;
  double t2499;
  double t2501;
  double t3536;
  double t3704;
  double t3729;
  double t3734;
  double t3767;
  double t3881;
  double t3888;
  double t3896;
  double t3933;
  double t3806;
  double t3807;
  double t3815;
  double t3676;
  double t3681;
  double t3682;
  double t3735;
  double t4032;
  double t4037;
  double t4047;
  double t4148;
  double t4057;
  double t3821;
  double t4056;
  double t4062;
  double t4067;
  double t4082;
  double t4099;
  double t4158;
  double t4161;
  double t4162;
  double t4167;
  double t4174;
  double t3740;
  double t3756;
  double t3757;
  double t3822;
  double t3824;
  double t3826;
  double t4340;
  double t4358;
  double t4365;
  double t4370;
  double t4391;
  double t4398;
  double t4526;
  double t4527;
  double t4533;
  double t4534;
  double t4536;
  double t4537;
  double t4540;
  double t4550;
  double t4551;
  double t4558;
  double t4446;
  double t4450;
  double t4452;
  double t4416;
  double t4328;
  double t4329;
  double t4333;
  double t4149;
  double t4151;
  double t4152;
  double t4679;
  double t4696;
  double t4699;
  double t4638;
  double t4643;
  double t4645;
  double t4652;
  double t4657;
  double t4658;
  double t4618;
  double t4628;
  double t4189;
  double t4195;
  double t4225;
  double t4637;
  double t4659;
  double t4660;
  double t4666;
  double t4708;
  double t4721;
  double t4723;
  double t4724;
  double t4727;
  double t4843;
  double t4846;
  double t4853;
  double t4856;
  double t4864;
  double t4868;
  double t4869;
  double t4870;
  double t4916;
  double t4917;
  double t4922;
  double t4923;
  double t4925;
  double t4931;
  double t4934;
  double t4935;
  double t4941;
  double t4942;
  double t4946;
  double t4947;
  double t5041;
  double t5043;
  double t5045;
  double t5055;
  double t5056;
  double t5058;
  double t4932;
  double t4948;
  double t4956;
  double t4961;
  double t4962;
  double t4963;
  double t4982;
  double t4984;
  double t4995;
  double t4971;
  double t4979;
  double t5133;
  double t5009;
  double t5102;
  double t5234;
  double t5237;
  double t5238;
  double t5239;
  double t5244;
  double t5246;
  double t5248;
  double t5249;
  double t4891;
  double t4894;
  double t4900;
  double t4860;
  double t4872;
  double t4874;
  double t5070;
  double t5078;
  double t5082;
  double t5052;
  double t5063;
  double t5064;
  double t5101;
  double t5364;
  double t5365;
  double t5366;
  double t4981;
  double t5357;
  double t5358;
  double t5359;
  double t5394;
  double t5403;
  double t5404;
  double t5415;
  double t5416;
  double t5426;
  double t5306;
  double t5307;
  double t5329;
  double t5271;
  double t5273;
  double t5279;
  double t5267;
  double t5268;
  double t5294;
  double t5335;
  double t5343;
  double t5498;
  double t5503;
  double t5504;
  double t5506;
  double t5507;
  double t5508;
  double t5462;
  double t5467;
  double t5468;
  double t5377;
  double t5379;
  double t5382;
  double t5376;
  double t5443;
  double t5530;
  double t5532;
  double t5533;
  double t5459;
  double t5484;
  double t5523;
  double t5524;
  double t5526;
  double t5553;
  double t5554;
  double t5555;
  double t5557;
  double t5558;
  double t5566;
  double t5619;
  double t5625;
  double t5626;
  double t5631;
  double t5632;
  double t5633;
  double t5641;
  double t5642;
  double t5627;
  double t5634;
  double t5645;
  double t5646;
  double t5650;
  double t5653;
  double t5654;
  double t5655;
  double t5676;
  double t5677;
  double t5685;
  double t5686;
  double t5691;
  double t5699;
  double t5702;
  double t5704;
  double t5682;
  double t5694;
  double t5709;
  double t5711;
  double t5718;
  double t5720;
  double t5724;
  double t5726;
  double t5110;
  double t5111;
  double t5116;
  double t5774;
  double t5779;
  double t5787;
  double t5789;
  double t5648;
  double t5656;
  double t5663;
  double t5665;
  double t5669;
  double t5671;
  double t5755;
  double t5756;
  double t5762;
  double t5767;
  double t5770;
  double t5216;
  double t5220;
  double t5221;
  double t5223;
  double t5848;
  double t5849;
  double t5855;
  double t5811;
  double t5887;
  double t5889;
  double t5897;
  double t5899;
  double t5902;
  double t5905;
  double t5906;
  double t5920;
  double t5922;
  double t5925;
  double t5913;
  double t5917;
  double t5918;
  double t5847;
  double t5851;
  double t5857;
  double t5858;
  double t5860;
  double t5864;
  double t5865;
  double t5866;
  double t5985;
  double t5986;
  double t5989;
  double t5976;
  double t5980;
  double t5982;
  double t5967;
  double t5968;
  double t5971;
  double t5973;
  double t5984;
  double t5993;
  double t6000;
  double t6014;
  double t6019;
  double t6022;
  double t6028;
  double t6029;
  double t6031;
  double t5742;
  double t5750;
  double t5751;
  double t5714;
  double t5727;
  double t5734;
  double t5791;
  double t6056;
  double t6071;
  double t6072;
  double t6077;
  double t6083;
  double t6086;
  double t6095;
  double t6096;
  double t6101;
  double t6073;
  double t6110;
  double t6111;
  double t6114;
  double t6107;
  double t6109;
  double t6122;
  double t6124;
  double t6125;
  double t6130;
  double t6131;
  double t6133;
  double t6147;
  double t6149;
  double t6153;
  double t861;
  double t862;
  double t4815;
  double t4820;
  double t4822;
  double t5132;
  double t5139;
  double t5143;
  double t5144;
  double t6253;
  double t6254;
  double t6255;
  double t6256;
  double t3783;
  double t3787;
  double t3788;
  double t6200;
  double t6202;
  double t6204;
  double t3539;
  double t3546;
  double t3547;
  double t1033;
  double t6356;
  double t6400;
  double t6524;
  double t6526;
  double t6366;
  double t6378;
  double t6382;
  double t6599;
  double t6612;
  double t6406;
  double t6414;
  double t6416;
  double t6557;
  double t6569;
  double t6580;
  double t6652;
  double t6655;
  double t6666;
  double t6913;
  double t6924;
  double t6936;
  double t6943;
  double t7038;
  double t7049;
  double t5581;
  double t5595;
  double t5600;
  double t7046;
  double t7039;
  double t5270;
  double t5346;
  double t5354;
  double t7281;
  double t7285;
  double t5537;
  double t5548;
  double t5549;
  double t7291;
  double t7295;
  double t7060;
  double t7062;
  double t7063;
  double t7380;
  double t7221;
  double t7224;
  double t7227;
  double t7229;
  double t7411;
  double t7476;
  double t7477;
  double t7479;
  double t7480;
  double t7481;
  double t7483;
  double t7485;
  double t7494;
  double t7496;
  double t7497;
  double t7487;
  double t7488;
  double t7489;
  double t6169;
  double t6170;
  double t6172;
  double t7375;
  double t7540;
  double t5974;
  double t6004;
  double t6009;
  double t7551;
  double t7554;
  double t6278;
  double t6281;
  double t7025;
  double t7026;
  double t7029;
  double t7076;
  double t7078;
  double t7086;
  double t7099;
  double t7659;
  double t7662;
  double t7664;
  double t7665;
  double t7743;
  double t7791;
  double t7875;
  double t7876;
  double t7747;
  double t7749;
  double t7753;
  double t7899;
  double t7902;
  double t7792;
  double t7810;
  double t7811;
  double t7881;
  double t7883;
  double t7885;
  double t7919;
  double t7921;
  double t7922;
  double t8070;
  double t8081;
  double t8098;
  double t8099;
  double t8202;
  double t8233;
  double t8232;
  double t8203;
  double t8361;
  double t8383;
  double t8421;
  double t8451;
  double t8219;
  double t8220;
  double t8221;
  double t8240;
  double t8249;
  double t8253;
  double t8280;
  double t8282;
  double t8283;
  double t8285;
  double t8312;
  double t8313;
  double t8315;
  double t8316;
  double t8638;
  double t8652;
  double t8774;
  double t8776;
  double t8777;
  double t8778;
  double t8779;
  double t8780;
  double t8781;
  double t8760;
  double t8762;
  double t8763;
  double t8767;
  double t8770;
  double t8771;
  double t8772;
  double t8749;
  double t8751;
  double t8753;
  double t8754;
  double t8736;
  double t8740;
  double t8743;
  double t8746;
  double t8661;
  double t8637;
  double t8803;
  double t8806;
  double t8815;
  double t8819;
  double t7708;
  double t7710;
  double t7712;
  t207 = Cos(var1[11]);
  t219 = -1.*t207;
  t233 = 1. + t219;
  t240 = Sin(var1[11]);
  t74 = Cos(var1[10]);
  t313 = Sin(var1[10]);
  t234 = -1.7408e-8*t233;
  t278 = -3.999964e-6*t240;
  t285 = t234 + t278;
  t391 = -1.*t74;
  t399 = 1. + t391;
  t328 = -1.000000000016*t233;
  t337 = 1. + t328;
  t338 = 0.999991*t337;
  t348 = 0.004352*t240;
  t361 = t338 + t348;
  t414 = -0.004352*t207;
  t425 = 0.999991*t240;
  t433 = t414 + t425;
  t486 = Sin(var1[9]);
  t92 = -1. + t74;
  t95 = 1.6e-11*t92;
  t143 = 1. + t95;
  t308 = t143*t285;
  t377 = -4.e-6*t313*t361;
  t434 = 4.e-6*t399*t433;
  t450 = 0. + t308 + t377 + t434;
  t58 = Cos(var1[9]);
  t491 = 4.e-6*t313*t285;
  t536 = -1.000000000016*t399;
  t541 = 1. + t536;
  t547 = t541*t361;
  t561 = -1.*t313*t433;
  t563 = 0. + t491 + t547 + t561;
  t31 = Cos(var1[5]);
  t615 = -1.*t486*t450;
  t624 = t58*t563;
  t637 = 0. + t615 + t624;
  t453 = t58*t450;
  t569 = t486*t563;
  t580 = 0. + t453 + t569;
  t651 = Sin(var1[5]);
  t680 = Cos(var1[3]);
  t595 = t31*t580;
  t659 = t637*t651;
  t668 = 0. + t595 + t659;
  t22 = Sin(var1[3]);
  t694 = Cos(var1[4]);
  t703 = 4.e-6*t399*t285;
  t706 = t313*t361;
  t709 = t74*t433;
  t720 = 0. + t703 + t706 + t709;
  t726 = t694*t720;
  t741 = Sin(var1[4]);
  t761 = t31*t637;
  t764 = -1.*t580*t651;
  t767 = 0. + t761 + t764;
  t791 = -1.*t741*t767;
  t807 = 0. + t726 + t791;
  t908 = -1.*t720*t741;
  t953 = -1.*t694*t767;
  t1005 = t908 + t953;
  t1121 = 0.004352*t337;
  t1170 = -0.9999910000159999*t240;
  t1200 = t1121 + t1170;
  t1205 = 1.6e-11*t233;
  t1274 = -1. + t1205;
  t1318 = 4.e-6*t1274;
  t1422 = 3.999964e-6*t233;
  t1482 = -1.7408e-8*t240;
  t1570 = t1318 + t1422 + t1482;
  t1586 = -1. + t207;
  t1634 = 1.6e-11*t1586;
  t1694 = 0.999991*t207;
  t1709 = t1634 + t1694 + t348;
  t1849 = -4.e-6*t313*t1200;
  t1892 = t143*t1570;
  t1913 = 4.e-6*t399*t1709;
  t1956 = 0. + t1849 + t1892 + t1913;
  t1995 = t541*t1200;
  t1996 = 4.e-6*t313*t1570;
  t2058 = -1.*t313*t1709;
  t2077 = 0. + t1995 + t1996 + t2058;
  t2509 = -1. + t1205 + t1634;
  t2539 = 4.e-6*t1586;
  t2559 = -4.e-6*t207;
  t2595 = t2539 + t2559;
  t2625 = t143*t2509;
  t2630 = 4.e-6*t399*t2595;
  t2635 = t2625 + t2630;
  t2647 = 4.e-6*t2509*t313;
  t2656 = -1.*t2595*t313;
  t2659 = t2647 + t2656;
  t2893 = -1.26e-8*var1[11];
  t2897 = 1. + t1634;
  t2930 = -0.14871*t2897;
  t2954 = -1.64779999997447e-7*t233;
  t2969 = -1.59556e-7*t1586;
  t2975 = -1.199987999968e-6*t240;
  t2979 = t2893 + t2930 + t2954 + t2969 + t2975;
  t2985 = 0.803147*t337;
  t2997 = 0.50315000001605*t233;
  t2998 = 0.00130540515936178*t240;
  t3006 = t2985 + t2997 + t2998;
  t3016 = -5.04e-14*var1[11];
  t3025 = -0.03988959484*t233;
  t3030 = 6.38224e-13*t1586;
  t3040 = -0.041195*t207;
  t3047 = 0.299996999992*t240;
  t3050 = t3016 + t3025 + t3030 + t3040 + t3047;
  t3114 = -1.*t58;
  t3121 = 1. + t3114;
  t3185 = -0.15121*t486;
  t3199 = -1.2484e-7*var1[10];
  t3215 = 2.479936e-18*t399;
  t3232 = -1.54996e-7*t92;
  t3240 = 1.124840000016e-6*t313;
  t3245 = t143*t2979;
  t3246 = -4.e-6*t313*t3006;
  t3258 = 4.e-6*t399*t3050;
  t3272 = t3199 + t3215 + t3232 + t3240 + t3245 + t3246 + t3258;
  t3284 = 0.281210000008499*t399;
  t3290 = -0.03874900000062*t313;
  t3304 = 4.e-6*t313*t2979;
  t3309 = t541*t3006;
  t3311 = -1.*t313*t3050;
  t3316 = t3284 + t3290 + t3304 + t3309 + t3311;
  t2521 = 4.e-6*t399*t2509;
  t2614 = t74*t2595;
  t2615 = t2521 + t2614;
  t2622 = t2615*t694;
  t2641 = -1.*t2635*t486;
  t2665 = t58*t2659;
  t2677 = t2641 + t2665;
  t2700 = t31*t2677;
  t2719 = t58*t2635;
  t2722 = t486*t2659;
  t2733 = t2719 + t2722;
  t2739 = -1.*t2733*t651;
  t2753 = t2700 + t2739;
  t2757 = -1.*t741*t2753;
  t2758 = t2622 + t2757;
  t2771 = -4.9936e-13*var1[10];
  t2808 = -0.038749*t399;
  t2853 = 6.19984e-13*t92;
  t2879 = -0.281210000004*t313;
  t2982 = 4.e-6*t399*t2979;
  t3008 = t313*t3006;
  t3095 = t74*t3050;
  t3096 = 0. + t2771 + t2808 + t2853 + t2879 + t2982 + t3008 + t3095;
  t3165 = 0.15121*t3121;
  t3280 = -1.*t486*t3272;
  t3317 = t58*t3316;
  t3321 = t3165 + t3185 + t3280 + t3317;
  t3337 = t31*t3321;
  t3354 = -0.15121*t3121;
  t3364 = t58*t3272;
  t3387 = t486*t3316;
  t3393 = t3354 + t3185 + t3364 + t3387;
  t3395 = -1.*t3393*t651;
  t3397 = 0. + t3337 + t3395;
  t3489 = t694*t3096;
  t3508 = -1.*t741*t3397;
  t1202 = t313*t1200;
  t1584 = 4.e-6*t399*t1570;
  t1773 = t74*t1709;
  t1797 = 0. + t1202 + t1584 + t1773;
  t1961 = -1.*t486*t1956;
  t2178 = t58*t2077;
  t2212 = 0. + t1961 + t2178;
  t2235 = t31*t2212;
  t2254 = t58*t1956;
  t2261 = t486*t2077;
  t2277 = 0. + t2254 + t2261;
  t2314 = -1.*t2277*t651;
  t2344 = 0. + t2235 + t2314;
  t3478 = t2615*t741;
  t3480 = t694*t2753;
  t3482 = t3478 + t3480;
  t3468 = t3096*t741;
  t3471 = t694*t3397;
  t3476 = 0. + t3468 + t3471;
  t3555 = 0. + t3489 + t3508;
  t3645 = t694*t1797;
  t3657 = -1.*t741*t2344;
  t3110 = -1.*t3096*t741;
  t3407 = -1.*t694*t3397;
  t3436 = t3110 + t3407;
  t3661 = t3645 + t3657;
  t1825 = t1797*t741;
  t2499 = t694*t2344;
  t2501 = 0. + t1825 + t2499;
  t3536 = t3489 + t3508;
  t3704 = t31*t3393;
  t3729 = t3321*t651;
  t3734 = 0. + t3704 + t3729;
  t3767 = 0. + t3645 + t3657;
  t3881 = -1.*t31*t580;
  t3888 = -1.*t637*t651;
  t3896 = t3881 + t3888;
  t3933 = t761 + t764;
  t3806 = t31*t2277;
  t3807 = t2212*t651;
  t3815 = 0. + t3806 + t3807;
  t3676 = t31*t2733;
  t3681 = t2677*t651;
  t3682 = t3676 + t3681;
  t3735 = t3682*t3734;
  t4032 = -1.*t31*t3393;
  t4037 = -1.*t3321*t651;
  t4047 = t4032 + t4037;
  t4148 = t2235 + t2314;
  t4057 = t3337 + t3395;
  t3821 = -1.*t3815*t3734;
  t4056 = t2753*t3734;
  t4062 = t3682*t4057;
  t4067 = -1.*t31*t2733;
  t4082 = -1.*t2677*t651;
  t4099 = t4067 + t4082;
  t4158 = -1.*t4148*t3734;
  t4161 = -1.*t3815*t4057;
  t4162 = -1.*t31*t2277;
  t4167 = -1.*t2212*t651;
  t4174 = t4162 + t4167;
  t3740 = t3482*t3476;
  t3756 = t2758*t3555;
  t3757 = t3735 + t3740 + t3756;
  t3822 = -1.*t2501*t3476;
  t3824 = -1.*t3767*t3555;
  t3826 = t3821 + t3822 + t3824;
  t4340 = -0.15121*t58;
  t4358 = t4340 + t3185 + t3280 + t3317;
  t4365 = 0.15121*t486;
  t4370 = -1.*t58*t3272;
  t4391 = -1.*t486*t3316;
  t4398 = t4340 + t4365 + t4370 + t4391;
  t4526 = -1.*t58*t450;
  t4527 = -1.*t486*t563;
  t4533 = t4526 + t4527;
  t4534 = t31*t4533;
  t4536 = t615 + t624;
  t4537 = -1.*t4536*t651;
  t4540 = t4534 + t4537;
  t4550 = t31*t4536;
  t4551 = t4533*t651;
  t4558 = t4550 + t4551;
  t4446 = -1.*t58*t2635;
  t4450 = -1.*t486*t2659;
  t4452 = t4446 + t4450;
  t4416 = t1961 + t2178;
  t4328 = -1.*t58*t1956;
  t4329 = -1.*t486*t2077;
  t4333 = t4328 + t4329;
  t4149 = t2615*t3096;
  t4151 = t2753*t3397;
  t4152 = t4149 + t3735 + t4151;
  t4679 = t31*t4416;
  t4696 = t4333*t651;
  t4699 = t4679 + t4696;
  t4638 = t31*t4398;
  t4643 = -1.*t4358*t651;
  t4645 = t4638 + t4643;
  t4652 = t31*t4358;
  t4657 = t4398*t651;
  t4658 = t4652 + t4657;
  t4618 = t4452*t651;
  t4628 = t2700 + t4618;
  t4189 = -1.*t1797*t3096;
  t4195 = -1.*t2344*t3397;
  t4225 = t4189 + t3821 + t4195;
  t4637 = t4628*t3734;
  t4659 = t3682*t4658;
  t4660 = t31*t4452;
  t4666 = t4660 + t4082;
  t4708 = -1.*t4699*t3734;
  t4721 = -1.*t3815*t4658;
  t4723 = t31*t4333;
  t4724 = -1.*t4416*t651;
  t4727 = t4723 + t4724;
  t4843 = -1.000000000016*t313*t1200;
  t4846 = 4.e-6*t74*t1570;
  t4853 = -1.*t74*t1709;
  t4856 = t4843 + t4846 + t4853;
  t4864 = -4.e-6*t74*t1200;
  t4868 = -1.6e-11*t313*t1570;
  t4869 = 4.e-6*t313*t1709;
  t4870 = t4864 + t4868 + t4869;
  t4916 = -0.03874900000062*t74;
  t4917 = 0.281210000008499*t313;
  t4922 = 4.e-6*t74*t2979;
  t4923 = -1.000000000016*t313*t3006;
  t4925 = -1.*t74*t3050;
  t4931 = t4916 + t4917 + t4922 + t4923 + t4925;
  t4934 = 1.124840000016e-6*t74;
  t4935 = 1.5499600000248e-7*t313;
  t4941 = -1.6e-11*t313*t2979;
  t4942 = -4.e-6*t74*t3006;
  t4946 = 4.e-6*t313*t3050;
  t4947 = -1.2484e-7 + t4934 + t4935 + t4941 + t4942 + t4946;
  t5041 = 4.e-6*t74*t2509;
  t5043 = -1.*t74*t2595;
  t5045 = t5041 + t5043;
  t5055 = -1.6e-11*t2509*t313;
  t5056 = 4.e-6*t2595*t313;
  t5058 = t5055 + t5056;
  t4932 = t486*t4931;
  t4948 = t58*t4947;
  t4956 = t4932 + t4948;
  t4961 = t58*t4931;
  t4962 = -1.*t486*t4947;
  t4963 = t4961 + t4962;
  t4982 = -0.281210000004*t74;
  t4984 = t74*t3006;
  t4995 = -4.9936e-13 + t4982 + t3290 + t3304 + t4984 + t3311;
  t4971 = t74*t1200;
  t4979 = t4971 + t1996 + t2058;
  t5133 = t2771 + t2808 + t2853 + t2879 + t2982 + t3008 + t3095;
  t5009 = -1.*t1797*t4995;
  t5102 = t2615*t4995;
  t5234 = 4.e-6*t74*t285;
  t5237 = -1.000000000016*t313*t361;
  t5238 = -1.*t74*t433;
  t5239 = t5234 + t5237 + t5238;
  t5244 = -1.6e-11*t313*t285;
  t5246 = -4.e-6*t74*t361;
  t5248 = 4.e-6*t313*t433;
  t5249 = t5244 + t5246 + t5248;
  t4891 = t486*t4856;
  t4894 = t58*t4870;
  t4900 = t4891 + t4894;
  t4860 = t58*t4856;
  t4872 = -1.*t486*t4870;
  t4874 = t4860 + t4872;
  t5070 = t5045*t486;
  t5078 = t58*t5058;
  t5082 = t5070 + t5078;
  t5052 = t58*t5045;
  t5063 = -1.*t486*t5058;
  t5064 = t5052 + t5063;
  t5101 = t2659*t3096;
  t5364 = t31*t5082;
  t5365 = t5064*t651;
  t5366 = t5364 + t5365;
  t4981 = -1.*t4979*t3096;
  t5357 = t31*t4900;
  t5358 = t4874*t651;
  t5359 = t5357 + t5358;
  t5394 = t31*t4963;
  t5403 = -1.*t4956*t651;
  t5404 = t5394 + t5403;
  t5415 = t31*t4956;
  t5416 = t4963*t651;
  t5426 = t5415 + t5416;
  t5306 = t486*t5239;
  t5307 = t58*t5249;
  t5329 = t5306 + t5307;
  t5271 = t58*t5239;
  t5273 = -1.*t486*t5249;
  t5279 = t5271 + t5273;
  t5267 = t74*t361;
  t5268 = t491 + t5267 + t561;
  t5294 = t31*t5279;
  t5335 = -1.*t5329*t651;
  t5343 = t5294 + t5335;
  t5498 = t31*t5329;
  t5503 = t5279*t651;
  t5504 = t5498 + t5503;
  t5506 = t694*t5268;
  t5507 = -1.*t741*t5343;
  t5508 = t5506 + t5507;
  t5462 = t31*t4874;
  t5467 = -1.*t4900*t651;
  t5468 = t5462 + t5467;
  t5377 = t31*t5064;
  t5379 = -1.*t5082*t651;
  t5382 = t5377 + t5379;
  t5376 = t5366*t3734;
  t5443 = t3682*t5426;
  t5530 = t2659*t741;
  t5532 = t694*t5382;
  t5533 = t5530 + t5532;
  t5459 = -1.*t5359*t3734;
  t5484 = -1.*t3815*t5426;
  t5523 = t4979*t741;
  t5524 = t694*t5468;
  t5526 = t5523 + t5524;
  t5553 = t4995*t741;
  t5554 = t694*t5404;
  t5555 = t5553 + t5554;
  t5557 = t694*t4995;
  t5558 = -1.*t741*t5404;
  t5566 = t5557 + t5558;
  t5619 = 0.00130540515936178*t207;
  t5625 = -0.2999969999968001*t240;
  t5626 = t5619 + t5625;
  t5631 = -1.199987999968e-6*t207;
  t5632 = -5.2216206374471e-9*t240;
  t5633 = -1.26e-8 + t5631 + t5632;
  t5641 = 0.299996999992*t207;
  t5642 = -5.04e-14 + t5641 + t2998;
  t5627 = -4.e-6*t313*t5626;
  t5634 = t143*t5633;
  t5645 = 4.e-6*t399*t5642;
  t5646 = t5627 + t5634 + t5645;
  t5650 = t541*t5626;
  t5653 = 4.e-6*t313*t5633;
  t5654 = -1.*t313*t5642;
  t5655 = t5650 + t5653 + t5654;
  t5676 = 0.004352*t207;
  t5677 = t5676 + t1170;
  t5685 = -0.9999910000159999*t207;
  t5686 = -0.00435200000006963*t240;
  t5691 = t5685 + t5686;
  t5699 = -1.7408e-8*t207;
  t5702 = 3.999964000064e-6*t240;
  t5704 = t5699 + t5702;
  t5682 = 4.e-6*t399*t5677;
  t5694 = -4.e-6*t313*t5691;
  t5709 = t143*t5704;
  t5711 = t5682 + t5694 + t5709;
  t5718 = -1.*t313*t5677;
  t5720 = t541*t5691;
  t5724 = 4.e-6*t313*t5704;
  t5726 = t5718 + t5720 + t5724;
  t5110 = t2677*t3321;
  t5111 = t2733*t3393;
  t5116 = t5110 + t5111 + t4149;
  t5774 = t74*t5677;
  t5779 = t313*t5691;
  t5787 = 4.e-6*t399*t5704;
  t5789 = t5774 + t5779 + t5787;
  t5648 = -1.*t486*t5646;
  t5656 = t58*t5655;
  t5663 = t5648 + t5656;
  t5665 = t58*t5646;
  t5669 = t486*t5655;
  t5671 = t5665 + t5669;
  t5755 = t313*t5626;
  t5756 = 4.e-6*t399*t5633;
  t5762 = t74*t5642;
  t5767 = t5755 + t5756 + t5762;
  t5770 = -1.*t5767*t1797;
  t5216 = t2635*t3272;
  t5220 = t2615*t5133;
  t5221 = t2659*t3316;
  t5223 = t5216 + t5220 + t5221;
  t5848 = -3.999964e-6*t207;
  t5849 = t5848 + t1482;
  t5855 = t1694 + t348;
  t5811 = t2615*t5767;
  t5887 = -1.*t1200*t5626;
  t5889 = -1.*t1570*t5633;
  t5897 = -1.*t2979*t5704;
  t5899 = -1.*t5691*t3006;
  t5902 = -1.*t5642*t1709;
  t5905 = -1.*t5677*t3050;
  t5906 = t5887 + t5889 + t5897 + t5899 + t5902 + t5905;
  t5920 = t2509*t5633;
  t5922 = t2595*t5642;
  t5925 = t5920 + t5922;
  t5913 = t2509*t2979;
  t5917 = t2595*t3050;
  t5918 = t5913 + t5917;
  t5847 = -4.e-6*t313*t5677;
  t5851 = t143*t5849;
  t5857 = 4.e-6*t399*t5855;
  t5858 = t5847 + t5851 + t5857;
  t5860 = t541*t5677;
  t5864 = 4.e-6*t313*t5849;
  t5865 = -1.*t313*t5855;
  t5866 = t5860 + t5864 + t5865;
  t5985 = t58*t5858;
  t5986 = t486*t5866;
  t5989 = t5985 + t5986;
  t5976 = -1.*t486*t5858;
  t5980 = t58*t5866;
  t5982 = t5976 + t5980;
  t5967 = t313*t5677;
  t5968 = 4.e-6*t399*t5849;
  t5971 = t74*t5855;
  t5973 = t5967 + t5968 + t5971;
  t5984 = t31*t5982;
  t5993 = -1.*t5989*t651;
  t6000 = t5984 + t5993;
  t6014 = t31*t5989;
  t6019 = t5982*t651;
  t6022 = t6014 + t6019;
  t6028 = t694*t5973;
  t6029 = -1.*t741*t6000;
  t6031 = t6028 + t6029;
  t5742 = t58*t5711;
  t5750 = t486*t5726;
  t5751 = t5742 + t5750;
  t5714 = -1.*t486*t5711;
  t5727 = t58*t5726;
  t5734 = t5714 + t5727;
  t5791 = -1.*t5789*t3096;
  t6056 = t31*t5671;
  t6071 = t5663*t651;
  t6072 = t6056 + t6071;
  t6077 = t31*t5663;
  t6083 = -1.*t5671*t651;
  t6086 = t6077 + t6083;
  t6095 = t31*t5751;
  t6096 = t5734*t651;
  t6101 = t6095 + t6096;
  t6073 = t3682*t6072;
  t6110 = t31*t5734;
  t6111 = -1.*t5751*t651;
  t6114 = t6110 + t6111;
  t6107 = -1.*t6072*t3815;
  t6109 = -1.*t6101*t3734;
  t6122 = t5767*t741;
  t6124 = t694*t6086;
  t6125 = t6122 + t6124;
  t6130 = t694*t5767;
  t6131 = -1.*t741*t6086;
  t6133 = t6130 + t6131;
  t6147 = t5789*t741;
  t6149 = t694*t6114;
  t6153 = t6147 + t6149;
  t861 = t680*t668;
  t862 = -1.*t22*t807;
  t4815 = -1.*t2212*t3321;
  t4820 = -1.*t2277*t3393;
  t4822 = t4815 + t4820 + t4189;
  t5132 = -1.*t1956*t3272;
  t5139 = -1.*t1797*t5133;
  t5143 = -1.*t2077*t3316;
  t5144 = t5132 + t5139 + t5143;
  t6253 = -1.*t2979*t1570;
  t6254 = -1.*t1200*t3006;
  t6255 = -1.*t1709*t3050;
  t6256 = t6253 + t6254 + t6255;
  t3783 = -1.*t1797*t741;
  t3787 = -1.*t694*t2344;
  t3788 = t3783 + t3787;
  t6200 = t720*t741;
  t6202 = t694*t767;
  t6204 = 0. + t6200 + t6202;
  t3539 = -1.*t2615*t741;
  t3546 = -1.*t694*t2753;
  t3547 = t3539 + t3546;
  t1033 = t726 + t791;
  t6356 = -1.*t3682*t3734;
  t6400 = t3734*t668;
  t6524 = -1.*t2753*t3734;
  t6526 = -1.*t3682*t4057;
  t6366 = -1.*t3482*t3476;
  t6378 = -1.*t2758*t3555;
  t6382 = t6356 + t6366 + t6378;
  t6599 = t4057*t668;
  t6612 = t3734*t3933;
  t6406 = t3476*t6204;
  t6414 = t3555*t807;
  t6416 = t6400 + t6406 + t6414;
  t6557 = -1.*t2615*t3096;
  t6569 = -1.*t2753*t3397;
  t6580 = t6557 + t6356 + t6569;
  t6652 = t3096*t720;
  t6655 = t3397*t767;
  t6666 = t6652 + t6400 + t6655;
  t6913 = -1.*t4628*t3734;
  t6924 = -1.*t3682*t4658;
  t6936 = t4658*t668;
  t6943 = t3734*t4558;
  t7038 = t4995*t720;
  t7049 = -1.*t2615*t4995;
  t5581 = t694*t4979;
  t5595 = -1.*t741*t5468;
  t5600 = t5581 + t5595;
  t7046 = -1.*t2659*t3096;
  t7039 = t3096*t5268;
  t5270 = t5268*t741;
  t5346 = t694*t5343;
  t5354 = t5270 + t5346;
  t7281 = -1.*t5366*t3734;
  t7285 = -1.*t3682*t5426;
  t5537 = t694*t2659;
  t5548 = -1.*t741*t5382;
  t5549 = t5537 + t5548;
  t7291 = t5426*t668;
  t7295 = t3734*t5504;
  t7060 = -1.*t2677*t3321;
  t7062 = -1.*t2733*t3393;
  t7063 = t7060 + t7062 + t6557;
  t7380 = t5767*t720;
  t7221 = -1.*t2635*t3272;
  t7224 = -1.*t2615*t5133;
  t7227 = -1.*t2659*t3316;
  t7229 = t7221 + t7224 + t7227;
  t7411 = -1.*t2615*t5767;
  t7476 = t2979*t5849;
  t7477 = t285*t5633;
  t7479 = t5677*t3006;
  t7480 = t5626*t361;
  t7481 = t5855*t3050;
  t7483 = t5642*t433;
  t7485 = t7476 + t7477 + t7479 + t7480 + t7481 + t7483;
  t7494 = -1.*t2509*t5633;
  t7496 = -1.*t2595*t5642;
  t7497 = t7494 + t7496;
  t7487 = -1.*t2509*t2979;
  t7488 = -1.*t2595*t3050;
  t7489 = t7487 + t7488;
  t6169 = t694*t5789;
  t6170 = -1.*t741*t6114;
  t6172 = t6169 + t6170;
  t7375 = t5973*t3096;
  t7540 = -1.*t3682*t6072;
  t5974 = t5973*t741;
  t6004 = t694*t6000;
  t6009 = t5974 + t6004;
  t7551 = t6022*t3734;
  t7554 = t6072*t668;
  t6278 = t680*t3815;
  t6281 = -1.*t22*t3767;
  t7025 = t3321*t637;
  t7026 = t3393*t580;
  t7029 = t7025 + t7026 + t6652;
  t7076 = t3272*t450;
  t7078 = t5133*t720;
  t7086 = t3316*t563;
  t7099 = t7076 + t7078 + t7086;
  t7659 = t285*t2979;
  t7662 = t3006*t361;
  t7664 = t3050*t433;
  t7665 = t7659 + t7662 + t7664;
  t7743 = t3815*t3734;
  t7791 = -1.*t3734*t668;
  t7875 = t4148*t3734;
  t7876 = t3815*t4057;
  t7747 = t2501*t3476;
  t7749 = t3767*t3555;
  t7753 = t7743 + t7747 + t7749;
  t7899 = -1.*t4057*t668;
  t7902 = -1.*t3734*t3933;
  t7792 = -1.*t3476*t6204;
  t7810 = -1.*t3555*t807;
  t7811 = t7791 + t7792 + t7810;
  t7881 = t1797*t3096;
  t7883 = t2344*t3397;
  t7885 = t7881 + t7743 + t7883;
  t7919 = -1.*t3096*t720;
  t7921 = -1.*t3397*t767;
  t7922 = t7919 + t7791 + t7921;
  t8070 = t4699*t3734;
  t8081 = t3815*t4658;
  t8098 = -1.*t4658*t668;
  t8099 = -1.*t3734*t4558;
  t8202 = -1.*t4995*t720;
  t8233 = t1797*t4995;
  t8232 = t4979*t3096;
  t8203 = -1.*t3096*t5268;
  t8361 = t5359*t3734;
  t8383 = t3815*t5426;
  t8421 = -1.*t5426*t668;
  t8451 = -1.*t3734*t5504;
  t8219 = -1.*t3321*t637;
  t8220 = -1.*t3393*t580;
  t8221 = t8219 + t8220 + t7919;
  t8240 = t2212*t3321;
  t8249 = t2277*t3393;
  t8253 = t8240 + t8249 + t7881;
  t8280 = -1.*t3272*t450;
  t8282 = -1.*t5133*t720;
  t8283 = -1.*t3316*t563;
  t8285 = t8280 + t8282 + t8283;
  t8312 = t1956*t3272;
  t8313 = t1797*t5133;
  t8315 = t2077*t3316;
  t8316 = t8312 + t8313 + t8315;
  t8638 = -1.*t5767*t720;
  t8652 = t5767*t1797;
  t8774 = t1200*t5626;
  t8776 = t1570*t5633;
  t8777 = t2979*t5704;
  t8778 = t5691*t3006;
  t8779 = t5642*t1709;
  t8780 = t5677*t3050;
  t8781 = t8774 + t8776 + t8777 + t8778 + t8779 + t8780;
  t8760 = -1.*t2979*t5849;
  t8762 = -1.*t285*t5633;
  t8763 = -1.*t5677*t3006;
  t8767 = -1.*t5626*t361;
  t8770 = -1.*t5855*t3050;
  t8771 = -1.*t5642*t433;
  t8772 = t8760 + t8762 + t8763 + t8767 + t8770 + t8771;
  t8749 = t2979*t1570;
  t8751 = t1200*t3006;
  t8753 = t1709*t3050;
  t8754 = t8749 + t8751 + t8753;
  t8736 = -1.*t285*t2979;
  t8740 = -1.*t3006*t361;
  t8743 = -1.*t3050*t433;
  t8746 = t8736 + t8740 + t8743;
  t8661 = t5789*t3096;
  t8637 = -1.*t5973*t3096;
  t8803 = t6072*t3815;
  t8806 = t6101*t3734;
  t8815 = -1.*t6022*t3734;
  t8819 = -1.*t6072*t668;
  t7708 = t680*t3682;
  t7710 = -1.*t22*t2758;
  t7712 = t7708 + t7710;
  p_output1[0]=(-1.*t22*t668 - 1.*t680*t807)*var2[1] + (t861 + t862)*var2[2];
  p_output1[1]=t1033*var2[0] - 1.*t1005*t22*var2[1] + t1005*t680*var2[2] + (t2501*(t2758*t3436 + t2758*t3476 + t3482*t3536 + t3547*t3555) + t3661*t3757 + t3482*(-1.*t2501*t3536 - 1.*t3476*t3661 - 1.*t3436*t3767 - 1.*t3555*t3788) + t2758*t3826)*var2[3];
  p_output1[2]=t3896*t694*var2[0] + (t3933*t680 + t22*t3896*t741)*var2[1] + (t22*t3933 - 1.*t3896*t680*t741)*var2[2] + (t3826*t4099*t694 + t3757*t4174*t694 + t2501*(t4056 + t4062 + t3482*t4047*t694 + t3476*t4099*t694 - 1.*t2758*t4047*t741 - 1.*t3555*t4099*t741) + t3482*(t4158 + t4161 - 1.*t2501*t4047*t694 - 1.*t3476*t4174*t694 + t3767*t4047*t741 + t3555*t4174*t741))*var2[3] + (t3815*(t2753*t4047 + t4056 + t4062 + t3397*t4099) + t4148*t4152 + t3682*(-1.*t2344*t4047 + t4158 + t4161 - 1.*t3397*t4174) + t2753*t4225)*var2[4];
  p_output1[3]=t4540*t694*var2[0] + (t4558*t680 + t22*t4540*t741)*var2[1] + (t22*t4558 - 1.*t4540*t680*t741)*var2[2] + (t3826*t4666*t694 + t3757*t4727*t694 + t2501*(t4637 + t4659 + t3482*t4645*t694 + t3476*t4666*t694 - 1.*t2758*t4645*t741 - 1.*t3555*t4666*t741) + t3482*(t4708 + t4721 - 1.*t2501*t4645*t694 - 1.*t3476*t4727*t694 + t3767*t4645*t741 + t3555*t4727*t741))*var2[3] + (t4225*t4628 + t3815*(t4637 + t2753*t4645 + t4659 + t3397*t4666) + t4152*t4699 + t3682*(-1.*t2344*t4645 + t4708 + t4721 - 1.*t3397*t4727))*var2[4] + (t2615*(-1.*t3321*t4333 - 1.*t2277*t4358 - 1.*t2212*t4398 - 1.*t3393*t4416) + t1797*(t2677*t3393 + t2733*t4358 + t2677*t4398 + t3321*t4452))*var2[5];
  p_output1[4]=t5354*var2[0] + (-1.*t22*t5508 + t5504*t680)*var2[1] + (t22*t5504 + t5508*t680)*var2[2] + (t3757*t5526 + t3826*t5533 + t2501*(t5376 + t5443 + t3476*t5533 + t3555*t5549 + t3482*t5555 + t2758*t5566) + t3482*(t5459 + t5484 - 1.*t3476*t5526 - 1.*t2501*t5555 - 1.*t3767*t5566 - 1.*t3555*t5600))*var2[3] + (t4152*t5359 + t4225*t5366 + t3815*(t5101 + t5102 + t5376 + t3397*t5382 + t2753*t5404 + t5443) + t3682*(t4981 + t5009 - 1.*t2344*t5404 + t5459 - 1.*t3397*t5468 + t5484))*var2[4] + (t2659*t4822 + t2615*(-1.*t3321*t4874 - 1.*t3393*t4900 - 1.*t2277*t4956 - 1.*t2212*t4963 + t4981 + t5009) + t1797*(t2733*t4956 + t2677*t4963 + t3321*t5064 + t3393*t5082 + t5101 + t5102) + t4979*t5116)*var2[5] + (t1797*(t2659*t4931 + t2635*t4947 + t3316*t5045 + t3272*t5058 + t5102 + t2659*t5133) + t2615*(-1.*t3316*t4856 - 1.*t3272*t4870 - 1.*t2077*t4931 - 1.*t1956*t4947 + t5009 - 1.*t4979*t5133) + t2659*t5144 + t4979*t5223 - 0.15121*t5239 - 0.15121*t5249)*var2[9];
  p_output1[5]=t6009*var2[0] + (-1.*t22*t6031 + t6022*t680)*var2[1] + (t22*t6022 + t6031*t680)*var2[2] + (t2501*(t6073 + t3482*t6125 + t2758*t6133) + t3757*t6153 + t3482*(t6107 + t6109 - 1.*t2501*t6125 - 1.*t3767*t6133 - 1.*t3476*t6153 - 1.*t3555*t6172))*var2[3] + (t3815*(t5811 + t6073 + t2753*t6086) + t4152*t6101 + t3682*(t5770 + t5791 - 1.*t2344*t6086 + t6107 + t6109 - 1.*t3397*t6114))*var2[4] + (t5116*t5789 + t2615*(-1.*t2212*t5663 - 1.*t2277*t5671 - 1.*t3321*t5734 - 1.*t3393*t5751 + t5770 + t5791) + t1797*(t2677*t5663 + t2733*t5671 + t5811))*var2[5] + (t5223*t5789 + t2615*(-1.*t1956*t5646 - 1.*t2077*t5655 - 1.*t3272*t5711 - 1.*t3316*t5726 + t5770 - 1.*t5133*t5789) + t1797*(t2635*t5646 + t2659*t5655 + t5811) - 0.15121*t5858 - 0.15121*t5866)*var2[9] + (-0.038749*t5677 + 1.e-6*t5849 - 0.28121*t5855 - 1.*t2509*t5906 - 1.*t5704*t5918 - 1.*t1570*t5925 + 4.e-6*(-1.*t2595*t5906 - 1.*t5677*t5918 - 1.*t1709*t5925))*var2[10];
  p_output1[6]=t6204;
  p_output1[7]=0. + t861 + t862;
  p_output1[8]=0. + t22*t668 + t680*t807;
  p_output1[9]=t2501*t3757 + t3482*t3826;
  p_output1[10]=t3815*t4152 + t3682*t4225;
  p_output1[11]=t2615*t4822 + t1797*t5116;
  p_output1[12]=-0.15121*t450 + t2615*t5144 + t1797*t5223 - 0.15121*t563;
  p_output1[13]=1.e-6*t285 - 0.038749*t361 - 0.28121*t433 - 1.*t1570*t5918 - 1.*t2509*t6256 + 4.e-6*(-1.*t1709*t5918 - 1.*t2595*t6256);
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t22*t3815 - 1.*t3767*t680)*var2[1] + (t6278 + t6281)*var2[2];
  p_output1[16]=t3661*var2[0] - 1.*t22*t3788*var2[1] + t3788*t680*var2[2] + ((-1.*t2758*t3436 - 1.*t2758*t3476 - 1.*t3482*t3536 - 1.*t3547*t3555)*t6204 + t1033*t6382 + t2758*t6416 + t3482*(t1033*t3476 + t1005*t3555 + t3536*t6204 + t3436*t807))*var2[3];
  p_output1[17]=t4174*t694*var2[0] + (t4148*t680 + t22*t4174*t741)*var2[1] + (t22*t4148 - 1.*t4174*t680*t741)*var2[2] + (t3896*t6382*t694 + t4099*t6416*t694 + t6204*(t6524 + t6526 - 1.*t3482*t4047*t694 - 1.*t3476*t4099*t694 + t2758*t4047*t741 + t3555*t4099*t741) + t3482*(t6599 + t6612 + t3476*t3896*t694 + t4047*t6204*t694 - 1.*t3555*t3896*t741 - 1.*t4047*t741*t807))*var2[3] + (t3933*t6580 + t2753*t6666 + (-1.*t2753*t4047 - 1.*t3397*t4099 + t6524 + t6526)*t668 + t3682*(t3397*t3896 + t6599 + t6612 + t4047*t767))*var2[4];
  p_output1[18]=t4727*t694*var2[0] + (t4699*t680 + t22*t4727*t741)*var2[1] + (t22*t4699 - 1.*t4727*t680*t741)*var2[2] + (t4540*t6382*t694 + t4666*t6416*t694 + t6204*(t6913 + t6924 - 1.*t3482*t4645*t694 - 1.*t3476*t4666*t694 + t2758*t4645*t741 + t3555*t4666*t741) + t3482*(t6936 + t3476*t4540*t694 + t4645*t6204*t694 + t6943 - 1.*t3555*t4540*t741 - 1.*t4645*t741*t807))*var2[3] + (t4558*t6580 + t4628*t6666 + t668*(-1.*t2753*t4645 - 1.*t3397*t4666 + t6913 + t6924) + t3682*(t3397*t4540 + t6936 + t6943 + t4645*t767))*var2[4] + (t2615*(t3321*t4533 + t3393*t4536 + t4358*t580 + t4398*t637) + (-1.*t2677*t3393 - 1.*t2733*t4358 - 1.*t2677*t4398 - 1.*t3321*t4452)*t720)*var2[5];
  p_output1[19]=t5526*var2[0] + (-1.*t22*t5600 + t5359*t680)*var2[1] + (t22*t5359 + t5600*t680)*var2[2] + (t5354*t6382 + t5533*t6416 + t6204*(-1.*t3476*t5533 - 1.*t3555*t5549 - 1.*t3482*t5555 - 1.*t2758*t5566 + t7281 + t7285) + t3482*(t3476*t5354 + t3555*t5508 + t5555*t6204 + t7291 + t7295 + t5566*t807))*var2[3] + (t5504*t6580 + t5366*t6666 + t668*(-1.*t3397*t5382 - 1.*t2753*t5404 + t7046 + t7049 + t7281 + t7285) + t3682*(t3397*t5343 + t7038 + t7039 + t7291 + t7295 + t5404*t767))*var2[4] + (t2659*t7029 + t2615*(t3321*t5279 + t3393*t5329 + t4956*t580 + t4963*t637 + t7038 + t7039) + t5268*t7063 + (-1.*t2733*t4956 - 1.*t2677*t4963 - 1.*t3321*t5064 - 1.*t3393*t5082 + t7046 + t7049)*t720)*var2[5] + (-0.15121*t4856 - 0.15121*t4870 + t2615*(t450*t4947 + t3316*t5239 + t3272*t5249 + t5133*t5268 + t4931*t563 + t7038) + t2659*t7099 + (-1.*t2659*t4931 - 1.*t2635*t4947 - 1.*t3316*t5045 - 1.*t3272*t5058 - 1.*t2659*t5133 + t7049)*t720 + t5268*t7229)*var2[9];
  p_output1[20]=t6153*var2[0] + (-1.*t22*t6172 + t6101*t680)*var2[1] + (t22*t6101 + t6172*t680)*var2[2] + (t6009*t6382 + t6204*(-1.*t3482*t6125 - 1.*t2758*t6133 + t7540) + t3482*(t3476*t6009 + t3555*t6031 + t6125*t6204 + t7551 + t7554 + t6133*t807))*var2[3] + (t6022*t6580 + t668*(-1.*t2753*t6086 + t7411 + t7540) + t3682*(t3397*t6000 + t7375 + t7380 + t7551 + t7554 + t6086*t767))*var2[4] + (t5973*t7063 + t2615*(t5671*t580 + t3321*t5982 + t3393*t5989 + t5663*t637 + t7375 + t7380) + t720*(-1.*t2677*t5663 - 1.*t2733*t5671 + t7411))*var2[5] + (-0.15121*t5711 - 0.15121*t5726 + t5973*t7229 + t2615*(t450*t5646 + t563*t5655 + t3272*t5858 + t3316*t5866 + t5133*t5973 + t7380) + t720*(-1.*t2635*t5646 - 1.*t2659*t5655 + t7411))*var2[9] + (-0.28121*t5677 - 0.038749*t5691 + 1.e-6*t5704 - 1.*t2509*t7485 - 1.*t5849*t7489 - 1.*t285*t7497 + 4.e-6*(-1.*t2595*t7485 - 1.*t5855*t7489 - 1.*t433*t7497))*var2[10];
  p_output1[21]=t2501;
  p_output1[22]=0. + t6278 + t6281;
  p_output1[23]=0. + t22*t3815 + t3767*t680;
  p_output1[24]=t6204*t6382 + t3482*t6416;
  p_output1[25]=t3682*t6666 + t6580*t668;
  p_output1[26]=t2615*t7029 + t7063*t720;
  p_output1[27]=-0.15121*t1956 - 0.15121*t2077 + t2615*t7099 + t720*t7229;
  p_output1[28]=-0.038749*t1200 + 1.e-6*t1570 - 0.28121*t1709 - 1.*t285*t7489 - 1.*t2509*t7665 + 4.e-6*(-1.*t433*t7489 - 1.*t2595*t7665);
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t22*t3682 - 1.*t2758*t680)*var2[1] + t7712*var2[2];
  p_output1[31]=t2758*var2[0] - 1.*t22*t3547*var2[1] + t3547*t680*var2[2] + ((t2501*t3536 + t3476*t3661 + t3436*t3767 + t3555*t3788)*t6204 + t1033*t7753 + t3661*t7811 + t2501*(-1.*t1033*t3476 - 1.*t1005*t3555 - 1.*t3536*t6204 - 1.*t3436*t807))*var2[3];
  p_output1[32]=t4099*t694*var2[0] + (t2753*t680 + t22*t4099*t741)*var2[1] + (t22*t2753 - 1.*t4099*t680*t741)*var2[2] + (t3896*t694*t7753 + t4174*t694*t7811 + t6204*(t2501*t4047*t694 + t3476*t4174*t694 - 1.*t3767*t4047*t741 - 1.*t3555*t4174*t741 + t7875 + t7876) + t2501*(-1.*t3476*t3896*t694 - 1.*t4047*t6204*t694 + t3555*t3896*t741 + t7899 + t7902 + t4047*t741*t807))*var2[3] + (t668*(t2344*t4047 + t3397*t4174 + t7875 + t7876) + t3933*t7885 + t3815*(-1.*t3397*t3896 - 1.*t4047*t767 + t7899 + t7902) + t4148*t7922)*var2[4];
  p_output1[33]=t4666*t694*var2[0] + (t4628*t680 + t22*t4666*t741)*var2[1] + (t22*t4628 - 1.*t4666*t680*t741)*var2[2] + (t4540*t694*t7753 + t4727*t694*t7811 + t6204*(t2501*t4645*t694 + t3476*t4727*t694 - 1.*t3767*t4645*t741 - 1.*t3555*t4727*t741 + t8070 + t8081) + t2501*(-1.*t3476*t4540*t694 - 1.*t4645*t6204*t694 + t3555*t4540*t741 + t4645*t741*t807 + t8098 + t8099))*var2[3] + (t4558*t7885 + t4699*t7922 + t668*(t2344*t4645 + t3397*t4727 + t8070 + t8081) + t3815*(-1.*t3397*t4540 - 1.*t4645*t767 + t8098 + t8099))*var2[4] + (t1797*(-1.*t3321*t4533 - 1.*t3393*t4536 - 1.*t4358*t580 - 1.*t4398*t637) + (t3321*t4333 + t2277*t4358 + t2212*t4398 + t3393*t4416)*t720)*var2[5];
  p_output1[34]=t5533*var2[0] + (-1.*t22*t5549 + t5366*t680)*var2[1] + (t22*t5366 + t5549*t680)*var2[2] + (t5354*t7753 + t5526*t7811 + t6204*(t3476*t5526 + t2501*t5555 + t3767*t5566 + t3555*t5600 + t8361 + t8383) + t2501*(-1.*t3476*t5354 - 1.*t3555*t5508 - 1.*t5555*t6204 - 1.*t5566*t807 + t8421 + t8451))*var2[3] + (t5504*t7885 + t5359*t7922 + t668*(t2344*t5404 + t3397*t5468 + t8232 + t8233 + t8361 + t8383) + t3815*(-1.*t3397*t5343 - 1.*t5404*t767 + t8202 + t8203 + t8421 + t8451))*var2[4] + (t1797*(-1.*t3321*t5279 - 1.*t3393*t5329 - 1.*t4956*t580 - 1.*t4963*t637 + t8202 + t8203) + t4979*t8221 + t720*(t3321*t4874 + t3393*t4900 + t2277*t4956 + t2212*t4963 + t8232 + t8233) + t5268*t8253)*var2[5] + (-0.15121*t5045 - 0.15121*t5058 + t1797*(-1.*t450*t4947 - 1.*t3316*t5239 - 1.*t3272*t5249 - 1.*t5133*t5268 - 1.*t4931*t563 + t8202) + t720*(t3316*t4856 + t3272*t4870 + t2077*t4931 + t1956*t4947 + t4979*t5133 + t8233) + t4979*t8285 + t5268*t8316)*var2[9];
  p_output1[35]=(t6009*t7753 + t6153*t7811 + t6204*(t2501*t6125 + t3767*t6133 + t3476*t6153 + t3555*t6172 + t8803 + t8806) + t2501*(-1.*t3476*t6009 - 1.*t3555*t6031 - 1.*t6125*t6204 - 1.*t6133*t807 + t8815 + t8819))*var2[3] + (t6022*t7885 + t6101*t7922 + t668*(t2344*t6086 + t3397*t6114 + t8652 + t8661 + t8803 + t8806) + t3815*(-1.*t3397*t6000 - 1.*t6086*t767 + t8637 + t8638 + t8815 + t8819))*var2[4] + (t5789*t8221 + t5973*t8253 + t1797*(-1.*t5671*t580 - 1.*t3321*t5982 - 1.*t3393*t5989 - 1.*t5663*t637 + t8637 + t8638) + t720*(t2212*t5663 + t2277*t5671 + t3321*t5734 + t3393*t5751 + t8652 + t8661))*var2[5] + (t5789*t8285 + t5973*t8316 + t1797*(-1.*t450*t5646 - 1.*t563*t5655 - 1.*t3272*t5858 - 1.*t3316*t5866 - 1.*t5133*t5973 + t8638) + t720*(t1956*t5646 + t2077*t5655 + t3272*t5711 + t3316*t5726 + t5133*t5789 + t8652))*var2[9] + (-1.*t5704*t8746 - 1.*t5849*t8754 - 1.*t1570*t8772 - 1.*t285*t8781 + 4.e-6*(-1.*t5677*t8746 - 1.*t5855*t8754 - 1.*t1709*t8772 - 1.*t433*t8781))*var2[10];
  p_output1[36]=t3482;
  p_output1[37]=t7712;
  p_output1[38]=t22*t3682 + t2758*t680;
  p_output1[39]=t6204*t7753 + t2501*t7811;
  p_output1[40]=t668*t7885 + t3815*t7922;
  p_output1[41]=t1797*t8221 + t720*t8253;
  p_output1[42]=-0.15121*t2635 - 0.15121*t2659 + t1797*t8285 + t720*t8316;
  p_output1[43]=1.e-6*t2509 - 0.28121*t2595 - 1.*t1570*t8746 - 1.*t285*t8754 + 4.e-6*(-1.*t1709*t8746 - 1.*t433*t8754);
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void J_dh_FrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
