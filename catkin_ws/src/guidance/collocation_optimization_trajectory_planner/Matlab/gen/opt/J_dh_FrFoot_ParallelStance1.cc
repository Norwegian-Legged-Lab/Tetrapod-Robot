/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:28:51 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t309;
  double t414;
  double t487;
  double t577;
  double t148;
  double t832;
  double t496;
  double t694;
  double t773;
  double t1347;
  double t1382;
  double t995;
  double t1086;
  double t1098;
  double t1146;
  double t1209;
  double t1402;
  double t1445;
  double t1514;
  double t1858;
  double t241;
  double t249;
  double t271;
  double t825;
  double t1275;
  double t1567;
  double t1569;
  double t145;
  double t1917;
  double t1928;
  double t2024;
  double t2126;
  double t2167;
  double t2204;
  double t139;
  double t2320;
  double t2324;
  double t2340;
  double t1788;
  double t2217;
  double t2223;
  double t2349;
  double t2396;
  double t2278;
  double t2359;
  double t2361;
  double t67;
  double t2414;
  double t2420;
  double t2433;
  double t2458;
  double t2483;
  double t2493;
  double t2513;
  double t2523;
  double t2531;
  double t2581;
  double t2593;
  double t2603;
  double t2664;
  double t2670;
  double t2674;
  double t2733;
  double t2736;
  double t2760;
  double t2790;
  double t2795;
  double t2836;
  double t2889;
  double t2891;
  double t2896;
  double t2899;
  double t2911;
  double t2913;
  double t2918;
  double t2942;
  double t2947;
  double t2950;
  double t2952;
  double t3001;
  double t3006;
  double t3007;
  double t3009;
  double t3075;
  double t3093;
  double t3095;
  double t3105;
  double t3177;
  double t3195;
  double t3203;
  double t3224;
  double t3225;
  double t3226;
  double t3309;
  double t3310;
  double t3311;
  double t3315;
  double t3318;
  double t3326;
  double t3329;
  double t3346;
  double t3350;
  double t3356;
  double t3378;
  double t3392;
  double t3393;
  double t3398;
  double t3400;
  double t3402;
  double t3413;
  double t3431;
  double t3432;
  double t3436;
  double t3437;
  double t3439;
  double t3441;
  double t3446;
  double t3449;
  double t3451;
  double t3453;
  double t3455;
  double t3459;
  double t3464;
  double t3467;
  double t3469;
  double t3473;
  double t3477;
  double t3088;
  double t3116;
  double t3124;
  double t3160;
  double t3205;
  double t3231;
  double t3240;
  double t3243;
  double t3249;
  double t3253;
  double t3256;
  double t3262;
  double t3275;
  double t3284;
  double t3290;
  double t3302;
  double t3304;
  double t3307;
  double t3308;
  double t3336;
  double t3389;
  double t3420;
  double t3423;
  double t3434;
  double t3458;
  double t3480;
  double t3488;
  double t3495;
  double t3504;
  double t3505;
  double t3512;
  double t3525;
  double t3527;
  double t3530;
  double t3581;
  double t3593;
  double t2765;
  double t2897;
  double t2920;
  double t2921;
  double t2971;
  double t3016;
  double t3020;
  double t3021;
  double t3022;
  double t3026;
  double t3029;
  double t3038;
  double t3039;
  double t3572;
  double t3574;
  double t3575;
  double t3553;
  double t3555;
  double t3560;
  double t3604;
  double t3618;
  double t3627;
  double t3424;
  double t3547;
  double t3548;
  double t3630;
  double t2940;
  double t3043;
  double t3053;
  double t3595;
  double t3644;
  double t3648;
  double t3650;
  double t3662;
  double t3760;
  double t3767;
  double t3768;
  double t3775;
  double t3721;
  double t3722;
  double t3724;
  double t3632;
  double t3634;
  double t3640;
  double t3651;
  double t3800;
  double t3801;
  double t3802;
  double t3881;
  double t3844;
  double t3729;
  double t3843;
  double t3847;
  double t3859;
  double t3862;
  double t3863;
  double t3925;
  double t3928;
  double t3929;
  double t3930;
  double t3932;
  double t3657;
  double t3659;
  double t3660;
  double t3733;
  double t3735;
  double t3737;
  double t4062;
  double t4065;
  double t4070;
  double t4071;
  double t4079;
  double t4080;
  double t4146;
  double t4148;
  double t4149;
  double t4151;
  double t4154;
  double t4173;
  double t4176;
  double t4179;
  double t4180;
  double t4190;
  double t4095;
  double t4097;
  double t4098;
  double t4085;
  double t4054;
  double t4055;
  double t4058;
  double t3887;
  double t3891;
  double t3903;
  double t4292;
  double t4294;
  double t4298;
  double t4222;
  double t4237;
  double t4238;
  double t4247;
  double t4252;
  double t4256;
  double t4211;
  double t4212;
  double t3943;
  double t3944;
  double t3945;
  double t4215;
  double t4258;
  double t4259;
  double t4266;
  double t4305;
  double t4309;
  double t4311;
  double t4319;
  double t4328;
  double t4410;
  double t4411;
  double t4414;
  double t4415;
  double t4418;
  double t4421;
  double t4424;
  double t4427;
  double t4456;
  double t4462;
  double t4468;
  double t4471;
  double t4475;
  double t4477;
  double t4479;
  double t4483;
  double t4485;
  double t4487;
  double t4490;
  double t4494;
  double t4548;
  double t4549;
  double t4550;
  double t4564;
  double t4572;
  double t4581;
  double t4478;
  double t4495;
  double t4496;
  double t4503;
  double t4506;
  double t4513;
  double t4530;
  double t4531;
  double t4538;
  double t4519;
  double t4523;
  double t4644;
  double t4541;
  double t4607;
  double t4709;
  double t4712;
  double t4713;
  double t4714;
  double t4727;
  double t4728;
  double t4734;
  double t4735;
  double t4441;
  double t4447;
  double t4450;
  double t4417;
  double t4430;
  double t4434;
  double t4586;
  double t4587;
  double t4588;
  double t4551;
  double t4582;
  double t4583;
  double t4605;
  double t4789;
  double t4790;
  double t4791;
  double t4525;
  double t4779;
  double t4781;
  double t4785;
  double t4809;
  double t4810;
  double t4811;
  double t4820;
  double t4821;
  double t4822;
  double t4765;
  double t4766;
  double t4768;
  double t4756;
  double t4757;
  double t4759;
  double t4744;
  double t4747;
  double t4760;
  double t4769;
  double t4771;
  double t4848;
  double t4850;
  double t4852;
  double t4855;
  double t4857;
  double t4859;
  double t4827;
  double t4829;
  double t4830;
  double t4800;
  double t4802;
  double t4803;
  double t4799;
  double t4823;
  double t4877;
  double t4878;
  double t4882;
  double t4826;
  double t4843;
  double t4873;
  double t4874;
  double t4875;
  double t4891;
  double t4892;
  double t4893;
  double t4896;
  double t4897;
  double t4899;
  double t4932;
  double t4936;
  double t4937;
  double t4943;
  double t4944;
  double t4945;
  double t4948;
  double t4949;
  double t4938;
  double t4946;
  double t4950;
  double t4956;
  double t4960;
  double t4962;
  double t4963;
  double t4967;
  double t4978;
  double t4989;
  double t4991;
  double t4992;
  double t4997;
  double t4999;
  double t5000;
  double t5001;
  double t4990;
  double t4998;
  double t5002;
  double t5003;
  double t5009;
  double t5010;
  double t5011;
  double t5012;
  double t4611;
  double t4615;
  double t4630;
  double t5041;
  double t5043;
  double t5049;
  double t5050;
  double t4958;
  double t4968;
  double t4969;
  double t4973;
  double t4974;
  double t4975;
  double t5027;
  double t5031;
  double t5032;
  double t5033;
  double t5034;
  double t4701;
  double t4703;
  double t4704;
  double t4707;
  double t5093;
  double t5096;
  double t5102;
  double t5069;
  double t5130;
  double t5131;
  double t5132;
  double t5135;
  double t5136;
  double t5137;
  double t5138;
  double t5147;
  double t5148;
  double t5149;
  double t5140;
  double t5142;
  double t5144;
  double t5091;
  double t5097;
  double t5104;
  double t5106;
  double t5110;
  double t5113;
  double t5116;
  double t5120;
  double t5200;
  double t5201;
  double t5203;
  double t5191;
  double t5194;
  double t5197;
  double t5183;
  double t5185;
  double t5187;
  double t5188;
  double t5198;
  double t5204;
  double t5205;
  double t5211;
  double t5212;
  double t5213;
  double t5218;
  double t5220;
  double t5224;
  double t5021;
  double t5022;
  double t5024;
  double t5004;
  double t5017;
  double t5018;
  double t5053;
  double t5238;
  double t5239;
  double t5241;
  double t5243;
  double t5248;
  double t5249;
  double t5260;
  double t5261;
  double t5262;
  double t5242;
  double t5273;
  double t5275;
  double t5276;
  double t5267;
  double t5272;
  double t5286;
  double t5287;
  double t5288;
  double t5290;
  double t5291;
  double t5292;
  double t5296;
  double t5297;
  double t5298;
  double t2629;
  double t2633;
  double t4402;
  double t4403;
  double t4404;
  double t4640;
  double t4649;
  double t4650;
  double t4651;
  double t5349;
  double t5354;
  double t5355;
  double t5357;
  double t3697;
  double t3702;
  double t3709;
  double t5317;
  double t5319;
  double t5320;
  double t3599;
  double t3601;
  double t3603;
  double t2699;
  double t5431;
  double t5449;
  double t5478;
  double t5479;
  double t5434;
  double t5435;
  double t5436;
  double t5499;
  double t5500;
  double t5452;
  double t5453;
  double t5454;
  double t5491;
  double t5492;
  double t5493;
  double t5506;
  double t5510;
  double t5512;
  double t5575;
  double t5577;
  double t5584;
  double t5586;
  double t5640;
  double t5651;
  double t4910;
  double t4912;
  double t4913;
  double t5649;
  double t5641;
  double t4750;
  double t4773;
  double t4774;
  double t5733;
  double t5747;
  double t4885;
  double t4886;
  double t4887;
  double t5757;
  double t5761;
  double t5658;
  double t5659;
  double t5660;
  double t5815;
  double t5710;
  double t5712;
  double t5713;
  double t5717;
  double t5824;
  double t5853;
  double t5854;
  double t5855;
  double t5859;
  double t5860;
  double t5861;
  double t5862;
  double t5871;
  double t5872;
  double t5873;
  double t5866;
  double t5868;
  double t5869;
  double t5303;
  double t5304;
  double t5306;
  double t5814;
  double t5910;
  double t5189;
  double t5207;
  double t5208;
  double t5916;
  double t5918;
  double t5391;
  double t5392;
  double t5624;
  double t5628;
  double t5629;
  double t5670;
  double t5671;
  double t5673;
  double t5675;
  double t5966;
  double t5967;
  double t5968;
  double t5970;
  double t6008;
  double t6026;
  double t6052;
  double t6053;
  double t6009;
  double t6010;
  double t6012;
  double t6066;
  double t6068;
  double t6027;
  double t6028;
  double t6030;
  double t6060;
  double t6061;
  double t6062;
  double t6076;
  double t6077;
  double t6079;
  double t6139;
  double t6141;
  double t6152;
  double t6153;
  double t6189;
  double t6208;
  double t6207;
  double t6190;
  double t6276;
  double t6283;
  double t6290;
  double t6295;
  double t6195;
  double t6196;
  double t6197;
  double t6215;
  double t6222;
  double t6223;
  double t6238;
  double t6240;
  double t6241;
  double t6243;
  double t6256;
  double t6257;
  double t6258;
  double t6259;
  double t6341;
  double t6351;
  double t6402;
  double t6404;
  double t6405;
  double t6406;
  double t6407;
  double t6409;
  double t6410;
  double t6393;
  double t6394;
  double t6395;
  double t6396;
  double t6397;
  double t6399;
  double t6400;
  double t6387;
  double t6388;
  double t6389;
  double t6390;
  double t6379;
  double t6380;
  double t6381;
  double t6384;
  double t6353;
  double t6340;
  double t6424;
  double t6426;
  double t6432;
  double t6435;
  double t5991;
  double t5992;
  double t5993;
  t309 = Cos(var1[11]);
  t414 = -1.*t309;
  t487 = 1. + t414;
  t577 = Sin(var1[11]);
  t148 = Cos(var1[10]);
  t832 = Sin(var1[10]);
  t496 = -1.7408e-8*t487;
  t694 = -3.999964e-6*t577;
  t773 = t496 + t694;
  t1347 = -1.*t148;
  t1382 = 1. + t1347;
  t995 = -1.000000000016*t487;
  t1086 = 1. + t995;
  t1098 = 0.999991*t1086;
  t1146 = 0.004352*t577;
  t1209 = t1098 + t1146;
  t1402 = -0.004352*t309;
  t1445 = 0.999991*t577;
  t1514 = t1402 + t1445;
  t1858 = Sin(var1[9]);
  t241 = -1. + t148;
  t249 = 1.6e-11*t241;
  t271 = 1. + t249;
  t825 = t271*t773;
  t1275 = -4.e-6*t832*t1209;
  t1567 = 4.e-6*t1382*t1514;
  t1569 = 0. + t825 + t1275 + t1567;
  t145 = Cos(var1[9]);
  t1917 = 4.e-6*t832*t773;
  t1928 = -1.000000000016*t1382;
  t2024 = 1. + t1928;
  t2126 = t2024*t1209;
  t2167 = -1.*t832*t1514;
  t2204 = 0. + t1917 + t2126 + t2167;
  t139 = Cos(var1[5]);
  t2320 = -1.*t1858*t1569;
  t2324 = t145*t2204;
  t2340 = 0. + t2320 + t2324;
  t1788 = t145*t1569;
  t2217 = t1858*t2204;
  t2223 = 0. + t1788 + t2217;
  t2349 = Sin(var1[5]);
  t2396 = Cos(var1[3]);
  t2278 = t139*t2223;
  t2359 = t2340*t2349;
  t2361 = 0. + t2278 + t2359;
  t67 = Sin(var1[3]);
  t2414 = Cos(var1[4]);
  t2420 = 4.e-6*t1382*t773;
  t2433 = t832*t1209;
  t2458 = t148*t1514;
  t2483 = 0. + t2420 + t2433 + t2458;
  t2493 = t2414*t2483;
  t2513 = Sin(var1[4]);
  t2523 = t139*t2340;
  t2531 = -1.*t2223*t2349;
  t2581 = 0. + t2523 + t2531;
  t2593 = -1.*t2513*t2581;
  t2603 = 0. + t2493 + t2593;
  t2664 = -1.*t2483*t2513;
  t2670 = -1.*t2414*t2581;
  t2674 = t2664 + t2670;
  t2733 = 0.004352*t1086;
  t2736 = -0.9999910000159999*t577;
  t2760 = t2733 + t2736;
  t2790 = 1.6e-11*t487;
  t2795 = -1. + t2790;
  t2836 = 4.e-6*t2795;
  t2889 = 3.999964e-6*t487;
  t2891 = -1.7408e-8*t577;
  t2896 = t2836 + t2889 + t2891;
  t2899 = -1. + t309;
  t2911 = 1.6e-11*t2899;
  t2913 = 0.999991*t309;
  t2918 = t2911 + t2913 + t1146;
  t2942 = -4.e-6*t832*t2760;
  t2947 = t271*t2896;
  t2950 = 4.e-6*t1382*t2918;
  t2952 = 0. + t2942 + t2947 + t2950;
  t3001 = t2024*t2760;
  t3006 = 4.e-6*t832*t2896;
  t3007 = -1.*t832*t2918;
  t3009 = 0. + t3001 + t3006 + t3007;
  t3075 = -1. + t2790 + t2911;
  t3093 = 4.e-6*t2899;
  t3095 = -4.e-6*t309;
  t3105 = t3093 + t3095;
  t3177 = t271*t3075;
  t3195 = 4.e-6*t1382*t3105;
  t3203 = t3177 + t3195;
  t3224 = 4.e-6*t3075*t832;
  t3225 = -1.*t3105*t832;
  t3226 = t3224 + t3225;
  t3309 = -1.26e-8*var1[11];
  t3310 = 1. + t2911;
  t3311 = -0.14871*t3310;
  t3315 = -1.64779999997447e-7*t487;
  t3318 = -1.59556e-7*t2899;
  t3326 = -1.199987999968e-6*t577;
  t3329 = t3309 + t3311 + t3315 + t3318 + t3326;
  t3346 = 0.803147*t1086;
  t3350 = 0.50315000001605*t487;
  t3356 = 0.00130540515936178*t577;
  t3378 = t3346 + t3350 + t3356;
  t3392 = -5.04e-14*var1[11];
  t3393 = -0.03988959484*t487;
  t3398 = 6.38224e-13*t2899;
  t3400 = -0.041195*t309;
  t3402 = 0.299996999992*t577;
  t3413 = t3392 + t3393 + t3398 + t3400 + t3402;
  t3431 = -1.*t145;
  t3432 = 1. + t3431;
  t3436 = -0.15121*t1858;
  t3437 = -1.2484e-7*var1[10];
  t3439 = 2.479936e-18*t1382;
  t3441 = -1.54996e-7*t241;
  t3446 = 1.124840000016e-6*t832;
  t3449 = t271*t3329;
  t3451 = -4.e-6*t832*t3378;
  t3453 = 4.e-6*t1382*t3413;
  t3455 = t3437 + t3439 + t3441 + t3446 + t3449 + t3451 + t3453;
  t3459 = 0.281210000008499*t1382;
  t3464 = -0.03874900000062*t832;
  t3467 = 4.e-6*t832*t3329;
  t3469 = t2024*t3378;
  t3473 = -1.*t832*t3413;
  t3477 = t3459 + t3464 + t3467 + t3469 + t3473;
  t3088 = 4.e-6*t1382*t3075;
  t3116 = t148*t3105;
  t3124 = t3088 + t3116;
  t3160 = t3124*t2414;
  t3205 = -1.*t3203*t1858;
  t3231 = t145*t3226;
  t3240 = t3205 + t3231;
  t3243 = t139*t3240;
  t3249 = t145*t3203;
  t3253 = t1858*t3226;
  t3256 = t3249 + t3253;
  t3262 = -1.*t3256*t2349;
  t3275 = t3243 + t3262;
  t3284 = -1.*t2513*t3275;
  t3290 = t3160 + t3284;
  t3302 = -4.9936e-13*var1[10];
  t3304 = -0.038749*t1382;
  t3307 = 6.19984e-13*t241;
  t3308 = -0.281210000004*t832;
  t3336 = 4.e-6*t1382*t3329;
  t3389 = t832*t3378;
  t3420 = t148*t3413;
  t3423 = 0. + t3302 + t3304 + t3307 + t3308 + t3336 + t3389 + t3420;
  t3434 = 0.15121*t3432;
  t3458 = -1.*t1858*t3455;
  t3480 = t145*t3477;
  t3488 = t3434 + t3436 + t3458 + t3480;
  t3495 = t139*t3488;
  t3504 = -0.15121*t3432;
  t3505 = t145*t3455;
  t3512 = t1858*t3477;
  t3525 = t3504 + t3436 + t3505 + t3512;
  t3527 = -1.*t3525*t2349;
  t3530 = 0. + t3495 + t3527;
  t3581 = t2414*t3423;
  t3593 = -1.*t2513*t3530;
  t2765 = t832*t2760;
  t2897 = 4.e-6*t1382*t2896;
  t2920 = t148*t2918;
  t2921 = 0. + t2765 + t2897 + t2920;
  t2971 = -1.*t1858*t2952;
  t3016 = t145*t3009;
  t3020 = 0. + t2971 + t3016;
  t3021 = t139*t3020;
  t3022 = t145*t2952;
  t3026 = t1858*t3009;
  t3029 = 0. + t3022 + t3026;
  t3038 = -1.*t3029*t2349;
  t3039 = 0. + t3021 + t3038;
  t3572 = t3124*t2513;
  t3574 = t2414*t3275;
  t3575 = t3572 + t3574;
  t3553 = t3423*t2513;
  t3555 = t2414*t3530;
  t3560 = 0. + t3553 + t3555;
  t3604 = 0. + t3581 + t3593;
  t3618 = t2414*t2921;
  t3627 = -1.*t2513*t3039;
  t3424 = -1.*t3423*t2513;
  t3547 = -1.*t2414*t3530;
  t3548 = t3424 + t3547;
  t3630 = t3618 + t3627;
  t2940 = t2921*t2513;
  t3043 = t2414*t3039;
  t3053 = 0. + t2940 + t3043;
  t3595 = t3581 + t3593;
  t3644 = t139*t3525;
  t3648 = t3488*t2349;
  t3650 = 0. + t3644 + t3648;
  t3662 = 0. + t3618 + t3627;
  t3760 = -1.*t139*t2223;
  t3767 = -1.*t2340*t2349;
  t3768 = t3760 + t3767;
  t3775 = t2523 + t2531;
  t3721 = t139*t3029;
  t3722 = t3020*t2349;
  t3724 = 0. + t3721 + t3722;
  t3632 = t139*t3256;
  t3634 = t3240*t2349;
  t3640 = t3632 + t3634;
  t3651 = t3640*t3650;
  t3800 = -1.*t139*t3525;
  t3801 = -1.*t3488*t2349;
  t3802 = t3800 + t3801;
  t3881 = t3021 + t3038;
  t3844 = t3495 + t3527;
  t3729 = -1.*t3724*t3650;
  t3843 = t3275*t3650;
  t3847 = t3640*t3844;
  t3859 = -1.*t139*t3256;
  t3862 = -1.*t3240*t2349;
  t3863 = t3859 + t3862;
  t3925 = -1.*t3881*t3650;
  t3928 = -1.*t3724*t3844;
  t3929 = -1.*t139*t3029;
  t3930 = -1.*t3020*t2349;
  t3932 = t3929 + t3930;
  t3657 = t3575*t3560;
  t3659 = t3290*t3604;
  t3660 = t3651 + t3657 + t3659;
  t3733 = -1.*t3053*t3560;
  t3735 = -1.*t3662*t3604;
  t3737 = t3729 + t3733 + t3735;
  t4062 = -0.15121*t145;
  t4065 = t4062 + t3436 + t3458 + t3480;
  t4070 = 0.15121*t1858;
  t4071 = -1.*t145*t3455;
  t4079 = -1.*t1858*t3477;
  t4080 = t4062 + t4070 + t4071 + t4079;
  t4146 = -1.*t145*t1569;
  t4148 = -1.*t1858*t2204;
  t4149 = t4146 + t4148;
  t4151 = t139*t4149;
  t4154 = t2320 + t2324;
  t4173 = -1.*t4154*t2349;
  t4176 = t4151 + t4173;
  t4179 = t139*t4154;
  t4180 = t4149*t2349;
  t4190 = t4179 + t4180;
  t4095 = -1.*t145*t3203;
  t4097 = -1.*t1858*t3226;
  t4098 = t4095 + t4097;
  t4085 = t2971 + t3016;
  t4054 = -1.*t145*t2952;
  t4055 = -1.*t1858*t3009;
  t4058 = t4054 + t4055;
  t3887 = t3124*t3423;
  t3891 = t3275*t3530;
  t3903 = t3887 + t3651 + t3891;
  t4292 = t139*t4085;
  t4294 = t4058*t2349;
  t4298 = t4292 + t4294;
  t4222 = t139*t4080;
  t4237 = -1.*t4065*t2349;
  t4238 = t4222 + t4237;
  t4247 = t139*t4065;
  t4252 = t4080*t2349;
  t4256 = t4247 + t4252;
  t4211 = t4098*t2349;
  t4212 = t3243 + t4211;
  t3943 = -1.*t2921*t3423;
  t3944 = -1.*t3039*t3530;
  t3945 = t3943 + t3729 + t3944;
  t4215 = t4212*t3650;
  t4258 = t3640*t4256;
  t4259 = t139*t4098;
  t4266 = t4259 + t3862;
  t4305 = -1.*t4298*t3650;
  t4309 = -1.*t3724*t4256;
  t4311 = t139*t4058;
  t4319 = -1.*t4085*t2349;
  t4328 = t4311 + t4319;
  t4410 = -1.000000000016*t832*t2760;
  t4411 = 4.e-6*t148*t2896;
  t4414 = -1.*t148*t2918;
  t4415 = t4410 + t4411 + t4414;
  t4418 = -4.e-6*t148*t2760;
  t4421 = -1.6e-11*t832*t2896;
  t4424 = 4.e-6*t832*t2918;
  t4427 = t4418 + t4421 + t4424;
  t4456 = -0.03874900000062*t148;
  t4462 = 0.281210000008499*t832;
  t4468 = 4.e-6*t148*t3329;
  t4471 = -1.000000000016*t832*t3378;
  t4475 = -1.*t148*t3413;
  t4477 = t4456 + t4462 + t4468 + t4471 + t4475;
  t4479 = 1.124840000016e-6*t148;
  t4483 = 1.5499600000248e-7*t832;
  t4485 = -1.6e-11*t832*t3329;
  t4487 = -4.e-6*t148*t3378;
  t4490 = 4.e-6*t832*t3413;
  t4494 = -1.2484e-7 + t4479 + t4483 + t4485 + t4487 + t4490;
  t4548 = 4.e-6*t148*t3075;
  t4549 = -1.*t148*t3105;
  t4550 = t4548 + t4549;
  t4564 = -1.6e-11*t3075*t832;
  t4572 = 4.e-6*t3105*t832;
  t4581 = t4564 + t4572;
  t4478 = t1858*t4477;
  t4495 = t145*t4494;
  t4496 = t4478 + t4495;
  t4503 = t145*t4477;
  t4506 = -1.*t1858*t4494;
  t4513 = t4503 + t4506;
  t4530 = -0.281210000004*t148;
  t4531 = t148*t3378;
  t4538 = -4.9936e-13 + t4530 + t3464 + t3467 + t4531 + t3473;
  t4519 = t148*t2760;
  t4523 = t4519 + t3006 + t3007;
  t4644 = t3302 + t3304 + t3307 + t3308 + t3336 + t3389 + t3420;
  t4541 = -1.*t2921*t4538;
  t4607 = t3124*t4538;
  t4709 = 4.e-6*t148*t773;
  t4712 = -1.000000000016*t832*t1209;
  t4713 = -1.*t148*t1514;
  t4714 = t4709 + t4712 + t4713;
  t4727 = -1.6e-11*t832*t773;
  t4728 = -4.e-6*t148*t1209;
  t4734 = 4.e-6*t832*t1514;
  t4735 = t4727 + t4728 + t4734;
  t4441 = t1858*t4415;
  t4447 = t145*t4427;
  t4450 = t4441 + t4447;
  t4417 = t145*t4415;
  t4430 = -1.*t1858*t4427;
  t4434 = t4417 + t4430;
  t4586 = t4550*t1858;
  t4587 = t145*t4581;
  t4588 = t4586 + t4587;
  t4551 = t145*t4550;
  t4582 = -1.*t1858*t4581;
  t4583 = t4551 + t4582;
  t4605 = t3226*t3423;
  t4789 = t139*t4588;
  t4790 = t4583*t2349;
  t4791 = t4789 + t4790;
  t4525 = -1.*t4523*t3423;
  t4779 = t139*t4450;
  t4781 = t4434*t2349;
  t4785 = t4779 + t4781;
  t4809 = t139*t4513;
  t4810 = -1.*t4496*t2349;
  t4811 = t4809 + t4810;
  t4820 = t139*t4496;
  t4821 = t4513*t2349;
  t4822 = t4820 + t4821;
  t4765 = t1858*t4714;
  t4766 = t145*t4735;
  t4768 = t4765 + t4766;
  t4756 = t145*t4714;
  t4757 = -1.*t1858*t4735;
  t4759 = t4756 + t4757;
  t4744 = t148*t1209;
  t4747 = t1917 + t4744 + t2167;
  t4760 = t139*t4759;
  t4769 = -1.*t4768*t2349;
  t4771 = t4760 + t4769;
  t4848 = t139*t4768;
  t4850 = t4759*t2349;
  t4852 = t4848 + t4850;
  t4855 = t2414*t4747;
  t4857 = -1.*t2513*t4771;
  t4859 = t4855 + t4857;
  t4827 = t139*t4434;
  t4829 = -1.*t4450*t2349;
  t4830 = t4827 + t4829;
  t4800 = t139*t4583;
  t4802 = -1.*t4588*t2349;
  t4803 = t4800 + t4802;
  t4799 = t4791*t3650;
  t4823 = t3640*t4822;
  t4877 = t3226*t2513;
  t4878 = t2414*t4803;
  t4882 = t4877 + t4878;
  t4826 = -1.*t4785*t3650;
  t4843 = -1.*t3724*t4822;
  t4873 = t4523*t2513;
  t4874 = t2414*t4830;
  t4875 = t4873 + t4874;
  t4891 = t4538*t2513;
  t4892 = t2414*t4811;
  t4893 = t4891 + t4892;
  t4896 = t2414*t4538;
  t4897 = -1.*t2513*t4811;
  t4899 = t4896 + t4897;
  t4932 = 0.00130540515936178*t309;
  t4936 = -0.2999969999968001*t577;
  t4937 = t4932 + t4936;
  t4943 = -1.199987999968e-6*t309;
  t4944 = -5.2216206374471e-9*t577;
  t4945 = -1.26e-8 + t4943 + t4944;
  t4948 = 0.299996999992*t309;
  t4949 = -5.04e-14 + t4948 + t3356;
  t4938 = -4.e-6*t832*t4937;
  t4946 = t271*t4945;
  t4950 = 4.e-6*t1382*t4949;
  t4956 = t4938 + t4946 + t4950;
  t4960 = t2024*t4937;
  t4962 = 4.e-6*t832*t4945;
  t4963 = -1.*t832*t4949;
  t4967 = t4960 + t4962 + t4963;
  t4978 = 0.004352*t309;
  t4989 = t4978 + t2736;
  t4991 = -0.9999910000159999*t309;
  t4992 = -0.00435200000006963*t577;
  t4997 = t4991 + t4992;
  t4999 = -1.7408e-8*t309;
  t5000 = 3.999964000064e-6*t577;
  t5001 = t4999 + t5000;
  t4990 = 4.e-6*t1382*t4989;
  t4998 = -4.e-6*t832*t4997;
  t5002 = t271*t5001;
  t5003 = t4990 + t4998 + t5002;
  t5009 = -1.*t832*t4989;
  t5010 = t2024*t4997;
  t5011 = 4.e-6*t832*t5001;
  t5012 = t5009 + t5010 + t5011;
  t4611 = t3240*t3488;
  t4615 = t3256*t3525;
  t4630 = t4611 + t4615 + t3887;
  t5041 = t148*t4989;
  t5043 = t832*t4997;
  t5049 = 4.e-6*t1382*t5001;
  t5050 = t5041 + t5043 + t5049;
  t4958 = -1.*t1858*t4956;
  t4968 = t145*t4967;
  t4969 = t4958 + t4968;
  t4973 = t145*t4956;
  t4974 = t1858*t4967;
  t4975 = t4973 + t4974;
  t5027 = t832*t4937;
  t5031 = 4.e-6*t1382*t4945;
  t5032 = t148*t4949;
  t5033 = t5027 + t5031 + t5032;
  t5034 = -1.*t5033*t2921;
  t4701 = t3203*t3455;
  t4703 = t3124*t4644;
  t4704 = t3226*t3477;
  t4707 = t4701 + t4703 + t4704;
  t5093 = -3.999964e-6*t309;
  t5096 = t5093 + t2891;
  t5102 = t2913 + t1146;
  t5069 = t3124*t5033;
  t5130 = -1.*t2760*t4937;
  t5131 = -1.*t2896*t4945;
  t5132 = -1.*t3329*t5001;
  t5135 = -1.*t4997*t3378;
  t5136 = -1.*t4949*t2918;
  t5137 = -1.*t4989*t3413;
  t5138 = t5130 + t5131 + t5132 + t5135 + t5136 + t5137;
  t5147 = t3075*t4945;
  t5148 = t3105*t4949;
  t5149 = t5147 + t5148;
  t5140 = t3075*t3329;
  t5142 = t3105*t3413;
  t5144 = t5140 + t5142;
  t5091 = -4.e-6*t832*t4989;
  t5097 = t271*t5096;
  t5104 = 4.e-6*t1382*t5102;
  t5106 = t5091 + t5097 + t5104;
  t5110 = t2024*t4989;
  t5113 = 4.e-6*t832*t5096;
  t5116 = -1.*t832*t5102;
  t5120 = t5110 + t5113 + t5116;
  t5200 = t145*t5106;
  t5201 = t1858*t5120;
  t5203 = t5200 + t5201;
  t5191 = -1.*t1858*t5106;
  t5194 = t145*t5120;
  t5197 = t5191 + t5194;
  t5183 = t832*t4989;
  t5185 = 4.e-6*t1382*t5096;
  t5187 = t148*t5102;
  t5188 = t5183 + t5185 + t5187;
  t5198 = t139*t5197;
  t5204 = -1.*t5203*t2349;
  t5205 = t5198 + t5204;
  t5211 = t139*t5203;
  t5212 = t5197*t2349;
  t5213 = t5211 + t5212;
  t5218 = t2414*t5188;
  t5220 = -1.*t2513*t5205;
  t5224 = t5218 + t5220;
  t5021 = t145*t5003;
  t5022 = t1858*t5012;
  t5024 = t5021 + t5022;
  t5004 = -1.*t1858*t5003;
  t5017 = t145*t5012;
  t5018 = t5004 + t5017;
  t5053 = -1.*t5050*t3423;
  t5238 = t139*t4975;
  t5239 = t4969*t2349;
  t5241 = t5238 + t5239;
  t5243 = t139*t4969;
  t5248 = -1.*t4975*t2349;
  t5249 = t5243 + t5248;
  t5260 = t139*t5024;
  t5261 = t5018*t2349;
  t5262 = t5260 + t5261;
  t5242 = t3640*t5241;
  t5273 = t139*t5018;
  t5275 = -1.*t5024*t2349;
  t5276 = t5273 + t5275;
  t5267 = -1.*t5241*t3724;
  t5272 = -1.*t5262*t3650;
  t5286 = t5033*t2513;
  t5287 = t2414*t5249;
  t5288 = t5286 + t5287;
  t5290 = t2414*t5033;
  t5291 = -1.*t2513*t5249;
  t5292 = t5290 + t5291;
  t5296 = t5050*t2513;
  t5297 = t2414*t5276;
  t5298 = t5296 + t5297;
  t2629 = t2396*t2361;
  t2633 = -1.*t67*t2603;
  t4402 = -1.*t3020*t3488;
  t4403 = -1.*t3029*t3525;
  t4404 = t4402 + t4403 + t3943;
  t4640 = -1.*t2952*t3455;
  t4649 = -1.*t2921*t4644;
  t4650 = -1.*t3009*t3477;
  t4651 = t4640 + t4649 + t4650;
  t5349 = -1.*t3329*t2896;
  t5354 = -1.*t2760*t3378;
  t5355 = -1.*t2918*t3413;
  t5357 = t5349 + t5354 + t5355;
  t3697 = -1.*t2921*t2513;
  t3702 = -1.*t2414*t3039;
  t3709 = t3697 + t3702;
  t5317 = t2483*t2513;
  t5319 = t2414*t2581;
  t5320 = 0. + t5317 + t5319;
  t3599 = -1.*t3124*t2513;
  t3601 = -1.*t2414*t3275;
  t3603 = t3599 + t3601;
  t2699 = t2493 + t2593;
  t5431 = -1.*t3640*t3650;
  t5449 = t3650*t2361;
  t5478 = -1.*t3275*t3650;
  t5479 = -1.*t3640*t3844;
  t5434 = -1.*t3575*t3560;
  t5435 = -1.*t3290*t3604;
  t5436 = t5431 + t5434 + t5435;
  t5499 = t3844*t2361;
  t5500 = t3650*t3775;
  t5452 = t3560*t5320;
  t5453 = t3604*t2603;
  t5454 = t5449 + t5452 + t5453;
  t5491 = -1.*t3124*t3423;
  t5492 = -1.*t3275*t3530;
  t5493 = t5491 + t5431 + t5492;
  t5506 = t3423*t2483;
  t5510 = t3530*t2581;
  t5512 = t5506 + t5449 + t5510;
  t5575 = -1.*t4212*t3650;
  t5577 = -1.*t3640*t4256;
  t5584 = t4256*t2361;
  t5586 = t3650*t4190;
  t5640 = t4538*t2483;
  t5651 = -1.*t3124*t4538;
  t4910 = t2414*t4523;
  t4912 = -1.*t2513*t4830;
  t4913 = t4910 + t4912;
  t5649 = -1.*t3226*t3423;
  t5641 = t3423*t4747;
  t4750 = t4747*t2513;
  t4773 = t2414*t4771;
  t4774 = t4750 + t4773;
  t5733 = -1.*t4791*t3650;
  t5747 = -1.*t3640*t4822;
  t4885 = t2414*t3226;
  t4886 = -1.*t2513*t4803;
  t4887 = t4885 + t4886;
  t5757 = t4822*t2361;
  t5761 = t3650*t4852;
  t5658 = -1.*t3240*t3488;
  t5659 = -1.*t3256*t3525;
  t5660 = t5658 + t5659 + t5491;
  t5815 = t5033*t2483;
  t5710 = -1.*t3203*t3455;
  t5712 = -1.*t3124*t4644;
  t5713 = -1.*t3226*t3477;
  t5717 = t5710 + t5712 + t5713;
  t5824 = -1.*t3124*t5033;
  t5853 = t3329*t5096;
  t5854 = t773*t4945;
  t5855 = t4989*t3378;
  t5859 = t4937*t1209;
  t5860 = t5102*t3413;
  t5861 = t4949*t1514;
  t5862 = t5853 + t5854 + t5855 + t5859 + t5860 + t5861;
  t5871 = -1.*t3075*t4945;
  t5872 = -1.*t3105*t4949;
  t5873 = t5871 + t5872;
  t5866 = -1.*t3075*t3329;
  t5868 = -1.*t3105*t3413;
  t5869 = t5866 + t5868;
  t5303 = t2414*t5050;
  t5304 = -1.*t2513*t5276;
  t5306 = t5303 + t5304;
  t5814 = t5188*t3423;
  t5910 = -1.*t3640*t5241;
  t5189 = t5188*t2513;
  t5207 = t2414*t5205;
  t5208 = t5189 + t5207;
  t5916 = t5213*t3650;
  t5918 = t5241*t2361;
  t5391 = t2396*t3724;
  t5392 = -1.*t67*t3662;
  t5624 = t3488*t2340;
  t5628 = t3525*t2223;
  t5629 = t5624 + t5628 + t5506;
  t5670 = t3455*t1569;
  t5671 = t4644*t2483;
  t5673 = t3477*t2204;
  t5675 = t5670 + t5671 + t5673;
  t5966 = t773*t3329;
  t5967 = t3378*t1209;
  t5968 = t3413*t1514;
  t5970 = t5966 + t5967 + t5968;
  t6008 = t3724*t3650;
  t6026 = -1.*t3650*t2361;
  t6052 = t3881*t3650;
  t6053 = t3724*t3844;
  t6009 = t3053*t3560;
  t6010 = t3662*t3604;
  t6012 = t6008 + t6009 + t6010;
  t6066 = -1.*t3844*t2361;
  t6068 = -1.*t3650*t3775;
  t6027 = -1.*t3560*t5320;
  t6028 = -1.*t3604*t2603;
  t6030 = t6026 + t6027 + t6028;
  t6060 = t2921*t3423;
  t6061 = t3039*t3530;
  t6062 = t6060 + t6008 + t6061;
  t6076 = -1.*t3423*t2483;
  t6077 = -1.*t3530*t2581;
  t6079 = t6076 + t6026 + t6077;
  t6139 = t4298*t3650;
  t6141 = t3724*t4256;
  t6152 = -1.*t4256*t2361;
  t6153 = -1.*t3650*t4190;
  t6189 = -1.*t4538*t2483;
  t6208 = t2921*t4538;
  t6207 = t4523*t3423;
  t6190 = -1.*t3423*t4747;
  t6276 = t4785*t3650;
  t6283 = t3724*t4822;
  t6290 = -1.*t4822*t2361;
  t6295 = -1.*t3650*t4852;
  t6195 = -1.*t3488*t2340;
  t6196 = -1.*t3525*t2223;
  t6197 = t6195 + t6196 + t6076;
  t6215 = t3020*t3488;
  t6222 = t3029*t3525;
  t6223 = t6215 + t6222 + t6060;
  t6238 = -1.*t3455*t1569;
  t6240 = -1.*t4644*t2483;
  t6241 = -1.*t3477*t2204;
  t6243 = t6238 + t6240 + t6241;
  t6256 = t2952*t3455;
  t6257 = t2921*t4644;
  t6258 = t3009*t3477;
  t6259 = t6256 + t6257 + t6258;
  t6341 = -1.*t5033*t2483;
  t6351 = t5033*t2921;
  t6402 = t2760*t4937;
  t6404 = t2896*t4945;
  t6405 = t3329*t5001;
  t6406 = t4997*t3378;
  t6407 = t4949*t2918;
  t6409 = t4989*t3413;
  t6410 = t6402 + t6404 + t6405 + t6406 + t6407 + t6409;
  t6393 = -1.*t3329*t5096;
  t6394 = -1.*t773*t4945;
  t6395 = -1.*t4989*t3378;
  t6396 = -1.*t4937*t1209;
  t6397 = -1.*t5102*t3413;
  t6399 = -1.*t4949*t1514;
  t6400 = t6393 + t6394 + t6395 + t6396 + t6397 + t6399;
  t6387 = t3329*t2896;
  t6388 = t2760*t3378;
  t6389 = t2918*t3413;
  t6390 = t6387 + t6388 + t6389;
  t6379 = -1.*t773*t3329;
  t6380 = -1.*t3378*t1209;
  t6381 = -1.*t3413*t1514;
  t6384 = t6379 + t6380 + t6381;
  t6353 = t5050*t3423;
  t6340 = -1.*t5188*t3423;
  t6424 = t5241*t3724;
  t6426 = t5262*t3650;
  t6432 = -1.*t5213*t3650;
  t6435 = -1.*t5241*t2361;
  t5991 = t2396*t3640;
  t5992 = -1.*t67*t3290;
  t5993 = t5991 + t5992;
  p_output1[0]=(-1.*t2396*t2603 - 1.*t2361*t67)*var2[1] + (t2629 + t2633)*var2[2];
  p_output1[1]=t2699*var2[0] - 1.*t2674*t67*var2[1] + t2396*t2674*var2[2] + (t3053*(t3290*t3548 + t3290*t3560 + t3575*t3595 + t3603*t3604) + t3630*t3660 + t3575*(-1.*t3053*t3595 - 1.*t3560*t3630 - 1.*t3548*t3662 - 1.*t3604*t3709) + t3290*t3737)*var2[3];
  p_output1[2]=t2414*t3768*var2[0] + (t2396*t3775 + t2513*t3768*t67)*var2[1] + (-1.*t2396*t2513*t3768 + t3775*t67)*var2[2] + (t2414*t3737*t3863 + t3053*(-1.*t2513*t3290*t3802 + t2414*t3575*t3802 + t3843 + t3847 + t2414*t3560*t3863 - 1.*t2513*t3604*t3863) + t2414*t3660*t3932 + t3575*(-1.*t2414*t3053*t3802 + t2513*t3662*t3802 + t3925 + t3928 - 1.*t2414*t3560*t3932 + t2513*t3604*t3932))*var2[3] + (t3724*(t3275*t3802 + t3843 + t3847 + t3530*t3863) + t3881*t3903 + t3640*(-1.*t3039*t3802 + t3925 + t3928 - 1.*t3530*t3932) + t3275*t3945)*var2[4];
  p_output1[3]=t2414*t4176*var2[0] + (t2396*t4190 + t2513*t4176*t67)*var2[1] + (-1.*t2396*t2513*t4176 + t4190*t67)*var2[2] + (t2414*t3737*t4266 + t3053*(t4215 - 1.*t2513*t3290*t4238 + t2414*t3575*t4238 + t4258 + t2414*t3560*t4266 - 1.*t2513*t3604*t4266) + t2414*t3660*t4328 + t3575*(-1.*t2414*t3053*t4238 + t2513*t3662*t4238 + t4305 + t4309 - 1.*t2414*t3560*t4328 + t2513*t3604*t4328))*var2[3] + (t3945*t4212 + t3724*(t4215 + t3275*t4238 + t4258 + t3530*t4266) + t3903*t4298 + t3640*(-1.*t3039*t4238 + t4305 + t4309 - 1.*t3530*t4328))*var2[4] + (t3124*(-1.*t3488*t4058 - 1.*t3029*t4065 - 1.*t3020*t4080 - 1.*t3525*t4085) + t2921*(t3240*t3525 + t3256*t4065 + t3240*t4080 + t3488*t4098))*var2[5];
  p_output1[4]=t4774*var2[0] + (t2396*t4852 - 1.*t4859*t67)*var2[1] + (t2396*t4859 + t4852*t67)*var2[2] + (t3660*t4875 + t3737*t4882 + t3053*(t4799 + t4823 + t3560*t4882 + t3604*t4887 + t3575*t4893 + t3290*t4899) + t3575*(t4826 + t4843 - 1.*t3560*t4875 - 1.*t3053*t4893 - 1.*t3662*t4899 - 1.*t3604*t4913))*var2[3] + (t3903*t4785 + t3945*t4791 + t3724*(t4605 + t4607 + t4799 + t3530*t4803 + t3275*t4811 + t4823) + t3640*(t4525 + t4541 - 1.*t3039*t4811 + t4826 - 1.*t3530*t4830 + t4843))*var2[4] + (t3226*t4404 + t3124*(-1.*t3488*t4434 - 1.*t3525*t4450 - 1.*t3029*t4496 - 1.*t3020*t4513 + t4525 + t4541) + t2921*(t3256*t4496 + t3240*t4513 + t3488*t4583 + t3525*t4588 + t4605 + t4607) + t4523*t4630)*var2[5] + (t2921*(t3226*t4477 + t3203*t4494 + t3477*t4550 + t3455*t4581 + t4607 + t3226*t4644) + t3124*(-1.*t3477*t4415 - 1.*t3455*t4427 - 1.*t3009*t4477 - 1.*t2952*t4494 + t4541 - 1.*t4523*t4644) + t3226*t4651 + t4523*t4707 - 0.15121*t4714 - 0.15121*t4735)*var2[9];
  p_output1[5]=t5208*var2[0] + (t2396*t5213 - 1.*t5224*t67)*var2[1] + (t2396*t5224 + t5213*t67)*var2[2] + (t3053*(t5242 + t3575*t5288 + t3290*t5292) + t3660*t5298 + t3575*(t5267 + t5272 - 1.*t3053*t5288 - 1.*t3662*t5292 - 1.*t3560*t5298 - 1.*t3604*t5306))*var2[3] + (t3724*(t5069 + t5242 + t3275*t5249) + t3903*t5262 + t3640*(t5034 + t5053 - 1.*t3039*t5249 + t5267 + t5272 - 1.*t3530*t5276))*var2[4] + (t4630*t5050 + t3124*(-1.*t3020*t4969 - 1.*t3029*t4975 - 1.*t3488*t5018 - 1.*t3525*t5024 + t5034 + t5053) + t2921*(t3240*t4969 + t3256*t4975 + t5069))*var2[5] + (t4707*t5050 + t3124*(-1.*t2952*t4956 - 1.*t3009*t4967 - 1.*t3455*t5003 - 1.*t3477*t5012 + t5034 - 1.*t4644*t5050) + t2921*(t3203*t4956 + t3226*t4967 + t5069) - 0.15121*t5106 - 0.15121*t5120)*var2[9] + (-0.038749*t4989 + 1.e-6*t5096 - 0.28121*t5102 - 1.*t3075*t5138 - 1.*t5001*t5144 - 1.*t2896*t5149 + 4.e-6*(-1.*t3105*t5138 - 1.*t4989*t5144 - 1.*t2918*t5149))*var2[10];
  p_output1[6]=t5320;
  p_output1[7]=0. + t2629 + t2633;
  p_output1[8]=0. + t2396*t2603 + t2361*t67;
  p_output1[9]=t3053*t3660 + t3575*t3737;
  p_output1[10]=t3724*t3903 + t3640*t3945;
  p_output1[11]=t3124*t4404 + t2921*t4630;
  p_output1[12]=-0.15121*t1569 - 0.15121*t2204 + t3124*t4651 + t2921*t4707;
  p_output1[13]=-0.038749*t1209 - 0.28121*t1514 - 1.*t2896*t5144 - 1.*t3075*t5357 + 4.e-6*(-1.*t2918*t5144 - 1.*t3105*t5357) + 1.e-6*t773;
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t2396*t3662 - 1.*t3724*t67)*var2[1] + (t5391 + t5392)*var2[2];
  p_output1[16]=t3630*var2[0] - 1.*t3709*t67*var2[1] + t2396*t3709*var2[2] + ((-1.*t3290*t3548 - 1.*t3290*t3560 - 1.*t3575*t3595 - 1.*t3603*t3604)*t5320 + t3575*(t2603*t3548 + t2699*t3560 + t2674*t3604 + t3595*t5320) + t2699*t5436 + t3290*t5454)*var2[3];
  p_output1[17]=t2414*t3932*var2[0] + (t2396*t3881 + t2513*t3932*t67)*var2[1] + (-1.*t2396*t2513*t3932 + t3881*t67)*var2[2] + (t2414*t3768*t5436 + t2414*t3863*t5454 + t5320*(t2513*t3290*t3802 - 1.*t2414*t3575*t3802 - 1.*t2414*t3560*t3863 + t2513*t3604*t3863 + t5478 + t5479) + t3575*(t2414*t3560*t3768 - 1.*t2513*t3604*t3768 - 1.*t2513*t2603*t3802 + t2414*t3802*t5320 + t5499 + t5500))*var2[3] + (t2361*(-1.*t3275*t3802 - 1.*t3530*t3863 + t5478 + t5479) + t3775*t5493 + t3640*(t3530*t3768 + t2581*t3802 + t5499 + t5500) + t3275*t5512)*var2[4];
  p_output1[18]=t2414*t4328*var2[0] + (t2396*t4298 + t2513*t4328*t67)*var2[1] + (-1.*t2396*t2513*t4328 + t4298*t67)*var2[2] + (t2414*t4176*t5436 + t2414*t4266*t5454 + t5320*(t2513*t3290*t4238 - 1.*t2414*t3575*t4238 - 1.*t2414*t3560*t4266 + t2513*t3604*t4266 + t5575 + t5577) + t3575*(t2414*t3560*t4176 - 1.*t2513*t3604*t4176 - 1.*t2513*t2603*t4238 + t2414*t4238*t5320 + t5584 + t5586))*var2[3] + (t4190*t5493 + t4212*t5512 + t2361*(-1.*t3275*t4238 - 1.*t3530*t4266 + t5575 + t5577) + t3640*(t3530*t4176 + t2581*t4238 + t5584 + t5586))*var2[4] + (t2483*(-1.*t3240*t3525 - 1.*t3256*t4065 - 1.*t3240*t4080 - 1.*t3488*t4098) + t3124*(t2223*t4065 + t2340*t4080 + t3488*t4149 + t3525*t4154))*var2[5];
  p_output1[19]=t4875*var2[0] + (t2396*t4785 - 1.*t4913*t67)*var2[1] + (t2396*t4913 + t4785*t67)*var2[2] + (t4774*t5436 + t4882*t5454 + t5320*(-1.*t3560*t4882 - 1.*t3604*t4887 - 1.*t3575*t4893 - 1.*t3290*t4899 + t5733 + t5747) + t3575*(t3560*t4774 + t3604*t4859 + t2603*t4899 + t4893*t5320 + t5757 + t5761))*var2[3] + (t4852*t5493 + t4791*t5512 + t2361*(-1.*t3530*t4803 - 1.*t3275*t4811 + t5649 + t5651 + t5733 + t5747) + t3640*(t3530*t4771 + t2581*t4811 + t5640 + t5641 + t5757 + t5761))*var2[4] + (t3226*t5629 + t3124*(t2223*t4496 + t2340*t4513 + t3488*t4759 + t3525*t4768 + t5640 + t5641) + t2483*(-1.*t3256*t4496 - 1.*t3240*t4513 - 1.*t3488*t4583 - 1.*t3525*t4588 + t5649 + t5651) + t4747*t5660)*var2[5] + (-0.15121*t4415 - 0.15121*t4427 + t3124*(t2204*t4477 + t1569*t4494 + t3477*t4714 + t3455*t4735 + t4644*t4747 + t5640) + t2483*(-1.*t3226*t4477 - 1.*t3203*t4494 - 1.*t3477*t4550 - 1.*t3455*t4581 - 1.*t3226*t4644 + t5651) + t3226*t5675 + t4747*t5717)*var2[9];
  p_output1[20]=t5298*var2[0] + (t2396*t5262 - 1.*t5306*t67)*var2[1] + (t2396*t5306 + t5262*t67)*var2[2] + (t5208*t5436 + t5320*(-1.*t3575*t5288 - 1.*t3290*t5292 + t5910) + t3575*(t3560*t5208 + t3604*t5224 + t2603*t5292 + t5288*t5320 + t5916 + t5918))*var2[3] + (t5213*t5493 + t2361*(-1.*t3275*t5249 + t5824 + t5910) + t3640*(t3530*t5205 + t2581*t5249 + t5814 + t5815 + t5916 + t5918))*var2[4] + (t5188*t5660 + t3124*(t2340*t4969 + t2223*t4975 + t3488*t5197 + t3525*t5203 + t5814 + t5815) + t2483*(-1.*t3240*t4969 - 1.*t3256*t4975 + t5824))*var2[5] + (-0.15121*t5003 - 0.15121*t5012 + t5188*t5717 + t3124*(t1569*t4956 + t2204*t4967 + t3455*t5106 + t3477*t5120 + t4644*t5188 + t5815) + t2483*(-1.*t3203*t4956 - 1.*t3226*t4967 + t5824))*var2[9] + (-0.28121*t4989 - 0.038749*t4997 + 1.e-6*t5001 - 1.*t3075*t5862 - 1.*t5096*t5869 + 4.e-6*(-1.*t3105*t5862 - 1.*t5102*t5869 - 1.*t1514*t5873) - 1.*t5873*t773)*var2[10];
  p_output1[21]=t3053;
  p_output1[22]=0. + t5391 + t5392;
  p_output1[23]=0. + t2396*t3662 + t3724*t67;
  p_output1[24]=t5320*t5436 + t3575*t5454;
  p_output1[25]=t2361*t5493 + t3640*t5512;
  p_output1[26]=t3124*t5629 + t2483*t5660;
  p_output1[27]=-0.15121*t2952 - 0.15121*t3009 + t3124*t5675 + t2483*t5717;
  p_output1[28]=-0.038749*t2760 + 1.e-6*t2896 - 0.28121*t2918 - 1.*t3075*t5970 + 4.e-6*(-1.*t1514*t5869 - 1.*t3105*t5970) - 1.*t5869*t773;
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t2396*t3290 - 1.*t3640*t67)*var2[1] + t5993*var2[2];
  p_output1[31]=t3290*var2[0] - 1.*t3603*t67*var2[1] + t2396*t3603*var2[2] + ((t3053*t3595 + t3560*t3630 + t3548*t3662 + t3604*t3709)*t5320 + t3053*(-1.*t2603*t3548 - 1.*t2699*t3560 - 1.*t2674*t3604 - 1.*t3595*t5320) + t2699*t6012 + t3630*t6030)*var2[3];
  p_output1[32]=t2414*t3863*var2[0] + (t2396*t3275 + t2513*t3863*t67)*var2[1] + (-1.*t2396*t2513*t3863 + t3275*t67)*var2[2] + (t2414*t3768*t6012 + t2414*t3932*t6030 + t5320*(t2414*t3053*t3802 - 1.*t2513*t3662*t3802 + t2414*t3560*t3932 - 1.*t2513*t3604*t3932 + t6052 + t6053) + t3053*(-1.*t2414*t3560*t3768 + t2513*t3604*t3768 + t2513*t2603*t3802 - 1.*t2414*t3802*t5320 + t6066 + t6068))*var2[3] + (t2361*(t3039*t3802 + t3530*t3932 + t6052 + t6053) + t3775*t6062 + t3724*(-1.*t3530*t3768 - 1.*t2581*t3802 + t6066 + t6068) + t3881*t6079)*var2[4];
  p_output1[33]=t2414*t4266*var2[0] + (t2396*t4212 + t2513*t4266*t67)*var2[1] + (-1.*t2396*t2513*t4266 + t4212*t67)*var2[2] + (t2414*t4176*t6012 + t2414*t4328*t6030 + t5320*(t2414*t3053*t4238 - 1.*t2513*t3662*t4238 + t2414*t3560*t4328 - 1.*t2513*t3604*t4328 + t6139 + t6141) + t3053*(-1.*t2414*t3560*t4176 + t2513*t3604*t4176 + t2513*t2603*t4238 - 1.*t2414*t4238*t5320 + t6152 + t6153))*var2[3] + (t4190*t6062 + t4298*t6079 + t2361*(t3039*t4238 + t3530*t4328 + t6139 + t6141) + t3724*(-1.*t3530*t4176 - 1.*t2581*t4238 + t6152 + t6153))*var2[4] + (t2483*(t3488*t4058 + t3029*t4065 + t3020*t4080 + t3525*t4085) + t2921*(-1.*t2223*t4065 - 1.*t2340*t4080 - 1.*t3488*t4149 - 1.*t3525*t4154))*var2[5];
  p_output1[34]=t4882*var2[0] + (t2396*t4791 - 1.*t4887*t67)*var2[1] + (t2396*t4887 + t4791*t67)*var2[2] + (t4774*t6012 + t4875*t6030 + t5320*(t3560*t4875 + t3053*t4893 + t3662*t4899 + t3604*t4913 + t6276 + t6283) + t3053*(-1.*t3560*t4774 - 1.*t3604*t4859 - 1.*t2603*t4899 - 1.*t4893*t5320 + t6290 + t6295))*var2[3] + (t4852*t6062 + t4785*t6079 + t2361*(t3039*t4811 + t3530*t4830 + t6207 + t6208 + t6276 + t6283) + t3724*(-1.*t3530*t4771 - 1.*t2581*t4811 + t6189 + t6190 + t6290 + t6295))*var2[4] + (t2921*(-1.*t2223*t4496 - 1.*t2340*t4513 - 1.*t3488*t4759 - 1.*t3525*t4768 + t6189 + t6190) + t4523*t6197 + t2483*(t3488*t4434 + t3525*t4450 + t3029*t4496 + t3020*t4513 + t6207 + t6208) + t4747*t6223)*var2[5] + (-0.15121*t4550 - 0.15121*t4581 + t2921*(-1.*t2204*t4477 - 1.*t1569*t4494 - 1.*t3477*t4714 - 1.*t3455*t4735 - 1.*t4644*t4747 + t6189) + t2483*(t3477*t4415 + t3455*t4427 + t3009*t4477 + t2952*t4494 + t4523*t4644 + t6208) + t4523*t6243 + t4747*t6259)*var2[9];
  p_output1[35]=(t5208*t6012 + t5298*t6030 + t5320*(t3053*t5288 + t3662*t5292 + t3560*t5298 + t3604*t5306 + t6424 + t6426) + t3053*(-1.*t3560*t5208 - 1.*t3604*t5224 - 1.*t2603*t5292 - 1.*t5288*t5320 + t6432 + t6435))*var2[3] + (t5213*t6062 + t5262*t6079 + t2361*(t3039*t5249 + t3530*t5276 + t6351 + t6353 + t6424 + t6426) + t3724*(-1.*t3530*t5205 - 1.*t2581*t5249 + t6340 + t6341 + t6432 + t6435))*var2[4] + (t5050*t6197 + t5188*t6223 + t2921*(-1.*t2340*t4969 - 1.*t2223*t4975 - 1.*t3488*t5197 - 1.*t3525*t5203 + t6340 + t6341) + t2483*(t3020*t4969 + t3029*t4975 + t3488*t5018 + t3525*t5024 + t6351 + t6353))*var2[5] + (t5050*t6243 + t5188*t6259 + t2921*(-1.*t1569*t4956 - 1.*t2204*t4967 - 1.*t3455*t5106 - 1.*t3477*t5120 - 1.*t4644*t5188 + t6341) + t2483*(t2952*t4956 + t3009*t4967 + t3455*t5003 + t3477*t5012 + t4644*t5050 + t6351))*var2[9] + (-1.*t5001*t6384 - 1.*t5096*t6390 - 1.*t2896*t6400 + 4.e-6*(-1.*t4989*t6384 - 1.*t5102*t6390 - 1.*t2918*t6400 - 1.*t1514*t6410) - 1.*t6410*t773)*var2[10];
  p_output1[36]=t3575;
  p_output1[37]=t5993;
  p_output1[38]=t2396*t3290 + t3640*t67;
  p_output1[39]=t5320*t6012 + t3053*t6030;
  p_output1[40]=t2361*t6062 + t3724*t6079;
  p_output1[41]=t2921*t6197 + t2483*t6223;
  p_output1[42]=-0.15121*t3203 - 0.15121*t3226 + t2921*t6243 + t2483*t6259;
  p_output1[43]=1.e-6*t3075 - 0.28121*t3105 - 1.*t2896*t6384 + 4.e-6*(-1.*t2918*t6384 - 1.*t1514*t6390) - 1.*t6390*t773;
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void J_dh_FrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
