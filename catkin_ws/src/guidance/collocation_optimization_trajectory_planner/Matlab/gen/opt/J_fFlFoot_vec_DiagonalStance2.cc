/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:30:27 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t815;
  double t731;
  double t1010;
  double t797;
  double t818;
  double t988;
  double t1007;
  double t1011;
  double t1023;
  double t1037;
  double t1039;
  double t1051;
  double t1174;
  double t1170;
  double t1080;
  double t1088;
  double t1091;
  double t1096;
  double t1119;
  double t1127;
  double t1182;
  double t1184;
  double t1185;
  double t180;
  double t1296;
  double t1070;
  double t1075;
  double t1288;
  double t1291;
  double t1194;
  double t1304;
  double t1311;
  double t1312;
  double t1318;
  double t1331;
  double t1335;
  double t1348;
  double t1355;
  double t1357;
  double t1360;
  double t1369;
  double t1451;
  double t1452;
  double t1457;
  double t1458;
  double t1462;
  double t1470;
  double t1472;
  double t1474;
  double t1476;
  double t1481;
  double t1482;
  double t1483;
  double t1486;
  double t1143;
  double t1186;
  double t1190;
  double t1196;
  double t1208;
  double t1209;
  double t1325;
  double t1370;
  double t1381;
  double t1402;
  double t1406;
  double t1407;
  double t1478;
  double t1506;
  double t1511;
  double t1520;
  double t1524;
  double t1525;
  double t1566;
  double t1589;
  double t1602;
  double t1065;
  double t1689;
  double t1694;
  double t1711;
  double t1713;
  double t1717;
  double t1465;
  double t1753;
  double t1757;
  double t1758;
  double t1764;
  double t1765;
  double t1463;
  double t1814;
  double t1816;
  double t1817;
  double t1819;
  double t1826;
  double t1827;
  double t1828;
  double t1884;
  double t1888;
  double t1896;
  double t1897;
  double t1899;
  double t1807;
  double t1950;
  double t1953;
  double t1955;
  double t1957;
  double t1965;
  double t1967;
  double t1294;
  double t1297;
  double t1299;
  double t1301;
  double t1400;
  double t1418;
  double t1435;
  double t1460;
  double t1468;
  double t1515;
  double t1527;
  double t1538;
  double t1027;
  double t1067;
  double t1191;
  double t1210;
  double t1214;
  double t1068;
  double t1220;
  double t1242;
  double t2038;
  double t2049;
  double t1303;
  double t1438;
  double t1446;
  double t1469;
  double t1545;
  double t1547;
  double t1582;
  double t1585;
  double t1590;
  double t1594;
  double t1598;
  double t1603;
  double t1615;
  double t1618;
  double t1619;
  double t1621;
  double t1622;
  double t1635;
  double t1638;
  double t1639;
  double t1641;
  double t1643;
  double t1655;
  double t1661;
  double t1667;
  double t1669;
  double t1670;
  double t1705;
  double t1718;
  double t1719;
  double t1727;
  double t1728;
  double t1730;
  double t1679;
  double t1680;
  double t1682;
  double t1724;
  double t1732;
  double t1737;
  double t1760;
  double t1771;
  double t1776;
  double t1781;
  double t1783;
  double t1788;
  double t1744;
  double t1749;
  double t1780;
  double t1789;
  double t1791;
  double t1821;
  double t1835;
  double t1837;
  double t1840;
  double t1847;
  double t1849;
  double t1804;
  double t1806;
  double t1810;
  double t1838;
  double t1856;
  double t1857;
  double t1892;
  double t1908;
  double t1909;
  double t1915;
  double t1916;
  double t1920;
  double t1870;
  double t1871;
  double t1876;
  double t1910;
  double t1922;
  double t1923;
  double t1962;
  double t1968;
  double t1979;
  double t1982;
  double t1988;
  double t1993;
  double t1936;
  double t1942;
  double t1946;
  double t1981;
  double t1994;
  double t1997;
  double t2057;
  double t2061;
  double t2065;
  double t2078;
  double t2080;
  double t2082;
  double t2044;
  double t2046;
  double t2047;
  double t2336;
  double t2337;
  double t2338;
  double t2320;
  double t2326;
  double t2327;
  double t2332;
  double t2334;
  double t2335;
  double t2108;
  double t2109;
  double t2112;
  double t2116;
  double t2125;
  double t2126;
  double t2128;
  double t2131;
  double t2132;
  double t2174;
  double t2176;
  double t2186;
  double t2188;
  double t2197;
  double t2198;
  double t2206;
  double t2207;
  double t2208;
  double t2210;
  double t2212;
  double t2214;
  double t2221;
  double t2222;
  double t2230;
  double t2234;
  double t2235;
  double t2240;
  double t2245;
  double t2247;
  double t2253;
  double t2255;
  double t2257;
  double t2260;
  double t2272;
  double t2274;
  double t2275;
  double t2279;
  double t2281;
  double t2282;
  double t2291;
  double t2298;
  double t2303;
  double t2308;
  double t2311;
  double t2312;
  double t2470;
  double t2471;
  double t2473;
  double t2478;
  double t2481;
  double t2482;
  double t2491;
  double t2493;
  double t2495;
  double t2497;
  double t2500;
  double t2501;
  double t2503;
  double t2506;
  double t2508;
  double t2510;
  double t2511;
  double t2458;
  double t2461;
  double t2465;
  double t2467;
  double t2468;
  double t2487;
  double t2504;
  double t2515;
  double t2522;
  double t2527;
  double t2529;
  double t2530;
  double t2535;
  double t2537;
  double t2539;
  double t2541;
  double t2034;
  double t2036;
  double t2037;
  double t2466;
  double t2525;
  double t2543;
  double t2546;
  double t2547;
  double t2551;
  double t2552;
  double t2553;
  double t2557;
  double t2559;
  double t2560;
  double t2563;
  double t2565;
  double t2566;
  double t2567;
  double t2568;
  double t2570;
  double t2572;
  double t2575;
  double t2576;
  double t2578;
  double t2020;
  double t2024;
  double t2027;
  double t2593;
  double t2594;
  double t2599;
  double t2612;
  double t2613;
  double t2615;
  double t2583;
  double t2584;
  double t2585;
  double t2031;
  double t2032;
  double t2033;
  double t2618;
  double t2620;
  double t2622;
  double t2625;
  double t2763;
  double t2766;
  double t2771;
  double t2627;
  double t2628;
  double t2629;
  double t2630;
  double t2662;
  double t2666;
  double t2670;
  double t2671;
  double t2673;
  double t2675;
  double t2679;
  double t2681;
  double t2698;
  double t2700;
  double t2701;
  double t2708;
  double t2724;
  double t2727;
  double t2733;
  double t2734;
  double t2899;
  double t2907;
  double t2910;
  double t2912;
  double t2915;
  double t2917;
  double t2929;
  double t2930;
  double t2931;
  double t2914;
  double t2920;
  double t2924;
  double t3074;
  double t3076;
  double t3082;
  double t3085;
  double t3088;
  double t3089;
  double t3091;
  double t3096;
  double t3099;
  double t3103;
  double t3107;
  double t3090;
  double t3110;
  double t3114;
  double t3122;
  double t3123;
  double t3125;
  double t3134;
  double t3136;
  double t3141;
  double t3145;
  double t3148;
  double t3149;
  double t3152;
  double t3157;
  double t3159;
  double t1684;
  double t1741;
  double t1742;
  double t1750;
  double t1792;
  double t1799;
  double t3120;
  double t3126;
  double t3127;
  double t3163;
  double t3165;
  double t3167;
  double t3142;
  double t3160;
  double t3161;
  double t1813;
  double t1858;
  double t1859;
  double t3320;
  double t3325;
  double t3326;
  double t3331;
  double t3335;
  double t3338;
  double t3340;
  double t3344;
  double t3346;
  double t3327;
  double t3339;
  double t3352;
  double t3353;
  double t3356;
  double t3357;
  double t3358;
  double t3359;
  double t3354;
  double t3361;
  double t3366;
  double t3370;
  double t3375;
  double t3377;
  double t3382;
  double t3383;
  double t3385;
  double t3388;
  double t3389;
  double t3392;
  double t3393;
  double t1878;
  double t1930;
  double t1931;
  double t3367;
  double t3378;
  double t3380;
  double t3398;
  double t3399;
  double t3403;
  double t3387;
  double t3394;
  double t3395;
  double t1948;
  double t2002;
  double t2008;
  double t2759;
  double t2777;
  double t2787;
  double t2788;
  double t2807;
  double t2811;
  double t2827;
  double t2831;
  double t2854;
  double t2855;
  double t2870;
  double t2877;
  double t3529;
  double t3533;
  double t3535;
  double t2898;
  double t2927;
  double t3543;
  double t3544;
  double t3546;
  double t2957;
  double t2960;
  double t3564;
  double t3566;
  double t3569;
  double t2978;
  double t2980;
  double t3617;
  double t3625;
  double t3626;
  double t2999;
  double t3006;
  double t3632;
  double t3634;
  double t3635;
  double t3030;
  double t3031;
  double t3661;
  double t3667;
  double t3670;
  double t3041;
  double t3047;
  double t3131;
  double t3133;
  double t3184;
  double t3186;
  double t3220;
  double t3224;
  double t3247;
  double t3248;
  double t3271;
  double t3276;
  double t3292;
  double t3293;
  double t3381;
  double t3411;
  double t3412;
  double t3429;
  double t3437;
  double t3440;
  double t3463;
  double t3466;
  double t3482;
  double t3484;
  double t3754;
  double t3755;
  double t3762;
  double t3763;
  double t3779;
  double t3780;
  double t3789;
  double t3790;
  double t3804;
  double t3805;
  double t3811;
  double t3812;
  double t3824;
  double t4033;
  double t4036;
  double t4037;
  double t3830;
  double t3831;
  double t4079;
  double t4080;
  double t4084;
  double t3843;
  double t3852;
  double t3855;
  double t4142;
  double t4146;
  double t4150;
  double t4176;
  double t4177;
  double t4178;
  double t3872;
  double t3873;
  double t3882;
  double t3884;
  double t4099;
  double t4100;
  double t4105;
  double t4045;
  double t4046;
  double t4053;
  double t4340;
  double t4344;
  double t4345;
  double t4393;
  double t4394;
  double t4395;
  double t4456;
  double t4458;
  double t4459;
  double t4488;
  double t4489;
  double t4490;
  double t4419;
  double t4420;
  double t4421;
  double t4350;
  double t4352;
  double t4353;
  double t4712;
  double t4717;
  double t4718;
  double t4729;
  double t4730;
  double t4731;
  double t4737;
  double t4740;
  double t4741;
  double t4744;
  double t4745;
  double t4748;
  double t4752;
  double t4789;
  double t4793;
  double t4801;
  double t4810;
  double t4813;
  double t4814;
  double t4819;
  double t4820;
  double t4821;
  double t4822;
  double t4827;
  double t4829;
  double t4832;
  double t4857;
  double t4860;
  double t4862;
  double t4864;
  double t4868;
  double t4870;
  double t4872;
  double t4873;
  double t4881;
  double t4883;
  double t4884;
  double t4890;
  double t4897;
  double t4898;
  double t4901;
  double t4904;
  double t4906;
  double t4907;
  double t4909;
  double t4910;
  double t4911;
  double t4932;
  double t4939;
  double t4941;
  double t4722;
  double t4970;
  double t4971;
  double t4974;
  double t4976;
  t815 = Cos(var1[8]);
  t731 = Cos(var1[7]);
  t1010 = -1. + t815;
  t797 = -1. + t731;
  t818 = -1.*t815;
  t988 = 1. + t818;
  t1007 = 1.6e-11*t988;
  t1011 = 1.6e-11*t1010;
  t1023 = 1. + t1007 + t1011;
  t1037 = 4.e-6*t1010;
  t1039 = -4.e-6*t815;
  t1051 = t1037 + t1039;
  t1174 = Sin(var1[7]);
  t1170 = Cos(var1[6]);
  t1080 = 1.6e-11*t797;
  t1088 = 1. + t1080;
  t1091 = t1088*t1023;
  t1096 = 4.e-6*t797*t1051;
  t1119 = t1091 + t1096;
  t1127 = Sin(var1[6]);
  t1182 = 4.e-6*t1023*t1174;
  t1184 = t1051*t1174;
  t1185 = t1182 + t1184;
  t180 = Cos(var1[4]);
  t1296 = Sin(var1[8]);
  t1070 = Sin(var1[4]);
  t1075 = Cos(var1[5]);
  t1288 = -1.000000000016*t988;
  t1291 = 1. + t1288;
  t1194 = Sin(var1[5]);
  t1304 = -4.e-6*t1291*t1174;
  t1311 = -4.e-6*t1088*t1296;
  t1312 = -4.e-6*t797*t1296;
  t1318 = t1304 + t1311 + t1312;
  t1331 = -1.*t731;
  t1335 = 1. + t1331;
  t1348 = -1.000000000016*t1335;
  t1355 = 1. + t1348;
  t1357 = t1355*t1291;
  t1360 = -1.000000000016*t1174*t1296;
  t1369 = t1357 + t1360;
  t1451 = -1. + t1007;
  t1452 = 4.e-6*t1451;
  t1457 = 4.e-6*t988;
  t1458 = t1452 + t1457;
  t1462 = t1007 + t818;
  t1470 = 4.e-6*t1458*t1174;
  t1472 = t1462*t1174;
  t1474 = -1.000000000016*t1355*t1296;
  t1476 = t1470 + t1472 + t1474;
  t1481 = t1088*t1458;
  t1482 = 4.e-6*t797*t1462;
  t1483 = 4.000000000064e-6*t1174*t1296;
  t1486 = t1481 + t1482 + t1483;
  t1143 = -1.*t1119*t1127;
  t1186 = t1170*t1185;
  t1190 = t1143 + t1186;
  t1196 = t1170*t1119;
  t1208 = t1127*t1185;
  t1209 = t1196 + t1208;
  t1325 = -1.*t1127*t1318;
  t1370 = t1170*t1369;
  t1381 = t1325 + t1370;
  t1402 = t1170*t1318;
  t1406 = t1127*t1369;
  t1407 = t1402 + t1406;
  t1478 = t1127*t1476;
  t1506 = t1170*t1486;
  t1511 = t1478 + t1506;
  t1520 = t1170*t1476;
  t1524 = -1.*t1127*t1486;
  t1525 = t1520 + t1524;
  t1566 = -1.*t1194*t1190;
  t1589 = -1.*t1194*t1381;
  t1602 = -1.*t1194*t1525;
  t1065 = t731*t1051;
  t1689 = 4.e-6*t731*t1023;
  t1694 = t1689 + t1065;
  t1711 = -1.6e-11*t1023*t1174;
  t1713 = -4.e-6*t1051*t1174;
  t1717 = t1711 + t1713;
  t1465 = 1.000000000016*t1174*t1296;
  t1753 = -1.000000000016*t1291*t1174;
  t1757 = -1.000000000016*t731*t1296;
  t1758 = t1753 + t1757;
  t1764 = -4.e-6*t731*t1291;
  t1765 = t1764 + t1483;
  t1463 = t731*t1462;
  t1814 = -1.6e-11*t1458*t1174;
  t1816 = -4.e-6*t1462*t1174;
  t1817 = 4.000000000064e-6*t731*t1296;
  t1819 = t1814 + t1816 + t1817;
  t1826 = 4.e-6*t731*t1458;
  t1827 = 1.000000000032*t1174*t1296;
  t1828 = t1826 + t1463 + t1827;
  t1884 = -1.000000000016*t815*t1174;
  t1888 = t1884 + t1474;
  t1896 = -4.e-6*t1088*t815;
  t1897 = -4.e-6*t797*t815;
  t1899 = t1896 + t1897 + t1483;
  t1807 = 1.000000000016*t731*t1296;
  t1950 = 4.000000000064e-6*t815*t1174;
  t1953 = 4.000000000064e-6*t1088*t1296;
  t1955 = 4.000000000064e-6*t797*t1296;
  t1957 = t1950 + t1953 + t1955;
  t1965 = -1.000000000016*t1355*t815;
  t1967 = t1965 + t1827;
  t1294 = -1.*t1291*t1174;
  t1297 = -1.6e-11*t797*t1296;
  t1299 = -1.*t731*t1296;
  t1301 = t1294 + t1297 + t1299;
  t1400 = t1075*t1381;
  t1418 = -1.*t1194*t1407;
  t1435 = t1400 + t1418;
  t1460 = 4.e-6*t797*t1458;
  t1468 = t1460 + t1463 + t1465;
  t1515 = -1.*t1194*t1511;
  t1527 = t1075*t1525;
  t1538 = t1515 + t1527;
  t1027 = 4.e-6*t797*t1023;
  t1067 = t1027 + t1065;
  t1191 = t1075*t1190;
  t1210 = -1.*t1194*t1209;
  t1214 = t1191 + t1210;
  t1068 = t180*t1067;
  t1220 = -1.*t1070*t1214;
  t1242 = t1068 + t1220;
  t2038 = Sin(var1[3]);
  t2049 = Cos(var1[3]);
  t1303 = t180*t1301;
  t1438 = -1.*t1070*t1435;
  t1446 = t1303 + t1438;
  t1469 = t180*t1468;
  t1545 = -1.*t1070*t1538;
  t1547 = t1469 + t1545;
  t1582 = -1.*t1075*t1209;
  t1585 = t1566 + t1582;
  t1590 = -1.*t1075*t1407;
  t1594 = t1589 + t1590;
  t1598 = -1.*t1075*t1511;
  t1603 = t1598 + t1602;
  t1615 = -1.*t1170*t1119;
  t1618 = -1.*t1127*t1185;
  t1619 = t1615 + t1618;
  t1621 = t1075*t1619;
  t1622 = t1566 + t1621;
  t1635 = -1.*t1170*t1318;
  t1638 = -1.*t1127*t1369;
  t1639 = t1635 + t1638;
  t1641 = t1075*t1639;
  t1643 = t1589 + t1641;
  t1655 = -1.*t1127*t1476;
  t1661 = -1.*t1170*t1486;
  t1667 = t1655 + t1661;
  t1669 = t1075*t1667;
  t1670 = t1669 + t1602;
  t1705 = t1694*t1127;
  t1718 = t1170*t1717;
  t1719 = t1705 + t1718;
  t1727 = t1170*t1694;
  t1728 = -1.*t1127*t1717;
  t1730 = t1727 + t1728;
  t1679 = -4.e-6*t1023*t1174;
  t1680 = -1.*t1051*t1174;
  t1682 = t1679 + t1680;
  t1724 = -1.*t1194*t1719;
  t1732 = t1075*t1730;
  t1737 = t1724 + t1732;
  t1760 = t1127*t1758;
  t1771 = t1170*t1765;
  t1776 = t1760 + t1771;
  t1781 = t1170*t1758;
  t1783 = -1.*t1127*t1765;
  t1788 = t1781 + t1783;
  t1744 = -1.*t731*t1291;
  t1749 = t1744 + t1465;
  t1780 = -1.*t1194*t1776;
  t1789 = t1075*t1788;
  t1791 = t1780 + t1789;
  t1821 = -1.*t1127*t1819;
  t1835 = t1170*t1828;
  t1837 = t1821 + t1835;
  t1840 = t1170*t1819;
  t1847 = t1127*t1828;
  t1849 = t1840 + t1847;
  t1804 = -4.e-6*t1458*t1174;
  t1806 = -1.*t1462*t1174;
  t1810 = t1804 + t1806 + t1807;
  t1838 = t1075*t1837;
  t1856 = -1.*t1194*t1849;
  t1857 = t1838 + t1856;
  t1892 = t1127*t1888;
  t1908 = t1170*t1899;
  t1909 = t1892 + t1908;
  t1915 = t1170*t1888;
  t1916 = -1.*t1127*t1899;
  t1920 = t1915 + t1916;
  t1870 = -1.6e-11*t797*t815;
  t1871 = -1.*t731*t815;
  t1876 = t1870 + t1871 + t1465;
  t1910 = -1.*t1194*t1909;
  t1922 = t1075*t1920;
  t1923 = t1910 + t1922;
  t1962 = -1.*t1127*t1957;
  t1968 = t1170*t1967;
  t1979 = t1962 + t1968;
  t1982 = t1170*t1957;
  t1988 = t1127*t1967;
  t1993 = t1982 + t1988;
  t1936 = 1.000000000016*t815*t1174;
  t1942 = 1.6000000000256e-11*t797*t1296;
  t1946 = t1936 + t1942 + t1807;
  t1981 = t1075*t1979;
  t1994 = -1.*t1194*t1993;
  t1997 = t1981 + t1994;
  t2057 = t1194*t1381;
  t2061 = t1075*t1407;
  t2065 = t2057 + t2061;
  t2078 = t1075*t1511;
  t2080 = t1194*t1525;
  t2082 = t2078 + t2080;
  t2044 = t1194*t1190;
  t2046 = t1075*t1209;
  t2047 = t2044 + t2046;
  t2336 = t2049*t2047;
  t2337 = -1.*t2038*t1242;
  t2338 = t2336 + t2337;
  t2320 = t2049*t2065;
  t2326 = -1.*t2038*t1446;
  t2327 = t2320 + t2326;
  t2332 = t2049*t2082;
  t2334 = -1.*t2038*t1547;
  t2335 = t2332 + t2334;
  t2108 = -1.*t1067*t1070;
  t2109 = -1.*t180*t1214;
  t2112 = t2108 + t2109;
  t2116 = -1.*t1070*t1301;
  t2125 = -1.*t180*t1435;
  t2126 = t2116 + t2125;
  t2128 = -1.*t1070*t1468;
  t2131 = -1.*t180*t1538;
  t2132 = t2128 + t2131;
  t2174 = t1194*t1619;
  t2176 = t1191 + t2174;
  t2186 = t1194*t1639;
  t2188 = t1400 + t2186;
  t2197 = t1194*t1667;
  t2198 = t2197 + t1527;
  t2206 = t1075*t1719;
  t2207 = t1194*t1730;
  t2208 = t2206 + t2207;
  t2210 = t180*t1682;
  t2212 = -1.*t1070*t1737;
  t2214 = t2210 + t2212;
  t2221 = t1075*t1776;
  t2222 = t1194*t1788;
  t2230 = t2221 + t2222;
  t2234 = t180*t1749;
  t2235 = -1.*t1070*t1791;
  t2240 = t2234 + t2235;
  t2245 = t1194*t1837;
  t2247 = t1075*t1849;
  t2253 = t2245 + t2247;
  t2255 = t180*t1810;
  t2257 = -1.*t1070*t1857;
  t2260 = t2255 + t2257;
  t2272 = t1075*t1909;
  t2274 = t1194*t1920;
  t2275 = t2272 + t2274;
  t2279 = t180*t1876;
  t2281 = -1.*t1070*t1923;
  t2282 = t2279 + t2281;
  t2291 = t1194*t1979;
  t2298 = t1075*t1993;
  t2303 = t2291 + t2298;
  t2308 = t180*t1946;
  t2311 = -1.*t1070*t1997;
  t2312 = t2308 + t2311;
  t2470 = 5.136e-14*var1[8];
  t2471 = -0.03874900000062*t988;
  t2473 = 5.9484e-7*t1010;
  t2478 = -0.03875*t815;
  t2481 = -0.299999999992*t1296;
  t2482 = t2470 + t2471 + t2473 + t2478 + t2481;
  t2491 = -1.284e-8*var1[8];
  t2493 = 1. + t1011;
  t2495 = 0.14871*t2493;
  t2497 = -1.5499600000248e-7*t988;
  t2500 = -1.55e-7*t1010;
  t2501 = -1.199999999968e-6*t1296;
  t2503 = t2491 + t2495 + t2497 + t2500 + t2501;
  t2506 = 0.80321*t1291;
  t2508 = 0.503210000016051*t988;
  t2510 = -4.05159380016e-7*t1296;
  t2511 = t2506 + t2508 + t2510;
  t2458 = -1.*t1170;
  t2461 = 1. + t2458;
  t2465 = 0.15121*t2461;
  t2467 = 0.281210000008499*t1335;
  t2468 = 0.03874900000062*t1174;
  t2487 = t1174*t2482;
  t2504 = 4.e-6*t1174*t2503;
  t2515 = t1355*t2511;
  t2522 = t2467 + t2468 + t2487 + t2504 + t2515;
  t2527 = -1.2484e-7*var1[7];
  t2529 = -1.5499600000248e-7*t1335;
  t2530 = 1.124840000016e-6*t1174;
  t2535 = 4.e-6*t797*t2482;
  t2537 = t1088*t2503;
  t2539 = -4.e-6*t1174*t2511;
  t2541 = t2527 + t2529 + t2530 + t2535 + t2537 + t2539;
  t2034 = t1067*t1070;
  t2036 = t180*t1214;
  t2037 = t2034 + t2036;
  t2466 = -0.15121*t1127;
  t2525 = t1127*t2522;
  t2543 = t1170*t2541;
  t2546 = t2465 + t2466 + t2525 + t2543;
  t2547 = -1.*t1194*t2546;
  t2551 = 0.15121*t1127;
  t2552 = t1170*t2522;
  t2553 = -1.*t1127*t2541;
  t2557 = t2465 + t2551 + t2552 + t2553;
  t2559 = t1075*t2557;
  t2560 = t2547 + t2559;
  t2563 = -1.*t1070*t2560;
  t2565 = 4.9936e-13*var1[7];
  t2566 = -0.03874900000062*t1335;
  t2567 = 0.281210000004*t1174;
  t2568 = t731*t2482;
  t2570 = 4.e-6*t797*t2503;
  t2572 = -1.*t1174*t2511;
  t2575 = t2565 + t2566 + t2567 + t2568 + t2570 + t2572;
  t2576 = t180*t2575;
  t2578 = t2563 + t2576;
  t2020 = t1070*t1301;
  t2024 = t180*t1435;
  t2027 = t2020 + t2024;
  t2593 = t180*t2560;
  t2594 = t1070*t2575;
  t2599 = t2593 + t2594;
  t2612 = t1075*t2546;
  t2613 = t1194*t2557;
  t2615 = t2612 + t2613;
  t2583 = -1.*t180*t2560;
  t2584 = -1.*t1070*t2575;
  t2585 = t2583 + t2584;
  t2031 = t1070*t1468;
  t2032 = t180*t1538;
  t2033 = t2031 + t2032;
  t2618 = -1.*t2047*t2615;
  t2620 = -1.*t1242*t2578;
  t2622 = -1.*t2037*t2599;
  t2625 = t2618 + t2620 + t2622;
  t2763 = -1.*t1075*t2546;
  t2766 = -1.*t1194*t2557;
  t2771 = t2763 + t2766;
  t2627 = t2615*t2065;
  t2628 = t2599*t2027;
  t2629 = t2578*t1446;
  t2630 = t2627 + t2628 + t2629;
  t2662 = t2047*t2615;
  t2666 = t1242*t2578;
  t2670 = t2037*t2599;
  t2671 = t2662 + t2666 + t2670;
  t2673 = -1.*t2615*t2082;
  t2675 = -1.*t2599*t2033;
  t2679 = -1.*t2578*t1547;
  t2681 = t2673 + t2675 + t2679;
  t2698 = -1.*t2615*t2065;
  t2700 = -1.*t2599*t2027;
  t2701 = -1.*t2578*t1446;
  t2708 = t2698 + t2700 + t2701;
  t2724 = t2615*t2082;
  t2727 = t2599*t2033;
  t2733 = t2578*t1547;
  t2734 = t2724 + t2727 + t2733;
  t2899 = 0.15121*t1170;
  t2907 = -1.*t1127*t2522;
  t2910 = -1.*t1170*t2541;
  t2912 = t2899 + t2551 + t2907 + t2910;
  t2915 = -0.15121*t1170;
  t2917 = t2915 + t2551 + t2552 + t2553;
  t2929 = t1075*t2912;
  t2930 = -1.*t1194*t2917;
  t2931 = t2929 + t2930;
  t2914 = t1194*t2912;
  t2920 = t1075*t2917;
  t2924 = t2914 + t2920;
  t3074 = 1.124840000016e-6*t731;
  t3076 = -1.5499600000248e-7*t1174;
  t3082 = -4.e-6*t1174*t2482;
  t3085 = -1.6e-11*t1174*t2503;
  t3088 = -4.e-6*t731*t2511;
  t3089 = -1.2484e-7 + t3074 + t3076 + t3082 + t3085 + t3088;
  t3091 = 0.03874900000062*t731;
  t3096 = 0.281210000008499*t1174;
  t3099 = 4.e-6*t731*t2503;
  t3103 = -1.000000000016*t1174*t2511;
  t3107 = t3091 + t3096 + t2568 + t3099 + t3103;
  t3090 = -1.*t1127*t3089;
  t3110 = t1170*t3107;
  t3114 = t3090 + t3110;
  t3122 = t1170*t3089;
  t3123 = t1127*t3107;
  t3125 = t3122 + t3123;
  t3134 = t1075*t3114;
  t3136 = -1.*t1194*t3125;
  t3141 = t3134 + t3136;
  t3145 = 0.281210000004*t731;
  t3148 = -0.03874900000062*t1174;
  t3149 = -1.*t1174*t2482;
  t3152 = -4.e-6*t1174*t2503;
  t3157 = -1.*t731*t2511;
  t3159 = 4.9936e-13 + t3145 + t3148 + t3149 + t3152 + t3157;
  t1684 = t1070*t1682;
  t1741 = t180*t1737;
  t1742 = t1684 + t1741;
  t1750 = t1070*t1749;
  t1792 = t180*t1791;
  t1799 = t1750 + t1792;
  t3120 = t1194*t3114;
  t3126 = t1075*t3125;
  t3127 = t3120 + t3126;
  t3163 = t180*t3141;
  t3165 = t1070*t3159;
  t3167 = t3163 + t3165;
  t3142 = -1.*t1070*t3141;
  t3160 = t180*t3159;
  t3161 = t3142 + t3160;
  t1813 = t1070*t1810;
  t1858 = t180*t1857;
  t1859 = t1813 + t1858;
  t3320 = -4.05159380016e-7*t815;
  t3325 = -0.2999999999968*t1296;
  t3326 = t3320 + t3325;
  t3331 = -1.199999999968e-6*t815;
  t3335 = 1.620637520064e-12*t1296;
  t3338 = -1.284e-8 + t3331 + t3335;
  t3340 = -0.299999999992*t815;
  t3344 = 4.05159380016e-7*t1296;
  t3346 = 5.136e-14 + t3340 + t3344;
  t3327 = -4.e-6*t1174*t3326;
  t3339 = t1088*t3338;
  t3352 = 4.e-6*t797*t3346;
  t3353 = t3327 + t3339 + t3352;
  t3356 = t1355*t3326;
  t3357 = 4.e-6*t1174*t3338;
  t3358 = t1174*t3346;
  t3359 = t3356 + t3357 + t3358;
  t3354 = -1.*t1127*t3353;
  t3361 = t1170*t3359;
  t3366 = t3354 + t3361;
  t3370 = t1170*t3353;
  t3375 = t1127*t3359;
  t3377 = t3370 + t3375;
  t3382 = t1075*t3366;
  t3383 = -1.*t1194*t3377;
  t3385 = t3382 + t3383;
  t3388 = -1.*t1174*t3326;
  t3389 = 4.e-6*t797*t3338;
  t3392 = t731*t3346;
  t3393 = t3388 + t3389 + t3392;
  t1878 = t1070*t1876;
  t1930 = t180*t1923;
  t1931 = t1878 + t1930;
  t3367 = t1194*t3366;
  t3378 = t1075*t3377;
  t3380 = t3367 + t3378;
  t3398 = t180*t3385;
  t3399 = t1070*t3393;
  t3403 = t3398 + t3399;
  t3387 = -1.*t1070*t3385;
  t3394 = t180*t3393;
  t3395 = t3387 + t3394;
  t1948 = t1070*t1946;
  t2002 = t180*t1997;
  t2008 = t1948 + t2002;
  t2759 = -1.*t2047*t2560;
  t2777 = -1.*t1214*t2615;
  t2787 = t2560*t2065;
  t2788 = t2615*t1435;
  t2807 = t2047*t2560;
  t2811 = t1214*t2615;
  t2827 = -1.*t2615*t1538;
  t2831 = -1.*t2560*t2082;
  t2854 = -1.*t2560*t2065;
  t2855 = -1.*t2615*t1435;
  t2870 = t2615*t1538;
  t2877 = t2560*t2082;
  t3529 = -1.*t1214*t2560;
  t3533 = -1.*t1067*t2575;
  t3535 = t3529 + t2618 + t3533;
  t2898 = -1.*t2176*t2615;
  t2927 = -1.*t2047*t2924;
  t3543 = t2575*t1301;
  t3544 = t2560*t1435;
  t3546 = t3543 + t2627 + t3544;
  t2957 = t2615*t2188;
  t2960 = t2924*t2065;
  t3564 = t1214*t2560;
  t3566 = t1067*t2575;
  t3569 = t3564 + t2662 + t3566;
  t2978 = t2176*t2615;
  t2980 = t2047*t2924;
  t3617 = -1.*t2575*t1468;
  t3625 = -1.*t2560*t1538;
  t3626 = t3617 + t3625 + t2673;
  t2999 = -1.*t2615*t2198;
  t3006 = -1.*t2924*t2082;
  t3632 = -1.*t2575*t1301;
  t3634 = -1.*t2560*t1435;
  t3635 = t3632 + t2698 + t3634;
  t3030 = -1.*t2615*t2188;
  t3031 = -1.*t2924*t2065;
  t3661 = t2575*t1468;
  t3667 = t2560*t1538;
  t3670 = t3661 + t3667 + t2724;
  t3041 = t2615*t2198;
  t3047 = t2924*t2082;
  t3131 = -1.*t2047*t3127;
  t3133 = -1.*t2208*t2615;
  t3184 = t3127*t2065;
  t3186 = t2615*t2230;
  t3220 = t2047*t3127;
  t3224 = t2208*t2615;
  t3247 = -1.*t3127*t2082;
  t3248 = -1.*t2615*t2253;
  t3271 = -1.*t3127*t2065;
  t3276 = -1.*t2615*t2230;
  t3292 = t3127*t2082;
  t3293 = t2615*t2253;
  t3381 = -1.*t2047*t3380;
  t3411 = t3380*t2065;
  t3412 = t2615*t2275;
  t3429 = t2047*t3380;
  t3437 = -1.*t3380*t2082;
  t3440 = -1.*t2615*t2303;
  t3463 = -1.*t3380*t2065;
  t3466 = -1.*t2615*t2275;
  t3482 = t3380*t2082;
  t3484 = t2615*t2303;
  t3754 = -1.*t1067*t3159;
  t3755 = -1.*t1682*t2575;
  t3762 = t3159*t1301;
  t3763 = t2575*t1749;
  t3779 = t1067*t3159;
  t3780 = t1682*t2575;
  t3789 = -1.*t2575*t1810;
  t3790 = -1.*t3159*t1468;
  t3804 = -1.*t3159*t1301;
  t3805 = -1.*t2575*t1749;
  t3811 = t2575*t1810;
  t3812 = t3159*t1468;
  t3824 = -1.*t1067*t3393;
  t4033 = -1.*t1209*t2546;
  t4036 = -1.*t1190*t2557;
  t4037 = t4033 + t4036 + t3533;
  t3830 = t3393*t1301;
  t3831 = t2575*t1876;
  t4079 = t1209*t2546;
  t4080 = t1190*t2557;
  t4084 = t4079 + t4080 + t3566;
  t3843 = t1067*t3393;
  t3852 = -1.*t2575*t1946;
  t3855 = -1.*t3393*t1468;
  t4142 = -1.*t2557*t1381;
  t4146 = -1.*t2546*t1407;
  t4150 = t3632 + t4142 + t4146;
  t4176 = t2546*t1511;
  t4177 = t2557*t1525;
  t4178 = t3661 + t4176 + t4177;
  t3872 = -1.*t3393*t1301;
  t3873 = -1.*t2575*t1876;
  t3882 = t2575*t1946;
  t3884 = t3393*t1468;
  t4099 = -1.*t2546*t1511;
  t4100 = -1.*t2557*t1525;
  t4105 = t3617 + t4099 + t4100;
  t4045 = t2557*t1381;
  t4046 = t2546*t1407;
  t4053 = t3543 + t4045 + t4046;
  t4340 = -1.*t1185*t2522;
  t4344 = -1.*t1119*t2541;
  t4345 = t4340 + t3533 + t4344;
  t4393 = t1185*t2522;
  t4394 = t1119*t2541;
  t4395 = t4393 + t3566 + t4394;
  t4456 = -1.*t2541*t1318;
  t4458 = -1.*t2522*t1369;
  t4459 = t4456 + t3632 + t4458;
  t4488 = t2522*t1476;
  t4489 = t2541*t1486;
  t4490 = t4488 + t4489 + t3661;
  t4419 = -1.*t2522*t1476;
  t4420 = -1.*t2541*t1486;
  t4421 = t4419 + t4420 + t3617;
  t4350 = t2541*t1318;
  t4352 = t2522*t1369;
  t4353 = t4350 + t3543 + t4352;
  t4712 = t1023*t3338;
  t4717 = t1051*t3346;
  t4718 = t4712 + t4717;
  t4729 = t1051*t2482;
  t4730 = t1023*t2503;
  t4731 = t4729 + t4730;
  t4737 = 1.000000000016*t815*t2511;
  t4740 = -1.*t1458*t3338;
  t4741 = -1.*t1462*t3346;
  t4744 = 1.000000000016*t3326*t1296;
  t4745 = -1.000000000016*t2482*t1296;
  t4748 = -4.000000000064e-6*t2503*t1296;
  t4752 = t4737 + t4740 + t4741 + t4744 + t4745 + t4748;
  t4789 = -1.*t1051*t2482;
  t4793 = -1.*t1023*t2503;
  t4801 = t4789 + t4793;
  t4810 = -1.*t1023*t3338;
  t4813 = -1.*t1051*t3346;
  t4814 = t4810 + t4813;
  t4819 = t1291*t3326;
  t4820 = -1.*t815*t2482;
  t4821 = -4.e-6*t815*t2503;
  t4822 = -1.000000000016*t2511*t1296;
  t4827 = -4.e-6*t3338*t1296;
  t4829 = -1.*t3346*t1296;
  t4832 = t4819 + t4820 + t4821 + t4822 + t4827 + t4829;
  t4857 = -1.*t1291*t2511;
  t4860 = t2482*t1296;
  t4862 = 4.e-6*t2503*t1296;
  t4864 = t4857 + t4860 + t4862;
  t4868 = -1.000000000016*t815*t2511;
  t4870 = t1458*t3338;
  t4872 = t1462*t3346;
  t4873 = -1.000000000016*t3326*t1296;
  t4881 = 1.000000000016*t2482*t1296;
  t4883 = 4.000000000064e-6*t2503*t1296;
  t4884 = t4868 + t4870 + t4872 + t4873 + t4881 + t4883;
  t4890 = t1462*t2482;
  t4897 = t1458*t2503;
  t4898 = t4890 + t4897 + t4822;
  t4901 = -1.*t1291*t3326;
  t4904 = t815*t2482;
  t4906 = 4.e-6*t815*t2503;
  t4907 = 1.000000000016*t2511*t1296;
  t4909 = 4.e-6*t3338*t1296;
  t4910 = t3346*t1296;
  t4911 = t4901 + t4904 + t4906 + t4907 + t4909 + t4910;
  t4932 = -1.*t1462*t2482;
  t4939 = -1.*t1458*t2503;
  t4941 = t4932 + t4939 + t4907;
  t4722 = -0.03874900000062*t1296;
  t4970 = t1291*t2511;
  t4971 = -1.*t2482*t1296;
  t4974 = -4.e-6*t2503*t1296;
  t4976 = t4970 + t4971 + t4974;
  p_output1[0]=t1446*var2[0] + t1547*var2[1] + t1242*var2[2];
  p_output1[1]=t1594*t180*var2[0] + t1603*t180*var2[1] + t1585*t180*var2[2];
  p_output1[2]=t1643*t180*var2[0] + t1670*t180*var2[1] + t1622*t180*var2[2];
  p_output1[3]=t1799*var2[0] + t1859*var2[1] + t1742*var2[2];
  p_output1[4]=t1931*var2[0] + t2008*var2[1];
  p_output1[5]=t2027;
  p_output1[6]=t2033;
  p_output1[7]=t2037;
  p_output1[8]=(-1.*t1446*t2049 - 1.*t2038*t2065)*var2[0] + (-1.*t1547*t2049 - 1.*t2038*t2082)*var2[1] + (-1.*t2038*t2047 - 1.*t1242*t2049)*var2[2];
  p_output1[9]=-1.*t2038*t2126*var2[0] - 1.*t2038*t2132*var2[1] - 1.*t2038*t2112*var2[2];
  p_output1[10]=(t1070*t1594*t2038 + t1435*t2049)*var2[0] + (t1070*t1603*t2038 + t1538*t2049)*var2[1] + (t1070*t1585*t2038 + t1214*t2049)*var2[2];
  p_output1[11]=(t1070*t1643*t2038 + t2049*t2188)*var2[0] + (t1070*t1670*t2038 + t2049*t2198)*var2[1] + (t1070*t1622*t2038 + t2049*t2176)*var2[2];
  p_output1[12]=(t2049*t2230 - 1.*t2038*t2240)*var2[0] + (t2049*t2253 - 1.*t2038*t2260)*var2[1] + (t2049*t2208 - 1.*t2038*t2214)*var2[2];
  p_output1[13]=(t2049*t2275 - 1.*t2038*t2282)*var2[0] + (t2049*t2303 - 1.*t2038*t2312)*var2[1];
  p_output1[14]=t2327;
  p_output1[15]=t2335;
  p_output1[16]=t2338;
  p_output1[17]=t2327*var2[0] + t2335*var2[1] + t2338*var2[2];
  p_output1[18]=t2049*t2126*var2[0] + t2049*t2132*var2[1] + t2049*t2112*var2[2];
  p_output1[19]=(t1435*t2038 - 1.*t1070*t1594*t2049)*var2[0] + (t1538*t2038 - 1.*t1070*t1603*t2049)*var2[1] + (t1214*t2038 - 1.*t1070*t1585*t2049)*var2[2];
  p_output1[20]=(-1.*t1070*t1643*t2049 + t2038*t2188)*var2[0] + (-1.*t1070*t1670*t2049 + t2038*t2198)*var2[1] + (-1.*t1070*t1622*t2049 + t2038*t2176)*var2[2];
  p_output1[21]=(t2038*t2230 + t2049*t2240)*var2[0] + (t2038*t2253 + t2049*t2260)*var2[1] + (t2038*t2208 + t2049*t2214)*var2[2];
  p_output1[22]=(t2038*t2275 + t2049*t2282)*var2[0] + (t2038*t2303 + t2049*t2312)*var2[1];
  p_output1[23]=t1446*t2049 + t2038*t2065;
  p_output1[24]=t1547*t2049 + t2038*t2082;
  p_output1[25]=t2038*t2047 + t1242*t2049;
  p_output1[26]=(t2033*(t2037*t2578 + t2112*t2578 + t1242*t2585 + t1242*t2599) + t2037*(-1.*t2033*t2578 - 1.*t2132*t2578 - 1.*t1547*t2585 - 1.*t1547*t2599) + t1547*t2671 + t1242*t2681)*var2[0] + (t2027*(-1.*t2037*t2578 - 1.*t2112*t2578 - 1.*t1242*t2585 - 1.*t1242*t2599) + t2037*(t2027*t2578 + t2126*t2578 + t1446*t2585 + t1446*t2599) + t1446*t2625 + t1242*t2630)*var2[1] + (t2033*(-1.*t2027*t2578 - 1.*t2126*t2578 - 1.*t1446*t2585 - 1.*t1446*t2599) + t2027*(t2033*t2578 + t2132*t2578 + t1547*t2585 + t1547*t2599) + t1547*t2708 + t1446*t2734)*var2[2];
  p_output1[27]=(t1603*t180*t2671 + t1585*t180*t2681 + t2033*(-1.*t1070*t1585*t2578 + t1585*t180*t2599 - 1.*t1070*t1242*t2771 + t180*t2037*t2771 + t2807 + t2811) + t2037*(t1070*t1603*t2578 - 1.*t1603*t180*t2599 + t1070*t1547*t2771 - 1.*t180*t2033*t2771 + t2827 + t2831))*var2[0] + (t1594*t180*t2625 + t1585*t180*t2630 + t2027*(t1070*t1585*t2578 - 1.*t1585*t180*t2599 + t2759 + t1070*t1242*t2771 - 1.*t180*t2037*t2771 + t2777) + t2037*(-1.*t1070*t1594*t2578 + t1594*t180*t2599 - 1.*t1070*t1446*t2771 + t180*t2027*t2771 + t2787 + t2788))*var2[1] + (t1603*t180*t2708 + t1594*t180*t2734 + t2033*(t1070*t1594*t2578 - 1.*t1594*t180*t2599 + t1070*t1446*t2771 - 1.*t180*t2027*t2771 + t2854 + t2855) + t2027*(-1.*t1070*t1603*t2578 + t1603*t180*t2599 - 1.*t1070*t1547*t2771 + t180*t2033*t2771 + t2870 + t2877))*var2[2];
  p_output1[28]=(t1670*t180*t2671 + t1622*t180*t2681 + t2033*(-1.*t1070*t1622*t2578 + t1622*t180*t2599 - 1.*t1070*t1242*t2931 + t180*t2037*t2931 + t2978 + t2980) + t2037*(t1070*t1670*t2578 - 1.*t1670*t180*t2599 + t1070*t1547*t2931 - 1.*t180*t2033*t2931 + t2999 + t3006))*var2[0] + (t1643*t180*t2625 + t1622*t180*t2630 + t2027*(t1070*t1622*t2578 - 1.*t1622*t180*t2599 + t2898 + t2927 + t1070*t1242*t2931 - 1.*t180*t2037*t2931) + t2037*(-1.*t1070*t1643*t2578 + t1643*t180*t2599 - 1.*t1070*t1446*t2931 + t180*t2027*t2931 + t2957 + t2960))*var2[1] + (t1670*t180*t2708 + t1643*t180*t2734 + t2033*(t1070*t1643*t2578 - 1.*t1643*t180*t2599 + t1070*t1446*t2931 - 1.*t180*t2027*t2931 + t3030 + t3031) + t2027*(-1.*t1070*t1670*t2578 + t1670*t180*t2599 - 1.*t1070*t1547*t2931 + t180*t2033*t2931 + t3041 + t3047))*var2[2];
  p_output1[29]=(t1859*t2671 + t1742*t2681 + t2033*(t2214*t2578 + t1742*t2599 + t1242*t3161 + t2037*t3167 + t3220 + t3224) + t2037*(-1.*t2260*t2578 - 1.*t1859*t2599 - 1.*t1547*t3161 - 1.*t2033*t3167 + t3247 + t3248))*var2[0] + (t1799*t2625 + t1742*t2630 + t2027*(-1.*t2214*t2578 - 1.*t1742*t2599 + t3131 + t3133 - 1.*t1242*t3161 - 1.*t2037*t3167) + t2037*(t2240*t2578 + t1799*t2599 + t1446*t3161 + t2027*t3167 + t3184 + t3186))*var2[1] + (t1859*t2708 + t1799*t2734 + t2033*(-1.*t2240*t2578 - 1.*t1799*t2599 - 1.*t1446*t3161 - 1.*t2027*t3167 + t3271 + t3276) + t2027*(t2260*t2578 + t1859*t2599 + t1547*t3161 + t2033*t3167 + t3292 + t3293))*var2[2];
  p_output1[30]=(t2008*t2671 + t2033*(t1242*t3395 + t2037*t3403 + t3429) + t2037*(-1.*t2312*t2578 - 1.*t2008*t2599 - 1.*t1547*t3395 - 1.*t2033*t3403 + t3437 + t3440))*var2[0] + (t1931*t2625 + t2027*(t3381 - 1.*t1242*t3395 - 1.*t2037*t3403) + t2037*(t2282*t2578 + t1931*t2599 + t1446*t3395 + t2027*t3403 + t3411 + t3412))*var2[1] + (t2008*t2708 + t1931*t2734 + t2033*(-1.*t2282*t2578 - 1.*t1931*t2599 - 1.*t1446*t3395 - 1.*t2027*t3403 + t3463 + t3466) + t2027*(t2312*t2578 + t2008*t2599 + t1547*t3395 + t2033*t3403 + t3482 + t3484))*var2[2];
  p_output1[31]=t2033*t2671 + t2037*t2681;
  p_output1[32]=t2027*t2625 + t2037*t2630;
  p_output1[33]=t2033*t2708 + t2027*t2734;
  p_output1[34]=(t2082*(t1585*t2560 + t1214*t2771 + t2807 + t2811) + t2047*(-1.*t1603*t2560 - 1.*t1538*t2771 + t2827 + t2831) + t1538*t3569 + t1214*t3626)*var2[0] + (t2065*(-1.*t1585*t2560 + t2759 - 1.*t1214*t2771 + t2777) + t2047*(t1594*t2560 + t1435*t2771 + t2787 + t2788) + t1435*t3535 + t1214*t3546)*var2[1] + (t2082*(-1.*t1594*t2560 - 1.*t1435*t2771 + t2854 + t2855) + t2065*(t1603*t2560 + t1538*t2771 + t2870 + t2877) + t1538*t3635 + t1435*t3670)*var2[2];
  p_output1[35]=(t2082*(t1622*t2560 + t1214*t2931 + t2978 + t2980) + t2047*(-1.*t1670*t2560 - 1.*t1538*t2931 + t2999 + t3006) + t2198*t3569 + t2176*t3626)*var2[0] + (t2065*(-1.*t1622*t2560 + t2898 + t2927 - 1.*t1214*t2931) + t2047*(t1643*t2560 + t1435*t2931 + t2957 + t2960) + t2188*t3535 + t2176*t3546)*var2[1] + (t2082*(-1.*t1643*t2560 - 1.*t1435*t2931 + t3030 + t3031) + t2065*(t1670*t2560 + t1538*t2931 + t3041 + t3047) + t2198*t3635 + t2188*t3670)*var2[2];
  p_output1[36]=(t2253*t3569 + t2208*t3626 + t2082*(t1737*t2560 + t1214*t3141 + t3220 + t3224 + t3779 + t3780) + t2047*(-1.*t1857*t2560 - 1.*t1538*t3141 + t3247 + t3248 + t3789 + t3790))*var2[0] + (t2230*t3535 + t2208*t3546 + t2065*(-1.*t1737*t2560 + t3131 + t3133 - 1.*t1214*t3141 + t3754 + t3755) + t2047*(t1791*t2560 + t1435*t3141 + t3184 + t3186 + t3762 + t3763))*var2[1] + (t2253*t3635 + t2230*t3670 + t2082*(-1.*t1791*t2560 - 1.*t1435*t3141 + t3271 + t3276 + t3804 + t3805) + t2065*(t1857*t2560 + t1538*t3141 + t3292 + t3293 + t3811 + t3812))*var2[2];
  p_output1[37]=(t2303*t3569 + t2082*(t1214*t3385 + t3429 + t3843) + t2047*(-1.*t1997*t2560 - 1.*t1538*t3385 + t3437 + t3440 + t3852 + t3855))*var2[0] + (t2275*t3535 + t2065*(t3381 - 1.*t1214*t3385 + t3824) + t2047*(t1923*t2560 + t1435*t3385 + t3411 + t3412 + t3830 + t3831))*var2[1] + (t2303*t3635 + t2275*t3670 + t2082*(-1.*t1923*t2560 - 1.*t1435*t3385 + t3463 + t3466 + t3872 + t3873) + t2065*(t1997*t2560 + t1538*t3385 + t3482 + t3484 + t3882 + t3884))*var2[2];
  p_output1[38]=t2082*t3569 + t2047*t3626;
  p_output1[39]=t2065*t3535 + t2047*t3546;
  p_output1[40]=t2082*t3635 + t2065*t3670;
  p_output1[41]=(t1468*(t1190*t2546 + t1619*t2557 + t1190*t2912 + t1209*t2917) + t1067*(-1.*t1525*t2546 - 1.*t1667*t2557 - 1.*t1525*t2912 - 1.*t1511*t2917))*var2[0] + (t1301*(-1.*t1190*t2546 - 1.*t1619*t2557 - 1.*t1190*t2912 - 1.*t1209*t2917) + t1067*(t1381*t2546 + t1639*t2557 + t1381*t2912 + t1407*t2917))*var2[1] + (t1468*(-1.*t1381*t2546 - 1.*t1639*t2557 - 1.*t1381*t2912 - 1.*t1407*t2917) + t1301*(t1525*t2546 + t1667*t2557 + t1525*t2912 + t1511*t2917))*var2[2];
  p_output1[42]=(t1468*(t1719*t2546 + t1730*t2557 + t1190*t3114 + t1209*t3125 + t3779 + t3780) + t1067*(-1.*t1849*t2546 - 1.*t1837*t2557 - 1.*t1525*t3114 - 1.*t1511*t3125 + t3789 + t3790) + t1810*t4084 + t1682*t4105)*var2[0] + (t1301*(-1.*t1719*t2546 - 1.*t1730*t2557 - 1.*t1190*t3114 - 1.*t1209*t3125 + t3754 + t3755) + t1067*(t1776*t2546 + t1788*t2557 + t1381*t3114 + t1407*t3125 + t3762 + t3763) + t1749*t4037 + t1682*t4053)*var2[1] + (t1468*(-1.*t1776*t2546 - 1.*t1788*t2557 - 1.*t1381*t3114 - 1.*t1407*t3125 + t3804 + t3805) + t1301*(t1849*t2546 + t1837*t2557 + t1525*t3114 + t1511*t3125 + t3811 + t3812) + t1810*t4150 + t1749*t4178)*var2[2];
  p_output1[43]=(t1468*(t1190*t3366 + t1209*t3377 + t3843) + t1067*(-1.*t1993*t2546 - 1.*t1979*t2557 - 1.*t1525*t3366 - 1.*t1511*t3377 + t3852 + t3855) + t1946*t4084)*var2[0] + (t1301*(-1.*t1190*t3366 - 1.*t1209*t3377 + t3824) + t1067*(t1909*t2546 + t1920*t2557 + t1381*t3366 + t1407*t3377 + t3830 + t3831) + t1876*t4037)*var2[1] + (t1468*(-1.*t1909*t2546 - 1.*t1920*t2557 - 1.*t1381*t3366 - 1.*t1407*t3377 + t3872 + t3873) + t1301*(t1993*t2546 + t1979*t2557 + t1525*t3366 + t1511*t3377 + t3882 + t3884) + t1946*t4150 + t1876*t4178)*var2[2];
  p_output1[44]=t1468*t4084 + t1067*t4105;
  p_output1[45]=t1301*t4037 + t1067*t4053;
  p_output1[46]=t1468*t4150 + t1301*t4178;
  p_output1[47]=(0.15121*t1758 - 0.15121*t1765 + t1468*(t1694*t2522 + t1717*t2541 + t1119*t3089 + t1185*t3107 + t3779 + t3780) + t1067*(-1.*t1828*t2522 - 1.*t1819*t2541 - 1.*t1486*t3089 - 1.*t1476*t3107 + t3789 + t3790) + t1810*t4395 + t1682*t4421)*var2[0] + (-0.15121*t1819 + 0.15121*t1828 + t1301*(-1.*t1694*t2522 - 1.*t1717*t2541 - 1.*t1119*t3089 - 1.*t1185*t3107 + t3754 + t3755) + t1067*(t1758*t2522 + t1765*t2541 + t1318*t3089 + t1369*t3107 + t3762 + t3763) + t1749*t4345 + t1682*t4353)*var2[1] + (0.15121*t1694 - 0.15121*t1717 + t1468*(-1.*t1758*t2522 - 1.*t1765*t2541 - 1.*t1318*t3089 - 1.*t1369*t3107 + t3804 + t3805) + t1301*(t1828*t2522 + t1819*t2541 + t1486*t3089 + t1476*t3107 + t3811 + t3812) + t1810*t4459 + t1749*t4490)*var2[2];
  p_output1[48]=(0.15121*t1888 - 0.15121*t1899 + t1468*(t1119*t3353 + t1185*t3359 + t3843) + t1067*(-1.*t1967*t2522 - 1.*t1957*t2541 - 1.*t1486*t3353 - 1.*t1476*t3359 + t3852 + t3855) + t1946*t4395)*var2[0] + (-0.15121*t1957 + 0.15121*t1967 + t1301*(-1.*t1119*t3353 - 1.*t1185*t3359 + t3824) + t1067*(t1888*t2522 + t1899*t2541 + t1318*t3353 + t1369*t3359 + t3830 + t3831) + t1876*t4345)*var2[1] + (t1468*(-1.*t1888*t2522 - 1.*t1899*t2541 - 1.*t1318*t3353 - 1.*t1369*t3359 + t3872 + t3873) + t1301*(t1967*t2522 + t1957*t2541 + t1486*t3353 + t1476*t3359 + t3882 + t3884) + t1946*t4459 + t1876*t4490)*var2[2];
  p_output1[49]=-0.15121*t1318 + 0.15121*t1369 + t1468*t4395 + t1067*t4421;
  p_output1[50]=0.15121*t1476 - 0.15121*t1486 + t1301*t4345 + t1067*t4353;
  p_output1[51]=-0.15121*t1119 + 0.15121*t1185 + t1468*t4459 + t1301*t4490;
  p_output1[52]=(t1458*t4718 + t4722 + 4.000000000064e-6*t1296*t4731 + t1023*t4752 + 4.e-6*(-1.*t1462*t4718 - 1.000000000016*t1296*t4731 - 1.*t1051*t4752) - 0.281210000004*t815)*var2[0] + (0.281210000008499*t1296 - 4.e-6*t1296*t4814 + t1023*t4832 - 0.03874900000062*t815 - 4.e-6*t4801*t815 + 4.e-6*(t1296*t4814 - 1.*t1051*t4832 + t4801*t815))*var2[1] + (4.000000000064e-6*t1296*t4864 - 4.e-6*t1296*t4884 + t1458*t4911 - 4.e-6*t4898*t815 + 4.e-6*(-1.000000000016*t1296*t4864 + t1296*t4884 - 1.*t1462*t4911 + t4898*t815))*var2[2];
  p_output1[53]=0.038749*t1291 - 0.281210000004*t1296 + t1458*t4731 + t1023*t4941 + 4.e-6*(-1.*t1462*t4731 - 1.*t1051*t4941);
  p_output1[54]=1.e-6*t1458 + 0.28121*t1462 + t4722 - 4.e-6*t1296*t4801 + t1023*t4976 + 4.e-6*(t1296*t4801 - 1.*t1051*t4976);
  p_output1[55]=1.e-6*t1023 + 0.28121*t1051 + t1458*t4864 - 4.e-6*t1296*t4898 + 4.e-6*(-1.*t1462*t4864 + t1296*t4898);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_DiagonalStance2.hh"

namespace DiagonalStance2
{

void J_fFlFoot_vec_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
