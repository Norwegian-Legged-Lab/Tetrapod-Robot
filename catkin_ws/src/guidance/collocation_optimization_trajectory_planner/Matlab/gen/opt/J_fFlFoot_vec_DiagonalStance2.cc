/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:00 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t987;
  double t951;
  double t1146;
  double t977;
  double t1136;
  double t1144;
  double t1145;
  double t1159;
  double t1160;
  double t1171;
  double t1185;
  double t1202;
  double t1314;
  double t1310;
  double t1231;
  double t1235;
  double t1236;
  double t1246;
  double t1256;
  double t1267;
  double t1322;
  double t1323;
  double t1328;
  double t809;
  double t1426;
  double t1218;
  double t1228;
  double t1402;
  double t1418;
  double t1337;
  double t1446;
  double t1452;
  double t1471;
  double t1475;
  double t1485;
  double t1487;
  double t1488;
  double t1493;
  double t1494;
  double t1506;
  double t1515;
  double t1600;
  double t1616;
  double t1618;
  double t1622;
  double t1625;
  double t1633;
  double t1634;
  double t1636;
  double t1638;
  double t1645;
  double t1647;
  double t1649;
  double t1651;
  double t1277;
  double t1329;
  double t1335;
  double t1339;
  double t1344;
  double t1345;
  double t1478;
  double t1521;
  double t1522;
  double t1524;
  double t1526;
  double t1556;
  double t1641;
  double t1655;
  double t1664;
  double t1669;
  double t1670;
  double t1672;
  double t1700;
  double t1719;
  double t1755;
  double t1208;
  double t1853;
  double t1859;
  double t1867;
  double t1873;
  double t1874;
  double t1630;
  double t1923;
  double t1924;
  double t1928;
  double t1934;
  double t1937;
  double t1628;
  double t1996;
  double t1997;
  double t2008;
  double t2018;
  double t2025;
  double t2028;
  double t2029;
  double t2073;
  double t2074;
  double t2078;
  double t2080;
  double t2081;
  double t1989;
  double t2122;
  double t2129;
  double t2132;
  double t2136;
  double t2145;
  double t2150;
  double t1424;
  double t1427;
  double t1431;
  double t1441;
  double t1523;
  double t1557;
  double t1567;
  double t1623;
  double t1631;
  double t1665;
  double t1673;
  double t1677;
  double t1169;
  double t1213;
  double t1336;
  double t1346;
  double t1357;
  double t1216;
  double t1360;
  double t1375;
  double t2188;
  double t2203;
  double t1443;
  double t1572;
  double t1575;
  double t1632;
  double t1681;
  double t1694;
  double t1701;
  double t1711;
  double t1723;
  double t1725;
  double t1749;
  double t1758;
  double t1766;
  double t1774;
  double t1775;
  double t1778;
  double t1780;
  double t1790;
  double t1793;
  double t1794;
  double t1796;
  double t1797;
  double t1810;
  double t1821;
  double t1827;
  double t1831;
  double t1835;
  double t1863;
  double t1879;
  double t1884;
  double t1890;
  double t1891;
  double t1892;
  double t1840;
  double t1843;
  double t1847;
  double t1888;
  double t1893;
  double t1903;
  double t1930;
  double t1941;
  double t1942;
  double t1948;
  double t1949;
  double t1950;
  double t1913;
  double t1915;
  double t1943;
  double t1955;
  double t1963;
  double t2019;
  double t2033;
  double t2035;
  double t2040;
  double t2041;
  double t2046;
  double t1975;
  double t1976;
  double t1990;
  double t2039;
  double t2056;
  double t2058;
  double t2075;
  double t2085;
  double t2087;
  double t2089;
  double t2095;
  double t2098;
  double t2067;
  double t2069;
  double t2070;
  double t2088;
  double t2099;
  double t2100;
  double t2142;
  double t2154;
  double t2156;
  double t2159;
  double t2160;
  double t2161;
  double t2109;
  double t2115;
  double t2119;
  double t2157;
  double t2163;
  double t2165;
  double t2222;
  double t2228;
  double t2229;
  double t2244;
  double t2246;
  double t2248;
  double t2191;
  double t2193;
  double t2194;
  double t2565;
  double t2566;
  double t2568;
  double t2552;
  double t2554;
  double t2555;
  double t2557;
  double t2559;
  double t2560;
  double t2273;
  double t2277;
  double t2278;
  double t2281;
  double t2283;
  double t2288;
  double t2292;
  double t2306;
  double t2308;
  double t2370;
  double t2373;
  double t2383;
  double t2386;
  double t2402;
  double t2403;
  double t2414;
  double t2415;
  double t2418;
  double t2422;
  double t2429;
  double t2434;
  double t2444;
  double t2446;
  double t2448;
  double t2454;
  double t2457;
  double t2458;
  double t2466;
  double t2467;
  double t2469;
  double t2472;
  double t2473;
  double t2478;
  double t2499;
  double t2500;
  double t2502;
  double t2508;
  double t2509;
  double t2511;
  double t2533;
  double t2536;
  double t2538;
  double t2541;
  double t2543;
  double t2544;
  double t2778;
  double t2779;
  double t2780;
  double t2782;
  double t2783;
  double t2784;
  double t2787;
  double t2788;
  double t2790;
  double t2791;
  double t2794;
  double t2795;
  double t2800;
  double t2807;
  double t2808;
  double t2810;
  double t2813;
  double t2769;
  double t2770;
  double t2773;
  double t2775;
  double t2777;
  double t2785;
  double t2801;
  double t2818;
  double t2819;
  double t2822;
  double t2825;
  double t2826;
  double t2830;
  double t2831;
  double t2838;
  double t2841;
  double t2183;
  double t2185;
  double t2186;
  double t2774;
  double t2820;
  double t2842;
  double t2850;
  double t2851;
  double t2853;
  double t2854;
  double t2859;
  double t2861;
  double t2862;
  double t2863;
  double t2873;
  double t2874;
  double t2877;
  double t2878;
  double t2881;
  double t2884;
  double t2885;
  double t2889;
  double t2890;
  double t2892;
  double t2172;
  double t2173;
  double t2175;
  double t2910;
  double t2912;
  double t2919;
  double t2925;
  double t2928;
  double t2930;
  double t2899;
  double t2903;
  double t2907;
  double t2177;
  double t2178;
  double t2182;
  double t2935;
  double t2938;
  double t2942;
  double t2944;
  double t3154;
  double t3157;
  double t3158;
  double t2951;
  double t2957;
  double t2958;
  double t2959;
  double t3014;
  double t3018;
  double t3020;
  double t3021;
  double t3031;
  double t3041;
  double t3044;
  double t3051;
  double t3080;
  double t3084;
  double t3090;
  double t3094;
  double t3112;
  double t3114;
  double t3119;
  double t3120;
  double t3321;
  double t3331;
  double t3333;
  double t3334;
  double t3341;
  double t3342;
  double t3351;
  double t3352;
  double t3353;
  double t3336;
  double t3343;
  double t3345;
  double t3568;
  double t3571;
  double t3574;
  double t3576;
  double t3577;
  double t3579;
  double t3583;
  double t3584;
  double t3586;
  double t3592;
  double t3593;
  double t3580;
  double t3597;
  double t3599;
  double t3603;
  double t3605;
  double t3608;
  double t3617;
  double t3621;
  double t3626;
  double t3629;
  double t3633;
  double t3634;
  double t3637;
  double t3638;
  double t3639;
  double t1851;
  double t1904;
  double t1906;
  double t1922;
  double t1965;
  double t1966;
  double t3601;
  double t3610;
  double t3612;
  double t3651;
  double t3655;
  double t3656;
  double t3627;
  double t3640;
  double t3648;
  double t1991;
  double t2059;
  double t2060;
  double t3803;
  double t3805;
  double t3808;
  double t3813;
  double t3816;
  double t3819;
  double t3822;
  double t3823;
  double t3828;
  double t3812;
  double t3820;
  double t3829;
  double t3830;
  double t3835;
  double t3841;
  double t3843;
  double t3845;
  double t3832;
  double t3855;
  double t3861;
  double t3871;
  double t3872;
  double t3874;
  double t3884;
  double t3885;
  double t3887;
  double t3891;
  double t3892;
  double t3897;
  double t3898;
  double t2072;
  double t2102;
  double t2105;
  double t3865;
  double t3876;
  double t3881;
  double t3915;
  double t3916;
  double t3917;
  double t3889;
  double t3899;
  double t3909;
  double t2120;
  double t2166;
  double t2168;
  double t3149;
  double t3164;
  double t3182;
  double t3183;
  double t3206;
  double t3220;
  double t3231;
  double t3235;
  double t3271;
  double t3272;
  double t3284;
  double t3292;
  double t4099;
  double t4103;
  double t4104;
  double t3318;
  double t3349;
  double t4122;
  double t4125;
  double t4126;
  double t3377;
  double t3385;
  double t4147;
  double t4149;
  double t4155;
  double t3426;
  double t3435;
  double t4175;
  double t4176;
  double t4178;
  double t3458;
  double t3474;
  double t4189;
  double t4191;
  double t4192;
  double t3513;
  double t3514;
  double t4214;
  double t4218;
  double t4219;
  double t3539;
  double t3552;
  double t3614;
  double t3615;
  double t3680;
  double t3681;
  double t3707;
  double t3710;
  double t3730;
  double t3732;
  double t3757;
  double t3758;
  double t3779;
  double t3780;
  double t3882;
  double t3924;
  double t3926;
  double t3952;
  double t3965;
  double t3966;
  double t3986;
  double t3988;
  double t4001;
  double t4002;
  double t4363;
  double t4364;
  double t4375;
  double t4377;
  double t4395;
  double t4398;
  double t4415;
  double t4421;
  double t4442;
  double t4443;
  double t4462;
  double t4464;
  double t4481;
  double t4790;
  double t4792;
  double t4793;
  double t4490;
  double t4491;
  double t4821;
  double t4825;
  double t4826;
  double t4513;
  double t4524;
  double t4527;
  double t4864;
  double t4866;
  double t4870;
  double t4892;
  double t4894;
  double t4895;
  double t4553;
  double t4560;
  double t4573;
  double t4575;
  double t4837;
  double t4838;
  double t4839;
  double t4799;
  double t4804;
  double t4805;
  double t5033;
  double t5035;
  double t5037;
  double t5079;
  double t5081;
  double t5083;
  double t5128;
  double t5129;
  double t5130;
  double t5150;
  double t5152;
  double t5153;
  double t5101;
  double t5103;
  double t5104;
  double t5040;
  double t5043;
  double t5046;
  double t5293;
  double t5296;
  double t5302;
  double t5311;
  double t5314;
  double t5316;
  double t5324;
  double t5328;
  double t5330;
  double t5340;
  double t5342;
  double t5343;
  double t5346;
  double t5369;
  double t5370;
  double t5373;
  double t5380;
  double t5383;
  double t5389;
  double t5391;
  double t5392;
  double t5394;
  double t5396;
  double t5405;
  double t5406;
  double t5407;
  double t5425;
  double t5426;
  double t5427;
  double t5428;
  double t5434;
  double t5435;
  double t5438;
  double t5443;
  double t5449;
  double t5451;
  double t5454;
  double t5458;
  double t5459;
  double t5460;
  double t5462;
  double t5464;
  double t5466;
  double t5469;
  double t5470;
  double t5473;
  double t5476;
  double t5508;
  double t5509;
  double t5511;
  double t5307;
  double t5540;
  double t5543;
  double t5544;
  double t5549;
  t987 = Cos(var1[8]);
  t951 = Cos(var1[7]);
  t1146 = -1. + t987;
  t977 = -1. + t951;
  t1136 = -1.*t987;
  t1144 = 1. + t1136;
  t1145 = 1.6e-11*t1144;
  t1159 = 1.6e-11*t1146;
  t1160 = 1. + t1145 + t1159;
  t1171 = 4.e-6*t1146;
  t1185 = -4.e-6*t987;
  t1202 = t1171 + t1185;
  t1314 = Sin(var1[7]);
  t1310 = Cos(var1[6]);
  t1231 = 1.6e-11*t977;
  t1235 = 1. + t1231;
  t1236 = t1235*t1160;
  t1246 = 4.e-6*t977*t1202;
  t1256 = t1236 + t1246;
  t1267 = Sin(var1[6]);
  t1322 = 4.e-6*t1160*t1314;
  t1323 = t1202*t1314;
  t1328 = t1322 + t1323;
  t809 = Cos(var1[4]);
  t1426 = Sin(var1[8]);
  t1218 = Sin(var1[4]);
  t1228 = Cos(var1[5]);
  t1402 = -1.000000000016*t1144;
  t1418 = 1. + t1402;
  t1337 = Sin(var1[5]);
  t1446 = -4.e-6*t1418*t1314;
  t1452 = -4.e-6*t1235*t1426;
  t1471 = -4.e-6*t977*t1426;
  t1475 = t1446 + t1452 + t1471;
  t1485 = -1.*t951;
  t1487 = 1. + t1485;
  t1488 = -1.000000000016*t1487;
  t1493 = 1. + t1488;
  t1494 = t1493*t1418;
  t1506 = -1.000000000016*t1314*t1426;
  t1515 = t1494 + t1506;
  t1600 = -1. + t1145;
  t1616 = 4.e-6*t1600;
  t1618 = 4.e-6*t1144;
  t1622 = t1616 + t1618;
  t1625 = t1145 + t1136;
  t1633 = 4.e-6*t1622*t1314;
  t1634 = t1625*t1314;
  t1636 = -1.000000000016*t1493*t1426;
  t1638 = t1633 + t1634 + t1636;
  t1645 = t1235*t1622;
  t1647 = 4.e-6*t977*t1625;
  t1649 = 4.000000000064e-6*t1314*t1426;
  t1651 = t1645 + t1647 + t1649;
  t1277 = -1.*t1256*t1267;
  t1329 = t1310*t1328;
  t1335 = t1277 + t1329;
  t1339 = t1310*t1256;
  t1344 = t1267*t1328;
  t1345 = t1339 + t1344;
  t1478 = -1.*t1267*t1475;
  t1521 = t1310*t1515;
  t1522 = t1478 + t1521;
  t1524 = t1310*t1475;
  t1526 = t1267*t1515;
  t1556 = t1524 + t1526;
  t1641 = t1267*t1638;
  t1655 = t1310*t1651;
  t1664 = t1641 + t1655;
  t1669 = t1310*t1638;
  t1670 = -1.*t1267*t1651;
  t1672 = t1669 + t1670;
  t1700 = -1.*t1337*t1335;
  t1719 = -1.*t1337*t1522;
  t1755 = -1.*t1337*t1672;
  t1208 = t951*t1202;
  t1853 = 4.e-6*t951*t1160;
  t1859 = t1853 + t1208;
  t1867 = -1.6e-11*t1160*t1314;
  t1873 = -4.e-6*t1202*t1314;
  t1874 = t1867 + t1873;
  t1630 = 1.000000000016*t1314*t1426;
  t1923 = -1.000000000016*t1418*t1314;
  t1924 = -1.000000000016*t951*t1426;
  t1928 = t1923 + t1924;
  t1934 = -4.e-6*t951*t1418;
  t1937 = t1934 + t1649;
  t1628 = t951*t1625;
  t1996 = -1.6e-11*t1622*t1314;
  t1997 = -4.e-6*t1625*t1314;
  t2008 = 4.000000000064e-6*t951*t1426;
  t2018 = t1996 + t1997 + t2008;
  t2025 = 4.e-6*t951*t1622;
  t2028 = 1.000000000032*t1314*t1426;
  t2029 = t2025 + t1628 + t2028;
  t2073 = -1.000000000016*t987*t1314;
  t2074 = t2073 + t1636;
  t2078 = -4.e-6*t1235*t987;
  t2080 = -4.e-6*t977*t987;
  t2081 = t2078 + t2080 + t1649;
  t1989 = 1.000000000016*t951*t1426;
  t2122 = 4.000000000064e-6*t987*t1314;
  t2129 = 4.000000000064e-6*t1235*t1426;
  t2132 = 4.000000000064e-6*t977*t1426;
  t2136 = t2122 + t2129 + t2132;
  t2145 = -1.000000000016*t1493*t987;
  t2150 = t2145 + t2028;
  t1424 = -1.*t1418*t1314;
  t1427 = -1.6e-11*t977*t1426;
  t1431 = -1.*t951*t1426;
  t1441 = t1424 + t1427 + t1431;
  t1523 = t1228*t1522;
  t1557 = -1.*t1337*t1556;
  t1567 = t1523 + t1557;
  t1623 = 4.e-6*t977*t1622;
  t1631 = t1623 + t1628 + t1630;
  t1665 = -1.*t1337*t1664;
  t1673 = t1228*t1672;
  t1677 = t1665 + t1673;
  t1169 = 4.e-6*t977*t1160;
  t1213 = t1169 + t1208;
  t1336 = t1228*t1335;
  t1346 = -1.*t1337*t1345;
  t1357 = t1336 + t1346;
  t1216 = t809*t1213;
  t1360 = -1.*t1218*t1357;
  t1375 = t1216 + t1360;
  t2188 = Sin(var1[3]);
  t2203 = Cos(var1[3]);
  t1443 = t809*t1441;
  t1572 = -1.*t1218*t1567;
  t1575 = t1443 + t1572;
  t1632 = t809*t1631;
  t1681 = -1.*t1218*t1677;
  t1694 = t1632 + t1681;
  t1701 = -1.*t1228*t1345;
  t1711 = t1700 + t1701;
  t1723 = -1.*t1228*t1556;
  t1725 = t1719 + t1723;
  t1749 = -1.*t1228*t1664;
  t1758 = t1749 + t1755;
  t1766 = -1.*t1310*t1256;
  t1774 = -1.*t1267*t1328;
  t1775 = t1766 + t1774;
  t1778 = t1228*t1775;
  t1780 = t1700 + t1778;
  t1790 = -1.*t1310*t1475;
  t1793 = -1.*t1267*t1515;
  t1794 = t1790 + t1793;
  t1796 = t1228*t1794;
  t1797 = t1719 + t1796;
  t1810 = -1.*t1267*t1638;
  t1821 = -1.*t1310*t1651;
  t1827 = t1810 + t1821;
  t1831 = t1228*t1827;
  t1835 = t1831 + t1755;
  t1863 = t1859*t1267;
  t1879 = t1310*t1874;
  t1884 = t1863 + t1879;
  t1890 = t1310*t1859;
  t1891 = -1.*t1267*t1874;
  t1892 = t1890 + t1891;
  t1840 = -4.e-6*t1160*t1314;
  t1843 = -1.*t1202*t1314;
  t1847 = t1840 + t1843;
  t1888 = -1.*t1337*t1884;
  t1893 = t1228*t1892;
  t1903 = t1888 + t1893;
  t1930 = t1267*t1928;
  t1941 = t1310*t1937;
  t1942 = t1930 + t1941;
  t1948 = t1310*t1928;
  t1949 = -1.*t1267*t1937;
  t1950 = t1948 + t1949;
  t1913 = -1.*t951*t1418;
  t1915 = t1913 + t1630;
  t1943 = -1.*t1337*t1942;
  t1955 = t1228*t1950;
  t1963 = t1943 + t1955;
  t2019 = -1.*t1267*t2018;
  t2033 = t1310*t2029;
  t2035 = t2019 + t2033;
  t2040 = t1310*t2018;
  t2041 = t1267*t2029;
  t2046 = t2040 + t2041;
  t1975 = -4.e-6*t1622*t1314;
  t1976 = -1.*t1625*t1314;
  t1990 = t1975 + t1976 + t1989;
  t2039 = t1228*t2035;
  t2056 = -1.*t1337*t2046;
  t2058 = t2039 + t2056;
  t2075 = t1267*t2074;
  t2085 = t1310*t2081;
  t2087 = t2075 + t2085;
  t2089 = t1310*t2074;
  t2095 = -1.*t1267*t2081;
  t2098 = t2089 + t2095;
  t2067 = -1.6e-11*t977*t987;
  t2069 = -1.*t951*t987;
  t2070 = t2067 + t2069 + t1630;
  t2088 = -1.*t1337*t2087;
  t2099 = t1228*t2098;
  t2100 = t2088 + t2099;
  t2142 = -1.*t1267*t2136;
  t2154 = t1310*t2150;
  t2156 = t2142 + t2154;
  t2159 = t1310*t2136;
  t2160 = t1267*t2150;
  t2161 = t2159 + t2160;
  t2109 = 1.000000000016*t987*t1314;
  t2115 = 1.6000000000256e-11*t977*t1426;
  t2119 = t2109 + t2115 + t1989;
  t2157 = t1228*t2156;
  t2163 = -1.*t1337*t2161;
  t2165 = t2157 + t2163;
  t2222 = t1337*t1522;
  t2228 = t1228*t1556;
  t2229 = t2222 + t2228;
  t2244 = t1228*t1664;
  t2246 = t1337*t1672;
  t2248 = t2244 + t2246;
  t2191 = t1337*t1335;
  t2193 = t1228*t1345;
  t2194 = t2191 + t2193;
  t2565 = t2203*t2194;
  t2566 = -1.*t2188*t1375;
  t2568 = t2565 + t2566;
  t2552 = t2203*t2229;
  t2554 = -1.*t2188*t1575;
  t2555 = t2552 + t2554;
  t2557 = t2203*t2248;
  t2559 = -1.*t2188*t1694;
  t2560 = t2557 + t2559;
  t2273 = -1.*t1213*t1218;
  t2277 = -1.*t809*t1357;
  t2278 = t2273 + t2277;
  t2281 = -1.*t1218*t1441;
  t2283 = -1.*t809*t1567;
  t2288 = t2281 + t2283;
  t2292 = -1.*t1218*t1631;
  t2306 = -1.*t809*t1677;
  t2308 = t2292 + t2306;
  t2370 = t1337*t1775;
  t2373 = t1336 + t2370;
  t2383 = t1337*t1794;
  t2386 = t1523 + t2383;
  t2402 = t1337*t1827;
  t2403 = t2402 + t1673;
  t2414 = t1228*t1884;
  t2415 = t1337*t1892;
  t2418 = t2414 + t2415;
  t2422 = t809*t1847;
  t2429 = -1.*t1218*t1903;
  t2434 = t2422 + t2429;
  t2444 = t1228*t1942;
  t2446 = t1337*t1950;
  t2448 = t2444 + t2446;
  t2454 = t809*t1915;
  t2457 = -1.*t1218*t1963;
  t2458 = t2454 + t2457;
  t2466 = t1337*t2035;
  t2467 = t1228*t2046;
  t2469 = t2466 + t2467;
  t2472 = t809*t1990;
  t2473 = -1.*t1218*t2058;
  t2478 = t2472 + t2473;
  t2499 = t1228*t2087;
  t2500 = t1337*t2098;
  t2502 = t2499 + t2500;
  t2508 = t809*t2070;
  t2509 = -1.*t1218*t2100;
  t2511 = t2508 + t2509;
  t2533 = t1337*t2156;
  t2536 = t1228*t2161;
  t2538 = t2533 + t2536;
  t2541 = t809*t2119;
  t2543 = -1.*t1218*t2165;
  t2544 = t2541 + t2543;
  t2778 = 5.136e-14*var1[8];
  t2779 = -0.03874900000062*t1144;
  t2780 = 5.9484e-7*t1146;
  t2782 = -0.03875*t987;
  t2783 = -0.299999999992*t1426;
  t2784 = t2778 + t2779 + t2780 + t2782 + t2783;
  t2787 = -1.284e-8*var1[8];
  t2788 = 1. + t1159;
  t2790 = 0.14871*t2788;
  t2791 = -1.5499600000248e-7*t1144;
  t2794 = -1.55e-7*t1146;
  t2795 = -1.199999999968e-6*t1426;
  t2800 = t2787 + t2790 + t2791 + t2794 + t2795;
  t2807 = 0.80321*t1418;
  t2808 = 0.503210000016051*t1144;
  t2810 = -4.05159380016e-7*t1426;
  t2813 = t2807 + t2808 + t2810;
  t2769 = -1.*t1310;
  t2770 = 1. + t2769;
  t2773 = 0.15121*t2770;
  t2775 = 0.281210000008499*t1487;
  t2777 = 0.03874900000062*t1314;
  t2785 = t1314*t2784;
  t2801 = 4.e-6*t1314*t2800;
  t2818 = t1493*t2813;
  t2819 = t2775 + t2777 + t2785 + t2801 + t2818;
  t2822 = -1.2484e-7*var1[7];
  t2825 = -1.5499600000248e-7*t1487;
  t2826 = 1.124840000016e-6*t1314;
  t2830 = 4.e-6*t977*t2784;
  t2831 = t1235*t2800;
  t2838 = -4.e-6*t1314*t2813;
  t2841 = t2822 + t2825 + t2826 + t2830 + t2831 + t2838;
  t2183 = t1213*t1218;
  t2185 = t809*t1357;
  t2186 = t2183 + t2185;
  t2774 = -0.15121*t1267;
  t2820 = t1267*t2819;
  t2842 = t1310*t2841;
  t2850 = t2773 + t2774 + t2820 + t2842;
  t2851 = -1.*t1337*t2850;
  t2853 = 0.15121*t1267;
  t2854 = t1310*t2819;
  t2859 = -1.*t1267*t2841;
  t2861 = t2773 + t2853 + t2854 + t2859;
  t2862 = t1228*t2861;
  t2863 = t2851 + t2862;
  t2873 = -1.*t1218*t2863;
  t2874 = 4.9936e-13*var1[7];
  t2877 = -0.03874900000062*t1487;
  t2878 = 0.281210000004*t1314;
  t2881 = t951*t2784;
  t2884 = 4.e-6*t977*t2800;
  t2885 = -1.*t1314*t2813;
  t2889 = t2874 + t2877 + t2878 + t2881 + t2884 + t2885;
  t2890 = t809*t2889;
  t2892 = t2873 + t2890;
  t2172 = t1218*t1441;
  t2173 = t809*t1567;
  t2175 = t2172 + t2173;
  t2910 = t809*t2863;
  t2912 = t1218*t2889;
  t2919 = t2910 + t2912;
  t2925 = t1228*t2850;
  t2928 = t1337*t2861;
  t2930 = t2925 + t2928;
  t2899 = -1.*t809*t2863;
  t2903 = -1.*t1218*t2889;
  t2907 = t2899 + t2903;
  t2177 = t1218*t1631;
  t2178 = t809*t1677;
  t2182 = t2177 + t2178;
  t2935 = -1.*t2194*t2930;
  t2938 = -1.*t1375*t2892;
  t2942 = -1.*t2186*t2919;
  t2944 = t2935 + t2938 + t2942;
  t3154 = -1.*t1228*t2850;
  t3157 = -1.*t1337*t2861;
  t3158 = t3154 + t3157;
  t2951 = t2930*t2229;
  t2957 = t2919*t2175;
  t2958 = t2892*t1575;
  t2959 = t2951 + t2957 + t2958;
  t3014 = t2194*t2930;
  t3018 = t1375*t2892;
  t3020 = t2186*t2919;
  t3021 = t3014 + t3018 + t3020;
  t3031 = -1.*t2930*t2248;
  t3041 = -1.*t2919*t2182;
  t3044 = -1.*t2892*t1694;
  t3051 = t3031 + t3041 + t3044;
  t3080 = -1.*t2930*t2229;
  t3084 = -1.*t2919*t2175;
  t3090 = -1.*t2892*t1575;
  t3094 = t3080 + t3084 + t3090;
  t3112 = t2930*t2248;
  t3114 = t2919*t2182;
  t3119 = t2892*t1694;
  t3120 = t3112 + t3114 + t3119;
  t3321 = 0.15121*t1310;
  t3331 = -1.*t1267*t2819;
  t3333 = -1.*t1310*t2841;
  t3334 = t3321 + t2853 + t3331 + t3333;
  t3341 = -0.15121*t1310;
  t3342 = t3341 + t2853 + t2854 + t2859;
  t3351 = t1228*t3334;
  t3352 = -1.*t1337*t3342;
  t3353 = t3351 + t3352;
  t3336 = t1337*t3334;
  t3343 = t1228*t3342;
  t3345 = t3336 + t3343;
  t3568 = 1.124840000016e-6*t951;
  t3571 = -1.5499600000248e-7*t1314;
  t3574 = -4.e-6*t1314*t2784;
  t3576 = -1.6e-11*t1314*t2800;
  t3577 = -4.e-6*t951*t2813;
  t3579 = -1.2484e-7 + t3568 + t3571 + t3574 + t3576 + t3577;
  t3583 = 0.03874900000062*t951;
  t3584 = 0.281210000008499*t1314;
  t3586 = 4.e-6*t951*t2800;
  t3592 = -1.000000000016*t1314*t2813;
  t3593 = t3583 + t3584 + t2881 + t3586 + t3592;
  t3580 = -1.*t1267*t3579;
  t3597 = t1310*t3593;
  t3599 = t3580 + t3597;
  t3603 = t1310*t3579;
  t3605 = t1267*t3593;
  t3608 = t3603 + t3605;
  t3617 = t1228*t3599;
  t3621 = -1.*t1337*t3608;
  t3626 = t3617 + t3621;
  t3629 = 0.281210000004*t951;
  t3633 = -0.03874900000062*t1314;
  t3634 = -1.*t1314*t2784;
  t3637 = -4.e-6*t1314*t2800;
  t3638 = -1.*t951*t2813;
  t3639 = 4.9936e-13 + t3629 + t3633 + t3634 + t3637 + t3638;
  t1851 = t1218*t1847;
  t1904 = t809*t1903;
  t1906 = t1851 + t1904;
  t1922 = t1218*t1915;
  t1965 = t809*t1963;
  t1966 = t1922 + t1965;
  t3601 = t1337*t3599;
  t3610 = t1228*t3608;
  t3612 = t3601 + t3610;
  t3651 = t809*t3626;
  t3655 = t1218*t3639;
  t3656 = t3651 + t3655;
  t3627 = -1.*t1218*t3626;
  t3640 = t809*t3639;
  t3648 = t3627 + t3640;
  t1991 = t1218*t1990;
  t2059 = t809*t2058;
  t2060 = t1991 + t2059;
  t3803 = -4.05159380016e-7*t987;
  t3805 = -0.2999999999968*t1426;
  t3808 = t3803 + t3805;
  t3813 = -1.199999999968e-6*t987;
  t3816 = 1.620637520064e-12*t1426;
  t3819 = -1.284e-8 + t3813 + t3816;
  t3822 = -0.299999999992*t987;
  t3823 = 4.05159380016e-7*t1426;
  t3828 = 5.136e-14 + t3822 + t3823;
  t3812 = -4.e-6*t1314*t3808;
  t3820 = t1235*t3819;
  t3829 = 4.e-6*t977*t3828;
  t3830 = t3812 + t3820 + t3829;
  t3835 = t1493*t3808;
  t3841 = 4.e-6*t1314*t3819;
  t3843 = t1314*t3828;
  t3845 = t3835 + t3841 + t3843;
  t3832 = -1.*t1267*t3830;
  t3855 = t1310*t3845;
  t3861 = t3832 + t3855;
  t3871 = t1310*t3830;
  t3872 = t1267*t3845;
  t3874 = t3871 + t3872;
  t3884 = t1228*t3861;
  t3885 = -1.*t1337*t3874;
  t3887 = t3884 + t3885;
  t3891 = -1.*t1314*t3808;
  t3892 = 4.e-6*t977*t3819;
  t3897 = t951*t3828;
  t3898 = t3891 + t3892 + t3897;
  t2072 = t1218*t2070;
  t2102 = t809*t2100;
  t2105 = t2072 + t2102;
  t3865 = t1337*t3861;
  t3876 = t1228*t3874;
  t3881 = t3865 + t3876;
  t3915 = t809*t3887;
  t3916 = t1218*t3898;
  t3917 = t3915 + t3916;
  t3889 = -1.*t1218*t3887;
  t3899 = t809*t3898;
  t3909 = t3889 + t3899;
  t2120 = t1218*t2119;
  t2166 = t809*t2165;
  t2168 = t2120 + t2166;
  t3149 = -1.*t2194*t2863;
  t3164 = -1.*t1357*t2930;
  t3182 = t2863*t2229;
  t3183 = t2930*t1567;
  t3206 = t2194*t2863;
  t3220 = t1357*t2930;
  t3231 = -1.*t2930*t1677;
  t3235 = -1.*t2863*t2248;
  t3271 = -1.*t2863*t2229;
  t3272 = -1.*t2930*t1567;
  t3284 = t2930*t1677;
  t3292 = t2863*t2248;
  t4099 = -1.*t1357*t2863;
  t4103 = -1.*t1213*t2889;
  t4104 = t4099 + t2935 + t4103;
  t3318 = -1.*t2373*t2930;
  t3349 = -1.*t2194*t3345;
  t4122 = t2889*t1441;
  t4125 = t2863*t1567;
  t4126 = t4122 + t2951 + t4125;
  t3377 = t2930*t2386;
  t3385 = t3345*t2229;
  t4147 = t1357*t2863;
  t4149 = t1213*t2889;
  t4155 = t4147 + t3014 + t4149;
  t3426 = t2373*t2930;
  t3435 = t2194*t3345;
  t4175 = -1.*t2889*t1631;
  t4176 = -1.*t2863*t1677;
  t4178 = t4175 + t4176 + t3031;
  t3458 = -1.*t2930*t2403;
  t3474 = -1.*t3345*t2248;
  t4189 = -1.*t2889*t1441;
  t4191 = -1.*t2863*t1567;
  t4192 = t4189 + t3080 + t4191;
  t3513 = -1.*t2930*t2386;
  t3514 = -1.*t3345*t2229;
  t4214 = t2889*t1631;
  t4218 = t2863*t1677;
  t4219 = t4214 + t4218 + t3112;
  t3539 = t2930*t2403;
  t3552 = t3345*t2248;
  t3614 = -1.*t2194*t3612;
  t3615 = -1.*t2418*t2930;
  t3680 = t3612*t2229;
  t3681 = t2930*t2448;
  t3707 = t2194*t3612;
  t3710 = t2418*t2930;
  t3730 = -1.*t3612*t2248;
  t3732 = -1.*t2930*t2469;
  t3757 = -1.*t3612*t2229;
  t3758 = -1.*t2930*t2448;
  t3779 = t3612*t2248;
  t3780 = t2930*t2469;
  t3882 = -1.*t2194*t3881;
  t3924 = t3881*t2229;
  t3926 = t2930*t2502;
  t3952 = t2194*t3881;
  t3965 = -1.*t3881*t2248;
  t3966 = -1.*t2930*t2538;
  t3986 = -1.*t3881*t2229;
  t3988 = -1.*t2930*t2502;
  t4001 = t3881*t2248;
  t4002 = t2930*t2538;
  t4363 = -1.*t1213*t3639;
  t4364 = -1.*t1847*t2889;
  t4375 = t3639*t1441;
  t4377 = t2889*t1915;
  t4395 = t1213*t3639;
  t4398 = t1847*t2889;
  t4415 = -1.*t2889*t1990;
  t4421 = -1.*t3639*t1631;
  t4442 = -1.*t3639*t1441;
  t4443 = -1.*t2889*t1915;
  t4462 = t2889*t1990;
  t4464 = t3639*t1631;
  t4481 = -1.*t1213*t3898;
  t4790 = -1.*t1345*t2850;
  t4792 = -1.*t1335*t2861;
  t4793 = t4790 + t4792 + t4103;
  t4490 = t3898*t1441;
  t4491 = t2889*t2070;
  t4821 = t1345*t2850;
  t4825 = t1335*t2861;
  t4826 = t4821 + t4825 + t4149;
  t4513 = t1213*t3898;
  t4524 = -1.*t2889*t2119;
  t4527 = -1.*t3898*t1631;
  t4864 = -1.*t2861*t1522;
  t4866 = -1.*t2850*t1556;
  t4870 = t4189 + t4864 + t4866;
  t4892 = t2850*t1664;
  t4894 = t2861*t1672;
  t4895 = t4214 + t4892 + t4894;
  t4553 = -1.*t3898*t1441;
  t4560 = -1.*t2889*t2070;
  t4573 = t2889*t2119;
  t4575 = t3898*t1631;
  t4837 = -1.*t2850*t1664;
  t4838 = -1.*t2861*t1672;
  t4839 = t4175 + t4837 + t4838;
  t4799 = t2861*t1522;
  t4804 = t2850*t1556;
  t4805 = t4122 + t4799 + t4804;
  t5033 = -1.*t1328*t2819;
  t5035 = -1.*t1256*t2841;
  t5037 = t5033 + t4103 + t5035;
  t5079 = t1328*t2819;
  t5081 = t1256*t2841;
  t5083 = t5079 + t4149 + t5081;
  t5128 = -1.*t2841*t1475;
  t5129 = -1.*t2819*t1515;
  t5130 = t5128 + t4189 + t5129;
  t5150 = t2819*t1638;
  t5152 = t2841*t1651;
  t5153 = t5150 + t5152 + t4214;
  t5101 = -1.*t2819*t1638;
  t5103 = -1.*t2841*t1651;
  t5104 = t5101 + t5103 + t4175;
  t5040 = t2841*t1475;
  t5043 = t2819*t1515;
  t5046 = t5040 + t4122 + t5043;
  t5293 = t1160*t3819;
  t5296 = t1202*t3828;
  t5302 = t5293 + t5296;
  t5311 = t1202*t2784;
  t5314 = t1160*t2800;
  t5316 = t5311 + t5314;
  t5324 = 1.000000000016*t987*t2813;
  t5328 = -1.*t1622*t3819;
  t5330 = -1.*t1625*t3828;
  t5340 = 1.000000000016*t3808*t1426;
  t5342 = -1.000000000016*t2784*t1426;
  t5343 = -4.000000000064e-6*t2800*t1426;
  t5346 = t5324 + t5328 + t5330 + t5340 + t5342 + t5343;
  t5369 = -1.*t1202*t2784;
  t5370 = -1.*t1160*t2800;
  t5373 = t5369 + t5370;
  t5380 = -1.*t1160*t3819;
  t5383 = -1.*t1202*t3828;
  t5389 = t5380 + t5383;
  t5391 = t1418*t3808;
  t5392 = -1.*t987*t2784;
  t5394 = -4.e-6*t987*t2800;
  t5396 = -1.000000000016*t2813*t1426;
  t5405 = -4.e-6*t3819*t1426;
  t5406 = -1.*t3828*t1426;
  t5407 = t5391 + t5392 + t5394 + t5396 + t5405 + t5406;
  t5425 = -1.*t1418*t2813;
  t5426 = t2784*t1426;
  t5427 = 4.e-6*t2800*t1426;
  t5428 = t5425 + t5426 + t5427;
  t5434 = -1.000000000016*t987*t2813;
  t5435 = t1622*t3819;
  t5438 = t1625*t3828;
  t5443 = -1.000000000016*t3808*t1426;
  t5449 = 1.000000000016*t2784*t1426;
  t5451 = 4.000000000064e-6*t2800*t1426;
  t5454 = t5434 + t5435 + t5438 + t5443 + t5449 + t5451;
  t5458 = t1625*t2784;
  t5459 = t1622*t2800;
  t5460 = t5458 + t5459 + t5396;
  t5462 = -1.*t1418*t3808;
  t5464 = t987*t2784;
  t5466 = 4.e-6*t987*t2800;
  t5469 = 1.000000000016*t2813*t1426;
  t5470 = 4.e-6*t3819*t1426;
  t5473 = t3828*t1426;
  t5476 = t5462 + t5464 + t5466 + t5469 + t5470 + t5473;
  t5508 = -1.*t1625*t2784;
  t5509 = -1.*t1622*t2800;
  t5511 = t5508 + t5509 + t5469;
  t5307 = -0.03874900000062*t1426;
  t5540 = t1418*t2813;
  t5543 = -1.*t2784*t1426;
  t5544 = -4.e-6*t2800*t1426;
  t5549 = t5540 + t5543 + t5544;
  p_output1[0]=t1575*var2[0] + t1694*var2[1] + t1375*var2[2];
  p_output1[1]=t1725*t809*var2[0] + t1758*t809*var2[1] + t1711*t809*var2[2];
  p_output1[2]=t1797*t809*var2[0] + t1835*t809*var2[1] + t1780*t809*var2[2];
  p_output1[3]=t1966*var2[0] + t2060*var2[1] + t1906*var2[2];
  p_output1[4]=t2105*var2[0] + t2168*var2[1];
  p_output1[5]=t2175;
  p_output1[6]=t2182;
  p_output1[7]=t2186;
  p_output1[8]=(-1.*t1575*t2203 - 1.*t2188*t2229)*var2[0] + (-1.*t1694*t2203 - 1.*t2188*t2248)*var2[1] + (-1.*t2188*t2194 - 1.*t1375*t2203)*var2[2];
  p_output1[9]=-1.*t2188*t2288*var2[0] - 1.*t2188*t2308*var2[1] - 1.*t2188*t2278*var2[2];
  p_output1[10]=(t1218*t1725*t2188 + t1567*t2203)*var2[0] + (t1218*t1758*t2188 + t1677*t2203)*var2[1] + (t1218*t1711*t2188 + t1357*t2203)*var2[2];
  p_output1[11]=(t1218*t1797*t2188 + t2203*t2386)*var2[0] + (t1218*t1835*t2188 + t2203*t2403)*var2[1] + (t1218*t1780*t2188 + t2203*t2373)*var2[2];
  p_output1[12]=(t2203*t2448 - 1.*t2188*t2458)*var2[0] + (t2203*t2469 - 1.*t2188*t2478)*var2[1] + (t2203*t2418 - 1.*t2188*t2434)*var2[2];
  p_output1[13]=(t2203*t2502 - 1.*t2188*t2511)*var2[0] + (t2203*t2538 - 1.*t2188*t2544)*var2[1];
  p_output1[14]=t2555;
  p_output1[15]=t2560;
  p_output1[16]=t2568;
  p_output1[17]=t2555*var2[0] + t2560*var2[1] + t2568*var2[2];
  p_output1[18]=t2203*t2288*var2[0] + t2203*t2308*var2[1] + t2203*t2278*var2[2];
  p_output1[19]=(t1567*t2188 - 1.*t1218*t1725*t2203)*var2[0] + (t1677*t2188 - 1.*t1218*t1758*t2203)*var2[1] + (t1357*t2188 - 1.*t1218*t1711*t2203)*var2[2];
  p_output1[20]=(-1.*t1218*t1797*t2203 + t2188*t2386)*var2[0] + (-1.*t1218*t1835*t2203 + t2188*t2403)*var2[1] + (-1.*t1218*t1780*t2203 + t2188*t2373)*var2[2];
  p_output1[21]=(t2188*t2448 + t2203*t2458)*var2[0] + (t2188*t2469 + t2203*t2478)*var2[1] + (t2188*t2418 + t2203*t2434)*var2[2];
  p_output1[22]=(t2188*t2502 + t2203*t2511)*var2[0] + (t2188*t2538 + t2203*t2544)*var2[1];
  p_output1[23]=t1575*t2203 + t2188*t2229;
  p_output1[24]=t1694*t2203 + t2188*t2248;
  p_output1[25]=t2188*t2194 + t1375*t2203;
  p_output1[26]=(t2182*(t2186*t2892 + t2278*t2892 + t1375*t2907 + t1375*t2919) + t2186*(-1.*t2182*t2892 - 1.*t2308*t2892 - 1.*t1694*t2907 - 1.*t1694*t2919) + t1694*t3021 + t1375*t3051)*var2[0] + (t2175*(-1.*t2186*t2892 - 1.*t2278*t2892 - 1.*t1375*t2907 - 1.*t1375*t2919) + t2186*(t2175*t2892 + t2288*t2892 + t1575*t2907 + t1575*t2919) + t1575*t2944 + t1375*t2959)*var2[1] + (t2182*(-1.*t2175*t2892 - 1.*t2288*t2892 - 1.*t1575*t2907 - 1.*t1575*t2919) + t2175*(t2182*t2892 + t2308*t2892 + t1694*t2907 + t1694*t2919) + t1694*t3094 + t1575*t3120)*var2[2];
  p_output1[27]=(t1758*t3021*t809 + t1711*t3051*t809 + t2186*(t1218*t1758*t2892 + t1218*t1694*t3158 + t3231 + t3235 - 1.*t1758*t2919*t809 - 1.*t2182*t3158*t809) + t2182*(-1.*t1218*t1711*t2892 - 1.*t1218*t1375*t3158 + t3206 + t3220 + t1711*t2919*t809 + t2186*t3158*t809))*var2[0] + (t1725*t2944*t809 + t1711*t2959*t809 + t2186*(-1.*t1218*t1725*t2892 - 1.*t1218*t1575*t3158 + t3182 + t3183 + t1725*t2919*t809 + t2175*t3158*t809) + t2175*(t1218*t1711*t2892 + t3149 + t1218*t1375*t3158 + t3164 - 1.*t1711*t2919*t809 - 1.*t2186*t3158*t809))*var2[1] + (t1758*t3094*t809 + t1725*t3120*t809 + t2182*(t1218*t1725*t2892 + t1218*t1575*t3158 + t3271 + t3272 - 1.*t1725*t2919*t809 - 1.*t2175*t3158*t809) + t2175*(-1.*t1218*t1758*t2892 - 1.*t1218*t1694*t3158 + t3284 + t3292 + t1758*t2919*t809 + t2182*t3158*t809))*var2[2];
  p_output1[28]=(t1835*t3021*t809 + t1780*t3051*t809 + t2186*(t1218*t1835*t2892 + t1218*t1694*t3353 + t3458 + t3474 - 1.*t1835*t2919*t809 - 1.*t2182*t3353*t809) + t2182*(-1.*t1218*t1780*t2892 - 1.*t1218*t1375*t3353 + t3426 + t3435 + t1780*t2919*t809 + t2186*t3353*t809))*var2[0] + (t1797*t2944*t809 + t1780*t2959*t809 + t2186*(-1.*t1218*t1797*t2892 - 1.*t1218*t1575*t3353 + t3377 + t3385 + t1797*t2919*t809 + t2175*t3353*t809) + t2175*(t1218*t1780*t2892 + t3318 + t3349 + t1218*t1375*t3353 - 1.*t1780*t2919*t809 - 1.*t2186*t3353*t809))*var2[1] + (t1835*t3094*t809 + t1797*t3120*t809 + t2182*(t1218*t1797*t2892 + t1218*t1575*t3353 + t3513 + t3514 - 1.*t1797*t2919*t809 - 1.*t2175*t3353*t809) + t2175*(-1.*t1218*t1835*t2892 - 1.*t1218*t1694*t3353 + t3539 + t3552 + t1835*t2919*t809 + t2182*t3353*t809))*var2[2];
  p_output1[29]=(t2060*t3021 + t1906*t3051 + t2182*(t2434*t2892 + t1906*t2919 + t1375*t3648 + t2186*t3656 + t3707 + t3710) + t2186*(-1.*t2478*t2892 - 1.*t2060*t2919 - 1.*t1694*t3648 - 1.*t2182*t3656 + t3730 + t3732))*var2[0] + (t1966*t2944 + t1906*t2959 + t2175*(-1.*t2434*t2892 - 1.*t1906*t2919 + t3614 + t3615 - 1.*t1375*t3648 - 1.*t2186*t3656) + t2186*(t2458*t2892 + t1966*t2919 + t1575*t3648 + t2175*t3656 + t3680 + t3681))*var2[1] + (t2060*t3094 + t1966*t3120 + t2182*(-1.*t2458*t2892 - 1.*t1966*t2919 - 1.*t1575*t3648 - 1.*t2175*t3656 + t3757 + t3758) + t2175*(t2478*t2892 + t2060*t2919 + t1694*t3648 + t2182*t3656 + t3779 + t3780))*var2[2];
  p_output1[30]=(t2168*t3021 + t2182*(t1375*t3909 + t2186*t3917 + t3952) + t2186*(-1.*t2544*t2892 - 1.*t2168*t2919 - 1.*t1694*t3909 - 1.*t2182*t3917 + t3965 + t3966))*var2[0] + (t2105*t2944 + t2175*(t3882 - 1.*t1375*t3909 - 1.*t2186*t3917) + t2186*(t2511*t2892 + t2105*t2919 + t1575*t3909 + t2175*t3917 + t3924 + t3926))*var2[1] + (t2168*t3094 + t2105*t3120 + t2182*(-1.*t2511*t2892 - 1.*t2105*t2919 - 1.*t1575*t3909 - 1.*t2175*t3917 + t3986 + t3988) + t2175*(t2544*t2892 + t2168*t2919 + t1694*t3909 + t2182*t3917 + t4001 + t4002))*var2[2];
  p_output1[31]=t2182*t3021 + t2186*t3051;
  p_output1[32]=t2175*t2944 + t2186*t2959;
  p_output1[33]=t2182*t3094 + t2175*t3120;
  p_output1[34]=(t2248*(t1711*t2863 + t1357*t3158 + t3206 + t3220) + t2194*(-1.*t1758*t2863 - 1.*t1677*t3158 + t3231 + t3235) + t1677*t4155 + t1357*t4178)*var2[0] + (t2229*(-1.*t1711*t2863 + t3149 - 1.*t1357*t3158 + t3164) + t2194*(t1725*t2863 + t1567*t3158 + t3182 + t3183) + t1567*t4104 + t1357*t4126)*var2[1] + (t2248*(-1.*t1725*t2863 - 1.*t1567*t3158 + t3271 + t3272) + t2229*(t1758*t2863 + t1677*t3158 + t3284 + t3292) + t1677*t4192 + t1567*t4219)*var2[2];
  p_output1[35]=(t2248*(t1780*t2863 + t1357*t3353 + t3426 + t3435) + t2194*(-1.*t1835*t2863 - 1.*t1677*t3353 + t3458 + t3474) + t2403*t4155 + t2373*t4178)*var2[0] + (t2229*(-1.*t1780*t2863 + t3318 + t3349 - 1.*t1357*t3353) + t2194*(t1797*t2863 + t1567*t3353 + t3377 + t3385) + t2386*t4104 + t2373*t4126)*var2[1] + (t2248*(-1.*t1797*t2863 - 1.*t1567*t3353 + t3513 + t3514) + t2229*(t1835*t2863 + t1677*t3353 + t3539 + t3552) + t2403*t4192 + t2386*t4219)*var2[2];
  p_output1[36]=(t2469*t4155 + t2418*t4178 + t2248*(t1903*t2863 + t1357*t3626 + t3707 + t3710 + t4395 + t4398) + t2194*(-1.*t2058*t2863 - 1.*t1677*t3626 + t3730 + t3732 + t4415 + t4421))*var2[0] + (t2448*t4104 + t2418*t4126 + t2229*(-1.*t1903*t2863 + t3614 + t3615 - 1.*t1357*t3626 + t4363 + t4364) + t2194*(t1963*t2863 + t1567*t3626 + t3680 + t3681 + t4375 + t4377))*var2[1] + (t2469*t4192 + t2448*t4219 + t2248*(-1.*t1963*t2863 - 1.*t1567*t3626 + t3757 + t3758 + t4442 + t4443) + t2229*(t2058*t2863 + t1677*t3626 + t3779 + t3780 + t4462 + t4464))*var2[2];
  p_output1[37]=(t2538*t4155 + t2248*(t1357*t3887 + t3952 + t4513) + t2194*(-1.*t2165*t2863 - 1.*t1677*t3887 + t3965 + t3966 + t4524 + t4527))*var2[0] + (t2502*t4104 + t2229*(t3882 - 1.*t1357*t3887 + t4481) + t2194*(t2100*t2863 + t1567*t3887 + t3924 + t3926 + t4490 + t4491))*var2[1] + (t2538*t4192 + t2502*t4219 + t2248*(-1.*t2100*t2863 - 1.*t1567*t3887 + t3986 + t3988 + t4553 + t4560) + t2229*(t2165*t2863 + t1677*t3887 + t4001 + t4002 + t4573 + t4575))*var2[2];
  p_output1[38]=t2248*t4155 + t2194*t4178;
  p_output1[39]=t2229*t4104 + t2194*t4126;
  p_output1[40]=t2248*t4192 + t2229*t4219;
  p_output1[41]=(t1631*(t1335*t2850 + t1775*t2861 + t1335*t3334 + t1345*t3342) + t1213*(-1.*t1672*t2850 - 1.*t1827*t2861 - 1.*t1672*t3334 - 1.*t1664*t3342))*var2[0] + (t1441*(-1.*t1335*t2850 - 1.*t1775*t2861 - 1.*t1335*t3334 - 1.*t1345*t3342) + t1213*(t1522*t2850 + t1794*t2861 + t1522*t3334 + t1556*t3342))*var2[1] + (t1631*(-1.*t1522*t2850 - 1.*t1794*t2861 - 1.*t1522*t3334 - 1.*t1556*t3342) + t1441*(t1672*t2850 + t1827*t2861 + t1672*t3334 + t1664*t3342))*var2[2];
  p_output1[42]=(t1631*(t1884*t2850 + t1892*t2861 + t1335*t3599 + t1345*t3608 + t4395 + t4398) + t1213*(-1.*t2046*t2850 - 1.*t2035*t2861 - 1.*t1672*t3599 - 1.*t1664*t3608 + t4415 + t4421) + t1990*t4826 + t1847*t4839)*var2[0] + (t1441*(-1.*t1884*t2850 - 1.*t1892*t2861 - 1.*t1335*t3599 - 1.*t1345*t3608 + t4363 + t4364) + t1213*(t1942*t2850 + t1950*t2861 + t1522*t3599 + t1556*t3608 + t4375 + t4377) + t1915*t4793 + t1847*t4805)*var2[1] + (t1631*(-1.*t1942*t2850 - 1.*t1950*t2861 - 1.*t1522*t3599 - 1.*t1556*t3608 + t4442 + t4443) + t1441*(t2046*t2850 + t2035*t2861 + t1672*t3599 + t1664*t3608 + t4462 + t4464) + t1990*t4870 + t1915*t4895)*var2[2];
  p_output1[43]=(t1631*(t1335*t3861 + t1345*t3874 + t4513) + t1213*(-1.*t2161*t2850 - 1.*t2156*t2861 - 1.*t1672*t3861 - 1.*t1664*t3874 + t4524 + t4527) + t2119*t4826)*var2[0] + (t1441*(-1.*t1335*t3861 - 1.*t1345*t3874 + t4481) + t1213*(t2087*t2850 + t2098*t2861 + t1522*t3861 + t1556*t3874 + t4490 + t4491) + t2070*t4793)*var2[1] + (t1631*(-1.*t2087*t2850 - 1.*t2098*t2861 - 1.*t1522*t3861 - 1.*t1556*t3874 + t4553 + t4560) + t1441*(t2161*t2850 + t2156*t2861 + t1672*t3861 + t1664*t3874 + t4573 + t4575) + t2119*t4870 + t2070*t4895)*var2[2];
  p_output1[44]=t1631*t4826 + t1213*t4839;
  p_output1[45]=t1441*t4793 + t1213*t4805;
  p_output1[46]=t1631*t4870 + t1441*t4895;
  p_output1[47]=(0.15121*t1928 - 0.15121*t1937 + t1631*(t1859*t2819 + t1874*t2841 + t1256*t3579 + t1328*t3593 + t4395 + t4398) + t1213*(-1.*t2029*t2819 - 1.*t2018*t2841 - 1.*t1651*t3579 - 1.*t1638*t3593 + t4415 + t4421) + t1990*t5083 + t1847*t5104)*var2[0] + (-0.15121*t2018 + 0.15121*t2029 + t1441*(-1.*t1859*t2819 - 1.*t1874*t2841 - 1.*t1256*t3579 - 1.*t1328*t3593 + t4363 + t4364) + t1213*(t1928*t2819 + t1937*t2841 + t1475*t3579 + t1515*t3593 + t4375 + t4377) + t1915*t5037 + t1847*t5046)*var2[1] + (0.15121*t1859 - 0.15121*t1874 + t1631*(-1.*t1928*t2819 - 1.*t1937*t2841 - 1.*t1475*t3579 - 1.*t1515*t3593 + t4442 + t4443) + t1441*(t2029*t2819 + t2018*t2841 + t1651*t3579 + t1638*t3593 + t4462 + t4464) + t1990*t5130 + t1915*t5153)*var2[2];
  p_output1[48]=(0.15121*t2074 - 0.15121*t2081 + t1631*(t1256*t3830 + t1328*t3845 + t4513) + t1213*(-1.*t2150*t2819 - 1.*t2136*t2841 - 1.*t1651*t3830 - 1.*t1638*t3845 + t4524 + t4527) + t2119*t5083)*var2[0] + (-0.15121*t2136 + 0.15121*t2150 + t1441*(-1.*t1256*t3830 - 1.*t1328*t3845 + t4481) + t1213*(t2074*t2819 + t2081*t2841 + t1475*t3830 + t1515*t3845 + t4490 + t4491) + t2070*t5037)*var2[1] + (t1631*(-1.*t2074*t2819 - 1.*t2081*t2841 - 1.*t1475*t3830 - 1.*t1515*t3845 + t4553 + t4560) + t1441*(t2150*t2819 + t2136*t2841 + t1651*t3830 + t1638*t3845 + t4573 + t4575) + t2119*t5130 + t2070*t5153)*var2[2];
  p_output1[49]=-0.15121*t1475 + 0.15121*t1515 + t1631*t5083 + t1213*t5104;
  p_output1[50]=0.15121*t1638 - 0.15121*t1651 + t1441*t5037 + t1213*t5046;
  p_output1[51]=-0.15121*t1256 + 0.15121*t1328 + t1631*t5130 + t1441*t5153;
  p_output1[52]=(t1622*t5302 + t5307 + 4.000000000064e-6*t1426*t5316 + t1160*t5346 + 4.e-6*(-1.*t1625*t5302 - 1.000000000016*t1426*t5316 - 1.*t1202*t5346) - 0.281210000004*t987)*var2[0] + (0.281210000008499*t1426 - 4.e-6*t1426*t5389 + t1160*t5407 - 0.03874900000062*t987 - 4.e-6*t5373*t987 + 4.e-6*(t1426*t5389 - 1.*t1202*t5407 + t5373*t987))*var2[1] + (4.000000000064e-6*t1426*t5428 - 4.e-6*t1426*t5454 + t1622*t5476 - 4.e-6*t5460*t987 + 4.e-6*(-1.000000000016*t1426*t5428 + t1426*t5454 - 1.*t1625*t5476 + t5460*t987))*var2[2];
  p_output1[53]=0.038749*t1418 - 0.281210000004*t1426 + t1622*t5316 + t1160*t5511 + 4.e-6*(-1.*t1625*t5316 - 1.*t1202*t5511);
  p_output1[54]=1.e-6*t1622 + 0.28121*t1625 + t5307 - 4.e-6*t1426*t5373 + t1160*t5549 + 4.e-6*(t1426*t5373 - 1.*t1202*t5549);
  p_output1[55]=1.e-6*t1160 + 0.28121*t1202 + t1622*t5428 - 4.e-6*t1426*t5460 + 4.e-6*(-1.*t1625*t5428 + t1426*t5460);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_DiagonalStance2.hh"

namespace TrotStance2
{

void J_fFlFoot_vec_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
