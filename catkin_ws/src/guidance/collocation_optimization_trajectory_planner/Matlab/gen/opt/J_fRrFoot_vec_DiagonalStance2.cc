/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:02 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1695;
  double t1698;
  double t1715;
  double t211;
  double t262;
  double t342;
  double t1759;
  double t1569;
  double t1763;
  double t1736;
  double t1743;
  double t1781;
  double t1804;
  double t1836;
  double t2204;
  double t2026;
  double t2061;
  double t2065;
  double t2107;
  double t2169;
  double t2171;
  double t2174;
  double t2233;
  double t2234;
  double t2237;
  double t2243;
  double t2253;
  double t1396;
  double t2301;
  double t2349;
  double t2309;
  double t2311;
  double t2314;
  double t2317;
  double t2322;
  double t2323;
  double t2324;
  double t2325;
  double t2329;
  double t2331;
  double t2290;
  double t2351;
  double t2356;
  double t2359;
  double t2368;
  double t2377;
  double t2379;
  double t2380;
  double t2381;
  double t2390;
  double t2391;
  double t147;
  double t1911;
  double t1974;
  double t2211;
  double t2214;
  double t1577;
  double t2266;
  double t2280;
  double t2460;
  double t2463;
  double t2465;
  double t2475;
  double t2482;
  double t2486;
  double t2487;
  double t2507;
  double t2514;
  double t2540;
  double t2545;
  double t2546;
  double t2548;
  double t2561;
  double t2570;
  double t2576;
  double t2577;
  double t2421;
  double t2606;
  double t2605;
  double t2608;
  double t2609;
  double t2617;
  double t2618;
  double t2620;
  double t2622;
  double t2624;
  double t2626;
  double t2629;
  double t2634;
  double t2636;
  double t2637;
  double t2645;
  double t2648;
  double t2649;
  double t2651;
  double t2659;
  double t2660;
  double t2669;
  double t2674;
  double t2675;
  double t2676;
  double t2692;
  double t2706;
  double t2710;
  double t2718;
  double t2408;
  double t2409;
  double t2413;
  double t2347;
  double t2398;
  double t2404;
  double t2587;
  double t2590;
  double t2594;
  double t2551;
  double t2581;
  double t2582;
  double t2732;
  double t2734;
  double t2738;
  double t2690;
  double t2719;
  double t2726;
  double t2754;
  double t2766;
  double t2908;
  double t3059;
  double t3096;
  double t3101;
  double t3103;
  double t3105;
  double t3106;
  double t3110;
  double t3122;
  double t3125;
  double t3128;
  double t3132;
  double t3136;
  double t3140;
  double t3141;
  double t3142;
  double t3146;
  double t3066;
  double t3071;
  double t3060;
  double t3202;
  double t3203;
  double t3210;
  double t3217;
  double t3224;
  double t3226;
  double t3228;
  double t3232;
  double t3288;
  double t3290;
  double t3296;
  double t3300;
  double t3305;
  double t3308;
  double t3309;
  double t3311;
  double t3395;
  double t3397;
  double t3401;
  double t3411;
  double t3412;
  double t3418;
  double t3434;
  double t3442;
  double t3444;
  double t3449;
  double t3450;
  double t3452;
  double t3467;
  double t3472;
  double t3476;
  double t3480;
  double t3488;
  double t3493;
  double t3494;
  double t3510;
  double t3515;
  double t3522;
  double t3524;
  double t3533;
  double t3538;
  double t3544;
  double t3549;
  double t3671;
  double t3657;
  double t3663;
  double t3667;
  double t3674;
  double t3678;
  double t3690;
  double t3692;
  double t3693;
  double t3694;
  double t3711;
  double t3712;
  double t3713;
  double t3716;
  double t3719;
  double t3722;
  double t3723;
  double t3737;
  double t3769;
  double t3770;
  double t3773;
  double t3778;
  double t3782;
  double t3783;
  double t3788;
  double t3801;
  double t3802;
  double t3857;
  double t3911;
  double t3920;
  double t3921;
  double t3922;
  double t3931;
  double t1838;
  double t2195;
  double t2261;
  double t2262;
  double t2407;
  double t2436;
  double t2438;
  double t2471;
  double t2491;
  double t2521;
  double t2525;
  double t2585;
  double t2595;
  double t2596;
  double t2621;
  double t2644;
  double t2661;
  double t2662;
  double t2731;
  double t2739;
  double t2740;
  double t2265;
  double t2443;
  double t2445;
  double t3983;
  double t3998;
  double t2527;
  double t2597;
  double t2598;
  double t2666;
  double t2742;
  double t2743;
  double t2748;
  double t2757;
  double t2762;
  double t2856;
  double t2897;
  double t2920;
  double t2945;
  double t2962;
  double t2966;
  double t2969;
  double t2971;
  double t2974;
  double t2976;
  double t2984;
  double t2985;
  double t2989;
  double t2996;
  double t3000;
  double t3001;
  double t3002;
  double t3008;
  double t3167;
  double t3169;
  double t3171;
  double t3123;
  double t3147;
  double t3159;
  double t3062;
  double t3065;
  double t3072;
  double t3074;
  double t3163;
  double t3175;
  double t3176;
  double t3245;
  double t3246;
  double t3247;
  double t3223;
  double t3233;
  double t3237;
  double t3186;
  double t3192;
  double t3195;
  double t3198;
  double t3240;
  double t3249;
  double t3257;
  double t3354;
  double t3356;
  double t3357;
  double t3304;
  double t3312;
  double t3314;
  double t3274;
  double t3275;
  double t3278;
  double t3280;
  double t3322;
  double t3360;
  double t3362;
  double t3559;
  double t3561;
  double t3562;
  double t3529;
  double t3553;
  double t3554;
  double t3421;
  double t3455;
  double t3498;
  double t3501;
  double t3555;
  double t3563;
  double t3564;
  double t3745;
  double t3746;
  double t3747;
  double t3718;
  double t3741;
  double t3742;
  double t3668;
  double t3685;
  double t3696;
  double t3704;
  double t3744;
  double t3750;
  double t3752;
  double t3941;
  double t3942;
  double t3943;
  double t3918;
  double t3936;
  double t3937;
  double t3771;
  double t3781;
  double t3789;
  double t3795;
  double t3938;
  double t3951;
  double t3953;
  double t3989;
  double t3993;
  double t3994;
  double t4011;
  double t4015;
  double t4016;
  double t4052;
  double t4056;
  double t4061;
  double t4460;
  double t4465;
  double t4467;
  double t4472;
  double t4474;
  double t4475;
  double t4476;
  double t4477;
  double t4479;
  double t4087;
  double t4090;
  double t4094;
  double t4096;
  double t4114;
  double t4128;
  double t4133;
  double t4135;
  double t4139;
  double t4193;
  double t4194;
  double t4207;
  double t4209;
  double t4231;
  double t4233;
  double t4254;
  double t4260;
  double t4261;
  double t4266;
  double t4280;
  double t4284;
  double t4295;
  double t4300;
  double t4309;
  double t4311;
  double t4312;
  double t4314;
  double t4321;
  double t4323;
  double t4324;
  double t4326;
  double t4331;
  double t4332;
  double t4356;
  double t4358;
  double t4361;
  double t4366;
  double t4368;
  double t4371;
  double t4381;
  double t4388;
  double t4389;
  double t4392;
  double t4393;
  double t4400;
  double t4425;
  double t4432;
  double t4433;
  double t4437;
  double t4439;
  double t4440;
  double t3973;
  double t3976;
  double t3977;
  double t4720;
  double t4751;
  double t4752;
  double t4757;
  double t4758;
  double t4762;
  double t4763;
  double t4775;
  double t4777;
  double t4778;
  double t4780;
  double t4784;
  double t4787;
  double t4789;
  double t4798;
  double t4806;
  double t4807;
  double t4808;
  double t4811;
  double t4812;
  double t4813;
  double t4814;
  double t4817;
  double t4827;
  double t4828;
  double t4829;
  double t4830;
  double t4831;
  double t4833;
  double t4836;
  double t4841;
  double t4843;
  double t4845;
  double t4881;
  double t4731;
  double t4732;
  double t4855;
  double t4860;
  double t4861;
  double t4877;
  double t4880;
  double t4884;
  double t4887;
  double t4891;
  double t4897;
  double t4899;
  double t4900;
  double t4903;
  double t4905;
  double t4907;
  double t4908;
  double t4909;
  double t4910;
  double t4911;
  double t4912;
  double t4914;
  double t4915;
  double t4918;
  double t4921;
  double t4713;
  double t4719;
  double t4723;
  double t4727;
  double t4746;
  double t4748;
  double t4783;
  double t4818;
  double t4848;
  double t4850;
  double t4873;
  double t4906;
  double t4922;
  double t4923;
  double t4924;
  double t4929;
  double t4930;
  double t4933;
  double t4934;
  double t4935;
  double t4938;
  double t3967;
  double t3969;
  double t3970;
  double t4955;
  double t4957;
  double t4958;
  double t4945;
  double t4946;
  double t4950;
  double t4852;
  double t4940;
  double t4942;
  double t4967;
  double t4969;
  double t4972;
  double t3978;
  double t3980;
  double t3981;
  double t5161;
  double t5164;
  double t5166;
  double t4973;
  double t4975;
  double t4976;
  double t4980;
  double t4993;
  double t4997;
  double t5002;
  double t5009;
  double t5024;
  double t5025;
  double t5030;
  double t5038;
  double t5062;
  double t5065;
  double t5067;
  double t5076;
  double t5107;
  double t5109;
  double t5110;
  double t5112;
  double t5138;
  double t5141;
  double t5142;
  double t5144;
  double t5287;
  double t5288;
  double t5289;
  double t5291;
  double t5277;
  double t5279;
  double t5350;
  double t5359;
  double t5360;
  double t5283;
  double t5292;
  double t5294;
  double t3201;
  double t3258;
  double t3266;
  double t3095;
  double t3177;
  double t3181;
  double t5640;
  double t5641;
  double t5648;
  double t5653;
  double t5663;
  double t5666;
  double t5669;
  double t5670;
  double t5679;
  double t5684;
  double t5690;
  double t5693;
  double t5696;
  double t5701;
  double t5703;
  double t5705;
  double t5710;
  double t5712;
  double t5715;
  double t5728;
  double t5730;
  double t5734;
  double t5682;
  double t5718;
  double t5719;
  double t5770;
  double t5771;
  double t5772;
  double t5773;
  double t5780;
  double t5782;
  double t5788;
  double t5794;
  double t5796;
  double t5802;
  double t5804;
  double t5805;
  double t5726;
  double t5741;
  double t5758;
  double t5799;
  double t5810;
  double t5813;
  double t5834;
  double t5845;
  double t5852;
  double t3283;
  double t3364;
  double t3369;
  double t3797;
  double t3956;
  double t3960;
  double t3706;
  double t3756;
  double t3761;
  double t6161;
  double t6168;
  double t6171;
  double t6177;
  double t6212;
  double t6223;
  double t6228;
  double t6245;
  double t6249;
  double t6250;
  double t6252;
  double t6258;
  double t6274;
  double t6277;
  double t6279;
  double t6281;
  double t6292;
  double t6293;
  double t6294;
  double t6296;
  double t6304;
  double t6311;
  double t6313;
  double t6316;
  double t6248;
  double t6283;
  double t6322;
  double t6325;
  double t6327;
  double t6328;
  double t6330;
  double t6333;
  double t6341;
  double t6342;
  double t6343;
  double t6326;
  double t6335;
  double t6337;
  double t6356;
  double t6362;
  double t6364;
  double t6369;
  double t6384;
  double t6385;
  double t6397;
  double t6338;
  double t6345;
  double t6347;
  double t6371;
  double t6398;
  double t6399;
  double t6413;
  double t6414;
  double t6419;
  double t3507;
  double t3565;
  double t3567;
  double t5159;
  double t5160;
  double t5178;
  double t5179;
  double t5204;
  double t5205;
  double t5222;
  double t5223;
  double t5241;
  double t5242;
  double t5256;
  double t5257;
  double t6765;
  double t6766;
  double t6768;
  double t6786;
  double t6788;
  double t6790;
  double t5305;
  double t5323;
  double t5374;
  double t5379;
  double t6807;
  double t6830;
  double t6838;
  double t5457;
  double t5461;
  double t5489;
  double t5491;
  double t6877;
  double t6878;
  double t6879;
  double t6912;
  double t6919;
  double t6920;
  double t5526;
  double t5530;
  double t5563;
  double t5569;
  double t6934;
  double t6935;
  double t6936;
  double t5638;
  double t5761;
  double t5864;
  double t5867;
  double t5943;
  double t5951;
  double t6001;
  double t6009;
  double t6067;
  double t6069;
  double t6085;
  double t6086;
  double t6349;
  double t6350;
  double t6455;
  double t6473;
  double t6555;
  double t6558;
  double t6592;
  double t6593;
  double t6610;
  double t6611;
  double t6634;
  double t6637;
  double t7156;
  double t7157;
  double t7165;
  double t7176;
  double t7215;
  double t7216;
  double t7231;
  double t7237;
  double t7301;
  double t7303;
  double t7318;
  double t7324;
  double t7639;
  double t7641;
  double t7662;
  double t7672;
  double t7695;
  double t7707;
  double t7346;
  double t7347;
  double t7361;
  double t7363;
  double t7778;
  double t7779;
  double t7780;
  double t7396;
  double t7403;
  double t7429;
  double t7430;
  double t7809;
  double t7810;
  double t7813;
  double t7845;
  double t7860;
  double t7866;
  double t7443;
  double t7447;
  double t7458;
  double t7459;
  double t7896;
  double t7900;
  double t7901;
  double t8129;
  double t8130;
  double t8132;
  double t8154;
  double t8158;
  double t8159;
  double t8176;
  double t8177;
  double t8179;
  double t8189;
  double t8191;
  double t8195;
  double t8220;
  double t8223;
  double t8227;
  double t8247;
  double t8248;
  double t8249;
  double t8391;
  double t8392;
  double t8393;
  double t8394;
  double t8397;
  double t8399;
  double t8400;
  double t8401;
  double t8402;
  double t8404;
  double t8405;
  double t8407;
  double t8409;
  double t8410;
  double t8412;
  double t8419;
  double t8421;
  double t8422;
  double t8424;
  double t8425;
  double t8426;
  double t8427;
  double t8460;
  double t8462;
  double t8463;
  double t8464;
  double t8470;
  double t8471;
  double t8472;
  double t8474;
  double t8475;
  double t8476;
  double t8477;
  double t8479;
  double t8480;
  double t8481;
  double t8482;
  double t8483;
  double t8485;
  double t8486;
  double t8488;
  double t8493;
  double t8494;
  double t8495;
  double t8528;
  double t8530;
  double t8531;
  double t8532;
  double t8536;
  double t8537;
  double t8539;
  double t8545;
  double t8549;
  double t8550;
  double t8553;
  double t8556;
  double t8560;
  double t8561;
  double t8564;
  double t8565;
  double t8566;
  double t8568;
  double t8573;
  double t8576;
  double t8578;
  double t8579;
  t1695 = Cos(var1[17]);
  t1698 = -1.*t1695;
  t1715 = 1. + t1698;
  t211 = Cos(var1[16]);
  t262 = -1.*t211;
  t342 = 1. + t262;
  t1759 = Sin(var1[17]);
  t1569 = Sin(var1[16]);
  t1763 = 4.e-6*t1759;
  t1736 = 1.000000000016*t1715;
  t1743 = -7.e-6*t1715;
  t1781 = t1743 + t1763;
  t1804 = -7.e-6*t1781;
  t1836 = -1. + t1736 + t1804;
  t2204 = 4.e-6*t342;
  t2026 = 2.8e-11*t1715;
  t2061 = 4.e-6*t1715;
  t2065 = 7.e-6*t1759;
  t2107 = t2061 + t2065;
  t2169 = -7.e-6*t2107;
  t2171 = -1.*t1759;
  t2174 = t2026 + t2169 + t2171;
  t2233 = -6.5e-11*t1715;
  t2234 = 1. + t2233;
  t2237 = -7.e-6*t2234;
  t2243 = 7.e-6*t1715;
  t2253 = t2237 + t2243 + t1763;
  t1396 = -2.8e-11*t342;
  t2301 = -7.e-6*t342;
  t2349 = Cos(var1[15]);
  t2309 = -4.e-6*t1569;
  t2311 = t2301 + t2309;
  t2314 = t2311*t1836;
  t2317 = -7.e-6*t1569;
  t2322 = t2204 + t2317;
  t2323 = t2322*t2174;
  t2324 = -6.5e-11*t342;
  t2325 = 1. + t2324;
  t2329 = t2325*t2253;
  t2331 = t2314 + t2323 + t2329;
  t2290 = Sin(var1[15]);
  t2351 = -1.000000000016*t342;
  t2356 = 1. + t2351;
  t2359 = t2356*t1836;
  t2368 = -1.*t1569;
  t2377 = t1396 + t2368;
  t2379 = t2377*t2174;
  t2380 = 4.e-6*t1569;
  t2381 = t2301 + t2380;
  t2390 = t2381*t2253;
  t2391 = t2359 + t2379 + t2390;
  t147 = Cos(var1[4]);
  t1911 = -1.000000000049*t342;
  t1974 = 1. + t1911;
  t2211 = 7.e-6*t1569;
  t2214 = t2204 + t2211;
  t1577 = t1396 + t1569;
  t2266 = Sin(var1[4]);
  t2280 = Cos(var1[5]);
  t2460 = 1.000000000049*t1715;
  t2463 = 4.e-6*t2107;
  t2465 = -1. + t2460 + t2463;
  t2475 = 4.e-6*t2234;
  t2482 = -1. + t1695;
  t2486 = 4.e-6*t2482;
  t2487 = t2475 + t2486 + t2065;
  t2507 = 4.e-6*t1781;
  t2514 = t2026 + t2507 + t1759;
  t2540 = t2377*t2465;
  t2545 = t2381*t2487;
  t2546 = t2356*t2514;
  t2548 = t2540 + t2545 + t2546;
  t2561 = t2322*t2465;
  t2570 = t2325*t2487;
  t2576 = t2311*t2514;
  t2577 = t2561 + t2570 + t2576;
  t2421 = Sin(var1[5]);
  t2606 = -4.e-6*t1759;
  t2605 = 6.5e-11*t1715;
  t2608 = t1743 + t2606;
  t2609 = 7.e-6*t2608;
  t2617 = t2486 + t2065;
  t2618 = 4.e-6*t2617;
  t2620 = -1. + t2605 + t2609 + t2618;
  t2622 = -1. + t2460;
  t2624 = 4.e-6*t2622;
  t2626 = -7.e-6*t1759;
  t2629 = -2.8e-11*t1715;
  t2634 = t2629 + t1759;
  t2636 = 7.e-6*t2634;
  t2637 = t2624 + t2486 + t2626 + t2636;
  t2645 = -1.000000000016*t1715;
  t2648 = 1. + t2645;
  t2649 = 7.e-6*t2648;
  t2651 = t2026 + t1759;
  t2659 = 4.e-6*t2651;
  t2660 = t2649 + t2243 + t2606 + t2659;
  t2669 = t2381*t2620;
  t2674 = t2377*t2637;
  t2675 = t2356*t2660;
  t2676 = t2669 + t2674 + t2675;
  t2692 = t2325*t2620;
  t2706 = t2322*t2637;
  t2710 = t2311*t2660;
  t2718 = t2692 + t2706 + t2710;
  t2408 = t2349*t2331;
  t2409 = t2290*t2391;
  t2413 = t2408 + t2409;
  t2347 = -1.*t2290*t2331;
  t2398 = t2349*t2391;
  t2404 = t2347 + t2398;
  t2587 = t2290*t2548;
  t2590 = t2349*t2577;
  t2594 = t2587 + t2590;
  t2551 = t2349*t2548;
  t2581 = -1.*t2290*t2577;
  t2582 = t2551 + t2581;
  t2732 = t2290*t2676;
  t2734 = t2349*t2718;
  t2738 = t2732 + t2734;
  t2690 = t2349*t2676;
  t2719 = -1.*t2290*t2718;
  t2726 = t2690 + t2719;
  t2754 = -1.*t2404*t2421;
  t2766 = -1.*t2582*t2421;
  t2908 = -1.*t2726*t2421;
  t3059 = -2.8e-11*t1569;
  t3096 = -1.000000000016*t1569*t1836;
  t3101 = t262 + t3059;
  t3103 = t3101*t2174;
  t3105 = 4.e-6*t211;
  t3106 = t3105 + t2317;
  t3110 = t3106*t2253;
  t3122 = t3096 + t3103 + t3110;
  t3125 = -4.e-6*t211;
  t3128 = t3125 + t2317;
  t3132 = t3128*t1836;
  t3136 = -7.e-6*t211;
  t3140 = t3136 + t2380;
  t3141 = t3140*t2174;
  t3142 = -6.5e-11*t1569*t2253;
  t3146 = t3132 + t3141 + t3142;
  t3066 = 7.e-6*t211;
  t3071 = t3066 + t2380;
  t3060 = t211 + t3059;
  t3202 = t3140*t2465;
  t3203 = -6.5e-11*t1569*t2487;
  t3210 = t3128*t2514;
  t3217 = t3202 + t3203 + t3210;
  t3224 = t3101*t2465;
  t3226 = t3106*t2487;
  t3228 = -1.000000000016*t1569*t2514;
  t3232 = t3224 + t3226 + t3228;
  t3288 = -6.5e-11*t1569*t2620;
  t3290 = t3140*t2637;
  t3296 = t3128*t2660;
  t3300 = t3288 + t3290 + t3296;
  t3305 = t3106*t2620;
  t3308 = t3101*t2637;
  t3309 = -1.000000000016*t1569*t2660;
  t3311 = t3305 + t3308 + t3309;
  t3395 = -4.e-6*t1695;
  t3397 = 2.8e-11*t1759;
  t3401 = t1695 + t3397;
  t3411 = 4.e-6*t3401;
  t3412 = -1.12e-16*t1759;
  t3418 = t3395 + t3411 + t3412;
  t3434 = -7.e-6*t1695;
  t3442 = -2.8e-11*t1759;
  t3444 = t1695 + t3442;
  t3449 = 7.e-6*t3444;
  t3450 = 1.96e-16*t1759;
  t3452 = t3434 + t3449 + t3450;
  t3467 = t3395 + t2626;
  t3472 = 7.e-6*t3467;
  t3476 = 7.e-6*t1695;
  t3480 = t3476 + t2606;
  t3488 = 4.e-6*t3480;
  t3493 = 6.5e-11*t1759;
  t3494 = t3472 + t3488 + t3493;
  t3510 = t2311*t3418;
  t3515 = t2322*t3452;
  t3522 = t2325*t3494;
  t3524 = t3510 + t3515 + t3522;
  t3533 = t2356*t3418;
  t3538 = t2377*t3452;
  t3544 = t2381*t3494;
  t3549 = t3533 + t3538 + t3544;
  t3671 = 4.e-6*t1695;
  t3657 = t3476 + t1763;
  t3663 = -7.e-6*t3657;
  t3667 = t1698 + t3663 + t3397;
  t3674 = 7.000000000455e-6*t1759;
  t3678 = t3671 + t3674;
  t3690 = t3671 + t2626;
  t3692 = -7.e-6*t3690;
  t3693 = 1.000000000016*t1759;
  t3694 = t3692 + t3693;
  t3711 = t2377*t3667;
  t3712 = t2381*t3678;
  t3713 = t2356*t3694;
  t3716 = t3711 + t3712 + t3713;
  t3719 = t2322*t3667;
  t3722 = t2325*t3678;
  t3723 = t2311*t3694;
  t3737 = t3719 + t3722 + t3723;
  t3769 = -4.00000000026e-6*t1759;
  t3770 = t3476 + t3769;
  t3773 = 4.e-6*t3690;
  t3778 = t1695 + t3773 + t3397;
  t3782 = 4.e-6*t3657;
  t3783 = 1.000000000049*t1759;
  t3788 = t3782 + t3783;
  t3801 = t2381*t3770;
  t3802 = t2356*t3778;
  t3857 = t2377*t3788;
  t3911 = t3801 + t3802 + t3857;
  t3920 = t2325*t3770;
  t3921 = t2311*t3778;
  t3922 = t2322*t3788;
  t3931 = t3920 + t3921 + t3922;
  t1838 = t1577*t1836;
  t2195 = t1974*t2174;
  t2261 = t2214*t2253;
  t2262 = t1838 + t2195 + t2261;
  t2407 = t2280*t2404;
  t2436 = -1.*t2413*t2421;
  t2438 = t2407 + t2436;
  t2471 = t1974*t2465;
  t2491 = t2214*t2487;
  t2521 = t1577*t2514;
  t2525 = t2471 + t2491 + t2521;
  t2585 = t2280*t2582;
  t2595 = -1.*t2594*t2421;
  t2596 = t2585 + t2595;
  t2621 = t2214*t2620;
  t2644 = t1974*t2637;
  t2661 = t1577*t2660;
  t2662 = t2621 + t2644 + t2661;
  t2731 = t2280*t2726;
  t2739 = -1.*t2738*t2421;
  t2740 = t2731 + t2739;
  t2265 = t147*t2262;
  t2443 = -1.*t2266*t2438;
  t2445 = t2265 + t2443;
  t3983 = Sin(var1[3]);
  t3998 = Cos(var1[3]);
  t2527 = t147*t2525;
  t2597 = -1.*t2266*t2596;
  t2598 = t2527 + t2597;
  t2666 = t147*t2662;
  t2742 = -1.*t2266*t2740;
  t2743 = t2666 + t2742;
  t2748 = -1.*t2280*t2413;
  t2757 = t2748 + t2754;
  t2762 = -1.*t2280*t2594;
  t2856 = t2762 + t2766;
  t2897 = -1.*t2280*t2738;
  t2920 = t2897 + t2908;
  t2945 = -1.*t2349*t2331;
  t2962 = -1.*t2290*t2391;
  t2966 = t2945 + t2962;
  t2969 = t2280*t2966;
  t2971 = t2969 + t2754;
  t2974 = -1.*t2290*t2548;
  t2976 = -1.*t2349*t2577;
  t2984 = t2974 + t2976;
  t2985 = t2280*t2984;
  t2989 = t2985 + t2766;
  t2996 = -1.*t2290*t2676;
  t3000 = -1.*t2349*t2718;
  t3001 = t2996 + t3000;
  t3002 = t2280*t3001;
  t3008 = t3002 + t2908;
  t3167 = t2290*t3122;
  t3169 = t2349*t3146;
  t3171 = t3167 + t3169;
  t3123 = t2349*t3122;
  t3147 = -1.*t2290*t3146;
  t3159 = t3123 + t3147;
  t3062 = t3060*t1836;
  t3065 = -1.000000000049*t1569*t2174;
  t3072 = t3071*t2253;
  t3074 = t3062 + t3065 + t3072;
  t3163 = t2280*t3159;
  t3175 = -1.*t3171*t2421;
  t3176 = t3163 + t3175;
  t3245 = t2349*t3217;
  t3246 = t2290*t3232;
  t3247 = t3245 + t3246;
  t3223 = -1.*t2290*t3217;
  t3233 = t2349*t3232;
  t3237 = t3223 + t3233;
  t3186 = -1.000000000049*t1569*t2465;
  t3192 = t3071*t2487;
  t3195 = t3060*t2514;
  t3198 = t3186 + t3192 + t3195;
  t3240 = t2280*t3237;
  t3249 = -1.*t3247*t2421;
  t3257 = t3240 + t3249;
  t3354 = t2349*t3300;
  t3356 = t2290*t3311;
  t3357 = t3354 + t3356;
  t3304 = -1.*t2290*t3300;
  t3312 = t2349*t3311;
  t3314 = t3304 + t3312;
  t3274 = t3071*t2620;
  t3275 = -1.000000000049*t1569*t2637;
  t3278 = t3060*t2660;
  t3280 = t3274 + t3275 + t3278;
  t3322 = t2280*t3314;
  t3360 = -1.*t3357*t2421;
  t3362 = t3322 + t3360;
  t3559 = t2349*t3524;
  t3561 = t2290*t3549;
  t3562 = t3559 + t3561;
  t3529 = -1.*t2290*t3524;
  t3553 = t2349*t3549;
  t3554 = t3529 + t3553;
  t3421 = t1577*t3418;
  t3455 = t1974*t3452;
  t3498 = t2214*t3494;
  t3501 = t3421 + t3455 + t3498;
  t3555 = t2280*t3554;
  t3563 = -1.*t3562*t2421;
  t3564 = t3555 + t3563;
  t3745 = t2290*t3716;
  t3746 = t2349*t3737;
  t3747 = t3745 + t3746;
  t3718 = t2349*t3716;
  t3741 = -1.*t2290*t3737;
  t3742 = t3718 + t3741;
  t3668 = t1974*t3667;
  t3685 = t2214*t3678;
  t3696 = t1577*t3694;
  t3704 = t3668 + t3685 + t3696;
  t3744 = t2280*t3742;
  t3750 = -1.*t3747*t2421;
  t3752 = t3744 + t3750;
  t3941 = t2290*t3911;
  t3942 = t2349*t3931;
  t3943 = t3941 + t3942;
  t3918 = t2349*t3911;
  t3936 = -1.*t2290*t3931;
  t3937 = t3918 + t3936;
  t3771 = t2214*t3770;
  t3781 = t1577*t3778;
  t3789 = t1974*t3788;
  t3795 = t3771 + t3781 + t3789;
  t3938 = t2280*t3937;
  t3951 = -1.*t3943*t2421;
  t3953 = t3938 + t3951;
  t3989 = t2280*t2413;
  t3993 = t2404*t2421;
  t3994 = t3989 + t3993;
  t4011 = t2280*t2594;
  t4015 = t2582*t2421;
  t4016 = t4011 + t4015;
  t4052 = t2280*t2738;
  t4056 = t2726*t2421;
  t4061 = t4052 + t4056;
  t4460 = t3998*t3994;
  t4465 = -1.*t3983*t2445;
  t4467 = t4460 + t4465;
  t4472 = t3998*t4016;
  t4474 = -1.*t3983*t2598;
  t4475 = t4472 + t4474;
  t4476 = t3998*t4061;
  t4477 = -1.*t3983*t2743;
  t4479 = t4476 + t4477;
  t4087 = -1.*t2262*t2266;
  t4090 = -1.*t147*t2438;
  t4094 = t4087 + t4090;
  t4096 = -1.*t2525*t2266;
  t4114 = -1.*t147*t2596;
  t4128 = t4096 + t4114;
  t4133 = -1.*t2662*t2266;
  t4135 = -1.*t147*t2740;
  t4139 = t4133 + t4135;
  t4193 = t2966*t2421;
  t4194 = t2407 + t4193;
  t4207 = t2984*t2421;
  t4209 = t2585 + t4207;
  t4231 = t3001*t2421;
  t4233 = t2731 + t4231;
  t4254 = t2280*t3171;
  t4260 = t3159*t2421;
  t4261 = t4254 + t4260;
  t4266 = t147*t3074;
  t4280 = -1.*t2266*t3176;
  t4284 = t4266 + t4280;
  t4295 = t2280*t3247;
  t4300 = t3237*t2421;
  t4309 = t4295 + t4300;
  t4311 = t147*t3198;
  t4312 = -1.*t2266*t3257;
  t4314 = t4311 + t4312;
  t4321 = t2280*t3357;
  t4323 = t3314*t2421;
  t4324 = t4321 + t4323;
  t4326 = t147*t3280;
  t4331 = -1.*t2266*t3362;
  t4332 = t4326 + t4331;
  t4356 = t2280*t3562;
  t4358 = t3554*t2421;
  t4361 = t4356 + t4358;
  t4366 = t147*t3501;
  t4368 = -1.*t2266*t3564;
  t4371 = t4366 + t4368;
  t4381 = t2280*t3747;
  t4388 = t3742*t2421;
  t4389 = t4381 + t4388;
  t4392 = t147*t3704;
  t4393 = -1.*t2266*t3752;
  t4400 = t4392 + t4393;
  t4425 = t2280*t3943;
  t4432 = t3937*t2421;
  t4433 = t4425 + t4432;
  t4437 = t147*t3795;
  t4439 = -1.*t2266*t3953;
  t4440 = t4437 + t4439;
  t3973 = t2525*t2266;
  t3976 = t147*t2596;
  t3977 = t3973 + t3976;
  t4720 = 2.8e-11*t342;
  t4751 = 2.826290000000002e-7*var1[17];
  t4752 = -0.148715*t2234;
  t4757 = -2.18904205e-16*t1715;
  t4758 = t2061 + t2626;
  t4762 = -0.038576*t4758;
  t4763 = -0.80315*t2608;
  t4775 = t2243 + t1763;
  t4777 = -0.5031510000080001*t4775;
  t4778 = -0.038575000014*t2617;
  t4780 = t4751 + t4752 + t4757 + t4762 + t4763 + t4777 + t4778;
  t4784 = 1.1305160000000008e-12*var1[17];
  t4787 = -1.000000000049*t1715;
  t4789 = 1. + t4787;
  t4798 = -0.038576*t4789;
  t4806 = -0.03857500001589017*t1715;
  t4807 = t2026 + t2171;
  t4808 = -0.5031510000080001*t4807;
  t4811 = t2486 + t2626;
  t4812 = -3.367757e-6*t4811;
  t4813 = -0.148715*t2107;
  t4814 = -0.80315*t2634;
  t4817 = t4784 + t4798 + t4806 + t4808 + t4812 + t4813 + t4814;
  t4827 = -1.9784030000000015e-12*var1[17];
  t4828 = -0.80315*t2648;
  t4829 = -0.5031510000160505*t1715;
  t4830 = t2629 + t2171;
  t4831 = -0.038576*t4830;
  t4833 = t2243 + t2606;
  t4836 = -3.367757e-6*t4833;
  t4841 = -0.148715*t1781;
  t4843 = -0.038575000014*t2651;
  t4845 = t4827 + t4828 + t4829 + t4831 + t4836 + t4841 + t4843;
  t4881 = 7.e-6*t342;
  t4731 = -1. + t211;
  t4732 = 4.e-6*t4731;
  t4855 = -1.*t2349;
  t4860 = 1. + t4855;
  t4861 = -0.15121*t4860;
  t4877 = -2.7726089999999997e-12*var1[16];
  t4880 = -0.2812110000084994*t342;
  t4884 = t4881 + t2309;
  t4887 = -1.8134809999999998e-6*t4884;
  t4891 = t4720 + t1569;
  t4897 = -0.038749000006999997*t4891;
  t4899 = t2381*t4780;
  t4900 = t2377*t4817;
  t4903 = t2356*t4845;
  t4905 = t4877 + t4880 + t4887 + t4897 + t4899 + t4900 + t4903;
  t4907 = 3.9608699999999997e-7*var1[16];
  t4908 = -1.1787626499999999e-16*t342;
  t4909 = t4881 + t2380;
  t4910 = -0.281211000004*t4909;
  t4911 = t4732 + t2211;
  t4912 = -0.038749000006999997*t4911;
  t4914 = t2325*t4780;
  t4915 = t2322*t4817;
  t4918 = t2311*t4845;
  t4921 = t4907 + t4908 + t4910 + t4912 + t4914 + t4915 + t4918;
  t4713 = 1.5843479999999999e-12*var1[16];
  t4719 = -0.03874900000889869*t342;
  t4723 = t4720 + t2368;
  t4727 = -0.281211000004*t4723;
  t4746 = t4732 + t2317;
  t4748 = -1.8134809999999998e-6*t4746;
  t4783 = t2214*t4780;
  t4818 = t1974*t4817;
  t4848 = t1577*t4845;
  t4850 = t4713 + t4719 + t4727 + t4748 + t4783 + t4818 + t4848;
  t4873 = -0.15121*t2290;
  t4906 = t2349*t4905;
  t4922 = -1.*t2290*t4921;
  t4923 = t4861 + t4873 + t4906 + t4922;
  t4924 = t2280*t4923;
  t4929 = 0.15121*t2290;
  t4930 = t2290*t4905;
  t4933 = t2349*t4921;
  t4934 = t4861 + t4929 + t4930 + t4933;
  t4935 = -1.*t4934*t2421;
  t4938 = t4924 + t4935;
  t3967 = t2262*t2266;
  t3969 = t147*t2438;
  t3970 = t3967 + t3969;
  t4955 = t147*t4850;
  t4957 = -1.*t2266*t4938;
  t4958 = t4955 + t4957;
  t4945 = t4850*t2266;
  t4946 = t147*t4938;
  t4950 = t4945 + t4946;
  t4852 = -1.*t4850*t2266;
  t4940 = -1.*t147*t4938;
  t4942 = t4852 + t4940;
  t4967 = t2280*t4934;
  t4969 = t4923*t2421;
  t4972 = t4967 + t4969;
  t3978 = t2662*t2266;
  t3980 = t147*t2740;
  t3981 = t3978 + t3980;
  t5161 = -1.*t2280*t4934;
  t5164 = -1.*t4923*t2421;
  t5166 = t5161 + t5164;
  t4973 = -1.*t3994*t4972;
  t4975 = -1.*t3970*t4950;
  t4976 = -1.*t2445*t4958;
  t4980 = t4973 + t4975 + t4976;
  t4993 = t4016*t4972;
  t4997 = t3977*t4950;
  t5002 = t2598*t4958;
  t5009 = t4993 + t4997 + t5002;
  t5024 = t3994*t4972;
  t5025 = t3970*t4950;
  t5030 = t2445*t4958;
  t5038 = t5024 + t5025 + t5030;
  t5062 = -1.*t4972*t4061;
  t5065 = -1.*t4950*t3981;
  t5067 = -1.*t4958*t2743;
  t5076 = t5062 + t5065 + t5067;
  t5107 = -1.*t4016*t4972;
  t5109 = -1.*t3977*t4950;
  t5110 = -1.*t2598*t4958;
  t5112 = t5107 + t5109 + t5110;
  t5138 = t4972*t4061;
  t5141 = t4950*t3981;
  t5142 = t4958*t2743;
  t5144 = t5138 + t5141 + t5142;
  t5287 = -0.15121*t2349;
  t5288 = -1.*t2290*t4905;
  t5289 = -1.*t2349*t4921;
  t5291 = t5287 + t4873 + t5288 + t5289;
  t5277 = 0.15121*t2349;
  t5279 = t5277 + t4873 + t4906 + t4922;
  t5350 = t2280*t5291;
  t5359 = -1.*t5279*t2421;
  t5360 = t5350 + t5359;
  t5283 = t2280*t5279;
  t5292 = t5291*t2421;
  t5294 = t5283 + t5292;
  t3201 = t3198*t2266;
  t3258 = t147*t3257;
  t3266 = t3201 + t3258;
  t3095 = t3074*t2266;
  t3177 = t147*t3176;
  t3181 = t3095 + t3177;
  t5640 = t3066 + t2309;
  t5641 = -0.038749000006999997*t5640;
  t5648 = t3105 + t2211;
  t5653 = -0.281211000004*t5648;
  t5663 = -1.1787626499999999e-16*t1569;
  t5666 = -6.5e-11*t1569*t4780;
  t5669 = t3140*t4817;
  t5670 = t3128*t4845;
  t5679 = 3.9608699999999997e-7 + t5641 + t5653 + t5663 + t5666 + t5669 + t5670;
  t5684 = 2.8e-11*t1569;
  t5690 = t211 + t5684;
  t5693 = -0.038749000006999997*t5690;
  t5696 = t3125 + t2211;
  t5701 = -1.8134809999999998e-6*t5696;
  t5703 = -0.2812110000084994*t1569;
  t5705 = t3106*t4780;
  t5710 = t3101*t4817;
  t5712 = -1.000000000016*t1569*t4845;
  t5715 = -2.7726089999999997e-12 + t5693 + t5701 + t5703 + t5705 + t5710 + t5712;
  t5728 = -1.*t2290*t5679;
  t5730 = t2349*t5715;
  t5734 = t5728 + t5730;
  t5682 = t2349*t5679;
  t5718 = t2290*t5715;
  t5719 = t5682 + t5718;
  t5770 = t3136 + t2309;
  t5771 = -1.8134809999999998e-6*t5770;
  t5772 = t262 + t5684;
  t5773 = -0.281211000004*t5772;
  t5780 = -0.03874900000889869*t1569;
  t5782 = t3071*t4780;
  t5788 = -1.000000000049*t1569*t4817;
  t5794 = t3060*t4845;
  t5796 = 1.5843479999999999e-12 + t5771 + t5773 + t5780 + t5782 + t5788 + t5794;
  t5802 = t2280*t5734;
  t5804 = -1.*t5719*t2421;
  t5805 = t5802 + t5804;
  t5726 = t2280*t5719;
  t5741 = t5734*t2421;
  t5758 = t5726 + t5741;
  t5799 = t5796*t2266;
  t5810 = t147*t5805;
  t5813 = t5799 + t5810;
  t5834 = t147*t5796;
  t5845 = -1.*t2266*t5805;
  t5852 = t5834 + t5845;
  t3283 = t3280*t2266;
  t3364 = t147*t3362;
  t3369 = t3283 + t3364;
  t3797 = t3795*t2266;
  t3956 = t147*t3953;
  t3960 = t3797 + t3956;
  t3706 = t3704*t2266;
  t3756 = t147*t3752;
  t3761 = t3706 + t3756;
  t6161 = -0.80315*t3467;
  t6168 = -0.038575000014*t3480;
  t6171 = t3434 + t1763;
  t6177 = -0.038576*t6171;
  t6212 = t3671 + t2065;
  t6223 = -0.5031510000080001*t6212;
  t6228 = 9.666256095795e-12*t1759;
  t6245 = 2.826290000000002e-7 + t6161 + t6168 + t6177 + t6223 + t6228;
  t6249 = t3434 + t2606;
  t6250 = -3.367757e-6*t6249;
  t6252 = -0.80315*t3444;
  t6258 = t1698 + t3397;
  t6274 = -0.5031510000080001*t6258;
  t6277 = -0.148715*t3657;
  t6279 = 9.99986000053965e-7*t1759;
  t6281 = 1.1305160000000008e-12 + t6250 + t6252 + t6274 + t6277 + t6279;
  t6292 = -0.148715*t3690;
  t6293 = t1698 + t3442;
  t6294 = -0.038576*t6293;
  t6296 = -0.038575000014*t3401;
  t6304 = t3395 + t2065;
  t6311 = -3.367757e-6*t6304;
  t6313 = 0.2999989999967999*t1759;
  t6316 = -1.9784030000000015e-12 + t6292 + t6294 + t6296 + t6311 + t6313;
  t6248 = t2381*t6245;
  t6283 = t2377*t6281;
  t6322 = t2356*t6316;
  t6325 = t6248 + t6283 + t6322;
  t6327 = t2325*t6245;
  t6328 = t2322*t6281;
  t6330 = t2311*t6316;
  t6333 = t6327 + t6328 + t6330;
  t6341 = t2349*t6325;
  t6342 = -1.*t2290*t6333;
  t6343 = t6341 + t6342;
  t6326 = t2290*t6325;
  t6335 = t2349*t6333;
  t6337 = t6326 + t6335;
  t6356 = t2214*t6245;
  t6362 = t1974*t6281;
  t6364 = t1577*t6316;
  t6369 = t6356 + t6362 + t6364;
  t6384 = t2280*t6343;
  t6385 = -1.*t6337*t2421;
  t6397 = t6384 + t6385;
  t6338 = t2280*t6337;
  t6345 = t6343*t2421;
  t6347 = t6338 + t6345;
  t6371 = t6369*t2266;
  t6398 = t147*t6397;
  t6399 = t6371 + t6398;
  t6413 = t147*t6369;
  t6414 = -1.*t2266*t6397;
  t6419 = t6413 + t6414;
  t3507 = t3501*t2266;
  t3565 = t147*t3564;
  t3567 = t3507 + t3565;
  t5159 = -1.*t3994*t4938;
  t5160 = -1.*t2438*t4972;
  t5178 = t4016*t4938;
  t5179 = t2596*t4972;
  t5204 = t3994*t4938;
  t5205 = t2438*t4972;
  t5222 = -1.*t4972*t2740;
  t5223 = -1.*t4938*t4061;
  t5241 = -1.*t4016*t4938;
  t5242 = -1.*t2596*t4972;
  t5256 = t4972*t2740;
  t5257 = t4938*t4061;
  t6765 = -1.*t2262*t4850;
  t6766 = -1.*t2438*t4938;
  t6768 = t6765 + t6766 + t4973;
  t6786 = t2525*t4850;
  t6788 = t2596*t4938;
  t6790 = t6786 + t6788 + t4993;
  t5305 = -1.*t3994*t5294;
  t5323 = -1.*t4194*t4972;
  t5374 = t4016*t5294;
  t5379 = t4209*t4972;
  t6807 = t2262*t4850;
  t6830 = t2438*t4938;
  t6838 = t6807 + t6830 + t5024;
  t5457 = t3994*t5294;
  t5461 = t4194*t4972;
  t5489 = -1.*t4972*t4233;
  t5491 = -1.*t5294*t4061;
  t6877 = -1.*t4850*t2662;
  t6878 = -1.*t4938*t2740;
  t6879 = t6877 + t6878 + t5062;
  t6912 = -1.*t2525*t4850;
  t6919 = -1.*t2596*t4938;
  t6920 = t6912 + t6919 + t5107;
  t5526 = -1.*t4016*t5294;
  t5530 = -1.*t4209*t4972;
  t5563 = t4972*t4233;
  t5569 = t5294*t4061;
  t6934 = t4850*t2662;
  t6935 = t4938*t2740;
  t6936 = t6934 + t6935 + t5138;
  t5638 = -1.*t4261*t4972;
  t5761 = -1.*t3994*t5758;
  t5864 = t4309*t4972;
  t5867 = t4016*t5758;
  t5943 = t4261*t4972;
  t5951 = t3994*t5758;
  t6001 = -1.*t5758*t4061;
  t6009 = -1.*t4972*t4324;
  t6067 = -1.*t4309*t4972;
  t6069 = -1.*t4016*t5758;
  t6085 = t5758*t4061;
  t6086 = t4972*t4324;
  t6349 = -1.*t3994*t6347;
  t6350 = -1.*t4389*t4972;
  t6455 = t6347*t4016;
  t6473 = t4433*t4972;
  t6555 = t3994*t6347;
  t6558 = t4389*t4972;
  t6592 = -1.*t4361*t4972;
  t6593 = -1.*t6347*t4061;
  t6610 = -1.*t6347*t4016;
  t6611 = -1.*t4433*t4972;
  t6634 = t4361*t4972;
  t6637 = t6347*t4061;
  t7156 = -1.*t2262*t5796;
  t7157 = -1.*t3074*t4850;
  t7165 = t2525*t5796;
  t7176 = t3198*t4850;
  t7215 = t2262*t5796;
  t7216 = t3074*t4850;
  t7231 = -1.*t4850*t3280;
  t7237 = -1.*t5796*t2662;
  t7301 = -1.*t2525*t5796;
  t7303 = -1.*t3198*t4850;
  t7318 = t4850*t3280;
  t7324 = t5796*t2662;
  t7639 = -1.*t2413*t4934;
  t7641 = -1.*t2404*t4923;
  t7662 = t6765 + t7639 + t7641;
  t7672 = t2594*t4934;
  t7695 = t2582*t4923;
  t7707 = t6786 + t7672 + t7695;
  t7346 = -1.*t2262*t6369;
  t7347 = -1.*t3704*t4850;
  t7361 = t6369*t2525;
  t7363 = t3795*t4850;
  t7778 = t2413*t4934;
  t7779 = t2404*t4923;
  t7780 = t6807 + t7778 + t7779;
  t7396 = t2262*t6369;
  t7403 = t3704*t4850;
  t7429 = -1.*t3501*t4850;
  t7430 = -1.*t6369*t2662;
  t7809 = -1.*t4934*t2738;
  t7810 = -1.*t4923*t2726;
  t7813 = t6877 + t7809 + t7810;
  t7845 = -1.*t2594*t4934;
  t7860 = -1.*t2582*t4923;
  t7866 = t6912 + t7845 + t7860;
  t7443 = -1.*t6369*t2525;
  t7447 = -1.*t3795*t4850;
  t7458 = t3501*t4850;
  t7459 = t6369*t2662;
  t7896 = t4934*t2738;
  t7900 = t4923*t2726;
  t7901 = t6934 + t7896 + t7900;
  t8129 = -1.*t2391*t4905;
  t8130 = -1.*t2331*t4921;
  t8132 = t8129 + t8130 + t6765;
  t8154 = t2548*t4905;
  t8158 = t2577*t4921;
  t8159 = t8154 + t8158 + t6786;
  t8176 = t2391*t4905;
  t8177 = t2331*t4921;
  t8179 = t8176 + t8177 + t6807;
  t8189 = -1.*t4905*t2676;
  t8191 = -1.*t4921*t2718;
  t8195 = t8189 + t8191 + t6877;
  t8220 = -1.*t2548*t4905;
  t8223 = -1.*t2577*t4921;
  t8227 = t8220 + t8223 + t6912;
  t8247 = t4905*t2676;
  t8248 = t4921*t2718;
  t8249 = t8247 + t8248 + t6934;
  t8391 = -1.*t4780*t2253;
  t8392 = -1.*t2174*t4817;
  t8393 = -1.*t1836*t4845;
  t8394 = t8391 + t8392 + t8393;
  t8397 = t4780*t3770;
  t8399 = t2465*t6281;
  t8400 = t6245*t2487;
  t8401 = t6316*t2514;
  t8402 = t3788*t4817;
  t8404 = t3778*t4845;
  t8405 = t8397 + t8399 + t8400 + t8401 + t8402 + t8404;
  t8407 = t4780*t2487;
  t8409 = t2465*t4817;
  t8410 = t2514*t4845;
  t8412 = t8407 + t8409 + t8410;
  t8419 = -1.*t2174*t6281;
  t8421 = -1.*t6245*t2253;
  t8422 = -1.*t4780*t3678;
  t8424 = -1.*t1836*t6316;
  t8425 = -1.*t3667*t4817;
  t8426 = -1.*t3694*t4845;
  t8427 = t8419 + t8421 + t8422 + t8424 + t8425 + t8426;
  t8460 = t4780*t2253;
  t8462 = t2174*t4817;
  t8463 = t1836*t4845;
  t8464 = t8460 + t8462 + t8463;
  t8470 = t2174*t6281;
  t8471 = t6245*t2253;
  t8472 = t4780*t3678;
  t8474 = t1836*t6316;
  t8475 = t3667*t4817;
  t8476 = t3694*t4845;
  t8477 = t8470 + t8471 + t8472 + t8474 + t8475 + t8476;
  t8479 = -1.*t2620*t6245;
  t8480 = -1.*t4780*t3494;
  t8481 = -1.*t3452*t4817;
  t8482 = -1.*t6281*t2637;
  t8483 = -1.*t3418*t4845;
  t8485 = -1.*t6316*t2660;
  t8486 = t8479 + t8480 + t8481 + t8482 + t8483 + t8485;
  t8488 = -1.*t4780*t2620;
  t8493 = -1.*t4817*t2637;
  t8494 = -1.*t4845*t2660;
  t8495 = t8488 + t8493 + t8494;
  t8528 = -1.*t4780*t3770;
  t8530 = -1.*t2465*t6281;
  t8531 = -1.*t6245*t2487;
  t8532 = -1.*t6316*t2514;
  t8536 = -1.*t3788*t4817;
  t8537 = -1.*t3778*t4845;
  t8539 = t8528 + t8530 + t8531 + t8532 + t8536 + t8537;
  t8545 = -1.*t4780*t2487;
  t8549 = -1.*t2465*t4817;
  t8550 = -1.*t2514*t4845;
  t8553 = t8545 + t8549 + t8550;
  t8556 = t2620*t6245;
  t8560 = t4780*t3494;
  t8561 = t3452*t4817;
  t8564 = t6281*t2637;
  t8565 = t3418*t4845;
  t8566 = t6316*t2660;
  t8568 = t8556 + t8560 + t8561 + t8564 + t8565 + t8566;
  t8573 = t4780*t2620;
  t8576 = t4817*t2637;
  t8578 = t4845*t2660;
  t8579 = t8573 + t8576 + t8578;
  p_output1[0]=t2445*var2[0] + t2598*var2[1] + t2743*var2[2];
  p_output1[1]=t147*t2757*var2[0] + t147*t2856*var2[1] + t147*t2920*var2[2];
  p_output1[2]=t147*t2971*var2[0] + t147*t2989*var2[1] + t147*t3008*var2[2];
  p_output1[3]=t3181*var2[0] + t3266*var2[1] + t3369*var2[2];
  p_output1[4]=t3761*var2[0] + t3960*var2[1] + t3567*var2[2];
  p_output1[5]=t3970;
  p_output1[6]=t3977;
  p_output1[7]=t3981;
  p_output1[8]=(-1.*t3983*t3994 - 1.*t2445*t3998)*var2[0] + (-1.*t2598*t3998 - 1.*t3983*t4016)*var2[1] + (-1.*t2743*t3998 - 1.*t3983*t4061)*var2[2];
  p_output1[9]=-1.*t3983*t4094*var2[0] - 1.*t3983*t4128*var2[1] - 1.*t3983*t4139*var2[2];
  p_output1[10]=(t2266*t2757*t3983 + t2438*t3998)*var2[0] + (t2266*t2856*t3983 + t2596*t3998)*var2[1] + (t2266*t2920*t3983 + t2740*t3998)*var2[2];
  p_output1[11]=(t2266*t2971*t3983 + t3998*t4194)*var2[0] + (t2266*t2989*t3983 + t3998*t4209)*var2[1] + (t2266*t3008*t3983 + t3998*t4233)*var2[2];
  p_output1[12]=(t3998*t4261 - 1.*t3983*t4284)*var2[0] + (t3998*t4309 - 1.*t3983*t4314)*var2[1] + (t3998*t4324 - 1.*t3983*t4332)*var2[2];
  p_output1[13]=(t3998*t4389 - 1.*t3983*t4400)*var2[0] + (t3998*t4433 - 1.*t3983*t4440)*var2[1] + (t3998*t4361 - 1.*t3983*t4371)*var2[2];
  p_output1[14]=t4467;
  p_output1[15]=t4475;
  p_output1[16]=t4479;
  p_output1[17]=t4467*var2[0] + t4475*var2[1] + t4479*var2[2];
  p_output1[18]=t3998*t4094*var2[0] + t3998*t4128*var2[1] + t3998*t4139*var2[2];
  p_output1[19]=(t2438*t3983 - 1.*t2266*t2757*t3998)*var2[0] + (t2596*t3983 - 1.*t2266*t2856*t3998)*var2[1] + (t2740*t3983 - 1.*t2266*t2920*t3998)*var2[2];
  p_output1[20]=(-1.*t2266*t2971*t3998 + t3983*t4194)*var2[0] + (-1.*t2266*t2989*t3998 + t3983*t4209)*var2[1] + (-1.*t2266*t3008*t3998 + t3983*t4233)*var2[2];
  p_output1[21]=(t3983*t4261 + t3998*t4284)*var2[0] + (t3983*t4309 + t3998*t4314)*var2[1] + (t3983*t4324 + t3998*t4332)*var2[2];
  p_output1[22]=(t3983*t4389 + t3998*t4400)*var2[0] + (t3983*t4433 + t3998*t4440)*var2[1] + (t3983*t4361 + t3998*t4371)*var2[2];
  p_output1[23]=t3983*t3994 + t2445*t3998;
  p_output1[24]=t2598*t3998 + t3983*t4016;
  p_output1[25]=t2743*t3998 + t3983*t4061;
  p_output1[26]=(t3981*(-1.*t2598*t4942 - 1.*t2598*t4950 - 1.*t3977*t4958 - 1.*t4128*t4958) + t3977*(t2743*t4942 + t2743*t4950 + t3981*t4958 + t4139*t4958) + t2743*t5112 + t2598*t5144)*var2[0] + (t3981*(t2445*t4942 + t2445*t4950 + t3970*t4958 + t4094*t4958) + t3970*(-1.*t2743*t4942 - 1.*t2743*t4950 - 1.*t3981*t4958 - 1.*t4139*t4958) + t2743*t5038 + t2445*t5076)*var2[1] + (t3977*(-1.*t2445*t4942 - 1.*t2445*t4950 - 1.*t3970*t4958 - 1.*t4094*t4958) + t3970*(t2598*t4942 + t2598*t4950 + t3977*t4958 + t4128*t4958) + t2598*t4980 + t2445*t5009)*var2[2];
  p_output1[27]=(t147*t2920*t5112 + t147*t2856*t5144 + t3981*(-1.*t147*t2856*t4950 + t2266*t2856*t4958 + t2266*t2598*t5166 - 1.*t147*t3977*t5166 + t5241 + t5242) + t3977*(t147*t2920*t4950 - 1.*t2266*t2920*t4958 - 1.*t2266*t2743*t5166 + t147*t3981*t5166 + t5256 + t5257))*var2[0] + (t147*t2920*t5038 + t147*t2757*t5076 + t3981*(t147*t2757*t4950 - 1.*t2266*t2757*t4958 - 1.*t2266*t2445*t5166 + t147*t3970*t5166 + t5204 + t5205) + t3970*(-1.*t147*t2920*t4950 + t2266*t2920*t4958 + t2266*t2743*t5166 - 1.*t147*t3981*t5166 + t5222 + t5223))*var2[1] + (t147*t2856*t4980 + t147*t2757*t5009 + t3977*(-1.*t147*t2757*t4950 + t2266*t2757*t4958 + t5159 + t5160 + t2266*t2445*t5166 - 1.*t147*t3970*t5166) + t3970*(t147*t2856*t4950 - 1.*t2266*t2856*t4958 - 1.*t2266*t2598*t5166 + t147*t3977*t5166 + t5178 + t5179))*var2[2];
  p_output1[28]=(t147*t3008*t5112 + t147*t2989*t5144 + t3981*(-1.*t147*t2989*t4950 + t2266*t2989*t4958 + t2266*t2598*t5360 - 1.*t147*t3977*t5360 + t5526 + t5530) + t3977*(t147*t3008*t4950 - 1.*t2266*t3008*t4958 - 1.*t2266*t2743*t5360 + t147*t3981*t5360 + t5563 + t5569))*var2[0] + (t147*t3008*t5038 + t147*t2971*t5076 + t3981*(t147*t2971*t4950 - 1.*t2266*t2971*t4958 - 1.*t2266*t2445*t5360 + t147*t3970*t5360 + t5457 + t5461) + t3970*(-1.*t147*t3008*t4950 + t2266*t3008*t4958 + t2266*t2743*t5360 - 1.*t147*t3981*t5360 + t5489 + t5491))*var2[1] + (t147*t2989*t4980 + t147*t2971*t5009 + t3977*(-1.*t147*t2971*t4950 + t2266*t2971*t4958 + t5305 + t5323 + t2266*t2445*t5360 - 1.*t147*t3970*t5360) + t3970*(t147*t2989*t4950 - 1.*t2266*t2989*t4958 - 1.*t2266*t2598*t5360 + t147*t3977*t5360 + t5374 + t5379))*var2[2];
  p_output1[29]=(t3369*t5112 + t3266*t5144 + t3981*(-1.*t3266*t4950 - 1.*t4314*t4958 - 1.*t3977*t5813 - 1.*t2598*t5852 + t6067 + t6069) + t3977*(t3369*t4950 + t4332*t4958 + t3981*t5813 + t2743*t5852 + t6085 + t6086))*var2[0] + (t3369*t5038 + t3181*t5076 + t3981*(t3181*t4950 + t4284*t4958 + t3970*t5813 + t2445*t5852 + t5943 + t5951) + t3970*(-1.*t3369*t4950 - 1.*t4332*t4958 - 1.*t3981*t5813 - 1.*t2743*t5852 + t6001 + t6009))*var2[1] + (t3266*t4980 + t3181*t5009 + t3977*(-1.*t3181*t4950 - 1.*t4284*t4958 + t5638 + t5761 - 1.*t3970*t5813 - 1.*t2445*t5852) + t3970*(t3266*t4950 + t4314*t4958 + t3977*t5813 + t2598*t5852 + t5864 + t5867))*var2[2];
  p_output1[30]=(t3567*t5112 + t3960*t5144 + t3981*(-1.*t3960*t4950 - 1.*t4440*t4958 - 1.*t3977*t6399 - 1.*t2598*t6419 + t6610 + t6611) + t3977*(t3567*t4950 + t4371*t4958 + t3981*t6399 + t2743*t6419 + t6634 + t6637))*var2[0] + (t3567*t5038 + t3761*t5076 + t3981*(t3761*t4950 + t4400*t4958 + t3970*t6399 + t2445*t6419 + t6555 + t6558) + t3970*(-1.*t3567*t4950 - 1.*t4371*t4958 - 1.*t3981*t6399 - 1.*t2743*t6419 + t6592 + t6593))*var2[1] + (t3960*t4980 + t3761*t5009 + t3977*(-1.*t3761*t4950 - 1.*t4400*t4958 + t6349 + t6350 - 1.*t3970*t6399 - 1.*t2445*t6419) + t3970*(t3960*t4950 + t4440*t4958 + t3977*t6399 + t2598*t6419 + t6455 + t6473))*var2[2];
  p_output1[31]=t3981*t5112 + t3977*t5144;
  p_output1[32]=t3981*t5038 + t3970*t5076;
  p_output1[33]=t3977*t4980 + t3970*t5009;
  p_output1[34]=(t4061*(-1.*t2856*t4938 - 1.*t2596*t5166 + t5241 + t5242) + t4016*(t2920*t4938 + t2740*t5166 + t5256 + t5257) + t2740*t6920 + t2596*t6936)*var2[0] + (t4061*(t2757*t4938 + t2438*t5166 + t5204 + t5205) + t3994*(-1.*t2920*t4938 - 1.*t2740*t5166 + t5222 + t5223) + t2740*t6838 + t2438*t6879)*var2[1] + (t4016*(-1.*t2757*t4938 + t5159 + t5160 - 1.*t2438*t5166) + t3994*(t2856*t4938 + t2596*t5166 + t5178 + t5179) + t2596*t6768 + t2438*t6790)*var2[2];
  p_output1[35]=(t4061*(-1.*t2989*t4938 - 1.*t2596*t5360 + t5526 + t5530) + t4016*(t3008*t4938 + t2740*t5360 + t5563 + t5569) + t4233*t6920 + t4209*t6936)*var2[0] + (t4061*(t2971*t4938 + t2438*t5360 + t5457 + t5461) + t3994*(-1.*t3008*t4938 - 1.*t2740*t5360 + t5489 + t5491) + t4233*t6838 + t4194*t6879)*var2[1] + (t4016*(-1.*t2971*t4938 + t5305 + t5323 - 1.*t2438*t5360) + t3994*(t2989*t4938 + t2596*t5360 + t5374 + t5379) + t4209*t6768 + t4194*t6790)*var2[2];
  p_output1[36]=(t4324*t6920 + t4309*t6936 + t4061*(-1.*t3257*t4938 - 1.*t2596*t5805 + t6067 + t6069 + t7301 + t7303) + t4016*(t3362*t4938 + t2740*t5805 + t6085 + t6086 + t7318 + t7324))*var2[0] + (t4324*t6838 + t4261*t6879 + t4061*(t3176*t4938 + t2438*t5805 + t5943 + t5951 + t7215 + t7216) + t3994*(-1.*t3362*t4938 - 1.*t2740*t5805 + t6001 + t6009 + t7231 + t7237))*var2[1] + (t4309*t6768 + t4261*t6790 + t4016*(-1.*t3176*t4938 + t5638 + t5761 - 1.*t2438*t5805 + t7156 + t7157) + t3994*(t3257*t4938 + t2596*t5805 + t5864 + t5867 + t7165 + t7176))*var2[2];
  p_output1[37]=(t4361*t6920 + t4433*t6936 + t4061*(-1.*t3953*t4938 - 1.*t2596*t6397 + t6610 + t6611 + t7443 + t7447) + t4016*(t3564*t4938 + t2740*t6397 + t6634 + t6637 + t7458 + t7459))*var2[0] + (t4361*t6838 + t4389*t6879 + t4061*(t3752*t4938 + t2438*t6397 + t6555 + t6558 + t7396 + t7403) + t3994*(-1.*t3564*t4938 - 1.*t2740*t6397 + t6592 + t6593 + t7429 + t7430))*var2[1] + (t4433*t6768 + t4389*t6790 + t4016*(-1.*t3752*t4938 + t6349 + t6350 - 1.*t2438*t6397 + t7346 + t7347) + t3994*(t3953*t4938 + t2596*t6397 + t6455 + t6473 + t7361 + t7363))*var2[2];
  p_output1[38]=t4061*t6920 + t4016*t6936;
  p_output1[39]=t4061*t6838 + t3994*t6879;
  p_output1[40]=t4016*t6768 + t3994*t6790;
  p_output1[41]=(t2662*(-1.*t2984*t4923 - 1.*t2582*t4934 - 1.*t2594*t5279 - 1.*t2582*t5291) + t2525*(t3001*t4923 + t2726*t4934 + t2738*t5279 + t2726*t5291))*var2[0] + (t2662*(t2966*t4923 + t2404*t4934 + t2413*t5279 + t2404*t5291) + t2262*(-1.*t3001*t4923 - 1.*t2726*t4934 - 1.*t2738*t5279 - 1.*t2726*t5291))*var2[1] + (t2525*(-1.*t2966*t4923 - 1.*t2404*t4934 - 1.*t2413*t5279 - 1.*t2404*t5291) + t2262*(t2984*t4923 + t2582*t4934 + t2594*t5279 + t2582*t5291))*var2[2];
  p_output1[42]=(t2662*(-1.*t3237*t4923 - 1.*t3247*t4934 - 1.*t2594*t5719 - 1.*t2582*t5734 + t7301 + t7303) + t2525*(t3314*t4923 + t3357*t4934 + t2738*t5719 + t2726*t5734 + t7318 + t7324) + t3280*t7866 + t3198*t7901)*var2[0] + (t2662*(t3159*t4923 + t3171*t4934 + t2413*t5719 + t2404*t5734 + t7215 + t7216) + t2262*(-1.*t3314*t4923 - 1.*t3357*t4934 - 1.*t2738*t5719 - 1.*t2726*t5734 + t7231 + t7237) + t3280*t7780 + t3074*t7813)*var2[1] + (t2525*(-1.*t3159*t4923 - 1.*t3171*t4934 - 1.*t2413*t5719 - 1.*t2404*t5734 + t7156 + t7157) + t2262*(t3237*t4923 + t3247*t4934 + t2594*t5719 + t2582*t5734 + t7165 + t7176) + t3198*t7662 + t3074*t7707)*var2[2];
  p_output1[43]=(t2662*(-1.*t3937*t4923 - 1.*t3943*t4934 - 1.*t2594*t6337 - 1.*t2582*t6343 + t7443 + t7447) + t2525*(t3554*t4923 + t3562*t4934 + t2738*t6337 + t2726*t6343 + t7458 + t7459) + t3501*t7866 + t3795*t7901)*var2[0] + (t2662*(t3742*t4923 + t3747*t4934 + t2413*t6337 + t2404*t6343 + t7396 + t7403) + t2262*(-1.*t3554*t4923 - 1.*t3562*t4934 - 1.*t2738*t6337 - 1.*t2726*t6343 + t7429 + t7430) + t3501*t7780 + t3704*t7813)*var2[1] + (t2525*(-1.*t3742*t4923 - 1.*t3747*t4934 - 1.*t2413*t6337 - 1.*t2404*t6343 + t7346 + t7347) + t2262*(t3937*t4923 + t3943*t4934 + t2594*t6337 + t2582*t6343 + t7361 + t7363) + t3795*t7662 + t3704*t7707)*var2[2];
  p_output1[44]=t2662*t7866 + t2525*t7901;
  p_output1[45]=t2662*t7780 + t2262*t7813;
  p_output1[46]=t2525*t7662 + t2262*t7707;
  p_output1[47]=(-0.15121*t3122 + 0.15121*t3146 + t2662*(-1.*t3232*t4905 - 1.*t3217*t4921 - 1.*t2577*t5679 - 1.*t2548*t5715 + t7301 + t7303) + t2525*(t3311*t4905 + t3300*t4921 + t2718*t5679 + t2676*t5715 + t7318 + t7324) + t3280*t8227 + t3198*t8249)*var2[0] + (0.15121*t3217 - 0.15121*t3232 + t2662*(t3122*t4905 + t3146*t4921 + t2331*t5679 + t2391*t5715 + t7215 + t7216) + t2262*(-1.*t3311*t4905 - 1.*t3300*t4921 - 1.*t2718*t5679 - 1.*t2676*t5715 + t7231 + t7237) + t3280*t8179 + t3074*t8195)*var2[1] + (0.15121*t3300 - 0.15121*t3311 + t2525*(-1.*t3122*t4905 - 1.*t3146*t4921 - 1.*t2331*t5679 - 1.*t2391*t5715 + t7156 + t7157) + t2262*(t3232*t4905 + t3217*t4921 + t2577*t5679 + t2548*t5715 + t7165 + t7176) + t3198*t8132 + t3074*t8159)*var2[2];
  p_output1[48]=(-0.15121*t3716 + 0.15121*t3737 + t2662*(-1.*t3911*t4905 - 1.*t3931*t4921 - 1.*t2548*t6325 - 1.*t2577*t6333 + t7443 + t7447) + t2525*(t3549*t4905 + t3524*t4921 + t2676*t6325 + t2718*t6333 + t7458 + t7459) + t3501*t8227 + t3795*t8249)*var2[0] + (-0.15121*t3911 + 0.15121*t3931 + t2662*(t3716*t4905 + t3737*t4921 + t2391*t6325 + t2331*t6333 + t7396 + t7403) + t2262*(-1.*t3549*t4905 - 1.*t3524*t4921 - 1.*t2676*t6325 - 1.*t2718*t6333 + t7429 + t7430) + t3501*t8179 + t3704*t8195)*var2[1] + (0.15121*t3524 - 0.15121*t3549 + t2525*(-1.*t3716*t4905 - 1.*t3737*t4921 - 1.*t2391*t6325 - 1.*t2331*t6333 + t7346 + t7347) + t2262*(t3911*t4905 + t3931*t4921 + t2548*t6325 + t2577*t6333 + t7361 + t7363) + t3795*t8132 + t3704*t8159)*var2[2];
  p_output1[49]=0.15121*t2331 - 0.15121*t2391 + t2662*t8227 + t2525*t8249;
  p_output1[50]=-0.15121*t2548 + 0.15121*t2577 + t2662*t8179 + t2262*t8195;
  p_output1[51]=-0.15121*t2676 + 0.15121*t2718 + t2525*t8132 + t2262*t8159;
  p_output1[52]=(1.e-6*(-7.000000000455e-6*t1759 + t3395) + 0.281211*t3667 - 0.038749*t3694 - 1.*t2620*t8539 - 1.*t3494*t8553 - 1.*t2487*t8568 - 1.*t3770*t8579 + 7.e-6*(t2660*t8539 + t3418*t8553 + t2514*t8568 + t3778*t8579) + 4.e-6*(-1.*t2637*t8539 - 1.*t3452*t8553 - 1.*t2465*t8568 - 1.*t3788*t8579))*var2[0] + (1.e-6*(4.00000000026e-6*t1759 + t3434) - 0.038749*t3778 + 0.281211*t3788 - 1.*t3494*t8464 - 1.*t2620*t8477 - 1.*t2253*t8486 - 1.*t3678*t8495 + 4.e-6*(-1.*t3452*t8464 - 1.*t2637*t8477 - 1.*t2174*t8486 - 1.*t3667*t8495) + 7.e-6*(t3418*t8464 + t2660*t8477 + t1836*t8486 + t3694*t8495))*var2[1] + (-0.038749*t3418 + 0.281211*t3452 + 1.e-6*(-6.5e-11*t1759 - 7.e-6*t3467 + 4.e-6*t6171) - 1.*t3770*t8394 - 1.*t2253*t8405 - 1.*t3678*t8412 - 1.*t2487*t8427 + 4.e-6*(-1.*t3788*t8394 - 1.*t2174*t8405 - 1.*t3667*t8412 - 1.*t2465*t8427) + 7.e-6*(t3778*t8394 + t1836*t8405 + t3694*t8412 + t2514*t8427))*var2[2];
  p_output1[53]=-0.038749*t1836 + 0.281211*t2174 + 1.e-6*(t1743 + 7.e-6*t2234 + t2606) - 1.*t2620*t8553 - 1.*t2487*t8579 + 4.e-6*(-1.*t2637*t8553 - 1.*t2465*t8579) + 7.e-6*(t2660*t8553 + t2514*t8579);
  p_output1[54]=0.281211*t2465 - 0.038749*t2514 + 1.e-6*(t2061 + 4.e-6*(-1. + t2605) + t2626) - 1.*t2620*t8464 - 1.*t2253*t8495 + 7.e-6*(t2660*t8464 + t1836*t8495) + 4.e-6*(-1.*t2637*t8464 - 1.*t2174*t8495);
  p_output1[55]=0.281211*t2637 - 0.038749*t2660 + 1.e-6*(1. + t2233 - 7.e-6*t2608 + 4.e-6*t4758) - 1.*t2487*t8394 - 1.*t2253*t8412 + 7.e-6*(t2514*t8394 + t1836*t8412) + 4.e-6*(-1.*t2465*t8394 - 1.*t2174*t8412);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_DiagonalStance2.hh"

namespace TrotStance2
{

void J_fRrFoot_vec_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
