/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:30:29 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t877;
  double t887;
  double t943;
  double t165;
  double t209;
  double t240;
  double t1164;
  double t792;
  double t1178;
  double t968;
  double t1053;
  double t1205;
  double t1206;
  double t1268;
  double t1610;
  double t1353;
  double t1449;
  double t1549;
  double t1559;
  double t1563;
  double t1587;
  double t1595;
  double t1675;
  double t1677;
  double t1712;
  double t1743;
  double t1745;
  double t264;
  double t2048;
  double t2106;
  double t2051;
  double t2052;
  double t2055;
  double t2067;
  double t2070;
  double t2074;
  double t2075;
  double t2095;
  double t2097;
  double t2098;
  double t2016;
  double t2113;
  double t2127;
  double t2133;
  double t2134;
  double t2135;
  double t2136;
  double t2138;
  double t2142;
  double t2144;
  double t2145;
  double t21;
  double t1274;
  double t1308;
  double t1632;
  double t1649;
  double t810;
  double t1934;
  double t2015;
  double t2183;
  double t2189;
  double t2195;
  double t2200;
  double t2201;
  double t2202;
  double t2203;
  double t2209;
  double t2218;
  double t2241;
  double t2242;
  double t2244;
  double t2254;
  double t2268;
  double t2269;
  double t2270;
  double t2271;
  double t2168;
  double t2346;
  double t2345;
  double t2347;
  double t2348;
  double t2350;
  double t2352;
  double t2354;
  double t2356;
  double t2358;
  double t2359;
  double t2360;
  double t2364;
  double t2365;
  double t2366;
  double t2369;
  double t2371;
  double t2373;
  double t2374;
  double t2375;
  double t2377;
  double t2382;
  double t2383;
  double t2384;
  double t2386;
  double t2388;
  double t2389;
  double t2390;
  double t2392;
  double t2164;
  double t2165;
  double t2167;
  double t2099;
  double t2150;
  double t2155;
  double t2290;
  double t2304;
  double t2313;
  double t2266;
  double t2277;
  double t2287;
  double t2400;
  double t2401;
  double t2402;
  double t2387;
  double t2393;
  double t2397;
  double t2425;
  double t2437;
  double t2442;
  double t2641;
  double t2655;
  double t2656;
  double t2672;
  double t2682;
  double t2683;
  double t2684;
  double t2686;
  double t2691;
  double t2692;
  double t2694;
  double t2696;
  double t2709;
  double t2710;
  double t2712;
  double t2713;
  double t2648;
  double t2649;
  double t2642;
  double t2774;
  double t2778;
  double t2780;
  double t2781;
  double t2785;
  double t2786;
  double t2790;
  double t2791;
  double t2838;
  double t2840;
  double t2841;
  double t2843;
  double t2846;
  double t2848;
  double t2850;
  double t2857;
  double t2887;
  double t2889;
  double t2891;
  double t2894;
  double t2895;
  double t2933;
  double t2935;
  double t2936;
  double t2944;
  double t2948;
  double t2955;
  double t2956;
  double t2962;
  double t2963;
  double t2964;
  double t2965;
  double t2968;
  double t2973;
  double t2974;
  double t2989;
  double t2990;
  double t2994;
  double t3000;
  double t3011;
  double t3013;
  double t3016;
  double t3017;
  double t3062;
  double t3043;
  double t3048;
  double t3049;
  double t3066;
  double t3067;
  double t3072;
  double t3135;
  double t3162;
  double t3168;
  double t3178;
  double t3179;
  double t3180;
  double t3185;
  double t3192;
  double t3198;
  double t3204;
  double t3206;
  double t3249;
  double t3250;
  double t3260;
  double t3261;
  double t3263;
  double t3266;
  double t3270;
  double t3283;
  double t3284;
  double t3285;
  double t3288;
  double t3297;
  double t3299;
  double t3310;
  double t3311;
  double t1273;
  double t1605;
  double t1800;
  double t1860;
  double t2162;
  double t2171;
  double t2172;
  double t2196;
  double t2205;
  double t2219;
  double t2220;
  double t2288;
  double t2315;
  double t2316;
  double t2355;
  double t2367;
  double t2378;
  double t2379;
  double t2398;
  double t2403;
  double t2404;
  double t1866;
  double t2178;
  double t2180;
  double t3433;
  double t3447;
  double t2232;
  double t2318;
  double t2343;
  double t2381;
  double t2407;
  double t2408;
  double t2419;
  double t2428;
  double t2430;
  double t2438;
  double t2441;
  double t2443;
  double t2447;
  double t2449;
  double t2451;
  double t2452;
  double t2454;
  double t2521;
  double t2580;
  double t2582;
  double t2588;
  double t2604;
  double t2611;
  double t2614;
  double t2626;
  double t2633;
  double t2635;
  double t2735;
  double t2736;
  double t2739;
  double t2689;
  double t2716;
  double t2717;
  double t2645;
  double t2647;
  double t2650;
  double t2651;
  double t2722;
  double t2740;
  double t2741;
  double t2797;
  double t2799;
  double t2801;
  double t2782;
  double t2792;
  double t2795;
  double t2750;
  double t2751;
  double t2757;
  double t2758;
  double t2796;
  double t2808;
  double t2809;
  double t2867;
  double t2871;
  double t2872;
  double t2844;
  double t2858;
  double t2860;
  double t2826;
  double t2828;
  double t2830;
  double t2833;
  double t2862;
  double t2873;
  double t2874;
  double t3025;
  double t3028;
  double t3032;
  double t3002;
  double t3018;
  double t3019;
  double t2934;
  double t2961;
  double t2981;
  double t2986;
  double t3021;
  double t3033;
  double t3037;
  double t3228;
  double t3229;
  double t3230;
  double t3189;
  double t3209;
  double t3211;
  double t3056;
  double t3070;
  double t3170;
  double t3173;
  double t3219;
  double t3231;
  double t3234;
  double t3316;
  double t3318;
  double t3396;
  double t3291;
  double t3312;
  double t3314;
  double t3255;
  double t3262;
  double t3277;
  double t3279;
  double t3315;
  double t3401;
  double t3404;
  double t3435;
  double t3436;
  double t3444;
  double t3456;
  double t3457;
  double t3458;
  double t3471;
  double t3475;
  double t3479;
  double t3795;
  double t3797;
  double t3798;
  double t3799;
  double t3802;
  double t3803;
  double t3806;
  double t3807;
  double t3808;
  double t3494;
  double t3496;
  double t3497;
  double t3506;
  double t3507;
  double t3508;
  double t3512;
  double t3515;
  double t3516;
  double t3581;
  double t3584;
  double t3608;
  double t3613;
  double t3639;
  double t3646;
  double t3657;
  double t3672;
  double t3673;
  double t3676;
  double t3679;
  double t3680;
  double t3692;
  double t3695;
  double t3697;
  double t3699;
  double t3704;
  double t3705;
  double t3715;
  double t3716;
  double t3717;
  double t3720;
  double t3721;
  double t3722;
  double t3731;
  double t3732;
  double t3733;
  double t3735;
  double t3738;
  double t3740;
  double t3749;
  double t3750;
  double t3751;
  double t3756;
  double t3757;
  double t3758;
  double t3768;
  double t3771;
  double t3772;
  double t3775;
  double t3778;
  double t3782;
  double t3425;
  double t3426;
  double t3427;
  double t3947;
  double t3958;
  double t3962;
  double t3963;
  double t3964;
  double t3967;
  double t3968;
  double t3971;
  double t3973;
  double t3978;
  double t3981;
  double t3988;
  double t3997;
  double t3998;
  double t4001;
  double t4002;
  double t4008;
  double t4009;
  double t4011;
  double t4012;
  double t4014;
  double t4017;
  double t4022;
  double t4026;
  double t4029;
  double t4039;
  double t4057;
  double t4059;
  double t4062;
  double t4065;
  double t4066;
  double t4067;
  double t4069;
  double t4097;
  double t3953;
  double t3954;
  double t4085;
  double t4086;
  double t4087;
  double t4095;
  double t4096;
  double t4106;
  double t4113;
  double t4117;
  double t4119;
  double t4121;
  double t4122;
  double t4126;
  double t4127;
  double t4131;
  double t4153;
  double t4155;
  double t4158;
  double t4159;
  double t4161;
  double t4163;
  double t4167;
  double t4171;
  double t4184;
  double t3942;
  double t3946;
  double t3948;
  double t3952;
  double t3956;
  double t3957;
  double t3987;
  double t4024;
  double t4071;
  double t4072;
  double t4090;
  double t4128;
  double t4186;
  double t4190;
  double t4191;
  double t4192;
  double t4195;
  double t4198;
  double t4199;
  double t4209;
  double t4212;
  double t3419;
  double t3421;
  double t3424;
  double t4231;
  double t4232;
  double t4234;
  double t4221;
  double t4223;
  double t4224;
  double t4077;
  double t4214;
  double t4218;
  double t4243;
  double t4244;
  double t4245;
  double t3428;
  double t3430;
  double t3431;
  double t4438;
  double t4440;
  double t4442;
  double t4246;
  double t4251;
  double t4252;
  double t4253;
  double t4266;
  double t4268;
  double t4269;
  double t4270;
  double t4290;
  double t4293;
  double t4296;
  double t4303;
  double t4325;
  double t4327;
  double t4328;
  double t4330;
  double t4370;
  double t4371;
  double t4377;
  double t4378;
  double t4405;
  double t4406;
  double t4409;
  double t4412;
  double t4636;
  double t4637;
  double t4641;
  double t4645;
  double t4631;
  double t4632;
  double t4656;
  double t4659;
  double t4660;
  double t4635;
  double t4648;
  double t4651;
  double t2773;
  double t2815;
  double t2818;
  double t2654;
  double t2743;
  double t2745;
  double t4962;
  double t4963;
  double t4964;
  double t4966;
  double t4977;
  double t4978;
  double t4979;
  double t4980;
  double t4981;
  double t4983;
  double t4993;
  double t4995;
  double t4996;
  double t5005;
  double t5008;
  double t5014;
  double t5017;
  double t5019;
  double t5020;
  double t5031;
  double t5033;
  double t5034;
  double t4982;
  double t5021;
  double t5028;
  double t5052;
  double t5058;
  double t5060;
  double t5063;
  double t5065;
  double t5066;
  double t5067;
  double t5072;
  double t5073;
  double t5078;
  double t5085;
  double t5088;
  double t5030;
  double t5038;
  double t5039;
  double t5075;
  double t5091;
  double t5092;
  double t5094;
  double t5099;
  double t5100;
  double t2834;
  double t2879;
  double t2880;
  double t3282;
  double t3408;
  double t3409;
  double t3175;
  double t3237;
  double t3245;
  double t5264;
  double t5266;
  double t5267;
  double t5270;
  double t5271;
  double t5272;
  double t5273;
  double t5274;
  double t5277;
  double t5281;
  double t5285;
  double t5286;
  double t5289;
  double t5295;
  double t5297;
  double t5300;
  double t5303;
  double t5305;
  double t5309;
  double t5310;
  double t5311;
  double t5313;
  double t5314;
  double t5316;
  double t5275;
  double t5302;
  double t5318;
  double t5319;
  double t5325;
  double t5326;
  double t5328;
  double t5330;
  double t5340;
  double t5341;
  double t5345;
  double t5324;
  double t5337;
  double t5338;
  double t5358;
  double t5361;
  double t5364;
  double t5365;
  double t5369;
  double t5374;
  double t5375;
  double t5339;
  double t5351;
  double t5352;
  double t5368;
  double t5376;
  double t5378;
  double t5382;
  double t5383;
  double t5384;
  double t2988;
  double t3038;
  double t3040;
  double t4430;
  double t4437;
  double t4467;
  double t4468;
  double t4515;
  double t4516;
  double t4538;
  double t4540;
  double t4579;
  double t4589;
  double t4606;
  double t4612;
  double t5549;
  double t5552;
  double t5555;
  double t5576;
  double t5580;
  double t5581;
  double t4654;
  double t4655;
  double t4679;
  double t4688;
  double t5587;
  double t5590;
  double t5591;
  double t4758;
  double t4761;
  double t4802;
  double t4807;
  double t5610;
  double t5613;
  double t5614;
  double t5628;
  double t5630;
  double t5632;
  double t4866;
  double t4889;
  double t4922;
  double t4924;
  double t5657;
  double t5658;
  double t5661;
  double t4955;
  double t5044;
  double t5113;
  double t5115;
  double t5137;
  double t5140;
  double t5164;
  double t5165;
  double t5195;
  double t5200;
  double t5222;
  double t5227;
  double t5353;
  double t5355;
  double t5399;
  double t5401;
  double t5429;
  double t5435;
  double t5457;
  double t5458;
  double t5482;
  double t5483;
  double t5505;
  double t5507;
  double t5744;
  double t5745;
  double t5757;
  double t5758;
  double t5774;
  double t5775;
  double t5786;
  double t5787;
  double t5797;
  double t5799;
  double t5811;
  double t5813;
  double t6051;
  double t6055;
  double t6057;
  double t6060;
  double t6061;
  double t6063;
  double t5836;
  double t5838;
  double t5844;
  double t5846;
  double t6103;
  double t6104;
  double t6105;
  double t5858;
  double t5860;
  double t5871;
  double t5872;
  double t6126;
  double t6128;
  double t6130;
  double t6158;
  double t6161;
  double t6162;
  double t5894;
  double t5896;
  double t5902;
  double t5908;
  double t6175;
  double t6178;
  double t6179;
  double t6338;
  double t6340;
  double t6342;
  double t6358;
  double t6359;
  double t6360;
  double t6380;
  double t6381;
  double t6382;
  double t6405;
  double t6406;
  double t6409;
  double t6424;
  double t6431;
  double t6432;
  double t6447;
  double t6448;
  double t6449;
  double t6586;
  double t6588;
  double t6590;
  double t6594;
  double t6603;
  double t6604;
  double t6605;
  double t6608;
  double t6610;
  double t6613;
  double t6614;
  double t6617;
  double t6618;
  double t6621;
  double t6625;
  double t6630;
  double t6631;
  double t6632;
  double t6635;
  double t6636;
  double t6637;
  double t6638;
  double t6665;
  double t6669;
  double t6674;
  double t6676;
  double t6678;
  double t6681;
  double t6682;
  double t6683;
  double t6684;
  double t6685;
  double t6686;
  double t6689;
  double t6690;
  double t6691;
  double t6692;
  double t6694;
  double t6696;
  double t6697;
  double t6699;
  double t6703;
  double t6706;
  double t6707;
  double t6745;
  double t6746;
  double t6747;
  double t6748;
  double t6749;
  double t6754;
  double t6756;
  double t6762;
  double t6764;
  double t6765;
  double t6766;
  double t6770;
  double t6771;
  double t6773;
  double t6775;
  double t6777;
  double t6780;
  double t6781;
  double t6783;
  double t6787;
  double t6788;
  double t6789;
  t877 = Cos(var1[17]);
  t887 = -1.*t877;
  t943 = 1. + t887;
  t165 = Cos(var1[16]);
  t209 = -1.*t165;
  t240 = 1. + t209;
  t1164 = Sin(var1[17]);
  t792 = Sin(var1[16]);
  t1178 = 4.e-6*t1164;
  t968 = 1.000000000016*t943;
  t1053 = -7.e-6*t943;
  t1205 = t1053 + t1178;
  t1206 = -7.e-6*t1205;
  t1268 = -1. + t968 + t1206;
  t1610 = 4.e-6*t240;
  t1353 = 2.8e-11*t943;
  t1449 = 4.e-6*t943;
  t1549 = 7.e-6*t1164;
  t1559 = t1449 + t1549;
  t1563 = -7.e-6*t1559;
  t1587 = -1.*t1164;
  t1595 = t1353 + t1563 + t1587;
  t1675 = -6.5e-11*t943;
  t1677 = 1. + t1675;
  t1712 = -7.e-6*t1677;
  t1743 = 7.e-6*t943;
  t1745 = t1712 + t1743 + t1178;
  t264 = -2.8e-11*t240;
  t2048 = -7.e-6*t240;
  t2106 = Cos(var1[15]);
  t2051 = -4.e-6*t792;
  t2052 = t2048 + t2051;
  t2055 = t2052*t1268;
  t2067 = -7.e-6*t792;
  t2070 = t1610 + t2067;
  t2074 = t2070*t1595;
  t2075 = -6.5e-11*t240;
  t2095 = 1. + t2075;
  t2097 = t2095*t1745;
  t2098 = t2055 + t2074 + t2097;
  t2016 = Sin(var1[15]);
  t2113 = -1.000000000016*t240;
  t2127 = 1. + t2113;
  t2133 = t2127*t1268;
  t2134 = -1.*t792;
  t2135 = t264 + t2134;
  t2136 = t2135*t1595;
  t2138 = 4.e-6*t792;
  t2142 = t2048 + t2138;
  t2144 = t2142*t1745;
  t2145 = t2133 + t2136 + t2144;
  t21 = Cos(var1[4]);
  t1274 = -1.000000000049*t240;
  t1308 = 1. + t1274;
  t1632 = 7.e-6*t792;
  t1649 = t1610 + t1632;
  t810 = t264 + t792;
  t1934 = Sin(var1[4]);
  t2015 = Cos(var1[5]);
  t2183 = 1.000000000049*t943;
  t2189 = 4.e-6*t1559;
  t2195 = -1. + t2183 + t2189;
  t2200 = 4.e-6*t1677;
  t2201 = -1. + t877;
  t2202 = 4.e-6*t2201;
  t2203 = t2200 + t2202 + t1549;
  t2209 = 4.e-6*t1205;
  t2218 = t1353 + t2209 + t1164;
  t2241 = t2135*t2195;
  t2242 = t2142*t2203;
  t2244 = t2127*t2218;
  t2254 = t2241 + t2242 + t2244;
  t2268 = t2070*t2195;
  t2269 = t2095*t2203;
  t2270 = t2052*t2218;
  t2271 = t2268 + t2269 + t2270;
  t2168 = Sin(var1[5]);
  t2346 = -4.e-6*t1164;
  t2345 = 6.5e-11*t943;
  t2347 = t1053 + t2346;
  t2348 = 7.e-6*t2347;
  t2350 = t2202 + t1549;
  t2352 = 4.e-6*t2350;
  t2354 = -1. + t2345 + t2348 + t2352;
  t2356 = -1. + t2183;
  t2358 = 4.e-6*t2356;
  t2359 = -7.e-6*t1164;
  t2360 = -2.8e-11*t943;
  t2364 = t2360 + t1164;
  t2365 = 7.e-6*t2364;
  t2366 = t2358 + t2202 + t2359 + t2365;
  t2369 = -1.000000000016*t943;
  t2371 = 1. + t2369;
  t2373 = 7.e-6*t2371;
  t2374 = t1353 + t1164;
  t2375 = 4.e-6*t2374;
  t2377 = t2373 + t1743 + t2346 + t2375;
  t2382 = t2142*t2354;
  t2383 = t2135*t2366;
  t2384 = t2127*t2377;
  t2386 = t2382 + t2383 + t2384;
  t2388 = t2095*t2354;
  t2389 = t2070*t2366;
  t2390 = t2052*t2377;
  t2392 = t2388 + t2389 + t2390;
  t2164 = t2106*t2098;
  t2165 = t2016*t2145;
  t2167 = t2164 + t2165;
  t2099 = -1.*t2016*t2098;
  t2150 = t2106*t2145;
  t2155 = t2099 + t2150;
  t2290 = t2016*t2254;
  t2304 = t2106*t2271;
  t2313 = t2290 + t2304;
  t2266 = t2106*t2254;
  t2277 = -1.*t2016*t2271;
  t2287 = t2266 + t2277;
  t2400 = t2016*t2386;
  t2401 = t2106*t2392;
  t2402 = t2400 + t2401;
  t2387 = t2106*t2386;
  t2393 = -1.*t2016*t2392;
  t2397 = t2387 + t2393;
  t2425 = -1.*t2155*t2168;
  t2437 = -1.*t2287*t2168;
  t2442 = -1.*t2397*t2168;
  t2641 = -2.8e-11*t792;
  t2655 = -1.000000000016*t792*t1268;
  t2656 = t209 + t2641;
  t2672 = t2656*t1595;
  t2682 = 4.e-6*t165;
  t2683 = t2682 + t2067;
  t2684 = t2683*t1745;
  t2686 = t2655 + t2672 + t2684;
  t2691 = -4.e-6*t165;
  t2692 = t2691 + t2067;
  t2694 = t2692*t1268;
  t2696 = -7.e-6*t165;
  t2709 = t2696 + t2138;
  t2710 = t2709*t1595;
  t2712 = -6.5e-11*t792*t1745;
  t2713 = t2694 + t2710 + t2712;
  t2648 = 7.e-6*t165;
  t2649 = t2648 + t2138;
  t2642 = t165 + t2641;
  t2774 = t2709*t2195;
  t2778 = -6.5e-11*t792*t2203;
  t2780 = t2692*t2218;
  t2781 = t2774 + t2778 + t2780;
  t2785 = t2656*t2195;
  t2786 = t2683*t2203;
  t2790 = -1.000000000016*t792*t2218;
  t2791 = t2785 + t2786 + t2790;
  t2838 = -6.5e-11*t792*t2354;
  t2840 = t2709*t2366;
  t2841 = t2692*t2377;
  t2843 = t2838 + t2840 + t2841;
  t2846 = t2683*t2354;
  t2848 = t2656*t2366;
  t2850 = -1.000000000016*t792*t2377;
  t2857 = t2846 + t2848 + t2850;
  t2887 = -4.e-6*t877;
  t2889 = 2.8e-11*t1164;
  t2891 = t877 + t2889;
  t2894 = 4.e-6*t2891;
  t2895 = -1.12e-16*t1164;
  t2933 = t2887 + t2894 + t2895;
  t2935 = -7.e-6*t877;
  t2936 = -2.8e-11*t1164;
  t2944 = t877 + t2936;
  t2948 = 7.e-6*t2944;
  t2955 = 1.96e-16*t1164;
  t2956 = t2935 + t2948 + t2955;
  t2962 = t2887 + t2359;
  t2963 = 7.e-6*t2962;
  t2964 = 7.e-6*t877;
  t2965 = t2964 + t2346;
  t2968 = 4.e-6*t2965;
  t2973 = 6.5e-11*t1164;
  t2974 = t2963 + t2968 + t2973;
  t2989 = t2052*t2933;
  t2990 = t2070*t2956;
  t2994 = t2095*t2974;
  t3000 = t2989 + t2990 + t2994;
  t3011 = t2127*t2933;
  t3013 = t2135*t2956;
  t3016 = t2142*t2974;
  t3017 = t3011 + t3013 + t3016;
  t3062 = 4.e-6*t877;
  t3043 = t2964 + t1178;
  t3048 = -7.e-6*t3043;
  t3049 = t887 + t3048 + t2889;
  t3066 = 7.000000000455e-6*t1164;
  t3067 = t3062 + t3066;
  t3072 = t3062 + t2359;
  t3135 = -7.e-6*t3072;
  t3162 = 1.000000000016*t1164;
  t3168 = t3135 + t3162;
  t3178 = t2135*t3049;
  t3179 = t2142*t3067;
  t3180 = t2127*t3168;
  t3185 = t3178 + t3179 + t3180;
  t3192 = t2070*t3049;
  t3198 = t2095*t3067;
  t3204 = t2052*t3168;
  t3206 = t3192 + t3198 + t3204;
  t3249 = -4.00000000026e-6*t1164;
  t3250 = t2964 + t3249;
  t3260 = 4.e-6*t3072;
  t3261 = t877 + t3260 + t2889;
  t3263 = 4.e-6*t3043;
  t3266 = 1.000000000049*t1164;
  t3270 = t3263 + t3266;
  t3283 = t2142*t3250;
  t3284 = t2127*t3261;
  t3285 = t2135*t3270;
  t3288 = t3283 + t3284 + t3285;
  t3297 = t2095*t3250;
  t3299 = t2052*t3261;
  t3310 = t2070*t3270;
  t3311 = t3297 + t3299 + t3310;
  t1273 = t810*t1268;
  t1605 = t1308*t1595;
  t1800 = t1649*t1745;
  t1860 = t1273 + t1605 + t1800;
  t2162 = t2015*t2155;
  t2171 = -1.*t2167*t2168;
  t2172 = t2162 + t2171;
  t2196 = t1308*t2195;
  t2205 = t1649*t2203;
  t2219 = t810*t2218;
  t2220 = t2196 + t2205 + t2219;
  t2288 = t2015*t2287;
  t2315 = -1.*t2313*t2168;
  t2316 = t2288 + t2315;
  t2355 = t1649*t2354;
  t2367 = t1308*t2366;
  t2378 = t810*t2377;
  t2379 = t2355 + t2367 + t2378;
  t2398 = t2015*t2397;
  t2403 = -1.*t2402*t2168;
  t2404 = t2398 + t2403;
  t1866 = t21*t1860;
  t2178 = -1.*t1934*t2172;
  t2180 = t1866 + t2178;
  t3433 = Sin(var1[3]);
  t3447 = Cos(var1[3]);
  t2232 = t21*t2220;
  t2318 = -1.*t1934*t2316;
  t2343 = t2232 + t2318;
  t2381 = t21*t2379;
  t2407 = -1.*t1934*t2404;
  t2408 = t2381 + t2407;
  t2419 = -1.*t2015*t2167;
  t2428 = t2419 + t2425;
  t2430 = -1.*t2015*t2313;
  t2438 = t2430 + t2437;
  t2441 = -1.*t2015*t2402;
  t2443 = t2441 + t2442;
  t2447 = -1.*t2106*t2098;
  t2449 = -1.*t2016*t2145;
  t2451 = t2447 + t2449;
  t2452 = t2015*t2451;
  t2454 = t2452 + t2425;
  t2521 = -1.*t2016*t2254;
  t2580 = -1.*t2106*t2271;
  t2582 = t2521 + t2580;
  t2588 = t2015*t2582;
  t2604 = t2588 + t2437;
  t2611 = -1.*t2016*t2386;
  t2614 = -1.*t2106*t2392;
  t2626 = t2611 + t2614;
  t2633 = t2015*t2626;
  t2635 = t2633 + t2442;
  t2735 = t2016*t2686;
  t2736 = t2106*t2713;
  t2739 = t2735 + t2736;
  t2689 = t2106*t2686;
  t2716 = -1.*t2016*t2713;
  t2717 = t2689 + t2716;
  t2645 = t2642*t1268;
  t2647 = -1.000000000049*t792*t1595;
  t2650 = t2649*t1745;
  t2651 = t2645 + t2647 + t2650;
  t2722 = t2015*t2717;
  t2740 = -1.*t2739*t2168;
  t2741 = t2722 + t2740;
  t2797 = t2106*t2781;
  t2799 = t2016*t2791;
  t2801 = t2797 + t2799;
  t2782 = -1.*t2016*t2781;
  t2792 = t2106*t2791;
  t2795 = t2782 + t2792;
  t2750 = -1.000000000049*t792*t2195;
  t2751 = t2649*t2203;
  t2757 = t2642*t2218;
  t2758 = t2750 + t2751 + t2757;
  t2796 = t2015*t2795;
  t2808 = -1.*t2801*t2168;
  t2809 = t2796 + t2808;
  t2867 = t2106*t2843;
  t2871 = t2016*t2857;
  t2872 = t2867 + t2871;
  t2844 = -1.*t2016*t2843;
  t2858 = t2106*t2857;
  t2860 = t2844 + t2858;
  t2826 = t2649*t2354;
  t2828 = -1.000000000049*t792*t2366;
  t2830 = t2642*t2377;
  t2833 = t2826 + t2828 + t2830;
  t2862 = t2015*t2860;
  t2873 = -1.*t2872*t2168;
  t2874 = t2862 + t2873;
  t3025 = t2106*t3000;
  t3028 = t2016*t3017;
  t3032 = t3025 + t3028;
  t3002 = -1.*t2016*t3000;
  t3018 = t2106*t3017;
  t3019 = t3002 + t3018;
  t2934 = t810*t2933;
  t2961 = t1308*t2956;
  t2981 = t1649*t2974;
  t2986 = t2934 + t2961 + t2981;
  t3021 = t2015*t3019;
  t3033 = -1.*t3032*t2168;
  t3037 = t3021 + t3033;
  t3228 = t2016*t3185;
  t3229 = t2106*t3206;
  t3230 = t3228 + t3229;
  t3189 = t2106*t3185;
  t3209 = -1.*t2016*t3206;
  t3211 = t3189 + t3209;
  t3056 = t1308*t3049;
  t3070 = t1649*t3067;
  t3170 = t810*t3168;
  t3173 = t3056 + t3070 + t3170;
  t3219 = t2015*t3211;
  t3231 = -1.*t3230*t2168;
  t3234 = t3219 + t3231;
  t3316 = t2016*t3288;
  t3318 = t2106*t3311;
  t3396 = t3316 + t3318;
  t3291 = t2106*t3288;
  t3312 = -1.*t2016*t3311;
  t3314 = t3291 + t3312;
  t3255 = t1649*t3250;
  t3262 = t810*t3261;
  t3277 = t1308*t3270;
  t3279 = t3255 + t3262 + t3277;
  t3315 = t2015*t3314;
  t3401 = -1.*t3396*t2168;
  t3404 = t3315 + t3401;
  t3435 = t2015*t2167;
  t3436 = t2155*t2168;
  t3444 = t3435 + t3436;
  t3456 = t2015*t2313;
  t3457 = t2287*t2168;
  t3458 = t3456 + t3457;
  t3471 = t2015*t2402;
  t3475 = t2397*t2168;
  t3479 = t3471 + t3475;
  t3795 = t3447*t3444;
  t3797 = -1.*t3433*t2180;
  t3798 = t3795 + t3797;
  t3799 = t3447*t3458;
  t3802 = -1.*t3433*t2343;
  t3803 = t3799 + t3802;
  t3806 = t3447*t3479;
  t3807 = -1.*t3433*t2408;
  t3808 = t3806 + t3807;
  t3494 = -1.*t1860*t1934;
  t3496 = -1.*t21*t2172;
  t3497 = t3494 + t3496;
  t3506 = -1.*t2220*t1934;
  t3507 = -1.*t21*t2316;
  t3508 = t3506 + t3507;
  t3512 = -1.*t2379*t1934;
  t3515 = -1.*t21*t2404;
  t3516 = t3512 + t3515;
  t3581 = t2451*t2168;
  t3584 = t2162 + t3581;
  t3608 = t2582*t2168;
  t3613 = t2288 + t3608;
  t3639 = t2626*t2168;
  t3646 = t2398 + t3639;
  t3657 = t2015*t2739;
  t3672 = t2717*t2168;
  t3673 = t3657 + t3672;
  t3676 = t21*t2651;
  t3679 = -1.*t1934*t2741;
  t3680 = t3676 + t3679;
  t3692 = t2015*t2801;
  t3695 = t2795*t2168;
  t3697 = t3692 + t3695;
  t3699 = t21*t2758;
  t3704 = -1.*t1934*t2809;
  t3705 = t3699 + t3704;
  t3715 = t2015*t2872;
  t3716 = t2860*t2168;
  t3717 = t3715 + t3716;
  t3720 = t21*t2833;
  t3721 = -1.*t1934*t2874;
  t3722 = t3720 + t3721;
  t3731 = t2015*t3032;
  t3732 = t3019*t2168;
  t3733 = t3731 + t3732;
  t3735 = t21*t2986;
  t3738 = -1.*t1934*t3037;
  t3740 = t3735 + t3738;
  t3749 = t2015*t3230;
  t3750 = t3211*t2168;
  t3751 = t3749 + t3750;
  t3756 = t21*t3173;
  t3757 = -1.*t1934*t3234;
  t3758 = t3756 + t3757;
  t3768 = t2015*t3396;
  t3771 = t3314*t2168;
  t3772 = t3768 + t3771;
  t3775 = t21*t3279;
  t3778 = -1.*t1934*t3404;
  t3782 = t3775 + t3778;
  t3425 = t2220*t1934;
  t3426 = t21*t2316;
  t3427 = t3425 + t3426;
  t3947 = 2.8e-11*t240;
  t3958 = 2.826290000000002e-7*var1[17];
  t3962 = -0.148715*t1677;
  t3963 = -2.18904205e-16*t943;
  t3964 = t1449 + t2359;
  t3967 = -0.038576*t3964;
  t3968 = -0.80315*t2347;
  t3971 = t1743 + t1178;
  t3973 = -0.5031510000080001*t3971;
  t3978 = -0.038575000014*t2350;
  t3981 = t3958 + t3962 + t3963 + t3967 + t3968 + t3973 + t3978;
  t3988 = 1.1305160000000008e-12*var1[17];
  t3997 = -1.000000000049*t943;
  t3998 = 1. + t3997;
  t4001 = -0.038576*t3998;
  t4002 = -0.03857500001589017*t943;
  t4008 = t1353 + t1587;
  t4009 = -0.5031510000080001*t4008;
  t4011 = t2202 + t2359;
  t4012 = -3.367757e-6*t4011;
  t4014 = -0.148715*t1559;
  t4017 = -0.80315*t2364;
  t4022 = t3988 + t4001 + t4002 + t4009 + t4012 + t4014 + t4017;
  t4026 = -1.9784030000000015e-12*var1[17];
  t4029 = -0.80315*t2371;
  t4039 = -0.5031510000160505*t943;
  t4057 = t2360 + t1587;
  t4059 = -0.038576*t4057;
  t4062 = t1743 + t2346;
  t4065 = -3.367757e-6*t4062;
  t4066 = -0.148715*t1205;
  t4067 = -0.038575000014*t2374;
  t4069 = t4026 + t4029 + t4039 + t4059 + t4065 + t4066 + t4067;
  t4097 = 7.e-6*t240;
  t3953 = -1. + t165;
  t3954 = 4.e-6*t3953;
  t4085 = -1.*t2106;
  t4086 = 1. + t4085;
  t4087 = -0.15121*t4086;
  t4095 = -2.7726089999999997e-12*var1[16];
  t4096 = -0.2812110000084994*t240;
  t4106 = t4097 + t2051;
  t4113 = -1.8134809999999998e-6*t4106;
  t4117 = t3947 + t792;
  t4119 = -0.038749000006999997*t4117;
  t4121 = t2142*t3981;
  t4122 = t2135*t4022;
  t4126 = t2127*t4069;
  t4127 = t4095 + t4096 + t4113 + t4119 + t4121 + t4122 + t4126;
  t4131 = 3.9608699999999997e-7*var1[16];
  t4153 = -1.1787626499999999e-16*t240;
  t4155 = t4097 + t2138;
  t4158 = -0.281211000004*t4155;
  t4159 = t3954 + t1632;
  t4161 = -0.038749000006999997*t4159;
  t4163 = t2095*t3981;
  t4167 = t2070*t4022;
  t4171 = t2052*t4069;
  t4184 = t4131 + t4153 + t4158 + t4161 + t4163 + t4167 + t4171;
  t3942 = 1.5843479999999999e-12*var1[16];
  t3946 = -0.03874900000889869*t240;
  t3948 = t3947 + t2134;
  t3952 = -0.281211000004*t3948;
  t3956 = t3954 + t2067;
  t3957 = -1.8134809999999998e-6*t3956;
  t3987 = t1649*t3981;
  t4024 = t1308*t4022;
  t4071 = t810*t4069;
  t4072 = t3942 + t3946 + t3952 + t3957 + t3987 + t4024 + t4071;
  t4090 = -0.15121*t2016;
  t4128 = t2106*t4127;
  t4186 = -1.*t2016*t4184;
  t4190 = t4087 + t4090 + t4128 + t4186;
  t4191 = t2015*t4190;
  t4192 = 0.15121*t2016;
  t4195 = t2016*t4127;
  t4198 = t2106*t4184;
  t4199 = t4087 + t4192 + t4195 + t4198;
  t4209 = -1.*t4199*t2168;
  t4212 = t4191 + t4209;
  t3419 = t1860*t1934;
  t3421 = t21*t2172;
  t3424 = t3419 + t3421;
  t4231 = t21*t4072;
  t4232 = -1.*t1934*t4212;
  t4234 = t4231 + t4232;
  t4221 = t4072*t1934;
  t4223 = t21*t4212;
  t4224 = t4221 + t4223;
  t4077 = -1.*t4072*t1934;
  t4214 = -1.*t21*t4212;
  t4218 = t4077 + t4214;
  t4243 = t2015*t4199;
  t4244 = t4190*t2168;
  t4245 = t4243 + t4244;
  t3428 = t2379*t1934;
  t3430 = t21*t2404;
  t3431 = t3428 + t3430;
  t4438 = -1.*t2015*t4199;
  t4440 = -1.*t4190*t2168;
  t4442 = t4438 + t4440;
  t4246 = -1.*t3444*t4245;
  t4251 = -1.*t3424*t4224;
  t4252 = -1.*t2180*t4234;
  t4253 = t4246 + t4251 + t4252;
  t4266 = t3458*t4245;
  t4268 = t3427*t4224;
  t4269 = t2343*t4234;
  t4270 = t4266 + t4268 + t4269;
  t4290 = t3444*t4245;
  t4293 = t3424*t4224;
  t4296 = t2180*t4234;
  t4303 = t4290 + t4293 + t4296;
  t4325 = -1.*t4245*t3479;
  t4327 = -1.*t4224*t3431;
  t4328 = -1.*t4234*t2408;
  t4330 = t4325 + t4327 + t4328;
  t4370 = -1.*t3458*t4245;
  t4371 = -1.*t3427*t4224;
  t4377 = -1.*t2343*t4234;
  t4378 = t4370 + t4371 + t4377;
  t4405 = t4245*t3479;
  t4406 = t4224*t3431;
  t4409 = t4234*t2408;
  t4412 = t4405 + t4406 + t4409;
  t4636 = -0.15121*t2106;
  t4637 = -1.*t2016*t4127;
  t4641 = -1.*t2106*t4184;
  t4645 = t4636 + t4090 + t4637 + t4641;
  t4631 = 0.15121*t2106;
  t4632 = t4631 + t4090 + t4128 + t4186;
  t4656 = t2015*t4645;
  t4659 = -1.*t4632*t2168;
  t4660 = t4656 + t4659;
  t4635 = t2015*t4632;
  t4648 = t4645*t2168;
  t4651 = t4635 + t4648;
  t2773 = t2758*t1934;
  t2815 = t21*t2809;
  t2818 = t2773 + t2815;
  t2654 = t2651*t1934;
  t2743 = t21*t2741;
  t2745 = t2654 + t2743;
  t4962 = t2648 + t2051;
  t4963 = -0.038749000006999997*t4962;
  t4964 = t2682 + t1632;
  t4966 = -0.281211000004*t4964;
  t4977 = -1.1787626499999999e-16*t792;
  t4978 = -6.5e-11*t792*t3981;
  t4979 = t2709*t4022;
  t4980 = t2692*t4069;
  t4981 = 3.9608699999999997e-7 + t4963 + t4966 + t4977 + t4978 + t4979 + t4980;
  t4983 = 2.8e-11*t792;
  t4993 = t165 + t4983;
  t4995 = -0.038749000006999997*t4993;
  t4996 = t2691 + t1632;
  t5005 = -1.8134809999999998e-6*t4996;
  t5008 = -0.2812110000084994*t792;
  t5014 = t2683*t3981;
  t5017 = t2656*t4022;
  t5019 = -1.000000000016*t792*t4069;
  t5020 = -2.7726089999999997e-12 + t4995 + t5005 + t5008 + t5014 + t5017 + t5019;
  t5031 = -1.*t2016*t4981;
  t5033 = t2106*t5020;
  t5034 = t5031 + t5033;
  t4982 = t2106*t4981;
  t5021 = t2016*t5020;
  t5028 = t4982 + t5021;
  t5052 = t2696 + t2051;
  t5058 = -1.8134809999999998e-6*t5052;
  t5060 = t209 + t4983;
  t5063 = -0.281211000004*t5060;
  t5065 = -0.03874900000889869*t792;
  t5066 = t2649*t3981;
  t5067 = -1.000000000049*t792*t4022;
  t5072 = t2642*t4069;
  t5073 = 1.5843479999999999e-12 + t5058 + t5063 + t5065 + t5066 + t5067 + t5072;
  t5078 = t2015*t5034;
  t5085 = -1.*t5028*t2168;
  t5088 = t5078 + t5085;
  t5030 = t2015*t5028;
  t5038 = t5034*t2168;
  t5039 = t5030 + t5038;
  t5075 = t5073*t1934;
  t5091 = t21*t5088;
  t5092 = t5075 + t5091;
  t5094 = t21*t5073;
  t5099 = -1.*t1934*t5088;
  t5100 = t5094 + t5099;
  t2834 = t2833*t1934;
  t2879 = t21*t2874;
  t2880 = t2834 + t2879;
  t3282 = t3279*t1934;
  t3408 = t21*t3404;
  t3409 = t3282 + t3408;
  t3175 = t3173*t1934;
  t3237 = t21*t3234;
  t3245 = t3175 + t3237;
  t5264 = -0.80315*t2962;
  t5266 = -0.038575000014*t2965;
  t5267 = t2935 + t1178;
  t5270 = -0.038576*t5267;
  t5271 = t3062 + t1549;
  t5272 = -0.5031510000080001*t5271;
  t5273 = 9.666256095795e-12*t1164;
  t5274 = 2.826290000000002e-7 + t5264 + t5266 + t5270 + t5272 + t5273;
  t5277 = t2935 + t2346;
  t5281 = -3.367757e-6*t5277;
  t5285 = -0.80315*t2944;
  t5286 = t887 + t2889;
  t5289 = -0.5031510000080001*t5286;
  t5295 = -0.148715*t3043;
  t5297 = 9.99986000053965e-7*t1164;
  t5300 = 1.1305160000000008e-12 + t5281 + t5285 + t5289 + t5295 + t5297;
  t5303 = -0.148715*t3072;
  t5305 = t887 + t2936;
  t5309 = -0.038576*t5305;
  t5310 = -0.038575000014*t2891;
  t5311 = t2887 + t1549;
  t5313 = -3.367757e-6*t5311;
  t5314 = 0.2999989999967999*t1164;
  t5316 = -1.9784030000000015e-12 + t5303 + t5309 + t5310 + t5313 + t5314;
  t5275 = t2142*t5274;
  t5302 = t2135*t5300;
  t5318 = t2127*t5316;
  t5319 = t5275 + t5302 + t5318;
  t5325 = t2095*t5274;
  t5326 = t2070*t5300;
  t5328 = t2052*t5316;
  t5330 = t5325 + t5326 + t5328;
  t5340 = t2106*t5319;
  t5341 = -1.*t2016*t5330;
  t5345 = t5340 + t5341;
  t5324 = t2016*t5319;
  t5337 = t2106*t5330;
  t5338 = t5324 + t5337;
  t5358 = t1649*t5274;
  t5361 = t1308*t5300;
  t5364 = t810*t5316;
  t5365 = t5358 + t5361 + t5364;
  t5369 = t2015*t5345;
  t5374 = -1.*t5338*t2168;
  t5375 = t5369 + t5374;
  t5339 = t2015*t5338;
  t5351 = t5345*t2168;
  t5352 = t5339 + t5351;
  t5368 = t5365*t1934;
  t5376 = t21*t5375;
  t5378 = t5368 + t5376;
  t5382 = t21*t5365;
  t5383 = -1.*t1934*t5375;
  t5384 = t5382 + t5383;
  t2988 = t2986*t1934;
  t3038 = t21*t3037;
  t3040 = t2988 + t3038;
  t4430 = -1.*t3444*t4212;
  t4437 = -1.*t2172*t4245;
  t4467 = t3458*t4212;
  t4468 = t2316*t4245;
  t4515 = t3444*t4212;
  t4516 = t2172*t4245;
  t4538 = -1.*t4245*t2404;
  t4540 = -1.*t4212*t3479;
  t4579 = -1.*t3458*t4212;
  t4589 = -1.*t2316*t4245;
  t4606 = t4245*t2404;
  t4612 = t4212*t3479;
  t5549 = -1.*t1860*t4072;
  t5552 = -1.*t2172*t4212;
  t5555 = t5549 + t5552 + t4246;
  t5576 = t2220*t4072;
  t5580 = t2316*t4212;
  t5581 = t5576 + t5580 + t4266;
  t4654 = -1.*t3444*t4651;
  t4655 = -1.*t3584*t4245;
  t4679 = t3458*t4651;
  t4688 = t3613*t4245;
  t5587 = t1860*t4072;
  t5590 = t2172*t4212;
  t5591 = t5587 + t5590 + t4290;
  t4758 = t3444*t4651;
  t4761 = t3584*t4245;
  t4802 = -1.*t4245*t3646;
  t4807 = -1.*t4651*t3479;
  t5610 = -1.*t4072*t2379;
  t5613 = -1.*t4212*t2404;
  t5614 = t5610 + t5613 + t4325;
  t5628 = -1.*t2220*t4072;
  t5630 = -1.*t2316*t4212;
  t5632 = t5628 + t5630 + t4370;
  t4866 = -1.*t3458*t4651;
  t4889 = -1.*t3613*t4245;
  t4922 = t4245*t3646;
  t4924 = t4651*t3479;
  t5657 = t4072*t2379;
  t5658 = t4212*t2404;
  t5661 = t5657 + t5658 + t4405;
  t4955 = -1.*t3673*t4245;
  t5044 = -1.*t3444*t5039;
  t5113 = t3697*t4245;
  t5115 = t3458*t5039;
  t5137 = t3673*t4245;
  t5140 = t3444*t5039;
  t5164 = -1.*t5039*t3479;
  t5165 = -1.*t4245*t3717;
  t5195 = -1.*t3697*t4245;
  t5200 = -1.*t3458*t5039;
  t5222 = t5039*t3479;
  t5227 = t4245*t3717;
  t5353 = -1.*t3444*t5352;
  t5355 = -1.*t3751*t4245;
  t5399 = t5352*t3458;
  t5401 = t3772*t4245;
  t5429 = t3444*t5352;
  t5435 = t3751*t4245;
  t5457 = -1.*t3733*t4245;
  t5458 = -1.*t5352*t3479;
  t5482 = -1.*t5352*t3458;
  t5483 = -1.*t3772*t4245;
  t5505 = t3733*t4245;
  t5507 = t5352*t3479;
  t5744 = -1.*t1860*t5073;
  t5745 = -1.*t2651*t4072;
  t5757 = t2220*t5073;
  t5758 = t2758*t4072;
  t5774 = t1860*t5073;
  t5775 = t2651*t4072;
  t5786 = -1.*t4072*t2833;
  t5787 = -1.*t5073*t2379;
  t5797 = -1.*t2220*t5073;
  t5799 = -1.*t2758*t4072;
  t5811 = t4072*t2833;
  t5813 = t5073*t2379;
  t6051 = -1.*t2167*t4199;
  t6055 = -1.*t2155*t4190;
  t6057 = t5549 + t6051 + t6055;
  t6060 = t2313*t4199;
  t6061 = t2287*t4190;
  t6063 = t5576 + t6060 + t6061;
  t5836 = -1.*t1860*t5365;
  t5838 = -1.*t3173*t4072;
  t5844 = t5365*t2220;
  t5846 = t3279*t4072;
  t6103 = t2167*t4199;
  t6104 = t2155*t4190;
  t6105 = t5587 + t6103 + t6104;
  t5858 = t1860*t5365;
  t5860 = t3173*t4072;
  t5871 = -1.*t2986*t4072;
  t5872 = -1.*t5365*t2379;
  t6126 = -1.*t4199*t2402;
  t6128 = -1.*t4190*t2397;
  t6130 = t5610 + t6126 + t6128;
  t6158 = -1.*t2313*t4199;
  t6161 = -1.*t2287*t4190;
  t6162 = t5628 + t6158 + t6161;
  t5894 = -1.*t5365*t2220;
  t5896 = -1.*t3279*t4072;
  t5902 = t2986*t4072;
  t5908 = t5365*t2379;
  t6175 = t4199*t2402;
  t6178 = t4190*t2397;
  t6179 = t5657 + t6175 + t6178;
  t6338 = -1.*t2145*t4127;
  t6340 = -1.*t2098*t4184;
  t6342 = t6338 + t6340 + t5549;
  t6358 = t2254*t4127;
  t6359 = t2271*t4184;
  t6360 = t6358 + t6359 + t5576;
  t6380 = t2145*t4127;
  t6381 = t2098*t4184;
  t6382 = t6380 + t6381 + t5587;
  t6405 = -1.*t4127*t2386;
  t6406 = -1.*t4184*t2392;
  t6409 = t6405 + t6406 + t5610;
  t6424 = -1.*t2254*t4127;
  t6431 = -1.*t2271*t4184;
  t6432 = t6424 + t6431 + t5628;
  t6447 = t4127*t2386;
  t6448 = t4184*t2392;
  t6449 = t6447 + t6448 + t5657;
  t6586 = -1.*t3981*t1745;
  t6588 = -1.*t1595*t4022;
  t6590 = -1.*t1268*t4069;
  t6594 = t6586 + t6588 + t6590;
  t6603 = t3981*t3250;
  t6604 = t2195*t5300;
  t6605 = t5274*t2203;
  t6608 = t5316*t2218;
  t6610 = t3270*t4022;
  t6613 = t3261*t4069;
  t6614 = t6603 + t6604 + t6605 + t6608 + t6610 + t6613;
  t6617 = t3981*t2203;
  t6618 = t2195*t4022;
  t6621 = t2218*t4069;
  t6625 = t6617 + t6618 + t6621;
  t6630 = -1.*t1595*t5300;
  t6631 = -1.*t5274*t1745;
  t6632 = -1.*t3981*t3067;
  t6635 = -1.*t1268*t5316;
  t6636 = -1.*t3049*t4022;
  t6637 = -1.*t3168*t4069;
  t6638 = t6630 + t6631 + t6632 + t6635 + t6636 + t6637;
  t6665 = t3981*t1745;
  t6669 = t1595*t4022;
  t6674 = t1268*t4069;
  t6676 = t6665 + t6669 + t6674;
  t6678 = t1595*t5300;
  t6681 = t5274*t1745;
  t6682 = t3981*t3067;
  t6683 = t1268*t5316;
  t6684 = t3049*t4022;
  t6685 = t3168*t4069;
  t6686 = t6678 + t6681 + t6682 + t6683 + t6684 + t6685;
  t6689 = -1.*t2354*t5274;
  t6690 = -1.*t3981*t2974;
  t6691 = -1.*t2956*t4022;
  t6692 = -1.*t5300*t2366;
  t6694 = -1.*t2933*t4069;
  t6696 = -1.*t5316*t2377;
  t6697 = t6689 + t6690 + t6691 + t6692 + t6694 + t6696;
  t6699 = -1.*t3981*t2354;
  t6703 = -1.*t4022*t2366;
  t6706 = -1.*t4069*t2377;
  t6707 = t6699 + t6703 + t6706;
  t6745 = -1.*t3981*t3250;
  t6746 = -1.*t2195*t5300;
  t6747 = -1.*t5274*t2203;
  t6748 = -1.*t5316*t2218;
  t6749 = -1.*t3270*t4022;
  t6754 = -1.*t3261*t4069;
  t6756 = t6745 + t6746 + t6747 + t6748 + t6749 + t6754;
  t6762 = -1.*t3981*t2203;
  t6764 = -1.*t2195*t4022;
  t6765 = -1.*t2218*t4069;
  t6766 = t6762 + t6764 + t6765;
  t6770 = t2354*t5274;
  t6771 = t3981*t2974;
  t6773 = t2956*t4022;
  t6775 = t5300*t2366;
  t6777 = t2933*t4069;
  t6780 = t5316*t2377;
  t6781 = t6770 + t6771 + t6773 + t6775 + t6777 + t6780;
  t6783 = t3981*t2354;
  t6787 = t4022*t2366;
  t6788 = t4069*t2377;
  t6789 = t6783 + t6787 + t6788;
  p_output1[0]=t2180*var2[0] + t2343*var2[1] + t2408*var2[2];
  p_output1[1]=t21*t2428*var2[0] + t21*t2438*var2[1] + t21*t2443*var2[2];
  p_output1[2]=t21*t2454*var2[0] + t21*t2604*var2[1] + t21*t2635*var2[2];
  p_output1[3]=t2745*var2[0] + t2818*var2[1] + t2880*var2[2];
  p_output1[4]=t3245*var2[0] + t3409*var2[1] + t3040*var2[2];
  p_output1[5]=t3424;
  p_output1[6]=t3427;
  p_output1[7]=t3431;
  p_output1[8]=(-1.*t3433*t3444 - 1.*t2180*t3447)*var2[0] + (-1.*t2343*t3447 - 1.*t3433*t3458)*var2[1] + (-1.*t2408*t3447 - 1.*t3433*t3479)*var2[2];
  p_output1[9]=-1.*t3433*t3497*var2[0] - 1.*t3433*t3508*var2[1] - 1.*t3433*t3516*var2[2];
  p_output1[10]=(t1934*t2428*t3433 + t2172*t3447)*var2[0] + (t1934*t2438*t3433 + t2316*t3447)*var2[1] + (t1934*t2443*t3433 + t2404*t3447)*var2[2];
  p_output1[11]=(t1934*t2454*t3433 + t3447*t3584)*var2[0] + (t1934*t2604*t3433 + t3447*t3613)*var2[1] + (t1934*t2635*t3433 + t3447*t3646)*var2[2];
  p_output1[12]=(t3447*t3673 - 1.*t3433*t3680)*var2[0] + (t3447*t3697 - 1.*t3433*t3705)*var2[1] + (t3447*t3717 - 1.*t3433*t3722)*var2[2];
  p_output1[13]=(t3447*t3751 - 1.*t3433*t3758)*var2[0] + (t3447*t3772 - 1.*t3433*t3782)*var2[1] + (t3447*t3733 - 1.*t3433*t3740)*var2[2];
  p_output1[14]=t3798;
  p_output1[15]=t3803;
  p_output1[16]=t3808;
  p_output1[17]=t3798*var2[0] + t3803*var2[1] + t3808*var2[2];
  p_output1[18]=t3447*t3497*var2[0] + t3447*t3508*var2[1] + t3447*t3516*var2[2];
  p_output1[19]=(t2172*t3433 - 1.*t1934*t2428*t3447)*var2[0] + (t2316*t3433 - 1.*t1934*t2438*t3447)*var2[1] + (t2404*t3433 - 1.*t1934*t2443*t3447)*var2[2];
  p_output1[20]=(-1.*t1934*t2454*t3447 + t3433*t3584)*var2[0] + (-1.*t1934*t2604*t3447 + t3433*t3613)*var2[1] + (-1.*t1934*t2635*t3447 + t3433*t3646)*var2[2];
  p_output1[21]=(t3433*t3673 + t3447*t3680)*var2[0] + (t3433*t3697 + t3447*t3705)*var2[1] + (t3433*t3717 + t3447*t3722)*var2[2];
  p_output1[22]=(t3433*t3751 + t3447*t3758)*var2[0] + (t3433*t3772 + t3447*t3782)*var2[1] + (t3433*t3733 + t3447*t3740)*var2[2];
  p_output1[23]=t3433*t3444 + t2180*t3447;
  p_output1[24]=t2343*t3447 + t3433*t3458;
  p_output1[25]=t2408*t3447 + t3433*t3479;
  p_output1[26]=(t3431*(-1.*t2343*t4218 - 1.*t2343*t4224 - 1.*t3427*t4234 - 1.*t3508*t4234) + t3427*(t2408*t4218 + t2408*t4224 + t3431*t4234 + t3516*t4234) + t2408*t4378 + t2343*t4412)*var2[0] + (t3431*(t2180*t4218 + t2180*t4224 + t3424*t4234 + t3497*t4234) + t3424*(-1.*t2408*t4218 - 1.*t2408*t4224 - 1.*t3431*t4234 - 1.*t3516*t4234) + t2408*t4303 + t2180*t4330)*var2[1] + (t3427*(-1.*t2180*t4218 - 1.*t2180*t4224 - 1.*t3424*t4234 - 1.*t3497*t4234) + t3424*(t2343*t4218 + t2343*t4224 + t3427*t4234 + t3508*t4234) + t2343*t4253 + t2180*t4270)*var2[2];
  p_output1[27]=(t21*t2443*t4378 + t21*t2438*t4412 + t3431*(-1.*t21*t2438*t4224 + t1934*t2438*t4234 + t1934*t2343*t4442 - 1.*t21*t3427*t4442 + t4579 + t4589) + t3427*(t21*t2443*t4224 - 1.*t1934*t2443*t4234 - 1.*t1934*t2408*t4442 + t21*t3431*t4442 + t4606 + t4612))*var2[0] + (t21*t2443*t4303 + t21*t2428*t4330 + t3431*(t21*t2428*t4224 - 1.*t1934*t2428*t4234 - 1.*t1934*t2180*t4442 + t21*t3424*t4442 + t4515 + t4516) + t3424*(-1.*t21*t2443*t4224 + t1934*t2443*t4234 + t1934*t2408*t4442 - 1.*t21*t3431*t4442 + t4538 + t4540))*var2[1] + (t21*t2438*t4253 + t21*t2428*t4270 + t3427*(-1.*t21*t2428*t4224 + t1934*t2428*t4234 + t4430 + t4437 + t1934*t2180*t4442 - 1.*t21*t3424*t4442) + t3424*(t21*t2438*t4224 - 1.*t1934*t2438*t4234 - 1.*t1934*t2343*t4442 + t21*t3427*t4442 + t4467 + t4468))*var2[2];
  p_output1[28]=(t21*t2635*t4378 + t21*t2604*t4412 + t3431*(-1.*t21*t2604*t4224 + t1934*t2604*t4234 + t1934*t2343*t4660 - 1.*t21*t3427*t4660 + t4866 + t4889) + t3427*(t21*t2635*t4224 - 1.*t1934*t2635*t4234 - 1.*t1934*t2408*t4660 + t21*t3431*t4660 + t4922 + t4924))*var2[0] + (t21*t2635*t4303 + t21*t2454*t4330 + t3431*(t21*t2454*t4224 - 1.*t1934*t2454*t4234 - 1.*t1934*t2180*t4660 + t21*t3424*t4660 + t4758 + t4761) + t3424*(-1.*t21*t2635*t4224 + t1934*t2635*t4234 + t1934*t2408*t4660 - 1.*t21*t3431*t4660 + t4802 + t4807))*var2[1] + (t21*t2604*t4253 + t21*t2454*t4270 + t3427*(-1.*t21*t2454*t4224 + t1934*t2454*t4234 + t4654 + t4655 + t1934*t2180*t4660 - 1.*t21*t3424*t4660) + t3424*(t21*t2604*t4224 - 1.*t1934*t2604*t4234 - 1.*t1934*t2343*t4660 + t21*t3427*t4660 + t4679 + t4688))*var2[2];
  p_output1[29]=(t2880*t4378 + t2818*t4412 + t3431*(-1.*t2818*t4224 - 1.*t3705*t4234 - 1.*t3427*t5092 - 1.*t2343*t5100 + t5195 + t5200) + t3427*(t2880*t4224 + t3722*t4234 + t3431*t5092 + t2408*t5100 + t5222 + t5227))*var2[0] + (t2880*t4303 + t2745*t4330 + t3431*(t2745*t4224 + t3680*t4234 + t3424*t5092 + t2180*t5100 + t5137 + t5140) + t3424*(-1.*t2880*t4224 - 1.*t3722*t4234 - 1.*t3431*t5092 - 1.*t2408*t5100 + t5164 + t5165))*var2[1] + (t2818*t4253 + t2745*t4270 + t3427*(-1.*t2745*t4224 - 1.*t3680*t4234 + t4955 + t5044 - 1.*t3424*t5092 - 1.*t2180*t5100) + t3424*(t2818*t4224 + t3705*t4234 + t3427*t5092 + t2343*t5100 + t5113 + t5115))*var2[2];
  p_output1[30]=(t3040*t4378 + t3409*t4412 + t3431*(-1.*t3409*t4224 - 1.*t3782*t4234 - 1.*t3427*t5378 - 1.*t2343*t5384 + t5482 + t5483) + t3427*(t3040*t4224 + t3740*t4234 + t3431*t5378 + t2408*t5384 + t5505 + t5507))*var2[0] + (t3040*t4303 + t3245*t4330 + t3431*(t3245*t4224 + t3758*t4234 + t3424*t5378 + t2180*t5384 + t5429 + t5435) + t3424*(-1.*t3040*t4224 - 1.*t3740*t4234 - 1.*t3431*t5378 - 1.*t2408*t5384 + t5457 + t5458))*var2[1] + (t3409*t4253 + t3245*t4270 + t3427*(-1.*t3245*t4224 - 1.*t3758*t4234 + t5353 + t5355 - 1.*t3424*t5378 - 1.*t2180*t5384) + t3424*(t3409*t4224 + t3782*t4234 + t3427*t5378 + t2343*t5384 + t5399 + t5401))*var2[2];
  p_output1[31]=t3431*t4378 + t3427*t4412;
  p_output1[32]=t3431*t4303 + t3424*t4330;
  p_output1[33]=t3427*t4253 + t3424*t4270;
  p_output1[34]=(t3479*(-1.*t2438*t4212 - 1.*t2316*t4442 + t4579 + t4589) + t3458*(t2443*t4212 + t2404*t4442 + t4606 + t4612) + t2404*t5632 + t2316*t5661)*var2[0] + (t3479*(t2428*t4212 + t2172*t4442 + t4515 + t4516) + t3444*(-1.*t2443*t4212 - 1.*t2404*t4442 + t4538 + t4540) + t2404*t5591 + t2172*t5614)*var2[1] + (t3458*(-1.*t2428*t4212 + t4430 + t4437 - 1.*t2172*t4442) + t3444*(t2438*t4212 + t2316*t4442 + t4467 + t4468) + t2316*t5555 + t2172*t5581)*var2[2];
  p_output1[35]=(t3479*(-1.*t2604*t4212 - 1.*t2316*t4660 + t4866 + t4889) + t3458*(t2635*t4212 + t2404*t4660 + t4922 + t4924) + t3646*t5632 + t3613*t5661)*var2[0] + (t3479*(t2454*t4212 + t2172*t4660 + t4758 + t4761) + t3444*(-1.*t2635*t4212 - 1.*t2404*t4660 + t4802 + t4807) + t3646*t5591 + t3584*t5614)*var2[1] + (t3458*(-1.*t2454*t4212 + t4654 + t4655 - 1.*t2172*t4660) + t3444*(t2604*t4212 + t2316*t4660 + t4679 + t4688) + t3613*t5555 + t3584*t5581)*var2[2];
  p_output1[36]=(t3717*t5632 + t3697*t5661 + t3479*(-1.*t2809*t4212 - 1.*t2316*t5088 + t5195 + t5200 + t5797 + t5799) + t3458*(t2874*t4212 + t2404*t5088 + t5222 + t5227 + t5811 + t5813))*var2[0] + (t3717*t5591 + t3673*t5614 + t3479*(t2741*t4212 + t2172*t5088 + t5137 + t5140 + t5774 + t5775) + t3444*(-1.*t2874*t4212 - 1.*t2404*t5088 + t5164 + t5165 + t5786 + t5787))*var2[1] + (t3697*t5555 + t3673*t5581 + t3458*(-1.*t2741*t4212 + t4955 + t5044 - 1.*t2172*t5088 + t5744 + t5745) + t3444*(t2809*t4212 + t2316*t5088 + t5113 + t5115 + t5757 + t5758))*var2[2];
  p_output1[37]=(t3733*t5632 + t3772*t5661 + t3479*(-1.*t3404*t4212 - 1.*t2316*t5375 + t5482 + t5483 + t5894 + t5896) + t3458*(t3037*t4212 + t2404*t5375 + t5505 + t5507 + t5902 + t5908))*var2[0] + (t3733*t5591 + t3751*t5614 + t3479*(t3234*t4212 + t2172*t5375 + t5429 + t5435 + t5858 + t5860) + t3444*(-1.*t3037*t4212 - 1.*t2404*t5375 + t5457 + t5458 + t5871 + t5872))*var2[1] + (t3772*t5555 + t3751*t5581 + t3458*(-1.*t3234*t4212 + t5353 + t5355 - 1.*t2172*t5375 + t5836 + t5838) + t3444*(t3404*t4212 + t2316*t5375 + t5399 + t5401 + t5844 + t5846))*var2[2];
  p_output1[38]=t3479*t5632 + t3458*t5661;
  p_output1[39]=t3479*t5591 + t3444*t5614;
  p_output1[40]=t3458*t5555 + t3444*t5581;
  p_output1[41]=(t2379*(-1.*t2582*t4190 - 1.*t2287*t4199 - 1.*t2313*t4632 - 1.*t2287*t4645) + t2220*(t2626*t4190 + t2397*t4199 + t2402*t4632 + t2397*t4645))*var2[0] + (t2379*(t2451*t4190 + t2155*t4199 + t2167*t4632 + t2155*t4645) + t1860*(-1.*t2626*t4190 - 1.*t2397*t4199 - 1.*t2402*t4632 - 1.*t2397*t4645))*var2[1] + (t2220*(-1.*t2451*t4190 - 1.*t2155*t4199 - 1.*t2167*t4632 - 1.*t2155*t4645) + t1860*(t2582*t4190 + t2287*t4199 + t2313*t4632 + t2287*t4645))*var2[2];
  p_output1[42]=(t2379*(-1.*t2795*t4190 - 1.*t2801*t4199 - 1.*t2313*t5028 - 1.*t2287*t5034 + t5797 + t5799) + t2220*(t2860*t4190 + t2872*t4199 + t2402*t5028 + t2397*t5034 + t5811 + t5813) + t2833*t6162 + t2758*t6179)*var2[0] + (t2379*(t2717*t4190 + t2739*t4199 + t2167*t5028 + t2155*t5034 + t5774 + t5775) + t1860*(-1.*t2860*t4190 - 1.*t2872*t4199 - 1.*t2402*t5028 - 1.*t2397*t5034 + t5786 + t5787) + t2833*t6105 + t2651*t6130)*var2[1] + (t2220*(-1.*t2717*t4190 - 1.*t2739*t4199 - 1.*t2167*t5028 - 1.*t2155*t5034 + t5744 + t5745) + t1860*(t2795*t4190 + t2801*t4199 + t2313*t5028 + t2287*t5034 + t5757 + t5758) + t2758*t6057 + t2651*t6063)*var2[2];
  p_output1[43]=(t2379*(-1.*t3314*t4190 - 1.*t3396*t4199 - 1.*t2313*t5338 - 1.*t2287*t5345 + t5894 + t5896) + t2220*(t3019*t4190 + t3032*t4199 + t2402*t5338 + t2397*t5345 + t5902 + t5908) + t2986*t6162 + t3279*t6179)*var2[0] + (t2379*(t3211*t4190 + t3230*t4199 + t2167*t5338 + t2155*t5345 + t5858 + t5860) + t1860*(-1.*t3019*t4190 - 1.*t3032*t4199 - 1.*t2402*t5338 - 1.*t2397*t5345 + t5871 + t5872) + t2986*t6105 + t3173*t6130)*var2[1] + (t2220*(-1.*t3211*t4190 - 1.*t3230*t4199 - 1.*t2167*t5338 - 1.*t2155*t5345 + t5836 + t5838) + t1860*(t3314*t4190 + t3396*t4199 + t2313*t5338 + t2287*t5345 + t5844 + t5846) + t3279*t6057 + t3173*t6063)*var2[2];
  p_output1[44]=t2379*t6162 + t2220*t6179;
  p_output1[45]=t2379*t6105 + t1860*t6130;
  p_output1[46]=t2220*t6057 + t1860*t6063;
  p_output1[47]=(-0.15121*t2686 + 0.15121*t2713 + t2379*(-1.*t2791*t4127 - 1.*t2781*t4184 - 1.*t2271*t4981 - 1.*t2254*t5020 + t5797 + t5799) + t2220*(t2857*t4127 + t2843*t4184 + t2392*t4981 + t2386*t5020 + t5811 + t5813) + t2833*t6432 + t2758*t6449)*var2[0] + (0.15121*t2781 - 0.15121*t2791 + t2379*(t2686*t4127 + t2713*t4184 + t2098*t4981 + t2145*t5020 + t5774 + t5775) + t1860*(-1.*t2857*t4127 - 1.*t2843*t4184 - 1.*t2392*t4981 - 1.*t2386*t5020 + t5786 + t5787) + t2833*t6382 + t2651*t6409)*var2[1] + (0.15121*t2843 - 0.15121*t2857 + t2220*(-1.*t2686*t4127 - 1.*t2713*t4184 - 1.*t2098*t4981 - 1.*t2145*t5020 + t5744 + t5745) + t1860*(t2791*t4127 + t2781*t4184 + t2271*t4981 + t2254*t5020 + t5757 + t5758) + t2758*t6342 + t2651*t6360)*var2[2];
  p_output1[48]=(-0.15121*t3185 + 0.15121*t3206 + t2379*(-1.*t3288*t4127 - 1.*t3311*t4184 - 1.*t2254*t5319 - 1.*t2271*t5330 + t5894 + t5896) + t2220*(t3017*t4127 + t3000*t4184 + t2386*t5319 + t2392*t5330 + t5902 + t5908) + t2986*t6432 + t3279*t6449)*var2[0] + (-0.15121*t3288 + 0.15121*t3311 + t2379*(t3185*t4127 + t3206*t4184 + t2145*t5319 + t2098*t5330 + t5858 + t5860) + t1860*(-1.*t3017*t4127 - 1.*t3000*t4184 - 1.*t2386*t5319 - 1.*t2392*t5330 + t5871 + t5872) + t2986*t6382 + t3173*t6409)*var2[1] + (0.15121*t3000 - 0.15121*t3017 + t2220*(-1.*t3185*t4127 - 1.*t3206*t4184 - 1.*t2145*t5319 - 1.*t2098*t5330 + t5836 + t5838) + t1860*(t3288*t4127 + t3311*t4184 + t2254*t5319 + t2271*t5330 + t5844 + t5846) + t3279*t6342 + t3173*t6360)*var2[2];
  p_output1[49]=0.15121*t2098 - 0.15121*t2145 + t2379*t6432 + t2220*t6449;
  p_output1[50]=-0.15121*t2254 + 0.15121*t2271 + t2379*t6382 + t1860*t6409;
  p_output1[51]=-0.15121*t2386 + 0.15121*t2392 + t2220*t6342 + t1860*t6360;
  p_output1[52]=(1.e-6*(-7.000000000455e-6*t1164 + t2887) + 0.281211*t3049 - 0.038749*t3168 - 1.*t2354*t6756 - 1.*t2974*t6766 - 1.*t2203*t6781 - 1.*t3250*t6789 + 7.e-6*(t2377*t6756 + t2933*t6766 + t2218*t6781 + t3261*t6789) + 4.e-6*(-1.*t2366*t6756 - 1.*t2956*t6766 - 1.*t2195*t6781 - 1.*t3270*t6789))*var2[0] + (1.e-6*(4.00000000026e-6*t1164 + t2935) - 0.038749*t3261 + 0.281211*t3270 - 1.*t2974*t6676 - 1.*t2354*t6686 - 1.*t1745*t6697 - 1.*t3067*t6707 + 4.e-6*(-1.*t2956*t6676 - 1.*t2366*t6686 - 1.*t1595*t6697 - 1.*t3049*t6707) + 7.e-6*(t2933*t6676 + t2377*t6686 + t1268*t6697 + t3168*t6707))*var2[1] + (-0.038749*t2933 + 0.281211*t2956 + 1.e-6*(-6.5e-11*t1164 - 7.e-6*t2962 + 4.e-6*t5267) - 1.*t3250*t6594 - 1.*t1745*t6614 - 1.*t3067*t6625 - 1.*t2203*t6638 + 4.e-6*(-1.*t3270*t6594 - 1.*t1595*t6614 - 1.*t3049*t6625 - 1.*t2195*t6638) + 7.e-6*(t3261*t6594 + t1268*t6614 + t3168*t6625 + t2218*t6638))*var2[2];
  p_output1[53]=-0.038749*t1268 + 0.281211*t1595 + 1.e-6*(t1053 + 7.e-6*t1677 + t2346) - 1.*t2354*t6766 - 1.*t2203*t6789 + 4.e-6*(-1.*t2366*t6766 - 1.*t2195*t6789) + 7.e-6*(t2377*t6766 + t2218*t6789);
  p_output1[54]=0.281211*t2195 - 0.038749*t2218 + 1.e-6*(t1449 + 4.e-6*(-1. + t2345) + t2359) - 1.*t2354*t6676 - 1.*t1745*t6707 + 7.e-6*(t2377*t6676 + t1268*t6707) + 4.e-6*(-1.*t2366*t6676 - 1.*t1595*t6707);
  p_output1[55]=0.281211*t2366 - 0.038749*t2377 + 1.e-6*(1. + t1675 - 7.e-6*t2347 + 4.e-6*t3964) - 1.*t2203*t6594 - 1.*t1745*t6625 + 7.e-6*(t2218*t6594 + t1268*t6625) + 4.e-6*(-1.*t2195*t6594 - 1.*t1595*t6625);
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_DiagonalStance2.hh"

namespace DiagonalStance2
{

void J_fRrFoot_vec_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
