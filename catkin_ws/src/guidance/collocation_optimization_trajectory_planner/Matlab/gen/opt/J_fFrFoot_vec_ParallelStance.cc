/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:04 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t806;
  double t592;
  double t955;
  double t895;
  double t911;
  double t944;
  double t956;
  double t958;
  double t621;
  double t782;
  double t972;
  double t974;
  double t979;
  double t1173;
  double t1167;
  double t1038;
  double t1053;
  double t1057;
  double t1058;
  double t1070;
  double t1098;
  double t1126;
  double t1176;
  double t1180;
  double t1186;
  double t1022;
  double t1320;
  double t1032;
  double t1033;
  double t1316;
  double t1317;
  double t1318;
  double t1325;
  double t1331;
  double t1338;
  double t1344;
  double t1350;
  double t1354;
  double t1362;
  double t1367;
  double t1372;
  double t1373;
  double t1386;
  double t1388;
  double t1389;
  double t1391;
  double t1396;
  double t1404;
  double t1409;
  double t1411;
  double t1412;
  double t1415;
  double t1217;
  double t1439;
  double t1444;
  double t1445;
  double t1447;
  double t1448;
  double t1452;
  double t1465;
  double t1468;
  double t1481;
  double t1487;
  double t1489;
  double t1496;
  double t1499;
  double t1514;
  double t1515;
  double t1523;
  double t1198;
  double t1214;
  double t1216;
  double t1159;
  double t1191;
  double t1194;
  double t1430;
  double t1431;
  double t1432;
  double t1395;
  double t1422;
  double t1423;
  double t1529;
  double t1542;
  double t1549;
  double t1497;
  double t1524;
  double t1527;
  double t1604;
  double t1724;
  double t1725;
  double t1726;
  double t1735;
  double t1739;
  double t1740;
  double t1787;
  double t1790;
  double t1793;
  double t1796;
  double t1798;
  double t1799;
  double t1802;
  double t1805;
  double t1857;
  double t1858;
  double t1862;
  double t1863;
  double t1872;
  double t1873;
  double t1878;
  double t1881;
  double t1916;
  double t1917;
  double t1921;
  double t1923;
  double t1930;
  double t1933;
  double t1934;
  double t1935;
  double t1942;
  double t1943;
  double t1945;
  double t1947;
  double t1953;
  double t1954;
  double t1956;
  double t1957;
  double t1995;
  double t1996;
  double t2001;
  double t2009;
  double t2010;
  double t2013;
  double t2014;
  double t2016;
  double t2020;
  double t2022;
  double t2023;
  double t1446;
  double t1450;
  double t1472;
  double t1474;
  double t1528;
  double t1552;
  double t1565;
  double t1335;
  double t1366;
  double t1375;
  double t1378;
  double t1428;
  double t1433;
  double t1434;
  double t968;
  double t993;
  double t1009;
  double t1197;
  double t1238;
  double t1246;
  double t1025;
  double t1274;
  double t1295;
  double t2093;
  double t2107;
  double t1385;
  double t1435;
  double t1477;
  double t1567;
  double t1601;
  double t1605;
  double t1615;
  double t1616;
  double t1618;
  double t1620;
  double t1622;
  double t1626;
  double t1641;
  double t1647;
  double t1651;
  double t1652;
  double t1654;
  double t1658;
  double t1659;
  double t1664;
  double t1667;
  double t1670;
  double t1675;
  double t1682;
  double t1698;
  double t1699;
  double t1700;
  double t1704;
  double t1709;
  double t1710;
  double t1712;
  double t1752;
  double t1758;
  double t1763;
  double t1732;
  double t1741;
  double t1743;
  double t1748;
  double t1768;
  double t1769;
  double t1821;
  double t1829;
  double t1830;
  double t1797;
  double t1809;
  double t1816;
  double t1776;
  double t1777;
  double t1820;
  double t1832;
  double t1839;
  double t1890;
  double t1894;
  double t1899;
  double t1868;
  double t1882;
  double t1883;
  double t1846;
  double t1851;
  double t1888;
  double t1901;
  double t1903;
  double t1966;
  double t1967;
  double t1973;
  double t1951;
  double t1958;
  double t1963;
  double t1918;
  double t1932;
  double t1936;
  double t1938;
  double t1965;
  double t1975;
  double t1982;
  double t2038;
  double t2039;
  double t2050;
  double t2015;
  double t2028;
  double t2036;
  double t1989;
  double t1997;
  double t2002;
  double t2003;
  double t2037;
  double t2051;
  double t2056;
  double t2151;
  double t2153;
  double t2156;
  double t2158;
  double t2135;
  double t2136;
  double t2142;
  double t2146;
  double t2096;
  double t2097;
  double t2103;
  double t2456;
  double t2458;
  double t2459;
  double t2452;
  double t2454;
  double t2448;
  double t2449;
  double t2179;
  double t2180;
  double t2181;
  double t2191;
  double t2194;
  double t2195;
  double t2208;
  double t2210;
  double t2212;
  double t2236;
  double t2247;
  double t2270;
  double t2282;
  double t2296;
  double t2297;
  double t2299;
  double t2317;
  double t2318;
  double t2321;
  double t2332;
  double t2334;
  double t2335;
  double t2343;
  double t2347;
  double t2348;
  double t2355;
  double t2356;
  double t2357;
  double t2360;
  double t2368;
  double t2377;
  double t2381;
  double t2382;
  double t2385;
  double t2388;
  double t2390;
  double t2391;
  double t2398;
  double t2403;
  double t2404;
  double t2406;
  double t2407;
  double t2412;
  double t2416;
  double t2417;
  double t2421;
  double t2424;
  double t2427;
  double t2434;
  double t2081;
  double t2084;
  double t2085;
  double t2650;
  double t2651;
  double t2655;
  double t2658;
  double t2659;
  double t2663;
  double t2664;
  double t2669;
  double t2673;
  double t2682;
  double t2685;
  double t2690;
  double t2691;
  double t2702;
  double t2703;
  double t2707;
  double t2708;
  double t2722;
  double t2726;
  double t2730;
  double t2731;
  double t2732;
  double t2734;
  double t2735;
  double t2740;
  double t2741;
  double t2742;
  double t2747;
  double t2755;
  double t2756;
  double t2759;
  double t2763;
  double t2772;
  double t2773;
  double t2632;
  double t2634;
  double t2640;
  double t2641;
  double t2665;
  double t2686;
  double t2714;
  double t2720;
  double t2727;
  double t2753;
  double t2774;
  double t2775;
  double t2777;
  double t2780;
  double t2788;
  double t2789;
  double t2790;
  double t2793;
  double t2796;
  double t2087;
  double t2088;
  double t2091;
  double t2819;
  double t2827;
  double t1436;
  double t2809;
  double t2814;
  double t2816;
  double t2838;
  double t2721;
  double t2798;
  double t2799;
  double t2833;
  double t2847;
  double t2848;
  double t2852;
  double t2072;
  double t2074;
  double t2078;
  double t1572;
  double t3018;
  double t3022;
  double t3023;
  double t3016;
  double t2853;
  double t2862;
  double t2864;
  double t2872;
  double t2899;
  double t2901;
  double t2903;
  double t2904;
  double t2925;
  double t2926;
  double t2928;
  double t2931;
  double t2944;
  double t2946;
  double t2948;
  double t2950;
  double t2975;
  double t2976;
  double t2977;
  double t2978;
  double t3001;
  double t3002;
  double t3003;
  double t3005;
  double t3168;
  double t3176;
  double t3177;
  double t3178;
  double t3180;
  double t3170;
  double t3191;
  double t3195;
  double t3196;
  double t3175;
  double t3181;
  double t3182;
  double t1782;
  double t1841;
  double t1842;
  double t1722;
  double t1770;
  double t1772;
  double t3319;
  double t3320;
  double t3321;
  double t3322;
  double t3325;
  double t3326;
  double t3328;
  double t3330;
  double t3331;
  double t3332;
  double t3333;
  double t3334;
  double t3340;
  double t3341;
  double t3342;
  double t3327;
  double t3335;
  double t3337;
  double t3356;
  double t3357;
  double t3358;
  double t3367;
  double t3370;
  double t3371;
  double t3339;
  double t3343;
  double t3350;
  double t3362;
  double t3374;
  double t3376;
  double t3383;
  double t3389;
  double t3392;
  double t1852;
  double t1908;
  double t1909;
  double t3525;
  double t3530;
  double t3531;
  double t3534;
  double t3537;
  double t3538;
  double t3542;
  double t3543;
  double t3533;
  double t3541;
  double t3545;
  double t3547;
  double t3550;
  double t3551;
  double t3554;
  double t3555;
  double t3562;
  double t3565;
  double t3566;
  double t3549;
  double t3559;
  double t3560;
  double t3573;
  double t3574;
  double t3581;
  double t3583;
  double t3587;
  double t3588;
  double t3592;
  double t1939;
  double t1984;
  double t1986;
  double t3561;
  double t3568;
  double t3569;
  double t3586;
  double t3594;
  double t3597;
  double t3600;
  double t3601;
  double t3604;
  double t2006;
  double t2059;
  double t2067;
  double t3015;
  double t3017;
  double t3038;
  double t3042;
  double t3078;
  double t3083;
  double t3100;
  double t3102;
  double t3119;
  double t3122;
  double t3133;
  double t3135;
  double t3165;
  double t3188;
  double t3766;
  double t3767;
  double t3769;
  double t3209;
  double t3211;
  double t3785;
  double t3786;
  double t3787;
  double t3235;
  double t3240;
  double t3811;
  double t3812;
  double t3813;
  double t3253;
  double t3255;
  double t3825;
  double t3827;
  double t3831;
  double t3276;
  double t3277;
  double t3858;
  double t3860;
  double t3862;
  double t3298;
  double t3299;
  double t3876;
  double t3877;
  double t3878;
  double t3316;
  double t3352;
  double t3406;
  double t3408;
  double t3421;
  double t3424;
  double t3441;
  double t3443;
  double t3468;
  double t3473;
  double t3491;
  double t3497;
  double t3571;
  double t3613;
  double t3615;
  double t3637;
  double t3652;
  double t3657;
  double t3674;
  double t3677;
  double t3710;
  double t3711;
  double t4017;
  double t4022;
  double t4007;
  double t4011;
  double t4084;
  double t4085;
  double t4067;
  double t4069;
  double t4045;
  double t4047;
  double t4035;
  double t4037;
  double t4110;
  double t4112;
  double t4412;
  double t4413;
  double t4414;
  double t4101;
  double t4140;
  double t4143;
  double t4457;
  double t4458;
  double t4464;
  double t4128;
  double t4494;
  double t4495;
  double t4498;
  double t4534;
  double t4538;
  double t4539;
  double t4196;
  double t4200;
  double t4177;
  double t4185;
  double t4358;
  double t4360;
  double t4362;
  double t4424;
  double t4425;
  double t4426;
  double t4738;
  double t4966;
  double t4969;
  double t4970;
  double t4971;
  double t4813;
  double t4817;
  double t4819;
  double t4820;
  double t4853;
  double t4854;
  double t4860;
  double t4863;
  double t4901;
  double t4903;
  double t4915;
  double t4916;
  double t4924;
  double t4926;
  double t4928;
  double t4933;
  double t4737;
  double t4740;
  double t4742;
  double t4743;
  double t5166;
  double t5172;
  double t5180;
  double t5182;
  double t5185;
  double t5188;
  double t5191;
  double t5202;
  double t5205;
  double t5207;
  double t5193;
  double t5194;
  double t5196;
  double t5277;
  double t5278;
  double t5281;
  double t5283;
  double t5284;
  double t5287;
  double t5291;
  double t5245;
  double t5251;
  double t5253;
  double t5255;
  double t5259;
  double t5261;
  double t5268;
  double t5235;
  double t5237;
  double t5239;
  double t5240;
  double t5223;
  double t5224;
  double t5225;
  double t5227;
  double t5311;
  double t5312;
  double t5323;
  double t5325;
  double t5326;
  double t5327;
  double t5329;
  double t5338;
  double t5339;
  double t5340;
  double t5332;
  double t5334;
  double t5335;
  double t5368;
  double t5369;
  double t5375;
  double t5381;
  double t5419;
  double t5424;
  double t5428;
  double t5429;
  t806 = Cos(var1[11]);
  t592 = Cos(var1[10]);
  t955 = -1. + t806;
  t895 = -1.*t806;
  t911 = 1. + t895;
  t944 = 1.6e-11*t911;
  t956 = 1.6e-11*t955;
  t958 = -1. + t944 + t956;
  t621 = -1.*t592;
  t782 = 1. + t621;
  t972 = 4.e-6*t955;
  t974 = -4.e-6*t806;
  t979 = t972 + t974;
  t1173 = Sin(var1[10]);
  t1167 = Cos(var1[9]);
  t1038 = -1. + t592;
  t1053 = 1.6e-11*t1038;
  t1057 = 1. + t1053;
  t1058 = t1057*t958;
  t1070 = 4.e-6*t782*t979;
  t1098 = t1058 + t1070;
  t1126 = Sin(var1[9]);
  t1176 = 4.e-6*t958*t1173;
  t1180 = -1.*t979*t1173;
  t1186 = t1176 + t1180;
  t1022 = Cos(var1[4]);
  t1320 = Sin(var1[11]);
  t1032 = Sin(var1[4]);
  t1033 = Cos(var1[5]);
  t1316 = -1.000000000016*t911;
  t1317 = 1. + t1316;
  t1318 = 0.004352*t1317;
  t1325 = -0.9999910000159999*t1320;
  t1331 = t1318 + t1325;
  t1338 = -1. + t944;
  t1344 = 4.e-6*t1338;
  t1350 = 3.999964e-6*t911;
  t1354 = -1.7408e-8*t1320;
  t1362 = t1344 + t1350 + t1354;
  t1367 = 0.999991*t806;
  t1372 = 0.004352*t1320;
  t1373 = t956 + t1367 + t1372;
  t1386 = -4.e-6*t1173*t1331;
  t1388 = t1057*t1362;
  t1389 = 4.e-6*t782*t1373;
  t1391 = 0. + t1386 + t1388 + t1389;
  t1396 = -1.000000000016*t782;
  t1404 = 1. + t1396;
  t1409 = t1404*t1331;
  t1411 = 4.e-6*t1173*t1362;
  t1412 = -1.*t1173*t1373;
  t1415 = 0. + t1409 + t1411 + t1412;
  t1217 = Sin(var1[5]);
  t1439 = -1.7408e-8*t911;
  t1444 = -3.999964e-6*t1320;
  t1445 = t1439 + t1444;
  t1447 = 0.999991*t1317;
  t1448 = t1447 + t1372;
  t1452 = -0.004352*t806;
  t1465 = 0.999991*t1320;
  t1468 = t1452 + t1465;
  t1481 = t1057*t1445;
  t1487 = -4.e-6*t1173*t1448;
  t1489 = 4.e-6*t782*t1468;
  t1496 = 0. + t1481 + t1487 + t1489;
  t1499 = 4.e-6*t1173*t1445;
  t1514 = t1404*t1448;
  t1515 = -1.*t1173*t1468;
  t1523 = 0. + t1499 + t1514 + t1515;
  t1198 = t1167*t1098;
  t1214 = t1126*t1186;
  t1216 = t1198 + t1214;
  t1159 = -1.*t1098*t1126;
  t1191 = t1167*t1186;
  t1194 = t1159 + t1191;
  t1430 = t1167*t1391;
  t1431 = t1126*t1415;
  t1432 = 0. + t1430 + t1431;
  t1395 = -1.*t1126*t1391;
  t1422 = t1167*t1415;
  t1423 = 0. + t1395 + t1422;
  t1529 = t1167*t1496;
  t1542 = t1126*t1523;
  t1549 = 0. + t1529 + t1542;
  t1497 = -1.*t1126*t1496;
  t1524 = t1167*t1523;
  t1527 = 0. + t1497 + t1524;
  t1604 = -1.*t1194*t1217;
  t1724 = 4.e-6*t592*t958;
  t1725 = -1.*t592*t979;
  t1726 = t1724 + t1725;
  t1735 = -1.6e-11*t958*t1173;
  t1739 = 4.e-6*t979*t1173;
  t1740 = t1735 + t1739;
  t1787 = -1.000000000016*t1173*t1331;
  t1790 = 4.e-6*t592*t1362;
  t1793 = -1.*t592*t1373;
  t1796 = t1787 + t1790 + t1793;
  t1798 = -4.e-6*t592*t1331;
  t1799 = -1.6e-11*t1173*t1362;
  t1802 = 4.e-6*t1173*t1373;
  t1805 = t1798 + t1799 + t1802;
  t1857 = 4.e-6*t592*t1445;
  t1858 = -1.000000000016*t1173*t1448;
  t1862 = -1.*t592*t1468;
  t1863 = t1857 + t1858 + t1862;
  t1872 = -1.6e-11*t1173*t1445;
  t1873 = -4.e-6*t592*t1448;
  t1878 = 4.e-6*t1173*t1468;
  t1881 = t1872 + t1873 + t1878;
  t1916 = 0.004352*t806;
  t1917 = t1916 + t1325;
  t1921 = -0.9999910000159999*t806;
  t1923 = -0.00435200000006963*t1320;
  t1930 = t1921 + t1923;
  t1933 = -1.7408e-8*t806;
  t1934 = 3.999964000064e-6*t1320;
  t1935 = t1933 + t1934;
  t1942 = 4.e-6*t782*t1917;
  t1943 = -4.e-6*t1173*t1930;
  t1945 = t1057*t1935;
  t1947 = t1942 + t1943 + t1945;
  t1953 = -1.*t1173*t1917;
  t1954 = t1404*t1930;
  t1956 = 4.e-6*t1173*t1935;
  t1957 = t1953 + t1954 + t1956;
  t1995 = -3.999964e-6*t806;
  t1996 = t1995 + t1354;
  t2001 = t1367 + t1372;
  t2009 = -4.e-6*t1173*t1917;
  t2010 = t1057*t1996;
  t2013 = 4.e-6*t782*t2001;
  t2014 = t2009 + t2010 + t2013;
  t2016 = t1404*t1917;
  t2020 = 4.e-6*t1173*t1996;
  t2022 = -1.*t1173*t2001;
  t2023 = t2016 + t2020 + t2022;
  t1446 = 4.e-6*t782*t1445;
  t1450 = t1173*t1448;
  t1472 = t592*t1468;
  t1474 = 0. + t1446 + t1450 + t1472;
  t1528 = t1033*t1527;
  t1552 = -1.*t1549*t1217;
  t1565 = 0. + t1528 + t1552;
  t1335 = t1173*t1331;
  t1366 = 4.e-6*t782*t1362;
  t1375 = t592*t1373;
  t1378 = 0. + t1335 + t1366 + t1375;
  t1428 = t1033*t1423;
  t1433 = -1.*t1432*t1217;
  t1434 = 0. + t1428 + t1433;
  t968 = 4.e-6*t782*t958;
  t993 = t592*t979;
  t1009 = t968 + t993;
  t1197 = t1033*t1194;
  t1238 = -1.*t1216*t1217;
  t1246 = t1197 + t1238;
  t1025 = t1009*t1022;
  t1274 = -1.*t1032*t1246;
  t1295 = t1025 + t1274;
  t2093 = Sin(var1[3]);
  t2107 = Cos(var1[3]);
  t1385 = t1022*t1378;
  t1435 = -1.*t1032*t1434;
  t1477 = t1022*t1474;
  t1567 = -1.*t1032*t1565;
  t1601 = -1.*t1033*t1216;
  t1605 = t1601 + t1604;
  t1615 = -1.*t1033*t1432;
  t1616 = -1.*t1423*t1217;
  t1618 = t1615 + t1616;
  t1620 = -1.*t1033*t1549;
  t1622 = -1.*t1527*t1217;
  t1626 = t1620 + t1622;
  t1641 = -1.*t1167*t1098;
  t1647 = -1.*t1126*t1186;
  t1651 = t1641 + t1647;
  t1652 = t1033*t1651;
  t1654 = t1652 + t1604;
  t1658 = -1.*t1167*t1391;
  t1659 = -1.*t1126*t1415;
  t1664 = t1658 + t1659;
  t1667 = t1033*t1664;
  t1670 = t1395 + t1422;
  t1675 = -1.*t1670*t1217;
  t1682 = t1667 + t1675;
  t1698 = -1.*t1167*t1496;
  t1699 = -1.*t1126*t1523;
  t1700 = t1698 + t1699;
  t1704 = t1033*t1700;
  t1709 = t1497 + t1524;
  t1710 = -1.*t1709*t1217;
  t1712 = t1704 + t1710;
  t1752 = t1726*t1126;
  t1758 = t1167*t1740;
  t1763 = t1752 + t1758;
  t1732 = t1167*t1726;
  t1741 = -1.*t1126*t1740;
  t1743 = t1732 + t1741;
  t1748 = t1033*t1743;
  t1768 = -1.*t1763*t1217;
  t1769 = t1748 + t1768;
  t1821 = t1126*t1796;
  t1829 = t1167*t1805;
  t1830 = t1821 + t1829;
  t1797 = t1167*t1796;
  t1809 = -1.*t1126*t1805;
  t1816 = t1797 + t1809;
  t1776 = t592*t1331;
  t1777 = t1776 + t1411 + t1412;
  t1820 = t1033*t1816;
  t1832 = -1.*t1830*t1217;
  t1839 = t1820 + t1832;
  t1890 = t1126*t1863;
  t1894 = t1167*t1881;
  t1899 = t1890 + t1894;
  t1868 = t1167*t1863;
  t1882 = -1.*t1126*t1881;
  t1883 = t1868 + t1882;
  t1846 = t592*t1448;
  t1851 = t1499 + t1846 + t1515;
  t1888 = t1033*t1883;
  t1901 = -1.*t1899*t1217;
  t1903 = t1888 + t1901;
  t1966 = t1167*t1947;
  t1967 = t1126*t1957;
  t1973 = t1966 + t1967;
  t1951 = -1.*t1126*t1947;
  t1958 = t1167*t1957;
  t1963 = t1951 + t1958;
  t1918 = t592*t1917;
  t1932 = t1173*t1930;
  t1936 = 4.e-6*t782*t1935;
  t1938 = t1918 + t1932 + t1936;
  t1965 = t1033*t1963;
  t1975 = -1.*t1973*t1217;
  t1982 = t1965 + t1975;
  t2038 = t1167*t2014;
  t2039 = t1126*t2023;
  t2050 = t2038 + t2039;
  t2015 = -1.*t1126*t2014;
  t2028 = t1167*t2023;
  t2036 = t2015 + t2028;
  t1989 = t1173*t1917;
  t1997 = 4.e-6*t782*t1996;
  t2002 = t592*t2001;
  t2003 = t1989 + t1997 + t2002;
  t2037 = t1033*t2036;
  t2051 = -1.*t2050*t1217;
  t2056 = t2037 + t2051;
  t2151 = t1033*t1549;
  t2153 = t1527*t1217;
  t2156 = 0. + t2151 + t2153;
  t2158 = 0. + t1477 + t1567;
  t2135 = t1033*t1432;
  t2136 = t1423*t1217;
  t2142 = 0. + t2135 + t2136;
  t2146 = 0. + t1385 + t1435;
  t2096 = t1033*t1216;
  t2097 = t1194*t1217;
  t2103 = t2096 + t2097;
  t2456 = t2107*t2103;
  t2458 = -1.*t2093*t1295;
  t2459 = t2456 + t2458;
  t2452 = t2107*t2142;
  t2454 = -1.*t2093*t2146;
  t2448 = t2107*t2156;
  t2449 = -1.*t2093*t2158;
  t2179 = -1.*t1009*t1032;
  t2180 = -1.*t1022*t1246;
  t2181 = t2179 + t2180;
  t2191 = -1.*t1378*t1032;
  t2194 = -1.*t1022*t1434;
  t2195 = t2191 + t2194;
  t2208 = -1.*t1474*t1032;
  t2210 = -1.*t1022*t1565;
  t2212 = t2208 + t2210;
  t2236 = t1428 + t1433;
  t2247 = t1528 + t1552;
  t2270 = t1651*t1217;
  t2282 = t1197 + t2270;
  t2296 = t1033*t1670;
  t2297 = t1664*t1217;
  t2299 = t2296 + t2297;
  t2317 = t1033*t1709;
  t2318 = t1700*t1217;
  t2321 = t2317 + t2318;
  t2332 = t1033*t1763;
  t2334 = t1743*t1217;
  t2335 = t2332 + t2334;
  t2343 = t1022*t1186;
  t2347 = -1.*t1032*t1769;
  t2348 = t2343 + t2347;
  t2355 = t1033*t1830;
  t2356 = t1816*t1217;
  t2357 = t2355 + t2356;
  t2360 = t1022*t1777;
  t2368 = -1.*t1032*t1839;
  t2377 = t2360 + t2368;
  t2381 = t1033*t1899;
  t2382 = t1883*t1217;
  t2385 = t2381 + t2382;
  t2388 = t1022*t1851;
  t2390 = -1.*t1032*t1903;
  t2391 = t2388 + t2390;
  t2398 = t1033*t1973;
  t2403 = t1963*t1217;
  t2404 = t2398 + t2403;
  t2406 = t1022*t1938;
  t2407 = -1.*t1032*t1982;
  t2412 = t2406 + t2407;
  t2416 = t1033*t2050;
  t2417 = t2036*t1217;
  t2421 = t2416 + t2417;
  t2424 = t1022*t2003;
  t2427 = -1.*t1032*t2056;
  t2434 = t2424 + t2427;
  t2081 = t1378*t1032;
  t2084 = t1022*t1434;
  t2085 = 0. + t2081 + t2084;
  t2650 = -1.26e-8*var1[11];
  t2651 = 1. + t956;
  t2655 = -0.14871*t2651;
  t2658 = -1.64779999997447e-7*t911;
  t2659 = -1.59556e-7*t955;
  t2663 = -1.199987999968e-6*t1320;
  t2664 = t2650 + t2655 + t2658 + t2659 + t2663;
  t2669 = 0.803147*t1317;
  t2673 = 0.50315000001605*t911;
  t2682 = 0.00130540515936178*t1320;
  t2685 = t2669 + t2673 + t2682;
  t2690 = -5.04e-14*var1[11];
  t2691 = -0.03988959484*t911;
  t2702 = 6.38224e-13*t955;
  t2703 = -0.041195*t806;
  t2707 = 0.299996999992*t1320;
  t2708 = t2690 + t2691 + t2702 + t2703 + t2707;
  t2722 = -1.*t1167;
  t2726 = 1. + t2722;
  t2730 = -0.15121*t1126;
  t2731 = -1.2484e-7*var1[10];
  t2732 = 2.479936e-18*t782;
  t2734 = -1.54996e-7*t1038;
  t2735 = 1.124840000016e-6*t1173;
  t2740 = t1057*t2664;
  t2741 = -4.e-6*t1173*t2685;
  t2742 = 4.e-6*t782*t2708;
  t2747 = t2731 + t2732 + t2734 + t2735 + t2740 + t2741 + t2742;
  t2755 = 0.281210000008499*t782;
  t2756 = -0.03874900000062*t1173;
  t2759 = 4.e-6*t1173*t2664;
  t2763 = t1404*t2685;
  t2772 = -1.*t1173*t2708;
  t2773 = t2755 + t2756 + t2759 + t2763 + t2772;
  t2632 = -4.9936e-13*var1[10];
  t2634 = -0.038749*t782;
  t2640 = 6.19984e-13*t1038;
  t2641 = -0.281210000004*t1173;
  t2665 = 4.e-6*t782*t2664;
  t2686 = t1173*t2685;
  t2714 = t592*t2708;
  t2720 = 0. + t2632 + t2634 + t2640 + t2641 + t2665 + t2686 + t2714;
  t2727 = 0.15121*t2726;
  t2753 = -1.*t1126*t2747;
  t2774 = t1167*t2773;
  t2775 = t2727 + t2730 + t2753 + t2774;
  t2777 = t1033*t2775;
  t2780 = -0.15121*t2726;
  t2788 = t1167*t2747;
  t2789 = t1126*t2773;
  t2790 = t2780 + t2730 + t2788 + t2789;
  t2793 = -1.*t2790*t1217;
  t2796 = 0. + t2777 + t2793;
  t2087 = t1009*t1032;
  t2088 = t1022*t1246;
  t2091 = t2087 + t2088;
  t2819 = t1022*t2720;
  t2827 = -1.*t1032*t2796;
  t1436 = t1385 + t1435;
  t2809 = t2720*t1032;
  t2814 = t1022*t2796;
  t2816 = 0. + t2809 + t2814;
  t2838 = 0. + t2819 + t2827;
  t2721 = -1.*t2720*t1032;
  t2798 = -1.*t1022*t2796;
  t2799 = t2721 + t2798;
  t2833 = t2819 + t2827;
  t2847 = t1033*t2790;
  t2848 = t2775*t1217;
  t2852 = 0. + t2847 + t2848;
  t2072 = t1474*t1032;
  t2074 = t1022*t1565;
  t2078 = 0. + t2072 + t2074;
  t1572 = t1477 + t1567;
  t3018 = -1.*t1033*t2790;
  t3022 = -1.*t2775*t1217;
  t3023 = t3018 + t3022;
  t3016 = t2777 + t2793;
  t2853 = t2103*t2852;
  t2862 = t2091*t2816;
  t2864 = t1295*t2838;
  t2872 = t2853 + t2862 + t2864;
  t2899 = -1.*t2142*t2852;
  t2901 = -1.*t2085*t2816;
  t2903 = -1.*t2146*t2838;
  t2904 = t2899 + t2901 + t2903;
  t2925 = t2142*t2852;
  t2926 = t2085*t2816;
  t2928 = t2146*t2838;
  t2931 = t2925 + t2926 + t2928;
  t2944 = -1.*t2852*t2156;
  t2946 = -1.*t2816*t2078;
  t2948 = -1.*t2838*t2158;
  t2950 = t2944 + t2946 + t2948;
  t2975 = -1.*t2103*t2852;
  t2976 = -1.*t2091*t2816;
  t2977 = -1.*t1295*t2838;
  t2978 = t2975 + t2976 + t2977;
  t3001 = t2852*t2156;
  t3002 = t2816*t2078;
  t3003 = t2838*t2158;
  t3005 = t3001 + t3002 + t3003;
  t3168 = -0.15121*t1167;
  t3176 = 0.15121*t1126;
  t3177 = -1.*t1167*t2747;
  t3178 = -1.*t1126*t2773;
  t3180 = t3168 + t3176 + t3177 + t3178;
  t3170 = t3168 + t2730 + t2753 + t2774;
  t3191 = t1033*t3180;
  t3195 = -1.*t3170*t1217;
  t3196 = t3191 + t3195;
  t3175 = t1033*t3170;
  t3181 = t3180*t1217;
  t3182 = t3175 + t3181;
  t1782 = t1777*t1032;
  t1841 = t1022*t1839;
  t1842 = t1782 + t1841;
  t1722 = t1186*t1032;
  t1770 = t1022*t1769;
  t1772 = t1722 + t1770;
  t3319 = -0.03874900000062*t592;
  t3320 = 0.281210000008499*t1173;
  t3321 = 4.e-6*t592*t2664;
  t3322 = -1.000000000016*t1173*t2685;
  t3325 = -1.*t592*t2708;
  t3326 = t3319 + t3320 + t3321 + t3322 + t3325;
  t3328 = 1.124840000016e-6*t592;
  t3330 = 1.5499600000248e-7*t1173;
  t3331 = -1.6e-11*t1173*t2664;
  t3332 = -4.e-6*t592*t2685;
  t3333 = 4.e-6*t1173*t2708;
  t3334 = -1.2484e-7 + t3328 + t3330 + t3331 + t3332 + t3333;
  t3340 = t1167*t3326;
  t3341 = -1.*t1126*t3334;
  t3342 = t3340 + t3341;
  t3327 = t1126*t3326;
  t3335 = t1167*t3334;
  t3337 = t3327 + t3335;
  t3356 = -0.281210000004*t592;
  t3357 = t592*t2685;
  t3358 = -4.9936e-13 + t3356 + t2756 + t2759 + t3357 + t2772;
  t3367 = t1033*t3342;
  t3370 = -1.*t3337*t1217;
  t3371 = t3367 + t3370;
  t3339 = t1033*t3337;
  t3343 = t3342*t1217;
  t3350 = t3339 + t3343;
  t3362 = t3358*t1032;
  t3374 = t1022*t3371;
  t3376 = t3362 + t3374;
  t3383 = t1022*t3358;
  t3389 = -1.*t1032*t3371;
  t3392 = t3383 + t3389;
  t1852 = t1851*t1032;
  t1908 = t1022*t1903;
  t1909 = t1852 + t1908;
  t3525 = 0.00130540515936178*t806;
  t3530 = -0.2999969999968001*t1320;
  t3531 = t3525 + t3530;
  t3534 = -1.199987999968e-6*t806;
  t3537 = -5.2216206374471e-9*t1320;
  t3538 = -1.26e-8 + t3534 + t3537;
  t3542 = 0.299996999992*t806;
  t3543 = -5.04e-14 + t3542 + t2682;
  t3533 = -4.e-6*t1173*t3531;
  t3541 = t1057*t3538;
  t3545 = 4.e-6*t782*t3543;
  t3547 = t3533 + t3541 + t3545;
  t3550 = t1404*t3531;
  t3551 = 4.e-6*t1173*t3538;
  t3554 = -1.*t1173*t3543;
  t3555 = t3550 + t3551 + t3554;
  t3562 = -1.*t1126*t3547;
  t3565 = t1167*t3555;
  t3566 = t3562 + t3565;
  t3549 = t1167*t3547;
  t3559 = t1126*t3555;
  t3560 = t3549 + t3559;
  t3573 = t1173*t3531;
  t3574 = 4.e-6*t782*t3538;
  t3581 = t592*t3543;
  t3583 = t3573 + t3574 + t3581;
  t3587 = t1033*t3566;
  t3588 = -1.*t3560*t1217;
  t3592 = t3587 + t3588;
  t1939 = t1938*t1032;
  t1984 = t1022*t1982;
  t1986 = t1939 + t1984;
  t3561 = t1033*t3560;
  t3568 = t3566*t1217;
  t3569 = t3561 + t3568;
  t3586 = t3583*t1032;
  t3594 = t1022*t3592;
  t3597 = t3586 + t3594;
  t3600 = t1022*t3583;
  t3601 = -1.*t1032*t3592;
  t3604 = t3600 + t3601;
  t2006 = t2003*t1032;
  t2059 = t1022*t2056;
  t2067 = t2006 + t2059;
  t3015 = t1246*t2852;
  t3017 = t2103*t3016;
  t3038 = -1.*t2236*t2852;
  t3042 = -1.*t2142*t3016;
  t3078 = t2236*t2852;
  t3083 = t2142*t3016;
  t3100 = -1.*t3016*t2156;
  t3102 = -1.*t2852*t2247;
  t3119 = -1.*t1246*t2852;
  t3122 = -1.*t2103*t3016;
  t3133 = t3016*t2156;
  t3135 = t2852*t2247;
  t3165 = t2282*t2852;
  t3188 = t2103*t3182;
  t3766 = t1009*t2720;
  t3767 = t1246*t2796;
  t3769 = t3766 + t2853 + t3767;
  t3209 = -1.*t2299*t2852;
  t3211 = -1.*t2142*t3182;
  t3785 = -1.*t1378*t2720;
  t3786 = -1.*t1434*t2796;
  t3787 = t3785 + t2899 + t3786;
  t3235 = t2299*t2852;
  t3240 = t2142*t3182;
  t3811 = t1378*t2720;
  t3812 = t1434*t2796;
  t3813 = t3811 + t2925 + t3812;
  t3253 = -1.*t3182*t2156;
  t3255 = -1.*t2852*t2321;
  t3825 = -1.*t2720*t1474;
  t3827 = -1.*t2796*t1565;
  t3831 = t3825 + t2944 + t3827;
  t3276 = -1.*t2282*t2852;
  t3277 = -1.*t2103*t3182;
  t3858 = -1.*t1009*t2720;
  t3860 = -1.*t1246*t2796;
  t3862 = t3858 + t2975 + t3860;
  t3298 = t3182*t2156;
  t3299 = t2852*t2321;
  t3876 = t2720*t1474;
  t3877 = t2796*t1565;
  t3878 = t3876 + t3001 + t3877;
  t3316 = t2335*t2852;
  t3352 = t2103*t3350;
  t3406 = -1.*t2357*t2852;
  t3408 = -1.*t2142*t3350;
  t3421 = t2357*t2852;
  t3424 = t2142*t3350;
  t3441 = -1.*t3350*t2156;
  t3443 = -1.*t2852*t2385;
  t3468 = -1.*t2335*t2852;
  t3473 = -1.*t2103*t3350;
  t3491 = t3350*t2156;
  t3497 = t2852*t2385;
  t3571 = t2103*t3569;
  t3613 = -1.*t3569*t2142;
  t3615 = -1.*t2404*t2852;
  t3637 = -1.*t2103*t3569;
  t3652 = t2421*t2852;
  t3657 = t3569*t2156;
  t3674 = t3569*t2142;
  t3677 = t2404*t2852;
  t3710 = -1.*t2421*t2852;
  t3711 = -1.*t3569*t2156;
  t4017 = -1.*t1777*t2720;
  t4022 = -1.*t1378*t3358;
  t4007 = t1186*t2720;
  t4011 = t1009*t3358;
  t4084 = t3358*t1474;
  t4085 = t2720*t1851;
  t4067 = -1.*t1186*t2720;
  t4069 = -1.*t1009*t3358;
  t4045 = -1.*t3358*t1474;
  t4047 = -1.*t2720*t1851;
  t4035 = t1777*t2720;
  t4037 = t1378*t3358;
  t4110 = -1.*t3583*t1378;
  t4112 = -1.*t1938*t2720;
  t4412 = t1194*t2775;
  t4413 = t1216*t2790;
  t4414 = t4412 + t4413 + t3766;
  t4101 = t1009*t3583;
  t4140 = t2003*t2720;
  t4143 = t3583*t1474;
  t4457 = -1.*t1194*t2775;
  t4458 = -1.*t1216*t2790;
  t4464 = t4457 + t4458 + t3858;
  t4128 = -1.*t1009*t3583;
  t4494 = -1.*t2775*t1527;
  t4495 = -1.*t2790*t1549;
  t4498 = t4494 + t4495 + t3825;
  t4534 = t1423*t2775;
  t4538 = t1432*t2790;
  t4539 = t4534 + t4538 + t3811;
  t4196 = -1.*t2003*t2720;
  t4200 = -1.*t3583*t1474;
  t4177 = t3583*t1378;
  t4185 = t1938*t2720;
  t4358 = -1.*t1423*t2775;
  t4360 = -1.*t1432*t2790;
  t4362 = t4358 + t4360 + t3785;
  t4424 = t2775*t1527;
  t4425 = t2790*t1549;
  t4426 = t4424 + t4425 + t3876;
  t4738 = t2632 + t2634 + t2640 + t2641 + t2665 + t2686 + t2714;
  t4966 = t1098*t2747;
  t4969 = t1009*t4738;
  t4970 = t1186*t2773;
  t4971 = t4966 + t4969 + t4970;
  t4813 = -1.*t1098*t2747;
  t4817 = -1.*t1009*t4738;
  t4819 = -1.*t1186*t2773;
  t4820 = t4813 + t4817 + t4819;
  t4853 = -1.*t2747*t1496;
  t4854 = -1.*t4738*t1474;
  t4860 = -1.*t2773*t1523;
  t4863 = t4853 + t4854 + t4860;
  t4901 = t1391*t2747;
  t4903 = t1378*t4738;
  t4915 = t1415*t2773;
  t4916 = t4901 + t4903 + t4915;
  t4924 = -1.*t1391*t2747;
  t4926 = -1.*t1378*t4738;
  t4928 = -1.*t1415*t2773;
  t4933 = t4924 + t4926 + t4928;
  t4737 = t2747*t1496;
  t4740 = t4738*t1474;
  t4742 = t2773*t1523;
  t4743 = t4737 + t4740 + t4742;
  t5166 = t2664*t1996;
  t5172 = t1445*t3538;
  t5180 = t1917*t2685;
  t5182 = t3531*t1448;
  t5185 = t2001*t2708;
  t5188 = t3543*t1468;
  t5191 = t5166 + t5172 + t5180 + t5182 + t5185 + t5188;
  t5202 = -1.*t958*t3538;
  t5205 = -1.*t979*t3543;
  t5207 = t5202 + t5205;
  t5193 = -1.*t958*t2664;
  t5194 = -1.*t979*t2708;
  t5196 = t5193 + t5194;
  t5277 = t1331*t3531;
  t5278 = t1362*t3538;
  t5281 = t2664*t1935;
  t5283 = t1930*t2685;
  t5284 = t3543*t1373;
  t5287 = t1917*t2708;
  t5291 = t5277 + t5278 + t5281 + t5283 + t5284 + t5287;
  t5245 = -1.*t2664*t1996;
  t5251 = -1.*t1445*t3538;
  t5253 = -1.*t1917*t2685;
  t5255 = -1.*t3531*t1448;
  t5259 = -1.*t2001*t2708;
  t5261 = -1.*t3543*t1468;
  t5268 = t5245 + t5251 + t5253 + t5255 + t5259 + t5261;
  t5235 = t2664*t1362;
  t5237 = t1331*t2685;
  t5239 = t1373*t2708;
  t5240 = t5235 + t5237 + t5239;
  t5223 = -1.*t1445*t2664;
  t5224 = -1.*t2685*t1448;
  t5225 = -1.*t2708*t1468;
  t5227 = t5223 + t5224 + t5225;
  t5311 = -1.*t1331*t3531;
  t5312 = -1.*t1362*t3538;
  t5323 = -1.*t2664*t1935;
  t5325 = -1.*t1930*t2685;
  t5326 = -1.*t3543*t1373;
  t5327 = -1.*t1917*t2708;
  t5329 = t5311 + t5312 + t5323 + t5325 + t5326 + t5327;
  t5338 = t958*t3538;
  t5339 = t979*t3543;
  t5340 = t5338 + t5339;
  t5332 = t958*t2664;
  t5334 = t979*t2708;
  t5335 = t5332 + t5334;
  t5368 = -1.*t2664*t1362;
  t5369 = -1.*t1331*t2685;
  t5375 = -1.*t1373*t2708;
  t5381 = t5368 + t5369 + t5375;
  t5419 = t1445*t2664;
  t5424 = t2685*t1448;
  t5428 = t2708*t1468;
  t5429 = t5419 + t5424 + t5428;
  p_output1[0]=t1572*var2[0] + t1436*var2[1] + t1295*var2[2];
  p_output1[1]=t1022*t1626*var2[0] + t1022*t1618*var2[1] + t1022*t1605*var2[2];
  p_output1[2]=t1022*t1712*var2[0] + t1022*t1682*var2[1] + t1022*t1654*var2[2];
  p_output1[3]=t1909*var2[0] + t1842*var2[1] + t1772*var2[2];
  p_output1[4]=t2067*var2[0] + t1986*var2[1];
  p_output1[5]=t2078;
  p_output1[6]=t2085;
  p_output1[7]=t2091;
  p_output1[8]=(-1.*t2093*t2156 - 1.*t2107*t2158)*var2[0] + (-1.*t2093*t2142 - 1.*t2107*t2146)*var2[1] + (-1.*t2093*t2103 - 1.*t1295*t2107)*var2[2];
  p_output1[9]=-1.*t2093*t2212*var2[0] - 1.*t2093*t2195*var2[1] - 1.*t2093*t2181*var2[2];
  p_output1[10]=(t1032*t1626*t2093 + t2107*t2247)*var2[0] + (t1032*t1618*t2093 + t2107*t2236)*var2[1] + (t1032*t1605*t2093 + t1246*t2107)*var2[2];
  p_output1[11]=(t1032*t1712*t2093 + t2107*t2321)*var2[0] + (t1032*t1682*t2093 + t2107*t2299)*var2[1] + (t1032*t1654*t2093 + t2107*t2282)*var2[2];
  p_output1[12]=(t2107*t2385 - 1.*t2093*t2391)*var2[0] + (t2107*t2357 - 1.*t2093*t2377)*var2[1] + (t2107*t2335 - 1.*t2093*t2348)*var2[2];
  p_output1[13]=(t2107*t2421 - 1.*t2093*t2434)*var2[0] + (t2107*t2404 - 1.*t2093*t2412)*var2[1];
  p_output1[14]=0. + t2448 + t2449;
  p_output1[15]=0. + t2452 + t2454;
  p_output1[16]=t2459;
  p_output1[17]=(t2448 + t2449)*var2[0] + (t2452 + t2454)*var2[1] + t2459*var2[2];
  p_output1[18]=t2107*t2212*var2[0] + t2107*t2195*var2[1] + t2107*t2181*var2[2];
  p_output1[19]=(-1.*t1032*t1626*t2107 + t2093*t2247)*var2[0] + (-1.*t1032*t1618*t2107 + t2093*t2236)*var2[1] + (t1246*t2093 - 1.*t1032*t1605*t2107)*var2[2];
  p_output1[20]=(-1.*t1032*t1712*t2107 + t2093*t2321)*var2[0] + (-1.*t1032*t1682*t2107 + t2093*t2299)*var2[1] + (-1.*t1032*t1654*t2107 + t2093*t2282)*var2[2];
  p_output1[21]=(t2093*t2385 + t2107*t2391)*var2[0] + (t2093*t2357 + t2107*t2377)*var2[1] + (t2093*t2335 + t2107*t2348)*var2[2];
  p_output1[22]=(t2093*t2421 + t2107*t2434)*var2[0] + (t2093*t2404 + t2107*t2412)*var2[1];
  p_output1[23]=0. + t2093*t2156 + t2107*t2158;
  p_output1[24]=0. + t2093*t2142 + t2107*t2146;
  p_output1[25]=t2093*t2103 + t1295*t2107;
  p_output1[26]=(t2085*(t1295*t2799 + t1295*t2816 + t2091*t2833 + t2181*t2838) + t2091*(-1.*t2146*t2799 - 1.*t1436*t2816 - 1.*t2085*t2833 - 1.*t2195*t2838) + t1436*t2872 + t1295*t2904)*var2[0] + (t2078*(-1.*t1295*t2799 - 1.*t1295*t2816 - 1.*t2091*t2833 - 1.*t2181*t2838) + t2091*(t2158*t2799 + t1572*t2816 + t2078*t2833 + t2212*t2838) + t1572*t2978 + t1295*t3005)*var2[1] + (t2078*(t2146*t2799 + t1436*t2816 + t2085*t2833 + t2195*t2838) + t2085*(-1.*t2158*t2799 - 1.*t1572*t2816 - 1.*t2078*t2833 - 1.*t2212*t2838) + t1572*t2931 + t1436*t2950)*var2[2];
  p_output1[27]=(t1022*t1618*t2872 + t1022*t1605*t2904 + t2085*(t1022*t1605*t2816 - 1.*t1032*t1605*t2838 + t3015 + t3017 - 1.*t1032*t1295*t3023 + t1022*t2091*t3023) + t2091*(-1.*t1022*t1618*t2816 + t1032*t1618*t2838 - 1.*t1022*t2085*t3023 + t1032*t2146*t3023 + t3038 + t3042))*var2[0] + (t1022*t1626*t2978 + t1022*t1605*t3005 + t2078*(-1.*t1022*t1605*t2816 + t1032*t1605*t2838 + t1032*t1295*t3023 - 1.*t1022*t2091*t3023 + t3119 + t3122) + t2091*(t1022*t1626*t2816 - 1.*t1032*t1626*t2838 + t1022*t2078*t3023 - 1.*t1032*t2158*t3023 + t3133 + t3135))*var2[1] + (t1022*t1626*t2931 + t1022*t1618*t2950 + t2078*(t1022*t1618*t2816 - 1.*t1032*t1618*t2838 + t1022*t2085*t3023 - 1.*t1032*t2146*t3023 + t3078 + t3083) + t2085*(-1.*t1022*t1626*t2816 + t1032*t1626*t2838 - 1.*t1022*t2078*t3023 + t1032*t2158*t3023 + t3100 + t3102))*var2[2];
  p_output1[28]=(t1022*t1682*t2872 + t1022*t1654*t2904 + t2085*(t1022*t1654*t2816 - 1.*t1032*t1654*t2838 + t3165 + t3188 - 1.*t1032*t1295*t3196 + t1022*t2091*t3196) + t2091*(-1.*t1022*t1682*t2816 + t1032*t1682*t2838 - 1.*t1022*t2085*t3196 + t1032*t2146*t3196 + t3209 + t3211))*var2[0] + (t1022*t1712*t2978 + t1022*t1654*t3005 + t2078*(-1.*t1022*t1654*t2816 + t1032*t1654*t2838 + t1032*t1295*t3196 - 1.*t1022*t2091*t3196 + t3276 + t3277) + t2091*(t1022*t1712*t2816 - 1.*t1032*t1712*t2838 + t1022*t2078*t3196 - 1.*t1032*t2158*t3196 + t3298 + t3299))*var2[1] + (t1022*t1712*t2931 + t1022*t1682*t2950 + t2078*(t1022*t1682*t2816 - 1.*t1032*t1682*t2838 + t1022*t2085*t3196 - 1.*t1032*t2146*t3196 + t3235 + t3240) + t2085*(-1.*t1022*t1712*t2816 + t1032*t1712*t2838 - 1.*t1022*t2078*t3196 + t1032*t2158*t3196 + t3253 + t3255))*var2[2];
  p_output1[29]=(t1842*t2872 + t1772*t2904 + t2085*(t1772*t2816 + t2348*t2838 + t3316 + t3352 + t2091*t3376 + t1295*t3392) + t2091*(-1.*t1842*t2816 - 1.*t2377*t2838 - 1.*t2085*t3376 - 1.*t2146*t3392 + t3406 + t3408))*var2[0] + (t1909*t2978 + t1772*t3005 + t2078*(-1.*t1772*t2816 - 1.*t2348*t2838 - 1.*t2091*t3376 - 1.*t1295*t3392 + t3468 + t3473) + t2091*(t1909*t2816 + t2391*t2838 + t2078*t3376 + t2158*t3392 + t3491 + t3497))*var2[1] + (t1909*t2931 + t1842*t2950 + t2078*(t1842*t2816 + t2377*t2838 + t2085*t3376 + t2146*t3392 + t3421 + t3424) + t2085*(-1.*t1909*t2816 - 1.*t2391*t2838 - 1.*t2078*t3376 - 1.*t2158*t3392 + t3441 + t3443))*var2[2];
  p_output1[30]=(t1986*t2872 + t2085*(t3571 + t2091*t3597 + t1295*t3604) + t2091*(-1.*t1986*t2816 - 1.*t2412*t2838 - 1.*t2085*t3597 - 1.*t2146*t3604 + t3613 + t3615))*var2[0] + (t2067*t2978 + t2078*(-1.*t2091*t3597 - 1.*t1295*t3604 + t3637) + t2091*(t2067*t2816 + t2434*t2838 + t2078*t3597 + t2158*t3604 + t3652 + t3657))*var2[1] + (t2067*t2931 + t1986*t2950 + t2078*(t1986*t2816 + t2412*t2838 + t2085*t3597 + t2146*t3604 + t3674 + t3677) + t2085*(-1.*t2067*t2816 - 1.*t2434*t2838 - 1.*t2078*t3597 - 1.*t2158*t3604 + t3710 + t3711))*var2[2];
  p_output1[31]=t2085*t2872 + t2091*t2904;
  p_output1[32]=t2078*t2978 + t2091*t3005;
  p_output1[33]=t2078*t2931 + t2085*t2950;
  p_output1[34]=(t2142*(t1605*t2796 + t3015 + t3017 + t1246*t3023) + t2103*(-1.*t1618*t2796 - 1.*t1434*t3023 + t3038 + t3042) + t2236*t3769 + t1246*t3787)*var2[0] + (t2156*(-1.*t1605*t2796 - 1.*t1246*t3023 + t3119 + t3122) + t2103*(t1626*t2796 + t1565*t3023 + t3133 + t3135) + t2247*t3862 + t1246*t3878)*var2[1] + (t2156*(t1618*t2796 + t1434*t3023 + t3078 + t3083) + t2142*(-1.*t1626*t2796 - 1.*t1565*t3023 + t3100 + t3102) + t2247*t3813 + t2236*t3831)*var2[2];
  p_output1[35]=(t2142*(t1654*t2796 + t3165 + t3188 + t1246*t3196) + t2103*(-1.*t1682*t2796 - 1.*t1434*t3196 + t3209 + t3211) + t2299*t3769 + t2282*t3787)*var2[0] + (t2156*(-1.*t1654*t2796 - 1.*t1246*t3196 + t3276 + t3277) + t2103*(t1712*t2796 + t1565*t3196 + t3298 + t3299) + t2321*t3862 + t2282*t3878)*var2[1] + (t2156*(t1682*t2796 + t1434*t3196 + t3235 + t3240) + t2142*(-1.*t1712*t2796 - 1.*t1565*t3196 + t3253 + t3255) + t2321*t3813 + t2299*t3831)*var2[2];
  p_output1[36]=(t2357*t3769 + t2335*t3787 + t2142*(t1769*t2796 + t3316 + t3352 + t1246*t3371 + t4007 + t4011) + t2103*(-1.*t1839*t2796 - 1.*t1434*t3371 + t3406 + t3408 + t4017 + t4022))*var2[0] + (t2385*t3862 + t2335*t3878 + t2156*(-1.*t1769*t2796 - 1.*t1246*t3371 + t3468 + t3473 + t4067 + t4069) + t2103*(t1903*t2796 + t1565*t3371 + t3491 + t3497 + t4084 + t4085))*var2[1] + (t2385*t3813 + t2357*t3831 + t2156*(t1839*t2796 + t1434*t3371 + t3421 + t3424 + t4035 + t4037) + t2142*(-1.*t1903*t2796 - 1.*t1565*t3371 + t3441 + t3443 + t4045 + t4047))*var2[2];
  p_output1[37]=(t2404*t3769 + t2142*(t3571 + t1246*t3592 + t4101) + t2103*(-1.*t1982*t2796 - 1.*t1434*t3592 + t3613 + t3615 + t4110 + t4112))*var2[0] + (t2421*t3862 + t2156*(-1.*t1246*t3592 + t3637 + t4128) + t2103*(t2056*t2796 + t1565*t3592 + t3652 + t3657 + t4140 + t4143))*var2[1] + (t2421*t3813 + t2404*t3831 + t2156*(t1982*t2796 + t1434*t3592 + t3674 + t3677 + t4177 + t4185) + t2142*(-1.*t2056*t2796 - 1.*t1565*t3592 + t3710 + t3711 + t4196 + t4200))*var2[2];
  p_output1[38]=t2142*t3769 + t2103*t3787;
  p_output1[39]=t2156*t3862 + t2103*t3878;
  p_output1[40]=t2156*t3813 + t2142*t3831;
  p_output1[41]=(t1378*(t1651*t2775 + t1194*t2790 + t1216*t3170 + t1194*t3180) + t1009*(-1.*t1664*t2775 - 1.*t1670*t2790 - 1.*t1432*t3170 - 1.*t1423*t3180))*var2[0] + (t1474*(-1.*t1651*t2775 - 1.*t1194*t2790 - 1.*t1216*t3170 - 1.*t1194*t3180) + t1009*(t1700*t2775 + t1709*t2790 + t1549*t3170 + t1527*t3180))*var2[1] + (t1474*(t1664*t2775 + t1670*t2790 + t1432*t3170 + t1423*t3180) + t1378*(-1.*t1700*t2775 - 1.*t1709*t2790 - 1.*t1549*t3170 - 1.*t1527*t3180))*var2[2];
  p_output1[42]=(t1378*(t1743*t2775 + t1763*t2790 + t1216*t3337 + t1194*t3342 + t4007 + t4011) + t1009*(-1.*t1816*t2775 - 1.*t1830*t2790 - 1.*t1432*t3337 - 1.*t1423*t3342 + t4017 + t4022) + t1186*t4362 + t1777*t4414)*var2[0] + (t1474*(-1.*t1743*t2775 - 1.*t1763*t2790 - 1.*t1216*t3337 - 1.*t1194*t3342 + t4067 + t4069) + t1009*(t1883*t2775 + t1899*t2790 + t1549*t3337 + t1527*t3342 + t4084 + t4085) + t1186*t4426 + t1851*t4464)*var2[1] + (t1474*(t1816*t2775 + t1830*t2790 + t1432*t3337 + t1423*t3342 + t4035 + t4037) + t1378*(-1.*t1883*t2775 - 1.*t1899*t2790 - 1.*t1549*t3337 - 1.*t1527*t3342 + t4045 + t4047) + t1777*t4498 + t1851*t4539)*var2[2];
  p_output1[43]=(t1378*(t1216*t3560 + t1194*t3566 + t4101) + t1009*(-1.*t1963*t2775 - 1.*t1973*t2790 - 1.*t1432*t3560 - 1.*t1423*t3566 + t4110 + t4112) + t1938*t4414)*var2[0] + (t1474*(-1.*t1216*t3560 - 1.*t1194*t3566 + t4128) + t1009*(t2036*t2775 + t2050*t2790 + t1549*t3560 + t1527*t3566 + t4140 + t4143) + t2003*t4464)*var2[1] + (t1474*(t1963*t2775 + t1973*t2790 + t1432*t3560 + t1423*t3566 + t4177 + t4185) + t1378*(-1.*t2036*t2775 - 1.*t2050*t2790 - 1.*t1549*t3560 - 1.*t1527*t3566 + t4196 + t4200) + t1938*t4498 + t2003*t4539)*var2[2];
  p_output1[44]=t1009*t4362 + t1378*t4414;
  p_output1[45]=t1009*t4426 + t1474*t4464;
  p_output1[46]=t1378*t4498 + t1474*t4539;
  p_output1[47]=(-0.15121*t1863 - 0.15121*t1881 + t1378*(t1740*t2747 + t1726*t2773 + t1186*t3326 + t1098*t3334 + t4011 + t1186*t4738) + t1009*(-1.*t1805*t2747 - 1.*t1796*t2773 - 1.*t1415*t3326 - 1.*t1391*t3334 + t4022 - 1.*t1777*t4738) + t1186*t4933 + t1777*t4971)*var2[0] + (-0.15121*t1796 - 0.15121*t1805 + t1474*(-1.*t1740*t2747 - 1.*t1726*t2773 - 1.*t1186*t3326 - 1.*t1098*t3334 + t4069 - 1.*t1186*t4738) + t1009*(t1881*t2747 + t1863*t2773 + t1523*t3326 + t1496*t3334 + t4084 + t1851*t4738) + t1186*t4743 + t1851*t4820)*var2[1] + (-0.15121*t1726 - 0.15121*t1740 + t1474*(t1805*t2747 + t1796*t2773 + t1415*t3326 + t1391*t3334 + t4037 + t1777*t4738) + t1378*(-1.*t1881*t2747 - 1.*t1863*t2773 - 1.*t1523*t3326 - 1.*t1496*t3334 + t4045 - 1.*t1851*t4738) + t1777*t4863 + t1851*t4916)*var2[2];
  p_output1[48]=(-0.15121*t2014 - 0.15121*t2023 + t1378*(t1098*t3547 + t1186*t3555 + t4101) + t1009*(-1.*t1947*t2747 - 1.*t1957*t2773 - 1.*t1391*t3547 - 1.*t1415*t3555 + t4110 - 1.*t1938*t4738) + t1938*t4971)*var2[0] + (-0.15121*t1947 - 0.15121*t1957 + t1474*(-1.*t1098*t3547 - 1.*t1186*t3555 + t4128) + t1009*(t2014*t2747 + t2023*t2773 + t1496*t3547 + t1523*t3555 + t4143 + t2003*t4738) + t2003*t4820)*var2[1] + (t1474*(t1947*t2747 + t1957*t2773 + t1391*t3547 + t1415*t3555 + t4177 + t1938*t4738) + t1378*(-1.*t2014*t2747 - 1.*t2023*t2773 - 1.*t1496*t3547 - 1.*t1523*t3555 + t4200 - 1.*t2003*t4738) + t1938*t4863 + t2003*t4916)*var2[2];
  p_output1[49]=-0.15121*t1496 - 0.15121*t1523 + t1009*t4933 + t1378*t4971;
  p_output1[50]=-0.15121*t1391 - 0.15121*t1415 + t1009*t4743 + t1474*t4820;
  p_output1[51]=-0.15121*t1098 - 0.15121*t1186 + t1378*t4863 + t1474*t4916;
  p_output1[52]=(-0.038749*t1917 + 1.e-6*t1996 - 0.28121*t2001 - 1.*t1935*t5335 - 1.*t1362*t5340 - 1.*t5329*t958 + 4.e-6*(-1.*t1917*t5335 - 1.*t1373*t5340 - 1.*t5329*t979))*var2[0] + (-0.28121*t1917 - 0.038749*t1930 + 1.e-6*t1935 - 1.*t1996*t5196 - 1.*t1445*t5207 - 1.*t5191*t958 + 4.e-6*(-1.*t2001*t5196 - 1.*t1468*t5207 - 1.*t5191*t979))*var2[1] + (-1.*t1935*t5227 - 1.*t1996*t5240 - 1.*t1362*t5268 - 1.*t1445*t5291 + 4.e-6*(-1.*t1917*t5227 - 1.*t2001*t5240 - 1.*t1373*t5268 - 1.*t1468*t5291))*var2[2];
  p_output1[53]=1.e-6*t1445 - 0.038749*t1448 - 0.28121*t1468 - 1.*t1362*t5335 - 1.*t5381*t958 + 4.e-6*(-1.*t1373*t5335 - 1.*t5381*t979);
  p_output1[54]=-0.038749*t1331 + 1.e-6*t1362 - 0.28121*t1373 - 1.*t1445*t5196 - 1.*t5429*t958 + 4.e-6*(-1.*t1468*t5196 - 1.*t5429*t979);
  p_output1[55]=-1.*t1362*t5227 - 1.*t1445*t5240 + 4.e-6*(-1.*t1373*t5227 - 1.*t1468*t5240) + 1.e-6*t958 - 0.28121*t979;
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_ParallelStance.hh"

namespace ParallelStance
{

void J_fFrFoot_vec_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
