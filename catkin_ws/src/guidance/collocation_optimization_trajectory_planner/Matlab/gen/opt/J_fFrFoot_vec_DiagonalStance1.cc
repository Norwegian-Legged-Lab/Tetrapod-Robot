/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:26:55 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t147;
  double t101;
  double t232;
  double t151;
  double t192;
  double t223;
  double t235;
  double t246;
  double t112;
  double t122;
  double t262;
  double t273;
  double t276;
  double t471;
  double t433;
  double t318;
  double t323;
  double t324;
  double t370;
  double t385;
  double t418;
  double t421;
  double t501;
  double t502;
  double t515;
  double t284;
  double t634;
  double t311;
  double t316;
  double t629;
  double t630;
  double t633;
  double t636;
  double t643;
  double t647;
  double t650;
  double t651;
  double t673;
  double t674;
  double t703;
  double t722;
  double t727;
  double t772;
  double t778;
  double t787;
  double t792;
  double t798;
  double t803;
  double t809;
  double t814;
  double t826;
  double t836;
  double t587;
  double t932;
  double t934;
  double t935;
  double t962;
  double t965;
  double t978;
  double t1000;
  double t1005;
  double t1037;
  double t1038;
  double t1041;
  double t1043;
  double t1059;
  double t1093;
  double t1115;
  double t1129;
  double t573;
  double t577;
  double t586;
  double t425;
  double t525;
  double t550;
  double t885;
  double t888;
  double t894;
  double t795;
  double t841;
  double t850;
  double t1154;
  double t1155;
  double t1156;
  double t1056;
  double t1137;
  double t1145;
  double t1200;
  double t1509;
  double t1522;
  double t1524;
  double t1532;
  double t1533;
  double t1538;
  double t1617;
  double t1626;
  double t1633;
  double t1636;
  double t1663;
  double t1672;
  double t1674;
  double t1690;
  double t1796;
  double t1797;
  double t1805;
  double t1836;
  double t1846;
  double t1856;
  double t1859;
  double t1863;
  double t1992;
  double t1994;
  double t2039;
  double t2052;
  double t2061;
  double t2070;
  double t2071;
  double t2079;
  double t2084;
  double t2086;
  double t2092;
  double t2095;
  double t2101;
  double t2107;
  double t2111;
  double t2114;
  double t2201;
  double t2209;
  double t2224;
  double t2243;
  double t2248;
  double t2250;
  double t2252;
  double t2280;
  double t2293;
  double t2298;
  double t2303;
  double t938;
  double t974;
  double t1008;
  double t1009;
  double t1148;
  double t1157;
  double t1162;
  double t644;
  double t689;
  double t733;
  double t740;
  double t851;
  double t897;
  double t901;
  double t247;
  double t279;
  double t283;
  double t563;
  double t597;
  double t601;
  double t300;
  double t605;
  double t608;
  double t2378;
  double t2417;
  double t760;
  double t915;
  double t1014;
  double t1167;
  double t1198;
  double t1201;
  double t1219;
  double t1222;
  double t1231;
  double t1248;
  double t1250;
  double t1272;
  double t1303;
  double t1304;
  double t1315;
  double t1323;
  double t1327;
  double t1334;
  double t1335;
  double t1336;
  double t1342;
  double t1343;
  double t1346;
  double t1351;
  double t1359;
  double t1413;
  double t1435;
  double t1436;
  double t1438;
  double t1443;
  double t1462;
  double t1571;
  double t1574;
  double t1576;
  double t1525;
  double t1539;
  double t1560;
  double t1569;
  double t1579;
  double t1584;
  double t1733;
  double t1739;
  double t1747;
  double t1650;
  double t1709;
  double t1720;
  double t1594;
  double t1600;
  double t1728;
  double t1758;
  double t1766;
  double t1900;
  double t1931;
  double t1932;
  double t1842;
  double t1869;
  double t1870;
  double t1792;
  double t1794;
  double t1892;
  double t1943;
  double t1965;
  double t2130;
  double t2151;
  double t2163;
  double t2096;
  double t2116;
  double t2123;
  double t2021;
  double t2069;
  double t2081;
  double t2082;
  double t2127;
  double t2171;
  double t2172;
  double t2312;
  double t2314;
  double t2319;
  double t2269;
  double t2307;
  double t2310;
  double t2198;
  double t2217;
  double t2229;
  double t2231;
  double t2311;
  double t2320;
  double t2321;
  double t2465;
  double t2468;
  double t2470;
  double t2475;
  double t2432;
  double t2434;
  double t2445;
  double t2452;
  double t2394;
  double t2399;
  double t2402;
  double t2965;
  double t2974;
  double t2975;
  double t2941;
  double t2942;
  double t2930;
  double t2932;
  double t2490;
  double t2496;
  double t2498;
  double t2502;
  double t2504;
  double t2505;
  double t2508;
  double t2509;
  double t2512;
  double t2538;
  double t2555;
  double t2584;
  double t2585;
  double t2620;
  double t2623;
  double t2626;
  double t2650;
  double t2661;
  double t2663;
  double t2703;
  double t2711;
  double t2714;
  double t2718;
  double t2721;
  double t2722;
  double t2763;
  double t2767;
  double t2770;
  double t2787;
  double t2801;
  double t2806;
  double t2815;
  double t2818;
  double t2827;
  double t2845;
  double t2846;
  double t2847;
  double t2878;
  double t2880;
  double t2883;
  double t2885;
  double t2888;
  double t2889;
  double t2903;
  double t2905;
  double t2906;
  double t2908;
  double t2915;
  double t2916;
  double t2360;
  double t2363;
  double t2364;
  double t3219;
  double t3220;
  double t3228;
  double t3240;
  double t3242;
  double t3250;
  double t3255;
  double t3280;
  double t3281;
  double t3285;
  double t3293;
  double t3295;
  double t3296;
  double t3302;
  double t3315;
  double t3324;
  double t3325;
  double t3336;
  double t3349;
  double t3363;
  double t3364;
  double t3368;
  double t3372;
  double t3373;
  double t3376;
  double t3385;
  double t3387;
  double t3401;
  double t3409;
  double t3410;
  double t3421;
  double t3445;
  double t3446;
  double t3454;
  double t3211;
  double t3212;
  double t3213;
  double t3215;
  double t3257;
  double t3294;
  double t3327;
  double t3328;
  double t3356;
  double t3402;
  double t3455;
  double t3456;
  double t3465;
  double t3472;
  double t3473;
  double t3474;
  double t3475;
  double t3477;
  double t3481;
  double t2366;
  double t2373;
  double t2377;
  double t3513;
  double t3514;
  double t919;
  double t3507;
  double t3508;
  double t3509;
  double t3539;
  double t3329;
  double t3493;
  double t3501;
  double t3525;
  double t3554;
  double t3557;
  double t3558;
  double t2345;
  double t2351;
  double t2352;
  double t1171;
  double t3845;
  double t3847;
  double t3848;
  double t3843;
  double t3561;
  double t3568;
  double t3569;
  double t3596;
  double t3617;
  double t3622;
  double t3630;
  double t3636;
  double t3705;
  double t3706;
  double t3713;
  double t3715;
  double t3749;
  double t3751;
  double t3756;
  double t3757;
  double t3777;
  double t3780;
  double t3787;
  double t3789;
  double t3822;
  double t3823;
  double t3824;
  double t3828;
  double t4013;
  double t4028;
  double t4038;
  double t4039;
  double t4041;
  double t4021;
  double t4049;
  double t4050;
  double t4051;
  double t4026;
  double t4042;
  double t4044;
  double t1605;
  double t1768;
  double t1780;
  double t1478;
  double t1587;
  double t1588;
  double t4232;
  double t4239;
  double t4240;
  double t4241;
  double t4243;
  double t4246;
  double t4248;
  double t4249;
  double t4252;
  double t4253;
  double t4255;
  double t4258;
  double t4264;
  double t4265;
  double t4267;
  double t4247;
  double t4259;
  double t4260;
  double t4278;
  double t4279;
  double t4282;
  double t4303;
  double t4307;
  double t4308;
  double t4263;
  double t4268;
  double t4270;
  double t4283;
  double t4311;
  double t4312;
  double t4325;
  double t4335;
  double t4348;
  double t1795;
  double t1972;
  double t1982;
  double t4626;
  double t4630;
  double t4631;
  double t4637;
  double t4641;
  double t4642;
  double t4647;
  double t4648;
  double t4636;
  double t4643;
  double t4649;
  double t4651;
  double t4653;
  double t4654;
  double t4655;
  double t4656;
  double t4660;
  double t4661;
  double t4662;
  double t4652;
  double t4657;
  double t4658;
  double t4668;
  double t4675;
  double t4676;
  double t4693;
  double t4695;
  double t4700;
  double t4707;
  double t2083;
  double t2187;
  double t2194;
  double t4659;
  double t4663;
  double t4664;
  double t4694;
  double t4711;
  double t4712;
  double t4733;
  double t4734;
  double t4735;
  double t2232;
  double t2328;
  double t2334;
  double t3842;
  double t3844;
  double t3877;
  double t3882;
  double t3909;
  double t3910;
  double t3922;
  double t3923;
  double t3941;
  double t3942;
  double t3973;
  double t3976;
  double t4004;
  double t4045;
  double t4869;
  double t4870;
  double t4871;
  double t4080;
  double t4082;
  double t4881;
  double t4882;
  double t4885;
  double t4115;
  double t4118;
  double t4905;
  double t4906;
  double t4907;
  double t4139;
  double t4146;
  double t4918;
  double t4919;
  double t4920;
  double t4182;
  double t4190;
  double t4938;
  double t4939;
  double t4942;
  double t4203;
  double t4204;
  double t4953;
  double t4954;
  double t4955;
  double t4231;
  double t4271;
  double t4359;
  double t4368;
  double t4404;
  double t4410;
  double t4437;
  double t4462;
  double t4531;
  double t4542;
  double t4597;
  double t4598;
  double t4667;
  double t4740;
  double t4741;
  double t4766;
  double t4787;
  double t4790;
  double t4801;
  double t4802;
  double t4829;
  double t4832;
  double t5108;
  double t5112;
  double t5077;
  double t5079;
  double t5213;
  double t5218;
  double t5193;
  double t5194;
  double t5179;
  double t5181;
  double t5156;
  double t5157;
  double t5298;
  double t5300;
  double t5591;
  double t5597;
  double t5598;
  double t5265;
  double t5343;
  double t5344;
  double t5651;
  double t5657;
  double t5660;
  double t5331;
  double t5693;
  double t5694;
  double t5695;
  double t5707;
  double t5711;
  double t5712;
  double t5386;
  double t5392;
  double t5375;
  double t5376;
  double t5548;
  double t5551;
  double t5552;
  double t5610;
  double t5611;
  double t5612;
  double t5798;
  double t5951;
  double t5953;
  double t5958;
  double t5963;
  double t5823;
  double t5824;
  double t5825;
  double t5826;
  double t5846;
  double t5847;
  double t5848;
  double t5849;
  double t5877;
  double t5881;
  double t5886;
  double t5889;
  double t5900;
  double t5901;
  double t5907;
  double t5908;
  double t5797;
  double t5799;
  double t5800;
  double t5801;
  double t6160;
  double t6163;
  double t6164;
  double t6167;
  double t6168;
  double t6170;
  double t6171;
  double t6180;
  double t6184;
  double t6185;
  double t6174;
  double t6175;
  double t6177;
  double t6245;
  double t6246;
  double t6248;
  double t6249;
  double t6250;
  double t6252;
  double t6253;
  double t6226;
  double t6228;
  double t6231;
  double t6232;
  double t6233;
  double t6236;
  double t6237;
  double t6221;
  double t6222;
  double t6223;
  double t6224;
  double t6208;
  double t6211;
  double t6212;
  double t6216;
  double t6270;
  double t6274;
  double t6275;
  double t6276;
  double t6280;
  double t6281;
  double t6282;
  double t6296;
  double t6297;
  double t6301;
  double t6292;
  double t6293;
  double t6294;
  double t6324;
  double t6326;
  double t6329;
  double t6330;
  double t6349;
  double t6350;
  double t6353;
  double t6355;
  t147 = Cos(var1[11]);
  t101 = Cos(var1[10]);
  t232 = -1. + t147;
  t151 = -1.*t147;
  t192 = 1. + t151;
  t223 = 1.6e-11*t192;
  t235 = 1.6e-11*t232;
  t246 = -1. + t223 + t235;
  t112 = -1.*t101;
  t122 = 1. + t112;
  t262 = 4.e-6*t232;
  t273 = -4.e-6*t147;
  t276 = t262 + t273;
  t471 = Sin(var1[10]);
  t433 = Cos(var1[9]);
  t318 = -1. + t101;
  t323 = 1.6e-11*t318;
  t324 = 1. + t323;
  t370 = t324*t246;
  t385 = 4.e-6*t122*t276;
  t418 = t370 + t385;
  t421 = Sin(var1[9]);
  t501 = 4.e-6*t246*t471;
  t502 = -1.*t276*t471;
  t515 = t501 + t502;
  t284 = Cos(var1[4]);
  t634 = Sin(var1[11]);
  t311 = Sin(var1[4]);
  t316 = Cos(var1[5]);
  t629 = -1.000000000016*t192;
  t630 = 1. + t629;
  t633 = 0.004352*t630;
  t636 = -0.9999910000159999*t634;
  t643 = t633 + t636;
  t647 = -1. + t223;
  t650 = 4.e-6*t647;
  t651 = 3.999964e-6*t192;
  t673 = -1.7408e-8*t634;
  t674 = t650 + t651 + t673;
  t703 = 0.999991*t147;
  t722 = 0.004352*t634;
  t727 = t235 + t703 + t722;
  t772 = -4.e-6*t471*t643;
  t778 = t324*t674;
  t787 = 4.e-6*t122*t727;
  t792 = 0. + t772 + t778 + t787;
  t798 = -1.000000000016*t122;
  t803 = 1. + t798;
  t809 = t803*t643;
  t814 = 4.e-6*t471*t674;
  t826 = -1.*t471*t727;
  t836 = 0. + t809 + t814 + t826;
  t587 = Sin(var1[5]);
  t932 = -1.7408e-8*t192;
  t934 = -3.999964e-6*t634;
  t935 = t932 + t934;
  t962 = 0.999991*t630;
  t965 = t962 + t722;
  t978 = -0.004352*t147;
  t1000 = 0.999991*t634;
  t1005 = t978 + t1000;
  t1037 = t324*t935;
  t1038 = -4.e-6*t471*t965;
  t1041 = 4.e-6*t122*t1005;
  t1043 = 0. + t1037 + t1038 + t1041;
  t1059 = 4.e-6*t471*t935;
  t1093 = t803*t965;
  t1115 = -1.*t471*t1005;
  t1129 = 0. + t1059 + t1093 + t1115;
  t573 = t433*t418;
  t577 = t421*t515;
  t586 = t573 + t577;
  t425 = -1.*t418*t421;
  t525 = t433*t515;
  t550 = t425 + t525;
  t885 = t433*t792;
  t888 = t421*t836;
  t894 = 0. + t885 + t888;
  t795 = -1.*t421*t792;
  t841 = t433*t836;
  t850 = 0. + t795 + t841;
  t1154 = t433*t1043;
  t1155 = t421*t1129;
  t1156 = 0. + t1154 + t1155;
  t1056 = -1.*t421*t1043;
  t1137 = t433*t1129;
  t1145 = 0. + t1056 + t1137;
  t1200 = -1.*t550*t587;
  t1509 = 4.e-6*t101*t246;
  t1522 = -1.*t101*t276;
  t1524 = t1509 + t1522;
  t1532 = -1.6e-11*t246*t471;
  t1533 = 4.e-6*t276*t471;
  t1538 = t1532 + t1533;
  t1617 = -1.000000000016*t471*t643;
  t1626 = 4.e-6*t101*t674;
  t1633 = -1.*t101*t727;
  t1636 = t1617 + t1626 + t1633;
  t1663 = -4.e-6*t101*t643;
  t1672 = -1.6e-11*t471*t674;
  t1674 = 4.e-6*t471*t727;
  t1690 = t1663 + t1672 + t1674;
  t1796 = 4.e-6*t101*t935;
  t1797 = -1.000000000016*t471*t965;
  t1805 = -1.*t101*t1005;
  t1836 = t1796 + t1797 + t1805;
  t1846 = -1.6e-11*t471*t935;
  t1856 = -4.e-6*t101*t965;
  t1859 = 4.e-6*t471*t1005;
  t1863 = t1846 + t1856 + t1859;
  t1992 = 0.004352*t147;
  t1994 = t1992 + t636;
  t2039 = -0.9999910000159999*t147;
  t2052 = -0.00435200000006963*t634;
  t2061 = t2039 + t2052;
  t2070 = -1.7408e-8*t147;
  t2071 = 3.999964000064e-6*t634;
  t2079 = t2070 + t2071;
  t2084 = 4.e-6*t122*t1994;
  t2086 = -4.e-6*t471*t2061;
  t2092 = t324*t2079;
  t2095 = t2084 + t2086 + t2092;
  t2101 = -1.*t471*t1994;
  t2107 = t803*t2061;
  t2111 = 4.e-6*t471*t2079;
  t2114 = t2101 + t2107 + t2111;
  t2201 = -3.999964e-6*t147;
  t2209 = t2201 + t673;
  t2224 = t703 + t722;
  t2243 = -4.e-6*t471*t1994;
  t2248 = t324*t2209;
  t2250 = 4.e-6*t122*t2224;
  t2252 = t2243 + t2248 + t2250;
  t2280 = t803*t1994;
  t2293 = 4.e-6*t471*t2209;
  t2298 = -1.*t471*t2224;
  t2303 = t2280 + t2293 + t2298;
  t938 = 4.e-6*t122*t935;
  t974 = t471*t965;
  t1008 = t101*t1005;
  t1009 = 0. + t938 + t974 + t1008;
  t1148 = t316*t1145;
  t1157 = -1.*t1156*t587;
  t1162 = 0. + t1148 + t1157;
  t644 = t471*t643;
  t689 = 4.e-6*t122*t674;
  t733 = t101*t727;
  t740 = 0. + t644 + t689 + t733;
  t851 = t316*t850;
  t897 = -1.*t894*t587;
  t901 = 0. + t851 + t897;
  t247 = 4.e-6*t122*t246;
  t279 = t101*t276;
  t283 = t247 + t279;
  t563 = t316*t550;
  t597 = -1.*t586*t587;
  t601 = t563 + t597;
  t300 = t283*t284;
  t605 = -1.*t311*t601;
  t608 = t300 + t605;
  t2378 = Sin(var1[3]);
  t2417 = Cos(var1[3]);
  t760 = t284*t740;
  t915 = -1.*t311*t901;
  t1014 = t284*t1009;
  t1167 = -1.*t311*t1162;
  t1198 = -1.*t316*t586;
  t1201 = t1198 + t1200;
  t1219 = -1.*t316*t894;
  t1222 = -1.*t850*t587;
  t1231 = t1219 + t1222;
  t1248 = -1.*t316*t1156;
  t1250 = -1.*t1145*t587;
  t1272 = t1248 + t1250;
  t1303 = -1.*t433*t418;
  t1304 = -1.*t421*t515;
  t1315 = t1303 + t1304;
  t1323 = t316*t1315;
  t1327 = t1323 + t1200;
  t1334 = -1.*t433*t792;
  t1335 = -1.*t421*t836;
  t1336 = t1334 + t1335;
  t1342 = t316*t1336;
  t1343 = t795 + t841;
  t1346 = -1.*t1343*t587;
  t1351 = t1342 + t1346;
  t1359 = -1.*t433*t1043;
  t1413 = -1.*t421*t1129;
  t1435 = t1359 + t1413;
  t1436 = t316*t1435;
  t1438 = t1056 + t1137;
  t1443 = -1.*t1438*t587;
  t1462 = t1436 + t1443;
  t1571 = t1524*t421;
  t1574 = t433*t1538;
  t1576 = t1571 + t1574;
  t1525 = t433*t1524;
  t1539 = -1.*t421*t1538;
  t1560 = t1525 + t1539;
  t1569 = t316*t1560;
  t1579 = -1.*t1576*t587;
  t1584 = t1569 + t1579;
  t1733 = t421*t1636;
  t1739 = t433*t1690;
  t1747 = t1733 + t1739;
  t1650 = t433*t1636;
  t1709 = -1.*t421*t1690;
  t1720 = t1650 + t1709;
  t1594 = t101*t643;
  t1600 = t1594 + t814 + t826;
  t1728 = t316*t1720;
  t1758 = -1.*t1747*t587;
  t1766 = t1728 + t1758;
  t1900 = t421*t1836;
  t1931 = t433*t1863;
  t1932 = t1900 + t1931;
  t1842 = t433*t1836;
  t1869 = -1.*t421*t1863;
  t1870 = t1842 + t1869;
  t1792 = t101*t965;
  t1794 = t1059 + t1792 + t1115;
  t1892 = t316*t1870;
  t1943 = -1.*t1932*t587;
  t1965 = t1892 + t1943;
  t2130 = t433*t2095;
  t2151 = t421*t2114;
  t2163 = t2130 + t2151;
  t2096 = -1.*t421*t2095;
  t2116 = t433*t2114;
  t2123 = t2096 + t2116;
  t2021 = t101*t1994;
  t2069 = t471*t2061;
  t2081 = 4.e-6*t122*t2079;
  t2082 = t2021 + t2069 + t2081;
  t2127 = t316*t2123;
  t2171 = -1.*t2163*t587;
  t2172 = t2127 + t2171;
  t2312 = t433*t2252;
  t2314 = t421*t2303;
  t2319 = t2312 + t2314;
  t2269 = -1.*t421*t2252;
  t2307 = t433*t2303;
  t2310 = t2269 + t2307;
  t2198 = t471*t1994;
  t2217 = 4.e-6*t122*t2209;
  t2229 = t101*t2224;
  t2231 = t2198 + t2217 + t2229;
  t2311 = t316*t2310;
  t2320 = -1.*t2319*t587;
  t2321 = t2311 + t2320;
  t2465 = t316*t1156;
  t2468 = t1145*t587;
  t2470 = 0. + t2465 + t2468;
  t2475 = 0. + t1014 + t1167;
  t2432 = t316*t894;
  t2434 = t850*t587;
  t2445 = 0. + t2432 + t2434;
  t2452 = 0. + t760 + t915;
  t2394 = t316*t586;
  t2399 = t550*t587;
  t2402 = t2394 + t2399;
  t2965 = t2417*t2402;
  t2974 = -1.*t2378*t608;
  t2975 = t2965 + t2974;
  t2941 = t2417*t2445;
  t2942 = -1.*t2378*t2452;
  t2930 = t2417*t2470;
  t2932 = -1.*t2378*t2475;
  t2490 = -1.*t283*t311;
  t2496 = -1.*t284*t601;
  t2498 = t2490 + t2496;
  t2502 = -1.*t740*t311;
  t2504 = -1.*t284*t901;
  t2505 = t2502 + t2504;
  t2508 = -1.*t1009*t311;
  t2509 = -1.*t284*t1162;
  t2512 = t2508 + t2509;
  t2538 = t851 + t897;
  t2555 = t1148 + t1157;
  t2584 = t1315*t587;
  t2585 = t563 + t2584;
  t2620 = t316*t1343;
  t2623 = t1336*t587;
  t2626 = t2620 + t2623;
  t2650 = t316*t1438;
  t2661 = t1435*t587;
  t2663 = t2650 + t2661;
  t2703 = t316*t1576;
  t2711 = t1560*t587;
  t2714 = t2703 + t2711;
  t2718 = t284*t515;
  t2721 = -1.*t311*t1584;
  t2722 = t2718 + t2721;
  t2763 = t316*t1747;
  t2767 = t1720*t587;
  t2770 = t2763 + t2767;
  t2787 = t284*t1600;
  t2801 = -1.*t311*t1766;
  t2806 = t2787 + t2801;
  t2815 = t316*t1932;
  t2818 = t1870*t587;
  t2827 = t2815 + t2818;
  t2845 = t284*t1794;
  t2846 = -1.*t311*t1965;
  t2847 = t2845 + t2846;
  t2878 = t316*t2163;
  t2880 = t2123*t587;
  t2883 = t2878 + t2880;
  t2885 = t284*t2082;
  t2888 = -1.*t311*t2172;
  t2889 = t2885 + t2888;
  t2903 = t316*t2319;
  t2905 = t2310*t587;
  t2906 = t2903 + t2905;
  t2908 = t284*t2231;
  t2915 = -1.*t311*t2321;
  t2916 = t2908 + t2915;
  t2360 = t740*t311;
  t2363 = t284*t901;
  t2364 = 0. + t2360 + t2363;
  t3219 = -1.26e-8*var1[11];
  t3220 = 1. + t235;
  t3228 = -0.14871*t3220;
  t3240 = -1.64779999997447e-7*t192;
  t3242 = -1.59556e-7*t232;
  t3250 = -1.199987999968e-6*t634;
  t3255 = t3219 + t3228 + t3240 + t3242 + t3250;
  t3280 = 0.803147*t630;
  t3281 = 0.50315000001605*t192;
  t3285 = 0.00130540515936178*t634;
  t3293 = t3280 + t3281 + t3285;
  t3295 = -5.04e-14*var1[11];
  t3296 = -0.03988959484*t192;
  t3302 = 6.38224e-13*t232;
  t3315 = -0.041195*t147;
  t3324 = 0.299996999992*t634;
  t3325 = t3295 + t3296 + t3302 + t3315 + t3324;
  t3336 = -1.*t433;
  t3349 = 1. + t3336;
  t3363 = -0.15121*t421;
  t3364 = -1.2484e-7*var1[10];
  t3368 = 2.479936e-18*t122;
  t3372 = -1.54996e-7*t318;
  t3373 = 1.124840000016e-6*t471;
  t3376 = t324*t3255;
  t3385 = -4.e-6*t471*t3293;
  t3387 = 4.e-6*t122*t3325;
  t3401 = t3364 + t3368 + t3372 + t3373 + t3376 + t3385 + t3387;
  t3409 = 0.281210000008499*t122;
  t3410 = -0.03874900000062*t471;
  t3421 = 4.e-6*t471*t3255;
  t3445 = t803*t3293;
  t3446 = -1.*t471*t3325;
  t3454 = t3409 + t3410 + t3421 + t3445 + t3446;
  t3211 = -4.9936e-13*var1[10];
  t3212 = -0.038749*t122;
  t3213 = 6.19984e-13*t318;
  t3215 = -0.281210000004*t471;
  t3257 = 4.e-6*t122*t3255;
  t3294 = t471*t3293;
  t3327 = t101*t3325;
  t3328 = 0. + t3211 + t3212 + t3213 + t3215 + t3257 + t3294 + t3327;
  t3356 = 0.15121*t3349;
  t3402 = -1.*t421*t3401;
  t3455 = t433*t3454;
  t3456 = t3356 + t3363 + t3402 + t3455;
  t3465 = t316*t3456;
  t3472 = -0.15121*t3349;
  t3473 = t433*t3401;
  t3474 = t421*t3454;
  t3475 = t3472 + t3363 + t3473 + t3474;
  t3477 = -1.*t3475*t587;
  t3481 = 0. + t3465 + t3477;
  t2366 = t283*t311;
  t2373 = t284*t601;
  t2377 = t2366 + t2373;
  t3513 = t284*t3328;
  t3514 = -1.*t311*t3481;
  t919 = t760 + t915;
  t3507 = t3328*t311;
  t3508 = t284*t3481;
  t3509 = 0. + t3507 + t3508;
  t3539 = 0. + t3513 + t3514;
  t3329 = -1.*t3328*t311;
  t3493 = -1.*t284*t3481;
  t3501 = t3329 + t3493;
  t3525 = t3513 + t3514;
  t3554 = t316*t3475;
  t3557 = t3456*t587;
  t3558 = 0. + t3554 + t3557;
  t2345 = t1009*t311;
  t2351 = t284*t1162;
  t2352 = 0. + t2345 + t2351;
  t1171 = t1014 + t1167;
  t3845 = -1.*t316*t3475;
  t3847 = -1.*t3456*t587;
  t3848 = t3845 + t3847;
  t3843 = t3465 + t3477;
  t3561 = t2402*t3558;
  t3568 = t2377*t3509;
  t3569 = t608*t3539;
  t3596 = t3561 + t3568 + t3569;
  t3617 = -1.*t2445*t3558;
  t3622 = -1.*t2364*t3509;
  t3630 = -1.*t2452*t3539;
  t3636 = t3617 + t3622 + t3630;
  t3705 = t2445*t3558;
  t3706 = t2364*t3509;
  t3713 = t2452*t3539;
  t3715 = t3705 + t3706 + t3713;
  t3749 = -1.*t3558*t2470;
  t3751 = -1.*t3509*t2352;
  t3756 = -1.*t3539*t2475;
  t3757 = t3749 + t3751 + t3756;
  t3777 = -1.*t2402*t3558;
  t3780 = -1.*t2377*t3509;
  t3787 = -1.*t608*t3539;
  t3789 = t3777 + t3780 + t3787;
  t3822 = t3558*t2470;
  t3823 = t3509*t2352;
  t3824 = t3539*t2475;
  t3828 = t3822 + t3823 + t3824;
  t4013 = -0.15121*t433;
  t4028 = 0.15121*t421;
  t4038 = -1.*t433*t3401;
  t4039 = -1.*t421*t3454;
  t4041 = t4013 + t4028 + t4038 + t4039;
  t4021 = t4013 + t3363 + t3402 + t3455;
  t4049 = t316*t4041;
  t4050 = -1.*t4021*t587;
  t4051 = t4049 + t4050;
  t4026 = t316*t4021;
  t4042 = t4041*t587;
  t4044 = t4026 + t4042;
  t1605 = t1600*t311;
  t1768 = t284*t1766;
  t1780 = t1605 + t1768;
  t1478 = t515*t311;
  t1587 = t284*t1584;
  t1588 = t1478 + t1587;
  t4232 = -0.03874900000062*t101;
  t4239 = 0.281210000008499*t471;
  t4240 = 4.e-6*t101*t3255;
  t4241 = -1.000000000016*t471*t3293;
  t4243 = -1.*t101*t3325;
  t4246 = t4232 + t4239 + t4240 + t4241 + t4243;
  t4248 = 1.124840000016e-6*t101;
  t4249 = 1.5499600000248e-7*t471;
  t4252 = -1.6e-11*t471*t3255;
  t4253 = -4.e-6*t101*t3293;
  t4255 = 4.e-6*t471*t3325;
  t4258 = -1.2484e-7 + t4248 + t4249 + t4252 + t4253 + t4255;
  t4264 = t433*t4246;
  t4265 = -1.*t421*t4258;
  t4267 = t4264 + t4265;
  t4247 = t421*t4246;
  t4259 = t433*t4258;
  t4260 = t4247 + t4259;
  t4278 = -0.281210000004*t101;
  t4279 = t101*t3293;
  t4282 = -4.9936e-13 + t4278 + t3410 + t3421 + t4279 + t3446;
  t4303 = t316*t4267;
  t4307 = -1.*t4260*t587;
  t4308 = t4303 + t4307;
  t4263 = t316*t4260;
  t4268 = t4267*t587;
  t4270 = t4263 + t4268;
  t4283 = t4282*t311;
  t4311 = t284*t4308;
  t4312 = t4283 + t4311;
  t4325 = t284*t4282;
  t4335 = -1.*t311*t4308;
  t4348 = t4325 + t4335;
  t1795 = t1794*t311;
  t1972 = t284*t1965;
  t1982 = t1795 + t1972;
  t4626 = 0.00130540515936178*t147;
  t4630 = -0.2999969999968001*t634;
  t4631 = t4626 + t4630;
  t4637 = -1.199987999968e-6*t147;
  t4641 = -5.2216206374471e-9*t634;
  t4642 = -1.26e-8 + t4637 + t4641;
  t4647 = 0.299996999992*t147;
  t4648 = -5.04e-14 + t4647 + t3285;
  t4636 = -4.e-6*t471*t4631;
  t4643 = t324*t4642;
  t4649 = 4.e-6*t122*t4648;
  t4651 = t4636 + t4643 + t4649;
  t4653 = t803*t4631;
  t4654 = 4.e-6*t471*t4642;
  t4655 = -1.*t471*t4648;
  t4656 = t4653 + t4654 + t4655;
  t4660 = -1.*t421*t4651;
  t4661 = t433*t4656;
  t4662 = t4660 + t4661;
  t4652 = t433*t4651;
  t4657 = t421*t4656;
  t4658 = t4652 + t4657;
  t4668 = t471*t4631;
  t4675 = 4.e-6*t122*t4642;
  t4676 = t101*t4648;
  t4693 = t4668 + t4675 + t4676;
  t4695 = t316*t4662;
  t4700 = -1.*t4658*t587;
  t4707 = t4695 + t4700;
  t2083 = t2082*t311;
  t2187 = t284*t2172;
  t2194 = t2083 + t2187;
  t4659 = t316*t4658;
  t4663 = t4662*t587;
  t4664 = t4659 + t4663;
  t4694 = t4693*t311;
  t4711 = t284*t4707;
  t4712 = t4694 + t4711;
  t4733 = t284*t4693;
  t4734 = -1.*t311*t4707;
  t4735 = t4733 + t4734;
  t2232 = t2231*t311;
  t2328 = t284*t2321;
  t2334 = t2232 + t2328;
  t3842 = t601*t3558;
  t3844 = t2402*t3843;
  t3877 = -1.*t2538*t3558;
  t3882 = -1.*t2445*t3843;
  t3909 = t2538*t3558;
  t3910 = t2445*t3843;
  t3922 = -1.*t3843*t2470;
  t3923 = -1.*t3558*t2555;
  t3941 = -1.*t601*t3558;
  t3942 = -1.*t2402*t3843;
  t3973 = t3843*t2470;
  t3976 = t3558*t2555;
  t4004 = t2585*t3558;
  t4045 = t2402*t4044;
  t4869 = t283*t3328;
  t4870 = t601*t3481;
  t4871 = t4869 + t3561 + t4870;
  t4080 = -1.*t2626*t3558;
  t4082 = -1.*t2445*t4044;
  t4881 = -1.*t740*t3328;
  t4882 = -1.*t901*t3481;
  t4885 = t4881 + t3617 + t4882;
  t4115 = t2626*t3558;
  t4118 = t2445*t4044;
  t4905 = t740*t3328;
  t4906 = t901*t3481;
  t4907 = t4905 + t3705 + t4906;
  t4139 = -1.*t4044*t2470;
  t4146 = -1.*t3558*t2663;
  t4918 = -1.*t3328*t1009;
  t4919 = -1.*t3481*t1162;
  t4920 = t4918 + t3749 + t4919;
  t4182 = -1.*t2585*t3558;
  t4190 = -1.*t2402*t4044;
  t4938 = -1.*t283*t3328;
  t4939 = -1.*t601*t3481;
  t4942 = t4938 + t3777 + t4939;
  t4203 = t4044*t2470;
  t4204 = t3558*t2663;
  t4953 = t3328*t1009;
  t4954 = t3481*t1162;
  t4955 = t4953 + t3822 + t4954;
  t4231 = t2714*t3558;
  t4271 = t2402*t4270;
  t4359 = -1.*t2770*t3558;
  t4368 = -1.*t2445*t4270;
  t4404 = t2770*t3558;
  t4410 = t2445*t4270;
  t4437 = -1.*t4270*t2470;
  t4462 = -1.*t3558*t2827;
  t4531 = -1.*t2714*t3558;
  t4542 = -1.*t2402*t4270;
  t4597 = t4270*t2470;
  t4598 = t3558*t2827;
  t4667 = t2402*t4664;
  t4740 = -1.*t4664*t2445;
  t4741 = -1.*t2883*t3558;
  t4766 = -1.*t2402*t4664;
  t4787 = t2906*t3558;
  t4790 = t4664*t2470;
  t4801 = t4664*t2445;
  t4802 = t2883*t3558;
  t4829 = -1.*t2906*t3558;
  t4832 = -1.*t4664*t2470;
  t5108 = -1.*t1600*t3328;
  t5112 = -1.*t740*t4282;
  t5077 = t515*t3328;
  t5079 = t283*t4282;
  t5213 = t4282*t1009;
  t5218 = t3328*t1794;
  t5193 = -1.*t515*t3328;
  t5194 = -1.*t283*t4282;
  t5179 = -1.*t4282*t1009;
  t5181 = -1.*t3328*t1794;
  t5156 = t1600*t3328;
  t5157 = t740*t4282;
  t5298 = -1.*t4693*t740;
  t5300 = -1.*t2082*t3328;
  t5591 = t550*t3456;
  t5597 = t586*t3475;
  t5598 = t5591 + t5597 + t4869;
  t5265 = t283*t4693;
  t5343 = t2231*t3328;
  t5344 = t4693*t1009;
  t5651 = -1.*t550*t3456;
  t5657 = -1.*t586*t3475;
  t5660 = t5651 + t5657 + t4938;
  t5331 = -1.*t283*t4693;
  t5693 = -1.*t3456*t1145;
  t5694 = -1.*t3475*t1156;
  t5695 = t5693 + t5694 + t4918;
  t5707 = t850*t3456;
  t5711 = t894*t3475;
  t5712 = t5707 + t5711 + t4905;
  t5386 = -1.*t2231*t3328;
  t5392 = -1.*t4693*t1009;
  t5375 = t4693*t740;
  t5376 = t2082*t3328;
  t5548 = -1.*t850*t3456;
  t5551 = -1.*t894*t3475;
  t5552 = t5548 + t5551 + t4881;
  t5610 = t3456*t1145;
  t5611 = t3475*t1156;
  t5612 = t5610 + t5611 + t4953;
  t5798 = t3211 + t3212 + t3213 + t3215 + t3257 + t3294 + t3327;
  t5951 = t418*t3401;
  t5953 = t283*t5798;
  t5958 = t515*t3454;
  t5963 = t5951 + t5953 + t5958;
  t5823 = -1.*t418*t3401;
  t5824 = -1.*t283*t5798;
  t5825 = -1.*t515*t3454;
  t5826 = t5823 + t5824 + t5825;
  t5846 = -1.*t3401*t1043;
  t5847 = -1.*t5798*t1009;
  t5848 = -1.*t3454*t1129;
  t5849 = t5846 + t5847 + t5848;
  t5877 = t792*t3401;
  t5881 = t740*t5798;
  t5886 = t836*t3454;
  t5889 = t5877 + t5881 + t5886;
  t5900 = -1.*t792*t3401;
  t5901 = -1.*t740*t5798;
  t5907 = -1.*t836*t3454;
  t5908 = t5900 + t5901 + t5907;
  t5797 = t3401*t1043;
  t5799 = t5798*t1009;
  t5800 = t3454*t1129;
  t5801 = t5797 + t5799 + t5800;
  t6160 = t3255*t2209;
  t6163 = t935*t4642;
  t6164 = t1994*t3293;
  t6167 = t4631*t965;
  t6168 = t2224*t3325;
  t6170 = t4648*t1005;
  t6171 = t6160 + t6163 + t6164 + t6167 + t6168 + t6170;
  t6180 = -1.*t246*t4642;
  t6184 = -1.*t276*t4648;
  t6185 = t6180 + t6184;
  t6174 = -1.*t246*t3255;
  t6175 = -1.*t276*t3325;
  t6177 = t6174 + t6175;
  t6245 = t643*t4631;
  t6246 = t674*t4642;
  t6248 = t3255*t2079;
  t6249 = t2061*t3293;
  t6250 = t4648*t727;
  t6252 = t1994*t3325;
  t6253 = t6245 + t6246 + t6248 + t6249 + t6250 + t6252;
  t6226 = -1.*t3255*t2209;
  t6228 = -1.*t935*t4642;
  t6231 = -1.*t1994*t3293;
  t6232 = -1.*t4631*t965;
  t6233 = -1.*t2224*t3325;
  t6236 = -1.*t4648*t1005;
  t6237 = t6226 + t6228 + t6231 + t6232 + t6233 + t6236;
  t6221 = t3255*t674;
  t6222 = t643*t3293;
  t6223 = t727*t3325;
  t6224 = t6221 + t6222 + t6223;
  t6208 = -1.*t935*t3255;
  t6211 = -1.*t3293*t965;
  t6212 = -1.*t3325*t1005;
  t6216 = t6208 + t6211 + t6212;
  t6270 = -1.*t643*t4631;
  t6274 = -1.*t674*t4642;
  t6275 = -1.*t3255*t2079;
  t6276 = -1.*t2061*t3293;
  t6280 = -1.*t4648*t727;
  t6281 = -1.*t1994*t3325;
  t6282 = t6270 + t6274 + t6275 + t6276 + t6280 + t6281;
  t6296 = t246*t4642;
  t6297 = t276*t4648;
  t6301 = t6296 + t6297;
  t6292 = t246*t3255;
  t6293 = t276*t3325;
  t6294 = t6292 + t6293;
  t6324 = -1.*t3255*t674;
  t6326 = -1.*t643*t3293;
  t6329 = -1.*t727*t3325;
  t6330 = t6324 + t6326 + t6329;
  t6349 = t935*t3255;
  t6350 = t3293*t965;
  t6353 = t3325*t1005;
  t6355 = t6349 + t6350 + t6353;
  p_output1[0]=t1171*var2[0] + t919*var2[1] + t608*var2[2];
  p_output1[1]=t1272*t284*var2[0] + t1231*t284*var2[1] + t1201*t284*var2[2];
  p_output1[2]=t1462*t284*var2[0] + t1351*t284*var2[1] + t1327*t284*var2[2];
  p_output1[3]=t1982*var2[0] + t1780*var2[1] + t1588*var2[2];
  p_output1[4]=t2334*var2[0] + t2194*var2[1];
  p_output1[5]=t2352;
  p_output1[6]=t2364;
  p_output1[7]=t2377;
  p_output1[8]=(-1.*t2378*t2470 - 1.*t2417*t2475)*var2[0] + (-1.*t2378*t2445 - 1.*t2417*t2452)*var2[1] + (-1.*t2378*t2402 - 1.*t2417*t608)*var2[2];
  p_output1[9]=-1.*t2378*t2512*var2[0] - 1.*t2378*t2505*var2[1] - 1.*t2378*t2498*var2[2];
  p_output1[10]=(t2417*t2555 + t1272*t2378*t311)*var2[0] + (t2417*t2538 + t1231*t2378*t311)*var2[1] + (t1201*t2378*t311 + t2417*t601)*var2[2];
  p_output1[11]=(t2417*t2663 + t1462*t2378*t311)*var2[0] + (t2417*t2626 + t1351*t2378*t311)*var2[1] + (t2417*t2585 + t1327*t2378*t311)*var2[2];
  p_output1[12]=(t2417*t2827 - 1.*t2378*t2847)*var2[0] + (t2417*t2770 - 1.*t2378*t2806)*var2[1] + (t2417*t2714 - 1.*t2378*t2722)*var2[2];
  p_output1[13]=(t2417*t2906 - 1.*t2378*t2916)*var2[0] + (t2417*t2883 - 1.*t2378*t2889)*var2[1];
  p_output1[14]=0. + t2930 + t2932;
  p_output1[15]=0. + t2941 + t2942;
  p_output1[16]=t2975;
  p_output1[17]=(t2930 + t2932)*var2[0] + (t2941 + t2942)*var2[1] + t2975*var2[2];
  p_output1[18]=t2417*t2512*var2[0] + t2417*t2505*var2[1] + t2417*t2498*var2[2];
  p_output1[19]=(t2378*t2555 - 1.*t1272*t2417*t311)*var2[0] + (t2378*t2538 - 1.*t1231*t2417*t311)*var2[1] + (-1.*t1201*t2417*t311 + t2378*t601)*var2[2];
  p_output1[20]=(t2378*t2663 - 1.*t1462*t2417*t311)*var2[0] + (t2378*t2626 - 1.*t1351*t2417*t311)*var2[1] + (t2378*t2585 - 1.*t1327*t2417*t311)*var2[2];
  p_output1[21]=(t2378*t2827 + t2417*t2847)*var2[0] + (t2378*t2770 + t2417*t2806)*var2[1] + (t2378*t2714 + t2417*t2722)*var2[2];
  p_output1[22]=(t2378*t2906 + t2417*t2916)*var2[0] + (t2378*t2883 + t2417*t2889)*var2[1];
  p_output1[23]=0. + t2378*t2470 + t2417*t2475;
  p_output1[24]=0. + t2378*t2445 + t2417*t2452;
  p_output1[25]=t2378*t2402 + t2417*t608;
  p_output1[26]=(t3636*t608 + t2364*(t2377*t3525 + t2498*t3539 + t3501*t608 + t3509*t608) + t3596*t919 + t2377*(-1.*t2452*t3501 - 1.*t2364*t3525 - 1.*t2505*t3539 - 1.*t3509*t919))*var2[0] + (t2377*(t2475*t3501 + t1171*t3509 + t2352*t3525 + t2512*t3539) + t1171*t3789 + t3828*t608 + t2352*(-1.*t2377*t3525 - 1.*t2498*t3539 - 1.*t3501*t608 - 1.*t3509*t608))*var2[1] + (t2364*(-1.*t2475*t3501 - 1.*t1171*t3509 - 1.*t2352*t3525 - 1.*t2512*t3539) + t1171*t3715 + t3757*t919 + t2352*(t2452*t3501 + t2364*t3525 + t2505*t3539 + t3509*t919))*var2[2];
  p_output1[27]=(t1231*t284*t3596 + t1201*t284*t3636 + t2377*(-1.*t1231*t284*t3509 + t1231*t311*t3539 - 1.*t2364*t284*t3848 + t2452*t311*t3848 + t3877 + t3882) + t2364*(t1201*t284*t3509 - 1.*t1201*t311*t3539 + t3842 + t3844 + t2377*t284*t3848 - 1.*t311*t3848*t608))*var2[0] + (t1272*t284*t3789 + t1201*t284*t3828 + t2377*(t1272*t284*t3509 - 1.*t1272*t311*t3539 + t2352*t284*t3848 - 1.*t2475*t311*t3848 + t3973 + t3976) + t2352*(-1.*t1201*t284*t3509 + t1201*t311*t3539 - 1.*t2377*t284*t3848 + t3941 + t3942 + t311*t3848*t608))*var2[1] + (t1272*t284*t3715 + t1231*t284*t3757 + t2352*(t1231*t284*t3509 - 1.*t1231*t311*t3539 + t2364*t284*t3848 - 1.*t2452*t311*t3848 + t3909 + t3910) + t2364*(-1.*t1272*t284*t3509 + t1272*t311*t3539 - 1.*t2352*t284*t3848 + t2475*t311*t3848 + t3922 + t3923))*var2[2];
  p_output1[28]=(t1351*t284*t3596 + t1327*t284*t3636 + t2377*(-1.*t1351*t284*t3509 + t1351*t311*t3539 - 1.*t2364*t284*t4051 + t2452*t311*t4051 + t4080 + t4082) + t2364*(t1327*t284*t3509 - 1.*t1327*t311*t3539 + t4004 + t4045 + t2377*t284*t4051 - 1.*t311*t4051*t608))*var2[0] + (t1462*t284*t3789 + t1327*t284*t3828 + t2377*(t1462*t284*t3509 - 1.*t1462*t311*t3539 + t2352*t284*t4051 - 1.*t2475*t311*t4051 + t4203 + t4204) + t2352*(-1.*t1327*t284*t3509 + t1327*t311*t3539 - 1.*t2377*t284*t4051 + t4182 + t4190 + t311*t4051*t608))*var2[1] + (t1462*t284*t3715 + t1351*t284*t3757 + t2352*(t1351*t284*t3509 - 1.*t1351*t311*t3539 + t2364*t284*t4051 - 1.*t2452*t311*t4051 + t4115 + t4118) + t2364*(-1.*t1462*t284*t3509 + t1462*t311*t3539 - 1.*t2352*t284*t4051 + t2475*t311*t4051 + t4139 + t4146))*var2[2];
  p_output1[29]=(t1780*t3596 + t1588*t3636 + t2377*(-1.*t1780*t3509 - 1.*t2806*t3539 - 1.*t2364*t4312 - 1.*t2452*t4348 + t4359 + t4368) + t2364*(t1588*t3509 + t2722*t3539 + t4231 + t4271 + t2377*t4312 + t4348*t608))*var2[0] + (t1982*t3789 + t1588*t3828 + t2377*(t1982*t3509 + t2847*t3539 + t2352*t4312 + t2475*t4348 + t4597 + t4598) + t2352*(-1.*t1588*t3509 - 1.*t2722*t3539 - 1.*t2377*t4312 + t4531 + t4542 - 1.*t4348*t608))*var2[1] + (t1982*t3715 + t1780*t3757 + t2352*(t1780*t3509 + t2806*t3539 + t2364*t4312 + t2452*t4348 + t4404 + t4410) + t2364*(-1.*t1982*t3509 - 1.*t2847*t3539 - 1.*t2352*t4312 - 1.*t2475*t4348 + t4437 + t4462))*var2[2];
  p_output1[30]=(t2194*t3596 + t2377*(-1.*t2194*t3509 - 1.*t2889*t3539 - 1.*t2364*t4712 - 1.*t2452*t4735 + t4740 + t4741) + t2364*(t4667 + t2377*t4712 + t4735*t608))*var2[0] + (t2334*t3789 + t2377*(t2334*t3509 + t2916*t3539 + t2352*t4712 + t2475*t4735 + t4787 + t4790) + t2352*(-1.*t2377*t4712 + t4766 - 1.*t4735*t608))*var2[1] + (t2334*t3715 + t2194*t3757 + t2352*(t2194*t3509 + t2889*t3539 + t2364*t4712 + t2452*t4735 + t4801 + t4802) + t2364*(-1.*t2334*t3509 - 1.*t2916*t3539 - 1.*t2352*t4712 - 1.*t2475*t4735 + t4829 + t4832))*var2[2];
  p_output1[31]=t2364*t3596 + t2377*t3636;
  p_output1[32]=t2352*t3789 + t2377*t3828;
  p_output1[33]=t2352*t3715 + t2364*t3757;
  p_output1[34]=(t2538*t4871 + t4885*t601 + t2445*(t1201*t3481 + t3842 + t3844 + t3848*t601) + t2402*(-1.*t1231*t3481 + t3877 + t3882 - 1.*t3848*t901))*var2[0] + (t2402*(t1272*t3481 + t1162*t3848 + t3973 + t3976) + t2555*t4942 + t4955*t601 + t2470*(-1.*t1201*t3481 + t3941 + t3942 - 1.*t3848*t601))*var2[1] + (t2445*(-1.*t1272*t3481 - 1.*t1162*t3848 + t3922 + t3923) + t2555*t4907 + t2538*t4920 + t2470*(t1231*t3481 + t3909 + t3910 + t3848*t901))*var2[2];
  p_output1[35]=(t2626*t4871 + t2585*t4885 + t2445*(t1327*t3481 + t4004 + t4045 + t4051*t601) + t2402*(-1.*t1351*t3481 + t4080 + t4082 - 1.*t4051*t901))*var2[0] + (t2402*(t1462*t3481 + t1162*t4051 + t4203 + t4204) + t2663*t4942 + t2585*t4955 + t2470*(-1.*t1327*t3481 + t4182 + t4190 - 1.*t4051*t601))*var2[1] + (t2445*(-1.*t1462*t3481 - 1.*t1162*t4051 + t4139 + t4146) + t2663*t4907 + t2626*t4920 + t2470*(t1351*t3481 + t4115 + t4118 + t4051*t901))*var2[2];
  p_output1[36]=(t2770*t4871 + t2714*t4885 + t2445*(t1584*t3481 + t4231 + t4271 + t5077 + t5079 + t4308*t601) + t2402*(-1.*t1766*t3481 + t4359 + t4368 + t5108 + t5112 - 1.*t4308*t901))*var2[0] + (t2827*t4942 + t2714*t4955 + t2402*(t1965*t3481 + t1162*t4308 + t4597 + t4598 + t5213 + t5218) + t2470*(-1.*t1584*t3481 + t4531 + t4542 + t5193 + t5194 - 1.*t4308*t601))*var2[1] + (t2827*t4907 + t2770*t4920 + t2445*(-1.*t1965*t3481 - 1.*t1162*t4308 + t4437 + t4462 + t5179 + t5181) + t2470*(t1766*t3481 + t4404 + t4410 + t5156 + t5157 + t4308*t901))*var2[2];
  p_output1[37]=(t2883*t4871 + t2445*(t4667 + t5265 + t4707*t601) + t2402*(-1.*t2172*t3481 + t4740 + t4741 + t5298 + t5300 - 1.*t4707*t901))*var2[0] + (t2906*t4942 + t2402*(t2321*t3481 + t1162*t4707 + t4787 + t4790 + t5343 + t5344) + t2470*(t4766 + t5331 - 1.*t4707*t601))*var2[1] + (t2906*t4907 + t2883*t4920 + t2445*(-1.*t2321*t3481 - 1.*t1162*t4707 + t4829 + t4832 + t5386 + t5392) + t2470*(t2172*t3481 + t4801 + t4802 + t5375 + t5376 + t4707*t901))*var2[2];
  p_output1[38]=t2445*t4871 + t2402*t4885;
  p_output1[39]=t2470*t4942 + t2402*t4955;
  p_output1[40]=t2470*t4907 + t2445*t4920;
  p_output1[41]=((t1315*t3456 + t3475*t550 + t4041*t550 + t4021*t586)*t740 + t283*(-1.*t1336*t3456 - 1.*t1343*t3475 - 1.*t4041*t850 - 1.*t4021*t894))*var2[0] + (t283*(t1435*t3456 + t1438*t3475 + t1156*t4021 + t1145*t4041) + t1009*(-1.*t1315*t3456 - 1.*t3475*t550 - 1.*t4041*t550 - 1.*t4021*t586))*var2[1] + ((-1.*t1435*t3456 - 1.*t1438*t3475 - 1.*t1156*t4021 - 1.*t1145*t4041)*t740 + t1009*(t1336*t3456 + t1343*t3475 + t4041*t850 + t4021*t894))*var2[2];
  p_output1[42]=(t515*t5552 + t1600*t5598 + (t1560*t3456 + t1576*t3475 + t5077 + t5079 + t4267*t550 + t4260*t586)*t740 + t283*(-1.*t1720*t3456 - 1.*t1747*t3475 + t5108 + t5112 - 1.*t4267*t850 - 1.*t4260*t894))*var2[0] + (t283*(t1870*t3456 + t1932*t3475 + t1156*t4260 + t1145*t4267 + t5213 + t5218) + t515*t5612 + t1794*t5660 + t1009*(-1.*t1560*t3456 - 1.*t1576*t3475 + t5193 + t5194 - 1.*t4267*t550 - 1.*t4260*t586))*var2[1] + (t1600*t5695 + t1794*t5712 + (-1.*t1870*t3456 - 1.*t1932*t3475 - 1.*t1156*t4260 - 1.*t1145*t4267 + t5179 + t5181)*t740 + t1009*(t1720*t3456 + t1747*t3475 + t5156 + t5157 + t4267*t850 + t4260*t894))*var2[2];
  p_output1[43]=(t2082*t5598 + (t5265 + t4662*t550 + t4658*t586)*t740 + t283*(-1.*t2123*t3456 - 1.*t2163*t3475 + t5298 + t5300 - 1.*t4662*t850 - 1.*t4658*t894))*var2[0] + (t283*(t2310*t3456 + t2319*t3475 + t1156*t4658 + t1145*t4662 + t5343 + t5344) + t2231*t5660 + t1009*(t5331 - 1.*t4662*t550 - 1.*t4658*t586))*var2[1] + (t2082*t5695 + t2231*t5712 + (-1.*t2310*t3456 - 1.*t2319*t3475 - 1.*t1156*t4658 - 1.*t1145*t4662 + t5386 + t5392)*t740 + t1009*(t2123*t3456 + t2163*t3475 + t5375 + t5376 + t4662*t850 + t4658*t894))*var2[2];
  p_output1[44]=t283*t5552 + t5598*t740;
  p_output1[45]=t283*t5612 + t1009*t5660;
  p_output1[46]=t1009*t5712 + t5695*t740;
  p_output1[47]=(-0.15121*t1836 - 0.15121*t1863 + t515*t5908 + t1600*t5963 + (t1538*t3401 + t1524*t3454 + t418*t4258 + t5079 + t4246*t515 + t515*t5798)*t740 + t283*(-1.*t1690*t3401 - 1.*t1636*t3454 + t5112 - 1.*t1600*t5798 - 1.*t4258*t792 - 1.*t4246*t836))*var2[0] + (-0.15121*t1636 - 0.15121*t1690 + t283*(t1863*t3401 + t1836*t3454 + t1129*t4246 + t1043*t4258 + t5213 + t1794*t5798) + t1009*(-1.*t1538*t3401 - 1.*t1524*t3454 - 1.*t418*t4258 - 1.*t4246*t515 + t5194 - 1.*t515*t5798) + t515*t5801 + t1794*t5826)*var2[1] + (-0.15121*t1524 - 0.15121*t1538 + t1600*t5849 + t1794*t5889 + (-1.*t1863*t3401 - 1.*t1836*t3454 - 1.*t1129*t4246 - 1.*t1043*t4258 + t5179 - 1.*t1794*t5798)*t740 + t1009*(t1690*t3401 + t1636*t3454 + t5157 + t1600*t5798 + t4258*t792 + t4246*t836))*var2[2];
  p_output1[48]=(-0.15121*t2252 - 0.15121*t2303 + t2082*t5963 + (t418*t4651 + t4656*t515 + t5265)*t740 + t283*(-1.*t2095*t3401 - 1.*t2114*t3454 + t5298 - 1.*t2082*t5798 - 1.*t4651*t792 - 1.*t4656*t836))*var2[0] + (-0.15121*t2095 - 0.15121*t2114 + t1009*(-1.*t418*t4651 - 1.*t4656*t515 + t5331) + t283*(t2252*t3401 + t2303*t3454 + t1043*t4651 + t1129*t4656 + t5344 + t2231*t5798) + t2231*t5826)*var2[1] + (t2082*t5849 + t2231*t5889 + (-1.*t2252*t3401 - 1.*t2303*t3454 - 1.*t1043*t4651 - 1.*t1129*t4656 + t5392 - 1.*t2231*t5798)*t740 + t1009*(t2095*t3401 + t2114*t3454 + t5375 + t2082*t5798 + t4651*t792 + t4656*t836))*var2[2];
  p_output1[49]=-0.15121*t1043 - 0.15121*t1129 + t283*t5908 + t5963*t740;
  p_output1[50]=t283*t5801 + t1009*t5826 - 0.15121*t792 - 0.15121*t836;
  p_output1[51]=-0.15121*t418 - 0.15121*t515 + t1009*t5889 + t5849*t740;
  p_output1[52]=(-0.038749*t1994 + 1.e-6*t2209 - 0.28121*t2224 - 1.*t246*t6282 - 1.*t2079*t6294 - 1.*t6301*t674 + 4.e-6*(-1.*t276*t6282 - 1.*t1994*t6294 - 1.*t6301*t727))*var2[0] + (-0.28121*t1994 - 0.038749*t2061 + 1.e-6*t2079 - 1.*t246*t6171 - 1.*t2209*t6177 + 4.e-6*(-1.*t276*t6171 - 1.*t2224*t6177 - 1.*t1005*t6185) - 1.*t6185*t935)*var2[1] + (-1.*t2079*t6216 - 1.*t2209*t6224 - 1.*t6237*t674 + 4.e-6*(-1.*t1994*t6216 - 1.*t2224*t6224 - 1.*t1005*t6253 - 1.*t6237*t727) - 1.*t6253*t935)*var2[2];
  p_output1[53]=-0.28121*t1005 - 1.*t246*t6330 - 1.*t6294*t674 + 4.e-6*(-1.*t276*t6330 - 1.*t6294*t727) + 1.e-6*t935 - 0.038749*t965;
  p_output1[54]=-1.*t246*t6355 + 4.e-6*(-1.*t1005*t6177 - 1.*t276*t6355) - 0.038749*t643 + 1.e-6*t674 - 0.28121*t727 - 1.*t6177*t935;
  p_output1[55]=1.e-6*t246 - 0.28121*t276 - 1.*t6216*t674 + 4.e-6*(-1.*t1005*t6224 - 1.*t6216*t727) - 1.*t6224*t935;
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_fFrFoot_vec_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
