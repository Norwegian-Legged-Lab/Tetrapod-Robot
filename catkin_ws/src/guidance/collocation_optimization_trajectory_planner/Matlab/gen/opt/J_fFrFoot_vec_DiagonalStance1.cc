/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:09:24 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t108;
  double t60;
  double t224;
  double t182;
  double t185;
  double t217;
  double t225;
  double t230;
  double t91;
  double t107;
  double t240;
  double t246;
  double t248;
  double t374;
  double t368;
  double t294;
  double t295;
  double t306;
  double t328;
  double t340;
  double t342;
  double t354;
  double t426;
  double t432;
  double t433;
  double t270;
  double t614;
  double t279;
  double t282;
  double t579;
  double t594;
  double t596;
  double t615;
  double t618;
  double t635;
  double t636;
  double t638;
  double t649;
  double t653;
  double t661;
  double t667;
  double t675;
  double t697;
  double t713;
  double t718;
  double t726;
  double t746;
  double t748;
  double t753;
  double t770;
  double t778;
  double t783;
  double t524;
  double t857;
  double t860;
  double t868;
  double t870;
  double t879;
  double t894;
  double t895;
  double t905;
  double t916;
  double t919;
  double t921;
  double t922;
  double t924;
  double t937;
  double t938;
  double t948;
  double t488;
  double t493;
  double t518;
  double t362;
  double t439;
  double t474;
  double t805;
  double t815;
  double t821;
  double t729;
  double t785;
  double t799;
  double t984;
  double t985;
  double t987;
  double t923;
  double t949;
  double t955;
  double t1009;
  double t1238;
  double t1241;
  double t1245;
  double t1252;
  double t1255;
  double t1259;
  double t1347;
  double t1352;
  double t1360;
  double t1362;
  double t1371;
  double t1381;
  double t1382;
  double t1396;
  double t1485;
  double t1494;
  double t1504;
  double t1510;
  double t1535;
  double t1539;
  double t1541;
  double t1547;
  double t1631;
  double t1632;
  double t1637;
  double t1651;
  double t1660;
  double t1667;
  double t1679;
  double t1680;
  double t1736;
  double t1737;
  double t1750;
  double t1758;
  double t1763;
  double t1772;
  double t1786;
  double t1791;
  double t1847;
  double t1851;
  double t1853;
  double t1872;
  double t1875;
  double t1876;
  double t1878;
  double t1897;
  double t1898;
  double t1905;
  double t1928;
  double t869;
  double t880;
  double t907;
  double t908;
  double t962;
  double t990;
  double t993;
  double t619;
  double t657;
  double t677;
  double t678;
  double t804;
  double t822;
  double t829;
  double t236;
  double t266;
  double t268;
  double t484;
  double t525;
  double t528;
  double t274;
  double t533;
  double t550;
  double t2117;
  double t2136;
  double t679;
  double t842;
  double t912;
  double t999;
  double t1007;
  double t1015;
  double t1031;
  double t1047;
  double t1076;
  double t1080;
  double t1088;
  double t1090;
  double t1105;
  double t1112;
  double t1113;
  double t1114;
  double t1118;
  double t1128;
  double t1131;
  double t1132;
  double t1134;
  double t1136;
  double t1139;
  double t1152;
  double t1188;
  double t1200;
  double t1201;
  double t1203;
  double t1204;
  double t1211;
  double t1224;
  double t1281;
  double t1289;
  double t1296;
  double t1250;
  double t1267;
  double t1269;
  double t1271;
  double t1297;
  double t1306;
  double t1413;
  double t1418;
  double t1422;
  double t1369;
  double t1406;
  double t1408;
  double t1334;
  double t1335;
  double t1410;
  double t1424;
  double t1427;
  double t1571;
  double t1587;
  double t1591;
  double t1523;
  double t1558;
  double t1559;
  double t1468;
  double t1470;
  double t1561;
  double t1596;
  double t1601;
  double t1819;
  double t1823;
  double t1829;
  double t1759;
  double t1796;
  double t1803;
  double t1633;
  double t1664;
  double t1701;
  double t1711;
  double t1817;
  double t1833;
  double t1834;
  double t1954;
  double t1985;
  double t1991;
  double t1881;
  double t1930;
  double t1942;
  double t1839;
  double t1852;
  double t1863;
  double t1868;
  double t1951;
  double t1997;
  double t1998;
  double t2178;
  double t2179;
  double t2180;
  double t2188;
  double t2150;
  double t2155;
  double t2157;
  double t2167;
  double t2121;
  double t2129;
  double t2131;
  double t2652;
  double t2657;
  double t2663;
  double t2637;
  double t2642;
  double t2627;
  double t2635;
  double t2199;
  double t2205;
  double t2207;
  double t2218;
  double t2225;
  double t2228;
  double t2230;
  double t2235;
  double t2240;
  double t2271;
  double t2285;
  double t2310;
  double t2324;
  double t2341;
  double t2346;
  double t2347;
  double t2365;
  double t2367;
  double t2369;
  double t2401;
  double t2406;
  double t2426;
  double t2437;
  double t2438;
  double t2439;
  double t2456;
  double t2466;
  double t2475;
  double t2478;
  double t2485;
  double t2494;
  double t2510;
  double t2512;
  double t2527;
  double t2531;
  double t2542;
  double t2543;
  double t2563;
  double t2565;
  double t2567;
  double t2570;
  double t2571;
  double t2576;
  double t2587;
  double t2588;
  double t2590;
  double t2604;
  double t2607;
  double t2609;
  double t2062;
  double t2064;
  double t2073;
  double t2875;
  double t2877;
  double t2878;
  double t2879;
  double t2880;
  double t2891;
  double t2903;
  double t2919;
  double t2921;
  double t2927;
  double t2929;
  double t2943;
  double t2960;
  double t2961;
  double t2970;
  double t2971;
  double t2973;
  double t2982;
  double t2987;
  double t2999;
  double t3009;
  double t3011;
  double t3012;
  double t3013;
  double t3014;
  double t3019;
  double t3020;
  double t3021;
  double t3034;
  double t3035;
  double t3036;
  double t3037;
  double t3038;
  double t3040;
  double t2860;
  double t2866;
  double t2868;
  double t2871;
  double t2918;
  double t2935;
  double t2977;
  double t2979;
  double t2988;
  double t3025;
  double t3053;
  double t3073;
  double t3074;
  double t3083;
  double t3084;
  double t3085;
  double t3088;
  double t3110;
  double t3116;
  double t2079;
  double t2087;
  double t2094;
  double t3149;
  double t3161;
  double t844;
  double t3128;
  double t3129;
  double t3130;
  double t3181;
  double t2980;
  double t3118;
  double t3124;
  double t3174;
  double t3199;
  double t3210;
  double t3213;
  double t2052;
  double t2053;
  double t2060;
  double t1003;
  double t3664;
  double t3674;
  double t3693;
  double t3651;
  double t3219;
  double t3222;
  double t3232;
  double t3239;
  double t3309;
  double t3311;
  double t3325;
  double t3328;
  double t3378;
  double t3384;
  double t3387;
  double t3388;
  double t3423;
  double t3424;
  double t3425;
  double t3438;
  double t3501;
  double t3502;
  double t3503;
  double t3506;
  double t3563;
  double t3570;
  double t3577;
  double t3579;
  double t3869;
  double t3876;
  double t3878;
  double t3879;
  double t3880;
  double t3870;
  double t3890;
  double t3896;
  double t3900;
  double t3874;
  double t3881;
  double t3888;
  double t1340;
  double t1431;
  double t1458;
  double t1228;
  double t1310;
  double t1326;
  double t4158;
  double t4161;
  double t4162;
  double t4163;
  double t4164;
  double t4167;
  double t4171;
  double t4174;
  double t4175;
  double t4177;
  double t4185;
  double t4187;
  double t4196;
  double t4199;
  double t4200;
  double t4170;
  double t4188;
  double t4192;
  double t4218;
  double t4219;
  double t4220;
  double t4228;
  double t4229;
  double t4230;
  double t4193;
  double t4206;
  double t4207;
  double t4224;
  double t4231;
  double t4232;
  double t4243;
  double t4249;
  double t4252;
  double t1471;
  double t1613;
  double t1619;
  double t4440;
  double t4441;
  double t4445;
  double t4450;
  double t4455;
  double t4462;
  double t4465;
  double t4466;
  double t4447;
  double t4463;
  double t4467;
  double t4475;
  double t4478;
  double t4479;
  double t4483;
  double t4487;
  double t4512;
  double t4514;
  double t4520;
  double t4476;
  double t4503;
  double t4505;
  double t4534;
  double t4535;
  double t4559;
  double t4560;
  double t4566;
  double t4569;
  double t4576;
  double t1735;
  double t1835;
  double t1836;
  double t4510;
  double t4524;
  double t4526;
  double t4564;
  double t4577;
  double t4579;
  double t4597;
  double t4604;
  double t4605;
  double t1870;
  double t2014;
  double t2030;
  double t3650;
  double t3663;
  double t3712;
  double t3717;
  double t3742;
  double t3743;
  double t3764;
  double t3767;
  double t3791;
  double t3793;
  double t3814;
  double t3818;
  double t3861;
  double t3889;
  double t4766;
  double t4769;
  double t4770;
  double t3921;
  double t3927;
  double t4780;
  double t4781;
  double t4782;
  double t3968;
  double t3971;
  double t4807;
  double t4812;
  double t4818;
  double t3993;
  double t3996;
  double t4843;
  double t4848;
  double t4853;
  double t4042;
  double t4047;
  double t4873;
  double t4877;
  double t4879;
  double t4081;
  double t4099;
  double t4904;
  double t4905;
  double t4907;
  double t4157;
  double t4209;
  double t4280;
  double t4290;
  double t4310;
  double t4314;
  double t4346;
  double t4347;
  double t4379;
  double t4387;
  double t4413;
  double t4415;
  double t4533;
  double t4622;
  double t4624;
  double t4655;
  double t4672;
  double t4681;
  double t4697;
  double t4699;
  double t4712;
  double t4713;
  double t5071;
  double t5073;
  double t5060;
  double t5065;
  double t5176;
  double t5177;
  double t5152;
  double t5157;
  double t5119;
  double t5126;
  double t5097;
  double t5100;
  double t5211;
  double t5212;
  double t5541;
  double t5542;
  double t5543;
  double t5199;
  double t5243;
  double t5244;
  double t5622;
  double t5626;
  double t5627;
  double t5235;
  double t5663;
  double t5666;
  double t5669;
  double t5708;
  double t5709;
  double t5710;
  double t5286;
  double t5287;
  double t5263;
  double t5265;
  double t5506;
  double t5509;
  double t5512;
  double t5571;
  double t5573;
  double t5582;
  double t5892;
  double t6093;
  double t6094;
  double t6095;
  double t6096;
  double t5947;
  double t5950;
  double t5951;
  double t5954;
  double t5992;
  double t5996;
  double t5998;
  double t6002;
  double t6034;
  double t6035;
  double t6037;
  double t6038;
  double t6044;
  double t6050;
  double t6053;
  double t6056;
  double t5889;
  double t5893;
  double t5894;
  double t5895;
  double t6245;
  double t6246;
  double t6247;
  double t6248;
  double t6249;
  double t6251;
  double t6252;
  double t6284;
  double t6288;
  double t6289;
  double t6257;
  double t6259;
  double t6260;
  double t6401;
  double t6408;
  double t6413;
  double t6419;
  double t6420;
  double t6422;
  double t6426;
  double t6364;
  double t6372;
  double t6382;
  double t6386;
  double t6387;
  double t6388;
  double t6390;
  double t6355;
  double t6357;
  double t6359;
  double t6360;
  double t6335;
  double t6338;
  double t6343;
  double t6346;
  double t6486;
  double t6488;
  double t6489;
  double t6490;
  double t6498;
  double t6501;
  double t6514;
  double t6538;
  double t6543;
  double t6553;
  double t6526;
  double t6527;
  double t6531;
  double t6608;
  double t6609;
  double t6612;
  double t6624;
  double t6700;
  double t6712;
  double t6713;
  double t6715;
  t108 = Cos(var1[11]);
  t60 = Cos(var1[10]);
  t224 = -1. + t108;
  t182 = -1.*t108;
  t185 = 1. + t182;
  t217 = 1.6e-11*t185;
  t225 = 1.6e-11*t224;
  t230 = -1. + t217 + t225;
  t91 = -1.*t60;
  t107 = 1. + t91;
  t240 = 4.e-6*t224;
  t246 = -4.e-6*t108;
  t248 = t240 + t246;
  t374 = Sin(var1[10]);
  t368 = Cos(var1[9]);
  t294 = -1. + t60;
  t295 = 1.6e-11*t294;
  t306 = 1. + t295;
  t328 = t306*t230;
  t340 = 4.e-6*t107*t248;
  t342 = t328 + t340;
  t354 = Sin(var1[9]);
  t426 = 4.e-6*t230*t374;
  t432 = -1.*t248*t374;
  t433 = t426 + t432;
  t270 = Cos(var1[4]);
  t614 = Sin(var1[11]);
  t279 = Sin(var1[4]);
  t282 = Cos(var1[5]);
  t579 = -1.000000000016*t185;
  t594 = 1. + t579;
  t596 = 0.004352*t594;
  t615 = -0.9999910000159999*t614;
  t618 = t596 + t615;
  t635 = -1. + t217;
  t636 = 4.e-6*t635;
  t638 = 3.999964e-6*t185;
  t649 = -1.7408e-8*t614;
  t653 = t636 + t638 + t649;
  t661 = 0.999991*t108;
  t667 = 0.004352*t614;
  t675 = t225 + t661 + t667;
  t697 = -4.e-6*t374*t618;
  t713 = t306*t653;
  t718 = 4.e-6*t107*t675;
  t726 = 0. + t697 + t713 + t718;
  t746 = -1.000000000016*t107;
  t748 = 1. + t746;
  t753 = t748*t618;
  t770 = 4.e-6*t374*t653;
  t778 = -1.*t374*t675;
  t783 = 0. + t753 + t770 + t778;
  t524 = Sin(var1[5]);
  t857 = -1.7408e-8*t185;
  t860 = -3.999964e-6*t614;
  t868 = t857 + t860;
  t870 = 0.999991*t594;
  t879 = t870 + t667;
  t894 = -0.004352*t108;
  t895 = 0.999991*t614;
  t905 = t894 + t895;
  t916 = t306*t868;
  t919 = -4.e-6*t374*t879;
  t921 = 4.e-6*t107*t905;
  t922 = 0. + t916 + t919 + t921;
  t924 = 4.e-6*t374*t868;
  t937 = t748*t879;
  t938 = -1.*t374*t905;
  t948 = 0. + t924 + t937 + t938;
  t488 = t368*t342;
  t493 = t354*t433;
  t518 = t488 + t493;
  t362 = -1.*t342*t354;
  t439 = t368*t433;
  t474 = t362 + t439;
  t805 = t368*t726;
  t815 = t354*t783;
  t821 = 0. + t805 + t815;
  t729 = -1.*t354*t726;
  t785 = t368*t783;
  t799 = 0. + t729 + t785;
  t984 = t368*t922;
  t985 = t354*t948;
  t987 = 0. + t984 + t985;
  t923 = -1.*t354*t922;
  t949 = t368*t948;
  t955 = 0. + t923 + t949;
  t1009 = -1.*t474*t524;
  t1238 = 4.e-6*t60*t230;
  t1241 = -1.*t60*t248;
  t1245 = t1238 + t1241;
  t1252 = -1.6e-11*t230*t374;
  t1255 = 4.e-6*t248*t374;
  t1259 = t1252 + t1255;
  t1347 = -1.000000000016*t374*t618;
  t1352 = 4.e-6*t60*t653;
  t1360 = -1.*t60*t675;
  t1362 = t1347 + t1352 + t1360;
  t1371 = -4.e-6*t60*t618;
  t1381 = -1.6e-11*t374*t653;
  t1382 = 4.e-6*t374*t675;
  t1396 = t1371 + t1381 + t1382;
  t1485 = 4.e-6*t60*t868;
  t1494 = -1.000000000016*t374*t879;
  t1504 = -1.*t60*t905;
  t1510 = t1485 + t1494 + t1504;
  t1535 = -1.6e-11*t374*t868;
  t1539 = -4.e-6*t60*t879;
  t1541 = 4.e-6*t374*t905;
  t1547 = t1535 + t1539 + t1541;
  t1631 = 0.004352*t108;
  t1632 = t1631 + t615;
  t1637 = -0.9999910000159999*t108;
  t1651 = -0.00435200000006963*t614;
  t1660 = t1637 + t1651;
  t1667 = -1.7408e-8*t108;
  t1679 = 3.999964000064e-6*t614;
  t1680 = t1667 + t1679;
  t1736 = 4.e-6*t107*t1632;
  t1737 = -4.e-6*t374*t1660;
  t1750 = t306*t1680;
  t1758 = t1736 + t1737 + t1750;
  t1763 = -1.*t374*t1632;
  t1772 = t748*t1660;
  t1786 = 4.e-6*t374*t1680;
  t1791 = t1763 + t1772 + t1786;
  t1847 = -3.999964e-6*t108;
  t1851 = t1847 + t649;
  t1853 = t661 + t667;
  t1872 = -4.e-6*t374*t1632;
  t1875 = t306*t1851;
  t1876 = 4.e-6*t107*t1853;
  t1878 = t1872 + t1875 + t1876;
  t1897 = t748*t1632;
  t1898 = 4.e-6*t374*t1851;
  t1905 = -1.*t374*t1853;
  t1928 = t1897 + t1898 + t1905;
  t869 = 4.e-6*t107*t868;
  t880 = t374*t879;
  t907 = t60*t905;
  t908 = 0. + t869 + t880 + t907;
  t962 = t282*t955;
  t990 = -1.*t987*t524;
  t993 = 0. + t962 + t990;
  t619 = t374*t618;
  t657 = 4.e-6*t107*t653;
  t677 = t60*t675;
  t678 = 0. + t619 + t657 + t677;
  t804 = t282*t799;
  t822 = -1.*t821*t524;
  t829 = 0. + t804 + t822;
  t236 = 4.e-6*t107*t230;
  t266 = t60*t248;
  t268 = t236 + t266;
  t484 = t282*t474;
  t525 = -1.*t518*t524;
  t528 = t484 + t525;
  t274 = t268*t270;
  t533 = -1.*t279*t528;
  t550 = t274 + t533;
  t2117 = Sin(var1[3]);
  t2136 = Cos(var1[3]);
  t679 = t270*t678;
  t842 = -1.*t279*t829;
  t912 = t270*t908;
  t999 = -1.*t279*t993;
  t1007 = -1.*t282*t518;
  t1015 = t1007 + t1009;
  t1031 = -1.*t282*t821;
  t1047 = -1.*t799*t524;
  t1076 = t1031 + t1047;
  t1080 = -1.*t282*t987;
  t1088 = -1.*t955*t524;
  t1090 = t1080 + t1088;
  t1105 = -1.*t368*t342;
  t1112 = -1.*t354*t433;
  t1113 = t1105 + t1112;
  t1114 = t282*t1113;
  t1118 = t1114 + t1009;
  t1128 = -1.*t368*t726;
  t1131 = -1.*t354*t783;
  t1132 = t1128 + t1131;
  t1134 = t282*t1132;
  t1136 = t729 + t785;
  t1139 = -1.*t1136*t524;
  t1152 = t1134 + t1139;
  t1188 = -1.*t368*t922;
  t1200 = -1.*t354*t948;
  t1201 = t1188 + t1200;
  t1203 = t282*t1201;
  t1204 = t923 + t949;
  t1211 = -1.*t1204*t524;
  t1224 = t1203 + t1211;
  t1281 = t1245*t354;
  t1289 = t368*t1259;
  t1296 = t1281 + t1289;
  t1250 = t368*t1245;
  t1267 = -1.*t354*t1259;
  t1269 = t1250 + t1267;
  t1271 = t282*t1269;
  t1297 = -1.*t1296*t524;
  t1306 = t1271 + t1297;
  t1413 = t354*t1362;
  t1418 = t368*t1396;
  t1422 = t1413 + t1418;
  t1369 = t368*t1362;
  t1406 = -1.*t354*t1396;
  t1408 = t1369 + t1406;
  t1334 = t60*t618;
  t1335 = t1334 + t770 + t778;
  t1410 = t282*t1408;
  t1424 = -1.*t1422*t524;
  t1427 = t1410 + t1424;
  t1571 = t354*t1510;
  t1587 = t368*t1547;
  t1591 = t1571 + t1587;
  t1523 = t368*t1510;
  t1558 = -1.*t354*t1547;
  t1559 = t1523 + t1558;
  t1468 = t60*t879;
  t1470 = t924 + t1468 + t938;
  t1561 = t282*t1559;
  t1596 = -1.*t1591*t524;
  t1601 = t1561 + t1596;
  t1819 = t368*t1758;
  t1823 = t354*t1791;
  t1829 = t1819 + t1823;
  t1759 = -1.*t354*t1758;
  t1796 = t368*t1791;
  t1803 = t1759 + t1796;
  t1633 = t60*t1632;
  t1664 = t374*t1660;
  t1701 = 4.e-6*t107*t1680;
  t1711 = t1633 + t1664 + t1701;
  t1817 = t282*t1803;
  t1833 = -1.*t1829*t524;
  t1834 = t1817 + t1833;
  t1954 = t368*t1878;
  t1985 = t354*t1928;
  t1991 = t1954 + t1985;
  t1881 = -1.*t354*t1878;
  t1930 = t368*t1928;
  t1942 = t1881 + t1930;
  t1839 = t374*t1632;
  t1852 = 4.e-6*t107*t1851;
  t1863 = t60*t1853;
  t1868 = t1839 + t1852 + t1863;
  t1951 = t282*t1942;
  t1997 = -1.*t1991*t524;
  t1998 = t1951 + t1997;
  t2178 = t282*t987;
  t2179 = t955*t524;
  t2180 = 0. + t2178 + t2179;
  t2188 = 0. + t912 + t999;
  t2150 = t282*t821;
  t2155 = t799*t524;
  t2157 = 0. + t2150 + t2155;
  t2167 = 0. + t679 + t842;
  t2121 = t282*t518;
  t2129 = t474*t524;
  t2131 = t2121 + t2129;
  t2652 = t2136*t2131;
  t2657 = -1.*t2117*t550;
  t2663 = t2652 + t2657;
  t2637 = t2136*t2157;
  t2642 = -1.*t2117*t2167;
  t2627 = t2136*t2180;
  t2635 = -1.*t2117*t2188;
  t2199 = -1.*t268*t279;
  t2205 = -1.*t270*t528;
  t2207 = t2199 + t2205;
  t2218 = -1.*t678*t279;
  t2225 = -1.*t270*t829;
  t2228 = t2218 + t2225;
  t2230 = -1.*t908*t279;
  t2235 = -1.*t270*t993;
  t2240 = t2230 + t2235;
  t2271 = t804 + t822;
  t2285 = t962 + t990;
  t2310 = t1113*t524;
  t2324 = t484 + t2310;
  t2341 = t282*t1136;
  t2346 = t1132*t524;
  t2347 = t2341 + t2346;
  t2365 = t282*t1204;
  t2367 = t1201*t524;
  t2369 = t2365 + t2367;
  t2401 = t282*t1296;
  t2406 = t1269*t524;
  t2426 = t2401 + t2406;
  t2437 = t270*t433;
  t2438 = -1.*t279*t1306;
  t2439 = t2437 + t2438;
  t2456 = t282*t1422;
  t2466 = t1408*t524;
  t2475 = t2456 + t2466;
  t2478 = t270*t1335;
  t2485 = -1.*t279*t1427;
  t2494 = t2478 + t2485;
  t2510 = t282*t1591;
  t2512 = t1559*t524;
  t2527 = t2510 + t2512;
  t2531 = t270*t1470;
  t2542 = -1.*t279*t1601;
  t2543 = t2531 + t2542;
  t2563 = t282*t1829;
  t2565 = t1803*t524;
  t2567 = t2563 + t2565;
  t2570 = t270*t1711;
  t2571 = -1.*t279*t1834;
  t2576 = t2570 + t2571;
  t2587 = t282*t1991;
  t2588 = t1942*t524;
  t2590 = t2587 + t2588;
  t2604 = t270*t1868;
  t2607 = -1.*t279*t1998;
  t2609 = t2604 + t2607;
  t2062 = t678*t279;
  t2064 = t270*t829;
  t2073 = 0. + t2062 + t2064;
  t2875 = -1.26e-8*var1[11];
  t2877 = 1. + t225;
  t2878 = -0.14871*t2877;
  t2879 = -1.64779999997447e-7*t185;
  t2880 = -1.59556e-7*t224;
  t2891 = -1.199987999968e-6*t614;
  t2903 = t2875 + t2878 + t2879 + t2880 + t2891;
  t2919 = 0.803147*t594;
  t2921 = 0.50315000001605*t185;
  t2927 = 0.00130540515936178*t614;
  t2929 = t2919 + t2921 + t2927;
  t2943 = -5.04e-14*var1[11];
  t2960 = -0.03988959484*t185;
  t2961 = 6.38224e-13*t224;
  t2970 = -0.041195*t108;
  t2971 = 0.299996999992*t614;
  t2973 = t2943 + t2960 + t2961 + t2970 + t2971;
  t2982 = -1.*t368;
  t2987 = 1. + t2982;
  t2999 = -0.15121*t354;
  t3009 = -1.2484e-7*var1[10];
  t3011 = 2.479936e-18*t107;
  t3012 = -1.54996e-7*t294;
  t3013 = 1.124840000016e-6*t374;
  t3014 = t306*t2903;
  t3019 = -4.e-6*t374*t2929;
  t3020 = 4.e-6*t107*t2973;
  t3021 = t3009 + t3011 + t3012 + t3013 + t3014 + t3019 + t3020;
  t3034 = 0.281210000008499*t107;
  t3035 = -0.03874900000062*t374;
  t3036 = 4.e-6*t374*t2903;
  t3037 = t748*t2929;
  t3038 = -1.*t374*t2973;
  t3040 = t3034 + t3035 + t3036 + t3037 + t3038;
  t2860 = -4.9936e-13*var1[10];
  t2866 = -0.038749*t107;
  t2868 = 6.19984e-13*t294;
  t2871 = -0.281210000004*t374;
  t2918 = 4.e-6*t107*t2903;
  t2935 = t374*t2929;
  t2977 = t60*t2973;
  t2979 = 0. + t2860 + t2866 + t2868 + t2871 + t2918 + t2935 + t2977;
  t2988 = 0.15121*t2987;
  t3025 = -1.*t354*t3021;
  t3053 = t368*t3040;
  t3073 = t2988 + t2999 + t3025 + t3053;
  t3074 = t282*t3073;
  t3083 = -0.15121*t2987;
  t3084 = t368*t3021;
  t3085 = t354*t3040;
  t3088 = t3083 + t2999 + t3084 + t3085;
  t3110 = -1.*t3088*t524;
  t3116 = 0. + t3074 + t3110;
  t2079 = t268*t279;
  t2087 = t270*t528;
  t2094 = t2079 + t2087;
  t3149 = t270*t2979;
  t3161 = -1.*t279*t3116;
  t844 = t679 + t842;
  t3128 = t2979*t279;
  t3129 = t270*t3116;
  t3130 = 0. + t3128 + t3129;
  t3181 = 0. + t3149 + t3161;
  t2980 = -1.*t2979*t279;
  t3118 = -1.*t270*t3116;
  t3124 = t2980 + t3118;
  t3174 = t3149 + t3161;
  t3199 = t282*t3088;
  t3210 = t3073*t524;
  t3213 = 0. + t3199 + t3210;
  t2052 = t908*t279;
  t2053 = t270*t993;
  t2060 = 0. + t2052 + t2053;
  t1003 = t912 + t999;
  t3664 = -1.*t282*t3088;
  t3674 = -1.*t3073*t524;
  t3693 = t3664 + t3674;
  t3651 = t3074 + t3110;
  t3219 = t2131*t3213;
  t3222 = t2094*t3130;
  t3232 = t550*t3181;
  t3239 = t3219 + t3222 + t3232;
  t3309 = -1.*t2157*t3213;
  t3311 = -1.*t2073*t3130;
  t3325 = -1.*t2167*t3181;
  t3328 = t3309 + t3311 + t3325;
  t3378 = t2157*t3213;
  t3384 = t2073*t3130;
  t3387 = t2167*t3181;
  t3388 = t3378 + t3384 + t3387;
  t3423 = -1.*t3213*t2180;
  t3424 = -1.*t3130*t2060;
  t3425 = -1.*t3181*t2188;
  t3438 = t3423 + t3424 + t3425;
  t3501 = -1.*t2131*t3213;
  t3502 = -1.*t2094*t3130;
  t3503 = -1.*t550*t3181;
  t3506 = t3501 + t3502 + t3503;
  t3563 = t3213*t2180;
  t3570 = t3130*t2060;
  t3577 = t3181*t2188;
  t3579 = t3563 + t3570 + t3577;
  t3869 = -0.15121*t368;
  t3876 = 0.15121*t354;
  t3878 = -1.*t368*t3021;
  t3879 = -1.*t354*t3040;
  t3880 = t3869 + t3876 + t3878 + t3879;
  t3870 = t3869 + t2999 + t3025 + t3053;
  t3890 = t282*t3880;
  t3896 = -1.*t3870*t524;
  t3900 = t3890 + t3896;
  t3874 = t282*t3870;
  t3881 = t3880*t524;
  t3888 = t3874 + t3881;
  t1340 = t1335*t279;
  t1431 = t270*t1427;
  t1458 = t1340 + t1431;
  t1228 = t433*t279;
  t1310 = t270*t1306;
  t1326 = t1228 + t1310;
  t4158 = -0.03874900000062*t60;
  t4161 = 0.281210000008499*t374;
  t4162 = 4.e-6*t60*t2903;
  t4163 = -1.000000000016*t374*t2929;
  t4164 = -1.*t60*t2973;
  t4167 = t4158 + t4161 + t4162 + t4163 + t4164;
  t4171 = 1.124840000016e-6*t60;
  t4174 = 1.5499600000248e-7*t374;
  t4175 = -1.6e-11*t374*t2903;
  t4177 = -4.e-6*t60*t2929;
  t4185 = 4.e-6*t374*t2973;
  t4187 = -1.2484e-7 + t4171 + t4174 + t4175 + t4177 + t4185;
  t4196 = t368*t4167;
  t4199 = -1.*t354*t4187;
  t4200 = t4196 + t4199;
  t4170 = t354*t4167;
  t4188 = t368*t4187;
  t4192 = t4170 + t4188;
  t4218 = -0.281210000004*t60;
  t4219 = t60*t2929;
  t4220 = -4.9936e-13 + t4218 + t3035 + t3036 + t4219 + t3038;
  t4228 = t282*t4200;
  t4229 = -1.*t4192*t524;
  t4230 = t4228 + t4229;
  t4193 = t282*t4192;
  t4206 = t4200*t524;
  t4207 = t4193 + t4206;
  t4224 = t4220*t279;
  t4231 = t270*t4230;
  t4232 = t4224 + t4231;
  t4243 = t270*t4220;
  t4249 = -1.*t279*t4230;
  t4252 = t4243 + t4249;
  t1471 = t1470*t279;
  t1613 = t270*t1601;
  t1619 = t1471 + t1613;
  t4440 = 0.00130540515936178*t108;
  t4441 = -0.2999969999968001*t614;
  t4445 = t4440 + t4441;
  t4450 = -1.199987999968e-6*t108;
  t4455 = -5.2216206374471e-9*t614;
  t4462 = -1.26e-8 + t4450 + t4455;
  t4465 = 0.299996999992*t108;
  t4466 = -5.04e-14 + t4465 + t2927;
  t4447 = -4.e-6*t374*t4445;
  t4463 = t306*t4462;
  t4467 = 4.e-6*t107*t4466;
  t4475 = t4447 + t4463 + t4467;
  t4478 = t748*t4445;
  t4479 = 4.e-6*t374*t4462;
  t4483 = -1.*t374*t4466;
  t4487 = t4478 + t4479 + t4483;
  t4512 = -1.*t354*t4475;
  t4514 = t368*t4487;
  t4520 = t4512 + t4514;
  t4476 = t368*t4475;
  t4503 = t354*t4487;
  t4505 = t4476 + t4503;
  t4534 = t374*t4445;
  t4535 = 4.e-6*t107*t4462;
  t4559 = t60*t4466;
  t4560 = t4534 + t4535 + t4559;
  t4566 = t282*t4520;
  t4569 = -1.*t4505*t524;
  t4576 = t4566 + t4569;
  t1735 = t1711*t279;
  t1835 = t270*t1834;
  t1836 = t1735 + t1835;
  t4510 = t282*t4505;
  t4524 = t4520*t524;
  t4526 = t4510 + t4524;
  t4564 = t4560*t279;
  t4577 = t270*t4576;
  t4579 = t4564 + t4577;
  t4597 = t270*t4560;
  t4604 = -1.*t279*t4576;
  t4605 = t4597 + t4604;
  t1870 = t1868*t279;
  t2014 = t270*t1998;
  t2030 = t1870 + t2014;
  t3650 = t528*t3213;
  t3663 = t2131*t3651;
  t3712 = -1.*t2271*t3213;
  t3717 = -1.*t2157*t3651;
  t3742 = t2271*t3213;
  t3743 = t2157*t3651;
  t3764 = -1.*t3651*t2180;
  t3767 = -1.*t3213*t2285;
  t3791 = -1.*t528*t3213;
  t3793 = -1.*t2131*t3651;
  t3814 = t3651*t2180;
  t3818 = t3213*t2285;
  t3861 = t2324*t3213;
  t3889 = t2131*t3888;
  t4766 = t268*t2979;
  t4769 = t528*t3116;
  t4770 = t4766 + t3219 + t4769;
  t3921 = -1.*t2347*t3213;
  t3927 = -1.*t2157*t3888;
  t4780 = -1.*t678*t2979;
  t4781 = -1.*t829*t3116;
  t4782 = t4780 + t3309 + t4781;
  t3968 = t2347*t3213;
  t3971 = t2157*t3888;
  t4807 = t678*t2979;
  t4812 = t829*t3116;
  t4818 = t4807 + t3378 + t4812;
  t3993 = -1.*t3888*t2180;
  t3996 = -1.*t3213*t2369;
  t4843 = -1.*t2979*t908;
  t4848 = -1.*t3116*t993;
  t4853 = t4843 + t3423 + t4848;
  t4042 = -1.*t2324*t3213;
  t4047 = -1.*t2131*t3888;
  t4873 = -1.*t268*t2979;
  t4877 = -1.*t528*t3116;
  t4879 = t4873 + t3501 + t4877;
  t4081 = t3888*t2180;
  t4099 = t3213*t2369;
  t4904 = t2979*t908;
  t4905 = t3116*t993;
  t4907 = t4904 + t3563 + t4905;
  t4157 = t2426*t3213;
  t4209 = t2131*t4207;
  t4280 = -1.*t2475*t3213;
  t4290 = -1.*t2157*t4207;
  t4310 = t2475*t3213;
  t4314 = t2157*t4207;
  t4346 = -1.*t4207*t2180;
  t4347 = -1.*t3213*t2527;
  t4379 = -1.*t2426*t3213;
  t4387 = -1.*t2131*t4207;
  t4413 = t4207*t2180;
  t4415 = t3213*t2527;
  t4533 = t2131*t4526;
  t4622 = -1.*t4526*t2157;
  t4624 = -1.*t2567*t3213;
  t4655 = -1.*t2131*t4526;
  t4672 = t2590*t3213;
  t4681 = t4526*t2180;
  t4697 = t4526*t2157;
  t4699 = t2567*t3213;
  t4712 = -1.*t2590*t3213;
  t4713 = -1.*t4526*t2180;
  t5071 = -1.*t1335*t2979;
  t5073 = -1.*t678*t4220;
  t5060 = t433*t2979;
  t5065 = t268*t4220;
  t5176 = t4220*t908;
  t5177 = t2979*t1470;
  t5152 = -1.*t433*t2979;
  t5157 = -1.*t268*t4220;
  t5119 = -1.*t4220*t908;
  t5126 = -1.*t2979*t1470;
  t5097 = t1335*t2979;
  t5100 = t678*t4220;
  t5211 = -1.*t4560*t678;
  t5212 = -1.*t1711*t2979;
  t5541 = t474*t3073;
  t5542 = t518*t3088;
  t5543 = t5541 + t5542 + t4766;
  t5199 = t268*t4560;
  t5243 = t1868*t2979;
  t5244 = t4560*t908;
  t5622 = -1.*t474*t3073;
  t5626 = -1.*t518*t3088;
  t5627 = t5622 + t5626 + t4873;
  t5235 = -1.*t268*t4560;
  t5663 = -1.*t3073*t955;
  t5666 = -1.*t3088*t987;
  t5669 = t5663 + t5666 + t4843;
  t5708 = t799*t3073;
  t5709 = t821*t3088;
  t5710 = t5708 + t5709 + t4807;
  t5286 = -1.*t1868*t2979;
  t5287 = -1.*t4560*t908;
  t5263 = t4560*t678;
  t5265 = t1711*t2979;
  t5506 = -1.*t799*t3073;
  t5509 = -1.*t821*t3088;
  t5512 = t5506 + t5509 + t4780;
  t5571 = t3073*t955;
  t5573 = t3088*t987;
  t5582 = t5571 + t5573 + t4904;
  t5892 = t2860 + t2866 + t2868 + t2871 + t2918 + t2935 + t2977;
  t6093 = t342*t3021;
  t6094 = t268*t5892;
  t6095 = t433*t3040;
  t6096 = t6093 + t6094 + t6095;
  t5947 = -1.*t342*t3021;
  t5950 = -1.*t268*t5892;
  t5951 = -1.*t433*t3040;
  t5954 = t5947 + t5950 + t5951;
  t5992 = -1.*t3021*t922;
  t5996 = -1.*t5892*t908;
  t5998 = -1.*t3040*t948;
  t6002 = t5992 + t5996 + t5998;
  t6034 = t726*t3021;
  t6035 = t678*t5892;
  t6037 = t783*t3040;
  t6038 = t6034 + t6035 + t6037;
  t6044 = -1.*t726*t3021;
  t6050 = -1.*t678*t5892;
  t6053 = -1.*t783*t3040;
  t6056 = t6044 + t6050 + t6053;
  t5889 = t3021*t922;
  t5893 = t5892*t908;
  t5894 = t3040*t948;
  t5895 = t5889 + t5893 + t5894;
  t6245 = t2903*t1851;
  t6246 = t868*t4462;
  t6247 = t1632*t2929;
  t6248 = t4445*t879;
  t6249 = t1853*t2973;
  t6251 = t4466*t905;
  t6252 = t6245 + t6246 + t6247 + t6248 + t6249 + t6251;
  t6284 = -1.*t230*t4462;
  t6288 = -1.*t248*t4466;
  t6289 = t6284 + t6288;
  t6257 = -1.*t230*t2903;
  t6259 = -1.*t248*t2973;
  t6260 = t6257 + t6259;
  t6401 = t618*t4445;
  t6408 = t653*t4462;
  t6413 = t2903*t1680;
  t6419 = t1660*t2929;
  t6420 = t4466*t675;
  t6422 = t1632*t2973;
  t6426 = t6401 + t6408 + t6413 + t6419 + t6420 + t6422;
  t6364 = -1.*t2903*t1851;
  t6372 = -1.*t868*t4462;
  t6382 = -1.*t1632*t2929;
  t6386 = -1.*t4445*t879;
  t6387 = -1.*t1853*t2973;
  t6388 = -1.*t4466*t905;
  t6390 = t6364 + t6372 + t6382 + t6386 + t6387 + t6388;
  t6355 = t2903*t653;
  t6357 = t618*t2929;
  t6359 = t675*t2973;
  t6360 = t6355 + t6357 + t6359;
  t6335 = -1.*t868*t2903;
  t6338 = -1.*t2929*t879;
  t6343 = -1.*t2973*t905;
  t6346 = t6335 + t6338 + t6343;
  t6486 = -1.*t618*t4445;
  t6488 = -1.*t653*t4462;
  t6489 = -1.*t2903*t1680;
  t6490 = -1.*t1660*t2929;
  t6498 = -1.*t4466*t675;
  t6501 = -1.*t1632*t2973;
  t6514 = t6486 + t6488 + t6489 + t6490 + t6498 + t6501;
  t6538 = t230*t4462;
  t6543 = t248*t4466;
  t6553 = t6538 + t6543;
  t6526 = t230*t2903;
  t6527 = t248*t2973;
  t6531 = t6526 + t6527;
  t6608 = -1.*t2903*t653;
  t6609 = -1.*t618*t2929;
  t6612 = -1.*t675*t2973;
  t6624 = t6608 + t6609 + t6612;
  t6700 = t868*t2903;
  t6712 = t2929*t879;
  t6713 = t2973*t905;
  t6715 = t6700 + t6712 + t6713;
  p_output1[0]=t1003*var2[0] + t844*var2[1] + t550*var2[2];
  p_output1[1]=t1090*t270*var2[0] + t1076*t270*var2[1] + t1015*t270*var2[2];
  p_output1[2]=t1224*t270*var2[0] + t1152*t270*var2[1] + t1118*t270*var2[2];
  p_output1[3]=t1619*var2[0] + t1458*var2[1] + t1326*var2[2];
  p_output1[4]=t2030*var2[0] + t1836*var2[1];
  p_output1[5]=t2060;
  p_output1[6]=t2073;
  p_output1[7]=t2094;
  p_output1[8]=(-1.*t2117*t2180 - 1.*t2136*t2188)*var2[0] + (-1.*t2117*t2157 - 1.*t2136*t2167)*var2[1] + (-1.*t2117*t2131 - 1.*t2136*t550)*var2[2];
  p_output1[9]=-1.*t2117*t2240*var2[0] - 1.*t2117*t2228*var2[1] - 1.*t2117*t2207*var2[2];
  p_output1[10]=(t2136*t2285 + t1090*t2117*t279)*var2[0] + (t2136*t2271 + t1076*t2117*t279)*var2[1] + (t1015*t2117*t279 + t2136*t528)*var2[2];
  p_output1[11]=(t2136*t2369 + t1224*t2117*t279)*var2[0] + (t2136*t2347 + t1152*t2117*t279)*var2[1] + (t2136*t2324 + t1118*t2117*t279)*var2[2];
  p_output1[12]=(t2136*t2527 - 1.*t2117*t2543)*var2[0] + (t2136*t2475 - 1.*t2117*t2494)*var2[1] + (t2136*t2426 - 1.*t2117*t2439)*var2[2];
  p_output1[13]=(t2136*t2590 - 1.*t2117*t2609)*var2[0] + (t2136*t2567 - 1.*t2117*t2576)*var2[1];
  p_output1[14]=0. + t2627 + t2635;
  p_output1[15]=0. + t2637 + t2642;
  p_output1[16]=t2663;
  p_output1[17]=(t2627 + t2635)*var2[0] + (t2637 + t2642)*var2[1] + t2663*var2[2];
  p_output1[18]=t2136*t2240*var2[0] + t2136*t2228*var2[1] + t2136*t2207*var2[2];
  p_output1[19]=(t2117*t2285 - 1.*t1090*t2136*t279)*var2[0] + (t2117*t2271 - 1.*t1076*t2136*t279)*var2[1] + (-1.*t1015*t2136*t279 + t2117*t528)*var2[2];
  p_output1[20]=(t2117*t2369 - 1.*t1224*t2136*t279)*var2[0] + (t2117*t2347 - 1.*t1152*t2136*t279)*var2[1] + (t2117*t2324 - 1.*t1118*t2136*t279)*var2[2];
  p_output1[21]=(t2117*t2527 + t2136*t2543)*var2[0] + (t2117*t2475 + t2136*t2494)*var2[1] + (t2117*t2426 + t2136*t2439)*var2[2];
  p_output1[22]=(t2117*t2590 + t2136*t2609)*var2[0] + (t2117*t2567 + t2136*t2576)*var2[1];
  p_output1[23]=0. + t2117*t2180 + t2136*t2188;
  p_output1[24]=0. + t2117*t2157 + t2136*t2167;
  p_output1[25]=t2117*t2131 + t2136*t550;
  p_output1[26]=(t3328*t550 + t2073*(t2094*t3174 + t2207*t3181 + t3124*t550 + t3130*t550) + t3239*t844 + t2094*(-1.*t2167*t3124 - 1.*t2073*t3174 - 1.*t2228*t3181 - 1.*t3130*t844))*var2[0] + (t2094*(t2188*t3124 + t1003*t3130 + t2060*t3174 + t2240*t3181) + t1003*t3506 + t3579*t550 + t2060*(-1.*t2094*t3174 - 1.*t2207*t3181 - 1.*t3124*t550 - 1.*t3130*t550))*var2[1] + (t2073*(-1.*t2188*t3124 - 1.*t1003*t3130 - 1.*t2060*t3174 - 1.*t2240*t3181) + t1003*t3388 + t3438*t844 + t2060*(t2167*t3124 + t2073*t3174 + t2228*t3181 + t3130*t844))*var2[2];
  p_output1[27]=(t1076*t270*t3239 + t1015*t270*t3328 + t2094*(-1.*t1076*t270*t3130 + t1076*t279*t3181 - 1.*t2073*t270*t3693 + t2167*t279*t3693 + t3712 + t3717) + t2073*(t1015*t270*t3130 - 1.*t1015*t279*t3181 + t3650 + t3663 + t2094*t270*t3693 - 1.*t279*t3693*t550))*var2[0] + (t1090*t270*t3506 + t1015*t270*t3579 + t2094*(t1090*t270*t3130 - 1.*t1090*t279*t3181 + t2060*t270*t3693 - 1.*t2188*t279*t3693 + t3814 + t3818) + t2060*(-1.*t1015*t270*t3130 + t1015*t279*t3181 - 1.*t2094*t270*t3693 + t3791 + t3793 + t279*t3693*t550))*var2[1] + (t1090*t270*t3388 + t1076*t270*t3438 + t2060*(t1076*t270*t3130 - 1.*t1076*t279*t3181 + t2073*t270*t3693 - 1.*t2167*t279*t3693 + t3742 + t3743) + t2073*(-1.*t1090*t270*t3130 + t1090*t279*t3181 - 1.*t2060*t270*t3693 + t2188*t279*t3693 + t3764 + t3767))*var2[2];
  p_output1[28]=(t1152*t270*t3239 + t1118*t270*t3328 + t2094*(-1.*t1152*t270*t3130 + t1152*t279*t3181 - 1.*t2073*t270*t3900 + t2167*t279*t3900 + t3921 + t3927) + t2073*(t1118*t270*t3130 - 1.*t1118*t279*t3181 + t3861 + t3889 + t2094*t270*t3900 - 1.*t279*t3900*t550))*var2[0] + (t1224*t270*t3506 + t1118*t270*t3579 + t2094*(t1224*t270*t3130 - 1.*t1224*t279*t3181 + t2060*t270*t3900 - 1.*t2188*t279*t3900 + t4081 + t4099) + t2060*(-1.*t1118*t270*t3130 + t1118*t279*t3181 - 1.*t2094*t270*t3900 + t4042 + t4047 + t279*t3900*t550))*var2[1] + (t1224*t270*t3388 + t1152*t270*t3438 + t2060*(t1152*t270*t3130 - 1.*t1152*t279*t3181 + t2073*t270*t3900 - 1.*t2167*t279*t3900 + t3968 + t3971) + t2073*(-1.*t1224*t270*t3130 + t1224*t279*t3181 - 1.*t2060*t270*t3900 + t2188*t279*t3900 + t3993 + t3996))*var2[2];
  p_output1[29]=(t1458*t3239 + t1326*t3328 + t2094*(-1.*t1458*t3130 - 1.*t2494*t3181 - 1.*t2073*t4232 - 1.*t2167*t4252 + t4280 + t4290) + t2073*(t1326*t3130 + t2439*t3181 + t4157 + t4209 + t2094*t4232 + t4252*t550))*var2[0] + (t1619*t3506 + t1326*t3579 + t2094*(t1619*t3130 + t2543*t3181 + t2060*t4232 + t2188*t4252 + t4413 + t4415) + t2060*(-1.*t1326*t3130 - 1.*t2439*t3181 - 1.*t2094*t4232 + t4379 + t4387 - 1.*t4252*t550))*var2[1] + (t1619*t3388 + t1458*t3438 + t2060*(t1458*t3130 + t2494*t3181 + t2073*t4232 + t2167*t4252 + t4310 + t4314) + t2073*(-1.*t1619*t3130 - 1.*t2543*t3181 - 1.*t2060*t4232 - 1.*t2188*t4252 + t4346 + t4347))*var2[2];
  p_output1[30]=(t1836*t3239 + t2094*(-1.*t1836*t3130 - 1.*t2576*t3181 - 1.*t2073*t4579 - 1.*t2167*t4605 + t4622 + t4624) + t2073*(t4533 + t2094*t4579 + t4605*t550))*var2[0] + (t2030*t3506 + t2094*(t2030*t3130 + t2609*t3181 + t2060*t4579 + t2188*t4605 + t4672 + t4681) + t2060*(-1.*t2094*t4579 + t4655 - 1.*t4605*t550))*var2[1] + (t2030*t3388 + t1836*t3438 + t2060*(t1836*t3130 + t2576*t3181 + t2073*t4579 + t2167*t4605 + t4697 + t4699) + t2073*(-1.*t2030*t3130 - 1.*t2609*t3181 - 1.*t2060*t4579 - 1.*t2188*t4605 + t4712 + t4713))*var2[2];
  p_output1[31]=t2073*t3239 + t2094*t3328;
  p_output1[32]=t2060*t3506 + t2094*t3579;
  p_output1[33]=t2060*t3388 + t2073*t3438;
  p_output1[34]=(t2271*t4770 + t4782*t528 + t2157*(t1015*t3116 + t3650 + t3663 + t3693*t528) + t2131*(-1.*t1076*t3116 + t3712 + t3717 - 1.*t3693*t829))*var2[0] + (t2285*t4879 + t4907*t528 + t2180*(-1.*t1015*t3116 + t3791 + t3793 - 1.*t3693*t528) + t2131*(t1090*t3116 + t3814 + t3818 + t3693*t993))*var2[1] + (t2285*t4818 + t2271*t4853 + t2180*(t1076*t3116 + t3742 + t3743 + t3693*t829) + t2157*(-1.*t1090*t3116 + t3764 + t3767 - 1.*t3693*t993))*var2[2];
  p_output1[35]=(t2347*t4770 + t2324*t4782 + t2157*(t1118*t3116 + t3861 + t3889 + t3900*t528) + t2131*(-1.*t1152*t3116 + t3921 + t3927 - 1.*t3900*t829))*var2[0] + (t2369*t4879 + t2324*t4907 + t2180*(-1.*t1118*t3116 + t4042 + t4047 - 1.*t3900*t528) + t2131*(t1224*t3116 + t4081 + t4099 + t3900*t993))*var2[1] + (t2369*t4818 + t2347*t4853 + t2180*(t1152*t3116 + t3968 + t3971 + t3900*t829) + t2157*(-1.*t1224*t3116 + t3993 + t3996 - 1.*t3900*t993))*var2[2];
  p_output1[36]=(t2475*t4770 + t2426*t4782 + t2157*(t1306*t3116 + t4157 + t4209 + t5060 + t5065 + t4230*t528) + t2131*(-1.*t1427*t3116 + t4280 + t4290 + t5071 + t5073 - 1.*t4230*t829))*var2[0] + (t2527*t4879 + t2426*t4907 + t2180*(-1.*t1306*t3116 + t4379 + t4387 + t5152 + t5157 - 1.*t4230*t528) + t2131*(t1601*t3116 + t4413 + t4415 + t5176 + t5177 + t4230*t993))*var2[1] + (t2527*t4818 + t2475*t4853 + t2180*(t1427*t3116 + t4310 + t4314 + t5097 + t5100 + t4230*t829) + t2157*(-1.*t1601*t3116 + t4346 + t4347 + t5119 + t5126 - 1.*t4230*t993))*var2[2];
  p_output1[37]=(t2567*t4770 + t2157*(t4533 + t5199 + t4576*t528) + t2131*(-1.*t1834*t3116 + t4622 + t4624 + t5211 + t5212 - 1.*t4576*t829))*var2[0] + (t2590*t4879 + t2180*(t4655 + t5235 - 1.*t4576*t528) + t2131*(t1998*t3116 + t4672 + t4681 + t5243 + t5244 + t4576*t993))*var2[1] + (t2590*t4818 + t2567*t4853 + t2180*(t1834*t3116 + t4697 + t4699 + t5263 + t5265 + t4576*t829) + t2157*(-1.*t1998*t3116 + t4712 + t4713 + t5286 + t5287 - 1.*t4576*t993))*var2[2];
  p_output1[38]=t2157*t4770 + t2131*t4782;
  p_output1[39]=t2180*t4879 + t2131*t4907;
  p_output1[40]=t2180*t4818 + t2157*t4853;
  p_output1[41]=((t1113*t3073 + t3088*t474 + t3880*t474 + t3870*t518)*t678 + t268*(-1.*t1132*t3073 - 1.*t1136*t3088 - 1.*t3880*t799 - 1.*t3870*t821))*var2[0] + ((-1.*t1113*t3073 - 1.*t3088*t474 - 1.*t3880*t474 - 1.*t3870*t518)*t908 + t268*(t1201*t3073 + t1204*t3088 + t3880*t955 + t3870*t987))*var2[1] + ((t1132*t3073 + t1136*t3088 + t3880*t799 + t3870*t821)*t908 + t678*(-1.*t1201*t3073 - 1.*t1204*t3088 - 1.*t3880*t955 - 1.*t3870*t987))*var2[2];
  p_output1[42]=(t433*t5512 + t1335*t5543 + (t1269*t3073 + t1296*t3088 + t4200*t474 + t5060 + t5065 + t4192*t518)*t678 + t268*(-1.*t1408*t3073 - 1.*t1422*t3088 + t5071 + t5073 - 1.*t4200*t799 - 1.*t4192*t821))*var2[0] + (t433*t5582 + t1470*t5627 + (-1.*t1269*t3073 - 1.*t1296*t3088 - 1.*t4200*t474 + t5152 + t5157 - 1.*t4192*t518)*t908 + t268*(t1559*t3073 + t1591*t3088 + t5176 + t5177 + t4200*t955 + t4192*t987))*var2[1] + (t1335*t5669 + t1470*t5710 + (t1408*t3073 + t1422*t3088 + t5097 + t5100 + t4200*t799 + t4192*t821)*t908 + t678*(-1.*t1559*t3073 - 1.*t1591*t3088 + t5119 + t5126 - 1.*t4200*t955 - 1.*t4192*t987))*var2[2];
  p_output1[43]=(t1711*t5543 + (t4520*t474 + t4505*t518 + t5199)*t678 + t268*(-1.*t1803*t3073 - 1.*t1829*t3088 + t5211 + t5212 - 1.*t4520*t799 - 1.*t4505*t821))*var2[0] + (t1868*t5627 + (-1.*t4520*t474 - 1.*t4505*t518 + t5235)*t908 + t268*(t1942*t3073 + t1991*t3088 + t5243 + t5244 + t4520*t955 + t4505*t987))*var2[1] + (t1711*t5669 + t1868*t5710 + (t1803*t3073 + t1829*t3088 + t5263 + t5265 + t4520*t799 + t4505*t821)*t908 + t678*(-1.*t1942*t3073 - 1.*t1991*t3088 + t5286 + t5287 - 1.*t4520*t955 - 1.*t4505*t987))*var2[2];
  p_output1[44]=t268*t5512 + t5543*t678;
  p_output1[45]=t268*t5582 + t5627*t908;
  p_output1[46]=t5669*t678 + t5710*t908;
  p_output1[47]=(-0.15121*t1510 - 0.15121*t1547 + t433*t6056 + t1335*t6096 + (t1259*t3021 + t1245*t3040 + t342*t4187 + t4167*t433 + t5065 + t433*t5892)*t678 + t268*(-1.*t1396*t3021 - 1.*t1362*t3040 + t5073 - 1.*t1335*t5892 - 1.*t4187*t726 - 1.*t4167*t783))*var2[0] + (-0.15121*t1362 - 0.15121*t1396 + t433*t5895 + t1470*t5954 + (-1.*t1259*t3021 - 1.*t1245*t3040 - 1.*t342*t4187 - 1.*t4167*t433 + t5157 - 1.*t433*t5892)*t908 + t268*(t1547*t3021 + t1510*t3040 + t5176 + t1470*t5892 + t4187*t922 + t4167*t948))*var2[1] + (-0.15121*t1245 - 0.15121*t1259 + t1335*t6002 + t1470*t6038 + (t1396*t3021 + t1362*t3040 + t5100 + t1335*t5892 + t4187*t726 + t4167*t783)*t908 + t678*(-1.*t1547*t3021 - 1.*t1510*t3040 + t5119 - 1.*t1470*t5892 - 1.*t4187*t922 - 1.*t4167*t948))*var2[2];
  p_output1[48]=(-0.15121*t1878 - 0.15121*t1928 + t1711*t6096 + (t342*t4475 + t433*t4487 + t5199)*t678 + t268*(-1.*t1758*t3021 - 1.*t1791*t3040 + t5211 - 1.*t1711*t5892 - 1.*t4475*t726 - 1.*t4487*t783))*var2[0] + (-0.15121*t1758 - 0.15121*t1791 + t1868*t5954 + (-1.*t342*t4475 - 1.*t433*t4487 + t5235)*t908 + t268*(t1878*t3021 + t1928*t3040 + t5244 + t1868*t5892 + t4475*t922 + t4487*t948))*var2[1] + (t1711*t6002 + t1868*t6038 + (t1758*t3021 + t1791*t3040 + t5263 + t1711*t5892 + t4475*t726 + t4487*t783)*t908 + t678*(-1.*t1878*t3021 - 1.*t1928*t3040 + t5287 - 1.*t1868*t5892 - 1.*t4475*t922 - 1.*t4487*t948))*var2[2];
  p_output1[49]=t268*t6056 + t6096*t678 - 0.15121*t922 - 0.15121*t948;
  p_output1[50]=t268*t5895 - 0.15121*t726 - 0.15121*t783 + t5954*t908;
  p_output1[51]=-0.15121*t342 - 0.15121*t433 + t6002*t678 + t6038*t908;
  p_output1[52]=(-0.038749*t1632 + 1.e-6*t1851 - 0.28121*t1853 - 1.*t230*t6514 - 1.*t1680*t6531 - 1.*t653*t6553 + 4.e-6*(-1.*t248*t6514 - 1.*t1632*t6531 - 1.*t6553*t675))*var2[0] + (-0.28121*t1632 - 0.038749*t1660 + 1.e-6*t1680 - 1.*t230*t6252 - 1.*t1851*t6260 - 1.*t6289*t868 + 4.e-6*(-1.*t248*t6252 - 1.*t1853*t6260 - 1.*t6289*t905))*var2[1] + (-1.*t1680*t6346 - 1.*t1851*t6360 - 1.*t6390*t653 - 1.*t6426*t868 + 4.e-6*(-1.*t1632*t6346 - 1.*t1853*t6360 - 1.*t6390*t675 - 1.*t6426*t905))*var2[2];
  p_output1[53]=-1.*t653*t6531 - 1.*t230*t6624 + 4.e-6*(-1.*t248*t6624 - 1.*t6531*t675) + 1.e-6*t868 - 0.038749*t879 - 0.28121*t905;
  p_output1[54]=-0.038749*t618 + 1.e-6*t653 - 1.*t230*t6715 - 0.28121*t675 - 1.*t6260*t868 + 4.e-6*(-1.*t248*t6715 - 1.*t6260*t905);
  p_output1[55]=1.e-6*t230 - 0.28121*t248 - 1.*t6346*t653 - 1.*t6360*t868 + 4.e-6*(-1.*t6346*t675 - 1.*t6360*t905);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_fFrFoot_vec_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
