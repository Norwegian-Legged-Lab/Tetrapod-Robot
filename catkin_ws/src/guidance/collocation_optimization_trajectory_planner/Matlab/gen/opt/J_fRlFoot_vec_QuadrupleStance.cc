/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:51:38 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t166;
  double t184;
  double t250;
  double t375;
  double t33;
  double t379;
  double t600;
  double t637;
  double t152;
  double t404;
  double t841;
  double t321;
  double t335;
  double t383;
  double t400;
  double t405;
  double t410;
  double t423;
  double t497;
  double t1068;
  double t723;
  double t752;
  double t774;
  double t775;
  double t794;
  double t824;
  double t846;
  double t857;
  double t905;
  double t1141;
  double t1160;
  double t1175;
  double t1189;
  double t1212;
  double t1246;
  double t1308;
  double t1310;
  double t47;
  double t55;
  double t1678;
  double t1869;
  double t1683;
  double t1701;
  double t1753;
  double t1774;
  double t1809;
  double t1810;
  double t1824;
  double t1825;
  double t1826;
  double t1607;
  double t1878;
  double t1896;
  double t1899;
  double t1900;
  double t1934;
  double t1935;
  double t1944;
  double t1961;
  double t1970;
  double t1986;
  double t18;
  double t1109;
  double t1114;
  double t156;
  double t165;
  double t642;
  double t718;
  double t1563;
  double t1590;
  double t2157;
  double t2158;
  double t2195;
  double t2217;
  double t2232;
  double t2254;
  double t2259;
  double t2300;
  double t2312;
  double t2326;
  double t2345;
  double t2388;
  double t2411;
  double t2449;
  double t2461;
  double t2500;
  double t2502;
  double t2504;
  double t2523;
  double t2064;
  double t2662;
  double t2663;
  double t2693;
  double t2711;
  double t2724;
  double t2756;
  double t2902;
  double t3036;
  double t3124;
  double t3180;
  double t3213;
  double t3222;
  double t3248;
  double t3253;
  double t3256;
  double t3269;
  double t2002;
  double t2023;
  double t2062;
  double t1833;
  double t1992;
  double t1996;
  double t2566;
  double t2592;
  double t2594;
  double t2474;
  double t2529;
  double t2547;
  double t3333;
  double t3343;
  double t3358;
  double t3231;
  double t3286;
  double t3316;
  double t3537;
  double t3550;
  double t3603;
  double t3917;
  double t3957;
  double t3959;
  double t3960;
  double t3962;
  double t3965;
  double t3968;
  double t3982;
  double t3985;
  double t3987;
  double t3999;
  double t4000;
  double t4009;
  double t4020;
  double t4025;
  double t4026;
  double t3919;
  double t3868;
  double t3870;
  double t4178;
  double t4185;
  double t4212;
  double t4226;
  double t4234;
  double t4242;
  double t4244;
  double t4249;
  double t4337;
  double t4338;
  double t4345;
  double t4347;
  double t4368;
  double t4372;
  double t4377;
  double t4384;
  double t4507;
  double t4490;
  double t4494;
  double t4495;
  double t4509;
  double t4514;
  double t4521;
  double t4526;
  double t4583;
  double t4588;
  double t4639;
  double t4648;
  double t4659;
  double t4660;
  double t4664;
  double t4674;
  double t4700;
  double t4708;
  double t4710;
  double t4732;
  double t4733;
  double t4737;
  double t4739;
  double t4743;
  double t4750;
  double t4752;
  double t4756;
  double t4818;
  double t4821;
  double t4830;
  double t4833;
  double t4836;
  double t4840;
  double t4842;
  double t4856;
  double t4857;
  double t4858;
  double t4873;
  double t4879;
  double t4889;
  double t4925;
  double t5019;
  double t5030;
  double t5034;
  double t5056;
  double t5096;
  double t5101;
  double t5115;
  double t5123;
  double t5125;
  double t5126;
  double t5127;
  double t5154;
  double t5158;
  double t5160;
  double t5182;
  double t5201;
  double t5205;
  double t5208;
  double t5216;
  double t2228;
  double t2305;
  double t2355;
  double t2365;
  double t2555;
  double t2601;
  double t2602;
  double t2699;
  double t2831;
  double t3041;
  double t3108;
  double t3318;
  double t3379;
  double t3403;
  double t523;
  double t923;
  double t1438;
  double t1458;
  double t2000;
  double t2118;
  double t2124;
  double t1475;
  double t2134;
  double t2142;
  double t5461;
  double t5491;
  double t2369;
  double t2608;
  double t2633;
  double t3114;
  double t3454;
  double t3455;
  double t3502;
  double t3539;
  double t3542;
  double t3552;
  double t3600;
  double t3604;
  double t3656;
  double t3662;
  double t3692;
  double t3700;
  double t3714;
  double t3735;
  double t3744;
  double t3770;
  double t3772;
  double t3785;
  double t3793;
  double t3794;
  double t3798;
  double t3837;
  double t3845;
  double t4065;
  double t4078;
  double t4085;
  double t3986;
  double t4032;
  double t4051;
  double t3879;
  double t3891;
  double t3927;
  double t3929;
  double t4055;
  double t4105;
  double t4112;
  double t4265;
  double t4277;
  double t4282;
  double t4233;
  double t4254;
  double t4257;
  double t4152;
  double t4153;
  double t4155;
  double t4157;
  double t4261;
  double t4289;
  double t4291;
  double t4418;
  double t4432;
  double t4438;
  double t4362;
  double t4400;
  double t4401;
  double t4316;
  double t4318;
  double t4325;
  double t4328;
  double t4415;
  double t4444;
  double t4445;
  double t4794;
  double t4796;
  double t4806;
  double t4742;
  double t4758;
  double t4763;
  double t4538;
  double t4662;
  double t4712;
  double t4716;
  double t4793;
  double t4807;
  double t4810;
  double t5068;
  double t5069;
  double t5077;
  double t4984;
  double t5059;
  double t5061;
  double t4835;
  double t4850;
  double t4866;
  double t4870;
  double t5062;
  double t5080;
  double t5085;
  double t5244;
  double t5251;
  double t5253;
  double t5183;
  double t5223;
  double t5234;
  double t5113;
  double t5124;
  double t5128;
  double t5145;
  double t5242;
  double t5260;
  double t5271;
  double t5513;
  double t5536;
  double t5537;
  double t5558;
  double t5569;
  double t5573;
  double t5464;
  double t5468;
  double t5488;
  double t6211;
  double t6218;
  double t6219;
  double t6194;
  double t6195;
  double t6198;
  double t6199;
  double t6207;
  double t6209;
  double t5618;
  double t5624;
  double t5625;
  double t5631;
  double t5636;
  double t5638;
  double t5644;
  double t5645;
  double t5649;
  double t5734;
  double t5740;
  double t5763;
  double t5766;
  double t5794;
  double t5795;
  double t5814;
  double t5815;
  double t5850;
  double t5857;
  double t5859;
  double t5871;
  double t5913;
  double t5915;
  double t5916;
  double t5931;
  double t5946;
  double t5949;
  double t5981;
  double t5983;
  double t5987;
  double t5994;
  double t5999;
  double t6004;
  double t6032;
  double t6034;
  double t6043;
  double t6047;
  double t6064;
  double t6066;
  double t6079;
  double t6080;
  double t6085;
  double t6088;
  double t6093;
  double t6094;
  double t6111;
  double t6112;
  double t6139;
  double t6153;
  double t6155;
  double t6165;
  double t5329;
  double t5346;
  double t5354;
  double t6780;
  double t6798;
  double t6799;
  double t6800;
  double t6803;
  double t6804;
  double t6806;
  double t6814;
  double t6815;
  double t6829;
  double t6838;
  double t6841;
  double t6842;
  double t6843;
  double t6845;
  double t6855;
  double t6857;
  double t6860;
  double t6862;
  double t6865;
  double t6866;
  double t6869;
  double t6899;
  double t6902;
  double t6935;
  double t6957;
  double t6958;
  double t6977;
  double t6979;
  double t6985;
  double t6988;
  double t6992;
  double t6774;
  double t7075;
  double t7026;
  double t7035;
  double t7041;
  double t7049;
  double t7061;
  double t7062;
  double t7063;
  double t7077;
  double t7087;
  double t7089;
  double t7091;
  double t7092;
  double t7093;
  double t7109;
  double t7113;
  double t7115;
  double t7122;
  double t7123;
  double t7130;
  double t7131;
  double t7133;
  double t7134;
  double t7135;
  double t6765;
  double t6766;
  double t6776;
  double t6778;
  double t6794;
  double t6795;
  double t6840;
  double t6870;
  double t7000;
  double t7019;
  double t7040;
  double t7099;
  double t7138;
  double t7139;
  double t7142;
  double t7149;
  double t7150;
  double t7151;
  double t7155;
  double t7157;
  double t7164;
  double t5410;
  double t5439;
  double t5449;
  double t7176;
  double t7177;
  double t7178;
  double t7171;
  double t7172;
  double t7174;
  double t7024;
  double t7166;
  double t7169;
  double t7191;
  double t7192;
  double t7193;
  double t5362;
  double t5367;
  double t5378;
  double t7635;
  double t7636;
  double t7637;
  double t7194;
  double t7195;
  double t7199;
  double t7200;
  double t7228;
  double t7230;
  double t7231;
  double t7238;
  double t7269;
  double t7270;
  double t7292;
  double t7303;
  double t7339;
  double t7346;
  double t7347;
  double t7363;
  double t7464;
  double t7480;
  double t7521;
  double t7524;
  double t7582;
  double t7594;
  double t7605;
  double t7610;
  double t7909;
  double t7925;
  double t7933;
  double t7934;
  double t7938;
  double t7914;
  double t7962;
  double t7964;
  double t7967;
  double t7916;
  double t7946;
  double t7947;
  double t4164;
  double t4307;
  double t4308;
  double t3945;
  double t4130;
  double t4146;
  double t8131;
  double t8132;
  double t8138;
  double t8139;
  double t8141;
  double t8144;
  double t8148;
  double t8150;
  double t8151;
  double t8157;
  double t8159;
  double t8161;
  double t8163;
  double t8165;
  double t8170;
  double t8174;
  double t8177;
  double t8179;
  double t8180;
  double t8198;
  double t8199;
  double t8200;
  double t8155;
  double t8184;
  double t8185;
  double t8215;
  double t8216;
  double t8217;
  double t8221;
  double t8229;
  double t8230;
  double t8232;
  double t8234;
  double t8237;
  double t8240;
  double t8242;
  double t8244;
  double t8190;
  double t8201;
  double t8202;
  double t8239;
  double t8246;
  double t8249;
  double t8251;
  double t8254;
  double t8257;
  double t4332;
  double t4454;
  double t4466;
  double t8467;
  double t8468;
  double t8470;
  double t8471;
  double t8475;
  double t8481;
  double t8483;
  double t8484;
  double t8493;
  double t8498;
  double t8502;
  double t8504;
  double t8528;
  double t8530;
  double t8531;
  double t8533;
  double t8541;
  double t8542;
  double t8546;
  double t8550;
  double t8551;
  double t8558;
  double t8559;
  double t8563;
  double t8491;
  double t8536;
  double t8567;
  double t8569;
  double t8572;
  double t8573;
  double t8574;
  double t8575;
  double t8586;
  double t8588;
  double t8591;
  double t8570;
  double t8581;
  double t8582;
  double t8606;
  double t8611;
  double t8612;
  double t8620;
  double t8633;
  double t8641;
  double t8644;
  double t4717;
  double t4811;
  double t4813;
  double t8585;
  double t8595;
  double t8599;
  double t8629;
  double t8647;
  double t8649;
  double t8726;
  double t8728;
  double t8734;
  double t4872;
  double t5086;
  double t5089;
  double t5150;
  double t5272;
  double t5274;
  double t7632;
  double t7633;
  double t7670;
  double t7671;
  double t7726;
  double t7729;
  double t7751;
  double t7755;
  double t7795;
  double t7803;
  double t7857;
  double t7863;
  double t8914;
  double t8924;
  double t8925;
  double t8949;
  double t8954;
  double t8955;
  double t7949;
  double t7960;
  double t7986;
  double t7991;
  double t8987;
  double t8988;
  double t8993;
  double t9007;
  double t9011;
  double t9032;
  double t8018;
  double t8019;
  double t8039;
  double t8040;
  double t9041;
  double t9042;
  double t9043;
  double t9083;
  double t9084;
  double t9087;
  double t8067;
  double t8072;
  double t8091;
  double t8093;
  double t8130;
  double t8205;
  double t8270;
  double t8274;
  double t8341;
  double t8342;
  double t8361;
  double t8363;
  double t8379;
  double t8381;
  double t8421;
  double t8427;
  double t8600;
  double t8605;
  double t8754;
  double t8757;
  double t8789;
  double t8790;
  double t8816;
  double t8817;
  double t8836;
  double t8843;
  double t8863;
  double t8866;
  double t9250;
  double t9251;
  double t9259;
  double t9278;
  double t9302;
  double t9304;
  double t9316;
  double t9318;
  double t9335;
  double t9341;
  double t9356;
  double t9364;
  double t9385;
  double t9389;
  double t9396;
  double t9397;
  double t9626;
  double t9628;
  double t9630;
  double t9632;
  double t9633;
  double t9635;
  double t9412;
  double t9415;
  double t9656;
  double t9657;
  double t9658;
  double t9661;
  double t9662;
  double t9663;
  double t9427;
  double t9428;
  double t9439;
  double t9440;
  double t9585;
  double t9586;
  double t9589;
  double t9598;
  double t9600;
  double t9602;
  double t9450;
  double t9452;
  double t9912;
  double t9916;
  double t9917;
  double t9924;
  double t9929;
  double t9930;
  double t9974;
  double t9978;
  double t9979;
  double t9982;
  double t9984;
  double t9985;
  double t9841;
  double t9842;
  double t9845;
  double t9851;
  double t9853;
  double t9857;
  double t10160;
  double t10162;
  double t10163;
  double t10164;
  double t10166;
  double t10170;
  double t10171;
  double t10173;
  double t10174;
  double t10176;
  double t10177;
  double t10178;
  double t10180;
  double t10181;
  double t10183;
  double t10193;
  double t10194;
  double t10198;
  double t10200;
  double t10202;
  double t10203;
  double t10205;
  double t10239;
  double t10244;
  double t10245;
  double t10246;
  double t10252;
  double t10254;
  double t10255;
  double t10256;
  double t10257;
  double t10259;
  double t10260;
  double t10264;
  double t10266;
  double t10268;
  double t10270;
  double t10273;
  double t10276;
  double t10277;
  double t10278;
  double t10279;
  double t10280;
  double t10281;
  double t10317;
  double t10320;
  double t10322;
  double t10325;
  double t10328;
  double t10329;
  double t10330;
  double t10331;
  double t10332;
  double t10334;
  double t10336;
  double t10340;
  double t10341;
  double t10342;
  double t10343;
  double t10346;
  double t10347;
  double t10348;
  double t10350;
  double t10351;
  double t10352;
  double t10354;
  double t10409;
  t166 = Cos(var1[14]);
  t184 = -1.*t166;
  t250 = 1. + t184;
  t375 = Sin(var1[14]);
  t33 = Cos(var1[13]);
  t379 = -7.e-6*t375;
  t600 = -1.*t33;
  t637 = 1. + t600;
  t152 = Sin(var1[13]);
  t404 = -7.e-6*t250;
  t841 = -1.*t375;
  t321 = -6.5e-11*t250;
  t335 = 4.e-6*t250;
  t383 = t335 + t379;
  t400 = 4.e-6*t383;
  t405 = -4.e-6*t375;
  t410 = t404 + t405;
  t423 = -7.e-6*t410;
  t497 = 1. + t321 + t400 + t423;
  t1068 = 2.8e-11*t637;
  t723 = 1.000000000049*t250;
  t752 = -1. + t723;
  t774 = 4.e-6*t752;
  t775 = -1. + t166;
  t794 = 4.e-6*t775;
  t824 = 2.8e-11*t250;
  t846 = t824 + t841;
  t857 = -7.e-6*t846;
  t905 = t774 + t794 + t857 + t379;
  t1141 = -1.000000000016*t250;
  t1160 = 1. + t1141;
  t1175 = -7.e-6*t1160;
  t1189 = -2.8e-11*t250;
  t1212 = t1189 + t841;
  t1246 = 4.e-6*t1212;
  t1308 = 4.e-6*t375;
  t1310 = t1175 + t404 + t1246 + t1308;
  t47 = -1. + t33;
  t55 = 4.e-6*t47;
  t1678 = -7.e-6*t637;
  t1869 = Sin(var1[12]);
  t1683 = 4.e-6*t152;
  t1701 = t1678 + t1683;
  t1753 = t1701*t497;
  t1774 = t1068 + t152;
  t1809 = t1774*t905;
  t1810 = -1.000000000016*t637;
  t1824 = 1. + t1810;
  t1825 = t1824*t1310;
  t1826 = t1753 + t1809 + t1825;
  t1607 = Cos(var1[12]);
  t1878 = -6.5e-11*t637;
  t1896 = 1. + t1878;
  t1899 = t1896*t497;
  t1900 = 7.e-6*t152;
  t1934 = t55 + t1900;
  t1935 = t1934*t905;
  t1944 = -4.e-6*t152;
  t1961 = t1678 + t1944;
  t1970 = t1961*t1310;
  t1986 = t1899 + t1935 + t1970;
  t18 = Cos(var1[4]);
  t1109 = -1.*t152;
  t1114 = t1068 + t1109;
  t156 = -7.e-6*t152;
  t165 = t55 + t156;
  t642 = -1.000000000049*t637;
  t718 = 1. + t642;
  t1563 = Sin(var1[4]);
  t1590 = Cos(var1[5]);
  t2157 = 1.000000000016*t250;
  t2158 = t404 + t1308;
  t2195 = -7.e-6*t2158;
  t2217 = -1. + t2157 + t2195;
  t2232 = 1. + t321;
  t2254 = -7.e-6*t2232;
  t2259 = 7.e-6*t250;
  t2300 = t2254 + t2259 + t1308;
  t2312 = t794 + t379;
  t2326 = -7.e-6*t2312;
  t2345 = t1189 + t2326 + t375;
  t2388 = t1961*t2217;
  t2411 = t1896*t2300;
  t2449 = t1934*t2345;
  t2461 = t2388 + t2411 + t2449;
  t2500 = t1824*t2217;
  t2502 = t1701*t2300;
  t2504 = t1774*t2345;
  t2523 = t2500 + t2502 + t2504;
  t2064 = Sin(var1[5]);
  t2662 = -1.000000000049*t250;
  t2663 = 4.e-6*t2312;
  t2693 = 1. + t2662 + t2663;
  t2711 = 4.e-6*t2232;
  t2724 = 7.e-6*t375;
  t2756 = t2711 + t794 + t2724;
  t2902 = 4.e-6*t2158;
  t3036 = t824 + t2902 + t375;
  t3124 = t1774*t2693;
  t3180 = t1701*t2756;
  t3213 = t1824*t3036;
  t3222 = t3124 + t3180 + t3213;
  t3248 = t1934*t2693;
  t3253 = t1896*t2756;
  t3256 = t1961*t3036;
  t3269 = t3248 + t3253 + t3256;
  t2002 = t1869*t1826;
  t2023 = t1607*t1986;
  t2062 = t2002 + t2023;
  t1833 = t1607*t1826;
  t1992 = -1.*t1869*t1986;
  t1996 = t1833 + t1992;
  t2566 = t1607*t2461;
  t2592 = t1869*t2523;
  t2594 = t2566 + t2592;
  t2474 = -1.*t1869*t2461;
  t2529 = t1607*t2523;
  t2547 = t2474 + t2529;
  t3333 = t1869*t3222;
  t3343 = t1607*t3269;
  t3358 = t3333 + t3343;
  t3231 = t1607*t3222;
  t3286 = -1.*t1869*t3269;
  t3316 = t3231 + t3286;
  t3537 = -1.*t1996*t2064;
  t3550 = -1.*t2547*t2064;
  t3603 = -1.*t3316*t2064;
  t3917 = 2.8e-11*t152;
  t3957 = -6.5e-11*t152*t497;
  t3959 = 7.e-6*t33;
  t3960 = t3959 + t1944;
  t3962 = t3960*t905;
  t3965 = -4.e-6*t33;
  t3968 = t3965 + t156;
  t3982 = t3968*t1310;
  t3985 = t3957 + t3962 + t3982;
  t3987 = 4.e-6*t33;
  t3999 = t3987 + t156;
  t4000 = t3999*t497;
  t4009 = t33 + t3917;
  t4020 = t4009*t905;
  t4025 = -1.000000000016*t152*t1310;
  t4026 = t4000 + t4020 + t4025;
  t3919 = t600 + t3917;
  t3868 = -7.e-6*t33;
  t3870 = t3868 + t1944;
  t4178 = t3968*t2217;
  t4185 = -6.5e-11*t152*t2300;
  t4212 = t3960*t2345;
  t4226 = t4178 + t4185 + t4212;
  t4234 = -1.000000000016*t152*t2217;
  t4242 = t3999*t2300;
  t4244 = t4009*t2345;
  t4249 = t4234 + t4242 + t4244;
  t4337 = t3960*t2693;
  t4338 = -6.5e-11*t152*t2756;
  t4345 = t3968*t3036;
  t4347 = t4337 + t4338 + t4345;
  t4368 = t4009*t2693;
  t4372 = t3999*t2756;
  t4377 = -1.000000000016*t152*t3036;
  t4384 = t4368 + t4372 + t4377;
  t4507 = -7.e-6*t166;
  t4490 = -4.e-6*t166;
  t4494 = t4490 + t379;
  t4495 = -7.e-6*t4494;
  t4509 = t4507 + t1308;
  t4514 = 4.e-6*t4509;
  t4521 = -6.5e-11*t375;
  t4526 = t4495 + t4514 + t4521;
  t4583 = 4.e-6*t166;
  t4588 = -2.8e-11*t375;
  t4639 = t184 + t4588;
  t4648 = 4.e-6*t4639;
  t4659 = 1.12e-16*t375;
  t4660 = t4583 + t4648 + t4659;
  t4664 = 2.8e-11*t375;
  t4674 = t184 + t4664;
  t4700 = -7.e-6*t4674;
  t4708 = 1.96e-16*t375;
  t4710 = t4507 + t4700 + t4708;
  t4732 = t1896*t4526;
  t4733 = t1961*t4660;
  t4737 = t1934*t4710;
  t4739 = t4732 + t4733 + t4737;
  t4743 = t1701*t4526;
  t4750 = t1824*t4660;
  t4752 = t1774*t4710;
  t4756 = t4743 + t4750 + t4752;
  t4818 = t4507 + t405;
  t4821 = 4.e-6*t4818;
  t4830 = -1.000000000049*t375;
  t4833 = t4821 + t4830;
  t4836 = 7.e-6*t166;
  t4840 = -4.00000000026e-6*t375;
  t4842 = t4836 + t4840;
  t4856 = t4583 + t379;
  t4857 = 4.e-6*t4856;
  t4858 = t166 + t4857 + t4664;
  t4873 = t1774*t4833;
  t4879 = t1701*t4842;
  t4889 = t1824*t4858;
  t4925 = t4873 + t4879 + t4889;
  t5019 = t1934*t4833;
  t5030 = t1896*t4842;
  t5034 = t1961*t4858;
  t5056 = t5019 + t5030 + t5034;
  t5096 = -7.e-6*t4818;
  t5101 = t166 + t5096 + t4588;
  t5115 = 7.000000000455e-6*t375;
  t5123 = t4583 + t5115;
  t5125 = -7.e-6*t4856;
  t5126 = 1.000000000016*t375;
  t5127 = t5125 + t5126;
  t5154 = t1774*t5101;
  t5158 = t1701*t5123;
  t5160 = t1824*t5127;
  t5182 = t5154 + t5158 + t5160;
  t5201 = t1934*t5101;
  t5205 = t1896*t5123;
  t5208 = t1961*t5127;
  t5216 = t5201 + t5205 + t5208;
  t2228 = t1114*t2217;
  t2305 = t165*t2300;
  t2355 = t718*t2345;
  t2365 = t2228 + t2305 + t2355;
  t2555 = t1590*t2547;
  t2601 = -1.*t2594*t2064;
  t2602 = t2555 + t2601;
  t2699 = t718*t2693;
  t2831 = t165*t2756;
  t3041 = t1114*t3036;
  t3108 = t2699 + t2831 + t3041;
  t3318 = t1590*t3316;
  t3379 = -1.*t3358*t2064;
  t3403 = t3318 + t3379;
  t523 = t165*t497;
  t923 = t718*t905;
  t1438 = t1114*t1310;
  t1458 = t523 + t923 + t1438;
  t2000 = t1590*t1996;
  t2118 = -1.*t2062*t2064;
  t2124 = t2000 + t2118;
  t1475 = t18*t1458;
  t2134 = -1.*t1563*t2124;
  t2142 = t1475 + t2134;
  t5461 = Sin(var1[3]);
  t5491 = Cos(var1[3]);
  t2369 = t18*t2365;
  t2608 = -1.*t1563*t2602;
  t2633 = t2369 + t2608;
  t3114 = t18*t3108;
  t3454 = -1.*t1563*t3403;
  t3455 = t3114 + t3454;
  t3502 = -1.*t1590*t2062;
  t3539 = t3502 + t3537;
  t3542 = -1.*t1590*t2594;
  t3552 = t3542 + t3550;
  t3600 = -1.*t1590*t3358;
  t3604 = t3600 + t3603;
  t3656 = -1.*t1869*t1826;
  t3662 = -1.*t1607*t1986;
  t3692 = t3656 + t3662;
  t3700 = t1590*t3692;
  t3714 = t3700 + t3537;
  t3735 = -1.*t1607*t2461;
  t3744 = -1.*t1869*t2523;
  t3770 = t3735 + t3744;
  t3772 = t1590*t3770;
  t3785 = t3772 + t3550;
  t3793 = -1.*t1869*t3222;
  t3794 = -1.*t1607*t3269;
  t3798 = t3793 + t3794;
  t3837 = t1590*t3798;
  t3845 = t3837 + t3603;
  t4065 = t1607*t3985;
  t4078 = t1869*t4026;
  t4085 = t4065 + t4078;
  t3986 = -1.*t1869*t3985;
  t4032 = t1607*t4026;
  t4051 = t3986 + t4032;
  t3879 = t3870*t497;
  t3891 = -1.000000000049*t152*t905;
  t3927 = t3919*t1310;
  t3929 = t3879 + t3891 + t3927;
  t4055 = t1590*t4051;
  t4105 = -1.*t4085*t2064;
  t4112 = t4055 + t4105;
  t4265 = t1607*t4226;
  t4277 = t1869*t4249;
  t4282 = t4265 + t4277;
  t4233 = -1.*t1869*t4226;
  t4254 = t1607*t4249;
  t4257 = t4233 + t4254;
  t4152 = t3919*t2217;
  t4153 = t3870*t2300;
  t4155 = -1.000000000049*t152*t2345;
  t4157 = t4152 + t4153 + t4155;
  t4261 = t1590*t4257;
  t4289 = -1.*t4282*t2064;
  t4291 = t4261 + t4289;
  t4418 = t1607*t4347;
  t4432 = t1869*t4384;
  t4438 = t4418 + t4432;
  t4362 = -1.*t1869*t4347;
  t4400 = t1607*t4384;
  t4401 = t4362 + t4400;
  t4316 = -1.000000000049*t152*t2693;
  t4318 = t3870*t2756;
  t4325 = t3919*t3036;
  t4328 = t4316 + t4318 + t4325;
  t4415 = t1590*t4401;
  t4444 = -1.*t4438*t2064;
  t4445 = t4415 + t4444;
  t4794 = t1607*t4739;
  t4796 = t1869*t4756;
  t4806 = t4794 + t4796;
  t4742 = -1.*t1869*t4739;
  t4758 = t1607*t4756;
  t4763 = t4742 + t4758;
  t4538 = t165*t4526;
  t4662 = t1114*t4660;
  t4712 = t718*t4710;
  t4716 = t4538 + t4662 + t4712;
  t4793 = t1590*t4763;
  t4807 = -1.*t4806*t2064;
  t4810 = t4793 + t4807;
  t5068 = t1869*t4925;
  t5069 = t1607*t5056;
  t5077 = t5068 + t5069;
  t4984 = t1607*t4925;
  t5059 = -1.*t1869*t5056;
  t5061 = t4984 + t5059;
  t4835 = t718*t4833;
  t4850 = t165*t4842;
  t4866 = t1114*t4858;
  t4870 = t4835 + t4850 + t4866;
  t5062 = t1590*t5061;
  t5080 = -1.*t5077*t2064;
  t5085 = t5062 + t5080;
  t5244 = t1869*t5182;
  t5251 = t1607*t5216;
  t5253 = t5244 + t5251;
  t5183 = t1607*t5182;
  t5223 = -1.*t1869*t5216;
  t5234 = t5183 + t5223;
  t5113 = t718*t5101;
  t5124 = t165*t5123;
  t5128 = t1114*t5127;
  t5145 = t5113 + t5124 + t5128;
  t5242 = t1590*t5234;
  t5260 = -1.*t5253*t2064;
  t5271 = t5242 + t5260;
  t5513 = t1590*t2594;
  t5536 = t2547*t2064;
  t5537 = t5513 + t5536;
  t5558 = t1590*t3358;
  t5569 = t3316*t2064;
  t5573 = t5558 + t5569;
  t5464 = t1590*t2062;
  t5468 = t1996*t2064;
  t5488 = t5464 + t5468;
  t6211 = t5491*t5488;
  t6218 = -1.*t5461*t2142;
  t6219 = t6211 + t6218;
  t6194 = t5491*t5537;
  t6195 = -1.*t5461*t2633;
  t6198 = t6194 + t6195;
  t6199 = t5491*t5573;
  t6207 = -1.*t5461*t3455;
  t6209 = t6199 + t6207;
  t5618 = -1.*t1458*t1563;
  t5624 = -1.*t18*t2124;
  t5625 = t5618 + t5624;
  t5631 = -1.*t2365*t1563;
  t5636 = -1.*t18*t2602;
  t5638 = t5631 + t5636;
  t5644 = -1.*t3108*t1563;
  t5645 = -1.*t18*t3403;
  t5649 = t5644 + t5645;
  t5734 = t3692*t2064;
  t5740 = t2000 + t5734;
  t5763 = t3770*t2064;
  t5766 = t2555 + t5763;
  t5794 = t3798*t2064;
  t5795 = t3318 + t5794;
  t5814 = t1590*t4085;
  t5815 = t4051*t2064;
  t5850 = t5814 + t5815;
  t5857 = t18*t3929;
  t5859 = -1.*t1563*t4112;
  t5871 = t5857 + t5859;
  t5913 = t1590*t4282;
  t5915 = t4257*t2064;
  t5916 = t5913 + t5915;
  t5931 = t18*t4157;
  t5946 = -1.*t1563*t4291;
  t5949 = t5931 + t5946;
  t5981 = t1590*t4438;
  t5983 = t4401*t2064;
  t5987 = t5981 + t5983;
  t5994 = t18*t4328;
  t5999 = -1.*t1563*t4445;
  t6004 = t5994 + t5999;
  t6032 = t1590*t4806;
  t6034 = t4763*t2064;
  t6043 = t6032 + t6034;
  t6047 = t18*t4716;
  t6064 = -1.*t1563*t4810;
  t6066 = t6047 + t6064;
  t6079 = t1590*t5077;
  t6080 = t5061*t2064;
  t6085 = t6079 + t6080;
  t6088 = t18*t4870;
  t6093 = -1.*t1563*t5085;
  t6094 = t6088 + t6093;
  t6111 = t1590*t5253;
  t6112 = t5234*t2064;
  t6139 = t6111 + t6112;
  t6153 = t18*t5145;
  t6155 = -1.*t1563*t5271;
  t6165 = t6153 + t6155;
  t5329 = t2365*t1563;
  t5346 = t18*t2602;
  t5354 = t5329 + t5346;
  t6780 = -2.8e-11*t637;
  t6798 = -2.598649999999999e-7*var1[14];
  t6799 = 0.148705*t2232;
  t6800 = -2.3905277499999995e-16*t250;
  t6803 = -0.038922999986*t383;
  t6804 = -0.80315*t410;
  t6806 = t2259 + t1308;
  t6814 = -0.503149000008*t6806;
  t6815 = t794 + t2724;
  t6829 = -0.038924*t6815;
  t6838 = t6798 + t6799 + t6800 + t6803 + t6804 + t6814 + t6829;
  t6841 = 1.0394599999999997e-12*var1[14];
  t6842 = 1. + t2662;
  t6843 = -0.038924*t6842;
  t6845 = -0.03892299998790722*t250;
  t6855 = -0.80315*t846;
  t6857 = 0.148705*t2312;
  t6860 = t335 + t2724;
  t6862 = -3.6777349999999994e-6*t6860;
  t6865 = t1189 + t375;
  t6866 = -0.503149000008*t6865;
  t6869 = t6841 + t6843 + t6845 + t6855 + t6857 + t6862 + t6866;
  t6899 = 1.8190549999999993e-12*var1[14];
  t6902 = -0.80315*t1160;
  t6935 = -0.5031490000160505*t250;
  t6957 = -0.038922999986*t1212;
  t6958 = t2259 + t405;
  t6977 = -3.6777349999999994e-6*t6958;
  t6979 = 0.148705*t2158;
  t6985 = t824 + t375;
  t6988 = -0.038924*t6985;
  t6992 = t6899 + t6902 + t6935 + t6957 + t6977 + t6979 + t6988;
  t6774 = 4.e-6*t637;
  t7075 = 7.e-6*t637;
  t7026 = -1.*t1607;
  t7035 = 1. + t7026;
  t7041 = 0.15121*t1869;
  t7049 = 1.0248489999999998e-12*var1[13];
  t7061 = -0.28120900000849935*t637;
  t7062 = t6780 + t1109;
  t7063 = -0.038748999993*t7062;
  t7077 = t7075 + t1944;
  t7087 = -2.123459e-6*t7077;
  t7089 = t1701*t6838;
  t7091 = t1774*t6869;
  t7092 = t1824*t6992;
  t7093 = t7049 + t7061 + t7063 + t7087 + t7089 + t7091 + t7092;
  t7109 = -1.4640699999999997e-7*var1[13];
  t7113 = -1.38024835e-16*t637;
  t7115 = t6774 + t156;
  t7122 = -0.038748999993*t7115;
  t7123 = t7075 + t1683;
  t7130 = -0.281209000004*t7123;
  t7131 = t1896*t6838;
  t7133 = t1934*t6869;
  t7134 = t1961*t6992;
  t7135 = t7109 + t7113 + t7122 + t7130 + t7131 + t7133 + t7134;
  t6765 = 5.856279999999999e-13*var1[13];
  t6766 = -0.0387489999948987*t637;
  t6776 = t6774 + t1900;
  t6778 = -2.123459e-6*t6776;
  t6794 = t6780 + t152;
  t6795 = -0.281209000004*t6794;
  t6840 = t165*t6838;
  t6870 = t718*t6869;
  t7000 = t1114*t6992;
  t7019 = t6765 + t6766 + t6778 + t6795 + t6840 + t6870 + t7000;
  t7040 = -0.15121*t7035;
  t7099 = t1607*t7093;
  t7138 = -1.*t1869*t7135;
  t7139 = t7040 + t7041 + t7099 + t7138;
  t7142 = t1590*t7139;
  t7149 = 0.15121*t7035;
  t7150 = t1869*t7093;
  t7151 = t1607*t7135;
  t7155 = t7149 + t7041 + t7150 + t7151;
  t7157 = -1.*t7155*t2064;
  t7164 = t7142 + t7157;
  t5410 = t1458*t1563;
  t5439 = t18*t2124;
  t5449 = t5410 + t5439;
  t7176 = t18*t7019;
  t7177 = -1.*t1563*t7164;
  t7178 = t7176 + t7177;
  t7171 = t7019*t1563;
  t7172 = t18*t7164;
  t7174 = t7171 + t7172;
  t7024 = -1.*t7019*t1563;
  t7166 = -1.*t18*t7164;
  t7169 = t7024 + t7166;
  t7191 = t1590*t7155;
  t7192 = t7139*t2064;
  t7193 = t7191 + t7192;
  t5362 = t3108*t1563;
  t5367 = t18*t3403;
  t5378 = t5362 + t5367;
  t7635 = -1.*t1590*t7155;
  t7636 = -1.*t7139*t2064;
  t7637 = t7635 + t7636;
  t7194 = -1.*t5488*t7193;
  t7195 = -1.*t5449*t7174;
  t7199 = -1.*t2142*t7178;
  t7200 = t7194 + t7195 + t7199;
  t7228 = t5537*t7193;
  t7230 = t5354*t7174;
  t7231 = t2633*t7178;
  t7238 = t7228 + t7230 + t7231;
  t7269 = t5488*t7193;
  t7270 = t5449*t7174;
  t7292 = t2142*t7178;
  t7303 = t7269 + t7270 + t7292;
  t7339 = -1.*t5573*t7193;
  t7346 = -1.*t5378*t7174;
  t7347 = -1.*t3455*t7178;
  t7363 = t7339 + t7346 + t7347;
  t7464 = -1.*t5537*t7193;
  t7480 = -1.*t5354*t7174;
  t7521 = -1.*t2633*t7178;
  t7524 = t7464 + t7480 + t7521;
  t7582 = t5573*t7193;
  t7594 = t5378*t7174;
  t7605 = t3455*t7178;
  t7610 = t7582 + t7594 + t7605;
  t7909 = 0.15121*t1607;
  t7925 = -0.15121*t1869;
  t7933 = -1.*t1869*t7093;
  t7934 = -1.*t1607*t7135;
  t7938 = t7909 + t7925 + t7933 + t7934;
  t7914 = t7909 + t7041 + t7099 + t7138;
  t7962 = t1590*t7938;
  t7964 = -1.*t7914*t2064;
  t7967 = t7962 + t7964;
  t7916 = t1590*t7914;
  t7946 = t7938*t2064;
  t7947 = t7916 + t7946;
  t4164 = t4157*t1563;
  t4307 = t18*t4291;
  t4308 = t4164 + t4307;
  t3945 = t3929*t1563;
  t4130 = t18*t4112;
  t4146 = t3945 + t4130;
  t8131 = t3868 + t1683;
  t8132 = -0.038748999993*t8131;
  t8138 = t3987 + t1900;
  t8139 = -0.281209000004*t8138;
  t8141 = -1.38024835e-16*t152;
  t8144 = -6.5e-11*t152*t6838;
  t8148 = t3960*t6869;
  t8150 = t3968*t6992;
  t8151 = -1.4640699999999997e-7 + t8132 + t8139 + t8141 + t8144 + t8148 + t8150;
  t8157 = -2.8e-11*t152;
  t8159 = t600 + t8157;
  t8161 = -0.038748999993*t8159;
  t8163 = t3965 + t1900;
  t8165 = -2.123459e-6*t8163;
  t8170 = -0.28120900000849935*t152;
  t8174 = t3999*t6838;
  t8177 = t4009*t6869;
  t8179 = -1.000000000016*t152*t6992;
  t8180 = 1.0248489999999998e-12 + t8161 + t8165 + t8170 + t8174 + t8177 + t8179;
  t8198 = -1.*t1869*t8151;
  t8199 = t1607*t8180;
  t8200 = t8198 + t8199;
  t8155 = t1607*t8151;
  t8184 = t1869*t8180;
  t8185 = t8155 + t8184;
  t8215 = t33 + t8157;
  t8216 = -0.281209000004*t8215;
  t8217 = t3959 + t1683;
  t8221 = -2.123459e-6*t8217;
  t8229 = -0.0387489999948987*t152;
  t8230 = t3870*t6838;
  t8232 = -1.000000000049*t152*t6869;
  t8234 = t3919*t6992;
  t8237 = 5.856279999999999e-13 + t8216 + t8221 + t8229 + t8230 + t8232 + t8234;
  t8240 = t1590*t8200;
  t8242 = -1.*t8185*t2064;
  t8244 = t8240 + t8242;
  t8190 = t1590*t8185;
  t8201 = t8200*t2064;
  t8202 = t8190 + t8201;
  t8239 = t8237*t1563;
  t8246 = t18*t8244;
  t8249 = t8239 + t8246;
  t8251 = t18*t8237;
  t8254 = -1.*t1563*t8244;
  t8257 = t8251 + t8254;
  t4332 = t4328*t1563;
  t4454 = t18*t4445;
  t4466 = t4332 + t4454;
  t8467 = -0.80315*t4494;
  t8468 = t4836 + t405;
  t8470 = -0.038924*t8468;
  t8471 = -0.038922999986*t4509;
  t8475 = t4583 + t2724;
  t8481 = -0.503149000008*t8475;
  t8483 = -9.666064052774999e-12*t375;
  t8484 = -2.598649999999999e-7 + t8467 + t8470 + t8471 + t8481 + t8483;
  t8493 = 0.148705*t4818;
  t8498 = t166 + t4588;
  t8502 = -0.503149000008*t8498;
  t8504 = -0.80315*t4674;
  t8528 = t4836 + t1308;
  t8530 = -3.6777349999999994e-6*t8528;
  t8531 = 1.0000140000590574e-6*t375;
  t8533 = 1.0394599999999997e-12 + t8493 + t8502 + t8504 + t8530 + t8531;
  t8541 = 0.148705*t4856;
  t8542 = -0.038922999986*t4639;
  t8546 = t166 + t4664;
  t8550 = -0.038924*t8546;
  t8551 = t4490 + t2724;
  t8558 = -3.6777349999999994e-6*t8551;
  t8559 = 0.30000099999679997*t375;
  t8563 = 1.8190549999999993e-12 + t8541 + t8542 + t8550 + t8558 + t8559;
  t8491 = t1701*t8484;
  t8536 = t1774*t8533;
  t8567 = t1824*t8563;
  t8569 = t8491 + t8536 + t8567;
  t8572 = t1896*t8484;
  t8573 = t1934*t8533;
  t8574 = t1961*t8563;
  t8575 = t8572 + t8573 + t8574;
  t8586 = t1607*t8569;
  t8588 = -1.*t1869*t8575;
  t8591 = t8586 + t8588;
  t8570 = t1869*t8569;
  t8581 = t1607*t8575;
  t8582 = t8570 + t8581;
  t8606 = t165*t8484;
  t8611 = t718*t8533;
  t8612 = t1114*t8563;
  t8620 = t8606 + t8611 + t8612;
  t8633 = t1590*t8591;
  t8641 = -1.*t8582*t2064;
  t8644 = t8633 + t8641;
  t4717 = t4716*t1563;
  t4811 = t18*t4810;
  t4813 = t4717 + t4811;
  t8585 = t1590*t8582;
  t8595 = t8591*t2064;
  t8599 = t8585 + t8595;
  t8629 = t8620*t1563;
  t8647 = t18*t8644;
  t8649 = t8629 + t8647;
  t8726 = t18*t8620;
  t8728 = -1.*t1563*t8644;
  t8734 = t8726 + t8728;
  t4872 = t4870*t1563;
  t5086 = t18*t5085;
  t5089 = t4872 + t5086;
  t5150 = t5145*t1563;
  t5272 = t18*t5271;
  t5274 = t5150 + t5272;
  t7632 = -1.*t5488*t7164;
  t7633 = -1.*t2124*t7193;
  t7670 = t5537*t7164;
  t7671 = t2602*t7193;
  t7726 = t5488*t7164;
  t7729 = t2124*t7193;
  t7751 = -1.*t5573*t7164;
  t7755 = -1.*t3403*t7193;
  t7795 = -1.*t5537*t7164;
  t7803 = -1.*t2602*t7193;
  t7857 = t5573*t7164;
  t7863 = t3403*t7193;
  t8914 = -1.*t1458*t7019;
  t8924 = -1.*t2124*t7164;
  t8925 = t8914 + t8924 + t7194;
  t8949 = t2365*t7019;
  t8954 = t2602*t7164;
  t8955 = t8949 + t8954 + t7228;
  t7949 = -1.*t5488*t7947;
  t7960 = -1.*t5740*t7193;
  t7986 = t5537*t7947;
  t7991 = t5766*t7193;
  t8987 = t1458*t7019;
  t8988 = t2124*t7164;
  t8993 = t8987 + t8988 + t7269;
  t9007 = -1.*t3108*t7019;
  t9011 = -1.*t3403*t7164;
  t9032 = t9007 + t9011 + t7339;
  t8018 = t5488*t7947;
  t8019 = t5740*t7193;
  t8039 = -1.*t5573*t7947;
  t8040 = -1.*t5795*t7193;
  t9041 = -1.*t2365*t7019;
  t9042 = -1.*t2602*t7164;
  t9043 = t9041 + t9042 + t7464;
  t9083 = t3108*t7019;
  t9084 = t3403*t7164;
  t9087 = t9083 + t9084 + t7582;
  t8067 = -1.*t5537*t7947;
  t8072 = -1.*t5766*t7193;
  t8091 = t5573*t7947;
  t8093 = t5795*t7193;
  t8130 = -1.*t5850*t7193;
  t8205 = -1.*t5488*t8202;
  t8270 = t5916*t7193;
  t8274 = t5537*t8202;
  t8341 = t5850*t7193;
  t8342 = t5488*t8202;
  t8361 = -1.*t5987*t7193;
  t8363 = -1.*t5573*t8202;
  t8379 = -1.*t5916*t7193;
  t8381 = -1.*t5537*t8202;
  t8421 = t5987*t7193;
  t8427 = t5573*t8202;
  t8600 = t5488*t8599;
  t8605 = t6043*t7193;
  t8754 = -1.*t8599*t5573;
  t8757 = -1.*t6085*t7193;
  t8789 = t8599*t5573;
  t8790 = t6085*t7193;
  t8816 = -1.*t8599*t5537;
  t8817 = -1.*t6139*t7193;
  t8836 = -1.*t5488*t8599;
  t8843 = -1.*t6043*t7193;
  t8863 = t8599*t5537;
  t8866 = t6139*t7193;
  t9250 = -1.*t3929*t7019;
  t9251 = -1.*t1458*t8237;
  t9259 = t4157*t7019;
  t9278 = t2365*t8237;
  t9302 = t3929*t7019;
  t9304 = t1458*t8237;
  t9316 = -1.*t4328*t7019;
  t9318 = -1.*t3108*t8237;
  t9335 = -1.*t4157*t7019;
  t9341 = -1.*t2365*t8237;
  t9356 = t4328*t7019;
  t9364 = t3108*t8237;
  t9385 = t1458*t8620;
  t9389 = t4716*t7019;
  t9396 = -1.*t8620*t3108;
  t9397 = -1.*t4870*t7019;
  t9626 = t2062*t7155;
  t9628 = t1996*t7139;
  t9630 = t8987 + t9626 + t9628;
  t9632 = -1.*t3358*t7155;
  t9633 = -1.*t3316*t7139;
  t9635 = t9007 + t9632 + t9633;
  t9412 = t8620*t3108;
  t9415 = t4870*t7019;
  t9656 = -1.*t2594*t7155;
  t9657 = -1.*t2547*t7139;
  t9658 = t9041 + t9656 + t9657;
  t9661 = t3358*t7155;
  t9662 = t3316*t7139;
  t9663 = t9083 + t9661 + t9662;
  t9427 = -1.*t8620*t2365;
  t9428 = -1.*t5145*t7019;
  t9439 = -1.*t1458*t8620;
  t9440 = -1.*t4716*t7019;
  t9585 = -1.*t2062*t7155;
  t9586 = -1.*t1996*t7139;
  t9589 = t8914 + t9585 + t9586;
  t9598 = t2594*t7155;
  t9600 = t2547*t7139;
  t9602 = t8949 + t9598 + t9600;
  t9450 = t8620*t2365;
  t9452 = t5145*t7019;
  t9912 = t1826*t7093;
  t9916 = t1986*t7135;
  t9917 = t9912 + t8987 + t9916;
  t9924 = -1.*t3222*t7093;
  t9929 = -1.*t3269*t7135;
  t9930 = t9924 + t9007 + t9929;
  t9974 = -1.*t2523*t7093;
  t9978 = -1.*t2461*t7135;
  t9979 = t9974 + t9041 + t9978;
  t9982 = t3222*t7093;
  t9984 = t3269*t7135;
  t9985 = t9982 + t9083 + t9984;
  t9841 = -1.*t1826*t7093;
  t9842 = -1.*t1986*t7135;
  t9845 = t9841 + t8914 + t9842;
  t9851 = t2523*t7093;
  t9853 = t2461*t7135;
  t9857 = t9851 + t8949 + t9853;
  t10160 = t6838*t4526;
  t10162 = t497*t8484;
  t10163 = t905*t8533;
  t10164 = t1310*t8563;
  t10166 = t4710*t6869;
  t10170 = t4660*t6992;
  t10171 = t10160 + t10162 + t10163 + t10164 + t10166 + t10170;
  t10173 = -1.*t6838*t4842;
  t10174 = -1.*t2693*t8533;
  t10176 = -1.*t8484*t2756;
  t10177 = -1.*t8563*t3036;
  t10178 = -1.*t4833*t6869;
  t10180 = -1.*t4858*t6992;
  t10181 = t10173 + t10174 + t10176 + t10177 + t10178 + t10180;
  t10183 = t497*t6838;
  t10193 = t905*t6869;
  t10194 = t1310*t6992;
  t10198 = t10183 + t10193 + t10194;
  t10200 = -1.*t6838*t2756;
  t10202 = -1.*t2693*t6869;
  t10203 = -1.*t3036*t6992;
  t10205 = t10200 + t10202 + t10203;
  t10239 = -1.*t6838*t2300;
  t10244 = -1.*t2345*t6869;
  t10245 = -1.*t2217*t6992;
  t10246 = t10239 + t10244 + t10245;
  t10252 = t6838*t4842;
  t10254 = t2693*t8533;
  t10255 = t8484*t2756;
  t10256 = t8563*t3036;
  t10257 = t4833*t6869;
  t10259 = t4858*t6992;
  t10260 = t10252 + t10254 + t10255 + t10256 + t10257 + t10259;
  t10264 = t6838*t2756;
  t10266 = t2693*t6869;
  t10268 = t3036*t6992;
  t10270 = t10264 + t10266 + t10268;
  t10273 = -1.*t8484*t2300;
  t10276 = -1.*t6838*t5123;
  t10277 = -1.*t2217*t8563;
  t10278 = -1.*t8533*t2345;
  t10279 = -1.*t5101*t6869;
  t10280 = -1.*t5127*t6992;
  t10281 = t10273 + t10276 + t10277 + t10278 + t10279 + t10280;
  t10317 = t6838*t2300;
  t10320 = t2345*t6869;
  t10322 = t2217*t6992;
  t10325 = t10317 + t10320 + t10322;
  t10328 = -1.*t6838*t4526;
  t10329 = -1.*t497*t8484;
  t10330 = -1.*t905*t8533;
  t10331 = -1.*t1310*t8563;
  t10332 = -1.*t4710*t6869;
  t10334 = -1.*t4660*t6992;
  t10336 = t10328 + t10329 + t10330 + t10331 + t10332 + t10334;
  t10340 = -1.*t497*t6838;
  t10341 = -1.*t905*t6869;
  t10342 = -1.*t1310*t6992;
  t10343 = t10340 + t10341 + t10342;
  t10346 = t8484*t2300;
  t10347 = t6838*t5123;
  t10348 = t2217*t8563;
  t10350 = t8533*t2345;
  t10351 = t5101*t6869;
  t10352 = t5127*t6992;
  t10354 = t10346 + t10347 + t10348 + t10350 + t10351 + t10352;
  t10409 = 6.5e-11*t250;
  p_output1[0]=t2633*var2[0] + t3455*var2[1] + t2142*var2[2];
  p_output1[1]=t18*t3552*var2[0] + t18*t3604*var2[1] + t18*t3539*var2[2];
  p_output1[2]=t18*t3785*var2[0] + t18*t3845*var2[1] + t18*t3714*var2[2];
  p_output1[3]=t4308*var2[0] + t4466*var2[1] + t4146*var2[2];
  p_output1[4]=t5274*var2[0] + t5089*var2[1] + t4813*var2[2];
  p_output1[5]=t5354;
  p_output1[6]=t5378;
  p_output1[7]=t5449;
  p_output1[8]=(-1.*t2633*t5491 - 1.*t5461*t5537)*var2[0] + (-1.*t3455*t5491 - 1.*t5461*t5573)*var2[1] + (-1.*t5461*t5488 - 1.*t2142*t5491)*var2[2];
  p_output1[9]=-1.*t5461*t5638*var2[0] - 1.*t5461*t5649*var2[1] - 1.*t5461*t5625*var2[2];
  p_output1[10]=(t1563*t3552*t5461 + t2602*t5491)*var2[0] + (t1563*t3604*t5461 + t3403*t5491)*var2[1] + (t1563*t3539*t5461 + t2124*t5491)*var2[2];
  p_output1[11]=(t1563*t3785*t5461 + t5491*t5766)*var2[0] + (t1563*t3845*t5461 + t5491*t5795)*var2[1] + (t1563*t3714*t5461 + t5491*t5740)*var2[2];
  p_output1[12]=(t5491*t5916 - 1.*t5461*t5949)*var2[0] + (t5491*t5987 - 1.*t5461*t6004)*var2[1] + (t5491*t5850 - 1.*t5461*t5871)*var2[2];
  p_output1[13]=(t5491*t6139 - 1.*t5461*t6165)*var2[0] + (t5491*t6085 - 1.*t5461*t6094)*var2[1] + (t5491*t6043 - 1.*t5461*t6066)*var2[2];
  p_output1[14]=t6198;
  p_output1[15]=t6209;
  p_output1[16]=t6219;
  p_output1[17]=t6198*var2[0] + t6209*var2[1] + t6219*var2[2];
  p_output1[18]=t5491*t5638*var2[0] + t5491*t5649*var2[1] + t5491*t5625*var2[2];
  p_output1[19]=(t2602*t5461 - 1.*t1563*t3552*t5491)*var2[0] + (t3403*t5461 - 1.*t1563*t3604*t5491)*var2[1] + (t2124*t5461 - 1.*t1563*t3539*t5491)*var2[2];
  p_output1[20]=(-1.*t1563*t3785*t5491 + t5461*t5766)*var2[0] + (-1.*t1563*t3845*t5491 + t5461*t5795)*var2[1] + (-1.*t1563*t3714*t5491 + t5461*t5740)*var2[2];
  p_output1[21]=(t5461*t5916 + t5491*t5949)*var2[0] + (t5461*t5987 + t5491*t6004)*var2[1] + (t5461*t5850 + t5491*t5871)*var2[2];
  p_output1[22]=(t5461*t6139 + t5491*t6165)*var2[0] + (t5461*t6085 + t5491*t6094)*var2[1] + (t5461*t6043 + t5491*t6066)*var2[2];
  p_output1[23]=t2633*t5491 + t5461*t5537;
  p_output1[24]=t3455*t5491 + t5461*t5573;
  p_output1[25]=t5461*t5488 + t2142*t5491;
  p_output1[26]=(t5378*(t2142*t7169 + t2142*t7174 + t5449*t7178 + t5625*t7178) + t5449*(-1.*t3455*t7169 - 1.*t3455*t7174 - 1.*t5378*t7178 - 1.*t5649*t7178) + t3455*t7303 + t2142*t7363)*var2[0] + (t5354*(-1.*t2142*t7169 - 1.*t2142*t7174 - 1.*t5449*t7178 - 1.*t5625*t7178) + t5449*(t2633*t7169 + t2633*t7174 + t5354*t7178 + t5638*t7178) + t2633*t7200 + t2142*t7238)*var2[1] + (t5378*(-1.*t2633*t7169 - 1.*t2633*t7174 - 1.*t5354*t7178 - 1.*t5638*t7178) + t5354*(t3455*t7169 + t3455*t7174 + t5378*t7178 + t5649*t7178) + t3455*t7524 + t2633*t7610)*var2[2];
  p_output1[27]=(t18*t3604*t7303 + t18*t3539*t7363 + t5378*(t18*t3539*t7174 - 1.*t1563*t3539*t7178 - 1.*t1563*t2142*t7637 + t18*t5449*t7637 + t7726 + t7729) + t5449*(-1.*t18*t3604*t7174 + t1563*t3604*t7178 + t1563*t3455*t7637 - 1.*t18*t5378*t7637 + t7751 + t7755))*var2[0] + (t18*t3552*t7200 + t18*t3539*t7238 + t5354*(-1.*t18*t3539*t7174 + t1563*t3539*t7178 + t7632 + t7633 + t1563*t2142*t7637 - 1.*t18*t5449*t7637) + t5449*(t18*t3552*t7174 - 1.*t1563*t3552*t7178 - 1.*t1563*t2633*t7637 + t18*t5354*t7637 + t7670 + t7671))*var2[1] + (t18*t3604*t7524 + t18*t3552*t7610 + t5378*(-1.*t18*t3552*t7174 + t1563*t3552*t7178 + t1563*t2633*t7637 - 1.*t18*t5354*t7637 + t7795 + t7803) + t5354*(t18*t3604*t7174 - 1.*t1563*t3604*t7178 - 1.*t1563*t3455*t7637 + t18*t5378*t7637 + t7857 + t7863))*var2[2];
  p_output1[28]=(t18*t3845*t7303 + t18*t3714*t7363 + t5378*(t18*t3714*t7174 - 1.*t1563*t3714*t7178 - 1.*t1563*t2142*t7967 + t18*t5449*t7967 + t8018 + t8019) + t5449*(-1.*t18*t3845*t7174 + t1563*t3845*t7178 + t1563*t3455*t7967 - 1.*t18*t5378*t7967 + t8039 + t8040))*var2[0] + (t18*t3785*t7200 + t18*t3714*t7238 + t5354*(-1.*t18*t3714*t7174 + t1563*t3714*t7178 + t7949 + t7960 + t1563*t2142*t7967 - 1.*t18*t5449*t7967) + t5449*(t18*t3785*t7174 - 1.*t1563*t3785*t7178 - 1.*t1563*t2633*t7967 + t18*t5354*t7967 + t7986 + t7991))*var2[1] + (t18*t3845*t7524 + t18*t3785*t7610 + t5378*(-1.*t18*t3785*t7174 + t1563*t3785*t7178 + t1563*t2633*t7967 - 1.*t18*t5354*t7967 + t8067 + t8072) + t5354*(t18*t3845*t7174 - 1.*t1563*t3845*t7178 - 1.*t1563*t3455*t7967 + t18*t5378*t7967 + t8091 + t8093))*var2[2];
  p_output1[29]=(t4466*t7303 + t4146*t7363 + t5378*(t4146*t7174 + t5871*t7178 + t5449*t8249 + t2142*t8257 + t8341 + t8342) + t5449*(-1.*t4466*t7174 - 1.*t6004*t7178 - 1.*t5378*t8249 - 1.*t3455*t8257 + t8361 + t8363))*var2[0] + (t4308*t7200 + t4146*t7238 + t5354*(-1.*t4146*t7174 - 1.*t5871*t7178 + t8130 + t8205 - 1.*t5449*t8249 - 1.*t2142*t8257) + t5449*(t4308*t7174 + t5949*t7178 + t5354*t8249 + t2633*t8257 + t8270 + t8274))*var2[1] + (t4466*t7524 + t4308*t7610 + t5378*(-1.*t4308*t7174 - 1.*t5949*t7178 - 1.*t5354*t8249 - 1.*t2633*t8257 + t8379 + t8381) + t5354*(t4466*t7174 + t6004*t7178 + t5378*t8249 + t3455*t8257 + t8421 + t8427))*var2[2];
  p_output1[30]=(t5089*t7303 + t4813*t7363 + t5378*(t4813*t7174 + t6066*t7178 + t8600 + t8605 + t5449*t8649 + t2142*t8734) + t5449*(-1.*t5089*t7174 - 1.*t6094*t7178 - 1.*t5378*t8649 - 1.*t3455*t8734 + t8754 + t8757))*var2[0] + (t5274*t7200 + t4813*t7238 + t5354*(-1.*t4813*t7174 - 1.*t6066*t7178 - 1.*t5449*t8649 - 1.*t2142*t8734 + t8836 + t8843) + t5449*(t5274*t7174 + t6165*t7178 + t5354*t8649 + t2633*t8734 + t8863 + t8866))*var2[1] + (t5089*t7524 + t5274*t7610 + t5354*(t5089*t7174 + t6094*t7178 + t5378*t8649 + t3455*t8734 + t8789 + t8790) + t5378*(-1.*t5274*t7174 - 1.*t6165*t7178 - 1.*t5354*t8649 - 1.*t2633*t8734 + t8816 + t8817))*var2[2];
  p_output1[31]=t5378*t7303 + t5449*t7363;
  p_output1[32]=t5354*t7200 + t5449*t7238;
  p_output1[33]=t5378*t7524 + t5354*t7610;
  p_output1[34]=(t5573*(t3539*t7164 + t2124*t7637 + t7726 + t7729) + t5488*(-1.*t3604*t7164 - 1.*t3403*t7637 + t7751 + t7755) + t3403*t8993 + t2124*t9032)*var2[0] + (t5537*(-1.*t3539*t7164 + t7632 + t7633 - 1.*t2124*t7637) + t5488*(t3552*t7164 + t2602*t7637 + t7670 + t7671) + t2602*t8925 + t2124*t8955)*var2[1] + (t5573*(-1.*t3552*t7164 - 1.*t2602*t7637 + t7795 + t7803) + t5537*(t3604*t7164 + t3403*t7637 + t7857 + t7863) + t3403*t9043 + t2602*t9087)*var2[2];
  p_output1[35]=(t5573*(t3714*t7164 + t2124*t7967 + t8018 + t8019) + t5488*(-1.*t3845*t7164 - 1.*t3403*t7967 + t8039 + t8040) + t5795*t8993 + t5740*t9032)*var2[0] + (t5537*(-1.*t3714*t7164 + t7949 + t7960 - 1.*t2124*t7967) + t5488*(t3785*t7164 + t2602*t7967 + t7986 + t7991) + t5766*t8925 + t5740*t8955)*var2[1] + (t5573*(-1.*t3785*t7164 - 1.*t2602*t7967 + t8067 + t8072) + t5537*(t3845*t7164 + t3403*t7967 + t8091 + t8093) + t5795*t9043 + t5766*t9087)*var2[2];
  p_output1[36]=(t5987*t8993 + t5850*t9032 + t5573*(t4112*t7164 + t2124*t8244 + t8341 + t8342 + t9302 + t9304) + t5488*(-1.*t4445*t7164 - 1.*t3403*t8244 + t8361 + t8363 + t9316 + t9318))*var2[0] + (t5916*t8925 + t5850*t8955 + t5537*(-1.*t4112*t7164 + t8130 + t8205 - 1.*t2124*t8244 + t9250 + t9251) + t5488*(t4291*t7164 + t2602*t8244 + t8270 + t8274 + t9259 + t9278))*var2[1] + (t5987*t9043 + t5916*t9087 + t5573*(-1.*t4291*t7164 - 1.*t2602*t8244 + t8379 + t8381 + t9335 + t9341) + t5537*(t4445*t7164 + t3403*t8244 + t8421 + t8427 + t9356 + t9364))*var2[2];
  p_output1[37]=(t6085*t8993 + t6043*t9032 + t5573*(t4810*t7164 + t8600 + t8605 + t2124*t8644 + t9385 + t9389) + t5488*(-1.*t5085*t7164 - 1.*t3403*t8644 + t8754 + t8757 + t9396 + t9397))*var2[0] + (t6139*t8925 + t6043*t8955 + t5537*(-1.*t4810*t7164 - 1.*t2124*t8644 + t8836 + t8843 + t9439 + t9440) + t5488*(t5271*t7164 + t2602*t8644 + t8863 + t8866 + t9450 + t9452))*var2[1] + (t6085*t9043 + t6139*t9087 + t5537*(t5085*t7164 + t3403*t8644 + t8789 + t8790 + t9412 + t9415) + t5573*(-1.*t5271*t7164 - 1.*t2602*t8644 + t8816 + t8817 + t9427 + t9428))*var2[2];
  p_output1[38]=t5573*t8993 + t5488*t9032;
  p_output1[39]=t5537*t8925 + t5488*t8955;
  p_output1[40]=t5573*t9043 + t5537*t9087;
  p_output1[41]=(t3108*(t3692*t7139 + t1996*t7155 + t2062*t7914 + t1996*t7938) + t1458*(-1.*t3798*t7139 - 1.*t3316*t7155 - 1.*t3358*t7914 - 1.*t3316*t7938))*var2[0] + (t2365*(-1.*t3692*t7139 - 1.*t1996*t7155 - 1.*t2062*t7914 - 1.*t1996*t7938) + t1458*(t3770*t7139 + t2547*t7155 + t2594*t7914 + t2547*t7938))*var2[1] + (t3108*(-1.*t3770*t7139 - 1.*t2547*t7155 - 1.*t2594*t7914 - 1.*t2547*t7938) + t2365*(t3798*t7139 + t3316*t7155 + t3358*t7914 + t3316*t7938))*var2[2];
  p_output1[42]=(t3108*(t4051*t7139 + t4085*t7155 + t2062*t8185 + t1996*t8200 + t9302 + t9304) + t1458*(-1.*t4401*t7139 - 1.*t4438*t7155 - 1.*t3358*t8185 - 1.*t3316*t8200 + t9316 + t9318) + t4328*t9630 + t3929*t9635)*var2[0] + (t2365*(-1.*t4051*t7139 - 1.*t4085*t7155 - 1.*t2062*t8185 - 1.*t1996*t8200 + t9250 + t9251) + t1458*(t4257*t7139 + t4282*t7155 + t2594*t8185 + t2547*t8200 + t9259 + t9278) + t4157*t9589 + t3929*t9602)*var2[1] + (t3108*(-1.*t4257*t7139 - 1.*t4282*t7155 - 1.*t2594*t8185 - 1.*t2547*t8200 + t9335 + t9341) + t2365*(t4401*t7139 + t4438*t7155 + t3358*t8185 + t3316*t8200 + t9356 + t9364) + t4328*t9658 + t4157*t9663)*var2[2];
  p_output1[43]=(t3108*(t4763*t7139 + t4806*t7155 + t2062*t8582 + t1996*t8591 + t9385 + t9389) + t1458*(-1.*t5061*t7139 - 1.*t5077*t7155 - 1.*t3358*t8582 - 1.*t3316*t8591 + t9396 + t9397) + t4870*t9630 + t4716*t9635)*var2[0] + (t2365*(-1.*t4763*t7139 - 1.*t4806*t7155 - 1.*t2062*t8582 - 1.*t1996*t8591 + t9439 + t9440) + t1458*(t5234*t7139 + t5253*t7155 + t2594*t8582 + t2547*t8591 + t9450 + t9452) + t5145*t9589 + t4716*t9602)*var2[1] + (t2365*(t5061*t7139 + t5077*t7155 + t3358*t8582 + t3316*t8591 + t9412 + t9415) + t3108*(-1.*t5234*t7139 - 1.*t5253*t7155 - 1.*t2594*t8582 - 1.*t2547*t8591 + t9427 + t9428) + t4870*t9658 + t5145*t9663)*var2[2];
  p_output1[44]=t3108*t9630 + t1458*t9635;
  p_output1[45]=t2365*t9589 + t1458*t9602;
  p_output1[46]=t3108*t9658 + t2365*t9663;
  p_output1[47]=(0.15121*t4226 + 0.15121*t4249 + t3108*(t4026*t7093 + t3985*t7135 + t1986*t8151 + t1826*t8180 + t9302 + t9304) + t1458*(-1.*t4384*t7093 - 1.*t4347*t7135 - 1.*t3269*t8151 - 1.*t3222*t8180 + t9316 + t9318) + t4328*t9917 + t3929*t9930)*var2[0] + (0.15121*t4347 + 0.15121*t4384 + t2365*(-1.*t4026*t7093 - 1.*t3985*t7135 - 1.*t1986*t8151 - 1.*t1826*t8180 + t9250 + t9251) + t1458*(t4249*t7093 + t4226*t7135 + t2461*t8151 + t2523*t8180 + t9259 + t9278) + t4157*t9845 + t3929*t9857)*var2[1] + (0.15121*t3985 + 0.15121*t4026 + t3108*(-1.*t4249*t7093 - 1.*t4226*t7135 - 1.*t2461*t8151 - 1.*t2523*t8180 + t9335 + t9341) + t2365*(t4384*t7093 + t4347*t7135 + t3269*t8151 + t3222*t8180 + t9356 + t9364) + t4328*t9979 + t4157*t9985)*var2[2];
  p_output1[48]=(0.15121*t5182 + 0.15121*t5216 + t3108*(t4756*t7093 + t4739*t7135 + t1826*t8569 + t1986*t8575 + t9385 + t9389) + t1458*(-1.*t4925*t7093 - 1.*t5056*t7135 - 1.*t3222*t8569 - 1.*t3269*t8575 + t9396 + t9397) + t4870*t9917 + t4716*t9930)*var2[0] + (0.15121*t4925 + 0.15121*t5056 + t2365*(-1.*t4756*t7093 - 1.*t4739*t7135 - 1.*t1826*t8569 - 1.*t1986*t8575 + t9439 + t9440) + t1458*(t5182*t7093 + t5216*t7135 + t2523*t8569 + t2461*t8575 + t9450 + t9452) + t5145*t9845 + t4716*t9857)*var2[1] + (0.15121*t4739 + 0.15121*t4756 + t2365*(t4925*t7093 + t5056*t7135 + t3222*t8569 + t3269*t8575 + t9412 + t9415) + t3108*(-1.*t5182*t7093 - 1.*t5216*t7135 - 1.*t2523*t8569 - 1.*t2461*t8575 + t9427 + t9428) + t4870*t9979 + t5145*t9985)*var2[2];
  p_output1[49]=0.15121*t2461 + 0.15121*t2523 + t3108*t9917 + t1458*t9930;
  p_output1[50]=0.15121*t3222 + 0.15121*t3269 + t2365*t9845 + t1458*t9857;
  p_output1[51]=0.15121*t1826 + 0.15121*t1986 + t3108*t9979 + t2365*t9985;
  p_output1[52]=(t10171*t2756 + 1.e-6*(-7.000000000455e-6*t375 + t4490) + t10205*t4526 + t10198*t4842 - 7.e-6*(t10181*t1310 + t10171*t3036 + t10205*t4660 + t10198*t4858) + t10181*t497 - 0.281209*t5101 + 0.038749*t5127 + 4.e-6*(-1.*t10171*t2693 - 1.*t10205*t4710 - 1.*t10198*t4833 - 1.*t10181*t905))*var2[0] + (t10336*t2300 + 1.e-6*(4.00000000026e-6*t375 + t4507) + t10325*t4526 - 0.281209*t4833 + 0.038749*t4858 + t10354*t497 + t10343*t5123 - 7.e-6*(t10354*t1310 + t10336*t2217 + t10325*t4660 + t10343*t5127) + 4.e-6*(-1.*t10336*t2345 - 1.*t10325*t4710 - 1.*t10343*t5101 - 1.*t10354*t905))*var2[1] + (t10260*t2300 + t10281*t2756 + 0.038749*t4660 - 0.281209*t4710 + t10246*t4842 + 4.e-6*(-1.*t10260*t2345 - 1.*t10281*t2693 - 1.*t10246*t4833 - 1.*t10270*t5101) + t10270*t5123 - 7.e-6*(t10260*t2217 + t10281*t3036 + t10246*t4858 + t10270*t5127) + 1.e-6*(6.5e-11*t375 + 7.e-6*t4494 + 4.e-6*t8468))*var2[2];
  p_output1[53]=0.038749*t2217 - 0.281209*t2345 + t10198*t2756 - 7.e-6*(t10205*t1310 + t10198*t3036) + 1.e-6*(7.e-6*t2232 + t404 + t405) + t10205*t497 + 4.e-6*(-1.*t10198*t2693 - 1.*t10205*t905);
  p_output1[54]=-7.e-6*(t10325*t1310 + t10343*t2217) + t10343*t2300 - 0.281209*t2693 + 0.038749*t3036 + 1.e-6*(4.e-6*(-1. + t10409) + t335 + t379) + t10325*t497 + 4.e-6*(-1.*t10343*t2345 - 1.*t10325*t905);
  p_output1[55]=0.038749*t1310 + t10270*t2300 + 4.e-6*(-1.*t10270*t2345 - 1.*t10246*t2693) + t10246*t2756 - 7.e-6*(t10270*t2217 + t10246*t3036) + 1.e-6*(-1. + t10409 + 7.e-6*t410 + 4.e-6*t6815) - 0.281209*t905;
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fRlFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
