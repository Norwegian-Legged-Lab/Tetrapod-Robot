/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:04 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t457;
  double t464;
  double t514;
  double t825;
  double t237;
  double t835;
  double t1135;
  double t1187;
  double t313;
  double t856;
  double t1648;
  double t528;
  double t771;
  double t838;
  double t850;
  double t917;
  double t950;
  double t1074;
  double t1109;
  double t1793;
  double t1493;
  double t1507;
  double t1509;
  double t1510;
  double t1531;
  double t1582;
  double t1725;
  double t1726;
  double t1734;
  double t1832;
  double t1878;
  double t1881;
  double t1882;
  double t1991;
  double t2019;
  double t2050;
  double t2092;
  double t277;
  double t301;
  double t2372;
  double t2957;
  double t2475;
  double t2515;
  double t2586;
  double t2621;
  double t2713;
  double t2774;
  double t2839;
  double t2864;
  double t2886;
  double t2368;
  double t3003;
  double t3019;
  double t3021;
  double t3035;
  double t3047;
  double t3057;
  double t3073;
  double t3090;
  double t3097;
  double t3109;
  double t97;
  double t1799;
  double t1802;
  double t339;
  double t402;
  double t1224;
  double t1242;
  double t2166;
  double t2219;
  double t3328;
  double t3352;
  double t3376;
  double t3380;
  double t3440;
  double t3441;
  double t3462;
  double t3470;
  double t3484;
  double t3486;
  double t3494;
  double t3511;
  double t3512;
  double t3522;
  double t3538;
  double t3556;
  double t3561;
  double t3570;
  double t3588;
  double t3223;
  double t3680;
  double t3739;
  double t3771;
  double t3797;
  double t3808;
  double t3831;
  double t3909;
  double t3926;
  double t4007;
  double t4008;
  double t4009;
  double t4010;
  double t4029;
  double t4030;
  double t4040;
  double t4041;
  double t3151;
  double t3163;
  double t3190;
  double t2929;
  double t3112;
  double t3121;
  double t3620;
  double t3641;
  double t3643;
  double t3545;
  double t3602;
  double t3605;
  double t4078;
  double t4129;
  double t4136;
  double t4013;
  double t4053;
  double t4062;
  double t4215;
  double t4263;
  double t4314;
  double t4485;
  double t4513;
  double t4542;
  double t4546;
  double t4564;
  double t4565;
  double t4567;
  double t4568;
  double t4583;
  double t4598;
  double t4599;
  double t4602;
  double t4603;
  double t4605;
  double t4606;
  double t4610;
  double t4487;
  double t4448;
  double t4453;
  double t4725;
  double t4726;
  double t4752;
  double t4753;
  double t4758;
  double t4759;
  double t4777;
  double t4782;
  double t4899;
  double t4900;
  double t4901;
  double t4904;
  double t4912;
  double t4916;
  double t4920;
  double t4922;
  double t4970;
  double t4955;
  double t4960;
  double t4964;
  double t4974;
  double t4975;
  double t4979;
  double t4981;
  double t4985;
  double t4988;
  double t4989;
  double t4994;
  double t5008;
  double t5009;
  double t5012;
  double t5018;
  double t5029;
  double t5034;
  double t5035;
  double t5075;
  double t5081;
  double t5093;
  double t5099;
  double t5120;
  double t5121;
  double t5124;
  double t5128;
  double t5171;
  double t5172;
  double t5176;
  double t5184;
  double t5213;
  double t5229;
  double t5236;
  double t5238;
  double t5240;
  double t5246;
  double t5252;
  double t5254;
  double t5255;
  double t5257;
  double t5260;
  double t5263;
  double t5264;
  double t5266;
  double t5293;
  double t5295;
  double t5297;
  double t5298;
  double t5304;
  double t5308;
  double t5309;
  double t5318;
  double t5322;
  double t5323;
  double t5324;
  double t5326;
  double t5327;
  double t5328;
  double t5329;
  double t3402;
  double t3479;
  double t3497;
  double t3502;
  double t3609;
  double t3644;
  double t3651;
  double t3792;
  double t3908;
  double t3937;
  double t3992;
  double t4068;
  double t4155;
  double t4175;
  double t1128;
  double t1785;
  double t2094;
  double t2102;
  double t3132;
  double t3225;
  double t3242;
  double t2125;
  double t3252;
  double t3262;
  double t5359;
  double t5400;
  double t3505;
  double t3655;
  double t3658;
  double t4001;
  double t4177;
  double t4191;
  double t4194;
  double t4217;
  double t4223;
  double t4292;
  double t4313;
  double t4319;
  double t4342;
  double t4343;
  double t4350;
  double t4357;
  double t4367;
  double t4382;
  double t4392;
  double t4394;
  double t4402;
  double t4408;
  double t4422;
  double t4424;
  double t4433;
  double t4439;
  double t4442;
  double t4627;
  double t4662;
  double t4666;
  double t4590;
  double t4614;
  double t4617;
  double t4455;
  double t4465;
  double t4493;
  double t4501;
  double t4623;
  double t4686;
  double t4688;
  double t4838;
  double t4852;
  double t4867;
  double t4756;
  double t4783;
  double t4786;
  double t4706;
  double t4707;
  double t4711;
  double t4718;
  double t4787;
  double t4869;
  double t4874;
  double t4929;
  double t4930;
  double t4933;
  double t4909;
  double t4926;
  double t4927;
  double t4880;
  double t4892;
  double t4894;
  double t4895;
  double t4928;
  double t4934;
  double t4938;
  double t5148;
  double t5152;
  double t5156;
  double t5112;
  double t5133;
  double t5139;
  double t4984;
  double t5011;
  double t5039;
  double t5054;
  double t5144;
  double t5160;
  double t5162;
  double t5274;
  double t5276;
  double t5277;
  double t5259;
  double t5269;
  double t5271;
  double t5210;
  double t5237;
  double t5249;
  double t5250;
  double t5273;
  double t5279;
  double t5283;
  double t5333;
  double t5334;
  double t5335;
  double t5325;
  double t5330;
  double t5331;
  double t5296;
  double t5299;
  double t5310;
  double t5311;
  double t5332;
  double t5336;
  double t5337;
  double t5421;
  double t5441;
  double t5456;
  double t5505;
  double t5511;
  double t5512;
  double t5372;
  double t5375;
  double t5376;
  double t5999;
  double t6008;
  double t6013;
  double t5973;
  double t5974;
  double t5976;
  double t5977;
  double t5978;
  double t5989;
  double t5548;
  double t5549;
  double t5551;
  double t5564;
  double t5566;
  double t5567;
  double t5585;
  double t5590;
  double t5591;
  double t5652;
  double t5654;
  double t5675;
  double t5677;
  double t5704;
  double t5706;
  double t5732;
  double t5735;
  double t5736;
  double t5739;
  double t5744;
  double t5745;
  double t5762;
  double t5763;
  double t5764;
  double t5795;
  double t5799;
  double t5803;
  double t5832;
  double t5836;
  double t5837;
  double t5839;
  double t5840;
  double t5841;
  double t5857;
  double t5870;
  double t5871;
  double t5874;
  double t5876;
  double t5877;
  double t5895;
  double t5896;
  double t5897;
  double t5902;
  double t5905;
  double t5913;
  double t5938;
  double t5939;
  double t5940;
  double t5944;
  double t5945;
  double t5951;
  double t5342;
  double t5343;
  double t5348;
  double t6221;
  double t6224;
  double t6231;
  double t6232;
  double t6233;
  double t6234;
  double t6235;
  double t6239;
  double t6240;
  double t6246;
  double t6247;
  double t6249;
  double t6250;
  double t6251;
  double t6252;
  double t6253;
  double t6254;
  double t6257;
  double t6258;
  double t6259;
  double t6260;
  double t6261;
  double t6264;
  double t6267;
  double t6268;
  double t6269;
  double t6270;
  double t6271;
  double t6272;
  double t6273;
  double t6286;
  double t6287;
  double t6218;
  double t6368;
  double t6316;
  double t6326;
  double t6331;
  double t6345;
  double t6348;
  double t6351;
  double t6365;
  double t6374;
  double t6378;
  double t6380;
  double t6386;
  double t6401;
  double t6419;
  double t6437;
  double t6440;
  double t6441;
  double t6442;
  double t6445;
  double t6448;
  double t6449;
  double t6451;
  double t6453;
  double t6454;
  double t6216;
  double t6217;
  double t6219;
  double t6220;
  double t6222;
  double t6223;
  double t6248;
  double t6262;
  double t6289;
  double t6305;
  double t6328;
  double t6432;
  double t6464;
  double t6470;
  double t6472;
  double t6494;
  double t6497;
  double t6499;
  double t6504;
  double t6508;
  double t6510;
  double t5355;
  double t5356;
  double t5358;
  double t6589;
  double t6591;
  double t6592;
  double t6578;
  double t6581;
  double t6582;
  double t6315;
  double t6542;
  double t6559;
  double t6609;
  double t6615;
  double t6616;
  double t5352;
  double t5353;
  double t5354;
  double t6772;
  double t6773;
  double t6774;
  double t6617;
  double t6618;
  double t6619;
  double t6620;
  double t6642;
  double t6643;
  double t6645;
  double t6646;
  double t6667;
  double t6672;
  double t6673;
  double t6683;
  double t6698;
  double t6699;
  double t6703;
  double t6706;
  double t6726;
  double t6731;
  double t6733;
  double t6735;
  double t6752;
  double t6753;
  double t6754;
  double t6757;
  double t6915;
  double t6920;
  double t6923;
  double t6924;
  double t6928;
  double t6916;
  double t6961;
  double t6962;
  double t6966;
  double t6917;
  double t6930;
  double t6932;
  double t4723;
  double t4877;
  double t4878;
  double t4503;
  double t4690;
  double t4692;
  double t7103;
  double t7104;
  double t7105;
  double t7106;
  double t7107;
  double t7108;
  double t7109;
  double t7110;
  double t7111;
  double t7115;
  double t7117;
  double t7121;
  double t7122;
  double t7123;
  double t7127;
  double t7129;
  double t7133;
  double t7134;
  double t7140;
  double t7144;
  double t7145;
  double t7146;
  double t7112;
  double t7141;
  double t7142;
  double t7152;
  double t7153;
  double t7154;
  double t7156;
  double t7158;
  double t7160;
  double t7161;
  double t7162;
  double t7166;
  double t7178;
  double t7179;
  double t7180;
  double t7143;
  double t7147;
  double t7148;
  double t7170;
  double t7181;
  double t7182;
  double t7190;
  double t7193;
  double t7195;
  double t4898;
  double t4939;
  double t4940;
  double t7343;
  double t7344;
  double t7345;
  double t7346;
  double t7348;
  double t7352;
  double t7353;
  double t7354;
  double t7356;
  double t7357;
  double t7358;
  double t7360;
  double t7361;
  double t7362;
  double t7363;
  double t7364;
  double t7366;
  double t7367;
  double t7368;
  double t7369;
  double t7370;
  double t7372;
  double t7374;
  double t7378;
  double t7355;
  double t7365;
  double t7382;
  double t7383;
  double t7391;
  double t7392;
  double t7393;
  double t7397;
  double t7402;
  double t7403;
  double t7404;
  double t7389;
  double t7398;
  double t7399;
  double t7409;
  double t7410;
  double t7411;
  double t7416;
  double t7418;
  double t7419;
  double t7420;
  double t5058;
  double t5164;
  double t5165;
  double t7401;
  double t7405;
  double t7406;
  double t7417;
  double t7421;
  double t7422;
  double t7424;
  double t7425;
  double t7429;
  double t5251;
  double t5286;
  double t5287;
  double t5312;
  double t5338;
  double t5339;
  double t6766;
  double t6771;
  double t6785;
  double t6787;
  double t6812;
  double t6816;
  double t6830;
  double t6835;
  double t6854;
  double t6857;
  double t6872;
  double t6875;
  double t7565;
  double t7566;
  double t7567;
  double t7569;
  double t7570;
  double t7571;
  double t6933;
  double t6953;
  double t6991;
  double t6993;
  double t7592;
  double t7593;
  double t7596;
  double t7608;
  double t7609;
  double t7610;
  double t7013;
  double t7017;
  double t7037;
  double t7038;
  double t7615;
  double t7616;
  double t7617;
  double t7633;
  double t7637;
  double t7639;
  double t7071;
  double t7073;
  double t7084;
  double t7085;
  double t7101;
  double t7149;
  double t7215;
  double t7218;
  double t7266;
  double t7267;
  double t7276;
  double t7277;
  double t7290;
  double t7291;
  double t7327;
  double t7328;
  double t7407;
  double t7408;
  double t7449;
  double t7450;
  double t7477;
  double t7479;
  double t7497;
  double t7501;
  double t7513;
  double t7514;
  double t7529;
  double t7530;
  double t7722;
  double t7723;
  double t7733;
  double t7734;
  double t7754;
  double t7755;
  double t7763;
  double t7764;
  double t7785;
  double t7786;
  double t7794;
  double t7795;
  double t7805;
  double t7809;
  double t7818;
  double t7820;
  double t7964;
  double t7965;
  double t7966;
  double t7968;
  double t7969;
  double t7970;
  double t7831;
  double t7832;
  double t7987;
  double t7988;
  double t7989;
  double t7991;
  double t7992;
  double t7993;
  double t7840;
  double t7841;
  double t7848;
  double t7849;
  double t7941;
  double t7942;
  double t7944;
  double t7946;
  double t7947;
  double t7948;
  double t7861;
  double t7862;
  double t8101;
  double t8102;
  double t8103;
  double t8105;
  double t8106;
  double t8107;
  double t8125;
  double t8126;
  double t8127;
  double t8129;
  double t8130;
  double t8131;
  double t8076;
  double t8077;
  double t8078;
  double t8080;
  double t8082;
  double t8083;
  double t8228;
  double t8230;
  double t8231;
  double t8232;
  double t8233;
  double t8234;
  double t8235;
  double t8237;
  double t8238;
  double t8239;
  double t8240;
  double t8241;
  double t8242;
  double t8243;
  double t8246;
  double t8247;
  double t8248;
  double t8249;
  double t8251;
  double t8252;
  double t8253;
  double t8254;
  double t8279;
  double t8280;
  double t8281;
  double t8282;
  double t8284;
  double t8285;
  double t8286;
  double t8287;
  double t8288;
  double t8289;
  double t8291;
  double t8293;
  double t8294;
  double t8295;
  double t8296;
  double t8298;
  double t8299;
  double t8301;
  double t8302;
  double t8303;
  double t8304;
  double t8305;
  double t8327;
  double t8328;
  double t8329;
  double t8330;
  double t8333;
  double t8334;
  double t8335;
  double t8336;
  double t8337;
  double t8338;
  double t8339;
  double t8341;
  double t8342;
  double t8343;
  double t8344;
  double t8346;
  double t8347;
  double t8348;
  double t8349;
  double t8350;
  double t8351;
  double t8352;
  double t8388;
  t457 = Cos(var1[14]);
  t464 = -1.*t457;
  t514 = 1. + t464;
  t825 = Sin(var1[14]);
  t237 = Cos(var1[13]);
  t835 = -7.e-6*t825;
  t1135 = -1.*t237;
  t1187 = 1. + t1135;
  t313 = Sin(var1[13]);
  t856 = -7.e-6*t514;
  t1648 = -1.*t825;
  t528 = -6.5e-11*t514;
  t771 = 4.e-6*t514;
  t838 = t771 + t835;
  t850 = 4.e-6*t838;
  t917 = -4.e-6*t825;
  t950 = t856 + t917;
  t1074 = -7.e-6*t950;
  t1109 = 1. + t528 + t850 + t1074;
  t1793 = 2.8e-11*t1187;
  t1493 = 1.000000000049*t514;
  t1507 = -1. + t1493;
  t1509 = 4.e-6*t1507;
  t1510 = -1. + t457;
  t1531 = 4.e-6*t1510;
  t1582 = 2.8e-11*t514;
  t1725 = t1582 + t1648;
  t1726 = -7.e-6*t1725;
  t1734 = t1509 + t1531 + t1726 + t835;
  t1832 = -1.000000000016*t514;
  t1878 = 1. + t1832;
  t1881 = -7.e-6*t1878;
  t1882 = -2.8e-11*t514;
  t1991 = t1882 + t1648;
  t2019 = 4.e-6*t1991;
  t2050 = 4.e-6*t825;
  t2092 = t1881 + t856 + t2019 + t2050;
  t277 = -1. + t237;
  t301 = 4.e-6*t277;
  t2372 = -7.e-6*t1187;
  t2957 = Sin(var1[12]);
  t2475 = 4.e-6*t313;
  t2515 = t2372 + t2475;
  t2586 = t2515*t1109;
  t2621 = t1793 + t313;
  t2713 = t2621*t1734;
  t2774 = -1.000000000016*t1187;
  t2839 = 1. + t2774;
  t2864 = t2839*t2092;
  t2886 = t2586 + t2713 + t2864;
  t2368 = Cos(var1[12]);
  t3003 = -6.5e-11*t1187;
  t3019 = 1. + t3003;
  t3021 = t3019*t1109;
  t3035 = 7.e-6*t313;
  t3047 = t301 + t3035;
  t3057 = t3047*t1734;
  t3073 = -4.e-6*t313;
  t3090 = t2372 + t3073;
  t3097 = t3090*t2092;
  t3109 = t3021 + t3057 + t3097;
  t97 = Cos(var1[4]);
  t1799 = -1.*t313;
  t1802 = t1793 + t1799;
  t339 = -7.e-6*t313;
  t402 = t301 + t339;
  t1224 = -1.000000000049*t1187;
  t1242 = 1. + t1224;
  t2166 = Sin(var1[4]);
  t2219 = Cos(var1[5]);
  t3328 = 1.000000000016*t514;
  t3352 = t856 + t2050;
  t3376 = -7.e-6*t3352;
  t3380 = -1. + t3328 + t3376;
  t3440 = 1. + t528;
  t3441 = -7.e-6*t3440;
  t3462 = 7.e-6*t514;
  t3470 = t3441 + t3462 + t2050;
  t3484 = t1531 + t835;
  t3486 = -7.e-6*t3484;
  t3494 = t1882 + t3486 + t825;
  t3511 = t3090*t3380;
  t3512 = t3019*t3470;
  t3522 = t3047*t3494;
  t3538 = t3511 + t3512 + t3522;
  t3556 = t2839*t3380;
  t3561 = t2515*t3470;
  t3570 = t2621*t3494;
  t3588 = t3556 + t3561 + t3570;
  t3223 = Sin(var1[5]);
  t3680 = -1.000000000049*t514;
  t3739 = 4.e-6*t3484;
  t3771 = 1. + t3680 + t3739;
  t3797 = 4.e-6*t3440;
  t3808 = 7.e-6*t825;
  t3831 = t3797 + t1531 + t3808;
  t3909 = 4.e-6*t3352;
  t3926 = t1582 + t3909 + t825;
  t4007 = t2621*t3771;
  t4008 = t2515*t3831;
  t4009 = t2839*t3926;
  t4010 = t4007 + t4008 + t4009;
  t4029 = t3047*t3771;
  t4030 = t3019*t3831;
  t4040 = t3090*t3926;
  t4041 = t4029 + t4030 + t4040;
  t3151 = t2957*t2886;
  t3163 = t2368*t3109;
  t3190 = t3151 + t3163;
  t2929 = t2368*t2886;
  t3112 = -1.*t2957*t3109;
  t3121 = t2929 + t3112;
  t3620 = t2368*t3538;
  t3641 = t2957*t3588;
  t3643 = t3620 + t3641;
  t3545 = -1.*t2957*t3538;
  t3602 = t2368*t3588;
  t3605 = t3545 + t3602;
  t4078 = t2957*t4010;
  t4129 = t2368*t4041;
  t4136 = t4078 + t4129;
  t4013 = t2368*t4010;
  t4053 = -1.*t2957*t4041;
  t4062 = t4013 + t4053;
  t4215 = -1.*t3121*t3223;
  t4263 = -1.*t3605*t3223;
  t4314 = -1.*t4062*t3223;
  t4485 = 2.8e-11*t313;
  t4513 = -6.5e-11*t313*t1109;
  t4542 = 7.e-6*t237;
  t4546 = t4542 + t3073;
  t4564 = t4546*t1734;
  t4565 = -4.e-6*t237;
  t4567 = t4565 + t339;
  t4568 = t4567*t2092;
  t4583 = t4513 + t4564 + t4568;
  t4598 = 4.e-6*t237;
  t4599 = t4598 + t339;
  t4602 = t4599*t1109;
  t4603 = t237 + t4485;
  t4605 = t4603*t1734;
  t4606 = -1.000000000016*t313*t2092;
  t4610 = t4602 + t4605 + t4606;
  t4487 = t1135 + t4485;
  t4448 = -7.e-6*t237;
  t4453 = t4448 + t3073;
  t4725 = t4567*t3380;
  t4726 = -6.5e-11*t313*t3470;
  t4752 = t4546*t3494;
  t4753 = t4725 + t4726 + t4752;
  t4758 = -1.000000000016*t313*t3380;
  t4759 = t4599*t3470;
  t4777 = t4603*t3494;
  t4782 = t4758 + t4759 + t4777;
  t4899 = t4546*t3771;
  t4900 = -6.5e-11*t313*t3831;
  t4901 = t4567*t3926;
  t4904 = t4899 + t4900 + t4901;
  t4912 = t4603*t3771;
  t4916 = t4599*t3831;
  t4920 = -1.000000000016*t313*t3926;
  t4922 = t4912 + t4916 + t4920;
  t4970 = -7.e-6*t457;
  t4955 = -4.e-6*t457;
  t4960 = t4955 + t835;
  t4964 = -7.e-6*t4960;
  t4974 = t4970 + t2050;
  t4975 = 4.e-6*t4974;
  t4979 = -6.5e-11*t825;
  t4981 = t4964 + t4975 + t4979;
  t4985 = 4.e-6*t457;
  t4988 = -2.8e-11*t825;
  t4989 = t464 + t4988;
  t4994 = 4.e-6*t4989;
  t5008 = 1.12e-16*t825;
  t5009 = t4985 + t4994 + t5008;
  t5012 = 2.8e-11*t825;
  t5018 = t464 + t5012;
  t5029 = -7.e-6*t5018;
  t5034 = 1.96e-16*t825;
  t5035 = t4970 + t5029 + t5034;
  t5075 = t3019*t4981;
  t5081 = t3090*t5009;
  t5093 = t3047*t5035;
  t5099 = t5075 + t5081 + t5093;
  t5120 = t2515*t4981;
  t5121 = t2839*t5009;
  t5124 = t2621*t5035;
  t5128 = t5120 + t5121 + t5124;
  t5171 = t4970 + t917;
  t5172 = 4.e-6*t5171;
  t5176 = -1.000000000049*t825;
  t5184 = t5172 + t5176;
  t5213 = 7.e-6*t457;
  t5229 = -4.00000000026e-6*t825;
  t5236 = t5213 + t5229;
  t5238 = t4985 + t835;
  t5240 = 4.e-6*t5238;
  t5246 = t457 + t5240 + t5012;
  t5252 = t2621*t5184;
  t5254 = t2515*t5236;
  t5255 = t2839*t5246;
  t5257 = t5252 + t5254 + t5255;
  t5260 = t3047*t5184;
  t5263 = t3019*t5236;
  t5264 = t3090*t5246;
  t5266 = t5260 + t5263 + t5264;
  t5293 = -7.e-6*t5171;
  t5295 = t457 + t5293 + t4988;
  t5297 = 7.000000000455e-6*t825;
  t5298 = t4985 + t5297;
  t5304 = -7.e-6*t5238;
  t5308 = 1.000000000016*t825;
  t5309 = t5304 + t5308;
  t5318 = t2621*t5295;
  t5322 = t2515*t5298;
  t5323 = t2839*t5309;
  t5324 = t5318 + t5322 + t5323;
  t5326 = t3047*t5295;
  t5327 = t3019*t5298;
  t5328 = t3090*t5309;
  t5329 = t5326 + t5327 + t5328;
  t3402 = t1802*t3380;
  t3479 = t402*t3470;
  t3497 = t1242*t3494;
  t3502 = t3402 + t3479 + t3497;
  t3609 = t2219*t3605;
  t3644 = -1.*t3643*t3223;
  t3651 = t3609 + t3644;
  t3792 = t1242*t3771;
  t3908 = t402*t3831;
  t3937 = t1802*t3926;
  t3992 = t3792 + t3908 + t3937;
  t4068 = t2219*t4062;
  t4155 = -1.*t4136*t3223;
  t4175 = t4068 + t4155;
  t1128 = t402*t1109;
  t1785 = t1242*t1734;
  t2094 = t1802*t2092;
  t2102 = t1128 + t1785 + t2094;
  t3132 = t2219*t3121;
  t3225 = -1.*t3190*t3223;
  t3242 = t3132 + t3225;
  t2125 = t97*t2102;
  t3252 = -1.*t2166*t3242;
  t3262 = t2125 + t3252;
  t5359 = Sin(var1[3]);
  t5400 = Cos(var1[3]);
  t3505 = t97*t3502;
  t3655 = -1.*t2166*t3651;
  t3658 = t3505 + t3655;
  t4001 = t97*t3992;
  t4177 = -1.*t2166*t4175;
  t4191 = t4001 + t4177;
  t4194 = -1.*t2219*t3190;
  t4217 = t4194 + t4215;
  t4223 = -1.*t2219*t3643;
  t4292 = t4223 + t4263;
  t4313 = -1.*t2219*t4136;
  t4319 = t4313 + t4314;
  t4342 = -1.*t2957*t2886;
  t4343 = -1.*t2368*t3109;
  t4350 = t4342 + t4343;
  t4357 = t2219*t4350;
  t4367 = t4357 + t4215;
  t4382 = -1.*t2368*t3538;
  t4392 = -1.*t2957*t3588;
  t4394 = t4382 + t4392;
  t4402 = t2219*t4394;
  t4408 = t4402 + t4263;
  t4422 = -1.*t2957*t4010;
  t4424 = -1.*t2368*t4041;
  t4433 = t4422 + t4424;
  t4439 = t2219*t4433;
  t4442 = t4439 + t4314;
  t4627 = t2368*t4583;
  t4662 = t2957*t4610;
  t4666 = t4627 + t4662;
  t4590 = -1.*t2957*t4583;
  t4614 = t2368*t4610;
  t4617 = t4590 + t4614;
  t4455 = t4453*t1109;
  t4465 = -1.000000000049*t313*t1734;
  t4493 = t4487*t2092;
  t4501 = t4455 + t4465 + t4493;
  t4623 = t2219*t4617;
  t4686 = -1.*t4666*t3223;
  t4688 = t4623 + t4686;
  t4838 = t2368*t4753;
  t4852 = t2957*t4782;
  t4867 = t4838 + t4852;
  t4756 = -1.*t2957*t4753;
  t4783 = t2368*t4782;
  t4786 = t4756 + t4783;
  t4706 = t4487*t3380;
  t4707 = t4453*t3470;
  t4711 = -1.000000000049*t313*t3494;
  t4718 = t4706 + t4707 + t4711;
  t4787 = t2219*t4786;
  t4869 = -1.*t4867*t3223;
  t4874 = t4787 + t4869;
  t4929 = t2368*t4904;
  t4930 = t2957*t4922;
  t4933 = t4929 + t4930;
  t4909 = -1.*t2957*t4904;
  t4926 = t2368*t4922;
  t4927 = t4909 + t4926;
  t4880 = -1.000000000049*t313*t3771;
  t4892 = t4453*t3831;
  t4894 = t4487*t3926;
  t4895 = t4880 + t4892 + t4894;
  t4928 = t2219*t4927;
  t4934 = -1.*t4933*t3223;
  t4938 = t4928 + t4934;
  t5148 = t2368*t5099;
  t5152 = t2957*t5128;
  t5156 = t5148 + t5152;
  t5112 = -1.*t2957*t5099;
  t5133 = t2368*t5128;
  t5139 = t5112 + t5133;
  t4984 = t402*t4981;
  t5011 = t1802*t5009;
  t5039 = t1242*t5035;
  t5054 = t4984 + t5011 + t5039;
  t5144 = t2219*t5139;
  t5160 = -1.*t5156*t3223;
  t5162 = t5144 + t5160;
  t5274 = t2957*t5257;
  t5276 = t2368*t5266;
  t5277 = t5274 + t5276;
  t5259 = t2368*t5257;
  t5269 = -1.*t2957*t5266;
  t5271 = t5259 + t5269;
  t5210 = t1242*t5184;
  t5237 = t402*t5236;
  t5249 = t1802*t5246;
  t5250 = t5210 + t5237 + t5249;
  t5273 = t2219*t5271;
  t5279 = -1.*t5277*t3223;
  t5283 = t5273 + t5279;
  t5333 = t2957*t5324;
  t5334 = t2368*t5329;
  t5335 = t5333 + t5334;
  t5325 = t2368*t5324;
  t5330 = -1.*t2957*t5329;
  t5331 = t5325 + t5330;
  t5296 = t1242*t5295;
  t5299 = t402*t5298;
  t5310 = t1802*t5309;
  t5311 = t5296 + t5299 + t5310;
  t5332 = t2219*t5331;
  t5336 = -1.*t5335*t3223;
  t5337 = t5332 + t5336;
  t5421 = t2219*t3643;
  t5441 = t3605*t3223;
  t5456 = t5421 + t5441;
  t5505 = t2219*t4136;
  t5511 = t4062*t3223;
  t5512 = t5505 + t5511;
  t5372 = t2219*t3190;
  t5375 = t3121*t3223;
  t5376 = t5372 + t5375;
  t5999 = t5400*t5376;
  t6008 = -1.*t5359*t3262;
  t6013 = t5999 + t6008;
  t5973 = t5400*t5456;
  t5974 = -1.*t5359*t3658;
  t5976 = t5973 + t5974;
  t5977 = t5400*t5512;
  t5978 = -1.*t5359*t4191;
  t5989 = t5977 + t5978;
  t5548 = -1.*t2102*t2166;
  t5549 = -1.*t97*t3242;
  t5551 = t5548 + t5549;
  t5564 = -1.*t3502*t2166;
  t5566 = -1.*t97*t3651;
  t5567 = t5564 + t5566;
  t5585 = -1.*t3992*t2166;
  t5590 = -1.*t97*t4175;
  t5591 = t5585 + t5590;
  t5652 = t4350*t3223;
  t5654 = t3132 + t5652;
  t5675 = t4394*t3223;
  t5677 = t3609 + t5675;
  t5704 = t4433*t3223;
  t5706 = t4068 + t5704;
  t5732 = t2219*t4666;
  t5735 = t4617*t3223;
  t5736 = t5732 + t5735;
  t5739 = t97*t4501;
  t5744 = -1.*t2166*t4688;
  t5745 = t5739 + t5744;
  t5762 = t2219*t4867;
  t5763 = t4786*t3223;
  t5764 = t5762 + t5763;
  t5795 = t97*t4718;
  t5799 = -1.*t2166*t4874;
  t5803 = t5795 + t5799;
  t5832 = t2219*t4933;
  t5836 = t4927*t3223;
  t5837 = t5832 + t5836;
  t5839 = t97*t4895;
  t5840 = -1.*t2166*t4938;
  t5841 = t5839 + t5840;
  t5857 = t2219*t5156;
  t5870 = t5139*t3223;
  t5871 = t5857 + t5870;
  t5874 = t97*t5054;
  t5876 = -1.*t2166*t5162;
  t5877 = t5874 + t5876;
  t5895 = t2219*t5277;
  t5896 = t5271*t3223;
  t5897 = t5895 + t5896;
  t5902 = t97*t5250;
  t5905 = -1.*t2166*t5283;
  t5913 = t5902 + t5905;
  t5938 = t2219*t5335;
  t5939 = t5331*t3223;
  t5940 = t5938 + t5939;
  t5944 = t97*t5311;
  t5945 = -1.*t2166*t5337;
  t5951 = t5944 + t5945;
  t5342 = t3502*t2166;
  t5343 = t97*t3651;
  t5348 = t5342 + t5343;
  t6221 = -2.8e-11*t1187;
  t6224 = -2.598649999999999e-7*var1[14];
  t6231 = 0.148705*t3440;
  t6232 = -2.3905277499999995e-16*t514;
  t6233 = -0.038922999986*t838;
  t6234 = -0.80315*t950;
  t6235 = t3462 + t2050;
  t6239 = -0.503149000008*t6235;
  t6240 = t1531 + t3808;
  t6246 = -0.038924*t6240;
  t6247 = t6224 + t6231 + t6232 + t6233 + t6234 + t6239 + t6246;
  t6249 = 1.0394599999999997e-12*var1[14];
  t6250 = 1. + t3680;
  t6251 = -0.038924*t6250;
  t6252 = -0.03892299998790722*t514;
  t6253 = -0.80315*t1725;
  t6254 = 0.148705*t3484;
  t6257 = t771 + t3808;
  t6258 = -3.6777349999999994e-6*t6257;
  t6259 = t1882 + t825;
  t6260 = -0.503149000008*t6259;
  t6261 = t6249 + t6251 + t6252 + t6253 + t6254 + t6258 + t6260;
  t6264 = 1.8190549999999993e-12*var1[14];
  t6267 = -0.80315*t1878;
  t6268 = -0.5031490000160505*t514;
  t6269 = -0.038922999986*t1991;
  t6270 = t3462 + t917;
  t6271 = -3.6777349999999994e-6*t6270;
  t6272 = 0.148705*t3352;
  t6273 = t1582 + t825;
  t6286 = -0.038924*t6273;
  t6287 = t6264 + t6267 + t6268 + t6269 + t6271 + t6272 + t6286;
  t6218 = 4.e-6*t1187;
  t6368 = 7.e-6*t1187;
  t6316 = -1.*t2368;
  t6326 = 1. + t6316;
  t6331 = 0.15121*t2957;
  t6345 = 1.0248489999999998e-12*var1[13];
  t6348 = -0.28120900000849935*t1187;
  t6351 = t6221 + t1799;
  t6365 = -0.038748999993*t6351;
  t6374 = t6368 + t3073;
  t6378 = -2.123459e-6*t6374;
  t6380 = t2515*t6247;
  t6386 = t2621*t6261;
  t6401 = t2839*t6287;
  t6419 = t6345 + t6348 + t6365 + t6378 + t6380 + t6386 + t6401;
  t6437 = -1.4640699999999997e-7*var1[13];
  t6440 = -1.38024835e-16*t1187;
  t6441 = t6218 + t339;
  t6442 = -0.038748999993*t6441;
  t6445 = t6368 + t2475;
  t6448 = -0.281209000004*t6445;
  t6449 = t3019*t6247;
  t6451 = t3047*t6261;
  t6453 = t3090*t6287;
  t6454 = t6437 + t6440 + t6442 + t6448 + t6449 + t6451 + t6453;
  t6216 = 5.856279999999999e-13*var1[13];
  t6217 = -0.0387489999948987*t1187;
  t6219 = t6218 + t3035;
  t6220 = -2.123459e-6*t6219;
  t6222 = t6221 + t313;
  t6223 = -0.281209000004*t6222;
  t6248 = t402*t6247;
  t6262 = t1242*t6261;
  t6289 = t1802*t6287;
  t6305 = t6216 + t6217 + t6220 + t6223 + t6248 + t6262 + t6289;
  t6328 = -0.15121*t6326;
  t6432 = t2368*t6419;
  t6464 = -1.*t2957*t6454;
  t6470 = t6328 + t6331 + t6432 + t6464;
  t6472 = t2219*t6470;
  t6494 = 0.15121*t6326;
  t6497 = t2957*t6419;
  t6499 = t2368*t6454;
  t6504 = t6494 + t6331 + t6497 + t6499;
  t6508 = -1.*t6504*t3223;
  t6510 = t6472 + t6508;
  t5355 = t2102*t2166;
  t5356 = t97*t3242;
  t5358 = t5355 + t5356;
  t6589 = t97*t6305;
  t6591 = -1.*t2166*t6510;
  t6592 = t6589 + t6591;
  t6578 = t6305*t2166;
  t6581 = t97*t6510;
  t6582 = t6578 + t6581;
  t6315 = -1.*t6305*t2166;
  t6542 = -1.*t97*t6510;
  t6559 = t6315 + t6542;
  t6609 = t2219*t6504;
  t6615 = t6470*t3223;
  t6616 = t6609 + t6615;
  t5352 = t3992*t2166;
  t5353 = t97*t4175;
  t5354 = t5352 + t5353;
  t6772 = -1.*t2219*t6504;
  t6773 = -1.*t6470*t3223;
  t6774 = t6772 + t6773;
  t6617 = -1.*t5376*t6616;
  t6618 = -1.*t5358*t6582;
  t6619 = -1.*t3262*t6592;
  t6620 = t6617 + t6618 + t6619;
  t6642 = t5456*t6616;
  t6643 = t5348*t6582;
  t6645 = t3658*t6592;
  t6646 = t6642 + t6643 + t6645;
  t6667 = t5376*t6616;
  t6672 = t5358*t6582;
  t6673 = t3262*t6592;
  t6683 = t6667 + t6672 + t6673;
  t6698 = -1.*t5512*t6616;
  t6699 = -1.*t5354*t6582;
  t6703 = -1.*t4191*t6592;
  t6706 = t6698 + t6699 + t6703;
  t6726 = -1.*t5456*t6616;
  t6731 = -1.*t5348*t6582;
  t6733 = -1.*t3658*t6592;
  t6735 = t6726 + t6731 + t6733;
  t6752 = t5512*t6616;
  t6753 = t5354*t6582;
  t6754 = t4191*t6592;
  t6757 = t6752 + t6753 + t6754;
  t6915 = 0.15121*t2368;
  t6920 = -0.15121*t2957;
  t6923 = -1.*t2957*t6419;
  t6924 = -1.*t2368*t6454;
  t6928 = t6915 + t6920 + t6923 + t6924;
  t6916 = t6915 + t6331 + t6432 + t6464;
  t6961 = t2219*t6928;
  t6962 = -1.*t6916*t3223;
  t6966 = t6961 + t6962;
  t6917 = t2219*t6916;
  t6930 = t6928*t3223;
  t6932 = t6917 + t6930;
  t4723 = t4718*t2166;
  t4877 = t97*t4874;
  t4878 = t4723 + t4877;
  t4503 = t4501*t2166;
  t4690 = t97*t4688;
  t4692 = t4503 + t4690;
  t7103 = t4448 + t2475;
  t7104 = -0.038748999993*t7103;
  t7105 = t4598 + t3035;
  t7106 = -0.281209000004*t7105;
  t7107 = -1.38024835e-16*t313;
  t7108 = -6.5e-11*t313*t6247;
  t7109 = t4546*t6261;
  t7110 = t4567*t6287;
  t7111 = -1.4640699999999997e-7 + t7104 + t7106 + t7107 + t7108 + t7109 + t7110;
  t7115 = -2.8e-11*t313;
  t7117 = t1135 + t7115;
  t7121 = -0.038748999993*t7117;
  t7122 = t4565 + t3035;
  t7123 = -2.123459e-6*t7122;
  t7127 = -0.28120900000849935*t313;
  t7129 = t4599*t6247;
  t7133 = t4603*t6261;
  t7134 = -1.000000000016*t313*t6287;
  t7140 = 1.0248489999999998e-12 + t7121 + t7123 + t7127 + t7129 + t7133 + t7134;
  t7144 = -1.*t2957*t7111;
  t7145 = t2368*t7140;
  t7146 = t7144 + t7145;
  t7112 = t2368*t7111;
  t7141 = t2957*t7140;
  t7142 = t7112 + t7141;
  t7152 = t237 + t7115;
  t7153 = -0.281209000004*t7152;
  t7154 = t4542 + t2475;
  t7156 = -2.123459e-6*t7154;
  t7158 = -0.0387489999948987*t313;
  t7160 = t4453*t6247;
  t7161 = -1.000000000049*t313*t6261;
  t7162 = t4487*t6287;
  t7166 = 5.856279999999999e-13 + t7153 + t7156 + t7158 + t7160 + t7161 + t7162;
  t7178 = t2219*t7146;
  t7179 = -1.*t7142*t3223;
  t7180 = t7178 + t7179;
  t7143 = t2219*t7142;
  t7147 = t7146*t3223;
  t7148 = t7143 + t7147;
  t7170 = t7166*t2166;
  t7181 = t97*t7180;
  t7182 = t7170 + t7181;
  t7190 = t97*t7166;
  t7193 = -1.*t2166*t7180;
  t7195 = t7190 + t7193;
  t4898 = t4895*t2166;
  t4939 = t97*t4938;
  t4940 = t4898 + t4939;
  t7343 = -0.80315*t4960;
  t7344 = t5213 + t917;
  t7345 = -0.038924*t7344;
  t7346 = -0.038922999986*t4974;
  t7348 = t4985 + t3808;
  t7352 = -0.503149000008*t7348;
  t7353 = -9.666064052774999e-12*t825;
  t7354 = -2.598649999999999e-7 + t7343 + t7345 + t7346 + t7352 + t7353;
  t7356 = 0.148705*t5171;
  t7357 = t457 + t4988;
  t7358 = -0.503149000008*t7357;
  t7360 = -0.80315*t5018;
  t7361 = t5213 + t2050;
  t7362 = -3.6777349999999994e-6*t7361;
  t7363 = 1.0000140000590574e-6*t825;
  t7364 = 1.0394599999999997e-12 + t7356 + t7358 + t7360 + t7362 + t7363;
  t7366 = 0.148705*t5238;
  t7367 = -0.038922999986*t4989;
  t7368 = t457 + t5012;
  t7369 = -0.038924*t7368;
  t7370 = t4955 + t3808;
  t7372 = -3.6777349999999994e-6*t7370;
  t7374 = 0.30000099999679997*t825;
  t7378 = 1.8190549999999993e-12 + t7366 + t7367 + t7369 + t7372 + t7374;
  t7355 = t2515*t7354;
  t7365 = t2621*t7364;
  t7382 = t2839*t7378;
  t7383 = t7355 + t7365 + t7382;
  t7391 = t3019*t7354;
  t7392 = t3047*t7364;
  t7393 = t3090*t7378;
  t7397 = t7391 + t7392 + t7393;
  t7402 = t2368*t7383;
  t7403 = -1.*t2957*t7397;
  t7404 = t7402 + t7403;
  t7389 = t2957*t7383;
  t7398 = t2368*t7397;
  t7399 = t7389 + t7398;
  t7409 = t402*t7354;
  t7410 = t1242*t7364;
  t7411 = t1802*t7378;
  t7416 = t7409 + t7410 + t7411;
  t7418 = t2219*t7404;
  t7419 = -1.*t7399*t3223;
  t7420 = t7418 + t7419;
  t5058 = t5054*t2166;
  t5164 = t97*t5162;
  t5165 = t5058 + t5164;
  t7401 = t2219*t7399;
  t7405 = t7404*t3223;
  t7406 = t7401 + t7405;
  t7417 = t7416*t2166;
  t7421 = t97*t7420;
  t7422 = t7417 + t7421;
  t7424 = t97*t7416;
  t7425 = -1.*t2166*t7420;
  t7429 = t7424 + t7425;
  t5251 = t5250*t2166;
  t5286 = t97*t5283;
  t5287 = t5251 + t5286;
  t5312 = t5311*t2166;
  t5338 = t97*t5337;
  t5339 = t5312 + t5338;
  t6766 = -1.*t5376*t6510;
  t6771 = -1.*t3242*t6616;
  t6785 = t5456*t6510;
  t6787 = t3651*t6616;
  t6812 = t5376*t6510;
  t6816 = t3242*t6616;
  t6830 = -1.*t5512*t6510;
  t6835 = -1.*t4175*t6616;
  t6854 = -1.*t5456*t6510;
  t6857 = -1.*t3651*t6616;
  t6872 = t5512*t6510;
  t6875 = t4175*t6616;
  t7565 = -1.*t2102*t6305;
  t7566 = -1.*t3242*t6510;
  t7567 = t7565 + t7566 + t6617;
  t7569 = t3502*t6305;
  t7570 = t3651*t6510;
  t7571 = t7569 + t7570 + t6642;
  t6933 = -1.*t5376*t6932;
  t6953 = -1.*t5654*t6616;
  t6991 = t5456*t6932;
  t6993 = t5677*t6616;
  t7592 = t2102*t6305;
  t7593 = t3242*t6510;
  t7596 = t7592 + t7593 + t6667;
  t7608 = -1.*t3992*t6305;
  t7609 = -1.*t4175*t6510;
  t7610 = t7608 + t7609 + t6698;
  t7013 = t5376*t6932;
  t7017 = t5654*t6616;
  t7037 = -1.*t5512*t6932;
  t7038 = -1.*t5706*t6616;
  t7615 = -1.*t3502*t6305;
  t7616 = -1.*t3651*t6510;
  t7617 = t7615 + t7616 + t6726;
  t7633 = t3992*t6305;
  t7637 = t4175*t6510;
  t7639 = t7633 + t7637 + t6752;
  t7071 = -1.*t5456*t6932;
  t7073 = -1.*t5677*t6616;
  t7084 = t5512*t6932;
  t7085 = t5706*t6616;
  t7101 = -1.*t5736*t6616;
  t7149 = -1.*t5376*t7148;
  t7215 = t5764*t6616;
  t7218 = t5456*t7148;
  t7266 = t5736*t6616;
  t7267 = t5376*t7148;
  t7276 = -1.*t5837*t6616;
  t7277 = -1.*t5512*t7148;
  t7290 = -1.*t5764*t6616;
  t7291 = -1.*t5456*t7148;
  t7327 = t5837*t6616;
  t7328 = t5512*t7148;
  t7407 = t5376*t7406;
  t7408 = t5871*t6616;
  t7449 = -1.*t7406*t5512;
  t7450 = -1.*t5897*t6616;
  t7477 = t7406*t5512;
  t7479 = t5897*t6616;
  t7497 = -1.*t7406*t5456;
  t7501 = -1.*t5940*t6616;
  t7513 = -1.*t5376*t7406;
  t7514 = -1.*t5871*t6616;
  t7529 = t7406*t5456;
  t7530 = t5940*t6616;
  t7722 = -1.*t4501*t6305;
  t7723 = -1.*t2102*t7166;
  t7733 = t4718*t6305;
  t7734 = t3502*t7166;
  t7754 = t4501*t6305;
  t7755 = t2102*t7166;
  t7763 = -1.*t4895*t6305;
  t7764 = -1.*t3992*t7166;
  t7785 = -1.*t4718*t6305;
  t7786 = -1.*t3502*t7166;
  t7794 = t4895*t6305;
  t7795 = t3992*t7166;
  t7805 = t2102*t7416;
  t7809 = t5054*t6305;
  t7818 = -1.*t7416*t3992;
  t7820 = -1.*t5250*t6305;
  t7964 = t3190*t6504;
  t7965 = t3121*t6470;
  t7966 = t7592 + t7964 + t7965;
  t7968 = -1.*t4136*t6504;
  t7969 = -1.*t4062*t6470;
  t7970 = t7608 + t7968 + t7969;
  t7831 = t7416*t3992;
  t7832 = t5250*t6305;
  t7987 = -1.*t3643*t6504;
  t7988 = -1.*t3605*t6470;
  t7989 = t7615 + t7987 + t7988;
  t7991 = t4136*t6504;
  t7992 = t4062*t6470;
  t7993 = t7633 + t7991 + t7992;
  t7840 = -1.*t7416*t3502;
  t7841 = -1.*t5311*t6305;
  t7848 = -1.*t2102*t7416;
  t7849 = -1.*t5054*t6305;
  t7941 = -1.*t3190*t6504;
  t7942 = -1.*t3121*t6470;
  t7944 = t7565 + t7941 + t7942;
  t7946 = t3643*t6504;
  t7947 = t3605*t6470;
  t7948 = t7569 + t7946 + t7947;
  t7861 = t7416*t3502;
  t7862 = t5311*t6305;
  t8101 = t2886*t6419;
  t8102 = t3109*t6454;
  t8103 = t8101 + t7592 + t8102;
  t8105 = -1.*t4010*t6419;
  t8106 = -1.*t4041*t6454;
  t8107 = t8105 + t7608 + t8106;
  t8125 = -1.*t3588*t6419;
  t8126 = -1.*t3538*t6454;
  t8127 = t8125 + t7615 + t8126;
  t8129 = t4010*t6419;
  t8130 = t4041*t6454;
  t8131 = t8129 + t7633 + t8130;
  t8076 = -1.*t2886*t6419;
  t8077 = -1.*t3109*t6454;
  t8078 = t8076 + t7565 + t8077;
  t8080 = t3588*t6419;
  t8082 = t3538*t6454;
  t8083 = t8080 + t7569 + t8082;
  t8228 = t6247*t4981;
  t8230 = t1109*t7354;
  t8231 = t1734*t7364;
  t8232 = t2092*t7378;
  t8233 = t5035*t6261;
  t8234 = t5009*t6287;
  t8235 = t8228 + t8230 + t8231 + t8232 + t8233 + t8234;
  t8237 = -1.*t6247*t5236;
  t8238 = -1.*t3771*t7364;
  t8239 = -1.*t7354*t3831;
  t8240 = -1.*t7378*t3926;
  t8241 = -1.*t5184*t6261;
  t8242 = -1.*t5246*t6287;
  t8243 = t8237 + t8238 + t8239 + t8240 + t8241 + t8242;
  t8246 = t1109*t6247;
  t8247 = t1734*t6261;
  t8248 = t2092*t6287;
  t8249 = t8246 + t8247 + t8248;
  t8251 = -1.*t6247*t3831;
  t8252 = -1.*t3771*t6261;
  t8253 = -1.*t3926*t6287;
  t8254 = t8251 + t8252 + t8253;
  t8279 = -1.*t6247*t3470;
  t8280 = -1.*t3494*t6261;
  t8281 = -1.*t3380*t6287;
  t8282 = t8279 + t8280 + t8281;
  t8284 = t6247*t5236;
  t8285 = t3771*t7364;
  t8286 = t7354*t3831;
  t8287 = t7378*t3926;
  t8288 = t5184*t6261;
  t8289 = t5246*t6287;
  t8291 = t8284 + t8285 + t8286 + t8287 + t8288 + t8289;
  t8293 = t6247*t3831;
  t8294 = t3771*t6261;
  t8295 = t3926*t6287;
  t8296 = t8293 + t8294 + t8295;
  t8298 = -1.*t7354*t3470;
  t8299 = -1.*t6247*t5298;
  t8301 = -1.*t3380*t7378;
  t8302 = -1.*t7364*t3494;
  t8303 = -1.*t5295*t6261;
  t8304 = -1.*t5309*t6287;
  t8305 = t8298 + t8299 + t8301 + t8302 + t8303 + t8304;
  t8327 = t6247*t3470;
  t8328 = t3494*t6261;
  t8329 = t3380*t6287;
  t8330 = t8327 + t8328 + t8329;
  t8333 = -1.*t6247*t4981;
  t8334 = -1.*t1109*t7354;
  t8335 = -1.*t1734*t7364;
  t8336 = -1.*t2092*t7378;
  t8337 = -1.*t5035*t6261;
  t8338 = -1.*t5009*t6287;
  t8339 = t8333 + t8334 + t8335 + t8336 + t8337 + t8338;
  t8341 = -1.*t1109*t6247;
  t8342 = -1.*t1734*t6261;
  t8343 = -1.*t2092*t6287;
  t8344 = t8341 + t8342 + t8343;
  t8346 = t7354*t3470;
  t8347 = t6247*t5298;
  t8348 = t3380*t7378;
  t8349 = t7364*t3494;
  t8350 = t5295*t6261;
  t8351 = t5309*t6287;
  t8352 = t8346 + t8347 + t8348 + t8349 + t8350 + t8351;
  t8388 = 6.5e-11*t514;
  p_output1[0]=t3658*var2[0] + t4191*var2[1] + t3262*var2[2];
  p_output1[1]=t4292*t97*var2[0] + t4319*t97*var2[1] + t4217*t97*var2[2];
  p_output1[2]=t4408*t97*var2[0] + t4442*t97*var2[1] + t4367*t97*var2[2];
  p_output1[3]=t4878*var2[0] + t4940*var2[1] + t4692*var2[2];
  p_output1[4]=t5339*var2[0] + t5287*var2[1] + t5165*var2[2];
  p_output1[5]=t5348;
  p_output1[6]=t5354;
  p_output1[7]=t5358;
  p_output1[8]=(-1.*t3658*t5400 - 1.*t5359*t5456)*var2[0] + (-1.*t4191*t5400 - 1.*t5359*t5512)*var2[1] + (-1.*t5359*t5376 - 1.*t3262*t5400)*var2[2];
  p_output1[9]=-1.*t5359*t5567*var2[0] - 1.*t5359*t5591*var2[1] - 1.*t5359*t5551*var2[2];
  p_output1[10]=(t2166*t4292*t5359 + t3651*t5400)*var2[0] + (t2166*t4319*t5359 + t4175*t5400)*var2[1] + (t2166*t4217*t5359 + t3242*t5400)*var2[2];
  p_output1[11]=(t2166*t4408*t5359 + t5400*t5677)*var2[0] + (t2166*t4442*t5359 + t5400*t5706)*var2[1] + (t2166*t4367*t5359 + t5400*t5654)*var2[2];
  p_output1[12]=(t5400*t5764 - 1.*t5359*t5803)*var2[0] + (t5400*t5837 - 1.*t5359*t5841)*var2[1] + (t5400*t5736 - 1.*t5359*t5745)*var2[2];
  p_output1[13]=(t5400*t5940 - 1.*t5359*t5951)*var2[0] + (t5400*t5897 - 1.*t5359*t5913)*var2[1] + (t5400*t5871 - 1.*t5359*t5877)*var2[2];
  p_output1[14]=t5976;
  p_output1[15]=t5989;
  p_output1[16]=t6013;
  p_output1[17]=t5976*var2[0] + t5989*var2[1] + t6013*var2[2];
  p_output1[18]=t5400*t5567*var2[0] + t5400*t5591*var2[1] + t5400*t5551*var2[2];
  p_output1[19]=(t3651*t5359 - 1.*t2166*t4292*t5400)*var2[0] + (t4175*t5359 - 1.*t2166*t4319*t5400)*var2[1] + (t3242*t5359 - 1.*t2166*t4217*t5400)*var2[2];
  p_output1[20]=(-1.*t2166*t4408*t5400 + t5359*t5677)*var2[0] + (-1.*t2166*t4442*t5400 + t5359*t5706)*var2[1] + (-1.*t2166*t4367*t5400 + t5359*t5654)*var2[2];
  p_output1[21]=(t5359*t5764 + t5400*t5803)*var2[0] + (t5359*t5837 + t5400*t5841)*var2[1] + (t5359*t5736 + t5400*t5745)*var2[2];
  p_output1[22]=(t5359*t5940 + t5400*t5951)*var2[0] + (t5359*t5897 + t5400*t5913)*var2[1] + (t5359*t5871 + t5400*t5877)*var2[2];
  p_output1[23]=t3658*t5400 + t5359*t5456;
  p_output1[24]=t4191*t5400 + t5359*t5512;
  p_output1[25]=t5359*t5376 + t3262*t5400;
  p_output1[26]=(t5354*(t3262*t6559 + t3262*t6582 + t5358*t6592 + t5551*t6592) + t5358*(-1.*t4191*t6559 - 1.*t4191*t6582 - 1.*t5354*t6592 - 1.*t5591*t6592) + t4191*t6683 + t3262*t6706)*var2[0] + (t5348*(-1.*t3262*t6559 - 1.*t3262*t6582 - 1.*t5358*t6592 - 1.*t5551*t6592) + t5358*(t3658*t6559 + t3658*t6582 + t5348*t6592 + t5567*t6592) + t3658*t6620 + t3262*t6646)*var2[1] + (t5354*(-1.*t3658*t6559 - 1.*t3658*t6582 - 1.*t5348*t6592 - 1.*t5567*t6592) + t5348*(t4191*t6559 + t4191*t6582 + t5354*t6592 + t5591*t6592) + t4191*t6735 + t3658*t6757)*var2[2];
  p_output1[27]=(t4319*t6683*t97 + t4217*t6706*t97 + t5358*(t2166*t4319*t6592 + t2166*t4191*t6774 + t6830 + t6835 - 1.*t4319*t6582*t97 - 1.*t5354*t6774*t97) + t5354*(-1.*t2166*t4217*t6592 - 1.*t2166*t3262*t6774 + t6812 + t6816 + t4217*t6582*t97 + t5358*t6774*t97))*var2[0] + (t4292*t6620*t97 + t4217*t6646*t97 + t5358*(-1.*t2166*t4292*t6592 - 1.*t2166*t3658*t6774 + t6785 + t6787 + t4292*t6582*t97 + t5348*t6774*t97) + t5348*(t2166*t4217*t6592 + t6766 + t6771 + t2166*t3262*t6774 - 1.*t4217*t6582*t97 - 1.*t5358*t6774*t97))*var2[1] + (t4319*t6735*t97 + t4292*t6757*t97 + t5354*(t2166*t4292*t6592 + t2166*t3658*t6774 + t6854 + t6857 - 1.*t4292*t6582*t97 - 1.*t5348*t6774*t97) + t5348*(-1.*t2166*t4319*t6592 - 1.*t2166*t4191*t6774 + t6872 + t6875 + t4319*t6582*t97 + t5354*t6774*t97))*var2[2];
  p_output1[28]=(t4442*t6683*t97 + t4367*t6706*t97 + t5358*(t2166*t4442*t6592 + t2166*t4191*t6966 + t7037 + t7038 - 1.*t4442*t6582*t97 - 1.*t5354*t6966*t97) + t5354*(-1.*t2166*t4367*t6592 - 1.*t2166*t3262*t6966 + t7013 + t7017 + t4367*t6582*t97 + t5358*t6966*t97))*var2[0] + (t4408*t6620*t97 + t4367*t6646*t97 + t5358*(-1.*t2166*t4408*t6592 - 1.*t2166*t3658*t6966 + t6991 + t6993 + t4408*t6582*t97 + t5348*t6966*t97) + t5348*(t2166*t4367*t6592 + t6933 + t6953 + t2166*t3262*t6966 - 1.*t4367*t6582*t97 - 1.*t5358*t6966*t97))*var2[1] + (t4442*t6735*t97 + t4408*t6757*t97 + t5354*(t2166*t4408*t6592 + t2166*t3658*t6966 + t7071 + t7073 - 1.*t4408*t6582*t97 - 1.*t5348*t6966*t97) + t5348*(-1.*t2166*t4442*t6592 - 1.*t2166*t4191*t6966 + t7084 + t7085 + t4442*t6582*t97 + t5354*t6966*t97))*var2[2];
  p_output1[29]=(t4940*t6683 + t4692*t6706 + t5354*(t4692*t6582 + t5745*t6592 + t5358*t7182 + t3262*t7195 + t7266 + t7267) + t5358*(-1.*t4940*t6582 - 1.*t5841*t6592 - 1.*t5354*t7182 - 1.*t4191*t7195 + t7276 + t7277))*var2[0] + (t4878*t6620 + t4692*t6646 + t5348*(-1.*t4692*t6582 - 1.*t5745*t6592 + t7101 + t7149 - 1.*t5358*t7182 - 1.*t3262*t7195) + t5358*(t4878*t6582 + t5803*t6592 + t5348*t7182 + t3658*t7195 + t7215 + t7218))*var2[1] + (t4940*t6735 + t4878*t6757 + t5354*(-1.*t4878*t6582 - 1.*t5803*t6592 - 1.*t5348*t7182 - 1.*t3658*t7195 + t7290 + t7291) + t5348*(t4940*t6582 + t5841*t6592 + t5354*t7182 + t4191*t7195 + t7327 + t7328))*var2[2];
  p_output1[30]=(t5287*t6683 + t5165*t6706 + t5354*(t5165*t6582 + t5877*t6592 + t7407 + t7408 + t5358*t7422 + t3262*t7429) + t5358*(-1.*t5287*t6582 - 1.*t5913*t6592 - 1.*t5354*t7422 - 1.*t4191*t7429 + t7449 + t7450))*var2[0] + (t5339*t6620 + t5165*t6646 + t5348*(-1.*t5165*t6582 - 1.*t5877*t6592 - 1.*t5358*t7422 - 1.*t3262*t7429 + t7513 + t7514) + t5358*(t5339*t6582 + t5951*t6592 + t5348*t7422 + t3658*t7429 + t7529 + t7530))*var2[1] + (t5287*t6735 + t5339*t6757 + t5348*(t5287*t6582 + t5913*t6592 + t5354*t7422 + t4191*t7429 + t7477 + t7479) + t5354*(-1.*t5339*t6582 - 1.*t5951*t6592 - 1.*t5348*t7422 - 1.*t3658*t7429 + t7497 + t7501))*var2[2];
  p_output1[31]=t5354*t6683 + t5358*t6706;
  p_output1[32]=t5348*t6620 + t5358*t6646;
  p_output1[33]=t5354*t6735 + t5348*t6757;
  p_output1[34]=(t5512*(t4217*t6510 + t3242*t6774 + t6812 + t6816) + t5376*(-1.*t4319*t6510 - 1.*t4175*t6774 + t6830 + t6835) + t4175*t7596 + t3242*t7610)*var2[0] + (t5456*(-1.*t4217*t6510 + t6766 + t6771 - 1.*t3242*t6774) + t5376*(t4292*t6510 + t3651*t6774 + t6785 + t6787) + t3651*t7567 + t3242*t7571)*var2[1] + (t5512*(-1.*t4292*t6510 - 1.*t3651*t6774 + t6854 + t6857) + t5456*(t4319*t6510 + t4175*t6774 + t6872 + t6875) + t4175*t7617 + t3651*t7639)*var2[2];
  p_output1[35]=(t5512*(t4367*t6510 + t3242*t6966 + t7013 + t7017) + t5376*(-1.*t4442*t6510 - 1.*t4175*t6966 + t7037 + t7038) + t5706*t7596 + t5654*t7610)*var2[0] + (t5456*(-1.*t4367*t6510 + t6933 + t6953 - 1.*t3242*t6966) + t5376*(t4408*t6510 + t3651*t6966 + t6991 + t6993) + t5677*t7567 + t5654*t7571)*var2[1] + (t5512*(-1.*t4408*t6510 - 1.*t3651*t6966 + t7071 + t7073) + t5456*(t4442*t6510 + t4175*t6966 + t7084 + t7085) + t5706*t7617 + t5677*t7639)*var2[2];
  p_output1[36]=(t5837*t7596 + t5736*t7610 + t5512*(t4688*t6510 + t3242*t7180 + t7266 + t7267 + t7754 + t7755) + t5376*(-1.*t4938*t6510 - 1.*t4175*t7180 + t7276 + t7277 + t7763 + t7764))*var2[0] + (t5764*t7567 + t5736*t7571 + t5456*(-1.*t4688*t6510 + t7101 + t7149 - 1.*t3242*t7180 + t7722 + t7723) + t5376*(t4874*t6510 + t3651*t7180 + t7215 + t7218 + t7733 + t7734))*var2[1] + (t5837*t7617 + t5764*t7639 + t5512*(-1.*t4874*t6510 - 1.*t3651*t7180 + t7290 + t7291 + t7785 + t7786) + t5456*(t4938*t6510 + t4175*t7180 + t7327 + t7328 + t7794 + t7795))*var2[2];
  p_output1[37]=(t5897*t7596 + t5871*t7610 + t5512*(t5162*t6510 + t7407 + t7408 + t3242*t7420 + t7805 + t7809) + t5376*(-1.*t5283*t6510 - 1.*t4175*t7420 + t7449 + t7450 + t7818 + t7820))*var2[0] + (t5940*t7567 + t5871*t7571 + t5456*(-1.*t5162*t6510 - 1.*t3242*t7420 + t7513 + t7514 + t7848 + t7849) + t5376*(t5337*t6510 + t3651*t7420 + t7529 + t7530 + t7861 + t7862))*var2[1] + (t5897*t7617 + t5940*t7639 + t5456*(t5283*t6510 + t4175*t7420 + t7477 + t7479 + t7831 + t7832) + t5512*(-1.*t5337*t6510 - 1.*t3651*t7420 + t7497 + t7501 + t7840 + t7841))*var2[2];
  p_output1[38]=t5512*t7596 + t5376*t7610;
  p_output1[39]=t5456*t7567 + t5376*t7571;
  p_output1[40]=t5512*t7617 + t5456*t7639;
  p_output1[41]=(t3992*(t4350*t6470 + t3121*t6504 + t3190*t6916 + t3121*t6928) + t2102*(-1.*t4433*t6470 - 1.*t4062*t6504 - 1.*t4136*t6916 - 1.*t4062*t6928))*var2[0] + (t3502*(-1.*t4350*t6470 - 1.*t3121*t6504 - 1.*t3190*t6916 - 1.*t3121*t6928) + t2102*(t4394*t6470 + t3605*t6504 + t3643*t6916 + t3605*t6928))*var2[1] + (t3992*(-1.*t4394*t6470 - 1.*t3605*t6504 - 1.*t3643*t6916 - 1.*t3605*t6928) + t3502*(t4433*t6470 + t4062*t6504 + t4136*t6916 + t4062*t6928))*var2[2];
  p_output1[42]=(t3992*(t4617*t6470 + t4666*t6504 + t3190*t7142 + t3121*t7146 + t7754 + t7755) + t2102*(-1.*t4927*t6470 - 1.*t4933*t6504 - 1.*t4136*t7142 - 1.*t4062*t7146 + t7763 + t7764) + t4895*t7966 + t4501*t7970)*var2[0] + (t3502*(-1.*t4617*t6470 - 1.*t4666*t6504 - 1.*t3190*t7142 - 1.*t3121*t7146 + t7722 + t7723) + t2102*(t4786*t6470 + t4867*t6504 + t3643*t7142 + t3605*t7146 + t7733 + t7734) + t4718*t7944 + t4501*t7948)*var2[1] + (t3992*(-1.*t4786*t6470 - 1.*t4867*t6504 - 1.*t3643*t7142 - 1.*t3605*t7146 + t7785 + t7786) + t3502*(t4927*t6470 + t4933*t6504 + t4136*t7142 + t4062*t7146 + t7794 + t7795) + t4895*t7989 + t4718*t7993)*var2[2];
  p_output1[43]=(t3992*(t5139*t6470 + t5156*t6504 + t3190*t7399 + t3121*t7404 + t7805 + t7809) + t2102*(-1.*t5271*t6470 - 1.*t5277*t6504 - 1.*t4136*t7399 - 1.*t4062*t7404 + t7818 + t7820) + t5250*t7966 + t5054*t7970)*var2[0] + (t3502*(-1.*t5139*t6470 - 1.*t5156*t6504 - 1.*t3190*t7399 - 1.*t3121*t7404 + t7848 + t7849) + t2102*(t5331*t6470 + t5335*t6504 + t3643*t7399 + t3605*t7404 + t7861 + t7862) + t5311*t7944 + t5054*t7948)*var2[1] + (t3502*(t5271*t6470 + t5277*t6504 + t4136*t7399 + t4062*t7404 + t7831 + t7832) + t3992*(-1.*t5331*t6470 - 1.*t5335*t6504 - 1.*t3643*t7399 - 1.*t3605*t7404 + t7840 + t7841) + t5250*t7989 + t5311*t7993)*var2[2];
  p_output1[44]=t3992*t7966 + t2102*t7970;
  p_output1[45]=t3502*t7944 + t2102*t7948;
  p_output1[46]=t3992*t7989 + t3502*t7993;
  p_output1[47]=(0.15121*t4753 + 0.15121*t4782 + t3992*(t4610*t6419 + t4583*t6454 + t3109*t7111 + t2886*t7140 + t7754 + t7755) + t2102*(-1.*t4922*t6419 - 1.*t4904*t6454 - 1.*t4041*t7111 - 1.*t4010*t7140 + t7763 + t7764) + t4895*t8103 + t4501*t8107)*var2[0] + (0.15121*t4904 + 0.15121*t4922 + t3502*(-1.*t4610*t6419 - 1.*t4583*t6454 - 1.*t3109*t7111 - 1.*t2886*t7140 + t7722 + t7723) + t2102*(t4782*t6419 + t4753*t6454 + t3538*t7111 + t3588*t7140 + t7733 + t7734) + t4718*t8078 + t4501*t8083)*var2[1] + (0.15121*t4583 + 0.15121*t4610 + t3992*(-1.*t4782*t6419 - 1.*t4753*t6454 - 1.*t3538*t7111 - 1.*t3588*t7140 + t7785 + t7786) + t3502*(t4922*t6419 + t4904*t6454 + t4041*t7111 + t4010*t7140 + t7794 + t7795) + t4895*t8127 + t4718*t8131)*var2[2];
  p_output1[48]=(0.15121*t5324 + 0.15121*t5329 + t3992*(t5128*t6419 + t5099*t6454 + t2886*t7383 + t3109*t7397 + t7805 + t7809) + t2102*(-1.*t5257*t6419 - 1.*t5266*t6454 - 1.*t4010*t7383 - 1.*t4041*t7397 + t7818 + t7820) + t5250*t8103 + t5054*t8107)*var2[0] + (0.15121*t5257 + 0.15121*t5266 + t3502*(-1.*t5128*t6419 - 1.*t5099*t6454 - 1.*t2886*t7383 - 1.*t3109*t7397 + t7848 + t7849) + t2102*(t5324*t6419 + t5329*t6454 + t3588*t7383 + t3538*t7397 + t7861 + t7862) + t5311*t8078 + t5054*t8083)*var2[1] + (0.15121*t5099 + 0.15121*t5128 + t3502*(t5257*t6419 + t5266*t6454 + t4010*t7383 + t4041*t7397 + t7831 + t7832) + t3992*(-1.*t5324*t6419 - 1.*t5329*t6454 - 1.*t3588*t7383 - 1.*t3538*t7397 + t7840 + t7841) + t5250*t8127 + t5311*t8131)*var2[2];
  p_output1[49]=0.15121*t3538 + 0.15121*t3588 + t3992*t8103 + t2102*t8107;
  p_output1[50]=0.15121*t4010 + 0.15121*t4041 + t3502*t8078 + t2102*t8083;
  p_output1[51]=0.15121*t2886 + 0.15121*t3109 + t3992*t8127 + t3502*t8131;
  p_output1[52]=(-0.281209*t5295 + 0.038749*t5309 + t3831*t8235 + t1109*t8243 + t5236*t8249 + 1.e-6*(t4955 - 7.000000000455e-6*t825) + t4981*t8254 - 7.e-6*(t3926*t8235 + t2092*t8243 + t5246*t8249 + t5009*t8254) + 4.e-6*(-1.*t3771*t8235 - 1.*t1734*t8243 - 1.*t5184*t8249 - 1.*t5035*t8254))*var2[0] + (-0.281209*t5184 + 0.038749*t5246 + 1.e-6*(t4970 + 4.00000000026e-6*t825) + t4981*t8330 + t3470*t8339 + t5298*t8344 + t1109*t8352 + 4.e-6*(-1.*t5035*t8330 - 1.*t3494*t8339 - 1.*t5295*t8344 - 1.*t1734*t8352) - 7.e-6*(t5009*t8330 + t3380*t8339 + t5309*t8344 + t2092*t8352))*var2[1] + (0.038749*t5009 - 0.281209*t5035 + 1.e-6*(7.e-6*t4960 + 4.e-6*t7344 + 6.5e-11*t825) + t5236*t8282 + t3470*t8291 + t5298*t8296 + t3831*t8305 + 4.e-6*(-1.*t5184*t8282 - 1.*t3494*t8291 - 1.*t5295*t8296 - 1.*t3771*t8305) - 7.e-6*(t5246*t8282 + t3380*t8291 + t5309*t8296 + t3926*t8305))*var2[2];
  p_output1[53]=0.038749*t3380 - 0.281209*t3494 + t3831*t8249 + t1109*t8254 + 4.e-6*(-1.*t3771*t8249 - 1.*t1734*t8254) - 7.e-6*(t3926*t8249 + t2092*t8254) + 1.e-6*(7.e-6*t3440 + t856 + t917);
  p_output1[54]=-0.281209*t3771 + 0.038749*t3926 + t1109*t8330 + t3470*t8344 - 7.e-6*(t2092*t8330 + t3380*t8344) + 4.e-6*(-1.*t1734*t8330 - 1.*t3494*t8344) + 1.e-6*(t771 + t835 + 4.e-6*(-1. + t8388));
  p_output1[55]=-0.281209*t1734 + 0.038749*t2092 + t3831*t8282 + t3470*t8296 - 7.e-6*(t3926*t8282 + t3380*t8296) + 4.e-6*(-1.*t3771*t8282 - 1.*t3494*t8296) + 1.e-6*(-1. + 4.e-6*t6240 + t8388 + 7.e-6*t950);
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fRlFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
