/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:16:13 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t593;
  double t648;
  double t663;
  double t146;
  double t149;
  double t200;
  double t753;
  double t768;
  double t466;
  double t676;
  double t682;
  double t782;
  double t822;
  double t828;
  double t215;
  double t884;
  double t892;
  double t928;
  double t936;
  double t971;
  double t1071;
  double t1084;
  double t1115;
  double t1196;
  double t1205;
  double t1209;
  double t1210;
  double t1239;
  double t569;
  double t588;
  double t850;
  double t855;
  double t860;
  double t974;
  double t984;
  double t999;
  double t1030;
  double t1062;
  double t1218;
  double t1225;
  double t145;
  double t1242;
  double t1249;
  double t1253;
  double t1276;
  double t1281;
  double t1287;
  double t1300;
  double t1302;
  double t1314;
  double t1327;
  double t131;
  double t1368;
  double t1381;
  double t1383;
  double t1236;
  double t1334;
  double t1354;
  double t1390;
  double t1422;
  double t1356;
  double t1406;
  double t1412;
  double t36;
  double t1441;
  double t1446;
  double t1466;
  double t1476;
  double t1479;
  double t1485;
  double t1489;
  double t1490;
  double t1501;
  double t1507;
  double t1517;
  double t1534;
  double t1542;
  double t1553;
  double t1556;
  double t1582;
  double t1584;
  double t1597;
  double t1662;
  double t1677;
  double t1681;
  double t1690;
  double t1695;
  double t1698;
  double t1705;
  double t1714;
  double t1715;
  double t1723;
  double t1727;
  double t1730;
  double t1747;
  double t1756;
  double t1771;
  double t1777;
  double t1779;
  double t1789;
  double t1812;
  double t1813;
  double t2010;
  double t1873;
  double t1900;
  double t1914;
  double t1930;
  double t1932;
  double t1948;
  double t1949;
  double t2000;
  double t2006;
  double t2007;
  double t2013;
  double t2020;
  double t2025;
  double t2031;
  double t2032;
  double t2036;
  double t2067;
  double t2081;
  double t2083;
  double t2103;
  double t2114;
  double t2123;
  double t2126;
  double t2143;
  double t2156;
  double t2157;
  double t2172;
  double t2309;
  double t2361;
  double t2365;
  double t2369;
  double t2380;
  double t2382;
  double t2400;
  double t2407;
  double t2408;
  double t2413;
  double t2425;
  double t2444;
  double t2447;
  double t2455;
  double t2457;
  double t2463;
  double t2465;
  double t2475;
  double t2476;
  double t2490;
  double t2491;
  double t2506;
  double t2511;
  double t2515;
  double t2521;
  double t2523;
  double t2542;
  double t2548;
  double t2551;
  double t2555;
  double t2562;
  double t2564;
  double t2292;
  double t2634;
  double t2585;
  double t2586;
  double t2597;
  double t2600;
  double t2608;
  double t2617;
  double t2620;
  double t2642;
  double t2649;
  double t2653;
  double t2656;
  double t2658;
  double t2670;
  double t2676;
  double t2687;
  double t2696;
  double t2698;
  double t2699;
  double t2702;
  double t2705;
  double t2708;
  double t2715;
  double t2727;
  double t1973;
  double t2028;
  double t2091;
  double t2093;
  double t2100;
  double t2131;
  double t2195;
  double t2203;
  double t2211;
  double t2217;
  double t2232;
  double t2245;
  double t2263;
  double t2264;
  double t2271;
  double t2288;
  double t2289;
  double t2291;
  double t2293;
  double t2305;
  double t2328;
  double t2343;
  double t2428;
  double t2510;
  double t2567;
  double t2571;
  double t2590;
  double t2673;
  double t2731;
  double t2735;
  double t2736;
  double t2744;
  double t2745;
  double t2746;
  double t2749;
  double t2762;
  double t2763;
  double t2814;
  double t2820;
  double t2824;
  double t1699;
  double t1719;
  double t1735;
  double t1739;
  double t1778;
  double t1816;
  double t1818;
  double t1824;
  double t1828;
  double t1840;
  double t1848;
  double t1851;
  double t1857;
  double t2836;
  double t2838;
  double t2840;
  double t2791;
  double t2797;
  double t2798;
  double t2851;
  double t2854;
  double t2857;
  double t2582;
  double t2766;
  double t2782;
  double t1746;
  double t1858;
  double t1872;
  double t2885;
  double t2894;
  double t2897;
  double t2986;
  double t2996;
  double t3001;
  double t2946;
  double t2949;
  double t2950;
  double t2867;
  double t2868;
  double t2879;
  double t2901;
  double t3090;
  double t3104;
  double t3105;
  double t2951;
  double t3075;
  double t3108;
  double t3047;
  double t3050;
  double t3060;
  double t3193;
  double t3198;
  double t3158;
  double t3183;
  double t3184;
  double t2902;
  double t2906;
  double t2910;
  double t2954;
  double t2955;
  double t2957;
  double t3278;
  double t3292;
  double t3296;
  double t3304;
  double t3305;
  double t3370;
  double t3427;
  double t3428;
  double t3429;
  double t3432;
  double t3436;
  double t3453;
  double t3468;
  double t3393;
  double t3397;
  double t3401;
  double t3129;
  double t3134;
  double t3151;
  double t3328;
  double t3334;
  double t3357;
  double t3213;
  double t3216;
  double t3218;
  double t3523;
  double t3524;
  double t3531;
  double t3537;
  double t3538;
  double t3511;
  double t3518;
  double t3555;
  double t3556;
  double t3559;
  double t3541;
  double t3554;
  double t3542;
  double t3549;
  double t3565;
  double t3586;
  double t3570;
  double t3577;
  double t3766;
  double t3783;
  double t3784;
  double t3789;
  double t3757;
  double t3761;
  double t3767;
  double t3805;
  double t3813;
  double t3819;
  double t3821;
  double t3726;
  double t3730;
  double t3703;
  double t3710;
  double t3942;
  double t3780;
  double t3787;
  double t3791;
  double t3793;
  double t3855;
  double t3867;
  double t3874;
  double t3878;
  double t3884;
  double t3890;
  double t3891;
  double t3892;
  double t3904;
  double t3946;
  double t3948;
  double t3951;
  double t3954;
  double t3958;
  double t3960;
  double t3969;
  double t3976;
  double t3980;
  double t3991;
  double t3994;
  double t3995;
  double t3999;
  double t4001;
  double t4003;
  double t4004;
  double t4007;
  double t4014;
  double t3850;
  double t3982;
  double t3911;
  double t3913;
  double t3931;
  double t3935;
  double t3836;
  double t3840;
  double t3844;
  double t3848;
  double t4041;
  double t4061;
  double t4043;
  double t4044;
  double t4048;
  double t4054;
  double t4030;
  double t4033;
  double t4036;
  double t4037;
  double t4178;
  double t4184;
  double t4185;
  double t4198;
  double t4200;
  double t4201;
  double t3714;
  double t3722;
  double t3733;
  double t3738;
  double t3745;
  double t3765;
  double t3768;
  double t3772;
  double t4293;
  double t4307;
  double t4315;
  double t4278;
  double t4279;
  double t4281;
  double t4266;
  double t4268;
  double t4270;
  double t4272;
  double t4291;
  double t4320;
  double t4328;
  double t4339;
  double t4340;
  double t4344;
  double t4351;
  double t4352;
  double t4353;
  double t4213;
  double t4214;
  double t4222;
  double t4224;
  double t4226;
  double t4227;
  double t4125;
  double t4134;
  double t4144;
  double t4152;
  double t4173;
  double t4174;
  double t4392;
  double t4393;
  double t4394;
  double t4379;
  double t4382;
  double t4383;
  double t4414;
  double t4415;
  double t4421;
  double t4423;
  double t4425;
  double t4429;
  double t4438;
  double t4443;
  double t4445;
  double t4396;
  double t4398;
  double t4404;
  double t4412;
  double t4422;
  double t4497;
  double t4498;
  double t4502;
  double t4452;
  double t4454;
  double t4479;
  double t4483;
  double t4484;
  double t4517;
  double t4531;
  double t4534;
  double t4541;
  double t4542;
  double t4543;
  double t4613;
  double t4593;
  double t4595;
  double t4601;
  double t4605;
  double t4606;
  double t4614;
  double t4616;
  double t4623;
  double t4627;
  double t4628;
  double t4630;
  double t4668;
  double t4699;
  double t4661;
  double t4663;
  double t4666;
  double t4669;
  double t4671;
  double t4673;
  double t4674;
  double t4682;
  double t4690;
  double t4691;
  double t4692;
  double t4696;
  double t4697;
  double t4698;
  double t4703;
  double t4709;
  double t4711;
  double t4715;
  double t4720;
  double t4724;
  double t4726;
  double t4727;
  double t4730;
  double t4731;
  double t4732;
  double t4733;
  double t4735;
  double t4736;
  double t4737;
  double t4770;
  double t4771;
  double t4774;
  double t4776;
  double t4778;
  double t4780;
  double t4784;
  double t4788;
  double t4789;
  double t4790;
  double t4694;
  double t4725;
  double t4738;
  double t4742;
  double t4744;
  double t4745;
  double t4747;
  double t4749;
  double t4752;
  double t4753;
  double t4759;
  double t4761;
  double t4851;
  double t4857;
  double t4860;
  double t4864;
  double t4870;
  double t4872;
  double t4873;
  double t4891;
  double t4900;
  double t4902;
  double t4903;
  double t3800;
  double t3802;
  double t3803;
  double t4804;
  double t4806;
  double t4809;
  double t4810;
  double t3826;
  double t3827;
  double t3829;
  double t4944;
  double t4948;
  double t4950;
  double t4951;
  double t4953;
  double t4954;
  double t4959;
  double t4969;
  double t4970;
  double t4975;
  double t4980;
  double t4982;
  double t4984;
  double t4987;
  double t4994;
  double t4999;
  double t5001;
  double t5002;
  double t5005;
  double t5007;
  double t5008;
  double t5009;
  double t4751;
  double t4812;
  double t4819;
  double t4823;
  double t4824;
  double t4831;
  double t4777;
  double t4786;
  double t4792;
  double t4800;
  double t4842;
  double t4909;
  double t5044;
  double t5045;
  double t5046;
  double t5050;
  double t5055;
  double t5056;
  double t4862;
  double t4871;
  double t4884;
  double t4885;
  double t4910;
  double t4911;
  double t4912;
  double t4914;
  double t4078;
  double t4084;
  double t4085;
  double t4117;
  double t4118;
  double t4122;
  double t4607;
  double t4619;
  double t4631;
  double t4632;
  double t4649;
  double t4653;
  double t4657;
  double t4659;
  double t5157;
  double t5158;
  double t5159;
  double t5147;
  double t5149;
  double t5150;
  double t5136;
  double t5137;
  double t5140;
  double t5142;
  double t5155;
  double t5160;
  double t5163;
  double t5174;
  double t5182;
  double t5183;
  double t5189;
  double t5191;
  double t5194;
  double t5066;
  double t5067;
  double t5069;
  double t5058;
  double t5059;
  double t5061;
  double t5212;
  double t5218;
  double t5220;
  double t5223;
  double t5226;
  double t5227;
  double t5098;
  double t5099;
  double t5104;
  double t5091;
  double t5092;
  double t5095;
  double t5279;
  double t5280;
  double t5286;
  double t5239;
  double t5242;
  double t5243;
  double t5231;
  double t5244;
  double t5235;
  double t5236;
  double t5237;
  double t5266;
  double t5289;
  double t5303;
  double t5304;
  double t5310;
  double t5315;
  double t5318;
  double t5322;
  double t5270;
  double t5271;
  double t5273;
  double t5379;
  double t5380;
  double t5391;
  double t5331;
  double t5332;
  double t5337;
  double t1621;
  double t1631;
  double t1647;
  double t2923;
  double t2926;
  double t2928;
  double t5432;
  double t5441;
  double t5445;
  double t2803;
  double t2809;
  double t2810;
  double t5605;
  double t5636;
  double t5682;
  double t5690;
  double t5734;
  double t5741;
  double t5606;
  double t5610;
  double t5612;
  double t5638;
  double t5639;
  double t5641;
  double t5702;
  double t5717;
  double t5719;
  double t5724;
  double t5725;
  double t5726;
  double t5889;
  double t5893;
  double t5905;
  double t5917;
  double t6020;
  double t6038;
  double t6057;
  double t6068;
  double t4560;
  double t4562;
  double t4567;
  double t4276;
  double t4330;
  double t4334;
  double t6182;
  double t6183;
  double t4506;
  double t4508;
  double t4512;
  double t6191;
  double t6192;
  double t5999;
  double t6000;
  double t6002;
  double t6005;
  double t6010;
  double t6015;
  double t6343;
  double t6344;
  double t6345;
  double t6346;
  double t6352;
  double t6361;
  double t6362;
  double t6363;
  double t6364;
  double t6365;
  double t6368;
  double t6375;
  double t6376;
  double t6388;
  double t6391;
  double t6402;
  double t6404;
  double t6406;
  double t6409;
  double t6414;
  double t6415;
  double t6418;
  double t6282;
  double t6285;
  double t6081;
  double t6083;
  double t6085;
  double t6096;
  double t6116;
  double t6125;
  double t6297;
  double t6320;
  double t5394;
  double t5395;
  double t5397;
  double t6543;
  double t6550;
  double t5350;
  double t5351;
  double t5360;
  double t5143;
  double t5164;
  double t5166;
  double t6568;
  double t6583;
  double t5570;
  double t5573;
  double t5575;
  double t6784;
  double t6799;
  double t6837;
  double t6839;
  double t6858;
  double t6860;
  double t6786;
  double t6787;
  double t6789;
  double t6800;
  double t6801;
  double t6804;
  double t6831;
  double t6832;
  double t6834;
  double t6874;
  double t6879;
  double t6883;
  double t6984;
  double t6987;
  double t7000;
  double t7003;
  double t7079;
  double t7082;
  double t7100;
  double t7104;
  double t7168;
  double t7169;
  double t7180;
  double t7181;
  double t7065;
  double t7066;
  double t7067;
  double t7070;
  double t7071;
  double t7075;
  double t7277;
  double t7279;
  double t7280;
  double t7281;
  double t7283;
  double t7284;
  double t7285;
  double t7286;
  double t7287;
  double t7288;
  double t7289;
  double t7291;
  double t7293;
  double t7300;
  double t7302;
  double t7306;
  double t7308;
  double t7309;
  double t7310;
  double t7313;
  double t7314;
  double t7317;
  double t7239;
  double t7243;
  double t7111;
  double t7112;
  double t7113;
  double t7115;
  double t7117;
  double t7119;
  double t7252;
  double t7258;
  double t7428;
  double t7435;
  double t7442;
  double t7446;
  double t6748;
  double t6752;
  double t6755;
  double t6679;
  t593 = Cos(var1[14]);
  t648 = -1.*t593;
  t663 = 1. + t648;
  t146 = Cos(var1[13]);
  t149 = -1.*t146;
  t200 = 1. + t149;
  t753 = Sin(var1[14]);
  t768 = 4.e-6*t753;
  t466 = Sin(var1[13]);
  t676 = 1.000000000016*t663;
  t682 = -7.e-6*t663;
  t782 = t682 + t768;
  t822 = -7.e-6*t782;
  t828 = -1. + t676 + t822;
  t215 = -7.e-6*t200;
  t884 = -6.5e-11*t663;
  t892 = 1. + t884;
  t928 = -7.e-6*t892;
  t936 = 7.e-6*t663;
  t971 = t928 + t936 + t768;
  t1071 = -2.8e-11*t663;
  t1084 = -1. + t593;
  t1115 = 4.e-6*t1084;
  t1196 = -7.e-6*t753;
  t1205 = t1115 + t1196;
  t1209 = -7.e-6*t1205;
  t1210 = t1071 + t1209 + t753;
  t1239 = Sin(var1[12]);
  t569 = -4.e-6*t466;
  t588 = t215 + t569;
  t850 = t588*t828;
  t855 = -6.5e-11*t200;
  t860 = 1. + t855;
  t974 = t860*t971;
  t984 = -1. + t146;
  t999 = 4.e-6*t984;
  t1030 = 7.e-6*t466;
  t1062 = t999 + t1030;
  t1218 = t1062*t1210;
  t1225 = t850 + t974 + t1218;
  t145 = Cos(var1[12]);
  t1242 = -1.000000000016*t200;
  t1249 = 1. + t1242;
  t1253 = t1249*t828;
  t1276 = 4.e-6*t466;
  t1281 = t215 + t1276;
  t1287 = t1281*t971;
  t1300 = 2.8e-11*t200;
  t1302 = t1300 + t466;
  t1314 = t1302*t1210;
  t1327 = t1253 + t1287 + t1314;
  t131 = Cos(var1[5]);
  t1368 = -1.*t1239*t1225;
  t1381 = t145*t1327;
  t1383 = t1368 + t1381;
  t1236 = t145*t1225;
  t1334 = t1239*t1327;
  t1354 = t1236 + t1334;
  t1390 = Sin(var1[5]);
  t1422 = Cos(var1[3]);
  t1356 = t131*t1354;
  t1406 = t1383*t1390;
  t1412 = t1356 + t1406;
  t36 = Sin(var1[3]);
  t1441 = Cos(var1[4]);
  t1446 = -1.*t466;
  t1466 = t1300 + t1446;
  t1476 = t1466*t828;
  t1479 = -7.e-6*t466;
  t1485 = t999 + t1479;
  t1489 = t1485*t971;
  t1490 = -1.000000000049*t200;
  t1501 = 1. + t1490;
  t1507 = t1501*t1210;
  t1517 = t1476 + t1489 + t1507;
  t1534 = t1441*t1517;
  t1542 = Sin(var1[4]);
  t1553 = t131*t1383;
  t1556 = -1.*t1354*t1390;
  t1582 = t1553 + t1556;
  t1584 = -1.*t1542*t1582;
  t1597 = t1534 + t1584;
  t1662 = -1.*t1517*t1542;
  t1677 = -1.*t1441*t1582;
  t1681 = t1662 + t1677;
  t1690 = -1.000000000049*t663;
  t1695 = 4.e-6*t1205;
  t1698 = 1. + t1690 + t1695;
  t1705 = 4.e-6*t892;
  t1714 = 7.e-6*t753;
  t1715 = t1705 + t1115 + t1714;
  t1723 = 2.8e-11*t663;
  t1727 = 4.e-6*t782;
  t1730 = t1723 + t1727 + t753;
  t1747 = t1302*t1698;
  t1756 = t1281*t1715;
  t1771 = t1249*t1730;
  t1777 = t1747 + t1756 + t1771;
  t1779 = t1062*t1698;
  t1789 = t860*t1715;
  t1812 = t588*t1730;
  t1813 = t1779 + t1789 + t1812;
  t2010 = -1.*t753;
  t1873 = 4.e-6*t663;
  t1900 = t1873 + t1196;
  t1914 = 4.e-6*t1900;
  t1930 = -4.e-6*t753;
  t1932 = t682 + t1930;
  t1948 = -7.e-6*t1932;
  t1949 = 1. + t884 + t1914 + t1948;
  t2000 = 1.000000000049*t663;
  t2006 = -1. + t2000;
  t2007 = 4.e-6*t2006;
  t2013 = t1723 + t2010;
  t2020 = -7.e-6*t2013;
  t2025 = t2007 + t1115 + t2020 + t1196;
  t2031 = -1.000000000016*t663;
  t2032 = 1. + t2031;
  t2036 = -7.e-6*t2032;
  t2067 = t1071 + t2010;
  t2081 = 4.e-6*t2067;
  t2083 = t2036 + t682 + t2081 + t768;
  t2103 = t1281*t1949;
  t2114 = t1302*t2025;
  t2123 = t1249*t2083;
  t2126 = t2103 + t2114 + t2123;
  t2143 = t860*t1949;
  t2156 = t1062*t2025;
  t2157 = t588*t2083;
  t2172 = t2143 + t2156 + t2157;
  t2309 = -2.8e-11*t200;
  t2361 = -2.598649999999999e-7*var1[14];
  t2365 = 0.148705*t892;
  t2369 = -2.3905277499999995e-16*t663;
  t2380 = -0.038922999986*t1900;
  t2382 = -0.80315*t1932;
  t2400 = t936 + t768;
  t2407 = -0.503149000008*t2400;
  t2408 = t1115 + t1714;
  t2413 = -0.038924*t2408;
  t2425 = t2361 + t2365 + t2369 + t2380 + t2382 + t2407 + t2413;
  t2444 = 1.0394599999999997e-12*var1[14];
  t2447 = 1. + t1690;
  t2455 = -0.038924*t2447;
  t2457 = -0.03892299998790722*t663;
  t2463 = -0.80315*t2013;
  t2465 = 0.148705*t1205;
  t2475 = t1873 + t1714;
  t2476 = -3.6777349999999994e-6*t2475;
  t2490 = t1071 + t753;
  t2491 = -0.503149000008*t2490;
  t2506 = t2444 + t2455 + t2457 + t2463 + t2465 + t2476 + t2491;
  t2511 = 1.8190549999999993e-12*var1[14];
  t2515 = -0.80315*t2032;
  t2521 = -0.5031490000160505*t663;
  t2523 = -0.038922999986*t2067;
  t2542 = t936 + t1930;
  t2548 = -3.6777349999999994e-6*t2542;
  t2551 = 0.148705*t782;
  t2555 = t1723 + t753;
  t2562 = -0.038924*t2555;
  t2564 = t2511 + t2515 + t2521 + t2523 + t2548 + t2551 + t2562;
  t2292 = 4.e-6*t200;
  t2634 = 7.e-6*t200;
  t2585 = -1.*t145;
  t2586 = 1. + t2585;
  t2597 = 0.15121*t1239;
  t2600 = 1.0248489999999998e-12*var1[13];
  t2608 = -0.28120900000849935*t200;
  t2617 = t2309 + t1446;
  t2620 = -0.038748999993*t2617;
  t2642 = t2634 + t569;
  t2649 = -2.123459e-6*t2642;
  t2653 = t1281*t2425;
  t2656 = t1302*t2506;
  t2658 = t1249*t2564;
  t2670 = t2600 + t2608 + t2620 + t2649 + t2653 + t2656 + t2658;
  t2676 = -1.4640699999999997e-7*var1[13];
  t2687 = -1.38024835e-16*t200;
  t2696 = t2292 + t1479;
  t2698 = -0.038748999993*t2696;
  t2699 = t2634 + t1276;
  t2702 = -0.281209000004*t2699;
  t2705 = t860*t2425;
  t2708 = t1062*t2506;
  t2715 = t588*t2564;
  t2727 = t2676 + t2687 + t2698 + t2702 + t2705 + t2708 + t2715;
  t1973 = t1485*t1949;
  t2028 = t1501*t2025;
  t2091 = t1466*t2083;
  t2093 = t1973 + t2028 + t2091;
  t2100 = t1441*t2093;
  t2131 = t145*t2126;
  t2195 = -1.*t1239*t2172;
  t2203 = t2131 + t2195;
  t2211 = t131*t2203;
  t2217 = t1239*t2126;
  t2232 = t145*t2172;
  t2245 = t2217 + t2232;
  t2263 = -1.*t2245*t1390;
  t2264 = t2211 + t2263;
  t2271 = -1.*t1542*t2264;
  t2288 = t2100 + t2271;
  t2289 = 5.856279999999999e-13*var1[13];
  t2291 = -0.0387489999948987*t200;
  t2293 = t2292 + t1030;
  t2305 = -2.123459e-6*t2293;
  t2328 = t2309 + t466;
  t2343 = -0.281209000004*t2328;
  t2428 = t1485*t2425;
  t2510 = t1501*t2506;
  t2567 = t1466*t2564;
  t2571 = t2289 + t2291 + t2305 + t2343 + t2428 + t2510 + t2567;
  t2590 = -0.15121*t2586;
  t2673 = t145*t2670;
  t2731 = -1.*t1239*t2727;
  t2735 = t2590 + t2597 + t2673 + t2731;
  t2736 = t131*t2735;
  t2744 = 0.15121*t2586;
  t2745 = t1239*t2670;
  t2746 = t145*t2727;
  t2749 = t2744 + t2597 + t2745 + t2746;
  t2762 = -1.*t2749*t1390;
  t2763 = t2736 + t2762;
  t2814 = t1441*t2571;
  t2820 = -1.*t1542*t2763;
  t2824 = t2814 + t2820;
  t1699 = t1501*t1698;
  t1719 = t1485*t1715;
  t1735 = t1466*t1730;
  t1739 = t1699 + t1719 + t1735;
  t1778 = t145*t1777;
  t1816 = -1.*t1239*t1813;
  t1818 = t1778 + t1816;
  t1824 = t131*t1818;
  t1828 = t1239*t1777;
  t1840 = t145*t1813;
  t1848 = t1828 + t1840;
  t1851 = -1.*t1848*t1390;
  t1857 = t1824 + t1851;
  t2836 = t2093*t1542;
  t2838 = t1441*t2264;
  t2840 = t2836 + t2838;
  t2791 = t2571*t1542;
  t2797 = t1441*t2763;
  t2798 = t2791 + t2797;
  t2851 = t1441*t1739;
  t2854 = -1.*t1542*t1857;
  t2857 = t2851 + t2854;
  t2582 = -1.*t2571*t1542;
  t2766 = -1.*t1441*t2763;
  t2782 = t2582 + t2766;
  t1746 = t1739*t1542;
  t1858 = t1441*t1857;
  t1872 = t1746 + t1858;
  t2885 = t131*t2749;
  t2894 = t2735*t1390;
  t2897 = t2885 + t2894;
  t2986 = -1.*t131*t1354;
  t2996 = -1.*t1383*t1390;
  t3001 = t2986 + t2996;
  t2946 = t131*t1848;
  t2949 = t1818*t1390;
  t2950 = t2946 + t2949;
  t2867 = t131*t2245;
  t2868 = t2203*t1390;
  t2879 = t2867 + t2868;
  t2901 = t2879*t2897;
  t3090 = -1.*t131*t2749;
  t3104 = -1.*t2735*t1390;
  t3105 = t3090 + t3104;
  t2951 = -1.*t2950*t2897;
  t3075 = t2879*t2763;
  t3108 = t2264*t2897;
  t3047 = -1.*t131*t2245;
  t3050 = -1.*t2203*t1390;
  t3060 = t3047 + t3050;
  t3193 = -1.*t2950*t2763;
  t3198 = -1.*t1857*t2897;
  t3158 = -1.*t131*t1848;
  t3183 = -1.*t1818*t1390;
  t3184 = t3158 + t3183;
  t2902 = t2840*t2798;
  t2906 = t2288*t2824;
  t2910 = t2901 + t2902 + t2906;
  t2954 = -1.*t1872*t2798;
  t2955 = -1.*t2857*t2824;
  t2957 = t2951 + t2954 + t2955;
  t3278 = 0.15121*t145;
  t3292 = -0.15121*t1239;
  t3296 = -1.*t1239*t2670;
  t3304 = -1.*t145*t2727;
  t3305 = t3278 + t3292 + t3296 + t3304;
  t3370 = t3278 + t2597 + t2673 + t2731;
  t3427 = -1.*t145*t1225;
  t3428 = -1.*t1239*t1327;
  t3429 = t3427 + t3428;
  t3432 = t131*t3429;
  t3436 = t3432 + t2996;
  t3453 = t3429*t1390;
  t3468 = t1553 + t3453;
  t3393 = -1.*t1239*t1777;
  t3397 = -1.*t145*t1813;
  t3401 = t3393 + t3397;
  t3129 = t2093*t2571;
  t3134 = t2264*t2763;
  t3151 = t3129 + t3134 + t2901;
  t3328 = -1.*t1239*t2126;
  t3334 = -1.*t145*t2172;
  t3357 = t3328 + t3334;
  t3213 = -1.*t1739*t2571;
  t3216 = -1.*t1857*t2763;
  t3218 = t3213 + t3216 + t2951;
  t3523 = t3357*t1390;
  t3524 = t2211 + t3523;
  t3531 = t131*t3370;
  t3537 = t3305*t1390;
  t3538 = t3531 + t3537;
  t3511 = t3401*t1390;
  t3518 = t1824 + t3511;
  t3555 = t131*t3305;
  t3556 = -1.*t3370*t1390;
  t3559 = t3555 + t3556;
  t3541 = t2879*t3538;
  t3554 = t3524*t2897;
  t3542 = t131*t3357;
  t3549 = t3542 + t3050;
  t3565 = -1.*t2950*t3538;
  t3586 = -1.*t3518*t2897;
  t3570 = t131*t3401;
  t3577 = t3570 + t3183;
  t3766 = 2.8e-11*t466;
  t3783 = -7.e-6*t146;
  t3784 = t3783 + t569;
  t3789 = t149 + t3766;
  t3757 = 4.e-6*t146;
  t3761 = t3757 + t1479;
  t3767 = t146 + t3766;
  t3805 = t3784*t1949;
  t3813 = -1.000000000049*t466*t2025;
  t3819 = t3789*t2083;
  t3821 = t3805 + t3813 + t3819;
  t3726 = 7.e-6*t146;
  t3730 = t3726 + t569;
  t3703 = -4.e-6*t146;
  t3710 = t3703 + t1479;
  t3942 = -2.8e-11*t466;
  t3780 = -1.000000000049*t466*t1698;
  t3787 = t3784*t1715;
  t3791 = t3789*t1730;
  t3793 = t3780 + t3787 + t3791;
  t3855 = t3783 + t1276;
  t3867 = -0.038748999993*t3855;
  t3874 = t3757 + t1030;
  t3878 = -0.281209000004*t3874;
  t3884 = -1.38024835e-16*t466;
  t3890 = -6.5e-11*t466*t2425;
  t3891 = t3730*t2506;
  t3892 = t3710*t2564;
  t3904 = -1.4640699999999997e-7 + t3867 + t3878 + t3884 + t3890 + t3891 + t3892;
  t3946 = t146 + t3942;
  t3948 = -0.281209000004*t3946;
  t3951 = t3726 + t1276;
  t3954 = -2.123459e-6*t3951;
  t3958 = -0.0387489999948987*t466;
  t3960 = t3784*t2425;
  t3969 = -1.000000000049*t466*t2506;
  t3976 = t3789*t2564;
  t3980 = 5.856279999999999e-13 + t3948 + t3954 + t3958 + t3960 + t3969 + t3976;
  t3991 = t149 + t3942;
  t3994 = -0.038748999993*t3991;
  t3995 = t3703 + t1030;
  t3999 = -2.123459e-6*t3995;
  t4001 = -0.28120900000849935*t466;
  t4003 = t3761*t2425;
  t4004 = t3767*t2506;
  t4007 = -1.000000000016*t466*t2564;
  t4014 = 1.0248489999999998e-12 + t3994 + t3999 + t4001 + t4003 + t4004 + t4007;
  t3850 = t3821*t2571;
  t3982 = t2093*t3980;
  t3911 = -6.5e-11*t466*t1949;
  t3913 = t3730*t2025;
  t3931 = t3710*t2083;
  t3935 = t3911 + t3913 + t3931;
  t3836 = t3761*t1949;
  t3840 = t3767*t2025;
  t3844 = -1.000000000016*t466*t2083;
  t3848 = t3836 + t3840 + t3844;
  t4041 = -1.*t3793*t2571;
  t4061 = -1.*t1739*t3980;
  t4043 = t3730*t1698;
  t4044 = -6.5e-11*t466*t1715;
  t4048 = t3710*t1730;
  t4054 = t4043 + t4044 + t4048;
  t4030 = t3767*t1698;
  t4033 = t3761*t1715;
  t4036 = -1.000000000016*t466*t1730;
  t4037 = t4030 + t4033 + t4036;
  t4178 = -1.*t1239*t3904;
  t4184 = t145*t4014;
  t4185 = t4178 + t4184;
  t4198 = t145*t3904;
  t4200 = t1239*t4014;
  t4201 = t4198 + t4200;
  t3714 = t3710*t828;
  t3722 = -6.5e-11*t466*t971;
  t3733 = t3730*t1210;
  t3738 = t3714 + t3722 + t3733;
  t3745 = -1.000000000016*t466*t828;
  t3765 = t3761*t971;
  t3768 = t3767*t1210;
  t3772 = t3745 + t3765 + t3768;
  t4293 = t145*t3738;
  t4307 = t1239*t3772;
  t4315 = t4293 + t4307;
  t4278 = -1.*t1239*t3738;
  t4279 = t145*t3772;
  t4281 = t4278 + t4279;
  t4266 = t3789*t828;
  t4268 = t3784*t971;
  t4270 = -1.000000000049*t466*t1210;
  t4272 = t4266 + t4268 + t4270;
  t4291 = t131*t4281;
  t4320 = -1.*t4315*t1390;
  t4328 = t4291 + t4320;
  t4339 = t131*t4315;
  t4340 = t4281*t1390;
  t4344 = t4339 + t4340;
  t4351 = t1441*t4272;
  t4352 = -1.*t1542*t4328;
  t4353 = t4351 + t4352;
  t4213 = t145*t4054;
  t4214 = t1239*t4037;
  t4222 = t4213 + t4214;
  t4224 = -1.*t1239*t4054;
  t4226 = t145*t4037;
  t4227 = t4224 + t4226;
  t4125 = t145*t3935;
  t4134 = t1239*t3848;
  t4144 = t4125 + t4134;
  t4152 = -1.*t1239*t3935;
  t4173 = t145*t3848;
  t4174 = t4152 + t4173;
  t4392 = t131*t4144;
  t4393 = t4174*t1390;
  t4394 = t4392 + t4393;
  t4379 = t131*t4222;
  t4382 = t4227*t1390;
  t4383 = t4379 + t4382;
  t4414 = t131*t4201;
  t4415 = t4185*t1390;
  t4421 = t4414 + t4415;
  t4423 = t131*t4185;
  t4425 = -1.*t4201*t1390;
  t4429 = t4423 + t4425;
  t4438 = t131*t4227;
  t4443 = -1.*t4222*t1390;
  t4445 = t4438 + t4443;
  t4396 = t131*t4174;
  t4398 = -1.*t4144*t1390;
  t4404 = t4396 + t4398;
  t4412 = t4394*t2897;
  t4422 = t2879*t4421;
  t4497 = t3821*t1542;
  t4498 = t1441*t4404;
  t4502 = t4497 + t4498;
  t4452 = -1.*t4383*t2897;
  t4454 = -1.*t2950*t4421;
  t4479 = t3793*t1542;
  t4483 = t1441*t4445;
  t4484 = t4479 + t4483;
  t4517 = t3980*t1542;
  t4531 = t1441*t4429;
  t4534 = t4517 + t4531;
  t4541 = t1441*t3980;
  t4542 = -1.*t1542*t4429;
  t4543 = t4541 + t4542;
  t4613 = 4.e-6*t593;
  t4593 = -7.e-6*t593;
  t4595 = t4593 + t1930;
  t4601 = -7.e-6*t4595;
  t4605 = -2.8e-11*t753;
  t4606 = t593 + t4601 + t4605;
  t4614 = 7.000000000455e-6*t753;
  t4616 = t4613 + t4614;
  t4623 = t4613 + t1196;
  t4627 = -7.e-6*t4623;
  t4628 = 1.000000000016*t753;
  t4630 = t4627 + t4628;
  t4668 = 7.e-6*t593;
  t4699 = 2.8e-11*t753;
  t4661 = -4.e-6*t593;
  t4663 = t4661 + t1196;
  t4666 = -0.80315*t4663;
  t4669 = t4668 + t1930;
  t4671 = -0.038924*t4669;
  t4673 = t4593 + t768;
  t4674 = -0.038922999986*t4673;
  t4682 = t4613 + t1714;
  t4690 = -0.503149000008*t4682;
  t4691 = -9.666064052774999e-12*t753;
  t4692 = -2.598649999999999e-7 + t4666 + t4671 + t4674 + t4690 + t4691;
  t4696 = 0.148705*t4595;
  t4697 = t593 + t4605;
  t4698 = -0.503149000008*t4697;
  t4703 = t648 + t4699;
  t4709 = -0.80315*t4703;
  t4711 = t4668 + t768;
  t4715 = -3.6777349999999994e-6*t4711;
  t4720 = 1.0000140000590574e-6*t753;
  t4724 = 1.0394599999999997e-12 + t4696 + t4698 + t4709 + t4715 + t4720;
  t4726 = 0.148705*t4623;
  t4727 = t648 + t4605;
  t4730 = -0.038922999986*t4727;
  t4731 = t593 + t4699;
  t4732 = -0.038924*t4731;
  t4733 = t4661 + t1714;
  t4735 = -3.6777349999999994e-6*t4733;
  t4736 = 0.30000099999679997*t753;
  t4737 = 1.8190549999999993e-12 + t4726 + t4730 + t4732 + t4735 + t4736;
  t4770 = -7.e-6*t4663;
  t4771 = 4.e-6*t4673;
  t4774 = -6.5e-11*t753;
  t4776 = t4770 + t4771 + t4774;
  t4778 = 4.e-6*t4727;
  t4780 = 1.12e-16*t753;
  t4784 = t4613 + t4778 + t4780;
  t4788 = -7.e-6*t4703;
  t4789 = 1.96e-16*t753;
  t4790 = t4593 + t4788 + t4789;
  t4694 = t1281*t4692;
  t4725 = t1302*t4724;
  t4738 = t1249*t4737;
  t4742 = t4694 + t4725 + t4738;
  t4744 = t1485*t4692;
  t4745 = t1501*t4724;
  t4747 = t1466*t4737;
  t4749 = t4744 + t4745 + t4747;
  t4752 = t860*t4692;
  t4753 = t1062*t4724;
  t4759 = t588*t4737;
  t4761 = t4752 + t4753 + t4759;
  t4851 = 4.e-6*t4595;
  t4857 = -1.000000000049*t753;
  t4860 = t4851 + t4857;
  t4864 = -4.00000000026e-6*t753;
  t4870 = t4668 + t4864;
  t4872 = 4.e-6*t4623;
  t4873 = t593 + t4872 + t4699;
  t4891 = t1501*t4860;
  t4900 = t1485*t4870;
  t4902 = t1466*t4873;
  t4903 = t4891 + t4900 + t4902;
  t3800 = t2126*t2670;
  t3802 = t2172*t2727;
  t3803 = t3800 + t3129 + t3802;
  t4804 = t1485*t4776;
  t4806 = t1466*t4784;
  t4809 = t1501*t4790;
  t4810 = t4804 + t4806 + t4809;
  t3826 = -1.*t1777*t2670;
  t3827 = -1.*t1813*t2727;
  t3829 = t3826 + t3213 + t3827;
  t4944 = t2425*t4776;
  t4948 = t1949*t4692;
  t4950 = t2025*t4724;
  t4951 = t2083*t4737;
  t4953 = t4790*t2506;
  t4954 = t4784*t2564;
  t4959 = t4944 + t4948 + t4950 + t4951 + t4953 + t4954;
  t4969 = -1.*t2425*t4870;
  t4970 = -1.*t1698*t4724;
  t4975 = -1.*t4692*t1715;
  t4980 = -1.*t4737*t1730;
  t4982 = -1.*t4860*t2506;
  t4984 = -1.*t4873*t2564;
  t4987 = t4969 + t4970 + t4975 + t4980 + t4982 + t4984;
  t4994 = t1949*t2425;
  t4999 = t2025*t2506;
  t5001 = t2083*t2564;
  t5002 = t4994 + t4999 + t5001;
  t5005 = -1.*t2425*t1715;
  t5007 = -1.*t1698*t2506;
  t5008 = -1.*t1730*t2564;
  t5009 = t5005 + t5007 + t5008;
  t4751 = t2093*t4749;
  t4812 = t4810*t2571;
  t4819 = t860*t4776;
  t4823 = t588*t4784;
  t4824 = t1062*t4790;
  t4831 = t4819 + t4823 + t4824;
  t4777 = t1281*t4776;
  t4786 = t1249*t4784;
  t4792 = t1302*t4790;
  t4800 = t4777 + t4786 + t4792;
  t4842 = -1.*t4749*t1739;
  t4909 = -1.*t4903*t2571;
  t5044 = t1239*t4742;
  t5045 = t145*t4761;
  t5046 = t5044 + t5045;
  t5050 = t145*t4742;
  t5055 = -1.*t1239*t4761;
  t5056 = t5050 + t5055;
  t4862 = t1302*t4860;
  t4871 = t1281*t4870;
  t4884 = t1249*t4873;
  t4885 = t4862 + t4871 + t4884;
  t4910 = t1062*t4860;
  t4911 = t860*t4870;
  t4912 = t588*t4873;
  t4914 = t4910 + t4911 + t4912;
  t4078 = t2245*t2749;
  t4084 = t2203*t2735;
  t4085 = t3129 + t4078 + t4084;
  t4117 = -1.*t1848*t2749;
  t4118 = -1.*t1818*t2735;
  t4122 = t3213 + t4117 + t4118;
  t4607 = t1302*t4606;
  t4619 = t1281*t4616;
  t4631 = t1249*t4630;
  t4632 = t4607 + t4619 + t4631;
  t4649 = t1062*t4606;
  t4653 = t860*t4616;
  t4657 = t588*t4630;
  t4659 = t4649 + t4653 + t4657;
  t5157 = t1239*t4632;
  t5158 = t145*t4659;
  t5159 = t5157 + t5158;
  t5147 = t145*t4632;
  t5149 = -1.*t1239*t4659;
  t5150 = t5147 + t5149;
  t5136 = t1501*t4606;
  t5137 = t1485*t4616;
  t5140 = t1466*t4630;
  t5142 = t5136 + t5137 + t5140;
  t5155 = t131*t5150;
  t5160 = -1.*t5159*t1390;
  t5163 = t5155 + t5160;
  t5174 = t131*t5159;
  t5182 = t5150*t1390;
  t5183 = t5174 + t5182;
  t5189 = t1441*t5142;
  t5191 = -1.*t1542*t5163;
  t5194 = t5189 + t5191;
  t5066 = -1.*t1239*t4831;
  t5067 = t145*t4800;
  t5069 = t5066 + t5067;
  t5058 = t145*t4831;
  t5059 = t1239*t4800;
  t5061 = t5058 + t5059;
  t5212 = t131*t5056;
  t5218 = -1.*t5046*t1390;
  t5220 = t5212 + t5218;
  t5223 = t131*t5046;
  t5226 = t5056*t1390;
  t5227 = t5223 + t5226;
  t5098 = t145*t4885;
  t5099 = -1.*t1239*t4914;
  t5104 = t5098 + t5099;
  t5091 = t1239*t4885;
  t5092 = t145*t4914;
  t5095 = t5091 + t5092;
  t5279 = t131*t5095;
  t5280 = t5104*t1390;
  t5286 = t5279 + t5280;
  t5239 = t131*t5061;
  t5242 = t5069*t1390;
  t5243 = t5239 + t5242;
  t5231 = t2879*t5227;
  t5244 = t5243*t2897;
  t5235 = t131*t5069;
  t5236 = -1.*t5061*t1390;
  t5237 = t5235 + t5236;
  t5266 = -1.*t5227*t2950;
  t5289 = -1.*t5286*t2897;
  t5303 = t4749*t1542;
  t5304 = t1441*t5220;
  t5310 = t5303 + t5304;
  t5315 = t1441*t4749;
  t5318 = -1.*t1542*t5220;
  t5322 = t5315 + t5318;
  t5270 = t131*t5104;
  t5271 = -1.*t5095*t1390;
  t5273 = t5270 + t5271;
  t5379 = t4903*t1542;
  t5380 = t1441*t5273;
  t5391 = t5379 + t5380;
  t5331 = t4810*t1542;
  t5332 = t1441*t5237;
  t5337 = t5331 + t5332;
  t1621 = t1422*t1412;
  t1631 = -1.*t36*t1597;
  t1647 = t1621 + t1631;
  t2923 = -1.*t1739*t1542;
  t2926 = -1.*t1441*t1857;
  t2928 = t2923 + t2926;
  t5432 = t1517*t1542;
  t5441 = t1441*t1582;
  t5445 = t5432 + t5441;
  t2803 = -1.*t2093*t1542;
  t2809 = -1.*t1441*t2264;
  t2810 = t2803 + t2809;
  t5605 = -1.*t2879*t2897;
  t5636 = t1412*t2897;
  t5682 = -1.*t2879*t2763;
  t5690 = -1.*t2264*t2897;
  t5734 = t1412*t2763;
  t5741 = t1582*t2897;
  t5606 = -1.*t2840*t2798;
  t5610 = -1.*t2288*t2824;
  t5612 = t5605 + t5606 + t5610;
  t5638 = t5445*t2798;
  t5639 = t1597*t2824;
  t5641 = t5636 + t5638 + t5639;
  t5702 = -1.*t2093*t2571;
  t5717 = -1.*t2264*t2763;
  t5719 = t5702 + t5717 + t5605;
  t5724 = t1517*t2571;
  t5725 = t1582*t2763;
  t5726 = t5724 + t5725 + t5636;
  t5889 = -1.*t2879*t3538;
  t5893 = -1.*t3524*t2897;
  t5905 = t1412*t3538;
  t5917 = t3468*t2897;
  t6020 = -1.*t3821*t2571;
  t6038 = -1.*t2093*t3980;
  t6057 = t4272*t2571;
  t6068 = t1517*t3980;
  t4560 = t1441*t3793;
  t4562 = -1.*t1542*t4445;
  t4567 = t4560 + t4562;
  t4276 = t4272*t1542;
  t4330 = t1441*t4328;
  t4334 = t4276 + t4330;
  t6182 = -1.*t4394*t2897;
  t6183 = -1.*t2879*t4421;
  t4506 = t1441*t3821;
  t4508 = -1.*t1542*t4404;
  t4512 = t4506 + t4508;
  t6191 = t4344*t2897;
  t6192 = t1412*t4421;
  t5999 = -1.*t2126*t2670;
  t6000 = -1.*t2172*t2727;
  t6002 = t5999 + t5702 + t6000;
  t6005 = t1327*t2670;
  t6010 = t1225*t2727;
  t6015 = t6005 + t5724 + t6010;
  t6343 = t2425*t971;
  t6344 = t1210*t2506;
  t6345 = t828*t2564;
  t6346 = t6343 + t6344 + t6345;
  t6352 = -1.*t2425*t4776;
  t6361 = -1.*t1949*t4692;
  t6362 = -1.*t2025*t4724;
  t6363 = -1.*t2083*t4737;
  t6364 = -1.*t4790*t2506;
  t6365 = -1.*t4784*t2564;
  t6368 = t6352 + t6361 + t6362 + t6363 + t6364 + t6365;
  t6375 = -1.*t1949*t2425;
  t6376 = -1.*t2025*t2506;
  t6388 = -1.*t2083*t2564;
  t6391 = t6375 + t6376 + t6388;
  t6402 = t4692*t971;
  t6404 = t2425*t4616;
  t6406 = t828*t4737;
  t6409 = t4724*t1210;
  t6414 = t4606*t2506;
  t6415 = t4630*t2564;
  t6418 = t6402 + t6404 + t6406 + t6409 + t6414 + t6415;
  t6282 = -1.*t2093*t4749;
  t6285 = -1.*t4810*t2571;
  t6081 = -1.*t2245*t2749;
  t6083 = -1.*t2203*t2735;
  t6085 = t5702 + t6081 + t6083;
  t6096 = t1354*t2749;
  t6116 = t1383*t2735;
  t6125 = t5724 + t6096 + t6116;
  t6297 = t4749*t1517;
  t6320 = t5142*t2571;
  t5394 = t1441*t4903;
  t5395 = -1.*t1542*t5273;
  t5397 = t5394 + t5395;
  t6543 = -1.*t2879*t5227;
  t6550 = -1.*t5243*t2897;
  t5350 = t1441*t4810;
  t5351 = -1.*t1542*t5237;
  t5360 = t5350 + t5351;
  t5143 = t5142*t1542;
  t5164 = t1441*t5163;
  t5166 = t5143 + t5164;
  t6568 = t5227*t1412;
  t6583 = t5183*t2897;
  t5570 = t1422*t2950;
  t5573 = -1.*t36*t2857;
  t5575 = t5570 + t5573;
  t6784 = -1.*t1412*t2897;
  t6799 = t2950*t2897;
  t6837 = -1.*t1412*t2763;
  t6839 = -1.*t1582*t2897;
  t6858 = t2950*t2763;
  t6860 = t1857*t2897;
  t6786 = -1.*t5445*t2798;
  t6787 = -1.*t1597*t2824;
  t6789 = t6784 + t6786 + t6787;
  t6800 = t1872*t2798;
  t6801 = t2857*t2824;
  t6804 = t6799 + t6800 + t6801;
  t6831 = -1.*t1517*t2571;
  t6832 = -1.*t1582*t2763;
  t6834 = t6831 + t6832 + t6784;
  t6874 = t1739*t2571;
  t6879 = t1857*t2763;
  t6883 = t6874 + t6879 + t6799;
  t6984 = -1.*t1412*t3538;
  t6987 = -1.*t3468*t2897;
  t7000 = t2950*t3538;
  t7003 = t3518*t2897;
  t7079 = -1.*t4272*t2571;
  t7082 = -1.*t1517*t3980;
  t7100 = t3793*t2571;
  t7104 = t1739*t3980;
  t7168 = -1.*t4344*t2897;
  t7169 = -1.*t1412*t4421;
  t7180 = t4383*t2897;
  t7181 = t2950*t4421;
  t7065 = -1.*t1327*t2670;
  t7066 = -1.*t1225*t2727;
  t7067 = t7065 + t6831 + t7066;
  t7070 = t1777*t2670;
  t7071 = t1813*t2727;
  t7075 = t7070 + t6874 + t7071;
  t7277 = -1.*t2425*t971;
  t7279 = -1.*t1210*t2506;
  t7280 = -1.*t828*t2564;
  t7281 = t7277 + t7279 + t7280;
  t7283 = t2425*t4870;
  t7284 = t1698*t4724;
  t7285 = t4692*t1715;
  t7286 = t4737*t1730;
  t7287 = t4860*t2506;
  t7288 = t4873*t2564;
  t7289 = t7283 + t7284 + t7285 + t7286 + t7287 + t7288;
  t7291 = t2425*t1715;
  t7293 = t1698*t2506;
  t7300 = t1730*t2564;
  t7302 = t7291 + t7293 + t7300;
  t7306 = -1.*t4692*t971;
  t7308 = -1.*t2425*t4616;
  t7309 = -1.*t828*t4737;
  t7310 = -1.*t4724*t1210;
  t7313 = -1.*t4606*t2506;
  t7314 = -1.*t4630*t2564;
  t7317 = t7306 + t7308 + t7309 + t7310 + t7313 + t7314;
  t7239 = t4749*t1739;
  t7243 = t4903*t2571;
  t7111 = -1.*t1354*t2749;
  t7112 = -1.*t1383*t2735;
  t7113 = t6831 + t7111 + t7112;
  t7115 = t1848*t2749;
  t7117 = t1818*t2735;
  t7119 = t6874 + t7115 + t7117;
  t7252 = -1.*t4749*t1517;
  t7258 = -1.*t5142*t2571;
  t7428 = t5227*t2950;
  t7435 = t5286*t2897;
  t7442 = -1.*t5227*t1412;
  t7446 = -1.*t5183*t2897;
  t6748 = t1422*t2879;
  t6752 = -1.*t36*t2288;
  t6755 = t6748 + t6752;
  t6679 = 6.5e-11*t663;
  p_output1[0]=(-1.*t1422*t1597 - 1.*t1412*t36)*var2[1] + t1647*var2[2];
  p_output1[1]=t1597*var2[0] - 1.*t1681*t36*var2[1] + t1422*t1681*var2[2] + (t1872*(t2288*t2782 + t2288*t2798 + t2810*t2824 + t2824*t2840) + t2857*t2910 + t2840*(-1.*t1872*t2824 - 1.*t2782*t2857 - 1.*t2798*t2857 - 1.*t2824*t2928) + t2288*t2957)*var2[3];
  p_output1[2]=t1441*t3001*var2[0] + (t1422*t1582 + t1542*t3001*t36)*var2[1] + (-1.*t1422*t1542*t3001 + t1582*t36)*var2[2] + (t1441*t2957*t3060 + t1872*(t1441*t2798*t3060 - 1.*t1542*t2824*t3060 + t3075 - 1.*t1542*t2288*t3105 + t1441*t2840*t3105 + t3108) + t1441*t2910*t3184 + t2840*(-1.*t1441*t1872*t3105 + t1542*t2857*t3105 - 1.*t1441*t2798*t3184 + t1542*t2824*t3184 + t3193 + t3198))*var2[3] + (t2950*(t2763*t3060 + t3075 + t2264*t3105 + t3108) + t1857*t3151 + t2879*(-1.*t1857*t3105 - 1.*t2763*t3184 + t3193 + t3198) + t2264*t3218)*var2[4];
  p_output1[3]=t1441*t3436*var2[0] + (t1422*t3468 + t1542*t3436*t36)*var2[1] + (-1.*t1422*t1542*t3436 + t3468*t36)*var2[2] + (t1441*t2957*t3549 + t1872*(t3541 + t1441*t2798*t3549 - 1.*t1542*t2824*t3549 + t3554 - 1.*t1542*t2288*t3559 + t1441*t2840*t3559) + t1441*t2910*t3577 + t2840*(-1.*t1441*t1872*t3559 + t1542*t2857*t3559 + t3565 - 1.*t1441*t2798*t3577 + t1542*t2824*t3577 + t3586))*var2[3] + (t3151*t3518 + t3218*t3524 + t2950*(t3541 + t2763*t3549 + t3554 + t2264*t3559) + t2879*(-1.*t1857*t3559 + t3565 - 1.*t2763*t3577 + t3586))*var2[4] + (t1739*(t2203*t2749 + t2203*t3305 + t2735*t3357 + t2245*t3370) + t2093*(-1.*t1818*t2749 - 1.*t1818*t3305 - 1.*t1848*t3370 - 1.*t2735*t3401))*var2[5];
  p_output1[4]=t4334*var2[0] + (t1422*t4344 - 1.*t36*t4353)*var2[1] + (t36*t4344 + t1422*t4353)*var2[2] + (t2910*t4484 + t2957*t4502 + t1872*(t4412 + t4422 + t2798*t4502 + t2824*t4512 + t2840*t4534 + t2288*t4543) + t2840*(t4452 + t4454 - 1.*t2798*t4484 - 1.*t1872*t4534 - 1.*t2857*t4543 - 1.*t2824*t4567))*var2[3] + (t3151*t4383 + t3218*t4394 + t2950*(t3850 + t3982 + t2763*t4404 + t4412 + t4422 + t2264*t4429) + t2879*(t4041 + t4061 - 1.*t1857*t4429 - 1.*t2763*t4445 + t4452 + t4454))*var2[4] + (t3793*t4085 + t3821*t4122 + t1739*(t3850 + t3982 + t2749*t4144 + t2735*t4174 + t2203*t4185 + t2245*t4201) + t2093*(t4041 + t4061 - 1.*t1818*t4185 - 1.*t1848*t4201 - 1.*t2749*t4222 - 1.*t2735*t4227))*var2[5] + (0.15121*t3738 + 0.15121*t3772 + t3793*t3803 + t3821*t3829 + t1739*(t2670*t3848 + t3850 + t2172*t3904 + t2727*t3935 + t3982 + t2126*t4014) + t2093*(-1.*t1813*t3904 - 1.*t1777*t4014 - 1.*t2670*t4037 + t4041 - 1.*t2727*t4054 + t4061))*var2[12];
  p_output1[5]=t5166*var2[0] + (t1422*t5183 - 1.*t36*t5194)*var2[1] + (t36*t5183 + t1422*t5194)*var2[2] + (t2957*t5337 + t1872*(t5231 + t5244 + t2840*t5310 + t2288*t5322 + t2798*t5337 + t2824*t5360) + t2910*t5391 + t2840*(t5266 + t5289 - 1.*t1872*t5310 - 1.*t2857*t5322 - 1.*t2798*t5391 - 1.*t2824*t5397))*var2[3] + (t3218*t5243 + t2950*(t4751 + t4812 + t2264*t5220 + t5231 + t2763*t5237 + t5244) + t3151*t5286 + t2879*(t4842 + t4909 - 1.*t1857*t5220 + t5266 - 1.*t2763*t5273 + t5289))*var2[4] + (t4122*t4810 + t4085*t4903 + t1739*(t4751 + t4812 + t2245*t5046 + t2203*t5056 + t2749*t5061 + t2735*t5069) + t2093*(t4842 + t4909 - 1.*t1848*t5046 - 1.*t1818*t5056 - 1.*t2749*t5095 - 1.*t2735*t5104))*var2[5] + (0.15121*t4632 + 0.15121*t4659 + t3829*t4810 + t1739*(t2126*t4742 + t4751 + t2172*t4761 + t2670*t4800 + t4812 + t2727*t4831) + t3803*t4903 + t2093*(-1.*t1777*t4742 - 1.*t1813*t4761 + t4842 - 1.*t2670*t4885 + t4909 - 1.*t2727*t4914))*var2[12] + (-0.281209*t4606 + 0.038749*t4630 + t1715*t4959 + t1949*t4987 + t4870*t5002 + t4776*t5009 - 7.e-6*(t1730*t4959 + t2083*t4987 + t4873*t5002 + t4784*t5009) + 4.e-6*(-1.*t1698*t4959 - 1.*t2025*t4987 - 1.*t4860*t5002 - 1.*t4790*t5009) + 1.e-6*(t4661 - 7.000000000455e-6*t753))*var2[13];
  p_output1[6]=t5445;
  p_output1[7]=t1647;
  p_output1[8]=t1422*t1597 + t1412*t36;
  p_output1[9]=t1872*t2910 + t2840*t2957;
  p_output1[10]=t2950*t3151 + t2879*t3218;
  p_output1[11]=t1739*t4085 + t2093*t4122;
  p_output1[12]=0.15121*t1225 + 0.15121*t1327 + t1739*t3803 + t2093*t3829;
  p_output1[13]=-0.281209*t1210 + t1715*t5002 + t1949*t5009 + 4.e-6*(-1.*t1698*t5002 - 1.*t2025*t5009) - 7.e-6*(t1730*t5002 + t2083*t5009) + 0.038749*t828 + 1.e-6*(t1930 + t682 + 7.e-6*t892);
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t1422*t2857 - 1.*t2950*t36)*var2[1] + t5575*var2[2];
  p_output1[16]=t2857*var2[0] - 1.*t2928*t36*var2[1] + t1422*t2928*var2[2] + ((-1.*t2288*t2782 - 1.*t2288*t2798 - 1.*t2810*t2824 - 1.*t2824*t2840)*t5445 + t2840*(t1597*t2782 + t1597*t2798 + t1681*t2824 + t2824*t5445) + t1597*t5612 + t2288*t5641)*var2[3];
  p_output1[17]=t1441*t3184*var2[0] + (t1422*t1857 + t1542*t3184*t36)*var2[1] + (-1.*t1422*t1542*t3184 + t1857*t36)*var2[2] + (t1441*t3001*t5612 + t1441*t3060*t5641 + t5445*(-1.*t1441*t2798*t3060 + t1542*t2824*t3060 + t1542*t2288*t3105 - 1.*t1441*t2840*t3105 + t5682 + t5690) + t2840*(t1441*t2798*t3001 - 1.*t1542*t2824*t3001 - 1.*t1542*t1597*t3105 + t1441*t3105*t5445 + t5734 + t5741))*var2[3] + (t1412*(-1.*t2763*t3060 - 1.*t2264*t3105 + t5682 + t5690) + t1582*t5719 + t2264*t5726 + t2879*(t2763*t3001 + t1582*t3105 + t5734 + t5741))*var2[4];
  p_output1[18]=t1441*t3577*var2[0] + (t1422*t3518 + t1542*t3577*t36)*var2[1] + (-1.*t1422*t1542*t3577 + t3518*t36)*var2[2] + (t1441*t3436*t5612 + t1441*t3549*t5641 + t5445*(-1.*t1441*t2798*t3549 + t1542*t2824*t3549 + t1542*t2288*t3559 - 1.*t1441*t2840*t3559 + t5889 + t5893) + t2840*(t1441*t2798*t3436 - 1.*t1542*t2824*t3436 - 1.*t1542*t1597*t3559 + t1441*t3559*t5445 + t5905 + t5917))*var2[3] + (t3468*t5719 + t3524*t5726 + t1412*(-1.*t2763*t3549 - 1.*t2264*t3559 + t5889 + t5893) + t2879*(t2763*t3436 + t1582*t3559 + t5905 + t5917))*var2[4] + (t1517*(-1.*t2203*t2749 - 1.*t2203*t3305 - 1.*t2735*t3357 - 1.*t2245*t3370) + t2093*(t1383*t2749 + t1383*t3305 + t1354*t3370 + t2735*t3429))*var2[5];
  p_output1[19]=t4484*var2[0] + (t1422*t4383 - 1.*t36*t4567)*var2[1] + (t36*t4383 + t1422*t4567)*var2[2] + (t4334*t5612 + t4502*t5641 + t5445*(-1.*t2798*t4502 - 1.*t2824*t4512 - 1.*t2840*t4534 - 1.*t2288*t4543 + t6182 + t6183) + t2840*(t2798*t4334 + t2824*t4353 + t1597*t4543 + t4534*t5445 + t6191 + t6192))*var2[3] + (t4344*t5719 + t4394*t5726 + t1412*(-1.*t2763*t4404 - 1.*t2264*t4429 + t6020 + t6038 + t6182 + t6183) + t2879*(t2763*t4328 + t1582*t4429 + t6057 + t6068 + t6191 + t6192))*var2[4] + (t1517*(-1.*t2749*t4144 - 1.*t2735*t4174 - 1.*t2203*t4185 - 1.*t2245*t4201 + t6020 + t6038) + t2093*(t1383*t4185 + t1354*t4201 + t2735*t4281 + t2749*t4315 + t6057 + t6068) + t4272*t6085 + t3821*t6125)*var2[5] + (0.15121*t4037 + 0.15121*t4054 + t4272*t6002 + t3821*t6015 + t1517*(-1.*t2670*t3848 - 1.*t2172*t3904 - 1.*t2727*t3935 - 1.*t2126*t4014 + t6020 + t6038) + t2093*(t2727*t3738 + t2670*t3772 + t1225*t3904 + t1327*t4014 + t6057 + t6068))*var2[12];
  p_output1[20]=t5391*var2[0] + (t1422*t5286 - 1.*t36*t5397)*var2[1] + (t36*t5286 + t1422*t5397)*var2[2] + (t5166*t5612 + t5337*t5641 + t5445*(-1.*t2840*t5310 - 1.*t2288*t5322 - 1.*t2798*t5337 - 1.*t2824*t5360 + t6543 + t6550) + t2840*(t2798*t5166 + t2824*t5194 + t1597*t5322 + t5310*t5445 + t6568 + t6583))*var2[3] + (t5183*t5719 + t5243*t5726 + t1412*(-1.*t2264*t5220 - 1.*t2763*t5237 + t6282 + t6285 + t6543 + t6550) + t2879*(t2763*t5163 + t1582*t5220 + t6297 + t6320 + t6568 + t6583))*var2[4] + (t5142*t6085 + t4810*t6125 + t1517*(-1.*t2245*t5046 - 1.*t2203*t5056 - 1.*t2749*t5061 - 1.*t2735*t5069 + t6282 + t6285) + t2093*(t1354*t5046 + t1383*t5056 + t2735*t5150 + t2749*t5159 + t6297 + t6320))*var2[5] + (0.15121*t4885 + 0.15121*t4914 + t5142*t6002 + t4810*t6015 + t1517*(-1.*t2126*t4742 - 1.*t2172*t4761 - 1.*t2670*t4800 - 1.*t2727*t4831 + t6282 + t6285) + t2093*(t2670*t4632 + t2727*t4659 + t1327*t4742 + t1225*t4761 + t6297 + t6320))*var2[12] + (-0.281209*t4860 + 0.038749*t4873 + t4776*t6346 + t4616*t6391 + t1949*t6418 + 4.e-6*(-1.*t4790*t6346 - 1.*t1210*t6368 - 1.*t4606*t6391 - 1.*t2025*t6418) + 1.e-6*(t4593 + 4.00000000026e-6*t753) - 7.e-6*(t4784*t6346 + t4630*t6391 + t2083*t6418 + t6368*t828) + t6368*t971)*var2[13];
  p_output1[21]=t1872;
  p_output1[22]=t5575;
  p_output1[23]=t1422*t2857 + t2950*t36;
  p_output1[24]=t5445*t5612 + t2840*t5641;
  p_output1[25]=t1412*t5719 + t2879*t5726;
  p_output1[26]=t1517*t6085 + t2093*t6125;
  p_output1[27]=0.15121*t1777 + 0.15121*t1813 + t1517*t6002 + t2093*t6015;
  p_output1[28]=-0.281209*t1698 + 0.038749*t1730 + t1949*t6346 + 4.e-6*(-1.*t2025*t6346 - 1.*t1210*t6391) + 1.e-6*(t1196 + t1873 + 4.e-6*(-1. + t6679)) - 7.e-6*(t2083*t6346 + t6391*t828) + t6391*t971;
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t1422*t2288 - 1.*t2879*t36)*var2[1] + t6755*var2[2];
  p_output1[31]=t2288*var2[0] - 1.*t2810*t36*var2[1] + t1422*t2810*var2[2] + ((t1872*t2824 + t2782*t2857 + t2798*t2857 + t2824*t2928)*t5445 + t1872*(-1.*t1597*t2782 - 1.*t1597*t2798 - 1.*t1681*t2824 - 1.*t2824*t5445) + t2857*t6789 + t1597*t6804)*var2[3];
  p_output1[32]=t1441*t3060*var2[0] + (t1422*t2264 + t1542*t3060*t36)*var2[1] + (-1.*t1422*t1542*t3060 + t2264*t36)*var2[2] + (t1441*t3184*t6789 + t1441*t3001*t6804 + t1872*(-1.*t1441*t2798*t3001 + t1542*t2824*t3001 + t1542*t1597*t3105 - 1.*t1441*t3105*t5445 + t6837 + t6839) + t5445*(t1441*t1872*t3105 - 1.*t1542*t2857*t3105 + t1441*t2798*t3184 - 1.*t1542*t2824*t3184 + t6858 + t6860))*var2[3] + (t1857*t6834 + t2950*(-1.*t2763*t3001 - 1.*t1582*t3105 + t6837 + t6839) + t1412*(t1857*t3105 + t2763*t3184 + t6858 + t6860) + t1582*t6883)*var2[4];
  p_output1[33]=t1441*t3549*var2[0] + (t1422*t3524 + t1542*t3549*t36)*var2[1] + (-1.*t1422*t1542*t3549 + t3524*t36)*var2[2] + (t1441*t3577*t6789 + t1441*t3436*t6804 + t1872*(-1.*t1441*t2798*t3436 + t1542*t2824*t3436 + t1542*t1597*t3559 - 1.*t1441*t3559*t5445 + t6984 + t6987) + t5445*(t1441*t1872*t3559 - 1.*t1542*t2857*t3559 + t1441*t2798*t3577 - 1.*t1542*t2824*t3577 + t7000 + t7003))*var2[3] + (t3518*t6834 + t3468*t6883 + t2950*(-1.*t2763*t3436 - 1.*t1582*t3559 + t6984 + t6987) + t1412*(t1857*t3559 + t2763*t3577 + t7000 + t7003))*var2[4] + (t1517*(t1818*t2749 + t1818*t3305 + t1848*t3370 + t2735*t3401) + t1739*(-1.*t1383*t2749 - 1.*t1383*t3305 - 1.*t1354*t3370 - 1.*t2735*t3429))*var2[5];
  p_output1[34]=t4502*var2[0] + (t1422*t4394 - 1.*t36*t4512)*var2[1] + (t36*t4394 + t1422*t4512)*var2[2] + (t4484*t6789 + t4334*t6804 + t1872*(-1.*t2798*t4334 - 1.*t2824*t4353 - 1.*t1597*t4543 - 1.*t4534*t5445 + t7168 + t7169) + t5445*(t2798*t4484 + t1872*t4534 + t2857*t4543 + t2824*t4567 + t7180 + t7181))*var2[3] + (t4383*t6834 + t4344*t6883 + t2950*(-1.*t2763*t4328 - 1.*t1582*t4429 + t7079 + t7082 + t7168 + t7169) + t1412*(t1857*t4429 + t2763*t4445 + t7100 + t7104 + t7180 + t7181))*var2[4] + (t1739*(-1.*t1383*t4185 - 1.*t1354*t4201 - 1.*t2735*t4281 - 1.*t2749*t4315 + t7079 + t7082) + t1517*(t1818*t4185 + t1848*t4201 + t2749*t4222 + t2735*t4227 + t7100 + t7104) + t3793*t7113 + t4272*t7119)*var2[5] + (0.15121*t3848 + 0.15121*t3935 + t3793*t7067 + t4272*t7075 + t1739*(-1.*t2727*t3738 - 1.*t2670*t3772 - 1.*t1225*t3904 - 1.*t1327*t4014 + t7079 + t7082) + t1517*(t1813*t3904 + t1777*t4014 + t2670*t4037 + t2727*t4054 + t7100 + t7104))*var2[12];
  p_output1[35]=t5337*var2[0] + (t1422*t5243 - 1.*t36*t5360)*var2[1] + (t36*t5243 + t1422*t5360)*var2[2] + (t5391*t6789 + t5166*t6804 + t5445*(t1872*t5310 + t2857*t5322 + t2798*t5391 + t2824*t5397 + t7428 + t7435) + t1872*(-1.*t2798*t5166 - 1.*t2824*t5194 - 1.*t1597*t5322 - 1.*t5310*t5445 + t7442 + t7446))*var2[3] + (t5286*t6834 + t5183*t6883 + t1412*(t1857*t5220 + t2763*t5273 + t7239 + t7243 + t7428 + t7435) + t2950*(-1.*t2763*t5163 - 1.*t1582*t5220 + t7252 + t7258 + t7442 + t7446))*var2[4] + (t4903*t7113 + t5142*t7119 + t1517*(t1848*t5046 + t1818*t5056 + t2749*t5095 + t2735*t5104 + t7239 + t7243) + t1739*(-1.*t1354*t5046 - 1.*t1383*t5056 - 1.*t2735*t5150 - 1.*t2749*t5159 + t7252 + t7258))*var2[5] + (0.15121*t4800 + 0.15121*t4831 + t4903*t7067 + t5142*t7075 + t1517*(t1777*t4742 + t1813*t4761 + t2670*t4885 + t2727*t4914 + t7239 + t7243) + t1739*(-1.*t2670*t4632 - 1.*t2727*t4659 - 1.*t1327*t4742 - 1.*t1225*t4761 + t7252 + t7258))*var2[12] + (0.038749*t4784 - 0.281209*t4790 + t4870*t7281 + t4616*t7302 + t1715*t7317 + 4.e-6*(-1.*t4860*t7281 - 1.*t1210*t7289 - 1.*t4606*t7302 - 1.*t1698*t7317) + 1.e-6*(7.e-6*t4663 + 4.e-6*t4669 + 6.5e-11*t753) - 7.e-6*(t4873*t7281 + t4630*t7302 + t1730*t7317 + t7289*t828) + t7289*t971)*var2[13];
  p_output1[36]=t2840;
  p_output1[37]=t6755;
  p_output1[38]=t1422*t2288 + t2879*t36;
  p_output1[39]=t1872*t6789 + t5445*t6804;
  p_output1[40]=t2950*t6834 + t1412*t6883;
  p_output1[41]=t1739*t7113 + t1517*t7119;
  p_output1[42]=0.15121*t2126 + 0.15121*t2172 + t1739*t7067 + t1517*t7075;
  p_output1[43]=-0.281209*t2025 + 0.038749*t2083 + 1.e-6*(-1. + 7.e-6*t1932 + 4.e-6*t2408 + t6679) + t1715*t7281 + 4.e-6*(-1.*t1698*t7281 - 1.*t1210*t7302) - 7.e-6*(t1730*t7281 + t7302*t828) + t7302*t971;
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_TrotStance1.hh"

namespace TrotStance1
{

void J_dh_RlFoot_TrotStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
