/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:12 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t656;
  double t517;
  double t795;
  double t270;
  double t670;
  double t730;
  double t793;
  double t1131;
  double t528;
  double t640;
  double t845;
  double t181;
  double t1069;
  double t1074;
  double t1077;
  double t1160;
  double t1206;
  double t1044;
  double t1346;
  double t1382;
  double t1408;
  double t1416;
  double t1425;
  double t1482;
  double t1490;
  double t1503;
  double t229;
  double t240;
  double t252;
  double t453;
  double t1270;
  double t1300;
  double t1327;
  double t1779;
  double t1800;
  double t1803;
  double t1825;
  double t1860;
  double t1861;
  double t1865;
  double t1556;
  double t1578;
  double t1950;
  double t1952;
  double t1969;
  double t1977;
  double t1997;
  double t2005;
  double t2007;
  double t2017;
  double t2021;
  double t2061;
  double t1243;
  double t1476;
  double t1509;
  double t1546;
  double t1608;
  double t1617;
  double t1660;
  double t1679;
  double t1706;
  double t1707;
  double t1745;
  double t1749;
  double t1902;
  double t1980;
  double t2095;
  double t2112;
  double t2208;
  double t2211;
  double t2222;
  double t2226;
  double t2229;
  double t2248;
  double t867;
  double t903;
  double t924;
  double t1003;
  double t2205;
  double t2253;
  double t2272;
  double t2863;
  double t2871;
  double t2879;
  double t2884;
  double t2888;
  double t2890;
  double t2435;
  double t2471;
  double t2477;
  double t2510;
  double t896;
  double t1019;
  double t1029;
  double t2638;
  double t2643;
  double t2654;
  double t2678;
  double t2699;
  double t2713;
  double t2744;
  double t2784;
  double t2577;
  double t2580;
  double t2582;
  double t2615;
  double t1547;
  double t1683;
  double t1687;
  double t2281;
  double t2353;
  double t2378;
  double t2425;
  double t2558;
  double t2786;
  double t2800;
  double t2803;
  double t2880;
  double t2896;
  double t2911;
  double t2938;
  double t2939;
  double t2941;
  double t2951;
  double t2960;
  double t2963;
  double t2971;
  double t2981;
  double t2985;
  double t3026;
  double t3114;
  double t3128;
  double t3134;
  double t3155;
  double t3168;
  double t3191;
  double t3201;
  double t3206;
  double t3019;
  double t3030;
  double t3039;
  double t3057;
  double t3061;
  double t3069;
  double t3073;
  double t3089;
  double t3092;
  double t3103;
  double t3149;
  double t3173;
  double t3213;
  double t3219;
  double t3221;
  double t3232;
  double t3250;
  double t3274;
  double t3283;
  double t3286;
  double t3304;
  double t3335;
  double t3351;
  double t3355;
  double t3365;
  double t3382;
  double t3427;
  double t3464;
  double t3377;
  double t3476;
  double t3477;
  double t3483;
  double t3500;
  double t3502;
  double t3503;
  double t3523;
  double t3526;
  double t3549;
  double t124;
  double t175;
  double t3694;
  double t3624;
  double t3737;
  double t3738;
  double t3753;
  double t3766;
  double t3770;
  double t3772;
  double t3894;
  double t3895;
  double t3896;
  double t3899;
  double t3902;
  double t3907;
  double t3910;
  double t3911;
  double t3918;
  double t3929;
  double t3930;
  double t3931;
  double t3933;
  double t3949;
  double t3954;
  double t3957;
  double t3784;
  double t3795;
  double t3807;
  double t3809;
  double t3847;
  double t3850;
  double t3851;
  double t3853;
  double t3876;
  double t3882;
  double t3884;
  double t3885;
  double t4070;
  double t4071;
  double t4074;
  double t4058;
  double t4059;
  double t4064;
  double t4093;
  double t4098;
  double t4104;
  double t4136;
  double t4142;
  double t4168;
  double t4117;
  double t4126;
  double t4127;
  double t4134;
  double t4170;
  double t4176;
  double t4178;
  double t4179;
  double t4180;
  double t4186;
  double t4187;
  double t4191;
  double t4193;
  double t4194;
  double t4198;
  double t4208;
  double t4209;
  double t4211;
  double t4212;
  double t4213;
  double t4218;
  double t4220;
  double t4221;
  double t4222;
  double t4223;
  double t4224;
  double t4231;
  double t4241;
  double t4245;
  double t4297;
  double t4304;
  double t4305;
  double t4283;
  double t4291;
  double t4294;
  double t4306;
  double t4309;
  double t4312;
  double t4338;
  double t4345;
  double t4376;
  double t4316;
  double t4319;
  double t4320;
  double t4323;
  double t4377;
  double t4387;
  double t4393;
  double t4400;
  double t4410;
  double t4412;
  double t4424;
  double t4425;
  double t4427;
  double t4430;
  double t4431;
  double t4497;
  double t4501;
  double t4516;
  double t4523;
  double t4534;
  double t4537;
  double t4546;
  double t4547;
  double t4522;
  double t4545;
  double t4554;
  double t4555;
  double t4558;
  double t4560;
  double t4561;
  double t4563;
  double t4578;
  double t4581;
  double t4586;
  double t4587;
  double t4589;
  double t4599;
  double t4600;
  double t4616;
  double t4585;
  double t4595;
  double t4626;
  double t4653;
  double t4660;
  double t4662;
  double t4663;
  double t4670;
  double t4776;
  double t4779;
  double t4783;
  double t4784;
  double t4556;
  double t4569;
  double t4571;
  double t4574;
  double t4575;
  double t4576;
  double t4720;
  double t4737;
  double t4762;
  double t4766;
  double t4774;
  double t4887;
  double t4890;
  double t4906;
  double t4835;
  double t4948;
  double t4949;
  double t4950;
  double t4951;
  double t4955;
  double t4956;
  double t4957;
  double t4983;
  double t4984;
  double t4987;
  double t4880;
  double t4905;
  double t4907;
  double t4913;
  double t4918;
  double t4919;
  double t4920;
  double t4921;
  double t5072;
  double t5077;
  double t5078;
  double t5063;
  double t5066;
  double t5068;
  double t5042;
  double t5050;
  double t5054;
  double t5057;
  double t5071;
  double t5080;
  double t5082;
  double t5093;
  double t5096;
  double t5097;
  double t5101;
  double t5103;
  double t5105;
  double t4695;
  double t4699;
  double t4700;
  double t4656;
  double t4683;
  double t4689;
  double t4798;
  double t5136;
  double t5141;
  double t5142;
  double t5144;
  double t5145;
  double t5146;
  double t5166;
  double t5168;
  double t5172;
  double t5143;
  double t5185;
  double t5192;
  double t5195;
  double t5175;
  double t5179;
  double t5215;
  double t5218;
  double t5222;
  double t5231;
  double t5233;
  double t5236;
  double t5254;
  double t5260;
  double t5263;
  double t5342;
  double t5345;
  double t5352;
  double t5354;
  double t5355;
  double t5363;
  double t5466;
  double t5467;
  double t5468;
  double t5473;
  double t5474;
  double t5475;
  double t5476;
  double t5480;
  double t5481;
  double t5483;
  double t5419;
  double t5424;
  double t5438;
  double t5388;
  double t5328;
  double t5332;
  double t5339;
  double t5560;
  double t5562;
  double t5563;
  double t5514;
  double t5518;
  double t5520;
  double t5525;
  double t5528;
  double t5532;
  double t5503;
  double t5507;
  double t5508;
  double t5533;
  double t5535;
  double t5539;
  double t5555;
  double t5566;
  double t5570;
  double t5571;
  double t5572;
  double t5577;
  double t5644;
  double t5646;
  double t5648;
  double t5668;
  double t5709;
  double t5713;
  double t5725;
  double t5768;
  double t5733;
  double t5727;
  double t5746;
  double t5751;
  double t5752;
  double t5792;
  double t5798;
  double t5802;
  double t5804;
  double t5805;
  double t5905;
  double t5915;
  double t5920;
  double t5933;
  double t5934;
  double t5939;
  double t5984;
  double t5959;
  double t6038;
  double t6039;
  double t6040;
  double t6041;
  double t6043;
  double t6044;
  double t6045;
  double t6047;
  double t6110;
  double t6111;
  double t6112;
  double t6113;
  double t6114;
  double t6117;
  double t6121;
  double t6123;
  double t6124;
  double t6125;
  double t6126;
  double t6127;
  double t6222;
  double t6226;
  double t6227;
  double t6243;
  double t6250;
  double t6253;
  double t6119;
  double t6128;
  double t6129;
  double t6132;
  double t6133;
  double t6136;
  double t6172;
  double t6175;
  double t6200;
  double t6148;
  double t6155;
  double t6204;
  double t6275;
  double t6348;
  double t6349;
  double t6350;
  double t6351;
  double t6358;
  double t6359;
  double t6361;
  double t6363;
  double t6103;
  double t6104;
  double t6107;
  double t6042;
  double t6049;
  double t6056;
  double t6264;
  double t6265;
  double t6267;
  double t6238;
  double t6254;
  double t6258;
  double t6272;
  double t6419;
  double t6420;
  double t6421;
  double t6165;
  double t6413;
  double t6415;
  double t6416;
  double t6438;
  double t6439;
  double t6442;
  double t6452;
  double t6454;
  double t6463;
  double t6398;
  double t6402;
  double t6405;
  double t6391;
  double t6393;
  double t6394;
  double t6381;
  double t6389;
  double t6397;
  double t6408;
  double t6409;
  double t6529;
  double t6530;
  double t6546;
  double t6563;
  double t6585;
  double t6586;
  double t6495;
  double t6499;
  double t6506;
  double t6425;
  double t6426;
  double t6428;
  double t6424;
  double t6467;
  double t6619;
  double t6620;
  double t6621;
  double t6492;
  double t6509;
  double t6614;
  double t6615;
  double t6616;
  double t6630;
  double t6657;
  double t6662;
  double t6669;
  double t6674;
  double t6678;
  double t6787;
  double t6790;
  double t6792;
  double t6793;
  double t6794;
  double t6795;
  double t6797;
  double t6800;
  double t6807;
  double t6809;
  double t6826;
  double t6832;
  double t6834;
  double t6838;
  double t6859;
  double t6860;
  double t6866;
  double t6870;
  double t6871;
  double t6872;
  double t6888;
  double t6889;
  double t6890;
  double t6891;
  double t6897;
  double t6898;
  double t6899;
  double t6901;
  double t6906;
  double t6907;
  double t6910;
  double t6904;
  double t6911;
  double t6913;
  double t6914;
  double t6915;
  double t6922;
  double t6924;
  double t6926;
  double t6928;
  double t6929;
  double t3621;
  double t499;
  double t3683;
  double t3721;
  double t6937;
  double t6939;
  double t6945;
  double t6955;
  double t6957;
  double t6966;
  double t3764;
  double t7011;
  double t7016;
  double t7020;
  double t7025;
  double t7029;
  double t7041;
  double t7046;
  double t7056;
  double t7061;
  double t7064;
  double t7065;
  double t7079;
  double t7084;
  double t7086;
  double t7098;
  double t3778;
  double t3783;
  double t6978;
  double t6979;
  double t6985;
  double t6995;
  double t6999;
  double t7008;
  double t3826;
  double t3828;
  double t3829;
  double t3865;
  double t3868;
  double t3874;
  double t7210;
  double t7214;
  double t7215;
  double t7216;
  double t7220;
  double t7222;
  double t7223;
  double t7226;
  double t7234;
  double t7131;
  double t7139;
  double t7145;
  double t7150;
  double t7152;
  double t7155;
  double t7156;
  double t7159;
  double t7167;
  double t7176;
  double t7181;
  double t7184;
  double t7333;
  double t7346;
  double t7422;
  double t7423;
  double t7424;
  double t7425;
  double t7426;
  double t7427;
  double t7432;
  double t7436;
  double t7437;
  double t7440;
  double t5281;
  double t5283;
  double t5288;
  double t7331;
  double t7499;
  double t5061;
  double t5083;
  double t5086;
  double t7518;
  double t7520;
  double t7645;
  double t7654;
  double t7664;
  double t7666;
  double t7812;
  double t7815;
  double t7825;
  double t7826;
  double t6005;
  double t6006;
  double t6007;
  double t5964;
  double t5965;
  double t5966;
  double t5928;
  double t7951;
  double t7962;
  double t6708;
  double t6718;
  double t6724;
  double t7960;
  double t7952;
  double t6390;
  double t6410;
  double t6411;
  double t8036;
  double t8039;
  double t6624;
  double t6625;
  double t6626;
  double t8043;
  double t8050;
  double t8114;
  double t8116;
  double t8118;
  double t8119;
  double t8121;
  double t8122;
  double t8124;
  double t8125;
  double t8126;
  double t8130;
  double t8132;
  double t8138;
  double t8139;
  double t8141;
  double t8143;
  double t8144;
  double t8145;
  double t8148;
  double t8150;
  double t8151;
  double t8152;
  double t8153;
  double t8155;
  double t8156;
  double t8170;
  double t8173;
  double t8175;
  double t8177;
  double t8161;
  double t8162;
  double t8163;
  double t8164;
  double t8159;
  double t8160;
  double t8168;
  double t8178;
  double t8182;
  double t8183;
  double t8185;
  double t8186;
  double t8187;
  double t8191;
  double t8192;
  double t8194;
  double t8197;
  double t8198;
  double t8202;
  double t8224;
  double t8226;
  double t8228;
  double t8232;
  double t8233;
  double t8234;
  double t8238;
  double t8239;
  double t8240;
  double t8241;
  double t8242;
  double t8245;
  double t8246;
  double t8248;
  double t8249;
  double t8208;
  double t8209;
  double t8214;
  double t8217;
  double t8220;
  double t8221;
  double t8282;
  double t8283;
  double t8285;
  double t8287;
  double t8288;
  double t8291;
  double t8292;
  double t8294;
  double t8296;
  double t8252;
  double t8253;
  double t8254;
  double t8255;
  double t8257;
  double t8259;
  double t8260;
  double t8261;
  double t8264;
  double t8265;
  double t8266;
  double t8267;
  double t8364;
  double t8366;
  double t8379;
  double t8381;
  double t8445;
  double t8447;
  double t8456;
  double t8470;
  double t8526;
  double t8534;
  double t8593;
  double t8594;
  double t8596;
  double t8598;
  double t8599;
  double t8601;
  double t8602;
  double t8577;
  double t8579;
  double t8580;
  double t8582;
  double t8584;
  double t8585;
  double t8588;
  double t8535;
  double t8525;
  double t8619;
  double t8621;
  double t8632;
  double t8634;
  double t8700;
  double t8716;
  double t8715;
  double t8701;
  double t8776;
  double t8783;
  double t8787;
  double t8792;
  t656 = Cos(var1[11]);
  t517 = Cos(var1[10]);
  t795 = -1. + t656;
  t270 = Sin(var1[9]);
  t670 = -1.*t656;
  t730 = 1. + t670;
  t793 = 1.6e-11*t730;
  t1131 = Sin(var1[11]);
  t528 = -1.*t517;
  t640 = 1. + t528;
  t845 = 1.6e-11*t795;
  t181 = Cos(var1[9]);
  t1069 = -1.000000000016*t730;
  t1074 = 1. + t1069;
  t1077 = 0.004352*t1074;
  t1160 = -0.9999910000159999*t1131;
  t1206 = t1077 + t1160;
  t1044 = Sin(var1[10]);
  t1346 = -1. + t793;
  t1382 = 4.e-6*t1346;
  t1408 = 3.999964e-6*t730;
  t1416 = -1.7408e-8*t1131;
  t1425 = t1382 + t1408 + t1416;
  t1482 = 0.999991*t656;
  t1490 = 0.004352*t1131;
  t1503 = t845 + t1482 + t1490;
  t229 = -1.*t181;
  t240 = 1. + t229;
  t252 = 0.15121*t240;
  t453 = -0.15121*t270;
  t1270 = -1. + t517;
  t1300 = 1.6e-11*t1270;
  t1327 = 1. + t1300;
  t1779 = -1.26e-8*var1[11];
  t1800 = 1. + t845;
  t1803 = -0.14871*t1800;
  t1825 = -1.64779999997447e-7*t730;
  t1860 = -1.59556e-7*t795;
  t1861 = -1.199987999968e-6*t1131;
  t1865 = t1779 + t1803 + t1825 + t1860 + t1861;
  t1556 = -1.000000000016*t640;
  t1578 = 1. + t1556;
  t1950 = 0.803147*t1074;
  t1952 = 0.50315000001605*t730;
  t1969 = 0.00130540515936178*t1131;
  t1977 = t1950 + t1952 + t1969;
  t1997 = -5.04e-14*var1[11];
  t2005 = -0.03988959484*t730;
  t2007 = 6.38224e-13*t795;
  t2017 = -0.041195*t656;
  t2021 = 0.299996999992*t1131;
  t2061 = t1997 + t2005 + t2007 + t2017 + t2021;
  t1243 = -4.e-6*t1044*t1206;
  t1476 = t1327*t1425;
  t1509 = 4.e-6*t640*t1503;
  t1546 = 0. + t1243 + t1476 + t1509;
  t1608 = t1578*t1206;
  t1617 = 4.e-6*t1044*t1425;
  t1660 = -1.*t1044*t1503;
  t1679 = 0. + t1608 + t1617 + t1660;
  t1706 = -1.2484e-7*var1[10];
  t1707 = 2.479936e-18*t640;
  t1745 = -1.54996e-7*t1270;
  t1749 = 1.124840000016e-6*t1044;
  t1902 = t1327*t1865;
  t1980 = -4.e-6*t1044*t1977;
  t2095 = 4.e-6*t640*t2061;
  t2112 = t1706 + t1707 + t1745 + t1749 + t1902 + t1980 + t2095;
  t2208 = 0.281210000008499*t640;
  t2211 = -0.03874900000062*t1044;
  t2222 = 4.e-6*t1044*t1865;
  t2226 = t1578*t1977;
  t2229 = -1.*t1044*t2061;
  t2248 = t2208 + t2211 + t2222 + t2226 + t2229;
  t867 = -1. + t793 + t845;
  t903 = 4.e-6*t795;
  t924 = -4.e-6*t656;
  t1003 = t903 + t924;
  t2205 = -1.*t270*t2112;
  t2253 = t181*t2248;
  t2272 = t252 + t453 + t2205 + t2253;
  t2863 = t1327*t867;
  t2871 = 4.e-6*t640*t1003;
  t2879 = t2863 + t2871;
  t2884 = 4.e-6*t867*t1044;
  t2888 = -1.*t1003*t1044;
  t2890 = t2884 + t2888;
  t2435 = -0.15121*t240;
  t2471 = t181*t2112;
  t2477 = t270*t2248;
  t2510 = t2435 + t453 + t2471 + t2477;
  t896 = 4.e-6*t640*t867;
  t1019 = t517*t1003;
  t1029 = t896 + t1019;
  t2638 = -4.9936e-13*var1[10];
  t2643 = -0.038749*t640;
  t2654 = 6.19984e-13*t1270;
  t2678 = -0.281210000004*t1044;
  t2699 = 4.e-6*t640*t1865;
  t2713 = t1044*t1977;
  t2744 = t517*t2061;
  t2784 = 0. + t2638 + t2643 + t2654 + t2678 + t2699 + t2713 + t2744;
  t2577 = t1044*t1206;
  t2580 = 4.e-6*t640*t1425;
  t2582 = t517*t1503;
  t2615 = 0. + t2577 + t2580 + t2582;
  t1547 = -1.*t270*t1546;
  t1683 = t181*t1679;
  t1687 = 0. + t1547 + t1683;
  t2281 = -1.*t1687*t2272;
  t2353 = t181*t1546;
  t2378 = t270*t1679;
  t2425 = 0. + t2353 + t2378;
  t2558 = -1.*t2425*t2510;
  t2786 = -1.*t2615*t2784;
  t2800 = t2281 + t2558 + t2786;
  t2803 = t1029*t2800;
  t2880 = -1.*t2879*t270;
  t2896 = t181*t2890;
  t2911 = t2880 + t2896;
  t2938 = t2911*t2272;
  t2939 = t181*t2879;
  t2941 = t270*t2890;
  t2951 = t2939 + t2941;
  t2960 = t2951*t2510;
  t2963 = t1029*t2784;
  t2971 = t2938 + t2960 + t2963;
  t2981 = t2971*t2615;
  t2985 = t2803 + t2981;
  t3026 = t2638 + t2643 + t2654 + t2678 + t2699 + t2713 + t2744;
  t3114 = -1.7408e-8*t730;
  t3128 = -3.999964e-6*t1131;
  t3134 = t3114 + t3128;
  t3155 = 0.999991*t1074;
  t3168 = t3155 + t1490;
  t3191 = -0.004352*t656;
  t3201 = 0.999991*t1131;
  t3206 = t3191 + t3201;
  t3019 = -1.*t1546*t2112;
  t3030 = -1.*t2615*t3026;
  t3039 = -1.*t1679*t2248;
  t3057 = t3019 + t3030 + t3039;
  t3061 = t1029*t3057;
  t3069 = t2879*t2112;
  t3073 = t1029*t3026;
  t3089 = t2890*t2248;
  t3092 = t3069 + t3073 + t3089;
  t3103 = t3092*t2615;
  t3149 = t1327*t3134;
  t3173 = -4.e-6*t1044*t3168;
  t3213 = 4.e-6*t640*t3206;
  t3219 = 0. + t3149 + t3173 + t3213;
  t3221 = -0.15121*t3219;
  t3232 = 4.e-6*t1044*t3134;
  t3250 = t1578*t3168;
  t3274 = -1.*t1044*t3206;
  t3283 = 0. + t3232 + t3250 + t3274;
  t3286 = -0.15121*t3283;
  t3304 = t3061 + t3103 + t3221 + t3286;
  t3335 = -1.*t1865*t1425;
  t3351 = -1.*t1206*t1977;
  t3355 = -1.*t1503*t2061;
  t3365 = t3335 + t3351 + t3355;
  t3382 = t867*t1865;
  t3427 = t1003*t2061;
  t3464 = t3382 + t3427;
  t3377 = -1.*t1003*t3365;
  t3476 = -1.*t3464*t1503;
  t3477 = t3377 + t3476;
  t3483 = 4.e-6*t3477;
  t3500 = -1.*t867*t3365;
  t3502 = 1.e-6*t3134;
  t3503 = -1.*t3464*t1425;
  t3523 = -0.038749*t3168;
  t3526 = -0.28121*t3206;
  t3549 = t3483 + t3500 + t3502 + t3503 + t3523 + t3526;
  t124 = Cos(var1[4]);
  t175 = Cos(var1[5]);
  t3694 = Sin(var1[5]);
  t3624 = Sin(var1[4]);
  t3737 = -1.*t124*t175*t270;
  t3738 = -1.*t181*t124*t3694;
  t3753 = t3737 + t3738;
  t3766 = t181*t124*t175;
  t3770 = -1.*t124*t270*t3694;
  t3772 = t3766 + t3770;
  t3894 = 4.e-6*t640*t3134;
  t3895 = t1044*t3168;
  t3896 = t517*t3206;
  t3899 = 0. + t3894 + t3895 + t3896;
  t3902 = t3899*t3624;
  t3907 = -1.*t270*t3219;
  t3910 = t181*t3283;
  t3911 = 0. + t3907 + t3910;
  t3918 = t175*t3911;
  t3929 = t181*t3219;
  t3930 = t270*t3283;
  t3931 = 0. + t3929 + t3930;
  t3933 = -1.*t3931*t3694;
  t3949 = 0. + t3918 + t3933;
  t3954 = t124*t3949;
  t3957 = 0. + t3902 + t3954;
  t3784 = t1044*t3624;
  t3795 = -4.e-6*t1044*t3753;
  t3807 = t1578*t3772;
  t3809 = t3784 + t3795 + t3807;
  t3847 = t517*t3624;
  t3850 = 4.e-6*t640*t3753;
  t3851 = -1.*t1044*t3772;
  t3853 = t3847 + t3850 + t3851;
  t3876 = 4.e-6*t640*t3624;
  t3882 = t1327*t3753;
  t3884 = 4.e-6*t1044*t3772;
  t3885 = t3876 + t3882 + t3884;
  t4070 = t175*t2951;
  t4071 = t2911*t3694;
  t4074 = t4070 + t4071;
  t4058 = t175*t2425;
  t4059 = t1687*t3694;
  t4064 = 0. + t4058 + t4059;
  t4093 = t175*t2510;
  t4098 = t2272*t3694;
  t4104 = 0. + t4093 + t4098;
  t4136 = t175*t2272;
  t4142 = -1.*t2510*t3694;
  t4168 = 0. + t4136 + t4142;
  t4117 = t4074*t4104;
  t4126 = t175*t2911;
  t4127 = -1.*t2951*t3694;
  t4134 = t4126 + t4127;
  t4170 = t4134*t4168;
  t4176 = t2963 + t4117 + t4170;
  t4178 = t4064*t4176;
  t4179 = -1.*t4064*t4104;
  t4180 = t175*t1687;
  t4186 = -1.*t2425*t3694;
  t4187 = 0. + t4180 + t4186;
  t4191 = -1.*t4187*t4168;
  t4193 = t2786 + t4179 + t4191;
  t4194 = t4074*t4193;
  t4198 = t4178 + t4194;
  t4208 = Sin(var1[3]);
  t4209 = t175*t3931;
  t4211 = t3911*t3694;
  t4212 = 0. + t4209 + t4211;
  t4213 = t4208*t4212;
  t4218 = Cos(var1[3]);
  t4220 = t124*t3899;
  t4221 = -1.*t3624*t3949;
  t4222 = 0. + t4220 + t4221;
  t4223 = t4218*t4222;
  t4224 = 0. + t4213 + t4223;
  t4231 = t4218*t4212;
  t4241 = -1.*t4208*t4222;
  t4245 = 0. + t4231 + t4241;
  t4297 = t1029*t3624;
  t4304 = t124*t4134;
  t4305 = t4297 + t4304;
  t4283 = t2615*t3624;
  t4291 = t124*t4187;
  t4294 = 0. + t4283 + t4291;
  t4306 = t2784*t3624;
  t4309 = t124*t4168;
  t4312 = 0. + t4306 + t4309;
  t4338 = t124*t2784;
  t4345 = -1.*t3624*t4168;
  t4376 = 0. + t4338 + t4345;
  t4316 = t4305*t4312;
  t4319 = t1029*t124;
  t4320 = -1.*t3624*t4134;
  t4323 = t4319 + t4320;
  t4377 = t4323*t4376;
  t4387 = t4117 + t4316 + t4377;
  t4393 = t4294*t4387;
  t4400 = -1.*t4294*t4312;
  t4410 = t124*t2615;
  t4412 = -1.*t3624*t4187;
  t4424 = 0. + t4410 + t4412;
  t4425 = -1.*t4424*t4376;
  t4427 = t4179 + t4400 + t4425;
  t4430 = t4305*t4427;
  t4431 = t4393 + t4430;
  t4497 = 0.00130540515936178*t656;
  t4501 = -0.2999969999968001*t1131;
  t4516 = t4497 + t4501;
  t4523 = -1.199987999968e-6*t656;
  t4534 = -5.2216206374471e-9*t1131;
  t4537 = -1.26e-8 + t4523 + t4534;
  t4546 = 0.299996999992*t656;
  t4547 = -5.04e-14 + t4546 + t1969;
  t4522 = -4.e-6*t1044*t4516;
  t4545 = t1327*t4537;
  t4554 = 4.e-6*t640*t4547;
  t4555 = t4522 + t4545 + t4554;
  t4558 = t1578*t4516;
  t4560 = 4.e-6*t1044*t4537;
  t4561 = -1.*t1044*t4547;
  t4563 = t4558 + t4560 + t4561;
  t4578 = 0.004352*t656;
  t4581 = t4578 + t1160;
  t4586 = -0.9999910000159999*t656;
  t4587 = -0.00435200000006963*t1131;
  t4589 = t4586 + t4587;
  t4599 = -1.7408e-8*t656;
  t4600 = 3.999964000064e-6*t1131;
  t4616 = t4599 + t4600;
  t4585 = 4.e-6*t640*t4581;
  t4595 = -4.e-6*t1044*t4589;
  t4626 = t1327*t4616;
  t4653 = t4585 + t4595 + t4626;
  t4660 = -1.*t1044*t4581;
  t4662 = t1578*t4589;
  t4663 = 4.e-6*t1044*t4616;
  t4670 = t4660 + t4662 + t4663;
  t4776 = t517*t4581;
  t4779 = t1044*t4589;
  t4783 = 4.e-6*t640*t4616;
  t4784 = t4776 + t4779 + t4783;
  t4556 = -1.*t270*t4555;
  t4569 = t181*t4563;
  t4571 = t4556 + t4569;
  t4574 = t181*t4555;
  t4575 = t270*t4563;
  t4576 = t4574 + t4575;
  t4720 = t1044*t4516;
  t4737 = 4.e-6*t640*t4537;
  t4762 = t517*t4547;
  t4766 = t4720 + t4737 + t4762;
  t4774 = -1.*t4766*t2615;
  t4887 = -3.999964e-6*t656;
  t4890 = t4887 + t1416;
  t4906 = t1482 + t1490;
  t4835 = t1029*t4766;
  t4948 = -1.*t1206*t4516;
  t4949 = -1.*t1425*t4537;
  t4950 = -1.*t1865*t4616;
  t4951 = -1.*t4589*t1977;
  t4955 = -1.*t4547*t1503;
  t4956 = -1.*t4581*t2061;
  t4957 = t4948 + t4949 + t4950 + t4951 + t4955 + t4956;
  t4983 = t867*t4537;
  t4984 = t1003*t4547;
  t4987 = t4983 + t4984;
  t4880 = -4.e-6*t1044*t4581;
  t4905 = t1327*t4890;
  t4907 = 4.e-6*t640*t4906;
  t4913 = t4880 + t4905 + t4907;
  t4918 = t1578*t4581;
  t4919 = 4.e-6*t1044*t4890;
  t4920 = -1.*t1044*t4906;
  t4921 = t4918 + t4919 + t4920;
  t5072 = t181*t4913;
  t5077 = t270*t4921;
  t5078 = t5072 + t5077;
  t5063 = -1.*t270*t4913;
  t5066 = t181*t4921;
  t5068 = t5063 + t5066;
  t5042 = t1044*t4581;
  t5050 = 4.e-6*t640*t4890;
  t5054 = t517*t4906;
  t5057 = t5042 + t5050 + t5054;
  t5071 = t175*t5068;
  t5080 = -1.*t5078*t3694;
  t5082 = t5071 + t5080;
  t5093 = t175*t5078;
  t5096 = t5068*t3694;
  t5097 = t5093 + t5096;
  t5101 = t124*t5057;
  t5103 = -1.*t3624*t5082;
  t5105 = t5101 + t5103;
  t4695 = t181*t4653;
  t4699 = t270*t4670;
  t4700 = t4695 + t4699;
  t4656 = -1.*t270*t4653;
  t4683 = t181*t4670;
  t4689 = t4656 + t4683;
  t4798 = -1.*t4784*t2784;
  t5136 = t175*t4576;
  t5141 = t4571*t3694;
  t5142 = t5136 + t5141;
  t5144 = t175*t4571;
  t5145 = -1.*t4576*t3694;
  t5146 = t5144 + t5145;
  t5166 = t175*t4700;
  t5168 = t4689*t3694;
  t5172 = t5166 + t5168;
  t5143 = t4074*t5142;
  t5185 = t175*t4689;
  t5192 = -1.*t4700*t3694;
  t5195 = t5185 + t5192;
  t5175 = -1.*t5142*t4064;
  t5179 = -1.*t5172*t4104;
  t5215 = t4766*t3624;
  t5218 = t124*t5146;
  t5222 = t5215 + t5218;
  t5231 = t124*t4766;
  t5233 = -1.*t3624*t5146;
  t5236 = t5231 + t5233;
  t5254 = t4784*t3624;
  t5260 = t124*t5195;
  t5263 = t5254 + t5260;
  t5342 = -0.15121*t181;
  t5345 = t5342 + t453 + t2205 + t2253;
  t5352 = 0.15121*t270;
  t5354 = -1.*t181*t2112;
  t5355 = -1.*t270*t2248;
  t5363 = t5342 + t5352 + t5354 + t5355;
  t5466 = -1.*t181*t3219;
  t5467 = -1.*t270*t3283;
  t5468 = t5466 + t5467;
  t5473 = t175*t5468;
  t5474 = t3907 + t3910;
  t5475 = -1.*t5474*t3694;
  t5476 = t5473 + t5475;
  t5480 = t175*t5474;
  t5481 = t5468*t3694;
  t5483 = t5480 + t5481;
  t5419 = -1.*t181*t2879;
  t5424 = -1.*t270*t2890;
  t5438 = t5419 + t5424;
  t5388 = t1547 + t1683;
  t5328 = -1.*t181*t1546;
  t5332 = -1.*t270*t1679;
  t5339 = t5328 + t5332;
  t5560 = t175*t5388;
  t5562 = t5339*t3694;
  t5563 = t5560 + t5562;
  t5514 = t175*t5363;
  t5518 = -1.*t5345*t3694;
  t5520 = t5514 + t5518;
  t5525 = t175*t5345;
  t5528 = t5363*t3694;
  t5532 = t5525 + t5528;
  t5503 = t5438*t3694;
  t5507 = t4126 + t5503;
  t5508 = t5507*t4104;
  t5533 = t4074*t5532;
  t5535 = t175*t5438;
  t5539 = -1.*t2911*t3694;
  t5555 = t5535 + t5539;
  t5566 = -1.*t5563*t4104;
  t5570 = -1.*t4064*t5532;
  t5571 = t175*t5339;
  t5572 = -1.*t5388*t3694;
  t5577 = t5571 + t5572;
  t5644 = -1.*t175*t3931;
  t5646 = -1.*t3911*t3694;
  t5648 = t5644 + t5646;
  t5668 = t3918 + t3933;
  t5709 = -1.*t175*t2510;
  t5713 = -1.*t2272*t3694;
  t5725 = t5709 + t5713;
  t5768 = t4180 + t4186;
  t5733 = t4136 + t4142;
  t5727 = t4134*t4104;
  t5746 = t4074*t5733;
  t5751 = -1.*t175*t2951;
  t5752 = t5751 + t5539;
  t5792 = -1.*t5768*t4104;
  t5798 = -1.*t4064*t5733;
  t5802 = -1.*t175*t2425;
  t5804 = -1.*t1687*t3694;
  t5805 = t5802 + t5804;
  t5905 = -1.*t3899*t3624;
  t5915 = -1.*t124*t3949;
  t5920 = t5905 + t5915;
  t5933 = -1.*t2784*t3624;
  t5934 = -1.*t124*t4168;
  t5939 = t5933 + t5934;
  t5984 = t4410 + t4412;
  t5959 = t4338 + t4345;
  t6038 = -1.000000000016*t1044*t1206;
  t6039 = 4.e-6*t517*t1425;
  t6040 = -1.*t517*t1503;
  t6041 = t6038 + t6039 + t6040;
  t6043 = -4.e-6*t517*t1206;
  t6044 = -1.6e-11*t1044*t1425;
  t6045 = 4.e-6*t1044*t1503;
  t6047 = t6043 + t6044 + t6045;
  t6110 = -0.03874900000062*t517;
  t6111 = 0.281210000008499*t1044;
  t6112 = 4.e-6*t517*t1865;
  t6113 = -1.000000000016*t1044*t1977;
  t6114 = -1.*t517*t2061;
  t6117 = t6110 + t6111 + t6112 + t6113 + t6114;
  t6121 = 1.124840000016e-6*t517;
  t6123 = 1.5499600000248e-7*t1044;
  t6124 = -1.6e-11*t1044*t1865;
  t6125 = -4.e-6*t517*t1977;
  t6126 = 4.e-6*t1044*t2061;
  t6127 = -1.2484e-7 + t6121 + t6123 + t6124 + t6125 + t6126;
  t6222 = 4.e-6*t517*t867;
  t6226 = -1.*t517*t1003;
  t6227 = t6222 + t6226;
  t6243 = -1.6e-11*t867*t1044;
  t6250 = 4.e-6*t1003*t1044;
  t6253 = t6243 + t6250;
  t6119 = t270*t6117;
  t6128 = t181*t6127;
  t6129 = t6119 + t6128;
  t6132 = t181*t6117;
  t6133 = -1.*t270*t6127;
  t6136 = t6132 + t6133;
  t6172 = -0.281210000004*t517;
  t6175 = t517*t1977;
  t6200 = -4.9936e-13 + t6172 + t2211 + t2222 + t6175 + t2229;
  t6148 = t517*t1206;
  t6155 = t6148 + t1617 + t1660;
  t6204 = -1.*t2615*t6200;
  t6275 = t1029*t6200;
  t6348 = 4.e-6*t517*t3134;
  t6349 = -1.000000000016*t1044*t3168;
  t6350 = -1.*t517*t3206;
  t6351 = t6348 + t6349 + t6350;
  t6358 = -1.6e-11*t1044*t3134;
  t6359 = -4.e-6*t517*t3168;
  t6361 = 4.e-6*t1044*t3206;
  t6363 = t6358 + t6359 + t6361;
  t6103 = t270*t6041;
  t6104 = t181*t6047;
  t6107 = t6103 + t6104;
  t6042 = t181*t6041;
  t6049 = -1.*t270*t6047;
  t6056 = t6042 + t6049;
  t6264 = t6227*t270;
  t6265 = t181*t6253;
  t6267 = t6264 + t6265;
  t6238 = t181*t6227;
  t6254 = -1.*t270*t6253;
  t6258 = t6238 + t6254;
  t6272 = t2890*t2784;
  t6419 = t175*t6267;
  t6420 = t6258*t3694;
  t6421 = t6419 + t6420;
  t6165 = -1.*t6155*t2784;
  t6413 = t175*t6107;
  t6415 = t6056*t3694;
  t6416 = t6413 + t6415;
  t6438 = t175*t6136;
  t6439 = -1.*t6129*t3694;
  t6442 = t6438 + t6439;
  t6452 = t175*t6129;
  t6454 = t6136*t3694;
  t6463 = t6452 + t6454;
  t6398 = t270*t6351;
  t6402 = t181*t6363;
  t6405 = t6398 + t6402;
  t6391 = t181*t6351;
  t6393 = -1.*t270*t6363;
  t6394 = t6391 + t6393;
  t6381 = t517*t3168;
  t6389 = t3232 + t6381 + t3274;
  t6397 = t175*t6394;
  t6408 = -1.*t6405*t3694;
  t6409 = t6397 + t6408;
  t6529 = t175*t6405;
  t6530 = t6394*t3694;
  t6546 = t6529 + t6530;
  t6563 = t124*t6389;
  t6585 = -1.*t3624*t6409;
  t6586 = t6563 + t6585;
  t6495 = t175*t6056;
  t6499 = -1.*t6107*t3694;
  t6506 = t6495 + t6499;
  t6425 = t175*t6258;
  t6426 = -1.*t6267*t3694;
  t6428 = t6425 + t6426;
  t6424 = t6421*t4104;
  t6467 = t4074*t6463;
  t6619 = t2890*t3624;
  t6620 = t124*t6428;
  t6621 = t6619 + t6620;
  t6492 = -1.*t6416*t4104;
  t6509 = -1.*t4064*t6463;
  t6614 = t6155*t3624;
  t6615 = t124*t6506;
  t6616 = t6614 + t6615;
  t6630 = t6200*t3624;
  t6657 = t124*t6442;
  t6662 = t6630 + t6657;
  t6669 = t124*t6200;
  t6674 = -1.*t3624*t6442;
  t6678 = t6669 + t6674;
  t6787 = t2272*t3911;
  t6790 = t2510*t3931;
  t6792 = t2784*t3899;
  t6793 = t6787 + t6790 + t6792;
  t6794 = t1029*t6793;
  t6795 = -1.*t2911*t2272;
  t6797 = -1.*t2951*t2510;
  t6800 = -1.*t1029*t2784;
  t6807 = t6795 + t6797 + t6800;
  t6809 = t6807*t3899;
  t6826 = t6794 + t6809;
  t6832 = t2112*t3219;
  t6834 = t3026*t3899;
  t6838 = t2248*t3283;
  t6859 = t6832 + t6834 + t6838;
  t6860 = t1029*t6859;
  t6866 = -0.15121*t1546;
  t6870 = -0.15121*t1679;
  t6871 = -1.*t2879*t2112;
  t6872 = -1.*t1029*t3026;
  t6888 = -1.*t2890*t2248;
  t6889 = t6871 + t6872 + t6888;
  t6890 = t6889*t3899;
  t6891 = t6860 + t6866 + t6870 + t6890;
  t6897 = t3134*t1865;
  t6898 = t1977*t3168;
  t6899 = t2061*t3206;
  t6901 = t6897 + t6898 + t6899;
  t6906 = -1.*t867*t1865;
  t6907 = -1.*t1003*t2061;
  t6910 = t6906 + t6907;
  t6904 = -1.*t1003*t6901;
  t6911 = -1.*t6910*t3206;
  t6913 = t6904 + t6911;
  t6914 = 4.e-6*t6913;
  t6915 = -1.*t867*t6901;
  t6922 = -0.038749*t1206;
  t6924 = -1.*t6910*t3134;
  t6926 = 1.e-6*t1425;
  t6928 = -0.28121*t1503;
  t6929 = t6914 + t6915 + t6922 + t6924 + t6926 + t6928;
  t3621 = t2638 + t2643 + t2654 + t2678;
  t499 = t252 + t453;
  t3683 = t2435 + t453;
  t3721 = t1706 + t1707 + t1745 + t1749;
  t6937 = t175*t4208*t3624;
  t6939 = t4218*t3694;
  t6945 = t6937 + t6939;
  t6955 = t4218*t175;
  t6957 = -1.*t4208*t3624*t3694;
  t6966 = t6955 + t6957;
  t3764 = t2208 + t2211;
  t7011 = t4208*t4064;
  t7016 = t4218*t4424;
  t7020 = 0. + t7011 + t7016;
  t7025 = t4218*t4064;
  t7029 = -1.*t4208*t4424;
  t7041 = 0. + t7025 + t7029;
  t7046 = -1.*t4074*t4104;
  t7056 = -1.*t4134*t4168;
  t7061 = t6800 + t7046 + t7056;
  t7064 = t4212*t7061;
  t7065 = t4104*t4212;
  t7079 = t4168*t3949;
  t7084 = t6792 + t7065 + t7079;
  t7086 = t4074*t7084;
  t7098 = t7064 + t7086;
  t3778 = -0.0398890000006382*t1131;
  t3783 = t1952 + t3778;
  t6978 = -1.*t270*t6945;
  t6979 = t181*t6966;
  t6985 = t6978 + t6979;
  t6995 = t181*t6945;
  t6999 = t270*t6966;
  t7008 = t6995 + t6999;
  t3826 = -0.039889*t730;
  t3828 = -0.503150000008*t1131;
  t3829 = t1997 + t3826 + t2007 + t3828;
  t3865 = 2.552896e-18*t730;
  t3868 = 2.012600000032e-6*t1131;
  t3874 = t1779 + t3865 + t1860 + t3868;
  t7210 = -1.*t4305*t4312;
  t7214 = -1.*t4323*t4376;
  t7215 = t7046 + t7210 + t7214;
  t7216 = t3957*t7215;
  t7220 = t4312*t3957;
  t7222 = t4376*t4222;
  t7223 = t7065 + t7220 + t7222;
  t7226 = t4305*t7223;
  t7234 = t7216 + t7226;
  t7131 = -1.*t124*t1044*t4208;
  t7139 = -4.e-6*t1044*t6985;
  t7145 = t1578*t7008;
  t7150 = t7131 + t7139 + t7145;
  t7152 = -1.*t517*t124*t4208;
  t7155 = 4.e-6*t640*t6985;
  t7156 = -1.*t1044*t7008;
  t7159 = t7152 + t7155 + t7156;
  t7167 = -4.e-6*t640*t124*t4208;
  t7176 = t1327*t6985;
  t7181 = 4.e-6*t1044*t7008;
  t7184 = t7167 + t7176 + t7181;
  t7333 = t4766*t3899;
  t7346 = -1.*t1029*t4766;
  t7422 = t1865*t4890;
  t7423 = t3134*t4537;
  t7424 = t4581*t1977;
  t7425 = t4516*t3168;
  t7426 = t4906*t2061;
  t7427 = t4547*t3206;
  t7432 = t7422 + t7423 + t7424 + t7425 + t7426 + t7427;
  t7436 = -1.*t867*t4537;
  t7437 = -1.*t1003*t4547;
  t7440 = t7436 + t7437;
  t5281 = t124*t4784;
  t5283 = -1.*t3624*t5195;
  t5288 = t5281 + t5283;
  t7331 = t5057*t2784;
  t7499 = -1.*t4074*t5142;
  t5061 = t5057*t3624;
  t5083 = t124*t5082;
  t5086 = t5061 + t5083;
  t7518 = t5097*t4104;
  t7520 = t5142*t4212;
  t7645 = -1.*t5507*t4104;
  t7654 = -1.*t4074*t5532;
  t7664 = t5532*t4212;
  t7666 = t4104*t5483;
  t7812 = -1.*t4134*t4104;
  t7815 = -1.*t4074*t5733;
  t7825 = t5733*t4212;
  t7826 = t4104*t5668;
  t6005 = -1.*t2615*t3624;
  t6006 = -1.*t124*t4187;
  t6007 = t6005 + t6006;
  t5964 = -1.*t1029*t3624;
  t5965 = -1.*t124*t4134;
  t5966 = t5964 + t5965;
  t5928 = t4220 + t4221;
  t7951 = t6200*t3899;
  t7962 = -1.*t1029*t6200;
  t6708 = t124*t6155;
  t6718 = -1.*t3624*t6506;
  t6724 = t6708 + t6718;
  t7960 = -1.*t2890*t2784;
  t7952 = t2784*t6389;
  t6390 = t6389*t3624;
  t6410 = t124*t6409;
  t6411 = t6390 + t6410;
  t8036 = -1.*t6421*t4104;
  t8039 = -1.*t4074*t6463;
  t6624 = t124*t2890;
  t6625 = -1.*t3624*t6428;
  t6626 = t6624 + t6625;
  t8043 = t6463*t4212;
  t8050 = t4104*t6546;
  t8114 = -1.*t2272*t3911;
  t8116 = -1.*t2510*t3931;
  t8118 = -1.*t2784*t3899;
  t8119 = t8114 + t8116 + t8118;
  t8121 = t8119*t2615;
  t8122 = t1687*t2272;
  t8124 = t2425*t2510;
  t8125 = t2615*t2784;
  t8126 = t8122 + t8124 + t8125;
  t8130 = t8126*t3899;
  t8132 = t8121 + t8130;
  t8138 = -0.15121*t2879;
  t8139 = -0.15121*t2890;
  t8141 = -1.*t2112*t3219;
  t8143 = -1.*t3026*t3899;
  t8144 = -1.*t2248*t3283;
  t8145 = t8141 + t8143 + t8144;
  t8148 = t8145*t2615;
  t8150 = t1546*t2112;
  t8151 = t2615*t3026;
  t8152 = t1679*t2248;
  t8153 = t8150 + t8151 + t8152;
  t8155 = t8153*t3899;
  t8156 = t8138 + t8139 + t8148 + t8155;
  t8170 = t1865*t1425;
  t8173 = t1206*t1977;
  t8175 = t1503*t2061;
  t8177 = t8170 + t8173 + t8175;
  t8161 = -1.*t3134*t1865;
  t8162 = -1.*t1977*t3168;
  t8163 = -1.*t2061*t3206;
  t8164 = t8161 + t8162 + t8163;
  t8159 = 1.e-6*t867;
  t8160 = -0.28121*t1003;
  t8168 = -1.*t8164*t1503;
  t8178 = -1.*t8177*t3206;
  t8182 = t8168 + t8178;
  t8183 = 4.e-6*t8182;
  t8185 = -1.*t8177*t3134;
  t8186 = -1.*t8164*t1425;
  t8187 = t8159 + t8160 + t8183 + t8185 + t8186;
  t8191 = -1.*t4218*t175*t3624;
  t8192 = t4208*t3694;
  t8194 = t8191 + t8192;
  t8197 = t175*t4208;
  t8198 = t4218*t3624*t3694;
  t8202 = t8197 + t8198;
  t8224 = t4208*t4074;
  t8226 = t4218*t4323;
  t8228 = t8224 + t8226;
  t8232 = t4218*t4074;
  t8233 = -1.*t4208*t4323;
  t8234 = t8232 + t8233;
  t8238 = t4064*t4104;
  t8239 = t4187*t4168;
  t8240 = t8125 + t8238 + t8239;
  t8241 = t4212*t8240;
  t8242 = -1.*t4104*t4212;
  t8245 = -1.*t4168*t3949;
  t8246 = t8118 + t8242 + t8245;
  t8248 = t4064*t8246;
  t8249 = t8241 + t8248;
  t8208 = -1.*t270*t8194;
  t8209 = t181*t8202;
  t8214 = t8208 + t8209;
  t8217 = t181*t8194;
  t8220 = t270*t8202;
  t8221 = t8217 + t8220;
  t8282 = t4294*t4312;
  t8283 = t4424*t4376;
  t8285 = t8238 + t8282 + t8283;
  t8287 = t3957*t8285;
  t8288 = -1.*t4312*t3957;
  t8291 = -1.*t4376*t4222;
  t8292 = t8242 + t8288 + t8291;
  t8294 = t4294*t8292;
  t8296 = t8287 + t8294;
  t8252 = t4218*t124*t1044;
  t8253 = -4.e-6*t1044*t8214;
  t8254 = t1578*t8221;
  t8255 = t8252 + t8253 + t8254;
  t8257 = t517*t4218*t124;
  t8259 = 4.e-6*t640*t8214;
  t8260 = -1.*t1044*t8221;
  t8261 = t8257 + t8259 + t8260;
  t8264 = 4.e-6*t640*t4218*t124;
  t8265 = t1327*t8214;
  t8266 = 4.e-6*t1044*t8221;
  t8267 = t8264 + t8265 + t8266;
  t8364 = t5563*t4104;
  t8366 = t4064*t5532;
  t8379 = -1.*t5532*t4212;
  t8381 = -1.*t4104*t5483;
  t8445 = t5768*t4104;
  t8447 = t4064*t5733;
  t8456 = -1.*t5733*t4212;
  t8470 = -1.*t4104*t5668;
  t8526 = -1.*t4766*t3899;
  t8534 = t4766*t2615;
  t8593 = t1206*t4516;
  t8594 = t1425*t4537;
  t8596 = t1865*t4616;
  t8598 = t4589*t1977;
  t8599 = t4547*t1503;
  t8601 = t4581*t2061;
  t8602 = t8593 + t8594 + t8596 + t8598 + t8599 + t8601;
  t8577 = -1.*t1865*t4890;
  t8579 = -1.*t3134*t4537;
  t8580 = -1.*t4581*t1977;
  t8582 = -1.*t4516*t3168;
  t8584 = -1.*t4906*t2061;
  t8585 = -1.*t4547*t3206;
  t8588 = t8577 + t8579 + t8580 + t8582 + t8584 + t8585;
  t8535 = t4784*t2784;
  t8525 = -1.*t5057*t2784;
  t8619 = t5142*t4064;
  t8621 = t5172*t4104;
  t8632 = -1.*t5097*t4104;
  t8634 = -1.*t5142*t4212;
  t8700 = -1.*t6200*t3899;
  t8716 = t2615*t6200;
  t8715 = t6155*t2784;
  t8701 = -1.*t2784*t6389;
  t8776 = t6416*t4104;
  t8783 = t4064*t6463;
  t8787 = -1.*t6463*t4212;
  t8792 = -1.*t4104*t6546;
  p_output1[0]=t3621*t3624 - 1.*t124*t3683*t3694 + t3721*t3753 + t3764*t3772 + t3783*t3809 + t3829*t3853 + t3874*t3885 + 0.803147*(t1074*t3809 + t1131*t3853 - 4.e-6*t1131*t3885) + t124*t175*t499 - 0.14871*(4.e-6*t1131*t3809 + t1800*t3885 + 4.e-6*t3853*t730) - 0.041195*(-1.*t1131*t3809 + t3853*t656 + 4.e-6*t3885*t730) + var1[0] + t3957*var2[0] + t4245*var2[1] + t4224*var2[2] + t4431*var2[3] + ((-1.*t4208*t4212 - 1.*t4218*t4222)*var2[1] + (t4231 + t4241)*var2[2])*var2[3] + t4198*var2[4] + (t5928*var2[0] - 1.*t4208*t5920*var2[1] + t4218*t5920*var2[2] + (t4323*t4427 + t4294*(t4312*t4323 + t4323*t5939 + t4305*t5959 + t4376*t5966) + t4387*t5984 + t4305*(-1.*t4424*t5939 - 1.*t4294*t5959 - 1.*t4312*t5984 - 1.*t4376*t6007))*var2[3])*var2[4] + t2985*var2[5] + (t124*t5648*var2[0] + (t3624*t4208*t5648 + t4218*t5668)*var2[1] + (-1.*t3624*t4218*t5648 + t4208*t5668)*var2[2] + (t124*t4427*t5752 + t4294*(t124*t4305*t5725 - 1.*t3624*t4323*t5725 + t5727 + t5746 + t124*t4312*t5752 - 1.*t3624*t4376*t5752) + t124*t4387*t5805 + t4305*(-1.*t124*t4294*t5725 + t3624*t4424*t5725 + t5792 + t5798 - 1.*t124*t4312*t5805 + t3624*t4376*t5805))*var2[3] + (t4134*t4193 + t4064*(t4134*t5725 + t5727 + t5746 + t4168*t5752) + t4176*t5768 + t4074*(-1.*t4187*t5725 + t5792 + t5798 - 1.*t4168*t5805))*var2[4])*var2[5] + t3304*var2[9] + (t124*t5476*var2[0] + (t3624*t4208*t5476 + t4218*t5483)*var2[1] + (-1.*t3624*t4218*t5476 + t4208*t5483)*var2[2] + (t124*t4427*t5555 + t4294*(t5508 + t124*t4305*t5520 - 1.*t3624*t4323*t5520 + t5533 + t124*t4312*t5555 - 1.*t3624*t4376*t5555) + t124*t4387*t5577 + t4305*(-1.*t124*t4294*t5520 + t3624*t4424*t5520 + t5566 + t5570 - 1.*t124*t4312*t5577 + t3624*t4376*t5577))*var2[3] + (t4193*t5507 + t4064*(t5508 + t4134*t5520 + t5533 + t4168*t5555) + t4176*t5563 + t4074*(-1.*t4187*t5520 + t5566 + t5570 - 1.*t4168*t5577))*var2[4] + (t1029*(-1.*t2272*t5339 - 1.*t2425*t5345 - 1.*t1687*t5363 - 1.*t2510*t5388) + t2615*(t2510*t2911 + t2951*t5345 + t2911*t5363 + t2272*t5438))*var2[5])*var2[9] + t3549*var2[10] + (t6411*var2[0] + (t4218*t6546 - 1.*t4208*t6586)*var2[1] + (t4208*t6546 + t4218*t6586)*var2[2] + (t4387*t6616 + t4427*t6621 + t4294*(t6424 + t6467 + t4312*t6621 + t4376*t6626 + t4305*t6662 + t4323*t6678) + t4305*(t6492 + t6509 - 1.*t4312*t6616 - 1.*t4294*t6662 - 1.*t4424*t6678 - 1.*t4376*t6724))*var2[3] + (t4176*t6416 + t4193*t6421 + t4064*(t6272 + t6275 + t6424 + t4168*t6428 + t4134*t6442 + t6467) + t4074*(t6165 + t6204 - 1.*t4187*t6442 + t6492 - 1.*t4168*t6506 + t6509))*var2[4] + (t2800*t2890 + t2971*t6155 + t1029*(-1.*t2272*t6056 - 1.*t2510*t6107 - 1.*t2425*t6129 - 1.*t1687*t6136 + t6165 + t6204) + t2615*(t2951*t6129 + t2911*t6136 + t2272*t6258 + t2510*t6267 + t6272 + t6275))*var2[5] + (t2890*t3057 + t3092*t6155 + t1029*(-1.*t2248*t6041 - 1.*t2112*t6047 - 1.*t1679*t6117 - 1.*t1546*t6127 - 1.*t3026*t6155 + t6204) + t2615*(t2890*t3026 + t2890*t6117 + t2879*t6127 + t2248*t6227 + t2112*t6253 + t6275) - 0.15121*t6351 - 0.15121*t6363)*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t5086*var2[0] + (t4218*t5097 - 1.*t4208*t5105)*var2[1] + (t4208*t5097 + t4218*t5105)*var2[2] + (t4294*(t5143 + t4305*t5222 + t4323*t5236) + t4387*t5263 + t4305*(t5175 + t5179 - 1.*t4294*t5222 - 1.*t4424*t5236 - 1.*t4312*t5263 - 1.*t4376*t5288))*var2[3] + (t4064*(t4835 + t5143 + t4134*t5146) + t4176*t5172 + t4074*(t4774 + t4798 - 1.*t4187*t5146 + t5175 + t5179 - 1.*t4168*t5195))*var2[4] + (t2971*t4784 + t1029*(-1.*t1687*t4571 - 1.*t2425*t4576 - 1.*t2272*t4689 - 1.*t2510*t4700 + t4774 + t4798) + t2615*(t2911*t4571 + t2951*t4576 + t4835))*var2[5] + (t3092*t4784 + t1029*(-1.*t1546*t4555 - 1.*t1679*t4563 - 1.*t2112*t4653 - 1.*t2248*t4670 + t4774 - 1.*t3026*t4784) + t2615*(t2879*t4555 + t2890*t4563 + t4835) - 0.15121*t4913 - 0.15121*t4921)*var2[9] + (-0.038749*t4581 - 1.*t3464*t4616 + 1.e-6*t4890 - 0.28121*t4906 - 1.*t1425*t4987 + 4.e-6*(-1.*t3464*t4581 - 1.*t1003*t4957 - 1.*t1503*t4987) - 1.*t4957*t867)*var2[10])*var2[11] + t3957*var3[0] + t4245*var3[1] + t4224*var3[2] + t4431*var3[3] + t4198*var3[4] + t2985*var3[5] + t3304*var3[9] + t3549*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t124*t3621*t4208 + t499*t6945 + t3683*t6966 + t3721*t6985 + t3764*t7008 + t3783*t7150 + t3829*t7159 + t3874*t7184 + 0.803147*(t1074*t7150 + t1131*t7159 - 4.e-6*t1131*t7184) - 0.14871*(4.e-6*t1131*t7150 + t1800*t7184 + 4.e-6*t7159*t730) - 0.041195*(-1.*t1131*t7150 + t656*t7159 + 4.e-6*t7184*t730) + var1[1] + t4294*var2[0] + t7041*var2[1] + t7020*var2[2] + t7234*var2[3] + ((-1.*t4064*t4208 - 1.*t4218*t4424)*var2[1] + (t7025 + t7029)*var2[2])*var2[3] + t7098*var2[4] + (t5984*var2[0] - 1.*t4208*t6007*var2[1] + t4218*t6007*var2[2] + (t4305*(t4376*t5920 + t4312*t5928 + t4222*t5939 + t3957*t5959) + t3957*(-1.*t4312*t4323 - 1.*t4323*t5939 - 1.*t4305*t5959 - 1.*t4376*t5966) + t5928*t7215 + t4323*t7223)*var2[3])*var2[4] + t6826*var2[5] + (t124*t5805*var2[0] + (t4218*t5768 + t3624*t4208*t5805)*var2[1] + (t4208*t5768 - 1.*t3624*t4218*t5805)*var2[2] + (t124*t5648*t7215 + t124*t5752*t7223 + t3957*(-1.*t124*t4305*t5725 + t3624*t4323*t5725 - 1.*t124*t4312*t5752 + t3624*t4376*t5752 + t7812 + t7815) + t4305*(t124*t4312*t5648 - 1.*t3624*t4376*t5648 + t124*t3957*t5725 - 1.*t3624*t4222*t5725 + t7825 + t7826))*var2[3] + (t5668*t7061 + t4134*t7084 + t4212*(-1.*t4134*t5725 - 1.*t4168*t5752 + t7812 + t7815) + t4074*(t4168*t5648 + t3949*t5725 + t7825 + t7826))*var2[4])*var2[5] + t6891*var2[9] + (t124*t5577*var2[0] + (t4218*t5563 + t3624*t4208*t5577)*var2[1] + (t4208*t5563 - 1.*t3624*t4218*t5577)*var2[2] + (t124*t5476*t7215 + t124*t5555*t7223 + t3957*(-1.*t124*t4305*t5520 + t3624*t4323*t5520 - 1.*t124*t4312*t5555 + t3624*t4376*t5555 + t7645 + t7654) + t4305*(t124*t4312*t5476 - 1.*t3624*t4376*t5476 + t124*t3957*t5520 - 1.*t3624*t4222*t5520 + t7664 + t7666))*var2[3] + (t5483*t7061 + t5507*t7084 + t4212*(-1.*t4134*t5520 - 1.*t4168*t5555 + t7645 + t7654) + t4074*(t4168*t5476 + t3949*t5520 + t7664 + t7666))*var2[4] + (t3899*(-1.*t2510*t2911 - 1.*t2951*t5345 - 1.*t2911*t5363 - 1.*t2272*t5438) + t1029*(t3931*t5345 + t3911*t5363 + t2272*t5468 + t2510*t5474))*var2[5])*var2[9] + t6929*var2[10] + (t6616*var2[0] + (t4218*t6416 - 1.*t4208*t6724)*var2[1] + (t4208*t6416 + t4218*t6724)*var2[2] + (t6411*t7215 + t6621*t7223 + t3957*(-1.*t4312*t6621 - 1.*t4376*t6626 - 1.*t4305*t6662 - 1.*t4323*t6678 + t8036 + t8039) + t4305*(t4312*t6411 + t4376*t6586 + t3957*t6662 + t4222*t6678 + t8043 + t8050))*var2[3] + (t6546*t7061 + t6421*t7084 + t4212*(-1.*t4168*t6428 - 1.*t4134*t6442 + t7960 + t7962 + t8036 + t8039) + t4074*(t4168*t6409 + t3949*t6442 + t7951 + t7952 + t8043 + t8050))*var2[4] + (t2890*t6793 + t6389*t6807 + t1029*(t3931*t6129 + t3911*t6136 + t2272*t6394 + t2510*t6405 + t7951 + t7952) + t3899*(-1.*t2951*t6129 - 1.*t2911*t6136 - 1.*t2272*t6258 - 1.*t2510*t6267 + t7960 + t7962))*var2[5] + (-0.15121*t6041 - 0.15121*t6047 + t2890*t6859 + t6389*t6889 + t1029*(t3283*t6117 + t3219*t6127 + t2248*t6351 + t2112*t6363 + t3026*t6389 + t7951) + t3899*(-1.*t2890*t3026 - 1.*t2890*t6117 - 1.*t2879*t6127 - 1.*t2248*t6227 - 1.*t2112*t6253 + t7962))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5263*var2[0] + (t4218*t5172 - 1.*t4208*t5288)*var2[1] + (t4208*t5172 + t4218*t5288)*var2[2] + (t5086*t7215 + t3957*(-1.*t4305*t5222 - 1.*t4323*t5236 + t7499) + t4305*(t4312*t5086 + t4376*t5105 + t3957*t5222 + t4222*t5236 + t7518 + t7520))*var2[3] + (t5097*t7061 + t4212*(-1.*t4134*t5146 + t7346 + t7499) + t4074*(t4168*t5082 + t3949*t5146 + t7331 + t7333 + t7518 + t7520))*var2[4] + (t5057*t6807 + t1029*(t3911*t4571 + t3931*t4576 + t2272*t5068 + t2510*t5078 + t7331 + t7333) + t3899*(-1.*t2911*t4571 - 1.*t2951*t4576 + t7346))*var2[5] + (-0.15121*t4653 - 0.15121*t4670 + t5057*t6889 + t1029*(t3219*t4555 + t3283*t4563 + t2112*t4913 + t2248*t4921 + t3026*t5057 + t7333) + t3899*(-1.*t2879*t4555 - 1.*t2890*t4563 + t7346))*var2[9] + (-0.28121*t4581 - 0.038749*t4589 + 1.e-6*t4616 - 1.*t4890*t6910 - 1.*t3134*t7440 + 4.e-6*(-1.*t4906*t6910 - 1.*t1003*t7432 - 1.*t3206*t7440) - 1.*t7432*t867)*var2[10])*var2[11] + t4294*var3[0] + t7041*var3[1] + t7020*var3[2] + t7234*var3[3] + t7098*var3[4] + t6826*var3[5] + t6891*var3[9] + t6929*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t124*t3621*t4218 + t499*t8194 + t3683*t8202 + t3721*t8214 + t3764*t8221 + t3783*t8255 + t3829*t8261 + t3874*t8267 + 0.803147*(t1074*t8255 + t1131*t8261 - 4.e-6*t1131*t8267) - 0.14871*(4.e-6*t1131*t8255 + 4.e-6*t730*t8261 + t1800*t8267) - 0.041195*(-1.*t1131*t8255 + t656*t8261 + 4.e-6*t730*t8267) + var1[2] + t4305*var2[0] + t8234*var2[1] + t8228*var2[2] + t8296*var2[3] + ((-1.*t4074*t4208 - 1.*t4218*t4323)*var2[1] + t8234*var2[2])*var2[3] + t8249*var2[4] + (t4323*var2[0] - 1.*t4208*t5966*var2[1] + t4218*t5966*var2[2] + (t4294*(-1.*t4376*t5920 - 1.*t4312*t5928 - 1.*t4222*t5939 - 1.*t3957*t5959) + t3957*(t4424*t5939 + t4294*t5959 + t4312*t5984 + t4376*t6007) + t5928*t8285 + t5984*t8292)*var2[3])*var2[4] + t8132*var2[5] + (t124*t5752*var2[0] + (t4134*t4218 + t3624*t4208*t5752)*var2[1] + (t4134*t4208 - 1.*t3624*t4218*t5752)*var2[2] + (t124*t5648*t8285 + t124*t5805*t8292 + t3957*(t124*t4294*t5725 - 1.*t3624*t4424*t5725 + t124*t4312*t5805 - 1.*t3624*t4376*t5805 + t8445 + t8447) + t4294*(-1.*t124*t4312*t5648 + t3624*t4376*t5648 - 1.*t124*t3957*t5725 + t3624*t4222*t5725 + t8456 + t8470))*var2[3] + (t5668*t8240 + t5768*t8246 + t4212*(t4187*t5725 + t4168*t5805 + t8445 + t8447) + t4064*(-1.*t4168*t5648 - 1.*t3949*t5725 + t8456 + t8470))*var2[4])*var2[5] + t8156*var2[9] + (t124*t5555*var2[0] + (t4218*t5507 + t3624*t4208*t5555)*var2[1] + (t4208*t5507 - 1.*t3624*t4218*t5555)*var2[2] + (t124*t5476*t8285 + t124*t5577*t8292 + t3957*(t124*t4294*t5520 - 1.*t3624*t4424*t5520 + t124*t4312*t5577 - 1.*t3624*t4376*t5577 + t8364 + t8366) + t4294*(-1.*t124*t4312*t5476 + t3624*t4376*t5476 - 1.*t124*t3957*t5520 + t3624*t4222*t5520 + t8379 + t8381))*var2[3] + (t5483*t8240 + t5563*t8246 + t4212*(t4187*t5520 + t4168*t5577 + t8364 + t8366) + t4064*(-1.*t4168*t5476 - 1.*t3949*t5520 + t8379 + t8381))*var2[4] + (t3899*(t2272*t5339 + t2425*t5345 + t1687*t5363 + t2510*t5388) + t2615*(-1.*t3931*t5345 - 1.*t3911*t5363 - 1.*t2272*t5468 - 1.*t2510*t5474))*var2[5])*var2[9] + t8187*var2[10] + (t6621*var2[0] + (t4218*t6421 - 1.*t4208*t6626)*var2[1] + (t4208*t6421 + t4218*t6626)*var2[2] + (t6411*t8285 + t6616*t8292 + t3957*(t4312*t6616 + t4294*t6662 + t4424*t6678 + t4376*t6724 + t8776 + t8783) + t4294*(-1.*t4312*t6411 - 1.*t4376*t6586 - 1.*t3957*t6662 - 1.*t4222*t6678 + t8787 + t8792))*var2[3] + (t6546*t8240 + t6416*t8246 + t4212*(t4187*t6442 + t4168*t6506 + t8715 + t8716 + t8776 + t8783) + t4064*(-1.*t4168*t6409 - 1.*t3949*t6442 + t8700 + t8701 + t8787 + t8792))*var2[4] + (t6155*t8119 + t6389*t8126 + t2615*(-1.*t3931*t6129 - 1.*t3911*t6136 - 1.*t2272*t6394 - 1.*t2510*t6405 + t8700 + t8701) + t3899*(t2272*t6056 + t2510*t6107 + t2425*t6129 + t1687*t6136 + t8715 + t8716))*var2[5] + (-0.15121*t6227 - 0.15121*t6253 + t6155*t8145 + t6389*t8153 + t2615*(-1.*t3283*t6117 - 1.*t3219*t6127 - 1.*t2248*t6351 - 1.*t2112*t6363 - 1.*t3026*t6389 + t8700) + t3899*(t2248*t6041 + t2112*t6047 + t1679*t6117 + t1546*t6127 + t3026*t6155 + t8716))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t5086*t8285 + t5263*t8292 + t3957*(t4294*t5222 + t4424*t5236 + t4312*t5263 + t4376*t5288 + t8619 + t8621) + t4294*(-1.*t4312*t5086 - 1.*t4376*t5105 - 1.*t3957*t5222 - 1.*t4222*t5236 + t8632 + t8634))*var2[3] + (t5097*t8240 + t5172*t8246 + t4212*(t4187*t5146 + t4168*t5195 + t8534 + t8535 + t8619 + t8621) + t4064*(-1.*t4168*t5082 - 1.*t3949*t5146 + t8525 + t8526 + t8632 + t8634))*var2[4] + (t4784*t8119 + t5057*t8126 + t2615*(-1.*t3911*t4571 - 1.*t3931*t4576 - 1.*t2272*t5068 - 1.*t2510*t5078 + t8525 + t8526) + t3899*(t1687*t4571 + t2425*t4576 + t2272*t4689 + t2510*t4700 + t8534 + t8535))*var2[5] + (t4784*t8145 + t5057*t8153 + t2615*(-1.*t3219*t4555 - 1.*t3283*t4563 - 1.*t2112*t4913 - 1.*t2248*t4921 - 1.*t3026*t5057 + t8526) + t3899*(t1546*t4555 + t1679*t4563 + t2112*t4653 + t2248*t4670 + t3026*t4784 + t8534))*var2[9] + (-1.*t4616*t8164 - 1.*t4890*t8177 - 1.*t1425*t8588 - 1.*t3134*t8602 + 4.e-6*(-1.*t4581*t8164 - 1.*t4906*t8177 - 1.*t1503*t8588 - 1.*t3206*t8602))*var2[10])*var2[11] + t4305*var3[0] + t8234*var3[1] + t8228*var3[2] + t8296*var3[3] + t8249*var3[4] + t8132*var3[5] + t8156*var3[9] + t8187*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_ParallelStance.hh"

namespace ParallelStance
{

void ddh_FrFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
