/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:27:09 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t85;
  double t88;
  double t90;
  double t73;
  double t75;
  double t78;
  double t98;
  double t100;
  double t81;
  double t93;
  double t95;
  double t103;
  double t105;
  double t108;
  double t80;
  double t118;
  double t120;
  double t123;
  double t125;
  double t128;
  double t143;
  double t145;
  double t148;
  double t150;
  double t153;
  double t155;
  double t158;
  double t167;
  double t82;
  double t83;
  double t110;
  double t113;
  double t115;
  double t130;
  double t133;
  double t135;
  double t138;
  double t140;
  double t160;
  double t163;
  double t66;
  double t168;
  double t170;
  double t171;
  double t172;
  double t173;
  double t174;
  double t177;
  double t178;
  double t181;
  double t182;
  double t65;
  double t190;
  double t193;
  double t194;
  double t164;
  double t185;
  double t186;
  double t197;
  double t205;
  double t189;
  double t198;
  double t201;
  double t10;
  double t206;
  double t209;
  double t210;
  double t213;
  double t214;
  double t217;
  double t218;
  double t221;
  double t222;
  double t224;
  double t225;
  double t226;
  double t229;
  double t230;
  double t231;
  double t233;
  double t234;
  double t237;
  double t720;
  double t781;
  double t791;
  double t951;
  double t988;
  double t1030;
  double t1055;
  double t1094;
  double t1098;
  double t1102;
  double t1166;
  double t1170;
  double t1289;
  double t1302;
  double t1359;
  double t1420;
  double t1442;
  double t1504;
  double t1547;
  double t1568;
  double t1821;
  double t1656;
  double t1659;
  double t1697;
  double t1709;
  double t1724;
  double t1745;
  double t1771;
  double t1786;
  double t1796;
  double t1820;
  double t1827;
  double t1834;
  double t1835;
  double t1857;
  double t1897;
  double t1903;
  double t1905;
  double t1916;
  double t1920;
  double t1933;
  double t1967;
  double t1969;
  double t1970;
  double t1976;
  double t1977;
  double t1979;
  double t1984;
  double t2058;
  double t2075;
  double t2078;
  double t2097;
  double t2101;
  double t2105;
  double t2107;
  double t2113;
  double t2114;
  double t2117;
  double t2119;
  double t2121;
  double t2130;
  double t2135;
  double t2137;
  double t2146;
  double t2149;
  double t2158;
  double t2160;
  double t2162;
  double t2172;
  double t2175;
  double t2208;
  double t2210;
  double t2213;
  double t2217;
  double t2221;
  double t2225;
  double t2229;
  double t2230;
  double t2233;
  double t2234;
  double t2045;
  double t2356;
  double t2288;
  double t2294;
  double t2317;
  double t2338;
  double t2353;
  double t2354;
  double t2355;
  double t2359;
  double t2361;
  double t2371;
  double t2373;
  double t2375;
  double t2379;
  double t2381;
  double t2384;
  double t2385;
  double t2389;
  double t2410;
  double t2416;
  double t2428;
  double t2446;
  double t2449;
  double t2456;
  double t1772;
  double t1841;
  double t1922;
  double t1923;
  double t1929;
  double t1973;
  double t1988;
  double t1993;
  double t2002;
  double t2003;
  double t2004;
  double t2012;
  double t2015;
  double t2018;
  double t2020;
  double t2022;
  double t2030;
  double t2032;
  double t2052;
  double t2053;
  double t2064;
  double t2067;
  double t2120;
  double t2200;
  double t2240;
  double t2264;
  double t2295;
  double t2380;
  double t2476;
  double t2507;
  double t2510;
  double t2526;
  double t2528;
  double t2571;
  double t2576;
  double t2589;
  double t2591;
  double t2706;
  double t2715;
  double t2727;
  double t1033;
  double t1101;
  double t1224;
  double t1239;
  double t1422;
  double t1572;
  double t1585;
  double t1590;
  double t1614;
  double t1617;
  double t1618;
  double t1620;
  double t1629;
  double t2755;
  double t2766;
  double t2775;
  double t2622;
  double t2627;
  double t2632;
  double t2832;
  double t2834;
  double t2835;
  double t2287;
  double t2594;
  double t2601;
  double t1274;
  double t1640;
  double t1645;
  double t2851;
  double t2858;
  double t2860;
  double t3003;
  double t3005;
  double t3008;
  double t2961;
  double t2963;
  double t2964;
  double t2836;
  double t2839;
  double t2846;
  double t2863;
  double t3128;
  double t3129;
  double t3130;
  double t2969;
  double t3127;
  double t3133;
  double t3109;
  double t3110;
  double t3113;
  double t3179;
  double t3185;
  double t3159;
  double t3170;
  double t3176;
  double t2877;
  double t2886;
  double t2904;
  double t2970;
  double t2971;
  double t2974;
  double t3289;
  double t3292;
  double t3295;
  double t3301;
  double t3305;
  double t3331;
  double t3392;
  double t3407;
  double t3411;
  double t3412;
  double t3429;
  double t3483;
  double t3488;
  double t3352;
  double t3353;
  double t3356;
  double t3140;
  double t3142;
  double t3145;
  double t3316;
  double t3321;
  double t3326;
  double t3200;
  double t3207;
  double t3213;
  double t3535;
  double t3537;
  double t3542;
  double t3546;
  double t3549;
  double t3530;
  double t3533;
  double t3584;
  double t3599;
  double t3607;
  double t3555;
  double t3570;
  double t3563;
  double t3565;
  double t3627;
  double t3642;
  double t3631;
  double t3632;
  double t3825;
  double t3857;
  double t3860;
  double t3862;
  double t3794;
  double t3798;
  double t3829;
  double t3870;
  double t3873;
  double t3874;
  double t3875;
  double t3780;
  double t3784;
  double t3748;
  double t3753;
  double t4027;
  double t3853;
  double t3861;
  double t3864;
  double t3865;
  double t3946;
  double t3948;
  double t3952;
  double t3953;
  double t3960;
  double t3967;
  double t3972;
  double t3974;
  double t3978;
  double t4028;
  double t4036;
  double t4039;
  double t4040;
  double t4045;
  double t4046;
  double t4047;
  double t4048;
  double t4050;
  double t4055;
  double t4075;
  double t4112;
  double t4115;
  double t4118;
  double t4120;
  double t4125;
  double t4131;
  double t4140;
  double t3937;
  double t4053;
  double t3983;
  double t3988;
  double t3995;
  double t4004;
  double t3896;
  double t3901;
  double t3902;
  double t3918;
  double t4174;
  double t4206;
  double t4197;
  double t4199;
  double t4200;
  double t4202;
  double t4144;
  double t4145;
  double t4146;
  double t4147;
  double t4293;
  double t4296;
  double t4299;
  double t4302;
  double t4303;
  double t4310;
  double t3759;
  double t3772;
  double t3786;
  double t3788;
  double t3793;
  double t3823;
  double t3837;
  double t3841;
  double t4406;
  double t4414;
  double t4415;
  double t4400;
  double t4401;
  double t4402;
  double t4387;
  double t4388;
  double t4394;
  double t4395;
  double t4403;
  double t4417;
  double t4419;
  double t4450;
  double t4451;
  double t4454;
  double t4459;
  double t4460;
  double t4463;
  double t4323;
  double t4324;
  double t4326;
  double t4344;
  double t4352;
  double t4353;
  double t4256;
  double t4257;
  double t4264;
  double t4274;
  double t4277;
  double t4287;
  double t4500;
  double t4505;
  double t4511;
  double t4491;
  double t4492;
  double t4493;
  double t4529;
  double t4532;
  double t4533;
  double t4538;
  double t4551;
  double t4566;
  double t4579;
  double t4586;
  double t4591;
  double t4516;
  double t4519;
  double t4520;
  double t4528;
  double t4536;
  double t4683;
  double t4687;
  double t4694;
  double t4602;
  double t4603;
  double t4644;
  double t4654;
  double t4659;
  double t4733;
  double t4738;
  double t4743;
  double t4749;
  double t4750;
  double t4751;
  double t4855;
  double t4819;
  double t4822;
  double t4823;
  double t4834;
  double t4836;
  double t4858;
  double t4870;
  double t4873;
  double t4874;
  double t4882;
  double t4884;
  double t4917;
  double t4969;
  double t4910;
  double t4915;
  double t4916;
  double t4924;
  double t4927;
  double t4929;
  double t4931;
  double t4934;
  double t4943;
  double t4945;
  double t4946;
  double t4960;
  double t4961;
  double t4962;
  double t4970;
  double t4972;
  double t4976;
  double t4978;
  double t4979;
  double t4983;
  double t4992;
  double t4995;
  double t5001;
  double t5007;
  double t5009;
  double t5015;
  double t5016;
  double t5017;
  double t5018;
  double t5097;
  double t5099;
  double t5101;
  double t5104;
  double t5123;
  double t5126;
  double t5130;
  double t5145;
  double t5159;
  double t5160;
  double t4948;
  double t4985;
  double t5020;
  double t5026;
  double t5035;
  double t5036;
  double t5040;
  double t5046;
  double t5072;
  double t5074;
  double t5080;
  double t5085;
  double t5241;
  double t5242;
  double t5243;
  double t5245;
  double t5250;
  double t5255;
  double t5257;
  double t5274;
  double t5280;
  double t5281;
  double t5284;
  double t3866;
  double t3867;
  double t3868;
  double t5176;
  double t5177;
  double t5182;
  double t5184;
  double t3876;
  double t3879;
  double t3889;
  double t5337;
  double t5340;
  double t5341;
  double t5343;
  double t5344;
  double t5356;
  double t5358;
  double t5363;
  double t5364;
  double t5366;
  double t5367;
  double t5370;
  double t5381;
  double t5382;
  double t5385;
  double t5387;
  double t5388;
  double t5389;
  double t5394;
  double t5395;
  double t5397;
  double t5400;
  double t5050;
  double t5191;
  double t5197;
  double t5198;
  double t5206;
  double t5208;
  double t5119;
  double t5143;
  double t5161;
  double t5169;
  double t5230;
  double t5285;
  double t5460;
  double t5463;
  double t5466;
  double t5471;
  double t5472;
  double t5474;
  double t5244;
  double t5252;
  double t5262;
  double t5265;
  double t5295;
  double t5296;
  double t5297;
  double t5298;
  double t4229;
  double t4230;
  double t4232;
  double t4238;
  double t4242;
  double t4243;
  double t4842;
  double t4872;
  double t4886;
  double t4887;
  double t4892;
  double t4893;
  double t4900;
  double t4901;
  double t5629;
  double t5633;
  double t5636;
  double t5604;
  double t5611;
  double t5627;
  double t5586;
  double t5593;
  double t5597;
  double t5599;
  double t5628;
  double t5639;
  double t5641;
  double t5677;
  double t5678;
  double t5682;
  double t5692;
  double t5693;
  double t5697;
  double t5495;
  double t5497;
  double t5499;
  double t5483;
  double t5488;
  double t5492;
  double t5719;
  double t5726;
  double t5727;
  double t5733;
  double t5736;
  double t5750;
  double t5537;
  double t5540;
  double t5559;
  double t5528;
  double t5534;
  double t5535;
  double t5859;
  double t5860;
  double t5863;
  double t5797;
  double t5816;
  double t5828;
  double t5753;
  double t5830;
  double t5755;
  double t5756;
  double t5758;
  double t5848;
  double t5864;
  double t5885;
  double t5886;
  double t5888;
  double t5892;
  double t5893;
  double t5895;
  double t5850;
  double t5852;
  double t5857;
  double t5939;
  double t5947;
  double t5948;
  double t5916;
  double t5918;
  double t5919;
  double t399;
  double t436;
  double t539;
  double t2939;
  double t2943;
  double t2951;
  double t5995;
  double t5997;
  double t5999;
  double t2655;
  double t2673;
  double t2698;
  double t6156;
  double t6190;
  double t6228;
  double t6239;
  double t6274;
  double t6278;
  double t6157;
  double t6158;
  double t6160;
  double t6192;
  double t6194;
  double t6195;
  double t6255;
  double t6256;
  double t6257;
  double t6263;
  double t6266;
  double t6267;
  double t6494;
  double t6502;
  double t6510;
  double t6517;
  double t6626;
  double t6634;
  double t6647;
  double t6656;
  double t4773;
  double t4780;
  double t4783;
  double t4397;
  double t4422;
  double t4425;
  double t6738;
  double t6740;
  double t4720;
  double t4721;
  double t4724;
  double t6761;
  double t6762;
  double t6593;
  double t6599;
  double t6602;
  double t6610;
  double t6614;
  double t6615;
  double t6943;
  double t6944;
  double t6946;
  double t6949;
  double t6953;
  double t6954;
  double t6956;
  double t6959;
  double t6962;
  double t6963;
  double t6964;
  double t6967;
  double t6973;
  double t6974;
  double t6978;
  double t6981;
  double t6986;
  double t6987;
  double t6988;
  double t6989;
  double t6990;
  double t6991;
  double t6864;
  double t6867;
  double t6666;
  double t6667;
  double t6669;
  double t6671;
  double t6672;
  double t6674;
  double t6887;
  double t6899;
  double t5950;
  double t5952;
  double t5953;
  double t7093;
  double t7100;
  double t5922;
  double t5923;
  double t5924;
  double t5602;
  double t5661;
  double t5667;
  double t7113;
  double t7123;
  double t6107;
  double t6108;
  double t6112;
  double t7301;
  double t7342;
  double t7391;
  double t7395;
  double t7401;
  double t7405;
  double t7307;
  double t7308;
  double t7310;
  double t7344;
  double t7345;
  double t7346;
  double t7379;
  double t7381;
  double t7383;
  double t7416;
  double t7417;
  double t7423;
  double t7508;
  double t7510;
  double t7515;
  double t7518;
  double t7563;
  double t7566;
  double t7581;
  double t7589;
  double t7668;
  double t7670;
  double t7680;
  double t7681;
  double t7553;
  double t7554;
  double t7556;
  double t7558;
  double t7559;
  double t7560;
  double t7812;
  double t7813;
  double t7817;
  double t7818;
  double t7821;
  double t7822;
  double t7823;
  double t7824;
  double t7826;
  double t7839;
  double t7840;
  double t7844;
  double t7845;
  double t7847;
  double t7848;
  double t7851;
  double t7853;
  double t7855;
  double t7856;
  double t7859;
  double t7860;
  double t7862;
  double t7761;
  double t7765;
  double t7598;
  double t7599;
  double t7601;
  double t7609;
  double t7617;
  double t7622;
  double t7775;
  double t7788;
  double t7918;
  double t7925;
  double t7933;
  double t7936;
  double t7276;
  double t7277;
  double t7279;
  double t7232;
  t85 = Cos(var1[14]);
  t88 = -1.*t85;
  t90 = 1. + t88;
  t73 = Cos(var1[13]);
  t75 = -1.*t73;
  t78 = 1. + t75;
  t98 = Sin(var1[14]);
  t100 = 4.e-6*t98;
  t81 = Sin(var1[13]);
  t93 = 1.000000000016*t90;
  t95 = -7.e-6*t90;
  t103 = t95 + t100;
  t105 = -7.e-6*t103;
  t108 = -1. + t93 + t105;
  t80 = -7.e-6*t78;
  t118 = -6.5e-11*t90;
  t120 = 1. + t118;
  t123 = -7.e-6*t120;
  t125 = 7.e-6*t90;
  t128 = t123 + t125 + t100;
  t143 = -2.8e-11*t90;
  t145 = -1. + t85;
  t148 = 4.e-6*t145;
  t150 = -7.e-6*t98;
  t153 = t148 + t150;
  t155 = -7.e-6*t153;
  t158 = t143 + t155 + t98;
  t167 = Sin(var1[12]);
  t82 = -4.e-6*t81;
  t83 = t80 + t82;
  t110 = t83*t108;
  t113 = -6.5e-11*t78;
  t115 = 1. + t113;
  t130 = t115*t128;
  t133 = -1. + t73;
  t135 = 4.e-6*t133;
  t138 = 7.e-6*t81;
  t140 = t135 + t138;
  t160 = t140*t158;
  t163 = t110 + t130 + t160;
  t66 = Cos(var1[12]);
  t168 = -1.000000000016*t78;
  t170 = 1. + t168;
  t171 = t170*t108;
  t172 = 4.e-6*t81;
  t173 = t80 + t172;
  t174 = t173*t128;
  t177 = 2.8e-11*t78;
  t178 = t177 + t81;
  t181 = t178*t158;
  t182 = t171 + t174 + t181;
  t65 = Cos(var1[5]);
  t190 = -1.*t167*t163;
  t193 = t66*t182;
  t194 = t190 + t193;
  t164 = t66*t163;
  t185 = t167*t182;
  t186 = t164 + t185;
  t197 = Sin(var1[5]);
  t205 = Cos(var1[3]);
  t189 = t65*t186;
  t198 = t194*t197;
  t201 = t189 + t198;
  t10 = Sin(var1[3]);
  t206 = Cos(var1[4]);
  t209 = -1.*t81;
  t210 = t177 + t209;
  t213 = t210*t108;
  t214 = -7.e-6*t81;
  t217 = t135 + t214;
  t218 = t217*t128;
  t221 = -1.000000000049*t78;
  t222 = 1. + t221;
  t224 = t222*t158;
  t225 = t213 + t218 + t224;
  t226 = t206*t225;
  t229 = Sin(var1[4]);
  t230 = t65*t194;
  t231 = -1.*t186*t197;
  t233 = t230 + t231;
  t234 = -1.*t229*t233;
  t237 = t226 + t234;
  t720 = -1.*t225*t229;
  t781 = -1.*t206*t233;
  t791 = t720 + t781;
  t951 = -1.000000000049*t90;
  t988 = 4.e-6*t153;
  t1030 = 1. + t951 + t988;
  t1055 = 4.e-6*t120;
  t1094 = 7.e-6*t98;
  t1098 = t1055 + t148 + t1094;
  t1102 = 2.8e-11*t90;
  t1166 = 4.e-6*t103;
  t1170 = t1102 + t1166 + t98;
  t1289 = t178*t1030;
  t1302 = t173*t1098;
  t1359 = t170*t1170;
  t1420 = t1289 + t1302 + t1359;
  t1442 = t140*t1030;
  t1504 = t115*t1098;
  t1547 = t83*t1170;
  t1568 = t1442 + t1504 + t1547;
  t1821 = -1.*t98;
  t1656 = 4.e-6*t90;
  t1659 = t1656 + t150;
  t1697 = 4.e-6*t1659;
  t1709 = -4.e-6*t98;
  t1724 = t95 + t1709;
  t1745 = -7.e-6*t1724;
  t1771 = 1. + t118 + t1697 + t1745;
  t1786 = 1.000000000049*t90;
  t1796 = -1. + t1786;
  t1820 = 4.e-6*t1796;
  t1827 = t1102 + t1821;
  t1834 = -7.e-6*t1827;
  t1835 = t1820 + t148 + t1834 + t150;
  t1857 = -1.000000000016*t90;
  t1897 = 1. + t1857;
  t1903 = -7.e-6*t1897;
  t1905 = t143 + t1821;
  t1916 = 4.e-6*t1905;
  t1920 = t1903 + t95 + t1916 + t100;
  t1933 = t173*t1771;
  t1967 = t178*t1835;
  t1969 = t170*t1920;
  t1970 = t1933 + t1967 + t1969;
  t1976 = t115*t1771;
  t1977 = t140*t1835;
  t1979 = t83*t1920;
  t1984 = t1976 + t1977 + t1979;
  t2058 = -2.8e-11*t78;
  t2075 = -2.598649999999999e-7*var1[14];
  t2078 = 0.148705*t120;
  t2097 = -2.3905277499999995e-16*t90;
  t2101 = -0.038922999986*t1659;
  t2105 = -0.80315*t1724;
  t2107 = t125 + t100;
  t2113 = -0.503149000008*t2107;
  t2114 = t148 + t1094;
  t2117 = -0.038924*t2114;
  t2119 = t2075 + t2078 + t2097 + t2101 + t2105 + t2113 + t2117;
  t2121 = 1.0394599999999997e-12*var1[14];
  t2130 = 1. + t951;
  t2135 = -0.038924*t2130;
  t2137 = -0.03892299998790722*t90;
  t2146 = -0.80315*t1827;
  t2149 = 0.148705*t153;
  t2158 = t1656 + t1094;
  t2160 = -3.6777349999999994e-6*t2158;
  t2162 = t143 + t98;
  t2172 = -0.503149000008*t2162;
  t2175 = t2121 + t2135 + t2137 + t2146 + t2149 + t2160 + t2172;
  t2208 = 1.8190549999999993e-12*var1[14];
  t2210 = -0.80315*t1897;
  t2213 = -0.5031490000160505*t90;
  t2217 = -0.038922999986*t1905;
  t2221 = t125 + t1709;
  t2225 = -3.6777349999999994e-6*t2221;
  t2229 = 0.148705*t103;
  t2230 = t1102 + t98;
  t2233 = -0.038924*t2230;
  t2234 = t2208 + t2210 + t2213 + t2217 + t2225 + t2229 + t2233;
  t2045 = 4.e-6*t78;
  t2356 = 7.e-6*t78;
  t2288 = -1.*t66;
  t2294 = 1. + t2288;
  t2317 = 0.15121*t167;
  t2338 = 1.0248489999999998e-12*var1[13];
  t2353 = -0.28120900000849935*t78;
  t2354 = t2058 + t209;
  t2355 = -0.038748999993*t2354;
  t2359 = t2356 + t82;
  t2361 = -2.123459e-6*t2359;
  t2371 = t173*t2119;
  t2373 = t178*t2175;
  t2375 = t170*t2234;
  t2379 = t2338 + t2353 + t2355 + t2361 + t2371 + t2373 + t2375;
  t2381 = -1.4640699999999997e-7*var1[13];
  t2384 = -1.38024835e-16*t78;
  t2385 = t2045 + t214;
  t2389 = -0.038748999993*t2385;
  t2410 = t2356 + t172;
  t2416 = -0.281209000004*t2410;
  t2428 = t115*t2119;
  t2446 = t140*t2175;
  t2449 = t83*t2234;
  t2456 = t2381 + t2384 + t2389 + t2416 + t2428 + t2446 + t2449;
  t1772 = t217*t1771;
  t1841 = t222*t1835;
  t1922 = t210*t1920;
  t1923 = t1772 + t1841 + t1922;
  t1929 = t206*t1923;
  t1973 = t66*t1970;
  t1988 = -1.*t167*t1984;
  t1993 = t1973 + t1988;
  t2002 = t65*t1993;
  t2003 = t167*t1970;
  t2004 = t66*t1984;
  t2012 = t2003 + t2004;
  t2015 = -1.*t2012*t197;
  t2018 = t2002 + t2015;
  t2020 = -1.*t229*t2018;
  t2022 = t1929 + t2020;
  t2030 = 5.856279999999999e-13*var1[13];
  t2032 = -0.0387489999948987*t78;
  t2052 = t2045 + t138;
  t2053 = -2.123459e-6*t2052;
  t2064 = t2058 + t81;
  t2067 = -0.281209000004*t2064;
  t2120 = t217*t2119;
  t2200 = t222*t2175;
  t2240 = t210*t2234;
  t2264 = t2030 + t2032 + t2053 + t2067 + t2120 + t2200 + t2240;
  t2295 = -0.15121*t2294;
  t2380 = t66*t2379;
  t2476 = -1.*t167*t2456;
  t2507 = t2295 + t2317 + t2380 + t2476;
  t2510 = t65*t2507;
  t2526 = 0.15121*t2294;
  t2528 = t167*t2379;
  t2571 = t66*t2456;
  t2576 = t2526 + t2317 + t2528 + t2571;
  t2589 = -1.*t2576*t197;
  t2591 = t2510 + t2589;
  t2706 = t206*t2264;
  t2715 = -1.*t229*t2591;
  t2727 = t2706 + t2715;
  t1033 = t222*t1030;
  t1101 = t217*t1098;
  t1224 = t210*t1170;
  t1239 = t1033 + t1101 + t1224;
  t1422 = t66*t1420;
  t1572 = -1.*t167*t1568;
  t1585 = t1422 + t1572;
  t1590 = t65*t1585;
  t1614 = t167*t1420;
  t1617 = t66*t1568;
  t1618 = t1614 + t1617;
  t1620 = -1.*t1618*t197;
  t1629 = t1590 + t1620;
  t2755 = t1923*t229;
  t2766 = t206*t2018;
  t2775 = t2755 + t2766;
  t2622 = t2264*t229;
  t2627 = t206*t2591;
  t2632 = t2622 + t2627;
  t2832 = t206*t1239;
  t2834 = -1.*t229*t1629;
  t2835 = t2832 + t2834;
  t2287 = -1.*t2264*t229;
  t2594 = -1.*t206*t2591;
  t2601 = t2287 + t2594;
  t1274 = t1239*t229;
  t1640 = t206*t1629;
  t1645 = t1274 + t1640;
  t2851 = t65*t2576;
  t2858 = t2507*t197;
  t2860 = t2851 + t2858;
  t3003 = -1.*t65*t186;
  t3005 = -1.*t194*t197;
  t3008 = t3003 + t3005;
  t2961 = t65*t1618;
  t2963 = t1585*t197;
  t2964 = t2961 + t2963;
  t2836 = t65*t2012;
  t2839 = t1993*t197;
  t2846 = t2836 + t2839;
  t2863 = t2846*t2860;
  t3128 = -1.*t65*t2576;
  t3129 = -1.*t2507*t197;
  t3130 = t3128 + t3129;
  t2969 = -1.*t2964*t2860;
  t3127 = t2846*t2591;
  t3133 = t2018*t2860;
  t3109 = -1.*t65*t2012;
  t3110 = -1.*t1993*t197;
  t3113 = t3109 + t3110;
  t3179 = -1.*t2964*t2591;
  t3185 = -1.*t1629*t2860;
  t3159 = -1.*t65*t1618;
  t3170 = -1.*t1585*t197;
  t3176 = t3159 + t3170;
  t2877 = t2775*t2632;
  t2886 = t2022*t2727;
  t2904 = t2863 + t2877 + t2886;
  t2970 = -1.*t1645*t2632;
  t2971 = -1.*t2835*t2727;
  t2974 = t2969 + t2970 + t2971;
  t3289 = 0.15121*t66;
  t3292 = -0.15121*t167;
  t3295 = -1.*t167*t2379;
  t3301 = -1.*t66*t2456;
  t3305 = t3289 + t3292 + t3295 + t3301;
  t3331 = t3289 + t2317 + t2380 + t2476;
  t3392 = -1.*t66*t163;
  t3407 = -1.*t167*t182;
  t3411 = t3392 + t3407;
  t3412 = t65*t3411;
  t3429 = t3412 + t3005;
  t3483 = t3411*t197;
  t3488 = t230 + t3483;
  t3352 = -1.*t167*t1420;
  t3353 = -1.*t66*t1568;
  t3356 = t3352 + t3353;
  t3140 = t1923*t2264;
  t3142 = t2018*t2591;
  t3145 = t3140 + t3142 + t2863;
  t3316 = -1.*t167*t1970;
  t3321 = -1.*t66*t1984;
  t3326 = t3316 + t3321;
  t3200 = -1.*t1239*t2264;
  t3207 = -1.*t1629*t2591;
  t3213 = t3200 + t3207 + t2969;
  t3535 = t3326*t197;
  t3537 = t2002 + t3535;
  t3542 = t65*t3331;
  t3546 = t3305*t197;
  t3549 = t3542 + t3546;
  t3530 = t3356*t197;
  t3533 = t1590 + t3530;
  t3584 = t65*t3305;
  t3599 = -1.*t3331*t197;
  t3607 = t3584 + t3599;
  t3555 = t2846*t3549;
  t3570 = t3537*t2860;
  t3563 = t65*t3326;
  t3565 = t3563 + t3110;
  t3627 = -1.*t2964*t3549;
  t3642 = -1.*t3533*t2860;
  t3631 = t65*t3356;
  t3632 = t3631 + t3170;
  t3825 = 2.8e-11*t81;
  t3857 = -7.e-6*t73;
  t3860 = t3857 + t82;
  t3862 = t75 + t3825;
  t3794 = 4.e-6*t73;
  t3798 = t3794 + t214;
  t3829 = t73 + t3825;
  t3870 = t3860*t1771;
  t3873 = -1.000000000049*t81*t1835;
  t3874 = t3862*t1920;
  t3875 = t3870 + t3873 + t3874;
  t3780 = 7.e-6*t73;
  t3784 = t3780 + t82;
  t3748 = -4.e-6*t73;
  t3753 = t3748 + t214;
  t4027 = -2.8e-11*t81;
  t3853 = -1.000000000049*t81*t1030;
  t3861 = t3860*t1098;
  t3864 = t3862*t1170;
  t3865 = t3853 + t3861 + t3864;
  t3946 = t3857 + t172;
  t3948 = -0.038748999993*t3946;
  t3952 = t3794 + t138;
  t3953 = -0.281209000004*t3952;
  t3960 = -1.38024835e-16*t81;
  t3967 = -6.5e-11*t81*t2119;
  t3972 = t3784*t2175;
  t3974 = t3753*t2234;
  t3978 = -1.4640699999999997e-7 + t3948 + t3953 + t3960 + t3967 + t3972 + t3974;
  t4028 = t73 + t4027;
  t4036 = -0.281209000004*t4028;
  t4039 = t3780 + t172;
  t4040 = -2.123459e-6*t4039;
  t4045 = -0.0387489999948987*t81;
  t4046 = t3860*t2119;
  t4047 = -1.000000000049*t81*t2175;
  t4048 = t3862*t2234;
  t4050 = 5.856279999999999e-13 + t4036 + t4040 + t4045 + t4046 + t4047 + t4048;
  t4055 = t75 + t4027;
  t4075 = -0.038748999993*t4055;
  t4112 = t3748 + t138;
  t4115 = -2.123459e-6*t4112;
  t4118 = -0.28120900000849935*t81;
  t4120 = t3798*t2119;
  t4125 = t3829*t2175;
  t4131 = -1.000000000016*t81*t2234;
  t4140 = 1.0248489999999998e-12 + t4075 + t4115 + t4118 + t4120 + t4125 + t4131;
  t3937 = t3875*t2264;
  t4053 = t1923*t4050;
  t3983 = -6.5e-11*t81*t1771;
  t3988 = t3784*t1835;
  t3995 = t3753*t1920;
  t4004 = t3983 + t3988 + t3995;
  t3896 = t3798*t1771;
  t3901 = t3829*t1835;
  t3902 = -1.000000000016*t81*t1920;
  t3918 = t3896 + t3901 + t3902;
  t4174 = -1.*t3865*t2264;
  t4206 = -1.*t1239*t4050;
  t4197 = t3784*t1030;
  t4199 = -6.5e-11*t81*t1098;
  t4200 = t3753*t1170;
  t4202 = t4197 + t4199 + t4200;
  t4144 = t3829*t1030;
  t4145 = t3798*t1098;
  t4146 = -1.000000000016*t81*t1170;
  t4147 = t4144 + t4145 + t4146;
  t4293 = -1.*t167*t3978;
  t4296 = t66*t4140;
  t4299 = t4293 + t4296;
  t4302 = t66*t3978;
  t4303 = t167*t4140;
  t4310 = t4302 + t4303;
  t3759 = t3753*t108;
  t3772 = -6.5e-11*t81*t128;
  t3786 = t3784*t158;
  t3788 = t3759 + t3772 + t3786;
  t3793 = -1.000000000016*t81*t108;
  t3823 = t3798*t128;
  t3837 = t3829*t158;
  t3841 = t3793 + t3823 + t3837;
  t4406 = t66*t3788;
  t4414 = t167*t3841;
  t4415 = t4406 + t4414;
  t4400 = -1.*t167*t3788;
  t4401 = t66*t3841;
  t4402 = t4400 + t4401;
  t4387 = t3862*t108;
  t4388 = t3860*t128;
  t4394 = -1.000000000049*t81*t158;
  t4395 = t4387 + t4388 + t4394;
  t4403 = t65*t4402;
  t4417 = -1.*t4415*t197;
  t4419 = t4403 + t4417;
  t4450 = t65*t4415;
  t4451 = t4402*t197;
  t4454 = t4450 + t4451;
  t4459 = t206*t4395;
  t4460 = -1.*t229*t4419;
  t4463 = t4459 + t4460;
  t4323 = t66*t4202;
  t4324 = t167*t4147;
  t4326 = t4323 + t4324;
  t4344 = -1.*t167*t4202;
  t4352 = t66*t4147;
  t4353 = t4344 + t4352;
  t4256 = t66*t4004;
  t4257 = t167*t3918;
  t4264 = t4256 + t4257;
  t4274 = -1.*t167*t4004;
  t4277 = t66*t3918;
  t4287 = t4274 + t4277;
  t4500 = t65*t4264;
  t4505 = t4287*t197;
  t4511 = t4500 + t4505;
  t4491 = t65*t4326;
  t4492 = t4353*t197;
  t4493 = t4491 + t4492;
  t4529 = t65*t4310;
  t4532 = t4299*t197;
  t4533 = t4529 + t4532;
  t4538 = t65*t4299;
  t4551 = -1.*t4310*t197;
  t4566 = t4538 + t4551;
  t4579 = t65*t4353;
  t4586 = -1.*t4326*t197;
  t4591 = t4579 + t4586;
  t4516 = t65*t4287;
  t4519 = -1.*t4264*t197;
  t4520 = t4516 + t4519;
  t4528 = t4511*t2860;
  t4536 = t2846*t4533;
  t4683 = t3875*t229;
  t4687 = t206*t4520;
  t4694 = t4683 + t4687;
  t4602 = -1.*t4493*t2860;
  t4603 = -1.*t2964*t4533;
  t4644 = t3865*t229;
  t4654 = t206*t4591;
  t4659 = t4644 + t4654;
  t4733 = t4050*t229;
  t4738 = t206*t4566;
  t4743 = t4733 + t4738;
  t4749 = t206*t4050;
  t4750 = -1.*t229*t4566;
  t4751 = t4749 + t4750;
  t4855 = 4.e-6*t85;
  t4819 = -7.e-6*t85;
  t4822 = t4819 + t1709;
  t4823 = -7.e-6*t4822;
  t4834 = -2.8e-11*t98;
  t4836 = t85 + t4823 + t4834;
  t4858 = 7.000000000455e-6*t98;
  t4870 = t4855 + t4858;
  t4873 = t4855 + t150;
  t4874 = -7.e-6*t4873;
  t4882 = 1.000000000016*t98;
  t4884 = t4874 + t4882;
  t4917 = 7.e-6*t85;
  t4969 = 2.8e-11*t98;
  t4910 = -4.e-6*t85;
  t4915 = t4910 + t150;
  t4916 = -0.80315*t4915;
  t4924 = t4917 + t1709;
  t4927 = -0.038924*t4924;
  t4929 = t4819 + t100;
  t4931 = -0.038922999986*t4929;
  t4934 = t4855 + t1094;
  t4943 = -0.503149000008*t4934;
  t4945 = -9.666064052774999e-12*t98;
  t4946 = -2.598649999999999e-7 + t4916 + t4927 + t4931 + t4943 + t4945;
  t4960 = 0.148705*t4822;
  t4961 = t85 + t4834;
  t4962 = -0.503149000008*t4961;
  t4970 = t88 + t4969;
  t4972 = -0.80315*t4970;
  t4976 = t4917 + t100;
  t4978 = -3.6777349999999994e-6*t4976;
  t4979 = 1.0000140000590574e-6*t98;
  t4983 = 1.0394599999999997e-12 + t4960 + t4962 + t4972 + t4978 + t4979;
  t4992 = 0.148705*t4873;
  t4995 = t88 + t4834;
  t5001 = -0.038922999986*t4995;
  t5007 = t85 + t4969;
  t5009 = -0.038924*t5007;
  t5015 = t4910 + t1094;
  t5016 = -3.6777349999999994e-6*t5015;
  t5017 = 0.30000099999679997*t98;
  t5018 = 1.8190549999999993e-12 + t4992 + t5001 + t5009 + t5016 + t5017;
  t5097 = -7.e-6*t4915;
  t5099 = 4.e-6*t4929;
  t5101 = -6.5e-11*t98;
  t5104 = t5097 + t5099 + t5101;
  t5123 = 4.e-6*t4995;
  t5126 = 1.12e-16*t98;
  t5130 = t4855 + t5123 + t5126;
  t5145 = -7.e-6*t4970;
  t5159 = 1.96e-16*t98;
  t5160 = t4819 + t5145 + t5159;
  t4948 = t173*t4946;
  t4985 = t178*t4983;
  t5020 = t170*t5018;
  t5026 = t4948 + t4985 + t5020;
  t5035 = t217*t4946;
  t5036 = t222*t4983;
  t5040 = t210*t5018;
  t5046 = t5035 + t5036 + t5040;
  t5072 = t115*t4946;
  t5074 = t140*t4983;
  t5080 = t83*t5018;
  t5085 = t5072 + t5074 + t5080;
  t5241 = 4.e-6*t4822;
  t5242 = -1.000000000049*t98;
  t5243 = t5241 + t5242;
  t5245 = -4.00000000026e-6*t98;
  t5250 = t4917 + t5245;
  t5255 = 4.e-6*t4873;
  t5257 = t85 + t5255 + t4969;
  t5274 = t222*t5243;
  t5280 = t217*t5250;
  t5281 = t210*t5257;
  t5284 = t5274 + t5280 + t5281;
  t3866 = t1970*t2379;
  t3867 = t1984*t2456;
  t3868 = t3866 + t3140 + t3867;
  t5176 = t217*t5104;
  t5177 = t210*t5130;
  t5182 = t222*t5160;
  t5184 = t5176 + t5177 + t5182;
  t3876 = -1.*t1420*t2379;
  t3879 = -1.*t1568*t2456;
  t3889 = t3876 + t3200 + t3879;
  t5337 = t2119*t5104;
  t5340 = t1771*t4946;
  t5341 = t1835*t4983;
  t5343 = t1920*t5018;
  t5344 = t5160*t2175;
  t5356 = t5130*t2234;
  t5358 = t5337 + t5340 + t5341 + t5343 + t5344 + t5356;
  t5363 = -1.*t2119*t5250;
  t5364 = -1.*t1030*t4983;
  t5366 = -1.*t4946*t1098;
  t5367 = -1.*t5018*t1170;
  t5370 = -1.*t5243*t2175;
  t5381 = -1.*t5257*t2234;
  t5382 = t5363 + t5364 + t5366 + t5367 + t5370 + t5381;
  t5385 = t1771*t2119;
  t5387 = t1835*t2175;
  t5388 = t1920*t2234;
  t5389 = t5385 + t5387 + t5388;
  t5394 = -1.*t2119*t1098;
  t5395 = -1.*t1030*t2175;
  t5397 = -1.*t1170*t2234;
  t5400 = t5394 + t5395 + t5397;
  t5050 = t1923*t5046;
  t5191 = t5184*t2264;
  t5197 = t115*t5104;
  t5198 = t83*t5130;
  t5206 = t140*t5160;
  t5208 = t5197 + t5198 + t5206;
  t5119 = t173*t5104;
  t5143 = t170*t5130;
  t5161 = t178*t5160;
  t5169 = t5119 + t5143 + t5161;
  t5230 = -1.*t5046*t1239;
  t5285 = -1.*t5284*t2264;
  t5460 = t167*t5026;
  t5463 = t66*t5085;
  t5466 = t5460 + t5463;
  t5471 = t66*t5026;
  t5472 = -1.*t167*t5085;
  t5474 = t5471 + t5472;
  t5244 = t178*t5243;
  t5252 = t173*t5250;
  t5262 = t170*t5257;
  t5265 = t5244 + t5252 + t5262;
  t5295 = t140*t5243;
  t5296 = t115*t5250;
  t5297 = t83*t5257;
  t5298 = t5295 + t5296 + t5297;
  t4229 = t2012*t2576;
  t4230 = t1993*t2507;
  t4232 = t3140 + t4229 + t4230;
  t4238 = -1.*t1618*t2576;
  t4242 = -1.*t1585*t2507;
  t4243 = t3200 + t4238 + t4242;
  t4842 = t178*t4836;
  t4872 = t173*t4870;
  t4886 = t170*t4884;
  t4887 = t4842 + t4872 + t4886;
  t4892 = t140*t4836;
  t4893 = t115*t4870;
  t4900 = t83*t4884;
  t4901 = t4892 + t4893 + t4900;
  t5629 = t167*t4887;
  t5633 = t66*t4901;
  t5636 = t5629 + t5633;
  t5604 = t66*t4887;
  t5611 = -1.*t167*t4901;
  t5627 = t5604 + t5611;
  t5586 = t222*t4836;
  t5593 = t217*t4870;
  t5597 = t210*t4884;
  t5599 = t5586 + t5593 + t5597;
  t5628 = t65*t5627;
  t5639 = -1.*t5636*t197;
  t5641 = t5628 + t5639;
  t5677 = t65*t5636;
  t5678 = t5627*t197;
  t5682 = t5677 + t5678;
  t5692 = t206*t5599;
  t5693 = -1.*t229*t5641;
  t5697 = t5692 + t5693;
  t5495 = -1.*t167*t5208;
  t5497 = t66*t5169;
  t5499 = t5495 + t5497;
  t5483 = t66*t5208;
  t5488 = t167*t5169;
  t5492 = t5483 + t5488;
  t5719 = t65*t5474;
  t5726 = -1.*t5466*t197;
  t5727 = t5719 + t5726;
  t5733 = t65*t5466;
  t5736 = t5474*t197;
  t5750 = t5733 + t5736;
  t5537 = t66*t5265;
  t5540 = -1.*t167*t5298;
  t5559 = t5537 + t5540;
  t5528 = t167*t5265;
  t5534 = t66*t5298;
  t5535 = t5528 + t5534;
  t5859 = t65*t5535;
  t5860 = t5559*t197;
  t5863 = t5859 + t5860;
  t5797 = t65*t5492;
  t5816 = t5499*t197;
  t5828 = t5797 + t5816;
  t5753 = t2846*t5750;
  t5830 = t5828*t2860;
  t5755 = t65*t5499;
  t5756 = -1.*t5492*t197;
  t5758 = t5755 + t5756;
  t5848 = -1.*t5750*t2964;
  t5864 = -1.*t5863*t2860;
  t5885 = t5046*t229;
  t5886 = t206*t5727;
  t5888 = t5885 + t5886;
  t5892 = t206*t5046;
  t5893 = -1.*t229*t5727;
  t5895 = t5892 + t5893;
  t5850 = t65*t5559;
  t5852 = -1.*t5535*t197;
  t5857 = t5850 + t5852;
  t5939 = t5284*t229;
  t5947 = t206*t5857;
  t5948 = t5939 + t5947;
  t5916 = t5184*t229;
  t5918 = t206*t5758;
  t5919 = t5916 + t5918;
  t399 = t205*t201;
  t436 = -1.*t10*t237;
  t539 = t399 + t436;
  t2939 = -1.*t1239*t229;
  t2943 = -1.*t206*t1629;
  t2951 = t2939 + t2943;
  t5995 = t225*t229;
  t5997 = t206*t233;
  t5999 = t5995 + t5997;
  t2655 = -1.*t1923*t229;
  t2673 = -1.*t206*t2018;
  t2698 = t2655 + t2673;
  t6156 = -1.*t2846*t2860;
  t6190 = t201*t2860;
  t6228 = -1.*t2846*t2591;
  t6239 = -1.*t2018*t2860;
  t6274 = t201*t2591;
  t6278 = t233*t2860;
  t6157 = -1.*t2775*t2632;
  t6158 = -1.*t2022*t2727;
  t6160 = t6156 + t6157 + t6158;
  t6192 = t5999*t2632;
  t6194 = t237*t2727;
  t6195 = t6190 + t6192 + t6194;
  t6255 = -1.*t1923*t2264;
  t6256 = -1.*t2018*t2591;
  t6257 = t6255 + t6256 + t6156;
  t6263 = t225*t2264;
  t6266 = t233*t2591;
  t6267 = t6263 + t6266 + t6190;
  t6494 = -1.*t2846*t3549;
  t6502 = -1.*t3537*t2860;
  t6510 = t201*t3549;
  t6517 = t3488*t2860;
  t6626 = -1.*t3875*t2264;
  t6634 = -1.*t1923*t4050;
  t6647 = t4395*t2264;
  t6656 = t225*t4050;
  t4773 = t206*t3865;
  t4780 = -1.*t229*t4591;
  t4783 = t4773 + t4780;
  t4397 = t4395*t229;
  t4422 = t206*t4419;
  t4425 = t4397 + t4422;
  t6738 = -1.*t4511*t2860;
  t6740 = -1.*t2846*t4533;
  t4720 = t206*t3875;
  t4721 = -1.*t229*t4520;
  t4724 = t4720 + t4721;
  t6761 = t4454*t2860;
  t6762 = t201*t4533;
  t6593 = -1.*t1970*t2379;
  t6599 = -1.*t1984*t2456;
  t6602 = t6593 + t6255 + t6599;
  t6610 = t182*t2379;
  t6614 = t163*t2456;
  t6615 = t6610 + t6263 + t6614;
  t6943 = t2119*t128;
  t6944 = t158*t2175;
  t6946 = t108*t2234;
  t6949 = t6943 + t6944 + t6946;
  t6953 = -1.*t2119*t5104;
  t6954 = -1.*t1771*t4946;
  t6956 = -1.*t1835*t4983;
  t6959 = -1.*t1920*t5018;
  t6962 = -1.*t5160*t2175;
  t6963 = -1.*t5130*t2234;
  t6964 = t6953 + t6954 + t6956 + t6959 + t6962 + t6963;
  t6967 = -1.*t1771*t2119;
  t6973 = -1.*t1835*t2175;
  t6974 = -1.*t1920*t2234;
  t6978 = t6967 + t6973 + t6974;
  t6981 = t4946*t128;
  t6986 = t2119*t4870;
  t6987 = t108*t5018;
  t6988 = t4983*t158;
  t6989 = t4836*t2175;
  t6990 = t4884*t2234;
  t6991 = t6981 + t6986 + t6987 + t6988 + t6989 + t6990;
  t6864 = -1.*t1923*t5046;
  t6867 = -1.*t5184*t2264;
  t6666 = -1.*t2012*t2576;
  t6667 = -1.*t1993*t2507;
  t6669 = t6255 + t6666 + t6667;
  t6671 = t186*t2576;
  t6672 = t194*t2507;
  t6674 = t6263 + t6671 + t6672;
  t6887 = t5046*t225;
  t6899 = t5599*t2264;
  t5950 = t206*t5284;
  t5952 = -1.*t229*t5857;
  t5953 = t5950 + t5952;
  t7093 = -1.*t2846*t5750;
  t7100 = -1.*t5828*t2860;
  t5922 = t206*t5184;
  t5923 = -1.*t229*t5758;
  t5924 = t5922 + t5923;
  t5602 = t5599*t229;
  t5661 = t206*t5641;
  t5667 = t5602 + t5661;
  t7113 = t5750*t201;
  t7123 = t5682*t2860;
  t6107 = t205*t2964;
  t6108 = -1.*t10*t2835;
  t6112 = t6107 + t6108;
  t7301 = -1.*t201*t2860;
  t7342 = t2964*t2860;
  t7391 = -1.*t201*t2591;
  t7395 = -1.*t233*t2860;
  t7401 = t2964*t2591;
  t7405 = t1629*t2860;
  t7307 = -1.*t5999*t2632;
  t7308 = -1.*t237*t2727;
  t7310 = t7301 + t7307 + t7308;
  t7344 = t1645*t2632;
  t7345 = t2835*t2727;
  t7346 = t7342 + t7344 + t7345;
  t7379 = -1.*t225*t2264;
  t7381 = -1.*t233*t2591;
  t7383 = t7379 + t7381 + t7301;
  t7416 = t1239*t2264;
  t7417 = t1629*t2591;
  t7423 = t7416 + t7417 + t7342;
  t7508 = -1.*t201*t3549;
  t7510 = -1.*t3488*t2860;
  t7515 = t2964*t3549;
  t7518 = t3533*t2860;
  t7563 = -1.*t4395*t2264;
  t7566 = -1.*t225*t4050;
  t7581 = t3865*t2264;
  t7589 = t1239*t4050;
  t7668 = -1.*t4454*t2860;
  t7670 = -1.*t201*t4533;
  t7680 = t4493*t2860;
  t7681 = t2964*t4533;
  t7553 = -1.*t182*t2379;
  t7554 = -1.*t163*t2456;
  t7556 = t7553 + t7379 + t7554;
  t7558 = t1420*t2379;
  t7559 = t1568*t2456;
  t7560 = t7558 + t7416 + t7559;
  t7812 = -1.*t2119*t128;
  t7813 = -1.*t158*t2175;
  t7817 = -1.*t108*t2234;
  t7818 = t7812 + t7813 + t7817;
  t7821 = t2119*t5250;
  t7822 = t1030*t4983;
  t7823 = t4946*t1098;
  t7824 = t5018*t1170;
  t7826 = t5243*t2175;
  t7839 = t5257*t2234;
  t7840 = t7821 + t7822 + t7823 + t7824 + t7826 + t7839;
  t7844 = t2119*t1098;
  t7845 = t1030*t2175;
  t7847 = t1170*t2234;
  t7848 = t7844 + t7845 + t7847;
  t7851 = -1.*t4946*t128;
  t7853 = -1.*t2119*t4870;
  t7855 = -1.*t108*t5018;
  t7856 = -1.*t4983*t158;
  t7859 = -1.*t4836*t2175;
  t7860 = -1.*t4884*t2234;
  t7862 = t7851 + t7853 + t7855 + t7856 + t7859 + t7860;
  t7761 = t5046*t1239;
  t7765 = t5284*t2264;
  t7598 = -1.*t186*t2576;
  t7599 = -1.*t194*t2507;
  t7601 = t7379 + t7598 + t7599;
  t7609 = t1618*t2576;
  t7617 = t1585*t2507;
  t7622 = t7416 + t7609 + t7617;
  t7775 = -1.*t5046*t225;
  t7788 = -1.*t5599*t2264;
  t7918 = t5750*t2964;
  t7925 = t5863*t2860;
  t7933 = -1.*t5750*t201;
  t7936 = -1.*t5682*t2860;
  t7276 = t205*t2846;
  t7277 = -1.*t10*t2022;
  t7279 = t7276 + t7277;
  t7232 = 6.5e-11*t90;
  p_output1[0]=(-1.*t10*t201 - 1.*t205*t237)*var2[1] + t539*var2[2];
  p_output1[1]=t237*var2[0] - 1.*t10*t791*var2[1] + t205*t791*var2[2] + (t1645*(t2022*t2601 + t2022*t2632 + t2698*t2727 + t2727*t2775) + t2835*t2904 + t2775*(-1.*t1645*t2727 - 1.*t2601*t2835 - 1.*t2632*t2835 - 1.*t2727*t2951) + t2022*t2974)*var2[3];
  p_output1[2]=t206*t3008*var2[0] + (t205*t233 + t10*t229*t3008)*var2[1] + (t10*t233 - 1.*t205*t229*t3008)*var2[2] + (t206*t2974*t3113 + t1645*(t206*t2632*t3113 - 1.*t229*t2727*t3113 + t3127 - 1.*t2022*t229*t3130 + t206*t2775*t3130 + t3133) + t206*t2904*t3176 + t2775*(-1.*t1645*t206*t3130 + t229*t2835*t3130 - 1.*t206*t2632*t3176 + t229*t2727*t3176 + t3179 + t3185))*var2[3] + (t2964*(t2591*t3113 + t3127 + t2018*t3130 + t3133) + t1629*t3145 + t2846*(-1.*t1629*t3130 - 1.*t2591*t3176 + t3179 + t3185) + t2018*t3213)*var2[4];
  p_output1[3]=t206*t3429*var2[0] + (t10*t229*t3429 + t205*t3488)*var2[1] + (-1.*t205*t229*t3429 + t10*t3488)*var2[2] + (t206*t2974*t3565 + t1645*(t3555 + t206*t2632*t3565 - 1.*t229*t2727*t3565 + t3570 - 1.*t2022*t229*t3607 + t206*t2775*t3607) + t206*t2904*t3632 + t2775*(-1.*t1645*t206*t3607 + t229*t2835*t3607 + t3627 - 1.*t206*t2632*t3632 + t229*t2727*t3632 + t3642))*var2[3] + (t3145*t3533 + t3213*t3537 + t2964*(t3555 + t2591*t3565 + t3570 + t2018*t3607) + t2846*(-1.*t1629*t3607 + t3627 - 1.*t2591*t3632 + t3642))*var2[4] + (t1239*(t1993*t2576 + t1993*t3305 + t2507*t3326 + t2012*t3331) + t1923*(-1.*t1585*t2576 - 1.*t1585*t3305 - 1.*t1618*t3331 - 1.*t2507*t3356))*var2[5];
  p_output1[4]=t4425*var2[0] + (t205*t4454 - 1.*t10*t4463)*var2[1] + (t10*t4454 + t205*t4463)*var2[2] + (t2904*t4659 + t2974*t4694 + t1645*(t4528 + t4536 + t2632*t4694 + t2727*t4724 + t2775*t4743 + t2022*t4751) + t2775*(t4602 + t4603 - 1.*t2632*t4659 - 1.*t1645*t4743 - 1.*t2835*t4751 - 1.*t2727*t4783))*var2[3] + (t3145*t4493 + t3213*t4511 + t2964*(t3937 + t4053 + t2591*t4520 + t4528 + t4536 + t2018*t4566) + t2846*(t4174 + t4206 - 1.*t1629*t4566 - 1.*t2591*t4591 + t4602 + t4603))*var2[4] + (t3865*t4232 + t3875*t4243 + t1239*(t3937 + t4053 + t2576*t4264 + t2507*t4287 + t1993*t4299 + t2012*t4310) + t1923*(t4174 + t4206 - 1.*t1585*t4299 - 1.*t1618*t4310 - 1.*t2576*t4326 - 1.*t2507*t4353))*var2[5] + (0.15121*t3788 + 0.15121*t3841 + t3865*t3868 + t3875*t3889 + t1239*(t2379*t3918 + t3937 + t1984*t3978 + t2456*t4004 + t4053 + t1970*t4140) + t1923*(-1.*t1568*t3978 - 1.*t1420*t4140 - 1.*t2379*t4147 + t4174 - 1.*t2456*t4202 + t4206))*var2[12];
  p_output1[5]=t5667*var2[0] + (t205*t5682 - 1.*t10*t5697)*var2[1] + (t10*t5682 + t205*t5697)*var2[2] + (t2974*t5919 + t1645*(t5753 + t5830 + t2775*t5888 + t2022*t5895 + t2632*t5919 + t2727*t5924) + t2904*t5948 + t2775*(t5848 + t5864 - 1.*t1645*t5888 - 1.*t2835*t5895 - 1.*t2632*t5948 - 1.*t2727*t5953))*var2[3] + (t3213*t5828 + t2964*(t5050 + t5191 + t2018*t5727 + t5753 + t2591*t5758 + t5830) + t3145*t5863 + t2846*(t5230 + t5285 - 1.*t1629*t5727 + t5848 - 1.*t2591*t5857 + t5864))*var2[4] + (t4243*t5184 + t4232*t5284 + t1239*(t5050 + t5191 + t2012*t5466 + t1993*t5474 + t2576*t5492 + t2507*t5499) + t1923*(t5230 + t5285 - 1.*t1618*t5466 - 1.*t1585*t5474 - 1.*t2576*t5535 - 1.*t2507*t5559))*var2[5] + (0.15121*t4887 + 0.15121*t4901 + t3889*t5184 + t1239*(t1970*t5026 + t5050 + t1984*t5085 + t2379*t5169 + t5191 + t2456*t5208) + t3868*t5284 + t1923*(-1.*t1420*t5026 - 1.*t1568*t5085 + t5230 - 1.*t2379*t5265 + t5285 - 1.*t2456*t5298))*var2[12] + (-0.281209*t4836 + 0.038749*t4884 + t1098*t5358 + t1771*t5382 + t5250*t5389 + t5104*t5400 - 7.e-6*(t1170*t5358 + t1920*t5382 + t5257*t5389 + t5130*t5400) + 4.e-6*(-1.*t1030*t5358 - 1.*t1835*t5382 - 1.*t5243*t5389 - 1.*t5160*t5400) + 1.e-6*(t4910 - 7.000000000455e-6*t98))*var2[13];
  p_output1[6]=t5999;
  p_output1[7]=t539;
  p_output1[8]=t10*t201 + t205*t237;
  p_output1[9]=t1645*t2904 + t2775*t2974;
  p_output1[10]=t2964*t3145 + t2846*t3213;
  p_output1[11]=t1239*t4232 + t1923*t4243;
  p_output1[12]=0.15121*t163 + 0.15121*t182 + t1239*t3868 + t1923*t3889;
  p_output1[13]=0.038749*t108 - 0.281209*t158 + t1098*t5389 + t1771*t5400 + 4.e-6*(-1.*t1030*t5389 - 1.*t1835*t5400) - 7.e-6*(t1170*t5389 + t1920*t5400) + 1.e-6*(7.e-6*t120 + t1709 + t95);
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t205*t2835 - 1.*t10*t2964)*var2[1] + t6112*var2[2];
  p_output1[16]=t2835*var2[0] - 1.*t10*t2951*var2[1] + t205*t2951*var2[2] + ((-1.*t2022*t2601 - 1.*t2022*t2632 - 1.*t2698*t2727 - 1.*t2727*t2775)*t5999 + t237*t6160 + t2022*t6195 + t2775*(t237*t2601 + t237*t2632 + t2727*t5999 + t2727*t791))*var2[3];
  p_output1[17]=t206*t3176*var2[0] + (t1629*t205 + t10*t229*t3176)*var2[1] + (t10*t1629 - 1.*t205*t229*t3176)*var2[2] + (t206*t3008*t6160 + t206*t3113*t6195 + t5999*(-1.*t206*t2632*t3113 + t229*t2727*t3113 + t2022*t229*t3130 - 1.*t206*t2775*t3130 + t6228 + t6239) + t2775*(t206*t2632*t3008 - 1.*t229*t2727*t3008 - 1.*t229*t237*t3130 + t206*t3130*t5999 + t6274 + t6278))*var2[3] + (t201*(-1.*t2591*t3113 - 1.*t2018*t3130 + t6228 + t6239) + t233*t6257 + t2018*t6267 + t2846*(t2591*t3008 + t233*t3130 + t6274 + t6278))*var2[4];
  p_output1[18]=t206*t3632*var2[0] + (t205*t3533 + t10*t229*t3632)*var2[1] + (t10*t3533 - 1.*t205*t229*t3632)*var2[2] + (t206*t3429*t6160 + t206*t3565*t6195 + t5999*(-1.*t206*t2632*t3565 + t229*t2727*t3565 + t2022*t229*t3607 - 1.*t206*t2775*t3607 + t6494 + t6502) + t2775*(t206*t2632*t3429 - 1.*t229*t2727*t3429 - 1.*t229*t237*t3607 + t206*t3607*t5999 + t6510 + t6517))*var2[3] + (t3488*t6257 + t3537*t6267 + t201*(-1.*t2591*t3565 - 1.*t2018*t3607 + t6494 + t6502) + t2846*(t2591*t3429 + t233*t3607 + t6510 + t6517))*var2[4] + (t225*(-1.*t1993*t2576 - 1.*t1993*t3305 - 1.*t2507*t3326 - 1.*t2012*t3331) + t1923*(t194*t2576 + t194*t3305 + t186*t3331 + t2507*t3411))*var2[5];
  p_output1[19]=t4659*var2[0] + (t205*t4493 - 1.*t10*t4783)*var2[1] + (t10*t4493 + t205*t4783)*var2[2] + (t4425*t6160 + t4694*t6195 + t5999*(-1.*t2632*t4694 - 1.*t2727*t4724 - 1.*t2775*t4743 - 1.*t2022*t4751 + t6738 + t6740) + t2775*(t2632*t4425 + t2727*t4463 + t237*t4751 + t4743*t5999 + t6761 + t6762))*var2[3] + (t4454*t6257 + t4511*t6267 + t201*(-1.*t2591*t4520 - 1.*t2018*t4566 + t6626 + t6634 + t6738 + t6740) + t2846*(t2591*t4419 + t233*t4566 + t6647 + t6656 + t6761 + t6762))*var2[4] + (t225*(-1.*t2576*t4264 - 1.*t2507*t4287 - 1.*t1993*t4299 - 1.*t2012*t4310 + t6626 + t6634) + t1923*(t194*t4299 + t186*t4310 + t2507*t4402 + t2576*t4415 + t6647 + t6656) + t4395*t6669 + t3875*t6674)*var2[5] + (0.15121*t4147 + 0.15121*t4202 + t4395*t6602 + t3875*t6615 + t225*(-1.*t2379*t3918 - 1.*t1984*t3978 - 1.*t2456*t4004 - 1.*t1970*t4140 + t6626 + t6634) + t1923*(t2456*t3788 + t2379*t3841 + t163*t3978 + t182*t4140 + t6647 + t6656))*var2[12];
  p_output1[20]=t5948*var2[0] + (t205*t5863 - 1.*t10*t5953)*var2[1] + (t10*t5863 + t205*t5953)*var2[2] + (t5667*t6160 + t5919*t6195 + t5999*(-1.*t2775*t5888 - 1.*t2022*t5895 - 1.*t2632*t5919 - 1.*t2727*t5924 + t7093 + t7100) + t2775*(t2632*t5667 + t2727*t5697 + t237*t5895 + t5888*t5999 + t7113 + t7123))*var2[3] + (t5682*t6257 + t5828*t6267 + t201*(-1.*t2018*t5727 - 1.*t2591*t5758 + t6864 + t6867 + t7093 + t7100) + t2846*(t2591*t5641 + t233*t5727 + t6887 + t6899 + t7113 + t7123))*var2[4] + (t5599*t6669 + t5184*t6674 + t225*(-1.*t2012*t5466 - 1.*t1993*t5474 - 1.*t2576*t5492 - 1.*t2507*t5499 + t6864 + t6867) + t1923*(t186*t5466 + t194*t5474 + t2507*t5627 + t2576*t5636 + t6887 + t6899))*var2[5] + (0.15121*t5265 + 0.15121*t5298 + t5599*t6602 + t5184*t6615 + t225*(-1.*t1970*t5026 - 1.*t1984*t5085 - 1.*t2379*t5169 - 1.*t2456*t5208 + t6864 + t6867) + t1923*(t2379*t4887 + t2456*t4901 + t182*t5026 + t163*t5085 + t6887 + t6899))*var2[12] + (-0.281209*t5243 + 0.038749*t5257 + t5104*t6949 + t128*t6964 + t4870*t6978 + t1771*t6991 + 4.e-6*(-1.*t5160*t6949 - 1.*t158*t6964 - 1.*t4836*t6978 - 1.*t1835*t6991) - 7.e-6*(t5130*t6949 + t108*t6964 + t4884*t6978 + t1920*t6991) + 1.e-6*(t4819 + 4.00000000026e-6*t98))*var2[13];
  p_output1[21]=t1645;
  p_output1[22]=t6112;
  p_output1[23]=t205*t2835 + t10*t2964;
  p_output1[24]=t5999*t6160 + t2775*t6195;
  p_output1[25]=t201*t6257 + t2846*t6267;
  p_output1[26]=t225*t6669 + t1923*t6674;
  p_output1[27]=0.15121*t1420 + 0.15121*t1568 + t225*t6602 + t1923*t6615;
  p_output1[28]=-0.281209*t1030 + 0.038749*t1170 + t1771*t6949 + t128*t6978 - 7.e-6*(t1920*t6949 + t108*t6978) + 4.e-6*(-1.*t1835*t6949 - 1.*t158*t6978) + 1.e-6*(t150 + t1656 + 4.e-6*(-1. + t7232));
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t2022*t205 - 1.*t10*t2846)*var2[1] + t7279*var2[2];
  p_output1[31]=t2022*var2[0] - 1.*t10*t2698*var2[1] + t205*t2698*var2[2] + ((t1645*t2727 + t2601*t2835 + t2632*t2835 + t2727*t2951)*t5999 + t2835*t7310 + t237*t7346 + t1645*(-1.*t237*t2601 - 1.*t237*t2632 - 1.*t2727*t5999 - 1.*t2727*t791))*var2[3];
  p_output1[32]=t206*t3113*var2[0] + (t2018*t205 + t10*t229*t3113)*var2[1] + (t10*t2018 - 1.*t205*t229*t3113)*var2[2] + (t206*t3176*t7310 + t206*t3008*t7346 + t1645*(-1.*t206*t2632*t3008 + t229*t2727*t3008 + t229*t237*t3130 - 1.*t206*t3130*t5999 + t7391 + t7395) + t5999*(t1645*t206*t3130 - 1.*t229*t2835*t3130 + t206*t2632*t3176 - 1.*t229*t2727*t3176 + t7401 + t7405))*var2[3] + (t1629*t7383 + t2964*(-1.*t2591*t3008 - 1.*t233*t3130 + t7391 + t7395) + t201*(t1629*t3130 + t2591*t3176 + t7401 + t7405) + t233*t7423)*var2[4];
  p_output1[33]=t206*t3565*var2[0] + (t205*t3537 + t10*t229*t3565)*var2[1] + (t10*t3537 - 1.*t205*t229*t3565)*var2[2] + (t206*t3632*t7310 + t206*t3429*t7346 + t1645*(-1.*t206*t2632*t3429 + t229*t2727*t3429 + t229*t237*t3607 - 1.*t206*t3607*t5999 + t7508 + t7510) + t5999*(t1645*t206*t3607 - 1.*t229*t2835*t3607 + t206*t2632*t3632 - 1.*t229*t2727*t3632 + t7515 + t7518))*var2[3] + (t3533*t7383 + t3488*t7423 + t2964*(-1.*t2591*t3429 - 1.*t233*t3607 + t7508 + t7510) + t201*(t1629*t3607 + t2591*t3632 + t7515 + t7518))*var2[4] + (t225*(t1585*t2576 + t1585*t3305 + t1618*t3331 + t2507*t3356) + t1239*(-1.*t194*t2576 - 1.*t194*t3305 - 1.*t186*t3331 - 1.*t2507*t3411))*var2[5];
  p_output1[34]=t4694*var2[0] + (t205*t4511 - 1.*t10*t4724)*var2[1] + (t10*t4511 + t205*t4724)*var2[2] + (t4659*t7310 + t4425*t7346 + t1645*(-1.*t2632*t4425 - 1.*t2727*t4463 - 1.*t237*t4751 - 1.*t4743*t5999 + t7668 + t7670) + t5999*(t2632*t4659 + t1645*t4743 + t2835*t4751 + t2727*t4783 + t7680 + t7681))*var2[3] + (t4493*t7383 + t4454*t7423 + t2964*(-1.*t2591*t4419 - 1.*t233*t4566 + t7563 + t7566 + t7668 + t7670) + t201*(t1629*t4566 + t2591*t4591 + t7581 + t7589 + t7680 + t7681))*var2[4] + (t1239*(-1.*t194*t4299 - 1.*t186*t4310 - 1.*t2507*t4402 - 1.*t2576*t4415 + t7563 + t7566) + t225*(t1585*t4299 + t1618*t4310 + t2576*t4326 + t2507*t4353 + t7581 + t7589) + t3865*t7601 + t4395*t7622)*var2[5] + (0.15121*t3918 + 0.15121*t4004 + t3865*t7556 + t4395*t7560 + t1239*(-1.*t2456*t3788 - 1.*t2379*t3841 - 1.*t163*t3978 - 1.*t182*t4140 + t7563 + t7566) + t225*(t1568*t3978 + t1420*t4140 + t2379*t4147 + t2456*t4202 + t7581 + t7589))*var2[12];
  p_output1[35]=t5919*var2[0] + (t205*t5828 - 1.*t10*t5924)*var2[1] + (t10*t5828 + t205*t5924)*var2[2] + (t5948*t7310 + t5667*t7346 + t5999*(t1645*t5888 + t2835*t5895 + t2632*t5948 + t2727*t5953 + t7918 + t7925) + t1645*(-1.*t2632*t5667 - 1.*t2727*t5697 - 1.*t237*t5895 - 1.*t5888*t5999 + t7933 + t7936))*var2[3] + (t5863*t7383 + t5682*t7423 + t201*(t1629*t5727 + t2591*t5857 + t7761 + t7765 + t7918 + t7925) + t2964*(-1.*t2591*t5641 - 1.*t233*t5727 + t7775 + t7788 + t7933 + t7936))*var2[4] + (t5284*t7601 + t5599*t7622 + t225*(t1618*t5466 + t1585*t5474 + t2576*t5535 + t2507*t5559 + t7761 + t7765) + t1239*(-1.*t186*t5466 - 1.*t194*t5474 - 1.*t2507*t5627 - 1.*t2576*t5636 + t7775 + t7788))*var2[5] + (0.15121*t5169 + 0.15121*t5208 + t5284*t7556 + t5599*t7560 + t225*(t1420*t5026 + t1568*t5085 + t2379*t5265 + t2456*t5298 + t7761 + t7765) + t1239*(-1.*t2379*t4887 - 1.*t2456*t4901 - 1.*t182*t5026 - 1.*t163*t5085 + t7775 + t7788))*var2[12] + (0.038749*t5130 - 0.281209*t5160 + t5250*t7818 + t128*t7840 + t4870*t7848 + t1098*t7862 + 4.e-6*(-1.*t5243*t7818 - 1.*t158*t7840 - 1.*t4836*t7848 - 1.*t1030*t7862) - 7.e-6*(t5257*t7818 + t108*t7840 + t4884*t7848 + t1170*t7862) + 1.e-6*(7.e-6*t4915 + 4.e-6*t4924 + 6.5e-11*t98))*var2[13];
  p_output1[36]=t2775;
  p_output1[37]=t7279;
  p_output1[38]=t2022*t205 + t10*t2846;
  p_output1[39]=t1645*t7310 + t5999*t7346;
  p_output1[40]=t2964*t7383 + t201*t7423;
  p_output1[41]=t1239*t7601 + t225*t7622;
  p_output1[42]=0.15121*t1970 + 0.15121*t1984 + t1239*t7556 + t225*t7560;
  p_output1[43]=-0.281209*t1835 + 0.038749*t1920 + 1.e-6*(-1. + 7.e-6*t1724 + 4.e-6*t2114 + t7232) + t1098*t7818 + t128*t7848 - 7.e-6*(t1170*t7818 + t108*t7848) + 4.e-6*(-1.*t1030*t7818 - 1.*t158*t7848);
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_dh_RlFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
