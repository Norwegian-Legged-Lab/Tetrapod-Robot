/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:09:40 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t329;
  double t345;
  double t365;
  double t179;
  double t199;
  double t304;
  double t396;
  double t421;
  double t309;
  double t380;
  double t388;
  double t440;
  double t446;
  double t452;
  double t305;
  double t478;
  double t495;
  double t497;
  double t509;
  double t531;
  double t604;
  double t606;
  double t616;
  double t671;
  double t719;
  double t752;
  double t802;
  double t830;
  double t315;
  double t326;
  double t458;
  double t467;
  double t477;
  double t545;
  double t547;
  double t560;
  double t577;
  double t592;
  double t816;
  double t818;
  double t175;
  double t854;
  double t899;
  double t923;
  double t954;
  double t979;
  double t1007;
  double t1057;
  double t1094;
  double t1132;
  double t1137;
  double t129;
  double t1254;
  double t1261;
  double t1263;
  double t824;
  double t1226;
  double t1234;
  double t1268;
  double t1290;
  double t1241;
  double t1269;
  double t1272;
  double t20;
  double t1297;
  double t1307;
  double t1324;
  double t1327;
  double t1343;
  double t1359;
  double t1363;
  double t1366;
  double t1367;
  double t1380;
  double t1381;
  double t1382;
  double t1402;
  double t1408;
  double t1409;
  double t1413;
  double t1414;
  double t1443;
  double t1505;
  double t1509;
  double t1518;
  double t1546;
  double t1564;
  double t1570;
  double t1591;
  double t1592;
  double t1596;
  double t1600;
  double t1603;
  double t1604;
  double t1630;
  double t1639;
  double t1650;
  double t1651;
  double t1656;
  double t1669;
  double t1687;
  double t1692;
  double t1827;
  double t1733;
  double t1737;
  double t1738;
  double t1752;
  double t1753;
  double t1760;
  double t1764;
  double t1794;
  double t1817;
  double t1822;
  double t1836;
  double t1846;
  double t1850;
  double t1865;
  double t1869;
  double t1876;
  double t1879;
  double t1882;
  double t1888;
  double t1914;
  double t1916;
  double t1922;
  double t1927;
  double t1972;
  double t1975;
  double t1979;
  double t1981;
  double t2091;
  double t2118;
  double t2137;
  double t2158;
  double t2159;
  double t2171;
  double t2175;
  double t2176;
  double t2178;
  double t2185;
  double t2198;
  double t2204;
  double t2205;
  double t2210;
  double t2212;
  double t2213;
  double t2216;
  double t2223;
  double t2227;
  double t2231;
  double t2236;
  double t2249;
  double t2269;
  double t2272;
  double t2280;
  double t2283;
  double t2289;
  double t2298;
  double t2300;
  double t2301;
  double t2316;
  double t2321;
  double t2068;
  double t2401;
  double t2343;
  double t2352;
  double t2374;
  double t2379;
  double t2381;
  double t2383;
  double t2388;
  double t2403;
  double t2409;
  double t2423;
  double t2433;
  double t2438;
  double t2446;
  double t2457;
  double t2459;
  double t2470;
  double t2472;
  double t2481;
  double t2486;
  double t2487;
  double t2509;
  double t2519;
  double t2520;
  double t1770;
  double t1854;
  double t1890;
  double t1905;
  double t1913;
  double t1955;
  double t1982;
  double t1994;
  double t1995;
  double t2009;
  double t2010;
  double t2017;
  double t2030;
  double t2047;
  double t2052;
  double t2055;
  double t2057;
  double t2066;
  double t2081;
  double t2085;
  double t2096;
  double t2110;
  double t2200;
  double t2261;
  double t2323;
  double t2339;
  double t2373;
  double t2450;
  double t2521;
  double t2523;
  double t2532;
  double t2536;
  double t2538;
  double t2539;
  double t2541;
  double t2542;
  double t2548;
  double t2596;
  double t2598;
  double t2605;
  double t1577;
  double t1599;
  double t1610;
  double t1614;
  double t1655;
  double t1693;
  double t1694;
  double t1699;
  double t1707;
  double t1708;
  double t1709;
  double t1710;
  double t1722;
  double t2628;
  double t2645;
  double t2646;
  double t2559;
  double t2566;
  double t2577;
  double t2658;
  double t2659;
  double t2661;
  double t2342;
  double t2550;
  double t2551;
  double t1621;
  double t1726;
  double t1731;
  double t2687;
  double t2688;
  double t2689;
  double t2769;
  double t2773;
  double t2781;
  double t2714;
  double t2715;
  double t2720;
  double t2667;
  double t2675;
  double t2679;
  double t2690;
  double t2836;
  double t2840;
  double t2841;
  double t2727;
  double t2835;
  double t2866;
  double t2812;
  double t2814;
  double t2823;
  double t2924;
  double t2928;
  double t2904;
  double t2905;
  double t2910;
  double t2692;
  double t2693;
  double t2694;
  double t2729;
  double t2736;
  double t2751;
  double t3032;
  double t3049;
  double t3051;
  double t3052;
  double t3054;
  double t3079;
  double t3171;
  double t3172;
  double t3180;
  double t3189;
  double t3191;
  double t3197;
  double t3198;
  double t3111;
  double t3123;
  double t3131;
  double t2889;
  double t2890;
  double t2894;
  double t3062;
  double t3066;
  double t3071;
  double t2944;
  double t2952;
  double t2959;
  double t3237;
  double t3243;
  double t3249;
  double t3252;
  double t3253;
  double t3224;
  double t3233;
  double t3293;
  double t3295;
  double t3298;
  double t3257;
  double t3287;
  double t3258;
  double t3269;
  double t3316;
  double t3337;
  double t3318;
  double t3334;
  double t3492;
  double t3520;
  double t3522;
  double t3527;
  double t3482;
  double t3483;
  double t3493;
  double t3562;
  double t3565;
  double t3566;
  double t3575;
  double t3442;
  double t3454;
  double t3427;
  double t3428;
  double t3662;
  double t3517;
  double t3526;
  double t3536;
  double t3538;
  double t3603;
  double t3604;
  double t3610;
  double t3621;
  double t3622;
  double t3632;
  double t3633;
  double t3634;
  double t3646;
  double t3671;
  double t3673;
  double t3681;
  double t3690;
  double t3694;
  double t3695;
  double t3697;
  double t3701;
  double t3707;
  double t3711;
  double t3718;
  double t3719;
  double t3720;
  double t3723;
  double t3728;
  double t3737;
  double t3744;
  double t3745;
  double t3599;
  double t3709;
  double t3649;
  double t3653;
  double t3656;
  double t3659;
  double t3586;
  double t3589;
  double t3593;
  double t3594;
  double t3781;
  double t3816;
  double t3794;
  double t3805;
  double t3807;
  double t3810;
  double t3761;
  double t3763;
  double t3768;
  double t3769;
  double t3920;
  double t3923;
  double t3925;
  double t3934;
  double t3940;
  double t3941;
  double t3434;
  double t3436;
  double t3465;
  double t3466;
  double t3478;
  double t3485;
  double t3498;
  double t3502;
  double t4057;
  double t4059;
  double t4064;
  double t4049;
  double t4053;
  double t4055;
  double t4017;
  double t4025;
  double t4028;
  double t4029;
  double t4056;
  double t4067;
  double t4075;
  double t4083;
  double t4089;
  double t4091;
  double t4102;
  double t4107;
  double t4110;
  double t3958;
  double t3962;
  double t3966;
  double t3969;
  double t3978;
  double t3982;
  double t3885;
  double t3891;
  double t3893;
  double t3905;
  double t3909;
  double t3913;
  double t4145;
  double t4148;
  double t4160;
  double t4138;
  double t4140;
  double t4143;
  double t4200;
  double t4202;
  double t4204;
  double t4213;
  double t4216;
  double t4226;
  double t4237;
  double t4239;
  double t4240;
  double t4166;
  double t4169;
  double t4172;
  double t4178;
  double t4212;
  double t4276;
  double t4277;
  double t4287;
  double t4254;
  double t4257;
  double t4269;
  double t4271;
  double t4272;
  double t4311;
  double t4312;
  double t4327;
  double t4332;
  double t4334;
  double t4335;
  double t4429;
  double t4405;
  double t4406;
  double t4412;
  double t4419;
  double t4427;
  double t4435;
  double t4439;
  double t4451;
  double t4452;
  double t4453;
  double t4456;
  double t4488;
  double t4524;
  double t4479;
  double t4481;
  double t4483;
  double t4493;
  double t4494;
  double t4496;
  double t4501;
  double t4504;
  double t4506;
  double t4510;
  double t4511;
  double t4513;
  double t4515;
  double t4523;
  double t4525;
  double t4527;
  double t4530;
  double t4541;
  double t4543;
  double t4549;
  double t4552;
  double t4553;
  double t4556;
  double t4558;
  double t4561;
  double t4567;
  double t4568;
  double t4573;
  double t4579;
  double t4638;
  double t4640;
  double t4643;
  double t4650;
  double t4658;
  double t4660;
  double t4661;
  double t4672;
  double t4681;
  double t4682;
  double t4512;
  double t4551;
  double t4581;
  double t4587;
  double t4590;
  double t4600;
  double t4605;
  double t4607;
  double t4619;
  double t4620;
  double t4623;
  double t4630;
  double t4768;
  double t4771;
  double t4774;
  double t4780;
  double t4781;
  double t4794;
  double t4796;
  double t4814;
  double t4815;
  double t4822;
  double t4826;
  double t3539;
  double t3543;
  double t3553;
  double t4689;
  double t4706;
  double t4710;
  double t4714;
  double t3576;
  double t3578;
  double t3581;
  double t4892;
  double t4893;
  double t4894;
  double t4899;
  double t4900;
  double t4903;
  double t4906;
  double t4909;
  double t4911;
  double t4913;
  double t4915;
  double t4919;
  double t4921;
  double t4935;
  double t4961;
  double t4962;
  double t4963;
  double t4965;
  double t4980;
  double t4981;
  double t4985;
  double t4988;
  double t4614;
  double t4715;
  double t4719;
  double t4722;
  double t4732;
  double t4736;
  double t4653;
  double t4669;
  double t4685;
  double t4686;
  double t4757;
  double t4830;
  double t5058;
  double t5061;
  double t5068;
  double t5070;
  double t5074;
  double t5075;
  double t4777;
  double t4784;
  double t4805;
  double t4808;
  double t4831;
  double t4834;
  double t4837;
  double t4844;
  double t3841;
  double t3846;
  double t3848;
  double t3858;
  double t3862;
  double t3864;
  double t4428;
  double t4448;
  double t4457;
  double t4458;
  double t4464;
  double t4470;
  double t4472;
  double t4474;
  double t5179;
  double t5181;
  double t5182;
  double t5161;
  double t5164;
  double t5170;
  double t5146;
  double t5150;
  double t5154;
  double t5156;
  double t5175;
  double t5195;
  double t5201;
  double t5218;
  double t5219;
  double t5222;
  double t5234;
  double t5246;
  double t5247;
  double t5093;
  double t5101;
  double t5104;
  double t5078;
  double t5085;
  double t5087;
  double t5261;
  double t5264;
  double t5266;
  double t5269;
  double t5270;
  double t5275;
  double t5120;
  double t5121;
  double t5122;
  double t5111;
  double t5112;
  double t5114;
  double t5312;
  double t5315;
  double t5320;
  double t5292;
  double t5293;
  double t5294;
  double t5278;
  double t5295;
  double t5280;
  double t5284;
  double t5288;
  double t5302;
  double t5323;
  double t5350;
  double t5360;
  double t5362;
  double t5368;
  double t5370;
  double t5378;
  double t5303;
  double t5306;
  double t5309;
  double t5417;
  double t5418;
  double t5420;
  double t5382;
  double t5384;
  double t5386;
  double t1463;
  double t1464;
  double t1473;
  double t2702;
  double t2703;
  double t2708;
  double t5458;
  double t5461;
  double t5463;
  double t2580;
  double t2581;
  double t2592;
  double t5626;
  double t5674;
  double t5721;
  double t5723;
  double t5768;
  double t5771;
  double t5629;
  double t5645;
  double t5647;
  double t5675;
  double t5676;
  double t5678;
  double t5728;
  double t5729;
  double t5730;
  double t5743;
  double t5748;
  double t5749;
  double t5890;
  double t5897;
  double t5904;
  double t5907;
  double t6007;
  double t6016;
  double t6032;
  double t6055;
  double t4342;
  double t4344;
  double t4348;
  double t4044;
  double t4077;
  double t4079;
  double t6222;
  double t6223;
  double t4296;
  double t4302;
  double t4303;
  double t6232;
  double t6234;
  double t5969;
  double t5976;
  double t5978;
  double t5988;
  double t5989;
  double t5991;
  double t6414;
  double t6416;
  double t6418;
  double t6421;
  double t6446;
  double t6448;
  double t6460;
  double t6461;
  double t6465;
  double t6466;
  double t6467;
  double t6473;
  double t6474;
  double t6478;
  double t6479;
  double t6486;
  double t6487;
  double t6494;
  double t6495;
  double t6503;
  double t6508;
  double t6509;
  double t6347;
  double t6350;
  double t6089;
  double t6098;
  double t6104;
  double t6119;
  double t6125;
  double t6126;
  double t6371;
  double t6380;
  double t5423;
  double t5430;
  double t5431;
  double t6633;
  double t6639;
  double t5390;
  double t5391;
  double t5396;
  double t5158;
  double t5205;
  double t5216;
  double t6657;
  double t6666;
  double t5582;
  double t5584;
  double t5586;
  double t6923;
  double t6964;
  double t7041;
  double t7043;
  double t7055;
  double t7058;
  double t6930;
  double t6932;
  double t6934;
  double t6969;
  double t6972;
  double t6973;
  double t7033;
  double t7034;
  double t7035;
  double t7066;
  double t7075;
  double t7076;
  double t7208;
  double t7210;
  double t7221;
  double t7224;
  double t7306;
  double t7310;
  double t7321;
  double t7326;
  double t7445;
  double t7446;
  double t7455;
  double t7456;
  double t7283;
  double t7286;
  double t7288;
  double t7290;
  double t7291;
  double t7298;
  double t7581;
  double t7585;
  double t7586;
  double t7590;
  double t7595;
  double t7597;
  double t7599;
  double t7601;
  double t7602;
  double t7604;
  double t7605;
  double t7607;
  double t7608;
  double t7610;
  double t7611;
  double t7616;
  double t7618;
  double t7623;
  double t7625;
  double t7628;
  double t7629;
  double t7630;
  double t7518;
  double t7527;
  double t7345;
  double t7346;
  double t7347;
  double t7351;
  double t7352;
  double t7354;
  double t7547;
  double t7559;
  double t7698;
  double t7708;
  double t7719;
  double t7728;
  double t6869;
  double t6880;
  double t6891;
  double t6820;
  t329 = Cos(var1[14]);
  t345 = -1.*t329;
  t365 = 1. + t345;
  t179 = Cos(var1[13]);
  t199 = -1.*t179;
  t304 = 1. + t199;
  t396 = Sin(var1[14]);
  t421 = 4.e-6*t396;
  t309 = Sin(var1[13]);
  t380 = 1.000000000016*t365;
  t388 = -7.e-6*t365;
  t440 = t388 + t421;
  t446 = -7.e-6*t440;
  t452 = -1. + t380 + t446;
  t305 = -7.e-6*t304;
  t478 = -6.5e-11*t365;
  t495 = 1. + t478;
  t497 = -7.e-6*t495;
  t509 = 7.e-6*t365;
  t531 = t497 + t509 + t421;
  t604 = -2.8e-11*t365;
  t606 = -1. + t329;
  t616 = 4.e-6*t606;
  t671 = -7.e-6*t396;
  t719 = t616 + t671;
  t752 = -7.e-6*t719;
  t802 = t604 + t752 + t396;
  t830 = Sin(var1[12]);
  t315 = -4.e-6*t309;
  t326 = t305 + t315;
  t458 = t326*t452;
  t467 = -6.5e-11*t304;
  t477 = 1. + t467;
  t545 = t477*t531;
  t547 = -1. + t179;
  t560 = 4.e-6*t547;
  t577 = 7.e-6*t309;
  t592 = t560 + t577;
  t816 = t592*t802;
  t818 = t458 + t545 + t816;
  t175 = Cos(var1[12]);
  t854 = -1.000000000016*t304;
  t899 = 1. + t854;
  t923 = t899*t452;
  t954 = 4.e-6*t309;
  t979 = t305 + t954;
  t1007 = t979*t531;
  t1057 = 2.8e-11*t304;
  t1094 = t1057 + t309;
  t1132 = t1094*t802;
  t1137 = t923 + t1007 + t1132;
  t129 = Cos(var1[5]);
  t1254 = -1.*t830*t818;
  t1261 = t175*t1137;
  t1263 = t1254 + t1261;
  t824 = t175*t818;
  t1226 = t830*t1137;
  t1234 = t824 + t1226;
  t1268 = Sin(var1[5]);
  t1290 = Cos(var1[3]);
  t1241 = t129*t1234;
  t1269 = t1263*t1268;
  t1272 = t1241 + t1269;
  t20 = Sin(var1[3]);
  t1297 = Cos(var1[4]);
  t1307 = -1.*t309;
  t1324 = t1057 + t1307;
  t1327 = t1324*t452;
  t1343 = -7.e-6*t309;
  t1359 = t560 + t1343;
  t1363 = t1359*t531;
  t1366 = -1.000000000049*t304;
  t1367 = 1. + t1366;
  t1380 = t1367*t802;
  t1381 = t1327 + t1363 + t1380;
  t1382 = t1297*t1381;
  t1402 = Sin(var1[4]);
  t1408 = t129*t1263;
  t1409 = -1.*t1234*t1268;
  t1413 = t1408 + t1409;
  t1414 = -1.*t1402*t1413;
  t1443 = t1382 + t1414;
  t1505 = -1.*t1381*t1402;
  t1509 = -1.*t1297*t1413;
  t1518 = t1505 + t1509;
  t1546 = -1.000000000049*t365;
  t1564 = 4.e-6*t719;
  t1570 = 1. + t1546 + t1564;
  t1591 = 4.e-6*t495;
  t1592 = 7.e-6*t396;
  t1596 = t1591 + t616 + t1592;
  t1600 = 2.8e-11*t365;
  t1603 = 4.e-6*t440;
  t1604 = t1600 + t1603 + t396;
  t1630 = t1094*t1570;
  t1639 = t979*t1596;
  t1650 = t899*t1604;
  t1651 = t1630 + t1639 + t1650;
  t1656 = t592*t1570;
  t1669 = t477*t1596;
  t1687 = t326*t1604;
  t1692 = t1656 + t1669 + t1687;
  t1827 = -1.*t396;
  t1733 = 4.e-6*t365;
  t1737 = t1733 + t671;
  t1738 = 4.e-6*t1737;
  t1752 = -4.e-6*t396;
  t1753 = t388 + t1752;
  t1760 = -7.e-6*t1753;
  t1764 = 1. + t478 + t1738 + t1760;
  t1794 = 1.000000000049*t365;
  t1817 = -1. + t1794;
  t1822 = 4.e-6*t1817;
  t1836 = t1600 + t1827;
  t1846 = -7.e-6*t1836;
  t1850 = t1822 + t616 + t1846 + t671;
  t1865 = -1.000000000016*t365;
  t1869 = 1. + t1865;
  t1876 = -7.e-6*t1869;
  t1879 = t604 + t1827;
  t1882 = 4.e-6*t1879;
  t1888 = t1876 + t388 + t1882 + t421;
  t1914 = t979*t1764;
  t1916 = t1094*t1850;
  t1922 = t899*t1888;
  t1927 = t1914 + t1916 + t1922;
  t1972 = t477*t1764;
  t1975 = t592*t1850;
  t1979 = t326*t1888;
  t1981 = t1972 + t1975 + t1979;
  t2091 = -2.8e-11*t304;
  t2118 = -2.598649999999999e-7*var1[14];
  t2137 = 0.148705*t495;
  t2158 = -2.3905277499999995e-16*t365;
  t2159 = -0.038922999986*t1737;
  t2171 = -0.80315*t1753;
  t2175 = t509 + t421;
  t2176 = -0.503149000008*t2175;
  t2178 = t616 + t1592;
  t2185 = -0.038924*t2178;
  t2198 = t2118 + t2137 + t2158 + t2159 + t2171 + t2176 + t2185;
  t2204 = 1.0394599999999997e-12*var1[14];
  t2205 = 1. + t1546;
  t2210 = -0.038924*t2205;
  t2212 = -0.03892299998790722*t365;
  t2213 = -0.80315*t1836;
  t2216 = 0.148705*t719;
  t2223 = t1733 + t1592;
  t2227 = -3.6777349999999994e-6*t2223;
  t2231 = t604 + t396;
  t2236 = -0.503149000008*t2231;
  t2249 = t2204 + t2210 + t2212 + t2213 + t2216 + t2227 + t2236;
  t2269 = 1.8190549999999993e-12*var1[14];
  t2272 = -0.80315*t1869;
  t2280 = -0.5031490000160505*t365;
  t2283 = -0.038922999986*t1879;
  t2289 = t509 + t1752;
  t2298 = -3.6777349999999994e-6*t2289;
  t2300 = 0.148705*t440;
  t2301 = t1600 + t396;
  t2316 = -0.038924*t2301;
  t2321 = t2269 + t2272 + t2280 + t2283 + t2298 + t2300 + t2316;
  t2068 = 4.e-6*t304;
  t2401 = 7.e-6*t304;
  t2343 = -1.*t175;
  t2352 = 1. + t2343;
  t2374 = 0.15121*t830;
  t2379 = 1.0248489999999998e-12*var1[13];
  t2381 = -0.28120900000849935*t304;
  t2383 = t2091 + t1307;
  t2388 = -0.038748999993*t2383;
  t2403 = t2401 + t315;
  t2409 = -2.123459e-6*t2403;
  t2423 = t979*t2198;
  t2433 = t1094*t2249;
  t2438 = t899*t2321;
  t2446 = t2379 + t2381 + t2388 + t2409 + t2423 + t2433 + t2438;
  t2457 = -1.4640699999999997e-7*var1[13];
  t2459 = -1.38024835e-16*t304;
  t2470 = t2068 + t1343;
  t2472 = -0.038748999993*t2470;
  t2481 = t2401 + t954;
  t2486 = -0.281209000004*t2481;
  t2487 = t477*t2198;
  t2509 = t592*t2249;
  t2519 = t326*t2321;
  t2520 = t2457 + t2459 + t2472 + t2486 + t2487 + t2509 + t2519;
  t1770 = t1359*t1764;
  t1854 = t1367*t1850;
  t1890 = t1324*t1888;
  t1905 = t1770 + t1854 + t1890;
  t1913 = t1297*t1905;
  t1955 = t175*t1927;
  t1982 = -1.*t830*t1981;
  t1994 = t1955 + t1982;
  t1995 = t129*t1994;
  t2009 = t830*t1927;
  t2010 = t175*t1981;
  t2017 = t2009 + t2010;
  t2030 = -1.*t2017*t1268;
  t2047 = t1995 + t2030;
  t2052 = -1.*t1402*t2047;
  t2055 = t1913 + t2052;
  t2057 = 5.856279999999999e-13*var1[13];
  t2066 = -0.0387489999948987*t304;
  t2081 = t2068 + t577;
  t2085 = -2.123459e-6*t2081;
  t2096 = t2091 + t309;
  t2110 = -0.281209000004*t2096;
  t2200 = t1359*t2198;
  t2261 = t1367*t2249;
  t2323 = t1324*t2321;
  t2339 = t2057 + t2066 + t2085 + t2110 + t2200 + t2261 + t2323;
  t2373 = -0.15121*t2352;
  t2450 = t175*t2446;
  t2521 = -1.*t830*t2520;
  t2523 = t2373 + t2374 + t2450 + t2521;
  t2532 = t129*t2523;
  t2536 = 0.15121*t2352;
  t2538 = t830*t2446;
  t2539 = t175*t2520;
  t2541 = t2536 + t2374 + t2538 + t2539;
  t2542 = -1.*t2541*t1268;
  t2548 = t2532 + t2542;
  t2596 = t1297*t2339;
  t2598 = -1.*t1402*t2548;
  t2605 = t2596 + t2598;
  t1577 = t1367*t1570;
  t1599 = t1359*t1596;
  t1610 = t1324*t1604;
  t1614 = t1577 + t1599 + t1610;
  t1655 = t175*t1651;
  t1693 = -1.*t830*t1692;
  t1694 = t1655 + t1693;
  t1699 = t129*t1694;
  t1707 = t830*t1651;
  t1708 = t175*t1692;
  t1709 = t1707 + t1708;
  t1710 = -1.*t1709*t1268;
  t1722 = t1699 + t1710;
  t2628 = t1905*t1402;
  t2645 = t1297*t2047;
  t2646 = t2628 + t2645;
  t2559 = t2339*t1402;
  t2566 = t1297*t2548;
  t2577 = t2559 + t2566;
  t2658 = t1297*t1614;
  t2659 = -1.*t1402*t1722;
  t2661 = t2658 + t2659;
  t2342 = -1.*t2339*t1402;
  t2550 = -1.*t1297*t2548;
  t2551 = t2342 + t2550;
  t1621 = t1614*t1402;
  t1726 = t1297*t1722;
  t1731 = t1621 + t1726;
  t2687 = t129*t2541;
  t2688 = t2523*t1268;
  t2689 = t2687 + t2688;
  t2769 = -1.*t129*t1234;
  t2773 = -1.*t1263*t1268;
  t2781 = t2769 + t2773;
  t2714 = t129*t1709;
  t2715 = t1694*t1268;
  t2720 = t2714 + t2715;
  t2667 = t129*t2017;
  t2675 = t1994*t1268;
  t2679 = t2667 + t2675;
  t2690 = t2679*t2689;
  t2836 = -1.*t129*t2541;
  t2840 = -1.*t2523*t1268;
  t2841 = t2836 + t2840;
  t2727 = -1.*t2720*t2689;
  t2835 = t2679*t2548;
  t2866 = t2047*t2689;
  t2812 = -1.*t129*t2017;
  t2814 = -1.*t1994*t1268;
  t2823 = t2812 + t2814;
  t2924 = -1.*t2720*t2548;
  t2928 = -1.*t1722*t2689;
  t2904 = -1.*t129*t1709;
  t2905 = -1.*t1694*t1268;
  t2910 = t2904 + t2905;
  t2692 = t2646*t2577;
  t2693 = t2055*t2605;
  t2694 = t2690 + t2692 + t2693;
  t2729 = -1.*t1731*t2577;
  t2736 = -1.*t2661*t2605;
  t2751 = t2727 + t2729 + t2736;
  t3032 = 0.15121*t175;
  t3049 = -0.15121*t830;
  t3051 = -1.*t830*t2446;
  t3052 = -1.*t175*t2520;
  t3054 = t3032 + t3049 + t3051 + t3052;
  t3079 = t3032 + t2374 + t2450 + t2521;
  t3171 = -1.*t175*t818;
  t3172 = -1.*t830*t1137;
  t3180 = t3171 + t3172;
  t3189 = t129*t3180;
  t3191 = t3189 + t2773;
  t3197 = t3180*t1268;
  t3198 = t1408 + t3197;
  t3111 = -1.*t830*t1651;
  t3123 = -1.*t175*t1692;
  t3131 = t3111 + t3123;
  t2889 = t1905*t2339;
  t2890 = t2047*t2548;
  t2894 = t2889 + t2890 + t2690;
  t3062 = -1.*t830*t1927;
  t3066 = -1.*t175*t1981;
  t3071 = t3062 + t3066;
  t2944 = -1.*t1614*t2339;
  t2952 = -1.*t1722*t2548;
  t2959 = t2944 + t2952 + t2727;
  t3237 = t3071*t1268;
  t3243 = t1995 + t3237;
  t3249 = t129*t3079;
  t3252 = t3054*t1268;
  t3253 = t3249 + t3252;
  t3224 = t3131*t1268;
  t3233 = t1699 + t3224;
  t3293 = t129*t3054;
  t3295 = -1.*t3079*t1268;
  t3298 = t3293 + t3295;
  t3257 = t2679*t3253;
  t3287 = t3243*t2689;
  t3258 = t129*t3071;
  t3269 = t3258 + t2814;
  t3316 = -1.*t2720*t3253;
  t3337 = -1.*t3233*t2689;
  t3318 = t129*t3131;
  t3334 = t3318 + t2905;
  t3492 = 2.8e-11*t309;
  t3520 = -7.e-6*t179;
  t3522 = t3520 + t315;
  t3527 = t199 + t3492;
  t3482 = 4.e-6*t179;
  t3483 = t3482 + t1343;
  t3493 = t179 + t3492;
  t3562 = t3522*t1764;
  t3565 = -1.000000000049*t309*t1850;
  t3566 = t3527*t1888;
  t3575 = t3562 + t3565 + t3566;
  t3442 = 7.e-6*t179;
  t3454 = t3442 + t315;
  t3427 = -4.e-6*t179;
  t3428 = t3427 + t1343;
  t3662 = -2.8e-11*t309;
  t3517 = -1.000000000049*t309*t1570;
  t3526 = t3522*t1596;
  t3536 = t3527*t1604;
  t3538 = t3517 + t3526 + t3536;
  t3603 = t3520 + t954;
  t3604 = -0.038748999993*t3603;
  t3610 = t3482 + t577;
  t3621 = -0.281209000004*t3610;
  t3622 = -1.38024835e-16*t309;
  t3632 = -6.5e-11*t309*t2198;
  t3633 = t3454*t2249;
  t3634 = t3428*t2321;
  t3646 = -1.4640699999999997e-7 + t3604 + t3621 + t3622 + t3632 + t3633 + t3634;
  t3671 = t179 + t3662;
  t3673 = -0.281209000004*t3671;
  t3681 = t3442 + t954;
  t3690 = -2.123459e-6*t3681;
  t3694 = -0.0387489999948987*t309;
  t3695 = t3522*t2198;
  t3697 = -1.000000000049*t309*t2249;
  t3701 = t3527*t2321;
  t3707 = 5.856279999999999e-13 + t3673 + t3690 + t3694 + t3695 + t3697 + t3701;
  t3711 = t199 + t3662;
  t3718 = -0.038748999993*t3711;
  t3719 = t3427 + t577;
  t3720 = -2.123459e-6*t3719;
  t3723 = -0.28120900000849935*t309;
  t3728 = t3483*t2198;
  t3737 = t3493*t2249;
  t3744 = -1.000000000016*t309*t2321;
  t3745 = 1.0248489999999998e-12 + t3718 + t3720 + t3723 + t3728 + t3737 + t3744;
  t3599 = t3575*t2339;
  t3709 = t1905*t3707;
  t3649 = -6.5e-11*t309*t1764;
  t3653 = t3454*t1850;
  t3656 = t3428*t1888;
  t3659 = t3649 + t3653 + t3656;
  t3586 = t3483*t1764;
  t3589 = t3493*t1850;
  t3593 = -1.000000000016*t309*t1888;
  t3594 = t3586 + t3589 + t3593;
  t3781 = -1.*t3538*t2339;
  t3816 = -1.*t1614*t3707;
  t3794 = t3454*t1570;
  t3805 = -6.5e-11*t309*t1596;
  t3807 = t3428*t1604;
  t3810 = t3794 + t3805 + t3807;
  t3761 = t3493*t1570;
  t3763 = t3483*t1596;
  t3768 = -1.000000000016*t309*t1604;
  t3769 = t3761 + t3763 + t3768;
  t3920 = -1.*t830*t3646;
  t3923 = t175*t3745;
  t3925 = t3920 + t3923;
  t3934 = t175*t3646;
  t3940 = t830*t3745;
  t3941 = t3934 + t3940;
  t3434 = t3428*t452;
  t3436 = -6.5e-11*t309*t531;
  t3465 = t3454*t802;
  t3466 = t3434 + t3436 + t3465;
  t3478 = -1.000000000016*t309*t452;
  t3485 = t3483*t531;
  t3498 = t3493*t802;
  t3502 = t3478 + t3485 + t3498;
  t4057 = t175*t3466;
  t4059 = t830*t3502;
  t4064 = t4057 + t4059;
  t4049 = -1.*t830*t3466;
  t4053 = t175*t3502;
  t4055 = t4049 + t4053;
  t4017 = t3527*t452;
  t4025 = t3522*t531;
  t4028 = -1.000000000049*t309*t802;
  t4029 = t4017 + t4025 + t4028;
  t4056 = t129*t4055;
  t4067 = -1.*t4064*t1268;
  t4075 = t4056 + t4067;
  t4083 = t129*t4064;
  t4089 = t4055*t1268;
  t4091 = t4083 + t4089;
  t4102 = t1297*t4029;
  t4107 = -1.*t1402*t4075;
  t4110 = t4102 + t4107;
  t3958 = t175*t3810;
  t3962 = t830*t3769;
  t3966 = t3958 + t3962;
  t3969 = -1.*t830*t3810;
  t3978 = t175*t3769;
  t3982 = t3969 + t3978;
  t3885 = t175*t3659;
  t3891 = t830*t3594;
  t3893 = t3885 + t3891;
  t3905 = -1.*t830*t3659;
  t3909 = t175*t3594;
  t3913 = t3905 + t3909;
  t4145 = t129*t3893;
  t4148 = t3913*t1268;
  t4160 = t4145 + t4148;
  t4138 = t129*t3966;
  t4140 = t3982*t1268;
  t4143 = t4138 + t4140;
  t4200 = t129*t3941;
  t4202 = t3925*t1268;
  t4204 = t4200 + t4202;
  t4213 = t129*t3925;
  t4216 = -1.*t3941*t1268;
  t4226 = t4213 + t4216;
  t4237 = t129*t3982;
  t4239 = -1.*t3966*t1268;
  t4240 = t4237 + t4239;
  t4166 = t129*t3913;
  t4169 = -1.*t3893*t1268;
  t4172 = t4166 + t4169;
  t4178 = t4160*t2689;
  t4212 = t2679*t4204;
  t4276 = t3575*t1402;
  t4277 = t1297*t4172;
  t4287 = t4276 + t4277;
  t4254 = -1.*t4143*t2689;
  t4257 = -1.*t2720*t4204;
  t4269 = t3538*t1402;
  t4271 = t1297*t4240;
  t4272 = t4269 + t4271;
  t4311 = t3707*t1402;
  t4312 = t1297*t4226;
  t4327 = t4311 + t4312;
  t4332 = t1297*t3707;
  t4334 = -1.*t1402*t4226;
  t4335 = t4332 + t4334;
  t4429 = 4.e-6*t329;
  t4405 = -7.e-6*t329;
  t4406 = t4405 + t1752;
  t4412 = -7.e-6*t4406;
  t4419 = -2.8e-11*t396;
  t4427 = t329 + t4412 + t4419;
  t4435 = 7.000000000455e-6*t396;
  t4439 = t4429 + t4435;
  t4451 = t4429 + t671;
  t4452 = -7.e-6*t4451;
  t4453 = 1.000000000016*t396;
  t4456 = t4452 + t4453;
  t4488 = 7.e-6*t329;
  t4524 = 2.8e-11*t396;
  t4479 = -4.e-6*t329;
  t4481 = t4479 + t671;
  t4483 = -0.80315*t4481;
  t4493 = t4488 + t1752;
  t4494 = -0.038924*t4493;
  t4496 = t4405 + t421;
  t4501 = -0.038922999986*t4496;
  t4504 = t4429 + t1592;
  t4506 = -0.503149000008*t4504;
  t4510 = -9.666064052774999e-12*t396;
  t4511 = -2.598649999999999e-7 + t4483 + t4494 + t4501 + t4506 + t4510;
  t4513 = 0.148705*t4406;
  t4515 = t329 + t4419;
  t4523 = -0.503149000008*t4515;
  t4525 = t345 + t4524;
  t4527 = -0.80315*t4525;
  t4530 = t4488 + t421;
  t4541 = -3.6777349999999994e-6*t4530;
  t4543 = 1.0000140000590574e-6*t396;
  t4549 = 1.0394599999999997e-12 + t4513 + t4523 + t4527 + t4541 + t4543;
  t4552 = 0.148705*t4451;
  t4553 = t345 + t4419;
  t4556 = -0.038922999986*t4553;
  t4558 = t329 + t4524;
  t4561 = -0.038924*t4558;
  t4567 = t4479 + t1592;
  t4568 = -3.6777349999999994e-6*t4567;
  t4573 = 0.30000099999679997*t396;
  t4579 = 1.8190549999999993e-12 + t4552 + t4556 + t4561 + t4568 + t4573;
  t4638 = -7.e-6*t4481;
  t4640 = 4.e-6*t4496;
  t4643 = -6.5e-11*t396;
  t4650 = t4638 + t4640 + t4643;
  t4658 = 4.e-6*t4553;
  t4660 = 1.12e-16*t396;
  t4661 = t4429 + t4658 + t4660;
  t4672 = -7.e-6*t4525;
  t4681 = 1.96e-16*t396;
  t4682 = t4405 + t4672 + t4681;
  t4512 = t979*t4511;
  t4551 = t1094*t4549;
  t4581 = t899*t4579;
  t4587 = t4512 + t4551 + t4581;
  t4590 = t1359*t4511;
  t4600 = t1367*t4549;
  t4605 = t1324*t4579;
  t4607 = t4590 + t4600 + t4605;
  t4619 = t477*t4511;
  t4620 = t592*t4549;
  t4623 = t326*t4579;
  t4630 = t4619 + t4620 + t4623;
  t4768 = 4.e-6*t4406;
  t4771 = -1.000000000049*t396;
  t4774 = t4768 + t4771;
  t4780 = -4.00000000026e-6*t396;
  t4781 = t4488 + t4780;
  t4794 = 4.e-6*t4451;
  t4796 = t329 + t4794 + t4524;
  t4814 = t1367*t4774;
  t4815 = t1359*t4781;
  t4822 = t1324*t4796;
  t4826 = t4814 + t4815 + t4822;
  t3539 = t1927*t2446;
  t3543 = t1981*t2520;
  t3553 = t3539 + t2889 + t3543;
  t4689 = t1359*t4650;
  t4706 = t1324*t4661;
  t4710 = t1367*t4682;
  t4714 = t4689 + t4706 + t4710;
  t3576 = -1.*t1651*t2446;
  t3578 = -1.*t1692*t2520;
  t3581 = t3576 + t2944 + t3578;
  t4892 = t2198*t4650;
  t4893 = t1764*t4511;
  t4894 = t1850*t4549;
  t4899 = t1888*t4579;
  t4900 = t4682*t2249;
  t4903 = t4661*t2321;
  t4906 = t4892 + t4893 + t4894 + t4899 + t4900 + t4903;
  t4909 = -1.*t2198*t4781;
  t4911 = -1.*t1570*t4549;
  t4913 = -1.*t4511*t1596;
  t4915 = -1.*t4579*t1604;
  t4919 = -1.*t4774*t2249;
  t4921 = -1.*t4796*t2321;
  t4935 = t4909 + t4911 + t4913 + t4915 + t4919 + t4921;
  t4961 = t1764*t2198;
  t4962 = t1850*t2249;
  t4963 = t1888*t2321;
  t4965 = t4961 + t4962 + t4963;
  t4980 = -1.*t2198*t1596;
  t4981 = -1.*t1570*t2249;
  t4985 = -1.*t1604*t2321;
  t4988 = t4980 + t4981 + t4985;
  t4614 = t1905*t4607;
  t4715 = t4714*t2339;
  t4719 = t477*t4650;
  t4722 = t326*t4661;
  t4732 = t592*t4682;
  t4736 = t4719 + t4722 + t4732;
  t4653 = t979*t4650;
  t4669 = t899*t4661;
  t4685 = t1094*t4682;
  t4686 = t4653 + t4669 + t4685;
  t4757 = -1.*t4607*t1614;
  t4830 = -1.*t4826*t2339;
  t5058 = t830*t4587;
  t5061 = t175*t4630;
  t5068 = t5058 + t5061;
  t5070 = t175*t4587;
  t5074 = -1.*t830*t4630;
  t5075 = t5070 + t5074;
  t4777 = t1094*t4774;
  t4784 = t979*t4781;
  t4805 = t899*t4796;
  t4808 = t4777 + t4784 + t4805;
  t4831 = t592*t4774;
  t4834 = t477*t4781;
  t4837 = t326*t4796;
  t4844 = t4831 + t4834 + t4837;
  t3841 = t2017*t2541;
  t3846 = t1994*t2523;
  t3848 = t2889 + t3841 + t3846;
  t3858 = -1.*t1709*t2541;
  t3862 = -1.*t1694*t2523;
  t3864 = t2944 + t3858 + t3862;
  t4428 = t1094*t4427;
  t4448 = t979*t4439;
  t4457 = t899*t4456;
  t4458 = t4428 + t4448 + t4457;
  t4464 = t592*t4427;
  t4470 = t477*t4439;
  t4472 = t326*t4456;
  t4474 = t4464 + t4470 + t4472;
  t5179 = t830*t4458;
  t5181 = t175*t4474;
  t5182 = t5179 + t5181;
  t5161 = t175*t4458;
  t5164 = -1.*t830*t4474;
  t5170 = t5161 + t5164;
  t5146 = t1367*t4427;
  t5150 = t1359*t4439;
  t5154 = t1324*t4456;
  t5156 = t5146 + t5150 + t5154;
  t5175 = t129*t5170;
  t5195 = -1.*t5182*t1268;
  t5201 = t5175 + t5195;
  t5218 = t129*t5182;
  t5219 = t5170*t1268;
  t5222 = t5218 + t5219;
  t5234 = t1297*t5156;
  t5246 = -1.*t1402*t5201;
  t5247 = t5234 + t5246;
  t5093 = -1.*t830*t4736;
  t5101 = t175*t4686;
  t5104 = t5093 + t5101;
  t5078 = t175*t4736;
  t5085 = t830*t4686;
  t5087 = t5078 + t5085;
  t5261 = t129*t5075;
  t5264 = -1.*t5068*t1268;
  t5266 = t5261 + t5264;
  t5269 = t129*t5068;
  t5270 = t5075*t1268;
  t5275 = t5269 + t5270;
  t5120 = t175*t4808;
  t5121 = -1.*t830*t4844;
  t5122 = t5120 + t5121;
  t5111 = t830*t4808;
  t5112 = t175*t4844;
  t5114 = t5111 + t5112;
  t5312 = t129*t5114;
  t5315 = t5122*t1268;
  t5320 = t5312 + t5315;
  t5292 = t129*t5087;
  t5293 = t5104*t1268;
  t5294 = t5292 + t5293;
  t5278 = t2679*t5275;
  t5295 = t5294*t2689;
  t5280 = t129*t5104;
  t5284 = -1.*t5087*t1268;
  t5288 = t5280 + t5284;
  t5302 = -1.*t5275*t2720;
  t5323 = -1.*t5320*t2689;
  t5350 = t4607*t1402;
  t5360 = t1297*t5266;
  t5362 = t5350 + t5360;
  t5368 = t1297*t4607;
  t5370 = -1.*t1402*t5266;
  t5378 = t5368 + t5370;
  t5303 = t129*t5122;
  t5306 = -1.*t5114*t1268;
  t5309 = t5303 + t5306;
  t5417 = t4826*t1402;
  t5418 = t1297*t5309;
  t5420 = t5417 + t5418;
  t5382 = t4714*t1402;
  t5384 = t1297*t5288;
  t5386 = t5382 + t5384;
  t1463 = t1290*t1272;
  t1464 = -1.*t20*t1443;
  t1473 = t1463 + t1464;
  t2702 = -1.*t1614*t1402;
  t2703 = -1.*t1297*t1722;
  t2708 = t2702 + t2703;
  t5458 = t1381*t1402;
  t5461 = t1297*t1413;
  t5463 = t5458 + t5461;
  t2580 = -1.*t1905*t1402;
  t2581 = -1.*t1297*t2047;
  t2592 = t2580 + t2581;
  t5626 = -1.*t2679*t2689;
  t5674 = t1272*t2689;
  t5721 = -1.*t2679*t2548;
  t5723 = -1.*t2047*t2689;
  t5768 = t1272*t2548;
  t5771 = t1413*t2689;
  t5629 = -1.*t2646*t2577;
  t5645 = -1.*t2055*t2605;
  t5647 = t5626 + t5629 + t5645;
  t5675 = t5463*t2577;
  t5676 = t1443*t2605;
  t5678 = t5674 + t5675 + t5676;
  t5728 = -1.*t1905*t2339;
  t5729 = -1.*t2047*t2548;
  t5730 = t5728 + t5729 + t5626;
  t5743 = t1381*t2339;
  t5748 = t1413*t2548;
  t5749 = t5743 + t5748 + t5674;
  t5890 = -1.*t2679*t3253;
  t5897 = -1.*t3243*t2689;
  t5904 = t1272*t3253;
  t5907 = t3198*t2689;
  t6007 = -1.*t3575*t2339;
  t6016 = -1.*t1905*t3707;
  t6032 = t4029*t2339;
  t6055 = t1381*t3707;
  t4342 = t1297*t3538;
  t4344 = -1.*t1402*t4240;
  t4348 = t4342 + t4344;
  t4044 = t4029*t1402;
  t4077 = t1297*t4075;
  t4079 = t4044 + t4077;
  t6222 = -1.*t4160*t2689;
  t6223 = -1.*t2679*t4204;
  t4296 = t1297*t3575;
  t4302 = -1.*t1402*t4172;
  t4303 = t4296 + t4302;
  t6232 = t4091*t2689;
  t6234 = t1272*t4204;
  t5969 = -1.*t1927*t2446;
  t5976 = -1.*t1981*t2520;
  t5978 = t5969 + t5728 + t5976;
  t5988 = t1137*t2446;
  t5989 = t818*t2520;
  t5991 = t5988 + t5743 + t5989;
  t6414 = t2198*t531;
  t6416 = t802*t2249;
  t6418 = t452*t2321;
  t6421 = t6414 + t6416 + t6418;
  t6446 = -1.*t2198*t4650;
  t6448 = -1.*t1764*t4511;
  t6460 = -1.*t1850*t4549;
  t6461 = -1.*t1888*t4579;
  t6465 = -1.*t4682*t2249;
  t6466 = -1.*t4661*t2321;
  t6467 = t6446 + t6448 + t6460 + t6461 + t6465 + t6466;
  t6473 = -1.*t1764*t2198;
  t6474 = -1.*t1850*t2249;
  t6478 = -1.*t1888*t2321;
  t6479 = t6473 + t6474 + t6478;
  t6486 = t4511*t531;
  t6487 = t2198*t4439;
  t6494 = t452*t4579;
  t6495 = t4549*t802;
  t6503 = t4427*t2249;
  t6508 = t4456*t2321;
  t6509 = t6486 + t6487 + t6494 + t6495 + t6503 + t6508;
  t6347 = -1.*t1905*t4607;
  t6350 = -1.*t4714*t2339;
  t6089 = -1.*t2017*t2541;
  t6098 = -1.*t1994*t2523;
  t6104 = t5728 + t6089 + t6098;
  t6119 = t1234*t2541;
  t6125 = t1263*t2523;
  t6126 = t5743 + t6119 + t6125;
  t6371 = t4607*t1381;
  t6380 = t5156*t2339;
  t5423 = t1297*t4826;
  t5430 = -1.*t1402*t5309;
  t5431 = t5423 + t5430;
  t6633 = -1.*t2679*t5275;
  t6639 = -1.*t5294*t2689;
  t5390 = t1297*t4714;
  t5391 = -1.*t1402*t5288;
  t5396 = t5390 + t5391;
  t5158 = t5156*t1402;
  t5205 = t1297*t5201;
  t5216 = t5158 + t5205;
  t6657 = t5275*t1272;
  t6666 = t5222*t2689;
  t5582 = t1290*t2720;
  t5584 = -1.*t20*t2661;
  t5586 = t5582 + t5584;
  t6923 = -1.*t1272*t2689;
  t6964 = t2720*t2689;
  t7041 = -1.*t1272*t2548;
  t7043 = -1.*t1413*t2689;
  t7055 = t2720*t2548;
  t7058 = t1722*t2689;
  t6930 = -1.*t5463*t2577;
  t6932 = -1.*t1443*t2605;
  t6934 = t6923 + t6930 + t6932;
  t6969 = t1731*t2577;
  t6972 = t2661*t2605;
  t6973 = t6964 + t6969 + t6972;
  t7033 = -1.*t1381*t2339;
  t7034 = -1.*t1413*t2548;
  t7035 = t7033 + t7034 + t6923;
  t7066 = t1614*t2339;
  t7075 = t1722*t2548;
  t7076 = t7066 + t7075 + t6964;
  t7208 = -1.*t1272*t3253;
  t7210 = -1.*t3198*t2689;
  t7221 = t2720*t3253;
  t7224 = t3233*t2689;
  t7306 = -1.*t4029*t2339;
  t7310 = -1.*t1381*t3707;
  t7321 = t3538*t2339;
  t7326 = t1614*t3707;
  t7445 = -1.*t4091*t2689;
  t7446 = -1.*t1272*t4204;
  t7455 = t4143*t2689;
  t7456 = t2720*t4204;
  t7283 = -1.*t1137*t2446;
  t7286 = -1.*t818*t2520;
  t7288 = t7283 + t7033 + t7286;
  t7290 = t1651*t2446;
  t7291 = t1692*t2520;
  t7298 = t7290 + t7066 + t7291;
  t7581 = -1.*t2198*t531;
  t7585 = -1.*t802*t2249;
  t7586 = -1.*t452*t2321;
  t7590 = t7581 + t7585 + t7586;
  t7595 = t2198*t4781;
  t7597 = t1570*t4549;
  t7599 = t4511*t1596;
  t7601 = t4579*t1604;
  t7602 = t4774*t2249;
  t7604 = t4796*t2321;
  t7605 = t7595 + t7597 + t7599 + t7601 + t7602 + t7604;
  t7607 = t2198*t1596;
  t7608 = t1570*t2249;
  t7610 = t1604*t2321;
  t7611 = t7607 + t7608 + t7610;
  t7616 = -1.*t4511*t531;
  t7618 = -1.*t2198*t4439;
  t7623 = -1.*t452*t4579;
  t7625 = -1.*t4549*t802;
  t7628 = -1.*t4427*t2249;
  t7629 = -1.*t4456*t2321;
  t7630 = t7616 + t7618 + t7623 + t7625 + t7628 + t7629;
  t7518 = t4607*t1614;
  t7527 = t4826*t2339;
  t7345 = -1.*t1234*t2541;
  t7346 = -1.*t1263*t2523;
  t7347 = t7033 + t7345 + t7346;
  t7351 = t1709*t2541;
  t7352 = t1694*t2523;
  t7354 = t7066 + t7351 + t7352;
  t7547 = -1.*t4607*t1381;
  t7559 = -1.*t5156*t2339;
  t7698 = t5275*t2720;
  t7708 = t5320*t2689;
  t7719 = -1.*t5275*t1272;
  t7728 = -1.*t5222*t2689;
  t6869 = t1290*t2679;
  t6880 = -1.*t20*t2055;
  t6891 = t6869 + t6880;
  t6820 = 6.5e-11*t365;
  p_output1[0]=(-1.*t1290*t1443 - 1.*t1272*t20)*var2[1] + t1473*var2[2];
  p_output1[1]=t1443*var2[0] - 1.*t1518*t20*var2[1] + t1290*t1518*var2[2] + (t1731*(t2055*t2551 + t2055*t2577 + t2592*t2605 + t2605*t2646) + t2661*t2694 + t2646*(-1.*t1731*t2605 - 1.*t2551*t2661 - 1.*t2577*t2661 - 1.*t2605*t2708) + t2055*t2751)*var2[3];
  p_output1[2]=t1297*t2781*var2[0] + (t1290*t1413 + t1402*t20*t2781)*var2[1] + (t1413*t20 - 1.*t1290*t1402*t2781)*var2[2] + (t1297*t2751*t2823 + t1731*(t1297*t2577*t2823 - 1.*t1402*t2605*t2823 + t2835 - 1.*t1402*t2055*t2841 + t1297*t2646*t2841 + t2866) + t1297*t2694*t2910 + t2646*(-1.*t1297*t1731*t2841 + t1402*t2661*t2841 - 1.*t1297*t2577*t2910 + t1402*t2605*t2910 + t2924 + t2928))*var2[3] + (t2720*(t2548*t2823 + t2835 + t2047*t2841 + t2866) + t1722*t2894 + t2679*(-1.*t1722*t2841 - 1.*t2548*t2910 + t2924 + t2928) + t2047*t2959)*var2[4];
  p_output1[3]=t1297*t3191*var2[0] + (t1402*t20*t3191 + t1290*t3198)*var2[1] + (-1.*t1290*t1402*t3191 + t20*t3198)*var2[2] + (t1297*t2751*t3269 + t1731*(t3257 + t1297*t2577*t3269 - 1.*t1402*t2605*t3269 + t3287 - 1.*t1402*t2055*t3298 + t1297*t2646*t3298) + t1297*t2694*t3334 + t2646*(-1.*t1297*t1731*t3298 + t1402*t2661*t3298 + t3316 - 1.*t1297*t2577*t3334 + t1402*t2605*t3334 + t3337))*var2[3] + (t2894*t3233 + t2959*t3243 + t2720*(t3257 + t2548*t3269 + t3287 + t2047*t3298) + t2679*(-1.*t1722*t3298 + t3316 - 1.*t2548*t3334 + t3337))*var2[4] + (t1614*(t1994*t2541 + t1994*t3054 + t2523*t3071 + t2017*t3079) + t1905*(-1.*t1694*t2541 - 1.*t1694*t3054 - 1.*t1709*t3079 - 1.*t2523*t3131))*var2[5];
  p_output1[4]=t4079*var2[0] + (t1290*t4091 - 1.*t20*t4110)*var2[1] + (t20*t4091 + t1290*t4110)*var2[2] + (t2694*t4272 + t2751*t4287 + t1731*(t4178 + t4212 + t2577*t4287 + t2605*t4303 + t2646*t4327 + t2055*t4335) + t2646*(t4254 + t4257 - 1.*t2577*t4272 - 1.*t1731*t4327 - 1.*t2661*t4335 - 1.*t2605*t4348))*var2[3] + (t2894*t4143 + t2959*t4160 + t2720*(t3599 + t3709 + t2548*t4172 + t4178 + t4212 + t2047*t4226) + t2679*(t3781 + t3816 - 1.*t1722*t4226 - 1.*t2548*t4240 + t4254 + t4257))*var2[4] + (t3538*t3848 + t3575*t3864 + t1614*(t3599 + t3709 + t2541*t3893 + t2523*t3913 + t1994*t3925 + t2017*t3941) + t1905*(t3781 + t3816 - 1.*t1694*t3925 - 1.*t1709*t3941 - 1.*t2541*t3966 - 1.*t2523*t3982))*var2[5] + (0.15121*t3466 + 0.15121*t3502 + t3538*t3553 + t3575*t3581 + t1614*(t2446*t3594 + t3599 + t1981*t3646 + t2520*t3659 + t3709 + t1927*t3745) + t1905*(-1.*t1692*t3646 - 1.*t1651*t3745 - 1.*t2446*t3769 + t3781 - 1.*t2520*t3810 + t3816))*var2[12];
  p_output1[5]=t5216*var2[0] + (t1290*t5222 - 1.*t20*t5247)*var2[1] + (t20*t5222 + t1290*t5247)*var2[2] + (t2751*t5386 + t1731*(t5278 + t5295 + t2646*t5362 + t2055*t5378 + t2577*t5386 + t2605*t5396) + t2694*t5420 + t2646*(t5302 + t5323 - 1.*t1731*t5362 - 1.*t2661*t5378 - 1.*t2577*t5420 - 1.*t2605*t5431))*var2[3] + (t2959*t5294 + t2720*(t4614 + t4715 + t2047*t5266 + t5278 + t2548*t5288 + t5295) + t2894*t5320 + t2679*(t4757 + t4830 - 1.*t1722*t5266 + t5302 - 1.*t2548*t5309 + t5323))*var2[4] + (t3864*t4714 + t3848*t4826 + t1614*(t4614 + t4715 + t2017*t5068 + t1994*t5075 + t2541*t5087 + t2523*t5104) + t1905*(t4757 + t4830 - 1.*t1709*t5068 - 1.*t1694*t5075 - 1.*t2541*t5114 - 1.*t2523*t5122))*var2[5] + (0.15121*t4458 + 0.15121*t4474 + t3581*t4714 + t1614*(t1927*t4587 + t4614 + t1981*t4630 + t2446*t4686 + t4715 + t2520*t4736) + t3553*t4826 + t1905*(-1.*t1651*t4587 - 1.*t1692*t4630 + t4757 - 1.*t2446*t4808 + t4830 - 1.*t2520*t4844))*var2[12] + (-0.281209*t4427 + 0.038749*t4456 + 1.e-6*(-7.000000000455e-6*t396 + t4479) + t1596*t4906 + t1764*t4935 + t4781*t4965 + t4650*t4988 - 7.e-6*(t1604*t4906 + t1888*t4935 + t4796*t4965 + t4661*t4988) + 4.e-6*(-1.*t1570*t4906 - 1.*t1850*t4935 - 1.*t4774*t4965 - 1.*t4682*t4988))*var2[13];
  p_output1[6]=t5463;
  p_output1[7]=t1473;
  p_output1[8]=t1290*t1443 + t1272*t20;
  p_output1[9]=t1731*t2694 + t2646*t2751;
  p_output1[10]=t2720*t2894 + t2679*t2959;
  p_output1[11]=t1614*t3848 + t1905*t3864;
  p_output1[12]=0.15121*t1137 + t1614*t3553 + t1905*t3581 + 0.15121*t818;
  p_output1[13]=0.038749*t452 + 1.e-6*(t1752 + t388 + 7.e-6*t495) + t1596*t4965 + t1764*t4988 + 4.e-6*(-1.*t1570*t4965 - 1.*t1850*t4988) - 7.e-6*(t1604*t4965 + t1888*t4988) - 0.281209*t802;
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t1290*t2661 - 1.*t20*t2720)*var2[1] + t5586*var2[2];
  p_output1[16]=t2661*var2[0] - 1.*t20*t2708*var2[1] + t1290*t2708*var2[2] + ((-1.*t2055*t2551 - 1.*t2055*t2577 - 1.*t2592*t2605 - 1.*t2605*t2646)*t5463 + t2646*(t1443*t2551 + t1443*t2577 + t1518*t2605 + t2605*t5463) + t1443*t5647 + t2055*t5678)*var2[3];
  p_output1[17]=t1297*t2910*var2[0] + (t1290*t1722 + t1402*t20*t2910)*var2[1] + (t1722*t20 - 1.*t1290*t1402*t2910)*var2[2] + (t1297*t2781*t5647 + t1297*t2823*t5678 + t5463*(-1.*t1297*t2577*t2823 + t1402*t2605*t2823 + t1402*t2055*t2841 - 1.*t1297*t2646*t2841 + t5721 + t5723) + t2646*(t1297*t2577*t2781 - 1.*t1402*t2605*t2781 - 1.*t1402*t1443*t2841 + t1297*t2841*t5463 + t5768 + t5771))*var2[3] + (t1272*(-1.*t2548*t2823 - 1.*t2047*t2841 + t5721 + t5723) + t1413*t5730 + t2047*t5749 + t2679*(t2548*t2781 + t1413*t2841 + t5768 + t5771))*var2[4];
  p_output1[18]=t1297*t3334*var2[0] + (t1290*t3233 + t1402*t20*t3334)*var2[1] + (t20*t3233 - 1.*t1290*t1402*t3334)*var2[2] + (t1297*t3191*t5647 + t1297*t3269*t5678 + t5463*(-1.*t1297*t2577*t3269 + t1402*t2605*t3269 + t1402*t2055*t3298 - 1.*t1297*t2646*t3298 + t5890 + t5897) + t2646*(t1297*t2577*t3191 - 1.*t1402*t2605*t3191 - 1.*t1402*t1443*t3298 + t1297*t3298*t5463 + t5904 + t5907))*var2[3] + (t3198*t5730 + t3243*t5749 + t1272*(-1.*t2548*t3269 - 1.*t2047*t3298 + t5890 + t5897) + t2679*(t2548*t3191 + t1413*t3298 + t5904 + t5907))*var2[4] + (t1381*(-1.*t1994*t2541 - 1.*t1994*t3054 - 1.*t2523*t3071 - 1.*t2017*t3079) + t1905*(t1263*t2541 + t1263*t3054 + t1234*t3079 + t2523*t3180))*var2[5];
  p_output1[19]=t4272*var2[0] + (t1290*t4143 - 1.*t20*t4348)*var2[1] + (t20*t4143 + t1290*t4348)*var2[2] + (t4079*t5647 + t4287*t5678 + t5463*(-1.*t2577*t4287 - 1.*t2605*t4303 - 1.*t2646*t4327 - 1.*t2055*t4335 + t6222 + t6223) + t2646*(t2577*t4079 + t2605*t4110 + t1443*t4335 + t4327*t5463 + t6232 + t6234))*var2[3] + (t4091*t5730 + t4160*t5749 + t1272*(-1.*t2548*t4172 - 1.*t2047*t4226 + t6007 + t6016 + t6222 + t6223) + t2679*(t2548*t4075 + t1413*t4226 + t6032 + t6055 + t6232 + t6234))*var2[4] + (t1381*(-1.*t2541*t3893 - 1.*t2523*t3913 - 1.*t1994*t3925 - 1.*t2017*t3941 + t6007 + t6016) + t1905*(t1263*t3925 + t1234*t3941 + t2523*t4055 + t2541*t4064 + t6032 + t6055) + t4029*t6104 + t3575*t6126)*var2[5] + (0.15121*t3769 + 0.15121*t3810 + t4029*t5978 + t3575*t5991 + t1381*(-1.*t2446*t3594 - 1.*t1981*t3646 - 1.*t2520*t3659 - 1.*t1927*t3745 + t6007 + t6016) + t1905*(t2520*t3466 + t2446*t3502 + t1137*t3745 + t6032 + t6055 + t3646*t818))*var2[12];
  p_output1[20]=t5420*var2[0] + (t1290*t5320 - 1.*t20*t5431)*var2[1] + (t20*t5320 + t1290*t5431)*var2[2] + (t5216*t5647 + t5386*t5678 + t5463*(-1.*t2646*t5362 - 1.*t2055*t5378 - 1.*t2577*t5386 - 1.*t2605*t5396 + t6633 + t6639) + t2646*(t2577*t5216 + t2605*t5247 + t1443*t5378 + t5362*t5463 + t6657 + t6666))*var2[3] + (t5222*t5730 + t5294*t5749 + t1272*(-1.*t2047*t5266 - 1.*t2548*t5288 + t6347 + t6350 + t6633 + t6639) + t2679*(t2548*t5201 + t1413*t5266 + t6371 + t6380 + t6657 + t6666))*var2[4] + (t5156*t6104 + t4714*t6126 + t1381*(-1.*t2017*t5068 - 1.*t1994*t5075 - 1.*t2541*t5087 - 1.*t2523*t5104 + t6347 + t6350) + t1905*(t1234*t5068 + t1263*t5075 + t2523*t5170 + t2541*t5182 + t6371 + t6380))*var2[5] + (0.15121*t4808 + 0.15121*t4844 + t5156*t5978 + t4714*t5991 + t1381*(-1.*t1927*t4587 - 1.*t1981*t4630 - 1.*t2446*t4686 - 1.*t2520*t4736 + t6347 + t6350) + t1905*(t2446*t4458 + t2520*t4474 + t1137*t4587 + t6371 + t6380 + t4630*t818))*var2[12] + (1.e-6*(4.00000000026e-6*t396 + t4405) - 0.281209*t4774 + 0.038749*t4796 + t4650*t6421 + t531*t6467 + t4439*t6479 + t1764*t6509 - 7.e-6*(t4661*t6421 + t452*t6467 + t4456*t6479 + t1888*t6509) + 4.e-6*(-1.*t4682*t6421 - 1.*t4427*t6479 - 1.*t1850*t6509 - 1.*t6467*t802))*var2[13];
  p_output1[21]=t1731;
  p_output1[22]=t5586;
  p_output1[23]=t1290*t2661 + t20*t2720;
  p_output1[24]=t5463*t5647 + t2646*t5678;
  p_output1[25]=t1272*t5730 + t2679*t5749;
  p_output1[26]=t1381*t6104 + t1905*t6126;
  p_output1[27]=0.15121*t1651 + 0.15121*t1692 + t1381*t5978 + t1905*t5991;
  p_output1[28]=-0.281209*t1570 + 0.038749*t1604 + t1764*t6421 + t531*t6479 - 7.e-6*(t1888*t6421 + t452*t6479) + 1.e-6*(t1733 + t671 + 4.e-6*(-1. + t6820)) + 4.e-6*(-1.*t1850*t6421 - 1.*t6479*t802);
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t1290*t2055 - 1.*t20*t2679)*var2[1] + t6891*var2[2];
  p_output1[31]=t2055*var2[0] - 1.*t20*t2592*var2[1] + t1290*t2592*var2[2] + ((t1731*t2605 + t2551*t2661 + t2577*t2661 + t2605*t2708)*t5463 + t1731*(-1.*t1443*t2551 - 1.*t1443*t2577 - 1.*t1518*t2605 - 1.*t2605*t5463) + t2661*t6934 + t1443*t6973)*var2[3];
  p_output1[32]=t1297*t2823*var2[0] + (t1290*t2047 + t1402*t20*t2823)*var2[1] + (t20*t2047 - 1.*t1290*t1402*t2823)*var2[2] + (t1297*t2910*t6934 + t1297*t2781*t6973 + t1731*(-1.*t1297*t2577*t2781 + t1402*t2605*t2781 + t1402*t1443*t2841 - 1.*t1297*t2841*t5463 + t7041 + t7043) + t5463*(t1297*t1731*t2841 - 1.*t1402*t2661*t2841 + t1297*t2577*t2910 - 1.*t1402*t2605*t2910 + t7055 + t7058))*var2[3] + (t1722*t7035 + t2720*(-1.*t2548*t2781 - 1.*t1413*t2841 + t7041 + t7043) + t1272*(t1722*t2841 + t2548*t2910 + t7055 + t7058) + t1413*t7076)*var2[4];
  p_output1[33]=t1297*t3269*var2[0] + (t1290*t3243 + t1402*t20*t3269)*var2[1] + (t20*t3243 - 1.*t1290*t1402*t3269)*var2[2] + (t1297*t3334*t6934 + t1297*t3191*t6973 + t1731*(-1.*t1297*t2577*t3191 + t1402*t2605*t3191 + t1402*t1443*t3298 - 1.*t1297*t3298*t5463 + t7208 + t7210) + t5463*(t1297*t1731*t3298 - 1.*t1402*t2661*t3298 + t1297*t2577*t3334 - 1.*t1402*t2605*t3334 + t7221 + t7224))*var2[3] + (t3233*t7035 + t3198*t7076 + t2720*(-1.*t2548*t3191 - 1.*t1413*t3298 + t7208 + t7210) + t1272*(t1722*t3298 + t2548*t3334 + t7221 + t7224))*var2[4] + (t1381*(t1694*t2541 + t1694*t3054 + t1709*t3079 + t2523*t3131) + t1614*(-1.*t1263*t2541 - 1.*t1263*t3054 - 1.*t1234*t3079 - 1.*t2523*t3180))*var2[5];
  p_output1[34]=t4287*var2[0] + (t1290*t4160 - 1.*t20*t4303)*var2[1] + (t20*t4160 + t1290*t4303)*var2[2] + (t4272*t6934 + t4079*t6973 + t1731*(-1.*t2577*t4079 - 1.*t2605*t4110 - 1.*t1443*t4335 - 1.*t4327*t5463 + t7445 + t7446) + t5463*(t2577*t4272 + t1731*t4327 + t2661*t4335 + t2605*t4348 + t7455 + t7456))*var2[3] + (t4143*t7035 + t4091*t7076 + t2720*(-1.*t2548*t4075 - 1.*t1413*t4226 + t7306 + t7310 + t7445 + t7446) + t1272*(t1722*t4226 + t2548*t4240 + t7321 + t7326 + t7455 + t7456))*var2[4] + (t1614*(-1.*t1263*t3925 - 1.*t1234*t3941 - 1.*t2523*t4055 - 1.*t2541*t4064 + t7306 + t7310) + t1381*(t1694*t3925 + t1709*t3941 + t2541*t3966 + t2523*t3982 + t7321 + t7326) + t3538*t7347 + t4029*t7354)*var2[5] + (0.15121*t3594 + 0.15121*t3659 + t3538*t7288 + t4029*t7298 + t1381*(t1692*t3646 + t1651*t3745 + t2446*t3769 + t2520*t3810 + t7321 + t7326) + t1614*(-1.*t2520*t3466 - 1.*t2446*t3502 - 1.*t1137*t3745 + t7306 + t7310 - 1.*t3646*t818))*var2[12];
  p_output1[35]=t5386*var2[0] + (t1290*t5294 - 1.*t20*t5396)*var2[1] + (t20*t5294 + t1290*t5396)*var2[2] + (t5420*t6934 + t5216*t6973 + t5463*(t1731*t5362 + t2661*t5378 + t2577*t5420 + t2605*t5431 + t7698 + t7708) + t1731*(-1.*t2577*t5216 - 1.*t2605*t5247 - 1.*t1443*t5378 - 1.*t5362*t5463 + t7719 + t7728))*var2[3] + (t5320*t7035 + t5222*t7076 + t1272*(t1722*t5266 + t2548*t5309 + t7518 + t7527 + t7698 + t7708) + t2720*(-1.*t2548*t5201 - 1.*t1413*t5266 + t7547 + t7559 + t7719 + t7728))*var2[4] + (t4826*t7347 + t5156*t7354 + t1381*(t1709*t5068 + t1694*t5075 + t2541*t5114 + t2523*t5122 + t7518 + t7527) + t1614*(-1.*t1234*t5068 - 1.*t1263*t5075 - 1.*t2523*t5170 - 1.*t2541*t5182 + t7547 + t7559))*var2[5] + (0.15121*t4686 + 0.15121*t4736 + t4826*t7288 + t5156*t7298 + t1381*(t1651*t4587 + t1692*t4630 + t2446*t4808 + t2520*t4844 + t7518 + t7527) + t1614*(-1.*t2446*t4458 - 1.*t2520*t4474 - 1.*t1137*t4587 + t7547 + t7559 - 1.*t4630*t818))*var2[12] + (1.e-6*(6.5e-11*t396 + 7.e-6*t4481 + 4.e-6*t4493) + 0.038749*t4661 - 0.281209*t4682 + t4781*t7590 + t531*t7605 + t4439*t7611 + t1596*t7630 - 7.e-6*(t4796*t7590 + t452*t7605 + t4456*t7611 + t1604*t7630) + 4.e-6*(-1.*t4774*t7590 - 1.*t4427*t7611 - 1.*t1570*t7630 - 1.*t7605*t802))*var2[13];
  p_output1[36]=t2646;
  p_output1[37]=t6891;
  p_output1[38]=t1290*t2055 + t20*t2679;
  p_output1[39]=t1731*t6934 + t5463*t6973;
  p_output1[40]=t2720*t7035 + t1272*t7076;
  p_output1[41]=t1614*t7347 + t1381*t7354;
  p_output1[42]=0.15121*t1927 + 0.15121*t1981 + t1614*t7288 + t1381*t7298;
  p_output1[43]=-0.281209*t1850 + 0.038749*t1888 + 1.e-6*(-1. + 7.e-6*t1753 + 4.e-6*t2178 + t6820) + t1596*t7590 + t531*t7611 - 7.e-6*(t1604*t7590 + t452*t7611) + 4.e-6*(-1.*t1570*t7590 - 1.*t7611*t802);
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_dh_RlFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
