/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:29:25 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t61;
  double t116;
  double t154;
  double t160;
  double t183;
  double t208;
  double t77;
  double t308;
  double t406;
  double t416;
  double t431;
  double t445;
  double t561;
  double t608;
  double t363;
  double t381;
  double t386;
  double t484;
  double t492;
  double t493;
  double t657;
  double t662;
  double t674;
  double t688;
  double t614;
  double t626;
  double t632;
  double t635;
  double t641;
  double t646;
  double t765;
  double t727;
  double t731;
  double t741;
  double t744;
  double t694;
  double t697;
  double t699;
  double t702;
  double t703;
  double t704;
  double t221;
  double t255;
  double t316;
  double t324;
  double t391;
  double t434;
  double t452;
  double t455;
  double t495;
  double t498;
  double t511;
  double t859;
  double t860;
  double t862;
  double t883;
  double t887;
  double t895;
  double t648;
  double t679;
  double t690;
  double t692;
  double t710;
  double t715;
  double t722;
  double t748;
  double t750;
  double t754;
  double t763;
  double t839;
  double t840;
  double t942;
  double t944;
  double t947;
  double t909;
  double t912;
  double t925;
  double t951;
  double t964;
  double t966;
  double t771;
  double t779;
  double t863;
  double t906;
  double t928;
  double t949;
  double t984;
  double t985;
  double t986;
  double t991;
  double t993;
  double t996;
  double t1000;
  double t1004;
  double t1008;
  double t1016;
  double t1020;
  double t1033;
  double t1048;
  double t1051;
  double t1065;
  double t1066;
  double t1216;
  double t1219;
  double t1224;
  double t1285;
  double t1298;
  double t1303;
  double t1306;
  double t1314;
  double t1325;
  double t1331;
  double t1340;
  double t1262;
  double t1266;
  double t1267;
  double t1268;
  double t1445;
  double t1446;
  double t1447;
  double t1450;
  double t1407;
  double t1410;
  double t1415;
  double t1430;
  double t1463;
  double t1465;
  double t1578;
  double t1574;
  double t1576;
  double t1579;
  double t1585;
  double t1595;
  double t1597;
  double t1600;
  double t565;
  double t574;
  double t576;
  double t577;
  double t1616;
  double t1618;
  double t1622;
  double t1628;
  double t1629;
  double t1631;
  double t1638;
  double t1639;
  double t1640;
  double t1641;
  double t1661;
  double t1667;
  double t1670;
  double t1679;
  double t1644;
  double t1650;
  double t1654;
  double t1658;
  double t1750;
  double t1753;
  double t1754;
  double t1782;
  double t1784;
  double t1789;
  double t1797;
  double t1798;
  double t1799;
  double t1800;
  double t1818;
  double t1841;
  double t1842;
  double t1847;
  double t1802;
  double t1810;
  double t1811;
  double t1813;
  double t1908;
  double t1909;
  double t1910;
  double t1919;
  double t1920;
  double t1923;
  double t1931;
  double t1932;
  double t1936;
  double t1950;
  double t1952;
  double t1961;
  double t1990;
  double t1993;
  double t1994;
  double t1974;
  double t1978;
  double t1979;
  double t1997;
  double t2000;
  double t2002;
  double t1110;
  double t1111;
  double t1130;
  double t1131;
  double t2071;
  double t2074;
  double t2077;
  double t2088;
  double t2096;
  double t2106;
  double t2107;
  double t2131;
  double t2135;
  double t2136;
  double t2121;
  double t2125;
  double t2126;
  double t2143;
  double t2144;
  double t2145;
  double t1150;
  double t1153;
  double t1157;
  double t1200;
  double t1209;
  double t1211;
  double t1231;
  double t1236;
  double t1240;
  double t2208;
  double t2212;
  double t2213;
  double t2253;
  double t2257;
  double t2259;
  double t2260;
  double t2268;
  double t2272;
  double t2273;
  double t2282;
  double t2220;
  double t2226;
  double t2234;
  double t2242;
  double t1437;
  double t1438;
  double t1441;
  double t1454;
  double t1456;
  double t1458;
  double t1468;
  double t1469;
  double t1470;
  double t2352;
  double t2353;
  double t2354;
  double t2356;
  double t2343;
  double t2346;
  double t2347;
  double t2348;
  double t2358;
  double t2359;
  double t2379;
  double t2382;
  double t2482;
  double t2486;
  double t2487;
  double t2494;
  double t2499;
  double t2501;
  double t2542;
  double t2544;
  double t2546;
  double t2547;
  double t2573;
  double t2582;
  double t2583;
  double t2584;
  double t2550;
  double t2553;
  double t2560;
  double t2563;
  double t2656;
  double t2662;
  double t2663;
  double t2669;
  double t2671;
  double t2682;
  double t2684;
  double t2690;
  double t2708;
  double t2709;
  double t2710;
  double t2694;
  double t2697;
  double t2698;
  double t2713;
  double t2714;
  double t2717;
  double t2746;
  double t2748;
  double t2753;
  double t2757;
  double t2758;
  double t2763;
  double t2765;
  double t2780;
  double t2785;
  double t2786;
  double t2771;
  double t2773;
  double t2774;
  double t2788;
  double t2789;
  double t2790;
  double t2832;
  double t2833;
  double t2834;
  double t2847;
  double t2849;
  double t2850;
  double t2853;
  double t2855;
  double t2856;
  double t2857;
  double t2838;
  double t2839;
  double t2840;
  double t2841;
  double t2922;
  double t2924;
  double t2927;
  double t2929;
  double t2905;
  double t2908;
  double t2909;
  double t2912;
  double t2933;
  double t2935;
  double t2982;
  double t2985;
  double t2987;
  double t2993;
  double t3014;
  double t3017;
  double t3021;
  double t3027;
  double t3030;
  double t2990;
  double t3001;
  double t3064;
  double t3139;
  double t3141;
  double t3143;
  double t3146;
  double t3092;
  double t3113;
  double t3071;
  double t3072;
  double t3076;
  double t3127;
  double t3128;
  double t3131;
  double t3154;
  double t3056;
  double t3175;
  double t3066;
  double t3196;
  double t3145;
  double t3211;
  double t3213;
  double t2994;
  double t3170;
  double t3171;
  double t3172;
  double t3177;
  double t3179;
  double t3180;
  double t3186;
  double t3187;
  double t3189;
  double t3249;
  double t3215;
  double t3216;
  double t3218;
  double t3219;
  double t3220;
  double t3221;
  double t3230;
  double t3231;
  double t3264;
  double t3267;
  double t3269;
  double t3270;
  double t3271;
  double t3273;
  double t3274;
  double t3277;
  double t3155;
  double t3284;
  double t3149;
  double t3314;
  double t3204;
  double t3289;
  double t3291;
  double t3197;
  double t3040;
  double t3042;
  double t3023;
  double t3031;
  double t3089;
  double t3091;
  double t3093;
  double t3096;
  double t3114;
  double t3118;
  double t3125;
  double t3052;
  double t3054;
  double t3062;
  double t3063;
  double t3067;
  double t3069;
  double t3070;
  double t3193;
  double t3194;
  double t3199;
  double t3201;
  double t3206;
  double t3207;
  double t3209;
  double t3356;
  double t3358;
  double t3359;
  double t3367;
  double t3368;
  double t3369;
  double t3134;
  double t3144;
  double t3152;
  double t3153;
  double t3160;
  double t3165;
  double t3167;
  double t3245;
  double t3246;
  double t3250;
  double t3255;
  double t3258;
  double t3259;
  double t3262;
  double t3292;
  double t3372;
  double t3375;
  double t3376;
  double t3285;
  double t3378;
  double t3383;
  double t3385;
  double t3295;
  double t3297;
  double t3388;
  double t3389;
  double t3391;
  double t3315;
  double t3310;
  double t3311;
  double t3320;
  double t3334;
  double t3335;
  double t3331;
  double t3340;
  double t3424;
  double t3361;
  double t3370;
  double t3377;
  double t3387;
  double t3392;
  double t3394;
  double t3395;
  double t3396;
  double t3397;
  double t3398;
  double t3399;
  double t3403;
  double t3410;
  double t3411;
  double t3412;
  double t3414;
  double t3415;
  double t3416;
  double t3419;
  double t3421;
  double t3434;
  double t3453;
  double t3463;
  double t3508;
  double t3511;
  double t3512;
  double t3441;
  double t3535;
  double t3491;
  double t3516;
  double t3517;
  double t3519;
  double t3521;
  double t3523;
  double t3524;
  double t3529;
  double t3533;
  double t3534;
  double t3537;
  double t3538;
  double t3541;
  double t3544;
  double t3546;
  double t3549;
  double t3550;
  double t3555;
  double t3561;
  double t3613;
  double t3652;
  double t3632;
  double t3633;
  double t3634;
  double t3639;
  double t3676;
  double t3680;
  double t3694;
  double t3697;
  double t3646;
  double t3725;
  double t3735;
  double t3745;
  double t3750;
  double t3623;
  double t3774;
  double t3713;
  double t2981;
  double t2989;
  double t2995;
  double t2996;
  double t3002;
  double t3006;
  double t3011;
  double t3829;
  double t3830;
  double t3837;
  double t3840;
  double t3845;
  double t3847;
  double t3852;
  double t3856;
  double t3857;
  double t3860;
  double t3864;
  double t3868;
  double t3871;
  double t3872;
  double t3874;
  double t3878;
  double t3879;
  double t3886;
  double t3948;
  double t3952;
  double t3953;
  double t3959;
  double t3961;
  double t3971;
  double t3979;
  double t3981;
  double t3983;
  double t3987;
  double t3993;
  double t3995;
  double t3997;
  double t3998;
  double t4001;
  double t4002;
  double t4005;
  double t4008;
  double t4050;
  double t4054;
  double t4057;
  double t4063;
  double t4065;
  double t4066;
  double t4068;
  double t4069;
  double t4072;
  double t4075;
  double t4078;
  double t4080;
  double t4087;
  double t4089;
  double t4096;
  double t3425;
  double t3426;
  double t3429;
  double t4131;
  double t4134;
  double t4141;
  double t4142;
  double t4150;
  double t4152;
  double t4159;
  double t4167;
  double t4171;
  double t4176;
  double t4179;
  double t4182;
  double t4190;
  double t3435;
  double t3436;
  double t3442;
  double t3444;
  double t3445;
  double t3446;
  double t3454;
  double t3459;
  double t3470;
  double t3471;
  double t3473;
  double t3479;
  double t3482;
  double t3490;
  double t3498;
  double t3499;
  double t3503;
  double t3506;
  double t4240;
  double t4241;
  double t4242;
  double t4246;
  double t4248;
  double t4251;
  double t4252;
  double t4256;
  double t4259;
  double t4260;
  double t4261;
  double t4268;
  double t4272;
  double t4274;
  double t4277;
  double t3614;
  double t3615;
  double t3625;
  double t3627;
  double t3628;
  double t3629;
  double t3647;
  double t3649;
  double t3653;
  double t3659;
  double t3668;
  double t3675;
  double t3700;
  double t3712;
  double t3716;
  double t3717;
  double t3720;
  double t3722;
  double t3754;
  double t4329;
  double t4331;
  double t4333;
  double t4334;
  double t4339;
  double t4340;
  double t4345;
  double t4350;
  double t3764;
  double t4352;
  double t4359;
  double t4363;
  double t4364;
  double t3772;
  double t3775;
  double t3786;
  double t3789;
  double t4483;
  double t4485;
  double t4488;
  double t4490;
  double t4491;
  double t4492;
  double t4495;
  double t4497;
  double t4509;
  double t4511;
  double t4520;
  double t4521;
  double t4524;
  double t4525;
  double t4528;
  double t4535;
  double t4538;
  double t4541;
  double t4594;
  double t4597;
  double t4601;
  double t4603;
  double t4606;
  double t4612;
  double t4613;
  double t4614;
  double t4618;
  double t4634;
  double t4635;
  double t4637;
  double t4638;
  double t4641;
  double t4721;
  double t4722;
  double t4726;
  double t4729;
  double t4732;
  double t4733;
  double t4734;
  double t4748;
  double t4750;
  double t4752;
  double t4758;
  double t4760;
  double t4761;
  double t4809;
  double t4820;
  double t4822;
  double t4826;
  double t4828;
  double t4831;
  double t4834;
  double t4837;
  double t4839;
  double t4842;
  double t4843;
  double t4849;
  double t4853;
  double t4860;
  double t4862;
  double t4918;
  double t4919;
  double t4921;
  double t4925;
  double t4928;
  double t4929;
  double t4930;
  double t4932;
  double t4939;
  double t4940;
  double t4943;
  double t4944;
  t61 = Sin(var1[4]);
  t116 = Cos(var1[6]);
  t154 = -1.*t116;
  t160 = 1. + t154;
  t183 = 0.15121*t160;
  t208 = Sin(var1[6]);
  t77 = Sin(var1[5]);
  t308 = Cos(var1[5]);
  t406 = Cos(var1[7]);
  t416 = -1.*t406;
  t431 = 1. + t416;
  t445 = Sin(var1[7]);
  t561 = Cos(var1[4]);
  t608 = -1. + t406;
  t363 = t116*t61*t77;
  t381 = t308*t61*t208;
  t386 = t363 + t381;
  t484 = -1.*t308*t116*t61;
  t492 = t61*t77*t208;
  t493 = t484 + t492;
  t657 = Cos(var1[8]);
  t662 = -1.*t657;
  t674 = 1. + t662;
  t688 = Sin(var1[8]);
  t614 = 4.e-6*t561*t608;
  t626 = 1.6e-11*t608;
  t632 = 1. + t626;
  t635 = t632*t386;
  t641 = 4.e-6*t493*t445;
  t646 = t614 + t635 + t641;
  t765 = -1. + t657;
  t727 = t561*t406;
  t731 = 4.e-6*t608*t386;
  t741 = t493*t445;
  t744 = t727 + t731 + t741;
  t694 = -1.000000000016*t431;
  t697 = 1. + t694;
  t699 = t697*t493;
  t702 = -1.*t561*t445;
  t703 = -4.e-6*t386*t445;
  t704 = t699 + t702 + t703;
  t221 = -0.15121*t208;
  t255 = t183 + t221;
  t316 = 0.15121*t208;
  t324 = t183 + t316;
  t391 = -1.2484e-7*var1[7];
  t434 = -1.5499600000248e-7*t431;
  t452 = 1.124840000016e-6*t445;
  t455 = t391 + t434 + t452;
  t495 = 0.281210000008499*t431;
  t498 = 0.03874900000062*t445;
  t511 = t495 + t498;
  t859 = -1.*t561*t308*t116;
  t860 = t561*t77*t208;
  t862 = t859 + t860;
  t883 = -1.*t561*t116*t77;
  t887 = -1.*t561*t308*t208;
  t895 = t883 + t887;
  t648 = -1.284e-8*var1[8];
  t679 = -1.5499600000248e-7*t674;
  t690 = 2.012840000032e-6*t688;
  t692 = t648 + t679 + t690;
  t710 = 0.503210000016051*t674;
  t715 = 0.03874900000062*t688;
  t722 = t710 + t715;
  t748 = 5.136e-14*var1[8];
  t750 = -0.03874900000062*t674;
  t754 = 0.503210000008*t688;
  t763 = t748 + t750 + t754;
  t839 = -1.000000000016*t674;
  t840 = 1. + t839;
  t942 = t697*t895;
  t944 = -4.e-6*t862*t445;
  t947 = t942 + t944;
  t909 = t632*t862;
  t912 = 4.e-6*t895*t445;
  t925 = t909 + t912;
  t951 = 4.e-6*t608*t862;
  t964 = t895*t445;
  t966 = t951 + t964;
  t771 = 1.6e-11*t765;
  t779 = 1. + t771;
  t863 = t862*t455;
  t906 = t895*t511;
  t928 = t925*t692;
  t949 = t947*t722;
  t984 = t966*t763;
  t985 = t840*t947;
  t986 = -4.e-6*t925*t688;
  t991 = -1.*t966*t688;
  t993 = t985 + t986 + t991;
  t996 = 0.80321*t993;
  t1000 = t779*t925;
  t1004 = 4.e-6*t765*t966;
  t1008 = 4.e-6*t947*t688;
  t1016 = t1000 + t1004 + t1008;
  t1020 = 0.14871*t1016;
  t1033 = 4.e-6*t765*t925;
  t1048 = t657*t966;
  t1051 = t947*t688;
  t1065 = t1033 + t1048 + t1051;
  t1066 = -0.03875*t1065;
  t1216 = t561*t308*t116;
  t1219 = -1.*t561*t77*t208;
  t1224 = t1216 + t1219;
  t1285 = -1.*t406*t61;
  t1298 = -4.e-6*t406*t895;
  t1303 = -1.000000000016*t1224*t445;
  t1306 = t1285 + t1298 + t1303;
  t1314 = t406*t1224;
  t1325 = -1.*t61*t445;
  t1331 = -4.e-6*t895*t445;
  t1340 = t1314 + t1325 + t1331;
  t1262 = 4.e-6*t406*t1224;
  t1266 = -4.e-6*t61*t445;
  t1267 = -1.6e-11*t895*t445;
  t1268 = t1262 + t1266 + t1267;
  t1445 = 4.e-6*t608*t61;
  t1446 = t632*t895;
  t1447 = 4.e-6*t1224*t445;
  t1450 = t1445 + t1446 + t1447;
  t1407 = t406*t61;
  t1410 = 4.e-6*t608*t895;
  t1415 = t1224*t445;
  t1430 = t1407 + t1410 + t1415;
  t1463 = t697*t1224;
  t1465 = t1463 + t1325 + t1331;
  t1578 = Cos(var1[3]);
  t1574 = Sin(var1[3]);
  t1576 = -1.*t308*t1574;
  t1579 = -1.*t1578*t61*t77;
  t1585 = t1576 + t1579;
  t1595 = t1578*t308*t61;
  t1597 = -1.*t1574*t77;
  t1600 = t1595 + t1597;
  t565 = 4.9936e-13*var1[7];
  t574 = -0.03874900000062*t431;
  t576 = 0.281210000004*t445;
  t577 = t565 + t574 + t576;
  t1616 = t116*t1585;
  t1618 = -1.*t1600*t208;
  t1622 = t1616 + t1618;
  t1628 = t116*t1600;
  t1629 = t1585*t208;
  t1631 = t1628 + t1629;
  t1638 = -4.e-6*t1578*t561*t608;
  t1639 = t632*t1622;
  t1640 = 4.e-6*t1631*t445;
  t1641 = t1638 + t1639 + t1640;
  t1661 = -1.*t1578*t561*t406;
  t1667 = 4.e-6*t608*t1622;
  t1670 = t1631*t445;
  t1679 = t1661 + t1667 + t1670;
  t1644 = t697*t1631;
  t1650 = t1578*t561*t445;
  t1654 = -4.e-6*t1622*t445;
  t1658 = t1644 + t1650 + t1654;
  t1750 = -1.*t561*t116*t1574*t77;
  t1753 = -1.*t561*t308*t1574*t208;
  t1754 = t1750 + t1753;
  t1782 = t561*t308*t116*t1574;
  t1784 = -1.*t561*t1574*t77*t208;
  t1789 = t1782 + t1784;
  t1797 = 4.e-6*t608*t1574*t61;
  t1798 = t632*t1754;
  t1799 = 4.e-6*t1789*t445;
  t1800 = t1797 + t1798 + t1799;
  t1818 = t406*t1574*t61;
  t1841 = 4.e-6*t608*t1754;
  t1842 = t1789*t445;
  t1847 = t1818 + t1841 + t1842;
  t1802 = t697*t1789;
  t1810 = -1.*t1574*t61*t445;
  t1811 = -4.e-6*t1754*t445;
  t1813 = t1802 + t1810 + t1811;
  t1908 = -1.*t308*t1574*t61;
  t1909 = -1.*t1578*t77;
  t1910 = t1908 + t1909;
  t1919 = t1578*t308;
  t1920 = -1.*t1574*t61*t77;
  t1923 = t1919 + t1920;
  t1931 = t116*t1910;
  t1932 = -1.*t1923*t208;
  t1936 = t1931 + t1932;
  t1950 = t116*t1923;
  t1952 = t1910*t208;
  t1961 = t1950 + t1952;
  t1990 = t697*t1961;
  t1993 = -4.e-6*t1936*t445;
  t1994 = t1990 + t1993;
  t1974 = t632*t1936;
  t1978 = 4.e-6*t1961*t445;
  t1979 = t1974 + t1978;
  t1997 = 4.e-6*t608*t1936;
  t2000 = t1961*t445;
  t2002 = t1997 + t2000;
  t1110 = -0.15121*t116;
  t1111 = t1110 + t316;
  t1130 = 0.15121*t116;
  t1131 = t1130 + t316;
  t2071 = t308*t1574*t61;
  t2074 = t1578*t77;
  t2077 = t2071 + t2074;
  t2088 = -1.*t116*t2077;
  t2096 = t2088 + t1932;
  t2106 = -1.*t2077*t208;
  t2107 = t1950 + t2106;
  t2131 = t697*t2107;
  t2135 = -4.e-6*t2096*t445;
  t2136 = t2131 + t2135;
  t2121 = t632*t2096;
  t2125 = 4.e-6*t2107*t445;
  t2126 = t2121 + t2125;
  t2143 = 4.e-6*t608*t2096;
  t2144 = t2107*t445;
  t2145 = t2143 + t2144;
  t1150 = 0.281210000004*t406;
  t1153 = -0.03874900000062*t445;
  t1157 = 4.9936e-13 + t1150 + t1153;
  t1200 = 1.124840000016e-6*t406;
  t1209 = -1.5499600000248e-7*t445;
  t1211 = -1.2484e-7 + t1200 + t1209;
  t1231 = 0.03874900000062*t406;
  t1236 = 0.281210000008499*t445;
  t1240 = t1231 + t1236;
  t2208 = t116*t2077;
  t2212 = t1923*t208;
  t2213 = t2208 + t2212;
  t2253 = t561*t406*t1574;
  t2257 = -4.e-6*t406*t2107;
  t2259 = -1.000000000016*t2213*t445;
  t2260 = t2253 + t2257 + t2259;
  t2268 = t406*t2213;
  t2272 = t561*t1574*t445;
  t2273 = -4.e-6*t2107*t445;
  t2282 = t2268 + t2272 + t2273;
  t2220 = 4.e-6*t406*t2213;
  t2226 = 4.e-6*t561*t1574*t445;
  t2234 = -1.6e-11*t2107*t445;
  t2242 = t2220 + t2226 + t2234;
  t1437 = 0.503210000008*t657;
  t1438 = -0.03874900000062*t688;
  t1441 = 5.136e-14 + t1437 + t1438;
  t1454 = 2.012840000032e-6*t657;
  t1456 = -1.5499600000248e-7*t688;
  t1458 = -1.284e-8 + t1454 + t1456;
  t1468 = 0.03874900000062*t657;
  t1469 = 0.503210000016051*t688;
  t1470 = t1468 + t1469;
  t2352 = -4.e-6*t561*t608*t1574;
  t2353 = t632*t2107;
  t2354 = 4.e-6*t2213*t445;
  t2356 = t2352 + t2353 + t2354;
  t2343 = -1.*t561*t406*t1574;
  t2346 = 4.e-6*t608*t2107;
  t2347 = t2213*t445;
  t2348 = t2343 + t2346 + t2347;
  t2358 = t697*t2213;
  t2359 = t2358 + t2272 + t2273;
  t2379 = -4.e-6*t2356*t688;
  t2382 = -1.*t2348*t688;
  t2482 = t1578*t561*t116*t77;
  t2486 = t1578*t561*t308*t208;
  t2487 = t2482 + t2486;
  t2494 = -1.*t1578*t561*t308*t116;
  t2499 = t1578*t561*t77*t208;
  t2501 = t2494 + t2499;
  t2542 = -4.e-6*t1578*t608*t61;
  t2544 = t632*t2487;
  t2546 = 4.e-6*t2501*t445;
  t2547 = t2542 + t2544 + t2546;
  t2573 = -1.*t1578*t406*t61;
  t2582 = 4.e-6*t608*t2487;
  t2583 = t2501*t445;
  t2584 = t2573 + t2582 + t2583;
  t2550 = t697*t2501;
  t2553 = t1578*t61*t445;
  t2560 = -4.e-6*t2487*t445;
  t2563 = t2550 + t2553 + t2560;
  t2656 = t308*t1574;
  t2662 = t1578*t61*t77;
  t2663 = t2656 + t2662;
  t2669 = -1.*t2663*t208;
  t2671 = t1628 + t2669;
  t2682 = t116*t2663;
  t2684 = t1600*t208;
  t2690 = t2682 + t2684;
  t2708 = t697*t2690;
  t2709 = -4.e-6*t2671*t445;
  t2710 = t2708 + t2709;
  t2694 = t632*t2671;
  t2697 = 4.e-6*t2690*t445;
  t2698 = t2694 + t2697;
  t2713 = 4.e-6*t608*t2671;
  t2714 = t2690*t445;
  t2717 = t2713 + t2714;
  t2746 = -1.*t1578*t308*t61;
  t2748 = t1574*t77;
  t2753 = t2746 + t2748;
  t2757 = -1.*t116*t2753;
  t2758 = t2757 + t2669;
  t2763 = -1.*t2753*t208;
  t2765 = t2682 + t2763;
  t2780 = t697*t2765;
  t2785 = -4.e-6*t2758*t445;
  t2786 = t2780 + t2785;
  t2771 = t632*t2758;
  t2773 = 4.e-6*t2765*t445;
  t2774 = t2771 + t2773;
  t2788 = 4.e-6*t608*t2758;
  t2789 = t2765*t445;
  t2790 = t2788 + t2789;
  t2832 = t116*t2753;
  t2833 = t2663*t208;
  t2834 = t2832 + t2833;
  t2847 = -4.e-6*t406*t2765;
  t2849 = -1.000000000016*t2834*t445;
  t2850 = t1661 + t2847 + t2849;
  t2853 = t406*t2834;
  t2855 = -1.*t1578*t561*t445;
  t2856 = -4.e-6*t2765*t445;
  t2857 = t2853 + t2855 + t2856;
  t2838 = 4.e-6*t406*t2834;
  t2839 = -4.e-6*t1578*t561*t445;
  t2840 = -1.6e-11*t2765*t445;
  t2841 = t2838 + t2839 + t2840;
  t2922 = 4.e-6*t1578*t561*t608;
  t2924 = t632*t2765;
  t2927 = 4.e-6*t2834*t445;
  t2929 = t2922 + t2924 + t2927;
  t2905 = t1578*t561*t406;
  t2908 = 4.e-6*t608*t2765;
  t2909 = t2834*t445;
  t2912 = t2905 + t2908 + t2909;
  t2933 = t697*t2834;
  t2935 = t2933 + t2855 + t2856;
  t2982 = Cos(var1[13]);
  t2985 = -1.*t2982;
  t2987 = 1. + t2985;
  t2993 = Sin(var1[13]);
  t3014 = Cos(var1[12]);
  t3017 = -1.*t3014;
  t3021 = 1. + t3017;
  t3027 = Sin(var1[12]);
  t3030 = 0.15121*t3027;
  t2990 = 4.e-6*t2987;
  t3001 = -2.8e-11*t2987;
  t3064 = 7.e-6*t2987;
  t3139 = Cos(var1[14]);
  t3141 = -1.*t3139;
  t3143 = 1. + t3141;
  t3146 = Sin(var1[14]);
  t3092 = -1.*t2993;
  t3113 = -4.e-6*t2993;
  t3071 = t308*t3027*t61;
  t3072 = t3014*t61*t77;
  t3076 = t3071 + t3072;
  t3127 = -1.*t3014*t308*t61;
  t3128 = t3027*t61*t77;
  t3131 = t3127 + t3128;
  t3154 = 7.e-6*t3143;
  t3056 = -7.e-6*t2993;
  t3175 = -7.e-6*t2987;
  t3066 = 4.e-6*t2993;
  t3196 = 4.e-6*t3143;
  t3145 = -2.8e-11*t3143;
  t3211 = -1. + t2982;
  t3213 = 4.e-6*t3211;
  t2994 = 7.e-6*t2993;
  t3170 = 2.8e-11*t2987;
  t3171 = t3170 + t3092;
  t3172 = t561*t3171;
  t3177 = t3175 + t3113;
  t3179 = t3177*t3076;
  t3180 = -1.000000000016*t2987;
  t3186 = 1. + t3180;
  t3187 = t3186*t3131;
  t3189 = t3172 + t3179 + t3187;
  t3249 = 7.e-6*t3146;
  t3215 = t3213 + t3056;
  t3216 = t561*t3215;
  t3218 = -6.5e-11*t2987;
  t3219 = 1. + t3218;
  t3220 = t3219*t3076;
  t3221 = t3175 + t3066;
  t3230 = t3221*t3131;
  t3231 = t3216 + t3220 + t3230;
  t3264 = -1.000000000049*t2987;
  t3267 = 1. + t3264;
  t3269 = t3267*t561;
  t3270 = t3213 + t2994;
  t3271 = t3270*t3076;
  t3273 = t3170 + t2993;
  t3274 = t3273*t3131;
  t3277 = t3269 + t3271 + t3274;
  t3155 = -4.e-6*t3146;
  t3284 = 2.8e-11*t3143;
  t3149 = -1.*t3146;
  t3314 = -7.e-6*t3143;
  t3204 = 4.e-6*t3146;
  t3289 = -1. + t3139;
  t3291 = 4.e-6*t3289;
  t3197 = -7.e-6*t3146;
  t3040 = 0.15121*t3021;
  t3042 = t3040 + t3030;
  t3023 = -0.15121*t3021;
  t3031 = t3023 + t3030;
  t3089 = 1.0248489999999998e-12*var1[13];
  t3091 = -0.28120900000849935*t2987;
  t3093 = t3001 + t3092;
  t3096 = -0.038748999993*t3093;
  t3114 = t3064 + t3113;
  t3118 = -2.123459e-6*t3114;
  t3125 = t3089 + t3091 + t3096 + t3118;
  t3052 = -1.4640699999999997e-7*var1[13];
  t3054 = -1.38024835e-16*t2987;
  t3062 = t2990 + t3056;
  t3063 = -0.038748999993*t3062;
  t3067 = t3064 + t3066;
  t3069 = -0.281209000004*t3067;
  t3070 = t3052 + t3054 + t3063 + t3069;
  t3193 = -2.598649999999999e-7*var1[14];
  t3194 = -2.3905277499999995e-16*t3143;
  t3199 = t3196 + t3197;
  t3201 = -0.038922999986*t3199;
  t3206 = t3154 + t3204;
  t3207 = -0.503149000008*t3206;
  t3209 = t3193 + t3194 + t3201 + t3207;
  t3356 = -1.*t561*t308*t3027;
  t3358 = -1.*t3014*t561*t77;
  t3359 = t3356 + t3358;
  t3367 = -1.*t3014*t561*t308;
  t3368 = t561*t3027*t77;
  t3369 = t3367 + t3368;
  t3134 = 1.8190549999999993e-12*var1[14];
  t3144 = -0.5031490000160505*t3143;
  t3152 = t3145 + t3149;
  t3153 = -0.038922999986*t3152;
  t3160 = t3154 + t3155;
  t3165 = -3.6777349999999994e-6*t3160;
  t3167 = t3134 + t3144 + t3153 + t3165;
  t3245 = 1.0394599999999997e-12*var1[14];
  t3246 = -0.03892299998790722*t3143;
  t3250 = t3196 + t3249;
  t3255 = -3.6777349999999994e-6*t3250;
  t3258 = t3145 + t3146;
  t3259 = -0.503149000008*t3258;
  t3262 = t3245 + t3246 + t3255 + t3259;
  t3292 = t3291 + t3249;
  t3372 = t3221*t3359;
  t3375 = t3219*t3369;
  t3376 = t3372 + t3375;
  t3285 = t3284 + t3146;
  t3378 = t3186*t3359;
  t3383 = t3177*t3369;
  t3385 = t3378 + t3383;
  t3295 = -1.000000000049*t3143;
  t3297 = 1. + t3295;
  t3388 = t3273*t3359;
  t3389 = t3270*t3369;
  t3391 = t3388 + t3389;
  t3315 = t3314 + t3155;
  t3310 = -1.000000000016*t3143;
  t3311 = 1. + t3310;
  t3320 = t3284 + t3149;
  t3334 = -6.5e-11*t3143;
  t3335 = 1. + t3334;
  t3331 = t3314 + t3204;
  t3340 = t3291 + t3197;
  t3424 = 0.15121*t3014;
  t3361 = t3125*t3359;
  t3370 = t3070*t3369;
  t3377 = t3209*t3376;
  t3387 = t3167*t3385;
  t3392 = t3262*t3391;
  t3394 = t3292*t3376;
  t3395 = t3285*t3385;
  t3396 = t3297*t3391;
  t3397 = t3394 + t3395 + t3396;
  t3398 = -0.038924*t3397;
  t3399 = t3315*t3376;
  t3403 = t3311*t3385;
  t3410 = t3320*t3391;
  t3411 = t3399 + t3403 + t3410;
  t3412 = -0.80315*t3411;
  t3414 = t3335*t3376;
  t3415 = t3331*t3385;
  t3416 = t3340*t3391;
  t3419 = t3414 + t3415 + t3416;
  t3421 = 0.148705*t3419;
  t3434 = -2.8e-11*t2993;
  t3453 = -7.e-6*t2982;
  t3463 = 4.e-6*t2982;
  t3508 = t3014*t561*t308;
  t3511 = -1.*t561*t3027*t77;
  t3512 = t3508 + t3511;
  t3441 = 7.e-6*t2982;
  t3535 = 2.8e-11*t2993;
  t3491 = -4.e-6*t2982;
  t3516 = t3453 + t3113;
  t3517 = t3516*t61;
  t3519 = -6.5e-11*t2993*t3359;
  t3521 = t3463 + t3056;
  t3523 = t3521*t3512;
  t3524 = t3517 + t3519 + t3523;
  t3529 = -1.000000000049*t2993*t61;
  t3533 = t3441 + t3113;
  t3534 = t3533*t3359;
  t3537 = t2982 + t3535;
  t3538 = t3537*t3512;
  t3541 = t3529 + t3534 + t3538;
  t3544 = t2985 + t3535;
  t3546 = t3544*t61;
  t3549 = t3491 + t3056;
  t3550 = t3549*t3359;
  t3555 = -1.000000000016*t2993*t3512;
  t3561 = t3546 + t3550 + t3555;
  t3613 = -2.8e-11*t3146;
  t3652 = 4.e-6*t3139;
  t3632 = t3171*t61;
  t3633 = t3177*t3359;
  t3634 = t3186*t3512;
  t3639 = t3632 + t3633 + t3634;
  t3676 = t3215*t61;
  t3680 = t3219*t3359;
  t3694 = t3221*t3512;
  t3697 = t3676 + t3680 + t3694;
  t3646 = -7.e-6*t3139;
  t3725 = t3267*t61;
  t3735 = t3270*t3359;
  t3745 = t3273*t3512;
  t3750 = t3725 + t3735 + t3745;
  t3623 = -4.e-6*t3139;
  t3774 = 2.8e-11*t3146;
  t3713 = 7.e-6*t3139;
  t2981 = 5.856279999999999e-13*var1[13];
  t2989 = -0.0387489999948987*t2987;
  t2995 = t2990 + t2994;
  t2996 = -2.123459e-6*t2995;
  t3002 = t3001 + t2993;
  t3006 = -0.281209000004*t3002;
  t3011 = t2981 + t2989 + t2996 + t3006;
  t3829 = -1.*t3027*t1600;
  t3830 = t3014*t1585;
  t3837 = t3829 + t3830;
  t3840 = t3014*t1600;
  t3845 = t3027*t1585;
  t3847 = t3840 + t3845;
  t3852 = -1.*t1578*t561*t3171;
  t3856 = t3177*t3837;
  t3857 = t3186*t3847;
  t3860 = t3852 + t3856 + t3857;
  t3864 = -1.*t1578*t561*t3215;
  t3868 = t3219*t3837;
  t3871 = t3221*t3847;
  t3872 = t3864 + t3868 + t3871;
  t3874 = -1.*t3267*t1578*t561;
  t3878 = t3270*t3837;
  t3879 = t3273*t3847;
  t3886 = t3874 + t3878 + t3879;
  t3948 = -1.*t561*t308*t3027*t1574;
  t3952 = -1.*t3014*t561*t1574*t77;
  t3953 = t3948 + t3952;
  t3959 = t3014*t561*t308*t1574;
  t3961 = -1.*t561*t3027*t1574*t77;
  t3971 = t3959 + t3961;
  t3979 = t3171*t1574*t61;
  t3981 = t3177*t3953;
  t3983 = t3186*t3971;
  t3987 = t3979 + t3981 + t3983;
  t3993 = t3215*t1574*t61;
  t3995 = t3219*t3953;
  t3997 = t3221*t3971;
  t3998 = t3993 + t3995 + t3997;
  t4001 = t3267*t1574*t61;
  t4002 = t3270*t3953;
  t4005 = t3273*t3971;
  t4008 = t4001 + t4002 + t4005;
  t4050 = t3027*t1910;
  t4054 = t3014*t1923;
  t4057 = t4050 + t4054;
  t4063 = t3014*t1910;
  t4065 = -1.*t3027*t1923;
  t4066 = t4063 + t4065;
  t4068 = t3221*t4057;
  t4069 = t3219*t4066;
  t4072 = t4068 + t4069;
  t4075 = t3186*t4057;
  t4078 = t3177*t4066;
  t4080 = t4075 + t4078;
  t4087 = t3273*t4057;
  t4089 = t3270*t4066;
  t4096 = t4087 + t4089;
  t3425 = -0.15121*t3027;
  t3426 = t3424 + t3425;
  t3429 = t3424 + t3030;
  t4131 = -1.*t3027*t2077;
  t4134 = t4131 + t4054;
  t4141 = -1.*t3014*t2077;
  t4142 = t4141 + t4065;
  t4150 = t3221*t4134;
  t4152 = t3219*t4142;
  t4159 = t4150 + t4152;
  t4167 = t3186*t4134;
  t4171 = t3177*t4142;
  t4176 = t4167 + t4171;
  t4179 = t3273*t4134;
  t4182 = t3270*t4142;
  t4190 = t4179 + t4182;
  t3435 = t2982 + t3434;
  t3436 = -0.281209000004*t3435;
  t3442 = t3441 + t3066;
  t3444 = -2.123459e-6*t3442;
  t3445 = -0.0387489999948987*t2993;
  t3446 = 5.856279999999999e-13 + t3436 + t3444 + t3445;
  t3454 = t3453 + t3066;
  t3459 = -0.038748999993*t3454;
  t3470 = t3463 + t2994;
  t3471 = -0.281209000004*t3470;
  t3473 = -1.38024835e-16*t2993;
  t3479 = -1.4640699999999997e-7 + t3459 + t3471 + t3473;
  t3482 = t2985 + t3434;
  t3490 = -0.038748999993*t3482;
  t3498 = t3491 + t2994;
  t3499 = -2.123459e-6*t3498;
  t3503 = -0.28120900000849935*t2993;
  t3506 = 1.0248489999999998e-12 + t3490 + t3499 + t3503;
  t4240 = t3014*t2077;
  t4241 = t3027*t1923;
  t4242 = t4240 + t4241;
  t4246 = -1.*t561*t3516*t1574;
  t4248 = -6.5e-11*t2993*t4134;
  t4251 = t3521*t4242;
  t4252 = t4246 + t4248 + t4251;
  t4256 = 1.000000000049*t561*t2993*t1574;
  t4259 = t3533*t4134;
  t4260 = t3537*t4242;
  t4261 = t4256 + t4259 + t4260;
  t4268 = -1.*t561*t3544*t1574;
  t4272 = t3549*t4134;
  t4274 = -1.000000000016*t2993*t4242;
  t4277 = t4268 + t4272 + t4274;
  t3614 = t3141 + t3613;
  t3615 = -0.038922999986*t3614;
  t3625 = t3623 + t3249;
  t3627 = -3.6777349999999994e-6*t3625;
  t3628 = -0.5031490000160505*t3146;
  t3629 = 1.8190549999999993e-12 + t3615 + t3627 + t3628;
  t3647 = t3646 + t3204;
  t3649 = -0.038922999986*t3647;
  t3653 = t3652 + t3249;
  t3659 = -0.503149000008*t3653;
  t3668 = -2.3905277499999995e-16*t3146;
  t3675 = -2.598649999999999e-7 + t3649 + t3659 + t3668;
  t3700 = t3139 + t3613;
  t3712 = -0.503149000008*t3700;
  t3716 = t3713 + t3204;
  t3717 = -3.6777349999999994e-6*t3716;
  t3720 = -0.03892299998790722*t3146;
  t3722 = 1.0394599999999997e-12 + t3712 + t3717 + t3720;
  t3754 = t3652 + t3197;
  t4329 = -1.*t561*t3171*t1574;
  t4331 = t3177*t4134;
  t4333 = t3186*t4242;
  t4334 = t4329 + t4331 + t4333;
  t4339 = -1.*t561*t3215*t1574;
  t4340 = t3219*t4134;
  t4345 = t3221*t4242;
  t4350 = t4339 + t4340 + t4345;
  t3764 = t3646 + t3155;
  t4352 = -1.*t3267*t561*t1574;
  t4359 = t3270*t4134;
  t4363 = t3273*t4242;
  t4364 = t4352 + t4359 + t4363;
  t3772 = t3623 + t3197;
  t3775 = t3141 + t3774;
  t3786 = t3139 + t3774;
  t3789 = t3713 + t3155;
  t4483 = t1578*t561*t308*t3027;
  t4485 = t3014*t1578*t561*t77;
  t4488 = t4483 + t4485;
  t4490 = -1.*t3014*t1578*t561*t308;
  t4491 = t1578*t561*t3027*t77;
  t4492 = t4490 + t4491;
  t4495 = -1.*t1578*t3171*t61;
  t4497 = t3177*t4488;
  t4509 = t3186*t4492;
  t4511 = t4495 + t4497 + t4509;
  t4520 = -1.*t1578*t3215*t61;
  t4521 = t3219*t4488;
  t4524 = t3221*t4492;
  t4525 = t4520 + t4521 + t4524;
  t4528 = -1.*t3267*t1578*t61;
  t4535 = t3270*t4488;
  t4538 = t3273*t4492;
  t4541 = t4528 + t4535 + t4538;
  t4594 = t3027*t1600;
  t4597 = t3014*t2663;
  t4601 = t4594 + t4597;
  t4603 = -1.*t3027*t2663;
  t4606 = t3840 + t4603;
  t4612 = t3221*t4601;
  t4613 = t3219*t4606;
  t4614 = t4612 + t4613;
  t4618 = t3186*t4601;
  t4634 = t3177*t4606;
  t4635 = t4618 + t4634;
  t4637 = t3273*t4601;
  t4638 = t3270*t4606;
  t4641 = t4637 + t4638;
  t4721 = -1.*t3027*t2753;
  t4722 = t4721 + t4597;
  t4726 = -1.*t3014*t2753;
  t4729 = t4726 + t4603;
  t4732 = t3221*t4722;
  t4733 = t3219*t4729;
  t4734 = t4732 + t4733;
  t4748 = t3186*t4722;
  t4750 = t3177*t4729;
  t4752 = t4748 + t4750;
  t4758 = t3273*t4722;
  t4760 = t3270*t4729;
  t4761 = t4758 + t4760;
  t4809 = t3014*t2753;
  t4820 = t3027*t2663;
  t4822 = t4809 + t4820;
  t4826 = t1578*t561*t3516;
  t4828 = -6.5e-11*t2993*t4722;
  t4831 = t3521*t4822;
  t4834 = t4826 + t4828 + t4831;
  t4837 = -1.000000000049*t1578*t561*t2993;
  t4839 = t3533*t4722;
  t4842 = t3537*t4822;
  t4843 = t4837 + t4839 + t4842;
  t4849 = t1578*t561*t3544;
  t4853 = t3549*t4722;
  t4860 = -1.000000000016*t2993*t4822;
  t4862 = t4849 + t4853 + t4860;
  t4918 = t1578*t561*t3171;
  t4919 = t3177*t4722;
  t4921 = t3186*t4822;
  t4925 = t4918 + t4919 + t4921;
  t4928 = t1578*t561*t3215;
  t4929 = t3219*t4722;
  t4930 = t3221*t4822;
  t4932 = t4928 + t4929 + t4930;
  t4939 = t3267*t1578*t561;
  t4940 = t3270*t4722;
  t4943 = t3273*t4822;
  t4944 = t4939 + t4940 + t4943;
  p_output1[0]=1.;
  p_output1[1]=t386*t455 + t493*t511 + t561*t577 - 1.*t308*t324*t61 + t646*t692 + t704*t722 + t744*t763 - 0.03875*(t688*t704 + t657*t744 + 4.e-6*t646*t765) + t255*t61*t77 + 0.14871*(4.e-6*t688*t704 + 4.e-6*t744*t765 + t646*t779) + 0.80321*(-4.e-6*t646*t688 - 1.*t688*t744 + t704*t840);
  p_output1[2]=t1020 + t1066 - 1.*t255*t308*t561 - 1.*t324*t561*t77 + t863 + t906 + t928 + t949 + t984 + t996;
  p_output1[3]=t1020 + t1066 + t1131*t308*t561 - 1.*t1111*t561*t77 + t863 + t906 + t928 + t949 + t984 + t996;
  p_output1[4]=t1224*t1240 + t1157*t61 + t1268*t692 + t1306*t722 + t1340*t763 - 0.03875*(t1340*t657 + t1306*t688 + 4.e-6*t1268*t765) + 0.14871*(4.e-6*t1306*t688 + 4.e-6*t1340*t765 + t1268*t779) + 0.80321*(-4.e-6*t1268*t688 - 1.*t1340*t688 + t1306*t840) + t1211*t895;
  p_output1[5]=t1430*t1441 + t1450*t1458 + t1465*t1470 - 0.03875*(t1465*t657 - 1.*t1430*t688 - 4.e-6*t1450*t688) + 0.14871*(4.e-6*t1465*t657 - 4.e-6*t1430*t688 - 1.6e-11*t1450*t688) + 0.80321*(-1.*t1430*t657 - 4.e-6*t1450*t657 - 1.000000000016*t1465*t688);
  p_output1[6]=1.;
  p_output1[7]=t1585*t255 + t1600*t324 + t1622*t455 + t1631*t511 - 1.*t1578*t561*t577 + t1641*t692 + t1658*t722 + t1679*t763 - 0.03875*(t1679*t657 + t1658*t688 + 4.e-6*t1641*t765) + 0.14871*(4.e-6*t1658*t688 + 4.e-6*t1679*t765 + t1641*t779) + 0.80321*(-4.e-6*t1641*t688 - 1.*t1679*t688 + t1658*t840);
  p_output1[8]=t1754*t455 + t1789*t511 + t1574*t308*t324*t561 + t1574*t577*t61 + t1800*t692 + t1813*t722 + t1847*t763 - 0.03875*(t1847*t657 + t1813*t688 + 4.e-6*t1800*t765) - 1.*t1574*t255*t561*t77 + 0.14871*(4.e-6*t1813*t688 + 4.e-6*t1847*t765 + t1800*t779) + 0.80321*(-4.e-6*t1800*t688 - 1.*t1847*t688 + t1813*t840);
  p_output1[9]=t1910*t255 + t1923*t324 + t1936*t455 + t1961*t511 + t1979*t692 + t1994*t722 + t2002*t763 - 0.03875*(t2002*t657 + t1994*t688 + 4.e-6*t1979*t765) + 0.14871*(4.e-6*t1994*t688 + 4.e-6*t2002*t765 + t1979*t779) + 0.80321*(-4.e-6*t1979*t688 - 1.*t2002*t688 + t1994*t840);
  p_output1[10]=t1111*t1923 + t1131*t2077 + t2096*t455 + t2107*t511 + t2126*t692 + t2136*t722 + t2145*t763 - 0.03875*(t2145*t657 + t2136*t688 + 4.e-6*t2126*t765) + 0.14871*(4.e-6*t2136*t688 + 4.e-6*t2145*t765 + t2126*t779) + 0.80321*(-4.e-6*t2126*t688 - 1.*t2145*t688 + t2136*t840);
  p_output1[11]=t1211*t2107 + t1240*t2213 - 1.*t1157*t1574*t561 + t2242*t692 + t2260*t722 + t2282*t763 - 0.03875*(t2282*t657 + t2260*t688 + 4.e-6*t2242*t765) + 0.14871*(4.e-6*t2260*t688 + 4.e-6*t2282*t765 + t2242*t779) + 0.80321*(-4.e-6*t2242*t688 - 1.*t2282*t688 + t2260*t840);
  p_output1[12]=t1441*t2348 + t1458*t2356 + t1470*t2359 - 0.03875*(t2379 + t2382 + t2359*t657) + 0.14871*(4.e-6*t2359*t657 - 4.e-6*t2348*t688 - 1.6e-11*t2356*t688) + 0.80321*(-1.*t2348*t657 - 4.e-6*t2356*t657 - 1.000000000016*t2359*t688);
  p_output1[13]=1.;
  p_output1[14]=t1923*t255 + t2077*t324 + t2107*t455 + t2213*t511 - 1.*t1574*t561*t577 + t2356*t692 + t2359*t722 + t2348*t763 - 0.03875*(t2348*t657 + t2359*t688 + 4.e-6*t2356*t765) + 0.14871*(4.e-6*t2359*t688 + 4.e-6*t2348*t765 + t2356*t779) + 0.80321*(t2379 + t2382 + t2359*t840);
  p_output1[15]=t2487*t455 + t2501*t511 - 1.*t1578*t308*t324*t561 - 1.*t1578*t577*t61 + t2547*t692 + t2563*t722 + t2584*t763 - 0.03875*(t2584*t657 + t2563*t688 + 4.e-6*t2547*t765) + t1578*t255*t561*t77 + 0.14871*(4.e-6*t2563*t688 + 4.e-6*t2584*t765 + t2547*t779) + 0.80321*(-4.e-6*t2547*t688 - 1.*t2584*t688 + t2563*t840);
  p_output1[16]=t1600*t255 + t2663*t324 + t2671*t455 + t2690*t511 + t2698*t692 + t2710*t722 + t2717*t763 - 0.03875*(t2717*t657 + t2710*t688 + 4.e-6*t2698*t765) + 0.14871*(4.e-6*t2710*t688 + 4.e-6*t2717*t765 + t2698*t779) + 0.80321*(-4.e-6*t2698*t688 - 1.*t2717*t688 + t2710*t840);
  p_output1[17]=t1111*t2663 + t1131*t2753 + t2758*t455 + t2765*t511 + t2774*t692 + t2786*t722 + t2790*t763 - 0.03875*(t2790*t657 + t2786*t688 + 4.e-6*t2774*t765) + 0.14871*(4.e-6*t2786*t688 + 4.e-6*t2790*t765 + t2774*t779) + 0.80321*(-4.e-6*t2774*t688 - 1.*t2790*t688 + t2786*t840);
  p_output1[18]=t1211*t2765 + t1240*t2834 + t1157*t1578*t561 + t2841*t692 + t2850*t722 + t2857*t763 - 0.03875*(t2857*t657 + t2850*t688 + 4.e-6*t2841*t765) + 0.14871*(4.e-6*t2850*t688 + 4.e-6*t2857*t765 + t2841*t779) + 0.80321*(-4.e-6*t2841*t688 - 1.*t2857*t688 + t2850*t840);
  p_output1[19]=t1441*t2912 + t1458*t2929 + t1470*t2935 - 0.03875*(t2935*t657 - 1.*t2912*t688 - 4.e-6*t2929*t688) + 0.14871*(4.e-6*t2935*t657 - 4.e-6*t2912*t688 - 1.6e-11*t2929*t688) + 0.80321*(-1.*t2912*t657 - 4.e-6*t2929*t657 - 1.000000000016*t2935*t688);
  p_output1[20]=1.;
  p_output1[21]=t3070*t3076 + t3125*t3131 + t3167*t3189 + t3209*t3231 + t3262*t3277 - 0.038924*(t3189*t3285 + t3231*t3292 + t3277*t3297) - 0.80315*(t3189*t3311 + t3231*t3315 + t3277*t3320) + 0.148705*(t3189*t3331 + t3231*t3335 + t3277*t3340) + t3011*t561 - 1.*t3031*t308*t61 + t3042*t61*t77;
  p_output1[22]=t3361 + t3370 + t3377 + t3387 + t3392 + t3398 + t3412 + t3421 - 1.*t3042*t308*t561 - 1.*t3031*t561*t77;
  p_output1[23]=t3361 + t3370 + t3377 + t3387 + t3392 + t3398 + t3412 + t3421 + t308*t3426*t561 - 1.*t3429*t561*t77;
  p_output1[24]=t3359*t3479 + t3506*t3512 + t3209*t3524 + t3262*t3541 + t3167*t3561 - 0.038924*(t3292*t3524 + t3297*t3541 + t3285*t3561) - 0.80315*(t3315*t3524 + t3320*t3541 + t3311*t3561) + 0.148705*(t3335*t3524 + t3340*t3541 + t3331*t3561) + t3446*t61;
  p_output1[25]=t3629*t3639 + t3675*t3697 + t3722*t3750 + 0.148705*(-6.5e-11*t3146*t3697 + t3639*t3754 + t3750*t3764) - 0.80315*(-1.000000000016*t3146*t3639 + t3697*t3772 + t3750*t3775) - 0.038924*(-1.000000000049*t3146*t3750 + t3639*t3786 + t3697*t3789);
  p_output1[26]=1.;
  p_output1[27]=t1600*t3031 + t1585*t3042 + t3070*t3837 + t3125*t3847 + t3167*t3860 + t3209*t3872 + t3262*t3886 - 0.038924*(t3285*t3860 + t3292*t3872 + t3297*t3886) - 0.80315*(t3311*t3860 + t3315*t3872 + t3320*t3886) + 0.148705*(t3331*t3860 + t3335*t3872 + t3340*t3886) - 1.*t1578*t3011*t561;
  p_output1[28]=t3070*t3953 + t3125*t3971 + t3167*t3987 + t3209*t3998 + t3262*t4008 - 0.038924*(t3285*t3987 + t3292*t3998 + t3297*t4008) - 0.80315*(t3311*t3987 + t3315*t3998 + t3320*t4008) + 0.148705*(t3331*t3987 + t3335*t3998 + t3340*t4008) + t1574*t3031*t308*t561 + t1574*t3011*t61 - 1.*t1574*t3042*t561*t77;
  p_output1[29]=t1923*t3031 + t1910*t3042 + t3125*t4057 + t3070*t4066 + t3209*t4072 + t3167*t4080 + t3262*t4096 - 0.038924*(t3292*t4072 + t3285*t4080 + t3297*t4096) - 0.80315*(t3315*t4072 + t3311*t4080 + t3320*t4096) + 0.148705*(t3335*t4072 + t3331*t4080 + t3340*t4096);
  p_output1[30]=t2077*t3426 + t1923*t3429 + t3125*t4134 + t3070*t4142 + t3209*t4159 + t3167*t4176 + t3262*t4190 - 0.038924*(t3292*t4159 + t3285*t4176 + t3297*t4190) - 0.80315*(t3315*t4159 + t3311*t4176 + t3320*t4190) + 0.148705*(t3335*t4159 + t3331*t4176 + t3340*t4190);
  p_output1[31]=t3479*t4134 + t3506*t4242 + t3209*t4252 + t3262*t4261 + t3167*t4277 - 0.038924*(t3292*t4252 + t3297*t4261 + t3285*t4277) - 0.80315*(t3315*t4252 + t3320*t4261 + t3311*t4277) + 0.148705*(t3335*t4252 + t3340*t4261 + t3331*t4277) - 1.*t1574*t3446*t561;
  p_output1[32]=t3629*t4334 + t3675*t4350 + t3722*t4364 - 0.038924*(t3786*t4334 + t3789*t4350 - 1.000000000049*t3146*t4364) + 0.148705*(t3754*t4334 - 6.5e-11*t3146*t4350 + t3764*t4364) - 0.80315*(-1.000000000016*t3146*t4334 + t3772*t4350 + t3775*t4364);
  p_output1[33]=1.;
  p_output1[34]=t2077*t3031 + t1923*t3042 + t3070*t4134 + t3125*t4242 + t3167*t4334 + t3209*t4350 + t3262*t4364 - 0.038924*(t3285*t4334 + t3292*t4350 + t3297*t4364) - 0.80315*(t3311*t4334 + t3315*t4350 + t3320*t4364) + 0.148705*(t3331*t4334 + t3335*t4350 + t3340*t4364) - 1.*t1574*t3011*t561;
  p_output1[35]=t3070*t4488 + t3125*t4492 + t3167*t4511 + t3209*t4525 + t3262*t4541 - 0.038924*(t3285*t4511 + t3292*t4525 + t3297*t4541) - 0.80315*(t3311*t4511 + t3315*t4525 + t3320*t4541) + 0.148705*(t3331*t4511 + t3335*t4525 + t3340*t4541) - 1.*t1578*t3031*t308*t561 - 1.*t1578*t3011*t61 + t1578*t3042*t561*t77;
  p_output1[36]=t2663*t3031 + t1600*t3042 + t3125*t4601 + t3070*t4606 + t3209*t4614 + t3167*t4635 + t3262*t4641 - 0.038924*(t3292*t4614 + t3285*t4635 + t3297*t4641) - 0.80315*(t3315*t4614 + t3311*t4635 + t3320*t4641) + 0.148705*(t3335*t4614 + t3331*t4635 + t3340*t4641);
  p_output1[37]=t2753*t3426 + t2663*t3429 + t3125*t4722 + t3070*t4729 + t3209*t4734 + t3167*t4752 + t3262*t4761 - 0.038924*(t3292*t4734 + t3285*t4752 + t3297*t4761) - 0.80315*(t3315*t4734 + t3311*t4752 + t3320*t4761) + 0.148705*(t3335*t4734 + t3331*t4752 + t3340*t4761);
  p_output1[38]=t3479*t4722 + t3506*t4822 + t3209*t4834 + t3262*t4843 + t3167*t4862 - 0.038924*(t3292*t4834 + t3297*t4843 + t3285*t4862) - 0.80315*(t3315*t4834 + t3320*t4843 + t3311*t4862) + 0.148705*(t3335*t4834 + t3340*t4843 + t3331*t4862) + t1578*t3446*t561;
  p_output1[39]=t3629*t4925 + t3675*t4932 + t3722*t4944 - 0.038924*(t3786*t4925 + t3789*t4932 - 1.000000000049*t3146*t4944) + 0.148705*(t3754*t4925 - 6.5e-11*t3146*t4932 + t3764*t4944) - 0.80315*(-1.000000000016*t3146*t4925 + t3772*t4932 + t3775*t4944);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_ParallelStance1.hh"

namespace ParallelStance1
{

void J_output_boundary_ParallelStance1_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
