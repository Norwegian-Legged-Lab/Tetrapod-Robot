/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:12:00 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t69;
  double t171;
  double t175;
  double t210;
  double t232;
  double t274;
  double t82;
  double t384;
  double t450;
  double t454;
  double t455;
  double t460;
  double t519;
  double t545;
  double t442;
  double t444;
  double t445;
  double t486;
  double t488;
  double t491;
  double t601;
  double t607;
  double t611;
  double t621;
  double t549;
  double t557;
  double t560;
  double t561;
  double t566;
  double t591;
  double t697;
  double t654;
  double t658;
  double t663;
  double t665;
  double t630;
  double t631;
  double t633;
  double t634;
  double t636;
  double t637;
  double t320;
  double t344;
  double t393;
  double t414;
  double t448;
  double t458;
  double t468;
  double t475;
  double t496;
  double t508;
  double t514;
  double t831;
  double t833;
  double t845;
  double t871;
  double t881;
  double t886;
  double t594;
  double t620;
  double t623;
  double t625;
  double t639;
  double t641;
  double t642;
  double t678;
  double t688;
  double t689;
  double t692;
  double t768;
  double t770;
  double t914;
  double t916;
  double t927;
  double t901;
  double t904;
  double t906;
  double t949;
  double t953;
  double t954;
  double t710;
  double t713;
  double t859;
  double t891;
  double t908;
  double t932;
  double t957;
  double t961;
  double t967;
  double t974;
  double t981;
  double t1001;
  double t1007;
  double t1008;
  double t1014;
  double t1026;
  double t1035;
  double t1046;
  double t1058;
  double t1064;
  double t1068;
  double t1069;
  double t1146;
  double t1147;
  double t1148;
  double t1205;
  double t1207;
  double t1220;
  double t1225;
  double t1238;
  double t1240;
  double t1243;
  double t1253;
  double t1169;
  double t1174;
  double t1182;
  double t1186;
  double t1349;
  double t1350;
  double t1351;
  double t1355;
  double t1324;
  double t1329;
  double t1332;
  double t1334;
  double t1364;
  double t1367;
  double t1456;
  double t1452;
  double t1454;
  double t1460;
  double t1463;
  double t1471;
  double t1474;
  double t1480;
  double t526;
  double t533;
  double t536;
  double t540;
  double t1483;
  double t1484;
  double t1485;
  double t1491;
  double t1493;
  double t1498;
  double t1501;
  double t1502;
  double t1504;
  double t1505;
  double t1518;
  double t1521;
  double t1522;
  double t1523;
  double t1509;
  double t1513;
  double t1514;
  double t1515;
  double t1567;
  double t1569;
  double t1571;
  double t1583;
  double t1592;
  double t1593;
  double t1599;
  double t1605;
  double t1609;
  double t1617;
  double t1637;
  double t1643;
  double t1644;
  double t1645;
  double t1621;
  double t1625;
  double t1626;
  double t1627;
  double t1705;
  double t1713;
  double t1714;
  double t1716;
  double t1717;
  double t1720;
  double t1723;
  double t1724;
  double t1725;
  double t1730;
  double t1731;
  double t1732;
  double t1744;
  double t1746;
  double t1748;
  double t1737;
  double t1738;
  double t1739;
  double t1752;
  double t1753;
  double t1754;
  double t1084;
  double t1087;
  double t1101;
  double t1102;
  double t1818;
  double t1819;
  double t1820;
  double t1826;
  double t1830;
  double t1835;
  double t1840;
  double t1851;
  double t1854;
  double t1855;
  double t1844;
  double t1845;
  double t1846;
  double t1861;
  double t1863;
  double t1864;
  double t1120;
  double t1124;
  double t1125;
  double t1132;
  double t1133;
  double t1136;
  double t1156;
  double t1158;
  double t1163;
  double t1917;
  double t1919;
  double t1920;
  double t1944;
  double t1947;
  double t1958;
  double t1963;
  double t1969;
  double t1975;
  double t1976;
  double t1980;
  double t1924;
  double t1925;
  double t1929;
  double t1936;
  double t1336;
  double t1340;
  double t1342;
  double t1356;
  double t1357;
  double t1358;
  double t1368;
  double t1373;
  double t1375;
  double t2047;
  double t2051;
  double t2053;
  double t2054;
  double t2029;
  double t2037;
  double t2041;
  double t2042;
  double t2060;
  double t2063;
  double t2086;
  double t2089;
  double t2180;
  double t2181;
  double t2182;
  double t2187;
  double t2197;
  double t2199;
  double t2204;
  double t2207;
  double t2213;
  double t2214;
  double t2229;
  double t2230;
  double t2232;
  double t2236;
  double t2216;
  double t2219;
  double t2224;
  double t2225;
  double t2300;
  double t2306;
  double t2307;
  double t2312;
  double t2313;
  double t2324;
  double t2325;
  double t2328;
  double t2347;
  double t2348;
  double t2349;
  double t2334;
  double t2335;
  double t2337;
  double t2352;
  double t2353;
  double t2355;
  double t2397;
  double t2398;
  double t2400;
  double t2403;
  double t2404;
  double t2410;
  double t2411;
  double t2425;
  double t2429;
  double t2431;
  double t2418;
  double t2420;
  double t2421;
  double t2438;
  double t2441;
  double t2449;
  double t2508;
  double t2510;
  double t2512;
  double t2529;
  double t2533;
  double t2536;
  double t2541;
  double t2542;
  double t2545;
  double t2547;
  double t2520;
  double t2523;
  double t2525;
  double t2527;
  double t2615;
  double t2620;
  double t2624;
  double t2627;
  double t2601;
  double t2605;
  double t2607;
  double t2608;
  double t2635;
  double t2636;
  double t2674;
  double t2675;
  double t2677;
  double t2684;
  double t2701;
  double t2702;
  double t2704;
  double t2706;
  double t2707;
  double t2683;
  double t2692;
  double t2727;
  double t2777;
  double t2778;
  double t2779;
  double t2782;
  double t2755;
  double t2762;
  double t2738;
  double t2739;
  double t2740;
  double t2768;
  double t2769;
  double t2771;
  double t2790;
  double t2720;
  double t2802;
  double t2730;
  double t2822;
  double t2781;
  double t2845;
  double t2846;
  double t2685;
  double t2798;
  double t2800;
  double t2801;
  double t2803;
  double t2804;
  double t2806;
  double t2807;
  double t2810;
  double t2811;
  double t2866;
  double t2848;
  double t2849;
  double t2850;
  double t2851;
  double t2853;
  double t2854;
  double t2856;
  double t2860;
  double t2875;
  double t2877;
  double t2879;
  double t2880;
  double t2881;
  double t2882;
  double t2883;
  double t2885;
  double t2791;
  double t2891;
  double t2785;
  double t2925;
  double t2839;
  double t2902;
  double t2903;
  double t2823;
  double t2710;
  double t2711;
  double t2705;
  double t2708;
  double t2745;
  double t2746;
  double t2756;
  double t2757;
  double t2764;
  double t2765;
  double t2767;
  double t2714;
  double t2716;
  double t2722;
  double t2725;
  double t2733;
  double t2734;
  double t2735;
  double t2817;
  double t2820;
  double t2833;
  double t2834;
  double t2840;
  double t2843;
  double t2844;
  double t2983;
  double t2985;
  double t2986;
  double t2988;
  double t2990;
  double t2994;
  double t2776;
  double t2780;
  double t2788;
  double t2789;
  double t2793;
  double t2794;
  double t2795;
  double t2863;
  double t2865;
  double t2868;
  double t2869;
  double t2870;
  double t2872;
  double t2874;
  double t2905;
  double t2998;
  double t3000;
  double t3009;
  double t2897;
  double t3016;
  double t3021;
  double t3022;
  double t2908;
  double t2911;
  double t3027;
  double t3028;
  double t3029;
  double t2928;
  double t2918;
  double t2919;
  double t2939;
  double t2951;
  double t2952;
  double t2947;
  double t2955;
  double t3054;
  double t2987;
  double t2996;
  double t3012;
  double t3024;
  double t3031;
  double t3033;
  double t3034;
  double t3035;
  double t3036;
  double t3038;
  double t3040;
  double t3041;
  double t3042;
  double t3043;
  double t3044;
  double t3045;
  double t3046;
  double t3048;
  double t3049;
  double t3051;
  double t3072;
  double t3084;
  double t3087;
  double t3112;
  double t3113;
  double t3117;
  double t3078;
  double t3151;
  double t3099;
  double t3125;
  double t3126;
  double t3127;
  double t3128;
  double t3133;
  double t3135;
  double t3139;
  double t3142;
  double t3149;
  double t3154;
  double t3155;
  double t3156;
  double t3162;
  double t3163;
  double t3167;
  double t3170;
  double t3174;
  double t3176;
  double t3218;
  double t3260;
  double t3243;
  double t3245;
  double t3250;
  double t3252;
  double t3272;
  double t3277;
  double t3280;
  double t3281;
  double t3257;
  double t3307;
  double t3310;
  double t3315;
  double t3320;
  double t3233;
  double t3340;
  double t3289;
  double t2673;
  double t2682;
  double t2687;
  double t2691;
  double t2693;
  double t2696;
  double t2698;
  double t3376;
  double t3377;
  double t3381;
  double t3388;
  double t3392;
  double t3394;
  double t3404;
  double t3406;
  double t3410;
  double t3412;
  double t3416;
  double t3421;
  double t3422;
  double t3425;
  double t3427;
  double t3428;
  double t3429;
  double t3431;
  double t3517;
  double t3522;
  double t3525;
  double t3530;
  double t3538;
  double t3539;
  double t3548;
  double t3561;
  double t3562;
  double t3564;
  double t3567;
  double t3569;
  double t3571;
  double t3572;
  double t3581;
  double t3583;
  double t3586;
  double t3589;
  double t3655;
  double t3657;
  double t3662;
  double t3670;
  double t3677;
  double t3680;
  double t3684;
  double t3685;
  double t3688;
  double t3692;
  double t3693;
  double t3704;
  double t3707;
  double t3708;
  double t3710;
  double t3056;
  double t3058;
  double t3064;
  double t3795;
  double t3804;
  double t3808;
  double t3809;
  double t3813;
  double t3816;
  double t3817;
  double t3831;
  double t3838;
  double t3844;
  double t3850;
  double t3854;
  double t3855;
  double t3073;
  double t3074;
  double t3079;
  double t3080;
  double t3081;
  double t3082;
  double t3085;
  double t3086;
  double t3088;
  double t3091;
  double t3092;
  double t3093;
  double t3095;
  double t3097;
  double t3103;
  double t3107;
  double t3110;
  double t3111;
  double t3895;
  double t3897;
  double t3899;
  double t3903;
  double t3905;
  double t3910;
  double t3913;
  double t3916;
  double t3922;
  double t3926;
  double t3929;
  double t3937;
  double t3945;
  double t3948;
  double t3949;
  double t3221;
  double t3228;
  double t3236;
  double t3237;
  double t3239;
  double t3241;
  double t3258;
  double t3259;
  double t3264;
  double t3268;
  double t3269;
  double t3271;
  double t3286;
  double t3288;
  double t3290;
  double t3295;
  double t3304;
  double t3305;
  double t3322;
  double t4026;
  double t4031;
  double t4034;
  double t4036;
  double t4042;
  double t4046;
  double t4069;
  double t4070;
  double t3327;
  double t4072;
  double t4084;
  double t4085;
  double t4088;
  double t3335;
  double t3342;
  double t3349;
  double t3354;
  double t4220;
  double t4223;
  double t4229;
  double t4233;
  double t4234;
  double t4235;
  double t4243;
  double t4245;
  double t4249;
  double t4251;
  double t4257;
  double t4259;
  double t4260;
  double t4263;
  double t4266;
  double t4267;
  double t4268;
  double t4271;
  double t4323;
  double t4324;
  double t4327;
  double t4332;
  double t4337;
  double t4339;
  double t4341;
  double t4342;
  double t4346;
  double t4349;
  double t4352;
  double t4358;
  double t4360;
  double t4361;
  double t4444;
  double t4448;
  double t4451;
  double t4453;
  double t4455;
  double t4457;
  double t4458;
  double t4469;
  double t4473;
  double t4475;
  double t4479;
  double t4480;
  double t4481;
  double t4533;
  double t4534;
  double t4540;
  double t4543;
  double t4546;
  double t4549;
  double t4550;
  double t4552;
  double t4553;
  double t4558;
  double t4559;
  double t4561;
  double t4564;
  double t4566;
  double t4569;
  double t4635;
  double t4636;
  double t4637;
  double t4638;
  double t4646;
  double t4647;
  double t4655;
  double t4658;
  double t4666;
  double t4667;
  double t4673;
  double t4674;
  t69 = Sin(var1[4]);
  t171 = Cos(var1[6]);
  t175 = -1.*t171;
  t210 = 1. + t175;
  t232 = 0.15121*t210;
  t274 = Sin(var1[6]);
  t82 = Sin(var1[5]);
  t384 = Cos(var1[5]);
  t450 = Cos(var1[7]);
  t454 = -1.*t450;
  t455 = 1. + t454;
  t460 = Sin(var1[7]);
  t519 = Cos(var1[4]);
  t545 = -1. + t450;
  t442 = t171*t69*t82;
  t444 = t384*t69*t274;
  t445 = t442 + t444;
  t486 = -1.*t384*t171*t69;
  t488 = t69*t82*t274;
  t491 = t486 + t488;
  t601 = Cos(var1[8]);
  t607 = -1.*t601;
  t611 = 1. + t607;
  t621 = Sin(var1[8]);
  t549 = 4.e-6*t519*t545;
  t557 = 1.6e-11*t545;
  t560 = 1. + t557;
  t561 = t560*t445;
  t566 = 4.e-6*t491*t460;
  t591 = t549 + t561 + t566;
  t697 = -1. + t601;
  t654 = t519*t450;
  t658 = 4.e-6*t545*t445;
  t663 = t491*t460;
  t665 = t654 + t658 + t663;
  t630 = -1.000000000016*t455;
  t631 = 1. + t630;
  t633 = t631*t491;
  t634 = -1.*t519*t460;
  t636 = -4.e-6*t445*t460;
  t637 = t633 + t634 + t636;
  t320 = -0.15121*t274;
  t344 = t232 + t320;
  t393 = 0.15121*t274;
  t414 = t232 + t393;
  t448 = -1.2484e-7*var1[7];
  t458 = -1.5499600000248e-7*t455;
  t468 = 1.124840000016e-6*t460;
  t475 = t448 + t458 + t468;
  t496 = 0.281210000008499*t455;
  t508 = 0.03874900000062*t460;
  t514 = t496 + t508;
  t831 = -1.*t519*t384*t171;
  t833 = t519*t82*t274;
  t845 = t831 + t833;
  t871 = -1.*t519*t171*t82;
  t881 = -1.*t519*t384*t274;
  t886 = t871 + t881;
  t594 = -1.284e-8*var1[8];
  t620 = -1.5499600000248e-7*t611;
  t623 = 2.012840000032e-6*t621;
  t625 = t594 + t620 + t623;
  t639 = 0.503210000016051*t611;
  t641 = 0.03874900000062*t621;
  t642 = t639 + t641;
  t678 = 5.136e-14*var1[8];
  t688 = -0.03874900000062*t611;
  t689 = 0.503210000008*t621;
  t692 = t678 + t688 + t689;
  t768 = -1.000000000016*t611;
  t770 = 1. + t768;
  t914 = t631*t886;
  t916 = -4.e-6*t845*t460;
  t927 = t914 + t916;
  t901 = t560*t845;
  t904 = 4.e-6*t886*t460;
  t906 = t901 + t904;
  t949 = 4.e-6*t545*t845;
  t953 = t886*t460;
  t954 = t949 + t953;
  t710 = 1.6e-11*t697;
  t713 = 1. + t710;
  t859 = t845*t475;
  t891 = t886*t514;
  t908 = t906*t625;
  t932 = t927*t642;
  t957 = t954*t692;
  t961 = t770*t927;
  t967 = -4.e-6*t906*t621;
  t974 = -1.*t954*t621;
  t981 = t961 + t967 + t974;
  t1001 = 0.80321*t981;
  t1007 = t713*t906;
  t1008 = 4.e-6*t697*t954;
  t1014 = 4.e-6*t927*t621;
  t1026 = t1007 + t1008 + t1014;
  t1035 = 0.14871*t1026;
  t1046 = 4.e-6*t697*t906;
  t1058 = t601*t954;
  t1064 = t927*t621;
  t1068 = t1046 + t1058 + t1064;
  t1069 = -0.03875*t1068;
  t1146 = t519*t384*t171;
  t1147 = -1.*t519*t82*t274;
  t1148 = t1146 + t1147;
  t1205 = -1.*t450*t69;
  t1207 = -4.e-6*t450*t886;
  t1220 = -1.000000000016*t1148*t460;
  t1225 = t1205 + t1207 + t1220;
  t1238 = t450*t1148;
  t1240 = -1.*t69*t460;
  t1243 = -4.e-6*t886*t460;
  t1253 = t1238 + t1240 + t1243;
  t1169 = 4.e-6*t450*t1148;
  t1174 = -4.e-6*t69*t460;
  t1182 = -1.6e-11*t886*t460;
  t1186 = t1169 + t1174 + t1182;
  t1349 = 4.e-6*t545*t69;
  t1350 = t560*t886;
  t1351 = 4.e-6*t1148*t460;
  t1355 = t1349 + t1350 + t1351;
  t1324 = t450*t69;
  t1329 = 4.e-6*t545*t886;
  t1332 = t1148*t460;
  t1334 = t1324 + t1329 + t1332;
  t1364 = t631*t1148;
  t1367 = t1364 + t1240 + t1243;
  t1456 = Cos(var1[3]);
  t1452 = Sin(var1[3]);
  t1454 = -1.*t384*t1452;
  t1460 = -1.*t1456*t69*t82;
  t1463 = t1454 + t1460;
  t1471 = t1456*t384*t69;
  t1474 = -1.*t1452*t82;
  t1480 = t1471 + t1474;
  t526 = 4.9936e-13*var1[7];
  t533 = -0.03874900000062*t455;
  t536 = 0.281210000004*t460;
  t540 = t526 + t533 + t536;
  t1483 = t171*t1463;
  t1484 = -1.*t1480*t274;
  t1485 = t1483 + t1484;
  t1491 = t171*t1480;
  t1493 = t1463*t274;
  t1498 = t1491 + t1493;
  t1501 = -4.e-6*t1456*t519*t545;
  t1502 = t560*t1485;
  t1504 = 4.e-6*t1498*t460;
  t1505 = t1501 + t1502 + t1504;
  t1518 = -1.*t1456*t519*t450;
  t1521 = 4.e-6*t545*t1485;
  t1522 = t1498*t460;
  t1523 = t1518 + t1521 + t1522;
  t1509 = t631*t1498;
  t1513 = t1456*t519*t460;
  t1514 = -4.e-6*t1485*t460;
  t1515 = t1509 + t1513 + t1514;
  t1567 = -1.*t519*t171*t1452*t82;
  t1569 = -1.*t519*t384*t1452*t274;
  t1571 = t1567 + t1569;
  t1583 = t519*t384*t171*t1452;
  t1592 = -1.*t519*t1452*t82*t274;
  t1593 = t1583 + t1592;
  t1599 = 4.e-6*t545*t1452*t69;
  t1605 = t560*t1571;
  t1609 = 4.e-6*t1593*t460;
  t1617 = t1599 + t1605 + t1609;
  t1637 = t450*t1452*t69;
  t1643 = 4.e-6*t545*t1571;
  t1644 = t1593*t460;
  t1645 = t1637 + t1643 + t1644;
  t1621 = t631*t1593;
  t1625 = -1.*t1452*t69*t460;
  t1626 = -4.e-6*t1571*t460;
  t1627 = t1621 + t1625 + t1626;
  t1705 = -1.*t384*t1452*t69;
  t1713 = -1.*t1456*t82;
  t1714 = t1705 + t1713;
  t1716 = t1456*t384;
  t1717 = -1.*t1452*t69*t82;
  t1720 = t1716 + t1717;
  t1723 = t171*t1714;
  t1724 = -1.*t1720*t274;
  t1725 = t1723 + t1724;
  t1730 = t171*t1720;
  t1731 = t1714*t274;
  t1732 = t1730 + t1731;
  t1744 = t631*t1732;
  t1746 = -4.e-6*t1725*t460;
  t1748 = t1744 + t1746;
  t1737 = t560*t1725;
  t1738 = 4.e-6*t1732*t460;
  t1739 = t1737 + t1738;
  t1752 = 4.e-6*t545*t1725;
  t1753 = t1732*t460;
  t1754 = t1752 + t1753;
  t1084 = -0.15121*t171;
  t1087 = t1084 + t393;
  t1101 = 0.15121*t171;
  t1102 = t1101 + t393;
  t1818 = t384*t1452*t69;
  t1819 = t1456*t82;
  t1820 = t1818 + t1819;
  t1826 = -1.*t171*t1820;
  t1830 = t1826 + t1724;
  t1835 = -1.*t1820*t274;
  t1840 = t1730 + t1835;
  t1851 = t631*t1840;
  t1854 = -4.e-6*t1830*t460;
  t1855 = t1851 + t1854;
  t1844 = t560*t1830;
  t1845 = 4.e-6*t1840*t460;
  t1846 = t1844 + t1845;
  t1861 = 4.e-6*t545*t1830;
  t1863 = t1840*t460;
  t1864 = t1861 + t1863;
  t1120 = 0.281210000004*t450;
  t1124 = -0.03874900000062*t460;
  t1125 = 4.9936e-13 + t1120 + t1124;
  t1132 = 1.124840000016e-6*t450;
  t1133 = -1.5499600000248e-7*t460;
  t1136 = -1.2484e-7 + t1132 + t1133;
  t1156 = 0.03874900000062*t450;
  t1158 = 0.281210000008499*t460;
  t1163 = t1156 + t1158;
  t1917 = t171*t1820;
  t1919 = t1720*t274;
  t1920 = t1917 + t1919;
  t1944 = t519*t450*t1452;
  t1947 = -4.e-6*t450*t1840;
  t1958 = -1.000000000016*t1920*t460;
  t1963 = t1944 + t1947 + t1958;
  t1969 = t450*t1920;
  t1975 = t519*t1452*t460;
  t1976 = -4.e-6*t1840*t460;
  t1980 = t1969 + t1975 + t1976;
  t1924 = 4.e-6*t450*t1920;
  t1925 = 4.e-6*t519*t1452*t460;
  t1929 = -1.6e-11*t1840*t460;
  t1936 = t1924 + t1925 + t1929;
  t1336 = 0.503210000008*t601;
  t1340 = -0.03874900000062*t621;
  t1342 = 5.136e-14 + t1336 + t1340;
  t1356 = 2.012840000032e-6*t601;
  t1357 = -1.5499600000248e-7*t621;
  t1358 = -1.284e-8 + t1356 + t1357;
  t1368 = 0.03874900000062*t601;
  t1373 = 0.503210000016051*t621;
  t1375 = t1368 + t1373;
  t2047 = -4.e-6*t519*t545*t1452;
  t2051 = t560*t1840;
  t2053 = 4.e-6*t1920*t460;
  t2054 = t2047 + t2051 + t2053;
  t2029 = -1.*t519*t450*t1452;
  t2037 = 4.e-6*t545*t1840;
  t2041 = t1920*t460;
  t2042 = t2029 + t2037 + t2041;
  t2060 = t631*t1920;
  t2063 = t2060 + t1975 + t1976;
  t2086 = -4.e-6*t2054*t621;
  t2089 = -1.*t2042*t621;
  t2180 = t1456*t519*t171*t82;
  t2181 = t1456*t519*t384*t274;
  t2182 = t2180 + t2181;
  t2187 = -1.*t1456*t519*t384*t171;
  t2197 = t1456*t519*t82*t274;
  t2199 = t2187 + t2197;
  t2204 = -4.e-6*t1456*t545*t69;
  t2207 = t560*t2182;
  t2213 = 4.e-6*t2199*t460;
  t2214 = t2204 + t2207 + t2213;
  t2229 = -1.*t1456*t450*t69;
  t2230 = 4.e-6*t545*t2182;
  t2232 = t2199*t460;
  t2236 = t2229 + t2230 + t2232;
  t2216 = t631*t2199;
  t2219 = t1456*t69*t460;
  t2224 = -4.e-6*t2182*t460;
  t2225 = t2216 + t2219 + t2224;
  t2300 = t384*t1452;
  t2306 = t1456*t69*t82;
  t2307 = t2300 + t2306;
  t2312 = -1.*t2307*t274;
  t2313 = t1491 + t2312;
  t2324 = t171*t2307;
  t2325 = t1480*t274;
  t2328 = t2324 + t2325;
  t2347 = t631*t2328;
  t2348 = -4.e-6*t2313*t460;
  t2349 = t2347 + t2348;
  t2334 = t560*t2313;
  t2335 = 4.e-6*t2328*t460;
  t2337 = t2334 + t2335;
  t2352 = 4.e-6*t545*t2313;
  t2353 = t2328*t460;
  t2355 = t2352 + t2353;
  t2397 = -1.*t1456*t384*t69;
  t2398 = t1452*t82;
  t2400 = t2397 + t2398;
  t2403 = -1.*t171*t2400;
  t2404 = t2403 + t2312;
  t2410 = -1.*t2400*t274;
  t2411 = t2324 + t2410;
  t2425 = t631*t2411;
  t2429 = -4.e-6*t2404*t460;
  t2431 = t2425 + t2429;
  t2418 = t560*t2404;
  t2420 = 4.e-6*t2411*t460;
  t2421 = t2418 + t2420;
  t2438 = 4.e-6*t545*t2404;
  t2441 = t2411*t460;
  t2449 = t2438 + t2441;
  t2508 = t171*t2400;
  t2510 = t2307*t274;
  t2512 = t2508 + t2510;
  t2529 = -4.e-6*t450*t2411;
  t2533 = -1.000000000016*t2512*t460;
  t2536 = t1518 + t2529 + t2533;
  t2541 = t450*t2512;
  t2542 = -1.*t1456*t519*t460;
  t2545 = -4.e-6*t2411*t460;
  t2547 = t2541 + t2542 + t2545;
  t2520 = 4.e-6*t450*t2512;
  t2523 = -4.e-6*t1456*t519*t460;
  t2525 = -1.6e-11*t2411*t460;
  t2527 = t2520 + t2523 + t2525;
  t2615 = 4.e-6*t1456*t519*t545;
  t2620 = t560*t2411;
  t2624 = 4.e-6*t2512*t460;
  t2627 = t2615 + t2620 + t2624;
  t2601 = t1456*t519*t450;
  t2605 = 4.e-6*t545*t2411;
  t2607 = t2512*t460;
  t2608 = t2601 + t2605 + t2607;
  t2635 = t631*t2512;
  t2636 = t2635 + t2542 + t2545;
  t2674 = Cos(var1[13]);
  t2675 = -1.*t2674;
  t2677 = 1. + t2675;
  t2684 = Sin(var1[13]);
  t2701 = Cos(var1[12]);
  t2702 = -1.*t2701;
  t2704 = 1. + t2702;
  t2706 = Sin(var1[12]);
  t2707 = 0.15121*t2706;
  t2683 = 4.e-6*t2677;
  t2692 = -2.8e-11*t2677;
  t2727 = 7.e-6*t2677;
  t2777 = Cos(var1[14]);
  t2778 = -1.*t2777;
  t2779 = 1. + t2778;
  t2782 = Sin(var1[14]);
  t2755 = -1.*t2684;
  t2762 = -4.e-6*t2684;
  t2738 = t384*t2706*t69;
  t2739 = t2701*t69*t82;
  t2740 = t2738 + t2739;
  t2768 = -1.*t2701*t384*t69;
  t2769 = t2706*t69*t82;
  t2771 = t2768 + t2769;
  t2790 = 7.e-6*t2779;
  t2720 = -7.e-6*t2684;
  t2802 = -7.e-6*t2677;
  t2730 = 4.e-6*t2684;
  t2822 = 4.e-6*t2779;
  t2781 = -2.8e-11*t2779;
  t2845 = -1. + t2674;
  t2846 = 4.e-6*t2845;
  t2685 = 7.e-6*t2684;
  t2798 = 2.8e-11*t2677;
  t2800 = t2798 + t2755;
  t2801 = t519*t2800;
  t2803 = t2802 + t2762;
  t2804 = t2803*t2740;
  t2806 = -1.000000000016*t2677;
  t2807 = 1. + t2806;
  t2810 = t2807*t2771;
  t2811 = t2801 + t2804 + t2810;
  t2866 = 7.e-6*t2782;
  t2848 = t2846 + t2720;
  t2849 = t519*t2848;
  t2850 = -6.5e-11*t2677;
  t2851 = 1. + t2850;
  t2853 = t2851*t2740;
  t2854 = t2802 + t2730;
  t2856 = t2854*t2771;
  t2860 = t2849 + t2853 + t2856;
  t2875 = -1.000000000049*t2677;
  t2877 = 1. + t2875;
  t2879 = t2877*t519;
  t2880 = t2846 + t2685;
  t2881 = t2880*t2740;
  t2882 = t2798 + t2684;
  t2883 = t2882*t2771;
  t2885 = t2879 + t2881 + t2883;
  t2791 = -4.e-6*t2782;
  t2891 = 2.8e-11*t2779;
  t2785 = -1.*t2782;
  t2925 = -7.e-6*t2779;
  t2839 = 4.e-6*t2782;
  t2902 = -1. + t2777;
  t2903 = 4.e-6*t2902;
  t2823 = -7.e-6*t2782;
  t2710 = 0.15121*t2704;
  t2711 = t2710 + t2707;
  t2705 = -0.15121*t2704;
  t2708 = t2705 + t2707;
  t2745 = 1.0248489999999998e-12*var1[13];
  t2746 = -0.28120900000849935*t2677;
  t2756 = t2692 + t2755;
  t2757 = -0.038748999993*t2756;
  t2764 = t2727 + t2762;
  t2765 = -2.123459e-6*t2764;
  t2767 = t2745 + t2746 + t2757 + t2765;
  t2714 = -1.4640699999999997e-7*var1[13];
  t2716 = -1.38024835e-16*t2677;
  t2722 = t2683 + t2720;
  t2725 = -0.038748999993*t2722;
  t2733 = t2727 + t2730;
  t2734 = -0.281209000004*t2733;
  t2735 = t2714 + t2716 + t2725 + t2734;
  t2817 = -2.598649999999999e-7*var1[14];
  t2820 = -2.3905277499999995e-16*t2779;
  t2833 = t2822 + t2823;
  t2834 = -0.038922999986*t2833;
  t2840 = t2790 + t2839;
  t2843 = -0.503149000008*t2840;
  t2844 = t2817 + t2820 + t2834 + t2843;
  t2983 = -1.*t519*t384*t2706;
  t2985 = -1.*t2701*t519*t82;
  t2986 = t2983 + t2985;
  t2988 = -1.*t2701*t519*t384;
  t2990 = t519*t2706*t82;
  t2994 = t2988 + t2990;
  t2776 = 1.8190549999999993e-12*var1[14];
  t2780 = -0.5031490000160505*t2779;
  t2788 = t2781 + t2785;
  t2789 = -0.038922999986*t2788;
  t2793 = t2790 + t2791;
  t2794 = -3.6777349999999994e-6*t2793;
  t2795 = t2776 + t2780 + t2789 + t2794;
  t2863 = 1.0394599999999997e-12*var1[14];
  t2865 = -0.03892299998790722*t2779;
  t2868 = t2822 + t2866;
  t2869 = -3.6777349999999994e-6*t2868;
  t2870 = t2781 + t2782;
  t2872 = -0.503149000008*t2870;
  t2874 = t2863 + t2865 + t2869 + t2872;
  t2905 = t2903 + t2866;
  t2998 = t2854*t2986;
  t3000 = t2851*t2994;
  t3009 = t2998 + t3000;
  t2897 = t2891 + t2782;
  t3016 = t2807*t2986;
  t3021 = t2803*t2994;
  t3022 = t3016 + t3021;
  t2908 = -1.000000000049*t2779;
  t2911 = 1. + t2908;
  t3027 = t2882*t2986;
  t3028 = t2880*t2994;
  t3029 = t3027 + t3028;
  t2928 = t2925 + t2791;
  t2918 = -1.000000000016*t2779;
  t2919 = 1. + t2918;
  t2939 = t2891 + t2785;
  t2951 = -6.5e-11*t2779;
  t2952 = 1. + t2951;
  t2947 = t2925 + t2839;
  t2955 = t2903 + t2823;
  t3054 = 0.15121*t2701;
  t2987 = t2767*t2986;
  t2996 = t2735*t2994;
  t3012 = t2844*t3009;
  t3024 = t2795*t3022;
  t3031 = t2874*t3029;
  t3033 = t2905*t3009;
  t3034 = t2897*t3022;
  t3035 = t2911*t3029;
  t3036 = t3033 + t3034 + t3035;
  t3038 = -0.038924*t3036;
  t3040 = t2928*t3009;
  t3041 = t2919*t3022;
  t3042 = t2939*t3029;
  t3043 = t3040 + t3041 + t3042;
  t3044 = -0.80315*t3043;
  t3045 = t2952*t3009;
  t3046 = t2947*t3022;
  t3048 = t2955*t3029;
  t3049 = t3045 + t3046 + t3048;
  t3051 = 0.148705*t3049;
  t3072 = -2.8e-11*t2684;
  t3084 = -7.e-6*t2674;
  t3087 = 4.e-6*t2674;
  t3112 = t2701*t519*t384;
  t3113 = -1.*t519*t2706*t82;
  t3117 = t3112 + t3113;
  t3078 = 7.e-6*t2674;
  t3151 = 2.8e-11*t2684;
  t3099 = -4.e-6*t2674;
  t3125 = t3084 + t2762;
  t3126 = t3125*t69;
  t3127 = -6.5e-11*t2684*t2986;
  t3128 = t3087 + t2720;
  t3133 = t3128*t3117;
  t3135 = t3126 + t3127 + t3133;
  t3139 = -1.000000000049*t2684*t69;
  t3142 = t3078 + t2762;
  t3149 = t3142*t2986;
  t3154 = t2674 + t3151;
  t3155 = t3154*t3117;
  t3156 = t3139 + t3149 + t3155;
  t3162 = t2675 + t3151;
  t3163 = t3162*t69;
  t3167 = t3099 + t2720;
  t3170 = t3167*t2986;
  t3174 = -1.000000000016*t2684*t3117;
  t3176 = t3163 + t3170 + t3174;
  t3218 = -2.8e-11*t2782;
  t3260 = 4.e-6*t2777;
  t3243 = t2800*t69;
  t3245 = t2803*t2986;
  t3250 = t2807*t3117;
  t3252 = t3243 + t3245 + t3250;
  t3272 = t2848*t69;
  t3277 = t2851*t2986;
  t3280 = t2854*t3117;
  t3281 = t3272 + t3277 + t3280;
  t3257 = -7.e-6*t2777;
  t3307 = t2877*t69;
  t3310 = t2880*t2986;
  t3315 = t2882*t3117;
  t3320 = t3307 + t3310 + t3315;
  t3233 = -4.e-6*t2777;
  t3340 = 2.8e-11*t2782;
  t3289 = 7.e-6*t2777;
  t2673 = 5.856279999999999e-13*var1[13];
  t2682 = -0.0387489999948987*t2677;
  t2687 = t2683 + t2685;
  t2691 = -2.123459e-6*t2687;
  t2693 = t2692 + t2684;
  t2696 = -0.281209000004*t2693;
  t2698 = t2673 + t2682 + t2691 + t2696;
  t3376 = -1.*t2706*t1480;
  t3377 = t2701*t1463;
  t3381 = t3376 + t3377;
  t3388 = t2701*t1480;
  t3392 = t2706*t1463;
  t3394 = t3388 + t3392;
  t3404 = -1.*t1456*t519*t2800;
  t3406 = t2803*t3381;
  t3410 = t2807*t3394;
  t3412 = t3404 + t3406 + t3410;
  t3416 = -1.*t1456*t519*t2848;
  t3421 = t2851*t3381;
  t3422 = t2854*t3394;
  t3425 = t3416 + t3421 + t3422;
  t3427 = -1.*t2877*t1456*t519;
  t3428 = t2880*t3381;
  t3429 = t2882*t3394;
  t3431 = t3427 + t3428 + t3429;
  t3517 = -1.*t519*t384*t2706*t1452;
  t3522 = -1.*t2701*t519*t1452*t82;
  t3525 = t3517 + t3522;
  t3530 = t2701*t519*t384*t1452;
  t3538 = -1.*t519*t2706*t1452*t82;
  t3539 = t3530 + t3538;
  t3548 = t2800*t1452*t69;
  t3561 = t2803*t3525;
  t3562 = t2807*t3539;
  t3564 = t3548 + t3561 + t3562;
  t3567 = t2848*t1452*t69;
  t3569 = t2851*t3525;
  t3571 = t2854*t3539;
  t3572 = t3567 + t3569 + t3571;
  t3581 = t2877*t1452*t69;
  t3583 = t2880*t3525;
  t3586 = t2882*t3539;
  t3589 = t3581 + t3583 + t3586;
  t3655 = t2706*t1714;
  t3657 = t2701*t1720;
  t3662 = t3655 + t3657;
  t3670 = t2701*t1714;
  t3677 = -1.*t2706*t1720;
  t3680 = t3670 + t3677;
  t3684 = t2854*t3662;
  t3685 = t2851*t3680;
  t3688 = t3684 + t3685;
  t3692 = t2807*t3662;
  t3693 = t2803*t3680;
  t3704 = t3692 + t3693;
  t3707 = t2882*t3662;
  t3708 = t2880*t3680;
  t3710 = t3707 + t3708;
  t3056 = -0.15121*t2706;
  t3058 = t3054 + t3056;
  t3064 = t3054 + t2707;
  t3795 = -1.*t2706*t1820;
  t3804 = t3795 + t3657;
  t3808 = -1.*t2701*t1820;
  t3809 = t3808 + t3677;
  t3813 = t2854*t3804;
  t3816 = t2851*t3809;
  t3817 = t3813 + t3816;
  t3831 = t2807*t3804;
  t3838 = t2803*t3809;
  t3844 = t3831 + t3838;
  t3850 = t2882*t3804;
  t3854 = t2880*t3809;
  t3855 = t3850 + t3854;
  t3073 = t2674 + t3072;
  t3074 = -0.281209000004*t3073;
  t3079 = t3078 + t2730;
  t3080 = -2.123459e-6*t3079;
  t3081 = -0.0387489999948987*t2684;
  t3082 = 5.856279999999999e-13 + t3074 + t3080 + t3081;
  t3085 = t3084 + t2730;
  t3086 = -0.038748999993*t3085;
  t3088 = t3087 + t2685;
  t3091 = -0.281209000004*t3088;
  t3092 = -1.38024835e-16*t2684;
  t3093 = -1.4640699999999997e-7 + t3086 + t3091 + t3092;
  t3095 = t2675 + t3072;
  t3097 = -0.038748999993*t3095;
  t3103 = t3099 + t2685;
  t3107 = -2.123459e-6*t3103;
  t3110 = -0.28120900000849935*t2684;
  t3111 = 1.0248489999999998e-12 + t3097 + t3107 + t3110;
  t3895 = t2701*t1820;
  t3897 = t2706*t1720;
  t3899 = t3895 + t3897;
  t3903 = -1.*t519*t3125*t1452;
  t3905 = -6.5e-11*t2684*t3804;
  t3910 = t3128*t3899;
  t3913 = t3903 + t3905 + t3910;
  t3916 = 1.000000000049*t519*t2684*t1452;
  t3922 = t3142*t3804;
  t3926 = t3154*t3899;
  t3929 = t3916 + t3922 + t3926;
  t3937 = -1.*t519*t3162*t1452;
  t3945 = t3167*t3804;
  t3948 = -1.000000000016*t2684*t3899;
  t3949 = t3937 + t3945 + t3948;
  t3221 = t2778 + t3218;
  t3228 = -0.038922999986*t3221;
  t3236 = t3233 + t2866;
  t3237 = -3.6777349999999994e-6*t3236;
  t3239 = -0.5031490000160505*t2782;
  t3241 = 1.8190549999999993e-12 + t3228 + t3237 + t3239;
  t3258 = t3257 + t2839;
  t3259 = -0.038922999986*t3258;
  t3264 = t3260 + t2866;
  t3268 = -0.503149000008*t3264;
  t3269 = -2.3905277499999995e-16*t2782;
  t3271 = -2.598649999999999e-7 + t3259 + t3268 + t3269;
  t3286 = t2777 + t3218;
  t3288 = -0.503149000008*t3286;
  t3290 = t3289 + t2839;
  t3295 = -3.6777349999999994e-6*t3290;
  t3304 = -0.03892299998790722*t2782;
  t3305 = 1.0394599999999997e-12 + t3288 + t3295 + t3304;
  t3322 = t3260 + t2823;
  t4026 = -1.*t519*t2800*t1452;
  t4031 = t2803*t3804;
  t4034 = t2807*t3899;
  t4036 = t4026 + t4031 + t4034;
  t4042 = -1.*t519*t2848*t1452;
  t4046 = t2851*t3804;
  t4069 = t2854*t3899;
  t4070 = t4042 + t4046 + t4069;
  t3327 = t3257 + t2791;
  t4072 = -1.*t2877*t519*t1452;
  t4084 = t2880*t3804;
  t4085 = t2882*t3899;
  t4088 = t4072 + t4084 + t4085;
  t3335 = t3233 + t2823;
  t3342 = t2778 + t3340;
  t3349 = t2777 + t3340;
  t3354 = t3289 + t2791;
  t4220 = t1456*t519*t384*t2706;
  t4223 = t2701*t1456*t519*t82;
  t4229 = t4220 + t4223;
  t4233 = -1.*t2701*t1456*t519*t384;
  t4234 = t1456*t519*t2706*t82;
  t4235 = t4233 + t4234;
  t4243 = -1.*t1456*t2800*t69;
  t4245 = t2803*t4229;
  t4249 = t2807*t4235;
  t4251 = t4243 + t4245 + t4249;
  t4257 = -1.*t1456*t2848*t69;
  t4259 = t2851*t4229;
  t4260 = t2854*t4235;
  t4263 = t4257 + t4259 + t4260;
  t4266 = -1.*t2877*t1456*t69;
  t4267 = t2880*t4229;
  t4268 = t2882*t4235;
  t4271 = t4266 + t4267 + t4268;
  t4323 = t2706*t1480;
  t4324 = t2701*t2307;
  t4327 = t4323 + t4324;
  t4332 = -1.*t2706*t2307;
  t4337 = t3388 + t4332;
  t4339 = t2854*t4327;
  t4341 = t2851*t4337;
  t4342 = t4339 + t4341;
  t4346 = t2807*t4327;
  t4349 = t2803*t4337;
  t4352 = t4346 + t4349;
  t4358 = t2882*t4327;
  t4360 = t2880*t4337;
  t4361 = t4358 + t4360;
  t4444 = -1.*t2706*t2400;
  t4448 = t4444 + t4324;
  t4451 = -1.*t2701*t2400;
  t4453 = t4451 + t4332;
  t4455 = t2854*t4448;
  t4457 = t2851*t4453;
  t4458 = t4455 + t4457;
  t4469 = t2807*t4448;
  t4473 = t2803*t4453;
  t4475 = t4469 + t4473;
  t4479 = t2882*t4448;
  t4480 = t2880*t4453;
  t4481 = t4479 + t4480;
  t4533 = t2701*t2400;
  t4534 = t2706*t2307;
  t4540 = t4533 + t4534;
  t4543 = t1456*t519*t3125;
  t4546 = -6.5e-11*t2684*t4448;
  t4549 = t3128*t4540;
  t4550 = t4543 + t4546 + t4549;
  t4552 = -1.000000000049*t1456*t519*t2684;
  t4553 = t3142*t4448;
  t4558 = t3154*t4540;
  t4559 = t4552 + t4553 + t4558;
  t4561 = t1456*t519*t3162;
  t4564 = t3167*t4448;
  t4566 = -1.000000000016*t2684*t4540;
  t4569 = t4561 + t4564 + t4566;
  t4635 = t1456*t519*t2800;
  t4636 = t2803*t4448;
  t4637 = t2807*t4540;
  t4638 = t4635 + t4636 + t4637;
  t4646 = t1456*t519*t2848;
  t4647 = t2851*t4448;
  t4655 = t2854*t4540;
  t4658 = t4646 + t4647 + t4655;
  t4666 = t2877*t1456*t519;
  t4667 = t2880*t4448;
  t4673 = t2882*t4540;
  t4674 = t4666 + t4667 + t4673;
  p_output1[0]=1.;
  p_output1[1]=t445*t475 + t491*t514 + t519*t540 + t591*t625 + t637*t642 - 1.*t384*t414*t69 + t665*t692 - 0.03875*(t621*t637 + t601*t665 + 4.e-6*t591*t697) + 0.14871*(4.e-6*t621*t637 + 4.e-6*t665*t697 + t591*t713) + 0.80321*(-4.e-6*t591*t621 - 1.*t621*t665 + t637*t770) + t344*t69*t82;
  p_output1[2]=t1001 + t1035 + t1069 - 1.*t344*t384*t519 - 1.*t414*t519*t82 + t859 + t891 + t908 + t932 + t957;
  p_output1[3]=t1001 + t1035 + t1069 + t1102*t384*t519 - 1.*t1087*t519*t82 + t859 + t891 + t908 + t932 + t957;
  p_output1[4]=t1148*t1163 + t1186*t625 + t1225*t642 + t1125*t69 + t1253*t692 - 0.03875*(t1253*t601 + t1225*t621 + 4.e-6*t1186*t697) + 0.14871*(4.e-6*t1225*t621 + 4.e-6*t1253*t697 + t1186*t713) + 0.80321*(-4.e-6*t1186*t621 - 1.*t1253*t621 + t1225*t770) + t1136*t886;
  p_output1[5]=t1334*t1342 + t1355*t1358 + t1367*t1375 - 0.03875*(t1367*t601 - 1.*t1334*t621 - 4.e-6*t1355*t621) + 0.14871*(4.e-6*t1367*t601 - 4.e-6*t1334*t621 - 1.6e-11*t1355*t621) + 0.80321*(-1.*t1334*t601 - 4.e-6*t1355*t601 - 1.000000000016*t1367*t621);
  p_output1[6]=1.;
  p_output1[7]=t1463*t344 + t1480*t414 + t1485*t475 + t1498*t514 - 1.*t1456*t519*t540 + t1505*t625 + t1515*t642 + t1523*t692 - 0.03875*(t1523*t601 + t1515*t621 + 4.e-6*t1505*t697) + 0.14871*(4.e-6*t1515*t621 + 4.e-6*t1523*t697 + t1505*t713) + 0.80321*(-4.e-6*t1505*t621 - 1.*t1523*t621 + t1515*t770);
  p_output1[8]=t1571*t475 + t1593*t514 + t1452*t384*t414*t519 + t1617*t625 + t1627*t642 + t1452*t540*t69 + t1645*t692 - 0.03875*(t1645*t601 + t1627*t621 + 4.e-6*t1617*t697) + 0.14871*(4.e-6*t1627*t621 + 4.e-6*t1645*t697 + t1617*t713) + 0.80321*(-4.e-6*t1617*t621 - 1.*t1645*t621 + t1627*t770) - 1.*t1452*t344*t519*t82;
  p_output1[9]=t1714*t344 + t1720*t414 + t1725*t475 + t1732*t514 + t1739*t625 + t1748*t642 + t1754*t692 - 0.03875*(t1754*t601 + t1748*t621 + 4.e-6*t1739*t697) + 0.14871*(4.e-6*t1748*t621 + 4.e-6*t1754*t697 + t1739*t713) + 0.80321*(-4.e-6*t1739*t621 - 1.*t1754*t621 + t1748*t770);
  p_output1[10]=t1087*t1720 + t1102*t1820 + t1830*t475 + t1840*t514 + t1846*t625 + t1855*t642 + t1864*t692 - 0.03875*(t1864*t601 + t1855*t621 + 4.e-6*t1846*t697) + 0.14871*(4.e-6*t1855*t621 + 4.e-6*t1864*t697 + t1846*t713) + 0.80321*(-4.e-6*t1846*t621 - 1.*t1864*t621 + t1855*t770);
  p_output1[11]=t1136*t1840 + t1163*t1920 - 1.*t1125*t1452*t519 + t1936*t625 + t1963*t642 + t1980*t692 - 0.03875*(t1980*t601 + t1963*t621 + 4.e-6*t1936*t697) + 0.14871*(4.e-6*t1963*t621 + 4.e-6*t1980*t697 + t1936*t713) + 0.80321*(-4.e-6*t1936*t621 - 1.*t1980*t621 + t1963*t770);
  p_output1[12]=t1342*t2042 + t1358*t2054 + t1375*t2063 - 0.03875*(t2086 + t2089 + t2063*t601) + 0.14871*(4.e-6*t2063*t601 - 4.e-6*t2042*t621 - 1.6e-11*t2054*t621) + 0.80321*(-1.*t2042*t601 - 4.e-6*t2054*t601 - 1.000000000016*t2063*t621);
  p_output1[13]=1.;
  p_output1[14]=t1720*t344 + t1820*t414 + t1840*t475 + t1920*t514 - 1.*t1452*t519*t540 + t2054*t625 + t2063*t642 + t2042*t692 - 0.03875*(t2042*t601 + t2063*t621 + 4.e-6*t2054*t697) + 0.14871*(4.e-6*t2063*t621 + 4.e-6*t2042*t697 + t2054*t713) + 0.80321*(t2086 + t2089 + t2063*t770);
  p_output1[15]=t2182*t475 + t2199*t514 - 1.*t1456*t384*t414*t519 + t2214*t625 + t2225*t642 - 1.*t1456*t540*t69 + t2236*t692 - 0.03875*(t2236*t601 + t2225*t621 + 4.e-6*t2214*t697) + 0.14871*(4.e-6*t2225*t621 + 4.e-6*t2236*t697 + t2214*t713) + 0.80321*(-4.e-6*t2214*t621 - 1.*t2236*t621 + t2225*t770) + t1456*t344*t519*t82;
  p_output1[16]=t1480*t344 + t2307*t414 + t2313*t475 + t2328*t514 + t2337*t625 + t2349*t642 + t2355*t692 - 0.03875*(t2355*t601 + t2349*t621 + 4.e-6*t2337*t697) + 0.14871*(4.e-6*t2349*t621 + 4.e-6*t2355*t697 + t2337*t713) + 0.80321*(-4.e-6*t2337*t621 - 1.*t2355*t621 + t2349*t770);
  p_output1[17]=t1087*t2307 + t1102*t2400 + t2404*t475 + t2411*t514 + t2421*t625 + t2431*t642 + t2449*t692 - 0.03875*(t2449*t601 + t2431*t621 + 4.e-6*t2421*t697) + 0.14871*(4.e-6*t2431*t621 + 4.e-6*t2449*t697 + t2421*t713) + 0.80321*(-4.e-6*t2421*t621 - 1.*t2449*t621 + t2431*t770);
  p_output1[18]=t1136*t2411 + t1163*t2512 + t1125*t1456*t519 + t2527*t625 + t2536*t642 + t2547*t692 - 0.03875*(t2547*t601 + t2536*t621 + 4.e-6*t2527*t697) + 0.14871*(4.e-6*t2536*t621 + 4.e-6*t2547*t697 + t2527*t713) + 0.80321*(-4.e-6*t2527*t621 - 1.*t2547*t621 + t2536*t770);
  p_output1[19]=t1342*t2608 + t1358*t2627 + t1375*t2636 - 0.03875*(t2636*t601 - 1.*t2608*t621 - 4.e-6*t2627*t621) + 0.14871*(4.e-6*t2636*t601 - 4.e-6*t2608*t621 - 1.6e-11*t2627*t621) + 0.80321*(-1.*t2608*t601 - 4.e-6*t2627*t601 - 1.000000000016*t2636*t621);
  p_output1[20]=1.;
  p_output1[21]=t2735*t2740 + t2767*t2771 + t2795*t2811 + t2844*t2860 + t2874*t2885 - 0.038924*(t2811*t2897 + t2860*t2905 + t2885*t2911) - 0.80315*(t2811*t2919 + t2860*t2928 + t2885*t2939) + 0.148705*(t2811*t2947 + t2860*t2952 + t2885*t2955) + t2698*t519 - 1.*t2708*t384*t69 + t2711*t69*t82;
  p_output1[22]=t2987 + t2996 + t3012 + t3024 + t3031 + t3038 + t3044 + t3051 - 1.*t2711*t384*t519 - 1.*t2708*t519*t82;
  p_output1[23]=t2987 + t2996 + t3012 + t3024 + t3031 + t3038 + t3044 + t3051 + t3058*t384*t519 - 1.*t3064*t519*t82;
  p_output1[24]=t2986*t3093 + t3111*t3117 + t2844*t3135 + t2874*t3156 + t2795*t3176 - 0.038924*(t2905*t3135 + t2911*t3156 + t2897*t3176) - 0.80315*(t2928*t3135 + t2939*t3156 + t2919*t3176) + 0.148705*(t2952*t3135 + t2955*t3156 + t2947*t3176) + t3082*t69;
  p_output1[25]=t3241*t3252 + t3271*t3281 + t3305*t3320 + 0.148705*(-6.5e-11*t2782*t3281 + t3252*t3322 + t3320*t3327) - 0.80315*(-1.000000000016*t2782*t3252 + t3281*t3335 + t3320*t3342) - 0.038924*(-1.000000000049*t2782*t3320 + t3252*t3349 + t3281*t3354);
  p_output1[26]=1.;
  p_output1[27]=t1480*t2708 + t1463*t2711 + t2735*t3381 + t2767*t3394 + t2795*t3412 + t2844*t3425 + t2874*t3431 - 0.038924*(t2897*t3412 + t2905*t3425 + t2911*t3431) - 0.80315*(t2919*t3412 + t2928*t3425 + t2939*t3431) + 0.148705*(t2947*t3412 + t2952*t3425 + t2955*t3431) - 1.*t1456*t2698*t519;
  p_output1[28]=t2735*t3525 + t2767*t3539 + t2795*t3564 + t2844*t3572 + t2874*t3589 - 0.038924*(t2897*t3564 + t2905*t3572 + t2911*t3589) - 0.80315*(t2919*t3564 + t2928*t3572 + t2939*t3589) + 0.148705*(t2947*t3564 + t2952*t3572 + t2955*t3589) + t1452*t2708*t384*t519 + t1452*t2698*t69 - 1.*t1452*t2711*t519*t82;
  p_output1[29]=t1720*t2708 + t1714*t2711 + t2767*t3662 + t2735*t3680 + t2844*t3688 + t2795*t3704 + t2874*t3710 - 0.038924*(t2905*t3688 + t2897*t3704 + t2911*t3710) - 0.80315*(t2928*t3688 + t2919*t3704 + t2939*t3710) + 0.148705*(t2952*t3688 + t2947*t3704 + t2955*t3710);
  p_output1[30]=t1820*t3058 + t1720*t3064 + t2767*t3804 + t2735*t3809 + t2844*t3817 + t2795*t3844 + t2874*t3855 - 0.038924*(t2905*t3817 + t2897*t3844 + t2911*t3855) - 0.80315*(t2928*t3817 + t2919*t3844 + t2939*t3855) + 0.148705*(t2952*t3817 + t2947*t3844 + t2955*t3855);
  p_output1[31]=t3093*t3804 + t3111*t3899 + t2844*t3913 + t2874*t3929 + t2795*t3949 - 0.038924*(t2905*t3913 + t2911*t3929 + t2897*t3949) - 0.80315*(t2928*t3913 + t2939*t3929 + t2919*t3949) + 0.148705*(t2952*t3913 + t2955*t3929 + t2947*t3949) - 1.*t1452*t3082*t519;
  p_output1[32]=t3241*t4036 + t3271*t4070 + t3305*t4088 - 0.038924*(t3349*t4036 + t3354*t4070 - 1.000000000049*t2782*t4088) + 0.148705*(t3322*t4036 - 6.5e-11*t2782*t4070 + t3327*t4088) - 0.80315*(-1.000000000016*t2782*t4036 + t3335*t4070 + t3342*t4088);
  p_output1[33]=1.;
  p_output1[34]=t1820*t2708 + t1720*t2711 + t2735*t3804 + t2767*t3899 + t2795*t4036 + t2844*t4070 + t2874*t4088 - 0.038924*(t2897*t4036 + t2905*t4070 + t2911*t4088) - 0.80315*(t2919*t4036 + t2928*t4070 + t2939*t4088) + 0.148705*(t2947*t4036 + t2952*t4070 + t2955*t4088) - 1.*t1452*t2698*t519;
  p_output1[35]=t2735*t4229 + t2767*t4235 + t2795*t4251 + t2844*t4263 + t2874*t4271 - 0.038924*(t2897*t4251 + t2905*t4263 + t2911*t4271) - 0.80315*(t2919*t4251 + t2928*t4263 + t2939*t4271) + 0.148705*(t2947*t4251 + t2952*t4263 + t2955*t4271) - 1.*t1456*t2708*t384*t519 - 1.*t1456*t2698*t69 + t1456*t2711*t519*t82;
  p_output1[36]=t2307*t2708 + t1480*t2711 + t2767*t4327 + t2735*t4337 + t2844*t4342 + t2795*t4352 + t2874*t4361 - 0.038924*(t2905*t4342 + t2897*t4352 + t2911*t4361) - 0.80315*(t2928*t4342 + t2919*t4352 + t2939*t4361) + 0.148705*(t2952*t4342 + t2947*t4352 + t2955*t4361);
  p_output1[37]=t2400*t3058 + t2307*t3064 + t2767*t4448 + t2735*t4453 + t2844*t4458 + t2795*t4475 + t2874*t4481 - 0.038924*(t2905*t4458 + t2897*t4475 + t2911*t4481) - 0.80315*(t2928*t4458 + t2919*t4475 + t2939*t4481) + 0.148705*(t2952*t4458 + t2947*t4475 + t2955*t4481);
  p_output1[38]=t3093*t4448 + t3111*t4540 + t2844*t4550 + t2874*t4559 + t2795*t4569 - 0.038924*(t2905*t4550 + t2911*t4559 + t2897*t4569) - 0.80315*(t2928*t4550 + t2939*t4559 + t2919*t4569) + 0.148705*(t2952*t4550 + t2955*t4559 + t2947*t4569) + t1456*t3082*t519;
  p_output1[39]=t3241*t4638 + t3271*t4658 + t3305*t4674 - 0.038924*(t3349*t4638 + t3354*t4658 - 1.000000000049*t2782*t4674) + 0.148705*(t3322*t4638 - 6.5e-11*t2782*t4658 + t3327*t4674) - 0.80315*(-1.000000000016*t2782*t4638 + t3335*t4658 + t3342*t4674);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_ParallelStance1.hh"

namespace ParallelStance1
{

void J_output_boundary_ParallelStance1_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
