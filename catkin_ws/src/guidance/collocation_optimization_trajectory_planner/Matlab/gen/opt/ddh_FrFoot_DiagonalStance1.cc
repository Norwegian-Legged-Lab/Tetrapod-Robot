/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:27:03 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t312;
  double t37;
  double t363;
  double t31;
  double t315;
  double t348;
  double t352;
  double t680;
  double t38;
  double t261;
  double t396;
  double t27;
  double t565;
  double t579;
  double t637;
  double t681;
  double t717;
  double t552;
  double t747;
  double t768;
  double t835;
  double t844;
  double t855;
  double t880;
  double t904;
  double t913;
  double t28;
  double t29;
  double t30;
  double t32;
  double t730;
  double t731;
  double t739;
  double t1159;
  double t1189;
  double t1208;
  double t1209;
  double t1232;
  double t1236;
  double t1279;
  double t971;
  double t975;
  double t1289;
  double t1306;
  double t1322;
  double t1345;
  double t1370;
  double t1417;
  double t1419;
  double t1420;
  double t1426;
  double t1434;
  double t719;
  double t879;
  double t926;
  double t941;
  double t997;
  double t998;
  double t1015;
  double t1016;
  double t1072;
  double t1087;
  double t1088;
  double t1131;
  double t1282;
  double t1347;
  double t1465;
  double t1466;
  double t1505;
  double t1510;
  double t1520;
  double t1533;
  double t1539;
  double t1558;
  double t415;
  double t447;
  double t453;
  double t480;
  double t1492;
  double t1561;
  double t1564;
  double t2090;
  double t2091;
  double t2140;
  double t2185;
  double t2188;
  double t2202;
  double t1770;
  double t1771;
  double t1783;
  double t1803;
  double t427;
  double t493;
  double t494;
  double t1864;
  double t1879;
  double t1889;
  double t1895;
  double t1912;
  double t2013;
  double t2041;
  double t2046;
  double t1829;
  double t1844;
  double t1850;
  double t1861;
  double t952;
  double t1025;
  double t1065;
  double t1578;
  double t1585;
  double t1703;
  double t1765;
  double t1815;
  double t2049;
  double t2073;
  double t2078;
  double t2182;
  double t2216;
  double t2222;
  double t2225;
  double t2237;
  double t2238;
  double t2260;
  double t2287;
  double t2337;
  double t2339;
  double t2393;
  double t2401;
  double t2484;
  double t2587;
  double t2594;
  double t2599;
  double t2642;
  double t2645;
  double t2675;
  double t2681;
  double t2685;
  double t2474;
  double t2489;
  double t2531;
  double t2544;
  double t2549;
  double t2552;
  double t2554;
  double t2558;
  double t2565;
  double t2572;
  double t2608;
  double t2655;
  double t2702;
  double t2723;
  double t2731;
  double t2749;
  double t2759;
  double t2802;
  double t2837;
  double t2852;
  double t2859;
  double t2905;
  double t2912;
  double t2914;
  double t2956;
  double t3004;
  double t3008;
  double t3052;
  double t2977;
  double t3084;
  double t3102;
  double t3126;
  double t3139;
  double t3179;
  double t3180;
  double t3181;
  double t3186;
  double t3192;
  double t25;
  double t26;
  double t3249;
  double t3239;
  double t3291;
  double t3306;
  double t3335;
  double t3343;
  double t3350;
  double t3362;
  double t3615;
  double t3628;
  double t3635;
  double t3641;
  double t3645;
  double t3671;
  double t3674;
  double t3716;
  double t3764;
  double t3797;
  double t3801;
  double t3820;
  double t3823;
  double t3826;
  double t3887;
  double t3899;
  double t3435;
  double t3439;
  double t3444;
  double t3461;
  double t3506;
  double t3518;
  double t3521;
  double t3551;
  double t3582;
  double t3590;
  double t3600;
  double t3606;
  double t4205;
  double t4208;
  double t4209;
  double t4132;
  double t4168;
  double t4180;
  double t4214;
  double t4245;
  double t4284;
  double t4291;
  double t4295;
  double t4297;
  double t4286;
  double t4287;
  double t4289;
  double t4290;
  double t4300;
  double t4304;
  double t4305;
  double t4307;
  double t4320;
  double t4322;
  double t4343;
  double t4371;
  double t4383;
  double t4388;
  double t4395;
  double t4413;
  double t4414;
  double t4422;
  double t4433;
  double t4444;
  double t4455;
  double t4457;
  double t4463;
  double t4464;
  double t4471;
  double t4472;
  double t4488;
  double t4490;
  double t4493;
  double t4519;
  double t4521;
  double t4540;
  double t4511;
  double t4513;
  double t4514;
  double t4544;
  double t4551;
  double t4552;
  double t4575;
  double t4576;
  double t4577;
  double t4553;
  double t4560;
  double t4567;
  double t4573;
  double t4578;
  double t4580;
  double t4582;
  double t4583;
  double t4584;
  double t4585;
  double t4589;
  double t4592;
  double t4599;
  double t4603;
  double t4604;
  double t4686;
  double t4705;
  double t4711;
  double t4714;
  double t4715;
  double t4718;
  double t4722;
  double t4723;
  double t4713;
  double t4721;
  double t4725;
  double t4726;
  double t4732;
  double t4736;
  double t4744;
  double t4745;
  double t4774;
  double t4776;
  double t4784;
  double t4809;
  double t4835;
  double t4841;
  double t4842;
  double t4856;
  double t4782;
  double t4839;
  double t4858;
  double t4860;
  double t4868;
  double t4870;
  double t4872;
  double t4880;
  double t4930;
  double t4933;
  double t4934;
  double t4936;
  double t4727;
  double t4748;
  double t4755;
  double t4761;
  double t4762;
  double t4767;
  double t4903;
  double t4904;
  double t4906;
  double t4908;
  double t4914;
  double t5058;
  double t5064;
  double t5098;
  double t4996;
  double t5196;
  double t5201;
  double t5202;
  double t5203;
  double t5225;
  double t5233;
  double t5235;
  double t5246;
  double t5255;
  double t5259;
  double t5057;
  double t5073;
  double t5104;
  double t5107;
  double t5118;
  double t5123;
  double t5132;
  double t5154;
  double t5397;
  double t5398;
  double t5401;
  double t5378;
  double t5379;
  double t5380;
  double t5365;
  double t5366;
  double t5372;
  double t5374;
  double t5381;
  double t5404;
  double t5409;
  double t5448;
  double t5463;
  double t5481;
  double t5483;
  double t5484;
  double t5490;
  double t4892;
  double t4893;
  double t4899;
  double t4861;
  double t4884;
  double t4890;
  double t4937;
  double t5562;
  double t5569;
  double t5570;
  double t5593;
  double t5603;
  double t5610;
  double t5632;
  double t5633;
  double t5635;
  double t5591;
  double t5661;
  double t5665;
  double t5666;
  double t5640;
  double t5645;
  double t5692;
  double t5697;
  double t5698;
  double t5701;
  double t5702;
  double t5705;
  double t5734;
  double t5736;
  double t5741;
  double t5797;
  double t5800;
  double t5806;
  double t5807;
  double t5813;
  double t5814;
  double t5875;
  double t5877;
  double t5894;
  double t5895;
  double t5897;
  double t5898;
  double t5912;
  double t5924;
  double t5925;
  double t5927;
  double t5835;
  double t5840;
  double t5841;
  double t5827;
  double t5790;
  double t5791;
  double t5793;
  double t6052;
  double t6053;
  double t6056;
  double t5995;
  double t6009;
  double t6012;
  double t6016;
  double t6021;
  double t6023;
  double t5985;
  double t5989;
  double t5994;
  double t6030;
  double t6031;
  double t6034;
  double t6038;
  double t6084;
  double t6095;
  double t6107;
  double t6111;
  double t6115;
  double t6245;
  double t6248;
  double t6249;
  double t6254;
  double t6272;
  double t6273;
  double t6289;
  double t6336;
  double t6314;
  double t6309;
  double t6318;
  double t6320;
  double t6323;
  double t6359;
  double t6360;
  double t6361;
  double t6364;
  double t6365;
  double t6420;
  double t6422;
  double t6424;
  double t6445;
  double t6446;
  double t6449;
  double t6473;
  double t6459;
  double t6532;
  double t6537;
  double t6538;
  double t6542;
  double t6559;
  double t6560;
  double t6566;
  double t6568;
  double t6588;
  double t6590;
  double t6594;
  double t6596;
  double t6597;
  double t6598;
  double t6603;
  double t6604;
  double t6605;
  double t6607;
  double t6608;
  double t6609;
  double t6645;
  double t6654;
  double t6655;
  double t6665;
  double t6671;
  double t6673;
  double t6599;
  double t6610;
  double t6613;
  double t6615;
  double t6616;
  double t6621;
  double t6628;
  double t6631;
  double t6633;
  double t6624;
  double t6625;
  double t6640;
  double t6688;
  double t6731;
  double t6732;
  double t6736;
  double t6737;
  double t6744;
  double t6752;
  double t6753;
  double t6754;
  double t6573;
  double t6579;
  double t6580;
  double t6554;
  double t6569;
  double t6570;
  double t6679;
  double t6681;
  double t6682;
  double t6662;
  double t6675;
  double t6676;
  double t6687;
  double t6815;
  double t6818;
  double t6819;
  double t6627;
  double t6804;
  double t6805;
  double t6810;
  double t6843;
  double t6850;
  double t6851;
  double t6857;
  double t6860;
  double t6861;
  double t6778;
  double t6779;
  double t6785;
  double t6771;
  double t6774;
  double t6775;
  double t6767;
  double t6769;
  double t6777;
  double t6799;
  double t6800;
  double t6894;
  double t6896;
  double t6897;
  double t6899;
  double t6900;
  double t6905;
  double t6880;
  double t6882;
  double t6883;
  double t6826;
  double t6830;
  double t6831;
  double t6822;
  double t6862;
  double t6943;
  double t6944;
  double t6945;
  double t6879;
  double t6888;
  double t6923;
  double t6935;
  double t6941;
  double t6959;
  double t6960;
  double t6961;
  double t6969;
  double t6970;
  double t6971;
  double t7019;
  double t7020;
  double t7021;
  double t7022;
  double t7023;
  double t7024;
  double t7026;
  double t7027;
  double t7028;
  double t7029;
  double t7030;
  double t7033;
  double t7046;
  double t7048;
  double t7053;
  double t7054;
  double t7057;
  double t7063;
  double t7064;
  double t7065;
  double t7066;
  double t7067;
  double t7068;
  double t7069;
  double t7081;
  double t7085;
  double t7087;
  double t7088;
  double t7092;
  double t7096;
  double t7097;
  double t7091;
  double t7099;
  double t7101;
  double t7102;
  double t7106;
  double t7108;
  double t7111;
  double t7112;
  double t7117;
  double t7118;
  double t3224;
  double t33;
  double t3247;
  double t3267;
  double t7123;
  double t7124;
  double t7126;
  double t7128;
  double t7131;
  double t7133;
  double t3341;
  double t7160;
  double t7162;
  double t7163;
  double t7166;
  double t7168;
  double t7169;
  double t7172;
  double t7173;
  double t7174;
  double t7175;
  double t7176;
  double t7177;
  double t7178;
  double t7179;
  double t7180;
  double t3389;
  double t3412;
  double t7137;
  double t7145;
  double t7146;
  double t7153;
  double t7154;
  double t7157;
  double t3473;
  double t3486;
  double t3494;
  double t3567;
  double t3574;
  double t3581;
  double t7241;
  double t7242;
  double t7243;
  double t7245;
  double t7246;
  double t7249;
  double t7258;
  double t7261;
  double t7264;
  double t7185;
  double t7186;
  double t7187;
  double t7189;
  double t7208;
  double t7209;
  double t7212;
  double t7214;
  double t7218;
  double t7224;
  double t7225;
  double t7226;
  double t7298;
  double t7309;
  double t7351;
  double t7352;
  double t7353;
  double t7354;
  double t7355;
  double t7357;
  double t7358;
  double t7365;
  double t7367;
  double t7369;
  double t5765;
  double t5767;
  double t5768;
  double t7297;
  double t7422;
  double t5377;
  double t5410;
  double t5440;
  double t7433;
  double t7437;
  double t7514;
  double t7516;
  double t7523;
  double t7524;
  double t7567;
  double t7568;
  double t7579;
  double t7580;
  double t6499;
  double t6500;
  double t6501;
  double t6463;
  double t6466;
  double t6467;
  double t6436;
  double t7643;
  double t7654;
  double t6980;
  double t6981;
  double t6982;
  double t7653;
  double t7646;
  double t6770;
  double t6801;
  double t6802;
  double t7697;
  double t7700;
  double t6950;
  double t6951;
  double t6952;
  double t7704;
  double t7708;
  double t7755;
  double t7756;
  double t7757;
  double t7758;
  double t7759;
  double t7760;
  double t7761;
  double t7762;
  double t7763;
  double t7764;
  double t7765;
  double t7768;
  double t7769;
  double t7770;
  double t7771;
  double t7772;
  double t7773;
  double t7774;
  double t7775;
  double t7777;
  double t7778;
  double t7779;
  double t7780;
  double t7781;
  double t7791;
  double t7792;
  double t7793;
  double t7794;
  double t7786;
  double t7787;
  double t7788;
  double t7789;
  double t7784;
  double t7785;
  double t7790;
  double t7795;
  double t7796;
  double t7797;
  double t7798;
  double t7799;
  double t7800;
  double t7804;
  double t7805;
  double t7806;
  double t7808;
  double t7809;
  double t7810;
  double t7822;
  double t7823;
  double t7824;
  double t7827;
  double t7828;
  double t7829;
  double t7832;
  double t7833;
  double t7834;
  double t7835;
  double t7836;
  double t7837;
  double t7838;
  double t7839;
  double t7840;
  double t7814;
  double t7815;
  double t7816;
  double t7818;
  double t7819;
  double t7820;
  double t7867;
  double t7868;
  double t7869;
  double t7870;
  double t7871;
  double t7872;
  double t7873;
  double t7874;
  double t7875;
  double t7843;
  double t7844;
  double t7845;
  double t7846;
  double t7848;
  double t7849;
  double t7851;
  double t7852;
  double t7854;
  double t7855;
  double t7856;
  double t7857;
  double t7919;
  double t7921;
  double t7927;
  double t7928;
  double t7967;
  double t7968;
  double t7974;
  double t7975;
  double t8009;
  double t8016;
  double t8052;
  double t8054;
  double t8055;
  double t8056;
  double t8057;
  double t8058;
  double t8059;
  double t8044;
  double t8045;
  double t8046;
  double t8047;
  double t8048;
  double t8049;
  double t8050;
  double t8018;
  double t8008;
  double t8069;
  double t8071;
  double t8076;
  double t8078;
  double t8133;
  double t8144;
  double t8142;
  double t8134;
  double t8180;
  double t8183;
  double t8187;
  double t8190;
  t312 = Cos(var1[11]);
  t37 = Cos(var1[10]);
  t363 = -1. + t312;
  t31 = Sin(var1[9]);
  t315 = -1.*t312;
  t348 = 1. + t315;
  t352 = 1.6e-11*t348;
  t680 = Sin(var1[11]);
  t38 = -1.*t37;
  t261 = 1. + t38;
  t396 = 1.6e-11*t363;
  t27 = Cos(var1[9]);
  t565 = -1.000000000016*t348;
  t579 = 1. + t565;
  t637 = 0.004352*t579;
  t681 = -0.9999910000159999*t680;
  t717 = t637 + t681;
  t552 = Sin(var1[10]);
  t747 = -1. + t352;
  t768 = 4.e-6*t747;
  t835 = 3.999964e-6*t348;
  t844 = -1.7408e-8*t680;
  t855 = t768 + t835 + t844;
  t880 = 0.999991*t312;
  t904 = 0.004352*t680;
  t913 = t396 + t880 + t904;
  t28 = -1.*t27;
  t29 = 1. + t28;
  t30 = 0.15121*t29;
  t32 = -0.15121*t31;
  t730 = -1. + t37;
  t731 = 1.6e-11*t730;
  t739 = 1. + t731;
  t1159 = -1.26e-8*var1[11];
  t1189 = 1. + t396;
  t1208 = -0.14871*t1189;
  t1209 = -1.64779999997447e-7*t348;
  t1232 = -1.59556e-7*t363;
  t1236 = -1.199987999968e-6*t680;
  t1279 = t1159 + t1208 + t1209 + t1232 + t1236;
  t971 = -1.000000000016*t261;
  t975 = 1. + t971;
  t1289 = 0.803147*t579;
  t1306 = 0.50315000001605*t348;
  t1322 = 0.00130540515936178*t680;
  t1345 = t1289 + t1306 + t1322;
  t1370 = -5.04e-14*var1[11];
  t1417 = -0.03988959484*t348;
  t1419 = 6.38224e-13*t363;
  t1420 = -0.041195*t312;
  t1426 = 0.299996999992*t680;
  t1434 = t1370 + t1417 + t1419 + t1420 + t1426;
  t719 = -4.e-6*t552*t717;
  t879 = t739*t855;
  t926 = 4.e-6*t261*t913;
  t941 = 0. + t719 + t879 + t926;
  t997 = t975*t717;
  t998 = 4.e-6*t552*t855;
  t1015 = -1.*t552*t913;
  t1016 = 0. + t997 + t998 + t1015;
  t1072 = -1.2484e-7*var1[10];
  t1087 = 2.479936e-18*t261;
  t1088 = -1.54996e-7*t730;
  t1131 = 1.124840000016e-6*t552;
  t1282 = t739*t1279;
  t1347 = -4.e-6*t552*t1345;
  t1465 = 4.e-6*t261*t1434;
  t1466 = t1072 + t1087 + t1088 + t1131 + t1282 + t1347 + t1465;
  t1505 = 0.281210000008499*t261;
  t1510 = -0.03874900000062*t552;
  t1520 = 4.e-6*t552*t1279;
  t1533 = t975*t1345;
  t1539 = -1.*t552*t1434;
  t1558 = t1505 + t1510 + t1520 + t1533 + t1539;
  t415 = -1. + t352 + t396;
  t447 = 4.e-6*t363;
  t453 = -4.e-6*t312;
  t480 = t447 + t453;
  t1492 = -1.*t31*t1466;
  t1561 = t27*t1558;
  t1564 = t30 + t32 + t1492 + t1561;
  t2090 = t739*t415;
  t2091 = 4.e-6*t261*t480;
  t2140 = t2090 + t2091;
  t2185 = 4.e-6*t415*t552;
  t2188 = -1.*t480*t552;
  t2202 = t2185 + t2188;
  t1770 = -0.15121*t29;
  t1771 = t27*t1466;
  t1783 = t31*t1558;
  t1803 = t1770 + t32 + t1771 + t1783;
  t427 = 4.e-6*t261*t415;
  t493 = t37*t480;
  t494 = t427 + t493;
  t1864 = -4.9936e-13*var1[10];
  t1879 = -0.038749*t261;
  t1889 = 6.19984e-13*t730;
  t1895 = -0.281210000004*t552;
  t1912 = 4.e-6*t261*t1279;
  t2013 = t552*t1345;
  t2041 = t37*t1434;
  t2046 = 0. + t1864 + t1879 + t1889 + t1895 + t1912 + t2013 + t2041;
  t1829 = t552*t717;
  t1844 = 4.e-6*t261*t855;
  t1850 = t37*t913;
  t1861 = 0. + t1829 + t1844 + t1850;
  t952 = -1.*t31*t941;
  t1025 = t27*t1016;
  t1065 = 0. + t952 + t1025;
  t1578 = -1.*t1065*t1564;
  t1585 = t27*t941;
  t1703 = t31*t1016;
  t1765 = 0. + t1585 + t1703;
  t1815 = -1.*t1765*t1803;
  t2049 = -1.*t1861*t2046;
  t2073 = t1578 + t1815 + t2049;
  t2078 = t494*t2073;
  t2182 = -1.*t2140*t31;
  t2216 = t27*t2202;
  t2222 = t2182 + t2216;
  t2225 = t2222*t1564;
  t2237 = t27*t2140;
  t2238 = t31*t2202;
  t2260 = t2237 + t2238;
  t2287 = t2260*t1803;
  t2337 = t494*t2046;
  t2339 = t2225 + t2287 + t2337;
  t2393 = t2339*t1861;
  t2401 = t2078 + t2393;
  t2484 = t1864 + t1879 + t1889 + t1895 + t1912 + t2013 + t2041;
  t2587 = -1.7408e-8*t348;
  t2594 = -3.999964e-6*t680;
  t2599 = t2587 + t2594;
  t2642 = 0.999991*t579;
  t2645 = t2642 + t904;
  t2675 = -0.004352*t312;
  t2681 = 0.999991*t680;
  t2685 = t2675 + t2681;
  t2474 = -1.*t941*t1466;
  t2489 = -1.*t1861*t2484;
  t2531 = -1.*t1016*t1558;
  t2544 = t2474 + t2489 + t2531;
  t2549 = t494*t2544;
  t2552 = t2140*t1466;
  t2554 = t494*t2484;
  t2558 = t2202*t1558;
  t2565 = t2552 + t2554 + t2558;
  t2572 = t2565*t1861;
  t2608 = t739*t2599;
  t2655 = -4.e-6*t552*t2645;
  t2702 = 4.e-6*t261*t2685;
  t2723 = 0. + t2608 + t2655 + t2702;
  t2731 = -0.15121*t2723;
  t2749 = 4.e-6*t552*t2599;
  t2759 = t975*t2645;
  t2802 = -1.*t552*t2685;
  t2837 = 0. + t2749 + t2759 + t2802;
  t2852 = -0.15121*t2837;
  t2859 = t2549 + t2572 + t2731 + t2852;
  t2905 = -1.*t1279*t855;
  t2912 = -1.*t717*t1345;
  t2914 = -1.*t913*t1434;
  t2956 = t2905 + t2912 + t2914;
  t3004 = t415*t1279;
  t3008 = t480*t1434;
  t3052 = t3004 + t3008;
  t2977 = -1.*t480*t2956;
  t3084 = -1.*t3052*t913;
  t3102 = t2977 + t3084;
  t3126 = 4.e-6*t3102;
  t3139 = -1.*t415*t2956;
  t3179 = 1.e-6*t2599;
  t3180 = -1.*t3052*t855;
  t3181 = -0.038749*t2645;
  t3186 = -0.28121*t2685;
  t3192 = t3126 + t3139 + t3179 + t3180 + t3181 + t3186;
  t25 = Cos(var1[4]);
  t26 = Cos(var1[5]);
  t3249 = Sin(var1[5]);
  t3239 = Sin(var1[4]);
  t3291 = -1.*t25*t26*t31;
  t3306 = -1.*t27*t25*t3249;
  t3335 = t3291 + t3306;
  t3343 = t27*t25*t26;
  t3350 = -1.*t25*t31*t3249;
  t3362 = t3343 + t3350;
  t3615 = 4.e-6*t261*t2599;
  t3628 = t552*t2645;
  t3635 = t37*t2685;
  t3641 = 0. + t3615 + t3628 + t3635;
  t3645 = t3641*t3239;
  t3671 = -1.*t31*t2723;
  t3674 = t27*t2837;
  t3716 = 0. + t3671 + t3674;
  t3764 = t26*t3716;
  t3797 = t27*t2723;
  t3801 = t31*t2837;
  t3820 = 0. + t3797 + t3801;
  t3823 = -1.*t3820*t3249;
  t3826 = 0. + t3764 + t3823;
  t3887 = t25*t3826;
  t3899 = 0. + t3645 + t3887;
  t3435 = t552*t3239;
  t3439 = -4.e-6*t552*t3335;
  t3444 = t975*t3362;
  t3461 = t3435 + t3439 + t3444;
  t3506 = t37*t3239;
  t3518 = 4.e-6*t261*t3335;
  t3521 = -1.*t552*t3362;
  t3551 = t3506 + t3518 + t3521;
  t3582 = 4.e-6*t261*t3239;
  t3590 = t739*t3335;
  t3600 = 4.e-6*t552*t3362;
  t3606 = t3582 + t3590 + t3600;
  t4205 = t26*t2260;
  t4208 = t2222*t3249;
  t4209 = t4205 + t4208;
  t4132 = t26*t1765;
  t4168 = t1065*t3249;
  t4180 = 0. + t4132 + t4168;
  t4214 = t26*t1803;
  t4245 = t1564*t3249;
  t4284 = 0. + t4214 + t4245;
  t4291 = t26*t1564;
  t4295 = -1.*t1803*t3249;
  t4297 = 0. + t4291 + t4295;
  t4286 = t4209*t4284;
  t4287 = t26*t2222;
  t4289 = -1.*t2260*t3249;
  t4290 = t4287 + t4289;
  t4300 = t4290*t4297;
  t4304 = t2337 + t4286 + t4300;
  t4305 = t4180*t4304;
  t4307 = -1.*t4180*t4284;
  t4320 = t26*t1065;
  t4322 = -1.*t1765*t3249;
  t4343 = 0. + t4320 + t4322;
  t4371 = -1.*t4343*t4297;
  t4383 = t2049 + t4307 + t4371;
  t4388 = t4209*t4383;
  t4395 = t4305 + t4388;
  t4413 = Sin(var1[3]);
  t4414 = t26*t3820;
  t4422 = t3716*t3249;
  t4433 = 0. + t4414 + t4422;
  t4444 = t4413*t4433;
  t4455 = Cos(var1[3]);
  t4457 = t25*t3641;
  t4463 = -1.*t3239*t3826;
  t4464 = 0. + t4457 + t4463;
  t4471 = t4455*t4464;
  t4472 = 0. + t4444 + t4471;
  t4488 = t4455*t4433;
  t4490 = -1.*t4413*t4464;
  t4493 = 0. + t4488 + t4490;
  t4519 = t494*t3239;
  t4521 = t25*t4290;
  t4540 = t4519 + t4521;
  t4511 = t1861*t3239;
  t4513 = t25*t4343;
  t4514 = 0. + t4511 + t4513;
  t4544 = t2046*t3239;
  t4551 = t25*t4297;
  t4552 = 0. + t4544 + t4551;
  t4575 = t25*t2046;
  t4576 = -1.*t3239*t4297;
  t4577 = 0. + t4575 + t4576;
  t4553 = t4540*t4552;
  t4560 = t494*t25;
  t4567 = -1.*t3239*t4290;
  t4573 = t4560 + t4567;
  t4578 = t4573*t4577;
  t4580 = t4286 + t4553 + t4578;
  t4582 = t4514*t4580;
  t4583 = -1.*t4514*t4552;
  t4584 = t25*t1861;
  t4585 = -1.*t3239*t4343;
  t4589 = 0. + t4584 + t4585;
  t4592 = -1.*t4589*t4577;
  t4599 = t4307 + t4583 + t4592;
  t4603 = t4540*t4599;
  t4604 = t4582 + t4603;
  t4686 = 0.00130540515936178*t312;
  t4705 = -0.2999969999968001*t680;
  t4711 = t4686 + t4705;
  t4714 = -1.199987999968e-6*t312;
  t4715 = -5.2216206374471e-9*t680;
  t4718 = -1.26e-8 + t4714 + t4715;
  t4722 = 0.299996999992*t312;
  t4723 = -5.04e-14 + t4722 + t1322;
  t4713 = -4.e-6*t552*t4711;
  t4721 = t739*t4718;
  t4725 = 4.e-6*t261*t4723;
  t4726 = t4713 + t4721 + t4725;
  t4732 = t975*t4711;
  t4736 = 4.e-6*t552*t4718;
  t4744 = -1.*t552*t4723;
  t4745 = t4732 + t4736 + t4744;
  t4774 = 0.004352*t312;
  t4776 = t4774 + t681;
  t4784 = -0.9999910000159999*t312;
  t4809 = -0.00435200000006963*t680;
  t4835 = t4784 + t4809;
  t4841 = -1.7408e-8*t312;
  t4842 = 3.999964000064e-6*t680;
  t4856 = t4841 + t4842;
  t4782 = 4.e-6*t261*t4776;
  t4839 = -4.e-6*t552*t4835;
  t4858 = t739*t4856;
  t4860 = t4782 + t4839 + t4858;
  t4868 = -1.*t552*t4776;
  t4870 = t975*t4835;
  t4872 = 4.e-6*t552*t4856;
  t4880 = t4868 + t4870 + t4872;
  t4930 = t37*t4776;
  t4933 = t552*t4835;
  t4934 = 4.e-6*t261*t4856;
  t4936 = t4930 + t4933 + t4934;
  t4727 = -1.*t31*t4726;
  t4748 = t27*t4745;
  t4755 = t4727 + t4748;
  t4761 = t27*t4726;
  t4762 = t31*t4745;
  t4767 = t4761 + t4762;
  t4903 = t552*t4711;
  t4904 = 4.e-6*t261*t4718;
  t4906 = t37*t4723;
  t4908 = t4903 + t4904 + t4906;
  t4914 = -1.*t4908*t1861;
  t5058 = -3.999964e-6*t312;
  t5064 = t5058 + t844;
  t5098 = t880 + t904;
  t4996 = t494*t4908;
  t5196 = -1.*t717*t4711;
  t5201 = -1.*t855*t4718;
  t5202 = -1.*t1279*t4856;
  t5203 = -1.*t4835*t1345;
  t5225 = -1.*t4723*t913;
  t5233 = -1.*t4776*t1434;
  t5235 = t5196 + t5201 + t5202 + t5203 + t5225 + t5233;
  t5246 = t415*t4718;
  t5255 = t480*t4723;
  t5259 = t5246 + t5255;
  t5057 = -4.e-6*t552*t4776;
  t5073 = t739*t5064;
  t5104 = 4.e-6*t261*t5098;
  t5107 = t5057 + t5073 + t5104;
  t5118 = t975*t4776;
  t5123 = 4.e-6*t552*t5064;
  t5132 = -1.*t552*t5098;
  t5154 = t5118 + t5123 + t5132;
  t5397 = t27*t5107;
  t5398 = t31*t5154;
  t5401 = t5397 + t5398;
  t5378 = -1.*t31*t5107;
  t5379 = t27*t5154;
  t5380 = t5378 + t5379;
  t5365 = t552*t4776;
  t5366 = 4.e-6*t261*t5064;
  t5372 = t37*t5098;
  t5374 = t5365 + t5366 + t5372;
  t5381 = t26*t5380;
  t5404 = -1.*t5401*t3249;
  t5409 = t5381 + t5404;
  t5448 = t26*t5401;
  t5463 = t5380*t3249;
  t5481 = t5448 + t5463;
  t5483 = t25*t5374;
  t5484 = -1.*t3239*t5409;
  t5490 = t5483 + t5484;
  t4892 = t27*t4860;
  t4893 = t31*t4880;
  t4899 = t4892 + t4893;
  t4861 = -1.*t31*t4860;
  t4884 = t27*t4880;
  t4890 = t4861 + t4884;
  t4937 = -1.*t4936*t2046;
  t5562 = t26*t4767;
  t5569 = t4755*t3249;
  t5570 = t5562 + t5569;
  t5593 = t26*t4755;
  t5603 = -1.*t4767*t3249;
  t5610 = t5593 + t5603;
  t5632 = t26*t4899;
  t5633 = t4890*t3249;
  t5635 = t5632 + t5633;
  t5591 = t4209*t5570;
  t5661 = t26*t4890;
  t5665 = -1.*t4899*t3249;
  t5666 = t5661 + t5665;
  t5640 = -1.*t5570*t4180;
  t5645 = -1.*t5635*t4284;
  t5692 = t4908*t3239;
  t5697 = t25*t5610;
  t5698 = t5692 + t5697;
  t5701 = t25*t4908;
  t5702 = -1.*t3239*t5610;
  t5705 = t5701 + t5702;
  t5734 = t4936*t3239;
  t5736 = t25*t5666;
  t5741 = t5734 + t5736;
  t5797 = -0.15121*t27;
  t5800 = t5797 + t32 + t1492 + t1561;
  t5806 = 0.15121*t31;
  t5807 = -1.*t27*t1466;
  t5813 = -1.*t31*t1558;
  t5814 = t5797 + t5806 + t5807 + t5813;
  t5875 = -1.*t27*t2723;
  t5877 = -1.*t31*t2837;
  t5894 = t5875 + t5877;
  t5895 = t26*t5894;
  t5897 = t3671 + t3674;
  t5898 = -1.*t5897*t3249;
  t5912 = t5895 + t5898;
  t5924 = t26*t5897;
  t5925 = t5894*t3249;
  t5927 = t5924 + t5925;
  t5835 = -1.*t27*t2140;
  t5840 = -1.*t31*t2202;
  t5841 = t5835 + t5840;
  t5827 = t952 + t1025;
  t5790 = -1.*t27*t941;
  t5791 = -1.*t31*t1016;
  t5793 = t5790 + t5791;
  t6052 = t26*t5827;
  t6053 = t5793*t3249;
  t6056 = t6052 + t6053;
  t5995 = t26*t5814;
  t6009 = -1.*t5800*t3249;
  t6012 = t5995 + t6009;
  t6016 = t26*t5800;
  t6021 = t5814*t3249;
  t6023 = t6016 + t6021;
  t5985 = t5841*t3249;
  t5989 = t4287 + t5985;
  t5994 = t5989*t4284;
  t6030 = t4209*t6023;
  t6031 = t26*t5841;
  t6034 = -1.*t2222*t3249;
  t6038 = t6031 + t6034;
  t6084 = -1.*t6056*t4284;
  t6095 = -1.*t4180*t6023;
  t6107 = t26*t5793;
  t6111 = -1.*t5827*t3249;
  t6115 = t6107 + t6111;
  t6245 = -1.*t26*t3820;
  t6248 = -1.*t3716*t3249;
  t6249 = t6245 + t6248;
  t6254 = t3764 + t3823;
  t6272 = -1.*t26*t1803;
  t6273 = -1.*t1564*t3249;
  t6289 = t6272 + t6273;
  t6336 = t4320 + t4322;
  t6314 = t4291 + t4295;
  t6309 = t4290*t4284;
  t6318 = t4209*t6314;
  t6320 = -1.*t26*t2260;
  t6323 = t6320 + t6034;
  t6359 = -1.*t6336*t4284;
  t6360 = -1.*t4180*t6314;
  t6361 = -1.*t26*t1765;
  t6364 = -1.*t1065*t3249;
  t6365 = t6361 + t6364;
  t6420 = -1.*t3641*t3239;
  t6422 = -1.*t25*t3826;
  t6424 = t6420 + t6422;
  t6445 = -1.*t2046*t3239;
  t6446 = -1.*t25*t4297;
  t6449 = t6445 + t6446;
  t6473 = t4584 + t4585;
  t6459 = t4575 + t4576;
  t6532 = -1.000000000016*t552*t717;
  t6537 = 4.e-6*t37*t855;
  t6538 = -1.*t37*t913;
  t6542 = t6532 + t6537 + t6538;
  t6559 = -4.e-6*t37*t717;
  t6560 = -1.6e-11*t552*t855;
  t6566 = 4.e-6*t552*t913;
  t6568 = t6559 + t6560 + t6566;
  t6588 = -0.03874900000062*t37;
  t6590 = 0.281210000008499*t552;
  t6594 = 4.e-6*t37*t1279;
  t6596 = -1.000000000016*t552*t1345;
  t6597 = -1.*t37*t1434;
  t6598 = t6588 + t6590 + t6594 + t6596 + t6597;
  t6603 = 1.124840000016e-6*t37;
  t6604 = 1.5499600000248e-7*t552;
  t6605 = -1.6e-11*t552*t1279;
  t6607 = -4.e-6*t37*t1345;
  t6608 = 4.e-6*t552*t1434;
  t6609 = -1.2484e-7 + t6603 + t6604 + t6605 + t6607 + t6608;
  t6645 = 4.e-6*t37*t415;
  t6654 = -1.*t37*t480;
  t6655 = t6645 + t6654;
  t6665 = -1.6e-11*t415*t552;
  t6671 = 4.e-6*t480*t552;
  t6673 = t6665 + t6671;
  t6599 = t31*t6598;
  t6610 = t27*t6609;
  t6613 = t6599 + t6610;
  t6615 = t27*t6598;
  t6616 = -1.*t31*t6609;
  t6621 = t6615 + t6616;
  t6628 = -0.281210000004*t37;
  t6631 = t37*t1345;
  t6633 = -4.9936e-13 + t6628 + t1510 + t1520 + t6631 + t1539;
  t6624 = t37*t717;
  t6625 = t6624 + t998 + t1015;
  t6640 = -1.*t1861*t6633;
  t6688 = t494*t6633;
  t6731 = 4.e-6*t37*t2599;
  t6732 = -1.000000000016*t552*t2645;
  t6736 = -1.*t37*t2685;
  t6737 = t6731 + t6732 + t6736;
  t6744 = -1.6e-11*t552*t2599;
  t6752 = -4.e-6*t37*t2645;
  t6753 = 4.e-6*t552*t2685;
  t6754 = t6744 + t6752 + t6753;
  t6573 = t31*t6542;
  t6579 = t27*t6568;
  t6580 = t6573 + t6579;
  t6554 = t27*t6542;
  t6569 = -1.*t31*t6568;
  t6570 = t6554 + t6569;
  t6679 = t6655*t31;
  t6681 = t27*t6673;
  t6682 = t6679 + t6681;
  t6662 = t27*t6655;
  t6675 = -1.*t31*t6673;
  t6676 = t6662 + t6675;
  t6687 = t2202*t2046;
  t6815 = t26*t6682;
  t6818 = t6676*t3249;
  t6819 = t6815 + t6818;
  t6627 = -1.*t6625*t2046;
  t6804 = t26*t6580;
  t6805 = t6570*t3249;
  t6810 = t6804 + t6805;
  t6843 = t26*t6621;
  t6850 = -1.*t6613*t3249;
  t6851 = t6843 + t6850;
  t6857 = t26*t6613;
  t6860 = t6621*t3249;
  t6861 = t6857 + t6860;
  t6778 = t31*t6737;
  t6779 = t27*t6754;
  t6785 = t6778 + t6779;
  t6771 = t27*t6737;
  t6774 = -1.*t31*t6754;
  t6775 = t6771 + t6774;
  t6767 = t37*t2645;
  t6769 = t2749 + t6767 + t2802;
  t6777 = t26*t6775;
  t6799 = -1.*t6785*t3249;
  t6800 = t6777 + t6799;
  t6894 = t26*t6785;
  t6896 = t6775*t3249;
  t6897 = t6894 + t6896;
  t6899 = t25*t6769;
  t6900 = -1.*t3239*t6800;
  t6905 = t6899 + t6900;
  t6880 = t26*t6570;
  t6882 = -1.*t6580*t3249;
  t6883 = t6880 + t6882;
  t6826 = t26*t6676;
  t6830 = -1.*t6682*t3249;
  t6831 = t6826 + t6830;
  t6822 = t6819*t4284;
  t6862 = t4209*t6861;
  t6943 = t2202*t3239;
  t6944 = t25*t6831;
  t6945 = t6943 + t6944;
  t6879 = -1.*t6810*t4284;
  t6888 = -1.*t4180*t6861;
  t6923 = t6625*t3239;
  t6935 = t25*t6883;
  t6941 = t6923 + t6935;
  t6959 = t6633*t3239;
  t6960 = t25*t6851;
  t6961 = t6959 + t6960;
  t6969 = t25*t6633;
  t6970 = -1.*t3239*t6851;
  t6971 = t6969 + t6970;
  t7019 = t1564*t3716;
  t7020 = t1803*t3820;
  t7021 = t2046*t3641;
  t7022 = t7019 + t7020 + t7021;
  t7023 = t494*t7022;
  t7024 = -1.*t2222*t1564;
  t7026 = -1.*t2260*t1803;
  t7027 = -1.*t494*t2046;
  t7028 = t7024 + t7026 + t7027;
  t7029 = t7028*t3641;
  t7030 = t7023 + t7029;
  t7033 = t1466*t2723;
  t7046 = t2484*t3641;
  t7048 = t1558*t2837;
  t7053 = t7033 + t7046 + t7048;
  t7054 = t494*t7053;
  t7057 = -0.15121*t941;
  t7063 = -0.15121*t1016;
  t7064 = -1.*t2140*t1466;
  t7065 = -1.*t494*t2484;
  t7066 = -1.*t2202*t1558;
  t7067 = t7064 + t7065 + t7066;
  t7068 = t7067*t3641;
  t7069 = t7054 + t7057 + t7063 + t7068;
  t7081 = t2599*t1279;
  t7085 = t1345*t2645;
  t7087 = t1434*t2685;
  t7088 = t7081 + t7085 + t7087;
  t7092 = -1.*t415*t1279;
  t7096 = -1.*t480*t1434;
  t7097 = t7092 + t7096;
  t7091 = -1.*t480*t7088;
  t7099 = -1.*t7097*t2685;
  t7101 = t7091 + t7099;
  t7102 = 4.e-6*t7101;
  t7106 = -1.*t415*t7088;
  t7108 = -0.038749*t717;
  t7111 = -1.*t7097*t2599;
  t7112 = 1.e-6*t855;
  t7117 = -0.28121*t913;
  t7118 = t7102 + t7106 + t7108 + t7111 + t7112 + t7117;
  t3224 = t1864 + t1879 + t1889 + t1895;
  t33 = t30 + t32;
  t3247 = t1770 + t32;
  t3267 = t1072 + t1087 + t1088 + t1131;
  t7123 = t26*t4413*t3239;
  t7124 = t4455*t3249;
  t7126 = t7123 + t7124;
  t7128 = t4455*t26;
  t7131 = -1.*t4413*t3239*t3249;
  t7133 = t7128 + t7131;
  t3341 = t1505 + t1510;
  t7160 = t4413*t4180;
  t7162 = t4455*t4589;
  t7163 = 0. + t7160 + t7162;
  t7166 = t4455*t4180;
  t7168 = -1.*t4413*t4589;
  t7169 = 0. + t7166 + t7168;
  t7172 = -1.*t4209*t4284;
  t7173 = -1.*t4290*t4297;
  t7174 = t7027 + t7172 + t7173;
  t7175 = t4433*t7174;
  t7176 = t4284*t4433;
  t7177 = t4297*t3826;
  t7178 = t7021 + t7176 + t7177;
  t7179 = t4209*t7178;
  t7180 = t7175 + t7179;
  t3389 = -0.0398890000006382*t680;
  t3412 = t1306 + t3389;
  t7137 = -1.*t31*t7126;
  t7145 = t27*t7133;
  t7146 = t7137 + t7145;
  t7153 = t27*t7126;
  t7154 = t31*t7133;
  t7157 = t7153 + t7154;
  t3473 = -0.039889*t348;
  t3486 = -0.503150000008*t680;
  t3494 = t1370 + t3473 + t1419 + t3486;
  t3567 = 2.552896e-18*t348;
  t3574 = 2.012600000032e-6*t680;
  t3581 = t1159 + t3567 + t1232 + t3574;
  t7241 = -1.*t4540*t4552;
  t7242 = -1.*t4573*t4577;
  t7243 = t7172 + t7241 + t7242;
  t7245 = t3899*t7243;
  t7246 = t4552*t3899;
  t7249 = t4577*t4464;
  t7258 = t7176 + t7246 + t7249;
  t7261 = t4540*t7258;
  t7264 = t7245 + t7261;
  t7185 = -1.*t25*t552*t4413;
  t7186 = -4.e-6*t552*t7146;
  t7187 = t975*t7157;
  t7189 = t7185 + t7186 + t7187;
  t7208 = -1.*t37*t25*t4413;
  t7209 = 4.e-6*t261*t7146;
  t7212 = -1.*t552*t7157;
  t7214 = t7208 + t7209 + t7212;
  t7218 = -4.e-6*t261*t25*t4413;
  t7224 = t739*t7146;
  t7225 = 4.e-6*t552*t7157;
  t7226 = t7218 + t7224 + t7225;
  t7298 = t4908*t3641;
  t7309 = -1.*t494*t4908;
  t7351 = t1279*t5064;
  t7352 = t2599*t4718;
  t7353 = t4776*t1345;
  t7354 = t4711*t2645;
  t7355 = t5098*t1434;
  t7357 = t4723*t2685;
  t7358 = t7351 + t7352 + t7353 + t7354 + t7355 + t7357;
  t7365 = -1.*t415*t4718;
  t7367 = -1.*t480*t4723;
  t7369 = t7365 + t7367;
  t5765 = t25*t4936;
  t5767 = -1.*t3239*t5666;
  t5768 = t5765 + t5767;
  t7297 = t5374*t2046;
  t7422 = -1.*t4209*t5570;
  t5377 = t5374*t3239;
  t5410 = t25*t5409;
  t5440 = t5377 + t5410;
  t7433 = t5481*t4284;
  t7437 = t5570*t4433;
  t7514 = -1.*t5989*t4284;
  t7516 = -1.*t4209*t6023;
  t7523 = t6023*t4433;
  t7524 = t4284*t5927;
  t7567 = -1.*t4290*t4284;
  t7568 = -1.*t4209*t6314;
  t7579 = t6314*t4433;
  t7580 = t4284*t6254;
  t6499 = -1.*t1861*t3239;
  t6500 = -1.*t25*t4343;
  t6501 = t6499 + t6500;
  t6463 = -1.*t494*t3239;
  t6466 = -1.*t25*t4290;
  t6467 = t6463 + t6466;
  t6436 = t4457 + t4463;
  t7643 = t6633*t3641;
  t7654 = -1.*t494*t6633;
  t6980 = t25*t6625;
  t6981 = -1.*t3239*t6883;
  t6982 = t6980 + t6981;
  t7653 = -1.*t2202*t2046;
  t7646 = t2046*t6769;
  t6770 = t6769*t3239;
  t6801 = t25*t6800;
  t6802 = t6770 + t6801;
  t7697 = -1.*t6819*t4284;
  t7700 = -1.*t4209*t6861;
  t6950 = t25*t2202;
  t6951 = -1.*t3239*t6831;
  t6952 = t6950 + t6951;
  t7704 = t6861*t4433;
  t7708 = t4284*t6897;
  t7755 = -1.*t1564*t3716;
  t7756 = -1.*t1803*t3820;
  t7757 = -1.*t2046*t3641;
  t7758 = t7755 + t7756 + t7757;
  t7759 = t7758*t1861;
  t7760 = t1065*t1564;
  t7761 = t1765*t1803;
  t7762 = t1861*t2046;
  t7763 = t7760 + t7761 + t7762;
  t7764 = t7763*t3641;
  t7765 = t7759 + t7764;
  t7768 = -0.15121*t2140;
  t7769 = -0.15121*t2202;
  t7770 = -1.*t1466*t2723;
  t7771 = -1.*t2484*t3641;
  t7772 = -1.*t1558*t2837;
  t7773 = t7770 + t7771 + t7772;
  t7774 = t7773*t1861;
  t7775 = t941*t1466;
  t7777 = t1861*t2484;
  t7778 = t1016*t1558;
  t7779 = t7775 + t7777 + t7778;
  t7780 = t7779*t3641;
  t7781 = t7768 + t7769 + t7774 + t7780;
  t7791 = t1279*t855;
  t7792 = t717*t1345;
  t7793 = t913*t1434;
  t7794 = t7791 + t7792 + t7793;
  t7786 = -1.*t2599*t1279;
  t7787 = -1.*t1345*t2645;
  t7788 = -1.*t1434*t2685;
  t7789 = t7786 + t7787 + t7788;
  t7784 = 1.e-6*t415;
  t7785 = -0.28121*t480;
  t7790 = -1.*t7789*t913;
  t7795 = -1.*t7794*t2685;
  t7796 = t7790 + t7795;
  t7797 = 4.e-6*t7796;
  t7798 = -1.*t7794*t2599;
  t7799 = -1.*t7789*t855;
  t7800 = t7784 + t7785 + t7797 + t7798 + t7799;
  t7804 = -1.*t4455*t26*t3239;
  t7805 = t4413*t3249;
  t7806 = t7804 + t7805;
  t7808 = t26*t4413;
  t7809 = t4455*t3239*t3249;
  t7810 = t7808 + t7809;
  t7822 = t4413*t4209;
  t7823 = t4455*t4573;
  t7824 = t7822 + t7823;
  t7827 = t4455*t4209;
  t7828 = -1.*t4413*t4573;
  t7829 = t7827 + t7828;
  t7832 = t4180*t4284;
  t7833 = t4343*t4297;
  t7834 = t7762 + t7832 + t7833;
  t7835 = t4433*t7834;
  t7836 = -1.*t4284*t4433;
  t7837 = -1.*t4297*t3826;
  t7838 = t7757 + t7836 + t7837;
  t7839 = t4180*t7838;
  t7840 = t7835 + t7839;
  t7814 = -1.*t31*t7806;
  t7815 = t27*t7810;
  t7816 = t7814 + t7815;
  t7818 = t27*t7806;
  t7819 = t31*t7810;
  t7820 = t7818 + t7819;
  t7867 = t4514*t4552;
  t7868 = t4589*t4577;
  t7869 = t7832 + t7867 + t7868;
  t7870 = t3899*t7869;
  t7871 = -1.*t4552*t3899;
  t7872 = -1.*t4577*t4464;
  t7873 = t7836 + t7871 + t7872;
  t7874 = t4514*t7873;
  t7875 = t7870 + t7874;
  t7843 = t4455*t25*t552;
  t7844 = -4.e-6*t552*t7816;
  t7845 = t975*t7820;
  t7846 = t7843 + t7844 + t7845;
  t7848 = t37*t4455*t25;
  t7849 = 4.e-6*t261*t7816;
  t7851 = -1.*t552*t7820;
  t7852 = t7848 + t7849 + t7851;
  t7854 = 4.e-6*t261*t4455*t25;
  t7855 = t739*t7816;
  t7856 = 4.e-6*t552*t7820;
  t7857 = t7854 + t7855 + t7856;
  t7919 = t6056*t4284;
  t7921 = t4180*t6023;
  t7927 = -1.*t6023*t4433;
  t7928 = -1.*t4284*t5927;
  t7967 = t6336*t4284;
  t7968 = t4180*t6314;
  t7974 = -1.*t6314*t4433;
  t7975 = -1.*t4284*t6254;
  t8009 = -1.*t4908*t3641;
  t8016 = t4908*t1861;
  t8052 = t717*t4711;
  t8054 = t855*t4718;
  t8055 = t1279*t4856;
  t8056 = t4835*t1345;
  t8057 = t4723*t913;
  t8058 = t4776*t1434;
  t8059 = t8052 + t8054 + t8055 + t8056 + t8057 + t8058;
  t8044 = -1.*t1279*t5064;
  t8045 = -1.*t2599*t4718;
  t8046 = -1.*t4776*t1345;
  t8047 = -1.*t4711*t2645;
  t8048 = -1.*t5098*t1434;
  t8049 = -1.*t4723*t2685;
  t8050 = t8044 + t8045 + t8046 + t8047 + t8048 + t8049;
  t8018 = t4936*t2046;
  t8008 = -1.*t5374*t2046;
  t8069 = t5570*t4180;
  t8071 = t5635*t4284;
  t8076 = -1.*t5481*t4284;
  t8078 = -1.*t5570*t4433;
  t8133 = -1.*t6633*t3641;
  t8144 = t1861*t6633;
  t8142 = t6625*t2046;
  t8134 = -1.*t2046*t6769;
  t8180 = t6810*t4284;
  t8183 = t4180*t6861;
  t8187 = -1.*t6861*t4433;
  t8190 = -1.*t4284*t6897;
  p_output1[0]=t3224*t3239 - 1.*t25*t3247*t3249 + t25*t26*t33 + t3267*t3335 + t3341*t3362 + t3412*t3461 + t3494*t3551 + t3581*t3606 - 0.041195*(t312*t3551 + 4.e-6*t348*t3606 - 1.*t3461*t680) - 0.14871*(4.e-6*t348*t3551 + t1189*t3606 + 4.e-6*t3461*t680) + 0.803147*(t3461*t579 + t3551*t680 - 4.e-6*t3606*t680) + var1[0] + t3899*var2[0] + t4493*var2[1] + t4472*var2[2] + t4604*var2[3] + ((-1.*t4413*t4433 - 1.*t4455*t4464)*var2[1] + (t4488 + t4490)*var2[2])*var2[3] + t4395*var2[4] + (t6436*var2[0] - 1.*t4413*t6424*var2[1] + t4455*t6424*var2[2] + (t4573*t4599 + t4514*(t4552*t4573 + t4573*t6449 + t4540*t6459 + t4577*t6467) + t4580*t6473 + t4540*(-1.*t4589*t6449 - 1.*t4514*t6459 - 1.*t4552*t6473 - 1.*t4577*t6501))*var2[3])*var2[4] + t2401*var2[5] + (t25*t6249*var2[0] + (t3239*t4413*t6249 + t4455*t6254)*var2[1] + (-1.*t3239*t4455*t6249 + t4413*t6254)*var2[2] + (t25*t4599*t6323 + t4514*(t25*t4540*t6289 - 1.*t3239*t4573*t6289 + t6309 + t6318 + t25*t4552*t6323 - 1.*t3239*t4577*t6323) + t25*t4580*t6365 + t4540*(-1.*t25*t4514*t6289 + t3239*t4589*t6289 + t6359 + t6360 - 1.*t25*t4552*t6365 + t3239*t4577*t6365))*var2[3] + (t4290*t4383 + t4180*(t4290*t6289 + t6309 + t6318 + t4297*t6323) + t4304*t6336 + t4209*(-1.*t4343*t6289 + t6359 + t6360 - 1.*t4297*t6365))*var2[4])*var2[5] + t2859*var2[9] + (t25*t5912*var2[0] + (t3239*t4413*t5912 + t4455*t5927)*var2[1] + (-1.*t3239*t4455*t5912 + t4413*t5927)*var2[2] + (t25*t4599*t6038 + t4514*(t5994 + t25*t4540*t6012 - 1.*t3239*t4573*t6012 + t6030 + t25*t4552*t6038 - 1.*t3239*t4577*t6038) + t25*t4580*t6115 + t4540*(-1.*t25*t4514*t6012 + t3239*t4589*t6012 + t6084 + t6095 - 1.*t25*t4552*t6115 + t3239*t4577*t6115))*var2[3] + (t4383*t5989 + t4180*(t5994 + t4290*t6012 + t6030 + t4297*t6038) + t4304*t6056 + t4209*(-1.*t4343*t6012 + t6084 + t6095 - 1.*t4297*t6115))*var2[4] + (t494*(-1.*t1564*t5793 - 1.*t1765*t5800 - 1.*t1065*t5814 - 1.*t1803*t5827) + t1861*(t1803*t2222 + t2260*t5800 + t2222*t5814 + t1564*t5841))*var2[5])*var2[9] + t3192*var2[10] + (t6802*var2[0] + (t4455*t6897 - 1.*t4413*t6905)*var2[1] + (t4413*t6897 + t4455*t6905)*var2[2] + (t4580*t6941 + t4599*t6945 + t4514*(t6822 + t6862 + t4552*t6945 + t4577*t6952 + t4540*t6961 + t4573*t6971) + t4540*(t6879 + t6888 - 1.*t4552*t6941 - 1.*t4514*t6961 - 1.*t4589*t6971 - 1.*t4577*t6982))*var2[3] + (t4304*t6810 + t4383*t6819 + t4180*(t6687 + t6688 + t6822 + t4297*t6831 + t4290*t6851 + t6862) + t4209*(t6627 + t6640 - 1.*t4343*t6851 + t6879 - 1.*t4297*t6883 + t6888))*var2[4] + (t2073*t2202 + t2339*t6625 + t494*(-1.*t1564*t6570 - 1.*t1803*t6580 - 1.*t1765*t6613 - 1.*t1065*t6621 + t6627 + t6640) + t1861*(t2260*t6613 + t2222*t6621 + t1564*t6676 + t1803*t6682 + t6687 + t6688))*var2[5] + (t2202*t2544 + t2565*t6625 + t1861*(t2202*t2484 + t2202*t6598 + t2140*t6609 + t1558*t6655 + t1466*t6673 + t6688) - 0.15121*t6737 - 0.15121*t6754 + t494*(-1.*t1558*t6542 - 1.*t1466*t6568 - 1.*t1016*t6598 - 1.*t2484*t6625 + t6640 - 1.*t6609*t941))*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t5440*var2[0] + (t4455*t5481 - 1.*t4413*t5490)*var2[1] + (t4413*t5481 + t4455*t5490)*var2[2] + (t4514*(t5591 + t4540*t5698 + t4573*t5705) + t4580*t5741 + t4540*(t5640 + t5645 - 1.*t4514*t5698 - 1.*t4589*t5705 - 1.*t4552*t5741 - 1.*t4577*t5768))*var2[3] + (t4180*(t4996 + t5591 + t4290*t5610) + t4304*t5635 + t4209*(t4914 + t4937 - 1.*t4343*t5610 + t5640 + t5645 - 1.*t4297*t5666))*var2[4] + (t2339*t4936 + (-1.*t1065*t4755 - 1.*t1765*t4767 - 1.*t1564*t4890 - 1.*t1803*t4899 + t4914 + t4937)*t494 + t1861*(t2222*t4755 + t2260*t4767 + t4996))*var2[5] + (t2565*t4936 + t1861*(t2140*t4726 + t2202*t4745 + t4996) - 0.15121*t5107 - 0.15121*t5154 + t494*(-1.*t1016*t4745 - 1.*t1466*t4860 - 1.*t1558*t4880 + t4914 - 1.*t2484*t4936 - 1.*t4726*t941))*var2[9] + (-0.038749*t4776 - 1.*t3052*t4856 + 1.e-6*t5064 - 0.28121*t5098 - 1.*t415*t5235 - 1.*t5259*t855 + 4.e-6*(-1.*t3052*t4776 - 1.*t480*t5235 - 1.*t5259*t913))*var2[10])*var2[11] + t3899*var3[0] + t4493*var3[1] + t4472*var3[2] + t4604*var3[3] + t4395*var3[4] + t2401*var3[5] + t2859*var3[9] + t3192*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t25*t3224*t4413 + t33*t7126 + t3247*t7133 + t3267*t7146 + t3341*t7157 + t3412*t7189 + t3494*t7214 + t3581*t7226 - 0.14871*(4.e-6*t680*t7189 + 4.e-6*t348*t7214 + t1189*t7226) - 0.041195*(-1.*t680*t7189 + t312*t7214 + 4.e-6*t348*t7226) + 0.803147*(t579*t7189 + t680*t7214 - 4.e-6*t680*t7226) + var1[1] + t4514*var2[0] + t7169*var2[1] + t7163*var2[2] + t7264*var2[3] + ((-1.*t4180*t4413 - 1.*t4455*t4589)*var2[1] + (t7166 + t7168)*var2[2])*var2[3] + t7180*var2[4] + (t6473*var2[0] - 1.*t4413*t6501*var2[1] + t4455*t6501*var2[2] + (t4540*(t4577*t6424 + t4552*t6436 + t4464*t6449 + t3899*t6459) + t3899*(-1.*t4552*t4573 - 1.*t4573*t6449 - 1.*t4540*t6459 - 1.*t4577*t6467) + t6436*t7243 + t4573*t7258)*var2[3])*var2[4] + t7030*var2[5] + (t25*t6365*var2[0] + (t4455*t6336 + t3239*t4413*t6365)*var2[1] + (t4413*t6336 - 1.*t3239*t4455*t6365)*var2[2] + (t25*t6249*t7243 + t25*t6323*t7258 + t3899*(-1.*t25*t4540*t6289 + t3239*t4573*t6289 - 1.*t25*t4552*t6323 + t3239*t4577*t6323 + t7567 + t7568) + t4540*(t25*t4552*t6249 - 1.*t3239*t4577*t6249 + t25*t3899*t6289 - 1.*t3239*t4464*t6289 + t7579 + t7580))*var2[3] + (t6254*t7174 + t4290*t7178 + t4433*(-1.*t4290*t6289 - 1.*t4297*t6323 + t7567 + t7568) + t4209*(t4297*t6249 + t3826*t6289 + t7579 + t7580))*var2[4])*var2[5] + t7069*var2[9] + (t25*t6115*var2[0] + (t4455*t6056 + t3239*t4413*t6115)*var2[1] + (t4413*t6056 - 1.*t3239*t4455*t6115)*var2[2] + (t25*t5912*t7243 + t25*t6038*t7258 + t3899*(-1.*t25*t4540*t6012 + t3239*t4573*t6012 - 1.*t25*t4552*t6038 + t3239*t4577*t6038 + t7514 + t7516) + t4540*(t25*t4552*t5912 - 1.*t3239*t4577*t5912 + t25*t3899*t6012 - 1.*t3239*t4464*t6012 + t7523 + t7524))*var2[3] + (t5927*t7174 + t5989*t7178 + t4433*(-1.*t4290*t6012 - 1.*t4297*t6038 + t7514 + t7516) + t4209*(t4297*t5912 + t3826*t6012 + t7523 + t7524))*var2[4] + (t3641*(-1.*t1803*t2222 - 1.*t2260*t5800 - 1.*t2222*t5814 - 1.*t1564*t5841) + t494*(t3820*t5800 + t3716*t5814 + t1564*t5894 + t1803*t5897))*var2[5])*var2[9] + t7118*var2[10] + (t6941*var2[0] + (t4455*t6810 - 1.*t4413*t6982)*var2[1] + (t4413*t6810 + t4455*t6982)*var2[2] + (t6802*t7243 + t6945*t7258 + t3899*(-1.*t4552*t6945 - 1.*t4577*t6952 - 1.*t4540*t6961 - 1.*t4573*t6971 + t7697 + t7700) + t4540*(t4552*t6802 + t4577*t6905 + t3899*t6961 + t4464*t6971 + t7704 + t7708))*var2[3] + (t6897*t7174 + t6819*t7178 + t4433*(-1.*t4297*t6831 - 1.*t4290*t6851 + t7653 + t7654 + t7697 + t7700) + t4209*(t4297*t6800 + t3826*t6851 + t7643 + t7646 + t7704 + t7708))*var2[4] + (t2202*t7022 + t6769*t7028 + t494*(t3820*t6613 + t3716*t6621 + t1564*t6775 + t1803*t6785 + t7643 + t7646) + t3641*(-1.*t2260*t6613 - 1.*t2222*t6621 - 1.*t1564*t6676 - 1.*t1803*t6682 + t7653 + t7654))*var2[5] + (-0.15121*t6542 - 0.15121*t6568 + t2202*t7053 + t6769*t7067 + t494*(t2837*t6598 + t2723*t6609 + t1558*t6737 + t1466*t6754 + t2484*t6769 + t7643) + t3641*(-1.*t2202*t2484 - 1.*t2202*t6598 - 1.*t2140*t6609 - 1.*t1558*t6655 - 1.*t1466*t6673 + t7654))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5741*var2[0] + (t4455*t5635 - 1.*t4413*t5768)*var2[1] + (t4413*t5635 + t4455*t5768)*var2[2] + (t5440*t7243 + t3899*(-1.*t4540*t5698 - 1.*t4573*t5705 + t7422) + t4540*(t4552*t5440 + t4577*t5490 + t3899*t5698 + t4464*t5705 + t7433 + t7437))*var2[3] + (t5481*t7174 + t4433*(-1.*t4290*t5610 + t7309 + t7422) + t4209*(t4297*t5409 + t3826*t5610 + t7297 + t7298 + t7433 + t7437))*var2[4] + (t5374*t7028 + t494*(t3716*t4755 + t3820*t4767 + t1564*t5380 + t1803*t5401 + t7297 + t7298) + t3641*(-1.*t2222*t4755 - 1.*t2260*t4767 + t7309))*var2[5] + (-0.15121*t4860 - 0.15121*t4880 + t5374*t7067 + t494*(t2723*t4726 + t2837*t4745 + t1466*t5107 + t1558*t5154 + t2484*t5374 + t7298) + t3641*(-1.*t2140*t4726 - 1.*t2202*t4745 + t7309))*var2[9] + (-0.28121*t4776 - 0.038749*t4835 + 1.e-6*t4856 - 1.*t5064*t7097 - 1.*t415*t7358 - 1.*t2599*t7369 + 4.e-6*(-1.*t5098*t7097 - 1.*t480*t7358 - 1.*t2685*t7369))*var2[10])*var2[11] + t4514*var3[0] + t7169*var3[1] + t7163*var3[2] + t7264*var3[3] + t7180*var3[4] + t7030*var3[5] + t7069*var3[9] + t7118*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t25*t3224*t4455 + t33*t7806 + t3247*t7810 + t3267*t7816 + t3341*t7820 + t3412*t7846 + t3494*t7852 + t3581*t7857 - 0.14871*(4.e-6*t680*t7846 + 4.e-6*t348*t7852 + t1189*t7857) - 0.041195*(-1.*t680*t7846 + t312*t7852 + 4.e-6*t348*t7857) + 0.803147*(t579*t7846 + t680*t7852 - 4.e-6*t680*t7857) + var1[2] + t4540*var2[0] + t7829*var2[1] + t7824*var2[2] + t7875*var2[3] + ((-1.*t4209*t4413 - 1.*t4455*t4573)*var2[1] + t7829*var2[2])*var2[3] + t7840*var2[4] + (t4573*var2[0] - 1.*t4413*t6467*var2[1] + t4455*t6467*var2[2] + (t4514*(-1.*t4577*t6424 - 1.*t4552*t6436 - 1.*t4464*t6449 - 1.*t3899*t6459) + t3899*(t4589*t6449 + t4514*t6459 + t4552*t6473 + t4577*t6501) + t6436*t7869 + t6473*t7873)*var2[3])*var2[4] + t7765*var2[5] + (t25*t6323*var2[0] + (t4290*t4455 + t3239*t4413*t6323)*var2[1] + (t4290*t4413 - 1.*t3239*t4455*t6323)*var2[2] + (t25*t6249*t7869 + t25*t6365*t7873 + t3899*(t25*t4514*t6289 - 1.*t3239*t4589*t6289 + t25*t4552*t6365 - 1.*t3239*t4577*t6365 + t7967 + t7968) + t4514*(-1.*t25*t4552*t6249 + t3239*t4577*t6249 - 1.*t25*t3899*t6289 + t3239*t4464*t6289 + t7974 + t7975))*var2[3] + (t6254*t7834 + t6336*t7838 + t4433*(t4343*t6289 + t4297*t6365 + t7967 + t7968) + t4180*(-1.*t4297*t6249 - 1.*t3826*t6289 + t7974 + t7975))*var2[4])*var2[5] + t7781*var2[9] + (t25*t6038*var2[0] + (t4455*t5989 + t3239*t4413*t6038)*var2[1] + (t4413*t5989 - 1.*t3239*t4455*t6038)*var2[2] + (t25*t5912*t7869 + t25*t6115*t7873 + t3899*(t25*t4514*t6012 - 1.*t3239*t4589*t6012 + t25*t4552*t6115 - 1.*t3239*t4577*t6115 + t7919 + t7921) + t4514*(-1.*t25*t4552*t5912 + t3239*t4577*t5912 - 1.*t25*t3899*t6012 + t3239*t4464*t6012 + t7927 + t7928))*var2[3] + (t5927*t7834 + t6056*t7838 + t4433*(t4343*t6012 + t4297*t6115 + t7919 + t7921) + t4180*(-1.*t4297*t5912 - 1.*t3826*t6012 + t7927 + t7928))*var2[4] + (t3641*(t1564*t5793 + t1765*t5800 + t1065*t5814 + t1803*t5827) + t1861*(-1.*t3820*t5800 - 1.*t3716*t5814 - 1.*t1564*t5894 - 1.*t1803*t5897))*var2[5])*var2[9] + t7800*var2[10] + (t6945*var2[0] + (t4455*t6819 - 1.*t4413*t6952)*var2[1] + (t4413*t6819 + t4455*t6952)*var2[2] + (t6802*t7869 + t6941*t7873 + t3899*(t4552*t6941 + t4514*t6961 + t4589*t6971 + t4577*t6982 + t8180 + t8183) + t4514*(-1.*t4552*t6802 - 1.*t4577*t6905 - 1.*t3899*t6961 - 1.*t4464*t6971 + t8187 + t8190))*var2[3] + (t6897*t7834 + t6810*t7838 + t4433*(t4343*t6851 + t4297*t6883 + t8142 + t8144 + t8180 + t8183) + t4180*(-1.*t4297*t6800 - 1.*t3826*t6851 + t8133 + t8134 + t8187 + t8190))*var2[4] + (t6625*t7758 + t6769*t7763 + t1861*(-1.*t3820*t6613 - 1.*t3716*t6621 - 1.*t1564*t6775 - 1.*t1803*t6785 + t8133 + t8134) + t3641*(t1564*t6570 + t1803*t6580 + t1765*t6613 + t1065*t6621 + t8142 + t8144))*var2[5] + (-0.15121*t6655 - 0.15121*t6673 + t6625*t7773 + t6769*t7779 + t1861*(-1.*t2837*t6598 - 1.*t2723*t6609 - 1.*t1558*t6737 - 1.*t1466*t6754 - 1.*t2484*t6769 + t8133) + t3641*(t1558*t6542 + t1466*t6568 + t1016*t6598 + t2484*t6625 + t8144 + t6609*t941))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t5440*t7869 + t5741*t7873 + t3899*(t4514*t5698 + t4589*t5705 + t4552*t5741 + t4577*t5768 + t8069 + t8071) + t4514*(-1.*t4552*t5440 - 1.*t4577*t5490 - 1.*t3899*t5698 - 1.*t4464*t5705 + t8076 + t8078))*var2[3] + (t5481*t7834 + t5635*t7838 + t4433*(t4343*t5610 + t4297*t5666 + t8016 + t8018 + t8069 + t8071) + t4180*(-1.*t4297*t5409 - 1.*t3826*t5610 + t8008 + t8009 + t8076 + t8078))*var2[4] + (t4936*t7758 + t5374*t7763 + t1861*(-1.*t3716*t4755 - 1.*t3820*t4767 - 1.*t1564*t5380 - 1.*t1803*t5401 + t8008 + t8009) + t3641*(t1065*t4755 + t1765*t4767 + t1564*t4890 + t1803*t4899 + t8016 + t8018))*var2[5] + (t4936*t7773 + t5374*t7779 + t1861*(-1.*t2723*t4726 - 1.*t2837*t4745 - 1.*t1466*t5107 - 1.*t1558*t5154 - 1.*t2484*t5374 + t8009) + t3641*(t1016*t4745 + t1466*t4860 + t1558*t4880 + t2484*t4936 + t8016 + t4726*t941))*var2[9] + (-1.*t4856*t7789 - 1.*t5064*t7794 - 1.*t2599*t8059 - 1.*t8050*t855 + 4.e-6*(-1.*t4776*t7789 - 1.*t5098*t7794 - 1.*t2685*t8059 - 1.*t8050*t913))*var2[10])*var2[11] + t4540*var3[0] + t7829*var3[1] + t7824*var3[2] + t7875*var3[3] + t7840*var3[4] + t7765*var3[5] + t7781*var3[9] + t7800*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void ddh_FrFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
