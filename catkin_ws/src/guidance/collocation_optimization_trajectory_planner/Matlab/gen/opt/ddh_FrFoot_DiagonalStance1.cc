/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:09:33 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t196;
  double t167;
  double t259;
  double t135;
  double t205;
  double t214;
  double t236;
  double t512;
  double t189;
  double t194;
  double t273;
  double t112;
  double t431;
  double t468;
  double t485;
  double t521;
  double t536;
  double t413;
  double t598;
  double t601;
  double t603;
  double t630;
  double t632;
  double t642;
  double t644;
  double t681;
  double t113;
  double t131;
  double t132;
  double t139;
  double t567;
  double t586;
  double t595;
  double t871;
  double t877;
  double t891;
  double t896;
  double t901;
  double t903;
  double t906;
  double t706;
  double t731;
  double t919;
  double t920;
  double t936;
  double t939;
  double t950;
  double t960;
  double t961;
  double t974;
  double t980;
  double t981;
  double t553;
  double t641;
  double t694;
  double t698;
  double t749;
  double t767;
  double t775;
  double t807;
  double t843;
  double t853;
  double t855;
  double t864;
  double t914;
  double t943;
  double t991;
  double t1000;
  double t1014;
  double t1034;
  double t1042;
  double t1044;
  double t1048;
  double t1051;
  double t285;
  double t355;
  double t358;
  double t378;
  double t1013;
  double t1072;
  double t1081;
  double t1282;
  double t1300;
  double t1301;
  double t1304;
  double t1305;
  double t1320;
  double t1120;
  double t1138;
  double t1143;
  double t1181;
  double t325;
  double t384;
  double t385;
  double t1219;
  double t1234;
  double t1237;
  double t1240;
  double t1242;
  double t1256;
  double t1257;
  double t1258;
  double t1193;
  double t1214;
  double t1216;
  double t1218;
  double t704;
  double t818;
  double t833;
  double t1087;
  double t1100;
  double t1103;
  double t1111;
  double t1191;
  double t1264;
  double t1277;
  double t1278;
  double t1302;
  double t1324;
  double t1338;
  double t1377;
  double t1387;
  double t1392;
  double t1423;
  double t1430;
  double t1435;
  double t1444;
  double t1448;
  double t1461;
  double t1516;
  double t1644;
  double t1658;
  double t1673;
  double t1692;
  double t1706;
  double t1718;
  double t1722;
  double t1745;
  double t1498;
  double t1524;
  double t1545;
  double t1549;
  double t1567;
  double t1573;
  double t1602;
  double t1609;
  double t1620;
  double t1630;
  double t1689;
  double t1713;
  double t1760;
  double t1775;
  double t1785;
  double t1809;
  double t1825;
  double t1866;
  double t1899;
  double t1906;
  double t1908;
  double t1936;
  double t1938;
  double t1956;
  double t1961;
  double t1975;
  double t1985;
  double t1988;
  double t1974;
  double t1993;
  double t2015;
  double t2026;
  double t2058;
  double t2066;
  double t2069;
  double t2088;
  double t2104;
  double t2108;
  double t84;
  double t87;
  double t2154;
  double t2146;
  double t2173;
  double t2184;
  double t2193;
  double t2219;
  double t2237;
  double t2238;
  double t2474;
  double t2483;
  double t2486;
  double t2497;
  double t2504;
  double t2508;
  double t2515;
  double t2516;
  double t2519;
  double t2536;
  double t2537;
  double t2553;
  double t2574;
  double t2583;
  double t2591;
  double t2612;
  double t2261;
  double t2288;
  double t2289;
  double t2312;
  double t2348;
  double t2350;
  double t2354;
  double t2363;
  double t2425;
  double t2432;
  double t2441;
  double t2451;
  double t2795;
  double t2807;
  double t2811;
  double t2743;
  double t2771;
  double t2774;
  double t2812;
  double t2816;
  double t2819;
  double t2871;
  double t2874;
  double t2875;
  double t2823;
  double t2846;
  double t2850;
  double t2858;
  double t2876;
  double t2906;
  double t2911;
  double t2931;
  double t2933;
  double t2946;
  double t2950;
  double t2962;
  double t2970;
  double t2990;
  double t2996;
  double t3037;
  double t3054;
  double t3068;
  double t3077;
  double t3082;
  double t3108;
  double t3111;
  double t3136;
  double t3152;
  double t3164;
  double t3186;
  double t3242;
  double t3256;
  double t3268;
  double t3312;
  double t3330;
  double t3349;
  double t3298;
  double t3304;
  double t3307;
  double t3352;
  double t3363;
  double t3376;
  double t3436;
  double t3455;
  double t3464;
  double t3379;
  double t3387;
  double t3400;
  double t3429;
  double t3469;
  double t3471;
  double t3482;
  double t3505;
  double t3520;
  double t3521;
  double t3550;
  double t3557;
  double t3571;
  double t3584;
  double t3585;
  double t3722;
  double t3741;
  double t3752;
  double t3762;
  double t3774;
  double t3786;
  double t3812;
  double t3825;
  double t3759;
  double t3795;
  double t3834;
  double t3844;
  double t3887;
  double t3913;
  double t3919;
  double t3922;
  double t3975;
  double t3976;
  double t3978;
  double t3982;
  double t3985;
  double t3995;
  double t3999;
  double t4009;
  double t3977;
  double t3992;
  double t4014;
  double t4016;
  double t4037;
  double t4040;
  double t4067;
  double t4088;
  double t4145;
  double t4154;
  double t4155;
  double t4173;
  double t3851;
  double t3924;
  double t3936;
  double t3946;
  double t3950;
  double t3953;
  double t4127;
  double t4133;
  double t4135;
  double t4137;
  double t4141;
  double t4344;
  double t4345;
  double t4350;
  double t4247;
  double t4530;
  double t4582;
  double t4584;
  double t4593;
  double t4598;
  double t4620;
  double t4631;
  double t4639;
  double t4653;
  double t4654;
  double t4337;
  double t4348;
  double t4355;
  double t4357;
  double t4406;
  double t4409;
  double t4472;
  double t4473;
  double t4757;
  double t4759;
  double t4765;
  double t4716;
  double t4717;
  double t4731;
  double t4692;
  double t4706;
  double t4707;
  double t4708;
  double t4742;
  double t4774;
  double t4775;
  double t4792;
  double t4795;
  double t4797;
  double t4812;
  double t4815;
  double t4836;
  double t4113;
  double t4116;
  double t4118;
  double t4025;
  double t4089;
  double t4105;
  double t4205;
  double t4871;
  double t4894;
  double t4895;
  double t4908;
  double t4912;
  double t4914;
  double t4925;
  double t4928;
  double t4931;
  double t4898;
  double t4949;
  double t4955;
  double t4956;
  double t4940;
  double t4942;
  double t4976;
  double t4984;
  double t4997;
  double t5007;
  double t5015;
  double t5016;
  double t5058;
  double t5062;
  double t5064;
  double t5151;
  double t5153;
  double t5173;
  double t5196;
  double t5208;
  double t5237;
  double t5433;
  double t5438;
  double t5445;
  double t5450;
  double t5453;
  double t5461;
  double t5462;
  double t5470;
  double t5471;
  double t5472;
  double t5336;
  double t5340;
  double t5341;
  double t5249;
  double t5130;
  double t5131;
  double t5136;
  double t5559;
  double t5561;
  double t5562;
  double t5525;
  double t5526;
  double t5529;
  double t5536;
  double t5540;
  double t5541;
  double t5520;
  double t5523;
  double t5524;
  double t5542;
  double t5545;
  double t5546;
  double t5549;
  double t5568;
  double t5571;
  double t5580;
  double t5590;
  double t5593;
  double t5694;
  double t5695;
  double t5701;
  double t5708;
  double t5731;
  double t5737;
  double t5747;
  double t5782;
  double t5758;
  double t5757;
  double t5759;
  double t5761;
  double t5764;
  double t5799;
  double t5800;
  double t5808;
  double t5809;
  double t5815;
  double t5936;
  double t5939;
  double t5942;
  double t5956;
  double t5957;
  double t5971;
  double t6035;
  double t5997;
  double t6120;
  double t6127;
  double t6128;
  double t6129;
  double t6132;
  double t6135;
  double t6137;
  double t6138;
  double t6158;
  double t6166;
  double t6180;
  double t6181;
  double t6182;
  double t6190;
  double t6192;
  double t6193;
  double t6194;
  double t6196;
  double t6198;
  double t6216;
  double t6247;
  double t6249;
  double t6253;
  double t6270;
  double t6271;
  double t6273;
  double t6191;
  double t6218;
  double t6220;
  double t6223;
  double t6224;
  double t6227;
  double t6237;
  double t6239;
  double t6240;
  double t6232;
  double t6233;
  double t6243;
  double t6317;
  double t6429;
  double t6430;
  double t6431;
  double t6435;
  double t6439;
  double t6442;
  double t6443;
  double t6468;
  double t6151;
  double t6153;
  double t6154;
  double t6131;
  double t6142;
  double t6143;
  double t6290;
  double t6292;
  double t6297;
  double t6262;
  double t6282;
  double t6286;
  double t6316;
  double t6568;
  double t6570;
  double t6574;
  double t6235;
  double t6554;
  double t6555;
  double t6566;
  double t6602;
  double t6603;
  double t6628;
  double t6630;
  double t6631;
  double t6634;
  double t6524;
  double t6526;
  double t6527;
  double t6490;
  double t6497;
  double t6499;
  double t6478;
  double t6485;
  double t6511;
  double t6532;
  double t6534;
  double t6725;
  double t6730;
  double t6731;
  double t6741;
  double t6744;
  double t6745;
  double t6656;
  double t6662;
  double t6663;
  double t6583;
  double t6594;
  double t6595;
  double t6580;
  double t6636;
  double t6783;
  double t6799;
  double t6801;
  double t6652;
  double t6679;
  double t6775;
  double t6776;
  double t6777;
  double t6814;
  double t6815;
  double t6821;
  double t6829;
  double t6833;
  double t6838;
  double t6903;
  double t6906;
  double t6909;
  double t6912;
  double t6914;
  double t6916;
  double t6918;
  double t6926;
  double t6929;
  double t6931;
  double t6936;
  double t6942;
  double t6943;
  double t6944;
  double t6949;
  double t6954;
  double t6956;
  double t6957;
  double t6958;
  double t6959;
  double t6960;
  double t6961;
  double t6963;
  double t6972;
  double t6977;
  double t6979;
  double t6981;
  double t6983;
  double t6987;
  double t6989;
  double t6990;
  double t6986;
  double t6991;
  double t6993;
  double t6994;
  double t6999;
  double t7000;
  double t7002;
  double t7003;
  double t7006;
  double t7010;
  double t2140;
  double t142;
  double t2152;
  double t2170;
  double t7017;
  double t7021;
  double t7022;
  double t7041;
  double t7047;
  double t7054;
  double t2206;
  double t7080;
  double t7084;
  double t7088;
  double t7095;
  double t7096;
  double t7103;
  double t7107;
  double t7108;
  double t7109;
  double t7111;
  double t7114;
  double t7115;
  double t7117;
  double t7118;
  double t7119;
  double t2257;
  double t2260;
  double t7066;
  double t7067;
  double t7068;
  double t7075;
  double t7076;
  double t7078;
  double t2322;
  double t2328;
  double t2342;
  double t2385;
  double t2400;
  double t2403;
  double t7203;
  double t7204;
  double t7207;
  double t7210;
  double t7211;
  double t7215;
  double t7216;
  double t7217;
  double t7218;
  double t7130;
  double t7131;
  double t7132;
  double t7141;
  double t7147;
  double t7149;
  double t7151;
  double t7155;
  double t7162;
  double t7163;
  double t7164;
  double t7169;
  double t7295;
  double t7315;
  double t7400;
  double t7401;
  double t7402;
  double t7404;
  double t7406;
  double t7407;
  double t7410;
  double t7422;
  double t7424;
  double t7430;
  double t5078;
  double t5080;
  double t5082;
  double t7292;
  double t7475;
  double t4710;
  double t4786;
  double t4790;
  double t7487;
  double t7492;
  double t7617;
  double t7621;
  double t7642;
  double t7644;
  double t7699;
  double t7701;
  double t7721;
  double t7723;
  double t6071;
  double t6074;
  double t6082;
  double t6001;
  double t6012;
  double t6018;
  double t5947;
  double t7872;
  double t7911;
  double t6859;
  double t6860;
  double t6861;
  double t7907;
  double t7881;
  double t6486;
  double t6543;
  double t6545;
  double t7987;
  double t7994;
  double t6807;
  double t6808;
  double t6809;
  double t8028;
  double t8032;
  double t8080;
  double t8081;
  double t8088;
  double t8091;
  double t8093;
  double t8094;
  double t8097;
  double t8100;
  double t8103;
  double t8108;
  double t8111;
  double t8116;
  double t8117;
  double t8119;
  double t8120;
  double t8121;
  double t8128;
  double t8130;
  double t8131;
  double t8132;
  double t8134;
  double t8135;
  double t8136;
  double t8137;
  double t8163;
  double t8164;
  double t8165;
  double t8166;
  double t8153;
  double t8158;
  double t8159;
  double t8160;
  double t8143;
  double t8151;
  double t8161;
  double t8169;
  double t8170;
  double t8172;
  double t8176;
  double t8177;
  double t8180;
  double t8188;
  double t8189;
  double t8194;
  double t8201;
  double t8202;
  double t8204;
  double t8225;
  double t8228;
  double t8229;
  double t8233;
  double t8234;
  double t8235;
  double t8239;
  double t8241;
  double t8252;
  double t8254;
  double t8255;
  double t8259;
  double t8260;
  double t8261;
  double t8262;
  double t8212;
  double t8214;
  double t8217;
  double t8220;
  double t8221;
  double t8222;
  double t8318;
  double t8329;
  double t8331;
  double t8332;
  double t8333;
  double t8337;
  double t8349;
  double t8353;
  double t8354;
  double t8268;
  double t8272;
  double t8275;
  double t8277;
  double t8283;
  double t8285;
  double t8287;
  double t8291;
  double t8293;
  double t8295;
  double t8296;
  double t8299;
  double t8446;
  double t8448;
  double t8464;
  double t8466;
  double t8530;
  double t8532;
  double t8545;
  double t8546;
  double t8616;
  double t8628;
  double t8683;
  double t8684;
  double t8685;
  double t8686;
  double t8687;
  double t8688;
  double t8689;
  double t8672;
  double t8673;
  double t8674;
  double t8675;
  double t8676;
  double t8679;
  double t8681;
  double t8629;
  double t8614;
  double t8705;
  double t8708;
  double t8715;
  double t8723;
  double t8831;
  double t8848;
  double t8846;
  double t8833;
  double t8900;
  double t8905;
  double t8910;
  double t8914;
  t196 = Cos(var1[11]);
  t167 = Cos(var1[10]);
  t259 = -1. + t196;
  t135 = Sin(var1[9]);
  t205 = -1.*t196;
  t214 = 1. + t205;
  t236 = 1.6e-11*t214;
  t512 = Sin(var1[11]);
  t189 = -1.*t167;
  t194 = 1. + t189;
  t273 = 1.6e-11*t259;
  t112 = Cos(var1[9]);
  t431 = -1.000000000016*t214;
  t468 = 1. + t431;
  t485 = 0.004352*t468;
  t521 = -0.9999910000159999*t512;
  t536 = t485 + t521;
  t413 = Sin(var1[10]);
  t598 = -1. + t236;
  t601 = 4.e-6*t598;
  t603 = 3.999964e-6*t214;
  t630 = -1.7408e-8*t512;
  t632 = t601 + t603 + t630;
  t642 = 0.999991*t196;
  t644 = 0.004352*t512;
  t681 = t273 + t642 + t644;
  t113 = -1.*t112;
  t131 = 1. + t113;
  t132 = 0.15121*t131;
  t139 = -0.15121*t135;
  t567 = -1. + t167;
  t586 = 1.6e-11*t567;
  t595 = 1. + t586;
  t871 = -1.26e-8*var1[11];
  t877 = 1. + t273;
  t891 = -0.14871*t877;
  t896 = -1.64779999997447e-7*t214;
  t901 = -1.59556e-7*t259;
  t903 = -1.199987999968e-6*t512;
  t906 = t871 + t891 + t896 + t901 + t903;
  t706 = -1.000000000016*t194;
  t731 = 1. + t706;
  t919 = 0.803147*t468;
  t920 = 0.50315000001605*t214;
  t936 = 0.00130540515936178*t512;
  t939 = t919 + t920 + t936;
  t950 = -5.04e-14*var1[11];
  t960 = -0.03988959484*t214;
  t961 = 6.38224e-13*t259;
  t974 = -0.041195*t196;
  t980 = 0.299996999992*t512;
  t981 = t950 + t960 + t961 + t974 + t980;
  t553 = -4.e-6*t413*t536;
  t641 = t595*t632;
  t694 = 4.e-6*t194*t681;
  t698 = 0. + t553 + t641 + t694;
  t749 = t731*t536;
  t767 = 4.e-6*t413*t632;
  t775 = -1.*t413*t681;
  t807 = 0. + t749 + t767 + t775;
  t843 = -1.2484e-7*var1[10];
  t853 = 2.479936e-18*t194;
  t855 = -1.54996e-7*t567;
  t864 = 1.124840000016e-6*t413;
  t914 = t595*t906;
  t943 = -4.e-6*t413*t939;
  t991 = 4.e-6*t194*t981;
  t1000 = t843 + t853 + t855 + t864 + t914 + t943 + t991;
  t1014 = 0.281210000008499*t194;
  t1034 = -0.03874900000062*t413;
  t1042 = 4.e-6*t413*t906;
  t1044 = t731*t939;
  t1048 = -1.*t413*t981;
  t1051 = t1014 + t1034 + t1042 + t1044 + t1048;
  t285 = -1. + t236 + t273;
  t355 = 4.e-6*t259;
  t358 = -4.e-6*t196;
  t378 = t355 + t358;
  t1013 = -1.*t135*t1000;
  t1072 = t112*t1051;
  t1081 = t132 + t139 + t1013 + t1072;
  t1282 = t595*t285;
  t1300 = 4.e-6*t194*t378;
  t1301 = t1282 + t1300;
  t1304 = 4.e-6*t285*t413;
  t1305 = -1.*t378*t413;
  t1320 = t1304 + t1305;
  t1120 = -0.15121*t131;
  t1138 = t112*t1000;
  t1143 = t135*t1051;
  t1181 = t1120 + t139 + t1138 + t1143;
  t325 = 4.e-6*t194*t285;
  t384 = t167*t378;
  t385 = t325 + t384;
  t1219 = -4.9936e-13*var1[10];
  t1234 = -0.038749*t194;
  t1237 = 6.19984e-13*t567;
  t1240 = -0.281210000004*t413;
  t1242 = 4.e-6*t194*t906;
  t1256 = t413*t939;
  t1257 = t167*t981;
  t1258 = 0. + t1219 + t1234 + t1237 + t1240 + t1242 + t1256 + t1257;
  t1193 = t413*t536;
  t1214 = 4.e-6*t194*t632;
  t1216 = t167*t681;
  t1218 = 0. + t1193 + t1214 + t1216;
  t704 = -1.*t135*t698;
  t818 = t112*t807;
  t833 = 0. + t704 + t818;
  t1087 = -1.*t833*t1081;
  t1100 = t112*t698;
  t1103 = t135*t807;
  t1111 = 0. + t1100 + t1103;
  t1191 = -1.*t1111*t1181;
  t1264 = -1.*t1218*t1258;
  t1277 = t1087 + t1191 + t1264;
  t1278 = t385*t1277;
  t1302 = -1.*t1301*t135;
  t1324 = t112*t1320;
  t1338 = t1302 + t1324;
  t1377 = t1338*t1081;
  t1387 = t112*t1301;
  t1392 = t135*t1320;
  t1423 = t1387 + t1392;
  t1430 = t1423*t1181;
  t1435 = t385*t1258;
  t1444 = t1377 + t1430 + t1435;
  t1448 = t1444*t1218;
  t1461 = t1278 + t1448;
  t1516 = t1219 + t1234 + t1237 + t1240 + t1242 + t1256 + t1257;
  t1644 = -1.7408e-8*t214;
  t1658 = -3.999964e-6*t512;
  t1673 = t1644 + t1658;
  t1692 = 0.999991*t468;
  t1706 = t1692 + t644;
  t1718 = -0.004352*t196;
  t1722 = 0.999991*t512;
  t1745 = t1718 + t1722;
  t1498 = -1.*t698*t1000;
  t1524 = -1.*t1218*t1516;
  t1545 = -1.*t807*t1051;
  t1549 = t1498 + t1524 + t1545;
  t1567 = t385*t1549;
  t1573 = t1301*t1000;
  t1602 = t385*t1516;
  t1609 = t1320*t1051;
  t1620 = t1573 + t1602 + t1609;
  t1630 = t1620*t1218;
  t1689 = t595*t1673;
  t1713 = -4.e-6*t413*t1706;
  t1760 = 4.e-6*t194*t1745;
  t1775 = 0. + t1689 + t1713 + t1760;
  t1785 = -0.15121*t1775;
  t1809 = 4.e-6*t413*t1673;
  t1825 = t731*t1706;
  t1866 = -1.*t413*t1745;
  t1899 = 0. + t1809 + t1825 + t1866;
  t1906 = -0.15121*t1899;
  t1908 = t1567 + t1630 + t1785 + t1906;
  t1936 = -1.*t906*t632;
  t1938 = -1.*t536*t939;
  t1956 = -1.*t681*t981;
  t1961 = t1936 + t1938 + t1956;
  t1975 = t285*t906;
  t1985 = t378*t981;
  t1988 = t1975 + t1985;
  t1974 = -1.*t378*t1961;
  t1993 = -1.*t1988*t681;
  t2015 = t1974 + t1993;
  t2026 = 4.e-6*t2015;
  t2058 = -1.*t285*t1961;
  t2066 = 1.e-6*t1673;
  t2069 = -1.*t1988*t632;
  t2088 = -0.038749*t1706;
  t2104 = -0.28121*t1745;
  t2108 = t2026 + t2058 + t2066 + t2069 + t2088 + t2104;
  t84 = Cos(var1[4]);
  t87 = Cos(var1[5]);
  t2154 = Sin(var1[5]);
  t2146 = Sin(var1[4]);
  t2173 = -1.*t84*t87*t135;
  t2184 = -1.*t112*t84*t2154;
  t2193 = t2173 + t2184;
  t2219 = t112*t84*t87;
  t2237 = -1.*t84*t135*t2154;
  t2238 = t2219 + t2237;
  t2474 = 4.e-6*t194*t1673;
  t2483 = t413*t1706;
  t2486 = t167*t1745;
  t2497 = 0. + t2474 + t2483 + t2486;
  t2504 = t2497*t2146;
  t2508 = -1.*t135*t1775;
  t2515 = t112*t1899;
  t2516 = 0. + t2508 + t2515;
  t2519 = t87*t2516;
  t2536 = t112*t1775;
  t2537 = t135*t1899;
  t2553 = 0. + t2536 + t2537;
  t2574 = -1.*t2553*t2154;
  t2583 = 0. + t2519 + t2574;
  t2591 = t84*t2583;
  t2612 = 0. + t2504 + t2591;
  t2261 = t413*t2146;
  t2288 = -4.e-6*t413*t2193;
  t2289 = t731*t2238;
  t2312 = t2261 + t2288 + t2289;
  t2348 = t167*t2146;
  t2350 = 4.e-6*t194*t2193;
  t2354 = -1.*t413*t2238;
  t2363 = t2348 + t2350 + t2354;
  t2425 = 4.e-6*t194*t2146;
  t2432 = t595*t2193;
  t2441 = 4.e-6*t413*t2238;
  t2451 = t2425 + t2432 + t2441;
  t2795 = t87*t1423;
  t2807 = t1338*t2154;
  t2811 = t2795 + t2807;
  t2743 = t87*t1111;
  t2771 = t833*t2154;
  t2774 = 0. + t2743 + t2771;
  t2812 = t87*t1181;
  t2816 = t1081*t2154;
  t2819 = 0. + t2812 + t2816;
  t2871 = t87*t1081;
  t2874 = -1.*t1181*t2154;
  t2875 = 0. + t2871 + t2874;
  t2823 = t2811*t2819;
  t2846 = t87*t1338;
  t2850 = -1.*t1423*t2154;
  t2858 = t2846 + t2850;
  t2876 = t2858*t2875;
  t2906 = t1435 + t2823 + t2876;
  t2911 = t2774*t2906;
  t2931 = -1.*t2774*t2819;
  t2933 = t87*t833;
  t2946 = -1.*t1111*t2154;
  t2950 = 0. + t2933 + t2946;
  t2962 = -1.*t2950*t2875;
  t2970 = t1264 + t2931 + t2962;
  t2990 = t2811*t2970;
  t2996 = t2911 + t2990;
  t3037 = Sin(var1[3]);
  t3054 = t87*t2553;
  t3068 = t2516*t2154;
  t3077 = 0. + t3054 + t3068;
  t3082 = t3037*t3077;
  t3108 = Cos(var1[3]);
  t3111 = t84*t2497;
  t3136 = -1.*t2146*t2583;
  t3152 = 0. + t3111 + t3136;
  t3164 = t3108*t3152;
  t3186 = 0. + t3082 + t3164;
  t3242 = t3108*t3077;
  t3256 = -1.*t3037*t3152;
  t3268 = 0. + t3242 + t3256;
  t3312 = t385*t2146;
  t3330 = t84*t2858;
  t3349 = t3312 + t3330;
  t3298 = t1218*t2146;
  t3304 = t84*t2950;
  t3307 = 0. + t3298 + t3304;
  t3352 = t1258*t2146;
  t3363 = t84*t2875;
  t3376 = 0. + t3352 + t3363;
  t3436 = t84*t1258;
  t3455 = -1.*t2146*t2875;
  t3464 = 0. + t3436 + t3455;
  t3379 = t3349*t3376;
  t3387 = t385*t84;
  t3400 = -1.*t2146*t2858;
  t3429 = t3387 + t3400;
  t3469 = t3429*t3464;
  t3471 = t2823 + t3379 + t3469;
  t3482 = t3307*t3471;
  t3505 = -1.*t3307*t3376;
  t3520 = t84*t1218;
  t3521 = -1.*t2146*t2950;
  t3550 = 0. + t3520 + t3521;
  t3557 = -1.*t3550*t3464;
  t3571 = t2931 + t3505 + t3557;
  t3584 = t3349*t3571;
  t3585 = t3482 + t3584;
  t3722 = 0.00130540515936178*t196;
  t3741 = -0.2999969999968001*t512;
  t3752 = t3722 + t3741;
  t3762 = -1.199987999968e-6*t196;
  t3774 = -5.2216206374471e-9*t512;
  t3786 = -1.26e-8 + t3762 + t3774;
  t3812 = 0.299996999992*t196;
  t3825 = -5.04e-14 + t3812 + t936;
  t3759 = -4.e-6*t413*t3752;
  t3795 = t595*t3786;
  t3834 = 4.e-6*t194*t3825;
  t3844 = t3759 + t3795 + t3834;
  t3887 = t731*t3752;
  t3913 = 4.e-6*t413*t3786;
  t3919 = -1.*t413*t3825;
  t3922 = t3887 + t3913 + t3919;
  t3975 = 0.004352*t196;
  t3976 = t3975 + t521;
  t3978 = -0.9999910000159999*t196;
  t3982 = -0.00435200000006963*t512;
  t3985 = t3978 + t3982;
  t3995 = -1.7408e-8*t196;
  t3999 = 3.999964000064e-6*t512;
  t4009 = t3995 + t3999;
  t3977 = 4.e-6*t194*t3976;
  t3992 = -4.e-6*t413*t3985;
  t4014 = t595*t4009;
  t4016 = t3977 + t3992 + t4014;
  t4037 = -1.*t413*t3976;
  t4040 = t731*t3985;
  t4067 = 4.e-6*t413*t4009;
  t4088 = t4037 + t4040 + t4067;
  t4145 = t167*t3976;
  t4154 = t413*t3985;
  t4155 = 4.e-6*t194*t4009;
  t4173 = t4145 + t4154 + t4155;
  t3851 = -1.*t135*t3844;
  t3924 = t112*t3922;
  t3936 = t3851 + t3924;
  t3946 = t112*t3844;
  t3950 = t135*t3922;
  t3953 = t3946 + t3950;
  t4127 = t413*t3752;
  t4133 = 4.e-6*t194*t3786;
  t4135 = t167*t3825;
  t4137 = t4127 + t4133 + t4135;
  t4141 = -1.*t4137*t1218;
  t4344 = -3.999964e-6*t196;
  t4345 = t4344 + t630;
  t4350 = t642 + t644;
  t4247 = t385*t4137;
  t4530 = -1.*t536*t3752;
  t4582 = -1.*t632*t3786;
  t4584 = -1.*t906*t4009;
  t4593 = -1.*t3985*t939;
  t4598 = -1.*t3825*t681;
  t4620 = -1.*t3976*t981;
  t4631 = t4530 + t4582 + t4584 + t4593 + t4598 + t4620;
  t4639 = t285*t3786;
  t4653 = t378*t3825;
  t4654 = t4639 + t4653;
  t4337 = -4.e-6*t413*t3976;
  t4348 = t595*t4345;
  t4355 = 4.e-6*t194*t4350;
  t4357 = t4337 + t4348 + t4355;
  t4406 = t731*t3976;
  t4409 = 4.e-6*t413*t4345;
  t4472 = -1.*t413*t4350;
  t4473 = t4406 + t4409 + t4472;
  t4757 = t112*t4357;
  t4759 = t135*t4473;
  t4765 = t4757 + t4759;
  t4716 = -1.*t135*t4357;
  t4717 = t112*t4473;
  t4731 = t4716 + t4717;
  t4692 = t413*t3976;
  t4706 = 4.e-6*t194*t4345;
  t4707 = t167*t4350;
  t4708 = t4692 + t4706 + t4707;
  t4742 = t87*t4731;
  t4774 = -1.*t4765*t2154;
  t4775 = t4742 + t4774;
  t4792 = t87*t4765;
  t4795 = t4731*t2154;
  t4797 = t4792 + t4795;
  t4812 = t84*t4708;
  t4815 = -1.*t2146*t4775;
  t4836 = t4812 + t4815;
  t4113 = t112*t4016;
  t4116 = t135*t4088;
  t4118 = t4113 + t4116;
  t4025 = -1.*t135*t4016;
  t4089 = t112*t4088;
  t4105 = t4025 + t4089;
  t4205 = -1.*t4173*t1258;
  t4871 = t87*t3953;
  t4894 = t3936*t2154;
  t4895 = t4871 + t4894;
  t4908 = t87*t3936;
  t4912 = -1.*t3953*t2154;
  t4914 = t4908 + t4912;
  t4925 = t87*t4118;
  t4928 = t4105*t2154;
  t4931 = t4925 + t4928;
  t4898 = t2811*t4895;
  t4949 = t87*t4105;
  t4955 = -1.*t4118*t2154;
  t4956 = t4949 + t4955;
  t4940 = -1.*t4895*t2774;
  t4942 = -1.*t4931*t2819;
  t4976 = t4137*t2146;
  t4984 = t84*t4914;
  t4997 = t4976 + t4984;
  t5007 = t84*t4137;
  t5015 = -1.*t2146*t4914;
  t5016 = t5007 + t5015;
  t5058 = t4173*t2146;
  t5062 = t84*t4956;
  t5064 = t5058 + t5062;
  t5151 = -0.15121*t112;
  t5153 = t5151 + t139 + t1013 + t1072;
  t5173 = 0.15121*t135;
  t5196 = -1.*t112*t1000;
  t5208 = -1.*t135*t1051;
  t5237 = t5151 + t5173 + t5196 + t5208;
  t5433 = -1.*t112*t1775;
  t5438 = -1.*t135*t1899;
  t5445 = t5433 + t5438;
  t5450 = t87*t5445;
  t5453 = t2508 + t2515;
  t5461 = -1.*t5453*t2154;
  t5462 = t5450 + t5461;
  t5470 = t87*t5453;
  t5471 = t5445*t2154;
  t5472 = t5470 + t5471;
  t5336 = -1.*t112*t1301;
  t5340 = -1.*t135*t1320;
  t5341 = t5336 + t5340;
  t5249 = t704 + t818;
  t5130 = -1.*t112*t698;
  t5131 = -1.*t135*t807;
  t5136 = t5130 + t5131;
  t5559 = t87*t5249;
  t5561 = t5136*t2154;
  t5562 = t5559 + t5561;
  t5525 = t87*t5237;
  t5526 = -1.*t5153*t2154;
  t5529 = t5525 + t5526;
  t5536 = t87*t5153;
  t5540 = t5237*t2154;
  t5541 = t5536 + t5540;
  t5520 = t5341*t2154;
  t5523 = t2846 + t5520;
  t5524 = t5523*t2819;
  t5542 = t2811*t5541;
  t5545 = t87*t5341;
  t5546 = -1.*t1338*t2154;
  t5549 = t5545 + t5546;
  t5568 = -1.*t5562*t2819;
  t5571 = -1.*t2774*t5541;
  t5580 = t87*t5136;
  t5590 = -1.*t5249*t2154;
  t5593 = t5580 + t5590;
  t5694 = -1.*t87*t2553;
  t5695 = -1.*t2516*t2154;
  t5701 = t5694 + t5695;
  t5708 = t2519 + t2574;
  t5731 = -1.*t87*t1181;
  t5737 = -1.*t1081*t2154;
  t5747 = t5731 + t5737;
  t5782 = t2933 + t2946;
  t5758 = t2871 + t2874;
  t5757 = t2858*t2819;
  t5759 = t2811*t5758;
  t5761 = -1.*t87*t1423;
  t5764 = t5761 + t5546;
  t5799 = -1.*t5782*t2819;
  t5800 = -1.*t2774*t5758;
  t5808 = -1.*t87*t1111;
  t5809 = -1.*t833*t2154;
  t5815 = t5808 + t5809;
  t5936 = -1.*t2497*t2146;
  t5939 = -1.*t84*t2583;
  t5942 = t5936 + t5939;
  t5956 = -1.*t1258*t2146;
  t5957 = -1.*t84*t2875;
  t5971 = t5956 + t5957;
  t6035 = t3520 + t3521;
  t5997 = t3436 + t3455;
  t6120 = -1.000000000016*t413*t536;
  t6127 = 4.e-6*t167*t632;
  t6128 = -1.*t167*t681;
  t6129 = t6120 + t6127 + t6128;
  t6132 = -4.e-6*t167*t536;
  t6135 = -1.6e-11*t413*t632;
  t6137 = 4.e-6*t413*t681;
  t6138 = t6132 + t6135 + t6137;
  t6158 = -0.03874900000062*t167;
  t6166 = 0.281210000008499*t413;
  t6180 = 4.e-6*t167*t906;
  t6181 = -1.000000000016*t413*t939;
  t6182 = -1.*t167*t981;
  t6190 = t6158 + t6166 + t6180 + t6181 + t6182;
  t6192 = 1.124840000016e-6*t167;
  t6193 = 1.5499600000248e-7*t413;
  t6194 = -1.6e-11*t413*t906;
  t6196 = -4.e-6*t167*t939;
  t6198 = 4.e-6*t413*t981;
  t6216 = -1.2484e-7 + t6192 + t6193 + t6194 + t6196 + t6198;
  t6247 = 4.e-6*t167*t285;
  t6249 = -1.*t167*t378;
  t6253 = t6247 + t6249;
  t6270 = -1.6e-11*t285*t413;
  t6271 = 4.e-6*t378*t413;
  t6273 = t6270 + t6271;
  t6191 = t135*t6190;
  t6218 = t112*t6216;
  t6220 = t6191 + t6218;
  t6223 = t112*t6190;
  t6224 = -1.*t135*t6216;
  t6227 = t6223 + t6224;
  t6237 = -0.281210000004*t167;
  t6239 = t167*t939;
  t6240 = -4.9936e-13 + t6237 + t1034 + t1042 + t6239 + t1048;
  t6232 = t167*t536;
  t6233 = t6232 + t767 + t775;
  t6243 = -1.*t1218*t6240;
  t6317 = t385*t6240;
  t6429 = 4.e-6*t167*t1673;
  t6430 = -1.000000000016*t413*t1706;
  t6431 = -1.*t167*t1745;
  t6435 = t6429 + t6430 + t6431;
  t6439 = -1.6e-11*t413*t1673;
  t6442 = -4.e-6*t167*t1706;
  t6443 = 4.e-6*t413*t1745;
  t6468 = t6439 + t6442 + t6443;
  t6151 = t135*t6129;
  t6153 = t112*t6138;
  t6154 = t6151 + t6153;
  t6131 = t112*t6129;
  t6142 = -1.*t135*t6138;
  t6143 = t6131 + t6142;
  t6290 = t6253*t135;
  t6292 = t112*t6273;
  t6297 = t6290 + t6292;
  t6262 = t112*t6253;
  t6282 = -1.*t135*t6273;
  t6286 = t6262 + t6282;
  t6316 = t1320*t1258;
  t6568 = t87*t6297;
  t6570 = t6286*t2154;
  t6574 = t6568 + t6570;
  t6235 = -1.*t6233*t1258;
  t6554 = t87*t6154;
  t6555 = t6143*t2154;
  t6566 = t6554 + t6555;
  t6602 = t87*t6227;
  t6603 = -1.*t6220*t2154;
  t6628 = t6602 + t6603;
  t6630 = t87*t6220;
  t6631 = t6227*t2154;
  t6634 = t6630 + t6631;
  t6524 = t135*t6435;
  t6526 = t112*t6468;
  t6527 = t6524 + t6526;
  t6490 = t112*t6435;
  t6497 = -1.*t135*t6468;
  t6499 = t6490 + t6497;
  t6478 = t167*t1706;
  t6485 = t1809 + t6478 + t1866;
  t6511 = t87*t6499;
  t6532 = -1.*t6527*t2154;
  t6534 = t6511 + t6532;
  t6725 = t87*t6527;
  t6730 = t6499*t2154;
  t6731 = t6725 + t6730;
  t6741 = t84*t6485;
  t6744 = -1.*t2146*t6534;
  t6745 = t6741 + t6744;
  t6656 = t87*t6143;
  t6662 = -1.*t6154*t2154;
  t6663 = t6656 + t6662;
  t6583 = t87*t6286;
  t6594 = -1.*t6297*t2154;
  t6595 = t6583 + t6594;
  t6580 = t6574*t2819;
  t6636 = t2811*t6634;
  t6783 = t1320*t2146;
  t6799 = t84*t6595;
  t6801 = t6783 + t6799;
  t6652 = -1.*t6566*t2819;
  t6679 = -1.*t2774*t6634;
  t6775 = t6233*t2146;
  t6776 = t84*t6663;
  t6777 = t6775 + t6776;
  t6814 = t6240*t2146;
  t6815 = t84*t6628;
  t6821 = t6814 + t6815;
  t6829 = t84*t6240;
  t6833 = -1.*t2146*t6628;
  t6838 = t6829 + t6833;
  t6903 = t1081*t2516;
  t6906 = t1181*t2553;
  t6909 = t1258*t2497;
  t6912 = t6903 + t6906 + t6909;
  t6914 = t385*t6912;
  t6916 = -1.*t1338*t1081;
  t6918 = -1.*t1423*t1181;
  t6926 = -1.*t385*t1258;
  t6929 = t6916 + t6918 + t6926;
  t6931 = t6929*t2497;
  t6936 = t6914 + t6931;
  t6942 = t1000*t1775;
  t6943 = t1516*t2497;
  t6944 = t1051*t1899;
  t6949 = t6942 + t6943 + t6944;
  t6954 = t385*t6949;
  t6956 = -0.15121*t698;
  t6957 = -0.15121*t807;
  t6958 = -1.*t1301*t1000;
  t6959 = -1.*t385*t1516;
  t6960 = -1.*t1320*t1051;
  t6961 = t6958 + t6959 + t6960;
  t6963 = t6961*t2497;
  t6972 = t6954 + t6956 + t6957 + t6963;
  t6977 = t1673*t906;
  t6979 = t939*t1706;
  t6981 = t981*t1745;
  t6983 = t6977 + t6979 + t6981;
  t6987 = -1.*t285*t906;
  t6989 = -1.*t378*t981;
  t6990 = t6987 + t6989;
  t6986 = -1.*t378*t6983;
  t6991 = -1.*t6990*t1745;
  t6993 = t6986 + t6991;
  t6994 = 4.e-6*t6993;
  t6999 = -1.*t285*t6983;
  t7000 = -0.038749*t536;
  t7002 = -1.*t6990*t1673;
  t7003 = 1.e-6*t632;
  t7006 = -0.28121*t681;
  t7010 = t6994 + t6999 + t7000 + t7002 + t7003 + t7006;
  t2140 = t1219 + t1234 + t1237 + t1240;
  t142 = t132 + t139;
  t2152 = t1120 + t139;
  t2170 = t843 + t853 + t855 + t864;
  t7017 = t87*t3037*t2146;
  t7021 = t3108*t2154;
  t7022 = t7017 + t7021;
  t7041 = t3108*t87;
  t7047 = -1.*t3037*t2146*t2154;
  t7054 = t7041 + t7047;
  t2206 = t1014 + t1034;
  t7080 = t3037*t2774;
  t7084 = t3108*t3550;
  t7088 = 0. + t7080 + t7084;
  t7095 = t3108*t2774;
  t7096 = -1.*t3037*t3550;
  t7103 = 0. + t7095 + t7096;
  t7107 = -1.*t2811*t2819;
  t7108 = -1.*t2858*t2875;
  t7109 = t6926 + t7107 + t7108;
  t7111 = t3077*t7109;
  t7114 = t2819*t3077;
  t7115 = t2875*t2583;
  t7117 = t6909 + t7114 + t7115;
  t7118 = t2811*t7117;
  t7119 = t7111 + t7118;
  t2257 = -0.0398890000006382*t512;
  t2260 = t920 + t2257;
  t7066 = -1.*t135*t7022;
  t7067 = t112*t7054;
  t7068 = t7066 + t7067;
  t7075 = t112*t7022;
  t7076 = t135*t7054;
  t7078 = t7075 + t7076;
  t2322 = -0.039889*t214;
  t2328 = -0.503150000008*t512;
  t2342 = t950 + t2322 + t961 + t2328;
  t2385 = 2.552896e-18*t214;
  t2400 = 2.012600000032e-6*t512;
  t2403 = t871 + t2385 + t901 + t2400;
  t7203 = -1.*t3349*t3376;
  t7204 = -1.*t3429*t3464;
  t7207 = t7107 + t7203 + t7204;
  t7210 = t2612*t7207;
  t7211 = t3376*t2612;
  t7215 = t3464*t3152;
  t7216 = t7114 + t7211 + t7215;
  t7217 = t3349*t7216;
  t7218 = t7210 + t7217;
  t7130 = -1.*t84*t413*t3037;
  t7131 = -4.e-6*t413*t7068;
  t7132 = t731*t7078;
  t7141 = t7130 + t7131 + t7132;
  t7147 = -1.*t167*t84*t3037;
  t7149 = 4.e-6*t194*t7068;
  t7151 = -1.*t413*t7078;
  t7155 = t7147 + t7149 + t7151;
  t7162 = -4.e-6*t194*t84*t3037;
  t7163 = t595*t7068;
  t7164 = 4.e-6*t413*t7078;
  t7169 = t7162 + t7163 + t7164;
  t7295 = t4137*t2497;
  t7315 = -1.*t385*t4137;
  t7400 = t906*t4345;
  t7401 = t1673*t3786;
  t7402 = t3976*t939;
  t7404 = t3752*t1706;
  t7406 = t4350*t981;
  t7407 = t3825*t1745;
  t7410 = t7400 + t7401 + t7402 + t7404 + t7406 + t7407;
  t7422 = -1.*t285*t3786;
  t7424 = -1.*t378*t3825;
  t7430 = t7422 + t7424;
  t5078 = t84*t4173;
  t5080 = -1.*t2146*t4956;
  t5082 = t5078 + t5080;
  t7292 = t4708*t1258;
  t7475 = -1.*t2811*t4895;
  t4710 = t4708*t2146;
  t4786 = t84*t4775;
  t4790 = t4710 + t4786;
  t7487 = t4797*t2819;
  t7492 = t4895*t3077;
  t7617 = -1.*t5523*t2819;
  t7621 = -1.*t2811*t5541;
  t7642 = t5541*t3077;
  t7644 = t2819*t5472;
  t7699 = -1.*t2858*t2819;
  t7701 = -1.*t2811*t5758;
  t7721 = t5758*t3077;
  t7723 = t2819*t5708;
  t6071 = -1.*t1218*t2146;
  t6074 = -1.*t84*t2950;
  t6082 = t6071 + t6074;
  t6001 = -1.*t385*t2146;
  t6012 = -1.*t84*t2858;
  t6018 = t6001 + t6012;
  t5947 = t3111 + t3136;
  t7872 = t6240*t2497;
  t7911 = -1.*t385*t6240;
  t6859 = t84*t6233;
  t6860 = -1.*t2146*t6663;
  t6861 = t6859 + t6860;
  t7907 = -1.*t1320*t1258;
  t7881 = t1258*t6485;
  t6486 = t6485*t2146;
  t6543 = t84*t6534;
  t6545 = t6486 + t6543;
  t7987 = -1.*t6574*t2819;
  t7994 = -1.*t2811*t6634;
  t6807 = t84*t1320;
  t6808 = -1.*t2146*t6595;
  t6809 = t6807 + t6808;
  t8028 = t6634*t3077;
  t8032 = t2819*t6731;
  t8080 = -1.*t1081*t2516;
  t8081 = -1.*t1181*t2553;
  t8088 = -1.*t1258*t2497;
  t8091 = t8080 + t8081 + t8088;
  t8093 = t8091*t1218;
  t8094 = t833*t1081;
  t8097 = t1111*t1181;
  t8100 = t1218*t1258;
  t8103 = t8094 + t8097 + t8100;
  t8108 = t8103*t2497;
  t8111 = t8093 + t8108;
  t8116 = -0.15121*t1301;
  t8117 = -0.15121*t1320;
  t8119 = -1.*t1000*t1775;
  t8120 = -1.*t1516*t2497;
  t8121 = -1.*t1051*t1899;
  t8128 = t8119 + t8120 + t8121;
  t8130 = t8128*t1218;
  t8131 = t698*t1000;
  t8132 = t1218*t1516;
  t8134 = t807*t1051;
  t8135 = t8131 + t8132 + t8134;
  t8136 = t8135*t2497;
  t8137 = t8116 + t8117 + t8130 + t8136;
  t8163 = t906*t632;
  t8164 = t536*t939;
  t8165 = t681*t981;
  t8166 = t8163 + t8164 + t8165;
  t8153 = -1.*t1673*t906;
  t8158 = -1.*t939*t1706;
  t8159 = -1.*t981*t1745;
  t8160 = t8153 + t8158 + t8159;
  t8143 = 1.e-6*t285;
  t8151 = -0.28121*t378;
  t8161 = -1.*t8160*t681;
  t8169 = -1.*t8166*t1745;
  t8170 = t8161 + t8169;
  t8172 = 4.e-6*t8170;
  t8176 = -1.*t8166*t1673;
  t8177 = -1.*t8160*t632;
  t8180 = t8143 + t8151 + t8172 + t8176 + t8177;
  t8188 = -1.*t3108*t87*t2146;
  t8189 = t3037*t2154;
  t8194 = t8188 + t8189;
  t8201 = t87*t3037;
  t8202 = t3108*t2146*t2154;
  t8204 = t8201 + t8202;
  t8225 = t3037*t2811;
  t8228 = t3108*t3429;
  t8229 = t8225 + t8228;
  t8233 = t3108*t2811;
  t8234 = -1.*t3037*t3429;
  t8235 = t8233 + t8234;
  t8239 = t2774*t2819;
  t8241 = t2950*t2875;
  t8252 = t8100 + t8239 + t8241;
  t8254 = t3077*t8252;
  t8255 = -1.*t2819*t3077;
  t8259 = -1.*t2875*t2583;
  t8260 = t8088 + t8255 + t8259;
  t8261 = t2774*t8260;
  t8262 = t8254 + t8261;
  t8212 = -1.*t135*t8194;
  t8214 = t112*t8204;
  t8217 = t8212 + t8214;
  t8220 = t112*t8194;
  t8221 = t135*t8204;
  t8222 = t8220 + t8221;
  t8318 = t3307*t3376;
  t8329 = t3550*t3464;
  t8331 = t8239 + t8318 + t8329;
  t8332 = t2612*t8331;
  t8333 = -1.*t3376*t2612;
  t8337 = -1.*t3464*t3152;
  t8349 = t8255 + t8333 + t8337;
  t8353 = t3307*t8349;
  t8354 = t8332 + t8353;
  t8268 = t3108*t84*t413;
  t8272 = -4.e-6*t413*t8217;
  t8275 = t731*t8222;
  t8277 = t8268 + t8272 + t8275;
  t8283 = t167*t3108*t84;
  t8285 = 4.e-6*t194*t8217;
  t8287 = -1.*t413*t8222;
  t8291 = t8283 + t8285 + t8287;
  t8293 = 4.e-6*t194*t3108*t84;
  t8295 = t595*t8217;
  t8296 = 4.e-6*t413*t8222;
  t8299 = t8293 + t8295 + t8296;
  t8446 = t5562*t2819;
  t8448 = t2774*t5541;
  t8464 = -1.*t5541*t3077;
  t8466 = -1.*t2819*t5472;
  t8530 = t5782*t2819;
  t8532 = t2774*t5758;
  t8545 = -1.*t5758*t3077;
  t8546 = -1.*t2819*t5708;
  t8616 = -1.*t4137*t2497;
  t8628 = t4137*t1218;
  t8683 = t536*t3752;
  t8684 = t632*t3786;
  t8685 = t906*t4009;
  t8686 = t3985*t939;
  t8687 = t3825*t681;
  t8688 = t3976*t981;
  t8689 = t8683 + t8684 + t8685 + t8686 + t8687 + t8688;
  t8672 = -1.*t906*t4345;
  t8673 = -1.*t1673*t3786;
  t8674 = -1.*t3976*t939;
  t8675 = -1.*t3752*t1706;
  t8676 = -1.*t4350*t981;
  t8679 = -1.*t3825*t1745;
  t8681 = t8672 + t8673 + t8674 + t8675 + t8676 + t8679;
  t8629 = t4173*t1258;
  t8614 = -1.*t4708*t1258;
  t8705 = t4895*t2774;
  t8708 = t4931*t2819;
  t8715 = -1.*t4797*t2819;
  t8723 = -1.*t4895*t3077;
  t8831 = -1.*t6240*t2497;
  t8848 = t1218*t6240;
  t8846 = t6233*t1258;
  t8833 = -1.*t1258*t6485;
  t8900 = t6566*t2819;
  t8905 = t2774*t6634;
  t8910 = -1.*t6634*t3077;
  t8914 = -1.*t2819*t6731;
  p_output1[0]=t2140*t2146 + t2170*t2193 + t2206*t2238 + t2260*t2312 + t2342*t2363 + t2403*t2451 - 0.041195*(t196*t2363 + 4.e-6*t214*t2451 - 1.*t2312*t512) + 0.803147*(t2312*t468 + t2363*t512 - 4.e-6*t2451*t512) - 1.*t2152*t2154*t84 + t142*t84*t87 - 0.14871*(4.e-6*t214*t2363 + 4.e-6*t2312*t512 + t2451*t877) + var1[0] + t2612*var2[0] + t3268*var2[1] + t3186*var2[2] + t3585*var2[3] + ((-1.*t3037*t3077 - 1.*t3108*t3152)*var2[1] + (t3242 + t3256)*var2[2])*var2[3] + t2996*var2[4] + (t5947*var2[0] - 1.*t3037*t5942*var2[1] + t3108*t5942*var2[2] + (t3429*t3571 + t3307*(t3376*t3429 + t3429*t5971 + t3349*t5997 + t3464*t6018) + t3471*t6035 + t3349*(-1.*t3550*t5971 - 1.*t3307*t5997 - 1.*t3376*t6035 - 1.*t3464*t6082))*var2[3])*var2[4] + t1461*var2[5] + (t5701*t84*var2[0] + (t2146*t3037*t5701 + t3108*t5708)*var2[1] + (-1.*t2146*t3108*t5701 + t3037*t5708)*var2[2] + (t3571*t5764*t84 + t3471*t5815*t84 + t3307*(-1.*t2146*t3429*t5747 + t5757 + t5759 - 1.*t2146*t3464*t5764 + t3349*t5747*t84 + t3376*t5764*t84) + t3349*(t2146*t3550*t5747 + t5799 + t5800 + t2146*t3464*t5815 - 1.*t3307*t5747*t84 - 1.*t3376*t5815*t84))*var2[3] + (t2858*t2970 + t2774*(t2858*t5747 + t5757 + t5759 + t2875*t5764) + t2906*t5782 + t2811*(-1.*t2950*t5747 + t5799 + t5800 - 1.*t2875*t5815))*var2[4])*var2[5] + t1908*var2[9] + (t5462*t84*var2[0] + (t2146*t3037*t5462 + t3108*t5472)*var2[1] + (-1.*t2146*t3108*t5462 + t3037*t5472)*var2[2] + (t3571*t5549*t84 + t3471*t5593*t84 + t3307*(t5524 - 1.*t2146*t3429*t5529 + t5542 - 1.*t2146*t3464*t5549 + t3349*t5529*t84 + t3376*t5549*t84) + t3349*(t2146*t3550*t5529 + t5568 + t5571 + t2146*t3464*t5593 - 1.*t3307*t5529*t84 - 1.*t3376*t5593*t84))*var2[3] + (t2970*t5523 + t2774*(t5524 + t2858*t5529 + t5542 + t2875*t5549) + t2906*t5562 + t2811*(-1.*t2950*t5529 + t5568 + t5571 - 1.*t2875*t5593))*var2[4] + (t1218*(t1181*t1338 + t1423*t5153 + t1338*t5237 + t1081*t5341) + t385*(-1.*t1081*t5136 - 1.*t1111*t5153 - 1.*t1181*t5249 - 1.*t5237*t833))*var2[5])*var2[9] + t2108*var2[10] + (t6545*var2[0] + (t3108*t6731 - 1.*t3037*t6745)*var2[1] + (t3037*t6731 + t3108*t6745)*var2[2] + (t3471*t6777 + t3571*t6801 + t3307*(t6580 + t6636 + t3376*t6801 + t3464*t6809 + t3349*t6821 + t3429*t6838) + t3349*(t6652 + t6679 - 1.*t3376*t6777 - 1.*t3307*t6821 - 1.*t3550*t6838 - 1.*t3464*t6861))*var2[3] + (t2906*t6566 + t2970*t6574 + t2774*(t6316 + t6317 + t6580 + t2875*t6595 + t2858*t6628 + t6636) + t2811*(t6235 + t6243 - 1.*t2950*t6628 + t6652 - 1.*t2875*t6663 + t6679))*var2[4] + (t1277*t1320 + t1444*t6233 + t1218*(t1423*t6220 + t1338*t6227 + t1081*t6286 + t1181*t6297 + t6316 + t6317) + t385*(-1.*t1081*t6143 - 1.*t1181*t6154 - 1.*t1111*t6220 + t6235 + t6243 - 1.*t6227*t833))*var2[5] + (t1320*t1549 + t1620*t6233 + t1218*(t1320*t1516 + t1320*t6190 + t1301*t6216 + t1051*t6253 + t1000*t6273 + t6317) - 0.15121*t6435 - 0.15121*t6468 + t385*(-1.*t1051*t6129 - 1.*t1000*t6138 - 1.*t1516*t6233 + t6243 - 1.*t6216*t698 - 1.*t6190*t807))*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t4790*var2[0] + (t3108*t4797 - 1.*t3037*t4836)*var2[1] + (t3037*t4797 + t3108*t4836)*var2[2] + (t3307*(t4898 + t3349*t4997 + t3429*t5016) + t3471*t5064 + t3349*(t4940 + t4942 - 1.*t3307*t4997 - 1.*t3550*t5016 - 1.*t3376*t5064 - 1.*t3464*t5082))*var2[3] + (t2774*(t4247 + t4898 + t2858*t4914) + t2906*t4931 + t2811*(t4141 + t4205 - 1.*t2950*t4914 + t4940 + t4942 - 1.*t2875*t4956))*var2[4] + (t1444*t4173 + t1218*(t1338*t3936 + t1423*t3953 + t4247) + t385*(-1.*t1111*t3953 - 1.*t1081*t4105 - 1.*t1181*t4118 + t4141 + t4205 - 1.*t3936*t833))*var2[5] + (t1620*t4173 + t1218*(t1301*t3844 + t1320*t3922 + t4247) - 0.15121*t4357 - 0.15121*t4473 + t385*(-1.*t1000*t4016 - 1.*t1051*t4088 + t4141 - 1.*t1516*t4173 - 1.*t3844*t698 - 1.*t3922*t807))*var2[9] + (-0.038749*t3976 - 1.*t1988*t4009 + 1.e-6*t4345 - 0.28121*t4350 - 1.*t285*t4631 - 1.*t4654*t632 + 4.e-6*(-1.*t1988*t3976 - 1.*t378*t4631 - 1.*t4654*t681))*var2[10])*var2[11] + t2612*var3[0] + t3268*var3[1] + t3186*var3[2] + t3585*var3[3] + t2996*var3[4] + t1461*var3[5] + t1908*var3[9] + t2108*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=t142*t7022 + t2152*t7054 + t2170*t7068 + t2206*t7078 + t2260*t7141 + t2342*t7155 + t2403*t7169 - 0.041195*(-1.*t512*t7141 + t196*t7155 + 4.e-6*t214*t7169) + 0.803147*(t468*t7141 + t512*t7155 - 4.e-6*t512*t7169) - 1.*t2140*t3037*t84 - 0.14871*(4.e-6*t512*t7141 + 4.e-6*t214*t7155 + t7169*t877) + var1[1] + t3307*var2[0] + t7103*var2[1] + t7088*var2[2] + t7218*var2[3] + ((-1.*t2774*t3037 - 1.*t3108*t3550)*var2[1] + (t7095 + t7096)*var2[2])*var2[3] + t7119*var2[4] + (t6035*var2[0] - 1.*t3037*t6082*var2[1] + t3108*t6082*var2[2] + (t3349*(t3464*t5942 + t3376*t5947 + t3152*t5971 + t2612*t5997) + t2612*(-1.*t3376*t3429 - 1.*t3429*t5971 - 1.*t3349*t5997 - 1.*t3464*t6018) + t5947*t7207 + t3429*t7216)*var2[3])*var2[4] + t6936*var2[5] + (t5815*t84*var2[0] + (t3108*t5782 + t2146*t3037*t5815)*var2[1] + (t3037*t5782 - 1.*t2146*t3108*t5815)*var2[2] + (t5701*t7207*t84 + t5764*t7216*t84 + t3349*(-1.*t2146*t3464*t5701 - 1.*t2146*t3152*t5747 + t7721 + t7723 + t3376*t5701*t84 + t2612*t5747*t84) + t2612*(t2146*t3429*t5747 + t2146*t3464*t5764 + t7699 + t7701 - 1.*t3349*t5747*t84 - 1.*t3376*t5764*t84))*var2[3] + (t5708*t7109 + t2858*t7117 + t3077*(-1.*t2858*t5747 - 1.*t2875*t5764 + t7699 + t7701) + t2811*(t2875*t5701 + t2583*t5747 + t7721 + t7723))*var2[4])*var2[5] + t6972*var2[9] + (t5593*t84*var2[0] + (t3108*t5562 + t2146*t3037*t5593)*var2[1] + (t3037*t5562 - 1.*t2146*t3108*t5593)*var2[2] + (t5462*t7207*t84 + t5549*t7216*t84 + t3349*(-1.*t2146*t3464*t5462 - 1.*t2146*t3152*t5529 + t7642 + t7644 + t3376*t5462*t84 + t2612*t5529*t84) + t2612*(t2146*t3429*t5529 + t2146*t3464*t5549 + t7617 + t7621 - 1.*t3349*t5529*t84 - 1.*t3376*t5549*t84))*var2[3] + (t5472*t7109 + t5523*t7117 + t3077*(-1.*t2858*t5529 - 1.*t2875*t5549 + t7617 + t7621) + t2811*(t2875*t5462 + t2583*t5529 + t7642 + t7644))*var2[4] + (t2497*(-1.*t1181*t1338 - 1.*t1423*t5153 - 1.*t1338*t5237 - 1.*t1081*t5341) + t385*(t2553*t5153 + t2516*t5237 + t1081*t5445 + t1181*t5453))*var2[5])*var2[9] + t7010*var2[10] + (t6777*var2[0] + (t3108*t6566 - 1.*t3037*t6861)*var2[1] + (t3037*t6566 + t3108*t6861)*var2[2] + (t6545*t7207 + t6801*t7216 + t2612*(-1.*t3376*t6801 - 1.*t3464*t6809 - 1.*t3349*t6821 - 1.*t3429*t6838 + t7987 + t7994) + t3349*(t3376*t6545 + t3464*t6745 + t2612*t6821 + t3152*t6838 + t8028 + t8032))*var2[3] + (t6731*t7109 + t6574*t7117 + t3077*(-1.*t2875*t6595 - 1.*t2858*t6628 + t7907 + t7911 + t7987 + t7994) + t2811*(t2875*t6534 + t2583*t6628 + t7872 + t7881 + t8028 + t8032))*var2[4] + (t1320*t6912 + t6485*t6929 + t385*(t2553*t6220 + t2516*t6227 + t1081*t6499 + t1181*t6527 + t7872 + t7881) + t2497*(-1.*t1423*t6220 - 1.*t1338*t6227 - 1.*t1081*t6286 - 1.*t1181*t6297 + t7907 + t7911))*var2[5] + (-0.15121*t6129 - 0.15121*t6138 + t1320*t6949 + t6485*t6961 + t385*(t1899*t6190 + t1775*t6216 + t1051*t6435 + t1000*t6468 + t1516*t6485 + t7872) + t2497*(-1.*t1320*t1516 - 1.*t1320*t6190 - 1.*t1301*t6216 - 1.*t1051*t6253 - 1.*t1000*t6273 + t7911))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5064*var2[0] + (t3108*t4931 - 1.*t3037*t5082)*var2[1] + (t3037*t4931 + t3108*t5082)*var2[2] + (t4790*t7207 + t2612*(-1.*t3349*t4997 - 1.*t3429*t5016 + t7475) + t3349*(t3376*t4790 + t3464*t4836 + t2612*t4997 + t3152*t5016 + t7487 + t7492))*var2[3] + (t4797*t7109 + t3077*(-1.*t2858*t4914 + t7315 + t7475) + t2811*(t2875*t4775 + t2583*t4914 + t7292 + t7295 + t7487 + t7492))*var2[4] + (t4708*t6929 + t385*(t2516*t3936 + t2553*t3953 + t1081*t4731 + t1181*t4765 + t7292 + t7295) + t2497*(-1.*t1338*t3936 - 1.*t1423*t3953 + t7315))*var2[5] + (-0.15121*t4016 - 0.15121*t4088 + t4708*t6961 + t385*(t1775*t3844 + t1899*t3922 + t1000*t4357 + t1051*t4473 + t1516*t4708 + t7295) + t2497*(-1.*t1301*t3844 - 1.*t1320*t3922 + t7315))*var2[9] + (-0.28121*t3976 - 0.038749*t3985 + 1.e-6*t4009 - 1.*t4345*t6990 - 1.*t285*t7410 - 1.*t1673*t7430 + 4.e-6*(-1.*t4350*t6990 - 1.*t378*t7410 - 1.*t1745*t7430))*var2[10])*var2[11] + t3307*var3[0] + t7103*var3[1] + t7088*var3[2] + t7218*var3[3] + t7119*var3[4] + t6936*var3[5] + t6972*var3[9] + t7010*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t142*t8194 + t2152*t8204 + t2170*t8217 + t2206*t8222 + t2260*t8277 + t2342*t8291 + t2403*t8299 - 0.041195*(-1.*t512*t8277 + t196*t8291 + 4.e-6*t214*t8299) + 0.803147*(t468*t8277 + t512*t8291 - 4.e-6*t512*t8299) + t2140*t3108*t84 - 0.14871*(4.e-6*t512*t8277 + 4.e-6*t214*t8291 + t8299*t877) + var1[2] + t3349*var2[0] + t8235*var2[1] + t8229*var2[2] + t8354*var2[3] + ((-1.*t2811*t3037 - 1.*t3108*t3429)*var2[1] + t8235*var2[2])*var2[3] + t8262*var2[4] + (t3429*var2[0] - 1.*t3037*t6018*var2[1] + t3108*t6018*var2[2] + (t3307*(-1.*t3464*t5942 - 1.*t3376*t5947 - 1.*t3152*t5971 - 1.*t2612*t5997) + t2612*(t3550*t5971 + t3307*t5997 + t3376*t6035 + t3464*t6082) + t5947*t8331 + t6035*t8349)*var2[3])*var2[4] + t8111*var2[5] + (t5764*t84*var2[0] + (t2858*t3108 + t2146*t3037*t5764)*var2[1] + (t2858*t3037 - 1.*t2146*t3108*t5764)*var2[2] + (t5701*t8331*t84 + t5815*t8349*t84 + t2612*(-1.*t2146*t3550*t5747 - 1.*t2146*t3464*t5815 + t3307*t5747*t84 + t3376*t5815*t84 + t8530 + t8532) + t3307*(t2146*t3464*t5701 + t2146*t3152*t5747 - 1.*t3376*t5701*t84 - 1.*t2612*t5747*t84 + t8545 + t8546))*var2[3] + (t5708*t8252 + t5782*t8260 + t3077*(t2950*t5747 + t2875*t5815 + t8530 + t8532) + t2774*(-1.*t2875*t5701 - 1.*t2583*t5747 + t8545 + t8546))*var2[4])*var2[5] + t8137*var2[9] + (t5549*t84*var2[0] + (t3108*t5523 + t2146*t3037*t5549)*var2[1] + (t3037*t5523 - 1.*t2146*t3108*t5549)*var2[2] + (t5462*t8331*t84 + t5593*t8349*t84 + t2612*(-1.*t2146*t3550*t5529 - 1.*t2146*t3464*t5593 + t3307*t5529*t84 + t3376*t5593*t84 + t8446 + t8448) + t3307*(t2146*t3464*t5462 + t2146*t3152*t5529 - 1.*t3376*t5462*t84 - 1.*t2612*t5529*t84 + t8464 + t8466))*var2[3] + (t5472*t8252 + t5562*t8260 + t3077*(t2950*t5529 + t2875*t5593 + t8446 + t8448) + t2774*(-1.*t2875*t5462 - 1.*t2583*t5529 + t8464 + t8466))*var2[4] + (t1218*(-1.*t2553*t5153 - 1.*t2516*t5237 - 1.*t1081*t5445 - 1.*t1181*t5453) + t2497*(t1081*t5136 + t1111*t5153 + t1181*t5249 + t5237*t833))*var2[5])*var2[9] + t8180*var2[10] + (t6801*var2[0] + (t3108*t6574 - 1.*t3037*t6809)*var2[1] + (t3037*t6574 + t3108*t6809)*var2[2] + (t6545*t8331 + t6777*t8349 + t2612*(t3376*t6777 + t3307*t6821 + t3550*t6838 + t3464*t6861 + t8900 + t8905) + t3307*(-1.*t3376*t6545 - 1.*t3464*t6745 - 1.*t2612*t6821 - 1.*t3152*t6838 + t8910 + t8914))*var2[3] + (t6731*t8252 + t6566*t8260 + t3077*(t2950*t6628 + t2875*t6663 + t8846 + t8848 + t8900 + t8905) + t2774*(-1.*t2875*t6534 - 1.*t2583*t6628 + t8831 + t8833 + t8910 + t8914))*var2[4] + (t6233*t8091 + t6485*t8103 + t1218*(-1.*t2553*t6220 - 1.*t2516*t6227 - 1.*t1081*t6499 - 1.*t1181*t6527 + t8831 + t8833) + t2497*(t1081*t6143 + t1181*t6154 + t1111*t6220 + t6227*t833 + t8846 + t8848))*var2[5] + (-0.15121*t6253 - 0.15121*t6273 + t6233*t8128 + t6485*t8135 + t1218*(-1.*t1899*t6190 - 1.*t1775*t6216 - 1.*t1051*t6435 - 1.*t1000*t6468 - 1.*t1516*t6485 + t8831) + t2497*(t1051*t6129 + t1000*t6138 + t1516*t6233 + t6216*t698 + t6190*t807 + t8848))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t4790*t8331 + t5064*t8349 + t2612*(t3307*t4997 + t3550*t5016 + t3376*t5064 + t3464*t5082 + t8705 + t8708) + t3307*(-1.*t3376*t4790 - 1.*t3464*t4836 - 1.*t2612*t4997 - 1.*t3152*t5016 + t8715 + t8723))*var2[3] + (t4797*t8252 + t4931*t8260 + t3077*(t2950*t4914 + t2875*t4956 + t8628 + t8629 + t8705 + t8708) + t2774*(-1.*t2875*t4775 - 1.*t2583*t4914 + t8614 + t8616 + t8715 + t8723))*var2[4] + (t4173*t8091 + t4708*t8103 + t1218*(-1.*t2516*t3936 - 1.*t2553*t3953 - 1.*t1081*t4731 - 1.*t1181*t4765 + t8614 + t8616) + t2497*(t1111*t3953 + t1081*t4105 + t1181*t4118 + t3936*t833 + t8628 + t8629))*var2[5] + (t4173*t8128 + t4708*t8135 + t1218*(-1.*t1775*t3844 - 1.*t1899*t3922 - 1.*t1000*t4357 - 1.*t1051*t4473 - 1.*t1516*t4708 + t8616) + t2497*(t1000*t4016 + t1051*t4088 + t1516*t4173 + t3844*t698 + t3922*t807 + t8628))*var2[9] + (-1.*t4009*t8160 - 1.*t4345*t8166 - 1.*t632*t8681 - 1.*t1673*t8689 + 4.e-6*(-1.*t3976*t8160 - 1.*t4350*t8166 - 1.*t681*t8681 - 1.*t1745*t8689))*var2[10])*var2[11] + t3349*var3[0] + t8235*var3[1] + t8229*var3[2] + t8354*var3[3] + t8262*var3[4] + t8111*var3[5] + t8137*var3[9] + t8180*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void ddh_FrFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
