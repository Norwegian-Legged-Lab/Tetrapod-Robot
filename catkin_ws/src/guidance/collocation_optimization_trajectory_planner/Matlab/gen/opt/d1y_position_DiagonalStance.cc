/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:45 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  double t74;
  double t115;
  double t119;
  double t142;
  double t152;
  double t168;
  double t181;
  double t198;
  double t199;
  double t202;
  double t209;
  double t241;
  double t250;
  double t267;
  double t279;
  double t291;
  double t319;
  double t332;
  double t336;
  double t376;
  double t378;
  double t427;
  double t545;
  double t462;
  double t505;
  double t588;
  double t569;
  double t578;
  double t590;
  double t616;
  double t628;
  double t632;
  double t459;
  double t583;
  double t597;
  double t599;
  double t651;
  double t652;
  double t657;
  double t664;
  double t700;
  double t710;
  double t711;
  double t715;
  double t729;
  double t744;
  double t746;
  double t749;
  double t640;
  double t641;
  double t642;
  double t649;
  double t844;
  double t982;
  double t1054;
  double t1060;
  double t1061;
  double t1063;
  double t1066;
  double t1073;
  double t979;
  double t987;
  double t998;
  double t1006;
  double t1112;
  double t1116;
  double t1120;
  double t1125;
  double t1132;
  double t1145;
  double t1234;
  double t1250;
  double t1267;
  double t1298;
  double t1311;
  double t1316;
  double t650;
  double t660;
  double t665;
  double t667;
  double t716;
  double t719;
  double t726;
  double t752;
  double t758;
  double t760;
  double t770;
  double t783;
  double t808;
  double t1392;
  double t1422;
  double t1439;
  double t1370;
  double t1374;
  double t1380;
  double t1450;
  double t1464;
  double t1476;
  double t856;
  double t882;
  double t1291;
  double t1317;
  double t1320;
  double t1326;
  double t1334;
  double t1336;
  double t1355;
  double t1357;
  double t1360;
  double t1368;
  double t1387;
  double t1449;
  double t1484;
  double t1488;
  double t1496;
  double t1503;
  double t1507;
  double t1518;
  double t1527;
  double t1540;
  double t1550;
  double t1551;
  double t1563;
  double t1571;
  double t1573;
  double t1580;
  double t1597;
  double t1603;
  double t1269;
  double t1272;
  double t1296;
  double t1728;
  double t1729;
  double t1736;
  double t1758;
  double t1760;
  double t1765;
  double t1789;
  double t1790;
  double t1807;
  double t1813;
  double t1869;
  double t1881;
  double t1885;
  double t1895;
  double t1837;
  double t1846;
  double t1851;
  double t1854;
  double t2026;
  double t1771;
  double t1773;
  double t1779;
  double t1783;
  double t2038;
  double t2040;
  double t2045;
  double t2050;
  double t2051;
  double t2052;
  double t2056;
  double t2057;
  double t2058;
  double t2062;
  double t2083;
  double t2084;
  double t2085;
  double t2086;
  double t2067;
  double t2069;
  double t2072;
  double t2076;
  double t2197;
  double t2196;
  double t2203;
  double t2207;
  double t2210;
  double t2212;
  double t2214;
  double t2218;
  double t2219;
  double t2225;
  double t2235;
  double t2236;
  double t2237;
  double t2248;
  double t2253;
  double t2256;
  double t2258;
  double t2282;
  double t2283;
  double t2284;
  double t2285;
  double t2266;
  double t2272;
  double t2277;
  double t2280;
  double t2384;
  double t2401;
  double t2411;
  double t2428;
  double t2429;
  double t2430;
  double t2444;
  double t2447;
  double t2450;
  double t2458;
  double t2469;
  double t2471;
  double t2488;
  double t2496;
  double t2499;
  double t2477;
  double t2479;
  double t2483;
  double t2504;
  double t2511;
  double t2512;
  double t1622;
  double t1653;
  double t1679;
  double t1691;
  double t2591;
  double t2597;
  double t2604;
  double t2610;
  double t2611;
  double t2616;
  double t2617;
  double t2632;
  double t2633;
  double t2645;
  double t2622;
  double t2623;
  double t2624;
  double t2651;
  double t2652;
  double t2653;
  double t470;
  double t508;
  double t521;
  double t604;
  double t611;
  double t613;
  double t634;
  double t636;
  double t637;
  double t2732;
  double t2740;
  double t2744;
  double t2761;
  double t2762;
  double t2764;
  double t2765;
  double t2773;
  double t2774;
  double t2776;
  double t2779;
  double t2747;
  double t2751;
  double t2756;
  double t2757;
  double t1019;
  double t1024;
  double t1034;
  double t1084;
  double t1093;
  double t1096;
  double t1149;
  double t1150;
  double t1151;
  double t2861;
  double t2863;
  double t2864;
  double t2866;
  double t2844;
  double t2850;
  double t2853;
  double t2857;
  double t2869;
  double t2871;
  double t2982;
  double t2985;
  double t2990;
  double t2993;
  double t2994;
  double t2995;
  double t3002;
  double t3003;
  double t3004;
  double t3009;
  double t3055;
  double t3060;
  double t3062;
  double t3082;
  double t3013;
  double t3017;
  double t3020;
  double t3036;
  double t3130;
  double t3136;
  double t3137;
  double t3141;
  double t3142;
  double t3144;
  double t3146;
  double t3148;
  double t3157;
  double t3158;
  double t3160;
  double t3152;
  double t3153;
  double t3154;
  double t3167;
  double t3168;
  double t3172;
  double t3241;
  double t3244;
  double t3245;
  double t3249;
  double t3252;
  double t3263;
  double t3268;
  double t3291;
  double t3294;
  double t3297;
  double t3276;
  double t3281;
  double t3282;
  double t3299;
  double t3302;
  double t3303;
  double t3385;
  double t3387;
  double t3391;
  double t3412;
  double t3425;
  double t3426;
  double t3432;
  double t3438;
  double t3447;
  double t3449;
  double t3393;
  double t3401;
  double t3404;
  double t3405;
  double t3535;
  double t3536;
  double t3539;
  double t3540;
  double t3511;
  double t3515;
  double t3519;
  double t3521;
  double t3547;
  double t3553;
  double t2890;
  double t2891;
  double t3791;
  double t3794;
  double t3822;
  double t3825;
  double t3827;
  double t3832;
  double t3857;
  double t3849;
  double t3800;
  double t3850;
  double t3859;
  double t3861;
  double t3830;
  double t3867;
  double t3868;
  double t3871;
  double t3918;
  double t3813;
  double t3956;
  double t3840;
  double t3838;
  double t3839;
  double t3843;
  double t3845;
  double t3862;
  double t3863;
  double t3864;
  double t3873;
  double t3885;
  double t3944;
  double t3951;
  double t3953;
  double t3958;
  double t3966;
  double t3971;
  double t3974;
  double t3977;
  double t3983;
  double t3985;
  double t3812;
  double t4028;
  double t4029;
  double t4034;
  double t4035;
  double t4036;
  double t4041;
  double t4047;
  double t4049;
  double t4050;
  double t4052;
  double t3935;
  double t4058;
  double t3913;
  double t4002;
  double t4068;
  double t3991;
  double t4103;
  double t4143;
  double t4201;
  double t4156;
  double t4168;
  double t4210;
  double t4215;
  double t4140;
  double t4207;
  double t4250;
  double t4299;
  double t4186;
  double t4228;
  double t4229;
  double t4231;
  double t4232;
  double t4235;
  double t4236;
  double t4274;
  double t4286;
  double t4289;
  double t4302;
  double t4303;
  double t4313;
  double t4342;
  double t4346;
  double t4352;
  double t4355;
  double t4358;
  double t4363;
  double t4381;
  double t4253;
  double t4435;
  double t4370;
  double t4500;
  double t4501;
  double t4504;
  double t4554;
  double t4199;
  double t4203;
  double t4208;
  double t4209;
  double t4220;
  double t4224;
  double t4226;
  double t4615;
  double t4626;
  double t4627;
  double t4246;
  double t4248;
  double t4256;
  double t4258;
  double t4260;
  double t4269;
  double t4272;
  double t4319;
  double t4321;
  double t4326;
  double t4332;
  double t4336;
  double t4339;
  double t4341;
  double t4371;
  double t4641;
  double t4655;
  double t4660;
  double t4391;
  double t4663;
  double t4667;
  double t4669;
  double t4415;
  double t4416;
  double t4675;
  double t4676;
  double t4678;
  double t4436;
  double t4443;
  double t4448;
  double t4454;
  double t4467;
  double t4469;
  double t4482;
  double t4487;
  double t4520;
  double t4550;
  double t4553;
  double t4558;
  double t4564;
  double t4567;
  double t4574;
  double t4579;
  double t4584;
  double t4585;
  double t4586;
  double t4591;
  double t4595;
  double t4601;
  double t4604;
  double t4605;
  double t4606;
  double t4608;
  double t4613;
  double t4628;
  double t4662;
  double t4672;
  double t4679;
  double t4688;
  double t4692;
  double t4693;
  double t4694;
  double t4697;
  double t4698;
  double t4703;
  double t4706;
  double t4707;
  double t4708;
  double t4718;
  double t4723;
  double t4725;
  double t4727;
  double t4730;
  double t4522;
  double t4511;
  double t4515;
  double t4802;
  double t4806;
  double t4807;
  double t4810;
  double t4811;
  double t4814;
  double t4816;
  double t4818;
  double t4821;
  double t4826;
  double t4831;
  double t4842;
  double t4844;
  double t4845;
  double t4857;
  double t4858;
  double t4859;
  double t4865;
  double t4763;
  double t4766;
  double t4773;
  double t4776;
  double t4780;
  double t4785;
  double t4788;
  double t4982;
  double t4984;
  double t4988;
  double t5006;
  double t5012;
  double t5015;
  double t5025;
  double t5029;
  double t5031;
  double t5034;
  double t5037;
  double t5043;
  double t5048;
  double t5050;
  double t5054;
  double t5056;
  double t5060;
  double t5063;
  double t5140;
  double t5141;
  double t5143;
  double t5152;
  double t5154;
  double t5155;
  double t5163;
  double t5167;
  double t5169;
  double t5170;
  double t5174;
  double t5183;
  double t5188;
  double t5189;
  double t5191;
  double t5192;
  double t5194;
  double t5195;
  double t5267;
  double t5268;
  double t5270;
  double t5277;
  double t5279;
  double t5282;
  double t5294;
  double t5295;
  double t5297;
  double t5300;
  double t5304;
  double t5308;
  double t5315;
  double t5319;
  double t5320;
  double t4737;
  double t4739;
  double t4750;
  double t4752;
  double t5389;
  double t5390;
  double t5393;
  double t5395;
  double t5398;
  double t5399;
  double t5400;
  double t5404;
  double t5412;
  double t5415;
  double t5424;
  double t5425;
  double t5426;
  double t3803;
  double t3807;
  double t3814;
  double t3818;
  double t3819;
  double t3820;
  double t3922;
  double t3933;
  double t3936;
  double t3937;
  double t3938;
  double t3942;
  double t5480;
  double t5483;
  double t5489;
  double t3994;
  double t3999;
  double t4004;
  double t4005;
  double t4006;
  double t4016;
  double t5476;
  double t5479;
  double t5490;
  double t5492;
  double t4065;
  double t5494;
  double t5499;
  double t5501;
  double t5503;
  double t4077;
  double t5505;
  double t5507;
  double t5509;
  double t5513;
  double t4095;
  double t4107;
  double t4114;
  double t4119;
  double t4141;
  double t4142;
  double t4146;
  double t4147;
  double t4153;
  double t4154;
  double t4164;
  double t4165;
  double t4169;
  double t4172;
  double t4173;
  double t4179;
  double t4183;
  double t4185;
  double t4187;
  double t4188;
  double t4190;
  double t4192;
  double t5572;
  double t5581;
  double t5592;
  double t5595;
  double t5598;
  double t5600;
  double t5604;
  double t5606;
  double t5611;
  double t5615;
  double t5616;
  double t5618;
  double t5721;
  double t5723;
  double t5732;
  double t5740;
  double t5741;
  double t5744;
  double t5749;
  double t5752;
  double t5753;
  double t5755;
  double t5760;
  double t5765;
  double t5766;
  double t5768;
  double t5774;
  double t5777;
  double t5778;
  double t5782;
  double t5840;
  double t5841;
  double t5844;
  double t5852;
  double t5857;
  double t5868;
  double t5874;
  double t5875;
  double t5878;
  double t5883;
  double t5884;
  double t5888;
  double t5891;
  double t5902;
  double t5963;
  double t5971;
  double t5974;
  double t5978;
  double t5980;
  double t5984;
  double t5990;
  double t5994;
  double t5997;
  double t6001;
  double t6006;
  double t6010;
  double t6013;
  double t6080;
  double t6081;
  double t6086;
  double t6076;
  double t6079;
  double t6092;
  double t6096;
  double t6098;
  double t6100;
  double t6106;
  double t6112;
  double t6119;
  double t6122;
  double t6124;
  double t6127;
  double t6188;
  double t6189;
  double t6201;
  double t6205;
  double t6214;
  double t6219;
  double t6221;
  double t6222;
  double t6225;
  double t6228;
  double t6229;
  double t6231;
  double t6535;
  double t6536;
  double t6539;
  double t6540;
  double t6544;
  double t6545;
  double t6583;
  double t6585;
  double t6586;
  double t6588;
  double t6589;
  double t6594;
  double t6596;
  double t6597;
  double t6599;
  double t6601;
  double t6678;
  double t6606;
  double t6607;
  double t6610;
  double t6611;
  double t6587;
  double t6592;
  double t6598;
  double t6603;
  double t6699;
  double t6704;
  double t6767;
  double t6743;
  double t6754;
  t74 = -1.*var5[0];
  t115 = t74 + var5[1];
  t119 = Power(t115,-5);
  t142 = -1. + var6[0];
  t152 = -1. + var7[0];
  t168 = 1/t152;
  t181 = -1.*var1[0];
  t198 = t181 + var1[1];
  t199 = t142*t168*t198;
  t202 = t74 + var1[0] + t199;
  t209 = Power(t202,4);
  t241 = Power(t115,-4);
  t250 = Power(t202,3);
  t267 = 1/t115;
  t279 = -1.*t267*t202;
  t291 = 1. + t279;
  t319 = Power(t115,-3);
  t332 = Power(t202,2);
  t336 = Power(t291,2);
  t376 = Power(t115,-2);
  t378 = Power(t291,3);
  t427 = Power(t291,4);
  t545 = Cos(var2[4]);
  t462 = Cos(var2[7]);
  t505 = Sin(var2[7]);
  t588 = Cos(var2[5]);
  t569 = Cos(var2[6]);
  t578 = Sin(var2[5]);
  t590 = Sin(var2[6]);
  t616 = t545*t588*t569;
  t628 = -1.*t545*t578*t590;
  t632 = t616 + t628;
  t459 = Sin(var2[4]);
  t583 = -1.*t545*t569*t578;
  t597 = -1.*t545*t588*t590;
  t599 = t583 + t597;
  t651 = Cos(var2[8]);
  t652 = -1.*t651;
  t657 = 1. + t652;
  t664 = Sin(var2[8]);
  t700 = -1.*t462*t459;
  t710 = -4.e-6*t462*t599;
  t711 = -1.000000000016*t632*t505;
  t715 = t700 + t710 + t711;
  t729 = t462*t632;
  t744 = -1.*t459*t505;
  t746 = -4.e-6*t599*t505;
  t749 = t729 + t744 + t746;
  t640 = 4.e-6*t462*t632;
  t641 = -4.e-6*t459*t505;
  t642 = -1.6e-11*t599*t505;
  t649 = t640 + t641 + t642;
  t844 = -1. + t651;
  t982 = -1. + t462;
  t1054 = 4.e-6*t982*t459;
  t1060 = 1.6e-11*t982;
  t1061 = 1. + t1060;
  t1063 = t1061*t599;
  t1066 = 4.e-6*t632*t505;
  t1073 = t1054 + t1063 + t1066;
  t979 = t462*t459;
  t987 = 4.e-6*t982*t599;
  t998 = t632*t505;
  t1006 = t979 + t987 + t998;
  t1112 = -1.*t462;
  t1116 = 1. + t1112;
  t1120 = -1.000000000016*t1116;
  t1125 = 1. + t1120;
  t1132 = t1125*t632;
  t1145 = t1132 + t744 + t746;
  t1234 = -1.*t569;
  t1250 = 1. + t1234;
  t1267 = 0.15121*t1250;
  t1298 = -1.*t545*t588*t569;
  t1311 = t545*t578*t590;
  t1316 = t1298 + t1311;
  t650 = -1.284e-8*var2[8];
  t660 = -1.5499600000248e-7*t657;
  t665 = 2.012840000032e-6*t664;
  t667 = t650 + t660 + t665;
  t716 = 0.503210000016051*t657;
  t719 = 0.03874900000062*t664;
  t726 = t716 + t719;
  t752 = 5.136e-14*var2[8];
  t758 = -0.03874900000062*t657;
  t760 = 0.503210000008*t664;
  t770 = t752 + t758 + t760;
  t783 = -1.000000000016*t657;
  t808 = 1. + t783;
  t1392 = t1125*t599;
  t1422 = -4.e-6*t1316*t505;
  t1439 = t1392 + t1422;
  t1370 = t1061*t1316;
  t1374 = 4.e-6*t599*t505;
  t1380 = t1370 + t1374;
  t1450 = 4.e-6*t982*t1316;
  t1464 = t599*t505;
  t1476 = t1450 + t1464;
  t856 = 1.6e-11*t844;
  t882 = 1. + t856;
  t1291 = 0.15121*t590;
  t1317 = -1.2484e-7*var2[7];
  t1320 = -1.5499600000248e-7*t1116;
  t1326 = 1.124840000016e-6*t505;
  t1334 = t1317 + t1320 + t1326;
  t1336 = t1316*t1334;
  t1355 = 0.281210000008499*t1116;
  t1357 = 0.03874900000062*t505;
  t1360 = t1355 + t1357;
  t1368 = t599*t1360;
  t1387 = t1380*t667;
  t1449 = t1439*t726;
  t1484 = t1476*t770;
  t1488 = t808*t1439;
  t1496 = -4.e-6*t1380*t664;
  t1503 = -1.*t1476*t664;
  t1507 = t1488 + t1496 + t1503;
  t1518 = 0.80321*t1507;
  t1527 = t882*t1380;
  t1540 = 4.e-6*t844*t1476;
  t1550 = 4.e-6*t1439*t664;
  t1551 = t1527 + t1540 + t1550;
  t1563 = 0.14871*t1551;
  t1571 = 4.e-6*t844*t1380;
  t1573 = t651*t1476;
  t1580 = t1439*t664;
  t1597 = t1571 + t1573 + t1580;
  t1603 = -0.03875*t1597;
  t1269 = -0.15121*t590;
  t1272 = t1267 + t1269;
  t1296 = t1267 + t1291;
  t1728 = t569*t459*t578;
  t1729 = t588*t459*t590;
  t1736 = t1728 + t1729;
  t1758 = -1.*t588*t569*t459;
  t1760 = t459*t578*t590;
  t1765 = t1758 + t1760;
  t1789 = 4.e-6*t545*t982;
  t1790 = t1061*t1736;
  t1807 = 4.e-6*t1765*t505;
  t1813 = t1789 + t1790 + t1807;
  t1869 = t545*t462;
  t1881 = 4.e-6*t982*t1736;
  t1885 = t1765*t505;
  t1895 = t1869 + t1881 + t1885;
  t1837 = t1125*t1765;
  t1846 = -1.*t545*t505;
  t1851 = -4.e-6*t1736*t505;
  t1854 = t1837 + t1846 + t1851;
  t2026 = Sin(var2[3]);
  t1771 = 4.9936e-13*var2[7];
  t1773 = -0.03874900000062*t1116;
  t1779 = 0.281210000004*t505;
  t1783 = t1771 + t1773 + t1779;
  t2038 = -1.*t545*t569*t2026*t578;
  t2040 = -1.*t545*t588*t2026*t590;
  t2045 = t2038 + t2040;
  t2050 = t545*t588*t569*t2026;
  t2051 = -1.*t545*t2026*t578*t590;
  t2052 = t2050 + t2051;
  t2056 = 4.e-6*t982*t2026*t459;
  t2057 = t1061*t2045;
  t2058 = 4.e-6*t2052*t505;
  t2062 = t2056 + t2057 + t2058;
  t2083 = t462*t2026*t459;
  t2084 = 4.e-6*t982*t2045;
  t2085 = t2052*t505;
  t2086 = t2083 + t2084 + t2085;
  t2067 = t1125*t2052;
  t2069 = -1.*t2026*t459*t505;
  t2072 = -4.e-6*t2045*t505;
  t2076 = t2067 + t2069 + t2072;
  t2197 = Cos(var2[3]);
  t2196 = -1.*t588*t2026;
  t2203 = -1.*t2197*t459*t578;
  t2207 = t2196 + t2203;
  t2210 = t2197*t588*t459;
  t2212 = -1.*t2026*t578;
  t2214 = t2210 + t2212;
  t2218 = t569*t2207;
  t2219 = -1.*t2214*t590;
  t2225 = t2218 + t2219;
  t2235 = t569*t2214;
  t2236 = t2207*t590;
  t2237 = t2235 + t2236;
  t2248 = -4.e-6*t2197*t545*t982;
  t2253 = t1061*t2225;
  t2256 = 4.e-6*t2237*t505;
  t2258 = t2248 + t2253 + t2256;
  t2282 = -1.*t2197*t545*t462;
  t2283 = 4.e-6*t982*t2225;
  t2284 = t2237*t505;
  t2285 = t2282 + t2283 + t2284;
  t2266 = t1125*t2237;
  t2272 = t2197*t545*t505;
  t2277 = -4.e-6*t2225*t505;
  t2280 = t2266 + t2272 + t2277;
  t2384 = -1.*t588*t2026*t459;
  t2401 = -1.*t2197*t578;
  t2411 = t2384 + t2401;
  t2428 = t2197*t588;
  t2429 = -1.*t2026*t459*t578;
  t2430 = t2428 + t2429;
  t2444 = t569*t2411;
  t2447 = -1.*t2430*t590;
  t2450 = t2444 + t2447;
  t2458 = t569*t2430;
  t2469 = t2411*t590;
  t2471 = t2458 + t2469;
  t2488 = t1125*t2471;
  t2496 = -4.e-6*t2450*t505;
  t2499 = t2488 + t2496;
  t2477 = t1061*t2450;
  t2479 = 4.e-6*t2471*t505;
  t2483 = t2477 + t2479;
  t2504 = 4.e-6*t982*t2450;
  t2511 = t2471*t505;
  t2512 = t2504 + t2511;
  t1622 = -0.15121*t569;
  t1653 = t1622 + t1291;
  t1679 = 0.15121*t569;
  t1691 = t1679 + t1291;
  t2591 = t588*t2026*t459;
  t2597 = t2197*t578;
  t2604 = t2591 + t2597;
  t2610 = -1.*t569*t2604;
  t2611 = t2610 + t2447;
  t2616 = -1.*t2604*t590;
  t2617 = t2458 + t2616;
  t2632 = t1125*t2617;
  t2633 = -4.e-6*t2611*t505;
  t2645 = t2632 + t2633;
  t2622 = t1061*t2611;
  t2623 = 4.e-6*t2617*t505;
  t2624 = t2622 + t2623;
  t2651 = 4.e-6*t982*t2611;
  t2652 = t2617*t505;
  t2653 = t2651 + t2652;
  t470 = 0.281210000004*t462;
  t508 = -0.03874900000062*t505;
  t521 = 4.9936e-13 + t470 + t508;
  t604 = 1.124840000016e-6*t462;
  t611 = -1.5499600000248e-7*t505;
  t613 = -1.2484e-7 + t604 + t611;
  t634 = 0.03874900000062*t462;
  t636 = 0.281210000008499*t505;
  t637 = t634 + t636;
  t2732 = t569*t2604;
  t2740 = t2430*t590;
  t2744 = t2732 + t2740;
  t2761 = t545*t462*t2026;
  t2762 = -4.e-6*t462*t2617;
  t2764 = -1.000000000016*t2744*t505;
  t2765 = t2761 + t2762 + t2764;
  t2773 = t462*t2744;
  t2774 = t545*t2026*t505;
  t2776 = -4.e-6*t2617*t505;
  t2779 = t2773 + t2774 + t2776;
  t2747 = 4.e-6*t462*t2744;
  t2751 = 4.e-6*t545*t2026*t505;
  t2756 = -1.6e-11*t2617*t505;
  t2757 = t2747 + t2751 + t2756;
  t1019 = 0.503210000008*t651;
  t1024 = -0.03874900000062*t664;
  t1034 = 5.136e-14 + t1019 + t1024;
  t1084 = 2.012840000032e-6*t651;
  t1093 = -1.5499600000248e-7*t664;
  t1096 = -1.284e-8 + t1084 + t1093;
  t1149 = 0.03874900000062*t651;
  t1150 = 0.503210000016051*t664;
  t1151 = t1149 + t1150;
  t2861 = -4.e-6*t545*t982*t2026;
  t2863 = t1061*t2617;
  t2864 = 4.e-6*t2744*t505;
  t2866 = t2861 + t2863 + t2864;
  t2844 = -1.*t545*t462*t2026;
  t2850 = 4.e-6*t982*t2617;
  t2853 = t2744*t505;
  t2857 = t2844 + t2850 + t2853;
  t2869 = t1125*t2744;
  t2871 = t2869 + t2774 + t2776;
  t2982 = t2197*t545*t569*t578;
  t2985 = t2197*t545*t588*t590;
  t2990 = t2982 + t2985;
  t2993 = -1.*t2197*t545*t588*t569;
  t2994 = t2197*t545*t578*t590;
  t2995 = t2993 + t2994;
  t3002 = -4.e-6*t2197*t982*t459;
  t3003 = t1061*t2990;
  t3004 = 4.e-6*t2995*t505;
  t3009 = t3002 + t3003 + t3004;
  t3055 = -1.*t2197*t462*t459;
  t3060 = 4.e-6*t982*t2990;
  t3062 = t2995*t505;
  t3082 = t3055 + t3060 + t3062;
  t3013 = t1125*t2995;
  t3017 = t2197*t459*t505;
  t3020 = -4.e-6*t2990*t505;
  t3036 = t3013 + t3017 + t3020;
  t3130 = t588*t2026;
  t3136 = t2197*t459*t578;
  t3137 = t3130 + t3136;
  t3141 = -1.*t3137*t590;
  t3142 = t2235 + t3141;
  t3144 = t569*t3137;
  t3146 = t2214*t590;
  t3148 = t3144 + t3146;
  t3157 = t1125*t3148;
  t3158 = -4.e-6*t3142*t505;
  t3160 = t3157 + t3158;
  t3152 = t1061*t3142;
  t3153 = 4.e-6*t3148*t505;
  t3154 = t3152 + t3153;
  t3167 = 4.e-6*t982*t3142;
  t3168 = t3148*t505;
  t3172 = t3167 + t3168;
  t3241 = -1.*t2197*t588*t459;
  t3244 = t2026*t578;
  t3245 = t3241 + t3244;
  t3249 = -1.*t569*t3245;
  t3252 = t3249 + t3141;
  t3263 = -1.*t3245*t590;
  t3268 = t3144 + t3263;
  t3291 = t1125*t3268;
  t3294 = -4.e-6*t3252*t505;
  t3297 = t3291 + t3294;
  t3276 = t1061*t3252;
  t3281 = 4.e-6*t3268*t505;
  t3282 = t3276 + t3281;
  t3299 = 4.e-6*t982*t3252;
  t3302 = t3268*t505;
  t3303 = t3299 + t3302;
  t3385 = t569*t3245;
  t3387 = t3137*t590;
  t3391 = t3385 + t3387;
  t3412 = -4.e-6*t462*t3268;
  t3425 = -1.000000000016*t3391*t505;
  t3426 = t2282 + t3412 + t3425;
  t3432 = t462*t3391;
  t3438 = -1.*t2197*t545*t505;
  t3447 = -4.e-6*t3268*t505;
  t3449 = t3432 + t3438 + t3447;
  t3393 = 4.e-6*t462*t3391;
  t3401 = -4.e-6*t2197*t545*t505;
  t3404 = -1.6e-11*t3268*t505;
  t3405 = t3393 + t3401 + t3404;
  t3535 = 4.e-6*t2197*t545*t982;
  t3536 = t1061*t3268;
  t3539 = 4.e-6*t3391*t505;
  t3540 = t3535 + t3536 + t3539;
  t3511 = t2197*t545*t462;
  t3515 = 4.e-6*t982*t3268;
  t3519 = t3391*t505;
  t3521 = t3511 + t3515 + t3519;
  t3547 = t1125*t3391;
  t3553 = t3547 + t3438 + t3447;
  t2890 = -4.e-6*t2866*t664;
  t2891 = -1.*t2857*t664;
  t3791 = Cos(var2[17]);
  t3794 = Sin(var2[17]);
  t3822 = Cos(var2[16]);
  t3825 = -1.*t3822;
  t3827 = 1. + t3825;
  t3832 = Sin(var2[16]);
  t3857 = Cos(var2[15]);
  t3849 = Sin(var2[15]);
  t3800 = 2.8e-11*t3794;
  t3850 = -1.*t545*t588*t3849;
  t3859 = -1.*t3857*t545*t578;
  t3861 = t3850 + t3859;
  t3830 = -2.8e-11*t3827;
  t3867 = t3857*t545*t588;
  t3868 = -1.*t545*t3849*t578;
  t3871 = t3867 + t3868;
  t3918 = -4.e-6*t3794;
  t3813 = 7.e-6*t3794;
  t3956 = 4.e-6*t3827;
  t3840 = -7.e-6*t3827;
  t3838 = t3830 + t3832;
  t3839 = t3838*t459;
  t3843 = -4.e-6*t3832;
  t3845 = t3840 + t3843;
  t3862 = t3845*t3861;
  t3863 = -1.000000000016*t3827;
  t3864 = 1. + t3863;
  t3873 = t3864*t3871;
  t3885 = t3839 + t3862 + t3873;
  t3944 = -1.000000000049*t3827;
  t3951 = 1. + t3944;
  t3953 = t3951*t459;
  t3958 = -7.e-6*t3832;
  t3966 = t3956 + t3958;
  t3971 = t3966*t3861;
  t3974 = -1.*t3832;
  t3977 = t3830 + t3974;
  t3983 = t3977*t3871;
  t3985 = t3953 + t3971 + t3983;
  t3812 = -4.e-6*t3791;
  t4028 = 7.e-6*t3832;
  t4029 = t3956 + t4028;
  t4034 = t4029*t459;
  t4035 = -6.5e-11*t3827;
  t4036 = 1. + t4035;
  t4041 = t4036*t3861;
  t4047 = 4.e-6*t3832;
  t4049 = t3840 + t4047;
  t4050 = t4049*t3871;
  t4052 = t4034 + t4041 + t4050;
  t3935 = -1.*t3791;
  t4058 = -2.8e-11*t3794;
  t3913 = -7.e-6*t3791;
  t4002 = 4.e-6*t3791;
  t4068 = -7.e-6*t3794;
  t3991 = 7.e-6*t3791;
  t4103 = 4.e-6*t3794;
  t4143 = 2.8e-11*t3832;
  t4201 = 1. + t3935;
  t4156 = 7.e-6*t3822;
  t4168 = 4.e-6*t3822;
  t4210 = -1. + t3791;
  t4215 = 4.e-6*t4210;
  t4140 = -7.e-6*t3822;
  t4207 = 7.e-6*t4201;
  t4250 = 2.8e-11*t4201;
  t4299 = -2.8e-11*t3832;
  t4186 = -4.e-6*t3822;
  t4228 = t4156 + t4047;
  t4229 = t4228*t459;
  t4231 = -6.5e-11*t3832*t3861;
  t4232 = t4168 + t3958;
  t4235 = t4232*t3871;
  t4236 = t4229 + t4231 + t4235;
  t4274 = -1.000000000049*t3832*t459;
  t4286 = t4140 + t4047;
  t4289 = t4286*t3861;
  t4302 = t3825 + t4299;
  t4303 = t4302*t3871;
  t4313 = t4274 + t4289 + t4303;
  t4342 = t3822 + t4299;
  t4346 = t4342*t459;
  t4352 = t4186 + t3958;
  t4355 = t4352*t3861;
  t4358 = -1.000000000016*t3832*t3871;
  t4363 = t4346 + t4355 + t4358;
  t4381 = -2.8e-11*t4201;
  t4253 = -1.*t3794;
  t4435 = 4.e-6*t4201;
  t4370 = -7.e-6*t4201;
  t4500 = -1.*t3857;
  t4501 = 1. + t4500;
  t4504 = -0.15121*t4501;
  t4554 = 7.e-6*t3827;
  t4199 = 2.826290000000002e-7*var2[17];
  t4203 = -2.18904205e-16*t4201;
  t4208 = t4207 + t4103;
  t4209 = -0.5031510000080001*t4208;
  t4220 = t4215 + t3813;
  t4224 = -0.038575000014*t4220;
  t4226 = t4199 + t4203 + t4209 + t4224;
  t4615 = -1.*t3857*t545*t588;
  t4626 = t545*t3849*t578;
  t4627 = t4615 + t4626;
  t4246 = 1.1305160000000008e-12*var2[17];
  t4248 = -0.03857500001589017*t4201;
  t4256 = t4250 + t4253;
  t4258 = -0.5031510000080001*t4256;
  t4260 = t4215 + t4068;
  t4269 = -3.367757e-6*t4260;
  t4272 = t4246 + t4248 + t4258 + t4269;
  t4319 = -1.9784030000000015e-12*var2[17];
  t4321 = -0.5031510000160505*t4201;
  t4326 = t4207 + t3918;
  t4332 = -3.367757e-6*t4326;
  t4336 = t4250 + t3794;
  t4339 = -0.038575000014*t4336;
  t4341 = t4319 + t4321 + t4332 + t4339;
  t4371 = t4370 + t3918;
  t4641 = t4049*t3861;
  t4655 = t4036*t4627;
  t4660 = t4641 + t4655;
  t4391 = t4381 + t3794;
  t4663 = t3977*t3861;
  t4667 = t3966*t4627;
  t4669 = t4663 + t4667;
  t4415 = -1.000000000016*t4201;
  t4416 = 1. + t4415;
  t4675 = t3864*t3861;
  t4676 = t3845*t4627;
  t4678 = t4675 + t4676;
  t4436 = t4435 + t4068;
  t4443 = -1.000000000049*t4201;
  t4448 = 1. + t4443;
  t4454 = t4381 + t4253;
  t4467 = -6.5e-11*t4201;
  t4469 = 1. + t4467;
  t4482 = t4435 + t3813;
  t4487 = t4370 + t4103;
  t4520 = -0.15121*t3849;
  t4550 = -2.7726089999999997e-12*var2[16];
  t4553 = -0.2812110000084994*t3827;
  t4558 = t4554 + t3843;
  t4564 = -1.8134809999999998e-6*t4558;
  t4567 = 2.8e-11*t3827;
  t4574 = t4567 + t3832;
  t4579 = -0.038749000006999997*t4574;
  t4584 = t4550 + t4553 + t4564 + t4579;
  t4585 = t4584*t3861;
  t4586 = 3.9608699999999997e-7*var2[16];
  t4591 = -1.1787626499999999e-16*t3827;
  t4595 = t4554 + t4047;
  t4601 = -0.281211000004*t4595;
  t4604 = -1. + t3822;
  t4605 = 4.e-6*t4604;
  t4606 = t4605 + t4028;
  t4608 = -0.038749000006999997*t4606;
  t4613 = t4586 + t4591 + t4601 + t4608;
  t4628 = t4613*t4627;
  t4662 = t4226*t4660;
  t4672 = t4272*t4669;
  t4679 = t4341*t4678;
  t4688 = t4371*t4660;
  t4692 = t4391*t4669;
  t4693 = t4416*t4678;
  t4694 = t4688 + t4692 + t4693;
  t4697 = -0.80315*t4694;
  t4698 = t4436*t4660;
  t4703 = t4448*t4669;
  t4706 = t4454*t4678;
  t4707 = t4698 + t4703 + t4706;
  t4708 = -0.038576*t4707;
  t4718 = t4469*t4660;
  t4723 = t4482*t4669;
  t4725 = t4487*t4678;
  t4727 = t4718 + t4723 + t4725;
  t4730 = -0.148715*t4727;
  t4522 = t4504 + t4520;
  t4511 = 0.15121*t3849;
  t4515 = t4504 + t4511;
  t4802 = t588*t3849*t459;
  t4806 = t3857*t459*t578;
  t4807 = t4802 + t4806;
  t4810 = -1.*t3857*t588*t459;
  t4811 = t3849*t459*t578;
  t4814 = t4810 + t4811;
  t4816 = t545*t3838;
  t4818 = t3845*t4807;
  t4821 = t3864*t4814;
  t4826 = t4816 + t4818 + t4821;
  t4831 = t3951*t545;
  t4842 = t3966*t4807;
  t4844 = t3977*t4814;
  t4845 = t4831 + t4842 + t4844;
  t4857 = t545*t4029;
  t4858 = t4036*t4807;
  t4859 = t4049*t4814;
  t4865 = t4857 + t4858 + t4859;
  t4763 = 1.5843479999999999e-12*var2[16];
  t4766 = -0.03874900000889869*t3827;
  t4773 = t4567 + t3974;
  t4776 = -0.281211000004*t4773;
  t4780 = t4605 + t3958;
  t4785 = -1.8134809999999998e-6*t4780;
  t4788 = t4763 + t4766 + t4776 + t4785;
  t4982 = -1.*t545*t588*t3849*t2026;
  t4984 = -1.*t3857*t545*t2026*t578;
  t4988 = t4982 + t4984;
  t5006 = t3857*t545*t588*t2026;
  t5012 = -1.*t545*t3849*t2026*t578;
  t5015 = t5006 + t5012;
  t5025 = t3838*t2026*t459;
  t5029 = t3845*t4988;
  t5031 = t3864*t5015;
  t5034 = t5025 + t5029 + t5031;
  t5037 = t3951*t2026*t459;
  t5043 = t3966*t4988;
  t5048 = t3977*t5015;
  t5050 = t5037 + t5043 + t5048;
  t5054 = t4029*t2026*t459;
  t5056 = t4036*t4988;
  t5060 = t4049*t5015;
  t5063 = t5054 + t5056 + t5060;
  t5140 = -1.*t3849*t2214;
  t5141 = t3857*t2207;
  t5143 = t5140 + t5141;
  t5152 = t3857*t2214;
  t5154 = t3849*t2207;
  t5155 = t5152 + t5154;
  t5163 = -1.*t2197*t545*t3838;
  t5167 = t3845*t5143;
  t5169 = t3864*t5155;
  t5170 = t5163 + t5167 + t5169;
  t5174 = -1.*t3951*t2197*t545;
  t5183 = t3966*t5143;
  t5188 = t3977*t5155;
  t5189 = t5174 + t5183 + t5188;
  t5191 = -1.*t2197*t545*t4029;
  t5192 = t4036*t5143;
  t5194 = t4049*t5155;
  t5195 = t5191 + t5192 + t5194;
  t5267 = t3849*t2411;
  t5268 = t3857*t2430;
  t5270 = t5267 + t5268;
  t5277 = t3857*t2411;
  t5279 = -1.*t3849*t2430;
  t5282 = t5277 + t5279;
  t5294 = t4049*t5270;
  t5295 = t4036*t5282;
  t5297 = t5294 + t5295;
  t5300 = t3977*t5270;
  t5304 = t3966*t5282;
  t5308 = t5300 + t5304;
  t5315 = t3864*t5270;
  t5319 = t3845*t5282;
  t5320 = t5315 + t5319;
  t4737 = -0.15121*t3857;
  t4739 = t4737 + t4520;
  t4750 = 0.15121*t3857;
  t4752 = t4750 + t4520;
  t5389 = -1.*t3849*t2604;
  t5390 = t5389 + t5268;
  t5393 = -1.*t3857*t2604;
  t5395 = t5393 + t5279;
  t5398 = t4049*t5390;
  t5399 = t4036*t5395;
  t5400 = t5398 + t5399;
  t5404 = t3977*t5390;
  t5412 = t3966*t5395;
  t5415 = t5404 + t5412;
  t5424 = t3864*t5390;
  t5425 = t3845*t5395;
  t5426 = t5424 + t5425;
  t3803 = t3791 + t3800;
  t3807 = -0.038575000014*t3803;
  t3814 = t3812 + t3813;
  t3818 = -3.367757e-6*t3814;
  t3819 = -0.5031510000160505*t3794;
  t3820 = -1.9784030000000015e-12 + t3807 + t3818 + t3819;
  t3922 = t3913 + t3918;
  t3933 = -3.367757e-6*t3922;
  t3936 = t3935 + t3800;
  t3937 = -0.5031510000080001*t3936;
  t3938 = -0.03857500001589017*t3794;
  t3942 = 1.1305160000000008e-12 + t3933 + t3937 + t3938;
  t5480 = t3857*t2604;
  t5483 = t3849*t2430;
  t5489 = t5480 + t5483;
  t3994 = t3991 + t3918;
  t3999 = -0.038575000014*t3994;
  t4004 = t4002 + t3813;
  t4005 = -0.5031510000080001*t4004;
  t4006 = -2.18904205e-16*t3794;
  t4016 = 2.826290000000002e-7 + t3999 + t4005 + t4006;
  t5476 = -1.*t545*t3838*t2026;
  t5479 = t3845*t5390;
  t5490 = t3864*t5489;
  t5492 = t5476 + t5479 + t5490;
  t4065 = t3791 + t4058;
  t5494 = -1.*t3951*t545*t2026;
  t5499 = t3966*t5390;
  t5501 = t3977*t5489;
  t5503 = t5494 + t5499 + t5501;
  t4077 = t3812 + t4068;
  t5505 = -1.*t545*t4029*t2026;
  t5507 = t4036*t5390;
  t5509 = t4049*t5489;
  t5513 = t5505 + t5507 + t5509;
  t4095 = t3935 + t4058;
  t4107 = t3913 + t4103;
  t4114 = t4002 + t4068;
  t4119 = t3991 + t4103;
  t4141 = t4140 + t3843;
  t4142 = -1.8134809999999998e-6*t4141;
  t4146 = t3825 + t4143;
  t4147 = -0.281211000004*t4146;
  t4153 = -0.03874900000889869*t3832;
  t4154 = 1.5843479999999999e-12 + t4142 + t4147 + t4153;
  t4164 = t4156 + t3843;
  t4165 = -0.038749000006999997*t4164;
  t4169 = t4168 + t4028;
  t4172 = -0.281211000004*t4169;
  t4173 = -1.1787626499999999e-16*t3832;
  t4179 = 3.9608699999999997e-7 + t4165 + t4172 + t4173;
  t4183 = t3822 + t4143;
  t4185 = -0.038749000006999997*t4183;
  t4187 = t4186 + t4028;
  t4188 = -1.8134809999999998e-6*t4187;
  t4190 = -0.2812110000084994*t3832;
  t4192 = -2.7726089999999997e-12 + t4185 + t4188 + t4190;
  t5572 = -1.*t545*t4228*t2026;
  t5581 = -6.5e-11*t3832*t5390;
  t5592 = t4232*t5489;
  t5595 = t5572 + t5581 + t5592;
  t5598 = 1.000000000049*t545*t3832*t2026;
  t5600 = t4286*t5390;
  t5604 = t4302*t5489;
  t5606 = t5598 + t5600 + t5604;
  t5611 = -1.*t545*t4342*t2026;
  t5615 = t4352*t5390;
  t5616 = -1.000000000016*t3832*t5489;
  t5618 = t5611 + t5615 + t5616;
  t5721 = t2197*t545*t588*t3849;
  t5723 = t3857*t2197*t545*t578;
  t5732 = t5721 + t5723;
  t5740 = -1.*t3857*t2197*t545*t588;
  t5741 = t2197*t545*t3849*t578;
  t5744 = t5740 + t5741;
  t5749 = -1.*t2197*t3838*t459;
  t5752 = t3845*t5732;
  t5753 = t3864*t5744;
  t5755 = t5749 + t5752 + t5753;
  t5760 = -1.*t3951*t2197*t459;
  t5765 = t3966*t5732;
  t5766 = t3977*t5744;
  t5768 = t5760 + t5765 + t5766;
  t5774 = -1.*t2197*t4029*t459;
  t5777 = t4036*t5732;
  t5778 = t4049*t5744;
  t5782 = t5774 + t5777 + t5778;
  t5840 = t3849*t2214;
  t5841 = t3857*t3137;
  t5844 = t5840 + t5841;
  t5852 = -1.*t3849*t3137;
  t5857 = t5152 + t5852;
  t5868 = t4049*t5844;
  t5874 = t4036*t5857;
  t5875 = t5868 + t5874;
  t5878 = t3977*t5844;
  t5883 = t3966*t5857;
  t5884 = t5878 + t5883;
  t5888 = t3864*t5844;
  t5891 = t3845*t5857;
  t5902 = t5888 + t5891;
  t5963 = -1.*t3849*t3245;
  t5971 = t5963 + t5841;
  t5974 = -1.*t3857*t3245;
  t5978 = t5974 + t5852;
  t5980 = t4049*t5971;
  t5984 = t4036*t5978;
  t5990 = t5980 + t5984;
  t5994 = t3977*t5971;
  t5997 = t3966*t5978;
  t6001 = t5994 + t5997;
  t6006 = t3864*t5971;
  t6010 = t3845*t5978;
  t6013 = t6006 + t6010;
  t6080 = t3857*t3245;
  t6081 = t3849*t3137;
  t6086 = t6080 + t6081;
  t6076 = t2197*t545*t3838;
  t6079 = t3845*t5971;
  t6092 = t3864*t6086;
  t6096 = t6076 + t6079 + t6092;
  t6098 = t3951*t2197*t545;
  t6100 = t3966*t5971;
  t6106 = t3977*t6086;
  t6112 = t6098 + t6100 + t6106;
  t6119 = t2197*t545*t4029;
  t6122 = t4036*t5971;
  t6124 = t4049*t6086;
  t6127 = t6119 + t6122 + t6124;
  t6188 = t2197*t545*t4228;
  t6189 = -6.5e-11*t3832*t5971;
  t6201 = t4232*t6086;
  t6205 = t6188 + t6189 + t6201;
  t6214 = -1.000000000049*t2197*t545*t3832;
  t6219 = t4286*t5971;
  t6221 = t4302*t6086;
  t6222 = t6214 + t6219 + t6221;
  t6225 = t2197*t545*t4342;
  t6228 = t4352*t5971;
  t6229 = -1.000000000016*t3832*t6086;
  t6231 = t6225 + t6228 + t6229;
  t6535 = Power(t545,2);
  t6536 = Power(t588,2);
  t6539 = t6535*t6536;
  t6540 = Power(t2604,2);
  t6544 = t6539 + t6540;
  t6545 = 1/t6544;
  t6583 = Cos(var2[9]);
  t6585 = -1.*t6583;
  t6586 = 1. + t6585;
  t6588 = Sin(var2[9]);
  t6589 = -0.15121*t6588;
  t6594 = Cos(var2[12]);
  t6596 = -1.*t6594;
  t6597 = 1. + t6596;
  t6599 = Sin(var2[12]);
  t6601 = 0.15121*t6599;
  t6678 = -0.15121*t6583;
  t6606 = -0.15121*t6586;
  t6607 = t6606 + t6589;
  t6610 = 0.15121*t6597;
  t6611 = t6610 + t6601;
  t6587 = 0.15121*t6586;
  t6592 = t6587 + t6589;
  t6598 = -0.15121*t6597;
  t6603 = t6598 + t6601;
  t6699 = t6583*t3137;
  t6704 = -1.*t6588*t3137;
  t6767 = 0.15121*t6594;
  t6743 = t6594*t3137;
  t6754 = -1.*t6599*t3137;
  p_output1[0]=var3[0] + (t1334*t1736 + t1360*t1765 + t1783*t545 + t1272*t459*t578 - 1.*t1296*t459*t588 + t1813*t667 + t1854*t726 + t1895*t770 + 0.80321*(-4.e-6*t1813*t664 - 1.*t1895*t664 + t1854*t808) - 0.03875*(t1895*t651 + t1854*t664 + 4.e-6*t1813*t844) + 0.14871*(4.e-6*t1854*t664 + 4.e-6*t1895*t844 + t1813*t882))*var3[4] + (t1336 + t1368 + t1387 + t1449 + t1484 + t1518 + t1563 + t1603 - 1.*t1296*t545*t578 - 1.*t1272*t545*t588)*var3[5] + (t1336 + t1368 + t1387 + t1449 + t1484 + t1518 + t1563 + t1603 - 1.*t1653*t545*t578 + t1691*t545*t588)*var3[6] + (t459*t521 + t599*t613 + t632*t637 + t649*t667 + t715*t726 + t749*t770 + 0.80321*(-4.e-6*t649*t664 - 1.*t664*t749 + t715*t808) - 0.03875*(t664*t715 + t651*t749 + 4.e-6*t649*t844) + 0.14871*(4.e-6*t664*t715 + 4.e-6*t749*t844 + t649*t882))*var3[7] + (t1006*t1034 + t1073*t1096 + t1145*t1151 - 0.03875*(t1145*t651 - 1.*t1006*t664 - 4.e-6*t1073*t664) + 0.14871*(4.e-6*t1145*t651 - 4.e-6*t1006*t664 - 1.6e-11*t1073*t664) + 0.80321*(-1.*t1006*t651 - 4.e-6*t1073*t651 - 1.000000000016*t1145*t664))*var3[8] + 5.*t267*t427*var4[0] + 20.*t202*t376*t378*var4[10] - 5.*t267*t427*var4[10] + 30.*t319*t332*t336*var4[20] - 20.*t202*t376*t378*var4[20] + 20.*t241*t250*t291*var4[30] - 30.*t319*t332*t336*var4[30] + 5.*t119*t209*var4[40] - 20.*t241*t250*t291*var4[40] - 5.*t119*t209*var4[50];
  p_output1[1]=var3[1] + (t1272*t2207 + t1296*t2214 + t1334*t2225 + t1360*t2237 - 1.*t1783*t2197*t545 + t2258*t667 + t2280*t726 + t2285*t770 + 0.80321*(-4.e-6*t2258*t664 - 1.*t2285*t664 + t2280*t808) - 0.03875*(t2285*t651 + t2280*t664 + 4.e-6*t2258*t844) + 0.14871*(4.e-6*t2280*t664 + 4.e-6*t2285*t844 + t2258*t882))*var3[3] + (t1334*t2045 + t1360*t2052 + t1783*t2026*t459 - 1.*t1272*t2026*t545*t578 + t1296*t2026*t545*t588 + t2062*t667 + t2076*t726 + t2086*t770 + 0.80321*(-4.e-6*t2062*t664 - 1.*t2086*t664 + t2076*t808) - 0.03875*(t2086*t651 + t2076*t664 + 4.e-6*t2062*t844) + 0.14871*(4.e-6*t2076*t664 + 4.e-6*t2086*t844 + t2062*t882))*var3[4] + (t1272*t2411 + t1296*t2430 + t1334*t2450 + t1360*t2471 + t2483*t667 + t2499*t726 + t2512*t770 + 0.80321*(-4.e-6*t2483*t664 - 1.*t2512*t664 + t2499*t808) - 0.03875*(t2512*t651 + t2499*t664 + 4.e-6*t2483*t844) + 0.14871*(4.e-6*t2499*t664 + 4.e-6*t2512*t844 + t2483*t882))*var3[5] + (t1653*t2430 + t1691*t2604 + t1334*t2611 + t1360*t2617 + t2624*t667 + t2645*t726 + t2653*t770 + 0.80321*(-4.e-6*t2624*t664 - 1.*t2653*t664 + t2645*t808) - 0.03875*(t2653*t651 + t2645*t664 + 4.e-6*t2624*t844) + 0.14871*(4.e-6*t2645*t664 + 4.e-6*t2653*t844 + t2624*t882))*var3[6] + (-1.*t2026*t521*t545 + t2617*t613 + t2744*t637 + t2757*t667 + t2765*t726 + t2779*t770 + 0.80321*(-4.e-6*t2757*t664 - 1.*t2779*t664 + t2765*t808) - 0.03875*(t2779*t651 + t2765*t664 + 4.e-6*t2757*t844) + 0.14871*(4.e-6*t2765*t664 + 4.e-6*t2779*t844 + t2757*t882))*var3[7] + (t1034*t2857 + t1096*t2866 + t1151*t2871 - 0.03875*(t2890 + t2891 + t2871*t651) + 0.14871*(4.e-6*t2871*t651 - 4.e-6*t2857*t664 - 1.6e-11*t2866*t664) + 0.80321*(-1.*t2857*t651 - 4.e-6*t2866*t651 - 1.000000000016*t2871*t664))*var3[8] + 5.*t267*t427*var4[1] + 20.*t202*t376*t378*var4[11] - 5.*t267*t427*var4[11] + 30.*t319*t332*t336*var4[21] - 20.*t202*t376*t378*var4[21] + 20.*t241*t250*t291*var4[31] - 30.*t319*t332*t336*var4[31] + 5.*t119*t209*var4[41] - 20.*t241*t250*t291*var4[41] - 5.*t119*t209*var4[51];
  p_output1[2]=var3[2] + (t1272*t2430 + t1296*t2604 + t1334*t2617 + t1360*t2744 - 1.*t1783*t2026*t545 + t2866*t667 + t2871*t726 + t2857*t770 + 0.80321*(t2890 + t2891 + t2871*t808) - 0.03875*(t2857*t651 + t2871*t664 + 4.e-6*t2866*t844) + 0.14871*(4.e-6*t2871*t664 + 4.e-6*t2857*t844 + t2866*t882))*var3[3] + (t1334*t2990 + t1360*t2995 - 1.*t1783*t2197*t459 + t1272*t2197*t545*t578 - 1.*t1296*t2197*t545*t588 + t3009*t667 + t3036*t726 + t3082*t770 + 0.80321*(-4.e-6*t3009*t664 - 1.*t3082*t664 + t3036*t808) - 0.03875*(t3082*t651 + t3036*t664 + 4.e-6*t3009*t844) + 0.14871*(4.e-6*t3036*t664 + 4.e-6*t3082*t844 + t3009*t882))*var3[4] + (t1272*t2214 + t1296*t3137 + t1334*t3142 + t1360*t3148 + t3154*t667 + t3160*t726 + t3172*t770 + 0.80321*(-4.e-6*t3154*t664 - 1.*t3172*t664 + t3160*t808) - 0.03875*(t3172*t651 + t3160*t664 + 4.e-6*t3154*t844) + 0.14871*(4.e-6*t3160*t664 + 4.e-6*t3172*t844 + t3154*t882))*var3[5] + (t1653*t3137 + t1691*t3245 + t1334*t3252 + t1360*t3268 + t3282*t667 + t3297*t726 + t3303*t770 + 0.80321*(-4.e-6*t3282*t664 - 1.*t3303*t664 + t3297*t808) - 0.03875*(t3303*t651 + t3297*t664 + 4.e-6*t3282*t844) + 0.14871*(4.e-6*t3297*t664 + 4.e-6*t3303*t844 + t3282*t882))*var3[6] + (t2197*t521*t545 + t3268*t613 + t3391*t637 + t3405*t667 + t3426*t726 + t3449*t770 + 0.80321*(-4.e-6*t3405*t664 - 1.*t3449*t664 + t3426*t808) - 0.03875*(t3449*t651 + t3426*t664 + 4.e-6*t3405*t844) + 0.14871*(4.e-6*t3426*t664 + 4.e-6*t3449*t844 + t3405*t882))*var3[7] + (t1034*t3521 + t1096*t3540 + t1151*t3553 - 0.03875*(t3553*t651 - 1.*t3521*t664 - 4.e-6*t3540*t664) + 0.14871*(4.e-6*t3553*t651 - 4.e-6*t3521*t664 - 1.6e-11*t3540*t664) + 0.80321*(-1.*t3521*t651 - 4.e-6*t3540*t651 - 1.000000000016*t3553*t664))*var3[8] + 5.*t267*t427*var4[2] + 20.*t202*t376*t378*var4[12] - 5.*t267*t427*var4[12] + 30.*t319*t332*t336*var4[22] - 20.*t202*t376*t378*var4[22] + 20.*t241*t250*t291*var4[32] - 30.*t319*t332*t336*var4[32] + 5.*t119*t209*var4[42] - 20.*t241*t250*t291*var4[42] - 5.*t119*t209*var4[52];
  p_output1[3]=var3[0] + (t4613*t4807 + t4584*t4814 + t4341*t4826 + t4272*t4845 + t4226*t4865 - 0.80315*(t4416*t4826 + t4391*t4845 + t4371*t4865) - 0.038576*(t4454*t4826 + t4448*t4845 + t4436*t4865) - 0.148715*(t4487*t4826 + t4482*t4845 + t4469*t4865) + t4788*t545 + t4515*t459*t578 - 1.*t4522*t459*t588)*var3[4] + (t4585 + t4628 + t4662 + t4672 + t4679 + t4697 + t4708 + t4730 - 1.*t4522*t545*t578 - 1.*t4515*t545*t588)*var3[5] + (t4585 + t4628 + t4662 + t4672 + t4679 + t4697 + t4708 + t4730 - 1.*t4752*t545*t578 + t4739*t545*t588)*var3[15] + (t3861*t4179 + t3871*t4192 + t4226*t4236 + t4272*t4313 + t4341*t4363 - 0.80315*(t4236*t4371 + t4313*t4391 + t4363*t4416) - 0.038576*(t4236*t4436 + t4313*t4448 + t4363*t4454) - 0.148715*(t4236*t4469 + t4313*t4482 + t4363*t4487) + t4154*t459)*var3[16] + (t3820*t3885 + t3942*t3985 + t4016*t4052 - 0.80315*(-1.000000000016*t3794*t3885 + t3985*t4065 + t4052*t4077) - 0.038576*(-1.000000000049*t3794*t3985 + t3885*t4095 + t4052*t4107) - 0.148715*(-6.5e-11*t3794*t4052 + t3885*t4114 + t3985*t4119))*var3[17] + 5.*t267*t427*var4[3] + 20.*t202*t376*t378*var4[13] - 5.*t267*t427*var4[13] + 30.*t319*t332*t336*var4[23] - 20.*t202*t376*t378*var4[23] + 20.*t241*t250*t291*var4[33] - 30.*t319*t332*t336*var4[33] + 5.*t119*t209*var4[43] - 20.*t241*t250*t291*var4[43] - 5.*t119*t209*var4[53];
  p_output1[4]=var3[1] + (t2207*t4515 + t2214*t4522 + t4613*t5143 + t4584*t5155 + t4341*t5170 + t4272*t5189 + t4226*t5195 - 0.80315*(t4416*t5170 + t4391*t5189 + t4371*t5195) - 0.038576*(t4454*t5170 + t4448*t5189 + t4436*t5195) - 0.148715*(t4487*t5170 + t4482*t5189 + t4469*t5195) - 1.*t2197*t4788*t545)*var3[3] + (t2026*t459*t4788 + t4613*t4988 + t4584*t5015 + t4341*t5034 + t4272*t5050 + t4226*t5063 - 0.80315*(t4416*t5034 + t4391*t5050 + t4371*t5063) - 0.038576*(t4454*t5034 + t4448*t5050 + t4436*t5063) - 0.148715*(t4487*t5034 + t4482*t5050 + t4469*t5063) - 1.*t2026*t4515*t545*t578 + t2026*t4522*t545*t588)*var3[4] + (t2411*t4515 + t2430*t4522 + t4584*t5270 + t4613*t5282 + t4226*t5297 + t4272*t5308 + t4341*t5320 - 0.80315*(t4371*t5297 + t4391*t5308 + t4416*t5320) - 0.038576*(t4436*t5297 + t4448*t5308 + t4454*t5320) - 0.148715*(t4469*t5297 + t4482*t5308 + t4487*t5320))*var3[5] + (t2604*t4739 + t2430*t4752 + t4584*t5390 + t4613*t5395 + t4226*t5400 + t4272*t5415 + t4341*t5426 - 0.80315*(t4371*t5400 + t4391*t5415 + t4416*t5426) - 0.038576*(t4436*t5400 + t4448*t5415 + t4454*t5426) - 0.148715*(t4469*t5400 + t4482*t5415 + t4487*t5426))*var3[15] + (t4179*t5390 - 1.*t2026*t4154*t545 + t4192*t5489 + t4226*t5595 + t4272*t5606 + t4341*t5618 - 0.80315*(t4371*t5595 + t4391*t5606 + t4416*t5618) - 0.038576*(t4436*t5595 + t4448*t5606 + t4454*t5618) - 0.148715*(t4469*t5595 + t4482*t5606 + t4487*t5618))*var3[16] + (t3820*t5492 + t3942*t5503 + t4016*t5513 - 0.148715*(t4114*t5492 + t4119*t5503 - 6.5e-11*t3794*t5513) - 0.80315*(-1.000000000016*t3794*t5492 + t4065*t5503 + t4077*t5513) - 0.038576*(t4095*t5492 - 1.000000000049*t3794*t5503 + t4107*t5513))*var3[17] + 5.*t267*t427*var4[4] + 20.*t202*t376*t378*var4[14] - 5.*t267*t427*var4[14] + 30.*t319*t332*t336*var4[24] - 20.*t202*t376*t378*var4[24] + 20.*t241*t250*t291*var4[34] - 30.*t319*t332*t336*var4[34] + 5.*t119*t209*var4[44] - 20.*t241*t250*t291*var4[44] - 5.*t119*t209*var4[54];
  p_output1[5]=var3[2] + (t2430*t4515 + t2604*t4522 + t4613*t5390 - 1.*t2026*t4788*t545 + t4584*t5489 + t4341*t5492 + t4272*t5503 + t4226*t5513 - 0.80315*(t4416*t5492 + t4391*t5503 + t4371*t5513) - 0.038576*(t4454*t5492 + t4448*t5503 + t4436*t5513) - 0.148715*(t4487*t5492 + t4482*t5503 + t4469*t5513))*var3[3] + (-1.*t2197*t459*t4788 + t4613*t5732 + t4584*t5744 + t4341*t5755 + t4272*t5768 + t2197*t4515*t545*t578 + t4226*t5782 - 0.80315*(t4416*t5755 + t4391*t5768 + t4371*t5782) - 0.038576*(t4454*t5755 + t4448*t5768 + t4436*t5782) - 0.148715*(t4487*t5755 + t4482*t5768 + t4469*t5782) - 1.*t2197*t4522*t545*t588)*var3[4] + (t2214*t4515 + t3137*t4522 + t4584*t5844 + t4613*t5857 + t4226*t5875 + t4272*t5884 + t4341*t5902 - 0.80315*(t4371*t5875 + t4391*t5884 + t4416*t5902) - 0.038576*(t4436*t5875 + t4448*t5884 + t4454*t5902) - 0.148715*(t4469*t5875 + t4482*t5884 + t4487*t5902))*var3[5] + (t3245*t4739 + t3137*t4752 + t4584*t5971 + t4613*t5978 + t4226*t5990 + t4272*t6001 + t4341*t6013 - 0.80315*(t4371*t5990 + t4391*t6001 + t4416*t6013) - 0.038576*(t4436*t5990 + t4448*t6001 + t4454*t6013) - 0.148715*(t4469*t5990 + t4482*t6001 + t4487*t6013))*var3[15] + (t2197*t4154*t545 + t4179*t5971 + t4192*t6086 + t4226*t6205 + t4272*t6222 + t4341*t6231 - 0.80315*(t4371*t6205 + t4391*t6222 + t4416*t6231) - 0.038576*(t4436*t6205 + t4448*t6222 + t4454*t6231) - 0.148715*(t4469*t6205 + t4482*t6222 + t4487*t6231))*var3[16] + (t3820*t6096 + t3942*t6112 + t4016*t6127 - 0.148715*(t4114*t6096 + t4119*t6112 - 6.5e-11*t3794*t6127) - 0.80315*(-1.000000000016*t3794*t6096 + t4065*t6112 + t4077*t6127) - 0.038576*(t4095*t6096 - 1.000000000049*t3794*t6112 + t4107*t6127))*var3[17] + 5.*t267*t427*var4[5] + 20.*t202*t376*t378*var4[15] - 5.*t267*t427*var4[15] + 30.*t319*t332*t336*var4[25] - 20.*t202*t376*t378*var4[25] + 20.*t241*t250*t291*var4[35] - 30.*t319*t332*t336*var4[35] + 5.*t119*t209*var4[45] - 20.*t241*t250*t291*var4[45] - 5.*t119*t209*var4[55];
  p_output1[6]=var3[1] + (-0.002264*t2207 + 0.00183*t2214 + 0.024028*t2197*t545)*var3[3] + (-0.024028*t2026*t459 + 0.002264*t2026*t545*t578 + 0.00183*t2026*t545*t588)*var3[4] + (-0.002264*t2411 + 0.00183*t2430)*var3[5] + 5.*t267*t427*var4[6] + 20.*t202*t376*t378*var4[16] - 5.*t267*t427*var4[16] + 30.*t319*t332*t336*var4[26] - 20.*t202*t376*t378*var4[26] + 20.*t241*t250*t291*var4[36] - 30.*t319*t332*t336*var4[36] + 5.*t119*t209*var4[46] - 20.*t241*t250*t291*var4[46] - 5.*t119*t209*var4[56];
  p_output1[7]=var3[2] + (-0.002264*t2430 + 0.00183*t2604 + 0.024028*t2026*t545)*var3[3] + (0.024028*t2197*t459 - 0.002264*t2197*t545*t578 - 0.00183*t2197*t545*t588)*var3[4] + (-0.002264*t2214 + 0.00183*t3137)*var3[5] + 5.*t267*t427*var4[7] + 20.*t202*t376*t378*var4[17] - 5.*t267*t427*var4[17] + 30.*t319*t332*t336*var4[27] - 20.*t202*t376*t378*var4[27] + 20.*t241*t250*t291*var4[37] - 30.*t319*t332*t336*var4[37] + 5.*t119*t209*var4[47] - 20.*t241*t250*t291*var4[47] - 5.*t119*t209*var4[57];
  p_output1[8]=t2214*t545*t588*t6545*var3[3] + (-1.*t2411*t459*t588*t6545 + t2026*t6535*t6536*t6545)*var3[4] + (-1.*t2411*t545*t578*t6545 + t2430*t545*t588*t6545)*var3[5] + 5.*t267*t427*var4[8] + 20.*t202*t376*t378*var4[18] - 5.*t267*t427*var4[18] + 30.*t319*t332*t336*var4[28] - 20.*t202*t376*t378*var4[28] + 20.*t241*t250*t291*var4[38] - 30.*t319*t332*t336*var4[38] + 5.*t119*t209*var4[48] - 20.*t241*t250*t291*var4[48] - 5.*t119*t209*var4[58];
  p_output1[9]=(0.15121*(t2604*t6583 + t2430*t6588) - 0.15121*(t2430*t6583 - 1.*t2604*t6588) + t2604*t6592 + 0.15121*(t2604*t6594 + t2430*t6599) - 0.15121*(t2430*t6594 - 1.*t2604*t6599) - 1.*t2604*t6603 + t2430*t6607 - 1.*t2430*t6611)*var3[3] + (0.15121*(-1.*t2197*t545*t588*t6583 + t2197*t545*t578*t6588) - 0.15121*(t2197*t545*t578*t6583 + t2197*t545*t588*t6588) - 1.*t2197*t545*t588*t6592 + 0.15121*(-1.*t2197*t545*t588*t6594 + t2197*t545*t578*t6599) - 0.15121*(t2197*t545*t578*t6594 + t2197*t545*t588*t6599) + t2197*t545*t588*t6603 + t2197*t545*t578*t6607 - 1.*t2197*t545*t578*t6611)*var3[4] + (t3137*t6592 - 1.*t3137*t6603 + t2214*t6607 - 1.*t2214*t6611 + 0.15121*(t2214*t6588 + t6699) - 0.15121*(t2214*t6583 + t6704) + 0.15121*(t2214*t6599 + t6743) - 0.15121*(t2214*t6594 + t6754))*var3[5] + (t3245*(0.15121*t6588 + t6678) + t3137*(t6589 + t6678) + 0.15121*(-1.*t3245*t6588 + t6699) - 0.15121*(-1.*t3245*t6583 + t6704))*var3[9] + (0.15121*(-1.*t3245*t6599 + t6743) - 0.15121*(-1.*t3245*t6594 + t6754) - 1.*t3245*(-0.15121*t6599 + t6767) - 1.*t3137*(t6601 + t6767))*var3[12] + 5.*t267*t427*var4[9] + 20.*t202*t376*t378*var4[19] - 5.*t267*t427*var4[19] + 30.*t319*t332*t336*var4[29] - 20.*t202*t376*t378*var4[29] + 20.*t241*t250*t291*var4[39] - 30.*t319*t332*t336*var4[39] + 5.*t119*t209*var4[49] - 20.*t241*t250*t291*var4[49] - 5.*t119*t209*var4[59];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4,*var5,*var6,*var7;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 7)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Seven input(s) required (var1,var2,var3,var4,var5,var6,var7).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 60 && ncols == 1) && 
      !(mrows == 1 && ncols == 60))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }
  mrows = mxGetM(prhs[4]);
  ncols = mxGetN(prhs[4]);
  if( !mxIsDouble(prhs[4]) || mxIsComplex(prhs[4]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var5 is wrong.");
    }
  mrows = mxGetM(prhs[5]);
  ncols = mxGetN(prhs[5]);
  if( !mxIsDouble(prhs[5]) || mxIsComplex(prhs[5]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var6 is wrong.");
    }
  mrows = mxGetM(prhs[6]);
  ncols = mxGetN(prhs[6]);
  if( !mxIsDouble(prhs[6]) || mxIsComplex(prhs[6]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var7 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
  var5 = mxGetPr(prhs[4]);
  var6 = mxGetPr(prhs[5]);
  var7 = mxGetPr(prhs[6]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4,var5,var6,var7);


}

#else // MATLAB_MEX_FILE

#include "d1y_position_DiagonalStance.hh"

namespace DiagonalStance
{

void d1y_position_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4, var5, var6, var7);

}

}

#endif // MATLAB_MEX_FILE
