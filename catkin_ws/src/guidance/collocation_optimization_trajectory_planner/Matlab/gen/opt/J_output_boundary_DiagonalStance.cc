/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:57 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t58;
  double t113;
  double t116;
  double t135;
  double t155;
  double t182;
  double t67;
  double t259;
  double t333;
  double t338;
  double t339;
  double t347;
  double t417;
  double t439;
  double t315;
  double t316;
  double t327;
  double t369;
  double t370;
  double t372;
  double t481;
  double t483;
  double t485;
  double t487;
  double t445;
  double t451;
  double t455;
  double t457;
  double t465;
  double t475;
  double t582;
  double t530;
  double t534;
  double t539;
  double t550;
  double t497;
  double t503;
  double t507;
  double t508;
  double t511;
  double t513;
  double t218;
  double t223;
  double t281;
  double t303;
  double t330;
  double t343;
  double t358;
  double t361;
  double t393;
  double t409;
  double t411;
  double t695;
  double t696;
  double t710;
  double t718;
  double t748;
  double t752;
  double t480;
  double t486;
  double t489;
  double t494;
  double t514;
  double t516;
  double t518;
  double t562;
  double t565;
  double t566;
  double t571;
  double t640;
  double t641;
  double t784;
  double t792;
  double t795;
  double t765;
  double t768;
  double t769;
  double t816;
  double t817;
  double t826;
  double t591;
  double t592;
  double t716;
  double t756;
  double t782;
  double t814;
  double t829;
  double t835;
  double t841;
  double t855;
  double t864;
  double t875;
  double t889;
  double t895;
  double t896;
  double t919;
  double t922;
  double t933;
  double t935;
  double t936;
  double t947;
  double t955;
  double t1035;
  double t1039;
  double t1046;
  double t1087;
  double t1093;
  double t1104;
  double t1107;
  double t1112;
  double t1115;
  double t1117;
  double t1120;
  double t1066;
  double t1067;
  double t1082;
  double t1085;
  double t1233;
  double t1237;
  double t1246;
  double t1247;
  double t1206;
  double t1209;
  double t1216;
  double t1223;
  double t1264;
  double t1266;
  double t1355;
  double t1349;
  double t1354;
  double t1357;
  double t1361;
  double t1364;
  double t1365;
  double t1366;
  double t421;
  double t428;
  double t431;
  double t432;
  double t1372;
  double t1379;
  double t1382;
  double t1389;
  double t1391;
  double t1393;
  double t1398;
  double t1399;
  double t1401;
  double t1402;
  double t1418;
  double t1422;
  double t1423;
  double t1432;
  double t1404;
  double t1405;
  double t1408;
  double t1409;
  double t1488;
  double t1490;
  double t1493;
  double t1495;
  double t1496;
  double t1497;
  double t1510;
  double t1513;
  double t1514;
  double t1516;
  double t1529;
  double t1534;
  double t1535;
  double t1545;
  double t1523;
  double t1524;
  double t1526;
  double t1527;
  double t1605;
  double t1612;
  double t1614;
  double t1622;
  double t1625;
  double t1628;
  double t1631;
  double t1632;
  double t1635;
  double t1638;
  double t1639;
  double t1640;
  double t1659;
  double t1664;
  double t1665;
  double t1642;
  double t1649;
  double t1652;
  double t1667;
  double t1668;
  double t1670;
  double t958;
  double t963;
  double t972;
  double t974;
  double t1724;
  double t1726;
  double t1727;
  double t1730;
  double t1737;
  double t1746;
  double t1747;
  double t1782;
  double t1784;
  double t1787;
  double t1758;
  double t1763;
  double t1767;
  double t1794;
  double t1796;
  double t1802;
  double t994;
  double t995;
  double t1004;
  double t1012;
  double t1017;
  double t1022;
  double t1054;
  double t1056;
  double t1057;
  double t1841;
  double t1844;
  double t1850;
  double t1872;
  double t1874;
  double t1876;
  double t1878;
  double t1882;
  double t1883;
  double t1884;
  double t1890;
  double t1855;
  double t1857;
  double t1860;
  double t1868;
  double t1228;
  double t1230;
  double t1231;
  double t1255;
  double t1257;
  double t1259;
  double t1274;
  double t1277;
  double t1278;
  double t1962;
  double t1963;
  double t1964;
  double t1965;
  double t1939;
  double t1941;
  double t1951;
  double t1954;
  double t1972;
  double t1975;
  double t2003;
  double t2009;
  double t2098;
  double t2100;
  double t2103;
  double t2116;
  double t2118;
  double t2119;
  double t2128;
  double t2130;
  double t2131;
  double t2132;
  double t2148;
  double t2149;
  double t2151;
  double t2153;
  double t2138;
  double t2139;
  double t2142;
  double t2143;
  double t2186;
  double t2187;
  double t2189;
  double t2191;
  double t2194;
  double t2200;
  double t2203;
  double t2205;
  double t2216;
  double t2218;
  double t2219;
  double t2210;
  double t2211;
  double t2212;
  double t2223;
  double t2227;
  double t2231;
  double t2287;
  double t2290;
  double t2292;
  double t2295;
  double t2296;
  double t2302;
  double t2304;
  double t2315;
  double t2316;
  double t2317;
  double t2308;
  double t2311;
  double t2312;
  double t2324;
  double t2325;
  double t2327;
  double t2372;
  double t2374;
  double t2375;
  double t2383;
  double t2384;
  double t2386;
  double t2390;
  double t2392;
  double t2393;
  double t2394;
  double t2377;
  double t2378;
  double t2379;
  double t2380;
  double t2448;
  double t2452;
  double t2458;
  double t2463;
  double t2429;
  double t2434;
  double t2437;
  double t2439;
  double t2465;
  double t2468;
  double t2523;
  double t2529;
  double t2532;
  double t2536;
  double t2566;
  double t2567;
  double t2570;
  double t2571;
  double t2574;
  double t2546;
  double t2548;
  double t2606;
  double t2535;
  double t2675;
  double t2676;
  double t2680;
  double t2687;
  double t2651;
  double t2630;
  double t2631;
  double t2632;
  double t2660;
  double t2662;
  double t2663;
  double t2697;
  double t2550;
  double t2708;
  double t2537;
  double t2686;
  double t2753;
  double t2755;
  double t2774;
  double t2616;
  double t2720;
  double t2607;
  double t2810;
  double t2710;
  double t2711;
  double t2721;
  double t2722;
  double t2726;
  double t2727;
  double t2729;
  double t2732;
  double t2813;
  double t2768;
  double t2769;
  double t2773;
  double t2775;
  double t2781;
  double t2782;
  double t2785;
  double t2788;
  double t2819;
  double t2826;
  double t2827;
  double t2828;
  double t2829;
  double t2830;
  double t2831;
  double t2838;
  double t2749;
  double t2852;
  double t2756;
  double t2875;
  double t2841;
  double t2690;
  double t2592;
  double t2595;
  double t2577;
  double t2585;
  double t2646;
  double t2649;
  double t2652;
  double t2654;
  double t2655;
  double t2656;
  double t2658;
  double t2600;
  double t2603;
  double t2610;
  double t2613;
  double t2618;
  double t2620;
  double t2628;
  double t2805;
  double t2807;
  double t2811;
  double t2812;
  double t2814;
  double t2815;
  double t2817;
  double t2923;
  double t2929;
  double t2930;
  double t2935;
  double t2940;
  double t2944;
  double t2746;
  double t2747;
  double t2750;
  double t2752;
  double t2758;
  double t2761;
  double t2763;
  double t2666;
  double t2683;
  double t2691;
  double t2695;
  double t2700;
  double t2701;
  double t2707;
  double t2904;
  double t2948;
  double t2950;
  double t2951;
  double t2901;
  double t2957;
  double t2959;
  double t2960;
  double t2892;
  double t2893;
  double t2964;
  double t2965;
  double t2966;
  double t2886;
  double t2878;
  double t2884;
  double t2876;
  double t2860;
  double t2862;
  double t2853;
  double t2844;
  double t2933;
  double t2946;
  double t2953;
  double t2963;
  double t2972;
  double t2974;
  double t2975;
  double t2976;
  double t2978;
  double t2981;
  double t2982;
  double t2986;
  double t2992;
  double t2994;
  double t2999;
  double t3000;
  double t3001;
  double t3002;
  double t3003;
  double t3005;
  double t3034;
  double t3060;
  double t3067;
  double t3094;
  double t3097;
  double t3099;
  double t3031;
  double t3125;
  double t3084;
  double t3103;
  double t3105;
  double t3107;
  double t3110;
  double t3111;
  double t3112;
  double t3119;
  double t3122;
  double t3124;
  double t3127;
  double t3128;
  double t3129;
  double t3131;
  double t3133;
  double t3135;
  double t3136;
  double t3138;
  double t3139;
  double t3183;
  double t3196;
  double t3199;
  double t3200;
  double t3201;
  double t3221;
  double t3224;
  double t3226;
  double t3227;
  double t3187;
  double t3247;
  double t3248;
  double t3253;
  double t3259;
  double t3272;
  double t3203;
  double t3234;
  double t3230;
  double t2518;
  double t2534;
  double t2541;
  double t2545;
  double t2556;
  double t2558;
  double t2559;
  double t3316;
  double t3318;
  double t3319;
  double t3326;
  double t3327;
  double t3330;
  double t3333;
  double t3334;
  double t3335;
  double t3337;
  double t3345;
  double t3346;
  double t3348;
  double t3350;
  double t3358;
  double t3359;
  double t3361;
  double t3362;
  double t3413;
  double t3418;
  double t3424;
  double t3428;
  double t3431;
  double t3432;
  double t3440;
  double t3442;
  double t3450;
  double t3452;
  double t3457;
  double t3459;
  double t3462;
  double t3465;
  double t3468;
  double t3471;
  double t3472;
  double t3475;
  double t3525;
  double t3538;
  double t3541;
  double t3547;
  double t3549;
  double t3554;
  double t3562;
  double t3563;
  double t3565;
  double t3573;
  double t3580;
  double t3581;
  double t3590;
  double t3592;
  double t3601;
  double t3011;
  double t3012;
  double t3017;
  double t3023;
  double t3648;
  double t3649;
  double t3651;
  double t3652;
  double t3657;
  double t3658;
  double t3659;
  double t3663;
  double t3664;
  double t3665;
  double t3667;
  double t3672;
  double t3674;
  double t3032;
  double t3033;
  double t3045;
  double t3048;
  double t3052;
  double t3054;
  double t3062;
  double t3063;
  double t3068;
  double t3070;
  double t3072;
  double t3073;
  double t3080;
  double t3083;
  double t3085;
  double t3090;
  double t3091;
  double t3093;
  double t3714;
  double t3717;
  double t3719;
  double t3728;
  double t3730;
  double t3740;
  double t3748;
  double t3754;
  double t3759;
  double t3760;
  double t3764;
  double t3767;
  double t3772;
  double t3775;
  double t3786;
  double t3184;
  double t3186;
  double t3188;
  double t3190;
  double t3192;
  double t3195;
  double t3204;
  double t3212;
  double t3213;
  double t3215;
  double t3218;
  double t3220;
  double t3231;
  double t3232;
  double t3237;
  double t3240;
  double t3243;
  double t3246;
  double t3850;
  double t3851;
  double t3856;
  double t3858;
  double t3275;
  double t3862;
  double t3863;
  double t3867;
  double t3868;
  double t3277;
  double t3872;
  double t3873;
  double t3874;
  double t3875;
  double t3284;
  double t3290;
  double t3296;
  double t3300;
  double t4049;
  double t4050;
  double t4055;
  double t4061;
  double t4067;
  double t4069;
  double t4080;
  double t4082;
  double t4083;
  double t4086;
  double t4093;
  double t4099;
  double t4101;
  double t4103;
  double t4106;
  double t4108;
  double t4110;
  double t4118;
  double t4183;
  double t4185;
  double t4188;
  double t4190;
  double t4194;
  double t4197;
  double t4199;
  double t4200;
  double t4205;
  double t4207;
  double t4211;
  double t4216;
  double t4220;
  double t4224;
  double t4289;
  double t4291;
  double t4294;
  double t4298;
  double t4303;
  double t4304;
  double t4305;
  double t4315;
  double t4322;
  double t4324;
  double t4329;
  double t4331;
  double t4332;
  double t4372;
  double t4375;
  double t4377;
  double t4383;
  double t4385;
  double t4386;
  double t4388;
  double t4393;
  double t4394;
  double t4405;
  double t4407;
  double t4418;
  double t4419;
  double t4420;
  double t4421;
  double t4464;
  double t4468;
  double t4470;
  double t4475;
  double t4478;
  double t4481;
  double t4483;
  double t4485;
  double t4488;
  double t4490;
  double t4492;
  double t4494;
  t58 = Sin(var1[4]);
  t113 = Cos(var1[6]);
  t116 = -1.*t113;
  t135 = 1. + t116;
  t155 = 0.15121*t135;
  t182 = Sin(var1[6]);
  t67 = Sin(var1[5]);
  t259 = Cos(var1[5]);
  t333 = Cos(var1[7]);
  t338 = -1.*t333;
  t339 = 1. + t338;
  t347 = Sin(var1[7]);
  t417 = Cos(var1[4]);
  t439 = -1. + t333;
  t315 = t113*t58*t67;
  t316 = t259*t58*t182;
  t327 = t315 + t316;
  t369 = -1.*t259*t113*t58;
  t370 = t58*t67*t182;
  t372 = t369 + t370;
  t481 = Cos(var1[8]);
  t483 = -1.*t481;
  t485 = 1. + t483;
  t487 = Sin(var1[8]);
  t445 = 4.e-6*t417*t439;
  t451 = 1.6e-11*t439;
  t455 = 1. + t451;
  t457 = t455*t327;
  t465 = 4.e-6*t372*t347;
  t475 = t445 + t457 + t465;
  t582 = -1. + t481;
  t530 = t417*t333;
  t534 = 4.e-6*t439*t327;
  t539 = t372*t347;
  t550 = t530 + t534 + t539;
  t497 = -1.000000000016*t339;
  t503 = 1. + t497;
  t507 = t503*t372;
  t508 = -1.*t417*t347;
  t511 = -4.e-6*t327*t347;
  t513 = t507 + t508 + t511;
  t218 = -0.15121*t182;
  t223 = t155 + t218;
  t281 = 0.15121*t182;
  t303 = t155 + t281;
  t330 = -1.2484e-7*var1[7];
  t343 = -1.5499600000248e-7*t339;
  t358 = 1.124840000016e-6*t347;
  t361 = t330 + t343 + t358;
  t393 = 0.281210000008499*t339;
  t409 = 0.03874900000062*t347;
  t411 = t393 + t409;
  t695 = -1.*t417*t259*t113;
  t696 = t417*t67*t182;
  t710 = t695 + t696;
  t718 = -1.*t417*t113*t67;
  t748 = -1.*t417*t259*t182;
  t752 = t718 + t748;
  t480 = -1.284e-8*var1[8];
  t486 = -1.5499600000248e-7*t485;
  t489 = 2.012840000032e-6*t487;
  t494 = t480 + t486 + t489;
  t514 = 0.503210000016051*t485;
  t516 = 0.03874900000062*t487;
  t518 = t514 + t516;
  t562 = 5.136e-14*var1[8];
  t565 = -0.03874900000062*t485;
  t566 = 0.503210000008*t487;
  t571 = t562 + t565 + t566;
  t640 = -1.000000000016*t485;
  t641 = 1. + t640;
  t784 = t503*t752;
  t792 = -4.e-6*t710*t347;
  t795 = t784 + t792;
  t765 = t455*t710;
  t768 = 4.e-6*t752*t347;
  t769 = t765 + t768;
  t816 = 4.e-6*t439*t710;
  t817 = t752*t347;
  t826 = t816 + t817;
  t591 = 1.6e-11*t582;
  t592 = 1. + t591;
  t716 = t710*t361;
  t756 = t752*t411;
  t782 = t769*t494;
  t814 = t795*t518;
  t829 = t826*t571;
  t835 = t641*t795;
  t841 = -4.e-6*t769*t487;
  t855 = -1.*t826*t487;
  t864 = t835 + t841 + t855;
  t875 = 0.80321*t864;
  t889 = t592*t769;
  t895 = 4.e-6*t582*t826;
  t896 = 4.e-6*t795*t487;
  t919 = t889 + t895 + t896;
  t922 = 0.14871*t919;
  t933 = 4.e-6*t582*t769;
  t935 = t481*t826;
  t936 = t795*t487;
  t947 = t933 + t935 + t936;
  t955 = -0.03875*t947;
  t1035 = t417*t259*t113;
  t1039 = -1.*t417*t67*t182;
  t1046 = t1035 + t1039;
  t1087 = -1.*t333*t58;
  t1093 = -4.e-6*t333*t752;
  t1104 = -1.000000000016*t1046*t347;
  t1107 = t1087 + t1093 + t1104;
  t1112 = t333*t1046;
  t1115 = -1.*t58*t347;
  t1117 = -4.e-6*t752*t347;
  t1120 = t1112 + t1115 + t1117;
  t1066 = 4.e-6*t333*t1046;
  t1067 = -4.e-6*t58*t347;
  t1082 = -1.6e-11*t752*t347;
  t1085 = t1066 + t1067 + t1082;
  t1233 = 4.e-6*t439*t58;
  t1237 = t455*t752;
  t1246 = 4.e-6*t1046*t347;
  t1247 = t1233 + t1237 + t1246;
  t1206 = t333*t58;
  t1209 = 4.e-6*t439*t752;
  t1216 = t1046*t347;
  t1223 = t1206 + t1209 + t1216;
  t1264 = t503*t1046;
  t1266 = t1264 + t1115 + t1117;
  t1355 = Cos(var1[3]);
  t1349 = Sin(var1[3]);
  t1354 = -1.*t259*t1349;
  t1357 = -1.*t1355*t58*t67;
  t1361 = t1354 + t1357;
  t1364 = t1355*t259*t58;
  t1365 = -1.*t1349*t67;
  t1366 = t1364 + t1365;
  t421 = 4.9936e-13*var1[7];
  t428 = -0.03874900000062*t339;
  t431 = 0.281210000004*t347;
  t432 = t421 + t428 + t431;
  t1372 = t113*t1361;
  t1379 = -1.*t1366*t182;
  t1382 = t1372 + t1379;
  t1389 = t113*t1366;
  t1391 = t1361*t182;
  t1393 = t1389 + t1391;
  t1398 = -4.e-6*t1355*t417*t439;
  t1399 = t455*t1382;
  t1401 = 4.e-6*t1393*t347;
  t1402 = t1398 + t1399 + t1401;
  t1418 = -1.*t1355*t417*t333;
  t1422 = 4.e-6*t439*t1382;
  t1423 = t1393*t347;
  t1432 = t1418 + t1422 + t1423;
  t1404 = t503*t1393;
  t1405 = t1355*t417*t347;
  t1408 = -4.e-6*t1382*t347;
  t1409 = t1404 + t1405 + t1408;
  t1488 = -1.*t417*t113*t1349*t67;
  t1490 = -1.*t417*t259*t1349*t182;
  t1493 = t1488 + t1490;
  t1495 = t417*t259*t113*t1349;
  t1496 = -1.*t417*t1349*t67*t182;
  t1497 = t1495 + t1496;
  t1510 = 4.e-6*t439*t1349*t58;
  t1513 = t455*t1493;
  t1514 = 4.e-6*t1497*t347;
  t1516 = t1510 + t1513 + t1514;
  t1529 = t333*t1349*t58;
  t1534 = 4.e-6*t439*t1493;
  t1535 = t1497*t347;
  t1545 = t1529 + t1534 + t1535;
  t1523 = t503*t1497;
  t1524 = -1.*t1349*t58*t347;
  t1526 = -4.e-6*t1493*t347;
  t1527 = t1523 + t1524 + t1526;
  t1605 = -1.*t259*t1349*t58;
  t1612 = -1.*t1355*t67;
  t1614 = t1605 + t1612;
  t1622 = t1355*t259;
  t1625 = -1.*t1349*t58*t67;
  t1628 = t1622 + t1625;
  t1631 = t113*t1614;
  t1632 = -1.*t1628*t182;
  t1635 = t1631 + t1632;
  t1638 = t113*t1628;
  t1639 = t1614*t182;
  t1640 = t1638 + t1639;
  t1659 = t503*t1640;
  t1664 = -4.e-6*t1635*t347;
  t1665 = t1659 + t1664;
  t1642 = t455*t1635;
  t1649 = 4.e-6*t1640*t347;
  t1652 = t1642 + t1649;
  t1667 = 4.e-6*t439*t1635;
  t1668 = t1640*t347;
  t1670 = t1667 + t1668;
  t958 = -0.15121*t113;
  t963 = t958 + t281;
  t972 = 0.15121*t113;
  t974 = t972 + t281;
  t1724 = t259*t1349*t58;
  t1726 = t1355*t67;
  t1727 = t1724 + t1726;
  t1730 = -1.*t113*t1727;
  t1737 = t1730 + t1632;
  t1746 = -1.*t1727*t182;
  t1747 = t1638 + t1746;
  t1782 = t503*t1747;
  t1784 = -4.e-6*t1737*t347;
  t1787 = t1782 + t1784;
  t1758 = t455*t1737;
  t1763 = 4.e-6*t1747*t347;
  t1767 = t1758 + t1763;
  t1794 = 4.e-6*t439*t1737;
  t1796 = t1747*t347;
  t1802 = t1794 + t1796;
  t994 = 0.281210000004*t333;
  t995 = -0.03874900000062*t347;
  t1004 = 4.9936e-13 + t994 + t995;
  t1012 = 1.124840000016e-6*t333;
  t1017 = -1.5499600000248e-7*t347;
  t1022 = -1.2484e-7 + t1012 + t1017;
  t1054 = 0.03874900000062*t333;
  t1056 = 0.281210000008499*t347;
  t1057 = t1054 + t1056;
  t1841 = t113*t1727;
  t1844 = t1628*t182;
  t1850 = t1841 + t1844;
  t1872 = t417*t333*t1349;
  t1874 = -4.e-6*t333*t1747;
  t1876 = -1.000000000016*t1850*t347;
  t1878 = t1872 + t1874 + t1876;
  t1882 = t333*t1850;
  t1883 = t417*t1349*t347;
  t1884 = -4.e-6*t1747*t347;
  t1890 = t1882 + t1883 + t1884;
  t1855 = 4.e-6*t333*t1850;
  t1857 = 4.e-6*t417*t1349*t347;
  t1860 = -1.6e-11*t1747*t347;
  t1868 = t1855 + t1857 + t1860;
  t1228 = 0.503210000008*t481;
  t1230 = -0.03874900000062*t487;
  t1231 = 5.136e-14 + t1228 + t1230;
  t1255 = 2.012840000032e-6*t481;
  t1257 = -1.5499600000248e-7*t487;
  t1259 = -1.284e-8 + t1255 + t1257;
  t1274 = 0.03874900000062*t481;
  t1277 = 0.503210000016051*t487;
  t1278 = t1274 + t1277;
  t1962 = -4.e-6*t417*t439*t1349;
  t1963 = t455*t1747;
  t1964 = 4.e-6*t1850*t347;
  t1965 = t1962 + t1963 + t1964;
  t1939 = -1.*t417*t333*t1349;
  t1941 = 4.e-6*t439*t1747;
  t1951 = t1850*t347;
  t1954 = t1939 + t1941 + t1951;
  t1972 = t503*t1850;
  t1975 = t1972 + t1883 + t1884;
  t2003 = -4.e-6*t1965*t487;
  t2009 = -1.*t1954*t487;
  t2098 = t1355*t417*t113*t67;
  t2100 = t1355*t417*t259*t182;
  t2103 = t2098 + t2100;
  t2116 = -1.*t1355*t417*t259*t113;
  t2118 = t1355*t417*t67*t182;
  t2119 = t2116 + t2118;
  t2128 = -4.e-6*t1355*t439*t58;
  t2130 = t455*t2103;
  t2131 = 4.e-6*t2119*t347;
  t2132 = t2128 + t2130 + t2131;
  t2148 = -1.*t1355*t333*t58;
  t2149 = 4.e-6*t439*t2103;
  t2151 = t2119*t347;
  t2153 = t2148 + t2149 + t2151;
  t2138 = t503*t2119;
  t2139 = t1355*t58*t347;
  t2142 = -4.e-6*t2103*t347;
  t2143 = t2138 + t2139 + t2142;
  t2186 = t259*t1349;
  t2187 = t1355*t58*t67;
  t2189 = t2186 + t2187;
  t2191 = -1.*t2189*t182;
  t2194 = t1389 + t2191;
  t2200 = t113*t2189;
  t2203 = t1366*t182;
  t2205 = t2200 + t2203;
  t2216 = t503*t2205;
  t2218 = -4.e-6*t2194*t347;
  t2219 = t2216 + t2218;
  t2210 = t455*t2194;
  t2211 = 4.e-6*t2205*t347;
  t2212 = t2210 + t2211;
  t2223 = 4.e-6*t439*t2194;
  t2227 = t2205*t347;
  t2231 = t2223 + t2227;
  t2287 = -1.*t1355*t259*t58;
  t2290 = t1349*t67;
  t2292 = t2287 + t2290;
  t2295 = -1.*t113*t2292;
  t2296 = t2295 + t2191;
  t2302 = -1.*t2292*t182;
  t2304 = t2200 + t2302;
  t2315 = t503*t2304;
  t2316 = -4.e-6*t2296*t347;
  t2317 = t2315 + t2316;
  t2308 = t455*t2296;
  t2311 = 4.e-6*t2304*t347;
  t2312 = t2308 + t2311;
  t2324 = 4.e-6*t439*t2296;
  t2325 = t2304*t347;
  t2327 = t2324 + t2325;
  t2372 = t113*t2292;
  t2374 = t2189*t182;
  t2375 = t2372 + t2374;
  t2383 = -4.e-6*t333*t2304;
  t2384 = -1.000000000016*t2375*t347;
  t2386 = t1418 + t2383 + t2384;
  t2390 = t333*t2375;
  t2392 = -1.*t1355*t417*t347;
  t2393 = -4.e-6*t2304*t347;
  t2394 = t2390 + t2392 + t2393;
  t2377 = 4.e-6*t333*t2375;
  t2378 = -4.e-6*t1355*t417*t347;
  t2379 = -1.6e-11*t2304*t347;
  t2380 = t2377 + t2378 + t2379;
  t2448 = 4.e-6*t1355*t417*t439;
  t2452 = t455*t2304;
  t2458 = 4.e-6*t2375*t347;
  t2463 = t2448 + t2452 + t2458;
  t2429 = t1355*t417*t333;
  t2434 = 4.e-6*t439*t2304;
  t2437 = t2375*t347;
  t2439 = t2429 + t2434 + t2437;
  t2465 = t503*t2375;
  t2468 = t2465 + t2392 + t2393;
  t2523 = Cos(var1[16]);
  t2529 = -1.*t2523;
  t2532 = 1. + t2529;
  t2536 = Sin(var1[16]);
  t2566 = Cos(var1[15]);
  t2567 = -1.*t2566;
  t2570 = 1. + t2567;
  t2571 = -0.15121*t2570;
  t2574 = Sin(var1[15]);
  t2546 = -1. + t2523;
  t2548 = 4.e-6*t2546;
  t2606 = 7.e-6*t2532;
  t2535 = 2.8e-11*t2532;
  t2675 = Cos(var1[17]);
  t2676 = -1.*t2675;
  t2680 = 1. + t2676;
  t2687 = Sin(var1[17]);
  t2651 = -4.e-6*t2536;
  t2630 = t259*t2574*t58;
  t2631 = t2566*t58*t67;
  t2632 = t2630 + t2631;
  t2660 = -1.*t2566*t259*t58;
  t2662 = t2574*t58*t67;
  t2663 = t2660 + t2662;
  t2697 = 2.8e-11*t2680;
  t2550 = -7.e-6*t2536;
  t2708 = -2.8e-11*t2532;
  t2537 = -1.*t2536;
  t2686 = 7.e-6*t2680;
  t2753 = -1. + t2675;
  t2755 = 4.e-6*t2753;
  t2774 = 4.e-6*t2532;
  t2616 = 7.e-6*t2536;
  t2720 = -7.e-6*t2532;
  t2607 = 4.e-6*t2536;
  t2810 = 4.e-6*t2687;
  t2710 = t2708 + t2536;
  t2711 = t417*t2710;
  t2721 = t2720 + t2651;
  t2722 = t2721*t2632;
  t2726 = -1.000000000016*t2532;
  t2727 = 1. + t2726;
  t2729 = t2727*t2663;
  t2732 = t2711 + t2722 + t2729;
  t2813 = 7.e-6*t2687;
  t2768 = -1.000000000049*t2532;
  t2769 = 1. + t2768;
  t2773 = t2769*t417;
  t2775 = t2774 + t2550;
  t2781 = t2775*t2632;
  t2782 = t2708 + t2537;
  t2785 = t2782*t2663;
  t2788 = t2773 + t2781 + t2785;
  t2819 = t2774 + t2616;
  t2826 = t417*t2819;
  t2827 = -6.5e-11*t2532;
  t2828 = 1. + t2827;
  t2829 = t2828*t2632;
  t2830 = t2720 + t2607;
  t2831 = t2830*t2663;
  t2838 = t2826 + t2829 + t2831;
  t2749 = -1.*t2687;
  t2852 = 4.e-6*t2680;
  t2756 = -7.e-6*t2687;
  t2875 = -2.8e-11*t2680;
  t2841 = -7.e-6*t2680;
  t2690 = -4.e-6*t2687;
  t2592 = 0.15121*t2574;
  t2595 = t2571 + t2592;
  t2577 = -0.15121*t2574;
  t2585 = t2571 + t2577;
  t2646 = -2.7726089999999997e-12*var1[16];
  t2649 = -0.2812110000084994*t2532;
  t2652 = t2606 + t2651;
  t2654 = -1.8134809999999998e-6*t2652;
  t2655 = t2535 + t2536;
  t2656 = -0.038749000006999997*t2655;
  t2658 = t2646 + t2649 + t2654 + t2656;
  t2600 = 3.9608699999999997e-7*var1[16];
  t2603 = -1.1787626499999999e-16*t2532;
  t2610 = t2606 + t2607;
  t2613 = -0.281211000004*t2610;
  t2618 = t2548 + t2616;
  t2620 = -0.038749000006999997*t2618;
  t2628 = t2600 + t2603 + t2613 + t2620;
  t2805 = 2.826290000000002e-7*var1[17];
  t2807 = -2.18904205e-16*t2680;
  t2811 = t2686 + t2810;
  t2812 = -0.5031510000080001*t2811;
  t2814 = t2755 + t2813;
  t2815 = -0.038575000014*t2814;
  t2817 = t2805 + t2807 + t2812 + t2815;
  t2923 = -1.*t417*t259*t2574;
  t2929 = -1.*t2566*t417*t67;
  t2930 = t2923 + t2929;
  t2935 = -1.*t2566*t417*t259;
  t2940 = t417*t2574*t67;
  t2944 = t2935 + t2940;
  t2746 = 1.1305160000000008e-12*var1[17];
  t2747 = -0.03857500001589017*t2680;
  t2750 = t2697 + t2749;
  t2752 = -0.5031510000080001*t2750;
  t2758 = t2755 + t2756;
  t2761 = -3.367757e-6*t2758;
  t2763 = t2746 + t2747 + t2752 + t2761;
  t2666 = -1.9784030000000015e-12*var1[17];
  t2683 = -0.5031510000160505*t2680;
  t2691 = t2686 + t2690;
  t2695 = -3.367757e-6*t2691;
  t2700 = t2697 + t2687;
  t2701 = -0.038575000014*t2700;
  t2707 = t2666 + t2683 + t2695 + t2701;
  t2904 = t2841 + t2690;
  t2948 = t2830*t2930;
  t2950 = t2828*t2944;
  t2951 = t2948 + t2950;
  t2901 = t2875 + t2687;
  t2957 = t2782*t2930;
  t2959 = t2775*t2944;
  t2960 = t2957 + t2959;
  t2892 = -1.000000000016*t2680;
  t2893 = 1. + t2892;
  t2964 = t2727*t2930;
  t2965 = t2721*t2944;
  t2966 = t2964 + t2965;
  t2886 = t2852 + t2756;
  t2878 = -1.000000000049*t2680;
  t2884 = 1. + t2878;
  t2876 = t2875 + t2749;
  t2860 = -6.5e-11*t2680;
  t2862 = 1. + t2860;
  t2853 = t2852 + t2813;
  t2844 = t2841 + t2810;
  t2933 = t2658*t2930;
  t2946 = t2628*t2944;
  t2953 = t2817*t2951;
  t2963 = t2763*t2960;
  t2972 = t2707*t2966;
  t2974 = t2904*t2951;
  t2975 = t2901*t2960;
  t2976 = t2893*t2966;
  t2978 = t2974 + t2975 + t2976;
  t2981 = -0.80315*t2978;
  t2982 = t2886*t2951;
  t2986 = t2884*t2960;
  t2992 = t2876*t2966;
  t2994 = t2982 + t2986 + t2992;
  t2999 = -0.038576*t2994;
  t3000 = t2862*t2951;
  t3001 = t2853*t2960;
  t3002 = t2844*t2966;
  t3003 = t3000 + t3001 + t3002;
  t3005 = -0.148715*t3003;
  t3034 = 2.8e-11*t2536;
  t3060 = 7.e-6*t2523;
  t3067 = 4.e-6*t2523;
  t3094 = t2566*t417*t259;
  t3097 = -1.*t417*t2574*t67;
  t3099 = t3094 + t3097;
  t3031 = -7.e-6*t2523;
  t3125 = -2.8e-11*t2536;
  t3084 = -4.e-6*t2523;
  t3103 = t3060 + t2607;
  t3105 = t3103*t58;
  t3107 = -6.5e-11*t2536*t2930;
  t3110 = t3067 + t2550;
  t3111 = t3110*t3099;
  t3112 = t3105 + t3107 + t3111;
  t3119 = -1.000000000049*t2536*t58;
  t3122 = t3031 + t2607;
  t3124 = t3122*t2930;
  t3127 = t2529 + t3125;
  t3128 = t3127*t3099;
  t3129 = t3119 + t3124 + t3128;
  t3131 = t2523 + t3125;
  t3133 = t3131*t58;
  t3135 = t3084 + t2550;
  t3136 = t3135*t2930;
  t3138 = -1.000000000016*t2536*t3099;
  t3139 = t3133 + t3136 + t3138;
  t3183 = 2.8e-11*t2687;
  t3196 = t2710*t58;
  t3199 = t2721*t2930;
  t3200 = t2727*t3099;
  t3201 = t3196 + t3199 + t3200;
  t3221 = t2769*t58;
  t3224 = t2775*t2930;
  t3226 = t2782*t3099;
  t3227 = t3221 + t3224 + t3226;
  t3187 = -4.e-6*t2675;
  t3247 = t2819*t58;
  t3248 = t2828*t2930;
  t3253 = t2830*t3099;
  t3259 = t3247 + t3248 + t3253;
  t3272 = -2.8e-11*t2687;
  t3203 = -7.e-6*t2675;
  t3234 = 4.e-6*t2675;
  t3230 = 7.e-6*t2675;
  t2518 = 1.5843479999999999e-12*var1[16];
  t2534 = -0.03874900000889869*t2532;
  t2541 = t2535 + t2537;
  t2545 = -0.281211000004*t2541;
  t2556 = t2548 + t2550;
  t2558 = -1.8134809999999998e-6*t2556;
  t2559 = t2518 + t2534 + t2545 + t2558;
  t3316 = -1.*t2574*t1366;
  t3318 = t2566*t1361;
  t3319 = t3316 + t3318;
  t3326 = t2566*t1366;
  t3327 = t2574*t1361;
  t3330 = t3326 + t3327;
  t3333 = -1.*t1355*t417*t2710;
  t3334 = t2721*t3319;
  t3335 = t2727*t3330;
  t3337 = t3333 + t3334 + t3335;
  t3345 = -1.*t2769*t1355*t417;
  t3346 = t2775*t3319;
  t3348 = t2782*t3330;
  t3350 = t3345 + t3346 + t3348;
  t3358 = -1.*t1355*t417*t2819;
  t3359 = t2828*t3319;
  t3361 = t2830*t3330;
  t3362 = t3358 + t3359 + t3361;
  t3413 = -1.*t417*t259*t2574*t1349;
  t3418 = -1.*t2566*t417*t1349*t67;
  t3424 = t3413 + t3418;
  t3428 = t2566*t417*t259*t1349;
  t3431 = -1.*t417*t2574*t1349*t67;
  t3432 = t3428 + t3431;
  t3440 = t2710*t1349*t58;
  t3442 = t2721*t3424;
  t3450 = t2727*t3432;
  t3452 = t3440 + t3442 + t3450;
  t3457 = t2769*t1349*t58;
  t3459 = t2775*t3424;
  t3462 = t2782*t3432;
  t3465 = t3457 + t3459 + t3462;
  t3468 = t2819*t1349*t58;
  t3471 = t2828*t3424;
  t3472 = t2830*t3432;
  t3475 = t3468 + t3471 + t3472;
  t3525 = t2574*t1614;
  t3538 = t2566*t1628;
  t3541 = t3525 + t3538;
  t3547 = t2566*t1614;
  t3549 = -1.*t2574*t1628;
  t3554 = t3547 + t3549;
  t3562 = t2830*t3541;
  t3563 = t2828*t3554;
  t3565 = t3562 + t3563;
  t3573 = t2782*t3541;
  t3580 = t2775*t3554;
  t3581 = t3573 + t3580;
  t3590 = t2727*t3541;
  t3592 = t2721*t3554;
  t3601 = t3590 + t3592;
  t3011 = -0.15121*t2566;
  t3012 = t3011 + t2577;
  t3017 = 0.15121*t2566;
  t3023 = t3017 + t2577;
  t3648 = -1.*t2574*t1727;
  t3649 = t3648 + t3538;
  t3651 = -1.*t2566*t1727;
  t3652 = t3651 + t3549;
  t3657 = t2830*t3649;
  t3658 = t2828*t3652;
  t3659 = t3657 + t3658;
  t3663 = t2782*t3649;
  t3664 = t2775*t3652;
  t3665 = t3663 + t3664;
  t3667 = t2727*t3649;
  t3672 = t2721*t3652;
  t3674 = t3667 + t3672;
  t3032 = t3031 + t2651;
  t3033 = -1.8134809999999998e-6*t3032;
  t3045 = t2529 + t3034;
  t3048 = -0.281211000004*t3045;
  t3052 = -0.03874900000889869*t2536;
  t3054 = 1.5843479999999999e-12 + t3033 + t3048 + t3052;
  t3062 = t3060 + t2651;
  t3063 = -0.038749000006999997*t3062;
  t3068 = t3067 + t2616;
  t3070 = -0.281211000004*t3068;
  t3072 = -1.1787626499999999e-16*t2536;
  t3073 = 3.9608699999999997e-7 + t3063 + t3070 + t3072;
  t3080 = t2523 + t3034;
  t3083 = -0.038749000006999997*t3080;
  t3085 = t3084 + t2616;
  t3090 = -1.8134809999999998e-6*t3085;
  t3091 = -0.2812110000084994*t2536;
  t3093 = -2.7726089999999997e-12 + t3083 + t3090 + t3091;
  t3714 = t2566*t1727;
  t3717 = t2574*t1628;
  t3719 = t3714 + t3717;
  t3728 = -1.*t417*t3103*t1349;
  t3730 = -6.5e-11*t2536*t3649;
  t3740 = t3110*t3719;
  t3748 = t3728 + t3730 + t3740;
  t3754 = 1.000000000049*t417*t2536*t1349;
  t3759 = t3122*t3649;
  t3760 = t3127*t3719;
  t3764 = t3754 + t3759 + t3760;
  t3767 = -1.*t417*t3131*t1349;
  t3772 = t3135*t3649;
  t3775 = -1.000000000016*t2536*t3719;
  t3786 = t3767 + t3772 + t3775;
  t3184 = t2675 + t3183;
  t3186 = -0.038575000014*t3184;
  t3188 = t3187 + t2813;
  t3190 = -3.367757e-6*t3188;
  t3192 = -0.5031510000160505*t2687;
  t3195 = -1.9784030000000015e-12 + t3186 + t3190 + t3192;
  t3204 = t3203 + t2690;
  t3212 = -3.367757e-6*t3204;
  t3213 = t2676 + t3183;
  t3215 = -0.5031510000080001*t3213;
  t3218 = -0.03857500001589017*t2687;
  t3220 = 1.1305160000000008e-12 + t3212 + t3215 + t3218;
  t3231 = t3230 + t2690;
  t3232 = -0.038575000014*t3231;
  t3237 = t3234 + t2813;
  t3240 = -0.5031510000080001*t3237;
  t3243 = -2.18904205e-16*t2687;
  t3246 = 2.826290000000002e-7 + t3232 + t3240 + t3243;
  t3850 = -1.*t417*t2710*t1349;
  t3851 = t2721*t3649;
  t3856 = t2727*t3719;
  t3858 = t3850 + t3851 + t3856;
  t3275 = t2675 + t3272;
  t3862 = -1.*t2769*t417*t1349;
  t3863 = t2775*t3649;
  t3867 = t2782*t3719;
  t3868 = t3862 + t3863 + t3867;
  t3277 = t3187 + t2756;
  t3872 = -1.*t417*t2819*t1349;
  t3873 = t2828*t3649;
  t3874 = t2830*t3719;
  t3875 = t3872 + t3873 + t3874;
  t3284 = t2676 + t3272;
  t3290 = t3203 + t2810;
  t3296 = t3234 + t2756;
  t3300 = t3230 + t2810;
  t4049 = t1355*t417*t259*t2574;
  t4050 = t2566*t1355*t417*t67;
  t4055 = t4049 + t4050;
  t4061 = -1.*t2566*t1355*t417*t259;
  t4067 = t1355*t417*t2574*t67;
  t4069 = t4061 + t4067;
  t4080 = -1.*t1355*t2710*t58;
  t4082 = t2721*t4055;
  t4083 = t2727*t4069;
  t4086 = t4080 + t4082 + t4083;
  t4093 = -1.*t2769*t1355*t58;
  t4099 = t2775*t4055;
  t4101 = t2782*t4069;
  t4103 = t4093 + t4099 + t4101;
  t4106 = -1.*t1355*t2819*t58;
  t4108 = t2828*t4055;
  t4110 = t2830*t4069;
  t4118 = t4106 + t4108 + t4110;
  t4183 = t2574*t1366;
  t4185 = t2566*t2189;
  t4188 = t4183 + t4185;
  t4190 = -1.*t2574*t2189;
  t4194 = t3326 + t4190;
  t4197 = t2830*t4188;
  t4199 = t2828*t4194;
  t4200 = t4197 + t4199;
  t4205 = t2782*t4188;
  t4207 = t2775*t4194;
  t4211 = t4205 + t4207;
  t4216 = t2727*t4188;
  t4220 = t2721*t4194;
  t4224 = t4216 + t4220;
  t4289 = -1.*t2574*t2292;
  t4291 = t4289 + t4185;
  t4294 = -1.*t2566*t2292;
  t4298 = t4294 + t4190;
  t4303 = t2830*t4291;
  t4304 = t2828*t4298;
  t4305 = t4303 + t4304;
  t4315 = t2782*t4291;
  t4322 = t2775*t4298;
  t4324 = t4315 + t4322;
  t4329 = t2727*t4291;
  t4331 = t2721*t4298;
  t4332 = t4329 + t4331;
  t4372 = t2566*t2292;
  t4375 = t2574*t2189;
  t4377 = t4372 + t4375;
  t4383 = t1355*t417*t3103;
  t4385 = -6.5e-11*t2536*t4291;
  t4386 = t3110*t4377;
  t4388 = t4383 + t4385 + t4386;
  t4393 = -1.000000000049*t1355*t417*t2536;
  t4394 = t3122*t4291;
  t4405 = t3127*t4377;
  t4407 = t4393 + t4394 + t4405;
  t4418 = t1355*t417*t3131;
  t4419 = t3135*t4291;
  t4420 = -1.000000000016*t2536*t4377;
  t4421 = t4418 + t4419 + t4420;
  t4464 = t1355*t417*t2710;
  t4468 = t2721*t4291;
  t4470 = t2727*t4377;
  t4475 = t4464 + t4468 + t4470;
  t4478 = t2769*t1355*t417;
  t4481 = t2775*t4291;
  t4483 = t2782*t4377;
  t4485 = t4478 + t4481 + t4483;
  t4488 = t1355*t417*t2819;
  t4490 = t2828*t4291;
  t4492 = t2830*t4377;
  t4494 = t4488 + t4490 + t4492;
  p_output1[0]=1.;
  p_output1[1]=t327*t361 + t372*t411 + t417*t432 + t475*t494 + t513*t518 + t550*t571 - 1.*t259*t303*t58 - 0.03875*(t487*t513 + t481*t550 + 4.e-6*t475*t582) + 0.14871*(4.e-6*t487*t513 + 4.e-6*t550*t582 + t475*t592) + 0.80321*(-4.e-6*t475*t487 - 1.*t487*t550 + t513*t641) + t223*t58*t67;
  p_output1[2]=-1.*t223*t259*t417 - 1.*t303*t417*t67 + t716 + t756 + t782 + t814 + t829 + t875 + t922 + t955;
  p_output1[3]=t716 + t756 + t782 + t814 + t829 + t875 + t922 + t955 - 1.*t417*t67*t963 + t259*t417*t974;
  p_output1[4]=t1046*t1057 + t1085*t494 + t1107*t518 + t1120*t571 + t1004*t58 - 0.03875*(t1120*t481 + t1107*t487 + 4.e-6*t1085*t582) + 0.14871*(4.e-6*t1107*t487 + 4.e-6*t1120*t582 + t1085*t592) + 0.80321*(-4.e-6*t1085*t487 - 1.*t1120*t487 + t1107*t641) + t1022*t752;
  p_output1[5]=t1223*t1231 + t1247*t1259 + t1266*t1278 - 0.03875*(t1266*t481 - 1.*t1223*t487 - 4.e-6*t1247*t487) + 0.14871*(4.e-6*t1266*t481 - 4.e-6*t1223*t487 - 1.6e-11*t1247*t487) + 0.80321*(-1.*t1223*t481 - 4.e-6*t1247*t481 - 1.000000000016*t1266*t487);
  p_output1[6]=1.;
  p_output1[7]=t1361*t223 + t1366*t303 + t1382*t361 + t1393*t411 - 1.*t1355*t417*t432 + t1402*t494 + t1409*t518 + t1432*t571 - 0.03875*(t1432*t481 + t1409*t487 + 4.e-6*t1402*t582) + 0.14871*(4.e-6*t1409*t487 + 4.e-6*t1432*t582 + t1402*t592) + 0.80321*(-4.e-6*t1402*t487 - 1.*t1432*t487 + t1409*t641);
  p_output1[8]=t1493*t361 + t1497*t411 + t1349*t259*t303*t417 + t1516*t494 + t1527*t518 + t1545*t571 + t1349*t432*t58 - 0.03875*(t1545*t481 + t1527*t487 + 4.e-6*t1516*t582) + 0.14871*(4.e-6*t1527*t487 + 4.e-6*t1545*t582 + t1516*t592) + 0.80321*(-4.e-6*t1516*t487 - 1.*t1545*t487 + t1527*t641) - 1.*t1349*t223*t417*t67;
  p_output1[9]=t1614*t223 + t1628*t303 + t1635*t361 + t1640*t411 + t1652*t494 + t1665*t518 + t1670*t571 - 0.03875*(t1670*t481 + t1665*t487 + 4.e-6*t1652*t582) + 0.14871*(4.e-6*t1665*t487 + 4.e-6*t1670*t582 + t1652*t592) + 0.80321*(-4.e-6*t1652*t487 - 1.*t1670*t487 + t1665*t641);
  p_output1[10]=t1737*t361 + t1747*t411 + t1767*t494 + t1787*t518 + t1802*t571 - 0.03875*(t1802*t481 + t1787*t487 + 4.e-6*t1767*t582) + 0.14871*(4.e-6*t1787*t487 + 4.e-6*t1802*t582 + t1767*t592) + 0.80321*(-4.e-6*t1767*t487 - 1.*t1802*t487 + t1787*t641) + t1628*t963 + t1727*t974;
  p_output1[11]=t1022*t1747 + t1057*t1850 - 1.*t1004*t1349*t417 + t1868*t494 + t1878*t518 + t1890*t571 - 0.03875*(t1890*t481 + t1878*t487 + 4.e-6*t1868*t582) + 0.14871*(4.e-6*t1878*t487 + 4.e-6*t1890*t582 + t1868*t592) + 0.80321*(-4.e-6*t1868*t487 - 1.*t1890*t487 + t1878*t641);
  p_output1[12]=t1231*t1954 + t1259*t1965 + t1278*t1975 - 0.03875*(t2003 + t2009 + t1975*t481) + 0.14871*(4.e-6*t1975*t481 - 4.e-6*t1954*t487 - 1.6e-11*t1965*t487) + 0.80321*(-1.*t1954*t481 - 4.e-6*t1965*t481 - 1.000000000016*t1975*t487);
  p_output1[13]=1.;
  p_output1[14]=t1628*t223 + t1727*t303 + t1747*t361 + t1850*t411 - 1.*t1349*t417*t432 + t1965*t494 + t1975*t518 + t1954*t571 - 0.03875*(t1954*t481 + t1975*t487 + 4.e-6*t1965*t582) + 0.14871*(4.e-6*t1975*t487 + 4.e-6*t1954*t582 + t1965*t592) + 0.80321*(t2003 + t2009 + t1975*t641);
  p_output1[15]=t2103*t361 + t2119*t411 - 1.*t1355*t259*t303*t417 + t2132*t494 + t2143*t518 + t2153*t571 - 1.*t1355*t432*t58 - 0.03875*(t2153*t481 + t2143*t487 + 4.e-6*t2132*t582) + 0.14871*(4.e-6*t2143*t487 + 4.e-6*t2153*t582 + t2132*t592) + 0.80321*(-4.e-6*t2132*t487 - 1.*t2153*t487 + t2143*t641) + t1355*t223*t417*t67;
  p_output1[16]=t1366*t223 + t2189*t303 + t2194*t361 + t2205*t411 + t2212*t494 + t2219*t518 + t2231*t571 - 0.03875*(t2231*t481 + t2219*t487 + 4.e-6*t2212*t582) + 0.14871*(4.e-6*t2219*t487 + 4.e-6*t2231*t582 + t2212*t592) + 0.80321*(-4.e-6*t2212*t487 - 1.*t2231*t487 + t2219*t641);
  p_output1[17]=t2296*t361 + t2304*t411 + t2312*t494 + t2317*t518 + t2327*t571 - 0.03875*(t2327*t481 + t2317*t487 + 4.e-6*t2312*t582) + 0.14871*(4.e-6*t2317*t487 + 4.e-6*t2327*t582 + t2312*t592) + 0.80321*(-4.e-6*t2312*t487 - 1.*t2327*t487 + t2317*t641) + t2189*t963 + t2292*t974;
  p_output1[18]=t1022*t2304 + t1057*t2375 + t1004*t1355*t417 + t2380*t494 + t2386*t518 + t2394*t571 - 0.03875*(t2394*t481 + t2386*t487 + 4.e-6*t2380*t582) + 0.14871*(4.e-6*t2386*t487 + 4.e-6*t2394*t582 + t2380*t592) + 0.80321*(-4.e-6*t2380*t487 - 1.*t2394*t487 + t2386*t641);
  p_output1[19]=t1231*t2439 + t1259*t2463 + t1278*t2468 - 0.03875*(t2468*t481 - 1.*t2439*t487 - 4.e-6*t2463*t487) + 0.14871*(4.e-6*t2468*t481 - 4.e-6*t2439*t487 - 1.6e-11*t2463*t487) + 0.80321*(-1.*t2439*t481 - 4.e-6*t2463*t481 - 1.000000000016*t2468*t487);
  p_output1[20]=1.;
  p_output1[21]=t2628*t2632 + t2658*t2663 + t2707*t2732 + t2763*t2788 + t2817*t2838 - 0.148715*(t2732*t2844 + t2788*t2853 + t2838*t2862) - 0.038576*(t2732*t2876 + t2788*t2884 + t2838*t2886) - 0.80315*(t2732*t2893 + t2788*t2901 + t2838*t2904) + t2559*t417 - 1.*t2585*t259*t58 + t2595*t58*t67;
  p_output1[22]=t2933 + t2946 + t2953 + t2963 + t2972 + t2981 + t2999 + t3005 - 1.*t259*t2595*t417 - 1.*t2585*t417*t67;
  p_output1[23]=t2933 + t2946 + t2953 + t2963 + t2972 + t2981 + t2999 + t3005 + t259*t3012*t417 - 1.*t3023*t417*t67;
  p_output1[24]=t2930*t3073 + t3093*t3099 + t2817*t3112 + t2763*t3129 + t2707*t3139 - 0.148715*(t2862*t3112 + t2853*t3129 + t2844*t3139) - 0.038576*(t2886*t3112 + t2884*t3129 + t2876*t3139) - 0.80315*(t2904*t3112 + t2901*t3129 + t2893*t3139) + t3054*t58;
  p_output1[25]=t3195*t3201 + t3220*t3227 + t3246*t3259 - 0.80315*(-1.000000000016*t2687*t3201 + t3227*t3275 + t3259*t3277) - 0.038576*(-1.000000000049*t2687*t3227 + t3201*t3284 + t3259*t3290) - 0.148715*(-6.5e-11*t2687*t3259 + t3201*t3296 + t3227*t3300);
  p_output1[26]=1.;
  p_output1[27]=t1366*t2585 + t1361*t2595 + t2628*t3319 + t2658*t3330 + t2707*t3337 + t2763*t3350 + t2817*t3362 - 0.148715*(t2844*t3337 + t2853*t3350 + t2862*t3362) - 0.038576*(t2876*t3337 + t2884*t3350 + t2886*t3362) - 0.80315*(t2893*t3337 + t2901*t3350 + t2904*t3362) - 1.*t1355*t2559*t417;
  p_output1[28]=t2628*t3424 + t2658*t3432 + t2707*t3452 + t2763*t3465 + t2817*t3475 - 0.148715*(t2844*t3452 + t2853*t3465 + t2862*t3475) - 0.038576*(t2876*t3452 + t2884*t3465 + t2886*t3475) - 0.80315*(t2893*t3452 + t2901*t3465 + t2904*t3475) + t1349*t2585*t259*t417 + t1349*t2559*t58 - 1.*t1349*t2595*t417*t67;
  p_output1[29]=t1628*t2585 + t1614*t2595 + t2658*t3541 + t2628*t3554 + t2817*t3565 + t2763*t3581 + t2707*t3601 - 0.148715*(t2862*t3565 + t2853*t3581 + t2844*t3601) - 0.038576*(t2886*t3565 + t2884*t3581 + t2876*t3601) - 0.80315*(t2904*t3565 + t2901*t3581 + t2893*t3601);
  p_output1[30]=t1727*t3012 + t1628*t3023 + t2658*t3649 + t2628*t3652 + t2817*t3659 + t2763*t3665 + t2707*t3674 - 0.148715*(t2862*t3659 + t2853*t3665 + t2844*t3674) - 0.038576*(t2886*t3659 + t2884*t3665 + t2876*t3674) - 0.80315*(t2904*t3659 + t2901*t3665 + t2893*t3674);
  p_output1[31]=t3073*t3649 + t3093*t3719 + t2817*t3748 + t2763*t3764 + t2707*t3786 - 0.148715*(t2862*t3748 + t2853*t3764 + t2844*t3786) - 0.038576*(t2886*t3748 + t2884*t3764 + t2876*t3786) - 0.80315*(t2904*t3748 + t2901*t3764 + t2893*t3786) - 1.*t1349*t3054*t417;
  p_output1[32]=t3195*t3858 + t3220*t3868 + t3246*t3875 - 0.148715*(t3296*t3858 + t3300*t3868 - 6.5e-11*t2687*t3875) - 0.80315*(-1.000000000016*t2687*t3858 + t3275*t3868 + t3277*t3875) - 0.038576*(t3284*t3858 - 1.000000000049*t2687*t3868 + t3290*t3875);
  p_output1[33]=1.;
  p_output1[34]=t1727*t2585 + t1628*t2595 + t2628*t3649 + t2658*t3719 + t2707*t3858 + t2763*t3868 + t2817*t3875 - 0.148715*(t2844*t3858 + t2853*t3868 + t2862*t3875) - 0.038576*(t2876*t3858 + t2884*t3868 + t2886*t3875) - 0.80315*(t2893*t3858 + t2901*t3868 + t2904*t3875) - 1.*t1349*t2559*t417;
  p_output1[35]=t2628*t4055 + t2658*t4069 + t2707*t4086 + t2763*t4103 + t2817*t4118 - 0.148715*(t2844*t4086 + t2853*t4103 + t2862*t4118) - 0.038576*(t2876*t4086 + t2884*t4103 + t2886*t4118) - 0.80315*(t2893*t4086 + t2901*t4103 + t2904*t4118) - 1.*t1355*t2585*t259*t417 - 1.*t1355*t2559*t58 + t1355*t2595*t417*t67;
  p_output1[36]=t2189*t2585 + t1366*t2595 + t2658*t4188 + t2628*t4194 + t2817*t4200 + t2763*t4211 + t2707*t4224 - 0.148715*(t2862*t4200 + t2853*t4211 + t2844*t4224) - 0.038576*(t2886*t4200 + t2884*t4211 + t2876*t4224) - 0.80315*(t2904*t4200 + t2901*t4211 + t2893*t4224);
  p_output1[37]=t2292*t3012 + t2189*t3023 + t2658*t4291 + t2628*t4298 + t2817*t4305 + t2763*t4324 + t2707*t4332 - 0.148715*(t2862*t4305 + t2853*t4324 + t2844*t4332) - 0.038576*(t2886*t4305 + t2884*t4324 + t2876*t4332) - 0.80315*(t2904*t4305 + t2901*t4324 + t2893*t4332);
  p_output1[38]=t1355*t3054*t417 + t3073*t4291 + t3093*t4377 + t2817*t4388 + t2763*t4407 + t2707*t4421 - 0.148715*(t2862*t4388 + t2853*t4407 + t2844*t4421) - 0.038576*(t2886*t4388 + t2884*t4407 + t2876*t4421) - 0.80315*(t2904*t4388 + t2901*t4407 + t2893*t4421);
  p_output1[39]=t3195*t4475 + t3220*t4485 + t3246*t4494 - 0.148715*(t3296*t4475 + t3300*t4485 - 6.5e-11*t2687*t4494) - 0.80315*(-1.000000000016*t2687*t4475 + t3275*t4485 + t3277*t4494) - 0.038576*(t3284*t4475 - 1.000000000049*t2687*t4485 + t3290*t4494);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_DiagonalStance.hh"

namespace DiagonalStance
{

void J_output_boundary_DiagonalStance_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
