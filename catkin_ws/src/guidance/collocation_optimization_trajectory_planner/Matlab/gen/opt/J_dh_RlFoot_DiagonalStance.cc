/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:33 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t577;
  double t612;
  double t622;
  double t78;
  double t105;
  double t238;
  double t704;
  double t718;
  double t484;
  double t633;
  double t656;
  double t722;
  double t753;
  double t779;
  double t289;
  double t841;
  double t853;
  double t872;
  double t880;
  double t883;
  double t1021;
  double t1030;
  double t1048;
  double t1055;
  double t1071;
  double t1078;
  double t1079;
  double t1203;
  double t486;
  double t540;
  double t805;
  double t823;
  double t837;
  double t888;
  double t904;
  double t926;
  double t961;
  double t970;
  double t1105;
  double t1174;
  double t64;
  double t1208;
  double t1253;
  double t1255;
  double t1260;
  double t1274;
  double t1292;
  double t1295;
  double t1299;
  double t1307;
  double t1330;
  double t25;
  double t1369;
  double t1372;
  double t1377;
  double t1183;
  double t1331;
  double t1340;
  double t1384;
  double t1455;
  double t1358;
  double t1393;
  double t1425;
  double t10;
  double t1469;
  double t1476;
  double t1477;
  double t1480;
  double t1481;
  double t1489;
  double t1500;
  double t1513;
  double t1522;
  double t1528;
  double t1543;
  double t1548;
  double t1555;
  double t1567;
  double t1570;
  double t1574;
  double t1577;
  double t1584;
  double t1638;
  double t1639;
  double t1656;
  double t1676;
  double t1677;
  double t1682;
  double t1686;
  double t1692;
  double t1695;
  double t1699;
  double t1707;
  double t1708;
  double t1719;
  double t1723;
  double t1726;
  double t1742;
  double t1748;
  double t1750;
  double t1753;
  double t1754;
  double t1910;
  double t1824;
  double t1835;
  double t1839;
  double t1858;
  double t1882;
  double t1884;
  double t1889;
  double t1898;
  double t1902;
  double t1905;
  double t1911;
  double t1912;
  double t1914;
  double t1937;
  double t1947;
  double t1956;
  double t1995;
  double t2002;
  double t2011;
  double t2057;
  double t2061;
  double t2065;
  double t2070;
  double t2085;
  double t2095;
  double t2096;
  double t2097;
  double t2198;
  double t2228;
  double t2237;
  double t2244;
  double t2249;
  double t2257;
  double t2259;
  double t2262;
  double t2270;
  double t2272;
  double t2273;
  double t2284;
  double t2291;
  double t2303;
  double t2304;
  double t2305;
  double t2321;
  double t2325;
  double t2350;
  double t2359;
  double t2363;
  double t2373;
  double t2381;
  double t2382;
  double t2384;
  double t2392;
  double t2395;
  double t2404;
  double t2415;
  double t2420;
  double t2435;
  double t2436;
  double t2157;
  double t2509;
  double t2467;
  double t2478;
  double t2484;
  double t2486;
  double t2490;
  double t2495;
  double t2498;
  double t2513;
  double t2515;
  double t2516;
  double t2518;
  double t2523;
  double t2526;
  double t2538;
  double t2540;
  double t2541;
  double t2547;
  double t2553;
  double t2556;
  double t2559;
  double t2563;
  double t2566;
  double t2568;
  double t1895;
  double t1928;
  double t2020;
  double t2042;
  double t2056;
  double t2083;
  double t2098;
  double t2101;
  double t2103;
  double t2106;
  double t2108;
  double t2112;
  double t2115;
  double t2117;
  double t2126;
  double t2133;
  double t2149;
  double t2151;
  double t2184;
  double t2189;
  double t2206;
  double t2218;
  double t2274;
  double t2376;
  double t2439;
  double t2440;
  double t2481;
  double t2528;
  double t2575;
  double t2576;
  double t2581;
  double t2582;
  double t2583;
  double t2586;
  double t2587;
  double t2598;
  double t2602;
  double t2672;
  double t2675;
  double t2679;
  double t1683;
  double t1696;
  double t1711;
  double t1714;
  double t1747;
  double t1760;
  double t1761;
  double t1764;
  double t1778;
  double t1780;
  double t1792;
  double t1796;
  double t1798;
  double t2687;
  double t2691;
  double t2692;
  double t2631;
  double t2634;
  double t2636;
  double t2707;
  double t2708;
  double t2709;
  double t2442;
  double t2606;
  double t2626;
  double t1717;
  double t1810;
  double t1819;
  double t2714;
  double t2718;
  double t2719;
  double t2804;
  double t2805;
  double t2811;
  double t2768;
  double t2769;
  double t2770;
  double t2710;
  double t2712;
  double t2713;
  double t2720;
  double t2848;
  double t2854;
  double t2856;
  double t2772;
  double t2841;
  double t2862;
  double t2835;
  double t2837;
  double t2838;
  double t2940;
  double t2965;
  double t2927;
  double t2934;
  double t2935;
  double t2722;
  double t2731;
  double t2734;
  double t2778;
  double t2783;
  double t2790;
  double t3077;
  double t3082;
  double t3090;
  double t3092;
  double t3094;
  double t3119;
  double t3176;
  double t3177;
  double t3179;
  double t3180;
  double t3184;
  double t3196;
  double t3203;
  double t3145;
  double t3146;
  double t3147;
  double t2889;
  double t2890;
  double t2895;
  double t3110;
  double t3111;
  double t3112;
  double t2977;
  double t2980;
  double t2983;
  double t3227;
  double t3228;
  double t3237;
  double t3238;
  double t3239;
  double t3221;
  double t3224;
  double t3255;
  double t3256;
  double t3259;
  double t3240;
  double t3250;
  double t3241;
  double t3243;
  double t3285;
  double t3295;
  double t3286;
  double t3290;
  double t3417;
  double t3443;
  double t3446;
  double t3450;
  double t3410;
  double t3413;
  double t3427;
  double t3497;
  double t3506;
  double t3508;
  double t3512;
  double t3401;
  double t3404;
  double t3392;
  double t3394;
  double t3621;
  double t3440;
  double t3449;
  double t3457;
  double t3458;
  double t3548;
  double t3552;
  double t3554;
  double t3555;
  double t3573;
  double t3577;
  double t3583;
  double t3588;
  double t3594;
  double t3625;
  double t3626;
  double t3627;
  double t3630;
  double t3647;
  double t3649;
  double t3652;
  double t3664;
  double t3665;
  double t3679;
  double t3680;
  double t3683;
  double t3684;
  double t3689;
  double t3691;
  double t3692;
  double t3694;
  double t3695;
  double t3545;
  double t3668;
  double t3604;
  double t3614;
  double t3616;
  double t3618;
  double t3532;
  double t3538;
  double t3542;
  double t3543;
  double t3720;
  double t3741;
  double t3726;
  double t3729;
  double t3732;
  double t3736;
  double t3705;
  double t3708;
  double t3710;
  double t3718;
  double t3814;
  double t3822;
  double t3824;
  double t3830;
  double t3836;
  double t3847;
  double t3398;
  double t3399;
  double t3405;
  double t3406;
  double t3408;
  double t3415;
  double t3428;
  double t3435;
  double t3974;
  double t3981;
  double t3982;
  double t3967;
  double t3968;
  double t3969;
  double t3945;
  double t3960;
  double t3961;
  double t3963;
  double t3970;
  double t3986;
  double t3990;
  double t4019;
  double t4020;
  double t4022;
  double t4027;
  double t4029;
  double t4032;
  double t3874;
  double t3875;
  double t3877;
  double t3888;
  double t3889;
  double t3900;
  double t3791;
  double t3792;
  double t3798;
  double t3803;
  double t3804;
  double t3811;
  double t4074;
  double t4080;
  double t4085;
  double t4056;
  double t4066;
  double t4070;
  double t4118;
  double t4119;
  double t4123;
  double t4125;
  double t4126;
  double t4127;
  double t4154;
  double t4165;
  double t4166;
  double t4089;
  double t4102;
  double t4105;
  double t4116;
  double t4124;
  double t4206;
  double t4210;
  double t4212;
  double t4176;
  double t4177;
  double t4197;
  double t4200;
  double t4204;
  double t4236;
  double t4237;
  double t4238;
  double t4252;
  double t4254;
  double t4255;
  double t4335;
  double t4316;
  double t4323;
  double t4325;
  double t4329;
  double t4331;
  double t4338;
  double t4343;
  double t4351;
  double t4352;
  double t4359;
  double t4360;
  double t4393;
  double t4418;
  double t4386;
  double t4387;
  double t4388;
  double t4394;
  double t4395;
  double t4397;
  double t4398;
  double t4400;
  double t4403;
  double t4405;
  double t4407;
  double t4412;
  double t4413;
  double t4414;
  double t4420;
  double t4426;
  double t4428;
  double t4431;
  double t4435;
  double t4437;
  double t4445;
  double t4447;
  double t4448;
  double t4449;
  double t4450;
  double t4451;
  double t4454;
  double t4456;
  double t4463;
  double t4517;
  double t4518;
  double t4524;
  double t4525;
  double t4532;
  double t4533;
  double t4535;
  double t4539;
  double t4543;
  double t4546;
  double t4410;
  double t4444;
  double t4471;
  double t4473;
  double t4478;
  double t4483;
  double t4490;
  double t4497;
  double t4506;
  double t4507;
  double t4508;
  double t4509;
  double t4584;
  double t4590;
  double t4592;
  double t4599;
  double t4600;
  double t4609;
  double t4611;
  double t4627;
  double t4628;
  double t4631;
  double t4632;
  double t3462;
  double t3472;
  double t3473;
  double t4550;
  double t4551;
  double t4558;
  double t4559;
  double t3513;
  double t3514;
  double t3517;
  double t4689;
  double t4690;
  double t4696;
  double t4700;
  double t4703;
  double t4709;
  double t4711;
  double t4715;
  double t4716;
  double t4718;
  double t4721;
  double t4722;
  double t4728;
  double t4729;
  double t4731;
  double t4753;
  double t4754;
  double t4759;
  double t4764;
  double t4765;
  double t4767;
  double t4775;
  double t4498;
  double t4560;
  double t4564;
  double t4565;
  double t4566;
  double t4568;
  double t4529;
  double t4538;
  double t4547;
  double t4548;
  double t4578;
  double t4634;
  double t4864;
  double t4866;
  double t4873;
  double t4878;
  double t4889;
  double t4891;
  double t4595;
  double t4606;
  double t4613;
  double t4614;
  double t4635;
  double t4644;
  double t4651;
  double t4654;
  double t3762;
  double t3764;
  double t3769;
  double t3773;
  double t3780;
  double t3787;
  double t4334;
  double t4350;
  double t4362;
  double t4366;
  double t4376;
  double t4378;
  double t4379;
  double t4380;
  double t5029;
  double t5031;
  double t5038;
  double t5014;
  double t5016;
  double t5017;
  double t4991;
  double t4998;
  double t5002;
  double t5007;
  double t5025;
  double t5044;
  double t5047;
  double t5061;
  double t5064;
  double t5067;
  double t5072;
  double t5073;
  double t5077;
  double t4909;
  double t4911;
  double t4913;
  double t4903;
  double t4904;
  double t4907;
  double t5105;
  double t5109;
  double t5112;
  double t5123;
  double t5131;
  double t5134;
  double t4956;
  double t4957;
  double t4959;
  double t4941;
  double t4949;
  double t4951;
  double t5190;
  double t5192;
  double t5193;
  double t5155;
  double t5163;
  double t5164;
  double t5135;
  double t5165;
  double t5138;
  double t5141;
  double t5147;
  double t5180;
  double t5196;
  double t5217;
  double t5218;
  double t5219;
  double t5222;
  double t5224;
  double t5227;
  double t5182;
  double t5184;
  double t5185;
  double t5253;
  double t5257;
  double t5261;
  double t5230;
  double t5232;
  double t5235;
  double t1612;
  double t1614;
  double t1622;
  double t2752;
  double t2753;
  double t2754;
  double t5305;
  double t5306;
  double t5310;
  double t2646;
  double t2659;
  double t2670;
  double t5481;
  double t5509;
  double t5560;
  double t5569;
  double t5613;
  double t5621;
  double t5483;
  double t5484;
  double t5486;
  double t5517;
  double t5522;
  double t5523;
  double t5586;
  double t5588;
  double t5594;
  double t5597;
  double t5602;
  double t5603;
  double t5758;
  double t5770;
  double t5784;
  double t5786;
  double t5899;
  double t5905;
  double t5927;
  double t5935;
  double t4286;
  double t4295;
  double t4296;
  double t3965;
  double t4010;
  double t4011;
  double t6061;
  double t6062;
  double t4228;
  double t4229;
  double t4230;
  double t6074;
  double t6083;
  double t5849;
  double t5855;
  double t5868;
  double t5878;
  double t5884;
  double t5885;
  double t6261;
  double t6269;
  double t6282;
  double t6284;
  double t6294;
  double t6302;
  double t6305;
  double t6307;
  double t6310;
  double t6311;
  double t6315;
  double t6328;
  double t6331;
  double t6332;
  double t6336;
  double t6341;
  double t6344;
  double t6350;
  double t6353;
  double t6355;
  double t6360;
  double t6369;
  double t6172;
  double t6178;
  double t5948;
  double t5956;
  double t5959;
  double t5963;
  double t5983;
  double t5985;
  double t6204;
  double t6218;
  double t5267;
  double t5268;
  double t5272;
  double t6515;
  double t6520;
  double t5237;
  double t5239;
  double t5240;
  double t5011;
  double t5052;
  double t5053;
  double t6530;
  double t6547;
  double t5436;
  double t5437;
  double t5439;
  double t6736;
  double t6757;
  double t6816;
  double t6818;
  double t6823;
  double t6825;
  double t6737;
  double t6739;
  double t6741;
  double t6758;
  double t6763;
  double t6769;
  double t6806;
  double t6809;
  double t6810;
  double t6830;
  double t6831;
  double t6834;
  double t6967;
  double t6969;
  double t6974;
  double t6980;
  double t7092;
  double t7097;
  double t7115;
  double t7127;
  double t7219;
  double t7224;
  double t7232;
  double t7237;
  double t7054;
  double t7055;
  double t7058;
  double t7066;
  double t7072;
  double t7077;
  double t7336;
  double t7337;
  double t7338;
  double t7339;
  double t7344;
  double t7345;
  double t7347;
  double t7348;
  double t7349;
  double t7350;
  double t7351;
  double t7353;
  double t7355;
  double t7356;
  double t7357;
  double t7364;
  double t7370;
  double t7374;
  double t7377;
  double t7378;
  double t7380;
  double t7381;
  double t7287;
  double t7292;
  double t7144;
  double t7146;
  double t7147;
  double t7152;
  double t7156;
  double t7157;
  double t7309;
  double t7317;
  double t7470;
  double t7473;
  double t7490;
  double t7497;
  double t6705;
  double t6707;
  double t6708;
  double t6656;
  t577 = Cos(var1[14]);
  t612 = -1.*t577;
  t622 = 1. + t612;
  t78 = Cos(var1[13]);
  t105 = -1.*t78;
  t238 = 1. + t105;
  t704 = Sin(var1[14]);
  t718 = 4.e-6*t704;
  t484 = Sin(var1[13]);
  t633 = 1.000000000016*t622;
  t656 = -7.e-6*t622;
  t722 = t656 + t718;
  t753 = -7.e-6*t722;
  t779 = -1. + t633 + t753;
  t289 = -7.e-6*t238;
  t841 = -6.5e-11*t622;
  t853 = 1. + t841;
  t872 = -7.e-6*t853;
  t880 = 7.e-6*t622;
  t883 = t872 + t880 + t718;
  t1021 = -2.8e-11*t622;
  t1030 = -1. + t577;
  t1048 = 4.e-6*t1030;
  t1055 = -7.e-6*t704;
  t1071 = t1048 + t1055;
  t1078 = -7.e-6*t1071;
  t1079 = t1021 + t1078 + t704;
  t1203 = Sin(var1[12]);
  t486 = -4.e-6*t484;
  t540 = t289 + t486;
  t805 = t540*t779;
  t823 = -6.5e-11*t238;
  t837 = 1. + t823;
  t888 = t837*t883;
  t904 = -1. + t78;
  t926 = 4.e-6*t904;
  t961 = 7.e-6*t484;
  t970 = t926 + t961;
  t1105 = t970*t1079;
  t1174 = t805 + t888 + t1105;
  t64 = Cos(var1[12]);
  t1208 = -1.000000000016*t238;
  t1253 = 1. + t1208;
  t1255 = t1253*t779;
  t1260 = 4.e-6*t484;
  t1274 = t289 + t1260;
  t1292 = t1274*t883;
  t1295 = 2.8e-11*t238;
  t1299 = t1295 + t484;
  t1307 = t1299*t1079;
  t1330 = t1255 + t1292 + t1307;
  t25 = Cos(var1[5]);
  t1369 = -1.*t1203*t1174;
  t1372 = t64*t1330;
  t1377 = t1369 + t1372;
  t1183 = t64*t1174;
  t1331 = t1203*t1330;
  t1340 = t1183 + t1331;
  t1384 = Sin(var1[5]);
  t1455 = Cos(var1[3]);
  t1358 = t25*t1340;
  t1393 = t1377*t1384;
  t1425 = t1358 + t1393;
  t10 = Sin(var1[3]);
  t1469 = Cos(var1[4]);
  t1476 = -1.*t484;
  t1477 = t1295 + t1476;
  t1480 = t1477*t779;
  t1481 = -7.e-6*t484;
  t1489 = t926 + t1481;
  t1500 = t1489*t883;
  t1513 = -1.000000000049*t238;
  t1522 = 1. + t1513;
  t1528 = t1522*t1079;
  t1543 = t1480 + t1500 + t1528;
  t1548 = t1469*t1543;
  t1555 = Sin(var1[4]);
  t1567 = t25*t1377;
  t1570 = -1.*t1340*t1384;
  t1574 = t1567 + t1570;
  t1577 = -1.*t1555*t1574;
  t1584 = t1548 + t1577;
  t1638 = -1.*t1543*t1555;
  t1639 = -1.*t1469*t1574;
  t1656 = t1638 + t1639;
  t1676 = -1.000000000049*t622;
  t1677 = 4.e-6*t1071;
  t1682 = 1. + t1676 + t1677;
  t1686 = 4.e-6*t853;
  t1692 = 7.e-6*t704;
  t1695 = t1686 + t1048 + t1692;
  t1699 = 2.8e-11*t622;
  t1707 = 4.e-6*t722;
  t1708 = t1699 + t1707 + t704;
  t1719 = t1299*t1682;
  t1723 = t1274*t1695;
  t1726 = t1253*t1708;
  t1742 = t1719 + t1723 + t1726;
  t1748 = t970*t1682;
  t1750 = t837*t1695;
  t1753 = t540*t1708;
  t1754 = t1748 + t1750 + t1753;
  t1910 = -1.*t704;
  t1824 = 4.e-6*t622;
  t1835 = t1824 + t1055;
  t1839 = 4.e-6*t1835;
  t1858 = -4.e-6*t704;
  t1882 = t656 + t1858;
  t1884 = -7.e-6*t1882;
  t1889 = 1. + t841 + t1839 + t1884;
  t1898 = 1.000000000049*t622;
  t1902 = -1. + t1898;
  t1905 = 4.e-6*t1902;
  t1911 = t1699 + t1910;
  t1912 = -7.e-6*t1911;
  t1914 = t1905 + t1048 + t1912 + t1055;
  t1937 = -1.000000000016*t622;
  t1947 = 1. + t1937;
  t1956 = -7.e-6*t1947;
  t1995 = t1021 + t1910;
  t2002 = 4.e-6*t1995;
  t2011 = t1956 + t656 + t2002 + t718;
  t2057 = t1274*t1889;
  t2061 = t1299*t1914;
  t2065 = t1253*t2011;
  t2070 = t2057 + t2061 + t2065;
  t2085 = t837*t1889;
  t2095 = t970*t1914;
  t2096 = t540*t2011;
  t2097 = t2085 + t2095 + t2096;
  t2198 = -2.8e-11*t238;
  t2228 = -2.598649999999999e-7*var1[14];
  t2237 = 0.148705*t853;
  t2244 = -2.3905277499999995e-16*t622;
  t2249 = -0.038922999986*t1835;
  t2257 = -0.80315*t1882;
  t2259 = t880 + t718;
  t2262 = -0.503149000008*t2259;
  t2270 = t1048 + t1692;
  t2272 = -0.038924*t2270;
  t2273 = t2228 + t2237 + t2244 + t2249 + t2257 + t2262 + t2272;
  t2284 = 1.0394599999999997e-12*var1[14];
  t2291 = 1. + t1676;
  t2303 = -0.038924*t2291;
  t2304 = -0.03892299998790722*t622;
  t2305 = -0.80315*t1911;
  t2321 = 0.148705*t1071;
  t2325 = t1824 + t1692;
  t2350 = -3.6777349999999994e-6*t2325;
  t2359 = t1021 + t704;
  t2363 = -0.503149000008*t2359;
  t2373 = t2284 + t2303 + t2304 + t2305 + t2321 + t2350 + t2363;
  t2381 = 1.8190549999999993e-12*var1[14];
  t2382 = -0.80315*t1947;
  t2384 = -0.5031490000160505*t622;
  t2392 = -0.038922999986*t1995;
  t2395 = t880 + t1858;
  t2404 = -3.6777349999999994e-6*t2395;
  t2415 = 0.148705*t722;
  t2420 = t1699 + t704;
  t2435 = -0.038924*t2420;
  t2436 = t2381 + t2382 + t2384 + t2392 + t2404 + t2415 + t2435;
  t2157 = 4.e-6*t238;
  t2509 = 7.e-6*t238;
  t2467 = -1.*t64;
  t2478 = 1. + t2467;
  t2484 = 0.15121*t1203;
  t2486 = 1.0248489999999998e-12*var1[13];
  t2490 = -0.28120900000849935*t238;
  t2495 = t2198 + t1476;
  t2498 = -0.038748999993*t2495;
  t2513 = t2509 + t486;
  t2515 = -2.123459e-6*t2513;
  t2516 = t1274*t2273;
  t2518 = t1299*t2373;
  t2523 = t1253*t2436;
  t2526 = t2486 + t2490 + t2498 + t2515 + t2516 + t2518 + t2523;
  t2538 = -1.4640699999999997e-7*var1[13];
  t2540 = -1.38024835e-16*t238;
  t2541 = t2157 + t1481;
  t2547 = -0.038748999993*t2541;
  t2553 = t2509 + t1260;
  t2556 = -0.281209000004*t2553;
  t2559 = t837*t2273;
  t2563 = t970*t2373;
  t2566 = t540*t2436;
  t2568 = t2538 + t2540 + t2547 + t2556 + t2559 + t2563 + t2566;
  t1895 = t1489*t1889;
  t1928 = t1522*t1914;
  t2020 = t1477*t2011;
  t2042 = t1895 + t1928 + t2020;
  t2056 = t1469*t2042;
  t2083 = t64*t2070;
  t2098 = -1.*t1203*t2097;
  t2101 = t2083 + t2098;
  t2103 = t25*t2101;
  t2106 = t1203*t2070;
  t2108 = t64*t2097;
  t2112 = t2106 + t2108;
  t2115 = -1.*t2112*t1384;
  t2117 = t2103 + t2115;
  t2126 = -1.*t1555*t2117;
  t2133 = t2056 + t2126;
  t2149 = 5.856279999999999e-13*var1[13];
  t2151 = -0.0387489999948987*t238;
  t2184 = t2157 + t961;
  t2189 = -2.123459e-6*t2184;
  t2206 = t2198 + t484;
  t2218 = -0.281209000004*t2206;
  t2274 = t1489*t2273;
  t2376 = t1522*t2373;
  t2439 = t1477*t2436;
  t2440 = t2149 + t2151 + t2189 + t2218 + t2274 + t2376 + t2439;
  t2481 = -0.15121*t2478;
  t2528 = t64*t2526;
  t2575 = -1.*t1203*t2568;
  t2576 = t2481 + t2484 + t2528 + t2575;
  t2581 = t25*t2576;
  t2582 = 0.15121*t2478;
  t2583 = t1203*t2526;
  t2586 = t64*t2568;
  t2587 = t2582 + t2484 + t2583 + t2586;
  t2598 = -1.*t2587*t1384;
  t2602 = t2581 + t2598;
  t2672 = t1469*t2440;
  t2675 = -1.*t1555*t2602;
  t2679 = t2672 + t2675;
  t1683 = t1522*t1682;
  t1696 = t1489*t1695;
  t1711 = t1477*t1708;
  t1714 = t1683 + t1696 + t1711;
  t1747 = t64*t1742;
  t1760 = -1.*t1203*t1754;
  t1761 = t1747 + t1760;
  t1764 = t25*t1761;
  t1778 = t1203*t1742;
  t1780 = t64*t1754;
  t1792 = t1778 + t1780;
  t1796 = -1.*t1792*t1384;
  t1798 = t1764 + t1796;
  t2687 = t2042*t1555;
  t2691 = t1469*t2117;
  t2692 = t2687 + t2691;
  t2631 = t2440*t1555;
  t2634 = t1469*t2602;
  t2636 = t2631 + t2634;
  t2707 = t1469*t1714;
  t2708 = -1.*t1555*t1798;
  t2709 = t2707 + t2708;
  t2442 = -1.*t2440*t1555;
  t2606 = -1.*t1469*t2602;
  t2626 = t2442 + t2606;
  t1717 = t1714*t1555;
  t1810 = t1469*t1798;
  t1819 = t1717 + t1810;
  t2714 = t25*t2587;
  t2718 = t2576*t1384;
  t2719 = t2714 + t2718;
  t2804 = -1.*t25*t1340;
  t2805 = -1.*t1377*t1384;
  t2811 = t2804 + t2805;
  t2768 = t25*t1792;
  t2769 = t1761*t1384;
  t2770 = t2768 + t2769;
  t2710 = t25*t2112;
  t2712 = t2101*t1384;
  t2713 = t2710 + t2712;
  t2720 = t2713*t2719;
  t2848 = -1.*t25*t2587;
  t2854 = -1.*t2576*t1384;
  t2856 = t2848 + t2854;
  t2772 = -1.*t2770*t2719;
  t2841 = t2713*t2602;
  t2862 = t2117*t2719;
  t2835 = -1.*t25*t2112;
  t2837 = -1.*t2101*t1384;
  t2838 = t2835 + t2837;
  t2940 = -1.*t2770*t2602;
  t2965 = -1.*t1798*t2719;
  t2927 = -1.*t25*t1792;
  t2934 = -1.*t1761*t1384;
  t2935 = t2927 + t2934;
  t2722 = t2692*t2636;
  t2731 = t2133*t2679;
  t2734 = t2720 + t2722 + t2731;
  t2778 = -1.*t1819*t2636;
  t2783 = -1.*t2709*t2679;
  t2790 = t2772 + t2778 + t2783;
  t3077 = 0.15121*t64;
  t3082 = -0.15121*t1203;
  t3090 = -1.*t1203*t2526;
  t3092 = -1.*t64*t2568;
  t3094 = t3077 + t3082 + t3090 + t3092;
  t3119 = t3077 + t2484 + t2528 + t2575;
  t3176 = -1.*t64*t1174;
  t3177 = -1.*t1203*t1330;
  t3179 = t3176 + t3177;
  t3180 = t25*t3179;
  t3184 = t3180 + t2805;
  t3196 = t3179*t1384;
  t3203 = t1567 + t3196;
  t3145 = -1.*t1203*t1742;
  t3146 = -1.*t64*t1754;
  t3147 = t3145 + t3146;
  t2889 = t2042*t2440;
  t2890 = t2117*t2602;
  t2895 = t2889 + t2890 + t2720;
  t3110 = -1.*t1203*t2070;
  t3111 = -1.*t64*t2097;
  t3112 = t3110 + t3111;
  t2977 = -1.*t1714*t2440;
  t2980 = -1.*t1798*t2602;
  t2983 = t2977 + t2980 + t2772;
  t3227 = t3112*t1384;
  t3228 = t2103 + t3227;
  t3237 = t25*t3119;
  t3238 = t3094*t1384;
  t3239 = t3237 + t3238;
  t3221 = t3147*t1384;
  t3224 = t1764 + t3221;
  t3255 = t25*t3094;
  t3256 = -1.*t3119*t1384;
  t3259 = t3255 + t3256;
  t3240 = t2713*t3239;
  t3250 = t3228*t2719;
  t3241 = t25*t3112;
  t3243 = t3241 + t2837;
  t3285 = -1.*t2770*t3239;
  t3295 = -1.*t3224*t2719;
  t3286 = t25*t3147;
  t3290 = t3286 + t2934;
  t3417 = 2.8e-11*t484;
  t3443 = -7.e-6*t78;
  t3446 = t3443 + t486;
  t3450 = t105 + t3417;
  t3410 = 4.e-6*t78;
  t3413 = t3410 + t1481;
  t3427 = t78 + t3417;
  t3497 = t3446*t1889;
  t3506 = -1.000000000049*t484*t1914;
  t3508 = t3450*t2011;
  t3512 = t3497 + t3506 + t3508;
  t3401 = 7.e-6*t78;
  t3404 = t3401 + t486;
  t3392 = -4.e-6*t78;
  t3394 = t3392 + t1481;
  t3621 = -2.8e-11*t484;
  t3440 = -1.000000000049*t484*t1682;
  t3449 = t3446*t1695;
  t3457 = t3450*t1708;
  t3458 = t3440 + t3449 + t3457;
  t3548 = t3443 + t1260;
  t3552 = -0.038748999993*t3548;
  t3554 = t3410 + t961;
  t3555 = -0.281209000004*t3554;
  t3573 = -1.38024835e-16*t484;
  t3577 = -6.5e-11*t484*t2273;
  t3583 = t3404*t2373;
  t3588 = t3394*t2436;
  t3594 = -1.4640699999999997e-7 + t3552 + t3555 + t3573 + t3577 + t3583 + t3588;
  t3625 = t78 + t3621;
  t3626 = -0.281209000004*t3625;
  t3627 = t3401 + t1260;
  t3630 = -2.123459e-6*t3627;
  t3647 = -0.0387489999948987*t484;
  t3649 = t3446*t2273;
  t3652 = -1.000000000049*t484*t2373;
  t3664 = t3450*t2436;
  t3665 = 5.856279999999999e-13 + t3626 + t3630 + t3647 + t3649 + t3652 + t3664;
  t3679 = t105 + t3621;
  t3680 = -0.038748999993*t3679;
  t3683 = t3392 + t961;
  t3684 = -2.123459e-6*t3683;
  t3689 = -0.28120900000849935*t484;
  t3691 = t3413*t2273;
  t3692 = t3427*t2373;
  t3694 = -1.000000000016*t484*t2436;
  t3695 = 1.0248489999999998e-12 + t3680 + t3684 + t3689 + t3691 + t3692 + t3694;
  t3545 = t3512*t2440;
  t3668 = t2042*t3665;
  t3604 = -6.5e-11*t484*t1889;
  t3614 = t3404*t1914;
  t3616 = t3394*t2011;
  t3618 = t3604 + t3614 + t3616;
  t3532 = t3413*t1889;
  t3538 = t3427*t1914;
  t3542 = -1.000000000016*t484*t2011;
  t3543 = t3532 + t3538 + t3542;
  t3720 = -1.*t3458*t2440;
  t3741 = -1.*t1714*t3665;
  t3726 = t3404*t1682;
  t3729 = -6.5e-11*t484*t1695;
  t3732 = t3394*t1708;
  t3736 = t3726 + t3729 + t3732;
  t3705 = t3427*t1682;
  t3708 = t3413*t1695;
  t3710 = -1.000000000016*t484*t1708;
  t3718 = t3705 + t3708 + t3710;
  t3814 = -1.*t1203*t3594;
  t3822 = t64*t3695;
  t3824 = t3814 + t3822;
  t3830 = t64*t3594;
  t3836 = t1203*t3695;
  t3847 = t3830 + t3836;
  t3398 = t3394*t779;
  t3399 = -6.5e-11*t484*t883;
  t3405 = t3404*t1079;
  t3406 = t3398 + t3399 + t3405;
  t3408 = -1.000000000016*t484*t779;
  t3415 = t3413*t883;
  t3428 = t3427*t1079;
  t3435 = t3408 + t3415 + t3428;
  t3974 = t64*t3406;
  t3981 = t1203*t3435;
  t3982 = t3974 + t3981;
  t3967 = -1.*t1203*t3406;
  t3968 = t64*t3435;
  t3969 = t3967 + t3968;
  t3945 = t3450*t779;
  t3960 = t3446*t883;
  t3961 = -1.000000000049*t484*t1079;
  t3963 = t3945 + t3960 + t3961;
  t3970 = t25*t3969;
  t3986 = -1.*t3982*t1384;
  t3990 = t3970 + t3986;
  t4019 = t25*t3982;
  t4020 = t3969*t1384;
  t4022 = t4019 + t4020;
  t4027 = t1469*t3963;
  t4029 = -1.*t1555*t3990;
  t4032 = t4027 + t4029;
  t3874 = t64*t3736;
  t3875 = t1203*t3718;
  t3877 = t3874 + t3875;
  t3888 = -1.*t1203*t3736;
  t3889 = t64*t3718;
  t3900 = t3888 + t3889;
  t3791 = t64*t3618;
  t3792 = t1203*t3543;
  t3798 = t3791 + t3792;
  t3803 = -1.*t1203*t3618;
  t3804 = t64*t3543;
  t3811 = t3803 + t3804;
  t4074 = t25*t3798;
  t4080 = t3811*t1384;
  t4085 = t4074 + t4080;
  t4056 = t25*t3877;
  t4066 = t3900*t1384;
  t4070 = t4056 + t4066;
  t4118 = t25*t3847;
  t4119 = t3824*t1384;
  t4123 = t4118 + t4119;
  t4125 = t25*t3824;
  t4126 = -1.*t3847*t1384;
  t4127 = t4125 + t4126;
  t4154 = t25*t3900;
  t4165 = -1.*t3877*t1384;
  t4166 = t4154 + t4165;
  t4089 = t25*t3811;
  t4102 = -1.*t3798*t1384;
  t4105 = t4089 + t4102;
  t4116 = t4085*t2719;
  t4124 = t2713*t4123;
  t4206 = t3512*t1555;
  t4210 = t1469*t4105;
  t4212 = t4206 + t4210;
  t4176 = -1.*t4070*t2719;
  t4177 = -1.*t2770*t4123;
  t4197 = t3458*t1555;
  t4200 = t1469*t4166;
  t4204 = t4197 + t4200;
  t4236 = t3665*t1555;
  t4237 = t1469*t4127;
  t4238 = t4236 + t4237;
  t4252 = t1469*t3665;
  t4254 = -1.*t1555*t4127;
  t4255 = t4252 + t4254;
  t4335 = 4.e-6*t577;
  t4316 = -7.e-6*t577;
  t4323 = t4316 + t1858;
  t4325 = -7.e-6*t4323;
  t4329 = -2.8e-11*t704;
  t4331 = t577 + t4325 + t4329;
  t4338 = 7.000000000455e-6*t704;
  t4343 = t4335 + t4338;
  t4351 = t4335 + t1055;
  t4352 = -7.e-6*t4351;
  t4359 = 1.000000000016*t704;
  t4360 = t4352 + t4359;
  t4393 = 7.e-6*t577;
  t4418 = 2.8e-11*t704;
  t4386 = -4.e-6*t577;
  t4387 = t4386 + t1055;
  t4388 = -0.80315*t4387;
  t4394 = t4393 + t1858;
  t4395 = -0.038924*t4394;
  t4397 = t4316 + t718;
  t4398 = -0.038922999986*t4397;
  t4400 = t4335 + t1692;
  t4403 = -0.503149000008*t4400;
  t4405 = -9.666064052774999e-12*t704;
  t4407 = -2.598649999999999e-7 + t4388 + t4395 + t4398 + t4403 + t4405;
  t4412 = 0.148705*t4323;
  t4413 = t577 + t4329;
  t4414 = -0.503149000008*t4413;
  t4420 = t612 + t4418;
  t4426 = -0.80315*t4420;
  t4428 = t4393 + t718;
  t4431 = -3.6777349999999994e-6*t4428;
  t4435 = 1.0000140000590574e-6*t704;
  t4437 = 1.0394599999999997e-12 + t4412 + t4414 + t4426 + t4431 + t4435;
  t4445 = 0.148705*t4351;
  t4447 = t612 + t4329;
  t4448 = -0.038922999986*t4447;
  t4449 = t577 + t4418;
  t4450 = -0.038924*t4449;
  t4451 = t4386 + t1692;
  t4454 = -3.6777349999999994e-6*t4451;
  t4456 = 0.30000099999679997*t704;
  t4463 = 1.8190549999999993e-12 + t4445 + t4448 + t4450 + t4454 + t4456;
  t4517 = -7.e-6*t4387;
  t4518 = 4.e-6*t4397;
  t4524 = -6.5e-11*t704;
  t4525 = t4517 + t4518 + t4524;
  t4532 = 4.e-6*t4447;
  t4533 = 1.12e-16*t704;
  t4535 = t4335 + t4532 + t4533;
  t4539 = -7.e-6*t4420;
  t4543 = 1.96e-16*t704;
  t4546 = t4316 + t4539 + t4543;
  t4410 = t1274*t4407;
  t4444 = t1299*t4437;
  t4471 = t1253*t4463;
  t4473 = t4410 + t4444 + t4471;
  t4478 = t1489*t4407;
  t4483 = t1522*t4437;
  t4490 = t1477*t4463;
  t4497 = t4478 + t4483 + t4490;
  t4506 = t837*t4407;
  t4507 = t970*t4437;
  t4508 = t540*t4463;
  t4509 = t4506 + t4507 + t4508;
  t4584 = 4.e-6*t4323;
  t4590 = -1.000000000049*t704;
  t4592 = t4584 + t4590;
  t4599 = -4.00000000026e-6*t704;
  t4600 = t4393 + t4599;
  t4609 = 4.e-6*t4351;
  t4611 = t577 + t4609 + t4418;
  t4627 = t1522*t4592;
  t4628 = t1489*t4600;
  t4631 = t1477*t4611;
  t4632 = t4627 + t4628 + t4631;
  t3462 = t2070*t2526;
  t3472 = t2097*t2568;
  t3473 = t3462 + t2889 + t3472;
  t4550 = t1489*t4525;
  t4551 = t1477*t4535;
  t4558 = t1522*t4546;
  t4559 = t4550 + t4551 + t4558;
  t3513 = -1.*t1742*t2526;
  t3514 = -1.*t1754*t2568;
  t3517 = t3513 + t2977 + t3514;
  t4689 = t2273*t4525;
  t4690 = t1889*t4407;
  t4696 = t1914*t4437;
  t4700 = t2011*t4463;
  t4703 = t4546*t2373;
  t4709 = t4535*t2436;
  t4711 = t4689 + t4690 + t4696 + t4700 + t4703 + t4709;
  t4715 = -1.*t2273*t4600;
  t4716 = -1.*t1682*t4437;
  t4718 = -1.*t4407*t1695;
  t4721 = -1.*t4463*t1708;
  t4722 = -1.*t4592*t2373;
  t4728 = -1.*t4611*t2436;
  t4729 = t4715 + t4716 + t4718 + t4721 + t4722 + t4728;
  t4731 = t1889*t2273;
  t4753 = t1914*t2373;
  t4754 = t2011*t2436;
  t4759 = t4731 + t4753 + t4754;
  t4764 = -1.*t2273*t1695;
  t4765 = -1.*t1682*t2373;
  t4767 = -1.*t1708*t2436;
  t4775 = t4764 + t4765 + t4767;
  t4498 = t2042*t4497;
  t4560 = t4559*t2440;
  t4564 = t837*t4525;
  t4565 = t540*t4535;
  t4566 = t970*t4546;
  t4568 = t4564 + t4565 + t4566;
  t4529 = t1274*t4525;
  t4538 = t1253*t4535;
  t4547 = t1299*t4546;
  t4548 = t4529 + t4538 + t4547;
  t4578 = -1.*t4497*t1714;
  t4634 = -1.*t4632*t2440;
  t4864 = t1203*t4473;
  t4866 = t64*t4509;
  t4873 = t4864 + t4866;
  t4878 = t64*t4473;
  t4889 = -1.*t1203*t4509;
  t4891 = t4878 + t4889;
  t4595 = t1299*t4592;
  t4606 = t1274*t4600;
  t4613 = t1253*t4611;
  t4614 = t4595 + t4606 + t4613;
  t4635 = t970*t4592;
  t4644 = t837*t4600;
  t4651 = t540*t4611;
  t4654 = t4635 + t4644 + t4651;
  t3762 = t2112*t2587;
  t3764 = t2101*t2576;
  t3769 = t2889 + t3762 + t3764;
  t3773 = -1.*t1792*t2587;
  t3780 = -1.*t1761*t2576;
  t3787 = t2977 + t3773 + t3780;
  t4334 = t1299*t4331;
  t4350 = t1274*t4343;
  t4362 = t1253*t4360;
  t4366 = t4334 + t4350 + t4362;
  t4376 = t970*t4331;
  t4378 = t837*t4343;
  t4379 = t540*t4360;
  t4380 = t4376 + t4378 + t4379;
  t5029 = t1203*t4366;
  t5031 = t64*t4380;
  t5038 = t5029 + t5031;
  t5014 = t64*t4366;
  t5016 = -1.*t1203*t4380;
  t5017 = t5014 + t5016;
  t4991 = t1522*t4331;
  t4998 = t1489*t4343;
  t5002 = t1477*t4360;
  t5007 = t4991 + t4998 + t5002;
  t5025 = t25*t5017;
  t5044 = -1.*t5038*t1384;
  t5047 = t5025 + t5044;
  t5061 = t25*t5038;
  t5064 = t5017*t1384;
  t5067 = t5061 + t5064;
  t5072 = t1469*t5007;
  t5073 = -1.*t1555*t5047;
  t5077 = t5072 + t5073;
  t4909 = -1.*t1203*t4568;
  t4911 = t64*t4548;
  t4913 = t4909 + t4911;
  t4903 = t64*t4568;
  t4904 = t1203*t4548;
  t4907 = t4903 + t4904;
  t5105 = t25*t4891;
  t5109 = -1.*t4873*t1384;
  t5112 = t5105 + t5109;
  t5123 = t25*t4873;
  t5131 = t4891*t1384;
  t5134 = t5123 + t5131;
  t4956 = t64*t4614;
  t4957 = -1.*t1203*t4654;
  t4959 = t4956 + t4957;
  t4941 = t1203*t4614;
  t4949 = t64*t4654;
  t4951 = t4941 + t4949;
  t5190 = t25*t4951;
  t5192 = t4959*t1384;
  t5193 = t5190 + t5192;
  t5155 = t25*t4907;
  t5163 = t4913*t1384;
  t5164 = t5155 + t5163;
  t5135 = t2713*t5134;
  t5165 = t5164*t2719;
  t5138 = t25*t4913;
  t5141 = -1.*t4907*t1384;
  t5147 = t5138 + t5141;
  t5180 = -1.*t5134*t2770;
  t5196 = -1.*t5193*t2719;
  t5217 = t4497*t1555;
  t5218 = t1469*t5112;
  t5219 = t5217 + t5218;
  t5222 = t1469*t4497;
  t5224 = -1.*t1555*t5112;
  t5227 = t5222 + t5224;
  t5182 = t25*t4959;
  t5184 = -1.*t4951*t1384;
  t5185 = t5182 + t5184;
  t5253 = t4632*t1555;
  t5257 = t1469*t5185;
  t5261 = t5253 + t5257;
  t5230 = t4559*t1555;
  t5232 = t1469*t5147;
  t5235 = t5230 + t5232;
  t1612 = t1455*t1425;
  t1614 = -1.*t10*t1584;
  t1622 = t1612 + t1614;
  t2752 = -1.*t1714*t1555;
  t2753 = -1.*t1469*t1798;
  t2754 = t2752 + t2753;
  t5305 = t1543*t1555;
  t5306 = t1469*t1574;
  t5310 = t5305 + t5306;
  t2646 = -1.*t2042*t1555;
  t2659 = -1.*t1469*t2117;
  t2670 = t2646 + t2659;
  t5481 = -1.*t2713*t2719;
  t5509 = t1425*t2719;
  t5560 = -1.*t2713*t2602;
  t5569 = -1.*t2117*t2719;
  t5613 = t1425*t2602;
  t5621 = t1574*t2719;
  t5483 = -1.*t2692*t2636;
  t5484 = -1.*t2133*t2679;
  t5486 = t5481 + t5483 + t5484;
  t5517 = t5310*t2636;
  t5522 = t1584*t2679;
  t5523 = t5509 + t5517 + t5522;
  t5586 = -1.*t2042*t2440;
  t5588 = -1.*t2117*t2602;
  t5594 = t5586 + t5588 + t5481;
  t5597 = t1543*t2440;
  t5602 = t1574*t2602;
  t5603 = t5597 + t5602 + t5509;
  t5758 = -1.*t2713*t3239;
  t5770 = -1.*t3228*t2719;
  t5784 = t1425*t3239;
  t5786 = t3203*t2719;
  t5899 = -1.*t3512*t2440;
  t5905 = -1.*t2042*t3665;
  t5927 = t3963*t2440;
  t5935 = t1543*t3665;
  t4286 = t1469*t3458;
  t4295 = -1.*t1555*t4166;
  t4296 = t4286 + t4295;
  t3965 = t3963*t1555;
  t4010 = t1469*t3990;
  t4011 = t3965 + t4010;
  t6061 = -1.*t4085*t2719;
  t6062 = -1.*t2713*t4123;
  t4228 = t1469*t3512;
  t4229 = -1.*t1555*t4105;
  t4230 = t4228 + t4229;
  t6074 = t4022*t2719;
  t6083 = t1425*t4123;
  t5849 = -1.*t2070*t2526;
  t5855 = -1.*t2097*t2568;
  t5868 = t5849 + t5586 + t5855;
  t5878 = t1330*t2526;
  t5884 = t1174*t2568;
  t5885 = t5878 + t5597 + t5884;
  t6261 = t2273*t883;
  t6269 = t1079*t2373;
  t6282 = t779*t2436;
  t6284 = t6261 + t6269 + t6282;
  t6294 = -1.*t2273*t4525;
  t6302 = -1.*t1889*t4407;
  t6305 = -1.*t1914*t4437;
  t6307 = -1.*t2011*t4463;
  t6310 = -1.*t4546*t2373;
  t6311 = -1.*t4535*t2436;
  t6315 = t6294 + t6302 + t6305 + t6307 + t6310 + t6311;
  t6328 = -1.*t1889*t2273;
  t6331 = -1.*t1914*t2373;
  t6332 = -1.*t2011*t2436;
  t6336 = t6328 + t6331 + t6332;
  t6341 = t4407*t883;
  t6344 = t2273*t4343;
  t6350 = t779*t4463;
  t6353 = t4437*t1079;
  t6355 = t4331*t2373;
  t6360 = t4360*t2436;
  t6369 = t6341 + t6344 + t6350 + t6353 + t6355 + t6360;
  t6172 = -1.*t2042*t4497;
  t6178 = -1.*t4559*t2440;
  t5948 = -1.*t2112*t2587;
  t5956 = -1.*t2101*t2576;
  t5959 = t5586 + t5948 + t5956;
  t5963 = t1340*t2587;
  t5983 = t1377*t2576;
  t5985 = t5597 + t5963 + t5983;
  t6204 = t4497*t1543;
  t6218 = t5007*t2440;
  t5267 = t1469*t4632;
  t5268 = -1.*t1555*t5185;
  t5272 = t5267 + t5268;
  t6515 = -1.*t2713*t5134;
  t6520 = -1.*t5164*t2719;
  t5237 = t1469*t4559;
  t5239 = -1.*t1555*t5147;
  t5240 = t5237 + t5239;
  t5011 = t5007*t1555;
  t5052 = t1469*t5047;
  t5053 = t5011 + t5052;
  t6530 = t5134*t1425;
  t6547 = t5067*t2719;
  t5436 = t1455*t2770;
  t5437 = -1.*t10*t2709;
  t5439 = t5436 + t5437;
  t6736 = -1.*t1425*t2719;
  t6757 = t2770*t2719;
  t6816 = -1.*t1425*t2602;
  t6818 = -1.*t1574*t2719;
  t6823 = t2770*t2602;
  t6825 = t1798*t2719;
  t6737 = -1.*t5310*t2636;
  t6739 = -1.*t1584*t2679;
  t6741 = t6736 + t6737 + t6739;
  t6758 = t1819*t2636;
  t6763 = t2709*t2679;
  t6769 = t6757 + t6758 + t6763;
  t6806 = -1.*t1543*t2440;
  t6809 = -1.*t1574*t2602;
  t6810 = t6806 + t6809 + t6736;
  t6830 = t1714*t2440;
  t6831 = t1798*t2602;
  t6834 = t6830 + t6831 + t6757;
  t6967 = -1.*t1425*t3239;
  t6969 = -1.*t3203*t2719;
  t6974 = t2770*t3239;
  t6980 = t3224*t2719;
  t7092 = -1.*t3963*t2440;
  t7097 = -1.*t1543*t3665;
  t7115 = t3458*t2440;
  t7127 = t1714*t3665;
  t7219 = -1.*t4022*t2719;
  t7224 = -1.*t1425*t4123;
  t7232 = t4070*t2719;
  t7237 = t2770*t4123;
  t7054 = -1.*t1330*t2526;
  t7055 = -1.*t1174*t2568;
  t7058 = t7054 + t6806 + t7055;
  t7066 = t1742*t2526;
  t7072 = t1754*t2568;
  t7077 = t7066 + t6830 + t7072;
  t7336 = -1.*t2273*t883;
  t7337 = -1.*t1079*t2373;
  t7338 = -1.*t779*t2436;
  t7339 = t7336 + t7337 + t7338;
  t7344 = t2273*t4600;
  t7345 = t1682*t4437;
  t7347 = t4407*t1695;
  t7348 = t4463*t1708;
  t7349 = t4592*t2373;
  t7350 = t4611*t2436;
  t7351 = t7344 + t7345 + t7347 + t7348 + t7349 + t7350;
  t7353 = t2273*t1695;
  t7355 = t1682*t2373;
  t7356 = t1708*t2436;
  t7357 = t7353 + t7355 + t7356;
  t7364 = -1.*t4407*t883;
  t7370 = -1.*t2273*t4343;
  t7374 = -1.*t779*t4463;
  t7377 = -1.*t4437*t1079;
  t7378 = -1.*t4331*t2373;
  t7380 = -1.*t4360*t2436;
  t7381 = t7364 + t7370 + t7374 + t7377 + t7378 + t7380;
  t7287 = t4497*t1714;
  t7292 = t4632*t2440;
  t7144 = -1.*t1340*t2587;
  t7146 = -1.*t1377*t2576;
  t7147 = t6806 + t7144 + t7146;
  t7152 = t1792*t2587;
  t7156 = t1761*t2576;
  t7157 = t6830 + t7152 + t7156;
  t7309 = -1.*t4497*t1543;
  t7317 = -1.*t5007*t2440;
  t7470 = t5134*t2770;
  t7473 = t5193*t2719;
  t7490 = -1.*t5134*t1425;
  t7497 = -1.*t5067*t2719;
  t6705 = t1455*t2713;
  t6707 = -1.*t10*t2133;
  t6708 = t6705 + t6707;
  t6656 = 6.5e-11*t622;
  p_output1[0]=(-1.*t10*t1425 - 1.*t1455*t1584)*var2[1] + t1622*var2[2];
  p_output1[1]=t1584*var2[0] - 1.*t10*t1656*var2[1] + t1455*t1656*var2[2] + (t1819*(t2133*t2626 + t2133*t2636 + t2670*t2679 + t2679*t2692) + t2709*t2734 + t2692*(-1.*t1819*t2679 - 1.*t2626*t2709 - 1.*t2636*t2709 - 1.*t2679*t2754) + t2133*t2790)*var2[3];
  p_output1[2]=t1469*t2811*var2[0] + (t1455*t1574 + t10*t1555*t2811)*var2[1] + (t10*t1574 - 1.*t1455*t1555*t2811)*var2[2] + (t1469*t2790*t2838 + t1819*(t1469*t2636*t2838 - 1.*t1555*t2679*t2838 + t2841 - 1.*t1555*t2133*t2856 + t1469*t2692*t2856 + t2862) + t1469*t2734*t2935 + t2692*(-1.*t1469*t1819*t2856 + t1555*t2709*t2856 - 1.*t1469*t2636*t2935 + t1555*t2679*t2935 + t2940 + t2965))*var2[3] + (t2770*(t2602*t2838 + t2841 + t2117*t2856 + t2862) + t1798*t2895 + t2713*(-1.*t1798*t2856 - 1.*t2602*t2935 + t2940 + t2965) + t2117*t2983)*var2[4];
  p_output1[3]=t1469*t3184*var2[0] + (t10*t1555*t3184 + t1455*t3203)*var2[1] + (-1.*t1455*t1555*t3184 + t10*t3203)*var2[2] + (t1469*t2790*t3243 + t1819*(t3240 + t1469*t2636*t3243 - 1.*t1555*t2679*t3243 + t3250 - 1.*t1555*t2133*t3259 + t1469*t2692*t3259) + t1469*t2734*t3290 + t2692*(-1.*t1469*t1819*t3259 + t1555*t2709*t3259 + t3285 - 1.*t1469*t2636*t3290 + t1555*t2679*t3290 + t3295))*var2[3] + (t2895*t3224 + t2983*t3228 + t2770*(t3240 + t2602*t3243 + t3250 + t2117*t3259) + t2713*(-1.*t1798*t3259 + t3285 - 1.*t2602*t3290 + t3295))*var2[4] + (t1714*(t2101*t2587 + t2101*t3094 + t2576*t3112 + t2112*t3119) + t2042*(-1.*t1761*t2587 - 1.*t1761*t3094 - 1.*t1792*t3119 - 1.*t2576*t3147))*var2[5];
  p_output1[4]=t4011*var2[0] + (t1455*t4022 - 1.*t10*t4032)*var2[1] + (t10*t4022 + t1455*t4032)*var2[2] + (t2734*t4204 + t2790*t4212 + t1819*(t4116 + t4124 + t2636*t4212 + t2679*t4230 + t2692*t4238 + t2133*t4255) + t2692*(t4176 + t4177 - 1.*t2636*t4204 - 1.*t1819*t4238 - 1.*t2709*t4255 - 1.*t2679*t4296))*var2[3] + (t2895*t4070 + t2983*t4085 + t2770*(t3545 + t3668 + t2602*t4105 + t4116 + t4124 + t2117*t4127) + t2713*(t3720 + t3741 - 1.*t1798*t4127 - 1.*t2602*t4166 + t4176 + t4177))*var2[4] + (t3458*t3769 + t3512*t3787 + t1714*(t3545 + t3668 + t2587*t3798 + t2576*t3811 + t2101*t3824 + t2112*t3847) + t2042*(t3720 + t3741 - 1.*t1761*t3824 - 1.*t1792*t3847 - 1.*t2587*t3877 - 1.*t2576*t3900))*var2[5] + (0.15121*t3406 + 0.15121*t3435 + t3458*t3473 + t3512*t3517 + t1714*(t2526*t3543 + t3545 + t2097*t3594 + t2568*t3618 + t3668 + t2070*t3695) + t2042*(-1.*t1754*t3594 - 1.*t1742*t3695 - 1.*t2526*t3718 + t3720 - 1.*t2568*t3736 + t3741))*var2[12];
  p_output1[5]=t5053*var2[0] + (t1455*t5067 - 1.*t10*t5077)*var2[1] + (t10*t5067 + t1455*t5077)*var2[2] + (t2790*t5235 + t1819*(t5135 + t5165 + t2692*t5219 + t2133*t5227 + t2636*t5235 + t2679*t5240) + t2734*t5261 + t2692*(t5180 + t5196 - 1.*t1819*t5219 - 1.*t2709*t5227 - 1.*t2636*t5261 - 1.*t2679*t5272))*var2[3] + (t2983*t5164 + t2770*(t4498 + t4560 + t2117*t5112 + t5135 + t2602*t5147 + t5165) + t2895*t5193 + t2713*(t4578 + t4634 - 1.*t1798*t5112 + t5180 - 1.*t2602*t5185 + t5196))*var2[4] + (t3787*t4559 + t3769*t4632 + t1714*(t4498 + t4560 + t2112*t4873 + t2101*t4891 + t2587*t4907 + t2576*t4913) + t2042*(t4578 + t4634 - 1.*t1792*t4873 - 1.*t1761*t4891 - 1.*t2587*t4951 - 1.*t2576*t4959))*var2[5] + (0.15121*t4366 + 0.15121*t4380 + t3517*t4559 + t1714*(t2070*t4473 + t4498 + t2097*t4509 + t2526*t4548 + t4560 + t2568*t4568) + t3473*t4632 + t2042*(-1.*t1742*t4473 - 1.*t1754*t4509 + t4578 - 1.*t2526*t4614 + t4634 - 1.*t2568*t4654))*var2[12] + (-0.281209*t4331 + 0.038749*t4360 + t1695*t4711 + t1889*t4729 + t4600*t4759 + t4525*t4775 - 7.e-6*(t1708*t4711 + t2011*t4729 + t4611*t4759 + t4535*t4775) + 4.e-6*(-1.*t1682*t4711 - 1.*t1914*t4729 - 1.*t4592*t4759 - 1.*t4546*t4775) + 1.e-6*(t4386 - 7.000000000455e-6*t704))*var2[13];
  p_output1[6]=t5310;
  p_output1[7]=t1622;
  p_output1[8]=t10*t1425 + t1455*t1584;
  p_output1[9]=t1819*t2734 + t2692*t2790;
  p_output1[10]=t2770*t2895 + t2713*t2983;
  p_output1[11]=t1714*t3769 + t2042*t3787;
  p_output1[12]=0.15121*t1174 + 0.15121*t1330 + t1714*t3473 + t2042*t3517;
  p_output1[13]=-0.281209*t1079 + t1695*t4759 + t1889*t4775 + 4.e-6*(-1.*t1682*t4759 - 1.*t1914*t4775) - 7.e-6*(t1708*t4759 + t2011*t4775) + 0.038749*t779 + 1.e-6*(t1858 + t656 + 7.e-6*t853);
  p_output1[14]=4.0519653002457196e-7;
  p_output1[15]=(-1.*t1455*t2709 - 1.*t10*t2770)*var2[1] + t5439*var2[2];
  p_output1[16]=t2709*var2[0] - 1.*t10*t2754*var2[1] + t1455*t2754*var2[2] + ((-1.*t2133*t2626 - 1.*t2133*t2636 - 1.*t2670*t2679 - 1.*t2679*t2692)*t5310 + t2692*(t1584*t2626 + t1584*t2636 + t1656*t2679 + t2679*t5310) + t1584*t5486 + t2133*t5523)*var2[3];
  p_output1[17]=t1469*t2935*var2[0] + (t1455*t1798 + t10*t1555*t2935)*var2[1] + (t10*t1798 - 1.*t1455*t1555*t2935)*var2[2] + (t1469*t2811*t5486 + t1469*t2838*t5523 + t5310*(-1.*t1469*t2636*t2838 + t1555*t2679*t2838 + t1555*t2133*t2856 - 1.*t1469*t2692*t2856 + t5560 + t5569) + t2692*(t1469*t2636*t2811 - 1.*t1555*t2679*t2811 - 1.*t1555*t1584*t2856 + t1469*t2856*t5310 + t5613 + t5621))*var2[3] + (t1425*(-1.*t2602*t2838 - 1.*t2117*t2856 + t5560 + t5569) + t1574*t5594 + t2117*t5603 + t2713*(t2602*t2811 + t1574*t2856 + t5613 + t5621))*var2[4];
  p_output1[18]=t1469*t3290*var2[0] + (t1455*t3224 + t10*t1555*t3290)*var2[1] + (t10*t3224 - 1.*t1455*t1555*t3290)*var2[2] + (t1469*t3184*t5486 + t1469*t3243*t5523 + t5310*(-1.*t1469*t2636*t3243 + t1555*t2679*t3243 + t1555*t2133*t3259 - 1.*t1469*t2692*t3259 + t5758 + t5770) + t2692*(t1469*t2636*t3184 - 1.*t1555*t2679*t3184 - 1.*t1555*t1584*t3259 + t1469*t3259*t5310 + t5784 + t5786))*var2[3] + (t3203*t5594 + t3228*t5603 + t1425*(-1.*t2602*t3243 - 1.*t2117*t3259 + t5758 + t5770) + t2713*(t2602*t3184 + t1574*t3259 + t5784 + t5786))*var2[4] + (t1543*(-1.*t2101*t2587 - 1.*t2101*t3094 - 1.*t2576*t3112 - 1.*t2112*t3119) + t2042*(t1377*t2587 + t1377*t3094 + t1340*t3119 + t2576*t3179))*var2[5];
  p_output1[19]=t4204*var2[0] + (t1455*t4070 - 1.*t10*t4296)*var2[1] + (t10*t4070 + t1455*t4296)*var2[2] + (t4011*t5486 + t4212*t5523 + t5310*(-1.*t2636*t4212 - 1.*t2679*t4230 - 1.*t2692*t4238 - 1.*t2133*t4255 + t6061 + t6062) + t2692*(t2636*t4011 + t2679*t4032 + t1584*t4255 + t4238*t5310 + t6074 + t6083))*var2[3] + (t4022*t5594 + t4085*t5603 + t1425*(-1.*t2602*t4105 - 1.*t2117*t4127 + t5899 + t5905 + t6061 + t6062) + t2713*(t2602*t3990 + t1574*t4127 + t5927 + t5935 + t6074 + t6083))*var2[4] + (t1543*(-1.*t2587*t3798 - 1.*t2576*t3811 - 1.*t2101*t3824 - 1.*t2112*t3847 + t5899 + t5905) + t2042*(t1377*t3824 + t1340*t3847 + t2576*t3969 + t2587*t3982 + t5927 + t5935) + t3963*t5959 + t3512*t5985)*var2[5] + (0.15121*t3718 + 0.15121*t3736 + t3963*t5868 + t3512*t5885 + t1543*(-1.*t2526*t3543 - 1.*t2097*t3594 - 1.*t2568*t3618 - 1.*t2070*t3695 + t5899 + t5905) + t2042*(t2568*t3406 + t2526*t3435 + t1174*t3594 + t1330*t3695 + t5927 + t5935))*var2[12];
  p_output1[20]=t5261*var2[0] + (t1455*t5193 - 1.*t10*t5272)*var2[1] + (t10*t5193 + t1455*t5272)*var2[2] + (t5053*t5486 + t5235*t5523 + t5310*(-1.*t2692*t5219 - 1.*t2133*t5227 - 1.*t2636*t5235 - 1.*t2679*t5240 + t6515 + t6520) + t2692*(t2636*t5053 + t2679*t5077 + t1584*t5227 + t5219*t5310 + t6530 + t6547))*var2[3] + (t5067*t5594 + t5164*t5603 + t1425*(-1.*t2117*t5112 - 1.*t2602*t5147 + t6172 + t6178 + t6515 + t6520) + t2713*(t2602*t5047 + t1574*t5112 + t6204 + t6218 + t6530 + t6547))*var2[4] + (t5007*t5959 + t4559*t5985 + t1543*(-1.*t2112*t4873 - 1.*t2101*t4891 - 1.*t2587*t4907 - 1.*t2576*t4913 + t6172 + t6178) + t2042*(t1340*t4873 + t1377*t4891 + t2576*t5017 + t2587*t5038 + t6204 + t6218))*var2[5] + (0.15121*t4614 + 0.15121*t4654 + t5007*t5868 + t4559*t5885 + t1543*(-1.*t2070*t4473 - 1.*t2097*t4509 - 1.*t2526*t4548 - 1.*t2568*t4568 + t6172 + t6178) + t2042*(t2526*t4366 + t2568*t4380 + t1330*t4473 + t1174*t4509 + t6204 + t6218))*var2[12] + (-0.281209*t4592 + 0.038749*t4611 + t4525*t6284 + t4343*t6336 + t1889*t6369 + 4.e-6*(-1.*t4546*t6284 - 1.*t1079*t6315 - 1.*t4331*t6336 - 1.*t1914*t6369) + 1.e-6*(t4316 + 4.00000000026e-6*t704) - 7.e-6*(t4535*t6284 + t4360*t6336 + t2011*t6369 + t6315*t779) + t6315*t883)*var2[13];
  p_output1[21]=t1819;
  p_output1[22]=t5439;
  p_output1[23]=t1455*t2709 + t10*t2770;
  p_output1[24]=t5310*t5486 + t2692*t5523;
  p_output1[25]=t1425*t5594 + t2713*t5603;
  p_output1[26]=t1543*t5959 + t2042*t5985;
  p_output1[27]=0.15121*t1742 + 0.15121*t1754 + t1543*t5868 + t2042*t5885;
  p_output1[28]=-0.281209*t1682 + 0.038749*t1708 + t1889*t6284 + 4.e-6*(-1.*t1914*t6284 - 1.*t1079*t6336) + 1.e-6*(t1055 + t1824 + 4.e-6*(-1. + t6656)) - 7.e-6*(t2011*t6284 + t6336*t779) + t6336*t883;
  p_output1[29]=0.29999995910920463;
  p_output1[30]=(-1.*t1455*t2133 - 1.*t10*t2713)*var2[1] + t6708*var2[2];
  p_output1[31]=t2133*var2[0] - 1.*t10*t2670*var2[1] + t1455*t2670*var2[2] + ((t1819*t2679 + t2626*t2709 + t2636*t2709 + t2679*t2754)*t5310 + t1819*(-1.*t1584*t2626 - 1.*t1584*t2636 - 1.*t1656*t2679 - 1.*t2679*t5310) + t2709*t6741 + t1584*t6769)*var2[3];
  p_output1[32]=t1469*t2838*var2[0] + (t1455*t2117 + t10*t1555*t2838)*var2[1] + (t10*t2117 - 1.*t1455*t1555*t2838)*var2[2] + (t1469*t2935*t6741 + t1469*t2811*t6769 + t1819*(-1.*t1469*t2636*t2811 + t1555*t2679*t2811 + t1555*t1584*t2856 - 1.*t1469*t2856*t5310 + t6816 + t6818) + t5310*(t1469*t1819*t2856 - 1.*t1555*t2709*t2856 + t1469*t2636*t2935 - 1.*t1555*t2679*t2935 + t6823 + t6825))*var2[3] + (t1798*t6810 + t2770*(-1.*t2602*t2811 - 1.*t1574*t2856 + t6816 + t6818) + t1425*(t1798*t2856 + t2602*t2935 + t6823 + t6825) + t1574*t6834)*var2[4];
  p_output1[33]=t1469*t3243*var2[0] + (t1455*t3228 + t10*t1555*t3243)*var2[1] + (t10*t3228 - 1.*t1455*t1555*t3243)*var2[2] + (t1469*t3290*t6741 + t1469*t3184*t6769 + t1819*(-1.*t1469*t2636*t3184 + t1555*t2679*t3184 + t1555*t1584*t3259 - 1.*t1469*t3259*t5310 + t6967 + t6969) + t5310*(t1469*t1819*t3259 - 1.*t1555*t2709*t3259 + t1469*t2636*t3290 - 1.*t1555*t2679*t3290 + t6974 + t6980))*var2[3] + (t3224*t6810 + t3203*t6834 + t2770*(-1.*t2602*t3184 - 1.*t1574*t3259 + t6967 + t6969) + t1425*(t1798*t3259 + t2602*t3290 + t6974 + t6980))*var2[4] + (t1543*(t1761*t2587 + t1761*t3094 + t1792*t3119 + t2576*t3147) + t1714*(-1.*t1377*t2587 - 1.*t1377*t3094 - 1.*t1340*t3119 - 1.*t2576*t3179))*var2[5];
  p_output1[34]=t4212*var2[0] + (t1455*t4085 - 1.*t10*t4230)*var2[1] + (t10*t4085 + t1455*t4230)*var2[2] + (t4204*t6741 + t4011*t6769 + t1819*(-1.*t2636*t4011 - 1.*t2679*t4032 - 1.*t1584*t4255 - 1.*t4238*t5310 + t7219 + t7224) + t5310*(t2636*t4204 + t1819*t4238 + t2709*t4255 + t2679*t4296 + t7232 + t7237))*var2[3] + (t4070*t6810 + t4022*t6834 + t2770*(-1.*t2602*t3990 - 1.*t1574*t4127 + t7092 + t7097 + t7219 + t7224) + t1425*(t1798*t4127 + t2602*t4166 + t7115 + t7127 + t7232 + t7237))*var2[4] + (t1714*(-1.*t1377*t3824 - 1.*t1340*t3847 - 1.*t2576*t3969 - 1.*t2587*t3982 + t7092 + t7097) + t1543*(t1761*t3824 + t1792*t3847 + t2587*t3877 + t2576*t3900 + t7115 + t7127) + t3458*t7147 + t3963*t7157)*var2[5] + (0.15121*t3543 + 0.15121*t3618 + t3458*t7058 + t3963*t7077 + t1714*(-1.*t2568*t3406 - 1.*t2526*t3435 - 1.*t1174*t3594 - 1.*t1330*t3695 + t7092 + t7097) + t1543*(t1754*t3594 + t1742*t3695 + t2526*t3718 + t2568*t3736 + t7115 + t7127))*var2[12];
  p_output1[35]=t5235*var2[0] + (t1455*t5164 - 1.*t10*t5240)*var2[1] + (t10*t5164 + t1455*t5240)*var2[2] + (t5261*t6741 + t5053*t6769 + t5310*(t1819*t5219 + t2709*t5227 + t2636*t5261 + t2679*t5272 + t7470 + t7473) + t1819*(-1.*t2636*t5053 - 1.*t2679*t5077 - 1.*t1584*t5227 - 1.*t5219*t5310 + t7490 + t7497))*var2[3] + (t5193*t6810 + t5067*t6834 + t1425*(t1798*t5112 + t2602*t5185 + t7287 + t7292 + t7470 + t7473) + t2770*(-1.*t2602*t5047 - 1.*t1574*t5112 + t7309 + t7317 + t7490 + t7497))*var2[4] + (t4632*t7147 + t5007*t7157 + t1543*(t1792*t4873 + t1761*t4891 + t2587*t4951 + t2576*t4959 + t7287 + t7292) + t1714*(-1.*t1340*t4873 - 1.*t1377*t4891 - 1.*t2576*t5017 - 1.*t2587*t5038 + t7309 + t7317))*var2[5] + (0.15121*t4548 + 0.15121*t4568 + t4632*t7058 + t5007*t7077 + t1543*(t1742*t4473 + t1754*t4509 + t2526*t4614 + t2568*t4654 + t7287 + t7292) + t1714*(-1.*t2526*t4366 - 1.*t2568*t4380 - 1.*t1330*t4473 - 1.*t1174*t4509 + t7309 + t7317))*var2[12] + (0.038749*t4535 - 0.281209*t4546 + 1.e-6*(7.e-6*t4387 + 4.e-6*t4394 + 6.5e-11*t704) + t4600*t7339 + t4343*t7357 + t1695*t7381 + 4.e-6*(-1.*t4592*t7339 - 1.*t1079*t7351 - 1.*t4331*t7357 - 1.*t1682*t7381) - 7.e-6*(t4611*t7339 + t4360*t7357 + t1708*t7381 + t7351*t779) + t7351*t883)*var2[13];
  p_output1[36]=t2692;
  p_output1[37]=t6708;
  p_output1[38]=t1455*t2133 + t10*t2713;
  p_output1[39]=t1819*t6741 + t5310*t6769;
  p_output1[40]=t2770*t6810 + t1425*t6834;
  p_output1[41]=t1714*t7147 + t1543*t7157;
  p_output1[42]=0.15121*t2070 + 0.15121*t2097 + t1714*t7058 + t1543*t7077;
  p_output1[43]=-0.281209*t1914 + 0.038749*t2011 + 1.e-6*(-1. + 7.e-6*t1882 + 4.e-6*t2270 + t6656) + t1695*t7339 + 4.e-6*(-1.*t1682*t7339 - 1.*t1079*t7357) - 7.e-6*(t1708*t7339 + t7357*t779) + t7357*t883;
  p_output1[44]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RlFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void J_dh_RlFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
