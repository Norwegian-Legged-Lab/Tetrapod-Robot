/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:30:43 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t818;
  double t819;
  double t827;
  double t607;
  double t636;
  double t649;
  double t760;
  double t954;
  double t960;
  double t843;
  double t934;
  double t988;
  double t1002;
  double t1007;
  double t1037;
  double t1039;
  double t1051;
  double t1065;
  double t1068;
  double t1080;
  double t1088;
  double t665;
  double t1108;
  double t1122;
  double t1125;
  double t1134;
  double t1143;
  double t1011;
  double t1294;
  double t1297;
  double t1195;
  double t1249;
  double t1196;
  double t1198;
  double t1312;
  double t1210;
  double t1211;
  double t1184;
  double t1186;
  double t795;
  double t1328;
  double t1263;
  double t1299;
  double t1331;
  double t1348;
  double t1400;
  double t1402;
  double t1406;
  double t1023;
  double t1027;
  double t1447;
  double t1451;
  double t1092;
  double t1096;
  double t1457;
  double t1458;
  double t797;
  double t1462;
  double t1463;
  double t1474;
  double t1220;
  double t1506;
  double t1508;
  double t1515;
  double t1518;
  double t1520;
  double t1524;
  double t1527;
  double t1529;
  double t1538;
  double t1545;
  double t1553;
  double t1566;
  double t1582;
  double t1589;
  double t1590;
  double t1598;
  double t1602;
  double t1603;
  double t1615;
  double t1618;
  double t1619;
  double t1621;
  double t1638;
  double t1639;
  double t1641;
  double t1651;
  double t1655;
  double t1656;
  double t1661;
  double t1667;
  double t1669;
  double t1670;
  double t1310;
  double t1311;
  double t1237;
  double t1370;
  double t1482;
  double t1713;
  double t1716;
  double t1744;
  double t1749;
  double t1750;
  double t1753;
  double t1470;
  double t1472;
  double t1478;
  double t1481;
  double t1483;
  double t1504;
  double t1548;
  double t1635;
  double t1672;
  double t1679;
  double t1245;
  double t1291;
  double t1303;
  double t1304;
  double t1317;
  double t1325;
  double t1355;
  double t1357;
  double t1405;
  double t1418;
  double t1419;
  double t1700;
  double t1705;
  double t1707;
  double t1711;
  double t1718;
  double t1724;
  double t1727;
  double t1728;
  double t1732;
  double t1737;
  double t1757;
  double t1760;
  double t1762;
  double t1764;
  double t1771;
  double t1776;
  double t1780;
  double t1781;
  double t1783;
  double t1788;
  double t1305;
  double t1360;
  double t1436;
  double t1438;
  double t1010;
  double t1091;
  double t1147;
  double t1170;
  double t1182;
  double t1191;
  double t1208;
  double t1215;
  double t1218;
  double t1219;
  double t1452;
  double t1460;
  double t1465;
  double t1469;
  double t1680;
  double t1683;
  double t1684;
  double t1689;
  double t1696;
  double t1741;
  double t1789;
  double t1792;
  double t1799;
  double t1804;
  double t1806;
  double t1807;
  double t1813;
  double t1814;
  double t1816;
  double t1817;
  double t1821;
  double t1826;
  double t1827;
  double t1835;
  double t1838;
  double t1840;
  double t1845;
  double t1892;
  double t1896;
  double t1897;
  double t1908;
  double t1915;
  double t1916;
  double t1917;
  double t1922;
  double t1857;
  double t1858;
  double t1870;
  double t1878;
  double t1884;
  double t1910;
  double t1923;
  double t1930;
  double t1931;
  double t1935;
  double t1936;
  double t1942;
  double t1948;
  double t1950;
  double t1953;
  double t1955;
  double t480;
  double t424;
  double t434;
  double t461;
  double t472;
  double t499;
  double t1982;
  double t1988;
  double t1989;
  double t1993;
  double t2020;
  double t2024;
  double t2031;
  double t1968;
  double t1979;
  double t1981;
  double t1994;
  double t1997;
  double t2002;
  double t2008;
  double t2032;
  double t2034;
  double t2036;
  double t2044;
  double t2046;
  double t2049;
  double t2057;
  double t2061;
  double t2066;
  double t2078;
  double t2080;
  double t2108;
  double t2109;
  double t2112;
  double t360;
  double t413;
  double t2176;
  double t2131;
  double t2188;
  double t2192;
  double t2197;
  double t2207;
  double t2208;
  double t2210;
  double t2303;
  double t2308;
  double t2311;
  double t2312;
  double t2320;
  double t2326;
  double t2327;
  double t2332;
  double t2334;
  double t2335;
  double t2336;
  double t2337;
  double t2338;
  double t2345;
  double t2348;
  double t2422;
  double t2222;
  double t2230;
  double t2234;
  double t2235;
  double t2247;
  double t2253;
  double t2255;
  double t2257;
  double t2279;
  double t2281;
  double t2282;
  double t2291;
  double t2504;
  double t2506;
  double t2508;
  double t2510;
  double t2515;
  double t2525;
  double t2527;
  double t2529;
  double t2530;
  double t2535;
  double t2537;
  double t2547;
  double t2550;
  double t2551;
  double t2584;
  double t2586;
  double t2593;
  double t2572;
  double t2576;
  double t2582;
  double t2594;
  double t2600;
  double t2610;
  double t2559;
  double t2563;
  double t2565;
  double t2566;
  double t2568;
  double t2570;
  double t2583;
  double t2612;
  double t2613;
  double t2622;
  double t2626;
  double t2627;
  double t2628;
  double t2629;
  double t2662;
  double t2666;
  double t2670;
  double t2673;
  double t2763;
  double t2766;
  double t2787;
  double t2788;
  double t2801;
  double t2807;
  double t2727;
  double t2733;
  double t2734;
  double t2831;
  double t2838;
  double t2847;
  double t2808;
  double t2811;
  double t2818;
  double t2827;
  double t2854;
  double t2855;
  double t2856;
  double t2870;
  double t2877;
  double t2899;
  double t2907;
  double t2910;
  double t2912;
  double t2914;
  double t2915;
  double t3030;
  double t3031;
  double t2929;
  double t2930;
  double t2969;
  double t2978;
  double t3120;
  double t3122;
  double t3123;
  double t3126;
  double t3127;
  double t3131;
  double t3135;
  double t3136;
  double t3074;
  double t3076;
  double t3082;
  double t2991;
  double t2999;
  double t3006;
  double t3159;
  double t3160;
  double t3293;
  double t3320;
  double t3325;
  double t3163;
  double t3165;
  double t3184;
  double t3276;
  double t3288;
  double t3185;
  double t3292;
  double t3186;
  double t3210;
  double t3257;
  double t3344;
  double t3352;
  double t3356;
  double t3339;
  double t3358;
  double t3463;
  double t3466;
  double t3564;
  double t3566;
  double t3569;
  double t3551;
  double t3591;
  double t3544;
  double t3546;
  double t3626;
  double t3632;
  double t3625;
  double t3635;
  double t3887;
  double t3890;
  double t3893;
  double t3948;
  double t3952;
  double t3957;
  double t4211;
  double t4168;
  double t4176;
  double t4177;
  double t4178;
  double t4194;
  double t4232;
  double t4287;
  double t4344;
  double t4350;
  double t4352;
  double t4353;
  double t4514;
  double t4722;
  double t4729;
  double t4645;
  double t4652;
  double t4668;
  double t4584;
  double t4745;
  double t4748;
  double t4751;
  double t4752;
  double t4766;
  double t4769;
  double t4773;
  double t4786;
  double t4793;
  double t4801;
  double t4810;
  double t4813;
  double t4814;
  double t4817;
  double t4819;
  double t4820;
  double t4822;
  double t4827;
  double t4832;
  double t4855;
  double t4857;
  double t4860;
  double t4868;
  double t4870;
  double t4910;
  double t4911;
  double t4939;
  double t4941;
  double t4971;
  double t4974;
  double t4976;
  double t4588;
  double t4631;
  double t4632;
  double t4693;
  double t4712;
  double t4717;
  double t4724;
  double t4730;
  double t4731;
  double t4737;
  double t4636;
  double t4718;
  double t4740;
  double t4741;
  double t4789;
  double t4821;
  double t4872;
  double t4873;
  double t4883;
  double t4884;
  double t4890;
  double t4897;
  double t4901;
  double t4904;
  double t4906;
  double t4907;
  double t5333;
  double t5334;
  double t5347;
  double t5371;
  double t6110;
  double t6333;
  double t6377;
  double t6397;
  double t6400;
  double t6401;
  double t6402;
  double t6425;
  double t6429;
  double t6478;
  double t6528;
  double t6542;
  double t6549;
  double t6551;
  double t4909;
  double t5386;
  double t4932;
  double t4970;
  double t5015;
  double t5019;
  double t5080;
  double t5100;
  double t5225;
  double t5278;
  double t5755;
  double t5868;
  double t5577;
  double t5628;
  double t5697;
  double t5707;
  double t5435;
  double t5439;
  double t5457;
  double t5466;
  double t6924;
  double t6939;
  double t7025;
  double t7050;
  double t7059;
  double t7081;
  double t4209;
  double t4340;
  double t4393;
  double t4394;
  double t4456;
  double t4458;
  double t4462;
  double t4488;
  double t8322;
  double t8514;
  double t8515;
  double t8009;
  double t8136;
  double t8140;
  double t7889;
  double t7891;
  double t7911;
  double t7934;
  double t8147;
  double t8555;
  double t8563;
  double t8661;
  double t8664;
  double t8671;
  double t8762;
  double t8792;
  double t8803;
  double t7550;
  double t7823;
  double t7828;
  double t7838;
  double t7840;
  double t7846;
  double t7284;
  double t7316;
  double t7317;
  double t7193;
  double t7199;
  double t7228;
  double t8901;
  double t8904;
  double t8905;
  double t8912;
  double t8934;
  double t8944;
  double t8949;
  double t8956;
  double t8957;
  double t8978;
  double t8984;
  double t8996;
  double t9029;
  double t9030;
  double t9035;
  double t8959;
  double t8997;
  double t8963;
  double t8965;
  double t8969;
  double t9093;
  double t9105;
  double t9271;
  double t9284;
  double t9293;
  double t9344;
  double t9345;
  double t9346;
  double t9349;
  double t9350;
  double t9351;
  double t9353;
  double t9356;
  double t9358;
  double t9462;
  double t9463;
  double t9468;
  double t9469;
  double t9504;
  double t9505;
  double t9490;
  double t9499;
  double t9697;
  double t9935;
  double t9939;
  double t9943;
  double t9948;
  double t9954;
  double t9956;
  double t9970;
  double t9986;
  double t9997;
  double t10003;
  double t10012;
  double t10046;
  double t9707;
  double t9709;
  double t9724;
  double t9771;
  double t9772;
  double t9787;
  double t9797;
  double t9871;
  double t9888;
  double t10096;
  double t10103;
  double t10104;
  double t10122;
  double t9929;
  double t9931;
  double t9936;
  double t9937;
  double t9938;
  double t9940;
  double t9941;
  double t9944;
  double t9945;
  double t10061;
  double t10062;
  double t10068;
  double t10080;
  double t9946;
  double t10081;
  double t9899;
  double t9910;
  double t9917;
  double t9926;
  double t9538;
  double t9563;
  double t9600;
  double t9623;
  double t10165;
  double t10190;
  double t10277;
  double t10280;
  double t10294;
  double t10261;
  double t10262;
  double t10275;
  double t10135;
  double t10140;
  double t10146;
  double t10153;
  double t10168;
  double t10170;
  double t10176;
  double t10177;
  double t9459;
  double t9464;
  double t9471;
  double t9474;
  double t9501;
  double t9509;
  double t9511;
  double t9513;
  double t10427;
  double t10430;
  double t10432;
  double t10412;
  double t10414;
  double t10423;
  double t10374;
  double t10389;
  double t10403;
  double t10409;
  double t10426;
  double t10434;
  double t10436;
  double t10444;
  double t10468;
  double t10504;
  double t10582;
  double t10600;
  double t10629;
  double t10344;
  double t10345;
  double t10354;
  double t10318;
  double t10335;
  double t10341;
  double t10231;
  double t10236;
  double t10243;
  double t10226;
  double t10227;
  double t10229;
  double t10810;
  double t10817;
  double t10819;
  double t10879;
  double t10886;
  double t10889;
  double t10844;
  double t10851;
  double t10867;
  double t10791;
  double t10792;
  double t10793;
  double t10932;
  double t10935;
  double t10969;
  double t10829;
  double t10873;
  double t10802;
  double t10803;
  double t10804;
  double t11009;
  double t11010;
  double t11011;
  double t10929;
  double t10931;
  double t11039;
  double t11060;
  double t11061;
  double t11075;
  double t11076;
  double t11090;
  double t10997;
  double t11000;
  double t11001;
  double t11200;
  double t11210;
  double t11221;
  double t11223;
  double t11226;
  double t11232;
  double t11236;
  double t11239;
  double t11241;
  double t11243;
  double t11245;
  double t11246;
  double t11249;
  double t11278;
  double t11285;
  double t11286;
  double t11287;
  double t11311;
  double t11314;
  double t11315;
  double t11319;
  double t11257;
  double t11259;
  double t11269;
  double t11270;
  double t11271;
  double t11274;
  double t11307;
  double t11339;
  double t11352;
  double t11376;
  double t11378;
  double t11379;
  double t11381;
  double t11382;
  double t11384;
  double t11385;
  double t11386;
  double t11395;
  double t11399;
  double t11405;
  double t11411;
  double t11427;
  double t11428;
  double t11433;
  double t11440;
  double t11443;
  double t2128;
  double t590;
  double t2174;
  double t2186;
  double t11455;
  double t11469;
  double t11481;
  double t11487;
  double t11489;
  double t11490;
  double t2206;
  double t11542;
  double t11544;
  double t11545;
  double t11553;
  double t11555;
  double t11558;
  double t11644;
  double t11701;
  double t11702;
  double t11704;
  double t11705;
  double t11706;
  double t11707;
  double t11708;
  double t11709;
  double t2221;
  double t11531;
  double t11532;
  double t11533;
  double t11536;
  double t11538;
  double t11539;
  double t2245;
  double t2274;
  double t11889;
  double t11905;
  double t11913;
  double t11918;
  double t11924;
  double t11929;
  double t11950;
  double t11951;
  double t11957;
  double t11713;
  double t11714;
  double t11718;
  double t11719;
  double t11722;
  double t11723;
  double t11727;
  double t11728;
  double t11730;
  double t11731;
  double t11743;
  double t11770;
  double t12208;
  double t12211;
  double t12221;
  double t12226;
  double t12552;
  double t12554;
  double t12585;
  double t12593;
  double t3972;
  double t3988;
  double t4001;
  double t4079;
  double t4080;
  double t4083;
  double t12978;
  double t12980;
  double t12981;
  double t12982;
  double t12988;
  double t12995;
  double t12996;
  double t13010;
  double t13012;
  double t13013;
  double t13014;
  double t13015;
  double t13017;
  double t13018;
  double t12690;
  double t12700;
  double t12711;
  double t12822;
  double t9372;
  double t9374;
  double t9375;
  double t13187;
  double t13191;
  double t7967;
  double t8586;
  double t8590;
  double t13195;
  double t13200;
  double t9391;
  double t9394;
  double t9398;
  double t13258;
  double t13261;
  double t13283;
  double t13286;
  double t11030;
  double t11032;
  double t11033;
  double t13494;
  double t13507;
  double t10411;
  double t10437;
  double t10441;
  double t13570;
  double t13580;
  double t11103;
  double t11108;
  double t11113;
  double t13672;
  double t13675;
  double t13676;
  double t13677;
  double t13680;
  double t13681;
  double t13682;
  double t13684;
  double t13685;
  double t13686;
  double t13688;
  double t13689;
  double t13690;
  double t13704;
  double t13705;
  double t13708;
  double t13709;
  double t13713;
  double t13714;
  double t13716;
  double t13717;
  double t13693;
  double t13696;
  double t13697;
  double t13699;
  double t13700;
  double t13702;
  double t13710;
  double t13718;
  double t13720;
  double t13721;
  double t13722;
  double t13724;
  double t13725;
  double t13727;
  double t13728;
  double t13731;
  double t13733;
  double t13737;
  double t13741;
  double t13742;
  double t13743;
  double t13744;
  double t13745;
  double t13746;
  double t13747;
  double t13748;
  double t13751;
  double t13752;
  double t13753;
  double t13755;
  double t13757;
  double t13758;
  double t13779;
  double t13780;
  double t13781;
  double t13784;
  double t13785;
  double t13786;
  double t13787;
  double t13788;
  double t13791;
  double t13794;
  double t13799;
  double t13800;
  double t13823;
  double t13825;
  double t13827;
  double t13765;
  double t13767;
  double t13768;
  double t13774;
  double t13775;
  double t13776;
  double t13908;
  double t13909;
  double t13910;
  double t13911;
  double t13912;
  double t13913;
  double t13914;
  double t13915;
  double t13917;
  double t13831;
  double t13832;
  double t13834;
  double t13835;
  double t13839;
  double t13841;
  double t13842;
  double t13843;
  double t13867;
  double t13878;
  double t13905;
  double t13906;
  double t14179;
  double t14181;
  double t14185;
  double t14187;
  double t14301;
  double t14303;
  double t14416;
  double t14418;
  double t14731;
  double t14732;
  double t14733;
  double t14734;
  double t14735;
  double t14736;
  double t14737;
  double t14740;
  double t14741;
  double t14742;
  double t14743;
  double t14744;
  double t14745;
  double t14747;
  double t14670;
  double t14681;
  double t14686;
  double t14689;
  double t15012;
  double t15014;
  double t15027;
  double t15034;
  double t15132;
  double t15134;
  double t15143;
  double t15145;
  double t15176;
  double t15177;
  double t15182;
  double t15184;
  t818 = Cos(var1[17]);
  t819 = -1.*t818;
  t827 = 1. + t819;
  t607 = Cos(var1[16]);
  t636 = -1.*t607;
  t649 = 1. + t636;
  t760 = Sin(var1[16]);
  t954 = Sin(var1[17]);
  t960 = 4.e-6*t954;
  t843 = 1.000000000016*t827;
  t934 = -7.e-6*t827;
  t988 = t934 + t960;
  t1002 = -7.e-6*t988;
  t1007 = -1. + t843 + t1002;
  t1037 = 2.8e-11*t827;
  t1039 = 4.e-6*t827;
  t1051 = 7.e-6*t954;
  t1065 = t1039 + t1051;
  t1068 = -7.e-6*t1065;
  t1080 = -1.*t954;
  t1088 = t1037 + t1068 + t1080;
  t665 = -7.e-6*t649;
  t1108 = -6.5e-11*t827;
  t1122 = 1. + t1108;
  t1125 = -7.e-6*t1122;
  t1134 = 7.e-6*t827;
  t1143 = t1125 + t1134 + t960;
  t1011 = 4.e-6*t649;
  t1294 = -1. + t818;
  t1297 = 4.e-6*t1294;
  t1195 = -2.8e-11*t649;
  t1249 = -4.e-6*t954;
  t1196 = -1.*t760;
  t1198 = t1195 + t1196;
  t1312 = 1.000000000049*t827;
  t1210 = 4.e-6*t760;
  t1211 = t665 + t1210;
  t1184 = -1.000000000016*t649;
  t1186 = 1. + t1184;
  t795 = -4.e-6*t760;
  t1328 = -7.e-6*t954;
  t1263 = t934 + t1249;
  t1299 = t1297 + t1051;
  t1331 = -2.8e-11*t827;
  t1348 = t1331 + t954;
  t1400 = -1.000000000016*t827;
  t1402 = 1. + t1400;
  t1406 = t1037 + t954;
  t1023 = -7.e-6*t760;
  t1027 = t1011 + t1023;
  t1447 = 4.e-6*t1065;
  t1451 = -1. + t1312 + t1447;
  t1092 = -6.5e-11*t649;
  t1096 = 1. + t1092;
  t1457 = 4.e-6*t1122;
  t1458 = t1457 + t1297 + t1051;
  t797 = t665 + t795;
  t1462 = 4.e-6*t988;
  t1463 = t1037 + t1462 + t954;
  t1474 = 7.e-6*t649;
  t1220 = 7.e-6*t760;
  t1506 = 2.826290000000002e-7*var1[17];
  t1508 = -0.148715*t1122;
  t1515 = -2.18904205e-16*t827;
  t1518 = t1039 + t1328;
  t1520 = -0.038576*t1518;
  t1524 = -0.80315*t1263;
  t1527 = t1134 + t960;
  t1529 = -0.5031510000080001*t1527;
  t1538 = -0.038575000014*t1299;
  t1545 = t1506 + t1508 + t1515 + t1520 + t1524 + t1529 + t1538;
  t1553 = 1.1305160000000008e-12*var1[17];
  t1566 = -1.000000000049*t827;
  t1582 = 1. + t1566;
  t1589 = -0.038576*t1582;
  t1590 = -0.03857500001589017*t827;
  t1598 = t1037 + t1080;
  t1602 = -0.5031510000080001*t1598;
  t1603 = t1297 + t1328;
  t1615 = -3.367757e-6*t1603;
  t1618 = -0.148715*t1065;
  t1619 = -0.80315*t1348;
  t1621 = t1553 + t1589 + t1590 + t1602 + t1615 + t1618 + t1619;
  t1638 = -1.9784030000000015e-12*var1[17];
  t1639 = -0.80315*t1402;
  t1641 = -0.5031510000160505*t827;
  t1651 = t1331 + t1080;
  t1655 = -0.038576*t1651;
  t1656 = t1134 + t1249;
  t1661 = -3.367757e-6*t1656;
  t1667 = -0.148715*t988;
  t1669 = -0.038575000014*t1406;
  t1670 = t1638 + t1639 + t1641 + t1655 + t1661 + t1667 + t1669;
  t1310 = -1.000000000049*t649;
  t1311 = 1. + t1310;
  t1237 = t1011 + t1220;
  t1370 = t1195 + t760;
  t1482 = 2.8e-11*t649;
  t1713 = -1. + t607;
  t1716 = 4.e-6*t1713;
  t1744 = t1311*t1451;
  t1749 = t1237*t1458;
  t1750 = t1370*t1463;
  t1753 = t1744 + t1749 + t1750;
  t1470 = -2.7726089999999997e-12*var1[16];
  t1472 = -0.2812110000084994*t649;
  t1478 = t1474 + t795;
  t1481 = -1.8134809999999998e-6*t1478;
  t1483 = t1482 + t760;
  t1504 = -0.038749000006999997*t1483;
  t1548 = t1211*t1545;
  t1635 = t1198*t1621;
  t1672 = t1186*t1670;
  t1679 = t1470 + t1472 + t1481 + t1504 + t1548 + t1635 + t1672;
  t1245 = 6.5e-11*t827;
  t1291 = 7.e-6*t1263;
  t1303 = 4.e-6*t1299;
  t1304 = -1. + t1245 + t1291 + t1303;
  t1317 = -1. + t1312;
  t1325 = 4.e-6*t1317;
  t1355 = 7.e-6*t1348;
  t1357 = t1325 + t1297 + t1328 + t1355;
  t1405 = 7.e-6*t1402;
  t1418 = 4.e-6*t1406;
  t1419 = t1405 + t1134 + t1249 + t1418;
  t1700 = 3.9608699999999997e-7*var1[16];
  t1705 = -1.1787626499999999e-16*t649;
  t1707 = t1474 + t1210;
  t1711 = -0.281211000004*t1707;
  t1718 = t1716 + t1220;
  t1724 = -0.038749000006999997*t1718;
  t1727 = t1096*t1545;
  t1728 = t1027*t1621;
  t1732 = t797*t1670;
  t1737 = t1700 + t1705 + t1711 + t1724 + t1727 + t1728 + t1732;
  t1757 = 1.5843479999999999e-12*var1[16];
  t1760 = -0.03874900000889869*t649;
  t1762 = t1482 + t1196;
  t1764 = -0.281211000004*t1762;
  t1771 = t1716 + t1023;
  t1776 = -1.8134809999999998e-6*t1771;
  t1780 = t1237*t1545;
  t1781 = t1311*t1621;
  t1783 = t1370*t1670;
  t1788 = t1757 + t1760 + t1764 + t1776 + t1780 + t1781 + t1783;
  t1305 = t1237*t1304;
  t1360 = t1311*t1357;
  t1436 = t1370*t1419;
  t1438 = t1305 + t1360 + t1436;
  t1010 = t797*t1007;
  t1091 = t1027*t1088;
  t1147 = t1096*t1143;
  t1170 = t1010 + t1091 + t1147;
  t1182 = 0.15121*t1170;
  t1191 = t1186*t1007;
  t1208 = t1198*t1088;
  t1215 = t1211*t1143;
  t1218 = t1191 + t1208 + t1215;
  t1219 = -0.15121*t1218;
  t1452 = t1198*t1451;
  t1460 = t1211*t1458;
  t1465 = t1186*t1463;
  t1469 = t1452 + t1460 + t1465;
  t1680 = -1.*t1469*t1679;
  t1683 = t1027*t1451;
  t1684 = t1096*t1458;
  t1689 = t797*t1463;
  t1696 = t1683 + t1684 + t1689;
  t1741 = -1.*t1696*t1737;
  t1789 = -1.*t1753*t1788;
  t1792 = t1680 + t1741 + t1789;
  t1799 = t1438*t1792;
  t1804 = t1211*t1304;
  t1806 = t1198*t1357;
  t1807 = t1186*t1419;
  t1813 = t1804 + t1806 + t1807;
  t1814 = t1679*t1813;
  t1816 = t1096*t1304;
  t1817 = t1027*t1357;
  t1821 = t797*t1419;
  t1826 = t1816 + t1817 + t1821;
  t1827 = t1737*t1826;
  t1835 = t1788*t1438;
  t1838 = t1814 + t1827 + t1835;
  t1840 = t1753*t1838;
  t1845 = t1182 + t1219 + t1799 + t1840;
  t1892 = -1.*t1545*t1458;
  t1896 = -1.*t1451*t1621;
  t1897 = -1.*t1463*t1670;
  t1908 = t1892 + t1896 + t1897;
  t1915 = t1545*t1304;
  t1916 = t1621*t1357;
  t1917 = t1670*t1419;
  t1922 = t1915 + t1916 + t1917;
  t1857 = -0.038749*t1007;
  t1858 = 0.281211*t1088;
  t1870 = 7.e-6*t1122;
  t1878 = t1870 + t934 + t1249;
  t1884 = 1.e-6*t1878;
  t1910 = -1.*t1304*t1908;
  t1923 = -1.*t1458*t1922;
  t1930 = -1.*t1357*t1908;
  t1931 = -1.*t1451*t1922;
  t1935 = t1930 + t1931;
  t1936 = 4.e-6*t1935;
  t1942 = t1419*t1908;
  t1948 = t1463*t1922;
  t1950 = t1942 + t1948;
  t1953 = 7.e-6*t1950;
  t1955 = t1857 + t1858 + t1884 + t1910 + t1923 + t1936 + t1953;
  t480 = Sin(var1[15]);
  t424 = Cos(var1[15]);
  t434 = -1.*t424;
  t461 = 1. + t434;
  t472 = -0.15121*t461;
  t499 = -0.15121*t480;
  t1982 = 0.15121*t480;
  t1988 = t480*t1679;
  t1989 = t424*t1737;
  t1993 = t472 + t1982 + t1988 + t1989;
  t2020 = t424*t1679;
  t2024 = -1.*t480*t1737;
  t2031 = t472 + t499 + t2020 + t2024;
  t1968 = t480*t1469;
  t1979 = t424*t1696;
  t1981 = t1968 + t1979;
  t1994 = -1.*t1981*t1993;
  t1997 = t424*t1469;
  t2002 = -1.*t480*t1696;
  t2008 = t1997 + t2002;
  t2032 = -1.*t2008*t2031;
  t2034 = t1789 + t1994 + t2032;
  t2036 = t1438*t2034;
  t2044 = t480*t1813;
  t2046 = t424*t1826;
  t2049 = t2044 + t2046;
  t2057 = t1993*t2049;
  t2061 = t424*t1813;
  t2066 = -1.*t480*t1826;
  t2078 = t2061 + t2066;
  t2080 = t2031*t2078;
  t2108 = t1835 + t2057 + t2080;
  t2109 = t1753*t2108;
  t2112 = t2036 + t2109;
  t360 = Cos(var1[4]);
  t413 = Cos(var1[5]);
  t2176 = Sin(var1[5]);
  t2131 = Sin(var1[4]);
  t2188 = -1.*t360*t413*t480;
  t2192 = -1.*t424*t360*t2176;
  t2197 = t2188 + t2192;
  t2207 = t424*t360*t413;
  t2208 = -1.*t360*t480*t2176;
  t2210 = t2207 + t2208;
  t2303 = t1370*t1007;
  t2308 = t1311*t1088;
  t2311 = t1237*t1143;
  t2312 = t2303 + t2308 + t2311;
  t2320 = t2312*t2131;
  t2326 = -1.*t480*t1170;
  t2327 = t424*t1218;
  t2332 = t2326 + t2327;
  t2334 = t413*t2332;
  t2335 = t424*t1170;
  t2336 = t480*t1218;
  t2337 = t2335 + t2336;
  t2338 = -1.*t2337*t2176;
  t2345 = t2334 + t2338;
  t2348 = t360*t2345;
  t2422 = t2320 + t2348;
  t2222 = t1370*t2131;
  t2230 = t797*t2197;
  t2234 = t1186*t2210;
  t2235 = t2222 + t2230 + t2234;
  t2247 = t1311*t2131;
  t2253 = t1027*t2197;
  t2255 = t1198*t2210;
  t2257 = t2247 + t2253 + t2255;
  t2279 = t1237*t2131;
  t2281 = t1096*t2197;
  t2282 = t1211*t2210;
  t2291 = t2279 + t2281 + t2282;
  t2504 = Sin(var1[3]);
  t2506 = t413*t2337;
  t2508 = t2332*t2176;
  t2510 = t2506 + t2508;
  t2515 = t2504*t2510;
  t2525 = Cos(var1[3]);
  t2527 = t360*t2312;
  t2529 = -1.*t2131*t2345;
  t2530 = t2527 + t2529;
  t2535 = t2525*t2530;
  t2537 = t2515 + t2535;
  t2547 = t2525*t2510;
  t2550 = -1.*t2504*t2530;
  t2551 = t2547 + t2550;
  t2584 = t413*t1981;
  t2586 = t2008*t2176;
  t2593 = t2584 + t2586;
  t2572 = t413*t2031;
  t2576 = -1.*t1993*t2176;
  t2582 = t2572 + t2576;
  t2594 = t413*t1993;
  t2600 = t2031*t2176;
  t2610 = t2594 + t2600;
  t2559 = t413*t2049;
  t2563 = t2078*t2176;
  t2565 = t2559 + t2563;
  t2566 = t413*t2008;
  t2568 = -1.*t1981*t2176;
  t2570 = t2566 + t2568;
  t2583 = -1.*t2570*t2582;
  t2612 = -1.*t2593*t2610;
  t2613 = t1789 + t2583 + t2612;
  t2622 = t2565*t2613;
  t2626 = t413*t2078;
  t2627 = -1.*t2049*t2176;
  t2628 = t2626 + t2627;
  t2629 = t2582*t2628;
  t2662 = t2610*t2565;
  t2666 = t1835 + t2629 + t2662;
  t2670 = t2593*t2666;
  t2673 = t2622 + t2670;
  t2763 = t1753*t2131;
  t2766 = t360*t2570;
  t2787 = t2763 + t2766;
  t2788 = t1788*t2131;
  t2801 = t360*t2582;
  t2807 = t2788 + t2801;
  t2727 = t1438*t2131;
  t2733 = t360*t2628;
  t2734 = t2727 + t2733;
  t2831 = t360*t1788;
  t2838 = -1.*t2131*t2582;
  t2847 = t2831 + t2838;
  t2808 = -1.*t2787*t2807;
  t2811 = t360*t1753;
  t2818 = -1.*t2131*t2570;
  t2827 = t2811 + t2818;
  t2854 = -1.*t2827*t2847;
  t2855 = t2612 + t2808 + t2854;
  t2856 = t2734*t2855;
  t2870 = t2807*t2734;
  t2877 = t360*t1438;
  t2899 = -1.*t2131*t2628;
  t2907 = t2877 + t2899;
  t2910 = t2847*t2907;
  t2912 = t2662 + t2870 + t2910;
  t2914 = t2787*t2912;
  t2915 = t2856 + t2914;
  t3030 = 0.15121*t424;
  t3031 = t3030 + t499 + t2020 + t2024;
  t2929 = -0.15121*t424;
  t2930 = -1.*t480*t1679;
  t2969 = -1.*t424*t1737;
  t2978 = t2929 + t499 + t2930 + t2969;
  t3120 = -1.*t424*t1170;
  t3122 = -1.*t480*t1218;
  t3123 = t3120 + t3122;
  t3126 = t413*t3123;
  t3127 = -1.*t2332*t2176;
  t3131 = t3126 + t3127;
  t3135 = t3123*t2176;
  t3136 = t2334 + t3135;
  t3074 = -1.*t480*t1813;
  t3076 = -1.*t424*t1826;
  t3082 = t3074 + t3076;
  t2991 = -1.*t480*t1469;
  t2999 = -1.*t424*t1696;
  t3006 = t2991 + t2999;
  t3159 = t3082*t2176;
  t3160 = t2626 + t3159;
  t3293 = t413*t2978;
  t3320 = -1.*t3031*t2176;
  t3325 = t3293 + t3320;
  t3163 = t413*t3031;
  t3165 = t2978*t2176;
  t3184 = t3163 + t3165;
  t3276 = t3006*t2176;
  t3288 = t2566 + t3276;
  t3185 = -1.*t2593*t3184;
  t3292 = -1.*t3288*t2610;
  t3186 = t413*t3006;
  t3210 = -1.*t2008*t2176;
  t3257 = t3186 + t3210;
  t3344 = t413*t3082;
  t3352 = -1.*t2078*t2176;
  t3356 = t3344 + t3352;
  t3339 = t2610*t3160;
  t3358 = t3184*t2565;
  t3463 = -1.*t413*t2337;
  t3466 = t3463 + t3127;
  t3564 = -1.*t413*t1993;
  t3566 = -1.*t2031*t2176;
  t3569 = t3564 + t3566;
  t3551 = -1.*t2593*t2582;
  t3591 = -1.*t2570*t2610;
  t3544 = -1.*t413*t1981;
  t3546 = t3544 + t3210;
  t3626 = -1.*t413*t2049;
  t3632 = t3626 + t3352;
  t3625 = t2610*t2628;
  t3635 = t2582*t2565;
  t3887 = -1.*t2312*t2131;
  t3890 = -1.*t360*t2345;
  t3893 = t3887 + t3890;
  t3948 = -1.*t1788*t2131;
  t3952 = -1.*t360*t2582;
  t3957 = t3948 + t3952;
  t4211 = 4.e-6*t818;
  t4168 = 7.e-6*t818;
  t4176 = t4168 + t960;
  t4177 = -7.e-6*t4176;
  t4178 = 2.8e-11*t954;
  t4194 = t819 + t4177 + t4178;
  t4232 = 7.000000000455e-6*t954;
  t4287 = t4211 + t4232;
  t4344 = t4211 + t1328;
  t4350 = -7.e-6*t4344;
  t4352 = 1.000000000016*t954;
  t4353 = t4350 + t4352;
  t4514 = -4.e-6*t818;
  t4722 = t4514 + t1328;
  t4729 = t4168 + t1249;
  t4645 = -7.e-6*t818;
  t4652 = -2.8e-11*t954;
  t4668 = t818 + t4652;
  t4584 = t818 + t4178;
  t4745 = -0.80315*t4722;
  t4748 = -0.038575000014*t4729;
  t4751 = t4645 + t960;
  t4752 = -0.038576*t4751;
  t4766 = t4211 + t1051;
  t4769 = -0.5031510000080001*t4766;
  t4773 = 9.666256095795e-12*t954;
  t4786 = 2.826290000000002e-7 + t4745 + t4748 + t4752 + t4769 + t4773;
  t4793 = t4645 + t1249;
  t4801 = -3.367757e-6*t4793;
  t4810 = -0.80315*t4668;
  t4813 = t819 + t4178;
  t4814 = -0.5031510000080001*t4813;
  t4817 = -0.148715*t4176;
  t4819 = 9.99986000053965e-7*t954;
  t4820 = 1.1305160000000008e-12 + t4801 + t4810 + t4814 + t4817 + t4819;
  t4822 = -0.148715*t4344;
  t4827 = t819 + t4652;
  t4832 = -0.038576*t4827;
  t4855 = -0.038575000014*t4584;
  t4857 = t4514 + t1051;
  t4860 = -3.367757e-6*t4857;
  t4868 = 0.2999989999967999*t954;
  t4870 = -1.9784030000000015e-12 + t4822 + t4832 + t4855 + t4860 + t4868;
  t4910 = -4.00000000026e-6*t954;
  t4911 = t4168 + t4910;
  t4939 = 4.e-6*t4344;
  t4941 = t818 + t4939 + t4178;
  t4971 = 4.e-6*t4176;
  t4974 = 1.000000000049*t954;
  t4976 = t4971 + t4974;
  t4588 = 4.e-6*t4584;
  t4631 = -1.12e-16*t954;
  t4632 = t4514 + t4588 + t4631;
  t4693 = 7.e-6*t4668;
  t4712 = 1.96e-16*t954;
  t4717 = t4645 + t4693 + t4712;
  t4724 = 7.e-6*t4722;
  t4730 = 4.e-6*t4729;
  t4731 = 6.5e-11*t954;
  t4737 = t4724 + t4730 + t4731;
  t4636 = t1370*t4632;
  t4718 = t1311*t4717;
  t4740 = t1237*t4737;
  t4741 = t4636 + t4718 + t4740;
  t4789 = t1211*t4786;
  t4821 = t1198*t4820;
  t4872 = t1186*t4870;
  t4873 = t4789 + t4821 + t4872;
  t4883 = t1096*t4786;
  t4884 = t1027*t4820;
  t4890 = t797*t4870;
  t4897 = t4883 + t4884 + t4890;
  t4901 = t1237*t4786;
  t4904 = t1311*t4820;
  t4906 = t1370*t4870;
  t4907 = t4901 + t4904 + t4906;
  t5333 = t1237*t4911;
  t5334 = t1370*t4941;
  t5347 = t1311*t4976;
  t5371 = t5333 + t5334 + t5347;
  t6110 = -1.*t1545*t4911;
  t6333 = -1.*t1451*t4820;
  t6377 = -1.*t4786*t1458;
  t6397 = -1.*t4870*t1463;
  t6400 = -1.*t4976*t1621;
  t6401 = -1.*t4941*t1670;
  t6402 = t6110 + t6333 + t6377 + t6397 + t6400 + t6401;
  t6425 = t1304*t4786;
  t6429 = t1545*t4737;
  t6478 = t4717*t1621;
  t6528 = t4820*t1357;
  t6542 = t4632*t1670;
  t6549 = t4870*t1419;
  t6551 = t6425 + t6429 + t6478 + t6528 + t6542 + t6549;
  t4909 = -1.*t4907*t1753;
  t5386 = -1.*t5371*t1788;
  t4932 = t1211*t4911;
  t4970 = t1186*t4941;
  t5015 = t1198*t4976;
  t5019 = t4932 + t4970 + t5015;
  t5080 = t1096*t4911;
  t5100 = t797*t4941;
  t5225 = t1027*t4976;
  t5278 = t5080 + t5100 + t5225;
  t5755 = t4741*t1788;
  t5868 = t4907*t1438;
  t5577 = t797*t4632;
  t5628 = t1027*t4717;
  t5697 = t1096*t4737;
  t5707 = t5577 + t5628 + t5697;
  t5435 = t1186*t4632;
  t5439 = t1198*t4717;
  t5457 = t1211*t4737;
  t5466 = t5435 + t5439 + t5457;
  t6924 = t480*t4873;
  t6939 = t424*t4897;
  t7025 = t6924 + t6939;
  t7050 = t424*t4873;
  t7059 = -1.*t480*t4897;
  t7081 = t7050 + t7059;
  t4209 = t1198*t4194;
  t4340 = t1211*t4287;
  t4393 = t1186*t4353;
  t4394 = t4209 + t4340 + t4393;
  t4456 = t1027*t4194;
  t4458 = t1096*t4287;
  t4462 = t797*t4353;
  t4488 = t4456 + t4458 + t4462;
  t8322 = t480*t4394;
  t8514 = t424*t4488;
  t8515 = t8322 + t8514;
  t8009 = t424*t4394;
  t8136 = -1.*t480*t4488;
  t8140 = t8009 + t8136;
  t7889 = t1311*t4194;
  t7891 = t1237*t4287;
  t7911 = t1370*t4353;
  t7934 = t7889 + t7891 + t7911;
  t8147 = t413*t8140;
  t8555 = -1.*t8515*t2176;
  t8563 = t8147 + t8555;
  t8661 = t413*t8515;
  t8664 = t8140*t2176;
  t8671 = t8661 + t8664;
  t8762 = t360*t7934;
  t8792 = -1.*t2131*t8563;
  t8803 = t8762 + t8792;
  t7550 = t424*t5707;
  t7823 = t480*t5466;
  t7828 = t7550 + t7823;
  t7838 = -1.*t480*t5707;
  t7840 = t424*t5466;
  t7846 = t7838 + t7840;
  t7284 = t424*t5019;
  t7316 = -1.*t480*t5278;
  t7317 = t7284 + t7316;
  t7193 = t480*t5019;
  t7199 = t424*t5278;
  t7228 = t7193 + t7199;
  t8901 = t413*t7828;
  t8904 = t7846*t2176;
  t8905 = t8901 + t8904;
  t8912 = t413*t7081;
  t8934 = -1.*t7025*t2176;
  t8944 = t8912 + t8934;
  t8949 = t413*t7025;
  t8956 = t7081*t2176;
  t8957 = t8949 + t8956;
  t8978 = t413*t7228;
  t8984 = t7317*t2176;
  t8996 = t8978 + t8984;
  t9029 = t413*t7846;
  t9030 = -1.*t7828*t2176;
  t9035 = t9029 + t9030;
  t8959 = -1.*t8957*t2593;
  t8997 = -1.*t8996*t2610;
  t8963 = t413*t7317;
  t8965 = -1.*t7228*t2176;
  t8969 = t8963 + t8965;
  t9093 = t8905*t2610;
  t9105 = t8957*t2565;
  t9271 = t4741*t2131;
  t9284 = t360*t9035;
  t9293 = t9271 + t9284;
  t9344 = t4907*t2131;
  t9345 = t360*t8944;
  t9346 = t9344 + t9345;
  t9349 = t360*t4907;
  t9350 = -1.*t2131*t8944;
  t9351 = t9349 + t9350;
  t9353 = t5371*t2131;
  t9356 = t360*t8969;
  t9358 = t9353 + t9356;
  t9462 = -2.8e-11*t760;
  t9463 = t636 + t9462;
  t9468 = 4.e-6*t607;
  t9469 = t9468 + t1023;
  t9504 = -7.e-6*t607;
  t9505 = t9504 + t1210;
  t9490 = -4.e-6*t607;
  t9499 = t9490 + t1023;
  t9697 = 7.e-6*t607;
  t9935 = 2.8e-11*t760;
  t9939 = t9697 + t1210;
  t9943 = t607 + t9462;
  t9948 = t607 + t9935;
  t9954 = -0.038749000006999997*t9948;
  t9956 = t9490 + t1220;
  t9970 = -1.8134809999999998e-6*t9956;
  t9986 = -0.2812110000084994*t760;
  t9997 = t9469*t1545;
  t10003 = t9463*t1621;
  t10012 = -1.000000000016*t760*t1670;
  t10046 = -2.7726089999999997e-12 + t9954 + t9970 + t9986 + t9997 + t10003 + t10012;
  t9707 = t9697 + t795;
  t9709 = -0.038749000006999997*t9707;
  t9724 = t9468 + t1220;
  t9771 = -0.281211000004*t9724;
  t9772 = -1.1787626499999999e-16*t760;
  t9787 = -6.5e-11*t760*t1545;
  t9797 = t9505*t1621;
  t9871 = t9499*t1670;
  t9888 = 3.9608699999999997e-7 + t9709 + t9771 + t9772 + t9787 + t9797 + t9871;
  t10096 = t9939*t1304;
  t10103 = -1.000000000049*t760*t1357;
  t10104 = t9943*t1419;
  t10122 = t10096 + t10103 + t10104;
  t9929 = t9504 + t795;
  t9931 = -1.8134809999999998e-6*t9929;
  t9936 = t636 + t9935;
  t9937 = -0.281211000004*t9936;
  t9938 = -0.03874900000889869*t760;
  t9940 = t9939*t1545;
  t9941 = -1.000000000049*t760*t1621;
  t9944 = t9943*t1670;
  t9945 = 1.5843479999999999e-12 + t9931 + t9937 + t9938 + t9940 + t9941 + t9944;
  t10061 = -1.000000000049*t760*t1451;
  t10062 = t9939*t1458;
  t10068 = t9943*t1463;
  t10080 = t10061 + t10062 + t10068;
  t9946 = -1.*t1753*t9945;
  t10081 = -1.*t10080*t1788;
  t9899 = t9505*t1451;
  t9910 = -6.5e-11*t760*t1458;
  t9917 = t9499*t1463;
  t9926 = t9899 + t9910 + t9917;
  t9538 = t9463*t1451;
  t9563 = t9469*t1458;
  t9600 = -1.000000000016*t760*t1463;
  t9623 = t9538 + t9563 + t9600;
  t10165 = t1788*t10122;
  t10190 = t9945*t1438;
  t10277 = t424*t9888;
  t10280 = t480*t10046;
  t10294 = t10277 + t10280;
  t10261 = -1.*t480*t9888;
  t10262 = t424*t10046;
  t10275 = t10261 + t10262;
  t10135 = -6.5e-11*t760*t1304;
  t10140 = t9505*t1357;
  t10146 = t9499*t1419;
  t10153 = t10135 + t10140 + t10146;
  t10168 = t9469*t1304;
  t10170 = t9463*t1357;
  t10176 = -1.000000000016*t760*t1419;
  t10177 = t10168 + t10170 + t10176;
  t9459 = -1.000000000016*t760*t1007;
  t9464 = t9463*t1088;
  t9471 = t9469*t1143;
  t9474 = t9459 + t9464 + t9471;
  t9501 = t9499*t1007;
  t9509 = t9505*t1088;
  t9511 = -6.5e-11*t760*t1143;
  t9513 = t9501 + t9509 + t9511;
  t10427 = t480*t9474;
  t10430 = t424*t9513;
  t10432 = t10427 + t10430;
  t10412 = t424*t9474;
  t10414 = -1.*t480*t9513;
  t10423 = t10412 + t10414;
  t10374 = t9943*t1007;
  t10389 = -1.000000000049*t760*t1088;
  t10403 = t9939*t1143;
  t10409 = t10374 + t10389 + t10403;
  t10426 = t413*t10423;
  t10434 = -1.*t10432*t2176;
  t10436 = t10426 + t10434;
  t10444 = t413*t10432;
  t10468 = t10423*t2176;
  t10504 = t10444 + t10468;
  t10582 = t360*t10409;
  t10600 = -1.*t2131*t10436;
  t10629 = t10582 + t10600;
  t10344 = t424*t10153;
  t10345 = t480*t10177;
  t10354 = t10344 + t10345;
  t10318 = -1.*t480*t10153;
  t10335 = t424*t10177;
  t10341 = t10318 + t10335;
  t10231 = -1.*t480*t9926;
  t10236 = t424*t9623;
  t10243 = t10231 + t10236;
  t10226 = t424*t9926;
  t10227 = t480*t9623;
  t10229 = t10226 + t10227;
  t10810 = t413*t10229;
  t10817 = t10243*t2176;
  t10819 = t10810 + t10817;
  t10879 = t413*t10275;
  t10886 = -1.*t10294*t2176;
  t10889 = t10879 + t10886;
  t10844 = t413*t10294;
  t10851 = t10275*t2176;
  t10867 = t10844 + t10851;
  t10791 = t413*t10354;
  t10792 = t10341*t2176;
  t10793 = t10791 + t10792;
  t10932 = t413*t10341;
  t10935 = -1.*t10354*t2176;
  t10969 = t10932 + t10935;
  t10829 = -1.*t10819*t2610;
  t10873 = -1.*t2593*t10867;
  t10802 = t413*t10243;
  t10803 = -1.*t10229*t2176;
  t10804 = t10802 + t10803;
  t11009 = t10080*t2131;
  t11010 = t360*t10804;
  t11011 = t11009 + t11010;
  t10929 = t10867*t2565;
  t10931 = t2610*t10793;
  t11039 = t9945*t2131;
  t11060 = t360*t10889;
  t11061 = t11039 + t11060;
  t11075 = t360*t9945;
  t11076 = -1.*t2131*t10889;
  t11090 = t11075 + t11076;
  t10997 = t10122*t2131;
  t11000 = t360*t10969;
  t11001 = t10997 + t11000;
  t11200 = -0.15121*t1469;
  t11210 = 0.15121*t1696;
  t11221 = t1218*t1679;
  t11223 = t1170*t1737;
  t11226 = t2312*t1788;
  t11232 = t11221 + t11223 + t11226;
  t11236 = t1438*t11232;
  t11239 = -1.*t1679*t1813;
  t11241 = -1.*t1737*t1826;
  t11243 = -1.*t1788*t1438;
  t11245 = t11239 + t11241 + t11243;
  t11246 = t2312*t11245;
  t11249 = t11200 + t11210 + t11236 + t11246;
  t11278 = t1545*t1143;
  t11285 = t1088*t1621;
  t11286 = t1007*t1670;
  t11287 = t11278 + t11285 + t11286;
  t11311 = -1.*t1545*t1304;
  t11314 = -1.*t1621*t1357;
  t11315 = -1.*t1670*t1419;
  t11319 = t11311 + t11314 + t11315;
  t11257 = 0.281211*t1451;
  t11259 = -1. + t1245;
  t11269 = 4.e-6*t11259;
  t11270 = t11269 + t1039 + t1328;
  t11271 = 1.e-6*t11270;
  t11274 = -0.038749*t1463;
  t11307 = -1.*t1304*t11287;
  t11339 = -1.*t1143*t11319;
  t11352 = t1419*t11287;
  t11376 = t1007*t11319;
  t11378 = t11352 + t11376;
  t11379 = 7.e-6*t11378;
  t11381 = -1.*t1357*t11287;
  t11382 = -1.*t1088*t11319;
  t11384 = t11381 + t11382;
  t11385 = 4.e-6*t11384;
  t11386 = t11257 + t11271 + t11274 + t11307 + t11339 + t11379 + t11385;
  t11395 = t2337*t1993;
  t11399 = t2332*t2031;
  t11405 = t11226 + t11395 + t11399;
  t11411 = t1438*t11405;
  t11427 = -1.*t1993*t2049;
  t11428 = -1.*t2031*t2078;
  t11433 = t11243 + t11427 + t11428;
  t11440 = t2312*t11433;
  t11443 = t11411 + t11440;
  t2128 = t1757 + t1760 + t1764 + t1776;
  t590 = t472 + t499;
  t2174 = t472 + t1982;
  t2186 = t1700 + t1705 + t1711 + t1724;
  t11455 = t413*t2504*t2131;
  t11469 = t2525*t2176;
  t11481 = t11455 + t11469;
  t11487 = t2525*t413;
  t11489 = -1.*t2504*t2131*t2176;
  t11490 = t11487 + t11489;
  t2206 = t1470 + t1472 + t1481 + t1504;
  t11542 = t2504*t2593;
  t11544 = t2525*t2827;
  t11545 = t11542 + t11544;
  t11553 = t2525*t2593;
  t11555 = -1.*t2504*t2827;
  t11558 = t11553 + t11555;
  t11644 = t2345*t2582;
  t11701 = t2510*t2610;
  t11702 = t11226 + t11644 + t11701;
  t11704 = t2565*t11702;
  t11705 = -1.*t2582*t2628;
  t11706 = -1.*t2610*t2565;
  t11707 = t11243 + t11705 + t11706;
  t11708 = t2510*t11707;
  t11709 = t11704 + t11708;
  t2221 = t1638 + t1641 + t1661 + t1669;
  t11531 = -1.*t480*t11481;
  t11532 = t424*t11490;
  t11533 = t11531 + t11532;
  t11536 = t424*t11481;
  t11538 = t480*t11490;
  t11539 = t11536 + t11538;
  t2245 = t1553 + t1590 + t1602 + t1615;
  t2274 = t1506 + t1515 + t1529 + t1538;
  t11889 = t2422*t2807;
  t11905 = t2530*t2847;
  t11913 = t11701 + t11889 + t11905;
  t11918 = t2734*t11913;
  t11924 = -1.*t2807*t2734;
  t11929 = -1.*t2847*t2907;
  t11950 = t11706 + t11924 + t11929;
  t11951 = t2422*t11950;
  t11957 = t11918 + t11951;
  t11713 = -1.*t360*t1370*t2504;
  t11714 = t797*t11533;
  t11718 = t1186*t11539;
  t11719 = t11713 + t11714 + t11718;
  t11722 = -1.*t1311*t360*t2504;
  t11723 = t1027*t11533;
  t11727 = t1198*t11539;
  t11728 = t11722 + t11723 + t11727;
  t11730 = -1.*t360*t1237*t2504;
  t11731 = t1096*t11533;
  t11743 = t1211*t11539;
  t11770 = t11730 + t11731 + t11743;
  t12208 = t2510*t3184;
  t12211 = t3136*t2610;
  t12221 = -1.*t2610*t3160;
  t12226 = -1.*t3184*t2565;
  t12552 = t2510*t2582;
  t12554 = t2345*t2610;
  t12585 = -1.*t2610*t2628;
  t12593 = -1.*t2582*t2565;
  t3972 = -1.*t1753*t2131;
  t3988 = -1.*t360*t2570;
  t4001 = t3972 + t3988;
  t4079 = -1.*t1438*t2131;
  t4080 = -1.*t360*t2628;
  t4083 = t4079 + t4080;
  t12978 = t1088*t4820;
  t12980 = t4786*t1143;
  t12981 = t1545*t4287;
  t12982 = t1007*t4870;
  t12988 = t4194*t1621;
  t12995 = t4353*t1670;
  t12996 = t12978 + t12980 + t12981 + t12982 + t12988 + t12995;
  t13010 = -1.*t1304*t4786;
  t13012 = -1.*t1545*t4737;
  t13013 = -1.*t4717*t1621;
  t13014 = -1.*t4820*t1357;
  t13015 = -1.*t4632*t1670;
  t13017 = -1.*t4870*t1419;
  t13018 = t13010 + t13012 + t13013 + t13014 + t13015 + t13017;
  t12690 = t2312*t4907;
  t12700 = t7934*t1788;
  t12711 = -1.*t4741*t1788;
  t12822 = -1.*t4907*t1438;
  t9372 = t360*t5371;
  t9374 = -1.*t2131*t8969;
  t9375 = t9372 + t9374;
  t13187 = t2510*t8957;
  t13191 = t8671*t2610;
  t7967 = t7934*t2131;
  t8586 = t360*t8563;
  t8590 = t7967 + t8586;
  t13195 = -1.*t8905*t2610;
  t13200 = -1.*t8957*t2565;
  t9391 = t360*t4741;
  t9394 = -1.*t2131*t9035;
  t9398 = t9391 + t9394;
  t13258 = t2312*t9945;
  t13261 = t10409*t1788;
  t13283 = -1.*t1788*t10122;
  t13286 = -1.*t9945*t1438;
  t11030 = t360*t10080;
  t11032 = -1.*t2131*t10804;
  t11033 = t11030 + t11032;
  t13494 = t10504*t2610;
  t13507 = t2510*t10867;
  t10411 = t10409*t2131;
  t10437 = t360*t10436;
  t10441 = t10411 + t10437;
  t13570 = -1.*t10867*t2565;
  t13580 = -1.*t2610*t10793;
  t11103 = t360*t10122;
  t11108 = -1.*t2131*t10969;
  t11113 = t11103 + t11108;
  t13672 = -0.15121*t1813;
  t13675 = 0.15121*t1826;
  t13676 = -1.*t1218*t1679;
  t13677 = -1.*t1170*t1737;
  t13680 = -1.*t2312*t1788;
  t13681 = t13676 + t13677 + t13680;
  t13682 = t1753*t13681;
  t13684 = t1469*t1679;
  t13685 = t1696*t1737;
  t13686 = t1753*t1788;
  t13688 = t13684 + t13685 + t13686;
  t13689 = t2312*t13688;
  t13690 = t13672 + t13675 + t13682 + t13689;
  t13704 = -1.*t1545*t1143;
  t13705 = -1.*t1088*t1621;
  t13708 = -1.*t1007*t1670;
  t13709 = t13704 + t13705 + t13708;
  t13713 = t1545*t1458;
  t13714 = t1451*t1621;
  t13716 = t1463*t1670;
  t13717 = t13713 + t13714 + t13716;
  t13693 = 4.e-6*t1518;
  t13696 = -7.e-6*t1263;
  t13697 = 1. + t1108 + t13693 + t13696;
  t13699 = 1.e-6*t13697;
  t13700 = 0.281211*t1357;
  t13702 = -0.038749*t1419;
  t13710 = -1.*t1458*t13709;
  t13718 = -1.*t1143*t13717;
  t13720 = t1463*t13709;
  t13721 = t1007*t13717;
  t13722 = t13720 + t13721;
  t13724 = 7.e-6*t13722;
  t13725 = -1.*t1451*t13709;
  t13727 = -1.*t1088*t13717;
  t13728 = t13725 + t13727;
  t13731 = 4.e-6*t13728;
  t13733 = t13699 + t13700 + t13702 + t13710 + t13718 + t13724 + t13731;
  t13737 = -1.*t2337*t1993;
  t13741 = -1.*t2332*t2031;
  t13742 = t13680 + t13737 + t13741;
  t13743 = t1753*t13742;
  t13744 = t1981*t1993;
  t13745 = t2008*t2031;
  t13746 = t13686 + t13744 + t13745;
  t13747 = t2312*t13746;
  t13748 = t13743 + t13747;
  t13751 = -1.*t2525*t413*t2131;
  t13752 = t2504*t2176;
  t13753 = t13751 + t13752;
  t13755 = t413*t2504;
  t13757 = t2525*t2131*t2176;
  t13758 = t13755 + t13757;
  t13779 = -1.*t2345*t2582;
  t13780 = -1.*t2510*t2610;
  t13781 = t13680 + t13779 + t13780;
  t13784 = t2593*t13781;
  t13785 = t2570*t2582;
  t13786 = t2593*t2610;
  t13787 = t13686 + t13785 + t13786;
  t13788 = t2510*t13787;
  t13791 = t13784 + t13788;
  t13794 = t2504*t2565;
  t13799 = t2525*t2907;
  t13800 = t13794 + t13799;
  t13823 = t2525*t2565;
  t13825 = -1.*t2504*t2907;
  t13827 = t13823 + t13825;
  t13765 = -1.*t480*t13753;
  t13767 = t424*t13758;
  t13768 = t13765 + t13767;
  t13774 = t424*t13753;
  t13775 = t480*t13758;
  t13776 = t13774 + t13775;
  t13908 = -1.*t2422*t2807;
  t13909 = -1.*t2530*t2847;
  t13910 = t13780 + t13908 + t13909;
  t13911 = t2787*t13910;
  t13912 = t2787*t2807;
  t13913 = t2827*t2847;
  t13914 = t13786 + t13912 + t13913;
  t13915 = t2422*t13914;
  t13917 = t13911 + t13915;
  t13831 = t2525*t360*t1370;
  t13832 = t797*t13768;
  t13834 = t1186*t13776;
  t13835 = t13831 + t13832 + t13834;
  t13839 = t1311*t2525*t360;
  t13841 = t1027*t13768;
  t13842 = t1198*t13776;
  t13843 = t13839 + t13841 + t13842;
  t13867 = t2525*t360*t1237;
  t13878 = t1096*t13768;
  t13905 = t1211*t13776;
  t13906 = t13867 + t13878 + t13905;
  t14179 = -1.*t2510*t3184;
  t14181 = -1.*t3136*t2610;
  t14185 = t2593*t3184;
  t14187 = t3288*t2610;
  t14301 = -1.*t2510*t2582;
  t14303 = -1.*t2345*t2610;
  t14416 = t2593*t2582;
  t14418 = t2570*t2610;
  t14731 = t1545*t4911;
  t14732 = t1451*t4820;
  t14733 = t4786*t1458;
  t14734 = t4870*t1463;
  t14735 = t4976*t1621;
  t14736 = t4941*t1670;
  t14737 = t14731 + t14732 + t14733 + t14734 + t14735 + t14736;
  t14740 = -1.*t1088*t4820;
  t14741 = -1.*t4786*t1143;
  t14742 = -1.*t1545*t4287;
  t14743 = -1.*t1007*t4870;
  t14744 = -1.*t4194*t1621;
  t14745 = -1.*t4353*t1670;
  t14747 = t14740 + t14741 + t14742 + t14743 + t14744 + t14745;
  t14670 = -1.*t2312*t4907;
  t14681 = -1.*t7934*t1788;
  t14686 = t4907*t1753;
  t14689 = t5371*t1788;
  t15012 = -1.*t2510*t8957;
  t15014 = -1.*t8671*t2610;
  t15027 = t8957*t2593;
  t15034 = t8996*t2610;
  t15132 = -1.*t2312*t9945;
  t15134 = -1.*t10409*t1788;
  t15143 = t1753*t9945;
  t15145 = t10080*t1788;
  t15176 = -1.*t10504*t2610;
  t15177 = -1.*t2510*t10867;
  t15182 = t10819*t2610;
  t15184 = t2593*t10867;
  p_output1[0]=t2128*t2131 + t2186*t2197 + t2206*t2210 + t2221*t2235 + t2245*t2257 + t2274*t2291 - 0.80315*(t1402*t2235 + t1348*t2257 + t1263*t2291) - 0.038576*(t1651*t2235 + t1582*t2257 + t1518*t2291) - 1.*t2174*t2176*t360 + t360*t413*t590 - 0.148715*(t1065*t2257 + t1122*t2291 + t2235*t988) + var1[0] + t2422*var2[0] + t2551*var2[1] + t2537*var2[2] + t2915*var2[3] + ((-1.*t2504*t2510 - 1.*t2525*t2530)*var2[1] + t2551*var2[2])*var2[3] + t2673*var2[4] + (t2530*var2[0] - 1.*t2504*t3893*var2[1] + t2525*t3893*var2[2] + (t2855*t2907 + t2827*t2912 + t2734*(-1.*t2807*t2827 - 1.*t2787*t2847 - 1.*t2827*t3957 - 1.*t2847*t4001) + t2787*(t2734*t2847 + t2807*t2907 + t2907*t3957 + t2847*t4083))*var2[3])*var2[4] + t2112*var2[5] + (t3466*t360*var2[0] + (t2345*t2525 + t2131*t2504*t3466)*var2[1] + (t2345*t2504 - 1.*t2131*t2525*t3466)*var2[2] + (t2912*t3546*t360 + t2734*(t2131*t2847*t3546 + t3551 + t2131*t2827*t3569 + t3591 - 1.*t2807*t3546*t360 - 1.*t2787*t3569*t360) + t2855*t360*t3632 + t2787*(-1.*t2131*t2907*t3569 + t2734*t3569*t360 + t3625 - 1.*t2131*t2847*t3632 + t2807*t360*t3632 + t3635))*var2[3] + (t2613*t2628 + t2570*t2666 + t2565*(-1.*t2582*t3546 + t3551 - 1.*t2570*t3569 + t3591) + t2593*(t2628*t3569 + t3625 + t2582*t3632 + t3635))*var2[4])*var2[5] + t1845*var2[15] + (t3131*t360*var2[0] + (t2131*t2504*t3131 + t2525*t3136)*var2[1] + (-1.*t2131*t2525*t3131 + t2504*t3136)*var2[2] + (t2912*t3257*t360 + t2855*t3356*t360 + t2734*(t3185 + t2131*t2847*t3257 + t3292 + t2131*t2827*t3325 - 1.*t2807*t3257*t360 - 1.*t2787*t3325*t360) + t2787*(-1.*t2131*t2907*t3325 + t3339 - 1.*t2131*t2847*t3356 + t3358 + t2734*t3325*t360 + t2807*t3356*t360))*var2[3] + (t2613*t3160 + t2666*t3288 + t2565*(t3185 - 1.*t2582*t3257 + t3292 - 1.*t2570*t3325) + t2593*(t2628*t3325 + t3339 + t2582*t3356 + t3358))*var2[4] + (t1438*(-1.*t1993*t2008 - 1.*t2008*t2978 - 1.*t2031*t3006 - 1.*t1981*t3031) + t1753*(t1993*t2078 + t2078*t2978 + t2049*t3031 + t2031*t3082))*var2[5])*var2[15] + t1955*var2[16] + (t10441*var2[0] + (-1.*t10629*t2504 + t10504*t2525)*var2[1] + (t10504*t2504 + t10629*t2525)*var2[2] + (t2734*(t10829 + t10873 - 1.*t11061*t2787 - 1.*t11011*t2807 - 1.*t11090*t2827 - 1.*t11033*t2847) + t11001*t2855 + t2787*(t10929 + t10931 + t11061*t2734 + t11001*t2807 + t11113*t2847 + t11090*t2907) + t11011*t2912)*var2[3] + (t10793*t2613 + t2593*(t10165 + t10190 + t10929 + t10931 + t10969*t2582 + t10889*t2628) + t10819*t2666 + t2565*(t10081 + t10829 + t10873 - 1.*t10889*t2570 - 1.*t10804*t2582 + t9946))*var2[4] + (t10122*t2034 + t1753*(t10165 + t10190 + t10354*t1993 + t10341*t2031 + t10294*t2049 + t10275*t2078) + t10080*t2108 + t1438*(t10081 - 1.*t10294*t1981 - 1.*t10229*t1993 - 1.*t10275*t2008 - 1.*t10243*t2031 + t9946))*var2[5] + (t10122*t1792 + t10080*t1838 - 0.15121*t9474 + 0.15121*t9513 + t1753*(t10165 + t10190 + t10177*t1679 + t10153*t1737 + t10046*t1813 + t1826*t9888) + t1438*(t10081 - 1.*t10046*t1469 - 1.*t1679*t9623 - 1.*t1696*t9888 - 1.*t1737*t9926 + t9946))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t8590*var2[0] + (t2525*t8671 - 1.*t2504*t8803)*var2[1] + (t2504*t8671 + t2525*t8803)*var2[2] + (t2855*t9293 + t2912*t9358 + t2734*(t8959 + t8997 - 1.*t2787*t9346 - 1.*t2827*t9351 - 1.*t2807*t9358 - 1.*t2847*t9375) + t2787*(t9093 + t9105 + t2807*t9293 + t2734*t9346 + t2907*t9351 + t2847*t9398))*var2[3] + (t2613*t8905 + t2666*t8996 + t2565*(t4909 + t5386 - 1.*t2570*t8944 + t8959 - 1.*t2582*t8969 + t8997) + t2593*(t5755 + t5868 + t2628*t8944 + t2582*t9035 + t9093 + t9105))*var2[4] + (t2034*t4741 + t2108*t5371 + t1438*(t4909 + t5386 - 1.*t1981*t7025 - 1.*t2008*t7081 - 1.*t1993*t7228 - 1.*t2031*t7317) + t1753*(t5755 + t5868 + t2049*t7025 + t2078*t7081 + t1993*t7828 + t2031*t7846))*var2[5] + (-0.15121*t4394 + 0.15121*t4488 + t1792*t4741 + t1838*t5371 + t1438*(-1.*t1469*t4873 - 1.*t1696*t4897 + t4909 - 1.*t1679*t5019 - 1.*t1737*t5278 + t5386) + t1753*(t1813*t4873 + t1826*t4897 + t1679*t5466 + t1737*t5707 + t5755 + t5868))*var2[15] + (0.281211*t4194 - 0.038749*t4353 - 1.*t1908*t4737 - 1.*t1922*t4911 - 1.*t1304*t6402 - 1.*t1458*t6551 + 4.e-6*(-1.*t1908*t4717 - 1.*t1922*t4976 - 1.*t1357*t6402 - 1.*t1451*t6551) + 7.e-6*(t1908*t4632 + t1922*t4941 + t1419*t6402 + t1463*t6551) + 1.e-6*(t4514 - 7.000000000455e-6*t954))*var2[16])*var2[17] + t2422*var3[0] + t2551*var3[1] + t2537*var3[2] + t2915*var3[3] + t2673*var3[4] + t2112*var3[5] + t1845*var3[15] + t1955*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=-0.80315*(t11770*t1263 + t11728*t1348 + t11719*t1402) - 0.038576*(t11770*t1518 + t11728*t1582 + t11719*t1651) + t11490*t2174 + t11533*t2186 + t11539*t2206 + t11719*t2221 + t11728*t2245 + t11770*t2274 - 1.*t2128*t2504*t360 + t11481*t590 - 0.148715*(t1065*t11728 + t1122*t11770 + t11719*t988) + var1[1] + t2787*var2[0] + t11558*var2[1] + t11545*var2[2] + t11957*var2[3] + ((-1.*t2504*t2593 - 1.*t2525*t2827)*var2[1] + t11558*var2[2])*var2[3] + t11709*var2[4] + (t2827*var2[0] - 1.*t2504*t4001*var2[1] + t2525*t4001*var2[2] + (t11950*t2530 + t11913*t2907 + t2734*(t2530*t2807 + t2422*t2847 + t2847*t3893 + t2530*t3957) + t2422*(-1.*t2734*t2847 - 1.*t2807*t2907 - 1.*t2907*t3957 - 1.*t2847*t4083))*var2[3])*var2[4] + t11443*var2[5] + (t3546*t360*var2[0] + (t2525*t2570 + t2131*t2504*t3546)*var2[1] + (t2504*t2570 - 1.*t2131*t2525*t3546)*var2[2] + (t11950*t3466*t360 + t2734*(t12552 + t12554 - 1.*t2131*t2847*t3466 - 1.*t2131*t2530*t3569 + t2807*t3466*t360 + t2422*t3569*t360) + t11913*t360*t3632 + t2422*(t12585 + t12593 + t2131*t2907*t3569 - 1.*t2734*t3569*t360 + t2131*t2847*t3632 - 1.*t2807*t360*t3632))*var2[3] + (t11707*t2345 + t11702*t2628 + t2565*(t12552 + t12554 + t2582*t3466 + t2345*t3569) + t2510*(t12585 + t12593 - 1.*t2628*t3569 - 1.*t2582*t3632))*var2[4])*var2[5] + t11249*var2[15] + (t3257*t360*var2[0] + (t2131*t2504*t3257 + t2525*t3288)*var2[1] + (-1.*t2131*t2525*t3257 + t2504*t3288)*var2[2] + (t11950*t3131*t360 + t11913*t3356*t360 + t2734*(t12208 + t12211 - 1.*t2131*t2847*t3131 - 1.*t2131*t2530*t3325 + t2807*t3131*t360 + t2422*t3325*t360) + t2422*(t12221 + t12226 + t2131*t2907*t3325 + t2131*t2847*t3356 - 1.*t2734*t3325*t360 - 1.*t2807*t3356*t360))*var2[3] + (t11707*t3136 + t11702*t3160 + t2565*(t12208 + t12211 + t2582*t3131 + t2345*t3325) + t2510*(t12221 + t12226 - 1.*t2628*t3325 - 1.*t2582*t3356))*var2[4] + (t2312*(-1.*t1993*t2078 - 1.*t2078*t2978 - 1.*t2049*t3031 - 1.*t2031*t3082) + t1438*(t1993*t2332 + t2332*t2978 + t2337*t3031 + t2031*t3123))*var2[5])*var2[15] + t11386*var2[16] + (t11011*var2[0] + (-1.*t11033*t2504 + t10819*t2525)*var2[1] + (t10819*t2504 + t11033*t2525)*var2[2] + (t11001*t11913 + t10441*t11950 + t2734*(t13494 + t13507 + t11061*t2422 + t11090*t2530 + t10441*t2807 + t10629*t2847) + t2422*(t13570 + t13580 - 1.*t11061*t2734 - 1.*t11001*t2807 - 1.*t11113*t2847 - 1.*t11090*t2907))*var2[3] + (t10793*t11702 + t10504*t11707 + t2565*(t13258 + t13261 + t13494 + t13507 + t10889*t2345 + t10436*t2582) + t2510*(t13283 + t13286 + t13570 + t13580 - 1.*t10969*t2582 - 1.*t10889*t2628))*var2[4] + (t10122*t11405 + t10409*t11433 + (t13283 + t13286 - 1.*t10354*t1993 - 1.*t10341*t2031 - 1.*t10294*t2049 - 1.*t10275*t2078)*t2312 + t1438*(t13258 + t13261 + t10432*t1993 + t10423*t2031 + t10275*t2332 + t10294*t2337))*var2[5] + (t10122*t11232 + t10409*t11245 - 0.15121*t9623 + t1438*(t10046*t1218 + t13258 + t13261 + t1679*t9474 + t1737*t9513 + t1170*t9888) + t2312*(t13283 + t13286 - 1.*t10177*t1679 - 1.*t10153*t1737 - 1.*t10046*t1813 - 1.*t1826*t9888) + 0.15121*t9926)*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t9358*var2[0] + (t2525*t8996 - 1.*t2504*t9375)*var2[1] + (t2504*t8996 + t2525*t9375)*var2[2] + (t11950*t8590 + t11913*t9293 + t2734*(t13187 + t13191 + t2807*t8590 + t2847*t8803 + t2422*t9346 + t2530*t9351) + t2422*(t13195 + t13200 - 1.*t2807*t9293 - 1.*t2734*t9346 - 1.*t2907*t9351 - 1.*t2847*t9398))*var2[3] + (t11707*t8671 + t11702*t8905 + t2565*(t12690 + t12700 + t13187 + t13191 + t2582*t8563 + t2345*t8944) + t2510*(t12711 + t12822 + t13195 + t13200 - 1.*t2628*t8944 - 1.*t2582*t9035))*var2[4] + (t11405*t4741 + t2312*(t12711 + t12822 - 1.*t2049*t7025 - 1.*t2078*t7081 - 1.*t1993*t7828 - 1.*t2031*t7846) + t11433*t7934 + t1438*(t12690 + t12700 + t2337*t7025 + t2332*t7081 + t2031*t8140 + t1993*t8515))*var2[5] + (t11232*t4741 + t1438*(t12690 + t12700 + t1679*t4394 + t1737*t4488 + t1218*t4873 + t1170*t4897) - 0.15121*t5019 + 0.15121*t5278 + t2312*(t12711 + t12822 - 1.*t1813*t4873 - 1.*t1826*t4897 - 1.*t1679*t5466 - 1.*t1737*t5707) + t11245*t7934)*var2[15] + (-1.*t1143*t13018 - 1.*t12996*t1304 - 1.*t11319*t4287 + 7.e-6*(t1007*t13018 + t12996*t1419 + t11319*t4353 + t11287*t4632) + 4.e-6*(-1.*t1088*t13018 - 1.*t12996*t1357 - 1.*t11319*t4194 - 1.*t11287*t4717) - 1.*t11287*t4737 - 0.038749*t4941 + 0.281211*t4976 + 1.e-6*(t4645 + 4.00000000026e-6*t954))*var2[16])*var2[17] + t2787*var3[0] + t11558*var3[1] + t11545*var3[2] + t11957*var3[3] + t11709*var3[4] + t11443*var3[5] + t11249*var3[15] + t11386*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=-0.80315*(t1348*t13843 + t1263*t13906 + t13835*t1402) - 0.038576*(t13906*t1518 + t13843*t1582 + t13835*t1651) + t13758*t2174 + t13768*t2186 + t13776*t2206 + t13835*t2221 + t13843*t2245 + t13906*t2274 + t2128*t2525*t360 + t13753*t590 - 0.148715*(t1065*t13843 + t1122*t13906 + t13835*t988) + var1[2] + t2734*var2[0] + t13827*var2[1] + t13800*var2[2] + t13917*var2[3] + ((-1.*t2504*t2565 - 1.*t2525*t2907)*var2[1] + t13827*var2[2])*var2[3] + t13791*var2[4] + (t2907*var2[0] - 1.*t2504*t4083*var2[1] + t2525*t4083*var2[2] + (t13914*t2530 + t13910*t2827 + t2787*(-1.*t2530*t2807 - 1.*t2422*t2847 - 1.*t2847*t3893 - 1.*t2530*t3957) + t2422*(t2807*t2827 + t2787*t2847 + t2827*t3957 + t2847*t4001))*var2[3])*var2[4] + t13748*var2[5] + (t360*t3632*var2[0] + (t2525*t2628 + t2131*t2504*t3632)*var2[1] + (t2504*t2628 - 1.*t2131*t2525*t3632)*var2[2] + (t13914*t3466*t360 + t13910*t3546*t360 + t2787*(t14301 + t14303 + t2131*t2847*t3466 + t2131*t2530*t3569 - 1.*t2807*t3466*t360 - 1.*t2422*t3569*t360) + t2422*(t14416 + t14418 - 1.*t2131*t2847*t3546 - 1.*t2131*t2827*t3569 + t2807*t3546*t360 + t2787*t3569*t360))*var2[3] + (t13787*t2345 + t13781*t2570 + t2593*(t14301 + t14303 - 1.*t2582*t3466 - 1.*t2345*t3569) + t2510*(t14416 + t14418 + t2582*t3546 + t2570*t3569))*var2[4])*var2[5] + t13690*var2[15] + (t3356*t360*var2[0] + (t2525*t3160 + t2131*t2504*t3356)*var2[1] + (t2504*t3160 - 1.*t2131*t2525*t3356)*var2[2] + (t13914*t3131*t360 + t13910*t3257*t360 + t2787*(t14179 + t14181 + t2131*t2847*t3131 + t2131*t2530*t3325 - 1.*t2807*t3131*t360 - 1.*t2422*t3325*t360) + t2422*(t14185 + t14187 - 1.*t2131*t2847*t3257 - 1.*t2131*t2827*t3325 + t2807*t3257*t360 + t2787*t3325*t360))*var2[3] + (t13787*t3136 + t13781*t3288 + t2593*(t14179 + t14181 - 1.*t2582*t3131 - 1.*t2345*t3325) + t2510*(t14185 + t14187 + t2582*t3257 + t2570*t3325))*var2[4] + (t2312*(t1993*t2008 + t2008*t2978 + t2031*t3006 + t1981*t3031) + t1753*(-1.*t1993*t2332 - 1.*t2332*t2978 - 1.*t2337*t3031 - 1.*t2031*t3123))*var2[5])*var2[15] + t13733*var2[16] + (t11001*var2[0] + (-1.*t11113*t2504 + t10793*t2525)*var2[1] + (t10793*t2504 + t11113*t2525)*var2[2] + (t11011*t13910 + t10441*t13914 + t2787*(t15176 + t15177 - 1.*t11061*t2422 - 1.*t11090*t2530 - 1.*t10441*t2807 - 1.*t10629*t2847) + t2422*(t15182 + t15184 + t11061*t2787 + t11011*t2807 + t11090*t2827 + t11033*t2847))*var2[3] + (t10819*t13781 + t10504*t13787 + t2510*(t15143 + t15145 + t15182 + t15184 + t10889*t2570 + t10804*t2582) + (t15132 + t15134 + t15176 + t15177 - 1.*t10889*t2345 - 1.*t10436*t2582)*t2593)*var2[4] + (t10080*t13742 + t10409*t13746 + (t15143 + t15145 + t10294*t1981 + t10229*t1993 + t10275*t2008 + t10243*t2031)*t2312 + t1753*(t15132 + t15134 - 1.*t10432*t1993 - 1.*t10423*t2031 - 1.*t10275*t2332 - 1.*t10294*t2337))*var2[5] + (0.15121*t10153 - 0.15121*t10177 + t10080*t13681 + t10409*t13688 + t1753*(-1.*t10046*t1218 + t15132 + t15134 - 1.*t1679*t9474 - 1.*t1737*t9513 - 1.*t1170*t9888) + t2312*(t10046*t1469 + t15143 + t15145 + t1679*t9623 + t1696*t9888 + t1737*t9926))*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t9293*var2[0] + (t2525*t8905 - 1.*t2504*t9398)*var2[1] + (t2504*t8905 + t2525*t9398)*var2[2] + (t13914*t8590 + t2787*(t15012 + t15014 - 1.*t2807*t8590 - 1.*t2847*t8803 - 1.*t2422*t9346 - 1.*t2530*t9351) + t13910*t9358 + t2422*(t15027 + t15034 + t2787*t9346 + t2827*t9351 + t2807*t9358 + t2847*t9375))*var2[3] + (t13787*t8671 + t2593*(t14670 + t14681 + t15012 + t15014 - 1.*t2582*t8563 - 1.*t2345*t8944) + t2510*(t14686 + t14689 + t15027 + t15034 + t2570*t8944 + t2582*t8969) + t13781*t8996)*var2[4] + (t13742*t5371 + t2312*(t14686 + t14689 + t1981*t7025 + t2008*t7081 + t1993*t7228 + t2031*t7317) + t13746*t7934 + t1753*(t14670 + t14681 - 1.*t2337*t7025 - 1.*t2332*t7081 - 1.*t2031*t8140 - 1.*t1993*t8515))*var2[5] + (t1753*(t14670 + t14681 - 1.*t1679*t4394 - 1.*t1737*t4488 - 1.*t1218*t4873 - 1.*t1170*t4897) + t2312*(t14686 + t14689 + t1469*t4873 + t1696*t4897 + t1679*t5019 + t1737*t5278) + t13681*t5371 - 0.15121*t5466 + 0.15121*t5707 + t13688*t7934)*var2[15] + (-1.*t1143*t14737 - 1.*t1458*t14747 - 1.*t13717*t4287 - 0.038749*t4632 + 0.281211*t4717 - 1.*t13709*t4911 + 7.e-6*(t1007*t14737 + t1463*t14747 + t13717*t4353 + t13709*t4941) + 4.e-6*(-1.*t1088*t14737 - 1.*t1451*t14747 - 1.*t13717*t4194 - 1.*t13709*t4976) + 1.e-6*(-7.e-6*t4722 + 4.e-6*t4751 - 6.5e-11*t954))*var2[16])*var2[17] + t2734*var3[0] + t13827*var3[1] + t13800*var3[2] + t13917*var3[3] + t13791*var3[4] + t13748*var3[5] + t13690*var3[15] + t13733*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_DiagonalStance2.hh"

namespace DiagonalStance2
{

void ddh_RrFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
