/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:19 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t944;
  double t969;
  double t993;
  double t653;
  double t690;
  double t715;
  double t892;
  double t1044;
  double t1074;
  double t1002;
  double t1008;
  double t1097;
  double t1197;
  double t1228;
  double t1331;
  double t1340;
  double t1342;
  double t1421;
  double t1436;
  double t1440;
  double t1452;
  double t721;
  double t1483;
  double t1487;
  double t1506;
  double t1518;
  double t1521;
  double t1235;
  double t1790;
  double t1794;
  double t1634;
  double t1762;
  double t1642;
  double t1647;
  double t1843;
  double t1669;
  double t1688;
  double t1573;
  double t1608;
  double t927;
  double t1854;
  double t1767;
  double t1796;
  double t1906;
  double t1919;
  double t2018;
  double t2029;
  double t2040;
  double t1252;
  double t1300;
  double t2068;
  double t2071;
  double t1467;
  double t1479;
  double t2087;
  double t2095;
  double t943;
  double t2099;
  double t2129;
  double t2193;
  double t1725;
  double t2289;
  double t2312;
  double t2326;
  double t2339;
  double t2341;
  double t2368;
  double t2371;
  double t2372;
  double t2376;
  double t2418;
  double t2441;
  double t2446;
  double t2452;
  double t2454;
  double t2478;
  double t2499;
  double t2500;
  double t2523;
  double t2552;
  double t2554;
  double t2557;
  double t2581;
  double t2668;
  double t2727;
  double t2770;
  double t2771;
  double t2773;
  double t2774;
  double t2778;
  double t2787;
  double t2791;
  double t2794;
  double t1824;
  double t1827;
  double t1734;
  double t2003;
  double t2258;
  double t2883;
  double t2885;
  double t2948;
  double t2955;
  double t2957;
  double t2959;
  double t2185;
  double t2187;
  double t2211;
  double t2226;
  double t2277;
  double t2278;
  double t2434;
  double t2589;
  double t2795;
  double t2800;
  double t1749;
  double t1778;
  double t1803;
  double t1813;
  double t1848;
  double t1851;
  double t1928;
  double t1937;
  double t2033;
  double t2041;
  double t2050;
  double t2851;
  double t2854;
  double t2874;
  double t2877;
  double t2897;
  double t2899;
  double t2908;
  double t2916;
  double t2930;
  double t2939;
  double t2967;
  double t2979;
  double t2998;
  double t3014;
  double t3020;
  double t3021;
  double t3087;
  double t3112;
  double t3114;
  double t3119;
  double t1818;
  double t1975;
  double t2056;
  double t2066;
  double t1231;
  double t1466;
  double t1531;
  double t1540;
  double t1544;
  double t1623;
  double t1657;
  double t1700;
  double t1709;
  double t1711;
  double t2072;
  double t2098;
  double t2161;
  double t2163;
  double t2808;
  double t2809;
  double t2824;
  double t2828;
  double t2837;
  double t2942;
  double t3122;
  double t3133;
  double t3139;
  double t3149;
  double t3154;
  double t3157;
  double t3159;
  double t3162;
  double t3171;
  double t3174;
  double t3175;
  double t3186;
  double t3196;
  double t3235;
  double t3257;
  double t3261;
  double t3272;
  double t3334;
  double t3342;
  double t3343;
  double t3349;
  double t3352;
  double t3385;
  double t3387;
  double t3401;
  double t3311;
  double t3314;
  double t3318;
  double t3326;
  double t3333;
  double t3351;
  double t3411;
  double t3435;
  double t3438;
  double t3450;
  double t3458;
  double t3466;
  double t3474;
  double t3489;
  double t3502;
  double t3505;
  double t293;
  double t264;
  double t280;
  double t287;
  double t292;
  double t402;
  double t3583;
  double t3584;
  double t3586;
  double t3587;
  double t3605;
  double t3609;
  double t3611;
  double t3576;
  double t3577;
  double t3580;
  double t3590;
  double t3597;
  double t3601;
  double t3603;
  double t3612;
  double t3614;
  double t3615;
  double t3620;
  double t3626;
  double t3627;
  double t3629;
  double t3633;
  double t3634;
  double t3639;
  double t3651;
  double t3656;
  double t3658;
  double t3666;
  double t241;
  double t242;
  double t3805;
  double t3773;
  double t3820;
  double t3823;
  double t3825;
  double t3843;
  double t3855;
  double t3869;
  double t3952;
  double t3957;
  double t3974;
  double t4001;
  double t4040;
  double t4047;
  double t4054;
  double t4118;
  double t4122;
  double t4126;
  double t4135;
  double t4147;
  double t4150;
  double t4155;
  double t4162;
  double t4175;
  double t3874;
  double t3876;
  double t3884;
  double t3885;
  double t3894;
  double t3897;
  double t3899;
  double t3904;
  double t3911;
  double t3912;
  double t3915;
  double t3916;
  double t4328;
  double t4330;
  double t4341;
  double t4345;
  double t4359;
  double t4384;
  double t4450;
  double t4462;
  double t4464;
  double t4474;
  double t4478;
  double t4493;
  double t4502;
  double t4507;
  double t4680;
  double t4685;
  double t4708;
  double t4612;
  double t4620;
  double t4654;
  double t4710;
  double t4718;
  double t4720;
  double t4543;
  double t4552;
  double t4567;
  double t4571;
  double t4581;
  double t4597;
  double t4662;
  double t4723;
  double t4736;
  double t4739;
  double t4754;
  double t4762;
  double t4786;
  double t4790;
  double t4792;
  double t4793;
  double t4799;
  double t4804;
  double t4890;
  double t4894;
  double t4895;
  double t4935;
  double t4937;
  double t4944;
  double t4866;
  double t4875;
  double t4888;
  double t4962;
  double t4968;
  double t4970;
  double t4946;
  double t4951;
  double t4955;
  double t4959;
  double t4971;
  double t4973;
  double t4977;
  double t4978;
  double t4991;
  double t5000;
  double t5002;
  double t5003;
  double t5004;
  double t5008;
  double t5012;
  double t5083;
  double t5099;
  double t5036;
  double t5043;
  double t5046;
  double t5051;
  double t5219;
  double t5224;
  double t5250;
  double t5255;
  double t5259;
  double t5267;
  double t5276;
  double t5281;
  double t5119;
  double t5128;
  double t5135;
  double t5072;
  double t5073;
  double t5079;
  double t5321;
  double t5328;
  double t5390;
  double t5392;
  double t5394;
  double t5333;
  double t5340;
  double t5343;
  double t5369;
  double t5370;
  double t5346;
  double t5383;
  double t5362;
  double t5364;
  double t5366;
  double t5409;
  double t5411;
  double t5412;
  double t5406;
  double t5418;
  double t5511;
  double t5514;
  double t5636;
  double t5637;
  double t5641;
  double t5623;
  double t5653;
  double t5594;
  double t5612;
  double t5722;
  double t5730;
  double t5712;
  double t5770;
  double t6034;
  double t6061;
  double t6071;
  double t6086;
  double t6091;
  double t6100;
  double t6420;
  double t6375;
  double t6376;
  double t6398;
  double t6405;
  double t6410;
  double t6432;
  double t6438;
  double t6455;
  double t6491;
  double t6506;
  double t6541;
  double t6606;
  double t6720;
  double t6746;
  double t6655;
  double t6662;
  double t6667;
  double t6612;
  double t6777;
  double t6778;
  double t6779;
  double t6780;
  double t6787;
  double t6788;
  double t6789;
  double t6792;
  double t6830;
  double t6845;
  double t6847;
  double t6848;
  double t6849;
  double t6851;
  double t6865;
  double t6873;
  double t6887;
  double t6903;
  double t6904;
  double t6906;
  double t6908;
  double t6910;
  double t6912;
  double t6916;
  double t6971;
  double t6982;
  double t6986;
  double t6988;
  double t7032;
  double t7048;
  double t7079;
  double t6613;
  double t6616;
  double t6632;
  double t6673;
  double t6689;
  double t6696;
  double t6735;
  double t6754;
  double t6756;
  double t6759;
  double t6648;
  double t6706;
  double t6771;
  double t6772;
  double t6816;
  double t6882;
  double t6919;
  double t6921;
  double t6932;
  double t6933;
  double t6934;
  double t6938;
  double t6948;
  double t6951;
  double t6959;
  double t6961;
  double t7142;
  double t7144;
  double t7148;
  double t7156;
  double t7410;
  double t7426;
  double t7436;
  double t7439;
  double t7449;
  double t7453;
  double t7455;
  double t7462;
  double t7495;
  double t7500;
  double t7503;
  double t7505;
  double t7509;
  double t7511;
  double t6965;
  double t7161;
  double t6984;
  double t7018;
  double t7094;
  double t7096;
  double t7114;
  double t7119;
  double t7125;
  double t7126;
  double t7316;
  double t7340;
  double t7215;
  double t7216;
  double t7220;
  double t7241;
  double t7182;
  double t7197;
  double t7202;
  double t7208;
  double t7572;
  double t7573;
  double t7576;
  double t7582;
  double t7587;
  double t7591;
  double t6413;
  double t6446;
  double t6577;
  double t6585;
  double t6590;
  double t6595;
  double t6596;
  double t6600;
  double t7844;
  double t7860;
  double t7874;
  double t7824;
  double t7832;
  double t7835;
  double t7790;
  double t7805;
  double t7807;
  double t7814;
  double t7837;
  double t7876;
  double t7879;
  double t7934;
  double t7938;
  double t7942;
  double t7956;
  double t7959;
  double t7965;
  double t7732;
  double t7733;
  double t7739;
  double t7758;
  double t7761;
  double t7764;
  double t7667;
  double t7672;
  double t7703;
  double t7626;
  double t7627;
  double t7628;
  double t8039;
  double t8042;
  double t8046;
  double t8049;
  double t8053;
  double t8064;
  double t8071;
  double t8073;
  double t8079;
  double t8095;
  double t8099;
  double t8100;
  double t8108;
  double t8110;
  double t8117;
  double t8082;
  double t8102;
  double t8083;
  double t8084;
  double t8086;
  double t8120;
  double t8123;
  double t8157;
  double t8158;
  double t8160;
  double t8169;
  double t8172;
  double t8173;
  double t8179;
  double t8181;
  double t8182;
  double t8184;
  double t8189;
  double t8195;
  double t8265;
  double t8271;
  double t8277;
  double t8281;
  double t8299;
  double t8302;
  double t8294;
  double t8296;
  double t8344;
  double t8410;
  double t8432;
  double t8439;
  double t8451;
  double t8452;
  double t8462;
  double t8463;
  double t8471;
  double t8472;
  double t8478;
  double t8479;
  double t8484;
  double t8352;
  double t8353;
  double t8354;
  double t8358;
  double t8365;
  double t8374;
  double t8375;
  double t8378;
  double t8379;
  double t8560;
  double t8582;
  double t8583;
  double t8601;
  double t8406;
  double t8407;
  double t8422;
  double t8428;
  double t8429;
  double t8433;
  double t8435;
  double t8442;
  double t8444;
  double t8508;
  double t8531;
  double t8533;
  double t8535;
  double t8448;
  double t8544;
  double t8397;
  double t8399;
  double t8400;
  double t8403;
  double t8323;
  double t8337;
  double t8339;
  double t8341;
  double t8638;
  double t8679;
  double t8747;
  double t8749;
  double t8756;
  double t8741;
  double t8742;
  double t8743;
  double t8606;
  double t8607;
  double t8611;
  double t8613;
  double t8647;
  double t8664;
  double t8667;
  double t8673;
  double t8263;
  double t8273;
  double t8288;
  double t8290;
  double t8298;
  double t8304;
  double t8315;
  double t8316;
  double t8849;
  double t8850;
  double t8858;
  double t8841;
  double t8842;
  double t8844;
  double t8825;
  double t8832;
  double t8834;
  double t8835;
  double t8845;
  double t8862;
  double t8866;
  double t8886;
  double t8887;
  double t8889;
  double t8897;
  double t8898;
  double t8910;
  double t8813;
  double t8814;
  double t8816;
  double t8780;
  double t8797;
  double t8809;
  double t8726;
  double t8728;
  double t8730;
  double t8705;
  double t8707;
  double t8712;
  double t9006;
  double t9018;
  double t9020;
  double t9044;
  double t9045;
  double t9046;
  double t9032;
  double t9035;
  double t9040;
  double t8948;
  double t8965;
  double t8971;
  double t9101;
  double t9104;
  double t9107;
  double t9031;
  double t9041;
  double t8982;
  double t8986;
  double t8992;
  double t9156;
  double t9157;
  double t9160;
  double t9071;
  double t9089;
  double t9200;
  double t9213;
  double t9214;
  double t9219;
  double t9224;
  double t9228;
  double t9137;
  double t9145;
  double t9148;
  double t9308;
  double t9310;
  double t9316;
  double t9333;
  double t9335;
  double t9345;
  double t9347;
  double t9349;
  double t9350;
  double t9354;
  double t9358;
  double t9360;
  double t9368;
  double t9416;
  double t9418;
  double t9425;
  double t9426;
  double t9443;
  double t9445;
  double t9446;
  double t9447;
  double t9389;
  double t9393;
  double t9394;
  double t9396;
  double t9401;
  double t9409;
  double t9442;
  double t9448;
  double t9456;
  double t9458;
  double t9465;
  double t9468;
  double t9469;
  double t9471;
  double t9479;
  double t9480;
  double t9482;
  double t9488;
  double t9489;
  double t9491;
  double t9494;
  double t9498;
  double t9499;
  double t9508;
  double t9510;
  double t9517;
  double t3716;
  double t473;
  double t3780;
  double t3815;
  double t9531;
  double t9532;
  double t9534;
  double t9542;
  double t9545;
  double t9552;
  double t3829;
  double t9622;
  double t9623;
  double t9624;
  double t9632;
  double t9634;
  double t9635;
  double t9638;
  double t9639;
  double t9641;
  double t9643;
  double t9644;
  double t9645;
  double t9646;
  double t9647;
  double t9648;
  double t3871;
  double t9568;
  double t9569;
  double t9573;
  double t9582;
  double t9588;
  double t9590;
  double t3892;
  double t3910;
  double t9747;
  double t9748;
  double t9753;
  double t9754;
  double t9758;
  double t9767;
  double t9768;
  double t9769;
  double t9770;
  double t9654;
  double t9655;
  double t9656;
  double t9659;
  double t9669;
  double t9672;
  double t9676;
  double t9677;
  double t9680;
  double t9681;
  double t9683;
  double t9684;
  double t10244;
  double t10246;
  double t10254;
  double t10269;
  double t10339;
  double t10341;
  double t10351;
  double t10360;
  double t6133;
  double t6141;
  double t6157;
  double t6223;
  double t6225;
  double t6233;
  double t10747;
  double t10750;
  double t10751;
  double t10752;
  double t10754;
  double t10763;
  double t10772;
  double t10788;
  double t10790;
  double t10793;
  double t10801;
  double t10813;
  double t10814;
  double t10816;
  double t10531;
  double t10553;
  double t10629;
  double t10653;
  double t8201;
  double t8203;
  double t8205;
  double t10963;
  double t10967;
  double t7818;
  double t7896;
  double t7921;
  double t10974;
  double t10977;
  double t8217;
  double t8222;
  double t8223;
  double t11094;
  double t11119;
  double t11257;
  double t11318;
  double t9187;
  double t9190;
  double t9193;
  double t11529;
  double t11537;
  double t8839;
  double t8870;
  double t8882;
  double t11573;
  double t11576;
  double t9250;
  double t9253;
  double t9264;
  double t11726;
  double t11730;
  double t11735;
  double t11741;
  double t11742;
  double t11743;
  double t11744;
  double t11749;
  double t11756;
  double t11758;
  double t11759;
  double t11762;
  double t11763;
  double t11788;
  double t11791;
  double t11802;
  double t11822;
  double t11829;
  double t11831;
  double t11839;
  double t11844;
  double t11766;
  double t11767;
  double t11774;
  double t11782;
  double t11783;
  double t11784;
  double t11827;
  double t11845;
  double t11846;
  double t11849;
  double t11850;
  double t11856;
  double t11857;
  double t11858;
  double t11863;
  double t11872;
  double t11879;
  double t11892;
  double t11893;
  double t11894;
  double t11896;
  double t11902;
  double t11904;
  double t11905;
  double t11906;
  double t11911;
  double t11914;
  double t11915;
  double t11918;
  double t11922;
  double t11923;
  double t11958;
  double t12279;
  double t12280;
  double t12281;
  double t12282;
  double t12283;
  double t12284;
  double t12285;
  double t12287;
  double t12289;
  double t12300;
  double t12304;
  double t12320;
  double t12336;
  double t12341;
  double t12342;
  double t12191;
  double t12226;
  double t12242;
  double t12252;
  double t12263;
  double t12276;
  double t12412;
  double t12415;
  double t12424;
  double t12427;
  double t12428;
  double t12433;
  double t12437;
  double t12438;
  double t12448;
  double t12358;
  double t12360;
  double t12367;
  double t12369;
  double t12375;
  double t12377;
  double t12378;
  double t12379;
  double t12384;
  double t12387;
  double t12388;
  double t12393;
  double t12614;
  double t12616;
  double t12624;
  double t12626;
  double t12681;
  double t12687;
  double t12703;
  double t12722;
  double t13135;
  double t13137;
  double t13138;
  double t13139;
  double t13140;
  double t13148;
  double t13157;
  double t13161;
  double t13165;
  double t13167;
  double t13168;
  double t13169;
  double t13170;
  double t13171;
  double t12939;
  double t12955;
  double t12967;
  double t12972;
  double t13402;
  double t13417;
  double t13429;
  double t13435;
  double t13598;
  double t13600;
  double t13610;
  double t13612;
  double t13659;
  double t13660;
  double t13671;
  double t13673;
  t944 = Cos(var1[17]);
  t969 = -1.*t944;
  t993 = 1. + t969;
  t653 = Cos(var1[16]);
  t690 = -1.*t653;
  t715 = 1. + t690;
  t892 = Sin(var1[16]);
  t1044 = Sin(var1[17]);
  t1074 = 4.e-6*t1044;
  t1002 = 1.000000000016*t993;
  t1008 = -7.e-6*t993;
  t1097 = t1008 + t1074;
  t1197 = -7.e-6*t1097;
  t1228 = -1. + t1002 + t1197;
  t1331 = 2.8e-11*t993;
  t1340 = 4.e-6*t993;
  t1342 = 7.e-6*t1044;
  t1421 = t1340 + t1342;
  t1436 = -7.e-6*t1421;
  t1440 = -1.*t1044;
  t1452 = t1331 + t1436 + t1440;
  t721 = -7.e-6*t715;
  t1483 = -6.5e-11*t993;
  t1487 = 1. + t1483;
  t1506 = -7.e-6*t1487;
  t1518 = 7.e-6*t993;
  t1521 = t1506 + t1518 + t1074;
  t1235 = 4.e-6*t715;
  t1790 = -1. + t944;
  t1794 = 4.e-6*t1790;
  t1634 = -2.8e-11*t715;
  t1762 = -4.e-6*t1044;
  t1642 = -1.*t892;
  t1647 = t1634 + t1642;
  t1843 = 1.000000000049*t993;
  t1669 = 4.e-6*t892;
  t1688 = t721 + t1669;
  t1573 = -1.000000000016*t715;
  t1608 = 1. + t1573;
  t927 = -4.e-6*t892;
  t1854 = -7.e-6*t1044;
  t1767 = t1008 + t1762;
  t1796 = t1794 + t1342;
  t1906 = -2.8e-11*t993;
  t1919 = t1906 + t1044;
  t2018 = -1.000000000016*t993;
  t2029 = 1. + t2018;
  t2040 = t1331 + t1044;
  t1252 = -7.e-6*t892;
  t1300 = t1235 + t1252;
  t2068 = 4.e-6*t1421;
  t2071 = -1. + t1843 + t2068;
  t1467 = -6.5e-11*t715;
  t1479 = 1. + t1467;
  t2087 = 4.e-6*t1487;
  t2095 = t2087 + t1794 + t1342;
  t943 = t721 + t927;
  t2099 = 4.e-6*t1097;
  t2129 = t1331 + t2099 + t1044;
  t2193 = 7.e-6*t715;
  t1725 = 7.e-6*t892;
  t2289 = 2.826290000000002e-7*var1[17];
  t2312 = -0.148715*t1487;
  t2326 = -2.18904205e-16*t993;
  t2339 = t1340 + t1854;
  t2341 = -0.038576*t2339;
  t2368 = -0.80315*t1767;
  t2371 = t1518 + t1074;
  t2372 = -0.5031510000080001*t2371;
  t2376 = -0.038575000014*t1796;
  t2418 = t2289 + t2312 + t2326 + t2341 + t2368 + t2372 + t2376;
  t2441 = 1.1305160000000008e-12*var1[17];
  t2446 = -1.000000000049*t993;
  t2452 = 1. + t2446;
  t2454 = -0.038576*t2452;
  t2478 = -0.03857500001589017*t993;
  t2499 = t1331 + t1440;
  t2500 = -0.5031510000080001*t2499;
  t2523 = t1794 + t1854;
  t2552 = -3.367757e-6*t2523;
  t2554 = -0.148715*t1421;
  t2557 = -0.80315*t1919;
  t2581 = t2441 + t2454 + t2478 + t2500 + t2552 + t2554 + t2557;
  t2668 = -1.9784030000000015e-12*var1[17];
  t2727 = -0.80315*t2029;
  t2770 = -0.5031510000160505*t993;
  t2771 = t1906 + t1440;
  t2773 = -0.038576*t2771;
  t2774 = t1518 + t1762;
  t2778 = -3.367757e-6*t2774;
  t2787 = -0.148715*t1097;
  t2791 = -0.038575000014*t2040;
  t2794 = t2668 + t2727 + t2770 + t2773 + t2778 + t2787 + t2791;
  t1824 = -1.000000000049*t715;
  t1827 = 1. + t1824;
  t1734 = t1235 + t1725;
  t2003 = t1634 + t892;
  t2258 = 2.8e-11*t715;
  t2883 = -1. + t653;
  t2885 = 4.e-6*t2883;
  t2948 = t1827*t2071;
  t2955 = t1734*t2095;
  t2957 = t2003*t2129;
  t2959 = t2948 + t2955 + t2957;
  t2185 = -2.7726089999999997e-12*var1[16];
  t2187 = -0.2812110000084994*t715;
  t2211 = t2193 + t927;
  t2226 = -1.8134809999999998e-6*t2211;
  t2277 = t2258 + t892;
  t2278 = -0.038749000006999997*t2277;
  t2434 = t1688*t2418;
  t2589 = t1647*t2581;
  t2795 = t1608*t2794;
  t2800 = t2185 + t2187 + t2226 + t2278 + t2434 + t2589 + t2795;
  t1749 = 6.5e-11*t993;
  t1778 = 7.e-6*t1767;
  t1803 = 4.e-6*t1796;
  t1813 = -1. + t1749 + t1778 + t1803;
  t1848 = -1. + t1843;
  t1851 = 4.e-6*t1848;
  t1928 = 7.e-6*t1919;
  t1937 = t1851 + t1794 + t1854 + t1928;
  t2033 = 7.e-6*t2029;
  t2041 = 4.e-6*t2040;
  t2050 = t2033 + t1518 + t1762 + t2041;
  t2851 = 3.9608699999999997e-7*var1[16];
  t2854 = -1.1787626499999999e-16*t715;
  t2874 = t2193 + t1669;
  t2877 = -0.281211000004*t2874;
  t2897 = t2885 + t1725;
  t2899 = -0.038749000006999997*t2897;
  t2908 = t1479*t2418;
  t2916 = t1300*t2581;
  t2930 = t943*t2794;
  t2939 = t2851 + t2854 + t2877 + t2899 + t2908 + t2916 + t2930;
  t2967 = 1.5843479999999999e-12*var1[16];
  t2979 = -0.03874900000889869*t715;
  t2998 = t2258 + t1642;
  t3014 = -0.281211000004*t2998;
  t3020 = t2885 + t1252;
  t3021 = -1.8134809999999998e-6*t3020;
  t3087 = t1734*t2418;
  t3112 = t1827*t2581;
  t3114 = t2003*t2794;
  t3119 = t2967 + t2979 + t3014 + t3021 + t3087 + t3112 + t3114;
  t1818 = t1734*t1813;
  t1975 = t1827*t1937;
  t2056 = t2003*t2050;
  t2066 = t1818 + t1975 + t2056;
  t1231 = t943*t1228;
  t1466 = t1300*t1452;
  t1531 = t1479*t1521;
  t1540 = t1231 + t1466 + t1531;
  t1544 = 0.15121*t1540;
  t1623 = t1608*t1228;
  t1657 = t1647*t1452;
  t1700 = t1688*t1521;
  t1709 = t1623 + t1657 + t1700;
  t1711 = -0.15121*t1709;
  t2072 = t1647*t2071;
  t2098 = t1688*t2095;
  t2161 = t1608*t2129;
  t2163 = t2072 + t2098 + t2161;
  t2808 = -1.*t2163*t2800;
  t2809 = t1300*t2071;
  t2824 = t1479*t2095;
  t2828 = t943*t2129;
  t2837 = t2809 + t2824 + t2828;
  t2942 = -1.*t2837*t2939;
  t3122 = -1.*t2959*t3119;
  t3133 = t2808 + t2942 + t3122;
  t3139 = t2066*t3133;
  t3149 = t1688*t1813;
  t3154 = t1647*t1937;
  t3157 = t1608*t2050;
  t3159 = t3149 + t3154 + t3157;
  t3162 = t2800*t3159;
  t3171 = t1479*t1813;
  t3174 = t1300*t1937;
  t3175 = t943*t2050;
  t3186 = t3171 + t3174 + t3175;
  t3196 = t2939*t3186;
  t3235 = t3119*t2066;
  t3257 = t3162 + t3196 + t3235;
  t3261 = t2959*t3257;
  t3272 = t1544 + t1711 + t3139 + t3261;
  t3334 = -1.*t2418*t2095;
  t3342 = -1.*t2071*t2581;
  t3343 = -1.*t2129*t2794;
  t3349 = t3334 + t3342 + t3343;
  t3352 = t2418*t1813;
  t3385 = t2581*t1937;
  t3387 = t2794*t2050;
  t3401 = t3352 + t3385 + t3387;
  t3311 = -0.038749*t1228;
  t3314 = 0.281211*t1452;
  t3318 = 7.e-6*t1487;
  t3326 = t3318 + t1008 + t1762;
  t3333 = 1.e-6*t3326;
  t3351 = -1.*t1813*t3349;
  t3411 = -1.*t2095*t3401;
  t3435 = -1.*t1937*t3349;
  t3438 = -1.*t2071*t3401;
  t3450 = t3435 + t3438;
  t3458 = 4.e-6*t3450;
  t3466 = t2050*t3349;
  t3474 = t2129*t3401;
  t3489 = t3466 + t3474;
  t3502 = 7.e-6*t3489;
  t3505 = t3311 + t3314 + t3333 + t3351 + t3411 + t3458 + t3502;
  t293 = Sin(var1[15]);
  t264 = Cos(var1[15]);
  t280 = -1.*t264;
  t287 = 1. + t280;
  t292 = -0.15121*t287;
  t402 = -0.15121*t293;
  t3583 = 0.15121*t293;
  t3584 = t293*t2800;
  t3586 = t264*t2939;
  t3587 = t292 + t3583 + t3584 + t3586;
  t3605 = t264*t2800;
  t3609 = -1.*t293*t2939;
  t3611 = t292 + t402 + t3605 + t3609;
  t3576 = t293*t2163;
  t3577 = t264*t2837;
  t3580 = t3576 + t3577;
  t3590 = -1.*t3580*t3587;
  t3597 = t264*t2163;
  t3601 = -1.*t293*t2837;
  t3603 = t3597 + t3601;
  t3612 = -1.*t3603*t3611;
  t3614 = t3122 + t3590 + t3612;
  t3615 = t2066*t3614;
  t3620 = t293*t3159;
  t3626 = t264*t3186;
  t3627 = t3620 + t3626;
  t3629 = t3587*t3627;
  t3633 = t264*t3159;
  t3634 = -1.*t293*t3186;
  t3639 = t3633 + t3634;
  t3651 = t3611*t3639;
  t3656 = t3235 + t3629 + t3651;
  t3658 = t2959*t3656;
  t3666 = t3615 + t3658;
  t241 = Cos(var1[4]);
  t242 = Cos(var1[5]);
  t3805 = Sin(var1[5]);
  t3773 = Sin(var1[4]);
  t3820 = -1.*t241*t242*t293;
  t3823 = -1.*t264*t241*t3805;
  t3825 = t3820 + t3823;
  t3843 = t264*t241*t242;
  t3855 = -1.*t241*t293*t3805;
  t3869 = t3843 + t3855;
  t3952 = t2003*t1228;
  t3957 = t1827*t1452;
  t3974 = t1734*t1521;
  t4001 = t3952 + t3957 + t3974;
  t4040 = t4001*t3773;
  t4047 = -1.*t293*t1540;
  t4054 = t264*t1709;
  t4118 = t4047 + t4054;
  t4122 = t242*t4118;
  t4126 = t264*t1540;
  t4135 = t293*t1709;
  t4147 = t4126 + t4135;
  t4150 = -1.*t4147*t3805;
  t4155 = t4122 + t4150;
  t4162 = t241*t4155;
  t4175 = t4040 + t4162;
  t3874 = t2003*t3773;
  t3876 = t943*t3825;
  t3884 = t1608*t3869;
  t3885 = t3874 + t3876 + t3884;
  t3894 = t1827*t3773;
  t3897 = t1300*t3825;
  t3899 = t1647*t3869;
  t3904 = t3894 + t3897 + t3899;
  t3911 = t1734*t3773;
  t3912 = t1479*t3825;
  t3915 = t1688*t3869;
  t3916 = t3911 + t3912 + t3915;
  t4328 = Sin(var1[3]);
  t4330 = t242*t4147;
  t4341 = t4118*t3805;
  t4345 = t4330 + t4341;
  t4359 = t4328*t4345;
  t4384 = Cos(var1[3]);
  t4450 = t241*t4001;
  t4462 = -1.*t3773*t4155;
  t4464 = t4450 + t4462;
  t4474 = t4384*t4464;
  t4478 = t4359 + t4474;
  t4493 = t4384*t4345;
  t4502 = -1.*t4328*t4464;
  t4507 = t4493 + t4502;
  t4680 = t242*t3580;
  t4685 = t3603*t3805;
  t4708 = t4680 + t4685;
  t4612 = t242*t3611;
  t4620 = -1.*t3587*t3805;
  t4654 = t4612 + t4620;
  t4710 = t242*t3587;
  t4718 = t3611*t3805;
  t4720 = t4710 + t4718;
  t4543 = t242*t3627;
  t4552 = t3639*t3805;
  t4567 = t4543 + t4552;
  t4571 = t242*t3603;
  t4581 = -1.*t3580*t3805;
  t4597 = t4571 + t4581;
  t4662 = -1.*t4597*t4654;
  t4723 = -1.*t4708*t4720;
  t4736 = t3122 + t4662 + t4723;
  t4739 = t4567*t4736;
  t4754 = t242*t3639;
  t4762 = -1.*t3627*t3805;
  t4786 = t4754 + t4762;
  t4790 = t4654*t4786;
  t4792 = t4720*t4567;
  t4793 = t3235 + t4790 + t4792;
  t4799 = t4708*t4793;
  t4804 = t4739 + t4799;
  t4890 = t2959*t3773;
  t4894 = t241*t4597;
  t4895 = t4890 + t4894;
  t4935 = t3119*t3773;
  t4937 = t241*t4654;
  t4944 = t4935 + t4937;
  t4866 = t2066*t3773;
  t4875 = t241*t4786;
  t4888 = t4866 + t4875;
  t4962 = t241*t3119;
  t4968 = -1.*t3773*t4654;
  t4970 = t4962 + t4968;
  t4946 = -1.*t4895*t4944;
  t4951 = t241*t2959;
  t4955 = -1.*t3773*t4597;
  t4959 = t4951 + t4955;
  t4971 = -1.*t4959*t4970;
  t4973 = t4723 + t4946 + t4971;
  t4977 = t4888*t4973;
  t4978 = t4944*t4888;
  t4991 = t241*t2066;
  t5000 = -1.*t3773*t4786;
  t5002 = t4991 + t5000;
  t5003 = t4970*t5002;
  t5004 = t4792 + t4978 + t5003;
  t5008 = t4895*t5004;
  t5012 = t4977 + t5008;
  t5083 = 0.15121*t264;
  t5099 = t5083 + t402 + t3605 + t3609;
  t5036 = -0.15121*t264;
  t5043 = -1.*t293*t2800;
  t5046 = -1.*t264*t2939;
  t5051 = t5036 + t402 + t5043 + t5046;
  t5219 = -1.*t264*t1540;
  t5224 = -1.*t293*t1709;
  t5250 = t5219 + t5224;
  t5255 = t242*t5250;
  t5259 = -1.*t4118*t3805;
  t5267 = t5255 + t5259;
  t5276 = t5250*t3805;
  t5281 = t4122 + t5276;
  t5119 = -1.*t293*t3159;
  t5128 = -1.*t264*t3186;
  t5135 = t5119 + t5128;
  t5072 = -1.*t293*t2163;
  t5073 = -1.*t264*t2837;
  t5079 = t5072 + t5073;
  t5321 = t5135*t3805;
  t5328 = t4754 + t5321;
  t5390 = t242*t5051;
  t5392 = -1.*t5099*t3805;
  t5394 = t5390 + t5392;
  t5333 = t242*t5099;
  t5340 = t5051*t3805;
  t5343 = t5333 + t5340;
  t5369 = t5079*t3805;
  t5370 = t4571 + t5369;
  t5346 = -1.*t4708*t5343;
  t5383 = -1.*t5370*t4720;
  t5362 = t242*t5079;
  t5364 = -1.*t3603*t3805;
  t5366 = t5362 + t5364;
  t5409 = t242*t5135;
  t5411 = -1.*t3639*t3805;
  t5412 = t5409 + t5411;
  t5406 = t4720*t5328;
  t5418 = t5343*t4567;
  t5511 = -1.*t242*t4147;
  t5514 = t5511 + t5259;
  t5636 = -1.*t242*t3587;
  t5637 = -1.*t3611*t3805;
  t5641 = t5636 + t5637;
  t5623 = -1.*t4708*t4654;
  t5653 = -1.*t4597*t4720;
  t5594 = -1.*t242*t3580;
  t5612 = t5594 + t5364;
  t5722 = -1.*t242*t3627;
  t5730 = t5722 + t5411;
  t5712 = t4720*t4786;
  t5770 = t4654*t4567;
  t6034 = -1.*t4001*t3773;
  t6061 = -1.*t241*t4155;
  t6071 = t6034 + t6061;
  t6086 = -1.*t3119*t3773;
  t6091 = -1.*t241*t4654;
  t6100 = t6086 + t6091;
  t6420 = 4.e-6*t944;
  t6375 = 7.e-6*t944;
  t6376 = t6375 + t1074;
  t6398 = -7.e-6*t6376;
  t6405 = 2.8e-11*t1044;
  t6410 = t969 + t6398 + t6405;
  t6432 = 7.000000000455e-6*t1044;
  t6438 = t6420 + t6432;
  t6455 = t6420 + t1854;
  t6491 = -7.e-6*t6455;
  t6506 = 1.000000000016*t1044;
  t6541 = t6491 + t6506;
  t6606 = -4.e-6*t944;
  t6720 = t6606 + t1854;
  t6746 = t6375 + t1762;
  t6655 = -7.e-6*t944;
  t6662 = -2.8e-11*t1044;
  t6667 = t944 + t6662;
  t6612 = t944 + t6405;
  t6777 = -0.80315*t6720;
  t6778 = -0.038575000014*t6746;
  t6779 = t6655 + t1074;
  t6780 = -0.038576*t6779;
  t6787 = t6420 + t1342;
  t6788 = -0.5031510000080001*t6787;
  t6789 = 9.666256095795e-12*t1044;
  t6792 = 2.826290000000002e-7 + t6777 + t6778 + t6780 + t6788 + t6789;
  t6830 = t6655 + t1762;
  t6845 = -3.367757e-6*t6830;
  t6847 = -0.80315*t6667;
  t6848 = t969 + t6405;
  t6849 = -0.5031510000080001*t6848;
  t6851 = -0.148715*t6376;
  t6865 = 9.99986000053965e-7*t1044;
  t6873 = 1.1305160000000008e-12 + t6845 + t6847 + t6849 + t6851 + t6865;
  t6887 = -0.148715*t6455;
  t6903 = t969 + t6662;
  t6904 = -0.038576*t6903;
  t6906 = -0.038575000014*t6612;
  t6908 = t6606 + t1342;
  t6910 = -3.367757e-6*t6908;
  t6912 = 0.2999989999967999*t1044;
  t6916 = -1.9784030000000015e-12 + t6887 + t6904 + t6906 + t6910 + t6912;
  t6971 = -4.00000000026e-6*t1044;
  t6982 = t6375 + t6971;
  t6986 = 4.e-6*t6455;
  t6988 = t944 + t6986 + t6405;
  t7032 = 4.e-6*t6376;
  t7048 = 1.000000000049*t1044;
  t7079 = t7032 + t7048;
  t6613 = 4.e-6*t6612;
  t6616 = -1.12e-16*t1044;
  t6632 = t6606 + t6613 + t6616;
  t6673 = 7.e-6*t6667;
  t6689 = 1.96e-16*t1044;
  t6696 = t6655 + t6673 + t6689;
  t6735 = 7.e-6*t6720;
  t6754 = 4.e-6*t6746;
  t6756 = 6.5e-11*t1044;
  t6759 = t6735 + t6754 + t6756;
  t6648 = t2003*t6632;
  t6706 = t1827*t6696;
  t6771 = t1734*t6759;
  t6772 = t6648 + t6706 + t6771;
  t6816 = t1688*t6792;
  t6882 = t1647*t6873;
  t6919 = t1608*t6916;
  t6921 = t6816 + t6882 + t6919;
  t6932 = t1479*t6792;
  t6933 = t1300*t6873;
  t6934 = t943*t6916;
  t6938 = t6932 + t6933 + t6934;
  t6948 = t1734*t6792;
  t6951 = t1827*t6873;
  t6959 = t2003*t6916;
  t6961 = t6948 + t6951 + t6959;
  t7142 = t1734*t6982;
  t7144 = t2003*t6988;
  t7148 = t1827*t7079;
  t7156 = t7142 + t7144 + t7148;
  t7410 = -1.*t2418*t6982;
  t7426 = -1.*t2071*t6873;
  t7436 = -1.*t6792*t2095;
  t7439 = -1.*t6916*t2129;
  t7449 = -1.*t7079*t2581;
  t7453 = -1.*t6988*t2794;
  t7455 = t7410 + t7426 + t7436 + t7439 + t7449 + t7453;
  t7462 = t1813*t6792;
  t7495 = t2418*t6759;
  t7500 = t6696*t2581;
  t7503 = t6873*t1937;
  t7505 = t6632*t2794;
  t7509 = t6916*t2050;
  t7511 = t7462 + t7495 + t7500 + t7503 + t7505 + t7509;
  t6965 = -1.*t6961*t2959;
  t7161 = -1.*t7156*t3119;
  t6984 = t1688*t6982;
  t7018 = t1608*t6988;
  t7094 = t1647*t7079;
  t7096 = t6984 + t7018 + t7094;
  t7114 = t1479*t6982;
  t7119 = t943*t6988;
  t7125 = t1300*t7079;
  t7126 = t7114 + t7119 + t7125;
  t7316 = t6772*t3119;
  t7340 = t6961*t2066;
  t7215 = t943*t6632;
  t7216 = t1300*t6696;
  t7220 = t1479*t6759;
  t7241 = t7215 + t7216 + t7220;
  t7182 = t1608*t6632;
  t7197 = t1647*t6696;
  t7202 = t1688*t6759;
  t7208 = t7182 + t7197 + t7202;
  t7572 = t293*t6921;
  t7573 = t264*t6938;
  t7576 = t7572 + t7573;
  t7582 = t264*t6921;
  t7587 = -1.*t293*t6938;
  t7591 = t7582 + t7587;
  t6413 = t1647*t6410;
  t6446 = t1688*t6438;
  t6577 = t1608*t6541;
  t6585 = t6413 + t6446 + t6577;
  t6590 = t1300*t6410;
  t6595 = t1479*t6438;
  t6596 = t943*t6541;
  t6600 = t6590 + t6595 + t6596;
  t7844 = t293*t6585;
  t7860 = t264*t6600;
  t7874 = t7844 + t7860;
  t7824 = t264*t6585;
  t7832 = -1.*t293*t6600;
  t7835 = t7824 + t7832;
  t7790 = t1827*t6410;
  t7805 = t1734*t6438;
  t7807 = t2003*t6541;
  t7814 = t7790 + t7805 + t7807;
  t7837 = t242*t7835;
  t7876 = -1.*t7874*t3805;
  t7879 = t7837 + t7876;
  t7934 = t242*t7874;
  t7938 = t7835*t3805;
  t7942 = t7934 + t7938;
  t7956 = t241*t7814;
  t7959 = -1.*t3773*t7879;
  t7965 = t7956 + t7959;
  t7732 = t264*t7241;
  t7733 = t293*t7208;
  t7739 = t7732 + t7733;
  t7758 = -1.*t293*t7241;
  t7761 = t264*t7208;
  t7764 = t7758 + t7761;
  t7667 = t264*t7096;
  t7672 = -1.*t293*t7126;
  t7703 = t7667 + t7672;
  t7626 = t293*t7096;
  t7627 = t264*t7126;
  t7628 = t7626 + t7627;
  t8039 = t242*t7739;
  t8042 = t7764*t3805;
  t8046 = t8039 + t8042;
  t8049 = t242*t7591;
  t8053 = -1.*t7576*t3805;
  t8064 = t8049 + t8053;
  t8071 = t242*t7576;
  t8073 = t7591*t3805;
  t8079 = t8071 + t8073;
  t8095 = t242*t7628;
  t8099 = t7703*t3805;
  t8100 = t8095 + t8099;
  t8108 = t242*t7764;
  t8110 = -1.*t7739*t3805;
  t8117 = t8108 + t8110;
  t8082 = -1.*t8079*t4708;
  t8102 = -1.*t8100*t4720;
  t8083 = t242*t7703;
  t8084 = -1.*t7628*t3805;
  t8086 = t8083 + t8084;
  t8120 = t8046*t4720;
  t8123 = t8079*t4567;
  t8157 = t6772*t3773;
  t8158 = t241*t8117;
  t8160 = t8157 + t8158;
  t8169 = t6961*t3773;
  t8172 = t241*t8064;
  t8173 = t8169 + t8172;
  t8179 = t241*t6961;
  t8181 = -1.*t3773*t8064;
  t8182 = t8179 + t8181;
  t8184 = t7156*t3773;
  t8189 = t241*t8086;
  t8195 = t8184 + t8189;
  t8265 = -2.8e-11*t892;
  t8271 = t690 + t8265;
  t8277 = 4.e-6*t653;
  t8281 = t8277 + t1252;
  t8299 = -7.e-6*t653;
  t8302 = t8299 + t1669;
  t8294 = -4.e-6*t653;
  t8296 = t8294 + t1252;
  t8344 = 7.e-6*t653;
  t8410 = 2.8e-11*t892;
  t8432 = t8344 + t1669;
  t8439 = t653 + t8265;
  t8451 = t653 + t8410;
  t8452 = -0.038749000006999997*t8451;
  t8462 = t8294 + t1725;
  t8463 = -1.8134809999999998e-6*t8462;
  t8471 = -0.2812110000084994*t892;
  t8472 = t8281*t2418;
  t8478 = t8271*t2581;
  t8479 = -1.000000000016*t892*t2794;
  t8484 = -2.7726089999999997e-12 + t8452 + t8463 + t8471 + t8472 + t8478 + t8479;
  t8352 = t8344 + t927;
  t8353 = -0.038749000006999997*t8352;
  t8354 = t8277 + t1725;
  t8358 = -0.281211000004*t8354;
  t8365 = -1.1787626499999999e-16*t892;
  t8374 = -6.5e-11*t892*t2418;
  t8375 = t8302*t2581;
  t8378 = t8296*t2794;
  t8379 = 3.9608699999999997e-7 + t8353 + t8358 + t8365 + t8374 + t8375 + t8378;
  t8560 = t8432*t1813;
  t8582 = -1.000000000049*t892*t1937;
  t8583 = t8439*t2050;
  t8601 = t8560 + t8582 + t8583;
  t8406 = t8299 + t927;
  t8407 = -1.8134809999999998e-6*t8406;
  t8422 = t690 + t8410;
  t8428 = -0.281211000004*t8422;
  t8429 = -0.03874900000889869*t892;
  t8433 = t8432*t2418;
  t8435 = -1.000000000049*t892*t2581;
  t8442 = t8439*t2794;
  t8444 = 1.5843479999999999e-12 + t8407 + t8428 + t8429 + t8433 + t8435 + t8442;
  t8508 = -1.000000000049*t892*t2071;
  t8531 = t8432*t2095;
  t8533 = t8439*t2129;
  t8535 = t8508 + t8531 + t8533;
  t8448 = -1.*t2959*t8444;
  t8544 = -1.*t8535*t3119;
  t8397 = t8302*t2071;
  t8399 = -6.5e-11*t892*t2095;
  t8400 = t8296*t2129;
  t8403 = t8397 + t8399 + t8400;
  t8323 = t8271*t2071;
  t8337 = t8281*t2095;
  t8339 = -1.000000000016*t892*t2129;
  t8341 = t8323 + t8337 + t8339;
  t8638 = t3119*t8601;
  t8679 = t8444*t2066;
  t8747 = t264*t8379;
  t8749 = t293*t8484;
  t8756 = t8747 + t8749;
  t8741 = -1.*t293*t8379;
  t8742 = t264*t8484;
  t8743 = t8741 + t8742;
  t8606 = -6.5e-11*t892*t1813;
  t8607 = t8302*t1937;
  t8611 = t8296*t2050;
  t8613 = t8606 + t8607 + t8611;
  t8647 = t8281*t1813;
  t8664 = t8271*t1937;
  t8667 = -1.000000000016*t892*t2050;
  t8673 = t8647 + t8664 + t8667;
  t8263 = -1.000000000016*t892*t1228;
  t8273 = t8271*t1452;
  t8288 = t8281*t1521;
  t8290 = t8263 + t8273 + t8288;
  t8298 = t8296*t1228;
  t8304 = t8302*t1452;
  t8315 = -6.5e-11*t892*t1521;
  t8316 = t8298 + t8304 + t8315;
  t8849 = t293*t8290;
  t8850 = t264*t8316;
  t8858 = t8849 + t8850;
  t8841 = t264*t8290;
  t8842 = -1.*t293*t8316;
  t8844 = t8841 + t8842;
  t8825 = t8439*t1228;
  t8832 = -1.000000000049*t892*t1452;
  t8834 = t8432*t1521;
  t8835 = t8825 + t8832 + t8834;
  t8845 = t242*t8844;
  t8862 = -1.*t8858*t3805;
  t8866 = t8845 + t8862;
  t8886 = t242*t8858;
  t8887 = t8844*t3805;
  t8889 = t8886 + t8887;
  t8897 = t241*t8835;
  t8898 = -1.*t3773*t8866;
  t8910 = t8897 + t8898;
  t8813 = t264*t8613;
  t8814 = t293*t8673;
  t8816 = t8813 + t8814;
  t8780 = -1.*t293*t8613;
  t8797 = t264*t8673;
  t8809 = t8780 + t8797;
  t8726 = -1.*t293*t8403;
  t8728 = t264*t8341;
  t8730 = t8726 + t8728;
  t8705 = t264*t8403;
  t8707 = t293*t8341;
  t8712 = t8705 + t8707;
  t9006 = t242*t8712;
  t9018 = t8730*t3805;
  t9020 = t9006 + t9018;
  t9044 = t242*t8743;
  t9045 = -1.*t8756*t3805;
  t9046 = t9044 + t9045;
  t9032 = t242*t8756;
  t9035 = t8743*t3805;
  t9040 = t9032 + t9035;
  t8948 = t242*t8816;
  t8965 = t8809*t3805;
  t8971 = t8948 + t8965;
  t9101 = t242*t8809;
  t9104 = -1.*t8816*t3805;
  t9107 = t9101 + t9104;
  t9031 = -1.*t9020*t4720;
  t9041 = -1.*t4708*t9040;
  t8982 = t242*t8730;
  t8986 = -1.*t8712*t3805;
  t8992 = t8982 + t8986;
  t9156 = t8535*t3773;
  t9157 = t241*t8992;
  t9160 = t9156 + t9157;
  t9071 = t9040*t4567;
  t9089 = t4720*t8971;
  t9200 = t8444*t3773;
  t9213 = t241*t9046;
  t9214 = t9200 + t9213;
  t9219 = t241*t8444;
  t9224 = -1.*t3773*t9046;
  t9228 = t9219 + t9224;
  t9137 = t8601*t3773;
  t9145 = t241*t9107;
  t9148 = t9137 + t9145;
  t9308 = -0.15121*t2163;
  t9310 = 0.15121*t2837;
  t9316 = t1709*t2800;
  t9333 = t1540*t2939;
  t9335 = t4001*t3119;
  t9345 = t9316 + t9333 + t9335;
  t9347 = t2066*t9345;
  t9349 = -1.*t2800*t3159;
  t9350 = -1.*t2939*t3186;
  t9354 = -1.*t3119*t2066;
  t9358 = t9349 + t9350 + t9354;
  t9360 = t4001*t9358;
  t9368 = t9308 + t9310 + t9347 + t9360;
  t9416 = t2418*t1521;
  t9418 = t1452*t2581;
  t9425 = t1228*t2794;
  t9426 = t9416 + t9418 + t9425;
  t9443 = -1.*t2418*t1813;
  t9445 = -1.*t2581*t1937;
  t9446 = -1.*t2794*t2050;
  t9447 = t9443 + t9445 + t9446;
  t9389 = 0.281211*t2071;
  t9393 = -1. + t1749;
  t9394 = 4.e-6*t9393;
  t9396 = t9394 + t1340 + t1854;
  t9401 = 1.e-6*t9396;
  t9409 = -0.038749*t2129;
  t9442 = -1.*t1813*t9426;
  t9448 = -1.*t1521*t9447;
  t9456 = t2050*t9426;
  t9458 = t1228*t9447;
  t9465 = t9456 + t9458;
  t9468 = 7.e-6*t9465;
  t9469 = -1.*t1937*t9426;
  t9471 = -1.*t1452*t9447;
  t9479 = t9469 + t9471;
  t9480 = 4.e-6*t9479;
  t9482 = t9389 + t9401 + t9409 + t9442 + t9448 + t9468 + t9480;
  t9488 = t4147*t3587;
  t9489 = t4118*t3611;
  t9491 = t9335 + t9488 + t9489;
  t9494 = t2066*t9491;
  t9498 = -1.*t3587*t3627;
  t9499 = -1.*t3611*t3639;
  t9508 = t9354 + t9498 + t9499;
  t9510 = t4001*t9508;
  t9517 = t9494 + t9510;
  t3716 = t2967 + t2979 + t3014 + t3021;
  t473 = t292 + t402;
  t3780 = t292 + t3583;
  t3815 = t2851 + t2854 + t2877 + t2899;
  t9531 = t242*t4328*t3773;
  t9532 = t4384*t3805;
  t9534 = t9531 + t9532;
  t9542 = t4384*t242;
  t9545 = -1.*t4328*t3773*t3805;
  t9552 = t9542 + t9545;
  t3829 = t2185 + t2187 + t2226 + t2278;
  t9622 = t4328*t4708;
  t9623 = t4384*t4959;
  t9624 = t9622 + t9623;
  t9632 = t4384*t4708;
  t9634 = -1.*t4328*t4959;
  t9635 = t9632 + t9634;
  t9638 = t4155*t4654;
  t9639 = t4345*t4720;
  t9641 = t9335 + t9638 + t9639;
  t9643 = t4567*t9641;
  t9644 = -1.*t4654*t4786;
  t9645 = -1.*t4720*t4567;
  t9646 = t9354 + t9644 + t9645;
  t9647 = t4345*t9646;
  t9648 = t9643 + t9647;
  t3871 = t2668 + t2770 + t2778 + t2791;
  t9568 = -1.*t293*t9534;
  t9569 = t264*t9552;
  t9573 = t9568 + t9569;
  t9582 = t264*t9534;
  t9588 = t293*t9552;
  t9590 = t9582 + t9588;
  t3892 = t2441 + t2478 + t2500 + t2552;
  t3910 = t2289 + t2326 + t2372 + t2376;
  t9747 = t4175*t4944;
  t9748 = t4464*t4970;
  t9753 = t9639 + t9747 + t9748;
  t9754 = t4888*t9753;
  t9758 = -1.*t4944*t4888;
  t9767 = -1.*t4970*t5002;
  t9768 = t9645 + t9758 + t9767;
  t9769 = t4175*t9768;
  t9770 = t9754 + t9769;
  t9654 = -1.*t241*t2003*t4328;
  t9655 = t943*t9573;
  t9656 = t1608*t9590;
  t9659 = t9654 + t9655 + t9656;
  t9669 = -1.*t1827*t241*t4328;
  t9672 = t1300*t9573;
  t9676 = t1647*t9590;
  t9677 = t9669 + t9672 + t9676;
  t9680 = -1.*t241*t1734*t4328;
  t9681 = t1479*t9573;
  t9683 = t1688*t9590;
  t9684 = t9680 + t9681 + t9683;
  t10244 = t4345*t5343;
  t10246 = t5281*t4720;
  t10254 = -1.*t4720*t5328;
  t10269 = -1.*t5343*t4567;
  t10339 = t4345*t4654;
  t10341 = t4155*t4720;
  t10351 = -1.*t4720*t4786;
  t10360 = -1.*t4654*t4567;
  t6133 = -1.*t2959*t3773;
  t6141 = -1.*t241*t4597;
  t6157 = t6133 + t6141;
  t6223 = -1.*t2066*t3773;
  t6225 = -1.*t241*t4786;
  t6233 = t6223 + t6225;
  t10747 = t1452*t6873;
  t10750 = t6792*t1521;
  t10751 = t2418*t6438;
  t10752 = t1228*t6916;
  t10754 = t6410*t2581;
  t10763 = t6541*t2794;
  t10772 = t10747 + t10750 + t10751 + t10752 + t10754 + t10763;
  t10788 = -1.*t1813*t6792;
  t10790 = -1.*t2418*t6759;
  t10793 = -1.*t6696*t2581;
  t10801 = -1.*t6873*t1937;
  t10813 = -1.*t6632*t2794;
  t10814 = -1.*t6916*t2050;
  t10816 = t10788 + t10790 + t10793 + t10801 + t10813 + t10814;
  t10531 = t4001*t6961;
  t10553 = t7814*t3119;
  t10629 = -1.*t6772*t3119;
  t10653 = -1.*t6961*t2066;
  t8201 = t241*t7156;
  t8203 = -1.*t3773*t8086;
  t8205 = t8201 + t8203;
  t10963 = t4345*t8079;
  t10967 = t7942*t4720;
  t7818 = t7814*t3773;
  t7896 = t241*t7879;
  t7921 = t7818 + t7896;
  t10974 = -1.*t8046*t4720;
  t10977 = -1.*t8079*t4567;
  t8217 = t241*t6772;
  t8222 = -1.*t3773*t8117;
  t8223 = t8217 + t8222;
  t11094 = t4001*t8444;
  t11119 = t8835*t3119;
  t11257 = -1.*t3119*t8601;
  t11318 = -1.*t8444*t2066;
  t9187 = t241*t8535;
  t9190 = -1.*t3773*t8992;
  t9193 = t9187 + t9190;
  t11529 = t8889*t4720;
  t11537 = t4345*t9040;
  t8839 = t8835*t3773;
  t8870 = t241*t8866;
  t8882 = t8839 + t8870;
  t11573 = -1.*t9040*t4567;
  t11576 = -1.*t4720*t8971;
  t9250 = t241*t8601;
  t9253 = -1.*t3773*t9107;
  t9264 = t9250 + t9253;
  t11726 = -0.15121*t3159;
  t11730 = 0.15121*t3186;
  t11735 = -1.*t1709*t2800;
  t11741 = -1.*t1540*t2939;
  t11742 = -1.*t4001*t3119;
  t11743 = t11735 + t11741 + t11742;
  t11744 = t2959*t11743;
  t11749 = t2163*t2800;
  t11756 = t2837*t2939;
  t11758 = t2959*t3119;
  t11759 = t11749 + t11756 + t11758;
  t11762 = t4001*t11759;
  t11763 = t11726 + t11730 + t11744 + t11762;
  t11788 = -1.*t2418*t1521;
  t11791 = -1.*t1452*t2581;
  t11802 = -1.*t1228*t2794;
  t11822 = t11788 + t11791 + t11802;
  t11829 = t2418*t2095;
  t11831 = t2071*t2581;
  t11839 = t2129*t2794;
  t11844 = t11829 + t11831 + t11839;
  t11766 = 4.e-6*t2339;
  t11767 = -7.e-6*t1767;
  t11774 = 1. + t1483 + t11766 + t11767;
  t11782 = 1.e-6*t11774;
  t11783 = 0.281211*t1937;
  t11784 = -0.038749*t2050;
  t11827 = -1.*t2095*t11822;
  t11845 = -1.*t1521*t11844;
  t11846 = t2129*t11822;
  t11849 = t1228*t11844;
  t11850 = t11846 + t11849;
  t11856 = 7.e-6*t11850;
  t11857 = -1.*t2071*t11822;
  t11858 = -1.*t1452*t11844;
  t11863 = t11857 + t11858;
  t11872 = 4.e-6*t11863;
  t11879 = t11782 + t11783 + t11784 + t11827 + t11845 + t11856 + t11872;
  t11892 = -1.*t4147*t3587;
  t11893 = -1.*t4118*t3611;
  t11894 = t11742 + t11892 + t11893;
  t11896 = t2959*t11894;
  t11902 = t3580*t3587;
  t11904 = t3603*t3611;
  t11905 = t11758 + t11902 + t11904;
  t11906 = t4001*t11905;
  t11911 = t11896 + t11906;
  t11914 = -1.*t4384*t242*t3773;
  t11915 = t4328*t3805;
  t11918 = t11914 + t11915;
  t11922 = t242*t4328;
  t11923 = t4384*t3773*t3805;
  t11958 = t11922 + t11923;
  t12279 = -1.*t4155*t4654;
  t12280 = -1.*t4345*t4720;
  t12281 = t11742 + t12279 + t12280;
  t12282 = t4708*t12281;
  t12283 = t4597*t4654;
  t12284 = t4708*t4720;
  t12285 = t11758 + t12283 + t12284;
  t12287 = t4345*t12285;
  t12289 = t12282 + t12287;
  t12300 = t4328*t4567;
  t12304 = t4384*t5002;
  t12320 = t12300 + t12304;
  t12336 = t4384*t4567;
  t12341 = -1.*t4328*t5002;
  t12342 = t12336 + t12341;
  t12191 = -1.*t293*t11918;
  t12226 = t264*t11958;
  t12242 = t12191 + t12226;
  t12252 = t264*t11918;
  t12263 = t293*t11958;
  t12276 = t12252 + t12263;
  t12412 = -1.*t4175*t4944;
  t12415 = -1.*t4464*t4970;
  t12424 = t12280 + t12412 + t12415;
  t12427 = t4895*t12424;
  t12428 = t4895*t4944;
  t12433 = t4959*t4970;
  t12437 = t12284 + t12428 + t12433;
  t12438 = t4175*t12437;
  t12448 = t12427 + t12438;
  t12358 = t4384*t241*t2003;
  t12360 = t943*t12242;
  t12367 = t1608*t12276;
  t12369 = t12358 + t12360 + t12367;
  t12375 = t1827*t4384*t241;
  t12377 = t1300*t12242;
  t12378 = t1647*t12276;
  t12379 = t12375 + t12377 + t12378;
  t12384 = t4384*t241*t1734;
  t12387 = t1479*t12242;
  t12388 = t1688*t12276;
  t12393 = t12384 + t12387 + t12388;
  t12614 = -1.*t4345*t5343;
  t12616 = -1.*t5281*t4720;
  t12624 = t4708*t5343;
  t12626 = t5370*t4720;
  t12681 = -1.*t4345*t4654;
  t12687 = -1.*t4155*t4720;
  t12703 = t4708*t4654;
  t12722 = t4597*t4720;
  t13135 = t2418*t6982;
  t13137 = t2071*t6873;
  t13138 = t6792*t2095;
  t13139 = t6916*t2129;
  t13140 = t7079*t2581;
  t13148 = t6988*t2794;
  t13157 = t13135 + t13137 + t13138 + t13139 + t13140 + t13148;
  t13161 = -1.*t1452*t6873;
  t13165 = -1.*t6792*t1521;
  t13167 = -1.*t2418*t6438;
  t13168 = -1.*t1228*t6916;
  t13169 = -1.*t6410*t2581;
  t13170 = -1.*t6541*t2794;
  t13171 = t13161 + t13165 + t13167 + t13168 + t13169 + t13170;
  t12939 = -1.*t4001*t6961;
  t12955 = -1.*t7814*t3119;
  t12967 = t6961*t2959;
  t12972 = t7156*t3119;
  t13402 = -1.*t4345*t8079;
  t13417 = -1.*t7942*t4720;
  t13429 = t8079*t4708;
  t13435 = t8100*t4720;
  t13598 = -1.*t4001*t8444;
  t13600 = -1.*t8835*t3119;
  t13610 = t2959*t8444;
  t13612 = t8535*t3119;
  t13659 = -1.*t8889*t4720;
  t13660 = -1.*t4345*t9040;
  t13671 = t9020*t4720;
  t13673 = t4708*t9040;
  p_output1[0]=t3716*t3773 - 1.*t241*t3780*t3805 + t3815*t3825 + t3829*t3869 + t3871*t3885 + t3892*t3904 + t3910*t3916 - 0.148715*(t1097*t3885 + t1421*t3904 + t1487*t3916) - 0.80315*(t2029*t3885 + t1919*t3904 + t1767*t3916) - 0.038576*(t2771*t3885 + t2452*t3904 + t2339*t3916) + t241*t242*t473 + var1[0] + t4175*var2[0] + t4507*var2[1] + t4478*var2[2] + t5012*var2[3] + ((-1.*t4328*t4345 - 1.*t4384*t4464)*var2[1] + t4507*var2[2])*var2[3] + t4804*var2[4] + (t4464*var2[0] - 1.*t4328*t6071*var2[1] + t4384*t6071*var2[2] + (t4973*t5002 + t4959*t5004 + t4888*(-1.*t4944*t4959 - 1.*t4895*t4970 - 1.*t4959*t6100 - 1.*t4970*t6157) + t4895*(t4888*t4970 + t4944*t5002 + t5002*t6100 + t4970*t6233))*var2[3])*var2[4] + t3666*var2[5] + (t241*t5514*var2[0] + (t4155*t4384 + t3773*t4328*t5514)*var2[1] + (t4155*t4328 - 1.*t3773*t4384*t5514)*var2[2] + (t241*t5004*t5612 + t4888*(-1.*t241*t4944*t5612 + t3773*t4970*t5612 + t5623 - 1.*t241*t4895*t5641 + t3773*t4959*t5641 + t5653) + t241*t4973*t5730 + t4895*(t241*t4888*t5641 - 1.*t3773*t5002*t5641 + t5712 + t241*t4944*t5730 - 1.*t3773*t4970*t5730 + t5770))*var2[3] + (t4736*t4786 + t4597*t4793 + t4567*(-1.*t4654*t5612 + t5623 - 1.*t4597*t5641 + t5653) + t4708*(t4786*t5641 + t5712 + t4654*t5730 + t5770))*var2[4])*var2[5] + t3272*var2[15] + (t241*t5267*var2[0] + (t3773*t4328*t5267 + t4384*t5281)*var2[1] + (-1.*t3773*t4384*t5267 + t4328*t5281)*var2[2] + (t241*t5004*t5366 + t4888*(t5346 - 1.*t241*t4944*t5366 + t3773*t4970*t5366 + t5383 - 1.*t241*t4895*t5394 + t3773*t4959*t5394) + t241*t4973*t5412 + t4895*(t241*t4888*t5394 - 1.*t3773*t5002*t5394 + t5406 + t241*t4944*t5412 - 1.*t3773*t4970*t5412 + t5418))*var2[3] + (t4736*t5328 + t4793*t5370 + t4567*(t5346 - 1.*t4654*t5366 + t5383 - 1.*t4597*t5394) + t4708*(t4786*t5394 + t5406 + t4654*t5412 + t5418))*var2[4] + (t2066*(-1.*t3587*t3603 - 1.*t3603*t5051 - 1.*t3611*t5079 - 1.*t3580*t5099) + t2959*(t3587*t3639 + t3639*t5051 + t3627*t5099 + t3611*t5135))*var2[5])*var2[15] + t3505*var2[16] + (t8882*var2[0] + (t4384*t8889 - 1.*t4328*t8910)*var2[1] + (t4328*t8889 + t4384*t8910)*var2[2] + (t4973*t9148 + t5004*t9160 + t4888*(t9031 + t9041 - 1.*t4944*t9160 - 1.*t4970*t9193 - 1.*t4895*t9214 - 1.*t4959*t9228) + t4895*(t9071 + t9089 + t4944*t9148 + t4888*t9214 + t5002*t9228 + t4970*t9264))*var2[3] + (t4736*t8971 + t4793*t9020 + t4567*(t8448 + t8544 - 1.*t4654*t8992 + t9031 + t9041 - 1.*t4597*t9046) + t4708*(t8638 + t8679 + t4786*t9046 + t9071 + t9089 + t4654*t9107))*var2[4] + (t3656*t8535 + t3614*t8601 + t2066*(t8448 + t8544 - 1.*t3587*t8712 - 1.*t3611*t8730 - 1.*t3603*t8743 - 1.*t3580*t8756) + t2959*(t8638 + t8679 + t3639*t8743 + t3627*t8756 + t3611*t8809 + t3587*t8816))*var2[5] + (-0.15121*t8290 + 0.15121*t8316 + t3257*t8535 + t2066*(-1.*t2800*t8341 - 1.*t2837*t8379 - 1.*t2939*t8403 + t8448 - 1.*t2163*t8484 + t8544) + t3133*t8601 + t2959*(t3186*t8379 + t3159*t8484 + t2939*t8613 + t8638 + t2800*t8673 + t8679))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t7921*var2[0] + (t4384*t7942 - 1.*t4328*t7965)*var2[1] + (t4328*t7942 + t4384*t7965)*var2[2] + (t4973*t8160 + t5004*t8195 + t4888*(t8082 + t8102 - 1.*t4895*t8173 - 1.*t4959*t8182 - 1.*t4944*t8195 - 1.*t4970*t8205) + t4895*(t8120 + t8123 + t4944*t8160 + t4888*t8173 + t5002*t8182 + t4970*t8223))*var2[3] + (t4736*t8046 + t4793*t8100 + t4567*(t6965 + t7161 - 1.*t4597*t8064 + t8082 - 1.*t4654*t8086 + t8102) + t4708*(t7316 + t7340 + t4786*t8064 + t4654*t8117 + t8120 + t8123))*var2[4] + (t3614*t6772 + t3656*t7156 + t2066*(t6965 + t7161 - 1.*t3580*t7576 - 1.*t3603*t7591 - 1.*t3587*t7628 - 1.*t3611*t7703) + t2959*(t7316 + t7340 + t3627*t7576 + t3639*t7591 + t3587*t7739 + t3611*t7764))*var2[5] + (-0.15121*t6585 + 0.15121*t6600 + t3133*t6772 + t3257*t7156 + t2066*(-1.*t2163*t6921 - 1.*t2837*t6938 + t6965 - 1.*t2800*t7096 - 1.*t2939*t7126 + t7161) + t2959*(t3159*t6921 + t3186*t6938 + t2800*t7208 + t2939*t7241 + t7316 + t7340))*var2[15] + (0.281211*t6410 - 0.038749*t6541 + 1.e-6*(-7.000000000455e-6*t1044 + t6606) - 1.*t3349*t6759 - 1.*t3401*t6982 - 1.*t1813*t7455 - 1.*t2095*t7511 + 4.e-6*(-1.*t3349*t6696 - 1.*t3401*t7079 - 1.*t1937*t7455 - 1.*t2071*t7511) + 7.e-6*(t3349*t6632 + t3401*t6988 + t2050*t7455 + t2129*t7511))*var2[16])*var2[17] + t4175*var3[0] + t4507*var3[1] + t4478*var3[2] + t5012*var3[3] + t4804*var3[4] + t3666*var3[5] + t3272*var3[15] + t3505*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=-1.*t241*t3716*t4328 + t473*t9534 + t3780*t9552 + t3815*t9573 + t3829*t9590 + t3871*t9659 + t3892*t9677 + t3910*t9684 - 0.148715*(t1097*t9659 + t1421*t9677 + t1487*t9684) - 0.80315*(t2029*t9659 + t1919*t9677 + t1767*t9684) - 0.038576*(t2771*t9659 + t2452*t9677 + t2339*t9684) + var1[1] + t4895*var2[0] + t9635*var2[1] + t9624*var2[2] + t9770*var2[3] + ((-1.*t4328*t4708 - 1.*t4384*t4959)*var2[1] + t9635*var2[2])*var2[3] + t9648*var2[4] + (t4959*var2[0] - 1.*t4328*t6157*var2[1] + t4384*t6157*var2[2] + (t4888*(t4464*t4944 + t4175*t4970 + t4970*t6071 + t4464*t6100) + t4175*(-1.*t4888*t4970 - 1.*t4944*t5002 - 1.*t5002*t6100 - 1.*t4970*t6233) + t5002*t9753 + t4464*t9768)*var2[3])*var2[4] + t9517*var2[5] + (t241*t5612*var2[0] + (t4384*t4597 + t3773*t4328*t5612)*var2[1] + (t4328*t4597 - 1.*t3773*t4384*t5612)*var2[2] + (t4888*(t10339 + t10341 + t241*t4944*t5514 - 1.*t3773*t4970*t5514 + t241*t4175*t5641 - 1.*t3773*t4464*t5641) + t4175*(t10351 + t10360 - 1.*t241*t4888*t5641 + t3773*t5002*t5641 - 1.*t241*t4944*t5730 + t3773*t4970*t5730) + t241*t5730*t9753 + t241*t5514*t9768)*var2[3] + (t4567*(t10339 + t10341 + t4654*t5514 + t4155*t5641) + t4345*(t10351 + t10360 - 1.*t4786*t5641 - 1.*t4654*t5730) + t4786*t9641 + t4155*t9646)*var2[4])*var2[5] + t9368*var2[15] + (t241*t5366*var2[0] + (t3773*t4328*t5366 + t4384*t5370)*var2[1] + (-1.*t3773*t4384*t5366 + t4328*t5370)*var2[2] + (t4888*(t10244 + t10246 + t241*t4944*t5267 - 1.*t3773*t4970*t5267 + t241*t4175*t5394 - 1.*t3773*t4464*t5394) + t4175*(t10254 + t10269 - 1.*t241*t4888*t5394 + t3773*t5002*t5394 - 1.*t241*t4944*t5412 + t3773*t4970*t5412) + t241*t5412*t9753 + t241*t5267*t9768)*var2[3] + (t4567*(t10244 + t10246 + t4654*t5267 + t4155*t5394) + t4345*(t10254 + t10269 - 1.*t4786*t5394 - 1.*t4654*t5412) + t5328*t9641 + t5281*t9646)*var2[4] + (t4001*(-1.*t3587*t3639 - 1.*t3639*t5051 - 1.*t3627*t5099 - 1.*t3611*t5135) + t2066*(t3587*t4118 + t4118*t5051 + t4147*t5099 + t3611*t5250))*var2[5])*var2[15] + t9482*var2[16] + (t9160*var2[0] + (t4384*t9020 - 1.*t4328*t9193)*var2[1] + (t4328*t9020 + t4384*t9193)*var2[2] + (t4888*(t11529 + t11537 + t4944*t8882 + t4970*t8910 + t4175*t9214 + t4464*t9228) + t4175*(t11573 + t11576 - 1.*t4944*t9148 - 1.*t4888*t9214 - 1.*t5002*t9228 - 1.*t4970*t9264) + t9148*t9753 + t8882*t9768)*var2[3] + (t4567*(t11094 + t11119 + t11529 + t11537 + t4654*t8866 + t4155*t9046) + t4345*(t11257 + t11318 + t11573 + t11576 - 1.*t4786*t9046 - 1.*t4654*t9107) + t8971*t9641 + t8889*t9646)*var2[4] + (t4001*(t11257 + t11318 - 1.*t3639*t8743 - 1.*t3627*t8756 - 1.*t3611*t8809 - 1.*t3587*t8816) + t2066*(t11094 + t11119 + t4118*t8743 + t4147*t8756 + t3611*t8844 + t3587*t8858) + t8601*t9491 + t8835*t9508)*var2[5] + (-0.15121*t8341 + 0.15121*t8403 + t2066*(t11094 + t11119 + t2800*t8290 + t2939*t8316 + t1540*t8379 + t1709*t8484) + t4001*(t11257 + t11318 - 1.*t3186*t8379 - 1.*t3159*t8484 - 1.*t2939*t8613 - 1.*t2800*t8673) + t8601*t9345 + t8835*t9358)*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t8195*var2[0] + (t4384*t8100 - 1.*t4328*t8205)*var2[1] + (t4328*t8100 + t4384*t8205)*var2[2] + (t4888*(t10963 + t10967 + t4944*t7921 + t4970*t7965 + t4175*t8173 + t4464*t8182) + t4175*(t10974 + t10977 - 1.*t4944*t8160 - 1.*t4888*t8173 - 1.*t5002*t8182 - 1.*t4970*t8223) + t8160*t9753 + t7921*t9768)*var2[3] + (t4567*(t10531 + t10553 + t10963 + t10967 + t4654*t7879 + t4155*t8064) + t4345*(t10629 + t10653 + t10974 + t10977 - 1.*t4786*t8064 - 1.*t4654*t8117) + t8046*t9641 + t7942*t9646)*var2[4] + (t4001*(t10629 + t10653 - 1.*t3627*t7576 - 1.*t3639*t7591 - 1.*t3587*t7739 - 1.*t3611*t7764) + t2066*(t10531 + t10553 + t4147*t7576 + t4118*t7591 + t3611*t7835 + t3587*t7874) + t6772*t9491 + t7814*t9508)*var2[5] + (t2066*(t10531 + t10553 + t2800*t6585 + t2939*t6600 + t1709*t6921 + t1540*t6938) - 0.15121*t7096 + 0.15121*t7126 + t4001*(t10629 + t10653 - 1.*t3159*t6921 - 1.*t3186*t6938 - 1.*t2800*t7208 - 1.*t2939*t7241) + t6772*t9345 + t7814*t9358)*var2[15] + (-1.*t10816*t1521 - 1.*t10772*t1813 + 1.e-6*(4.00000000026e-6*t1044 + t6655) - 0.038749*t6988 + 0.281211*t7079 - 1.*t6759*t9426 - 1.*t6438*t9447 + 4.e-6*(-1.*t10816*t1452 - 1.*t10772*t1937 - 1.*t6696*t9426 - 1.*t6410*t9447) + 7.e-6*(t10816*t1228 + t10772*t2050 + t6632*t9426 + t6541*t9447))*var2[16])*var2[17] + t4895*var3[0] + t9635*var3[1] + t9624*var3[2] + t9770*var3[3] + t9648*var3[4] + t9517*var3[5] + t9368*var3[15] + t9482*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=-0.148715*(t1097*t12369 + t12379*t1421 + t12393*t1487) - 0.80315*(t12393*t1767 + t12379*t1919 + t12369*t2029) - 0.038576*(t12393*t2339 + t12379*t2452 + t12369*t2771) + t11958*t3780 + t12242*t3815 + t12276*t3829 + t12369*t3871 + t12379*t3892 + t12393*t3910 + t241*t3716*t4384 + t11918*t473 + var1[2] + t4888*var2[0] + t12342*var2[1] + t12320*var2[2] + t12448*var2[3] + ((-1.*t4328*t4567 - 1.*t4384*t5002)*var2[1] + t12342*var2[2])*var2[3] + t12289*var2[4] + (t5002*var2[0] - 1.*t4328*t6233*var2[1] + t4384*t6233*var2[2] + (t12437*t4464 + t12424*t4959 + t4895*(-1.*t4464*t4944 - 1.*t4175*t4970 - 1.*t4970*t6071 - 1.*t4464*t6100) + t4175*(t4944*t4959 + t4895*t4970 + t4959*t6100 + t4970*t6157))*var2[3])*var2[4] + t11911*var2[5] + (t241*t5730*var2[0] + (t4384*t4786 + t3773*t4328*t5730)*var2[1] + (t4328*t4786 - 1.*t3773*t4384*t5730)*var2[2] + (t12437*t241*t5514 + t12424*t241*t5612 + t4895*(t12681 + t12687 - 1.*t241*t4944*t5514 + t3773*t4970*t5514 - 1.*t241*t4175*t5641 + t3773*t4464*t5641) + t4175*(t12703 + t12722 + t241*t4944*t5612 - 1.*t3773*t4970*t5612 + t241*t4895*t5641 - 1.*t3773*t4959*t5641))*var2[3] + (t12285*t4155 + t12281*t4597 + t4708*(t12681 + t12687 - 1.*t4654*t5514 - 1.*t4155*t5641) + t4345*(t12703 + t12722 + t4654*t5612 + t4597*t5641))*var2[4])*var2[5] + t11763*var2[15] + (t241*t5412*var2[0] + (t4384*t5328 + t3773*t4328*t5412)*var2[1] + (t4328*t5328 - 1.*t3773*t4384*t5412)*var2[2] + (t12437*t241*t5267 + t12424*t241*t5366 + t4895*(t12614 + t12616 - 1.*t241*t4944*t5267 + t3773*t4970*t5267 - 1.*t241*t4175*t5394 + t3773*t4464*t5394) + t4175*(t12624 + t12626 + t241*t4944*t5366 - 1.*t3773*t4970*t5366 + t241*t4895*t5394 - 1.*t3773*t4959*t5394))*var2[3] + (t12285*t5281 + t12281*t5370 + t4708*(t12614 + t12616 - 1.*t4654*t5267 - 1.*t4155*t5394) + t4345*(t12624 + t12626 + t4654*t5366 + t4597*t5394))*var2[4] + (t4001*(t3587*t3603 + t3603*t5051 + t3611*t5079 + t3580*t5099) + t2959*(-1.*t3587*t4118 - 1.*t4118*t5051 - 1.*t4147*t5099 - 1.*t3611*t5250))*var2[5])*var2[15] + t11879*var2[16] + (t9148*var2[0] + (t4384*t8971 - 1.*t4328*t9264)*var2[1] + (t4328*t8971 + t4384*t9264)*var2[2] + (t12437*t8882 + t12424*t9160 + t4895*(t13659 + t13660 - 1.*t4944*t8882 - 1.*t4970*t8910 - 1.*t4175*t9214 - 1.*t4464*t9228) + t4175*(t13671 + t13673 + t4944*t9160 + t4970*t9193 + t4895*t9214 + t4959*t9228))*var2[3] + (t12285*t8889 + t12281*t9020 + t4708*(t13598 + t13600 + t13659 + t13660 - 1.*t4654*t8866 - 1.*t4155*t9046) + t4345*(t13610 + t13612 + t13671 + t13673 + t4654*t8992 + t4597*t9046))*var2[4] + (t11894*t8535 + t4001*(t13610 + t13612 + t3587*t8712 + t3611*t8730 + t3603*t8743 + t3580*t8756) + t11905*t8835 + t2959*(t13598 + t13600 - 1.*t4118*t8743 - 1.*t4147*t8756 - 1.*t3611*t8844 - 1.*t3587*t8858))*var2[5] + (t2959*(t13598 + t13600 - 1.*t2800*t8290 - 1.*t2939*t8316 - 1.*t1540*t8379 - 1.*t1709*t8484) + t4001*(t13610 + t13612 + t2800*t8341 + t2837*t8379 + t2939*t8403 + t2163*t8484) + t11743*t8535 + 0.15121*t8613 - 0.15121*t8673 + t11759*t8835)*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t8160*var2[0] + (t4384*t8046 - 1.*t4328*t8223)*var2[1] + (t4328*t8046 + t4384*t8223)*var2[2] + (t12437*t7921 + t4895*(t13402 + t13417 - 1.*t4944*t7921 - 1.*t4970*t7965 - 1.*t4175*t8173 - 1.*t4464*t8182) + t12424*t8195 + t4175*(t13429 + t13435 + t4895*t8173 + t4959*t8182 + t4944*t8195 + t4970*t8205))*var2[3] + (t12285*t7942 + t4708*(t12939 + t12955 + t13402 + t13417 - 1.*t4654*t7879 - 1.*t4155*t8064) + t4345*(t12967 + t12972 + t13429 + t13435 + t4597*t8064 + t4654*t8086) + t12281*t8100)*var2[4] + (t11894*t7156 + t4001*(t12967 + t12972 + t3580*t7576 + t3603*t7591 + t3587*t7628 + t3611*t7703) + t11905*t7814 + t2959*(t12939 + t12955 - 1.*t4147*t7576 - 1.*t4118*t7591 - 1.*t3611*t7835 - 1.*t3587*t7874))*var2[5] + (t2959*(t12939 + t12955 - 1.*t2800*t6585 - 1.*t2939*t6600 - 1.*t1709*t6921 - 1.*t1540*t6938) + t4001*(t12967 + t12972 + t2163*t6921 + t2837*t6938 + t2800*t7096 + t2939*t7126) + t11743*t7156 - 0.15121*t7208 + 0.15121*t7241 + t11759*t7814)*var2[15] + (-1.*t13157*t1521 - 1.*t13171*t2095 - 1.*t11844*t6438 - 0.038749*t6632 + 0.281211*t6696 + 1.e-6*(-6.5e-11*t1044 - 7.e-6*t6720 + 4.e-6*t6779) - 1.*t11822*t6982 + 7.e-6*(t1228*t13157 + t13171*t2129 + t11844*t6541 + t11822*t6988) + 4.e-6*(-1.*t13157*t1452 - 1.*t13171*t2071 - 1.*t11844*t6410 - 1.*t11822*t7079))*var2[16])*var2[17] + t4888*var3[0] + t12342*var3[1] + t12320*var3[2] + t12448*var3[3] + t12289*var3[4] + t11911*var3[5] + t11763*var3[15] + t11879*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_DiagonalStance2.hh"

namespace TrotStance2
{

void ddh_RrFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
