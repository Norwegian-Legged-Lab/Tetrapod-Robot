/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:52:05 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t406;
  double t412;
  double t417;
  double t308;
  double t309;
  double t319;
  double t440;
  double t462;
  double t331;
  double t422;
  double t428;
  double t481;
  double t485;
  double t506;
  double t327;
  double t582;
  double t583;
  double t594;
  double t605;
  double t645;
  double t861;
  double t870;
  double t877;
  double t885;
  double t910;
  double t954;
  double t987;
  double t674;
  double t698;
  double t1120;
  double t1092;
  double t1095;
  double t1173;
  double t1461;
  double t1053;
  double t1059;
  double t1621;
  double t1452;
  double t401;
  double t1512;
  double t1521;
  double t1536;
  double t1561;
  double t1410;
  double t1265;
  double t1623;
  double t1657;
  double t1666;
  double t1682;
  double t1317;
  double t1367;
  double t1532;
  double t1562;
  double t1576;
  double t1242;
  double t1259;
  double t1583;
  double t1588;
  double t1602;
  double t1638;
  double t1639;
  double t1459;
  double t1677;
  double t1694;
  double t1701;
  double t735;
  double t1717;
  double t1769;
  double t1779;
  double t1784;
  double t1788;
  double t1794;
  double t1805;
  double t1809;
  double t1811;
  double t1815;
  double t1816;
  double t1840;
  double t1844;
  double t1848;
  double t1853;
  double t1860;
  double t1865;
  double t1868;
  double t1870;
  double t1877;
  double t1881;
  double t1884;
  double t1889;
  double t1894;
  double t1895;
  double t1901;
  double t1903;
  double t1905;
  double t1908;
  double t1912;
  double t1915;
  double t1918;
  double t542;
  double t560;
  double t805;
  double t403;
  double t2015;
  double t1758;
  double t1957;
  double t1970;
  double t1973;
  double t1974;
  double t1276;
  double t1304;
  double t1407;
  double t1443;
  double t1465;
  double t1466;
  double t1714;
  double t1716;
  double t1742;
  double t1747;
  double t1759;
  double t1761;
  double t1828;
  double t1886;
  double t1926;
  double t1946;
  double t1312;
  double t1448;
  double t1471;
  double t1486;
  double t1983;
  double t1992;
  double t2020;
  double t2025;
  double t2034;
  double t2039;
  double t2044;
  double t2045;
  double t2055;
  double t2058;
  double t2105;
  double t2114;
  double t2121;
  double t2129;
  double t2138;
  double t2140;
  double t2149;
  double t2173;
  double t2180;
  double t2185;
  double t520;
  double t659;
  double t1022;
  double t1025;
  double t1036;
  double t1064;
  double t1101;
  double t1184;
  double t1192;
  double t1224;
  double t1579;
  double t1643;
  double t1705;
  double t1708;
  double t1951;
  double t2066;
  double t2082;
  double t2085;
  double t2089;
  double t2096;
  double t2191;
  double t2202;
  double t2204;
  double t2208;
  double t2211;
  double t2213;
  double t2216;
  double t2224;
  double t2241;
  double t2243;
  double t2253;
  double t2258;
  double t2261;
  double t2263;
  double t2275;
  double t2287;
  double t2290;
  double t2329;
  double t2332;
  double t2333;
  double t2334;
  double t2350;
  double t2364;
  double t2366;
  double t2367;
  double t2301;
  double t2302;
  double t2304;
  double t2320;
  double t2322;
  double t2336;
  double t2375;
  double t2376;
  double t2378;
  double t2387;
  double t2392;
  double t2423;
  double t2429;
  double t2433;
  double t2437;
  double t2448;
  double t180;
  double t99;
  double t127;
  double t144;
  double t191;
  double t161;
  double t2486;
  double t2487;
  double t2492;
  double t2494;
  double t2528;
  double t2529;
  double t2539;
  double t2462;
  double t2464;
  double t2473;
  double t2499;
  double t2502;
  double t2509;
  double t2521;
  double t2551;
  double t2559;
  double t2560;
  double t2565;
  double t2566;
  double t2569;
  double t2570;
  double t2573;
  double t2576;
  double t2577;
  double t2582;
  double t2584;
  double t2591;
  double t2595;
  double t34;
  double t35;
  double t2642;
  double t2630;
  double t2656;
  double t2657;
  double t2662;
  double t2697;
  double t2702;
  double t2721;
  double t2964;
  double t2966;
  double t2970;
  double t2973;
  double t2979;
  double t2993;
  double t3004;
  double t3007;
  double t3009;
  double t3013;
  double t3017;
  double t3022;
  double t3026;
  double t3030;
  double t3034;
  double t3041;
  double t2734;
  double t2740;
  double t2752;
  double t2755;
  double t2801;
  double t2802;
  double t2804;
  double t2820;
  double t2844;
  double t2887;
  double t2917;
  double t2924;
  double t3150;
  double t3162;
  double t3166;
  double t3169;
  double t3175;
  double t3178;
  double t3180;
  double t3182;
  double t3187;
  double t3194;
  double t3200;
  double t3225;
  double t3227;
  double t3228;
  double t3272;
  double t3273;
  double t3279;
  double t3261;
  double t3263;
  double t3265;
  double t3235;
  double t3239;
  double t3244;
  double t3292;
  double t3294;
  double t3296;
  double t3250;
  double t3252;
  double t3256;
  double t3270;
  double t3299;
  double t3300;
  double t3301;
  double t3302;
  double t3308;
  double t3318;
  double t3320;
  double t3329;
  double t3330;
  double t3331;
  double t3333;
  double t3374;
  double t3378;
  double t3383;
  double t3367;
  double t3370;
  double t3372;
  double t3385;
  double t3393;
  double t3399;
  double t3435;
  double t3454;
  double t3459;
  double t3405;
  double t3418;
  double t3430;
  double t3432;
  double t3460;
  double t3463;
  double t3465;
  double t3469;
  double t3471;
  double t3474;
  double t3488;
  double t3497;
  double t3498;
  double t3507;
  double t3509;
  double t3516;
  double t3529;
  double t3530;
  double t3542;
  double t3548;
  double t3594;
  double t3656;
  double t3657;
  double t3659;
  double t3660;
  double t3666;
  double t3669;
  double t3684;
  double t3697;
  double t3618;
  double t3625;
  double t3626;
  double t3570;
  double t3573;
  double t3574;
  double t3751;
  double t3753;
  double t3758;
  double t3762;
  double t3764;
  double t3744;
  double t3745;
  double t3813;
  double t3815;
  double t3816;
  double t3769;
  double t3811;
  double t3786;
  double t3797;
  double t3802;
  double t3826;
  double t3857;
  double t3829;
  double t3834;
  double t3839;
  double t3982;
  double t3988;
  double t4038;
  double t4042;
  double t4050;
  double t4035;
  double t4054;
  double t4023;
  double t4028;
  double t4091;
  double t4094;
  double t4075;
  double t4082;
  double t4229;
  double t4209;
  double t4210;
  double t4214;
  double t4215;
  double t4217;
  double t4232;
  double t4253;
  double t4266;
  double t4272;
  double t4276;
  double t4277;
  double t4304;
  double t4337;
  double t4299;
  double t4300;
  double t4303;
  double t4308;
  double t4309;
  double t4311;
  double t4312;
  double t4314;
  double t4317;
  double t4319;
  double t4321;
  double t4326;
  double t4329;
  double t4334;
  double t4342;
  double t4344;
  double t4346;
  double t4348;
  double t4351;
  double t4353;
  double t4362;
  double t4366;
  double t4368;
  double t4371;
  double t4372;
  double t4379;
  double t4388;
  double t4389;
  double t4392;
  double t4427;
  double t4428;
  double t4432;
  double t4433;
  double t4435;
  double t4440;
  double t4441;
  double t4443;
  double t4446;
  double t4447;
  double t4325;
  double t4357;
  double t4394;
  double t4395;
  double t4399;
  double t4411;
  double t4413;
  double t4417;
  double t4420;
  double t4421;
  double t4423;
  double t4424;
  double t4484;
  double t4485;
  double t4489;
  double t4495;
  double t4500;
  double t4502;
  double t4503;
  double t4509;
  double t4513;
  double t4515;
  double t4517;
  double t4455;
  double t4456;
  double t4457;
  double t4458;
  double t4587;
  double t4588;
  double t4589;
  double t4594;
  double t4603;
  double t4613;
  double t4616;
  double t4625;
  double t4632;
  double t4633;
  double t4634;
  double t4639;
  double t4643;
  double t4648;
  double t4418;
  double t4461;
  double t4465;
  double t4466;
  double t4468;
  double t4470;
  double t4434;
  double t4442;
  double t4451;
  double t4452;
  double t4481;
  double t4518;
  double t4731;
  double t4732;
  double t4733;
  double t4741;
  double t4742;
  double t4744;
  double t4492;
  double t4501;
  double t4504;
  double t4505;
  double t4519;
  double t4535;
  double t4538;
  double t4539;
  double t4219;
  double t4254;
  double t4279;
  double t4280;
  double t4286;
  double t4288;
  double t4295;
  double t4296;
  double t4829;
  double t4834;
  double t4837;
  double t4815;
  double t4822;
  double t4823;
  double t4808;
  double t4809;
  double t4811;
  double t4812;
  double t4828;
  double t4844;
  double t4849;
  double t4869;
  double t4871;
  double t4872;
  double t4874;
  double t4875;
  double t4885;
  double t4765;
  double t4767;
  double t4769;
  double t4750;
  double t4751;
  double t4753;
  double t4929;
  double t4933;
  double t4937;
  double t4945;
  double t4946;
  double t4954;
  double t4794;
  double t4795;
  double t4796;
  double t4782;
  double t4788;
  double t4792;
  double t5013;
  double t5015;
  double t5024;
  double t4973;
  double t4974;
  double t4975;
  double t4956;
  double t4977;
  double t4960;
  double t4966;
  double t4968;
  double t4993;
  double t5027;
  double t5055;
  double t5058;
  double t5060;
  double t5063;
  double t5064;
  double t5068;
  double t4994;
  double t4997;
  double t5003;
  double t5100;
  double t5107;
  double t5110;
  double t5073;
  double t5074;
  double t5075;
  double t5154;
  double t5156;
  double t5158;
  double t5164;
  double t5165;
  double t5169;
  double t5258;
  double t5266;
  double t5268;
  double t5270;
  double t5251;
  double t5252;
  double t5259;
  double t5283;
  double t5285;
  double t5287;
  double t5289;
  double t5242;
  double t5245;
  double t5228;
  double t5230;
  double t5340;
  double t5265;
  double t5269;
  double t5272;
  double t5273;
  double t5304;
  double t5306;
  double t5307;
  double t5309;
  double t5315;
  double t5317;
  double t5318;
  double t5321;
  double t5322;
  double t5342;
  double t5346;
  double t5349;
  double t5351;
  double t5355;
  double t5356;
  double t5360;
  double t5361;
  double t5366;
  double t5370;
  double t5376;
  double t5377;
  double t5382;
  double t5385;
  double t5391;
  double t5392;
  double t5411;
  double t5413;
  double t5303;
  double t5367;
  double t5326;
  double t5328;
  double t5330;
  double t5333;
  double t5297;
  double t5298;
  double t5299;
  double t5301;
  double t5436;
  double t5462;
  double t5444;
  double t5448;
  double t5451;
  double t5455;
  double t5418;
  double t5420;
  double t5424;
  double t5433;
  double t5510;
  double t5513;
  double t5514;
  double t5520;
  double t5521;
  double t5523;
  double t5236;
  double t5237;
  double t5246;
  double t5247;
  double t5249;
  double t5254;
  double t5262;
  double t5263;
  double t5590;
  double t5592;
  double t5594;
  double t5584;
  double t5585;
  double t5588;
  double t5574;
  double t5575;
  double t5576;
  double t5578;
  double t5589;
  double t5599;
  double t5602;
  double t5616;
  double t5619;
  double t5620;
  double t5630;
  double t5632;
  double t5638;
  double t5532;
  double t5533;
  double t5540;
  double t5549;
  double t5553;
  double t5555;
  double t5492;
  double t5494;
  double t5498;
  double t5502;
  double t5504;
  double t5507;
  double t5682;
  double t5683;
  double t5685;
  double t5668;
  double t5670;
  double t5676;
  double t5706;
  double t5710;
  double t5712;
  double t5717;
  double t5720;
  double t5721;
  double t5729;
  double t5731;
  double t5733;
  double t5694;
  double t5695;
  double t5699;
  double t5704;
  double t5715;
  double t5767;
  double t5768;
  double t5771;
  double t5742;
  double t5744;
  double t5762;
  double t5763;
  double t5764;
  double t5807;
  double t5813;
  double t5814;
  double t5816;
  double t5821;
  double t5822;
  double t5903;
  double t5904;
  double t5905;
  double t5907;
  double t5908;
  double t5910;
  double t5913;
  double t5914;
  double t5923;
  double t5927;
  double t5928;
  double t5929;
  double t5942;
  double t5972;
  double t5975;
  double t5978;
  double t5980;
  double t5983;
  double t5989;
  double t5990;
  double t5993;
  double t5945;
  double t5948;
  double t5955;
  double t5957;
  double t5958;
  double t5959;
  double t5968;
  double t5981;
  double t6001;
  double t6005;
  double t6007;
  double t6009;
  double t6010;
  double t6011;
  double t6012;
  double t6016;
  double t6017;
  double t6019;
  double t6023;
  double t6024;
  double t6028;
  double t6029;
  double t6030;
  double t6031;
  double t6032;
  double t6034;
  double t6035;
  double t2624;
  double t192;
  double t2640;
  double t2648;
  double t6041;
  double t6042;
  double t6044;
  double t6053;
  double t6061;
  double t6063;
  double t2687;
  double t6100;
  double t6104;
  double t6110;
  double t6121;
  double t6124;
  double t6130;
  double t6145;
  double t6146;
  double t6152;
  double t6153;
  double t6156;
  double t6159;
  double t6161;
  double t6163;
  double t6164;
  double t2730;
  double t6070;
  double t6072;
  double t6074;
  double t6080;
  double t6086;
  double t6090;
  double t2792;
  double t2843;
  double t6245;
  double t6247;
  double t6255;
  double t6258;
  double t6260;
  double t6261;
  double t6262;
  double t6267;
  double t6268;
  double t6186;
  double t6188;
  double t6191;
  double t6193;
  double t6195;
  double t6203;
  double t6211;
  double t6214;
  double t6218;
  double t6219;
  double t6220;
  double t6221;
  double t6369;
  double t6383;
  double t6392;
  double t6397;
  double t6471;
  double t6475;
  double t6483;
  double t6488;
  double t5192;
  double t5193;
  double t5194;
  double t5176;
  double t5177;
  double t5178;
  double t6669;
  double t6670;
  double t6672;
  double t6673;
  double t6674;
  double t6675;
  double t6676;
  double t6682;
  double t6684;
  double t6686;
  double t6688;
  double t6690;
  double t6691;
  double t6693;
  double t6610;
  double t6616;
  double t6632;
  double t6644;
  double t5113;
  double t5117;
  double t5119;
  double t6765;
  double t6767;
  double t5084;
  double t5087;
  double t5090;
  double t4814;
  double t4853;
  double t4866;
  double t6785;
  double t6789;
  double t6878;
  double t6887;
  double t6899;
  double t6903;
  double t5845;
  double t5849;
  double t5851;
  double t5582;
  double t5611;
  double t5612;
  double t7027;
  double t7033;
  double t5782;
  double t5787;
  double t5802;
  double t7044;
  double t7045;
  double t7119;
  double t7121;
  double t7122;
  double t7123;
  double t7124;
  double t7130;
  double t7131;
  double t7133;
  double t7134;
  double t7136;
  double t7140;
  double t7141;
  double t7142;
  double t7166;
  double t7170;
  double t7171;
  double t7172;
  double t7176;
  double t7180;
  double t7182;
  double t7183;
  double t7152;
  double t7156;
  double t7157;
  double t7158;
  double t7161;
  double t7163;
  double t7175;
  double t7185;
  double t7190;
  double t7191;
  double t7192;
  double t7195;
  double t7196;
  double t7197;
  double t7198;
  double t7201;
  double t7203;
  double t7208;
  double t7210;
  double t7216;
  double t7221;
  double t7222;
  double t7224;
  double t7225;
  double t7226;
  double t7228;
  double t7233;
  double t7234;
  double t7236;
  double t7240;
  double t7241;
  double t7244;
  double t7278;
  double t7279;
  double t7280;
  double t7292;
  double t7294;
  double t7298;
  double t7308;
  double t7309;
  double t7319;
  double t7320;
  double t7321;
  double t7327;
  double t7329;
  double t7330;
  double t7331;
  double t7251;
  double t7254;
  double t7258;
  double t7263;
  double t7267;
  double t7268;
  double t7420;
  double t7421;
  double t7425;
  double t7426;
  double t7432;
  double t7440;
  double t7442;
  double t7447;
  double t7448;
  double t7341;
  double t7344;
  double t7347;
  double t7357;
  double t7366;
  double t7370;
  double t7376;
  double t7387;
  double t7389;
  double t7390;
  double t7393;
  double t7396;
  double t7578;
  double t7581;
  double t7591;
  double t7594;
  double t7672;
  double t7681;
  double t7688;
  double t7693;
  double t7876;
  double t7878;
  double t7879;
  double t7885;
  double t7889;
  double t7896;
  double t7900;
  double t7907;
  double t7908;
  double t7909;
  double t7910;
  double t7911;
  double t7912;
  double t7913;
  double t7806;
  double t7814;
  double t7826;
  double t7833;
  double t8016;
  double t8025;
  double t8041;
  double t8045;
  double t8133;
  double t8141;
  double t8153;
  double t8156;
  double t8238;
  double t8242;
  double t8251;
  double t8252;
  t406 = Cos(var1[14]);
  t412 = -1.*t406;
  t417 = 1. + t412;
  t308 = Cos(var1[13]);
  t309 = -1.*t308;
  t319 = 1. + t309;
  t440 = Sin(var1[14]);
  t462 = 4.e-6*t440;
  t331 = Sin(var1[13]);
  t422 = 1.000000000016*t417;
  t428 = -7.e-6*t417;
  t481 = t428 + t462;
  t485 = -7.e-6*t481;
  t506 = -1. + t422 + t485;
  t327 = -7.e-6*t319;
  t582 = -6.5e-11*t417;
  t583 = 1. + t582;
  t594 = -7.e-6*t583;
  t605 = 7.e-6*t417;
  t645 = t594 + t605 + t462;
  t861 = -2.8e-11*t417;
  t870 = -1. + t406;
  t877 = 4.e-6*t870;
  t885 = -7.e-6*t440;
  t910 = t877 + t885;
  t954 = -7.e-6*t910;
  t987 = t861 + t954 + t440;
  t674 = -1. + t308;
  t698 = 4.e-6*t674;
  t1120 = 2.8e-11*t319;
  t1092 = 4.e-6*t331;
  t1095 = t327 + t1092;
  t1173 = t1120 + t331;
  t1461 = 2.8e-11*t417;
  t1053 = -1.000000000016*t319;
  t1059 = 1. + t1053;
  t1621 = -1.*t440;
  t1452 = -1.*t331;
  t401 = -4.e-6*t331;
  t1512 = 4.e-6*t417;
  t1521 = t1512 + t885;
  t1536 = -4.e-6*t440;
  t1561 = t428 + t1536;
  t1410 = 7.e-6*t440;
  t1265 = -1.000000000049*t417;
  t1623 = t1461 + t1621;
  t1657 = -1.000000000016*t417;
  t1666 = 1. + t1657;
  t1682 = t861 + t1621;
  t1317 = -7.e-6*t331;
  t1367 = t698 + t1317;
  t1532 = 4.e-6*t1521;
  t1562 = -7.e-6*t1561;
  t1576 = 1. + t582 + t1532 + t1562;
  t1242 = -1.000000000049*t319;
  t1259 = 1. + t1242;
  t1583 = 1.000000000049*t417;
  t1588 = -1. + t1583;
  t1602 = 4.e-6*t1588;
  t1638 = -7.e-6*t1623;
  t1639 = t1602 + t877 + t1638 + t885;
  t1459 = t1120 + t1452;
  t1677 = -7.e-6*t1666;
  t1694 = 4.e-6*t1682;
  t1701 = t1677 + t428 + t1694 + t462;
  t735 = 7.e-6*t331;
  t1717 = -2.8e-11*t319;
  t1769 = -2.598649999999999e-7*var1[14];
  t1779 = 0.148705*t583;
  t1784 = -2.3905277499999995e-16*t417;
  t1788 = -0.038922999986*t1521;
  t1794 = -0.80315*t1561;
  t1805 = t605 + t462;
  t1809 = -0.503149000008*t1805;
  t1811 = t877 + t1410;
  t1815 = -0.038924*t1811;
  t1816 = t1769 + t1779 + t1784 + t1788 + t1794 + t1809 + t1815;
  t1840 = 1.0394599999999997e-12*var1[14];
  t1844 = 1. + t1265;
  t1848 = -0.038924*t1844;
  t1853 = -0.03892299998790722*t417;
  t1860 = -0.80315*t1623;
  t1865 = 0.148705*t910;
  t1868 = t1512 + t1410;
  t1870 = -3.6777349999999994e-6*t1868;
  t1877 = t861 + t440;
  t1881 = -0.503149000008*t1877;
  t1884 = t1840 + t1848 + t1853 + t1860 + t1865 + t1870 + t1881;
  t1889 = 1.8190549999999993e-12*var1[14];
  t1894 = -0.80315*t1666;
  t1895 = -0.5031490000160505*t417;
  t1901 = -0.038922999986*t1682;
  t1903 = t605 + t1536;
  t1905 = -3.6777349999999994e-6*t1903;
  t1908 = 0.148705*t481;
  t1912 = t1461 + t440;
  t1915 = -0.038924*t1912;
  t1918 = t1889 + t1894 + t1895 + t1901 + t1905 + t1908 + t1915;
  t542 = -6.5e-11*t319;
  t560 = 1. + t542;
  t805 = t698 + t735;
  t403 = t327 + t401;
  t2015 = 4.e-6*t319;
  t1758 = 7.e-6*t319;
  t1957 = t1367*t1576;
  t1970 = t1259*t1639;
  t1973 = t1459*t1701;
  t1974 = t1957 + t1970 + t1973;
  t1276 = 4.e-6*t910;
  t1304 = 1. + t1265 + t1276;
  t1407 = 4.e-6*t583;
  t1443 = t1407 + t877 + t1410;
  t1465 = 4.e-6*t481;
  t1466 = t1461 + t1465 + t440;
  t1714 = 1.0248489999999998e-12*var1[13];
  t1716 = -0.28120900000849935*t319;
  t1742 = t1717 + t1452;
  t1747 = -0.038748999993*t1742;
  t1759 = t1758 + t401;
  t1761 = -2.123459e-6*t1759;
  t1828 = t1095*t1816;
  t1886 = t1173*t1884;
  t1926 = t1059*t1918;
  t1946 = t1714 + t1716 + t1747 + t1761 + t1828 + t1886 + t1926;
  t1312 = t1259*t1304;
  t1448 = t1367*t1443;
  t1471 = t1459*t1466;
  t1486 = t1312 + t1448 + t1471;
  t1983 = 5.856279999999999e-13*var1[13];
  t1992 = -0.0387489999948987*t319;
  t2020 = t2015 + t735;
  t2025 = -2.123459e-6*t2020;
  t2034 = t1717 + t331;
  t2039 = -0.281209000004*t2034;
  t2044 = t1367*t1816;
  t2045 = t1259*t1884;
  t2055 = t1459*t1918;
  t2058 = t1983 + t1992 + t2025 + t2039 + t2044 + t2045 + t2055;
  t2105 = -1.4640699999999997e-7*var1[13];
  t2114 = -1.38024835e-16*t319;
  t2121 = t2015 + t1317;
  t2129 = -0.038748999993*t2121;
  t2138 = t1758 + t1092;
  t2140 = -0.281209000004*t2138;
  t2149 = t560*t1816;
  t2173 = t805*t1884;
  t2180 = t403*t1918;
  t2185 = t2105 + t2114 + t2129 + t2140 + t2149 + t2173 + t2180;
  t520 = t403*t506;
  t659 = t560*t645;
  t1022 = t805*t987;
  t1025 = t520 + t659 + t1022;
  t1036 = 0.15121*t1025;
  t1064 = t1059*t506;
  t1101 = t1095*t645;
  t1184 = t1173*t987;
  t1192 = t1064 + t1101 + t1184;
  t1224 = 0.15121*t1192;
  t1579 = t1095*t1576;
  t1643 = t1173*t1639;
  t1705 = t1059*t1701;
  t1708 = t1579 + t1643 + t1705;
  t1951 = t1708*t1946;
  t2066 = t1974*t2058;
  t2082 = t560*t1576;
  t2085 = t805*t1639;
  t2089 = t403*t1701;
  t2096 = t2082 + t2085 + t2089;
  t2191 = t2096*t2185;
  t2202 = t1951 + t2066 + t2191;
  t2204 = t1486*t2202;
  t2208 = t1173*t1304;
  t2211 = t1095*t1443;
  t2213 = t1059*t1466;
  t2216 = t2208 + t2211 + t2213;
  t2224 = -1.*t2216*t1946;
  t2241 = -1.*t1486*t2058;
  t2243 = t805*t1304;
  t2253 = t560*t1443;
  t2258 = t403*t1466;
  t2261 = t2243 + t2253 + t2258;
  t2263 = -1.*t2261*t2185;
  t2275 = t2224 + t2241 + t2263;
  t2287 = t1974*t2275;
  t2290 = t1036 + t1224 + t2204 + t2287;
  t2329 = t1576*t1816;
  t2332 = t1639*t1884;
  t2333 = t1701*t1918;
  t2334 = t2329 + t2332 + t2333;
  t2350 = -1.*t1816*t1443;
  t2364 = -1.*t1304*t1884;
  t2366 = -1.*t1466*t1918;
  t2367 = t2350 + t2364 + t2366;
  t2301 = 0.038749*t506;
  t2302 = 7.e-6*t583;
  t2304 = t2302 + t428 + t1536;
  t2320 = 1.e-6*t2304;
  t2322 = -0.281209*t987;
  t2336 = t1443*t2334;
  t2375 = t1576*t2367;
  t2376 = -1.*t1304*t2334;
  t2378 = -1.*t1639*t2367;
  t2387 = t2376 + t2378;
  t2392 = 4.e-6*t2387;
  t2423 = t1466*t2334;
  t2429 = t1701*t2367;
  t2433 = t2423 + t2429;
  t2437 = -7.e-6*t2433;
  t2448 = t2301 + t2320 + t2322 + t2336 + t2375 + t2392 + t2437;
  t180 = Sin(var1[12]);
  t99 = Cos(var1[12]);
  t127 = -1.*t99;
  t144 = 1. + t127;
  t191 = 0.15121*t180;
  t161 = -0.15121*t144;
  t2486 = 0.15121*t144;
  t2487 = t180*t1946;
  t2492 = t99*t2185;
  t2494 = t2486 + t191 + t2487 + t2492;
  t2528 = t99*t1946;
  t2529 = -1.*t180*t2185;
  t2539 = t161 + t191 + t2528 + t2529;
  t2462 = t180*t1708;
  t2464 = t99*t2096;
  t2473 = t2462 + t2464;
  t2499 = t2473*t2494;
  t2502 = t99*t1708;
  t2509 = -1.*t180*t2096;
  t2521 = t2502 + t2509;
  t2551 = t2521*t2539;
  t2559 = t2066 + t2499 + t2551;
  t2560 = t1486*t2559;
  t2565 = t180*t2216;
  t2566 = t99*t2261;
  t2569 = t2565 + t2566;
  t2570 = -1.*t2569*t2494;
  t2573 = t99*t2216;
  t2576 = -1.*t180*t2261;
  t2577 = t2573 + t2576;
  t2582 = -1.*t2577*t2539;
  t2584 = t2241 + t2570 + t2582;
  t2591 = t1974*t2584;
  t2595 = t2560 + t2591;
  t34 = Cos(var1[4]);
  t35 = Cos(var1[5]);
  t2642 = Sin(var1[5]);
  t2630 = Sin(var1[4]);
  t2656 = -1.*t34*t35*t180;
  t2657 = -1.*t99*t34*t2642;
  t2662 = t2656 + t2657;
  t2697 = t99*t34*t35;
  t2702 = -1.*t34*t180*t2642;
  t2721 = t2697 + t2702;
  t2964 = t1459*t506;
  t2966 = t1367*t645;
  t2970 = t1259*t987;
  t2973 = t2964 + t2966 + t2970;
  t2979 = t2973*t2630;
  t2993 = -1.*t180*t1025;
  t3004 = t99*t1192;
  t3007 = t2993 + t3004;
  t3009 = t35*t3007;
  t3013 = t99*t1025;
  t3017 = t180*t1192;
  t3022 = t3013 + t3017;
  t3026 = -1.*t3022*t2642;
  t3030 = t3009 + t3026;
  t3034 = t34*t3030;
  t3041 = t2979 + t3034;
  t2734 = t1459*t2630;
  t2740 = t403*t2662;
  t2752 = t1059*t2721;
  t2755 = t2734 + t2740 + t2752;
  t2801 = t1367*t2630;
  t2802 = t560*t2662;
  t2804 = t1095*t2721;
  t2820 = t2801 + t2802 + t2804;
  t2844 = t1259*t2630;
  t2887 = t805*t2662;
  t2917 = t1173*t2721;
  t2924 = t2844 + t2887 + t2917;
  t3150 = Sin(var1[3]);
  t3162 = t35*t3022;
  t3166 = t3007*t2642;
  t3169 = t3162 + t3166;
  t3175 = t3150*t3169;
  t3178 = Cos(var1[3]);
  t3180 = t34*t2973;
  t3182 = -1.*t2630*t3030;
  t3187 = t3180 + t3182;
  t3194 = t3178*t3187;
  t3200 = t3175 + t3194;
  t3225 = t3178*t3169;
  t3227 = -1.*t3150*t3187;
  t3228 = t3225 + t3227;
  t3272 = t35*t2473;
  t3273 = t2521*t2642;
  t3279 = t3272 + t3273;
  t3261 = t35*t2539;
  t3263 = -1.*t2494*t2642;
  t3265 = t3261 + t3263;
  t3235 = t35*t2569;
  t3239 = t2577*t2642;
  t3244 = t3235 + t3239;
  t3292 = t35*t2494;
  t3294 = t2539*t2642;
  t3296 = t3292 + t3294;
  t3250 = t35*t2521;
  t3252 = -1.*t2473*t2642;
  t3256 = t3250 + t3252;
  t3270 = t3256*t3265;
  t3299 = t3279*t3296;
  t3300 = t2066 + t3270 + t3299;
  t3301 = t3244*t3300;
  t3302 = t35*t2577;
  t3308 = -1.*t2569*t2642;
  t3318 = t3302 + t3308;
  t3320 = -1.*t3318*t3265;
  t3329 = -1.*t3244*t3296;
  t3330 = t2241 + t3320 + t3329;
  t3331 = t3279*t3330;
  t3333 = t3301 + t3331;
  t3374 = t1974*t2630;
  t3378 = t34*t3256;
  t3383 = t3374 + t3378;
  t3367 = t1486*t2630;
  t3370 = t34*t3318;
  t3372 = t3367 + t3370;
  t3385 = t2058*t2630;
  t3393 = t34*t3265;
  t3399 = t3385 + t3393;
  t3435 = t34*t2058;
  t3454 = -1.*t2630*t3265;
  t3459 = t3435 + t3454;
  t3405 = t3383*t3399;
  t3418 = t34*t1974;
  t3430 = -1.*t2630*t3256;
  t3432 = t3418 + t3430;
  t3460 = t3432*t3459;
  t3463 = t3299 + t3405 + t3460;
  t3465 = t3372*t3463;
  t3469 = -1.*t3372*t3399;
  t3471 = t34*t1486;
  t3474 = -1.*t2630*t3318;
  t3488 = t3471 + t3474;
  t3497 = -1.*t3488*t3459;
  t3498 = t3329 + t3469 + t3497;
  t3507 = t3383*t3498;
  t3509 = t3465 + t3507;
  t3516 = 0.15121*t99;
  t3529 = -0.15121*t180;
  t3530 = -1.*t180*t1946;
  t3542 = -1.*t99*t2185;
  t3548 = t3516 + t3529 + t3530 + t3542;
  t3594 = t3516 + t191 + t2528 + t2529;
  t3656 = -1.*t99*t1025;
  t3657 = -1.*t180*t1192;
  t3659 = t3656 + t3657;
  t3660 = t35*t3659;
  t3666 = -1.*t3007*t2642;
  t3669 = t3660 + t3666;
  t3684 = t3659*t2642;
  t3697 = t3009 + t3684;
  t3618 = -1.*t180*t2216;
  t3625 = -1.*t99*t2261;
  t3626 = t3618 + t3625;
  t3570 = -1.*t180*t1708;
  t3573 = -1.*t99*t2096;
  t3574 = t3570 + t3573;
  t3751 = t3574*t2642;
  t3753 = t3250 + t3751;
  t3758 = t35*t3594;
  t3762 = t3548*t2642;
  t3764 = t3758 + t3762;
  t3744 = t3626*t2642;
  t3745 = t3302 + t3744;
  t3813 = t35*t3548;
  t3815 = -1.*t3594*t2642;
  t3816 = t3813 + t3815;
  t3769 = t3279*t3764;
  t3811 = t3753*t3296;
  t3786 = t35*t3574;
  t3797 = -1.*t2521*t2642;
  t3802 = t3786 + t3797;
  t3826 = -1.*t3244*t3764;
  t3857 = -1.*t3745*t3296;
  t3829 = t35*t3626;
  t3834 = -1.*t2577*t2642;
  t3839 = t3829 + t3834;
  t3982 = -1.*t35*t3022;
  t3988 = t3982 + t3666;
  t4038 = -1.*t35*t2494;
  t4042 = -1.*t2539*t2642;
  t4050 = t4038 + t4042;
  t4035 = t3279*t3265;
  t4054 = t3256*t3296;
  t4023 = -1.*t35*t2473;
  t4028 = t4023 + t3797;
  t4091 = -1.*t3244*t3265;
  t4094 = -1.*t3318*t3296;
  t4075 = -1.*t35*t2569;
  t4082 = t4075 + t3834;
  t4229 = 4.e-6*t406;
  t4209 = -7.e-6*t406;
  t4210 = t4209 + t1536;
  t4214 = -7.e-6*t4210;
  t4215 = -2.8e-11*t440;
  t4217 = t406 + t4214 + t4215;
  t4232 = 7.000000000455e-6*t440;
  t4253 = t4229 + t4232;
  t4266 = t4229 + t885;
  t4272 = -7.e-6*t4266;
  t4276 = 1.000000000016*t440;
  t4277 = t4272 + t4276;
  t4304 = 7.e-6*t406;
  t4337 = 2.8e-11*t440;
  t4299 = -4.e-6*t406;
  t4300 = t4299 + t885;
  t4303 = -0.80315*t4300;
  t4308 = t4304 + t1536;
  t4309 = -0.038924*t4308;
  t4311 = t4209 + t462;
  t4312 = -0.038922999986*t4311;
  t4314 = t4229 + t1410;
  t4317 = -0.503149000008*t4314;
  t4319 = -9.666064052774999e-12*t440;
  t4321 = -2.598649999999999e-7 + t4303 + t4309 + t4312 + t4317 + t4319;
  t4326 = 0.148705*t4210;
  t4329 = t406 + t4215;
  t4334 = -0.503149000008*t4329;
  t4342 = t412 + t4337;
  t4344 = -0.80315*t4342;
  t4346 = t4304 + t462;
  t4348 = -3.6777349999999994e-6*t4346;
  t4351 = 1.0000140000590574e-6*t440;
  t4353 = 1.0394599999999997e-12 + t4326 + t4334 + t4344 + t4348 + t4351;
  t4362 = 0.148705*t4266;
  t4366 = t412 + t4215;
  t4368 = -0.038922999986*t4366;
  t4371 = t406 + t4337;
  t4372 = -0.038924*t4371;
  t4379 = t4299 + t1410;
  t4388 = -3.6777349999999994e-6*t4379;
  t4389 = 0.30000099999679997*t440;
  t4392 = 1.8190549999999993e-12 + t4362 + t4368 + t4372 + t4388 + t4389;
  t4427 = -7.e-6*t4300;
  t4428 = 4.e-6*t4311;
  t4432 = -6.5e-11*t440;
  t4433 = t4427 + t4428 + t4432;
  t4435 = 4.e-6*t4366;
  t4440 = 1.12e-16*t440;
  t4441 = t4229 + t4435 + t4440;
  t4443 = -7.e-6*t4342;
  t4446 = 1.96e-16*t440;
  t4447 = t4209 + t4443 + t4446;
  t4325 = t1095*t4321;
  t4357 = t1173*t4353;
  t4394 = t1059*t4392;
  t4395 = t4325 + t4357 + t4394;
  t4399 = t1367*t4321;
  t4411 = t1259*t4353;
  t4413 = t1459*t4392;
  t4417 = t4399 + t4411 + t4413;
  t4420 = t560*t4321;
  t4421 = t805*t4353;
  t4423 = t403*t4392;
  t4424 = t4420 + t4421 + t4423;
  t4484 = 4.e-6*t4210;
  t4485 = -1.000000000049*t440;
  t4489 = t4484 + t4485;
  t4495 = -4.00000000026e-6*t440;
  t4500 = t4304 + t4495;
  t4502 = 4.e-6*t4266;
  t4503 = t406 + t4502 + t4337;
  t4509 = t1259*t4489;
  t4513 = t1367*t4500;
  t4515 = t1459*t4503;
  t4517 = t4509 + t4513 + t4515;
  t4455 = t1367*t4433;
  t4456 = t1459*t4441;
  t4457 = t1259*t4447;
  t4458 = t4455 + t4456 + t4457;
  t4587 = t1816*t4433;
  t4588 = t1576*t4321;
  t4589 = t1639*t4353;
  t4594 = t1701*t4392;
  t4603 = t4447*t1884;
  t4613 = t4441*t1918;
  t4616 = t4587 + t4588 + t4589 + t4594 + t4603 + t4613;
  t4625 = -1.*t1816*t4500;
  t4632 = -1.*t1304*t4353;
  t4633 = -1.*t4321*t1443;
  t4634 = -1.*t4392*t1466;
  t4639 = -1.*t4489*t1884;
  t4643 = -1.*t4503*t1918;
  t4648 = t4625 + t4632 + t4633 + t4634 + t4639 + t4643;
  t4418 = t1974*t4417;
  t4461 = t4458*t2058;
  t4465 = t560*t4433;
  t4466 = t403*t4441;
  t4468 = t805*t4447;
  t4470 = t4465 + t4466 + t4468;
  t4434 = t1095*t4433;
  t4442 = t1059*t4441;
  t4451 = t1173*t4447;
  t4452 = t4434 + t4442 + t4451;
  t4481 = -1.*t4417*t1486;
  t4518 = -1.*t4517*t2058;
  t4731 = t180*t4395;
  t4732 = t99*t4424;
  t4733 = t4731 + t4732;
  t4741 = t99*t4395;
  t4742 = -1.*t180*t4424;
  t4744 = t4741 + t4742;
  t4492 = t1173*t4489;
  t4501 = t1095*t4500;
  t4504 = t1059*t4503;
  t4505 = t4492 + t4501 + t4504;
  t4519 = t805*t4489;
  t4535 = t560*t4500;
  t4538 = t403*t4503;
  t4539 = t4519 + t4535 + t4538;
  t4219 = t1173*t4217;
  t4254 = t1095*t4253;
  t4279 = t1059*t4277;
  t4280 = t4219 + t4254 + t4279;
  t4286 = t805*t4217;
  t4288 = t560*t4253;
  t4295 = t403*t4277;
  t4296 = t4286 + t4288 + t4295;
  t4829 = t180*t4280;
  t4834 = t99*t4296;
  t4837 = t4829 + t4834;
  t4815 = t99*t4280;
  t4822 = -1.*t180*t4296;
  t4823 = t4815 + t4822;
  t4808 = t1259*t4217;
  t4809 = t1367*t4253;
  t4811 = t1459*t4277;
  t4812 = t4808 + t4809 + t4811;
  t4828 = t35*t4823;
  t4844 = -1.*t4837*t2642;
  t4849 = t4828 + t4844;
  t4869 = t35*t4837;
  t4871 = t4823*t2642;
  t4872 = t4869 + t4871;
  t4874 = t34*t4812;
  t4875 = -1.*t2630*t4849;
  t4885 = t4874 + t4875;
  t4765 = -1.*t180*t4470;
  t4767 = t99*t4452;
  t4769 = t4765 + t4767;
  t4750 = t99*t4470;
  t4751 = t180*t4452;
  t4753 = t4750 + t4751;
  t4929 = t35*t4744;
  t4933 = -1.*t4733*t2642;
  t4937 = t4929 + t4933;
  t4945 = t35*t4733;
  t4946 = t4744*t2642;
  t4954 = t4945 + t4946;
  t4794 = t99*t4505;
  t4795 = -1.*t180*t4539;
  t4796 = t4794 + t4795;
  t4782 = t180*t4505;
  t4788 = t99*t4539;
  t4792 = t4782 + t4788;
  t5013 = t35*t4792;
  t5015 = t4796*t2642;
  t5024 = t5013 + t5015;
  t4973 = t35*t4753;
  t4974 = t4769*t2642;
  t4975 = t4973 + t4974;
  t4956 = t3279*t4954;
  t4977 = t4975*t3296;
  t4960 = t35*t4769;
  t4966 = -1.*t4753*t2642;
  t4968 = t4960 + t4966;
  t4993 = -1.*t4954*t3244;
  t5027 = -1.*t5024*t3296;
  t5055 = t4417*t2630;
  t5058 = t34*t4937;
  t5060 = t5055 + t5058;
  t5063 = t34*t4417;
  t5064 = -1.*t2630*t4937;
  t5068 = t5063 + t5064;
  t4994 = t35*t4796;
  t4997 = -1.*t4792*t2642;
  t5003 = t4994 + t4997;
  t5100 = t4517*t2630;
  t5107 = t34*t5003;
  t5110 = t5100 + t5107;
  t5073 = t4458*t2630;
  t5074 = t34*t4968;
  t5075 = t5073 + t5074;
  t5154 = -1.*t2973*t2630;
  t5156 = -1.*t34*t3030;
  t5158 = t5154 + t5156;
  t5164 = -1.*t2058*t2630;
  t5165 = -1.*t34*t3265;
  t5169 = t5164 + t5165;
  t5258 = 2.8e-11*t331;
  t5266 = -7.e-6*t308;
  t5268 = t5266 + t401;
  t5270 = t309 + t5258;
  t5251 = 4.e-6*t308;
  t5252 = t5251 + t1317;
  t5259 = t308 + t5258;
  t5283 = t5268*t1576;
  t5285 = -1.000000000049*t331*t1639;
  t5287 = t5270*t1701;
  t5289 = t5283 + t5285 + t5287;
  t5242 = 7.e-6*t308;
  t5245 = t5242 + t401;
  t5228 = -4.e-6*t308;
  t5230 = t5228 + t1317;
  t5340 = -2.8e-11*t331;
  t5265 = -1.000000000049*t331*t1304;
  t5269 = t5268*t1443;
  t5272 = t5270*t1466;
  t5273 = t5265 + t5269 + t5272;
  t5304 = t5266 + t1092;
  t5306 = -0.038748999993*t5304;
  t5307 = t5251 + t735;
  t5309 = -0.281209000004*t5307;
  t5315 = -1.38024835e-16*t331;
  t5317 = -6.5e-11*t331*t1816;
  t5318 = t5245*t1884;
  t5321 = t5230*t1918;
  t5322 = -1.4640699999999997e-7 + t5306 + t5309 + t5315 + t5317 + t5318 + t5321;
  t5342 = t308 + t5340;
  t5346 = -0.281209000004*t5342;
  t5349 = t5242 + t1092;
  t5351 = -2.123459e-6*t5349;
  t5355 = -0.0387489999948987*t331;
  t5356 = t5268*t1816;
  t5360 = -1.000000000049*t331*t1884;
  t5361 = t5270*t1918;
  t5366 = 5.856279999999999e-13 + t5346 + t5351 + t5355 + t5356 + t5360 + t5361;
  t5370 = t309 + t5340;
  t5376 = -0.038748999993*t5370;
  t5377 = t5228 + t735;
  t5382 = -2.123459e-6*t5377;
  t5385 = -0.28120900000849935*t331;
  t5391 = t5252*t1816;
  t5392 = t5259*t1884;
  t5411 = -1.000000000016*t331*t1918;
  t5413 = 1.0248489999999998e-12 + t5376 + t5382 + t5385 + t5391 + t5392 + t5411;
  t5303 = t5289*t2058;
  t5367 = t1974*t5366;
  t5326 = -6.5e-11*t331*t1576;
  t5328 = t5245*t1639;
  t5330 = t5230*t1701;
  t5333 = t5326 + t5328 + t5330;
  t5297 = t5252*t1576;
  t5298 = t5259*t1639;
  t5299 = -1.000000000016*t331*t1701;
  t5301 = t5297 + t5298 + t5299;
  t5436 = -1.*t5273*t2058;
  t5462 = -1.*t1486*t5366;
  t5444 = t5245*t1304;
  t5448 = -6.5e-11*t331*t1443;
  t5451 = t5230*t1466;
  t5455 = t5444 + t5448 + t5451;
  t5418 = t5259*t1304;
  t5420 = t5252*t1443;
  t5424 = -1.000000000016*t331*t1466;
  t5433 = t5418 + t5420 + t5424;
  t5510 = -1.*t180*t5322;
  t5513 = t99*t5413;
  t5514 = t5510 + t5513;
  t5520 = t99*t5322;
  t5521 = t180*t5413;
  t5523 = t5520 + t5521;
  t5236 = t5230*t506;
  t5237 = -6.5e-11*t331*t645;
  t5246 = t5245*t987;
  t5247 = t5236 + t5237 + t5246;
  t5249 = -1.000000000016*t331*t506;
  t5254 = t5252*t645;
  t5262 = t5259*t987;
  t5263 = t5249 + t5254 + t5262;
  t5590 = t99*t5247;
  t5592 = t180*t5263;
  t5594 = t5590 + t5592;
  t5584 = -1.*t180*t5247;
  t5585 = t99*t5263;
  t5588 = t5584 + t5585;
  t5574 = t5270*t506;
  t5575 = t5268*t645;
  t5576 = -1.000000000049*t331*t987;
  t5578 = t5574 + t5575 + t5576;
  t5589 = t35*t5588;
  t5599 = -1.*t5594*t2642;
  t5602 = t5589 + t5599;
  t5616 = t35*t5594;
  t5619 = t5588*t2642;
  t5620 = t5616 + t5619;
  t5630 = t34*t5578;
  t5632 = -1.*t2630*t5602;
  t5638 = t5630 + t5632;
  t5532 = t99*t5455;
  t5533 = t180*t5433;
  t5540 = t5532 + t5533;
  t5549 = -1.*t180*t5455;
  t5553 = t99*t5433;
  t5555 = t5549 + t5553;
  t5492 = t99*t5333;
  t5494 = t180*t5301;
  t5498 = t5492 + t5494;
  t5502 = -1.*t180*t5333;
  t5504 = t99*t5301;
  t5507 = t5502 + t5504;
  t5682 = t35*t5498;
  t5683 = t5507*t2642;
  t5685 = t5682 + t5683;
  t5668 = t35*t5540;
  t5670 = t5555*t2642;
  t5676 = t5668 + t5670;
  t5706 = t35*t5523;
  t5710 = t5514*t2642;
  t5712 = t5706 + t5710;
  t5717 = t35*t5514;
  t5720 = -1.*t5523*t2642;
  t5721 = t5717 + t5720;
  t5729 = t35*t5555;
  t5731 = -1.*t5540*t2642;
  t5733 = t5729 + t5731;
  t5694 = t35*t5507;
  t5695 = -1.*t5498*t2642;
  t5699 = t5694 + t5695;
  t5704 = t5685*t3296;
  t5715 = t3279*t5712;
  t5767 = t5289*t2630;
  t5768 = t34*t5699;
  t5771 = t5767 + t5768;
  t5742 = -1.*t5676*t3296;
  t5744 = -1.*t3244*t5712;
  t5762 = t5273*t2630;
  t5763 = t34*t5733;
  t5764 = t5762 + t5763;
  t5807 = t5366*t2630;
  t5813 = t34*t5721;
  t5814 = t5807 + t5813;
  t5816 = t34*t5366;
  t5821 = -1.*t2630*t5721;
  t5822 = t5816 + t5821;
  t5903 = 0.15121*t2216;
  t5904 = 0.15121*t2261;
  t5905 = -1.*t1708*t1946;
  t5907 = -1.*t1974*t2058;
  t5908 = -1.*t2096*t2185;
  t5910 = t5905 + t5907 + t5908;
  t5913 = t2973*t5910;
  t5914 = t1192*t1946;
  t5923 = t2973*t2058;
  t5927 = t1025*t2185;
  t5928 = t5914 + t5923 + t5927;
  t5929 = t1974*t5928;
  t5942 = t5903 + t5904 + t5913 + t5929;
  t5972 = t1816*t645;
  t5975 = t987*t1884;
  t5978 = t506*t1918;
  t5980 = t5972 + t5975 + t5978;
  t5983 = -1.*t1576*t1816;
  t5989 = -1.*t1639*t1884;
  t5990 = -1.*t1701*t1918;
  t5993 = t5983 + t5989 + t5990;
  t5945 = -0.281209*t1304;
  t5948 = 6.5e-11*t417;
  t5955 = -1. + t5948;
  t5957 = 4.e-6*t5955;
  t5958 = t5957 + t1512 + t885;
  t5959 = 1.e-6*t5958;
  t5968 = 0.038749*t1466;
  t5981 = t1576*t5980;
  t6001 = t645*t5993;
  t6005 = t1701*t5980;
  t6007 = t506*t5993;
  t6009 = t6005 + t6007;
  t6010 = -7.e-6*t6009;
  t6011 = -1.*t1639*t5980;
  t6012 = -1.*t987*t5993;
  t6016 = t6011 + t6012;
  t6017 = 4.e-6*t6016;
  t6019 = t5945 + t5959 + t5968 + t5981 + t6001 + t6010 + t6017;
  t6023 = -1.*t2473*t2494;
  t6024 = -1.*t2521*t2539;
  t6028 = t5907 + t6023 + t6024;
  t6029 = t2973*t6028;
  t6030 = t3022*t2494;
  t6031 = t3007*t2539;
  t6032 = t5923 + t6030 + t6031;
  t6034 = t1974*t6032;
  t6035 = t6029 + t6034;
  t2624 = t1983 + t1992 + t2025 + t2039;
  t192 = t161 + t191;
  t2640 = t2486 + t191;
  t2648 = t2105 + t2114 + t2129 + t2140;
  t6041 = t35*t3150*t2630;
  t6042 = t3178*t2642;
  t6044 = t6041 + t6042;
  t6053 = t3178*t35;
  t6061 = -1.*t3150*t2630*t2642;
  t6063 = t6053 + t6061;
  t2687 = t1714 + t1716 + t1747 + t1761;
  t6100 = t3150*t3244;
  t6104 = t3178*t3488;
  t6110 = t6100 + t6104;
  t6121 = t3178*t3244;
  t6124 = -1.*t3150*t3488;
  t6130 = t6121 + t6124;
  t6145 = -1.*t3256*t3265;
  t6146 = -1.*t3279*t3296;
  t6152 = t5907 + t6145 + t6146;
  t6153 = t3169*t6152;
  t6156 = t3030*t3265;
  t6159 = t3169*t3296;
  t6161 = t5923 + t6156 + t6159;
  t6163 = t3279*t6161;
  t6164 = t6153 + t6163;
  t2730 = t1889 + t1895 + t1901 + t1905;
  t6070 = -1.*t180*t6044;
  t6072 = t99*t6063;
  t6074 = t6070 + t6072;
  t6080 = t99*t6044;
  t6086 = t180*t6063;
  t6090 = t6080 + t6086;
  t2792 = t1769 + t1784 + t1788 + t1809;
  t2843 = t1840 + t1853 + t1870 + t1881;
  t6245 = -1.*t3383*t3399;
  t6247 = -1.*t3432*t3459;
  t6255 = t6146 + t6245 + t6247;
  t6258 = t3041*t6255;
  t6260 = t3041*t3399;
  t6261 = t3187*t3459;
  t6262 = t6159 + t6260 + t6261;
  t6267 = t3383*t6262;
  t6268 = t6258 + t6267;
  t6186 = -1.*t34*t1459*t3150;
  t6188 = t403*t6074;
  t6191 = t1059*t6090;
  t6193 = t6186 + t6188 + t6191;
  t6195 = -1.*t34*t1367*t3150;
  t6203 = t560*t6074;
  t6211 = t1095*t6090;
  t6214 = t6195 + t6203 + t6211;
  t6218 = -1.*t1259*t34*t3150;
  t6219 = t805*t6074;
  t6220 = t1173*t6090;
  t6221 = t6218 + t6219 + t6220;
  t6369 = -1.*t3279*t3764;
  t6383 = -1.*t3753*t3296;
  t6392 = t3169*t3764;
  t6397 = t3697*t3296;
  t6471 = -1.*t3279*t3265;
  t6475 = -1.*t3256*t3296;
  t6483 = t3169*t3265;
  t6488 = t3030*t3296;
  t5192 = -1.*t1486*t2630;
  t5193 = -1.*t34*t3318;
  t5194 = t5192 + t5193;
  t5176 = -1.*t1974*t2630;
  t5177 = -1.*t34*t3256;
  t5178 = t5176 + t5177;
  t6669 = -1.*t1816*t4433;
  t6670 = -1.*t1576*t4321;
  t6672 = -1.*t1639*t4353;
  t6673 = -1.*t1701*t4392;
  t6674 = -1.*t4447*t1884;
  t6675 = -1.*t4441*t1918;
  t6676 = t6669 + t6670 + t6672 + t6673 + t6674 + t6675;
  t6682 = t4321*t645;
  t6684 = t1816*t4253;
  t6686 = t506*t4392;
  t6688 = t4353*t987;
  t6690 = t4217*t1884;
  t6691 = t4277*t1918;
  t6693 = t6682 + t6684 + t6686 + t6688 + t6690 + t6691;
  t6610 = -1.*t1974*t4417;
  t6616 = -1.*t4458*t2058;
  t6632 = t4417*t2973;
  t6644 = t4812*t2058;
  t5113 = t34*t4517;
  t5117 = -1.*t2630*t5003;
  t5119 = t5113 + t5117;
  t6765 = -1.*t3279*t4954;
  t6767 = -1.*t4975*t3296;
  t5084 = t34*t4458;
  t5087 = -1.*t2630*t4968;
  t5090 = t5084 + t5087;
  t4814 = t4812*t2630;
  t4853 = t34*t4849;
  t4866 = t4814 + t4853;
  t6785 = t4954*t3169;
  t6789 = t4872*t3296;
  t6878 = -1.*t5289*t2058;
  t6887 = -1.*t1974*t5366;
  t6899 = t5578*t2058;
  t6903 = t2973*t5366;
  t5845 = t34*t5273;
  t5849 = -1.*t2630*t5733;
  t5851 = t5845 + t5849;
  t5582 = t5578*t2630;
  t5611 = t34*t5602;
  t5612 = t5582 + t5611;
  t7027 = -1.*t5685*t3296;
  t7033 = -1.*t3279*t5712;
  t5782 = t34*t5289;
  t5787 = -1.*t2630*t5699;
  t5802 = t5782 + t5787;
  t7044 = t5620*t3296;
  t7045 = t3169*t5712;
  t7119 = 0.15121*t1708;
  t7121 = 0.15121*t2096;
  t7122 = -1.*t1192*t1946;
  t7123 = -1.*t2973*t2058;
  t7124 = -1.*t1025*t2185;
  t7130 = t7122 + t7123 + t7124;
  t7131 = t1486*t7130;
  t7133 = t2216*t1946;
  t7134 = t1486*t2058;
  t7136 = t2261*t2185;
  t7140 = t7133 + t7134 + t7136;
  t7141 = t2973*t7140;
  t7142 = t7119 + t7121 + t7131 + t7141;
  t7166 = -1.*t1816*t645;
  t7170 = -1.*t987*t1884;
  t7171 = -1.*t506*t1918;
  t7172 = t7166 + t7170 + t7171;
  t7176 = t1816*t1443;
  t7180 = t1304*t1884;
  t7182 = t1466*t1918;
  t7183 = t7176 + t7180 + t7182;
  t7152 = 7.e-6*t1561;
  t7156 = 4.e-6*t1811;
  t7157 = -1. + t5948 + t7152 + t7156;
  t7158 = 1.e-6*t7157;
  t7161 = -0.281209*t1639;
  t7163 = 0.038749*t1701;
  t7175 = t1443*t7172;
  t7185 = t645*t7183;
  t7190 = t1466*t7172;
  t7191 = t506*t7183;
  t7192 = t7190 + t7191;
  t7195 = -7.e-6*t7192;
  t7196 = -1.*t1304*t7172;
  t7197 = -1.*t987*t7183;
  t7198 = t7196 + t7197;
  t7201 = 4.e-6*t7198;
  t7203 = t7158 + t7161 + t7163 + t7175 + t7185 + t7195 + t7201;
  t7208 = -1.*t3022*t2494;
  t7210 = -1.*t3007*t2539;
  t7216 = t7123 + t7208 + t7210;
  t7221 = t1486*t7216;
  t7222 = t2569*t2494;
  t7224 = t2577*t2539;
  t7225 = t7134 + t7222 + t7224;
  t7226 = t2973*t7225;
  t7228 = t7221 + t7226;
  t7233 = -1.*t3178*t35*t2630;
  t7234 = t3150*t2642;
  t7236 = t7233 + t7234;
  t7240 = t35*t3150;
  t7241 = t3178*t2630*t2642;
  t7244 = t7240 + t7241;
  t7278 = t3150*t3279;
  t7279 = t3178*t3432;
  t7280 = t7278 + t7279;
  t7292 = t3178*t3279;
  t7294 = -1.*t3150*t3432;
  t7298 = t7292 + t7294;
  t7308 = -1.*t3030*t3265;
  t7309 = -1.*t3169*t3296;
  t7319 = t7123 + t7308 + t7309;
  t7320 = t3244*t7319;
  t7321 = t3318*t3265;
  t7327 = t3244*t3296;
  t7329 = t7134 + t7321 + t7327;
  t7330 = t3169*t7329;
  t7331 = t7320 + t7330;
  t7251 = -1.*t180*t7236;
  t7254 = t99*t7244;
  t7258 = t7251 + t7254;
  t7263 = t99*t7236;
  t7267 = t180*t7244;
  t7268 = t7263 + t7267;
  t7420 = -1.*t3041*t3399;
  t7421 = -1.*t3187*t3459;
  t7425 = t7309 + t7420 + t7421;
  t7426 = t3372*t7425;
  t7432 = t3372*t3399;
  t7440 = t3488*t3459;
  t7442 = t7327 + t7432 + t7440;
  t7447 = t3041*t7442;
  t7448 = t7426 + t7447;
  t7341 = t3178*t34*t1459;
  t7344 = t403*t7258;
  t7347 = t1059*t7268;
  t7357 = t7341 + t7344 + t7347;
  t7366 = t3178*t34*t1367;
  t7370 = t560*t7258;
  t7376 = t1095*t7268;
  t7387 = t7366 + t7370 + t7376;
  t7389 = t1259*t3178*t34;
  t7390 = t805*t7258;
  t7393 = t1173*t7268;
  t7396 = t7389 + t7390 + t7393;
  t7578 = -1.*t3169*t3764;
  t7581 = -1.*t3697*t3296;
  t7591 = t3244*t3764;
  t7594 = t3745*t3296;
  t7672 = -1.*t3169*t3265;
  t7681 = -1.*t3030*t3296;
  t7688 = t3244*t3265;
  t7693 = t3318*t3296;
  t7876 = t1816*t4500;
  t7878 = t1304*t4353;
  t7879 = t4321*t1443;
  t7885 = t4392*t1466;
  t7889 = t4489*t1884;
  t7896 = t4503*t1918;
  t7900 = t7876 + t7878 + t7879 + t7885 + t7889 + t7896;
  t7907 = -1.*t4321*t645;
  t7908 = -1.*t1816*t4253;
  t7909 = -1.*t506*t4392;
  t7910 = -1.*t4353*t987;
  t7911 = -1.*t4217*t1884;
  t7912 = -1.*t4277*t1918;
  t7913 = t7907 + t7908 + t7909 + t7910 + t7911 + t7912;
  t7806 = t4417*t1486;
  t7814 = t4517*t2058;
  t7826 = -1.*t4417*t2973;
  t7833 = -1.*t4812*t2058;
  t8016 = t4954*t3244;
  t8025 = t5024*t3296;
  t8041 = -1.*t4954*t3169;
  t8045 = -1.*t4872*t3296;
  t8133 = -1.*t5578*t2058;
  t8141 = -1.*t2973*t5366;
  t8153 = t5273*t2058;
  t8156 = t1486*t5366;
  t8238 = -1.*t5620*t3296;
  t8242 = -1.*t3169*t5712;
  t8251 = t5676*t3296;
  t8252 = t3244*t5712;
  p_output1[0]=t2624*t2630 + t2648*t2662 + t2687*t2721 + t2730*t2755 + t2792*t2820 + t2843*t2924 - 0.80315*(t1666*t2755 + t1561*t2820 + t1623*t2924) - 0.038924*(t1912*t2755 + t1811*t2820 + t1844*t2924) - 1.*t2640*t2642*t34 + t192*t34*t35 + 0.148705*(t2755*t481 + t2820*t583 + t2924*t910) + var1[0] + t3041*var2[0] + t3228*var2[1] + t3200*var2[2] + t3509*var2[3] + ((-1.*t3150*t3169 - 1.*t3178*t3187)*var2[1] + t3228*var2[2])*var2[3] + t3333*var2[4] + (t3187*var2[0] - 1.*t3150*t5158*var2[1] + t3178*t5158*var2[2] + (t3463*t3488 + t3432*t3498 + t3372*(t3399*t3432 + t3383*t3459 + t3432*t5169 + t3459*t5178) + t3383*(-1.*t3372*t3459 - 1.*t3399*t3488 - 1.*t3488*t5169 - 1.*t3459*t5194))*var2[3])*var2[4] + t2595*var2[5] + (t34*t3988*var2[0] + (t3030*t3178 + t2630*t3150*t3988)*var2[1] + (t3030*t3150 - 1.*t2630*t3178*t3988)*var2[2] + (t34*t3498*t4028 + t3372*(t3399*t34*t4028 - 1.*t2630*t3459*t4028 + t4035 + t3383*t34*t4050 - 1.*t2630*t3432*t4050 + t4054) + t34*t3463*t4082 + t3383*(-1.*t3372*t34*t4050 + t2630*t3488*t4050 - 1.*t3399*t34*t4082 + t2630*t3459*t4082 + t4091 + t4094))*var2[3] + (t3300*t3318 + t3256*t3330 + t3244*(t3265*t4028 + t4035 + t3256*t4050 + t4054) + t3279*(-1.*t3318*t4050 - 1.*t3265*t4082 + t4091 + t4094))*var2[4])*var2[5] + t2290*var2[12] + (t34*t3669*var2[0] + (t2630*t3150*t3669 + t3178*t3697)*var2[1] + (-1.*t2630*t3178*t3669 + t3150*t3697)*var2[2] + (t34*t3498*t3802 + t3372*(t3769 + t3399*t34*t3802 - 1.*t2630*t3459*t3802 + t3811 + t3383*t34*t3816 - 1.*t2630*t3432*t3816) + t34*t3463*t3839 + t3383*(-1.*t3372*t34*t3816 + t2630*t3488*t3816 + t3826 - 1.*t3399*t34*t3839 + t2630*t3459*t3839 + t3857))*var2[3] + (t3300*t3745 + t3330*t3753 + t3244*(t3769 + t3265*t3802 + t3811 + t3256*t3816) + t3279*(-1.*t3318*t3816 + t3826 - 1.*t3265*t3839 + t3857))*var2[4] + (t1486*(t2494*t2521 + t2521*t3548 + t2539*t3574 + t2473*t3594) + t1974*(-1.*t2494*t2577 - 1.*t2577*t3548 - 1.*t2569*t3594 - 1.*t2539*t3626))*var2[5])*var2[12] + t2448*var2[13] + (t5612*var2[0] + (t3178*t5620 - 1.*t3150*t5638)*var2[1] + (t3150*t5620 + t3178*t5638)*var2[2] + (t3463*t5764 + t3498*t5771 + t3372*(t5704 + t5715 + t3399*t5771 + t3459*t5802 + t3383*t5814 + t3432*t5822) + t3383*(t5742 + t5744 - 1.*t3399*t5764 - 1.*t3372*t5814 - 1.*t3488*t5822 - 1.*t3459*t5851))*var2[3] + (t3300*t5676 + t3330*t5685 + t3244*(t5303 + t5367 + t3265*t5699 + t5704 + t5715 + t3256*t5721) + t3279*(t5436 + t5462 - 1.*t3318*t5721 - 1.*t3265*t5733 + t5742 + t5744))*var2[4] + (t2559*t5273 + t2584*t5289 + t1486*(t5303 + t5367 + t2494*t5498 + t2539*t5507 + t2521*t5514 + t2473*t5523) + t1974*(t5436 + t5462 - 1.*t2577*t5514 - 1.*t2569*t5523 - 1.*t2494*t5540 - 1.*t2539*t5555))*var2[5] + (0.15121*t5247 + 0.15121*t5263 + t2202*t5273 + t2275*t5289 + t1486*(t1946*t5301 + t5303 + t2096*t5322 + t2185*t5333 + t5367 + t1708*t5413) + t1974*(-1.*t2261*t5322 - 1.*t2216*t5413 - 1.*t1946*t5433 + t5436 - 1.*t2185*t5455 + t5462))*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t4866*var2[0] + (t3178*t4872 - 1.*t3150*t4885)*var2[1] + (t3150*t4872 + t3178*t4885)*var2[2] + (t3498*t5075 + t3372*(t4956 + t4977 + t3383*t5060 + t3432*t5068 + t3399*t5075 + t3459*t5090) + t3463*t5110 + t3383*(t4993 + t5027 - 1.*t3372*t5060 - 1.*t3488*t5068 - 1.*t3399*t5110 - 1.*t3459*t5119))*var2[3] + (t3330*t4975 + t3244*(t4418 + t4461 + t3256*t4937 + t4956 + t3265*t4968 + t4977) + t3300*t5024 + t3279*(t4481 + t4518 - 1.*t3318*t4937 + t4993 - 1.*t3265*t5003 + t5027))*var2[4] + (t2584*t4458 + t2559*t4517 + t1486*(t4418 + t4461 + t2473*t4733 + t2521*t4744 + t2494*t4753 + t2539*t4769) + t1974*(t4481 + t4518 - 1.*t2569*t4733 - 1.*t2577*t4744 - 1.*t2494*t4792 - 1.*t2539*t4796))*var2[5] + (0.15121*t4280 + 0.15121*t4296 + t2275*t4458 + t1486*(t1708*t4395 + t4418 + t2096*t4424 + t1946*t4452 + t4461 + t2185*t4470) + t2202*t4517 + t1974*(-1.*t2216*t4395 - 1.*t2261*t4424 + t4481 - 1.*t1946*t4505 + t4518 - 1.*t2185*t4539))*var2[12] + (-0.281209*t4217 + 0.038749*t4277 + 1.e-6*(t4299 - 7.000000000455e-6*t440) + t2367*t4433 + t2334*t4500 + t1443*t4616 + t1576*t4648 + 4.e-6*(-1.*t2367*t4447 - 1.*t2334*t4489 - 1.*t1304*t4616 - 1.*t1639*t4648) - 7.e-6*(t2367*t4441 + t2334*t4503 + t1466*t4616 + t1701*t4648))*var2[13])*var2[14] + t3041*var3[0] + t3228*var3[1] + t3200*var3[2] + t3509*var3[3] + t3333*var3[4] + t2595*var3[5] + t2290*var3[12] + t2448*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=-1.*t2624*t3150*t34 + t192*t6044 + t2640*t6063 + t2648*t6074 + t2687*t6090 + t2730*t6193 + t2792*t6214 + t2843*t6221 - 0.80315*(t1666*t6193 + t1561*t6214 + t1623*t6221) - 0.038924*(t1912*t6193 + t1811*t6214 + t1844*t6221) + 0.148705*(t481*t6193 + t583*t6214 + t6221*t910) + var1[1] + t3372*var2[0] + t6130*var2[1] + t6110*var2[2] + t6268*var2[3] + ((-1.*t3150*t3244 - 1.*t3178*t3488)*var2[1] + t6130*var2[2])*var2[3] + t6164*var2[4] + (t3488*var2[0] - 1.*t3150*t5194*var2[1] + t3178*t5194*var2[2] + (t3383*(t3187*t3399 + t3041*t3459 + t3459*t5158 + t3187*t5169) + t3041*(-1.*t3399*t3432 - 1.*t3383*t3459 - 1.*t3432*t5169 - 1.*t3459*t5178) + t3187*t6255 + t3432*t6262)*var2[3])*var2[4] + t6035*var2[5] + (t34*t4082*var2[0] + (t3178*t3318 + t2630*t3150*t4082)*var2[1] + (t3150*t3318 - 1.*t2630*t3178*t4082)*var2[2] + (t34*t3988*t6255 + t34*t4028*t6262 + t3041*(-1.*t3399*t34*t4028 + t2630*t3459*t4028 - 1.*t3383*t34*t4050 + t2630*t3432*t4050 + t6471 + t6475) + t3383*(t3399*t34*t3988 - 1.*t2630*t3459*t3988 - 1.*t2630*t3187*t4050 + t3041*t34*t4050 + t6483 + t6488))*var2[3] + (t3030*t6152 + t3256*t6161 + t3169*(-1.*t3265*t4028 - 1.*t3256*t4050 + t6471 + t6475) + t3279*(t3265*t3988 + t3030*t4050 + t6483 + t6488))*var2[4])*var2[5] + t5942*var2[12] + (t34*t3839*var2[0] + (t3178*t3745 + t2630*t3150*t3839)*var2[1] + (t3150*t3745 - 1.*t2630*t3178*t3839)*var2[2] + (t34*t3669*t6255 + t34*t3802*t6262 + t3041*(-1.*t3399*t34*t3802 + t2630*t3459*t3802 - 1.*t3383*t34*t3816 + t2630*t3432*t3816 + t6369 + t6383) + t3383*(t3399*t34*t3669 - 1.*t2630*t3459*t3669 - 1.*t2630*t3187*t3816 + t3041*t34*t3816 + t6392 + t6397))*var2[3] + (t3697*t6152 + t3753*t6161 + t3169*(-1.*t3265*t3802 - 1.*t3256*t3816 + t6369 + t6383) + t3279*(t3265*t3669 + t3030*t3816 + t6392 + t6397))*var2[4] + (t2973*(-1.*t2494*t2521 - 1.*t2521*t3548 - 1.*t2539*t3574 - 1.*t2473*t3594) + t1974*(t2494*t3007 + t3007*t3548 + t3022*t3594 + t2539*t3659))*var2[5])*var2[12] + t6019*var2[13] + (t5764*var2[0] + (t3178*t5676 - 1.*t3150*t5851)*var2[1] + (t3150*t5676 + t3178*t5851)*var2[2] + (t5612*t6255 + t5771*t6262 + t3041*(-1.*t3399*t5771 - 1.*t3459*t5802 - 1.*t3383*t5814 - 1.*t3432*t5822 + t7027 + t7033) + t3383*(t3399*t5612 + t3459*t5638 + t3041*t5814 + t3187*t5822 + t7044 + t7045))*var2[3] + (t5620*t6152 + t5685*t6161 + t3169*(-1.*t3265*t5699 - 1.*t3256*t5721 + t6878 + t6887 + t7027 + t7033) + t3279*(t3265*t5602 + t3030*t5721 + t6899 + t6903 + t7044 + t7045))*var2[4] + (t5578*t6028 + t5289*t6032 + t2973*(-1.*t2494*t5498 - 1.*t2539*t5507 - 1.*t2521*t5514 - 1.*t2473*t5523 + t6878 + t6887) + t1974*(t3007*t5514 + t3022*t5523 + t2539*t5588 + t2494*t5594 + t6899 + t6903))*var2[5] + (0.15121*t5433 + 0.15121*t5455 + t5578*t5910 + t5289*t5928 + t2973*(-1.*t1946*t5301 - 1.*t2096*t5322 - 1.*t2185*t5333 - 1.*t1708*t5413 + t6878 + t6887) + t1974*(t2185*t5247 + t1946*t5263 + t1025*t5322 + t1192*t5413 + t6899 + t6903))*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t5110*var2[0] + (t3178*t5024 - 1.*t3150*t5119)*var2[1] + (t3150*t5024 + t3178*t5119)*var2[2] + (t4866*t6255 + t5075*t6262 + t3041*(-1.*t3383*t5060 - 1.*t3432*t5068 - 1.*t3399*t5075 - 1.*t3459*t5090 + t6765 + t6767) + t3383*(t3399*t4866 + t3459*t4885 + t3041*t5060 + t3187*t5068 + t6785 + t6789))*var2[3] + (t4872*t6152 + t4975*t6161 + t3169*(-1.*t3256*t4937 - 1.*t3265*t4968 + t6610 + t6616 + t6765 + t6767) + t3279*(t3265*t4849 + t3030*t4937 + t6632 + t6644 + t6785 + t6789))*var2[4] + (t4812*t6028 + t4458*t6032 + t2973*(-1.*t2473*t4733 - 1.*t2521*t4744 - 1.*t2494*t4753 - 1.*t2539*t4769 + t6610 + t6616) + t1974*(t3022*t4733 + t3007*t4744 + t2539*t4823 + t2494*t4837 + t6632 + t6644))*var2[5] + (0.15121*t4505 + 0.15121*t4539 + t4812*t5910 + t4458*t5928 + t2973*(-1.*t1708*t4395 - 1.*t2096*t4424 - 1.*t1946*t4452 - 1.*t2185*t4470 + t6610 + t6616) + t1974*(t1946*t4280 + t2185*t4296 + t1192*t4395 + t1025*t4424 + t6632 + t6644))*var2[12] + (1.e-6*(t4209 + 4.00000000026e-6*t440) - 0.281209*t4489 + 0.038749*t4503 + t4433*t5980 + t4253*t5993 + t645*t6676 + t1576*t6693 - 7.e-6*(t4441*t5980 + t4277*t5993 + t506*t6676 + t1701*t6693) + 4.e-6*(-1.*t4447*t5980 - 1.*t4217*t5993 - 1.*t1639*t6693 - 1.*t6676*t987))*var2[13])*var2[14] + t3372*var3[0] + t6130*var3[1] + t6110*var3[2] + t6268*var3[3] + t6164*var3[4] + t6035*var3[5] + t5942*var3[12] + t6019*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=t2624*t3178*t34 + t192*t7236 + t2640*t7244 + t2648*t7258 + t2687*t7268 + t2730*t7357 + t2792*t7387 + t2843*t7396 - 0.80315*(t1666*t7357 + t1561*t7387 + t1623*t7396) - 0.038924*(t1912*t7357 + t1811*t7387 + t1844*t7396) + 0.148705*(t481*t7357 + t583*t7387 + t7396*t910) + var1[2] + t3383*var2[0] + t7298*var2[1] + t7280*var2[2] + t7448*var2[3] + ((-1.*t3150*t3279 - 1.*t3178*t3432)*var2[1] + t7298*var2[2])*var2[3] + t7331*var2[4] + (t3432*var2[0] - 1.*t3150*t5178*var2[1] + t3178*t5178*var2[2] + (t3372*(-1.*t3187*t3399 - 1.*t3041*t3459 - 1.*t3459*t5158 - 1.*t3187*t5169) + t3041*(t3372*t3459 + t3399*t3488 + t3488*t5169 + t3459*t5194) + t3488*t7425 + t3187*t7442)*var2[3])*var2[4] + t7228*var2[5] + (t34*t4028*var2[0] + (t3178*t3256 + t2630*t3150*t4028)*var2[1] + (t3150*t3256 - 1.*t2630*t3178*t4028)*var2[2] + (t34*t4082*t7425 + t34*t3988*t7442 + t3372*(-1.*t3399*t34*t3988 + t2630*t3459*t3988 + t2630*t3187*t4050 - 1.*t3041*t34*t4050 + t7672 + t7681) + t3041*(t3372*t34*t4050 - 1.*t2630*t3488*t4050 + t3399*t34*t4082 - 1.*t2630*t3459*t4082 + t7688 + t7693))*var2[3] + (t3318*t7319 + t3030*t7329 + t3244*(-1.*t3265*t3988 - 1.*t3030*t4050 + t7672 + t7681) + t3169*(t3318*t4050 + t3265*t4082 + t7688 + t7693))*var2[4])*var2[5] + t7142*var2[12] + (t34*t3802*var2[0] + (t3178*t3753 + t2630*t3150*t3802)*var2[1] + (t3150*t3753 - 1.*t2630*t3178*t3802)*var2[2] + (t34*t3839*t7425 + t34*t3669*t7442 + t3372*(-1.*t3399*t34*t3669 + t2630*t3459*t3669 + t2630*t3187*t3816 - 1.*t3041*t34*t3816 + t7578 + t7581) + t3041*(t3372*t34*t3816 - 1.*t2630*t3488*t3816 + t3399*t34*t3839 - 1.*t2630*t3459*t3839 + t7591 + t7594))*var2[3] + (t3745*t7319 + t3697*t7329 + t3244*(-1.*t3265*t3669 - 1.*t3030*t3816 + t7578 + t7581) + t3169*(t3318*t3816 + t3265*t3839 + t7591 + t7594))*var2[4] + (t2973*(t2494*t2577 + t2577*t3548 + t2569*t3594 + t2539*t3626) + t1486*(-1.*t2494*t3007 - 1.*t3007*t3548 - 1.*t3022*t3594 - 1.*t2539*t3659))*var2[5])*var2[12] + t7203*var2[13] + (t5771*var2[0] + (t3178*t5685 - 1.*t3150*t5802)*var2[1] + (t3150*t5685 + t3178*t5802)*var2[2] + (t5764*t7425 + t5612*t7442 + t3372*(-1.*t3399*t5612 - 1.*t3459*t5638 - 1.*t3041*t5814 - 1.*t3187*t5822 + t8238 + t8242) + t3041*(t3399*t5764 + t3372*t5814 + t3488*t5822 + t3459*t5851 + t8251 + t8252))*var2[3] + (t5676*t7319 + t5620*t7329 + t3244*(-1.*t3265*t5602 - 1.*t3030*t5721 + t8133 + t8141 + t8238 + t8242) + t3169*(t3318*t5721 + t3265*t5733 + t8153 + t8156 + t8251 + t8252))*var2[4] + (t5273*t7216 + t5578*t7225 + t1486*(-1.*t3007*t5514 - 1.*t3022*t5523 - 1.*t2539*t5588 - 1.*t2494*t5594 + t8133 + t8141) + t2973*(t2577*t5514 + t2569*t5523 + t2494*t5540 + t2539*t5555 + t8153 + t8156))*var2[5] + (0.15121*t5301 + 0.15121*t5333 + t5273*t7130 + t5578*t7140 + t1486*(-1.*t2185*t5247 - 1.*t1946*t5263 - 1.*t1025*t5322 - 1.*t1192*t5413 + t8133 + t8141) + t2973*(t2261*t5322 + t2216*t5413 + t1946*t5433 + t2185*t5455 + t8153 + t8156))*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t5075*var2[0] + (t3178*t4975 - 1.*t3150*t5090)*var2[1] + (t3150*t4975 + t3178*t5090)*var2[2] + (t5110*t7425 + t4866*t7442 + t3041*(t3372*t5060 + t3488*t5068 + t3399*t5110 + t3459*t5119 + t8016 + t8025) + t3372*(-1.*t3399*t4866 - 1.*t3459*t4885 - 1.*t3041*t5060 - 1.*t3187*t5068 + t8041 + t8045))*var2[3] + (t5024*t7319 + t4872*t7329 + t3169*(t3318*t4937 + t3265*t5003 + t7806 + t7814 + t8016 + t8025) + t3244*(-1.*t3265*t4849 - 1.*t3030*t4937 + t7826 + t7833 + t8041 + t8045))*var2[4] + (t4517*t7216 + t4812*t7225 + t2973*(t2569*t4733 + t2577*t4744 + t2494*t4792 + t2539*t4796 + t7806 + t7814) + t1486*(-1.*t3022*t4733 - 1.*t3007*t4744 - 1.*t2539*t4823 - 1.*t2494*t4837 + t7826 + t7833))*var2[5] + (0.15121*t4452 + 0.15121*t4470 + t4517*t7130 + t4812*t7140 + t2973*(t2216*t4395 + t2261*t4424 + t1946*t4505 + t2185*t4539 + t7806 + t7814) + t1486*(-1.*t1946*t4280 - 1.*t2185*t4296 - 1.*t1192*t4395 - 1.*t1025*t4424 + t7826 + t7833))*var2[12] + (1.e-6*(7.e-6*t4300 + 4.e-6*t4308 + 6.5e-11*t440) + 0.038749*t4441 - 0.281209*t4447 + t4500*t7172 + t4253*t7183 + t645*t7900 + t1443*t7913 - 7.e-6*(t4503*t7172 + t4277*t7183 + t506*t7900 + t1466*t7913) + 4.e-6*(-1.*t4489*t7172 - 1.*t4217*t7183 - 1.*t1304*t7913 - 1.*t7900*t987))*var2[13])*var2[14] + t3383*var3[0] + t7298*var3[1] + t7280*var3[2] + t7448*var3[3] + t7331*var3[4] + t7228*var3[5] + t7142*var3[12] + t7203*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void ddh_RlFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
