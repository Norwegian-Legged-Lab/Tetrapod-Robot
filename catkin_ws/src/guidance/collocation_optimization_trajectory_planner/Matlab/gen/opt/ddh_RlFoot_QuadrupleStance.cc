/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:30 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t569;
  double t596;
  double t600;
  double t417;
  double t479;
  double t489;
  double t671;
  double t690;
  double t507;
  double t628;
  double t629;
  double t700;
  double t739;
  double t754;
  double t500;
  double t813;
  double t866;
  double t883;
  double t913;
  double t915;
  double t972;
  double t986;
  double t988;
  double t1033;
  double t1053;
  double t1062;
  double t1083;
  double t935;
  double t941;
  double t1173;
  double t1161;
  double t1168;
  double t1176;
  double t1363;
  double t1147;
  double t1152;
  double t1449;
  double t1353;
  double t542;
  double t1386;
  double t1388;
  double t1396;
  double t1397;
  double t1337;
  double t1250;
  double t1451;
  double t1498;
  double t1515;
  double t1523;
  double t1312;
  double t1324;
  double t1393;
  double t1412;
  double t1417;
  double t1236;
  double t1241;
  double t1426;
  double t1434;
  double t1443;
  double t1453;
  double t1467;
  double t1360;
  double t1519;
  double t1534;
  double t1537;
  double t962;
  double t1578;
  double t1621;
  double t1645;
  double t1646;
  double t1649;
  double t1668;
  double t1674;
  double t1675;
  double t1677;
  double t1696;
  double t1702;
  double t1712;
  double t1731;
  double t1738;
  double t1748;
  double t1765;
  double t1817;
  double t1848;
  double t1849;
  double t1857;
  double t1860;
  double t1884;
  double t1911;
  double t1914;
  double t1915;
  double t1930;
  double t1934;
  double t1950;
  double t1977;
  double t1988;
  double t1991;
  double t1997;
  double t774;
  double t806;
  double t963;
  double t547;
  double t2056;
  double t1612;
  double t2013;
  double t2017;
  double t2020;
  double t2032;
  double t1253;
  double t1262;
  double t1330;
  double t1341;
  double t1367;
  double t1381;
  double t1557;
  double t1567;
  double t1579;
  double t1592;
  double t1613;
  double t1615;
  double t1710;
  double t1893;
  double t2005;
  double t2008;
  double t1264;
  double t1344;
  double t1384;
  double t1385;
  double t2034;
  double t2052;
  double t2073;
  double t2080;
  double t2091;
  double t2096;
  double t2097;
  double t2118;
  double t2130;
  double t2159;
  double t2180;
  double t2181;
  double t2185;
  double t2191;
  double t2194;
  double t2208;
  double t2211;
  double t2233;
  double t2247;
  double t2255;
  double t773;
  double t932;
  double t1113;
  double t1114;
  double t1136;
  double t1155;
  double t1169;
  double t1208;
  double t1223;
  double t1230;
  double t1425;
  double t1474;
  double t1538;
  double t1552;
  double t2011;
  double t2163;
  double t2164;
  double t2168;
  double t2172;
  double t2175;
  double t2261;
  double t2265;
  double t2268;
  double t2277;
  double t2281;
  double t2286;
  double t2293;
  double t2295;
  double t2306;
  double t2316;
  double t2332;
  double t2336;
  double t2340;
  double t2343;
  double t2366;
  double t2374;
  double t2385;
  double t2428;
  double t2467;
  double t2478;
  double t2480;
  double t2489;
  double t2491;
  double t2504;
  double t2507;
  double t2398;
  double t2403;
  double t2405;
  double t2408;
  double t2409;
  double t2482;
  double t2510;
  double t2516;
  double t2517;
  double t2526;
  double t2528;
  double t2529;
  double t2530;
  double t2539;
  double t2546;
  double t2549;
  double t271;
  double t173;
  double t209;
  double t222;
  double t287;
  double t269;
  double t2604;
  double t2609;
  double t2627;
  double t2629;
  double t2674;
  double t2677;
  double t2692;
  double t2579;
  double t2601;
  double t2602;
  double t2641;
  double t2645;
  double t2671;
  double t2672;
  double t2697;
  double t2699;
  double t2700;
  double t2701;
  double t2704;
  double t2707;
  double t2710;
  double t2715;
  double t2716;
  double t2720;
  double t2722;
  double t2726;
  double t2730;
  double t2735;
  double t119;
  double t146;
  double t2760;
  double t2748;
  double t2775;
  double t2776;
  double t2777;
  double t2785;
  double t2786;
  double t2787;
  double t2934;
  double t2955;
  double t2992;
  double t2993;
  double t2994;
  double t2998;
  double t3001;
  double t3005;
  double t3006;
  double t3026;
  double t3028;
  double t3041;
  double t3050;
  double t3059;
  double t3070;
  double t3079;
  double t2797;
  double t2815;
  double t2816;
  double t2822;
  double t2849;
  double t2864;
  double t2881;
  double t2891;
  double t2899;
  double t2904;
  double t2910;
  double t2913;
  double t3200;
  double t3203;
  double t3217;
  double t3226;
  double t3228;
  double t3234;
  double t3238;
  double t3239;
  double t3244;
  double t3246;
  double t3252;
  double t3267;
  double t3283;
  double t3285;
  double t3335;
  double t3341;
  double t3342;
  double t3323;
  double t3325;
  double t3327;
  double t3290;
  double t3291;
  double t3300;
  double t3346;
  double t3367;
  double t3368;
  double t3310;
  double t3317;
  double t3321;
  double t3330;
  double t3379;
  double t3385;
  double t3398;
  double t3408;
  double t3410;
  double t3418;
  double t3430;
  double t3433;
  double t3448;
  double t3500;
  double t3516;
  double t3573;
  double t3580;
  double t3590;
  double t3564;
  double t3567;
  double t3568;
  double t3595;
  double t3596;
  double t3600;
  double t3614;
  double t3616;
  double t3618;
  double t3610;
  double t3611;
  double t3612;
  double t3613;
  double t3622;
  double t3626;
  double t3640;
  double t3645;
  double t3646;
  double t3647;
  double t3654;
  double t3657;
  double t3660;
  double t3664;
  double t3667;
  double t3698;
  double t3705;
  double t3725;
  double t3749;
  double t3753;
  double t3828;
  double t3954;
  double t3958;
  double t3960;
  double t3961;
  double t3963;
  double t3965;
  double t3977;
  double t3988;
  double t3878;
  double t3879;
  double t3881;
  double t3787;
  double t3798;
  double t3808;
  double t4023;
  double t4037;
  double t4047;
  double t4051;
  double t4053;
  double t4017;
  double t4019;
  double t4100;
  double t4101;
  double t4106;
  double t4075;
  double t4099;
  double t4076;
  double t4083;
  double t4086;
  double t4130;
  double t4161;
  double t4137;
  double t4140;
  double t4149;
  double t4322;
  double t4323;
  double t4376;
  double t4383;
  double t4394;
  double t4373;
  double t4416;
  double t4363;
  double t4365;
  double t4465;
  double t4489;
  double t4438;
  double t4452;
  double t4720;
  double t4665;
  double t4689;
  double t4692;
  double t4696;
  double t4698;
  double t4728;
  double t4730;
  double t4734;
  double t4735;
  double t4736;
  double t4738;
  double t4786;
  double t4871;
  double t4774;
  double t4775;
  double t4782;
  double t4792;
  double t4803;
  double t4805;
  double t4810;
  double t4811;
  double t4822;
  double t4829;
  double t4841;
  double t4861;
  double t4863;
  double t4865;
  double t4872;
  double t4873;
  double t4876;
  double t4878;
  double t4879;
  double t4884;
  double t4892;
  double t4895;
  double t4896;
  double t4897;
  double t4907;
  double t4915;
  double t4918;
  double t4919;
  double t4921;
  double t4972;
  double t4975;
  double t4977;
  double t4980;
  double t4997;
  double t5001;
  double t5005;
  double t5009;
  double t5019;
  double t5020;
  double t4842;
  double t4885;
  double t4926;
  double t4927;
  double t4938;
  double t4940;
  double t4943;
  double t4949;
  double t4954;
  double t4956;
  double t4964;
  double t4966;
  double t5129;
  double t5130;
  double t5139;
  double t5184;
  double t5190;
  double t5201;
  double t5205;
  double t5228;
  double t5234;
  double t5241;
  double t5248;
  double t5036;
  double t5039;
  double t5044;
  double t5046;
  double t5363;
  double t5372;
  double t5381;
  double t5402;
  double t5408;
  double t5411;
  double t5415;
  double t5423;
  double t5427;
  double t5430;
  double t5436;
  double t5438;
  double t5441;
  double t5448;
  double t4953;
  double t5047;
  double t5049;
  double t5050;
  double t5052;
  double t5054;
  double t4983;
  double t5008;
  double t5030;
  double t5031;
  double t5122;
  double t5250;
  double t5535;
  double t5541;
  double t5545;
  double t5554;
  double t5558;
  double t5563;
  double t5168;
  double t5192;
  double t5216;
  double t5218;
  double t5255;
  double t5264;
  double t5265;
  double t5268;
  double t4718;
  double t4733;
  double t4742;
  double t4743;
  double t4753;
  double t4762;
  double t4763;
  double t4766;
  double t5765;
  double t5783;
  double t5786;
  double t5742;
  double t5744;
  double t5758;
  double t5724;
  double t5725;
  double t5727;
  double t5737;
  double t5759;
  double t5789;
  double t5791;
  double t5801;
  double t5805;
  double t5807;
  double t5814;
  double t5820;
  double t5838;
  double t5582;
  double t5583;
  double t5587;
  double t5573;
  double t5574;
  double t5576;
  double t5870;
  double t5871;
  double t5877;
  double t5891;
  double t5896;
  double t5899;
  double t5639;
  double t5660;
  double t5662;
  double t5606;
  double t5607;
  double t5626;
  double t6010;
  double t6011;
  double t6015;
  double t5916;
  double t5921;
  double t5923;
  double t5900;
  double t5932;
  double t5903;
  double t5904;
  double t5905;
  double t5969;
  double t6016;
  double t6054;
  double t6056;
  double t6057;
  double t6059;
  double t6071;
  double t6077;
  double t5973;
  double t5988;
  double t5989;
  double t6170;
  double t6171;
  double t6172;
  double t6081;
  double t6088;
  double t6093;
  double t6232;
  double t6233;
  double t6235;
  double t6245;
  double t6250;
  double t6251;
  double t6373;
  double t6388;
  double t6391;
  double t6393;
  double t6363;
  double t6364;
  double t6374;
  double t6399;
  double t6400;
  double t6401;
  double t6413;
  double t6349;
  double t6352;
  double t6329;
  double t6334;
  double t6542;
  double t6383;
  double t6392;
  double t6394;
  double t6396;
  double t6461;
  double t6464;
  double t6465;
  double t6497;
  double t6506;
  double t6507;
  double t6508;
  double t6512;
  double t6514;
  double t6545;
  double t6551;
  double t6564;
  double t6567;
  double t6568;
  double t6569;
  double t6571;
  double t6578;
  double t6581;
  double t6585;
  double t6593;
  double t6594;
  double t6595;
  double t6596;
  double t6598;
  double t6599;
  double t6601;
  double t6603;
  double t6451;
  double t6583;
  double t6520;
  double t6530;
  double t6533;
  double t6534;
  double t6432;
  double t6435;
  double t6443;
  double t6447;
  double t6643;
  double t6677;
  double t6656;
  double t6665;
  double t6669;
  double t6674;
  double t6623;
  double t6626;
  double t6635;
  double t6636;
  double t6801;
  double t6802;
  double t6803;
  double t6807;
  double t6813;
  double t6819;
  double t6345;
  double t6347;
  double t6354;
  double t6357;
  double t6359;
  double t6367;
  double t6379;
  double t6380;
  double t6960;
  double t6974;
  double t6979;
  double t6935;
  double t6939;
  double t6940;
  double t6903;
  double t6905;
  double t6907;
  double t6924;
  double t6956;
  double t6980;
  double t6983;
  double t6997;
  double t6998;
  double t6999;
  double t7002;
  double t7003;
  double t7012;
  double t6866;
  double t6874;
  double t6876;
  double t6878;
  double t6879;
  double t6880;
  double t6728;
  double t6743;
  double t6747;
  double t6765;
  double t6767;
  double t6770;
  double t7049;
  double t7050;
  double t7051;
  double t7044;
  double t7045;
  double t7046;
  double t7064;
  double t7072;
  double t7077;
  double t7091;
  double t7092;
  double t7093;
  double t7104;
  double t7115;
  double t7117;
  double t7053;
  double t7054;
  double t7055;
  double t7060;
  double t7081;
  double t7167;
  double t7168;
  double t7172;
  double t7131;
  double t7138;
  double t7152;
  double t7158;
  double t7159;
  double t7209;
  double t7213;
  double t7215;
  double t7220;
  double t7222;
  double t7225;
  double t7269;
  double t7273;
  double t7276;
  double t7277;
  double t7278;
  double t7279;
  double t7282;
  double t7287;
  double t7288;
  double t7291;
  double t7307;
  double t7322;
  double t7327;
  double t7363;
  double t7373;
  double t7376;
  double t7377;
  double t7382;
  double t7385;
  double t7386;
  double t7387;
  double t7341;
  double t7343;
  double t7345;
  double t7353;
  double t7355;
  double t7360;
  double t7362;
  double t7380;
  double t7389;
  double t7390;
  double t7391;
  double t7392;
  double t7399;
  double t7404;
  double t7408;
  double t7412;
  double t7426;
  double t7428;
  double t7459;
  double t7461;
  double t7465;
  double t7466;
  double t7475;
  double t7476;
  double t7480;
  double t7482;
  double t7486;
  double t2740;
  double t340;
  double t2759;
  double t2772;
  double t7498;
  double t7504;
  double t7505;
  double t7507;
  double t7513;
  double t7516;
  double t2784;
  double t7613;
  double t7614;
  double t7615;
  double t7623;
  double t7631;
  double t7635;
  double t7657;
  double t7664;
  double t7668;
  double t7677;
  double t7684;
  double t7687;
  double t7691;
  double t7698;
  double t7700;
  double t2795;
  double t7577;
  double t7578;
  double t7579;
  double t7581;
  double t7590;
  double t7602;
  double t2843;
  double t2894;
  double t7766;
  double t7768;
  double t7776;
  double t7777;
  double t7778;
  double t7779;
  double t7785;
  double t7787;
  double t7792;
  double t7715;
  double t7717;
  double t7719;
  double t7723;
  double t7730;
  double t7733;
  double t7734;
  double t7741;
  double t7745;
  double t7746;
  double t7747;
  double t7750;
  double t7989;
  double t7998;
  double t8039;
  double t8076;
  double t8332;
  double t8336;
  double t8365;
  double t8371;
  double t6293;
  double t6296;
  double t6297;
  double t6268;
  double t6269;
  double t6270;
  double t8730;
  double t8731;
  double t8732;
  double t8733;
  double t8734;
  double t8738;
  double t8739;
  double t8742;
  double t8743;
  double t8744;
  double t8745;
  double t8746;
  double t8748;
  double t8756;
  double t8630;
  double t8643;
  double t8683;
  double t8695;
  double t6186;
  double t6187;
  double t6191;
  double t8931;
  double t8934;
  double t6098;
  double t6106;
  double t6119;
  double t5740;
  double t5793;
  double t5794;
  double t8962;
  double t8971;
  double t9019;
  double t9022;
  double t9031;
  double t9035;
  double t7236;
  double t7237;
  double t7239;
  double t6928;
  double t6988;
  double t6989;
  double t9112;
  double t9113;
  double t7182;
  double t7184;
  double t7190;
  double t9119;
  double t9125;
  double t9172;
  double t9174;
  double t9175;
  double t9176;
  double t9177;
  double t9178;
  double t9179;
  double t9180;
  double t9182;
  double t9183;
  double t9185;
  double t9186;
  double t9188;
  double t9208;
  double t9209;
  double t9210;
  double t9212;
  double t9215;
  double t9216;
  double t9217;
  double t9219;
  double t9192;
  double t9193;
  double t9195;
  double t9198;
  double t9206;
  double t9207;
  double t9214;
  double t9220;
  double t9222;
  double t9223;
  double t9224;
  double t9226;
  double t9230;
  double t9237;
  double t9239;
  double t9240;
  double t9241;
  double t9247;
  double t9256;
  double t9271;
  double t9275;
  double t9291;
  double t9297;
  double t9298;
  double t9300;
  double t9302;
  double t9326;
  double t9327;
  double t9328;
  double t9330;
  double t9331;
  double t9332;
  double t9391;
  double t9402;
  double t9403;
  double t9406;
  double t9407;
  double t9408;
  double t9411;
  double t9412;
  double t9413;
  double t9414;
  double t9415;
  double t9416;
  double t9417;
  double t9418;
  double t9419;
  double t9336;
  double t9350;
  double t9351;
  double t9369;
  double t9370;
  double t9380;
  double t9449;
  double t9450;
  double t9452;
  double t9453;
  double t9454;
  double t9455;
  double t9456;
  double t9457;
  double t9459;
  double t9422;
  double t9423;
  double t9424;
  double t9425;
  double t9427;
  double t9428;
  double t9429;
  double t9432;
  double t9434;
  double t9435;
  double t9437;
  double t9438;
  double t9507;
  double t9509;
  double t9513;
  double t9515;
  double t9553;
  double t9558;
  double t9565;
  double t9567;
  double t9742;
  double t9743;
  double t9744;
  double t9745;
  double t9746;
  double t9747;
  double t9748;
  double t9752;
  double t9753;
  double t9754;
  double t9755;
  double t9756;
  double t9757;
  double t9758;
  double t9691;
  double t9699;
  double t9711;
  double t9728;
  double t9803;
  double t9805;
  double t9810;
  double t9813;
  double t9841;
  double t9844;
  double t9852;
  double t9855;
  double t9892;
  double t9893;
  double t9898;
  double t9899;
  t569 = Cos(var1[14]);
  t596 = -1.*t569;
  t600 = 1. + t596;
  t417 = Cos(var1[13]);
  t479 = -1.*t417;
  t489 = 1. + t479;
  t671 = Sin(var1[14]);
  t690 = 4.e-6*t671;
  t507 = Sin(var1[13]);
  t628 = 1.000000000016*t600;
  t629 = -7.e-6*t600;
  t700 = t629 + t690;
  t739 = -7.e-6*t700;
  t754 = -1. + t628 + t739;
  t500 = -7.e-6*t489;
  t813 = -6.5e-11*t600;
  t866 = 1. + t813;
  t883 = -7.e-6*t866;
  t913 = 7.e-6*t600;
  t915 = t883 + t913 + t690;
  t972 = -2.8e-11*t600;
  t986 = -1. + t569;
  t988 = 4.e-6*t986;
  t1033 = -7.e-6*t671;
  t1053 = t988 + t1033;
  t1062 = -7.e-6*t1053;
  t1083 = t972 + t1062 + t671;
  t935 = -1. + t417;
  t941 = 4.e-6*t935;
  t1173 = 2.8e-11*t489;
  t1161 = 4.e-6*t507;
  t1168 = t500 + t1161;
  t1176 = t1173 + t507;
  t1363 = 2.8e-11*t600;
  t1147 = -1.000000000016*t489;
  t1152 = 1. + t1147;
  t1449 = -1.*t671;
  t1353 = -1.*t507;
  t542 = -4.e-6*t507;
  t1386 = 4.e-6*t600;
  t1388 = t1386 + t1033;
  t1396 = -4.e-6*t671;
  t1397 = t629 + t1396;
  t1337 = 7.e-6*t671;
  t1250 = -1.000000000049*t600;
  t1451 = t1363 + t1449;
  t1498 = -1.000000000016*t600;
  t1515 = 1. + t1498;
  t1523 = t972 + t1449;
  t1312 = -7.e-6*t507;
  t1324 = t941 + t1312;
  t1393 = 4.e-6*t1388;
  t1412 = -7.e-6*t1397;
  t1417 = 1. + t813 + t1393 + t1412;
  t1236 = -1.000000000049*t489;
  t1241 = 1. + t1236;
  t1426 = 1.000000000049*t600;
  t1434 = -1. + t1426;
  t1443 = 4.e-6*t1434;
  t1453 = -7.e-6*t1451;
  t1467 = t1443 + t988 + t1453 + t1033;
  t1360 = t1173 + t1353;
  t1519 = -7.e-6*t1515;
  t1534 = 4.e-6*t1523;
  t1537 = t1519 + t629 + t1534 + t690;
  t962 = 7.e-6*t507;
  t1578 = -2.8e-11*t489;
  t1621 = -2.598649999999999e-7*var1[14];
  t1645 = 0.148705*t866;
  t1646 = -2.3905277499999995e-16*t600;
  t1649 = -0.038922999986*t1388;
  t1668 = -0.80315*t1397;
  t1674 = t913 + t690;
  t1675 = -0.503149000008*t1674;
  t1677 = t988 + t1337;
  t1696 = -0.038924*t1677;
  t1702 = t1621 + t1645 + t1646 + t1649 + t1668 + t1675 + t1696;
  t1712 = 1.0394599999999997e-12*var1[14];
  t1731 = 1. + t1250;
  t1738 = -0.038924*t1731;
  t1748 = -0.03892299998790722*t600;
  t1765 = -0.80315*t1451;
  t1817 = 0.148705*t1053;
  t1848 = t1386 + t1337;
  t1849 = -3.6777349999999994e-6*t1848;
  t1857 = t972 + t671;
  t1860 = -0.503149000008*t1857;
  t1884 = t1712 + t1738 + t1748 + t1765 + t1817 + t1849 + t1860;
  t1911 = 1.8190549999999993e-12*var1[14];
  t1914 = -0.80315*t1515;
  t1915 = -0.5031490000160505*t600;
  t1930 = -0.038922999986*t1523;
  t1934 = t913 + t1396;
  t1950 = -3.6777349999999994e-6*t1934;
  t1977 = 0.148705*t700;
  t1988 = t1363 + t671;
  t1991 = -0.038924*t1988;
  t1997 = t1911 + t1914 + t1915 + t1930 + t1950 + t1977 + t1991;
  t774 = -6.5e-11*t489;
  t806 = 1. + t774;
  t963 = t941 + t962;
  t547 = t500 + t542;
  t2056 = 4.e-6*t489;
  t1612 = 7.e-6*t489;
  t2013 = t1324*t1417;
  t2017 = t1241*t1467;
  t2020 = t1360*t1537;
  t2032 = t2013 + t2017 + t2020;
  t1253 = 4.e-6*t1053;
  t1262 = 1. + t1250 + t1253;
  t1330 = 4.e-6*t866;
  t1341 = t1330 + t988 + t1337;
  t1367 = 4.e-6*t700;
  t1381 = t1363 + t1367 + t671;
  t1557 = 1.0248489999999998e-12*var1[13];
  t1567 = -0.28120900000849935*t489;
  t1579 = t1578 + t1353;
  t1592 = -0.038748999993*t1579;
  t1613 = t1612 + t542;
  t1615 = -2.123459e-6*t1613;
  t1710 = t1168*t1702;
  t1893 = t1176*t1884;
  t2005 = t1152*t1997;
  t2008 = t1557 + t1567 + t1592 + t1615 + t1710 + t1893 + t2005;
  t1264 = t1241*t1262;
  t1344 = t1324*t1341;
  t1384 = t1360*t1381;
  t1385 = t1264 + t1344 + t1384;
  t2034 = 5.856279999999999e-13*var1[13];
  t2052 = -0.0387489999948987*t489;
  t2073 = t2056 + t962;
  t2080 = -2.123459e-6*t2073;
  t2091 = t1578 + t507;
  t2096 = -0.281209000004*t2091;
  t2097 = t1324*t1702;
  t2118 = t1241*t1884;
  t2130 = t1360*t1997;
  t2159 = t2034 + t2052 + t2080 + t2096 + t2097 + t2118 + t2130;
  t2180 = -1.4640699999999997e-7*var1[13];
  t2181 = -1.38024835e-16*t489;
  t2185 = t2056 + t1312;
  t2191 = -0.038748999993*t2185;
  t2194 = t1612 + t1161;
  t2208 = -0.281209000004*t2194;
  t2211 = t806*t1702;
  t2233 = t963*t1884;
  t2247 = t547*t1997;
  t2255 = t2180 + t2181 + t2191 + t2208 + t2211 + t2233 + t2247;
  t773 = t547*t754;
  t932 = t806*t915;
  t1113 = t963*t1083;
  t1114 = t773 + t932 + t1113;
  t1136 = 0.15121*t1114;
  t1155 = t1152*t754;
  t1169 = t1168*t915;
  t1208 = t1176*t1083;
  t1223 = t1155 + t1169 + t1208;
  t1230 = 0.15121*t1223;
  t1425 = t1168*t1417;
  t1474 = t1176*t1467;
  t1538 = t1152*t1537;
  t1552 = t1425 + t1474 + t1538;
  t2011 = t1552*t2008;
  t2163 = t2032*t2159;
  t2164 = t806*t1417;
  t2168 = t963*t1467;
  t2172 = t547*t1537;
  t2175 = t2164 + t2168 + t2172;
  t2261 = t2175*t2255;
  t2265 = t2011 + t2163 + t2261;
  t2268 = t1385*t2265;
  t2277 = t1176*t1262;
  t2281 = t1168*t1341;
  t2286 = t1152*t1381;
  t2293 = t2277 + t2281 + t2286;
  t2295 = -1.*t2293*t2008;
  t2306 = -1.*t1385*t2159;
  t2316 = t963*t1262;
  t2332 = t806*t1341;
  t2336 = t547*t1381;
  t2340 = t2316 + t2332 + t2336;
  t2343 = -1.*t2340*t2255;
  t2366 = t2295 + t2306 + t2343;
  t2374 = t2032*t2366;
  t2385 = t1136 + t1230 + t2268 + t2374;
  t2428 = t1417*t1702;
  t2467 = t1467*t1884;
  t2478 = t1537*t1997;
  t2480 = t2428 + t2467 + t2478;
  t2489 = -1.*t1702*t1341;
  t2491 = -1.*t1262*t1884;
  t2504 = -1.*t1381*t1997;
  t2507 = t2489 + t2491 + t2504;
  t2398 = 0.038749*t754;
  t2403 = 7.e-6*t866;
  t2405 = t2403 + t629 + t1396;
  t2408 = 1.e-6*t2405;
  t2409 = -0.281209*t1083;
  t2482 = t1341*t2480;
  t2510 = t1417*t2507;
  t2516 = -1.*t1262*t2480;
  t2517 = -1.*t1467*t2507;
  t2526 = t2516 + t2517;
  t2528 = 4.e-6*t2526;
  t2529 = t1381*t2480;
  t2530 = t1537*t2507;
  t2539 = t2529 + t2530;
  t2546 = -7.e-6*t2539;
  t2549 = t2398 + t2408 + t2409 + t2482 + t2510 + t2528 + t2546;
  t271 = Sin(var1[12]);
  t173 = Cos(var1[12]);
  t209 = -1.*t173;
  t222 = 1. + t209;
  t287 = 0.15121*t271;
  t269 = -0.15121*t222;
  t2604 = 0.15121*t222;
  t2609 = t271*t2008;
  t2627 = t173*t2255;
  t2629 = t2604 + t287 + t2609 + t2627;
  t2674 = t173*t2008;
  t2677 = -1.*t271*t2255;
  t2692 = t269 + t287 + t2674 + t2677;
  t2579 = t271*t1552;
  t2601 = t173*t2175;
  t2602 = t2579 + t2601;
  t2641 = t2602*t2629;
  t2645 = t173*t1552;
  t2671 = -1.*t271*t2175;
  t2672 = t2645 + t2671;
  t2697 = t2672*t2692;
  t2699 = t2163 + t2641 + t2697;
  t2700 = t1385*t2699;
  t2701 = t271*t2293;
  t2704 = t173*t2340;
  t2707 = t2701 + t2704;
  t2710 = -1.*t2707*t2629;
  t2715 = t173*t2293;
  t2716 = -1.*t271*t2340;
  t2720 = t2715 + t2716;
  t2722 = -1.*t2720*t2692;
  t2726 = t2306 + t2710 + t2722;
  t2730 = t2032*t2726;
  t2735 = t2700 + t2730;
  t119 = Cos(var1[4]);
  t146 = Cos(var1[5]);
  t2760 = Sin(var1[5]);
  t2748 = Sin(var1[4]);
  t2775 = -1.*t119*t146*t271;
  t2776 = -1.*t173*t119*t2760;
  t2777 = t2775 + t2776;
  t2785 = t173*t119*t146;
  t2786 = -1.*t119*t271*t2760;
  t2787 = t2785 + t2786;
  t2934 = t1360*t754;
  t2955 = t1324*t915;
  t2992 = t1241*t1083;
  t2993 = t2934 + t2955 + t2992;
  t2994 = t2993*t2748;
  t2998 = -1.*t271*t1114;
  t3001 = t173*t1223;
  t3005 = t2998 + t3001;
  t3006 = t146*t3005;
  t3026 = t173*t1114;
  t3028 = t271*t1223;
  t3041 = t3026 + t3028;
  t3050 = -1.*t3041*t2760;
  t3059 = t3006 + t3050;
  t3070 = t119*t3059;
  t3079 = t2994 + t3070;
  t2797 = t1360*t2748;
  t2815 = t547*t2777;
  t2816 = t1152*t2787;
  t2822 = t2797 + t2815 + t2816;
  t2849 = t1324*t2748;
  t2864 = t806*t2777;
  t2881 = t1168*t2787;
  t2891 = t2849 + t2864 + t2881;
  t2899 = t1241*t2748;
  t2904 = t963*t2777;
  t2910 = t1176*t2787;
  t2913 = t2899 + t2904 + t2910;
  t3200 = Sin(var1[3]);
  t3203 = t146*t3041;
  t3217 = t3005*t2760;
  t3226 = t3203 + t3217;
  t3228 = t3200*t3226;
  t3234 = Cos(var1[3]);
  t3238 = t119*t2993;
  t3239 = -1.*t2748*t3059;
  t3244 = t3238 + t3239;
  t3246 = t3234*t3244;
  t3252 = t3228 + t3246;
  t3267 = t3234*t3226;
  t3283 = -1.*t3200*t3244;
  t3285 = t3267 + t3283;
  t3335 = t146*t2602;
  t3341 = t2672*t2760;
  t3342 = t3335 + t3341;
  t3323 = t146*t2692;
  t3325 = -1.*t2629*t2760;
  t3327 = t3323 + t3325;
  t3290 = t146*t2707;
  t3291 = t2720*t2760;
  t3300 = t3290 + t3291;
  t3346 = t146*t2629;
  t3367 = t2692*t2760;
  t3368 = t3346 + t3367;
  t3310 = t146*t2672;
  t3317 = -1.*t2602*t2760;
  t3321 = t3310 + t3317;
  t3330 = t3321*t3327;
  t3379 = t3342*t3368;
  t3385 = t2163 + t3330 + t3379;
  t3398 = t3300*t3385;
  t3408 = t146*t2720;
  t3410 = -1.*t2707*t2760;
  t3418 = t3408 + t3410;
  t3430 = -1.*t3418*t3327;
  t3433 = -1.*t3300*t3368;
  t3448 = t2306 + t3430 + t3433;
  t3500 = t3342*t3448;
  t3516 = t3398 + t3500;
  t3573 = t2032*t2748;
  t3580 = t119*t3321;
  t3590 = t3573 + t3580;
  t3564 = t1385*t2748;
  t3567 = t119*t3418;
  t3568 = t3564 + t3567;
  t3595 = t2159*t2748;
  t3596 = t119*t3327;
  t3600 = t3595 + t3596;
  t3614 = t119*t2159;
  t3616 = -1.*t2748*t3327;
  t3618 = t3614 + t3616;
  t3610 = t3590*t3600;
  t3611 = t119*t2032;
  t3612 = -1.*t2748*t3321;
  t3613 = t3611 + t3612;
  t3622 = t3613*t3618;
  t3626 = t3379 + t3610 + t3622;
  t3640 = t3568*t3626;
  t3645 = -1.*t3568*t3600;
  t3646 = t119*t1385;
  t3647 = -1.*t2748*t3418;
  t3654 = t3646 + t3647;
  t3657 = -1.*t3654*t3618;
  t3660 = t3433 + t3645 + t3657;
  t3664 = t3590*t3660;
  t3667 = t3640 + t3664;
  t3698 = 0.15121*t173;
  t3705 = -0.15121*t271;
  t3725 = -1.*t271*t2008;
  t3749 = -1.*t173*t2255;
  t3753 = t3698 + t3705 + t3725 + t3749;
  t3828 = t3698 + t287 + t2674 + t2677;
  t3954 = -1.*t173*t1114;
  t3958 = -1.*t271*t1223;
  t3960 = t3954 + t3958;
  t3961 = t146*t3960;
  t3963 = -1.*t3005*t2760;
  t3965 = t3961 + t3963;
  t3977 = t3960*t2760;
  t3988 = t3006 + t3977;
  t3878 = -1.*t271*t2293;
  t3879 = -1.*t173*t2340;
  t3881 = t3878 + t3879;
  t3787 = -1.*t271*t1552;
  t3798 = -1.*t173*t2175;
  t3808 = t3787 + t3798;
  t4023 = t3808*t2760;
  t4037 = t3310 + t4023;
  t4047 = t146*t3828;
  t4051 = t3753*t2760;
  t4053 = t4047 + t4051;
  t4017 = t3881*t2760;
  t4019 = t3408 + t4017;
  t4100 = t146*t3753;
  t4101 = -1.*t3828*t2760;
  t4106 = t4100 + t4101;
  t4075 = t3342*t4053;
  t4099 = t4037*t3368;
  t4076 = t146*t3808;
  t4083 = -1.*t2672*t2760;
  t4086 = t4076 + t4083;
  t4130 = -1.*t3300*t4053;
  t4161 = -1.*t4019*t3368;
  t4137 = t146*t3881;
  t4140 = -1.*t2720*t2760;
  t4149 = t4137 + t4140;
  t4322 = -1.*t146*t3041;
  t4323 = t4322 + t3963;
  t4376 = -1.*t146*t2629;
  t4383 = -1.*t2692*t2760;
  t4394 = t4376 + t4383;
  t4373 = t3342*t3327;
  t4416 = t3321*t3368;
  t4363 = -1.*t146*t2602;
  t4365 = t4363 + t4083;
  t4465 = -1.*t3300*t3327;
  t4489 = -1.*t3418*t3368;
  t4438 = -1.*t146*t2707;
  t4452 = t4438 + t4140;
  t4720 = 4.e-6*t569;
  t4665 = -7.e-6*t569;
  t4689 = t4665 + t1396;
  t4692 = -7.e-6*t4689;
  t4696 = -2.8e-11*t671;
  t4698 = t569 + t4692 + t4696;
  t4728 = 7.000000000455e-6*t671;
  t4730 = t4720 + t4728;
  t4734 = t4720 + t1033;
  t4735 = -7.e-6*t4734;
  t4736 = 1.000000000016*t671;
  t4738 = t4735 + t4736;
  t4786 = 7.e-6*t569;
  t4871 = 2.8e-11*t671;
  t4774 = -4.e-6*t569;
  t4775 = t4774 + t1033;
  t4782 = -0.80315*t4775;
  t4792 = t4786 + t1396;
  t4803 = -0.038924*t4792;
  t4805 = t4665 + t690;
  t4810 = -0.038922999986*t4805;
  t4811 = t4720 + t1337;
  t4822 = -0.503149000008*t4811;
  t4829 = -9.666064052774999e-12*t671;
  t4841 = -2.598649999999999e-7 + t4782 + t4803 + t4810 + t4822 + t4829;
  t4861 = 0.148705*t4689;
  t4863 = t569 + t4696;
  t4865 = -0.503149000008*t4863;
  t4872 = t596 + t4871;
  t4873 = -0.80315*t4872;
  t4876 = t4786 + t690;
  t4878 = -3.6777349999999994e-6*t4876;
  t4879 = 1.0000140000590574e-6*t671;
  t4884 = 1.0394599999999997e-12 + t4861 + t4865 + t4873 + t4878 + t4879;
  t4892 = 0.148705*t4734;
  t4895 = t596 + t4696;
  t4896 = -0.038922999986*t4895;
  t4897 = t569 + t4871;
  t4907 = -0.038924*t4897;
  t4915 = t4774 + t1337;
  t4918 = -3.6777349999999994e-6*t4915;
  t4919 = 0.30000099999679997*t671;
  t4921 = 1.8190549999999993e-12 + t4892 + t4896 + t4907 + t4918 + t4919;
  t4972 = -7.e-6*t4775;
  t4975 = 4.e-6*t4805;
  t4977 = -6.5e-11*t671;
  t4980 = t4972 + t4975 + t4977;
  t4997 = 4.e-6*t4895;
  t5001 = 1.12e-16*t671;
  t5005 = t4720 + t4997 + t5001;
  t5009 = -7.e-6*t4872;
  t5019 = 1.96e-16*t671;
  t5020 = t4665 + t5009 + t5019;
  t4842 = t1168*t4841;
  t4885 = t1176*t4884;
  t4926 = t1152*t4921;
  t4927 = t4842 + t4885 + t4926;
  t4938 = t1324*t4841;
  t4940 = t1241*t4884;
  t4943 = t1360*t4921;
  t4949 = t4938 + t4940 + t4943;
  t4954 = t806*t4841;
  t4956 = t963*t4884;
  t4964 = t547*t4921;
  t4966 = t4954 + t4956 + t4964;
  t5129 = 4.e-6*t4689;
  t5130 = -1.000000000049*t671;
  t5139 = t5129 + t5130;
  t5184 = -4.00000000026e-6*t671;
  t5190 = t4786 + t5184;
  t5201 = 4.e-6*t4734;
  t5205 = t569 + t5201 + t4871;
  t5228 = t1241*t5139;
  t5234 = t1324*t5190;
  t5241 = t1360*t5205;
  t5248 = t5228 + t5234 + t5241;
  t5036 = t1324*t4980;
  t5039 = t1360*t5005;
  t5044 = t1241*t5020;
  t5046 = t5036 + t5039 + t5044;
  t5363 = t1702*t4980;
  t5372 = t1417*t4841;
  t5381 = t1467*t4884;
  t5402 = t1537*t4921;
  t5408 = t5020*t1884;
  t5411 = t5005*t1997;
  t5415 = t5363 + t5372 + t5381 + t5402 + t5408 + t5411;
  t5423 = -1.*t1702*t5190;
  t5427 = -1.*t1262*t4884;
  t5430 = -1.*t4841*t1341;
  t5436 = -1.*t4921*t1381;
  t5438 = -1.*t5139*t1884;
  t5441 = -1.*t5205*t1997;
  t5448 = t5423 + t5427 + t5430 + t5436 + t5438 + t5441;
  t4953 = t2032*t4949;
  t5047 = t5046*t2159;
  t5049 = t806*t4980;
  t5050 = t547*t5005;
  t5052 = t963*t5020;
  t5054 = t5049 + t5050 + t5052;
  t4983 = t1168*t4980;
  t5008 = t1152*t5005;
  t5030 = t1176*t5020;
  t5031 = t4983 + t5008 + t5030;
  t5122 = -1.*t4949*t1385;
  t5250 = -1.*t5248*t2159;
  t5535 = t271*t4927;
  t5541 = t173*t4966;
  t5545 = t5535 + t5541;
  t5554 = t173*t4927;
  t5558 = -1.*t271*t4966;
  t5563 = t5554 + t5558;
  t5168 = t1176*t5139;
  t5192 = t1168*t5190;
  t5216 = t1152*t5205;
  t5218 = t5168 + t5192 + t5216;
  t5255 = t963*t5139;
  t5264 = t806*t5190;
  t5265 = t547*t5205;
  t5268 = t5255 + t5264 + t5265;
  t4718 = t1176*t4698;
  t4733 = t1168*t4730;
  t4742 = t1152*t4738;
  t4743 = t4718 + t4733 + t4742;
  t4753 = t963*t4698;
  t4762 = t806*t4730;
  t4763 = t547*t4738;
  t4766 = t4753 + t4762 + t4763;
  t5765 = t271*t4743;
  t5783 = t173*t4766;
  t5786 = t5765 + t5783;
  t5742 = t173*t4743;
  t5744 = -1.*t271*t4766;
  t5758 = t5742 + t5744;
  t5724 = t1241*t4698;
  t5725 = t1324*t4730;
  t5727 = t1360*t4738;
  t5737 = t5724 + t5725 + t5727;
  t5759 = t146*t5758;
  t5789 = -1.*t5786*t2760;
  t5791 = t5759 + t5789;
  t5801 = t146*t5786;
  t5805 = t5758*t2760;
  t5807 = t5801 + t5805;
  t5814 = t119*t5737;
  t5820 = -1.*t2748*t5791;
  t5838 = t5814 + t5820;
  t5582 = -1.*t271*t5054;
  t5583 = t173*t5031;
  t5587 = t5582 + t5583;
  t5573 = t173*t5054;
  t5574 = t271*t5031;
  t5576 = t5573 + t5574;
  t5870 = t146*t5563;
  t5871 = -1.*t5545*t2760;
  t5877 = t5870 + t5871;
  t5891 = t146*t5545;
  t5896 = t5563*t2760;
  t5899 = t5891 + t5896;
  t5639 = t173*t5218;
  t5660 = -1.*t271*t5268;
  t5662 = t5639 + t5660;
  t5606 = t271*t5218;
  t5607 = t173*t5268;
  t5626 = t5606 + t5607;
  t6010 = t146*t5626;
  t6011 = t5662*t2760;
  t6015 = t6010 + t6011;
  t5916 = t146*t5576;
  t5921 = t5587*t2760;
  t5923 = t5916 + t5921;
  t5900 = t3342*t5899;
  t5932 = t5923*t3368;
  t5903 = t146*t5587;
  t5904 = -1.*t5576*t2760;
  t5905 = t5903 + t5904;
  t5969 = -1.*t5899*t3300;
  t6016 = -1.*t6015*t3368;
  t6054 = t4949*t2748;
  t6056 = t119*t5877;
  t6057 = t6054 + t6056;
  t6059 = t119*t4949;
  t6071 = -1.*t2748*t5877;
  t6077 = t6059 + t6071;
  t5973 = t146*t5662;
  t5988 = -1.*t5626*t2760;
  t5989 = t5973 + t5988;
  t6170 = t5248*t2748;
  t6171 = t119*t5989;
  t6172 = t6170 + t6171;
  t6081 = t5046*t2748;
  t6088 = t119*t5905;
  t6093 = t6081 + t6088;
  t6232 = -1.*t2993*t2748;
  t6233 = -1.*t119*t3059;
  t6235 = t6232 + t6233;
  t6245 = -1.*t2159*t2748;
  t6250 = -1.*t119*t3327;
  t6251 = t6245 + t6250;
  t6373 = 2.8e-11*t507;
  t6388 = -7.e-6*t417;
  t6391 = t6388 + t542;
  t6393 = t479 + t6373;
  t6363 = 4.e-6*t417;
  t6364 = t6363 + t1312;
  t6374 = t417 + t6373;
  t6399 = t6391*t1417;
  t6400 = -1.000000000049*t507*t1467;
  t6401 = t6393*t1537;
  t6413 = t6399 + t6400 + t6401;
  t6349 = 7.e-6*t417;
  t6352 = t6349 + t542;
  t6329 = -4.e-6*t417;
  t6334 = t6329 + t1312;
  t6542 = -2.8e-11*t507;
  t6383 = -1.000000000049*t507*t1262;
  t6392 = t6391*t1341;
  t6394 = t6393*t1381;
  t6396 = t6383 + t6392 + t6394;
  t6461 = t6388 + t1161;
  t6464 = -0.038748999993*t6461;
  t6465 = t6363 + t962;
  t6497 = -0.281209000004*t6465;
  t6506 = -1.38024835e-16*t507;
  t6507 = -6.5e-11*t507*t1702;
  t6508 = t6352*t1884;
  t6512 = t6334*t1997;
  t6514 = -1.4640699999999997e-7 + t6464 + t6497 + t6506 + t6507 + t6508 + t6512;
  t6545 = t417 + t6542;
  t6551 = -0.281209000004*t6545;
  t6564 = t6349 + t1161;
  t6567 = -2.123459e-6*t6564;
  t6568 = -0.0387489999948987*t507;
  t6569 = t6391*t1702;
  t6571 = -1.000000000049*t507*t1884;
  t6578 = t6393*t1997;
  t6581 = 5.856279999999999e-13 + t6551 + t6567 + t6568 + t6569 + t6571 + t6578;
  t6585 = t479 + t6542;
  t6593 = -0.038748999993*t6585;
  t6594 = t6329 + t962;
  t6595 = -2.123459e-6*t6594;
  t6596 = -0.28120900000849935*t507;
  t6598 = t6364*t1702;
  t6599 = t6374*t1884;
  t6601 = -1.000000000016*t507*t1997;
  t6603 = 1.0248489999999998e-12 + t6593 + t6595 + t6596 + t6598 + t6599 + t6601;
  t6451 = t6413*t2159;
  t6583 = t2032*t6581;
  t6520 = -6.5e-11*t507*t1417;
  t6530 = t6352*t1467;
  t6533 = t6334*t1537;
  t6534 = t6520 + t6530 + t6533;
  t6432 = t6364*t1417;
  t6435 = t6374*t1467;
  t6443 = -1.000000000016*t507*t1537;
  t6447 = t6432 + t6435 + t6443;
  t6643 = -1.*t6396*t2159;
  t6677 = -1.*t1385*t6581;
  t6656 = t6352*t1262;
  t6665 = -6.5e-11*t507*t1341;
  t6669 = t6334*t1381;
  t6674 = t6656 + t6665 + t6669;
  t6623 = t6374*t1262;
  t6626 = t6364*t1341;
  t6635 = -1.000000000016*t507*t1381;
  t6636 = t6623 + t6626 + t6635;
  t6801 = -1.*t271*t6514;
  t6802 = t173*t6603;
  t6803 = t6801 + t6802;
  t6807 = t173*t6514;
  t6813 = t271*t6603;
  t6819 = t6807 + t6813;
  t6345 = t6334*t754;
  t6347 = -6.5e-11*t507*t915;
  t6354 = t6352*t1083;
  t6357 = t6345 + t6347 + t6354;
  t6359 = -1.000000000016*t507*t754;
  t6367 = t6364*t915;
  t6379 = t6374*t1083;
  t6380 = t6359 + t6367 + t6379;
  t6960 = t173*t6357;
  t6974 = t271*t6380;
  t6979 = t6960 + t6974;
  t6935 = -1.*t271*t6357;
  t6939 = t173*t6380;
  t6940 = t6935 + t6939;
  t6903 = t6393*t754;
  t6905 = t6391*t915;
  t6907 = -1.000000000049*t507*t1083;
  t6924 = t6903 + t6905 + t6907;
  t6956 = t146*t6940;
  t6980 = -1.*t6979*t2760;
  t6983 = t6956 + t6980;
  t6997 = t146*t6979;
  t6998 = t6940*t2760;
  t6999 = t6997 + t6998;
  t7002 = t119*t6924;
  t7003 = -1.*t2748*t6983;
  t7012 = t7002 + t7003;
  t6866 = t173*t6674;
  t6874 = t271*t6636;
  t6876 = t6866 + t6874;
  t6878 = -1.*t271*t6674;
  t6879 = t173*t6636;
  t6880 = t6878 + t6879;
  t6728 = t173*t6534;
  t6743 = t271*t6447;
  t6747 = t6728 + t6743;
  t6765 = -1.*t271*t6534;
  t6767 = t173*t6447;
  t6770 = t6765 + t6767;
  t7049 = t146*t6747;
  t7050 = t6770*t2760;
  t7051 = t7049 + t7050;
  t7044 = t146*t6876;
  t7045 = t6880*t2760;
  t7046 = t7044 + t7045;
  t7064 = t146*t6819;
  t7072 = t6803*t2760;
  t7077 = t7064 + t7072;
  t7091 = t146*t6803;
  t7092 = -1.*t6819*t2760;
  t7093 = t7091 + t7092;
  t7104 = t146*t6880;
  t7115 = -1.*t6876*t2760;
  t7117 = t7104 + t7115;
  t7053 = t146*t6770;
  t7054 = -1.*t6747*t2760;
  t7055 = t7053 + t7054;
  t7060 = t7051*t3368;
  t7081 = t3342*t7077;
  t7167 = t6413*t2748;
  t7168 = t119*t7055;
  t7172 = t7167 + t7168;
  t7131 = -1.*t7046*t3368;
  t7138 = -1.*t3300*t7077;
  t7152 = t6396*t2748;
  t7158 = t119*t7117;
  t7159 = t7152 + t7158;
  t7209 = t6581*t2748;
  t7213 = t119*t7093;
  t7215 = t7209 + t7213;
  t7220 = t119*t6581;
  t7222 = -1.*t2748*t7093;
  t7225 = t7220 + t7222;
  t7269 = 0.15121*t2293;
  t7273 = 0.15121*t2340;
  t7276 = -1.*t1552*t2008;
  t7277 = -1.*t2032*t2159;
  t7278 = -1.*t2175*t2255;
  t7279 = t7276 + t7277 + t7278;
  t7282 = t2993*t7279;
  t7287 = t1223*t2008;
  t7288 = t2993*t2159;
  t7291 = t1114*t2255;
  t7307 = t7287 + t7288 + t7291;
  t7322 = t2032*t7307;
  t7327 = t7269 + t7273 + t7282 + t7322;
  t7363 = t1702*t915;
  t7373 = t1083*t1884;
  t7376 = t754*t1997;
  t7377 = t7363 + t7373 + t7376;
  t7382 = -1.*t1417*t1702;
  t7385 = -1.*t1467*t1884;
  t7386 = -1.*t1537*t1997;
  t7387 = t7382 + t7385 + t7386;
  t7341 = -0.281209*t1262;
  t7343 = 6.5e-11*t600;
  t7345 = -1. + t7343;
  t7353 = 4.e-6*t7345;
  t7355 = t7353 + t1386 + t1033;
  t7360 = 1.e-6*t7355;
  t7362 = 0.038749*t1381;
  t7380 = t1417*t7377;
  t7389 = t915*t7387;
  t7390 = t1537*t7377;
  t7391 = t754*t7387;
  t7392 = t7390 + t7391;
  t7399 = -7.e-6*t7392;
  t7404 = -1.*t1467*t7377;
  t7408 = -1.*t1083*t7387;
  t7412 = t7404 + t7408;
  t7426 = 4.e-6*t7412;
  t7428 = t7341 + t7360 + t7362 + t7380 + t7389 + t7399 + t7426;
  t7459 = -1.*t2602*t2629;
  t7461 = -1.*t2672*t2692;
  t7465 = t7277 + t7459 + t7461;
  t7466 = t2993*t7465;
  t7475 = t3041*t2629;
  t7476 = t3005*t2692;
  t7480 = t7288 + t7475 + t7476;
  t7482 = t2032*t7480;
  t7486 = t7466 + t7482;
  t2740 = t2034 + t2052 + t2080 + t2096;
  t340 = t269 + t287;
  t2759 = t2604 + t287;
  t2772 = t2180 + t2181 + t2191 + t2208;
  t7498 = t146*t3200*t2748;
  t7504 = t3234*t2760;
  t7505 = t7498 + t7504;
  t7507 = t3234*t146;
  t7513 = -1.*t3200*t2748*t2760;
  t7516 = t7507 + t7513;
  t2784 = t1557 + t1567 + t1592 + t1615;
  t7613 = t3200*t3300;
  t7614 = t3234*t3654;
  t7615 = t7613 + t7614;
  t7623 = t3234*t3300;
  t7631 = -1.*t3200*t3654;
  t7635 = t7623 + t7631;
  t7657 = -1.*t3321*t3327;
  t7664 = -1.*t3342*t3368;
  t7668 = t7277 + t7657 + t7664;
  t7677 = t3226*t7668;
  t7684 = t3059*t3327;
  t7687 = t3226*t3368;
  t7691 = t7288 + t7684 + t7687;
  t7698 = t3342*t7691;
  t7700 = t7677 + t7698;
  t2795 = t1911 + t1915 + t1930 + t1950;
  t7577 = -1.*t271*t7505;
  t7578 = t173*t7516;
  t7579 = t7577 + t7578;
  t7581 = t173*t7505;
  t7590 = t271*t7516;
  t7602 = t7581 + t7590;
  t2843 = t1621 + t1646 + t1649 + t1675;
  t2894 = t1712 + t1748 + t1849 + t1860;
  t7766 = -1.*t3590*t3600;
  t7768 = -1.*t3613*t3618;
  t7776 = t7664 + t7766 + t7768;
  t7777 = t3079*t7776;
  t7778 = t3079*t3600;
  t7779 = t3244*t3618;
  t7785 = t7687 + t7778 + t7779;
  t7787 = t3590*t7785;
  t7792 = t7777 + t7787;
  t7715 = -1.*t119*t1360*t3200;
  t7717 = t547*t7579;
  t7719 = t1152*t7602;
  t7723 = t7715 + t7717 + t7719;
  t7730 = -1.*t119*t1324*t3200;
  t7733 = t806*t7579;
  t7734 = t1168*t7602;
  t7741 = t7730 + t7733 + t7734;
  t7745 = -1.*t1241*t119*t3200;
  t7746 = t963*t7579;
  t7747 = t1176*t7602;
  t7750 = t7745 + t7746 + t7747;
  t7989 = -1.*t3342*t4053;
  t7998 = -1.*t4037*t3368;
  t8039 = t3226*t4053;
  t8076 = t3988*t3368;
  t8332 = -1.*t3342*t3327;
  t8336 = -1.*t3321*t3368;
  t8365 = t3226*t3327;
  t8371 = t3059*t3368;
  t6293 = -1.*t1385*t2748;
  t6296 = -1.*t119*t3418;
  t6297 = t6293 + t6296;
  t6268 = -1.*t2032*t2748;
  t6269 = -1.*t119*t3321;
  t6270 = t6268 + t6269;
  t8730 = -1.*t1702*t4980;
  t8731 = -1.*t1417*t4841;
  t8732 = -1.*t1467*t4884;
  t8733 = -1.*t1537*t4921;
  t8734 = -1.*t5020*t1884;
  t8738 = -1.*t5005*t1997;
  t8739 = t8730 + t8731 + t8732 + t8733 + t8734 + t8738;
  t8742 = t4841*t915;
  t8743 = t1702*t4730;
  t8744 = t754*t4921;
  t8745 = t4884*t1083;
  t8746 = t4698*t1884;
  t8748 = t4738*t1997;
  t8756 = t8742 + t8743 + t8744 + t8745 + t8746 + t8748;
  t8630 = -1.*t2032*t4949;
  t8643 = -1.*t5046*t2159;
  t8683 = t4949*t2993;
  t8695 = t5737*t2159;
  t6186 = t119*t5248;
  t6187 = -1.*t2748*t5989;
  t6191 = t6186 + t6187;
  t8931 = -1.*t3342*t5899;
  t8934 = -1.*t5923*t3368;
  t6098 = t119*t5046;
  t6106 = -1.*t2748*t5905;
  t6119 = t6098 + t6106;
  t5740 = t5737*t2748;
  t5793 = t119*t5791;
  t5794 = t5740 + t5793;
  t8962 = t5899*t3226;
  t8971 = t5807*t3368;
  t9019 = -1.*t6413*t2159;
  t9022 = -1.*t2032*t6581;
  t9031 = t6924*t2159;
  t9035 = t2993*t6581;
  t7236 = t119*t6396;
  t7237 = -1.*t2748*t7117;
  t7239 = t7236 + t7237;
  t6928 = t6924*t2748;
  t6988 = t119*t6983;
  t6989 = t6928 + t6988;
  t9112 = -1.*t7051*t3368;
  t9113 = -1.*t3342*t7077;
  t7182 = t119*t6413;
  t7184 = -1.*t2748*t7055;
  t7190 = t7182 + t7184;
  t9119 = t6999*t3368;
  t9125 = t3226*t7077;
  t9172 = 0.15121*t1552;
  t9174 = 0.15121*t2175;
  t9175 = -1.*t1223*t2008;
  t9176 = -1.*t2993*t2159;
  t9177 = -1.*t1114*t2255;
  t9178 = t9175 + t9176 + t9177;
  t9179 = t1385*t9178;
  t9180 = t2293*t2008;
  t9182 = t1385*t2159;
  t9183 = t2340*t2255;
  t9185 = t9180 + t9182 + t9183;
  t9186 = t2993*t9185;
  t9188 = t9172 + t9174 + t9179 + t9186;
  t9208 = -1.*t1702*t915;
  t9209 = -1.*t1083*t1884;
  t9210 = -1.*t754*t1997;
  t9212 = t9208 + t9209 + t9210;
  t9215 = t1702*t1341;
  t9216 = t1262*t1884;
  t9217 = t1381*t1997;
  t9219 = t9215 + t9216 + t9217;
  t9192 = 7.e-6*t1397;
  t9193 = 4.e-6*t1677;
  t9195 = -1. + t7343 + t9192 + t9193;
  t9198 = 1.e-6*t9195;
  t9206 = -0.281209*t1467;
  t9207 = 0.038749*t1537;
  t9214 = t1341*t9212;
  t9220 = t915*t9219;
  t9222 = t1381*t9212;
  t9223 = t754*t9219;
  t9224 = t9222 + t9223;
  t9226 = -7.e-6*t9224;
  t9230 = -1.*t1262*t9212;
  t9237 = -1.*t1083*t9219;
  t9239 = t9230 + t9237;
  t9240 = 4.e-6*t9239;
  t9241 = t9198 + t9206 + t9207 + t9214 + t9220 + t9226 + t9240;
  t9247 = -1.*t3041*t2629;
  t9256 = -1.*t3005*t2692;
  t9271 = t9176 + t9247 + t9256;
  t9275 = t1385*t9271;
  t9291 = t2707*t2629;
  t9297 = t2720*t2692;
  t9298 = t9182 + t9291 + t9297;
  t9300 = t2993*t9298;
  t9302 = t9275 + t9300;
  t9326 = -1.*t3234*t146*t2748;
  t9327 = t3200*t2760;
  t9328 = t9326 + t9327;
  t9330 = t146*t3200;
  t9331 = t3234*t2748*t2760;
  t9332 = t9330 + t9331;
  t9391 = t3200*t3342;
  t9402 = t3234*t3613;
  t9403 = t9391 + t9402;
  t9406 = t3234*t3342;
  t9407 = -1.*t3200*t3613;
  t9408 = t9406 + t9407;
  t9411 = -1.*t3059*t3327;
  t9412 = -1.*t3226*t3368;
  t9413 = t9176 + t9411 + t9412;
  t9414 = t3300*t9413;
  t9415 = t3418*t3327;
  t9416 = t3300*t3368;
  t9417 = t9182 + t9415 + t9416;
  t9418 = t3226*t9417;
  t9419 = t9414 + t9418;
  t9336 = -1.*t271*t9328;
  t9350 = t173*t9332;
  t9351 = t9336 + t9350;
  t9369 = t173*t9328;
  t9370 = t271*t9332;
  t9380 = t9369 + t9370;
  t9449 = -1.*t3079*t3600;
  t9450 = -1.*t3244*t3618;
  t9452 = t9412 + t9449 + t9450;
  t9453 = t3568*t9452;
  t9454 = t3568*t3600;
  t9455 = t3654*t3618;
  t9456 = t9416 + t9454 + t9455;
  t9457 = t3079*t9456;
  t9459 = t9453 + t9457;
  t9422 = t3234*t119*t1360;
  t9423 = t547*t9351;
  t9424 = t1152*t9380;
  t9425 = t9422 + t9423 + t9424;
  t9427 = t3234*t119*t1324;
  t9428 = t806*t9351;
  t9429 = t1168*t9380;
  t9432 = t9427 + t9428 + t9429;
  t9434 = t1241*t3234*t119;
  t9435 = t963*t9351;
  t9437 = t1176*t9380;
  t9438 = t9434 + t9435 + t9437;
  t9507 = -1.*t3226*t4053;
  t9509 = -1.*t3988*t3368;
  t9513 = t3300*t4053;
  t9515 = t4019*t3368;
  t9553 = -1.*t3226*t3327;
  t9558 = -1.*t3059*t3368;
  t9565 = t3300*t3327;
  t9567 = t3418*t3368;
  t9742 = t1702*t5190;
  t9743 = t1262*t4884;
  t9744 = t4841*t1341;
  t9745 = t4921*t1381;
  t9746 = t5139*t1884;
  t9747 = t5205*t1997;
  t9748 = t9742 + t9743 + t9744 + t9745 + t9746 + t9747;
  t9752 = -1.*t4841*t915;
  t9753 = -1.*t1702*t4730;
  t9754 = -1.*t754*t4921;
  t9755 = -1.*t4884*t1083;
  t9756 = -1.*t4698*t1884;
  t9757 = -1.*t4738*t1997;
  t9758 = t9752 + t9753 + t9754 + t9755 + t9756 + t9757;
  t9691 = t4949*t1385;
  t9699 = t5248*t2159;
  t9711 = -1.*t4949*t2993;
  t9728 = -1.*t5737*t2159;
  t9803 = t5899*t3300;
  t9805 = t6015*t3368;
  t9810 = -1.*t5899*t3226;
  t9813 = -1.*t5807*t3368;
  t9841 = -1.*t6924*t2159;
  t9844 = -1.*t2993*t6581;
  t9852 = t6396*t2159;
  t9855 = t1385*t6581;
  t9892 = -1.*t6999*t3368;
  t9893 = -1.*t3226*t7077;
  t9898 = t7046*t3368;
  t9899 = t3300*t7077;
  p_output1[0]=t2740*t2748 - 1.*t119*t2759*t2760 + t2772*t2777 + t2784*t2787 + t2795*t2822 + t2843*t2891 + t2894*t2913 - 0.80315*(t1515*t2822 + t1397*t2891 + t1451*t2913) - 0.038924*(t1988*t2822 + t1677*t2891 + t1731*t2913) + t119*t146*t340 + 0.148705*(t1053*t2913 + t2822*t700 + t2891*t866) + var1[0] + t3079*var2[0] + t3285*var2[1] + t3252*var2[2] + t3667*var2[3] + ((-1.*t3200*t3226 - 1.*t3234*t3244)*var2[1] + t3285*var2[2])*var2[3] + t3516*var2[4] + (t3244*var2[0] - 1.*t3200*t6235*var2[1] + t3234*t6235*var2[2] + (t3626*t3654 + t3613*t3660 + t3568*(t3600*t3613 + t3590*t3618 + t3613*t6251 + t3618*t6270) + t3590*(-1.*t3568*t3618 - 1.*t3600*t3654 - 1.*t3654*t6251 - 1.*t3618*t6297))*var2[3])*var2[4] + t2735*var2[5] + (t119*t4323*var2[0] + (t3059*t3234 + t2748*t3200*t4323)*var2[1] + (t3059*t3200 - 1.*t2748*t3234*t4323)*var2[2] + (t119*t3660*t4365 + t3568*(t119*t3600*t4365 - 1.*t2748*t3618*t4365 + t4373 + t119*t3590*t4394 - 1.*t2748*t3613*t4394 + t4416) + t119*t3626*t4452 + t3590*(-1.*t119*t3568*t4394 + t2748*t3654*t4394 - 1.*t119*t3600*t4452 + t2748*t3618*t4452 + t4465 + t4489))*var2[3] + (t3385*t3418 + t3321*t3448 + t3300*(t3327*t4365 + t4373 + t3321*t4394 + t4416) + t3342*(-1.*t3418*t4394 - 1.*t3327*t4452 + t4465 + t4489))*var2[4])*var2[5] + t2385*var2[12] + (t119*t3965*var2[0] + (t2748*t3200*t3965 + t3234*t3988)*var2[1] + (-1.*t2748*t3234*t3965 + t3200*t3988)*var2[2] + (t119*t3660*t4086 + t3568*(t4075 + t119*t3600*t4086 - 1.*t2748*t3618*t4086 + t4099 + t119*t3590*t4106 - 1.*t2748*t3613*t4106) + t119*t3626*t4149 + t3590*(-1.*t119*t3568*t4106 + t2748*t3654*t4106 + t4130 - 1.*t119*t3600*t4149 + t2748*t3618*t4149 + t4161))*var2[3] + (t3385*t4019 + t3448*t4037 + t3300*(t4075 + t3327*t4086 + t4099 + t3321*t4106) + t3342*(-1.*t3418*t4106 + t4130 - 1.*t3327*t4149 + t4161))*var2[4] + (t1385*(t2629*t2672 + t2672*t3753 + t2692*t3808 + t2602*t3828) + t2032*(-1.*t2629*t2720 - 1.*t2720*t3753 - 1.*t2707*t3828 - 1.*t2692*t3881))*var2[5])*var2[12] + t2549*var2[13] + (t6989*var2[0] + (t3234*t6999 - 1.*t3200*t7012)*var2[1] + (t3200*t6999 + t3234*t7012)*var2[2] + (t3626*t7159 + t3660*t7172 + t3568*(t7060 + t7081 + t3600*t7172 + t3618*t7190 + t3590*t7215 + t3613*t7225) + t3590*(t7131 + t7138 - 1.*t3600*t7159 - 1.*t3568*t7215 - 1.*t3654*t7225 - 1.*t3618*t7239))*var2[3] + (t3385*t7046 + t3448*t7051 + t3300*(t6451 + t6583 + t3327*t7055 + t7060 + t7081 + t3321*t7093) + t3342*(t6643 + t6677 - 1.*t3418*t7093 - 1.*t3327*t7117 + t7131 + t7138))*var2[4] + (t2699*t6396 + t2726*t6413 + t1385*(t6451 + t6583 + t2629*t6747 + t2692*t6770 + t2672*t6803 + t2602*t6819) + t2032*(t6643 + t6677 - 1.*t2720*t6803 - 1.*t2707*t6819 - 1.*t2629*t6876 - 1.*t2692*t6880))*var2[5] + (0.15121*t6357 + 0.15121*t6380 + t2265*t6396 + t2366*t6413 + t1385*(t2008*t6447 + t6451 + t2175*t6514 + t2255*t6534 + t6583 + t1552*t6603) + t2032*(-1.*t2340*t6514 - 1.*t2293*t6603 - 1.*t2008*t6636 + t6643 - 1.*t2255*t6674 + t6677))*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t5794*var2[0] + (t3234*t5807 - 1.*t3200*t5838)*var2[1] + (t3200*t5807 + t3234*t5838)*var2[2] + (t3660*t6093 + t3568*(t5900 + t5932 + t3590*t6057 + t3613*t6077 + t3600*t6093 + t3618*t6119) + t3626*t6172 + t3590*(t5969 + t6016 - 1.*t3568*t6057 - 1.*t3654*t6077 - 1.*t3600*t6172 - 1.*t3618*t6191))*var2[3] + (t3448*t5923 + t3300*(t4953 + t5047 + t3321*t5877 + t5900 + t3327*t5905 + t5932) + t3385*t6015 + t3342*(t5122 + t5250 - 1.*t3418*t5877 + t5969 - 1.*t3327*t5989 + t6016))*var2[4] + (t2726*t5046 + t2699*t5248 + t1385*(t4953 + t5047 + t2602*t5545 + t2672*t5563 + t2629*t5576 + t2692*t5587) + t2032*(t5122 + t5250 - 1.*t2707*t5545 - 1.*t2720*t5563 - 1.*t2629*t5626 - 1.*t2692*t5662))*var2[5] + (0.15121*t4743 + 0.15121*t4766 + t2366*t5046 + t1385*(t1552*t4927 + t4953 + t2175*t4966 + t2008*t5031 + t5047 + t2255*t5054) + t2265*t5248 + t2032*(-1.*t2293*t4927 - 1.*t2340*t4966 + t5122 - 1.*t2008*t5218 + t5250 - 1.*t2255*t5268))*var2[12] + (-0.281209*t4698 + 0.038749*t4738 + t2507*t4980 + t2480*t5190 + t1341*t5415 + t1417*t5448 + 4.e-6*(-1.*t2507*t5020 - 1.*t2480*t5139 - 1.*t1262*t5415 - 1.*t1467*t5448) - 7.e-6*(t2507*t5005 + t2480*t5205 + t1381*t5415 + t1537*t5448) + 1.e-6*(t4774 - 7.000000000455e-6*t671))*var2[13])*var2[14] + t3079*var3[0] + t3285*var3[1] + t3252*var3[2] + t3667*var3[3] + t3516*var3[4] + t2735*var3[5] + t2385*var3[12] + t2549*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=-1.*t119*t2740*t3200 + t340*t7505 + t2759*t7516 + t2772*t7579 + t2784*t7602 + t2795*t7723 + t2843*t7741 + t2894*t7750 - 0.80315*(t1515*t7723 + t1397*t7741 + t1451*t7750) - 0.038924*(t1988*t7723 + t1677*t7741 + t1731*t7750) + 0.148705*(t700*t7723 + t1053*t7750 + t7741*t866) + var1[1] + t3568*var2[0] + t7635*var2[1] + t7615*var2[2] + t7792*var2[3] + ((-1.*t3200*t3300 - 1.*t3234*t3654)*var2[1] + t7635*var2[2])*var2[3] + t7700*var2[4] + (t3654*var2[0] - 1.*t3200*t6297*var2[1] + t3234*t6297*var2[2] + (t3590*(t3244*t3600 + t3079*t3618 + t3618*t6235 + t3244*t6251) + t3079*(-1.*t3600*t3613 - 1.*t3590*t3618 - 1.*t3613*t6251 - 1.*t3618*t6270) + t3244*t7776 + t3613*t7785)*var2[3])*var2[4] + t7486*var2[5] + (t119*t4452*var2[0] + (t3234*t3418 + t2748*t3200*t4452)*var2[1] + (t3200*t3418 - 1.*t2748*t3234*t4452)*var2[2] + (t119*t4323*t7776 + t119*t4365*t7785 + t3079*(-1.*t119*t3600*t4365 + t2748*t3618*t4365 - 1.*t119*t3590*t4394 + t2748*t3613*t4394 + t8332 + t8336) + t3590*(t119*t3600*t4323 - 1.*t2748*t3618*t4323 + t119*t3079*t4394 - 1.*t2748*t3244*t4394 + t8365 + t8371))*var2[3] + (t3059*t7668 + t3321*t7691 + t3226*(-1.*t3327*t4365 - 1.*t3321*t4394 + t8332 + t8336) + t3342*(t3327*t4323 + t3059*t4394 + t8365 + t8371))*var2[4])*var2[5] + t7327*var2[12] + (t119*t4149*var2[0] + (t3234*t4019 + t2748*t3200*t4149)*var2[1] + (t3200*t4019 - 1.*t2748*t3234*t4149)*var2[2] + (t119*t3965*t7776 + t119*t4086*t7785 + t3079*(-1.*t119*t3600*t4086 + t2748*t3618*t4086 - 1.*t119*t3590*t4106 + t2748*t3613*t4106 + t7989 + t7998) + t3590*(t119*t3600*t3965 - 1.*t2748*t3618*t3965 + t119*t3079*t4106 - 1.*t2748*t3244*t4106 + t8039 + t8076))*var2[3] + (t3988*t7668 + t4037*t7691 + t3226*(-1.*t3327*t4086 - 1.*t3321*t4106 + t7989 + t7998) + t3342*(t3327*t3965 + t3059*t4106 + t8039 + t8076))*var2[4] + (t2993*(-1.*t2629*t2672 - 1.*t2672*t3753 - 1.*t2692*t3808 - 1.*t2602*t3828) + t2032*(t2629*t3005 + t3005*t3753 + t3041*t3828 + t2692*t3960))*var2[5])*var2[12] + t7428*var2[13] + (t7159*var2[0] + (t3234*t7046 - 1.*t3200*t7239)*var2[1] + (t3200*t7046 + t3234*t7239)*var2[2] + (t6989*t7776 + t7172*t7785 + t3079*(-1.*t3600*t7172 - 1.*t3618*t7190 - 1.*t3590*t7215 - 1.*t3613*t7225 + t9112 + t9113) + t3590*(t3600*t6989 + t3618*t7012 + t3079*t7215 + t3244*t7225 + t9119 + t9125))*var2[3] + (t6999*t7668 + t7051*t7691 + t3226*(-1.*t3327*t7055 - 1.*t3321*t7093 + t9019 + t9022 + t9112 + t9113) + t3342*(t3327*t6983 + t3059*t7093 + t9031 + t9035 + t9119 + t9125))*var2[4] + (t6924*t7465 + t6413*t7480 + t2993*(-1.*t2629*t6747 - 1.*t2692*t6770 - 1.*t2672*t6803 - 1.*t2602*t6819 + t9019 + t9022) + t2032*(t3005*t6803 + t3041*t6819 + t2692*t6940 + t2629*t6979 + t9031 + t9035))*var2[5] + (0.15121*t6636 + 0.15121*t6674 + t6924*t7279 + t6413*t7307 + t2993*(-1.*t2008*t6447 - 1.*t2175*t6514 - 1.*t2255*t6534 - 1.*t1552*t6603 + t9019 + t9022) + t2032*(t2255*t6357 + t2008*t6380 + t1114*t6514 + t1223*t6603 + t9031 + t9035))*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t6172*var2[0] + (t3234*t6015 - 1.*t3200*t6191)*var2[1] + (t3200*t6015 + t3234*t6191)*var2[2] + (t5794*t7776 + t6093*t7785 + t3079*(-1.*t3590*t6057 - 1.*t3613*t6077 - 1.*t3600*t6093 - 1.*t3618*t6119 + t8931 + t8934) + t3590*(t3600*t5794 + t3618*t5838 + t3079*t6057 + t3244*t6077 + t8962 + t8971))*var2[3] + (t5807*t7668 + t5923*t7691 + t3226*(-1.*t3321*t5877 - 1.*t3327*t5905 + t8630 + t8643 + t8931 + t8934) + t3342*(t3327*t5791 + t3059*t5877 + t8683 + t8695 + t8962 + t8971))*var2[4] + (t5737*t7465 + t5046*t7480 + t2993*(-1.*t2602*t5545 - 1.*t2672*t5563 - 1.*t2629*t5576 - 1.*t2692*t5587 + t8630 + t8643) + t2032*(t3041*t5545 + t3005*t5563 + t2692*t5758 + t2629*t5786 + t8683 + t8695))*var2[5] + (0.15121*t5218 + 0.15121*t5268 + t5737*t7279 + t5046*t7307 + t2993*(-1.*t1552*t4927 - 1.*t2175*t4966 - 1.*t2008*t5031 - 1.*t2255*t5054 + t8630 + t8643) + t2032*(t2008*t4743 + t2255*t4766 + t1223*t4927 + t1114*t4966 + t8683 + t8695))*var2[12] + (-0.281209*t5139 + 0.038749*t5205 + 1.e-6*(t4665 + 4.00000000026e-6*t671) + t4980*t7377 + t4730*t7387 + t1417*t8756 + 4.e-6*(-1.*t5020*t7377 - 1.*t4698*t7387 - 1.*t1083*t8739 - 1.*t1467*t8756) - 7.e-6*(t5005*t7377 + t4738*t7387 + t754*t8739 + t1537*t8756) + t8739*t915)*var2[13])*var2[14] + t3568*var3[0] + t7635*var3[1] + t7615*var3[2] + t7792*var3[3] + t7700*var3[4] + t7486*var3[5] + t7327*var3[12] + t7428*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=t119*t2740*t3234 + t340*t9328 + t2759*t9332 + t2772*t9351 + t2784*t9380 + t2795*t9425 + t2843*t9432 + t2894*t9438 + 0.148705*(t700*t9425 + t866*t9432 + t1053*t9438) - 0.80315*(t1515*t9425 + t1397*t9432 + t1451*t9438) - 0.038924*(t1988*t9425 + t1677*t9432 + t1731*t9438) + var1[2] + t3590*var2[0] + t9408*var2[1] + t9403*var2[2] + t9459*var2[3] + ((-1.*t3200*t3342 - 1.*t3234*t3613)*var2[1] + t9408*var2[2])*var2[3] + t9419*var2[4] + (t3613*var2[0] - 1.*t3200*t6270*var2[1] + t3234*t6270*var2[2] + (t3568*(-1.*t3244*t3600 - 1.*t3079*t3618 - 1.*t3618*t6235 - 1.*t3244*t6251) + t3079*(t3568*t3618 + t3600*t3654 + t3654*t6251 + t3618*t6297) + t3654*t9452 + t3244*t9456)*var2[3])*var2[4] + t9302*var2[5] + (t119*t4365*var2[0] + (t3234*t3321 + t2748*t3200*t4365)*var2[1] + (t3200*t3321 - 1.*t2748*t3234*t4365)*var2[2] + (t119*t4452*t9452 + t119*t4323*t9456 + t3568*(-1.*t119*t3600*t4323 + t2748*t3618*t4323 - 1.*t119*t3079*t4394 + t2748*t3244*t4394 + t9553 + t9558) + t3079*(t119*t3568*t4394 - 1.*t2748*t3654*t4394 + t119*t3600*t4452 - 1.*t2748*t3618*t4452 + t9565 + t9567))*var2[3] + (t3418*t9413 + t3059*t9417 + t3300*(-1.*t3327*t4323 - 1.*t3059*t4394 + t9553 + t9558) + t3226*(t3418*t4394 + t3327*t4452 + t9565 + t9567))*var2[4])*var2[5] + t9188*var2[12] + (t119*t4086*var2[0] + (t3234*t4037 + t2748*t3200*t4086)*var2[1] + (t3200*t4037 - 1.*t2748*t3234*t4086)*var2[2] + (t119*t4149*t9452 + t119*t3965*t9456 + t3568*(-1.*t119*t3600*t3965 + t2748*t3618*t3965 - 1.*t119*t3079*t4106 + t2748*t3244*t4106 + t9507 + t9509) + t3079*(t119*t3568*t4106 - 1.*t2748*t3654*t4106 + t119*t3600*t4149 - 1.*t2748*t3618*t4149 + t9513 + t9515))*var2[3] + (t4019*t9413 + t3988*t9417 + t3300*(-1.*t3327*t3965 - 1.*t3059*t4106 + t9507 + t9509) + t3226*(t3418*t4106 + t3327*t4149 + t9513 + t9515))*var2[4] + (t2993*(t2629*t2720 + t2720*t3753 + t2707*t3828 + t2692*t3881) + t1385*(-1.*t2629*t3005 - 1.*t3005*t3753 - 1.*t3041*t3828 - 1.*t2692*t3960))*var2[5])*var2[12] + t9241*var2[13] + (t7172*var2[0] + (t3234*t7051 - 1.*t3200*t7190)*var2[1] + (t3200*t7051 + t3234*t7190)*var2[2] + (t7159*t9452 + t6989*t9456 + t3568*(-1.*t3600*t6989 - 1.*t3618*t7012 - 1.*t3079*t7215 - 1.*t3244*t7225 + t9892 + t9893) + t3079*(t3600*t7159 + t3568*t7215 + t3654*t7225 + t3618*t7239 + t9898 + t9899))*var2[3] + (t7046*t9413 + t6999*t9417 + t3300*(-1.*t3327*t6983 - 1.*t3059*t7093 + t9841 + t9844 + t9892 + t9893) + t3226*(t3418*t7093 + t3327*t7117 + t9852 + t9855 + t9898 + t9899))*var2[4] + (t6396*t9271 + t6924*t9298 + t1385*(-1.*t3005*t6803 - 1.*t3041*t6819 - 1.*t2692*t6940 - 1.*t2629*t6979 + t9841 + t9844) + t2993*(t2720*t6803 + t2707*t6819 + t2629*t6876 + t2692*t6880 + t9852 + t9855))*var2[5] + (0.15121*t6447 + 0.15121*t6534 + t6396*t9178 + t6924*t9185 + t1385*(-1.*t2255*t6357 - 1.*t2008*t6380 - 1.*t1114*t6514 - 1.*t1223*t6603 + t9841 + t9844) + t2993*(t2340*t6514 + t2293*t6603 + t2008*t6636 + t2255*t6674 + t9852 + t9855))*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t6093*var2[0] + (t3234*t5923 - 1.*t3200*t6119)*var2[1] + (t3200*t5923 + t3234*t6119)*var2[2] + (t6172*t9452 + t5794*t9456 + t3079*(t3568*t6057 + t3654*t6077 + t3600*t6172 + t3618*t6191 + t9803 + t9805) + t3568*(-1.*t3600*t5794 - 1.*t3618*t5838 - 1.*t3079*t6057 - 1.*t3244*t6077 + t9810 + t9813))*var2[3] + (t6015*t9413 + t5807*t9417 + t3226*(t3418*t5877 + t3327*t5989 + t9691 + t9699 + t9803 + t9805) + t3300*(-1.*t3327*t5791 - 1.*t3059*t5877 + t9711 + t9728 + t9810 + t9813))*var2[4] + (t5248*t9271 + t5737*t9298 + t2993*(t2707*t5545 + t2720*t5563 + t2629*t5626 + t2692*t5662 + t9691 + t9699) + t1385*(-1.*t3041*t5545 - 1.*t3005*t5563 - 1.*t2692*t5758 - 1.*t2629*t5786 + t9711 + t9728))*var2[5] + (0.15121*t5031 + 0.15121*t5054 + t5248*t9178 + t5737*t9185 + t2993*(t2293*t4927 + t2340*t4966 + t2008*t5218 + t2255*t5268 + t9691 + t9699) + t1385*(-1.*t2008*t4743 - 1.*t2255*t4766 - 1.*t1223*t4927 - 1.*t1114*t4966 + t9711 + t9728))*var2[12] + (0.038749*t5005 - 0.281209*t5020 + 1.e-6*(7.e-6*t4775 + 4.e-6*t4792 + 6.5e-11*t671) + t5190*t9212 + t4730*t9219 + t915*t9748 + t1341*t9758 + 4.e-6*(-1.*t5139*t9212 - 1.*t4698*t9219 - 1.*t1083*t9748 - 1.*t1262*t9758) - 7.e-6*(t5205*t9212 + t4738*t9219 + t754*t9748 + t1381*t9758))*var2[13])*var2[14] + t3590*var3[0] + t9408*var3[1] + t9403*var3[2] + t9459*var3[3] + t9419*var3[4] + t9302*var3[5] + t9188*var3[12] + t9241*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void ddh_RlFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
