/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:20 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t184;
  double t212;
  double t263;
  double t331;
  double t59;
  double t339;
  double t471;
  double t480;
  double t129;
  double t403;
  double t664;
  double t264;
  double t291;
  double t360;
  double t386;
  double t412;
  double t424;
  double t448;
  double t452;
  double t756;
  double t551;
  double t552;
  double t580;
  double t592;
  double t603;
  double t649;
  double t681;
  double t693;
  double t703;
  double t791;
  double t794;
  double t795;
  double t827;
  double t829;
  double t845;
  double t891;
  double t899;
  double t103;
  double t113;
  double t950;
  double t1051;
  double t960;
  double t964;
  double t970;
  double t988;
  double t993;
  double t1007;
  double t1013;
  double t1018;
  double t1020;
  double t949;
  double t1054;
  double t1093;
  double t1099;
  double t1108;
  double t1124;
  double t1130;
  double t1137;
  double t1143;
  double t1154;
  double t1157;
  double t14;
  double t773;
  double t778;
  double t132;
  double t171;
  double t499;
  double t506;
  double t927;
  double t935;
  double t1297;
  double t1300;
  double t1327;
  double t1329;
  double t1368;
  double t1372;
  double t1389;
  double t1439;
  double t1446;
  double t1474;
  double t1494;
  double t1543;
  double t1545;
  double t1571;
  double t1585;
  double t1596;
  double t1631;
  double t1637;
  double t1668;
  double t1213;
  double t1781;
  double t1786;
  double t1799;
  double t1813;
  double t1824;
  double t1844;
  double t1872;
  double t1897;
  double t1944;
  double t1947;
  double t1948;
  double t1969;
  double t1982;
  double t1983;
  double t1984;
  double t1989;
  double t1186;
  double t1192;
  double t1205;
  double t1050;
  double t1158;
  double t1159;
  double t1698;
  double t1703;
  double t1713;
  double t1592;
  double t1682;
  double t1684;
  double t2053;
  double t2067;
  double t2074;
  double t1977;
  double t2009;
  double t2021;
  double t2146;
  double t2168;
  double t2174;
  double t2325;
  double t2362;
  double t2367;
  double t2368;
  double t2369;
  double t2373;
  double t2374;
  double t2379;
  double t2380;
  double t2392;
  double t2397;
  double t2400;
  double t2407;
  double t2411;
  double t2416;
  double t2417;
  double t2342;
  double t2277;
  double t2280;
  double t2490;
  double t2492;
  double t2497;
  double t2499;
  double t2513;
  double t2522;
  double t2524;
  double t2525;
  double t2610;
  double t2628;
  double t2629;
  double t2635;
  double t2641;
  double t2649;
  double t2655;
  double t2656;
  double t2762;
  double t2736;
  double t2743;
  double t2747;
  double t2784;
  double t2786;
  double t2792;
  double t2794;
  double t2804;
  double t2805;
  double t2817;
  double t2818;
  double t2823;
  double t2825;
  double t2835;
  double t2838;
  double t2840;
  double t2842;
  double t2846;
  double t2864;
  double t2875;
  double t2876;
  double t2894;
  double t2901;
  double t2904;
  double t2906;
  double t2907;
  double t2952;
  double t2954;
  double t2960;
  double t2961;
  double t2965;
  double t2966;
  double t2967;
  double t2973;
  double t2974;
  double t2979;
  double t3003;
  double t3005;
  double t3007;
  double t3008;
  double t3013;
  double t3021;
  double t3024;
  double t3027;
  double t3106;
  double t3127;
  double t3143;
  double t3154;
  double t3185;
  double t3202;
  double t3252;
  double t3315;
  double t3316;
  double t3327;
  double t3329;
  double t3350;
  double t3365;
  double t3370;
  double t3376;
  double t1365;
  double t1441;
  double t1514;
  double t1534;
  double t1694;
  double t1720;
  double t1727;
  double t1806;
  double t1867;
  double t1903;
  double t1925;
  double t2032;
  double t2083;
  double t2100;
  double t459;
  double t746;
  double t900;
  double t908;
  double t1170;
  double t1224;
  double t1236;
  double t915;
  double t1256;
  double t1279;
  double t3507;
  double t3537;
  double t1537;
  double t1752;
  double t1770;
  double t1934;
  double t2120;
  double t2122;
  double t2145;
  double t2147;
  double t2167;
  double t2169;
  double t2173;
  double t2176;
  double t2200;
  double t2202;
  double t2220;
  double t2222;
  double t2233;
  double t2236;
  double t2241;
  double t2242;
  double t2246;
  double t2247;
  double t2252;
  double t2253;
  double t2255;
  double t2257;
  double t2265;
  double t2433;
  double t2434;
  double t2438;
  double t2383;
  double t2422;
  double t2424;
  double t2285;
  double t2298;
  double t2343;
  double t2344;
  double t2431;
  double t2443;
  double t2452;
  double t2560;
  double t2566;
  double t2571;
  double t2505;
  double t2527;
  double t2535;
  double t2471;
  double t2474;
  double t2479;
  double t2482;
  double t2552;
  double t2576;
  double t2577;
  double t2695;
  double t2698;
  double t2701;
  double t2637;
  double t2665;
  double t2666;
  double t2589;
  double t2590;
  double t2598;
  double t2600;
  double t2681;
  double t2702;
  double t2723;
  double t2929;
  double t2931;
  double t2932;
  double t2897;
  double t2911;
  double t2913;
  double t2801;
  double t2832;
  double t2847;
  double t2852;
  double t2917;
  double t2936;
  double t2942;
  double t3031;
  double t3032;
  double t3041;
  double t3010;
  double t3028;
  double t3029;
  double t2964;
  double t2972;
  double t2982;
  double t2991;
  double t3030;
  double t3050;
  double t3064;
  double t3403;
  double t3419;
  double t3429;
  double t3333;
  double t3377;
  double t3385;
  double t3138;
  double t3159;
  double t3261;
  double t3296;
  double t3402;
  double t3430;
  double t3434;
  double t3553;
  double t3558;
  double t3566;
  double t3586;
  double t3589;
  double t3597;
  double t3515;
  double t3522;
  double t3530;
  double t4201;
  double t4210;
  double t4215;
  double t4149;
  double t4160;
  double t4174;
  double t4176;
  double t4180;
  double t4195;
  double t3651;
  double t3657;
  double t3658;
  double t3678;
  double t3689;
  double t3698;
  double t3707;
  double t3708;
  double t3709;
  double t3800;
  double t3801;
  double t3832;
  double t3833;
  double t3845;
  double t3851;
  double t3873;
  double t3876;
  double t3880;
  double t3892;
  double t3895;
  double t3898;
  double t3909;
  double t3920;
  double t3923;
  double t3925;
  double t3927;
  double t3928;
  double t3942;
  double t3956;
  double t3959;
  double t3962;
  double t3963;
  double t3980;
  double t3998;
  double t3999;
  double t4000;
  double t4007;
  double t4011;
  double t4012;
  double t4045;
  double t4055;
  double t4064;
  double t4075;
  double t4076;
  double t4077;
  double t4095;
  double t4100;
  double t4101;
  double t4109;
  double t4112;
  double t4114;
  double t3470;
  double t3471;
  double t3474;
  double t4553;
  double t4561;
  double t4562;
  double t4573;
  double t4574;
  double t4576;
  double t4577;
  double t4593;
  double t4601;
  double t4602;
  double t4603;
  double t4615;
  double t4616;
  double t4617;
  double t4618;
  double t4622;
  double t4630;
  double t4648;
  double t4683;
  double t4698;
  double t4702;
  double t4710;
  double t4715;
  double t4716;
  double t4724;
  double t4726;
  double t4730;
  double t4731;
  double t4744;
  double t4769;
  double t4777;
  double t4781;
  double t4546;
  double t4835;
  double t4794;
  double t4800;
  double t4810;
  double t4812;
  double t4814;
  double t4818;
  double t4832;
  double t4836;
  double t4837;
  double t4838;
  double t4840;
  double t4846;
  double t4847;
  double t4851;
  double t4852;
  double t4854;
  double t4856;
  double t4859;
  double t4864;
  double t4866;
  double t4869;
  double t4870;
  double t4872;
  double t4544;
  double t4545;
  double t4551;
  double t4552;
  double t4555;
  double t4558;
  double t4604;
  double t4711;
  double t4783;
  double t4784;
  double t4808;
  double t4849;
  double t4873;
  double t4875;
  double t4876;
  double t4882;
  double t4884;
  double t4889;
  double t4890;
  double t4892;
  double t4893;
  double t3498;
  double t3499;
  double t3500;
  double t4913;
  double t4915;
  double t4916;
  double t4905;
  double t4906;
  double t4910;
  double t4790;
  double t4896;
  double t4899;
  double t4925;
  double t4928;
  double t4930;
  double t3477;
  double t3494;
  double t3495;
  double t5154;
  double t5161;
  double t5166;
  double t4936;
  double t4939;
  double t4940;
  double t4943;
  double t4956;
  double t4962;
  double t4970;
  double t4975;
  double t5017;
  double t5019;
  double t5024;
  double t5026;
  double t5044;
  double t5045;
  double t5046;
  double t5049;
  double t5088;
  double t5089;
  double t5092;
  double t5093;
  double t5118;
  double t5122;
  double t5123;
  double t5127;
  double t5359;
  double t5384;
  double t5387;
  double t5394;
  double t5405;
  double t5380;
  double t5421;
  double t5426;
  double t5427;
  double t5382;
  double t5406;
  double t5413;
  double t2489;
  double t2578;
  double t2579;
  double t2346;
  double t2464;
  double t2468;
  double t5641;
  double t5643;
  double t5645;
  double t5647;
  double t5650;
  double t5651;
  double t5652;
  double t5653;
  double t5657;
  double t5662;
  double t5663;
  double t5670;
  double t5674;
  double t5681;
  double t5683;
  double t5684;
  double t5685;
  double t5686;
  double t5687;
  double t5699;
  double t5704;
  double t5706;
  double t5661;
  double t5688;
  double t5692;
  double t5724;
  double t5729;
  double t5730;
  double t5735;
  double t5736;
  double t5772;
  double t5776;
  double t5777;
  double t5779;
  double t5781;
  double t5784;
  double t5787;
  double t5698;
  double t5713;
  double t5714;
  double t5780;
  double t5788;
  double t5791;
  double t5793;
  double t5805;
  double t5810;
  double t2608;
  double t2725;
  double t2726;
  double t5975;
  double t5977;
  double t5978;
  double t5982;
  double t5985;
  double t5986;
  double t5988;
  double t5989;
  double t5996;
  double t6000;
  double t6002;
  double t6005;
  double t6007;
  double t6013;
  double t6014;
  double t6018;
  double t6024;
  double t6027;
  double t6030;
  double t6032;
  double t6035;
  double t6037;
  double t6042;
  double t6043;
  double t5995;
  double t6023;
  double t6046;
  double t6051;
  double t6062;
  double t6064;
  double t6067;
  double t6070;
  double t6076;
  double t6080;
  double t6081;
  double t6057;
  double t6071;
  double t6073;
  double t6094;
  double t6097;
  double t6098;
  double t6101;
  double t6104;
  double t6109;
  double t6110;
  double t2853;
  double t2945;
  double t2946;
  double t6074;
  double t6082;
  double t6085;
  double t6103;
  double t6114;
  double t6115;
  double t6117;
  double t6118;
  double t6119;
  double t3001;
  double t3069;
  double t3097;
  double t3304;
  double t3438;
  double t3456;
  double t5148;
  double t5149;
  double t5188;
  double t5189;
  double t5216;
  double t5222;
  double t5253;
  double t5256;
  double t5299;
  double t5302;
  double t5324;
  double t5328;
  double t6298;
  double t6310;
  double t6312;
  double t6314;
  double t6319;
  double t6322;
  double t5414;
  double t5419;
  double t5450;
  double t5458;
  double t6335;
  double t6336;
  double t6338;
  double t6349;
  double t6350;
  double t6358;
  double t5487;
  double t5488;
  double t5512;
  double t5514;
  double t6368;
  double t6369;
  double t6371;
  double t6398;
  double t6402;
  double t6403;
  double t5539;
  double t5544;
  double t5570;
  double t5571;
  double t5640;
  double t5716;
  double t5829;
  double t5830;
  double t5865;
  double t5867;
  double t5882;
  double t5887;
  double t5917;
  double t5918;
  double t5934;
  double t5937;
  double t6087;
  double t6088;
  double t6133;
  double t6136;
  double t6179;
  double t6180;
  double t6202;
  double t6203;
  double t6221;
  double t6223;
  double t6246;
  double t6247;
  double t6526;
  double t6527;
  double t6533;
  double t6534;
  double t6557;
  double t6566;
  double t6595;
  double t6600;
  double t6643;
  double t6652;
  double t6673;
  double t6675;
  double t6697;
  double t6702;
  double t6722;
  double t6725;
  double t7131;
  double t7135;
  double t7136;
  double t7138;
  double t7139;
  double t7140;
  double t6784;
  double t6787;
  double t7168;
  double t7169;
  double t7174;
  double t7177;
  double t7179;
  double t7181;
  double t6835;
  double t6845;
  double t6877;
  double t6879;
  double t7080;
  double t7081;
  double t7082;
  double t7085;
  double t7086;
  double t7088;
  double t6897;
  double t6898;
  double t7467;
  double t7469;
  double t7471;
  double t7473;
  double t7475;
  double t7476;
  double t7555;
  double t7556;
  double t7557;
  double t7564;
  double t7565;
  double t7567;
  double t7402;
  double t7403;
  double t7405;
  double t7409;
  double t7410;
  double t7415;
  double t7815;
  double t7817;
  double t7818;
  double t7823;
  double t7825;
  double t7828;
  double t7829;
  double t7832;
  double t7834;
  double t7835;
  double t7836;
  double t7837;
  double t7842;
  double t7843;
  double t7845;
  double t7846;
  double t7847;
  double t7848;
  double t7850;
  double t7851;
  double t7852;
  double t7853;
  double t7919;
  double t7920;
  double t7923;
  double t7926;
  double t7928;
  double t7930;
  double t7932;
  double t7936;
  double t7937;
  double t7938;
  double t7941;
  double t7943;
  double t7944;
  double t7945;
  double t7946;
  double t7949;
  double t7950;
  double t7951;
  double t7952;
  double t7953;
  double t7956;
  double t7957;
  double t8001;
  double t8002;
  double t8003;
  double t8004;
  double t8006;
  double t8007;
  double t8008;
  double t8010;
  double t8011;
  double t8012;
  double t8013;
  double t8016;
  double t8017;
  double t8018;
  double t8019;
  double t8021;
  double t8026;
  double t8029;
  double t8030;
  double t8031;
  double t8039;
  double t8040;
  double t8111;
  t184 = Cos(var1[14]);
  t212 = -1.*t184;
  t263 = 1. + t212;
  t331 = Sin(var1[14]);
  t59 = Cos(var1[13]);
  t339 = -7.e-6*t331;
  t471 = -1.*t59;
  t480 = 1. + t471;
  t129 = Sin(var1[13]);
  t403 = -7.e-6*t263;
  t664 = -1.*t331;
  t264 = -6.5e-11*t263;
  t291 = 4.e-6*t263;
  t360 = t291 + t339;
  t386 = 4.e-6*t360;
  t412 = -4.e-6*t331;
  t424 = t403 + t412;
  t448 = -7.e-6*t424;
  t452 = 1. + t264 + t386 + t448;
  t756 = 2.8e-11*t480;
  t551 = 1.000000000049*t263;
  t552 = -1. + t551;
  t580 = 4.e-6*t552;
  t592 = -1. + t184;
  t603 = 4.e-6*t592;
  t649 = 2.8e-11*t263;
  t681 = t649 + t664;
  t693 = -7.e-6*t681;
  t703 = t580 + t603 + t693 + t339;
  t791 = -1.000000000016*t263;
  t794 = 1. + t791;
  t795 = -7.e-6*t794;
  t827 = -2.8e-11*t263;
  t829 = t827 + t664;
  t845 = 4.e-6*t829;
  t891 = 4.e-6*t331;
  t899 = t795 + t403 + t845 + t891;
  t103 = -1. + t59;
  t113 = 4.e-6*t103;
  t950 = -7.e-6*t480;
  t1051 = Sin(var1[12]);
  t960 = 4.e-6*t129;
  t964 = t950 + t960;
  t970 = t964*t452;
  t988 = t756 + t129;
  t993 = t988*t703;
  t1007 = -1.000000000016*t480;
  t1013 = 1. + t1007;
  t1018 = t1013*t899;
  t1020 = t970 + t993 + t1018;
  t949 = Cos(var1[12]);
  t1054 = -6.5e-11*t480;
  t1093 = 1. + t1054;
  t1099 = t1093*t452;
  t1108 = 7.e-6*t129;
  t1124 = t113 + t1108;
  t1130 = t1124*t703;
  t1137 = -4.e-6*t129;
  t1143 = t950 + t1137;
  t1154 = t1143*t899;
  t1157 = t1099 + t1130 + t1154;
  t14 = Cos(var1[4]);
  t773 = -1.*t129;
  t778 = t756 + t773;
  t132 = -7.e-6*t129;
  t171 = t113 + t132;
  t499 = -1.000000000049*t480;
  t506 = 1. + t499;
  t927 = Sin(var1[4]);
  t935 = Cos(var1[5]);
  t1297 = 1.000000000016*t263;
  t1300 = t403 + t891;
  t1327 = -7.e-6*t1300;
  t1329 = -1. + t1297 + t1327;
  t1368 = 1. + t264;
  t1372 = -7.e-6*t1368;
  t1389 = 7.e-6*t263;
  t1439 = t1372 + t1389 + t891;
  t1446 = t603 + t339;
  t1474 = -7.e-6*t1446;
  t1494 = t827 + t1474 + t331;
  t1543 = t1143*t1329;
  t1545 = t1093*t1439;
  t1571 = t1124*t1494;
  t1585 = t1543 + t1545 + t1571;
  t1596 = t1013*t1329;
  t1631 = t964*t1439;
  t1637 = t988*t1494;
  t1668 = t1596 + t1631 + t1637;
  t1213 = Sin(var1[5]);
  t1781 = -1.000000000049*t263;
  t1786 = 4.e-6*t1446;
  t1799 = 1. + t1781 + t1786;
  t1813 = 4.e-6*t1368;
  t1824 = 7.e-6*t331;
  t1844 = t1813 + t603 + t1824;
  t1872 = 4.e-6*t1300;
  t1897 = t649 + t1872 + t331;
  t1944 = t988*t1799;
  t1947 = t964*t1844;
  t1948 = t1013*t1897;
  t1969 = t1944 + t1947 + t1948;
  t1982 = t1124*t1799;
  t1983 = t1093*t1844;
  t1984 = t1143*t1897;
  t1989 = t1982 + t1983 + t1984;
  t1186 = t1051*t1020;
  t1192 = t949*t1157;
  t1205 = t1186 + t1192;
  t1050 = t949*t1020;
  t1158 = -1.*t1051*t1157;
  t1159 = t1050 + t1158;
  t1698 = t949*t1585;
  t1703 = t1051*t1668;
  t1713 = t1698 + t1703;
  t1592 = -1.*t1051*t1585;
  t1682 = t949*t1668;
  t1684 = t1592 + t1682;
  t2053 = t1051*t1969;
  t2067 = t949*t1989;
  t2074 = t2053 + t2067;
  t1977 = t949*t1969;
  t2009 = -1.*t1051*t1989;
  t2021 = t1977 + t2009;
  t2146 = -1.*t1159*t1213;
  t2168 = -1.*t1684*t1213;
  t2174 = -1.*t2021*t1213;
  t2325 = 2.8e-11*t129;
  t2362 = -6.5e-11*t129*t452;
  t2367 = 7.e-6*t59;
  t2368 = t2367 + t1137;
  t2369 = t2368*t703;
  t2373 = -4.e-6*t59;
  t2374 = t2373 + t132;
  t2379 = t2374*t899;
  t2380 = t2362 + t2369 + t2379;
  t2392 = 4.e-6*t59;
  t2397 = t2392 + t132;
  t2400 = t2397*t452;
  t2407 = t59 + t2325;
  t2411 = t2407*t703;
  t2416 = -1.000000000016*t129*t899;
  t2417 = t2400 + t2411 + t2416;
  t2342 = t471 + t2325;
  t2277 = -7.e-6*t59;
  t2280 = t2277 + t1137;
  t2490 = t2374*t1329;
  t2492 = -6.5e-11*t129*t1439;
  t2497 = t2368*t1494;
  t2499 = t2490 + t2492 + t2497;
  t2513 = -1.000000000016*t129*t1329;
  t2522 = t2397*t1439;
  t2524 = t2407*t1494;
  t2525 = t2513 + t2522 + t2524;
  t2610 = t2368*t1799;
  t2628 = -6.5e-11*t129*t1844;
  t2629 = t2374*t1897;
  t2635 = t2610 + t2628 + t2629;
  t2641 = t2407*t1799;
  t2649 = t2397*t1844;
  t2655 = -1.000000000016*t129*t1897;
  t2656 = t2641 + t2649 + t2655;
  t2762 = -7.e-6*t184;
  t2736 = -4.e-6*t184;
  t2743 = t2736 + t339;
  t2747 = -7.e-6*t2743;
  t2784 = t2762 + t891;
  t2786 = 4.e-6*t2784;
  t2792 = -6.5e-11*t331;
  t2794 = t2747 + t2786 + t2792;
  t2804 = 4.e-6*t184;
  t2805 = -2.8e-11*t331;
  t2817 = t212 + t2805;
  t2818 = 4.e-6*t2817;
  t2823 = 1.12e-16*t331;
  t2825 = t2804 + t2818 + t2823;
  t2835 = 2.8e-11*t331;
  t2838 = t212 + t2835;
  t2840 = -7.e-6*t2838;
  t2842 = 1.96e-16*t331;
  t2846 = t2762 + t2840 + t2842;
  t2864 = t1093*t2794;
  t2875 = t1143*t2825;
  t2876 = t1124*t2846;
  t2894 = t2864 + t2875 + t2876;
  t2901 = t964*t2794;
  t2904 = t1013*t2825;
  t2906 = t988*t2846;
  t2907 = t2901 + t2904 + t2906;
  t2952 = t2762 + t412;
  t2954 = 4.e-6*t2952;
  t2960 = -1.000000000049*t331;
  t2961 = t2954 + t2960;
  t2965 = 7.e-6*t184;
  t2966 = -4.00000000026e-6*t331;
  t2967 = t2965 + t2966;
  t2973 = t2804 + t339;
  t2974 = 4.e-6*t2973;
  t2979 = t184 + t2974 + t2835;
  t3003 = t988*t2961;
  t3005 = t964*t2967;
  t3007 = t1013*t2979;
  t3008 = t3003 + t3005 + t3007;
  t3013 = t1124*t2961;
  t3021 = t1093*t2967;
  t3024 = t1143*t2979;
  t3027 = t3013 + t3021 + t3024;
  t3106 = -7.e-6*t2952;
  t3127 = t184 + t3106 + t2805;
  t3143 = 7.000000000455e-6*t331;
  t3154 = t2804 + t3143;
  t3185 = -7.e-6*t2973;
  t3202 = 1.000000000016*t331;
  t3252 = t3185 + t3202;
  t3315 = t988*t3127;
  t3316 = t964*t3154;
  t3327 = t1013*t3252;
  t3329 = t3315 + t3316 + t3327;
  t3350 = t1124*t3127;
  t3365 = t1093*t3154;
  t3370 = t1143*t3252;
  t3376 = t3350 + t3365 + t3370;
  t1365 = t778*t1329;
  t1441 = t171*t1439;
  t1514 = t506*t1494;
  t1534 = t1365 + t1441 + t1514;
  t1694 = t935*t1684;
  t1720 = -1.*t1713*t1213;
  t1727 = t1694 + t1720;
  t1806 = t506*t1799;
  t1867 = t171*t1844;
  t1903 = t778*t1897;
  t1925 = t1806 + t1867 + t1903;
  t2032 = t935*t2021;
  t2083 = -1.*t2074*t1213;
  t2100 = t2032 + t2083;
  t459 = t171*t452;
  t746 = t506*t703;
  t900 = t778*t899;
  t908 = t459 + t746 + t900;
  t1170 = t935*t1159;
  t1224 = -1.*t1205*t1213;
  t1236 = t1170 + t1224;
  t915 = t14*t908;
  t1256 = -1.*t927*t1236;
  t1279 = t915 + t1256;
  t3507 = Sin(var1[3]);
  t3537 = Cos(var1[3]);
  t1537 = t14*t1534;
  t1752 = -1.*t927*t1727;
  t1770 = t1537 + t1752;
  t1934 = t14*t1925;
  t2120 = -1.*t927*t2100;
  t2122 = t1934 + t2120;
  t2145 = -1.*t935*t1205;
  t2147 = t2145 + t2146;
  t2167 = -1.*t935*t1713;
  t2169 = t2167 + t2168;
  t2173 = -1.*t935*t2074;
  t2176 = t2173 + t2174;
  t2200 = -1.*t1051*t1020;
  t2202 = -1.*t949*t1157;
  t2220 = t2200 + t2202;
  t2222 = t935*t2220;
  t2233 = t2222 + t2146;
  t2236 = -1.*t949*t1585;
  t2241 = -1.*t1051*t1668;
  t2242 = t2236 + t2241;
  t2246 = t935*t2242;
  t2247 = t2246 + t2168;
  t2252 = -1.*t1051*t1969;
  t2253 = -1.*t949*t1989;
  t2255 = t2252 + t2253;
  t2257 = t935*t2255;
  t2265 = t2257 + t2174;
  t2433 = t949*t2380;
  t2434 = t1051*t2417;
  t2438 = t2433 + t2434;
  t2383 = -1.*t1051*t2380;
  t2422 = t949*t2417;
  t2424 = t2383 + t2422;
  t2285 = t2280*t452;
  t2298 = -1.000000000049*t129*t703;
  t2343 = t2342*t899;
  t2344 = t2285 + t2298 + t2343;
  t2431 = t935*t2424;
  t2443 = -1.*t2438*t1213;
  t2452 = t2431 + t2443;
  t2560 = t949*t2499;
  t2566 = t1051*t2525;
  t2571 = t2560 + t2566;
  t2505 = -1.*t1051*t2499;
  t2527 = t949*t2525;
  t2535 = t2505 + t2527;
  t2471 = t2342*t1329;
  t2474 = t2280*t1439;
  t2479 = -1.000000000049*t129*t1494;
  t2482 = t2471 + t2474 + t2479;
  t2552 = t935*t2535;
  t2576 = -1.*t2571*t1213;
  t2577 = t2552 + t2576;
  t2695 = t949*t2635;
  t2698 = t1051*t2656;
  t2701 = t2695 + t2698;
  t2637 = -1.*t1051*t2635;
  t2665 = t949*t2656;
  t2666 = t2637 + t2665;
  t2589 = -1.000000000049*t129*t1799;
  t2590 = t2280*t1844;
  t2598 = t2342*t1897;
  t2600 = t2589 + t2590 + t2598;
  t2681 = t935*t2666;
  t2702 = -1.*t2701*t1213;
  t2723 = t2681 + t2702;
  t2929 = t949*t2894;
  t2931 = t1051*t2907;
  t2932 = t2929 + t2931;
  t2897 = -1.*t1051*t2894;
  t2911 = t949*t2907;
  t2913 = t2897 + t2911;
  t2801 = t171*t2794;
  t2832 = t778*t2825;
  t2847 = t506*t2846;
  t2852 = t2801 + t2832 + t2847;
  t2917 = t935*t2913;
  t2936 = -1.*t2932*t1213;
  t2942 = t2917 + t2936;
  t3031 = t1051*t3008;
  t3032 = t949*t3027;
  t3041 = t3031 + t3032;
  t3010 = t949*t3008;
  t3028 = -1.*t1051*t3027;
  t3029 = t3010 + t3028;
  t2964 = t506*t2961;
  t2972 = t171*t2967;
  t2982 = t778*t2979;
  t2991 = t2964 + t2972 + t2982;
  t3030 = t935*t3029;
  t3050 = -1.*t3041*t1213;
  t3064 = t3030 + t3050;
  t3403 = t1051*t3329;
  t3419 = t949*t3376;
  t3429 = t3403 + t3419;
  t3333 = t949*t3329;
  t3377 = -1.*t1051*t3376;
  t3385 = t3333 + t3377;
  t3138 = t506*t3127;
  t3159 = t171*t3154;
  t3261 = t778*t3252;
  t3296 = t3138 + t3159 + t3261;
  t3402 = t935*t3385;
  t3430 = -1.*t3429*t1213;
  t3434 = t3402 + t3430;
  t3553 = t935*t1713;
  t3558 = t1684*t1213;
  t3566 = t3553 + t3558;
  t3586 = t935*t2074;
  t3589 = t2021*t1213;
  t3597 = t3586 + t3589;
  t3515 = t935*t1205;
  t3522 = t1159*t1213;
  t3530 = t3515 + t3522;
  t4201 = t3537*t3530;
  t4210 = -1.*t3507*t1279;
  t4215 = t4201 + t4210;
  t4149 = t3537*t3566;
  t4160 = -1.*t3507*t1770;
  t4174 = t4149 + t4160;
  t4176 = t3537*t3597;
  t4180 = -1.*t3507*t2122;
  t4195 = t4176 + t4180;
  t3651 = -1.*t908*t927;
  t3657 = -1.*t14*t1236;
  t3658 = t3651 + t3657;
  t3678 = -1.*t1534*t927;
  t3689 = -1.*t14*t1727;
  t3698 = t3678 + t3689;
  t3707 = -1.*t1925*t927;
  t3708 = -1.*t14*t2100;
  t3709 = t3707 + t3708;
  t3800 = t2220*t1213;
  t3801 = t1170 + t3800;
  t3832 = t2242*t1213;
  t3833 = t1694 + t3832;
  t3845 = t2255*t1213;
  t3851 = t2032 + t3845;
  t3873 = t935*t2438;
  t3876 = t2424*t1213;
  t3880 = t3873 + t3876;
  t3892 = t14*t2344;
  t3895 = -1.*t927*t2452;
  t3898 = t3892 + t3895;
  t3909 = t935*t2571;
  t3920 = t2535*t1213;
  t3923 = t3909 + t3920;
  t3925 = t14*t2482;
  t3927 = -1.*t927*t2577;
  t3928 = t3925 + t3927;
  t3942 = t935*t2701;
  t3956 = t2666*t1213;
  t3959 = t3942 + t3956;
  t3962 = t14*t2600;
  t3963 = -1.*t927*t2723;
  t3980 = t3962 + t3963;
  t3998 = t935*t2932;
  t3999 = t2913*t1213;
  t4000 = t3998 + t3999;
  t4007 = t14*t2852;
  t4011 = -1.*t927*t2942;
  t4012 = t4007 + t4011;
  t4045 = t935*t3041;
  t4055 = t3029*t1213;
  t4064 = t4045 + t4055;
  t4075 = t14*t2991;
  t4076 = -1.*t927*t3064;
  t4077 = t4075 + t4076;
  t4095 = t935*t3429;
  t4100 = t3385*t1213;
  t4101 = t4095 + t4100;
  t4109 = t14*t3296;
  t4112 = -1.*t927*t3434;
  t4114 = t4109 + t4112;
  t3470 = t1534*t927;
  t3471 = t14*t1727;
  t3474 = t3470 + t3471;
  t4553 = -2.8e-11*t480;
  t4561 = -2.598649999999999e-7*var1[14];
  t4562 = 0.148705*t1368;
  t4573 = -2.3905277499999995e-16*t263;
  t4574 = -0.038922999986*t360;
  t4576 = -0.80315*t424;
  t4577 = t1389 + t891;
  t4593 = -0.503149000008*t4577;
  t4601 = t603 + t1824;
  t4602 = -0.038924*t4601;
  t4603 = t4561 + t4562 + t4573 + t4574 + t4576 + t4593 + t4602;
  t4615 = 1.0394599999999997e-12*var1[14];
  t4616 = 1. + t1781;
  t4617 = -0.038924*t4616;
  t4618 = -0.03892299998790722*t263;
  t4622 = -0.80315*t681;
  t4630 = 0.148705*t1446;
  t4648 = t291 + t1824;
  t4683 = -3.6777349999999994e-6*t4648;
  t4698 = t827 + t331;
  t4702 = -0.503149000008*t4698;
  t4710 = t4615 + t4617 + t4618 + t4622 + t4630 + t4683 + t4702;
  t4715 = 1.8190549999999993e-12*var1[14];
  t4716 = -0.80315*t794;
  t4724 = -0.5031490000160505*t263;
  t4726 = -0.038922999986*t829;
  t4730 = t1389 + t412;
  t4731 = -3.6777349999999994e-6*t4730;
  t4744 = 0.148705*t1300;
  t4769 = t649 + t331;
  t4777 = -0.038924*t4769;
  t4781 = t4715 + t4716 + t4724 + t4726 + t4731 + t4744 + t4777;
  t4546 = 4.e-6*t480;
  t4835 = 7.e-6*t480;
  t4794 = -1.*t949;
  t4800 = 1. + t4794;
  t4810 = 0.15121*t1051;
  t4812 = 1.0248489999999998e-12*var1[13];
  t4814 = -0.28120900000849935*t480;
  t4818 = t4553 + t773;
  t4832 = -0.038748999993*t4818;
  t4836 = t4835 + t1137;
  t4837 = -2.123459e-6*t4836;
  t4838 = t964*t4603;
  t4840 = t988*t4710;
  t4846 = t1013*t4781;
  t4847 = t4812 + t4814 + t4832 + t4837 + t4838 + t4840 + t4846;
  t4851 = -1.4640699999999997e-7*var1[13];
  t4852 = -1.38024835e-16*t480;
  t4854 = t4546 + t132;
  t4856 = -0.038748999993*t4854;
  t4859 = t4835 + t960;
  t4864 = -0.281209000004*t4859;
  t4866 = t1093*t4603;
  t4869 = t1124*t4710;
  t4870 = t1143*t4781;
  t4872 = t4851 + t4852 + t4856 + t4864 + t4866 + t4869 + t4870;
  t4544 = 5.856279999999999e-13*var1[13];
  t4545 = -0.0387489999948987*t480;
  t4551 = t4546 + t1108;
  t4552 = -2.123459e-6*t4551;
  t4555 = t4553 + t129;
  t4558 = -0.281209000004*t4555;
  t4604 = t171*t4603;
  t4711 = t506*t4710;
  t4783 = t778*t4781;
  t4784 = t4544 + t4545 + t4552 + t4558 + t4604 + t4711 + t4783;
  t4808 = -0.15121*t4800;
  t4849 = t949*t4847;
  t4873 = -1.*t1051*t4872;
  t4875 = t4808 + t4810 + t4849 + t4873;
  t4876 = t935*t4875;
  t4882 = 0.15121*t4800;
  t4884 = t1051*t4847;
  t4889 = t949*t4872;
  t4890 = t4882 + t4810 + t4884 + t4889;
  t4892 = -1.*t4890*t1213;
  t4893 = t4876 + t4892;
  t3498 = t908*t927;
  t3499 = t14*t1236;
  t3500 = t3498 + t3499;
  t4913 = t14*t4784;
  t4915 = -1.*t927*t4893;
  t4916 = t4913 + t4915;
  t4905 = t4784*t927;
  t4906 = t14*t4893;
  t4910 = t4905 + t4906;
  t4790 = -1.*t4784*t927;
  t4896 = -1.*t14*t4893;
  t4899 = t4790 + t4896;
  t4925 = t935*t4890;
  t4928 = t4875*t1213;
  t4930 = t4925 + t4928;
  t3477 = t1925*t927;
  t3494 = t14*t2100;
  t3495 = t3477 + t3494;
  t5154 = -1.*t935*t4890;
  t5161 = -1.*t4875*t1213;
  t5166 = t5154 + t5161;
  t4936 = -1.*t3530*t4930;
  t4939 = -1.*t3500*t4910;
  t4940 = -1.*t1279*t4916;
  t4943 = t4936 + t4939 + t4940;
  t4956 = t3566*t4930;
  t4962 = t3474*t4910;
  t4970 = t1770*t4916;
  t4975 = t4956 + t4962 + t4970;
  t5017 = t3530*t4930;
  t5019 = t3500*t4910;
  t5024 = t1279*t4916;
  t5026 = t5017 + t5019 + t5024;
  t5044 = -1.*t3597*t4930;
  t5045 = -1.*t3495*t4910;
  t5046 = -1.*t2122*t4916;
  t5049 = t5044 + t5045 + t5046;
  t5088 = -1.*t3566*t4930;
  t5089 = -1.*t3474*t4910;
  t5092 = -1.*t1770*t4916;
  t5093 = t5088 + t5089 + t5092;
  t5118 = t3597*t4930;
  t5122 = t3495*t4910;
  t5123 = t2122*t4916;
  t5127 = t5118 + t5122 + t5123;
  t5359 = 0.15121*t949;
  t5384 = -0.15121*t1051;
  t5387 = -1.*t1051*t4847;
  t5394 = -1.*t949*t4872;
  t5405 = t5359 + t5384 + t5387 + t5394;
  t5380 = t5359 + t4810 + t4849 + t4873;
  t5421 = t935*t5405;
  t5426 = -1.*t5380*t1213;
  t5427 = t5421 + t5426;
  t5382 = t935*t5380;
  t5406 = t5405*t1213;
  t5413 = t5382 + t5406;
  t2489 = t2482*t927;
  t2578 = t14*t2577;
  t2579 = t2489 + t2578;
  t2346 = t2344*t927;
  t2464 = t14*t2452;
  t2468 = t2346 + t2464;
  t5641 = t2277 + t960;
  t5643 = -0.038748999993*t5641;
  t5645 = t2392 + t1108;
  t5647 = -0.281209000004*t5645;
  t5650 = -1.38024835e-16*t129;
  t5651 = -6.5e-11*t129*t4603;
  t5652 = t2368*t4710;
  t5653 = t2374*t4781;
  t5657 = -1.4640699999999997e-7 + t5643 + t5647 + t5650 + t5651 + t5652 + t5653;
  t5662 = -2.8e-11*t129;
  t5663 = t471 + t5662;
  t5670 = -0.038748999993*t5663;
  t5674 = t2373 + t1108;
  t5681 = -2.123459e-6*t5674;
  t5683 = -0.28120900000849935*t129;
  t5684 = t2397*t4603;
  t5685 = t2407*t4710;
  t5686 = -1.000000000016*t129*t4781;
  t5687 = 1.0248489999999998e-12 + t5670 + t5681 + t5683 + t5684 + t5685 + t5686;
  t5699 = -1.*t1051*t5657;
  t5704 = t949*t5687;
  t5706 = t5699 + t5704;
  t5661 = t949*t5657;
  t5688 = t1051*t5687;
  t5692 = t5661 + t5688;
  t5724 = t59 + t5662;
  t5729 = -0.281209000004*t5724;
  t5730 = t2367 + t960;
  t5735 = -2.123459e-6*t5730;
  t5736 = -0.0387489999948987*t129;
  t5772 = t2280*t4603;
  t5776 = -1.000000000049*t129*t4710;
  t5777 = t2342*t4781;
  t5779 = 5.856279999999999e-13 + t5729 + t5735 + t5736 + t5772 + t5776 + t5777;
  t5781 = t935*t5706;
  t5784 = -1.*t5692*t1213;
  t5787 = t5781 + t5784;
  t5698 = t935*t5692;
  t5713 = t5706*t1213;
  t5714 = t5698 + t5713;
  t5780 = t5779*t927;
  t5788 = t14*t5787;
  t5791 = t5780 + t5788;
  t5793 = t14*t5779;
  t5805 = -1.*t927*t5787;
  t5810 = t5793 + t5805;
  t2608 = t2600*t927;
  t2725 = t14*t2723;
  t2726 = t2608 + t2725;
  t5975 = -0.80315*t2743;
  t5977 = t2965 + t412;
  t5978 = -0.038924*t5977;
  t5982 = -0.038922999986*t2784;
  t5985 = t2804 + t1824;
  t5986 = -0.503149000008*t5985;
  t5988 = -9.666064052774999e-12*t331;
  t5989 = -2.598649999999999e-7 + t5975 + t5978 + t5982 + t5986 + t5988;
  t5996 = 0.148705*t2952;
  t6000 = t184 + t2805;
  t6002 = -0.503149000008*t6000;
  t6005 = -0.80315*t2838;
  t6007 = t2965 + t891;
  t6013 = -3.6777349999999994e-6*t6007;
  t6014 = 1.0000140000590574e-6*t331;
  t6018 = 1.0394599999999997e-12 + t5996 + t6002 + t6005 + t6013 + t6014;
  t6024 = 0.148705*t2973;
  t6027 = -0.038922999986*t2817;
  t6030 = t184 + t2835;
  t6032 = -0.038924*t6030;
  t6035 = t2736 + t1824;
  t6037 = -3.6777349999999994e-6*t6035;
  t6042 = 0.30000099999679997*t331;
  t6043 = 1.8190549999999993e-12 + t6024 + t6027 + t6032 + t6037 + t6042;
  t5995 = t964*t5989;
  t6023 = t988*t6018;
  t6046 = t1013*t6043;
  t6051 = t5995 + t6023 + t6046;
  t6062 = t1093*t5989;
  t6064 = t1124*t6018;
  t6067 = t1143*t6043;
  t6070 = t6062 + t6064 + t6067;
  t6076 = t949*t6051;
  t6080 = -1.*t1051*t6070;
  t6081 = t6076 + t6080;
  t6057 = t1051*t6051;
  t6071 = t949*t6070;
  t6073 = t6057 + t6071;
  t6094 = t171*t5989;
  t6097 = t506*t6018;
  t6098 = t778*t6043;
  t6101 = t6094 + t6097 + t6098;
  t6104 = t935*t6081;
  t6109 = -1.*t6073*t1213;
  t6110 = t6104 + t6109;
  t2853 = t2852*t927;
  t2945 = t14*t2942;
  t2946 = t2853 + t2945;
  t6074 = t935*t6073;
  t6082 = t6081*t1213;
  t6085 = t6074 + t6082;
  t6103 = t6101*t927;
  t6114 = t14*t6110;
  t6115 = t6103 + t6114;
  t6117 = t14*t6101;
  t6118 = -1.*t927*t6110;
  t6119 = t6117 + t6118;
  t3001 = t2991*t927;
  t3069 = t14*t3064;
  t3097 = t3001 + t3069;
  t3304 = t3296*t927;
  t3438 = t14*t3434;
  t3456 = t3304 + t3438;
  t5148 = -1.*t3530*t4893;
  t5149 = -1.*t1236*t4930;
  t5188 = t3566*t4893;
  t5189 = t1727*t4930;
  t5216 = t3530*t4893;
  t5222 = t1236*t4930;
  t5253 = -1.*t3597*t4893;
  t5256 = -1.*t2100*t4930;
  t5299 = -1.*t3566*t4893;
  t5302 = -1.*t1727*t4930;
  t5324 = t3597*t4893;
  t5328 = t2100*t4930;
  t6298 = -1.*t908*t4784;
  t6310 = -1.*t1236*t4893;
  t6312 = t6298 + t6310 + t4936;
  t6314 = t1534*t4784;
  t6319 = t1727*t4893;
  t6322 = t6314 + t6319 + t4956;
  t5414 = -1.*t3530*t5413;
  t5419 = -1.*t3801*t4930;
  t5450 = t3566*t5413;
  t5458 = t3833*t4930;
  t6335 = t908*t4784;
  t6336 = t1236*t4893;
  t6338 = t6335 + t6336 + t5017;
  t6349 = -1.*t1925*t4784;
  t6350 = -1.*t2100*t4893;
  t6358 = t6349 + t6350 + t5044;
  t5487 = t3530*t5413;
  t5488 = t3801*t4930;
  t5512 = -1.*t3597*t5413;
  t5514 = -1.*t3851*t4930;
  t6368 = -1.*t1534*t4784;
  t6369 = -1.*t1727*t4893;
  t6371 = t6368 + t6369 + t5088;
  t6398 = t1925*t4784;
  t6402 = t2100*t4893;
  t6403 = t6398 + t6402 + t5118;
  t5539 = -1.*t3566*t5413;
  t5544 = -1.*t3833*t4930;
  t5570 = t3597*t5413;
  t5571 = t3851*t4930;
  t5640 = -1.*t3880*t4930;
  t5716 = -1.*t3530*t5714;
  t5829 = t3923*t4930;
  t5830 = t3566*t5714;
  t5865 = t3880*t4930;
  t5867 = t3530*t5714;
  t5882 = -1.*t3959*t4930;
  t5887 = -1.*t3597*t5714;
  t5917 = -1.*t3923*t4930;
  t5918 = -1.*t3566*t5714;
  t5934 = t3959*t4930;
  t5937 = t3597*t5714;
  t6087 = t3530*t6085;
  t6088 = t4000*t4930;
  t6133 = -1.*t6085*t3597;
  t6136 = -1.*t4064*t4930;
  t6179 = t6085*t3597;
  t6180 = t4064*t4930;
  t6202 = -1.*t6085*t3566;
  t6203 = -1.*t4101*t4930;
  t6221 = -1.*t3530*t6085;
  t6223 = -1.*t4000*t4930;
  t6246 = t6085*t3566;
  t6247 = t4101*t4930;
  t6526 = -1.*t2344*t4784;
  t6527 = -1.*t908*t5779;
  t6533 = t2482*t4784;
  t6534 = t1534*t5779;
  t6557 = t2344*t4784;
  t6566 = t908*t5779;
  t6595 = -1.*t2600*t4784;
  t6600 = -1.*t1925*t5779;
  t6643 = -1.*t2482*t4784;
  t6652 = -1.*t1534*t5779;
  t6673 = t2600*t4784;
  t6675 = t1925*t5779;
  t6697 = t908*t6101;
  t6702 = t2852*t4784;
  t6722 = -1.*t6101*t1925;
  t6725 = -1.*t2991*t4784;
  t7131 = t1205*t4890;
  t7135 = t1159*t4875;
  t7136 = t6335 + t7131 + t7135;
  t7138 = -1.*t2074*t4890;
  t7139 = -1.*t2021*t4875;
  t7140 = t6349 + t7138 + t7139;
  t6784 = t6101*t1925;
  t6787 = t2991*t4784;
  t7168 = -1.*t1713*t4890;
  t7169 = -1.*t1684*t4875;
  t7174 = t6368 + t7168 + t7169;
  t7177 = t2074*t4890;
  t7179 = t2021*t4875;
  t7181 = t6398 + t7177 + t7179;
  t6835 = -1.*t6101*t1534;
  t6845 = -1.*t3296*t4784;
  t6877 = -1.*t908*t6101;
  t6879 = -1.*t2852*t4784;
  t7080 = -1.*t1205*t4890;
  t7081 = -1.*t1159*t4875;
  t7082 = t6298 + t7080 + t7081;
  t7085 = t1713*t4890;
  t7086 = t1684*t4875;
  t7088 = t6314 + t7085 + t7086;
  t6897 = t6101*t1534;
  t6898 = t3296*t4784;
  t7467 = t1020*t4847;
  t7469 = t1157*t4872;
  t7471 = t7467 + t6335 + t7469;
  t7473 = -1.*t1969*t4847;
  t7475 = -1.*t1989*t4872;
  t7476 = t7473 + t6349 + t7475;
  t7555 = -1.*t1668*t4847;
  t7556 = -1.*t1585*t4872;
  t7557 = t7555 + t6368 + t7556;
  t7564 = t1969*t4847;
  t7565 = t1989*t4872;
  t7567 = t7564 + t6398 + t7565;
  t7402 = -1.*t1020*t4847;
  t7403 = -1.*t1157*t4872;
  t7405 = t7402 + t6298 + t7403;
  t7409 = t1668*t4847;
  t7410 = t1585*t4872;
  t7415 = t7409 + t6314 + t7410;
  t7815 = t4603*t2794;
  t7817 = t452*t5989;
  t7818 = t703*t6018;
  t7823 = t899*t6043;
  t7825 = t2846*t4710;
  t7828 = t2825*t4781;
  t7829 = t7815 + t7817 + t7818 + t7823 + t7825 + t7828;
  t7832 = -1.*t4603*t2967;
  t7834 = -1.*t1799*t6018;
  t7835 = -1.*t5989*t1844;
  t7836 = -1.*t6043*t1897;
  t7837 = -1.*t2961*t4710;
  t7842 = -1.*t2979*t4781;
  t7843 = t7832 + t7834 + t7835 + t7836 + t7837 + t7842;
  t7845 = t452*t4603;
  t7846 = t703*t4710;
  t7847 = t899*t4781;
  t7848 = t7845 + t7846 + t7847;
  t7850 = -1.*t4603*t1844;
  t7851 = -1.*t1799*t4710;
  t7852 = -1.*t1897*t4781;
  t7853 = t7850 + t7851 + t7852;
  t7919 = -1.*t4603*t1439;
  t7920 = -1.*t1494*t4710;
  t7923 = -1.*t1329*t4781;
  t7926 = t7919 + t7920 + t7923;
  t7928 = t4603*t2967;
  t7930 = t1799*t6018;
  t7932 = t5989*t1844;
  t7936 = t6043*t1897;
  t7937 = t2961*t4710;
  t7938 = t2979*t4781;
  t7941 = t7928 + t7930 + t7932 + t7936 + t7937 + t7938;
  t7943 = t4603*t1844;
  t7944 = t1799*t4710;
  t7945 = t1897*t4781;
  t7946 = t7943 + t7944 + t7945;
  t7949 = -1.*t5989*t1439;
  t7950 = -1.*t4603*t3154;
  t7951 = -1.*t1329*t6043;
  t7952 = -1.*t6018*t1494;
  t7953 = -1.*t3127*t4710;
  t7956 = -1.*t3252*t4781;
  t7957 = t7949 + t7950 + t7951 + t7952 + t7953 + t7956;
  t8001 = t4603*t1439;
  t8002 = t1494*t4710;
  t8003 = t1329*t4781;
  t8004 = t8001 + t8002 + t8003;
  t8006 = -1.*t4603*t2794;
  t8007 = -1.*t452*t5989;
  t8008 = -1.*t703*t6018;
  t8010 = -1.*t899*t6043;
  t8011 = -1.*t2846*t4710;
  t8012 = -1.*t2825*t4781;
  t8013 = t8006 + t8007 + t8008 + t8010 + t8011 + t8012;
  t8016 = -1.*t452*t4603;
  t8017 = -1.*t703*t4710;
  t8018 = -1.*t899*t4781;
  t8019 = t8016 + t8017 + t8018;
  t8021 = t5989*t1439;
  t8026 = t4603*t3154;
  t8029 = t1329*t6043;
  t8030 = t6018*t1494;
  t8031 = t3127*t4710;
  t8039 = t3252*t4781;
  t8040 = t8021 + t8026 + t8029 + t8030 + t8031 + t8039;
  t8111 = 6.5e-11*t263;
  p_output1[0]=t1770*var2[0] + t2122*var2[1] + t1279*var2[2];
  p_output1[1]=t14*t2169*var2[0] + t14*t2176*var2[1] + t14*t2147*var2[2];
  p_output1[2]=t14*t2247*var2[0] + t14*t2265*var2[1] + t14*t2233*var2[2];
  p_output1[3]=t2579*var2[0] + t2726*var2[1] + t2468*var2[2];
  p_output1[4]=t3456*var2[0] + t3097*var2[1] + t2946*var2[2];
  p_output1[5]=t3474;
  p_output1[6]=t3495;
  p_output1[7]=t3500;
  p_output1[8]=(-1.*t1770*t3537 - 1.*t3507*t3566)*var2[0] + (-1.*t2122*t3537 - 1.*t3507*t3597)*var2[1] + (-1.*t3507*t3530 - 1.*t1279*t3537)*var2[2];
  p_output1[9]=-1.*t3507*t3698*var2[0] - 1.*t3507*t3709*var2[1] - 1.*t3507*t3658*var2[2];
  p_output1[10]=(t1727*t3537 + t2169*t3507*t927)*var2[0] + (t2100*t3537 + t2176*t3507*t927)*var2[1] + (t1236*t3537 + t2147*t3507*t927)*var2[2];
  p_output1[11]=(t3537*t3833 + t2247*t3507*t927)*var2[0] + (t3537*t3851 + t2265*t3507*t927)*var2[1] + (t3537*t3801 + t2233*t3507*t927)*var2[2];
  p_output1[12]=(t3537*t3923 - 1.*t3507*t3928)*var2[0] + (t3537*t3959 - 1.*t3507*t3980)*var2[1] + (t3537*t3880 - 1.*t3507*t3898)*var2[2];
  p_output1[13]=(t3537*t4101 - 1.*t3507*t4114)*var2[0] + (t3537*t4064 - 1.*t3507*t4077)*var2[1] + (t3537*t4000 - 1.*t3507*t4012)*var2[2];
  p_output1[14]=t4174;
  p_output1[15]=t4195;
  p_output1[16]=t4215;
  p_output1[17]=t4174*var2[0] + t4195*var2[1] + t4215*var2[2];
  p_output1[18]=t3537*t3698*var2[0] + t3537*t3709*var2[1] + t3537*t3658*var2[2];
  p_output1[19]=(t1727*t3507 - 1.*t2169*t3537*t927)*var2[0] + (t2100*t3507 - 1.*t2176*t3537*t927)*var2[1] + (t1236*t3507 - 1.*t2147*t3537*t927)*var2[2];
  p_output1[20]=(t3507*t3833 - 1.*t2247*t3537*t927)*var2[0] + (t3507*t3851 - 1.*t2265*t3537*t927)*var2[1] + (t3507*t3801 - 1.*t2233*t3537*t927)*var2[2];
  p_output1[21]=(t3507*t3923 + t3537*t3928)*var2[0] + (t3507*t3959 + t3537*t3980)*var2[1] + (t3507*t3880 + t3537*t3898)*var2[2];
  p_output1[22]=(t3507*t4101 + t3537*t4114)*var2[0] + (t3507*t4064 + t3537*t4077)*var2[1] + (t3507*t4000 + t3537*t4012)*var2[2];
  p_output1[23]=t1770*t3537 + t3507*t3566;
  p_output1[24]=t2122*t3537 + t3507*t3597;
  p_output1[25]=t3507*t3530 + t1279*t3537;
  p_output1[26]=(t3495*(t1279*t4899 + t1279*t4910 + t3500*t4916 + t3658*t4916) + t3500*(-1.*t2122*t4899 - 1.*t2122*t4910 - 1.*t3495*t4916 - 1.*t3709*t4916) + t2122*t5026 + t1279*t5049)*var2[0] + (t3474*(-1.*t1279*t4899 - 1.*t1279*t4910 - 1.*t3500*t4916 - 1.*t3658*t4916) + t3500*(t1770*t4899 + t1770*t4910 + t3474*t4916 + t3698*t4916) + t1770*t4943 + t1279*t4975)*var2[1] + (t3495*(-1.*t1770*t4899 - 1.*t1770*t4910 - 1.*t3474*t4916 - 1.*t3698*t4916) + t3474*(t2122*t4899 + t2122*t4910 + t3495*t4916 + t3709*t4916) + t2122*t5093 + t1770*t5127)*var2[2];
  p_output1[27]=(t14*t2176*t5026 + t14*t2147*t5049 + t3495*(t14*t2147*t4910 + t14*t3500*t5166 + t5216 + t5222 - 1.*t2147*t4916*t927 - 1.*t1279*t5166*t927) + t3500*(-1.*t14*t2176*t4910 - 1.*t14*t3495*t5166 + t5253 + t5256 + t2176*t4916*t927 + t2122*t5166*t927))*var2[0] + (t14*t2169*t4943 + t14*t2147*t4975 + t3474*(-1.*t14*t2147*t4910 + t5148 + t5149 - 1.*t14*t3500*t5166 + t2147*t4916*t927 + t1279*t5166*t927) + t3500*(t14*t2169*t4910 + t14*t3474*t5166 + t5188 + t5189 - 1.*t2169*t4916*t927 - 1.*t1770*t5166*t927))*var2[1] + (t14*t2176*t5093 + t14*t2169*t5127 + t3495*(-1.*t14*t2169*t4910 - 1.*t14*t3474*t5166 + t5299 + t5302 + t2169*t4916*t927 + t1770*t5166*t927) + t3474*(t14*t2176*t4910 + t14*t3495*t5166 + t5324 + t5328 - 1.*t2176*t4916*t927 - 1.*t2122*t5166*t927))*var2[2];
  p_output1[28]=(t14*t2265*t5026 + t14*t2233*t5049 + t3495*(t14*t2233*t4910 + t14*t3500*t5427 + t5487 + t5488 - 1.*t2233*t4916*t927 - 1.*t1279*t5427*t927) + t3500*(-1.*t14*t2265*t4910 - 1.*t14*t3495*t5427 + t5512 + t5514 + t2265*t4916*t927 + t2122*t5427*t927))*var2[0] + (t14*t2247*t4943 + t14*t2233*t4975 + t3474*(-1.*t14*t2233*t4910 + t5414 + t5419 - 1.*t14*t3500*t5427 + t2233*t4916*t927 + t1279*t5427*t927) + t3500*(t14*t2247*t4910 + t14*t3474*t5427 + t5450 + t5458 - 1.*t2247*t4916*t927 - 1.*t1770*t5427*t927))*var2[1] + (t14*t2265*t5093 + t14*t2247*t5127 + t3495*(-1.*t14*t2247*t4910 - 1.*t14*t3474*t5427 + t5539 + t5544 + t2247*t4916*t927 + t1770*t5427*t927) + t3474*(t14*t2265*t4910 + t14*t3495*t5427 + t5570 + t5571 - 1.*t2265*t4916*t927 - 1.*t2122*t5427*t927))*var2[2];
  p_output1[29]=(t2726*t5026 + t2468*t5049 + t3495*(t2468*t4910 + t3898*t4916 + t3500*t5791 + t1279*t5810 + t5865 + t5867) + t3500*(-1.*t2726*t4910 - 1.*t3980*t4916 - 1.*t3495*t5791 - 1.*t2122*t5810 + t5882 + t5887))*var2[0] + (t2579*t4943 + t2468*t4975 + t3474*(-1.*t2468*t4910 - 1.*t3898*t4916 + t5640 + t5716 - 1.*t3500*t5791 - 1.*t1279*t5810) + t3500*(t2579*t4910 + t3928*t4916 + t3474*t5791 + t1770*t5810 + t5829 + t5830))*var2[1] + (t2726*t5093 + t2579*t5127 + t3495*(-1.*t2579*t4910 - 1.*t3928*t4916 - 1.*t3474*t5791 - 1.*t1770*t5810 + t5917 + t5918) + t3474*(t2726*t4910 + t3980*t4916 + t3495*t5791 + t2122*t5810 + t5934 + t5937))*var2[2];
  p_output1[30]=(t3097*t5026 + t2946*t5049 + t3495*(t2946*t4910 + t4012*t4916 + t6087 + t6088 + t3500*t6115 + t1279*t6119) + t3500*(-1.*t3097*t4910 - 1.*t4077*t4916 - 1.*t3495*t6115 - 1.*t2122*t6119 + t6133 + t6136))*var2[0] + (t3456*t4943 + t2946*t4975 + t3474*(-1.*t2946*t4910 - 1.*t4012*t4916 - 1.*t3500*t6115 - 1.*t1279*t6119 + t6221 + t6223) + t3500*(t3456*t4910 + t4114*t4916 + t3474*t6115 + t1770*t6119 + t6246 + t6247))*var2[1] + (t3097*t5093 + t3456*t5127 + t3474*(t3097*t4910 + t4077*t4916 + t3495*t6115 + t2122*t6119 + t6179 + t6180) + t3495*(-1.*t3456*t4910 - 1.*t4114*t4916 - 1.*t3474*t6115 - 1.*t1770*t6119 + t6202 + t6203))*var2[2];
  p_output1[31]=t3495*t5026 + t3500*t5049;
  p_output1[32]=t3474*t4943 + t3500*t4975;
  p_output1[33]=t3495*t5093 + t3474*t5127;
  p_output1[34]=(t3597*(t2147*t4893 + t1236*t5166 + t5216 + t5222) + t3530*(-1.*t2176*t4893 - 1.*t2100*t5166 + t5253 + t5256) + t2100*t6338 + t1236*t6358)*var2[0] + (t3566*(-1.*t2147*t4893 + t5148 + t5149 - 1.*t1236*t5166) + t3530*(t2169*t4893 + t1727*t5166 + t5188 + t5189) + t1727*t6312 + t1236*t6322)*var2[1] + (t3597*(-1.*t2169*t4893 - 1.*t1727*t5166 + t5299 + t5302) + t3566*(t2176*t4893 + t2100*t5166 + t5324 + t5328) + t2100*t6371 + t1727*t6403)*var2[2];
  p_output1[35]=(t3597*(t2233*t4893 + t1236*t5427 + t5487 + t5488) + t3530*(-1.*t2265*t4893 - 1.*t2100*t5427 + t5512 + t5514) + t3851*t6338 + t3801*t6358)*var2[0] + (t3566*(-1.*t2233*t4893 + t5414 + t5419 - 1.*t1236*t5427) + t3530*(t2247*t4893 + t1727*t5427 + t5450 + t5458) + t3833*t6312 + t3801*t6322)*var2[1] + (t3597*(-1.*t2247*t4893 - 1.*t1727*t5427 + t5539 + t5544) + t3566*(t2265*t4893 + t2100*t5427 + t5570 + t5571) + t3851*t6371 + t3833*t6403)*var2[2];
  p_output1[36]=(t3959*t6338 + t3880*t6358 + t3597*(t2452*t4893 + t1236*t5787 + t5865 + t5867 + t6557 + t6566) + t3530*(-1.*t2723*t4893 - 1.*t2100*t5787 + t5882 + t5887 + t6595 + t6600))*var2[0] + (t3923*t6312 + t3880*t6322 + t3566*(-1.*t2452*t4893 + t5640 + t5716 - 1.*t1236*t5787 + t6526 + t6527) + t3530*(t2577*t4893 + t1727*t5787 + t5829 + t5830 + t6533 + t6534))*var2[1] + (t3959*t6371 + t3923*t6403 + t3597*(-1.*t2577*t4893 - 1.*t1727*t5787 + t5917 + t5918 + t6643 + t6652) + t3566*(t2723*t4893 + t2100*t5787 + t5934 + t5937 + t6673 + t6675))*var2[2];
  p_output1[37]=(t4064*t6338 + t4000*t6358 + t3597*(t2942*t4893 + t6087 + t6088 + t1236*t6110 + t6697 + t6702) + t3530*(-1.*t3064*t4893 - 1.*t2100*t6110 + t6133 + t6136 + t6722 + t6725))*var2[0] + (t4101*t6312 + t4000*t6322 + t3566*(-1.*t2942*t4893 - 1.*t1236*t6110 + t6221 + t6223 + t6877 + t6879) + t3530*(t3434*t4893 + t1727*t6110 + t6246 + t6247 + t6897 + t6898))*var2[1] + (t4064*t6371 + t4101*t6403 + t3566*(t3064*t4893 + t2100*t6110 + t6179 + t6180 + t6784 + t6787) + t3597*(-1.*t3434*t4893 - 1.*t1727*t6110 + t6202 + t6203 + t6835 + t6845))*var2[2];
  p_output1[38]=t3597*t6338 + t3530*t6358;
  p_output1[39]=t3566*t6312 + t3530*t6322;
  p_output1[40]=t3597*t6371 + t3566*t6403;
  p_output1[41]=(t1925*(t2220*t4875 + t1159*t4890 + t1205*t5380 + t1159*t5405) + (-1.*t2255*t4875 - 1.*t2021*t4890 - 1.*t2074*t5380 - 1.*t2021*t5405)*t908)*var2[0] + (t1534*(-1.*t2220*t4875 - 1.*t1159*t4890 - 1.*t1205*t5380 - 1.*t1159*t5405) + (t2242*t4875 + t1684*t4890 + t1713*t5380 + t1684*t5405)*t908)*var2[1] + (t1925*(-1.*t2242*t4875 - 1.*t1684*t4890 - 1.*t1713*t5380 - 1.*t1684*t5405) + t1534*(t2255*t4875 + t2021*t4890 + t2074*t5380 + t2021*t5405))*var2[2];
  p_output1[42]=(t1925*(t2424*t4875 + t2438*t4890 + t1205*t5692 + t1159*t5706 + t6557 + t6566) + t2600*t7136 + t2344*t7140 + (-1.*t2666*t4875 - 1.*t2701*t4890 - 1.*t2074*t5692 - 1.*t2021*t5706 + t6595 + t6600)*t908)*var2[0] + (t1534*(-1.*t2424*t4875 - 1.*t2438*t4890 - 1.*t1205*t5692 - 1.*t1159*t5706 + t6526 + t6527) + t2482*t7082 + t2344*t7088 + (t2535*t4875 + t2571*t4890 + t1713*t5692 + t1684*t5706 + t6533 + t6534)*t908)*var2[1] + (t1925*(-1.*t2535*t4875 - 1.*t2571*t4890 - 1.*t1713*t5692 - 1.*t1684*t5706 + t6643 + t6652) + t1534*(t2666*t4875 + t2701*t4890 + t2074*t5692 + t2021*t5706 + t6673 + t6675) + t2600*t7174 + t2482*t7181)*var2[2];
  p_output1[43]=(t1925*(t2913*t4875 + t2932*t4890 + t1205*t6073 + t1159*t6081 + t6697 + t6702) + t2991*t7136 + t2852*t7140 + (-1.*t3029*t4875 - 1.*t3041*t4890 - 1.*t2074*t6073 - 1.*t2021*t6081 + t6722 + t6725)*t908)*var2[0] + (t1534*(-1.*t2913*t4875 - 1.*t2932*t4890 - 1.*t1205*t6073 - 1.*t1159*t6081 + t6877 + t6879) + t3296*t7082 + t2852*t7088 + (t3385*t4875 + t3429*t4890 + t1713*t6073 + t1684*t6081 + t6897 + t6898)*t908)*var2[1] + (t1534*(t3029*t4875 + t3041*t4890 + t2074*t6073 + t2021*t6081 + t6784 + t6787) + t1925*(-1.*t3385*t4875 - 1.*t3429*t4890 - 1.*t1713*t6073 - 1.*t1684*t6081 + t6835 + t6845) + t2991*t7174 + t3296*t7181)*var2[2];
  p_output1[44]=t1925*t7136 + t7140*t908;
  p_output1[45]=t1534*t7082 + t7088*t908;
  p_output1[46]=t1925*t7174 + t1534*t7181;
  p_output1[47]=(0.15121*t2499 + 0.15121*t2525 + t1925*(t2417*t4847 + t2380*t4872 + t1157*t5657 + t1020*t5687 + t6557 + t6566) + t2600*t7471 + t2344*t7476 + (-1.*t2656*t4847 - 1.*t2635*t4872 - 1.*t1989*t5657 - 1.*t1969*t5687 + t6595 + t6600)*t908)*var2[0] + (0.15121*t2635 + 0.15121*t2656 + t1534*(-1.*t2417*t4847 - 1.*t2380*t4872 - 1.*t1157*t5657 - 1.*t1020*t5687 + t6526 + t6527) + t2482*t7405 + t2344*t7415 + (t2525*t4847 + t2499*t4872 + t1585*t5657 + t1668*t5687 + t6533 + t6534)*t908)*var2[1] + (0.15121*t2380 + 0.15121*t2417 + t1925*(-1.*t2525*t4847 - 1.*t2499*t4872 - 1.*t1585*t5657 - 1.*t1668*t5687 + t6643 + t6652) + t1534*(t2656*t4847 + t2635*t4872 + t1989*t5657 + t1969*t5687 + t6673 + t6675) + t2600*t7557 + t2482*t7567)*var2[2];
  p_output1[48]=(0.15121*t3329 + 0.15121*t3376 + t1925*(t2907*t4847 + t2894*t4872 + t1020*t6051 + t1157*t6070 + t6697 + t6702) + t2991*t7471 + t2852*t7476 + (-1.*t3008*t4847 - 1.*t3027*t4872 - 1.*t1969*t6051 - 1.*t1989*t6070 + t6722 + t6725)*t908)*var2[0] + (0.15121*t3008 + 0.15121*t3027 + t1534*(-1.*t2907*t4847 - 1.*t2894*t4872 - 1.*t1020*t6051 - 1.*t1157*t6070 + t6877 + t6879) + t3296*t7405 + t2852*t7415 + (t3329*t4847 + t3376*t4872 + t1668*t6051 + t1585*t6070 + t6897 + t6898)*t908)*var2[1] + (0.15121*t2894 + 0.15121*t2907 + t1534*(t3008*t4847 + t3027*t4872 + t1969*t6051 + t1989*t6070 + t6784 + t6787) + t1925*(-1.*t3329*t4847 - 1.*t3376*t4872 - 1.*t1668*t6051 - 1.*t1585*t6070 + t6835 + t6845) + t2991*t7557 + t3296*t7567)*var2[2];
  p_output1[49]=0.15121*t1585 + 0.15121*t1668 + t1925*t7471 + t7476*t908;
  p_output1[50]=0.15121*t1969 + 0.15121*t1989 + t1534*t7405 + t7415*t908;
  p_output1[51]=0.15121*t1020 + 0.15121*t1157 + t1925*t7557 + t1534*t7567;
  p_output1[52]=(-0.281209*t3127 + 0.038749*t3252 + 1.e-6*(t2736 - 7.000000000455e-6*t331) + t1844*t7829 + t452*t7843 + t2967*t7848 + t2794*t7853 + 4.e-6*(-1.*t1799*t7829 - 1.*t703*t7843 - 1.*t2961*t7848 - 1.*t2846*t7853) - 7.e-6*(t1897*t7829 + t2979*t7848 + t2825*t7853 + t7843*t899))*var2[0] + (-0.281209*t2961 + 0.038749*t2979 + 1.e-6*(t2762 + 4.00000000026e-6*t331) + t2794*t8004 + t1439*t8013 + t3154*t8019 + t452*t8040 + 4.e-6*(-1.*t2846*t8004 - 1.*t1494*t8013 - 1.*t3127*t8019 - 1.*t703*t8040) - 7.e-6*(t2825*t8004 + t1329*t8013 + t3252*t8019 + t8040*t899))*var2[1] + (0.038749*t2825 - 0.281209*t2846 + 1.e-6*(7.e-6*t2743 + 6.5e-11*t331 + 4.e-6*t5977) + t2967*t7926 + t1439*t7941 + t3154*t7946 + t1844*t7957 + 4.e-6*(-1.*t2961*t7926 - 1.*t1494*t7941 - 1.*t3127*t7946 - 1.*t1799*t7957) - 7.e-6*(t2979*t7926 + t1329*t7941 + t3252*t7946 + t1897*t7957))*var2[2];
  p_output1[53]=0.038749*t1329 - 0.281209*t1494 + 1.e-6*(7.e-6*t1368 + t403 + t412) + t1844*t7848 + t452*t7853 + 4.e-6*(-1.*t1799*t7848 - 1.*t703*t7853) - 7.e-6*(t1897*t7848 + t7853*t899);
  p_output1[54]=-0.281209*t1799 + 0.038749*t1897 + t452*t8004 + t1439*t8019 + 4.e-6*(-1.*t703*t8004 - 1.*t1494*t8019) + 1.e-6*(t291 + t339 + 4.e-6*(-1. + t8111)) - 7.e-6*(t1329*t8019 + t8004*t899);
  p_output1[55]=-0.281209*t703 + t1844*t7926 + t1439*t7946 - 7.e-6*(t1897*t7926 + t1329*t7946) + 4.e-6*(-1.*t1799*t7926 - 1.*t1494*t7946) + 1.e-6*(-1. + 7.e-6*t424 + 4.e-6*t4601 + t8111) + 0.038749*t899;
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_DiagonalStance.hh"

namespace DiagonalStance
{

void J_fRlFoot_vec_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
