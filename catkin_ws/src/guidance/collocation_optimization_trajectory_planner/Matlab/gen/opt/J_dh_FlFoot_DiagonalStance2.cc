/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:30:33 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t569;
  double t626;
  double t660;
  double t393;
  double t503;
  double t525;
  double t530;
  double t539;
  double t545;
  double t811;
  double t553;
  double t637;
  double t643;
  double t682;
  double t687;
  double t690;
  double t331;
  double t876;
  double t920;
  double t933;
  double t983;
  double t992;
  double t1097;
  double t1098;
  double t1169;
  double t722;
  double t1113;
  double t1140;
  double t171;
  double t1176;
  double t1193;
  double t1271;
  double t1423;
  double t1168;
  double t1276;
  double t1330;
  double t83;
  double t1573;
  double t1660;
  double t1666;
  double t1729;
  double t1746;
  double t1755;
  double t1774;
  double t1784;
  double t1803;
  double t1825;
  double t1852;
  double t1893;
  double t2041;
  double t2063;
  double t2105;
  double t2315;
  double t2231;
  double t2322;
  double t2406;
  double t2657;
  double t2669;
  double t2725;
  double t3116;
  double t3280;
  double t3414;
  double t3417;
  double t3435;
  double t3515;
  double t3778;
  double t3809;
  double t3839;
  double t3846;
  double t3856;
  double t3868;
  double t3880;
  double t3881;
  double t3886;
  double t3888;
  double t3894;
  double t3917;
  double t3924;
  double t3933;
  double t3934;
  double t3935;
  double t3936;
  double t3649;
  double t3651;
  double t3660;
  double t3672;
  double t3675;
  double t3879;
  double t3930;
  double t3946;
  double t3969;
  double t4039;
  double t4052;
  double t4062;
  double t4065;
  double t4066;
  double t4112;
  double t4149;
  double t2496;
  double t2726;
  double t2825;
  double t3415;
  double t3519;
  double t3527;
  double t3536;
  double t3540;
  double t3541;
  double t3545;
  double t3548;
  double t3558;
  double t3669;
  double t4025;
  double t4153;
  double t4198;
  double t4201;
  double t4228;
  double t4231;
  double t4235;
  double t4236;
  double t4239;
  double t4240;
  double t4242;
  double t4243;
  double t4244;
  double t4254;
  double t4255;
  double t4256;
  double t4257;
  double t4260;
  double t4262;
  double t4263;
  double t4274;
  double t4282;
  double t4301;
  double t4377;
  double t4379;
  double t4380;
  double t4381;
  double t4389;
  double t4406;
  double t4409;
  double t4429;
  double t4447;
  double t4471;
  double t4480;
  double t4492;
  double t4493;
  double t4266;
  double t4268;
  double t4269;
  double t4354;
  double t4359;
  double t4363;
  double t4387;
  double t4396;
  double t4397;
  double t4398;
  double t4455;
  double t4511;
  double t4518;
  double t4521;
  double t4524;
  double t4525;
  double t4528;
  double t4529;
  double t4533;
  double t4548;
  double t4552;
  double t4553;
  double t4401;
  double t4534;
  double t4535;
  double t4596;
  double t4602;
  double t4616;
  double t4312;
  double t4313;
  double t4322;
  double t4816;
  double t4834;
  double t4837;
  double t4541;
  double t4543;
  double t4544;
  double t4555;
  double t4618;
  double t4619;
  double t4621;
  double t4966;
  double t4977;
  double t4979;
  double t4622;
  double t4563;
  double t4569;
  double t4575;
  double t5008;
  double t5014;
  double t5017;
  double t4964;
  double t4982;
  double t4948;
  double t4949;
  double t4953;
  double t5005;
  double t5030;
  double t4623;
  double t4626;
  double t4635;
  double t5126;
  double t5130;
  double t5134;
  double t5135;
  double t5136;
  double t5145;
  double t5146;
  double t5191;
  double t5192;
  double t5167;
  double t5170;
  double t5172;
  double t5174;
  double t4931;
  double t4933;
  double t4935;
  double t5211;
  double t5215;
  double t5216;
  double t5179;
  double t5180;
  double t5184;
  double t5258;
  double t5260;
  double t5038;
  double t5047;
  double t5048;
  double t5247;
  double t5248;
  double t5273;
  double t5275;
  double t5277;
  double t5266;
  double t5269;
  double t5271;
  double t5297;
  double t5299;
  double t5261;
  double t5272;
  double t5252;
  double t5254;
  double t5289;
  double t5302;
  double t5499;
  double t5501;
  double t5510;
  double t5479;
  double t5484;
  double t5486;
  double t5488;
  double t5495;
  double t5394;
  double t5404;
  double t5411;
  double t5413;
  double t5463;
  double t5468;
  double t5469;
  double t5470;
  double t5471;
  double t5474;
  double t5443;
  double t5446;
  double t5447;
  double t5451;
  double t5455;
  double t5459;
  double t5376;
  double t5380;
  double t5382;
  double t5421;
  double t5423;
  double t5426;
  double t5427;
  double t5514;
  double t5516;
  double t5517;
  double t5461;
  double t5511;
  double t5547;
  double t5564;
  double t5639;
  double t5649;
  double t5650;
  double t5622;
  double t5623;
  double t5627;
  double t5537;
  double t5538;
  double t5543;
  double t5544;
  double t5566;
  double t5567;
  double t5568;
  double t5584;
  double t5587;
  double t5590;
  double t5597;
  double t5598;
  double t5599;
  double t5580;
  double t5582;
  double t5592;
  double t5600;
  double t5602;
  double t5708;
  double t5710;
  double t5711;
  double t5714;
  double t5716;
  double t5719;
  double t5657;
  double t5658;
  double t5664;
  double t5667;
  double t5668;
  double t5669;
  double t5687;
  double t5689;
  double t5691;
  double t5694;
  double t5696;
  double t5698;
  double t5766;
  double t5768;
  double t5771;
  double t5742;
  double t5746;
  double t5748;
  double t5733;
  double t5734;
  double t5738;
  double t5782;
  double t5783;
  double t5784;
  double t5740;
  double t5773;
  double t5752;
  double t5760;
  double t5762;
  double t5795;
  double t5796;
  double t5801;
  double t5847;
  double t5849;
  double t5850;
  double t5792;
  double t5793;
  double t5831;
  double t5833;
  double t5834;
  double t5823;
  double t5825;
  double t5827;
  double t5856;
  double t5861;
  double t5863;
  double t5388;
  double t5389;
  double t5391;
  double t5939;
  double t5940;
  double t5942;
  double t5946;
  double t5947;
  double t5948;
  double t5950;
  double t5954;
  double t5965;
  double t5977;
  double t5978;
  double t5979;
  double t5983;
  double t5920;
  double t5924;
  double t5925;
  double t5945;
  double t5949;
  double t5966;
  double t5967;
  double t5969;
  double t5971;
  double t5972;
  double t5974;
  double t6027;
  double t6031;
  double t6032;
  double t6038;
  double t6039;
  double t6042;
  double t6046;
  double t6050;
  double t6059;
  double t6060;
  double t6061;
  double t6064;
  double t6065;
  double t5911;
  double t5913;
  double t5933;
  double t5935;
  double t5936;
  double t5615;
  double t5617;
  double t5618;
  double t5976;
  double t6001;
  double t6004;
  double t6148;
  double t6151;
  double t6153;
  double t6136;
  double t6139;
  double t6141;
  double t5993;
  double t5994;
  double t5996;
  double t5997;
  double t6007;
  double t6008;
  double t6094;
  double t6099;
  double t6101;
  double t6104;
  double t6106;
  double t6108;
  double t6086;
  double t6088;
  double t6092;
  double t6103;
  double t6113;
  double t6117;
  double t6196;
  double t6199;
  double t6200;
  double t6209;
  double t6211;
  double t6213;
  double t6170;
  double t6172;
  double t6173;
  double t6175;
  double t6178;
  double t6180;
  double t6244;
  double t6245;
  double t6248;
  double t6228;
  double t6229;
  double t6230;
  double t6253;
  double t6254;
  double t6256;
  double t6232;
  double t6263;
  double t6264;
  double t6265;
  double t6260;
  double t6261;
  double t6280;
  double t6282;
  double t6284;
  double t6273;
  double t6275;
  double t6278;
  double t6292;
  double t6296;
  double t6298;
  double t1966;
  double t1985;
  double t2003;
  double t5675;
  double t5679;
  double t5681;
  double t5525;
  double t5527;
  double t5531;
  double t6371;
  double t6373;
  double t6374;
  double t6375;
  double t4656;
  double t4662;
  double t4666;
  double t3094;
  double t3578;
  double t3630;
  double t6323;
  double t6326;
  double t6327;
  double t6434;
  double t6445;
  double t6436;
  double t6439;
  double t6442;
  double t6487;
  double t6492;
  double t6509;
  double t6511;
  double t6446;
  double t6447;
  double t6448;
  double t6496;
  double t6497;
  double t6499;
  double t6502;
  double t6503;
  double t6504;
  double t6586;
  double t6599;
  double t6610;
  double t6613;
  double t6660;
  double t6669;
  double t6721;
  double t6724;
  double t5877;
  double t5878;
  double t5879;
  double t6795;
  double t6802;
  double t5839;
  double t5840;
  double t5841;
  double t5583;
  double t5603;
  double t5607;
  double t6822;
  double t6825;
  double t6682;
  double t6683;
  double t6684;
  double t6923;
  double t6928;
  double t6931;
  double t6937;
  double t6944;
  double t6946;
  double t6950;
  double t6952;
  double t6953;
  double t6954;
  double t6955;
  double t6958;
  double t6959;
  double t6893;
  double t6741;
  double t6743;
  double t6744;
  double t6910;
  double t6913;
  double t6311;
  double t6312;
  double t6313;
  double t6995;
  double t6093;
  double t6118;
  double t6119;
  double t7009;
  double t7015;
  double t6395;
  double t6398;
  double t6410;
  double t6767;
  double t6770;
  double t6771;
  double t6698;
  double t6710;
  double t6713;
  double t6037;
  double t7093;
  double t7094;
  double t7095;
  double t7096;
  double t7131;
  double t7149;
  double t7191;
  double t7195;
  double t7132;
  double t7133;
  double t7134;
  double t7204;
  double t7209;
  double t7150;
  double t7151;
  double t7152;
  double t7182;
  double t7183;
  double t7186;
  double t7213;
  double t7215;
  double t7216;
  double t7295;
  double t7298;
  double t7310;
  double t7319;
  double t7392;
  double t7397;
  double t7410;
  double t7416;
  double t7454;
  double t7458;
  double t7464;
  double t7465;
  double t7386;
  double t7387;
  double t7388;
  double t7400;
  double t7401;
  double t7405;
  double t7540;
  double t7543;
  double t7544;
  double t7545;
  double t7548;
  double t7549;
  double t7552;
  double t7553;
  double t7554;
  double t7555;
  double t7556;
  double t7560;
  double t7566;
  double t7569;
  double t7571;
  double t7575;
  double t7578;
  double t7579;
  double t7580;
  double t7582;
  double t7426;
  double t7427;
  double t7428;
  double t7437;
  double t7439;
  double t7440;
  double t7521;
  double t7524;
  double t7530;
  double t7533;
  double t7629;
  double t7634;
  double t7639;
  double t7640;
  double t7115;
  double t7116;
  double t7117;
  t569 = Cos(var1[7]);
  t626 = -1. + t569;
  t660 = Sin(var1[8]);
  t393 = Cos(var1[8]);
  t503 = -1.*t393;
  t525 = 1. + t503;
  t530 = -1.000000000016*t525;
  t539 = 1. + t530;
  t545 = Sin(var1[7]);
  t811 = Cos(var1[6]);
  t553 = -4.e-6*t539*t545;
  t637 = 1.6e-11*t626;
  t643 = 1. + t637;
  t682 = -4.e-6*t643*t660;
  t687 = -4.e-6*t626*t660;
  t690 = t553 + t682 + t687;
  t331 = Sin(var1[6]);
  t876 = -1.*t569;
  t920 = 1. + t876;
  t933 = -1.000000000016*t920;
  t983 = 1. + t933;
  t992 = t983*t539;
  t1097 = -1.000000000016*t545*t660;
  t1098 = t992 + t1097;
  t1169 = Cos(var1[5]);
  t722 = -1.*t331*t690;
  t1113 = t811*t1098;
  t1140 = t722 + t1113;
  t171 = Sin(var1[5]);
  t1176 = t811*t690;
  t1193 = t331*t1098;
  t1271 = t1176 + t1193;
  t1423 = Cos(var1[3]);
  t1168 = t171*t1140;
  t1276 = t1169*t1271;
  t1330 = t1168 + t1276;
  t83 = Sin(var1[3]);
  t1573 = Cos(var1[4]);
  t1660 = -1.*t539*t545;
  t1666 = -1.6e-11*t626*t660;
  t1729 = -1.*t569*t660;
  t1746 = t1660 + t1666 + t1729;
  t1755 = t1573*t1746;
  t1774 = Sin(var1[4]);
  t1784 = t1169*t1140;
  t1803 = -1.*t171*t1271;
  t1825 = t1784 + t1803;
  t1852 = -1.*t1774*t1825;
  t1893 = t1755 + t1852;
  t2041 = -1.*t1774*t1746;
  t2063 = -1.*t1573*t1825;
  t2105 = t2041 + t2063;
  t2315 = -1. + t393;
  t2231 = 1.6e-11*t525;
  t2322 = 1.6e-11*t2315;
  t2406 = 1. + t2231 + t2322;
  t2657 = 4.e-6*t2315;
  t2669 = -4.e-6*t393;
  t2725 = t2657 + t2669;
  t3116 = t643*t2406;
  t3280 = 4.e-6*t626*t2725;
  t3414 = t3116 + t3280;
  t3417 = 4.e-6*t2406*t545;
  t3435 = t2725*t545;
  t3515 = t3417 + t3435;
  t3778 = 5.136e-14*var1[8];
  t3809 = -0.03874900000062*t525;
  t3839 = 5.9484e-7*t2315;
  t3846 = -0.03875*t393;
  t3856 = -0.299999999992*t660;
  t3868 = t3778 + t3809 + t3839 + t3846 + t3856;
  t3880 = -1.284e-8*var1[8];
  t3881 = 1. + t2322;
  t3886 = 0.14871*t3881;
  t3888 = -1.5499600000248e-7*t525;
  t3894 = -1.55e-7*t2315;
  t3917 = -1.199999999968e-6*t660;
  t3924 = t3880 + t3886 + t3888 + t3894 + t3917;
  t3933 = 0.80321*t539;
  t3934 = 0.503210000016051*t525;
  t3935 = -4.05159380016e-7*t660;
  t3936 = t3933 + t3934 + t3935;
  t3649 = -1.*t811;
  t3651 = 1. + t3649;
  t3660 = 0.15121*t3651;
  t3672 = 0.281210000008499*t920;
  t3675 = 0.03874900000062*t545;
  t3879 = t545*t3868;
  t3930 = 4.e-6*t545*t3924;
  t3946 = t983*t3936;
  t3969 = t3672 + t3675 + t3879 + t3930 + t3946;
  t4039 = -1.2484e-7*var1[7];
  t4052 = -1.5499600000248e-7*t920;
  t4062 = 1.124840000016e-6*t545;
  t4065 = 4.e-6*t626*t3868;
  t4066 = t643*t3924;
  t4112 = -4.e-6*t545*t3936;
  t4149 = t4039 + t4052 + t4062 + t4065 + t4066 + t4112;
  t2496 = 4.e-6*t626*t2406;
  t2726 = t569*t2725;
  t2825 = t2496 + t2726;
  t3415 = -1.*t3414*t331;
  t3519 = t811*t3515;
  t3527 = t3415 + t3519;
  t3536 = t1169*t3527;
  t3540 = t811*t3414;
  t3541 = t331*t3515;
  t3545 = t3540 + t3541;
  t3548 = -1.*t171*t3545;
  t3558 = t3536 + t3548;
  t3669 = -0.15121*t331;
  t4025 = t331*t3969;
  t4153 = t811*t4149;
  t4198 = t3660 + t3669 + t4025 + t4153;
  t4201 = -1.*t171*t4198;
  t4228 = 0.15121*t331;
  t4231 = t811*t3969;
  t4235 = -1.*t331*t4149;
  t4236 = t3660 + t4228 + t4231 + t4235;
  t4239 = t1169*t4236;
  t4240 = t4201 + t4239;
  t4242 = -1.*t1774*t4240;
  t4243 = 4.9936e-13*var1[7];
  t4244 = -0.03874900000062*t920;
  t4254 = 0.281210000004*t545;
  t4255 = t569*t3868;
  t4256 = 4.e-6*t626*t3924;
  t4257 = -1.*t545*t3936;
  t4260 = t4243 + t4244 + t4254 + t4255 + t4256 + t4257;
  t4262 = t1573*t4260;
  t4263 = t4242 + t4262;
  t4274 = t1573*t2825;
  t4282 = -1.*t1774*t3558;
  t4301 = t4274 + t4282;
  t4377 = -1. + t2231;
  t4379 = 4.e-6*t4377;
  t4380 = 4.e-6*t525;
  t4381 = t4379 + t4380;
  t4389 = t2231 + t503;
  t4406 = 4.e-6*t4381*t545;
  t4409 = t4389*t545;
  t4429 = -1.000000000016*t983*t660;
  t4447 = t4406 + t4409 + t4429;
  t4471 = t643*t4381;
  t4480 = 4.e-6*t626*t4389;
  t4492 = 4.000000000064e-6*t545*t660;
  t4493 = t4471 + t4480 + t4492;
  t4266 = t2825*t1774;
  t4268 = t1573*t3558;
  t4269 = t4266 + t4268;
  t4354 = t1573*t4240;
  t4359 = t1774*t4260;
  t4363 = t4354 + t4359;
  t4387 = 4.e-6*t626*t4381;
  t4396 = t569*t4389;
  t4397 = 1.000000000016*t545*t660;
  t4398 = t4387 + t4396 + t4397;
  t4455 = t331*t4447;
  t4511 = t811*t4493;
  t4518 = t4455 + t4511;
  t4521 = -1.*t171*t4518;
  t4524 = t811*t4447;
  t4525 = -1.*t331*t4493;
  t4528 = t4524 + t4525;
  t4529 = t1169*t4528;
  t4533 = t4521 + t4529;
  t4548 = t1169*t4198;
  t4552 = t171*t4236;
  t4553 = t4548 + t4552;
  t4401 = t1774*t4398;
  t4534 = t1573*t4533;
  t4535 = t4401 + t4534;
  t4596 = t1573*t4398;
  t4602 = -1.*t1774*t4533;
  t4616 = t4596 + t4602;
  t4312 = -1.*t1573*t4240;
  t4313 = -1.*t1774*t4260;
  t4322 = t4312 + t4313;
  t4816 = -1.*t171*t1140;
  t4834 = -1.*t1169*t1271;
  t4837 = t4816 + t4834;
  t4541 = t171*t3527;
  t4543 = t1169*t3545;
  t4544 = t4541 + t4543;
  t4555 = t4544*t4553;
  t4618 = t1169*t4518;
  t4619 = t171*t4528;
  t4621 = t4618 + t4619;
  t4966 = -1.*t1169*t4198;
  t4977 = -1.*t171*t4236;
  t4979 = t4966 + t4977;
  t4622 = -1.*t4553*t4621;
  t4563 = t4301*t4263;
  t4569 = t4269*t4363;
  t4575 = t4555 + t4563 + t4569;
  t5008 = -1.*t1169*t4518;
  t5014 = -1.*t171*t4528;
  t5017 = t5008 + t5014;
  t4964 = t4544*t4240;
  t4982 = t3558*t4553;
  t4948 = -1.*t171*t3527;
  t4949 = -1.*t1169*t3545;
  t4953 = t4948 + t4949;
  t5005 = -1.*t4553*t4533;
  t5030 = -1.*t4240*t4621;
  t4623 = -1.*t4363*t4535;
  t4626 = -1.*t4263*t4616;
  t4635 = t4622 + t4623 + t4626;
  t5126 = -1.*t811*t690;
  t5130 = -1.*t331*t1098;
  t5134 = t5126 + t5130;
  t5135 = t1169*t5134;
  t5136 = t4816 + t5135;
  t5145 = t171*t5134;
  t5146 = t1784 + t5145;
  t5191 = -0.15121*t811;
  t5192 = t5191 + t4228 + t4231 + t4235;
  t5167 = 0.15121*t811;
  t5170 = -1.*t331*t3969;
  t5172 = -1.*t811*t4149;
  t5174 = t5167 + t4228 + t5170 + t5172;
  t4931 = t3558*t4240;
  t4933 = t2825*t4260;
  t4935 = t4931 + t4555 + t4933;
  t5211 = -1.*t331*t4447;
  t5215 = -1.*t811*t4493;
  t5216 = t5211 + t5215;
  t5179 = -1.*t811*t3414;
  t5180 = -1.*t331*t3515;
  t5184 = t5179 + t5180;
  t5258 = t171*t5184;
  t5260 = t3536 + t5258;
  t5038 = -1.*t4260*t4398;
  t5047 = -1.*t4240*t4533;
  t5048 = t5038 + t5047 + t4622;
  t5247 = t171*t5216;
  t5248 = t5247 + t4529;
  t5273 = t1169*t5174;
  t5275 = -1.*t171*t5192;
  t5277 = t5273 + t5275;
  t5266 = t171*t5174;
  t5269 = t1169*t5192;
  t5271 = t5266 + t5269;
  t5297 = t1169*t5216;
  t5299 = t5297 + t5014;
  t5261 = t5260*t4553;
  t5272 = t4544*t5271;
  t5252 = t1169*t5184;
  t5254 = t4948 + t5252;
  t5289 = -1.*t4553*t5248;
  t5302 = -1.*t5271*t4621;
  t5499 = -4.e-6*t2406*t545;
  t5501 = -1.*t2725*t545;
  t5510 = t5499 + t5501;
  t5479 = 0.03874900000062*t569;
  t5484 = 0.281210000008499*t545;
  t5486 = 4.e-6*t569*t3924;
  t5488 = -1.000000000016*t545*t3936;
  t5495 = t5479 + t5484 + t4255 + t5486 + t5488;
  t5394 = -4.e-6*t4381*t545;
  t5404 = -1.*t4389*t545;
  t5411 = 1.000000000016*t569*t660;
  t5413 = t5394 + t5404 + t5411;
  t5463 = 1.124840000016e-6*t569;
  t5468 = -1.5499600000248e-7*t545;
  t5469 = -4.e-6*t545*t3868;
  t5470 = -1.6e-11*t545*t3924;
  t5471 = -4.e-6*t569*t3936;
  t5474 = -1.2484e-7 + t5463 + t5468 + t5469 + t5470 + t5471;
  t5443 = 0.281210000004*t569;
  t5446 = -0.03874900000062*t545;
  t5447 = -1.*t545*t3868;
  t5451 = -4.e-6*t545*t3924;
  t5455 = -1.*t569*t3936;
  t5459 = 4.9936e-13 + t5443 + t5446 + t5447 + t5451 + t5455;
  t5376 = -1.000000000016*t539*t545;
  t5380 = -1.000000000016*t569*t660;
  t5382 = t5376 + t5380;
  t5421 = -4.e-6*t569*t539;
  t5423 = t5421 + t4492;
  t5426 = 4.e-6*t569*t2406;
  t5427 = t5426 + t2726;
  t5514 = -1.6e-11*t2406*t545;
  t5516 = -4.e-6*t2725*t545;
  t5517 = t5514 + t5516;
  t5461 = t2825*t5459;
  t5511 = t5510*t4260;
  t5547 = -1.*t4260*t5413;
  t5564 = -1.*t5459*t4398;
  t5639 = t811*t5474;
  t5649 = t331*t5495;
  t5650 = t5639 + t5649;
  t5622 = -1.*t331*t5474;
  t5623 = t811*t5495;
  t5627 = t5622 + t5623;
  t5537 = -1.6e-11*t4381*t545;
  t5538 = -4.e-6*t4389*t545;
  t5543 = 4.000000000064e-6*t569*t660;
  t5544 = t5537 + t5538 + t5543;
  t5566 = 4.e-6*t569*t4381;
  t5567 = 1.000000000032*t545*t660;
  t5568 = t5566 + t4396 + t5567;
  t5584 = t331*t5382;
  t5587 = t811*t5423;
  t5590 = t5584 + t5587;
  t5597 = t811*t5382;
  t5598 = -1.*t331*t5423;
  t5599 = t5597 + t5598;
  t5580 = -1.*t569*t539;
  t5582 = t5580 + t4397;
  t5592 = -1.*t171*t5590;
  t5600 = t1169*t5599;
  t5602 = t5592 + t5600;
  t5708 = t1169*t5590;
  t5710 = t171*t5599;
  t5711 = t5708 + t5710;
  t5714 = t1573*t5582;
  t5716 = -1.*t1774*t5602;
  t5719 = t5714 + t5716;
  t5657 = t5427*t331;
  t5658 = t811*t5517;
  t5664 = t5657 + t5658;
  t5667 = t811*t5427;
  t5668 = -1.*t331*t5517;
  t5669 = t5667 + t5668;
  t5687 = -1.*t331*t5544;
  t5689 = t811*t5568;
  t5691 = t5687 + t5689;
  t5694 = t811*t5544;
  t5696 = t331*t5568;
  t5698 = t5694 + t5696;
  t5766 = t1169*t5664;
  t5768 = t171*t5669;
  t5771 = t5766 + t5768;
  t5742 = t1169*t5627;
  t5746 = -1.*t171*t5650;
  t5748 = t5742 + t5746;
  t5733 = t171*t5627;
  t5734 = t1169*t5650;
  t5738 = t5733 + t5734;
  t5782 = t171*t5691;
  t5783 = t1169*t5698;
  t5784 = t5782 + t5783;
  t5740 = t4544*t5738;
  t5773 = t5771*t4553;
  t5752 = -1.*t171*t5664;
  t5760 = t1169*t5669;
  t5762 = t5752 + t5760;
  t5795 = t1169*t5691;
  t5796 = -1.*t171*t5698;
  t5801 = t5795 + t5796;
  t5847 = t1774*t5510;
  t5849 = t1573*t5762;
  t5850 = t5847 + t5849;
  t5792 = -1.*t5738*t4621;
  t5793 = -1.*t4553*t5784;
  t5831 = t1573*t5748;
  t5833 = t1774*t5459;
  t5834 = t5831 + t5833;
  t5823 = -1.*t1774*t5748;
  t5825 = t1573*t5459;
  t5827 = t5823 + t5825;
  t5856 = t1774*t5413;
  t5861 = t1573*t5801;
  t5863 = t5856 + t5861;
  t5388 = t3515*t3969;
  t5389 = t3414*t4149;
  t5391 = t5388 + t4933 + t5389;
  t5939 = -4.05159380016e-7*t393;
  t5940 = -0.2999999999968*t660;
  t5942 = t5939 + t5940;
  t5946 = -1.199999999968e-6*t393;
  t5947 = 1.620637520064e-12*t660;
  t5948 = -1.284e-8 + t5946 + t5947;
  t5950 = -0.299999999992*t393;
  t5954 = 4.05159380016e-7*t660;
  t5965 = 5.136e-14 + t5950 + t5954;
  t5977 = t983*t5942;
  t5978 = 4.e-6*t545*t5948;
  t5979 = t545*t5965;
  t5983 = t5977 + t5978 + t5979;
  t5920 = 1.000000000016*t393*t545;
  t5924 = 1.6000000000256e-11*t626*t660;
  t5925 = t5920 + t5924 + t5411;
  t5945 = -4.e-6*t545*t5942;
  t5949 = t643*t5948;
  t5966 = 4.e-6*t626*t5965;
  t5967 = t5945 + t5949 + t5966;
  t5969 = -1.*t545*t5942;
  t5971 = 4.e-6*t626*t5948;
  t5972 = t569*t5965;
  t5974 = t5969 + t5971 + t5972;
  t6027 = t2406*t5948;
  t6031 = t2725*t5965;
  t6032 = t6027 + t6031;
  t6038 = t2725*t3868;
  t6039 = t2406*t3924;
  t6042 = t6038 + t6039;
  t6046 = 1.000000000016*t393*t3936;
  t6050 = -1.*t4381*t5948;
  t6059 = -1.*t4389*t5965;
  t6060 = 1.000000000016*t5942*t660;
  t6061 = -1.000000000016*t3868*t660;
  t6064 = -4.000000000064e-6*t3924*t660;
  t6065 = t6046 + t6050 + t6059 + t6060 + t6061 + t6064;
  t5911 = -1.000000000016*t393*t545;
  t5913 = t5911 + t4429;
  t5933 = -4.e-6*t643*t393;
  t5935 = -4.e-6*t626*t393;
  t5936 = t5933 + t5935 + t4492;
  t5615 = t3545*t4198;
  t5617 = t3527*t4236;
  t5618 = t5615 + t5617 + t4933;
  t5976 = t2825*t5974;
  t6001 = -1.*t4260*t5925;
  t6004 = -1.*t5974*t4398;
  t6148 = t811*t5967;
  t6151 = t331*t5983;
  t6153 = t6148 + t6151;
  t6136 = -1.*t331*t5967;
  t6139 = t811*t5983;
  t6141 = t6136 + t6139;
  t5993 = 4.000000000064e-6*t393*t545;
  t5994 = 4.000000000064e-6*t643*t660;
  t5996 = 4.000000000064e-6*t626*t660;
  t5997 = t5993 + t5994 + t5996;
  t6007 = -1.000000000016*t983*t393;
  t6008 = t6007 + t5567;
  t6094 = t331*t5913;
  t6099 = t811*t5936;
  t6101 = t6094 + t6099;
  t6104 = t811*t5913;
  t6106 = -1.*t331*t5936;
  t6108 = t6104 + t6106;
  t6086 = -1.6e-11*t626*t393;
  t6088 = -1.*t569*t393;
  t6092 = t6086 + t6088 + t4397;
  t6103 = -1.*t171*t6101;
  t6113 = t1169*t6108;
  t6117 = t6103 + t6113;
  t6196 = t1169*t6101;
  t6199 = t171*t6108;
  t6200 = t6196 + t6199;
  t6209 = t1573*t6092;
  t6211 = -1.*t1774*t6117;
  t6213 = t6209 + t6211;
  t6170 = -1.*t331*t5997;
  t6172 = t811*t6008;
  t6173 = t6170 + t6172;
  t6175 = t811*t5997;
  t6178 = t331*t6008;
  t6180 = t6175 + t6178;
  t6244 = t1169*t6141;
  t6245 = -1.*t171*t6153;
  t6248 = t6244 + t6245;
  t6228 = t171*t6141;
  t6229 = t1169*t6153;
  t6230 = t6228 + t6229;
  t6253 = t171*t6173;
  t6254 = t1169*t6180;
  t6256 = t6253 + t6254;
  t6232 = t4544*t6230;
  t6263 = t1169*t6173;
  t6264 = -1.*t171*t6180;
  t6265 = t6263 + t6264;
  t6260 = -1.*t6230*t4621;
  t6261 = -1.*t4553*t6256;
  t6280 = t1573*t6248;
  t6282 = t1774*t5974;
  t6284 = t6280 + t6282;
  t6273 = -1.*t1774*t6248;
  t6275 = t1573*t5974;
  t6278 = t6273 + t6275;
  t6292 = t1774*t5925;
  t6296 = t1573*t6265;
  t6298 = t6292 + t6296;
  t1966 = t1423*t1330;
  t1985 = -1.*t83*t1893;
  t2003 = t1966 + t1985;
  t5675 = -1.*t4198*t4518;
  t5679 = -1.*t4236*t4528;
  t5681 = t5038 + t5675 + t5679;
  t5525 = -1.*t3969*t4447;
  t5527 = -1.*t4149*t4493;
  t5531 = t5525 + t5527 + t5038;
  t6371 = -1.*t4389*t3868;
  t6373 = -1.*t4381*t3924;
  t6374 = 1.000000000016*t3936*t660;
  t6375 = t6371 + t6373 + t6374;
  t4656 = -1.*t1774*t4398;
  t4662 = -1.*t1573*t4533;
  t4666 = t4656 + t4662;
  t3094 = -1.*t2825*t1774;
  t3578 = -1.*t1573*t3558;
  t3630 = t3094 + t3578;
  t6323 = t1774*t1746;
  t6326 = t1573*t1825;
  t6327 = t6323 + t6326;
  t6434 = -1.*t4544*t4553;
  t6445 = t4553*t1330;
  t6436 = -1.*t4301*t4263;
  t6439 = -1.*t4269*t4363;
  t6442 = t6434 + t6436 + t6439;
  t6487 = -1.*t4544*t4240;
  t6492 = -1.*t3558*t4553;
  t6509 = t4240*t1330;
  t6511 = t4553*t1825;
  t6446 = t4363*t6327;
  t6447 = t4263*t1893;
  t6448 = t6445 + t6446 + t6447;
  t6496 = -1.*t3558*t4240;
  t6497 = -1.*t2825*t4260;
  t6499 = t6496 + t6434 + t6497;
  t6502 = t4260*t1746;
  t6503 = t4240*t1825;
  t6504 = t6502 + t6445 + t6503;
  t6586 = -1.*t5260*t4553;
  t6599 = -1.*t4544*t5271;
  t6610 = t4553*t5146;
  t6613 = t5271*t1330;
  t6660 = -1.*t2825*t5459;
  t6669 = -1.*t5510*t4260;
  t6721 = t5459*t1746;
  t6724 = t4260*t5582;
  t5877 = t1573*t5413;
  t5878 = -1.*t1774*t5801;
  t5879 = t5877 + t5878;
  t6795 = -1.*t4544*t5738;
  t6802 = -1.*t5771*t4553;
  t5839 = t1573*t5510;
  t5840 = -1.*t1774*t5762;
  t5841 = t5839 + t5840;
  t5583 = t1774*t5582;
  t5603 = t1573*t5602;
  t5607 = t5583 + t5603;
  t6822 = t5738*t1330;
  t6825 = t4553*t5711;
  t6682 = -1.*t3515*t3969;
  t6683 = -1.*t3414*t4149;
  t6684 = t6682 + t6497 + t6683;
  t6923 = -1.*t2725*t3868;
  t6928 = -1.*t2406*t3924;
  t6931 = t6923 + t6928;
  t6937 = -1.*t2406*t5948;
  t6944 = -1.*t2725*t5965;
  t6946 = t6937 + t6944;
  t6950 = t539*t5942;
  t6952 = -1.*t393*t3868;
  t6953 = -4.e-6*t393*t3924;
  t6954 = -1.000000000016*t3936*t660;
  t6955 = -4.e-6*t5948*t660;
  t6958 = -1.*t5965*t660;
  t6959 = t6950 + t6952 + t6953 + t6954 + t6955 + t6958;
  t6893 = -1.*t2825*t5974;
  t6741 = -1.*t3545*t4198;
  t6743 = -1.*t3527*t4236;
  t6744 = t6741 + t6743 + t6497;
  t6910 = t5974*t1746;
  t6913 = t4260*t6092;
  t6311 = t1573*t5925;
  t6312 = -1.*t1774*t6265;
  t6313 = t6311 + t6312;
  t6995 = -1.*t4544*t6230;
  t6093 = t1774*t6092;
  t6118 = t1573*t6117;
  t6119 = t6093 + t6118;
  t7009 = t6230*t1330;
  t7015 = t4553*t6200;
  t6395 = t1423*t4621;
  t6398 = -1.*t83*t4616;
  t6410 = t6395 + t6398;
  t6767 = t4236*t1140;
  t6770 = t4198*t1271;
  t6771 = t6502 + t6767 + t6770;
  t6698 = t4149*t690;
  t6710 = t3969*t1098;
  t6713 = t6698 + t6502 + t6710;
  t6037 = -0.03874900000062*t660;
  t7093 = t539*t3936;
  t7094 = -1.*t3868*t660;
  t7095 = -4.e-6*t3924*t660;
  t7096 = t7093 + t7094 + t7095;
  t7131 = -1.*t4553*t1330;
  t7149 = t4553*t4621;
  t7191 = -1.*t4240*t1330;
  t7195 = -1.*t4553*t1825;
  t7132 = -1.*t4363*t6327;
  t7133 = -1.*t4263*t1893;
  t7134 = t7131 + t7132 + t7133;
  t7204 = t4553*t4533;
  t7209 = t4240*t4621;
  t7150 = t4363*t4535;
  t7151 = t4263*t4616;
  t7152 = t7149 + t7150 + t7151;
  t7182 = -1.*t4260*t1746;
  t7183 = -1.*t4240*t1825;
  t7186 = t7182 + t7131 + t7183;
  t7213 = t4260*t4398;
  t7215 = t4240*t4533;
  t7216 = t7213 + t7215 + t7149;
  t7295 = -1.*t4553*t5146;
  t7298 = -1.*t5271*t1330;
  t7310 = t4553*t5248;
  t7319 = t5271*t4621;
  t7392 = -1.*t5459*t1746;
  t7397 = -1.*t4260*t5582;
  t7410 = t4260*t5413;
  t7416 = t5459*t4398;
  t7454 = -1.*t5738*t1330;
  t7458 = -1.*t4553*t5711;
  t7464 = t5738*t4621;
  t7465 = t4553*t5784;
  t7386 = -1.*t4149*t690;
  t7387 = -1.*t3969*t1098;
  t7388 = t7386 + t7182 + t7387;
  t7400 = t3969*t4447;
  t7401 = t4149*t4493;
  t7405 = t7400 + t7401 + t7213;
  t7540 = -1.*t539*t3936;
  t7543 = t3868*t660;
  t7544 = 4.e-6*t3924*t660;
  t7545 = t7540 + t7543 + t7544;
  t7548 = -1.000000000016*t393*t3936;
  t7549 = t4381*t5948;
  t7552 = t4389*t5965;
  t7553 = -1.000000000016*t5942*t660;
  t7554 = 1.000000000016*t3868*t660;
  t7555 = 4.000000000064e-6*t3924*t660;
  t7556 = t7548 + t7549 + t7552 + t7553 + t7554 + t7555;
  t7560 = t4389*t3868;
  t7566 = t4381*t3924;
  t7569 = t7560 + t7566 + t6954;
  t7571 = -1.*t539*t5942;
  t7575 = t393*t3868;
  t7578 = 4.e-6*t393*t3924;
  t7579 = 4.e-6*t5948*t660;
  t7580 = t5965*t660;
  t7582 = t7571 + t7575 + t7578 + t6374 + t7579 + t7580;
  t7426 = -1.*t4236*t1140;
  t7427 = -1.*t4198*t1271;
  t7428 = t7182 + t7426 + t7427;
  t7437 = t4198*t4518;
  t7439 = t4236*t4528;
  t7440 = t7213 + t7437 + t7439;
  t7521 = -1.*t5974*t1746;
  t7524 = -1.*t4260*t6092;
  t7530 = t4260*t5925;
  t7533 = t5974*t4398;
  t7629 = -1.*t6230*t1330;
  t7634 = -1.*t4553*t6200;
  t7639 = t6230*t4621;
  t7640 = t4553*t6256;
  t7115 = t1423*t4544;
  t7116 = -1.*t83*t4301;
  t7117 = t7115 + t7116;
  p_output1[0]=(-1.*t1423*t1893 - 1.*t1330*t83)*var2[1] + t2003*var2[2];
  p_output1[1]=t1893*var2[0] - 1.*t2105*t83*var2[1] + t1423*t2105*var2[2] + ((t3630*t4263 + t4263*t4269 + t4301*t4322 + t4301*t4363)*t4535 + t4575*t4616 + t4301*t4635 + t4269*(-1.*t4263*t4535 - 1.*t4322*t4616 - 1.*t4363*t4616 - 1.*t4263*t4666))*var2[3];
  p_output1[2]=t1573*t4837*var2[0] + (t1423*t1825 + t1774*t4837*t83)*var2[1] + (-1.*t1423*t1774*t4837 + t1825*t83)*var2[2] + (t1573*t4635*t4953 + t4535*(-1.*t1774*t4263*t4953 + t1573*t4363*t4953 + t4964 + t1573*t4269*t4979 - 1.*t1774*t4301*t4979 + t4982) + t1573*t4575*t5017 + t4269*(-1.*t1573*t4535*t4979 + t1774*t4616*t4979 + t5005 + t1774*t4263*t5017 - 1.*t1573*t4363*t5017 + t5030))*var2[3] + (t4533*t4935 + t4621*(t4240*t4953 + t4964 + t3558*t4979 + t4982) + t4544*(-1.*t4533*t4979 + t5005 - 1.*t4240*t5017 + t5030) + t3558*t5048)*var2[4];
  p_output1[3]=t1573*t5136*var2[0] + (t1423*t5146 + t1774*t5136*t83)*var2[1] + (-1.*t1423*t1774*t5136 + t5146*t83)*var2[2] + (t1573*t4635*t5254 + t4535*(-1.*t1774*t4263*t5254 + t1573*t4363*t5254 + t5261 + t5272 + t1573*t4269*t5277 - 1.*t1774*t4301*t5277) + t1573*t4575*t5299 + t4269*(-1.*t1573*t4535*t5277 + t1774*t4616*t5277 + t5289 + t1774*t4263*t5299 - 1.*t1573*t4363*t5299 + t5302))*var2[3] + (t4935*t5248 + t5048*t5260 + t4621*(t4240*t5254 + t5261 + t5272 + t3558*t5277) + t4544*(-1.*t4533*t5277 + t5289 - 1.*t4240*t5299 + t5302))*var2[4] + (t4398*(t3527*t4198 + t3527*t5174 + t4236*t5184 + t3545*t5192) + t2825*(-1.*t4198*t4528 - 1.*t4528*t5174 - 1.*t4518*t5192 - 1.*t4236*t5216))*var2[5];
  p_output1[4]=t5607*var2[0] + (t1423*t5711 - 1.*t5719*t83)*var2[1] + (t1423*t5719 + t5711*t83)*var2[2] + (t4635*t5850 + t4535*(t5740 + t5773 + t4301*t5827 + t4269*t5834 + t4263*t5841 + t4363*t5850) + t4575*t5863 + t4269*(t5792 + t5793 - 1.*t4616*t5827 - 1.*t4535*t5834 - 1.*t4363*t5863 - 1.*t4263*t5879))*var2[3] + (t5048*t5771 + t4621*(t5461 + t5511 + t5740 + t3558*t5748 + t4240*t5762 + t5773) + t4935*t5784 + t4544*(t5547 + t5564 - 1.*t4533*t5748 + t5792 + t5793 - 1.*t4240*t5801))*var2[4] + (t5413*t5618 + t4398*(t5461 + t5511 + t3527*t5627 + t3545*t5650 + t4198*t5664 + t4236*t5669) + t5510*t5681 + t2825*(t5547 + t5564 - 1.*t4528*t5627 - 1.*t4518*t5650 - 1.*t4236*t5691 - 1.*t4198*t5698))*var2[5] + (0.15121*t5382 + t5391*t5413 - 0.15121*t5423 + t4398*(t3969*t5427 + t5461 + t3414*t5474 + t3515*t5495 + t5511 + t4149*t5517) + t5510*t5531 + t2825*(-1.*t4493*t5474 - 1.*t4447*t5495 - 1.*t4149*t5544 + t5547 + t5564 - 1.*t3969*t5568))*var2[6];
  p_output1[5]=t6119*var2[0] + (t1423*t6200 - 1.*t6213*t83)*var2[1] + (t1423*t6213 + t6200*t83)*var2[2] + (t4535*(t6232 + t4301*t6278 + t4269*t6284) + t4575*t6298 + t4269*(t6260 + t6261 - 1.*t4616*t6278 - 1.*t4535*t6284 - 1.*t4363*t6298 - 1.*t4263*t6313))*var2[3] + (t4621*(t5976 + t6232 + t3558*t6248) + t4935*t6256 + t4544*(t6001 + t6004 - 1.*t4533*t6248 + t6260 + t6261 - 1.*t4240*t6265))*var2[4] + (t5618*t5925 + t4398*(t5976 + t3527*t6141 + t3545*t6153) + t2825*(t6001 + t6004 - 1.*t4528*t6141 - 1.*t4518*t6153 - 1.*t4236*t6173 - 1.*t4198*t6180))*var2[5] + (0.15121*t5913 + t5391*t5925 - 0.15121*t5936 + t4398*(t3414*t5967 + t5976 + t3515*t5983) + t2825*(-1.*t4493*t5967 - 1.*t4447*t5983 - 1.*t4149*t5997 + t6001 + t6004 - 1.*t3969*t6008))*var2[6] + (-0.281210000004*t393 + t4381*t6032 + t6037 + t2406*t6065 + 4.000000000064e-6*t6042*t660 + 4.e-6*(-1.*t4389*t6032 - 1.*t2725*t6065 - 1.000000000016*t6042*t660))*var2[7];
  p_output1[6]=t6327;
  p_output1[7]=t2003;
  p_output1[8]=t1423*t1893 + t1330*t83;
  p_output1[9]=t4535*t4575 + t4269*t4635;
  p_output1[10]=t4621*t4935 + t4544*t5048;
  p_output1[11]=t4398*t5618 + t2825*t5681;
  p_output1[12]=0.15121*t1098 + t4398*t5391 + t2825*t5531 - 0.15121*t690;
  p_output1[13]=0.038749*t539 + t4381*t6042 + t2406*t6375 + 4.e-6*(-1.*t4389*t6042 - 1.*t2725*t6375) - 0.281210000004*t660;
  p_output1[14]=-4.05160619990483e-7;
  p_output1[15]=(-1.*t1423*t4616 - 1.*t4621*t83)*var2[1] + t6410*var2[2];
  p_output1[16]=t4616*var2[0] - 1.*t4666*t83*var2[1] + t1423*t4666*var2[2] + ((-1.*t3630*t4263 - 1.*t4263*t4269 - 1.*t4301*t4322 - 1.*t4301*t4363)*t6327 + t4269*(t2105*t4263 + t1893*t4322 + t1893*t4363 + t4263*t6327) + t1893*t6442 + t4301*t6448)*var2[3];
  p_output1[17]=t1573*t5017*var2[0] + (t1423*t4533 + t1774*t5017*t83)*var2[1] + (-1.*t1423*t1774*t5017 + t4533*t83)*var2[2] + (t1573*t4837*t6442 + t1573*t4953*t6448 + t6327*(t1774*t4263*t4953 - 1.*t1573*t4363*t4953 - 1.*t1573*t4269*t4979 + t1774*t4301*t4979 + t6487 + t6492) + t4269*(-1.*t1774*t4263*t4837 + t1573*t4363*t4837 - 1.*t1774*t1893*t4979 + t1573*t4979*t6327 + t6509 + t6511))*var2[3] + (t1330*(-1.*t4240*t4953 - 1.*t3558*t4979 + t6487 + t6492) + t1825*t6499 + t3558*t6504 + t4544*(t4240*t4837 + t1825*t4979 + t6509 + t6511))*var2[4];
  p_output1[18]=t1573*t5299*var2[0] + (t1423*t5248 + t1774*t5299*t83)*var2[1] + (-1.*t1423*t1774*t5299 + t5248*t83)*var2[2] + (t1573*t5136*t6442 + t1573*t5254*t6448 + t6327*(t1774*t4263*t5254 - 1.*t1573*t4363*t5254 - 1.*t1573*t4269*t5277 + t1774*t4301*t5277 + t6586 + t6599) + t4269*(-1.*t1774*t4263*t5136 + t1573*t4363*t5136 - 1.*t1774*t1893*t5277 + t1573*t5277*t6327 + t6610 + t6613))*var2[3] + (t5146*t6499 + t5260*t6504 + t1330*(-1.*t4240*t5254 - 1.*t3558*t5277 + t6586 + t6599) + t4544*(t4240*t5136 + t1825*t5277 + t6610 + t6613))*var2[4] + (t2825*(t1140*t4198 + t4236*t5134 + t1140*t5174 + t1271*t5192) + t1746*(-1.*t3527*t4198 - 1.*t3527*t5174 - 1.*t4236*t5184 - 1.*t3545*t5192))*var2[5];
  p_output1[19]=t5863*var2[0] + (t1423*t5784 - 1.*t5879*t83)*var2[1] + (t1423*t5879 + t5784*t83)*var2[2] + (t5607*t6442 + t5850*t6448 + t6327*(-1.*t4301*t5827 - 1.*t4269*t5834 - 1.*t4263*t5841 - 1.*t4363*t5850 + t6795 + t6802) + t4269*(t4363*t5607 + t4263*t5719 + t1893*t5827 + t5834*t6327 + t6822 + t6825))*var2[3] + (t5711*t6499 + t5771*t6504 + t1330*(-1.*t3558*t5748 - 1.*t4240*t5762 + t6660 + t6669 + t6795 + t6802) + t4544*(t4240*t5602 + t1825*t5748 + t6721 + t6724 + t6822 + t6825))*var2[4] + (t1746*(-1.*t3527*t5627 - 1.*t3545*t5650 - 1.*t4198*t5664 - 1.*t4236*t5669 + t6660 + t6669) + t2825*(t4198*t5590 + t4236*t5599 + t1140*t5627 + t1271*t5650 + t6721 + t6724) + t5582*t6744 + t5510*t6771)*var2[5] + (-0.15121*t5544 + 0.15121*t5568 + t1746*(-1.*t3969*t5427 - 1.*t3414*t5474 - 1.*t3515*t5495 - 1.*t4149*t5517 + t6660 + t6669) + t5582*t6684 + t5510*t6713 + t2825*(t3969*t5382 + t4149*t5423 + t1098*t5495 + t6721 + t6724 + t5474*t690))*var2[6];
  p_output1[20]=t6298*var2[0] + (t1423*t6256 - 1.*t6313*t83)*var2[1] + (t1423*t6313 + t6256*t83)*var2[2] + (t6119*t6442 + t6327*(-1.*t4301*t6278 - 1.*t4269*t6284 + t6995) + t4269*(t4363*t6119 + t4263*t6213 + t1893*t6278 + t6284*t6327 + t7009 + t7015))*var2[3] + (t6200*t6499 + t1330*(-1.*t3558*t6248 + t6893 + t6995) + t4544*(t4240*t6117 + t1825*t6248 + t6910 + t6913 + t7009 + t7015))*var2[4] + (t6092*t6744 + t1746*(-1.*t3527*t6141 - 1.*t3545*t6153 + t6893) + t2825*(t4198*t6101 + t4236*t6108 + t1140*t6141 + t1271*t6153 + t6910 + t6913))*var2[5] + (-0.15121*t5997 + 0.15121*t6008 + t6092*t6684 + t1746*(-1.*t3414*t5967 - 1.*t3515*t5983 + t6893) + t2825*(t3969*t5913 + t4149*t5936 + t1098*t5983 + t5967*t690 + t6910 + t6913))*var2[6] + (-0.03874900000062*t393 + 0.281210000008499*t660 - 4.e-6*t393*t6931 - 4.e-6*t660*t6946 + t2406*t6959 + 4.e-6*(t393*t6931 + t660*t6946 - 1.*t2725*t6959))*var2[7];
  p_output1[21]=t4535;
  p_output1[22]=t6410;
  p_output1[23]=t1423*t4616 + t4621*t83;
  p_output1[24]=t6327*t6442 + t4269*t6448;
  p_output1[25]=t1330*t6499 + t4544*t6504;
  p_output1[26]=t1746*t6744 + t2825*t6771;
  p_output1[27]=0.15121*t4447 - 0.15121*t4493 + t1746*t6684 + t2825*t6713;
  p_output1[28]=1.e-6*t4381 + 0.28121*t4389 + t6037 - 4.e-6*t660*t6931 + t2406*t7096 + 4.e-6*(t660*t6931 - 1.*t2725*t7096);
  p_output1[29]=0.300000000004851;
  p_output1[30]=(-1.*t1423*t4301 - 1.*t4544*t83)*var2[1] + t7117*var2[2];
  p_output1[31]=t4301*var2[0] - 1.*t3630*t83*var2[1] + t1423*t3630*var2[2] + ((t4263*t4535 + t4322*t4616 + t4363*t4616 + t4263*t4666)*t6327 + t4535*(-1.*t2105*t4263 - 1.*t1893*t4322 - 1.*t1893*t4363 - 1.*t4263*t6327) + t4616*t7134 + t1893*t7152)*var2[3];
  p_output1[32]=t1573*t4953*var2[0] + (t1423*t3558 + t1774*t4953*t83)*var2[1] + (-1.*t1423*t1774*t4953 + t3558*t83)*var2[2] + (t1573*t5017*t7134 + t1573*t4837*t7152 + t4535*(t1774*t4263*t4837 - 1.*t1573*t4363*t4837 + t1774*t1893*t4979 - 1.*t1573*t4979*t6327 + t7191 + t7195) + t6327*(t1573*t4535*t4979 - 1.*t1774*t4616*t4979 - 1.*t1774*t4263*t5017 + t1573*t4363*t5017 + t7204 + t7209))*var2[3] + (t4533*t7186 + t4621*(-1.*t4240*t4837 - 1.*t1825*t4979 + t7191 + t7195) + t1330*(t4533*t4979 + t4240*t5017 + t7204 + t7209) + t1825*t7216)*var2[4];
  p_output1[33]=t1573*t5254*var2[0] + (t1423*t5260 + t1774*t5254*t83)*var2[1] + (-1.*t1423*t1774*t5254 + t5260*t83)*var2[2] + (t1573*t5299*t7134 + t1573*t5136*t7152 + t4535*(t1774*t4263*t5136 - 1.*t1573*t4363*t5136 + t1774*t1893*t5277 - 1.*t1573*t5277*t6327 + t7295 + t7298) + t6327*(t1573*t4535*t5277 - 1.*t1774*t4616*t5277 - 1.*t1774*t4263*t5299 + t1573*t4363*t5299 + t7310 + t7319))*var2[3] + (t5248*t7186 + t5146*t7216 + t4621*(-1.*t4240*t5136 - 1.*t1825*t5277 + t7295 + t7298) + t1330*(t4533*t5277 + t4240*t5299 + t7310 + t7319))*var2[4] + (t4398*(-1.*t1140*t4198 - 1.*t4236*t5134 - 1.*t1140*t5174 - 1.*t1271*t5192) + t1746*(t4198*t4528 + t4528*t5174 + t4518*t5192 + t4236*t5216))*var2[5];
  p_output1[34]=t5850*var2[0] + (t1423*t5771 - 1.*t5841*t83)*var2[1] + (t1423*t5841 + t5771*t83)*var2[2] + (t5863*t7134 + t5607*t7152 + t4535*(-1.*t4363*t5607 - 1.*t4263*t5719 - 1.*t1893*t5827 - 1.*t5834*t6327 + t7454 + t7458) + t6327*(t4616*t5827 + t4535*t5834 + t4363*t5863 + t4263*t5879 + t7464 + t7465))*var2[3] + (t5784*t7186 + t5711*t7216 + t4621*(-1.*t4240*t5602 - 1.*t1825*t5748 + t7392 + t7397 + t7454 + t7458) + t1330*(t4533*t5748 + t4240*t5801 + t7410 + t7416 + t7464 + t7465))*var2[4] + (t4398*(-1.*t4198*t5590 - 1.*t4236*t5599 - 1.*t1140*t5627 - 1.*t1271*t5650 + t7392 + t7397) + t1746*(t4528*t5627 + t4518*t5650 + t4236*t5691 + t4198*t5698 + t7410 + t7416) + t5413*t7428 + t5582*t7440)*var2[5] + (0.15121*t5427 - 0.15121*t5517 + t5413*t7388 + t4398*(-1.*t3969*t5382 - 1.*t4149*t5423 - 1.*t1098*t5495 - 1.*t5474*t690 + t7392 + t7397) + t5582*t7405 + t1746*(t4493*t5474 + t4447*t5495 + t4149*t5544 + t3969*t5568 + t7410 + t7416))*var2[6];
  p_output1[35]=(t6298*t7134 + t6119*t7152 + t4535*(-1.*t4363*t6119 - 1.*t4263*t6213 - 1.*t1893*t6278 - 1.*t6284*t6327 + t7629 + t7634) + t6327*(t4616*t6278 + t4535*t6284 + t4363*t6298 + t4263*t6313 + t7639 + t7640))*var2[3] + (t6256*t7186 + t6200*t7216 + t4621*(-1.*t4240*t6117 - 1.*t1825*t6248 + t7521 + t7524 + t7629 + t7634) + t1330*(t4533*t6248 + t4240*t6265 + t7530 + t7533 + t7639 + t7640))*var2[4] + (t5925*t7428 + t6092*t7440 + t4398*(-1.*t4198*t6101 - 1.*t4236*t6108 - 1.*t1140*t6141 - 1.*t1271*t6153 + t7521 + t7524) + t1746*(t4528*t6141 + t4518*t6153 + t4236*t6173 + t4198*t6180 + t7530 + t7533))*var2[5] + (t5925*t7388 + t6092*t7405 + t4398*(-1.*t3969*t5913 - 1.*t4149*t5936 - 1.*t1098*t5983 - 1.*t5967*t690 + t7521 + t7524) + t1746*(t4493*t5967 + t4447*t5983 + t4149*t5997 + t3969*t6008 + t7530 + t7533))*var2[6] + (4.000000000064e-6*t660*t7545 - 4.e-6*t660*t7556 - 4.e-6*t393*t7569 + t4381*t7582 + 4.e-6*(-1.000000000016*t660*t7545 + t660*t7556 + t393*t7569 - 1.*t4389*t7582))*var2[7];
  p_output1[36]=t4269;
  p_output1[37]=t7117;
  p_output1[38]=t1423*t4301 + t4544*t83;
  p_output1[39]=t4535*t7134 + t6327*t7152;
  p_output1[40]=t4621*t7186 + t1330*t7216;
  p_output1[41]=t4398*t7428 + t1746*t7440;
  p_output1[42]=-0.15121*t3414 + 0.15121*t3515 + t4398*t7388 + t1746*t7405;
  p_output1[43]=1.e-6*t2406 + 0.28121*t2725 + t4381*t7545 - 4.e-6*t660*t7569 + 4.e-6*(-1.*t4389*t7545 + t660*t7569);
  p_output1[44]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FlFoot_DiagonalStance2.hh"

namespace DiagonalStance2
{

void J_dh_FlFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
