/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:15:33 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t18;
  double t29;
  double t24;
  double t25;
  double t40;
  double t14;
  double t26;
  double t44;
  double t46;
  double t186;
  double t189;
  double t234;
  double t346;
  double t400;
  double t53;
  double t55;
  double t58;
  double t168;
  double t778;
  double t783;
  double t789;
  double t805;
  double t808;
  double t914;
  double t918;
  double t923;
  double t925;
  double t930;
  double t1042;
  double t291;
  double t510;
  double t515;
  double t529;
  double t555;
  double t558;
  double t1054;
  double t1060;
  double t1077;
  double t1085;
  double t634;
  double t635;
  double t696;
  double t708;
  double t715;
  double t716;
  double t1233;
  double t1237;
  double t1238;
  double t1260;
  double t794;
  double t813;
  double t822;
  double t830;
  double t831;
  double t834;
  double t1249;
  double t836;
  double t842;
  double t861;
  double t1275;
  double t1302;
  double t878;
  double t880;
  double t886;
  double t1360;
  double t1378;
  double t1292;
  double t1406;
  double t1304;
  double t1439;
  double t1443;
  double t1269;
  double t1391;
  double t1532;
  double t1543;
  double t1546;
  double t1563;
  double t932;
  double t934;
  double t945;
  double t946;
  double t947;
  double t952;
  double t1570;
  double t1574;
  double t956;
  double t957;
  double t960;
  double t1605;
  double t1560;
  double t976;
  double t979;
  double t980;
  double t1660;
  double t1575;
  double t1681;
  double t1567;
  double t1779;
  double t1627;
  double t1691;
  double t1610;
  double t1024;
  double t1064;
  double t1081;
  double t1088;
  double t1090;
  double t1095;
  double t1099;
  double t1102;
  double t1107;
  double t1116;
  double t1118;
  double t1120;
  double t1128;
  double t1129;
  double t1133;
  double t1136;
  double t1138;
  double t1139;
  double t1140;
  double t1162;
  double t1165;
  double t1172;
  double t1880;
  double t1881;
  double t1897;
  double t1901;
  double t1180;
  double t1183;
  double t1192;
  double t1193;
  double t1940;
  double t1196;
  double t1205;
  double t1210;
  double t1214;
  double t1215;
  double t1218;
  double t1229;
  double t1244;
  double t1271;
  double t1273;
  double t1277;
  double t1278;
  double t1279;
  double t1281;
  double t1285;
  double t1291;
  double t1294;
  double t1300;
  double t1305;
  double t1314;
  double t1332;
  double t1334;
  double t1347;
  double t1357;
  double t1362;
  double t1368;
  double t1380;
  double t1383;
  double t1387;
  double t1390;
  double t2061;
  double t2062;
  double t2066;
  double t2078;
  double t1398;
  double t1404;
  double t1417;
  double t1425;
  double t1427;
  double t1432;
  double t1434;
  double t1437;
  double t2093;
  double t1445;
  double t1447;
  double t1451;
  double t1453;
  double t1455;
  double t1460;
  double t1463;
  double t1466;
  double t2119;
  double t2074;
  double t1468;
  double t1469;
  double t1472;
  double t1473;
  double t1477;
  double t1478;
  double t1488;
  double t1489;
  double t2160;
  double t2101;
  double t2184;
  double t2080;
  double t2237;
  double t2125;
  double t2194;
  double t2196;
  double t2121;
  double t1516;
  double t1548;
  double t1568;
  double t1569;
  double t1577;
  double t1581;
  double t1583;
  double t1589;
  double t1590;
  double t1591;
  double t1611;
  double t1612;
  double t1629;
  double t1631;
  double t1638;
  double t1647;
  double t1649;
  double t1653;
  double t1663;
  double t1666;
  double t1667;
  double t1668;
  double t1669;
  double t1676;
  double t2314;
  double t2318;
  double t2320;
  double t2331;
  double t1682;
  double t1684;
  double t1716;
  double t1719;
  double t1727;
  double t1729;
  double t1730;
  double t1746;
  double t2355;
  double t1767;
  double t1774;
  double t1776;
  double t1788;
  double t1794;
  double t1798;
  double t1804;
  double t1805;
  double t2328;
  double t2392;
  double t2393;
  double t1817;
  double t1819;
  double t1822;
  double t1825;
  double t1837;
  double t1840;
  double t1850;
  double t1851;
  double t2435;
  double t2445;
  double t2381;
  double t2504;
  double t2401;
  double t2539;
  double t2495;
  double t2332;
  double t909;
  double t2628;
  double t2629;
  double t2632;
  double t2636;
  double t2637;
  double t2642;
  double t2644;
  double t2649;
  double t2652;
  double t2655;
  double t2656;
  double t2657;
  double t2658;
  double t2659;
  double t2665;
  double t2668;
  double t2669;
  double t2680;
  double t2681;
  double t2685;
  double t2691;
  double t2751;
  double t2674;
  double t2689;
  double t2692;
  double t2695;
  double t2699;
  double t2703;
  double t2704;
  double t2705;
  double t2706;
  double t2708;
  double t2711;
  double t2714;
  double t2722;
  double t2725;
  double t2753;
  double t2754;
  double t2756;
  double t2766;
  double t2778;
  double t2784;
  double t2727;
  double t2732;
  double t2740;
  double t2742;
  double t2744;
  double t2747;
  double t2816;
  double t2818;
  double t2822;
  double t2828;
  double t2795;
  double t2796;
  double t2804;
  double t2805;
  double t2858;
  double t2976;
  double t2968;
  double t2982;
  double t2985;
  double t2988;
  double t2994;
  double t3003;
  double t3020;
  double t3022;
  double t3042;
  double t3065;
  double t3071;
  double t3072;
  double t3092;
  double t3095;
  double t3096;
  double t3101;
  double t3114;
  double t3124;
  double t3141;
  double t3143;
  double t3152;
  double t3163;
  double t3164;
  double t3166;
  double t3180;
  double t3186;
  double t3200;
  double t1898;
  double t1904;
  double t1906;
  double t3202;
  double t3203;
  double t3204;
  double t3206;
  double t1915;
  double t1929;
  double t1942;
  double t1948;
  double t1950;
  double t3211;
  double t3212;
  double t3215;
  double t3226;
  double t1961;
  double t1964;
  double t1965;
  double t1978;
  double t1979;
  double t3241;
  double t3257;
  double t3259;
  double t3266;
  double t1987;
  double t1990;
  double t2019;
  double t2027;
  double t3271;
  double t3273;
  double t3274;
  double t2050;
  double t2068;
  double t2091;
  double t2092;
  double t2103;
  double t2106;
  double t2107;
  double t3275;
  double t3277;
  double t3281;
  double t3283;
  double t2111;
  double t2114;
  double t2122;
  double t2123;
  double t2137;
  double t2139;
  double t2144;
  double t3287;
  double t3288;
  double t3289;
  double t3298;
  double t2158;
  double t2159;
  double t2164;
  double t2168;
  double t2169;
  double t2171;
  double t2173;
  double t3309;
  double t3310;
  double t3311;
  double t3313;
  double t2187;
  double t2197;
  double t2202;
  double t2209;
  double t2223;
  double t2224;
  double t2239;
  double t2248;
  double t2269;
  double t2275;
  double t2284;
  double t2287;
  double t3325;
  double t3326;
  double t3332;
  double t2313;
  double t2322;
  double t2339;
  double t2348;
  double t2358;
  double t2359;
  double t2361;
  double t3334;
  double t3335;
  double t3336;
  double t3339;
  double t2367;
  double t2380;
  double t2383;
  double t2385;
  double t2405;
  double t2410;
  double t2418;
  double t3341;
  double t3347;
  double t3351;
  double t3352;
  double t2430;
  double t2433;
  double t2440;
  double t2442;
  double t2455;
  double t2462;
  double t2490;
  double t3354;
  double t3358;
  double t3364;
  double t3369;
  double t2496;
  double t2507;
  double t2516;
  double t2521;
  double t2542;
  double t2547;
  double t2551;
  double t2567;
  double t2576;
  double t2582;
  double t2592;
  double t2612;
  double t3115;
  double t3602;
  double t3604;
  double t3605;
  double t3606;
  double t3607;
  double t3615;
  double t3616;
  double t3617;
  double t3658;
  double t3661;
  double t3666;
  double t3696;
  double t3698;
  double t3704;
  double t3715;
  double t2815;
  double t2826;
  double t2830;
  double t2833;
  double t3672;
  double t3680;
  double t3684;
  double t3687;
  double t2835;
  double t2836;
  double t2837;
  double t3726;
  double t3727;
  double t3731;
  double t3736;
  double t2841;
  double t2844;
  double t2851;
  double t2852;
  double t2863;
  double t2870;
  double t2914;
  double t2916;
  double t3844;
  double t3845;
  double t3848;
  double t3852;
  double t3854;
  double t3855;
  double t3877;
  double t3882;
  double t3889;
  double t3892;
  double t3896;
  double t3914;
  double t3921;
  double t3931;
  double t3943;
  double t3945;
  double t3949;
  double t3966;
  double t3968;
  double t3977;
  double t3978;
  double t3984;
  double t3991;
  double t3995;
  double t3997;
  double t4000;
  double t4001;
  double t4003;
  double t4004;
  double t4007;
  double t4017;
  double t4018;
  double t4022;
  double t4027;
  double t4028;
  double t4033;
  double t4037;
  double t4064;
  double t4075;
  double t4084;
  double t4085;
  double t4101;
  double t4107;
  double t4110;
  double t4111;
  double t4128;
  double t4139;
  double t4142;
  double t4149;
  double t4162;
  double t4163;
  double t4166;
  double t4184;
  double t4185;
  double t4186;
  double t4189;
  double t4207;
  double t4214;
  double t4217;
  double t4222;
  double t4228;
  double t4229;
  double t4232;
  double t4464;
  double t4467;
  double t4482;
  double t4484;
  double t4486;
  double t4472;
  double t4477;
  double t4480;
  double t4492;
  double t4493;
  double t4503;
  double t4504;
  double t4505;
  double t4524;
  double t4525;
  double t4526;
  double t4508;
  double t4510;
  double t4522;
  double t4597;
  double t4603;
  double t4611;
  double t4586;
  double t4592;
  double t4594;
  double t4615;
  double t4617;
  double t4621;
  double t4650;
  double t4653;
  double t4630;
  double t4634;
  double t4665;
  double t4672;
  double t4677;
  double t4678;
  double t4687;
  double t4704;
  double t4705;
  double t4706;
  double t4694;
  double t4700;
  double t4701;
  double t4794;
  double t4797;
  double t4798;
  double t4770;
  double t4771;
  double t4774;
  double t4775;
  double t4776;
  double t4779;
  double t4785;
  double t4787;
  double t4800;
  double t4804;
  double t4805;
  double t4808;
  double t4850;
  double t4852;
  double t4858;
  double t4861;
  double t4875;
  double t4876;
  double t4879;
  double t4881;
  double t4811;
  double t4815;
  double t4826;
  double t4843;
  double t4959;
  double t4960;
  double t4962;
  double t4966;
  double t4941;
  double t4942;
  double t4946;
  double t4947;
  double t4976;
  double t4977;
  double t5043;
  double t5045;
  double t5048;
  double t5049;
  double t5050;
  double t5054;
  double t5059;
  double t5060;
  double t5070;
  double t5076;
  double t5088;
  double t5089;
  double t5091;
  double t5092;
  double t5094;
  double t5104;
  double t5106;
  double t5107;
  double t5115;
  double t5116;
  double t5119;
  double t5234;
  double t5236;
  double t5237;
  double t5196;
  double t5200;
  double t5204;
  double t5205;
  double t5208;
  double t5216;
  double t5217;
  double t5218;
  double t5227;
  double t5231;
  double t5240;
  double t5247;
  double t5252;
  double t5253;
  double t5260;
  double t5261;
  double t5263;
  double t5264;
  double t5267;
  double t5272;
  double t5273;
  double t5274;
  double t5376;
  double t5382;
  double t5384;
  double t5388;
  double t5400;
  double t5401;
  double t5403;
  double t5419;
  double t5423;
  double t5427;
  double t5430;
  double t5479;
  double t5483;
  double t5484;
  double t5487;
  double t5489;
  double t5493;
  double t5494;
  double t5497;
  double t5504;
  double t5507;
  double t5518;
  double t5520;
  double t5523;
  double t5525;
  double t5527;
  double t5529;
  double t5531;
  double t5534;
  double t5538;
  double t5542;
  double t5543;
  double t5629;
  double t5654;
  double t5659;
  double t5692;
  double t5696;
  double t5697;
  double t5635;
  double t5739;
  double t5679;
  double t5630;
  double t5634;
  double t5636;
  double t5638;
  double t5642;
  double t5647;
  double t5653;
  double t5655;
  double t5658;
  double t5663;
  double t5666;
  double t5667;
  double t5668;
  double t5671;
  double t5673;
  double t5676;
  double t5681;
  double t5684;
  double t5685;
  double t5687;
  double t5700;
  double t5701;
  double t5705;
  double t5709;
  double t5711;
  double t5717;
  double t5718;
  double t5734;
  double t5736;
  double t5737;
  double t5740;
  double t5750;
  double t5754;
  double t5758;
  double t5759;
  double t5765;
  double t5769;
  double t5772;
  double t5776;
  double t5845;
  double t5900;
  double t5882;
  double t5884;
  double t5888;
  double t5892;
  double t5918;
  double t5921;
  double t5923;
  double t5924;
  double t5896;
  double t5966;
  double t5972;
  double t5973;
  double t5974;
  double t5859;
  double t6031;
  double t5951;
  double t6091;
  double t6094;
  double t6100;
  double t6101;
  double t6121;
  double t6123;
  double t6130;
  double t6135;
  double t6139;
  double t6140;
  double t6152;
  double t6155;
  double t6156;
  double t6157;
  double t6159;
  double t6161;
  double t6163;
  double t6164;
  double t6170;
  double t6172;
  double t6175;
  double t6266;
  double t6278;
  double t6286;
  double t6324;
  double t6325;
  double t6327;
  double t6260;
  double t6354;
  double t6304;
  double t6261;
  double t6265;
  double t6268;
  double t6269;
  double t6272;
  double t6273;
  double t6277;
  double t6279;
  double t6281;
  double t6287;
  double t6294;
  double t6295;
  double t6296;
  double t6297;
  double t6299;
  double t6300;
  double t6312;
  double t6313;
  double t6322;
  double t6323;
  double t6328;
  double t6332;
  double t6333;
  double t6339;
  double t6340;
  double t6344;
  double t6345;
  double t6349;
  double t6350;
  double t6352;
  double t6358;
  double t6360;
  double t6361;
  double t6365;
  double t6369;
  double t6372;
  double t6374;
  double t6375;
  double t6376;
  double t6442;
  double t6460;
  double t6461;
  double t6462;
  double t6463;
  double t6487;
  double t6490;
  double t6493;
  double t6495;
  double t6450;
  double t6513;
  double t6516;
  double t6521;
  double t6523;
  double t6540;
  double t6466;
  double t6505;
  double t6500;
  t18 = Sin(var1[3]);
  t29 = Cos(var1[3]);
  t24 = Cos(var1[5]);
  t25 = Sin(var1[4]);
  t40 = Sin(var1[5]);
  t14 = Cos(var1[4]);
  t26 = t24*t18*t25;
  t44 = t29*t40;
  t46 = t26 + t44;
  t186 = Cos(var1[9]);
  t189 = -1.*t186;
  t234 = 1. + t189;
  t346 = Sin(var1[9]);
  t400 = -0.15121*t346;
  t53 = t29*t24;
  t55 = -1.*t18*t25*t40;
  t58 = t53 + t55;
  t168 = 0.036395*t14*t18;
  t778 = Cos(var1[12]);
  t783 = -1.*t778;
  t789 = 1. + t783;
  t805 = Sin(var1[12]);
  t808 = 0.15121*t805;
  t914 = Cos(var1[15]);
  t918 = -1.*t914;
  t923 = 1. + t918;
  t925 = -0.15121*t923;
  t930 = Sin(var1[15]);
  t1042 = Cos(var1[10]);
  t291 = 0.15121*t234;
  t510 = t291 + t400;
  t515 = t510*t46;
  t529 = -0.15121*t234;
  t555 = t529 + t400;
  t558 = t555*t58;
  t1054 = -1.*t1042;
  t1060 = 1. + t1054;
  t1077 = -1. + t1042;
  t1085 = Sin(var1[10]);
  t634 = -1.*t346*t46;
  t635 = t186*t58;
  t696 = t634 + t635;
  t708 = t186*t46;
  t715 = t346*t58;
  t716 = t708 + t715;
  t1233 = Cos(var1[13]);
  t1237 = -1.*t1233;
  t1238 = 1. + t1237;
  t1260 = Sin(var1[13]);
  t794 = -0.15121*t789;
  t813 = t794 + t808;
  t822 = t813*t46;
  t830 = 0.15121*t789;
  t831 = t830 + t808;
  t834 = t831*t58;
  t1249 = 4.e-6*t1238;
  t836 = -1.*t805*t46;
  t842 = t778*t58;
  t861 = t836 + t842;
  t1275 = -2.8e-11*t1238;
  t1302 = 7.e-6*t1238;
  t878 = t778*t46;
  t880 = t805*t58;
  t886 = t878 + t880;
  t1360 = -1.*t1260;
  t1378 = -4.e-6*t1260;
  t1292 = -7.e-6*t1260;
  t1406 = -7.e-6*t1238;
  t1304 = 4.e-6*t1260;
  t1439 = -1. + t1233;
  t1443 = 4.e-6*t1439;
  t1269 = 7.e-6*t1260;
  t1391 = 2.8e-11*t1238;
  t1532 = Cos(var1[16]);
  t1543 = -1.*t1532;
  t1546 = 1. + t1543;
  t1563 = Sin(var1[16]);
  t932 = -0.15121*t930;
  t934 = t925 + t932;
  t945 = t934*t46;
  t946 = 0.15121*t930;
  t947 = t925 + t946;
  t952 = t947*t58;
  t1570 = -1. + t1532;
  t1574 = 4.e-6*t1570;
  t956 = -1.*t930*t46;
  t957 = t914*t58;
  t960 = t956 + t957;
  t1605 = 7.e-6*t1546;
  t1560 = 2.8e-11*t1546;
  t976 = t914*t46;
  t979 = t930*t58;
  t980 = t976 + t979;
  t1660 = -4.e-6*t1563;
  t1575 = -7.e-6*t1563;
  t1681 = -2.8e-11*t1546;
  t1567 = -1.*t1563;
  t1779 = 4.e-6*t1546;
  t1627 = 7.e-6*t1563;
  t1691 = -7.e-6*t1546;
  t1610 = 4.e-6*t1563;
  t1024 = -4.9936e-13*var1[10];
  t1064 = -0.038749*t1060;
  t1081 = 6.19984e-13*t1077;
  t1088 = -0.281210000004*t1085;
  t1090 = t1024 + t1064 + t1081 + t1088;
  t1095 = -1.*t14*t1090*t18;
  t1099 = -1.2484e-7*var1[10];
  t1102 = 2.479936e-18*t1060;
  t1107 = -1.54996e-7*t1077;
  t1116 = 1.124840000016e-6*t1085;
  t1118 = t1099 + t1102 + t1107 + t1116;
  t1120 = t1118*t696;
  t1128 = 0.281210000008499*t1060;
  t1129 = -0.03874900000062*t1085;
  t1133 = t1128 + t1129;
  t1136 = t1133*t716;
  t1138 = -1.*t14*t1085*t18;
  t1139 = -4.e-6*t1085*t696;
  t1140 = -1.000000000016*t1060;
  t1162 = 1. + t1140;
  t1165 = t1162*t716;
  t1172 = t1138 + t1139 + t1165;
  t1880 = Cos(var1[11]);
  t1881 = -1.*t1880;
  t1897 = 1. + t1881;
  t1901 = Sin(var1[11]);
  t1180 = -1.*t1042*t14*t18;
  t1183 = 4.e-6*t1060*t696;
  t1192 = -1.*t1085*t716;
  t1193 = t1180 + t1183 + t1192;
  t1940 = -1. + t1880;
  t1196 = -4.e-6*t1060*t14*t18;
  t1205 = 1.6e-11*t1077;
  t1210 = 1. + t1205;
  t1214 = t1210*t696;
  t1215 = 4.e-6*t1085*t716;
  t1218 = t1196 + t1214 + t1215;
  t1229 = 5.856279999999999e-13*var1[13];
  t1244 = -0.0387489999948987*t1238;
  t1271 = t1249 + t1269;
  t1273 = -2.123459e-6*t1271;
  t1277 = t1275 + t1260;
  t1278 = -0.281209000004*t1277;
  t1279 = t1229 + t1244 + t1273 + t1278;
  t1281 = -1.*t14*t1279*t18;
  t1285 = -1.4640699999999997e-7*var1[13];
  t1291 = -1.38024835e-16*t1238;
  t1294 = t1249 + t1292;
  t1300 = -0.038748999993*t1294;
  t1305 = t1302 + t1304;
  t1314 = -0.281209000004*t1305;
  t1332 = t1285 + t1291 + t1300 + t1314;
  t1334 = t1332*t861;
  t1347 = 1.0248489999999998e-12*var1[13];
  t1357 = -0.28120900000849935*t1238;
  t1362 = t1275 + t1360;
  t1368 = -0.038748999993*t1362;
  t1380 = t1302 + t1378;
  t1383 = -2.123459e-6*t1380;
  t1387 = t1347 + t1357 + t1368 + t1383;
  t1390 = t1387*t886;
  t2061 = Cos(var1[14]);
  t2062 = -1.*t2061;
  t2066 = 1. + t2062;
  t2078 = Sin(var1[14]);
  t1398 = t1391 + t1360;
  t1404 = -1.*t14*t1398*t18;
  t1417 = t1406 + t1378;
  t1425 = t1417*t861;
  t1427 = -1.000000000016*t1238;
  t1432 = 1. + t1427;
  t1434 = t1432*t886;
  t1437 = t1404 + t1425 + t1434;
  t2093 = 7.e-6*t2066;
  t1445 = t1443 + t1292;
  t1447 = -1.*t14*t1445*t18;
  t1451 = -6.5e-11*t1238;
  t1453 = 1. + t1451;
  t1455 = t1453*t861;
  t1460 = t1406 + t1304;
  t1463 = t1460*t886;
  t1466 = t1447 + t1455 + t1463;
  t2119 = 4.e-6*t2066;
  t2074 = -2.8e-11*t2066;
  t1468 = -1.000000000049*t1238;
  t1469 = 1. + t1468;
  t1472 = -1.*t1469*t14*t18;
  t1473 = t1443 + t1269;
  t1477 = t1473*t861;
  t1478 = t1391 + t1260;
  t1488 = t1478*t886;
  t1489 = t1472 + t1477 + t1488;
  t2160 = 7.e-6*t2078;
  t2101 = -4.e-6*t2078;
  t2184 = 2.8e-11*t2066;
  t2080 = -1.*t2078;
  t2237 = -7.e-6*t2066;
  t2125 = 4.e-6*t2078;
  t2194 = -1. + t2061;
  t2196 = 4.e-6*t2194;
  t2121 = -7.e-6*t2078;
  t1516 = 1.5843479999999999e-12*var1[16];
  t1548 = -0.03874900000889869*t1546;
  t1568 = t1560 + t1567;
  t1569 = -0.281211000004*t1568;
  t1577 = t1574 + t1575;
  t1581 = -1.8134809999999998e-6*t1577;
  t1583 = t1516 + t1548 + t1569 + t1581;
  t1589 = -1.*t14*t1583*t18;
  t1590 = 3.9608699999999997e-7*var1[16];
  t1591 = -1.1787626499999999e-16*t1546;
  t1611 = t1605 + t1610;
  t1612 = -0.281211000004*t1611;
  t1629 = t1574 + t1627;
  t1631 = -0.038749000006999997*t1629;
  t1638 = t1590 + t1591 + t1612 + t1631;
  t1647 = t1638*t960;
  t1649 = -2.7726089999999997e-12*var1[16];
  t1653 = -0.2812110000084994*t1546;
  t1663 = t1605 + t1660;
  t1666 = -1.8134809999999998e-6*t1663;
  t1667 = t1560 + t1563;
  t1668 = -0.038749000006999997*t1667;
  t1669 = t1649 + t1653 + t1666 + t1668;
  t1676 = t1669*t980;
  t2314 = Cos(var1[17]);
  t2318 = -1.*t2314;
  t2320 = 1. + t2318;
  t2331 = Sin(var1[17]);
  t1682 = t1681 + t1563;
  t1684 = -1.*t14*t1682*t18;
  t1716 = t1691 + t1660;
  t1719 = t1716*t960;
  t1727 = -1.000000000016*t1546;
  t1729 = 1. + t1727;
  t1730 = t1729*t980;
  t1746 = t1684 + t1719 + t1730;
  t2355 = 2.8e-11*t2320;
  t1767 = -1.000000000049*t1546;
  t1774 = 1. + t1767;
  t1776 = -1.*t1774*t14*t18;
  t1788 = t1779 + t1575;
  t1794 = t1788*t960;
  t1798 = t1681 + t1567;
  t1804 = t1798*t980;
  t1805 = t1776 + t1794 + t1804;
  t2328 = 7.e-6*t2320;
  t2392 = -1. + t2314;
  t2393 = 4.e-6*t2392;
  t1817 = t1779 + t1627;
  t1819 = -1.*t14*t1817*t18;
  t1822 = -6.5e-11*t1546;
  t1825 = 1. + t1822;
  t1837 = t1825*t960;
  t1840 = t1691 + t1610;
  t1850 = t1840*t980;
  t1851 = t1819 + t1837 + t1850;
  t2435 = 4.e-6*t2331;
  t2445 = 7.e-6*t2331;
  t2381 = -1.*t2331;
  t2504 = 4.e-6*t2320;
  t2401 = -7.e-6*t2331;
  t2539 = -2.8e-11*t2320;
  t2495 = -7.e-6*t2320;
  t2332 = -4.e-6*t2331;
  t909 = 0.036336*t14*t18;
  t2628 = Cos(var1[6]);
  t2629 = -1.*t2628;
  t2632 = 1. + t2629;
  t2636 = 0.15121*t2632;
  t2637 = Sin(var1[6]);
  t2642 = -0.15121*t2637;
  t2644 = t2636 + t2642;
  t2649 = t58*t2644;
  t2652 = 0.15121*t2637;
  t2655 = t2636 + t2652;
  t2656 = t46*t2655;
  t2657 = t2628*t58;
  t2658 = -1.*t46*t2637;
  t2659 = t2657 + t2658;
  t2665 = t2628*t46;
  t2668 = t58*t2637;
  t2669 = t2665 + t2668;
  t2680 = Cos(var1[7]);
  t2681 = -1.*t2680;
  t2685 = 1. + t2681;
  t2691 = Sin(var1[7]);
  t2751 = -1. + t2680;
  t2674 = -1.2484e-7*var1[7];
  t2689 = -1.5499600000248e-7*t2685;
  t2692 = 1.124840000016e-6*t2691;
  t2695 = t2674 + t2689 + t2692;
  t2699 = t2659*t2695;
  t2703 = 0.281210000008499*t2685;
  t2704 = 0.03874900000062*t2691;
  t2705 = t2703 + t2704;
  t2706 = t2669*t2705;
  t2708 = 4.9936e-13*var1[7];
  t2711 = -0.03874900000062*t2685;
  t2714 = 0.281210000004*t2691;
  t2722 = t2708 + t2711 + t2714;
  t2725 = -1.*t14*t18*t2722;
  t2753 = -4.e-6*t14*t2751*t18;
  t2754 = 1.6e-11*t2751;
  t2756 = 1. + t2754;
  t2766 = t2756*t2659;
  t2778 = 4.e-6*t2669*t2691;
  t2784 = t2753 + t2766 + t2778;
  t2727 = -1.000000000016*t2685;
  t2732 = 1. + t2727;
  t2740 = t2732*t2669;
  t2742 = t14*t18*t2691;
  t2744 = -4.e-6*t2659*t2691;
  t2747 = t2740 + t2742 + t2744;
  t2816 = Cos(var1[8]);
  t2818 = -1.*t2816;
  t2822 = 1. + t2818;
  t2828 = Sin(var1[8]);
  t2795 = -1.*t14*t2680*t18;
  t2796 = 4.e-6*t2751*t2659;
  t2804 = t2669*t2691;
  t2805 = t2795 + t2796 + t2804;
  t2858 = -1. + t2816;
  t2976 = 0.036395*t29*t25;
  t2968 = -1.*t29*t14*t24*t510;
  t2982 = t29*t14*t555*t40;
  t2985 = t29*t14*t24*t346;
  t2988 = t186*t29*t14*t40;
  t2994 = t2985 + t2988;
  t3003 = -1.*t186*t29*t14*t24;
  t3020 = t29*t14*t346*t40;
  t3022 = t3003 + t3020;
  t3042 = -1.*t29*t14*t24*t813;
  t3065 = t29*t14*t831*t40;
  t3071 = t29*t14*t24*t805;
  t3072 = t778*t29*t14*t40;
  t3092 = t3071 + t3072;
  t3095 = -1.*t778*t29*t14*t24;
  t3096 = t29*t14*t805*t40;
  t3101 = t3095 + t3096;
  t3114 = -1.*t29*t14*t24*t934;
  t3124 = t29*t14*t947*t40;
  t3141 = t29*t14*t24*t930;
  t3143 = t914*t29*t14*t40;
  t3152 = t3141 + t3143;
  t3163 = -1.*t914*t29*t14*t24;
  t3164 = t29*t14*t930*t40;
  t3166 = t3163 + t3164;
  t3180 = -1.*t29*t1090*t25;
  t3186 = t1118*t2994;
  t3200 = t1133*t3022;
  t1898 = 0.50315000001605*t1897;
  t1904 = -0.0398890000006382*t1901;
  t1906 = t1898 + t1904;
  t3202 = -1.*t29*t1085*t25;
  t3203 = -4.e-6*t1085*t2994;
  t3204 = t1162*t3022;
  t3206 = t3202 + t3203 + t3204;
  t1915 = -5.04e-14*var1[11];
  t1929 = -0.039889*t1897;
  t1942 = 6.38224e-13*t1940;
  t1948 = -0.503150000008*t1901;
  t1950 = t1915 + t1929 + t1942 + t1948;
  t3211 = -1.*t1042*t29*t25;
  t3212 = 4.e-6*t1060*t2994;
  t3215 = -1.*t1085*t3022;
  t3226 = t3211 + t3212 + t3215;
  t1961 = -1.26e-8*var1[11];
  t1964 = 2.552896e-18*t1897;
  t1965 = -1.59556e-7*t1940;
  t1978 = 2.012600000032e-6*t1901;
  t1979 = t1961 + t1964 + t1965 + t1978;
  t3241 = -4.e-6*t1060*t29*t25;
  t3257 = t1210*t2994;
  t3259 = 4.e-6*t1085*t3022;
  t3266 = t3241 + t3257 + t3259;
  t1987 = 1.6e-11*t1940;
  t1990 = 1. + t1987;
  t2019 = -1.000000000016*t1897;
  t2027 = 1. + t2019;
  t3271 = -1.*t29*t1279*t25;
  t3273 = t1332*t3092;
  t3274 = t1387*t3101;
  t2050 = 1.8190549999999993e-12*var1[14];
  t2068 = -0.5031490000160505*t2066;
  t2091 = t2074 + t2080;
  t2092 = -0.038922999986*t2091;
  t2103 = t2093 + t2101;
  t2106 = -3.6777349999999994e-6*t2103;
  t2107 = t2050 + t2068 + t2092 + t2106;
  t3275 = -1.*t29*t1398*t25;
  t3277 = t1417*t3092;
  t3281 = t1432*t3101;
  t3283 = t3275 + t3277 + t3281;
  t2111 = -2.598649999999999e-7*var1[14];
  t2114 = -2.3905277499999995e-16*t2066;
  t2122 = t2119 + t2121;
  t2123 = -0.038922999986*t2122;
  t2137 = t2093 + t2125;
  t2139 = -0.503149000008*t2137;
  t2144 = t2111 + t2114 + t2123 + t2139;
  t3287 = -1.*t29*t1445*t25;
  t3288 = t1453*t3092;
  t3289 = t1460*t3101;
  t3298 = t3287 + t3288 + t3289;
  t2158 = 1.0394599999999997e-12*var1[14];
  t2159 = -0.03892299998790722*t2066;
  t2164 = t2119 + t2160;
  t2168 = -3.6777349999999994e-6*t2164;
  t2169 = t2074 + t2078;
  t2171 = -0.503149000008*t2169;
  t2173 = t2158 + t2159 + t2168 + t2171;
  t3309 = -1.*t1469*t29*t25;
  t3310 = t1473*t3092;
  t3311 = t1478*t3101;
  t3313 = t3309 + t3310 + t3311;
  t2187 = t2184 + t2078;
  t2197 = t2196 + t2160;
  t2202 = -1.000000000049*t2066;
  t2209 = 1. + t2202;
  t2223 = -1.000000000016*t2066;
  t2224 = 1. + t2223;
  t2239 = t2237 + t2101;
  t2248 = t2184 + t2080;
  t2269 = t2237 + t2125;
  t2275 = -6.5e-11*t2066;
  t2284 = 1. + t2275;
  t2287 = t2196 + t2121;
  t3325 = -1.*t29*t1583*t25;
  t3326 = t1638*t3152;
  t3332 = t1669*t3166;
  t2313 = -1.9784030000000015e-12*var1[17];
  t2322 = -0.5031510000160505*t2320;
  t2339 = t2328 + t2332;
  t2348 = -3.367757e-6*t2339;
  t2358 = t2355 + t2331;
  t2359 = -0.038575000014*t2358;
  t2361 = t2313 + t2322 + t2348 + t2359;
  t3334 = -1.*t29*t1682*t25;
  t3335 = t1716*t3152;
  t3336 = t1729*t3166;
  t3339 = t3334 + t3335 + t3336;
  t2367 = 1.1305160000000008e-12*var1[17];
  t2380 = -0.03857500001589017*t2320;
  t2383 = t2355 + t2381;
  t2385 = -0.5031510000080001*t2383;
  t2405 = t2393 + t2401;
  t2410 = -3.367757e-6*t2405;
  t2418 = t2367 + t2380 + t2385 + t2410;
  t3341 = -1.*t1774*t29*t25;
  t3347 = t1788*t3152;
  t3351 = t1798*t3166;
  t3352 = t3341 + t3347 + t3351;
  t2430 = 2.826290000000002e-7*var1[17];
  t2433 = -2.18904205e-16*t2320;
  t2440 = t2328 + t2435;
  t2442 = -0.5031510000080001*t2440;
  t2455 = t2393 + t2445;
  t2462 = -0.038575000014*t2455;
  t2490 = t2430 + t2433 + t2442 + t2462;
  t3354 = -1.*t29*t1817*t25;
  t3358 = t1825*t3152;
  t3364 = t1840*t3166;
  t3369 = t3354 + t3358 + t3364;
  t2496 = t2495 + t2435;
  t2507 = t2504 + t2445;
  t2516 = -6.5e-11*t2320;
  t2521 = 1. + t2516;
  t2542 = t2539 + t2381;
  t2547 = -1.000000000049*t2320;
  t2551 = 1. + t2547;
  t2567 = t2504 + t2401;
  t2576 = -1.000000000016*t2320;
  t2582 = 1. + t2576;
  t2592 = t2539 + t2331;
  t2612 = t2495 + t2332;
  t3115 = 0.036336*t29*t25;
  t3602 = t29*t14*t40*t2644;
  t3604 = -1.*t29*t14*t24*t2655;
  t3605 = t29*t14*t2628*t40;
  t3606 = t29*t14*t24*t2637;
  t3607 = t3605 + t3606;
  t3615 = -1.*t29*t14*t24*t2628;
  t3616 = t29*t14*t40*t2637;
  t3617 = t3615 + t3616;
  t3658 = t3607*t2695;
  t3661 = t3617*t2705;
  t3666 = -1.*t29*t25*t2722;
  t3696 = -4.e-6*t29*t2751*t25;
  t3698 = t2756*t3607;
  t3704 = 4.e-6*t3617*t2691;
  t3715 = t3696 + t3698 + t3704;
  t2815 = -1.284e-8*var1[8];
  t2826 = -1.5499600000248e-7*t2822;
  t2830 = 2.012840000032e-6*t2828;
  t2833 = t2815 + t2826 + t2830;
  t3672 = t2732*t3617;
  t3680 = t29*t25*t2691;
  t3684 = -4.e-6*t3607*t2691;
  t3687 = t3672 + t3680 + t3684;
  t2835 = 0.503210000016051*t2822;
  t2836 = 0.03874900000062*t2828;
  t2837 = t2835 + t2836;
  t3726 = -1.*t29*t2680*t25;
  t3727 = 4.e-6*t2751*t3607;
  t3731 = t3617*t2691;
  t3736 = t3726 + t3727 + t3731;
  t2841 = 5.136e-14*var1[8];
  t2844 = -0.03874900000062*t2822;
  t2851 = 0.503210000008*t2828;
  t2852 = t2841 + t2844 + t2851;
  t2863 = 1.6e-11*t2858;
  t2870 = 1. + t2863;
  t2914 = -1.000000000016*t2822;
  t2916 = 1. + t2914;
  t3844 = t29*t24*t25;
  t3845 = -1.*t18*t40;
  t3848 = t3844 + t3845;
  t3852 = t24*t18;
  t3854 = t29*t25*t40;
  t3855 = t3852 + t3854;
  t3877 = t555*t3848;
  t3882 = t510*t3855;
  t3889 = t346*t3848;
  t3892 = t186*t3855;
  t3896 = t3889 + t3892;
  t3914 = t186*t3848;
  t3921 = -1.*t346*t3855;
  t3931 = t3914 + t3921;
  t3943 = t831*t3848;
  t3945 = t813*t3855;
  t3949 = t805*t3848;
  t3966 = t778*t3855;
  t3968 = t3949 + t3966;
  t3977 = t778*t3848;
  t3978 = -1.*t805*t3855;
  t3984 = t3977 + t3978;
  t3991 = t947*t3848;
  t3995 = t934*t3855;
  t3997 = t930*t3848;
  t4000 = t914*t3855;
  t4001 = t3997 + t4000;
  t4003 = t914*t3848;
  t4004 = -1.*t930*t3855;
  t4007 = t4003 + t4004;
  t4017 = t1133*t3896;
  t4018 = t1118*t3931;
  t4022 = 4.e-6*t1085*t3896;
  t4027 = t1210*t3931;
  t4028 = t4022 + t4027;
  t4033 = -1.*t1085*t3896;
  t4037 = 4.e-6*t1060*t3931;
  t4064 = t4033 + t4037;
  t4075 = t1162*t3896;
  t4084 = -4.e-6*t1085*t3931;
  t4085 = t4075 + t4084;
  t4101 = t1387*t3968;
  t4107 = t1332*t3984;
  t4110 = t1460*t3968;
  t4111 = t1453*t3984;
  t4128 = t4110 + t4111;
  t4139 = t1432*t3968;
  t4142 = t1417*t3984;
  t4149 = t4139 + t4142;
  t4162 = t1478*t3968;
  t4163 = t1473*t3984;
  t4166 = t4162 + t4163;
  t4184 = t1669*t4001;
  t4185 = t1638*t4007;
  t4186 = t1840*t4001;
  t4189 = t1825*t4007;
  t4207 = t4186 + t4189;
  t4214 = t1798*t4001;
  t4217 = t1788*t4007;
  t4222 = t4214 + t4217;
  t4228 = t1729*t4001;
  t4229 = t1716*t4007;
  t4232 = t4228 + t4229;
  t4464 = t3848*t2644;
  t4467 = t3855*t2655;
  t4482 = t2628*t3848;
  t4484 = -1.*t3855*t2637;
  t4486 = t4482 + t4484;
  t4472 = t2628*t3855;
  t4477 = t3848*t2637;
  t4480 = t4472 + t4477;
  t4492 = t4486*t2695;
  t4493 = t4480*t2705;
  t4503 = t2756*t4486;
  t4504 = 4.e-6*t4480*t2691;
  t4505 = t4503 + t4504;
  t4524 = t2732*t4480;
  t4525 = -4.e-6*t4486*t2691;
  t4526 = t4524 + t4525;
  t4508 = 4.e-6*t2751*t4486;
  t4510 = t4480*t2691;
  t4522 = t4508 + t4510;
  t4597 = -1.*t29*t24*t25;
  t4603 = t18*t40;
  t4611 = t4597 + t4603;
  t4586 = -0.15121*t2628;
  t4592 = t4586 + t2652;
  t4594 = t3855*t4592;
  t4615 = 0.15121*t2628;
  t4617 = t4615 + t2652;
  t4621 = t4611*t4617;
  t4650 = -1.*t2628*t4611;
  t4653 = t4650 + t4484;
  t4630 = -1.*t4611*t2637;
  t4634 = t4472 + t4630;
  t4665 = t4653*t2695;
  t4672 = t4634*t2705;
  t4677 = t2756*t4653;
  t4678 = 4.e-6*t4634*t2691;
  t4687 = t4677 + t4678;
  t4704 = t2732*t4634;
  t4705 = -4.e-6*t4653*t2691;
  t4706 = t4704 + t4705;
  t4694 = 4.e-6*t2751*t4653;
  t4700 = t4634*t2691;
  t4701 = t4694 + t4700;
  t4794 = t2628*t4611;
  t4797 = t3855*t2637;
  t4798 = t4794 + t4797;
  t4770 = 0.281210000004*t2680;
  t4771 = -0.03874900000062*t2691;
  t4774 = 4.9936e-13 + t4770 + t4771;
  t4775 = t29*t14*t4774;
  t4776 = 1.124840000016e-6*t2680;
  t4779 = -1.5499600000248e-7*t2691;
  t4785 = -1.2484e-7 + t4776 + t4779;
  t4787 = t4634*t4785;
  t4800 = 0.03874900000062*t2680;
  t4804 = 0.281210000008499*t2691;
  t4805 = t4800 + t4804;
  t4808 = t4798*t4805;
  t4850 = 4.e-6*t2680*t4798;
  t4852 = -4.e-6*t29*t14*t2691;
  t4858 = -1.6e-11*t4634*t2691;
  t4861 = t4850 + t4852 + t4858;
  t4875 = -1.*t29*t14*t2680;
  t4876 = -4.e-6*t2680*t4634;
  t4879 = -1.000000000016*t4798*t2691;
  t4881 = t4875 + t4876 + t4879;
  t4811 = t2680*t4798;
  t4815 = -1.*t29*t14*t2691;
  t4826 = -4.e-6*t4634*t2691;
  t4843 = t4811 + t4815 + t4826;
  t4959 = 4.e-6*t29*t14*t2751;
  t4960 = t2756*t4634;
  t4962 = 4.e-6*t4798*t2691;
  t4966 = t4959 + t4960 + t4962;
  t4941 = t29*t14*t2680;
  t4942 = 4.e-6*t2751*t4634;
  t4946 = t4798*t2691;
  t4947 = t4941 + t4942 + t4946;
  t4976 = t2732*t4798;
  t4977 = t4976 + t4815 + t4826;
  t5043 = -0.15121*t186;
  t5045 = 0.15121*t346;
  t5048 = t5043 + t5045;
  t5049 = t5048*t4611;
  t5050 = t5043 + t400;
  t5054 = t5050*t3855;
  t5059 = -1.*t346*t4611;
  t5060 = t5059 + t3892;
  t5070 = -1.*t186*t4611;
  t5076 = t5070 + t3921;
  t5088 = t1133*t5060;
  t5089 = t1118*t5076;
  t5091 = 4.e-6*t1085*t5060;
  t5092 = t1210*t5076;
  t5094 = t5091 + t5092;
  t5104 = -1.*t1085*t5060;
  t5106 = 4.e-6*t1060*t5076;
  t5107 = t5104 + t5106;
  t5115 = t1162*t5060;
  t5116 = -4.e-6*t1085*t5076;
  t5119 = t5115 + t5116;
  t5234 = t186*t4611;
  t5236 = t346*t3855;
  t5237 = t5234 + t5236;
  t5196 = -0.281210000004*t1042;
  t5200 = -4.9936e-13 + t5196 + t1129;
  t5204 = t29*t14*t5200;
  t5205 = 1.124840000016e-6*t1042;
  t5208 = 1.5499600000248e-7*t1085;
  t5216 = -1.2484e-7 + t5205 + t5208;
  t5217 = t5216*t5060;
  t5218 = -0.03874900000062*t1042;
  t5227 = 0.281210000008499*t1085;
  t5231 = t5218 + t5227;
  t5240 = t5231*t5237;
  t5247 = -1.*t29*t14*t1085;
  t5252 = -1.*t1042*t5237;
  t5253 = t5247 + t5091 + t5252;
  t5260 = 4.e-6*t29*t14*t1085;
  t5261 = -1.6e-11*t1085*t5060;
  t5263 = 4.e-6*t1042*t5237;
  t5264 = t5260 + t5261 + t5263;
  t5267 = t1042*t29*t14;
  t5272 = -4.e-6*t1042*t5060;
  t5273 = -1.000000000016*t1085*t5237;
  t5274 = t5267 + t5272 + t5273;
  t5376 = t29*t14*t1085;
  t5382 = -4.e-6*t1085*t5060;
  t5384 = t1162*t5237;
  t5388 = t5376 + t5382 + t5384;
  t5400 = 4.e-6*t1060*t5060;
  t5401 = -1.*t1085*t5237;
  t5403 = t5267 + t5400 + t5401;
  t5419 = 4.e-6*t1060*t29*t14;
  t5423 = t1210*t5060;
  t5427 = 4.e-6*t1085*t5237;
  t5430 = t5419 + t5423 + t5427;
  t5479 = 0.15121*t778;
  t5483 = -0.15121*t805;
  t5484 = t5479 + t5483;
  t5487 = t5484*t4611;
  t5489 = t5479 + t808;
  t5493 = t5489*t3855;
  t5494 = -1.*t805*t4611;
  t5497 = t5494 + t3966;
  t5504 = -1.*t778*t4611;
  t5507 = t5504 + t3978;
  t5518 = t1387*t5497;
  t5520 = t1332*t5507;
  t5523 = t1460*t5497;
  t5525 = t1453*t5507;
  t5527 = t5523 + t5525;
  t5529 = t1432*t5497;
  t5531 = t1417*t5507;
  t5534 = t5529 + t5531;
  t5538 = t1478*t5497;
  t5542 = t1473*t5507;
  t5543 = t5538 + t5542;
  t5629 = -2.8e-11*t1260;
  t5654 = -7.e-6*t1233;
  t5659 = 4.e-6*t1233;
  t5692 = t778*t4611;
  t5696 = t805*t3855;
  t5697 = t5692 + t5696;
  t5635 = 7.e-6*t1233;
  t5739 = 2.8e-11*t1260;
  t5679 = -4.e-6*t1233;
  t5630 = t1233 + t5629;
  t5634 = -0.281209000004*t5630;
  t5636 = t5635 + t1304;
  t5638 = -2.123459e-6*t5636;
  t5642 = -0.0387489999948987*t1260;
  t5647 = 5.856279999999999e-13 + t5634 + t5638 + t5642;
  t5653 = t29*t14*t5647;
  t5655 = t5654 + t1304;
  t5658 = -0.038748999993*t5655;
  t5663 = t5659 + t1269;
  t5666 = -0.281209000004*t5663;
  t5667 = -1.38024835e-16*t1260;
  t5668 = -1.4640699999999997e-7 + t5658 + t5666 + t5667;
  t5671 = t5668*t5497;
  t5673 = t1237 + t5629;
  t5676 = -0.038748999993*t5673;
  t5681 = t5679 + t1269;
  t5684 = -2.123459e-6*t5681;
  t5685 = -0.28120900000849935*t1260;
  t5687 = 1.0248489999999998e-12 + t5676 + t5684 + t5685;
  t5700 = t5687*t5697;
  t5701 = t5654 + t1378;
  t5705 = t29*t14*t5701;
  t5709 = -6.5e-11*t1260*t5497;
  t5711 = t5659 + t1292;
  t5717 = t5711*t5697;
  t5718 = t5705 + t5709 + t5717;
  t5734 = -1.000000000049*t29*t14*t1260;
  t5736 = t5635 + t1378;
  t5737 = t5736*t5497;
  t5740 = t1233 + t5739;
  t5750 = t5740*t5697;
  t5754 = t5734 + t5737 + t5750;
  t5758 = t1237 + t5739;
  t5759 = t29*t14*t5758;
  t5765 = t5679 + t1292;
  t5769 = t5765*t5497;
  t5772 = -1.000000000016*t1260*t5697;
  t5776 = t5759 + t5769 + t5772;
  t5845 = -2.8e-11*t2078;
  t5900 = 4.e-6*t2061;
  t5882 = t29*t14*t1398;
  t5884 = t1417*t5497;
  t5888 = t1432*t5697;
  t5892 = t5882 + t5884 + t5888;
  t5918 = t29*t14*t1445;
  t5921 = t1453*t5497;
  t5923 = t1460*t5697;
  t5924 = t5918 + t5921 + t5923;
  t5896 = -7.e-6*t2061;
  t5966 = t1469*t29*t14;
  t5972 = t1473*t5497;
  t5973 = t1478*t5697;
  t5974 = t5966 + t5972 + t5973;
  t5859 = -4.e-6*t2061;
  t6031 = 2.8e-11*t2078;
  t5951 = 7.e-6*t2061;
  t6091 = -0.15121*t914;
  t6094 = t6091 + t932;
  t6100 = t6094*t4611;
  t6101 = 0.15121*t914;
  t6121 = t6101 + t932;
  t6123 = t6121*t3855;
  t6130 = -1.*t930*t4611;
  t6135 = t6130 + t4000;
  t6139 = -1.*t914*t4611;
  t6140 = t6139 + t4004;
  t6152 = t1669*t6135;
  t6155 = t1638*t6140;
  t6156 = t1840*t6135;
  t6157 = t1825*t6140;
  t6159 = t6156 + t6157;
  t6161 = t1798*t6135;
  t6163 = t1788*t6140;
  t6164 = t6161 + t6163;
  t6170 = t1729*t6135;
  t6172 = t1716*t6140;
  t6175 = t6170 + t6172;
  t6266 = 2.8e-11*t1563;
  t6278 = 7.e-6*t1532;
  t6286 = 4.e-6*t1532;
  t6324 = t914*t4611;
  t6325 = t930*t3855;
  t6327 = t6324 + t6325;
  t6260 = -7.e-6*t1532;
  t6354 = -2.8e-11*t1563;
  t6304 = -4.e-6*t1532;
  t6261 = t6260 + t1660;
  t6265 = -1.8134809999999998e-6*t6261;
  t6268 = t1543 + t6266;
  t6269 = -0.281211000004*t6268;
  t6272 = -0.03874900000889869*t1563;
  t6273 = 1.5843479999999999e-12 + t6265 + t6269 + t6272;
  t6277 = t29*t14*t6273;
  t6279 = t6278 + t1660;
  t6281 = -0.038749000006999997*t6279;
  t6287 = t6286 + t1627;
  t6294 = -0.281211000004*t6287;
  t6295 = -1.1787626499999999e-16*t1563;
  t6296 = 3.9608699999999997e-7 + t6281 + t6294 + t6295;
  t6297 = t6296*t6135;
  t6299 = t1532 + t6266;
  t6300 = -0.038749000006999997*t6299;
  t6312 = t6304 + t1627;
  t6313 = -1.8134809999999998e-6*t6312;
  t6322 = -0.2812110000084994*t1563;
  t6323 = -2.7726089999999997e-12 + t6300 + t6313 + t6322;
  t6328 = t6323*t6327;
  t6332 = t6278 + t1610;
  t6333 = t29*t14*t6332;
  t6339 = -6.5e-11*t1563*t6135;
  t6340 = t6286 + t1575;
  t6344 = t6340*t6327;
  t6345 = t6333 + t6339 + t6344;
  t6349 = -1.000000000049*t29*t14*t1563;
  t6350 = t6260 + t1610;
  t6352 = t6350*t6135;
  t6358 = t1543 + t6354;
  t6360 = t6358*t6327;
  t6361 = t6349 + t6352 + t6360;
  t6365 = t1532 + t6354;
  t6369 = t29*t14*t6365;
  t6372 = t6304 + t1575;
  t6374 = t6372*t6135;
  t6375 = -1.000000000016*t1563*t6327;
  t6376 = t6369 + t6374 + t6375;
  t6442 = 2.8e-11*t2331;
  t6460 = t29*t14*t1682;
  t6461 = t1716*t6135;
  t6462 = t1729*t6327;
  t6463 = t6460 + t6461 + t6462;
  t6487 = t1774*t29*t14;
  t6490 = t1788*t6135;
  t6493 = t1798*t6327;
  t6495 = t6487 + t6490 + t6493;
  t6450 = -4.e-6*t2314;
  t6513 = t29*t14*t1817;
  t6516 = t1825*t6135;
  t6521 = t1840*t6327;
  t6523 = t6513 + t6516 + t6521;
  t6540 = -2.8e-11*t2331;
  t6466 = -7.e-6*t2314;
  t6505 = 4.e-6*t2314;
  t6500 = 7.e-6*t2314;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-241.56491273999998;
  p_output1[3]=-14.542344*(t2649 + t2656 + t2699 + t2706 + t2725 + 0.308948*t2747 + 0.178694*t2784 - 0.038721*t2805) - 3.0471822000000004*(t2649 + t2656 + t2699 + t2706 + t2725 + t2784*t2833 + t2747*t2837 + t2805*t2852 - 0.03919*(t2805*t2816 + t2747*t2828 + 4.e-6*t2784*t2858) + 0.08826*(4.e-6*t2747*t2828 + 4.e-6*t2805*t2858 + t2784*t2870) + 0.81997*(-4.e-6*t2784*t2828 - 1.*t2805*t2828 + t2747*t2916)) - 14.54228514*(t1095 + t1120 + t1136 + 0.308947*t1172 - 0.0389*t1193 - 0.178694*t1218 + t515 + t558) - 3.04720182*(t1095 + t1120 + t1136 - 0.040917*(t1193*t1880 + 4.e-6*t1218*t1897 - 1.*t1172*t1901) + t1172*t1906 + t1193*t1950 + t1218*t1979 - 0.14916*(4.e-6*t1193*t1897 + 4.e-6*t1172*t1901 + t1218*t1990) + 0.59796*(t1193*t1901 - 4.e-6*t1218*t1901 + t1172*t2027) + t515 + t558) - 85.72468500000001*(0.024028*t14*t18 + 0.00183*t46 - 0.002264*t58) - 21.4087554*(t168 + t515 + t558 - 0.18763*t696 + 0.204386*t716) - 14.54228514*(t1281 + t1334 + t1390 - 0.308948*t1437 + 0.178693*t1466 - 0.038779*t1489 + t822 + t834) - 3.04720182*(t1281 + t1334 + t1390 + t1437*t2107 + t1466*t2144 + t1489*t2173 - 0.038309*(t1437*t2187 + t1466*t2197 + t1489*t2209) - 0.597964*(t1437*t2224 + t1466*t2239 + t1489*t2248) + 0.149257*(t1437*t2269 + t1466*t2284 + t1489*t2287) + t822 + t834) - 21.4087554*(t168 + t822 + t834 + 0.18763*t861 - 0.204386*t886) - 21.33236493*(t2649 + t2656 + 0.187814*t2659 + 0.204368*t2669 + t909) - 14.54228514*(t1589 + t1647 + t1676 - 0.308948*t1746 - 0.038721*t1805 - 0.178695*t1851 + t945 + t952) - 3.04720182*(t1589 + t1647 + t1676 + t1746*t2361 + t1805*t2418 + t1851*t2490 - 0.149263*(t1746*t2496 + t1805*t2507 + t1851*t2521) - 0.039191*(t1746*t2542 + t1805*t2551 + t1851*t2567) - 0.597964*(t1746*t2582 + t1805*t2592 + t1851*t2612) + t945 + t952) - 21.33236493*(t909 + t945 + t952 - 0.187814*t960 - 0.204368*t980);
  p_output1[4]=-21.4087554*(t2968 + t2976 + t2982 - 0.18763*t2994 + 0.204386*t3022) - 21.4087554*(t2976 + t3042 + t3065 + 0.18763*t3092 - 0.204386*t3101) - 21.33236493*(t3114 + t3115 + t3124 - 0.187814*t3152 - 0.204368*t3166) - 14.54228514*(t2968 + t2982 + t3180 + t3186 + t3200 + 0.308947*t3206 - 0.0389*t3226 - 0.178694*t3266) - 3.04720182*(t2968 + t2982 + t3180 + t3186 + t3200 + t1906*t3206 + t1950*t3226 + t1979*t3266 - 0.040917*(-1.*t1901*t3206 + t1880*t3226 + 4.e-6*t1897*t3266) + 0.59796*(t2027*t3206 + t1901*t3226 - 4.e-6*t1901*t3266) - 0.14916*(4.e-6*t1901*t3206 + 4.e-6*t1897*t3226 + t1990*t3266)) - 14.54228514*(t3042 + t3065 + t3271 + t3273 + t3274 - 0.308948*t3283 + 0.178693*t3298 - 0.038779*t3313) - 3.04720182*(t3042 + t3065 + t3271 + t3273 + t3274 + t2107*t3283 + t2144*t3298 + t2173*t3313 - 0.038309*(t2187*t3283 + t2197*t3298 + t2209*t3313) - 0.597964*(t2224*t3283 + t2239*t3298 + t2248*t3313) + 0.149257*(t2269*t3283 + t2284*t3298 + t2287*t3313)) - 14.54228514*(t3114 + t3124 + t3325 + t3326 + t3332 - 0.308948*t3339 - 0.038721*t3352 - 0.178695*t3369) - 3.04720182*(t3114 + t3124 + t3325 + t3326 + t3332 + t2361*t3339 + t2418*t3352 + t2490*t3369 - 0.149263*(t2496*t3339 + t2507*t3352 + t2521*t3369) - 0.039191*(t2542*t3339 + t2551*t3352 + t2567*t3369) - 0.597964*(t2582*t3339 + t2592*t3352 + t2612*t3369)) - 21.33236493*(t3115 + t3602 + t3604 + 0.187814*t3607 + 0.204368*t3617) - 14.542344*(t3602 + t3604 + t3658 + t3661 + t3666 + 0.308948*t3687 + 0.178694*t3715 - 0.038721*t3736) - 3.0471822000000004*(t3602 + t3604 + t3658 + t3661 + t3666 + t2837*t3687 + t2833*t3715 + t2852*t3736 - 0.03919*(t2828*t3687 + 4.e-6*t2858*t3715 + t2816*t3736) + 0.81997*(t2916*t3687 - 4.e-6*t2828*t3715 - 1.*t2828*t3736) + 0.08826*(4.e-6*t2828*t3687 + t2870*t3715 + 4.e-6*t2858*t3736)) - 85.72468500000001*(-0.00183*t14*t24*t29 + 0.024028*t25*t29 - 0.002264*t14*t29*t40);
  p_output1[5]=-85.72468500000001*(-0.002264*t3848 + 0.00183*t3855) - 21.4087554*(t3877 + t3882 + 0.204386*t3896 - 0.18763*t3931) - 21.4087554*(t3943 + t3945 - 0.204386*t3968 + 0.18763*t3984) - 21.33236493*(t3991 + t3995 - 0.204368*t4001 - 0.187814*t4007) - 14.54228514*(t3877 + t3882 + t4017 + t4018 - 0.178694*t4028 - 0.0389*t4064 + 0.308947*t4085) - 3.04720182*(t3877 + t3882 + t4017 + t4018 + t1979*t4028 + t1950*t4064 + t1906*t4085 - 0.040917*(4.e-6*t1897*t4028 + t1880*t4064 - 1.*t1901*t4085) - 0.14916*(t1990*t4028 + 4.e-6*t1897*t4064 + 4.e-6*t1901*t4085) + 0.59796*(-4.e-6*t1901*t4028 + t1901*t4064 + t2027*t4085)) - 14.54228514*(t3943 + t3945 + t4101 + t4107 + 0.178693*t4128 - 0.308948*t4149 - 0.038779*t4166) - 3.04720182*(t3943 + t3945 + t4101 + t4107 + t2144*t4128 + t2107*t4149 + t2173*t4166 - 0.038309*(t2197*t4128 + t2187*t4149 + t2209*t4166) - 0.597964*(t2239*t4128 + t2224*t4149 + t2248*t4166) + 0.149257*(t2284*t4128 + t2269*t4149 + t2287*t4166)) - 14.54228514*(t3991 + t3995 + t4184 + t4185 - 0.178695*t4207 - 0.038721*t4222 - 0.308948*t4232) - 3.04720182*(t3991 + t3995 + t4184 + t4185 + t2490*t4207 + t2418*t4222 + t2361*t4232 - 0.149263*(t2521*t4207 + t2507*t4222 + t2496*t4232) - 0.039191*(t2567*t4207 + t2551*t4222 + t2542*t4232) - 0.597964*(t2612*t4207 + t2592*t4222 + t2582*t4232)) - 21.33236493*(t4464 + t4467 + 0.204368*t4480 + 0.187814*t4486) - 14.542344*(t4464 + t4467 + t4492 + t4493 + 0.178694*t4505 - 0.038721*t4522 + 0.308948*t4526) - 3.0471822000000004*(t4464 + t4467 + t4492 + t4493 + t2833*t4505 + t2852*t4522 + t2837*t4526 + 0.08826*(t2870*t4505 + 4.e-6*t2858*t4522 + 4.e-6*t2828*t4526) - 0.03919*(4.e-6*t2858*t4505 + t2816*t4522 + t2828*t4526) + 0.81997*(-4.e-6*t2828*t4505 - 1.*t2828*t4522 + t2916*t4526));
  p_output1[6]=-21.33236493*(t4594 + t4621 + 0.204368*t4634 + 0.187814*t4653) - 14.542344*(t4594 + t4621 + t4665 + t4672 + 0.178694*t4687 - 0.038721*t4701 + 0.308948*t4706) - 3.0471822000000004*(t4594 + t4621 + t4665 + t4672 + t2833*t4687 + t2852*t4701 + t2837*t4706 + 0.08826*(t2870*t4687 + 4.e-6*t2858*t4701 + 4.e-6*t2828*t4706) - 0.03919*(4.e-6*t2858*t4687 + t2816*t4701 + t2828*t4706) + 0.81997*(-4.e-6*t2828*t4687 - 1.*t2828*t4701 + t2916*t4706));
  p_output1[7]=-14.542344*(t4775 + t4787 + t4808 - 0.038721*t4843 + 0.178694*t4861 + 0.308948*t4881) - 3.0471822000000004*(t4775 + t4787 + t4808 + t2852*t4843 + t2833*t4861 + t2837*t4881 + 0.08826*(4.e-6*t2858*t4843 + t2870*t4861 + 4.e-6*t2828*t4881) - 0.03919*(t2816*t4843 + 4.e-6*t2858*t4861 + t2828*t4881) + 0.81997*(-1.*t2828*t4843 - 4.e-6*t2828*t4861 + t2916*t4881));
  p_output1[8]=-3.0471822000000004*((5.136e-14 + 0.503210000008*t2816 - 0.03874900000062*t2828)*t4947 + (-1.284e-8 + 2.012840000032e-6*t2816 - 1.5499600000248e-7*t2828)*t4966 + (0.03874900000062*t2816 + 0.503210000016051*t2828)*t4977 + 0.08826*(-4.e-6*t2828*t4947 - 1.6e-11*t2828*t4966 + 4.e-6*t2816*t4977) - 0.03919*(-1.*t2828*t4947 - 4.e-6*t2828*t4966 + t2816*t4977) + 0.81997*(-1.*t2816*t4947 - 4.e-6*t2816*t4966 - 1.000000000016*t2828*t4977));
  p_output1[9]=-21.4087554*(t5049 + t5054 + 0.204386*t5060 - 0.18763*t5076) - 14.54228514*(t5049 + t5054 + t5088 + t5089 - 0.178694*t5094 - 0.0389*t5107 + 0.308947*t5119) - 3.04720182*(t5049 + t5054 + t5088 + t5089 + t1979*t5094 + t1950*t5107 + t1906*t5119 - 0.040917*(4.e-6*t1897*t5094 + t1880*t5107 - 1.*t1901*t5119) - 0.14916*(t1990*t5094 + 4.e-6*t1897*t5107 + 4.e-6*t1901*t5119) + 0.59796*(-4.e-6*t1901*t5094 + t1901*t5107 + t2027*t5119));
  p_output1[10]=-14.54228514*(t5204 + t5217 + t5240 - 0.0389*t5253 - 0.178694*t5264 + 0.308947*t5274) - 3.04720182*(t5204 + t5217 + t5240 + t1950*t5253 + t1979*t5264 + t1906*t5274 - 0.040917*(t1880*t5253 + 4.e-6*t1897*t5264 - 1.*t1901*t5274) - 0.14916*(4.e-6*t1897*t5253 + t1990*t5264 + 4.e-6*t1901*t5274) + 0.59796*(t1901*t5253 - 4.e-6*t1901*t5264 + t2027*t5274));
  p_output1[11]=-3.04720182*((-0.0398890000006382*t1880 + 0.50315000001605*t1901)*t5388 + (-5.04e-14 - 0.503150000008*t1880 + t1904)*t5403 + (-1.26e-8 + 2.012600000032e-6*t1880 + 1.59556000002553e-7*t1901)*t5430 + 0.59796*(-1.000000000016*t1901*t5388 + t1880*t5403 - 4.e-6*t1880*t5430) - 0.14916*(4.e-6*t1880*t5388 + 4.e-6*t1901*t5403 - 1.6e-11*t1901*t5430) - 0.040917*(-1.*t1880*t5388 - 1.*t1901*t5403 + 4.e-6*t1901*t5430));
  p_output1[12]=-21.4087554*(t5487 + t5493 - 0.204386*t5497 + 0.18763*t5507) - 14.54228514*(t5487 + t5493 + t5518 + t5520 + 0.178693*t5527 - 0.308948*t5534 - 0.038779*t5543) - 3.04720182*(t5487 + t5493 + t5518 + t5520 + t2144*t5527 + t2107*t5534 + t2173*t5543 - 0.038309*(t2197*t5527 + t2187*t5534 + t2209*t5543) - 0.597964*(t2239*t5527 + t2224*t5534 + t2248*t5543) + 0.149257*(t2284*t5527 + t2269*t5534 + t2287*t5543));
  p_output1[13]=-14.54228514*(t5653 + t5671 + t5700 + 0.178693*t5718 - 0.038779*t5754 - 0.308948*t5776) - 3.04720182*(t5653 + t5671 + t5700 + t2144*t5718 + t2173*t5754 + t2107*t5776 - 0.038309*(t2197*t5718 + t2209*t5754 + t2187*t5776) - 0.597964*(t2239*t5718 + t2248*t5754 + t2224*t5776) + 0.149257*(t2284*t5718 + t2287*t5754 + t2269*t5776));
  p_output1[14]=-3.04720182*((1.8190549999999993e-12 - 0.5031490000160505*t2078 - 0.038922999986*(t2062 + t5845) - 3.6777349999999994e-6*(t2160 + t5859))*t5892 + (-2.598649999999999e-7 - 2.3905277499999995e-16*t2078 - 0.038922999986*(t2125 + t5896) - 0.503149000008*(t2160 + t5900))*t5924 + (1.0394599999999997e-12 - 0.03892299998790722*t2078 - 0.503149000008*(t2061 + t5845) - 3.6777349999999994e-6*(t2125 + t5951))*t5974 + 0.149257*(t5892*(t2121 + t5900) - 6.5e-11*t2078*t5924 + (t2101 + t5896)*t5974) - 0.038309*(t5924*(t2101 + t5951) - 1.000000000049*t2078*t5974 + t5892*(t2061 + t6031)) - 0.597964*(-1.000000000016*t2078*t5892 + (t2121 + t5859)*t5924 + t5974*(t2062 + t6031)));
  p_output1[15]=-21.33236493*(t6100 + t6123 - 0.204368*t6135 - 0.187814*t6140) - 14.54228514*(t6100 + t6123 + t6152 + t6155 - 0.178695*t6159 - 0.038721*t6164 - 0.308948*t6175) - 3.04720182*(t6100 + t6123 + t6152 + t6155 + t2490*t6159 + t2418*t6164 + t2361*t6175 - 0.149263*(t2521*t6159 + t2507*t6164 + t2496*t6175) - 0.039191*(t2567*t6159 + t2551*t6164 + t2542*t6175) - 0.597964*(t2612*t6159 + t2592*t6164 + t2582*t6175));
  p_output1[16]=-14.54228514*(t6277 + t6297 + t6328 - 0.178695*t6345 - 0.038721*t6361 - 0.308948*t6376) - 3.04720182*(t6277 + t6297 + t6328 + t2490*t6345 + t2418*t6361 + t2361*t6376 - 0.149263*(t2521*t6345 + t2507*t6361 + t2496*t6376) - 0.039191*(t2567*t6345 + t2551*t6361 + t2542*t6376) - 0.597964*(t2612*t6345 + t2592*t6361 + t2582*t6376));
  p_output1[17]=-3.04720182*((-1.9784030000000015e-12 - 0.5031510000160505*t2331 - 0.038575000014*(t2314 + t6442) - 3.367757e-6*(t2445 + t6450))*t6463 + (1.1305160000000008e-12 - 0.03857500001589017*t2331 - 0.5031510000080001*(t2318 + t6442) - 3.367757e-6*(t2332 + t6466))*t6495 + (2.826290000000002e-7 - 2.18904205e-16*t2331 - 0.038575000014*(t2332 + t6500) - 0.5031510000080001*(t2445 + t6505))*t6523 - 0.149263*(t6495*(t2435 + t6500) + t6463*(t2401 + t6505) - 6.5e-11*t2331*t6523) - 0.597964*(-1.000000000016*t2331*t6463 + (t2401 + t6450)*t6523 + t6495*(t2314 + t6540)) - 0.039191*(-1.000000000049*t2331*t6495 + (t2435 + t6466)*t6523 + t6463*(t2318 + t6540)));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_ASTRo_urdf.hh"

namespace TrotStance1
{

void Ge_vec_ASTRo_urdf_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
