/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:26:31 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t199;
  double t271;
  double t240;
  double t264;
  double t272;
  double t188;
  double t268;
  double t285;
  double t289;
  double t346;
  double t348;
  double t349;
  double t354;
  double t356;
  double t302;
  double t309;
  double t317;
  double t342;
  double t390;
  double t391;
  double t412;
  double t439;
  double t441;
  double t492;
  double t493;
  double t494;
  double t497;
  double t498;
  double t532;
  double t350;
  double t358;
  double t361;
  double t363;
  double t364;
  double t365;
  double t536;
  double t537;
  double t542;
  double t545;
  double t367;
  double t369;
  double t370;
  double t379;
  double t381;
  double t382;
  double t676;
  double t678;
  double t679;
  double t683;
  double t427;
  double t446;
  double t448;
  double t451;
  double t453;
  double t457;
  double t681;
  double t460;
  double t463;
  double t467;
  double t690;
  double t736;
  double t469;
  double t473;
  double t475;
  double t785;
  double t790;
  double t725;
  double t816;
  double t737;
  double t848;
  double t854;
  double t684;
  double t802;
  double t898;
  double t900;
  double t903;
  double t910;
  double t499;
  double t501;
  double t503;
  double t504;
  double t505;
  double t509;
  double t918;
  double t920;
  double t511;
  double t515;
  double t519;
  double t937;
  double t906;
  double t524;
  double t525;
  double t526;
  double t958;
  double t921;
  double t974;
  double t911;
  double t1010;
  double t942;
  double t980;
  double t938;
  double t531;
  double t538;
  double t544;
  double t546;
  double t563;
  double t573;
  double t582;
  double t584;
  double t589;
  double t592;
  double t595;
  double t601;
  double t604;
  double t607;
  double t609;
  double t611;
  double t612;
  double t613;
  double t617;
  double t619;
  double t623;
  double t628;
  double t1070;
  double t1071;
  double t1075;
  double t1079;
  double t633;
  double t634;
  double t635;
  double t636;
  double t1104;
  double t639;
  double t640;
  double t641;
  double t645;
  double t646;
  double t647;
  double t669;
  double t680;
  double t685;
  double t686;
  double t691;
  double t692;
  double t696;
  double t698;
  double t699;
  double t700;
  double t726;
  double t727;
  double t738;
  double t759;
  double t760;
  double t775;
  double t781;
  double t783;
  double t786;
  double t787;
  double t791;
  double t796;
  double t798;
  double t800;
  double t1172;
  double t1173;
  double t1174;
  double t1177;
  double t810;
  double t811;
  double t818;
  double t820;
  double t821;
  double t822;
  double t827;
  double t837;
  double t1183;
  double t858;
  double t859;
  double t860;
  double t861;
  double t862;
  double t863;
  double t864;
  double t867;
  double t1195;
  double t1176;
  double t869;
  double t870;
  double t871;
  double t877;
  double t878;
  double t884;
  double t885;
  double t886;
  double t1224;
  double t1184;
  double t1243;
  double t1178;
  double t1269;
  double t1209;
  double t1251;
  double t1252;
  double t1196;
  double t890;
  double t905;
  double t915;
  double t916;
  double t922;
  double t923;
  double t928;
  double t929;
  double t931;
  double t936;
  double t940;
  double t941;
  double t944;
  double t945;
  double t946;
  double t953;
  double t955;
  double t957;
  double t960;
  double t961;
  double t965;
  double t968;
  double t972;
  double t973;
  double t1311;
  double t1316;
  double t1317;
  double t1326;
  double t977;
  double t979;
  double t981;
  double t982;
  double t989;
  double t990;
  double t991;
  double t992;
  double t1339;
  double t995;
  double t996;
  double t1009;
  double t1011;
  double t1012;
  double t1014;
  double t1019;
  double t1024;
  double t1325;
  double t1386;
  double t1390;
  double t1030;
  double t1036;
  double t1037;
  double t1038;
  double t1040;
  double t1045;
  double t1046;
  double t1047;
  double t1418;
  double t1422;
  double t1372;
  double t1450;
  double t1396;
  double t1472;
  double t1446;
  double t1331;
  double t491;
  double t1504;
  double t1505;
  double t1506;
  double t1507;
  double t1508;
  double t1509;
  double t1510;
  double t1511;
  double t1514;
  double t1515;
  double t1516;
  double t1517;
  double t1518;
  double t1519;
  double t1525;
  double t1526;
  double t1527;
  double t1542;
  double t1543;
  double t1544;
  double t1546;
  double t1597;
  double t1534;
  double t1545;
  double t1547;
  double t1548;
  double t1568;
  double t1569;
  double t1570;
  double t1571;
  double t1572;
  double t1573;
  double t1574;
  double t1576;
  double t1579;
  double t1580;
  double t1598;
  double t1599;
  double t1600;
  double t1601;
  double t1602;
  double t1604;
  double t1581;
  double t1582;
  double t1583;
  double t1587;
  double t1588;
  double t1590;
  double t1639;
  double t1643;
  double t1653;
  double t1666;
  double t1606;
  double t1620;
  double t1622;
  double t1625;
  double t1704;
  double t1804;
  double t1801;
  double t1808;
  double t1811;
  double t1813;
  double t1838;
  double t1848;
  double t1849;
  double t1853;
  double t1857;
  double t1858;
  double t1859;
  double t1864;
  double t1865;
  double t1867;
  double t1868;
  double t1872;
  double t1883;
  double t1885;
  double t1886;
  double t1887;
  double t1890;
  double t1897;
  double t1898;
  double t1903;
  double t1915;
  double t1917;
  double t1919;
  double t1077;
  double t1085;
  double t1096;
  double t1923;
  double t1937;
  double t1941;
  double t1942;
  double t1099;
  double t1100;
  double t1106;
  double t1108;
  double t1111;
  double t1949;
  double t1952;
  double t1953;
  double t1954;
  double t1119;
  double t1120;
  double t1121;
  double t1125;
  double t1127;
  double t1957;
  double t1959;
  double t1960;
  double t1961;
  double t1135;
  double t1144;
  double t1160;
  double t1161;
  double t1966;
  double t1967;
  double t1969;
  double t1171;
  double t1175;
  double t1181;
  double t1182;
  double t1185;
  double t1186;
  double t1187;
  double t1970;
  double t1971;
  double t1972;
  double t1973;
  double t1193;
  double t1194;
  double t1200;
  double t1201;
  double t1210;
  double t1211;
  double t1212;
  double t1976;
  double t1977;
  double t1978;
  double t1979;
  double t1214;
  double t1215;
  double t1229;
  double t1234;
  double t1235;
  double t1236;
  double t1240;
  double t1981;
  double t1982;
  double t1983;
  double t1984;
  double t1249;
  double t1253;
  double t1255;
  double t1257;
  double t1263;
  double t1264;
  double t1271;
  double t1273;
  double t1285;
  double t1287;
  double t1290;
  double t1295;
  double t1989;
  double t1990;
  double t1991;
  double t1309;
  double t1318;
  double t1337;
  double t1338;
  double t1347;
  double t1348;
  double t1361;
  double t1992;
  double t1993;
  double t1994;
  double t1995;
  double t1369;
  double t1370;
  double t1373;
  double t1374;
  double t1397;
  double t1398;
  double t1402;
  double t1997;
  double t1998;
  double t1999;
  double t2000;
  double t1406;
  double t1410;
  double t1420;
  double t1421;
  double t1426;
  double t1428;
  double t1430;
  double t2003;
  double t2004;
  double t2006;
  double t2007;
  double t1448;
  double t1454;
  double t1458;
  double t1459;
  double t1475;
  double t1480;
  double t1483;
  double t1485;
  double t1489;
  double t1490;
  double t1494;
  double t1496;
  double t1884;
  double t2153;
  double t2154;
  double t2155;
  double t2158;
  double t2159;
  double t2161;
  double t2164;
  double t2165;
  double t2173;
  double t2174;
  double t2175;
  double t2187;
  double t2188;
  double t2189;
  double t2193;
  double t1638;
  double t1663;
  double t1668;
  double t1669;
  double t2179;
  double t2181;
  double t2183;
  double t2184;
  double t1674;
  double t1683;
  double t1686;
  double t2196;
  double t2198;
  double t2199;
  double t2200;
  double t1691;
  double t1692;
  double t1696;
  double t1699;
  double t1707;
  double t1708;
  double t1754;
  double t1755;
  double t2240;
  double t2241;
  double t2242;
  double t2244;
  double t2246;
  double t2247;
  double t2253;
  double t2254;
  double t2256;
  double t2258;
  double t2261;
  double t2265;
  double t2266;
  double t2267;
  double t2272;
  double t2273;
  double t2274;
  double t2275;
  double t2276;
  double t2280;
  double t2282;
  double t2285;
  double t2289;
  double t2290;
  double t2292;
  double t2298;
  double t2299;
  double t2305;
  double t2307;
  double t2309;
  double t2319;
  double t2320;
  double t2321;
  double t2324;
  double t2325;
  double t2329;
  double t2334;
  double t2335;
  double t2342;
  double t2343;
  double t2344;
  double t2353;
  double t2356;
  double t2357;
  double t2358;
  double t2359;
  double t2361;
  double t2364;
  double t2365;
  double t2367;
  double t2370;
  double t2371;
  double t2379;
  double t2380;
  double t2381;
  double t2384;
  double t2385;
  double t2391;
  double t2394;
  double t2395;
  double t2402;
  double t2403;
  double t2405;
  double t2526;
  double t2528;
  double t2538;
  double t2539;
  double t2542;
  double t2529;
  double t2532;
  double t2535;
  double t2549;
  double t2552;
  double t2555;
  double t2556;
  double t2558;
  double t2568;
  double t2569;
  double t2572;
  double t2562;
  double t2564;
  double t2565;
  double t2625;
  double t2626;
  double t2629;
  double t2619;
  double t2620;
  double t2622;
  double t2630;
  double t2633;
  double t2636;
  double t2643;
  double t2646;
  double t2637;
  double t2639;
  double t2656;
  double t2657;
  double t2659;
  double t2660;
  double t2663;
  double t2676;
  double t2677;
  double t2679;
  double t2667;
  double t2669;
  double t2670;
  double t2749;
  double t2750;
  double t2753;
  double t2726;
  double t2729;
  double t2730;
  double t2733;
  double t2734;
  double t2738;
  double t2742;
  double t2746;
  double t2754;
  double t2757;
  double t2758;
  double t2762;
  double t2778;
  double t2781;
  double t2782;
  double t2786;
  double t2794;
  double t2795;
  double t2797;
  double t2798;
  double t2766;
  double t2770;
  double t2773;
  double t2774;
  double t2877;
  double t2880;
  double t2881;
  double t2883;
  double t2864;
  double t2865;
  double t2868;
  double t2869;
  double t2890;
  double t2891;
  double t2926;
  double t2927;
  double t2932;
  double t2933;
  double t2934;
  double t2935;
  double t2936;
  double t2937;
  double t2944;
  double t2945;
  double t2951;
  double t2952;
  double t2953;
  double t2956;
  double t2957;
  double t2960;
  double t2963;
  double t2964;
  double t2968;
  double t2969;
  double t2971;
  double t3025;
  double t3028;
  double t3032;
  double t3009;
  double t3010;
  double t3011;
  double t3014;
  double t3015;
  double t3020;
  double t3021;
  double t3022;
  double t3023;
  double t3024;
  double t3033;
  double t3036;
  double t3037;
  double t3038;
  double t3040;
  double t3041;
  double t3043;
  double t3044;
  double t3048;
  double t3052;
  double t3053;
  double t3054;
  double t3096;
  double t3097;
  double t3098;
  double t3099;
  double t3109;
  double t3110;
  double t3111;
  double t3118;
  double t3121;
  double t3122;
  double t3123;
  double t3153;
  double t3156;
  double t3157;
  double t3162;
  double t3163;
  double t3164;
  double t3165;
  double t3166;
  double t3170;
  double t3171;
  double t3180;
  double t3181;
  double t3182;
  double t3183;
  double t3186;
  double t3188;
  double t3189;
  double t3192;
  double t3198;
  double t3199;
  double t3200;
  double t3254;
  double t3270;
  double t3276;
  double t3297;
  double t3299;
  double t3300;
  double t3259;
  double t3317;
  double t3292;
  double t3255;
  double t3258;
  double t3260;
  double t3265;
  double t3266;
  double t3267;
  double t3268;
  double t3271;
  double t3274;
  double t3277;
  double t3279;
  double t3280;
  double t3281;
  double t3284;
  double t3285;
  double t3288;
  double t3293;
  double t3294;
  double t3295;
  double t3296;
  double t3301;
  double t3302;
  double t3303;
  double t3306;
  double t3307;
  double t3309;
  double t3312;
  double t3314;
  double t3315;
  double t3316;
  double t3319;
  double t3320;
  double t3321;
  double t3324;
  double t3327;
  double t3328;
  double t3329;
  double t3332;
  double t3333;
  double t3378;
  double t3405;
  double t3392;
  double t3393;
  double t3395;
  double t3396;
  double t3411;
  double t3414;
  double t3415;
  double t3417;
  double t3400;
  double t3429;
  double t3432;
  double t3436;
  double t3437;
  double t3383;
  double t3457;
  double t3423;
  double t3483;
  double t3484;
  double t3485;
  double t3487;
  double t3488;
  double t3490;
  double t3491;
  double t3492;
  double t3494;
  double t3497;
  double t3502;
  double t3503;
  double t3506;
  double t3510;
  double t3511;
  double t3513;
  double t3514;
  double t3515;
  double t3518;
  double t3519;
  double t3520;
  double t3567;
  double t3580;
  double t3583;
  double t3602;
  double t3603;
  double t3604;
  double t3560;
  double t3623;
  double t3594;
  double t3561;
  double t3566;
  double t3568;
  double t3569;
  double t3570;
  double t3571;
  double t3574;
  double t3581;
  double t3582;
  double t3585;
  double t3586;
  double t3588;
  double t3589;
  double t3590;
  double t3591;
  double t3592;
  double t3596;
  double t3597;
  double t3599;
  double t3601;
  double t3606;
  double t3607;
  double t3609;
  double t3611;
  double t3613;
  double t3614;
  double t3615;
  double t3618;
  double t3619;
  double t3622;
  double t3626;
  double t3627;
  double t3628;
  double t3632;
  double t3633;
  double t3638;
  double t3639;
  double t3640;
  double t3641;
  double t3683;
  double t3691;
  double t3692;
  double t3693;
  double t3694;
  double t3708;
  double t3709;
  double t3711;
  double t3712;
  double t3686;
  double t3732;
  double t3733;
  double t3735;
  double t3736;
  double t3744;
  double t3696;
  double t3722;
  double t3719;
  t199 = Sin(var1[3]);
  t271 = Cos(var1[3]);
  t240 = Cos(var1[5]);
  t264 = Sin(var1[4]);
  t272 = Sin(var1[5]);
  t188 = Cos(var1[4]);
  t268 = t240*t199*t264;
  t285 = t271*t272;
  t289 = t268 + t285;
  t346 = Cos(var1[9]);
  t348 = -1.*t346;
  t349 = 1. + t348;
  t354 = Sin(var1[9]);
  t356 = -0.15121*t354;
  t302 = t271*t240;
  t309 = -1.*t199*t264*t272;
  t317 = t302 + t309;
  t342 = 0.036395*t188*t199;
  t390 = Cos(var1[12]);
  t391 = -1.*t390;
  t412 = 1. + t391;
  t439 = Sin(var1[12]);
  t441 = 0.15121*t439;
  t492 = Cos(var1[15]);
  t493 = -1.*t492;
  t494 = 1. + t493;
  t497 = -0.15121*t494;
  t498 = Sin(var1[15]);
  t532 = Cos(var1[10]);
  t350 = 0.15121*t349;
  t358 = t350 + t356;
  t361 = t358*t289;
  t363 = -0.15121*t349;
  t364 = t363 + t356;
  t365 = t364*t317;
  t536 = -1.*t532;
  t537 = 1. + t536;
  t542 = -1. + t532;
  t545 = Sin(var1[10]);
  t367 = -1.*t354*t289;
  t369 = t346*t317;
  t370 = t367 + t369;
  t379 = t346*t289;
  t381 = t354*t317;
  t382 = t379 + t381;
  t676 = Cos(var1[13]);
  t678 = -1.*t676;
  t679 = 1. + t678;
  t683 = Sin(var1[13]);
  t427 = -0.15121*t412;
  t446 = t427 + t441;
  t448 = t446*t289;
  t451 = 0.15121*t412;
  t453 = t451 + t441;
  t457 = t453*t317;
  t681 = 4.e-6*t679;
  t460 = -1.*t439*t289;
  t463 = t390*t317;
  t467 = t460 + t463;
  t690 = -2.8e-11*t679;
  t736 = 7.e-6*t679;
  t469 = t390*t289;
  t473 = t439*t317;
  t475 = t469 + t473;
  t785 = -1.*t683;
  t790 = -4.e-6*t683;
  t725 = -7.e-6*t683;
  t816 = -7.e-6*t679;
  t737 = 4.e-6*t683;
  t848 = -1. + t676;
  t854 = 4.e-6*t848;
  t684 = 7.e-6*t683;
  t802 = 2.8e-11*t679;
  t898 = Cos(var1[16]);
  t900 = -1.*t898;
  t903 = 1. + t900;
  t910 = Sin(var1[16]);
  t499 = -0.15121*t498;
  t501 = t497 + t499;
  t503 = t501*t289;
  t504 = 0.15121*t498;
  t505 = t497 + t504;
  t509 = t505*t317;
  t918 = -1. + t898;
  t920 = 4.e-6*t918;
  t511 = -1.*t498*t289;
  t515 = t492*t317;
  t519 = t511 + t515;
  t937 = 7.e-6*t903;
  t906 = 2.8e-11*t903;
  t524 = t492*t289;
  t525 = t498*t317;
  t526 = t524 + t525;
  t958 = -4.e-6*t910;
  t921 = -7.e-6*t910;
  t974 = -2.8e-11*t903;
  t911 = -1.*t910;
  t1010 = 4.e-6*t903;
  t942 = 7.e-6*t910;
  t980 = -7.e-6*t903;
  t938 = 4.e-6*t910;
  t531 = -4.9936e-13*var1[10];
  t538 = -0.038749*t537;
  t544 = 6.19984e-13*t542;
  t546 = -0.281210000004*t545;
  t563 = t531 + t538 + t544 + t546;
  t573 = -1.*t188*t563*t199;
  t582 = -1.2484e-7*var1[10];
  t584 = 2.479936e-18*t537;
  t589 = -1.54996e-7*t542;
  t592 = 1.124840000016e-6*t545;
  t595 = t582 + t584 + t589 + t592;
  t601 = t595*t370;
  t604 = 0.281210000008499*t537;
  t607 = -0.03874900000062*t545;
  t609 = t604 + t607;
  t611 = t609*t382;
  t612 = -1.*t188*t545*t199;
  t613 = -4.e-6*t545*t370;
  t617 = -1.000000000016*t537;
  t619 = 1. + t617;
  t623 = t619*t382;
  t628 = t612 + t613 + t623;
  t1070 = Cos(var1[11]);
  t1071 = -1.*t1070;
  t1075 = 1. + t1071;
  t1079 = Sin(var1[11]);
  t633 = -1.*t532*t188*t199;
  t634 = 4.e-6*t537*t370;
  t635 = -1.*t545*t382;
  t636 = t633 + t634 + t635;
  t1104 = -1. + t1070;
  t639 = -4.e-6*t537*t188*t199;
  t640 = 1.6e-11*t542;
  t641 = 1. + t640;
  t645 = t641*t370;
  t646 = 4.e-6*t545*t382;
  t647 = t639 + t645 + t646;
  t669 = 5.856279999999999e-13*var1[13];
  t680 = -0.0387489999948987*t679;
  t685 = t681 + t684;
  t686 = -2.123459e-6*t685;
  t691 = t690 + t683;
  t692 = -0.281209000004*t691;
  t696 = t669 + t680 + t686 + t692;
  t698 = -1.*t188*t696*t199;
  t699 = -1.4640699999999997e-7*var1[13];
  t700 = -1.38024835e-16*t679;
  t726 = t681 + t725;
  t727 = -0.038748999993*t726;
  t738 = t736 + t737;
  t759 = -0.281209000004*t738;
  t760 = t699 + t700 + t727 + t759;
  t775 = t760*t467;
  t781 = 1.0248489999999998e-12*var1[13];
  t783 = -0.28120900000849935*t679;
  t786 = t690 + t785;
  t787 = -0.038748999993*t786;
  t791 = t736 + t790;
  t796 = -2.123459e-6*t791;
  t798 = t781 + t783 + t787 + t796;
  t800 = t798*t475;
  t1172 = Cos(var1[14]);
  t1173 = -1.*t1172;
  t1174 = 1. + t1173;
  t1177 = Sin(var1[14]);
  t810 = t802 + t785;
  t811 = -1.*t188*t810*t199;
  t818 = t816 + t790;
  t820 = t818*t467;
  t821 = -1.000000000016*t679;
  t822 = 1. + t821;
  t827 = t822*t475;
  t837 = t811 + t820 + t827;
  t1183 = 7.e-6*t1174;
  t858 = t854 + t725;
  t859 = -1.*t188*t858*t199;
  t860 = -6.5e-11*t679;
  t861 = 1. + t860;
  t862 = t861*t467;
  t863 = t816 + t737;
  t864 = t863*t475;
  t867 = t859 + t862 + t864;
  t1195 = 4.e-6*t1174;
  t1176 = -2.8e-11*t1174;
  t869 = -1.000000000049*t679;
  t870 = 1. + t869;
  t871 = -1.*t870*t188*t199;
  t877 = t854 + t684;
  t878 = t877*t467;
  t884 = t802 + t683;
  t885 = t884*t475;
  t886 = t871 + t878 + t885;
  t1224 = 7.e-6*t1177;
  t1184 = -4.e-6*t1177;
  t1243 = 2.8e-11*t1174;
  t1178 = -1.*t1177;
  t1269 = -7.e-6*t1174;
  t1209 = 4.e-6*t1177;
  t1251 = -1. + t1172;
  t1252 = 4.e-6*t1251;
  t1196 = -7.e-6*t1177;
  t890 = 1.5843479999999999e-12*var1[16];
  t905 = -0.03874900000889869*t903;
  t915 = t906 + t911;
  t916 = -0.281211000004*t915;
  t922 = t920 + t921;
  t923 = -1.8134809999999998e-6*t922;
  t928 = t890 + t905 + t916 + t923;
  t929 = -1.*t188*t928*t199;
  t931 = 3.9608699999999997e-7*var1[16];
  t936 = -1.1787626499999999e-16*t903;
  t940 = t937 + t938;
  t941 = -0.281211000004*t940;
  t944 = t920 + t942;
  t945 = -0.038749000006999997*t944;
  t946 = t931 + t936 + t941 + t945;
  t953 = t946*t519;
  t955 = -2.7726089999999997e-12*var1[16];
  t957 = -0.2812110000084994*t903;
  t960 = t937 + t958;
  t961 = -1.8134809999999998e-6*t960;
  t965 = t906 + t910;
  t968 = -0.038749000006999997*t965;
  t972 = t955 + t957 + t961 + t968;
  t973 = t972*t526;
  t1311 = Cos(var1[17]);
  t1316 = -1.*t1311;
  t1317 = 1. + t1316;
  t1326 = Sin(var1[17]);
  t977 = t974 + t910;
  t979 = -1.*t188*t977*t199;
  t981 = t980 + t958;
  t982 = t981*t519;
  t989 = -1.000000000016*t903;
  t990 = 1. + t989;
  t991 = t990*t526;
  t992 = t979 + t982 + t991;
  t1339 = 2.8e-11*t1317;
  t995 = -1.000000000049*t903;
  t996 = 1. + t995;
  t1009 = -1.*t996*t188*t199;
  t1011 = t1010 + t921;
  t1012 = t1011*t519;
  t1014 = t974 + t911;
  t1019 = t1014*t526;
  t1024 = t1009 + t1012 + t1019;
  t1325 = 7.e-6*t1317;
  t1386 = -1. + t1311;
  t1390 = 4.e-6*t1386;
  t1030 = t1010 + t942;
  t1036 = -1.*t188*t1030*t199;
  t1037 = -6.5e-11*t903;
  t1038 = 1. + t1037;
  t1040 = t1038*t519;
  t1045 = t980 + t938;
  t1046 = t1045*t526;
  t1047 = t1036 + t1040 + t1046;
  t1418 = 4.e-6*t1326;
  t1422 = 7.e-6*t1326;
  t1372 = -1.*t1326;
  t1450 = 4.e-6*t1317;
  t1396 = -7.e-6*t1326;
  t1472 = -2.8e-11*t1317;
  t1446 = -7.e-6*t1317;
  t1331 = -4.e-6*t1326;
  t491 = 0.036336*t188*t199;
  t1504 = Cos(var1[6]);
  t1505 = -1.*t1504;
  t1506 = 1. + t1505;
  t1507 = 0.15121*t1506;
  t1508 = Sin(var1[6]);
  t1509 = -0.15121*t1508;
  t1510 = t1507 + t1509;
  t1511 = t317*t1510;
  t1514 = 0.15121*t1508;
  t1515 = t1507 + t1514;
  t1516 = t289*t1515;
  t1517 = t1504*t317;
  t1518 = -1.*t289*t1508;
  t1519 = t1517 + t1518;
  t1525 = t1504*t289;
  t1526 = t317*t1508;
  t1527 = t1525 + t1526;
  t1542 = Cos(var1[7]);
  t1543 = -1.*t1542;
  t1544 = 1. + t1543;
  t1546 = Sin(var1[7]);
  t1597 = -1. + t1542;
  t1534 = -1.2484e-7*var1[7];
  t1545 = -1.5499600000248e-7*t1544;
  t1547 = 1.124840000016e-6*t1546;
  t1548 = t1534 + t1545 + t1547;
  t1568 = t1519*t1548;
  t1569 = 0.281210000008499*t1544;
  t1570 = 0.03874900000062*t1546;
  t1571 = t1569 + t1570;
  t1572 = t1527*t1571;
  t1573 = 4.9936e-13*var1[7];
  t1574 = -0.03874900000062*t1544;
  t1576 = 0.281210000004*t1546;
  t1579 = t1573 + t1574 + t1576;
  t1580 = -1.*t188*t199*t1579;
  t1598 = -4.e-6*t188*t1597*t199;
  t1599 = 1.6e-11*t1597;
  t1600 = 1. + t1599;
  t1601 = t1600*t1519;
  t1602 = 4.e-6*t1527*t1546;
  t1604 = t1598 + t1601 + t1602;
  t1581 = -1.000000000016*t1544;
  t1582 = 1. + t1581;
  t1583 = t1582*t1527;
  t1587 = t188*t199*t1546;
  t1588 = -4.e-6*t1519*t1546;
  t1590 = t1583 + t1587 + t1588;
  t1639 = Cos(var1[8]);
  t1643 = -1.*t1639;
  t1653 = 1. + t1643;
  t1666 = Sin(var1[8]);
  t1606 = -1.*t188*t1542*t199;
  t1620 = 4.e-6*t1597*t1519;
  t1622 = t1527*t1546;
  t1625 = t1606 + t1620 + t1622;
  t1704 = -1. + t1639;
  t1804 = 0.036395*t271*t264;
  t1801 = -1.*t271*t188*t240*t358;
  t1808 = t271*t188*t364*t272;
  t1811 = t271*t188*t240*t354;
  t1813 = t346*t271*t188*t272;
  t1838 = t1811 + t1813;
  t1848 = -1.*t346*t271*t188*t240;
  t1849 = t271*t188*t354*t272;
  t1853 = t1848 + t1849;
  t1857 = -1.*t271*t188*t240*t446;
  t1858 = t271*t188*t453*t272;
  t1859 = t271*t188*t240*t439;
  t1864 = t390*t271*t188*t272;
  t1865 = t1859 + t1864;
  t1867 = -1.*t390*t271*t188*t240;
  t1868 = t271*t188*t439*t272;
  t1872 = t1867 + t1868;
  t1883 = -1.*t271*t188*t240*t501;
  t1885 = t271*t188*t505*t272;
  t1886 = t271*t188*t240*t498;
  t1887 = t492*t271*t188*t272;
  t1890 = t1886 + t1887;
  t1897 = -1.*t492*t271*t188*t240;
  t1898 = t271*t188*t498*t272;
  t1903 = t1897 + t1898;
  t1915 = -1.*t271*t563*t264;
  t1917 = t595*t1838;
  t1919 = t609*t1853;
  t1077 = 0.50315000001605*t1075;
  t1085 = -0.0398890000006382*t1079;
  t1096 = t1077 + t1085;
  t1923 = -1.*t271*t545*t264;
  t1937 = -4.e-6*t545*t1838;
  t1941 = t619*t1853;
  t1942 = t1923 + t1937 + t1941;
  t1099 = -5.04e-14*var1[11];
  t1100 = -0.039889*t1075;
  t1106 = 6.38224e-13*t1104;
  t1108 = -0.503150000008*t1079;
  t1111 = t1099 + t1100 + t1106 + t1108;
  t1949 = -1.*t532*t271*t264;
  t1952 = 4.e-6*t537*t1838;
  t1953 = -1.*t545*t1853;
  t1954 = t1949 + t1952 + t1953;
  t1119 = -1.26e-8*var1[11];
  t1120 = 2.552896e-18*t1075;
  t1121 = -1.59556e-7*t1104;
  t1125 = 2.012600000032e-6*t1079;
  t1127 = t1119 + t1120 + t1121 + t1125;
  t1957 = -4.e-6*t537*t271*t264;
  t1959 = t641*t1838;
  t1960 = 4.e-6*t545*t1853;
  t1961 = t1957 + t1959 + t1960;
  t1135 = 1.6e-11*t1104;
  t1144 = 1. + t1135;
  t1160 = -1.000000000016*t1075;
  t1161 = 1. + t1160;
  t1966 = -1.*t271*t696*t264;
  t1967 = t760*t1865;
  t1969 = t798*t1872;
  t1171 = 1.8190549999999993e-12*var1[14];
  t1175 = -0.5031490000160505*t1174;
  t1181 = t1176 + t1178;
  t1182 = -0.038922999986*t1181;
  t1185 = t1183 + t1184;
  t1186 = -3.6777349999999994e-6*t1185;
  t1187 = t1171 + t1175 + t1182 + t1186;
  t1970 = -1.*t271*t810*t264;
  t1971 = t818*t1865;
  t1972 = t822*t1872;
  t1973 = t1970 + t1971 + t1972;
  t1193 = -2.598649999999999e-7*var1[14];
  t1194 = -2.3905277499999995e-16*t1174;
  t1200 = t1195 + t1196;
  t1201 = -0.038922999986*t1200;
  t1210 = t1183 + t1209;
  t1211 = -0.503149000008*t1210;
  t1212 = t1193 + t1194 + t1201 + t1211;
  t1976 = -1.*t271*t858*t264;
  t1977 = t861*t1865;
  t1978 = t863*t1872;
  t1979 = t1976 + t1977 + t1978;
  t1214 = 1.0394599999999997e-12*var1[14];
  t1215 = -0.03892299998790722*t1174;
  t1229 = t1195 + t1224;
  t1234 = -3.6777349999999994e-6*t1229;
  t1235 = t1176 + t1177;
  t1236 = -0.503149000008*t1235;
  t1240 = t1214 + t1215 + t1234 + t1236;
  t1981 = -1.*t870*t271*t264;
  t1982 = t877*t1865;
  t1983 = t884*t1872;
  t1984 = t1981 + t1982 + t1983;
  t1249 = t1243 + t1177;
  t1253 = t1252 + t1224;
  t1255 = -1.000000000049*t1174;
  t1257 = 1. + t1255;
  t1263 = -1.000000000016*t1174;
  t1264 = 1. + t1263;
  t1271 = t1269 + t1184;
  t1273 = t1243 + t1178;
  t1285 = t1269 + t1209;
  t1287 = -6.5e-11*t1174;
  t1290 = 1. + t1287;
  t1295 = t1252 + t1196;
  t1989 = -1.*t271*t928*t264;
  t1990 = t946*t1890;
  t1991 = t972*t1903;
  t1309 = -1.9784030000000015e-12*var1[17];
  t1318 = -0.5031510000160505*t1317;
  t1337 = t1325 + t1331;
  t1338 = -3.367757e-6*t1337;
  t1347 = t1339 + t1326;
  t1348 = -0.038575000014*t1347;
  t1361 = t1309 + t1318 + t1338 + t1348;
  t1992 = -1.*t271*t977*t264;
  t1993 = t981*t1890;
  t1994 = t990*t1903;
  t1995 = t1992 + t1993 + t1994;
  t1369 = 1.1305160000000008e-12*var1[17];
  t1370 = -0.03857500001589017*t1317;
  t1373 = t1339 + t1372;
  t1374 = -0.5031510000080001*t1373;
  t1397 = t1390 + t1396;
  t1398 = -3.367757e-6*t1397;
  t1402 = t1369 + t1370 + t1374 + t1398;
  t1997 = -1.*t996*t271*t264;
  t1998 = t1011*t1890;
  t1999 = t1014*t1903;
  t2000 = t1997 + t1998 + t1999;
  t1406 = 2.826290000000002e-7*var1[17];
  t1410 = -2.18904205e-16*t1317;
  t1420 = t1325 + t1418;
  t1421 = -0.5031510000080001*t1420;
  t1426 = t1390 + t1422;
  t1428 = -0.038575000014*t1426;
  t1430 = t1406 + t1410 + t1421 + t1428;
  t2003 = -1.*t271*t1030*t264;
  t2004 = t1038*t1890;
  t2006 = t1045*t1903;
  t2007 = t2003 + t2004 + t2006;
  t1448 = t1446 + t1418;
  t1454 = t1450 + t1422;
  t1458 = -6.5e-11*t1317;
  t1459 = 1. + t1458;
  t1475 = t1472 + t1372;
  t1480 = -1.000000000049*t1317;
  t1483 = 1. + t1480;
  t1485 = t1450 + t1396;
  t1489 = -1.000000000016*t1317;
  t1490 = 1. + t1489;
  t1494 = t1472 + t1326;
  t1496 = t1446 + t1331;
  t1884 = 0.036336*t271*t264;
  t2153 = t271*t188*t272*t1510;
  t2154 = -1.*t271*t188*t240*t1515;
  t2155 = t271*t188*t1504*t272;
  t2158 = t271*t188*t240*t1508;
  t2159 = t2155 + t2158;
  t2161 = -1.*t271*t188*t240*t1504;
  t2164 = t271*t188*t272*t1508;
  t2165 = t2161 + t2164;
  t2173 = t2159*t1548;
  t2174 = t2165*t1571;
  t2175 = -1.*t271*t264*t1579;
  t2187 = -4.e-6*t271*t1597*t264;
  t2188 = t1600*t2159;
  t2189 = 4.e-6*t2165*t1546;
  t2193 = t2187 + t2188 + t2189;
  t1638 = -1.284e-8*var1[8];
  t1663 = -1.5499600000248e-7*t1653;
  t1668 = 2.012840000032e-6*t1666;
  t1669 = t1638 + t1663 + t1668;
  t2179 = t1582*t2165;
  t2181 = t271*t264*t1546;
  t2183 = -4.e-6*t2159*t1546;
  t2184 = t2179 + t2181 + t2183;
  t1674 = 0.503210000016051*t1653;
  t1683 = 0.03874900000062*t1666;
  t1686 = t1674 + t1683;
  t2196 = -1.*t271*t1542*t264;
  t2198 = 4.e-6*t1597*t2159;
  t2199 = t2165*t1546;
  t2200 = t2196 + t2198 + t2199;
  t1691 = 5.136e-14*var1[8];
  t1692 = -0.03874900000062*t1653;
  t1696 = 0.503210000008*t1666;
  t1699 = t1691 + t1692 + t1696;
  t1707 = 1.6e-11*t1704;
  t1708 = 1. + t1707;
  t1754 = -1.000000000016*t1653;
  t1755 = 1. + t1754;
  t2240 = t271*t240*t264;
  t2241 = -1.*t199*t272;
  t2242 = t2240 + t2241;
  t2244 = t240*t199;
  t2246 = t271*t264*t272;
  t2247 = t2244 + t2246;
  t2253 = t364*t2242;
  t2254 = t358*t2247;
  t2256 = t354*t2242;
  t2258 = t346*t2247;
  t2261 = t2256 + t2258;
  t2265 = t346*t2242;
  t2266 = -1.*t354*t2247;
  t2267 = t2265 + t2266;
  t2272 = t453*t2242;
  t2273 = t446*t2247;
  t2274 = t439*t2242;
  t2275 = t390*t2247;
  t2276 = t2274 + t2275;
  t2280 = t390*t2242;
  t2282 = -1.*t439*t2247;
  t2285 = t2280 + t2282;
  t2289 = t505*t2242;
  t2290 = t501*t2247;
  t2292 = t498*t2242;
  t2298 = t492*t2247;
  t2299 = t2292 + t2298;
  t2305 = t492*t2242;
  t2307 = -1.*t498*t2247;
  t2309 = t2305 + t2307;
  t2319 = t609*t2261;
  t2320 = t595*t2267;
  t2321 = 4.e-6*t545*t2261;
  t2324 = t641*t2267;
  t2325 = t2321 + t2324;
  t2329 = -1.*t545*t2261;
  t2334 = 4.e-6*t537*t2267;
  t2335 = t2329 + t2334;
  t2342 = t619*t2261;
  t2343 = -4.e-6*t545*t2267;
  t2344 = t2342 + t2343;
  t2353 = t798*t2276;
  t2356 = t760*t2285;
  t2357 = t863*t2276;
  t2358 = t861*t2285;
  t2359 = t2357 + t2358;
  t2361 = t822*t2276;
  t2364 = t818*t2285;
  t2365 = t2361 + t2364;
  t2367 = t884*t2276;
  t2370 = t877*t2285;
  t2371 = t2367 + t2370;
  t2379 = t972*t2299;
  t2380 = t946*t2309;
  t2381 = t1045*t2299;
  t2384 = t1038*t2309;
  t2385 = t2381 + t2384;
  t2391 = t1014*t2299;
  t2394 = t1011*t2309;
  t2395 = t2391 + t2394;
  t2402 = t990*t2299;
  t2403 = t981*t2309;
  t2405 = t2402 + t2403;
  t2526 = t2242*t1510;
  t2528 = t2247*t1515;
  t2538 = t1504*t2242;
  t2539 = -1.*t2247*t1508;
  t2542 = t2538 + t2539;
  t2529 = t1504*t2247;
  t2532 = t2242*t1508;
  t2535 = t2529 + t2532;
  t2549 = t2542*t1548;
  t2552 = t2535*t1571;
  t2555 = t1600*t2542;
  t2556 = 4.e-6*t2535*t1546;
  t2558 = t2555 + t2556;
  t2568 = t1582*t2535;
  t2569 = -4.e-6*t2542*t1546;
  t2572 = t2568 + t2569;
  t2562 = 4.e-6*t1597*t2542;
  t2564 = t2535*t1546;
  t2565 = t2562 + t2564;
  t2625 = -1.*t271*t240*t264;
  t2626 = t199*t272;
  t2629 = t2625 + t2626;
  t2619 = -0.15121*t1504;
  t2620 = t2619 + t1514;
  t2622 = t2247*t2620;
  t2630 = 0.15121*t1504;
  t2633 = t2630 + t1514;
  t2636 = t2629*t2633;
  t2643 = -1.*t1504*t2629;
  t2646 = t2643 + t2539;
  t2637 = -1.*t2629*t1508;
  t2639 = t2529 + t2637;
  t2656 = t2646*t1548;
  t2657 = t2639*t1571;
  t2659 = t1600*t2646;
  t2660 = 4.e-6*t2639*t1546;
  t2663 = t2659 + t2660;
  t2676 = t1582*t2639;
  t2677 = -4.e-6*t2646*t1546;
  t2679 = t2676 + t2677;
  t2667 = 4.e-6*t1597*t2646;
  t2669 = t2639*t1546;
  t2670 = t2667 + t2669;
  t2749 = t1504*t2629;
  t2750 = t2247*t1508;
  t2753 = t2749 + t2750;
  t2726 = 0.281210000004*t1542;
  t2729 = -0.03874900000062*t1546;
  t2730 = 4.9936e-13 + t2726 + t2729;
  t2733 = t271*t188*t2730;
  t2734 = 1.124840000016e-6*t1542;
  t2738 = -1.5499600000248e-7*t1546;
  t2742 = -1.2484e-7 + t2734 + t2738;
  t2746 = t2639*t2742;
  t2754 = 0.03874900000062*t1542;
  t2757 = 0.281210000008499*t1546;
  t2758 = t2754 + t2757;
  t2762 = t2753*t2758;
  t2778 = 4.e-6*t1542*t2753;
  t2781 = -4.e-6*t271*t188*t1546;
  t2782 = -1.6e-11*t2639*t1546;
  t2786 = t2778 + t2781 + t2782;
  t2794 = -1.*t271*t188*t1542;
  t2795 = -4.e-6*t1542*t2639;
  t2797 = -1.000000000016*t2753*t1546;
  t2798 = t2794 + t2795 + t2797;
  t2766 = t1542*t2753;
  t2770 = -1.*t271*t188*t1546;
  t2773 = -4.e-6*t2639*t1546;
  t2774 = t2766 + t2770 + t2773;
  t2877 = 4.e-6*t271*t188*t1597;
  t2880 = t1600*t2639;
  t2881 = 4.e-6*t2753*t1546;
  t2883 = t2877 + t2880 + t2881;
  t2864 = t271*t188*t1542;
  t2865 = 4.e-6*t1597*t2639;
  t2868 = t2753*t1546;
  t2869 = t2864 + t2865 + t2868;
  t2890 = t1582*t2753;
  t2891 = t2890 + t2770 + t2773;
  t2926 = -0.15121*t346;
  t2927 = 0.15121*t354;
  t2932 = t2926 + t2927;
  t2933 = t2932*t2629;
  t2934 = t2926 + t356;
  t2935 = t2934*t2247;
  t2936 = -1.*t354*t2629;
  t2937 = t2936 + t2258;
  t2944 = -1.*t346*t2629;
  t2945 = t2944 + t2266;
  t2951 = t609*t2937;
  t2952 = t595*t2945;
  t2953 = 4.e-6*t545*t2937;
  t2956 = t641*t2945;
  t2957 = t2953 + t2956;
  t2960 = -1.*t545*t2937;
  t2963 = 4.e-6*t537*t2945;
  t2964 = t2960 + t2963;
  t2968 = t619*t2937;
  t2969 = -4.e-6*t545*t2945;
  t2971 = t2968 + t2969;
  t3025 = t346*t2629;
  t3028 = t354*t2247;
  t3032 = t3025 + t3028;
  t3009 = -0.281210000004*t532;
  t3010 = -4.9936e-13 + t3009 + t607;
  t3011 = t271*t188*t3010;
  t3014 = 1.124840000016e-6*t532;
  t3015 = 1.5499600000248e-7*t545;
  t3020 = -1.2484e-7 + t3014 + t3015;
  t3021 = t3020*t2937;
  t3022 = -0.03874900000062*t532;
  t3023 = 0.281210000008499*t545;
  t3024 = t3022 + t3023;
  t3033 = t3024*t3032;
  t3036 = -1.*t271*t188*t545;
  t3037 = -1.*t532*t3032;
  t3038 = t3036 + t2953 + t3037;
  t3040 = 4.e-6*t271*t188*t545;
  t3041 = -1.6e-11*t545*t2937;
  t3043 = 4.e-6*t532*t3032;
  t3044 = t3040 + t3041 + t3043;
  t3048 = t532*t271*t188;
  t3052 = -4.e-6*t532*t2937;
  t3053 = -1.000000000016*t545*t3032;
  t3054 = t3048 + t3052 + t3053;
  t3096 = t271*t188*t545;
  t3097 = -4.e-6*t545*t2937;
  t3098 = t619*t3032;
  t3099 = t3096 + t3097 + t3098;
  t3109 = 4.e-6*t537*t2937;
  t3110 = -1.*t545*t3032;
  t3111 = t3048 + t3109 + t3110;
  t3118 = 4.e-6*t537*t271*t188;
  t3121 = t641*t2937;
  t3122 = 4.e-6*t545*t3032;
  t3123 = t3118 + t3121 + t3122;
  t3153 = 0.15121*t390;
  t3156 = -0.15121*t439;
  t3157 = t3153 + t3156;
  t3162 = t3157*t2629;
  t3163 = t3153 + t441;
  t3164 = t3163*t2247;
  t3165 = -1.*t439*t2629;
  t3166 = t3165 + t2275;
  t3170 = -1.*t390*t2629;
  t3171 = t3170 + t2282;
  t3180 = t798*t3166;
  t3181 = t760*t3171;
  t3182 = t863*t3166;
  t3183 = t861*t3171;
  t3186 = t3182 + t3183;
  t3188 = t822*t3166;
  t3189 = t818*t3171;
  t3192 = t3188 + t3189;
  t3198 = t884*t3166;
  t3199 = t877*t3171;
  t3200 = t3198 + t3199;
  t3254 = -2.8e-11*t683;
  t3270 = -7.e-6*t676;
  t3276 = 4.e-6*t676;
  t3297 = t390*t2629;
  t3299 = t439*t2247;
  t3300 = t3297 + t3299;
  t3259 = 7.e-6*t676;
  t3317 = 2.8e-11*t683;
  t3292 = -4.e-6*t676;
  t3255 = t676 + t3254;
  t3258 = -0.281209000004*t3255;
  t3260 = t3259 + t737;
  t3265 = -2.123459e-6*t3260;
  t3266 = -0.0387489999948987*t683;
  t3267 = 5.856279999999999e-13 + t3258 + t3265 + t3266;
  t3268 = t271*t188*t3267;
  t3271 = t3270 + t737;
  t3274 = -0.038748999993*t3271;
  t3277 = t3276 + t684;
  t3279 = -0.281209000004*t3277;
  t3280 = -1.38024835e-16*t683;
  t3281 = -1.4640699999999997e-7 + t3274 + t3279 + t3280;
  t3284 = t3281*t3166;
  t3285 = t678 + t3254;
  t3288 = -0.038748999993*t3285;
  t3293 = t3292 + t684;
  t3294 = -2.123459e-6*t3293;
  t3295 = -0.28120900000849935*t683;
  t3296 = 1.0248489999999998e-12 + t3288 + t3294 + t3295;
  t3301 = t3296*t3300;
  t3302 = t3270 + t790;
  t3303 = t271*t188*t3302;
  t3306 = -6.5e-11*t683*t3166;
  t3307 = t3276 + t725;
  t3309 = t3307*t3300;
  t3312 = t3303 + t3306 + t3309;
  t3314 = -1.000000000049*t271*t188*t683;
  t3315 = t3259 + t790;
  t3316 = t3315*t3166;
  t3319 = t676 + t3317;
  t3320 = t3319*t3300;
  t3321 = t3314 + t3316 + t3320;
  t3324 = t678 + t3317;
  t3327 = t271*t188*t3324;
  t3328 = t3292 + t725;
  t3329 = t3328*t3166;
  t3332 = -1.000000000016*t683*t3300;
  t3333 = t3327 + t3329 + t3332;
  t3378 = -2.8e-11*t1177;
  t3405 = 4.e-6*t1172;
  t3392 = t271*t188*t810;
  t3393 = t818*t3166;
  t3395 = t822*t3300;
  t3396 = t3392 + t3393 + t3395;
  t3411 = t271*t188*t858;
  t3414 = t861*t3166;
  t3415 = t863*t3300;
  t3417 = t3411 + t3414 + t3415;
  t3400 = -7.e-6*t1172;
  t3429 = t870*t271*t188;
  t3432 = t877*t3166;
  t3436 = t884*t3300;
  t3437 = t3429 + t3432 + t3436;
  t3383 = -4.e-6*t1172;
  t3457 = 2.8e-11*t1177;
  t3423 = 7.e-6*t1172;
  t3483 = -0.15121*t492;
  t3484 = t3483 + t499;
  t3485 = t3484*t2629;
  t3487 = 0.15121*t492;
  t3488 = t3487 + t499;
  t3490 = t3488*t2247;
  t3491 = -1.*t498*t2629;
  t3492 = t3491 + t2298;
  t3494 = -1.*t492*t2629;
  t3497 = t3494 + t2307;
  t3502 = t972*t3492;
  t3503 = t946*t3497;
  t3506 = t1045*t3492;
  t3510 = t1038*t3497;
  t3511 = t3506 + t3510;
  t3513 = t1014*t3492;
  t3514 = t1011*t3497;
  t3515 = t3513 + t3514;
  t3518 = t990*t3492;
  t3519 = t981*t3497;
  t3520 = t3518 + t3519;
  t3567 = 2.8e-11*t910;
  t3580 = 7.e-6*t898;
  t3583 = 4.e-6*t898;
  t3602 = t492*t2629;
  t3603 = t498*t2247;
  t3604 = t3602 + t3603;
  t3560 = -7.e-6*t898;
  t3623 = -2.8e-11*t910;
  t3594 = -4.e-6*t898;
  t3561 = t3560 + t958;
  t3566 = -1.8134809999999998e-6*t3561;
  t3568 = t900 + t3567;
  t3569 = -0.281211000004*t3568;
  t3570 = -0.03874900000889869*t910;
  t3571 = 1.5843479999999999e-12 + t3566 + t3569 + t3570;
  t3574 = t271*t188*t3571;
  t3581 = t3580 + t958;
  t3582 = -0.038749000006999997*t3581;
  t3585 = t3583 + t942;
  t3586 = -0.281211000004*t3585;
  t3588 = -1.1787626499999999e-16*t910;
  t3589 = 3.9608699999999997e-7 + t3582 + t3586 + t3588;
  t3590 = t3589*t3492;
  t3591 = t898 + t3567;
  t3592 = -0.038749000006999997*t3591;
  t3596 = t3594 + t942;
  t3597 = -1.8134809999999998e-6*t3596;
  t3599 = -0.2812110000084994*t910;
  t3601 = -2.7726089999999997e-12 + t3592 + t3597 + t3599;
  t3606 = t3601*t3604;
  t3607 = t3580 + t938;
  t3609 = t271*t188*t3607;
  t3611 = -6.5e-11*t910*t3492;
  t3613 = t3583 + t921;
  t3614 = t3613*t3604;
  t3615 = t3609 + t3611 + t3614;
  t3618 = -1.000000000049*t271*t188*t910;
  t3619 = t3560 + t938;
  t3622 = t3619*t3492;
  t3626 = t900 + t3623;
  t3627 = t3626*t3604;
  t3628 = t3618 + t3622 + t3627;
  t3632 = t898 + t3623;
  t3633 = t271*t188*t3632;
  t3638 = t3594 + t921;
  t3639 = t3638*t3492;
  t3640 = -1.000000000016*t910*t3604;
  t3641 = t3633 + t3639 + t3640;
  t3683 = 2.8e-11*t1326;
  t3691 = t271*t188*t977;
  t3692 = t981*t3492;
  t3693 = t990*t3604;
  t3694 = t3691 + t3692 + t3693;
  t3708 = t996*t271*t188;
  t3709 = t1011*t3492;
  t3711 = t1014*t3604;
  t3712 = t3708 + t3709 + t3711;
  t3686 = -4.e-6*t1311;
  t3732 = t271*t188*t1030;
  t3733 = t1038*t3492;
  t3735 = t1045*t3604;
  t3736 = t3732 + t3733 + t3735;
  t3744 = -2.8e-11*t1326;
  t3696 = -7.e-6*t1311;
  t3722 = 4.e-6*t1311;
  t3719 = 7.e-6*t1311;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-241.56491273999998;
  p_output1[3]=-14.542344*(t1511 + t1516 + t1568 + t1572 + t1580 + 0.308948*t1590 + 0.178694*t1604 - 0.038721*t1625) - 3.0471822000000004*(t1511 + t1516 + t1568 + t1572 + t1580 + t1604*t1669 + t1590*t1686 + t1625*t1699 - 0.03919*(t1625*t1639 + t1590*t1666 + 4.e-6*t1604*t1704) + 0.08826*(4.e-6*t1590*t1666 + 4.e-6*t1625*t1704 + t1604*t1708) + 0.81997*(-4.e-6*t1604*t1666 - 1.*t1625*t1666 + t1590*t1755)) - 85.72468500000001*(0.024028*t188*t199 + 0.00183*t289 - 0.002264*t317) - 21.4087554*(t342 + t361 + t365 - 0.18763*t370 + 0.204386*t382) - 21.4087554*(t342 + t448 + t457 + 0.18763*t467 - 0.204386*t475) - 21.33236493*(t1511 + t1516 + 0.187814*t1519 + 0.204368*t1527 + t491) - 21.33236493*(t491 + t503 + t509 - 0.187814*t519 - 0.204368*t526) - 14.54228514*(t361 + t365 + t573 + t601 + t611 + 0.308947*t628 - 0.0389*t636 - 0.178694*t647) - 3.04720182*(t361 + t365 + t573 + t601 + t611 + t1096*t628 + t1111*t636 + t1127*t647 - 0.040917*(-1.*t1079*t628 + t1070*t636 + 4.e-6*t1075*t647) + 0.59796*(t1161*t628 + t1079*t636 - 4.e-6*t1079*t647) - 0.14916*(4.e-6*t1079*t628 + 4.e-6*t1075*t636 + t1144*t647)) - 14.54228514*(t448 + t457 + t698 + t775 + t800 - 0.308948*t837 + 0.178693*t867 - 0.038779*t886) - 3.04720182*(t448 + t457 + t698 + t775 + t800 + t1187*t837 + t1212*t867 + t1240*t886 - 0.038309*(t1249*t837 + t1253*t867 + t1257*t886) - 0.597964*(t1264*t837 + t1271*t867 + t1273*t886) + 0.149257*(t1285*t837 + t1290*t867 + t1295*t886)) - 14.54228514*(-0.038721*t1024 - 0.178695*t1047 + t503 + t509 + t929 + t953 + t973 - 0.308948*t992) - 3.04720182*(t1024*t1402 + t1047*t1430 + t503 + t509 + t929 + t953 + t973 + t1361*t992 - 0.149263*(t1024*t1454 + t1047*t1459 + t1448*t992) - 0.039191*(t1024*t1483 + t1047*t1485 + t1475*t992) - 0.597964*(t1024*t1494 + t1047*t1496 + t1490*t992));
  p_output1[4]=-21.4087554*(t1801 + t1804 + t1808 - 0.18763*t1838 + 0.204386*t1853) - 21.4087554*(t1804 + t1857 + t1858 + 0.18763*t1865 - 0.204386*t1872) - 21.33236493*(t1883 + t1884 + t1885 - 0.187814*t1890 - 0.204368*t1903) - 14.54228514*(t1801 + t1808 + t1915 + t1917 + t1919 + 0.308947*t1942 - 0.0389*t1954 - 0.178694*t1961) - 3.04720182*(t1801 + t1808 + t1915 + t1917 + t1919 + t1096*t1942 + t1111*t1954 + t1127*t1961 - 0.040917*(-1.*t1079*t1942 + t1070*t1954 + 4.e-6*t1075*t1961) + 0.59796*(t1161*t1942 + t1079*t1954 - 4.e-6*t1079*t1961) - 0.14916*(4.e-6*t1079*t1942 + 4.e-6*t1075*t1954 + t1144*t1961)) - 14.54228514*(t1857 + t1858 + t1966 + t1967 + t1969 - 0.308948*t1973 + 0.178693*t1979 - 0.038779*t1984) - 3.04720182*(t1857 + t1858 + t1966 + t1967 + t1969 + t1187*t1973 + t1212*t1979 + t1240*t1984 - 0.038309*(t1249*t1973 + t1253*t1979 + t1257*t1984) - 0.597964*(t1264*t1973 + t1271*t1979 + t1273*t1984) + 0.149257*(t1285*t1973 + t1290*t1979 + t1295*t1984)) - 14.54228514*(t1883 + t1885 + t1989 + t1990 + t1991 - 0.308948*t1995 - 0.038721*t2000 - 0.178695*t2007) - 3.04720182*(t1883 + t1885 + t1989 + t1990 + t1991 + t1361*t1995 + t1402*t2000 + t1430*t2007 - 0.149263*(t1448*t1995 + t1454*t2000 + t1459*t2007) - 0.039191*(t1475*t1995 + t1483*t2000 + t1485*t2007) - 0.597964*(t1490*t1995 + t1494*t2000 + t1496*t2007)) - 21.33236493*(t1884 + t2153 + t2154 + 0.187814*t2159 + 0.204368*t2165) - 14.542344*(t2153 + t2154 + t2173 + t2174 + t2175 + 0.308948*t2184 + 0.178694*t2193 - 0.038721*t2200) - 3.0471822000000004*(t2153 + t2154 + t2173 + t2174 + t2175 + t1686*t2184 + t1669*t2193 + t1699*t2200 - 0.03919*(t1666*t2184 + 4.e-6*t1704*t2193 + t1639*t2200) + 0.81997*(t1755*t2184 - 4.e-6*t1666*t2193 - 1.*t1666*t2200) + 0.08826*(4.e-6*t1666*t2184 + t1708*t2193 + 4.e-6*t1704*t2200)) - 85.72468500000001*(-0.00183*t188*t240*t271 + 0.024028*t264*t271 - 0.002264*t188*t271*t272);
  p_output1[5]=-85.72468500000001*(-0.002264*t2242 + 0.00183*t2247) - 21.4087554*(t2253 + t2254 + 0.204386*t2261 - 0.18763*t2267) - 21.4087554*(t2272 + t2273 - 0.204386*t2276 + 0.18763*t2285) - 21.33236493*(t2289 + t2290 - 0.204368*t2299 - 0.187814*t2309) - 14.54228514*(t2253 + t2254 + t2319 + t2320 - 0.178694*t2325 - 0.0389*t2335 + 0.308947*t2344) - 3.04720182*(t2253 + t2254 + t2319 + t2320 + t1127*t2325 + t1111*t2335 + t1096*t2344 - 0.040917*(4.e-6*t1075*t2325 + t1070*t2335 - 1.*t1079*t2344) - 0.14916*(t1144*t2325 + 4.e-6*t1075*t2335 + 4.e-6*t1079*t2344) + 0.59796*(-4.e-6*t1079*t2325 + t1079*t2335 + t1161*t2344)) - 14.54228514*(t2272 + t2273 + t2353 + t2356 + 0.178693*t2359 - 0.308948*t2365 - 0.038779*t2371) - 3.04720182*(t2272 + t2273 + t2353 + t2356 + t1212*t2359 + t1187*t2365 + t1240*t2371 - 0.038309*(t1253*t2359 + t1249*t2365 + t1257*t2371) - 0.597964*(t1271*t2359 + t1264*t2365 + t1273*t2371) + 0.149257*(t1290*t2359 + t1285*t2365 + t1295*t2371)) - 14.54228514*(t2289 + t2290 + t2379 + t2380 - 0.178695*t2385 - 0.038721*t2395 - 0.308948*t2405) - 3.04720182*(t2289 + t2290 + t2379 + t2380 + t1430*t2385 + t1402*t2395 + t1361*t2405 - 0.149263*(t1459*t2385 + t1454*t2395 + t1448*t2405) - 0.039191*(t1485*t2385 + t1483*t2395 + t1475*t2405) - 0.597964*(t1496*t2385 + t1494*t2395 + t1490*t2405)) - 21.33236493*(t2526 + t2528 + 0.204368*t2535 + 0.187814*t2542) - 14.542344*(t2526 + t2528 + t2549 + t2552 + 0.178694*t2558 - 0.038721*t2565 + 0.308948*t2572) - 3.0471822000000004*(t2526 + t2528 + t2549 + t2552 + t1669*t2558 + t1699*t2565 + t1686*t2572 + 0.08826*(t1708*t2558 + 4.e-6*t1704*t2565 + 4.e-6*t1666*t2572) - 0.03919*(4.e-6*t1704*t2558 + t1639*t2565 + t1666*t2572) + 0.81997*(-4.e-6*t1666*t2558 - 1.*t1666*t2565 + t1755*t2572));
  p_output1[6]=-21.33236493*(t2622 + t2636 + 0.204368*t2639 + 0.187814*t2646) - 14.542344*(t2622 + t2636 + t2656 + t2657 + 0.178694*t2663 - 0.038721*t2670 + 0.308948*t2679) - 3.0471822000000004*(t2622 + t2636 + t2656 + t2657 + t1669*t2663 + t1699*t2670 + t1686*t2679 + 0.08826*(t1708*t2663 + 4.e-6*t1704*t2670 + 4.e-6*t1666*t2679) - 0.03919*(4.e-6*t1704*t2663 + t1639*t2670 + t1666*t2679) + 0.81997*(-4.e-6*t1666*t2663 - 1.*t1666*t2670 + t1755*t2679));
  p_output1[7]=-14.542344*(t2733 + t2746 + t2762 - 0.038721*t2774 + 0.178694*t2786 + 0.308948*t2798) - 3.0471822000000004*(t2733 + t2746 + t2762 + t1699*t2774 + t1669*t2786 + t1686*t2798 + 0.08826*(4.e-6*t1704*t2774 + t1708*t2786 + 4.e-6*t1666*t2798) - 0.03919*(t1639*t2774 + 4.e-6*t1704*t2786 + t1666*t2798) + 0.81997*(-1.*t1666*t2774 - 4.e-6*t1666*t2786 + t1755*t2798));
  p_output1[8]=-3.0471822000000004*((5.136e-14 + 0.503210000008*t1639 - 0.03874900000062*t1666)*t2869 + (-1.284e-8 + 2.012840000032e-6*t1639 - 1.5499600000248e-7*t1666)*t2883 + (0.03874900000062*t1639 + 0.503210000016051*t1666)*t2891 + 0.08826*(-4.e-6*t1666*t2869 - 1.6e-11*t1666*t2883 + 4.e-6*t1639*t2891) - 0.03919*(-1.*t1666*t2869 - 4.e-6*t1666*t2883 + t1639*t2891) + 0.81997*(-1.*t1639*t2869 - 4.e-6*t1639*t2883 - 1.000000000016*t1666*t2891));
  p_output1[9]=-21.4087554*(t2933 + t2935 + 0.204386*t2937 - 0.18763*t2945) - 14.54228514*(t2933 + t2935 + t2951 + t2952 - 0.178694*t2957 - 0.0389*t2964 + 0.308947*t2971) - 3.04720182*(t2933 + t2935 + t2951 + t2952 + t1127*t2957 + t1111*t2964 + t1096*t2971 - 0.040917*(4.e-6*t1075*t2957 + t1070*t2964 - 1.*t1079*t2971) - 0.14916*(t1144*t2957 + 4.e-6*t1075*t2964 + 4.e-6*t1079*t2971) + 0.59796*(-4.e-6*t1079*t2957 + t1079*t2964 + t1161*t2971));
  p_output1[10]=-14.54228514*(t3011 + t3021 + t3033 - 0.0389*t3038 - 0.178694*t3044 + 0.308947*t3054) - 3.04720182*(t3011 + t3021 + t3033 + t1111*t3038 + t1127*t3044 + t1096*t3054 - 0.040917*(t1070*t3038 + 4.e-6*t1075*t3044 - 1.*t1079*t3054) - 0.14916*(4.e-6*t1075*t3038 + t1144*t3044 + 4.e-6*t1079*t3054) + 0.59796*(t1079*t3038 - 4.e-6*t1079*t3044 + t1161*t3054));
  p_output1[11]=-3.04720182*((-0.0398890000006382*t1070 + 0.50315000001605*t1079)*t3099 + (-5.04e-14 - 0.503150000008*t1070 + t1085)*t3111 + (-1.26e-8 + 2.012600000032e-6*t1070 + 1.59556000002553e-7*t1079)*t3123 + 0.59796*(-1.000000000016*t1079*t3099 + t1070*t3111 - 4.e-6*t1070*t3123) - 0.14916*(4.e-6*t1070*t3099 + 4.e-6*t1079*t3111 - 1.6e-11*t1079*t3123) - 0.040917*(-1.*t1070*t3099 - 1.*t1079*t3111 + 4.e-6*t1079*t3123));
  p_output1[12]=-21.4087554*(t3162 + t3164 - 0.204386*t3166 + 0.18763*t3171) - 14.54228514*(t3162 + t3164 + t3180 + t3181 + 0.178693*t3186 - 0.308948*t3192 - 0.038779*t3200) - 3.04720182*(t3162 + t3164 + t3180 + t3181 + t1212*t3186 + t1187*t3192 + t1240*t3200 - 0.038309*(t1253*t3186 + t1249*t3192 + t1257*t3200) - 0.597964*(t1271*t3186 + t1264*t3192 + t1273*t3200) + 0.149257*(t1290*t3186 + t1285*t3192 + t1295*t3200));
  p_output1[13]=-14.54228514*(t3268 + t3284 + t3301 + 0.178693*t3312 - 0.038779*t3321 - 0.308948*t3333) - 3.04720182*(t3268 + t3284 + t3301 + t1212*t3312 + t1240*t3321 + t1187*t3333 - 0.038309*(t1253*t3312 + t1257*t3321 + t1249*t3333) - 0.597964*(t1271*t3312 + t1273*t3321 + t1264*t3333) + 0.149257*(t1290*t3312 + t1295*t3321 + t1285*t3333));
  p_output1[14]=-3.04720182*((1.8190549999999993e-12 - 0.5031490000160505*t1177 - 0.038922999986*(t1173 + t3378) - 3.6777349999999994e-6*(t1224 + t3383))*t3396 + (-2.598649999999999e-7 - 2.3905277499999995e-16*t1177 - 0.038922999986*(t1209 + t3400) - 0.503149000008*(t1224 + t3405))*t3417 + (1.0394599999999997e-12 - 0.03892299998790722*t1177 - 0.503149000008*(t1172 + t3378) - 3.6777349999999994e-6*(t1209 + t3423))*t3437 + 0.149257*(t3396*(t1196 + t3405) - 6.5e-11*t1177*t3417 + (t1184 + t3400)*t3437) - 0.038309*(t3417*(t1184 + t3423) - 1.000000000049*t1177*t3437 + t3396*(t1172 + t3457)) - 0.597964*(-1.000000000016*t1177*t3396 + (t1196 + t3383)*t3417 + t3437*(t1173 + t3457)));
  p_output1[15]=-21.33236493*(t3485 + t3490 - 0.204368*t3492 - 0.187814*t3497) - 14.54228514*(t3485 + t3490 + t3502 + t3503 - 0.178695*t3511 - 0.038721*t3515 - 0.308948*t3520) - 3.04720182*(t3485 + t3490 + t3502 + t3503 + t1430*t3511 + t1402*t3515 + t1361*t3520 - 0.149263*(t1459*t3511 + t1454*t3515 + t1448*t3520) - 0.039191*(t1485*t3511 + t1483*t3515 + t1475*t3520) - 0.597964*(t1496*t3511 + t1494*t3515 + t1490*t3520));
  p_output1[16]=-14.54228514*(t3574 + t3590 + t3606 - 0.178695*t3615 - 0.038721*t3628 - 0.308948*t3641) - 3.04720182*(t3574 + t3590 + t3606 + t1430*t3615 + t1402*t3628 + t1361*t3641 - 0.149263*(t1459*t3615 + t1454*t3628 + t1448*t3641) - 0.039191*(t1485*t3615 + t1483*t3628 + t1475*t3641) - 0.597964*(t1496*t3615 + t1494*t3628 + t1490*t3641));
  p_output1[17]=-3.04720182*((-1.9784030000000015e-12 - 0.5031510000160505*t1326 - 0.038575000014*(t1311 + t3683) - 3.367757e-6*(t1422 + t3686))*t3694 + (1.1305160000000008e-12 - 0.03857500001589017*t1326 - 0.5031510000080001*(t1316 + t3683) - 3.367757e-6*(t1331 + t3696))*t3712 + (2.826290000000002e-7 - 2.18904205e-16*t1326 - 0.038575000014*(t1331 + t3719) - 0.5031510000080001*(t1422 + t3722))*t3736 - 0.149263*(t3712*(t1418 + t3719) + t3694*(t1396 + t3722) - 6.5e-11*t1326*t3736) - 0.597964*(-1.000000000016*t1326*t3694 + (t1396 + t3686)*t3736 + t3712*(t1311 + t3744)) - 0.039191*(-1.000000000049*t1326*t3712 + (t1418 + t3696)*t3736 + t3694*(t1316 + t3744)));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_ASTRo_urdf.hh"

namespace DiagonalStance1
{

void Ge_vec_ASTRo_urdf_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
