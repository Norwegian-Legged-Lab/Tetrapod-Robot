/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:01 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t116;
  double t81;
  double t147;
  double t82;
  double t117;
  double t138;
  double t143;
  double t158;
  double t159;
  double t197;
  double t201;
  double t202;
  double t362;
  double t329;
  double t238;
  double t243;
  double t246;
  double t274;
  double t282;
  double t291;
  double t376;
  double t383;
  double t388;
  double t51;
  double t584;
  double t231;
  double t236;
  double t552;
  double t574;
  double t451;
  double t620;
  double t658;
  double t662;
  double t674;
  double t696;
  double t697;
  double t699;
  double t703;
  double t717;
  double t718;
  double t719;
  double t836;
  double t852;
  double t857;
  double t864;
  double t874;
  double t894;
  double t909;
  double t911;
  double t940;
  double t952;
  double t954;
  double t1003;
  double t1004;
  double t295;
  double t389;
  double t421;
  double t467;
  double t474;
  double t484;
  double t678;
  double t720;
  double t728;
  double t743;
  double t744;
  double t763;
  double t942;
  double t1005;
  double t1010;
  double t1038;
  double t1041;
  double t1052;
  double t1255;
  double t1279;
  double t1286;
  double t206;
  double t1541;
  double t1548;
  double t1610;
  double t1619;
  double t1631;
  double t881;
  double t1758;
  double t1777;
  double t1780;
  double t1795;
  double t1805;
  double t880;
  double t1984;
  double t1995;
  double t1996;
  double t2010;
  double t2039;
  double t2048;
  double t2051;
  double t2324;
  double t2325;
  double t2378;
  double t2393;
  double t2404;
  double t1909;
  double t2577;
  double t2578;
  double t2580;
  double t2605;
  double t2628;
  double t2632;
  double t578;
  double t585;
  double t602;
  double t613;
  double t740;
  double t787;
  double t788;
  double t867;
  double t890;
  double t1020;
  double t1065;
  double t1076;
  double t182;
  double t207;
  double t448;
  double t491;
  double t495;
  double t221;
  double t512;
  double t535;
  double t2868;
  double t2912;
  double t618;
  double t797;
  double t810;
  double t893;
  double t1080;
  double t1150;
  double t1257;
  double t1275;
  double t1280;
  double t1282;
  double t1285;
  double t1297;
  double t1308;
  double t1309;
  double t1313;
  double t1317;
  double t1332;
  double t1387;
  double t1394;
  double t1409;
  double t1418;
  double t1431;
  double t1445;
  double t1477;
  double t1485;
  double t1497;
  double t1503;
  double t1584;
  double t1639;
  double t1656;
  double t1683;
  double t1687;
  double t1697;
  double t1517;
  double t1522;
  double t1526;
  double t1671;
  double t1700;
  double t1707;
  double t1788;
  double t1825;
  double t1826;
  double t1837;
  double t1871;
  double t1875;
  double t1736;
  double t1739;
  double t1836;
  double t1888;
  double t1889;
  double t2028;
  double t2063;
  double t2075;
  double t2085;
  double t2090;
  double t2095;
  double t1900;
  double t1904;
  double t1924;
  double t2083;
  double t2115;
  double t2171;
  double t2349;
  double t2420;
  double t2421;
  double t2433;
  double t2461;
  double t2483;
  double t2222;
  double t2264;
  double t2283;
  double t2425;
  double t2506;
  double t2524;
  double t2608;
  double t2634;
  double t2636;
  double t2657;
  double t2681;
  double t2684;
  double t2560;
  double t2563;
  double t2570;
  double t2653;
  double t2686;
  double t2738;
  double t2938;
  double t2939;
  double t2941;
  double t2958;
  double t2959;
  double t2960;
  double t2870;
  double t2875;
  double t2879;
  double t3431;
  double t3437;
  double t3438;
  double t3414;
  double t3415;
  double t3416;
  double t3420;
  double t3427;
  double t3428;
  double t3012;
  double t3016;
  double t3017;
  double t3020;
  double t3022;
  double t3029;
  double t3039;
  double t3051;
  double t3054;
  double t3115;
  double t3119;
  double t3154;
  double t3161;
  double t3170;
  double t3176;
  double t3194;
  double t3202;
  double t3205;
  double t3210;
  double t3212;
  double t3214;
  double t3229;
  double t3240;
  double t3250;
  double t3254;
  double t3255;
  double t3257;
  double t3279;
  double t3284;
  double t3287;
  double t3294;
  double t3297;
  double t3298;
  double t3336;
  double t3343;
  double t3344;
  double t3351;
  double t3364;
  double t3373;
  double t3384;
  double t3386;
  double t3391;
  double t3399;
  double t3400;
  double t3401;
  double t3687;
  double t3691;
  double t3702;
  double t3704;
  double t3706;
  double t3708;
  double t3711;
  double t3717;
  double t3722;
  double t3729;
  double t3730;
  double t3732;
  double t3734;
  double t3736;
  double t3750;
  double t3777;
  double t3778;
  double t3661;
  double t3674;
  double t3676;
  double t3679;
  double t3684;
  double t3709;
  double t3735;
  double t3783;
  double t3784;
  double t3788;
  double t3790;
  double t3793;
  double t3794;
  double t3799;
  double t3806;
  double t3807;
  double t2855;
  double t2859;
  double t2860;
  double t3677;
  double t3785;
  double t3809;
  double t3811;
  double t3826;
  double t3836;
  double t3841;
  double t3850;
  double t3851;
  double t3852;
  double t3853;
  double t3854;
  double t3855;
  double t3860;
  double t3866;
  double t3867;
  double t3870;
  double t3871;
  double t3872;
  double t3876;
  double t3880;
  double t2803;
  double t2820;
  double t2826;
  double t3899;
  double t3901;
  double t3907;
  double t3927;
  double t3932;
  double t3933;
  double t3887;
  double t3888;
  double t3889;
  double t2828;
  double t2840;
  double t2854;
  double t3939;
  double t3949;
  double t3957;
  double t3967;
  double t4290;
  double t4301;
  double t4302;
  double t3972;
  double t3975;
  double t3983;
  double t3991;
  double t4079;
  double t4080;
  double t4092;
  double t4102;
  double t4110;
  double t4123;
  double t4124;
  double t4128;
  double t4167;
  double t4171;
  double t4172;
  double t4173;
  double t4199;
  double t4200;
  double t4202;
  double t4205;
  double t4518;
  double t4519;
  double t4522;
  double t4524;
  double t4528;
  double t4547;
  double t4556;
  double t4559;
  double t4560;
  double t4527;
  double t4550;
  double t4551;
  double t4789;
  double t4791;
  double t4793;
  double t4795;
  double t4797;
  double t4798;
  double t4812;
  double t4813;
  double t4815;
  double t4818;
  double t4819;
  double t4802;
  double t4821;
  double t4824;
  double t4826;
  double t4830;
  double t4831;
  double t4844;
  double t4846;
  double t4847;
  double t4849;
  double t4850;
  double t4851;
  double t4853;
  double t4855;
  double t4856;
  double t1532;
  double t1729;
  double t1730;
  double t1743;
  double t1892;
  double t1896;
  double t4825;
  double t4834;
  double t4835;
  double t4860;
  double t4862;
  double t4866;
  double t4848;
  double t4857;
  double t4858;
  double t1972;
  double t2173;
  double t2202;
  double t5022;
  double t5032;
  double t5037;
  double t5057;
  double t5060;
  double t5063;
  double t5077;
  double t5078;
  double t5080;
  double t5038;
  double t5067;
  double t5089;
  double t5095;
  double t5110;
  double t5113;
  double t5125;
  double t5126;
  double t5109;
  double t5127;
  double t5132;
  double t5136;
  double t5149;
  double t5150;
  double t5159;
  double t5161;
  double t5163;
  double t5173;
  double t5174;
  double t5181;
  double t5182;
  double t2296;
  double t2541;
  double t2550;
  double t5134;
  double t5155;
  double t5157;
  double t5221;
  double t5222;
  double t5225;
  double t5169;
  double t5193;
  double t5200;
  double t2571;
  double t2762;
  double t2765;
  double t4289;
  double t4315;
  double t4327;
  double t4331;
  double t4348;
  double t4355;
  double t4374;
  double t4389;
  double t4425;
  double t4426;
  double t4451;
  double t4458;
  double t5345;
  double t5346;
  double t5347;
  double t4516;
  double t4552;
  double t5349;
  double t5350;
  double t5351;
  double t4577;
  double t4578;
  double t5360;
  double t5361;
  double t5371;
  double t4596;
  double t4597;
  double t5390;
  double t5392;
  double t5393;
  double t4609;
  double t4615;
  double t5397;
  double t5398;
  double t5399;
  double t4697;
  double t4705;
  double t5409;
  double t5410;
  double t5413;
  double t4751;
  double t4755;
  double t4837;
  double t4843;
  double t4886;
  double t4887;
  double t4902;
  double t4903;
  double t4923;
  double t4925;
  double t4944;
  double t4946;
  double t4967;
  double t4969;
  double t5158;
  double t5242;
  double t5244;
  double t5270;
  double t5281;
  double t5282;
  double t5300;
  double t5301;
  double t5313;
  double t5314;
  double t5521;
  double t5522;
  double t5530;
  double t5542;
  double t5571;
  double t5579;
  double t5592;
  double t5594;
  double t5625;
  double t5628;
  double t5636;
  double t5637;
  double t5653;
  double t5947;
  double t5948;
  double t5949;
  double t5661;
  double t5672;
  double t5981;
  double t5984;
  double t5985;
  double t5705;
  double t5709;
  double t5715;
  double t6024;
  double t6027;
  double t6028;
  double t6043;
  double t6044;
  double t6045;
  double t5733;
  double t5734;
  double t5741;
  double t5743;
  double t6001;
  double t6002;
  double t6005;
  double t5953;
  double t5958;
  double t5962;
  double t6173;
  double t6174;
  double t6175;
  double t6192;
  double t6193;
  double t6194;
  double t6226;
  double t6227;
  double t6228;
  double t6236;
  double t6237;
  double t6238;
  double t6211;
  double t6212;
  double t6213;
  double t6178;
  double t6179;
  double t6180;
  double t6387;
  double t6389;
  double t6390;
  double t6408;
  double t6409;
  double t6418;
  double t6420;
  double t6421;
  double t6422;
  double t6424;
  double t6426;
  double t6431;
  double t6436;
  double t6458;
  double t6459;
  double t6463;
  double t6466;
  double t6467;
  double t6469;
  double t6474;
  double t6482;
  double t6483;
  double t6484;
  double t6485;
  double t6486;
  double t6488;
  double t6516;
  double t6517;
  double t6522;
  double t6538;
  double t6543;
  double t6544;
  double t6554;
  double t6555;
  double t6556;
  double t6557;
  double t6558;
  double t6562;
  double t6563;
  double t6566;
  double t6570;
  double t6572;
  double t6573;
  double t6574;
  double t6575;
  double t6576;
  double t6577;
  double t6600;
  double t6602;
  double t6605;
  double t6407;
  double t6624;
  double t6627;
  double t6628;
  double t6629;
  t116 = Cos(var1[8]);
  t81 = Cos(var1[7]);
  t147 = -1. + t116;
  t82 = -1. + t81;
  t117 = -1.*t116;
  t138 = 1. + t117;
  t143 = 1.6e-11*t138;
  t158 = 1.6e-11*t147;
  t159 = 1. + t143 + t158;
  t197 = 4.e-6*t147;
  t201 = -4.e-6*t116;
  t202 = t197 + t201;
  t362 = Sin(var1[7]);
  t329 = Cos(var1[6]);
  t238 = 1.6e-11*t82;
  t243 = 1. + t238;
  t246 = t243*t159;
  t274 = 4.e-6*t82*t202;
  t282 = t246 + t274;
  t291 = Sin(var1[6]);
  t376 = 4.e-6*t159*t362;
  t383 = t202*t362;
  t388 = t376 + t383;
  t51 = Cos(var1[4]);
  t584 = Sin(var1[8]);
  t231 = Sin(var1[4]);
  t236 = Cos(var1[5]);
  t552 = -1.000000000016*t138;
  t574 = 1. + t552;
  t451 = Sin(var1[5]);
  t620 = -4.e-6*t574*t362;
  t658 = -4.e-6*t243*t584;
  t662 = -4.e-6*t82*t584;
  t674 = t620 + t658 + t662;
  t696 = -1.*t81;
  t697 = 1. + t696;
  t699 = -1.000000000016*t697;
  t703 = 1. + t699;
  t717 = t703*t574;
  t718 = -1.000000000016*t362*t584;
  t719 = t717 + t718;
  t836 = -1. + t143;
  t852 = 4.e-6*t836;
  t857 = 4.e-6*t138;
  t864 = t852 + t857;
  t874 = t143 + t117;
  t894 = 4.e-6*t864*t362;
  t909 = t874*t362;
  t911 = -1.000000000016*t703*t584;
  t940 = t894 + t909 + t911;
  t952 = t243*t864;
  t954 = 4.e-6*t82*t874;
  t1003 = 4.000000000064e-6*t362*t584;
  t1004 = t952 + t954 + t1003;
  t295 = -1.*t282*t291;
  t389 = t329*t388;
  t421 = t295 + t389;
  t467 = t329*t282;
  t474 = t291*t388;
  t484 = t467 + t474;
  t678 = -1.*t291*t674;
  t720 = t329*t719;
  t728 = t678 + t720;
  t743 = t329*t674;
  t744 = t291*t719;
  t763 = t743 + t744;
  t942 = t291*t940;
  t1005 = t329*t1004;
  t1010 = t942 + t1005;
  t1038 = t329*t940;
  t1041 = -1.*t291*t1004;
  t1052 = t1038 + t1041;
  t1255 = -1.*t451*t421;
  t1279 = -1.*t451*t728;
  t1286 = -1.*t451*t1052;
  t206 = t81*t202;
  t1541 = 4.e-6*t81*t159;
  t1548 = t1541 + t206;
  t1610 = -1.6e-11*t159*t362;
  t1619 = -4.e-6*t202*t362;
  t1631 = t1610 + t1619;
  t881 = 1.000000000016*t362*t584;
  t1758 = -1.000000000016*t574*t362;
  t1777 = -1.000000000016*t81*t584;
  t1780 = t1758 + t1777;
  t1795 = -4.e-6*t81*t574;
  t1805 = t1795 + t1003;
  t880 = t81*t874;
  t1984 = -1.6e-11*t864*t362;
  t1995 = -4.e-6*t874*t362;
  t1996 = 4.000000000064e-6*t81*t584;
  t2010 = t1984 + t1995 + t1996;
  t2039 = 4.e-6*t81*t864;
  t2048 = 1.000000000032*t362*t584;
  t2051 = t2039 + t880 + t2048;
  t2324 = -1.000000000016*t116*t362;
  t2325 = t2324 + t911;
  t2378 = -4.e-6*t243*t116;
  t2393 = -4.e-6*t82*t116;
  t2404 = t2378 + t2393 + t1003;
  t1909 = 1.000000000016*t81*t584;
  t2577 = 4.000000000064e-6*t116*t362;
  t2578 = 4.000000000064e-6*t243*t584;
  t2580 = 4.000000000064e-6*t82*t584;
  t2605 = t2577 + t2578 + t2580;
  t2628 = -1.000000000016*t703*t116;
  t2632 = t2628 + t2048;
  t578 = -1.*t574*t362;
  t585 = -1.6e-11*t82*t584;
  t602 = -1.*t81*t584;
  t613 = t578 + t585 + t602;
  t740 = t236*t728;
  t787 = -1.*t451*t763;
  t788 = t740 + t787;
  t867 = 4.e-6*t82*t864;
  t890 = t867 + t880 + t881;
  t1020 = -1.*t451*t1010;
  t1065 = t236*t1052;
  t1076 = t1020 + t1065;
  t182 = 4.e-6*t82*t159;
  t207 = t182 + t206;
  t448 = t236*t421;
  t491 = -1.*t451*t484;
  t495 = t448 + t491;
  t221 = t51*t207;
  t512 = -1.*t231*t495;
  t535 = t221 + t512;
  t2868 = Sin(var1[3]);
  t2912 = Cos(var1[3]);
  t618 = t51*t613;
  t797 = -1.*t231*t788;
  t810 = t618 + t797;
  t893 = t51*t890;
  t1080 = -1.*t231*t1076;
  t1150 = t893 + t1080;
  t1257 = -1.*t236*t484;
  t1275 = t1255 + t1257;
  t1280 = -1.*t236*t763;
  t1282 = t1279 + t1280;
  t1285 = -1.*t236*t1010;
  t1297 = t1285 + t1286;
  t1308 = -1.*t329*t282;
  t1309 = -1.*t291*t388;
  t1313 = t1308 + t1309;
  t1317 = t236*t1313;
  t1332 = t1255 + t1317;
  t1387 = -1.*t329*t674;
  t1394 = -1.*t291*t719;
  t1409 = t1387 + t1394;
  t1418 = t236*t1409;
  t1431 = t1279 + t1418;
  t1445 = -1.*t291*t940;
  t1477 = -1.*t329*t1004;
  t1485 = t1445 + t1477;
  t1497 = t236*t1485;
  t1503 = t1497 + t1286;
  t1584 = t1548*t291;
  t1639 = t329*t1631;
  t1656 = t1584 + t1639;
  t1683 = t329*t1548;
  t1687 = -1.*t291*t1631;
  t1697 = t1683 + t1687;
  t1517 = -4.e-6*t159*t362;
  t1522 = -1.*t202*t362;
  t1526 = t1517 + t1522;
  t1671 = -1.*t451*t1656;
  t1700 = t236*t1697;
  t1707 = t1671 + t1700;
  t1788 = t291*t1780;
  t1825 = t329*t1805;
  t1826 = t1788 + t1825;
  t1837 = t329*t1780;
  t1871 = -1.*t291*t1805;
  t1875 = t1837 + t1871;
  t1736 = -1.*t81*t574;
  t1739 = t1736 + t881;
  t1836 = -1.*t451*t1826;
  t1888 = t236*t1875;
  t1889 = t1836 + t1888;
  t2028 = -1.*t291*t2010;
  t2063 = t329*t2051;
  t2075 = t2028 + t2063;
  t2085 = t329*t2010;
  t2090 = t291*t2051;
  t2095 = t2085 + t2090;
  t1900 = -4.e-6*t864*t362;
  t1904 = -1.*t874*t362;
  t1924 = t1900 + t1904 + t1909;
  t2083 = t236*t2075;
  t2115 = -1.*t451*t2095;
  t2171 = t2083 + t2115;
  t2349 = t291*t2325;
  t2420 = t329*t2404;
  t2421 = t2349 + t2420;
  t2433 = t329*t2325;
  t2461 = -1.*t291*t2404;
  t2483 = t2433 + t2461;
  t2222 = -1.6e-11*t82*t116;
  t2264 = -1.*t81*t116;
  t2283 = t2222 + t2264 + t881;
  t2425 = -1.*t451*t2421;
  t2506 = t236*t2483;
  t2524 = t2425 + t2506;
  t2608 = -1.*t291*t2605;
  t2634 = t329*t2632;
  t2636 = t2608 + t2634;
  t2657 = t329*t2605;
  t2681 = t291*t2632;
  t2684 = t2657 + t2681;
  t2560 = 1.000000000016*t116*t362;
  t2563 = 1.6000000000256e-11*t82*t584;
  t2570 = t2560 + t2563 + t1909;
  t2653 = t236*t2636;
  t2686 = -1.*t451*t2684;
  t2738 = t2653 + t2686;
  t2938 = t451*t728;
  t2939 = t236*t763;
  t2941 = t2938 + t2939;
  t2958 = t236*t1010;
  t2959 = t451*t1052;
  t2960 = t2958 + t2959;
  t2870 = t451*t421;
  t2875 = t236*t484;
  t2879 = t2870 + t2875;
  t3431 = t2912*t2879;
  t3437 = -1.*t2868*t535;
  t3438 = t3431 + t3437;
  t3414 = t2912*t2941;
  t3415 = -1.*t2868*t810;
  t3416 = t3414 + t3415;
  t3420 = t2912*t2960;
  t3427 = -1.*t2868*t1150;
  t3428 = t3420 + t3427;
  t3012 = -1.*t207*t231;
  t3016 = -1.*t51*t495;
  t3017 = t3012 + t3016;
  t3020 = -1.*t231*t613;
  t3022 = -1.*t51*t788;
  t3029 = t3020 + t3022;
  t3039 = -1.*t231*t890;
  t3051 = -1.*t51*t1076;
  t3054 = t3039 + t3051;
  t3115 = t451*t1313;
  t3119 = t448 + t3115;
  t3154 = t451*t1409;
  t3161 = t740 + t3154;
  t3170 = t451*t1485;
  t3176 = t3170 + t1065;
  t3194 = t236*t1656;
  t3202 = t451*t1697;
  t3205 = t3194 + t3202;
  t3210 = t51*t1526;
  t3212 = -1.*t231*t1707;
  t3214 = t3210 + t3212;
  t3229 = t236*t1826;
  t3240 = t451*t1875;
  t3250 = t3229 + t3240;
  t3254 = t51*t1739;
  t3255 = -1.*t231*t1889;
  t3257 = t3254 + t3255;
  t3279 = t451*t2075;
  t3284 = t236*t2095;
  t3287 = t3279 + t3284;
  t3294 = t51*t1924;
  t3297 = -1.*t231*t2171;
  t3298 = t3294 + t3297;
  t3336 = t236*t2421;
  t3343 = t451*t2483;
  t3344 = t3336 + t3343;
  t3351 = t51*t2283;
  t3364 = -1.*t231*t2524;
  t3373 = t3351 + t3364;
  t3384 = t451*t2636;
  t3386 = t236*t2684;
  t3391 = t3384 + t3386;
  t3399 = t51*t2570;
  t3400 = -1.*t231*t2738;
  t3401 = t3399 + t3400;
  t3687 = 5.136e-14*var1[8];
  t3691 = -0.03874900000062*t138;
  t3702 = 5.9484e-7*t147;
  t3704 = -0.03875*t116;
  t3706 = -0.299999999992*t584;
  t3708 = t3687 + t3691 + t3702 + t3704 + t3706;
  t3711 = -1.284e-8*var1[8];
  t3717 = 1. + t158;
  t3722 = 0.14871*t3717;
  t3729 = -1.5499600000248e-7*t138;
  t3730 = -1.55e-7*t147;
  t3732 = -1.199999999968e-6*t584;
  t3734 = t3711 + t3722 + t3729 + t3730 + t3732;
  t3736 = 0.80321*t574;
  t3750 = 0.503210000016051*t138;
  t3777 = -4.05159380016e-7*t584;
  t3778 = t3736 + t3750 + t3777;
  t3661 = -1.*t329;
  t3674 = 1. + t3661;
  t3676 = 0.15121*t3674;
  t3679 = 0.281210000008499*t697;
  t3684 = 0.03874900000062*t362;
  t3709 = t362*t3708;
  t3735 = 4.e-6*t362*t3734;
  t3783 = t703*t3778;
  t3784 = t3679 + t3684 + t3709 + t3735 + t3783;
  t3788 = -1.2484e-7*var1[7];
  t3790 = -1.5499600000248e-7*t697;
  t3793 = 1.124840000016e-6*t362;
  t3794 = 4.e-6*t82*t3708;
  t3799 = t243*t3734;
  t3806 = -4.e-6*t362*t3778;
  t3807 = t3788 + t3790 + t3793 + t3794 + t3799 + t3806;
  t2855 = t207*t231;
  t2859 = t51*t495;
  t2860 = t2855 + t2859;
  t3677 = -0.15121*t291;
  t3785 = t291*t3784;
  t3809 = t329*t3807;
  t3811 = t3676 + t3677 + t3785 + t3809;
  t3826 = -1.*t451*t3811;
  t3836 = 0.15121*t291;
  t3841 = t329*t3784;
  t3850 = -1.*t291*t3807;
  t3851 = t3676 + t3836 + t3841 + t3850;
  t3852 = t236*t3851;
  t3853 = t3826 + t3852;
  t3854 = -1.*t231*t3853;
  t3855 = 4.9936e-13*var1[7];
  t3860 = -0.03874900000062*t697;
  t3866 = 0.281210000004*t362;
  t3867 = t81*t3708;
  t3870 = 4.e-6*t82*t3734;
  t3871 = -1.*t362*t3778;
  t3872 = t3855 + t3860 + t3866 + t3867 + t3870 + t3871;
  t3876 = t51*t3872;
  t3880 = t3854 + t3876;
  t2803 = t231*t613;
  t2820 = t51*t788;
  t2826 = t2803 + t2820;
  t3899 = t51*t3853;
  t3901 = t231*t3872;
  t3907 = t3899 + t3901;
  t3927 = t236*t3811;
  t3932 = t451*t3851;
  t3933 = t3927 + t3932;
  t3887 = -1.*t51*t3853;
  t3888 = -1.*t231*t3872;
  t3889 = t3887 + t3888;
  t2828 = t231*t890;
  t2840 = t51*t1076;
  t2854 = t2828 + t2840;
  t3939 = -1.*t2879*t3933;
  t3949 = -1.*t535*t3880;
  t3957 = -1.*t2860*t3907;
  t3967 = t3939 + t3949 + t3957;
  t4290 = -1.*t236*t3811;
  t4301 = -1.*t451*t3851;
  t4302 = t4290 + t4301;
  t3972 = t3933*t2941;
  t3975 = t3907*t2826;
  t3983 = t3880*t810;
  t3991 = t3972 + t3975 + t3983;
  t4079 = t2879*t3933;
  t4080 = t535*t3880;
  t4092 = t2860*t3907;
  t4102 = t4079 + t4080 + t4092;
  t4110 = -1.*t3933*t2960;
  t4123 = -1.*t3907*t2854;
  t4124 = -1.*t3880*t1150;
  t4128 = t4110 + t4123 + t4124;
  t4167 = -1.*t3933*t2941;
  t4171 = -1.*t3907*t2826;
  t4172 = -1.*t3880*t810;
  t4173 = t4167 + t4171 + t4172;
  t4199 = t3933*t2960;
  t4200 = t3907*t2854;
  t4202 = t3880*t1150;
  t4205 = t4199 + t4200 + t4202;
  t4518 = 0.15121*t329;
  t4519 = -1.*t291*t3784;
  t4522 = -1.*t329*t3807;
  t4524 = t4518 + t3836 + t4519 + t4522;
  t4528 = -0.15121*t329;
  t4547 = t4528 + t3836 + t3841 + t3850;
  t4556 = t236*t4524;
  t4559 = -1.*t451*t4547;
  t4560 = t4556 + t4559;
  t4527 = t451*t4524;
  t4550 = t236*t4547;
  t4551 = t4527 + t4550;
  t4789 = 1.124840000016e-6*t81;
  t4791 = -1.5499600000248e-7*t362;
  t4793 = -4.e-6*t362*t3708;
  t4795 = -1.6e-11*t362*t3734;
  t4797 = -4.e-6*t81*t3778;
  t4798 = -1.2484e-7 + t4789 + t4791 + t4793 + t4795 + t4797;
  t4812 = 0.03874900000062*t81;
  t4813 = 0.281210000008499*t362;
  t4815 = 4.e-6*t81*t3734;
  t4818 = -1.000000000016*t362*t3778;
  t4819 = t4812 + t4813 + t3867 + t4815 + t4818;
  t4802 = -1.*t291*t4798;
  t4821 = t329*t4819;
  t4824 = t4802 + t4821;
  t4826 = t329*t4798;
  t4830 = t291*t4819;
  t4831 = t4826 + t4830;
  t4844 = t236*t4824;
  t4846 = -1.*t451*t4831;
  t4847 = t4844 + t4846;
  t4849 = 0.281210000004*t81;
  t4850 = -0.03874900000062*t362;
  t4851 = -1.*t362*t3708;
  t4853 = -4.e-6*t362*t3734;
  t4855 = -1.*t81*t3778;
  t4856 = 4.9936e-13 + t4849 + t4850 + t4851 + t4853 + t4855;
  t1532 = t231*t1526;
  t1729 = t51*t1707;
  t1730 = t1532 + t1729;
  t1743 = t231*t1739;
  t1892 = t51*t1889;
  t1896 = t1743 + t1892;
  t4825 = t451*t4824;
  t4834 = t236*t4831;
  t4835 = t4825 + t4834;
  t4860 = t51*t4847;
  t4862 = t231*t4856;
  t4866 = t4860 + t4862;
  t4848 = -1.*t231*t4847;
  t4857 = t51*t4856;
  t4858 = t4848 + t4857;
  t1972 = t231*t1924;
  t2173 = t51*t2171;
  t2202 = t1972 + t2173;
  t5022 = -4.05159380016e-7*t116;
  t5032 = -0.2999999999968*t584;
  t5037 = t5022 + t5032;
  t5057 = -1.199999999968e-6*t116;
  t5060 = 1.620637520064e-12*t584;
  t5063 = -1.284e-8 + t5057 + t5060;
  t5077 = -0.299999999992*t116;
  t5078 = 4.05159380016e-7*t584;
  t5080 = 5.136e-14 + t5077 + t5078;
  t5038 = -4.e-6*t362*t5037;
  t5067 = t243*t5063;
  t5089 = 4.e-6*t82*t5080;
  t5095 = t5038 + t5067 + t5089;
  t5110 = t703*t5037;
  t5113 = 4.e-6*t362*t5063;
  t5125 = t362*t5080;
  t5126 = t5110 + t5113 + t5125;
  t5109 = -1.*t291*t5095;
  t5127 = t329*t5126;
  t5132 = t5109 + t5127;
  t5136 = t329*t5095;
  t5149 = t291*t5126;
  t5150 = t5136 + t5149;
  t5159 = t236*t5132;
  t5161 = -1.*t451*t5150;
  t5163 = t5159 + t5161;
  t5173 = -1.*t362*t5037;
  t5174 = 4.e-6*t82*t5063;
  t5181 = t81*t5080;
  t5182 = t5173 + t5174 + t5181;
  t2296 = t231*t2283;
  t2541 = t51*t2524;
  t2550 = t2296 + t2541;
  t5134 = t451*t5132;
  t5155 = t236*t5150;
  t5157 = t5134 + t5155;
  t5221 = t51*t5163;
  t5222 = t231*t5182;
  t5225 = t5221 + t5222;
  t5169 = -1.*t231*t5163;
  t5193 = t51*t5182;
  t5200 = t5169 + t5193;
  t2571 = t231*t2570;
  t2762 = t51*t2738;
  t2765 = t2571 + t2762;
  t4289 = -1.*t2879*t3853;
  t4315 = -1.*t495*t3933;
  t4327 = t3853*t2941;
  t4331 = t3933*t788;
  t4348 = t2879*t3853;
  t4355 = t495*t3933;
  t4374 = -1.*t3933*t1076;
  t4389 = -1.*t3853*t2960;
  t4425 = -1.*t3853*t2941;
  t4426 = -1.*t3933*t788;
  t4451 = t3933*t1076;
  t4458 = t3853*t2960;
  t5345 = -1.*t495*t3853;
  t5346 = -1.*t207*t3872;
  t5347 = t5345 + t3939 + t5346;
  t4516 = -1.*t3119*t3933;
  t4552 = -1.*t2879*t4551;
  t5349 = t3872*t613;
  t5350 = t3853*t788;
  t5351 = t5349 + t3972 + t5350;
  t4577 = t3933*t3161;
  t4578 = t4551*t2941;
  t5360 = t495*t3853;
  t5361 = t207*t3872;
  t5371 = t5360 + t4079 + t5361;
  t4596 = t3119*t3933;
  t4597 = t2879*t4551;
  t5390 = -1.*t3872*t890;
  t5392 = -1.*t3853*t1076;
  t5393 = t5390 + t5392 + t4110;
  t4609 = -1.*t3933*t3176;
  t4615 = -1.*t4551*t2960;
  t5397 = -1.*t3872*t613;
  t5398 = -1.*t3853*t788;
  t5399 = t5397 + t4167 + t5398;
  t4697 = -1.*t3933*t3161;
  t4705 = -1.*t4551*t2941;
  t5409 = t3872*t890;
  t5410 = t3853*t1076;
  t5413 = t5409 + t5410 + t4199;
  t4751 = t3933*t3176;
  t4755 = t4551*t2960;
  t4837 = -1.*t2879*t4835;
  t4843 = -1.*t3205*t3933;
  t4886 = t4835*t2941;
  t4887 = t3933*t3250;
  t4902 = t2879*t4835;
  t4903 = t3205*t3933;
  t4923 = -1.*t4835*t2960;
  t4925 = -1.*t3933*t3287;
  t4944 = -1.*t4835*t2941;
  t4946 = -1.*t3933*t3250;
  t4967 = t4835*t2960;
  t4969 = t3933*t3287;
  t5158 = -1.*t2879*t5157;
  t5242 = t5157*t2941;
  t5244 = t3933*t3344;
  t5270 = t2879*t5157;
  t5281 = -1.*t5157*t2960;
  t5282 = -1.*t3933*t3391;
  t5300 = -1.*t5157*t2941;
  t5301 = -1.*t3933*t3344;
  t5313 = t5157*t2960;
  t5314 = t3933*t3391;
  t5521 = -1.*t207*t4856;
  t5522 = -1.*t1526*t3872;
  t5530 = t4856*t613;
  t5542 = t3872*t1739;
  t5571 = t207*t4856;
  t5579 = t1526*t3872;
  t5592 = -1.*t3872*t1924;
  t5594 = -1.*t4856*t890;
  t5625 = -1.*t4856*t613;
  t5628 = -1.*t3872*t1739;
  t5636 = t3872*t1924;
  t5637 = t4856*t890;
  t5653 = -1.*t207*t5182;
  t5947 = -1.*t484*t3811;
  t5948 = -1.*t421*t3851;
  t5949 = t5947 + t5948 + t5346;
  t5661 = t5182*t613;
  t5672 = t3872*t2283;
  t5981 = t484*t3811;
  t5984 = t421*t3851;
  t5985 = t5981 + t5984 + t5361;
  t5705 = t207*t5182;
  t5709 = -1.*t3872*t2570;
  t5715 = -1.*t5182*t890;
  t6024 = -1.*t3851*t728;
  t6027 = -1.*t3811*t763;
  t6028 = t5397 + t6024 + t6027;
  t6043 = t3811*t1010;
  t6044 = t3851*t1052;
  t6045 = t5409 + t6043 + t6044;
  t5733 = -1.*t5182*t613;
  t5734 = -1.*t3872*t2283;
  t5741 = t3872*t2570;
  t5743 = t5182*t890;
  t6001 = -1.*t3811*t1010;
  t6002 = -1.*t3851*t1052;
  t6005 = t5390 + t6001 + t6002;
  t5953 = t3851*t728;
  t5958 = t3811*t763;
  t5962 = t5349 + t5953 + t5958;
  t6173 = -1.*t388*t3784;
  t6174 = -1.*t282*t3807;
  t6175 = t6173 + t5346 + t6174;
  t6192 = t388*t3784;
  t6193 = t282*t3807;
  t6194 = t6192 + t5361 + t6193;
  t6226 = -1.*t3807*t674;
  t6227 = -1.*t3784*t719;
  t6228 = t6226 + t5397 + t6227;
  t6236 = t3784*t940;
  t6237 = t3807*t1004;
  t6238 = t6236 + t6237 + t5409;
  t6211 = -1.*t3784*t940;
  t6212 = -1.*t3807*t1004;
  t6213 = t6211 + t6212 + t5390;
  t6178 = t3807*t674;
  t6179 = t3784*t719;
  t6180 = t6178 + t5349 + t6179;
  t6387 = t159*t5063;
  t6389 = t202*t5080;
  t6390 = t6387 + t6389;
  t6408 = t202*t3708;
  t6409 = t159*t3734;
  t6418 = t6408 + t6409;
  t6420 = 1.000000000016*t116*t3778;
  t6421 = -1.*t864*t5063;
  t6422 = -1.*t874*t5080;
  t6424 = 1.000000000016*t5037*t584;
  t6426 = -1.000000000016*t3708*t584;
  t6431 = -4.000000000064e-6*t3734*t584;
  t6436 = t6420 + t6421 + t6422 + t6424 + t6426 + t6431;
  t6458 = -1.*t202*t3708;
  t6459 = -1.*t159*t3734;
  t6463 = t6458 + t6459;
  t6466 = -1.*t159*t5063;
  t6467 = -1.*t202*t5080;
  t6469 = t6466 + t6467;
  t6474 = t574*t5037;
  t6482 = -1.*t116*t3708;
  t6483 = -4.e-6*t116*t3734;
  t6484 = -1.000000000016*t3778*t584;
  t6485 = -4.e-6*t5063*t584;
  t6486 = -1.*t5080*t584;
  t6488 = t6474 + t6482 + t6483 + t6484 + t6485 + t6486;
  t6516 = -1.*t574*t3778;
  t6517 = t3708*t584;
  t6522 = 4.e-6*t3734*t584;
  t6538 = t6516 + t6517 + t6522;
  t6543 = -1.000000000016*t116*t3778;
  t6544 = t864*t5063;
  t6554 = t874*t5080;
  t6555 = -1.000000000016*t5037*t584;
  t6556 = 1.000000000016*t3708*t584;
  t6557 = 4.000000000064e-6*t3734*t584;
  t6558 = t6543 + t6544 + t6554 + t6555 + t6556 + t6557;
  t6562 = t874*t3708;
  t6563 = t864*t3734;
  t6566 = t6562 + t6563 + t6484;
  t6570 = -1.*t574*t5037;
  t6572 = t116*t3708;
  t6573 = 4.e-6*t116*t3734;
  t6574 = 1.000000000016*t3778*t584;
  t6575 = 4.e-6*t5063*t584;
  t6576 = t5080*t584;
  t6577 = t6570 + t6572 + t6573 + t6574 + t6575 + t6576;
  t6600 = -1.*t874*t3708;
  t6602 = -1.*t864*t3734;
  t6605 = t6600 + t6602 + t6574;
  t6407 = -0.03874900000062*t584;
  t6624 = t574*t3778;
  t6627 = -1.*t3708*t584;
  t6628 = -4.e-6*t3734*t584;
  t6629 = t6624 + t6627 + t6628;
  p_output1[0]=t810*var2[0] + t1150*var2[1] + t535*var2[2];
  p_output1[1]=t1282*t51*var2[0] + t1297*t51*var2[1] + t1275*t51*var2[2];
  p_output1[2]=t1431*t51*var2[0] + t1503*t51*var2[1] + t1332*t51*var2[2];
  p_output1[3]=t1896*var2[0] + t2202*var2[1] + t1730*var2[2];
  p_output1[4]=t2550*var2[0] + t2765*var2[1];
  p_output1[5]=t2826;
  p_output1[6]=t2854;
  p_output1[7]=t2860;
  p_output1[8]=(-1.*t2868*t2941 - 1.*t2912*t810)*var2[0] + (-1.*t1150*t2912 - 1.*t2868*t2960)*var2[1] + (-1.*t2868*t2879 - 1.*t2912*t535)*var2[2];
  p_output1[9]=-1.*t2868*t3029*var2[0] - 1.*t2868*t3054*var2[1] - 1.*t2868*t3017*var2[2];
  p_output1[10]=(t1282*t231*t2868 + t2912*t788)*var2[0] + (t1297*t231*t2868 + t1076*t2912)*var2[1] + (t1275*t231*t2868 + t2912*t495)*var2[2];
  p_output1[11]=(t1431*t231*t2868 + t2912*t3161)*var2[0] + (t1503*t231*t2868 + t2912*t3176)*var2[1] + (t1332*t231*t2868 + t2912*t3119)*var2[2];
  p_output1[12]=(t2912*t3250 - 1.*t2868*t3257)*var2[0] + (t2912*t3287 - 1.*t2868*t3298)*var2[1] + (t2912*t3205 - 1.*t2868*t3214)*var2[2];
  p_output1[13]=(t2912*t3344 - 1.*t2868*t3373)*var2[0] + (t2912*t3391 - 1.*t2868*t3401)*var2[1];
  p_output1[14]=t3416;
  p_output1[15]=t3428;
  p_output1[16]=t3438;
  p_output1[17]=t3416*var2[0] + t3428*var2[1] + t3438*var2[2];
  p_output1[18]=t2912*t3029*var2[0] + t2912*t3054*var2[1] + t2912*t3017*var2[2];
  p_output1[19]=(-1.*t1282*t231*t2912 + t2868*t788)*var2[0] + (t1076*t2868 - 1.*t1297*t231*t2912)*var2[1] + (-1.*t1275*t231*t2912 + t2868*t495)*var2[2];
  p_output1[20]=(-1.*t1431*t231*t2912 + t2868*t3161)*var2[0] + (-1.*t1503*t231*t2912 + t2868*t3176)*var2[1] + (-1.*t1332*t231*t2912 + t2868*t3119)*var2[2];
  p_output1[21]=(t2868*t3250 + t2912*t3257)*var2[0] + (t2868*t3287 + t2912*t3298)*var2[1] + (t2868*t3205 + t2912*t3214)*var2[2];
  p_output1[22]=(t2868*t3344 + t2912*t3373)*var2[0] + (t2868*t3391 + t2912*t3401)*var2[1];
  p_output1[23]=t2868*t2941 + t2912*t810;
  p_output1[24]=t1150*t2912 + t2868*t2960;
  p_output1[25]=t2868*t2879 + t2912*t535;
  p_output1[26]=(t2860*(-1.*t2854*t3880 - 1.*t3054*t3880 - 1.*t1150*t3889 - 1.*t1150*t3907) + t1150*t4102 + t4128*t535 + t2854*(t2860*t3880 + t3017*t3880 + t3889*t535 + t3907*t535))*var2[0] + (t3991*t535 + t2826*(-1.*t2860*t3880 - 1.*t3017*t3880 - 1.*t3889*t535 - 1.*t3907*t535) + t3967*t810 + t2860*(t2826*t3880 + t3029*t3880 + t3889*t810 + t3907*t810))*var2[1] + (t2826*(t2854*t3880 + t3054*t3880 + t1150*t3889 + t1150*t3907) + t1150*t4173 + t4205*t810 + t2854*(-1.*t2826*t3880 - 1.*t3029*t3880 - 1.*t3889*t810 - 1.*t3907*t810))*var2[2];
  p_output1[27]=(t1297*t4102*t51 + t1275*t4128*t51 + t2860*(t1297*t231*t3880 + t1150*t231*t4302 + t4374 + t4389 - 1.*t1297*t3907*t51 - 1.*t2854*t4302*t51) + t2854*(-1.*t1275*t231*t3880 + t4348 + t4355 + t1275*t3907*t51 + t2860*t4302*t51 - 1.*t231*t4302*t535))*var2[0] + (t1282*t3967*t51 + t1275*t3991*t51 + t2826*(t1275*t231*t3880 + t4289 + t4315 - 1.*t1275*t3907*t51 - 1.*t2860*t4302*t51 + t231*t4302*t535) + t2860*(-1.*t1282*t231*t3880 + t4327 + t4331 + t1282*t3907*t51 + t2826*t4302*t51 - 1.*t231*t4302*t810))*var2[1] + (t1297*t4173*t51 + t1282*t4205*t51 + t2826*(-1.*t1297*t231*t3880 - 1.*t1150*t231*t4302 + t4451 + t4458 + t1297*t3907*t51 + t2854*t4302*t51) + t2854*(t1282*t231*t3880 + t4425 + t4426 - 1.*t1282*t3907*t51 - 1.*t2826*t4302*t51 + t231*t4302*t810))*var2[2];
  p_output1[28]=(t1503*t4102*t51 + t1332*t4128*t51 + t2860*(t1503*t231*t3880 + t1150*t231*t4560 + t4609 + t4615 - 1.*t1503*t3907*t51 - 1.*t2854*t4560*t51) + t2854*(-1.*t1332*t231*t3880 + t4596 + t4597 + t1332*t3907*t51 + t2860*t4560*t51 - 1.*t231*t4560*t535))*var2[0] + (t1431*t3967*t51 + t1332*t3991*t51 + t2826*(t1332*t231*t3880 + t4516 + t4552 - 1.*t1332*t3907*t51 - 1.*t2860*t4560*t51 + t231*t4560*t535) + t2860*(-1.*t1431*t231*t3880 + t4577 + t4578 + t1431*t3907*t51 + t2826*t4560*t51 - 1.*t231*t4560*t810))*var2[1] + (t1503*t4173*t51 + t1431*t4205*t51 + t2826*(-1.*t1503*t231*t3880 - 1.*t1150*t231*t4560 + t4751 + t4755 + t1503*t3907*t51 + t2854*t4560*t51) + t2854*(t1431*t231*t3880 + t4697 + t4705 - 1.*t1431*t3907*t51 - 1.*t2826*t4560*t51 + t231*t4560*t810))*var2[2];
  p_output1[29]=(t2202*t4102 + t1730*t4128 + t2860*(-1.*t3298*t3880 - 1.*t2202*t3907 - 1.*t1150*t4858 - 1.*t2854*t4866 + t4923 + t4925) + t2854*(t3214*t3880 + t1730*t3907 + t2860*t4866 + t4902 + t4903 + t4858*t535))*var2[0] + (t1896*t3967 + t1730*t3991 + t2826*(-1.*t3214*t3880 - 1.*t1730*t3907 + t4837 + t4843 - 1.*t2860*t4866 - 1.*t4858*t535) + t2860*(t3257*t3880 + t1896*t3907 + t2826*t4866 + t4886 + t4887 + t4858*t810))*var2[1] + (t2202*t4173 + t1896*t4205 + t2826*(t3298*t3880 + t2202*t3907 + t1150*t4858 + t2854*t4866 + t4967 + t4969) + t2854*(-1.*t3257*t3880 - 1.*t1896*t3907 - 1.*t2826*t4866 + t4944 + t4946 - 1.*t4858*t810))*var2[2];
  p_output1[30]=(t2765*t4102 + t2860*(-1.*t3401*t3880 - 1.*t2765*t3907 - 1.*t1150*t5200 - 1.*t2854*t5225 + t5281 + t5282) + t2854*(t2860*t5225 + t5270 + t5200*t535))*var2[0] + (t2550*t3967 + t2826*(t5158 - 1.*t2860*t5225 - 1.*t5200*t535) + t2860*(t3373*t3880 + t2550*t3907 + t2826*t5225 + t5242 + t5244 + t5200*t810))*var2[1] + (t2765*t4173 + t2550*t4205 + t2826*(t3401*t3880 + t2765*t3907 + t1150*t5200 + t2854*t5225 + t5313 + t5314) + t2854*(-1.*t3373*t3880 - 1.*t2550*t3907 - 1.*t2826*t5225 + t5300 + t5301 - 1.*t5200*t810))*var2[2];
  p_output1[31]=t2854*t4102 + t2860*t4128;
  p_output1[32]=t2826*t3967 + t2860*t3991;
  p_output1[33]=t2854*t4173 + t2826*t4205;
  p_output1[34]=(t2879*(-1.*t1297*t3853 - 1.*t1076*t4302 + t4374 + t4389) + t2960*(t1275*t3853 + t4348 + t4355 + t4302*t495) + t1076*t5371 + t495*t5393)*var2[0] + (t2941*(-1.*t1275*t3853 + t4289 + t4315 - 1.*t4302*t495) + t495*t5351 + t5347*t788 + t2879*(t1282*t3853 + t4327 + t4331 + t4302*t788))*var2[1] + (t2941*(t1297*t3853 + t1076*t4302 + t4451 + t4458) + t1076*t5399 + t5413*t788 + t2960*(-1.*t1282*t3853 + t4425 + t4426 - 1.*t4302*t788))*var2[2];
  p_output1[35]=(t2879*(-1.*t1503*t3853 - 1.*t1076*t4560 + t4609 + t4615) + t2960*(t1332*t3853 + t4596 + t4597 + t4560*t495) + t3176*t5371 + t3119*t5393)*var2[0] + (t2941*(-1.*t1332*t3853 + t4516 + t4552 - 1.*t4560*t495) + t3161*t5347 + t3119*t5351 + t2879*(t1431*t3853 + t4577 + t4578 + t4560*t788))*var2[1] + (t2941*(t1503*t3853 + t1076*t4560 + t4751 + t4755) + t3176*t5399 + t3161*t5413 + t2960*(-1.*t1431*t3853 + t4697 + t4705 - 1.*t4560*t788))*var2[2];
  p_output1[36]=(t3287*t5371 + t3205*t5393 + t2960*(t1707*t3853 + t4902 + t4903 + t4847*t495 + t5571 + t5579) + t2879*(-1.*t2171*t3853 - 1.*t1076*t4847 + t4923 + t4925 + t5592 + t5594))*var2[0] + (t3250*t5347 + t3205*t5351 + t2941*(-1.*t1707*t3853 + t4837 + t4843 - 1.*t4847*t495 + t5521 + t5522) + t2879*(t1889*t3853 + t4886 + t4887 + t5530 + t5542 + t4847*t788))*var2[1] + (t3287*t5399 + t3250*t5413 + t2941*(t2171*t3853 + t1076*t4847 + t4967 + t4969 + t5636 + t5637) + t2960*(-1.*t1889*t3853 + t4944 + t4946 + t5625 + t5628 - 1.*t4847*t788))*var2[2];
  p_output1[37]=(t3391*t5371 + t2960*(t495*t5163 + t5270 + t5705) + t2879*(-1.*t2738*t3853 - 1.*t1076*t5163 + t5281 + t5282 + t5709 + t5715))*var2[0] + (t3344*t5347 + t2941*(t5158 - 1.*t495*t5163 + t5653) + t2879*(t2524*t3853 + t5242 + t5244 + t5661 + t5672 + t5163*t788))*var2[1] + (t3391*t5399 + t3344*t5413 + t2941*(t2738*t3853 + t1076*t5163 + t5313 + t5314 + t5741 + t5743) + t2960*(-1.*t2524*t3853 + t5300 + t5301 + t5733 + t5734 - 1.*t5163*t788))*var2[2];
  p_output1[38]=t2960*t5371 + t2879*t5393;
  p_output1[39]=t2941*t5347 + t2879*t5351;
  p_output1[40]=t2960*t5399 + t2941*t5413;
  p_output1[41]=(t207*(-1.*t1052*t3811 - 1.*t1485*t3851 - 1.*t1052*t4524 - 1.*t1010*t4547) + (t1313*t3851 + t3811*t421 + t421*t4524 + t4547*t484)*t890)*var2[0] + ((-1.*t1313*t3851 - 1.*t3811*t421 - 1.*t421*t4524 - 1.*t4547*t484)*t613 + t207*(t1409*t3851 + t3811*t728 + t4524*t728 + t4547*t763))*var2[1] + ((t1052*t3811 + t1485*t3851 + t1052*t4524 + t1010*t4547)*t613 + (-1.*t1409*t3851 - 1.*t3811*t728 - 1.*t4524*t728 - 1.*t4547*t763)*t890)*var2[2];
  p_output1[42]=(t207*(-1.*t2095*t3811 - 1.*t2075*t3851 - 1.*t1052*t4824 - 1.*t1010*t4831 + t5592 + t5594) + t1924*t5985 + t1526*t6005 + (t1656*t3811 + t1697*t3851 + t421*t4824 + t4831*t484 + t5571 + t5579)*t890)*var2[0] + (t1739*t5949 + t1526*t5962 + (-1.*t1656*t3811 - 1.*t1697*t3851 - 1.*t421*t4824 - 1.*t4831*t484 + t5521 + t5522)*t613 + t207*(t1826*t3811 + t1875*t3851 + t5530 + t5542 + t4824*t728 + t4831*t763))*var2[1] + (t1924*t6028 + t1739*t6045 + (t2095*t3811 + t2075*t3851 + t1052*t4824 + t1010*t4831 + t5636 + t5637)*t613 + (-1.*t1826*t3811 - 1.*t1875*t3851 + t5625 + t5628 - 1.*t4824*t728 - 1.*t4831*t763)*t890)*var2[2];
  p_output1[43]=(t207*(-1.*t2684*t3811 - 1.*t2636*t3851 - 1.*t1052*t5132 - 1.*t1010*t5150 + t5709 + t5715) + t2570*t5985 + (t421*t5132 + t484*t5150 + t5705)*t890)*var2[0] + (t2283*t5949 + (-1.*t421*t5132 - 1.*t484*t5150 + t5653)*t613 + t207*(t2421*t3811 + t2483*t3851 + t5661 + t5672 + t5132*t728 + t5150*t763))*var2[1] + (t2570*t6028 + t2283*t6045 + (t2684*t3811 + t2636*t3851 + t1052*t5132 + t1010*t5150 + t5741 + t5743)*t613 + (-1.*t2421*t3811 - 1.*t2483*t3851 + t5733 + t5734 - 1.*t5132*t728 - 1.*t5150*t763)*t890)*var2[2];
  p_output1[44]=t207*t6005 + t5985*t890;
  p_output1[45]=t207*t5962 + t5949*t613;
  p_output1[46]=t6045*t613 + t6028*t890;
  p_output1[47]=(0.15121*t1780 - 0.15121*t1805 + t1924*t6194 + t1526*t6213 + (t1548*t3784 + t1631*t3807 + t282*t4798 + t388*t4819 + t5571 + t5579)*t890 + t207*(-1.*t2051*t3784 - 1.*t2010*t3807 - 1.*t1004*t4798 + t5592 + t5594 - 1.*t4819*t940))*var2[0] + (-0.15121*t2010 + 0.15121*t2051 + (-1.*t1548*t3784 - 1.*t1631*t3807 - 1.*t282*t4798 - 1.*t388*t4819 + t5521 + t5522)*t613 + t1739*t6175 + t1526*t6180 + t207*(t1780*t3784 + t1805*t3807 + t5530 + t5542 + t4798*t674 + t4819*t719))*var2[1] + (0.15121*t1548 - 0.15121*t1631 + t1924*t6228 + t1739*t6238 + (-1.*t1780*t3784 - 1.*t1805*t3807 + t5625 + t5628 - 1.*t4798*t674 - 1.*t4819*t719)*t890 + t613*(t2051*t3784 + t2010*t3807 + t1004*t4798 + t5636 + t5637 + t4819*t940))*var2[2];
  p_output1[48]=(0.15121*t2325 - 0.15121*t2404 + t2570*t6194 + (t282*t5095 + t388*t5126 + t5705)*t890 + t207*(-1.*t2632*t3784 - 1.*t2605*t3807 - 1.*t1004*t5095 + t5709 + t5715 - 1.*t5126*t940))*var2[0] + (-0.15121*t2605 + 0.15121*t2632 + (-1.*t282*t5095 - 1.*t388*t5126 + t5653)*t613 + t2283*t6175 + t207*(t2325*t3784 + t2404*t3807 + t5661 + t5672 + t5095*t674 + t5126*t719))*var2[1] + (t2570*t6228 + t2283*t6238 + (-1.*t2325*t3784 - 1.*t2404*t3807 + t5733 + t5734 - 1.*t5095*t674 - 1.*t5126*t719)*t890 + t613*(t2632*t3784 + t2605*t3807 + t1004*t5095 + t5741 + t5743 + t5126*t940))*var2[2];
  p_output1[49]=t207*t6213 - 0.15121*t674 + 0.15121*t719 + t6194*t890;
  p_output1[50]=-0.15121*t1004 + t613*t6175 + t207*t6180 + 0.15121*t940;
  p_output1[51]=-0.15121*t282 + 0.15121*t388 + t613*t6238 + t6228*t890;
  p_output1[52]=(-0.281210000004*t116 + t6407 + 4.000000000064e-6*t584*t6418 + t159*t6436 + t6390*t864 + 4.e-6*(-1.000000000016*t584*t6418 - 1.*t202*t6436 - 1.*t6390*t874))*var2[0] + (-0.03874900000062*t116 + 0.281210000008499*t584 - 4.e-6*t116*t6463 - 4.e-6*t584*t6469 + t159*t6488 + 4.e-6*(t116*t6463 + t584*t6469 - 1.*t202*t6488))*var2[1] + (4.000000000064e-6*t584*t6538 - 4.e-6*t584*t6558 - 4.e-6*t116*t6566 + t6577*t864 + 4.e-6*(-1.000000000016*t584*t6538 + t584*t6558 + t116*t6566 - 1.*t6577*t874))*var2[2];
  p_output1[53]=0.038749*t574 - 0.281210000004*t584 + t159*t6605 + t6418*t864 + 4.e-6*(-1.*t202*t6605 - 1.*t6418*t874);
  p_output1[54]=t6407 - 4.e-6*t584*t6463 + t159*t6629 + 4.e-6*(t584*t6463 - 1.*t202*t6629) + 1.e-6*t864 + 0.28121*t874;
  p_output1[55]=1.e-6*t159 + 0.28121*t202 - 4.e-6*t584*t6566 + t6538*t864 + 4.e-6*(t584*t6566 - 1.*t6538*t874);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fFlFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
