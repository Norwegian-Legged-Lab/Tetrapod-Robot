/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:51:35 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t116;
  double t78;
  double t167;
  double t92;
  double t124;
  double t148;
  double t162;
  double t171;
  double t188;
  double t205;
  double t219;
  double t223;
  double t364;
  double t360;
  double t290;
  double t303;
  double t306;
  double t311;
  double t322;
  double t334;
  double t394;
  double t396;
  double t408;
  double t63;
  double t561;
  double t282;
  double t288;
  double t553;
  double t556;
  double t456;
  double t584;
  double t585;
  double t590;
  double t595;
  double t604;
  double t606;
  double t608;
  double t609;
  double t614;
  double t616;
  double t621;
  double t688;
  double t689;
  double t691;
  double t700;
  double t713;
  double t754;
  double t757;
  double t758;
  double t770;
  double t776;
  double t781;
  double t785;
  double t789;
  double t353;
  double t436;
  double t450;
  double t472;
  double t489;
  double t508;
  double t596;
  double t623;
  double t627;
  double t633;
  double t638;
  double t661;
  double t771;
  double t797;
  double t806;
  double t815;
  double t818;
  double t819;
  double t865;
  double t881;
  double t916;
  double t242;
  double t1019;
  double t1021;
  double t1034;
  double t1040;
  double t1046;
  double t740;
  double t1115;
  double t1116;
  double t1119;
  double t1130;
  double t1139;
  double t714;
  double t1222;
  double t1233;
  double t1237;
  double t1240;
  double t1251;
  double t1253;
  double t1255;
  double t1342;
  double t1348;
  double t1352;
  double t1355;
  double t1363;
  double t1211;
  double t1453;
  double t1482;
  double t1488;
  double t1490;
  double t1505;
  double t1516;
  double t558;
  double t564;
  double t566;
  double t567;
  double t628;
  double t663;
  double t664;
  double t711;
  double t747;
  double t809;
  double t821;
  double t822;
  double t195;
  double t266;
  double t453;
  double t524;
  double t526;
  double t278;
  double t531;
  double t539;
  double t1653;
  double t1675;
  double t570;
  double t672;
  double t684;
  double t751;
  double t847;
  double t850;
  double t878;
  double t879;
  double t888;
  double t900;
  double t908;
  double t917;
  double t932;
  double t941;
  double t946;
  double t948;
  double t952;
  double t963;
  double t969;
  double t970;
  double t972;
  double t978;
  double t986;
  double t992;
  double t995;
  double t996;
  double t1001;
  double t1026;
  double t1051;
  double t1052;
  double t1063;
  double t1065;
  double t1076;
  double t1014;
  double t1015;
  double t1017;
  double t1058;
  double t1077;
  double t1088;
  double t1124;
  double t1148;
  double t1149;
  double t1164;
  double t1171;
  double t1176;
  double t1097;
  double t1110;
  double t1155;
  double t1179;
  double t1180;
  double t1249;
  double t1264;
  double t1267;
  double t1271;
  double t1272;
  double t1280;
  double t1206;
  double t1208;
  double t1213;
  double t1269;
  double t1282;
  double t1284;
  double t1350;
  double t1365;
  double t1366;
  double t1380;
  double t1389;
  double t1393;
  double t1313;
  double t1321;
  double t1328;
  double t1376;
  double t1394;
  double t1395;
  double t1494;
  double t1517;
  double t1524;
  double t1534;
  double t1538;
  double t1541;
  double t1427;
  double t1441;
  double t1444;
  double t1533;
  double t1543;
  double t1545;
  double t1686;
  double t1687;
  double t1697;
  double t1736;
  double t1737;
  double t1739;
  double t1656;
  double t1661;
  double t1672;
  double t2291;
  double t2294;
  double t2295;
  double t2266;
  double t2269;
  double t2274;
  double t2281;
  double t2282;
  double t2286;
  double t1767;
  double t1768;
  double t1772;
  double t1787;
  double t1796;
  double t1802;
  double t1817;
  double t1818;
  double t1823;
  double t1927;
  double t1931;
  double t1956;
  double t1958;
  double t1980;
  double t1981;
  double t2008;
  double t2012;
  double t2016;
  double t2038;
  double t2048;
  double t2049;
  double t2073;
  double t2075;
  double t2080;
  double t2086;
  double t2087;
  double t2099;
  double t2112;
  double t2120;
  double t2128;
  double t2136;
  double t2137;
  double t2141;
  double t2159;
  double t2160;
  double t2164;
  double t2169;
  double t2170;
  double t2186;
  double t2203;
  double t2205;
  double t2212;
  double t2221;
  double t2225;
  double t2226;
  double t2773;
  double t2778;
  double t2800;
  double t2819;
  double t2821;
  double t2838;
  double t2850;
  double t2853;
  double t2857;
  double t2861;
  double t2867;
  double t2869;
  double t2870;
  double t2883;
  double t2890;
  double t2893;
  double t2915;
  double t2718;
  double t2722;
  double t2729;
  double t2763;
  double t2771;
  double t2845;
  double t2871;
  double t2920;
  double t2921;
  double t2927;
  double t2934;
  double t2938;
  double t2941;
  double t2948;
  double t2949;
  double t2952;
  double t1649;
  double t1650;
  double t1652;
  double t2732;
  double t2922;
  double t2971;
  double t2974;
  double t2975;
  double t2978;
  double t2980;
  double t2981;
  double t2985;
  double t2989;
  double t2992;
  double t2999;
  double t3015;
  double t3050;
  double t3051;
  double t3056;
  double t3065;
  double t3069;
  double t3082;
  double t3085;
  double t3107;
  double t1613;
  double t1622;
  double t1640;
  double t3190;
  double t3202;
  double t3208;
  double t3234;
  double t3237;
  double t3242;
  double t3130;
  double t3135;
  double t3142;
  double t1645;
  double t1646;
  double t1648;
  double t3246;
  double t3260;
  double t3278;
  double t3281;
  double t3833;
  double t3841;
  double t3843;
  double t3287;
  double t3289;
  double t3303;
  double t3317;
  double t3419;
  double t3428;
  double t3429;
  double t3439;
  double t3475;
  double t3477;
  double t3478;
  double t3482;
  double t3593;
  double t3596;
  double t3601;
  double t3602;
  double t3707;
  double t3708;
  double t3728;
  double t3750;
  double t4179;
  double t4184;
  double t4189;
  double t4198;
  double t4201;
  double t4202;
  double t4220;
  double t4221;
  double t4230;
  double t4199;
  double t4204;
  double t4207;
  double t4523;
  double t4525;
  double t4531;
  double t4533;
  double t4536;
  double t4544;
  double t4550;
  double t4553;
  double t4560;
  double t4561;
  double t4567;
  double t4545;
  double t4571;
  double t4572;
  double t4574;
  double t4576;
  double t4577;
  double t4604;
  double t4605;
  double t4606;
  double t4612;
  double t4614;
  double t4615;
  double t4617;
  double t4623;
  double t4627;
  double t1018;
  double t1090;
  double t1093;
  double t1112;
  double t1194;
  double t1200;
  double t4573;
  double t4584;
  double t4585;
  double t4641;
  double t4657;
  double t4658;
  double t4608;
  double t4630;
  double t4636;
  double t1214;
  double t1293;
  double t1294;
  double t4880;
  double t4881;
  double t4886;
  double t4891;
  double t4896;
  double t4898;
  double t4907;
  double t4912;
  double t4914;
  double t4890;
  double t4899;
  double t4919;
  double t4921;
  double t4930;
  double t4939;
  double t4943;
  double t4952;
  double t4922;
  double t4953;
  double t4958;
  double t4961;
  double t4963;
  double t4971;
  double t4985;
  double t4986;
  double t4995;
  double t5011;
  double t5012;
  double t5017;
  double t5018;
  double t1338;
  double t1396;
  double t1417;
  double t4959;
  double t4972;
  double t4980;
  double t5038;
  double t5045;
  double t5057;
  double t5010;
  double t5021;
  double t5026;
  double t1450;
  double t1567;
  double t1573;
  double t3822;
  double t3846;
  double t3894;
  double t3895;
  double t3955;
  double t3961;
  double t3973;
  double t3993;
  double t4066;
  double t4070;
  double t4128;
  double t4134;
  double t5373;
  double t5380;
  double t5381;
  double t4175;
  double t4216;
  double t5386;
  double t5387;
  double t5389;
  double t4268;
  double t4271;
  double t5405;
  double t5407;
  double t5408;
  double t4324;
  double t4330;
  double t5440;
  double t5442;
  double t5443;
  double t4361;
  double t4369;
  double t5452;
  double t5453;
  double t5454;
  double t4429;
  double t4431;
  double t5483;
  double t5484;
  double t5485;
  double t4460;
  double t4473;
  double t4586;
  double t4592;
  double t4686;
  double t4691;
  double t4724;
  double t4730;
  double t4784;
  double t4787;
  double t4819;
  double t4820;
  double t4843;
  double t4846;
  double t4983;
  double t5071;
  double t5079;
  double t5116;
  double t5129;
  double t5149;
  double t5227;
  double t5241;
  double t5282;
  double t5288;
  double t5655;
  double t5659;
  double t5669;
  double t5675;
  double t5703;
  double t5708;
  double t5722;
  double t5727;
  double t5760;
  double t5761;
  double t5790;
  double t5793;
  double t5837;
  double t6263;
  double t6278;
  double t6281;
  double t5847;
  double t5848;
  double t6379;
  double t6380;
  double t6389;
  double t5911;
  double t5925;
  double t5926;
  double t6523;
  double t6526;
  double t6527;
  double t6568;
  double t6574;
  double t6580;
  double t5985;
  double t5986;
  double t6002;
  double t6003;
  double t6448;
  double t6452;
  double t6453;
  double t6292;
  double t6293;
  double t6302;
  double t6875;
  double t6877;
  double t6886;
  double t6968;
  double t6973;
  double t6974;
  double t7054;
  double t7055;
  double t7056;
  double t7080;
  double t7081;
  double t7084;
  double t7003;
  double t7006;
  double t7014;
  double t6905;
  double t6915;
  double t6928;
  double t7275;
  double t7277;
  double t7290;
  double t7296;
  double t7301;
  double t7304;
  double t7307;
  double t7310;
  double t7311;
  double t7313;
  double t7314;
  double t7316;
  double t7317;
  double t7340;
  double t7342;
  double t7345;
  double t7352;
  double t7359;
  double t7360;
  double t7364;
  double t7365;
  double t7371;
  double t7374;
  double t7394;
  double t7406;
  double t7408;
  double t7465;
  double t7466;
  double t7472;
  double t7476;
  double t7481;
  double t7487;
  double t7496;
  double t7509;
  double t7515;
  double t7516;
  double t7520;
  double t7522;
  double t7525;
  double t7527;
  double t7544;
  double t7549;
  double t7558;
  double t7559;
  double t7560;
  double t7563;
  double t7568;
  double t7638;
  double t7642;
  double t7644;
  double t7295;
  double t7697;
  double t7709;
  double t7711;
  double t7714;
  t116 = Cos(var1[8]);
  t78 = Cos(var1[7]);
  t167 = -1. + t116;
  t92 = -1. + t78;
  t124 = -1.*t116;
  t148 = 1. + t124;
  t162 = 1.6e-11*t148;
  t171 = 1.6e-11*t167;
  t188 = 1. + t162 + t171;
  t205 = 4.e-6*t167;
  t219 = -4.e-6*t116;
  t223 = t205 + t219;
  t364 = Sin(var1[7]);
  t360 = Cos(var1[6]);
  t290 = 1.6e-11*t92;
  t303 = 1. + t290;
  t306 = t303*t188;
  t311 = 4.e-6*t92*t223;
  t322 = t306 + t311;
  t334 = Sin(var1[6]);
  t394 = 4.e-6*t188*t364;
  t396 = t223*t364;
  t408 = t394 + t396;
  t63 = Cos(var1[4]);
  t561 = Sin(var1[8]);
  t282 = Sin(var1[4]);
  t288 = Cos(var1[5]);
  t553 = -1.000000000016*t148;
  t556 = 1. + t553;
  t456 = Sin(var1[5]);
  t584 = -4.e-6*t556*t364;
  t585 = -4.e-6*t303*t561;
  t590 = -4.e-6*t92*t561;
  t595 = t584 + t585 + t590;
  t604 = -1.*t78;
  t606 = 1. + t604;
  t608 = -1.000000000016*t606;
  t609 = 1. + t608;
  t614 = t609*t556;
  t616 = -1.000000000016*t364*t561;
  t621 = t614 + t616;
  t688 = -1. + t162;
  t689 = 4.e-6*t688;
  t691 = 4.e-6*t148;
  t700 = t689 + t691;
  t713 = t162 + t124;
  t754 = 4.e-6*t700*t364;
  t757 = t713*t364;
  t758 = -1.000000000016*t609*t561;
  t770 = t754 + t757 + t758;
  t776 = t303*t700;
  t781 = 4.e-6*t92*t713;
  t785 = 4.000000000064e-6*t364*t561;
  t789 = t776 + t781 + t785;
  t353 = -1.*t322*t334;
  t436 = t360*t408;
  t450 = t353 + t436;
  t472 = t360*t322;
  t489 = t334*t408;
  t508 = t472 + t489;
  t596 = -1.*t334*t595;
  t623 = t360*t621;
  t627 = t596 + t623;
  t633 = t360*t595;
  t638 = t334*t621;
  t661 = t633 + t638;
  t771 = t334*t770;
  t797 = t360*t789;
  t806 = t771 + t797;
  t815 = t360*t770;
  t818 = -1.*t334*t789;
  t819 = t815 + t818;
  t865 = -1.*t456*t450;
  t881 = -1.*t456*t627;
  t916 = -1.*t456*t819;
  t242 = t78*t223;
  t1019 = 4.e-6*t78*t188;
  t1021 = t1019 + t242;
  t1034 = -1.6e-11*t188*t364;
  t1040 = -4.e-6*t223*t364;
  t1046 = t1034 + t1040;
  t740 = 1.000000000016*t364*t561;
  t1115 = -1.000000000016*t556*t364;
  t1116 = -1.000000000016*t78*t561;
  t1119 = t1115 + t1116;
  t1130 = -4.e-6*t78*t556;
  t1139 = t1130 + t785;
  t714 = t78*t713;
  t1222 = -1.6e-11*t700*t364;
  t1233 = -4.e-6*t713*t364;
  t1237 = 4.000000000064e-6*t78*t561;
  t1240 = t1222 + t1233 + t1237;
  t1251 = 4.e-6*t78*t700;
  t1253 = 1.000000000032*t364*t561;
  t1255 = t1251 + t714 + t1253;
  t1342 = -1.000000000016*t116*t364;
  t1348 = t1342 + t758;
  t1352 = -4.e-6*t303*t116;
  t1355 = -4.e-6*t92*t116;
  t1363 = t1352 + t1355 + t785;
  t1211 = 1.000000000016*t78*t561;
  t1453 = 4.000000000064e-6*t116*t364;
  t1482 = 4.000000000064e-6*t303*t561;
  t1488 = 4.000000000064e-6*t92*t561;
  t1490 = t1453 + t1482 + t1488;
  t1505 = -1.000000000016*t609*t116;
  t1516 = t1505 + t1253;
  t558 = -1.*t556*t364;
  t564 = -1.6e-11*t92*t561;
  t566 = -1.*t78*t561;
  t567 = t558 + t564 + t566;
  t628 = t288*t627;
  t663 = -1.*t456*t661;
  t664 = t628 + t663;
  t711 = 4.e-6*t92*t700;
  t747 = t711 + t714 + t740;
  t809 = -1.*t456*t806;
  t821 = t288*t819;
  t822 = t809 + t821;
  t195 = 4.e-6*t92*t188;
  t266 = t195 + t242;
  t453 = t288*t450;
  t524 = -1.*t456*t508;
  t526 = t453 + t524;
  t278 = t63*t266;
  t531 = -1.*t282*t526;
  t539 = t278 + t531;
  t1653 = Sin(var1[3]);
  t1675 = Cos(var1[3]);
  t570 = t63*t567;
  t672 = -1.*t282*t664;
  t684 = t570 + t672;
  t751 = t63*t747;
  t847 = -1.*t282*t822;
  t850 = t751 + t847;
  t878 = -1.*t288*t508;
  t879 = t865 + t878;
  t888 = -1.*t288*t661;
  t900 = t881 + t888;
  t908 = -1.*t288*t806;
  t917 = t908 + t916;
  t932 = -1.*t360*t322;
  t941 = -1.*t334*t408;
  t946 = t932 + t941;
  t948 = t288*t946;
  t952 = t865 + t948;
  t963 = -1.*t360*t595;
  t969 = -1.*t334*t621;
  t970 = t963 + t969;
  t972 = t288*t970;
  t978 = t881 + t972;
  t986 = -1.*t334*t770;
  t992 = -1.*t360*t789;
  t995 = t986 + t992;
  t996 = t288*t995;
  t1001 = t996 + t916;
  t1026 = t1021*t334;
  t1051 = t360*t1046;
  t1052 = t1026 + t1051;
  t1063 = t360*t1021;
  t1065 = -1.*t334*t1046;
  t1076 = t1063 + t1065;
  t1014 = -4.e-6*t188*t364;
  t1015 = -1.*t223*t364;
  t1017 = t1014 + t1015;
  t1058 = -1.*t456*t1052;
  t1077 = t288*t1076;
  t1088 = t1058 + t1077;
  t1124 = t334*t1119;
  t1148 = t360*t1139;
  t1149 = t1124 + t1148;
  t1164 = t360*t1119;
  t1171 = -1.*t334*t1139;
  t1176 = t1164 + t1171;
  t1097 = -1.*t78*t556;
  t1110 = t1097 + t740;
  t1155 = -1.*t456*t1149;
  t1179 = t288*t1176;
  t1180 = t1155 + t1179;
  t1249 = -1.*t334*t1240;
  t1264 = t360*t1255;
  t1267 = t1249 + t1264;
  t1271 = t360*t1240;
  t1272 = t334*t1255;
  t1280 = t1271 + t1272;
  t1206 = -4.e-6*t700*t364;
  t1208 = -1.*t713*t364;
  t1213 = t1206 + t1208 + t1211;
  t1269 = t288*t1267;
  t1282 = -1.*t456*t1280;
  t1284 = t1269 + t1282;
  t1350 = t334*t1348;
  t1365 = t360*t1363;
  t1366 = t1350 + t1365;
  t1380 = t360*t1348;
  t1389 = -1.*t334*t1363;
  t1393 = t1380 + t1389;
  t1313 = -1.6e-11*t92*t116;
  t1321 = -1.*t78*t116;
  t1328 = t1313 + t1321 + t740;
  t1376 = -1.*t456*t1366;
  t1394 = t288*t1393;
  t1395 = t1376 + t1394;
  t1494 = -1.*t334*t1490;
  t1517 = t360*t1516;
  t1524 = t1494 + t1517;
  t1534 = t360*t1490;
  t1538 = t334*t1516;
  t1541 = t1534 + t1538;
  t1427 = 1.000000000016*t116*t364;
  t1441 = 1.6000000000256e-11*t92*t561;
  t1444 = t1427 + t1441 + t1211;
  t1533 = t288*t1524;
  t1543 = -1.*t456*t1541;
  t1545 = t1533 + t1543;
  t1686 = t456*t627;
  t1687 = t288*t661;
  t1697 = t1686 + t1687;
  t1736 = t288*t806;
  t1737 = t456*t819;
  t1739 = t1736 + t1737;
  t1656 = t456*t450;
  t1661 = t288*t508;
  t1672 = t1656 + t1661;
  t2291 = t1675*t1672;
  t2294 = -1.*t1653*t539;
  t2295 = t2291 + t2294;
  t2266 = t1675*t1697;
  t2269 = -1.*t1653*t684;
  t2274 = t2266 + t2269;
  t2281 = t1675*t1739;
  t2282 = -1.*t1653*t850;
  t2286 = t2281 + t2282;
  t1767 = -1.*t266*t282;
  t1768 = -1.*t63*t526;
  t1772 = t1767 + t1768;
  t1787 = -1.*t282*t567;
  t1796 = -1.*t63*t664;
  t1802 = t1787 + t1796;
  t1817 = -1.*t282*t747;
  t1818 = -1.*t63*t822;
  t1823 = t1817 + t1818;
  t1927 = t456*t946;
  t1931 = t453 + t1927;
  t1956 = t456*t970;
  t1958 = t628 + t1956;
  t1980 = t456*t995;
  t1981 = t1980 + t821;
  t2008 = t288*t1052;
  t2012 = t456*t1076;
  t2016 = t2008 + t2012;
  t2038 = t63*t1017;
  t2048 = -1.*t282*t1088;
  t2049 = t2038 + t2048;
  t2073 = t288*t1149;
  t2075 = t456*t1176;
  t2080 = t2073 + t2075;
  t2086 = t63*t1110;
  t2087 = -1.*t282*t1180;
  t2099 = t2086 + t2087;
  t2112 = t456*t1267;
  t2120 = t288*t1280;
  t2128 = t2112 + t2120;
  t2136 = t63*t1213;
  t2137 = -1.*t282*t1284;
  t2141 = t2136 + t2137;
  t2159 = t288*t1366;
  t2160 = t456*t1393;
  t2164 = t2159 + t2160;
  t2169 = t63*t1328;
  t2170 = -1.*t282*t1395;
  t2186 = t2169 + t2170;
  t2203 = t456*t1524;
  t2205 = t288*t1541;
  t2212 = t2203 + t2205;
  t2221 = t63*t1444;
  t2225 = -1.*t282*t1545;
  t2226 = t2221 + t2225;
  t2773 = 5.136e-14*var1[8];
  t2778 = -0.03874900000062*t148;
  t2800 = 5.9484e-7*t167;
  t2819 = -0.03875*t116;
  t2821 = -0.299999999992*t561;
  t2838 = t2773 + t2778 + t2800 + t2819 + t2821;
  t2850 = -1.284e-8*var1[8];
  t2853 = 1. + t171;
  t2857 = 0.14871*t2853;
  t2861 = -1.5499600000248e-7*t148;
  t2867 = -1.55e-7*t167;
  t2869 = -1.199999999968e-6*t561;
  t2870 = t2850 + t2857 + t2861 + t2867 + t2869;
  t2883 = 0.80321*t556;
  t2890 = 0.503210000016051*t148;
  t2893 = -4.05159380016e-7*t561;
  t2915 = t2883 + t2890 + t2893;
  t2718 = -1.*t360;
  t2722 = 1. + t2718;
  t2729 = 0.15121*t2722;
  t2763 = 0.281210000008499*t606;
  t2771 = 0.03874900000062*t364;
  t2845 = t364*t2838;
  t2871 = 4.e-6*t364*t2870;
  t2920 = t609*t2915;
  t2921 = t2763 + t2771 + t2845 + t2871 + t2920;
  t2927 = -1.2484e-7*var1[7];
  t2934 = -1.5499600000248e-7*t606;
  t2938 = 1.124840000016e-6*t364;
  t2941 = 4.e-6*t92*t2838;
  t2948 = t303*t2870;
  t2949 = -4.e-6*t364*t2915;
  t2952 = t2927 + t2934 + t2938 + t2941 + t2948 + t2949;
  t1649 = t266*t282;
  t1650 = t63*t526;
  t1652 = t1649 + t1650;
  t2732 = -0.15121*t334;
  t2922 = t334*t2921;
  t2971 = t360*t2952;
  t2974 = t2729 + t2732 + t2922 + t2971;
  t2975 = -1.*t456*t2974;
  t2978 = 0.15121*t334;
  t2980 = t360*t2921;
  t2981 = -1.*t334*t2952;
  t2985 = t2729 + t2978 + t2980 + t2981;
  t2989 = t288*t2985;
  t2992 = t2975 + t2989;
  t2999 = -1.*t282*t2992;
  t3015 = 4.9936e-13*var1[7];
  t3050 = -0.03874900000062*t606;
  t3051 = 0.281210000004*t364;
  t3056 = t78*t2838;
  t3065 = 4.e-6*t92*t2870;
  t3069 = -1.*t364*t2915;
  t3082 = t3015 + t3050 + t3051 + t3056 + t3065 + t3069;
  t3085 = t63*t3082;
  t3107 = t2999 + t3085;
  t1613 = t282*t567;
  t1622 = t63*t664;
  t1640 = t1613 + t1622;
  t3190 = t63*t2992;
  t3202 = t282*t3082;
  t3208 = t3190 + t3202;
  t3234 = t288*t2974;
  t3237 = t456*t2985;
  t3242 = t3234 + t3237;
  t3130 = -1.*t63*t2992;
  t3135 = -1.*t282*t3082;
  t3142 = t3130 + t3135;
  t1645 = t282*t747;
  t1646 = t63*t822;
  t1648 = t1645 + t1646;
  t3246 = -1.*t1672*t3242;
  t3260 = -1.*t539*t3107;
  t3278 = -1.*t1652*t3208;
  t3281 = t3246 + t3260 + t3278;
  t3833 = -1.*t288*t2974;
  t3841 = -1.*t456*t2985;
  t3843 = t3833 + t3841;
  t3287 = t3242*t1697;
  t3289 = t3208*t1640;
  t3303 = t3107*t684;
  t3317 = t3287 + t3289 + t3303;
  t3419 = t1672*t3242;
  t3428 = t539*t3107;
  t3429 = t1652*t3208;
  t3439 = t3419 + t3428 + t3429;
  t3475 = -1.*t3242*t1739;
  t3477 = -1.*t3208*t1648;
  t3478 = -1.*t3107*t850;
  t3482 = t3475 + t3477 + t3478;
  t3593 = -1.*t3242*t1697;
  t3596 = -1.*t3208*t1640;
  t3601 = -1.*t3107*t684;
  t3602 = t3593 + t3596 + t3601;
  t3707 = t3242*t1739;
  t3708 = t3208*t1648;
  t3728 = t3107*t850;
  t3750 = t3707 + t3708 + t3728;
  t4179 = 0.15121*t360;
  t4184 = -1.*t334*t2921;
  t4189 = -1.*t360*t2952;
  t4198 = t4179 + t2978 + t4184 + t4189;
  t4201 = -0.15121*t360;
  t4202 = t4201 + t2978 + t2980 + t2981;
  t4220 = t288*t4198;
  t4221 = -1.*t456*t4202;
  t4230 = t4220 + t4221;
  t4199 = t456*t4198;
  t4204 = t288*t4202;
  t4207 = t4199 + t4204;
  t4523 = 1.124840000016e-6*t78;
  t4525 = -1.5499600000248e-7*t364;
  t4531 = -4.e-6*t364*t2838;
  t4533 = -1.6e-11*t364*t2870;
  t4536 = -4.e-6*t78*t2915;
  t4544 = -1.2484e-7 + t4523 + t4525 + t4531 + t4533 + t4536;
  t4550 = 0.03874900000062*t78;
  t4553 = 0.281210000008499*t364;
  t4560 = 4.e-6*t78*t2870;
  t4561 = -1.000000000016*t364*t2915;
  t4567 = t4550 + t4553 + t3056 + t4560 + t4561;
  t4545 = -1.*t334*t4544;
  t4571 = t360*t4567;
  t4572 = t4545 + t4571;
  t4574 = t360*t4544;
  t4576 = t334*t4567;
  t4577 = t4574 + t4576;
  t4604 = t288*t4572;
  t4605 = -1.*t456*t4577;
  t4606 = t4604 + t4605;
  t4612 = 0.281210000004*t78;
  t4614 = -0.03874900000062*t364;
  t4615 = -1.*t364*t2838;
  t4617 = -4.e-6*t364*t2870;
  t4623 = -1.*t78*t2915;
  t4627 = 4.9936e-13 + t4612 + t4614 + t4615 + t4617 + t4623;
  t1018 = t282*t1017;
  t1090 = t63*t1088;
  t1093 = t1018 + t1090;
  t1112 = t282*t1110;
  t1194 = t63*t1180;
  t1200 = t1112 + t1194;
  t4573 = t456*t4572;
  t4584 = t288*t4577;
  t4585 = t4573 + t4584;
  t4641 = t63*t4606;
  t4657 = t282*t4627;
  t4658 = t4641 + t4657;
  t4608 = -1.*t282*t4606;
  t4630 = t63*t4627;
  t4636 = t4608 + t4630;
  t1214 = t282*t1213;
  t1293 = t63*t1284;
  t1294 = t1214 + t1293;
  t4880 = -4.05159380016e-7*t116;
  t4881 = -0.2999999999968*t561;
  t4886 = t4880 + t4881;
  t4891 = -1.199999999968e-6*t116;
  t4896 = 1.620637520064e-12*t561;
  t4898 = -1.284e-8 + t4891 + t4896;
  t4907 = -0.299999999992*t116;
  t4912 = 4.05159380016e-7*t561;
  t4914 = 5.136e-14 + t4907 + t4912;
  t4890 = -4.e-6*t364*t4886;
  t4899 = t303*t4898;
  t4919 = 4.e-6*t92*t4914;
  t4921 = t4890 + t4899 + t4919;
  t4930 = t609*t4886;
  t4939 = 4.e-6*t364*t4898;
  t4943 = t364*t4914;
  t4952 = t4930 + t4939 + t4943;
  t4922 = -1.*t334*t4921;
  t4953 = t360*t4952;
  t4958 = t4922 + t4953;
  t4961 = t360*t4921;
  t4963 = t334*t4952;
  t4971 = t4961 + t4963;
  t4985 = t288*t4958;
  t4986 = -1.*t456*t4971;
  t4995 = t4985 + t4986;
  t5011 = -1.*t364*t4886;
  t5012 = 4.e-6*t92*t4898;
  t5017 = t78*t4914;
  t5018 = t5011 + t5012 + t5017;
  t1338 = t282*t1328;
  t1396 = t63*t1395;
  t1417 = t1338 + t1396;
  t4959 = t456*t4958;
  t4972 = t288*t4971;
  t4980 = t4959 + t4972;
  t5038 = t63*t4995;
  t5045 = t282*t5018;
  t5057 = t5038 + t5045;
  t5010 = -1.*t282*t4995;
  t5021 = t63*t5018;
  t5026 = t5010 + t5021;
  t1450 = t282*t1444;
  t1567 = t63*t1545;
  t1573 = t1450 + t1567;
  t3822 = -1.*t1672*t2992;
  t3846 = -1.*t526*t3242;
  t3894 = t2992*t1697;
  t3895 = t3242*t664;
  t3955 = t1672*t2992;
  t3961 = t526*t3242;
  t3973 = -1.*t3242*t822;
  t3993 = -1.*t2992*t1739;
  t4066 = -1.*t2992*t1697;
  t4070 = -1.*t3242*t664;
  t4128 = t3242*t822;
  t4134 = t2992*t1739;
  t5373 = -1.*t526*t2992;
  t5380 = -1.*t266*t3082;
  t5381 = t5373 + t3246 + t5380;
  t4175 = -1.*t1931*t3242;
  t4216 = -1.*t1672*t4207;
  t5386 = t3082*t567;
  t5387 = t2992*t664;
  t5389 = t5386 + t3287 + t5387;
  t4268 = t3242*t1958;
  t4271 = t4207*t1697;
  t5405 = t526*t2992;
  t5407 = t266*t3082;
  t5408 = t5405 + t3419 + t5407;
  t4324 = t1931*t3242;
  t4330 = t1672*t4207;
  t5440 = -1.*t3082*t747;
  t5442 = -1.*t2992*t822;
  t5443 = t5440 + t5442 + t3475;
  t4361 = -1.*t3242*t1981;
  t4369 = -1.*t4207*t1739;
  t5452 = -1.*t3082*t567;
  t5453 = -1.*t2992*t664;
  t5454 = t5452 + t3593 + t5453;
  t4429 = -1.*t3242*t1958;
  t4431 = -1.*t4207*t1697;
  t5483 = t3082*t747;
  t5484 = t2992*t822;
  t5485 = t5483 + t5484 + t3707;
  t4460 = t3242*t1981;
  t4473 = t4207*t1739;
  t4586 = -1.*t1672*t4585;
  t4592 = -1.*t2016*t3242;
  t4686 = t4585*t1697;
  t4691 = t3242*t2080;
  t4724 = t1672*t4585;
  t4730 = t2016*t3242;
  t4784 = -1.*t4585*t1739;
  t4787 = -1.*t3242*t2128;
  t4819 = -1.*t4585*t1697;
  t4820 = -1.*t3242*t2080;
  t4843 = t4585*t1739;
  t4846 = t3242*t2128;
  t4983 = -1.*t1672*t4980;
  t5071 = t4980*t1697;
  t5079 = t3242*t2164;
  t5116 = t1672*t4980;
  t5129 = -1.*t4980*t1739;
  t5149 = -1.*t3242*t2212;
  t5227 = -1.*t4980*t1697;
  t5241 = -1.*t3242*t2164;
  t5282 = t4980*t1739;
  t5288 = t3242*t2212;
  t5655 = -1.*t266*t4627;
  t5659 = -1.*t1017*t3082;
  t5669 = t4627*t567;
  t5675 = t3082*t1110;
  t5703 = t266*t4627;
  t5708 = t1017*t3082;
  t5722 = -1.*t3082*t1213;
  t5727 = -1.*t4627*t747;
  t5760 = -1.*t4627*t567;
  t5761 = -1.*t3082*t1110;
  t5790 = t3082*t1213;
  t5793 = t4627*t747;
  t5837 = -1.*t266*t5018;
  t6263 = -1.*t508*t2974;
  t6278 = -1.*t450*t2985;
  t6281 = t6263 + t6278 + t5380;
  t5847 = t5018*t567;
  t5848 = t3082*t1328;
  t6379 = t508*t2974;
  t6380 = t450*t2985;
  t6389 = t6379 + t6380 + t5407;
  t5911 = t266*t5018;
  t5925 = -1.*t3082*t1444;
  t5926 = -1.*t5018*t747;
  t6523 = -1.*t2985*t627;
  t6526 = -1.*t2974*t661;
  t6527 = t5452 + t6523 + t6526;
  t6568 = t2974*t806;
  t6574 = t2985*t819;
  t6580 = t5483 + t6568 + t6574;
  t5985 = -1.*t5018*t567;
  t5986 = -1.*t3082*t1328;
  t6002 = t3082*t1444;
  t6003 = t5018*t747;
  t6448 = -1.*t2974*t806;
  t6452 = -1.*t2985*t819;
  t6453 = t5440 + t6448 + t6452;
  t6292 = t2985*t627;
  t6293 = t2974*t661;
  t6302 = t5386 + t6292 + t6293;
  t6875 = -1.*t408*t2921;
  t6877 = -1.*t322*t2952;
  t6886 = t6875 + t5380 + t6877;
  t6968 = t408*t2921;
  t6973 = t322*t2952;
  t6974 = t6968 + t5407 + t6973;
  t7054 = -1.*t2952*t595;
  t7055 = -1.*t2921*t621;
  t7056 = t7054 + t5452 + t7055;
  t7080 = t2921*t770;
  t7081 = t2952*t789;
  t7084 = t7080 + t7081 + t5483;
  t7003 = -1.*t2921*t770;
  t7006 = -1.*t2952*t789;
  t7014 = t7003 + t7006 + t5440;
  t6905 = t2952*t595;
  t6915 = t2921*t621;
  t6928 = t6905 + t5386 + t6915;
  t7275 = t188*t4898;
  t7277 = t223*t4914;
  t7290 = t7275 + t7277;
  t7296 = t223*t2838;
  t7301 = t188*t2870;
  t7304 = t7296 + t7301;
  t7307 = 1.000000000016*t116*t2915;
  t7310 = -1.*t700*t4898;
  t7311 = -1.*t713*t4914;
  t7313 = 1.000000000016*t4886*t561;
  t7314 = -1.000000000016*t2838*t561;
  t7316 = -4.000000000064e-6*t2870*t561;
  t7317 = t7307 + t7310 + t7311 + t7313 + t7314 + t7316;
  t7340 = -1.*t223*t2838;
  t7342 = -1.*t188*t2870;
  t7345 = t7340 + t7342;
  t7352 = -1.*t188*t4898;
  t7359 = -1.*t223*t4914;
  t7360 = t7352 + t7359;
  t7364 = t556*t4886;
  t7365 = -1.*t116*t2838;
  t7371 = -4.e-6*t116*t2870;
  t7374 = -1.000000000016*t2915*t561;
  t7394 = -4.e-6*t4898*t561;
  t7406 = -1.*t4914*t561;
  t7408 = t7364 + t7365 + t7371 + t7374 + t7394 + t7406;
  t7465 = -1.*t556*t2915;
  t7466 = t2838*t561;
  t7472 = 4.e-6*t2870*t561;
  t7476 = t7465 + t7466 + t7472;
  t7481 = -1.000000000016*t116*t2915;
  t7487 = t700*t4898;
  t7496 = t713*t4914;
  t7509 = -1.000000000016*t4886*t561;
  t7515 = 1.000000000016*t2838*t561;
  t7516 = 4.000000000064e-6*t2870*t561;
  t7520 = t7481 + t7487 + t7496 + t7509 + t7515 + t7516;
  t7522 = t713*t2838;
  t7525 = t700*t2870;
  t7527 = t7522 + t7525 + t7374;
  t7544 = -1.*t556*t4886;
  t7549 = t116*t2838;
  t7558 = 4.e-6*t116*t2870;
  t7559 = 1.000000000016*t2915*t561;
  t7560 = 4.e-6*t4898*t561;
  t7563 = t4914*t561;
  t7568 = t7544 + t7549 + t7558 + t7559 + t7560 + t7563;
  t7638 = -1.*t713*t2838;
  t7642 = -1.*t700*t2870;
  t7644 = t7638 + t7642 + t7559;
  t7295 = -0.03874900000062*t561;
  t7697 = t556*t2915;
  t7709 = -1.*t2838*t561;
  t7711 = -4.e-6*t2870*t561;
  t7714 = t7697 + t7709 + t7711;
  p_output1[0]=t684*var2[0] + t850*var2[1] + t539*var2[2];
  p_output1[1]=t63*t900*var2[0] + t63*t917*var2[1] + t63*t879*var2[2];
  p_output1[2]=t63*t978*var2[0] + t1001*t63*var2[1] + t63*t952*var2[2];
  p_output1[3]=t1200*var2[0] + t1294*var2[1] + t1093*var2[2];
  p_output1[4]=t1417*var2[0] + t1573*var2[1];
  p_output1[5]=t1640;
  p_output1[6]=t1648;
  p_output1[7]=t1652;
  p_output1[8]=(-1.*t1653*t1697 - 1.*t1675*t684)*var2[0] + (-1.*t1653*t1739 - 1.*t1675*t850)*var2[1] + (-1.*t1653*t1672 - 1.*t1675*t539)*var2[2];
  p_output1[9]=-1.*t1653*t1802*var2[0] - 1.*t1653*t1823*var2[1] - 1.*t1653*t1772*var2[2];
  p_output1[10]=(t1675*t664 + t1653*t282*t900)*var2[0] + (t1675*t822 + t1653*t282*t917)*var2[1] + (t1675*t526 + t1653*t282*t879)*var2[2];
  p_output1[11]=(t1675*t1958 + t1653*t282*t978)*var2[0] + (t1675*t1981 + t1001*t1653*t282)*var2[1] + (t1675*t1931 + t1653*t282*t952)*var2[2];
  p_output1[12]=(t1675*t2080 - 1.*t1653*t2099)*var2[0] + (t1675*t2128 - 1.*t1653*t2141)*var2[1] + (t1675*t2016 - 1.*t1653*t2049)*var2[2];
  p_output1[13]=(t1675*t2164 - 1.*t1653*t2186)*var2[0] + (t1675*t2212 - 1.*t1653*t2226)*var2[1];
  p_output1[14]=t2274;
  p_output1[15]=t2286;
  p_output1[16]=t2295;
  p_output1[17]=t2274*var2[0] + t2286*var2[1] + t2295*var2[2];
  p_output1[18]=t1675*t1802*var2[0] + t1675*t1823*var2[1] + t1675*t1772*var2[2];
  p_output1[19]=(t1653*t664 - 1.*t1675*t282*t900)*var2[0] + (t1653*t822 - 1.*t1675*t282*t917)*var2[1] + (t1653*t526 - 1.*t1675*t282*t879)*var2[2];
  p_output1[20]=(t1653*t1958 - 1.*t1675*t282*t978)*var2[0] + (t1653*t1981 - 1.*t1001*t1675*t282)*var2[1] + (t1653*t1931 - 1.*t1675*t282*t952)*var2[2];
  p_output1[21]=(t1653*t2080 + t1675*t2099)*var2[0] + (t1653*t2128 + t1675*t2141)*var2[1] + (t1653*t2016 + t1675*t2049)*var2[2];
  p_output1[22]=(t1653*t2164 + t1675*t2186)*var2[0] + (t1653*t2212 + t1675*t2226)*var2[1];
  p_output1[23]=t1653*t1697 + t1675*t684;
  p_output1[24]=t1653*t1739 + t1675*t850;
  p_output1[25]=t1653*t1672 + t1675*t539;
  p_output1[26]=(t3482*t539 + t1648*(t1652*t3107 + t1772*t3107 + t3142*t539 + t3208*t539) + t3439*t850 + t1652*(-1.*t1648*t3107 - 1.*t1823*t3107 - 1.*t3142*t850 - 1.*t3208*t850))*var2[0] + (t3317*t539 + t1640*(-1.*t1652*t3107 - 1.*t1772*t3107 - 1.*t3142*t539 - 1.*t3208*t539) + t3281*t684 + t1652*(t1640*t3107 + t1802*t3107 + t3142*t684 + t3208*t684))*var2[1] + (t3750*t684 + t1648*(-1.*t1640*t3107 - 1.*t1802*t3107 - 1.*t3142*t684 - 1.*t3208*t684) + t3602*t850 + t1640*(t1648*t3107 + t1823*t3107 + t3142*t850 + t3208*t850))*var2[2];
  p_output1[27]=(t3482*t63*t879 + t1648*(t3955 + t3961 - 1.*t282*t3843*t539 + t1652*t3843*t63 - 1.*t282*t3107*t879 + t3208*t63*t879) + t3439*t63*t917 + t1652*(t3973 + t3993 - 1.*t1648*t3843*t63 + t282*t3843*t850 + t282*t3107*t917 - 1.*t3208*t63*t917))*var2[0] + (t3317*t63*t879 + t1640*(t3822 + t3846 + t282*t3843*t539 - 1.*t1652*t3843*t63 + t282*t3107*t879 - 1.*t3208*t63*t879) + t3281*t63*t900 + t1652*(t3894 + t3895 + t1640*t3843*t63 - 1.*t282*t3843*t684 - 1.*t282*t3107*t900 + t3208*t63*t900))*var2[1] + (t3750*t63*t900 + t1648*(t4066 + t4070 - 1.*t1640*t3843*t63 + t282*t3843*t684 + t282*t3107*t900 - 1.*t3208*t63*t900) + t3602*t63*t917 + t1640*(t4128 + t4134 + t1648*t3843*t63 - 1.*t282*t3843*t850 - 1.*t282*t3107*t917 + t3208*t63*t917))*var2[2];
  p_output1[28]=(t1001*t3439*t63 + t1652*(t1001*t282*t3107 + t4361 + t4369 - 1.*t1001*t3208*t63 - 1.*t1648*t4230*t63 + t282*t4230*t850) + t3482*t63*t952 + t1648*(t4324 + t4330 - 1.*t282*t4230*t539 + t1652*t4230*t63 - 1.*t282*t3107*t952 + t3208*t63*t952))*var2[0] + (t3317*t63*t952 + t1640*(t4175 + t4216 + t282*t4230*t539 - 1.*t1652*t4230*t63 + t282*t3107*t952 - 1.*t3208*t63*t952) + t3281*t63*t978 + t1652*(t4268 + t4271 + t1640*t4230*t63 - 1.*t282*t4230*t684 - 1.*t282*t3107*t978 + t3208*t63*t978))*var2[1] + (t1001*t3602*t63 + t1640*(-1.*t1001*t282*t3107 + t4460 + t4473 + t1001*t3208*t63 + t1648*t4230*t63 - 1.*t282*t4230*t850) + t3750*t63*t978 + t1648*(t4429 + t4431 - 1.*t1640*t4230*t63 + t282*t4230*t684 + t282*t3107*t978 - 1.*t3208*t63*t978))*var2[2];
  p_output1[29]=(t1294*t3439 + t1093*t3482 + t1648*(t2049*t3107 + t1093*t3208 + t1652*t4658 + t4724 + t4730 + t4636*t539) + t1652*(-1.*t2141*t3107 - 1.*t1294*t3208 - 1.*t1648*t4658 + t4784 + t4787 - 1.*t4636*t850))*var2[0] + (t1200*t3281 + t1093*t3317 + t1640*(-1.*t2049*t3107 - 1.*t1093*t3208 + t4586 + t4592 - 1.*t1652*t4658 - 1.*t4636*t539) + t1652*(t2099*t3107 + t1200*t3208 + t1640*t4658 + t4686 + t4691 + t4636*t684))*var2[1] + (t1294*t3602 + t1200*t3750 + t1648*(-1.*t2099*t3107 - 1.*t1200*t3208 - 1.*t1640*t4658 + t4819 + t4820 - 1.*t4636*t684) + t1640*(t2141*t3107 + t1294*t3208 + t1648*t4658 + t4843 + t4846 + t4636*t850))*var2[2];
  p_output1[30]=(t1573*t3439 + t1648*(t1652*t5057 + t5116 + t5026*t539) + t1652*(-1.*t2226*t3107 - 1.*t1573*t3208 - 1.*t1648*t5057 + t5129 + t5149 - 1.*t5026*t850))*var2[0] + (t1417*t3281 + t1640*(t4983 - 1.*t1652*t5057 - 1.*t5026*t539) + t1652*(t2186*t3107 + t1417*t3208 + t1640*t5057 + t5071 + t5079 + t5026*t684))*var2[1] + (t1573*t3602 + t1417*t3750 + t1648*(-1.*t2186*t3107 - 1.*t1417*t3208 - 1.*t1640*t5057 + t5227 + t5241 - 1.*t5026*t684) + t1640*(t2226*t3107 + t1573*t3208 + t1648*t5057 + t5282 + t5288 + t5026*t850))*var2[2];
  p_output1[31]=t1648*t3439 + t1652*t3482;
  p_output1[32]=t1640*t3281 + t1652*t3317;
  p_output1[33]=t1648*t3602 + t1640*t3750;
  p_output1[34]=(t526*t5443 + t5408*t822 + t1739*(t3955 + t3961 + t3843*t526 + t2992*t879) + t1672*(t3973 + t3993 - 1.*t3843*t822 - 1.*t2992*t917))*var2[0] + (t526*t5389 + t5381*t664 + t1697*(t3822 + t3846 - 1.*t3843*t526 - 1.*t2992*t879) + t1672*(t3894 + t3895 + t3843*t664 + t2992*t900))*var2[1] + (t5485*t664 + t5454*t822 + t1739*(t4066 + t4070 - 1.*t3843*t664 - 1.*t2992*t900) + t1697*(t4128 + t4134 + t3843*t822 + t2992*t917))*var2[2];
  p_output1[35]=(t1981*t5408 + t1931*t5443 + t1672*(-1.*t1001*t2992 + t4361 + t4369 - 1.*t4230*t822) + t1739*(t4324 + t4330 + t4230*t526 + t2992*t952))*var2[0] + (t1958*t5381 + t1931*t5389 + t1697*(t4175 + t4216 - 1.*t4230*t526 - 1.*t2992*t952) + t1672*(t4268 + t4271 + t4230*t664 + t2992*t978))*var2[1] + (t1981*t5454 + t1958*t5485 + t1697*(t1001*t2992 + t4460 + t4473 + t4230*t822) + t1739*(t4429 + t4431 - 1.*t4230*t664 - 1.*t2992*t978))*var2[2];
  p_output1[36]=(t2128*t5408 + t2016*t5443 + t1739*(t1088*t2992 + t4724 + t4730 + t4606*t526 + t5703 + t5708) + t1672*(-1.*t1284*t2992 + t4784 + t4787 + t5722 + t5727 - 1.*t4606*t822))*var2[0] + (t2080*t5381 + t2016*t5389 + t1697*(-1.*t1088*t2992 + t4586 + t4592 - 1.*t4606*t526 + t5655 + t5659) + t1672*(t1180*t2992 + t4686 + t4691 + t5669 + t5675 + t4606*t664))*var2[1] + (t2128*t5454 + t2080*t5485 + t1739*(-1.*t1180*t2992 + t4819 + t4820 + t5760 + t5761 - 1.*t4606*t664) + t1697*(t1284*t2992 + t4843 + t4846 + t5790 + t5793 + t4606*t822))*var2[2];
  p_output1[37]=(t2212*t5408 + t1739*(t5116 + t4995*t526 + t5911) + t1672*(-1.*t1545*t2992 + t5129 + t5149 + t5925 + t5926 - 1.*t4995*t822))*var2[0] + (t2164*t5381 + t1697*(t4983 - 1.*t4995*t526 + t5837) + t1672*(t1395*t2992 + t5071 + t5079 + t5847 + t5848 + t4995*t664))*var2[1] + (t2212*t5454 + t2164*t5485 + t1739*(-1.*t1395*t2992 + t5227 + t5241 + t5985 + t5986 - 1.*t4995*t664) + t1697*(t1545*t2992 + t5282 + t5288 + t6002 + t6003 + t4995*t822))*var2[2];
  p_output1[38]=t1739*t5408 + t1672*t5443;
  p_output1[39]=t1697*t5381 + t1672*t5389;
  p_output1[40]=t1739*t5454 + t1697*t5485;
  p_output1[41]=(t747*(t2974*t450 + t4198*t450 + t4202*t508 + t2985*t946) + t266*(-1.*t4202*t806 - 1.*t2974*t819 - 1.*t4198*t819 - 1.*t2985*t995))*var2[0] + (t567*(-1.*t2974*t450 - 1.*t4198*t450 - 1.*t4202*t508 - 1.*t2985*t946) + t266*(t2974*t627 + t4198*t627 + t4202*t661 + t2985*t970))*var2[1] + (t747*(-1.*t2974*t627 - 1.*t4198*t627 - 1.*t4202*t661 - 1.*t2985*t970) + t567*(t4202*t806 + t2974*t819 + t4198*t819 + t2985*t995))*var2[2];
  p_output1[42]=(t1213*t6389 + t1017*t6453 + (t1052*t2974 + t1076*t2985 + t450*t4572 + t4577*t508 + t5703 + t5708)*t747 + t266*(-1.*t1280*t2974 - 1.*t1267*t2985 + t5722 + t5727 - 1.*t4577*t806 - 1.*t4572*t819))*var2[0] + ((-1.*t1052*t2974 - 1.*t1076*t2985 - 1.*t450*t4572 - 1.*t4577*t508 + t5655 + t5659)*t567 + t1110*t6281 + t1017*t6302 + t266*(t1149*t2974 + t1176*t2985 + t5669 + t5675 + t4572*t627 + t4577*t661))*var2[1] + (t1213*t6527 + t1110*t6580 + (-1.*t1149*t2974 - 1.*t1176*t2985 + t5760 + t5761 - 1.*t4572*t627 - 1.*t4577*t661)*t747 + t567*(t1280*t2974 + t1267*t2985 + t5790 + t5793 + t4577*t806 + t4572*t819))*var2[2];
  p_output1[43]=(t1444*t6389 + (t450*t4958 + t4971*t508 + t5911)*t747 + t266*(-1.*t1541*t2974 - 1.*t1524*t2985 + t5925 + t5926 - 1.*t4971*t806 - 1.*t4958*t819))*var2[0] + (t567*(-1.*t450*t4958 - 1.*t4971*t508 + t5837) + t1328*t6281 + t266*(t1366*t2974 + t1393*t2985 + t5847 + t5848 + t4958*t627 + t4971*t661))*var2[1] + (t1444*t6527 + t1328*t6580 + (-1.*t1366*t2974 - 1.*t1393*t2985 + t5985 + t5986 - 1.*t4958*t627 - 1.*t4971*t661)*t747 + t567*(t1541*t2974 + t1524*t2985 + t6002 + t6003 + t4971*t806 + t4958*t819))*var2[2];
  p_output1[44]=t266*t6453 + t6389*t747;
  p_output1[45]=t567*t6281 + t266*t6302;
  p_output1[46]=t567*t6580 + t6527*t747;
  p_output1[47]=(0.15121*t1119 - 0.15121*t1139 + t1213*t6974 + t1017*t7014 + (t1021*t2921 + t1046*t2952 + t322*t4544 + t408*t4567 + t5703 + t5708)*t747 + t266*(-1.*t1255*t2921 - 1.*t1240*t2952 + t5722 + t5727 - 1.*t4567*t770 - 1.*t4544*t789))*var2[0] + (-0.15121*t1240 + 0.15121*t1255 + (-1.*t1021*t2921 - 1.*t1046*t2952 - 1.*t322*t4544 - 1.*t408*t4567 + t5655 + t5659)*t567 + t266*(t1119*t2921 + t1139*t2952 + t5669 + t5675 + t4544*t595 + t4567*t621) + t1110*t6886 + t1017*t6928)*var2[1] + (0.15121*t1021 - 0.15121*t1046 + t1213*t7056 + t1110*t7084 + (-1.*t1119*t2921 - 1.*t1139*t2952 + t5760 + t5761 - 1.*t4544*t595 - 1.*t4567*t621)*t747 + t567*(t1255*t2921 + t1240*t2952 + t5790 + t5793 + t4567*t770 + t4544*t789))*var2[2];
  p_output1[48]=(0.15121*t1348 - 0.15121*t1363 + t1444*t6974 + (t322*t4921 + t408*t4952 + t5911)*t747 + t266*(-1.*t1516*t2921 - 1.*t1490*t2952 + t5925 + t5926 - 1.*t4952*t770 - 1.*t4921*t789))*var2[0] + (-0.15121*t1490 + 0.15121*t1516 + t567*(-1.*t322*t4921 - 1.*t408*t4952 + t5837) + t266*(t1348*t2921 + t1363*t2952 + t5847 + t5848 + t4921*t595 + t4952*t621) + t1328*t6886)*var2[1] + (t1444*t7056 + t1328*t7084 + (-1.*t1348*t2921 - 1.*t1363*t2952 - 1.*t4921*t595 + t5985 + t5986 - 1.*t4952*t621)*t747 + t567*(t1516*t2921 + t1490*t2952 + t6002 + t6003 + t4952*t770 + t4921*t789))*var2[2];
  p_output1[49]=-0.15121*t595 + 0.15121*t621 + t266*t7014 + t6974*t747;
  p_output1[50]=t567*t6886 + t266*t6928 + 0.15121*t770 - 0.15121*t789;
  p_output1[51]=-0.15121*t322 + 0.15121*t408 + t567*t7084 + t7056*t747;
  p_output1[52]=(-0.281210000004*t116 + t700*t7290 + t7295 + 4.000000000064e-6*t561*t7304 + t188*t7317 + 4.e-6*(-1.*t713*t7290 - 1.000000000016*t561*t7304 - 1.*t223*t7317))*var2[0] + (-0.03874900000062*t116 + 0.281210000008499*t561 - 4.e-6*t116*t7345 - 4.e-6*t561*t7360 + t188*t7408 + 4.e-6*(t116*t7345 + t561*t7360 - 1.*t223*t7408))*var2[1] + (4.000000000064e-6*t561*t7476 - 4.e-6*t561*t7520 - 4.e-6*t116*t7527 + t700*t7568 + 4.e-6*(-1.000000000016*t561*t7476 + t561*t7520 + t116*t7527 - 1.*t713*t7568))*var2[2];
  p_output1[53]=0.038749*t556 - 0.281210000004*t561 + t700*t7304 + t188*t7644 + 4.e-6*(-1.*t713*t7304 - 1.*t223*t7644);
  p_output1[54]=1.e-6*t700 + 0.28121*t713 + t7295 - 4.e-6*t561*t7345 + t188*t7714 + 4.e-6*(t561*t7345 - 1.*t223*t7714);
  p_output1[55]=1.e-6*t188 + 0.28121*t223 + t700*t7476 - 4.e-6*t561*t7527 + 4.e-6*(-1.*t713*t7476 + t561*t7527);
  p_output1[56]=-4.05160619990483e-7;
  p_output1[57]=0.300000000004851;
  p_output1[58]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFlFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fFlFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
