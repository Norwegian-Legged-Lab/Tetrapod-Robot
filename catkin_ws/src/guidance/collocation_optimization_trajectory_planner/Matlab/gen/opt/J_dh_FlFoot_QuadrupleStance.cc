/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:11 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t876;
  double t997;
  double t1158;
  double t490;
  double t523;
  double t550;
  double t568;
  double t661;
  double t726;
  double t1334;
  double t849;
  double t1102;
  double t1153;
  double t1172;
  double t1177;
  double t1318;
  double t463;
  double t1335;
  double t1342;
  double t1543;
  double t1603;
  double t1611;
  double t1689;
  double t1753;
  double t2086;
  double t1326;
  double t1974;
  double t2049;
  double t414;
  double t2154;
  double t2323;
  double t2744;
  double t3760;
  double t2064;
  double t2970;
  double t2973;
  double t151;
  double t3900;
  double t3903;
  double t3908;
  double t4094;
  double t4162;
  double t4558;
  double t4607;
  double t4637;
  double t4652;
  double t4715;
  double t4723;
  double t4725;
  double t5014;
  double t5111;
  double t5119;
  double t5166;
  double t5164;
  double t5175;
  double t5439;
  double t5459;
  double t5485;
  double t5510;
  double t5669;
  double t5728;
  double t5755;
  double t5823;
  double t5839;
  double t5847;
  double t6105;
  double t6107;
  double t6120;
  double t6127;
  double t6217;
  double t6248;
  double t6263;
  double t6264;
  double t6271;
  double t6278;
  double t6292;
  double t6341;
  double t6348;
  double t6377;
  double t6378;
  double t6386;
  double t6403;
  double t6029;
  double t6041;
  double t6085;
  double t6100;
  double t6103;
  double t6249;
  double t6365;
  double t6441;
  double t6448;
  double t6457;
  double t6490;
  double t6491;
  double t6492;
  double t6496;
  double t6499;
  double t6500;
  double t5458;
  double t5546;
  double t5643;
  double t5817;
  double t5848;
  double t5863;
  double t5888;
  double t5935;
  double t5939;
  double t5941;
  double t5954;
  double t5955;
  double t6092;
  double t6456;
  double t6501;
  double t6515;
  double t6519;
  double t6523;
  double t6528;
  double t6531;
  double t6532;
  double t6535;
  double t6536;
  double t6539;
  double t6560;
  double t6561;
  double t6588;
  double t6597;
  double t6611;
  double t6612;
  double t6622;
  double t6631;
  double t6632;
  double t6666;
  double t6667;
  double t6672;
  double t6695;
  double t6697;
  double t6705;
  double t6707;
  double t6721;
  double t6755;
  double t6756;
  double t6758;
  double t6759;
  double t6761;
  double t6762;
  double t6763;
  double t6764;
  double t6641;
  double t6650;
  double t6657;
  double t6687;
  double t6688;
  double t6689;
  double t6709;
  double t6751;
  double t6752;
  double t6753;
  double t6760;
  double t6769;
  double t6775;
  double t6777;
  double t6778;
  double t6779;
  double t6780;
  double t6781;
  double t6783;
  double t6800;
  double t6806;
  double t6808;
  double t6754;
  double t6784;
  double t6789;
  double t6826;
  double t6827;
  double t6829;
  double t6673;
  double t6679;
  double t6685;
  double t6936;
  double t6948;
  double t6952;
  double t6792;
  double t6793;
  double t6797;
  double t6810;
  double t6840;
  double t6841;
  double t6847;
  double t7090;
  double t7098;
  double t7100;
  double t6848;
  double t6814;
  double t6817;
  double t6824;
  double t7122;
  double t7127;
  double t7129;
  double t7082;
  double t7107;
  double t7061;
  double t7065;
  double t7069;
  double t7121;
  double t7141;
  double t6850;
  double t6851;
  double t6852;
  double t7303;
  double t7309;
  double t7317;
  double t7320;
  double t7321;
  double t7357;
  double t7365;
  double t7439;
  double t7463;
  double t7402;
  double t7405;
  double t7409;
  double t7410;
  double t7047;
  double t7056;
  double t7058;
  double t7496;
  double t7502;
  double t7503;
  double t7418;
  double t7421;
  double t7423;
  double t7540;
  double t7542;
  double t7147;
  double t7154;
  double t7156;
  double t7521;
  double t7522;
  double t7552;
  double t7555;
  double t7556;
  double t7545;
  double t7547;
  double t7548;
  double t7569;
  double t7570;
  double t7543;
  double t7551;
  double t7534;
  double t7536;
  double t7563;
  double t7575;
  double t7742;
  double t7743;
  double t7749;
  double t7716;
  double t7726;
  double t7729;
  double t7731;
  double t7732;
  double t7649;
  double t7654;
  double t7655;
  double t7656;
  double t7706;
  double t7707;
  double t7708;
  double t7709;
  double t7711;
  double t7712;
  double t7685;
  double t7688;
  double t7689;
  double t7692;
  double t7693;
  double t7694;
  double t7624;
  double t7629;
  double t7637;
  double t7659;
  double t7674;
  double t7678;
  double t7680;
  double t7753;
  double t7756;
  double t7758;
  double t7704;
  double t7752;
  double t7790;
  double t7799;
  double t7878;
  double t7882;
  double t7883;
  double t7868;
  double t7869;
  double t7872;
  double t7780;
  double t7781;
  double t7784;
  double t7788;
  double t7800;
  double t7802;
  double t7803;
  double t7829;
  double t7830;
  double t7833;
  double t7836;
  double t7837;
  double t7839;
  double t7822;
  double t7824;
  double t7835;
  double t7842;
  double t7844;
  double t7932;
  double t7933;
  double t7934;
  double t7938;
  double t7939;
  double t7940;
  double t7888;
  double t7892;
  double t7893;
  double t7897;
  double t7898;
  double t7899;
  double t7917;
  double t7918;
  double t7919;
  double t7922;
  double t7923;
  double t7924;
  double t7973;
  double t7974;
  double t7975;
  double t7959;
  double t7960;
  double t7963;
  double t7955;
  double t7956;
  double t7957;
  double t7979;
  double t7980;
  double t7981;
  double t7958;
  double t7976;
  double t7965;
  double t7967;
  double t7971;
  double t7992;
  double t7994;
  double t7995;
  double t8016;
  double t8017;
  double t8018;
  double t7985;
  double t7986;
  double t8006;
  double t8007;
  double t8008;
  double t8001;
  double t8002;
  double t8003;
  double t8025;
  double t8026;
  double t8027;
  double t7644;
  double t7647;
  double t7648;
  double t8058;
  double t8059;
  double t8060;
  double t8062;
  double t8063;
  double t8064;
  double t8067;
  double t8068;
  double t8069;
  double t8080;
  double t8082;
  double t8084;
  double t8085;
  double t8050;
  double t8051;
  double t8052;
  double t8061;
  double t8066;
  double t8070;
  double t8071;
  double t8073;
  double t8074;
  double t8075;
  double t8077;
  double t8116;
  double t8117;
  double t8118;
  double t8123;
  double t8124;
  double t8128;
  double t8130;
  double t8132;
  double t8135;
  double t8137;
  double t8138;
  double t8139;
  double t8140;
  double t8047;
  double t8048;
  double t8054;
  double t8055;
  double t8056;
  double t7856;
  double t7858;
  double t7860;
  double t8079;
  double t8097;
  double t8099;
  double t8181;
  double t8182;
  double t8183;
  double t8176;
  double t8177;
  double t8178;
  double t8090;
  double t8091;
  double t8092;
  double t8093;
  double t8102;
  double t8104;
  double t8157;
  double t8160;
  double t8161;
  double t8163;
  double t8164;
  double t8165;
  double t8151;
  double t8154;
  double t8155;
  double t8162;
  double t8166;
  double t8169;
  double t8207;
  double t8208;
  double t8209;
  double t8211;
  double t8212;
  double t8213;
  double t8193;
  double t8195;
  double t8196;
  double t8198;
  double t8199;
  double t8200;
  double t8226;
  double t8227;
  double t8228;
  double t8221;
  double t8222;
  double t8223;
  double t8233;
  double t8234;
  double t8236;
  double t8224;
  double t8248;
  double t8250;
  double t8255;
  double t8246;
  double t8247;
  double t8266;
  double t8267;
  double t8268;
  double t8261;
  double t8262;
  double t8263;
  double t8275;
  double t8276;
  double t8278;
  double t4852;
  double t4935;
  double t4945;
  double t7906;
  double t7909;
  double t7910;
  double t7767;
  double t7769;
  double t7775;
  double t8350;
  double t8351;
  double t8353;
  double t8354;
  double t6860;
  double t6863;
  double t6867;
  double t5664;
  double t5957;
  double t5963;
  double t8307;
  double t8308;
  double t8309;
  double t8381;
  double t8386;
  double t8382;
  double t8383;
  double t8384;
  double t8412;
  double t8414;
  double t8426;
  double t8429;
  double t8389;
  double t8390;
  double t8391;
  double t8417;
  double t8418;
  double t8419;
  double t8421;
  double t8422;
  double t8423;
  double t8488;
  double t8489;
  double t8498;
  double t8499;
  double t8524;
  double t8527;
  double t8544;
  double t8547;
  double t8036;
  double t8037;
  double t8038;
  double t8575;
  double t8578;
  double t8010;
  double t8012;
  double t8014;
  double t7828;
  double t7846;
  double t7852;
  double t8583;
  double t8586;
  double t8533;
  double t8534;
  double t8535;
  double t8662;
  double t8663;
  double t8664;
  double t8667;
  double t8668;
  double t8669;
  double t8671;
  double t8672;
  double t8673;
  double t8674;
  double t8675;
  double t8676;
  double t8677;
  double t8632;
  double t8558;
  double t8559;
  double t8560;
  double t8641;
  double t8644;
  double t8287;
  double t8288;
  double t8289;
  double t8714;
  double t8156;
  double t8170;
  double t8171;
  double t8719;
  double t8722;
  double t8367;
  double t8368;
  double t8369;
  double t8562;
  double t8563;
  double t8564;
  double t8538;
  double t8539;
  double t8540;
  double t8122;
  double t8773;
  double t8774;
  double t8775;
  double t8776;
  double t8797;
  double t8809;
  double t8837;
  double t8839;
  double t8798;
  double t8799;
  double t8800;
  double t8843;
  double t8845;
  double t8810;
  double t8811;
  double t8812;
  double t8832;
  double t8833;
  double t8834;
  double t8848;
  double t8849;
  double t8850;
  double t8896;
  double t8897;
  double t8902;
  double t8905;
  double t8946;
  double t8949;
  double t8958;
  double t8960;
  double t8990;
  double t8994;
  double t8999;
  double t9000;
  double t8940;
  double t8941;
  double t8942;
  double t8952;
  double t8953;
  double t8954;
  double t9047;
  double t9048;
  double t9049;
  double t9050;
  double t9052;
  double t9053;
  double t9054;
  double t9055;
  double t9056;
  double t9057;
  double t9058;
  double t9060;
  double t9061;
  double t9062;
  double t9064;
  double t9065;
  double t9066;
  double t9067;
  double t9068;
  double t9069;
  double t8966;
  double t8967;
  double t8968;
  double t8976;
  double t8977;
  double t8978;
  double t9030;
  double t9033;
  double t9039;
  double t9041;
  double t9097;
  double t9100;
  double t9104;
  double t9105;
  double t8788;
  double t8789;
  double t8790;
  t876 = Cos(var1[7]);
  t997 = -1. + t876;
  t1158 = Sin(var1[8]);
  t490 = Cos(var1[8]);
  t523 = -1.*t490;
  t550 = 1. + t523;
  t568 = -1.000000000016*t550;
  t661 = 1. + t568;
  t726 = Sin(var1[7]);
  t1334 = Cos(var1[6]);
  t849 = -4.e-6*t661*t726;
  t1102 = 1.6e-11*t997;
  t1153 = 1. + t1102;
  t1172 = -4.e-6*t1153*t1158;
  t1177 = -4.e-6*t997*t1158;
  t1318 = t849 + t1172 + t1177;
  t463 = Sin(var1[6]);
  t1335 = -1.*t876;
  t1342 = 1. + t1335;
  t1543 = -1.000000000016*t1342;
  t1603 = 1. + t1543;
  t1611 = t1603*t661;
  t1689 = -1.000000000016*t726*t1158;
  t1753 = t1611 + t1689;
  t2086 = Cos(var1[5]);
  t1326 = -1.*t463*t1318;
  t1974 = t1334*t1753;
  t2049 = t1326 + t1974;
  t414 = Sin(var1[5]);
  t2154 = t1334*t1318;
  t2323 = t463*t1753;
  t2744 = t2154 + t2323;
  t3760 = Cos(var1[3]);
  t2064 = t414*t2049;
  t2970 = t2086*t2744;
  t2973 = t2064 + t2970;
  t151 = Sin(var1[3]);
  t3900 = Cos(var1[4]);
  t3903 = -1.*t661*t726;
  t3908 = -1.6e-11*t997*t1158;
  t4094 = -1.*t876*t1158;
  t4162 = t3903 + t3908 + t4094;
  t4558 = t3900*t4162;
  t4607 = Sin(var1[4]);
  t4637 = t2086*t2049;
  t4652 = -1.*t414*t2744;
  t4715 = t4637 + t4652;
  t4723 = -1.*t4607*t4715;
  t4725 = t4558 + t4723;
  t5014 = -1.*t4607*t4162;
  t5111 = -1.*t3900*t4715;
  t5119 = t5014 + t5111;
  t5166 = -1. + t490;
  t5164 = 1.6e-11*t550;
  t5175 = 1.6e-11*t5166;
  t5439 = 1. + t5164 + t5175;
  t5459 = 4.e-6*t5166;
  t5485 = -4.e-6*t490;
  t5510 = t5459 + t5485;
  t5669 = t1153*t5439;
  t5728 = 4.e-6*t997*t5510;
  t5755 = t5669 + t5728;
  t5823 = 4.e-6*t5439*t726;
  t5839 = t5510*t726;
  t5847 = t5823 + t5839;
  t6105 = 5.136e-14*var1[8];
  t6107 = -0.03874900000062*t550;
  t6120 = 5.9484e-7*t5166;
  t6127 = -0.03875*t490;
  t6217 = -0.299999999992*t1158;
  t6248 = t6105 + t6107 + t6120 + t6127 + t6217;
  t6263 = -1.284e-8*var1[8];
  t6264 = 1. + t5175;
  t6271 = 0.14871*t6264;
  t6278 = -1.5499600000248e-7*t550;
  t6292 = -1.55e-7*t5166;
  t6341 = -1.199999999968e-6*t1158;
  t6348 = t6263 + t6271 + t6278 + t6292 + t6341;
  t6377 = 0.80321*t661;
  t6378 = 0.503210000016051*t550;
  t6386 = -4.05159380016e-7*t1158;
  t6403 = t6377 + t6378 + t6386;
  t6029 = -1.*t1334;
  t6041 = 1. + t6029;
  t6085 = 0.15121*t6041;
  t6100 = 0.281210000008499*t1342;
  t6103 = 0.03874900000062*t726;
  t6249 = t726*t6248;
  t6365 = 4.e-6*t726*t6348;
  t6441 = t1603*t6403;
  t6448 = t6100 + t6103 + t6249 + t6365 + t6441;
  t6457 = -1.2484e-7*var1[7];
  t6490 = -1.5499600000248e-7*t1342;
  t6491 = 1.124840000016e-6*t726;
  t6492 = 4.e-6*t997*t6248;
  t6496 = t1153*t6348;
  t6499 = -4.e-6*t726*t6403;
  t6500 = t6457 + t6490 + t6491 + t6492 + t6496 + t6499;
  t5458 = 4.e-6*t997*t5439;
  t5546 = t876*t5510;
  t5643 = t5458 + t5546;
  t5817 = -1.*t5755*t463;
  t5848 = t1334*t5847;
  t5863 = t5817 + t5848;
  t5888 = t2086*t5863;
  t5935 = t1334*t5755;
  t5939 = t463*t5847;
  t5941 = t5935 + t5939;
  t5954 = -1.*t414*t5941;
  t5955 = t5888 + t5954;
  t6092 = -0.15121*t463;
  t6456 = t463*t6448;
  t6501 = t1334*t6500;
  t6515 = t6085 + t6092 + t6456 + t6501;
  t6519 = -1.*t414*t6515;
  t6523 = 0.15121*t463;
  t6528 = t1334*t6448;
  t6531 = -1.*t463*t6500;
  t6532 = t6085 + t6523 + t6528 + t6531;
  t6535 = t2086*t6532;
  t6536 = t6519 + t6535;
  t6539 = -1.*t4607*t6536;
  t6560 = 4.9936e-13*var1[7];
  t6561 = -0.03874900000062*t1342;
  t6588 = 0.281210000004*t726;
  t6597 = t876*t6248;
  t6611 = 4.e-6*t997*t6348;
  t6612 = -1.*t726*t6403;
  t6622 = t6560 + t6561 + t6588 + t6597 + t6611 + t6612;
  t6631 = t3900*t6622;
  t6632 = t6539 + t6631;
  t6666 = t3900*t5643;
  t6667 = -1.*t4607*t5955;
  t6672 = t6666 + t6667;
  t6695 = -1. + t5164;
  t6697 = 4.e-6*t6695;
  t6705 = 4.e-6*t550;
  t6707 = t6697 + t6705;
  t6721 = t5164 + t523;
  t6755 = 4.e-6*t6707*t726;
  t6756 = t6721*t726;
  t6758 = -1.000000000016*t1603*t1158;
  t6759 = t6755 + t6756 + t6758;
  t6761 = t1153*t6707;
  t6762 = 4.e-6*t997*t6721;
  t6763 = 4.000000000064e-6*t726*t1158;
  t6764 = t6761 + t6762 + t6763;
  t6641 = t5643*t4607;
  t6650 = t3900*t5955;
  t6657 = t6641 + t6650;
  t6687 = t3900*t6536;
  t6688 = t4607*t6622;
  t6689 = t6687 + t6688;
  t6709 = 4.e-6*t997*t6707;
  t6751 = t876*t6721;
  t6752 = 1.000000000016*t726*t1158;
  t6753 = t6709 + t6751 + t6752;
  t6760 = t463*t6759;
  t6769 = t1334*t6764;
  t6775 = t6760 + t6769;
  t6777 = -1.*t414*t6775;
  t6778 = t1334*t6759;
  t6779 = -1.*t463*t6764;
  t6780 = t6778 + t6779;
  t6781 = t2086*t6780;
  t6783 = t6777 + t6781;
  t6800 = t2086*t6515;
  t6806 = t414*t6532;
  t6808 = t6800 + t6806;
  t6754 = t4607*t6753;
  t6784 = t3900*t6783;
  t6789 = t6754 + t6784;
  t6826 = t3900*t6753;
  t6827 = -1.*t4607*t6783;
  t6829 = t6826 + t6827;
  t6673 = -1.*t3900*t6536;
  t6679 = -1.*t4607*t6622;
  t6685 = t6673 + t6679;
  t6936 = -1.*t414*t2049;
  t6948 = -1.*t2086*t2744;
  t6952 = t6936 + t6948;
  t6792 = t414*t5863;
  t6793 = t2086*t5941;
  t6797 = t6792 + t6793;
  t6810 = t6797*t6808;
  t6840 = t2086*t6775;
  t6841 = t414*t6780;
  t6847 = t6840 + t6841;
  t7090 = -1.*t2086*t6515;
  t7098 = -1.*t414*t6532;
  t7100 = t7090 + t7098;
  t6848 = -1.*t6808*t6847;
  t6814 = t6672*t6632;
  t6817 = t6657*t6689;
  t6824 = t6810 + t6814 + t6817;
  t7122 = -1.*t2086*t6775;
  t7127 = -1.*t414*t6780;
  t7129 = t7122 + t7127;
  t7082 = t6797*t6536;
  t7107 = t5955*t6808;
  t7061 = -1.*t414*t5863;
  t7065 = -1.*t2086*t5941;
  t7069 = t7061 + t7065;
  t7121 = -1.*t6808*t6783;
  t7141 = -1.*t6536*t6847;
  t6850 = -1.*t6689*t6789;
  t6851 = -1.*t6632*t6829;
  t6852 = t6848 + t6850 + t6851;
  t7303 = -1.*t1334*t1318;
  t7309 = -1.*t463*t1753;
  t7317 = t7303 + t7309;
  t7320 = t2086*t7317;
  t7321 = t6936 + t7320;
  t7357 = t414*t7317;
  t7365 = t4637 + t7357;
  t7439 = -0.15121*t1334;
  t7463 = t7439 + t6523 + t6528 + t6531;
  t7402 = 0.15121*t1334;
  t7405 = -1.*t463*t6448;
  t7409 = -1.*t1334*t6500;
  t7410 = t7402 + t6523 + t7405 + t7409;
  t7047 = t5955*t6536;
  t7056 = t5643*t6622;
  t7058 = t7047 + t6810 + t7056;
  t7496 = -1.*t463*t6759;
  t7502 = -1.*t1334*t6764;
  t7503 = t7496 + t7502;
  t7418 = -1.*t1334*t5755;
  t7421 = -1.*t463*t5847;
  t7423 = t7418 + t7421;
  t7540 = t414*t7423;
  t7542 = t5888 + t7540;
  t7147 = -1.*t6622*t6753;
  t7154 = -1.*t6536*t6783;
  t7156 = t7147 + t7154 + t6848;
  t7521 = t414*t7503;
  t7522 = t7521 + t6781;
  t7552 = t2086*t7410;
  t7555 = -1.*t414*t7463;
  t7556 = t7552 + t7555;
  t7545 = t414*t7410;
  t7547 = t2086*t7463;
  t7548 = t7545 + t7547;
  t7569 = t2086*t7503;
  t7570 = t7569 + t7127;
  t7543 = t7542*t6808;
  t7551 = t6797*t7548;
  t7534 = t2086*t7423;
  t7536 = t7061 + t7534;
  t7563 = -1.*t6808*t7522;
  t7575 = -1.*t7548*t6847;
  t7742 = -4.e-6*t5439*t726;
  t7743 = -1.*t5510*t726;
  t7749 = t7742 + t7743;
  t7716 = 0.03874900000062*t876;
  t7726 = 0.281210000008499*t726;
  t7729 = 4.e-6*t876*t6348;
  t7731 = -1.000000000016*t726*t6403;
  t7732 = t7716 + t7726 + t6597 + t7729 + t7731;
  t7649 = -4.e-6*t6707*t726;
  t7654 = -1.*t6721*t726;
  t7655 = 1.000000000016*t876*t1158;
  t7656 = t7649 + t7654 + t7655;
  t7706 = 1.124840000016e-6*t876;
  t7707 = -1.5499600000248e-7*t726;
  t7708 = -4.e-6*t726*t6248;
  t7709 = -1.6e-11*t726*t6348;
  t7711 = -4.e-6*t876*t6403;
  t7712 = -1.2484e-7 + t7706 + t7707 + t7708 + t7709 + t7711;
  t7685 = 0.281210000004*t876;
  t7688 = -0.03874900000062*t726;
  t7689 = -1.*t726*t6248;
  t7692 = -4.e-6*t726*t6348;
  t7693 = -1.*t876*t6403;
  t7694 = 4.9936e-13 + t7685 + t7688 + t7689 + t7692 + t7693;
  t7624 = -1.000000000016*t661*t726;
  t7629 = -1.000000000016*t876*t1158;
  t7637 = t7624 + t7629;
  t7659 = -4.e-6*t876*t661;
  t7674 = t7659 + t6763;
  t7678 = 4.e-6*t876*t5439;
  t7680 = t7678 + t5546;
  t7753 = -1.6e-11*t5439*t726;
  t7756 = -4.e-6*t5510*t726;
  t7758 = t7753 + t7756;
  t7704 = t5643*t7694;
  t7752 = t7749*t6622;
  t7790 = -1.*t6622*t7656;
  t7799 = -1.*t7694*t6753;
  t7878 = t1334*t7712;
  t7882 = t463*t7732;
  t7883 = t7878 + t7882;
  t7868 = -1.*t463*t7712;
  t7869 = t1334*t7732;
  t7872 = t7868 + t7869;
  t7780 = -1.6e-11*t6707*t726;
  t7781 = -4.e-6*t6721*t726;
  t7784 = 4.000000000064e-6*t876*t1158;
  t7788 = t7780 + t7781 + t7784;
  t7800 = 4.e-6*t876*t6707;
  t7802 = 1.000000000032*t726*t1158;
  t7803 = t7800 + t6751 + t7802;
  t7829 = t463*t7637;
  t7830 = t1334*t7674;
  t7833 = t7829 + t7830;
  t7836 = t1334*t7637;
  t7837 = -1.*t463*t7674;
  t7839 = t7836 + t7837;
  t7822 = -1.*t876*t661;
  t7824 = t7822 + t6752;
  t7835 = -1.*t414*t7833;
  t7842 = t2086*t7839;
  t7844 = t7835 + t7842;
  t7932 = t2086*t7833;
  t7933 = t414*t7839;
  t7934 = t7932 + t7933;
  t7938 = t3900*t7824;
  t7939 = -1.*t4607*t7844;
  t7940 = t7938 + t7939;
  t7888 = t7680*t463;
  t7892 = t1334*t7758;
  t7893 = t7888 + t7892;
  t7897 = t1334*t7680;
  t7898 = -1.*t463*t7758;
  t7899 = t7897 + t7898;
  t7917 = -1.*t463*t7788;
  t7918 = t1334*t7803;
  t7919 = t7917 + t7918;
  t7922 = t1334*t7788;
  t7923 = t463*t7803;
  t7924 = t7922 + t7923;
  t7973 = t2086*t7893;
  t7974 = t414*t7899;
  t7975 = t7973 + t7974;
  t7959 = t2086*t7872;
  t7960 = -1.*t414*t7883;
  t7963 = t7959 + t7960;
  t7955 = t414*t7872;
  t7956 = t2086*t7883;
  t7957 = t7955 + t7956;
  t7979 = t414*t7919;
  t7980 = t2086*t7924;
  t7981 = t7979 + t7980;
  t7958 = t6797*t7957;
  t7976 = t7975*t6808;
  t7965 = -1.*t414*t7893;
  t7967 = t2086*t7899;
  t7971 = t7965 + t7967;
  t7992 = t2086*t7919;
  t7994 = -1.*t414*t7924;
  t7995 = t7992 + t7994;
  t8016 = t4607*t7749;
  t8017 = t3900*t7971;
  t8018 = t8016 + t8017;
  t7985 = -1.*t7957*t6847;
  t7986 = -1.*t6808*t7981;
  t8006 = t3900*t7963;
  t8007 = t4607*t7694;
  t8008 = t8006 + t8007;
  t8001 = -1.*t4607*t7963;
  t8002 = t3900*t7694;
  t8003 = t8001 + t8002;
  t8025 = t4607*t7656;
  t8026 = t3900*t7995;
  t8027 = t8025 + t8026;
  t7644 = t5847*t6448;
  t7647 = t5755*t6500;
  t7648 = t7644 + t7056 + t7647;
  t8058 = -4.05159380016e-7*t490;
  t8059 = -0.2999999999968*t1158;
  t8060 = t8058 + t8059;
  t8062 = -1.199999999968e-6*t490;
  t8063 = 1.620637520064e-12*t1158;
  t8064 = -1.284e-8 + t8062 + t8063;
  t8067 = -0.299999999992*t490;
  t8068 = 4.05159380016e-7*t1158;
  t8069 = 5.136e-14 + t8067 + t8068;
  t8080 = t1603*t8060;
  t8082 = 4.e-6*t726*t8064;
  t8084 = t726*t8069;
  t8085 = t8080 + t8082 + t8084;
  t8050 = 1.000000000016*t490*t726;
  t8051 = 1.6000000000256e-11*t997*t1158;
  t8052 = t8050 + t8051 + t7655;
  t8061 = -4.e-6*t726*t8060;
  t8066 = t1153*t8064;
  t8070 = 4.e-6*t997*t8069;
  t8071 = t8061 + t8066 + t8070;
  t8073 = -1.*t726*t8060;
  t8074 = 4.e-6*t997*t8064;
  t8075 = t876*t8069;
  t8077 = t8073 + t8074 + t8075;
  t8116 = t5439*t8064;
  t8117 = t5510*t8069;
  t8118 = t8116 + t8117;
  t8123 = t5510*t6248;
  t8124 = t5439*t6348;
  t8128 = t8123 + t8124;
  t8130 = 1.000000000016*t490*t6403;
  t8132 = -1.*t6707*t8064;
  t8135 = -1.*t6721*t8069;
  t8137 = 1.000000000016*t8060*t1158;
  t8138 = -1.000000000016*t6248*t1158;
  t8139 = -4.000000000064e-6*t6348*t1158;
  t8140 = t8130 + t8132 + t8135 + t8137 + t8138 + t8139;
  t8047 = -1.000000000016*t490*t726;
  t8048 = t8047 + t6758;
  t8054 = -4.e-6*t1153*t490;
  t8055 = -4.e-6*t997*t490;
  t8056 = t8054 + t8055 + t6763;
  t7856 = t5941*t6515;
  t7858 = t5863*t6532;
  t7860 = t7856 + t7858 + t7056;
  t8079 = t5643*t8077;
  t8097 = -1.*t6622*t8052;
  t8099 = -1.*t8077*t6753;
  t8181 = t1334*t8071;
  t8182 = t463*t8085;
  t8183 = t8181 + t8182;
  t8176 = -1.*t463*t8071;
  t8177 = t1334*t8085;
  t8178 = t8176 + t8177;
  t8090 = 4.000000000064e-6*t490*t726;
  t8091 = 4.000000000064e-6*t1153*t1158;
  t8092 = 4.000000000064e-6*t997*t1158;
  t8093 = t8090 + t8091 + t8092;
  t8102 = -1.000000000016*t1603*t490;
  t8104 = t8102 + t7802;
  t8157 = t463*t8048;
  t8160 = t1334*t8056;
  t8161 = t8157 + t8160;
  t8163 = t1334*t8048;
  t8164 = -1.*t463*t8056;
  t8165 = t8163 + t8164;
  t8151 = -1.6e-11*t997*t490;
  t8154 = -1.*t876*t490;
  t8155 = t8151 + t8154 + t6752;
  t8162 = -1.*t414*t8161;
  t8166 = t2086*t8165;
  t8169 = t8162 + t8166;
  t8207 = t2086*t8161;
  t8208 = t414*t8165;
  t8209 = t8207 + t8208;
  t8211 = t3900*t8155;
  t8212 = -1.*t4607*t8169;
  t8213 = t8211 + t8212;
  t8193 = -1.*t463*t8093;
  t8195 = t1334*t8104;
  t8196 = t8193 + t8195;
  t8198 = t1334*t8093;
  t8199 = t463*t8104;
  t8200 = t8198 + t8199;
  t8226 = t2086*t8178;
  t8227 = -1.*t414*t8183;
  t8228 = t8226 + t8227;
  t8221 = t414*t8178;
  t8222 = t2086*t8183;
  t8223 = t8221 + t8222;
  t8233 = t414*t8196;
  t8234 = t2086*t8200;
  t8236 = t8233 + t8234;
  t8224 = t6797*t8223;
  t8248 = t2086*t8196;
  t8250 = -1.*t414*t8200;
  t8255 = t8248 + t8250;
  t8246 = -1.*t8223*t6847;
  t8247 = -1.*t6808*t8236;
  t8266 = t3900*t8228;
  t8267 = t4607*t8077;
  t8268 = t8266 + t8267;
  t8261 = -1.*t4607*t8228;
  t8262 = t3900*t8077;
  t8263 = t8261 + t8262;
  t8275 = t4607*t8052;
  t8276 = t3900*t8255;
  t8278 = t8275 + t8276;
  t4852 = t3760*t2973;
  t4935 = -1.*t151*t4725;
  t4945 = t4852 + t4935;
  t7906 = -1.*t6515*t6775;
  t7909 = -1.*t6532*t6780;
  t7910 = t7147 + t7906 + t7909;
  t7767 = -1.*t6448*t6759;
  t7769 = -1.*t6500*t6764;
  t7775 = t7767 + t7769 + t7147;
  t8350 = -1.*t6721*t6248;
  t8351 = -1.*t6707*t6348;
  t8353 = 1.000000000016*t6403*t1158;
  t8354 = t8350 + t8351 + t8353;
  t6860 = -1.*t4607*t6753;
  t6863 = -1.*t3900*t6783;
  t6867 = t6860 + t6863;
  t5664 = -1.*t5643*t4607;
  t5957 = -1.*t3900*t5955;
  t5963 = t5664 + t5957;
  t8307 = t4607*t4162;
  t8308 = t3900*t4715;
  t8309 = t8307 + t8308;
  t8381 = -1.*t6797*t6808;
  t8386 = t6808*t2973;
  t8382 = -1.*t6672*t6632;
  t8383 = -1.*t6657*t6689;
  t8384 = t8381 + t8382 + t8383;
  t8412 = -1.*t6797*t6536;
  t8414 = -1.*t5955*t6808;
  t8426 = t6536*t2973;
  t8429 = t6808*t4715;
  t8389 = t6689*t8309;
  t8390 = t6632*t4725;
  t8391 = t8386 + t8389 + t8390;
  t8417 = -1.*t5955*t6536;
  t8418 = -1.*t5643*t6622;
  t8419 = t8417 + t8381 + t8418;
  t8421 = t6622*t4162;
  t8422 = t6536*t4715;
  t8423 = t8421 + t8386 + t8422;
  t8488 = -1.*t7542*t6808;
  t8489 = -1.*t6797*t7548;
  t8498 = t6808*t7365;
  t8499 = t7548*t2973;
  t8524 = -1.*t5643*t7694;
  t8527 = -1.*t7749*t6622;
  t8544 = t7694*t4162;
  t8547 = t6622*t7824;
  t8036 = t3900*t7656;
  t8037 = -1.*t4607*t7995;
  t8038 = t8036 + t8037;
  t8575 = -1.*t6797*t7957;
  t8578 = -1.*t7975*t6808;
  t8010 = t3900*t7749;
  t8012 = -1.*t4607*t7971;
  t8014 = t8010 + t8012;
  t7828 = t4607*t7824;
  t7846 = t3900*t7844;
  t7852 = t7828 + t7846;
  t8583 = t7957*t2973;
  t8586 = t6808*t7934;
  t8533 = -1.*t5847*t6448;
  t8534 = -1.*t5755*t6500;
  t8535 = t8533 + t8418 + t8534;
  t8662 = -1.*t5510*t6248;
  t8663 = -1.*t5439*t6348;
  t8664 = t8662 + t8663;
  t8667 = -1.*t5439*t8064;
  t8668 = -1.*t5510*t8069;
  t8669 = t8667 + t8668;
  t8671 = t661*t8060;
  t8672 = -1.*t490*t6248;
  t8673 = -4.e-6*t490*t6348;
  t8674 = -1.000000000016*t6403*t1158;
  t8675 = -4.e-6*t8064*t1158;
  t8676 = -1.*t8069*t1158;
  t8677 = t8671 + t8672 + t8673 + t8674 + t8675 + t8676;
  t8632 = -1.*t5643*t8077;
  t8558 = -1.*t5941*t6515;
  t8559 = -1.*t5863*t6532;
  t8560 = t8558 + t8559 + t8418;
  t8641 = t8077*t4162;
  t8644 = t6622*t8155;
  t8287 = t3900*t8052;
  t8288 = -1.*t4607*t8255;
  t8289 = t8287 + t8288;
  t8714 = -1.*t6797*t8223;
  t8156 = t4607*t8155;
  t8170 = t3900*t8169;
  t8171 = t8156 + t8170;
  t8719 = t8223*t2973;
  t8722 = t6808*t8209;
  t8367 = t3760*t6847;
  t8368 = -1.*t151*t6829;
  t8369 = t8367 + t8368;
  t8562 = t6532*t2049;
  t8563 = t6515*t2744;
  t8564 = t8421 + t8562 + t8563;
  t8538 = t6500*t1318;
  t8539 = t6448*t1753;
  t8540 = t8538 + t8421 + t8539;
  t8122 = -0.03874900000062*t1158;
  t8773 = t661*t6403;
  t8774 = -1.*t6248*t1158;
  t8775 = -4.e-6*t6348*t1158;
  t8776 = t8773 + t8774 + t8775;
  t8797 = -1.*t6808*t2973;
  t8809 = t6808*t6847;
  t8837 = -1.*t6536*t2973;
  t8839 = -1.*t6808*t4715;
  t8798 = -1.*t6689*t8309;
  t8799 = -1.*t6632*t4725;
  t8800 = t8797 + t8798 + t8799;
  t8843 = t6808*t6783;
  t8845 = t6536*t6847;
  t8810 = t6689*t6789;
  t8811 = t6632*t6829;
  t8812 = t8809 + t8810 + t8811;
  t8832 = -1.*t6622*t4162;
  t8833 = -1.*t6536*t4715;
  t8834 = t8832 + t8797 + t8833;
  t8848 = t6622*t6753;
  t8849 = t6536*t6783;
  t8850 = t8848 + t8849 + t8809;
  t8896 = -1.*t6808*t7365;
  t8897 = -1.*t7548*t2973;
  t8902 = t6808*t7522;
  t8905 = t7548*t6847;
  t8946 = -1.*t7694*t4162;
  t8949 = -1.*t6622*t7824;
  t8958 = t6622*t7656;
  t8960 = t7694*t6753;
  t8990 = -1.*t7957*t2973;
  t8994 = -1.*t6808*t7934;
  t8999 = t7957*t6847;
  t9000 = t6808*t7981;
  t8940 = -1.*t6500*t1318;
  t8941 = -1.*t6448*t1753;
  t8942 = t8940 + t8832 + t8941;
  t8952 = t6448*t6759;
  t8953 = t6500*t6764;
  t8954 = t8952 + t8953 + t8848;
  t9047 = -1.*t661*t6403;
  t9048 = t6248*t1158;
  t9049 = 4.e-6*t6348*t1158;
  t9050 = t9047 + t9048 + t9049;
  t9052 = -1.000000000016*t490*t6403;
  t9053 = t6707*t8064;
  t9054 = t6721*t8069;
  t9055 = -1.000000000016*t8060*t1158;
  t9056 = 1.000000000016*t6248*t1158;
  t9057 = 4.000000000064e-6*t6348*t1158;
  t9058 = t9052 + t9053 + t9054 + t9055 + t9056 + t9057;
  t9060 = t6721*t6248;
  t9061 = t6707*t6348;
  t9062 = t9060 + t9061 + t8674;
  t9064 = -1.*t661*t8060;
  t9065 = t490*t6248;
  t9066 = 4.e-6*t490*t6348;
  t9067 = 4.e-6*t8064*t1158;
  t9068 = t8069*t1158;
  t9069 = t9064 + t9065 + t9066 + t8353 + t9067 + t9068;
  t8966 = -1.*t6532*t2049;
  t8967 = -1.*t6515*t2744;
  t8968 = t8832 + t8966 + t8967;
  t8976 = t6515*t6775;
  t8977 = t6532*t6780;
  t8978 = t8848 + t8976 + t8977;
  t9030 = -1.*t8077*t4162;
  t9033 = -1.*t6622*t8155;
  t9039 = t6622*t8052;
  t9041 = t8077*t6753;
  t9097 = -1.*t8223*t2973;
  t9100 = -1.*t6808*t8209;
  t9104 = t8223*t6847;
  t9105 = t6808*t8236;
  t8788 = t3760*t6797;
  t8789 = -1.*t151*t6672;
  t8790 = t8788 + t8789;
  p_output1[0]=(-1.*t151*t2973 - 1.*t3760*t4725)*var2[1] + t4945*var2[2];
  p_output1[1]=t4725*var2[0] - 1.*t151*t5119*var2[1] + t3760*t5119*var2[2] + ((t5963*t6632 + t6632*t6657 + t6672*t6685 + t6672*t6689)*t6789 + t6824*t6829 + t6672*t6852 + t6657*(-1.*t6632*t6789 - 1.*t6685*t6829 - 1.*t6689*t6829 - 1.*t6632*t6867))*var2[3];
  p_output1[2]=t3900*t6952*var2[0] + (t3760*t4715 + t151*t4607*t6952)*var2[1] + (t151*t4715 - 1.*t3760*t4607*t6952)*var2[2] + (t3900*t6852*t7069 + t6789*(-1.*t4607*t6632*t7069 + t3900*t6689*t7069 + t7082 + t3900*t6657*t7100 - 1.*t4607*t6672*t7100 + t7107) + t3900*t6824*t7129 + t6657*(-1.*t3900*t6789*t7100 + t4607*t6829*t7100 + t7121 + t4607*t6632*t7129 - 1.*t3900*t6689*t7129 + t7141))*var2[3] + (t6783*t7058 + t6847*(t6536*t7069 + t7082 + t5955*t7100 + t7107) + t6797*(-1.*t6783*t7100 + t7121 - 1.*t6536*t7129 + t7141) + t5955*t7156)*var2[4];
  p_output1[3]=t3900*t7321*var2[0] + (t151*t4607*t7321 + t3760*t7365)*var2[1] + (-1.*t3760*t4607*t7321 + t151*t7365)*var2[2] + (t3900*t6852*t7536 + t6789*(-1.*t4607*t6632*t7536 + t3900*t6689*t7536 + t7543 + t7551 + t3900*t6657*t7556 - 1.*t4607*t6672*t7556) + t3900*t6824*t7570 + t6657*(-1.*t3900*t6789*t7556 + t4607*t6829*t7556 + t7563 + t4607*t6632*t7570 - 1.*t3900*t6689*t7570 + t7575))*var2[3] + (t7058*t7522 + t7156*t7542 + t6847*(t6536*t7536 + t7543 + t7551 + t5955*t7556) + t6797*(-1.*t6783*t7556 + t7563 - 1.*t6536*t7570 + t7575))*var2[4] + (t6753*(t5863*t6515 + t5863*t7410 + t6532*t7423 + t5941*t7463) + t5643*(-1.*t6515*t6780 - 1.*t6780*t7410 - 1.*t6775*t7463 - 1.*t6532*t7503))*var2[5];
  p_output1[4]=t7852*var2[0] + (t3760*t7934 - 1.*t151*t7940)*var2[1] + (t151*t7934 + t3760*t7940)*var2[2] + (t6852*t8018 + t6789*(t7958 + t7976 + t6672*t8003 + t6657*t8008 + t6632*t8014 + t6689*t8018) + t6824*t8027 + t6657*(t7985 + t7986 - 1.*t6829*t8003 - 1.*t6789*t8008 - 1.*t6689*t8027 - 1.*t6632*t8038))*var2[3] + (t7156*t7975 + t6847*(t7704 + t7752 + t7958 + t5955*t7963 + t6536*t7971 + t7976) + t7058*t7981 + t6797*(t7790 + t7799 - 1.*t6783*t7963 + t7985 + t7986 - 1.*t6536*t7995))*var2[4] + (t7656*t7860 + t6753*(t7704 + t7752 + t5863*t7872 + t5941*t7883 + t6515*t7893 + t6532*t7899) + t7749*t7910 + t5643*(t7790 + t7799 - 1.*t6780*t7872 - 1.*t6775*t7883 - 1.*t6532*t7919 - 1.*t6515*t7924))*var2[5] + (0.15121*t7637 + t7648*t7656 - 0.15121*t7674 + t6753*(t6448*t7680 + t7704 + t5755*t7712 + t5847*t7732 + t7752 + t6500*t7758) + t7749*t7775 + t5643*(-1.*t6764*t7712 - 1.*t6759*t7732 - 1.*t6500*t7788 + t7790 + t7799 - 1.*t6448*t7803))*var2[6];
  p_output1[5]=t8171*var2[0] + (t3760*t8209 - 1.*t151*t8213)*var2[1] + (t151*t8209 + t3760*t8213)*var2[2] + (t6789*(t8224 + t6672*t8263 + t6657*t8268) + t6824*t8278 + t6657*(t8246 + t8247 - 1.*t6829*t8263 - 1.*t6789*t8268 - 1.*t6689*t8278 - 1.*t6632*t8289))*var2[3] + (t6847*(t8079 + t8224 + t5955*t8228) + t7058*t8236 + t6797*(t8097 + t8099 - 1.*t6783*t8228 + t8246 + t8247 - 1.*t6536*t8255))*var2[4] + (t7860*t8052 + t6753*(t8079 + t5863*t8178 + t5941*t8183) + t5643*(t8097 + t8099 - 1.*t6780*t8178 - 1.*t6775*t8183 - 1.*t6532*t8196 - 1.*t6515*t8200))*var2[5] + (0.15121*t8048 + t7648*t8052 - 0.15121*t8056 + t6753*(t5755*t8071 + t8079 + t5847*t8085) + t5643*(-1.*t6764*t8071 - 1.*t6759*t8085 - 1.*t6500*t8093 + t8097 + t8099 - 1.*t6448*t8104))*var2[6] + (-0.281210000004*t490 + t6707*t8118 + t8122 + 4.000000000064e-6*t1158*t8128 + t5439*t8140 + 4.e-6*(-1.*t6721*t8118 - 1.000000000016*t1158*t8128 - 1.*t5510*t8140))*var2[7];
  p_output1[6]=t8309;
  p_output1[7]=t4945;
  p_output1[8]=t151*t2973 + t3760*t4725;
  p_output1[9]=t6789*t6824 + t6657*t6852;
  p_output1[10]=t6847*t7058 + t6797*t7156;
  p_output1[11]=t6753*t7860 + t5643*t7910;
  p_output1[12]=-0.15121*t1318 + 0.15121*t1753 + t6753*t7648 + t5643*t7775;
  p_output1[13]=-0.281210000004*t1158 + 0.038749*t661 + t6707*t8128 + t5439*t8354 + 4.e-6*(-1.*t6721*t8128 - 1.*t5510*t8354);
  p_output1[14]=-4.05160619990483e-7;
  p_output1[15]=(-1.*t3760*t6829 - 1.*t151*t6847)*var2[1] + t8369*var2[2];
  p_output1[16]=t6829*var2[0] - 1.*t151*t6867*var2[1] + t3760*t6867*var2[2] + ((-1.*t5963*t6632 - 1.*t6632*t6657 - 1.*t6672*t6685 - 1.*t6672*t6689)*t8309 + t6657*(t5119*t6632 + t4725*t6685 + t4725*t6689 + t6632*t8309) + t4725*t8384 + t6672*t8391)*var2[3];
  p_output1[17]=t3900*t7129*var2[0] + (t3760*t6783 + t151*t4607*t7129)*var2[1] + (t151*t6783 - 1.*t3760*t4607*t7129)*var2[2] + (t3900*t6952*t8384 + t3900*t7069*t8391 + t8309*(t4607*t6632*t7069 - 1.*t3900*t6689*t7069 - 1.*t3900*t6657*t7100 + t4607*t6672*t7100 + t8412 + t8414) + t6657*(-1.*t4607*t6632*t6952 + t3900*t6689*t6952 - 1.*t4607*t4725*t7100 + t3900*t7100*t8309 + t8426 + t8429))*var2[3] + (t2973*(-1.*t6536*t7069 - 1.*t5955*t7100 + t8412 + t8414) + t4715*t8419 + t5955*t8423 + t6797*(t6536*t6952 + t4715*t7100 + t8426 + t8429))*var2[4];
  p_output1[18]=t3900*t7570*var2[0] + (t3760*t7522 + t151*t4607*t7570)*var2[1] + (t151*t7522 - 1.*t3760*t4607*t7570)*var2[2] + (t3900*t7321*t8384 + t3900*t7536*t8391 + t8309*(t4607*t6632*t7536 - 1.*t3900*t6689*t7536 - 1.*t3900*t6657*t7556 + t4607*t6672*t7556 + t8488 + t8489) + t6657*(-1.*t4607*t6632*t7321 + t3900*t6689*t7321 - 1.*t4607*t4725*t7556 + t3900*t7556*t8309 + t8498 + t8499))*var2[3] + (t7365*t8419 + t7542*t8423 + t2973*(-1.*t6536*t7536 - 1.*t5955*t7556 + t8488 + t8489) + t6797*(t6536*t7321 + t4715*t7556 + t8498 + t8499))*var2[4] + (t5643*(t2049*t6515 + t6532*t7317 + t2049*t7410 + t2744*t7463) + t4162*(-1.*t5863*t6515 - 1.*t5863*t7410 - 1.*t6532*t7423 - 1.*t5941*t7463))*var2[5];
  p_output1[19]=t8027*var2[0] + (t3760*t7981 - 1.*t151*t8038)*var2[1] + (t151*t7981 + t3760*t8038)*var2[2] + (t7852*t8384 + t8018*t8391 + t8309*(-1.*t6672*t8003 - 1.*t6657*t8008 - 1.*t6632*t8014 - 1.*t6689*t8018 + t8575 + t8578) + t6657*(t6689*t7852 + t6632*t7940 + t4725*t8003 + t8008*t8309 + t8583 + t8586))*var2[3] + (t7934*t8419 + t7975*t8423 + t2973*(-1.*t5955*t7963 - 1.*t6536*t7971 + t8524 + t8527 + t8575 + t8578) + t6797*(t6536*t7844 + t4715*t7963 + t8544 + t8547 + t8583 + t8586))*var2[4] + (t4162*(-1.*t5863*t7872 - 1.*t5941*t7883 - 1.*t6515*t7893 - 1.*t6532*t7899 + t8524 + t8527) + t5643*(t6515*t7833 + t6532*t7839 + t2049*t7872 + t2744*t7883 + t8544 + t8547) + t7824*t8560 + t7749*t8564)*var2[5] + (-0.15121*t7788 + 0.15121*t7803 + t4162*(-1.*t6448*t7680 - 1.*t5755*t7712 - 1.*t5847*t7732 - 1.*t6500*t7758 + t8524 + t8527) + t7824*t8535 + t7749*t8540 + t5643*(t6448*t7637 + t6500*t7674 + t1318*t7712 + t1753*t7732 + t8544 + t8547))*var2[6];
  p_output1[20]=t8278*var2[0] + (t3760*t8236 - 1.*t151*t8289)*var2[1] + (t151*t8236 + t3760*t8289)*var2[2] + (t8171*t8384 + t8309*(-1.*t6672*t8263 - 1.*t6657*t8268 + t8714) + t6657*(t6689*t8171 + t6632*t8213 + t4725*t8263 + t8268*t8309 + t8719 + t8722))*var2[3] + (t8209*t8419 + t2973*(-1.*t5955*t8228 + t8632 + t8714) + t6797*(t6536*t8169 + t4715*t8228 + t8641 + t8644 + t8719 + t8722))*var2[4] + (t8155*t8560 + t4162*(-1.*t5863*t8178 - 1.*t5941*t8183 + t8632) + t5643*(t6515*t8161 + t6532*t8165 + t2049*t8178 + t2744*t8183 + t8641 + t8644))*var2[5] + (-0.15121*t8093 + 0.15121*t8104 + t8155*t8535 + t4162*(-1.*t5755*t8071 - 1.*t5847*t8085 + t8632) + t5643*(t6448*t8048 + t6500*t8056 + t1318*t8071 + t1753*t8085 + t8641 + t8644))*var2[6] + (0.281210000008499*t1158 - 0.03874900000062*t490 - 4.e-6*t490*t8664 - 4.e-6*t1158*t8669 + t5439*t8677 + 4.e-6*(t490*t8664 + t1158*t8669 - 1.*t5510*t8677))*var2[7];
  p_output1[21]=t6789;
  p_output1[22]=t8369;
  p_output1[23]=t3760*t6829 + t151*t6847;
  p_output1[24]=t8309*t8384 + t6657*t8391;
  p_output1[25]=t2973*t8419 + t6797*t8423;
  p_output1[26]=t4162*t8560 + t5643*t8564;
  p_output1[27]=0.15121*t6759 - 0.15121*t6764 + t4162*t8535 + t5643*t8540;
  p_output1[28]=1.e-6*t6707 + 0.28121*t6721 + t8122 - 4.e-6*t1158*t8664 + t5439*t8776 + 4.e-6*(t1158*t8664 - 1.*t5510*t8776);
  p_output1[29]=0.300000000004851;
  p_output1[30]=(-1.*t3760*t6672 - 1.*t151*t6797)*var2[1] + t8790*var2[2];
  p_output1[31]=t6672*var2[0] - 1.*t151*t5963*var2[1] + t3760*t5963*var2[2] + ((t6632*t6789 + t6685*t6829 + t6689*t6829 + t6632*t6867)*t8309 + t6789*(-1.*t5119*t6632 - 1.*t4725*t6685 - 1.*t4725*t6689 - 1.*t6632*t8309) + t6829*t8800 + t4725*t8812)*var2[3];
  p_output1[32]=t3900*t7069*var2[0] + (t3760*t5955 + t151*t4607*t7069)*var2[1] + (t151*t5955 - 1.*t3760*t4607*t7069)*var2[2] + (t3900*t7129*t8800 + t3900*t6952*t8812 + t6789*(t4607*t6632*t6952 - 1.*t3900*t6689*t6952 + t4607*t4725*t7100 - 1.*t3900*t7100*t8309 + t8837 + t8839) + t8309*(t3900*t6789*t7100 - 1.*t4607*t6829*t7100 - 1.*t4607*t6632*t7129 + t3900*t6689*t7129 + t8843 + t8845))*var2[3] + (t6783*t8834 + t6847*(-1.*t6536*t6952 - 1.*t4715*t7100 + t8837 + t8839) + t2973*(t6783*t7100 + t6536*t7129 + t8843 + t8845) + t4715*t8850)*var2[4];
  p_output1[33]=t3900*t7536*var2[0] + (t151*t4607*t7536 + t3760*t7542)*var2[1] + (-1.*t3760*t4607*t7536 + t151*t7542)*var2[2] + (t3900*t7570*t8800 + t3900*t7321*t8812 + t6789*(t4607*t6632*t7321 - 1.*t3900*t6689*t7321 + t4607*t4725*t7556 - 1.*t3900*t7556*t8309 + t8896 + t8897) + t8309*(t3900*t6789*t7556 - 1.*t4607*t6829*t7556 - 1.*t4607*t6632*t7570 + t3900*t6689*t7570 + t8902 + t8905))*var2[3] + (t7522*t8834 + t7365*t8850 + t6847*(-1.*t6536*t7321 - 1.*t4715*t7556 + t8896 + t8897) + t2973*(t6783*t7556 + t6536*t7570 + t8902 + t8905))*var2[4] + (t6753*(-1.*t2049*t6515 - 1.*t6532*t7317 - 1.*t2049*t7410 - 1.*t2744*t7463) + t4162*(t6515*t6780 + t6780*t7410 + t6775*t7463 + t6532*t7503))*var2[5];
  p_output1[34]=t8018*var2[0] + (t3760*t7975 - 1.*t151*t8014)*var2[1] + (t151*t7975 + t3760*t8014)*var2[2] + (t8027*t8800 + t7852*t8812 + t6789*(-1.*t6689*t7852 - 1.*t6632*t7940 - 1.*t4725*t8003 - 1.*t8008*t8309 + t8990 + t8994) + t8309*(t6829*t8003 + t6789*t8008 + t6689*t8027 + t6632*t8038 + t8999 + t9000))*var2[3] + (t7981*t8834 + t7934*t8850 + t6847*(-1.*t6536*t7844 - 1.*t4715*t7963 + t8946 + t8949 + t8990 + t8994) + t2973*(t6783*t7963 + t6536*t7995 + t8958 + t8960 + t8999 + t9000))*var2[4] + (t6753*(-1.*t6515*t7833 - 1.*t6532*t7839 - 1.*t2049*t7872 - 1.*t2744*t7883 + t8946 + t8949) + t4162*(t6780*t7872 + t6775*t7883 + t6532*t7919 + t6515*t7924 + t8958 + t8960) + t7656*t8968 + t7824*t8978)*var2[5] + (0.15121*t7680 - 0.15121*t7758 + t7656*t8942 + t6753*(-1.*t6448*t7637 - 1.*t6500*t7674 - 1.*t1318*t7712 - 1.*t1753*t7732 + t8946 + t8949) + t7824*t8954 + t4162*(t6764*t7712 + t6759*t7732 + t6500*t7788 + t6448*t7803 + t8958 + t8960))*var2[6];
  p_output1[35]=(t8278*t8800 + t8171*t8812 + t6789*(-1.*t6689*t8171 - 1.*t6632*t8213 - 1.*t4725*t8263 - 1.*t8268*t8309 + t9097 + t9100) + t8309*(t6829*t8263 + t6789*t8268 + t6689*t8278 + t6632*t8289 + t9104 + t9105))*var2[3] + (t8236*t8834 + t8209*t8850 + t6847*(-1.*t6536*t8169 - 1.*t4715*t8228 + t9030 + t9033 + t9097 + t9100) + t2973*(t6783*t8228 + t6536*t8255 + t9039 + t9041 + t9104 + t9105))*var2[4] + (t8052*t8968 + t8155*t8978 + t6753*(-1.*t6515*t8161 - 1.*t6532*t8165 - 1.*t2049*t8178 - 1.*t2744*t8183 + t9030 + t9033) + t4162*(t6780*t8178 + t6775*t8183 + t6532*t8196 + t6515*t8200 + t9039 + t9041))*var2[5] + (t8052*t8942 + t8155*t8954 + t6753*(-1.*t6448*t8048 - 1.*t6500*t8056 - 1.*t1318*t8071 - 1.*t1753*t8085 + t9030 + t9033) + t4162*(t6764*t8071 + t6759*t8085 + t6500*t8093 + t6448*t8104 + t9039 + t9041))*var2[6] + (4.000000000064e-6*t1158*t9050 - 4.e-6*t1158*t9058 - 4.e-6*t490*t9062 + t6707*t9069 + 4.e-6*(-1.000000000016*t1158*t9050 + t1158*t9058 + t490*t9062 - 1.*t6721*t9069))*var2[7];
  p_output1[36]=t6657;
  p_output1[37]=t8790;
  p_output1[38]=t3760*t6672 + t151*t6797;
  p_output1[39]=t6789*t8800 + t8309*t8812;
  p_output1[40]=t6847*t8834 + t2973*t8850;
  p_output1[41]=t6753*t8968 + t4162*t8978;
  p_output1[42]=-0.15121*t5755 + 0.15121*t5847 + t6753*t8942 + t4162*t8954;
  p_output1[43]=1.e-6*t5439 + 0.28121*t5510 + t6707*t9050 - 4.e-6*t1158*t9062 + 4.e-6*(-1.*t6721*t9050 + t1158*t9062);
  p_output1[44]=-1.284e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FlFoot_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_dh_FlFoot_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
