/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:16:41 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t64;
  double t80;
  double t108;
  double t118;
  double t149;
  double t165;
  double t73;
  double t245;
  double t328;
  double t332;
  double t335;
  double t337;
  double t399;
  double t427;
  double t309;
  double t313;
  double t318;
  double t359;
  double t360;
  double t365;
  double t468;
  double t470;
  double t477;
  double t479;
  double t432;
  double t435;
  double t444;
  double t445;
  double t446;
  double t455;
  double t570;
  double t517;
  double t521;
  double t531;
  double t535;
  double t483;
  double t484;
  double t486;
  double t489;
  double t490;
  double t493;
  double t185;
  double t213;
  double t251;
  double t266;
  double t320;
  double t336;
  double t348;
  double t355;
  double t366;
  double t381;
  double t391;
  double t679;
  double t719;
  double t720;
  double t762;
  double t764;
  double t776;
  double t463;
  double t478;
  double t480;
  double t481;
  double t494;
  double t495;
  double t502;
  double t548;
  double t552;
  double t555;
  double t558;
  double t634;
  double t638;
  double t791;
  double t796;
  double t798;
  double t780;
  double t786;
  double t788;
  double t804;
  double t814;
  double t816;
  double t578;
  double t587;
  double t727;
  double t777;
  double t790;
  double t803;
  double t818;
  double t820;
  double t823;
  double t826;
  double t827;
  double t837;
  double t845;
  double t846;
  double t863;
  double t874;
  double t875;
  double t879;
  double t883;
  double t897;
  double t901;
  double t903;
  double t996;
  double t1001;
  double t1004;
  double t1081;
  double t1083;
  double t1085;
  double t1109;
  double t1131;
  double t1133;
  double t1134;
  double t1142;
  double t1045;
  double t1046;
  double t1052;
  double t1062;
  double t1272;
  double t1276;
  double t1277;
  double t1282;
  double t1233;
  double t1236;
  double t1241;
  double t1243;
  double t1299;
  double t1302;
  double t1381;
  double t1368;
  double t1378;
  double t1382;
  double t1387;
  double t1402;
  double t1420;
  double t1423;
  double t405;
  double t406;
  double t413;
  double t414;
  double t1427;
  double t1429;
  double t1437;
  double t1443;
  double t1446;
  double t1451;
  double t1466;
  double t1477;
  double t1478;
  double t1480;
  double t1506;
  double t1509;
  double t1511;
  double t1514;
  double t1495;
  double t1496;
  double t1497;
  double t1499;
  double t1566;
  double t1567;
  double t1571;
  double t1575;
  double t1579;
  double t1580;
  double t1588;
  double t1590;
  double t1592;
  double t1601;
  double t1617;
  double t1618;
  double t1619;
  double t1620;
  double t1607;
  double t1610;
  double t1611;
  double t1613;
  double t1662;
  double t1665;
  double t1666;
  double t1672;
  double t1674;
  double t1675;
  double t1686;
  double t1689;
  double t1690;
  double t1693;
  double t1695;
  double t1696;
  double t1716;
  double t1718;
  double t1721;
  double t1705;
  double t1706;
  double t1710;
  double t1723;
  double t1725;
  double t1726;
  double t915;
  double t916;
  double t923;
  double t932;
  double t1774;
  double t1775;
  double t1776;
  double t1780;
  double t1784;
  double t1787;
  double t1788;
  double t1801;
  double t1807;
  double t1808;
  double t1793;
  double t1796;
  double t1798;
  double t1812;
  double t1819;
  double t1823;
  double t947;
  double t961;
  double t973;
  double t979;
  double t984;
  double t992;
  double t1010;
  double t1011;
  double t1029;
  double t1871;
  double t1873;
  double t1876;
  double t1892;
  double t1897;
  double t1900;
  double t1901;
  double t1904;
  double t1905;
  double t1906;
  double t1907;
  double t1882;
  double t1883;
  double t1884;
  double t1885;
  double t1246;
  double t1248;
  double t1265;
  double t1284;
  double t1286;
  double t1291;
  double t1303;
  double t1305;
  double t1308;
  double t1973;
  double t1974;
  double t1975;
  double t1977;
  double t1956;
  double t1963;
  double t1967;
  double t1969;
  double t1980;
  double t1982;
  double t2005;
  double t2007;
  double t2080;
  double t2081;
  double t2082;
  double t2086;
  double t2090;
  double t2094;
  double t2102;
  double t2107;
  double t2109;
  double t2112;
  double t2132;
  double t2133;
  double t2134;
  double t2135;
  double t2115;
  double t2121;
  double t2125;
  double t2128;
  double t2186;
  double t2189;
  double t2192;
  double t2195;
  double t2198;
  double t2204;
  double t2206;
  double t2208;
  double t2230;
  double t2234;
  double t2236;
  double t2215;
  double t2216;
  double t2217;
  double t2251;
  double t2252;
  double t2255;
  double t2325;
  double t2329;
  double t2332;
  double t2339;
  double t2340;
  double t2342;
  double t2345;
  double t2359;
  double t2360;
  double t2366;
  double t2350;
  double t2351;
  double t2352;
  double t2370;
  double t2371;
  double t2375;
  double t2426;
  double t2427;
  double t2430;
  double t2446;
  double t2448;
  double t2450;
  double t2454;
  double t2457;
  double t2458;
  double t2459;
  double t2434;
  double t2438;
  double t2439;
  double t2442;
  double t2507;
  double t2508;
  double t2509;
  double t2513;
  double t2496;
  double t2502;
  double t2503;
  double t2504;
  double t2516;
  double t2518;
  double t2572;
  double t2575;
  double t2579;
  double t2586;
  double t2604;
  double t2605;
  double t2607;
  double t2609;
  double t2613;
  double t2591;
  double t2593;
  double t2623;
  double t2582;
  double t2691;
  double t2692;
  double t2698;
  double t2708;
  double t2659;
  double t2641;
  double t2642;
  double t2647;
  double t2676;
  double t2678;
  double t2681;
  double t2722;
  double t2596;
  double t2731;
  double t2587;
  double t2703;
  double t2801;
  double t2804;
  double t2820;
  double t2632;
  double t2739;
  double t2624;
  double t2848;
  double t2733;
  double t2734;
  double t2743;
  double t2744;
  double t2745;
  double t2748;
  double t2751;
  double t2756;
  double t2862;
  double t2815;
  double t2817;
  double t2818;
  double t2825;
  double t2827;
  double t2830;
  double t2832;
  double t2835;
  double t2873;
  double t2876;
  double t2880;
  double t2883;
  double t2884;
  double t2885;
  double t2887;
  double t2888;
  double t2788;
  double t2911;
  double t2809;
  double t2940;
  double t2898;
  double t2716;
  double t2618;
  double t2619;
  double t2615;
  double t2616;
  double t2650;
  double t2653;
  double t2663;
  double t2666;
  double t2668;
  double t2669;
  double t2671;
  double t2621;
  double t2622;
  double t2629;
  double t2630;
  double t2633;
  double t2636;
  double t2640;
  double t2845;
  double t2847;
  double t2849;
  double t2851;
  double t2864;
  double t2866;
  double t2871;
  double t3007;
  double t3008;
  double t3009;
  double t3018;
  double t3020;
  double t3023;
  double t2774;
  double t2783;
  double t2792;
  double t2795;
  double t2811;
  double t2813;
  double t2814;
  double t2687;
  double t2702;
  double t2717;
  double t2718;
  double t2723;
  double t2725;
  double t2730;
  double t2981;
  double t3029;
  double t3036;
  double t3038;
  double t2975;
  double t3050;
  double t3051;
  double t3052;
  double t2969;
  double t2970;
  double t3055;
  double t3056;
  double t3057;
  double t2954;
  double t2945;
  double t2946;
  double t2943;
  double t2922;
  double t2923;
  double t2914;
  double t2900;
  double t3013;
  double t3028;
  double t3043;
  double t3053;
  double t3061;
  double t3062;
  double t3063;
  double t3072;
  double t3074;
  double t3075;
  double t3078;
  double t3085;
  double t3090;
  double t3092;
  double t3093;
  double t3094;
  double t3095;
  double t3097;
  double t3101;
  double t3102;
  double t3137;
  double t3162;
  double t3170;
  double t3215;
  double t3218;
  double t3221;
  double t3124;
  double t3250;
  double t3195;
  double t3225;
  double t3226;
  double t3227;
  double t3231;
  double t3233;
  double t3234;
  double t3240;
  double t3245;
  double t3247;
  double t3252;
  double t3261;
  double t3264;
  double t3271;
  double t3272;
  double t3274;
  double t3275;
  double t3278;
  double t3282;
  double t3322;
  double t3341;
  double t3343;
  double t3344;
  double t3346;
  double t3368;
  double t3372;
  double t3374;
  double t3382;
  double t3326;
  double t3402;
  double t3403;
  double t3404;
  double t3405;
  double t3412;
  double t3351;
  double t3393;
  double t3385;
  double t2568;
  double t2580;
  double t2589;
  double t2590;
  double t2597;
  double t2598;
  double t2599;
  double t3461;
  double t3462;
  double t3463;
  double t3466;
  double t3486;
  double t3487;
  double t3496;
  double t3497;
  double t3498;
  double t3499;
  double t3504;
  double t3506;
  double t3508;
  double t3509;
  double t3513;
  double t3514;
  double t3522;
  double t3523;
  double t3599;
  double t3600;
  double t3607;
  double t3610;
  double t3611;
  double t3613;
  double t3615;
  double t3617;
  double t3621;
  double t3622;
  double t3628;
  double t3629;
  double t3633;
  double t3636;
  double t3638;
  double t3639;
  double t3640;
  double t3644;
  double t3719;
  double t3722;
  double t3727;
  double t3741;
  double t3750;
  double t3751;
  double t3757;
  double t3758;
  double t3764;
  double t3770;
  double t3771;
  double t3775;
  double t3779;
  double t3783;
  double t3784;
  double t3108;
  double t3113;
  double t3116;
  double t3118;
  double t3850;
  double t3851;
  double t3857;
  double t3858;
  double t3866;
  double t3867;
  double t3868;
  double t3874;
  double t3881;
  double t3883;
  double t3891;
  double t3892;
  double t3893;
  double t3125;
  double t3132;
  double t3139;
  double t3140;
  double t3141;
  double t3151;
  double t3163;
  double t3166;
  double t3172;
  double t3175;
  double t3176;
  double t3185;
  double t3192;
  double t3193;
  double t3198;
  double t3199;
  double t3203;
  double t3204;
  double t3936;
  double t3938;
  double t3940;
  double t3948;
  double t3950;
  double t3952;
  double t3955;
  double t3965;
  double t3967;
  double t3969;
  double t3971;
  double t3978;
  double t3980;
  double t3981;
  double t3982;
  double t3323;
  double t3325;
  double t3330;
  double t3333;
  double t3335;
  double t3340;
  double t3352;
  double t3353;
  double t3354;
  double t3357;
  double t3362;
  double t3365;
  double t3386;
  double t3392;
  double t3395;
  double t3396;
  double t3399;
  double t3400;
  double t4018;
  double t4022;
  double t4024;
  double t4026;
  double t3413;
  double t4029;
  double t4030;
  double t4032;
  double t4036;
  double t3417;
  double t4040;
  double t4041;
  double t4045;
  double t4049;
  double t3423;
  double t3427;
  double t3437;
  double t3441;
  double t4194;
  double t4197;
  double t4198;
  double t4207;
  double t4214;
  double t4216;
  double t4219;
  double t4220;
  double t4223;
  double t4224;
  double t4229;
  double t4233;
  double t4236;
  double t4241;
  double t4249;
  double t4252;
  double t4253;
  double t4257;
  double t4324;
  double t4325;
  double t4327;
  double t4330;
  double t4335;
  double t4340;
  double t4342;
  double t4343;
  double t4354;
  double t4356;
  double t4357;
  double t4364;
  double t4366;
  double t4367;
  double t4416;
  double t4417;
  double t4419;
  double t4420;
  double t4423;
  double t4425;
  double t4430;
  double t4437;
  double t4444;
  double t4446;
  double t4450;
  double t4452;
  double t4453;
  double t4521;
  double t4524;
  double t4525;
  double t4538;
  double t4542;
  double t4545;
  double t4546;
  double t4548;
  double t4551;
  double t4560;
  double t4564;
  double t4568;
  double t4575;
  double t4576;
  double t4578;
  double t4621;
  double t4623;
  double t4628;
  double t4629;
  double t4632;
  double t4641;
  double t4642;
  double t4643;
  double t4647;
  double t4649;
  double t4652;
  double t4656;
  t64 = Sin(var1[4]);
  t80 = Cos(var1[6]);
  t108 = -1.*t80;
  t118 = 1. + t108;
  t149 = 0.15121*t118;
  t165 = Sin(var1[6]);
  t73 = Sin(var1[5]);
  t245 = Cos(var1[5]);
  t328 = Cos(var1[7]);
  t332 = -1.*t328;
  t335 = 1. + t332;
  t337 = Sin(var1[7]);
  t399 = Cos(var1[4]);
  t427 = -1. + t328;
  t309 = t80*t64*t73;
  t313 = t245*t64*t165;
  t318 = t309 + t313;
  t359 = -1.*t245*t80*t64;
  t360 = t64*t73*t165;
  t365 = t359 + t360;
  t468 = Cos(var1[8]);
  t470 = -1.*t468;
  t477 = 1. + t470;
  t479 = Sin(var1[8]);
  t432 = 4.e-6*t399*t427;
  t435 = 1.6e-11*t427;
  t444 = 1. + t435;
  t445 = t444*t318;
  t446 = 4.e-6*t365*t337;
  t455 = t432 + t445 + t446;
  t570 = -1. + t468;
  t517 = t399*t328;
  t521 = 4.e-6*t427*t318;
  t531 = t365*t337;
  t535 = t517 + t521 + t531;
  t483 = -1.000000000016*t335;
  t484 = 1. + t483;
  t486 = t484*t365;
  t489 = -1.*t399*t337;
  t490 = -4.e-6*t318*t337;
  t493 = t486 + t489 + t490;
  t185 = -0.15121*t165;
  t213 = t149 + t185;
  t251 = 0.15121*t165;
  t266 = t149 + t251;
  t320 = -1.2484e-7*var1[7];
  t336 = -1.5499600000248e-7*t335;
  t348 = 1.124840000016e-6*t337;
  t355 = t320 + t336 + t348;
  t366 = 0.281210000008499*t335;
  t381 = 0.03874900000062*t337;
  t391 = t366 + t381;
  t679 = -1.*t399*t245*t80;
  t719 = t399*t73*t165;
  t720 = t679 + t719;
  t762 = -1.*t399*t80*t73;
  t764 = -1.*t399*t245*t165;
  t776 = t762 + t764;
  t463 = -1.284e-8*var1[8];
  t478 = -1.5499600000248e-7*t477;
  t480 = 2.012840000032e-6*t479;
  t481 = t463 + t478 + t480;
  t494 = 0.503210000016051*t477;
  t495 = 0.03874900000062*t479;
  t502 = t494 + t495;
  t548 = 5.136e-14*var1[8];
  t552 = -0.03874900000062*t477;
  t555 = 0.503210000008*t479;
  t558 = t548 + t552 + t555;
  t634 = -1.000000000016*t477;
  t638 = 1. + t634;
  t791 = t484*t776;
  t796 = -4.e-6*t720*t337;
  t798 = t791 + t796;
  t780 = t444*t720;
  t786 = 4.e-6*t776*t337;
  t788 = t780 + t786;
  t804 = 4.e-6*t427*t720;
  t814 = t776*t337;
  t816 = t804 + t814;
  t578 = 1.6e-11*t570;
  t587 = 1. + t578;
  t727 = t720*t355;
  t777 = t776*t391;
  t790 = t788*t481;
  t803 = t798*t502;
  t818 = t816*t558;
  t820 = t638*t798;
  t823 = -4.e-6*t788*t479;
  t826 = -1.*t816*t479;
  t827 = t820 + t823 + t826;
  t837 = 0.80321*t827;
  t845 = t587*t788;
  t846 = 4.e-6*t570*t816;
  t863 = 4.e-6*t798*t479;
  t874 = t845 + t846 + t863;
  t875 = 0.14871*t874;
  t879 = 4.e-6*t570*t788;
  t883 = t468*t816;
  t897 = t798*t479;
  t901 = t879 + t883 + t897;
  t903 = -0.03875*t901;
  t996 = t399*t245*t80;
  t1001 = -1.*t399*t73*t165;
  t1004 = t996 + t1001;
  t1081 = -1.*t328*t64;
  t1083 = -4.e-6*t328*t776;
  t1085 = -1.000000000016*t1004*t337;
  t1109 = t1081 + t1083 + t1085;
  t1131 = t328*t1004;
  t1133 = -1.*t64*t337;
  t1134 = -4.e-6*t776*t337;
  t1142 = t1131 + t1133 + t1134;
  t1045 = 4.e-6*t328*t1004;
  t1046 = -4.e-6*t64*t337;
  t1052 = -1.6e-11*t776*t337;
  t1062 = t1045 + t1046 + t1052;
  t1272 = 4.e-6*t427*t64;
  t1276 = t444*t776;
  t1277 = 4.e-6*t1004*t337;
  t1282 = t1272 + t1276 + t1277;
  t1233 = t328*t64;
  t1236 = 4.e-6*t427*t776;
  t1241 = t1004*t337;
  t1243 = t1233 + t1236 + t1241;
  t1299 = t484*t1004;
  t1302 = t1299 + t1133 + t1134;
  t1381 = Cos(var1[3]);
  t1368 = Sin(var1[3]);
  t1378 = -1.*t245*t1368;
  t1382 = -1.*t1381*t64*t73;
  t1387 = t1378 + t1382;
  t1402 = t1381*t245*t64;
  t1420 = -1.*t1368*t73;
  t1423 = t1402 + t1420;
  t405 = 4.9936e-13*var1[7];
  t406 = -0.03874900000062*t335;
  t413 = 0.281210000004*t337;
  t414 = t405 + t406 + t413;
  t1427 = t80*t1387;
  t1429 = -1.*t1423*t165;
  t1437 = t1427 + t1429;
  t1443 = t80*t1423;
  t1446 = t1387*t165;
  t1451 = t1443 + t1446;
  t1466 = -4.e-6*t1381*t399*t427;
  t1477 = t444*t1437;
  t1478 = 4.e-6*t1451*t337;
  t1480 = t1466 + t1477 + t1478;
  t1506 = -1.*t1381*t399*t328;
  t1509 = 4.e-6*t427*t1437;
  t1511 = t1451*t337;
  t1514 = t1506 + t1509 + t1511;
  t1495 = t484*t1451;
  t1496 = t1381*t399*t337;
  t1497 = -4.e-6*t1437*t337;
  t1499 = t1495 + t1496 + t1497;
  t1566 = -1.*t399*t80*t1368*t73;
  t1567 = -1.*t399*t245*t1368*t165;
  t1571 = t1566 + t1567;
  t1575 = t399*t245*t80*t1368;
  t1579 = -1.*t399*t1368*t73*t165;
  t1580 = t1575 + t1579;
  t1588 = 4.e-6*t427*t1368*t64;
  t1590 = t444*t1571;
  t1592 = 4.e-6*t1580*t337;
  t1601 = t1588 + t1590 + t1592;
  t1617 = t328*t1368*t64;
  t1618 = 4.e-6*t427*t1571;
  t1619 = t1580*t337;
  t1620 = t1617 + t1618 + t1619;
  t1607 = t484*t1580;
  t1610 = -1.*t1368*t64*t337;
  t1611 = -4.e-6*t1571*t337;
  t1613 = t1607 + t1610 + t1611;
  t1662 = -1.*t245*t1368*t64;
  t1665 = -1.*t1381*t73;
  t1666 = t1662 + t1665;
  t1672 = t1381*t245;
  t1674 = -1.*t1368*t64*t73;
  t1675 = t1672 + t1674;
  t1686 = t80*t1666;
  t1689 = -1.*t1675*t165;
  t1690 = t1686 + t1689;
  t1693 = t80*t1675;
  t1695 = t1666*t165;
  t1696 = t1693 + t1695;
  t1716 = t484*t1696;
  t1718 = -4.e-6*t1690*t337;
  t1721 = t1716 + t1718;
  t1705 = t444*t1690;
  t1706 = 4.e-6*t1696*t337;
  t1710 = t1705 + t1706;
  t1723 = 4.e-6*t427*t1690;
  t1725 = t1696*t337;
  t1726 = t1723 + t1725;
  t915 = -0.15121*t80;
  t916 = t915 + t251;
  t923 = 0.15121*t80;
  t932 = t923 + t251;
  t1774 = t245*t1368*t64;
  t1775 = t1381*t73;
  t1776 = t1774 + t1775;
  t1780 = -1.*t80*t1776;
  t1784 = t1780 + t1689;
  t1787 = -1.*t1776*t165;
  t1788 = t1693 + t1787;
  t1801 = t484*t1788;
  t1807 = -4.e-6*t1784*t337;
  t1808 = t1801 + t1807;
  t1793 = t444*t1784;
  t1796 = 4.e-6*t1788*t337;
  t1798 = t1793 + t1796;
  t1812 = 4.e-6*t427*t1784;
  t1819 = t1788*t337;
  t1823 = t1812 + t1819;
  t947 = 0.281210000004*t328;
  t961 = -0.03874900000062*t337;
  t973 = 4.9936e-13 + t947 + t961;
  t979 = 1.124840000016e-6*t328;
  t984 = -1.5499600000248e-7*t337;
  t992 = -1.2484e-7 + t979 + t984;
  t1010 = 0.03874900000062*t328;
  t1011 = 0.281210000008499*t337;
  t1029 = t1010 + t1011;
  t1871 = t80*t1776;
  t1873 = t1675*t165;
  t1876 = t1871 + t1873;
  t1892 = t399*t328*t1368;
  t1897 = -4.e-6*t328*t1788;
  t1900 = -1.000000000016*t1876*t337;
  t1901 = t1892 + t1897 + t1900;
  t1904 = t328*t1876;
  t1905 = t399*t1368*t337;
  t1906 = -4.e-6*t1788*t337;
  t1907 = t1904 + t1905 + t1906;
  t1882 = 4.e-6*t328*t1876;
  t1883 = 4.e-6*t399*t1368*t337;
  t1884 = -1.6e-11*t1788*t337;
  t1885 = t1882 + t1883 + t1884;
  t1246 = 0.503210000008*t468;
  t1248 = -0.03874900000062*t479;
  t1265 = 5.136e-14 + t1246 + t1248;
  t1284 = 2.012840000032e-6*t468;
  t1286 = -1.5499600000248e-7*t479;
  t1291 = -1.284e-8 + t1284 + t1286;
  t1303 = 0.03874900000062*t468;
  t1305 = 0.503210000016051*t479;
  t1308 = t1303 + t1305;
  t1973 = -4.e-6*t399*t427*t1368;
  t1974 = t444*t1788;
  t1975 = 4.e-6*t1876*t337;
  t1977 = t1973 + t1974 + t1975;
  t1956 = -1.*t399*t328*t1368;
  t1963 = 4.e-6*t427*t1788;
  t1967 = t1876*t337;
  t1969 = t1956 + t1963 + t1967;
  t1980 = t484*t1876;
  t1982 = t1980 + t1905 + t1906;
  t2005 = -4.e-6*t1977*t479;
  t2007 = -1.*t1969*t479;
  t2080 = t1381*t399*t80*t73;
  t2081 = t1381*t399*t245*t165;
  t2082 = t2080 + t2081;
  t2086 = -1.*t1381*t399*t245*t80;
  t2090 = t1381*t399*t73*t165;
  t2094 = t2086 + t2090;
  t2102 = -4.e-6*t1381*t427*t64;
  t2107 = t444*t2082;
  t2109 = 4.e-6*t2094*t337;
  t2112 = t2102 + t2107 + t2109;
  t2132 = -1.*t1381*t328*t64;
  t2133 = 4.e-6*t427*t2082;
  t2134 = t2094*t337;
  t2135 = t2132 + t2133 + t2134;
  t2115 = t484*t2094;
  t2121 = t1381*t64*t337;
  t2125 = -4.e-6*t2082*t337;
  t2128 = t2115 + t2121 + t2125;
  t2186 = t245*t1368;
  t2189 = t1381*t64*t73;
  t2192 = t2186 + t2189;
  t2195 = -1.*t2192*t165;
  t2198 = t1443 + t2195;
  t2204 = t80*t2192;
  t2206 = t1423*t165;
  t2208 = t2204 + t2206;
  t2230 = t484*t2208;
  t2234 = -4.e-6*t2198*t337;
  t2236 = t2230 + t2234;
  t2215 = t444*t2198;
  t2216 = 4.e-6*t2208*t337;
  t2217 = t2215 + t2216;
  t2251 = 4.e-6*t427*t2198;
  t2252 = t2208*t337;
  t2255 = t2251 + t2252;
  t2325 = -1.*t1381*t245*t64;
  t2329 = t1368*t73;
  t2332 = t2325 + t2329;
  t2339 = -1.*t80*t2332;
  t2340 = t2339 + t2195;
  t2342 = -1.*t2332*t165;
  t2345 = t2204 + t2342;
  t2359 = t484*t2345;
  t2360 = -4.e-6*t2340*t337;
  t2366 = t2359 + t2360;
  t2350 = t444*t2340;
  t2351 = 4.e-6*t2345*t337;
  t2352 = t2350 + t2351;
  t2370 = 4.e-6*t427*t2340;
  t2371 = t2345*t337;
  t2375 = t2370 + t2371;
  t2426 = t80*t2332;
  t2427 = t2192*t165;
  t2430 = t2426 + t2427;
  t2446 = -4.e-6*t328*t2345;
  t2448 = -1.000000000016*t2430*t337;
  t2450 = t1506 + t2446 + t2448;
  t2454 = t328*t2430;
  t2457 = -1.*t1381*t399*t337;
  t2458 = -4.e-6*t2345*t337;
  t2459 = t2454 + t2457 + t2458;
  t2434 = 4.e-6*t328*t2430;
  t2438 = -4.e-6*t1381*t399*t337;
  t2439 = -1.6e-11*t2345*t337;
  t2442 = t2434 + t2438 + t2439;
  t2507 = 4.e-6*t1381*t399*t427;
  t2508 = t444*t2345;
  t2509 = 4.e-6*t2430*t337;
  t2513 = t2507 + t2508 + t2509;
  t2496 = t1381*t399*t328;
  t2502 = 4.e-6*t427*t2345;
  t2503 = t2430*t337;
  t2504 = t2496 + t2502 + t2503;
  t2516 = t484*t2430;
  t2518 = t2516 + t2457 + t2458;
  t2572 = Cos(var1[16]);
  t2575 = -1.*t2572;
  t2579 = 1. + t2575;
  t2586 = Sin(var1[16]);
  t2604 = Cos(var1[15]);
  t2605 = -1.*t2604;
  t2607 = 1. + t2605;
  t2609 = -0.15121*t2607;
  t2613 = Sin(var1[15]);
  t2591 = -1. + t2572;
  t2593 = 4.e-6*t2591;
  t2623 = 7.e-6*t2579;
  t2582 = 2.8e-11*t2579;
  t2691 = Cos(var1[17]);
  t2692 = -1.*t2691;
  t2698 = 1. + t2692;
  t2708 = Sin(var1[17]);
  t2659 = -4.e-6*t2586;
  t2641 = t245*t2613*t64;
  t2642 = t2604*t64*t73;
  t2647 = t2641 + t2642;
  t2676 = -1.*t2604*t245*t64;
  t2678 = t2613*t64*t73;
  t2681 = t2676 + t2678;
  t2722 = 2.8e-11*t2698;
  t2596 = -7.e-6*t2586;
  t2731 = -2.8e-11*t2579;
  t2587 = -1.*t2586;
  t2703 = 7.e-6*t2698;
  t2801 = -1. + t2691;
  t2804 = 4.e-6*t2801;
  t2820 = 4.e-6*t2579;
  t2632 = 7.e-6*t2586;
  t2739 = -7.e-6*t2579;
  t2624 = 4.e-6*t2586;
  t2848 = 4.e-6*t2708;
  t2733 = t2731 + t2586;
  t2734 = t399*t2733;
  t2743 = t2739 + t2659;
  t2744 = t2743*t2647;
  t2745 = -1.000000000016*t2579;
  t2748 = 1. + t2745;
  t2751 = t2748*t2681;
  t2756 = t2734 + t2744 + t2751;
  t2862 = 7.e-6*t2708;
  t2815 = -1.000000000049*t2579;
  t2817 = 1. + t2815;
  t2818 = t2817*t399;
  t2825 = t2820 + t2596;
  t2827 = t2825*t2647;
  t2830 = t2731 + t2587;
  t2832 = t2830*t2681;
  t2835 = t2818 + t2827 + t2832;
  t2873 = t2820 + t2632;
  t2876 = t399*t2873;
  t2880 = -6.5e-11*t2579;
  t2883 = 1. + t2880;
  t2884 = t2883*t2647;
  t2885 = t2739 + t2624;
  t2887 = t2885*t2681;
  t2888 = t2876 + t2884 + t2887;
  t2788 = -1.*t2708;
  t2911 = 4.e-6*t2698;
  t2809 = -7.e-6*t2708;
  t2940 = -2.8e-11*t2698;
  t2898 = -7.e-6*t2698;
  t2716 = -4.e-6*t2708;
  t2618 = 0.15121*t2613;
  t2619 = t2609 + t2618;
  t2615 = -0.15121*t2613;
  t2616 = t2609 + t2615;
  t2650 = -2.7726089999999997e-12*var1[16];
  t2653 = -0.2812110000084994*t2579;
  t2663 = t2623 + t2659;
  t2666 = -1.8134809999999998e-6*t2663;
  t2668 = t2582 + t2586;
  t2669 = -0.038749000006999997*t2668;
  t2671 = t2650 + t2653 + t2666 + t2669;
  t2621 = 3.9608699999999997e-7*var1[16];
  t2622 = -1.1787626499999999e-16*t2579;
  t2629 = t2623 + t2624;
  t2630 = -0.281211000004*t2629;
  t2633 = t2593 + t2632;
  t2636 = -0.038749000006999997*t2633;
  t2640 = t2621 + t2622 + t2630 + t2636;
  t2845 = 2.826290000000002e-7*var1[17];
  t2847 = -2.18904205e-16*t2698;
  t2849 = t2703 + t2848;
  t2851 = -0.5031510000080001*t2849;
  t2864 = t2804 + t2862;
  t2866 = -0.038575000014*t2864;
  t2871 = t2845 + t2847 + t2851 + t2866;
  t3007 = -1.*t399*t245*t2613;
  t3008 = -1.*t2604*t399*t73;
  t3009 = t3007 + t3008;
  t3018 = -1.*t2604*t399*t245;
  t3020 = t399*t2613*t73;
  t3023 = t3018 + t3020;
  t2774 = 1.1305160000000008e-12*var1[17];
  t2783 = -0.03857500001589017*t2698;
  t2792 = t2722 + t2788;
  t2795 = -0.5031510000080001*t2792;
  t2811 = t2804 + t2809;
  t2813 = -3.367757e-6*t2811;
  t2814 = t2774 + t2783 + t2795 + t2813;
  t2687 = -1.9784030000000015e-12*var1[17];
  t2702 = -0.5031510000160505*t2698;
  t2717 = t2703 + t2716;
  t2718 = -3.367757e-6*t2717;
  t2723 = t2722 + t2708;
  t2725 = -0.038575000014*t2723;
  t2730 = t2687 + t2702 + t2718 + t2725;
  t2981 = t2898 + t2716;
  t3029 = t2885*t3009;
  t3036 = t2883*t3023;
  t3038 = t3029 + t3036;
  t2975 = t2940 + t2708;
  t3050 = t2830*t3009;
  t3051 = t2825*t3023;
  t3052 = t3050 + t3051;
  t2969 = -1.000000000016*t2698;
  t2970 = 1. + t2969;
  t3055 = t2748*t3009;
  t3056 = t2743*t3023;
  t3057 = t3055 + t3056;
  t2954 = t2911 + t2809;
  t2945 = -1.000000000049*t2698;
  t2946 = 1. + t2945;
  t2943 = t2940 + t2788;
  t2922 = -6.5e-11*t2698;
  t2923 = 1. + t2922;
  t2914 = t2911 + t2862;
  t2900 = t2898 + t2848;
  t3013 = t2671*t3009;
  t3028 = t2640*t3023;
  t3043 = t2871*t3038;
  t3053 = t2814*t3052;
  t3061 = t2730*t3057;
  t3062 = t2981*t3038;
  t3063 = t2975*t3052;
  t3072 = t2970*t3057;
  t3074 = t3062 + t3063 + t3072;
  t3075 = -0.80315*t3074;
  t3078 = t2954*t3038;
  t3085 = t2946*t3052;
  t3090 = t2943*t3057;
  t3092 = t3078 + t3085 + t3090;
  t3093 = -0.038576*t3092;
  t3094 = t2923*t3038;
  t3095 = t2914*t3052;
  t3097 = t2900*t3057;
  t3101 = t3094 + t3095 + t3097;
  t3102 = -0.148715*t3101;
  t3137 = 2.8e-11*t2586;
  t3162 = 7.e-6*t2572;
  t3170 = 4.e-6*t2572;
  t3215 = t2604*t399*t245;
  t3218 = -1.*t399*t2613*t73;
  t3221 = t3215 + t3218;
  t3124 = -7.e-6*t2572;
  t3250 = -2.8e-11*t2586;
  t3195 = -4.e-6*t2572;
  t3225 = t3162 + t2624;
  t3226 = t3225*t64;
  t3227 = -6.5e-11*t2586*t3009;
  t3231 = t3170 + t2596;
  t3233 = t3231*t3221;
  t3234 = t3226 + t3227 + t3233;
  t3240 = -1.000000000049*t2586*t64;
  t3245 = t3124 + t2624;
  t3247 = t3245*t3009;
  t3252 = t2575 + t3250;
  t3261 = t3252*t3221;
  t3264 = t3240 + t3247 + t3261;
  t3271 = t2572 + t3250;
  t3272 = t3271*t64;
  t3274 = t3195 + t2596;
  t3275 = t3274*t3009;
  t3278 = -1.000000000016*t2586*t3221;
  t3282 = t3272 + t3275 + t3278;
  t3322 = 2.8e-11*t2708;
  t3341 = t2733*t64;
  t3343 = t2743*t3009;
  t3344 = t2748*t3221;
  t3346 = t3341 + t3343 + t3344;
  t3368 = t2817*t64;
  t3372 = t2825*t3009;
  t3374 = t2830*t3221;
  t3382 = t3368 + t3372 + t3374;
  t3326 = -4.e-6*t2691;
  t3402 = t2873*t64;
  t3403 = t2883*t3009;
  t3404 = t2885*t3221;
  t3405 = t3402 + t3403 + t3404;
  t3412 = -2.8e-11*t2708;
  t3351 = -7.e-6*t2691;
  t3393 = 4.e-6*t2691;
  t3385 = 7.e-6*t2691;
  t2568 = 1.5843479999999999e-12*var1[16];
  t2580 = -0.03874900000889869*t2579;
  t2589 = t2582 + t2587;
  t2590 = -0.281211000004*t2589;
  t2597 = t2593 + t2596;
  t2598 = -1.8134809999999998e-6*t2597;
  t2599 = t2568 + t2580 + t2590 + t2598;
  t3461 = -1.*t2613*t1423;
  t3462 = t2604*t1387;
  t3463 = t3461 + t3462;
  t3466 = t2604*t1423;
  t3486 = t2613*t1387;
  t3487 = t3466 + t3486;
  t3496 = -1.*t1381*t399*t2733;
  t3497 = t2743*t3463;
  t3498 = t2748*t3487;
  t3499 = t3496 + t3497 + t3498;
  t3504 = -1.*t2817*t1381*t399;
  t3506 = t2825*t3463;
  t3508 = t2830*t3487;
  t3509 = t3504 + t3506 + t3508;
  t3513 = -1.*t1381*t399*t2873;
  t3514 = t2883*t3463;
  t3522 = t2885*t3487;
  t3523 = t3513 + t3514 + t3522;
  t3599 = -1.*t399*t245*t2613*t1368;
  t3600 = -1.*t2604*t399*t1368*t73;
  t3607 = t3599 + t3600;
  t3610 = t2604*t399*t245*t1368;
  t3611 = -1.*t399*t2613*t1368*t73;
  t3613 = t3610 + t3611;
  t3615 = t2733*t1368*t64;
  t3617 = t2743*t3607;
  t3621 = t2748*t3613;
  t3622 = t3615 + t3617 + t3621;
  t3628 = t2817*t1368*t64;
  t3629 = t2825*t3607;
  t3633 = t2830*t3613;
  t3636 = t3628 + t3629 + t3633;
  t3638 = t2873*t1368*t64;
  t3639 = t2883*t3607;
  t3640 = t2885*t3613;
  t3644 = t3638 + t3639 + t3640;
  t3719 = t2613*t1666;
  t3722 = t2604*t1675;
  t3727 = t3719 + t3722;
  t3741 = t2604*t1666;
  t3750 = -1.*t2613*t1675;
  t3751 = t3741 + t3750;
  t3757 = t2885*t3727;
  t3758 = t2883*t3751;
  t3764 = t3757 + t3758;
  t3770 = t2830*t3727;
  t3771 = t2825*t3751;
  t3775 = t3770 + t3771;
  t3779 = t2748*t3727;
  t3783 = t2743*t3751;
  t3784 = t3779 + t3783;
  t3108 = -0.15121*t2604;
  t3113 = t3108 + t2615;
  t3116 = 0.15121*t2604;
  t3118 = t3116 + t2615;
  t3850 = -1.*t2613*t1776;
  t3851 = t3850 + t3722;
  t3857 = -1.*t2604*t1776;
  t3858 = t3857 + t3750;
  t3866 = t2885*t3851;
  t3867 = t2883*t3858;
  t3868 = t3866 + t3867;
  t3874 = t2830*t3851;
  t3881 = t2825*t3858;
  t3883 = t3874 + t3881;
  t3891 = t2748*t3851;
  t3892 = t2743*t3858;
  t3893 = t3891 + t3892;
  t3125 = t3124 + t2659;
  t3132 = -1.8134809999999998e-6*t3125;
  t3139 = t2575 + t3137;
  t3140 = -0.281211000004*t3139;
  t3141 = -0.03874900000889869*t2586;
  t3151 = 1.5843479999999999e-12 + t3132 + t3140 + t3141;
  t3163 = t3162 + t2659;
  t3166 = -0.038749000006999997*t3163;
  t3172 = t3170 + t2632;
  t3175 = -0.281211000004*t3172;
  t3176 = -1.1787626499999999e-16*t2586;
  t3185 = 3.9608699999999997e-7 + t3166 + t3175 + t3176;
  t3192 = t2572 + t3137;
  t3193 = -0.038749000006999997*t3192;
  t3198 = t3195 + t2632;
  t3199 = -1.8134809999999998e-6*t3198;
  t3203 = -0.2812110000084994*t2586;
  t3204 = -2.7726089999999997e-12 + t3193 + t3199 + t3203;
  t3936 = t2604*t1776;
  t3938 = t2613*t1675;
  t3940 = t3936 + t3938;
  t3948 = -1.*t399*t3225*t1368;
  t3950 = -6.5e-11*t2586*t3851;
  t3952 = t3231*t3940;
  t3955 = t3948 + t3950 + t3952;
  t3965 = 1.000000000049*t399*t2586*t1368;
  t3967 = t3245*t3851;
  t3969 = t3252*t3940;
  t3971 = t3965 + t3967 + t3969;
  t3978 = -1.*t399*t3271*t1368;
  t3980 = t3274*t3851;
  t3981 = -1.000000000016*t2586*t3940;
  t3982 = t3978 + t3980 + t3981;
  t3323 = t2691 + t3322;
  t3325 = -0.038575000014*t3323;
  t3330 = t3326 + t2862;
  t3333 = -3.367757e-6*t3330;
  t3335 = -0.5031510000160505*t2708;
  t3340 = -1.9784030000000015e-12 + t3325 + t3333 + t3335;
  t3352 = t3351 + t2716;
  t3353 = -3.367757e-6*t3352;
  t3354 = t2692 + t3322;
  t3357 = -0.5031510000080001*t3354;
  t3362 = -0.03857500001589017*t2708;
  t3365 = 1.1305160000000008e-12 + t3353 + t3357 + t3362;
  t3386 = t3385 + t2716;
  t3392 = -0.038575000014*t3386;
  t3395 = t3393 + t2862;
  t3396 = -0.5031510000080001*t3395;
  t3399 = -2.18904205e-16*t2708;
  t3400 = 2.826290000000002e-7 + t3392 + t3396 + t3399;
  t4018 = -1.*t399*t2733*t1368;
  t4022 = t2743*t3851;
  t4024 = t2748*t3940;
  t4026 = t4018 + t4022 + t4024;
  t3413 = t2691 + t3412;
  t4029 = -1.*t2817*t399*t1368;
  t4030 = t2825*t3851;
  t4032 = t2830*t3940;
  t4036 = t4029 + t4030 + t4032;
  t3417 = t3326 + t2809;
  t4040 = -1.*t399*t2873*t1368;
  t4041 = t2883*t3851;
  t4045 = t2885*t3940;
  t4049 = t4040 + t4041 + t4045;
  t3423 = t2692 + t3412;
  t3427 = t3351 + t2848;
  t3437 = t3393 + t2809;
  t3441 = t3385 + t2848;
  t4194 = t1381*t399*t245*t2613;
  t4197 = t2604*t1381*t399*t73;
  t4198 = t4194 + t4197;
  t4207 = -1.*t2604*t1381*t399*t245;
  t4214 = t1381*t399*t2613*t73;
  t4216 = t4207 + t4214;
  t4219 = -1.*t1381*t2733*t64;
  t4220 = t2743*t4198;
  t4223 = t2748*t4216;
  t4224 = t4219 + t4220 + t4223;
  t4229 = -1.*t2817*t1381*t64;
  t4233 = t2825*t4198;
  t4236 = t2830*t4216;
  t4241 = t4229 + t4233 + t4236;
  t4249 = -1.*t1381*t2873*t64;
  t4252 = t2883*t4198;
  t4253 = t2885*t4216;
  t4257 = t4249 + t4252 + t4253;
  t4324 = t2613*t1423;
  t4325 = t2604*t2192;
  t4327 = t4324 + t4325;
  t4330 = -1.*t2613*t2192;
  t4335 = t3466 + t4330;
  t4340 = t2885*t4327;
  t4342 = t2883*t4335;
  t4343 = t4340 + t4342;
  t4354 = t2830*t4327;
  t4356 = t2825*t4335;
  t4357 = t4354 + t4356;
  t4364 = t2748*t4327;
  t4366 = t2743*t4335;
  t4367 = t4364 + t4366;
  t4416 = -1.*t2613*t2332;
  t4417 = t4416 + t4325;
  t4419 = -1.*t2604*t2332;
  t4420 = t4419 + t4330;
  t4423 = t2885*t4417;
  t4425 = t2883*t4420;
  t4430 = t4423 + t4425;
  t4437 = t2830*t4417;
  t4444 = t2825*t4420;
  t4446 = t4437 + t4444;
  t4450 = t2748*t4417;
  t4452 = t2743*t4420;
  t4453 = t4450 + t4452;
  t4521 = t2604*t2332;
  t4524 = t2613*t2192;
  t4525 = t4521 + t4524;
  t4538 = t1381*t399*t3225;
  t4542 = -6.5e-11*t2586*t4417;
  t4545 = t3231*t4525;
  t4546 = t4538 + t4542 + t4545;
  t4548 = -1.000000000049*t1381*t399*t2586;
  t4551 = t3245*t4417;
  t4560 = t3252*t4525;
  t4564 = t4548 + t4551 + t4560;
  t4568 = t1381*t399*t3271;
  t4575 = t3274*t4417;
  t4576 = -1.000000000016*t2586*t4525;
  t4578 = t4568 + t4575 + t4576;
  t4621 = t1381*t399*t2733;
  t4623 = t2743*t4417;
  t4628 = t2748*t4525;
  t4629 = t4621 + t4623 + t4628;
  t4632 = t2817*t1381*t399;
  t4641 = t2825*t4417;
  t4642 = t2830*t4525;
  t4643 = t4632 + t4641 + t4642;
  t4647 = t1381*t399*t2873;
  t4649 = t2883*t4417;
  t4652 = t2885*t4525;
  t4656 = t4647 + t4649 + t4652;
  p_output1[0]=1.;
  p_output1[1]=t318*t355 + t365*t391 + t399*t414 + t455*t481 + t493*t502 + t535*t558 - 0.03875*(t479*t493 + t468*t535 + 4.e-6*t455*t570) + 0.14871*(4.e-6*t479*t493 + 4.e-6*t535*t570 + t455*t587) + 0.80321*(-4.e-6*t455*t479 - 1.*t479*t535 + t493*t638) - 1.*t245*t266*t64 + t213*t64*t73;
  p_output1[2]=-1.*t213*t245*t399 + t727 - 1.*t266*t399*t73 + t777 + t790 + t803 + t818 + t837 + t875 + t903;
  p_output1[3]=t727 + t777 + t790 + t803 + t818 + t837 + t875 + t903 - 1.*t399*t73*t916 + t245*t399*t932;
  p_output1[4]=t1004*t1029 + t1062*t481 + t1109*t502 + t1142*t558 - 0.03875*(t1142*t468 + t1109*t479 + 4.e-6*t1062*t570) + 0.14871*(4.e-6*t1109*t479 + 4.e-6*t1142*t570 + t1062*t587) + 0.80321*(-4.e-6*t1062*t479 - 1.*t1142*t479 + t1109*t638) + t64*t973 + t776*t992;
  p_output1[5]=t1243*t1265 + t1282*t1291 + t1302*t1308 - 0.03875*(t1302*t468 - 1.*t1243*t479 - 4.e-6*t1282*t479) + 0.14871*(4.e-6*t1302*t468 - 4.e-6*t1243*t479 - 1.6e-11*t1282*t479) + 0.80321*(-1.*t1243*t468 - 4.e-6*t1282*t468 - 1.000000000016*t1302*t479);
  p_output1[6]=1.;
  p_output1[7]=t1387*t213 + t1423*t266 + t1437*t355 + t1451*t391 - 1.*t1381*t399*t414 + t1480*t481 + t1499*t502 + t1514*t558 - 0.03875*(t1514*t468 + t1499*t479 + 4.e-6*t1480*t570) + 0.14871*(4.e-6*t1499*t479 + 4.e-6*t1514*t570 + t1480*t587) + 0.80321*(-4.e-6*t1480*t479 - 1.*t1514*t479 + t1499*t638);
  p_output1[8]=t1571*t355 + t1580*t391 + t1368*t245*t266*t399 + t1601*t481 + t1613*t502 + t1620*t558 - 0.03875*(t1620*t468 + t1613*t479 + 4.e-6*t1601*t570) + 0.14871*(4.e-6*t1613*t479 + 4.e-6*t1620*t570 + t1601*t587) + 0.80321*(-4.e-6*t1601*t479 - 1.*t1620*t479 + t1613*t638) + t1368*t414*t64 - 1.*t1368*t213*t399*t73;
  p_output1[9]=t1666*t213 + t1675*t266 + t1690*t355 + t1696*t391 + t1710*t481 + t1721*t502 + t1726*t558 - 0.03875*(t1726*t468 + t1721*t479 + 4.e-6*t1710*t570) + 0.14871*(4.e-6*t1721*t479 + 4.e-6*t1726*t570 + t1710*t587) + 0.80321*(-4.e-6*t1710*t479 - 1.*t1726*t479 + t1721*t638);
  p_output1[10]=t1784*t355 + t1788*t391 + t1798*t481 + t1808*t502 + t1823*t558 - 0.03875*(t1823*t468 + t1808*t479 + 4.e-6*t1798*t570) + 0.14871*(4.e-6*t1808*t479 + 4.e-6*t1823*t570 + t1798*t587) + 0.80321*(-4.e-6*t1798*t479 - 1.*t1823*t479 + t1808*t638) + t1675*t916 + t1776*t932;
  p_output1[11]=t1029*t1876 + t1885*t481 + t1901*t502 + t1907*t558 - 0.03875*(t1907*t468 + t1901*t479 + 4.e-6*t1885*t570) + 0.14871*(4.e-6*t1901*t479 + 4.e-6*t1907*t570 + t1885*t587) + 0.80321*(-4.e-6*t1885*t479 - 1.*t1907*t479 + t1901*t638) - 1.*t1368*t399*t973 + t1788*t992;
  p_output1[12]=t1265*t1969 + t1291*t1977 + t1308*t1982 - 0.03875*(t2005 + t2007 + t1982*t468) + 0.14871*(4.e-6*t1982*t468 - 4.e-6*t1969*t479 - 1.6e-11*t1977*t479) + 0.80321*(-1.*t1969*t468 - 4.e-6*t1977*t468 - 1.000000000016*t1982*t479);
  p_output1[13]=1.;
  p_output1[14]=t1675*t213 + t1776*t266 + t1788*t355 + t1876*t391 - 1.*t1368*t399*t414 + t1977*t481 + t1982*t502 + t1969*t558 - 0.03875*(t1969*t468 + t1982*t479 + 4.e-6*t1977*t570) + 0.14871*(4.e-6*t1982*t479 + 4.e-6*t1969*t570 + t1977*t587) + 0.80321*(t2005 + t2007 + t1982*t638);
  p_output1[15]=t2082*t355 + t2094*t391 - 1.*t1381*t245*t266*t399 + t2112*t481 + t2128*t502 + t2135*t558 - 0.03875*(t2135*t468 + t2128*t479 + 4.e-6*t2112*t570) + 0.14871*(4.e-6*t2128*t479 + 4.e-6*t2135*t570 + t2112*t587) + 0.80321*(-4.e-6*t2112*t479 - 1.*t2135*t479 + t2128*t638) - 1.*t1381*t414*t64 + t1381*t213*t399*t73;
  p_output1[16]=t1423*t213 + t2192*t266 + t2198*t355 + t2208*t391 + t2217*t481 + t2236*t502 + t2255*t558 - 0.03875*(t2255*t468 + t2236*t479 + 4.e-6*t2217*t570) + 0.14871*(4.e-6*t2236*t479 + 4.e-6*t2255*t570 + t2217*t587) + 0.80321*(-4.e-6*t2217*t479 - 1.*t2255*t479 + t2236*t638);
  p_output1[17]=t2340*t355 + t2345*t391 + t2352*t481 + t2366*t502 + t2375*t558 - 0.03875*(t2375*t468 + t2366*t479 + 4.e-6*t2352*t570) + 0.14871*(4.e-6*t2366*t479 + 4.e-6*t2375*t570 + t2352*t587) + 0.80321*(-4.e-6*t2352*t479 - 1.*t2375*t479 + t2366*t638) + t2192*t916 + t2332*t932;
  p_output1[18]=t1029*t2430 + t2442*t481 + t2450*t502 + t2459*t558 - 0.03875*(t2459*t468 + t2450*t479 + 4.e-6*t2442*t570) + 0.14871*(4.e-6*t2450*t479 + 4.e-6*t2459*t570 + t2442*t587) + 0.80321*(-4.e-6*t2442*t479 - 1.*t2459*t479 + t2450*t638) + t1381*t399*t973 + t2345*t992;
  p_output1[19]=t1265*t2504 + t1291*t2513 + t1308*t2518 - 0.03875*(t2518*t468 - 1.*t2504*t479 - 4.e-6*t2513*t479) + 0.14871*(4.e-6*t2518*t468 - 4.e-6*t2504*t479 - 1.6e-11*t2513*t479) + 0.80321*(-1.*t2504*t468 - 4.e-6*t2513*t468 - 1.000000000016*t2518*t479);
  p_output1[20]=1.;
  p_output1[21]=t2640*t2647 + t2671*t2681 + t2730*t2756 + t2814*t2835 + t2871*t2888 - 0.148715*(t2756*t2900 + t2835*t2914 + t2888*t2923) - 0.038576*(t2756*t2943 + t2835*t2946 + t2888*t2954) - 0.80315*(t2756*t2970 + t2835*t2975 + t2888*t2981) + t2599*t399 - 1.*t245*t2616*t64 + t2619*t64*t73;
  p_output1[22]=t3013 + t3028 + t3043 + t3053 + t3061 + t3075 + t3093 + t3102 - 1.*t245*t2619*t399 - 1.*t2616*t399*t73;
  p_output1[23]=t3013 + t3028 + t3043 + t3053 + t3061 + t3075 + t3093 + t3102 + t245*t3113*t399 - 1.*t3118*t399*t73;
  p_output1[24]=t3009*t3185 + t3204*t3221 + t2871*t3234 + t2814*t3264 + t2730*t3282 - 0.148715*(t2923*t3234 + t2914*t3264 + t2900*t3282) - 0.038576*(t2954*t3234 + t2946*t3264 + t2943*t3282) - 0.80315*(t2981*t3234 + t2975*t3264 + t2970*t3282) + t3151*t64;
  p_output1[25]=t3340*t3346 + t3365*t3382 + t3400*t3405 - 0.80315*(-1.000000000016*t2708*t3346 + t3382*t3413 + t3405*t3417) - 0.038576*(-1.000000000049*t2708*t3382 + t3346*t3423 + t3405*t3427) - 0.148715*(-6.5e-11*t2708*t3405 + t3346*t3437 + t3382*t3441);
  p_output1[26]=1.;
  p_output1[27]=t1423*t2616 + t1387*t2619 + t2640*t3463 + t2671*t3487 + t2730*t3499 + t2814*t3509 + t2871*t3523 - 0.148715*(t2900*t3499 + t2914*t3509 + t2923*t3523) - 0.038576*(t2943*t3499 + t2946*t3509 + t2954*t3523) - 0.80315*(t2970*t3499 + t2975*t3509 + t2981*t3523) - 1.*t1381*t2599*t399;
  p_output1[28]=t2640*t3607 + t2671*t3613 + t2730*t3622 + t2814*t3636 + t2871*t3644 - 0.148715*(t2900*t3622 + t2914*t3636 + t2923*t3644) - 0.038576*(t2943*t3622 + t2946*t3636 + t2954*t3644) - 0.80315*(t2970*t3622 + t2975*t3636 + t2981*t3644) + t1368*t245*t2616*t399 + t1368*t2599*t64 - 1.*t1368*t2619*t399*t73;
  p_output1[29]=t1675*t2616 + t1666*t2619 + t2671*t3727 + t2640*t3751 + t2871*t3764 + t2814*t3775 + t2730*t3784 - 0.148715*(t2923*t3764 + t2914*t3775 + t2900*t3784) - 0.038576*(t2954*t3764 + t2946*t3775 + t2943*t3784) - 0.80315*(t2981*t3764 + t2975*t3775 + t2970*t3784);
  p_output1[30]=t1776*t3113 + t1675*t3118 + t2671*t3851 + t2640*t3858 + t2871*t3868 + t2814*t3883 + t2730*t3893 - 0.148715*(t2923*t3868 + t2914*t3883 + t2900*t3893) - 0.038576*(t2954*t3868 + t2946*t3883 + t2943*t3893) - 0.80315*(t2981*t3868 + t2975*t3883 + t2970*t3893);
  p_output1[31]=t3185*t3851 + t3204*t3940 + t2871*t3955 + t2814*t3971 + t2730*t3982 - 0.148715*(t2923*t3955 + t2914*t3971 + t2900*t3982) - 0.038576*(t2954*t3955 + t2946*t3971 + t2943*t3982) - 0.80315*(t2981*t3955 + t2975*t3971 + t2970*t3982) - 1.*t1368*t3151*t399;
  p_output1[32]=t3340*t4026 + t3365*t4036 + t3400*t4049 - 0.148715*(t3437*t4026 + t3441*t4036 - 6.5e-11*t2708*t4049) - 0.80315*(-1.000000000016*t2708*t4026 + t3413*t4036 + t3417*t4049) - 0.038576*(t3423*t4026 - 1.000000000049*t2708*t4036 + t3427*t4049);
  p_output1[33]=1.;
  p_output1[34]=t1776*t2616 + t1675*t2619 + t2640*t3851 + t2671*t3940 - 1.*t1368*t2599*t399 + t2730*t4026 + t2814*t4036 + t2871*t4049 - 0.148715*(t2900*t4026 + t2914*t4036 + t2923*t4049) - 0.038576*(t2943*t4026 + t2946*t4036 + t2954*t4049) - 0.80315*(t2970*t4026 + t2975*t4036 + t2981*t4049);
  p_output1[35]=-1.*t1381*t245*t2616*t399 + t2640*t4198 + t2671*t4216 + t2730*t4224 + t2814*t4241 + t2871*t4257 - 0.148715*(t2900*t4224 + t2914*t4241 + t2923*t4257) - 0.038576*(t2943*t4224 + t2946*t4241 + t2954*t4257) - 0.80315*(t2970*t4224 + t2975*t4241 + t2981*t4257) - 1.*t1381*t2599*t64 + t1381*t2619*t399*t73;
  p_output1[36]=t2192*t2616 + t1423*t2619 + t2671*t4327 + t2640*t4335 + t2871*t4343 + t2814*t4357 + t2730*t4367 - 0.148715*(t2923*t4343 + t2914*t4357 + t2900*t4367) - 0.038576*(t2954*t4343 + t2946*t4357 + t2943*t4367) - 0.80315*(t2981*t4343 + t2975*t4357 + t2970*t4367);
  p_output1[37]=t2332*t3113 + t2192*t3118 + t2671*t4417 + t2640*t4420 + t2871*t4430 + t2814*t4446 + t2730*t4453 - 0.148715*(t2923*t4430 + t2914*t4446 + t2900*t4453) - 0.038576*(t2954*t4430 + t2946*t4446 + t2943*t4453) - 0.80315*(t2981*t4430 + t2975*t4446 + t2970*t4453);
  p_output1[38]=t1381*t3151*t399 + t3185*t4417 + t3204*t4525 + t2871*t4546 + t2814*t4564 + t2730*t4578 - 0.148715*(t2923*t4546 + t2914*t4564 + t2900*t4578) - 0.038576*(t2954*t4546 + t2946*t4564 + t2943*t4578) - 0.80315*(t2981*t4546 + t2975*t4564 + t2970*t4578);
  p_output1[39]=t3340*t4629 + t3365*t4643 + t3400*t4656 - 0.148715*(t3437*t4629 + t3441*t4643 - 6.5e-11*t2708*t4656) - 0.80315*(-1.000000000016*t2708*t4629 + t3413*t4643 + t3417*t4656) - 0.038576*(t3423*t4629 - 1.000000000049*t2708*t4643 + t3427*t4656);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_TrotStance1.hh"

namespace TrotStance1
{

void J_output_boundary_TrotStance1_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
