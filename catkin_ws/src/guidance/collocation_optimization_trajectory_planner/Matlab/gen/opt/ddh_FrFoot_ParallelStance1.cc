/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:11:26 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t318;
  double t298;
  double t381;
  double t262;
  double t322;
  double t338;
  double t355;
  double t595;
  double t302;
  double t308;
  double t383;
  double t211;
  double t547;
  double t569;
  double t592;
  double t607;
  double t622;
  double t531;
  double t709;
  double t726;
  double t731;
  double t748;
  double t761;
  double t837;
  double t853;
  double t869;
  double t221;
  double t259;
  double t260;
  double t278;
  double t659;
  double t677;
  double t706;
  double t1152;
  double t1170;
  double t1191;
  double t1202;
  double t1224;
  double t1266;
  double t1280;
  double t908;
  double t919;
  double t1338;
  double t1402;
  double t1410;
  double t1422;
  double t1466;
  double t1468;
  double t1530;
  double t1546;
  double t1600;
  double t1602;
  double t624;
  double t823;
  double t871;
  double t892;
  double t930;
  double t946;
  double t1012;
  double t1014;
  double t1072;
  double t1081;
  double t1082;
  double t1118;
  double t1328;
  double t1429;
  double t1614;
  double t1651;
  double t1694;
  double t1695;
  double t1722;
  double t1749;
  double t1751;
  double t1773;
  double t392;
  double t453;
  double t463;
  double t493;
  double t1692;
  double t1796;
  double t1812;
  double t2201;
  double t2205;
  double t2235;
  double t2254;
  double t2256;
  double t2261;
  double t1859;
  double t1861;
  double t1892;
  double t1914;
  double t425;
  double t508;
  double t519;
  double t2014;
  double t2027;
  double t2032;
  double t2113;
  double t2117;
  double t2121;
  double t2126;
  double t2136;
  double t1933;
  double t1949;
  double t1972;
  double t1995;
  double t895;
  double t1024;
  double t1067;
  double t1818;
  double t1825;
  double t1834;
  double t1849;
  double t1928;
  double t2163;
  double t2178;
  double t2198;
  double t2238;
  double t2303;
  double t2324;
  double t2338;
  double t2339;
  double t2346;
  double t2347;
  double t2384;
  double t2395;
  double t2404;
  double t2405;
  double t2424;
  double t2461;
  double t2611;
  double t2612;
  double t2614;
  double t2625;
  double t2630;
  double t2668;
  double t2669;
  double t2672;
  double t2459;
  double t2467;
  double t2499;
  double t2508;
  double t2553;
  double t2569;
  double t2570;
  double t2572;
  double t2582;
  double t2592;
  double t2622;
  double t2665;
  double t2700;
  double t2706;
  double t2719;
  double t2722;
  double t2731;
  double t2781;
  double t2823;
  double t2831;
  double t2837;
  double t2906;
  double t2910;
  double t2975;
  double t2983;
  double t2987;
  double t3008;
  double t3027;
  double t2985;
  double t3040;
  double t3044;
  double t3047;
  double t3095;
  double t3142;
  double t3167;
  double t3201;
  double t3245;
  double t3249;
  double t165;
  double t178;
  double t3365;
  double t3317;
  double t3384;
  double t3387;
  double t3417;
  double t3453;
  double t3468;
  double t3471;
  double t3760;
  double t3776;
  double t3778;
  double t3779;
  double t3784;
  double t3785;
  double t3790;
  double t3791;
  double t3798;
  double t3800;
  double t3806;
  double t3807;
  double t3829;
  double t3836;
  double t3840;
  double t3849;
  double t3480;
  double t3486;
  double t3487;
  double t3489;
  double t3581;
  double t3607;
  double t3608;
  double t3630;
  double t3704;
  double t3729;
  double t3735;
  double t3740;
  double t4005;
  double t4011;
  double t4030;
  double t3982;
  double t3986;
  double t3989;
  double t4045;
  double t4052;
  double t4058;
  double t4117;
  double t4122;
  double t4132;
  double t4071;
  double t4097;
  double t4100;
  double t4111;
  double t4149;
  double t4151;
  double t4155;
  double t4157;
  double t4167;
  double t4177;
  double t4178;
  double t4187;
  double t4234;
  double t4238;
  double t4240;
  double t4254;
  double t4281;
  double t4293;
  double t4294;
  double t4299;
  double t4300;
  double t4301;
  double t4305;
  double t4307;
  double t4308;
  double t4311;
  double t4319;
  double t4320;
  double t4326;
  double t4393;
  double t4402;
  double t4417;
  double t4349;
  double t4359;
  double t4377;
  double t4426;
  double t4430;
  double t4433;
  double t4462;
  double t4466;
  double t4471;
  double t4442;
  double t4455;
  double t4458;
  double t4459;
  double t4474;
  double t4484;
  double t4485;
  double t4501;
  double t4508;
  double t4511;
  double t4527;
  double t4534;
  double t4542;
  double t4544;
  double t4545;
  double t4614;
  double t4618;
  double t4623;
  double t4638;
  double t4649;
  double t4650;
  double t4657;
  double t4660;
  double t4630;
  double t4652;
  double t4663;
  double t4667;
  double t4676;
  double t4679;
  double t4686;
  double t4696;
  double t4733;
  double t4735;
  double t4737;
  double t4740;
  double t4743;
  double t4745;
  double t4746;
  double t4755;
  double t4736;
  double t4744;
  double t4756;
  double t4757;
  double t4763;
  double t4766;
  double t4768;
  double t4769;
  double t4813;
  double t4814;
  double t4816;
  double t4817;
  double t4669;
  double t4707;
  double t4710;
  double t4714;
  double t4715;
  double t4723;
  double t4793;
  double t4805;
  double t4808;
  double t4809;
  double t4811;
  double t5014;
  double t5020;
  double t5044;
  double t4860;
  double t5126;
  double t5128;
  double t5151;
  double t5152;
  double t5153;
  double t5155;
  double t5171;
  double t5190;
  double t5192;
  double t5193;
  double t5011;
  double t5037;
  double t5052;
  double t5065;
  double t5078;
  double t5084;
  double t5087;
  double t5096;
  double t5267;
  double t5270;
  double t5271;
  double t5240;
  double t5256;
  double t5260;
  double t5221;
  double t5227;
  double t5229;
  double t5230;
  double t5263;
  double t5272;
  double t5274;
  double t5306;
  double t5307;
  double t5332;
  double t5346;
  double t5347;
  double t5350;
  double t4781;
  double t4783;
  double t4784;
  double t4760;
  double t4770;
  double t4772;
  double t4824;
  double t5377;
  double t5384;
  double t5394;
  double t5401;
  double t5414;
  double t5415;
  double t5439;
  double t5444;
  double t5456;
  double t5400;
  double t5491;
  double t5492;
  double t5493;
  double t5475;
  double t5489;
  double t5509;
  double t5512;
  double t5513;
  double t5516;
  double t5517;
  double t5518;
  double t5527;
  double t5530;
  double t5532;
  double t5603;
  double t5606;
  double t5608;
  double t5609;
  double t5610;
  double t5612;
  double t5669;
  double t5675;
  double t5680;
  double t5685;
  double t5696;
  double t5702;
  double t5707;
  double t5719;
  double t5720;
  double t5721;
  double t5634;
  double t5635;
  double t5638;
  double t5614;
  double t5581;
  double t5589;
  double t5598;
  double t5820;
  double t5822;
  double t5826;
  double t5768;
  double t5771;
  double t5774;
  double t5780;
  double t5785;
  double t5790;
  double t5754;
  double t5755;
  double t5762;
  double t5794;
  double t5799;
  double t5800;
  double t5801;
  double t5831;
  double t5835;
  double t5837;
  double t5840;
  double t5843;
  double t5928;
  double t5929;
  double t5931;
  double t5942;
  double t5968;
  double t5971;
  double t5974;
  double t6019;
  double t5985;
  double t5984;
  double t5986;
  double t5996;
  double t5998;
  double t6035;
  double t6038;
  double t6039;
  double t6040;
  double t6042;
  double t6130;
  double t6140;
  double t6142;
  double t6163;
  double t6165;
  double t6166;
  double t6209;
  double t6175;
  double t6247;
  double t6248;
  double t6249;
  double t6251;
  double t6260;
  double t6262;
  double t6263;
  double t6264;
  double t6274;
  double t6275;
  double t6276;
  double t6277;
  double t6279;
  double t6280;
  double t6293;
  double t6294;
  double t6297;
  double t6299;
  double t6300;
  double t6303;
  double t6417;
  double t6419;
  double t6422;
  double t6429;
  double t6432;
  double t6447;
  double t6288;
  double t6319;
  double t6324;
  double t6334;
  double t6337;
  double t6342;
  double t6393;
  double t6395;
  double t6399;
  double t6387;
  double t6390;
  double t6400;
  double t6527;
  double t6728;
  double t6730;
  double t6731;
  double t6738;
  double t6741;
  double t6749;
  double t6758;
  double t6765;
  double t6270;
  double t6271;
  double t6272;
  double t6252;
  double t6265;
  double t6267;
  double t6472;
  double t6476;
  double t6482;
  double t6426;
  double t6448;
  double t6451;
  double t6511;
  double t6886;
  double t6891;
  double t6895;
  double t6391;
  double t6873;
  double t6881;
  double t6882;
  double t6906;
  double t6909;
  double t6917;
  double t6928;
  double t6929;
  double t6932;
  double t6809;
  double t6817;
  double t6828;
  double t6784;
  double t6796;
  double t6801;
  double t6779;
  double t6781;
  double t6808;
  double t6831;
  double t6836;
  double t6985;
  double t6990;
  double t6995;
  double t7000;
  double t7002;
  double t7003;
  double t6948;
  double t6949;
  double t6959;
  double t6899;
  double t6901;
  double t6904;
  double t6897;
  double t6933;
  double t7035;
  double t7036;
  double t7037;
  double t6947;
  double t6965;
  double t7026;
  double t7030;
  double t7033;
  double t7057;
  double t7058;
  double t7059;
  double t7064;
  double t7067;
  double t7068;
  double t7180;
  double t7182;
  double t7185;
  double t7186;
  double t7187;
  double t7190;
  double t7206;
  double t7207;
  double t7210;
  double t7222;
  double t7230;
  double t7244;
  double t7245;
  double t7250;
  double t7252;
  double t7259;
  double t7266;
  double t7270;
  double t7271;
  double t7272;
  double t7273;
  double t7274;
  double t7283;
  double t7284;
  double t7289;
  double t7293;
  double t7294;
  double t7296;
  double t7300;
  double t7306;
  double t7309;
  double t7298;
  double t7310;
  double t7312;
  double t7314;
  double t7318;
  double t7321;
  double t7322;
  double t7323;
  double t7324;
  double t7326;
  double t3315;
  double t279;
  double t3364;
  double t3380;
  double t7336;
  double t7338;
  double t7344;
  double t7354;
  double t7355;
  double t7356;
  double t3449;
  double t7416;
  double t7425;
  double t7432;
  double t7438;
  double t7441;
  double t7446;
  double t7449;
  double t7452;
  double t7454;
  double t7455;
  double t7456;
  double t7457;
  double t7458;
  double t7461;
  double t7464;
  double t3477;
  double t3478;
  double t7367;
  double t7371;
  double t7372;
  double t7401;
  double t7402;
  double t7405;
  double t3538;
  double t3553;
  double t3561;
  double t3645;
  double t3676;
  double t3681;
  double t7520;
  double t7522;
  double t7523;
  double t7526;
  double t7530;
  double t7534;
  double t7539;
  double t7542;
  double t7544;
  double t7476;
  double t7477;
  double t7479;
  double t7480;
  double t7482;
  double t7483;
  double t7486;
  double t7493;
  double t7499;
  double t7502;
  double t7503;
  double t7504;
  double t7614;
  double t7627;
  double t7672;
  double t7677;
  double t7679;
  double t7680;
  double t7686;
  double t7688;
  double t7690;
  double t7697;
  double t7698;
  double t7701;
  double t5550;
  double t5553;
  double t5554;
  double t7613;
  double t7757;
  double t5236;
  double t5285;
  double t5294;
  double t7778;
  double t7784;
  double t7957;
  double t7960;
  double t7980;
  double t7981;
  double t8108;
  double t8120;
  double t8132;
  double t8148;
  double t6216;
  double t6217;
  double t6225;
  double t6183;
  double t6184;
  double t6193;
  double t6149;
  double t8315;
  double t8327;
  double t7106;
  double t7116;
  double t7119;
  double t8326;
  double t8318;
  double t6783;
  double t6847;
  double t6854;
  double t8617;
  double t8623;
  double t7042;
  double t7043;
  double t7044;
  double t8629;
  double t8633;
  double t8727;
  double t8734;
  double t8735;
  double t8742;
  double t8748;
  double t8749;
  double t8751;
  double t8753;
  double t8759;
  double t8764;
  double t8765;
  double t8775;
  double t8776;
  double t8777;
  double t8778;
  double t8779;
  double t8780;
  double t8785;
  double t8789;
  double t8790;
  double t8791;
  double t8792;
  double t8793;
  double t8794;
  double t8818;
  double t8820;
  double t8825;
  double t8827;
  double t8804;
  double t8808;
  double t8809;
  double t8812;
  double t8800;
  double t8802;
  double t8814;
  double t8829;
  double t8830;
  double t8831;
  double t8834;
  double t8835;
  double t8838;
  double t8841;
  double t8842;
  double t8844;
  double t8847;
  double t8851;
  double t8852;
  double t8875;
  double t8877;
  double t8881;
  double t8886;
  double t8887;
  double t8888;
  double t8891;
  double t8893;
  double t8894;
  double t8895;
  double t8896;
  double t8899;
  double t8900;
  double t8901;
  double t8906;
  double t8857;
  double t8859;
  double t8860;
  double t8870;
  double t8872;
  double t8873;
  double t8941;
  double t8942;
  double t8944;
  double t8945;
  double t8948;
  double t8949;
  double t8952;
  double t8954;
  double t8955;
  double t8910;
  double t8911;
  double t8912;
  double t8914;
  double t8916;
  double t8917;
  double t8918;
  double t8919;
  double t8923;
  double t8924;
  double t8925;
  double t8926;
  double t9010;
  double t9012;
  double t9021;
  double t9022;
  double t9070;
  double t9071;
  double t9079;
  double t9080;
  double t9121;
  double t9130;
  double t9176;
  double t9178;
  double t9179;
  double t9180;
  double t9181;
  double t9183;
  double t9184;
  double t9166;
  double t9167;
  double t9168;
  double t9169;
  double t9170;
  double t9171;
  double t9172;
  double t9131;
  double t9119;
  double t9195;
  double t9197;
  double t9204;
  double t9206;
  double t9274;
  double t9292;
  double t9291;
  double t9277;
  double t9341;
  double t9345;
  double t9350;
  double t9355;
  t318 = Cos(var1[11]);
  t298 = Cos(var1[10]);
  t381 = -1. + t318;
  t262 = Sin(var1[9]);
  t322 = -1.*t318;
  t338 = 1. + t322;
  t355 = 1.6e-11*t338;
  t595 = Sin(var1[11]);
  t302 = -1.*t298;
  t308 = 1. + t302;
  t383 = 1.6e-11*t381;
  t211 = Cos(var1[9]);
  t547 = -1.000000000016*t338;
  t569 = 1. + t547;
  t592 = 0.004352*t569;
  t607 = -0.9999910000159999*t595;
  t622 = t592 + t607;
  t531 = Sin(var1[10]);
  t709 = -1. + t355;
  t726 = 4.e-6*t709;
  t731 = 3.999964e-6*t338;
  t748 = -1.7408e-8*t595;
  t761 = t726 + t731 + t748;
  t837 = 0.999991*t318;
  t853 = 0.004352*t595;
  t869 = t383 + t837 + t853;
  t221 = -1.*t211;
  t259 = 1. + t221;
  t260 = 0.15121*t259;
  t278 = -0.15121*t262;
  t659 = -1. + t298;
  t677 = 1.6e-11*t659;
  t706 = 1. + t677;
  t1152 = -1.26e-8*var1[11];
  t1170 = 1. + t383;
  t1191 = -0.14871*t1170;
  t1202 = -1.64779999997447e-7*t338;
  t1224 = -1.59556e-7*t381;
  t1266 = -1.199987999968e-6*t595;
  t1280 = t1152 + t1191 + t1202 + t1224 + t1266;
  t908 = -1.000000000016*t308;
  t919 = 1. + t908;
  t1338 = 0.803147*t569;
  t1402 = 0.50315000001605*t338;
  t1410 = 0.00130540515936178*t595;
  t1422 = t1338 + t1402 + t1410;
  t1466 = -5.04e-14*var1[11];
  t1468 = -0.03988959484*t338;
  t1530 = 6.38224e-13*t381;
  t1546 = -0.041195*t318;
  t1600 = 0.299996999992*t595;
  t1602 = t1466 + t1468 + t1530 + t1546 + t1600;
  t624 = -4.e-6*t531*t622;
  t823 = t706*t761;
  t871 = 4.e-6*t308*t869;
  t892 = 0. + t624 + t823 + t871;
  t930 = t919*t622;
  t946 = 4.e-6*t531*t761;
  t1012 = -1.*t531*t869;
  t1014 = 0. + t930 + t946 + t1012;
  t1072 = -1.2484e-7*var1[10];
  t1081 = 2.479936e-18*t308;
  t1082 = -1.54996e-7*t659;
  t1118 = 1.124840000016e-6*t531;
  t1328 = t706*t1280;
  t1429 = -4.e-6*t531*t1422;
  t1614 = 4.e-6*t308*t1602;
  t1651 = t1072 + t1081 + t1082 + t1118 + t1328 + t1429 + t1614;
  t1694 = 0.281210000008499*t308;
  t1695 = -0.03874900000062*t531;
  t1722 = 4.e-6*t531*t1280;
  t1749 = t919*t1422;
  t1751 = -1.*t531*t1602;
  t1773 = t1694 + t1695 + t1722 + t1749 + t1751;
  t392 = -1. + t355 + t383;
  t453 = 4.e-6*t381;
  t463 = -4.e-6*t318;
  t493 = t453 + t463;
  t1692 = -1.*t262*t1651;
  t1796 = t211*t1773;
  t1812 = t260 + t278 + t1692 + t1796;
  t2201 = t706*t392;
  t2205 = 4.e-6*t308*t493;
  t2235 = t2201 + t2205;
  t2254 = 4.e-6*t392*t531;
  t2256 = -1.*t493*t531;
  t2261 = t2254 + t2256;
  t1859 = -0.15121*t259;
  t1861 = t211*t1651;
  t1892 = t262*t1773;
  t1914 = t1859 + t278 + t1861 + t1892;
  t425 = 4.e-6*t308*t392;
  t508 = t298*t493;
  t519 = t425 + t508;
  t2014 = -4.9936e-13*var1[10];
  t2027 = -0.038749*t308;
  t2032 = 6.19984e-13*t659;
  t2113 = -0.281210000004*t531;
  t2117 = 4.e-6*t308*t1280;
  t2121 = t531*t1422;
  t2126 = t298*t1602;
  t2136 = 0. + t2014 + t2027 + t2032 + t2113 + t2117 + t2121 + t2126;
  t1933 = t531*t622;
  t1949 = 4.e-6*t308*t761;
  t1972 = t298*t869;
  t1995 = 0. + t1933 + t1949 + t1972;
  t895 = -1.*t262*t892;
  t1024 = t211*t1014;
  t1067 = 0. + t895 + t1024;
  t1818 = -1.*t1067*t1812;
  t1825 = t211*t892;
  t1834 = t262*t1014;
  t1849 = 0. + t1825 + t1834;
  t1928 = -1.*t1849*t1914;
  t2163 = -1.*t1995*t2136;
  t2178 = t1818 + t1928 + t2163;
  t2198 = t519*t2178;
  t2238 = -1.*t2235*t262;
  t2303 = t211*t2261;
  t2324 = t2238 + t2303;
  t2338 = t2324*t1812;
  t2339 = t211*t2235;
  t2346 = t262*t2261;
  t2347 = t2339 + t2346;
  t2384 = t2347*t1914;
  t2395 = t519*t2136;
  t2404 = t2338 + t2384 + t2395;
  t2405 = t2404*t1995;
  t2424 = t2198 + t2405;
  t2461 = t2014 + t2027 + t2032 + t2113 + t2117 + t2121 + t2126;
  t2611 = -1.7408e-8*t338;
  t2612 = -3.999964e-6*t595;
  t2614 = t2611 + t2612;
  t2625 = 0.999991*t569;
  t2630 = t2625 + t853;
  t2668 = -0.004352*t318;
  t2669 = 0.999991*t595;
  t2672 = t2668 + t2669;
  t2459 = -1.*t892*t1651;
  t2467 = -1.*t1995*t2461;
  t2499 = -1.*t1014*t1773;
  t2508 = t2459 + t2467 + t2499;
  t2553 = t519*t2508;
  t2569 = t2235*t1651;
  t2570 = t519*t2461;
  t2572 = t2261*t1773;
  t2582 = t2569 + t2570 + t2572;
  t2592 = t2582*t1995;
  t2622 = t706*t2614;
  t2665 = -4.e-6*t531*t2630;
  t2700 = 4.e-6*t308*t2672;
  t2706 = 0. + t2622 + t2665 + t2700;
  t2719 = -0.15121*t2706;
  t2722 = 4.e-6*t531*t2614;
  t2731 = t919*t2630;
  t2781 = -1.*t531*t2672;
  t2823 = 0. + t2722 + t2731 + t2781;
  t2831 = -0.15121*t2823;
  t2837 = t2553 + t2592 + t2719 + t2831;
  t2906 = -1.*t1280*t761;
  t2910 = -1.*t622*t1422;
  t2975 = -1.*t869*t1602;
  t2983 = t2906 + t2910 + t2975;
  t2987 = t392*t1280;
  t3008 = t493*t1602;
  t3027 = t2987 + t3008;
  t2985 = -1.*t493*t2983;
  t3040 = -1.*t3027*t869;
  t3044 = t2985 + t3040;
  t3047 = 4.e-6*t3044;
  t3095 = -1.*t392*t2983;
  t3142 = 1.e-6*t2614;
  t3167 = -1.*t3027*t761;
  t3201 = -0.038749*t2630;
  t3245 = -0.28121*t2672;
  t3249 = t3047 + t3095 + t3142 + t3167 + t3201 + t3245;
  t165 = Cos(var1[4]);
  t178 = Cos(var1[5]);
  t3365 = Sin(var1[5]);
  t3317 = Sin(var1[4]);
  t3384 = -1.*t165*t178*t262;
  t3387 = -1.*t211*t165*t3365;
  t3417 = t3384 + t3387;
  t3453 = t211*t165*t178;
  t3468 = -1.*t165*t262*t3365;
  t3471 = t3453 + t3468;
  t3760 = 4.e-6*t308*t2614;
  t3776 = t531*t2630;
  t3778 = t298*t2672;
  t3779 = 0. + t3760 + t3776 + t3778;
  t3784 = t3779*t3317;
  t3785 = -1.*t262*t2706;
  t3790 = t211*t2823;
  t3791 = 0. + t3785 + t3790;
  t3798 = t178*t3791;
  t3800 = t211*t2706;
  t3806 = t262*t2823;
  t3807 = 0. + t3800 + t3806;
  t3829 = -1.*t3807*t3365;
  t3836 = 0. + t3798 + t3829;
  t3840 = t165*t3836;
  t3849 = 0. + t3784 + t3840;
  t3480 = t531*t3317;
  t3486 = -4.e-6*t531*t3417;
  t3487 = t919*t3471;
  t3489 = t3480 + t3486 + t3487;
  t3581 = t298*t3317;
  t3607 = 4.e-6*t308*t3417;
  t3608 = -1.*t531*t3471;
  t3630 = t3581 + t3607 + t3608;
  t3704 = 4.e-6*t308*t3317;
  t3729 = t706*t3417;
  t3735 = 4.e-6*t531*t3471;
  t3740 = t3704 + t3729 + t3735;
  t4005 = t178*t2347;
  t4011 = t2324*t3365;
  t4030 = t4005 + t4011;
  t3982 = t178*t1849;
  t3986 = t1067*t3365;
  t3989 = 0. + t3982 + t3986;
  t4045 = t178*t1914;
  t4052 = t1812*t3365;
  t4058 = 0. + t4045 + t4052;
  t4117 = t178*t1812;
  t4122 = -1.*t1914*t3365;
  t4132 = 0. + t4117 + t4122;
  t4071 = t4030*t4058;
  t4097 = t178*t2324;
  t4100 = -1.*t2347*t3365;
  t4111 = t4097 + t4100;
  t4149 = t4111*t4132;
  t4151 = t2395 + t4071 + t4149;
  t4155 = t3989*t4151;
  t4157 = -1.*t3989*t4058;
  t4167 = t178*t1067;
  t4177 = -1.*t1849*t3365;
  t4178 = 0. + t4167 + t4177;
  t4187 = -1.*t4178*t4132;
  t4234 = t2163 + t4157 + t4187;
  t4238 = t4030*t4234;
  t4240 = t4155 + t4238;
  t4254 = Sin(var1[3]);
  t4281 = t178*t3807;
  t4293 = t3791*t3365;
  t4294 = 0. + t4281 + t4293;
  t4299 = t4254*t4294;
  t4300 = Cos(var1[3]);
  t4301 = t165*t3779;
  t4305 = -1.*t3317*t3836;
  t4307 = 0. + t4301 + t4305;
  t4308 = t4300*t4307;
  t4311 = 0. + t4299 + t4308;
  t4319 = t4300*t4294;
  t4320 = -1.*t4254*t4307;
  t4326 = 0. + t4319 + t4320;
  t4393 = t519*t3317;
  t4402 = t165*t4111;
  t4417 = t4393 + t4402;
  t4349 = t1995*t3317;
  t4359 = t165*t4178;
  t4377 = 0. + t4349 + t4359;
  t4426 = t2136*t3317;
  t4430 = t165*t4132;
  t4433 = 0. + t4426 + t4430;
  t4462 = t165*t2136;
  t4466 = -1.*t3317*t4132;
  t4471 = 0. + t4462 + t4466;
  t4442 = t4417*t4433;
  t4455 = t519*t165;
  t4458 = -1.*t3317*t4111;
  t4459 = t4455 + t4458;
  t4474 = t4459*t4471;
  t4484 = t4071 + t4442 + t4474;
  t4485 = t4377*t4484;
  t4501 = -1.*t4377*t4433;
  t4508 = t165*t1995;
  t4511 = -1.*t3317*t4178;
  t4527 = 0. + t4508 + t4511;
  t4534 = -1.*t4527*t4471;
  t4542 = t4157 + t4501 + t4534;
  t4544 = t4417*t4542;
  t4545 = t4485 + t4544;
  t4614 = 0.00130540515936178*t318;
  t4618 = -0.2999969999968001*t595;
  t4623 = t4614 + t4618;
  t4638 = -1.199987999968e-6*t318;
  t4649 = -5.2216206374471e-9*t595;
  t4650 = -1.26e-8 + t4638 + t4649;
  t4657 = 0.299996999992*t318;
  t4660 = -5.04e-14 + t4657 + t1410;
  t4630 = -4.e-6*t531*t4623;
  t4652 = t706*t4650;
  t4663 = 4.e-6*t308*t4660;
  t4667 = t4630 + t4652 + t4663;
  t4676 = t919*t4623;
  t4679 = 4.e-6*t531*t4650;
  t4686 = -1.*t531*t4660;
  t4696 = t4676 + t4679 + t4686;
  t4733 = 0.004352*t318;
  t4735 = t4733 + t607;
  t4737 = -0.9999910000159999*t318;
  t4740 = -0.00435200000006963*t595;
  t4743 = t4737 + t4740;
  t4745 = -1.7408e-8*t318;
  t4746 = 3.999964000064e-6*t595;
  t4755 = t4745 + t4746;
  t4736 = 4.e-6*t308*t4735;
  t4744 = -4.e-6*t531*t4743;
  t4756 = t706*t4755;
  t4757 = t4736 + t4744 + t4756;
  t4763 = -1.*t531*t4735;
  t4766 = t919*t4743;
  t4768 = 4.e-6*t531*t4755;
  t4769 = t4763 + t4766 + t4768;
  t4813 = t298*t4735;
  t4814 = t531*t4743;
  t4816 = 4.e-6*t308*t4755;
  t4817 = t4813 + t4814 + t4816;
  t4669 = -1.*t262*t4667;
  t4707 = t211*t4696;
  t4710 = t4669 + t4707;
  t4714 = t211*t4667;
  t4715 = t262*t4696;
  t4723 = t4714 + t4715;
  t4793 = t531*t4623;
  t4805 = 4.e-6*t308*t4650;
  t4808 = t298*t4660;
  t4809 = t4793 + t4805 + t4808;
  t4811 = -1.*t4809*t1995;
  t5014 = -3.999964e-6*t318;
  t5020 = t5014 + t748;
  t5044 = t837 + t853;
  t4860 = t519*t4809;
  t5126 = -1.*t622*t4623;
  t5128 = -1.*t761*t4650;
  t5151 = -1.*t1280*t4755;
  t5152 = -1.*t4743*t1422;
  t5153 = -1.*t4660*t869;
  t5155 = -1.*t4735*t1602;
  t5171 = t5126 + t5128 + t5151 + t5152 + t5153 + t5155;
  t5190 = t392*t4650;
  t5192 = t493*t4660;
  t5193 = t5190 + t5192;
  t5011 = -4.e-6*t531*t4735;
  t5037 = t706*t5020;
  t5052 = 4.e-6*t308*t5044;
  t5065 = t5011 + t5037 + t5052;
  t5078 = t919*t4735;
  t5084 = 4.e-6*t531*t5020;
  t5087 = -1.*t531*t5044;
  t5096 = t5078 + t5084 + t5087;
  t5267 = t211*t5065;
  t5270 = t262*t5096;
  t5271 = t5267 + t5270;
  t5240 = -1.*t262*t5065;
  t5256 = t211*t5096;
  t5260 = t5240 + t5256;
  t5221 = t531*t4735;
  t5227 = 4.e-6*t308*t5020;
  t5229 = t298*t5044;
  t5230 = t5221 + t5227 + t5229;
  t5263 = t178*t5260;
  t5272 = -1.*t5271*t3365;
  t5274 = t5263 + t5272;
  t5306 = t178*t5271;
  t5307 = t5260*t3365;
  t5332 = t5306 + t5307;
  t5346 = t165*t5230;
  t5347 = -1.*t3317*t5274;
  t5350 = t5346 + t5347;
  t4781 = t211*t4757;
  t4783 = t262*t4769;
  t4784 = t4781 + t4783;
  t4760 = -1.*t262*t4757;
  t4770 = t211*t4769;
  t4772 = t4760 + t4770;
  t4824 = -1.*t4817*t2136;
  t5377 = t178*t4723;
  t5384 = t4710*t3365;
  t5394 = t5377 + t5384;
  t5401 = t178*t4710;
  t5414 = -1.*t4723*t3365;
  t5415 = t5401 + t5414;
  t5439 = t178*t4784;
  t5444 = t4772*t3365;
  t5456 = t5439 + t5444;
  t5400 = t4030*t5394;
  t5491 = t178*t4772;
  t5492 = -1.*t4784*t3365;
  t5493 = t5491 + t5492;
  t5475 = -1.*t5394*t3989;
  t5489 = -1.*t5456*t4058;
  t5509 = t4809*t3317;
  t5512 = t165*t5415;
  t5513 = t5509 + t5512;
  t5516 = t165*t4809;
  t5517 = -1.*t3317*t5415;
  t5518 = t5516 + t5517;
  t5527 = t4817*t3317;
  t5530 = t165*t5493;
  t5532 = t5527 + t5530;
  t5603 = -0.15121*t211;
  t5606 = t5603 + t278 + t1692 + t1796;
  t5608 = 0.15121*t262;
  t5609 = -1.*t211*t1651;
  t5610 = -1.*t262*t1773;
  t5612 = t5603 + t5608 + t5609 + t5610;
  t5669 = -1.*t211*t2706;
  t5675 = -1.*t262*t2823;
  t5680 = t5669 + t5675;
  t5685 = t178*t5680;
  t5696 = t3785 + t3790;
  t5702 = -1.*t5696*t3365;
  t5707 = t5685 + t5702;
  t5719 = t178*t5696;
  t5720 = t5680*t3365;
  t5721 = t5719 + t5720;
  t5634 = -1.*t211*t2235;
  t5635 = -1.*t262*t2261;
  t5638 = t5634 + t5635;
  t5614 = t895 + t1024;
  t5581 = -1.*t211*t892;
  t5589 = -1.*t262*t1014;
  t5598 = t5581 + t5589;
  t5820 = t178*t5614;
  t5822 = t5598*t3365;
  t5826 = t5820 + t5822;
  t5768 = t178*t5612;
  t5771 = -1.*t5606*t3365;
  t5774 = t5768 + t5771;
  t5780 = t178*t5606;
  t5785 = t5612*t3365;
  t5790 = t5780 + t5785;
  t5754 = t5638*t3365;
  t5755 = t4097 + t5754;
  t5762 = t5755*t4058;
  t5794 = t4030*t5790;
  t5799 = t178*t5638;
  t5800 = -1.*t2324*t3365;
  t5801 = t5799 + t5800;
  t5831 = -1.*t5826*t4058;
  t5835 = -1.*t3989*t5790;
  t5837 = t178*t5598;
  t5840 = -1.*t5614*t3365;
  t5843 = t5837 + t5840;
  t5928 = -1.*t178*t3807;
  t5929 = -1.*t3791*t3365;
  t5931 = t5928 + t5929;
  t5942 = t3798 + t3829;
  t5968 = -1.*t178*t1914;
  t5971 = -1.*t1812*t3365;
  t5974 = t5968 + t5971;
  t6019 = t4167 + t4177;
  t5985 = t4117 + t4122;
  t5984 = t4111*t4058;
  t5986 = t4030*t5985;
  t5996 = -1.*t178*t2347;
  t5998 = t5996 + t5800;
  t6035 = -1.*t6019*t4058;
  t6038 = -1.*t3989*t5985;
  t6039 = -1.*t178*t1849;
  t6040 = -1.*t1067*t3365;
  t6042 = t6039 + t6040;
  t6130 = -1.*t3779*t3317;
  t6140 = -1.*t165*t3836;
  t6142 = t6130 + t6140;
  t6163 = -1.*t2136*t3317;
  t6165 = -1.*t165*t4132;
  t6166 = t6163 + t6165;
  t6209 = t4508 + t4511;
  t6175 = t4462 + t4466;
  t6247 = -1.000000000016*t531*t622;
  t6248 = 4.e-6*t298*t761;
  t6249 = -1.*t298*t869;
  t6251 = t6247 + t6248 + t6249;
  t6260 = -4.e-6*t298*t622;
  t6262 = -1.6e-11*t531*t761;
  t6263 = 4.e-6*t531*t869;
  t6264 = t6260 + t6262 + t6263;
  t6274 = -0.03874900000062*t298;
  t6275 = 0.281210000008499*t531;
  t6276 = 4.e-6*t298*t1280;
  t6277 = -1.000000000016*t531*t1422;
  t6279 = -1.*t298*t1602;
  t6280 = t6274 + t6275 + t6276 + t6277 + t6279;
  t6293 = 1.124840000016e-6*t298;
  t6294 = 1.5499600000248e-7*t531;
  t6297 = -1.6e-11*t531*t1280;
  t6299 = -4.e-6*t298*t1422;
  t6300 = 4.e-6*t531*t1602;
  t6303 = -1.2484e-7 + t6293 + t6294 + t6297 + t6299 + t6300;
  t6417 = 4.e-6*t298*t392;
  t6419 = -1.*t298*t493;
  t6422 = t6417 + t6419;
  t6429 = -1.6e-11*t392*t531;
  t6432 = 4.e-6*t493*t531;
  t6447 = t6429 + t6432;
  t6288 = t262*t6280;
  t6319 = t211*t6303;
  t6324 = t6288 + t6319;
  t6334 = t211*t6280;
  t6337 = -1.*t262*t6303;
  t6342 = t6334 + t6337;
  t6393 = -0.281210000004*t298;
  t6395 = t298*t1422;
  t6399 = -4.9936e-13 + t6393 + t1695 + t1722 + t6395 + t1751;
  t6387 = t298*t622;
  t6390 = t6387 + t946 + t1012;
  t6400 = -1.*t1995*t6399;
  t6527 = t519*t6399;
  t6728 = 4.e-6*t298*t2614;
  t6730 = -1.000000000016*t531*t2630;
  t6731 = -1.*t298*t2672;
  t6738 = t6728 + t6730 + t6731;
  t6741 = -1.6e-11*t531*t2614;
  t6749 = -4.e-6*t298*t2630;
  t6758 = 4.e-6*t531*t2672;
  t6765 = t6741 + t6749 + t6758;
  t6270 = t262*t6251;
  t6271 = t211*t6264;
  t6272 = t6270 + t6271;
  t6252 = t211*t6251;
  t6265 = -1.*t262*t6264;
  t6267 = t6252 + t6265;
  t6472 = t6422*t262;
  t6476 = t211*t6447;
  t6482 = t6472 + t6476;
  t6426 = t211*t6422;
  t6448 = -1.*t262*t6447;
  t6451 = t6426 + t6448;
  t6511 = t2261*t2136;
  t6886 = t178*t6482;
  t6891 = t6451*t3365;
  t6895 = t6886 + t6891;
  t6391 = -1.*t6390*t2136;
  t6873 = t178*t6272;
  t6881 = t6267*t3365;
  t6882 = t6873 + t6881;
  t6906 = t178*t6342;
  t6909 = -1.*t6324*t3365;
  t6917 = t6906 + t6909;
  t6928 = t178*t6324;
  t6929 = t6342*t3365;
  t6932 = t6928 + t6929;
  t6809 = t262*t6738;
  t6817 = t211*t6765;
  t6828 = t6809 + t6817;
  t6784 = t211*t6738;
  t6796 = -1.*t262*t6765;
  t6801 = t6784 + t6796;
  t6779 = t298*t2630;
  t6781 = t2722 + t6779 + t2781;
  t6808 = t178*t6801;
  t6831 = -1.*t6828*t3365;
  t6836 = t6808 + t6831;
  t6985 = t178*t6828;
  t6990 = t6801*t3365;
  t6995 = t6985 + t6990;
  t7000 = t165*t6781;
  t7002 = -1.*t3317*t6836;
  t7003 = t7000 + t7002;
  t6948 = t178*t6267;
  t6949 = -1.*t6272*t3365;
  t6959 = t6948 + t6949;
  t6899 = t178*t6451;
  t6901 = -1.*t6482*t3365;
  t6904 = t6899 + t6901;
  t6897 = t6895*t4058;
  t6933 = t4030*t6932;
  t7035 = t2261*t3317;
  t7036 = t165*t6904;
  t7037 = t7035 + t7036;
  t6947 = -1.*t6882*t4058;
  t6965 = -1.*t3989*t6932;
  t7026 = t6390*t3317;
  t7030 = t165*t6959;
  t7033 = t7026 + t7030;
  t7057 = t6399*t3317;
  t7058 = t165*t6917;
  t7059 = t7057 + t7058;
  t7064 = t165*t6399;
  t7067 = -1.*t3317*t6917;
  t7068 = t7064 + t7067;
  t7180 = t1812*t3791;
  t7182 = t1914*t3807;
  t7185 = t2136*t3779;
  t7186 = t7180 + t7182 + t7185;
  t7187 = t519*t7186;
  t7190 = -1.*t2324*t1812;
  t7206 = -1.*t2347*t1914;
  t7207 = -1.*t519*t2136;
  t7210 = t7190 + t7206 + t7207;
  t7222 = t7210*t3779;
  t7230 = t7187 + t7222;
  t7244 = t1651*t2706;
  t7245 = t2461*t3779;
  t7250 = t1773*t2823;
  t7252 = t7244 + t7245 + t7250;
  t7259 = t519*t7252;
  t7266 = -0.15121*t892;
  t7270 = -0.15121*t1014;
  t7271 = -1.*t2235*t1651;
  t7272 = -1.*t519*t2461;
  t7273 = -1.*t2261*t1773;
  t7274 = t7271 + t7272 + t7273;
  t7283 = t7274*t3779;
  t7284 = t7259 + t7266 + t7270 + t7283;
  t7289 = t2614*t1280;
  t7293 = t1422*t2630;
  t7294 = t1602*t2672;
  t7296 = t7289 + t7293 + t7294;
  t7300 = -1.*t392*t1280;
  t7306 = -1.*t493*t1602;
  t7309 = t7300 + t7306;
  t7298 = -1.*t493*t7296;
  t7310 = -1.*t7309*t2672;
  t7312 = t7298 + t7310;
  t7314 = 4.e-6*t7312;
  t7318 = -1.*t392*t7296;
  t7321 = -0.038749*t622;
  t7322 = -1.*t7309*t2614;
  t7323 = 1.e-6*t761;
  t7324 = -0.28121*t869;
  t7326 = t7314 + t7318 + t7321 + t7322 + t7323 + t7324;
  t3315 = t2014 + t2027 + t2032 + t2113;
  t279 = t260 + t278;
  t3364 = t1859 + t278;
  t3380 = t1072 + t1081 + t1082 + t1118;
  t7336 = t178*t4254*t3317;
  t7338 = t4300*t3365;
  t7344 = t7336 + t7338;
  t7354 = t4300*t178;
  t7355 = -1.*t4254*t3317*t3365;
  t7356 = t7354 + t7355;
  t3449 = t1694 + t1695;
  t7416 = t4254*t3989;
  t7425 = t4300*t4527;
  t7432 = 0. + t7416 + t7425;
  t7438 = t4300*t3989;
  t7441 = -1.*t4254*t4527;
  t7446 = 0. + t7438 + t7441;
  t7449 = -1.*t4030*t4058;
  t7452 = -1.*t4111*t4132;
  t7454 = t7207 + t7449 + t7452;
  t7455 = t4294*t7454;
  t7456 = t4058*t4294;
  t7457 = t4132*t3836;
  t7458 = t7185 + t7456 + t7457;
  t7461 = t4030*t7458;
  t7464 = t7455 + t7461;
  t3477 = -0.0398890000006382*t595;
  t3478 = t1402 + t3477;
  t7367 = -1.*t262*t7344;
  t7371 = t211*t7356;
  t7372 = t7367 + t7371;
  t7401 = t211*t7344;
  t7402 = t262*t7356;
  t7405 = t7401 + t7402;
  t3538 = -0.039889*t338;
  t3553 = -0.503150000008*t595;
  t3561 = t1466 + t3538 + t1530 + t3553;
  t3645 = 2.552896e-18*t338;
  t3676 = 2.012600000032e-6*t595;
  t3681 = t1152 + t3645 + t1224 + t3676;
  t7520 = -1.*t4417*t4433;
  t7522 = -1.*t4459*t4471;
  t7523 = t7449 + t7520 + t7522;
  t7526 = t3849*t7523;
  t7530 = t4433*t3849;
  t7534 = t4471*t4307;
  t7539 = t7456 + t7530 + t7534;
  t7542 = t4417*t7539;
  t7544 = t7526 + t7542;
  t7476 = -1.*t165*t531*t4254;
  t7477 = -4.e-6*t531*t7372;
  t7479 = t919*t7405;
  t7480 = t7476 + t7477 + t7479;
  t7482 = -1.*t298*t165*t4254;
  t7483 = 4.e-6*t308*t7372;
  t7486 = -1.*t531*t7405;
  t7493 = t7482 + t7483 + t7486;
  t7499 = -4.e-6*t308*t165*t4254;
  t7502 = t706*t7372;
  t7503 = 4.e-6*t531*t7405;
  t7504 = t7499 + t7502 + t7503;
  t7614 = t4809*t3779;
  t7627 = -1.*t519*t4809;
  t7672 = t1280*t5020;
  t7677 = t2614*t4650;
  t7679 = t4735*t1422;
  t7680 = t4623*t2630;
  t7686 = t5044*t1602;
  t7688 = t4660*t2672;
  t7690 = t7672 + t7677 + t7679 + t7680 + t7686 + t7688;
  t7697 = -1.*t392*t4650;
  t7698 = -1.*t493*t4660;
  t7701 = t7697 + t7698;
  t5550 = t165*t4817;
  t5553 = -1.*t3317*t5493;
  t5554 = t5550 + t5553;
  t7613 = t5230*t2136;
  t7757 = -1.*t4030*t5394;
  t5236 = t5230*t3317;
  t5285 = t165*t5274;
  t5294 = t5236 + t5285;
  t7778 = t5332*t4058;
  t7784 = t5394*t4294;
  t7957 = -1.*t5755*t4058;
  t7960 = -1.*t4030*t5790;
  t7980 = t5790*t4294;
  t7981 = t4058*t5721;
  t8108 = -1.*t4111*t4058;
  t8120 = -1.*t4030*t5985;
  t8132 = t5985*t4294;
  t8148 = t4058*t5942;
  t6216 = -1.*t1995*t3317;
  t6217 = -1.*t165*t4178;
  t6225 = t6216 + t6217;
  t6183 = -1.*t519*t3317;
  t6184 = -1.*t165*t4111;
  t6193 = t6183 + t6184;
  t6149 = t4301 + t4305;
  t8315 = t6399*t3779;
  t8327 = -1.*t519*t6399;
  t7106 = t165*t6390;
  t7116 = -1.*t3317*t6959;
  t7119 = t7106 + t7116;
  t8326 = -1.*t2261*t2136;
  t8318 = t2136*t6781;
  t6783 = t6781*t3317;
  t6847 = t165*t6836;
  t6854 = t6783 + t6847;
  t8617 = -1.*t6895*t4058;
  t8623 = -1.*t4030*t6932;
  t7042 = t165*t2261;
  t7043 = -1.*t3317*t6904;
  t7044 = t7042 + t7043;
  t8629 = t6932*t4294;
  t8633 = t4058*t6995;
  t8727 = -1.*t1812*t3791;
  t8734 = -1.*t1914*t3807;
  t8735 = -1.*t2136*t3779;
  t8742 = t8727 + t8734 + t8735;
  t8748 = t8742*t1995;
  t8749 = t1067*t1812;
  t8751 = t1849*t1914;
  t8753 = t1995*t2136;
  t8759 = t8749 + t8751 + t8753;
  t8764 = t8759*t3779;
  t8765 = t8748 + t8764;
  t8775 = -0.15121*t2235;
  t8776 = -0.15121*t2261;
  t8777 = -1.*t1651*t2706;
  t8778 = -1.*t2461*t3779;
  t8779 = -1.*t1773*t2823;
  t8780 = t8777 + t8778 + t8779;
  t8785 = t8780*t1995;
  t8789 = t892*t1651;
  t8790 = t1995*t2461;
  t8791 = t1014*t1773;
  t8792 = t8789 + t8790 + t8791;
  t8793 = t8792*t3779;
  t8794 = t8775 + t8776 + t8785 + t8793;
  t8818 = t1280*t761;
  t8820 = t622*t1422;
  t8825 = t869*t1602;
  t8827 = t8818 + t8820 + t8825;
  t8804 = -1.*t2614*t1280;
  t8808 = -1.*t1422*t2630;
  t8809 = -1.*t1602*t2672;
  t8812 = t8804 + t8808 + t8809;
  t8800 = 1.e-6*t392;
  t8802 = -0.28121*t493;
  t8814 = -1.*t8812*t869;
  t8829 = -1.*t8827*t2672;
  t8830 = t8814 + t8829;
  t8831 = 4.e-6*t8830;
  t8834 = -1.*t8827*t2614;
  t8835 = -1.*t8812*t761;
  t8838 = t8800 + t8802 + t8831 + t8834 + t8835;
  t8841 = -1.*t4300*t178*t3317;
  t8842 = t4254*t3365;
  t8844 = t8841 + t8842;
  t8847 = t178*t4254;
  t8851 = t4300*t3317*t3365;
  t8852 = t8847 + t8851;
  t8875 = t4254*t4030;
  t8877 = t4300*t4459;
  t8881 = t8875 + t8877;
  t8886 = t4300*t4030;
  t8887 = -1.*t4254*t4459;
  t8888 = t8886 + t8887;
  t8891 = t3989*t4058;
  t8893 = t4178*t4132;
  t8894 = t8753 + t8891 + t8893;
  t8895 = t4294*t8894;
  t8896 = -1.*t4058*t4294;
  t8899 = -1.*t4132*t3836;
  t8900 = t8735 + t8896 + t8899;
  t8901 = t3989*t8900;
  t8906 = t8895 + t8901;
  t8857 = -1.*t262*t8844;
  t8859 = t211*t8852;
  t8860 = t8857 + t8859;
  t8870 = t211*t8844;
  t8872 = t262*t8852;
  t8873 = t8870 + t8872;
  t8941 = t4377*t4433;
  t8942 = t4527*t4471;
  t8944 = t8891 + t8941 + t8942;
  t8945 = t3849*t8944;
  t8948 = -1.*t4433*t3849;
  t8949 = -1.*t4471*t4307;
  t8952 = t8896 + t8948 + t8949;
  t8954 = t4377*t8952;
  t8955 = t8945 + t8954;
  t8910 = t4300*t165*t531;
  t8911 = -4.e-6*t531*t8860;
  t8912 = t919*t8873;
  t8914 = t8910 + t8911 + t8912;
  t8916 = t298*t4300*t165;
  t8917 = 4.e-6*t308*t8860;
  t8918 = -1.*t531*t8873;
  t8919 = t8916 + t8917 + t8918;
  t8923 = 4.e-6*t308*t4300*t165;
  t8924 = t706*t8860;
  t8925 = 4.e-6*t531*t8873;
  t8926 = t8923 + t8924 + t8925;
  t9010 = t5826*t4058;
  t9012 = t3989*t5790;
  t9021 = -1.*t5790*t4294;
  t9022 = -1.*t4058*t5721;
  t9070 = t6019*t4058;
  t9071 = t3989*t5985;
  t9079 = -1.*t5985*t4294;
  t9080 = -1.*t4058*t5942;
  t9121 = -1.*t4809*t3779;
  t9130 = t4809*t1995;
  t9176 = t622*t4623;
  t9178 = t761*t4650;
  t9179 = t1280*t4755;
  t9180 = t4743*t1422;
  t9181 = t4660*t869;
  t9183 = t4735*t1602;
  t9184 = t9176 + t9178 + t9179 + t9180 + t9181 + t9183;
  t9166 = -1.*t1280*t5020;
  t9167 = -1.*t2614*t4650;
  t9168 = -1.*t4735*t1422;
  t9169 = -1.*t4623*t2630;
  t9170 = -1.*t5044*t1602;
  t9171 = -1.*t4660*t2672;
  t9172 = t9166 + t9167 + t9168 + t9169 + t9170 + t9171;
  t9131 = t4817*t2136;
  t9119 = -1.*t5230*t2136;
  t9195 = t5394*t3989;
  t9197 = t5456*t4058;
  t9204 = -1.*t5332*t4058;
  t9206 = -1.*t5394*t4294;
  t9274 = -1.*t6399*t3779;
  t9292 = t1995*t6399;
  t9291 = t6390*t2136;
  t9277 = -1.*t2136*t6781;
  t9341 = t6882*t4058;
  t9345 = t3989*t6932;
  t9350 = -1.*t6932*t4294;
  t9355 = -1.*t4058*t6995;
  p_output1[0]=t165*t178*t279 + t3315*t3317 - 1.*t165*t3364*t3365 + t3380*t3417 + t3449*t3471 + t3478*t3489 + t3561*t3630 + t3681*t3740 - 0.041195*(t318*t3630 + 4.e-6*t338*t3740 - 1.*t3489*t595) - 0.14871*(4.e-6*t338*t3630 + t1170*t3740 + 4.e-6*t3489*t595) + 0.803147*(t3489*t569 + t3630*t595 - 4.e-6*t3740*t595) + var1[0] + t3849*var2[0] + t4326*var2[1] + t4311*var2[2] + t4545*var2[3] + ((-1.*t4254*t4294 - 1.*t4300*t4307)*var2[1] + (t4319 + t4320)*var2[2])*var2[3] + t4240*var2[4] + (t6149*var2[0] - 1.*t4254*t6142*var2[1] + t4300*t6142*var2[2] + (t4459*t4542 + t4377*(t4433*t4459 + t4459*t6166 + t4417*t6175 + t4471*t6193) + t4484*t6209 + t4417*(-1.*t4527*t6166 - 1.*t4377*t6175 - 1.*t4433*t6209 - 1.*t4471*t6225))*var2[3])*var2[4] + t2424*var2[5] + (t165*t5931*var2[0] + (t3317*t4254*t5931 + t4300*t5942)*var2[1] + (-1.*t3317*t4300*t5931 + t4254*t5942)*var2[2] + (t165*t4542*t5998 + t4377*(t165*t4417*t5974 - 1.*t3317*t4459*t5974 + t5984 + t5986 + t165*t4433*t5998 - 1.*t3317*t4471*t5998) + t165*t4484*t6042 + t4417*(-1.*t165*t4377*t5974 + t3317*t4527*t5974 + t6035 + t6038 - 1.*t165*t4433*t6042 + t3317*t4471*t6042))*var2[3] + (t4111*t4234 + t3989*(t4111*t5974 + t5984 + t5986 + t4132*t5998) + t4151*t6019 + t4030*(-1.*t4178*t5974 + t6035 + t6038 - 1.*t4132*t6042))*var2[4])*var2[5] + t2837*var2[9] + (t165*t5707*var2[0] + (t3317*t4254*t5707 + t4300*t5721)*var2[1] + (-1.*t3317*t4300*t5707 + t4254*t5721)*var2[2] + (t165*t4542*t5801 + t4377*(t5762 + t165*t4417*t5774 - 1.*t3317*t4459*t5774 + t5794 + t165*t4433*t5801 - 1.*t3317*t4471*t5801) + t165*t4484*t5843 + t4417*(-1.*t165*t4377*t5774 + t3317*t4527*t5774 + t5831 + t5835 - 1.*t165*t4433*t5843 + t3317*t4471*t5843))*var2[3] + (t4234*t5755 + t3989*(t5762 + t4111*t5774 + t5794 + t4132*t5801) + t4151*t5826 + t4030*(-1.*t4178*t5774 + t5831 + t5835 - 1.*t4132*t5843))*var2[4] + (t519*(-1.*t1812*t5598 - 1.*t1849*t5606 - 1.*t1067*t5612 - 1.*t1914*t5614) + t1995*(t1914*t2324 + t2347*t5606 + t2324*t5612 + t1812*t5638))*var2[5])*var2[9] + t3249*var2[10] + (t6854*var2[0] + (t4300*t6995 - 1.*t4254*t7003)*var2[1] + (t4254*t6995 + t4300*t7003)*var2[2] + (t4484*t7033 + t4542*t7037 + t4377*(t6897 + t6933 + t4433*t7037 + t4471*t7044 + t4417*t7059 + t4459*t7068) + t4417*(t6947 + t6965 - 1.*t4433*t7033 - 1.*t4377*t7059 - 1.*t4527*t7068 - 1.*t4471*t7119))*var2[3] + (t4151*t6882 + t4234*t6895 + t3989*(t6511 + t6527 + t6897 + t4132*t6904 + t4111*t6917 + t6933) + t4030*(t6391 + t6400 - 1.*t4178*t6917 + t6947 - 1.*t4132*t6959 + t6965))*var2[4] + (t2178*t2261 + t2404*t6390 + t519*(-1.*t1812*t6267 - 1.*t1914*t6272 - 1.*t1849*t6324 - 1.*t1067*t6342 + t6391 + t6400) + t1995*(t2347*t6324 + t2324*t6342 + t1812*t6451 + t1914*t6482 + t6511 + t6527))*var2[5] + (t2261*t2508 + t2582*t6390 + t1995*(t2261*t2461 + t2261*t6280 + t2235*t6303 + t1773*t6422 + t1651*t6447 + t6527) - 0.15121*t6738 - 0.15121*t6765 + t519*(-1.*t1773*t6251 - 1.*t1651*t6264 - 1.*t1014*t6280 - 1.*t2461*t6390 + t6400 - 1.*t6303*t892))*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t5294*var2[0] + (t4300*t5332 - 1.*t4254*t5350)*var2[1] + (t4254*t5332 + t4300*t5350)*var2[2] + (t4377*(t5400 + t4417*t5513 + t4459*t5518) + t4484*t5532 + t4417*(t5475 + t5489 - 1.*t4377*t5513 - 1.*t4527*t5518 - 1.*t4433*t5532 - 1.*t4471*t5554))*var2[3] + (t3989*(t4860 + t5400 + t4111*t5415) + t4151*t5456 + t4030*(t4811 + t4824 - 1.*t4178*t5415 + t5475 + t5489 - 1.*t4132*t5493))*var2[4] + (t2404*t4817 + t1995*(t2324*t4710 + t2347*t4723 + t4860) + (-1.*t1067*t4710 - 1.*t1849*t4723 - 1.*t1812*t4772 - 1.*t1914*t4784 + t4811 + t4824)*t519)*var2[5] + (t2582*t4817 + t1995*(t2235*t4667 + t2261*t4696 + t4860) - 0.15121*t5065 - 0.15121*t5096 + t519*(-1.*t1014*t4696 - 1.*t1651*t4757 - 1.*t1773*t4769 + t4811 - 1.*t2461*t4817 - 1.*t4667*t892))*var2[9] + (-0.038749*t4735 - 1.*t3027*t4755 + 1.e-6*t5020 - 0.28121*t5044 - 1.*t392*t5171 - 1.*t5193*t761 + 4.e-6*(-1.*t3027*t4735 - 1.*t493*t5171 - 1.*t5193*t869))*var2[10])*var2[11] + t3849*var3[0] + t4326*var3[1] + t4311*var3[2] + t4545*var3[3] + t4240*var3[4] + t2424*var3[5] + t2837*var3[9] + t3249*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t165*t3315*t4254 + t279*t7344 + t3364*t7356 + t3380*t7372 + t3449*t7405 + t3478*t7480 + t3561*t7493 + t3681*t7504 - 0.14871*(4.e-6*t595*t7480 + 4.e-6*t338*t7493 + t1170*t7504) - 0.041195*(-1.*t595*t7480 + t318*t7493 + 4.e-6*t338*t7504) + 0.803147*(t569*t7480 + t595*t7493 - 4.e-6*t595*t7504) + var1[1] + t4377*var2[0] + t7446*var2[1] + t7432*var2[2] + t7544*var2[3] + ((-1.*t3989*t4254 - 1.*t4300*t4527)*var2[1] + (t7438 + t7441)*var2[2])*var2[3] + t7464*var2[4] + (t6209*var2[0] - 1.*t4254*t6225*var2[1] + t4300*t6225*var2[2] + (t4417*(t4471*t6142 + t4433*t6149 + t4307*t6166 + t3849*t6175) + t3849*(-1.*t4433*t4459 - 1.*t4459*t6166 - 1.*t4417*t6175 - 1.*t4471*t6193) + t6149*t7523 + t4459*t7539)*var2[3])*var2[4] + t7230*var2[5] + (t165*t6042*var2[0] + (t4300*t6019 + t3317*t4254*t6042)*var2[1] + (t4254*t6019 - 1.*t3317*t4300*t6042)*var2[2] + (t165*t5931*t7523 + t165*t5998*t7539 + t3849*(-1.*t165*t4417*t5974 + t3317*t4459*t5974 - 1.*t165*t4433*t5998 + t3317*t4471*t5998 + t8108 + t8120) + t4417*(t165*t4433*t5931 - 1.*t3317*t4471*t5931 + t165*t3849*t5974 - 1.*t3317*t4307*t5974 + t8132 + t8148))*var2[3] + (t5942*t7454 + t4111*t7458 + t4294*(-1.*t4111*t5974 - 1.*t4132*t5998 + t8108 + t8120) + t4030*(t4132*t5931 + t3836*t5974 + t8132 + t8148))*var2[4])*var2[5] + t7284*var2[9] + (t165*t5843*var2[0] + (t4300*t5826 + t3317*t4254*t5843)*var2[1] + (t4254*t5826 - 1.*t3317*t4300*t5843)*var2[2] + (t165*t5707*t7523 + t165*t5801*t7539 + t3849*(-1.*t165*t4417*t5774 + t3317*t4459*t5774 - 1.*t165*t4433*t5801 + t3317*t4471*t5801 + t7957 + t7960) + t4417*(t165*t4433*t5707 - 1.*t3317*t4471*t5707 + t165*t3849*t5774 - 1.*t3317*t4307*t5774 + t7980 + t7981))*var2[3] + (t5721*t7454 + t5755*t7458 + t4294*(-1.*t4111*t5774 - 1.*t4132*t5801 + t7957 + t7960) + t4030*(t4132*t5707 + t3836*t5774 + t7980 + t7981))*var2[4] + (t3779*(-1.*t1914*t2324 - 1.*t2347*t5606 - 1.*t2324*t5612 - 1.*t1812*t5638) + t519*(t3807*t5606 + t3791*t5612 + t1812*t5680 + t1914*t5696))*var2[5])*var2[9] + t7326*var2[10] + (t7033*var2[0] + (t4300*t6882 - 1.*t4254*t7119)*var2[1] + (t4254*t6882 + t4300*t7119)*var2[2] + (t6854*t7523 + t7037*t7539 + t3849*(-1.*t4433*t7037 - 1.*t4471*t7044 - 1.*t4417*t7059 - 1.*t4459*t7068 + t8617 + t8623) + t4417*(t4433*t6854 + t4471*t7003 + t3849*t7059 + t4307*t7068 + t8629 + t8633))*var2[3] + (t6995*t7454 + t6895*t7458 + t4294*(-1.*t4132*t6904 - 1.*t4111*t6917 + t8326 + t8327 + t8617 + t8623) + t4030*(t4132*t6836 + t3836*t6917 + t8315 + t8318 + t8629 + t8633))*var2[4] + (t2261*t7186 + t6781*t7210 + t519*(t3807*t6324 + t3791*t6342 + t1812*t6801 + t1914*t6828 + t8315 + t8318) + t3779*(-1.*t2347*t6324 - 1.*t2324*t6342 - 1.*t1812*t6451 - 1.*t1914*t6482 + t8326 + t8327))*var2[5] + (-0.15121*t6251 - 0.15121*t6264 + t2261*t7252 + t6781*t7274 + t519*(t2823*t6280 + t2706*t6303 + t1773*t6738 + t1651*t6765 + t2461*t6781 + t8315) + t3779*(-1.*t2261*t2461 - 1.*t2261*t6280 - 1.*t2235*t6303 - 1.*t1773*t6422 - 1.*t1651*t6447 + t8327))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5532*var2[0] + (t4300*t5456 - 1.*t4254*t5554)*var2[1] + (t4254*t5456 + t4300*t5554)*var2[2] + (t5294*t7523 + t3849*(-1.*t4417*t5513 - 1.*t4459*t5518 + t7757) + t4417*(t4433*t5294 + t4471*t5350 + t3849*t5513 + t4307*t5518 + t7778 + t7784))*var2[3] + (t5332*t7454 + t4294*(-1.*t4111*t5415 + t7627 + t7757) + t4030*(t4132*t5274 + t3836*t5415 + t7613 + t7614 + t7778 + t7784))*var2[4] + (t5230*t7210 + t519*(t3791*t4710 + t3807*t4723 + t1812*t5260 + t1914*t5271 + t7613 + t7614) + t3779*(-1.*t2324*t4710 - 1.*t2347*t4723 + t7627))*var2[5] + (-0.15121*t4757 - 0.15121*t4769 + t5230*t7274 + t519*(t2706*t4667 + t2823*t4696 + t1651*t5065 + t1773*t5096 + t2461*t5230 + t7614) + t3779*(-1.*t2235*t4667 - 1.*t2261*t4696 + t7627))*var2[9] + (-0.28121*t4735 - 0.038749*t4743 + 1.e-6*t4755 - 1.*t5020*t7309 - 1.*t392*t7690 - 1.*t2614*t7701 + 4.e-6*(-1.*t5044*t7309 - 1.*t493*t7690 - 1.*t2672*t7701))*var2[10])*var2[11] + t4377*var3[0] + t7446*var3[1] + t7432*var3[2] + t7544*var3[3] + t7464*var3[4] + t7230*var3[5] + t7284*var3[9] + t7326*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t165*t3315*t4300 + t279*t8844 + t3364*t8852 + t3380*t8860 + t3449*t8873 + t3478*t8914 + t3561*t8919 + t3681*t8926 - 0.14871*(4.e-6*t595*t8914 + 4.e-6*t338*t8919 + t1170*t8926) - 0.041195*(-1.*t595*t8914 + t318*t8919 + 4.e-6*t338*t8926) + 0.803147*(t569*t8914 + t595*t8919 - 4.e-6*t595*t8926) + var1[2] + t4417*var2[0] + t8888*var2[1] + t8881*var2[2] + t8955*var2[3] + ((-1.*t4030*t4254 - 1.*t4300*t4459)*var2[1] + t8888*var2[2])*var2[3] + t8906*var2[4] + (t4459*var2[0] - 1.*t4254*t6193*var2[1] + t4300*t6193*var2[2] + (t4377*(-1.*t4471*t6142 - 1.*t4433*t6149 - 1.*t4307*t6166 - 1.*t3849*t6175) + t3849*(t4527*t6166 + t4377*t6175 + t4433*t6209 + t4471*t6225) + t6149*t8944 + t6209*t8952)*var2[3])*var2[4] + t8765*var2[5] + (t165*t5998*var2[0] + (t4111*t4300 + t3317*t4254*t5998)*var2[1] + (t4111*t4254 - 1.*t3317*t4300*t5998)*var2[2] + (t165*t5931*t8944 + t165*t6042*t8952 + t3849*(t165*t4377*t5974 - 1.*t3317*t4527*t5974 + t165*t4433*t6042 - 1.*t3317*t4471*t6042 + t9070 + t9071) + t4377*(-1.*t165*t4433*t5931 + t3317*t4471*t5931 - 1.*t165*t3849*t5974 + t3317*t4307*t5974 + t9079 + t9080))*var2[3] + (t5942*t8894 + t6019*t8900 + t4294*(t4178*t5974 + t4132*t6042 + t9070 + t9071) + t3989*(-1.*t4132*t5931 - 1.*t3836*t5974 + t9079 + t9080))*var2[4])*var2[5] + t8794*var2[9] + (t165*t5801*var2[0] + (t4300*t5755 + t3317*t4254*t5801)*var2[1] + (t4254*t5755 - 1.*t3317*t4300*t5801)*var2[2] + (t165*t5707*t8944 + t165*t5843*t8952 + t3849*(t165*t4377*t5774 - 1.*t3317*t4527*t5774 + t165*t4433*t5843 - 1.*t3317*t4471*t5843 + t9010 + t9012) + t4377*(-1.*t165*t4433*t5707 + t3317*t4471*t5707 - 1.*t165*t3849*t5774 + t3317*t4307*t5774 + t9021 + t9022))*var2[3] + (t5721*t8894 + t5826*t8900 + t4294*(t4178*t5774 + t4132*t5843 + t9010 + t9012) + t3989*(-1.*t4132*t5707 - 1.*t3836*t5774 + t9021 + t9022))*var2[4] + (t3779*(t1812*t5598 + t1849*t5606 + t1067*t5612 + t1914*t5614) + t1995*(-1.*t3807*t5606 - 1.*t3791*t5612 - 1.*t1812*t5680 - 1.*t1914*t5696))*var2[5])*var2[9] + t8838*var2[10] + (t7037*var2[0] + (t4300*t6895 - 1.*t4254*t7044)*var2[1] + (t4254*t6895 + t4300*t7044)*var2[2] + (t6854*t8944 + t7033*t8952 + t3849*(t4433*t7033 + t4377*t7059 + t4527*t7068 + t4471*t7119 + t9341 + t9345) + t4377*(-1.*t4433*t6854 - 1.*t4471*t7003 - 1.*t3849*t7059 - 1.*t4307*t7068 + t9350 + t9355))*var2[3] + (t6995*t8894 + t6882*t8900 + t4294*(t4178*t6917 + t4132*t6959 + t9291 + t9292 + t9341 + t9345) + t3989*(-1.*t4132*t6836 - 1.*t3836*t6917 + t9274 + t9277 + t9350 + t9355))*var2[4] + (t6390*t8742 + t6781*t8759 + t1995*(-1.*t3807*t6324 - 1.*t3791*t6342 - 1.*t1812*t6801 - 1.*t1914*t6828 + t9274 + t9277) + t3779*(t1812*t6267 + t1914*t6272 + t1849*t6324 + t1067*t6342 + t9291 + t9292))*var2[5] + (-0.15121*t6422 - 0.15121*t6447 + t6390*t8780 + t6781*t8792 + t1995*(-1.*t2823*t6280 - 1.*t2706*t6303 - 1.*t1773*t6738 - 1.*t1651*t6765 - 1.*t2461*t6781 + t9274) + t3779*(t1773*t6251 + t1651*t6264 + t1014*t6280 + t2461*t6390 + t6303*t892 + t9292))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t5294*t8944 + t5532*t8952 + t3849*(t4377*t5513 + t4527*t5518 + t4433*t5532 + t4471*t5554 + t9195 + t9197) + t4377*(-1.*t4433*t5294 - 1.*t4471*t5350 - 1.*t3849*t5513 - 1.*t4307*t5518 + t9204 + t9206))*var2[3] + (t5332*t8894 + t5456*t8900 + t4294*(t4178*t5415 + t4132*t5493 + t9130 + t9131 + t9195 + t9197) + t3989*(-1.*t4132*t5274 - 1.*t3836*t5415 + t9119 + t9121 + t9204 + t9206))*var2[4] + (t4817*t8742 + t5230*t8759 + t1995*(-1.*t3791*t4710 - 1.*t3807*t4723 - 1.*t1812*t5260 - 1.*t1914*t5271 + t9119 + t9121) + t3779*(t1067*t4710 + t1849*t4723 + t1812*t4772 + t1914*t4784 + t9130 + t9131))*var2[5] + (t4817*t8780 + t5230*t8792 + t1995*(-1.*t2706*t4667 - 1.*t2823*t4696 - 1.*t1651*t5065 - 1.*t1773*t5096 - 1.*t2461*t5230 + t9121) + t3779*(t1014*t4696 + t1651*t4757 + t1773*t4769 + t2461*t4817 + t4667*t892 + t9130))*var2[9] + (-1.*t4755*t8812 - 1.*t5020*t8827 - 1.*t761*t9172 - 1.*t2614*t9184 + 4.e-6*(-1.*t4735*t8812 - 1.*t5044*t8827 - 1.*t869*t9172 - 1.*t2672*t9184))*var2[10])*var2[11] + t4417*var3[0] + t8888*var3[1] + t8881*var3[2] + t8955*var3[3] + t8906*var3[4] + t8765*var3[5] + t8794*var3[9] + t8838*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void ddh_FrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
