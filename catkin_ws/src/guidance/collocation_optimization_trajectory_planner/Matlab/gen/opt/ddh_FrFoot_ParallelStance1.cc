/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:28:53 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t379;
  double t315;
  double t595;
  double t260;
  double t387;
  double t456;
  double t535;
  double t978;
  double t333;
  double t341;
  double t694;
  double t144;
  double t886;
  double t915;
  double t938;
  double t989;
  double t1010;
  double t875;
  double t1039;
  double t1084;
  double t1088;
  double t1098;
  double t1117;
  double t1155;
  double t1185;
  double t1216;
  double t188;
  double t199;
  double t228;
  double t267;
  double t1022;
  double t1024;
  double t1029;
  double t1571;
  double t1606;
  double t1673;
  double t1710;
  double t1713;
  double t1744;
  double t1747;
  double t1303;
  double t1312;
  double t1772;
  double t1788;
  double t1852;
  double t1854;
  double t1979;
  double t1992;
  double t2033;
  double t2088;
  double t2126;
  double t2145;
  double t1015;
  double t1141;
  double t1220;
  double t1246;
  double t1324;
  double t1362;
  double t1363;
  double t1394;
  double t1445;
  double t1542;
  double t1543;
  double t1563;
  double t1757;
  double t1953;
  double t2166;
  double t2174;
  double t2216;
  double t2217;
  double t2278;
  double t2324;
  double t2331;
  double t2338;
  double t767;
  double t776;
  double t780;
  double t825;
  double t2203;
  double t2359;
  double t2363;
  double t2736;
  double t2765;
  double t2777;
  double t2826;
  double t2854;
  double t2866;
  double t2433;
  double t2458;
  double t2493;
  double t2505;
  double t772;
  double t837;
  double t844;
  double t2609;
  double t2617;
  double t2623;
  double t2626;
  double t2641;
  double t2644;
  double t2651;
  double t2667;
  double t2523;
  double t2553;
  double t2577;
  double t2596;
  double t1290;
  double t1424;
  double t1432;
  double t2372;
  double t2392;
  double t2411;
  double t2418;
  double t2516;
  double t2682;
  double t2684;
  double t2718;
  double t2779;
  double t2889;
  double t2913;
  double t2920;
  double t2940;
  double t2947;
  double t2958;
  double t2967;
  double t3001;
  double t3016;
  double t3021;
  double t3022;
  double t3048;
  double t3225;
  double t3231;
  double t3243;
  double t3249;
  double t3251;
  double t3303;
  double t3314;
  double t3326;
  double t3043;
  double t3068;
  double t3116;
  double t3160;
  double t3162;
  double t3177;
  double t3188;
  double t3194;
  double t3197;
  double t3215;
  double t3247;
  double t3253;
  double t3346;
  double t3359;
  double t3383;
  double t3389;
  double t3396;
  double t3402;
  double t3407;
  double t3420;
  double t3442;
  double t3468;
  double t3469;
  double t3480;
  double t3483;
  double t3505;
  double t3510;
  double t3512;
  double t3495;
  double t3520;
  double t3546;
  double t3549;
  double t3553;
  double t3555;
  double t3556;
  double t3566;
  double t3570;
  double t3572;
  double t119;
  double t131;
  double t3618;
  double t3607;
  double t3632;
  double t3634;
  double t3635;
  double t3651;
  double t3657;
  double t3659;
  double t3790;
  double t3791;
  double t3797;
  double t3798;
  double t3821;
  double t3822;
  double t3824;
  double t3842;
  double t3864;
  double t3866;
  double t3877;
  double t3879;
  double t3884;
  double t3887;
  double t3891;
  double t3910;
  double t3686;
  double t3690;
  double t3711;
  double t3717;
  double t3742;
  double t3743;
  double t3750;
  double t3757;
  double t3774;
  double t3776;
  double t3777;
  double t3787;
  double t4037;
  double t4038;
  double t4040;
  double t4012;
  double t4013;
  double t4019;
  double t4042;
  double t4047;
  double t4048;
  double t4090;
  double t4091;
  double t4092;
  double t4059;
  double t4068;
  double t4076;
  double t4083;
  double t4104;
  double t4112;
  double t4120;
  double t4126;
  double t4132;
  double t4133;
  double t4137;
  double t4141;
  double t4144;
  double t4151;
  double t4177;
  double t4180;
  double t4192;
  double t4193;
  double t4194;
  double t4200;
  double t4207;
  double t4208;
  double t4210;
  double t4211;
  double t4222;
  double t4230;
  double t4248;
  double t4252;
  double t4254;
  double t4274;
  double t4278;
  double t4279;
  double t4262;
  double t4269;
  double t4273;
  double t4281;
  double t4292;
  double t4294;
  double t4321;
  double t4335;
  double t4338;
  double t4300;
  double t4308;
  double t4311;
  double t4314;
  double t4340;
  double t4342;
  double t4343;
  double t4346;
  double t4347;
  double t4350;
  double t4356;
  double t4358;
  double t4360;
  double t4361;
  double t4363;
  double t4377;
  double t4381;
  double t4383;
  double t4395;
  double t4405;
  double t4406;
  double t4436;
  double t4437;
  double t4389;
  double t4417;
  double t4441;
  double t4444;
  double t4452;
  double t4478;
  double t4481;
  double t4495;
  double t4529;
  double t4543;
  double t4547;
  double t4551;
  double t4558;
  double t4585;
  double t4586;
  double t4587;
  double t4544;
  double t4562;
  double t4592;
  double t4597;
  double t4608;
  double t4609;
  double t4610;
  double t4611;
  double t4663;
  double t4666;
  double t4669;
  double t4686;
  double t4447;
  double t4499;
  double t4503;
  double t4518;
  double t4519;
  double t4521;
  double t4654;
  double t4655;
  double t4658;
  double t4660;
  double t4662;
  double t4760;
  double t4763;
  double t4766;
  double t4699;
  double t4820;
  double t4821;
  double t4824;
  double t4825;
  double t4827;
  double t4838;
  double t4841;
  double t4846;
  double t4847;
  double t4848;
  double t4756;
  double t4765;
  double t4773;
  double t4777;
  double t4779;
  double t4781;
  double t4787;
  double t4789;
  double t4891;
  double t4892;
  double t4894;
  double t4883;
  double t4884;
  double t4885;
  double t4873;
  double t4874;
  double t4876;
  double t4877;
  double t4889;
  double t4895;
  double t4896;
  double t4906;
  double t4907;
  double t4908;
  double t4919;
  double t4920;
  double t4921;
  double t4632;
  double t4637;
  double t4638;
  double t4598;
  double t4615;
  double t4622;
  double t4688;
  double t4946;
  double t4960;
  double t4968;
  double t4973;
  double t4974;
  double t4977;
  double t5002;
  double t5010;
  double t5017;
  double t4971;
  double t5026;
  double t5027;
  double t5032;
  double t5021;
  double t5025;
  double t5062;
  double t5063;
  double t5068;
  double t5073;
  double t5076;
  double t5077;
  double t5082;
  double t5083;
  double t5084;
  double t5142;
  double t5146;
  double t5148;
  double t5150;
  double t5153;
  double t5156;
  double t5201;
  double t5207;
  double t5210;
  double t5211;
  double t5212;
  double t5217;
  double t5218;
  double t5226;
  double t5227;
  double t5233;
  double t5166;
  double t5167;
  double t5176;
  double t5158;
  double t5128;
  double t5129;
  double t5139;
  double t5294;
  double t5295;
  double t5296;
  double t5261;
  double t5266;
  double t5269;
  double t5277;
  double t5278;
  double t5282;
  double t5256;
  double t5258;
  double t5260;
  double t5283;
  double t5285;
  double t5286;
  double t5287;
  double t5299;
  double t5301;
  double t5302;
  double t5303;
  double t5307;
  double t5345;
  double t5346;
  double t5347;
  double t5366;
  double t5382;
  double t5385;
  double t5386;
  double t5414;
  double t5393;
  double t5388;
  double t5394;
  double t5395;
  double t5398;
  double t5422;
  double t5425;
  double t5426;
  double t5437;
  double t5439;
  double t5486;
  double t5497;
  double t5498;
  double t5510;
  double t5514;
  double t5515;
  double t5530;
  double t5518;
  double t5555;
  double t5556;
  double t5557;
  double t5558;
  double t5561;
  double t5562;
  double t5563;
  double t5564;
  double t5574;
  double t5576;
  double t5578;
  double t5579;
  double t5580;
  double t5581;
  double t5587;
  double t5590;
  double t5591;
  double t5592;
  double t5594;
  double t5595;
  double t5623;
  double t5624;
  double t5628;
  double t5632;
  double t5634;
  double t5637;
  double t5582;
  double t5596;
  double t5597;
  double t5601;
  double t5602;
  double t5603;
  double t5616;
  double t5617;
  double t5618;
  double t5605;
  double t5606;
  double t5619;
  double t5657;
  double t5707;
  double t5708;
  double t5709;
  double t5714;
  double t5719;
  double t5720;
  double t5721;
  double t5722;
  double t5569;
  double t5570;
  double t5572;
  double t5560;
  double t5566;
  double t5567;
  double t5643;
  double t5644;
  double t5645;
  double t5630;
  double t5638;
  double t5639;
  double t5652;
  double t5770;
  double t5773;
  double t5774;
  double t5612;
  double t5765;
  double t5766;
  double t5767;
  double t5783;
  double t5794;
  double t5801;
  double t5804;
  double t5805;
  double t5807;
  double t5743;
  double t5748;
  double t5754;
  double t5730;
  double t5731;
  double t5732;
  double t5727;
  double t5728;
  double t5735;
  double t5755;
  double t5758;
  double t5833;
  double t5836;
  double t5837;
  double t5839;
  double t5840;
  double t5841;
  double t5817;
  double t5821;
  double t5822;
  double t5777;
  double t5778;
  double t5781;
  double t5776;
  double t5809;
  double t5855;
  double t5859;
  double t5860;
  double t5816;
  double t5826;
  double t5851;
  double t5852;
  double t5853;
  double t5881;
  double t5882;
  double t5885;
  double t5888;
  double t5889;
  double t5890;
  double t5926;
  double t5927;
  double t5928;
  double t5929;
  double t5930;
  double t5932;
  double t5934;
  double t5935;
  double t5936;
  double t5937;
  double t5938;
  double t5941;
  double t5942;
  double t5943;
  double t5944;
  double t5945;
  double t5946;
  double t5947;
  double t5948;
  double t5949;
  double t5950;
  double t5951;
  double t5952;
  double t5953;
  double t5956;
  double t5957;
  double t5958;
  double t5959;
  double t5963;
  double t5966;
  double t5967;
  double t5962;
  double t5968;
  double t5972;
  double t5973;
  double t5974;
  double t5976;
  double t5977;
  double t5978;
  double t5979;
  double t5980;
  double t3596;
  double t297;
  double t3613;
  double t3628;
  double t5986;
  double t5987;
  double t5988;
  double t5990;
  double t5991;
  double t5994;
  double t3648;
  double t6009;
  double t6010;
  double t6011;
  double t6017;
  double t6018;
  double t6020;
  double t6031;
  double t6032;
  double t6034;
  double t6035;
  double t6036;
  double t6037;
  double t6040;
  double t6042;
  double t6043;
  double t3663;
  double t3683;
  double t5999;
  double t6000;
  double t6002;
  double t6005;
  double t6006;
  double t6007;
  double t3721;
  double t3722;
  double t3741;
  double t3764;
  double t3765;
  double t3769;
  double t6089;
  double t6090;
  double t6091;
  double t6092;
  double t6093;
  double t6094;
  double t6096;
  double t6097;
  double t6100;
  double t6047;
  double t6048;
  double t6049;
  double t6050;
  double t6056;
  double t6059;
  double t6060;
  double t6061;
  double t6065;
  double t6071;
  double t6072;
  double t6073;
  double t6131;
  double t6140;
  double t6171;
  double t6172;
  double t6173;
  double t6174;
  double t6175;
  double t6176;
  double t6177;
  double t6181;
  double t6184;
  double t6185;
  double t5093;
  double t5097;
  double t5108;
  double t6130;
  double t6232;
  double t4878;
  double t4900;
  double t4902;
  double t6237;
  double t6245;
  double t6313;
  double t6316;
  double t6322;
  double t6324;
  double t6377;
  double t6378;
  double t6401;
  double t6402;
  double t5537;
  double t5538;
  double t5539;
  double t5520;
  double t5522;
  double t5523;
  double t5504;
  double t6480;
  double t6491;
  double t5899;
  double t5902;
  double t5903;
  double t6490;
  double t6481;
  double t5729;
  double t5759;
  double t5762;
  double t6538;
  double t6543;
  double t5870;
  double t5874;
  double t5875;
  double t6547;
  double t6553;
  double t6590;
  double t6592;
  double t6593;
  double t6595;
  double t6596;
  double t6599;
  double t6600;
  double t6601;
  double t6602;
  double t6603;
  double t6604;
  double t6608;
  double t6610;
  double t6611;
  double t6612;
  double t6614;
  double t6615;
  double t6617;
  double t6619;
  double t6620;
  double t6622;
  double t6623;
  double t6625;
  double t6627;
  double t6638;
  double t6639;
  double t6640;
  double t6641;
  double t6632;
  double t6633;
  double t6634;
  double t6635;
  double t6630;
  double t6631;
  double t6637;
  double t6642;
  double t6643;
  double t6645;
  double t6646;
  double t6647;
  double t6648;
  double t6654;
  double t6656;
  double t6658;
  double t6665;
  double t6666;
  double t6668;
  double t6687;
  double t6689;
  double t6690;
  double t6693;
  double t6694;
  double t6695;
  double t6699;
  double t6700;
  double t6701;
  double t6702;
  double t6704;
  double t6705;
  double t6706;
  double t6707;
  double t6708;
  double t6675;
  double t6676;
  double t6677;
  double t6679;
  double t6681;
  double t6682;
  double t6739;
  double t6740;
  double t6741;
  double t6742;
  double t6743;
  double t6744;
  double t6745;
  double t6746;
  double t6747;
  double t6711;
  double t6712;
  double t6713;
  double t6714;
  double t6716;
  double t6717;
  double t6718;
  double t6720;
  double t6723;
  double t6724;
  double t6725;
  double t6726;
  double t6806;
  double t6808;
  double t6820;
  double t6821;
  double t6868;
  double t6870;
  double t6876;
  double t6877;
  double t6918;
  double t6926;
  double t6978;
  double t6981;
  double t6984;
  double t6985;
  double t6986;
  double t6987;
  double t6988;
  double t6963;
  double t6965;
  double t6966;
  double t6967;
  double t6970;
  double t6974;
  double t6976;
  double t6928;
  double t6917;
  double t7001;
  double t7003;
  double t7008;
  double t7011;
  double t7075;
  double t7087;
  double t7086;
  double t7076;
  double t7138;
  double t7141;
  double t7145;
  double t7148;
  t379 = Cos(var1[11]);
  t315 = Cos(var1[10]);
  t595 = -1. + t379;
  t260 = Sin(var1[9]);
  t387 = -1.*t379;
  t456 = 1. + t387;
  t535 = 1.6e-11*t456;
  t978 = Sin(var1[11]);
  t333 = -1.*t315;
  t341 = 1. + t333;
  t694 = 1.6e-11*t595;
  t144 = Cos(var1[9]);
  t886 = -1.000000000016*t456;
  t915 = 1. + t886;
  t938 = 0.004352*t915;
  t989 = -0.9999910000159999*t978;
  t1010 = t938 + t989;
  t875 = Sin(var1[10]);
  t1039 = -1. + t535;
  t1084 = 4.e-6*t1039;
  t1088 = 3.999964e-6*t456;
  t1098 = -1.7408e-8*t978;
  t1117 = t1084 + t1088 + t1098;
  t1155 = 0.999991*t379;
  t1185 = 0.004352*t978;
  t1216 = t694 + t1155 + t1185;
  t188 = -1.*t144;
  t199 = 1. + t188;
  t228 = 0.15121*t199;
  t267 = -0.15121*t260;
  t1022 = -1. + t315;
  t1024 = 1.6e-11*t1022;
  t1029 = 1. + t1024;
  t1571 = -1.26e-8*var1[11];
  t1606 = 1. + t694;
  t1673 = -0.14871*t1606;
  t1710 = -1.64779999997447e-7*t456;
  t1713 = -1.59556e-7*t595;
  t1744 = -1.199987999968e-6*t978;
  t1747 = t1571 + t1673 + t1710 + t1713 + t1744;
  t1303 = -1.000000000016*t341;
  t1312 = 1. + t1303;
  t1772 = 0.803147*t915;
  t1788 = 0.50315000001605*t456;
  t1852 = 0.00130540515936178*t978;
  t1854 = t1772 + t1788 + t1852;
  t1979 = -5.04e-14*var1[11];
  t1992 = -0.03988959484*t456;
  t2033 = 6.38224e-13*t595;
  t2088 = -0.041195*t379;
  t2126 = 0.299996999992*t978;
  t2145 = t1979 + t1992 + t2033 + t2088 + t2126;
  t1015 = -4.e-6*t875*t1010;
  t1141 = t1029*t1117;
  t1220 = 4.e-6*t341*t1216;
  t1246 = 0. + t1015 + t1141 + t1220;
  t1324 = t1312*t1010;
  t1362 = 4.e-6*t875*t1117;
  t1363 = -1.*t875*t1216;
  t1394 = 0. + t1324 + t1362 + t1363;
  t1445 = -1.2484e-7*var1[10];
  t1542 = 2.479936e-18*t341;
  t1543 = -1.54996e-7*t1022;
  t1563 = 1.124840000016e-6*t875;
  t1757 = t1029*t1747;
  t1953 = -4.e-6*t875*t1854;
  t2166 = 4.e-6*t341*t2145;
  t2174 = t1445 + t1542 + t1543 + t1563 + t1757 + t1953 + t2166;
  t2216 = 0.281210000008499*t341;
  t2217 = -0.03874900000062*t875;
  t2278 = 4.e-6*t875*t1747;
  t2324 = t1312*t1854;
  t2331 = -1.*t875*t2145;
  t2338 = t2216 + t2217 + t2278 + t2324 + t2331;
  t767 = -1. + t535 + t694;
  t776 = 4.e-6*t595;
  t780 = -4.e-6*t379;
  t825 = t776 + t780;
  t2203 = -1.*t260*t2174;
  t2359 = t144*t2338;
  t2363 = t228 + t267 + t2203 + t2359;
  t2736 = t1029*t767;
  t2765 = 4.e-6*t341*t825;
  t2777 = t2736 + t2765;
  t2826 = 4.e-6*t767*t875;
  t2854 = -1.*t825*t875;
  t2866 = t2826 + t2854;
  t2433 = -0.15121*t199;
  t2458 = t144*t2174;
  t2493 = t260*t2338;
  t2505 = t2433 + t267 + t2458 + t2493;
  t772 = 4.e-6*t341*t767;
  t837 = t315*t825;
  t844 = t772 + t837;
  t2609 = -4.9936e-13*var1[10];
  t2617 = -0.038749*t341;
  t2623 = 6.19984e-13*t1022;
  t2626 = -0.281210000004*t875;
  t2641 = 4.e-6*t341*t1747;
  t2644 = t875*t1854;
  t2651 = t315*t2145;
  t2667 = 0. + t2609 + t2617 + t2623 + t2626 + t2641 + t2644 + t2651;
  t2523 = t875*t1010;
  t2553 = 4.e-6*t341*t1117;
  t2577 = t315*t1216;
  t2596 = 0. + t2523 + t2553 + t2577;
  t1290 = -1.*t260*t1246;
  t1424 = t144*t1394;
  t1432 = 0. + t1290 + t1424;
  t2372 = -1.*t1432*t2363;
  t2392 = t144*t1246;
  t2411 = t260*t1394;
  t2418 = 0. + t2392 + t2411;
  t2516 = -1.*t2418*t2505;
  t2682 = -1.*t2596*t2667;
  t2684 = t2372 + t2516 + t2682;
  t2718 = t844*t2684;
  t2779 = -1.*t2777*t260;
  t2889 = t144*t2866;
  t2913 = t2779 + t2889;
  t2920 = t2913*t2363;
  t2940 = t144*t2777;
  t2947 = t260*t2866;
  t2958 = t2940 + t2947;
  t2967 = t2958*t2505;
  t3001 = t844*t2667;
  t3016 = t2920 + t2967 + t3001;
  t3021 = t3016*t2596;
  t3022 = t2718 + t3021;
  t3048 = t2609 + t2617 + t2623 + t2626 + t2641 + t2644 + t2651;
  t3225 = -1.7408e-8*t456;
  t3231 = -3.999964e-6*t978;
  t3243 = t3225 + t3231;
  t3249 = 0.999991*t915;
  t3251 = t3249 + t1185;
  t3303 = -0.004352*t379;
  t3314 = 0.999991*t978;
  t3326 = t3303 + t3314;
  t3043 = -1.*t1246*t2174;
  t3068 = -1.*t2596*t3048;
  t3116 = -1.*t1394*t2338;
  t3160 = t3043 + t3068 + t3116;
  t3162 = t844*t3160;
  t3177 = t2777*t2174;
  t3188 = t844*t3048;
  t3194 = t2866*t2338;
  t3197 = t3177 + t3188 + t3194;
  t3215 = t3197*t2596;
  t3247 = t1029*t3243;
  t3253 = -4.e-6*t875*t3251;
  t3346 = 4.e-6*t341*t3326;
  t3359 = 0. + t3247 + t3253 + t3346;
  t3383 = -0.15121*t3359;
  t3389 = 4.e-6*t875*t3243;
  t3396 = t1312*t3251;
  t3402 = -1.*t875*t3326;
  t3407 = 0. + t3389 + t3396 + t3402;
  t3420 = -0.15121*t3407;
  t3442 = t3162 + t3215 + t3383 + t3420;
  t3468 = -1.*t1747*t1117;
  t3469 = -1.*t1010*t1854;
  t3480 = -1.*t1216*t2145;
  t3483 = t3468 + t3469 + t3480;
  t3505 = t767*t1747;
  t3510 = t825*t2145;
  t3512 = t3505 + t3510;
  t3495 = -1.*t825*t3483;
  t3520 = -1.*t3512*t1216;
  t3546 = t3495 + t3520;
  t3549 = 4.e-6*t3546;
  t3553 = -1.*t767*t3483;
  t3555 = 1.e-6*t3243;
  t3556 = -1.*t3512*t1117;
  t3566 = -0.038749*t3251;
  t3570 = -0.28121*t3326;
  t3572 = t3549 + t3553 + t3555 + t3556 + t3566 + t3570;
  t119 = Cos(var1[4]);
  t131 = Cos(var1[5]);
  t3618 = Sin(var1[5]);
  t3607 = Sin(var1[4]);
  t3632 = -1.*t119*t131*t260;
  t3634 = -1.*t144*t119*t3618;
  t3635 = t3632 + t3634;
  t3651 = t144*t119*t131;
  t3657 = -1.*t119*t260*t3618;
  t3659 = t3651 + t3657;
  t3790 = 4.e-6*t341*t3243;
  t3791 = t875*t3251;
  t3797 = t315*t3326;
  t3798 = 0. + t3790 + t3791 + t3797;
  t3821 = t3798*t3607;
  t3822 = -1.*t260*t3359;
  t3824 = t144*t3407;
  t3842 = 0. + t3822 + t3824;
  t3864 = t131*t3842;
  t3866 = t144*t3359;
  t3877 = t260*t3407;
  t3879 = 0. + t3866 + t3877;
  t3884 = -1.*t3879*t3618;
  t3887 = 0. + t3864 + t3884;
  t3891 = t119*t3887;
  t3910 = 0. + t3821 + t3891;
  t3686 = t875*t3607;
  t3690 = -4.e-6*t875*t3635;
  t3711 = t1312*t3659;
  t3717 = t3686 + t3690 + t3711;
  t3742 = t315*t3607;
  t3743 = 4.e-6*t341*t3635;
  t3750 = -1.*t875*t3659;
  t3757 = t3742 + t3743 + t3750;
  t3774 = 4.e-6*t341*t3607;
  t3776 = t1029*t3635;
  t3777 = 4.e-6*t875*t3659;
  t3787 = t3774 + t3776 + t3777;
  t4037 = t131*t2958;
  t4038 = t2913*t3618;
  t4040 = t4037 + t4038;
  t4012 = t131*t2418;
  t4013 = t1432*t3618;
  t4019 = 0. + t4012 + t4013;
  t4042 = t131*t2505;
  t4047 = t2363*t3618;
  t4048 = 0. + t4042 + t4047;
  t4090 = t131*t2363;
  t4091 = -1.*t2505*t3618;
  t4092 = 0. + t4090 + t4091;
  t4059 = t4040*t4048;
  t4068 = t131*t2913;
  t4076 = -1.*t2958*t3618;
  t4083 = t4068 + t4076;
  t4104 = t4083*t4092;
  t4112 = t3001 + t4059 + t4104;
  t4120 = t4019*t4112;
  t4126 = -1.*t4019*t4048;
  t4132 = t131*t1432;
  t4133 = -1.*t2418*t3618;
  t4137 = 0. + t4132 + t4133;
  t4141 = -1.*t4137*t4092;
  t4144 = t2682 + t4126 + t4141;
  t4151 = t4040*t4144;
  t4177 = t4120 + t4151;
  t4180 = Sin(var1[3]);
  t4192 = t131*t3879;
  t4193 = t3842*t3618;
  t4194 = 0. + t4192 + t4193;
  t4200 = t4180*t4194;
  t4207 = Cos(var1[3]);
  t4208 = t119*t3798;
  t4210 = -1.*t3607*t3887;
  t4211 = 0. + t4208 + t4210;
  t4222 = t4207*t4211;
  t4230 = 0. + t4200 + t4222;
  t4248 = t4207*t4194;
  t4252 = -1.*t4180*t4211;
  t4254 = 0. + t4248 + t4252;
  t4274 = t844*t3607;
  t4278 = t119*t4083;
  t4279 = t4274 + t4278;
  t4262 = t2596*t3607;
  t4269 = t119*t4137;
  t4273 = 0. + t4262 + t4269;
  t4281 = t2667*t3607;
  t4292 = t119*t4092;
  t4294 = 0. + t4281 + t4292;
  t4321 = t119*t2667;
  t4335 = -1.*t3607*t4092;
  t4338 = 0. + t4321 + t4335;
  t4300 = t4279*t4294;
  t4308 = t844*t119;
  t4311 = -1.*t3607*t4083;
  t4314 = t4308 + t4311;
  t4340 = t4314*t4338;
  t4342 = t4059 + t4300 + t4340;
  t4343 = t4273*t4342;
  t4346 = -1.*t4273*t4294;
  t4347 = t119*t2596;
  t4350 = -1.*t3607*t4137;
  t4356 = 0. + t4347 + t4350;
  t4358 = -1.*t4356*t4338;
  t4360 = t4126 + t4346 + t4358;
  t4361 = t4279*t4360;
  t4363 = t4343 + t4361;
  t4377 = 0.00130540515936178*t379;
  t4381 = -0.2999969999968001*t978;
  t4383 = t4377 + t4381;
  t4395 = -1.199987999968e-6*t379;
  t4405 = -5.2216206374471e-9*t978;
  t4406 = -1.26e-8 + t4395 + t4405;
  t4436 = 0.299996999992*t379;
  t4437 = -5.04e-14 + t4436 + t1852;
  t4389 = -4.e-6*t875*t4383;
  t4417 = t1029*t4406;
  t4441 = 4.e-6*t341*t4437;
  t4444 = t4389 + t4417 + t4441;
  t4452 = t1312*t4383;
  t4478 = 4.e-6*t875*t4406;
  t4481 = -1.*t875*t4437;
  t4495 = t4452 + t4478 + t4481;
  t4529 = 0.004352*t379;
  t4543 = t4529 + t989;
  t4547 = -0.9999910000159999*t379;
  t4551 = -0.00435200000006963*t978;
  t4558 = t4547 + t4551;
  t4585 = -1.7408e-8*t379;
  t4586 = 3.999964000064e-6*t978;
  t4587 = t4585 + t4586;
  t4544 = 4.e-6*t341*t4543;
  t4562 = -4.e-6*t875*t4558;
  t4592 = t1029*t4587;
  t4597 = t4544 + t4562 + t4592;
  t4608 = -1.*t875*t4543;
  t4609 = t1312*t4558;
  t4610 = 4.e-6*t875*t4587;
  t4611 = t4608 + t4609 + t4610;
  t4663 = t315*t4543;
  t4666 = t875*t4558;
  t4669 = 4.e-6*t341*t4587;
  t4686 = t4663 + t4666 + t4669;
  t4447 = -1.*t260*t4444;
  t4499 = t144*t4495;
  t4503 = t4447 + t4499;
  t4518 = t144*t4444;
  t4519 = t260*t4495;
  t4521 = t4518 + t4519;
  t4654 = t875*t4383;
  t4655 = 4.e-6*t341*t4406;
  t4658 = t315*t4437;
  t4660 = t4654 + t4655 + t4658;
  t4662 = -1.*t4660*t2596;
  t4760 = -3.999964e-6*t379;
  t4763 = t4760 + t1098;
  t4766 = t1155 + t1185;
  t4699 = t844*t4660;
  t4820 = -1.*t1010*t4383;
  t4821 = -1.*t1117*t4406;
  t4824 = -1.*t1747*t4587;
  t4825 = -1.*t4558*t1854;
  t4827 = -1.*t4437*t1216;
  t4838 = -1.*t4543*t2145;
  t4841 = t4820 + t4821 + t4824 + t4825 + t4827 + t4838;
  t4846 = t767*t4406;
  t4847 = t825*t4437;
  t4848 = t4846 + t4847;
  t4756 = -4.e-6*t875*t4543;
  t4765 = t1029*t4763;
  t4773 = 4.e-6*t341*t4766;
  t4777 = t4756 + t4765 + t4773;
  t4779 = t1312*t4543;
  t4781 = 4.e-6*t875*t4763;
  t4787 = -1.*t875*t4766;
  t4789 = t4779 + t4781 + t4787;
  t4891 = t144*t4777;
  t4892 = t260*t4789;
  t4894 = t4891 + t4892;
  t4883 = -1.*t260*t4777;
  t4884 = t144*t4789;
  t4885 = t4883 + t4884;
  t4873 = t875*t4543;
  t4874 = 4.e-6*t341*t4763;
  t4876 = t315*t4766;
  t4877 = t4873 + t4874 + t4876;
  t4889 = t131*t4885;
  t4895 = -1.*t4894*t3618;
  t4896 = t4889 + t4895;
  t4906 = t131*t4894;
  t4907 = t4885*t3618;
  t4908 = t4906 + t4907;
  t4919 = t119*t4877;
  t4920 = -1.*t3607*t4896;
  t4921 = t4919 + t4920;
  t4632 = t144*t4597;
  t4637 = t260*t4611;
  t4638 = t4632 + t4637;
  t4598 = -1.*t260*t4597;
  t4615 = t144*t4611;
  t4622 = t4598 + t4615;
  t4688 = -1.*t4686*t2667;
  t4946 = t131*t4521;
  t4960 = t4503*t3618;
  t4968 = t4946 + t4960;
  t4973 = t131*t4503;
  t4974 = -1.*t4521*t3618;
  t4977 = t4973 + t4974;
  t5002 = t131*t4638;
  t5010 = t4622*t3618;
  t5017 = t5002 + t5010;
  t4971 = t4040*t4968;
  t5026 = t131*t4622;
  t5027 = -1.*t4638*t3618;
  t5032 = t5026 + t5027;
  t5021 = -1.*t4968*t4019;
  t5025 = -1.*t5017*t4048;
  t5062 = t4660*t3607;
  t5063 = t119*t4977;
  t5068 = t5062 + t5063;
  t5073 = t119*t4660;
  t5076 = -1.*t3607*t4977;
  t5077 = t5073 + t5076;
  t5082 = t4686*t3607;
  t5083 = t119*t5032;
  t5084 = t5082 + t5083;
  t5142 = -0.15121*t144;
  t5146 = t5142 + t267 + t2203 + t2359;
  t5148 = 0.15121*t260;
  t5150 = -1.*t144*t2174;
  t5153 = -1.*t260*t2338;
  t5156 = t5142 + t5148 + t5150 + t5153;
  t5201 = -1.*t144*t3359;
  t5207 = -1.*t260*t3407;
  t5210 = t5201 + t5207;
  t5211 = t131*t5210;
  t5212 = t3822 + t3824;
  t5217 = -1.*t5212*t3618;
  t5218 = t5211 + t5217;
  t5226 = t131*t5212;
  t5227 = t5210*t3618;
  t5233 = t5226 + t5227;
  t5166 = -1.*t144*t2777;
  t5167 = -1.*t260*t2866;
  t5176 = t5166 + t5167;
  t5158 = t1290 + t1424;
  t5128 = -1.*t144*t1246;
  t5129 = -1.*t260*t1394;
  t5139 = t5128 + t5129;
  t5294 = t131*t5158;
  t5295 = t5139*t3618;
  t5296 = t5294 + t5295;
  t5261 = t131*t5156;
  t5266 = -1.*t5146*t3618;
  t5269 = t5261 + t5266;
  t5277 = t131*t5146;
  t5278 = t5156*t3618;
  t5282 = t5277 + t5278;
  t5256 = t5176*t3618;
  t5258 = t4068 + t5256;
  t5260 = t5258*t4048;
  t5283 = t4040*t5282;
  t5285 = t131*t5176;
  t5286 = -1.*t2913*t3618;
  t5287 = t5285 + t5286;
  t5299 = -1.*t5296*t4048;
  t5301 = -1.*t4019*t5282;
  t5302 = t131*t5139;
  t5303 = -1.*t5158*t3618;
  t5307 = t5302 + t5303;
  t5345 = -1.*t131*t3879;
  t5346 = -1.*t3842*t3618;
  t5347 = t5345 + t5346;
  t5366 = t3864 + t3884;
  t5382 = -1.*t131*t2505;
  t5385 = -1.*t2363*t3618;
  t5386 = t5382 + t5385;
  t5414 = t4132 + t4133;
  t5393 = t4090 + t4091;
  t5388 = t4083*t4048;
  t5394 = t4040*t5393;
  t5395 = -1.*t131*t2958;
  t5398 = t5395 + t5286;
  t5422 = -1.*t5414*t4048;
  t5425 = -1.*t4019*t5393;
  t5426 = -1.*t131*t2418;
  t5437 = -1.*t1432*t3618;
  t5439 = t5426 + t5437;
  t5486 = -1.*t3798*t3607;
  t5497 = -1.*t119*t3887;
  t5498 = t5486 + t5497;
  t5510 = -1.*t2667*t3607;
  t5514 = -1.*t119*t4092;
  t5515 = t5510 + t5514;
  t5530 = t4347 + t4350;
  t5518 = t4321 + t4335;
  t5555 = -1.000000000016*t875*t1010;
  t5556 = 4.e-6*t315*t1117;
  t5557 = -1.*t315*t1216;
  t5558 = t5555 + t5556 + t5557;
  t5561 = -4.e-6*t315*t1010;
  t5562 = -1.6e-11*t875*t1117;
  t5563 = 4.e-6*t875*t1216;
  t5564 = t5561 + t5562 + t5563;
  t5574 = -0.03874900000062*t315;
  t5576 = 0.281210000008499*t875;
  t5578 = 4.e-6*t315*t1747;
  t5579 = -1.000000000016*t875*t1854;
  t5580 = -1.*t315*t2145;
  t5581 = t5574 + t5576 + t5578 + t5579 + t5580;
  t5587 = 1.124840000016e-6*t315;
  t5590 = 1.5499600000248e-7*t875;
  t5591 = -1.6e-11*t875*t1747;
  t5592 = -4.e-6*t315*t1854;
  t5594 = 4.e-6*t875*t2145;
  t5595 = -1.2484e-7 + t5587 + t5590 + t5591 + t5592 + t5594;
  t5623 = 4.e-6*t315*t767;
  t5624 = -1.*t315*t825;
  t5628 = t5623 + t5624;
  t5632 = -1.6e-11*t767*t875;
  t5634 = 4.e-6*t825*t875;
  t5637 = t5632 + t5634;
  t5582 = t260*t5581;
  t5596 = t144*t5595;
  t5597 = t5582 + t5596;
  t5601 = t144*t5581;
  t5602 = -1.*t260*t5595;
  t5603 = t5601 + t5602;
  t5616 = -0.281210000004*t315;
  t5617 = t315*t1854;
  t5618 = -4.9936e-13 + t5616 + t2217 + t2278 + t5617 + t2331;
  t5605 = t315*t1010;
  t5606 = t5605 + t1362 + t1363;
  t5619 = -1.*t2596*t5618;
  t5657 = t844*t5618;
  t5707 = 4.e-6*t315*t3243;
  t5708 = -1.000000000016*t875*t3251;
  t5709 = -1.*t315*t3326;
  t5714 = t5707 + t5708 + t5709;
  t5719 = -1.6e-11*t875*t3243;
  t5720 = -4.e-6*t315*t3251;
  t5721 = 4.e-6*t875*t3326;
  t5722 = t5719 + t5720 + t5721;
  t5569 = t260*t5558;
  t5570 = t144*t5564;
  t5572 = t5569 + t5570;
  t5560 = t144*t5558;
  t5566 = -1.*t260*t5564;
  t5567 = t5560 + t5566;
  t5643 = t5628*t260;
  t5644 = t144*t5637;
  t5645 = t5643 + t5644;
  t5630 = t144*t5628;
  t5638 = -1.*t260*t5637;
  t5639 = t5630 + t5638;
  t5652 = t2866*t2667;
  t5770 = t131*t5645;
  t5773 = t5639*t3618;
  t5774 = t5770 + t5773;
  t5612 = -1.*t5606*t2667;
  t5765 = t131*t5572;
  t5766 = t5567*t3618;
  t5767 = t5765 + t5766;
  t5783 = t131*t5603;
  t5794 = -1.*t5597*t3618;
  t5801 = t5783 + t5794;
  t5804 = t131*t5597;
  t5805 = t5603*t3618;
  t5807 = t5804 + t5805;
  t5743 = t260*t5714;
  t5748 = t144*t5722;
  t5754 = t5743 + t5748;
  t5730 = t144*t5714;
  t5731 = -1.*t260*t5722;
  t5732 = t5730 + t5731;
  t5727 = t315*t3251;
  t5728 = t3389 + t5727 + t3402;
  t5735 = t131*t5732;
  t5755 = -1.*t5754*t3618;
  t5758 = t5735 + t5755;
  t5833 = t131*t5754;
  t5836 = t5732*t3618;
  t5837 = t5833 + t5836;
  t5839 = t119*t5728;
  t5840 = -1.*t3607*t5758;
  t5841 = t5839 + t5840;
  t5817 = t131*t5567;
  t5821 = -1.*t5572*t3618;
  t5822 = t5817 + t5821;
  t5777 = t131*t5639;
  t5778 = -1.*t5645*t3618;
  t5781 = t5777 + t5778;
  t5776 = t5774*t4048;
  t5809 = t4040*t5807;
  t5855 = t2866*t3607;
  t5859 = t119*t5781;
  t5860 = t5855 + t5859;
  t5816 = -1.*t5767*t4048;
  t5826 = -1.*t4019*t5807;
  t5851 = t5606*t3607;
  t5852 = t119*t5822;
  t5853 = t5851 + t5852;
  t5881 = t5618*t3607;
  t5882 = t119*t5801;
  t5885 = t5881 + t5882;
  t5888 = t119*t5618;
  t5889 = -1.*t3607*t5801;
  t5890 = t5888 + t5889;
  t5926 = t2363*t3842;
  t5927 = t2505*t3879;
  t5928 = t2667*t3798;
  t5929 = t5926 + t5927 + t5928;
  t5930 = t844*t5929;
  t5932 = -1.*t2913*t2363;
  t5934 = -1.*t2958*t2505;
  t5935 = -1.*t844*t2667;
  t5936 = t5932 + t5934 + t5935;
  t5937 = t5936*t3798;
  t5938 = t5930 + t5937;
  t5941 = t2174*t3359;
  t5942 = t3048*t3798;
  t5943 = t2338*t3407;
  t5944 = t5941 + t5942 + t5943;
  t5945 = t844*t5944;
  t5946 = -0.15121*t1246;
  t5947 = -0.15121*t1394;
  t5948 = -1.*t2777*t2174;
  t5949 = -1.*t844*t3048;
  t5950 = -1.*t2866*t2338;
  t5951 = t5948 + t5949 + t5950;
  t5952 = t5951*t3798;
  t5953 = t5945 + t5946 + t5947 + t5952;
  t5956 = t3243*t1747;
  t5957 = t1854*t3251;
  t5958 = t2145*t3326;
  t5959 = t5956 + t5957 + t5958;
  t5963 = -1.*t767*t1747;
  t5966 = -1.*t825*t2145;
  t5967 = t5963 + t5966;
  t5962 = -1.*t825*t5959;
  t5968 = -1.*t5967*t3326;
  t5972 = t5962 + t5968;
  t5973 = 4.e-6*t5972;
  t5974 = -1.*t767*t5959;
  t5976 = -0.038749*t1010;
  t5977 = -1.*t5967*t3243;
  t5978 = 1.e-6*t1117;
  t5979 = -0.28121*t1216;
  t5980 = t5973 + t5974 + t5976 + t5977 + t5978 + t5979;
  t3596 = t2609 + t2617 + t2623 + t2626;
  t297 = t228 + t267;
  t3613 = t2433 + t267;
  t3628 = t1445 + t1542 + t1543 + t1563;
  t5986 = t131*t4180*t3607;
  t5987 = t4207*t3618;
  t5988 = t5986 + t5987;
  t5990 = t4207*t131;
  t5991 = -1.*t4180*t3607*t3618;
  t5994 = t5990 + t5991;
  t3648 = t2216 + t2217;
  t6009 = t4180*t4019;
  t6010 = t4207*t4356;
  t6011 = 0. + t6009 + t6010;
  t6017 = t4207*t4019;
  t6018 = -1.*t4180*t4356;
  t6020 = 0. + t6017 + t6018;
  t6031 = -1.*t4040*t4048;
  t6032 = -1.*t4083*t4092;
  t6034 = t5935 + t6031 + t6032;
  t6035 = t4194*t6034;
  t6036 = t4048*t4194;
  t6037 = t4092*t3887;
  t6040 = t5928 + t6036 + t6037;
  t6042 = t4040*t6040;
  t6043 = t6035 + t6042;
  t3663 = -0.0398890000006382*t978;
  t3683 = t1788 + t3663;
  t5999 = -1.*t260*t5988;
  t6000 = t144*t5994;
  t6002 = t5999 + t6000;
  t6005 = t144*t5988;
  t6006 = t260*t5994;
  t6007 = t6005 + t6006;
  t3721 = -0.039889*t456;
  t3722 = -0.503150000008*t978;
  t3741 = t1979 + t3721 + t2033 + t3722;
  t3764 = 2.552896e-18*t456;
  t3765 = 2.012600000032e-6*t978;
  t3769 = t1571 + t3764 + t1713 + t3765;
  t6089 = -1.*t4279*t4294;
  t6090 = -1.*t4314*t4338;
  t6091 = t6031 + t6089 + t6090;
  t6092 = t3910*t6091;
  t6093 = t4294*t3910;
  t6094 = t4338*t4211;
  t6096 = t6036 + t6093 + t6094;
  t6097 = t4279*t6096;
  t6100 = t6092 + t6097;
  t6047 = -1.*t119*t875*t4180;
  t6048 = -4.e-6*t875*t6002;
  t6049 = t1312*t6007;
  t6050 = t6047 + t6048 + t6049;
  t6056 = -1.*t315*t119*t4180;
  t6059 = 4.e-6*t341*t6002;
  t6060 = -1.*t875*t6007;
  t6061 = t6056 + t6059 + t6060;
  t6065 = -4.e-6*t341*t119*t4180;
  t6071 = t1029*t6002;
  t6072 = 4.e-6*t875*t6007;
  t6073 = t6065 + t6071 + t6072;
  t6131 = t4660*t3798;
  t6140 = -1.*t844*t4660;
  t6171 = t1747*t4763;
  t6172 = t3243*t4406;
  t6173 = t4543*t1854;
  t6174 = t4383*t3251;
  t6175 = t4766*t2145;
  t6176 = t4437*t3326;
  t6177 = t6171 + t6172 + t6173 + t6174 + t6175 + t6176;
  t6181 = -1.*t767*t4406;
  t6184 = -1.*t825*t4437;
  t6185 = t6181 + t6184;
  t5093 = t119*t4686;
  t5097 = -1.*t3607*t5032;
  t5108 = t5093 + t5097;
  t6130 = t4877*t2667;
  t6232 = -1.*t4040*t4968;
  t4878 = t4877*t3607;
  t4900 = t119*t4896;
  t4902 = t4878 + t4900;
  t6237 = t4908*t4048;
  t6245 = t4968*t4194;
  t6313 = -1.*t5258*t4048;
  t6316 = -1.*t4040*t5282;
  t6322 = t5282*t4194;
  t6324 = t4048*t5233;
  t6377 = -1.*t4083*t4048;
  t6378 = -1.*t4040*t5393;
  t6401 = t5393*t4194;
  t6402 = t4048*t5366;
  t5537 = -1.*t2596*t3607;
  t5538 = -1.*t119*t4137;
  t5539 = t5537 + t5538;
  t5520 = -1.*t844*t3607;
  t5522 = -1.*t119*t4083;
  t5523 = t5520 + t5522;
  t5504 = t4208 + t4210;
  t6480 = t5618*t3798;
  t6491 = -1.*t844*t5618;
  t5899 = t119*t5606;
  t5902 = -1.*t3607*t5822;
  t5903 = t5899 + t5902;
  t6490 = -1.*t2866*t2667;
  t6481 = t2667*t5728;
  t5729 = t5728*t3607;
  t5759 = t119*t5758;
  t5762 = t5729 + t5759;
  t6538 = -1.*t5774*t4048;
  t6543 = -1.*t4040*t5807;
  t5870 = t119*t2866;
  t5874 = -1.*t3607*t5781;
  t5875 = t5870 + t5874;
  t6547 = t5807*t4194;
  t6553 = t4048*t5837;
  t6590 = -1.*t2363*t3842;
  t6592 = -1.*t2505*t3879;
  t6593 = -1.*t2667*t3798;
  t6595 = t6590 + t6592 + t6593;
  t6596 = t6595*t2596;
  t6599 = t1432*t2363;
  t6600 = t2418*t2505;
  t6601 = t2596*t2667;
  t6602 = t6599 + t6600 + t6601;
  t6603 = t6602*t3798;
  t6604 = t6596 + t6603;
  t6608 = -0.15121*t2777;
  t6610 = -0.15121*t2866;
  t6611 = -1.*t2174*t3359;
  t6612 = -1.*t3048*t3798;
  t6614 = -1.*t2338*t3407;
  t6615 = t6611 + t6612 + t6614;
  t6617 = t6615*t2596;
  t6619 = t1246*t2174;
  t6620 = t2596*t3048;
  t6622 = t1394*t2338;
  t6623 = t6619 + t6620 + t6622;
  t6625 = t6623*t3798;
  t6627 = t6608 + t6610 + t6617 + t6625;
  t6638 = t1747*t1117;
  t6639 = t1010*t1854;
  t6640 = t1216*t2145;
  t6641 = t6638 + t6639 + t6640;
  t6632 = -1.*t3243*t1747;
  t6633 = -1.*t1854*t3251;
  t6634 = -1.*t2145*t3326;
  t6635 = t6632 + t6633 + t6634;
  t6630 = 1.e-6*t767;
  t6631 = -0.28121*t825;
  t6637 = -1.*t6635*t1216;
  t6642 = -1.*t6641*t3326;
  t6643 = t6637 + t6642;
  t6645 = 4.e-6*t6643;
  t6646 = -1.*t6641*t3243;
  t6647 = -1.*t6635*t1117;
  t6648 = t6630 + t6631 + t6645 + t6646 + t6647;
  t6654 = -1.*t4207*t131*t3607;
  t6656 = t4180*t3618;
  t6658 = t6654 + t6656;
  t6665 = t131*t4180;
  t6666 = t4207*t3607*t3618;
  t6668 = t6665 + t6666;
  t6687 = t4180*t4040;
  t6689 = t4207*t4314;
  t6690 = t6687 + t6689;
  t6693 = t4207*t4040;
  t6694 = -1.*t4180*t4314;
  t6695 = t6693 + t6694;
  t6699 = t4019*t4048;
  t6700 = t4137*t4092;
  t6701 = t6601 + t6699 + t6700;
  t6702 = t4194*t6701;
  t6704 = -1.*t4048*t4194;
  t6705 = -1.*t4092*t3887;
  t6706 = t6593 + t6704 + t6705;
  t6707 = t4019*t6706;
  t6708 = t6702 + t6707;
  t6675 = -1.*t260*t6658;
  t6676 = t144*t6668;
  t6677 = t6675 + t6676;
  t6679 = t144*t6658;
  t6681 = t260*t6668;
  t6682 = t6679 + t6681;
  t6739 = t4273*t4294;
  t6740 = t4356*t4338;
  t6741 = t6699 + t6739 + t6740;
  t6742 = t3910*t6741;
  t6743 = -1.*t4294*t3910;
  t6744 = -1.*t4338*t4211;
  t6745 = t6704 + t6743 + t6744;
  t6746 = t4273*t6745;
  t6747 = t6742 + t6746;
  t6711 = t4207*t119*t875;
  t6712 = -4.e-6*t875*t6677;
  t6713 = t1312*t6682;
  t6714 = t6711 + t6712 + t6713;
  t6716 = t315*t4207*t119;
  t6717 = 4.e-6*t341*t6677;
  t6718 = -1.*t875*t6682;
  t6720 = t6716 + t6717 + t6718;
  t6723 = 4.e-6*t341*t4207*t119;
  t6724 = t1029*t6677;
  t6725 = 4.e-6*t875*t6682;
  t6726 = t6723 + t6724 + t6725;
  t6806 = t5296*t4048;
  t6808 = t4019*t5282;
  t6820 = -1.*t5282*t4194;
  t6821 = -1.*t4048*t5233;
  t6868 = t5414*t4048;
  t6870 = t4019*t5393;
  t6876 = -1.*t5393*t4194;
  t6877 = -1.*t4048*t5366;
  t6918 = -1.*t4660*t3798;
  t6926 = t4660*t2596;
  t6978 = t1010*t4383;
  t6981 = t1117*t4406;
  t6984 = t1747*t4587;
  t6985 = t4558*t1854;
  t6986 = t4437*t1216;
  t6987 = t4543*t2145;
  t6988 = t6978 + t6981 + t6984 + t6985 + t6986 + t6987;
  t6963 = -1.*t1747*t4763;
  t6965 = -1.*t3243*t4406;
  t6966 = -1.*t4543*t1854;
  t6967 = -1.*t4383*t3251;
  t6970 = -1.*t4766*t2145;
  t6974 = -1.*t4437*t3326;
  t6976 = t6963 + t6965 + t6966 + t6967 + t6970 + t6974;
  t6928 = t4686*t2667;
  t6917 = -1.*t4877*t2667;
  t7001 = t4968*t4019;
  t7003 = t5017*t4048;
  t7008 = -1.*t4908*t4048;
  t7011 = -1.*t4968*t4194;
  t7075 = -1.*t5618*t3798;
  t7087 = t2596*t5618;
  t7086 = t5606*t2667;
  t7076 = -1.*t2667*t5728;
  t7138 = t5767*t4048;
  t7141 = t4019*t5807;
  t7145 = -1.*t5807*t4194;
  t7148 = -1.*t4048*t5837;
  p_output1[0]=t119*t131*t297 + t3596*t3607 - 1.*t119*t3613*t3618 + t3628*t3635 + t3648*t3659 + t3683*t3717 + t3741*t3757 + t3769*t3787 - 0.041195*(t3757*t379 + 4.e-6*t3787*t456 - 1.*t3717*t978) - 0.14871*(t1606*t3787 + 4.e-6*t3757*t456 + 4.e-6*t3717*t978) + 0.803147*(t3717*t915 + t3757*t978 - 4.e-6*t3787*t978) + var1[0] + t3910*var2[0] + t4254*var2[1] + t4230*var2[2] + t4363*var2[3] + ((-1.*t4180*t4194 - 1.*t4207*t4211)*var2[1] + (t4248 + t4252)*var2[2])*var2[3] + t4177*var2[4] + (t5504*var2[0] - 1.*t4180*t5498*var2[1] + t4207*t5498*var2[2] + (t4314*t4360 + t4273*(t4294*t4314 + t4314*t5515 + t4279*t5518 + t4338*t5523) + t4342*t5530 + t4279*(-1.*t4356*t5515 - 1.*t4273*t5518 - 1.*t4294*t5530 - 1.*t4338*t5539))*var2[3])*var2[4] + t3022*var2[5] + (t119*t5347*var2[0] + (t3607*t4180*t5347 + t4207*t5366)*var2[1] + (-1.*t3607*t4207*t5347 + t4180*t5366)*var2[2] + (t119*t4360*t5398 + t4273*(t119*t4279*t5386 - 1.*t3607*t4314*t5386 + t5388 + t5394 + t119*t4294*t5398 - 1.*t3607*t4338*t5398) + t119*t4342*t5439 + t4279*(-1.*t119*t4273*t5386 + t3607*t4356*t5386 + t5422 + t5425 - 1.*t119*t4294*t5439 + t3607*t4338*t5439))*var2[3] + (t4083*t4144 + t4019*(t4083*t5386 + t5388 + t5394 + t4092*t5398) + t4112*t5414 + t4040*(-1.*t4137*t5386 + t5422 + t5425 - 1.*t4092*t5439))*var2[4])*var2[5] + t3442*var2[9] + (t119*t5218*var2[0] + (t3607*t4180*t5218 + t4207*t5233)*var2[1] + (-1.*t3607*t4207*t5218 + t4180*t5233)*var2[2] + (t119*t4360*t5287 + t4273*(t5260 + t119*t4279*t5269 - 1.*t3607*t4314*t5269 + t5283 + t119*t4294*t5287 - 1.*t3607*t4338*t5287) + t119*t4342*t5307 + t4279*(-1.*t119*t4273*t5269 + t3607*t4356*t5269 + t5299 + t5301 - 1.*t119*t4294*t5307 + t3607*t4338*t5307))*var2[3] + (t4144*t5258 + t4019*(t5260 + t4083*t5269 + t5283 + t4092*t5287) + t4112*t5296 + t4040*(-1.*t4137*t5269 + t5299 + t5301 - 1.*t4092*t5307))*var2[4] + (t2596*(t2505*t2913 + t2958*t5146 + t2913*t5156 + t2363*t5176) + (-1.*t2363*t5139 - 1.*t2418*t5146 - 1.*t1432*t5156 - 1.*t2505*t5158)*t844)*var2[5])*var2[9] + t3572*var2[10] + (t5762*var2[0] + (t4207*t5837 - 1.*t4180*t5841)*var2[1] + (t4180*t5837 + t4207*t5841)*var2[2] + (t4342*t5853 + t4360*t5860 + t4273*(t5776 + t5809 + t4294*t5860 + t4338*t5875 + t4279*t5885 + t4314*t5890) + t4279*(t5816 + t5826 - 1.*t4294*t5853 - 1.*t4273*t5885 - 1.*t4356*t5890 - 1.*t4338*t5903))*var2[3] + (t4112*t5767 + t4144*t5774 + t4019*(t5652 + t5657 + t5776 + t4092*t5781 + t4083*t5801 + t5809) + t4040*(t5612 + t5619 - 1.*t4137*t5801 + t5816 - 1.*t4092*t5822 + t5826))*var2[4] + (t2684*t2866 + t3016*t5606 + t2596*(t2958*t5597 + t2913*t5603 + t2363*t5639 + t2505*t5645 + t5652 + t5657) + (-1.*t2363*t5567 - 1.*t2505*t5572 - 1.*t2418*t5597 - 1.*t1432*t5603 + t5612 + t5619)*t844)*var2[5] + (t2866*t3160 + t3197*t5606 + t2596*(t2866*t3048 + t2866*t5581 + t2777*t5595 + t2338*t5628 + t2174*t5637 + t5657) - 0.15121*t5714 - 0.15121*t5722 + (-1.*t2338*t5558 - 1.*t2174*t5564 - 1.*t1394*t5581 - 1.*t1246*t5595 - 1.*t3048*t5606 + t5619)*t844)*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t4902*var2[0] + (t4207*t4908 - 1.*t4180*t4921)*var2[1] + (t4180*t4908 + t4207*t4921)*var2[2] + (t4273*(t4971 + t4279*t5068 + t4314*t5077) + t4342*t5084 + t4279*(t5021 + t5025 - 1.*t4273*t5068 - 1.*t4356*t5077 - 1.*t4294*t5084 - 1.*t4338*t5108))*var2[3] + (t4019*(t4699 + t4971 + t4083*t4977) + t4112*t5017 + t4040*(t4662 + t4688 - 1.*t4137*t4977 + t5021 + t5025 - 1.*t4092*t5032))*var2[4] + (t3016*t4686 + t2596*(t2913*t4503 + t2958*t4521 + t4699) + (-1.*t1432*t4503 - 1.*t2418*t4521 - 1.*t2363*t4622 - 1.*t2505*t4638 + t4662 + t4688)*t844)*var2[5] + (t3197*t4686 + t2596*(t2777*t4444 + t2866*t4495 + t4699) - 0.15121*t4777 - 0.15121*t4789 + (-1.*t1246*t4444 - 1.*t1394*t4495 - 1.*t2174*t4597 - 1.*t2338*t4611 + t4662 - 1.*t3048*t4686)*t844)*var2[9] + (-0.038749*t4543 - 1.*t3512*t4587 + 1.e-6*t4763 - 0.28121*t4766 - 1.*t1117*t4848 - 1.*t4841*t767 + 4.e-6*(-1.*t3512*t4543 - 1.*t1216*t4848 - 1.*t4841*t825))*var2[10])*var2[11] + t3910*var3[0] + t4254*var3[1] + t4230*var3[2] + t4363*var3[3] + t4177*var3[4] + t3022*var3[5] + t3442*var3[9] + t3572*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t119*t3596*t4180 + t297*t5988 + t3613*t5994 + t3628*t6002 + t3648*t6007 + t3683*t6050 + t3741*t6061 + t3769*t6073 - 0.041195*(t379*t6061 + 4.e-6*t456*t6073 - 1.*t6050*t978) - 0.14871*(4.e-6*t456*t6061 + t1606*t6073 + 4.e-6*t6050*t978) + 0.803147*(t6050*t915 + t6061*t978 - 4.e-6*t6073*t978) + var1[1] + t4273*var2[0] + t6020*var2[1] + t6011*var2[2] + t6100*var2[3] + ((-1.*t4019*t4180 - 1.*t4207*t4356)*var2[1] + (t6017 + t6018)*var2[2])*var2[3] + t6043*var2[4] + (t5530*var2[0] - 1.*t4180*t5539*var2[1] + t4207*t5539*var2[2] + (t4279*(t4338*t5498 + t4294*t5504 + t4211*t5515 + t3910*t5518) + t3910*(-1.*t4294*t4314 - 1.*t4314*t5515 - 1.*t4279*t5518 - 1.*t4338*t5523) + t5504*t6091 + t4314*t6096)*var2[3])*var2[4] + t5938*var2[5] + (t119*t5439*var2[0] + (t4207*t5414 + t3607*t4180*t5439)*var2[1] + (t4180*t5414 - 1.*t3607*t4207*t5439)*var2[2] + (t119*t5347*t6091 + t119*t5398*t6096 + t3910*(-1.*t119*t4279*t5386 + t3607*t4314*t5386 - 1.*t119*t4294*t5398 + t3607*t4338*t5398 + t6377 + t6378) + t4279*(t119*t4294*t5347 - 1.*t3607*t4338*t5347 + t119*t3910*t5386 - 1.*t3607*t4211*t5386 + t6401 + t6402))*var2[3] + (t5366*t6034 + t4083*t6040 + t4194*(-1.*t4083*t5386 - 1.*t4092*t5398 + t6377 + t6378) + t4040*(t4092*t5347 + t3887*t5386 + t6401 + t6402))*var2[4])*var2[5] + t5953*var2[9] + (t119*t5307*var2[0] + (t4207*t5296 + t3607*t4180*t5307)*var2[1] + (t4180*t5296 - 1.*t3607*t4207*t5307)*var2[2] + (t119*t5218*t6091 + t119*t5287*t6096 + t3910*(-1.*t119*t4279*t5269 + t3607*t4314*t5269 - 1.*t119*t4294*t5287 + t3607*t4338*t5287 + t6313 + t6316) + t4279*(t119*t4294*t5218 - 1.*t3607*t4338*t5218 + t119*t3910*t5269 - 1.*t3607*t4211*t5269 + t6322 + t6324))*var2[3] + (t5233*t6034 + t5258*t6040 + t4194*(-1.*t4083*t5269 - 1.*t4092*t5287 + t6313 + t6316) + t4040*(t4092*t5218 + t3887*t5269 + t6322 + t6324))*var2[4] + (t3798*(-1.*t2505*t2913 - 1.*t2958*t5146 - 1.*t2913*t5156 - 1.*t2363*t5176) + (t3879*t5146 + t3842*t5156 + t2363*t5210 + t2505*t5212)*t844)*var2[5])*var2[9] + t5980*var2[10] + (t5853*var2[0] + (t4207*t5767 - 1.*t4180*t5903)*var2[1] + (t4180*t5767 + t4207*t5903)*var2[2] + (t5762*t6091 + t5860*t6096 + t3910*(-1.*t4294*t5860 - 1.*t4338*t5875 - 1.*t4279*t5885 - 1.*t4314*t5890 + t6538 + t6543) + t4279*(t4294*t5762 + t4338*t5841 + t3910*t5885 + t4211*t5890 + t6547 + t6553))*var2[3] + (t5837*t6034 + t5774*t6040 + t4194*(-1.*t4092*t5781 - 1.*t4083*t5801 + t6490 + t6491 + t6538 + t6543) + t4040*(t4092*t5758 + t3887*t5801 + t6480 + t6481 + t6547 + t6553))*var2[4] + (t2866*t5929 + t5728*t5936 + t3798*(-1.*t2958*t5597 - 1.*t2913*t5603 - 1.*t2363*t5639 - 1.*t2505*t5645 + t6490 + t6491) + (t3879*t5597 + t3842*t5603 + t2363*t5732 + t2505*t5754 + t6480 + t6481)*t844)*var2[5] + (-0.15121*t5558 - 0.15121*t5564 + t2866*t5944 + t5728*t5951 + t3798*(-1.*t2866*t3048 - 1.*t2866*t5581 - 1.*t2777*t5595 - 1.*t2338*t5628 - 1.*t2174*t5637 + t6491) + (t3407*t5581 + t3359*t5595 + t2338*t5714 + t2174*t5722 + t3048*t5728 + t6480)*t844)*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5084*var2[0] + (t4207*t5017 - 1.*t4180*t5108)*var2[1] + (t4180*t5017 + t4207*t5108)*var2[2] + (t4902*t6091 + t3910*(-1.*t4279*t5068 - 1.*t4314*t5077 + t6232) + t4279*(t4294*t4902 + t4338*t4921 + t3910*t5068 + t4211*t5077 + t6237 + t6245))*var2[3] + (t4908*t6034 + t4194*(-1.*t4083*t4977 + t6140 + t6232) + t4040*(t4092*t4896 + t3887*t4977 + t6130 + t6131 + t6237 + t6245))*var2[4] + (t4877*t5936 + t3798*(-1.*t2913*t4503 - 1.*t2958*t4521 + t6140) + (t3842*t4503 + t3879*t4521 + t2363*t4885 + t2505*t4894 + t6130 + t6131)*t844)*var2[5] + (-0.15121*t4597 - 0.15121*t4611 + t4877*t5951 + t3798*(-1.*t2777*t4444 - 1.*t2866*t4495 + t6140) + (t3359*t4444 + t3407*t4495 + t2174*t4777 + t2338*t4789 + t3048*t4877 + t6131)*t844)*var2[9] + (-0.28121*t4543 - 0.038749*t4558 + 1.e-6*t4587 - 1.*t4763*t5967 - 1.*t3243*t6185 - 1.*t6177*t767 + 4.e-6*(-1.*t4766*t5967 - 1.*t3326*t6185 - 1.*t6177*t825))*var2[10])*var2[11] + t4273*var3[0] + t6020*var3[1] + t6011*var3[2] + t6100*var3[3] + t6043*var3[4] + t5938*var3[5] + t5953*var3[9] + t5980*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t119*t3596*t4207 + t297*t6658 + t3613*t6668 + t3628*t6677 + t3648*t6682 + t3683*t6714 + t3741*t6720 + t3769*t6726 - 0.041195*(t379*t6720 + 4.e-6*t456*t6726 - 1.*t6714*t978) - 0.14871*(4.e-6*t456*t6720 + t1606*t6726 + 4.e-6*t6714*t978) + 0.803147*(t6714*t915 + t6720*t978 - 4.e-6*t6726*t978) + var1[2] + t4279*var2[0] + t6695*var2[1] + t6690*var2[2] + t6747*var2[3] + ((-1.*t4040*t4180 - 1.*t4207*t4314)*var2[1] + t6695*var2[2])*var2[3] + t6708*var2[4] + (t4314*var2[0] - 1.*t4180*t5523*var2[1] + t4207*t5523*var2[2] + (t4273*(-1.*t4338*t5498 - 1.*t4294*t5504 - 1.*t4211*t5515 - 1.*t3910*t5518) + t3910*(t4356*t5515 + t4273*t5518 + t4294*t5530 + t4338*t5539) + t5504*t6741 + t5530*t6745)*var2[3])*var2[4] + t6604*var2[5] + (t119*t5398*var2[0] + (t4083*t4207 + t3607*t4180*t5398)*var2[1] + (t4083*t4180 - 1.*t3607*t4207*t5398)*var2[2] + (t119*t5347*t6741 + t119*t5439*t6745 + t3910*(t119*t4273*t5386 - 1.*t3607*t4356*t5386 + t119*t4294*t5439 - 1.*t3607*t4338*t5439 + t6868 + t6870) + t4273*(-1.*t119*t4294*t5347 + t3607*t4338*t5347 - 1.*t119*t3910*t5386 + t3607*t4211*t5386 + t6876 + t6877))*var2[3] + (t5366*t6701 + t5414*t6706 + t4194*(t4137*t5386 + t4092*t5439 + t6868 + t6870) + t4019*(-1.*t4092*t5347 - 1.*t3887*t5386 + t6876 + t6877))*var2[4])*var2[5] + t6627*var2[9] + (t119*t5287*var2[0] + (t4207*t5258 + t3607*t4180*t5287)*var2[1] + (t4180*t5258 - 1.*t3607*t4207*t5287)*var2[2] + (t119*t5218*t6741 + t119*t5307*t6745 + t3910*(t119*t4273*t5269 - 1.*t3607*t4356*t5269 + t119*t4294*t5307 - 1.*t3607*t4338*t5307 + t6806 + t6808) + t4273*(-1.*t119*t4294*t5218 + t3607*t4338*t5218 - 1.*t119*t3910*t5269 + t3607*t4211*t5269 + t6820 + t6821))*var2[3] + (t5233*t6701 + t5296*t6706 + t4194*(t4137*t5269 + t4092*t5307 + t6806 + t6808) + t4019*(-1.*t4092*t5218 - 1.*t3887*t5269 + t6820 + t6821))*var2[4] + (t3798*(t2363*t5139 + t2418*t5146 + t1432*t5156 + t2505*t5158) + t2596*(-1.*t3879*t5146 - 1.*t3842*t5156 - 1.*t2363*t5210 - 1.*t2505*t5212))*var2[5])*var2[9] + t6648*var2[10] + (t5860*var2[0] + (t4207*t5774 - 1.*t4180*t5875)*var2[1] + (t4180*t5774 + t4207*t5875)*var2[2] + (t5762*t6741 + t5853*t6745 + t3910*(t4294*t5853 + t4273*t5885 + t4356*t5890 + t4338*t5903 + t7138 + t7141) + t4273*(-1.*t4294*t5762 - 1.*t4338*t5841 - 1.*t3910*t5885 - 1.*t4211*t5890 + t7145 + t7148))*var2[3] + (t5837*t6701 + t5767*t6706 + t4194*(t4137*t5801 + t4092*t5822 + t7086 + t7087 + t7138 + t7141) + t4019*(-1.*t4092*t5758 - 1.*t3887*t5801 + t7075 + t7076 + t7145 + t7148))*var2[4] + (t5606*t6595 + t5728*t6602 + t2596*(-1.*t3879*t5597 - 1.*t3842*t5603 - 1.*t2363*t5732 - 1.*t2505*t5754 + t7075 + t7076) + t3798*(t2363*t5567 + t2505*t5572 + t2418*t5597 + t1432*t5603 + t7086 + t7087))*var2[5] + (-0.15121*t5628 - 0.15121*t5637 + t5606*t6615 + t5728*t6623 + t2596*(-1.*t3407*t5581 - 1.*t3359*t5595 - 1.*t2338*t5714 - 1.*t2174*t5722 - 1.*t3048*t5728 + t7075) + t3798*(t2338*t5558 + t2174*t5564 + t1394*t5581 + t1246*t5595 + t3048*t5606 + t7087))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t4902*t6741 + t5084*t6745 + t3910*(t4273*t5068 + t4356*t5077 + t4294*t5084 + t4338*t5108 + t7001 + t7003) + t4273*(-1.*t4294*t4902 - 1.*t4338*t4921 - 1.*t3910*t5068 - 1.*t4211*t5077 + t7008 + t7011))*var2[3] + (t4908*t6701 + t5017*t6706 + t4194*(t4137*t4977 + t4092*t5032 + t6926 + t6928 + t7001 + t7003) + t4019*(-1.*t4092*t4896 - 1.*t3887*t4977 + t6917 + t6918 + t7008 + t7011))*var2[4] + (t4686*t6595 + t4877*t6602 + t2596*(-1.*t3842*t4503 - 1.*t3879*t4521 - 1.*t2363*t4885 - 1.*t2505*t4894 + t6917 + t6918) + t3798*(t1432*t4503 + t2418*t4521 + t2363*t4622 + t2505*t4638 + t6926 + t6928))*var2[5] + (t4686*t6615 + t4877*t6623 + t2596*(-1.*t3359*t4444 - 1.*t3407*t4495 - 1.*t2174*t4777 - 1.*t2338*t4789 - 1.*t3048*t4877 + t6918) + t3798*(t1246*t4444 + t1394*t4495 + t2174*t4597 + t2338*t4611 + t3048*t4686 + t6926))*var2[9] + (-1.*t4587*t6635 - 1.*t4763*t6641 - 1.*t1117*t6976 - 1.*t3243*t6988 + 4.e-6*(-1.*t4543*t6635 - 1.*t4766*t6641 - 1.*t1216*t6976 - 1.*t3326*t6988))*var2[10])*var2[11] + t4279*var3[0] + t6695*var3[1] + t6690*var3[2] + t6747*var3[3] + t6708*var3[4] + t6604*var3[5] + t6627*var3[9] + t6648*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void ddh_FrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
