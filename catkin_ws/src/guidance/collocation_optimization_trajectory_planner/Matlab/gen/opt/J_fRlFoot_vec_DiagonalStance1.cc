/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:09:26 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t14;
  double t15;
  double t16;
  double t19;
  double t6;
  double t22;
  double t266;
  double t274;
  double t9;
  double t146;
  double t484;
  double t17;
  double t18;
  double t23;
  double t121;
  double t152;
  double t159;
  double t173;
  double t220;
  double t580;
  double t360;
  double t375;
  double t439;
  double t461;
  double t462;
  double t473;
  double t488;
  double t493;
  double t517;
  double t619;
  double t638;
  double t656;
  double t659;
  double t661;
  double t677;
  double t679;
  double t700;
  double t7;
  double t8;
  double t815;
  double t937;
  double t852;
  double t860;
  double t870;
  double t880;
  double t888;
  double t895;
  double t902;
  double t907;
  double t912;
  double t805;
  double t949;
  double t962;
  double t984;
  double t985;
  double t1002;
  double t1004;
  double t1005;
  double t1026;
  double t1079;
  double t1091;
  double t5;
  double t615;
  double t616;
  double t10;
  double t13;
  double t328;
  double t356;
  double t785;
  double t804;
  double t1235;
  double t1250;
  double t1260;
  double t1271;
  double t1280;
  double t1281;
  double t1289;
  double t1310;
  double t1329;
  double t1332;
  double t1334;
  double t1369;
  double t1390;
  double t1397;
  double t1404;
  double t1411;
  double t1413;
  double t1415;
  double t1418;
  double t1203;
  double t1471;
  double t1508;
  double t1515;
  double t1561;
  double t1571;
  double t1587;
  double t1613;
  double t1624;
  double t1637;
  double t1664;
  double t1679;
  double t1697;
  double t1750;
  double t1772;
  double t1776;
  double t1787;
  double t1134;
  double t1166;
  double t1180;
  double t916;
  double t1102;
  double t1114;
  double t1441;
  double t1448;
  double t1450;
  double t1410;
  double t1431;
  double t1433;
  double t1800;
  double t1817;
  double t1819;
  double t1735;
  double t1789;
  double t1790;
  double t1847;
  double t1883;
  double t1927;
  double t2087;
  double t2139;
  double t2141;
  double t2144;
  double t2150;
  double t2155;
  double t2159;
  double t2168;
  double t2172;
  double t2178;
  double t2179;
  double t2183;
  double t2189;
  double t2191;
  double t2196;
  double t2197;
  double t2089;
  double t2062;
  double t2064;
  double t2294;
  double t2302;
  double t2303;
  double t2310;
  double t2326;
  double t2332;
  double t2333;
  double t2341;
  double t2436;
  double t2437;
  double t2440;
  double t2445;
  double t2456;
  double t2466;
  double t2477;
  double t2478;
  double t2565;
  double t2556;
  double t2562;
  double t2563;
  double t2569;
  double t2570;
  double t2584;
  double t2585;
  double t2587;
  double t2588;
  double t2597;
  double t2602;
  double t2604;
  double t2610;
  double t2616;
  double t2624;
  double t2627;
  double t2629;
  double t2633;
  double t2652;
  double t2662;
  double t2663;
  double t2668;
  double t2670;
  double t2672;
  double t2673;
  double t2674;
  double t2701;
  double t2704;
  double t2705;
  double t2707;
  double t2717;
  double t2725;
  double t2726;
  double t2735;
  double t2737;
  double t2744;
  double t2758;
  double t2763;
  double t2772;
  double t2777;
  double t2786;
  double t2787;
  double t2789;
  double t2790;
  double t2810;
  double t2815;
  double t2820;
  double t2821;
  double t2825;
  double t2826;
  double t2828;
  double t2834;
  double t2837;
  double t2838;
  double t2839;
  double t2843;
  double t2844;
  double t2849;
  double t2851;
  double t1279;
  double t1316;
  double t1340;
  double t1355;
  double t1439;
  double t1451;
  double t1452;
  double t1523;
  double t1607;
  double t1625;
  double t1628;
  double t1796;
  double t1822;
  double t1823;
  double t232;
  double t572;
  double t713;
  double t739;
  double t1123;
  double t1213;
  double t1225;
  double t753;
  double t1227;
  double t1228;
  double t3085;
  double t3129;
  double t1359;
  double t1457;
  double t1462;
  double t1633;
  double t1835;
  double t1838;
  double t1842;
  double t1863;
  double t1875;
  double t1896;
  double t1914;
  double t1930;
  double t1949;
  double t1951;
  double t1952;
  double t1953;
  double t1954;
  double t1959;
  double t1965;
  double t1978;
  double t1983;
  double t1984;
  double t2012;
  double t2014;
  double t2027;
  double t2035;
  double t2042;
  double t2253;
  double t2261;
  double t2262;
  double t2176;
  double t2212;
  double t2229;
  double t2068;
  double t2079;
  double t2121;
  double t2129;
  double t2248;
  double t2265;
  double t2267;
  double t2360;
  double t2362;
  double t2365;
  double t2325;
  double t2346;
  double t2356;
  double t2276;
  double t2281;
  double t2283;
  double t2286;
  double t2359;
  double t2367;
  double t2381;
  double t2510;
  double t2511;
  double t2512;
  double t2447;
  double t2504;
  double t2507;
  double t2397;
  double t2400;
  double t2401;
  double t2404;
  double t2508;
  double t2528;
  double t2531;
  double t2680;
  double t2684;
  double t2686;
  double t2669;
  double t2677;
  double t2678;
  double t2586;
  double t2615;
  double t2636;
  double t2637;
  double t2679;
  double t2688;
  double t2691;
  double t2795;
  double t2799;
  double t2801;
  double t2784;
  double t2792;
  double t2793;
  double t2714;
  double t2733;
  double t2747;
  double t2750;
  double t2794;
  double t2802;
  double t2803;
  double t2886;
  double t2891;
  double t2909;
  double t2842;
  double t2853;
  double t2856;
  double t2817;
  double t2824;
  double t2830;
  double t2832;
  double t2858;
  double t2919;
  double t2935;
  double t3180;
  double t3182;
  double t3183;
  double t3219;
  double t3222;
  double t3232;
  double t3101;
  double t3125;
  double t3127;
  double t3852;
  double t3853;
  double t3860;
  double t3829;
  double t3830;
  double t3842;
  double t3845;
  double t3849;
  double t3850;
  double t3273;
  double t3276;
  double t3278;
  double t3289;
  double t3292;
  double t3329;
  double t3332;
  double t3334;
  double t3336;
  double t3408;
  double t3415;
  double t3453;
  double t3460;
  double t3487;
  double t3488;
  double t3530;
  double t3544;
  double t3554;
  double t3561;
  double t3562;
  double t3563;
  double t3602;
  double t3607;
  double t3609;
  double t3628;
  double t3634;
  double t3698;
  double t3703;
  double t3704;
  double t3710;
  double t3724;
  double t3725;
  double t3729;
  double t3736;
  double t3737;
  double t3738;
  double t3744;
  double t3747;
  double t3749;
  double t3758;
  double t3760;
  double t3772;
  double t3776;
  double t3777;
  double t3778;
  double t3787;
  double t3788;
  double t3789;
  double t3796;
  double t3797;
  double t3802;
  double t2977;
  double t2988;
  double t2995;
  double t4243;
  double t4279;
  double t4282;
  double t4291;
  double t4299;
  double t4300;
  double t4302;
  double t4304;
  double t4306;
  double t4307;
  double t4308;
  double t4315;
  double t4317;
  double t4323;
  double t4324;
  double t4329;
  double t4342;
  double t4344;
  double t4345;
  double t4348;
  double t4350;
  double t4352;
  double t4358;
  double t4360;
  double t4361;
  double t4366;
  double t4368;
  double t4373;
  double t4389;
  double t4390;
  double t4393;
  double t4394;
  double t4228;
  double t4439;
  double t4416;
  double t4420;
  double t4422;
  double t4429;
  double t4432;
  double t4434;
  double t4438;
  double t4441;
  double t4444;
  double t4463;
  double t4476;
  double t4478;
  double t4503;
  double t4514;
  double t4524;
  double t4530;
  double t4534;
  double t4559;
  double t4564;
  double t4566;
  double t4577;
  double t4596;
  double t4597;
  double t4222;
  double t4224;
  double t4231;
  double t4236;
  double t4269;
  double t4273;
  double t4309;
  double t4355;
  double t4400;
  double t4401;
  double t4421;
  double t4510;
  double t4606;
  double t4612;
  double t4615;
  double t4621;
  double t4629;
  double t4632;
  double t4633;
  double t4634;
  double t4641;
  double t3053;
  double t3074;
  double t3084;
  double t4667;
  double t4670;
  double t4675;
  double t4659;
  double t4661;
  double t4662;
  double t4407;
  double t4642;
  double t4644;
  double t4692;
  double t4693;
  double t4694;
  double t3014;
  double t3037;
  double t3041;
  double t4902;
  double t4903;
  double t4904;
  double t4696;
  double t4702;
  double t4704;
  double t4705;
  double t4720;
  double t4728;
  double t4729;
  double t4730;
  double t4744;
  double t4747;
  double t4750;
  double t4752;
  double t4766;
  double t4769;
  double t4771;
  double t4773;
  double t4802;
  double t4804;
  double t4806;
  double t4807;
  double t4858;
  double t4861;
  double t4865;
  double t4867;
  double t5093;
  double t5106;
  double t5113;
  double t5114;
  double t5117;
  double t5094;
  double t5138;
  double t5141;
  double t5147;
  double t5105;
  double t5131;
  double t5132;
  double t2287;
  double t2384;
  double t2386;
  double t2135;
  double t2270;
  double t2273;
  double t5357;
  double t5365;
  double t5374;
  double t5375;
  double t5383;
  double t5388;
  double t5390;
  double t5397;
  double t5398;
  double t5400;
  double t5401;
  double t5412;
  double t5414;
  double t5424;
  double t5427;
  double t5428;
  double t5429;
  double t5431;
  double t5432;
  double t5441;
  double t5445;
  double t5448;
  double t5399;
  double t5433;
  double t5434;
  double t5460;
  double t5461;
  double t5462;
  double t5466;
  double t5467;
  double t5481;
  double t5486;
  double t5488;
  double t5490;
  double t5504;
  double t5505;
  double t5516;
  double t5438;
  double t5450;
  double t5451;
  double t5491;
  double t5517;
  double t5518;
  double t5520;
  double t5521;
  double t5522;
  double t2406;
  double t2535;
  double t2544;
  double t5718;
  double t5719;
  double t5722;
  double t5724;
  double t5727;
  double t5728;
  double t5731;
  double t5733;
  double t5740;
  double t5741;
  double t5744;
  double t5752;
  double t5755;
  double t5757;
  double t5758;
  double t5763;
  double t5772;
  double t5773;
  double t5774;
  double t5776;
  double t5780;
  double t5781;
  double t5782;
  double t5783;
  double t5737;
  double t5766;
  double t5784;
  double t5786;
  double t5798;
  double t5799;
  double t5800;
  double t5802;
  double t5821;
  double t5825;
  double t5829;
  double t5787;
  double t5808;
  double t5813;
  double t5840;
  double t5844;
  double t5848;
  double t5851;
  double t5854;
  double t5856;
  double t5862;
  double t2647;
  double t2693;
  double t2699;
  double t5815;
  double t5831;
  double t5834;
  double t5853;
  double t5863;
  double t5865;
  double t5870;
  double t5880;
  double t5886;
  double t2756;
  double t2807;
  double t2808;
  double t2833;
  double t2939;
  double t2942;
  double t4886;
  double t4897;
  double t4923;
  double t4924;
  double t4945;
  double t4948;
  double t4977;
  double t4979;
  double t5025;
  double t5028;
  double t5049;
  double t5056;
  double t6108;
  double t6109;
  double t6111;
  double t6114;
  double t6116;
  double t6117;
  double t5133;
  double t5134;
  double t5178;
  double t5184;
  double t6143;
  double t6145;
  double t6147;
  double t6161;
  double t6162;
  double t6163;
  double t5214;
  double t5221;
  double t5242;
  double t5245;
  double t6173;
  double t6175;
  double t6176;
  double t6193;
  double t6194;
  double t6197;
  double t5289;
  double t5290;
  double t5328;
  double t5329;
  double t5356;
  double t5452;
  double t5530;
  double t5534;
  double t5576;
  double t5587;
  double t5599;
  double t5600;
  double t5643;
  double t5644;
  double t5688;
  double t5690;
  double t5836;
  double t5839;
  double t5902;
  double t5905;
  double t5943;
  double t5944;
  double t5972;
  double t5979;
  double t6013;
  double t6019;
  double t6039;
  double t6041;
  double t6333;
  double t6354;
  double t6382;
  double t6393;
  double t6432;
  double t6433;
  double t6455;
  double t6457;
  double t6538;
  double t6540;
  double t6563;
  double t6565;
  double t6605;
  double t6607;
  double t6642;
  double t6643;
  double t7021;
  double t7022;
  double t7023;
  double t7026;
  double t7029;
  double t7032;
  double t6713;
  double t6716;
  double t7086;
  double t7087;
  double t7091;
  double t7095;
  double t7096;
  double t7097;
  double t6737;
  double t6743;
  double t6768;
  double t6773;
  double t6965;
  double t6968;
  double t6971;
  double t6979;
  double t6981;
  double t6982;
  double t6791;
  double t6798;
  double t7437;
  double t7441;
  double t7442;
  double t7446;
  double t7447;
  double t7449;
  double t7480;
  double t7485;
  double t7496;
  double t7501;
  double t7512;
  double t7522;
  double t7337;
  double t7342;
  double t7343;
  double t7360;
  double t7371;
  double t7374;
  double t7750;
  double t7751;
  double t7752;
  double t7754;
  double t7768;
  double t7771;
  double t7773;
  double t7777;
  double t7779;
  double t7791;
  double t7793;
  double t7800;
  double t7801;
  double t7802;
  double t7808;
  double t7813;
  double t7817;
  double t7818;
  double t7827;
  double t7829;
  double t7830;
  double t7833;
  double t7873;
  double t7876;
  double t7877;
  double t7878;
  double t7887;
  double t7888;
  double t7891;
  double t7897;
  double t7899;
  double t7920;
  double t7927;
  double t7932;
  double t7933;
  double t7934;
  double t7937;
  double t7939;
  double t7941;
  double t7945;
  double t7946;
  double t7948;
  double t7951;
  double t7952;
  double t7991;
  double t7992;
  double t7994;
  double t7996;
  double t8000;
  double t8003;
  double t8004;
  double t8005;
  double t8010;
  double t8011;
  double t8013;
  double t8017;
  double t8020;
  double t8022;
  double t8025;
  double t8028;
  double t8029;
  double t8031;
  double t8032;
  double t8034;
  double t8035;
  double t8037;
  double t8104;
  t14 = Cos(var1[14]);
  t15 = -1.*t14;
  t16 = 1. + t15;
  t19 = Sin(var1[14]);
  t6 = Cos(var1[13]);
  t22 = -7.e-6*t19;
  t266 = -1.*t6;
  t274 = 1. + t266;
  t9 = Sin(var1[13]);
  t146 = -7.e-6*t16;
  t484 = -1.*t19;
  t17 = -6.5e-11*t16;
  t18 = 4.e-6*t16;
  t23 = t18 + t22;
  t121 = 4.e-6*t23;
  t152 = -4.e-6*t19;
  t159 = t146 + t152;
  t173 = -7.e-6*t159;
  t220 = 1. + t17 + t121 + t173;
  t580 = 2.8e-11*t274;
  t360 = 1.000000000049*t16;
  t375 = -1. + t360;
  t439 = 4.e-6*t375;
  t461 = -1. + t14;
  t462 = 4.e-6*t461;
  t473 = 2.8e-11*t16;
  t488 = t473 + t484;
  t493 = -7.e-6*t488;
  t517 = t439 + t462 + t493 + t22;
  t619 = -1.000000000016*t16;
  t638 = 1. + t619;
  t656 = -7.e-6*t638;
  t659 = -2.8e-11*t16;
  t661 = t659 + t484;
  t677 = 4.e-6*t661;
  t679 = 4.e-6*t19;
  t700 = t656 + t146 + t677 + t679;
  t7 = -1. + t6;
  t8 = 4.e-6*t7;
  t815 = -7.e-6*t274;
  t937 = Sin(var1[12]);
  t852 = 4.e-6*t9;
  t860 = t815 + t852;
  t870 = t860*t220;
  t880 = t580 + t9;
  t888 = t880*t517;
  t895 = -1.000000000016*t274;
  t902 = 1. + t895;
  t907 = t902*t700;
  t912 = t870 + t888 + t907;
  t805 = Cos(var1[12]);
  t949 = -6.5e-11*t274;
  t962 = 1. + t949;
  t984 = t962*t220;
  t985 = 7.e-6*t9;
  t1002 = t8 + t985;
  t1004 = t1002*t517;
  t1005 = -4.e-6*t9;
  t1026 = t815 + t1005;
  t1079 = t1026*t700;
  t1091 = t984 + t1004 + t1079;
  t5 = Cos(var1[4]);
  t615 = -1.*t9;
  t616 = t580 + t615;
  t10 = -7.e-6*t9;
  t13 = t8 + t10;
  t328 = -1.000000000049*t274;
  t356 = 1. + t328;
  t785 = Sin(var1[4]);
  t804 = Cos(var1[5]);
  t1235 = 1.000000000016*t16;
  t1250 = t146 + t679;
  t1260 = -7.e-6*t1250;
  t1271 = -1. + t1235 + t1260;
  t1280 = 1. + t17;
  t1281 = -7.e-6*t1280;
  t1289 = 7.e-6*t16;
  t1310 = t1281 + t1289 + t679;
  t1329 = t462 + t22;
  t1332 = -7.e-6*t1329;
  t1334 = t659 + t1332 + t19;
  t1369 = t1026*t1271;
  t1390 = t962*t1310;
  t1397 = t1002*t1334;
  t1404 = t1369 + t1390 + t1397;
  t1411 = t902*t1271;
  t1413 = t860*t1310;
  t1415 = t880*t1334;
  t1418 = t1411 + t1413 + t1415;
  t1203 = Sin(var1[5]);
  t1471 = -1.000000000049*t16;
  t1508 = 4.e-6*t1329;
  t1515 = 1. + t1471 + t1508;
  t1561 = 4.e-6*t1280;
  t1571 = 7.e-6*t19;
  t1587 = t1561 + t462 + t1571;
  t1613 = 4.e-6*t1250;
  t1624 = t473 + t1613 + t19;
  t1637 = t880*t1515;
  t1664 = t860*t1587;
  t1679 = t902*t1624;
  t1697 = t1637 + t1664 + t1679;
  t1750 = t1002*t1515;
  t1772 = t962*t1587;
  t1776 = t1026*t1624;
  t1787 = t1750 + t1772 + t1776;
  t1134 = t937*t912;
  t1166 = t805*t1091;
  t1180 = t1134 + t1166;
  t916 = t805*t912;
  t1102 = -1.*t937*t1091;
  t1114 = t916 + t1102;
  t1441 = t805*t1404;
  t1448 = t937*t1418;
  t1450 = t1441 + t1448;
  t1410 = -1.*t937*t1404;
  t1431 = t805*t1418;
  t1433 = t1410 + t1431;
  t1800 = t937*t1697;
  t1817 = t805*t1787;
  t1819 = t1800 + t1817;
  t1735 = t805*t1697;
  t1789 = -1.*t937*t1787;
  t1790 = t1735 + t1789;
  t1847 = -1.*t1114*t1203;
  t1883 = -1.*t1433*t1203;
  t1927 = -1.*t1790*t1203;
  t2087 = 2.8e-11*t9;
  t2139 = -6.5e-11*t9*t220;
  t2141 = 7.e-6*t6;
  t2144 = t2141 + t1005;
  t2150 = t2144*t517;
  t2155 = -4.e-6*t6;
  t2159 = t2155 + t10;
  t2168 = t2159*t700;
  t2172 = t2139 + t2150 + t2168;
  t2178 = 4.e-6*t6;
  t2179 = t2178 + t10;
  t2183 = t2179*t220;
  t2189 = t6 + t2087;
  t2191 = t2189*t517;
  t2196 = -1.000000000016*t9*t700;
  t2197 = t2183 + t2191 + t2196;
  t2089 = t266 + t2087;
  t2062 = -7.e-6*t6;
  t2064 = t2062 + t1005;
  t2294 = t2159*t1271;
  t2302 = -6.5e-11*t9*t1310;
  t2303 = t2144*t1334;
  t2310 = t2294 + t2302 + t2303;
  t2326 = -1.000000000016*t9*t1271;
  t2332 = t2179*t1310;
  t2333 = t2189*t1334;
  t2341 = t2326 + t2332 + t2333;
  t2436 = t2144*t1515;
  t2437 = -6.5e-11*t9*t1587;
  t2440 = t2159*t1624;
  t2445 = t2436 + t2437 + t2440;
  t2456 = t2189*t1515;
  t2466 = t2179*t1587;
  t2477 = -1.000000000016*t9*t1624;
  t2478 = t2456 + t2466 + t2477;
  t2565 = -7.e-6*t14;
  t2556 = -4.e-6*t14;
  t2562 = t2556 + t22;
  t2563 = -7.e-6*t2562;
  t2569 = t2565 + t679;
  t2570 = 4.e-6*t2569;
  t2584 = -6.5e-11*t19;
  t2585 = t2563 + t2570 + t2584;
  t2587 = 4.e-6*t14;
  t2588 = -2.8e-11*t19;
  t2597 = t15 + t2588;
  t2602 = 4.e-6*t2597;
  t2604 = 1.12e-16*t19;
  t2610 = t2587 + t2602 + t2604;
  t2616 = 2.8e-11*t19;
  t2624 = t15 + t2616;
  t2627 = -7.e-6*t2624;
  t2629 = 1.96e-16*t19;
  t2633 = t2565 + t2627 + t2629;
  t2652 = t962*t2585;
  t2662 = t1026*t2610;
  t2663 = t1002*t2633;
  t2668 = t2652 + t2662 + t2663;
  t2670 = t860*t2585;
  t2672 = t902*t2610;
  t2673 = t880*t2633;
  t2674 = t2670 + t2672 + t2673;
  t2701 = t2565 + t152;
  t2704 = 4.e-6*t2701;
  t2705 = -1.000000000049*t19;
  t2707 = t2704 + t2705;
  t2717 = 7.e-6*t14;
  t2725 = -4.00000000026e-6*t19;
  t2726 = t2717 + t2725;
  t2735 = t2587 + t22;
  t2737 = 4.e-6*t2735;
  t2744 = t14 + t2737 + t2616;
  t2758 = t880*t2707;
  t2763 = t860*t2726;
  t2772 = t902*t2744;
  t2777 = t2758 + t2763 + t2772;
  t2786 = t1002*t2707;
  t2787 = t962*t2726;
  t2789 = t1026*t2744;
  t2790 = t2786 + t2787 + t2789;
  t2810 = -7.e-6*t2701;
  t2815 = t14 + t2810 + t2588;
  t2820 = 7.000000000455e-6*t19;
  t2821 = t2587 + t2820;
  t2825 = -7.e-6*t2735;
  t2826 = 1.000000000016*t19;
  t2828 = t2825 + t2826;
  t2834 = t880*t2815;
  t2837 = t860*t2821;
  t2838 = t902*t2828;
  t2839 = t2834 + t2837 + t2838;
  t2843 = t1002*t2815;
  t2844 = t962*t2821;
  t2849 = t1026*t2828;
  t2851 = t2843 + t2844 + t2849;
  t1279 = t616*t1271;
  t1316 = t13*t1310;
  t1340 = t356*t1334;
  t1355 = t1279 + t1316 + t1340;
  t1439 = t804*t1433;
  t1451 = -1.*t1450*t1203;
  t1452 = t1439 + t1451;
  t1523 = t356*t1515;
  t1607 = t13*t1587;
  t1625 = t616*t1624;
  t1628 = t1523 + t1607 + t1625;
  t1796 = t804*t1790;
  t1822 = -1.*t1819*t1203;
  t1823 = t1796 + t1822;
  t232 = t13*t220;
  t572 = t356*t517;
  t713 = t616*t700;
  t739 = t232 + t572 + t713;
  t1123 = t804*t1114;
  t1213 = -1.*t1180*t1203;
  t1225 = t1123 + t1213;
  t753 = t5*t739;
  t1227 = -1.*t785*t1225;
  t1228 = t753 + t1227;
  t3085 = Sin(var1[3]);
  t3129 = Cos(var1[3]);
  t1359 = t5*t1355;
  t1457 = -1.*t785*t1452;
  t1462 = t1359 + t1457;
  t1633 = t5*t1628;
  t1835 = -1.*t785*t1823;
  t1838 = t1633 + t1835;
  t1842 = -1.*t804*t1180;
  t1863 = t1842 + t1847;
  t1875 = -1.*t804*t1450;
  t1896 = t1875 + t1883;
  t1914 = -1.*t804*t1819;
  t1930 = t1914 + t1927;
  t1949 = -1.*t937*t912;
  t1951 = -1.*t805*t1091;
  t1952 = t1949 + t1951;
  t1953 = t804*t1952;
  t1954 = t1953 + t1847;
  t1959 = -1.*t805*t1404;
  t1965 = -1.*t937*t1418;
  t1978 = t1959 + t1965;
  t1983 = t804*t1978;
  t1984 = t1983 + t1883;
  t2012 = -1.*t937*t1697;
  t2014 = -1.*t805*t1787;
  t2027 = t2012 + t2014;
  t2035 = t804*t2027;
  t2042 = t2035 + t1927;
  t2253 = t805*t2172;
  t2261 = t937*t2197;
  t2262 = t2253 + t2261;
  t2176 = -1.*t937*t2172;
  t2212 = t805*t2197;
  t2229 = t2176 + t2212;
  t2068 = t2064*t220;
  t2079 = -1.000000000049*t9*t517;
  t2121 = t2089*t700;
  t2129 = t2068 + t2079 + t2121;
  t2248 = t804*t2229;
  t2265 = -1.*t2262*t1203;
  t2267 = t2248 + t2265;
  t2360 = t805*t2310;
  t2362 = t937*t2341;
  t2365 = t2360 + t2362;
  t2325 = -1.*t937*t2310;
  t2346 = t805*t2341;
  t2356 = t2325 + t2346;
  t2276 = t2089*t1271;
  t2281 = t2064*t1310;
  t2283 = -1.000000000049*t9*t1334;
  t2286 = t2276 + t2281 + t2283;
  t2359 = t804*t2356;
  t2367 = -1.*t2365*t1203;
  t2381 = t2359 + t2367;
  t2510 = t805*t2445;
  t2511 = t937*t2478;
  t2512 = t2510 + t2511;
  t2447 = -1.*t937*t2445;
  t2504 = t805*t2478;
  t2507 = t2447 + t2504;
  t2397 = -1.000000000049*t9*t1515;
  t2400 = t2064*t1587;
  t2401 = t2089*t1624;
  t2404 = t2397 + t2400 + t2401;
  t2508 = t804*t2507;
  t2528 = -1.*t2512*t1203;
  t2531 = t2508 + t2528;
  t2680 = t805*t2668;
  t2684 = t937*t2674;
  t2686 = t2680 + t2684;
  t2669 = -1.*t937*t2668;
  t2677 = t805*t2674;
  t2678 = t2669 + t2677;
  t2586 = t13*t2585;
  t2615 = t616*t2610;
  t2636 = t356*t2633;
  t2637 = t2586 + t2615 + t2636;
  t2679 = t804*t2678;
  t2688 = -1.*t2686*t1203;
  t2691 = t2679 + t2688;
  t2795 = t937*t2777;
  t2799 = t805*t2790;
  t2801 = t2795 + t2799;
  t2784 = t805*t2777;
  t2792 = -1.*t937*t2790;
  t2793 = t2784 + t2792;
  t2714 = t356*t2707;
  t2733 = t13*t2726;
  t2747 = t616*t2744;
  t2750 = t2714 + t2733 + t2747;
  t2794 = t804*t2793;
  t2802 = -1.*t2801*t1203;
  t2803 = t2794 + t2802;
  t2886 = t937*t2839;
  t2891 = t805*t2851;
  t2909 = t2886 + t2891;
  t2842 = t805*t2839;
  t2853 = -1.*t937*t2851;
  t2856 = t2842 + t2853;
  t2817 = t356*t2815;
  t2824 = t13*t2821;
  t2830 = t616*t2828;
  t2832 = t2817 + t2824 + t2830;
  t2858 = t804*t2856;
  t2919 = -1.*t2909*t1203;
  t2935 = t2858 + t2919;
  t3180 = t804*t1450;
  t3182 = t1433*t1203;
  t3183 = t3180 + t3182;
  t3219 = t804*t1819;
  t3222 = t1790*t1203;
  t3232 = t3219 + t3222;
  t3101 = t804*t1180;
  t3125 = t1114*t1203;
  t3127 = t3101 + t3125;
  t3852 = t3129*t3127;
  t3853 = -1.*t3085*t1228;
  t3860 = t3852 + t3853;
  t3829 = t3129*t3183;
  t3830 = -1.*t3085*t1462;
  t3842 = t3829 + t3830;
  t3845 = t3129*t3232;
  t3849 = -1.*t3085*t1838;
  t3850 = t3845 + t3849;
  t3273 = -1.*t739*t785;
  t3276 = -1.*t5*t1225;
  t3278 = t3273 + t3276;
  t3289 = -1.*t1355*t785;
  t3292 = -1.*t5*t1452;
  t3329 = t3289 + t3292;
  t3332 = -1.*t1628*t785;
  t3334 = -1.*t5*t1823;
  t3336 = t3332 + t3334;
  t3408 = t1952*t1203;
  t3415 = t1123 + t3408;
  t3453 = t1978*t1203;
  t3460 = t1439 + t3453;
  t3487 = t2027*t1203;
  t3488 = t1796 + t3487;
  t3530 = t804*t2262;
  t3544 = t2229*t1203;
  t3554 = t3530 + t3544;
  t3561 = t5*t2129;
  t3562 = -1.*t785*t2267;
  t3563 = t3561 + t3562;
  t3602 = t804*t2365;
  t3607 = t2356*t1203;
  t3609 = t3602 + t3607;
  t3628 = t5*t2286;
  t3634 = -1.*t785*t2381;
  t3698 = t3628 + t3634;
  t3703 = t804*t2512;
  t3704 = t2507*t1203;
  t3710 = t3703 + t3704;
  t3724 = t5*t2404;
  t3725 = -1.*t785*t2531;
  t3729 = t3724 + t3725;
  t3736 = t804*t2686;
  t3737 = t2678*t1203;
  t3738 = t3736 + t3737;
  t3744 = t5*t2637;
  t3747 = -1.*t785*t2691;
  t3749 = t3744 + t3747;
  t3758 = t804*t2801;
  t3760 = t2793*t1203;
  t3772 = t3758 + t3760;
  t3776 = t5*t2750;
  t3777 = -1.*t785*t2803;
  t3778 = t3776 + t3777;
  t3787 = t804*t2909;
  t3788 = t2856*t1203;
  t3789 = t3787 + t3788;
  t3796 = t5*t2832;
  t3797 = -1.*t785*t2935;
  t3802 = t3796 + t3797;
  t2977 = t1355*t785;
  t2988 = t5*t1452;
  t2995 = t2977 + t2988;
  t4243 = -2.8e-11*t274;
  t4279 = -2.598649999999999e-7*var1[14];
  t4282 = 0.148705*t1280;
  t4291 = -2.3905277499999995e-16*t16;
  t4299 = -0.038922999986*t23;
  t4300 = -0.80315*t159;
  t4302 = t1289 + t679;
  t4304 = -0.503149000008*t4302;
  t4306 = t462 + t1571;
  t4307 = -0.038924*t4306;
  t4308 = t4279 + t4282 + t4291 + t4299 + t4300 + t4304 + t4307;
  t4315 = 1.0394599999999997e-12*var1[14];
  t4317 = 1. + t1471;
  t4323 = -0.038924*t4317;
  t4324 = -0.03892299998790722*t16;
  t4329 = -0.80315*t488;
  t4342 = 0.148705*t1329;
  t4344 = t18 + t1571;
  t4345 = -3.6777349999999994e-6*t4344;
  t4348 = t659 + t19;
  t4350 = -0.503149000008*t4348;
  t4352 = t4315 + t4323 + t4324 + t4329 + t4342 + t4345 + t4350;
  t4358 = 1.8190549999999993e-12*var1[14];
  t4360 = -0.80315*t638;
  t4361 = -0.5031490000160505*t16;
  t4366 = -0.038922999986*t661;
  t4368 = t1289 + t152;
  t4373 = -3.6777349999999994e-6*t4368;
  t4389 = 0.148705*t1250;
  t4390 = t473 + t19;
  t4393 = -0.038924*t4390;
  t4394 = t4358 + t4360 + t4361 + t4366 + t4373 + t4389 + t4393;
  t4228 = 4.e-6*t274;
  t4439 = 7.e-6*t274;
  t4416 = -1.*t805;
  t4420 = 1. + t4416;
  t4422 = 0.15121*t937;
  t4429 = 1.0248489999999998e-12*var1[13];
  t4432 = -0.28120900000849935*t274;
  t4434 = t4243 + t615;
  t4438 = -0.038748999993*t4434;
  t4441 = t4439 + t1005;
  t4444 = -2.123459e-6*t4441;
  t4463 = t860*t4308;
  t4476 = t880*t4352;
  t4478 = t902*t4394;
  t4503 = t4429 + t4432 + t4438 + t4444 + t4463 + t4476 + t4478;
  t4514 = -1.4640699999999997e-7*var1[13];
  t4524 = -1.38024835e-16*t274;
  t4530 = t4228 + t10;
  t4534 = -0.038748999993*t4530;
  t4559 = t4439 + t852;
  t4564 = -0.281209000004*t4559;
  t4566 = t962*t4308;
  t4577 = t1002*t4352;
  t4596 = t1026*t4394;
  t4597 = t4514 + t4524 + t4534 + t4564 + t4566 + t4577 + t4596;
  t4222 = 5.856279999999999e-13*var1[13];
  t4224 = -0.0387489999948987*t274;
  t4231 = t4228 + t985;
  t4236 = -2.123459e-6*t4231;
  t4269 = t4243 + t9;
  t4273 = -0.281209000004*t4269;
  t4309 = t13*t4308;
  t4355 = t356*t4352;
  t4400 = t616*t4394;
  t4401 = t4222 + t4224 + t4236 + t4273 + t4309 + t4355 + t4400;
  t4421 = -0.15121*t4420;
  t4510 = t805*t4503;
  t4606 = -1.*t937*t4597;
  t4612 = t4421 + t4422 + t4510 + t4606;
  t4615 = t804*t4612;
  t4621 = 0.15121*t4420;
  t4629 = t937*t4503;
  t4632 = t805*t4597;
  t4633 = t4621 + t4422 + t4629 + t4632;
  t4634 = -1.*t4633*t1203;
  t4641 = t4615 + t4634;
  t3053 = t739*t785;
  t3074 = t5*t1225;
  t3084 = t3053 + t3074;
  t4667 = t5*t4401;
  t4670 = -1.*t785*t4641;
  t4675 = t4667 + t4670;
  t4659 = t4401*t785;
  t4661 = t5*t4641;
  t4662 = t4659 + t4661;
  t4407 = -1.*t4401*t785;
  t4642 = -1.*t5*t4641;
  t4644 = t4407 + t4642;
  t4692 = t804*t4633;
  t4693 = t4612*t1203;
  t4694 = t4692 + t4693;
  t3014 = t1628*t785;
  t3037 = t5*t1823;
  t3041 = t3014 + t3037;
  t4902 = -1.*t804*t4633;
  t4903 = -1.*t4612*t1203;
  t4904 = t4902 + t4903;
  t4696 = -1.*t3127*t4694;
  t4702 = -1.*t3084*t4662;
  t4704 = -1.*t1228*t4675;
  t4705 = t4696 + t4702 + t4704;
  t4720 = t3183*t4694;
  t4728 = t2995*t4662;
  t4729 = t1462*t4675;
  t4730 = t4720 + t4728 + t4729;
  t4744 = t3127*t4694;
  t4747 = t3084*t4662;
  t4750 = t1228*t4675;
  t4752 = t4744 + t4747 + t4750;
  t4766 = -1.*t3232*t4694;
  t4769 = -1.*t3041*t4662;
  t4771 = -1.*t1838*t4675;
  t4773 = t4766 + t4769 + t4771;
  t4802 = -1.*t3183*t4694;
  t4804 = -1.*t2995*t4662;
  t4806 = -1.*t1462*t4675;
  t4807 = t4802 + t4804 + t4806;
  t4858 = t3232*t4694;
  t4861 = t3041*t4662;
  t4865 = t1838*t4675;
  t4867 = t4858 + t4861 + t4865;
  t5093 = 0.15121*t805;
  t5106 = -0.15121*t937;
  t5113 = -1.*t937*t4503;
  t5114 = -1.*t805*t4597;
  t5117 = t5093 + t5106 + t5113 + t5114;
  t5094 = t5093 + t4422 + t4510 + t4606;
  t5138 = t804*t5117;
  t5141 = -1.*t5094*t1203;
  t5147 = t5138 + t5141;
  t5105 = t804*t5094;
  t5131 = t5117*t1203;
  t5132 = t5105 + t5131;
  t2287 = t2286*t785;
  t2384 = t5*t2381;
  t2386 = t2287 + t2384;
  t2135 = t2129*t785;
  t2270 = t5*t2267;
  t2273 = t2135 + t2270;
  t5357 = t2062 + t852;
  t5365 = -0.038748999993*t5357;
  t5374 = t2178 + t985;
  t5375 = -0.281209000004*t5374;
  t5383 = -1.38024835e-16*t9;
  t5388 = -6.5e-11*t9*t4308;
  t5390 = t2144*t4352;
  t5397 = t2159*t4394;
  t5398 = -1.4640699999999997e-7 + t5365 + t5375 + t5383 + t5388 + t5390 + t5397;
  t5400 = -2.8e-11*t9;
  t5401 = t266 + t5400;
  t5412 = -0.038748999993*t5401;
  t5414 = t2155 + t985;
  t5424 = -2.123459e-6*t5414;
  t5427 = -0.28120900000849935*t9;
  t5428 = t2179*t4308;
  t5429 = t2189*t4352;
  t5431 = -1.000000000016*t9*t4394;
  t5432 = 1.0248489999999998e-12 + t5412 + t5424 + t5427 + t5428 + t5429 + t5431;
  t5441 = -1.*t937*t5398;
  t5445 = t805*t5432;
  t5448 = t5441 + t5445;
  t5399 = t805*t5398;
  t5433 = t937*t5432;
  t5434 = t5399 + t5433;
  t5460 = t6 + t5400;
  t5461 = -0.281209000004*t5460;
  t5462 = t2141 + t852;
  t5466 = -2.123459e-6*t5462;
  t5467 = -0.0387489999948987*t9;
  t5481 = t2064*t4308;
  t5486 = -1.000000000049*t9*t4352;
  t5488 = t2089*t4394;
  t5490 = 5.856279999999999e-13 + t5461 + t5466 + t5467 + t5481 + t5486 + t5488;
  t5504 = t804*t5448;
  t5505 = -1.*t5434*t1203;
  t5516 = t5504 + t5505;
  t5438 = t804*t5434;
  t5450 = t5448*t1203;
  t5451 = t5438 + t5450;
  t5491 = t5490*t785;
  t5517 = t5*t5516;
  t5518 = t5491 + t5517;
  t5520 = t5*t5490;
  t5521 = -1.*t785*t5516;
  t5522 = t5520 + t5521;
  t2406 = t2404*t785;
  t2535 = t5*t2531;
  t2544 = t2406 + t2535;
  t5718 = -0.80315*t2562;
  t5719 = t2717 + t152;
  t5722 = -0.038924*t5719;
  t5724 = -0.038922999986*t2569;
  t5727 = t2587 + t1571;
  t5728 = -0.503149000008*t5727;
  t5731 = -9.666064052774999e-12*t19;
  t5733 = -2.598649999999999e-7 + t5718 + t5722 + t5724 + t5728 + t5731;
  t5740 = 0.148705*t2701;
  t5741 = t14 + t2588;
  t5744 = -0.503149000008*t5741;
  t5752 = -0.80315*t2624;
  t5755 = t2717 + t679;
  t5757 = -3.6777349999999994e-6*t5755;
  t5758 = 1.0000140000590574e-6*t19;
  t5763 = 1.0394599999999997e-12 + t5740 + t5744 + t5752 + t5757 + t5758;
  t5772 = 0.148705*t2735;
  t5773 = -0.038922999986*t2597;
  t5774 = t14 + t2616;
  t5776 = -0.038924*t5774;
  t5780 = t2556 + t1571;
  t5781 = -3.6777349999999994e-6*t5780;
  t5782 = 0.30000099999679997*t19;
  t5783 = 1.8190549999999993e-12 + t5772 + t5773 + t5776 + t5781 + t5782;
  t5737 = t860*t5733;
  t5766 = t880*t5763;
  t5784 = t902*t5783;
  t5786 = t5737 + t5766 + t5784;
  t5798 = t962*t5733;
  t5799 = t1002*t5763;
  t5800 = t1026*t5783;
  t5802 = t5798 + t5799 + t5800;
  t5821 = t805*t5786;
  t5825 = -1.*t937*t5802;
  t5829 = t5821 + t5825;
  t5787 = t937*t5786;
  t5808 = t805*t5802;
  t5813 = t5787 + t5808;
  t5840 = t13*t5733;
  t5844 = t356*t5763;
  t5848 = t616*t5783;
  t5851 = t5840 + t5844 + t5848;
  t5854 = t804*t5829;
  t5856 = -1.*t5813*t1203;
  t5862 = t5854 + t5856;
  t2647 = t2637*t785;
  t2693 = t5*t2691;
  t2699 = t2647 + t2693;
  t5815 = t804*t5813;
  t5831 = t5829*t1203;
  t5834 = t5815 + t5831;
  t5853 = t5851*t785;
  t5863 = t5*t5862;
  t5865 = t5853 + t5863;
  t5870 = t5*t5851;
  t5880 = -1.*t785*t5862;
  t5886 = t5870 + t5880;
  t2756 = t2750*t785;
  t2807 = t5*t2803;
  t2808 = t2756 + t2807;
  t2833 = t2832*t785;
  t2939 = t5*t2935;
  t2942 = t2833 + t2939;
  t4886 = -1.*t3127*t4641;
  t4897 = -1.*t1225*t4694;
  t4923 = t3183*t4641;
  t4924 = t1452*t4694;
  t4945 = t3127*t4641;
  t4948 = t1225*t4694;
  t4977 = -1.*t3232*t4641;
  t4979 = -1.*t1823*t4694;
  t5025 = -1.*t3183*t4641;
  t5028 = -1.*t1452*t4694;
  t5049 = t3232*t4641;
  t5056 = t1823*t4694;
  t6108 = -1.*t739*t4401;
  t6109 = -1.*t1225*t4641;
  t6111 = t6108 + t6109 + t4696;
  t6114 = t1355*t4401;
  t6116 = t1452*t4641;
  t6117 = t6114 + t6116 + t4720;
  t5133 = -1.*t3127*t5132;
  t5134 = -1.*t3415*t4694;
  t5178 = t3183*t5132;
  t5184 = t3460*t4694;
  t6143 = t739*t4401;
  t6145 = t1225*t4641;
  t6147 = t6143 + t6145 + t4744;
  t6161 = -1.*t1628*t4401;
  t6162 = -1.*t1823*t4641;
  t6163 = t6161 + t6162 + t4766;
  t5214 = t3127*t5132;
  t5221 = t3415*t4694;
  t5242 = -1.*t3232*t5132;
  t5245 = -1.*t3488*t4694;
  t6173 = -1.*t1355*t4401;
  t6175 = -1.*t1452*t4641;
  t6176 = t6173 + t6175 + t4802;
  t6193 = t1628*t4401;
  t6194 = t1823*t4641;
  t6197 = t6193 + t6194 + t4858;
  t5289 = -1.*t3183*t5132;
  t5290 = -1.*t3460*t4694;
  t5328 = t3232*t5132;
  t5329 = t3488*t4694;
  t5356 = -1.*t3554*t4694;
  t5452 = -1.*t3127*t5451;
  t5530 = t3609*t4694;
  t5534 = t3183*t5451;
  t5576 = t3554*t4694;
  t5587 = t3127*t5451;
  t5599 = -1.*t3710*t4694;
  t5600 = -1.*t3232*t5451;
  t5643 = -1.*t3609*t4694;
  t5644 = -1.*t3183*t5451;
  t5688 = t3710*t4694;
  t5690 = t3232*t5451;
  t5836 = t3127*t5834;
  t5839 = t3738*t4694;
  t5902 = -1.*t5834*t3232;
  t5905 = -1.*t3772*t4694;
  t5943 = t5834*t3232;
  t5944 = t3772*t4694;
  t5972 = -1.*t5834*t3183;
  t5979 = -1.*t3789*t4694;
  t6013 = -1.*t3127*t5834;
  t6019 = -1.*t3738*t4694;
  t6039 = t5834*t3183;
  t6041 = t3789*t4694;
  t6333 = -1.*t2129*t4401;
  t6354 = -1.*t739*t5490;
  t6382 = t2286*t4401;
  t6393 = t1355*t5490;
  t6432 = t2129*t4401;
  t6433 = t739*t5490;
  t6455 = -1.*t2404*t4401;
  t6457 = -1.*t1628*t5490;
  t6538 = -1.*t2286*t4401;
  t6540 = -1.*t1355*t5490;
  t6563 = t2404*t4401;
  t6565 = t1628*t5490;
  t6605 = t739*t5851;
  t6607 = t2637*t4401;
  t6642 = -1.*t5851*t1628;
  t6643 = -1.*t2750*t4401;
  t7021 = t1180*t4633;
  t7022 = t1114*t4612;
  t7023 = t6143 + t7021 + t7022;
  t7026 = -1.*t1819*t4633;
  t7029 = -1.*t1790*t4612;
  t7032 = t6161 + t7026 + t7029;
  t6713 = t5851*t1628;
  t6716 = t2750*t4401;
  t7086 = -1.*t1450*t4633;
  t7087 = -1.*t1433*t4612;
  t7091 = t6173 + t7086 + t7087;
  t7095 = t1819*t4633;
  t7096 = t1790*t4612;
  t7097 = t6193 + t7095 + t7096;
  t6737 = -1.*t5851*t1355;
  t6743 = -1.*t2832*t4401;
  t6768 = -1.*t739*t5851;
  t6773 = -1.*t2637*t4401;
  t6965 = -1.*t1180*t4633;
  t6968 = -1.*t1114*t4612;
  t6971 = t6108 + t6965 + t6968;
  t6979 = t1450*t4633;
  t6981 = t1433*t4612;
  t6982 = t6114 + t6979 + t6981;
  t6791 = t5851*t1355;
  t6798 = t2832*t4401;
  t7437 = t912*t4503;
  t7441 = t1091*t4597;
  t7442 = t7437 + t6143 + t7441;
  t7446 = -1.*t1697*t4503;
  t7447 = -1.*t1787*t4597;
  t7449 = t7446 + t6161 + t7447;
  t7480 = -1.*t1418*t4503;
  t7485 = -1.*t1404*t4597;
  t7496 = t7480 + t6173 + t7485;
  t7501 = t1697*t4503;
  t7512 = t1787*t4597;
  t7522 = t7501 + t6193 + t7512;
  t7337 = -1.*t912*t4503;
  t7342 = -1.*t1091*t4597;
  t7343 = t7337 + t6108 + t7342;
  t7360 = t1418*t4503;
  t7371 = t1404*t4597;
  t7374 = t7360 + t6114 + t7371;
  t7750 = t4308*t2585;
  t7751 = t220*t5733;
  t7752 = t517*t5763;
  t7754 = t700*t5783;
  t7768 = t2633*t4352;
  t7771 = t2610*t4394;
  t7773 = t7750 + t7751 + t7752 + t7754 + t7768 + t7771;
  t7777 = -1.*t4308*t2726;
  t7779 = -1.*t1515*t5763;
  t7791 = -1.*t5733*t1587;
  t7793 = -1.*t5783*t1624;
  t7800 = -1.*t2707*t4352;
  t7801 = -1.*t2744*t4394;
  t7802 = t7777 + t7779 + t7791 + t7793 + t7800 + t7801;
  t7808 = t220*t4308;
  t7813 = t517*t4352;
  t7817 = t700*t4394;
  t7818 = t7808 + t7813 + t7817;
  t7827 = -1.*t4308*t1587;
  t7829 = -1.*t1515*t4352;
  t7830 = -1.*t1624*t4394;
  t7833 = t7827 + t7829 + t7830;
  t7873 = -1.*t4308*t1310;
  t7876 = -1.*t1334*t4352;
  t7877 = -1.*t1271*t4394;
  t7878 = t7873 + t7876 + t7877;
  t7887 = t4308*t2726;
  t7888 = t1515*t5763;
  t7891 = t5733*t1587;
  t7897 = t5783*t1624;
  t7899 = t2707*t4352;
  t7920 = t2744*t4394;
  t7927 = t7887 + t7888 + t7891 + t7897 + t7899 + t7920;
  t7932 = t4308*t1587;
  t7933 = t1515*t4352;
  t7934 = t1624*t4394;
  t7937 = t7932 + t7933 + t7934;
  t7939 = -1.*t5733*t1310;
  t7941 = -1.*t4308*t2821;
  t7945 = -1.*t1271*t5783;
  t7946 = -1.*t5763*t1334;
  t7948 = -1.*t2815*t4352;
  t7951 = -1.*t2828*t4394;
  t7952 = t7939 + t7941 + t7945 + t7946 + t7948 + t7951;
  t7991 = t4308*t1310;
  t7992 = t1334*t4352;
  t7994 = t1271*t4394;
  t7996 = t7991 + t7992 + t7994;
  t8000 = -1.*t4308*t2585;
  t8003 = -1.*t220*t5733;
  t8004 = -1.*t517*t5763;
  t8005 = -1.*t700*t5783;
  t8010 = -1.*t2633*t4352;
  t8011 = -1.*t2610*t4394;
  t8013 = t8000 + t8003 + t8004 + t8005 + t8010 + t8011;
  t8017 = -1.*t220*t4308;
  t8020 = -1.*t517*t4352;
  t8022 = -1.*t700*t4394;
  t8025 = t8017 + t8020 + t8022;
  t8028 = t5733*t1310;
  t8029 = t4308*t2821;
  t8031 = t1271*t5783;
  t8032 = t5763*t1334;
  t8034 = t2815*t4352;
  t8035 = t2828*t4394;
  t8037 = t8028 + t8029 + t8031 + t8032 + t8034 + t8035;
  t8104 = 6.5e-11*t16;
  p_output1[0]=t1462*var2[0] + t1838*var2[1] + t1228*var2[2];
  p_output1[1]=t1896*t5*var2[0] + t1930*t5*var2[1] + t1863*t5*var2[2];
  p_output1[2]=t1984*t5*var2[0] + t2042*t5*var2[1] + t1954*t5*var2[2];
  p_output1[3]=t2386*var2[0] + t2544*var2[1] + t2273*var2[2];
  p_output1[4]=t2942*var2[0] + t2808*var2[1] + t2699*var2[2];
  p_output1[5]=t2995;
  p_output1[6]=t3041;
  p_output1[7]=t3084;
  p_output1[8]=(-1.*t1462*t3129 - 1.*t3085*t3183)*var2[0] + (-1.*t1838*t3129 - 1.*t3085*t3232)*var2[1] + (-1.*t3085*t3127 - 1.*t1228*t3129)*var2[2];
  p_output1[9]=-1.*t3085*t3329*var2[0] - 1.*t3085*t3336*var2[1] - 1.*t3085*t3278*var2[2];
  p_output1[10]=(t1452*t3129 + t1896*t3085*t785)*var2[0] + (t1823*t3129 + t1930*t3085*t785)*var2[1] + (t1225*t3129 + t1863*t3085*t785)*var2[2];
  p_output1[11]=(t3129*t3460 + t1984*t3085*t785)*var2[0] + (t3129*t3488 + t2042*t3085*t785)*var2[1] + (t3129*t3415 + t1954*t3085*t785)*var2[2];
  p_output1[12]=(t3129*t3609 - 1.*t3085*t3698)*var2[0] + (t3129*t3710 - 1.*t3085*t3729)*var2[1] + (t3129*t3554 - 1.*t3085*t3563)*var2[2];
  p_output1[13]=(t3129*t3789 - 1.*t3085*t3802)*var2[0] + (t3129*t3772 - 1.*t3085*t3778)*var2[1] + (t3129*t3738 - 1.*t3085*t3749)*var2[2];
  p_output1[14]=t3842;
  p_output1[15]=t3850;
  p_output1[16]=t3860;
  p_output1[17]=t3842*var2[0] + t3850*var2[1] + t3860*var2[2];
  p_output1[18]=t3129*t3329*var2[0] + t3129*t3336*var2[1] + t3129*t3278*var2[2];
  p_output1[19]=(t1452*t3085 - 1.*t1896*t3129*t785)*var2[0] + (t1823*t3085 - 1.*t1930*t3129*t785)*var2[1] + (t1225*t3085 - 1.*t1863*t3129*t785)*var2[2];
  p_output1[20]=(t3085*t3460 - 1.*t1984*t3129*t785)*var2[0] + (t3085*t3488 - 1.*t2042*t3129*t785)*var2[1] + (t3085*t3415 - 1.*t1954*t3129*t785)*var2[2];
  p_output1[21]=(t3085*t3609 + t3129*t3698)*var2[0] + (t3085*t3710 + t3129*t3729)*var2[1] + (t3085*t3554 + t3129*t3563)*var2[2];
  p_output1[22]=(t3085*t3789 + t3129*t3802)*var2[0] + (t3085*t3772 + t3129*t3778)*var2[1] + (t3085*t3738 + t3129*t3749)*var2[2];
  p_output1[23]=t1462*t3129 + t3085*t3183;
  p_output1[24]=t1838*t3129 + t3085*t3232;
  p_output1[25]=t3085*t3127 + t1228*t3129;
  p_output1[26]=(t3041*(t1228*t4644 + t1228*t4662 + t3084*t4675 + t3278*t4675) + t3084*(-1.*t1838*t4644 - 1.*t1838*t4662 - 1.*t3041*t4675 - 1.*t3336*t4675) + t1838*t4752 + t1228*t4773)*var2[0] + (t2995*(-1.*t1228*t4644 - 1.*t1228*t4662 - 1.*t3084*t4675 - 1.*t3278*t4675) + t3084*(t1462*t4644 + t1462*t4662 + t2995*t4675 + t3329*t4675) + t1462*t4705 + t1228*t4730)*var2[1] + (t3041*(-1.*t1462*t4644 - 1.*t1462*t4662 - 1.*t2995*t4675 - 1.*t3329*t4675) + t2995*(t1838*t4644 + t1838*t4662 + t3041*t4675 + t3336*t4675) + t1838*t4807 + t1462*t4867)*var2[2];
  p_output1[27]=(t1930*t4752*t5 + t1863*t4773*t5 + t3041*(t4945 + t4948 + t1863*t4662*t5 + t3084*t4904*t5 - 1.*t1863*t4675*t785 - 1.*t1228*t4904*t785) + t3084*(t4977 + t4979 - 1.*t1930*t4662*t5 - 1.*t3041*t4904*t5 + t1930*t4675*t785 + t1838*t4904*t785))*var2[0] + (t1896*t4705*t5 + t1863*t4730*t5 + t2995*(t4886 + t4897 - 1.*t1863*t4662*t5 - 1.*t3084*t4904*t5 + t1863*t4675*t785 + t1228*t4904*t785) + t3084*(t4923 + t4924 + t1896*t4662*t5 + t2995*t4904*t5 - 1.*t1896*t4675*t785 - 1.*t1462*t4904*t785))*var2[1] + (t1930*t4807*t5 + t1896*t4867*t5 + t3041*(-1.*t1896*t4662*t5 - 1.*t2995*t4904*t5 + t5025 + t5028 + t1896*t4675*t785 + t1462*t4904*t785) + t2995*(t1930*t4662*t5 + t3041*t4904*t5 + t5049 + t5056 - 1.*t1930*t4675*t785 - 1.*t1838*t4904*t785))*var2[2];
  p_output1[28]=(t2042*t4752*t5 + t1954*t4773*t5 + t3041*(t1954*t4662*t5 + t3084*t5*t5147 + t5214 + t5221 - 1.*t1954*t4675*t785 - 1.*t1228*t5147*t785) + t3084*(-1.*t2042*t4662*t5 - 1.*t3041*t5*t5147 + t5242 + t5245 + t2042*t4675*t785 + t1838*t5147*t785))*var2[0] + (t1984*t4705*t5 + t1954*t4730*t5 + t2995*(-1.*t1954*t4662*t5 + t5133 + t5134 - 1.*t3084*t5*t5147 + t1954*t4675*t785 + t1228*t5147*t785) + t3084*(t1984*t4662*t5 + t2995*t5*t5147 + t5178 + t5184 - 1.*t1984*t4675*t785 - 1.*t1462*t5147*t785))*var2[1] + (t2042*t4807*t5 + t1984*t4867*t5 + t3041*(-1.*t1984*t4662*t5 - 1.*t2995*t5*t5147 + t5289 + t5290 + t1984*t4675*t785 + t1462*t5147*t785) + t2995*(t2042*t4662*t5 + t3041*t5*t5147 + t5328 + t5329 - 1.*t2042*t4675*t785 - 1.*t1838*t5147*t785))*var2[2];
  p_output1[29]=(t2544*t4752 + t2273*t4773 + t3041*(t2273*t4662 + t3563*t4675 + t3084*t5518 + t1228*t5522 + t5576 + t5587) + t3084*(-1.*t2544*t4662 - 1.*t3729*t4675 - 1.*t3041*t5518 - 1.*t1838*t5522 + t5599 + t5600))*var2[0] + (t2386*t4705 + t2273*t4730 + t2995*(-1.*t2273*t4662 - 1.*t3563*t4675 + t5356 + t5452 - 1.*t3084*t5518 - 1.*t1228*t5522) + t3084*(t2386*t4662 + t3698*t4675 + t2995*t5518 + t1462*t5522 + t5530 + t5534))*var2[1] + (t2544*t4807 + t2386*t4867 + t3041*(-1.*t2386*t4662 - 1.*t3698*t4675 - 1.*t2995*t5518 - 1.*t1462*t5522 + t5643 + t5644) + t2995*(t2544*t4662 + t3729*t4675 + t3041*t5518 + t1838*t5522 + t5688 + t5690))*var2[2];
  p_output1[30]=(t2808*t4752 + t2699*t4773 + t3041*(t2699*t4662 + t3749*t4675 + t5836 + t5839 + t3084*t5865 + t1228*t5886) + t3084*(-1.*t2808*t4662 - 1.*t3778*t4675 - 1.*t3041*t5865 - 1.*t1838*t5886 + t5902 + t5905))*var2[0] + (t2942*t4705 + t2699*t4730 + t2995*(-1.*t2699*t4662 - 1.*t3749*t4675 - 1.*t3084*t5865 - 1.*t1228*t5886 + t6013 + t6019) + t3084*(t2942*t4662 + t3802*t4675 + t2995*t5865 + t1462*t5886 + t6039 + t6041))*var2[1] + (t2808*t4807 + t2942*t4867 + t2995*(t2808*t4662 + t3778*t4675 + t3041*t5865 + t1838*t5886 + t5943 + t5944) + t3041*(-1.*t2942*t4662 - 1.*t3802*t4675 - 1.*t2995*t5865 - 1.*t1462*t5886 + t5972 + t5979))*var2[2];
  p_output1[31]=t3041*t4752 + t3084*t4773;
  p_output1[32]=t2995*t4705 + t3084*t4730;
  p_output1[33]=t3041*t4807 + t2995*t4867;
  p_output1[34]=(t3232*(t1863*t4641 + t1225*t4904 + t4945 + t4948) + t3127*(-1.*t1930*t4641 - 1.*t1823*t4904 + t4977 + t4979) + t1823*t6147 + t1225*t6163)*var2[0] + (t3183*(-1.*t1863*t4641 + t4886 + t4897 - 1.*t1225*t4904) + t3127*(t1896*t4641 + t1452*t4904 + t4923 + t4924) + t1452*t6111 + t1225*t6117)*var2[1] + (t3232*(-1.*t1896*t4641 - 1.*t1452*t4904 + t5025 + t5028) + t3183*(t1930*t4641 + t1823*t4904 + t5049 + t5056) + t1823*t6176 + t1452*t6197)*var2[2];
  p_output1[35]=(t3232*(t1954*t4641 + t1225*t5147 + t5214 + t5221) + t3127*(-1.*t2042*t4641 - 1.*t1823*t5147 + t5242 + t5245) + t3488*t6147 + t3415*t6163)*var2[0] + (t3183*(-1.*t1954*t4641 + t5133 + t5134 - 1.*t1225*t5147) + t3127*(t1984*t4641 + t1452*t5147 + t5178 + t5184) + t3460*t6111 + t3415*t6117)*var2[1] + (t3232*(-1.*t1984*t4641 - 1.*t1452*t5147 + t5289 + t5290) + t3183*(t2042*t4641 + t1823*t5147 + t5328 + t5329) + t3488*t6176 + t3460*t6197)*var2[2];
  p_output1[36]=(t3710*t6147 + t3554*t6163 + t3232*(t2267*t4641 + t1225*t5516 + t5576 + t5587 + t6432 + t6433) + t3127*(-1.*t2531*t4641 - 1.*t1823*t5516 + t5599 + t5600 + t6455 + t6457))*var2[0] + (t3609*t6111 + t3554*t6117 + t3183*(-1.*t2267*t4641 + t5356 + t5452 - 1.*t1225*t5516 + t6333 + t6354) + t3127*(t2381*t4641 + t1452*t5516 + t5530 + t5534 + t6382 + t6393))*var2[1] + (t3710*t6176 + t3609*t6197 + t3232*(-1.*t2381*t4641 - 1.*t1452*t5516 + t5643 + t5644 + t6538 + t6540) + t3183*(t2531*t4641 + t1823*t5516 + t5688 + t5690 + t6563 + t6565))*var2[2];
  p_output1[37]=(t3772*t6147 + t3738*t6163 + t3232*(t2691*t4641 + t5836 + t5839 + t1225*t5862 + t6605 + t6607) + t3127*(-1.*t2803*t4641 - 1.*t1823*t5862 + t5902 + t5905 + t6642 + t6643))*var2[0] + (t3789*t6111 + t3738*t6117 + t3183*(-1.*t2691*t4641 - 1.*t1225*t5862 + t6013 + t6019 + t6768 + t6773) + t3127*(t2935*t4641 + t1452*t5862 + t6039 + t6041 + t6791 + t6798))*var2[1] + (t3772*t6176 + t3789*t6197 + t3183*(t2803*t4641 + t1823*t5862 + t5943 + t5944 + t6713 + t6716) + t3232*(-1.*t2935*t4641 - 1.*t1452*t5862 + t5972 + t5979 + t6737 + t6743))*var2[2];
  p_output1[38]=t3232*t6147 + t3127*t6163;
  p_output1[39]=t3183*t6111 + t3127*t6117;
  p_output1[40]=t3232*t6176 + t3183*t6197;
  p_output1[41]=(t1628*(t1952*t4612 + t1114*t4633 + t1180*t5094 + t1114*t5117) + (-1.*t2027*t4612 - 1.*t1790*t4633 - 1.*t1819*t5094 - 1.*t1790*t5117)*t739)*var2[0] + (t1355*(-1.*t1952*t4612 - 1.*t1114*t4633 - 1.*t1180*t5094 - 1.*t1114*t5117) + (t1978*t4612 + t1433*t4633 + t1450*t5094 + t1433*t5117)*t739)*var2[1] + (t1628*(-1.*t1978*t4612 - 1.*t1433*t4633 - 1.*t1450*t5094 - 1.*t1433*t5117) + t1355*(t2027*t4612 + t1790*t4633 + t1819*t5094 + t1790*t5117))*var2[2];
  p_output1[42]=(t1628*(t2229*t4612 + t2262*t4633 + t1180*t5434 + t1114*t5448 + t6432 + t6433) + t2404*t7023 + t2129*t7032 + (-1.*t2507*t4612 - 1.*t2512*t4633 - 1.*t1819*t5434 - 1.*t1790*t5448 + t6455 + t6457)*t739)*var2[0] + (t1355*(-1.*t2229*t4612 - 1.*t2262*t4633 - 1.*t1180*t5434 - 1.*t1114*t5448 + t6333 + t6354) + t2286*t6971 + t2129*t6982 + (t2356*t4612 + t2365*t4633 + t1450*t5434 + t1433*t5448 + t6382 + t6393)*t739)*var2[1] + (t1628*(-1.*t2356*t4612 - 1.*t2365*t4633 - 1.*t1450*t5434 - 1.*t1433*t5448 + t6538 + t6540) + t1355*(t2507*t4612 + t2512*t4633 + t1819*t5434 + t1790*t5448 + t6563 + t6565) + t2404*t7091 + t2286*t7097)*var2[2];
  p_output1[43]=(t1628*(t2678*t4612 + t2686*t4633 + t1180*t5813 + t1114*t5829 + t6605 + t6607) + t2750*t7023 + t2637*t7032 + (-1.*t2793*t4612 - 1.*t2801*t4633 - 1.*t1819*t5813 - 1.*t1790*t5829 + t6642 + t6643)*t739)*var2[0] + (t1355*(-1.*t2678*t4612 - 1.*t2686*t4633 - 1.*t1180*t5813 - 1.*t1114*t5829 + t6768 + t6773) + t2832*t6971 + t2637*t6982 + (t2856*t4612 + t2909*t4633 + t1450*t5813 + t1433*t5829 + t6791 + t6798)*t739)*var2[1] + (t1355*(t2793*t4612 + t2801*t4633 + t1819*t5813 + t1790*t5829 + t6713 + t6716) + t1628*(-1.*t2856*t4612 - 1.*t2909*t4633 - 1.*t1450*t5813 - 1.*t1433*t5829 + t6737 + t6743) + t2750*t7091 + t2832*t7097)*var2[2];
  p_output1[44]=t1628*t7023 + t7032*t739;
  p_output1[45]=t1355*t6971 + t6982*t739;
  p_output1[46]=t1628*t7091 + t1355*t7097;
  p_output1[47]=(0.15121*t2310 + 0.15121*t2341 + (-1.*t2478*t4503 - 1.*t2445*t4597 - 1.*t1787*t5398 - 1.*t1697*t5432 + t6455 + t6457)*t739 + t2404*t7442 + t2129*t7449 + t1628*(t2197*t4503 + t2172*t4597 + t1091*t5398 + t6432 + t6433 + t5432*t912))*var2[0] + (0.15121*t2445 + 0.15121*t2478 + t2286*t7343 + t2129*t7374 + (t2341*t4503 + t2310*t4597 + t1404*t5398 + t1418*t5432 + t6382 + t6393)*t739 + t1355*(-1.*t2197*t4503 - 1.*t2172*t4597 - 1.*t1091*t5398 + t6333 + t6354 - 1.*t5432*t912))*var2[1] + (0.15121*t2172 + 0.15121*t2197 + t1628*(-1.*t2341*t4503 - 1.*t2310*t4597 - 1.*t1404*t5398 - 1.*t1418*t5432 + t6538 + t6540) + t1355*(t2478*t4503 + t2445*t4597 + t1787*t5398 + t1697*t5432 + t6563 + t6565) + t2404*t7496 + t2286*t7522)*var2[2];
  p_output1[48]=(0.15121*t2839 + 0.15121*t2851 + (-1.*t2777*t4503 - 1.*t2790*t4597 - 1.*t1697*t5786 - 1.*t1787*t5802 + t6642 + t6643)*t739 + t2750*t7442 + t2637*t7449 + t1628*(t2674*t4503 + t2668*t4597 + t1091*t5802 + t6605 + t6607 + t5786*t912))*var2[0] + (0.15121*t2777 + 0.15121*t2790 + t2832*t7343 + t2637*t7374 + (t2839*t4503 + t2851*t4597 + t1418*t5786 + t1404*t5802 + t6791 + t6798)*t739 + t1355*(-1.*t2674*t4503 - 1.*t2668*t4597 - 1.*t1091*t5802 + t6768 + t6773 - 1.*t5786*t912))*var2[1] + (0.15121*t2668 + 0.15121*t2674 + t1355*(t2777*t4503 + t2790*t4597 + t1697*t5786 + t1787*t5802 + t6713 + t6716) + t1628*(-1.*t2839*t4503 - 1.*t2851*t4597 - 1.*t1418*t5786 - 1.*t1404*t5802 + t6737 + t6743) + t2750*t7496 + t2832*t7522)*var2[2];
  p_output1[49]=0.15121*t1404 + 0.15121*t1418 + t1628*t7442 + t739*t7449;
  p_output1[50]=0.15121*t1697 + 0.15121*t1787 + t1355*t7343 + t7374*t739;
  p_output1[51]=0.15121*t1091 + t1628*t7496 + t1355*t7522 + 0.15121*t912;
  p_output1[52]=(1.e-6*(-7.000000000455e-6*t19 + t2556) - 0.281209*t2815 + 0.038749*t2828 + t1587*t7773 + t220*t7802 + t2726*t7818 + t2585*t7833 - 7.e-6*(t1624*t7773 + t700*t7802 + t2744*t7818 + t2610*t7833) + 4.e-6*(-1.*t1515*t7773 - 1.*t517*t7802 - 1.*t2707*t7818 - 1.*t2633*t7833))*var2[0] + (1.e-6*(4.00000000026e-6*t19 + t2565) - 0.281209*t2707 + 0.038749*t2744 + t2585*t7996 + t1310*t8013 + t2821*t8025 + t220*t8037 + 4.e-6*(-1.*t2633*t7996 - 1.*t1334*t8013 - 1.*t2815*t8025 - 1.*t517*t8037) - 7.e-6*(t2610*t7996 + t1271*t8013 + t2828*t8025 + t700*t8037))*var2[1] + (0.038749*t2610 - 0.281209*t2633 + 1.e-6*(6.5e-11*t19 + 7.e-6*t2562 + 4.e-6*t5719) + t2726*t7878 + t1310*t7927 + t2821*t7937 + t1587*t7952 + 4.e-6*(-1.*t2707*t7878 - 1.*t1334*t7927 - 1.*t2815*t7937 - 1.*t1515*t7952) - 7.e-6*(t2744*t7878 + t1271*t7927 + t2828*t7937 + t1624*t7952))*var2[2];
  p_output1[53]=0.038749*t1271 - 0.281209*t1334 + 1.e-6*(7.e-6*t1280 + t146 + t152) + t1587*t7818 + t220*t7833 + 4.e-6*(-1.*t1515*t7818 - 1.*t517*t7833) - 7.e-6*(t1624*t7818 + t700*t7833);
  p_output1[54]=-0.281209*t1515 + 0.038749*t1624 + t220*t7996 + t1310*t8025 - 7.e-6*(t700*t7996 + t1271*t8025) + 4.e-6*(-1.*t517*t7996 - 1.*t1334*t8025) + 1.e-6*(t18 + t22 + 4.e-6*(-1. + t8104));
  p_output1[55]=-0.281209*t517 + 0.038749*t700 + t1587*t7878 + t1310*t7937 - 7.e-6*(t1624*t7878 + t1271*t7937) + 4.e-6*(-1.*t1515*t7878 - 1.*t1334*t7937) + 1.e-6*(-1. + 7.e-6*t159 + 4.e-6*t4306 + t8104);
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_fRlFoot_vec_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
