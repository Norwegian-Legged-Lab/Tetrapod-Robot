/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:26:57 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t299;
  double t300;
  double t320;
  double t420;
  double t257;
  double t465;
  double t628;
  double t636;
  double t279;
  double t504;
  double t760;
  double t367;
  double t370;
  double t482;
  double t487;
  double t525;
  double t559;
  double t563;
  double t573;
  double t812;
  double t703;
  double t733;
  double t745;
  double t746;
  double t748;
  double t758;
  double t766;
  double t776;
  double t778;
  double t851;
  double t885;
  double t888;
  double t902;
  double t927;
  double t934;
  double t962;
  double t974;
  double t263;
  double t277;
  double t1093;
  double t1214;
  double t1109;
  double t1137;
  double t1148;
  double t1154;
  double t1155;
  double t1180;
  double t1182;
  double t1195;
  double t1205;
  double t1061;
  double t1244;
  double t1276;
  double t1283;
  double t1299;
  double t1323;
  double t1328;
  double t1342;
  double t1352;
  double t1356;
  double t1415;
  double t215;
  double t832;
  double t841;
  double t290;
  double t295;
  double t644;
  double t651;
  double t1014;
  double t1037;
  double t1587;
  double t1593;
  double t1594;
  double t1605;
  double t1650;
  double t1667;
  double t1692;
  double t1728;
  double t1736;
  double t1739;
  double t1768;
  double t1842;
  double t1892;
  double t1900;
  double t1904;
  double t1931;
  double t1939;
  double t1944;
  double t1945;
  double t1525;
  double t2116;
  double t2127;
  double t2128;
  double t2130;
  double t2137;
  double t2142;
  double t2187;
  double t2197;
  double t2229;
  double t2232;
  double t2248;
  double t2280;
  double t2307;
  double t2311;
  double t2312;
  double t2314;
  double t1468;
  double t1476;
  double t1478;
  double t1213;
  double t1432;
  double t1436;
  double t2021;
  double t2039;
  double t2069;
  double t1930;
  double t1972;
  double t1987;
  double t2340;
  double t2341;
  double t2344;
  double t2284;
  double t2315;
  double t2328;
  double t2374;
  double t2416;
  double t2426;
  double t2545;
  double t2576;
  double t2578;
  double t2579;
  double t2581;
  double t2584;
  double t2598;
  double t2600;
  double t2606;
  double t2615;
  double t2619;
  double t2620;
  double t2623;
  double t2631;
  double t2633;
  double t2647;
  double t2546;
  double t2530;
  double t2532;
  double t2758;
  double t2763;
  double t2767;
  double t2777;
  double t2810;
  double t2811;
  double t2814;
  double t2815;
  double t2905;
  double t2907;
  double t2908;
  double t2921;
  double t2925;
  double t2927;
  double t2930;
  double t2934;
  double t2997;
  double t2988;
  double t2989;
  double t2991;
  double t3001;
  double t3003;
  double t3011;
  double t3013;
  double t3020;
  double t3021;
  double t3024;
  double t3025;
  double t3029;
  double t3031;
  double t3038;
  double t3039;
  double t3054;
  double t3055;
  double t3056;
  double t3063;
  double t3064;
  double t3066;
  double t3067;
  double t3077;
  double t3079;
  double t3080;
  double t3085;
  double t3131;
  double t3141;
  double t3142;
  double t3146;
  double t3150;
  double t3152;
  double t3153;
  double t3156;
  double t3165;
  double t3167;
  double t3190;
  double t3191;
  double t3198;
  double t3201;
  double t3207;
  double t3246;
  double t3250;
  double t3280;
  double t3507;
  double t3508;
  double t3513;
  double t3517;
  double t3542;
  double t3543;
  double t3545;
  double t3561;
  double t3568;
  double t3569;
  double t3571;
  double t3600;
  double t3601;
  double t3603;
  double t3605;
  double t1641;
  double t1733;
  double t1788;
  double t1792;
  double t1988;
  double t2071;
  double t2072;
  double t2129;
  double t2151;
  double t2198;
  double t2201;
  double t2335;
  double t2345;
  double t2349;
  double t577;
  double t809;
  double t981;
  double t1000;
  double t1450;
  double t1551;
  double t1553;
  double t1008;
  double t1569;
  double t1571;
  double t3743;
  double t3765;
  double t1795;
  double t2083;
  double t2092;
  double t2210;
  double t2351;
  double t2360;
  double t2373;
  double t2394;
  double t2411;
  double t2419;
  double t2423;
  double t2432;
  double t2455;
  double t2462;
  double t2464;
  double t2465;
  double t2468;
  double t2478;
  double t2482;
  double t2486;
  double t2488;
  double t2499;
  double t2514;
  double t2516;
  double t2518;
  double t2519;
  double t2520;
  double t2661;
  double t2670;
  double t2683;
  double t2609;
  double t2649;
  double t2650;
  double t2536;
  double t2541;
  double t2548;
  double t2568;
  double t2657;
  double t2689;
  double t2691;
  double t2845;
  double t2849;
  double t2869;
  double t2787;
  double t2818;
  double t2840;
  double t2717;
  double t2718;
  double t2723;
  double t2747;
  double t2844;
  double t2875;
  double t2876;
  double t2965;
  double t2975;
  double t2978;
  double t2922;
  double t2940;
  double t2941;
  double t2885;
  double t2893;
  double t2894;
  double t2901;
  double t2950;
  double t2979;
  double t2981;
  double t3099;
  double t3106;
  double t3112;
  double t3073;
  double t3087;
  double t3089;
  double t3018;
  double t3037;
  double t3057;
  double t3061;
  double t3093;
  double t3113;
  double t3116;
  double t3376;
  double t3424;
  double t3445;
  double t3206;
  double t3294;
  double t3324;
  double t3147;
  double t3154;
  double t3187;
  double t3188;
  double t3327;
  double t3455;
  double t3465;
  double t3638;
  double t3643;
  double t3650;
  double t3597;
  double t3607;
  double t3610;
  double t3510;
  double t3531;
  double t3551;
  double t3554;
  double t3637;
  double t3654;
  double t3662;
  double t3773;
  double t3776;
  double t3791;
  double t3815;
  double t3816;
  double t3822;
  double t3760;
  double t3761;
  double t3762;
  double t4273;
  double t4275;
  double t4276;
  double t4226;
  double t4247;
  double t4259;
  double t4263;
  double t4264;
  double t4268;
  double t3841;
  double t3849;
  double t3850;
  double t3852;
  double t3854;
  double t3872;
  double t3886;
  double t3894;
  double t3895;
  double t3928;
  double t3929;
  double t3947;
  double t3950;
  double t3962;
  double t3971;
  double t3987;
  double t3989;
  double t3992;
  double t4003;
  double t4026;
  double t4042;
  double t4061;
  double t4062;
  double t4077;
  double t4083;
  double t4085;
  double t4086;
  double t4101;
  double t4104;
  double t4109;
  double t4114;
  double t4120;
  double t4122;
  double t4132;
  double t4133;
  double t4137;
  double t4154;
  double t4155;
  double t4169;
  double t4177;
  double t4180;
  double t4181;
  double t4192;
  double t4194;
  double t4195;
  double t4205;
  double t4207;
  double t4210;
  double t4214;
  double t4216;
  double t4217;
  double t3706;
  double t3713;
  double t3718;
  double t4738;
  double t4743;
  double t4751;
  double t4755;
  double t4756;
  double t4757;
  double t4759;
  double t4763;
  double t4768;
  double t4773;
  double t4777;
  double t4783;
  double t4791;
  double t4793;
  double t4794;
  double t4795;
  double t4797;
  double t4798;
  double t4799;
  double t4800;
  double t4803;
  double t4804;
  double t4821;
  double t4824;
  double t4825;
  double t4826;
  double t4833;
  double t4841;
  double t4843;
  double t4846;
  double t4847;
  double t4848;
  double t4733;
  double t4862;
  double t4853;
  double t4854;
  double t4857;
  double t4858;
  double t4859;
  double t4860;
  double t4861;
  double t4863;
  double t4864;
  double t4866;
  double t4867;
  double t4868;
  double t4869;
  double t4872;
  double t4877;
  double t4878;
  double t4879;
  double t4880;
  double t4890;
  double t4891;
  double t4892;
  double t4893;
  double t4894;
  double t4711;
  double t4732;
  double t4736;
  double t4737;
  double t4739;
  double t4742;
  double t4779;
  double t4820;
  double t4850;
  double t4851;
  double t4856;
  double t4870;
  double t4895;
  double t4896;
  double t4899;
  double t4905;
  double t4906;
  double t4908;
  double t4909;
  double t4910;
  double t4913;
  double t3733;
  double t3735;
  double t3737;
  double t4937;
  double t4944;
  double t4947;
  double t4933;
  double t4934;
  double t4935;
  double t4852;
  double t4917;
  double t4922;
  double t4954;
  double t4956;
  double t4959;
  double t3720;
  double t3730;
  double t3732;
  double t5190;
  double t5191;
  double t5192;
  double t4960;
  double t4964;
  double t4965;
  double t4968;
  double t4991;
  double t4992;
  double t4993;
  double t5000;
  double t5012;
  double t5019;
  double t5020;
  double t5024;
  double t5050;
  double t5052;
  double t5055;
  double t5056;
  double t5099;
  double t5100;
  double t5113;
  double t5114;
  double t5158;
  double t5163;
  double t5168;
  double t5175;
  double t5447;
  double t5454;
  double t5458;
  double t5459;
  double t5464;
  double t5449;
  double t5471;
  double t5472;
  double t5473;
  double t5451;
  double t5465;
  double t5468;
  double t2757;
  double t2878;
  double t2880;
  double t2570;
  double t2695;
  double t2703;
  double t5649;
  double t5661;
  double t5665;
  double t5670;
  double t5671;
  double t5676;
  double t5679;
  double t5685;
  double t5686;
  double t5696;
  double t5697;
  double t5698;
  double t5699;
  double t5701;
  double t5702;
  double t5705;
  double t5707;
  double t5711;
  double t5716;
  double t5735;
  double t5736;
  double t5740;
  double t5692;
  double t5720;
  double t5722;
  double t5750;
  double t5751;
  double t5752;
  double t5753;
  double t5754;
  double t5755;
  double t5758;
  double t5759;
  double t5760;
  double t5762;
  double t5763;
  double t5764;
  double t5729;
  double t5743;
  double t5746;
  double t5761;
  double t5765;
  double t5766;
  double t5768;
  double t5769;
  double t5770;
  double t2903;
  double t2982;
  double t2983;
  double t5843;
  double t5844;
  double t5845;
  double t5850;
  double t5851;
  double t5852;
  double t5853;
  double t5865;
  double t5874;
  double t5875;
  double t5877;
  double t5881;
  double t5886;
  double t5894;
  double t5895;
  double t5899;
  double t5920;
  double t5921;
  double t5922;
  double t5923;
  double t5924;
  double t5925;
  double t5927;
  double t5932;
  double t5872;
  double t5912;
  double t5940;
  double t5941;
  double t5943;
  double t5944;
  double t5946;
  double t5951;
  double t5965;
  double t5967;
  double t5970;
  double t5942;
  double t5953;
  double t5958;
  double t5978;
  double t5994;
  double t5995;
  double t5996;
  double t6003;
  double t6007;
  double t6008;
  double t3062;
  double t3117;
  double t3121;
  double t5964;
  double t5971;
  double t5974;
  double t6001;
  double t6009;
  double t6010;
  double t6015;
  double t6022;
  double t6027;
  double t3189;
  double t3473;
  double t3474;
  double t3557;
  double t3675;
  double t3679;
  double t5188;
  double t5189;
  double t5220;
  double t5221;
  double t5303;
  double t5304;
  double t5336;
  double t5342;
  double t5383;
  double t5396;
  double t5417;
  double t5421;
  double t6206;
  double t6220;
  double t6221;
  double t6223;
  double t6225;
  double t6238;
  double t5469;
  double t5470;
  double t5485;
  double t5486;
  double t6262;
  double t6264;
  double t6265;
  double t6296;
  double t6297;
  double t6302;
  double t5504;
  double t5506;
  double t5539;
  double t5547;
  double t6311;
  double t6312;
  double t6313;
  double t6337;
  double t6338;
  double t6341;
  double t5572;
  double t5573;
  double t5607;
  double t5609;
  double t5646;
  double t5747;
  double t5774;
  double t5775;
  double t5787;
  double t5788;
  double t5795;
  double t5796;
  double t5810;
  double t5811;
  double t5821;
  double t5822;
  double t5975;
  double t5977;
  double t6039;
  double t6045;
  double t6071;
  double t6076;
  double t6102;
  double t6105;
  double t6132;
  double t6135;
  double t6151;
  double t6152;
  double t6426;
  double t6428;
  double t6437;
  double t6440;
  double t6456;
  double t6458;
  double t6464;
  double t6465;
  double t6474;
  double t6475;
  double t6481;
  double t6484;
  double t6505;
  double t6507;
  double t6523;
  double t6524;
  double t6778;
  double t6779;
  double t6781;
  double t6786;
  double t6790;
  double t6798;
  double t6541;
  double t6543;
  double t6834;
  double t6844;
  double t6846;
  double t6851;
  double t6853;
  double t6855;
  double t6574;
  double t6576;
  double t6600;
  double t6601;
  double t6746;
  double t6750;
  double t6751;
  double t6754;
  double t6755;
  double t6757;
  double t6611;
  double t6612;
  double t7033;
  double t7034;
  double t7035;
  double t7037;
  double t7038;
  double t7039;
  double t7075;
  double t7079;
  double t7080;
  double t7084;
  double t7085;
  double t7086;
  double t7003;
  double t7004;
  double t7007;
  double t7009;
  double t7011;
  double t7012;
  double t7241;
  double t7242;
  double t7243;
  double t7244;
  double t7245;
  double t7246;
  double t7248;
  double t7250;
  double t7251;
  double t7252;
  double t7253;
  double t7254;
  double t7255;
  double t7256;
  double t7260;
  double t7261;
  double t7262;
  double t7263;
  double t7265;
  double t7266;
  double t7267;
  double t7268;
  double t7301;
  double t7302;
  double t7303;
  double t7305;
  double t7307;
  double t7308;
  double t7309;
  double t7310;
  double t7311;
  double t7312;
  double t7313;
  double t7315;
  double t7316;
  double t7317;
  double t7319;
  double t7321;
  double t7322;
  double t7323;
  double t7324;
  double t7325;
  double t7326;
  double t7327;
  double t7363;
  double t7364;
  double t7365;
  double t7368;
  double t7371;
  double t7372;
  double t7374;
  double t7376;
  double t7377;
  double t7378;
  double t7380;
  double t7382;
  double t7385;
  double t7387;
  double t7388;
  double t7393;
  double t7395;
  double t7397;
  double t7398;
  double t7402;
  double t7403;
  double t7404;
  double t7453;
  t299 = Cos(var1[14]);
  t300 = -1.*t299;
  t320 = 1. + t300;
  t420 = Sin(var1[14]);
  t257 = Cos(var1[13]);
  t465 = -7.e-6*t420;
  t628 = -1.*t257;
  t636 = 1. + t628;
  t279 = Sin(var1[13]);
  t504 = -7.e-6*t320;
  t760 = -1.*t420;
  t367 = -6.5e-11*t320;
  t370 = 4.e-6*t320;
  t482 = t370 + t465;
  t487 = 4.e-6*t482;
  t525 = -4.e-6*t420;
  t559 = t504 + t525;
  t563 = -7.e-6*t559;
  t573 = 1. + t367 + t487 + t563;
  t812 = 2.8e-11*t636;
  t703 = 1.000000000049*t320;
  t733 = -1. + t703;
  t745 = 4.e-6*t733;
  t746 = -1. + t299;
  t748 = 4.e-6*t746;
  t758 = 2.8e-11*t320;
  t766 = t758 + t760;
  t776 = -7.e-6*t766;
  t778 = t745 + t748 + t776 + t465;
  t851 = -1.000000000016*t320;
  t885 = 1. + t851;
  t888 = -7.e-6*t885;
  t902 = -2.8e-11*t320;
  t927 = t902 + t760;
  t934 = 4.e-6*t927;
  t962 = 4.e-6*t420;
  t974 = t888 + t504 + t934 + t962;
  t263 = -1. + t257;
  t277 = 4.e-6*t263;
  t1093 = -7.e-6*t636;
  t1214 = Sin(var1[12]);
  t1109 = 4.e-6*t279;
  t1137 = t1093 + t1109;
  t1148 = t1137*t573;
  t1154 = t812 + t279;
  t1155 = t1154*t778;
  t1180 = -1.000000000016*t636;
  t1182 = 1. + t1180;
  t1195 = t1182*t974;
  t1205 = t1148 + t1155 + t1195;
  t1061 = Cos(var1[12]);
  t1244 = -6.5e-11*t636;
  t1276 = 1. + t1244;
  t1283 = t1276*t573;
  t1299 = 7.e-6*t279;
  t1323 = t277 + t1299;
  t1328 = t1323*t778;
  t1342 = -4.e-6*t279;
  t1352 = t1093 + t1342;
  t1356 = t1352*t974;
  t1415 = t1283 + t1328 + t1356;
  t215 = Cos(var1[4]);
  t832 = -1.*t279;
  t841 = t812 + t832;
  t290 = -7.e-6*t279;
  t295 = t277 + t290;
  t644 = -1.000000000049*t636;
  t651 = 1. + t644;
  t1014 = Sin(var1[4]);
  t1037 = Cos(var1[5]);
  t1587 = 1.000000000016*t320;
  t1593 = t504 + t962;
  t1594 = -7.e-6*t1593;
  t1605 = -1. + t1587 + t1594;
  t1650 = 1. + t367;
  t1667 = -7.e-6*t1650;
  t1692 = 7.e-6*t320;
  t1728 = t1667 + t1692 + t962;
  t1736 = t748 + t465;
  t1739 = -7.e-6*t1736;
  t1768 = t902 + t1739 + t420;
  t1842 = t1352*t1605;
  t1892 = t1276*t1728;
  t1900 = t1323*t1768;
  t1904 = t1842 + t1892 + t1900;
  t1931 = t1182*t1605;
  t1939 = t1137*t1728;
  t1944 = t1154*t1768;
  t1945 = t1931 + t1939 + t1944;
  t1525 = Sin(var1[5]);
  t2116 = -1.000000000049*t320;
  t2127 = 4.e-6*t1736;
  t2128 = 1. + t2116 + t2127;
  t2130 = 4.e-6*t1650;
  t2137 = 7.e-6*t420;
  t2142 = t2130 + t748 + t2137;
  t2187 = 4.e-6*t1593;
  t2197 = t758 + t2187 + t420;
  t2229 = t1154*t2128;
  t2232 = t1137*t2142;
  t2248 = t1182*t2197;
  t2280 = t2229 + t2232 + t2248;
  t2307 = t1323*t2128;
  t2311 = t1276*t2142;
  t2312 = t1352*t2197;
  t2314 = t2307 + t2311 + t2312;
  t1468 = t1214*t1205;
  t1476 = t1061*t1415;
  t1478 = t1468 + t1476;
  t1213 = t1061*t1205;
  t1432 = -1.*t1214*t1415;
  t1436 = t1213 + t1432;
  t2021 = t1061*t1904;
  t2039 = t1214*t1945;
  t2069 = t2021 + t2039;
  t1930 = -1.*t1214*t1904;
  t1972 = t1061*t1945;
  t1987 = t1930 + t1972;
  t2340 = t1214*t2280;
  t2341 = t1061*t2314;
  t2344 = t2340 + t2341;
  t2284 = t1061*t2280;
  t2315 = -1.*t1214*t2314;
  t2328 = t2284 + t2315;
  t2374 = -1.*t1436*t1525;
  t2416 = -1.*t1987*t1525;
  t2426 = -1.*t2328*t1525;
  t2545 = 2.8e-11*t279;
  t2576 = -6.5e-11*t279*t573;
  t2578 = 7.e-6*t257;
  t2579 = t2578 + t1342;
  t2581 = t2579*t778;
  t2584 = -4.e-6*t257;
  t2598 = t2584 + t290;
  t2600 = t2598*t974;
  t2606 = t2576 + t2581 + t2600;
  t2615 = 4.e-6*t257;
  t2619 = t2615 + t290;
  t2620 = t2619*t573;
  t2623 = t257 + t2545;
  t2631 = t2623*t778;
  t2633 = -1.000000000016*t279*t974;
  t2647 = t2620 + t2631 + t2633;
  t2546 = t628 + t2545;
  t2530 = -7.e-6*t257;
  t2532 = t2530 + t1342;
  t2758 = t2598*t1605;
  t2763 = -6.5e-11*t279*t1728;
  t2767 = t2579*t1768;
  t2777 = t2758 + t2763 + t2767;
  t2810 = -1.000000000016*t279*t1605;
  t2811 = t2619*t1728;
  t2814 = t2623*t1768;
  t2815 = t2810 + t2811 + t2814;
  t2905 = t2579*t2128;
  t2907 = -6.5e-11*t279*t2142;
  t2908 = t2598*t2197;
  t2921 = t2905 + t2907 + t2908;
  t2925 = t2623*t2128;
  t2927 = t2619*t2142;
  t2930 = -1.000000000016*t279*t2197;
  t2934 = t2925 + t2927 + t2930;
  t2997 = -7.e-6*t299;
  t2988 = -4.e-6*t299;
  t2989 = t2988 + t465;
  t2991 = -7.e-6*t2989;
  t3001 = t2997 + t962;
  t3003 = 4.e-6*t3001;
  t3011 = -6.5e-11*t420;
  t3013 = t2991 + t3003 + t3011;
  t3020 = 4.e-6*t299;
  t3021 = -2.8e-11*t420;
  t3024 = t300 + t3021;
  t3025 = 4.e-6*t3024;
  t3029 = 1.12e-16*t420;
  t3031 = t3020 + t3025 + t3029;
  t3038 = 2.8e-11*t420;
  t3039 = t300 + t3038;
  t3054 = -7.e-6*t3039;
  t3055 = 1.96e-16*t420;
  t3056 = t2997 + t3054 + t3055;
  t3063 = t1276*t3013;
  t3064 = t1352*t3031;
  t3066 = t1323*t3056;
  t3067 = t3063 + t3064 + t3066;
  t3077 = t1137*t3013;
  t3079 = t1182*t3031;
  t3080 = t1154*t3056;
  t3085 = t3077 + t3079 + t3080;
  t3131 = t2997 + t525;
  t3141 = 4.e-6*t3131;
  t3142 = -1.000000000049*t420;
  t3146 = t3141 + t3142;
  t3150 = 7.e-6*t299;
  t3152 = -4.00000000026e-6*t420;
  t3153 = t3150 + t3152;
  t3156 = t3020 + t465;
  t3165 = 4.e-6*t3156;
  t3167 = t299 + t3165 + t3038;
  t3190 = t1154*t3146;
  t3191 = t1137*t3153;
  t3198 = t1182*t3167;
  t3201 = t3190 + t3191 + t3198;
  t3207 = t1323*t3146;
  t3246 = t1276*t3153;
  t3250 = t1352*t3167;
  t3280 = t3207 + t3246 + t3250;
  t3507 = -7.e-6*t3131;
  t3508 = t299 + t3507 + t3021;
  t3513 = 7.000000000455e-6*t420;
  t3517 = t3020 + t3513;
  t3542 = -7.e-6*t3156;
  t3543 = 1.000000000016*t420;
  t3545 = t3542 + t3543;
  t3561 = t1154*t3508;
  t3568 = t1137*t3517;
  t3569 = t1182*t3545;
  t3571 = t3561 + t3568 + t3569;
  t3600 = t1323*t3508;
  t3601 = t1276*t3517;
  t3603 = t1352*t3545;
  t3605 = t3600 + t3601 + t3603;
  t1641 = t841*t1605;
  t1733 = t295*t1728;
  t1788 = t651*t1768;
  t1792 = t1641 + t1733 + t1788;
  t1988 = t1037*t1987;
  t2071 = -1.*t2069*t1525;
  t2072 = t1988 + t2071;
  t2129 = t651*t2128;
  t2151 = t295*t2142;
  t2198 = t841*t2197;
  t2201 = t2129 + t2151 + t2198;
  t2335 = t1037*t2328;
  t2345 = -1.*t2344*t1525;
  t2349 = t2335 + t2345;
  t577 = t295*t573;
  t809 = t651*t778;
  t981 = t841*t974;
  t1000 = t577 + t809 + t981;
  t1450 = t1037*t1436;
  t1551 = -1.*t1478*t1525;
  t1553 = t1450 + t1551;
  t1008 = t215*t1000;
  t1569 = -1.*t1014*t1553;
  t1571 = t1008 + t1569;
  t3743 = Sin(var1[3]);
  t3765 = Cos(var1[3]);
  t1795 = t215*t1792;
  t2083 = -1.*t1014*t2072;
  t2092 = t1795 + t2083;
  t2210 = t215*t2201;
  t2351 = -1.*t1014*t2349;
  t2360 = t2210 + t2351;
  t2373 = -1.*t1037*t1478;
  t2394 = t2373 + t2374;
  t2411 = -1.*t1037*t2069;
  t2419 = t2411 + t2416;
  t2423 = -1.*t1037*t2344;
  t2432 = t2423 + t2426;
  t2455 = -1.*t1214*t1205;
  t2462 = -1.*t1061*t1415;
  t2464 = t2455 + t2462;
  t2465 = t1037*t2464;
  t2468 = t2465 + t2374;
  t2478 = -1.*t1061*t1904;
  t2482 = -1.*t1214*t1945;
  t2486 = t2478 + t2482;
  t2488 = t1037*t2486;
  t2499 = t2488 + t2416;
  t2514 = -1.*t1214*t2280;
  t2516 = -1.*t1061*t2314;
  t2518 = t2514 + t2516;
  t2519 = t1037*t2518;
  t2520 = t2519 + t2426;
  t2661 = t1061*t2606;
  t2670 = t1214*t2647;
  t2683 = t2661 + t2670;
  t2609 = -1.*t1214*t2606;
  t2649 = t1061*t2647;
  t2650 = t2609 + t2649;
  t2536 = t2532*t573;
  t2541 = -1.000000000049*t279*t778;
  t2548 = t2546*t974;
  t2568 = t2536 + t2541 + t2548;
  t2657 = t1037*t2650;
  t2689 = -1.*t2683*t1525;
  t2691 = t2657 + t2689;
  t2845 = t1061*t2777;
  t2849 = t1214*t2815;
  t2869 = t2845 + t2849;
  t2787 = -1.*t1214*t2777;
  t2818 = t1061*t2815;
  t2840 = t2787 + t2818;
  t2717 = t2546*t1605;
  t2718 = t2532*t1728;
  t2723 = -1.000000000049*t279*t1768;
  t2747 = t2717 + t2718 + t2723;
  t2844 = t1037*t2840;
  t2875 = -1.*t2869*t1525;
  t2876 = t2844 + t2875;
  t2965 = t1061*t2921;
  t2975 = t1214*t2934;
  t2978 = t2965 + t2975;
  t2922 = -1.*t1214*t2921;
  t2940 = t1061*t2934;
  t2941 = t2922 + t2940;
  t2885 = -1.000000000049*t279*t2128;
  t2893 = t2532*t2142;
  t2894 = t2546*t2197;
  t2901 = t2885 + t2893 + t2894;
  t2950 = t1037*t2941;
  t2979 = -1.*t2978*t1525;
  t2981 = t2950 + t2979;
  t3099 = t1061*t3067;
  t3106 = t1214*t3085;
  t3112 = t3099 + t3106;
  t3073 = -1.*t1214*t3067;
  t3087 = t1061*t3085;
  t3089 = t3073 + t3087;
  t3018 = t295*t3013;
  t3037 = t841*t3031;
  t3057 = t651*t3056;
  t3061 = t3018 + t3037 + t3057;
  t3093 = t1037*t3089;
  t3113 = -1.*t3112*t1525;
  t3116 = t3093 + t3113;
  t3376 = t1214*t3201;
  t3424 = t1061*t3280;
  t3445 = t3376 + t3424;
  t3206 = t1061*t3201;
  t3294 = -1.*t1214*t3280;
  t3324 = t3206 + t3294;
  t3147 = t651*t3146;
  t3154 = t295*t3153;
  t3187 = t841*t3167;
  t3188 = t3147 + t3154 + t3187;
  t3327 = t1037*t3324;
  t3455 = -1.*t3445*t1525;
  t3465 = t3327 + t3455;
  t3638 = t1214*t3571;
  t3643 = t1061*t3605;
  t3650 = t3638 + t3643;
  t3597 = t1061*t3571;
  t3607 = -1.*t1214*t3605;
  t3610 = t3597 + t3607;
  t3510 = t651*t3508;
  t3531 = t295*t3517;
  t3551 = t841*t3545;
  t3554 = t3510 + t3531 + t3551;
  t3637 = t1037*t3610;
  t3654 = -1.*t3650*t1525;
  t3662 = t3637 + t3654;
  t3773 = t1037*t2069;
  t3776 = t1987*t1525;
  t3791 = t3773 + t3776;
  t3815 = t1037*t2344;
  t3816 = t2328*t1525;
  t3822 = t3815 + t3816;
  t3760 = t1037*t1478;
  t3761 = t1436*t1525;
  t3762 = t3760 + t3761;
  t4273 = t3765*t3762;
  t4275 = -1.*t3743*t1571;
  t4276 = t4273 + t4275;
  t4226 = t3765*t3791;
  t4247 = -1.*t3743*t2092;
  t4259 = t4226 + t4247;
  t4263 = t3765*t3822;
  t4264 = -1.*t3743*t2360;
  t4268 = t4263 + t4264;
  t3841 = -1.*t1000*t1014;
  t3849 = -1.*t215*t1553;
  t3850 = t3841 + t3849;
  t3852 = -1.*t1792*t1014;
  t3854 = -1.*t215*t2072;
  t3872 = t3852 + t3854;
  t3886 = -1.*t2201*t1014;
  t3894 = -1.*t215*t2349;
  t3895 = t3886 + t3894;
  t3928 = t2464*t1525;
  t3929 = t1450 + t3928;
  t3947 = t2486*t1525;
  t3950 = t1988 + t3947;
  t3962 = t2518*t1525;
  t3971 = t2335 + t3962;
  t3987 = t1037*t2683;
  t3989 = t2650*t1525;
  t3992 = t3987 + t3989;
  t4003 = t215*t2568;
  t4026 = -1.*t1014*t2691;
  t4042 = t4003 + t4026;
  t4061 = t1037*t2869;
  t4062 = t2840*t1525;
  t4077 = t4061 + t4062;
  t4083 = t215*t2747;
  t4085 = -1.*t1014*t2876;
  t4086 = t4083 + t4085;
  t4101 = t1037*t2978;
  t4104 = t2941*t1525;
  t4109 = t4101 + t4104;
  t4114 = t215*t2901;
  t4120 = -1.*t1014*t2981;
  t4122 = t4114 + t4120;
  t4132 = t1037*t3112;
  t4133 = t3089*t1525;
  t4137 = t4132 + t4133;
  t4154 = t215*t3061;
  t4155 = -1.*t1014*t3116;
  t4169 = t4154 + t4155;
  t4177 = t1037*t3445;
  t4180 = t3324*t1525;
  t4181 = t4177 + t4180;
  t4192 = t215*t3188;
  t4194 = -1.*t1014*t3465;
  t4195 = t4192 + t4194;
  t4205 = t1037*t3650;
  t4207 = t3610*t1525;
  t4210 = t4205 + t4207;
  t4214 = t215*t3554;
  t4216 = -1.*t1014*t3662;
  t4217 = t4214 + t4216;
  t3706 = t1792*t1014;
  t3713 = t215*t2072;
  t3718 = t3706 + t3713;
  t4738 = -2.8e-11*t636;
  t4743 = -2.598649999999999e-7*var1[14];
  t4751 = 0.148705*t1650;
  t4755 = -2.3905277499999995e-16*t320;
  t4756 = -0.038922999986*t482;
  t4757 = -0.80315*t559;
  t4759 = t1692 + t962;
  t4763 = -0.503149000008*t4759;
  t4768 = t748 + t2137;
  t4773 = -0.038924*t4768;
  t4777 = t4743 + t4751 + t4755 + t4756 + t4757 + t4763 + t4773;
  t4783 = 1.0394599999999997e-12*var1[14];
  t4791 = 1. + t2116;
  t4793 = -0.038924*t4791;
  t4794 = -0.03892299998790722*t320;
  t4795 = -0.80315*t766;
  t4797 = 0.148705*t1736;
  t4798 = t370 + t2137;
  t4799 = -3.6777349999999994e-6*t4798;
  t4800 = t902 + t420;
  t4803 = -0.503149000008*t4800;
  t4804 = t4783 + t4793 + t4794 + t4795 + t4797 + t4799 + t4803;
  t4821 = 1.8190549999999993e-12*var1[14];
  t4824 = -0.80315*t885;
  t4825 = -0.5031490000160505*t320;
  t4826 = -0.038922999986*t927;
  t4833 = t1692 + t525;
  t4841 = -3.6777349999999994e-6*t4833;
  t4843 = 0.148705*t1593;
  t4846 = t758 + t420;
  t4847 = -0.038924*t4846;
  t4848 = t4821 + t4824 + t4825 + t4826 + t4841 + t4843 + t4847;
  t4733 = 4.e-6*t636;
  t4862 = 7.e-6*t636;
  t4853 = -1.*t1061;
  t4854 = 1. + t4853;
  t4857 = 0.15121*t1214;
  t4858 = 1.0248489999999998e-12*var1[13];
  t4859 = -0.28120900000849935*t636;
  t4860 = t4738 + t832;
  t4861 = -0.038748999993*t4860;
  t4863 = t4862 + t1342;
  t4864 = -2.123459e-6*t4863;
  t4866 = t1137*t4777;
  t4867 = t1154*t4804;
  t4868 = t1182*t4848;
  t4869 = t4858 + t4859 + t4861 + t4864 + t4866 + t4867 + t4868;
  t4872 = -1.4640699999999997e-7*var1[13];
  t4877 = -1.38024835e-16*t636;
  t4878 = t4733 + t290;
  t4879 = -0.038748999993*t4878;
  t4880 = t4862 + t1109;
  t4890 = -0.281209000004*t4880;
  t4891 = t1276*t4777;
  t4892 = t1323*t4804;
  t4893 = t1352*t4848;
  t4894 = t4872 + t4877 + t4879 + t4890 + t4891 + t4892 + t4893;
  t4711 = 5.856279999999999e-13*var1[13];
  t4732 = -0.0387489999948987*t636;
  t4736 = t4733 + t1299;
  t4737 = -2.123459e-6*t4736;
  t4739 = t4738 + t279;
  t4742 = -0.281209000004*t4739;
  t4779 = t295*t4777;
  t4820 = t651*t4804;
  t4850 = t841*t4848;
  t4851 = t4711 + t4732 + t4737 + t4742 + t4779 + t4820 + t4850;
  t4856 = -0.15121*t4854;
  t4870 = t1061*t4869;
  t4895 = -1.*t1214*t4894;
  t4896 = t4856 + t4857 + t4870 + t4895;
  t4899 = t1037*t4896;
  t4905 = 0.15121*t4854;
  t4906 = t1214*t4869;
  t4908 = t1061*t4894;
  t4909 = t4905 + t4857 + t4906 + t4908;
  t4910 = -1.*t4909*t1525;
  t4913 = t4899 + t4910;
  t3733 = t1000*t1014;
  t3735 = t215*t1553;
  t3737 = t3733 + t3735;
  t4937 = t215*t4851;
  t4944 = -1.*t1014*t4913;
  t4947 = t4937 + t4944;
  t4933 = t4851*t1014;
  t4934 = t215*t4913;
  t4935 = t4933 + t4934;
  t4852 = -1.*t4851*t1014;
  t4917 = -1.*t215*t4913;
  t4922 = t4852 + t4917;
  t4954 = t1037*t4909;
  t4956 = t4896*t1525;
  t4959 = t4954 + t4956;
  t3720 = t2201*t1014;
  t3730 = t215*t2349;
  t3732 = t3720 + t3730;
  t5190 = -1.*t1037*t4909;
  t5191 = -1.*t4896*t1525;
  t5192 = t5190 + t5191;
  t4960 = -1.*t3762*t4959;
  t4964 = -1.*t3737*t4935;
  t4965 = -1.*t1571*t4947;
  t4968 = t4960 + t4964 + t4965;
  t4991 = t3791*t4959;
  t4992 = t3718*t4935;
  t4993 = t2092*t4947;
  t5000 = t4991 + t4992 + t4993;
  t5012 = t3762*t4959;
  t5019 = t3737*t4935;
  t5020 = t1571*t4947;
  t5024 = t5012 + t5019 + t5020;
  t5050 = -1.*t3822*t4959;
  t5052 = -1.*t3732*t4935;
  t5055 = -1.*t2360*t4947;
  t5056 = t5050 + t5052 + t5055;
  t5099 = -1.*t3791*t4959;
  t5100 = -1.*t3718*t4935;
  t5113 = -1.*t2092*t4947;
  t5114 = t5099 + t5100 + t5113;
  t5158 = t3822*t4959;
  t5163 = t3732*t4935;
  t5168 = t2360*t4947;
  t5175 = t5158 + t5163 + t5168;
  t5447 = 0.15121*t1061;
  t5454 = -0.15121*t1214;
  t5458 = -1.*t1214*t4869;
  t5459 = -1.*t1061*t4894;
  t5464 = t5447 + t5454 + t5458 + t5459;
  t5449 = t5447 + t4857 + t4870 + t4895;
  t5471 = t1037*t5464;
  t5472 = -1.*t5449*t1525;
  t5473 = t5471 + t5472;
  t5451 = t1037*t5449;
  t5465 = t5464*t1525;
  t5468 = t5451 + t5465;
  t2757 = t2747*t1014;
  t2878 = t215*t2876;
  t2880 = t2757 + t2878;
  t2570 = t2568*t1014;
  t2695 = t215*t2691;
  t2703 = t2570 + t2695;
  t5649 = t2530 + t1109;
  t5661 = -0.038748999993*t5649;
  t5665 = t2615 + t1299;
  t5670 = -0.281209000004*t5665;
  t5671 = -1.38024835e-16*t279;
  t5676 = -6.5e-11*t279*t4777;
  t5679 = t2579*t4804;
  t5685 = t2598*t4848;
  t5686 = -1.4640699999999997e-7 + t5661 + t5670 + t5671 + t5676 + t5679 + t5685;
  t5696 = -2.8e-11*t279;
  t5697 = t628 + t5696;
  t5698 = -0.038748999993*t5697;
  t5699 = t2584 + t1299;
  t5701 = -2.123459e-6*t5699;
  t5702 = -0.28120900000849935*t279;
  t5705 = t2619*t4777;
  t5707 = t2623*t4804;
  t5711 = -1.000000000016*t279*t4848;
  t5716 = 1.0248489999999998e-12 + t5698 + t5701 + t5702 + t5705 + t5707 + t5711;
  t5735 = -1.*t1214*t5686;
  t5736 = t1061*t5716;
  t5740 = t5735 + t5736;
  t5692 = t1061*t5686;
  t5720 = t1214*t5716;
  t5722 = t5692 + t5720;
  t5750 = t257 + t5696;
  t5751 = -0.281209000004*t5750;
  t5752 = t2578 + t1109;
  t5753 = -2.123459e-6*t5752;
  t5754 = -0.0387489999948987*t279;
  t5755 = t2532*t4777;
  t5758 = -1.000000000049*t279*t4804;
  t5759 = t2546*t4848;
  t5760 = 5.856279999999999e-13 + t5751 + t5753 + t5754 + t5755 + t5758 + t5759;
  t5762 = t1037*t5740;
  t5763 = -1.*t5722*t1525;
  t5764 = t5762 + t5763;
  t5729 = t1037*t5722;
  t5743 = t5740*t1525;
  t5746 = t5729 + t5743;
  t5761 = t5760*t1014;
  t5765 = t215*t5764;
  t5766 = t5761 + t5765;
  t5768 = t215*t5760;
  t5769 = -1.*t1014*t5764;
  t5770 = t5768 + t5769;
  t2903 = t2901*t1014;
  t2982 = t215*t2981;
  t2983 = t2903 + t2982;
  t5843 = -0.80315*t2989;
  t5844 = t3150 + t525;
  t5845 = -0.038924*t5844;
  t5850 = -0.038922999986*t3001;
  t5851 = t3020 + t2137;
  t5852 = -0.503149000008*t5851;
  t5853 = -9.666064052774999e-12*t420;
  t5865 = -2.598649999999999e-7 + t5843 + t5845 + t5850 + t5852 + t5853;
  t5874 = 0.148705*t3131;
  t5875 = t299 + t3021;
  t5877 = -0.503149000008*t5875;
  t5881 = -0.80315*t3039;
  t5886 = t3150 + t962;
  t5894 = -3.6777349999999994e-6*t5886;
  t5895 = 1.0000140000590574e-6*t420;
  t5899 = 1.0394599999999997e-12 + t5874 + t5877 + t5881 + t5894 + t5895;
  t5920 = 0.148705*t3156;
  t5921 = -0.038922999986*t3024;
  t5922 = t299 + t3038;
  t5923 = -0.038924*t5922;
  t5924 = t2988 + t2137;
  t5925 = -3.6777349999999994e-6*t5924;
  t5927 = 0.30000099999679997*t420;
  t5932 = 1.8190549999999993e-12 + t5920 + t5921 + t5923 + t5925 + t5927;
  t5872 = t1137*t5865;
  t5912 = t1154*t5899;
  t5940 = t1182*t5932;
  t5941 = t5872 + t5912 + t5940;
  t5943 = t1276*t5865;
  t5944 = t1323*t5899;
  t5946 = t1352*t5932;
  t5951 = t5943 + t5944 + t5946;
  t5965 = t1061*t5941;
  t5967 = -1.*t1214*t5951;
  t5970 = t5965 + t5967;
  t5942 = t1214*t5941;
  t5953 = t1061*t5951;
  t5958 = t5942 + t5953;
  t5978 = t295*t5865;
  t5994 = t651*t5899;
  t5995 = t841*t5932;
  t5996 = t5978 + t5994 + t5995;
  t6003 = t1037*t5970;
  t6007 = -1.*t5958*t1525;
  t6008 = t6003 + t6007;
  t3062 = t3061*t1014;
  t3117 = t215*t3116;
  t3121 = t3062 + t3117;
  t5964 = t1037*t5958;
  t5971 = t5970*t1525;
  t5974 = t5964 + t5971;
  t6001 = t5996*t1014;
  t6009 = t215*t6008;
  t6010 = t6001 + t6009;
  t6015 = t215*t5996;
  t6022 = -1.*t1014*t6008;
  t6027 = t6015 + t6022;
  t3189 = t3188*t1014;
  t3473 = t215*t3465;
  t3474 = t3189 + t3473;
  t3557 = t3554*t1014;
  t3675 = t215*t3662;
  t3679 = t3557 + t3675;
  t5188 = -1.*t3762*t4913;
  t5189 = -1.*t1553*t4959;
  t5220 = t3791*t4913;
  t5221 = t2072*t4959;
  t5303 = t3762*t4913;
  t5304 = t1553*t4959;
  t5336 = -1.*t3822*t4913;
  t5342 = -1.*t2349*t4959;
  t5383 = -1.*t3791*t4913;
  t5396 = -1.*t2072*t4959;
  t5417 = t3822*t4913;
  t5421 = t2349*t4959;
  t6206 = -1.*t1000*t4851;
  t6220 = -1.*t1553*t4913;
  t6221 = t6206 + t6220 + t4960;
  t6223 = t1792*t4851;
  t6225 = t2072*t4913;
  t6238 = t6223 + t6225 + t4991;
  t5469 = -1.*t3762*t5468;
  t5470 = -1.*t3929*t4959;
  t5485 = t3791*t5468;
  t5486 = t3950*t4959;
  t6262 = t1000*t4851;
  t6264 = t1553*t4913;
  t6265 = t6262 + t6264 + t5012;
  t6296 = -1.*t2201*t4851;
  t6297 = -1.*t2349*t4913;
  t6302 = t6296 + t6297 + t5050;
  t5504 = t3762*t5468;
  t5506 = t3929*t4959;
  t5539 = -1.*t3822*t5468;
  t5547 = -1.*t3971*t4959;
  t6311 = -1.*t1792*t4851;
  t6312 = -1.*t2072*t4913;
  t6313 = t6311 + t6312 + t5099;
  t6337 = t2201*t4851;
  t6338 = t2349*t4913;
  t6341 = t6337 + t6338 + t5158;
  t5572 = -1.*t3791*t5468;
  t5573 = -1.*t3950*t4959;
  t5607 = t3822*t5468;
  t5609 = t3971*t4959;
  t5646 = -1.*t3992*t4959;
  t5747 = -1.*t3762*t5746;
  t5774 = t4077*t4959;
  t5775 = t3791*t5746;
  t5787 = t3992*t4959;
  t5788 = t3762*t5746;
  t5795 = -1.*t4109*t4959;
  t5796 = -1.*t3822*t5746;
  t5810 = -1.*t4077*t4959;
  t5811 = -1.*t3791*t5746;
  t5821 = t4109*t4959;
  t5822 = t3822*t5746;
  t5975 = t3762*t5974;
  t5977 = t4137*t4959;
  t6039 = -1.*t5974*t3822;
  t6045 = -1.*t4181*t4959;
  t6071 = t5974*t3822;
  t6076 = t4181*t4959;
  t6102 = -1.*t5974*t3791;
  t6105 = -1.*t4210*t4959;
  t6132 = -1.*t3762*t5974;
  t6135 = -1.*t4137*t4959;
  t6151 = t5974*t3791;
  t6152 = t4210*t4959;
  t6426 = -1.*t2568*t4851;
  t6428 = -1.*t1000*t5760;
  t6437 = t2747*t4851;
  t6440 = t1792*t5760;
  t6456 = t2568*t4851;
  t6458 = t1000*t5760;
  t6464 = -1.*t2901*t4851;
  t6465 = -1.*t2201*t5760;
  t6474 = -1.*t2747*t4851;
  t6475 = -1.*t1792*t5760;
  t6481 = t2901*t4851;
  t6484 = t2201*t5760;
  t6505 = t1000*t5996;
  t6507 = t3061*t4851;
  t6523 = -1.*t5996*t2201;
  t6524 = -1.*t3188*t4851;
  t6778 = t1478*t4909;
  t6779 = t1436*t4896;
  t6781 = t6262 + t6778 + t6779;
  t6786 = -1.*t2344*t4909;
  t6790 = -1.*t2328*t4896;
  t6798 = t6296 + t6786 + t6790;
  t6541 = t5996*t2201;
  t6543 = t3188*t4851;
  t6834 = -1.*t2069*t4909;
  t6844 = -1.*t1987*t4896;
  t6846 = t6311 + t6834 + t6844;
  t6851 = t2344*t4909;
  t6853 = t2328*t4896;
  t6855 = t6337 + t6851 + t6853;
  t6574 = -1.*t5996*t1792;
  t6576 = -1.*t3554*t4851;
  t6600 = -1.*t1000*t5996;
  t6601 = -1.*t3061*t4851;
  t6746 = -1.*t1478*t4909;
  t6750 = -1.*t1436*t4896;
  t6751 = t6206 + t6746 + t6750;
  t6754 = t2069*t4909;
  t6755 = t1987*t4896;
  t6757 = t6223 + t6754 + t6755;
  t6611 = t5996*t1792;
  t6612 = t3554*t4851;
  t7033 = t1205*t4869;
  t7034 = t1415*t4894;
  t7035 = t7033 + t6262 + t7034;
  t7037 = -1.*t2280*t4869;
  t7038 = -1.*t2314*t4894;
  t7039 = t7037 + t6296 + t7038;
  t7075 = -1.*t1945*t4869;
  t7079 = -1.*t1904*t4894;
  t7080 = t7075 + t6311 + t7079;
  t7084 = t2280*t4869;
  t7085 = t2314*t4894;
  t7086 = t7084 + t6337 + t7085;
  t7003 = -1.*t1205*t4869;
  t7004 = -1.*t1415*t4894;
  t7007 = t7003 + t6206 + t7004;
  t7009 = t1945*t4869;
  t7011 = t1904*t4894;
  t7012 = t7009 + t6223 + t7011;
  t7241 = t4777*t3013;
  t7242 = t573*t5865;
  t7243 = t778*t5899;
  t7244 = t974*t5932;
  t7245 = t3056*t4804;
  t7246 = t3031*t4848;
  t7248 = t7241 + t7242 + t7243 + t7244 + t7245 + t7246;
  t7250 = -1.*t4777*t3153;
  t7251 = -1.*t2128*t5899;
  t7252 = -1.*t5865*t2142;
  t7253 = -1.*t5932*t2197;
  t7254 = -1.*t3146*t4804;
  t7255 = -1.*t3167*t4848;
  t7256 = t7250 + t7251 + t7252 + t7253 + t7254 + t7255;
  t7260 = t573*t4777;
  t7261 = t778*t4804;
  t7262 = t974*t4848;
  t7263 = t7260 + t7261 + t7262;
  t7265 = -1.*t4777*t2142;
  t7266 = -1.*t2128*t4804;
  t7267 = -1.*t2197*t4848;
  t7268 = t7265 + t7266 + t7267;
  t7301 = -1.*t4777*t1728;
  t7302 = -1.*t1768*t4804;
  t7303 = -1.*t1605*t4848;
  t7305 = t7301 + t7302 + t7303;
  t7307 = t4777*t3153;
  t7308 = t2128*t5899;
  t7309 = t5865*t2142;
  t7310 = t5932*t2197;
  t7311 = t3146*t4804;
  t7312 = t3167*t4848;
  t7313 = t7307 + t7308 + t7309 + t7310 + t7311 + t7312;
  t7315 = t4777*t2142;
  t7316 = t2128*t4804;
  t7317 = t2197*t4848;
  t7319 = t7315 + t7316 + t7317;
  t7321 = -1.*t5865*t1728;
  t7322 = -1.*t4777*t3517;
  t7323 = -1.*t1605*t5932;
  t7324 = -1.*t5899*t1768;
  t7325 = -1.*t3508*t4804;
  t7326 = -1.*t3545*t4848;
  t7327 = t7321 + t7322 + t7323 + t7324 + t7325 + t7326;
  t7363 = t4777*t1728;
  t7364 = t1768*t4804;
  t7365 = t1605*t4848;
  t7368 = t7363 + t7364 + t7365;
  t7371 = -1.*t4777*t3013;
  t7372 = -1.*t573*t5865;
  t7374 = -1.*t778*t5899;
  t7376 = -1.*t974*t5932;
  t7377 = -1.*t3056*t4804;
  t7378 = -1.*t3031*t4848;
  t7380 = t7371 + t7372 + t7374 + t7376 + t7377 + t7378;
  t7382 = -1.*t573*t4777;
  t7385 = -1.*t778*t4804;
  t7387 = -1.*t974*t4848;
  t7388 = t7382 + t7385 + t7387;
  t7393 = t5865*t1728;
  t7395 = t4777*t3517;
  t7397 = t1605*t5932;
  t7398 = t5899*t1768;
  t7402 = t3508*t4804;
  t7403 = t3545*t4848;
  t7404 = t7393 + t7395 + t7397 + t7398 + t7402 + t7403;
  t7453 = 6.5e-11*t320;
  p_output1[0]=t2092*var2[0] + t2360*var2[1] + t1571*var2[2];
  p_output1[1]=t215*t2419*var2[0] + t215*t2432*var2[1] + t215*t2394*var2[2];
  p_output1[2]=t215*t2499*var2[0] + t215*t2520*var2[1] + t215*t2468*var2[2];
  p_output1[3]=t2880*var2[0] + t2983*var2[1] + t2703*var2[2];
  p_output1[4]=t3679*var2[0] + t3474*var2[1] + t3121*var2[2];
  p_output1[5]=t3718;
  p_output1[6]=t3732;
  p_output1[7]=t3737;
  p_output1[8]=(-1.*t2092*t3765 - 1.*t3743*t3791)*var2[0] + (-1.*t2360*t3765 - 1.*t3743*t3822)*var2[1] + (-1.*t3743*t3762 - 1.*t1571*t3765)*var2[2];
  p_output1[9]=-1.*t3743*t3872*var2[0] - 1.*t3743*t3895*var2[1] - 1.*t3743*t3850*var2[2];
  p_output1[10]=(t1014*t2419*t3743 + t2072*t3765)*var2[0] + (t1014*t2432*t3743 + t2349*t3765)*var2[1] + (t1014*t2394*t3743 + t1553*t3765)*var2[2];
  p_output1[11]=(t1014*t2499*t3743 + t3765*t3950)*var2[0] + (t1014*t2520*t3743 + t3765*t3971)*var2[1] + (t1014*t2468*t3743 + t3765*t3929)*var2[2];
  p_output1[12]=(t3765*t4077 - 1.*t3743*t4086)*var2[0] + (t3765*t4109 - 1.*t3743*t4122)*var2[1] + (t3765*t3992 - 1.*t3743*t4042)*var2[2];
  p_output1[13]=(t3765*t4210 - 1.*t3743*t4217)*var2[0] + (t3765*t4181 - 1.*t3743*t4195)*var2[1] + (t3765*t4137 - 1.*t3743*t4169)*var2[2];
  p_output1[14]=t4259;
  p_output1[15]=t4268;
  p_output1[16]=t4276;
  p_output1[17]=t4259*var2[0] + t4268*var2[1] + t4276*var2[2];
  p_output1[18]=t3765*t3872*var2[0] + t3765*t3895*var2[1] + t3765*t3850*var2[2];
  p_output1[19]=(t2072*t3743 - 1.*t1014*t2419*t3765)*var2[0] + (t2349*t3743 - 1.*t1014*t2432*t3765)*var2[1] + (t1553*t3743 - 1.*t1014*t2394*t3765)*var2[2];
  p_output1[20]=(-1.*t1014*t2499*t3765 + t3743*t3950)*var2[0] + (-1.*t1014*t2520*t3765 + t3743*t3971)*var2[1] + (-1.*t1014*t2468*t3765 + t3743*t3929)*var2[2];
  p_output1[21]=(t3743*t4077 + t3765*t4086)*var2[0] + (t3743*t4109 + t3765*t4122)*var2[1] + (t3743*t3992 + t3765*t4042)*var2[2];
  p_output1[22]=(t3743*t4210 + t3765*t4217)*var2[0] + (t3743*t4181 + t3765*t4195)*var2[1] + (t3743*t4137 + t3765*t4169)*var2[2];
  p_output1[23]=t2092*t3765 + t3743*t3791;
  p_output1[24]=t2360*t3765 + t3743*t3822;
  p_output1[25]=t3743*t3762 + t1571*t3765;
  p_output1[26]=(t3732*(t1571*t4922 + t1571*t4935 + t3737*t4947 + t3850*t4947) + t3737*(-1.*t2360*t4922 - 1.*t2360*t4935 - 1.*t3732*t4947 - 1.*t3895*t4947) + t2360*t5024 + t1571*t5056)*var2[0] + (t3718*(-1.*t1571*t4922 - 1.*t1571*t4935 - 1.*t3737*t4947 - 1.*t3850*t4947) + t3737*(t2092*t4922 + t2092*t4935 + t3718*t4947 + t3872*t4947) + t2092*t4968 + t1571*t5000)*var2[1] + (t3732*(-1.*t2092*t4922 - 1.*t2092*t4935 - 1.*t3718*t4947 - 1.*t3872*t4947) + t3718*(t2360*t4922 + t2360*t4935 + t3732*t4947 + t3895*t4947) + t2360*t5114 + t2092*t5175)*var2[2];
  p_output1[27]=(t215*t2432*t5024 + t215*t2394*t5056 + t3732*(t215*t2394*t4935 - 1.*t1014*t2394*t4947 - 1.*t1014*t1571*t5192 + t215*t3737*t5192 + t5303 + t5304) + t3737*(-1.*t215*t2432*t4935 + t1014*t2432*t4947 + t1014*t2360*t5192 - 1.*t215*t3732*t5192 + t5336 + t5342))*var2[0] + (t215*t2419*t4968 + t215*t2394*t5000 + t3718*(-1.*t215*t2394*t4935 + t1014*t2394*t4947 + t5188 + t5189 + t1014*t1571*t5192 - 1.*t215*t3737*t5192) + t3737*(t215*t2419*t4935 - 1.*t1014*t2419*t4947 - 1.*t1014*t2092*t5192 + t215*t3718*t5192 + t5220 + t5221))*var2[1] + (t215*t2432*t5114 + t215*t2419*t5175 + t3732*(-1.*t215*t2419*t4935 + t1014*t2419*t4947 + t1014*t2092*t5192 - 1.*t215*t3718*t5192 + t5383 + t5396) + t3718*(t215*t2432*t4935 - 1.*t1014*t2432*t4947 - 1.*t1014*t2360*t5192 + t215*t3732*t5192 + t5417 + t5421))*var2[2];
  p_output1[28]=(t215*t2520*t5024 + t215*t2468*t5056 + t3732*(t215*t2468*t4935 - 1.*t1014*t2468*t4947 - 1.*t1014*t1571*t5473 + t215*t3737*t5473 + t5504 + t5506) + t3737*(-1.*t215*t2520*t4935 + t1014*t2520*t4947 + t1014*t2360*t5473 - 1.*t215*t3732*t5473 + t5539 + t5547))*var2[0] + (t215*t2499*t4968 + t215*t2468*t5000 + t3718*(-1.*t215*t2468*t4935 + t1014*t2468*t4947 + t5469 + t5470 + t1014*t1571*t5473 - 1.*t215*t3737*t5473) + t3737*(t215*t2499*t4935 - 1.*t1014*t2499*t4947 - 1.*t1014*t2092*t5473 + t215*t3718*t5473 + t5485 + t5486))*var2[1] + (t215*t2520*t5114 + t215*t2499*t5175 + t3732*(-1.*t215*t2499*t4935 + t1014*t2499*t4947 + t1014*t2092*t5473 - 1.*t215*t3718*t5473 + t5572 + t5573) + t3718*(t215*t2520*t4935 - 1.*t1014*t2520*t4947 - 1.*t1014*t2360*t5473 + t215*t3732*t5473 + t5607 + t5609))*var2[2];
  p_output1[29]=(t2983*t5024 + t2703*t5056 + t3732*(t2703*t4935 + t4042*t4947 + t3737*t5766 + t1571*t5770 + t5787 + t5788) + t3737*(-1.*t2983*t4935 - 1.*t4122*t4947 - 1.*t3732*t5766 - 1.*t2360*t5770 + t5795 + t5796))*var2[0] + (t2880*t4968 + t2703*t5000 + t3718*(-1.*t2703*t4935 - 1.*t4042*t4947 + t5646 + t5747 - 1.*t3737*t5766 - 1.*t1571*t5770) + t3737*(t2880*t4935 + t4086*t4947 + t3718*t5766 + t2092*t5770 + t5774 + t5775))*var2[1] + (t2983*t5114 + t2880*t5175 + t3732*(-1.*t2880*t4935 - 1.*t4086*t4947 - 1.*t3718*t5766 - 1.*t2092*t5770 + t5810 + t5811) + t3718*(t2983*t4935 + t4122*t4947 + t3732*t5766 + t2360*t5770 + t5821 + t5822))*var2[2];
  p_output1[30]=(t3474*t5024 + t3121*t5056 + t3732*(t3121*t4935 + t4169*t4947 + t5975 + t5977 + t3737*t6010 + t1571*t6027) + t3737*(-1.*t3474*t4935 - 1.*t4195*t4947 - 1.*t3732*t6010 - 1.*t2360*t6027 + t6039 + t6045))*var2[0] + (t3679*t4968 + t3121*t5000 + t3718*(-1.*t3121*t4935 - 1.*t4169*t4947 - 1.*t3737*t6010 - 1.*t1571*t6027 + t6132 + t6135) + t3737*(t3679*t4935 + t4217*t4947 + t3718*t6010 + t2092*t6027 + t6151 + t6152))*var2[1] + (t3474*t5114 + t3679*t5175 + t3718*(t3474*t4935 + t4195*t4947 + t3732*t6010 + t2360*t6027 + t6071 + t6076) + t3732*(-1.*t3679*t4935 - 1.*t4217*t4947 - 1.*t3718*t6010 - 1.*t2092*t6027 + t6102 + t6105))*var2[2];
  p_output1[31]=t3732*t5024 + t3737*t5056;
  p_output1[32]=t3718*t4968 + t3737*t5000;
  p_output1[33]=t3732*t5114 + t3718*t5175;
  p_output1[34]=(t3822*(t2394*t4913 + t1553*t5192 + t5303 + t5304) + t3762*(-1.*t2432*t4913 - 1.*t2349*t5192 + t5336 + t5342) + t2349*t6265 + t1553*t6302)*var2[0] + (t3791*(-1.*t2394*t4913 + t5188 + t5189 - 1.*t1553*t5192) + t3762*(t2419*t4913 + t2072*t5192 + t5220 + t5221) + t2072*t6221 + t1553*t6238)*var2[1] + (t3822*(-1.*t2419*t4913 - 1.*t2072*t5192 + t5383 + t5396) + t3791*(t2432*t4913 + t2349*t5192 + t5417 + t5421) + t2349*t6313 + t2072*t6341)*var2[2];
  p_output1[35]=(t3822*(t2468*t4913 + t1553*t5473 + t5504 + t5506) + t3762*(-1.*t2520*t4913 - 1.*t2349*t5473 + t5539 + t5547) + t3971*t6265 + t3929*t6302)*var2[0] + (t3791*(-1.*t2468*t4913 + t5469 + t5470 - 1.*t1553*t5473) + t3762*(t2499*t4913 + t2072*t5473 + t5485 + t5486) + t3950*t6221 + t3929*t6238)*var2[1] + (t3822*(-1.*t2499*t4913 - 1.*t2072*t5473 + t5572 + t5573) + t3791*(t2520*t4913 + t2349*t5473 + t5607 + t5609) + t3971*t6313 + t3950*t6341)*var2[2];
  p_output1[36]=(t4109*t6265 + t3992*t6302 + t3822*(t2691*t4913 + t1553*t5764 + t5787 + t5788 + t6456 + t6458) + t3762*(-1.*t2981*t4913 - 1.*t2349*t5764 + t5795 + t5796 + t6464 + t6465))*var2[0] + (t4077*t6221 + t3992*t6238 + t3791*(-1.*t2691*t4913 + t5646 + t5747 - 1.*t1553*t5764 + t6426 + t6428) + t3762*(t2876*t4913 + t2072*t5764 + t5774 + t5775 + t6437 + t6440))*var2[1] + (t4109*t6313 + t4077*t6341 + t3822*(-1.*t2876*t4913 - 1.*t2072*t5764 + t5810 + t5811 + t6474 + t6475) + t3791*(t2981*t4913 + t2349*t5764 + t5821 + t5822 + t6481 + t6484))*var2[2];
  p_output1[37]=(t4181*t6265 + t4137*t6302 + t3822*(t3116*t4913 + t5975 + t5977 + t1553*t6008 + t6505 + t6507) + t3762*(-1.*t3465*t4913 - 1.*t2349*t6008 + t6039 + t6045 + t6523 + t6524))*var2[0] + (t4210*t6221 + t4137*t6238 + t3791*(-1.*t3116*t4913 - 1.*t1553*t6008 + t6132 + t6135 + t6600 + t6601) + t3762*(t3662*t4913 + t2072*t6008 + t6151 + t6152 + t6611 + t6612))*var2[1] + (t4181*t6313 + t4210*t6341 + t3791*(t3465*t4913 + t2349*t6008 + t6071 + t6076 + t6541 + t6543) + t3822*(-1.*t3662*t4913 - 1.*t2072*t6008 + t6102 + t6105 + t6574 + t6576))*var2[2];
  p_output1[38]=t3822*t6265 + t3762*t6302;
  p_output1[39]=t3791*t6221 + t3762*t6238;
  p_output1[40]=t3822*t6313 + t3791*t6341;
  p_output1[41]=(t2201*(t2464*t4896 + t1436*t4909 + t1478*t5449 + t1436*t5464) + t1000*(-1.*t2518*t4896 - 1.*t2328*t4909 - 1.*t2344*t5449 - 1.*t2328*t5464))*var2[0] + (t1792*(-1.*t2464*t4896 - 1.*t1436*t4909 - 1.*t1478*t5449 - 1.*t1436*t5464) + t1000*(t2486*t4896 + t1987*t4909 + t2069*t5449 + t1987*t5464))*var2[1] + (t2201*(-1.*t2486*t4896 - 1.*t1987*t4909 - 1.*t2069*t5449 - 1.*t1987*t5464) + t1792*(t2518*t4896 + t2328*t4909 + t2344*t5449 + t2328*t5464))*var2[2];
  p_output1[42]=(t2201*(t2650*t4896 + t2683*t4909 + t1478*t5722 + t1436*t5740 + t6456 + t6458) + t1000*(-1.*t2941*t4896 - 1.*t2978*t4909 - 1.*t2344*t5722 - 1.*t2328*t5740 + t6464 + t6465) + t2901*t6781 + t2568*t6798)*var2[0] + (t1792*(-1.*t2650*t4896 - 1.*t2683*t4909 - 1.*t1478*t5722 - 1.*t1436*t5740 + t6426 + t6428) + t1000*(t2840*t4896 + t2869*t4909 + t2069*t5722 + t1987*t5740 + t6437 + t6440) + t2747*t6751 + t2568*t6757)*var2[1] + (t2201*(-1.*t2840*t4896 - 1.*t2869*t4909 - 1.*t2069*t5722 - 1.*t1987*t5740 + t6474 + t6475) + t1792*(t2941*t4896 + t2978*t4909 + t2344*t5722 + t2328*t5740 + t6481 + t6484) + t2901*t6846 + t2747*t6855)*var2[2];
  p_output1[43]=(t2201*(t3089*t4896 + t3112*t4909 + t1478*t5958 + t1436*t5970 + t6505 + t6507) + t1000*(-1.*t3324*t4896 - 1.*t3445*t4909 - 1.*t2344*t5958 - 1.*t2328*t5970 + t6523 + t6524) + t3188*t6781 + t3061*t6798)*var2[0] + (t1792*(-1.*t3089*t4896 - 1.*t3112*t4909 - 1.*t1478*t5958 - 1.*t1436*t5970 + t6600 + t6601) + t1000*(t3610*t4896 + t3650*t4909 + t2069*t5958 + t1987*t5970 + t6611 + t6612) + t3554*t6751 + t3061*t6757)*var2[1] + (t1792*(t3324*t4896 + t3445*t4909 + t2344*t5958 + t2328*t5970 + t6541 + t6543) + t2201*(-1.*t3610*t4896 - 1.*t3650*t4909 - 1.*t2069*t5958 - 1.*t1987*t5970 + t6574 + t6576) + t3188*t6846 + t3554*t6855)*var2[2];
  p_output1[44]=t2201*t6781 + t1000*t6798;
  p_output1[45]=t1792*t6751 + t1000*t6757;
  p_output1[46]=t2201*t6846 + t1792*t6855;
  p_output1[47]=(0.15121*t2777 + 0.15121*t2815 + t2201*(t2647*t4869 + t2606*t4894 + t1415*t5686 + t1205*t5716 + t6456 + t6458) + t1000*(-1.*t2934*t4869 - 1.*t2921*t4894 - 1.*t2314*t5686 - 1.*t2280*t5716 + t6464 + t6465) + t2901*t7035 + t2568*t7039)*var2[0] + (0.15121*t2921 + 0.15121*t2934 + t1792*(-1.*t2647*t4869 - 1.*t2606*t4894 - 1.*t1415*t5686 - 1.*t1205*t5716 + t6426 + t6428) + t1000*(t2815*t4869 + t2777*t4894 + t1904*t5686 + t1945*t5716 + t6437 + t6440) + t2747*t7007 + t2568*t7012)*var2[1] + (0.15121*t2606 + 0.15121*t2647 + t2201*(-1.*t2815*t4869 - 1.*t2777*t4894 - 1.*t1904*t5686 - 1.*t1945*t5716 + t6474 + t6475) + t1792*(t2934*t4869 + t2921*t4894 + t2314*t5686 + t2280*t5716 + t6481 + t6484) + t2901*t7080 + t2747*t7086)*var2[2];
  p_output1[48]=(0.15121*t3571 + 0.15121*t3605 + t2201*(t3085*t4869 + t3067*t4894 + t1205*t5941 + t1415*t5951 + t6505 + t6507) + t1000*(-1.*t3201*t4869 - 1.*t3280*t4894 - 1.*t2280*t5941 - 1.*t2314*t5951 + t6523 + t6524) + t3188*t7035 + t3061*t7039)*var2[0] + (0.15121*t3201 + 0.15121*t3280 + t1792*(-1.*t3085*t4869 - 1.*t3067*t4894 - 1.*t1205*t5941 - 1.*t1415*t5951 + t6600 + t6601) + t1000*(t3571*t4869 + t3605*t4894 + t1945*t5941 + t1904*t5951 + t6611 + t6612) + t3554*t7007 + t3061*t7012)*var2[1] + (0.15121*t3067 + 0.15121*t3085 + t1792*(t3201*t4869 + t3280*t4894 + t2280*t5941 + t2314*t5951 + t6541 + t6543) + t2201*(-1.*t3571*t4869 - 1.*t3605*t4894 - 1.*t1945*t5941 - 1.*t1904*t5951 + t6574 + t6576) + t3188*t7080 + t3554*t7086)*var2[2];
  p_output1[49]=0.15121*t1904 + 0.15121*t1945 + t2201*t7035 + t1000*t7039;
  p_output1[50]=0.15121*t2280 + 0.15121*t2314 + t1792*t7007 + t1000*t7012;
  p_output1[51]=0.15121*t1205 + 0.15121*t1415 + t2201*t7080 + t1792*t7086;
  p_output1[52]=(-0.281209*t3508 + 0.038749*t3545 + 1.e-6*(t2988 - 7.000000000455e-6*t420) + t2142*t7248 + t573*t7256 + t3153*t7263 + t3013*t7268 + 4.e-6*(-1.*t2128*t7248 - 1.*t3146*t7263 - 1.*t3056*t7268 - 1.*t7256*t778) - 7.e-6*(t2197*t7248 + t3167*t7263 + t3031*t7268 + t7256*t974))*var2[0] + (-0.281209*t3146 + 0.038749*t3167 + 1.e-6*(t2997 + 4.00000000026e-6*t420) + t3013*t7368 + t1728*t7380 + t3517*t7388 + t573*t7404 + 4.e-6*(-1.*t3056*t7368 - 1.*t1768*t7380 - 1.*t3508*t7388 - 1.*t7404*t778) - 7.e-6*(t3031*t7368 + t1605*t7380 + t3545*t7388 + t7404*t974))*var2[1] + (0.038749*t3031 - 0.281209*t3056 + 1.e-6*(7.e-6*t2989 + 6.5e-11*t420 + 4.e-6*t5844) + t3153*t7305 + t1728*t7313 + t3517*t7319 + t2142*t7327 + 4.e-6*(-1.*t3146*t7305 - 1.*t1768*t7313 - 1.*t3508*t7319 - 1.*t2128*t7327) - 7.e-6*(t3167*t7305 + t1605*t7313 + t3545*t7319 + t2197*t7327))*var2[2];
  p_output1[53]=0.038749*t1605 - 0.281209*t1768 + 1.e-6*(7.e-6*t1650 + t504 + t525) + t2142*t7263 + t573*t7268 + 4.e-6*(-1.*t2128*t7263 - 1.*t7268*t778) - 7.e-6*(t2197*t7263 + t7268*t974);
  p_output1[54]=-0.281209*t2128 + 0.038749*t2197 + t573*t7368 + t1728*t7388 + 1.e-6*(t370 + t465 + 4.e-6*(-1. + t7453)) + 4.e-6*(-1.*t1768*t7388 - 1.*t7368*t778) - 7.e-6*(t1605*t7388 + t7368*t974);
  p_output1[55]=t2142*t7305 + t1728*t7319 - 7.e-6*(t2197*t7305 + t1605*t7319) + 4.e-6*(-1.*t2128*t7305 - 1.*t1768*t7319) + 1.e-6*(-1. + 4.e-6*t4768 + 7.e-6*t559 + t7453) - 0.281209*t778 + 0.038749*t974;
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_fRlFoot_vec_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
