/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:16:28 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  double t55;
  double t73;
  double t105;
  double t118;
  double t153;
  double t171;
  double t179;
  double t187;
  double t217;
  double t232;
  double t233;
  double t253;
  double t269;
  double t283;
  double t298;
  double t304;
  double t330;
  double t369;
  double t370;
  double t414;
  double t420;
  double t446;
  double t545;
  double t505;
  double t518;
  double t573;
  double t546;
  double t554;
  double t583;
  double t642;
  double t647;
  double t649;
  double t487;
  double t570;
  double t599;
  double t605;
  double t713;
  double t723;
  double t736;
  double t768;
  double t806;
  double t813;
  double t818;
  double t823;
  double t928;
  double t936;
  double t938;
  double t946;
  double t662;
  double t672;
  double t675;
  double t683;
  double t1042;
  double t1198;
  double t1214;
  double t1216;
  double t1222;
  double t1224;
  double t1228;
  double t1230;
  double t1197;
  double t1199;
  double t1207;
  double t1208;
  double t1248;
  double t1250;
  double t1256;
  double t1261;
  double t1277;
  double t1282;
  double t1521;
  double t1523;
  double t1526;
  double t1592;
  double t1601;
  double t1607;
  double t684;
  double t755;
  double t776;
  double t786;
  double t862;
  double t899;
  double t923;
  double t959;
  double t968;
  double t970;
  double t977;
  double t983;
  double t984;
  double t1733;
  double t1743;
  double t1753;
  double t1688;
  double t1691;
  double t1697;
  double t1759;
  double t1778;
  double t1795;
  double t1056;
  double t1091;
  double t1572;
  double t1623;
  double t1632;
  double t1640;
  double t1643;
  double t1657;
  double t1660;
  double t1674;
  double t1675;
  double t1686;
  double t1722;
  double t1755;
  double t1823;
  double t1829;
  double t1837;
  double t1847;
  double t1852;
  double t1856;
  double t1858;
  double t1862;
  double t1867;
  double t1870;
  double t1871;
  double t1877;
  double t1879;
  double t1881;
  double t1883;
  double t1892;
  double t1529;
  double t1543;
  double t1580;
  double t1963;
  double t1969;
  double t1971;
  double t1989;
  double t2003;
  double t2011;
  double t2039;
  double t2040;
  double t2061;
  double t2073;
  double t2114;
  double t2115;
  double t2120;
  double t2121;
  double t2077;
  double t2082;
  double t2094;
  double t2107;
  double t2238;
  double t2019;
  double t2022;
  double t2027;
  double t2035;
  double t2249;
  double t2252;
  double t2265;
  double t2269;
  double t2273;
  double t2277;
  double t2284;
  double t2286;
  double t2289;
  double t2300;
  double t2312;
  double t2314;
  double t2315;
  double t2318;
  double t2303;
  double t2304;
  double t2307;
  double t2309;
  double t2361;
  double t2357;
  double t2368;
  double t2370;
  double t2374;
  double t2378;
  double t2381;
  double t2389;
  double t2392;
  double t2394;
  double t2398;
  double t2400;
  double t2401;
  double t2421;
  double t2422;
  double t2435;
  double t2438;
  double t2472;
  double t2473;
  double t2474;
  double t2478;
  double t2448;
  double t2449;
  double t2453;
  double t2454;
  double t2544;
  double t2549;
  double t2550;
  double t2559;
  double t2561;
  double t2563;
  double t2570;
  double t2576;
  double t2578;
  double t2589;
  double t2591;
  double t2599;
  double t2624;
  double t2631;
  double t2633;
  double t2611;
  double t2614;
  double t2618;
  double t2637;
  double t2640;
  double t2647;
  double t1905;
  double t1907;
  double t1922;
  double t1928;
  double t2759;
  double t2766;
  double t2770;
  double t2774;
  double t2777;
  double t2787;
  double t2791;
  double t2804;
  double t2808;
  double t2809;
  double t2794;
  double t2796;
  double t2801;
  double t2812;
  double t2813;
  double t2815;
  double t510;
  double t523;
  double t524;
  double t615;
  double t632;
  double t634;
  double t650;
  double t653;
  double t658;
  double t2932;
  double t2934;
  double t2935;
  double t2949;
  double t2959;
  double t2961;
  double t2962;
  double t2965;
  double t2968;
  double t2969;
  double t2974;
  double t2939;
  double t2940;
  double t2942;
  double t2944;
  double t1209;
  double t1211;
  double t1212;
  double t1238;
  double t1240;
  double t1245;
  double t1286;
  double t1299;
  double t1329;
  double t3077;
  double t3078;
  double t3079;
  double t3083;
  double t3055;
  double t3063;
  double t3065;
  double t3066;
  double t3092;
  double t3095;
  double t3232;
  double t3233;
  double t3237;
  double t3245;
  double t3250;
  double t3259;
  double t3271;
  double t3290;
  double t3298;
  double t3303;
  double t3333;
  double t3336;
  double t3345;
  double t3349;
  double t3313;
  double t3314;
  double t3321;
  double t3325;
  double t3415;
  double t3416;
  double t3420;
  double t3423;
  double t3426;
  double t3446;
  double t3447;
  double t3448;
  double t3462;
  double t3463;
  double t3466;
  double t3452;
  double t3454;
  double t3455;
  double t3484;
  double t3486;
  double t3487;
  double t3545;
  double t3551;
  double t3552;
  double t3567;
  double t3568;
  double t3579;
  double t3582;
  double t3601;
  double t3608;
  double t3610;
  double t3593;
  double t3596;
  double t3597;
  double t3612;
  double t3615;
  double t3621;
  double t3711;
  double t3719;
  double t3723;
  double t3759;
  double t3770;
  double t3779;
  double t3785;
  double t3788;
  double t3789;
  double t3800;
  double t3730;
  double t3747;
  double t3750;
  double t3751;
  double t3881;
  double t3888;
  double t3897;
  double t3898;
  double t3864;
  double t3865;
  double t3870;
  double t3873;
  double t3913;
  double t3918;
  double t3126;
  double t3135;
  double t4086;
  double t4087;
  double t4104;
  double t4105;
  double t4106;
  double t4108;
  double t4153;
  double t4137;
  double t4088;
  double t4149;
  double t4158;
  double t4161;
  double t4107;
  double t4173;
  double t4175;
  double t4176;
  double t4188;
  double t4097;
  double t4223;
  double t4114;
  double t4109;
  double t4110;
  double t4129;
  double t4135;
  double t4167;
  double t4169;
  double t4171;
  double t4180;
  double t4181;
  double t4210;
  double t4213;
  double t4220;
  double t4229;
  double t4236;
  double t4237;
  double t4240;
  double t4245;
  double t4248;
  double t4253;
  double t4094;
  double t4290;
  double t4295;
  double t4298;
  double t4301;
  double t4303;
  double t4305;
  double t4309;
  double t4311;
  double t4312;
  double t4314;
  double t4195;
  double t4321;
  double t4187;
  double t4271;
  double t4326;
  double t4257;
  double t4341;
  double t4396;
  double t4470;
  double t4410;
  double t4417;
  double t4496;
  double t4498;
  double t4382;
  double t4482;
  double t4559;
  double t4584;
  double t4447;
  double t4527;
  double t4533;
  double t4539;
  double t4541;
  double t4544;
  double t4545;
  double t4578;
  double t4582;
  double t4583;
  double t4585;
  double t4592;
  double t4597;
  double t4642;
  double t4645;
  double t4660;
  double t4667;
  double t4676;
  double t4677;
  double t4693;
  double t4564;
  double t4732;
  double t4679;
  double t4821;
  double t4825;
  double t4826;
  double t4891;
  double t4467;
  double t4477;
  double t4485;
  double t4495;
  double t4510;
  double t4521;
  double t4524;
  double t4958;
  double t4972;
  double t4973;
  double t4555;
  double t4557;
  double t4566;
  double t4568;
  double t4569;
  double t4570;
  double t4575;
  double t4600;
  double t4602;
  double t4608;
  double t4624;
  double t4629;
  double t4633;
  double t4641;
  double t4684;
  double t4985;
  double t4998;
  double t5001;
  double t4702;
  double t5012;
  double t5014;
  double t5017;
  double t4712;
  double t4714;
  double t5022;
  double t5030;
  double t5031;
  double t4738;
  double t4756;
  double t4760;
  double t4768;
  double t4781;
  double t4782;
  double t4786;
  double t4799;
  double t4839;
  double t4867;
  double t4884;
  double t4894;
  double t4899;
  double t4900;
  double t4910;
  double t4922;
  double t4929;
  double t4933;
  double t4934;
  double t4935;
  double t4938;
  double t4946;
  double t4949;
  double t4950;
  double t4951;
  double t4955;
  double t4957;
  double t4977;
  double t5010;
  double t5021;
  double t5033;
  double t5037;
  double t5038;
  double t5039;
  double t5043;
  double t5044;
  double t5047;
  double t5048;
  double t5053;
  double t5062;
  double t5066;
  double t5072;
  double t5073;
  double t5077;
  double t5081;
  double t5083;
  double t4863;
  double t4830;
  double t4832;
  double t5172;
  double t5175;
  double t5178;
  double t5182;
  double t5195;
  double t5201;
  double t5212;
  double t5213;
  double t5218;
  double t5226;
  double t5233;
  double t5235;
  double t5246;
  double t5247;
  double t5255;
  double t5257;
  double t5260;
  double t5263;
  double t5124;
  double t5128;
  double t5129;
  double t5131;
  double t5134;
  double t5135;
  double t5138;
  double t5355;
  double t5358;
  double t5361;
  double t5364;
  double t5366;
  double t5374;
  double t5379;
  double t5380;
  double t5384;
  double t5389;
  double t5409;
  double t5418;
  double t5425;
  double t5428;
  double t5437;
  double t5439;
  double t5442;
  double t5443;
  double t5501;
  double t5502;
  double t5510;
  double t5520;
  double t5521;
  double t5525;
  double t5527;
  double t5529;
  double t5537;
  double t5541;
  double t5554;
  double t5557;
  double t5562;
  double t5566;
  double t5576;
  double t5578;
  double t5581;
  double t5583;
  double t5656;
  double t5657;
  double t5661;
  double t5665;
  double t5666;
  double t5671;
  double t5674;
  double t5692;
  double t5698;
  double t5705;
  double t5715;
  double t5724;
  double t5728;
  double t5739;
  double t5745;
  double t5092;
  double t5094;
  double t5105;
  double t5110;
  double t5804;
  double t5807;
  double t5812;
  double t5819;
  double t5824;
  double t5826;
  double t5827;
  double t5842;
  double t5843;
  double t5849;
  double t5852;
  double t5853;
  double t5854;
  double t4089;
  double t4091;
  double t4099;
  double t4100;
  double t4101;
  double t4103;
  double t4192;
  double t4194;
  double t4196;
  double t4198;
  double t4202;
  double t4207;
  double t5914;
  double t5918;
  double t5920;
  double t4258;
  double t4261;
  double t4274;
  double t4278;
  double t4283;
  double t4288;
  double t5912;
  double t5913;
  double t5925;
  double t5930;
  double t4324;
  double t5935;
  double t5936;
  double t5937;
  double t5938;
  double t4329;
  double t5950;
  double t5951;
  double t5952;
  double t5953;
  double t4336;
  double t4342;
  double t4352;
  double t4356;
  double t4384;
  double t4387;
  double t4398;
  double t4401;
  double t4405;
  double t4407;
  double t4411;
  double t4413;
  double t4419;
  double t4433;
  double t4434;
  double t4435;
  double t4444;
  double t4446;
  double t4450;
  double t4459;
  double t4461;
  double t4464;
  double t6041;
  double t6042;
  double t6044;
  double t6045;
  double t6048;
  double t6053;
  double t6056;
  double t6060;
  double t6073;
  double t6074;
  double t6076;
  double t6084;
  double t6201;
  double t6203;
  double t6209;
  double t6219;
  double t6221;
  double t6226;
  double t6233;
  double t6238;
  double t6242;
  double t6246;
  double t6250;
  double t6252;
  double t6254;
  double t6255;
  double t6259;
  double t6260;
  double t6261;
  double t6262;
  double t6348;
  double t6352;
  double t6358;
  double t6363;
  double t6367;
  double t6380;
  double t6385;
  double t6386;
  double t6393;
  double t6394;
  double t6396;
  double t6405;
  double t6406;
  double t6411;
  double t6452;
  double t6455;
  double t6458;
  double t6460;
  double t6463;
  double t6465;
  double t6466;
  double t6469;
  double t6470;
  double t6472;
  double t6476;
  double t6478;
  double t6480;
  double t6536;
  double t6540;
  double t6541;
  double t6531;
  double t6535;
  double t6547;
  double t6549;
  double t6552;
  double t6553;
  double t6561;
  double t6566;
  double t6572;
  double t6574;
  double t6575;
  double t6581;
  double t6627;
  double t6631;
  double t6632;
  double t6635;
  double t6640;
  double t6643;
  double t6645;
  double t6647;
  double t6652;
  double t6654;
  double t6655;
  double t6656;
  double t6917;
  double t6920;
  double t6927;
  double t6933;
  double t6936;
  double t6941;
  double t6991;
  double t6992;
  double t6995;
  double t7001;
  double t7002;
  double t7008;
  double t7009;
  double t7010;
  double t7012;
  double t7013;
  double t7068;
  double t7021;
  double t7024;
  double t7028;
  double t7029;
  double t6999;
  double t7004;
  double t7011;
  double t7016;
  double t7077;
  double t7083;
  double t7151;
  double t7115;
  double t7128;
  t55 = -1.*var5[0];
  t73 = t55 + var5[1];
  t105 = Power(t73,-5);
  t118 = -1. + var6[0];
  t153 = -1. + var7[0];
  t171 = 1/t153;
  t179 = -1.*var1[0];
  t187 = t179 + var1[1];
  t217 = t118*t171*t187;
  t232 = t55 + var1[0] + t217;
  t233 = Power(t232,4);
  t253 = Power(t73,-4);
  t269 = Power(t232,3);
  t283 = 1/t73;
  t298 = -1.*t283*t232;
  t304 = 1. + t298;
  t330 = Power(t73,-3);
  t369 = Power(t232,2);
  t370 = Power(t304,2);
  t414 = Power(t73,-2);
  t420 = Power(t304,3);
  t446 = Power(t304,4);
  t545 = Cos(var2[4]);
  t505 = Cos(var2[7]);
  t518 = Sin(var2[7]);
  t573 = Cos(var2[5]);
  t546 = Cos(var2[6]);
  t554 = Sin(var2[5]);
  t583 = Sin(var2[6]);
  t642 = t545*t573*t546;
  t647 = -1.*t545*t554*t583;
  t649 = t642 + t647;
  t487 = Sin(var2[4]);
  t570 = -1.*t545*t546*t554;
  t599 = -1.*t545*t573*t583;
  t605 = t570 + t599;
  t713 = Cos(var2[8]);
  t723 = -1.*t713;
  t736 = 1. + t723;
  t768 = Sin(var2[8]);
  t806 = -1.*t505*t487;
  t813 = -4.e-6*t505*t605;
  t818 = -1.000000000016*t649*t518;
  t823 = t806 + t813 + t818;
  t928 = t505*t649;
  t936 = -1.*t487*t518;
  t938 = -4.e-6*t605*t518;
  t946 = t928 + t936 + t938;
  t662 = 4.e-6*t505*t649;
  t672 = -4.e-6*t487*t518;
  t675 = -1.6e-11*t605*t518;
  t683 = t662 + t672 + t675;
  t1042 = -1. + t713;
  t1198 = -1. + t505;
  t1214 = 4.e-6*t1198*t487;
  t1216 = 1.6e-11*t1198;
  t1222 = 1. + t1216;
  t1224 = t1222*t605;
  t1228 = 4.e-6*t649*t518;
  t1230 = t1214 + t1224 + t1228;
  t1197 = t505*t487;
  t1199 = 4.e-6*t1198*t605;
  t1207 = t649*t518;
  t1208 = t1197 + t1199 + t1207;
  t1248 = -1.*t505;
  t1250 = 1. + t1248;
  t1256 = -1.000000000016*t1250;
  t1261 = 1. + t1256;
  t1277 = t1261*t649;
  t1282 = t1277 + t936 + t938;
  t1521 = -1.*t546;
  t1523 = 1. + t1521;
  t1526 = 0.15121*t1523;
  t1592 = -1.*t545*t573*t546;
  t1601 = t545*t554*t583;
  t1607 = t1592 + t1601;
  t684 = -1.284e-8*var2[8];
  t755 = -1.5499600000248e-7*t736;
  t776 = 2.012840000032e-6*t768;
  t786 = t684 + t755 + t776;
  t862 = 0.503210000016051*t736;
  t899 = 0.03874900000062*t768;
  t923 = t862 + t899;
  t959 = 5.136e-14*var2[8];
  t968 = -0.03874900000062*t736;
  t970 = 0.503210000008*t768;
  t977 = t959 + t968 + t970;
  t983 = -1.000000000016*t736;
  t984 = 1. + t983;
  t1733 = t1261*t605;
  t1743 = -4.e-6*t1607*t518;
  t1753 = t1733 + t1743;
  t1688 = t1222*t1607;
  t1691 = 4.e-6*t605*t518;
  t1697 = t1688 + t1691;
  t1759 = 4.e-6*t1198*t1607;
  t1778 = t605*t518;
  t1795 = t1759 + t1778;
  t1056 = 1.6e-11*t1042;
  t1091 = 1. + t1056;
  t1572 = 0.15121*t583;
  t1623 = -1.2484e-7*var2[7];
  t1632 = -1.5499600000248e-7*t1250;
  t1640 = 1.124840000016e-6*t518;
  t1643 = t1623 + t1632 + t1640;
  t1657 = t1607*t1643;
  t1660 = 0.281210000008499*t1250;
  t1674 = 0.03874900000062*t518;
  t1675 = t1660 + t1674;
  t1686 = t605*t1675;
  t1722 = t1697*t786;
  t1755 = t1753*t923;
  t1823 = t1795*t977;
  t1829 = t984*t1753;
  t1837 = -4.e-6*t1697*t768;
  t1847 = -1.*t1795*t768;
  t1852 = t1829 + t1837 + t1847;
  t1856 = 0.80321*t1852;
  t1858 = t1091*t1697;
  t1862 = 4.e-6*t1042*t1795;
  t1867 = 4.e-6*t1753*t768;
  t1870 = t1858 + t1862 + t1867;
  t1871 = 0.14871*t1870;
  t1877 = 4.e-6*t1042*t1697;
  t1879 = t713*t1795;
  t1881 = t1753*t768;
  t1883 = t1877 + t1879 + t1881;
  t1892 = -0.03875*t1883;
  t1529 = -0.15121*t583;
  t1543 = t1526 + t1529;
  t1580 = t1526 + t1572;
  t1963 = t546*t487*t554;
  t1969 = t573*t487*t583;
  t1971 = t1963 + t1969;
  t1989 = -1.*t573*t546*t487;
  t2003 = t487*t554*t583;
  t2011 = t1989 + t2003;
  t2039 = 4.e-6*t545*t1198;
  t2040 = t1222*t1971;
  t2061 = 4.e-6*t2011*t518;
  t2073 = t2039 + t2040 + t2061;
  t2114 = t545*t505;
  t2115 = 4.e-6*t1198*t1971;
  t2120 = t2011*t518;
  t2121 = t2114 + t2115 + t2120;
  t2077 = t1261*t2011;
  t2082 = -1.*t545*t518;
  t2094 = -4.e-6*t1971*t518;
  t2107 = t2077 + t2082 + t2094;
  t2238 = Sin(var2[3]);
  t2019 = 4.9936e-13*var2[7];
  t2022 = -0.03874900000062*t1250;
  t2027 = 0.281210000004*t518;
  t2035 = t2019 + t2022 + t2027;
  t2249 = -1.*t545*t546*t2238*t554;
  t2252 = -1.*t545*t573*t2238*t583;
  t2265 = t2249 + t2252;
  t2269 = t545*t573*t546*t2238;
  t2273 = -1.*t545*t2238*t554*t583;
  t2277 = t2269 + t2273;
  t2284 = 4.e-6*t1198*t2238*t487;
  t2286 = t1222*t2265;
  t2289 = 4.e-6*t2277*t518;
  t2300 = t2284 + t2286 + t2289;
  t2312 = t505*t2238*t487;
  t2314 = 4.e-6*t1198*t2265;
  t2315 = t2277*t518;
  t2318 = t2312 + t2314 + t2315;
  t2303 = t1261*t2277;
  t2304 = -1.*t2238*t487*t518;
  t2307 = -4.e-6*t2265*t518;
  t2309 = t2303 + t2304 + t2307;
  t2361 = Cos(var2[3]);
  t2357 = -1.*t573*t2238;
  t2368 = -1.*t2361*t487*t554;
  t2370 = t2357 + t2368;
  t2374 = t2361*t573*t487;
  t2378 = -1.*t2238*t554;
  t2381 = t2374 + t2378;
  t2389 = t546*t2370;
  t2392 = -1.*t2381*t583;
  t2394 = t2389 + t2392;
  t2398 = t546*t2381;
  t2400 = t2370*t583;
  t2401 = t2398 + t2400;
  t2421 = -4.e-6*t2361*t545*t1198;
  t2422 = t1222*t2394;
  t2435 = 4.e-6*t2401*t518;
  t2438 = t2421 + t2422 + t2435;
  t2472 = -1.*t2361*t545*t505;
  t2473 = 4.e-6*t1198*t2394;
  t2474 = t2401*t518;
  t2478 = t2472 + t2473 + t2474;
  t2448 = t1261*t2401;
  t2449 = t2361*t545*t518;
  t2453 = -4.e-6*t2394*t518;
  t2454 = t2448 + t2449 + t2453;
  t2544 = -1.*t573*t2238*t487;
  t2549 = -1.*t2361*t554;
  t2550 = t2544 + t2549;
  t2559 = t2361*t573;
  t2561 = -1.*t2238*t487*t554;
  t2563 = t2559 + t2561;
  t2570 = t546*t2550;
  t2576 = -1.*t2563*t583;
  t2578 = t2570 + t2576;
  t2589 = t546*t2563;
  t2591 = t2550*t583;
  t2599 = t2589 + t2591;
  t2624 = t1261*t2599;
  t2631 = -4.e-6*t2578*t518;
  t2633 = t2624 + t2631;
  t2611 = t1222*t2578;
  t2614 = 4.e-6*t2599*t518;
  t2618 = t2611 + t2614;
  t2637 = 4.e-6*t1198*t2578;
  t2640 = t2599*t518;
  t2647 = t2637 + t2640;
  t1905 = -0.15121*t546;
  t1907 = t1905 + t1572;
  t1922 = 0.15121*t546;
  t1928 = t1922 + t1572;
  t2759 = t573*t2238*t487;
  t2766 = t2361*t554;
  t2770 = t2759 + t2766;
  t2774 = -1.*t546*t2770;
  t2777 = t2774 + t2576;
  t2787 = -1.*t2770*t583;
  t2791 = t2589 + t2787;
  t2804 = t1261*t2791;
  t2808 = -4.e-6*t2777*t518;
  t2809 = t2804 + t2808;
  t2794 = t1222*t2777;
  t2796 = 4.e-6*t2791*t518;
  t2801 = t2794 + t2796;
  t2812 = 4.e-6*t1198*t2777;
  t2813 = t2791*t518;
  t2815 = t2812 + t2813;
  t510 = 0.281210000004*t505;
  t523 = -0.03874900000062*t518;
  t524 = 4.9936e-13 + t510 + t523;
  t615 = 1.124840000016e-6*t505;
  t632 = -1.5499600000248e-7*t518;
  t634 = -1.2484e-7 + t615 + t632;
  t650 = 0.03874900000062*t505;
  t653 = 0.281210000008499*t518;
  t658 = t650 + t653;
  t2932 = t546*t2770;
  t2934 = t2563*t583;
  t2935 = t2932 + t2934;
  t2949 = t545*t505*t2238;
  t2959 = -4.e-6*t505*t2791;
  t2961 = -1.000000000016*t2935*t518;
  t2962 = t2949 + t2959 + t2961;
  t2965 = t505*t2935;
  t2968 = t545*t2238*t518;
  t2969 = -4.e-6*t2791*t518;
  t2974 = t2965 + t2968 + t2969;
  t2939 = 4.e-6*t505*t2935;
  t2940 = 4.e-6*t545*t2238*t518;
  t2942 = -1.6e-11*t2791*t518;
  t2944 = t2939 + t2940 + t2942;
  t1209 = 0.503210000008*t713;
  t1211 = -0.03874900000062*t768;
  t1212 = 5.136e-14 + t1209 + t1211;
  t1238 = 2.012840000032e-6*t713;
  t1240 = -1.5499600000248e-7*t768;
  t1245 = -1.284e-8 + t1238 + t1240;
  t1286 = 0.03874900000062*t713;
  t1299 = 0.503210000016051*t768;
  t1329 = t1286 + t1299;
  t3077 = -4.e-6*t545*t1198*t2238;
  t3078 = t1222*t2791;
  t3079 = 4.e-6*t2935*t518;
  t3083 = t3077 + t3078 + t3079;
  t3055 = -1.*t545*t505*t2238;
  t3063 = 4.e-6*t1198*t2791;
  t3065 = t2935*t518;
  t3066 = t3055 + t3063 + t3065;
  t3092 = t1261*t2935;
  t3095 = t3092 + t2968 + t2969;
  t3232 = t2361*t545*t546*t554;
  t3233 = t2361*t545*t573*t583;
  t3237 = t3232 + t3233;
  t3245 = -1.*t2361*t545*t573*t546;
  t3250 = t2361*t545*t554*t583;
  t3259 = t3245 + t3250;
  t3271 = -4.e-6*t2361*t1198*t487;
  t3290 = t1222*t3237;
  t3298 = 4.e-6*t3259*t518;
  t3303 = t3271 + t3290 + t3298;
  t3333 = -1.*t2361*t505*t487;
  t3336 = 4.e-6*t1198*t3237;
  t3345 = t3259*t518;
  t3349 = t3333 + t3336 + t3345;
  t3313 = t1261*t3259;
  t3314 = t2361*t487*t518;
  t3321 = -4.e-6*t3237*t518;
  t3325 = t3313 + t3314 + t3321;
  t3415 = t573*t2238;
  t3416 = t2361*t487*t554;
  t3420 = t3415 + t3416;
  t3423 = -1.*t3420*t583;
  t3426 = t2398 + t3423;
  t3446 = t546*t3420;
  t3447 = t2381*t583;
  t3448 = t3446 + t3447;
  t3462 = t1261*t3448;
  t3463 = -4.e-6*t3426*t518;
  t3466 = t3462 + t3463;
  t3452 = t1222*t3426;
  t3454 = 4.e-6*t3448*t518;
  t3455 = t3452 + t3454;
  t3484 = 4.e-6*t1198*t3426;
  t3486 = t3448*t518;
  t3487 = t3484 + t3486;
  t3545 = -1.*t2361*t573*t487;
  t3551 = t2238*t554;
  t3552 = t3545 + t3551;
  t3567 = -1.*t546*t3552;
  t3568 = t3567 + t3423;
  t3579 = -1.*t3552*t583;
  t3582 = t3446 + t3579;
  t3601 = t1261*t3582;
  t3608 = -4.e-6*t3568*t518;
  t3610 = t3601 + t3608;
  t3593 = t1222*t3568;
  t3596 = 4.e-6*t3582*t518;
  t3597 = t3593 + t3596;
  t3612 = 4.e-6*t1198*t3568;
  t3615 = t3582*t518;
  t3621 = t3612 + t3615;
  t3711 = t546*t3552;
  t3719 = t3420*t583;
  t3723 = t3711 + t3719;
  t3759 = -4.e-6*t505*t3582;
  t3770 = -1.000000000016*t3723*t518;
  t3779 = t2472 + t3759 + t3770;
  t3785 = t505*t3723;
  t3788 = -1.*t2361*t545*t518;
  t3789 = -4.e-6*t3582*t518;
  t3800 = t3785 + t3788 + t3789;
  t3730 = 4.e-6*t505*t3723;
  t3747 = -4.e-6*t2361*t545*t518;
  t3750 = -1.6e-11*t3582*t518;
  t3751 = t3730 + t3747 + t3750;
  t3881 = 4.e-6*t2361*t545*t1198;
  t3888 = t1222*t3582;
  t3897 = 4.e-6*t3723*t518;
  t3898 = t3881 + t3888 + t3897;
  t3864 = t2361*t545*t505;
  t3865 = 4.e-6*t1198*t3582;
  t3870 = t3723*t518;
  t3873 = t3864 + t3865 + t3870;
  t3913 = t1261*t3723;
  t3918 = t3913 + t3788 + t3789;
  t3126 = -4.e-6*t3083*t768;
  t3135 = -1.*t3066*t768;
  t4086 = Cos(var2[17]);
  t4087 = Sin(var2[17]);
  t4104 = Cos(var2[16]);
  t4105 = -1.*t4104;
  t4106 = 1. + t4105;
  t4108 = Sin(var2[16]);
  t4153 = Cos(var2[15]);
  t4137 = Sin(var2[15]);
  t4088 = 2.8e-11*t4087;
  t4149 = -1.*t545*t573*t4137;
  t4158 = -1.*t4153*t545*t554;
  t4161 = t4149 + t4158;
  t4107 = -2.8e-11*t4106;
  t4173 = t4153*t545*t573;
  t4175 = -1.*t545*t4137*t554;
  t4176 = t4173 + t4175;
  t4188 = -4.e-6*t4087;
  t4097 = 7.e-6*t4087;
  t4223 = 4.e-6*t4106;
  t4114 = -7.e-6*t4106;
  t4109 = t4107 + t4108;
  t4110 = t4109*t487;
  t4129 = -4.e-6*t4108;
  t4135 = t4114 + t4129;
  t4167 = t4135*t4161;
  t4169 = -1.000000000016*t4106;
  t4171 = 1. + t4169;
  t4180 = t4171*t4176;
  t4181 = t4110 + t4167 + t4180;
  t4210 = -1.000000000049*t4106;
  t4213 = 1. + t4210;
  t4220 = t4213*t487;
  t4229 = -7.e-6*t4108;
  t4236 = t4223 + t4229;
  t4237 = t4236*t4161;
  t4240 = -1.*t4108;
  t4245 = t4107 + t4240;
  t4248 = t4245*t4176;
  t4253 = t4220 + t4237 + t4248;
  t4094 = -4.e-6*t4086;
  t4290 = 7.e-6*t4108;
  t4295 = t4223 + t4290;
  t4298 = t4295*t487;
  t4301 = -6.5e-11*t4106;
  t4303 = 1. + t4301;
  t4305 = t4303*t4161;
  t4309 = 4.e-6*t4108;
  t4311 = t4114 + t4309;
  t4312 = t4311*t4176;
  t4314 = t4298 + t4305 + t4312;
  t4195 = -1.*t4086;
  t4321 = -2.8e-11*t4087;
  t4187 = -7.e-6*t4086;
  t4271 = 4.e-6*t4086;
  t4326 = -7.e-6*t4087;
  t4257 = 7.e-6*t4086;
  t4341 = 4.e-6*t4087;
  t4396 = 2.8e-11*t4108;
  t4470 = 1. + t4195;
  t4410 = 7.e-6*t4104;
  t4417 = 4.e-6*t4104;
  t4496 = -1. + t4086;
  t4498 = 4.e-6*t4496;
  t4382 = -7.e-6*t4104;
  t4482 = 7.e-6*t4470;
  t4559 = 2.8e-11*t4470;
  t4584 = -2.8e-11*t4108;
  t4447 = -4.e-6*t4104;
  t4527 = t4410 + t4309;
  t4533 = t4527*t487;
  t4539 = -6.5e-11*t4108*t4161;
  t4541 = t4417 + t4229;
  t4544 = t4541*t4176;
  t4545 = t4533 + t4539 + t4544;
  t4578 = -1.000000000049*t4108*t487;
  t4582 = t4382 + t4309;
  t4583 = t4582*t4161;
  t4585 = t4105 + t4584;
  t4592 = t4585*t4176;
  t4597 = t4578 + t4583 + t4592;
  t4642 = t4104 + t4584;
  t4645 = t4642*t487;
  t4660 = t4447 + t4229;
  t4667 = t4660*t4161;
  t4676 = -1.000000000016*t4108*t4176;
  t4677 = t4645 + t4667 + t4676;
  t4693 = -2.8e-11*t4470;
  t4564 = -1.*t4087;
  t4732 = 4.e-6*t4470;
  t4679 = -7.e-6*t4470;
  t4821 = -1.*t4153;
  t4825 = 1. + t4821;
  t4826 = -0.15121*t4825;
  t4891 = 7.e-6*t4106;
  t4467 = 2.826290000000002e-7*var2[17];
  t4477 = -2.18904205e-16*t4470;
  t4485 = t4482 + t4341;
  t4495 = -0.5031510000080001*t4485;
  t4510 = t4498 + t4097;
  t4521 = -0.038575000014*t4510;
  t4524 = t4467 + t4477 + t4495 + t4521;
  t4958 = -1.*t4153*t545*t573;
  t4972 = t545*t4137*t554;
  t4973 = t4958 + t4972;
  t4555 = 1.1305160000000008e-12*var2[17];
  t4557 = -0.03857500001589017*t4470;
  t4566 = t4559 + t4564;
  t4568 = -0.5031510000080001*t4566;
  t4569 = t4498 + t4326;
  t4570 = -3.367757e-6*t4569;
  t4575 = t4555 + t4557 + t4568 + t4570;
  t4600 = -1.9784030000000015e-12*var2[17];
  t4602 = -0.5031510000160505*t4470;
  t4608 = t4482 + t4188;
  t4624 = -3.367757e-6*t4608;
  t4629 = t4559 + t4087;
  t4633 = -0.038575000014*t4629;
  t4641 = t4600 + t4602 + t4624 + t4633;
  t4684 = t4679 + t4188;
  t4985 = t4311*t4161;
  t4998 = t4303*t4973;
  t5001 = t4985 + t4998;
  t4702 = t4693 + t4087;
  t5012 = t4245*t4161;
  t5014 = t4236*t4973;
  t5017 = t5012 + t5014;
  t4712 = -1.000000000016*t4470;
  t4714 = 1. + t4712;
  t5022 = t4171*t4161;
  t5030 = t4135*t4973;
  t5031 = t5022 + t5030;
  t4738 = t4732 + t4326;
  t4756 = -1.000000000049*t4470;
  t4760 = 1. + t4756;
  t4768 = t4693 + t4564;
  t4781 = -6.5e-11*t4470;
  t4782 = 1. + t4781;
  t4786 = t4732 + t4097;
  t4799 = t4679 + t4341;
  t4839 = -0.15121*t4137;
  t4867 = -2.7726089999999997e-12*var2[16];
  t4884 = -0.2812110000084994*t4106;
  t4894 = t4891 + t4129;
  t4899 = -1.8134809999999998e-6*t4894;
  t4900 = 2.8e-11*t4106;
  t4910 = t4900 + t4108;
  t4922 = -0.038749000006999997*t4910;
  t4929 = t4867 + t4884 + t4899 + t4922;
  t4933 = t4929*t4161;
  t4934 = 3.9608699999999997e-7*var2[16];
  t4935 = -1.1787626499999999e-16*t4106;
  t4938 = t4891 + t4309;
  t4946 = -0.281211000004*t4938;
  t4949 = -1. + t4104;
  t4950 = 4.e-6*t4949;
  t4951 = t4950 + t4290;
  t4955 = -0.038749000006999997*t4951;
  t4957 = t4934 + t4935 + t4946 + t4955;
  t4977 = t4957*t4973;
  t5010 = t4524*t5001;
  t5021 = t4575*t5017;
  t5033 = t4641*t5031;
  t5037 = t4684*t5001;
  t5038 = t4702*t5017;
  t5039 = t4714*t5031;
  t5043 = t5037 + t5038 + t5039;
  t5044 = -0.80315*t5043;
  t5047 = t4738*t5001;
  t5048 = t4760*t5017;
  t5053 = t4768*t5031;
  t5062 = t5047 + t5048 + t5053;
  t5066 = -0.038576*t5062;
  t5072 = t4782*t5001;
  t5073 = t4786*t5017;
  t5077 = t4799*t5031;
  t5081 = t5072 + t5073 + t5077;
  t5083 = -0.148715*t5081;
  t4863 = t4826 + t4839;
  t4830 = 0.15121*t4137;
  t4832 = t4826 + t4830;
  t5172 = t573*t4137*t487;
  t5175 = t4153*t487*t554;
  t5178 = t5172 + t5175;
  t5182 = -1.*t4153*t573*t487;
  t5195 = t4137*t487*t554;
  t5201 = t5182 + t5195;
  t5212 = t545*t4109;
  t5213 = t4135*t5178;
  t5218 = t4171*t5201;
  t5226 = t5212 + t5213 + t5218;
  t5233 = t4213*t545;
  t5235 = t4236*t5178;
  t5246 = t4245*t5201;
  t5247 = t5233 + t5235 + t5246;
  t5255 = t545*t4295;
  t5257 = t4303*t5178;
  t5260 = t4311*t5201;
  t5263 = t5255 + t5257 + t5260;
  t5124 = 1.5843479999999999e-12*var2[16];
  t5128 = -0.03874900000889869*t4106;
  t5129 = t4900 + t4240;
  t5131 = -0.281211000004*t5129;
  t5134 = t4950 + t4229;
  t5135 = -1.8134809999999998e-6*t5134;
  t5138 = t5124 + t5128 + t5131 + t5135;
  t5355 = -1.*t545*t573*t4137*t2238;
  t5358 = -1.*t4153*t545*t2238*t554;
  t5361 = t5355 + t5358;
  t5364 = t4153*t545*t573*t2238;
  t5366 = -1.*t545*t4137*t2238*t554;
  t5374 = t5364 + t5366;
  t5379 = t4109*t2238*t487;
  t5380 = t4135*t5361;
  t5384 = t4171*t5374;
  t5389 = t5379 + t5380 + t5384;
  t5409 = t4213*t2238*t487;
  t5418 = t4236*t5361;
  t5425 = t4245*t5374;
  t5428 = t5409 + t5418 + t5425;
  t5437 = t4295*t2238*t487;
  t5439 = t4303*t5361;
  t5442 = t4311*t5374;
  t5443 = t5437 + t5439 + t5442;
  t5501 = -1.*t4137*t2381;
  t5502 = t4153*t2370;
  t5510 = t5501 + t5502;
  t5520 = t4153*t2381;
  t5521 = t4137*t2370;
  t5525 = t5520 + t5521;
  t5527 = -1.*t2361*t545*t4109;
  t5529 = t4135*t5510;
  t5537 = t4171*t5525;
  t5541 = t5527 + t5529 + t5537;
  t5554 = -1.*t4213*t2361*t545;
  t5557 = t4236*t5510;
  t5562 = t4245*t5525;
  t5566 = t5554 + t5557 + t5562;
  t5576 = -1.*t2361*t545*t4295;
  t5578 = t4303*t5510;
  t5581 = t4311*t5525;
  t5583 = t5576 + t5578 + t5581;
  t5656 = t4137*t2550;
  t5657 = t4153*t2563;
  t5661 = t5656 + t5657;
  t5665 = t4153*t2550;
  t5666 = -1.*t4137*t2563;
  t5671 = t5665 + t5666;
  t5674 = t4311*t5661;
  t5692 = t4303*t5671;
  t5698 = t5674 + t5692;
  t5705 = t4245*t5661;
  t5715 = t4236*t5671;
  t5724 = t5705 + t5715;
  t5728 = t4171*t5661;
  t5739 = t4135*t5671;
  t5745 = t5728 + t5739;
  t5092 = -0.15121*t4153;
  t5094 = t5092 + t4839;
  t5105 = 0.15121*t4153;
  t5110 = t5105 + t4839;
  t5804 = -1.*t4137*t2770;
  t5807 = t5804 + t5657;
  t5812 = -1.*t4153*t2770;
  t5819 = t5812 + t5666;
  t5824 = t4311*t5807;
  t5826 = t4303*t5819;
  t5827 = t5824 + t5826;
  t5842 = t4245*t5807;
  t5843 = t4236*t5819;
  t5849 = t5842 + t5843;
  t5852 = t4171*t5807;
  t5853 = t4135*t5819;
  t5854 = t5852 + t5853;
  t4089 = t4086 + t4088;
  t4091 = -0.038575000014*t4089;
  t4099 = t4094 + t4097;
  t4100 = -3.367757e-6*t4099;
  t4101 = -0.5031510000160505*t4087;
  t4103 = -1.9784030000000015e-12 + t4091 + t4100 + t4101;
  t4192 = t4187 + t4188;
  t4194 = -3.367757e-6*t4192;
  t4196 = t4195 + t4088;
  t4198 = -0.5031510000080001*t4196;
  t4202 = -0.03857500001589017*t4087;
  t4207 = 1.1305160000000008e-12 + t4194 + t4198 + t4202;
  t5914 = t4153*t2770;
  t5918 = t4137*t2563;
  t5920 = t5914 + t5918;
  t4258 = t4257 + t4188;
  t4261 = -0.038575000014*t4258;
  t4274 = t4271 + t4097;
  t4278 = -0.5031510000080001*t4274;
  t4283 = -2.18904205e-16*t4087;
  t4288 = 2.826290000000002e-7 + t4261 + t4278 + t4283;
  t5912 = -1.*t545*t4109*t2238;
  t5913 = t4135*t5807;
  t5925 = t4171*t5920;
  t5930 = t5912 + t5913 + t5925;
  t4324 = t4086 + t4321;
  t5935 = -1.*t4213*t545*t2238;
  t5936 = t4236*t5807;
  t5937 = t4245*t5920;
  t5938 = t5935 + t5936 + t5937;
  t4329 = t4094 + t4326;
  t5950 = -1.*t545*t4295*t2238;
  t5951 = t4303*t5807;
  t5952 = t4311*t5920;
  t5953 = t5950 + t5951 + t5952;
  t4336 = t4195 + t4321;
  t4342 = t4187 + t4341;
  t4352 = t4271 + t4326;
  t4356 = t4257 + t4341;
  t4384 = t4382 + t4129;
  t4387 = -1.8134809999999998e-6*t4384;
  t4398 = t4105 + t4396;
  t4401 = -0.281211000004*t4398;
  t4405 = -0.03874900000889869*t4108;
  t4407 = 1.5843479999999999e-12 + t4387 + t4401 + t4405;
  t4411 = t4410 + t4129;
  t4413 = -0.038749000006999997*t4411;
  t4419 = t4417 + t4290;
  t4433 = -0.281211000004*t4419;
  t4434 = -1.1787626499999999e-16*t4108;
  t4435 = 3.9608699999999997e-7 + t4413 + t4433 + t4434;
  t4444 = t4104 + t4396;
  t4446 = -0.038749000006999997*t4444;
  t4450 = t4447 + t4290;
  t4459 = -1.8134809999999998e-6*t4450;
  t4461 = -0.2812110000084994*t4108;
  t4464 = -2.7726089999999997e-12 + t4446 + t4459 + t4461;
  t6041 = -1.*t545*t4527*t2238;
  t6042 = -6.5e-11*t4108*t5807;
  t6044 = t4541*t5920;
  t6045 = t6041 + t6042 + t6044;
  t6048 = 1.000000000049*t545*t4108*t2238;
  t6053 = t4582*t5807;
  t6056 = t4585*t5920;
  t6060 = t6048 + t6053 + t6056;
  t6073 = -1.*t545*t4642*t2238;
  t6074 = t4660*t5807;
  t6076 = -1.000000000016*t4108*t5920;
  t6084 = t6073 + t6074 + t6076;
  t6201 = t2361*t545*t573*t4137;
  t6203 = t4153*t2361*t545*t554;
  t6209 = t6201 + t6203;
  t6219 = -1.*t4153*t2361*t545*t573;
  t6221 = t2361*t545*t4137*t554;
  t6226 = t6219 + t6221;
  t6233 = -1.*t2361*t4109*t487;
  t6238 = t4135*t6209;
  t6242 = t4171*t6226;
  t6246 = t6233 + t6238 + t6242;
  t6250 = -1.*t4213*t2361*t487;
  t6252 = t4236*t6209;
  t6254 = t4245*t6226;
  t6255 = t6250 + t6252 + t6254;
  t6259 = -1.*t2361*t4295*t487;
  t6260 = t4303*t6209;
  t6261 = t4311*t6226;
  t6262 = t6259 + t6260 + t6261;
  t6348 = t4137*t2381;
  t6352 = t4153*t3420;
  t6358 = t6348 + t6352;
  t6363 = -1.*t4137*t3420;
  t6367 = t5520 + t6363;
  t6380 = t4311*t6358;
  t6385 = t4303*t6367;
  t6386 = t6380 + t6385;
  t6393 = t4245*t6358;
  t6394 = t4236*t6367;
  t6396 = t6393 + t6394;
  t6405 = t4171*t6358;
  t6406 = t4135*t6367;
  t6411 = t6405 + t6406;
  t6452 = -1.*t4137*t3552;
  t6455 = t6452 + t6352;
  t6458 = -1.*t4153*t3552;
  t6460 = t6458 + t6363;
  t6463 = t4311*t6455;
  t6465 = t4303*t6460;
  t6466 = t6463 + t6465;
  t6469 = t4245*t6455;
  t6470 = t4236*t6460;
  t6472 = t6469 + t6470;
  t6476 = t4171*t6455;
  t6478 = t4135*t6460;
  t6480 = t6476 + t6478;
  t6536 = t4153*t3552;
  t6540 = t4137*t3420;
  t6541 = t6536 + t6540;
  t6531 = t2361*t545*t4109;
  t6535 = t4135*t6455;
  t6547 = t4171*t6541;
  t6549 = t6531 + t6535 + t6547;
  t6552 = t4213*t2361*t545;
  t6553 = t4236*t6455;
  t6561 = t4245*t6541;
  t6566 = t6552 + t6553 + t6561;
  t6572 = t2361*t545*t4295;
  t6574 = t4303*t6455;
  t6575 = t4311*t6541;
  t6581 = t6572 + t6574 + t6575;
  t6627 = t2361*t545*t4527;
  t6631 = -6.5e-11*t4108*t6455;
  t6632 = t4541*t6541;
  t6635 = t6627 + t6631 + t6632;
  t6640 = -1.000000000049*t2361*t545*t4108;
  t6643 = t4582*t6455;
  t6645 = t4585*t6541;
  t6647 = t6640 + t6643 + t6645;
  t6652 = t2361*t545*t4642;
  t6654 = t4660*t6455;
  t6655 = -1.000000000016*t4108*t6541;
  t6656 = t6652 + t6654 + t6655;
  t6917 = Power(t545,2);
  t6920 = Power(t573,2);
  t6927 = t6917*t6920;
  t6933 = Power(t2770,2);
  t6936 = t6927 + t6933;
  t6941 = 1/t6936;
  t6991 = Cos(var2[9]);
  t6992 = -1.*t6991;
  t6995 = 1. + t6992;
  t7001 = Sin(var2[9]);
  t7002 = -0.15121*t7001;
  t7008 = Cos(var2[12]);
  t7009 = -1.*t7008;
  t7010 = 1. + t7009;
  t7012 = Sin(var2[12]);
  t7013 = 0.15121*t7012;
  t7068 = -0.15121*t6991;
  t7021 = -0.15121*t6995;
  t7024 = t7021 + t7002;
  t7028 = 0.15121*t7010;
  t7029 = t7028 + t7013;
  t6999 = 0.15121*t6995;
  t7004 = t6999 + t7002;
  t7011 = -0.15121*t7010;
  t7016 = t7011 + t7013;
  t7077 = t6991*t3420;
  t7083 = -1.*t7001*t3420;
  t7151 = 0.15121*t7008;
  t7115 = t7008*t3420;
  t7128 = -1.*t7012*t3420;
  p_output1[0]=var3[0] + (t1643*t1971 + t1675*t2011 + t2035*t545 + t1543*t487*t554 - 1.*t1580*t487*t573 + 0.14871*(t1091*t2073 + 4.e-6*t1042*t2121 + 4.e-6*t2107*t768) - 0.03875*(4.e-6*t1042*t2073 + t2121*t713 + t2107*t768) + t2073*t786 + t2107*t923 + t2121*t977 + 0.80321*(-4.e-6*t2073*t768 - 1.*t2121*t768 + t2107*t984))*var3[4] + (t1657 + t1686 + t1722 + t1755 + t1823 + t1856 + t1871 + t1892 - 1.*t1580*t545*t554 - 1.*t1543*t545*t573)*var3[5] + (t1657 + t1686 + t1722 + t1755 + t1823 + t1856 + t1871 + t1892 - 1.*t1907*t545*t554 + t1928*t545*t573)*var3[6] + (t487*t524 + t605*t634 + t649*t658 + t683*t786 + t823*t923 + 0.14871*(t1091*t683 + 4.e-6*t768*t823 + 4.e-6*t1042*t946) - 0.03875*(4.e-6*t1042*t683 + t768*t823 + t713*t946) + t946*t977 + 0.80321*(-4.e-6*t683*t768 - 1.*t768*t946 + t823*t984))*var3[7] + (t1208*t1212 + t1230*t1245 + t1282*t1329 - 0.03875*(t1282*t713 - 1.*t1208*t768 - 4.e-6*t1230*t768) + 0.14871*(4.e-6*t1282*t713 - 4.e-6*t1208*t768 - 1.6e-11*t1230*t768) + 0.80321*(-1.*t1208*t713 - 4.e-6*t1230*t713 - 1.000000000016*t1282*t768))*var3[8] + 5.*t283*t446*var4[0] + 20.*t232*t414*t420*var4[10] - 5.*t283*t446*var4[10] + 30.*t330*t369*t370*var4[20] - 20.*t232*t414*t420*var4[20] + 20.*t253*t269*t304*var4[30] - 30.*t330*t369*t370*var4[30] + 5.*t105*t233*var4[40] - 20.*t253*t269*t304*var4[40] - 5.*t105*t233*var4[50];
  p_output1[1]=var3[1] + (t1543*t2370 + t1580*t2381 + t1643*t2394 + t1675*t2401 - 1.*t2035*t2361*t545 + 0.14871*(t1091*t2438 + 4.e-6*t1042*t2478 + 4.e-6*t2454*t768) - 0.03875*(4.e-6*t1042*t2438 + t2478*t713 + t2454*t768) + t2438*t786 + t2454*t923 + t2478*t977 + 0.80321*(-4.e-6*t2438*t768 - 1.*t2478*t768 + t2454*t984))*var3[3] + (t1643*t2265 + t1675*t2277 + t2035*t2238*t487 - 1.*t1543*t2238*t545*t554 + t1580*t2238*t545*t573 + 0.14871*(t1091*t2300 + 4.e-6*t1042*t2318 + 4.e-6*t2309*t768) - 0.03875*(4.e-6*t1042*t2300 + t2318*t713 + t2309*t768) + t2300*t786 + t2309*t923 + t2318*t977 + 0.80321*(-4.e-6*t2300*t768 - 1.*t2318*t768 + t2309*t984))*var3[4] + (t1543*t2550 + t1580*t2563 + t1643*t2578 + t1675*t2599 + 0.14871*(t1091*t2618 + 4.e-6*t1042*t2647 + 4.e-6*t2633*t768) - 0.03875*(4.e-6*t1042*t2618 + t2647*t713 + t2633*t768) + t2618*t786 + t2633*t923 + t2647*t977 + 0.80321*(-4.e-6*t2618*t768 - 1.*t2647*t768 + t2633*t984))*var3[5] + (t1907*t2563 + t1928*t2770 + t1643*t2777 + t1675*t2791 + 0.14871*(t1091*t2801 + 4.e-6*t1042*t2815 + 4.e-6*t2809*t768) - 0.03875*(4.e-6*t1042*t2801 + t2815*t713 + t2809*t768) + t2801*t786 + t2809*t923 + t2815*t977 + 0.80321*(-4.e-6*t2801*t768 - 1.*t2815*t768 + t2809*t984))*var3[6] + (-1.*t2238*t524*t545 + t2791*t634 + t2935*t658 + 0.14871*(t1091*t2944 + 4.e-6*t1042*t2974 + 4.e-6*t2962*t768) - 0.03875*(4.e-6*t1042*t2944 + t2974*t713 + t2962*t768) + t2944*t786 + t2962*t923 + t2974*t977 + 0.80321*(-4.e-6*t2944*t768 - 1.*t2974*t768 + t2962*t984))*var3[7] + (t1212*t3066 + t1245*t3083 + t1329*t3095 - 0.03875*(t3126 + t3135 + t3095*t713) + 0.14871*(4.e-6*t3095*t713 - 4.e-6*t3066*t768 - 1.6e-11*t3083*t768) + 0.80321*(-1.*t3066*t713 - 4.e-6*t3083*t713 - 1.000000000016*t3095*t768))*var3[8] + 5.*t283*t446*var4[1] + 20.*t232*t414*t420*var4[11] - 5.*t283*t446*var4[11] + 30.*t330*t369*t370*var4[21] - 20.*t232*t414*t420*var4[21] + 20.*t253*t269*t304*var4[31] - 30.*t330*t369*t370*var4[31] + 5.*t105*t233*var4[41] - 20.*t253*t269*t304*var4[41] - 5.*t105*t233*var4[51];
  p_output1[2]=var3[2] + (t1543*t2563 + t1580*t2770 + t1643*t2791 + t1675*t2935 - 1.*t2035*t2238*t545 + 0.14871*(4.e-6*t1042*t3066 + t1091*t3083 + 4.e-6*t3095*t768) - 0.03875*(4.e-6*t1042*t3083 + t3066*t713 + t3095*t768) + t3083*t786 + t3095*t923 + t3066*t977 + 0.80321*(t3126 + t3135 + t3095*t984))*var3[3] + (t1643*t3237 + t1675*t3259 - 1.*t2035*t2361*t487 + t1543*t2361*t545*t554 - 1.*t1580*t2361*t545*t573 + 0.14871*(t1091*t3303 + 4.e-6*t1042*t3349 + 4.e-6*t3325*t768) - 0.03875*(4.e-6*t1042*t3303 + t3349*t713 + t3325*t768) + t3303*t786 + t3325*t923 + t3349*t977 + 0.80321*(-4.e-6*t3303*t768 - 1.*t3349*t768 + t3325*t984))*var3[4] + (t1543*t2381 + t1580*t3420 + t1643*t3426 + t1675*t3448 + 0.14871*(t1091*t3455 + 4.e-6*t1042*t3487 + 4.e-6*t3466*t768) - 0.03875*(4.e-6*t1042*t3455 + t3487*t713 + t3466*t768) + t3455*t786 + t3466*t923 + t3487*t977 + 0.80321*(-4.e-6*t3455*t768 - 1.*t3487*t768 + t3466*t984))*var3[5] + (t1907*t3420 + t1928*t3552 + t1643*t3568 + t1675*t3582 + 0.14871*(t1091*t3597 + 4.e-6*t1042*t3621 + 4.e-6*t3610*t768) - 0.03875*(4.e-6*t1042*t3597 + t3621*t713 + t3610*t768) + t3597*t786 + t3610*t923 + t3621*t977 + 0.80321*(-4.e-6*t3597*t768 - 1.*t3621*t768 + t3610*t984))*var3[6] + (t2361*t524*t545 + t3582*t634 + t3723*t658 + 0.14871*(t1091*t3751 + 4.e-6*t1042*t3800 + 4.e-6*t3779*t768) - 0.03875*(4.e-6*t1042*t3751 + t3800*t713 + t3779*t768) + t3751*t786 + t3779*t923 + t3800*t977 + 0.80321*(-4.e-6*t3751*t768 - 1.*t3800*t768 + t3779*t984))*var3[7] + (t1212*t3873 + t1245*t3898 + t1329*t3918 - 0.03875*(t3918*t713 - 1.*t3873*t768 - 4.e-6*t3898*t768) + 0.14871*(4.e-6*t3918*t713 - 4.e-6*t3873*t768 - 1.6e-11*t3898*t768) + 0.80321*(-1.*t3873*t713 - 4.e-6*t3898*t713 - 1.000000000016*t3918*t768))*var3[8] + 5.*t283*t446*var4[2] + 20.*t232*t414*t420*var4[12] - 5.*t283*t446*var4[12] + 30.*t330*t369*t370*var4[22] - 20.*t232*t414*t420*var4[22] + 20.*t253*t269*t304*var4[32] - 30.*t330*t369*t370*var4[32] + 5.*t105*t233*var4[42] - 20.*t253*t269*t304*var4[42] - 5.*t105*t233*var4[52];
  p_output1[3]=var3[0] + (t4957*t5178 + t4929*t5201 + t4641*t5226 + t4575*t5247 + t4524*t5263 - 0.80315*(t4714*t5226 + t4702*t5247 + t4684*t5263) - 0.038576*(t4768*t5226 + t4760*t5247 + t4738*t5263) - 0.148715*(t4799*t5226 + t4786*t5247 + t4782*t5263) + t5138*t545 + t4832*t487*t554 - 1.*t4863*t487*t573)*var3[4] + (t4933 + t4977 + t5010 + t5021 + t5033 + t5044 + t5066 + t5083 - 1.*t4863*t545*t554 - 1.*t4832*t545*t573)*var3[5] + (t4933 + t4977 + t5010 + t5021 + t5033 + t5044 + t5066 + t5083 - 1.*t5110*t545*t554 + t5094*t545*t573)*var3[15] + (t4161*t4435 + t4176*t4464 + t4524*t4545 + t4575*t4597 + t4641*t4677 - 0.80315*(t4545*t4684 + t4597*t4702 + t4677*t4714) - 0.038576*(t4545*t4738 + t4597*t4760 + t4677*t4768) - 0.148715*(t4545*t4782 + t4597*t4786 + t4677*t4799) + t4407*t487)*var3[16] + (t4103*t4181 + t4207*t4253 + t4288*t4314 - 0.80315*(-1.000000000016*t4087*t4181 + t4253*t4324 + t4314*t4329) - 0.038576*(-1.000000000049*t4087*t4253 + t4181*t4336 + t4314*t4342) - 0.148715*(-6.5e-11*t4087*t4314 + t4181*t4352 + t4253*t4356))*var3[17] + 5.*t283*t446*var4[3] + 20.*t232*t414*t420*var4[13] - 5.*t283*t446*var4[13] + 30.*t330*t369*t370*var4[23] - 20.*t232*t414*t420*var4[23] + 20.*t253*t269*t304*var4[33] - 30.*t330*t369*t370*var4[33] + 5.*t105*t233*var4[43] - 20.*t253*t269*t304*var4[43] - 5.*t105*t233*var4[53];
  p_output1[4]=var3[1] + (t2370*t4832 + t2381*t4863 - 1.*t2361*t5138*t545 + t4957*t5510 + t4929*t5525 + t4641*t5541 + t4575*t5566 + t4524*t5583 - 0.80315*(t4714*t5541 + t4702*t5566 + t4684*t5583) - 0.038576*(t4768*t5541 + t4760*t5566 + t4738*t5583) - 0.148715*(t4799*t5541 + t4786*t5566 + t4782*t5583))*var3[3] + (t2238*t487*t5138 + t4957*t5361 + t4929*t5374 + t4641*t5389 + t4575*t5428 + t4524*t5443 - 0.80315*(t4714*t5389 + t4702*t5428 + t4684*t5443) - 0.038576*(t4768*t5389 + t4760*t5428 + t4738*t5443) - 0.148715*(t4799*t5389 + t4786*t5428 + t4782*t5443) - 1.*t2238*t4832*t545*t554 + t2238*t4863*t545*t573)*var3[4] + (t2550*t4832 + t2563*t4863 + t4929*t5661 + t4957*t5671 + t4524*t5698 + t4575*t5724 + t4641*t5745 - 0.80315*(t4684*t5698 + t4702*t5724 + t4714*t5745) - 0.038576*(t4738*t5698 + t4760*t5724 + t4768*t5745) - 0.148715*(t4782*t5698 + t4786*t5724 + t4799*t5745))*var3[5] + (t2770*t5094 + t2563*t5110 + t4929*t5807 + t4957*t5819 + t4524*t5827 + t4575*t5849 + t4641*t5854 - 0.80315*(t4684*t5827 + t4702*t5849 + t4714*t5854) - 0.038576*(t4738*t5827 + t4760*t5849 + t4768*t5854) - 0.148715*(t4782*t5827 + t4786*t5849 + t4799*t5854))*var3[15] + (-1.*t2238*t4407*t545 + t4435*t5807 + t4464*t5920 + t4524*t6045 + t4575*t6060 + t4641*t6084 - 0.80315*(t4684*t6045 + t4702*t6060 + t4714*t6084) - 0.038576*(t4738*t6045 + t4760*t6060 + t4768*t6084) - 0.148715*(t4782*t6045 + t4786*t6060 + t4799*t6084))*var3[16] + (t4103*t5930 + t4207*t5938 + t4288*t5953 - 0.148715*(t4352*t5930 + t4356*t5938 - 6.5e-11*t4087*t5953) - 0.80315*(-1.000000000016*t4087*t5930 + t4324*t5938 + t4329*t5953) - 0.038576*(t4336*t5930 - 1.000000000049*t4087*t5938 + t4342*t5953))*var3[17] + 5.*t283*t446*var4[4] + 20.*t232*t414*t420*var4[14] - 5.*t283*t446*var4[14] + 30.*t330*t369*t370*var4[24] - 20.*t232*t414*t420*var4[24] + 20.*t253*t269*t304*var4[34] - 30.*t330*t369*t370*var4[34] + 5.*t105*t233*var4[44] - 20.*t253*t269*t304*var4[44] - 5.*t105*t233*var4[54];
  p_output1[5]=var3[2] + (t2563*t4832 + t2770*t4863 - 1.*t2238*t5138*t545 + t4957*t5807 + t4929*t5920 + t4641*t5930 + t4575*t5938 + t4524*t5953 - 0.80315*(t4714*t5930 + t4702*t5938 + t4684*t5953) - 0.038576*(t4768*t5930 + t4760*t5938 + t4738*t5953) - 0.148715*(t4799*t5930 + t4786*t5938 + t4782*t5953))*var3[3] + (-1.*t2361*t487*t5138 + t2361*t4832*t545*t554 - 1.*t2361*t4863*t545*t573 + t4957*t6209 + t4929*t6226 + t4641*t6246 + t4575*t6255 + t4524*t6262 - 0.80315*(t4714*t6246 + t4702*t6255 + t4684*t6262) - 0.038576*(t4768*t6246 + t4760*t6255 + t4738*t6262) - 0.148715*(t4799*t6246 + t4786*t6255 + t4782*t6262))*var3[4] + (t2381*t4832 + t3420*t4863 + t4929*t6358 + t4957*t6367 + t4524*t6386 + t4575*t6396 + t4641*t6411 - 0.80315*(t4684*t6386 + t4702*t6396 + t4714*t6411) - 0.038576*(t4738*t6386 + t4760*t6396 + t4768*t6411) - 0.148715*(t4782*t6386 + t4786*t6396 + t4799*t6411))*var3[5] + (t3552*t5094 + t3420*t5110 + t4929*t6455 + t4957*t6460 + t4524*t6466 + t4575*t6472 + t4641*t6480 - 0.80315*(t4684*t6466 + t4702*t6472 + t4714*t6480) - 0.038576*(t4738*t6466 + t4760*t6472 + t4768*t6480) - 0.148715*(t4782*t6466 + t4786*t6472 + t4799*t6480))*var3[15] + (t2361*t4407*t545 + t4435*t6455 + t4464*t6541 + t4524*t6635 + t4575*t6647 + t4641*t6656 - 0.80315*(t4684*t6635 + t4702*t6647 + t4714*t6656) - 0.038576*(t4738*t6635 + t4760*t6647 + t4768*t6656) - 0.148715*(t4782*t6635 + t4786*t6647 + t4799*t6656))*var3[16] + (t4103*t6549 + t4207*t6566 + t4288*t6581 - 0.148715*(t4352*t6549 + t4356*t6566 - 6.5e-11*t4087*t6581) - 0.80315*(-1.000000000016*t4087*t6549 + t4324*t6566 + t4329*t6581) - 0.038576*(t4336*t6549 - 1.000000000049*t4087*t6566 + t4342*t6581))*var3[17] + 5.*t283*t446*var4[5] + 20.*t232*t414*t420*var4[15] - 5.*t283*t446*var4[15] + 30.*t330*t369*t370*var4[25] - 20.*t232*t414*t420*var4[25] + 20.*t253*t269*t304*var4[35] - 30.*t330*t369*t370*var4[35] + 5.*t105*t233*var4[45] - 20.*t253*t269*t304*var4[45] - 5.*t105*t233*var4[55];
  p_output1[6]=var3[1] + (-0.002264*t2370 + 0.00183*t2381 + 0.024028*t2361*t545)*var3[3] + (-0.024028*t2238*t487 + 0.002264*t2238*t545*t554 + 0.00183*t2238*t545*t573)*var3[4] + (-0.002264*t2550 + 0.00183*t2563)*var3[5] + 5.*t283*t446*var4[6] + 20.*t232*t414*t420*var4[16] - 5.*t283*t446*var4[16] + 30.*t330*t369*t370*var4[26] - 20.*t232*t414*t420*var4[26] + 20.*t253*t269*t304*var4[36] - 30.*t330*t369*t370*var4[36] + 5.*t105*t233*var4[46] - 20.*t253*t269*t304*var4[46] - 5.*t105*t233*var4[56];
  p_output1[7]=var3[2] + (-0.002264*t2563 + 0.00183*t2770 + 0.024028*t2238*t545)*var3[3] + (0.024028*t2361*t487 - 0.002264*t2361*t545*t554 - 0.00183*t2361*t545*t573)*var3[4] + (-0.002264*t2381 + 0.00183*t3420)*var3[5] + 5.*t283*t446*var4[7] + 20.*t232*t414*t420*var4[17] - 5.*t283*t446*var4[17] + 30.*t330*t369*t370*var4[27] - 20.*t232*t414*t420*var4[27] + 20.*t253*t269*t304*var4[37] - 30.*t330*t369*t370*var4[37] + 5.*t105*t233*var4[47] - 20.*t253*t269*t304*var4[47] - 5.*t105*t233*var4[57];
  p_output1[8]=t2381*t545*t573*t6941*var3[3] + (-1.*t2550*t487*t573*t6941 + t2238*t6917*t6920*t6941)*var3[4] + (-1.*t2550*t545*t554*t6941 + t2563*t545*t573*t6941)*var3[5] + 5.*t283*t446*var4[8] + 20.*t232*t414*t420*var4[18] - 5.*t283*t446*var4[18] + 30.*t330*t369*t370*var4[28] - 20.*t232*t414*t420*var4[28] + 20.*t253*t269*t304*var4[38] - 30.*t330*t369*t370*var4[38] + 5.*t105*t233*var4[48] - 20.*t253*t269*t304*var4[48] - 5.*t105*t233*var4[58];
  p_output1[9]=(0.15121*(t2770*t6991 + t2563*t7001) - 0.15121*(t2563*t6991 - 1.*t2770*t7001) + t2770*t7004 + 0.15121*(t2770*t7008 + t2563*t7012) - 0.15121*(t2563*t7008 - 1.*t2770*t7012) - 1.*t2770*t7016 + t2563*t7024 - 1.*t2563*t7029)*var3[3] + (0.15121*(-1.*t2361*t545*t573*t6991 + t2361*t545*t554*t7001) - 0.15121*(t2361*t545*t554*t6991 + t2361*t545*t573*t7001) - 1.*t2361*t545*t573*t7004 + 0.15121*(-1.*t2361*t545*t573*t7008 + t2361*t545*t554*t7012) - 0.15121*(t2361*t545*t554*t7008 + t2361*t545*t573*t7012) + t2361*t545*t573*t7016 + t2361*t545*t554*t7024 - 1.*t2361*t545*t554*t7029)*var3[4] + (t3420*t7004 - 1.*t3420*t7016 + t2381*t7024 - 1.*t2381*t7029 + 0.15121*(t2381*t7001 + t7077) - 0.15121*(t2381*t6991 + t7083) + 0.15121*(t2381*t7012 + t7115) - 0.15121*(t2381*t7008 + t7128))*var3[5] + (t3552*(0.15121*t7001 + t7068) + t3420*(t7002 + t7068) + 0.15121*(-1.*t3552*t7001 + t7077) - 0.15121*(-1.*t3552*t6991 + t7083))*var3[9] + (0.15121*(-1.*t3552*t7012 + t7115) - 0.15121*(-1.*t3552*t7008 + t7128) - 1.*t3552*(-0.15121*t7012 + t7151) - 1.*t3420*(t7013 + t7151))*var3[12] + 5.*t283*t446*var4[9] + 20.*t232*t414*t420*var4[19] - 5.*t283*t446*var4[19] + 30.*t330*t369*t370*var4[29] - 20.*t232*t414*t420*var4[29] + 20.*t253*t269*t304*var4[39] - 30.*t330*t369*t370*var4[39] + 5.*t105*t233*var4[49] - 20.*t253*t269*t304*var4[49] - 5.*t105*t233*var4[59];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4,*var5,*var6,*var7;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 7)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Seven input(s) required (var1,var2,var3,var4,var5,var6,var7).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 60 && ncols == 1) && 
      !(mrows == 1 && ncols == 60))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }
  mrows = mxGetM(prhs[4]);
  ncols = mxGetN(prhs[4]);
  if( !mxIsDouble(prhs[4]) || mxIsComplex(prhs[4]) ||
    ( !(mrows == 2 && ncols == 1) && 
      !(mrows == 1 && ncols == 2))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var5 is wrong.");
    }
  mrows = mxGetM(prhs[5]);
  ncols = mxGetN(prhs[5]);
  if( !mxIsDouble(prhs[5]) || mxIsComplex(prhs[5]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var6 is wrong.");
    }
  mrows = mxGetM(prhs[6]);
  ncols = mxGetN(prhs[6]);
  if( !mxIsDouble(prhs[6]) || mxIsComplex(prhs[6]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var7 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
  var5 = mxGetPr(prhs[4]);
  var6 = mxGetPr(prhs[5]);
  var7 = mxGetPr(prhs[6]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 10, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4,var5,var6,var7);


}

#else // MATLAB_MEX_FILE

#include "d1y_position_TrotStance1.hh"

namespace TrotStance1
{

void d1y_position_TrotStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4,const double *var5,const double *var6,const double *var7)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4, var5, var6, var7);

}

}

#endif // MATLAB_MEX_FILE
