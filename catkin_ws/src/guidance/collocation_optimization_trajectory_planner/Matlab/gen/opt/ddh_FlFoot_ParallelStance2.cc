/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:14 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t318;
  double t354;
  double t485;
  double t607;
  double t619;
  double t629;
  double t346;
  double t804;
  double t1060;
  double t1061;
  double t1158;
  double t1295;
  double t1652;
  double t1788;
  double t995;
  double t1007;
  double t1021;
  double t1409;
  double t1561;
  double t1631;
  double t1950;
  double t1951;
  double t1959;
  double t1964;
  double t1809;
  double t1811;
  double t1816;
  double t1817;
  double t1891;
  double t1912;
  double t2469;
  double t2200;
  double t2228;
  double t2318;
  double t2321;
  double t2007;
  double t2010;
  double t2011;
  double t2058;
  double t2079;
  double t2115;
  double t2917;
  double t2928;
  double t2519;
  double t1633;
  double t1635;
  double t2351;
  double t2362;
  double t1947;
  double t2545;
  double t1960;
  double t2118;
  double t3722;
  double t3921;
  double t3976;
  double t4050;
  double t4059;
  double t1670;
  double t1672;
  double t1754;
  double t4168;
  double t4216;
  double t4261;
  double t4265;
  double t4305;
  double t4308;
  double t4339;
  double t4349;
  double t4366;
  double t4371;
  double t4423;
  double t1026;
  double t1159;
  double t1313;
  double t4478;
  double t4482;
  double t4520;
  double t4272;
  double t4364;
  double t4456;
  double t4468;
  double t4617;
  double t4648;
  double t4655;
  double t4669;
  double t4672;
  double t4581;
  double t4592;
  double t4599;
  double t4604;
  double t4529;
  double t4536;
  double t4542;
  double t4546;
  double t4670;
  double t4678;
  double t4686;
  double t4735;
  double t3423;
  double t3460;
  double t3461;
  double t3491;
  double t3494;
  double t3553;
  double t3562;
  double t3583;
  double t3585;
  double t3975;
  double t4097;
  double t4150;
  double t4474;
  double t4554;
  double t4558;
  double t4559;
  double t4573;
  double t4605;
  double t4606;
  double t4736;
  double t4741;
  double t4743;
  double t4746;
  double t4802;
  double t4806;
  double t4814;
  double t4856;
  double t4902;
  double t4963;
  double t4969;
  double t4980;
  double t4993;
  double t4995;
  double t4996;
  double t5045;
  double t5052;
  double t5058;
  double t5065;
  double t5066;
  double t5072;
  double t5075;
  double t5033;
  double t5060;
  double t5063;
  double t5078;
  double t5081;
  double t5090;
  double t5091;
  double t5093;
  double t5094;
  double t5112;
  double t5119;
  double t5123;
  double t5124;
  double t5125;
  double t5139;
  double t5142;
  double t5147;
  double t5148;
  double t5152;
  double t5154;
  double t5156;
  double t5158;
  double t5162;
  double t5176;
  double t5178;
  double t647;
  double t927;
  double t5221;
  double t5228;
  double t5229;
  double t5239;
  double t5240;
  double t5245;
  double t5206;
  double t5210;
  double t5218;
  double t5232;
  double t5233;
  double t5234;
  double t5236;
  double t5250;
  double t5255;
  double t5265;
  double t5278;
  double t5281;
  double t5283;
  double t5286;
  double t5287;
  double t5296;
  double t5298;
  double t5299;
  double t5301;
  double t5307;
  double t5310;
  double t5313;
  double t5314;
  double t5318;
  double t5321;
  double t5324;
  double t5325;
  double t5326;
  double t5337;
  double t5339;
  double t5340;
  double t5343;
  double t5351;
  double t5358;
  double t5361;
  double t5476;
  double t5490;
  double t5497;
  double t5416;
  double t5424;
  double t5465;
  double t5500;
  double t5501;
  double t5504;
  double t5522;
  double t5524;
  double t5527;
  double t5369;
  double t5387;
  double t5409;
  double t5473;
  double t5520;
  double t5521;
  double t5528;
  double t5530;
  double t5531;
  double t5532;
  double t5534;
  double t5535;
  double t5536;
  double t5539;
  double t5540;
  double t5569;
  double t5571;
  double t5574;
  double t5576;
  double t5581;
  double t5586;
  double t5590;
  double t5597;
  double t5600;
  double t5562;
  double t5563;
  double t5564;
  double t5558;
  double t5559;
  double t5561;
  double t5568;
  double t5587;
  double t5589;
  double t5603;
  double t5608;
  double t5613;
  double t5614;
  double t5615;
  double t5616;
  double t5617;
  double t5618;
  double t5620;
  double t5626;
  double t5632;
  double t5634;
  double t5635;
  double t5636;
  double t5637;
  double t5643;
  double t5645;
  double t5691;
  double t5692;
  double t5670;
  double t5671;
  double t5672;
  double t5674;
  double t5697;
  double t5698;
  double t5699;
  double t5679;
  double t5682;
  double t5683;
  double t5743;
  double t5746;
  double t5724;
  double t5725;
  double t5763;
  double t5764;
  double t5765;
  double t5756;
  double t5757;
  double t5760;
  double t5786;
  double t5788;
  double t5789;
  double t5754;
  double t5762;
  double t5727;
  double t5731;
  double t5737;
  double t5779;
  double t5800;
  double t5844;
  double t5845;
  double t5870;
  double t5874;
  double t5875;
  double t5897;
  double t5899;
  double t5866;
  double t5881;
  double t5857;
  double t5858;
  double t5889;
  double t5901;
  double t6002;
  double t6008;
  double t6009;
  double t6052;
  double t6054;
  double t6055;
  double t6216;
  double t6219;
  double t6221;
  double t6191;
  double t6193;
  double t6195;
  double t6198;
  double t6204;
  double t6112;
  double t6115;
  double t6122;
  double t6124;
  double t6168;
  double t6174;
  double t6179;
  double t6181;
  double t6184;
  double t6187;
  double t6144;
  double t6153;
  double t6155;
  double t6156;
  double t6161;
  double t6163;
  double t6104;
  double t6107;
  double t6108;
  double t6128;
  double t6129;
  double t6131;
  double t6132;
  double t6223;
  double t6224;
  double t6226;
  double t6164;
  double t6222;
  double t6279;
  double t6285;
  double t6362;
  double t6364;
  double t6365;
  double t6337;
  double t6354;
  double t6358;
  double t6252;
  double t6256;
  double t6257;
  double t6266;
  double t6286;
  double t6287;
  double t6288;
  double t6303;
  double t6305;
  double t6306;
  double t6311;
  double t6316;
  double t6317;
  double t6300;
  double t6301;
  double t6309;
  double t6320;
  double t6321;
  double t6430;
  double t6433;
  double t6437;
  double t6450;
  double t6451;
  double t6452;
  double t6379;
  double t6380;
  double t6381;
  double t6386;
  double t6387;
  double t6389;
  double t6405;
  double t6407;
  double t6416;
  double t6419;
  double t6420;
  double t6421;
  double t6538;
  double t6539;
  double t6540;
  double t6520;
  double t6522;
  double t6523;
  double t6508;
  double t6510;
  double t6514;
  double t6549;
  double t6550;
  double t6551;
  double t6519;
  double t6544;
  double t6525;
  double t6529;
  double t6536;
  double t6584;
  double t6589;
  double t6594;
  double t6651;
  double t6653;
  double t6660;
  double t6582;
  double t6583;
  double t6617;
  double t6618;
  double t6621;
  double t6601;
  double t6603;
  double t6604;
  double t6674;
  double t6677;
  double t6678;
  double t6738;
  double t6740;
  double t6748;
  double t6751;
  double t6754;
  double t6757;
  double t6760;
  double t6764;
  double t6765;
  double t6780;
  double t6781;
  double t6782;
  double t6784;
  double t6730;
  double t6731;
  double t6732;
  double t6749;
  double t6758;
  double t6768;
  double t6771;
  double t6773;
  double t6775;
  double t6776;
  double t6777;
  double t6821;
  double t6823;
  double t6824;
  double t6829;
  double t6830;
  double t6832;
  double t6840;
  double t6841;
  double t6842;
  double t6843;
  double t6723;
  double t6728;
  double t6734;
  double t6735;
  double t6736;
  double t6779;
  double t6798;
  double t6800;
  double t6893;
  double t6894;
  double t6895;
  double t6889;
  double t6890;
  double t6891;
  double t6791;
  double t6792;
  double t6794;
  double t6795;
  double t6801;
  double t6804;
  double t6863;
  double t6864;
  double t6869;
  double t6874;
  double t6876;
  double t6878;
  double t6858;
  double t6859;
  double t6861;
  double t6870;
  double t6879;
  double t6880;
  double t6925;
  double t6929;
  double t6931;
  double t6935;
  double t6936;
  double t6938;
  double t6911;
  double t6912;
  double t6914;
  double t6917;
  double t6918;
  double t6919;
  double t6954;
  double t6960;
  double t6963;
  double t6948;
  double t6949;
  double t6951;
  double t6972;
  double t6973;
  double t6975;
  double t6953;
  double t6981;
  double t6982;
  double t6984;
  double t6979;
  double t6980;
  double t7001;
  double t7002;
  double t7003;
  double t6995;
  double t6996;
  double t6997;
  double t7008;
  double t7010;
  double t7011;
  double t685;
  double t954;
  double t7039;
  double t7040;
  double t7041;
  double t7043;
  double t7044;
  double t7046;
  double t1332;
  double t1636;
  double t1761;
  double t7051;
  double t7052;
  double t7053;
  double t7055;
  double t7056;
  double t7058;
  double t1976;
  double t2000;
  double t2119;
  double t2139;
  double t2398;
  double t2431;
  double t7062;
  double t7063;
  double t7064;
  double t7066;
  double t7075;
  double t7076;
  double t7077;
  double t7078;
  double t7070;
  double t7071;
  double t7072;
  double t7073;
  double t7102;
  double t7105;
  double t7106;
  double t7107;
  double t7109;
  double t7110;
  double t7111;
  double t7112;
  double t7113;
  double t7115;
  double t7116;
  double t7117;
  double t7118;
  double t6826;
  double t7125;
  double t7126;
  double t7127;
  double t7131;
  double t7133;
  double t7134;
  double t7135;
  double t7122;
  double t7124;
  double t7128;
  double t7136;
  double t7137;
  double t7138;
  double t7139;
  double t7142;
  double t7143;
  double t7146;
  double t7147;
  double t7148;
  double t7151;
  double t7152;
  double t7154;
  double t7156;
  double t7159;
  double t7161;
  double t7172;
  double t7173;
  double t7174;
  double t7176;
  double t7177;
  double t7178;
  double t7179;
  double t7183;
  double t7184;
  double t7189;
  double t7190;
  double t7191;
  double t7195;
  double t7196;
  double t7197;
  double t7201;
  double t7202;
  double t7203;
  double t7204;
  double t7205;
  double t7207;
  double t7208;
  double t7209;
  double t7210;
  double t7261;
  double t7262;
  double t7272;
  double t7275;
  double t7318;
  double t7320;
  double t7327;
  double t7330;
  double t6072;
  double t6073;
  double t6077;
  double t6032;
  double t6038;
  double t6041;
  double t7399;
  double t7410;
  double t7424;
  double t7430;
  double t6692;
  double t6693;
  double t6703;
  double t7460;
  double t7463;
  double t6640;
  double t6641;
  double t6642;
  double t6302;
  double t6323;
  double t6328;
  double t7472;
  double t7477;
  double t7547;
  double t7548;
  double t7551;
  double t7553;
  double t7556;
  double t7557;
  double t7562;
  double t7565;
  double t7568;
  double t7569;
  double t7521;
  double t7534;
  double t7538;
  double t7019;
  double t7020;
  double t7022;
  double t7605;
  double t6862;
  double t6882;
  double t6884;
  double t7610;
  double t7615;
  double t7662;
  double t7666;
  double t7668;
  double t7673;
  double t7674;
  double t7675;
  double t7694;
  double t7695;
  double t7696;
  double t7700;
  double t7701;
  double t7702;
  double t7678;
  double t7680;
  double t7683;
  double t7685;
  double t7686;
  double t7687;
  double t7712;
  double t7713;
  double t7714;
  double t7715;
  double t7722;
  double t7723;
  double t7724;
  double t7725;
  double t7717;
  double t7718;
  double t7719;
  double t7720;
  double t7749;
  double t7750;
  double t7751;
  double t7752;
  double t7753;
  double t7754;
  double t7756;
  double t7757;
  double t7758;
  double t7759;
  double t7760;
  double t7761;
  double t7762;
  double t7767;
  double t7768;
  double t7769;
  double t7770;
  double t7772;
  double t7773;
  double t7775;
  double t7765;
  double t7766;
  double t7771;
  double t7776;
  double t7777;
  double t7780;
  double t7781;
  double t7782;
  double t7784;
  double t7787;
  double t7788;
  double t7789;
  double t7790;
  double t7791;
  double t7792;
  double t7793;
  double t7794;
  double t7796;
  double t7803;
  double t7805;
  double t7806;
  double t7808;
  double t7809;
  double t7810;
  double t7811;
  double t7815;
  double t7816;
  double t7819;
  double t7821;
  double t7822;
  double t7825;
  double t7826;
  double t7827;
  double t7828;
  double t7829;
  double t7830;
  double t7870;
  double t7871;
  double t7883;
  double t7887;
  double t7953;
  double t7961;
  double t7969;
  double t7971;
  double t8129;
  double t8136;
  double t8148;
  double t8150;
  double t8190;
  double t8194;
  double t8203;
  double t8204;
  double t8287;
  double t8290;
  double t8294;
  double t8296;
  double t8299;
  double t8300;
  double t8301;
  double t8310;
  double t8311;
  double t8312;
  double t8315;
  double t8316;
  double t8317;
  double t8254;
  double t8260;
  double t8268;
  double t8272;
  double t8354;
  double t8357;
  double t8364;
  double t8365;
  t318 = Cos(var1[4]);
  t354 = Cos(var1[6]);
  t485 = -1.*t354;
  t607 = 1. + t485;
  t619 = 0.15121*t607;
  t629 = Sin(var1[6]);
  t346 = Sin(var1[5]);
  t804 = Cos(var1[5]);
  t1060 = Cos(var1[7]);
  t1061 = -1.*t1060;
  t1158 = 1. + t1061;
  t1295 = Sin(var1[7]);
  t1652 = Sin(var1[4]);
  t1788 = -1. + t1060;
  t995 = -1.*t318*t354*t346;
  t1007 = -1.*t318*t804*t629;
  t1021 = t995 + t1007;
  t1409 = t318*t804*t354;
  t1561 = -1.*t318*t346*t629;
  t1631 = t1409 + t1561;
  t1950 = Cos(var1[8]);
  t1951 = -1.*t1950;
  t1959 = 1. + t1951;
  t1964 = Sin(var1[8]);
  t1809 = 4.e-6*t1788*t1652;
  t1811 = 1.6e-11*t1788;
  t1816 = 1. + t1811;
  t1817 = t1816*t1021;
  t1891 = 4.e-6*t1631*t1295;
  t1912 = t1809 + t1817 + t1891;
  t2469 = -1. + t1950;
  t2200 = t1060*t1652;
  t2228 = 4.e-6*t1788*t1021;
  t2318 = t1631*t1295;
  t2321 = t2200 + t2228 + t2318;
  t2007 = -1.000000000016*t1158;
  t2010 = 1. + t2007;
  t2011 = t2010*t1631;
  t2058 = -1.*t1652*t1295;
  t2079 = -4.e-6*t1021*t1295;
  t2115 = t2011 + t2058 + t2079;
  t2917 = -1.000000000016*t1959;
  t2928 = 1. + t2917;
  t2519 = 1.6e-11*t2469;
  t1633 = 0.281210000008499*t1158;
  t1635 = 0.03874900000062*t1295;
  t2351 = 5.136e-14*var1[8];
  t2362 = -0.03874900000062*t1959;
  t1947 = -1.284e-8*var1[8];
  t2545 = 1. + t2519;
  t1960 = -1.5499600000248e-7*t1959;
  t2118 = 0.503210000016051*t1959;
  t3722 = 1.6e-11*t1959;
  t3921 = 1. + t3722 + t2519;
  t3976 = 4.e-6*t2469;
  t4050 = -4.e-6*t1950;
  t4059 = t3976 + t4050;
  t1670 = 4.9936e-13*var1[7];
  t1672 = -0.03874900000062*t1158;
  t1754 = 0.281210000004*t1295;
  t4168 = 5.9484e-7*t2469;
  t4216 = -0.03875*t1950;
  t4261 = -0.299999999992*t1964;
  t4265 = t2351 + t2362 + t4168 + t4216 + t4261;
  t4305 = 0.14871*t2545;
  t4308 = -1.55e-7*t2469;
  t4339 = -1.199999999968e-6*t1964;
  t4349 = t1947 + t4305 + t1960 + t4308 + t4339;
  t4366 = 0.80321*t2928;
  t4371 = -4.05159380016e-7*t1964;
  t4423 = t4366 + t2118 + t4371;
  t1026 = -1.2484e-7*var1[7];
  t1159 = -1.5499600000248e-7*t1158;
  t1313 = 1.124840000016e-6*t1295;
  t4478 = 4.e-6*t1788*t3921;
  t4482 = t1060*t4059;
  t4520 = t4478 + t4482;
  t4272 = t1295*t4265;
  t4364 = 4.e-6*t1295*t4349;
  t4456 = t2010*t4423;
  t4468 = t1633 + t1635 + t4272 + t4364 + t4456;
  t4617 = -1. + t3722;
  t4648 = 4.e-6*t4617;
  t4655 = 4.e-6*t1959;
  t4669 = t4648 + t4655;
  t4672 = t3722 + t1951;
  t4581 = 4.e-6*t1788*t4265;
  t4592 = t1816*t4349;
  t4599 = -4.e-6*t1295*t4423;
  t4604 = t1026 + t1159 + t1313 + t4581 + t4592 + t4599;
  t4529 = t1060*t4265;
  t4536 = 4.e-6*t1788*t4349;
  t4542 = -1.*t1295*t4423;
  t4546 = t1670 + t1672 + t1754 + t4529 + t4536 + t4542;
  t4670 = 4.e-6*t1788*t4669;
  t4678 = t1060*t4672;
  t4686 = 1.000000000016*t1295*t1964;
  t4735 = t4670 + t4678 + t4686;
  t3423 = -4.e-6*t2928*t1295;
  t3460 = -4.e-6*t1816*t1964;
  t3461 = -4.e-6*t1788*t1964;
  t3491 = t3423 + t3460 + t3461;
  t3494 = -0.15121*t3491;
  t3553 = t2010*t2928;
  t3562 = -1.000000000016*t1295*t1964;
  t3583 = t3553 + t3562;
  t3585 = 0.15121*t3583;
  t3975 = 4.e-6*t3921*t1295;
  t4097 = t4059*t1295;
  t4150 = t3975 + t4097;
  t4474 = t4150*t4468;
  t4554 = t4520*t4546;
  t4558 = t1816*t3921;
  t4559 = 4.e-6*t1788*t4059;
  t4573 = t4558 + t4559;
  t4605 = t4573*t4604;
  t4606 = t4474 + t4554 + t4605;
  t4736 = t4606*t4735;
  t4741 = 4.e-6*t4669*t1295;
  t4743 = t4672*t1295;
  t4746 = -1.000000000016*t2010*t1964;
  t4802 = t4741 + t4743 + t4746;
  t4806 = -1.*t4468*t4802;
  t4814 = t1816*t4669;
  t4856 = 4.e-6*t1788*t4672;
  t4902 = 4.000000000064e-6*t1295*t1964;
  t4963 = t4814 + t4856 + t4902;
  t4969 = -1.*t4604*t4963;
  t4980 = -1.*t4546*t4735;
  t4993 = t4806 + t4969 + t4980;
  t4995 = t4520*t4993;
  t4996 = t3494 + t3585 + t4736 + t4995;
  t5045 = t4059*t4265;
  t5052 = t3921*t4349;
  t5058 = t5045 + t5052;
  t5065 = -1.*t4672*t4265;
  t5066 = -1.*t4669*t4349;
  t5072 = 1.000000000016*t4423*t1964;
  t5075 = t5065 + t5066 + t5072;
  t5033 = 0.038749*t2928;
  t5060 = t4669*t5058;
  t5063 = -0.281210000004*t1964;
  t5078 = t3921*t5075;
  t5081 = -1.*t4672*t5058;
  t5090 = -1.*t4059*t5075;
  t5091 = t5081 + t5090;
  t5093 = 4.e-6*t5091;
  t5094 = t5033 + t5060 + t5063 + t5078 + t5093;
  t5112 = -1.*t2928*t1295;
  t5119 = -1.6e-11*t1788*t1964;
  t5123 = -1.*t1060*t1964;
  t5124 = t5112 + t5119 + t5123;
  t5125 = t1652*t5124;
  t5139 = -1.*t629*t3491;
  t5142 = t354*t3583;
  t5147 = t5139 + t5142;
  t5148 = t804*t5147;
  t5152 = t354*t3491;
  t5154 = t629*t3583;
  t5156 = t5152 + t5154;
  t5158 = -1.*t346*t5156;
  t5162 = t5148 + t5158;
  t5176 = t318*t5162;
  t5178 = t5125 + t5176;
  t647 = -0.15121*t629;
  t927 = 0.15121*t629;
  t5221 = t629*t4468;
  t5228 = t354*t4604;
  t5229 = t619 + t647 + t5221 + t5228;
  t5239 = t354*t4468;
  t5240 = -1.*t629*t4604;
  t5245 = t619 + t927 + t5239 + t5240;
  t5206 = t354*t4573;
  t5210 = t629*t4150;
  t5218 = t5206 + t5210;
  t5232 = t5218*t5229;
  t5233 = -1.*t4573*t629;
  t5234 = t354*t4150;
  t5236 = t5233 + t5234;
  t5250 = t5236*t5245;
  t5255 = t5232 + t5250 + t4554;
  t5265 = t5255*t4735;
  t5278 = t629*t4802;
  t5281 = t354*t4963;
  t5283 = t5278 + t5281;
  t5286 = -1.*t5229*t5283;
  t5287 = t354*t4802;
  t5296 = -1.*t629*t4963;
  t5298 = t5287 + t5296;
  t5299 = -1.*t5245*t5298;
  t5301 = t4980 + t5286 + t5299;
  t5307 = t4520*t5301;
  t5310 = t5265 + t5307;
  t5313 = Sin(var1[3]);
  t5314 = t346*t5147;
  t5318 = t804*t5156;
  t5321 = t5314 + t5318;
  t5324 = t5313*t5321;
  t5325 = Cos(var1[3]);
  t5326 = t318*t5124;
  t5337 = -1.*t1652*t5162;
  t5339 = t5326 + t5337;
  t5340 = t5325*t5339;
  t5343 = t5324 + t5340;
  t5351 = t5325*t5321;
  t5358 = -1.*t5313*t5339;
  t5361 = t5351 + t5358;
  t5476 = t346*t5236;
  t5490 = t804*t5218;
  t5497 = t5476 + t5490;
  t5416 = -1.*t346*t5229;
  t5424 = t804*t5245;
  t5465 = t5416 + t5424;
  t5500 = t804*t5229;
  t5501 = t346*t5245;
  t5504 = t5500 + t5501;
  t5522 = t804*t5283;
  t5524 = t346*t5298;
  t5527 = t5522 + t5524;
  t5369 = t804*t5236;
  t5387 = -1.*t346*t5218;
  t5409 = t5369 + t5387;
  t5473 = t5409*t5465;
  t5520 = t5497*t5504;
  t5521 = t5473 + t5520 + t4554;
  t5528 = t5521*t5527;
  t5530 = -1.*t346*t5283;
  t5531 = t804*t5298;
  t5532 = t5530 + t5531;
  t5534 = -1.*t5465*t5532;
  t5535 = -1.*t5504*t5527;
  t5536 = t4980 + t5534 + t5535;
  t5539 = t5497*t5536;
  t5540 = t5528 + t5539;
  t5569 = t4520*t1652;
  t5571 = t318*t5409;
  t5574 = t5569 + t5571;
  t5576 = t318*t5465;
  t5581 = t1652*t4546;
  t5586 = t5576 + t5581;
  t5590 = t1652*t4735;
  t5597 = t318*t5532;
  t5600 = t5590 + t5597;
  t5562 = -1.*t1652*t5465;
  t5563 = t318*t4546;
  t5564 = t5562 + t5563;
  t5558 = t318*t4520;
  t5559 = -1.*t1652*t5409;
  t5561 = t5558 + t5559;
  t5568 = t5561*t5564;
  t5587 = t5574*t5586;
  t5589 = t5520 + t5568 + t5587;
  t5603 = t5589*t5600;
  t5608 = -1.*t5586*t5600;
  t5613 = t318*t4735;
  t5614 = -1.*t1652*t5532;
  t5615 = t5613 + t5614;
  t5616 = -1.*t5564*t5615;
  t5617 = t5535 + t5608 + t5616;
  t5618 = t5574*t5617;
  t5620 = t5603 + t5618;
  t5626 = -1.*t346*t5147;
  t5632 = -1.*t354*t3491;
  t5634 = -1.*t629*t3583;
  t5635 = t5632 + t5634;
  t5636 = t804*t5635;
  t5637 = t5626 + t5636;
  t5643 = t346*t5635;
  t5645 = t5148 + t5643;
  t5691 = -0.15121*t354;
  t5692 = t5691 + t927 + t5239 + t5240;
  t5670 = 0.15121*t354;
  t5671 = -1.*t629*t4468;
  t5672 = -1.*t354*t4604;
  t5674 = t5670 + t927 + t5671 + t5672;
  t5697 = -1.*t629*t4802;
  t5698 = -1.*t354*t4963;
  t5699 = t5697 + t5698;
  t5679 = -1.*t354*t4573;
  t5682 = -1.*t629*t4150;
  t5683 = t5679 + t5682;
  t5743 = t346*t5683;
  t5746 = t5369 + t5743;
  t5724 = t346*t5699;
  t5725 = t5724 + t5531;
  t5763 = t804*t5674;
  t5764 = -1.*t346*t5692;
  t5765 = t5763 + t5764;
  t5756 = t346*t5674;
  t5757 = t804*t5692;
  t5760 = t5756 + t5757;
  t5786 = t804*t5699;
  t5788 = -1.*t346*t5298;
  t5789 = t5786 + t5788;
  t5754 = t5746*t5504;
  t5762 = t5497*t5760;
  t5727 = -1.*t346*t5236;
  t5731 = t804*t5683;
  t5737 = t5727 + t5731;
  t5779 = -1.*t5504*t5725;
  t5800 = -1.*t5760*t5527;
  t5844 = -1.*t804*t5156;
  t5845 = t5626 + t5844;
  t5870 = -1.*t804*t5229;
  t5874 = -1.*t346*t5245;
  t5875 = t5870 + t5874;
  t5897 = -1.*t804*t5283;
  t5899 = t5897 + t5788;
  t5866 = t5497*t5465;
  t5881 = t5409*t5504;
  t5857 = -1.*t804*t5218;
  t5858 = t5727 + t5857;
  t5889 = -1.*t5504*t5532;
  t5901 = -1.*t5465*t5527;
  t6002 = -1.*t1652*t5124;
  t6008 = -1.*t318*t5162;
  t6009 = t6002 + t6008;
  t6052 = -1.*t318*t5465;
  t6054 = -1.*t1652*t4546;
  t6055 = t6052 + t6054;
  t6216 = -4.e-6*t3921*t1295;
  t6219 = -1.*t4059*t1295;
  t6221 = t6216 + t6219;
  t6191 = 0.03874900000062*t1060;
  t6193 = 0.281210000008499*t1295;
  t6195 = 4.e-6*t1060*t4349;
  t6198 = -1.000000000016*t1295*t4423;
  t6204 = t6191 + t6193 + t4529 + t6195 + t6198;
  t6112 = -4.e-6*t4669*t1295;
  t6115 = -1.*t4672*t1295;
  t6122 = 1.000000000016*t1060*t1964;
  t6124 = t6112 + t6115 + t6122;
  t6168 = 1.124840000016e-6*t1060;
  t6174 = -1.5499600000248e-7*t1295;
  t6179 = -4.e-6*t1295*t4265;
  t6181 = -1.6e-11*t1295*t4349;
  t6184 = -4.e-6*t1060*t4423;
  t6187 = -1.2484e-7 + t6168 + t6174 + t6179 + t6181 + t6184;
  t6144 = 0.281210000004*t1060;
  t6153 = -0.03874900000062*t1295;
  t6155 = -1.*t1295*t4265;
  t6156 = -4.e-6*t1295*t4349;
  t6161 = -1.*t1060*t4423;
  t6163 = 4.9936e-13 + t6144 + t6153 + t6155 + t6156 + t6161;
  t6104 = -1.000000000016*t2928*t1295;
  t6107 = -1.000000000016*t1060*t1964;
  t6108 = t6104 + t6107;
  t6128 = -4.e-6*t1060*t2928;
  t6129 = t6128 + t4902;
  t6131 = 4.e-6*t1060*t3921;
  t6132 = t6131 + t4482;
  t6223 = -1.6e-11*t3921*t1295;
  t6224 = -4.e-6*t4059*t1295;
  t6226 = t6223 + t6224;
  t6164 = t4520*t6163;
  t6222 = t6221*t4546;
  t6279 = -1.*t4546*t6124;
  t6285 = -1.*t6163*t4735;
  t6362 = t354*t6187;
  t6364 = t629*t6204;
  t6365 = t6362 + t6364;
  t6337 = -1.*t629*t6187;
  t6354 = t354*t6204;
  t6358 = t6337 + t6354;
  t6252 = -1.6e-11*t4669*t1295;
  t6256 = -4.e-6*t4672*t1295;
  t6257 = 4.000000000064e-6*t1060*t1964;
  t6266 = t6252 + t6256 + t6257;
  t6286 = 4.e-6*t1060*t4669;
  t6287 = 1.000000000032*t1295*t1964;
  t6288 = t6286 + t4678 + t6287;
  t6303 = t629*t6108;
  t6305 = t354*t6129;
  t6306 = t6303 + t6305;
  t6311 = t354*t6108;
  t6316 = -1.*t629*t6129;
  t6317 = t6311 + t6316;
  t6300 = -1.*t1060*t2928;
  t6301 = t6300 + t4686;
  t6309 = -1.*t346*t6306;
  t6320 = t804*t6317;
  t6321 = t6309 + t6320;
  t6430 = t804*t6306;
  t6433 = t346*t6317;
  t6437 = t6430 + t6433;
  t6450 = t318*t6301;
  t6451 = -1.*t1652*t6321;
  t6452 = t6450 + t6451;
  t6379 = t6132*t629;
  t6380 = t354*t6226;
  t6381 = t6379 + t6380;
  t6386 = t354*t6132;
  t6387 = -1.*t629*t6226;
  t6389 = t6386 + t6387;
  t6405 = -1.*t629*t6266;
  t6407 = t354*t6288;
  t6416 = t6405 + t6407;
  t6419 = t354*t6266;
  t6420 = t629*t6288;
  t6421 = t6419 + t6420;
  t6538 = t804*t6381;
  t6539 = t346*t6389;
  t6540 = t6538 + t6539;
  t6520 = t804*t6358;
  t6522 = -1.*t346*t6365;
  t6523 = t6520 + t6522;
  t6508 = t346*t6358;
  t6510 = t804*t6365;
  t6514 = t6508 + t6510;
  t6549 = t346*t6416;
  t6550 = t804*t6421;
  t6551 = t6549 + t6550;
  t6519 = t5497*t6514;
  t6544 = t6540*t5504;
  t6525 = -1.*t346*t6381;
  t6529 = t804*t6389;
  t6536 = t6525 + t6529;
  t6584 = t804*t6416;
  t6589 = -1.*t346*t6421;
  t6594 = t6584 + t6589;
  t6651 = t1652*t6221;
  t6653 = t318*t6536;
  t6660 = t6651 + t6653;
  t6582 = -1.*t6514*t5527;
  t6583 = -1.*t5504*t6551;
  t6617 = t318*t6523;
  t6618 = t1652*t6163;
  t6621 = t6617 + t6618;
  t6601 = -1.*t1652*t6523;
  t6603 = t318*t6163;
  t6604 = t6601 + t6603;
  t6674 = t1652*t6124;
  t6677 = t318*t6594;
  t6678 = t6674 + t6677;
  t6738 = -4.05159380016e-7*t1950;
  t6740 = -0.2999999999968*t1964;
  t6748 = t6738 + t6740;
  t6751 = -1.199999999968e-6*t1950;
  t6754 = 1.620637520064e-12*t1964;
  t6757 = -1.284e-8 + t6751 + t6754;
  t6760 = -0.299999999992*t1950;
  t6764 = 4.05159380016e-7*t1964;
  t6765 = 5.136e-14 + t6760 + t6764;
  t6780 = t2010*t6748;
  t6781 = 4.e-6*t1295*t6757;
  t6782 = t1295*t6765;
  t6784 = t6780 + t6781 + t6782;
  t6730 = 1.000000000016*t1950*t1295;
  t6731 = 1.6000000000256e-11*t1788*t1964;
  t6732 = t6730 + t6731 + t6122;
  t6749 = -4.e-6*t1295*t6748;
  t6758 = t1816*t6757;
  t6768 = 4.e-6*t1788*t6765;
  t6771 = t6749 + t6758 + t6768;
  t6773 = -1.*t1295*t6748;
  t6775 = 4.e-6*t1788*t6757;
  t6776 = t1060*t6765;
  t6777 = t6773 + t6775 + t6776;
  t6821 = t3921*t6757;
  t6823 = t4059*t6765;
  t6824 = t6821 + t6823;
  t6829 = 1.000000000016*t1950*t4423;
  t6830 = -1.*t4669*t6757;
  t6832 = -1.*t4672*t6765;
  t6840 = 1.000000000016*t6748*t1964;
  t6841 = -1.000000000016*t4265*t1964;
  t6842 = -4.000000000064e-6*t4349*t1964;
  t6843 = t6829 + t6830 + t6832 + t6840 + t6841 + t6842;
  t6723 = -1.000000000016*t1950*t1295;
  t6728 = t6723 + t4746;
  t6734 = -4.e-6*t1816*t1950;
  t6735 = -4.e-6*t1788*t1950;
  t6736 = t6734 + t6735 + t4902;
  t6779 = t4520*t6777;
  t6798 = -1.*t4546*t6732;
  t6800 = -1.*t6777*t4735;
  t6893 = t354*t6771;
  t6894 = t629*t6784;
  t6895 = t6893 + t6894;
  t6889 = -1.*t629*t6771;
  t6890 = t354*t6784;
  t6891 = t6889 + t6890;
  t6791 = 4.000000000064e-6*t1950*t1295;
  t6792 = 4.000000000064e-6*t1816*t1964;
  t6794 = 4.000000000064e-6*t1788*t1964;
  t6795 = t6791 + t6792 + t6794;
  t6801 = -1.000000000016*t2010*t1950;
  t6804 = t6801 + t6287;
  t6863 = t629*t6728;
  t6864 = t354*t6736;
  t6869 = t6863 + t6864;
  t6874 = t354*t6728;
  t6876 = -1.*t629*t6736;
  t6878 = t6874 + t6876;
  t6858 = -1.6e-11*t1788*t1950;
  t6859 = -1.*t1060*t1950;
  t6861 = t6858 + t6859 + t4686;
  t6870 = -1.*t346*t6869;
  t6879 = t804*t6878;
  t6880 = t6870 + t6879;
  t6925 = t804*t6869;
  t6929 = t346*t6878;
  t6931 = t6925 + t6929;
  t6935 = t318*t6861;
  t6936 = -1.*t1652*t6880;
  t6938 = t6935 + t6936;
  t6911 = -1.*t629*t6795;
  t6912 = t354*t6804;
  t6914 = t6911 + t6912;
  t6917 = t354*t6795;
  t6918 = t629*t6804;
  t6919 = t6917 + t6918;
  t6954 = t804*t6891;
  t6960 = -1.*t346*t6895;
  t6963 = t6954 + t6960;
  t6948 = t346*t6891;
  t6949 = t804*t6895;
  t6951 = t6948 + t6949;
  t6972 = t346*t6914;
  t6973 = t804*t6919;
  t6975 = t6972 + t6973;
  t6953 = t5497*t6951;
  t6981 = t804*t6914;
  t6982 = -1.*t346*t6919;
  t6984 = t6981 + t6982;
  t6979 = -1.*t6951*t5527;
  t6980 = -1.*t5504*t6975;
  t7001 = t318*t6963;
  t7002 = t1652*t6777;
  t7003 = t7001 + t7002;
  t6995 = -1.*t1652*t6963;
  t6996 = t318*t6777;
  t6997 = t6995 + t6996;
  t7008 = t1652*t6732;
  t7010 = t318*t6984;
  t7011 = t7008 + t7010;
  t685 = t619 + t647;
  t954 = t619 + t927;
  t7039 = t5325*t804;
  t7040 = -1.*t5313*t1652*t346;
  t7041 = t7039 + t7040;
  t7043 = t804*t5313*t1652;
  t7044 = t5325*t346;
  t7046 = t7043 + t7044;
  t1332 = t1026 + t1159 + t1313;
  t1636 = t1633 + t1635;
  t1761 = t1670 + t1672 + t1754;
  t7051 = t354*t7041;
  t7052 = -1.*t7046*t629;
  t7053 = t7051 + t7052;
  t7055 = t354*t7046;
  t7056 = t7041*t629;
  t7058 = t7055 + t7056;
  t1976 = 2.012840000032e-6*t1964;
  t2000 = t1947 + t1960 + t1976;
  t2119 = 0.03874900000062*t1964;
  t2139 = t2118 + t2119;
  t2398 = 0.503210000008*t1964;
  t2431 = t2351 + t2362 + t2398;
  t7062 = -4.e-6*t318*t1788*t5313;
  t7063 = t1816*t7053;
  t7064 = 4.e-6*t7058*t1295;
  t7066 = t7062 + t7063 + t7064;
  t7075 = -1.*t318*t1060*t5313;
  t7076 = 4.e-6*t1788*t7053;
  t7077 = t7058*t1295;
  t7078 = t7075 + t7076 + t7077;
  t7070 = t2010*t7058;
  t7071 = t318*t5313*t1295;
  t7072 = -4.e-6*t7053*t1295;
  t7073 = t7070 + t7071 + t7072;
  t7102 = 0.15121*t4802;
  t7105 = -1.*t4150*t4468;
  t7106 = -1.*t4520*t4546;
  t7107 = -1.*t4573*t4604;
  t7109 = t7105 + t7106 + t7107;
  t7110 = t7109*t5124;
  t7111 = -0.15121*t4963;
  t7112 = t4604*t3491;
  t7113 = t4546*t5124;
  t7115 = t4468*t3583;
  t7116 = t7112 + t7113 + t7115;
  t7117 = t4520*t7116;
  t7118 = t7102 + t7110 + t7111 + t7117;
  t6826 = -0.03874900000062*t1964;
  t7125 = -1.*t4059*t4265;
  t7126 = -1.*t3921*t4349;
  t7127 = t7125 + t7126;
  t7131 = t2928*t4423;
  t7133 = -1.*t4265*t1964;
  t7134 = -4.e-6*t4349*t1964;
  t7135 = t7131 + t7133 + t7134;
  t7122 = 1.e-6*t4669;
  t7124 = 0.28121*t4672;
  t7128 = -4.e-6*t7127*t1964;
  t7136 = t3921*t7135;
  t7137 = t7127*t1964;
  t7138 = -1.*t4059*t7135;
  t7139 = t7137 + t7138;
  t7142 = 4.e-6*t7139;
  t7143 = t7122 + t7124 + t6826 + t7128 + t7136 + t7142;
  t7146 = -1.*t5218*t5229;
  t7147 = -1.*t5236*t5245;
  t7148 = t7146 + t7147 + t7106;
  t7151 = t7148*t5124;
  t7152 = t5245*t5147;
  t7154 = t5229*t5156;
  t7156 = t7113 + t7152 + t7154;
  t7159 = t4520*t7156;
  t7161 = t7151 + t7159;
  t7172 = -1.*t5409*t5465;
  t7173 = -1.*t5497*t5504;
  t7174 = t7172 + t7173 + t7106;
  t7176 = t7174*t5321;
  t7177 = t5504*t5321;
  t7178 = t5465*t5162;
  t7179 = t7113 + t7177 + t7178;
  t7183 = t5497*t7179;
  t7184 = t7176 + t7183;
  t7189 = t5313*t5527;
  t7190 = t5325*t5615;
  t7191 = t7189 + t7190;
  t7195 = t5325*t5527;
  t7196 = -1.*t5313*t5615;
  t7197 = t7195 + t7196;
  t7201 = -1.*t5561*t5564;
  t7202 = -1.*t5574*t5586;
  t7203 = t7173 + t7201 + t7202;
  t7204 = t7203*t5178;
  t7205 = t5586*t5178;
  t7207 = t5564*t5339;
  t7208 = t7177 + t7205 + t7207;
  t7209 = t5574*t7208;
  t7210 = t7204 + t7209;
  t7261 = -1.*t5746*t5504;
  t7262 = -1.*t5497*t5760;
  t7272 = t5504*t5645;
  t7275 = t5760*t5321;
  t7318 = -1.*t5497*t5465;
  t7320 = -1.*t5409*t5504;
  t7327 = t5465*t5321;
  t7330 = t5504*t5162;
  t6072 = -1.*t1652*t4735;
  t6073 = -1.*t318*t5532;
  t6077 = t6072 + t6073;
  t6032 = -1.*t4520*t1652;
  t6038 = -1.*t318*t5409;
  t6041 = t6032 + t6038;
  t7399 = -1.*t4520*t6163;
  t7410 = -1.*t6221*t4546;
  t7424 = t6163*t5124;
  t7430 = t4546*t6301;
  t6692 = t318*t6124;
  t6693 = -1.*t1652*t6594;
  t6703 = t6692 + t6693;
  t7460 = -1.*t5497*t6514;
  t7463 = -1.*t6540*t5504;
  t6640 = t318*t6221;
  t6641 = -1.*t1652*t6536;
  t6642 = t6640 + t6641;
  t6302 = t1652*t6301;
  t6323 = t318*t6321;
  t6328 = t6302 + t6323;
  t7472 = t6514*t5321;
  t7477 = t5504*t6437;
  t7547 = -1.*t3921*t6757;
  t7548 = -1.*t4059*t6765;
  t7551 = t7547 + t7548;
  t7553 = t2928*t6748;
  t7556 = -1.*t1950*t4265;
  t7557 = -4.e-6*t1950*t4349;
  t7562 = -1.000000000016*t4423*t1964;
  t7565 = -4.e-6*t6757*t1964;
  t7568 = -1.*t6765*t1964;
  t7569 = t7553 + t7556 + t7557 + t7562 + t7565 + t7568;
  t7521 = -1.*t4520*t6777;
  t7534 = t6777*t5124;
  t7538 = t4546*t6861;
  t7019 = t318*t6732;
  t7020 = -1.*t1652*t6984;
  t7022 = t7019 + t7020;
  t7605 = -1.*t5497*t6951;
  t6862 = t1652*t6861;
  t6882 = t318*t6880;
  t6884 = t6862 + t6882;
  t7610 = t6951*t5321;
  t7615 = t5504*t6931;
  t7662 = t804*t5313;
  t7666 = t5325*t1652*t346;
  t7668 = t7662 + t7666;
  t7673 = -1.*t5325*t804*t1652;
  t7674 = t5313*t346;
  t7675 = t7673 + t7674;
  t7694 = t5313*t5497;
  t7695 = t5325*t5561;
  t7696 = t7694 + t7695;
  t7700 = t5325*t5497;
  t7701 = -1.*t5313*t5561;
  t7702 = t7700 + t7701;
  t7678 = t354*t7668;
  t7680 = -1.*t7675*t629;
  t7683 = t7678 + t7680;
  t7685 = t354*t7675;
  t7686 = t7668*t629;
  t7687 = t7685 + t7686;
  t7712 = 4.e-6*t5325*t318*t1788;
  t7713 = t1816*t7683;
  t7714 = 4.e-6*t7687*t1295;
  t7715 = t7712 + t7713 + t7714;
  t7722 = t5325*t318*t1060;
  t7723 = 4.e-6*t1788*t7683;
  t7724 = t7687*t1295;
  t7725 = t7722 + t7723 + t7724;
  t7717 = t2010*t7687;
  t7718 = -1.*t5325*t318*t1295;
  t7719 = -4.e-6*t7683*t1295;
  t7720 = t7717 + t7718 + t7719;
  t7749 = -0.15121*t4573;
  t7750 = 0.15121*t4150;
  t7751 = -1.*t4604*t3491;
  t7752 = -1.*t4546*t5124;
  t7753 = -1.*t4468*t3583;
  t7754 = t7751 + t7752 + t7753;
  t7756 = t4735*t7754;
  t7757 = t4468*t4802;
  t7758 = t4604*t4963;
  t7759 = t4546*t4735;
  t7760 = t7757 + t7758 + t7759;
  t7761 = t5124*t7760;
  t7762 = t7749 + t7750 + t7756 + t7761;
  t7767 = -1.*t2928*t4423;
  t7768 = t4265*t1964;
  t7769 = 4.e-6*t4349*t1964;
  t7770 = t7767 + t7768 + t7769;
  t7772 = t4672*t4265;
  t7773 = t4669*t4349;
  t7775 = t7772 + t7773 + t7562;
  t7765 = 1.e-6*t3921;
  t7766 = 0.28121*t4059;
  t7771 = t4669*t7770;
  t7776 = -4.e-6*t1964*t7775;
  t7777 = -1.*t4672*t7770;
  t7780 = t1964*t7775;
  t7781 = t7777 + t7780;
  t7782 = 4.e-6*t7781;
  t7784 = t7765 + t7766 + t7771 + t7776 + t7782;
  t7787 = -1.*t5245*t5147;
  t7788 = -1.*t5229*t5156;
  t7789 = t7752 + t7787 + t7788;
  t7790 = t4735*t7789;
  t7791 = t5229*t5283;
  t7792 = t5245*t5298;
  t7793 = t7759 + t7791 + t7792;
  t7794 = t5124*t7793;
  t7796 = t7790 + t7794;
  t7803 = -1.*t5504*t5321;
  t7805 = -1.*t5465*t5162;
  t7806 = t7752 + t7803 + t7805;
  t7808 = t5527*t7806;
  t7809 = t5465*t5532;
  t7810 = t5504*t5527;
  t7811 = t7759 + t7809 + t7810;
  t7815 = t5321*t7811;
  t7816 = t7808 + t7815;
  t7819 = -1.*t5586*t5178;
  t7821 = -1.*t5564*t5339;
  t7822 = t7803 + t7819 + t7821;
  t7825 = t5600*t7822;
  t7826 = t5586*t5600;
  t7827 = t5564*t5615;
  t7828 = t7810 + t7826 + t7827;
  t7829 = t5178*t7828;
  t7830 = t7825 + t7829;
  t7870 = -1.*t5504*t5645;
  t7871 = -1.*t5760*t5321;
  t7883 = t5504*t5725;
  t7887 = t5760*t5527;
  t7953 = -1.*t5465*t5321;
  t7961 = -1.*t5504*t5162;
  t7969 = t5504*t5532;
  t7971 = t5465*t5527;
  t8129 = -1.*t6163*t5124;
  t8136 = -1.*t4546*t6301;
  t8148 = t4546*t6124;
  t8150 = t6163*t4735;
  t8190 = -1.*t6514*t5321;
  t8194 = -1.*t5504*t6437;
  t8203 = t6514*t5527;
  t8204 = t5504*t6551;
  t8287 = -1.000000000016*t1950*t4423;
  t8290 = t4669*t6757;
  t8294 = t4672*t6765;
  t8296 = -1.000000000016*t6748*t1964;
  t8299 = 1.000000000016*t4265*t1964;
  t8300 = 4.000000000064e-6*t4349*t1964;
  t8301 = t8287 + t8290 + t8294 + t8296 + t8299 + t8300;
  t8310 = -1.*t2928*t6748;
  t8311 = t1950*t4265;
  t8312 = 4.e-6*t1950*t4349;
  t8315 = 4.e-6*t6757*t1964;
  t8316 = t6765*t1964;
  t8317 = t8310 + t8311 + t8312 + t5072 + t8315 + t8316;
  t8254 = -1.*t6777*t5124;
  t8260 = -1.*t4546*t6861;
  t8268 = t4546*t6732;
  t8272 = t6777*t4735;
  t8354 = -1.*t6951*t5321;
  t8357 = -1.*t5504*t6931;
  t8364 = t6951*t5527;
  t8365 = t5504*t6975;
  p_output1[0]=t1021*t1332 + t1631*t1636 + t1652*t1761 + t1912*t2000 + t2115*t2139 + t2321*t2431 - 0.03875*(t1964*t2115 + t1950*t2321 + 4.e-6*t1912*t2469) + 0.14871*(4.e-6*t1964*t2115 + 4.e-6*t2321*t2469 + t1912*t2545) + 0.80321*(-4.e-6*t1912*t1964 - 1.*t1964*t2321 + t2115*t2928) - 1.*t318*t346*t685 + t318*t804*t954 + var1[0] + t5178*var2[0] + t5361*var2[1] + t5343*var2[2] + t5620*var2[3] + ((-1.*t5313*t5321 - 1.*t5325*t5339)*var2[1] + t5361*var2[2])*var2[3] + t5540*var2[4] + (t5339*var2[0] - 1.*t5313*t6009*var2[1] + t5325*t6009*var2[2] + (t5589*t5615 + t5561*t5617 + t5600*(t5564*t5574 + t5561*t5586 + t5564*t6041 + t5561*t6055) + t5574*(-1.*t5564*t5600 - 1.*t5586*t5615 - 1.*t5615*t6055 - 1.*t5564*t6077))*var2[3])*var2[4] + t5310*var2[5] + (t318*t5845*var2[0] + (t5162*t5325 + t1652*t5313*t5845)*var2[1] + (t5162*t5313 - 1.*t1652*t5325*t5845)*var2[2] + (t318*t5617*t5858 + t5600*(-1.*t1652*t5564*t5858 + t318*t5586*t5858 + t5866 - 1.*t1652*t5561*t5875 + t318*t5574*t5875 + t5881) + t318*t5589*t5899 + t5574*(-1.*t318*t5600*t5875 + t1652*t5615*t5875 + t5889 + t1652*t5564*t5899 - 1.*t318*t5586*t5899 + t5901))*var2[3] + (t5521*t5532 + t5409*t5536 + t5527*(t5465*t5858 + t5866 + t5409*t5875 + t5881) + t5497*(-1.*t5532*t5875 + t5889 - 1.*t5465*t5899 + t5901))*var2[4])*var2[5] + t4996*var2[6] + (t318*t5637*var2[0] + (t1652*t5313*t5637 + t5325*t5645)*var2[1] + (-1.*t1652*t5325*t5637 + t5313*t5645)*var2[2] + (t318*t5617*t5737 + t5600*(-1.*t1652*t5564*t5737 + t318*t5586*t5737 + t5754 + t5762 - 1.*t1652*t5561*t5765 + t318*t5574*t5765) + t318*t5589*t5789 + t5574*(-1.*t318*t5600*t5765 + t1652*t5615*t5765 + t5779 + t1652*t5564*t5789 - 1.*t318*t5586*t5789 + t5800))*var2[3] + (t5521*t5725 + t5536*t5746 + t5527*(t5465*t5737 + t5754 + t5762 + t5409*t5765) + t5497*(-1.*t5532*t5765 + t5779 - 1.*t5465*t5789 + t5800))*var2[4] + (t4735*(t5229*t5236 + t5236*t5674 + t5245*t5683 + t5218*t5692) + t4520*(-1.*t5229*t5298 - 1.*t5298*t5674 - 1.*t5283*t5692 - 1.*t5245*t5699))*var2[5])*var2[6] + t5094*var2[7] + (t6328*var2[0] + (t5325*t6437 - 1.*t5313*t6452)*var2[1] + (t5313*t6437 + t5325*t6452)*var2[2] + (t5617*t6660 + t5600*(t6519 + t6544 + t5561*t6604 + t5574*t6621 + t5564*t6642 + t5586*t6660) + t5589*t6678 + t5574*(t6582 + t6583 - 1.*t5615*t6604 - 1.*t5600*t6621 - 1.*t5586*t6678 - 1.*t5564*t6703))*var2[3] + (t5536*t6540 + t5527*(t6164 + t6222 + t6519 + t5409*t6523 + t5465*t6536 + t6544) + t5521*t6551 + t5497*(t6279 + t6285 - 1.*t5532*t6523 + t6582 + t6583 - 1.*t5465*t6594))*var2[4] + (t5255*t6124 + t5301*t6221 + t4735*(t6164 + t6222 + t5236*t6358 + t5218*t6365 + t5229*t6381 + t5245*t6389) + t4520*(t6279 + t6285 - 1.*t5298*t6358 - 1.*t5283*t6365 - 1.*t5245*t6416 - 1.*t5229*t6421))*var2[5] + (0.15121*t6108 + t4606*t6124 - 0.15121*t6129 + t4993*t6221 + t4735*(t4468*t6132 + t6164 + t4573*t6187 + t4150*t6204 + t6222 + t4604*t6226) + t4520*(-1.*t4963*t6187 - 1.*t4802*t6204 - 1.*t4604*t6266 + t6279 + t6285 - 1.*t4468*t6288))*var2[6])*var2[7] - 4.05160619990483e-7*var2[8] + (t6884*var2[0] + (t5325*t6931 - 1.*t5313*t6938)*var2[1] + (t5313*t6931 + t5325*t6938)*var2[2] + (t5600*(t6953 + t5561*t6997 + t5574*t7003) + t5589*t7011 + t5574*(t6979 + t6980 - 1.*t5615*t6997 - 1.*t5600*t7003 - 1.*t5586*t7011 - 1.*t5564*t7022))*var2[3] + (t5527*(t6779 + t6953 + t5409*t6963) + t5521*t6975 + t5497*(t6798 + t6800 - 1.*t5532*t6963 + t6979 + t6980 - 1.*t5465*t6984))*var2[4] + (t5255*t6732 + t4735*(t6779 + t5236*t6891 + t5218*t6895) + t4520*(t6798 + t6800 - 1.*t5298*t6891 - 1.*t5283*t6895 - 1.*t5245*t6914 - 1.*t5229*t6919))*var2[5] + (0.15121*t6728 + t4606*t6732 - 0.15121*t6736 + t4735*(t4573*t6771 + t6779 + t4150*t6784) + t4520*(-1.*t4963*t6771 - 1.*t4802*t6784 - 1.*t4604*t6795 + t6798 + t6800 - 1.*t4468*t6804))*var2[6] + (-0.281210000004*t1950 + 4.000000000064e-6*t1964*t5058 + t4669*t6824 + t6826 + t3921*t6843 + 4.e-6*(-1.000000000016*t1964*t5058 - 1.*t4672*t6824 - 1.*t4059*t6843))*var2[7])*var2[8] + t5178*var3[0] + t5361*var3[1] + t5343*var3[2] + t5620*var3[3] + t5540*var3[4] + t5310*var3[5] + t4996*var3[6] + t5094*var3[7] - 4.05160619990483e-7*var3[8] - 1.*var4[0];
  p_output1[1]=-1.*t1761*t318*t5313 + t685*t7041 + t1332*t7053 + t1636*t7058 + t2000*t7066 + t2139*t7073 + t2431*t7078 - 0.03875*(4.e-6*t2469*t7066 + t1964*t7073 + t1950*t7078) + 0.80321*(-4.e-6*t1964*t7066 + t2928*t7073 - 1.*t1964*t7078) + 0.14871*(t2545*t7066 + 4.e-6*t1964*t7073 + 4.e-6*t2469*t7078) + t7046*t954 + var1[1] + t5600*var2[0] + t7197*var2[1] + t7191*var2[2] + t7210*var2[3] + ((-1.*t5313*t5527 - 1.*t5325*t5615)*var2[1] + t7197*var2[2])*var2[3] + t7184*var2[4] + (t5615*var2[0] - 1.*t5313*t6077*var2[1] + t5325*t6077*var2[2] + (t5574*(t5178*t5564 + t5339*t5586 + t5564*t6009 + t5339*t6055) + t5178*(-1.*t5564*t5574 - 1.*t5561*t5586 - 1.*t5564*t6041 - 1.*t5561*t6055) + t5339*t7203 + t5561*t7208)*var2[3])*var2[4] + t7161*var2[5] + (t318*t5899*var2[0] + (t5325*t5532 + t1652*t5313*t5899)*var2[1] + (t5313*t5532 - 1.*t1652*t5325*t5899)*var2[2] + (t318*t5845*t7203 + t318*t5858*t7208 + t5178*(t1652*t5564*t5858 - 1.*t318*t5586*t5858 + t1652*t5561*t5875 - 1.*t318*t5574*t5875 + t7318 + t7320) + t5574*(-1.*t1652*t5564*t5845 + t318*t5586*t5845 + t318*t5178*t5875 - 1.*t1652*t5339*t5875 + t7327 + t7330))*var2[3] + (t5162*t7174 + t5409*t7179 + t5321*(-1.*t5465*t5858 - 1.*t5409*t5875 + t7318 + t7320) + t5497*(t5465*t5845 + t5162*t5875 + t7327 + t7330))*var2[4])*var2[5] + t7118*var2[6] + (t318*t5789*var2[0] + (t5325*t5725 + t1652*t5313*t5789)*var2[1] + (t5313*t5725 - 1.*t1652*t5325*t5789)*var2[2] + (t318*t5637*t7203 + t318*t5737*t7208 + t5178*(t1652*t5564*t5737 - 1.*t318*t5586*t5737 + t1652*t5561*t5765 - 1.*t318*t5574*t5765 + t7261 + t7262) + t5574*(-1.*t1652*t5564*t5637 + t318*t5586*t5637 + t318*t5178*t5765 - 1.*t1652*t5339*t5765 + t7272 + t7275))*var2[3] + (t5645*t7174 + t5746*t7179 + t5321*(-1.*t5465*t5737 - 1.*t5409*t5765 + t7261 + t7262) + t5497*(t5465*t5637 + t5162*t5765 + t7272 + t7275))*var2[4] + (t4520*(t5147*t5229 + t5245*t5635 + t5147*t5674 + t5156*t5692) + t5124*(-1.*t5229*t5236 - 1.*t5236*t5674 - 1.*t5245*t5683 - 1.*t5218*t5692))*var2[5])*var2[6] + t7143*var2[7] + (t6678*var2[0] + (t5325*t6551 - 1.*t5313*t6703)*var2[1] + (t5313*t6551 + t5325*t6703)*var2[2] + (t6328*t7203 + t6660*t7208 + t5178*(-1.*t5561*t6604 - 1.*t5574*t6621 - 1.*t5564*t6642 - 1.*t5586*t6660 + t7460 + t7463) + t5574*(t5586*t6328 + t5564*t6452 + t5339*t6604 + t5178*t6621 + t7472 + t7477))*var2[3] + (t6437*t7174 + t6540*t7179 + t5321*(-1.*t5409*t6523 - 1.*t5465*t6536 + t7399 + t7410 + t7460 + t7463) + t5497*(t5465*t6321 + t5162*t6523 + t7424 + t7430 + t7472 + t7477))*var2[4] + (t6301*t7148 + t6221*t7156 + t5124*(-1.*t5236*t6358 - 1.*t5218*t6365 - 1.*t5229*t6381 - 1.*t5245*t6389 + t7399 + t7410) + t4520*(t5229*t6306 + t5245*t6317 + t5147*t6358 + t5156*t6365 + t7424 + t7430))*var2[5] + (-0.15121*t6266 + 0.15121*t6288 + t6301*t7109 + t6221*t7116 + t5124*(-1.*t4468*t6132 - 1.*t4573*t6187 - 1.*t4150*t6204 - 1.*t4604*t6226 + t7399 + t7410) + t4520*(t4468*t6108 + t4604*t6129 + t3491*t6187 + t3583*t6204 + t7424 + t7430))*var2[6])*var2[7] + 0.300000000004851*var2[8] + (t7011*var2[0] + (t5325*t6975 - 1.*t5313*t7022)*var2[1] + (t5313*t6975 + t5325*t7022)*var2[2] + (t6884*t7203 + t5178*(-1.*t5561*t6997 - 1.*t5574*t7003 + t7605) + t5574*(t5586*t6884 + t5564*t6938 + t5339*t6997 + t5178*t7003 + t7610 + t7615))*var2[3] + (t6931*t7174 + t5321*(-1.*t5409*t6963 + t7521 + t7605) + t5497*(t5465*t6880 + t5162*t6963 + t7534 + t7538 + t7610 + t7615))*var2[4] + (t6861*t7148 + t5124*(-1.*t5236*t6891 - 1.*t5218*t6895 + t7521) + t4520*(t5229*t6869 + t5245*t6878 + t5147*t6891 + t5156*t6895 + t7534 + t7538))*var2[5] + (-0.15121*t6795 + 0.15121*t6804 + t6861*t7109 + t5124*(-1.*t4573*t6771 - 1.*t4150*t6784 + t7521) + t4520*(t4468*t6728 + t4604*t6736 + t3491*t6771 + t3583*t6784 + t7534 + t7538))*var2[6] + (-0.03874900000062*t1950 + 0.281210000008499*t1964 - 4.e-6*t1950*t7127 - 4.e-6*t1964*t7551 + t3921*t7569 + 4.e-6*(t1950*t7127 + t1964*t7551 - 1.*t4059*t7569))*var2[7])*var2[8] + t5600*var3[0] + t7197*var3[1] + t7191*var3[2] + t7210*var3[3] + t7184*var3[4] + t7161*var3[5] + t7118*var3[6] + t7143*var3[7] + 0.300000000004851*var3[8] - 1.*var4[1];
  p_output1[2]=t1761*t318*t5325 + t685*t7668 + t1332*t7683 + t1636*t7687 + t2000*t7715 + t2139*t7720 + t2431*t7725 - 0.03875*(4.e-6*t2469*t7715 + t1964*t7720 + t1950*t7725) + 0.80321*(-4.e-6*t1964*t7715 + t2928*t7720 - 1.*t1964*t7725) + 0.14871*(t2545*t7715 + 4.e-6*t1964*t7720 + 4.e-6*t2469*t7725) + t7675*t954 + var1[2] + t5574*var2[0] + t7702*var2[1] + t7696*var2[2] + t7830*var2[3] + ((-1.*t5313*t5497 - 1.*t5325*t5561)*var2[1] + t7702*var2[2])*var2[3] + t7816*var2[4] + (t5561*var2[0] - 1.*t5313*t6041*var2[1] + t5325*t6041*var2[2] + (t5600*(-1.*t5178*t5564 - 1.*t5339*t5586 - 1.*t5564*t6009 - 1.*t5339*t6055) + t5178*(t5564*t5600 + t5586*t5615 + t5615*t6055 + t5564*t6077) + t5615*t7822 + t5339*t7828)*var2[3])*var2[4] + t7796*var2[5] + (t318*t5858*var2[0] + (t5325*t5409 + t1652*t5313*t5858)*var2[1] + (t5313*t5409 - 1.*t1652*t5325*t5858)*var2[2] + (t318*t5899*t7822 + t318*t5845*t7828 + t5600*(t1652*t5564*t5845 - 1.*t318*t5586*t5845 - 1.*t318*t5178*t5875 + t1652*t5339*t5875 + t7953 + t7961) + t5178*(t318*t5600*t5875 - 1.*t1652*t5615*t5875 - 1.*t1652*t5564*t5899 + t318*t5586*t5899 + t7969 + t7971))*var2[3] + (t5532*t7806 + t5162*t7811 + t5527*(-1.*t5465*t5845 - 1.*t5162*t5875 + t7953 + t7961) + t5321*(t5532*t5875 + t5465*t5899 + t7969 + t7971))*var2[4])*var2[5] + t7762*var2[6] + (t318*t5737*var2[0] + (t1652*t5313*t5737 + t5325*t5746)*var2[1] + (-1.*t1652*t5325*t5737 + t5313*t5746)*var2[2] + (t318*t5789*t7822 + t318*t5637*t7828 + t5600*(t1652*t5564*t5637 - 1.*t318*t5586*t5637 - 1.*t318*t5178*t5765 + t1652*t5339*t5765 + t7870 + t7871) + t5178*(t318*t5600*t5765 - 1.*t1652*t5615*t5765 - 1.*t1652*t5564*t5789 + t318*t5586*t5789 + t7883 + t7887))*var2[3] + (t5725*t7806 + t5645*t7811 + t5527*(-1.*t5465*t5637 - 1.*t5162*t5765 + t7870 + t7871) + t5321*(t5532*t5765 + t5465*t5789 + t7883 + t7887))*var2[4] + (t4735*(-1.*t5147*t5229 - 1.*t5245*t5635 - 1.*t5147*t5674 - 1.*t5156*t5692) + t5124*(t5229*t5298 + t5298*t5674 + t5283*t5692 + t5245*t5699))*var2[5])*var2[6] + t7784*var2[7] + (t6660*var2[0] + (t5325*t6540 - 1.*t5313*t6642)*var2[1] + (t5313*t6540 + t5325*t6642)*var2[2] + (t6678*t7822 + t6328*t7828 + t5600*(-1.*t5586*t6328 - 1.*t5564*t6452 - 1.*t5339*t6604 - 1.*t5178*t6621 + t8190 + t8194) + t5178*(t5615*t6604 + t5600*t6621 + t5586*t6678 + t5564*t6703 + t8203 + t8204))*var2[3] + (t6551*t7806 + t6437*t7811 + t5527*(-1.*t5465*t6321 - 1.*t5162*t6523 + t8129 + t8136 + t8190 + t8194) + t5321*(t5532*t6523 + t5465*t6594 + t8148 + t8150 + t8203 + t8204))*var2[4] + (t6124*t7789 + t6301*t7793 + t4735*(-1.*t5229*t6306 - 1.*t5245*t6317 - 1.*t5147*t6358 - 1.*t5156*t6365 + t8129 + t8136) + t5124*(t5298*t6358 + t5283*t6365 + t5245*t6416 + t5229*t6421 + t8148 + t8150))*var2[5] + (0.15121*t6132 - 0.15121*t6226 + t6124*t7754 + t6301*t7760 + t4735*(-1.*t4468*t6108 - 1.*t4604*t6129 - 1.*t3491*t6187 - 1.*t3583*t6204 + t8129 + t8136) + t5124*(t4963*t6187 + t4802*t6204 + t4604*t6266 + t4468*t6288 + t8148 + t8150))*var2[6])*var2[7] - 1.284e-8*var2[8] + ((t7011*t7822 + t6884*t7828 + t5600*(-1.*t5586*t6884 - 1.*t5564*t6938 - 1.*t5339*t6997 - 1.*t5178*t7003 + t8354 + t8357) + t5178*(t5615*t6997 + t5600*t7003 + t5586*t7011 + t5564*t7022 + t8364 + t8365))*var2[3] + (t6975*t7806 + t6931*t7811 + t5527*(-1.*t5465*t6880 - 1.*t5162*t6963 + t8254 + t8260 + t8354 + t8357) + t5321*(t5532*t6963 + t5465*t6984 + t8268 + t8272 + t8364 + t8365))*var2[4] + (t6732*t7789 + t6861*t7793 + t4735*(-1.*t5229*t6869 - 1.*t5245*t6878 - 1.*t5147*t6891 - 1.*t5156*t6895 + t8254 + t8260) + t5124*(t5298*t6891 + t5283*t6895 + t5245*t6914 + t5229*t6919 + t8268 + t8272))*var2[5] + (t6732*t7754 + t6861*t7760 + t4735*(-1.*t4468*t6728 - 1.*t4604*t6736 - 1.*t3491*t6771 - 1.*t3583*t6784 + t8254 + t8260) + t5124*(t4963*t6771 + t4802*t6784 + t4604*t6795 + t4468*t6804 + t8268 + t8272))*var2[6] + (4.000000000064e-6*t1964*t7770 - 4.e-6*t1950*t7775 - 4.e-6*t1964*t8301 + t4669*t8317 + 4.e-6*(-1.000000000016*t1964*t7770 + t1950*t7775 + t1964*t8301 - 1.*t4672*t8317))*var2[7])*var2[8] + t5574*var3[0] + t7702*var3[1] + t7696*var3[2] + t7830*var3[3] + t7816*var3[4] + t7796*var3[5] + t7762*var3[6] + t7784*var3[7] - 1.284e-8*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void ddh_FlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
