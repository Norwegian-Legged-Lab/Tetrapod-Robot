/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:12 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t48;
  double t81;
  double t94;
  double t97;
  double t162;
  double t163;
  double t66;
  double t235;
  double t374;
  double t380;
  double t385;
  double t400;
  double t633;
  double t906;
  double t308;
  double t320;
  double t339;
  double t435;
  double t476;
  double t486;
  double t1022;
  double t1105;
  double t1122;
  double t1181;
  double t912;
  double t939;
  double t941;
  double t973;
  double t975;
  double t996;
  double t2163;
  double t1602;
  double t1645;
  double t1671;
  double t1681;
  double t1378;
  double t1383;
  double t1392;
  double t1402;
  double t1463;
  double t1472;
  double t2747;
  double t2764;
  double t2165;
  double t498;
  double t510;
  double t1764;
  double t1789;
  double t1005;
  double t2168;
  double t1144;
  double t1487;
  double t3639;
  double t3685;
  double t3740;
  double t3743;
  double t3759;
  double t690;
  double t729;
  double t742;
  double t3799;
  double t3806;
  double t3808;
  double t3838;
  double t3870;
  double t3928;
  double t3962;
  double t3963;
  double t4117;
  double t4157;
  double t4192;
  double t365;
  double t392;
  double t406;
  double t4232;
  double t4261;
  double t4268;
  double t3867;
  double t4052;
  double t4194;
  double t4198;
  double t4887;
  double t4894;
  double t4905;
  double t4913;
  double t4935;
  double t4798;
  double t4805;
  double t4819;
  double t4871;
  double t4276;
  double t4414;
  double t4513;
  double t4536;
  double t4916;
  double t4936;
  double t4982;
  double t5009;
  double t3283;
  double t3380;
  double t3440;
  double t3466;
  double t3513;
  double t3534;
  double t3549;
  double t3597;
  double t3638;
  double t3733;
  double t3770;
  double t3789;
  double t4218;
  double t4539;
  double t4645;
  double t4674;
  double t4716;
  double t4877;
  double t4886;
  double t5049;
  double t5072;
  double t5086;
  double t5093;
  double t5098;
  double t5128;
  double t5151;
  double t5159;
  double t5160;
  double t5163;
  double t5164;
  double t5165;
  double t5166;
  double t5167;
  double t5168;
  double t5188;
  double t5189;
  double t5190;
  double t5193;
  double t5194;
  double t5198;
  double t5201;
  double t5187;
  double t5191;
  double t5192;
  double t5213;
  double t5218;
  double t5224;
  double t5230;
  double t5236;
  double t5238;
  double t5259;
  double t5260;
  double t5265;
  double t5269;
  double t5270;
  double t5271;
  double t5272;
  double t5273;
  double t5275;
  double t5276;
  double t5279;
  double t5280;
  double t5281;
  double t5289;
  double t5290;
  double t5291;
  double t195;
  double t236;
  double t5302;
  double t5303;
  double t5310;
  double t5320;
  double t5321;
  double t5323;
  double t5298;
  double t5300;
  double t5301;
  double t5311;
  double t5312;
  double t5318;
  double t5319;
  double t5325;
  double t5326;
  double t5337;
  double t5338;
  double t5344;
  double t5350;
  double t5351;
  double t5352;
  double t5364;
  double t5365;
  double t5367;
  double t5372;
  double t5373;
  double t5374;
  double t5385;
  double t5393;
  double t5411;
  double t5415;
  double t5416;
  double t5417;
  double t5421;
  double t5425;
  double t5429;
  double t5430;
  double t5434;
  double t5442;
  double t5444;
  double t5448;
  double t5474;
  double t5477;
  double t5478;
  double t5467;
  double t5469;
  double t5470;
  double t5480;
  double t5488;
  double t5505;
  double t5541;
  double t5551;
  double t5559;
  double t5458;
  double t5459;
  double t5466;
  double t5473;
  double t5510;
  double t5513;
  double t5560;
  double t5561;
  double t5566;
  double t5567;
  double t5576;
  double t5579;
  double t5587;
  double t5589;
  double t5592;
  double t5721;
  double t5725;
  double t5728;
  double t5730;
  double t5731;
  double t5737;
  double t5745;
  double t5746;
  double t5750;
  double t5688;
  double t5689;
  double t5691;
  double t5672;
  double t5676;
  double t5678;
  double t5706;
  double t5741;
  double t5742;
  double t5755;
  double t5756;
  double t5762;
  double t5763;
  double t5773;
  double t5783;
  double t5792;
  double t5793;
  double t5796;
  double t5809;
  double t5810;
  double t5820;
  double t5828;
  double t5829;
  double t5830;
  double t5844;
  double t5852;
  double t5918;
  double t5926;
  double t5879;
  double t5880;
  double t5884;
  double t5893;
  double t5986;
  double t5993;
  double t5994;
  double t5902;
  double t5904;
  double t5905;
  double t6071;
  double t6076;
  double t6038;
  double t6045;
  double t6115;
  double t6116;
  double t6118;
  double t6079;
  double t6104;
  double t6105;
  double t6138;
  double t6139;
  double t6145;
  double t6077;
  double t6110;
  double t6063;
  double t6065;
  double t6069;
  double t6135;
  double t6151;
  double t6253;
  double t6255;
  double t6307;
  double t6308;
  double t6312;
  double t6331;
  double t6334;
  double t6306;
  double t6317;
  double t6298;
  double t6302;
  double t6328;
  double t6337;
  double t6425;
  double t6435;
  double t6436;
  double t6449;
  double t6451;
  double t6454;
  double t6558;
  double t6559;
  double t6561;
  double t6547;
  double t6549;
  double t6551;
  double t6555;
  double t6556;
  double t6511;
  double t6512;
  double t6513;
  double t6515;
  double t6535;
  double t6537;
  double t6538;
  double t6539;
  double t6541;
  double t6545;
  double t6527;
  double t6528;
  double t6529;
  double t6530;
  double t6532;
  double t6533;
  double t6507;
  double t6508;
  double t6509;
  double t6518;
  double t6519;
  double t6524;
  double t6525;
  double t6563;
  double t6564;
  double t6565;
  double t6534;
  double t6562;
  double t6587;
  double t6590;
  double t6667;
  double t6669;
  double t6670;
  double t6655;
  double t6656;
  double t6657;
  double t6577;
  double t6582;
  double t6584;
  double t6585;
  double t6591;
  double t6593;
  double t6597;
  double t6616;
  double t6619;
  double t6620;
  double t6622;
  double t6627;
  double t6628;
  double t6613;
  double t6614;
  double t6621;
  double t6630;
  double t6631;
  double t6741;
  double t6744;
  double t6746;
  double t6756;
  double t6759;
  double t6760;
  double t6674;
  double t6675;
  double t6676;
  double t6678;
  double t6679;
  double t6680;
  double t6709;
  double t6710;
  double t6711;
  double t6713;
  double t6719;
  double t6721;
  double t6791;
  double t6792;
  double t6793;
  double t6777;
  double t6778;
  double t6779;
  double t6772;
  double t6773;
  double t6774;
  double t6797;
  double t6798;
  double t6799;
  double t6775;
  double t6794;
  double t6783;
  double t6787;
  double t6788;
  double t6810;
  double t6811;
  double t6812;
  double t6851;
  double t6852;
  double t6853;
  double t6807;
  double t6808;
  double t6832;
  double t6835;
  double t6844;
  double t6822;
  double t6823;
  double t6827;
  double t6858;
  double t6859;
  double t6861;
  double t6910;
  double t6911;
  double t6914;
  double t6919;
  double t6920;
  double t6921;
  double t6925;
  double t6926;
  double t6927;
  double t6939;
  double t6940;
  double t6941;
  double t6942;
  double t6893;
  double t6897;
  double t6900;
  double t6918;
  double t6924;
  double t6928;
  double t6929;
  double t6932;
  double t6933;
  double t6934;
  double t6935;
  double t6968;
  double t6973;
  double t6975;
  double t6981;
  double t6984;
  double t6985;
  double t6986;
  double t6989;
  double t6993;
  double t6994;
  double t6885;
  double t6887;
  double t6903;
  double t6905;
  double t6906;
  double t6936;
  double t6953;
  double t6955;
  double t7056;
  double t7060;
  double t7065;
  double t7051;
  double t7053;
  double t7054;
  double t6948;
  double t6949;
  double t6950;
  double t6951;
  double t6956;
  double t6958;
  double t7029;
  double t7030;
  double t7032;
  double t7035;
  double t7036;
  double t7037;
  double t7014;
  double t7016;
  double t7021;
  double t7033;
  double t7038;
  double t7040;
  double t7098;
  double t7099;
  double t7100;
  double t7102;
  double t7103;
  double t7104;
  double t7078;
  double t7080;
  double t7084;
  double t7089;
  double t7090;
  double t7091;
  double t7121;
  double t7122;
  double t7124;
  double t7116;
  double t7117;
  double t7119;
  double t7128;
  double t7129;
  double t7131;
  double t7120;
  double t7136;
  double t7138;
  double t7139;
  double t7134;
  double t7135;
  double t7158;
  double t7160;
  double t7161;
  double t7151;
  double t7153;
  double t7155;
  double t7165;
  double t7166;
  double t7167;
  double t204;
  double t257;
  double t7194;
  double t7195;
  double t7196;
  double t7203;
  double t7204;
  double t7205;
  double t418;
  double t544;
  double t793;
  double t7208;
  double t7210;
  double t7211;
  double t7220;
  double t7222;
  double t7224;
  double t1237;
  double t1267;
  double t1524;
  double t1535;
  double t1829;
  double t1933;
  double t7228;
  double t7229;
  double t7231;
  double t7235;
  double t7250;
  double t7251;
  double t7252;
  double t7253;
  double t7239;
  double t7240;
  double t7241;
  double t7245;
  double t7284;
  double t7285;
  double t7287;
  double t7288;
  double t7289;
  double t7290;
  double t7293;
  double t7295;
  double t7296;
  double t7299;
  double t7300;
  double t7302;
  double t7303;
  double t6979;
  double t7308;
  double t7309;
  double t7310;
  double t7315;
  double t7317;
  double t7318;
  double t7320;
  double t7306;
  double t7307;
  double t7312;
  double t7321;
  double t7323;
  double t7325;
  double t7328;
  double t7332;
  double t7334;
  double t7338;
  double t7348;
  double t7357;
  double t7363;
  double t7371;
  double t7375;
  double t7379;
  double t7380;
  double t7383;
  double t7390;
  double t7395;
  double t7396;
  double t7398;
  double t7399;
  double t7403;
  double t7406;
  double t7409;
  double t7410;
  double t7419;
  double t7420;
  double t7422;
  double t7426;
  double t7429;
  double t7432;
  double t7439;
  double t7440;
  double t7444;
  double t7446;
  double t7447;
  double t7448;
  double t7452;
  double t7453;
  double t7454;
  double t7517;
  double t7518;
  double t7528;
  double t7529;
  double t7578;
  double t7583;
  double t7597;
  double t7600;
  double t6470;
  double t6473;
  double t6477;
  double t6443;
  double t6444;
  double t6445;
  double t7676;
  double t7685;
  double t7704;
  double t7712;
  double t6868;
  double t6869;
  double t6871;
  double t7753;
  double t7758;
  double t6847;
  double t6848;
  double t6849;
  double t6615;
  double t6633;
  double t6641;
  double t7767;
  double t7774;
  double t7880;
  double t7881;
  double t7884;
  double t7889;
  double t7890;
  double t7891;
  double t7894;
  double t7895;
  double t7897;
  double t7899;
  double t7842;
  double t7857;
  double t7865;
  double t7177;
  double t7178;
  double t7179;
  double t7941;
  double t7028;
  double t7043;
  double t7044;
  double t7951;
  double t7956;
  double t8016;
  double t8017;
  double t8020;
  double t8023;
  double t8024;
  double t8025;
  double t8042;
  double t8043;
  double t8045;
  double t8049;
  double t8052;
  double t8054;
  double t8028;
  double t8029;
  double t8030;
  double t8032;
  double t8034;
  double t8035;
  double t8067;
  double t8069;
  double t8071;
  double t8072;
  double t8085;
  double t8086;
  double t8087;
  double t8088;
  double t8074;
  double t8075;
  double t8078;
  double t8082;
  double t8118;
  double t8119;
  double t8120;
  double t8121;
  double t8122;
  double t8123;
  double t8124;
  double t8129;
  double t8130;
  double t8131;
  double t8133;
  double t8134;
  double t8135;
  double t8146;
  double t8147;
  double t8149;
  double t8150;
  double t8153;
  double t8154;
  double t8155;
  double t8144;
  double t8145;
  double t8151;
  double t8158;
  double t8159;
  double t8160;
  double t8162;
  double t8163;
  double t8164;
  double t8168;
  double t8169;
  double t8170;
  double t8171;
  double t8172;
  double t8174;
  double t8176;
  double t8178;
  double t8179;
  double t8185;
  double t8186;
  double t8188;
  double t8189;
  double t8190;
  double t8191;
  double t8193;
  double t8194;
  double t8197;
  double t8200;
  double t8201;
  double t8202;
  double t8203;
  double t8204;
  double t8205;
  double t8206;
  double t8207;
  double t8208;
  double t8246;
  double t8248;
  double t8255;
  double t8262;
  double t8305;
  double t8307;
  double t8314;
  double t8317;
  double t8408;
  double t8415;
  double t8421;
  double t8423;
  double t8456;
  double t8462;
  double t8472;
  double t8475;
  double t8544;
  double t8545;
  double t8548;
  double t8550;
  double t8551;
  double t8552;
  double t8553;
  double t8556;
  double t8558;
  double t8559;
  double t8560;
  double t8562;
  double t8563;
  double t8523;
  double t8527;
  double t8533;
  double t8535;
  double t8602;
  double t8605;
  double t8611;
  double t8613;
  t48 = Cos(var1[4]);
  t81 = Cos(var1[6]);
  t94 = -1.*t81;
  t97 = 1. + t94;
  t162 = 0.15121*t97;
  t163 = Sin(var1[6]);
  t66 = Sin(var1[5]);
  t235 = Cos(var1[5]);
  t374 = Cos(var1[7]);
  t380 = -1.*t374;
  t385 = 1. + t380;
  t400 = Sin(var1[7]);
  t633 = Sin(var1[4]);
  t906 = -1. + t374;
  t308 = -1.*t48*t81*t66;
  t320 = -1.*t48*t235*t163;
  t339 = t308 + t320;
  t435 = t48*t235*t81;
  t476 = -1.*t48*t66*t163;
  t486 = t435 + t476;
  t1022 = Cos(var1[8]);
  t1105 = -1.*t1022;
  t1122 = 1. + t1105;
  t1181 = Sin(var1[8]);
  t912 = 4.e-6*t906*t633;
  t939 = 1.6e-11*t906;
  t941 = 1. + t939;
  t973 = t941*t339;
  t975 = 4.e-6*t486*t400;
  t996 = t912 + t973 + t975;
  t2163 = -1. + t1022;
  t1602 = t374*t633;
  t1645 = 4.e-6*t906*t339;
  t1671 = t486*t400;
  t1681 = t1602 + t1645 + t1671;
  t1378 = -1.000000000016*t385;
  t1383 = 1. + t1378;
  t1392 = t1383*t486;
  t1402 = -1.*t633*t400;
  t1463 = -4.e-6*t339*t400;
  t1472 = t1392 + t1402 + t1463;
  t2747 = -1.000000000016*t1122;
  t2764 = 1. + t2747;
  t2165 = 1.6e-11*t2163;
  t498 = 0.281210000008499*t385;
  t510 = 0.03874900000062*t400;
  t1764 = 5.136e-14*var1[8];
  t1789 = -0.03874900000062*t1122;
  t1005 = -1.284e-8*var1[8];
  t2168 = 1. + t2165;
  t1144 = -1.5499600000248e-7*t1122;
  t1487 = 0.503210000016051*t1122;
  t3639 = 1.6e-11*t1122;
  t3685 = 1. + t3639 + t2165;
  t3740 = 4.e-6*t2163;
  t3743 = -4.e-6*t1022;
  t3759 = t3740 + t3743;
  t690 = 4.9936e-13*var1[7];
  t729 = -0.03874900000062*t385;
  t742 = 0.281210000004*t400;
  t3799 = 5.9484e-7*t2163;
  t3806 = -0.03875*t1022;
  t3808 = -0.299999999992*t1181;
  t3838 = t1764 + t1789 + t3799 + t3806 + t3808;
  t3870 = 0.14871*t2168;
  t3928 = -1.55e-7*t2163;
  t3962 = -1.199999999968e-6*t1181;
  t3963 = t1005 + t3870 + t1144 + t3928 + t3962;
  t4117 = 0.80321*t2764;
  t4157 = -4.05159380016e-7*t1181;
  t4192 = t4117 + t1487 + t4157;
  t365 = -1.2484e-7*var1[7];
  t392 = -1.5499600000248e-7*t385;
  t406 = 1.124840000016e-6*t400;
  t4232 = 4.e-6*t906*t3685;
  t4261 = t374*t3759;
  t4268 = t4232 + t4261;
  t3867 = t400*t3838;
  t4052 = 4.e-6*t400*t3963;
  t4194 = t1383*t4192;
  t4198 = t498 + t510 + t3867 + t4052 + t4194;
  t4887 = -1. + t3639;
  t4894 = 4.e-6*t4887;
  t4905 = 4.e-6*t1122;
  t4913 = t4894 + t4905;
  t4935 = t3639 + t1105;
  t4798 = 4.e-6*t906*t3838;
  t4805 = t941*t3963;
  t4819 = -4.e-6*t400*t4192;
  t4871 = t365 + t392 + t406 + t4798 + t4805 + t4819;
  t4276 = t374*t3838;
  t4414 = 4.e-6*t906*t3963;
  t4513 = -1.*t400*t4192;
  t4536 = t690 + t729 + t742 + t4276 + t4414 + t4513;
  t4916 = 4.e-6*t906*t4913;
  t4936 = t374*t4935;
  t4982 = 1.000000000016*t400*t1181;
  t5009 = t4916 + t4936 + t4982;
  t3283 = -4.e-6*t2764*t400;
  t3380 = -4.e-6*t941*t1181;
  t3440 = -4.e-6*t906*t1181;
  t3466 = t3283 + t3380 + t3440;
  t3513 = -0.15121*t3466;
  t3534 = t1383*t2764;
  t3549 = -1.000000000016*t400*t1181;
  t3597 = t3534 + t3549;
  t3638 = 0.15121*t3597;
  t3733 = 4.e-6*t3685*t400;
  t3770 = t3759*t400;
  t3789 = t3733 + t3770;
  t4218 = t3789*t4198;
  t4539 = t4268*t4536;
  t4645 = t941*t3685;
  t4674 = 4.e-6*t906*t3759;
  t4716 = t4645 + t4674;
  t4877 = t4716*t4871;
  t4886 = t4218 + t4539 + t4877;
  t5049 = t4886*t5009;
  t5072 = 4.e-6*t4913*t400;
  t5086 = t4935*t400;
  t5093 = -1.000000000016*t1383*t1181;
  t5098 = t5072 + t5086 + t5093;
  t5128 = -1.*t4198*t5098;
  t5151 = t941*t4913;
  t5159 = 4.e-6*t906*t4935;
  t5160 = 4.000000000064e-6*t400*t1181;
  t5163 = t5151 + t5159 + t5160;
  t5164 = -1.*t4871*t5163;
  t5165 = -1.*t4536*t5009;
  t5166 = t5128 + t5164 + t5165;
  t5167 = t4268*t5166;
  t5168 = t3513 + t3638 + t5049 + t5167;
  t5188 = t3759*t3838;
  t5189 = t3685*t3963;
  t5190 = t5188 + t5189;
  t5193 = -1.*t4935*t3838;
  t5194 = -1.*t4913*t3963;
  t5198 = 1.000000000016*t4192*t1181;
  t5201 = t5193 + t5194 + t5198;
  t5187 = 0.038749*t2764;
  t5191 = t4913*t5190;
  t5192 = -0.281210000004*t1181;
  t5213 = t3685*t5201;
  t5218 = -1.*t4935*t5190;
  t5224 = -1.*t3759*t5201;
  t5230 = t5218 + t5224;
  t5236 = 4.e-6*t5230;
  t5238 = t5187 + t5191 + t5192 + t5213 + t5236;
  t5259 = -1.*t2764*t400;
  t5260 = -1.6e-11*t906*t1181;
  t5265 = -1.*t374*t1181;
  t5269 = t5259 + t5260 + t5265;
  t5270 = t633*t5269;
  t5271 = -1.*t163*t3466;
  t5272 = t81*t3597;
  t5273 = t5271 + t5272;
  t5275 = t235*t5273;
  t5276 = t81*t3466;
  t5279 = t163*t3597;
  t5280 = t5276 + t5279;
  t5281 = -1.*t66*t5280;
  t5289 = t5275 + t5281;
  t5290 = t48*t5289;
  t5291 = t5270 + t5290;
  t195 = -0.15121*t163;
  t236 = 0.15121*t163;
  t5302 = t163*t4198;
  t5303 = t81*t4871;
  t5310 = t162 + t195 + t5302 + t5303;
  t5320 = t81*t4198;
  t5321 = -1.*t163*t4871;
  t5323 = t162 + t236 + t5320 + t5321;
  t5298 = t81*t4716;
  t5300 = t163*t3789;
  t5301 = t5298 + t5300;
  t5311 = t5301*t5310;
  t5312 = -1.*t4716*t163;
  t5318 = t81*t3789;
  t5319 = t5312 + t5318;
  t5325 = t5319*t5323;
  t5326 = t5311 + t5325 + t4539;
  t5337 = t5326*t5009;
  t5338 = t163*t5098;
  t5344 = t81*t5163;
  t5350 = t5338 + t5344;
  t5351 = -1.*t5310*t5350;
  t5352 = t81*t5098;
  t5364 = -1.*t163*t5163;
  t5365 = t5352 + t5364;
  t5367 = -1.*t5323*t5365;
  t5372 = t5165 + t5351 + t5367;
  t5373 = t4268*t5372;
  t5374 = t5337 + t5373;
  t5385 = Sin(var1[3]);
  t5393 = t66*t5273;
  t5411 = t235*t5280;
  t5415 = t5393 + t5411;
  t5416 = t5385*t5415;
  t5417 = Cos(var1[3]);
  t5421 = t48*t5269;
  t5425 = -1.*t633*t5289;
  t5429 = t5421 + t5425;
  t5430 = t5417*t5429;
  t5434 = t5416 + t5430;
  t5442 = t5417*t5415;
  t5444 = -1.*t5385*t5429;
  t5448 = t5442 + t5444;
  t5474 = t66*t5319;
  t5477 = t235*t5301;
  t5478 = t5474 + t5477;
  t5467 = -1.*t66*t5310;
  t5469 = t235*t5323;
  t5470 = t5467 + t5469;
  t5480 = t235*t5310;
  t5488 = t66*t5323;
  t5505 = t5480 + t5488;
  t5541 = t235*t5350;
  t5551 = t66*t5365;
  t5559 = t5541 + t5551;
  t5458 = t235*t5319;
  t5459 = -1.*t66*t5301;
  t5466 = t5458 + t5459;
  t5473 = t5466*t5470;
  t5510 = t5478*t5505;
  t5513 = t5473 + t5510 + t4539;
  t5560 = t5513*t5559;
  t5561 = -1.*t66*t5350;
  t5566 = t235*t5365;
  t5567 = t5561 + t5566;
  t5576 = -1.*t5470*t5567;
  t5579 = -1.*t5505*t5559;
  t5587 = t5165 + t5576 + t5579;
  t5589 = t5478*t5587;
  t5592 = t5560 + t5589;
  t5721 = t4268*t633;
  t5725 = t48*t5466;
  t5728 = t5721 + t5725;
  t5730 = t48*t5470;
  t5731 = t633*t4536;
  t5737 = t5730 + t5731;
  t5745 = t633*t5009;
  t5746 = t48*t5567;
  t5750 = t5745 + t5746;
  t5688 = -1.*t633*t5470;
  t5689 = t48*t4536;
  t5691 = t5688 + t5689;
  t5672 = t48*t4268;
  t5676 = -1.*t633*t5466;
  t5678 = t5672 + t5676;
  t5706 = t5678*t5691;
  t5741 = t5728*t5737;
  t5742 = t5510 + t5706 + t5741;
  t5755 = t5742*t5750;
  t5756 = -1.*t5737*t5750;
  t5762 = t48*t5009;
  t5763 = -1.*t633*t5567;
  t5773 = t5762 + t5763;
  t5783 = -1.*t5691*t5773;
  t5792 = t5579 + t5756 + t5783;
  t5793 = t5728*t5792;
  t5796 = t5755 + t5793;
  t5809 = -1.*t66*t5273;
  t5810 = -1.*t81*t3466;
  t5820 = -1.*t163*t3597;
  t5828 = t5810 + t5820;
  t5829 = t235*t5828;
  t5830 = t5809 + t5829;
  t5844 = t66*t5828;
  t5852 = t5275 + t5844;
  t5918 = -0.15121*t81;
  t5926 = t5918 + t236 + t5320 + t5321;
  t5879 = 0.15121*t81;
  t5880 = -1.*t163*t4198;
  t5884 = -1.*t81*t4871;
  t5893 = t5879 + t236 + t5880 + t5884;
  t5986 = -1.*t163*t5098;
  t5993 = -1.*t81*t5163;
  t5994 = t5986 + t5993;
  t5902 = -1.*t81*t4716;
  t5904 = -1.*t163*t3789;
  t5905 = t5902 + t5904;
  t6071 = t66*t5905;
  t6076 = t5458 + t6071;
  t6038 = t66*t5994;
  t6045 = t6038 + t5566;
  t6115 = t235*t5893;
  t6116 = -1.*t66*t5926;
  t6118 = t6115 + t6116;
  t6079 = t66*t5893;
  t6104 = t235*t5926;
  t6105 = t6079 + t6104;
  t6138 = t235*t5994;
  t6139 = -1.*t66*t5365;
  t6145 = t6138 + t6139;
  t6077 = t6076*t5505;
  t6110 = t5478*t6105;
  t6063 = -1.*t66*t5319;
  t6065 = t235*t5905;
  t6069 = t6063 + t6065;
  t6135 = -1.*t5505*t6045;
  t6151 = -1.*t6105*t5559;
  t6253 = -1.*t235*t5280;
  t6255 = t5809 + t6253;
  t6307 = -1.*t235*t5310;
  t6308 = -1.*t66*t5323;
  t6312 = t6307 + t6308;
  t6331 = -1.*t235*t5350;
  t6334 = t6331 + t6139;
  t6306 = t5478*t5470;
  t6317 = t5466*t5505;
  t6298 = -1.*t235*t5301;
  t6302 = t6063 + t6298;
  t6328 = -1.*t5505*t5567;
  t6337 = -1.*t5470*t5559;
  t6425 = -1.*t633*t5269;
  t6435 = -1.*t48*t5289;
  t6436 = t6425 + t6435;
  t6449 = -1.*t48*t5470;
  t6451 = -1.*t633*t4536;
  t6454 = t6449 + t6451;
  t6558 = -4.e-6*t3685*t400;
  t6559 = -1.*t3759*t400;
  t6561 = t6558 + t6559;
  t6547 = 0.03874900000062*t374;
  t6549 = 0.281210000008499*t400;
  t6551 = 4.e-6*t374*t3963;
  t6555 = -1.000000000016*t400*t4192;
  t6556 = t6547 + t6549 + t4276 + t6551 + t6555;
  t6511 = -4.e-6*t4913*t400;
  t6512 = -1.*t4935*t400;
  t6513 = 1.000000000016*t374*t1181;
  t6515 = t6511 + t6512 + t6513;
  t6535 = 1.124840000016e-6*t374;
  t6537 = -1.5499600000248e-7*t400;
  t6538 = -4.e-6*t400*t3838;
  t6539 = -1.6e-11*t400*t3963;
  t6541 = -4.e-6*t374*t4192;
  t6545 = -1.2484e-7 + t6535 + t6537 + t6538 + t6539 + t6541;
  t6527 = 0.281210000004*t374;
  t6528 = -0.03874900000062*t400;
  t6529 = -1.*t400*t3838;
  t6530 = -4.e-6*t400*t3963;
  t6532 = -1.*t374*t4192;
  t6533 = 4.9936e-13 + t6527 + t6528 + t6529 + t6530 + t6532;
  t6507 = -1.000000000016*t2764*t400;
  t6508 = -1.000000000016*t374*t1181;
  t6509 = t6507 + t6508;
  t6518 = -4.e-6*t374*t2764;
  t6519 = t6518 + t5160;
  t6524 = 4.e-6*t374*t3685;
  t6525 = t6524 + t4261;
  t6563 = -1.6e-11*t3685*t400;
  t6564 = -4.e-6*t3759*t400;
  t6565 = t6563 + t6564;
  t6534 = t4268*t6533;
  t6562 = t6561*t4536;
  t6587 = -1.*t4536*t6515;
  t6590 = -1.*t6533*t5009;
  t6667 = t81*t6545;
  t6669 = t163*t6556;
  t6670 = t6667 + t6669;
  t6655 = -1.*t163*t6545;
  t6656 = t81*t6556;
  t6657 = t6655 + t6656;
  t6577 = -1.6e-11*t4913*t400;
  t6582 = -4.e-6*t4935*t400;
  t6584 = 4.000000000064e-6*t374*t1181;
  t6585 = t6577 + t6582 + t6584;
  t6591 = 4.e-6*t374*t4913;
  t6593 = 1.000000000032*t400*t1181;
  t6597 = t6591 + t4936 + t6593;
  t6616 = t163*t6509;
  t6619 = t81*t6519;
  t6620 = t6616 + t6619;
  t6622 = t81*t6509;
  t6627 = -1.*t163*t6519;
  t6628 = t6622 + t6627;
  t6613 = -1.*t374*t2764;
  t6614 = t6613 + t4982;
  t6621 = -1.*t66*t6620;
  t6630 = t235*t6628;
  t6631 = t6621 + t6630;
  t6741 = t235*t6620;
  t6744 = t66*t6628;
  t6746 = t6741 + t6744;
  t6756 = t48*t6614;
  t6759 = -1.*t633*t6631;
  t6760 = t6756 + t6759;
  t6674 = t6525*t163;
  t6675 = t81*t6565;
  t6676 = t6674 + t6675;
  t6678 = t81*t6525;
  t6679 = -1.*t163*t6565;
  t6680 = t6678 + t6679;
  t6709 = -1.*t163*t6585;
  t6710 = t81*t6597;
  t6711 = t6709 + t6710;
  t6713 = t81*t6585;
  t6719 = t163*t6597;
  t6721 = t6713 + t6719;
  t6791 = t235*t6676;
  t6792 = t66*t6680;
  t6793 = t6791 + t6792;
  t6777 = t235*t6657;
  t6778 = -1.*t66*t6670;
  t6779 = t6777 + t6778;
  t6772 = t66*t6657;
  t6773 = t235*t6670;
  t6774 = t6772 + t6773;
  t6797 = t66*t6711;
  t6798 = t235*t6721;
  t6799 = t6797 + t6798;
  t6775 = t5478*t6774;
  t6794 = t6793*t5505;
  t6783 = -1.*t66*t6676;
  t6787 = t235*t6680;
  t6788 = t6783 + t6787;
  t6810 = t235*t6711;
  t6811 = -1.*t66*t6721;
  t6812 = t6810 + t6811;
  t6851 = t633*t6561;
  t6852 = t48*t6788;
  t6853 = t6851 + t6852;
  t6807 = -1.*t6774*t5559;
  t6808 = -1.*t5505*t6799;
  t6832 = t48*t6779;
  t6835 = t633*t6533;
  t6844 = t6832 + t6835;
  t6822 = -1.*t633*t6779;
  t6823 = t48*t6533;
  t6827 = t6822 + t6823;
  t6858 = t633*t6515;
  t6859 = t48*t6812;
  t6861 = t6858 + t6859;
  t6910 = -4.05159380016e-7*t1022;
  t6911 = -0.2999999999968*t1181;
  t6914 = t6910 + t6911;
  t6919 = -1.199999999968e-6*t1022;
  t6920 = 1.620637520064e-12*t1181;
  t6921 = -1.284e-8 + t6919 + t6920;
  t6925 = -0.299999999992*t1022;
  t6926 = 4.05159380016e-7*t1181;
  t6927 = 5.136e-14 + t6925 + t6926;
  t6939 = t1383*t6914;
  t6940 = 4.e-6*t400*t6921;
  t6941 = t400*t6927;
  t6942 = t6939 + t6940 + t6941;
  t6893 = 1.000000000016*t1022*t400;
  t6897 = 1.6000000000256e-11*t906*t1181;
  t6900 = t6893 + t6897 + t6513;
  t6918 = -4.e-6*t400*t6914;
  t6924 = t941*t6921;
  t6928 = 4.e-6*t906*t6927;
  t6929 = t6918 + t6924 + t6928;
  t6932 = -1.*t400*t6914;
  t6933 = 4.e-6*t906*t6921;
  t6934 = t374*t6927;
  t6935 = t6932 + t6933 + t6934;
  t6968 = t3685*t6921;
  t6973 = t3759*t6927;
  t6975 = t6968 + t6973;
  t6981 = 1.000000000016*t1022*t4192;
  t6984 = -1.*t4913*t6921;
  t6985 = -1.*t4935*t6927;
  t6986 = 1.000000000016*t6914*t1181;
  t6989 = -1.000000000016*t3838*t1181;
  t6993 = -4.000000000064e-6*t3963*t1181;
  t6994 = t6981 + t6984 + t6985 + t6986 + t6989 + t6993;
  t6885 = -1.000000000016*t1022*t400;
  t6887 = t6885 + t5093;
  t6903 = -4.e-6*t941*t1022;
  t6905 = -4.e-6*t906*t1022;
  t6906 = t6903 + t6905 + t5160;
  t6936 = t4268*t6935;
  t6953 = -1.*t4536*t6900;
  t6955 = -1.*t6935*t5009;
  t7056 = t81*t6929;
  t7060 = t163*t6942;
  t7065 = t7056 + t7060;
  t7051 = -1.*t163*t6929;
  t7053 = t81*t6942;
  t7054 = t7051 + t7053;
  t6948 = 4.000000000064e-6*t1022*t400;
  t6949 = 4.000000000064e-6*t941*t1181;
  t6950 = 4.000000000064e-6*t906*t1181;
  t6951 = t6948 + t6949 + t6950;
  t6956 = -1.000000000016*t1383*t1022;
  t6958 = t6956 + t6593;
  t7029 = t163*t6887;
  t7030 = t81*t6906;
  t7032 = t7029 + t7030;
  t7035 = t81*t6887;
  t7036 = -1.*t163*t6906;
  t7037 = t7035 + t7036;
  t7014 = -1.6e-11*t906*t1022;
  t7016 = -1.*t374*t1022;
  t7021 = t7014 + t7016 + t4982;
  t7033 = -1.*t66*t7032;
  t7038 = t235*t7037;
  t7040 = t7033 + t7038;
  t7098 = t235*t7032;
  t7099 = t66*t7037;
  t7100 = t7098 + t7099;
  t7102 = t48*t7021;
  t7103 = -1.*t633*t7040;
  t7104 = t7102 + t7103;
  t7078 = -1.*t163*t6951;
  t7080 = t81*t6958;
  t7084 = t7078 + t7080;
  t7089 = t81*t6951;
  t7090 = t163*t6958;
  t7091 = t7089 + t7090;
  t7121 = t235*t7054;
  t7122 = -1.*t66*t7065;
  t7124 = t7121 + t7122;
  t7116 = t66*t7054;
  t7117 = t235*t7065;
  t7119 = t7116 + t7117;
  t7128 = t66*t7084;
  t7129 = t235*t7091;
  t7131 = t7128 + t7129;
  t7120 = t5478*t7119;
  t7136 = t235*t7084;
  t7138 = -1.*t66*t7091;
  t7139 = t7136 + t7138;
  t7134 = -1.*t7119*t5559;
  t7135 = -1.*t5505*t7131;
  t7158 = t48*t7124;
  t7160 = t633*t6935;
  t7161 = t7158 + t7160;
  t7151 = -1.*t633*t7124;
  t7153 = t48*t6935;
  t7155 = t7151 + t7153;
  t7165 = t633*t6900;
  t7166 = t48*t7139;
  t7167 = t7165 + t7166;
  t204 = t162 + t195;
  t257 = t162 + t236;
  t7194 = t5417*t235;
  t7195 = -1.*t5385*t633*t66;
  t7196 = t7194 + t7195;
  t7203 = t235*t5385*t633;
  t7204 = t5417*t66;
  t7205 = t7203 + t7204;
  t418 = t365 + t392 + t406;
  t544 = t498 + t510;
  t793 = t690 + t729 + t742;
  t7208 = t81*t7196;
  t7210 = -1.*t7205*t163;
  t7211 = t7208 + t7210;
  t7220 = t81*t7205;
  t7222 = t7196*t163;
  t7224 = t7220 + t7222;
  t1237 = 2.012840000032e-6*t1181;
  t1267 = t1005 + t1144 + t1237;
  t1524 = 0.03874900000062*t1181;
  t1535 = t1487 + t1524;
  t1829 = 0.503210000008*t1181;
  t1933 = t1764 + t1789 + t1829;
  t7228 = -4.e-6*t48*t906*t5385;
  t7229 = t941*t7211;
  t7231 = 4.e-6*t7224*t400;
  t7235 = t7228 + t7229 + t7231;
  t7250 = -1.*t48*t374*t5385;
  t7251 = 4.e-6*t906*t7211;
  t7252 = t7224*t400;
  t7253 = t7250 + t7251 + t7252;
  t7239 = t1383*t7224;
  t7240 = t48*t5385*t400;
  t7241 = -4.e-6*t7211*t400;
  t7245 = t7239 + t7240 + t7241;
  t7284 = 0.15121*t5098;
  t7285 = -1.*t3789*t4198;
  t7287 = -1.*t4268*t4536;
  t7288 = -1.*t4716*t4871;
  t7289 = t7285 + t7287 + t7288;
  t7290 = t7289*t5269;
  t7293 = -0.15121*t5163;
  t7295 = t4871*t3466;
  t7296 = t4536*t5269;
  t7299 = t4198*t3597;
  t7300 = t7295 + t7296 + t7299;
  t7302 = t4268*t7300;
  t7303 = t7284 + t7290 + t7293 + t7302;
  t6979 = -0.03874900000062*t1181;
  t7308 = -1.*t3759*t3838;
  t7309 = -1.*t3685*t3963;
  t7310 = t7308 + t7309;
  t7315 = t2764*t4192;
  t7317 = -1.*t3838*t1181;
  t7318 = -4.e-6*t3963*t1181;
  t7320 = t7315 + t7317 + t7318;
  t7306 = 1.e-6*t4913;
  t7307 = 0.28121*t4935;
  t7312 = -4.e-6*t7310*t1181;
  t7321 = t3685*t7320;
  t7323 = t7310*t1181;
  t7325 = -1.*t3759*t7320;
  t7328 = t7323 + t7325;
  t7332 = 4.e-6*t7328;
  t7334 = t7306 + t7307 + t6979 + t7312 + t7321 + t7332;
  t7338 = -1.*t5301*t5310;
  t7348 = -1.*t5319*t5323;
  t7357 = t7338 + t7348 + t7287;
  t7363 = t7357*t5269;
  t7371 = t5323*t5273;
  t7375 = t5310*t5280;
  t7379 = t7296 + t7371 + t7375;
  t7380 = t4268*t7379;
  t7383 = t7363 + t7380;
  t7390 = -1.*t5466*t5470;
  t7395 = -1.*t5478*t5505;
  t7396 = t7390 + t7395 + t7287;
  t7398 = t7396*t5415;
  t7399 = t5505*t5415;
  t7403 = t5470*t5289;
  t7406 = t7296 + t7399 + t7403;
  t7409 = t5478*t7406;
  t7410 = t7398 + t7409;
  t7419 = t5385*t5559;
  t7420 = t5417*t5773;
  t7422 = t7419 + t7420;
  t7426 = t5417*t5559;
  t7429 = -1.*t5385*t5773;
  t7432 = t7426 + t7429;
  t7439 = -1.*t5678*t5691;
  t7440 = -1.*t5728*t5737;
  t7444 = t7395 + t7439 + t7440;
  t7446 = t7444*t5291;
  t7447 = t5737*t5291;
  t7448 = t5691*t5429;
  t7452 = t7399 + t7447 + t7448;
  t7453 = t5728*t7452;
  t7454 = t7446 + t7453;
  t7517 = -1.*t6076*t5505;
  t7518 = -1.*t5478*t6105;
  t7528 = t5505*t5852;
  t7529 = t6105*t5415;
  t7578 = -1.*t5478*t5470;
  t7583 = -1.*t5466*t5505;
  t7597 = t5470*t5415;
  t7600 = t5505*t5289;
  t6470 = -1.*t633*t5009;
  t6473 = -1.*t48*t5567;
  t6477 = t6470 + t6473;
  t6443 = -1.*t4268*t633;
  t6444 = -1.*t48*t5466;
  t6445 = t6443 + t6444;
  t7676 = -1.*t4268*t6533;
  t7685 = -1.*t6561*t4536;
  t7704 = t6533*t5269;
  t7712 = t4536*t6614;
  t6868 = t48*t6515;
  t6869 = -1.*t633*t6812;
  t6871 = t6868 + t6869;
  t7753 = -1.*t5478*t6774;
  t7758 = -1.*t6793*t5505;
  t6847 = t48*t6561;
  t6848 = -1.*t633*t6788;
  t6849 = t6847 + t6848;
  t6615 = t633*t6614;
  t6633 = t48*t6631;
  t6641 = t6615 + t6633;
  t7767 = t6774*t5415;
  t7774 = t5505*t6746;
  t7880 = -1.*t3685*t6921;
  t7881 = -1.*t3759*t6927;
  t7884 = t7880 + t7881;
  t7889 = t2764*t6914;
  t7890 = -1.*t1022*t3838;
  t7891 = -4.e-6*t1022*t3963;
  t7894 = -1.000000000016*t4192*t1181;
  t7895 = -4.e-6*t6921*t1181;
  t7897 = -1.*t6927*t1181;
  t7899 = t7889 + t7890 + t7891 + t7894 + t7895 + t7897;
  t7842 = -1.*t4268*t6935;
  t7857 = t6935*t5269;
  t7865 = t4536*t7021;
  t7177 = t48*t6900;
  t7178 = -1.*t633*t7139;
  t7179 = t7177 + t7178;
  t7941 = -1.*t5478*t7119;
  t7028 = t633*t7021;
  t7043 = t48*t7040;
  t7044 = t7028 + t7043;
  t7951 = t7119*t5415;
  t7956 = t5505*t7100;
  t8016 = t235*t5385;
  t8017 = t5417*t633*t66;
  t8020 = t8016 + t8017;
  t8023 = -1.*t5417*t235*t633;
  t8024 = t5385*t66;
  t8025 = t8023 + t8024;
  t8042 = t5385*t5478;
  t8043 = t5417*t5678;
  t8045 = t8042 + t8043;
  t8049 = t5417*t5478;
  t8052 = -1.*t5385*t5678;
  t8054 = t8049 + t8052;
  t8028 = t81*t8020;
  t8029 = -1.*t8025*t163;
  t8030 = t8028 + t8029;
  t8032 = t81*t8025;
  t8034 = t8020*t163;
  t8035 = t8032 + t8034;
  t8067 = 4.e-6*t5417*t48*t906;
  t8069 = t941*t8030;
  t8071 = 4.e-6*t8035*t400;
  t8072 = t8067 + t8069 + t8071;
  t8085 = t5417*t48*t374;
  t8086 = 4.e-6*t906*t8030;
  t8087 = t8035*t400;
  t8088 = t8085 + t8086 + t8087;
  t8074 = t1383*t8035;
  t8075 = -1.*t5417*t48*t400;
  t8078 = -4.e-6*t8030*t400;
  t8082 = t8074 + t8075 + t8078;
  t8118 = -0.15121*t4716;
  t8119 = 0.15121*t3789;
  t8120 = -1.*t4871*t3466;
  t8121 = -1.*t4536*t5269;
  t8122 = -1.*t4198*t3597;
  t8123 = t8120 + t8121 + t8122;
  t8124 = t5009*t8123;
  t8129 = t4198*t5098;
  t8130 = t4871*t5163;
  t8131 = t4536*t5009;
  t8133 = t8129 + t8130 + t8131;
  t8134 = t5269*t8133;
  t8135 = t8118 + t8119 + t8124 + t8134;
  t8146 = -1.*t2764*t4192;
  t8147 = t3838*t1181;
  t8149 = 4.e-6*t3963*t1181;
  t8150 = t8146 + t8147 + t8149;
  t8153 = t4935*t3838;
  t8154 = t4913*t3963;
  t8155 = t8153 + t8154 + t7894;
  t8144 = 1.e-6*t3685;
  t8145 = 0.28121*t3759;
  t8151 = t4913*t8150;
  t8158 = -4.e-6*t1181*t8155;
  t8159 = -1.*t4935*t8150;
  t8160 = t1181*t8155;
  t8162 = t8159 + t8160;
  t8163 = 4.e-6*t8162;
  t8164 = t8144 + t8145 + t8151 + t8158 + t8163;
  t8168 = -1.*t5323*t5273;
  t8169 = -1.*t5310*t5280;
  t8170 = t8121 + t8168 + t8169;
  t8171 = t5009*t8170;
  t8172 = t5310*t5350;
  t8174 = t5323*t5365;
  t8176 = t8131 + t8172 + t8174;
  t8178 = t5269*t8176;
  t8179 = t8171 + t8178;
  t8185 = -1.*t5505*t5415;
  t8186 = -1.*t5470*t5289;
  t8188 = t8121 + t8185 + t8186;
  t8189 = t5559*t8188;
  t8190 = t5470*t5567;
  t8191 = t5505*t5559;
  t8193 = t8131 + t8190 + t8191;
  t8194 = t5415*t8193;
  t8197 = t8189 + t8194;
  t8200 = -1.*t5737*t5291;
  t8201 = -1.*t5691*t5429;
  t8202 = t8185 + t8200 + t8201;
  t8203 = t5750*t8202;
  t8204 = t5737*t5750;
  t8205 = t5691*t5773;
  t8206 = t8191 + t8204 + t8205;
  t8207 = t5291*t8206;
  t8208 = t8203 + t8207;
  t8246 = -1.*t5505*t5852;
  t8248 = -1.*t6105*t5415;
  t8255 = t5505*t6045;
  t8262 = t6105*t5559;
  t8305 = -1.*t5470*t5415;
  t8307 = -1.*t5505*t5289;
  t8314 = t5505*t5567;
  t8317 = t5470*t5559;
  t8408 = -1.*t6533*t5269;
  t8415 = -1.*t4536*t6614;
  t8421 = t4536*t6515;
  t8423 = t6533*t5009;
  t8456 = -1.*t6774*t5415;
  t8462 = -1.*t5505*t6746;
  t8472 = t6774*t5559;
  t8475 = t5505*t6799;
  t8544 = -1.000000000016*t1022*t4192;
  t8545 = t4913*t6921;
  t8548 = t4935*t6927;
  t8550 = -1.000000000016*t6914*t1181;
  t8551 = 1.000000000016*t3838*t1181;
  t8552 = 4.000000000064e-6*t3963*t1181;
  t8553 = t8544 + t8545 + t8548 + t8550 + t8551 + t8552;
  t8556 = -1.*t2764*t6914;
  t8558 = t1022*t3838;
  t8559 = 4.e-6*t1022*t3963;
  t8560 = 4.e-6*t6921*t1181;
  t8562 = t6927*t1181;
  t8563 = t8556 + t8558 + t8559 + t5198 + t8560 + t8562;
  t8523 = -1.*t6935*t5269;
  t8527 = -1.*t4536*t7021;
  t8533 = t4536*t6900;
  t8535 = t6935*t5009;
  t8602 = -1.*t7119*t5415;
  t8605 = -1.*t5505*t7100;
  t8611 = t7119*t5559;
  t8613 = t5505*t7131;
  p_output1[0]=t1472*t1535 + t1681*t1933 + t339*t418 + t235*t257*t48 + t486*t544 - 1.*t204*t48*t66 + t633*t793 + t1267*t996 + 0.80321*(-1.*t1181*t1681 + t1472*t2764 - 4.e-6*t1181*t996) - 0.03875*(t1181*t1472 + t1022*t1681 + 4.e-6*t2163*t996) + 0.14871*(4.e-6*t1181*t1472 + 4.e-6*t1681*t2163 + t2168*t996) + var1[0] + t5291*var2[0] + t5448*var2[1] + t5434*var2[2] + t5796*var2[3] + ((-1.*t5385*t5415 - 1.*t5417*t5429)*var2[1] + t5448*var2[2])*var2[3] + t5592*var2[4] + (t5429*var2[0] - 1.*t5385*t6436*var2[1] + t5417*t6436*var2[2] + (t5742*t5773 + t5678*t5792 + t5750*(t5691*t5728 + t5678*t5737 + t5691*t6445 + t5678*t6454) + t5728*(-1.*t5691*t5750 - 1.*t5737*t5773 - 1.*t5773*t6454 - 1.*t5691*t6477))*var2[3])*var2[4] + t5374*var2[5] + (t48*t6255*var2[0] + (t5289*t5417 + t5385*t6255*t633)*var2[1] + (t5289*t5385 - 1.*t5417*t6255*t633)*var2[2] + (t48*t5792*t6302 + t5750*(t48*t5737*t6302 + t6306 + t48*t5728*t6312 + t6317 - 1.*t5691*t6302*t633 - 1.*t5678*t6312*t633) + t48*t5742*t6334 + t5728*(-1.*t48*t5750*t6312 + t6328 + t5773*t6312*t633 - 1.*t48*t5737*t6334 + t5691*t633*t6334 + t6337))*var2[3] + (t5513*t5567 + t5466*t5587 + t5559*(t5470*t6302 + t6306 + t5466*t6312 + t6317) + t5478*(-1.*t5567*t6312 + t6328 - 1.*t5470*t6334 + t6337))*var2[4])*var2[5] + t5168*var2[6] + (t48*t5830*var2[0] + (t5417*t5852 + t5385*t5830*t633)*var2[1] + (t5385*t5852 - 1.*t5417*t5830*t633)*var2[2] + (t48*t5792*t6069 + t48*t5742*t6145 + t5750*(t48*t5737*t6069 + t6077 + t6110 + t48*t5728*t6118 - 1.*t5691*t6069*t633 - 1.*t5678*t6118*t633) + t5728*(-1.*t48*t5750*t6118 + t6135 - 1.*t48*t5737*t6145 + t6151 + t5773*t6118*t633 + t5691*t6145*t633))*var2[3] + (t5513*t6045 + t5587*t6076 + t5559*(t5470*t6069 + t6077 + t6110 + t5466*t6118) + t5478*(-1.*t5567*t6118 + t6135 - 1.*t5470*t6145 + t6151))*var2[4] + (t5009*(t5310*t5319 + t5319*t5893 + t5323*t5905 + t5301*t5926) + t4268*(-1.*t5310*t5365 - 1.*t5365*t5893 - 1.*t5350*t5926 - 1.*t5323*t5994))*var2[5])*var2[6] + t5238*var2[7] + (t6641*var2[0] + (t5417*t6746 - 1.*t5385*t6760)*var2[1] + (t5385*t6746 + t5417*t6760)*var2[2] + (t5792*t6853 + t5750*(t6775 + t6794 + t5678*t6827 + t5728*t6844 + t5691*t6849 + t5737*t6853) + t5742*t6861 + t5728*(t6807 + t6808 - 1.*t5773*t6827 - 1.*t5750*t6844 - 1.*t5737*t6861 - 1.*t5691*t6871))*var2[3] + (t5587*t6793 + t5559*(t6534 + t6562 + t6775 + t5466*t6779 + t5470*t6788 + t6794) + t5513*t6799 + t5478*(t6587 + t6590 - 1.*t5567*t6779 + t6807 + t6808 - 1.*t5470*t6812))*var2[4] + (t5326*t6515 + t5372*t6561 + t5009*(t6534 + t6562 + t5319*t6657 + t5301*t6670 + t5310*t6676 + t5323*t6680) + t4268*(t6587 + t6590 - 1.*t5365*t6657 - 1.*t5350*t6670 - 1.*t5323*t6711 - 1.*t5310*t6721))*var2[5] + (0.15121*t6509 + t4886*t6515 - 0.15121*t6519 + t5166*t6561 + t5009*(t4198*t6525 + t6534 + t4716*t6545 + t3789*t6556 + t6562 + t4871*t6565) + t4268*(-1.*t5163*t6545 - 1.*t5098*t6556 - 1.*t4871*t6585 + t6587 + t6590 - 1.*t4198*t6597))*var2[6])*var2[7] - 4.05160619990483e-7*var2[8] + (t7044*var2[0] + (t5417*t7100 - 1.*t5385*t7104)*var2[1] + (t5385*t7100 + t5417*t7104)*var2[2] + (t5750*(t7120 + t5678*t7155 + t5728*t7161) + t5742*t7167 + t5728*(t7134 + t7135 - 1.*t5773*t7155 - 1.*t5750*t7161 - 1.*t5737*t7167 - 1.*t5691*t7179))*var2[3] + (t5559*(t6936 + t7120 + t5466*t7124) + t5513*t7131 + t5478*(t6953 + t6955 - 1.*t5567*t7124 + t7134 + t7135 - 1.*t5470*t7139))*var2[4] + (t5326*t6900 + t5009*(t6936 + t5319*t7054 + t5301*t7065) + t4268*(t6953 + t6955 - 1.*t5365*t7054 - 1.*t5350*t7065 - 1.*t5323*t7084 - 1.*t5310*t7091))*var2[5] + (0.15121*t6887 + t4886*t6900 - 0.15121*t6906 + t5009*(t4716*t6929 + t6936 + t3789*t6942) + t4268*(-1.*t5163*t6929 - 1.*t5098*t6942 - 1.*t4871*t6951 + t6953 + t6955 - 1.*t4198*t6958))*var2[6] + (-0.281210000004*t1022 + 4.000000000064e-6*t1181*t5190 + t4913*t6975 + t6979 + t3685*t6994 + 4.e-6*(-1.000000000016*t1181*t5190 - 1.*t4935*t6975 - 1.*t3759*t6994))*var2[7])*var2[8] + t5291*var3[0] + t5448*var3[1] + t5434*var3[2] + t5796*var3[3] + t5592*var3[4] + t5374*var3[5] + t5168*var3[6] + t5238*var3[7] - 4.05160619990483e-7*var3[8] - 1.*var4[0];
  p_output1[1]=t204*t7196 + t257*t7205 + t418*t7211 + t544*t7224 + t1267*t7235 + t1535*t7245 + t1933*t7253 - 0.03875*(4.e-6*t2163*t7235 + t1181*t7245 + t1022*t7253) + 0.80321*(-4.e-6*t1181*t7235 + t2764*t7245 - 1.*t1181*t7253) + 0.14871*(t2168*t7235 + 4.e-6*t1181*t7245 + 4.e-6*t2163*t7253) - 1.*t48*t5385*t793 + var1[1] + t5750*var2[0] + t7432*var2[1] + t7422*var2[2] + t7454*var2[3] + ((-1.*t5385*t5559 - 1.*t5417*t5773)*var2[1] + t7432*var2[2])*var2[3] + t7410*var2[4] + (t5773*var2[0] - 1.*t5385*t6477*var2[1] + t5417*t6477*var2[2] + (t5728*(t5291*t5691 + t5429*t5737 + t5691*t6436 + t5429*t6454) + t5291*(-1.*t5691*t5728 - 1.*t5678*t5737 - 1.*t5691*t6445 - 1.*t5678*t6454) + t5429*t7444 + t5678*t7452)*var2[3])*var2[4] + t7383*var2[5] + (t48*t6334*var2[0] + (t5417*t5567 + t5385*t633*t6334)*var2[1] + (t5385*t5567 - 1.*t5417*t633*t6334)*var2[2] + (t48*t6255*t7444 + t48*t6302*t7452 + t5291*(-1.*t48*t5737*t6302 - 1.*t48*t5728*t6312 + t5691*t6302*t633 + t5678*t6312*t633 + t7578 + t7583) + t5728*(t48*t5737*t6255 + t48*t5291*t6312 - 1.*t5691*t6255*t633 - 1.*t5429*t6312*t633 + t7597 + t7600))*var2[3] + (t5289*t7396 + t5466*t7406 + t5415*(-1.*t5470*t6302 - 1.*t5466*t6312 + t7578 + t7583) + t5478*(t5470*t6255 + t5289*t6312 + t7597 + t7600))*var2[4])*var2[5] + t7303*var2[6] + (t48*t6145*var2[0] + (t5417*t6045 + t5385*t6145*t633)*var2[1] + (t5385*t6045 - 1.*t5417*t6145*t633)*var2[2] + (t48*t5830*t7444 + t48*t6069*t7452 + t5291*(-1.*t48*t5737*t6069 - 1.*t48*t5728*t6118 + t5691*t6069*t633 + t5678*t6118*t633 + t7517 + t7518) + t5728*(t48*t5737*t5830 + t48*t5291*t6118 - 1.*t5691*t5830*t633 - 1.*t5429*t6118*t633 + t7528 + t7529))*var2[3] + (t5852*t7396 + t6076*t7406 + t5415*(-1.*t5470*t6069 - 1.*t5466*t6118 + t7517 + t7518) + t5478*(t5470*t5830 + t5289*t6118 + t7528 + t7529))*var2[4] + (t4268*(t5273*t5310 + t5323*t5828 + t5273*t5893 + t5280*t5926) + t5269*(-1.*t5310*t5319 - 1.*t5319*t5893 - 1.*t5323*t5905 - 1.*t5301*t5926))*var2[5])*var2[6] + t7334*var2[7] + (t6861*var2[0] + (t5417*t6799 - 1.*t5385*t6871)*var2[1] + (t5385*t6799 + t5417*t6871)*var2[2] + (t6641*t7444 + t6853*t7452 + t5291*(-1.*t5678*t6827 - 1.*t5728*t6844 - 1.*t5691*t6849 - 1.*t5737*t6853 + t7753 + t7758) + t5728*(t5737*t6641 + t5691*t6760 + t5429*t6827 + t5291*t6844 + t7767 + t7774))*var2[3] + (t6746*t7396 + t6793*t7406 + t5415*(-1.*t5466*t6779 - 1.*t5470*t6788 + t7676 + t7685 + t7753 + t7758) + t5478*(t5470*t6631 + t5289*t6779 + t7704 + t7712 + t7767 + t7774))*var2[4] + (t6614*t7357 + t6561*t7379 + t5269*(-1.*t5319*t6657 - 1.*t5301*t6670 - 1.*t5310*t6676 - 1.*t5323*t6680 + t7676 + t7685) + t4268*(t5310*t6620 + t5323*t6628 + t5273*t6657 + t5280*t6670 + t7704 + t7712))*var2[5] + (-0.15121*t6585 + 0.15121*t6597 + t6614*t7289 + t6561*t7300 + t5269*(-1.*t4198*t6525 - 1.*t4716*t6545 - 1.*t3789*t6556 - 1.*t4871*t6565 + t7676 + t7685) + t4268*(t4198*t6509 + t4871*t6519 + t3466*t6545 + t3597*t6556 + t7704 + t7712))*var2[6])*var2[7] + 0.300000000004851*var2[8] + (t7167*var2[0] + (t5417*t7131 - 1.*t5385*t7179)*var2[1] + (t5385*t7131 + t5417*t7179)*var2[2] + (t7044*t7444 + t5291*(-1.*t5678*t7155 - 1.*t5728*t7161 + t7941) + t5728*(t5737*t7044 + t5691*t7104 + t5429*t7155 + t5291*t7161 + t7951 + t7956))*var2[3] + (t7100*t7396 + t5415*(-1.*t5466*t7124 + t7842 + t7941) + t5478*(t5470*t7040 + t5289*t7124 + t7857 + t7865 + t7951 + t7956))*var2[4] + (t7021*t7357 + t5269*(-1.*t5319*t7054 - 1.*t5301*t7065 + t7842) + t4268*(t5310*t7032 + t5323*t7037 + t5273*t7054 + t5280*t7065 + t7857 + t7865))*var2[5] + (-0.15121*t6951 + 0.15121*t6958 + t7021*t7289 + t5269*(-1.*t4716*t6929 - 1.*t3789*t6942 + t7842) + t4268*(t4198*t6887 + t4871*t6906 + t3466*t6929 + t3597*t6942 + t7857 + t7865))*var2[6] + (-0.03874900000062*t1022 + 0.281210000008499*t1181 - 4.e-6*t1022*t7310 - 4.e-6*t1181*t7884 + t3685*t7899 + 4.e-6*(t1022*t7310 + t1181*t7884 - 1.*t3759*t7899))*var2[7])*var2[8] + t5750*var3[0] + t7432*var3[1] + t7422*var3[2] + t7454*var3[3] + t7410*var3[4] + t7383*var3[5] + t7303*var3[6] + t7334*var3[7] + 0.300000000004851*var3[8] - 1.*var4[1];
  p_output1[2]=t48*t5417*t793 + t204*t8020 + t257*t8025 + t418*t8030 + t544*t8035 + t1267*t8072 + t1535*t8082 + t1933*t8088 - 0.03875*(4.e-6*t2163*t8072 + t1181*t8082 + t1022*t8088) + 0.80321*(-4.e-6*t1181*t8072 + t2764*t8082 - 1.*t1181*t8088) + 0.14871*(t2168*t8072 + 4.e-6*t1181*t8082 + 4.e-6*t2163*t8088) + var1[2] + t5728*var2[0] + t8054*var2[1] + t8045*var2[2] + t8208*var2[3] + ((-1.*t5385*t5478 - 1.*t5417*t5678)*var2[1] + t8054*var2[2])*var2[3] + t8197*var2[4] + (t5678*var2[0] - 1.*t5385*t6445*var2[1] + t5417*t6445*var2[2] + (t5750*(-1.*t5291*t5691 - 1.*t5429*t5737 - 1.*t5691*t6436 - 1.*t5429*t6454) + t5291*(t5691*t5750 + t5737*t5773 + t5773*t6454 + t5691*t6477) + t5773*t8202 + t5429*t8206)*var2[3])*var2[4] + t8179*var2[5] + (t48*t6302*var2[0] + (t5417*t5466 + t5385*t6302*t633)*var2[1] + (t5385*t5466 - 1.*t5417*t6302*t633)*var2[2] + (t48*t6334*t8202 + t48*t6255*t8206 + t5750*(-1.*t48*t5737*t6255 - 1.*t48*t5291*t6312 + t5691*t6255*t633 + t5429*t6312*t633 + t8305 + t8307) + t5291*(t48*t5750*t6312 - 1.*t5773*t6312*t633 + t48*t5737*t6334 - 1.*t5691*t633*t6334 + t8314 + t8317))*var2[3] + (t5567*t8188 + t5289*t8193 + t5559*(-1.*t5470*t6255 - 1.*t5289*t6312 + t8305 + t8307) + t5415*(t5567*t6312 + t5470*t6334 + t8314 + t8317))*var2[4])*var2[5] + t8135*var2[6] + (t48*t6069*var2[0] + (t5417*t6076 + t5385*t6069*t633)*var2[1] + (t5385*t6076 - 1.*t5417*t6069*t633)*var2[2] + (t48*t6145*t8202 + t48*t5830*t8206 + t5750*(-1.*t48*t5737*t5830 - 1.*t48*t5291*t6118 + t5691*t5830*t633 + t5429*t6118*t633 + t8246 + t8248) + t5291*(t48*t5750*t6118 + t48*t5737*t6145 - 1.*t5773*t6118*t633 - 1.*t5691*t6145*t633 + t8255 + t8262))*var2[3] + (t6045*t8188 + t5852*t8193 + t5559*(-1.*t5470*t5830 - 1.*t5289*t6118 + t8246 + t8248) + t5415*(t5567*t6118 + t5470*t6145 + t8255 + t8262))*var2[4] + (t5009*(-1.*t5273*t5310 - 1.*t5323*t5828 - 1.*t5273*t5893 - 1.*t5280*t5926) + t5269*(t5310*t5365 + t5365*t5893 + t5350*t5926 + t5323*t5994))*var2[5])*var2[6] + t8164*var2[7] + (t6853*var2[0] + (t5417*t6793 - 1.*t5385*t6849)*var2[1] + (t5385*t6793 + t5417*t6849)*var2[2] + (t6861*t8202 + t6641*t8206 + t5750*(-1.*t5737*t6641 - 1.*t5691*t6760 - 1.*t5429*t6827 - 1.*t5291*t6844 + t8456 + t8462) + t5291*(t5773*t6827 + t5750*t6844 + t5737*t6861 + t5691*t6871 + t8472 + t8475))*var2[3] + (t6799*t8188 + t6746*t8193 + t5559*(-1.*t5470*t6631 - 1.*t5289*t6779 + t8408 + t8415 + t8456 + t8462) + t5415*(t5567*t6779 + t5470*t6812 + t8421 + t8423 + t8472 + t8475))*var2[4] + (t6515*t8170 + t6614*t8176 + t5009*(-1.*t5310*t6620 - 1.*t5323*t6628 - 1.*t5273*t6657 - 1.*t5280*t6670 + t8408 + t8415) + t5269*(t5365*t6657 + t5350*t6670 + t5323*t6711 + t5310*t6721 + t8421 + t8423))*var2[5] + (0.15121*t6525 - 0.15121*t6565 + t6515*t8123 + t6614*t8133 + t5009*(-1.*t4198*t6509 - 1.*t4871*t6519 - 1.*t3466*t6545 - 1.*t3597*t6556 + t8408 + t8415) + t5269*(t5163*t6545 + t5098*t6556 + t4871*t6585 + t4198*t6597 + t8421 + t8423))*var2[6])*var2[7] - 1.284e-8*var2[8] + ((t7167*t8202 + t7044*t8206 + t5750*(-1.*t5737*t7044 - 1.*t5691*t7104 - 1.*t5429*t7155 - 1.*t5291*t7161 + t8602 + t8605) + t5291*(t5773*t7155 + t5750*t7161 + t5737*t7167 + t5691*t7179 + t8611 + t8613))*var2[3] + (t7131*t8188 + t7100*t8193 + t5559*(-1.*t5470*t7040 - 1.*t5289*t7124 + t8523 + t8527 + t8602 + t8605) + t5415*(t5567*t7124 + t5470*t7139 + t8533 + t8535 + t8611 + t8613))*var2[4] + (t6900*t8170 + t7021*t8176 + t5009*(-1.*t5310*t7032 - 1.*t5323*t7037 - 1.*t5273*t7054 - 1.*t5280*t7065 + t8523 + t8527) + t5269*(t5365*t7054 + t5350*t7065 + t5323*t7084 + t5310*t7091 + t8533 + t8535))*var2[5] + (t6900*t8123 + t7021*t8133 + t5009*(-1.*t4198*t6887 - 1.*t4871*t6906 - 1.*t3466*t6929 - 1.*t3597*t6942 + t8523 + t8527) + t5269*(t5163*t6929 + t5098*t6942 + t4871*t6951 + t4198*t6958 + t8533 + t8535))*var2[6] + (4.000000000064e-6*t1181*t8150 - 4.e-6*t1022*t8155 - 4.e-6*t1181*t8553 + t4913*t8563 + 4.e-6*(-1.000000000016*t1181*t8150 + t1022*t8155 + t1181*t8553 - 1.*t4935*t8563))*var2[7])*var2[8] + t5728*var3[0] + t8054*var3[1] + t8045*var3[2] + t8208*var3[3] + t8197*var3[4] + t8179*var3[5] + t8135*var3[6] + t8164*var3[7] - 1.284e-8*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FlFoot_ParallelStance2.hh"

namespace ParallelStance2
{

void ddh_FlFoot_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
