/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:15:57 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t83;
  double t37;
  double t108;
  double t96;
  double t100;
  double t107;
  double t111;
  double t116;
  double t64;
  double t66;
  double t143;
  double t146;
  double t147;
  double t242;
  double t239;
  double t190;
  double t191;
  double t193;
  double t200;
  double t209;
  double t214;
  double t219;
  double t246;
  double t249;
  double t260;
  double t170;
  double t305;
  double t183;
  double t184;
  double t296;
  double t300;
  double t301;
  double t307;
  double t309;
  double t320;
  double t323;
  double t331;
  double t332;
  double t336;
  double t351;
  double t354;
  double t355;
  double t381;
  double t387;
  double t389;
  double t402;
  double t404;
  double t405;
  double t407;
  double t413;
  double t416;
  double t417;
  double t287;
  double t470;
  double t471;
  double t474;
  double t478;
  double t479;
  double t482;
  double t483;
  double t485;
  double t491;
  double t492;
  double t493;
  double t497;
  double t506;
  double t507;
  double t513;
  double t514;
  double t275;
  double t276;
  double t286;
  double t230;
  double t266;
  double t271;
  double t430;
  double t431;
  double t432;
  double t403;
  double t421;
  double t422;
  double t524;
  double t526;
  double t527;
  double t502;
  double t518;
  double t521;
  double t557;
  double t670;
  double t676;
  double t677;
  double t679;
  double t680;
  double t688;
  double t774;
  double t776;
  double t780;
  double t781;
  double t783;
  double t784;
  double t790;
  double t795;
  double t847;
  double t850;
  double t860;
  double t865;
  double t871;
  double t877;
  double t882;
  double t895;
  double t970;
  double t972;
  double t1001;
  double t1006;
  double t1012;
  double t1017;
  double t1018;
  double t1034;
  double t1082;
  double t1083;
  double t1091;
  double t1098;
  double t1117;
  double t1122;
  double t1124;
  double t1127;
  double t1188;
  double t1189;
  double t1194;
  double t1200;
  double t1201;
  double t1204;
  double t1207;
  double t1217;
  double t1222;
  double t1224;
  double t1228;
  double t477;
  double t480;
  double t486;
  double t489;
  double t523;
  double t532;
  double t544;
  double t316;
  double t344;
  double t369;
  double t371;
  double t428;
  double t439;
  double t448;
  double t131;
  double t154;
  double t155;
  double t273;
  double t289;
  double t291;
  double t179;
  double t293;
  double t294;
  double t1364;
  double t1386;
  double t374;
  double t449;
  double t490;
  double t545;
  double t552;
  double t568;
  double t578;
  double t585;
  double t586;
  double t591;
  double t592;
  double t594;
  double t602;
  double t603;
  double t604;
  double t608;
  double t611;
  double t615;
  double t616;
  double t617;
  double t619;
  double t620;
  double t625;
  double t634;
  double t641;
  double t642;
  double t648;
  double t650;
  double t651;
  double t657;
  double t660;
  double t713;
  double t719;
  double t720;
  double t678;
  double t697;
  double t699;
  double t706;
  double t725;
  double t730;
  double t811;
  double t815;
  double t817;
  double t782;
  double t798;
  double t801;
  double t757;
  double t760;
  double t804;
  double t821;
  double t825;
  double t924;
  double t935;
  double t943;
  double t870;
  double t902;
  double t905;
  double t837;
  double t838;
  double t912;
  double t944;
  double t948;
  double t1152;
  double t1162;
  double t1169;
  double t1106;
  double t1139;
  double t1141;
  double t977;
  double t1013;
  double t1039;
  double t1048;
  double t1144;
  double t1170;
  double t1173;
  double t1267;
  double t1274;
  double t1275;
  double t1211;
  double t1234;
  double t1235;
  double t1182;
  double t1190;
  double t1196;
  double t1197;
  double t1243;
  double t1287;
  double t1288;
  double t1444;
  double t1452;
  double t1461;
  double t1464;
  double t1396;
  double t1397;
  double t1400;
  double t1415;
  double t1368;
  double t1375;
  double t1376;
  double t2016;
  double t2017;
  double t2018;
  double t1972;
  double t1984;
  double t1964;
  double t1968;
  double t1492;
  double t1503;
  double t1504;
  double t1508;
  double t1509;
  double t1510;
  double t1527;
  double t1533;
  double t1535;
  double t1578;
  double t1591;
  double t1611;
  double t1615;
  double t1635;
  double t1638;
  double t1639;
  double t1658;
  double t1660;
  double t1672;
  double t1692;
  double t1701;
  double t1704;
  double t1712;
  double t1716;
  double t1717;
  double t1755;
  double t1759;
  double t1762;
  double t1770;
  double t1780;
  double t1786;
  double t1809;
  double t1813;
  double t1814;
  double t1832;
  double t1833;
  double t1834;
  double t1876;
  double t1877;
  double t1878;
  double t1891;
  double t1900;
  double t1902;
  double t1913;
  double t1923;
  double t1928;
  double t1934;
  double t1935;
  double t1936;
  double t1348;
  double t1349;
  double t1350;
  double t2283;
  double t2285;
  double t2295;
  double t2296;
  double t2300;
  double t2301;
  double t2306;
  double t2311;
  double t2316;
  double t2325;
  double t2326;
  double t2337;
  double t2338;
  double t2339;
  double t2344;
  double t2346;
  double t2349;
  double t2368;
  double t2370;
  double t2381;
  double t2382;
  double t2389;
  double t2394;
  double t2395;
  double t2404;
  double t2408;
  double t2413;
  double t2416;
  double t2419;
  double t2421;
  double t2429;
  double t2431;
  double t2436;
  double t2438;
  double t2265;
  double t2267;
  double t2268;
  double t2280;
  double t2309;
  double t2327;
  double t2350;
  double t2356;
  double t2378;
  double t2417;
  double t2453;
  double t2454;
  double t2455;
  double t2470;
  double t2471;
  double t2480;
  double t2485;
  double t2486;
  double t2487;
  double t1352;
  double t1357;
  double t1362;
  double t2533;
  double t2536;
  double t463;
  double t2509;
  double t2524;
  double t2530;
  double t2553;
  double t2365;
  double t2491;
  double t2495;
  double t2537;
  double t2571;
  double t2572;
  double t2573;
  double t1333;
  double t1342;
  double t1347;
  double t546;
  double t3024;
  double t3025;
  double t3026;
  double t3010;
  double t2579;
  double t2585;
  double t2586;
  double t2602;
  double t2687;
  double t2692;
  double t2703;
  double t2704;
  double t2761;
  double t2762;
  double t2765;
  double t2767;
  double t2809;
  double t2810;
  double t2811;
  double t2834;
  double t2898;
  double t2903;
  double t2908;
  double t2909;
  double t2947;
  double t2948;
  double t2953;
  double t2956;
  double t3221;
  double t3232;
  double t3233;
  double t3234;
  double t3236;
  double t3224;
  double t3242;
  double t3247;
  double t3248;
  double t3231;
  double t3237;
  double t3240;
  double t770;
  double t832;
  double t833;
  double t666;
  double t734;
  double t748;
  double t3486;
  double t3487;
  double t3488;
  double t3489;
  double t3490;
  double t3493;
  double t3495;
  double t3500;
  double t3503;
  double t3504;
  double t3507;
  double t3508;
  double t3521;
  double t3523;
  double t3526;
  double t3494;
  double t3510;
  double t3517;
  double t3540;
  double t3543;
  double t3544;
  double t3548;
  double t3549;
  double t3553;
  double t3520;
  double t3529;
  double t3530;
  double t3546;
  double t3558;
  double t3560;
  double t3567;
  double t3570;
  double t3572;
  double t844;
  double t957;
  double t960;
  double t3772;
  double t3773;
  double t3775;
  double t3780;
  double t3790;
  double t3797;
  double t3801;
  double t3806;
  double t3779;
  double t3800;
  double t3807;
  double t3809;
  double t3813;
  double t3814;
  double t3821;
  double t3822;
  double t3842;
  double t3843;
  double t3850;
  double t3811;
  double t3829;
  double t3830;
  double t3867;
  double t3869;
  double t3871;
  double t3875;
  double t3879;
  double t3882;
  double t3885;
  double t1073;
  double t1177;
  double t1180;
  double t3831;
  double t3852;
  double t3853;
  double t3877;
  double t3889;
  double t3898;
  double t3907;
  double t3909;
  double t3910;
  double t1198;
  double t1297;
  double t1298;
  double t2987;
  double t3014;
  double t3049;
  double t3058;
  double t3080;
  double t3084;
  double t3110;
  double t3111;
  double t3146;
  double t3147;
  double t3168;
  double t3169;
  double t3219;
  double t3241;
  double t4066;
  double t4069;
  double t4071;
  double t3279;
  double t3281;
  double t4087;
  double t4088;
  double t4090;
  double t3329;
  double t3330;
  double t4103;
  double t4119;
  double t4120;
  double t3355;
  double t3356;
  double t4150;
  double t4155;
  double t4157;
  double t3396;
  double t3400;
  double t4179;
  double t4181;
  double t4186;
  double t3433;
  double t3448;
  double t4194;
  double t4200;
  double t4204;
  double t3485;
  double t3535;
  double t3585;
  double t3594;
  double t3641;
  double t3642;
  double t3672;
  double t3675;
  double t3702;
  double t3705;
  double t3731;
  double t3734;
  double t3865;
  double t3922;
  double t3925;
  double t3949;
  double t3975;
  double t3977;
  double t3992;
  double t3993;
  double t4008;
  double t4009;
  double t4371;
  double t4373;
  double t4355;
  double t4362;
  double t4488;
  double t4489;
  double t4451;
  double t4456;
  double t4427;
  double t4432;
  double t4402;
  double t4403;
  double t4529;
  double t4530;
  double t4981;
  double t4983;
  double t4985;
  double t4510;
  double t4564;
  double t4570;
  double t5057;
  double t5062;
  double t5077;
  double t4544;
  double t5121;
  double t5123;
  double t5126;
  double t5148;
  double t5158;
  double t5162;
  double t4642;
  double t4645;
  double t4592;
  double t4600;
  double t4917;
  double t4928;
  double t4929;
  double t5001;
  double t5004;
  double t5014;
  double t5371;
  double t5547;
  double t5548;
  double t5549;
  double t5551;
  double t5437;
  double t5441;
  double t5444;
  double t5447;
  double t5471;
  double t5472;
  double t5473;
  double t5477;
  double t5492;
  double t5494;
  double t5498;
  double t5501;
  double t5506;
  double t5508;
  double t5509;
  double t5511;
  double t5370;
  double t5372;
  double t5375;
  double t5376;
  double t5806;
  double t5809;
  double t5812;
  double t5813;
  double t5822;
  double t5823;
  double t5829;
  double t5883;
  double t5895;
  double t5897;
  double t5841;
  double t5842;
  double t5881;
  double t6053;
  double t6062;
  double t6069;
  double t6071;
  double t6086;
  double t6087;
  double t6092;
  double t5999;
  double t6010;
  double t6033;
  double t6038;
  double t6039;
  double t6041;
  double t6042;
  double t5981;
  double t5987;
  double t5989;
  double t5993;
  double t5953;
  double t5962;
  double t5967;
  double t5968;
  double t6167;
  double t6170;
  double t6183;
  double t6184;
  double t6185;
  double t6187;
  double t6190;
  double t6213;
  double t6220;
  double t6222;
  double t6197;
  double t6200;
  double t6201;
  double t6256;
  double t6258;
  double t6260;
  double t6261;
  double t6301;
  double t6304;
  double t6306;
  double t6307;
  t83 = Cos(var1[11]);
  t37 = Cos(var1[10]);
  t108 = -1. + t83;
  t96 = -1.*t83;
  t100 = 1. + t96;
  t107 = 1.6e-11*t100;
  t111 = 1.6e-11*t108;
  t116 = -1. + t107 + t111;
  t64 = -1.*t37;
  t66 = 1. + t64;
  t143 = 4.e-6*t108;
  t146 = -4.e-6*t83;
  t147 = t143 + t146;
  t242 = Sin(var1[10]);
  t239 = Cos(var1[9]);
  t190 = -1. + t37;
  t191 = 1.6e-11*t190;
  t193 = 1. + t191;
  t200 = t193*t116;
  t209 = 4.e-6*t66*t147;
  t214 = t200 + t209;
  t219 = Sin(var1[9]);
  t246 = 4.e-6*t116*t242;
  t249 = -1.*t147*t242;
  t260 = t246 + t249;
  t170 = Cos(var1[4]);
  t305 = Sin(var1[11]);
  t183 = Sin(var1[4]);
  t184 = Cos(var1[5]);
  t296 = -1.000000000016*t100;
  t300 = 1. + t296;
  t301 = 0.004352*t300;
  t307 = -0.9999910000159999*t305;
  t309 = t301 + t307;
  t320 = -1. + t107;
  t323 = 4.e-6*t320;
  t331 = 3.999964e-6*t100;
  t332 = -1.7408e-8*t305;
  t336 = t323 + t331 + t332;
  t351 = 0.999991*t83;
  t354 = 0.004352*t305;
  t355 = t111 + t351 + t354;
  t381 = -4.e-6*t242*t309;
  t387 = t193*t336;
  t389 = 4.e-6*t66*t355;
  t402 = 0. + t381 + t387 + t389;
  t404 = -1.000000000016*t66;
  t405 = 1. + t404;
  t407 = t405*t309;
  t413 = 4.e-6*t242*t336;
  t416 = -1.*t242*t355;
  t417 = 0. + t407 + t413 + t416;
  t287 = Sin(var1[5]);
  t470 = -1.7408e-8*t100;
  t471 = -3.999964e-6*t305;
  t474 = t470 + t471;
  t478 = 0.999991*t300;
  t479 = t478 + t354;
  t482 = -0.004352*t83;
  t483 = 0.999991*t305;
  t485 = t482 + t483;
  t491 = t193*t474;
  t492 = -4.e-6*t242*t479;
  t493 = 4.e-6*t66*t485;
  t497 = 0. + t491 + t492 + t493;
  t506 = 4.e-6*t242*t474;
  t507 = t405*t479;
  t513 = -1.*t242*t485;
  t514 = 0. + t506 + t507 + t513;
  t275 = t239*t214;
  t276 = t219*t260;
  t286 = t275 + t276;
  t230 = -1.*t214*t219;
  t266 = t239*t260;
  t271 = t230 + t266;
  t430 = t239*t402;
  t431 = t219*t417;
  t432 = 0. + t430 + t431;
  t403 = -1.*t219*t402;
  t421 = t239*t417;
  t422 = 0. + t403 + t421;
  t524 = t239*t497;
  t526 = t219*t514;
  t527 = 0. + t524 + t526;
  t502 = -1.*t219*t497;
  t518 = t239*t514;
  t521 = 0. + t502 + t518;
  t557 = -1.*t271*t287;
  t670 = 4.e-6*t37*t116;
  t676 = -1.*t37*t147;
  t677 = t670 + t676;
  t679 = -1.6e-11*t116*t242;
  t680 = 4.e-6*t147*t242;
  t688 = t679 + t680;
  t774 = -1.000000000016*t242*t309;
  t776 = 4.e-6*t37*t336;
  t780 = -1.*t37*t355;
  t781 = t774 + t776 + t780;
  t783 = -4.e-6*t37*t309;
  t784 = -1.6e-11*t242*t336;
  t790 = 4.e-6*t242*t355;
  t795 = t783 + t784 + t790;
  t847 = 4.e-6*t37*t474;
  t850 = -1.000000000016*t242*t479;
  t860 = -1.*t37*t485;
  t865 = t847 + t850 + t860;
  t871 = -1.6e-11*t242*t474;
  t877 = -4.e-6*t37*t479;
  t882 = 4.e-6*t242*t485;
  t895 = t871 + t877 + t882;
  t970 = 0.004352*t83;
  t972 = t970 + t307;
  t1001 = -0.9999910000159999*t83;
  t1006 = -0.00435200000006963*t305;
  t1012 = t1001 + t1006;
  t1017 = -1.7408e-8*t83;
  t1018 = 3.999964000064e-6*t305;
  t1034 = t1017 + t1018;
  t1082 = 4.e-6*t66*t972;
  t1083 = -4.e-6*t242*t1012;
  t1091 = t193*t1034;
  t1098 = t1082 + t1083 + t1091;
  t1117 = -1.*t242*t972;
  t1122 = t405*t1012;
  t1124 = 4.e-6*t242*t1034;
  t1127 = t1117 + t1122 + t1124;
  t1188 = -3.999964e-6*t83;
  t1189 = t1188 + t332;
  t1194 = t351 + t354;
  t1200 = -4.e-6*t242*t972;
  t1201 = t193*t1189;
  t1204 = 4.e-6*t66*t1194;
  t1207 = t1200 + t1201 + t1204;
  t1217 = t405*t972;
  t1222 = 4.e-6*t242*t1189;
  t1224 = -1.*t242*t1194;
  t1228 = t1217 + t1222 + t1224;
  t477 = 4.e-6*t66*t474;
  t480 = t242*t479;
  t486 = t37*t485;
  t489 = 0. + t477 + t480 + t486;
  t523 = t184*t521;
  t532 = -1.*t527*t287;
  t544 = 0. + t523 + t532;
  t316 = t242*t309;
  t344 = 4.e-6*t66*t336;
  t369 = t37*t355;
  t371 = 0. + t316 + t344 + t369;
  t428 = t184*t422;
  t439 = -1.*t432*t287;
  t448 = 0. + t428 + t439;
  t131 = 4.e-6*t66*t116;
  t154 = t37*t147;
  t155 = t131 + t154;
  t273 = t184*t271;
  t289 = -1.*t286*t287;
  t291 = t273 + t289;
  t179 = t155*t170;
  t293 = -1.*t183*t291;
  t294 = t179 + t293;
  t1364 = Sin(var1[3]);
  t1386 = Cos(var1[3]);
  t374 = t170*t371;
  t449 = -1.*t183*t448;
  t490 = t170*t489;
  t545 = -1.*t183*t544;
  t552 = -1.*t184*t286;
  t568 = t552 + t557;
  t578 = -1.*t184*t432;
  t585 = -1.*t422*t287;
  t586 = t578 + t585;
  t591 = -1.*t184*t527;
  t592 = -1.*t521*t287;
  t594 = t591 + t592;
  t602 = -1.*t239*t214;
  t603 = -1.*t219*t260;
  t604 = t602 + t603;
  t608 = t184*t604;
  t611 = t608 + t557;
  t615 = -1.*t239*t402;
  t616 = -1.*t219*t417;
  t617 = t615 + t616;
  t619 = t184*t617;
  t620 = t403 + t421;
  t625 = -1.*t620*t287;
  t634 = t619 + t625;
  t641 = -1.*t239*t497;
  t642 = -1.*t219*t514;
  t648 = t641 + t642;
  t650 = t184*t648;
  t651 = t502 + t518;
  t657 = -1.*t651*t287;
  t660 = t650 + t657;
  t713 = t677*t219;
  t719 = t239*t688;
  t720 = t713 + t719;
  t678 = t239*t677;
  t697 = -1.*t219*t688;
  t699 = t678 + t697;
  t706 = t184*t699;
  t725 = -1.*t720*t287;
  t730 = t706 + t725;
  t811 = t219*t781;
  t815 = t239*t795;
  t817 = t811 + t815;
  t782 = t239*t781;
  t798 = -1.*t219*t795;
  t801 = t782 + t798;
  t757 = t37*t309;
  t760 = t757 + t413 + t416;
  t804 = t184*t801;
  t821 = -1.*t817*t287;
  t825 = t804 + t821;
  t924 = t219*t865;
  t935 = t239*t895;
  t943 = t924 + t935;
  t870 = t239*t865;
  t902 = -1.*t219*t895;
  t905 = t870 + t902;
  t837 = t37*t479;
  t838 = t506 + t837 + t513;
  t912 = t184*t905;
  t944 = -1.*t943*t287;
  t948 = t912 + t944;
  t1152 = t239*t1098;
  t1162 = t219*t1127;
  t1169 = t1152 + t1162;
  t1106 = -1.*t219*t1098;
  t1139 = t239*t1127;
  t1141 = t1106 + t1139;
  t977 = t37*t972;
  t1013 = t242*t1012;
  t1039 = 4.e-6*t66*t1034;
  t1048 = t977 + t1013 + t1039;
  t1144 = t184*t1141;
  t1170 = -1.*t1169*t287;
  t1173 = t1144 + t1170;
  t1267 = t239*t1207;
  t1274 = t219*t1228;
  t1275 = t1267 + t1274;
  t1211 = -1.*t219*t1207;
  t1234 = t239*t1228;
  t1235 = t1211 + t1234;
  t1182 = t242*t972;
  t1190 = 4.e-6*t66*t1189;
  t1196 = t37*t1194;
  t1197 = t1182 + t1190 + t1196;
  t1243 = t184*t1235;
  t1287 = -1.*t1275*t287;
  t1288 = t1243 + t1287;
  t1444 = t184*t527;
  t1452 = t521*t287;
  t1461 = 0. + t1444 + t1452;
  t1464 = 0. + t490 + t545;
  t1396 = t184*t432;
  t1397 = t422*t287;
  t1400 = 0. + t1396 + t1397;
  t1415 = 0. + t374 + t449;
  t1368 = t184*t286;
  t1375 = t271*t287;
  t1376 = t1368 + t1375;
  t2016 = t1386*t1376;
  t2017 = -1.*t1364*t294;
  t2018 = t2016 + t2017;
  t1972 = t1386*t1400;
  t1984 = -1.*t1364*t1415;
  t1964 = t1386*t1461;
  t1968 = -1.*t1364*t1464;
  t1492 = -1.*t155*t183;
  t1503 = -1.*t170*t291;
  t1504 = t1492 + t1503;
  t1508 = -1.*t371*t183;
  t1509 = -1.*t170*t448;
  t1510 = t1508 + t1509;
  t1527 = -1.*t489*t183;
  t1533 = -1.*t170*t544;
  t1535 = t1527 + t1533;
  t1578 = t428 + t439;
  t1591 = t523 + t532;
  t1611 = t604*t287;
  t1615 = t273 + t1611;
  t1635 = t184*t620;
  t1638 = t617*t287;
  t1639 = t1635 + t1638;
  t1658 = t184*t651;
  t1660 = t648*t287;
  t1672 = t1658 + t1660;
  t1692 = t184*t720;
  t1701 = t699*t287;
  t1704 = t1692 + t1701;
  t1712 = t170*t260;
  t1716 = -1.*t183*t730;
  t1717 = t1712 + t1716;
  t1755 = t184*t817;
  t1759 = t801*t287;
  t1762 = t1755 + t1759;
  t1770 = t170*t760;
  t1780 = -1.*t183*t825;
  t1786 = t1770 + t1780;
  t1809 = t184*t943;
  t1813 = t905*t287;
  t1814 = t1809 + t1813;
  t1832 = t170*t838;
  t1833 = -1.*t183*t948;
  t1834 = t1832 + t1833;
  t1876 = t184*t1169;
  t1877 = t1141*t287;
  t1878 = t1876 + t1877;
  t1891 = t170*t1048;
  t1900 = -1.*t183*t1173;
  t1902 = t1891 + t1900;
  t1913 = t184*t1275;
  t1923 = t1235*t287;
  t1928 = t1913 + t1923;
  t1934 = t170*t1197;
  t1935 = -1.*t183*t1288;
  t1936 = t1934 + t1935;
  t1348 = t371*t183;
  t1349 = t170*t448;
  t1350 = 0. + t1348 + t1349;
  t2283 = -1.26e-8*var1[11];
  t2285 = 1. + t111;
  t2295 = -0.14871*t2285;
  t2296 = -1.64779999997447e-7*t100;
  t2300 = -1.59556e-7*t108;
  t2301 = -1.199987999968e-6*t305;
  t2306 = t2283 + t2295 + t2296 + t2300 + t2301;
  t2311 = 0.803147*t300;
  t2316 = 0.50315000001605*t100;
  t2325 = 0.00130540515936178*t305;
  t2326 = t2311 + t2316 + t2325;
  t2337 = -5.04e-14*var1[11];
  t2338 = -0.03988959484*t100;
  t2339 = 6.38224e-13*t108;
  t2344 = -0.041195*t83;
  t2346 = 0.299996999992*t305;
  t2349 = t2337 + t2338 + t2339 + t2344 + t2346;
  t2368 = -1.*t239;
  t2370 = 1. + t2368;
  t2381 = -0.15121*t219;
  t2382 = -1.2484e-7*var1[10];
  t2389 = 2.479936e-18*t66;
  t2394 = -1.54996e-7*t190;
  t2395 = 1.124840000016e-6*t242;
  t2404 = t193*t2306;
  t2408 = -4.e-6*t242*t2326;
  t2413 = 4.e-6*t66*t2349;
  t2416 = t2382 + t2389 + t2394 + t2395 + t2404 + t2408 + t2413;
  t2419 = 0.281210000008499*t66;
  t2421 = -0.03874900000062*t242;
  t2429 = 4.e-6*t242*t2306;
  t2431 = t405*t2326;
  t2436 = -1.*t242*t2349;
  t2438 = t2419 + t2421 + t2429 + t2431 + t2436;
  t2265 = -4.9936e-13*var1[10];
  t2267 = -0.038749*t66;
  t2268 = 6.19984e-13*t190;
  t2280 = -0.281210000004*t242;
  t2309 = 4.e-6*t66*t2306;
  t2327 = t242*t2326;
  t2350 = t37*t2349;
  t2356 = 0. + t2265 + t2267 + t2268 + t2280 + t2309 + t2327 + t2350;
  t2378 = 0.15121*t2370;
  t2417 = -1.*t219*t2416;
  t2453 = t239*t2438;
  t2454 = t2378 + t2381 + t2417 + t2453;
  t2455 = t184*t2454;
  t2470 = -0.15121*t2370;
  t2471 = t239*t2416;
  t2480 = t219*t2438;
  t2485 = t2470 + t2381 + t2471 + t2480;
  t2486 = -1.*t2485*t287;
  t2487 = 0. + t2455 + t2486;
  t1352 = t155*t183;
  t1357 = t170*t291;
  t1362 = t1352 + t1357;
  t2533 = t170*t2356;
  t2536 = -1.*t183*t2487;
  t463 = t374 + t449;
  t2509 = t2356*t183;
  t2524 = t170*t2487;
  t2530 = 0. + t2509 + t2524;
  t2553 = 0. + t2533 + t2536;
  t2365 = -1.*t2356*t183;
  t2491 = -1.*t170*t2487;
  t2495 = t2365 + t2491;
  t2537 = t2533 + t2536;
  t2571 = t184*t2485;
  t2572 = t2454*t287;
  t2573 = 0. + t2571 + t2572;
  t1333 = t489*t183;
  t1342 = t170*t544;
  t1347 = 0. + t1333 + t1342;
  t546 = t490 + t545;
  t3024 = -1.*t184*t2485;
  t3025 = -1.*t2454*t287;
  t3026 = t3024 + t3025;
  t3010 = t2455 + t2486;
  t2579 = t1376*t2573;
  t2585 = t1362*t2530;
  t2586 = t294*t2553;
  t2602 = t2579 + t2585 + t2586;
  t2687 = -1.*t1400*t2573;
  t2692 = -1.*t1350*t2530;
  t2703 = -1.*t1415*t2553;
  t2704 = t2687 + t2692 + t2703;
  t2761 = t1400*t2573;
  t2762 = t1350*t2530;
  t2765 = t1415*t2553;
  t2767 = t2761 + t2762 + t2765;
  t2809 = -1.*t2573*t1461;
  t2810 = -1.*t2530*t1347;
  t2811 = -1.*t2553*t1464;
  t2834 = t2809 + t2810 + t2811;
  t2898 = -1.*t1376*t2573;
  t2903 = -1.*t1362*t2530;
  t2908 = -1.*t294*t2553;
  t2909 = t2898 + t2903 + t2908;
  t2947 = t2573*t1461;
  t2948 = t2530*t1347;
  t2953 = t2553*t1464;
  t2956 = t2947 + t2948 + t2953;
  t3221 = -0.15121*t239;
  t3232 = 0.15121*t219;
  t3233 = -1.*t239*t2416;
  t3234 = -1.*t219*t2438;
  t3236 = t3221 + t3232 + t3233 + t3234;
  t3224 = t3221 + t2381 + t2417 + t2453;
  t3242 = t184*t3236;
  t3247 = -1.*t3224*t287;
  t3248 = t3242 + t3247;
  t3231 = t184*t3224;
  t3237 = t3236*t287;
  t3240 = t3231 + t3237;
  t770 = t760*t183;
  t832 = t170*t825;
  t833 = t770 + t832;
  t666 = t260*t183;
  t734 = t170*t730;
  t748 = t666 + t734;
  t3486 = -0.03874900000062*t37;
  t3487 = 0.281210000008499*t242;
  t3488 = 4.e-6*t37*t2306;
  t3489 = -1.000000000016*t242*t2326;
  t3490 = -1.*t37*t2349;
  t3493 = t3486 + t3487 + t3488 + t3489 + t3490;
  t3495 = 1.124840000016e-6*t37;
  t3500 = 1.5499600000248e-7*t242;
  t3503 = -1.6e-11*t242*t2306;
  t3504 = -4.e-6*t37*t2326;
  t3507 = 4.e-6*t242*t2349;
  t3508 = -1.2484e-7 + t3495 + t3500 + t3503 + t3504 + t3507;
  t3521 = t239*t3493;
  t3523 = -1.*t219*t3508;
  t3526 = t3521 + t3523;
  t3494 = t219*t3493;
  t3510 = t239*t3508;
  t3517 = t3494 + t3510;
  t3540 = -0.281210000004*t37;
  t3543 = t37*t2326;
  t3544 = -4.9936e-13 + t3540 + t2421 + t2429 + t3543 + t2436;
  t3548 = t184*t3526;
  t3549 = -1.*t3517*t287;
  t3553 = t3548 + t3549;
  t3520 = t184*t3517;
  t3529 = t3526*t287;
  t3530 = t3520 + t3529;
  t3546 = t3544*t183;
  t3558 = t170*t3553;
  t3560 = t3546 + t3558;
  t3567 = t170*t3544;
  t3570 = -1.*t183*t3553;
  t3572 = t3567 + t3570;
  t844 = t838*t183;
  t957 = t170*t948;
  t960 = t844 + t957;
  t3772 = 0.00130540515936178*t83;
  t3773 = -0.2999969999968001*t305;
  t3775 = t3772 + t3773;
  t3780 = -1.199987999968e-6*t83;
  t3790 = -5.2216206374471e-9*t305;
  t3797 = -1.26e-8 + t3780 + t3790;
  t3801 = 0.299996999992*t83;
  t3806 = -5.04e-14 + t3801 + t2325;
  t3779 = -4.e-6*t242*t3775;
  t3800 = t193*t3797;
  t3807 = 4.e-6*t66*t3806;
  t3809 = t3779 + t3800 + t3807;
  t3813 = t405*t3775;
  t3814 = 4.e-6*t242*t3797;
  t3821 = -1.*t242*t3806;
  t3822 = t3813 + t3814 + t3821;
  t3842 = -1.*t219*t3809;
  t3843 = t239*t3822;
  t3850 = t3842 + t3843;
  t3811 = t239*t3809;
  t3829 = t219*t3822;
  t3830 = t3811 + t3829;
  t3867 = t242*t3775;
  t3869 = 4.e-6*t66*t3797;
  t3871 = t37*t3806;
  t3875 = t3867 + t3869 + t3871;
  t3879 = t184*t3850;
  t3882 = -1.*t3830*t287;
  t3885 = t3879 + t3882;
  t1073 = t1048*t183;
  t1177 = t170*t1173;
  t1180 = t1073 + t1177;
  t3831 = t184*t3830;
  t3852 = t3850*t287;
  t3853 = t3831 + t3852;
  t3877 = t3875*t183;
  t3889 = t170*t3885;
  t3898 = t3877 + t3889;
  t3907 = t170*t3875;
  t3909 = -1.*t183*t3885;
  t3910 = t3907 + t3909;
  t1198 = t1197*t183;
  t1297 = t170*t1288;
  t1298 = t1198 + t1297;
  t2987 = t291*t2573;
  t3014 = t1376*t3010;
  t3049 = -1.*t1578*t2573;
  t3058 = -1.*t1400*t3010;
  t3080 = t1578*t2573;
  t3084 = t1400*t3010;
  t3110 = -1.*t3010*t1461;
  t3111 = -1.*t2573*t1591;
  t3146 = -1.*t291*t2573;
  t3147 = -1.*t1376*t3010;
  t3168 = t3010*t1461;
  t3169 = t2573*t1591;
  t3219 = t1615*t2573;
  t3241 = t1376*t3240;
  t4066 = t155*t2356;
  t4069 = t291*t2487;
  t4071 = t4066 + t2579 + t4069;
  t3279 = -1.*t1639*t2573;
  t3281 = -1.*t1400*t3240;
  t4087 = -1.*t371*t2356;
  t4088 = -1.*t448*t2487;
  t4090 = t4087 + t2687 + t4088;
  t3329 = t1639*t2573;
  t3330 = t1400*t3240;
  t4103 = t371*t2356;
  t4119 = t448*t2487;
  t4120 = t4103 + t2761 + t4119;
  t3355 = -1.*t3240*t1461;
  t3356 = -1.*t2573*t1672;
  t4150 = -1.*t2356*t489;
  t4155 = -1.*t2487*t544;
  t4157 = t4150 + t2809 + t4155;
  t3396 = -1.*t1615*t2573;
  t3400 = -1.*t1376*t3240;
  t4179 = -1.*t155*t2356;
  t4181 = -1.*t291*t2487;
  t4186 = t4179 + t2898 + t4181;
  t3433 = t3240*t1461;
  t3448 = t2573*t1672;
  t4194 = t2356*t489;
  t4200 = t2487*t544;
  t4204 = t4194 + t2947 + t4200;
  t3485 = t1704*t2573;
  t3535 = t1376*t3530;
  t3585 = -1.*t1762*t2573;
  t3594 = -1.*t1400*t3530;
  t3641 = t1762*t2573;
  t3642 = t1400*t3530;
  t3672 = -1.*t3530*t1461;
  t3675 = -1.*t2573*t1814;
  t3702 = -1.*t1704*t2573;
  t3705 = -1.*t1376*t3530;
  t3731 = t3530*t1461;
  t3734 = t2573*t1814;
  t3865 = t1376*t3853;
  t3922 = -1.*t3853*t1400;
  t3925 = -1.*t1878*t2573;
  t3949 = -1.*t1376*t3853;
  t3975 = t1928*t2573;
  t3977 = t3853*t1461;
  t3992 = t3853*t1400;
  t3993 = t1878*t2573;
  t4008 = -1.*t1928*t2573;
  t4009 = -1.*t3853*t1461;
  t4371 = -1.*t760*t2356;
  t4373 = -1.*t371*t3544;
  t4355 = t260*t2356;
  t4362 = t155*t3544;
  t4488 = t3544*t489;
  t4489 = t2356*t838;
  t4451 = -1.*t260*t2356;
  t4456 = -1.*t155*t3544;
  t4427 = -1.*t3544*t489;
  t4432 = -1.*t2356*t838;
  t4402 = t760*t2356;
  t4403 = t371*t3544;
  t4529 = -1.*t3875*t371;
  t4530 = -1.*t1048*t2356;
  t4981 = t271*t2454;
  t4983 = t286*t2485;
  t4985 = t4981 + t4983 + t4066;
  t4510 = t155*t3875;
  t4564 = t1197*t2356;
  t4570 = t3875*t489;
  t5057 = -1.*t271*t2454;
  t5062 = -1.*t286*t2485;
  t5077 = t5057 + t5062 + t4179;
  t4544 = -1.*t155*t3875;
  t5121 = -1.*t2454*t521;
  t5123 = -1.*t2485*t527;
  t5126 = t5121 + t5123 + t4150;
  t5148 = t422*t2454;
  t5158 = t432*t2485;
  t5162 = t5148 + t5158 + t4103;
  t4642 = -1.*t1197*t2356;
  t4645 = -1.*t3875*t489;
  t4592 = t3875*t371;
  t4600 = t1048*t2356;
  t4917 = -1.*t422*t2454;
  t4928 = -1.*t432*t2485;
  t4929 = t4917 + t4928 + t4087;
  t5001 = t2454*t521;
  t5004 = t2485*t527;
  t5014 = t5001 + t5004 + t4194;
  t5371 = t2265 + t2267 + t2268 + t2280 + t2309 + t2327 + t2350;
  t5547 = t214*t2416;
  t5548 = t155*t5371;
  t5549 = t260*t2438;
  t5551 = t5547 + t5548 + t5549;
  t5437 = -1.*t214*t2416;
  t5441 = -1.*t155*t5371;
  t5444 = -1.*t260*t2438;
  t5447 = t5437 + t5441 + t5444;
  t5471 = -1.*t2416*t497;
  t5472 = -1.*t5371*t489;
  t5473 = -1.*t2438*t514;
  t5477 = t5471 + t5472 + t5473;
  t5492 = t402*t2416;
  t5494 = t371*t5371;
  t5498 = t417*t2438;
  t5501 = t5492 + t5494 + t5498;
  t5506 = -1.*t402*t2416;
  t5508 = -1.*t371*t5371;
  t5509 = -1.*t417*t2438;
  t5511 = t5506 + t5508 + t5509;
  t5370 = t2416*t497;
  t5372 = t5371*t489;
  t5375 = t2438*t514;
  t5376 = t5370 + t5372 + t5375;
  t5806 = t2306*t1189;
  t5809 = t474*t3797;
  t5812 = t972*t2326;
  t5813 = t3775*t479;
  t5822 = t1194*t2349;
  t5823 = t3806*t485;
  t5829 = t5806 + t5809 + t5812 + t5813 + t5822 + t5823;
  t5883 = -1.*t116*t3797;
  t5895 = -1.*t147*t3806;
  t5897 = t5883 + t5895;
  t5841 = -1.*t116*t2306;
  t5842 = -1.*t147*t2349;
  t5881 = t5841 + t5842;
  t6053 = t309*t3775;
  t6062 = t336*t3797;
  t6069 = t2306*t1034;
  t6071 = t1012*t2326;
  t6086 = t3806*t355;
  t6087 = t972*t2349;
  t6092 = t6053 + t6062 + t6069 + t6071 + t6086 + t6087;
  t5999 = -1.*t2306*t1189;
  t6010 = -1.*t474*t3797;
  t6033 = -1.*t972*t2326;
  t6038 = -1.*t3775*t479;
  t6039 = -1.*t1194*t2349;
  t6041 = -1.*t3806*t485;
  t6042 = t5999 + t6010 + t6033 + t6038 + t6039 + t6041;
  t5981 = t2306*t336;
  t5987 = t309*t2326;
  t5989 = t355*t2349;
  t5993 = t5981 + t5987 + t5989;
  t5953 = -1.*t474*t2306;
  t5962 = -1.*t2326*t479;
  t5967 = -1.*t2349*t485;
  t5968 = t5953 + t5962 + t5967;
  t6167 = -1.*t309*t3775;
  t6170 = -1.*t336*t3797;
  t6183 = -1.*t2306*t1034;
  t6184 = -1.*t1012*t2326;
  t6185 = -1.*t3806*t355;
  t6187 = -1.*t972*t2349;
  t6190 = t6167 + t6170 + t6183 + t6184 + t6185 + t6187;
  t6213 = t116*t3797;
  t6220 = t147*t3806;
  t6222 = t6213 + t6220;
  t6197 = t116*t2306;
  t6200 = t147*t2349;
  t6201 = t6197 + t6200;
  t6256 = -1.*t2306*t336;
  t6258 = -1.*t309*t2326;
  t6260 = -1.*t355*t2349;
  t6261 = t6256 + t6258 + t6260;
  t6301 = t474*t2306;
  t6304 = t2326*t479;
  t6306 = t2349*t485;
  t6307 = t6301 + t6304 + t6306;
  p_output1[0]=t546*var2[0] + t463*var2[1] + t294*var2[2];
  p_output1[1]=t170*t594*var2[0] + t170*t586*var2[1] + t170*t568*var2[2];
  p_output1[2]=t170*t660*var2[0] + t170*t634*var2[1] + t170*t611*var2[2];
  p_output1[3]=t960*var2[0] + t833*var2[1] + t748*var2[2];
  p_output1[4]=t1298*var2[0] + t1180*var2[1];
  p_output1[5]=t1347;
  p_output1[6]=t1350;
  p_output1[7]=t1362;
  p_output1[8]=(-1.*t1364*t1461 - 1.*t1386*t1464)*var2[0] + (-1.*t1364*t1400 - 1.*t1386*t1415)*var2[1] + (-1.*t1364*t1376 - 1.*t1386*t294)*var2[2];
  p_output1[9]=-1.*t1364*t1535*var2[0] - 1.*t1364*t1510*var2[1] - 1.*t1364*t1504*var2[2];
  p_output1[10]=(t1386*t1591 + t1364*t183*t594)*var2[0] + (t1386*t1578 + t1364*t183*t586)*var2[1] + (t1386*t291 + t1364*t183*t568)*var2[2];
  p_output1[11]=(t1386*t1672 + t1364*t183*t660)*var2[0] + (t1386*t1639 + t1364*t183*t634)*var2[1] + (t1386*t1615 + t1364*t183*t611)*var2[2];
  p_output1[12]=(t1386*t1814 - 1.*t1364*t1834)*var2[0] + (t1386*t1762 - 1.*t1364*t1786)*var2[1] + (t1386*t1704 - 1.*t1364*t1717)*var2[2];
  p_output1[13]=(t1386*t1928 - 1.*t1364*t1936)*var2[0] + (t1386*t1878 - 1.*t1364*t1902)*var2[1];
  p_output1[14]=0. + t1964 + t1968;
  p_output1[15]=0. + t1972 + t1984;
  p_output1[16]=t2018;
  p_output1[17]=(t1964 + t1968)*var2[0] + (t1972 + t1984)*var2[1] + t2018*var2[2];
  p_output1[18]=t1386*t1535*var2[0] + t1386*t1510*var2[1] + t1386*t1504*var2[2];
  p_output1[19]=(t1364*t1591 - 1.*t1386*t183*t594)*var2[0] + (t1364*t1578 - 1.*t1386*t183*t586)*var2[1] + (t1364*t291 - 1.*t1386*t183*t568)*var2[2];
  p_output1[20]=(t1364*t1672 - 1.*t1386*t183*t660)*var2[0] + (t1364*t1639 - 1.*t1386*t183*t634)*var2[1] + (t1364*t1615 - 1.*t1386*t183*t611)*var2[2];
  p_output1[21]=(t1364*t1814 + t1386*t1834)*var2[0] + (t1364*t1762 + t1386*t1786)*var2[1] + (t1364*t1704 + t1386*t1717)*var2[2];
  p_output1[22]=(t1364*t1928 + t1386*t1936)*var2[0] + (t1364*t1878 + t1386*t1902)*var2[1];
  p_output1[23]=0. + t1364*t1461 + t1386*t1464;
  p_output1[24]=0. + t1364*t1400 + t1386*t1415;
  p_output1[25]=t1364*t1376 + t1386*t294;
  p_output1[26]=(t2704*t294 + t1350*(t1362*t2537 + t1504*t2553 + t2495*t294 + t2530*t294) + t2602*t463 + t1362*(-1.*t1415*t2495 - 1.*t1350*t2537 - 1.*t1510*t2553 - 1.*t2530*t463))*var2[0] + (t1347*(-1.*t1362*t2537 - 1.*t1504*t2553 - 1.*t2495*t294 - 1.*t2530*t294) + t294*t2956 + t2909*t546 + t1362*(t1464*t2495 + t1347*t2537 + t1535*t2553 + t2530*t546))*var2[1] + (t2834*t463 + t1347*(t1415*t2495 + t1350*t2537 + t1510*t2553 + t2530*t463) + t2767*t546 + t1350*(-1.*t1464*t2495 - 1.*t1347*t2537 - 1.*t1535*t2553 - 1.*t2530*t546))*var2[2];
  p_output1[27]=(t170*t2704*t568 + t1350*(t2987 + t3014 + t1362*t170*t3026 - 1.*t183*t294*t3026 + t170*t2530*t568 - 1.*t183*t2553*t568) + t170*t2602*t586 + t1362*(-1.*t1350*t170*t3026 + t1415*t183*t3026 + t3049 + t3058 - 1.*t170*t2530*t586 + t183*t2553*t586))*var2[0] + (t170*t2956*t568 + t1347*(-1.*t1362*t170*t3026 + t183*t294*t3026 + t3146 + t3147 - 1.*t170*t2530*t568 + t183*t2553*t568) + t170*t2909*t594 + t1362*(t1347*t170*t3026 - 1.*t1464*t183*t3026 + t3168 + t3169 + t170*t2530*t594 - 1.*t183*t2553*t594))*var2[1] + (t170*t2834*t586 + t1347*(t1350*t170*t3026 - 1.*t1415*t183*t3026 + t3080 + t3084 + t170*t2530*t586 - 1.*t183*t2553*t586) + t170*t2767*t594 + t1350*(-1.*t1347*t170*t3026 + t1464*t183*t3026 + t3110 + t3111 - 1.*t170*t2530*t594 + t183*t2553*t594))*var2[2];
  p_output1[28]=(t170*t2704*t611 + t1350*(t3219 + t3241 + t1362*t170*t3248 - 1.*t183*t294*t3248 + t170*t2530*t611 - 1.*t183*t2553*t611) + t170*t2602*t634 + t1362*(-1.*t1350*t170*t3248 + t1415*t183*t3248 + t3279 + t3281 - 1.*t170*t2530*t634 + t183*t2553*t634))*var2[0] + (t170*t2956*t611 + t1347*(-1.*t1362*t170*t3248 + t183*t294*t3248 + t3396 + t3400 - 1.*t170*t2530*t611 + t183*t2553*t611) + t170*t2909*t660 + t1362*(t1347*t170*t3248 - 1.*t1464*t183*t3248 + t3433 + t3448 + t170*t2530*t660 - 1.*t183*t2553*t660))*var2[1] + (t170*t2834*t634 + t1347*(t1350*t170*t3248 - 1.*t1415*t183*t3248 + t3329 + t3330 + t170*t2530*t634 - 1.*t183*t2553*t634) + t170*t2767*t660 + t1350*(-1.*t1347*t170*t3248 + t1464*t183*t3248 + t3355 + t3356 - 1.*t170*t2530*t660 + t183*t2553*t660))*var2[2];
  p_output1[29]=(t2704*t748 + t1350*(t1717*t2553 + t3485 + t3535 + t1362*t3560 + t294*t3572 + t2530*t748) + t2602*t833 + t1362*(-1.*t1786*t2553 - 1.*t1350*t3560 - 1.*t1415*t3572 + t3585 + t3594 - 1.*t2530*t833))*var2[0] + (t2956*t748 + t1347*(-1.*t1717*t2553 - 1.*t1362*t3560 - 1.*t294*t3572 + t3702 + t3705 - 1.*t2530*t748) + t2909*t960 + t1362*(t1834*t2553 + t1347*t3560 + t1464*t3572 + t3731 + t3734 + t2530*t960))*var2[1] + (t2834*t833 + t1347*(t1786*t2553 + t1350*t3560 + t1415*t3572 + t3641 + t3642 + t2530*t833) + t2767*t960 + t1350*(-1.*t1834*t2553 - 1.*t1347*t3560 - 1.*t1464*t3572 + t3672 + t3675 - 1.*t2530*t960))*var2[2];
  p_output1[30]=(t1180*t2602 + t1350*(t3865 + t1362*t3898 + t294*t3910) + t1362*(-1.*t1180*t2530 - 1.*t1902*t2553 - 1.*t1350*t3898 - 1.*t1415*t3910 + t3922 + t3925))*var2[0] + (t1298*t2909 + t1347*(-1.*t1362*t3898 - 1.*t294*t3910 + t3949) + t1362*(t1298*t2530 + t1936*t2553 + t1347*t3898 + t1464*t3910 + t3975 + t3977))*var2[1] + (t1298*t2767 + t1180*t2834 + t1347*(t1180*t2530 + t1902*t2553 + t1350*t3898 + t1415*t3910 + t3992 + t3993) + t1350*(-1.*t1298*t2530 - 1.*t1936*t2553 - 1.*t1347*t3898 - 1.*t1464*t3910 + t4008 + t4009))*var2[2];
  p_output1[31]=t1350*t2602 + t1362*t2704;
  p_output1[32]=t1347*t2909 + t1362*t2956;
  p_output1[33]=t1347*t2767 + t1350*t2834;
  p_output1[34]=(t1578*t4071 + t291*t4090 + t1400*(t2987 + t3014 + t291*t3026 + t2487*t568) + t1376*(t3049 + t3058 - 1.*t3026*t448 - 1.*t2487*t586))*var2[0] + (t1591*t4186 + t291*t4204 + t1461*(-1.*t291*t3026 + t3146 + t3147 - 1.*t2487*t568) + t1376*(t3168 + t3169 + t3026*t544 + t2487*t594))*var2[1] + (t1591*t4120 + t1578*t4157 + t1461*(t3080 + t3084 + t3026*t448 + t2487*t586) + t1400*(t3110 + t3111 - 1.*t3026*t544 - 1.*t2487*t594))*var2[2];
  p_output1[35]=(t1639*t4071 + t1615*t4090 + t1400*(t3219 + t3241 + t291*t3248 + t2487*t611) + t1376*(t3279 + t3281 - 1.*t3248*t448 - 1.*t2487*t634))*var2[0] + (t1672*t4186 + t1615*t4204 + t1461*(-1.*t291*t3248 + t3396 + t3400 - 1.*t2487*t611) + t1376*(t3433 + t3448 + t3248*t544 + t2487*t660))*var2[1] + (t1672*t4120 + t1639*t4157 + t1461*(t3329 + t3330 + t3248*t448 + t2487*t634) + t1400*(t3355 + t3356 - 1.*t3248*t544 - 1.*t2487*t660))*var2[2];
  p_output1[36]=(t1762*t4071 + t1704*t4090 + t1400*(t3485 + t3535 + t291*t3553 + t4355 + t4362 + t2487*t730) + t1376*(t3585 + t3594 + t4371 + t4373 - 1.*t3553*t448 - 1.*t2487*t825))*var2[0] + (t1814*t4186 + t1704*t4204 + t1461*(-1.*t291*t3553 + t3702 + t3705 + t4451 + t4456 - 1.*t2487*t730) + t1376*(t3731 + t3734 + t4488 + t4489 + t3553*t544 + t2487*t948))*var2[1] + (t1814*t4120 + t1762*t4157 + t1461*(t3641 + t3642 + t4402 + t4403 + t3553*t448 + t2487*t825) + t1400*(t3672 + t3675 + t4427 + t4432 - 1.*t3553*t544 - 1.*t2487*t948))*var2[2];
  p_output1[37]=(t1878*t4071 + t1400*(t3865 + t291*t3885 + t4510) + t1376*(-1.*t1173*t2487 + t3922 + t3925 - 1.*t3885*t448 + t4529 + t4530))*var2[0] + (t1928*t4186 + t1461*(-1.*t291*t3885 + t3949 + t4544) + t1376*(t1288*t2487 + t3975 + t3977 + t4564 + t4570 + t3885*t544))*var2[1] + (t1928*t4120 + t1878*t4157 + t1461*(t1173*t2487 + t3992 + t3993 + t3885*t448 + t4592 + t4600) + t1400*(-1.*t1288*t2487 + t4008 + t4009 + t4642 + t4645 - 1.*t3885*t544))*var2[2];
  p_output1[38]=t1400*t4071 + t1376*t4090;
  p_output1[39]=t1461*t4186 + t1376*t4204;
  p_output1[40]=t1461*t4120 + t1400*t4157;
  p_output1[41]=(t371*(t2485*t271 + t286*t3224 + t271*t3236 + t2454*t604) + t155*(-1.*t3236*t422 - 1.*t3224*t432 - 1.*t2454*t617 - 1.*t2485*t620))*var2[0] + (t489*(-1.*t2485*t271 - 1.*t286*t3224 - 1.*t271*t3236 - 1.*t2454*t604) + t155*(t3236*t521 + t3224*t527 + t2454*t648 + t2485*t651))*var2[1] + (t489*(t3236*t422 + t3224*t432 + t2454*t617 + t2485*t620) + t371*(-1.*t3236*t521 - 1.*t3224*t527 - 1.*t2454*t648 - 1.*t2485*t651))*var2[2];
  p_output1[42]=(t260*t4929 + t371*(t286*t3517 + t271*t3526 + t4355 + t4362 + t2454*t699 + t2485*t720) + t4985*t760 + t155*(-1.*t3526*t422 - 1.*t3517*t432 + t4371 + t4373 - 1.*t2454*t801 - 1.*t2485*t817))*var2[0] + (t260*t5014 + t489*(-1.*t286*t3517 - 1.*t271*t3526 + t4451 + t4456 - 1.*t2454*t699 - 1.*t2485*t720) + t5077*t838 + t155*(t4488 + t4489 + t3526*t521 + t3517*t527 + t2454*t905 + t2485*t943))*var2[1] + (t5126*t760 + t489*(t3526*t422 + t3517*t432 + t4402 + t4403 + t2454*t801 + t2485*t817) + t5162*t838 + t371*(t4427 + t4432 - 1.*t3526*t521 - 1.*t3517*t527 - 1.*t2454*t905 - 1.*t2485*t943))*var2[2];
  p_output1[43]=(t371*(t286*t3830 + t271*t3850 + t4510) + t155*(-1.*t1141*t2454 - 1.*t1169*t2485 - 1.*t3850*t422 - 1.*t3830*t432 + t4529 + t4530) + t1048*t4985)*var2[0] + ((-1.*t286*t3830 - 1.*t271*t3850 + t4544)*t489 + t1197*t5077 + t155*(t1235*t2454 + t1275*t2485 + t4564 + t4570 + t3850*t521 + t3830*t527))*var2[1] + ((t1141*t2454 + t1169*t2485 + t3850*t422 + t3830*t432 + t4592 + t4600)*t489 + t1048*t5126 + t1197*t5162 + t371*(-1.*t1235*t2454 - 1.*t1275*t2485 + t4642 + t4645 - 1.*t3850*t521 - 1.*t3830*t527))*var2[2];
  p_output1[44]=t155*t4929 + t371*t4985;
  p_output1[45]=t155*t5014 + t489*t5077;
  p_output1[46]=t371*t5126 + t489*t5162;
  p_output1[47]=(t260*t5511 + t371*(t260*t3493 + t214*t3508 + t4362 + t260*t5371 + t2438*t677 + t2416*t688) + t5551*t760 + t155*(-1.*t3508*t402 - 1.*t3493*t417 + t4373 - 1.*t5371*t760 - 1.*t2438*t781 - 1.*t2416*t795) - 0.15121*t865 - 0.15121*t895)*var2[0] + (t260*t5376 + t489*(-1.*t260*t3493 - 1.*t214*t3508 + t4456 - 1.*t260*t5371 - 1.*t2438*t677 - 1.*t2416*t688) - 0.15121*t781 - 0.15121*t795 + t5447*t838 + t155*(t4488 + t3508*t497 + t3493*t514 + t5371*t838 + t2438*t865 + t2416*t895))*var2[1] + (-0.15121*t677 - 0.15121*t688 + t5477*t760 + t489*(t3508*t402 + t3493*t417 + t4403 + t5371*t760 + t2438*t781 + t2416*t795) + t5501*t838 + t371*(t4427 - 1.*t3508*t497 - 1.*t3493*t514 - 1.*t5371*t838 - 1.*t2438*t865 - 1.*t2416*t895))*var2[2];
  p_output1[48]=(-0.15121*t1207 - 0.15121*t1228 + t371*(t214*t3809 + t260*t3822 + t4510) + t155*(-1.*t1098*t2416 - 1.*t1127*t2438 - 1.*t3809*t402 - 1.*t3822*t417 + t4529 - 1.*t1048*t5371) + t1048*t5551)*var2[0] + (-0.15121*t1098 - 0.15121*t1127 + (-1.*t214*t3809 - 1.*t260*t3822 + t4544)*t489 + t155*(t1207*t2416 + t1228*t2438 + t4570 + t3809*t497 + t3822*t514 + t1197*t5371) + t1197*t5447)*var2[1] + (t489*(t1098*t2416 + t1127*t2438 + t3809*t402 + t3822*t417 + t4592 + t1048*t5371) + t371*(-1.*t1207*t2416 - 1.*t1228*t2438 + t4645 - 1.*t3809*t497 - 1.*t3822*t514 - 1.*t1197*t5371) + t1048*t5477 + t1197*t5501)*var2[2];
  p_output1[49]=-0.15121*t497 - 0.15121*t514 + t155*t5511 + t371*t5551;
  p_output1[50]=-0.15121*t402 - 0.15121*t417 + t155*t5376 + t489*t5447;
  p_output1[51]=-0.15121*t214 - 0.15121*t260 + t371*t5477 + t489*t5501;
  p_output1[52]=(1.e-6*t1189 - 0.28121*t1194 - 1.*t116*t6190 - 1.*t1034*t6201 - 1.*t336*t6222 - 0.038749*t972 + 4.e-6*(-1.*t147*t6190 - 1.*t355*t6222 - 1.*t6201*t972))*var2[0] + (-0.038749*t1012 + 1.e-6*t1034 - 1.*t116*t5829 - 1.*t1189*t5881 - 1.*t474*t5897 + 4.e-6*(-1.*t147*t5829 - 1.*t1194*t5881 - 1.*t485*t5897) - 0.28121*t972)*var2[1] + (-1.*t1034*t5968 - 1.*t1189*t5993 - 1.*t336*t6042 - 1.*t474*t6092 + 4.e-6*(-1.*t1194*t5993 - 1.*t355*t6042 - 1.*t485*t6092 - 1.*t5968*t972))*var2[2];
  p_output1[53]=1.e-6*t474 - 0.038749*t479 - 0.28121*t485 - 1.*t336*t6201 - 1.*t116*t6261 + 4.e-6*(-1.*t355*t6201 - 1.*t147*t6261);
  p_output1[54]=-0.038749*t309 + 1.e-6*t336 - 0.28121*t355 - 1.*t474*t5881 - 1.*t116*t6307 + 4.e-6*(-1.*t485*t5881 - 1.*t147*t6307);
  p_output1[55]=1.e-6*t116 - 0.28121*t147 - 1.*t336*t5968 - 1.*t474*t5993 + 4.e-6*(-1.*t355*t5968 - 1.*t485*t5993);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_TrotStance1.hh"

namespace TrotStance1
{

void J_fFrFoot_vec_TrotStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
