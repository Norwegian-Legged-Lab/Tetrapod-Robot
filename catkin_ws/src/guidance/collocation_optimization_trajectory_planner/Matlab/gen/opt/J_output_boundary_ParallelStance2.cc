/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:32:46 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t140;
  double t322;
  double t334;
  double t354;
  double t369;
  double t373;
  double t397;
  double t173;
  double t200;
  double t229;
  double t246;
  double t321;
  double t434;
  double t60;
  double t469;
  double t470;
  double t484;
  double t496;
  double t499;
  double t500;
  double t510;
  double t512;
  double t515;
  double t528;
  double t605;
  double t540;
  double t550;
  double t552;
  double t575;
  double t586;
  double t594;
  double t619;
  double t624;
  double t626;
  double t628;
  double t661;
  double t665;
  double t666;
  double t670;
  double t690;
  double t696;
  double t423;
  double t425;
  double t358;
  double t382;
  double t489;
  double t493;
  double t494;
  double t443;
  double t455;
  double t456;
  double t461;
  double t466;
  double t642;
  double t645;
  double t647;
  double t655;
  double t657;
  double t823;
  double t831;
  double t832;
  double t835;
  double t856;
  double t857;
  double t598;
  double t599;
  double t607;
  double t610;
  double t613;
  double t522;
  double t530;
  double t531;
  double t888;
  double t890;
  double t898;
  double t912;
  double t918;
  double t919;
  double t790;
  double t801;
  double t932;
  double t940;
  double t943;
  double t733;
  double t736;
  double t1008;
  double t834;
  double t868;
  double t908;
  double t922;
  double t944;
  double t946;
  double t954;
  double t955;
  double t956;
  double t962;
  double t963;
  double t964;
  double t967;
  double t968;
  double t972;
  double t976;
  double t982;
  double t983;
  double t995;
  double t1004;
  double t1077;
  double t1083;
  double t1087;
  double t1101;
  double t1106;
  double t1110;
  double t1117;
  double t1122;
  double t1124;
  double t1125;
  double t1141;
  double t1147;
  double t1153;
  double t1154;
  double t1232;
  double t1234;
  double t1235;
  double t1238;
  double t1267;
  double t1269;
  double t1282;
  double t1293;
  double t1294;
  double t1296;
  double t1297;
  double t64;
  double t219;
  double t231;
  double t262;
  double t285;
  double t1344;
  double t1357;
  double t1356;
  double t1359;
  double t1361;
  double t1368;
  double t1370;
  double t1371;
  double t1374;
  double t1376;
  double t1384;
  double t1387;
  double t1388;
  double t1390;
  double t1394;
  double t1396;
  double t1397;
  double t1399;
  double t1403;
  double t1405;
  double t1406;
  double t1407;
  double t1415;
  double t1416;
  double t1417;
  double t1418;
  double t1455;
  double t1456;
  double t1457;
  double t1466;
  double t1472;
  double t1473;
  double t1477;
  double t1478;
  double t1479;
  double t1485;
  double t1487;
  double t1488;
  double t1496;
  double t1497;
  double t1500;
  double t1508;
  double t1509;
  double t1512;
  double t1554;
  double t1557;
  double t1558;
  double t1567;
  double t1569;
  double t1571;
  double t1573;
  double t1575;
  double t1577;
  double t1579;
  double t1580;
  double t1581;
  double t1584;
  double t1587;
  double t1588;
  double t1592;
  double t1593;
  double t1594;
  double t1597;
  double t1598;
  double t1600;
  double t1009;
  double t1024;
  double t1029;
  double t1634;
  double t1635;
  double t1645;
  double t1649;
  double t1653;
  double t1655;
  double t1656;
  double t1658;
  double t1660;
  double t1661;
  double t1664;
  double t1669;
  double t1670;
  double t1672;
  double t1676;
  double t1678;
  double t1039;
  double t1040;
  double t1043;
  double t1052;
  double t1059;
  double t1074;
  double t1075;
  double t1076;
  double t1727;
  double t1729;
  double t1731;
  double t1741;
  double t1742;
  double t1744;
  double t1746;
  double t1747;
  double t1748;
  double t1750;
  double t1752;
  double t1753;
  double t1754;
  double t1757;
  double t1218;
  double t1219;
  double t1224;
  double t1253;
  double t1260;
  double t1290;
  double t1291;
  double t1292;
  double t1795;
  double t1796;
  double t1797;
  double t1798;
  double t1802;
  double t1803;
  double t1804;
  double t1808;
  double t1809;
  double t1810;
  double t1811;
  double t1816;
  double t1886;
  double t1887;
  double t1888;
  double t1890;
  double t1891;
  double t1892;
  double t1894;
  double t1896;
  double t1897;
  double t1898;
  double t1902;
  double t1904;
  double t1908;
  double t1911;
  double t1914;
  double t1916;
  double t1917;
  double t1918;
  double t1942;
  double t1943;
  double t1944;
  double t1946;
  double t1949;
  double t1950;
  double t1952;
  double t1953;
  double t1956;
  double t1958;
  double t1959;
  double t1962;
  double t1963;
  double t1964;
  double t1972;
  double t1975;
  double t1977;
  double t2010;
  double t2011;
  double t2012;
  double t2015;
  double t2016;
  double t2019;
  double t2020;
  double t2022;
  double t2023;
  double t2024;
  double t2027;
  double t2028;
  double t2029;
  double t2031;
  double t2032;
  double t2033;
  double t2068;
  double t2070;
  double t2071;
  double t2073;
  double t2079;
  double t2084;
  double t2087;
  double t2088;
  double t2089;
  double t2093;
  double t2094;
  double t2096;
  double t2097;
  double t2144;
  double t2145;
  double t2146;
  double t2151;
  double t2159;
  double t2161;
  double t2167;
  double t2169;
  double t2171;
  double t2173;
  double t2177;
  double t2209;
  double t2210;
  double t2211;
  double t2215;
  double t2240;
  double t2241;
  double t2243;
  double t2244;
  double t2247;
  double t2220;
  double t2221;
  double t2272;
  double t2213;
  double t2333;
  double t2334;
  double t2338;
  double t2347;
  double t2309;
  double t2296;
  double t2297;
  double t2301;
  double t2321;
  double t2324;
  double t2325;
  double t2355;
  double t2224;
  double t2362;
  double t2216;
  double t2345;
  double t2398;
  double t2401;
  double t2424;
  double t2284;
  double t2368;
  double t2275;
  double t2443;
  double t2364;
  double t2367;
  double t2369;
  double t2370;
  double t2372;
  double t2374;
  double t2376;
  double t2377;
  double t2449;
  double t2419;
  double t2420;
  double t2421;
  double t2427;
  double t2428;
  double t2430;
  double t2431;
  double t2434;
  double t2459;
  double t2461;
  double t2462;
  double t2468;
  double t2469;
  double t2470;
  double t2471;
  double t2474;
  double t2392;
  double t2483;
  double t2404;
  double t2500;
  double t2477;
  double t2351;
  double t2256;
  double t2258;
  double t2248;
  double t2252;
  double t2303;
  double t2305;
  double t2310;
  double t2311;
  double t2317;
  double t2318;
  double t2320;
  double t2266;
  double t2270;
  double t2276;
  double t2282;
  double t2287;
  double t2292;
  double t2294;
  double t2439;
  double t2440;
  double t2445;
  double t2446;
  double t2451;
  double t2454;
  double t2456;
  double t2536;
  double t2541;
  double t2542;
  double t2546;
  double t2547;
  double t2549;
  double t2381;
  double t2388;
  double t2393;
  double t2397;
  double t2405;
  double t2415;
  double t2418;
  double t2330;
  double t2341;
  double t2353;
  double t2354;
  double t2357;
  double t2358;
  double t2359;
  double t2526;
  double t2557;
  double t2565;
  double t2567;
  double t2521;
  double t2569;
  double t2572;
  double t2573;
  double t2517;
  double t2519;
  double t2575;
  double t2576;
  double t2579;
  double t2512;
  double t2508;
  double t2509;
  double t2503;
  double t2490;
  double t2492;
  double t2486;
  double t2478;
  double t2545;
  double t2550;
  double t2568;
  double t2574;
  double t2584;
  double t2585;
  double t2587;
  double t2588;
  double t2591;
  double t2592;
  double t2593;
  double t2594;
  double t2595;
  double t2596;
  double t2597;
  double t2598;
  double t2602;
  double t2606;
  double t2607;
  double t2612;
  double t2628;
  double t2643;
  double t2654;
  double t2696;
  double t2697;
  double t2698;
  double t2625;
  double t2728;
  double t2679;
  double t2703;
  double t2709;
  double t2710;
  double t2712;
  double t2714;
  double t2718;
  double t2722;
  double t2725;
  double t2727;
  double t2729;
  double t2734;
  double t2735;
  double t2738;
  double t2739;
  double t2741;
  double t2742;
  double t2744;
  double t2745;
  double t2795;
  double t2812;
  double t2813;
  double t2814;
  double t2815;
  double t2833;
  double t2834;
  double t2835;
  double t2836;
  double t2801;
  double t2866;
  double t2867;
  double t2871;
  double t2873;
  double t2876;
  double t2817;
  double t2858;
  double t2845;
  double t2208;
  double t2212;
  double t2218;
  double t2219;
  double t2225;
  double t2230;
  double t2231;
  double t2935;
  double t2939;
  double t2944;
  double t2947;
  double t2948;
  double t2952;
  double t2956;
  double t2958;
  double t2959;
  double t2960;
  double t2965;
  double t2970;
  double t2973;
  double t2975;
  double t2979;
  double t2980;
  double t2985;
  double t2987;
  double t3034;
  double t3035;
  double t3041;
  double t3044;
  double t3045;
  double t3046;
  double t3049;
  double t3050;
  double t3053;
  double t3054;
  double t3056;
  double t3058;
  double t3059;
  double t3060;
  double t3066;
  double t3067;
  double t3069;
  double t3070;
  double t3109;
  double t3110;
  double t3115;
  double t3118;
  double t3122;
  double t3123;
  double t3136;
  double t3139;
  double t3140;
  double t3142;
  double t3143;
  double t3144;
  double t3146;
  double t3148;
  double t3150;
  double t2616;
  double t2617;
  double t2620;
  double t2621;
  double t3197;
  double t3198;
  double t3202;
  double t3204;
  double t3206;
  double t3207;
  double t3208;
  double t3210;
  double t3212;
  double t3214;
  double t3217;
  double t3218;
  double t3221;
  double t2626;
  double t2627;
  double t2631;
  double t2632;
  double t2635;
  double t2638;
  double t2645;
  double t2653;
  double t2659;
  double t2664;
  double t2667;
  double t2671;
  double t2677;
  double t2678;
  double t2681;
  double t2682;
  double t2686;
  double t2689;
  double t3258;
  double t3259;
  double t3260;
  double t3262;
  double t3263;
  double t3265;
  double t3267;
  double t3270;
  double t3273;
  double t3274;
  double t3276;
  double t3279;
  double t3280;
  double t3281;
  double t3282;
  double t2798;
  double t2800;
  double t2802;
  double t2807;
  double t2809;
  double t2810;
  double t2821;
  double t2824;
  double t2826;
  double t2828;
  double t2831;
  double t2832;
  double t2851;
  double t2852;
  double t2860;
  double t2863;
  double t2864;
  double t2865;
  double t3317;
  double t3324;
  double t3325;
  double t3326;
  double t2879;
  double t3328;
  double t3330;
  double t3334;
  double t3335;
  double t2882;
  double t3338;
  double t3343;
  double t3345;
  double t3347;
  double t2891;
  double t2899;
  double t2907;
  double t2921;
  double t3458;
  double t3459;
  double t3460;
  double t3462;
  double t3464;
  double t3467;
  double t3470;
  double t3471;
  double t3474;
  double t3475;
  double t3480;
  double t3483;
  double t3485;
  double t3487;
  double t3490;
  double t3491;
  double t3494;
  double t3497;
  double t3533;
  double t3534;
  double t3535;
  double t3537;
  double t3538;
  double t3542;
  double t3544;
  double t3545;
  double t3549;
  double t3552;
  double t3558;
  double t3561;
  double t3562;
  double t3570;
  double t3614;
  double t3618;
  double t3624;
  double t3625;
  double t3627;
  double t3628;
  double t3629;
  double t3631;
  double t3634;
  double t3636;
  double t3642;
  double t3643;
  double t3648;
  double t3680;
  double t3681;
  double t3684;
  double t3687;
  double t3688;
  double t3690;
  double t3691;
  double t3694;
  double t3696;
  double t3697;
  double t3700;
  double t3703;
  double t3704;
  double t3705;
  double t3706;
  double t3736;
  double t3739;
  double t3740;
  double t3743;
  double t3747;
  double t3748;
  double t3751;
  double t3752;
  double t3755;
  double t3757;
  double t3759;
  double t3763;
  t140 = Cos(var1[10]);
  t322 = Cos(var1[9]);
  t334 = -1.*t322;
  t354 = 1. + t334;
  t369 = Sin(var1[9]);
  t373 = -0.15121*t369;
  t397 = Sin(var1[4]);
  t173 = -1.*t140;
  t200 = 1. + t173;
  t229 = -1. + t140;
  t246 = Sin(var1[10]);
  t321 = Cos(var1[5]);
  t434 = Sin(var1[5]);
  t60 = Cos(var1[4]);
  t469 = t321*t369*t397;
  t470 = t322*t397*t434;
  t484 = t469 + t470;
  t496 = -1.*t322*t321*t397;
  t499 = t369*t397*t434;
  t500 = t496 + t499;
  t510 = Cos(var1[11]);
  t512 = -1.*t510;
  t515 = 1. + t512;
  t528 = Sin(var1[11]);
  t605 = -1. + t510;
  t540 = t60*t246;
  t550 = -4.e-6*t246*t484;
  t552 = -1.000000000016*t200;
  t575 = 1. + t552;
  t586 = t575*t500;
  t594 = t540 + t550 + t586;
  t619 = t140*t60;
  t624 = 4.e-6*t200*t484;
  t626 = -1.*t246*t500;
  t628 = t619 + t624 + t626;
  t661 = 4.e-6*t200*t60;
  t665 = 1.6e-11*t229;
  t666 = 1. + t665;
  t670 = t666*t484;
  t690 = 4.e-6*t246*t500;
  t696 = t661 + t670 + t690;
  t423 = -0.15121*t354;
  t425 = t423 + t373;
  t358 = 0.15121*t354;
  t382 = t358 + t373;
  t489 = 0.281210000008499*t200;
  t493 = -0.03874900000062*t246;
  t494 = t489 + t493;
  t443 = -1.2484e-7*var1[10];
  t455 = 2.479936e-18*t200;
  t456 = -1.54996e-7*t229;
  t461 = 1.124840000016e-6*t246;
  t466 = t443 + t455 + t456 + t461;
  t642 = -1.26e-8*var1[11];
  t645 = 2.552896e-18*t515;
  t647 = -1.59556e-7*t605;
  t655 = 2.012600000032e-6*t528;
  t657 = t642 + t645 + t647 + t655;
  t823 = -1.*t60*t321*t369;
  t831 = -1.*t322*t60*t434;
  t832 = t823 + t831;
  t835 = -1.*t322*t60*t321;
  t856 = t60*t369*t434;
  t857 = t835 + t856;
  t598 = -5.04e-14*var1[11];
  t599 = -0.039889*t515;
  t607 = 6.38224e-13*t605;
  t610 = -0.503150000008*t528;
  t613 = t598 + t599 + t607 + t610;
  t522 = 0.50315000001605*t515;
  t530 = -0.0398890000006382*t528;
  t531 = t522 + t530;
  t888 = 4.e-6*t246*t832;
  t890 = t666*t857;
  t898 = t888 + t890;
  t912 = -1.*t246*t832;
  t918 = 4.e-6*t200*t857;
  t919 = t912 + t918;
  t790 = -1.000000000016*t515;
  t801 = 1. + t790;
  t932 = t575*t832;
  t940 = -4.e-6*t246*t857;
  t943 = t932 + t940;
  t733 = 1.6e-11*t605;
  t736 = 1. + t733;
  t1008 = -0.15121*t322;
  t834 = t494*t832;
  t868 = t466*t857;
  t908 = t657*t898;
  t922 = t613*t919;
  t944 = t531*t943;
  t946 = -4.e-6*t528*t898;
  t954 = t528*t919;
  t955 = t801*t943;
  t956 = t946 + t954 + t955;
  t962 = 0.803147*t956;
  t963 = 4.e-6*t515*t898;
  t964 = t510*t919;
  t967 = -1.*t528*t943;
  t968 = t963 + t964 + t967;
  t972 = -0.041195*t968;
  t976 = t736*t898;
  t982 = 4.e-6*t515*t919;
  t983 = 4.e-6*t528*t943;
  t995 = t976 + t982 + t983;
  t1004 = -0.14871*t995;
  t1077 = t322*t60*t321;
  t1083 = -1.*t60*t369*t434;
  t1087 = t1077 + t1083;
  t1101 = -1.*t246*t397;
  t1106 = -1.*t140*t1087;
  t1110 = t1101 + t888 + t1106;
  t1117 = 4.e-6*t246*t397;
  t1122 = -1.6e-11*t246*t832;
  t1124 = 4.e-6*t140*t1087;
  t1125 = t1117 + t1122 + t1124;
  t1141 = t140*t397;
  t1147 = -4.e-6*t140*t832;
  t1153 = -1.000000000016*t246*t1087;
  t1154 = t1141 + t1147 + t1153;
  t1232 = t246*t397;
  t1234 = -4.e-6*t246*t832;
  t1235 = t575*t1087;
  t1238 = t1232 + t1234 + t1235;
  t1267 = 4.e-6*t200*t832;
  t1269 = -1.*t246*t1087;
  t1282 = t1141 + t1267 + t1269;
  t1293 = 4.e-6*t200*t397;
  t1294 = t666*t832;
  t1296 = 4.e-6*t246*t1087;
  t1297 = t1293 + t1294 + t1296;
  t64 = -4.9936e-13*var1[10];
  t219 = -0.038749*t200;
  t231 = 6.19984e-13*t229;
  t262 = -0.281210000004*t246;
  t285 = t64 + t219 + t231 + t262;
  t1344 = Cos(var1[3]);
  t1357 = Sin(var1[3]);
  t1356 = t1344*t321*t397;
  t1359 = -1.*t1357*t434;
  t1361 = t1356 + t1359;
  t1368 = -1.*t321*t1357;
  t1370 = -1.*t1344*t397*t434;
  t1371 = t1368 + t1370;
  t1374 = -1.*t369*t1361;
  t1376 = t322*t1371;
  t1384 = t1374 + t1376;
  t1387 = t322*t1361;
  t1388 = t369*t1371;
  t1390 = t1387 + t1388;
  t1394 = -1.*t1344*t60*t246;
  t1396 = -4.e-6*t246*t1384;
  t1397 = t575*t1390;
  t1399 = t1394 + t1396 + t1397;
  t1403 = -1.*t140*t1344*t60;
  t1405 = 4.e-6*t200*t1384;
  t1406 = -1.*t246*t1390;
  t1407 = t1403 + t1405 + t1406;
  t1415 = -4.e-6*t200*t1344*t60;
  t1416 = t666*t1384;
  t1417 = 4.e-6*t246*t1390;
  t1418 = t1415 + t1416 + t1417;
  t1455 = -1.*t60*t321*t369*t1357;
  t1456 = -1.*t322*t60*t1357*t434;
  t1457 = t1455 + t1456;
  t1466 = t322*t60*t321*t1357;
  t1472 = -1.*t60*t369*t1357*t434;
  t1473 = t1466 + t1472;
  t1477 = t246*t1357*t397;
  t1478 = -4.e-6*t246*t1457;
  t1479 = t575*t1473;
  t1485 = t1477 + t1478 + t1479;
  t1487 = t140*t1357*t397;
  t1488 = 4.e-6*t200*t1457;
  t1496 = -1.*t246*t1473;
  t1497 = t1487 + t1488 + t1496;
  t1500 = 4.e-6*t200*t1357*t397;
  t1508 = t666*t1457;
  t1509 = 4.e-6*t246*t1473;
  t1512 = t1500 + t1508 + t1509;
  t1554 = -1.*t321*t1357*t397;
  t1557 = -1.*t1344*t434;
  t1558 = t1554 + t1557;
  t1567 = t1344*t321;
  t1569 = -1.*t1357*t397*t434;
  t1571 = t1567 + t1569;
  t1573 = t369*t1558;
  t1575 = t322*t1571;
  t1577 = t1573 + t1575;
  t1579 = t322*t1558;
  t1580 = -1.*t369*t1571;
  t1581 = t1579 + t1580;
  t1584 = 4.e-6*t246*t1577;
  t1587 = t666*t1581;
  t1588 = t1584 + t1587;
  t1592 = -1.*t246*t1577;
  t1593 = 4.e-6*t200*t1581;
  t1594 = t1592 + t1593;
  t1597 = t575*t1577;
  t1598 = -4.e-6*t246*t1581;
  t1600 = t1597 + t1598;
  t1009 = 0.15121*t369;
  t1024 = t1008 + t1009;
  t1029 = t1008 + t373;
  t1634 = t321*t1357*t397;
  t1635 = t1344*t434;
  t1645 = t1634 + t1635;
  t1649 = -1.*t369*t1645;
  t1653 = t1649 + t1575;
  t1655 = -1.*t322*t1645;
  t1656 = t1655 + t1580;
  t1658 = 4.e-6*t246*t1653;
  t1660 = t666*t1656;
  t1661 = t1658 + t1660;
  t1664 = -1.*t246*t1653;
  t1669 = 4.e-6*t200*t1656;
  t1670 = t1664 + t1669;
  t1672 = t575*t1653;
  t1676 = -4.e-6*t246*t1656;
  t1678 = t1672 + t1676;
  t1039 = -0.281210000004*t140;
  t1040 = -4.9936e-13 + t1039 + t493;
  t1043 = 1.124840000016e-6*t140;
  t1052 = 1.5499600000248e-7*t246;
  t1059 = -1.2484e-7 + t1043 + t1052;
  t1074 = -0.03874900000062*t140;
  t1075 = 0.281210000008499*t246;
  t1076 = t1074 + t1075;
  t1727 = t322*t1645;
  t1729 = t369*t1571;
  t1731 = t1727 + t1729;
  t1741 = t60*t246*t1357;
  t1742 = -1.*t140*t1731;
  t1744 = t1741 + t1658 + t1742;
  t1746 = -4.e-6*t60*t246*t1357;
  t1747 = -1.6e-11*t246*t1653;
  t1748 = 4.e-6*t140*t1731;
  t1750 = t1746 + t1747 + t1748;
  t1752 = -1.*t140*t60*t1357;
  t1753 = -4.e-6*t140*t1653;
  t1754 = -1.000000000016*t246*t1731;
  t1757 = t1752 + t1753 + t1754;
  t1218 = -0.0398890000006382*t510;
  t1219 = 0.50315000001605*t528;
  t1224 = t1218 + t1219;
  t1253 = -0.503150000008*t510;
  t1260 = -5.04e-14 + t1253 + t530;
  t1290 = 2.012600000032e-6*t510;
  t1291 = 1.59556000002553e-7*t528;
  t1292 = -1.26e-8 + t1290 + t1291;
  t1795 = -1.*t60*t246*t1357;
  t1796 = -4.e-6*t246*t1653;
  t1797 = t575*t1731;
  t1798 = t1795 + t1796 + t1797;
  t1802 = 4.e-6*t200*t1653;
  t1803 = -1.*t246*t1731;
  t1804 = t1752 + t1802 + t1803;
  t1808 = -4.e-6*t200*t60*t1357;
  t1809 = t666*t1653;
  t1810 = 4.e-6*t246*t1731;
  t1811 = t1808 + t1809 + t1810;
  t1816 = t510*t1804;
  t1886 = t1344*t60*t321*t369;
  t1887 = t322*t1344*t60*t434;
  t1888 = t1886 + t1887;
  t1890 = -1.*t322*t1344*t60*t321;
  t1891 = t1344*t60*t369*t434;
  t1892 = t1890 + t1891;
  t1894 = -1.*t1344*t246*t397;
  t1896 = -4.e-6*t246*t1888;
  t1897 = t575*t1892;
  t1898 = t1894 + t1896 + t1897;
  t1902 = -1.*t140*t1344*t397;
  t1904 = 4.e-6*t200*t1888;
  t1908 = -1.*t246*t1892;
  t1911 = t1902 + t1904 + t1908;
  t1914 = -4.e-6*t200*t1344*t397;
  t1916 = t666*t1888;
  t1917 = 4.e-6*t246*t1892;
  t1918 = t1914 + t1916 + t1917;
  t1942 = t321*t1357;
  t1943 = t1344*t397*t434;
  t1944 = t1942 + t1943;
  t1946 = t369*t1361;
  t1949 = t322*t1944;
  t1950 = t1946 + t1949;
  t1952 = -1.*t369*t1944;
  t1953 = t1387 + t1952;
  t1956 = 4.e-6*t246*t1950;
  t1958 = t666*t1953;
  t1959 = t1956 + t1958;
  t1962 = -1.*t246*t1950;
  t1963 = 4.e-6*t200*t1953;
  t1964 = t1962 + t1963;
  t1972 = t575*t1950;
  t1975 = -4.e-6*t246*t1953;
  t1977 = t1972 + t1975;
  t2010 = -1.*t1344*t321*t397;
  t2011 = t1357*t434;
  t2012 = t2010 + t2011;
  t2015 = -1.*t369*t2012;
  t2016 = t2015 + t1949;
  t2019 = -1.*t322*t2012;
  t2020 = t2019 + t1952;
  t2022 = 4.e-6*t246*t2016;
  t2023 = t666*t2020;
  t2024 = t2022 + t2023;
  t2027 = -1.*t246*t2016;
  t2028 = 4.e-6*t200*t2020;
  t2029 = t2027 + t2028;
  t2031 = t575*t2016;
  t2032 = -4.e-6*t246*t2020;
  t2033 = t2031 + t2032;
  t2068 = t322*t2012;
  t2070 = t369*t1944;
  t2071 = t2068 + t2070;
  t2073 = -1.*t140*t2071;
  t2079 = t1394 + t2022 + t2073;
  t2084 = 4.e-6*t1344*t60*t246;
  t2087 = -1.6e-11*t246*t2016;
  t2088 = 4.e-6*t140*t2071;
  t2089 = t2084 + t2087 + t2088;
  t2093 = t140*t1344*t60;
  t2094 = -4.e-6*t140*t2016;
  t2096 = -1.000000000016*t246*t2071;
  t2097 = t2093 + t2094 + t2096;
  t2144 = t1344*t60*t246;
  t2145 = -4.e-6*t246*t2016;
  t2146 = t575*t2071;
  t2151 = t2144 + t2145 + t2146;
  t2159 = 4.e-6*t200*t2016;
  t2161 = -1.*t246*t2071;
  t2167 = t2093 + t2159 + t2161;
  t2169 = 4.e-6*t200*t1344*t60;
  t2171 = t666*t2016;
  t2173 = 4.e-6*t246*t2071;
  t2177 = t2169 + t2171 + t2173;
  t2209 = Cos(var1[16]);
  t2210 = -1.*t2209;
  t2211 = 1. + t2210;
  t2215 = Sin(var1[16]);
  t2240 = Cos(var1[15]);
  t2241 = -1.*t2240;
  t2243 = 1. + t2241;
  t2244 = -0.15121*t2243;
  t2247 = Sin(var1[15]);
  t2220 = -1. + t2209;
  t2221 = 4.e-6*t2220;
  t2272 = 7.e-6*t2211;
  t2213 = 2.8e-11*t2211;
  t2333 = Cos(var1[17]);
  t2334 = -1.*t2333;
  t2338 = 1. + t2334;
  t2347 = Sin(var1[17]);
  t2309 = -4.e-6*t2215;
  t2296 = t321*t2247*t397;
  t2297 = t2240*t397*t434;
  t2301 = t2296 + t2297;
  t2321 = -1.*t2240*t321*t397;
  t2324 = t2247*t397*t434;
  t2325 = t2321 + t2324;
  t2355 = 2.8e-11*t2338;
  t2224 = -7.e-6*t2215;
  t2362 = -2.8e-11*t2211;
  t2216 = -1.*t2215;
  t2345 = 7.e-6*t2338;
  t2398 = -1. + t2333;
  t2401 = 4.e-6*t2398;
  t2424 = 4.e-6*t2211;
  t2284 = 7.e-6*t2215;
  t2368 = -7.e-6*t2211;
  t2275 = 4.e-6*t2215;
  t2443 = 4.e-6*t2347;
  t2364 = t2362 + t2215;
  t2367 = t60*t2364;
  t2369 = t2368 + t2309;
  t2370 = t2369*t2301;
  t2372 = -1.000000000016*t2211;
  t2374 = 1. + t2372;
  t2376 = t2374*t2325;
  t2377 = t2367 + t2370 + t2376;
  t2449 = 7.e-6*t2347;
  t2419 = -1.000000000049*t2211;
  t2420 = 1. + t2419;
  t2421 = t2420*t60;
  t2427 = t2424 + t2224;
  t2428 = t2427*t2301;
  t2430 = t2362 + t2216;
  t2431 = t2430*t2325;
  t2434 = t2421 + t2428 + t2431;
  t2459 = t2424 + t2284;
  t2461 = t60*t2459;
  t2462 = -6.5e-11*t2211;
  t2468 = 1. + t2462;
  t2469 = t2468*t2301;
  t2470 = t2368 + t2275;
  t2471 = t2470*t2325;
  t2474 = t2461 + t2469 + t2471;
  t2392 = -1.*t2347;
  t2483 = 4.e-6*t2338;
  t2404 = -7.e-6*t2347;
  t2500 = -2.8e-11*t2338;
  t2477 = -7.e-6*t2338;
  t2351 = -4.e-6*t2347;
  t2256 = 0.15121*t2247;
  t2258 = t2244 + t2256;
  t2248 = -0.15121*t2247;
  t2252 = t2244 + t2248;
  t2303 = -2.7726089999999997e-12*var1[16];
  t2305 = -0.2812110000084994*t2211;
  t2310 = t2272 + t2309;
  t2311 = -1.8134809999999998e-6*t2310;
  t2317 = t2213 + t2215;
  t2318 = -0.038749000006999997*t2317;
  t2320 = t2303 + t2305 + t2311 + t2318;
  t2266 = 3.9608699999999997e-7*var1[16];
  t2270 = -1.1787626499999999e-16*t2211;
  t2276 = t2272 + t2275;
  t2282 = -0.281211000004*t2276;
  t2287 = t2221 + t2284;
  t2292 = -0.038749000006999997*t2287;
  t2294 = t2266 + t2270 + t2282 + t2292;
  t2439 = 2.826290000000002e-7*var1[17];
  t2440 = -2.18904205e-16*t2338;
  t2445 = t2345 + t2443;
  t2446 = -0.5031510000080001*t2445;
  t2451 = t2401 + t2449;
  t2454 = -0.038575000014*t2451;
  t2456 = t2439 + t2440 + t2446 + t2454;
  t2536 = -1.*t60*t321*t2247;
  t2541 = -1.*t2240*t60*t434;
  t2542 = t2536 + t2541;
  t2546 = -1.*t2240*t60*t321;
  t2547 = t60*t2247*t434;
  t2549 = t2546 + t2547;
  t2381 = 1.1305160000000008e-12*var1[17];
  t2388 = -0.03857500001589017*t2338;
  t2393 = t2355 + t2392;
  t2397 = -0.5031510000080001*t2393;
  t2405 = t2401 + t2404;
  t2415 = -3.367757e-6*t2405;
  t2418 = t2381 + t2388 + t2397 + t2415;
  t2330 = -1.9784030000000015e-12*var1[17];
  t2341 = -0.5031510000160505*t2338;
  t2353 = t2345 + t2351;
  t2354 = -3.367757e-6*t2353;
  t2357 = t2355 + t2347;
  t2358 = -0.038575000014*t2357;
  t2359 = t2330 + t2341 + t2354 + t2358;
  t2526 = t2477 + t2351;
  t2557 = t2470*t2542;
  t2565 = t2468*t2549;
  t2567 = t2557 + t2565;
  t2521 = t2500 + t2347;
  t2569 = t2430*t2542;
  t2572 = t2427*t2549;
  t2573 = t2569 + t2572;
  t2517 = -1.000000000016*t2338;
  t2519 = 1. + t2517;
  t2575 = t2374*t2542;
  t2576 = t2369*t2549;
  t2579 = t2575 + t2576;
  t2512 = t2483 + t2404;
  t2508 = -1.000000000049*t2338;
  t2509 = 1. + t2508;
  t2503 = t2500 + t2392;
  t2490 = -6.5e-11*t2338;
  t2492 = 1. + t2490;
  t2486 = t2483 + t2449;
  t2478 = t2477 + t2443;
  t2545 = t2320*t2542;
  t2550 = t2294*t2549;
  t2568 = t2456*t2567;
  t2574 = t2418*t2573;
  t2584 = t2359*t2579;
  t2585 = t2526*t2567;
  t2587 = t2521*t2573;
  t2588 = t2519*t2579;
  t2591 = t2585 + t2587 + t2588;
  t2592 = -0.80315*t2591;
  t2593 = t2512*t2567;
  t2594 = t2509*t2573;
  t2595 = t2503*t2579;
  t2596 = t2593 + t2594 + t2595;
  t2597 = -0.038576*t2596;
  t2598 = t2492*t2567;
  t2602 = t2486*t2573;
  t2606 = t2478*t2579;
  t2607 = t2598 + t2602 + t2606;
  t2612 = -0.148715*t2607;
  t2628 = 2.8e-11*t2215;
  t2643 = 7.e-6*t2209;
  t2654 = 4.e-6*t2209;
  t2696 = t2240*t60*t321;
  t2697 = -1.*t60*t2247*t434;
  t2698 = t2696 + t2697;
  t2625 = -7.e-6*t2209;
  t2728 = -2.8e-11*t2215;
  t2679 = -4.e-6*t2209;
  t2703 = t2643 + t2275;
  t2709 = t2703*t397;
  t2710 = -6.5e-11*t2215*t2542;
  t2712 = t2654 + t2224;
  t2714 = t2712*t2698;
  t2718 = t2709 + t2710 + t2714;
  t2722 = -1.000000000049*t2215*t397;
  t2725 = t2625 + t2275;
  t2727 = t2725*t2542;
  t2729 = t2210 + t2728;
  t2734 = t2729*t2698;
  t2735 = t2722 + t2727 + t2734;
  t2738 = t2209 + t2728;
  t2739 = t2738*t397;
  t2741 = t2679 + t2224;
  t2742 = t2741*t2542;
  t2744 = -1.000000000016*t2215*t2698;
  t2745 = t2739 + t2742 + t2744;
  t2795 = 2.8e-11*t2347;
  t2812 = t2364*t397;
  t2813 = t2369*t2542;
  t2814 = t2374*t2698;
  t2815 = t2812 + t2813 + t2814;
  t2833 = t2420*t397;
  t2834 = t2427*t2542;
  t2835 = t2430*t2698;
  t2836 = t2833 + t2834 + t2835;
  t2801 = -4.e-6*t2333;
  t2866 = t2459*t397;
  t2867 = t2468*t2542;
  t2871 = t2470*t2698;
  t2873 = t2866 + t2867 + t2871;
  t2876 = -2.8e-11*t2347;
  t2817 = -7.e-6*t2333;
  t2858 = 4.e-6*t2333;
  t2845 = 7.e-6*t2333;
  t2208 = 1.5843479999999999e-12*var1[16];
  t2212 = -0.03874900000889869*t2211;
  t2218 = t2213 + t2216;
  t2219 = -0.281211000004*t2218;
  t2225 = t2221 + t2224;
  t2230 = -1.8134809999999998e-6*t2225;
  t2231 = t2208 + t2212 + t2219 + t2230;
  t2935 = -1.*t2247*t1361;
  t2939 = t2240*t1371;
  t2944 = t2935 + t2939;
  t2947 = t2240*t1361;
  t2948 = t2247*t1371;
  t2952 = t2947 + t2948;
  t2956 = -1.*t1344*t60*t2364;
  t2958 = t2369*t2944;
  t2959 = t2374*t2952;
  t2960 = t2956 + t2958 + t2959;
  t2965 = -1.*t2420*t1344*t60;
  t2970 = t2427*t2944;
  t2973 = t2430*t2952;
  t2975 = t2965 + t2970 + t2973;
  t2979 = -1.*t1344*t60*t2459;
  t2980 = t2468*t2944;
  t2985 = t2470*t2952;
  t2987 = t2979 + t2980 + t2985;
  t3034 = -1.*t60*t321*t2247*t1357;
  t3035 = -1.*t2240*t60*t1357*t434;
  t3041 = t3034 + t3035;
  t3044 = t2240*t60*t321*t1357;
  t3045 = -1.*t60*t2247*t1357*t434;
  t3046 = t3044 + t3045;
  t3049 = t2364*t1357*t397;
  t3050 = t2369*t3041;
  t3053 = t2374*t3046;
  t3054 = t3049 + t3050 + t3053;
  t3056 = t2420*t1357*t397;
  t3058 = t2427*t3041;
  t3059 = t2430*t3046;
  t3060 = t3056 + t3058 + t3059;
  t3066 = t2459*t1357*t397;
  t3067 = t2468*t3041;
  t3069 = t2470*t3046;
  t3070 = t3066 + t3067 + t3069;
  t3109 = t2247*t1558;
  t3110 = t2240*t1571;
  t3115 = t3109 + t3110;
  t3118 = t2240*t1558;
  t3122 = -1.*t2247*t1571;
  t3123 = t3118 + t3122;
  t3136 = t2470*t3115;
  t3139 = t2468*t3123;
  t3140 = t3136 + t3139;
  t3142 = t2430*t3115;
  t3143 = t2427*t3123;
  t3144 = t3142 + t3143;
  t3146 = t2374*t3115;
  t3148 = t2369*t3123;
  t3150 = t3146 + t3148;
  t2616 = -0.15121*t2240;
  t2617 = t2616 + t2248;
  t2620 = 0.15121*t2240;
  t2621 = t2620 + t2248;
  t3197 = -1.*t2247*t1645;
  t3198 = t3197 + t3110;
  t3202 = -1.*t2240*t1645;
  t3204 = t3202 + t3122;
  t3206 = t2470*t3198;
  t3207 = t2468*t3204;
  t3208 = t3206 + t3207;
  t3210 = t2430*t3198;
  t3212 = t2427*t3204;
  t3214 = t3210 + t3212;
  t3217 = t2374*t3198;
  t3218 = t2369*t3204;
  t3221 = t3217 + t3218;
  t2626 = t2625 + t2309;
  t2627 = -1.8134809999999998e-6*t2626;
  t2631 = t2210 + t2628;
  t2632 = -0.281211000004*t2631;
  t2635 = -0.03874900000889869*t2215;
  t2638 = 1.5843479999999999e-12 + t2627 + t2632 + t2635;
  t2645 = t2643 + t2309;
  t2653 = -0.038749000006999997*t2645;
  t2659 = t2654 + t2284;
  t2664 = -0.281211000004*t2659;
  t2667 = -1.1787626499999999e-16*t2215;
  t2671 = 3.9608699999999997e-7 + t2653 + t2664 + t2667;
  t2677 = t2209 + t2628;
  t2678 = -0.038749000006999997*t2677;
  t2681 = t2679 + t2284;
  t2682 = -1.8134809999999998e-6*t2681;
  t2686 = -0.2812110000084994*t2215;
  t2689 = -2.7726089999999997e-12 + t2678 + t2682 + t2686;
  t3258 = t2240*t1645;
  t3259 = t2247*t1571;
  t3260 = t3258 + t3259;
  t3262 = -1.*t60*t2703*t1357;
  t3263 = -6.5e-11*t2215*t3198;
  t3265 = t2712*t3260;
  t3267 = t3262 + t3263 + t3265;
  t3270 = 1.000000000049*t60*t2215*t1357;
  t3273 = t2725*t3198;
  t3274 = t2729*t3260;
  t3276 = t3270 + t3273 + t3274;
  t3279 = -1.*t60*t2738*t1357;
  t3280 = t2741*t3198;
  t3281 = -1.000000000016*t2215*t3260;
  t3282 = t3279 + t3280 + t3281;
  t2798 = t2333 + t2795;
  t2800 = -0.038575000014*t2798;
  t2802 = t2801 + t2449;
  t2807 = -3.367757e-6*t2802;
  t2809 = -0.5031510000160505*t2347;
  t2810 = -1.9784030000000015e-12 + t2800 + t2807 + t2809;
  t2821 = t2817 + t2351;
  t2824 = -3.367757e-6*t2821;
  t2826 = t2334 + t2795;
  t2828 = -0.5031510000080001*t2826;
  t2831 = -0.03857500001589017*t2347;
  t2832 = 1.1305160000000008e-12 + t2824 + t2828 + t2831;
  t2851 = t2845 + t2351;
  t2852 = -0.038575000014*t2851;
  t2860 = t2858 + t2449;
  t2863 = -0.5031510000080001*t2860;
  t2864 = -2.18904205e-16*t2347;
  t2865 = 2.826290000000002e-7 + t2852 + t2863 + t2864;
  t3317 = -1.*t60*t2364*t1357;
  t3324 = t2369*t3198;
  t3325 = t2374*t3260;
  t3326 = t3317 + t3324 + t3325;
  t2879 = t2333 + t2876;
  t3328 = -1.*t2420*t60*t1357;
  t3330 = t2427*t3198;
  t3334 = t2430*t3260;
  t3335 = t3328 + t3330 + t3334;
  t2882 = t2801 + t2404;
  t3338 = -1.*t60*t2459*t1357;
  t3343 = t2468*t3198;
  t3345 = t2470*t3260;
  t3347 = t3338 + t3343 + t3345;
  t2891 = t2334 + t2876;
  t2899 = t2817 + t2443;
  t2907 = t2858 + t2404;
  t2921 = t2845 + t2443;
  t3458 = t1344*t60*t321*t2247;
  t3459 = t2240*t1344*t60*t434;
  t3460 = t3458 + t3459;
  t3462 = -1.*t2240*t1344*t60*t321;
  t3464 = t1344*t60*t2247*t434;
  t3467 = t3462 + t3464;
  t3470 = -1.*t1344*t2364*t397;
  t3471 = t2369*t3460;
  t3474 = t2374*t3467;
  t3475 = t3470 + t3471 + t3474;
  t3480 = -1.*t2420*t1344*t397;
  t3483 = t2427*t3460;
  t3485 = t2430*t3467;
  t3487 = t3480 + t3483 + t3485;
  t3490 = -1.*t1344*t2459*t397;
  t3491 = t2468*t3460;
  t3494 = t2470*t3467;
  t3497 = t3490 + t3491 + t3494;
  t3533 = t2247*t1361;
  t3534 = t2240*t1944;
  t3535 = t3533 + t3534;
  t3537 = -1.*t2247*t1944;
  t3538 = t2947 + t3537;
  t3542 = t2470*t3535;
  t3544 = t2468*t3538;
  t3545 = t3542 + t3544;
  t3549 = t2430*t3535;
  t3552 = t2427*t3538;
  t3558 = t3549 + t3552;
  t3561 = t2374*t3535;
  t3562 = t2369*t3538;
  t3570 = t3561 + t3562;
  t3614 = -1.*t2247*t2012;
  t3618 = t3614 + t3534;
  t3624 = -1.*t2240*t2012;
  t3625 = t3624 + t3537;
  t3627 = t2470*t3618;
  t3628 = t2468*t3625;
  t3629 = t3627 + t3628;
  t3631 = t2430*t3618;
  t3634 = t2427*t3625;
  t3636 = t3631 + t3634;
  t3642 = t2374*t3618;
  t3643 = t2369*t3625;
  t3648 = t3642 + t3643;
  t3680 = t2240*t2012;
  t3681 = t2247*t1944;
  t3684 = t3680 + t3681;
  t3687 = t1344*t60*t2703;
  t3688 = -6.5e-11*t2215*t3618;
  t3690 = t2712*t3684;
  t3691 = t3687 + t3688 + t3690;
  t3694 = -1.000000000049*t1344*t60*t2215;
  t3696 = t2725*t3618;
  t3697 = t2729*t3684;
  t3700 = t3694 + t3696 + t3697;
  t3703 = t1344*t60*t2738;
  t3704 = t2741*t3618;
  t3705 = -1.000000000016*t2215*t3684;
  t3706 = t3703 + t3704 + t3705;
  t3736 = t1344*t60*t2364;
  t3739 = t2369*t3618;
  t3740 = t2374*t3684;
  t3743 = t3736 + t3739 + t3740;
  t3747 = t2420*t1344*t60;
  t3748 = t2427*t3618;
  t3751 = t2430*t3684;
  t3752 = t3747 + t3748 + t3751;
  t3755 = t1344*t60*t2459;
  t3757 = t2468*t3618;
  t3759 = t2470*t3684;
  t3763 = t3755 + t3757 + t3759;
  p_output1[0]=1.;
  p_output1[1]=-1.*t321*t382*t397 + t397*t425*t434 + t466*t484 + t494*t500 + t531*t594 + t285*t60 + t613*t628 + t657*t696 - 0.041195*(-1.*t528*t594 + t510*t628 + 4.e-6*t515*t696) - 0.14871*(4.e-6*t528*t594 + 4.e-6*t515*t628 + t696*t736) + 0.803147*(t528*t628 - 4.e-6*t528*t696 + t594*t801);
  p_output1[2]=t1004 - 1.*t321*t425*t60 - 1.*t382*t434*t60 + t834 + t868 + t908 + t922 + t944 + t962 + t972;
  p_output1[3]=t1004 + t1024*t321*t60 - 1.*t1029*t434*t60 + t834 + t868 + t908 + t922 + t944 + t962 + t972;
  p_output1[4]=t1076*t1087 + t1040*t397 - 0.041195*(t1110*t510 + 4.e-6*t1125*t515 - 1.*t1154*t528) + t1154*t531 + t1110*t613 + t1125*t657 - 0.14871*(4.e-6*t1110*t515 + 4.e-6*t1154*t528 + t1125*t736) + 0.803147*(t1110*t528 - 4.e-6*t1125*t528 + t1154*t801) + t1059*t832;
  p_output1[5]=t1224*t1238 + t1260*t1282 + t1292*t1297 + 0.803147*(t1282*t510 - 4.e-6*t1297*t510 - 1.000000000016*t1238*t528) - 0.14871*(4.e-6*t1238*t510 + 4.e-6*t1282*t528 - 1.6e-11*t1297*t528) - 0.041195*(-1.*t1238*t510 - 1.*t1282*t528 + 4.e-6*t1297*t528);
  p_output1[6]=1.;
  p_output1[7]=t1361*t382 + t1371*t425 + t1384*t466 + t1390*t494 - 0.041195*(t1407*t510 + 4.e-6*t1418*t515 - 1.*t1399*t528) + t1399*t531 - 1.*t1344*t285*t60 + t1407*t613 + t1418*t657 - 0.14871*(4.e-6*t1407*t515 + 4.e-6*t1399*t528 + t1418*t736) + 0.803147*(t1407*t528 - 4.e-6*t1418*t528 + t1399*t801);
  p_output1[8]=t1357*t285*t397 + t1457*t466 + t1473*t494 - 0.041195*(t1497*t510 + 4.e-6*t1512*t515 - 1.*t1485*t528) + t1485*t531 + t1357*t321*t382*t60 - 1.*t1357*t425*t434*t60 + t1497*t613 + t1512*t657 - 0.14871*(4.e-6*t1497*t515 + 4.e-6*t1485*t528 + t1512*t736) + 0.803147*(t1497*t528 - 4.e-6*t1512*t528 + t1485*t801);
  p_output1[9]=t1571*t382 + t1558*t425 + t1581*t466 + t1577*t494 - 0.041195*(t1594*t510 + 4.e-6*t1588*t515 - 1.*t1600*t528) + t1600*t531 + t1594*t613 + t1588*t657 - 0.14871*(4.e-6*t1594*t515 + 4.e-6*t1600*t528 + t1588*t736) + 0.803147*(-4.e-6*t1588*t528 + t1594*t528 + t1600*t801);
  p_output1[10]=t1029*t1571 + t1024*t1645 + t1656*t466 + t1653*t494 - 0.041195*(t1670*t510 + 4.e-6*t1661*t515 - 1.*t1678*t528) + t1678*t531 + t1670*t613 + t1661*t657 - 0.14871*(4.e-6*t1670*t515 + 4.e-6*t1678*t528 + t1661*t736) + 0.803147*(-4.e-6*t1661*t528 + t1670*t528 + t1678*t801);
  p_output1[11]=t1059*t1653 + t1076*t1731 - 0.041195*(t1744*t510 + 4.e-6*t1750*t515 - 1.*t1757*t528) + t1757*t531 - 1.*t1040*t1357*t60 + t1744*t613 + t1750*t657 - 0.14871*(4.e-6*t1744*t515 + 4.e-6*t1757*t528 + t1750*t736) + 0.803147*(t1744*t528 - 4.e-6*t1750*t528 + t1757*t801);
  p_output1[12]=t1224*t1798 + t1260*t1804 + t1292*t1811 + 0.803147*(t1816 - 4.e-6*t1811*t510 - 1.000000000016*t1798*t528) - 0.14871*(4.e-6*t1798*t510 + 4.e-6*t1804*t528 - 1.6e-11*t1811*t528) - 0.041195*(-1.*t1798*t510 - 1.*t1804*t528 + 4.e-6*t1811*t528);
  p_output1[13]=1.;
  p_output1[14]=t1645*t382 + t1571*t425 + t1653*t466 + t1731*t494 - 0.041195*(t1816 + 4.e-6*t1811*t515 - 1.*t1798*t528) + t1798*t531 - 1.*t1357*t285*t60 + t1804*t613 + t1811*t657 - 0.14871*(4.e-6*t1804*t515 + 4.e-6*t1798*t528 + t1811*t736) + 0.803147*(t1804*t528 - 4.e-6*t1811*t528 + t1798*t801);
  p_output1[15]=-1.*t1344*t285*t397 + t1888*t466 + t1892*t494 - 0.041195*(t1911*t510 + 4.e-6*t1918*t515 - 1.*t1898*t528) + t1898*t531 - 1.*t1344*t321*t382*t60 + t1344*t425*t434*t60 + t1911*t613 + t1918*t657 - 0.14871*(4.e-6*t1911*t515 + 4.e-6*t1898*t528 + t1918*t736) + 0.803147*(t1911*t528 - 4.e-6*t1918*t528 + t1898*t801);
  p_output1[16]=t1944*t382 + t1361*t425 + t1953*t466 + t1950*t494 - 0.041195*(t1964*t510 + 4.e-6*t1959*t515 - 1.*t1977*t528) + t1977*t531 + t1964*t613 + t1959*t657 - 0.14871*(4.e-6*t1964*t515 + 4.e-6*t1977*t528 + t1959*t736) + 0.803147*(-4.e-6*t1959*t528 + t1964*t528 + t1977*t801);
  p_output1[17]=t1029*t1944 + t1024*t2012 + t2020*t466 + t2016*t494 - 0.041195*(t2029*t510 + 4.e-6*t2024*t515 - 1.*t2033*t528) + t2033*t531 + t2029*t613 + t2024*t657 - 0.14871*(4.e-6*t2029*t515 + 4.e-6*t2033*t528 + t2024*t736) + 0.803147*(-4.e-6*t2024*t528 + t2029*t528 + t2033*t801);
  p_output1[18]=t1059*t2016 + t1076*t2071 - 0.041195*(t2079*t510 + 4.e-6*t2089*t515 - 1.*t2097*t528) + t2097*t531 + t1040*t1344*t60 + t2079*t613 + t2089*t657 - 0.14871*(4.e-6*t2079*t515 + 4.e-6*t2097*t528 + t2089*t736) + 0.803147*(t2079*t528 - 4.e-6*t2089*t528 + t2097*t801);
  p_output1[19]=t1224*t2151 + t1260*t2167 + t1292*t2177 + 0.803147*(t2167*t510 - 4.e-6*t2177*t510 - 1.000000000016*t2151*t528) - 0.14871*(4.e-6*t2151*t510 + 4.e-6*t2167*t528 - 1.6e-11*t2177*t528) - 0.041195*(-1.*t2151*t510 - 1.*t2167*t528 + 4.e-6*t2177*t528);
  p_output1[20]=1.;
  p_output1[21]=t2294*t2301 + t2320*t2325 + t2359*t2377 + t2418*t2434 + t2456*t2474 - 0.148715*(t2377*t2478 + t2434*t2486 + t2474*t2492) - 0.038576*(t2377*t2503 + t2434*t2509 + t2474*t2512) - 0.80315*(t2377*t2519 + t2434*t2521 + t2474*t2526) - 1.*t2252*t321*t397 + t2258*t397*t434 + t2231*t60;
  p_output1[22]=t2545 + t2550 + t2568 + t2574 + t2584 + t2592 + t2597 + t2612 - 1.*t2258*t321*t60 - 1.*t2252*t434*t60;
  p_output1[23]=t2545 + t2550 + t2568 + t2574 + t2584 + t2592 + t2597 + t2612 + t2617*t321*t60 - 1.*t2621*t434*t60;
  p_output1[24]=t2542*t2671 + t2689*t2698 + t2456*t2718 + t2418*t2735 + t2359*t2745 - 0.148715*(t2492*t2718 + t2486*t2735 + t2478*t2745) - 0.038576*(t2512*t2718 + t2509*t2735 + t2503*t2745) - 0.80315*(t2526*t2718 + t2521*t2735 + t2519*t2745) + t2638*t397;
  p_output1[25]=t2810*t2815 + t2832*t2836 + t2865*t2873 - 0.80315*(-1.000000000016*t2347*t2815 + t2836*t2879 + t2873*t2882) - 0.038576*(-1.000000000049*t2347*t2836 + t2815*t2891 + t2873*t2899) - 0.148715*(-6.5e-11*t2347*t2873 + t2815*t2907 + t2836*t2921);
  p_output1[26]=1.;
  p_output1[27]=t1361*t2252 + t1371*t2258 + t2294*t2944 + t2320*t2952 + t2359*t2960 + t2418*t2975 + t2456*t2987 - 0.148715*(t2478*t2960 + t2486*t2975 + t2492*t2987) - 0.038576*(t2503*t2960 + t2509*t2975 + t2512*t2987) - 0.80315*(t2519*t2960 + t2521*t2975 + t2526*t2987) - 1.*t1344*t2231*t60;
  p_output1[28]=t2294*t3041 + t2320*t3046 + t2359*t3054 + t2418*t3060 + t2456*t3070 - 0.148715*(t2478*t3054 + t2486*t3060 + t2492*t3070) - 0.038576*(t2503*t3054 + t2509*t3060 + t2512*t3070) - 0.80315*(t2519*t3054 + t2521*t3060 + t2526*t3070) + t1357*t2231*t397 + t1357*t2252*t321*t60 - 1.*t1357*t2258*t434*t60;
  p_output1[29]=t1571*t2252 + t1558*t2258 + t2320*t3115 + t2294*t3123 + t2456*t3140 + t2418*t3144 + t2359*t3150 - 0.148715*(t2492*t3140 + t2486*t3144 + t2478*t3150) - 0.038576*(t2512*t3140 + t2509*t3144 + t2503*t3150) - 0.80315*(t2526*t3140 + t2521*t3144 + t2519*t3150);
  p_output1[30]=t1645*t2617 + t1571*t2621 + t2320*t3198 + t2294*t3204 + t2456*t3208 + t2418*t3214 + t2359*t3221 - 0.148715*(t2492*t3208 + t2486*t3214 + t2478*t3221) - 0.038576*(t2512*t3208 + t2509*t3214 + t2503*t3221) - 0.80315*(t2526*t3208 + t2521*t3214 + t2519*t3221);
  p_output1[31]=t2671*t3198 + t2689*t3260 + t2456*t3267 + t2418*t3276 + t2359*t3282 - 0.148715*(t2492*t3267 + t2486*t3276 + t2478*t3282) - 0.038576*(t2512*t3267 + t2509*t3276 + t2503*t3282) - 0.80315*(t2526*t3267 + t2521*t3276 + t2519*t3282) - 1.*t1357*t2638*t60;
  p_output1[32]=t2810*t3326 + t2832*t3335 + t2865*t3347 - 0.148715*(t2907*t3326 + t2921*t3335 - 6.5e-11*t2347*t3347) - 0.80315*(-1.000000000016*t2347*t3326 + t2879*t3335 + t2882*t3347) - 0.038576*(t2891*t3326 - 1.000000000049*t2347*t3335 + t2899*t3347);
  p_output1[33]=1.;
  p_output1[34]=t1645*t2252 + t1571*t2258 + t2294*t3198 + t2320*t3260 + t2359*t3326 + t2418*t3335 + t2456*t3347 - 0.148715*(t2478*t3326 + t2486*t3335 + t2492*t3347) - 0.038576*(t2503*t3326 + t2509*t3335 + t2512*t3347) - 0.80315*(t2519*t3326 + t2521*t3335 + t2526*t3347) - 1.*t1357*t2231*t60;
  p_output1[35]=t2294*t3460 + t2320*t3467 + t2359*t3475 + t2418*t3487 + t2456*t3497 - 0.148715*(t2478*t3475 + t2486*t3487 + t2492*t3497) - 0.038576*(t2503*t3475 + t2509*t3487 + t2512*t3497) - 0.80315*(t2519*t3475 + t2521*t3487 + t2526*t3497) - 1.*t1344*t2231*t397 - 1.*t1344*t2252*t321*t60 + t1344*t2258*t434*t60;
  p_output1[36]=t1944*t2252 + t1361*t2258 + t2320*t3535 + t2294*t3538 + t2456*t3545 + t2418*t3558 + t2359*t3570 - 0.148715*(t2492*t3545 + t2486*t3558 + t2478*t3570) - 0.038576*(t2512*t3545 + t2509*t3558 + t2503*t3570) - 0.80315*(t2526*t3545 + t2521*t3558 + t2519*t3570);
  p_output1[37]=t2012*t2617 + t1944*t2621 + t2320*t3618 + t2294*t3625 + t2456*t3629 + t2418*t3636 + t2359*t3648 - 0.148715*(t2492*t3629 + t2486*t3636 + t2478*t3648) - 0.038576*(t2512*t3629 + t2509*t3636 + t2503*t3648) - 0.80315*(t2526*t3629 + t2521*t3636 + t2519*t3648);
  p_output1[38]=t2671*t3618 + t2689*t3684 + t2456*t3691 + t2418*t3700 + t2359*t3706 - 0.148715*(t2492*t3691 + t2486*t3700 + t2478*t3706) - 0.038576*(t2512*t3691 + t2509*t3700 + t2503*t3706) - 0.80315*(t2526*t3691 + t2521*t3700 + t2519*t3706) + t1344*t2638*t60;
  p_output1[39]=t2810*t3743 + t2832*t3752 + t2865*t3763 - 0.148715*(t2907*t3743 + t2921*t3752 - 6.5e-11*t2347*t3763) - 0.80315*(-1.000000000016*t2347*t3743 + t2879*t3752 + t2882*t3763) - 0.038576*(t2891*t3743 - 1.000000000049*t2347*t3752 + t2899*t3763);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_ParallelStance2.hh"

namespace ParallelStance2
{

void J_output_boundary_ParallelStance2_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
