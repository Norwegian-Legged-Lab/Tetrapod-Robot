/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:15:47 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t99;
  double t284;
  double t285;
  double t290;
  double t331;
  double t346;
  double t356;
  double t104;
  double t142;
  double t173;
  double t200;
  double t268;
  double t367;
  double t38;
  double t390;
  double t392;
  double t393;
  double t410;
  double t413;
  double t416;
  double t424;
  double t428;
  double t429;
  double t437;
  double t507;
  double t475;
  double t484;
  double t487;
  double t489;
  double t499;
  double t501;
  double t514;
  double t520;
  double t522;
  double t524;
  double t544;
  double t550;
  double t553;
  double t558;
  double t559;
  double t560;
  double t362;
  double t366;
  double t299;
  double t351;
  double t403;
  double t407;
  double t408;
  double t369;
  double t372;
  double t374;
  double t375;
  double t388;
  double t529;
  double t532;
  double t539;
  double t542;
  double t543;
  double t669;
  double t691;
  double t694;
  double t714;
  double t715;
  double t728;
  double t503;
  double t504;
  double t508;
  double t509;
  double t511;
  double t430;
  double t450;
  double t462;
  double t734;
  double t745;
  double t747;
  double t756;
  double t759;
  double t764;
  double t624;
  double t625;
  double t781;
  double t783;
  double t786;
  double t583;
  double t588;
  double t873;
  double t707;
  double t729;
  double t748;
  double t765;
  double t790;
  double t791;
  double t793;
  double t796;
  double t806;
  double t813;
  double t815;
  double t819;
  double t825;
  double t827;
  double t836;
  double t837;
  double t843;
  double t850;
  double t851;
  double t852;
  double t944;
  double t946;
  double t950;
  double t970;
  double t977;
  double t978;
  double t984;
  double t989;
  double t992;
  double t1005;
  double t1008;
  double t1013;
  double t1019;
  double t1026;
  double t1107;
  double t1112;
  double t1118;
  double t1122;
  double t1127;
  double t1131;
  double t1132;
  double t1149;
  double t1154;
  double t1160;
  double t1161;
  double t43;
  double t159;
  double t179;
  double t230;
  double t231;
  double t1224;
  double t1235;
  double t1234;
  double t1238;
  double t1240;
  double t1244;
  double t1247;
  double t1252;
  double t1254;
  double t1259;
  double t1261;
  double t1268;
  double t1269;
  double t1270;
  double t1272;
  double t1273;
  double t1274;
  double t1275;
  double t1277;
  double t1279;
  double t1284;
  double t1290;
  double t1292;
  double t1293;
  double t1297;
  double t1301;
  double t1360;
  double t1363;
  double t1366;
  double t1374;
  double t1375;
  double t1377;
  double t1379;
  double t1380;
  double t1384;
  double t1385;
  double t1394;
  double t1395;
  double t1396;
  double t1403;
  double t1405;
  double t1409;
  double t1410;
  double t1418;
  double t1464;
  double t1465;
  double t1466;
  double t1473;
  double t1474;
  double t1475;
  double t1478;
  double t1479;
  double t1480;
  double t1487;
  double t1493;
  double t1497;
  double t1504;
  double t1507;
  double t1509;
  double t1515;
  double t1517;
  double t1518;
  double t1526;
  double t1528;
  double t1531;
  double t876;
  double t882;
  double t888;
  double t1574;
  double t1576;
  double t1578;
  double t1585;
  double t1586;
  double t1588;
  double t1591;
  double t1595;
  double t1596;
  double t1599;
  double t1602;
  double t1603;
  double t1604;
  double t1606;
  double t1607;
  double t1613;
  double t897;
  double t903;
  double t924;
  double t925;
  double t927;
  double t934;
  double t938;
  double t939;
  double t1661;
  double t1665;
  double t1670;
  double t1673;
  double t1675;
  double t1680;
  double t1684;
  double t1685;
  double t1686;
  double t1689;
  double t1696;
  double t1699;
  double t1702;
  double t1703;
  double t1084;
  double t1101;
  double t1103;
  double t1125;
  double t1126;
  double t1139;
  double t1142;
  double t1147;
  double t1760;
  double t1761;
  double t1763;
  double t1766;
  double t1771;
  double t1774;
  double t1775;
  double t1788;
  double t1789;
  double t1790;
  double t1797;
  double t1800;
  double t1895;
  double t1898;
  double t1899;
  double t1902;
  double t1905;
  double t1906;
  double t1912;
  double t1915;
  double t1918;
  double t1919;
  double t1921;
  double t1926;
  double t1927;
  double t1928;
  double t1934;
  double t1935;
  double t1938;
  double t1942;
  double t1978;
  double t1979;
  double t1981;
  double t1983;
  double t1985;
  double t1990;
  double t1992;
  double t1994;
  double t2001;
  double t2002;
  double t2003;
  double t2005;
  double t2008;
  double t2013;
  double t2019;
  double t2024;
  double t2031;
  double t2059;
  double t2060;
  double t2061;
  double t2069;
  double t2071;
  double t2074;
  double t2075;
  double t2077;
  double t2078;
  double t2079;
  double t2082;
  double t2083;
  double t2084;
  double t2086;
  double t2089;
  double t2090;
  double t2135;
  double t2137;
  double t2138;
  double t2141;
  double t2142;
  double t2148;
  double t2151;
  double t2152;
  double t2155;
  double t2160;
  double t2163;
  double t2164;
  double t2166;
  double t2202;
  double t2203;
  double t2205;
  double t2207;
  double t2210;
  double t2212;
  double t2214;
  double t2222;
  double t2224;
  double t2227;
  double t2230;
  double t2259;
  double t2260;
  double t2261;
  double t2264;
  double t2282;
  double t2284;
  double t2285;
  double t2286;
  double t2287;
  double t2268;
  double t2271;
  double t2303;
  double t2263;
  double t2347;
  double t2348;
  double t2351;
  double t2354;
  double t2328;
  double t2316;
  double t2319;
  double t2320;
  double t2337;
  double t2338;
  double t2339;
  double t2363;
  double t2273;
  double t2371;
  double t2265;
  double t2353;
  double t2412;
  double t2414;
  double t2435;
  double t2309;
  double t2377;
  double t2304;
  double t2452;
  double t2372;
  double t2373;
  double t2378;
  double t2379;
  double t2380;
  double t2384;
  double t2385;
  double t2387;
  double t2456;
  double t2431;
  double t2433;
  double t2434;
  double t2436;
  double t2437;
  double t2439;
  double t2441;
  double t2442;
  double t2462;
  double t2463;
  double t2465;
  double t2467;
  double t2469;
  double t2471;
  double t2472;
  double t2475;
  double t2400;
  double t2482;
  double t2418;
  double t2497;
  double t2477;
  double t2356;
  double t2293;
  double t2294;
  double t2289;
  double t2291;
  double t2324;
  double t2325;
  double t2329;
  double t2332;
  double t2333;
  double t2334;
  double t2335;
  double t2297;
  double t2301;
  double t2305;
  double t2306;
  double t2310;
  double t2312;
  double t2313;
  double t2448;
  double t2450;
  double t2453;
  double t2454;
  double t2458;
  double t2459;
  double t2460;
  double t2539;
  double t2540;
  double t2542;
  double t2544;
  double t2546;
  double t2547;
  double t2392;
  double t2398;
  double t2401;
  double t2408;
  double t2419;
  double t2426;
  double t2429;
  double t2345;
  double t2352;
  double t2361;
  double t2362;
  double t2365;
  double t2367;
  double t2369;
  double t2522;
  double t2549;
  double t2550;
  double t2552;
  double t2519;
  double t2554;
  double t2555;
  double t2556;
  double t2512;
  double t2513;
  double t2558;
  double t2559;
  double t2561;
  double t2507;
  double t2502;
  double t2503;
  double t2498;
  double t2485;
  double t2486;
  double t2483;
  double t2478;
  double t2543;
  double t2548;
  double t2553;
  double t2557;
  double t2562;
  double t2563;
  double t2567;
  double t2569;
  double t2571;
  double t2572;
  double t2574;
  double t2576;
  double t2577;
  double t2583;
  double t2584;
  double t2586;
  double t2589;
  double t2591;
  double t2593;
  double t2594;
  double t2610;
  double t2619;
  double t2625;
  double t2650;
  double t2651;
  double t2652;
  double t2606;
  double t2671;
  double t2637;
  double t2655;
  double t2656;
  double t2659;
  double t2660;
  double t2663;
  double t2665;
  double t2668;
  double t2669;
  double t2670;
  double t2673;
  double t2674;
  double t2675;
  double t2680;
  double t2681;
  double t2682;
  double t2683;
  double t2685;
  double t2687;
  double t2721;
  double t2736;
  double t2737;
  double t2738;
  double t2740;
  double t2752;
  double t2753;
  double t2755;
  double t2756;
  double t2727;
  double t2769;
  double t2770;
  double t2771;
  double t2772;
  double t2776;
  double t2742;
  double t2762;
  double t2758;
  double t2257;
  double t2262;
  double t2266;
  double t2267;
  double t2275;
  double t2278;
  double t2279;
  double t2811;
  double t2812;
  double t2816;
  double t2820;
  double t2821;
  double t2822;
  double t2824;
  double t2827;
  double t2830;
  double t2833;
  double t2837;
  double t2841;
  double t2842;
  double t2843;
  double t2846;
  double t2849;
  double t2850;
  double t2852;
  double t2897;
  double t2900;
  double t2907;
  double t2911;
  double t2912;
  double t2917;
  double t2921;
  double t2926;
  double t2927;
  double t2929;
  double t2931;
  double t2935;
  double t2936;
  double t2937;
  double t2941;
  double t2942;
  double t2943;
  double t2946;
  double t2994;
  double t2995;
  double t2996;
  double t3001;
  double t3003;
  double t3009;
  double t3016;
  double t3017;
  double t3019;
  double t3026;
  double t3029;
  double t3032;
  double t3036;
  double t3037;
  double t3038;
  double t2597;
  double t2598;
  double t2600;
  double t2602;
  double t3072;
  double t3073;
  double t3075;
  double t3076;
  double t3079;
  double t3080;
  double t3081;
  double t3083;
  double t3084;
  double t3086;
  double t3089;
  double t3090;
  double t3091;
  double t2607;
  double t2609;
  double t2611;
  double t2612;
  double t2615;
  double t2616;
  double t2622;
  double t2623;
  double t2628;
  double t2629;
  double t2631;
  double t2632;
  double t2635;
  double t2636;
  double t2638;
  double t2639;
  double t2640;
  double t2643;
  double t3121;
  double t3122;
  double t3124;
  double t3126;
  double t3127;
  double t3128;
  double t3129;
  double t3131;
  double t3135;
  double t3138;
  double t3139;
  double t3141;
  double t3142;
  double t3144;
  double t3146;
  double t2722;
  double t2723;
  double t2731;
  double t2733;
  double t2734;
  double t2735;
  double t2743;
  double t2745;
  double t2746;
  double t2748;
  double t2749;
  double t2750;
  double t2759;
  double t2761;
  double t2763;
  double t2764;
  double t2765;
  double t2768;
  double t3180;
  double t3182;
  double t3183;
  double t3188;
  double t2777;
  double t3192;
  double t3195;
  double t3196;
  double t3199;
  double t2780;
  double t3204;
  double t3206;
  double t3208;
  double t3210;
  double t2786;
  double t2789;
  double t2794;
  double t2797;
  double t3332;
  double t3333;
  double t3334;
  double t3345;
  double t3347;
  double t3350;
  double t3354;
  double t3356;
  double t3361;
  double t3362;
  double t3367;
  double t3370;
  double t3371;
  double t3375;
  double t3382;
  double t3383;
  double t3385;
  double t3387;
  double t3433;
  double t3435;
  double t3436;
  double t3442;
  double t3445;
  double t3450;
  double t3451;
  double t3452;
  double t3459;
  double t3462;
  double t3465;
  double t3469;
  double t3470;
  double t3472;
  double t3518;
  double t3519;
  double t3522;
  double t3526;
  double t3533;
  double t3534;
  double t3536;
  double t3539;
  double t3540;
  double t3545;
  double t3550;
  double t3551;
  double t3555;
  double t3603;
  double t3605;
  double t3611;
  double t3619;
  double t3622;
  double t3626;
  double t3629;
  double t3635;
  double t3638;
  double t3639;
  double t3640;
  double t3642;
  double t3644;
  double t3645;
  double t3647;
  double t3681;
  double t3682;
  double t3685;
  double t3691;
  double t3694;
  double t3695;
  double t3698;
  double t3701;
  double t3705;
  double t3706;
  double t3707;
  double t3708;
  t99 = Cos(var1[10]);
  t284 = Cos(var1[9]);
  t285 = -1.*t284;
  t290 = 1. + t285;
  t331 = Sin(var1[9]);
  t346 = -0.15121*t331;
  t356 = Sin(var1[4]);
  t104 = -1.*t99;
  t142 = 1. + t104;
  t173 = -1. + t99;
  t200 = Sin(var1[10]);
  t268 = Cos(var1[5]);
  t367 = Sin(var1[5]);
  t38 = Cos(var1[4]);
  t390 = t268*t331*t356;
  t392 = t284*t356*t367;
  t393 = t390 + t392;
  t410 = -1.*t284*t268*t356;
  t413 = t331*t356*t367;
  t416 = t410 + t413;
  t424 = Cos(var1[11]);
  t428 = -1.*t424;
  t429 = 1. + t428;
  t437 = Sin(var1[11]);
  t507 = -1. + t424;
  t475 = t38*t200;
  t484 = -4.e-6*t200*t393;
  t487 = -1.000000000016*t142;
  t489 = 1. + t487;
  t499 = t489*t416;
  t501 = t475 + t484 + t499;
  t514 = t99*t38;
  t520 = 4.e-6*t142*t393;
  t522 = -1.*t200*t416;
  t524 = t514 + t520 + t522;
  t544 = 4.e-6*t142*t38;
  t550 = 1.6e-11*t173;
  t553 = 1. + t550;
  t558 = t553*t393;
  t559 = 4.e-6*t200*t416;
  t560 = t544 + t558 + t559;
  t362 = -0.15121*t290;
  t366 = t362 + t346;
  t299 = 0.15121*t290;
  t351 = t299 + t346;
  t403 = 0.281210000008499*t142;
  t407 = -0.03874900000062*t200;
  t408 = t403 + t407;
  t369 = -1.2484e-7*var1[10];
  t372 = 2.479936e-18*t142;
  t374 = -1.54996e-7*t173;
  t375 = 1.124840000016e-6*t200;
  t388 = t369 + t372 + t374 + t375;
  t529 = -1.26e-8*var1[11];
  t532 = 2.552896e-18*t429;
  t539 = -1.59556e-7*t507;
  t542 = 2.012600000032e-6*t437;
  t543 = t529 + t532 + t539 + t542;
  t669 = -1.*t38*t268*t331;
  t691 = -1.*t284*t38*t367;
  t694 = t669 + t691;
  t714 = -1.*t284*t38*t268;
  t715 = t38*t331*t367;
  t728 = t714 + t715;
  t503 = -5.04e-14*var1[11];
  t504 = -0.039889*t429;
  t508 = 6.38224e-13*t507;
  t509 = -0.503150000008*t437;
  t511 = t503 + t504 + t508 + t509;
  t430 = 0.50315000001605*t429;
  t450 = -0.0398890000006382*t437;
  t462 = t430 + t450;
  t734 = 4.e-6*t200*t694;
  t745 = t553*t728;
  t747 = t734 + t745;
  t756 = -1.*t200*t694;
  t759 = 4.e-6*t142*t728;
  t764 = t756 + t759;
  t624 = -1.000000000016*t429;
  t625 = 1. + t624;
  t781 = t489*t694;
  t783 = -4.e-6*t200*t728;
  t786 = t781 + t783;
  t583 = 1.6e-11*t507;
  t588 = 1. + t583;
  t873 = -0.15121*t284;
  t707 = t408*t694;
  t729 = t388*t728;
  t748 = t543*t747;
  t765 = t511*t764;
  t790 = t462*t786;
  t791 = -4.e-6*t437*t747;
  t793 = t437*t764;
  t796 = t625*t786;
  t806 = t791 + t793 + t796;
  t813 = 0.803147*t806;
  t815 = 4.e-6*t429*t747;
  t819 = t424*t764;
  t825 = -1.*t437*t786;
  t827 = t815 + t819 + t825;
  t836 = -0.041195*t827;
  t837 = t588*t747;
  t843 = 4.e-6*t429*t764;
  t850 = 4.e-6*t437*t786;
  t851 = t837 + t843 + t850;
  t852 = -0.14871*t851;
  t944 = t284*t38*t268;
  t946 = -1.*t38*t331*t367;
  t950 = t944 + t946;
  t970 = -1.*t200*t356;
  t977 = -1.*t99*t950;
  t978 = t970 + t734 + t977;
  t984 = 4.e-6*t200*t356;
  t989 = -1.6e-11*t200*t694;
  t992 = 4.e-6*t99*t950;
  t1005 = t984 + t989 + t992;
  t1008 = t99*t356;
  t1013 = -4.e-6*t99*t694;
  t1019 = -1.000000000016*t200*t950;
  t1026 = t1008 + t1013 + t1019;
  t1107 = t200*t356;
  t1112 = -4.e-6*t200*t694;
  t1118 = t489*t950;
  t1122 = t1107 + t1112 + t1118;
  t1127 = 4.e-6*t142*t694;
  t1131 = -1.*t200*t950;
  t1132 = t1008 + t1127 + t1131;
  t1149 = 4.e-6*t142*t356;
  t1154 = t553*t694;
  t1160 = 4.e-6*t200*t950;
  t1161 = t1149 + t1154 + t1160;
  t43 = -4.9936e-13*var1[10];
  t159 = -0.038749*t142;
  t179 = 6.19984e-13*t173;
  t230 = -0.281210000004*t200;
  t231 = t43 + t159 + t179 + t230;
  t1224 = Cos(var1[3]);
  t1235 = Sin(var1[3]);
  t1234 = t1224*t268*t356;
  t1238 = -1.*t1235*t367;
  t1240 = t1234 + t1238;
  t1244 = -1.*t268*t1235;
  t1247 = -1.*t1224*t356*t367;
  t1252 = t1244 + t1247;
  t1254 = -1.*t331*t1240;
  t1259 = t284*t1252;
  t1261 = t1254 + t1259;
  t1268 = t284*t1240;
  t1269 = t331*t1252;
  t1270 = t1268 + t1269;
  t1272 = -1.*t1224*t38*t200;
  t1273 = -4.e-6*t200*t1261;
  t1274 = t489*t1270;
  t1275 = t1272 + t1273 + t1274;
  t1277 = -1.*t99*t1224*t38;
  t1279 = 4.e-6*t142*t1261;
  t1284 = -1.*t200*t1270;
  t1290 = t1277 + t1279 + t1284;
  t1292 = -4.e-6*t142*t1224*t38;
  t1293 = t553*t1261;
  t1297 = 4.e-6*t200*t1270;
  t1301 = t1292 + t1293 + t1297;
  t1360 = -1.*t38*t268*t331*t1235;
  t1363 = -1.*t284*t38*t1235*t367;
  t1366 = t1360 + t1363;
  t1374 = t284*t38*t268*t1235;
  t1375 = -1.*t38*t331*t1235*t367;
  t1377 = t1374 + t1375;
  t1379 = t200*t1235*t356;
  t1380 = -4.e-6*t200*t1366;
  t1384 = t489*t1377;
  t1385 = t1379 + t1380 + t1384;
  t1394 = t99*t1235*t356;
  t1395 = 4.e-6*t142*t1366;
  t1396 = -1.*t200*t1377;
  t1403 = t1394 + t1395 + t1396;
  t1405 = 4.e-6*t142*t1235*t356;
  t1409 = t553*t1366;
  t1410 = 4.e-6*t200*t1377;
  t1418 = t1405 + t1409 + t1410;
  t1464 = -1.*t268*t1235*t356;
  t1465 = -1.*t1224*t367;
  t1466 = t1464 + t1465;
  t1473 = t1224*t268;
  t1474 = -1.*t1235*t356*t367;
  t1475 = t1473 + t1474;
  t1478 = t331*t1466;
  t1479 = t284*t1475;
  t1480 = t1478 + t1479;
  t1487 = t284*t1466;
  t1493 = -1.*t331*t1475;
  t1497 = t1487 + t1493;
  t1504 = 4.e-6*t200*t1480;
  t1507 = t553*t1497;
  t1509 = t1504 + t1507;
  t1515 = -1.*t200*t1480;
  t1517 = 4.e-6*t142*t1497;
  t1518 = t1515 + t1517;
  t1526 = t489*t1480;
  t1528 = -4.e-6*t200*t1497;
  t1531 = t1526 + t1528;
  t876 = 0.15121*t331;
  t882 = t873 + t876;
  t888 = t873 + t346;
  t1574 = t268*t1235*t356;
  t1576 = t1224*t367;
  t1578 = t1574 + t1576;
  t1585 = -1.*t331*t1578;
  t1586 = t1585 + t1479;
  t1588 = -1.*t284*t1578;
  t1591 = t1588 + t1493;
  t1595 = 4.e-6*t200*t1586;
  t1596 = t553*t1591;
  t1599 = t1595 + t1596;
  t1602 = -1.*t200*t1586;
  t1603 = 4.e-6*t142*t1591;
  t1604 = t1602 + t1603;
  t1606 = t489*t1586;
  t1607 = -4.e-6*t200*t1591;
  t1613 = t1606 + t1607;
  t897 = -0.281210000004*t99;
  t903 = -4.9936e-13 + t897 + t407;
  t924 = 1.124840000016e-6*t99;
  t925 = 1.5499600000248e-7*t200;
  t927 = -1.2484e-7 + t924 + t925;
  t934 = -0.03874900000062*t99;
  t938 = 0.281210000008499*t200;
  t939 = t934 + t938;
  t1661 = t284*t1578;
  t1665 = t331*t1475;
  t1670 = t1661 + t1665;
  t1673 = t38*t200*t1235;
  t1675 = -1.*t99*t1670;
  t1680 = t1673 + t1595 + t1675;
  t1684 = -4.e-6*t38*t200*t1235;
  t1685 = -1.6e-11*t200*t1586;
  t1686 = 4.e-6*t99*t1670;
  t1689 = t1684 + t1685 + t1686;
  t1696 = -1.*t99*t38*t1235;
  t1699 = -4.e-6*t99*t1586;
  t1702 = -1.000000000016*t200*t1670;
  t1703 = t1696 + t1699 + t1702;
  t1084 = -0.0398890000006382*t424;
  t1101 = 0.50315000001605*t437;
  t1103 = t1084 + t1101;
  t1125 = -0.503150000008*t424;
  t1126 = -5.04e-14 + t1125 + t450;
  t1139 = 2.012600000032e-6*t424;
  t1142 = 1.59556000002553e-7*t437;
  t1147 = -1.26e-8 + t1139 + t1142;
  t1760 = -1.*t38*t200*t1235;
  t1761 = -4.e-6*t200*t1586;
  t1763 = t489*t1670;
  t1766 = t1760 + t1761 + t1763;
  t1771 = 4.e-6*t142*t1586;
  t1774 = -1.*t200*t1670;
  t1775 = t1696 + t1771 + t1774;
  t1788 = -4.e-6*t142*t38*t1235;
  t1789 = t553*t1586;
  t1790 = 4.e-6*t200*t1670;
  t1797 = t1788 + t1789 + t1790;
  t1800 = t424*t1775;
  t1895 = t1224*t38*t268*t331;
  t1898 = t284*t1224*t38*t367;
  t1899 = t1895 + t1898;
  t1902 = -1.*t284*t1224*t38*t268;
  t1905 = t1224*t38*t331*t367;
  t1906 = t1902 + t1905;
  t1912 = -1.*t1224*t200*t356;
  t1915 = -4.e-6*t200*t1899;
  t1918 = t489*t1906;
  t1919 = t1912 + t1915 + t1918;
  t1921 = -1.*t99*t1224*t356;
  t1926 = 4.e-6*t142*t1899;
  t1927 = -1.*t200*t1906;
  t1928 = t1921 + t1926 + t1927;
  t1934 = -4.e-6*t142*t1224*t356;
  t1935 = t553*t1899;
  t1938 = 4.e-6*t200*t1906;
  t1942 = t1934 + t1935 + t1938;
  t1978 = t268*t1235;
  t1979 = t1224*t356*t367;
  t1981 = t1978 + t1979;
  t1983 = t331*t1240;
  t1985 = t284*t1981;
  t1990 = t1983 + t1985;
  t1992 = -1.*t331*t1981;
  t1994 = t1268 + t1992;
  t2001 = 4.e-6*t200*t1990;
  t2002 = t553*t1994;
  t2003 = t2001 + t2002;
  t2005 = -1.*t200*t1990;
  t2008 = 4.e-6*t142*t1994;
  t2013 = t2005 + t2008;
  t2019 = t489*t1990;
  t2024 = -4.e-6*t200*t1994;
  t2031 = t2019 + t2024;
  t2059 = -1.*t1224*t268*t356;
  t2060 = t1235*t367;
  t2061 = t2059 + t2060;
  t2069 = -1.*t331*t2061;
  t2071 = t2069 + t1985;
  t2074 = -1.*t284*t2061;
  t2075 = t2074 + t1992;
  t2077 = 4.e-6*t200*t2071;
  t2078 = t553*t2075;
  t2079 = t2077 + t2078;
  t2082 = -1.*t200*t2071;
  t2083 = 4.e-6*t142*t2075;
  t2084 = t2082 + t2083;
  t2086 = t489*t2071;
  t2089 = -4.e-6*t200*t2075;
  t2090 = t2086 + t2089;
  t2135 = t284*t2061;
  t2137 = t331*t1981;
  t2138 = t2135 + t2137;
  t2141 = -1.*t99*t2138;
  t2142 = t1272 + t2077 + t2141;
  t2148 = 4.e-6*t1224*t38*t200;
  t2151 = -1.6e-11*t200*t2071;
  t2152 = 4.e-6*t99*t2138;
  t2155 = t2148 + t2151 + t2152;
  t2160 = t99*t1224*t38;
  t2163 = -4.e-6*t99*t2071;
  t2164 = -1.000000000016*t200*t2138;
  t2166 = t2160 + t2163 + t2164;
  t2202 = t1224*t38*t200;
  t2203 = -4.e-6*t200*t2071;
  t2205 = t489*t2138;
  t2207 = t2202 + t2203 + t2205;
  t2210 = 4.e-6*t142*t2071;
  t2212 = -1.*t200*t2138;
  t2214 = t2160 + t2210 + t2212;
  t2222 = 4.e-6*t142*t1224*t38;
  t2224 = t553*t2071;
  t2227 = 4.e-6*t200*t2138;
  t2230 = t2222 + t2224 + t2227;
  t2259 = Cos(var1[16]);
  t2260 = -1.*t2259;
  t2261 = 1. + t2260;
  t2264 = Sin(var1[16]);
  t2282 = Cos(var1[15]);
  t2284 = -1.*t2282;
  t2285 = 1. + t2284;
  t2286 = -0.15121*t2285;
  t2287 = Sin(var1[15]);
  t2268 = -1. + t2259;
  t2271 = 4.e-6*t2268;
  t2303 = 7.e-6*t2261;
  t2263 = 2.8e-11*t2261;
  t2347 = Cos(var1[17]);
  t2348 = -1.*t2347;
  t2351 = 1. + t2348;
  t2354 = Sin(var1[17]);
  t2328 = -4.e-6*t2264;
  t2316 = t268*t2287*t356;
  t2319 = t2282*t356*t367;
  t2320 = t2316 + t2319;
  t2337 = -1.*t2282*t268*t356;
  t2338 = t2287*t356*t367;
  t2339 = t2337 + t2338;
  t2363 = 2.8e-11*t2351;
  t2273 = -7.e-6*t2264;
  t2371 = -2.8e-11*t2261;
  t2265 = -1.*t2264;
  t2353 = 7.e-6*t2351;
  t2412 = -1. + t2347;
  t2414 = 4.e-6*t2412;
  t2435 = 4.e-6*t2261;
  t2309 = 7.e-6*t2264;
  t2377 = -7.e-6*t2261;
  t2304 = 4.e-6*t2264;
  t2452 = 4.e-6*t2354;
  t2372 = t2371 + t2264;
  t2373 = t38*t2372;
  t2378 = t2377 + t2328;
  t2379 = t2378*t2320;
  t2380 = -1.000000000016*t2261;
  t2384 = 1. + t2380;
  t2385 = t2384*t2339;
  t2387 = t2373 + t2379 + t2385;
  t2456 = 7.e-6*t2354;
  t2431 = -1.000000000049*t2261;
  t2433 = 1. + t2431;
  t2434 = t2433*t38;
  t2436 = t2435 + t2273;
  t2437 = t2436*t2320;
  t2439 = t2371 + t2265;
  t2441 = t2439*t2339;
  t2442 = t2434 + t2437 + t2441;
  t2462 = t2435 + t2309;
  t2463 = t38*t2462;
  t2465 = -6.5e-11*t2261;
  t2467 = 1. + t2465;
  t2469 = t2467*t2320;
  t2471 = t2377 + t2304;
  t2472 = t2471*t2339;
  t2475 = t2463 + t2469 + t2472;
  t2400 = -1.*t2354;
  t2482 = 4.e-6*t2351;
  t2418 = -7.e-6*t2354;
  t2497 = -2.8e-11*t2351;
  t2477 = -7.e-6*t2351;
  t2356 = -4.e-6*t2354;
  t2293 = 0.15121*t2287;
  t2294 = t2286 + t2293;
  t2289 = -0.15121*t2287;
  t2291 = t2286 + t2289;
  t2324 = -2.7726089999999997e-12*var1[16];
  t2325 = -0.2812110000084994*t2261;
  t2329 = t2303 + t2328;
  t2332 = -1.8134809999999998e-6*t2329;
  t2333 = t2263 + t2264;
  t2334 = -0.038749000006999997*t2333;
  t2335 = t2324 + t2325 + t2332 + t2334;
  t2297 = 3.9608699999999997e-7*var1[16];
  t2301 = -1.1787626499999999e-16*t2261;
  t2305 = t2303 + t2304;
  t2306 = -0.281211000004*t2305;
  t2310 = t2271 + t2309;
  t2312 = -0.038749000006999997*t2310;
  t2313 = t2297 + t2301 + t2306 + t2312;
  t2448 = 2.826290000000002e-7*var1[17];
  t2450 = -2.18904205e-16*t2351;
  t2453 = t2353 + t2452;
  t2454 = -0.5031510000080001*t2453;
  t2458 = t2414 + t2456;
  t2459 = -0.038575000014*t2458;
  t2460 = t2448 + t2450 + t2454 + t2459;
  t2539 = -1.*t38*t268*t2287;
  t2540 = -1.*t2282*t38*t367;
  t2542 = t2539 + t2540;
  t2544 = -1.*t2282*t38*t268;
  t2546 = t38*t2287*t367;
  t2547 = t2544 + t2546;
  t2392 = 1.1305160000000008e-12*var1[17];
  t2398 = -0.03857500001589017*t2351;
  t2401 = t2363 + t2400;
  t2408 = -0.5031510000080001*t2401;
  t2419 = t2414 + t2418;
  t2426 = -3.367757e-6*t2419;
  t2429 = t2392 + t2398 + t2408 + t2426;
  t2345 = -1.9784030000000015e-12*var1[17];
  t2352 = -0.5031510000160505*t2351;
  t2361 = t2353 + t2356;
  t2362 = -3.367757e-6*t2361;
  t2365 = t2363 + t2354;
  t2367 = -0.038575000014*t2365;
  t2369 = t2345 + t2352 + t2362 + t2367;
  t2522 = t2477 + t2356;
  t2549 = t2471*t2542;
  t2550 = t2467*t2547;
  t2552 = t2549 + t2550;
  t2519 = t2497 + t2354;
  t2554 = t2439*t2542;
  t2555 = t2436*t2547;
  t2556 = t2554 + t2555;
  t2512 = -1.000000000016*t2351;
  t2513 = 1. + t2512;
  t2558 = t2384*t2542;
  t2559 = t2378*t2547;
  t2561 = t2558 + t2559;
  t2507 = t2482 + t2418;
  t2502 = -1.000000000049*t2351;
  t2503 = 1. + t2502;
  t2498 = t2497 + t2400;
  t2485 = -6.5e-11*t2351;
  t2486 = 1. + t2485;
  t2483 = t2482 + t2456;
  t2478 = t2477 + t2452;
  t2543 = t2335*t2542;
  t2548 = t2313*t2547;
  t2553 = t2460*t2552;
  t2557 = t2429*t2556;
  t2562 = t2369*t2561;
  t2563 = t2522*t2552;
  t2567 = t2519*t2556;
  t2569 = t2513*t2561;
  t2571 = t2563 + t2567 + t2569;
  t2572 = -0.80315*t2571;
  t2574 = t2507*t2552;
  t2576 = t2503*t2556;
  t2577 = t2498*t2561;
  t2583 = t2574 + t2576 + t2577;
  t2584 = -0.038576*t2583;
  t2586 = t2486*t2552;
  t2589 = t2483*t2556;
  t2591 = t2478*t2561;
  t2593 = t2586 + t2589 + t2591;
  t2594 = -0.148715*t2593;
  t2610 = 2.8e-11*t2264;
  t2619 = 7.e-6*t2259;
  t2625 = 4.e-6*t2259;
  t2650 = t2282*t38*t268;
  t2651 = -1.*t38*t2287*t367;
  t2652 = t2650 + t2651;
  t2606 = -7.e-6*t2259;
  t2671 = -2.8e-11*t2264;
  t2637 = -4.e-6*t2259;
  t2655 = t2619 + t2304;
  t2656 = t2655*t356;
  t2659 = -6.5e-11*t2264*t2542;
  t2660 = t2625 + t2273;
  t2663 = t2660*t2652;
  t2665 = t2656 + t2659 + t2663;
  t2668 = -1.000000000049*t2264*t356;
  t2669 = t2606 + t2304;
  t2670 = t2669*t2542;
  t2673 = t2260 + t2671;
  t2674 = t2673*t2652;
  t2675 = t2668 + t2670 + t2674;
  t2680 = t2259 + t2671;
  t2681 = t2680*t356;
  t2682 = t2637 + t2273;
  t2683 = t2682*t2542;
  t2685 = -1.000000000016*t2264*t2652;
  t2687 = t2681 + t2683 + t2685;
  t2721 = 2.8e-11*t2354;
  t2736 = t2372*t356;
  t2737 = t2378*t2542;
  t2738 = t2384*t2652;
  t2740 = t2736 + t2737 + t2738;
  t2752 = t2433*t356;
  t2753 = t2436*t2542;
  t2755 = t2439*t2652;
  t2756 = t2752 + t2753 + t2755;
  t2727 = -4.e-6*t2347;
  t2769 = t2462*t356;
  t2770 = t2467*t2542;
  t2771 = t2471*t2652;
  t2772 = t2769 + t2770 + t2771;
  t2776 = -2.8e-11*t2354;
  t2742 = -7.e-6*t2347;
  t2762 = 4.e-6*t2347;
  t2758 = 7.e-6*t2347;
  t2257 = 1.5843479999999999e-12*var1[16];
  t2262 = -0.03874900000889869*t2261;
  t2266 = t2263 + t2265;
  t2267 = -0.281211000004*t2266;
  t2275 = t2271 + t2273;
  t2278 = -1.8134809999999998e-6*t2275;
  t2279 = t2257 + t2262 + t2267 + t2278;
  t2811 = -1.*t2287*t1240;
  t2812 = t2282*t1252;
  t2816 = t2811 + t2812;
  t2820 = t2282*t1240;
  t2821 = t2287*t1252;
  t2822 = t2820 + t2821;
  t2824 = -1.*t1224*t38*t2372;
  t2827 = t2378*t2816;
  t2830 = t2384*t2822;
  t2833 = t2824 + t2827 + t2830;
  t2837 = -1.*t2433*t1224*t38;
  t2841 = t2436*t2816;
  t2842 = t2439*t2822;
  t2843 = t2837 + t2841 + t2842;
  t2846 = -1.*t1224*t38*t2462;
  t2849 = t2467*t2816;
  t2850 = t2471*t2822;
  t2852 = t2846 + t2849 + t2850;
  t2897 = -1.*t38*t268*t2287*t1235;
  t2900 = -1.*t2282*t38*t1235*t367;
  t2907 = t2897 + t2900;
  t2911 = t2282*t38*t268*t1235;
  t2912 = -1.*t38*t2287*t1235*t367;
  t2917 = t2911 + t2912;
  t2921 = t2372*t1235*t356;
  t2926 = t2378*t2907;
  t2927 = t2384*t2917;
  t2929 = t2921 + t2926 + t2927;
  t2931 = t2433*t1235*t356;
  t2935 = t2436*t2907;
  t2936 = t2439*t2917;
  t2937 = t2931 + t2935 + t2936;
  t2941 = t2462*t1235*t356;
  t2942 = t2467*t2907;
  t2943 = t2471*t2917;
  t2946 = t2941 + t2942 + t2943;
  t2994 = t2287*t1466;
  t2995 = t2282*t1475;
  t2996 = t2994 + t2995;
  t3001 = t2282*t1466;
  t3003 = -1.*t2287*t1475;
  t3009 = t3001 + t3003;
  t3016 = t2471*t2996;
  t3017 = t2467*t3009;
  t3019 = t3016 + t3017;
  t3026 = t2439*t2996;
  t3029 = t2436*t3009;
  t3032 = t3026 + t3029;
  t3036 = t2384*t2996;
  t3037 = t2378*t3009;
  t3038 = t3036 + t3037;
  t2597 = -0.15121*t2282;
  t2598 = t2597 + t2289;
  t2600 = 0.15121*t2282;
  t2602 = t2600 + t2289;
  t3072 = -1.*t2287*t1578;
  t3073 = t3072 + t2995;
  t3075 = -1.*t2282*t1578;
  t3076 = t3075 + t3003;
  t3079 = t2471*t3073;
  t3080 = t2467*t3076;
  t3081 = t3079 + t3080;
  t3083 = t2439*t3073;
  t3084 = t2436*t3076;
  t3086 = t3083 + t3084;
  t3089 = t2384*t3073;
  t3090 = t2378*t3076;
  t3091 = t3089 + t3090;
  t2607 = t2606 + t2328;
  t2609 = -1.8134809999999998e-6*t2607;
  t2611 = t2260 + t2610;
  t2612 = -0.281211000004*t2611;
  t2615 = -0.03874900000889869*t2264;
  t2616 = 1.5843479999999999e-12 + t2609 + t2612 + t2615;
  t2622 = t2619 + t2328;
  t2623 = -0.038749000006999997*t2622;
  t2628 = t2625 + t2309;
  t2629 = -0.281211000004*t2628;
  t2631 = -1.1787626499999999e-16*t2264;
  t2632 = 3.9608699999999997e-7 + t2623 + t2629 + t2631;
  t2635 = t2259 + t2610;
  t2636 = -0.038749000006999997*t2635;
  t2638 = t2637 + t2309;
  t2639 = -1.8134809999999998e-6*t2638;
  t2640 = -0.2812110000084994*t2264;
  t2643 = -2.7726089999999997e-12 + t2636 + t2639 + t2640;
  t3121 = t2282*t1578;
  t3122 = t2287*t1475;
  t3124 = t3121 + t3122;
  t3126 = -1.*t38*t2655*t1235;
  t3127 = -6.5e-11*t2264*t3073;
  t3128 = t2660*t3124;
  t3129 = t3126 + t3127 + t3128;
  t3131 = 1.000000000049*t38*t2264*t1235;
  t3135 = t2669*t3073;
  t3138 = t2673*t3124;
  t3139 = t3131 + t3135 + t3138;
  t3141 = -1.*t38*t2680*t1235;
  t3142 = t2682*t3073;
  t3144 = -1.000000000016*t2264*t3124;
  t3146 = t3141 + t3142 + t3144;
  t2722 = t2347 + t2721;
  t2723 = -0.038575000014*t2722;
  t2731 = t2727 + t2456;
  t2733 = -3.367757e-6*t2731;
  t2734 = -0.5031510000160505*t2354;
  t2735 = -1.9784030000000015e-12 + t2723 + t2733 + t2734;
  t2743 = t2742 + t2356;
  t2745 = -3.367757e-6*t2743;
  t2746 = t2348 + t2721;
  t2748 = -0.5031510000080001*t2746;
  t2749 = -0.03857500001589017*t2354;
  t2750 = 1.1305160000000008e-12 + t2745 + t2748 + t2749;
  t2759 = t2758 + t2356;
  t2761 = -0.038575000014*t2759;
  t2763 = t2762 + t2456;
  t2764 = -0.5031510000080001*t2763;
  t2765 = -2.18904205e-16*t2354;
  t2768 = 2.826290000000002e-7 + t2761 + t2764 + t2765;
  t3180 = -1.*t38*t2372*t1235;
  t3182 = t2378*t3073;
  t3183 = t2384*t3124;
  t3188 = t3180 + t3182 + t3183;
  t2777 = t2347 + t2776;
  t3192 = -1.*t2433*t38*t1235;
  t3195 = t2436*t3073;
  t3196 = t2439*t3124;
  t3199 = t3192 + t3195 + t3196;
  t2780 = t2727 + t2418;
  t3204 = -1.*t38*t2462*t1235;
  t3206 = t2467*t3073;
  t3208 = t2471*t3124;
  t3210 = t3204 + t3206 + t3208;
  t2786 = t2348 + t2776;
  t2789 = t2742 + t2452;
  t2794 = t2762 + t2418;
  t2797 = t2758 + t2452;
  t3332 = t1224*t38*t268*t2287;
  t3333 = t2282*t1224*t38*t367;
  t3334 = t3332 + t3333;
  t3345 = -1.*t2282*t1224*t38*t268;
  t3347 = t1224*t38*t2287*t367;
  t3350 = t3345 + t3347;
  t3354 = -1.*t1224*t2372*t356;
  t3356 = t2378*t3334;
  t3361 = t2384*t3350;
  t3362 = t3354 + t3356 + t3361;
  t3367 = -1.*t2433*t1224*t356;
  t3370 = t2436*t3334;
  t3371 = t2439*t3350;
  t3375 = t3367 + t3370 + t3371;
  t3382 = -1.*t1224*t2462*t356;
  t3383 = t2467*t3334;
  t3385 = t2471*t3350;
  t3387 = t3382 + t3383 + t3385;
  t3433 = t2287*t1240;
  t3435 = t2282*t1981;
  t3436 = t3433 + t3435;
  t3442 = -1.*t2287*t1981;
  t3445 = t2820 + t3442;
  t3450 = t2471*t3436;
  t3451 = t2467*t3445;
  t3452 = t3450 + t3451;
  t3459 = t2439*t3436;
  t3462 = t2436*t3445;
  t3465 = t3459 + t3462;
  t3469 = t2384*t3436;
  t3470 = t2378*t3445;
  t3472 = t3469 + t3470;
  t3518 = -1.*t2287*t2061;
  t3519 = t3518 + t3435;
  t3522 = -1.*t2282*t2061;
  t3526 = t3522 + t3442;
  t3533 = t2471*t3519;
  t3534 = t2467*t3526;
  t3536 = t3533 + t3534;
  t3539 = t2439*t3519;
  t3540 = t2436*t3526;
  t3545 = t3539 + t3540;
  t3550 = t2384*t3519;
  t3551 = t2378*t3526;
  t3555 = t3550 + t3551;
  t3603 = t2282*t2061;
  t3605 = t2287*t1981;
  t3611 = t3603 + t3605;
  t3619 = t1224*t38*t2655;
  t3622 = -6.5e-11*t2264*t3519;
  t3626 = t2660*t3611;
  t3629 = t3619 + t3622 + t3626;
  t3635 = -1.000000000049*t1224*t38*t2264;
  t3638 = t2669*t3519;
  t3639 = t2673*t3611;
  t3640 = t3635 + t3638 + t3639;
  t3642 = t1224*t38*t2680;
  t3644 = t2682*t3519;
  t3645 = -1.000000000016*t2264*t3611;
  t3647 = t3642 + t3644 + t3645;
  t3681 = t1224*t38*t2372;
  t3682 = t2378*t3519;
  t3685 = t2384*t3611;
  t3691 = t3681 + t3682 + t3685;
  t3694 = t2433*t1224*t38;
  t3695 = t2436*t3519;
  t3698 = t2439*t3611;
  t3701 = t3694 + t3695 + t3698;
  t3705 = t1224*t38*t2462;
  t3706 = t2467*t3519;
  t3707 = t2471*t3611;
  t3708 = t3705 + t3706 + t3707;
  p_output1[0]=1.;
  p_output1[1]=-1.*t268*t351*t356 + t356*t366*t367 + t231*t38 + t388*t393 + t408*t416 + t462*t501 + t511*t524 + t543*t560 - 0.041195*(-1.*t437*t501 + t424*t524 + 4.e-6*t429*t560) - 0.14871*(4.e-6*t437*t501 + 4.e-6*t429*t524 + t560*t588) + 0.803147*(t437*t524 - 4.e-6*t437*t560 + t501*t625);
  p_output1[2]=-1.*t268*t366*t38 - 1.*t351*t367*t38 + t707 + t729 + t748 + t765 + t790 + t813 + t836 + t852;
  p_output1[3]=t707 + t729 + t748 + t765 + t790 + t813 + t836 + t852 + t268*t38*t882 - 1.*t367*t38*t888;
  p_output1[4]=t1026*t462 + t1005*t543 + t356*t903 + t694*t927 + t939*t950 + t511*t978 - 0.041195*(4.e-6*t1005*t429 - 1.*t1026*t437 + t424*t978) - 0.14871*(4.e-6*t1026*t437 + t1005*t588 + 4.e-6*t429*t978) + 0.803147*(-4.e-6*t1005*t437 + t1026*t625 + t437*t978);
  p_output1[5]=t1103*t1122 + t1126*t1132 + t1147*t1161 + 0.803147*(t1132*t424 - 4.e-6*t1161*t424 - 1.000000000016*t1122*t437) - 0.14871*(4.e-6*t1122*t424 + 4.e-6*t1132*t437 - 1.6e-11*t1161*t437) - 0.041195*(-1.*t1122*t424 - 1.*t1132*t437 + 4.e-6*t1161*t437);
  p_output1[6]=1.;
  p_output1[7]=t1240*t351 + t1252*t366 - 1.*t1224*t231*t38 + t1261*t388 + t1270*t408 - 0.041195*(t1290*t424 + 4.e-6*t1301*t429 - 1.*t1275*t437) + t1275*t462 + t1290*t511 + t1301*t543 - 0.14871*(4.e-6*t1290*t429 + 4.e-6*t1275*t437 + t1301*t588) + 0.803147*(t1290*t437 - 4.e-6*t1301*t437 + t1275*t625);
  p_output1[8]=t1235*t231*t356 + t1235*t268*t351*t38 - 1.*t1235*t366*t367*t38 + t1366*t388 + t1377*t408 - 0.041195*(t1403*t424 + 4.e-6*t1418*t429 - 1.*t1385*t437) + t1385*t462 + t1403*t511 + t1418*t543 - 0.14871*(4.e-6*t1403*t429 + 4.e-6*t1385*t437 + t1418*t588) + 0.803147*(t1403*t437 - 4.e-6*t1418*t437 + t1385*t625);
  p_output1[9]=t1475*t351 + t1466*t366 + t1497*t388 + t1480*t408 - 0.041195*(t1518*t424 + 4.e-6*t1509*t429 - 1.*t1531*t437) + t1531*t462 + t1518*t511 + t1509*t543 - 0.14871*(4.e-6*t1518*t429 + 4.e-6*t1531*t437 + t1509*t588) + 0.803147*(-4.e-6*t1509*t437 + t1518*t437 + t1531*t625);
  p_output1[10]=t1591*t388 + t1586*t408 - 0.041195*(t1604*t424 + 4.e-6*t1599*t429 - 1.*t1613*t437) + t1613*t462 + t1604*t511 + t1599*t543 - 0.14871*(4.e-6*t1604*t429 + 4.e-6*t1613*t437 + t1599*t588) + 0.803147*(-4.e-6*t1599*t437 + t1604*t437 + t1613*t625) + t1578*t882 + t1475*t888;
  p_output1[11]=-0.041195*(t1680*t424 + 4.e-6*t1689*t429 - 1.*t1703*t437) + t1703*t462 + t1680*t511 + t1689*t543 - 0.14871*(4.e-6*t1680*t429 + 4.e-6*t1703*t437 + t1689*t588) + 0.803147*(t1680*t437 - 4.e-6*t1689*t437 + t1703*t625) - 1.*t1235*t38*t903 + t1586*t927 + t1670*t939;
  p_output1[12]=t1103*t1766 + t1126*t1775 + t1147*t1797 + 0.803147*(t1800 - 4.e-6*t1797*t424 - 1.000000000016*t1766*t437) - 0.14871*(4.e-6*t1766*t424 + 4.e-6*t1775*t437 - 1.6e-11*t1797*t437) - 0.041195*(-1.*t1766*t424 - 1.*t1775*t437 + 4.e-6*t1797*t437);
  p_output1[13]=1.;
  p_output1[14]=t1578*t351 + t1475*t366 - 1.*t1235*t231*t38 + t1586*t388 + t1670*t408 - 0.041195*(t1800 + 4.e-6*t1797*t429 - 1.*t1766*t437) + t1766*t462 + t1775*t511 + t1797*t543 - 0.14871*(4.e-6*t1775*t429 + 4.e-6*t1766*t437 + t1797*t588) + 0.803147*(t1775*t437 - 4.e-6*t1797*t437 + t1766*t625);
  p_output1[15]=-1.*t1224*t231*t356 - 1.*t1224*t268*t351*t38 + t1224*t366*t367*t38 + t1899*t388 + t1906*t408 - 0.041195*(t1928*t424 + 4.e-6*t1942*t429 - 1.*t1919*t437) + t1919*t462 + t1928*t511 + t1942*t543 - 0.14871*(4.e-6*t1928*t429 + 4.e-6*t1919*t437 + t1942*t588) + 0.803147*(t1928*t437 - 4.e-6*t1942*t437 + t1919*t625);
  p_output1[16]=t1981*t351 + t1240*t366 + t1994*t388 + t1990*t408 - 0.041195*(t2013*t424 + 4.e-6*t2003*t429 - 1.*t2031*t437) + t2031*t462 + t2013*t511 + t2003*t543 - 0.14871*(4.e-6*t2013*t429 + 4.e-6*t2031*t437 + t2003*t588) + 0.803147*(-4.e-6*t2003*t437 + t2013*t437 + t2031*t625);
  p_output1[17]=t2075*t388 + t2071*t408 - 0.041195*(t2084*t424 + 4.e-6*t2079*t429 - 1.*t2090*t437) + t2090*t462 + t2084*t511 + t2079*t543 - 0.14871*(4.e-6*t2084*t429 + 4.e-6*t2090*t437 + t2079*t588) + 0.803147*(-4.e-6*t2079*t437 + t2084*t437 + t2090*t625) + t2061*t882 + t1981*t888;
  p_output1[18]=-0.041195*(t2142*t424 + 4.e-6*t2155*t429 - 1.*t2166*t437) + t2166*t462 + t2142*t511 + t2155*t543 - 0.14871*(4.e-6*t2142*t429 + 4.e-6*t2166*t437 + t2155*t588) + 0.803147*(t2142*t437 - 4.e-6*t2155*t437 + t2166*t625) + t1224*t38*t903 + t2071*t927 + t2138*t939;
  p_output1[19]=t1103*t2207 + t1126*t2214 + t1147*t2230 + 0.803147*(t2214*t424 - 4.e-6*t2230*t424 - 1.000000000016*t2207*t437) - 0.14871*(4.e-6*t2207*t424 + 4.e-6*t2214*t437 - 1.6e-11*t2230*t437) - 0.041195*(-1.*t2207*t424 - 1.*t2214*t437 + 4.e-6*t2230*t437);
  p_output1[20]=1.;
  p_output1[21]=t2313*t2320 + t2335*t2339 + t2369*t2387 + t2429*t2442 + t2460*t2475 - 0.148715*(t2387*t2478 + t2442*t2483 + t2475*t2486) - 0.038576*(t2387*t2498 + t2442*t2503 + t2475*t2507) - 0.80315*(t2387*t2513 + t2442*t2519 + t2475*t2522) - 1.*t2291*t268*t356 + t2294*t356*t367 + t2279*t38;
  p_output1[22]=t2543 + t2548 + t2553 + t2557 + t2562 + t2572 + t2584 + t2594 - 1.*t2294*t268*t38 - 1.*t2291*t367*t38;
  p_output1[23]=t2543 + t2548 + t2553 + t2557 + t2562 + t2572 + t2584 + t2594 + t2598*t268*t38 - 1.*t2602*t367*t38;
  p_output1[24]=t2542*t2632 + t2643*t2652 + t2460*t2665 + t2429*t2675 + t2369*t2687 - 0.148715*(t2486*t2665 + t2483*t2675 + t2478*t2687) - 0.038576*(t2507*t2665 + t2503*t2675 + t2498*t2687) - 0.80315*(t2522*t2665 + t2519*t2675 + t2513*t2687) + t2616*t356;
  p_output1[25]=t2735*t2740 + t2750*t2756 + t2768*t2772 - 0.80315*(-1.000000000016*t2354*t2740 + t2756*t2777 + t2772*t2780) - 0.038576*(-1.000000000049*t2354*t2756 + t2740*t2786 + t2772*t2789) - 0.148715*(-6.5e-11*t2354*t2772 + t2740*t2794 + t2756*t2797);
  p_output1[26]=1.;
  p_output1[27]=t1240*t2291 + t1252*t2294 + t2313*t2816 + t2335*t2822 + t2369*t2833 + t2429*t2843 + t2460*t2852 - 0.148715*(t2478*t2833 + t2483*t2843 + t2486*t2852) - 0.038576*(t2498*t2833 + t2503*t2843 + t2507*t2852) - 0.80315*(t2513*t2833 + t2519*t2843 + t2522*t2852) - 1.*t1224*t2279*t38;
  p_output1[28]=t2313*t2907 + t2335*t2917 + t2369*t2929 + t2429*t2937 + t2460*t2946 - 0.148715*(t2478*t2929 + t2483*t2937 + t2486*t2946) - 0.038576*(t2498*t2929 + t2503*t2937 + t2507*t2946) - 0.80315*(t2513*t2929 + t2519*t2937 + t2522*t2946) + t1235*t2279*t356 + t1235*t2291*t268*t38 - 1.*t1235*t2294*t367*t38;
  p_output1[29]=t1475*t2291 + t1466*t2294 + t2335*t2996 + t2313*t3009 + t2460*t3019 + t2429*t3032 + t2369*t3038 - 0.148715*(t2486*t3019 + t2483*t3032 + t2478*t3038) - 0.038576*(t2507*t3019 + t2503*t3032 + t2498*t3038) - 0.80315*(t2522*t3019 + t2519*t3032 + t2513*t3038);
  p_output1[30]=t1578*t2598 + t1475*t2602 + t2335*t3073 + t2313*t3076 + t2460*t3081 + t2429*t3086 + t2369*t3091 - 0.148715*(t2486*t3081 + t2483*t3086 + t2478*t3091) - 0.038576*(t2507*t3081 + t2503*t3086 + t2498*t3091) - 0.80315*(t2522*t3081 + t2519*t3086 + t2513*t3091);
  p_output1[31]=t2632*t3073 + t2643*t3124 + t2460*t3129 + t2429*t3139 + t2369*t3146 - 0.148715*(t2486*t3129 + t2483*t3139 + t2478*t3146) - 0.038576*(t2507*t3129 + t2503*t3139 + t2498*t3146) - 0.80315*(t2522*t3129 + t2519*t3139 + t2513*t3146) - 1.*t1235*t2616*t38;
  p_output1[32]=t2735*t3188 + t2750*t3199 + t2768*t3210 - 0.148715*(t2794*t3188 + t2797*t3199 - 6.5e-11*t2354*t3210) - 0.80315*(-1.000000000016*t2354*t3188 + t2777*t3199 + t2780*t3210) - 0.038576*(t2786*t3188 - 1.000000000049*t2354*t3199 + t2789*t3210);
  p_output1[33]=1.;
  p_output1[34]=t1578*t2291 + t1475*t2294 + t2313*t3073 + t2335*t3124 + t2369*t3188 + t2429*t3199 + t2460*t3210 - 0.148715*(t2478*t3188 + t2483*t3199 + t2486*t3210) - 0.038576*(t2498*t3188 + t2503*t3199 + t2507*t3210) - 0.80315*(t2513*t3188 + t2519*t3199 + t2522*t3210) - 1.*t1235*t2279*t38;
  p_output1[35]=t2313*t3334 + t2335*t3350 + t2369*t3362 + t2429*t3375 + t2460*t3387 - 0.148715*(t2478*t3362 + t2483*t3375 + t2486*t3387) - 0.038576*(t2498*t3362 + t2503*t3375 + t2507*t3387) - 0.80315*(t2513*t3362 + t2519*t3375 + t2522*t3387) - 1.*t1224*t2279*t356 - 1.*t1224*t2291*t268*t38 + t1224*t2294*t367*t38;
  p_output1[36]=t1981*t2291 + t1240*t2294 + t2335*t3436 + t2313*t3445 + t2460*t3452 + t2429*t3465 + t2369*t3472 - 0.148715*(t2486*t3452 + t2483*t3465 + t2478*t3472) - 0.038576*(t2507*t3452 + t2503*t3465 + t2498*t3472) - 0.80315*(t2522*t3452 + t2519*t3465 + t2513*t3472);
  p_output1[37]=t2061*t2598 + t1981*t2602 + t2335*t3519 + t2313*t3526 + t2460*t3536 + t2429*t3545 + t2369*t3555 - 0.148715*(t2486*t3536 + t2483*t3545 + t2478*t3555) - 0.038576*(t2507*t3536 + t2503*t3545 + t2498*t3555) - 0.80315*(t2522*t3536 + t2519*t3545 + t2513*t3555);
  p_output1[38]=t2632*t3519 + t2643*t3611 + t2460*t3629 + t2429*t3640 + t2369*t3647 - 0.148715*(t2486*t3629 + t2483*t3640 + t2478*t3647) - 0.038576*(t2507*t3629 + t2503*t3640 + t2498*t3647) - 0.80315*(t2522*t3629 + t2519*t3640 + t2513*t3647) + t1224*t2616*t38;
  p_output1[39]=t2735*t3691 + t2750*t3701 + t2768*t3708 - 0.148715*(t2794*t3691 + t2797*t3701 - 6.5e-11*t2354*t3708) - 0.80315*(-1.000000000016*t2354*t3691 + t2777*t3701 + t2780*t3708) - 0.038576*(t2786*t3691 - 1.000000000049*t2354*t3701 + t2789*t3708);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_ParallelStance2.hh"

namespace ParallelStance2
{

void J_output_boundary_ParallelStance2_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
