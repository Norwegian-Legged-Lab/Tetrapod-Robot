/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 17:51:37 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t135;
  double t21;
  double t504;
  double t276;
  double t441;
  double t455;
  double t549;
  double t551;
  double t52;
  double t109;
  double t686;
  double t726;
  double t755;
  double t1006;
  double t984;
  double t861;
  double t880;
  double t896;
  double t905;
  double t918;
  double t929;
  double t957;
  double t1012;
  double t1056;
  double t1094;
  double t837;
  double t1673;
  double t855;
  double t858;
  double t1520;
  double t1574;
  double t1607;
  double t1678;
  double t1681;
  double t1698;
  double t1700;
  double t1701;
  double t1722;
  double t1741;
  double t1753;
  double t1756;
  double t1764;
  double t1825;
  double t1826;
  double t1830;
  double t1832;
  double t1855;
  double t1856;
  double t1869;
  double t1874;
  double t1875;
  double t1876;
  double t1318;
  double t1959;
  double t1961;
  double t1979;
  double t1986;
  double t1990;
  double t1996;
  double t2002;
  double t2005;
  double t2064;
  double t2071;
  double t2084;
  double t2100;
  double t2111;
  double t2118;
  double t2131;
  double t2133;
  double t1308;
  double t1310;
  double t1316;
  double t980;
  double t1189;
  double t1203;
  double t1899;
  double t1900;
  double t1916;
  double t1843;
  double t1878;
  double t1882;
  double t2157;
  double t2158;
  double t2165;
  double t2102;
  double t2142;
  double t2148;
  double t2254;
  double t2507;
  double t2515;
  double t2519;
  double t2526;
  double t2528;
  double t2535;
  double t2616;
  double t2617;
  double t2626;
  double t2632;
  double t2638;
  double t2642;
  double t2645;
  double t2657;
  double t2745;
  double t2825;
  double t2835;
  double t2854;
  double t2945;
  double t3003;
  double t3006;
  double t3018;
  double t3280;
  double t3282;
  double t3318;
  double t3327;
  double t3328;
  double t3342;
  double t3343;
  double t3345;
  double t3365;
  double t3376;
  double t3379;
  double t3398;
  double t3408;
  double t3469;
  double t3473;
  double t3520;
  double t3604;
  double t3618;
  double t3636;
  double t3691;
  double t3692;
  double t3752;
  double t3761;
  double t3770;
  double t3771;
  double t3775;
  double t3783;
  double t1984;
  double t1992;
  double t2023;
  double t2035;
  double t2149;
  double t2175;
  double t2187;
  double t1683;
  double t1743;
  double t1774;
  double t1781;
  double t1896;
  double t1917;
  double t1936;
  double t617;
  double t794;
  double t812;
  double t1212;
  double t1344;
  double t1418;
  double t846;
  double t1423;
  double t1429;
  double t3925;
  double t3950;
  double t1810;
  double t1937;
  double t2062;
  double t2188;
  double t2235;
  double t2255;
  double t2297;
  double t2319;
  double t2325;
  double t2335;
  double t2341;
  double t2342;
  double t2358;
  double t2359;
  double t2362;
  double t2369;
  double t2377;
  double t2399;
  double t2402;
  double t2406;
  double t2411;
  double t2414;
  double t2436;
  double t2440;
  double t2450;
  double t2455;
  double t2458;
  double t2461;
  double t2470;
  double t2476;
  double t2481;
  double t2555;
  double t2566;
  double t2581;
  double t2523;
  double t2543;
  double t2544;
  double t2547;
  double t2583;
  double t2588;
  double t2662;
  double t2663;
  double t2674;
  double t2633;
  double t2659;
  double t2660;
  double t2602;
  double t2603;
  double t2661;
  double t2675;
  double t2685;
  double t3114;
  double t3124;
  double t3152;
  double t2902;
  double t3027;
  double t3035;
  double t2711;
  double t2714;
  double t3041;
  double t3179;
  double t3205;
  double t3540;
  double t3552;
  double t3555;
  double t3403;
  double t3537;
  double t3538;
  double t3286;
  double t3333;
  double t3346;
  double t3349;
  double t3539;
  double t3574;
  double t3576;
  double t3793;
  double t3794;
  double t3796;
  double t3767;
  double t3785;
  double t3788;
  double t3603;
  double t3620;
  double t3640;
  double t3654;
  double t3790;
  double t3805;
  double t3844;
  double t4000;
  double t4009;
  double t4016;
  double t4024;
  double t3962;
  double t3965;
  double t3967;
  double t3977;
  double t3927;
  double t3929;
  double t3944;
  double t4758;
  double t4760;
  double t4793;
  double t4752;
  double t4754;
  double t4742;
  double t4747;
  double t4086;
  double t4101;
  double t4106;
  double t4115;
  double t4117;
  double t4129;
  double t4141;
  double t4142;
  double t4143;
  double t4181;
  double t4250;
  double t4282;
  double t4285;
  double t4316;
  double t4318;
  double t4320;
  double t4345;
  double t4347;
  double t4349;
  double t4400;
  double t4401;
  double t4414;
  double t4418;
  double t4419;
  double t4420;
  double t4445;
  double t4454;
  double t4463;
  double t4468;
  double t4474;
  double t4487;
  double t4509;
  double t4514;
  double t4519;
  double t4526;
  double t4532;
  double t4563;
  double t4659;
  double t4660;
  double t4661;
  double t4664;
  double t4670;
  double t4671;
  double t4710;
  double t4712;
  double t4715;
  double t4717;
  double t4718;
  double t4728;
  double t3879;
  double t3891;
  double t3912;
  double t5305;
  double t5308;
  double t5316;
  double t5319;
  double t5320;
  double t5321;
  double t5324;
  double t5329;
  double t5331;
  double t5336;
  double t5337;
  double t5351;
  double t5357;
  double t5359;
  double t5360;
  double t5362;
  double t5365;
  double t5384;
  double t5390;
  double t5393;
  double t5394;
  double t5396;
  double t5402;
  double t5404;
  double t5410;
  double t5412;
  double t5414;
  double t5428;
  double t5431;
  double t5434;
  double t5436;
  double t5439;
  double t5444;
  double t5446;
  double t5277;
  double t5287;
  double t5294;
  double t5300;
  double t5328;
  double t5346;
  double t5367;
  double t5368;
  double t5392;
  double t5430;
  double t5449;
  double t5456;
  double t5461;
  double t5463;
  double t5464;
  double t5468;
  double t5469;
  double t5480;
  double t5481;
  double t3917;
  double t3919;
  double t3923;
  double t5498;
  double t5503;
  double t1941;
  double t5490;
  double t5491;
  double t5493;
  double t5511;
  double t5369;
  double t5482;
  double t5487;
  double t5505;
  double t5543;
  double t5544;
  double t5547;
  double t3868;
  double t3870;
  double t3874;
  double t2193;
  double t5841;
  double t5844;
  double t5846;
  double t5826;
  double t5555;
  double t5557;
  double t5558;
  double t5567;
  double t5616;
  double t5619;
  double t5620;
  double t5621;
  double t5649;
  double t5650;
  double t5652;
  double t5653;
  double t5684;
  double t5685;
  double t5686;
  double t5688;
  double t5749;
  double t5750;
  double t5752;
  double t5753;
  double t5795;
  double t5800;
  double t5803;
  double t5805;
  double t6119;
  double t6148;
  double t6150;
  double t6151;
  double t6154;
  double t6131;
  double t6165;
  double t6180;
  double t6181;
  double t6139;
  double t6155;
  double t6156;
  double t2608;
  double t2693;
  double t2698;
  double t2504;
  double t2592;
  double t2595;
  double t6567;
  double t6584;
  double t6590;
  double t6592;
  double t6593;
  double t6595;
  double t6607;
  double t6616;
  double t6619;
  double t6623;
  double t6626;
  double t6627;
  double t6636;
  double t6638;
  double t6639;
  double t6599;
  double t6633;
  double t6634;
  double t6667;
  double t6673;
  double t6674;
  double t6677;
  double t6682;
  double t6683;
  double t6635;
  double t6641;
  double t6643;
  double t6676;
  double t6687;
  double t6692;
  double t6703;
  double t6705;
  double t6706;
  double t2724;
  double t3213;
  double t3218;
  double t6900;
  double t6902;
  double t6908;
  double t6922;
  double t6929;
  double t6931;
  double t6941;
  double t6944;
  double t6913;
  double t6935;
  double t6949;
  double t6951;
  double t6958;
  double t6960;
  double t6961;
  double t6965;
  double t6982;
  double t6985;
  double t6990;
  double t6957;
  double t6977;
  double t6978;
  double t7000;
  double t7001;
  double t7019;
  double t7022;
  double t7026;
  double t7028;
  double t7032;
  double t3358;
  double t3586;
  double t3597;
  double t6979;
  double t6992;
  double t6993;
  double t7024;
  double t7035;
  double t7038;
  double t7041;
  double t7046;
  double t7048;
  double t3662;
  double t3845;
  double t3848;
  double t5820;
  double t5828;
  double t5895;
  double t5896;
  double t5961;
  double t5962;
  double t6005;
  double t6014;
  double t6052;
  double t6061;
  double t6083;
  double t6084;
  double t6114;
  double t6157;
  double t7221;
  double t7228;
  double t7229;
  double t6202;
  double t6206;
  double t7250;
  double t7253;
  double t7255;
  double t6238;
  double t6240;
  double t7292;
  double t7303;
  double t7305;
  double t6355;
  double t6356;
  double t7328;
  double t7331;
  double t7336;
  double t6443;
  double t6444;
  double t7413;
  double t7414;
  double t7416;
  double t6474;
  double t6480;
  double t7464;
  double t7480;
  double t7507;
  double t6564;
  double t6647;
  double t6722;
  double t6727;
  double t6755;
  double t6756;
  double t6785;
  double t6792;
  double t6823;
  double t6826;
  double t6850;
  double t6851;
  double t6998;
  double t7066;
  double t7070;
  double t7106;
  double t7126;
  double t7127;
  double t7145;
  double t7146;
  double t7167;
  double t7168;
  double t7783;
  double t7787;
  double t7764;
  double t7765;
  double t7917;
  double t7920;
  double t7890;
  double t7902;
  double t7865;
  double t7866;
  double t7835;
  double t7836;
  double t7968;
  double t7969;
  double t8230;
  double t8232;
  double t8233;
  double t7952;
  double t7997;
  double t7999;
  double t8283;
  double t8288;
  double t8291;
  double t7983;
  double t8343;
  double t8346;
  double t8348;
  double t8363;
  double t8365;
  double t8369;
  double t8027;
  double t8029;
  double t8013;
  double t8015;
  double t8192;
  double t8193;
  double t8196;
  double t8240;
  double t8242;
  double t8243;
  double t8584;
  double t8856;
  double t8857;
  double t8859;
  double t8860;
  double t8660;
  double t8678;
  double t8701;
  double t8702;
  double t8763;
  double t8766;
  double t8769;
  double t8770;
  double t8790;
  double t8791;
  double t8794;
  double t8797;
  double t8804;
  double t8805;
  double t8807;
  double t8808;
  double t8582;
  double t8585;
  double t8586;
  double t8587;
  double t9099;
  double t9100;
  double t9101;
  double t9102;
  double t9105;
  double t9108;
  double t9109;
  double t9117;
  double t9118;
  double t9120;
  double t9112;
  double t9113;
  double t9115;
  double t9234;
  double t9235;
  double t9236;
  double t9237;
  double t9238;
  double t9239;
  double t9240;
  double t9202;
  double t9206;
  double t9213;
  double t9216;
  double t9222;
  double t9223;
  double t9229;
  double t9188;
  double t9191;
  double t9192;
  double t9196;
  double t9172;
  double t9175;
  double t9178;
  double t9184;
  double t9260;
  double t9263;
  double t9266;
  double t9268;
  double t9271;
  double t9272;
  double t9273;
  double t9287;
  double t9291;
  double t9292;
  double t9279;
  double t9282;
  double t9283;
  double t9320;
  double t9323;
  double t9326;
  double t9327;
  double t9344;
  double t9345;
  double t9349;
  double t9350;
  t135 = Cos(var1[11]);
  t21 = Cos(var1[10]);
  t504 = -1. + t135;
  t276 = -1.*t135;
  t441 = 1. + t276;
  t455 = 1.6e-11*t441;
  t549 = 1.6e-11*t504;
  t551 = -1. + t455 + t549;
  t52 = -1.*t21;
  t109 = 1. + t52;
  t686 = 4.e-6*t504;
  t726 = -4.e-6*t135;
  t755 = t686 + t726;
  t1006 = Sin(var1[10]);
  t984 = Cos(var1[9]);
  t861 = -1. + t21;
  t880 = 1.6e-11*t861;
  t896 = 1. + t880;
  t905 = t896*t551;
  t918 = 4.e-6*t109*t755;
  t929 = t905 + t918;
  t957 = Sin(var1[9]);
  t1012 = 4.e-6*t551*t1006;
  t1056 = -1.*t755*t1006;
  t1094 = t1012 + t1056;
  t837 = Cos(var1[4]);
  t1673 = Sin(var1[11]);
  t855 = Sin(var1[4]);
  t858 = Cos(var1[5]);
  t1520 = -1.000000000016*t441;
  t1574 = 1. + t1520;
  t1607 = 0.004352*t1574;
  t1678 = -0.9999910000159999*t1673;
  t1681 = t1607 + t1678;
  t1698 = -1. + t455;
  t1700 = 4.e-6*t1698;
  t1701 = 3.999964e-6*t441;
  t1722 = -1.7408e-8*t1673;
  t1741 = t1700 + t1701 + t1722;
  t1753 = 0.999991*t135;
  t1756 = 0.004352*t1673;
  t1764 = t549 + t1753 + t1756;
  t1825 = -4.e-6*t1006*t1681;
  t1826 = t896*t1741;
  t1830 = 4.e-6*t109*t1764;
  t1832 = 0. + t1825 + t1826 + t1830;
  t1855 = -1.000000000016*t109;
  t1856 = 1. + t1855;
  t1869 = t1856*t1681;
  t1874 = 4.e-6*t1006*t1741;
  t1875 = -1.*t1006*t1764;
  t1876 = 0. + t1869 + t1874 + t1875;
  t1318 = Sin(var1[5]);
  t1959 = -1.7408e-8*t441;
  t1961 = -3.999964e-6*t1673;
  t1979 = t1959 + t1961;
  t1986 = 0.999991*t1574;
  t1990 = t1986 + t1756;
  t1996 = -0.004352*t135;
  t2002 = 0.999991*t1673;
  t2005 = t1996 + t2002;
  t2064 = t896*t1979;
  t2071 = -4.e-6*t1006*t1990;
  t2084 = 4.e-6*t109*t2005;
  t2100 = 0. + t2064 + t2071 + t2084;
  t2111 = 4.e-6*t1006*t1979;
  t2118 = t1856*t1990;
  t2131 = -1.*t1006*t2005;
  t2133 = 0. + t2111 + t2118 + t2131;
  t1308 = t984*t929;
  t1310 = t957*t1094;
  t1316 = t1308 + t1310;
  t980 = -1.*t929*t957;
  t1189 = t984*t1094;
  t1203 = t980 + t1189;
  t1899 = t984*t1832;
  t1900 = t957*t1876;
  t1916 = 0. + t1899 + t1900;
  t1843 = -1.*t957*t1832;
  t1878 = t984*t1876;
  t1882 = 0. + t1843 + t1878;
  t2157 = t984*t2100;
  t2158 = t957*t2133;
  t2165 = 0. + t2157 + t2158;
  t2102 = -1.*t957*t2100;
  t2142 = t984*t2133;
  t2148 = 0. + t2102 + t2142;
  t2254 = -1.*t1203*t1318;
  t2507 = 4.e-6*t21*t551;
  t2515 = -1.*t21*t755;
  t2519 = t2507 + t2515;
  t2526 = -1.6e-11*t551*t1006;
  t2528 = 4.e-6*t755*t1006;
  t2535 = t2526 + t2528;
  t2616 = -1.000000000016*t1006*t1681;
  t2617 = 4.e-6*t21*t1741;
  t2626 = -1.*t21*t1764;
  t2632 = t2616 + t2617 + t2626;
  t2638 = -4.e-6*t21*t1681;
  t2642 = -1.6e-11*t1006*t1741;
  t2645 = 4.e-6*t1006*t1764;
  t2657 = t2638 + t2642 + t2645;
  t2745 = 4.e-6*t21*t1979;
  t2825 = -1.000000000016*t1006*t1990;
  t2835 = -1.*t21*t2005;
  t2854 = t2745 + t2825 + t2835;
  t2945 = -1.6e-11*t1006*t1979;
  t3003 = -4.e-6*t21*t1990;
  t3006 = 4.e-6*t1006*t2005;
  t3018 = t2945 + t3003 + t3006;
  t3280 = 0.004352*t135;
  t3282 = t3280 + t1678;
  t3318 = -0.9999910000159999*t135;
  t3327 = -0.00435200000006963*t1673;
  t3328 = t3318 + t3327;
  t3342 = -1.7408e-8*t135;
  t3343 = 3.999964000064e-6*t1673;
  t3345 = t3342 + t3343;
  t3365 = 4.e-6*t109*t3282;
  t3376 = -4.e-6*t1006*t3328;
  t3379 = t896*t3345;
  t3398 = t3365 + t3376 + t3379;
  t3408 = -1.*t1006*t3282;
  t3469 = t1856*t3328;
  t3473 = 4.e-6*t1006*t3345;
  t3520 = t3408 + t3469 + t3473;
  t3604 = -3.999964e-6*t135;
  t3618 = t3604 + t1722;
  t3636 = t1753 + t1756;
  t3691 = -4.e-6*t1006*t3282;
  t3692 = t896*t3618;
  t3752 = 4.e-6*t109*t3636;
  t3761 = t3691 + t3692 + t3752;
  t3770 = t1856*t3282;
  t3771 = 4.e-6*t1006*t3618;
  t3775 = -1.*t1006*t3636;
  t3783 = t3770 + t3771 + t3775;
  t1984 = 4.e-6*t109*t1979;
  t1992 = t1006*t1990;
  t2023 = t21*t2005;
  t2035 = 0. + t1984 + t1992 + t2023;
  t2149 = t858*t2148;
  t2175 = -1.*t2165*t1318;
  t2187 = 0. + t2149 + t2175;
  t1683 = t1006*t1681;
  t1743 = 4.e-6*t109*t1741;
  t1774 = t21*t1764;
  t1781 = 0. + t1683 + t1743 + t1774;
  t1896 = t858*t1882;
  t1917 = -1.*t1916*t1318;
  t1936 = 0. + t1896 + t1917;
  t617 = 4.e-6*t109*t551;
  t794 = t21*t755;
  t812 = t617 + t794;
  t1212 = t858*t1203;
  t1344 = -1.*t1316*t1318;
  t1418 = t1212 + t1344;
  t846 = t812*t837;
  t1423 = -1.*t855*t1418;
  t1429 = t846 + t1423;
  t3925 = Sin(var1[3]);
  t3950 = Cos(var1[3]);
  t1810 = t837*t1781;
  t1937 = -1.*t855*t1936;
  t2062 = t837*t2035;
  t2188 = -1.*t855*t2187;
  t2235 = -1.*t858*t1316;
  t2255 = t2235 + t2254;
  t2297 = -1.*t858*t1916;
  t2319 = -1.*t1882*t1318;
  t2325 = t2297 + t2319;
  t2335 = -1.*t858*t2165;
  t2341 = -1.*t2148*t1318;
  t2342 = t2335 + t2341;
  t2358 = -1.*t984*t929;
  t2359 = -1.*t957*t1094;
  t2362 = t2358 + t2359;
  t2369 = t858*t2362;
  t2377 = t2369 + t2254;
  t2399 = -1.*t984*t1832;
  t2402 = -1.*t957*t1876;
  t2406 = t2399 + t2402;
  t2411 = t858*t2406;
  t2414 = t1843 + t1878;
  t2436 = -1.*t2414*t1318;
  t2440 = t2411 + t2436;
  t2450 = -1.*t984*t2100;
  t2455 = -1.*t957*t2133;
  t2458 = t2450 + t2455;
  t2461 = t858*t2458;
  t2470 = t2102 + t2142;
  t2476 = -1.*t2470*t1318;
  t2481 = t2461 + t2476;
  t2555 = t2519*t957;
  t2566 = t984*t2535;
  t2581 = t2555 + t2566;
  t2523 = t984*t2519;
  t2543 = -1.*t957*t2535;
  t2544 = t2523 + t2543;
  t2547 = t858*t2544;
  t2583 = -1.*t2581*t1318;
  t2588 = t2547 + t2583;
  t2662 = t957*t2632;
  t2663 = t984*t2657;
  t2674 = t2662 + t2663;
  t2633 = t984*t2632;
  t2659 = -1.*t957*t2657;
  t2660 = t2633 + t2659;
  t2602 = t21*t1681;
  t2603 = t2602 + t1874 + t1875;
  t2661 = t858*t2660;
  t2675 = -1.*t2674*t1318;
  t2685 = t2661 + t2675;
  t3114 = t957*t2854;
  t3124 = t984*t3018;
  t3152 = t3114 + t3124;
  t2902 = t984*t2854;
  t3027 = -1.*t957*t3018;
  t3035 = t2902 + t3027;
  t2711 = t21*t1990;
  t2714 = t2111 + t2711 + t2131;
  t3041 = t858*t3035;
  t3179 = -1.*t3152*t1318;
  t3205 = t3041 + t3179;
  t3540 = t984*t3398;
  t3552 = t957*t3520;
  t3555 = t3540 + t3552;
  t3403 = -1.*t957*t3398;
  t3537 = t984*t3520;
  t3538 = t3403 + t3537;
  t3286 = t21*t3282;
  t3333 = t1006*t3328;
  t3346 = 4.e-6*t109*t3345;
  t3349 = t3286 + t3333 + t3346;
  t3539 = t858*t3538;
  t3574 = -1.*t3555*t1318;
  t3576 = t3539 + t3574;
  t3793 = t984*t3761;
  t3794 = t957*t3783;
  t3796 = t3793 + t3794;
  t3767 = -1.*t957*t3761;
  t3785 = t984*t3783;
  t3788 = t3767 + t3785;
  t3603 = t1006*t3282;
  t3620 = 4.e-6*t109*t3618;
  t3640 = t21*t3636;
  t3654 = t3603 + t3620 + t3640;
  t3790 = t858*t3788;
  t3805 = -1.*t3796*t1318;
  t3844 = t3790 + t3805;
  t4000 = t858*t2165;
  t4009 = t2148*t1318;
  t4016 = 0. + t4000 + t4009;
  t4024 = 0. + t2062 + t2188;
  t3962 = t858*t1916;
  t3965 = t1882*t1318;
  t3967 = 0. + t3962 + t3965;
  t3977 = 0. + t1810 + t1937;
  t3927 = t858*t1316;
  t3929 = t1203*t1318;
  t3944 = t3927 + t3929;
  t4758 = t3950*t3944;
  t4760 = -1.*t3925*t1429;
  t4793 = t4758 + t4760;
  t4752 = t3950*t3967;
  t4754 = -1.*t3925*t3977;
  t4742 = t3950*t4016;
  t4747 = -1.*t3925*t4024;
  t4086 = -1.*t812*t855;
  t4101 = -1.*t837*t1418;
  t4106 = t4086 + t4101;
  t4115 = -1.*t1781*t855;
  t4117 = -1.*t837*t1936;
  t4129 = t4115 + t4117;
  t4141 = -1.*t2035*t855;
  t4142 = -1.*t837*t2187;
  t4143 = t4141 + t4142;
  t4181 = t1896 + t1917;
  t4250 = t2149 + t2175;
  t4282 = t2362*t1318;
  t4285 = t1212 + t4282;
  t4316 = t858*t2414;
  t4318 = t2406*t1318;
  t4320 = t4316 + t4318;
  t4345 = t858*t2470;
  t4347 = t2458*t1318;
  t4349 = t4345 + t4347;
  t4400 = t858*t2581;
  t4401 = t2544*t1318;
  t4414 = t4400 + t4401;
  t4418 = t837*t1094;
  t4419 = -1.*t855*t2588;
  t4420 = t4418 + t4419;
  t4445 = t858*t2674;
  t4454 = t2660*t1318;
  t4463 = t4445 + t4454;
  t4468 = t837*t2603;
  t4474 = -1.*t855*t2685;
  t4487 = t4468 + t4474;
  t4509 = t858*t3152;
  t4514 = t3035*t1318;
  t4519 = t4509 + t4514;
  t4526 = t837*t2714;
  t4532 = -1.*t855*t3205;
  t4563 = t4526 + t4532;
  t4659 = t858*t3555;
  t4660 = t3538*t1318;
  t4661 = t4659 + t4660;
  t4664 = t837*t3349;
  t4670 = -1.*t855*t3576;
  t4671 = t4664 + t4670;
  t4710 = t858*t3796;
  t4712 = t3788*t1318;
  t4715 = t4710 + t4712;
  t4717 = t837*t3654;
  t4718 = -1.*t855*t3844;
  t4728 = t4717 + t4718;
  t3879 = t1781*t855;
  t3891 = t837*t1936;
  t3912 = 0. + t3879 + t3891;
  t5305 = -1.26e-8*var1[11];
  t5308 = 1. + t549;
  t5316 = -0.14871*t5308;
  t5319 = -1.64779999997447e-7*t441;
  t5320 = -1.59556e-7*t504;
  t5321 = -1.199987999968e-6*t1673;
  t5324 = t5305 + t5316 + t5319 + t5320 + t5321;
  t5329 = 0.803147*t1574;
  t5331 = 0.50315000001605*t441;
  t5336 = 0.00130540515936178*t1673;
  t5337 = t5329 + t5331 + t5336;
  t5351 = -5.04e-14*var1[11];
  t5357 = -0.03988959484*t441;
  t5359 = 6.38224e-13*t504;
  t5360 = -0.041195*t135;
  t5362 = 0.299996999992*t1673;
  t5365 = t5351 + t5357 + t5359 + t5360 + t5362;
  t5384 = -1.*t984;
  t5390 = 1. + t5384;
  t5393 = -0.15121*t957;
  t5394 = -1.2484e-7*var1[10];
  t5396 = 2.479936e-18*t109;
  t5402 = -1.54996e-7*t861;
  t5404 = 1.124840000016e-6*t1006;
  t5410 = t896*t5324;
  t5412 = -4.e-6*t1006*t5337;
  t5414 = 4.e-6*t109*t5365;
  t5428 = t5394 + t5396 + t5402 + t5404 + t5410 + t5412 + t5414;
  t5431 = 0.281210000008499*t109;
  t5434 = -0.03874900000062*t1006;
  t5436 = 4.e-6*t1006*t5324;
  t5439 = t1856*t5337;
  t5444 = -1.*t1006*t5365;
  t5446 = t5431 + t5434 + t5436 + t5439 + t5444;
  t5277 = -4.9936e-13*var1[10];
  t5287 = -0.038749*t109;
  t5294 = 6.19984e-13*t861;
  t5300 = -0.281210000004*t1006;
  t5328 = 4.e-6*t109*t5324;
  t5346 = t1006*t5337;
  t5367 = t21*t5365;
  t5368 = 0. + t5277 + t5287 + t5294 + t5300 + t5328 + t5346 + t5367;
  t5392 = 0.15121*t5390;
  t5430 = -1.*t957*t5428;
  t5449 = t984*t5446;
  t5456 = t5392 + t5393 + t5430 + t5449;
  t5461 = t858*t5456;
  t5463 = -0.15121*t5390;
  t5464 = t984*t5428;
  t5468 = t957*t5446;
  t5469 = t5463 + t5393 + t5464 + t5468;
  t5480 = -1.*t5469*t1318;
  t5481 = 0. + t5461 + t5480;
  t3917 = t812*t855;
  t3919 = t837*t1418;
  t3923 = t3917 + t3919;
  t5498 = t837*t5368;
  t5503 = -1.*t855*t5481;
  t1941 = t1810 + t1937;
  t5490 = t5368*t855;
  t5491 = t837*t5481;
  t5493 = 0. + t5490 + t5491;
  t5511 = 0. + t5498 + t5503;
  t5369 = -1.*t5368*t855;
  t5482 = -1.*t837*t5481;
  t5487 = t5369 + t5482;
  t5505 = t5498 + t5503;
  t5543 = t858*t5469;
  t5544 = t5456*t1318;
  t5547 = 0. + t5543 + t5544;
  t3868 = t2035*t855;
  t3870 = t837*t2187;
  t3874 = 0. + t3868 + t3870;
  t2193 = t2062 + t2188;
  t5841 = -1.*t858*t5469;
  t5844 = -1.*t5456*t1318;
  t5846 = t5841 + t5844;
  t5826 = t5461 + t5480;
  t5555 = t3944*t5547;
  t5557 = t3923*t5493;
  t5558 = t1429*t5511;
  t5567 = t5555 + t5557 + t5558;
  t5616 = -1.*t3967*t5547;
  t5619 = -1.*t3912*t5493;
  t5620 = -1.*t3977*t5511;
  t5621 = t5616 + t5619 + t5620;
  t5649 = t3967*t5547;
  t5650 = t3912*t5493;
  t5652 = t3977*t5511;
  t5653 = t5649 + t5650 + t5652;
  t5684 = -1.*t5547*t4016;
  t5685 = -1.*t5493*t3874;
  t5686 = -1.*t5511*t4024;
  t5688 = t5684 + t5685 + t5686;
  t5749 = -1.*t3944*t5547;
  t5750 = -1.*t3923*t5493;
  t5752 = -1.*t1429*t5511;
  t5753 = t5749 + t5750 + t5752;
  t5795 = t5547*t4016;
  t5800 = t5493*t3874;
  t5803 = t5511*t4024;
  t5805 = t5795 + t5800 + t5803;
  t6119 = -0.15121*t984;
  t6148 = 0.15121*t957;
  t6150 = -1.*t984*t5428;
  t6151 = -1.*t957*t5446;
  t6154 = t6119 + t6148 + t6150 + t6151;
  t6131 = t6119 + t5393 + t5430 + t5449;
  t6165 = t858*t6154;
  t6180 = -1.*t6131*t1318;
  t6181 = t6165 + t6180;
  t6139 = t858*t6131;
  t6155 = t6154*t1318;
  t6156 = t6139 + t6155;
  t2608 = t2603*t855;
  t2693 = t837*t2685;
  t2698 = t2608 + t2693;
  t2504 = t1094*t855;
  t2592 = t837*t2588;
  t2595 = t2504 + t2592;
  t6567 = -0.03874900000062*t21;
  t6584 = 0.281210000008499*t1006;
  t6590 = 4.e-6*t21*t5324;
  t6592 = -1.000000000016*t1006*t5337;
  t6593 = -1.*t21*t5365;
  t6595 = t6567 + t6584 + t6590 + t6592 + t6593;
  t6607 = 1.124840000016e-6*t21;
  t6616 = 1.5499600000248e-7*t1006;
  t6619 = -1.6e-11*t1006*t5324;
  t6623 = -4.e-6*t21*t5337;
  t6626 = 4.e-6*t1006*t5365;
  t6627 = -1.2484e-7 + t6607 + t6616 + t6619 + t6623 + t6626;
  t6636 = t984*t6595;
  t6638 = -1.*t957*t6627;
  t6639 = t6636 + t6638;
  t6599 = t957*t6595;
  t6633 = t984*t6627;
  t6634 = t6599 + t6633;
  t6667 = -0.281210000004*t21;
  t6673 = t21*t5337;
  t6674 = -4.9936e-13 + t6667 + t5434 + t5436 + t6673 + t5444;
  t6677 = t858*t6639;
  t6682 = -1.*t6634*t1318;
  t6683 = t6677 + t6682;
  t6635 = t858*t6634;
  t6641 = t6639*t1318;
  t6643 = t6635 + t6641;
  t6676 = t6674*t855;
  t6687 = t837*t6683;
  t6692 = t6676 + t6687;
  t6703 = t837*t6674;
  t6705 = -1.*t855*t6683;
  t6706 = t6703 + t6705;
  t2724 = t2714*t855;
  t3213 = t837*t3205;
  t3218 = t2724 + t3213;
  t6900 = 0.00130540515936178*t135;
  t6902 = -0.2999969999968001*t1673;
  t6908 = t6900 + t6902;
  t6922 = -1.199987999968e-6*t135;
  t6929 = -5.2216206374471e-9*t1673;
  t6931 = -1.26e-8 + t6922 + t6929;
  t6941 = 0.299996999992*t135;
  t6944 = -5.04e-14 + t6941 + t5336;
  t6913 = -4.e-6*t1006*t6908;
  t6935 = t896*t6931;
  t6949 = 4.e-6*t109*t6944;
  t6951 = t6913 + t6935 + t6949;
  t6958 = t1856*t6908;
  t6960 = 4.e-6*t1006*t6931;
  t6961 = -1.*t1006*t6944;
  t6965 = t6958 + t6960 + t6961;
  t6982 = -1.*t957*t6951;
  t6985 = t984*t6965;
  t6990 = t6982 + t6985;
  t6957 = t984*t6951;
  t6977 = t957*t6965;
  t6978 = t6957 + t6977;
  t7000 = t1006*t6908;
  t7001 = 4.e-6*t109*t6931;
  t7019 = t21*t6944;
  t7022 = t7000 + t7001 + t7019;
  t7026 = t858*t6990;
  t7028 = -1.*t6978*t1318;
  t7032 = t7026 + t7028;
  t3358 = t3349*t855;
  t3586 = t837*t3576;
  t3597 = t3358 + t3586;
  t6979 = t858*t6978;
  t6992 = t6990*t1318;
  t6993 = t6979 + t6992;
  t7024 = t7022*t855;
  t7035 = t837*t7032;
  t7038 = t7024 + t7035;
  t7041 = t837*t7022;
  t7046 = -1.*t855*t7032;
  t7048 = t7041 + t7046;
  t3662 = t3654*t855;
  t3845 = t837*t3844;
  t3848 = t3662 + t3845;
  t5820 = t1418*t5547;
  t5828 = t3944*t5826;
  t5895 = -1.*t4181*t5547;
  t5896 = -1.*t3967*t5826;
  t5961 = t4181*t5547;
  t5962 = t3967*t5826;
  t6005 = -1.*t5826*t4016;
  t6014 = -1.*t5547*t4250;
  t6052 = -1.*t1418*t5547;
  t6061 = -1.*t3944*t5826;
  t6083 = t5826*t4016;
  t6084 = t5547*t4250;
  t6114 = t4285*t5547;
  t6157 = t3944*t6156;
  t7221 = t812*t5368;
  t7228 = t1418*t5481;
  t7229 = t7221 + t5555 + t7228;
  t6202 = -1.*t4320*t5547;
  t6206 = -1.*t3967*t6156;
  t7250 = -1.*t1781*t5368;
  t7253 = -1.*t1936*t5481;
  t7255 = t7250 + t5616 + t7253;
  t6238 = t4320*t5547;
  t6240 = t3967*t6156;
  t7292 = t1781*t5368;
  t7303 = t1936*t5481;
  t7305 = t7292 + t5649 + t7303;
  t6355 = -1.*t6156*t4016;
  t6356 = -1.*t5547*t4349;
  t7328 = -1.*t5368*t2035;
  t7331 = -1.*t5481*t2187;
  t7336 = t7328 + t5684 + t7331;
  t6443 = -1.*t4285*t5547;
  t6444 = -1.*t3944*t6156;
  t7413 = -1.*t812*t5368;
  t7414 = -1.*t1418*t5481;
  t7416 = t7413 + t5749 + t7414;
  t6474 = t6156*t4016;
  t6480 = t5547*t4349;
  t7464 = t5368*t2035;
  t7480 = t5481*t2187;
  t7507 = t7464 + t5795 + t7480;
  t6564 = t4414*t5547;
  t6647 = t3944*t6643;
  t6722 = -1.*t4463*t5547;
  t6727 = -1.*t3967*t6643;
  t6755 = t4463*t5547;
  t6756 = t3967*t6643;
  t6785 = -1.*t6643*t4016;
  t6792 = -1.*t5547*t4519;
  t6823 = -1.*t4414*t5547;
  t6826 = -1.*t3944*t6643;
  t6850 = t6643*t4016;
  t6851 = t5547*t4519;
  t6998 = t3944*t6993;
  t7066 = -1.*t6993*t3967;
  t7070 = -1.*t4661*t5547;
  t7106 = -1.*t3944*t6993;
  t7126 = t4715*t5547;
  t7127 = t6993*t4016;
  t7145 = t6993*t3967;
  t7146 = t4661*t5547;
  t7167 = -1.*t4715*t5547;
  t7168 = -1.*t6993*t4016;
  t7783 = -1.*t2603*t5368;
  t7787 = -1.*t1781*t6674;
  t7764 = t1094*t5368;
  t7765 = t812*t6674;
  t7917 = t6674*t2035;
  t7920 = t5368*t2714;
  t7890 = -1.*t1094*t5368;
  t7902 = -1.*t812*t6674;
  t7865 = -1.*t6674*t2035;
  t7866 = -1.*t5368*t2714;
  t7835 = t2603*t5368;
  t7836 = t1781*t6674;
  t7968 = -1.*t7022*t1781;
  t7969 = -1.*t3349*t5368;
  t8230 = t1203*t5456;
  t8232 = t1316*t5469;
  t8233 = t8230 + t8232 + t7221;
  t7952 = t812*t7022;
  t7997 = t3654*t5368;
  t7999 = t7022*t2035;
  t8283 = -1.*t1203*t5456;
  t8288 = -1.*t1316*t5469;
  t8291 = t8283 + t8288 + t7413;
  t7983 = -1.*t812*t7022;
  t8343 = -1.*t5456*t2148;
  t8346 = -1.*t5469*t2165;
  t8348 = t8343 + t8346 + t7328;
  t8363 = t1882*t5456;
  t8365 = t1916*t5469;
  t8369 = t8363 + t8365 + t7292;
  t8027 = -1.*t3654*t5368;
  t8029 = -1.*t7022*t2035;
  t8013 = t7022*t1781;
  t8015 = t3349*t5368;
  t8192 = -1.*t1882*t5456;
  t8193 = -1.*t1916*t5469;
  t8196 = t8192 + t8193 + t7250;
  t8240 = t5456*t2148;
  t8242 = t5469*t2165;
  t8243 = t8240 + t8242 + t7464;
  t8584 = t5277 + t5287 + t5294 + t5300 + t5328 + t5346 + t5367;
  t8856 = t929*t5428;
  t8857 = t812*t8584;
  t8859 = t1094*t5446;
  t8860 = t8856 + t8857 + t8859;
  t8660 = -1.*t929*t5428;
  t8678 = -1.*t812*t8584;
  t8701 = -1.*t1094*t5446;
  t8702 = t8660 + t8678 + t8701;
  t8763 = -1.*t5428*t2100;
  t8766 = -1.*t8584*t2035;
  t8769 = -1.*t5446*t2133;
  t8770 = t8763 + t8766 + t8769;
  t8790 = t1832*t5428;
  t8791 = t1781*t8584;
  t8794 = t1876*t5446;
  t8797 = t8790 + t8791 + t8794;
  t8804 = -1.*t1832*t5428;
  t8805 = -1.*t1781*t8584;
  t8807 = -1.*t1876*t5446;
  t8808 = t8804 + t8805 + t8807;
  t8582 = t5428*t2100;
  t8585 = t8584*t2035;
  t8586 = t5446*t2133;
  t8587 = t8582 + t8585 + t8586;
  t9099 = t5324*t3618;
  t9100 = t1979*t6931;
  t9101 = t3282*t5337;
  t9102 = t6908*t1990;
  t9105 = t3636*t5365;
  t9108 = t6944*t2005;
  t9109 = t9099 + t9100 + t9101 + t9102 + t9105 + t9108;
  t9117 = -1.*t551*t6931;
  t9118 = -1.*t755*t6944;
  t9120 = t9117 + t9118;
  t9112 = -1.*t551*t5324;
  t9113 = -1.*t755*t5365;
  t9115 = t9112 + t9113;
  t9234 = t1681*t6908;
  t9235 = t1741*t6931;
  t9236 = t5324*t3345;
  t9237 = t3328*t5337;
  t9238 = t6944*t1764;
  t9239 = t3282*t5365;
  t9240 = t9234 + t9235 + t9236 + t9237 + t9238 + t9239;
  t9202 = -1.*t5324*t3618;
  t9206 = -1.*t1979*t6931;
  t9213 = -1.*t3282*t5337;
  t9216 = -1.*t6908*t1990;
  t9222 = -1.*t3636*t5365;
  t9223 = -1.*t6944*t2005;
  t9229 = t9202 + t9206 + t9213 + t9216 + t9222 + t9223;
  t9188 = t5324*t1741;
  t9191 = t1681*t5337;
  t9192 = t1764*t5365;
  t9196 = t9188 + t9191 + t9192;
  t9172 = -1.*t1979*t5324;
  t9175 = -1.*t5337*t1990;
  t9178 = -1.*t5365*t2005;
  t9184 = t9172 + t9175 + t9178;
  t9260 = -1.*t1681*t6908;
  t9263 = -1.*t1741*t6931;
  t9266 = -1.*t5324*t3345;
  t9268 = -1.*t3328*t5337;
  t9271 = -1.*t6944*t1764;
  t9272 = -1.*t3282*t5365;
  t9273 = t9260 + t9263 + t9266 + t9268 + t9271 + t9272;
  t9287 = t551*t6931;
  t9291 = t755*t6944;
  t9292 = t9287 + t9291;
  t9279 = t551*t5324;
  t9282 = t755*t5365;
  t9283 = t9279 + t9282;
  t9320 = -1.*t5324*t1741;
  t9323 = -1.*t1681*t5337;
  t9326 = -1.*t1764*t5365;
  t9327 = t9320 + t9323 + t9326;
  t9344 = t1979*t5324;
  t9345 = t5337*t1990;
  t9349 = t5365*t2005;
  t9350 = t9344 + t9345 + t9349;
  p_output1[0]=t2193*var2[0] + t1941*var2[1] + t1429*var2[2];
  p_output1[1]=t2342*t837*var2[0] + t2325*t837*var2[1] + t2255*t837*var2[2];
  p_output1[2]=t2481*t837*var2[0] + t2440*t837*var2[1] + t2377*t837*var2[2];
  p_output1[3]=t3218*var2[0] + t2698*var2[1] + t2595*var2[2];
  p_output1[4]=t3848*var2[0] + t3597*var2[1];
  p_output1[5]=t3874;
  p_output1[6]=t3912;
  p_output1[7]=t3923;
  p_output1[8]=(-1.*t3925*t4016 - 1.*t3950*t4024)*var2[0] + (-1.*t3925*t3967 - 1.*t3950*t3977)*var2[1] + (-1.*t3925*t3944 - 1.*t1429*t3950)*var2[2];
  p_output1[9]=-1.*t3925*t4143*var2[0] - 1.*t3925*t4129*var2[1] - 1.*t3925*t4106*var2[2];
  p_output1[10]=(t3950*t4250 + t2342*t3925*t855)*var2[0] + (t3950*t4181 + t2325*t3925*t855)*var2[1] + (t1418*t3950 + t2255*t3925*t855)*var2[2];
  p_output1[11]=(t3950*t4349 + t2481*t3925*t855)*var2[0] + (t3950*t4320 + t2440*t3925*t855)*var2[1] + (t3950*t4285 + t2377*t3925*t855)*var2[2];
  p_output1[12]=(t3950*t4519 - 1.*t3925*t4563)*var2[0] + (t3950*t4463 - 1.*t3925*t4487)*var2[1] + (t3950*t4414 - 1.*t3925*t4420)*var2[2];
  p_output1[13]=(t3950*t4715 - 1.*t3925*t4728)*var2[0] + (t3950*t4661 - 1.*t3925*t4671)*var2[1];
  p_output1[14]=0. + t4742 + t4747;
  p_output1[15]=0. + t4752 + t4754;
  p_output1[16]=t4793;
  p_output1[17]=(t4742 + t4747)*var2[0] + (t4752 + t4754)*var2[1] + t4793*var2[2];
  p_output1[18]=t3950*t4143*var2[0] + t3950*t4129*var2[1] + t3950*t4106*var2[2];
  p_output1[19]=(t3925*t4250 - 1.*t2342*t3950*t855)*var2[0] + (t3925*t4181 - 1.*t2325*t3950*t855)*var2[1] + (t1418*t3925 - 1.*t2255*t3950*t855)*var2[2];
  p_output1[20]=(t3925*t4349 - 1.*t2481*t3950*t855)*var2[0] + (t3925*t4320 - 1.*t2440*t3950*t855)*var2[1] + (t3925*t4285 - 1.*t2377*t3950*t855)*var2[2];
  p_output1[21]=(t3925*t4519 + t3950*t4563)*var2[0] + (t3925*t4463 + t3950*t4487)*var2[1] + (t3925*t4414 + t3950*t4420)*var2[2];
  p_output1[22]=(t3925*t4715 + t3950*t4728)*var2[0] + (t3925*t4661 + t3950*t4671)*var2[1];
  p_output1[23]=0. + t3925*t4016 + t3950*t4024;
  p_output1[24]=0. + t3925*t3967 + t3950*t3977;
  p_output1[25]=t3925*t3944 + t1429*t3950;
  p_output1[26]=(t3912*(t1429*t5487 + t1429*t5493 + t3923*t5505 + t4106*t5511) + t3923*(-1.*t3977*t5487 - 1.*t1941*t5493 - 1.*t3912*t5505 - 1.*t4129*t5511) + t1941*t5567 + t1429*t5621)*var2[0] + (t3874*(-1.*t1429*t5487 - 1.*t1429*t5493 - 1.*t3923*t5505 - 1.*t4106*t5511) + t3923*(t4024*t5487 + t2193*t5493 + t3874*t5505 + t4143*t5511) + t2193*t5753 + t1429*t5805)*var2[1] + (t3874*(t3977*t5487 + t1941*t5493 + t3912*t5505 + t4129*t5511) + t3912*(-1.*t4024*t5487 - 1.*t2193*t5493 - 1.*t3874*t5505 - 1.*t4143*t5511) + t2193*t5653 + t1941*t5688)*var2[2];
  p_output1[27]=(t2325*t5567*t837 + t2255*t5621*t837 + t3912*(t5820 + t5828 + t2255*t5493*t837 + t3923*t5846*t837 - 1.*t2255*t5511*t855 - 1.*t1429*t5846*t855) + t3923*(t5895 + t5896 - 1.*t2325*t5493*t837 - 1.*t3912*t5846*t837 + t2325*t5511*t855 + t3977*t5846*t855))*var2[0] + (t2342*t5753*t837 + t2255*t5805*t837 + t3874*(t6052 + t6061 - 1.*t2255*t5493*t837 - 1.*t3923*t5846*t837 + t2255*t5511*t855 + t1429*t5846*t855) + t3923*(t6083 + t6084 + t2342*t5493*t837 + t3874*t5846*t837 - 1.*t2342*t5511*t855 - 1.*t4024*t5846*t855))*var2[1] + (t2342*t5653*t837 + t2325*t5688*t837 + t3874*(t5961 + t5962 + t2325*t5493*t837 + t3912*t5846*t837 - 1.*t2325*t5511*t855 - 1.*t3977*t5846*t855) + t3912*(t6005 + t6014 - 1.*t2342*t5493*t837 - 1.*t3874*t5846*t837 + t2342*t5511*t855 + t4024*t5846*t855))*var2[2];
  p_output1[28]=(t2440*t5567*t837 + t2377*t5621*t837 + t3912*(t6114 + t6157 + t2377*t5493*t837 + t3923*t6181*t837 - 1.*t2377*t5511*t855 - 1.*t1429*t6181*t855) + t3923*(t6202 + t6206 - 1.*t2440*t5493*t837 - 1.*t3912*t6181*t837 + t2440*t5511*t855 + t3977*t6181*t855))*var2[0] + (t2481*t5753*t837 + t2377*t5805*t837 + t3874*(t6443 + t6444 - 1.*t2377*t5493*t837 - 1.*t3923*t6181*t837 + t2377*t5511*t855 + t1429*t6181*t855) + t3923*(t6474 + t6480 + t2481*t5493*t837 + t3874*t6181*t837 - 1.*t2481*t5511*t855 - 1.*t4024*t6181*t855))*var2[1] + (t2481*t5653*t837 + t2440*t5688*t837 + t3874*(t6238 + t6240 + t2440*t5493*t837 + t3912*t6181*t837 - 1.*t2440*t5511*t855 - 1.*t3977*t6181*t855) + t3912*(t6355 + t6356 - 1.*t2481*t5493*t837 - 1.*t3874*t6181*t837 + t2481*t5511*t855 + t4024*t6181*t855))*var2[2];
  p_output1[29]=(t2698*t5567 + t2595*t5621 + t3912*(t2595*t5493 + t4420*t5511 + t6564 + t6647 + t3923*t6692 + t1429*t6706) + t3923*(-1.*t2698*t5493 - 1.*t4487*t5511 - 1.*t3912*t6692 - 1.*t3977*t6706 + t6722 + t6727))*var2[0] + (t3218*t5753 + t2595*t5805 + t3874*(-1.*t2595*t5493 - 1.*t4420*t5511 - 1.*t3923*t6692 - 1.*t1429*t6706 + t6823 + t6826) + t3923*(t3218*t5493 + t4563*t5511 + t3874*t6692 + t4024*t6706 + t6850 + t6851))*var2[1] + (t3218*t5653 + t2698*t5688 + t3874*(t2698*t5493 + t4487*t5511 + t3912*t6692 + t3977*t6706 + t6755 + t6756) + t3912*(-1.*t3218*t5493 - 1.*t4563*t5511 - 1.*t3874*t6692 - 1.*t4024*t6706 + t6785 + t6792))*var2[2];
  p_output1[30]=(t3597*t5567 + t3912*(t6998 + t3923*t7038 + t1429*t7048) + t3923*(-1.*t3597*t5493 - 1.*t4671*t5511 - 1.*t3912*t7038 - 1.*t3977*t7048 + t7066 + t7070))*var2[0] + (t3848*t5753 + t3874*(-1.*t3923*t7038 - 1.*t1429*t7048 + t7106) + t3923*(t3848*t5493 + t4728*t5511 + t3874*t7038 + t4024*t7048 + t7126 + t7127))*var2[1] + (t3848*t5653 + t3597*t5688 + t3874*(t3597*t5493 + t4671*t5511 + t3912*t7038 + t3977*t7048 + t7145 + t7146) + t3912*(-1.*t3848*t5493 - 1.*t4728*t5511 - 1.*t3874*t7038 - 1.*t4024*t7048 + t7167 + t7168))*var2[2];
  p_output1[31]=t3912*t5567 + t3923*t5621;
  p_output1[32]=t3874*t5753 + t3923*t5805;
  p_output1[33]=t3874*t5653 + t3912*t5688;
  p_output1[34]=(t3967*(t2255*t5481 + t5820 + t5828 + t1418*t5846) + t3944*(-1.*t2325*t5481 - 1.*t1936*t5846 + t5895 + t5896) + t4181*t7229 + t1418*t7255)*var2[0] + (t4016*(-1.*t2255*t5481 - 1.*t1418*t5846 + t6052 + t6061) + t3944*(t2342*t5481 + t2187*t5846 + t6083 + t6084) + t4250*t7416 + t1418*t7507)*var2[1] + (t4016*(t2325*t5481 + t1936*t5846 + t5961 + t5962) + t3967*(-1.*t2342*t5481 - 1.*t2187*t5846 + t6005 + t6014) + t4250*t7305 + t4181*t7336)*var2[2];
  p_output1[35]=(t3967*(t2377*t5481 + t6114 + t6157 + t1418*t6181) + t3944*(-1.*t2440*t5481 - 1.*t1936*t6181 + t6202 + t6206) + t4320*t7229 + t4285*t7255)*var2[0] + (t4016*(-1.*t2377*t5481 - 1.*t1418*t6181 + t6443 + t6444) + t3944*(t2481*t5481 + t2187*t6181 + t6474 + t6480) + t4349*t7416 + t4285*t7507)*var2[1] + (t4016*(t2440*t5481 + t1936*t6181 + t6238 + t6240) + t3967*(-1.*t2481*t5481 - 1.*t2187*t6181 + t6355 + t6356) + t4349*t7305 + t4320*t7336)*var2[2];
  p_output1[36]=(t4463*t7229 + t4414*t7255 + t3967*(t2588*t5481 + t6564 + t6647 + t1418*t6683 + t7764 + t7765) + t3944*(-1.*t2685*t5481 - 1.*t1936*t6683 + t6722 + t6727 + t7783 + t7787))*var2[0] + (t4519*t7416 + t4414*t7507 + t4016*(-1.*t2588*t5481 - 1.*t1418*t6683 + t6823 + t6826 + t7890 + t7902) + t3944*(t3205*t5481 + t2187*t6683 + t6850 + t6851 + t7917 + t7920))*var2[1] + (t4519*t7305 + t4463*t7336 + t4016*(t2685*t5481 + t1936*t6683 + t6755 + t6756 + t7835 + t7836) + t3967*(-1.*t3205*t5481 - 1.*t2187*t6683 + t6785 + t6792 + t7865 + t7866))*var2[2];
  p_output1[37]=(t4661*t7229 + t3967*(t6998 + t1418*t7032 + t7952) + t3944*(-1.*t3576*t5481 - 1.*t1936*t7032 + t7066 + t7070 + t7968 + t7969))*var2[0] + (t4715*t7416 + t4016*(-1.*t1418*t7032 + t7106 + t7983) + t3944*(t3844*t5481 + t2187*t7032 + t7126 + t7127 + t7997 + t7999))*var2[1] + (t4715*t7305 + t4661*t7336 + t4016*(t3576*t5481 + t1936*t7032 + t7145 + t7146 + t8013 + t8015) + t3967*(-1.*t3844*t5481 - 1.*t2187*t7032 + t7167 + t7168 + t8027 + t8029))*var2[2];
  p_output1[38]=t3967*t7229 + t3944*t7255;
  p_output1[39]=t4016*t7416 + t3944*t7507;
  p_output1[40]=t4016*t7305 + t3967*t7336;
  p_output1[41]=(t1781*(t2362*t5456 + t1203*t5469 + t1316*t6131 + t1203*t6154) + (-1.*t2406*t5456 - 1.*t2414*t5469 - 1.*t1916*t6131 - 1.*t1882*t6154)*t812)*var2[0] + (t2035*(-1.*t2362*t5456 - 1.*t1203*t5469 - 1.*t1316*t6131 - 1.*t1203*t6154) + (t2458*t5456 + t2470*t5469 + t2165*t6131 + t2148*t6154)*t812)*var2[1] + (t2035*(t2406*t5456 + t2414*t5469 + t1916*t6131 + t1882*t6154) + t1781*(-1.*t2458*t5456 - 1.*t2470*t5469 - 1.*t2165*t6131 - 1.*t2148*t6154))*var2[2];
  p_output1[42]=(t1781*(t2544*t5456 + t2581*t5469 + t1316*t6634 + t1203*t6639 + t7764 + t7765) + (-1.*t2660*t5456 - 1.*t2674*t5469 - 1.*t1916*t6634 - 1.*t1882*t6639 + t7783 + t7787)*t812 + t1094*t8196 + t2603*t8233)*var2[0] + (t2035*(-1.*t2544*t5456 - 1.*t2581*t5469 - 1.*t1316*t6634 - 1.*t1203*t6639 + t7890 + t7902) + (t3035*t5456 + t3152*t5469 + t2165*t6634 + t2148*t6639 + t7917 + t7920)*t812 + t1094*t8243 + t2714*t8291)*var2[1] + (t2035*(t2660*t5456 + t2674*t5469 + t1916*t6634 + t1882*t6639 + t7835 + t7836) + t1781*(-1.*t3035*t5456 - 1.*t3152*t5469 - 1.*t2165*t6634 - 1.*t2148*t6639 + t7865 + t7866) + t2603*t8348 + t2714*t8369)*var2[2];
  p_output1[43]=(t1781*(t1316*t6978 + t1203*t6990 + t7952) + (-1.*t3538*t5456 - 1.*t3555*t5469 - 1.*t1916*t6978 - 1.*t1882*t6990 + t7968 + t7969)*t812 + t3349*t8233)*var2[0] + (t2035*(-1.*t1316*t6978 - 1.*t1203*t6990 + t7983) + (t3788*t5456 + t3796*t5469 + t2165*t6978 + t2148*t6990 + t7997 + t7999)*t812 + t3654*t8291)*var2[1] + (t2035*(t3538*t5456 + t3555*t5469 + t1916*t6978 + t1882*t6990 + t8013 + t8015) + t1781*(-1.*t3788*t5456 - 1.*t3796*t5469 - 1.*t2165*t6978 - 1.*t2148*t6990 + t8027 + t8029) + t3349*t8348 + t3654*t8369)*var2[2];
  p_output1[44]=t812*t8196 + t1781*t8233;
  p_output1[45]=t812*t8243 + t2035*t8291;
  p_output1[46]=t1781*t8348 + t2035*t8369;
  p_output1[47]=(-0.15121*t2854 - 0.15121*t3018 + t812*(-1.*t2657*t5428 - 1.*t2632*t5446 - 1.*t1876*t6595 - 1.*t1832*t6627 + t7787 - 1.*t2603*t8584) + t1094*t8808 + t2603*t8860 + t1781*(t2535*t5428 + t2519*t5446 + t1094*t6595 + t7765 + t1094*t8584 + t6627*t929))*var2[0] + (-0.15121*t2632 - 0.15121*t2657 + t812*(t3018*t5428 + t2854*t5446 + t2133*t6595 + t2100*t6627 + t7917 + t2714*t8584) + t1094*t8587 + t2714*t8702 + t2035*(-1.*t2535*t5428 - 1.*t2519*t5446 - 1.*t1094*t6595 + t7902 - 1.*t1094*t8584 - 1.*t6627*t929))*var2[1] + (-0.15121*t2519 - 0.15121*t2535 + t2035*(t2657*t5428 + t2632*t5446 + t1876*t6595 + t1832*t6627 + t7836 + t2603*t8584) + t1781*(-1.*t3018*t5428 - 1.*t2854*t5446 - 1.*t2133*t6595 - 1.*t2100*t6627 + t7865 - 1.*t2714*t8584) + t2603*t8770 + t2714*t8797)*var2[2];
  p_output1[48]=(-0.15121*t3761 - 0.15121*t3783 + t812*(-1.*t3398*t5428 - 1.*t3520*t5446 - 1.*t1832*t6951 - 1.*t1876*t6965 + t7968 - 1.*t3349*t8584) + t3349*t8860 + t1781*(t1094*t6965 + t7952 + t6951*t929))*var2[0] + (-0.15121*t3398 - 0.15121*t3520 + t812*(t3761*t5428 + t3783*t5446 + t2100*t6951 + t2133*t6965 + t7999 + t3654*t8584) + t3654*t8702 + t2035*(-1.*t1094*t6965 + t7983 - 1.*t6951*t929))*var2[1] + (t2035*(t3398*t5428 + t3520*t5446 + t1832*t6951 + t1876*t6965 + t8013 + t3349*t8584) + t1781*(-1.*t3761*t5428 - 1.*t3783*t5446 - 1.*t2100*t6951 - 1.*t2133*t6965 + t8029 - 1.*t3654*t8584) + t3349*t8770 + t3654*t8797)*var2[2];
  p_output1[49]=-0.15121*t2100 - 0.15121*t2133 + t812*t8808 + t1781*t8860;
  p_output1[50]=-0.15121*t1832 - 0.15121*t1876 + t812*t8587 + t2035*t8702;
  p_output1[51]=-0.15121*t1094 + t1781*t8770 + t2035*t8797 - 0.15121*t929;
  p_output1[52]=(-0.038749*t3282 + 1.e-6*t3618 - 0.28121*t3636 - 1.*t551*t9273 - 1.*t3345*t9283 - 1.*t1741*t9292 + 4.e-6*(-1.*t755*t9273 - 1.*t3282*t9283 - 1.*t1764*t9292))*var2[0] + (-0.28121*t3282 - 0.038749*t3328 + 1.e-6*t3345 - 1.*t551*t9109 - 1.*t3618*t9115 - 1.*t1979*t9120 + 4.e-6*(-1.*t755*t9109 - 1.*t3636*t9115 - 1.*t2005*t9120))*var2[1] + (-1.*t3345*t9184 - 1.*t3618*t9196 - 1.*t1741*t9229 - 1.*t1979*t9240 + 4.e-6*(-1.*t3282*t9184 - 1.*t3636*t9196 - 1.*t1764*t9229 - 1.*t2005*t9240))*var2[2];
  p_output1[53]=1.e-6*t1979 - 0.038749*t1990 - 0.28121*t2005 - 1.*t1741*t9283 - 1.*t551*t9327 + 4.e-6*(-1.*t1764*t9283 - 1.*t755*t9327);
  p_output1[54]=-0.038749*t1681 + 1.e-6*t1741 - 0.28121*t1764 - 1.*t1979*t9115 - 1.*t551*t9350 + 4.e-6*(-1.*t2005*t9115 - 1.*t755*t9350);
  p_output1[55]=1.e-6*t551 - 0.28121*t755 - 1.*t1741*t9184 - 1.*t1979*t9196 + 4.e-6*(-1.*t1764*t9184 - 1.*t2005*t9196);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fFrFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
