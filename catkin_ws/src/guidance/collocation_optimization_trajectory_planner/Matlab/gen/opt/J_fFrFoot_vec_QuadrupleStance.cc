/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 22:33:03 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t292;
  double t265;
  double t420;
  double t298;
  double t316;
  double t335;
  double t499;
  double t525;
  double t270;
  double t278;
  double t544;
  double t546;
  double t734;
  double t1304;
  double t1283;
  double t1035;
  double t1057;
  double t1091;
  double t1135;
  double t1202;
  double t1248;
  double t1259;
  double t1305;
  double t1347;
  double t1436;
  double t831;
  double t1791;
  double t861;
  double t866;
  double t1738;
  double t1764;
  double t1775;
  double t1799;
  double t1897;
  double t2199;
  double t2206;
  double t2219;
  double t2520;
  double t2545;
  double t2586;
  double t2676;
  double t2773;
  double t2885;
  double t2929;
  double t2931;
  double t2937;
  double t2944;
  double t2952;
  double t2957;
  double t2976;
  double t2980;
  double t2984;
  double t1529;
  double t3082;
  double t3090;
  double t3092;
  double t3097;
  double t3108;
  double t3110;
  double t3112;
  double t3128;
  double t3163;
  double t3164;
  double t3166;
  double t3177;
  double t3185;
  double t3190;
  double t3193;
  double t3206;
  double t1509;
  double t1510;
  double t1514;
  double t1277;
  double t1493;
  double t1495;
  double t3035;
  double t3057;
  double t3062;
  double t2942;
  double t3003;
  double t3011;
  double t3252;
  double t3262;
  double t3264;
  double t3180;
  double t3223;
  double t3224;
  double t3347;
  double t3526;
  double t3538;
  double t3540;
  double t3547;
  double t3548;
  double t3549;
  double t3612;
  double t3613;
  double t3614;
  double t3617;
  double t3622;
  double t3623;
  double t3634;
  double t3637;
  double t3723;
  double t3724;
  double t3757;
  double t3766;
  double t3774;
  double t3881;
  double t3882;
  double t3883;
  double t4019;
  double t4020;
  double t4041;
  double t4051;
  double t4052;
  double t4067;
  double t4068;
  double t4070;
  double t4131;
  double t4132;
  double t4136;
  double t4146;
  double t4153;
  double t4155;
  double t4157;
  double t4169;
  double t4223;
  double t4225;
  double t4256;
  double t4304;
  double t4314;
  double t4316;
  double t4317;
  double t4319;
  double t4322;
  double t4323;
  double t4338;
  double t3096;
  double t3109;
  double t3132;
  double t3138;
  double t3225;
  double t3278;
  double t3293;
  double t2125;
  double t2553;
  double t2774;
  double t2818;
  double t3019;
  double t3065;
  double t3067;
  double t541;
  double t825;
  double t826;
  double t1507;
  double t1539;
  double t1669;
  double t856;
  double t1695;
  double t1722;
  double t4421;
  double t4434;
  double t2839;
  double t3068;
  double t3151;
  double t3304;
  double t3330;
  double t3363;
  double t3377;
  double t3380;
  double t3396;
  double t3403;
  double t3406;
  double t3413;
  double t3445;
  double t3450;
  double t3451;
  double t3470;
  double t3477;
  double t3480;
  double t3482;
  double t3483;
  double t3484;
  double t3485;
  double t3490;
  double t3492;
  double t3497;
  double t3498;
  double t3504;
  double t3505;
  double t3506;
  double t3509;
  double t3510;
  double t3561;
  double t3570;
  double t3578;
  double t3545;
  double t3550;
  double t3554;
  double t3556;
  double t3583;
  double t3586;
  double t3643;
  double t3644;
  double t3645;
  double t3620;
  double t3638;
  double t3640;
  double t3605;
  double t3606;
  double t3641;
  double t3648;
  double t3649;
  double t3909;
  double t3926;
  double t3968;
  double t3771;
  double t3890;
  double t3894;
  double t3658;
  double t3666;
  double t3908;
  double t3998;
  double t4000;
  double t4193;
  double t4194;
  double t4195;
  double t4152;
  double t4175;
  double t4176;
  double t4040;
  double t4053;
  double t4072;
  double t4109;
  double t4191;
  double t4197;
  double t4211;
  double t4342;
  double t4343;
  double t4344;
  double t4318;
  double t4339;
  double t4340;
  double t4220;
  double t4234;
  double t4263;
  double t4265;
  double t4341;
  double t4345;
  double t4349;
  double t4501;
  double t4503;
  double t4504;
  double t4563;
  double t4453;
  double t4455;
  double t4464;
  double t4484;
  double t4422;
  double t4424;
  double t4427;
  double t5039;
  double t5162;
  double t5165;
  double t5011;
  double t5017;
  double t4994;
  double t5000;
  double t4572;
  double t4573;
  double t4574;
  double t4586;
  double t4588;
  double t4589;
  double t4591;
  double t4593;
  double t4594;
  double t4612;
  double t4649;
  double t4693;
  double t4694;
  double t4723;
  double t4726;
  double t4732;
  double t4759;
  double t4777;
  double t4778;
  double t4838;
  double t4852;
  double t4859;
  double t4869;
  double t4873;
  double t4875;
  double t4880;
  double t4892;
  double t4893;
  double t4895;
  double t4896;
  double t4897;
  double t4904;
  double t4909;
  double t4911;
  double t4916;
  double t4918;
  double t4919;
  double t4928;
  double t4930;
  double t4931;
  double t4934;
  double t4936;
  double t4937;
  double t4953;
  double t4955;
  double t4959;
  double t4964;
  double t4966;
  double t4973;
  double t4392;
  double t4394;
  double t4395;
  double t5387;
  double t5389;
  double t5394;
  double t5395;
  double t5396;
  double t5400;
  double t5401;
  double t5403;
  double t5404;
  double t5405;
  double t5406;
  double t5408;
  double t5414;
  double t5415;
  double t5416;
  double t5417;
  double t5420;
  double t5424;
  double t5427;
  double t5434;
  double t5435;
  double t5436;
  double t5437;
  double t5438;
  double t5441;
  double t5444;
  double t5448;
  double t5449;
  double t5451;
  double t5452;
  double t5453;
  double t5456;
  double t5460;
  double t5464;
  double t5377;
  double t5380;
  double t5383;
  double t5384;
  double t5402;
  double t5407;
  double t5421;
  double t5422;
  double t5430;
  double t5450;
  double t5465;
  double t5467;
  double t5469;
  double t5473;
  double t5487;
  double t5494;
  double t5497;
  double t5499;
  double t5500;
  double t4408;
  double t4418;
  double t4420;
  double t5520;
  double t5523;
  double t3071;
  double t5511;
  double t5512;
  double t5516;
  double t5529;
  double t5423;
  double t5502;
  double t5503;
  double t5524;
  double t5551;
  double t5557;
  double t5559;
  double t4368;
  double t4382;
  double t4388;
  double t3305;
  double t5780;
  double t5781;
  double t5784;
  double t5776;
  double t5564;
  double t5566;
  double t5567;
  double t5570;
  double t5607;
  double t5609;
  double t5613;
  double t5623;
  double t5646;
  double t5647;
  double t5648;
  double t5651;
  double t5678;
  double t5679;
  double t5690;
  double t5697;
  double t5726;
  double t5727;
  double t5729;
  double t5731;
  double t5754;
  double t5759;
  double t5760;
  double t5761;
  double t5980;
  double t5990;
  double t5991;
  double t5997;
  double t5998;
  double t5986;
  double t6008;
  double t6010;
  double t6012;
  double t5989;
  double t5999;
  double t6000;
  double t3609;
  double t3651;
  double t3654;
  double t3522;
  double t3588;
  double t3596;
  double t6143;
  double t6145;
  double t6146;
  double t6147;
  double t6149;
  double t6150;
  double t6156;
  double t6157;
  double t6158;
  double t6160;
  double t6162;
  double t6164;
  double t6169;
  double t6170;
  double t6171;
  double t6154;
  double t6166;
  double t6167;
  double t6183;
  double t6184;
  double t6185;
  double t6187;
  double t6188;
  double t6189;
  double t6168;
  double t6172;
  double t6176;
  double t6186;
  double t6190;
  double t6195;
  double t6205;
  double t6206;
  double t6207;
  double t3680;
  double t4001;
  double t4005;
  double t6288;
  double t6289;
  double t6290;
  double t6299;
  double t6301;
  double t6304;
  double t6306;
  double t6307;
  double t6296;
  double t6305;
  double t6308;
  double t6309;
  double t6316;
  double t6319;
  double t6324;
  double t6325;
  double t6329;
  double t6331;
  double t6336;
  double t6315;
  double t6326;
  double t6327;
  double t6348;
  double t6349;
  double t6351;
  double t6362;
  double t6368;
  double t6372;
  double t6373;
  double t4129;
  double t4215;
  double t4216;
  double t6328;
  double t6345;
  double t6346;
  double t6365;
  double t6374;
  double t6375;
  double t6380;
  double t6381;
  double t6383;
  double t4303;
  double t4350;
  double t4356;
  double t5774;
  double t5779;
  double t5833;
  double t5834;
  double t5854;
  double t5856;
  double t5878;
  double t5880;
  double t5915;
  double t5918;
  double t5942;
  double t5943;
  double t5979;
  double t6007;
  double t6656;
  double t6657;
  double t6661;
  double t6034;
  double t6037;
  double t6674;
  double t6678;
  double t6682;
  double t6064;
  double t6068;
  double t6698;
  double t6699;
  double t6702;
  double t6078;
  double t6079;
  double t6710;
  double t6711;
  double t6714;
  double t6095;
  double t6097;
  double t6727;
  double t6728;
  double t6729;
  double t6113;
  double t6117;
  double t6743;
  double t6747;
  double t6748;
  double t6141;
  double t6177;
  double t6214;
  double t6215;
  double t6229;
  double t6230;
  double t6242;
  double t6244;
  double t6255;
  double t6256;
  double t6265;
  double t6266;
  double t6347;
  double t6438;
  double t6439;
  double t6465;
  double t6505;
  double t6506;
  double t6584;
  double t6587;
  double t6599;
  double t6606;
  double t6844;
  double t6845;
  double t6837;
  double t6839;
  double t6908;
  double t6910;
  double t6891;
  double t6892;
  double t6864;
  double t6865;
  double t6855;
  double t6856;
  double t6954;
  double t6958;
  double t7153;
  double t7154;
  double t7155;
  double t6929;
  double t6994;
  double t6995;
  double t7206;
  double t7208;
  double t7210;
  double t6982;
  double t7250;
  double t7252;
  double t7257;
  double t7272;
  double t7273;
  double t7274;
  double t7014;
  double t7015;
  double t7005;
  double t7006;
  double t7137;
  double t7138;
  double t7139;
  double t7161;
  double t7162;
  double t7165;
  double t7381;
  double t7504;
  double t7506;
  double t7507;
  double t7508;
  double t7412;
  double t7413;
  double t7414;
  double t7415;
  double t7432;
  double t7435;
  double t7436;
  double t7440;
  double t7455;
  double t7456;
  double t7457;
  double t7460;
  double t7468;
  double t7469;
  double t7470;
  double t7471;
  double t7378;
  double t7382;
  double t7383;
  double t7388;
  double t7621;
  double t7622;
  double t7623;
  double t7624;
  double t7625;
  double t7626;
  double t7627;
  double t7634;
  double t7635;
  double t7636;
  double t7630;
  double t7631;
  double t7632;
  double t7674;
  double t7675;
  double t7677;
  double t7678;
  double t7679;
  double t7682;
  double t7683;
  double t7660;
  double t7661;
  double t7662;
  double t7664;
  double t7666;
  double t7669;
  double t7670;
  double t7655;
  double t7656;
  double t7657;
  double t7658;
  double t7650;
  double t7651;
  double t7652;
  double t7653;
  double t7695;
  double t7696;
  double t7697;
  double t7698;
  double t7699;
  double t7700;
  double t7701;
  double t7708;
  double t7709;
  double t7710;
  double t7703;
  double t7704;
  double t7705;
  double t7735;
  double t7736;
  double t7737;
  double t7738;
  double t7756;
  double t7758;
  double t7759;
  double t7760;
  t292 = Cos(var1[11]);
  t265 = Cos(var1[10]);
  t420 = -1. + t292;
  t298 = -1.*t292;
  t316 = 1. + t298;
  t335 = 1.6e-11*t316;
  t499 = 1.6e-11*t420;
  t525 = -1. + t335 + t499;
  t270 = -1.*t265;
  t278 = 1. + t270;
  t544 = 4.e-6*t420;
  t546 = -4.e-6*t292;
  t734 = t544 + t546;
  t1304 = Sin(var1[10]);
  t1283 = Cos(var1[9]);
  t1035 = -1. + t265;
  t1057 = 1.6e-11*t1035;
  t1091 = 1. + t1057;
  t1135 = t1091*t525;
  t1202 = 4.e-6*t278*t734;
  t1248 = t1135 + t1202;
  t1259 = Sin(var1[9]);
  t1305 = 4.e-6*t525*t1304;
  t1347 = -1.*t734*t1304;
  t1436 = t1305 + t1347;
  t831 = Cos(var1[4]);
  t1791 = Sin(var1[11]);
  t861 = Sin(var1[4]);
  t866 = Cos(var1[5]);
  t1738 = -1.000000000016*t316;
  t1764 = 1. + t1738;
  t1775 = 0.004352*t1764;
  t1799 = -0.9999910000159999*t1791;
  t1897 = t1775 + t1799;
  t2199 = -1. + t335;
  t2206 = 4.e-6*t2199;
  t2219 = 3.999964e-6*t316;
  t2520 = -1.7408e-8*t1791;
  t2545 = t2206 + t2219 + t2520;
  t2586 = 0.999991*t292;
  t2676 = 0.004352*t1791;
  t2773 = t499 + t2586 + t2676;
  t2885 = -4.e-6*t1304*t1897;
  t2929 = t1091*t2545;
  t2931 = 4.e-6*t278*t2773;
  t2937 = 0. + t2885 + t2929 + t2931;
  t2944 = -1.000000000016*t278;
  t2952 = 1. + t2944;
  t2957 = t2952*t1897;
  t2976 = 4.e-6*t1304*t2545;
  t2980 = -1.*t1304*t2773;
  t2984 = 0. + t2957 + t2976 + t2980;
  t1529 = Sin(var1[5]);
  t3082 = -1.7408e-8*t316;
  t3090 = -3.999964e-6*t1791;
  t3092 = t3082 + t3090;
  t3097 = 0.999991*t1764;
  t3108 = t3097 + t2676;
  t3110 = -0.004352*t292;
  t3112 = 0.999991*t1791;
  t3128 = t3110 + t3112;
  t3163 = t1091*t3092;
  t3164 = -4.e-6*t1304*t3108;
  t3166 = 4.e-6*t278*t3128;
  t3177 = 0. + t3163 + t3164 + t3166;
  t3185 = 4.e-6*t1304*t3092;
  t3190 = t2952*t3108;
  t3193 = -1.*t1304*t3128;
  t3206 = 0. + t3185 + t3190 + t3193;
  t1509 = t1283*t1248;
  t1510 = t1259*t1436;
  t1514 = t1509 + t1510;
  t1277 = -1.*t1248*t1259;
  t1493 = t1283*t1436;
  t1495 = t1277 + t1493;
  t3035 = t1283*t2937;
  t3057 = t1259*t2984;
  t3062 = 0. + t3035 + t3057;
  t2942 = -1.*t1259*t2937;
  t3003 = t1283*t2984;
  t3011 = 0. + t2942 + t3003;
  t3252 = t1283*t3177;
  t3262 = t1259*t3206;
  t3264 = 0. + t3252 + t3262;
  t3180 = -1.*t1259*t3177;
  t3223 = t1283*t3206;
  t3224 = 0. + t3180 + t3223;
  t3347 = -1.*t1495*t1529;
  t3526 = 4.e-6*t265*t525;
  t3538 = -1.*t265*t734;
  t3540 = t3526 + t3538;
  t3547 = -1.6e-11*t525*t1304;
  t3548 = 4.e-6*t734*t1304;
  t3549 = t3547 + t3548;
  t3612 = -1.000000000016*t1304*t1897;
  t3613 = 4.e-6*t265*t2545;
  t3614 = -1.*t265*t2773;
  t3617 = t3612 + t3613 + t3614;
  t3622 = -4.e-6*t265*t1897;
  t3623 = -1.6e-11*t1304*t2545;
  t3634 = 4.e-6*t1304*t2773;
  t3637 = t3622 + t3623 + t3634;
  t3723 = 4.e-6*t265*t3092;
  t3724 = -1.000000000016*t1304*t3108;
  t3757 = -1.*t265*t3128;
  t3766 = t3723 + t3724 + t3757;
  t3774 = -1.6e-11*t1304*t3092;
  t3881 = -4.e-6*t265*t3108;
  t3882 = 4.e-6*t1304*t3128;
  t3883 = t3774 + t3881 + t3882;
  t4019 = 0.004352*t292;
  t4020 = t4019 + t1799;
  t4041 = -0.9999910000159999*t292;
  t4051 = -0.00435200000006963*t1791;
  t4052 = t4041 + t4051;
  t4067 = -1.7408e-8*t292;
  t4068 = 3.999964000064e-6*t1791;
  t4070 = t4067 + t4068;
  t4131 = 4.e-6*t278*t4020;
  t4132 = -4.e-6*t1304*t4052;
  t4136 = t1091*t4070;
  t4146 = t4131 + t4132 + t4136;
  t4153 = -1.*t1304*t4020;
  t4155 = t2952*t4052;
  t4157 = 4.e-6*t1304*t4070;
  t4169 = t4153 + t4155 + t4157;
  t4223 = -3.999964e-6*t292;
  t4225 = t4223 + t2520;
  t4256 = t2586 + t2676;
  t4304 = -4.e-6*t1304*t4020;
  t4314 = t1091*t4225;
  t4316 = 4.e-6*t278*t4256;
  t4317 = t4304 + t4314 + t4316;
  t4319 = t2952*t4020;
  t4322 = 4.e-6*t1304*t4225;
  t4323 = -1.*t1304*t4256;
  t4338 = t4319 + t4322 + t4323;
  t3096 = 4.e-6*t278*t3092;
  t3109 = t1304*t3108;
  t3132 = t265*t3128;
  t3138 = 0. + t3096 + t3109 + t3132;
  t3225 = t866*t3224;
  t3278 = -1.*t3264*t1529;
  t3293 = 0. + t3225 + t3278;
  t2125 = t1304*t1897;
  t2553 = 4.e-6*t278*t2545;
  t2774 = t265*t2773;
  t2818 = 0. + t2125 + t2553 + t2774;
  t3019 = t866*t3011;
  t3065 = -1.*t3062*t1529;
  t3067 = 0. + t3019 + t3065;
  t541 = 4.e-6*t278*t525;
  t825 = t265*t734;
  t826 = t541 + t825;
  t1507 = t866*t1495;
  t1539 = -1.*t1514*t1529;
  t1669 = t1507 + t1539;
  t856 = t826*t831;
  t1695 = -1.*t861*t1669;
  t1722 = t856 + t1695;
  t4421 = Sin(var1[3]);
  t4434 = Cos(var1[3]);
  t2839 = t831*t2818;
  t3068 = -1.*t861*t3067;
  t3151 = t831*t3138;
  t3304 = -1.*t861*t3293;
  t3330 = -1.*t866*t1514;
  t3363 = t3330 + t3347;
  t3377 = -1.*t866*t3062;
  t3380 = -1.*t3011*t1529;
  t3396 = t3377 + t3380;
  t3403 = -1.*t866*t3264;
  t3406 = -1.*t3224*t1529;
  t3413 = t3403 + t3406;
  t3445 = -1.*t1283*t1248;
  t3450 = -1.*t1259*t1436;
  t3451 = t3445 + t3450;
  t3470 = t866*t3451;
  t3477 = t3470 + t3347;
  t3480 = -1.*t1283*t2937;
  t3482 = -1.*t1259*t2984;
  t3483 = t3480 + t3482;
  t3484 = t866*t3483;
  t3485 = t2942 + t3003;
  t3490 = -1.*t3485*t1529;
  t3492 = t3484 + t3490;
  t3497 = -1.*t1283*t3177;
  t3498 = -1.*t1259*t3206;
  t3504 = t3497 + t3498;
  t3505 = t866*t3504;
  t3506 = t3180 + t3223;
  t3509 = -1.*t3506*t1529;
  t3510 = t3505 + t3509;
  t3561 = t3540*t1259;
  t3570 = t1283*t3549;
  t3578 = t3561 + t3570;
  t3545 = t1283*t3540;
  t3550 = -1.*t1259*t3549;
  t3554 = t3545 + t3550;
  t3556 = t866*t3554;
  t3583 = -1.*t3578*t1529;
  t3586 = t3556 + t3583;
  t3643 = t1259*t3617;
  t3644 = t1283*t3637;
  t3645 = t3643 + t3644;
  t3620 = t1283*t3617;
  t3638 = -1.*t1259*t3637;
  t3640 = t3620 + t3638;
  t3605 = t265*t1897;
  t3606 = t3605 + t2976 + t2980;
  t3641 = t866*t3640;
  t3648 = -1.*t3645*t1529;
  t3649 = t3641 + t3648;
  t3909 = t1259*t3766;
  t3926 = t1283*t3883;
  t3968 = t3909 + t3926;
  t3771 = t1283*t3766;
  t3890 = -1.*t1259*t3883;
  t3894 = t3771 + t3890;
  t3658 = t265*t3108;
  t3666 = t3185 + t3658 + t3193;
  t3908 = t866*t3894;
  t3998 = -1.*t3968*t1529;
  t4000 = t3908 + t3998;
  t4193 = t1283*t4146;
  t4194 = t1259*t4169;
  t4195 = t4193 + t4194;
  t4152 = -1.*t1259*t4146;
  t4175 = t1283*t4169;
  t4176 = t4152 + t4175;
  t4040 = t265*t4020;
  t4053 = t1304*t4052;
  t4072 = 4.e-6*t278*t4070;
  t4109 = t4040 + t4053 + t4072;
  t4191 = t866*t4176;
  t4197 = -1.*t4195*t1529;
  t4211 = t4191 + t4197;
  t4342 = t1283*t4317;
  t4343 = t1259*t4338;
  t4344 = t4342 + t4343;
  t4318 = -1.*t1259*t4317;
  t4339 = t1283*t4338;
  t4340 = t4318 + t4339;
  t4220 = t1304*t4020;
  t4234 = 4.e-6*t278*t4225;
  t4263 = t265*t4256;
  t4265 = t4220 + t4234 + t4263;
  t4341 = t866*t4340;
  t4345 = -1.*t4344*t1529;
  t4349 = t4341 + t4345;
  t4501 = t866*t3264;
  t4503 = t3224*t1529;
  t4504 = 0. + t4501 + t4503;
  t4563 = 0. + t3151 + t3304;
  t4453 = t866*t3062;
  t4455 = t3011*t1529;
  t4464 = 0. + t4453 + t4455;
  t4484 = 0. + t2839 + t3068;
  t4422 = t866*t1514;
  t4424 = t1495*t1529;
  t4427 = t4422 + t4424;
  t5039 = t4434*t4427;
  t5162 = -1.*t4421*t1722;
  t5165 = t5039 + t5162;
  t5011 = t4434*t4464;
  t5017 = -1.*t4421*t4484;
  t4994 = t4434*t4504;
  t5000 = -1.*t4421*t4563;
  t4572 = -1.*t826*t861;
  t4573 = -1.*t831*t1669;
  t4574 = t4572 + t4573;
  t4586 = -1.*t2818*t861;
  t4588 = -1.*t831*t3067;
  t4589 = t4586 + t4588;
  t4591 = -1.*t3138*t861;
  t4593 = -1.*t831*t3293;
  t4594 = t4591 + t4593;
  t4612 = t3019 + t3065;
  t4649 = t3225 + t3278;
  t4693 = t3451*t1529;
  t4694 = t1507 + t4693;
  t4723 = t866*t3485;
  t4726 = t3483*t1529;
  t4732 = t4723 + t4726;
  t4759 = t866*t3506;
  t4777 = t3504*t1529;
  t4778 = t4759 + t4777;
  t4838 = t866*t3578;
  t4852 = t3554*t1529;
  t4859 = t4838 + t4852;
  t4869 = t831*t1436;
  t4873 = -1.*t861*t3586;
  t4875 = t4869 + t4873;
  t4880 = t866*t3645;
  t4892 = t3640*t1529;
  t4893 = t4880 + t4892;
  t4895 = t831*t3606;
  t4896 = -1.*t861*t3649;
  t4897 = t4895 + t4896;
  t4904 = t866*t3968;
  t4909 = t3894*t1529;
  t4911 = t4904 + t4909;
  t4916 = t831*t3666;
  t4918 = -1.*t861*t4000;
  t4919 = t4916 + t4918;
  t4928 = t866*t4195;
  t4930 = t4176*t1529;
  t4931 = t4928 + t4930;
  t4934 = t831*t4109;
  t4936 = -1.*t861*t4211;
  t4937 = t4934 + t4936;
  t4953 = t866*t4344;
  t4955 = t4340*t1529;
  t4959 = t4953 + t4955;
  t4964 = t831*t4265;
  t4966 = -1.*t861*t4349;
  t4973 = t4964 + t4966;
  t4392 = t2818*t861;
  t4394 = t831*t3067;
  t4395 = 0. + t4392 + t4394;
  t5387 = -1.26e-8*var1[11];
  t5389 = 1. + t499;
  t5394 = -0.14871*t5389;
  t5395 = -1.64779999997447e-7*t316;
  t5396 = -1.59556e-7*t420;
  t5400 = -1.199987999968e-6*t1791;
  t5401 = t5387 + t5394 + t5395 + t5396 + t5400;
  t5403 = 0.803147*t1764;
  t5404 = 0.50315000001605*t316;
  t5405 = 0.00130540515936178*t1791;
  t5406 = t5403 + t5404 + t5405;
  t5408 = -5.04e-14*var1[11];
  t5414 = -0.03988959484*t316;
  t5415 = 6.38224e-13*t420;
  t5416 = -0.041195*t292;
  t5417 = 0.299996999992*t1791;
  t5420 = t5408 + t5414 + t5415 + t5416 + t5417;
  t5424 = -1.*t1283;
  t5427 = 1. + t5424;
  t5434 = -0.15121*t1259;
  t5435 = -1.2484e-7*var1[10];
  t5436 = 2.479936e-18*t278;
  t5437 = -1.54996e-7*t1035;
  t5438 = 1.124840000016e-6*t1304;
  t5441 = t1091*t5401;
  t5444 = -4.e-6*t1304*t5406;
  t5448 = 4.e-6*t278*t5420;
  t5449 = t5435 + t5436 + t5437 + t5438 + t5441 + t5444 + t5448;
  t5451 = 0.281210000008499*t278;
  t5452 = -0.03874900000062*t1304;
  t5453 = 4.e-6*t1304*t5401;
  t5456 = t2952*t5406;
  t5460 = -1.*t1304*t5420;
  t5464 = t5451 + t5452 + t5453 + t5456 + t5460;
  t5377 = -4.9936e-13*var1[10];
  t5380 = -0.038749*t278;
  t5383 = 6.19984e-13*t1035;
  t5384 = -0.281210000004*t1304;
  t5402 = 4.e-6*t278*t5401;
  t5407 = t1304*t5406;
  t5421 = t265*t5420;
  t5422 = 0. + t5377 + t5380 + t5383 + t5384 + t5402 + t5407 + t5421;
  t5430 = 0.15121*t5427;
  t5450 = -1.*t1259*t5449;
  t5465 = t1283*t5464;
  t5467 = t5430 + t5434 + t5450 + t5465;
  t5469 = t866*t5467;
  t5473 = -0.15121*t5427;
  t5487 = t1283*t5449;
  t5494 = t1259*t5464;
  t5497 = t5473 + t5434 + t5487 + t5494;
  t5499 = -1.*t5497*t1529;
  t5500 = 0. + t5469 + t5499;
  t4408 = t826*t861;
  t4418 = t831*t1669;
  t4420 = t4408 + t4418;
  t5520 = t831*t5422;
  t5523 = -1.*t861*t5500;
  t3071 = t2839 + t3068;
  t5511 = t5422*t861;
  t5512 = t831*t5500;
  t5516 = 0. + t5511 + t5512;
  t5529 = 0. + t5520 + t5523;
  t5423 = -1.*t5422*t861;
  t5502 = -1.*t831*t5500;
  t5503 = t5423 + t5502;
  t5524 = t5520 + t5523;
  t5551 = t866*t5497;
  t5557 = t5467*t1529;
  t5559 = 0. + t5551 + t5557;
  t4368 = t3138*t861;
  t4382 = t831*t3293;
  t4388 = 0. + t4368 + t4382;
  t3305 = t3151 + t3304;
  t5780 = -1.*t866*t5497;
  t5781 = -1.*t5467*t1529;
  t5784 = t5780 + t5781;
  t5776 = t5469 + t5499;
  t5564 = t4427*t5559;
  t5566 = t4420*t5516;
  t5567 = t1722*t5529;
  t5570 = t5564 + t5566 + t5567;
  t5607 = -1.*t4464*t5559;
  t5609 = -1.*t4395*t5516;
  t5613 = -1.*t4484*t5529;
  t5623 = t5607 + t5609 + t5613;
  t5646 = t4464*t5559;
  t5647 = t4395*t5516;
  t5648 = t4484*t5529;
  t5651 = t5646 + t5647 + t5648;
  t5678 = -1.*t5559*t4504;
  t5679 = -1.*t5516*t4388;
  t5690 = -1.*t5529*t4563;
  t5697 = t5678 + t5679 + t5690;
  t5726 = -1.*t4427*t5559;
  t5727 = -1.*t4420*t5516;
  t5729 = -1.*t1722*t5529;
  t5731 = t5726 + t5727 + t5729;
  t5754 = t5559*t4504;
  t5759 = t5516*t4388;
  t5760 = t5529*t4563;
  t5761 = t5754 + t5759 + t5760;
  t5980 = -0.15121*t1283;
  t5990 = 0.15121*t1259;
  t5991 = -1.*t1283*t5449;
  t5997 = -1.*t1259*t5464;
  t5998 = t5980 + t5990 + t5991 + t5997;
  t5986 = t5980 + t5434 + t5450 + t5465;
  t6008 = t866*t5998;
  t6010 = -1.*t5986*t1529;
  t6012 = t6008 + t6010;
  t5989 = t866*t5986;
  t5999 = t5998*t1529;
  t6000 = t5989 + t5999;
  t3609 = t3606*t861;
  t3651 = t831*t3649;
  t3654 = t3609 + t3651;
  t3522 = t1436*t861;
  t3588 = t831*t3586;
  t3596 = t3522 + t3588;
  t6143 = -0.03874900000062*t265;
  t6145 = 0.281210000008499*t1304;
  t6146 = 4.e-6*t265*t5401;
  t6147 = -1.000000000016*t1304*t5406;
  t6149 = -1.*t265*t5420;
  t6150 = t6143 + t6145 + t6146 + t6147 + t6149;
  t6156 = 1.124840000016e-6*t265;
  t6157 = 1.5499600000248e-7*t1304;
  t6158 = -1.6e-11*t1304*t5401;
  t6160 = -4.e-6*t265*t5406;
  t6162 = 4.e-6*t1304*t5420;
  t6164 = -1.2484e-7 + t6156 + t6157 + t6158 + t6160 + t6162;
  t6169 = t1283*t6150;
  t6170 = -1.*t1259*t6164;
  t6171 = t6169 + t6170;
  t6154 = t1259*t6150;
  t6166 = t1283*t6164;
  t6167 = t6154 + t6166;
  t6183 = -0.281210000004*t265;
  t6184 = t265*t5406;
  t6185 = -4.9936e-13 + t6183 + t5452 + t5453 + t6184 + t5460;
  t6187 = t866*t6171;
  t6188 = -1.*t6167*t1529;
  t6189 = t6187 + t6188;
  t6168 = t866*t6167;
  t6172 = t6171*t1529;
  t6176 = t6168 + t6172;
  t6186 = t6185*t861;
  t6190 = t831*t6189;
  t6195 = t6186 + t6190;
  t6205 = t831*t6185;
  t6206 = -1.*t861*t6189;
  t6207 = t6205 + t6206;
  t3680 = t3666*t861;
  t4001 = t831*t4000;
  t4005 = t3680 + t4001;
  t6288 = 0.00130540515936178*t292;
  t6289 = -0.2999969999968001*t1791;
  t6290 = t6288 + t6289;
  t6299 = -1.199987999968e-6*t292;
  t6301 = -5.2216206374471e-9*t1791;
  t6304 = -1.26e-8 + t6299 + t6301;
  t6306 = 0.299996999992*t292;
  t6307 = -5.04e-14 + t6306 + t5405;
  t6296 = -4.e-6*t1304*t6290;
  t6305 = t1091*t6304;
  t6308 = 4.e-6*t278*t6307;
  t6309 = t6296 + t6305 + t6308;
  t6316 = t2952*t6290;
  t6319 = 4.e-6*t1304*t6304;
  t6324 = -1.*t1304*t6307;
  t6325 = t6316 + t6319 + t6324;
  t6329 = -1.*t1259*t6309;
  t6331 = t1283*t6325;
  t6336 = t6329 + t6331;
  t6315 = t1283*t6309;
  t6326 = t1259*t6325;
  t6327 = t6315 + t6326;
  t6348 = t1304*t6290;
  t6349 = 4.e-6*t278*t6304;
  t6351 = t265*t6307;
  t6362 = t6348 + t6349 + t6351;
  t6368 = t866*t6336;
  t6372 = -1.*t6327*t1529;
  t6373 = t6368 + t6372;
  t4129 = t4109*t861;
  t4215 = t831*t4211;
  t4216 = t4129 + t4215;
  t6328 = t866*t6327;
  t6345 = t6336*t1529;
  t6346 = t6328 + t6345;
  t6365 = t6362*t861;
  t6374 = t831*t6373;
  t6375 = t6365 + t6374;
  t6380 = t831*t6362;
  t6381 = -1.*t861*t6373;
  t6383 = t6380 + t6381;
  t4303 = t4265*t861;
  t4350 = t831*t4349;
  t4356 = t4303 + t4350;
  t5774 = t1669*t5559;
  t5779 = t4427*t5776;
  t5833 = -1.*t4612*t5559;
  t5834 = -1.*t4464*t5776;
  t5854 = t4612*t5559;
  t5856 = t4464*t5776;
  t5878 = -1.*t5776*t4504;
  t5880 = -1.*t5559*t4649;
  t5915 = -1.*t1669*t5559;
  t5918 = -1.*t4427*t5776;
  t5942 = t5776*t4504;
  t5943 = t5559*t4649;
  t5979 = t4694*t5559;
  t6007 = t4427*t6000;
  t6656 = t826*t5422;
  t6657 = t1669*t5500;
  t6661 = t6656 + t5564 + t6657;
  t6034 = -1.*t4732*t5559;
  t6037 = -1.*t4464*t6000;
  t6674 = -1.*t2818*t5422;
  t6678 = -1.*t3067*t5500;
  t6682 = t6674 + t5607 + t6678;
  t6064 = t4732*t5559;
  t6068 = t4464*t6000;
  t6698 = t2818*t5422;
  t6699 = t3067*t5500;
  t6702 = t6698 + t5646 + t6699;
  t6078 = -1.*t6000*t4504;
  t6079 = -1.*t5559*t4778;
  t6710 = -1.*t5422*t3138;
  t6711 = -1.*t5500*t3293;
  t6714 = t6710 + t5678 + t6711;
  t6095 = -1.*t4694*t5559;
  t6097 = -1.*t4427*t6000;
  t6727 = -1.*t826*t5422;
  t6728 = -1.*t1669*t5500;
  t6729 = t6727 + t5726 + t6728;
  t6113 = t6000*t4504;
  t6117 = t5559*t4778;
  t6743 = t5422*t3138;
  t6747 = t5500*t3293;
  t6748 = t6743 + t5754 + t6747;
  t6141 = t4859*t5559;
  t6177 = t4427*t6176;
  t6214 = -1.*t4893*t5559;
  t6215 = -1.*t4464*t6176;
  t6229 = t4893*t5559;
  t6230 = t4464*t6176;
  t6242 = -1.*t6176*t4504;
  t6244 = -1.*t5559*t4911;
  t6255 = -1.*t4859*t5559;
  t6256 = -1.*t4427*t6176;
  t6265 = t6176*t4504;
  t6266 = t5559*t4911;
  t6347 = t4427*t6346;
  t6438 = -1.*t6346*t4464;
  t6439 = -1.*t4931*t5559;
  t6465 = -1.*t4427*t6346;
  t6505 = t4959*t5559;
  t6506 = t6346*t4504;
  t6584 = t6346*t4464;
  t6587 = t4931*t5559;
  t6599 = -1.*t4959*t5559;
  t6606 = -1.*t6346*t4504;
  t6844 = -1.*t3606*t5422;
  t6845 = -1.*t2818*t6185;
  t6837 = t1436*t5422;
  t6839 = t826*t6185;
  t6908 = t6185*t3138;
  t6910 = t5422*t3666;
  t6891 = -1.*t1436*t5422;
  t6892 = -1.*t826*t6185;
  t6864 = -1.*t6185*t3138;
  t6865 = -1.*t5422*t3666;
  t6855 = t3606*t5422;
  t6856 = t2818*t6185;
  t6954 = -1.*t6362*t2818;
  t6958 = -1.*t4109*t5422;
  t7153 = t1495*t5467;
  t7154 = t1514*t5497;
  t7155 = t7153 + t7154 + t6656;
  t6929 = t826*t6362;
  t6994 = t4265*t5422;
  t6995 = t6362*t3138;
  t7206 = -1.*t1495*t5467;
  t7208 = -1.*t1514*t5497;
  t7210 = t7206 + t7208 + t6727;
  t6982 = -1.*t826*t6362;
  t7250 = -1.*t5467*t3224;
  t7252 = -1.*t5497*t3264;
  t7257 = t7250 + t7252 + t6710;
  t7272 = t3011*t5467;
  t7273 = t3062*t5497;
  t7274 = t7272 + t7273 + t6698;
  t7014 = -1.*t4265*t5422;
  t7015 = -1.*t6362*t3138;
  t7005 = t6362*t2818;
  t7006 = t4109*t5422;
  t7137 = -1.*t3011*t5467;
  t7138 = -1.*t3062*t5497;
  t7139 = t7137 + t7138 + t6674;
  t7161 = t5467*t3224;
  t7162 = t5497*t3264;
  t7165 = t7161 + t7162 + t6743;
  t7381 = t5377 + t5380 + t5383 + t5384 + t5402 + t5407 + t5421;
  t7504 = t1248*t5449;
  t7506 = t826*t7381;
  t7507 = t1436*t5464;
  t7508 = t7504 + t7506 + t7507;
  t7412 = -1.*t1248*t5449;
  t7413 = -1.*t826*t7381;
  t7414 = -1.*t1436*t5464;
  t7415 = t7412 + t7413 + t7414;
  t7432 = -1.*t5449*t3177;
  t7435 = -1.*t7381*t3138;
  t7436 = -1.*t5464*t3206;
  t7440 = t7432 + t7435 + t7436;
  t7455 = t2937*t5449;
  t7456 = t2818*t7381;
  t7457 = t2984*t5464;
  t7460 = t7455 + t7456 + t7457;
  t7468 = -1.*t2937*t5449;
  t7469 = -1.*t2818*t7381;
  t7470 = -1.*t2984*t5464;
  t7471 = t7468 + t7469 + t7470;
  t7378 = t5449*t3177;
  t7382 = t7381*t3138;
  t7383 = t5464*t3206;
  t7388 = t7378 + t7382 + t7383;
  t7621 = t5401*t4225;
  t7622 = t3092*t6304;
  t7623 = t4020*t5406;
  t7624 = t6290*t3108;
  t7625 = t4256*t5420;
  t7626 = t6307*t3128;
  t7627 = t7621 + t7622 + t7623 + t7624 + t7625 + t7626;
  t7634 = -1.*t525*t6304;
  t7635 = -1.*t734*t6307;
  t7636 = t7634 + t7635;
  t7630 = -1.*t525*t5401;
  t7631 = -1.*t734*t5420;
  t7632 = t7630 + t7631;
  t7674 = t1897*t6290;
  t7675 = t2545*t6304;
  t7677 = t5401*t4070;
  t7678 = t4052*t5406;
  t7679 = t6307*t2773;
  t7682 = t4020*t5420;
  t7683 = t7674 + t7675 + t7677 + t7678 + t7679 + t7682;
  t7660 = -1.*t5401*t4225;
  t7661 = -1.*t3092*t6304;
  t7662 = -1.*t4020*t5406;
  t7664 = -1.*t6290*t3108;
  t7666 = -1.*t4256*t5420;
  t7669 = -1.*t6307*t3128;
  t7670 = t7660 + t7661 + t7662 + t7664 + t7666 + t7669;
  t7655 = t5401*t2545;
  t7656 = t1897*t5406;
  t7657 = t2773*t5420;
  t7658 = t7655 + t7656 + t7657;
  t7650 = -1.*t3092*t5401;
  t7651 = -1.*t5406*t3108;
  t7652 = -1.*t5420*t3128;
  t7653 = t7650 + t7651 + t7652;
  t7695 = -1.*t1897*t6290;
  t7696 = -1.*t2545*t6304;
  t7697 = -1.*t5401*t4070;
  t7698 = -1.*t4052*t5406;
  t7699 = -1.*t6307*t2773;
  t7700 = -1.*t4020*t5420;
  t7701 = t7695 + t7696 + t7697 + t7698 + t7699 + t7700;
  t7708 = t525*t6304;
  t7709 = t734*t6307;
  t7710 = t7708 + t7709;
  t7703 = t525*t5401;
  t7704 = t734*t5420;
  t7705 = t7703 + t7704;
  t7735 = -1.*t5401*t2545;
  t7736 = -1.*t1897*t5406;
  t7737 = -1.*t2773*t5420;
  t7738 = t7735 + t7736 + t7737;
  t7756 = t3092*t5401;
  t7758 = t5406*t3108;
  t7759 = t5420*t3128;
  t7760 = t7756 + t7758 + t7759;
  p_output1[0]=t3305*var2[0] + t3071*var2[1] + t1722*var2[2];
  p_output1[1]=t3413*t831*var2[0] + t3396*t831*var2[1] + t3363*t831*var2[2];
  p_output1[2]=t3510*t831*var2[0] + t3492*t831*var2[1] + t3477*t831*var2[2];
  p_output1[3]=t4005*var2[0] + t3654*var2[1] + t3596*var2[2];
  p_output1[4]=t4356*var2[0] + t4216*var2[1];
  p_output1[5]=t4388;
  p_output1[6]=t4395;
  p_output1[7]=t4420;
  p_output1[8]=(-1.*t4421*t4504 - 1.*t4434*t4563)*var2[0] + (-1.*t4421*t4464 - 1.*t4434*t4484)*var2[1] + (-1.*t4421*t4427 - 1.*t1722*t4434)*var2[2];
  p_output1[9]=-1.*t4421*t4594*var2[0] - 1.*t4421*t4589*var2[1] - 1.*t4421*t4574*var2[2];
  p_output1[10]=(t4434*t4649 + t3413*t4421*t861)*var2[0] + (t4434*t4612 + t3396*t4421*t861)*var2[1] + (t1669*t4434 + t3363*t4421*t861)*var2[2];
  p_output1[11]=(t4434*t4778 + t3510*t4421*t861)*var2[0] + (t4434*t4732 + t3492*t4421*t861)*var2[1] + (t4434*t4694 + t3477*t4421*t861)*var2[2];
  p_output1[12]=(t4434*t4911 - 1.*t4421*t4919)*var2[0] + (t4434*t4893 - 1.*t4421*t4897)*var2[1] + (t4434*t4859 - 1.*t4421*t4875)*var2[2];
  p_output1[13]=(t4434*t4959 - 1.*t4421*t4973)*var2[0] + (t4434*t4931 - 1.*t4421*t4937)*var2[1];
  p_output1[14]=0. + t4994 + t5000;
  p_output1[15]=0. + t5011 + t5017;
  p_output1[16]=t5165;
  p_output1[17]=(t4994 + t5000)*var2[0] + (t5011 + t5017)*var2[1] + t5165*var2[2];
  p_output1[18]=t4434*t4594*var2[0] + t4434*t4589*var2[1] + t4434*t4574*var2[2];
  p_output1[19]=(t4421*t4649 - 1.*t3413*t4434*t861)*var2[0] + (t4421*t4612 - 1.*t3396*t4434*t861)*var2[1] + (t1669*t4421 - 1.*t3363*t4434*t861)*var2[2];
  p_output1[20]=(t4421*t4778 - 1.*t3510*t4434*t861)*var2[0] + (t4421*t4732 - 1.*t3492*t4434*t861)*var2[1] + (t4421*t4694 - 1.*t3477*t4434*t861)*var2[2];
  p_output1[21]=(t4421*t4911 + t4434*t4919)*var2[0] + (t4421*t4893 + t4434*t4897)*var2[1] + (t4421*t4859 + t4434*t4875)*var2[2];
  p_output1[22]=(t4421*t4959 + t4434*t4973)*var2[0] + (t4421*t4931 + t4434*t4937)*var2[1];
  p_output1[23]=0. + t4421*t4504 + t4434*t4563;
  p_output1[24]=0. + t4421*t4464 + t4434*t4484;
  p_output1[25]=t4421*t4427 + t1722*t4434;
  p_output1[26]=(t4395*(t1722*t5503 + t1722*t5516 + t4420*t5524 + t4574*t5529) + t4420*(-1.*t4484*t5503 - 1.*t3071*t5516 - 1.*t4395*t5524 - 1.*t4589*t5529) + t3071*t5570 + t1722*t5623)*var2[0] + (t4388*(-1.*t1722*t5503 - 1.*t1722*t5516 - 1.*t4420*t5524 - 1.*t4574*t5529) + t4420*(t4563*t5503 + t3305*t5516 + t4388*t5524 + t4594*t5529) + t3305*t5731 + t1722*t5761)*var2[1] + (t4388*(t4484*t5503 + t3071*t5516 + t4395*t5524 + t4589*t5529) + t4395*(-1.*t4563*t5503 - 1.*t3305*t5516 - 1.*t4388*t5524 - 1.*t4594*t5529) + t3305*t5651 + t3071*t5697)*var2[2];
  p_output1[27]=(t3396*t5570*t831 + t3363*t5623*t831 + t4395*(t5774 + t5779 + t3363*t5516*t831 + t4420*t5784*t831 - 1.*t3363*t5529*t861 - 1.*t1722*t5784*t861) + t4420*(t5833 + t5834 - 1.*t3396*t5516*t831 - 1.*t4395*t5784*t831 + t3396*t5529*t861 + t4484*t5784*t861))*var2[0] + (t3413*t5731*t831 + t3363*t5761*t831 + t4388*(t5915 + t5918 - 1.*t3363*t5516*t831 - 1.*t4420*t5784*t831 + t3363*t5529*t861 + t1722*t5784*t861) + t4420*(t5942 + t5943 + t3413*t5516*t831 + t4388*t5784*t831 - 1.*t3413*t5529*t861 - 1.*t4563*t5784*t861))*var2[1] + (t3413*t5651*t831 + t3396*t5697*t831 + t4388*(t5854 + t5856 + t3396*t5516*t831 + t4395*t5784*t831 - 1.*t3396*t5529*t861 - 1.*t4484*t5784*t861) + t4395*(t5878 + t5880 - 1.*t3413*t5516*t831 - 1.*t4388*t5784*t831 + t3413*t5529*t861 + t4563*t5784*t861))*var2[2];
  p_output1[28]=(t3492*t5570*t831 + t3477*t5623*t831 + t4395*(t5979 + t6007 + t3477*t5516*t831 + t4420*t6012*t831 - 1.*t3477*t5529*t861 - 1.*t1722*t6012*t861) + t4420*(t6034 + t6037 - 1.*t3492*t5516*t831 - 1.*t4395*t6012*t831 + t3492*t5529*t861 + t4484*t6012*t861))*var2[0] + (t3510*t5731*t831 + t3477*t5761*t831 + t4388*(t6095 + t6097 - 1.*t3477*t5516*t831 - 1.*t4420*t6012*t831 + t3477*t5529*t861 + t1722*t6012*t861) + t4420*(t6113 + t6117 + t3510*t5516*t831 + t4388*t6012*t831 - 1.*t3510*t5529*t861 - 1.*t4563*t6012*t861))*var2[1] + (t3510*t5651*t831 + t3492*t5697*t831 + t4388*(t6064 + t6068 + t3492*t5516*t831 + t4395*t6012*t831 - 1.*t3492*t5529*t861 - 1.*t4484*t6012*t861) + t4395*(t6078 + t6079 - 1.*t3510*t5516*t831 - 1.*t4388*t6012*t831 + t3510*t5529*t861 + t4563*t6012*t861))*var2[2];
  p_output1[29]=(t3654*t5570 + t3596*t5623 + t4395*(t3596*t5516 + t4875*t5529 + t6141 + t6177 + t4420*t6195 + t1722*t6207) + t4420*(-1.*t3654*t5516 - 1.*t4897*t5529 - 1.*t4395*t6195 - 1.*t4484*t6207 + t6214 + t6215))*var2[0] + (t4005*t5731 + t3596*t5761 + t4388*(-1.*t3596*t5516 - 1.*t4875*t5529 - 1.*t4420*t6195 - 1.*t1722*t6207 + t6255 + t6256) + t4420*(t4005*t5516 + t4919*t5529 + t4388*t6195 + t4563*t6207 + t6265 + t6266))*var2[1] + (t4005*t5651 + t3654*t5697 + t4388*(t3654*t5516 + t4897*t5529 + t4395*t6195 + t4484*t6207 + t6229 + t6230) + t4395*(-1.*t4005*t5516 - 1.*t4919*t5529 - 1.*t4388*t6195 - 1.*t4563*t6207 + t6242 + t6244))*var2[2];
  p_output1[30]=(t4216*t5570 + t4395*(t6347 + t4420*t6375 + t1722*t6383) + t4420*(-1.*t4216*t5516 - 1.*t4937*t5529 - 1.*t4395*t6375 - 1.*t4484*t6383 + t6438 + t6439))*var2[0] + (t4356*t5731 + t4388*(-1.*t4420*t6375 - 1.*t1722*t6383 + t6465) + t4420*(t4356*t5516 + t4973*t5529 + t4388*t6375 + t4563*t6383 + t6505 + t6506))*var2[1] + (t4356*t5651 + t4216*t5697 + t4388*(t4216*t5516 + t4937*t5529 + t4395*t6375 + t4484*t6383 + t6584 + t6587) + t4395*(-1.*t4356*t5516 - 1.*t4973*t5529 - 1.*t4388*t6375 - 1.*t4563*t6383 + t6599 + t6606))*var2[2];
  p_output1[31]=t4395*t5570 + t4420*t5623;
  p_output1[32]=t4388*t5731 + t4420*t5761;
  p_output1[33]=t4388*t5651 + t4395*t5697;
  p_output1[34]=(t4464*(t3363*t5500 + t5774 + t5779 + t1669*t5784) + t4427*(-1.*t3396*t5500 - 1.*t3067*t5784 + t5833 + t5834) + t4612*t6661 + t1669*t6682)*var2[0] + (t4504*(-1.*t3363*t5500 - 1.*t1669*t5784 + t5915 + t5918) + t4427*(t3413*t5500 + t3293*t5784 + t5942 + t5943) + t4649*t6729 + t1669*t6748)*var2[1] + (t4504*(t3396*t5500 + t3067*t5784 + t5854 + t5856) + t4464*(-1.*t3413*t5500 - 1.*t3293*t5784 + t5878 + t5880) + t4649*t6702 + t4612*t6714)*var2[2];
  p_output1[35]=(t4464*(t3477*t5500 + t5979 + t6007 + t1669*t6012) + t4427*(-1.*t3492*t5500 - 1.*t3067*t6012 + t6034 + t6037) + t4732*t6661 + t4694*t6682)*var2[0] + (t4504*(-1.*t3477*t5500 - 1.*t1669*t6012 + t6095 + t6097) + t4427*(t3510*t5500 + t3293*t6012 + t6113 + t6117) + t4778*t6729 + t4694*t6748)*var2[1] + (t4504*(t3492*t5500 + t3067*t6012 + t6064 + t6068) + t4464*(-1.*t3510*t5500 - 1.*t3293*t6012 + t6078 + t6079) + t4778*t6702 + t4732*t6714)*var2[2];
  p_output1[36]=(t4893*t6661 + t4859*t6682 + t4464*(t3586*t5500 + t6141 + t6177 + t1669*t6189 + t6837 + t6839) + t4427*(-1.*t3649*t5500 - 1.*t3067*t6189 + t6214 + t6215 + t6844 + t6845))*var2[0] + (t4911*t6729 + t4859*t6748 + t4504*(-1.*t3586*t5500 - 1.*t1669*t6189 + t6255 + t6256 + t6891 + t6892) + t4427*(t4000*t5500 + t3293*t6189 + t6265 + t6266 + t6908 + t6910))*var2[1] + (t4911*t6702 + t4893*t6714 + t4504*(t3649*t5500 + t3067*t6189 + t6229 + t6230 + t6855 + t6856) + t4464*(-1.*t4000*t5500 - 1.*t3293*t6189 + t6242 + t6244 + t6864 + t6865))*var2[2];
  p_output1[37]=(t4931*t6661 + t4464*(t6347 + t1669*t6373 + t6929) + t4427*(-1.*t4211*t5500 - 1.*t3067*t6373 + t6438 + t6439 + t6954 + t6958))*var2[0] + (t4959*t6729 + t4504*(-1.*t1669*t6373 + t6465 + t6982) + t4427*(t4349*t5500 + t3293*t6373 + t6505 + t6506 + t6994 + t6995))*var2[1] + (t4959*t6702 + t4931*t6714 + t4504*(t4211*t5500 + t3067*t6373 + t6584 + t6587 + t7005 + t7006) + t4464*(-1.*t4349*t5500 - 1.*t3293*t6373 + t6599 + t6606 + t7014 + t7015))*var2[2];
  p_output1[38]=t4464*t6661 + t4427*t6682;
  p_output1[39]=t4504*t6729 + t4427*t6748;
  p_output1[40]=t4504*t6702 + t4464*t6714;
  p_output1[41]=(t2818*(t3451*t5467 + t1495*t5497 + t1514*t5986 + t1495*t5998) + (-1.*t3483*t5467 - 1.*t3485*t5497 - 1.*t3062*t5986 - 1.*t3011*t5998)*t826)*var2[0] + (t3138*(-1.*t3451*t5467 - 1.*t1495*t5497 - 1.*t1514*t5986 - 1.*t1495*t5998) + (t3504*t5467 + t3506*t5497 + t3264*t5986 + t3224*t5998)*t826)*var2[1] + (t3138*(t3483*t5467 + t3485*t5497 + t3062*t5986 + t3011*t5998) + t2818*(-1.*t3504*t5467 - 1.*t3506*t5497 - 1.*t3264*t5986 - 1.*t3224*t5998))*var2[2];
  p_output1[42]=(t2818*(t3554*t5467 + t3578*t5497 + t1514*t6167 + t1495*t6171 + t6837 + t6839) + t1436*t7139 + t3606*t7155 + (-1.*t3640*t5467 - 1.*t3645*t5497 - 1.*t3062*t6167 - 1.*t3011*t6171 + t6844 + t6845)*t826)*var2[0] + (t3138*(-1.*t3554*t5467 - 1.*t3578*t5497 - 1.*t1514*t6167 - 1.*t1495*t6171 + t6891 + t6892) + t1436*t7165 + t3666*t7210 + (t3894*t5467 + t3968*t5497 + t3264*t6167 + t3224*t6171 + t6908 + t6910)*t826)*var2[1] + (t3138*(t3640*t5467 + t3645*t5497 + t3062*t6167 + t3011*t6171 + t6855 + t6856) + t2818*(-1.*t3894*t5467 - 1.*t3968*t5497 - 1.*t3264*t6167 - 1.*t3224*t6171 + t6864 + t6865) + t3606*t7257 + t3666*t7274)*var2[2];
  p_output1[43]=(t2818*(t1514*t6327 + t1495*t6336 + t6929) + t4109*t7155 + (-1.*t4176*t5467 - 1.*t4195*t5497 - 1.*t3062*t6327 - 1.*t3011*t6336 + t6954 + t6958)*t826)*var2[0] + (t3138*(-1.*t1514*t6327 - 1.*t1495*t6336 + t6982) + t4265*t7210 + (t4340*t5467 + t4344*t5497 + t3264*t6327 + t3224*t6336 + t6994 + t6995)*t826)*var2[1] + (t3138*(t4176*t5467 + t4195*t5497 + t3062*t6327 + t3011*t6336 + t7005 + t7006) + t2818*(-1.*t4340*t5467 - 1.*t4344*t5497 - 1.*t3264*t6327 - 1.*t3224*t6336 + t7014 + t7015) + t4109*t7257 + t4265*t7274)*var2[2];
  p_output1[44]=t2818*t7155 + t7139*t826;
  p_output1[45]=t3138*t7210 + t7165*t826;
  p_output1[46]=t2818*t7257 + t3138*t7274;
  p_output1[47]=(-0.15121*t3766 - 0.15121*t3883 + t2818*(t3549*t5449 + t3540*t5464 + t1436*t6150 + t1248*t6164 + t6839 + t1436*t7381) + t1436*t7471 + t3606*t7508 + (-1.*t3637*t5449 - 1.*t3617*t5464 - 1.*t2984*t6150 - 1.*t2937*t6164 + t6845 - 1.*t3606*t7381)*t826)*var2[0] + (-0.15121*t3617 - 0.15121*t3637 + t3138*(-1.*t3549*t5449 - 1.*t3540*t5464 - 1.*t1436*t6150 - 1.*t1248*t6164 + t6892 - 1.*t1436*t7381) + t1436*t7388 + t3666*t7415 + (t3883*t5449 + t3766*t5464 + t3206*t6150 + t3177*t6164 + t6908 + t3666*t7381)*t826)*var2[1] + (-0.15121*t3540 - 0.15121*t3549 + t3138*(t3637*t5449 + t3617*t5464 + t2984*t6150 + t2937*t6164 + t6856 + t3606*t7381) + t2818*(-1.*t3883*t5449 - 1.*t3766*t5464 - 1.*t3206*t6150 - 1.*t3177*t6164 + t6864 - 1.*t3666*t7381) + t3606*t7440 + t3666*t7460)*var2[2];
  p_output1[48]=(-0.15121*t4317 - 0.15121*t4338 + t2818*(t1248*t6309 + t1436*t6325 + t6929) + t4109*t7508 + (-1.*t4146*t5449 - 1.*t4169*t5464 - 1.*t2937*t6309 - 1.*t2984*t6325 + t6954 - 1.*t4109*t7381)*t826)*var2[0] + (-0.15121*t4146 - 0.15121*t4169 + t3138*(-1.*t1248*t6309 - 1.*t1436*t6325 + t6982) + t4265*t7415 + (t4317*t5449 + t4338*t5464 + t3177*t6309 + t3206*t6325 + t6995 + t4265*t7381)*t826)*var2[1] + (t3138*(t4146*t5449 + t4169*t5464 + t2937*t6309 + t2984*t6325 + t7005 + t4109*t7381) + t2818*(-1.*t4317*t5449 - 1.*t4338*t5464 - 1.*t3177*t6309 - 1.*t3206*t6325 + t7015 - 1.*t4265*t7381) + t4109*t7440 + t4265*t7460)*var2[2];
  p_output1[49]=-0.15121*t3177 - 0.15121*t3206 + t2818*t7508 + t7471*t826;
  p_output1[50]=-0.15121*t2937 - 0.15121*t2984 + t3138*t7415 + t7388*t826;
  p_output1[51]=-0.15121*t1248 - 0.15121*t1436 + t2818*t7440 + t3138*t7460;
  p_output1[52]=(-0.038749*t4020 + 1.e-6*t4225 - 0.28121*t4256 - 1.*t525*t7701 - 1.*t4070*t7705 - 1.*t2545*t7710 + 4.e-6*(-1.*t734*t7701 - 1.*t4020*t7705 - 1.*t2773*t7710))*var2[0] + (-0.28121*t4020 - 0.038749*t4052 + 1.e-6*t4070 - 1.*t525*t7627 - 1.*t4225*t7632 - 1.*t3092*t7636 + 4.e-6*(-1.*t734*t7627 - 1.*t4256*t7632 - 1.*t3128*t7636))*var2[1] + (-1.*t4070*t7653 - 1.*t4225*t7658 - 1.*t2545*t7670 - 1.*t3092*t7683 + 4.e-6*(-1.*t4020*t7653 - 1.*t4256*t7658 - 1.*t2773*t7670 - 1.*t3128*t7683))*var2[2];
  p_output1[53]=1.e-6*t3092 - 0.038749*t3108 - 0.28121*t3128 - 1.*t2545*t7705 - 1.*t525*t7738 + 4.e-6*(-1.*t2773*t7705 - 1.*t734*t7738);
  p_output1[54]=-0.038749*t1897 + 1.e-6*t2545 - 0.28121*t2773 - 1.*t3092*t7632 - 1.*t525*t7760 + 4.e-6*(-1.*t3128*t7632 - 1.*t734*t7760);
  p_output1[55]=1.e-6*t525 - 0.28121*t734 - 1.*t2545*t7653 - 1.*t3092*t7658 + 4.e-6*(-1.*t2773*t7653 - 1.*t3128*t7658);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_QuadrupleStance.hh"

namespace QuadrupleStance
{

void J_fFrFoot_vec_QuadrupleStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
