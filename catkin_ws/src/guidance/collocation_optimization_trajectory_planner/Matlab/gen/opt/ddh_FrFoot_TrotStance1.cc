/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:16:06 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t403;
  double t386;
  double t509;
  double t342;
  double t445;
  double t492;
  double t503;
  double t702;
  double t398;
  double t401;
  double t552;
  double t290;
  double t695;
  double t700;
  double t701;
  double t710;
  double t717;
  double t694;
  double t796;
  double t803;
  double t846;
  double t900;
  double t903;
  double t911;
  double t932;
  double t954;
  double t293;
  double t315;
  double t330;
  double t359;
  double t758;
  double t759;
  double t777;
  double t1123;
  double t1133;
  double t1155;
  double t1224;
  double t1241;
  double t1242;
  double t1252;
  double t1007;
  double t1008;
  double t1304;
  double t1312;
  double t1331;
  double t1332;
  double t1353;
  double t1355;
  double t1359;
  double t1363;
  double t1380;
  double t1391;
  double t743;
  double t910;
  double t964;
  double t982;
  double t1015;
  double t1028;
  double t1029;
  double t1031;
  double t1072;
  double t1078;
  double t1080;
  double t1099;
  double t1278;
  double t1341;
  double t1404;
  double t1433;
  double t1534;
  double t1539;
  double t1547;
  double t1549;
  double t1551;
  double t1555;
  double t567;
  double t589;
  double t600;
  double t626;
  double t1528;
  double t1560;
  double t1568;
  double t2029;
  double t2034;
  double t2046;
  double t2057;
  double t2062;
  double t2098;
  double t1686;
  double t1713;
  double t1732;
  double t1764;
  double t570;
  double t654;
  double t681;
  double t1820;
  double t1824;
  double t1853;
  double t1887;
  double t1894;
  double t1909;
  double t1916;
  double t1919;
  double t1794;
  double t1795;
  double t1803;
  double t1810;
  double t991;
  double t1066;
  double t1070;
  double t1600;
  double t1634;
  double t1646;
  double t1670;
  double t1787;
  double t1922;
  double t1933;
  double t2010;
  double t2048;
  double t2101;
  double t2102;
  double t2109;
  double t2116;
  double t2159;
  double t2170;
  double t2178;
  double t2195;
  double t2210;
  double t2217;
  double t2240;
  double t2282;
  double t2340;
  double t2343;
  double t2366;
  double t2422;
  double t2427;
  double t2445;
  double t2463;
  double t2464;
  double t2272;
  double t2288;
  double t2302;
  double t2303;
  double t2304;
  double t2305;
  double t2307;
  double t2315;
  double t2332;
  double t2335;
  double t2393;
  double t2428;
  double t2467;
  double t2481;
  double t2497;
  double t2508;
  double t2571;
  double t2593;
  double t2621;
  double t2632;
  double t2636;
  double t2677;
  double t2693;
  double t2728;
  double t2740;
  double t2746;
  double t2762;
  double t2775;
  double t2742;
  double t2785;
  double t2794;
  double t2796;
  double t2801;
  double t2808;
  double t2813;
  double t2827;
  double t2830;
  double t2832;
  double t207;
  double t262;
  double t2865;
  double t2856;
  double t2880;
  double t2888;
  double t2889;
  double t2910;
  double t2924;
  double t2925;
  double t3134;
  double t3155;
  double t3199;
  double t3206;
  double t3239;
  double t3251;
  double t3266;
  double t3269;
  double t3274;
  double t3286;
  double t3306;
  double t3344;
  double t3346;
  double t3351;
  double t3359;
  double t3360;
  double t2986;
  double t3021;
  double t3027;
  double t3030;
  double t3050;
  double t3051;
  double t3056;
  double t3073;
  double t3091;
  double t3099;
  double t3120;
  double t3121;
  double t3565;
  double t3586;
  double t3609;
  double t3557;
  double t3559;
  double t3563;
  double t3613;
  double t3616;
  double t3618;
  double t3646;
  double t3652;
  double t3669;
  double t3625;
  double t3634;
  double t3640;
  double t3643;
  double t3673;
  double t3678;
  double t3686;
  double t3689;
  double t3690;
  double t3691;
  double t3692;
  double t3697;
  double t3698;
  double t3701;
  double t3703;
  double t3712;
  double t3714;
  double t3723;
  double t3725;
  double t3733;
  double t3744;
  double t3766;
  double t3768;
  double t3778;
  double t3784;
  double t3786;
  double t3808;
  double t3817;
  double t3826;
  double t3852;
  double t3879;
  double t3882;
  double t3837;
  double t3843;
  double t3845;
  double t3895;
  double t3904;
  double t3907;
  double t3959;
  double t3967;
  double t3970;
  double t3908;
  double t3911;
  double t3916;
  double t3919;
  double t3978;
  double t3988;
  double t3989;
  double t3990;
  double t3996;
  double t3997;
  double t4000;
  double t4002;
  double t4011;
  double t4014;
  double t4041;
  double t4094;
  double t4095;
  double t4099;
  double t4103;
  double t4114;
  double t4115;
  double t4137;
  double t4140;
  double t4100;
  double t4133;
  double t4145;
  double t4146;
  double t4165;
  double t4171;
  double t4180;
  double t4188;
  double t4228;
  double t4230;
  double t4239;
  double t4240;
  double t4253;
  double t4258;
  double t4262;
  double t4267;
  double t4237;
  double t4255;
  double t4281;
  double t4284;
  double t4292;
  double t4293;
  double t4297;
  double t4321;
  double t4392;
  double t4405;
  double t4409;
  double t4417;
  double t4164;
  double t4190;
  double t4192;
  double t4203;
  double t4205;
  double t4218;
  double t4359;
  double t4360;
  double t4364;
  double t4368;
  double t4388;
  double t4521;
  double t4525;
  double t4532;
  double t4436;
  double t4636;
  double t4637;
  double t4638;
  double t4639;
  double t4643;
  double t4647;
  double t4648;
  double t4660;
  double t4661;
  double t4675;
  double t4513;
  double t4531;
  double t4534;
  double t4540;
  double t4558;
  double t4565;
  double t4569;
  double t4582;
  double t4792;
  double t4817;
  double t4821;
  double t4776;
  double t4777;
  double t4782;
  double t4735;
  double t4744;
  double t4745;
  double t4755;
  double t4789;
  double t4822;
  double t4836;
  double t4851;
  double t4853;
  double t4866;
  double t4891;
  double t4892;
  double t4899;
  double t4334;
  double t4339;
  double t4342;
  double t4289;
  double t4323;
  double t4329;
  double t4419;
  double t4969;
  double t4975;
  double t4977;
  double t4981;
  double t4983;
  double t4988;
  double t5019;
  double t5025;
  double t5029;
  double t4978;
  double t5042;
  double t5047;
  double t5048;
  double t5038;
  double t5041;
  double t5079;
  double t5080;
  double t5081;
  double t5095;
  double t5101;
  double t5124;
  double t5148;
  double t5155;
  double t5156;
  double t5214;
  double t5217;
  double t5233;
  double t5234;
  double t5239;
  double t5251;
  double t5322;
  double t5333;
  double t5336;
  double t5337;
  double t5339;
  double t5343;
  double t5346;
  double t5378;
  double t5379;
  double t5382;
  double t5277;
  double t5281;
  double t5283;
  double t5256;
  double t5199;
  double t5207;
  double t5208;
  double t5488;
  double t5489;
  double t5491;
  double t5440;
  double t5444;
  double t5448;
  double t5456;
  double t5457;
  double t5460;
  double t5424;
  double t5434;
  double t5436;
  double t5461;
  double t5463;
  double t5470;
  double t5473;
  double t5507;
  double t5522;
  double t5524;
  double t5530;
  double t5540;
  double t5635;
  double t5639;
  double t5647;
  double t5659;
  double t5678;
  double t5683;
  double t5685;
  double t5752;
  double t5695;
  double t5688;
  double t5711;
  double t5715;
  double t5716;
  double t5759;
  double t5761;
  double t5763;
  double t5765;
  double t5770;
  double t5864;
  double t5866;
  double t5868;
  double t5887;
  double t5892;
  double t5904;
  double t5942;
  double t5915;
  double t6019;
  double t6024;
  double t6027;
  double t6028;
  double t6032;
  double t6035;
  double t6037;
  double t6050;
  double t6084;
  double t6086;
  double t6087;
  double t6091;
  double t6098;
  double t6109;
  double t6124;
  double t6127;
  double t6128;
  double t6131;
  double t6138;
  double t6145;
  double t6217;
  double t6220;
  double t6224;
  double t6226;
  double t6228;
  double t6232;
  double t6118;
  double t6158;
  double t6161;
  double t6166;
  double t6174;
  double t6177;
  double t6200;
  double t6205;
  double t6206;
  double t6193;
  double t6195;
  double t6207;
  double t6262;
  double t6329;
  double t6331;
  double t6333;
  double t6334;
  double t6341;
  double t6342;
  double t6343;
  double t6360;
  double t6068;
  double t6069;
  double t6071;
  double t6030;
  double t6060;
  double t6066;
  double t6242;
  double t6243;
  double t6244;
  double t6225;
  double t6234;
  double t6237;
  double t6252;
  double t6418;
  double t6420;
  double t6422;
  double t6197;
  double t6406;
  double t6411;
  double t6416;
  double t6441;
  double t6442;
  double t6445;
  double t6457;
  double t6459;
  double t6462;
  double t6388;
  double t6391;
  double t6395;
  double t6381;
  double t6382;
  double t6383;
  double t6370;
  double t6372;
  double t6387;
  double t6398;
  double t6399;
  double t6501;
  double t6502;
  double t6503;
  double t6507;
  double t6513;
  double t6514;
  double t6472;
  double t6480;
  double t6481;
  double t6429;
  double t6431;
  double t6433;
  double t6425;
  double t6465;
  double t6541;
  double t6543;
  double t6546;
  double t6471;
  double t6487;
  double t6532;
  double t6536;
  double t6537;
  double t6560;
  double t6562;
  double t6563;
  double t6572;
  double t6576;
  double t6578;
  double t6647;
  double t6655;
  double t6657;
  double t6662;
  double t6663;
  double t6667;
  double t6669;
  double t6673;
  double t6674;
  double t6677;
  double t6678;
  double t6686;
  double t6689;
  double t6690;
  double t6692;
  double t6699;
  double t6700;
  double t6707;
  double t6708;
  double t6711;
  double t6712;
  double t6713;
  double t6716;
  double t6720;
  double t6725;
  double t6730;
  double t6732;
  double t6735;
  double t6738;
  double t6740;
  double t6746;
  double t6736;
  double t6750;
  double t6758;
  double t6760;
  double t6764;
  double t6765;
  double t6766;
  double t6767;
  double t6768;
  double t6769;
  double t2855;
  double t364;
  double t2862;
  double t2879;
  double t6778;
  double t6784;
  double t6785;
  double t6792;
  double t6794;
  double t6795;
  double t2905;
  double t6823;
  double t6828;
  double t6829;
  double t6846;
  double t6849;
  double t6856;
  double t6865;
  double t6867;
  double t6868;
  double t6869;
  double t6872;
  double t6874;
  double t6888;
  double t6889;
  double t6894;
  double t2944;
  double t2960;
  double t6803;
  double t6810;
  double t6811;
  double t6817;
  double t6818;
  double t6819;
  double t3038;
  double t3044;
  double t3045;
  double t3087;
  double t3089;
  double t3090;
  double t6936;
  double t6938;
  double t6939;
  double t6945;
  double t6946;
  double t6947;
  double t6954;
  double t6955;
  double t6957;
  double t6898;
  double t6906;
  double t6907;
  double t6909;
  double t6912;
  double t6913;
  double t6914;
  double t6915;
  double t6917;
  double t6918;
  double t6920;
  double t6921;
  double t7021;
  double t7054;
  double t7111;
  double t7112;
  double t7115;
  double t7119;
  double t7123;
  double t7124;
  double t7127;
  double t7131;
  double t7132;
  double t7133;
  double t5173;
  double t5175;
  double t5177;
  double t7020;
  double t7173;
  double t4768;
  double t4839;
  double t4840;
  double t7192;
  double t7195;
  double t7335;
  double t7337;
  double t7345;
  double t7346;
  double t7456;
  double t7457;
  double t7466;
  double t7467;
  double t5958;
  double t5959;
  double t5961;
  double t5918;
  double t5922;
  double t5924;
  double t5883;
  double t7598;
  double t7630;
  double t6592;
  double t6595;
  double t6598;
  double t7629;
  double t7611;
  double t6374;
  double t6400;
  double t6401;
  double t7709;
  double t7718;
  double t6551;
  double t6554;
  double t6556;
  double t7725;
  double t7737;
  double t7779;
  double t7782;
  double t7783;
  double t7784;
  double t7785;
  double t7789;
  double t7791;
  double t7793;
  double t7794;
  double t7795;
  double t7799;
  double t7803;
  double t7806;
  double t7810;
  double t7811;
  double t7812;
  double t7814;
  double t7817;
  double t7824;
  double t7825;
  double t7826;
  double t7827;
  double t7828;
  double t7829;
  double t7842;
  double t7845;
  double t7847;
  double t7848;
  double t7836;
  double t7837;
  double t7838;
  double t7840;
  double t7833;
  double t7834;
  double t7841;
  double t7851;
  double t7853;
  double t7854;
  double t7855;
  double t7856;
  double t7861;
  double t7866;
  double t7870;
  double t7879;
  double t7881;
  double t7883;
  double t7885;
  double t7909;
  double t7912;
  double t7915;
  double t7918;
  double t7921;
  double t7923;
  double t7926;
  double t7927;
  double t7930;
  double t7931;
  double t7933;
  double t7934;
  double t7935;
  double t7936;
  double t7937;
  double t7894;
  double t7896;
  double t7898;
  double t7902;
  double t7904;
  double t7905;
  double t7979;
  double t7980;
  double t7981;
  double t7983;
  double t7984;
  double t7985;
  double t7988;
  double t7989;
  double t7990;
  double t7940;
  double t7941;
  double t7942;
  double t7943;
  double t7945;
  double t7946;
  double t7947;
  double t7948;
  double t7954;
  double t7955;
  double t7957;
  double t7960;
  double t8079;
  double t8088;
  double t8104;
  double t8108;
  double t8162;
  double t8164;
  double t8175;
  double t8177;
  double t8232;
  double t8241;
  double t8288;
  double t8289;
  double t8290;
  double t8291;
  double t8293;
  double t8294;
  double t8295;
  double t8274;
  double t8276;
  double t8278;
  double t8279;
  double t8284;
  double t8285;
  double t8286;
  double t8242;
  double t8231;
  double t8307;
  double t8310;
  double t8317;
  double t8321;
  double t8405;
  double t8418;
  double t8417;
  double t8406;
  double t8477;
  double t8485;
  double t8493;
  double t8496;
  t403 = Cos(var1[11]);
  t386 = Cos(var1[10]);
  t509 = -1. + t403;
  t342 = Sin(var1[9]);
  t445 = -1.*t403;
  t492 = 1. + t445;
  t503 = 1.6e-11*t492;
  t702 = Sin(var1[11]);
  t398 = -1.*t386;
  t401 = 1. + t398;
  t552 = 1.6e-11*t509;
  t290 = Cos(var1[9]);
  t695 = -1.000000000016*t492;
  t700 = 1. + t695;
  t701 = 0.004352*t700;
  t710 = -0.9999910000159999*t702;
  t717 = t701 + t710;
  t694 = Sin(var1[10]);
  t796 = -1. + t503;
  t803 = 4.e-6*t796;
  t846 = 3.999964e-6*t492;
  t900 = -1.7408e-8*t702;
  t903 = t803 + t846 + t900;
  t911 = 0.999991*t403;
  t932 = 0.004352*t702;
  t954 = t552 + t911 + t932;
  t293 = -1.*t290;
  t315 = 1. + t293;
  t330 = 0.15121*t315;
  t359 = -0.15121*t342;
  t758 = -1. + t386;
  t759 = 1.6e-11*t758;
  t777 = 1. + t759;
  t1123 = -1.26e-8*var1[11];
  t1133 = 1. + t552;
  t1155 = -0.14871*t1133;
  t1224 = -1.64779999997447e-7*t492;
  t1241 = -1.59556e-7*t509;
  t1242 = -1.199987999968e-6*t702;
  t1252 = t1123 + t1155 + t1224 + t1241 + t1242;
  t1007 = -1.000000000016*t401;
  t1008 = 1. + t1007;
  t1304 = 0.803147*t700;
  t1312 = 0.50315000001605*t492;
  t1331 = 0.00130540515936178*t702;
  t1332 = t1304 + t1312 + t1331;
  t1353 = -5.04e-14*var1[11];
  t1355 = -0.03988959484*t492;
  t1359 = 6.38224e-13*t509;
  t1363 = -0.041195*t403;
  t1380 = 0.299996999992*t702;
  t1391 = t1353 + t1355 + t1359 + t1363 + t1380;
  t743 = -4.e-6*t694*t717;
  t910 = t777*t903;
  t964 = 4.e-6*t401*t954;
  t982 = 0. + t743 + t910 + t964;
  t1015 = t1008*t717;
  t1028 = 4.e-6*t694*t903;
  t1029 = -1.*t694*t954;
  t1031 = 0. + t1015 + t1028 + t1029;
  t1072 = -1.2484e-7*var1[10];
  t1078 = 2.479936e-18*t401;
  t1080 = -1.54996e-7*t758;
  t1099 = 1.124840000016e-6*t694;
  t1278 = t777*t1252;
  t1341 = -4.e-6*t694*t1332;
  t1404 = 4.e-6*t401*t1391;
  t1433 = t1072 + t1078 + t1080 + t1099 + t1278 + t1341 + t1404;
  t1534 = 0.281210000008499*t401;
  t1539 = -0.03874900000062*t694;
  t1547 = 4.e-6*t694*t1252;
  t1549 = t1008*t1332;
  t1551 = -1.*t694*t1391;
  t1555 = t1534 + t1539 + t1547 + t1549 + t1551;
  t567 = -1. + t503 + t552;
  t589 = 4.e-6*t509;
  t600 = -4.e-6*t403;
  t626 = t589 + t600;
  t1528 = -1.*t342*t1433;
  t1560 = t290*t1555;
  t1568 = t330 + t359 + t1528 + t1560;
  t2029 = t777*t567;
  t2034 = 4.e-6*t401*t626;
  t2046 = t2029 + t2034;
  t2057 = 4.e-6*t567*t694;
  t2062 = -1.*t626*t694;
  t2098 = t2057 + t2062;
  t1686 = -0.15121*t315;
  t1713 = t290*t1433;
  t1732 = t342*t1555;
  t1764 = t1686 + t359 + t1713 + t1732;
  t570 = 4.e-6*t401*t567;
  t654 = t386*t626;
  t681 = t570 + t654;
  t1820 = -4.9936e-13*var1[10];
  t1824 = -0.038749*t401;
  t1853 = 6.19984e-13*t758;
  t1887 = -0.281210000004*t694;
  t1894 = 4.e-6*t401*t1252;
  t1909 = t694*t1332;
  t1916 = t386*t1391;
  t1919 = 0. + t1820 + t1824 + t1853 + t1887 + t1894 + t1909 + t1916;
  t1794 = t694*t717;
  t1795 = 4.e-6*t401*t903;
  t1803 = t386*t954;
  t1810 = 0. + t1794 + t1795 + t1803;
  t991 = -1.*t342*t982;
  t1066 = t290*t1031;
  t1070 = 0. + t991 + t1066;
  t1600 = -1.*t1070*t1568;
  t1634 = t290*t982;
  t1646 = t342*t1031;
  t1670 = 0. + t1634 + t1646;
  t1787 = -1.*t1670*t1764;
  t1922 = -1.*t1810*t1919;
  t1933 = t1600 + t1787 + t1922;
  t2010 = t681*t1933;
  t2048 = -1.*t2046*t342;
  t2101 = t290*t2098;
  t2102 = t2048 + t2101;
  t2109 = t2102*t1568;
  t2116 = t290*t2046;
  t2159 = t342*t2098;
  t2170 = t2116 + t2159;
  t2178 = t2170*t1764;
  t2195 = t681*t1919;
  t2210 = t2109 + t2178 + t2195;
  t2217 = t2210*t1810;
  t2240 = t2010 + t2217;
  t2282 = t1820 + t1824 + t1853 + t1887 + t1894 + t1909 + t1916;
  t2340 = -1.7408e-8*t492;
  t2343 = -3.999964e-6*t702;
  t2366 = t2340 + t2343;
  t2422 = 0.999991*t700;
  t2427 = t2422 + t932;
  t2445 = -0.004352*t403;
  t2463 = 0.999991*t702;
  t2464 = t2445 + t2463;
  t2272 = -1.*t982*t1433;
  t2288 = -1.*t1810*t2282;
  t2302 = -1.*t1031*t1555;
  t2303 = t2272 + t2288 + t2302;
  t2304 = t681*t2303;
  t2305 = t2046*t1433;
  t2307 = t681*t2282;
  t2315 = t2098*t1555;
  t2332 = t2305 + t2307 + t2315;
  t2335 = t2332*t1810;
  t2393 = t777*t2366;
  t2428 = -4.e-6*t694*t2427;
  t2467 = 4.e-6*t401*t2464;
  t2481 = 0. + t2393 + t2428 + t2467;
  t2497 = -0.15121*t2481;
  t2508 = 4.e-6*t694*t2366;
  t2571 = t1008*t2427;
  t2593 = -1.*t694*t2464;
  t2621 = 0. + t2508 + t2571 + t2593;
  t2632 = -0.15121*t2621;
  t2636 = t2304 + t2335 + t2497 + t2632;
  t2677 = -1.*t1252*t903;
  t2693 = -1.*t717*t1332;
  t2728 = -1.*t954*t1391;
  t2740 = t2677 + t2693 + t2728;
  t2746 = t567*t1252;
  t2762 = t626*t1391;
  t2775 = t2746 + t2762;
  t2742 = -1.*t626*t2740;
  t2785 = -1.*t2775*t954;
  t2794 = t2742 + t2785;
  t2796 = 4.e-6*t2794;
  t2801 = -1.*t567*t2740;
  t2808 = 1.e-6*t2366;
  t2813 = -1.*t2775*t903;
  t2827 = -0.038749*t2427;
  t2830 = -0.28121*t2464;
  t2832 = t2796 + t2801 + t2808 + t2813 + t2827 + t2830;
  t207 = Cos(var1[4]);
  t262 = Cos(var1[5]);
  t2865 = Sin(var1[5]);
  t2856 = Sin(var1[4]);
  t2880 = -1.*t207*t262*t342;
  t2888 = -1.*t290*t207*t2865;
  t2889 = t2880 + t2888;
  t2910 = t290*t207*t262;
  t2924 = -1.*t207*t342*t2865;
  t2925 = t2910 + t2924;
  t3134 = 4.e-6*t401*t2366;
  t3155 = t694*t2427;
  t3199 = t386*t2464;
  t3206 = 0. + t3134 + t3155 + t3199;
  t3239 = t3206*t2856;
  t3251 = -1.*t342*t2481;
  t3266 = t290*t2621;
  t3269 = 0. + t3251 + t3266;
  t3274 = t262*t3269;
  t3286 = t290*t2481;
  t3306 = t342*t2621;
  t3344 = 0. + t3286 + t3306;
  t3346 = -1.*t3344*t2865;
  t3351 = 0. + t3274 + t3346;
  t3359 = t207*t3351;
  t3360 = 0. + t3239 + t3359;
  t2986 = t694*t2856;
  t3021 = -4.e-6*t694*t2889;
  t3027 = t1008*t2925;
  t3030 = t2986 + t3021 + t3027;
  t3050 = t386*t2856;
  t3051 = 4.e-6*t401*t2889;
  t3056 = -1.*t694*t2925;
  t3073 = t3050 + t3051 + t3056;
  t3091 = 4.e-6*t401*t2856;
  t3099 = t777*t2889;
  t3120 = 4.e-6*t694*t2925;
  t3121 = t3091 + t3099 + t3120;
  t3565 = t262*t2170;
  t3586 = t2102*t2865;
  t3609 = t3565 + t3586;
  t3557 = t262*t1670;
  t3559 = t1070*t2865;
  t3563 = 0. + t3557 + t3559;
  t3613 = t262*t1764;
  t3616 = t1568*t2865;
  t3618 = 0. + t3613 + t3616;
  t3646 = t262*t1568;
  t3652 = -1.*t1764*t2865;
  t3669 = 0. + t3646 + t3652;
  t3625 = t3609*t3618;
  t3634 = t262*t2102;
  t3640 = -1.*t2170*t2865;
  t3643 = t3634 + t3640;
  t3673 = t3643*t3669;
  t3678 = t2195 + t3625 + t3673;
  t3686 = t3563*t3678;
  t3689 = -1.*t3563*t3618;
  t3690 = t262*t1070;
  t3691 = -1.*t1670*t2865;
  t3692 = 0. + t3690 + t3691;
  t3697 = -1.*t3692*t3669;
  t3698 = t1922 + t3689 + t3697;
  t3701 = t3609*t3698;
  t3703 = t3686 + t3701;
  t3712 = Sin(var1[3]);
  t3714 = t262*t3344;
  t3723 = t3269*t2865;
  t3725 = 0. + t3714 + t3723;
  t3733 = t3712*t3725;
  t3744 = Cos(var1[3]);
  t3766 = t207*t3206;
  t3768 = -1.*t2856*t3351;
  t3778 = 0. + t3766 + t3768;
  t3784 = t3744*t3778;
  t3786 = 0. + t3733 + t3784;
  t3808 = t3744*t3725;
  t3817 = -1.*t3712*t3778;
  t3826 = 0. + t3808 + t3817;
  t3852 = t681*t2856;
  t3879 = t207*t3643;
  t3882 = t3852 + t3879;
  t3837 = t1810*t2856;
  t3843 = t207*t3692;
  t3845 = 0. + t3837 + t3843;
  t3895 = t1919*t2856;
  t3904 = t207*t3669;
  t3907 = 0. + t3895 + t3904;
  t3959 = t207*t1919;
  t3967 = -1.*t2856*t3669;
  t3970 = 0. + t3959 + t3967;
  t3908 = t3882*t3907;
  t3911 = t681*t207;
  t3916 = -1.*t2856*t3643;
  t3919 = t3911 + t3916;
  t3978 = t3919*t3970;
  t3988 = t3625 + t3908 + t3978;
  t3989 = t3845*t3988;
  t3990 = -1.*t3845*t3907;
  t3996 = t207*t1810;
  t3997 = -1.*t2856*t3692;
  t4000 = 0. + t3996 + t3997;
  t4002 = -1.*t4000*t3970;
  t4011 = t3689 + t3990 + t4002;
  t4014 = t3882*t4011;
  t4041 = t3989 + t4014;
  t4094 = 0.00130540515936178*t403;
  t4095 = -0.2999969999968001*t702;
  t4099 = t4094 + t4095;
  t4103 = -1.199987999968e-6*t403;
  t4114 = -5.2216206374471e-9*t702;
  t4115 = -1.26e-8 + t4103 + t4114;
  t4137 = 0.299996999992*t403;
  t4140 = -5.04e-14 + t4137 + t1331;
  t4100 = -4.e-6*t694*t4099;
  t4133 = t777*t4115;
  t4145 = 4.e-6*t401*t4140;
  t4146 = t4100 + t4133 + t4145;
  t4165 = t1008*t4099;
  t4171 = 4.e-6*t694*t4115;
  t4180 = -1.*t694*t4140;
  t4188 = t4165 + t4171 + t4180;
  t4228 = 0.004352*t403;
  t4230 = t4228 + t710;
  t4239 = -0.9999910000159999*t403;
  t4240 = -0.00435200000006963*t702;
  t4253 = t4239 + t4240;
  t4258 = -1.7408e-8*t403;
  t4262 = 3.999964000064e-6*t702;
  t4267 = t4258 + t4262;
  t4237 = 4.e-6*t401*t4230;
  t4255 = -4.e-6*t694*t4253;
  t4281 = t777*t4267;
  t4284 = t4237 + t4255 + t4281;
  t4292 = -1.*t694*t4230;
  t4293 = t1008*t4253;
  t4297 = 4.e-6*t694*t4267;
  t4321 = t4292 + t4293 + t4297;
  t4392 = t386*t4230;
  t4405 = t694*t4253;
  t4409 = 4.e-6*t401*t4267;
  t4417 = t4392 + t4405 + t4409;
  t4164 = -1.*t342*t4146;
  t4190 = t290*t4188;
  t4192 = t4164 + t4190;
  t4203 = t290*t4146;
  t4205 = t342*t4188;
  t4218 = t4203 + t4205;
  t4359 = t694*t4099;
  t4360 = 4.e-6*t401*t4115;
  t4364 = t386*t4140;
  t4368 = t4359 + t4360 + t4364;
  t4388 = -1.*t4368*t1810;
  t4521 = -3.999964e-6*t403;
  t4525 = t4521 + t900;
  t4532 = t911 + t932;
  t4436 = t681*t4368;
  t4636 = -1.*t717*t4099;
  t4637 = -1.*t903*t4115;
  t4638 = -1.*t1252*t4267;
  t4639 = -1.*t4253*t1332;
  t4643 = -1.*t4140*t954;
  t4647 = -1.*t4230*t1391;
  t4648 = t4636 + t4637 + t4638 + t4639 + t4643 + t4647;
  t4660 = t567*t4115;
  t4661 = t626*t4140;
  t4675 = t4660 + t4661;
  t4513 = -4.e-6*t694*t4230;
  t4531 = t777*t4525;
  t4534 = 4.e-6*t401*t4532;
  t4540 = t4513 + t4531 + t4534;
  t4558 = t1008*t4230;
  t4565 = 4.e-6*t694*t4525;
  t4569 = -1.*t694*t4532;
  t4582 = t4558 + t4565 + t4569;
  t4792 = t290*t4540;
  t4817 = t342*t4582;
  t4821 = t4792 + t4817;
  t4776 = -1.*t342*t4540;
  t4777 = t290*t4582;
  t4782 = t4776 + t4777;
  t4735 = t694*t4230;
  t4744 = 4.e-6*t401*t4525;
  t4745 = t386*t4532;
  t4755 = t4735 + t4744 + t4745;
  t4789 = t262*t4782;
  t4822 = -1.*t4821*t2865;
  t4836 = t4789 + t4822;
  t4851 = t262*t4821;
  t4853 = t4782*t2865;
  t4866 = t4851 + t4853;
  t4891 = t207*t4755;
  t4892 = -1.*t2856*t4836;
  t4899 = t4891 + t4892;
  t4334 = t290*t4284;
  t4339 = t342*t4321;
  t4342 = t4334 + t4339;
  t4289 = -1.*t342*t4284;
  t4323 = t290*t4321;
  t4329 = t4289 + t4323;
  t4419 = -1.*t4417*t1919;
  t4969 = t262*t4218;
  t4975 = t4192*t2865;
  t4977 = t4969 + t4975;
  t4981 = t262*t4192;
  t4983 = -1.*t4218*t2865;
  t4988 = t4981 + t4983;
  t5019 = t262*t4342;
  t5025 = t4329*t2865;
  t5029 = t5019 + t5025;
  t4978 = t3609*t4977;
  t5042 = t262*t4329;
  t5047 = -1.*t4342*t2865;
  t5048 = t5042 + t5047;
  t5038 = -1.*t4977*t3563;
  t5041 = -1.*t5029*t3618;
  t5079 = t4368*t2856;
  t5080 = t207*t4988;
  t5081 = t5079 + t5080;
  t5095 = t207*t4368;
  t5101 = -1.*t2856*t4988;
  t5124 = t5095 + t5101;
  t5148 = t4417*t2856;
  t5155 = t207*t5048;
  t5156 = t5148 + t5155;
  t5214 = -0.15121*t290;
  t5217 = t5214 + t359 + t1528 + t1560;
  t5233 = 0.15121*t342;
  t5234 = -1.*t290*t1433;
  t5239 = -1.*t342*t1555;
  t5251 = t5214 + t5233 + t5234 + t5239;
  t5322 = -1.*t290*t2481;
  t5333 = -1.*t342*t2621;
  t5336 = t5322 + t5333;
  t5337 = t262*t5336;
  t5339 = t3251 + t3266;
  t5343 = -1.*t5339*t2865;
  t5346 = t5337 + t5343;
  t5378 = t262*t5339;
  t5379 = t5336*t2865;
  t5382 = t5378 + t5379;
  t5277 = -1.*t290*t2046;
  t5281 = -1.*t342*t2098;
  t5283 = t5277 + t5281;
  t5256 = t991 + t1066;
  t5199 = -1.*t290*t982;
  t5207 = -1.*t342*t1031;
  t5208 = t5199 + t5207;
  t5488 = t262*t5256;
  t5489 = t5208*t2865;
  t5491 = t5488 + t5489;
  t5440 = t262*t5251;
  t5444 = -1.*t5217*t2865;
  t5448 = t5440 + t5444;
  t5456 = t262*t5217;
  t5457 = t5251*t2865;
  t5460 = t5456 + t5457;
  t5424 = t5283*t2865;
  t5434 = t3634 + t5424;
  t5436 = t5434*t3618;
  t5461 = t3609*t5460;
  t5463 = t262*t5283;
  t5470 = -1.*t2102*t2865;
  t5473 = t5463 + t5470;
  t5507 = -1.*t5491*t3618;
  t5522 = -1.*t3563*t5460;
  t5524 = t262*t5208;
  t5530 = -1.*t5256*t2865;
  t5540 = t5524 + t5530;
  t5635 = -1.*t262*t3344;
  t5639 = -1.*t3269*t2865;
  t5647 = t5635 + t5639;
  t5659 = t3274 + t3346;
  t5678 = -1.*t262*t1764;
  t5683 = -1.*t1568*t2865;
  t5685 = t5678 + t5683;
  t5752 = t3690 + t3691;
  t5695 = t3646 + t3652;
  t5688 = t3643*t3618;
  t5711 = t3609*t5695;
  t5715 = -1.*t262*t2170;
  t5716 = t5715 + t5470;
  t5759 = -1.*t5752*t3618;
  t5761 = -1.*t3563*t5695;
  t5763 = -1.*t262*t1670;
  t5765 = -1.*t1070*t2865;
  t5770 = t5763 + t5765;
  t5864 = -1.*t3206*t2856;
  t5866 = -1.*t207*t3351;
  t5868 = t5864 + t5866;
  t5887 = -1.*t1919*t2856;
  t5892 = -1.*t207*t3669;
  t5904 = t5887 + t5892;
  t5942 = t3996 + t3997;
  t5915 = t3959 + t3967;
  t6019 = -1.000000000016*t694*t717;
  t6024 = 4.e-6*t386*t903;
  t6027 = -1.*t386*t954;
  t6028 = t6019 + t6024 + t6027;
  t6032 = -4.e-6*t386*t717;
  t6035 = -1.6e-11*t694*t903;
  t6037 = 4.e-6*t694*t954;
  t6050 = t6032 + t6035 + t6037;
  t6084 = -0.03874900000062*t386;
  t6086 = 0.281210000008499*t694;
  t6087 = 4.e-6*t386*t1252;
  t6091 = -1.000000000016*t694*t1332;
  t6098 = -1.*t386*t1391;
  t6109 = t6084 + t6086 + t6087 + t6091 + t6098;
  t6124 = 1.124840000016e-6*t386;
  t6127 = 1.5499600000248e-7*t694;
  t6128 = -1.6e-11*t694*t1252;
  t6131 = -4.e-6*t386*t1332;
  t6138 = 4.e-6*t694*t1391;
  t6145 = -1.2484e-7 + t6124 + t6127 + t6128 + t6131 + t6138;
  t6217 = 4.e-6*t386*t567;
  t6220 = -1.*t386*t626;
  t6224 = t6217 + t6220;
  t6226 = -1.6e-11*t567*t694;
  t6228 = 4.e-6*t626*t694;
  t6232 = t6226 + t6228;
  t6118 = t342*t6109;
  t6158 = t290*t6145;
  t6161 = t6118 + t6158;
  t6166 = t290*t6109;
  t6174 = -1.*t342*t6145;
  t6177 = t6166 + t6174;
  t6200 = -0.281210000004*t386;
  t6205 = t386*t1332;
  t6206 = -4.9936e-13 + t6200 + t1539 + t1547 + t6205 + t1551;
  t6193 = t386*t717;
  t6195 = t6193 + t1028 + t1029;
  t6207 = -1.*t1810*t6206;
  t6262 = t681*t6206;
  t6329 = 4.e-6*t386*t2366;
  t6331 = -1.000000000016*t694*t2427;
  t6333 = -1.*t386*t2464;
  t6334 = t6329 + t6331 + t6333;
  t6341 = -1.6e-11*t694*t2366;
  t6342 = -4.e-6*t386*t2427;
  t6343 = 4.e-6*t694*t2464;
  t6360 = t6341 + t6342 + t6343;
  t6068 = t342*t6028;
  t6069 = t290*t6050;
  t6071 = t6068 + t6069;
  t6030 = t290*t6028;
  t6060 = -1.*t342*t6050;
  t6066 = t6030 + t6060;
  t6242 = t6224*t342;
  t6243 = t290*t6232;
  t6244 = t6242 + t6243;
  t6225 = t290*t6224;
  t6234 = -1.*t342*t6232;
  t6237 = t6225 + t6234;
  t6252 = t2098*t1919;
  t6418 = t262*t6244;
  t6420 = t6237*t2865;
  t6422 = t6418 + t6420;
  t6197 = -1.*t6195*t1919;
  t6406 = t262*t6071;
  t6411 = t6066*t2865;
  t6416 = t6406 + t6411;
  t6441 = t262*t6177;
  t6442 = -1.*t6161*t2865;
  t6445 = t6441 + t6442;
  t6457 = t262*t6161;
  t6459 = t6177*t2865;
  t6462 = t6457 + t6459;
  t6388 = t342*t6334;
  t6391 = t290*t6360;
  t6395 = t6388 + t6391;
  t6381 = t290*t6334;
  t6382 = -1.*t342*t6360;
  t6383 = t6381 + t6382;
  t6370 = t386*t2427;
  t6372 = t2508 + t6370 + t2593;
  t6387 = t262*t6383;
  t6398 = -1.*t6395*t2865;
  t6399 = t6387 + t6398;
  t6501 = t262*t6395;
  t6502 = t6383*t2865;
  t6503 = t6501 + t6502;
  t6507 = t207*t6372;
  t6513 = -1.*t2856*t6399;
  t6514 = t6507 + t6513;
  t6472 = t262*t6066;
  t6480 = -1.*t6071*t2865;
  t6481 = t6472 + t6480;
  t6429 = t262*t6237;
  t6431 = -1.*t6244*t2865;
  t6433 = t6429 + t6431;
  t6425 = t6422*t3618;
  t6465 = t3609*t6462;
  t6541 = t2098*t2856;
  t6543 = t207*t6433;
  t6546 = t6541 + t6543;
  t6471 = -1.*t6416*t3618;
  t6487 = -1.*t3563*t6462;
  t6532 = t6195*t2856;
  t6536 = t207*t6481;
  t6537 = t6532 + t6536;
  t6560 = t6206*t2856;
  t6562 = t207*t6445;
  t6563 = t6560 + t6562;
  t6572 = t207*t6206;
  t6576 = -1.*t2856*t6445;
  t6578 = t6572 + t6576;
  t6647 = t1568*t3269;
  t6655 = t1764*t3344;
  t6657 = t1919*t3206;
  t6662 = t6647 + t6655 + t6657;
  t6663 = t681*t6662;
  t6667 = -1.*t2102*t1568;
  t6669 = -1.*t2170*t1764;
  t6673 = -1.*t681*t1919;
  t6674 = t6667 + t6669 + t6673;
  t6677 = t6674*t3206;
  t6678 = t6663 + t6677;
  t6686 = t1433*t2481;
  t6689 = t2282*t3206;
  t6690 = t1555*t2621;
  t6692 = t6686 + t6689 + t6690;
  t6699 = t681*t6692;
  t6700 = -0.15121*t982;
  t6707 = -0.15121*t1031;
  t6708 = -1.*t2046*t1433;
  t6711 = -1.*t681*t2282;
  t6712 = -1.*t2098*t1555;
  t6713 = t6708 + t6711 + t6712;
  t6716 = t6713*t3206;
  t6720 = t6699 + t6700 + t6707 + t6716;
  t6725 = t2366*t1252;
  t6730 = t1332*t2427;
  t6732 = t1391*t2464;
  t6735 = t6725 + t6730 + t6732;
  t6738 = -1.*t567*t1252;
  t6740 = -1.*t626*t1391;
  t6746 = t6738 + t6740;
  t6736 = -1.*t626*t6735;
  t6750 = -1.*t6746*t2464;
  t6758 = t6736 + t6750;
  t6760 = 4.e-6*t6758;
  t6764 = -1.*t567*t6735;
  t6765 = -0.038749*t717;
  t6766 = -1.*t6746*t2366;
  t6767 = 1.e-6*t903;
  t6768 = -0.28121*t954;
  t6769 = t6760 + t6764 + t6765 + t6766 + t6767 + t6768;
  t2855 = t1820 + t1824 + t1853 + t1887;
  t364 = t330 + t359;
  t2862 = t1686 + t359;
  t2879 = t1072 + t1078 + t1080 + t1099;
  t6778 = t262*t3712*t2856;
  t6784 = t3744*t2865;
  t6785 = t6778 + t6784;
  t6792 = t3744*t262;
  t6794 = -1.*t3712*t2856*t2865;
  t6795 = t6792 + t6794;
  t2905 = t1534 + t1539;
  t6823 = t3712*t3563;
  t6828 = t3744*t4000;
  t6829 = 0. + t6823 + t6828;
  t6846 = t3744*t3563;
  t6849 = -1.*t3712*t4000;
  t6856 = 0. + t6846 + t6849;
  t6865 = -1.*t3609*t3618;
  t6867 = -1.*t3643*t3669;
  t6868 = t6673 + t6865 + t6867;
  t6869 = t3725*t6868;
  t6872 = t3618*t3725;
  t6874 = t3669*t3351;
  t6888 = t6657 + t6872 + t6874;
  t6889 = t3609*t6888;
  t6894 = t6869 + t6889;
  t2944 = -0.0398890000006382*t702;
  t2960 = t1312 + t2944;
  t6803 = -1.*t342*t6785;
  t6810 = t290*t6795;
  t6811 = t6803 + t6810;
  t6817 = t290*t6785;
  t6818 = t342*t6795;
  t6819 = t6817 + t6818;
  t3038 = -0.039889*t492;
  t3044 = -0.503150000008*t702;
  t3045 = t1353 + t3038 + t1359 + t3044;
  t3087 = 2.552896e-18*t492;
  t3089 = 2.012600000032e-6*t702;
  t3090 = t1123 + t3087 + t1241 + t3089;
  t6936 = -1.*t3882*t3907;
  t6938 = -1.*t3919*t3970;
  t6939 = t6865 + t6936 + t6938;
  t6945 = t3360*t6939;
  t6946 = t3907*t3360;
  t6947 = t3970*t3778;
  t6954 = t6872 + t6946 + t6947;
  t6955 = t3882*t6954;
  t6957 = t6945 + t6955;
  t6898 = -1.*t207*t694*t3712;
  t6906 = -4.e-6*t694*t6811;
  t6907 = t1008*t6819;
  t6909 = t6898 + t6906 + t6907;
  t6912 = -1.*t386*t207*t3712;
  t6913 = 4.e-6*t401*t6811;
  t6914 = -1.*t694*t6819;
  t6915 = t6912 + t6913 + t6914;
  t6917 = -4.e-6*t401*t207*t3712;
  t6918 = t777*t6811;
  t6920 = 4.e-6*t694*t6819;
  t6921 = t6917 + t6918 + t6920;
  t7021 = t4368*t3206;
  t7054 = -1.*t681*t4368;
  t7111 = t1252*t4525;
  t7112 = t2366*t4115;
  t7115 = t4230*t1332;
  t7119 = t4099*t2427;
  t7123 = t4532*t1391;
  t7124 = t4140*t2464;
  t7127 = t7111 + t7112 + t7115 + t7119 + t7123 + t7124;
  t7131 = -1.*t567*t4115;
  t7132 = -1.*t626*t4140;
  t7133 = t7131 + t7132;
  t5173 = t207*t4417;
  t5175 = -1.*t2856*t5048;
  t5177 = t5173 + t5175;
  t7020 = t4755*t1919;
  t7173 = -1.*t3609*t4977;
  t4768 = t4755*t2856;
  t4839 = t207*t4836;
  t4840 = t4768 + t4839;
  t7192 = t4866*t3618;
  t7195 = t4977*t3725;
  t7335 = -1.*t5434*t3618;
  t7337 = -1.*t3609*t5460;
  t7345 = t5460*t3725;
  t7346 = t3618*t5382;
  t7456 = -1.*t3643*t3618;
  t7457 = -1.*t3609*t5695;
  t7466 = t5695*t3725;
  t7467 = t3618*t5659;
  t5958 = -1.*t1810*t2856;
  t5959 = -1.*t207*t3692;
  t5961 = t5958 + t5959;
  t5918 = -1.*t681*t2856;
  t5922 = -1.*t207*t3643;
  t5924 = t5918 + t5922;
  t5883 = t3766 + t3768;
  t7598 = t6206*t3206;
  t7630 = -1.*t681*t6206;
  t6592 = t207*t6195;
  t6595 = -1.*t2856*t6481;
  t6598 = t6592 + t6595;
  t7629 = -1.*t2098*t1919;
  t7611 = t1919*t6372;
  t6374 = t6372*t2856;
  t6400 = t207*t6399;
  t6401 = t6374 + t6400;
  t7709 = -1.*t6422*t3618;
  t7718 = -1.*t3609*t6462;
  t6551 = t207*t2098;
  t6554 = -1.*t2856*t6433;
  t6556 = t6551 + t6554;
  t7725 = t6462*t3725;
  t7737 = t3618*t6503;
  t7779 = -1.*t1568*t3269;
  t7782 = -1.*t1764*t3344;
  t7783 = -1.*t1919*t3206;
  t7784 = t7779 + t7782 + t7783;
  t7785 = t7784*t1810;
  t7789 = t1070*t1568;
  t7791 = t1670*t1764;
  t7793 = t1810*t1919;
  t7794 = t7789 + t7791 + t7793;
  t7795 = t7794*t3206;
  t7799 = t7785 + t7795;
  t7803 = -0.15121*t2046;
  t7806 = -0.15121*t2098;
  t7810 = -1.*t1433*t2481;
  t7811 = -1.*t2282*t3206;
  t7812 = -1.*t1555*t2621;
  t7814 = t7810 + t7811 + t7812;
  t7817 = t7814*t1810;
  t7824 = t982*t1433;
  t7825 = t1810*t2282;
  t7826 = t1031*t1555;
  t7827 = t7824 + t7825 + t7826;
  t7828 = t7827*t3206;
  t7829 = t7803 + t7806 + t7817 + t7828;
  t7842 = t1252*t903;
  t7845 = t717*t1332;
  t7847 = t954*t1391;
  t7848 = t7842 + t7845 + t7847;
  t7836 = -1.*t2366*t1252;
  t7837 = -1.*t1332*t2427;
  t7838 = -1.*t1391*t2464;
  t7840 = t7836 + t7837 + t7838;
  t7833 = 1.e-6*t567;
  t7834 = -0.28121*t626;
  t7841 = -1.*t7840*t954;
  t7851 = -1.*t7848*t2464;
  t7853 = t7841 + t7851;
  t7854 = 4.e-6*t7853;
  t7855 = -1.*t7848*t2366;
  t7856 = -1.*t7840*t903;
  t7861 = t7833 + t7834 + t7854 + t7855 + t7856;
  t7866 = -1.*t3744*t262*t2856;
  t7870 = t3712*t2865;
  t7879 = t7866 + t7870;
  t7881 = t262*t3712;
  t7883 = t3744*t2856*t2865;
  t7885 = t7881 + t7883;
  t7909 = t3712*t3609;
  t7912 = t3744*t3919;
  t7915 = t7909 + t7912;
  t7918 = t3744*t3609;
  t7921 = -1.*t3712*t3919;
  t7923 = t7918 + t7921;
  t7926 = t3563*t3618;
  t7927 = t3692*t3669;
  t7930 = t7793 + t7926 + t7927;
  t7931 = t3725*t7930;
  t7933 = -1.*t3618*t3725;
  t7934 = -1.*t3669*t3351;
  t7935 = t7783 + t7933 + t7934;
  t7936 = t3563*t7935;
  t7937 = t7931 + t7936;
  t7894 = -1.*t342*t7879;
  t7896 = t290*t7885;
  t7898 = t7894 + t7896;
  t7902 = t290*t7879;
  t7904 = t342*t7885;
  t7905 = t7902 + t7904;
  t7979 = t3845*t3907;
  t7980 = t4000*t3970;
  t7981 = t7926 + t7979 + t7980;
  t7983 = t3360*t7981;
  t7984 = -1.*t3907*t3360;
  t7985 = -1.*t3970*t3778;
  t7988 = t7933 + t7984 + t7985;
  t7989 = t3845*t7988;
  t7990 = t7983 + t7989;
  t7940 = t3744*t207*t694;
  t7941 = -4.e-6*t694*t7898;
  t7942 = t1008*t7905;
  t7943 = t7940 + t7941 + t7942;
  t7945 = t386*t3744*t207;
  t7946 = 4.e-6*t401*t7898;
  t7947 = -1.*t694*t7905;
  t7948 = t7945 + t7946 + t7947;
  t7954 = 4.e-6*t401*t3744*t207;
  t7955 = t777*t7898;
  t7957 = 4.e-6*t694*t7905;
  t7960 = t7954 + t7955 + t7957;
  t8079 = t5491*t3618;
  t8088 = t3563*t5460;
  t8104 = -1.*t5460*t3725;
  t8108 = -1.*t3618*t5382;
  t8162 = t5752*t3618;
  t8164 = t3563*t5695;
  t8175 = -1.*t5695*t3725;
  t8177 = -1.*t3618*t5659;
  t8232 = -1.*t4368*t3206;
  t8241 = t4368*t1810;
  t8288 = t717*t4099;
  t8289 = t903*t4115;
  t8290 = t1252*t4267;
  t8291 = t4253*t1332;
  t8293 = t4140*t954;
  t8294 = t4230*t1391;
  t8295 = t8288 + t8289 + t8290 + t8291 + t8293 + t8294;
  t8274 = -1.*t1252*t4525;
  t8276 = -1.*t2366*t4115;
  t8278 = -1.*t4230*t1332;
  t8279 = -1.*t4099*t2427;
  t8284 = -1.*t4532*t1391;
  t8285 = -1.*t4140*t2464;
  t8286 = t8274 + t8276 + t8278 + t8279 + t8284 + t8285;
  t8242 = t4417*t1919;
  t8231 = -1.*t4755*t1919;
  t8307 = t4977*t3563;
  t8310 = t5029*t3618;
  t8317 = -1.*t4866*t3618;
  t8321 = -1.*t4977*t3725;
  t8405 = -1.*t6206*t3206;
  t8418 = t1810*t6206;
  t8417 = t6195*t1919;
  t8406 = -1.*t1919*t6372;
  t8477 = t6416*t3618;
  t8485 = t3563*t6462;
  t8493 = -1.*t6462*t3725;
  t8496 = -1.*t3618*t6503;
  p_output1[0]=t2855*t2856 - 1.*t207*t2862*t2865 + t2879*t2889 + t2905*t2925 + t2960*t3030 + t3045*t3073 + t3090*t3121 + t207*t262*t364 - 0.041195*(t3073*t403 + 4.e-6*t3121*t492 - 1.*t3030*t702) - 0.14871*(t1133*t3121 + 4.e-6*t3073*t492 + 4.e-6*t3030*t702) + 0.803147*(t3030*t700 + t3073*t702 - 4.e-6*t3121*t702) + var1[0] + t3360*var2[0] + t3826*var2[1] + t3786*var2[2] + t4041*var2[3] + ((-1.*t3712*t3725 - 1.*t3744*t3778)*var2[1] + (t3808 + t3817)*var2[2])*var2[3] + t3703*var2[4] + (t5883*var2[0] - 1.*t3712*t5868*var2[1] + t3744*t5868*var2[2] + (t3919*t4011 + t3845*(t3907*t3919 + t3919*t5904 + t3882*t5915 + t3970*t5924) + t3988*t5942 + t3882*(-1.*t4000*t5904 - 1.*t3845*t5915 - 1.*t3907*t5942 - 1.*t3970*t5961))*var2[3])*var2[4] + t2240*var2[5] + (t207*t5647*var2[0] + (t2856*t3712*t5647 + t3744*t5659)*var2[1] + (-1.*t2856*t3744*t5647 + t3712*t5659)*var2[2] + (t207*t4011*t5716 + t3845*(t207*t3882*t5685 - 1.*t2856*t3919*t5685 + t5688 + t5711 + t207*t3907*t5716 - 1.*t2856*t3970*t5716) + t207*t3988*t5770 + t3882*(-1.*t207*t3845*t5685 + t2856*t4000*t5685 + t5759 + t5761 - 1.*t207*t3907*t5770 + t2856*t3970*t5770))*var2[3] + (t3643*t3698 + t3563*(t3643*t5685 + t5688 + t5711 + t3669*t5716) + t3678*t5752 + t3609*(-1.*t3692*t5685 + t5759 + t5761 - 1.*t3669*t5770))*var2[4])*var2[5] + t2636*var2[9] + (t207*t5346*var2[0] + (t2856*t3712*t5346 + t3744*t5382)*var2[1] + (-1.*t2856*t3744*t5346 + t3712*t5382)*var2[2] + (t207*t4011*t5473 + t3845*(t5436 + t207*t3882*t5448 - 1.*t2856*t3919*t5448 + t5461 + t207*t3907*t5473 - 1.*t2856*t3970*t5473) + t207*t3988*t5540 + t3882*(-1.*t207*t3845*t5448 + t2856*t4000*t5448 + t5507 + t5522 - 1.*t207*t3907*t5540 + t2856*t3970*t5540))*var2[3] + (t3698*t5434 + t3563*(t5436 + t3643*t5448 + t5461 + t3669*t5473) + t3678*t5491 + t3609*(-1.*t3692*t5448 + t5507 + t5522 - 1.*t3669*t5540))*var2[4] + (t1810*(t1764*t2102 + t2170*t5217 + t2102*t5251 + t1568*t5283) + (-1.*t1568*t5208 - 1.*t1670*t5217 - 1.*t1070*t5251 - 1.*t1764*t5256)*t681)*var2[5])*var2[9] + t2832*var2[10] + (t6401*var2[0] + (t3744*t6503 - 1.*t3712*t6514)*var2[1] + (t3712*t6503 + t3744*t6514)*var2[2] + (t3988*t6537 + t4011*t6546 + t3845*(t6425 + t6465 + t3907*t6546 + t3970*t6556 + t3882*t6563 + t3919*t6578) + t3882*(t6471 + t6487 - 1.*t3907*t6537 - 1.*t3845*t6563 - 1.*t4000*t6578 - 1.*t3970*t6598))*var2[3] + (t3678*t6416 + t3698*t6422 + t3563*(t6252 + t6262 + t6425 + t3669*t6433 + t3643*t6445 + t6465) + t3609*(t6197 + t6207 - 1.*t3692*t6445 + t6471 - 1.*t3669*t6481 + t6487))*var2[4] + (t1933*t2098 + t2210*t6195 + t1810*(t2170*t6161 + t2102*t6177 + t1568*t6237 + t1764*t6244 + t6252 + t6262) + (-1.*t1568*t6066 - 1.*t1764*t6071 - 1.*t1670*t6161 - 1.*t1070*t6177 + t6197 + t6207)*t681)*var2[5] + (t2098*t2303 + t2332*t6195 + t1810*(t2098*t2282 + t2098*t6109 + t2046*t6145 + t1555*t6224 + t1433*t6232 + t6262) - 0.15121*t6334 - 0.15121*t6360 + t681*(-1.*t1555*t6028 - 1.*t1433*t6050 - 1.*t1031*t6109 - 1.*t2282*t6195 + t6207 - 1.*t6145*t982))*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t4840*var2[0] + (t3744*t4866 - 1.*t3712*t4899)*var2[1] + (t3712*t4866 + t3744*t4899)*var2[2] + (t3845*(t4978 + t3882*t5081 + t3919*t5124) + t3988*t5156 + t3882*(t5038 + t5041 - 1.*t3845*t5081 - 1.*t4000*t5124 - 1.*t3907*t5156 - 1.*t3970*t5177))*var2[3] + (t3563*(t4436 + t4978 + t3643*t4988) + t3678*t5029 + t3609*(t4388 + t4419 - 1.*t3692*t4988 + t5038 + t5041 - 1.*t3669*t5048))*var2[4] + (t2210*t4417 + t1810*(t2102*t4192 + t2170*t4218 + t4436) + (-1.*t1070*t4192 - 1.*t1670*t4218 - 1.*t1568*t4329 - 1.*t1764*t4342 + t4388 + t4419)*t681)*var2[5] + (t2332*t4417 + t1810*(t2046*t4146 + t2098*t4188 + t4436) - 0.15121*t4540 - 0.15121*t4582 + t681*(-1.*t1031*t4188 - 1.*t1433*t4284 - 1.*t1555*t4321 + t4388 - 1.*t2282*t4417 - 1.*t4146*t982))*var2[9] + (-0.038749*t4230 - 1.*t2775*t4267 + 1.e-6*t4525 - 0.28121*t4532 - 1.*t4648*t567 - 1.*t4675*t903 + 4.e-6*(-1.*t2775*t4230 - 1.*t4648*t626 - 1.*t4675*t954))*var2[10])*var2[11] + t3360*var3[0] + t3826*var3[1] + t3786*var3[2] + t4041*var3[3] + t3703*var3[4] + t2240*var3[5] + t2636*var3[9] + t2832*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t207*t2855*t3712 + t364*t6785 + t2862*t6795 + t2879*t6811 + t2905*t6819 + t2960*t6909 + t3045*t6915 + t3090*t6921 - 0.041195*(t403*t6915 + 4.e-6*t492*t6921 - 1.*t6909*t702) - 0.14871*(4.e-6*t492*t6915 + t1133*t6921 + 4.e-6*t6909*t702) + 0.803147*(t6909*t700 + t6915*t702 - 4.e-6*t6921*t702) + var1[1] + t3845*var2[0] + t6856*var2[1] + t6829*var2[2] + t6957*var2[3] + ((-1.*t3563*t3712 - 1.*t3744*t4000)*var2[1] + (t6846 + t6849)*var2[2])*var2[3] + t6894*var2[4] + (t5942*var2[0] - 1.*t3712*t5961*var2[1] + t3744*t5961*var2[2] + (t3882*(t3970*t5868 + t3907*t5883 + t3778*t5904 + t3360*t5915) + t3360*(-1.*t3907*t3919 - 1.*t3919*t5904 - 1.*t3882*t5915 - 1.*t3970*t5924) + t5883*t6939 + t3919*t6954)*var2[3])*var2[4] + t6678*var2[5] + (t207*t5770*var2[0] + (t3744*t5752 + t2856*t3712*t5770)*var2[1] + (t3712*t5752 - 1.*t2856*t3744*t5770)*var2[2] + (t207*t5647*t6939 + t207*t5716*t6954 + t3360*(-1.*t207*t3882*t5685 + t2856*t3919*t5685 - 1.*t207*t3907*t5716 + t2856*t3970*t5716 + t7456 + t7457) + t3882*(t207*t3907*t5647 - 1.*t2856*t3970*t5647 + t207*t3360*t5685 - 1.*t2856*t3778*t5685 + t7466 + t7467))*var2[3] + (t5659*t6868 + t3643*t6888 + t3725*(-1.*t3643*t5685 - 1.*t3669*t5716 + t7456 + t7457) + t3609*(t3669*t5647 + t3351*t5685 + t7466 + t7467))*var2[4])*var2[5] + t6720*var2[9] + (t207*t5540*var2[0] + (t3744*t5491 + t2856*t3712*t5540)*var2[1] + (t3712*t5491 - 1.*t2856*t3744*t5540)*var2[2] + (t207*t5346*t6939 + t207*t5473*t6954 + t3360*(-1.*t207*t3882*t5448 + t2856*t3919*t5448 - 1.*t207*t3907*t5473 + t2856*t3970*t5473 + t7335 + t7337) + t3882*(t207*t3907*t5346 - 1.*t2856*t3970*t5346 + t207*t3360*t5448 - 1.*t2856*t3778*t5448 + t7345 + t7346))*var2[3] + (t5382*t6868 + t5434*t6888 + t3725*(-1.*t3643*t5448 - 1.*t3669*t5473 + t7335 + t7337) + t3609*(t3669*t5346 + t3351*t5448 + t7345 + t7346))*var2[4] + (t3206*(-1.*t1764*t2102 - 1.*t2170*t5217 - 1.*t2102*t5251 - 1.*t1568*t5283) + (t3344*t5217 + t3269*t5251 + t1568*t5336 + t1764*t5339)*t681)*var2[5])*var2[9] + t6769*var2[10] + (t6537*var2[0] + (t3744*t6416 - 1.*t3712*t6598)*var2[1] + (t3712*t6416 + t3744*t6598)*var2[2] + (t6401*t6939 + t6546*t6954 + t3360*(-1.*t3907*t6546 - 1.*t3970*t6556 - 1.*t3882*t6563 - 1.*t3919*t6578 + t7709 + t7718) + t3882*(t3907*t6401 + t3970*t6514 + t3360*t6563 + t3778*t6578 + t7725 + t7737))*var2[3] + (t6503*t6868 + t6422*t6888 + t3725*(-1.*t3669*t6433 - 1.*t3643*t6445 + t7629 + t7630 + t7709 + t7718) + t3609*(t3669*t6399 + t3351*t6445 + t7598 + t7611 + t7725 + t7737))*var2[4] + (t2098*t6662 + t6372*t6674 + t681*(t3344*t6161 + t3269*t6177 + t1568*t6383 + t1764*t6395 + t7598 + t7611) + t3206*(-1.*t2170*t6161 - 1.*t2102*t6177 - 1.*t1568*t6237 - 1.*t1764*t6244 + t7629 + t7630))*var2[5] + (-0.15121*t6028 - 0.15121*t6050 + t2098*t6692 + t6372*t6713 + t681*(t2621*t6109 + t2481*t6145 + t1555*t6334 + t1433*t6360 + t2282*t6372 + t7598) + t3206*(-1.*t2098*t2282 - 1.*t2098*t6109 - 1.*t2046*t6145 - 1.*t1555*t6224 - 1.*t1433*t6232 + t7630))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5156*var2[0] + (t3744*t5029 - 1.*t3712*t5177)*var2[1] + (t3712*t5029 + t3744*t5177)*var2[2] + (t4840*t6939 + t3360*(-1.*t3882*t5081 - 1.*t3919*t5124 + t7173) + t3882*(t3907*t4840 + t3970*t4899 + t3360*t5081 + t3778*t5124 + t7192 + t7195))*var2[3] + (t4866*t6868 + t3725*(-1.*t3643*t4988 + t7054 + t7173) + t3609*(t3669*t4836 + t3351*t4988 + t7020 + t7021 + t7192 + t7195))*var2[4] + (t4755*t6674 + t681*(t3269*t4192 + t3344*t4218 + t1568*t4782 + t1764*t4821 + t7020 + t7021) + t3206*(-1.*t2102*t4192 - 1.*t2170*t4218 + t7054))*var2[5] + (-0.15121*t4284 - 0.15121*t4321 + t4755*t6713 + t681*(t2481*t4146 + t2621*t4188 + t1433*t4540 + t1555*t4582 + t2282*t4755 + t7021) + t3206*(-1.*t2046*t4146 - 1.*t2098*t4188 + t7054))*var2[9] + (-0.28121*t4230 - 0.038749*t4253 + 1.e-6*t4267 - 1.*t4525*t6746 - 1.*t567*t7127 - 1.*t2366*t7133 + 4.e-6*(-1.*t4532*t6746 - 1.*t626*t7127 - 1.*t2464*t7133))*var2[10])*var2[11] + t3845*var3[0] + t6856*var3[1] + t6829*var3[2] + t6957*var3[3] + t6894*var3[4] + t6678*var3[5] + t6720*var3[9] + t6769*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t207*t2855*t3744 + t364*t7879 + t2862*t7885 + t2879*t7898 + t2905*t7905 + t2960*t7943 + t3045*t7948 + t3090*t7960 - 0.14871*(4.e-6*t702*t7943 + 4.e-6*t492*t7948 + t1133*t7960) - 0.041195*(-1.*t702*t7943 + t403*t7948 + 4.e-6*t492*t7960) + 0.803147*(t700*t7943 + t702*t7948 - 4.e-6*t702*t7960) + var1[2] + t3882*var2[0] + t7923*var2[1] + t7915*var2[2] + t7990*var2[3] + ((-1.*t3609*t3712 - 1.*t3744*t3919)*var2[1] + t7923*var2[2])*var2[3] + t7937*var2[4] + (t3919*var2[0] - 1.*t3712*t5924*var2[1] + t3744*t5924*var2[2] + (t3845*(-1.*t3970*t5868 - 1.*t3907*t5883 - 1.*t3778*t5904 - 1.*t3360*t5915) + t3360*(t4000*t5904 + t3845*t5915 + t3907*t5942 + t3970*t5961) + t5883*t7981 + t5942*t7988)*var2[3])*var2[4] + t7799*var2[5] + (t207*t5716*var2[0] + (t3643*t3744 + t2856*t3712*t5716)*var2[1] + (t3643*t3712 - 1.*t2856*t3744*t5716)*var2[2] + (t207*t5647*t7981 + t207*t5770*t7988 + t3360*(t207*t3845*t5685 - 1.*t2856*t4000*t5685 + t207*t3907*t5770 - 1.*t2856*t3970*t5770 + t8162 + t8164) + t3845*(-1.*t207*t3907*t5647 + t2856*t3970*t5647 - 1.*t207*t3360*t5685 + t2856*t3778*t5685 + t8175 + t8177))*var2[3] + (t5659*t7930 + t5752*t7935 + t3725*(t3692*t5685 + t3669*t5770 + t8162 + t8164) + t3563*(-1.*t3669*t5647 - 1.*t3351*t5685 + t8175 + t8177))*var2[4])*var2[5] + t7829*var2[9] + (t207*t5473*var2[0] + (t3744*t5434 + t2856*t3712*t5473)*var2[1] + (t3712*t5434 - 1.*t2856*t3744*t5473)*var2[2] + (t207*t5346*t7981 + t207*t5540*t7988 + t3360*(t207*t3845*t5448 - 1.*t2856*t4000*t5448 + t207*t3907*t5540 - 1.*t2856*t3970*t5540 + t8079 + t8088) + t3845*(-1.*t207*t3907*t5346 + t2856*t3970*t5346 - 1.*t207*t3360*t5448 + t2856*t3778*t5448 + t8104 + t8108))*var2[3] + (t5382*t7930 + t5491*t7935 + t3725*(t3692*t5448 + t3669*t5540 + t8079 + t8088) + t3563*(-1.*t3669*t5346 - 1.*t3351*t5448 + t8104 + t8108))*var2[4] + (t3206*(t1568*t5208 + t1670*t5217 + t1070*t5251 + t1764*t5256) + t1810*(-1.*t3344*t5217 - 1.*t3269*t5251 - 1.*t1568*t5336 - 1.*t1764*t5339))*var2[5])*var2[9] + t7861*var2[10] + (t6546*var2[0] + (t3744*t6422 - 1.*t3712*t6556)*var2[1] + (t3712*t6422 + t3744*t6556)*var2[2] + (t6401*t7981 + t6537*t7988 + t3360*(t3907*t6537 + t3845*t6563 + t4000*t6578 + t3970*t6598 + t8477 + t8485) + t3845*(-1.*t3907*t6401 - 1.*t3970*t6514 - 1.*t3360*t6563 - 1.*t3778*t6578 + t8493 + t8496))*var2[3] + (t6503*t7930 + t6416*t7935 + t3725*(t3692*t6445 + t3669*t6481 + t8417 + t8418 + t8477 + t8485) + t3563*(-1.*t3669*t6399 - 1.*t3351*t6445 + t8405 + t8406 + t8493 + t8496))*var2[4] + (t6195*t7784 + t6372*t7794 + t1810*(-1.*t3344*t6161 - 1.*t3269*t6177 - 1.*t1568*t6383 - 1.*t1764*t6395 + t8405 + t8406) + t3206*(t1568*t6066 + t1764*t6071 + t1670*t6161 + t1070*t6177 + t8417 + t8418))*var2[5] + (-0.15121*t6224 - 0.15121*t6232 + t6195*t7814 + t6372*t7827 + t1810*(-1.*t2621*t6109 - 1.*t2481*t6145 - 1.*t1555*t6334 - 1.*t1433*t6360 - 1.*t2282*t6372 + t8405) + t3206*(t1555*t6028 + t1433*t6050 + t1031*t6109 + t2282*t6195 + t8418 + t6145*t982))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t4840*t7981 + t5156*t7988 + t3360*(t3845*t5081 + t4000*t5124 + t3907*t5156 + t3970*t5177 + t8307 + t8310) + t3845*(-1.*t3907*t4840 - 1.*t3970*t4899 - 1.*t3360*t5081 - 1.*t3778*t5124 + t8317 + t8321))*var2[3] + (t4866*t7930 + t5029*t7935 + t3725*(t3692*t4988 + t3669*t5048 + t8241 + t8242 + t8307 + t8310) + t3563*(-1.*t3669*t4836 - 1.*t3351*t4988 + t8231 + t8232 + t8317 + t8321))*var2[4] + (t4417*t7784 + t4755*t7794 + t1810*(-1.*t3269*t4192 - 1.*t3344*t4218 - 1.*t1568*t4782 - 1.*t1764*t4821 + t8231 + t8232) + t3206*(t1070*t4192 + t1670*t4218 + t1568*t4329 + t1764*t4342 + t8241 + t8242))*var2[5] + (t4417*t7814 + t4755*t7827 + t1810*(-1.*t2481*t4146 - 1.*t2621*t4188 - 1.*t1433*t4540 - 1.*t1555*t4582 - 1.*t2282*t4755 + t8232) + t3206*(t1031*t4188 + t1433*t4284 + t1555*t4321 + t2282*t4417 + t8241 + t4146*t982))*var2[9] + (-1.*t4267*t7840 - 1.*t4525*t7848 - 1.*t2366*t8295 - 1.*t8286*t903 + 4.e-6*(-1.*t4230*t7840 - 1.*t4532*t7848 - 1.*t2464*t8295 - 1.*t8286*t954))*var2[10])*var2[11] + t3882*var3[0] + t7923*var3[1] + t7915*var3[2] + t7990*var3[3] + t7937*var3[4] + t7799*var3[5] + t7829*var3[9] + t7861*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_TrotStance1.hh"

namespace TrotStance1
{

void ddh_FrFoot_TrotStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
