/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:27:35 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t108;
  double t173;
  double t174;
  double t210;
  double t250;
  double t273;
  double t121;
  double t340;
  double t403;
  double t404;
  double t406;
  double t412;
  double t477;
  double t504;
  double t383;
  double t389;
  double t391;
  double t439;
  double t440;
  double t441;
  double t561;
  double t565;
  double t568;
  double t572;
  double t506;
  double t511;
  double t512;
  double t513;
  double t541;
  double t548;
  double t672;
  double t619;
  double t622;
  double t630;
  double t633;
  double t585;
  double t588;
  double t593;
  double t598;
  double t601;
  double t603;
  double t301;
  double t309;
  double t343;
  double t370;
  double t400;
  double t409;
  double t427;
  double t428;
  double t451;
  double t467;
  double t469;
  double t763;
  double t764;
  double t776;
  double t788;
  double t799;
  double t804;
  double t558;
  double t571;
  double t574;
  double t579;
  double t606;
  double t610;
  double t612;
  double t639;
  double t641;
  double t644;
  double t658;
  double t714;
  double t715;
  double t838;
  double t844;
  double t845;
  double t814;
  double t817;
  double t818;
  double t866;
  double t867;
  double t875;
  double t679;
  double t683;
  double t784;
  double t806;
  double t832;
  double t864;
  double t877;
  double t878;
  double t881;
  double t886;
  double t891;
  double t897;
  double t914;
  double t917;
  double t935;
  double t947;
  double t952;
  double t954;
  double t957;
  double t958;
  double t975;
  double t977;
  double t1081;
  double t1082;
  double t1087;
  double t1143;
  double t1152;
  double t1165;
  double t1169;
  double t1180;
  double t1187;
  double t1189;
  double t1191;
  double t1118;
  double t1122;
  double t1124;
  double t1125;
  double t1297;
  double t1300;
  double t1301;
  double t1304;
  double t1263;
  double t1265;
  double t1268;
  double t1271;
  double t1311;
  double t1313;
  double t1390;
  double t1386;
  double t1387;
  double t1395;
  double t1396;
  double t1403;
  double t1405;
  double t1406;
  double t486;
  double t492;
  double t496;
  double t499;
  double t1411;
  double t1413;
  double t1415;
  double t1426;
  double t1427;
  double t1429;
  double t1433;
  double t1437;
  double t1439;
  double t1445;
  double t1459;
  double t1460;
  double t1463;
  double t1464;
  double t1447;
  double t1449;
  double t1450;
  double t1453;
  double t1513;
  double t1516;
  double t1518;
  double t1521;
  double t1526;
  double t1527;
  double t1536;
  double t1539;
  double t1540;
  double t1543;
  double t1557;
  double t1560;
  double t1562;
  double t1566;
  double t1548;
  double t1550;
  double t1551;
  double t1552;
  double t1632;
  double t1633;
  double t1635;
  double t1642;
  double t1653;
  double t1654;
  double t1657;
  double t1659;
  double t1665;
  double t1672;
  double t1674;
  double t1676;
  double t1683;
  double t1685;
  double t1694;
  double t1679;
  double t1680;
  double t1681;
  double t1697;
  double t1698;
  double t1701;
  double t983;
  double t988;
  double t992;
  double t994;
  double t1746;
  double t1748;
  double t1749;
  double t1753;
  double t1754;
  double t1757;
  double t1759;
  double t1770;
  double t1771;
  double t1776;
  double t1762;
  double t1763;
  double t1766;
  double t1778;
  double t1780;
  double t1782;
  double t1010;
  double t1019;
  double t1021;
  double t1058;
  double t1064;
  double t1071;
  double t1090;
  double t1091;
  double t1094;
  double t1834;
  double t1837;
  double t1839;
  double t1851;
  double t1852;
  double t1853;
  double t1855;
  double t1860;
  double t1862;
  double t1865;
  double t1867;
  double t1843;
  double t1844;
  double t1846;
  double t1848;
  double t1278;
  double t1285;
  double t1288;
  double t1306;
  double t1307;
  double t1308;
  double t1316;
  double t1322;
  double t1325;
  double t1930;
  double t1931;
  double t1932;
  double t1934;
  double t1911;
  double t1912;
  double t1914;
  double t1921;
  double t1938;
  double t1940;
  double t1955;
  double t1960;
  double t2037;
  double t2038;
  double t2039;
  double t2045;
  double t2051;
  double t2052;
  double t2056;
  double t2057;
  double t2059;
  double t2061;
  double t2084;
  double t2087;
  double t2091;
  double t2094;
  double t2065;
  double t2076;
  double t2078;
  double t2079;
  double t2129;
  double t2130;
  double t2131;
  double t2137;
  double t2141;
  double t2148;
  double t2150;
  double t2152;
  double t2164;
  double t2169;
  double t2170;
  double t2156;
  double t2159;
  double t2160;
  double t2173;
  double t2177;
  double t2178;
  double t2232;
  double t2237;
  double t2239;
  double t2241;
  double t2242;
  double t2251;
  double t2254;
  double t2267;
  double t2269;
  double t2274;
  double t2259;
  double t2262;
  double t2263;
  double t2278;
  double t2279;
  double t2280;
  double t2334;
  double t2336;
  double t2338;
  double t2358;
  double t2363;
  double t2364;
  double t2369;
  double t2370;
  double t2371;
  double t2374;
  double t2344;
  double t2345;
  double t2347;
  double t2351;
  double t2444;
  double t2446;
  double t2450;
  double t2451;
  double t2425;
  double t2428;
  double t2434;
  double t2435;
  double t2455;
  double t2459;
  double t2495;
  double t2498;
  double t2499;
  double t2509;
  double t2554;
  double t2558;
  double t2561;
  double t2562;
  double t2567;
  double t2517;
  double t2518;
  double t2586;
  double t2504;
  double t2675;
  double t2677;
  double t2680;
  double t2688;
  double t2650;
  double t2612;
  double t2628;
  double t2630;
  double t2663;
  double t2665;
  double t2668;
  double t2699;
  double t2525;
  double t2706;
  double t2511;
  double t2687;
  double t2750;
  double t2754;
  double t2774;
  double t2600;
  double t2721;
  double t2587;
  double t2791;
  double t2711;
  double t2713;
  double t2726;
  double t2731;
  double t2733;
  double t2735;
  double t2738;
  double t2739;
  double t2799;
  double t2768;
  double t2769;
  double t2770;
  double t2778;
  double t2784;
  double t2785;
  double t2786;
  double t2787;
  double t2811;
  double t2812;
  double t2813;
  double t2814;
  double t2816;
  double t2817;
  double t2820;
  double t2821;
  double t2743;
  double t2838;
  double t2760;
  double t2852;
  double t2831;
  double t2693;
  double t2574;
  double t2575;
  double t2568;
  double t2569;
  double t2636;
  double t2646;
  double t2651;
  double t2652;
  double t2653;
  double t2656;
  double t2661;
  double t2582;
  double t2584;
  double t2594;
  double t2597;
  double t2601;
  double t2604;
  double t2610;
  double t2789;
  double t2790;
  double t2793;
  double t2794;
  double t2801;
  double t2803;
  double t2805;
  double t2911;
  double t2912;
  double t2914;
  double t2917;
  double t2918;
  double t2920;
  double t2741;
  double t2742;
  double t2745;
  double t2747;
  double t2761;
  double t2763;
  double t2767;
  double t2673;
  double t2683;
  double t2695;
  double t2698;
  double t2700;
  double t2702;
  double t2705;
  double t2890;
  double t2924;
  double t2925;
  double t2927;
  double t2888;
  double t2930;
  double t2933;
  double t2934;
  double t2881;
  double t2882;
  double t2936;
  double t2938;
  double t2941;
  double t2875;
  double t2861;
  double t2863;
  double t2856;
  double t2842;
  double t2843;
  double t2839;
  double t2832;
  double t2915;
  double t2923;
  double t2929;
  double t2935;
  double t2947;
  double t2948;
  double t2951;
  double t2952;
  double t2953;
  double t2954;
  double t2956;
  double t2957;
  double t2965;
  double t2967;
  double t2972;
  double t2975;
  double t2976;
  double t2978;
  double t2980;
  double t2981;
  double t3004;
  double t3023;
  double t3027;
  double t3052;
  double t3054;
  double t3057;
  double t2997;
  double t3075;
  double t3044;
  double t3061;
  double t3063;
  double t3064;
  double t3065;
  double t3066;
  double t3067;
  double t3069;
  double t3072;
  double t3073;
  double t3076;
  double t3077;
  double t3079;
  double t3084;
  double t3085;
  double t3086;
  double t3089;
  double t3090;
  double t3092;
  double t3134;
  double t3153;
  double t3154;
  double t3155;
  double t3158;
  double t3181;
  double t3182;
  double t3184;
  double t3186;
  double t3142;
  double t3209;
  double t3211;
  double t3215;
  double t3216;
  double t3223;
  double t3162;
  double t3200;
  double t3188;
  double t2494;
  double t2502;
  double t2514;
  double t2516;
  double t2527;
  double t2541;
  double t2547;
  double t3298;
  double t3299;
  double t3300;
  double t3303;
  double t3304;
  double t3306;
  double t3315;
  double t3316;
  double t3317;
  double t3319;
  double t3330;
  double t3332;
  double t3333;
  double t3335;
  double t3340;
  double t3341;
  double t3342;
  double t3346;
  double t3398;
  double t3402;
  double t3403;
  double t3410;
  double t3411;
  double t3412;
  double t3416;
  double t3419;
  double t3425;
  double t3426;
  double t3428;
  double t3437;
  double t3439;
  double t3441;
  double t3446;
  double t3447;
  double t3449;
  double t3451;
  double t3491;
  double t3492;
  double t3495;
  double t3498;
  double t3499;
  double t3500;
  double t3502;
  double t3503;
  double t3511;
  double t3515;
  double t3517;
  double t3518;
  double t3524;
  double t3525;
  double t3526;
  double t2986;
  double t2989;
  double t2991;
  double t2992;
  double t3583;
  double t3585;
  double t3589;
  double t3591;
  double t3594;
  double t3595;
  double t3596;
  double t3599;
  double t3601;
  double t3604;
  double t3613;
  double t3614;
  double t3615;
  double t2999;
  double t3003;
  double t3005;
  double t3009;
  double t3012;
  double t3018;
  double t3024;
  double t3025;
  double t3030;
  double t3032;
  double t3033;
  double t3034;
  double t3042;
  double t3043;
  double t3045;
  double t3046;
  double t3047;
  double t3049;
  double t3678;
  double t3679;
  double t3680;
  double t3684;
  double t3686;
  double t3687;
  double t3689;
  double t3694;
  double t3696;
  double t3697;
  double t3698;
  double t3700;
  double t3703;
  double t3706;
  double t3709;
  double t3138;
  double t3139;
  double t3143;
  double t3149;
  double t3151;
  double t3152;
  double t3166;
  double t3168;
  double t3169;
  double t3170;
  double t3173;
  double t3179;
  double t3195;
  double t3199;
  double t3201;
  double t3202;
  double t3207;
  double t3208;
  double t3767;
  double t3771;
  double t3772;
  double t3778;
  double t3226;
  double t3780;
  double t3781;
  double t3783;
  double t3787;
  double t3245;
  double t3790;
  double t3793;
  double t3794;
  double t3795;
  double t3259;
  double t3265;
  double t3277;
  double t3280;
  double t3931;
  double t3934;
  double t3936;
  double t3940;
  double t3941;
  double t3942;
  double t3944;
  double t3945;
  double t3946;
  double t3947;
  double t3949;
  double t3951;
  double t3953;
  double t3954;
  double t3957;
  double t3959;
  double t3960;
  double t3962;
  double t4017;
  double t4018;
  double t4019;
  double t4022;
  double t4026;
  double t4036;
  double t4037;
  double t4038;
  double t4047;
  double t4050;
  double t4052;
  double t4055;
  double t4056;
  double t4062;
  double t4131;
  double t4132;
  double t4136;
  double t4137;
  double t4144;
  double t4146;
  double t4155;
  double t4173;
  double t4176;
  double t4178;
  double t4190;
  double t4191;
  double t4195;
  double t4236;
  double t4237;
  double t4238;
  double t4250;
  double t4252;
  double t4255;
  double t4256;
  double t4260;
  double t4263;
  double t4265;
  double t4266;
  double t4272;
  double t4273;
  double t4276;
  double t4278;
  double t4329;
  double t4330;
  double t4333;
  double t4338;
  double t4340;
  double t4341;
  double t4344;
  double t4345;
  double t4348;
  double t4349;
  double t4351;
  double t4352;
  t108 = Sin(var1[4]);
  t173 = Cos(var1[6]);
  t174 = -1.*t173;
  t210 = 1. + t174;
  t250 = 0.15121*t210;
  t273 = Sin(var1[6]);
  t121 = Sin(var1[5]);
  t340 = Cos(var1[5]);
  t403 = Cos(var1[7]);
  t404 = -1.*t403;
  t406 = 1. + t404;
  t412 = Sin(var1[7]);
  t477 = Cos(var1[4]);
  t504 = -1. + t403;
  t383 = t173*t108*t121;
  t389 = t340*t108*t273;
  t391 = t383 + t389;
  t439 = -1.*t340*t173*t108;
  t440 = t108*t121*t273;
  t441 = t439 + t440;
  t561 = Cos(var1[8]);
  t565 = -1.*t561;
  t568 = 1. + t565;
  t572 = Sin(var1[8]);
  t506 = 4.e-6*t477*t504;
  t511 = 1.6e-11*t504;
  t512 = 1. + t511;
  t513 = t512*t391;
  t541 = 4.e-6*t441*t412;
  t548 = t506 + t513 + t541;
  t672 = -1. + t561;
  t619 = t477*t403;
  t622 = 4.e-6*t504*t391;
  t630 = t441*t412;
  t633 = t619 + t622 + t630;
  t585 = -1.000000000016*t406;
  t588 = 1. + t585;
  t593 = t588*t441;
  t598 = -1.*t477*t412;
  t601 = -4.e-6*t391*t412;
  t603 = t593 + t598 + t601;
  t301 = -0.15121*t273;
  t309 = t250 + t301;
  t343 = 0.15121*t273;
  t370 = t250 + t343;
  t400 = -1.2484e-7*var1[7];
  t409 = -1.5499600000248e-7*t406;
  t427 = 1.124840000016e-6*t412;
  t428 = t400 + t409 + t427;
  t451 = 0.281210000008499*t406;
  t467 = 0.03874900000062*t412;
  t469 = t451 + t467;
  t763 = -1.*t477*t340*t173;
  t764 = t477*t121*t273;
  t776 = t763 + t764;
  t788 = -1.*t477*t173*t121;
  t799 = -1.*t477*t340*t273;
  t804 = t788 + t799;
  t558 = -1.284e-8*var1[8];
  t571 = -1.5499600000248e-7*t568;
  t574 = 2.012840000032e-6*t572;
  t579 = t558 + t571 + t574;
  t606 = 0.503210000016051*t568;
  t610 = 0.03874900000062*t572;
  t612 = t606 + t610;
  t639 = 5.136e-14*var1[8];
  t641 = -0.03874900000062*t568;
  t644 = 0.503210000008*t572;
  t658 = t639 + t641 + t644;
  t714 = -1.000000000016*t568;
  t715 = 1. + t714;
  t838 = t588*t804;
  t844 = -4.e-6*t776*t412;
  t845 = t838 + t844;
  t814 = t512*t776;
  t817 = 4.e-6*t804*t412;
  t818 = t814 + t817;
  t866 = 4.e-6*t504*t776;
  t867 = t804*t412;
  t875 = t866 + t867;
  t679 = 1.6e-11*t672;
  t683 = 1. + t679;
  t784 = t776*t428;
  t806 = t804*t469;
  t832 = t818*t579;
  t864 = t845*t612;
  t877 = t875*t658;
  t878 = t715*t845;
  t881 = -4.e-6*t818*t572;
  t886 = -1.*t875*t572;
  t891 = t878 + t881 + t886;
  t897 = 0.80321*t891;
  t914 = t683*t818;
  t917 = 4.e-6*t672*t875;
  t935 = 4.e-6*t845*t572;
  t947 = t914 + t917 + t935;
  t952 = 0.14871*t947;
  t954 = 4.e-6*t672*t818;
  t957 = t561*t875;
  t958 = t845*t572;
  t975 = t954 + t957 + t958;
  t977 = -0.03875*t975;
  t1081 = t477*t340*t173;
  t1082 = -1.*t477*t121*t273;
  t1087 = t1081 + t1082;
  t1143 = -1.*t403*t108;
  t1152 = -4.e-6*t403*t804;
  t1165 = -1.000000000016*t1087*t412;
  t1169 = t1143 + t1152 + t1165;
  t1180 = t403*t1087;
  t1187 = -1.*t108*t412;
  t1189 = -4.e-6*t804*t412;
  t1191 = t1180 + t1187 + t1189;
  t1118 = 4.e-6*t403*t1087;
  t1122 = -4.e-6*t108*t412;
  t1124 = -1.6e-11*t804*t412;
  t1125 = t1118 + t1122 + t1124;
  t1297 = 4.e-6*t504*t108;
  t1300 = t512*t804;
  t1301 = 4.e-6*t1087*t412;
  t1304 = t1297 + t1300 + t1301;
  t1263 = t403*t108;
  t1265 = 4.e-6*t504*t804;
  t1268 = t1087*t412;
  t1271 = t1263 + t1265 + t1268;
  t1311 = t588*t1087;
  t1313 = t1311 + t1187 + t1189;
  t1390 = Cos(var1[3]);
  t1386 = Sin(var1[3]);
  t1387 = -1.*t340*t1386;
  t1395 = -1.*t1390*t108*t121;
  t1396 = t1387 + t1395;
  t1403 = t1390*t340*t108;
  t1405 = -1.*t1386*t121;
  t1406 = t1403 + t1405;
  t486 = 4.9936e-13*var1[7];
  t492 = -0.03874900000062*t406;
  t496 = 0.281210000004*t412;
  t499 = t486 + t492 + t496;
  t1411 = t173*t1396;
  t1413 = -1.*t1406*t273;
  t1415 = t1411 + t1413;
  t1426 = t173*t1406;
  t1427 = t1396*t273;
  t1429 = t1426 + t1427;
  t1433 = -4.e-6*t1390*t477*t504;
  t1437 = t512*t1415;
  t1439 = 4.e-6*t1429*t412;
  t1445 = t1433 + t1437 + t1439;
  t1459 = -1.*t1390*t477*t403;
  t1460 = 4.e-6*t504*t1415;
  t1463 = t1429*t412;
  t1464 = t1459 + t1460 + t1463;
  t1447 = t588*t1429;
  t1449 = t1390*t477*t412;
  t1450 = -4.e-6*t1415*t412;
  t1453 = t1447 + t1449 + t1450;
  t1513 = -1.*t477*t173*t1386*t121;
  t1516 = -1.*t477*t340*t1386*t273;
  t1518 = t1513 + t1516;
  t1521 = t477*t340*t173*t1386;
  t1526 = -1.*t477*t1386*t121*t273;
  t1527 = t1521 + t1526;
  t1536 = 4.e-6*t504*t1386*t108;
  t1539 = t512*t1518;
  t1540 = 4.e-6*t1527*t412;
  t1543 = t1536 + t1539 + t1540;
  t1557 = t403*t1386*t108;
  t1560 = 4.e-6*t504*t1518;
  t1562 = t1527*t412;
  t1566 = t1557 + t1560 + t1562;
  t1548 = t588*t1527;
  t1550 = -1.*t1386*t108*t412;
  t1551 = -4.e-6*t1518*t412;
  t1552 = t1548 + t1550 + t1551;
  t1632 = -1.*t340*t1386*t108;
  t1633 = -1.*t1390*t121;
  t1635 = t1632 + t1633;
  t1642 = t1390*t340;
  t1653 = -1.*t1386*t108*t121;
  t1654 = t1642 + t1653;
  t1657 = t173*t1635;
  t1659 = -1.*t1654*t273;
  t1665 = t1657 + t1659;
  t1672 = t173*t1654;
  t1674 = t1635*t273;
  t1676 = t1672 + t1674;
  t1683 = t588*t1676;
  t1685 = -4.e-6*t1665*t412;
  t1694 = t1683 + t1685;
  t1679 = t512*t1665;
  t1680 = 4.e-6*t1676*t412;
  t1681 = t1679 + t1680;
  t1697 = 4.e-6*t504*t1665;
  t1698 = t1676*t412;
  t1701 = t1697 + t1698;
  t983 = -0.15121*t173;
  t988 = t983 + t343;
  t992 = 0.15121*t173;
  t994 = t992 + t343;
  t1746 = t340*t1386*t108;
  t1748 = t1390*t121;
  t1749 = t1746 + t1748;
  t1753 = -1.*t173*t1749;
  t1754 = t1753 + t1659;
  t1757 = -1.*t1749*t273;
  t1759 = t1672 + t1757;
  t1770 = t588*t1759;
  t1771 = -4.e-6*t1754*t412;
  t1776 = t1770 + t1771;
  t1762 = t512*t1754;
  t1763 = 4.e-6*t1759*t412;
  t1766 = t1762 + t1763;
  t1778 = 4.e-6*t504*t1754;
  t1780 = t1759*t412;
  t1782 = t1778 + t1780;
  t1010 = 0.281210000004*t403;
  t1019 = -0.03874900000062*t412;
  t1021 = 4.9936e-13 + t1010 + t1019;
  t1058 = 1.124840000016e-6*t403;
  t1064 = -1.5499600000248e-7*t412;
  t1071 = -1.2484e-7 + t1058 + t1064;
  t1090 = 0.03874900000062*t403;
  t1091 = 0.281210000008499*t412;
  t1094 = t1090 + t1091;
  t1834 = t173*t1749;
  t1837 = t1654*t273;
  t1839 = t1834 + t1837;
  t1851 = t477*t403*t1386;
  t1852 = -4.e-6*t403*t1759;
  t1853 = -1.000000000016*t1839*t412;
  t1855 = t1851 + t1852 + t1853;
  t1860 = t403*t1839;
  t1862 = t477*t1386*t412;
  t1865 = -4.e-6*t1759*t412;
  t1867 = t1860 + t1862 + t1865;
  t1843 = 4.e-6*t403*t1839;
  t1844 = 4.e-6*t477*t1386*t412;
  t1846 = -1.6e-11*t1759*t412;
  t1848 = t1843 + t1844 + t1846;
  t1278 = 0.503210000008*t561;
  t1285 = -0.03874900000062*t572;
  t1288 = 5.136e-14 + t1278 + t1285;
  t1306 = 2.012840000032e-6*t561;
  t1307 = -1.5499600000248e-7*t572;
  t1308 = -1.284e-8 + t1306 + t1307;
  t1316 = 0.03874900000062*t561;
  t1322 = 0.503210000016051*t572;
  t1325 = t1316 + t1322;
  t1930 = -4.e-6*t477*t504*t1386;
  t1931 = t512*t1759;
  t1932 = 4.e-6*t1839*t412;
  t1934 = t1930 + t1931 + t1932;
  t1911 = -1.*t477*t403*t1386;
  t1912 = 4.e-6*t504*t1759;
  t1914 = t1839*t412;
  t1921 = t1911 + t1912 + t1914;
  t1938 = t588*t1839;
  t1940 = t1938 + t1862 + t1865;
  t1955 = -4.e-6*t1934*t572;
  t1960 = -1.*t1921*t572;
  t2037 = t1390*t477*t173*t121;
  t2038 = t1390*t477*t340*t273;
  t2039 = t2037 + t2038;
  t2045 = -1.*t1390*t477*t340*t173;
  t2051 = t1390*t477*t121*t273;
  t2052 = t2045 + t2051;
  t2056 = -4.e-6*t1390*t504*t108;
  t2057 = t512*t2039;
  t2059 = 4.e-6*t2052*t412;
  t2061 = t2056 + t2057 + t2059;
  t2084 = -1.*t1390*t403*t108;
  t2087 = 4.e-6*t504*t2039;
  t2091 = t2052*t412;
  t2094 = t2084 + t2087 + t2091;
  t2065 = t588*t2052;
  t2076 = t1390*t108*t412;
  t2078 = -4.e-6*t2039*t412;
  t2079 = t2065 + t2076 + t2078;
  t2129 = t340*t1386;
  t2130 = t1390*t108*t121;
  t2131 = t2129 + t2130;
  t2137 = -1.*t2131*t273;
  t2141 = t1426 + t2137;
  t2148 = t173*t2131;
  t2150 = t1406*t273;
  t2152 = t2148 + t2150;
  t2164 = t588*t2152;
  t2169 = -4.e-6*t2141*t412;
  t2170 = t2164 + t2169;
  t2156 = t512*t2141;
  t2159 = 4.e-6*t2152*t412;
  t2160 = t2156 + t2159;
  t2173 = 4.e-6*t504*t2141;
  t2177 = t2152*t412;
  t2178 = t2173 + t2177;
  t2232 = -1.*t1390*t340*t108;
  t2237 = t1386*t121;
  t2239 = t2232 + t2237;
  t2241 = -1.*t173*t2239;
  t2242 = t2241 + t2137;
  t2251 = -1.*t2239*t273;
  t2254 = t2148 + t2251;
  t2267 = t588*t2254;
  t2269 = -4.e-6*t2242*t412;
  t2274 = t2267 + t2269;
  t2259 = t512*t2242;
  t2262 = 4.e-6*t2254*t412;
  t2263 = t2259 + t2262;
  t2278 = 4.e-6*t504*t2242;
  t2279 = t2254*t412;
  t2280 = t2278 + t2279;
  t2334 = t173*t2239;
  t2336 = t2131*t273;
  t2338 = t2334 + t2336;
  t2358 = -4.e-6*t403*t2254;
  t2363 = -1.000000000016*t2338*t412;
  t2364 = t1459 + t2358 + t2363;
  t2369 = t403*t2338;
  t2370 = -1.*t1390*t477*t412;
  t2371 = -4.e-6*t2254*t412;
  t2374 = t2369 + t2370 + t2371;
  t2344 = 4.e-6*t403*t2338;
  t2345 = -4.e-6*t1390*t477*t412;
  t2347 = -1.6e-11*t2254*t412;
  t2351 = t2344 + t2345 + t2347;
  t2444 = 4.e-6*t1390*t477*t504;
  t2446 = t512*t2254;
  t2450 = 4.e-6*t2338*t412;
  t2451 = t2444 + t2446 + t2450;
  t2425 = t1390*t477*t403;
  t2428 = 4.e-6*t504*t2254;
  t2434 = t2338*t412;
  t2435 = t2425 + t2428 + t2434;
  t2455 = t588*t2338;
  t2459 = t2455 + t2370 + t2371;
  t2495 = Cos(var1[16]);
  t2498 = -1.*t2495;
  t2499 = 1. + t2498;
  t2509 = Sin(var1[16]);
  t2554 = Cos(var1[15]);
  t2558 = -1.*t2554;
  t2561 = 1. + t2558;
  t2562 = -0.15121*t2561;
  t2567 = Sin(var1[15]);
  t2517 = -1. + t2495;
  t2518 = 4.e-6*t2517;
  t2586 = 7.e-6*t2499;
  t2504 = 2.8e-11*t2499;
  t2675 = Cos(var1[17]);
  t2677 = -1.*t2675;
  t2680 = 1. + t2677;
  t2688 = Sin(var1[17]);
  t2650 = -4.e-6*t2509;
  t2612 = t340*t2567*t108;
  t2628 = t2554*t108*t121;
  t2630 = t2612 + t2628;
  t2663 = -1.*t2554*t340*t108;
  t2665 = t2567*t108*t121;
  t2668 = t2663 + t2665;
  t2699 = 2.8e-11*t2680;
  t2525 = -7.e-6*t2509;
  t2706 = -2.8e-11*t2499;
  t2511 = -1.*t2509;
  t2687 = 7.e-6*t2680;
  t2750 = -1. + t2675;
  t2754 = 4.e-6*t2750;
  t2774 = 4.e-6*t2499;
  t2600 = 7.e-6*t2509;
  t2721 = -7.e-6*t2499;
  t2587 = 4.e-6*t2509;
  t2791 = 4.e-6*t2688;
  t2711 = t2706 + t2509;
  t2713 = t477*t2711;
  t2726 = t2721 + t2650;
  t2731 = t2726*t2630;
  t2733 = -1.000000000016*t2499;
  t2735 = 1. + t2733;
  t2738 = t2735*t2668;
  t2739 = t2713 + t2731 + t2738;
  t2799 = 7.e-6*t2688;
  t2768 = -1.000000000049*t2499;
  t2769 = 1. + t2768;
  t2770 = t2769*t477;
  t2778 = t2774 + t2525;
  t2784 = t2778*t2630;
  t2785 = t2706 + t2511;
  t2786 = t2785*t2668;
  t2787 = t2770 + t2784 + t2786;
  t2811 = t2774 + t2600;
  t2812 = t477*t2811;
  t2813 = -6.5e-11*t2499;
  t2814 = 1. + t2813;
  t2816 = t2814*t2630;
  t2817 = t2721 + t2587;
  t2820 = t2817*t2668;
  t2821 = t2812 + t2816 + t2820;
  t2743 = -1.*t2688;
  t2838 = 4.e-6*t2680;
  t2760 = -7.e-6*t2688;
  t2852 = -2.8e-11*t2680;
  t2831 = -7.e-6*t2680;
  t2693 = -4.e-6*t2688;
  t2574 = 0.15121*t2567;
  t2575 = t2562 + t2574;
  t2568 = -0.15121*t2567;
  t2569 = t2562 + t2568;
  t2636 = -2.7726089999999997e-12*var1[16];
  t2646 = -0.2812110000084994*t2499;
  t2651 = t2586 + t2650;
  t2652 = -1.8134809999999998e-6*t2651;
  t2653 = t2504 + t2509;
  t2656 = -0.038749000006999997*t2653;
  t2661 = t2636 + t2646 + t2652 + t2656;
  t2582 = 3.9608699999999997e-7*var1[16];
  t2584 = -1.1787626499999999e-16*t2499;
  t2594 = t2586 + t2587;
  t2597 = -0.281211000004*t2594;
  t2601 = t2518 + t2600;
  t2604 = -0.038749000006999997*t2601;
  t2610 = t2582 + t2584 + t2597 + t2604;
  t2789 = 2.826290000000002e-7*var1[17];
  t2790 = -2.18904205e-16*t2680;
  t2793 = t2687 + t2791;
  t2794 = -0.5031510000080001*t2793;
  t2801 = t2754 + t2799;
  t2803 = -0.038575000014*t2801;
  t2805 = t2789 + t2790 + t2794 + t2803;
  t2911 = -1.*t477*t340*t2567;
  t2912 = -1.*t2554*t477*t121;
  t2914 = t2911 + t2912;
  t2917 = -1.*t2554*t477*t340;
  t2918 = t477*t2567*t121;
  t2920 = t2917 + t2918;
  t2741 = 1.1305160000000008e-12*var1[17];
  t2742 = -0.03857500001589017*t2680;
  t2745 = t2699 + t2743;
  t2747 = -0.5031510000080001*t2745;
  t2761 = t2754 + t2760;
  t2763 = -3.367757e-6*t2761;
  t2767 = t2741 + t2742 + t2747 + t2763;
  t2673 = -1.9784030000000015e-12*var1[17];
  t2683 = -0.5031510000160505*t2680;
  t2695 = t2687 + t2693;
  t2698 = -3.367757e-6*t2695;
  t2700 = t2699 + t2688;
  t2702 = -0.038575000014*t2700;
  t2705 = t2673 + t2683 + t2698 + t2702;
  t2890 = t2831 + t2693;
  t2924 = t2817*t2914;
  t2925 = t2814*t2920;
  t2927 = t2924 + t2925;
  t2888 = t2852 + t2688;
  t2930 = t2785*t2914;
  t2933 = t2778*t2920;
  t2934 = t2930 + t2933;
  t2881 = -1.000000000016*t2680;
  t2882 = 1. + t2881;
  t2936 = t2735*t2914;
  t2938 = t2726*t2920;
  t2941 = t2936 + t2938;
  t2875 = t2838 + t2760;
  t2861 = -1.000000000049*t2680;
  t2863 = 1. + t2861;
  t2856 = t2852 + t2743;
  t2842 = -6.5e-11*t2680;
  t2843 = 1. + t2842;
  t2839 = t2838 + t2799;
  t2832 = t2831 + t2791;
  t2915 = t2661*t2914;
  t2923 = t2610*t2920;
  t2929 = t2805*t2927;
  t2935 = t2767*t2934;
  t2947 = t2705*t2941;
  t2948 = t2890*t2927;
  t2951 = t2888*t2934;
  t2952 = t2882*t2941;
  t2953 = t2948 + t2951 + t2952;
  t2954 = -0.80315*t2953;
  t2956 = t2875*t2927;
  t2957 = t2863*t2934;
  t2965 = t2856*t2941;
  t2967 = t2956 + t2957 + t2965;
  t2972 = -0.038576*t2967;
  t2975 = t2843*t2927;
  t2976 = t2839*t2934;
  t2978 = t2832*t2941;
  t2980 = t2975 + t2976 + t2978;
  t2981 = -0.148715*t2980;
  t3004 = 2.8e-11*t2509;
  t3023 = 7.e-6*t2495;
  t3027 = 4.e-6*t2495;
  t3052 = t2554*t477*t340;
  t3054 = -1.*t477*t2567*t121;
  t3057 = t3052 + t3054;
  t2997 = -7.e-6*t2495;
  t3075 = -2.8e-11*t2509;
  t3044 = -4.e-6*t2495;
  t3061 = t3023 + t2587;
  t3063 = t3061*t108;
  t3064 = -6.5e-11*t2509*t2914;
  t3065 = t3027 + t2525;
  t3066 = t3065*t3057;
  t3067 = t3063 + t3064 + t3066;
  t3069 = -1.000000000049*t2509*t108;
  t3072 = t2997 + t2587;
  t3073 = t3072*t2914;
  t3076 = t2498 + t3075;
  t3077 = t3076*t3057;
  t3079 = t3069 + t3073 + t3077;
  t3084 = t2495 + t3075;
  t3085 = t3084*t108;
  t3086 = t3044 + t2525;
  t3089 = t3086*t2914;
  t3090 = -1.000000000016*t2509*t3057;
  t3092 = t3085 + t3089 + t3090;
  t3134 = 2.8e-11*t2688;
  t3153 = t2711*t108;
  t3154 = t2726*t2914;
  t3155 = t2735*t3057;
  t3158 = t3153 + t3154 + t3155;
  t3181 = t2769*t108;
  t3182 = t2778*t2914;
  t3184 = t2785*t3057;
  t3186 = t3181 + t3182 + t3184;
  t3142 = -4.e-6*t2675;
  t3209 = t2811*t108;
  t3211 = t2814*t2914;
  t3215 = t2817*t3057;
  t3216 = t3209 + t3211 + t3215;
  t3223 = -2.8e-11*t2688;
  t3162 = -7.e-6*t2675;
  t3200 = 4.e-6*t2675;
  t3188 = 7.e-6*t2675;
  t2494 = 1.5843479999999999e-12*var1[16];
  t2502 = -0.03874900000889869*t2499;
  t2514 = t2504 + t2511;
  t2516 = -0.281211000004*t2514;
  t2527 = t2518 + t2525;
  t2541 = -1.8134809999999998e-6*t2527;
  t2547 = t2494 + t2502 + t2516 + t2541;
  t3298 = -1.*t2567*t1406;
  t3299 = t2554*t1396;
  t3300 = t3298 + t3299;
  t3303 = t2554*t1406;
  t3304 = t2567*t1396;
  t3306 = t3303 + t3304;
  t3315 = -1.*t1390*t477*t2711;
  t3316 = t2726*t3300;
  t3317 = t2735*t3306;
  t3319 = t3315 + t3316 + t3317;
  t3330 = -1.*t2769*t1390*t477;
  t3332 = t2778*t3300;
  t3333 = t2785*t3306;
  t3335 = t3330 + t3332 + t3333;
  t3340 = -1.*t1390*t477*t2811;
  t3341 = t2814*t3300;
  t3342 = t2817*t3306;
  t3346 = t3340 + t3341 + t3342;
  t3398 = -1.*t477*t340*t2567*t1386;
  t3402 = -1.*t2554*t477*t1386*t121;
  t3403 = t3398 + t3402;
  t3410 = t2554*t477*t340*t1386;
  t3411 = -1.*t477*t2567*t1386*t121;
  t3412 = t3410 + t3411;
  t3416 = t2711*t1386*t108;
  t3419 = t2726*t3403;
  t3425 = t2735*t3412;
  t3426 = t3416 + t3419 + t3425;
  t3428 = t2769*t1386*t108;
  t3437 = t2778*t3403;
  t3439 = t2785*t3412;
  t3441 = t3428 + t3437 + t3439;
  t3446 = t2811*t1386*t108;
  t3447 = t2814*t3403;
  t3449 = t2817*t3412;
  t3451 = t3446 + t3447 + t3449;
  t3491 = t2567*t1635;
  t3492 = t2554*t1654;
  t3495 = t3491 + t3492;
  t3498 = t2554*t1635;
  t3499 = -1.*t2567*t1654;
  t3500 = t3498 + t3499;
  t3502 = t2817*t3495;
  t3503 = t2814*t3500;
  t3511 = t3502 + t3503;
  t3515 = t2785*t3495;
  t3517 = t2778*t3500;
  t3518 = t3515 + t3517;
  t3524 = t2735*t3495;
  t3525 = t2726*t3500;
  t3526 = t3524 + t3525;
  t2986 = -0.15121*t2554;
  t2989 = t2986 + t2568;
  t2991 = 0.15121*t2554;
  t2992 = t2991 + t2568;
  t3583 = -1.*t2567*t1749;
  t3585 = t3583 + t3492;
  t3589 = -1.*t2554*t1749;
  t3591 = t3589 + t3499;
  t3594 = t2817*t3585;
  t3595 = t2814*t3591;
  t3596 = t3594 + t3595;
  t3599 = t2785*t3585;
  t3601 = t2778*t3591;
  t3604 = t3599 + t3601;
  t3613 = t2735*t3585;
  t3614 = t2726*t3591;
  t3615 = t3613 + t3614;
  t2999 = t2997 + t2650;
  t3003 = -1.8134809999999998e-6*t2999;
  t3005 = t2498 + t3004;
  t3009 = -0.281211000004*t3005;
  t3012 = -0.03874900000889869*t2509;
  t3018 = 1.5843479999999999e-12 + t3003 + t3009 + t3012;
  t3024 = t3023 + t2650;
  t3025 = -0.038749000006999997*t3024;
  t3030 = t3027 + t2600;
  t3032 = -0.281211000004*t3030;
  t3033 = -1.1787626499999999e-16*t2509;
  t3034 = 3.9608699999999997e-7 + t3025 + t3032 + t3033;
  t3042 = t2495 + t3004;
  t3043 = -0.038749000006999997*t3042;
  t3045 = t3044 + t2600;
  t3046 = -1.8134809999999998e-6*t3045;
  t3047 = -0.2812110000084994*t2509;
  t3049 = -2.7726089999999997e-12 + t3043 + t3046 + t3047;
  t3678 = t2554*t1749;
  t3679 = t2567*t1654;
  t3680 = t3678 + t3679;
  t3684 = -1.*t477*t3061*t1386;
  t3686 = -6.5e-11*t2509*t3585;
  t3687 = t3065*t3680;
  t3689 = t3684 + t3686 + t3687;
  t3694 = 1.000000000049*t477*t2509*t1386;
  t3696 = t3072*t3585;
  t3697 = t3076*t3680;
  t3698 = t3694 + t3696 + t3697;
  t3700 = -1.*t477*t3084*t1386;
  t3703 = t3086*t3585;
  t3706 = -1.000000000016*t2509*t3680;
  t3709 = t3700 + t3703 + t3706;
  t3138 = t2675 + t3134;
  t3139 = -0.038575000014*t3138;
  t3143 = t3142 + t2799;
  t3149 = -3.367757e-6*t3143;
  t3151 = -0.5031510000160505*t2688;
  t3152 = -1.9784030000000015e-12 + t3139 + t3149 + t3151;
  t3166 = t3162 + t2693;
  t3168 = -3.367757e-6*t3166;
  t3169 = t2677 + t3134;
  t3170 = -0.5031510000080001*t3169;
  t3173 = -0.03857500001589017*t2688;
  t3179 = 1.1305160000000008e-12 + t3168 + t3170 + t3173;
  t3195 = t3188 + t2693;
  t3199 = -0.038575000014*t3195;
  t3201 = t3200 + t2799;
  t3202 = -0.5031510000080001*t3201;
  t3207 = -2.18904205e-16*t2688;
  t3208 = 2.826290000000002e-7 + t3199 + t3202 + t3207;
  t3767 = -1.*t477*t2711*t1386;
  t3771 = t2726*t3585;
  t3772 = t2735*t3680;
  t3778 = t3767 + t3771 + t3772;
  t3226 = t2675 + t3223;
  t3780 = -1.*t2769*t477*t1386;
  t3781 = t2778*t3585;
  t3783 = t2785*t3680;
  t3787 = t3780 + t3781 + t3783;
  t3245 = t3142 + t2760;
  t3790 = -1.*t477*t2811*t1386;
  t3793 = t2814*t3585;
  t3794 = t2817*t3680;
  t3795 = t3790 + t3793 + t3794;
  t3259 = t2677 + t3223;
  t3265 = t3162 + t2791;
  t3277 = t3200 + t2760;
  t3280 = t3188 + t2791;
  t3931 = t1390*t477*t340*t2567;
  t3934 = t2554*t1390*t477*t121;
  t3936 = t3931 + t3934;
  t3940 = -1.*t2554*t1390*t477*t340;
  t3941 = t1390*t477*t2567*t121;
  t3942 = t3940 + t3941;
  t3944 = -1.*t1390*t2711*t108;
  t3945 = t2726*t3936;
  t3946 = t2735*t3942;
  t3947 = t3944 + t3945 + t3946;
  t3949 = -1.*t2769*t1390*t108;
  t3951 = t2778*t3936;
  t3953 = t2785*t3942;
  t3954 = t3949 + t3951 + t3953;
  t3957 = -1.*t1390*t2811*t108;
  t3959 = t2814*t3936;
  t3960 = t2817*t3942;
  t3962 = t3957 + t3959 + t3960;
  t4017 = t2567*t1406;
  t4018 = t2554*t2131;
  t4019 = t4017 + t4018;
  t4022 = -1.*t2567*t2131;
  t4026 = t3303 + t4022;
  t4036 = t2817*t4019;
  t4037 = t2814*t4026;
  t4038 = t4036 + t4037;
  t4047 = t2785*t4019;
  t4050 = t2778*t4026;
  t4052 = t4047 + t4050;
  t4055 = t2735*t4019;
  t4056 = t2726*t4026;
  t4062 = t4055 + t4056;
  t4131 = -1.*t2567*t2239;
  t4132 = t4131 + t4018;
  t4136 = -1.*t2554*t2239;
  t4137 = t4136 + t4022;
  t4144 = t2817*t4132;
  t4146 = t2814*t4137;
  t4155 = t4144 + t4146;
  t4173 = t2785*t4132;
  t4176 = t2778*t4137;
  t4178 = t4173 + t4176;
  t4190 = t2735*t4132;
  t4191 = t2726*t4137;
  t4195 = t4190 + t4191;
  t4236 = t2554*t2239;
  t4237 = t2567*t2131;
  t4238 = t4236 + t4237;
  t4250 = t1390*t477*t3061;
  t4252 = -6.5e-11*t2509*t4132;
  t4255 = t3065*t4238;
  t4256 = t4250 + t4252 + t4255;
  t4260 = -1.000000000049*t1390*t477*t2509;
  t4263 = t3072*t4132;
  t4265 = t3076*t4238;
  t4266 = t4260 + t4263 + t4265;
  t4272 = t1390*t477*t3084;
  t4273 = t3086*t4132;
  t4276 = -1.000000000016*t2509*t4238;
  t4278 = t4272 + t4273 + t4276;
  t4329 = t1390*t477*t2711;
  t4330 = t2726*t4132;
  t4333 = t2735*t4238;
  t4338 = t4329 + t4330 + t4333;
  t4340 = t2769*t1390*t477;
  t4341 = t2778*t4132;
  t4344 = t2785*t4238;
  t4345 = t4340 + t4341 + t4344;
  t4348 = t1390*t477*t2811;
  t4349 = t2814*t4132;
  t4351 = t2817*t4238;
  t4352 = t4348 + t4349 + t4351;
  p_output1[0]=1.;
  p_output1[1]=t108*t121*t309 - 1.*t108*t340*t370 + t391*t428 + t441*t469 + t477*t499 + t548*t579 + t603*t612 + t633*t658 - 0.03875*(t572*t603 + t561*t633 + 4.e-6*t548*t672) + 0.14871*(4.e-6*t572*t603 + 4.e-6*t633*t672 + t548*t683) + 0.80321*(-4.e-6*t548*t572 - 1.*t572*t633 + t603*t715);
  p_output1[2]=-1.*t309*t340*t477 - 1.*t121*t370*t477 + t784 + t806 + t832 + t864 + t877 + t897 + t952 + t977;
  p_output1[3]=t784 + t806 + t832 + t864 + t877 + t897 + t952 + t977 - 1.*t121*t477*t988 + t340*t477*t994;
  p_output1[4]=t1021*t108 + t1087*t1094 + t1125*t579 + t1169*t612 + t1191*t658 - 0.03875*(t1191*t561 + t1169*t572 + 4.e-6*t1125*t672) + 0.14871*(4.e-6*t1169*t572 + 4.e-6*t1191*t672 + t1125*t683) + 0.80321*(-4.e-6*t1125*t572 - 1.*t1191*t572 + t1169*t715) + t1071*t804;
  p_output1[5]=t1271*t1288 + t1304*t1308 + t1313*t1325 - 0.03875*(t1313*t561 - 1.*t1271*t572 - 4.e-6*t1304*t572) + 0.14871*(4.e-6*t1313*t561 - 4.e-6*t1271*t572 - 1.6e-11*t1304*t572) + 0.80321*(-1.*t1271*t561 - 4.e-6*t1304*t561 - 1.000000000016*t1313*t572);
  p_output1[6]=1.;
  p_output1[7]=t1396*t309 + t1406*t370 + t1415*t428 + t1429*t469 - 1.*t1390*t477*t499 + t1445*t579 + t1453*t612 + t1464*t658 - 0.03875*(t1464*t561 + t1453*t572 + 4.e-6*t1445*t672) + 0.14871*(4.e-6*t1453*t572 + 4.e-6*t1464*t672 + t1445*t683) + 0.80321*(-4.e-6*t1445*t572 - 1.*t1464*t572 + t1453*t715);
  p_output1[8]=t1518*t428 + t1527*t469 - 1.*t121*t1386*t309*t477 + t1386*t340*t370*t477 + t108*t1386*t499 + t1543*t579 + t1552*t612 + t1566*t658 - 0.03875*(t1566*t561 + t1552*t572 + 4.e-6*t1543*t672) + 0.14871*(4.e-6*t1552*t572 + 4.e-6*t1566*t672 + t1543*t683) + 0.80321*(-4.e-6*t1543*t572 - 1.*t1566*t572 + t1552*t715);
  p_output1[9]=t1635*t309 + t1654*t370 + t1665*t428 + t1676*t469 + t1681*t579 + t1694*t612 + t1701*t658 - 0.03875*(t1701*t561 + t1694*t572 + 4.e-6*t1681*t672) + 0.14871*(4.e-6*t1694*t572 + 4.e-6*t1701*t672 + t1681*t683) + 0.80321*(-4.e-6*t1681*t572 - 1.*t1701*t572 + t1694*t715);
  p_output1[10]=t1754*t428 + t1759*t469 + t1766*t579 + t1776*t612 + t1782*t658 - 0.03875*(t1782*t561 + t1776*t572 + 4.e-6*t1766*t672) + 0.14871*(4.e-6*t1776*t572 + 4.e-6*t1782*t672 + t1766*t683) + 0.80321*(-4.e-6*t1766*t572 - 1.*t1782*t572 + t1776*t715) + t1654*t988 + t1749*t994;
  p_output1[11]=t1071*t1759 + t1094*t1839 - 1.*t1021*t1386*t477 + t1848*t579 + t1855*t612 + t1867*t658 - 0.03875*(t1867*t561 + t1855*t572 + 4.e-6*t1848*t672) + 0.14871*(4.e-6*t1855*t572 + 4.e-6*t1867*t672 + t1848*t683) + 0.80321*(-4.e-6*t1848*t572 - 1.*t1867*t572 + t1855*t715);
  p_output1[12]=t1288*t1921 + t1308*t1934 + t1325*t1940 - 0.03875*(t1955 + t1960 + t1940*t561) + 0.14871*(4.e-6*t1940*t561 - 4.e-6*t1921*t572 - 1.6e-11*t1934*t572) + 0.80321*(-1.*t1921*t561 - 4.e-6*t1934*t561 - 1.000000000016*t1940*t572);
  p_output1[13]=1.;
  p_output1[14]=t1654*t309 + t1749*t370 + t1759*t428 + t1839*t469 - 1.*t1386*t477*t499 + t1934*t579 + t1940*t612 + t1921*t658 - 0.03875*(t1921*t561 + t1940*t572 + 4.e-6*t1934*t672) + 0.14871*(4.e-6*t1940*t572 + 4.e-6*t1921*t672 + t1934*t683) + 0.80321*(t1955 + t1960 + t1940*t715);
  p_output1[15]=t2039*t428 + t2052*t469 + t121*t1390*t309*t477 - 1.*t1390*t340*t370*t477 - 1.*t108*t1390*t499 + t2061*t579 + t2079*t612 + t2094*t658 - 0.03875*(t2094*t561 + t2079*t572 + 4.e-6*t2061*t672) + 0.14871*(4.e-6*t2079*t572 + 4.e-6*t2094*t672 + t2061*t683) + 0.80321*(-4.e-6*t2061*t572 - 1.*t2094*t572 + t2079*t715);
  p_output1[16]=t1406*t309 + t2131*t370 + t2141*t428 + t2152*t469 + t2160*t579 + t2170*t612 + t2178*t658 - 0.03875*(t2178*t561 + t2170*t572 + 4.e-6*t2160*t672) + 0.14871*(4.e-6*t2170*t572 + 4.e-6*t2178*t672 + t2160*t683) + 0.80321*(-4.e-6*t2160*t572 - 1.*t2178*t572 + t2170*t715);
  p_output1[17]=t2242*t428 + t2254*t469 + t2263*t579 + t2274*t612 + t2280*t658 - 0.03875*(t2280*t561 + t2274*t572 + 4.e-6*t2263*t672) + 0.14871*(4.e-6*t2274*t572 + 4.e-6*t2280*t672 + t2263*t683) + 0.80321*(-4.e-6*t2263*t572 - 1.*t2280*t572 + t2274*t715) + t2131*t988 + t2239*t994;
  p_output1[18]=t1071*t2254 + t1094*t2338 + t1021*t1390*t477 + t2351*t579 + t2364*t612 + t2374*t658 - 0.03875*(t2374*t561 + t2364*t572 + 4.e-6*t2351*t672) + 0.14871*(4.e-6*t2364*t572 + 4.e-6*t2374*t672 + t2351*t683) + 0.80321*(-4.e-6*t2351*t572 - 1.*t2374*t572 + t2364*t715);
  p_output1[19]=t1288*t2435 + t1308*t2451 + t1325*t2459 - 0.03875*(t2459*t561 - 1.*t2435*t572 - 4.e-6*t2451*t572) + 0.14871*(4.e-6*t2459*t561 - 4.e-6*t2435*t572 - 1.6e-11*t2451*t572) + 0.80321*(-1.*t2435*t561 - 4.e-6*t2451*t561 - 1.000000000016*t2459*t572);
  p_output1[20]=1.;
  p_output1[21]=t108*t121*t2575 + t2610*t2630 + t2661*t2668 + t2705*t2739 + t2767*t2787 + t2805*t2821 - 0.148715*(t2739*t2832 + t2787*t2839 + t2821*t2843) - 0.038576*(t2739*t2856 + t2787*t2863 + t2821*t2875) - 0.80315*(t2739*t2882 + t2787*t2888 + t2821*t2890) - 1.*t108*t2569*t340 + t2547*t477;
  p_output1[22]=t2915 + t2923 + t2929 + t2935 + t2947 + t2954 + t2972 + t2981 - 1.*t121*t2569*t477 - 1.*t2575*t340*t477;
  p_output1[23]=t2915 + t2923 + t2929 + t2935 + t2947 + t2954 + t2972 + t2981 - 1.*t121*t2992*t477 + t2989*t340*t477;
  p_output1[24]=t108*t3018 + t2914*t3034 + t3049*t3057 + t2805*t3067 + t2767*t3079 + t2705*t3092 - 0.148715*(t2843*t3067 + t2839*t3079 + t2832*t3092) - 0.038576*(t2875*t3067 + t2863*t3079 + t2856*t3092) - 0.80315*(t2890*t3067 + t2888*t3079 + t2882*t3092);
  p_output1[25]=t3152*t3158 + t3179*t3186 + t3208*t3216 - 0.80315*(-1.000000000016*t2688*t3158 + t3186*t3226 + t3216*t3245) - 0.038576*(-1.000000000049*t2688*t3186 + t3158*t3259 + t3216*t3265) - 0.148715*(-6.5e-11*t2688*t3216 + t3158*t3277 + t3186*t3280);
  p_output1[26]=1.;
  p_output1[27]=t1406*t2569 + t1396*t2575 + t2610*t3300 + t2661*t3306 + t2705*t3319 + t2767*t3335 + t2805*t3346 - 0.148715*(t2832*t3319 + t2839*t3335 + t2843*t3346) - 0.038576*(t2856*t3319 + t2863*t3335 + t2875*t3346) - 0.80315*(t2882*t3319 + t2888*t3335 + t2890*t3346) - 1.*t1390*t2547*t477;
  p_output1[28]=t108*t1386*t2547 + t2610*t3403 + t2661*t3412 + t2705*t3426 + t2767*t3441 + t2805*t3451 - 0.148715*(t2832*t3426 + t2839*t3441 + t2843*t3451) - 0.038576*(t2856*t3426 + t2863*t3441 + t2875*t3451) - 0.80315*(t2882*t3426 + t2888*t3441 + t2890*t3451) - 1.*t121*t1386*t2575*t477 + t1386*t2569*t340*t477;
  p_output1[29]=t1654*t2569 + t1635*t2575 + t2661*t3495 + t2610*t3500 + t2805*t3511 + t2767*t3518 + t2705*t3526 - 0.148715*(t2843*t3511 + t2839*t3518 + t2832*t3526) - 0.038576*(t2875*t3511 + t2863*t3518 + t2856*t3526) - 0.80315*(t2890*t3511 + t2888*t3518 + t2882*t3526);
  p_output1[30]=t1749*t2989 + t1654*t2992 + t2661*t3585 + t2610*t3591 + t2805*t3596 + t2767*t3604 + t2705*t3615 - 0.148715*(t2843*t3596 + t2839*t3604 + t2832*t3615) - 0.038576*(t2875*t3596 + t2863*t3604 + t2856*t3615) - 0.80315*(t2890*t3596 + t2888*t3604 + t2882*t3615);
  p_output1[31]=t3034*t3585 + t3049*t3680 + t2805*t3689 + t2767*t3698 + t2705*t3709 - 0.148715*(t2843*t3689 + t2839*t3698 + t2832*t3709) - 0.038576*(t2875*t3689 + t2863*t3698 + t2856*t3709) - 0.80315*(t2890*t3689 + t2888*t3698 + t2882*t3709) - 1.*t1386*t3018*t477;
  p_output1[32]=t3152*t3778 + t3179*t3787 + t3208*t3795 - 0.148715*(t3277*t3778 + t3280*t3787 - 6.5e-11*t2688*t3795) - 0.80315*(-1.000000000016*t2688*t3778 + t3226*t3787 + t3245*t3795) - 0.038576*(t3259*t3778 - 1.000000000049*t2688*t3787 + t3265*t3795);
  p_output1[33]=1.;
  p_output1[34]=t1749*t2569 + t1654*t2575 + t2610*t3585 + t2661*t3680 + t2705*t3778 + t2767*t3787 + t2805*t3795 - 0.148715*(t2832*t3778 + t2839*t3787 + t2843*t3795) - 0.038576*(t2856*t3778 + t2863*t3787 + t2875*t3795) - 0.80315*(t2882*t3778 + t2888*t3787 + t2890*t3795) - 1.*t1386*t2547*t477;
  p_output1[35]=-1.*t108*t1390*t2547 + t2610*t3936 + t2661*t3942 + t2705*t3947 + t2767*t3954 + t2805*t3962 - 0.148715*(t2832*t3947 + t2839*t3954 + t2843*t3962) - 0.038576*(t2856*t3947 + t2863*t3954 + t2875*t3962) - 0.80315*(t2882*t3947 + t2888*t3954 + t2890*t3962) + t121*t1390*t2575*t477 - 1.*t1390*t2569*t340*t477;
  p_output1[36]=t2131*t2569 + t1406*t2575 + t2661*t4019 + t2610*t4026 + t2805*t4038 + t2767*t4052 + t2705*t4062 - 0.148715*(t2843*t4038 + t2839*t4052 + t2832*t4062) - 0.038576*(t2875*t4038 + t2863*t4052 + t2856*t4062) - 0.80315*(t2890*t4038 + t2888*t4052 + t2882*t4062);
  p_output1[37]=t2239*t2989 + t2131*t2992 + t2661*t4132 + t2610*t4137 + t2805*t4155 + t2767*t4178 + t2705*t4195 - 0.148715*(t2843*t4155 + t2839*t4178 + t2832*t4195) - 0.038576*(t2875*t4155 + t2863*t4178 + t2856*t4195) - 0.80315*(t2890*t4155 + t2888*t4178 + t2882*t4195);
  p_output1[38]=t3034*t4132 + t3049*t4238 + t2805*t4256 + t2767*t4266 + t2705*t4278 - 0.148715*(t2843*t4256 + t2839*t4266 + t2832*t4278) - 0.038576*(t2875*t4256 + t2863*t4266 + t2856*t4278) - 0.80315*(t2890*t4256 + t2888*t4266 + t2882*t4278) + t1390*t3018*t477;
  p_output1[39]=t3152*t4338 + t3179*t4345 + t3208*t4352 - 0.148715*(t3277*t4338 + t3280*t4345 - 6.5e-11*t2688*t4352) - 0.80315*(-1.000000000016*t2688*t4338 + t3226*t4345 + t3245*t4352) - 0.038576*(t3259*t4338 - 1.000000000049*t2688*t4345 + t3265*t4352);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_output_boundary_DiagonalStance1_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
