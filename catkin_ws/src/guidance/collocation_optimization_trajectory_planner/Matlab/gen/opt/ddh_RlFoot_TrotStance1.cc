/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:16:15 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t520;
  double t534;
  double t542;
  double t372;
  double t413;
  double t415;
  double t613;
  double t616;
  double t441;
  double t588;
  double t603;
  double t670;
  double t677;
  double t688;
  double t439;
  double t740;
  double t751;
  double t756;
  double t777;
  double t781;
  double t876;
  double t879;
  double t882;
  double t913;
  double t974;
  double t976;
  double t985;
  double t794;
  double t815;
  double t1104;
  double t1044;
  double t1050;
  double t1218;
  double t1341;
  double t1005;
  double t1023;
  double t1505;
  double t1326;
  double t470;
  double t1381;
  double t1389;
  double t1407;
  double t1417;
  double t1302;
  double t1257;
  double t1507;
  double t1605;
  double t1609;
  double t1614;
  double t1284;
  double t1286;
  double t1406;
  double t1420;
  double t1431;
  double t1253;
  double t1255;
  double t1476;
  double t1485;
  double t1489;
  double t1515;
  double t1534;
  double t1334;
  double t1613;
  double t1621;
  double t1625;
  double t823;
  double t1648;
  double t1699;
  double t1719;
  double t1735;
  double t1743;
  double t1746;
  double t1747;
  double t1754;
  double t1756;
  double t1763;
  double t1771;
  double t1779;
  double t1780;
  double t1789;
  double t1791;
  double t1812;
  double t1819;
  double t1824;
  double t1825;
  double t1828;
  double t1837;
  double t1840;
  double t1879;
  double t1885;
  double t1906;
  double t1924;
  double t1937;
  double t1963;
  double t1968;
  double t1973;
  double t1975;
  double t1993;
  double t716;
  double t738;
  double t850;
  double t477;
  double t2112;
  double t1683;
  double t2056;
  double t2072;
  double t2090;
  double t2091;
  double t1265;
  double t1275;
  double t1287;
  double t1314;
  double t1351;
  double t1355;
  double t1641;
  double t1644;
  double t1651;
  double t1669;
  double t1685;
  double t1687;
  double t1778;
  double t1858;
  double t2018;
  double t2028;
  double t1281;
  double t1316;
  double t1356;
  double t1371;
  double t2100;
  double t2103;
  double t2114;
  double t2115;
  double t2123;
  double t2124;
  double t2131;
  double t2143;
  double t2145;
  double t2156;
  double t2211;
  double t2216;
  double t2217;
  double t2222;
  double t2232;
  double t2247;
  double t2267;
  double t2289;
  double t2291;
  double t2293;
  double t704;
  double t789;
  double t986;
  double t995;
  double t997;
  double t1024;
  double t1062;
  double t1236;
  double t1243;
  double t1244;
  double t1466;
  double t1553;
  double t1626;
  double t1638;
  double t2044;
  double t2157;
  double t2159;
  double t2161;
  double t2167;
  double t2179;
  double t2305;
  double t2308;
  double t2316;
  double t2328;
  double t2343;
  double t2361;
  double t2364;
  double t2369;
  double t2380;
  double t2400;
  double t2405;
  double t2407;
  double t2410;
  double t2417;
  double t2419;
  double t2428;
  double t2436;
  double t2510;
  double t2511;
  double t2519;
  double t2521;
  double t2531;
  double t2542;
  double t2548;
  double t2567;
  double t2457;
  double t2475;
  double t2476;
  double t2490;
  double t2491;
  double t2523;
  double t2584;
  double t2594;
  double t2600;
  double t2608;
  double t2613;
  double t2616;
  double t2617;
  double t2620;
  double t2642;
  double t2644;
  double t295;
  double t164;
  double t169;
  double t175;
  double t329;
  double t192;
  double t2659;
  double t2660;
  double t2662;
  double t2665;
  double t2696;
  double t2698;
  double t2699;
  double t2653;
  double t2656;
  double t2658;
  double t2673;
  double t2676;
  double t2687;
  double t2695;
  double t2702;
  double t2705;
  double t2707;
  double t2708;
  double t2715;
  double t2736;
  double t2743;
  double t2745;
  double t2746;
  double t2750;
  double t2755;
  double t2781;
  double t2786;
  double t2791;
  double t134;
  double t140;
  double t2836;
  double t2821;
  double t2845;
  double t2846;
  double t2848;
  double t2861;
  double t2867;
  double t2868;
  double t2979;
  double t2990;
  double t2991;
  double t2997;
  double t2998;
  double t3002;
  double t3004;
  double t3006;
  double t3007;
  double t3009;
  double t3013;
  double t3024;
  double t3025;
  double t3032;
  double t3033;
  double t3035;
  double t2901;
  double t2902;
  double t2906;
  double t2915;
  double t2929;
  double t2931;
  double t2932;
  double t2933;
  double t2949;
  double t2961;
  double t2963;
  double t2967;
  double t3138;
  double t3154;
  double t3170;
  double t3187;
  double t3190;
  double t3194;
  double t3196;
  double t3204;
  double t3205;
  double t3222;
  double t3224;
  double t3232;
  double t3233;
  double t3234;
  double t3265;
  double t3266;
  double t3267;
  double t3256;
  double t3257;
  double t3262;
  double t3239;
  double t3240;
  double t3243;
  double t3273;
  double t3274;
  double t3277;
  double t3244;
  double t3250;
  double t3255;
  double t3264;
  double t3294;
  double t3299;
  double t3306;
  double t3307;
  double t3308;
  double t3339;
  double t3364;
  double t3368;
  double t3373;
  double t3379;
  double t3383;
  double t3433;
  double t3434;
  double t3443;
  double t3416;
  double t3419;
  double t3432;
  double t3447;
  double t3448;
  double t3453;
  double t3482;
  double t3483;
  double t3495;
  double t3473;
  double t3474;
  double t3477;
  double t3479;
  double t3497;
  double t3503;
  double t3507;
  double t3509;
  double t3511;
  double t3514;
  double t3519;
  double t3523;
  double t3530;
  double t3531;
  double t3537;
  double t3546;
  double t3552;
  double t3555;
  double t3561;
  double t3562;
  double t3590;
  double t3652;
  double t3655;
  double t3656;
  double t3679;
  double t3680;
  double t3682;
  double t3695;
  double t3710;
  double t3613;
  double t3621;
  double t3626;
  double t3571;
  double t3579;
  double t3580;
  double t3765;
  double t3767;
  double t3770;
  double t3779;
  double t3784;
  double t3754;
  double t3758;
  double t3804;
  double t3805;
  double t3819;
  double t3787;
  double t3802;
  double t3789;
  double t3791;
  double t3795;
  double t3849;
  double t3874;
  double t3855;
  double t3866;
  double t3867;
  double t4001;
  double t4003;
  double t4064;
  double t4066;
  double t4069;
  double t4055;
  double t4073;
  double t4046;
  double t4048;
  double t4125;
  double t4151;
  double t4095;
  double t4102;
  double t4276;
  double t4252;
  double t4262;
  double t4264;
  double t4266;
  double t4268;
  double t4279;
  double t4291;
  double t4297;
  double t4307;
  double t4330;
  double t4337;
  double t4367;
  double t4414;
  double t4361;
  double t4364;
  double t4366;
  double t4372;
  double t4377;
  double t4378;
  double t4379;
  double t4380;
  double t4382;
  double t4384;
  double t4392;
  double t4395;
  double t4396;
  double t4405;
  double t4415;
  double t4423;
  double t4430;
  double t4431;
  double t4437;
  double t4438;
  double t4457;
  double t4462;
  double t4465;
  double t4468;
  double t4472;
  double t4474;
  double t4479;
  double t4480;
  double t4483;
  double t4541;
  double t4547;
  double t4551;
  double t4552;
  double t4558;
  double t4560;
  double t4563;
  double t4572;
  double t4574;
  double t4576;
  double t4393;
  double t4449;
  double t4485;
  double t4486;
  double t4497;
  double t4498;
  double t4500;
  double t4503;
  double t4506;
  double t4516;
  double t4517;
  double t4531;
  double t4690;
  double t4691;
  double t4694;
  double t4697;
  double t4698;
  double t4715;
  double t4720;
  double t4735;
  double t4736;
  double t4738;
  double t4743;
  double t4591;
  double t4596;
  double t4599;
  double t4607;
  double t4819;
  double t4823;
  double t4824;
  double t4832;
  double t4833;
  double t4834;
  double t4838;
  double t4841;
  double t4848;
  double t4849;
  double t4858;
  double t4862;
  double t4869;
  double t4871;
  double t4504;
  double t4619;
  double t4631;
  double t4633;
  double t4648;
  double t4649;
  double t4556;
  double t4568;
  double t4579;
  double t4587;
  double t4674;
  double t4744;
  double t4934;
  double t4935;
  double t4939;
  double t4943;
  double t4944;
  double t4948;
  double t4695;
  double t4711;
  double t4725;
  double t4730;
  double t4745;
  double t4747;
  double t4752;
  double t4753;
  double t4273;
  double t4293;
  double t4339;
  double t4340;
  double t4350;
  double t4351;
  double t4352;
  double t4357;
  double t5064;
  double t5067;
  double t5068;
  double t5057;
  double t5058;
  double t5059;
  double t5044;
  double t5045;
  double t5049;
  double t5050;
  double t5063;
  double t5075;
  double t5079;
  double t5091;
  double t5092;
  double t5097;
  double t5107;
  double t5108;
  double t5109;
  double t4974;
  double t4991;
  double t4994;
  double t4951;
  double t4953;
  double t4954;
  double t5131;
  double t5135;
  double t5136;
  double t5138;
  double t5140;
  double t5141;
  double t5022;
  double t5026;
  double t5028;
  double t5013;
  double t5015;
  double t5019;
  double t5198;
  double t5199;
  double t5200;
  double t5158;
  double t5164;
  double t5168;
  double t5143;
  double t5169;
  double t5144;
  double t5147;
  double t5155;
  double t5184;
  double t5202;
  double t5235;
  double t5238;
  double t5239;
  double t5252;
  double t5261;
  double t5262;
  double t5185;
  double t5189;
  double t5192;
  double t5304;
  double t5313;
  double t5315;
  double t5274;
  double t5279;
  double t5280;
  double t5392;
  double t5394;
  double t5402;
  double t5423;
  double t5424;
  double t5426;
  double t5555;
  double t5565;
  double t5566;
  double t5570;
  double t5544;
  double t5548;
  double t5557;
  double t5587;
  double t5591;
  double t5592;
  double t5594;
  double t5518;
  double t5520;
  double t5506;
  double t5508;
  double t5651;
  double t5564;
  double t5567;
  double t5576;
  double t5580;
  double t5614;
  double t5617;
  double t5618;
  double t5620;
  double t5622;
  double t5624;
  double t5627;
  double t5629;
  double t5632;
  double t5654;
  double t5655;
  double t5656;
  double t5657;
  double t5662;
  double t5663;
  double t5665;
  double t5668;
  double t5669;
  double t5672;
  double t5674;
  double t5679;
  double t5689;
  double t5692;
  double t5694;
  double t5698;
  double t5701;
  double t5720;
  double t5609;
  double t5670;
  double t5638;
  double t5639;
  double t5644;
  double t5649;
  double t5596;
  double t5597;
  double t5598;
  double t5601;
  double t5750;
  double t5777;
  double t5757;
  double t5758;
  double t5763;
  double t5764;
  double t5732;
  double t5733;
  double t5739;
  double t5742;
  double t5823;
  double t5824;
  double t5825;
  double t5834;
  double t5839;
  double t5841;
  double t5509;
  double t5514;
  double t5527;
  double t5534;
  double t5543;
  double t5554;
  double t5559;
  double t5561;
  double t5906;
  double t5911;
  double t5923;
  double t5890;
  double t5895;
  double t5901;
  double t5877;
  double t5879;
  double t5880;
  double t5885;
  double t5902;
  double t5927;
  double t5928;
  double t5936;
  double t5939;
  double t5940;
  double t5943;
  double t5944;
  double t5949;
  double t5852;
  double t5854;
  double t5855;
  double t5860;
  double t5862;
  double t5865;
  double t5797;
  double t5802;
  double t5803;
  double t5808;
  double t5816;
  double t5818;
  double t5998;
  double t6003;
  double t6004;
  double t5975;
  double t5979;
  double t5984;
  double t6033;
  double t6039;
  double t6052;
  double t6056;
  double t6061;
  double t6067;
  double t6076;
  double t6078;
  double t6094;
  double t6010;
  double t6016;
  double t6017;
  double t6031;
  double t6054;
  double t6147;
  double t6150;
  double t6152;
  double t6101;
  double t6116;
  double t6141;
  double t6142;
  double t6143;
  double t6160;
  double t6162;
  double t6163;
  double t6165;
  double t6166;
  double t6169;
  double t6225;
  double t6236;
  double t6238;
  double t6239;
  double t6240;
  double t6241;
  double t6242;
  double t6246;
  double t6250;
  double t6259;
  double t6263;
  double t6266;
  double t6269;
  double t6289;
  double t6293;
  double t6294;
  double t6295;
  double t6299;
  double t6300;
  double t6316;
  double t6322;
  double t6278;
  double t6280;
  double t6281;
  double t6283;
  double t6284;
  double t6286;
  double t6287;
  double t6296;
  double t6323;
  double t6324;
  double t6325;
  double t6327;
  double t6328;
  double t6329;
  double t6335;
  double t6336;
  double t6337;
  double t6340;
  double t6345;
  double t6349;
  double t6369;
  double t6385;
  double t6386;
  double t6393;
  double t6402;
  double t6404;
  double t6406;
  double t2814;
  double t344;
  double t2830;
  double t2843;
  double t6421;
  double t6423;
  double t6426;
  double t6429;
  double t6430;
  double t6432;
  double t2859;
  double t6482;
  double t6483;
  double t6486;
  double t6491;
  double t6494;
  double t6496;
  double t6499;
  double t6501;
  double t6502;
  double t6505;
  double t6506;
  double t6510;
  double t6515;
  double t6519;
  double t6521;
  double t2894;
  double t6450;
  double t6455;
  double t6456;
  double t6458;
  double t6468;
  double t6475;
  double t2919;
  double t2946;
  double t6617;
  double t6622;
  double t6624;
  double t6625;
  double t6626;
  double t6629;
  double t6630;
  double t6631;
  double t6632;
  double t6532;
  double t6534;
  double t6538;
  double t6539;
  double t6547;
  double t6555;
  double t6558;
  double t6559;
  double t6571;
  double t6580;
  double t6584;
  double t6586;
  double t6728;
  double t6739;
  double t6748;
  double t6758;
  double t6833;
  double t6836;
  double t6859;
  double t6866;
  double t5470;
  double t5478;
  double t5479;
  double t5441;
  double t5449;
  double t5454;
  double t7020;
  double t7022;
  double t7023;
  double t7026;
  double t7031;
  double t7032;
  double t7033;
  double t7042;
  double t7043;
  double t7045;
  double t7047;
  double t7048;
  double t7049;
  double t7051;
  double t6964;
  double t6972;
  double t6979;
  double t6990;
  double t5331;
  double t5332;
  double t5335;
  double t7145;
  double t7147;
  double t5293;
  double t5294;
  double t5295;
  double t5052;
  double t5083;
  double t5086;
  double t7153;
  double t7157;
  double t7220;
  double t7224;
  double t7230;
  double t7235;
  double t6184;
  double t6185;
  double t6187;
  double t5887;
  double t5930;
  double t5933;
  double t7288;
  double t7290;
  double t6155;
  double t6157;
  double t6158;
  double t7304;
  double t7307;
  double t7387;
  double t7388;
  double t7389;
  double t7392;
  double t7393;
  double t7395;
  double t7399;
  double t7403;
  double t7404;
  double t7407;
  double t7408;
  double t7412;
  double t7417;
  double t7436;
  double t7437;
  double t7438;
  double t7439;
  double t7444;
  double t7447;
  double t7448;
  double t7449;
  double t7422;
  double t7423;
  double t7425;
  double t7426;
  double t7427;
  double t7433;
  double t7443;
  double t7450;
  double t7452;
  double t7454;
  double t7455;
  double t7458;
  double t7460;
  double t7461;
  double t7462;
  double t7463;
  double t7464;
  double t7470;
  double t7471;
  double t7472;
  double t7477;
  double t7479;
  double t7482;
  double t7483;
  double t7485;
  double t7487;
  double t7494;
  double t7495;
  double t7498;
  double t7507;
  double t7508;
  double t7509;
  double t7539;
  double t7540;
  double t7541;
  double t7546;
  double t7547;
  double t7548;
  double t7552;
  double t7553;
  double t7555;
  double t7560;
  double t7561;
  double t7562;
  double t7566;
  double t7570;
  double t7573;
  double t7516;
  double t7518;
  double t7523;
  double t7528;
  double t7531;
  double t7532;
  double t7624;
  double t7633;
  double t7635;
  double t7636;
  double t7644;
  double t7647;
  double t7651;
  double t7655;
  double t7657;
  double t7582;
  double t7584;
  double t7585;
  double t7586;
  double t7589;
  double t7591;
  double t7592;
  double t7594;
  double t7597;
  double t7599;
  double t7600;
  double t7601;
  double t7738;
  double t7740;
  double t7746;
  double t7750;
  double t7817;
  double t7820;
  double t7825;
  double t7828;
  double t7994;
  double t7995;
  double t7996;
  double t7997;
  double t7999;
  double t8002;
  double t8003;
  double t8008;
  double t8009;
  double t8012;
  double t8013;
  double t8014;
  double t8017;
  double t8018;
  double t7949;
  double t7955;
  double t7963;
  double t7968;
  double t8100;
  double t8107;
  double t8123;
  double t8130;
  double t8179;
  double t8184;
  double t8193;
  double t8200;
  double t8247;
  double t8248;
  double t8254;
  double t8255;
  t520 = Cos(var1[14]);
  t534 = -1.*t520;
  t542 = 1. + t534;
  t372 = Cos(var1[13]);
  t413 = -1.*t372;
  t415 = 1. + t413;
  t613 = Sin(var1[14]);
  t616 = 4.e-6*t613;
  t441 = Sin(var1[13]);
  t588 = 1.000000000016*t542;
  t603 = -7.e-6*t542;
  t670 = t603 + t616;
  t677 = -7.e-6*t670;
  t688 = -1. + t588 + t677;
  t439 = -7.e-6*t415;
  t740 = -6.5e-11*t542;
  t751 = 1. + t740;
  t756 = -7.e-6*t751;
  t777 = 7.e-6*t542;
  t781 = t756 + t777 + t616;
  t876 = -2.8e-11*t542;
  t879 = -1. + t520;
  t882 = 4.e-6*t879;
  t913 = -7.e-6*t613;
  t974 = t882 + t913;
  t976 = -7.e-6*t974;
  t985 = t876 + t976 + t613;
  t794 = -1. + t372;
  t815 = 4.e-6*t794;
  t1104 = 2.8e-11*t415;
  t1044 = 4.e-6*t441;
  t1050 = t439 + t1044;
  t1218 = t1104 + t441;
  t1341 = 2.8e-11*t542;
  t1005 = -1.000000000016*t415;
  t1023 = 1. + t1005;
  t1505 = -1.*t613;
  t1326 = -1.*t441;
  t470 = -4.e-6*t441;
  t1381 = 4.e-6*t542;
  t1389 = t1381 + t913;
  t1407 = -4.e-6*t613;
  t1417 = t603 + t1407;
  t1302 = 7.e-6*t613;
  t1257 = -1.000000000049*t542;
  t1507 = t1341 + t1505;
  t1605 = -1.000000000016*t542;
  t1609 = 1. + t1605;
  t1614 = t876 + t1505;
  t1284 = -7.e-6*t441;
  t1286 = t815 + t1284;
  t1406 = 4.e-6*t1389;
  t1420 = -7.e-6*t1417;
  t1431 = 1. + t740 + t1406 + t1420;
  t1253 = -1.000000000049*t415;
  t1255 = 1. + t1253;
  t1476 = 1.000000000049*t542;
  t1485 = -1. + t1476;
  t1489 = 4.e-6*t1485;
  t1515 = -7.e-6*t1507;
  t1534 = t1489 + t882 + t1515 + t913;
  t1334 = t1104 + t1326;
  t1613 = -7.e-6*t1609;
  t1621 = 4.e-6*t1614;
  t1625 = t1613 + t603 + t1621 + t616;
  t823 = 7.e-6*t441;
  t1648 = -2.8e-11*t415;
  t1699 = -2.598649999999999e-7*var1[14];
  t1719 = 0.148705*t751;
  t1735 = -2.3905277499999995e-16*t542;
  t1743 = -0.038922999986*t1389;
  t1746 = -0.80315*t1417;
  t1747 = t777 + t616;
  t1754 = -0.503149000008*t1747;
  t1756 = t882 + t1302;
  t1763 = -0.038924*t1756;
  t1771 = t1699 + t1719 + t1735 + t1743 + t1746 + t1754 + t1763;
  t1779 = 1.0394599999999997e-12*var1[14];
  t1780 = 1. + t1257;
  t1789 = -0.038924*t1780;
  t1791 = -0.03892299998790722*t542;
  t1812 = -0.80315*t1507;
  t1819 = 0.148705*t974;
  t1824 = t1381 + t1302;
  t1825 = -3.6777349999999994e-6*t1824;
  t1828 = t876 + t613;
  t1837 = -0.503149000008*t1828;
  t1840 = t1779 + t1789 + t1791 + t1812 + t1819 + t1825 + t1837;
  t1879 = 1.8190549999999993e-12*var1[14];
  t1885 = -0.80315*t1609;
  t1906 = -0.5031490000160505*t542;
  t1924 = -0.038922999986*t1614;
  t1937 = t777 + t1407;
  t1963 = -3.6777349999999994e-6*t1937;
  t1968 = 0.148705*t670;
  t1973 = t1341 + t613;
  t1975 = -0.038924*t1973;
  t1993 = t1879 + t1885 + t1906 + t1924 + t1963 + t1968 + t1975;
  t716 = -6.5e-11*t415;
  t738 = 1. + t716;
  t850 = t815 + t823;
  t477 = t439 + t470;
  t2112 = 4.e-6*t415;
  t1683 = 7.e-6*t415;
  t2056 = t1286*t1431;
  t2072 = t1255*t1534;
  t2090 = t1334*t1625;
  t2091 = t2056 + t2072 + t2090;
  t1265 = 4.e-6*t974;
  t1275 = 1. + t1257 + t1265;
  t1287 = 4.e-6*t751;
  t1314 = t1287 + t882 + t1302;
  t1351 = 4.e-6*t670;
  t1355 = t1341 + t1351 + t613;
  t1641 = 1.0248489999999998e-12*var1[13];
  t1644 = -0.28120900000849935*t415;
  t1651 = t1648 + t1326;
  t1669 = -0.038748999993*t1651;
  t1685 = t1683 + t470;
  t1687 = -2.123459e-6*t1685;
  t1778 = t1050*t1771;
  t1858 = t1218*t1840;
  t2018 = t1023*t1993;
  t2028 = t1641 + t1644 + t1669 + t1687 + t1778 + t1858 + t2018;
  t1281 = t1255*t1275;
  t1316 = t1286*t1314;
  t1356 = t1334*t1355;
  t1371 = t1281 + t1316 + t1356;
  t2100 = 5.856279999999999e-13*var1[13];
  t2103 = -0.0387489999948987*t415;
  t2114 = t2112 + t823;
  t2115 = -2.123459e-6*t2114;
  t2123 = t1648 + t441;
  t2124 = -0.281209000004*t2123;
  t2131 = t1286*t1771;
  t2143 = t1255*t1840;
  t2145 = t1334*t1993;
  t2156 = t2100 + t2103 + t2115 + t2124 + t2131 + t2143 + t2145;
  t2211 = -1.4640699999999997e-7*var1[13];
  t2216 = -1.38024835e-16*t415;
  t2217 = t2112 + t1284;
  t2222 = -0.038748999993*t2217;
  t2232 = t1683 + t1044;
  t2247 = -0.281209000004*t2232;
  t2267 = t738*t1771;
  t2289 = t850*t1840;
  t2291 = t477*t1993;
  t2293 = t2211 + t2216 + t2222 + t2247 + t2267 + t2289 + t2291;
  t704 = t477*t688;
  t789 = t738*t781;
  t986 = t850*t985;
  t995 = t704 + t789 + t986;
  t997 = 0.15121*t995;
  t1024 = t1023*t688;
  t1062 = t1050*t781;
  t1236 = t1218*t985;
  t1243 = t1024 + t1062 + t1236;
  t1244 = 0.15121*t1243;
  t1466 = t1050*t1431;
  t1553 = t1218*t1534;
  t1626 = t1023*t1625;
  t1638 = t1466 + t1553 + t1626;
  t2044 = t1638*t2028;
  t2157 = t2091*t2156;
  t2159 = t738*t1431;
  t2161 = t850*t1534;
  t2167 = t477*t1625;
  t2179 = t2159 + t2161 + t2167;
  t2305 = t2179*t2293;
  t2308 = t2044 + t2157 + t2305;
  t2316 = t1371*t2308;
  t2328 = t1218*t1275;
  t2343 = t1050*t1314;
  t2361 = t1023*t1355;
  t2364 = t2328 + t2343 + t2361;
  t2369 = -1.*t2364*t2028;
  t2380 = -1.*t1371*t2156;
  t2400 = t850*t1275;
  t2405 = t738*t1314;
  t2407 = t477*t1355;
  t2410 = t2400 + t2405 + t2407;
  t2417 = -1.*t2410*t2293;
  t2419 = t2369 + t2380 + t2417;
  t2428 = t2091*t2419;
  t2436 = t997 + t1244 + t2316 + t2428;
  t2510 = t1431*t1771;
  t2511 = t1534*t1840;
  t2519 = t1625*t1993;
  t2521 = t2510 + t2511 + t2519;
  t2531 = -1.*t1771*t1314;
  t2542 = -1.*t1275*t1840;
  t2548 = -1.*t1355*t1993;
  t2567 = t2531 + t2542 + t2548;
  t2457 = 0.038749*t688;
  t2475 = 7.e-6*t751;
  t2476 = t2475 + t603 + t1407;
  t2490 = 1.e-6*t2476;
  t2491 = -0.281209*t985;
  t2523 = t1314*t2521;
  t2584 = t1431*t2567;
  t2594 = -1.*t1275*t2521;
  t2600 = -1.*t1534*t2567;
  t2608 = t2594 + t2600;
  t2613 = 4.e-6*t2608;
  t2616 = t1355*t2521;
  t2617 = t1625*t2567;
  t2620 = t2616 + t2617;
  t2642 = -7.e-6*t2620;
  t2644 = t2457 + t2490 + t2491 + t2523 + t2584 + t2613 + t2642;
  t295 = Sin(var1[12]);
  t164 = Cos(var1[12]);
  t169 = -1.*t164;
  t175 = 1. + t169;
  t329 = 0.15121*t295;
  t192 = -0.15121*t175;
  t2659 = 0.15121*t175;
  t2660 = t295*t2028;
  t2662 = t164*t2293;
  t2665 = t2659 + t329 + t2660 + t2662;
  t2696 = t164*t2028;
  t2698 = -1.*t295*t2293;
  t2699 = t192 + t329 + t2696 + t2698;
  t2653 = t295*t1638;
  t2656 = t164*t2179;
  t2658 = t2653 + t2656;
  t2673 = t2658*t2665;
  t2676 = t164*t1638;
  t2687 = -1.*t295*t2179;
  t2695 = t2676 + t2687;
  t2702 = t2695*t2699;
  t2705 = t2157 + t2673 + t2702;
  t2707 = t1371*t2705;
  t2708 = t295*t2364;
  t2715 = t164*t2410;
  t2736 = t2708 + t2715;
  t2743 = -1.*t2736*t2665;
  t2745 = t164*t2364;
  t2746 = -1.*t295*t2410;
  t2750 = t2745 + t2746;
  t2755 = -1.*t2750*t2699;
  t2781 = t2380 + t2743 + t2755;
  t2786 = t2091*t2781;
  t2791 = t2707 + t2786;
  t134 = Cos(var1[4]);
  t140 = Cos(var1[5]);
  t2836 = Sin(var1[5]);
  t2821 = Sin(var1[4]);
  t2845 = -1.*t134*t140*t295;
  t2846 = -1.*t164*t134*t2836;
  t2848 = t2845 + t2846;
  t2861 = t164*t134*t140;
  t2867 = -1.*t134*t295*t2836;
  t2868 = t2861 + t2867;
  t2979 = t1334*t688;
  t2990 = t1286*t781;
  t2991 = t1255*t985;
  t2997 = t2979 + t2990 + t2991;
  t2998 = t2997*t2821;
  t3002 = -1.*t295*t995;
  t3004 = t164*t1243;
  t3006 = t3002 + t3004;
  t3007 = t140*t3006;
  t3009 = t164*t995;
  t3013 = t295*t1243;
  t3024 = t3009 + t3013;
  t3025 = -1.*t3024*t2836;
  t3032 = t3007 + t3025;
  t3033 = t134*t3032;
  t3035 = t2998 + t3033;
  t2901 = t1334*t2821;
  t2902 = t477*t2848;
  t2906 = t1023*t2868;
  t2915 = t2901 + t2902 + t2906;
  t2929 = t1286*t2821;
  t2931 = t738*t2848;
  t2932 = t1050*t2868;
  t2933 = t2929 + t2931 + t2932;
  t2949 = t1255*t2821;
  t2961 = t850*t2848;
  t2963 = t1218*t2868;
  t2967 = t2949 + t2961 + t2963;
  t3138 = Sin(var1[3]);
  t3154 = t140*t3024;
  t3170 = t3006*t2836;
  t3187 = t3154 + t3170;
  t3190 = t3138*t3187;
  t3194 = Cos(var1[3]);
  t3196 = t134*t2997;
  t3204 = -1.*t2821*t3032;
  t3205 = t3196 + t3204;
  t3222 = t3194*t3205;
  t3224 = t3190 + t3222;
  t3232 = t3194*t3187;
  t3233 = -1.*t3138*t3205;
  t3234 = t3232 + t3233;
  t3265 = t140*t2658;
  t3266 = t2695*t2836;
  t3267 = t3265 + t3266;
  t3256 = t140*t2699;
  t3257 = -1.*t2665*t2836;
  t3262 = t3256 + t3257;
  t3239 = t140*t2736;
  t3240 = t2750*t2836;
  t3243 = t3239 + t3240;
  t3273 = t140*t2665;
  t3274 = t2699*t2836;
  t3277 = t3273 + t3274;
  t3244 = t140*t2695;
  t3250 = -1.*t2658*t2836;
  t3255 = t3244 + t3250;
  t3264 = t3255*t3262;
  t3294 = t3267*t3277;
  t3299 = t2157 + t3264 + t3294;
  t3306 = t3243*t3299;
  t3307 = t140*t2750;
  t3308 = -1.*t2736*t2836;
  t3339 = t3307 + t3308;
  t3364 = -1.*t3339*t3262;
  t3368 = -1.*t3243*t3277;
  t3373 = t2380 + t3364 + t3368;
  t3379 = t3267*t3373;
  t3383 = t3306 + t3379;
  t3433 = t2091*t2821;
  t3434 = t134*t3255;
  t3443 = t3433 + t3434;
  t3416 = t1371*t2821;
  t3419 = t134*t3339;
  t3432 = t3416 + t3419;
  t3447 = t2156*t2821;
  t3448 = t134*t3262;
  t3453 = t3447 + t3448;
  t3482 = t134*t2156;
  t3483 = -1.*t2821*t3262;
  t3495 = t3482 + t3483;
  t3473 = t3443*t3453;
  t3474 = t134*t2091;
  t3477 = -1.*t2821*t3255;
  t3479 = t3474 + t3477;
  t3497 = t3479*t3495;
  t3503 = t3294 + t3473 + t3497;
  t3507 = t3432*t3503;
  t3509 = -1.*t3432*t3453;
  t3511 = t134*t1371;
  t3514 = -1.*t2821*t3339;
  t3519 = t3511 + t3514;
  t3523 = -1.*t3519*t3495;
  t3530 = t3368 + t3509 + t3523;
  t3531 = t3443*t3530;
  t3537 = t3507 + t3531;
  t3546 = 0.15121*t164;
  t3552 = -0.15121*t295;
  t3555 = -1.*t295*t2028;
  t3561 = -1.*t164*t2293;
  t3562 = t3546 + t3552 + t3555 + t3561;
  t3590 = t3546 + t329 + t2696 + t2698;
  t3652 = -1.*t164*t995;
  t3655 = -1.*t295*t1243;
  t3656 = t3652 + t3655;
  t3679 = t140*t3656;
  t3680 = -1.*t3006*t2836;
  t3682 = t3679 + t3680;
  t3695 = t3656*t2836;
  t3710 = t3007 + t3695;
  t3613 = -1.*t295*t2364;
  t3621 = -1.*t164*t2410;
  t3626 = t3613 + t3621;
  t3571 = -1.*t295*t1638;
  t3579 = -1.*t164*t2179;
  t3580 = t3571 + t3579;
  t3765 = t3580*t2836;
  t3767 = t3244 + t3765;
  t3770 = t140*t3590;
  t3779 = t3562*t2836;
  t3784 = t3770 + t3779;
  t3754 = t3626*t2836;
  t3758 = t3307 + t3754;
  t3804 = t140*t3562;
  t3805 = -1.*t3590*t2836;
  t3819 = t3804 + t3805;
  t3787 = t3267*t3784;
  t3802 = t3767*t3277;
  t3789 = t140*t3580;
  t3791 = -1.*t2695*t2836;
  t3795 = t3789 + t3791;
  t3849 = -1.*t3243*t3784;
  t3874 = -1.*t3758*t3277;
  t3855 = t140*t3626;
  t3866 = -1.*t2750*t2836;
  t3867 = t3855 + t3866;
  t4001 = -1.*t140*t3024;
  t4003 = t4001 + t3680;
  t4064 = -1.*t140*t2665;
  t4066 = -1.*t2699*t2836;
  t4069 = t4064 + t4066;
  t4055 = t3267*t3262;
  t4073 = t3255*t3277;
  t4046 = -1.*t140*t2658;
  t4048 = t4046 + t3791;
  t4125 = -1.*t3243*t3262;
  t4151 = -1.*t3339*t3277;
  t4095 = -1.*t140*t2736;
  t4102 = t4095 + t3866;
  t4276 = 4.e-6*t520;
  t4252 = -7.e-6*t520;
  t4262 = t4252 + t1407;
  t4264 = -7.e-6*t4262;
  t4266 = -2.8e-11*t613;
  t4268 = t520 + t4264 + t4266;
  t4279 = 7.000000000455e-6*t613;
  t4291 = t4276 + t4279;
  t4297 = t4276 + t913;
  t4307 = -7.e-6*t4297;
  t4330 = 1.000000000016*t613;
  t4337 = t4307 + t4330;
  t4367 = 7.e-6*t520;
  t4414 = 2.8e-11*t613;
  t4361 = -4.e-6*t520;
  t4364 = t4361 + t913;
  t4366 = -0.80315*t4364;
  t4372 = t4367 + t1407;
  t4377 = -0.038924*t4372;
  t4378 = t4252 + t616;
  t4379 = -0.038922999986*t4378;
  t4380 = t4276 + t1302;
  t4382 = -0.503149000008*t4380;
  t4384 = -9.666064052774999e-12*t613;
  t4392 = -2.598649999999999e-7 + t4366 + t4377 + t4379 + t4382 + t4384;
  t4395 = 0.148705*t4262;
  t4396 = t520 + t4266;
  t4405 = -0.503149000008*t4396;
  t4415 = t534 + t4414;
  t4423 = -0.80315*t4415;
  t4430 = t4367 + t616;
  t4431 = -3.6777349999999994e-6*t4430;
  t4437 = 1.0000140000590574e-6*t613;
  t4438 = 1.0394599999999997e-12 + t4395 + t4405 + t4423 + t4431 + t4437;
  t4457 = 0.148705*t4297;
  t4462 = t534 + t4266;
  t4465 = -0.038922999986*t4462;
  t4468 = t520 + t4414;
  t4472 = -0.038924*t4468;
  t4474 = t4361 + t1302;
  t4479 = -3.6777349999999994e-6*t4474;
  t4480 = 0.30000099999679997*t613;
  t4483 = 1.8190549999999993e-12 + t4457 + t4465 + t4472 + t4479 + t4480;
  t4541 = -7.e-6*t4364;
  t4547 = 4.e-6*t4378;
  t4551 = -6.5e-11*t613;
  t4552 = t4541 + t4547 + t4551;
  t4558 = 4.e-6*t4462;
  t4560 = 1.12e-16*t613;
  t4563 = t4276 + t4558 + t4560;
  t4572 = -7.e-6*t4415;
  t4574 = 1.96e-16*t613;
  t4576 = t4252 + t4572 + t4574;
  t4393 = t1050*t4392;
  t4449 = t1218*t4438;
  t4485 = t1023*t4483;
  t4486 = t4393 + t4449 + t4485;
  t4497 = t1286*t4392;
  t4498 = t1255*t4438;
  t4500 = t1334*t4483;
  t4503 = t4497 + t4498 + t4500;
  t4506 = t738*t4392;
  t4516 = t850*t4438;
  t4517 = t477*t4483;
  t4531 = t4506 + t4516 + t4517;
  t4690 = 4.e-6*t4262;
  t4691 = -1.000000000049*t613;
  t4694 = t4690 + t4691;
  t4697 = -4.00000000026e-6*t613;
  t4698 = t4367 + t4697;
  t4715 = 4.e-6*t4297;
  t4720 = t520 + t4715 + t4414;
  t4735 = t1255*t4694;
  t4736 = t1286*t4698;
  t4738 = t1334*t4720;
  t4743 = t4735 + t4736 + t4738;
  t4591 = t1286*t4552;
  t4596 = t1334*t4563;
  t4599 = t1255*t4576;
  t4607 = t4591 + t4596 + t4599;
  t4819 = t1771*t4552;
  t4823 = t1431*t4392;
  t4824 = t1534*t4438;
  t4832 = t1625*t4483;
  t4833 = t4576*t1840;
  t4834 = t4563*t1993;
  t4838 = t4819 + t4823 + t4824 + t4832 + t4833 + t4834;
  t4841 = -1.*t1771*t4698;
  t4848 = -1.*t1275*t4438;
  t4849 = -1.*t4392*t1314;
  t4858 = -1.*t4483*t1355;
  t4862 = -1.*t4694*t1840;
  t4869 = -1.*t4720*t1993;
  t4871 = t4841 + t4848 + t4849 + t4858 + t4862 + t4869;
  t4504 = t2091*t4503;
  t4619 = t4607*t2156;
  t4631 = t738*t4552;
  t4633 = t477*t4563;
  t4648 = t850*t4576;
  t4649 = t4631 + t4633 + t4648;
  t4556 = t1050*t4552;
  t4568 = t1023*t4563;
  t4579 = t1218*t4576;
  t4587 = t4556 + t4568 + t4579;
  t4674 = -1.*t4503*t1371;
  t4744 = -1.*t4743*t2156;
  t4934 = t295*t4486;
  t4935 = t164*t4531;
  t4939 = t4934 + t4935;
  t4943 = t164*t4486;
  t4944 = -1.*t295*t4531;
  t4948 = t4943 + t4944;
  t4695 = t1218*t4694;
  t4711 = t1050*t4698;
  t4725 = t1023*t4720;
  t4730 = t4695 + t4711 + t4725;
  t4745 = t850*t4694;
  t4747 = t738*t4698;
  t4752 = t477*t4720;
  t4753 = t4745 + t4747 + t4752;
  t4273 = t1218*t4268;
  t4293 = t1050*t4291;
  t4339 = t1023*t4337;
  t4340 = t4273 + t4293 + t4339;
  t4350 = t850*t4268;
  t4351 = t738*t4291;
  t4352 = t477*t4337;
  t4357 = t4350 + t4351 + t4352;
  t5064 = t295*t4340;
  t5067 = t164*t4357;
  t5068 = t5064 + t5067;
  t5057 = t164*t4340;
  t5058 = -1.*t295*t4357;
  t5059 = t5057 + t5058;
  t5044 = t1255*t4268;
  t5045 = t1286*t4291;
  t5049 = t1334*t4337;
  t5050 = t5044 + t5045 + t5049;
  t5063 = t140*t5059;
  t5075 = -1.*t5068*t2836;
  t5079 = t5063 + t5075;
  t5091 = t140*t5068;
  t5092 = t5059*t2836;
  t5097 = t5091 + t5092;
  t5107 = t134*t5050;
  t5108 = -1.*t2821*t5079;
  t5109 = t5107 + t5108;
  t4974 = -1.*t295*t4649;
  t4991 = t164*t4587;
  t4994 = t4974 + t4991;
  t4951 = t164*t4649;
  t4953 = t295*t4587;
  t4954 = t4951 + t4953;
  t5131 = t140*t4948;
  t5135 = -1.*t4939*t2836;
  t5136 = t5131 + t5135;
  t5138 = t140*t4939;
  t5140 = t4948*t2836;
  t5141 = t5138 + t5140;
  t5022 = t164*t4730;
  t5026 = -1.*t295*t4753;
  t5028 = t5022 + t5026;
  t5013 = t295*t4730;
  t5015 = t164*t4753;
  t5019 = t5013 + t5015;
  t5198 = t140*t5019;
  t5199 = t5028*t2836;
  t5200 = t5198 + t5199;
  t5158 = t140*t4954;
  t5164 = t4994*t2836;
  t5168 = t5158 + t5164;
  t5143 = t3267*t5141;
  t5169 = t5168*t3277;
  t5144 = t140*t4994;
  t5147 = -1.*t4954*t2836;
  t5155 = t5144 + t5147;
  t5184 = -1.*t5141*t3243;
  t5202 = -1.*t5200*t3277;
  t5235 = t4503*t2821;
  t5238 = t134*t5136;
  t5239 = t5235 + t5238;
  t5252 = t134*t4503;
  t5261 = -1.*t2821*t5136;
  t5262 = t5252 + t5261;
  t5185 = t140*t5028;
  t5189 = -1.*t5019*t2836;
  t5192 = t5185 + t5189;
  t5304 = t4743*t2821;
  t5313 = t134*t5192;
  t5315 = t5304 + t5313;
  t5274 = t4607*t2821;
  t5279 = t134*t5155;
  t5280 = t5274 + t5279;
  t5392 = -1.*t2997*t2821;
  t5394 = -1.*t134*t3032;
  t5402 = t5392 + t5394;
  t5423 = -1.*t2156*t2821;
  t5424 = -1.*t134*t3262;
  t5426 = t5423 + t5424;
  t5555 = 2.8e-11*t441;
  t5565 = -7.e-6*t372;
  t5566 = t5565 + t470;
  t5570 = t413 + t5555;
  t5544 = 4.e-6*t372;
  t5548 = t5544 + t1284;
  t5557 = t372 + t5555;
  t5587 = t5566*t1431;
  t5591 = -1.000000000049*t441*t1534;
  t5592 = t5570*t1625;
  t5594 = t5587 + t5591 + t5592;
  t5518 = 7.e-6*t372;
  t5520 = t5518 + t470;
  t5506 = -4.e-6*t372;
  t5508 = t5506 + t1284;
  t5651 = -2.8e-11*t441;
  t5564 = -1.000000000049*t441*t1275;
  t5567 = t5566*t1314;
  t5576 = t5570*t1355;
  t5580 = t5564 + t5567 + t5576;
  t5614 = t5565 + t1044;
  t5617 = -0.038748999993*t5614;
  t5618 = t5544 + t823;
  t5620 = -0.281209000004*t5618;
  t5622 = -1.38024835e-16*t441;
  t5624 = -6.5e-11*t441*t1771;
  t5627 = t5520*t1840;
  t5629 = t5508*t1993;
  t5632 = -1.4640699999999997e-7 + t5617 + t5620 + t5622 + t5624 + t5627 + t5629;
  t5654 = t372 + t5651;
  t5655 = -0.281209000004*t5654;
  t5656 = t5518 + t1044;
  t5657 = -2.123459e-6*t5656;
  t5662 = -0.0387489999948987*t441;
  t5663 = t5566*t1771;
  t5665 = -1.000000000049*t441*t1840;
  t5668 = t5570*t1993;
  t5669 = 5.856279999999999e-13 + t5655 + t5657 + t5662 + t5663 + t5665 + t5668;
  t5672 = t413 + t5651;
  t5674 = -0.038748999993*t5672;
  t5679 = t5506 + t823;
  t5689 = -2.123459e-6*t5679;
  t5692 = -0.28120900000849935*t441;
  t5694 = t5548*t1771;
  t5698 = t5557*t1840;
  t5701 = -1.000000000016*t441*t1993;
  t5720 = 1.0248489999999998e-12 + t5674 + t5689 + t5692 + t5694 + t5698 + t5701;
  t5609 = t5594*t2156;
  t5670 = t2091*t5669;
  t5638 = -6.5e-11*t441*t1431;
  t5639 = t5520*t1534;
  t5644 = t5508*t1625;
  t5649 = t5638 + t5639 + t5644;
  t5596 = t5548*t1431;
  t5597 = t5557*t1534;
  t5598 = -1.000000000016*t441*t1625;
  t5601 = t5596 + t5597 + t5598;
  t5750 = -1.*t5580*t2156;
  t5777 = -1.*t1371*t5669;
  t5757 = t5520*t1275;
  t5758 = -6.5e-11*t441*t1314;
  t5763 = t5508*t1355;
  t5764 = t5757 + t5758 + t5763;
  t5732 = t5557*t1275;
  t5733 = t5548*t1314;
  t5739 = -1.000000000016*t441*t1355;
  t5742 = t5732 + t5733 + t5739;
  t5823 = -1.*t295*t5632;
  t5824 = t164*t5720;
  t5825 = t5823 + t5824;
  t5834 = t164*t5632;
  t5839 = t295*t5720;
  t5841 = t5834 + t5839;
  t5509 = t5508*t688;
  t5514 = -6.5e-11*t441*t781;
  t5527 = t5520*t985;
  t5534 = t5509 + t5514 + t5527;
  t5543 = -1.000000000016*t441*t688;
  t5554 = t5548*t781;
  t5559 = t5557*t985;
  t5561 = t5543 + t5554 + t5559;
  t5906 = t164*t5534;
  t5911 = t295*t5561;
  t5923 = t5906 + t5911;
  t5890 = -1.*t295*t5534;
  t5895 = t164*t5561;
  t5901 = t5890 + t5895;
  t5877 = t5570*t688;
  t5879 = t5566*t781;
  t5880 = -1.000000000049*t441*t985;
  t5885 = t5877 + t5879 + t5880;
  t5902 = t140*t5901;
  t5927 = -1.*t5923*t2836;
  t5928 = t5902 + t5927;
  t5936 = t140*t5923;
  t5939 = t5901*t2836;
  t5940 = t5936 + t5939;
  t5943 = t134*t5885;
  t5944 = -1.*t2821*t5928;
  t5949 = t5943 + t5944;
  t5852 = t164*t5764;
  t5854 = t295*t5742;
  t5855 = t5852 + t5854;
  t5860 = -1.*t295*t5764;
  t5862 = t164*t5742;
  t5865 = t5860 + t5862;
  t5797 = t164*t5649;
  t5802 = t295*t5601;
  t5803 = t5797 + t5802;
  t5808 = -1.*t295*t5649;
  t5816 = t164*t5601;
  t5818 = t5808 + t5816;
  t5998 = t140*t5803;
  t6003 = t5818*t2836;
  t6004 = t5998 + t6003;
  t5975 = t140*t5855;
  t5979 = t5865*t2836;
  t5984 = t5975 + t5979;
  t6033 = t140*t5841;
  t6039 = t5825*t2836;
  t6052 = t6033 + t6039;
  t6056 = t140*t5825;
  t6061 = -1.*t5841*t2836;
  t6067 = t6056 + t6061;
  t6076 = t140*t5865;
  t6078 = -1.*t5855*t2836;
  t6094 = t6076 + t6078;
  t6010 = t140*t5818;
  t6016 = -1.*t5803*t2836;
  t6017 = t6010 + t6016;
  t6031 = t6004*t3277;
  t6054 = t3267*t6052;
  t6147 = t5594*t2821;
  t6150 = t134*t6017;
  t6152 = t6147 + t6150;
  t6101 = -1.*t5984*t3277;
  t6116 = -1.*t3243*t6052;
  t6141 = t5580*t2821;
  t6142 = t134*t6094;
  t6143 = t6141 + t6142;
  t6160 = t5669*t2821;
  t6162 = t134*t6067;
  t6163 = t6160 + t6162;
  t6165 = t134*t5669;
  t6166 = -1.*t2821*t6067;
  t6169 = t6165 + t6166;
  t6225 = 0.15121*t2364;
  t6236 = 0.15121*t2410;
  t6238 = -1.*t1638*t2028;
  t6239 = -1.*t2091*t2156;
  t6240 = -1.*t2179*t2293;
  t6241 = t6238 + t6239 + t6240;
  t6242 = t2997*t6241;
  t6246 = t1243*t2028;
  t6250 = t2997*t2156;
  t6259 = t995*t2293;
  t6263 = t6246 + t6250 + t6259;
  t6266 = t2091*t6263;
  t6269 = t6225 + t6236 + t6242 + t6266;
  t6289 = t1771*t781;
  t6293 = t985*t1840;
  t6294 = t688*t1993;
  t6295 = t6289 + t6293 + t6294;
  t6299 = -1.*t1431*t1771;
  t6300 = -1.*t1534*t1840;
  t6316 = -1.*t1625*t1993;
  t6322 = t6299 + t6300 + t6316;
  t6278 = -0.281209*t1275;
  t6280 = 6.5e-11*t542;
  t6281 = -1. + t6280;
  t6283 = 4.e-6*t6281;
  t6284 = t6283 + t1381 + t913;
  t6286 = 1.e-6*t6284;
  t6287 = 0.038749*t1355;
  t6296 = t1431*t6295;
  t6323 = t781*t6322;
  t6324 = t1625*t6295;
  t6325 = t688*t6322;
  t6327 = t6324 + t6325;
  t6328 = -7.e-6*t6327;
  t6329 = -1.*t1534*t6295;
  t6335 = -1.*t985*t6322;
  t6336 = t6329 + t6335;
  t6337 = 4.e-6*t6336;
  t6340 = t6278 + t6286 + t6287 + t6296 + t6323 + t6328 + t6337;
  t6345 = -1.*t2658*t2665;
  t6349 = -1.*t2695*t2699;
  t6369 = t6239 + t6345 + t6349;
  t6385 = t2997*t6369;
  t6386 = t3024*t2665;
  t6393 = t3006*t2699;
  t6402 = t6250 + t6386 + t6393;
  t6404 = t2091*t6402;
  t6406 = t6385 + t6404;
  t2814 = t2100 + t2103 + t2115 + t2124;
  t344 = t192 + t329;
  t2830 = t2659 + t329;
  t2843 = t2211 + t2216 + t2222 + t2247;
  t6421 = t140*t3138*t2821;
  t6423 = t3194*t2836;
  t6426 = t6421 + t6423;
  t6429 = t3194*t140;
  t6430 = -1.*t3138*t2821*t2836;
  t6432 = t6429 + t6430;
  t2859 = t1641 + t1644 + t1669 + t1687;
  t6482 = t3138*t3243;
  t6483 = t3194*t3519;
  t6486 = t6482 + t6483;
  t6491 = t3194*t3243;
  t6494 = -1.*t3138*t3519;
  t6496 = t6491 + t6494;
  t6499 = -1.*t3255*t3262;
  t6501 = -1.*t3267*t3277;
  t6502 = t6239 + t6499 + t6501;
  t6505 = t3187*t6502;
  t6506 = t3032*t3262;
  t6510 = t3187*t3277;
  t6515 = t6250 + t6506 + t6510;
  t6519 = t3267*t6515;
  t6521 = t6505 + t6519;
  t2894 = t1879 + t1906 + t1924 + t1963;
  t6450 = -1.*t295*t6426;
  t6455 = t164*t6432;
  t6456 = t6450 + t6455;
  t6458 = t164*t6426;
  t6468 = t295*t6432;
  t6475 = t6458 + t6468;
  t2919 = t1699 + t1735 + t1743 + t1754;
  t2946 = t1779 + t1791 + t1825 + t1837;
  t6617 = -1.*t3443*t3453;
  t6622 = -1.*t3479*t3495;
  t6624 = t6501 + t6617 + t6622;
  t6625 = t3035*t6624;
  t6626 = t3035*t3453;
  t6629 = t3205*t3495;
  t6630 = t6510 + t6626 + t6629;
  t6631 = t3443*t6630;
  t6632 = t6625 + t6631;
  t6532 = -1.*t134*t1334*t3138;
  t6534 = t477*t6456;
  t6538 = t1023*t6475;
  t6539 = t6532 + t6534 + t6538;
  t6547 = -1.*t134*t1286*t3138;
  t6555 = t738*t6456;
  t6558 = t1050*t6475;
  t6559 = t6547 + t6555 + t6558;
  t6571 = -1.*t1255*t134*t3138;
  t6580 = t850*t6456;
  t6584 = t1218*t6475;
  t6586 = t6571 + t6580 + t6584;
  t6728 = -1.*t3267*t3784;
  t6739 = -1.*t3767*t3277;
  t6748 = t3187*t3784;
  t6758 = t3710*t3277;
  t6833 = -1.*t3267*t3262;
  t6836 = -1.*t3255*t3277;
  t6859 = t3187*t3262;
  t6866 = t3032*t3277;
  t5470 = -1.*t1371*t2821;
  t5478 = -1.*t134*t3339;
  t5479 = t5470 + t5478;
  t5441 = -1.*t2091*t2821;
  t5449 = -1.*t134*t3255;
  t5454 = t5441 + t5449;
  t7020 = -1.*t1771*t4552;
  t7022 = -1.*t1431*t4392;
  t7023 = -1.*t1534*t4438;
  t7026 = -1.*t1625*t4483;
  t7031 = -1.*t4576*t1840;
  t7032 = -1.*t4563*t1993;
  t7033 = t7020 + t7022 + t7023 + t7026 + t7031 + t7032;
  t7042 = t4392*t781;
  t7043 = t1771*t4291;
  t7045 = t688*t4483;
  t7047 = t4438*t985;
  t7048 = t4268*t1840;
  t7049 = t4337*t1993;
  t7051 = t7042 + t7043 + t7045 + t7047 + t7048 + t7049;
  t6964 = -1.*t2091*t4503;
  t6972 = -1.*t4607*t2156;
  t6979 = t4503*t2997;
  t6990 = t5050*t2156;
  t5331 = t134*t4743;
  t5332 = -1.*t2821*t5192;
  t5335 = t5331 + t5332;
  t7145 = -1.*t3267*t5141;
  t7147 = -1.*t5168*t3277;
  t5293 = t134*t4607;
  t5294 = -1.*t2821*t5155;
  t5295 = t5293 + t5294;
  t5052 = t5050*t2821;
  t5083 = t134*t5079;
  t5086 = t5052 + t5083;
  t7153 = t5141*t3187;
  t7157 = t5097*t3277;
  t7220 = -1.*t5594*t2156;
  t7224 = -1.*t2091*t5669;
  t7230 = t5885*t2156;
  t7235 = t2997*t5669;
  t6184 = t134*t5580;
  t6185 = -1.*t2821*t6094;
  t6187 = t6184 + t6185;
  t5887 = t5885*t2821;
  t5930 = t134*t5928;
  t5933 = t5887 + t5930;
  t7288 = -1.*t6004*t3277;
  t7290 = -1.*t3267*t6052;
  t6155 = t134*t5594;
  t6157 = -1.*t2821*t6017;
  t6158 = t6155 + t6157;
  t7304 = t5940*t3277;
  t7307 = t3187*t6052;
  t7387 = 0.15121*t1638;
  t7388 = 0.15121*t2179;
  t7389 = -1.*t1243*t2028;
  t7392 = -1.*t2997*t2156;
  t7393 = -1.*t995*t2293;
  t7395 = t7389 + t7392 + t7393;
  t7399 = t1371*t7395;
  t7403 = t2364*t2028;
  t7404 = t1371*t2156;
  t7407 = t2410*t2293;
  t7408 = t7403 + t7404 + t7407;
  t7412 = t2997*t7408;
  t7417 = t7387 + t7388 + t7399 + t7412;
  t7436 = -1.*t1771*t781;
  t7437 = -1.*t985*t1840;
  t7438 = -1.*t688*t1993;
  t7439 = t7436 + t7437 + t7438;
  t7444 = t1771*t1314;
  t7447 = t1275*t1840;
  t7448 = t1355*t1993;
  t7449 = t7444 + t7447 + t7448;
  t7422 = 7.e-6*t1417;
  t7423 = 4.e-6*t1756;
  t7425 = -1. + t6280 + t7422 + t7423;
  t7426 = 1.e-6*t7425;
  t7427 = -0.281209*t1534;
  t7433 = 0.038749*t1625;
  t7443 = t1314*t7439;
  t7450 = t781*t7449;
  t7452 = t1355*t7439;
  t7454 = t688*t7449;
  t7455 = t7452 + t7454;
  t7458 = -7.e-6*t7455;
  t7460 = -1.*t1275*t7439;
  t7461 = -1.*t985*t7449;
  t7462 = t7460 + t7461;
  t7463 = 4.e-6*t7462;
  t7464 = t7426 + t7427 + t7433 + t7443 + t7450 + t7458 + t7463;
  t7470 = -1.*t3024*t2665;
  t7471 = -1.*t3006*t2699;
  t7472 = t7392 + t7470 + t7471;
  t7477 = t1371*t7472;
  t7479 = t2736*t2665;
  t7482 = t2750*t2699;
  t7483 = t7404 + t7479 + t7482;
  t7485 = t2997*t7483;
  t7487 = t7477 + t7485;
  t7494 = -1.*t3194*t140*t2821;
  t7495 = t3138*t2836;
  t7498 = t7494 + t7495;
  t7507 = t140*t3138;
  t7508 = t3194*t2821*t2836;
  t7509 = t7507 + t7508;
  t7539 = t3138*t3267;
  t7540 = t3194*t3479;
  t7541 = t7539 + t7540;
  t7546 = t3194*t3267;
  t7547 = -1.*t3138*t3479;
  t7548 = t7546 + t7547;
  t7552 = -1.*t3032*t3262;
  t7553 = -1.*t3187*t3277;
  t7555 = t7392 + t7552 + t7553;
  t7560 = t3243*t7555;
  t7561 = t3339*t3262;
  t7562 = t3243*t3277;
  t7566 = t7404 + t7561 + t7562;
  t7570 = t3187*t7566;
  t7573 = t7560 + t7570;
  t7516 = -1.*t295*t7498;
  t7518 = t164*t7509;
  t7523 = t7516 + t7518;
  t7528 = t164*t7498;
  t7531 = t295*t7509;
  t7532 = t7528 + t7531;
  t7624 = -1.*t3035*t3453;
  t7633 = -1.*t3205*t3495;
  t7635 = t7553 + t7624 + t7633;
  t7636 = t3432*t7635;
  t7644 = t3432*t3453;
  t7647 = t3519*t3495;
  t7651 = t7562 + t7644 + t7647;
  t7655 = t3035*t7651;
  t7657 = t7636 + t7655;
  t7582 = t3194*t134*t1334;
  t7584 = t477*t7523;
  t7585 = t1023*t7532;
  t7586 = t7582 + t7584 + t7585;
  t7589 = t3194*t134*t1286;
  t7591 = t738*t7523;
  t7592 = t1050*t7532;
  t7594 = t7589 + t7591 + t7592;
  t7597 = t1255*t3194*t134;
  t7599 = t850*t7523;
  t7600 = t1218*t7532;
  t7601 = t7597 + t7599 + t7600;
  t7738 = -1.*t3187*t3784;
  t7740 = -1.*t3710*t3277;
  t7746 = t3243*t3784;
  t7750 = t3758*t3277;
  t7817 = -1.*t3187*t3262;
  t7820 = -1.*t3032*t3277;
  t7825 = t3243*t3262;
  t7828 = t3339*t3277;
  t7994 = t1771*t4698;
  t7995 = t1275*t4438;
  t7996 = t4392*t1314;
  t7997 = t4483*t1355;
  t7999 = t4694*t1840;
  t8002 = t4720*t1993;
  t8003 = t7994 + t7995 + t7996 + t7997 + t7999 + t8002;
  t8008 = -1.*t4392*t781;
  t8009 = -1.*t1771*t4291;
  t8012 = -1.*t688*t4483;
  t8013 = -1.*t4438*t985;
  t8014 = -1.*t4268*t1840;
  t8017 = -1.*t4337*t1993;
  t8018 = t8008 + t8009 + t8012 + t8013 + t8014 + t8017;
  t7949 = t4503*t1371;
  t7955 = t4743*t2156;
  t7963 = -1.*t4503*t2997;
  t7968 = -1.*t5050*t2156;
  t8100 = t5141*t3243;
  t8107 = t5200*t3277;
  t8123 = -1.*t5141*t3187;
  t8130 = -1.*t5097*t3277;
  t8179 = -1.*t5885*t2156;
  t8184 = -1.*t2997*t5669;
  t8193 = t5580*t2156;
  t8200 = t1371*t5669;
  t8247 = -1.*t5940*t3277;
  t8248 = -1.*t3187*t6052;
  t8254 = t5984*t3277;
  t8255 = t3243*t6052;
  p_output1[0]=t2814*t2821 - 1.*t134*t2830*t2836 + t2843*t2848 + t2859*t2868 + t2894*t2915 + t2919*t2933 + t2946*t2967 - 0.80315*(t1609*t2915 + t1417*t2933 + t1507*t2967) - 0.038924*(t1973*t2915 + t1756*t2933 + t1780*t2967) + t134*t140*t344 + 0.148705*(t2915*t670 + t2933*t751 + t2967*t974) + var1[0] + t3035*var2[0] + t3234*var2[1] + t3224*var2[2] + t3537*var2[3] + ((-1.*t3138*t3187 - 1.*t3194*t3205)*var2[1] + t3234*var2[2])*var2[3] + t3383*var2[4] + (t3205*var2[0] - 1.*t3138*t5402*var2[1] + t3194*t5402*var2[2] + (t3503*t3519 + t3479*t3530 + t3432*(t3453*t3479 + t3443*t3495 + t3479*t5426 + t3495*t5454) + t3443*(-1.*t3432*t3495 - 1.*t3453*t3519 - 1.*t3519*t5426 - 1.*t3495*t5479))*var2[3])*var2[4] + t2791*var2[5] + (t134*t4003*var2[0] + (t3032*t3194 + t2821*t3138*t4003)*var2[1] + (t3032*t3138 - 1.*t2821*t3194*t4003)*var2[2] + (t134*t3530*t4048 + t3432*(t134*t3453*t4048 - 1.*t2821*t3495*t4048 + t4055 + t134*t3443*t4069 - 1.*t2821*t3479*t4069 + t4073) + t134*t3503*t4102 + t3443*(-1.*t134*t3432*t4069 + t2821*t3519*t4069 - 1.*t134*t3453*t4102 + t2821*t3495*t4102 + t4125 + t4151))*var2[3] + (t3299*t3339 + t3255*t3373 + t3243*(t3262*t4048 + t4055 + t3255*t4069 + t4073) + t3267*(-1.*t3339*t4069 - 1.*t3262*t4102 + t4125 + t4151))*var2[4])*var2[5] + t2436*var2[12] + (t134*t3682*var2[0] + (t2821*t3138*t3682 + t3194*t3710)*var2[1] + (-1.*t2821*t3194*t3682 + t3138*t3710)*var2[2] + (t134*t3530*t3795 + t3432*(t3787 + t134*t3453*t3795 - 1.*t2821*t3495*t3795 + t3802 + t134*t3443*t3819 - 1.*t2821*t3479*t3819) + t134*t3503*t3867 + t3443*(-1.*t134*t3432*t3819 + t2821*t3519*t3819 + t3849 - 1.*t134*t3453*t3867 + t2821*t3495*t3867 + t3874))*var2[3] + (t3299*t3758 + t3373*t3767 + t3243*(t3787 + t3262*t3795 + t3802 + t3255*t3819) + t3267*(-1.*t3339*t3819 + t3849 - 1.*t3262*t3867 + t3874))*var2[4] + (t1371*(t2665*t2695 + t2695*t3562 + t2699*t3580 + t2658*t3590) + t2091*(-1.*t2665*t2750 - 1.*t2750*t3562 - 1.*t2736*t3590 - 1.*t2699*t3626))*var2[5])*var2[12] + t2644*var2[13] + (t5933*var2[0] + (t3194*t5940 - 1.*t3138*t5949)*var2[1] + (t3138*t5940 + t3194*t5949)*var2[2] + (t3503*t6143 + t3530*t6152 + t3432*(t6031 + t6054 + t3453*t6152 + t3495*t6158 + t3443*t6163 + t3479*t6169) + t3443*(t6101 + t6116 - 1.*t3453*t6143 - 1.*t3432*t6163 - 1.*t3519*t6169 - 1.*t3495*t6187))*var2[3] + (t3299*t5984 + t3373*t6004 + t3243*(t5609 + t5670 + t3262*t6017 + t6031 + t6054 + t3255*t6067) + t3267*(t5750 + t5777 - 1.*t3339*t6067 - 1.*t3262*t6094 + t6101 + t6116))*var2[4] + (t2705*t5580 + t2781*t5594 + t1371*(t5609 + t5670 + t2665*t5803 + t2699*t5818 + t2695*t5825 + t2658*t5841) + t2091*(t5750 + t5777 - 1.*t2750*t5825 - 1.*t2736*t5841 - 1.*t2665*t5855 - 1.*t2699*t5865))*var2[5] + (0.15121*t5534 + 0.15121*t5561 + t2308*t5580 + t2419*t5594 + t1371*(t2028*t5601 + t5609 + t2179*t5632 + t2293*t5649 + t5670 + t1638*t5720) + t2091*(-1.*t2410*t5632 - 1.*t2364*t5720 - 1.*t2028*t5742 + t5750 - 1.*t2293*t5764 + t5777))*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t5086*var2[0] + (t3194*t5097 - 1.*t3138*t5109)*var2[1] + (t3138*t5097 + t3194*t5109)*var2[2] + (t3530*t5280 + t3432*(t5143 + t5169 + t3443*t5239 + t3479*t5262 + t3453*t5280 + t3495*t5295) + t3503*t5315 + t3443*(t5184 + t5202 - 1.*t3432*t5239 - 1.*t3519*t5262 - 1.*t3453*t5315 - 1.*t3495*t5335))*var2[3] + (t3373*t5168 + t3243*(t4504 + t4619 + t3255*t5136 + t5143 + t3262*t5155 + t5169) + t3299*t5200 + t3267*(t4674 + t4744 - 1.*t3339*t5136 + t5184 - 1.*t3262*t5192 + t5202))*var2[4] + (t2781*t4607 + t2705*t4743 + t1371*(t4504 + t4619 + t2658*t4939 + t2695*t4948 + t2665*t4954 + t2699*t4994) + t2091*(t4674 + t4744 - 1.*t2736*t4939 - 1.*t2750*t4948 - 1.*t2665*t5019 - 1.*t2699*t5028))*var2[5] + (0.15121*t4340 + 0.15121*t4357 + t2419*t4607 + t1371*(t1638*t4486 + t4504 + t2179*t4531 + t2028*t4587 + t4619 + t2293*t4649) + t2308*t4743 + t2091*(-1.*t2364*t4486 - 1.*t2410*t4531 + t4674 - 1.*t2028*t4730 + t4744 - 1.*t2293*t4753))*var2[12] + (-0.281209*t4268 + 0.038749*t4337 + t2567*t4552 + t2521*t4698 + t1314*t4838 + t1431*t4871 + 4.e-6*(-1.*t2567*t4576 - 1.*t2521*t4694 - 1.*t1275*t4838 - 1.*t1534*t4871) - 7.e-6*(t2567*t4563 + t2521*t4720 + t1355*t4838 + t1625*t4871) + 1.e-6*(t4361 - 7.000000000455e-6*t613))*var2[13])*var2[14] + t3035*var3[0] + t3234*var3[1] + t3224*var3[2] + t3537*var3[3] + t3383*var3[4] + t2791*var3[5] + t2436*var3[12] + t2644*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=-1.*t134*t2814*t3138 + t344*t6426 + t2830*t6432 + t2843*t6456 + t2859*t6475 + t2894*t6539 + t2919*t6559 + t2946*t6586 - 0.80315*(t1609*t6539 + t1417*t6559 + t1507*t6586) - 0.038924*(t1973*t6539 + t1756*t6559 + t1780*t6586) + 0.148705*(t6539*t670 + t6559*t751 + t6586*t974) + var1[1] + t3432*var2[0] + t6496*var2[1] + t6486*var2[2] + t6632*var2[3] + ((-1.*t3138*t3243 - 1.*t3194*t3519)*var2[1] + t6496*var2[2])*var2[3] + t6521*var2[4] + (t3519*var2[0] - 1.*t3138*t5479*var2[1] + t3194*t5479*var2[2] + (t3443*(t3205*t3453 + t3035*t3495 + t3495*t5402 + t3205*t5426) + t3035*(-1.*t3453*t3479 - 1.*t3443*t3495 - 1.*t3479*t5426 - 1.*t3495*t5454) + t3205*t6624 + t3479*t6630)*var2[3])*var2[4] + t6406*var2[5] + (t134*t4102*var2[0] + (t3194*t3339 + t2821*t3138*t4102)*var2[1] + (t3138*t3339 - 1.*t2821*t3194*t4102)*var2[2] + (t134*t4003*t6624 + t134*t4048*t6630 + t3035*(-1.*t134*t3453*t4048 + t2821*t3495*t4048 - 1.*t134*t3443*t4069 + t2821*t3479*t4069 + t6833 + t6836) + t3443*(t134*t3453*t4003 - 1.*t2821*t3495*t4003 + t134*t3035*t4069 - 1.*t2821*t3205*t4069 + t6859 + t6866))*var2[3] + (t3032*t6502 + t3255*t6515 + t3187*(-1.*t3262*t4048 - 1.*t3255*t4069 + t6833 + t6836) + t3267*(t3262*t4003 + t3032*t4069 + t6859 + t6866))*var2[4])*var2[5] + t6269*var2[12] + (t134*t3867*var2[0] + (t3194*t3758 + t2821*t3138*t3867)*var2[1] + (t3138*t3758 - 1.*t2821*t3194*t3867)*var2[2] + (t134*t3682*t6624 + t134*t3795*t6630 + t3035*(-1.*t134*t3453*t3795 + t2821*t3495*t3795 - 1.*t134*t3443*t3819 + t2821*t3479*t3819 + t6728 + t6739) + t3443*(t134*t3453*t3682 - 1.*t2821*t3495*t3682 + t134*t3035*t3819 - 1.*t2821*t3205*t3819 + t6748 + t6758))*var2[3] + (t3710*t6502 + t3767*t6515 + t3187*(-1.*t3262*t3795 - 1.*t3255*t3819 + t6728 + t6739) + t3267*(t3262*t3682 + t3032*t3819 + t6748 + t6758))*var2[4] + (t2997*(-1.*t2665*t2695 - 1.*t2695*t3562 - 1.*t2699*t3580 - 1.*t2658*t3590) + t2091*(t2665*t3006 + t3006*t3562 + t3024*t3590 + t2699*t3656))*var2[5])*var2[12] + t6340*var2[13] + (t6143*var2[0] + (t3194*t5984 - 1.*t3138*t6187)*var2[1] + (t3138*t5984 + t3194*t6187)*var2[2] + (t5933*t6624 + t6152*t6630 + t3035*(-1.*t3453*t6152 - 1.*t3495*t6158 - 1.*t3443*t6163 - 1.*t3479*t6169 + t7288 + t7290) + t3443*(t3453*t5933 + t3495*t5949 + t3035*t6163 + t3205*t6169 + t7304 + t7307))*var2[3] + (t5940*t6502 + t6004*t6515 + t3187*(-1.*t3262*t6017 - 1.*t3255*t6067 + t7220 + t7224 + t7288 + t7290) + t3267*(t3262*t5928 + t3032*t6067 + t7230 + t7235 + t7304 + t7307))*var2[4] + (t5885*t6369 + t5594*t6402 + t2997*(-1.*t2665*t5803 - 1.*t2699*t5818 - 1.*t2695*t5825 - 1.*t2658*t5841 + t7220 + t7224) + t2091*(t3006*t5825 + t3024*t5841 + t2699*t5901 + t2665*t5923 + t7230 + t7235))*var2[5] + (0.15121*t5742 + 0.15121*t5764 + t5885*t6241 + t5594*t6263 + t2997*(-1.*t2028*t5601 - 1.*t2179*t5632 - 1.*t2293*t5649 - 1.*t1638*t5720 + t7220 + t7224) + t2091*(t2293*t5534 + t2028*t5561 + t1243*t5720 + t7230 + t7235 + t5632*t995))*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t5315*var2[0] + (t3194*t5200 - 1.*t3138*t5335)*var2[1] + (t3138*t5200 + t3194*t5335)*var2[2] + (t5086*t6624 + t5280*t6630 + t3035*(-1.*t3443*t5239 - 1.*t3479*t5262 - 1.*t3453*t5280 - 1.*t3495*t5295 + t7145 + t7147) + t3443*(t3453*t5086 + t3495*t5109 + t3035*t5239 + t3205*t5262 + t7153 + t7157))*var2[3] + (t5097*t6502 + t5168*t6515 + t3187*(-1.*t3255*t5136 - 1.*t3262*t5155 + t6964 + t6972 + t7145 + t7147) + t3267*(t3262*t5079 + t3032*t5136 + t6979 + t6990 + t7153 + t7157))*var2[4] + (t5050*t6369 + t4607*t6402 + t2997*(-1.*t2658*t4939 - 1.*t2695*t4948 - 1.*t2665*t4954 - 1.*t2699*t4994 + t6964 + t6972) + t2091*(t3024*t4939 + t3006*t4948 + t2699*t5059 + t2665*t5068 + t6979 + t6990))*var2[5] + (0.15121*t4730 + 0.15121*t4753 + t5050*t6241 + t4607*t6263 + t2997*(-1.*t1638*t4486 - 1.*t2179*t4531 - 1.*t2028*t4587 - 1.*t2293*t4649 + t6964 + t6972) + t2091*(t2028*t4340 + t2293*t4357 + t1243*t4486 + t6979 + t6990 + t4531*t995))*var2[12] + (-0.281209*t4694 + 0.038749*t4720 + 1.e-6*(t4252 + 4.00000000026e-6*t613) + t4552*t6295 + t4291*t6322 + t1431*t7051 - 7.e-6*(t4563*t6295 + t4337*t6322 + t688*t7033 + t1625*t7051) + t7033*t781 + 4.e-6*(-1.*t4576*t6295 - 1.*t4268*t6322 - 1.*t1534*t7051 - 1.*t7033*t985))*var2[13])*var2[14] + t3432*var3[0] + t6496*var3[1] + t6486*var3[2] + t6632*var3[3] + t6521*var3[4] + t6406*var3[5] + t6269*var3[12] + t6340*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=t134*t2814*t3194 + t344*t7498 + t2830*t7509 + t2843*t7523 + t2859*t7532 + t2894*t7586 + t2919*t7594 + t2946*t7601 - 0.80315*(t1609*t7586 + t1417*t7594 + t1507*t7601) - 0.038924*(t1973*t7586 + t1756*t7594 + t1780*t7601) + 0.148705*(t670*t7586 + t751*t7594 + t7601*t974) + var1[2] + t3443*var2[0] + t7548*var2[1] + t7541*var2[2] + t7657*var2[3] + ((-1.*t3138*t3267 - 1.*t3194*t3479)*var2[1] + t7548*var2[2])*var2[3] + t7573*var2[4] + (t3479*var2[0] - 1.*t3138*t5454*var2[1] + t3194*t5454*var2[2] + (t3432*(-1.*t3205*t3453 - 1.*t3035*t3495 - 1.*t3495*t5402 - 1.*t3205*t5426) + t3035*(t3432*t3495 + t3453*t3519 + t3519*t5426 + t3495*t5479) + t3519*t7635 + t3205*t7651)*var2[3])*var2[4] + t7487*var2[5] + (t134*t4048*var2[0] + (t3194*t3255 + t2821*t3138*t4048)*var2[1] + (t3138*t3255 - 1.*t2821*t3194*t4048)*var2[2] + (t134*t4102*t7635 + t134*t4003*t7651 + t3432*(-1.*t134*t3453*t4003 + t2821*t3495*t4003 - 1.*t134*t3035*t4069 + t2821*t3205*t4069 + t7817 + t7820) + t3035*(t134*t3432*t4069 - 1.*t2821*t3519*t4069 + t134*t3453*t4102 - 1.*t2821*t3495*t4102 + t7825 + t7828))*var2[3] + (t3339*t7555 + t3032*t7566 + t3243*(-1.*t3262*t4003 - 1.*t3032*t4069 + t7817 + t7820) + t3187*(t3339*t4069 + t3262*t4102 + t7825 + t7828))*var2[4])*var2[5] + t7417*var2[12] + (t134*t3795*var2[0] + (t3194*t3767 + t2821*t3138*t3795)*var2[1] + (t3138*t3767 - 1.*t2821*t3194*t3795)*var2[2] + (t134*t3867*t7635 + t134*t3682*t7651 + t3432*(-1.*t134*t3453*t3682 + t2821*t3495*t3682 - 1.*t134*t3035*t3819 + t2821*t3205*t3819 + t7738 + t7740) + t3035*(t134*t3432*t3819 - 1.*t2821*t3519*t3819 + t134*t3453*t3867 - 1.*t2821*t3495*t3867 + t7746 + t7750))*var2[3] + (t3758*t7555 + t3710*t7566 + t3243*(-1.*t3262*t3682 - 1.*t3032*t3819 + t7738 + t7740) + t3187*(t3339*t3819 + t3262*t3867 + t7746 + t7750))*var2[4] + (t2997*(t2665*t2750 + t2750*t3562 + t2736*t3590 + t2699*t3626) + t1371*(-1.*t2665*t3006 - 1.*t3006*t3562 - 1.*t3024*t3590 - 1.*t2699*t3656))*var2[5])*var2[12] + t7464*var2[13] + (t6152*var2[0] + (t3194*t6004 - 1.*t3138*t6158)*var2[1] + (t3138*t6004 + t3194*t6158)*var2[2] + (t6143*t7635 + t5933*t7651 + t3432*(-1.*t3453*t5933 - 1.*t3495*t5949 - 1.*t3035*t6163 - 1.*t3205*t6169 + t8247 + t8248) + t3035*(t3453*t6143 + t3432*t6163 + t3519*t6169 + t3495*t6187 + t8254 + t8255))*var2[3] + (t5984*t7555 + t5940*t7566 + t3243*(-1.*t3262*t5928 - 1.*t3032*t6067 + t8179 + t8184 + t8247 + t8248) + t3187*(t3339*t6067 + t3262*t6094 + t8193 + t8200 + t8254 + t8255))*var2[4] + (t5580*t7472 + t5885*t7483 + t1371*(-1.*t3006*t5825 - 1.*t3024*t5841 - 1.*t2699*t5901 - 1.*t2665*t5923 + t8179 + t8184) + t2997*(t2750*t5825 + t2736*t5841 + t2665*t5855 + t2699*t5865 + t8193 + t8200))*var2[5] + (0.15121*t5601 + 0.15121*t5649 + t5580*t7395 + t5885*t7408 + t2997*(t2410*t5632 + t2364*t5720 + t2028*t5742 + t2293*t5764 + t8193 + t8200) + t1371*(-1.*t2293*t5534 - 1.*t2028*t5561 - 1.*t1243*t5720 + t8179 + t8184 - 1.*t5632*t995))*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t5280*var2[0] + (t3194*t5168 - 1.*t3138*t5295)*var2[1] + (t3138*t5168 + t3194*t5295)*var2[2] + (t5315*t7635 + t5086*t7651 + t3035*(t3432*t5239 + t3519*t5262 + t3453*t5315 + t3495*t5335 + t8100 + t8107) + t3432*(-1.*t3453*t5086 - 1.*t3495*t5109 - 1.*t3035*t5239 - 1.*t3205*t5262 + t8123 + t8130))*var2[3] + (t5200*t7555 + t5097*t7566 + t3187*(t3339*t5136 + t3262*t5192 + t7949 + t7955 + t8100 + t8107) + t3243*(-1.*t3262*t5079 - 1.*t3032*t5136 + t7963 + t7968 + t8123 + t8130))*var2[4] + (t4743*t7472 + t5050*t7483 + t2997*(t2736*t4939 + t2750*t4948 + t2665*t5019 + t2699*t5028 + t7949 + t7955) + t1371*(-1.*t3024*t4939 - 1.*t3006*t4948 - 1.*t2699*t5059 - 1.*t2665*t5068 + t7963 + t7968))*var2[5] + (0.15121*t4587 + 0.15121*t4649 + t4743*t7395 + t5050*t7408 + t2997*(t2364*t4486 + t2410*t4531 + t2028*t4730 + t2293*t4753 + t7949 + t7955) + t1371*(-1.*t2028*t4340 - 1.*t2293*t4357 - 1.*t1243*t4486 + t7963 + t7968 - 1.*t4531*t995))*var2[12] + (0.038749*t4563 - 0.281209*t4576 + 1.e-6*(7.e-6*t4364 + 4.e-6*t4372 + 6.5e-11*t613) + t4698*t7439 + t4291*t7449 + t781*t8003 + t1314*t8018 - 7.e-6*(t4720*t7439 + t4337*t7449 + t688*t8003 + t1355*t8018) + 4.e-6*(-1.*t4694*t7439 - 1.*t4268*t7449 - 1.*t1275*t8018 - 1.*t8003*t985))*var2[13])*var2[14] + t3443*var3[0] + t7548*var3[1] + t7541*var3[2] + t7657*var3[3] + t7573*var3[4] + t7487*var3[5] + t7417*var3[12] + t7464*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_TrotStance1.hh"

namespace TrotStance1
{

void ddh_RlFoot_TrotStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
