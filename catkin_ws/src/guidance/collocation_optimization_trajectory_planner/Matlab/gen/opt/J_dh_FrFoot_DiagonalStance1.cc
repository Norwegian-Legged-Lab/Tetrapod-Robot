/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:09:31 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t414;
  double t705;
  double t708;
  double t963;
  double t330;
  double t1384;
  double t817;
  double t1051;
  double t1160;
  double t1724;
  double t1742;
  double t1472;
  double t1495;
  double t1549;
  double t1550;
  double t1560;
  double t1811;
  double t1825;
  double t1947;
  double t2148;
  double t363;
  double t367;
  double t411;
  double t1338;
  double t1588;
  double t2013;
  double t2014;
  double t156;
  double t2149;
  double t2183;
  double t2190;
  double t2260;
  double t2334;
  double t2338;
  double t153;
  double t2368;
  double t2379;
  double t2384;
  double t2146;
  double t2342;
  double t2346;
  double t2394;
  double t2435;
  double t2354;
  double t2400;
  double t2424;
  double t124;
  double t2466;
  double t2480;
  double t2483;
  double t2504;
  double t2505;
  double t2508;
  double t2514;
  double t2516;
  double t2574;
  double t2672;
  double t2673;
  double t2706;
  double t2831;
  double t2837;
  double t2843;
  double t2920;
  double t2946;
  double t2949;
  double t2953;
  double t2957;
  double t2963;
  double t2970;
  double t2971;
  double t2976;
  double t2988;
  double t3013;
  double t3025;
  double t3029;
  double t3072;
  double t3136;
  double t3148;
  double t3187;
  double t3210;
  double t3260;
  double t3261;
  double t3263;
  double t3346;
  double t3350;
  double t3351;
  double t3359;
  double t3400;
  double t3416;
  double t3417;
  double t3437;
  double t3447;
  double t3453;
  double t3670;
  double t3672;
  double t3684;
  double t3701;
  double t3718;
  double t3722;
  double t3724;
  double t3741;
  double t3760;
  double t3770;
  double t3771;
  double t3776;
  double t3780;
  double t3782;
  double t3783;
  double t3786;
  double t3788;
  double t3808;
  double t3823;
  double t3856;
  double t3860;
  double t3874;
  double t3879;
  double t3881;
  double t3887;
  double t3908;
  double t3909;
  double t3912;
  double t3914;
  double t3916;
  double t3917;
  double t3924;
  double t3928;
  double t3935;
  double t3347;
  double t3363;
  double t3371;
  double t3387;
  double t3433;
  double t3471;
  double t3475;
  double t3482;
  double t3505;
  double t3520;
  double t3530;
  double t3541;
  double t3561;
  double t3589;
  double t3608;
  double t3622;
  double t3626;
  double t3630;
  double t3652;
  double t3732;
  double t3774;
  double t3795;
  double t3799;
  double t3842;
  double t3913;
  double t3936;
  double t3937;
  double t3939;
  double t3943;
  double t3946;
  double t3953;
  double t3959;
  double t3960;
  double t3963;
  double t4016;
  double t4021;
  double t2950;
  double t2977;
  double t3037;
  double t3045;
  double t3189;
  double t3269;
  double t3288;
  double t3298;
  double t3304;
  double t3307;
  double t3308;
  double t3315;
  double t3321;
  double t3992;
  double t3999;
  double t4011;
  double t3977;
  double t3978;
  double t3981;
  double t4071;
  double t4113;
  double t4114;
  double t3800;
  double t3965;
  double t3973;
  double t4115;
  double t3054;
  double t3330;
  double t3332;
  double t4035;
  double t4125;
  double t4127;
  double t4132;
  double t4147;
  double t4304;
  double t4307;
  double t4309;
  double t4343;
  double t4267;
  double t4276;
  double t4279;
  double t4116;
  double t4118;
  double t4122;
  double t4135;
  double t4373;
  double t4388;
  double t4400;
  double t4507;
  double t4441;
  double t4281;
  double t4432;
  double t4444;
  double t4446;
  double t4476;
  double t4478;
  double t4534;
  double t4539;
  double t4549;
  double t4557;
  double t4559;
  double t4137;
  double t4141;
  double t4142;
  double t4282;
  double t4291;
  double t4295;
  double t4734;
  double t4737;
  double t4744;
  double t4745;
  double t4754;
  double t4758;
  double t4828;
  double t4833;
  double t4835;
  double t4840;
  double t4842;
  double t4844;
  double t4850;
  double t4865;
  double t4871;
  double t4883;
  double t4776;
  double t4778;
  double t4783;
  double t4764;
  double t4717;
  double t4720;
  double t4728;
  double t4510;
  double t4514;
  double t4521;
  double t4969;
  double t4970;
  double t4972;
  double t4937;
  double t4938;
  double t4939;
  double t4941;
  double t4942;
  double t4943;
  double t4928;
  double t4930;
  double t4596;
  double t4615;
  double t4629;
  double t4933;
  double t4944;
  double t4949;
  double t4953;
  double t4982;
  double t4999;
  double t5007;
  double t5018;
  double t5033;
  double t5174;
  double t5189;
  double t5195;
  double t5207;
  double t5227;
  double t5232;
  double t5233;
  double t5236;
  double t5262;
  double t5266;
  double t5268;
  double t5273;
  double t5281;
  double t5285;
  double t5298;
  double t5299;
  double t5300;
  double t5305;
  double t5319;
  double t5332;
  double t5397;
  double t5399;
  double t5401;
  double t5414;
  double t5422;
  double t5424;
  double t5291;
  double t5336;
  double t5339;
  double t5341;
  double t5342;
  double t5347;
  double t5365;
  double t5374;
  double t5375;
  double t5352;
  double t5353;
  double t5489;
  double t5383;
  double t5460;
  double t5573;
  double t5583;
  double t5588;
  double t5589;
  double t5594;
  double t5595;
  double t5596;
  double t5598;
  double t5249;
  double t5252;
  double t5254;
  double t5208;
  double t5237;
  double t5241;
  double t5433;
  double t5438;
  double t5439;
  double t5412;
  double t5427;
  double t5428;
  double t5459;
  double t5673;
  double t5676;
  double t5680;
  double t5357;
  double t5661;
  double t5662;
  double t5668;
  double t5709;
  double t5712;
  double t5716;
  double t5721;
  double t5722;
  double t5724;
  double t5635;
  double t5636;
  double t5638;
  double t5617;
  double t5620;
  double t5628;
  double t5609;
  double t5610;
  double t5629;
  double t5646;
  double t5649;
  double t5766;
  double t5773;
  double t5780;
  double t5782;
  double t5784;
  double t5785;
  double t5737;
  double t5741;
  double t5744;
  double t5703;
  double t5704;
  double t5707;
  double t5696;
  double t5727;
  double t5848;
  double t5853;
  double t5854;
  double t5735;
  double t5755;
  double t5828;
  double t5831;
  double t5840;
  double t5889;
  double t5893;
  double t5894;
  double t5898;
  double t5899;
  double t5908;
  double t5952;
  double t5957;
  double t5958;
  double t5960;
  double t5962;
  double t5970;
  double t5981;
  double t5983;
  double t5959;
  double t5971;
  double t5985;
  double t5986;
  double t5999;
  double t6005;
  double t6006;
  double t6009;
  double t6032;
  double t6033;
  double t6035;
  double t6037;
  double t6040;
  double t6043;
  double t6057;
  double t6059;
  double t6034;
  double t6042;
  double t6061;
  double t6064;
  double t6068;
  double t6074;
  double t6077;
  double t6080;
  double t5466;
  double t5467;
  double t5475;
  double t6105;
  double t6106;
  double t6113;
  double t6114;
  double t5987;
  double t6012;
  double t6014;
  double t6025;
  double t6026;
  double t6027;
  double t6093;
  double t6094;
  double t6095;
  double t6097;
  double t6100;
  double t5555;
  double t5562;
  double t5563;
  double t5565;
  double t6158;
  double t6165;
  double t6170;
  double t6130;
  double t6199;
  double t6200;
  double t6204;
  double t6205;
  double t6207;
  double t6210;
  double t6212;
  double t6223;
  double t6224;
  double t6226;
  double t6218;
  double t6220;
  double t6221;
  double t6157;
  double t6166;
  double t6172;
  double t6179;
  double t6182;
  double t6183;
  double t6185;
  double t6186;
  double t6271;
  double t6273;
  double t6275;
  double t6258;
  double t6262;
  double t6269;
  double t6247;
  double t6248;
  double t6249;
  double t6251;
  double t6270;
  double t6278;
  double t6280;
  double t6287;
  double t6290;
  double t6291;
  double t6301;
  double t6306;
  double t6311;
  double t6087;
  double t6089;
  double t6091;
  double t6066;
  double t6082;
  double t6083;
  double t6116;
  double t6324;
  double t6334;
  double t6344;
  double t6357;
  double t6359;
  double t6362;
  double t6401;
  double t6403;
  double t6407;
  double t6355;
  double t6419;
  double t6420;
  double t6422;
  double t6413;
  double t6415;
  double t6437;
  double t6439;
  double t6440;
  double t6443;
  double t6445;
  double t6456;
  double t6476;
  double t6478;
  double t6483;
  double t2785;
  double t2794;
  double t5165;
  double t5166;
  double t5167;
  double t5488;
  double t5491;
  double t5498;
  double t5504;
  double t6637;
  double t6638;
  double t6641;
  double t6645;
  double t4188;
  double t4193;
  double t4206;
  double t6545;
  double t6551;
  double t6552;
  double t4052;
  double t4054;
  double t4060;
  double t2863;
  double t6778;
  double t6811;
  double t6870;
  double t6872;
  double t6784;
  double t6790;
  double t6796;
  double t6889;
  double t6890;
  double t6814;
  double t6815;
  double t6817;
  double t6882;
  double t6883;
  double t6886;
  double t6900;
  double t6903;
  double t6904;
  double t7024;
  double t7040;
  double t7057;
  double t7060;
  double t7153;
  double t7180;
  double t5922;
  double t5923;
  double t5929;
  double t7177;
  double t7154;
  double t5612;
  double t5653;
  double t5658;
  double t7309;
  double t7312;
  double t5869;
  double t5870;
  double t5883;
  double t7324;
  double t7328;
  double t7188;
  double t7189;
  double t7190;
  double t7432;
  double t7241;
  double t7242;
  double t7245;
  double t7252;
  double t7451;
  double t7487;
  double t7488;
  double t7500;
  double t7501;
  double t7502;
  double t7504;
  double t7512;
  double t7530;
  double t7535;
  double t7537;
  double t7519;
  double t7525;
  double t7526;
  double t6511;
  double t6519;
  double t6523;
  double t7431;
  double t7579;
  double t6253;
  double t6282;
  double t6283;
  double t7588;
  double t7596;
  double t6735;
  double t6736;
  double t7130;
  double t7132;
  double t7139;
  double t7202;
  double t7203;
  double t7204;
  double t7206;
  double t7672;
  double t7673;
  double t7674;
  double t7675;
  double t7739;
  double t7771;
  double t7834;
  double t7835;
  double t7741;
  double t7744;
  double t7745;
  double t7850;
  double t7851;
  double t7775;
  double t7777;
  double t7778;
  double t7842;
  double t7843;
  double t7846;
  double t7855;
  double t7857;
  double t7858;
  double t7974;
  double t7977;
  double t7988;
  double t7990;
  double t8055;
  double t8087;
  double t8086;
  double t8056;
  double t8174;
  double t8179;
  double t8183;
  double t8190;
  double t8059;
  double t8063;
  double t8064;
  double t8093;
  double t8094;
  double t8095;
  double t8122;
  double t8123;
  double t8126;
  double t8127;
  double t8139;
  double t8140;
  double t8143;
  double t8146;
  double t8258;
  double t8269;
  double t8353;
  double t8354;
  double t8355;
  double t8356;
  double t8357;
  double t8358;
  double t8359;
  double t8338;
  double t8341;
  double t8342;
  double t8344;
  double t8345;
  double t8346;
  double t8348;
  double t8331;
  double t8332;
  double t8333;
  double t8335;
  double t8320;
  double t8321;
  double t8324;
  double t8326;
  double t8271;
  double t8257;
  double t8380;
  double t8382;
  double t8395;
  double t8400;
  double t7708;
  double t7711;
  double t7713;
  t414 = Cos(var1[11]);
  t705 = -1.*t414;
  t708 = 1. + t705;
  t963 = Sin(var1[11]);
  t330 = Cos(var1[10]);
  t1384 = Sin(var1[10]);
  t817 = -1.7408e-8*t708;
  t1051 = -3.999964e-6*t963;
  t1160 = t817 + t1051;
  t1724 = -1.*t330;
  t1742 = 1. + t1724;
  t1472 = -1.000000000016*t708;
  t1495 = 1. + t1472;
  t1549 = 0.999991*t1495;
  t1550 = 0.004352*t963;
  t1560 = t1549 + t1550;
  t1811 = -0.004352*t414;
  t1825 = 0.999991*t963;
  t1947 = t1811 + t1825;
  t2148 = Sin(var1[9]);
  t363 = -1. + t330;
  t367 = 1.6e-11*t363;
  t411 = 1. + t367;
  t1338 = t411*t1160;
  t1588 = -4.e-6*t1384*t1560;
  t2013 = 4.e-6*t1742*t1947;
  t2014 = 0. + t1338 + t1588 + t2013;
  t156 = Cos(var1[9]);
  t2149 = 4.e-6*t1384*t1160;
  t2183 = -1.000000000016*t1742;
  t2190 = 1. + t2183;
  t2260 = t2190*t1560;
  t2334 = -1.*t1384*t1947;
  t2338 = 0. + t2149 + t2260 + t2334;
  t153 = Cos(var1[5]);
  t2368 = -1.*t2148*t2014;
  t2379 = t156*t2338;
  t2384 = 0. + t2368 + t2379;
  t2146 = t156*t2014;
  t2342 = t2148*t2338;
  t2346 = 0. + t2146 + t2342;
  t2394 = Sin(var1[5]);
  t2435 = Cos(var1[3]);
  t2354 = t153*t2346;
  t2400 = t2384*t2394;
  t2424 = 0. + t2354 + t2400;
  t124 = Sin(var1[3]);
  t2466 = Cos(var1[4]);
  t2480 = 4.e-6*t1742*t1160;
  t2483 = t1384*t1560;
  t2504 = t330*t1947;
  t2505 = 0. + t2480 + t2483 + t2504;
  t2508 = t2466*t2505;
  t2514 = Sin(var1[4]);
  t2516 = t153*t2384;
  t2574 = -1.*t2346*t2394;
  t2672 = 0. + t2516 + t2574;
  t2673 = -1.*t2514*t2672;
  t2706 = 0. + t2508 + t2673;
  t2831 = -1.*t2505*t2514;
  t2837 = -1.*t2466*t2672;
  t2843 = t2831 + t2837;
  t2920 = 0.004352*t1495;
  t2946 = -0.9999910000159999*t963;
  t2949 = t2920 + t2946;
  t2953 = 1.6e-11*t708;
  t2957 = -1. + t2953;
  t2963 = 4.e-6*t2957;
  t2970 = 3.999964e-6*t708;
  t2971 = -1.7408e-8*t963;
  t2976 = t2963 + t2970 + t2971;
  t2988 = -1. + t414;
  t3013 = 1.6e-11*t2988;
  t3025 = 0.999991*t414;
  t3029 = t3013 + t3025 + t1550;
  t3072 = -4.e-6*t1384*t2949;
  t3136 = t411*t2976;
  t3148 = 4.e-6*t1742*t3029;
  t3187 = 0. + t3072 + t3136 + t3148;
  t3210 = t2190*t2949;
  t3260 = 4.e-6*t1384*t2976;
  t3261 = -1.*t1384*t3029;
  t3263 = 0. + t3210 + t3260 + t3261;
  t3346 = -1. + t2953 + t3013;
  t3350 = 4.e-6*t2988;
  t3351 = -4.e-6*t414;
  t3359 = t3350 + t3351;
  t3400 = t411*t3346;
  t3416 = 4.e-6*t1742*t3359;
  t3417 = t3400 + t3416;
  t3437 = 4.e-6*t3346*t1384;
  t3447 = -1.*t3359*t1384;
  t3453 = t3437 + t3447;
  t3670 = -1.26e-8*var1[11];
  t3672 = 1. + t3013;
  t3684 = -0.14871*t3672;
  t3701 = -1.64779999997447e-7*t708;
  t3718 = -1.59556e-7*t2988;
  t3722 = -1.199987999968e-6*t963;
  t3724 = t3670 + t3684 + t3701 + t3718 + t3722;
  t3741 = 0.803147*t1495;
  t3760 = 0.50315000001605*t708;
  t3770 = 0.00130540515936178*t963;
  t3771 = t3741 + t3760 + t3770;
  t3776 = -5.04e-14*var1[11];
  t3780 = -0.03988959484*t708;
  t3782 = 6.38224e-13*t2988;
  t3783 = -0.041195*t414;
  t3786 = 0.299996999992*t963;
  t3788 = t3776 + t3780 + t3782 + t3783 + t3786;
  t3808 = -1.*t156;
  t3823 = 1. + t3808;
  t3856 = -0.15121*t2148;
  t3860 = -1.2484e-7*var1[10];
  t3874 = 2.479936e-18*t1742;
  t3879 = -1.54996e-7*t363;
  t3881 = 1.124840000016e-6*t1384;
  t3887 = t411*t3724;
  t3908 = -4.e-6*t1384*t3771;
  t3909 = 4.e-6*t1742*t3788;
  t3912 = t3860 + t3874 + t3879 + t3881 + t3887 + t3908 + t3909;
  t3914 = 0.281210000008499*t1742;
  t3916 = -0.03874900000062*t1384;
  t3917 = 4.e-6*t1384*t3724;
  t3924 = t2190*t3771;
  t3928 = -1.*t1384*t3788;
  t3935 = t3914 + t3916 + t3917 + t3924 + t3928;
  t3347 = 4.e-6*t1742*t3346;
  t3363 = t330*t3359;
  t3371 = t3347 + t3363;
  t3387 = t3371*t2466;
  t3433 = -1.*t3417*t2148;
  t3471 = t156*t3453;
  t3475 = t3433 + t3471;
  t3482 = t153*t3475;
  t3505 = t156*t3417;
  t3520 = t2148*t3453;
  t3530 = t3505 + t3520;
  t3541 = -1.*t3530*t2394;
  t3561 = t3482 + t3541;
  t3589 = -1.*t2514*t3561;
  t3608 = t3387 + t3589;
  t3622 = -4.9936e-13*var1[10];
  t3626 = -0.038749*t1742;
  t3630 = 6.19984e-13*t363;
  t3652 = -0.281210000004*t1384;
  t3732 = 4.e-6*t1742*t3724;
  t3774 = t1384*t3771;
  t3795 = t330*t3788;
  t3799 = 0. + t3622 + t3626 + t3630 + t3652 + t3732 + t3774 + t3795;
  t3842 = 0.15121*t3823;
  t3913 = -1.*t2148*t3912;
  t3936 = t156*t3935;
  t3937 = t3842 + t3856 + t3913 + t3936;
  t3939 = t153*t3937;
  t3943 = -0.15121*t3823;
  t3946 = t156*t3912;
  t3953 = t2148*t3935;
  t3959 = t3943 + t3856 + t3946 + t3953;
  t3960 = -1.*t3959*t2394;
  t3963 = 0. + t3939 + t3960;
  t4016 = t2466*t3799;
  t4021 = -1.*t2514*t3963;
  t2950 = t1384*t2949;
  t2977 = 4.e-6*t1742*t2976;
  t3037 = t330*t3029;
  t3045 = 0. + t2950 + t2977 + t3037;
  t3189 = -1.*t2148*t3187;
  t3269 = t156*t3263;
  t3288 = 0. + t3189 + t3269;
  t3298 = t153*t3288;
  t3304 = t156*t3187;
  t3307 = t2148*t3263;
  t3308 = 0. + t3304 + t3307;
  t3315 = -1.*t3308*t2394;
  t3321 = 0. + t3298 + t3315;
  t3992 = t3371*t2514;
  t3999 = t2466*t3561;
  t4011 = t3992 + t3999;
  t3977 = t3799*t2514;
  t3978 = t2466*t3963;
  t3981 = 0. + t3977 + t3978;
  t4071 = 0. + t4016 + t4021;
  t4113 = t2466*t3045;
  t4114 = -1.*t2514*t3321;
  t3800 = -1.*t3799*t2514;
  t3965 = -1.*t2466*t3963;
  t3973 = t3800 + t3965;
  t4115 = t4113 + t4114;
  t3054 = t3045*t2514;
  t3330 = t2466*t3321;
  t3332 = 0. + t3054 + t3330;
  t4035 = t4016 + t4021;
  t4125 = t153*t3959;
  t4127 = t3937*t2394;
  t4132 = 0. + t4125 + t4127;
  t4147 = 0. + t4113 + t4114;
  t4304 = -1.*t153*t2346;
  t4307 = -1.*t2384*t2394;
  t4309 = t4304 + t4307;
  t4343 = t2516 + t2574;
  t4267 = t153*t3308;
  t4276 = t3288*t2394;
  t4279 = 0. + t4267 + t4276;
  t4116 = t153*t3530;
  t4118 = t3475*t2394;
  t4122 = t4116 + t4118;
  t4135 = t4122*t4132;
  t4373 = -1.*t153*t3959;
  t4388 = -1.*t3937*t2394;
  t4400 = t4373 + t4388;
  t4507 = t3298 + t3315;
  t4441 = t3939 + t3960;
  t4281 = -1.*t4279*t4132;
  t4432 = t3561*t4132;
  t4444 = t4122*t4441;
  t4446 = -1.*t153*t3530;
  t4476 = -1.*t3475*t2394;
  t4478 = t4446 + t4476;
  t4534 = -1.*t4507*t4132;
  t4539 = -1.*t4279*t4441;
  t4549 = -1.*t153*t3308;
  t4557 = -1.*t3288*t2394;
  t4559 = t4549 + t4557;
  t4137 = t4011*t3981;
  t4141 = t3608*t4071;
  t4142 = t4135 + t4137 + t4141;
  t4282 = -1.*t3332*t3981;
  t4291 = -1.*t4147*t4071;
  t4295 = t4281 + t4282 + t4291;
  t4734 = -0.15121*t156;
  t4737 = t4734 + t3856 + t3913 + t3936;
  t4744 = 0.15121*t2148;
  t4745 = -1.*t156*t3912;
  t4754 = -1.*t2148*t3935;
  t4758 = t4734 + t4744 + t4745 + t4754;
  t4828 = -1.*t156*t2014;
  t4833 = -1.*t2148*t2338;
  t4835 = t4828 + t4833;
  t4840 = t153*t4835;
  t4842 = t2368 + t2379;
  t4844 = -1.*t4842*t2394;
  t4850 = t4840 + t4844;
  t4865 = t153*t4842;
  t4871 = t4835*t2394;
  t4883 = t4865 + t4871;
  t4776 = -1.*t156*t3417;
  t4778 = -1.*t2148*t3453;
  t4783 = t4776 + t4778;
  t4764 = t3189 + t3269;
  t4717 = -1.*t156*t3187;
  t4720 = -1.*t2148*t3263;
  t4728 = t4717 + t4720;
  t4510 = t3371*t3799;
  t4514 = t3561*t3963;
  t4521 = t4510 + t4135 + t4514;
  t4969 = t153*t4764;
  t4970 = t4728*t2394;
  t4972 = t4969 + t4970;
  t4937 = t153*t4758;
  t4938 = -1.*t4737*t2394;
  t4939 = t4937 + t4938;
  t4941 = t153*t4737;
  t4942 = t4758*t2394;
  t4943 = t4941 + t4942;
  t4928 = t4783*t2394;
  t4930 = t3482 + t4928;
  t4596 = -1.*t3045*t3799;
  t4615 = -1.*t3321*t3963;
  t4629 = t4596 + t4281 + t4615;
  t4933 = t4930*t4132;
  t4944 = t4122*t4943;
  t4949 = t153*t4783;
  t4953 = t4949 + t4476;
  t4982 = -1.*t4972*t4132;
  t4999 = -1.*t4279*t4943;
  t5007 = t153*t4728;
  t5018 = -1.*t4764*t2394;
  t5033 = t5007 + t5018;
  t5174 = -1.000000000016*t1384*t2949;
  t5189 = 4.e-6*t330*t2976;
  t5195 = -1.*t330*t3029;
  t5207 = t5174 + t5189 + t5195;
  t5227 = -4.e-6*t330*t2949;
  t5232 = -1.6e-11*t1384*t2976;
  t5233 = 4.e-6*t1384*t3029;
  t5236 = t5227 + t5232 + t5233;
  t5262 = -0.03874900000062*t330;
  t5266 = 0.281210000008499*t1384;
  t5268 = 4.e-6*t330*t3724;
  t5273 = -1.000000000016*t1384*t3771;
  t5281 = -1.*t330*t3788;
  t5285 = t5262 + t5266 + t5268 + t5273 + t5281;
  t5298 = 1.124840000016e-6*t330;
  t5299 = 1.5499600000248e-7*t1384;
  t5300 = -1.6e-11*t1384*t3724;
  t5305 = -4.e-6*t330*t3771;
  t5319 = 4.e-6*t1384*t3788;
  t5332 = -1.2484e-7 + t5298 + t5299 + t5300 + t5305 + t5319;
  t5397 = 4.e-6*t330*t3346;
  t5399 = -1.*t330*t3359;
  t5401 = t5397 + t5399;
  t5414 = -1.6e-11*t3346*t1384;
  t5422 = 4.e-6*t3359*t1384;
  t5424 = t5414 + t5422;
  t5291 = t2148*t5285;
  t5336 = t156*t5332;
  t5339 = t5291 + t5336;
  t5341 = t156*t5285;
  t5342 = -1.*t2148*t5332;
  t5347 = t5341 + t5342;
  t5365 = -0.281210000004*t330;
  t5374 = t330*t3771;
  t5375 = -4.9936e-13 + t5365 + t3916 + t3917 + t5374 + t3928;
  t5352 = t330*t2949;
  t5353 = t5352 + t3260 + t3261;
  t5489 = t3622 + t3626 + t3630 + t3652 + t3732 + t3774 + t3795;
  t5383 = -1.*t3045*t5375;
  t5460 = t3371*t5375;
  t5573 = 4.e-6*t330*t1160;
  t5583 = -1.000000000016*t1384*t1560;
  t5588 = -1.*t330*t1947;
  t5589 = t5573 + t5583 + t5588;
  t5594 = -1.6e-11*t1384*t1160;
  t5595 = -4.e-6*t330*t1560;
  t5596 = 4.e-6*t1384*t1947;
  t5598 = t5594 + t5595 + t5596;
  t5249 = t2148*t5207;
  t5252 = t156*t5236;
  t5254 = t5249 + t5252;
  t5208 = t156*t5207;
  t5237 = -1.*t2148*t5236;
  t5241 = t5208 + t5237;
  t5433 = t5401*t2148;
  t5438 = t156*t5424;
  t5439 = t5433 + t5438;
  t5412 = t156*t5401;
  t5427 = -1.*t2148*t5424;
  t5428 = t5412 + t5427;
  t5459 = t3453*t3799;
  t5673 = t153*t5439;
  t5676 = t5428*t2394;
  t5680 = t5673 + t5676;
  t5357 = -1.*t5353*t3799;
  t5661 = t153*t5254;
  t5662 = t5241*t2394;
  t5668 = t5661 + t5662;
  t5709 = t153*t5347;
  t5712 = -1.*t5339*t2394;
  t5716 = t5709 + t5712;
  t5721 = t153*t5339;
  t5722 = t5347*t2394;
  t5724 = t5721 + t5722;
  t5635 = t2148*t5589;
  t5636 = t156*t5598;
  t5638 = t5635 + t5636;
  t5617 = t156*t5589;
  t5620 = -1.*t2148*t5598;
  t5628 = t5617 + t5620;
  t5609 = t330*t1560;
  t5610 = t2149 + t5609 + t2334;
  t5629 = t153*t5628;
  t5646 = -1.*t5638*t2394;
  t5649 = t5629 + t5646;
  t5766 = t153*t5638;
  t5773 = t5628*t2394;
  t5780 = t5766 + t5773;
  t5782 = t2466*t5610;
  t5784 = -1.*t2514*t5649;
  t5785 = t5782 + t5784;
  t5737 = t153*t5241;
  t5741 = -1.*t5254*t2394;
  t5744 = t5737 + t5741;
  t5703 = t153*t5428;
  t5704 = -1.*t5439*t2394;
  t5707 = t5703 + t5704;
  t5696 = t5680*t4132;
  t5727 = t4122*t5724;
  t5848 = t3453*t2514;
  t5853 = t2466*t5707;
  t5854 = t5848 + t5853;
  t5735 = -1.*t5668*t4132;
  t5755 = -1.*t4279*t5724;
  t5828 = t5353*t2514;
  t5831 = t2466*t5744;
  t5840 = t5828 + t5831;
  t5889 = t5375*t2514;
  t5893 = t2466*t5716;
  t5894 = t5889 + t5893;
  t5898 = t2466*t5375;
  t5899 = -1.*t2514*t5716;
  t5908 = t5898 + t5899;
  t5952 = 0.00130540515936178*t414;
  t5957 = -0.2999969999968001*t963;
  t5958 = t5952 + t5957;
  t5960 = -1.199987999968e-6*t414;
  t5962 = -5.2216206374471e-9*t963;
  t5970 = -1.26e-8 + t5960 + t5962;
  t5981 = 0.299996999992*t414;
  t5983 = -5.04e-14 + t5981 + t3770;
  t5959 = -4.e-6*t1384*t5958;
  t5971 = t411*t5970;
  t5985 = 4.e-6*t1742*t5983;
  t5986 = t5959 + t5971 + t5985;
  t5999 = t2190*t5958;
  t6005 = 4.e-6*t1384*t5970;
  t6006 = -1.*t1384*t5983;
  t6009 = t5999 + t6005 + t6006;
  t6032 = 0.004352*t414;
  t6033 = t6032 + t2946;
  t6035 = -0.9999910000159999*t414;
  t6037 = -0.00435200000006963*t963;
  t6040 = t6035 + t6037;
  t6043 = -1.7408e-8*t414;
  t6057 = 3.999964000064e-6*t963;
  t6059 = t6043 + t6057;
  t6034 = 4.e-6*t1742*t6033;
  t6042 = -4.e-6*t1384*t6040;
  t6061 = t411*t6059;
  t6064 = t6034 + t6042 + t6061;
  t6068 = -1.*t1384*t6033;
  t6074 = t2190*t6040;
  t6077 = 4.e-6*t1384*t6059;
  t6080 = t6068 + t6074 + t6077;
  t5466 = t3475*t3937;
  t5467 = t3530*t3959;
  t5475 = t5466 + t5467 + t4510;
  t6105 = t330*t6033;
  t6106 = t1384*t6040;
  t6113 = 4.e-6*t1742*t6059;
  t6114 = t6105 + t6106 + t6113;
  t5987 = -1.*t2148*t5986;
  t6012 = t156*t6009;
  t6014 = t5987 + t6012;
  t6025 = t156*t5986;
  t6026 = t2148*t6009;
  t6027 = t6025 + t6026;
  t6093 = t1384*t5958;
  t6094 = 4.e-6*t1742*t5970;
  t6095 = t330*t5983;
  t6097 = t6093 + t6094 + t6095;
  t6100 = -1.*t6097*t3045;
  t5555 = t3417*t3912;
  t5562 = t3371*t5489;
  t5563 = t3453*t3935;
  t5565 = t5555 + t5562 + t5563;
  t6158 = -3.999964e-6*t414;
  t6165 = t6158 + t2971;
  t6170 = t3025 + t1550;
  t6130 = t3371*t6097;
  t6199 = -1.*t2949*t5958;
  t6200 = -1.*t2976*t5970;
  t6204 = -1.*t3724*t6059;
  t6205 = -1.*t6040*t3771;
  t6207 = -1.*t5983*t3029;
  t6210 = -1.*t6033*t3788;
  t6212 = t6199 + t6200 + t6204 + t6205 + t6207 + t6210;
  t6223 = t3346*t5970;
  t6224 = t3359*t5983;
  t6226 = t6223 + t6224;
  t6218 = t3346*t3724;
  t6220 = t3359*t3788;
  t6221 = t6218 + t6220;
  t6157 = -4.e-6*t1384*t6033;
  t6166 = t411*t6165;
  t6172 = 4.e-6*t1742*t6170;
  t6179 = t6157 + t6166 + t6172;
  t6182 = t2190*t6033;
  t6183 = 4.e-6*t1384*t6165;
  t6185 = -1.*t1384*t6170;
  t6186 = t6182 + t6183 + t6185;
  t6271 = t156*t6179;
  t6273 = t2148*t6186;
  t6275 = t6271 + t6273;
  t6258 = -1.*t2148*t6179;
  t6262 = t156*t6186;
  t6269 = t6258 + t6262;
  t6247 = t1384*t6033;
  t6248 = 4.e-6*t1742*t6165;
  t6249 = t330*t6170;
  t6251 = t6247 + t6248 + t6249;
  t6270 = t153*t6269;
  t6278 = -1.*t6275*t2394;
  t6280 = t6270 + t6278;
  t6287 = t153*t6275;
  t6290 = t6269*t2394;
  t6291 = t6287 + t6290;
  t6301 = t2466*t6251;
  t6306 = -1.*t2514*t6280;
  t6311 = t6301 + t6306;
  t6087 = t156*t6064;
  t6089 = t2148*t6080;
  t6091 = t6087 + t6089;
  t6066 = -1.*t2148*t6064;
  t6082 = t156*t6080;
  t6083 = t6066 + t6082;
  t6116 = -1.*t6114*t3799;
  t6324 = t153*t6027;
  t6334 = t6014*t2394;
  t6344 = t6324 + t6334;
  t6357 = t153*t6014;
  t6359 = -1.*t6027*t2394;
  t6362 = t6357 + t6359;
  t6401 = t153*t6091;
  t6403 = t6083*t2394;
  t6407 = t6401 + t6403;
  t6355 = t4122*t6344;
  t6419 = t153*t6083;
  t6420 = -1.*t6091*t2394;
  t6422 = t6419 + t6420;
  t6413 = -1.*t6344*t4279;
  t6415 = -1.*t6407*t4132;
  t6437 = t6097*t2514;
  t6439 = t2466*t6362;
  t6440 = t6437 + t6439;
  t6443 = t2466*t6097;
  t6445 = -1.*t2514*t6362;
  t6456 = t6443 + t6445;
  t6476 = t6114*t2514;
  t6478 = t2466*t6422;
  t6483 = t6476 + t6478;
  t2785 = t2435*t2424;
  t2794 = -1.*t124*t2706;
  t5165 = -1.*t3288*t3937;
  t5166 = -1.*t3308*t3959;
  t5167 = t5165 + t5166 + t4596;
  t5488 = -1.*t3187*t3912;
  t5491 = -1.*t3045*t5489;
  t5498 = -1.*t3263*t3935;
  t5504 = t5488 + t5491 + t5498;
  t6637 = -1.*t3724*t2976;
  t6638 = -1.*t2949*t3771;
  t6641 = -1.*t3029*t3788;
  t6645 = t6637 + t6638 + t6641;
  t4188 = -1.*t3045*t2514;
  t4193 = -1.*t2466*t3321;
  t4206 = t4188 + t4193;
  t6545 = t2505*t2514;
  t6551 = t2466*t2672;
  t6552 = 0. + t6545 + t6551;
  t4052 = -1.*t3371*t2514;
  t4054 = -1.*t2466*t3561;
  t4060 = t4052 + t4054;
  t2863 = t2508 + t2673;
  t6778 = -1.*t4122*t4132;
  t6811 = t4132*t2424;
  t6870 = -1.*t3561*t4132;
  t6872 = -1.*t4122*t4441;
  t6784 = -1.*t4011*t3981;
  t6790 = -1.*t3608*t4071;
  t6796 = t6778 + t6784 + t6790;
  t6889 = t4441*t2424;
  t6890 = t4132*t4343;
  t6814 = t3981*t6552;
  t6815 = t4071*t2706;
  t6817 = t6811 + t6814 + t6815;
  t6882 = -1.*t3371*t3799;
  t6883 = -1.*t3561*t3963;
  t6886 = t6882 + t6778 + t6883;
  t6900 = t3799*t2505;
  t6903 = t3963*t2672;
  t6904 = t6900 + t6811 + t6903;
  t7024 = -1.*t4930*t4132;
  t7040 = -1.*t4122*t4943;
  t7057 = t4943*t2424;
  t7060 = t4132*t4883;
  t7153 = t5375*t2505;
  t7180 = -1.*t3371*t5375;
  t5922 = t2466*t5353;
  t5923 = -1.*t2514*t5744;
  t5929 = t5922 + t5923;
  t7177 = -1.*t3453*t3799;
  t7154 = t3799*t5610;
  t5612 = t5610*t2514;
  t5653 = t2466*t5649;
  t5658 = t5612 + t5653;
  t7309 = -1.*t5680*t4132;
  t7312 = -1.*t4122*t5724;
  t5869 = t2466*t3453;
  t5870 = -1.*t2514*t5707;
  t5883 = t5869 + t5870;
  t7324 = t5724*t2424;
  t7328 = t4132*t5780;
  t7188 = -1.*t3475*t3937;
  t7189 = -1.*t3530*t3959;
  t7190 = t7188 + t7189 + t6882;
  t7432 = t6097*t2505;
  t7241 = -1.*t3417*t3912;
  t7242 = -1.*t3371*t5489;
  t7245 = -1.*t3453*t3935;
  t7252 = t7241 + t7242 + t7245;
  t7451 = -1.*t3371*t6097;
  t7487 = t3724*t6165;
  t7488 = t1160*t5970;
  t7500 = t6033*t3771;
  t7501 = t5958*t1560;
  t7502 = t6170*t3788;
  t7504 = t5983*t1947;
  t7512 = t7487 + t7488 + t7500 + t7501 + t7502 + t7504;
  t7530 = -1.*t3346*t5970;
  t7535 = -1.*t3359*t5983;
  t7537 = t7530 + t7535;
  t7519 = -1.*t3346*t3724;
  t7525 = -1.*t3359*t3788;
  t7526 = t7519 + t7525;
  t6511 = t2466*t6114;
  t6519 = -1.*t2514*t6422;
  t6523 = t6511 + t6519;
  t7431 = t6251*t3799;
  t7579 = -1.*t4122*t6344;
  t6253 = t6251*t2514;
  t6282 = t2466*t6280;
  t6283 = t6253 + t6282;
  t7588 = t6291*t4132;
  t7596 = t6344*t2424;
  t6735 = t2435*t4279;
  t6736 = -1.*t124*t4147;
  t7130 = t3937*t2384;
  t7132 = t3959*t2346;
  t7139 = t7130 + t7132 + t6900;
  t7202 = t3912*t2014;
  t7203 = t5489*t2505;
  t7204 = t3935*t2338;
  t7206 = t7202 + t7203 + t7204;
  t7672 = t1160*t3724;
  t7673 = t3771*t1560;
  t7674 = t3788*t1947;
  t7675 = t7672 + t7673 + t7674;
  t7739 = t4279*t4132;
  t7771 = -1.*t4132*t2424;
  t7834 = t4507*t4132;
  t7835 = t4279*t4441;
  t7741 = t3332*t3981;
  t7744 = t4147*t4071;
  t7745 = t7739 + t7741 + t7744;
  t7850 = -1.*t4441*t2424;
  t7851 = -1.*t4132*t4343;
  t7775 = -1.*t3981*t6552;
  t7777 = -1.*t4071*t2706;
  t7778 = t7771 + t7775 + t7777;
  t7842 = t3045*t3799;
  t7843 = t3321*t3963;
  t7846 = t7842 + t7739 + t7843;
  t7855 = -1.*t3799*t2505;
  t7857 = -1.*t3963*t2672;
  t7858 = t7855 + t7771 + t7857;
  t7974 = t4972*t4132;
  t7977 = t4279*t4943;
  t7988 = -1.*t4943*t2424;
  t7990 = -1.*t4132*t4883;
  t8055 = -1.*t5375*t2505;
  t8087 = t3045*t5375;
  t8086 = t5353*t3799;
  t8056 = -1.*t3799*t5610;
  t8174 = t5668*t4132;
  t8179 = t4279*t5724;
  t8183 = -1.*t5724*t2424;
  t8190 = -1.*t4132*t5780;
  t8059 = -1.*t3937*t2384;
  t8063 = -1.*t3959*t2346;
  t8064 = t8059 + t8063 + t7855;
  t8093 = t3288*t3937;
  t8094 = t3308*t3959;
  t8095 = t8093 + t8094 + t7842;
  t8122 = -1.*t3912*t2014;
  t8123 = -1.*t5489*t2505;
  t8126 = -1.*t3935*t2338;
  t8127 = t8122 + t8123 + t8126;
  t8139 = t3187*t3912;
  t8140 = t3045*t5489;
  t8143 = t3263*t3935;
  t8146 = t8139 + t8140 + t8143;
  t8258 = -1.*t6097*t2505;
  t8269 = t6097*t3045;
  t8353 = t2949*t5958;
  t8354 = t2976*t5970;
  t8355 = t3724*t6059;
  t8356 = t6040*t3771;
  t8357 = t5983*t3029;
  t8358 = t6033*t3788;
  t8359 = t8353 + t8354 + t8355 + t8356 + t8357 + t8358;
  t8338 = -1.*t3724*t6165;
  t8341 = -1.*t1160*t5970;
  t8342 = -1.*t6033*t3771;
  t8344 = -1.*t5958*t1560;
  t8345 = -1.*t6170*t3788;
  t8346 = -1.*t5983*t1947;
  t8348 = t8338 + t8341 + t8342 + t8344 + t8345 + t8346;
  t8331 = t3724*t2976;
  t8332 = t2949*t3771;
  t8333 = t3029*t3788;
  t8335 = t8331 + t8332 + t8333;
  t8320 = -1.*t1160*t3724;
  t8321 = -1.*t3771*t1560;
  t8324 = -1.*t3788*t1947;
  t8326 = t8320 + t8321 + t8324;
  t8271 = t6114*t3799;
  t8257 = -1.*t6251*t3799;
  t8380 = t6344*t4279;
  t8382 = t6407*t4132;
  t8395 = -1.*t6291*t4132;
  t8400 = -1.*t6344*t2424;
  t7708 = t2435*t4122;
  t7711 = -1.*t124*t3608;
  t7713 = t7708 + t7711;
  p_output1[0]=(-1.*t124*t2424 - 1.*t2435*t2706)*var2[1] + (t2785 + t2794)*var2[2];
  p_output1[1]=t2863*var2[0] - 1.*t124*t2843*var2[1] + t2435*t2843*var2[2] + (t3332*(t3608*t3973 + t3608*t3981 + t4011*t4035 + t4060*t4071) + t4115*t4142 + t4011*(-1.*t3332*t4035 - 1.*t3981*t4115 - 1.*t3973*t4147 - 1.*t4071*t4206) + t3608*t4295)*var2[3];
  p_output1[2]=t2466*t4309*var2[0] + (t124*t2514*t4309 + t2435*t4343)*var2[1] + (-1.*t2435*t2514*t4309 + t124*t4343)*var2[2] + (t2466*t4295*t4478 + t3332*(-1.*t2514*t3608*t4400 + t2466*t4011*t4400 + t4432 + t4444 + t2466*t3981*t4478 - 1.*t2514*t4071*t4478) + t2466*t4142*t4559 + t4011*(-1.*t2466*t3332*t4400 + t2514*t4147*t4400 + t4534 + t4539 - 1.*t2466*t3981*t4559 + t2514*t4071*t4559))*var2[3] + (t4279*(t3561*t4400 + t4432 + t4444 + t3963*t4478) + t4507*t4521 + t4122*(-1.*t3321*t4400 + t4534 + t4539 - 1.*t3963*t4559) + t3561*t4629)*var2[4];
  p_output1[3]=t2466*t4850*var2[0] + (t124*t2514*t4850 + t2435*t4883)*var2[1] + (-1.*t2435*t2514*t4850 + t124*t4883)*var2[2] + (t2466*t4295*t4953 + t3332*(t4933 - 1.*t2514*t3608*t4939 + t2466*t4011*t4939 + t4944 + t2466*t3981*t4953 - 1.*t2514*t4071*t4953) + t2466*t4142*t5033 + t4011*(-1.*t2466*t3332*t4939 + t2514*t4147*t4939 + t4982 + t4999 - 1.*t2466*t3981*t5033 + t2514*t4071*t5033))*var2[3] + (t4629*t4930 + t4279*(t4933 + t3561*t4939 + t4944 + t3963*t4953) + t4521*t4972 + t4122*(-1.*t3321*t4939 + t4982 + t4999 - 1.*t3963*t5033))*var2[4] + (t3371*(-1.*t3937*t4728 - 1.*t3308*t4737 - 1.*t3288*t4758 - 1.*t3959*t4764) + t3045*(t3475*t3959 + t3530*t4737 + t3475*t4758 + t3937*t4783))*var2[5];
  p_output1[4]=t5658*var2[0] + (t2435*t5780 - 1.*t124*t5785)*var2[1] + (t124*t5780 + t2435*t5785)*var2[2] + (t4142*t5840 + t4295*t5854 + t3332*(t5696 + t5727 + t3981*t5854 + t4071*t5883 + t4011*t5894 + t3608*t5908) + t4011*(t5735 + t5755 - 1.*t3981*t5840 - 1.*t3332*t5894 - 1.*t4147*t5908 - 1.*t4071*t5929))*var2[3] + (t4521*t5668 + t4629*t5680 + t4279*(t5459 + t5460 + t5696 + t3963*t5707 + t3561*t5716 + t5727) + t4122*(t5357 + t5383 - 1.*t3321*t5716 + t5735 - 1.*t3963*t5744 + t5755))*var2[4] + (t3453*t5167 + t3371*(-1.*t3937*t5241 - 1.*t3959*t5254 - 1.*t3308*t5339 - 1.*t3288*t5347 + t5357 + t5383) + t3045*(t3530*t5339 + t3475*t5347 + t3937*t5428 + t3959*t5439 + t5459 + t5460) + t5353*t5475)*var2[5] + (t3045*(t3453*t5285 + t3417*t5332 + t3935*t5401 + t3912*t5424 + t5460 + t3453*t5489) + t3371*(-1.*t3935*t5207 - 1.*t3912*t5236 - 1.*t3263*t5285 - 1.*t3187*t5332 + t5383 - 1.*t5353*t5489) + t3453*t5504 + t5353*t5565 - 0.15121*t5589 - 0.15121*t5598)*var2[9];
  p_output1[5]=t6283*var2[0] + (t2435*t6291 - 1.*t124*t6311)*var2[1] + (t124*t6291 + t2435*t6311)*var2[2] + (t3332*(t6355 + t4011*t6440 + t3608*t6456) + t4142*t6483 + t4011*(t6413 + t6415 - 1.*t3332*t6440 - 1.*t4147*t6456 - 1.*t3981*t6483 - 1.*t4071*t6523))*var2[3] + (t4279*(t6130 + t6355 + t3561*t6362) + t4521*t6407 + t4122*(t6100 + t6116 - 1.*t3321*t6362 + t6413 + t6415 - 1.*t3963*t6422))*var2[4] + (t5475*t6114 + t3371*(-1.*t3288*t6014 - 1.*t3308*t6027 - 1.*t3937*t6083 - 1.*t3959*t6091 + t6100 + t6116) + t3045*(t3475*t6014 + t3530*t6027 + t6130))*var2[5] + (t5565*t6114 + t3371*(-1.*t3187*t5986 - 1.*t3263*t6009 - 1.*t3912*t6064 - 1.*t3935*t6080 + t6100 - 1.*t5489*t6114) + t3045*(t3417*t5986 + t3453*t6009 + t6130) - 0.15121*t6179 - 0.15121*t6186)*var2[9] + (-0.038749*t6033 + 1.e-6*t6165 - 0.28121*t6170 - 1.*t3346*t6212 - 1.*t6059*t6221 - 1.*t2976*t6226 + 4.e-6*(-1.*t3359*t6212 - 1.*t6033*t6221 - 1.*t3029*t6226))*var2[10];
  p_output1[6]=t6552;
  p_output1[7]=0. + t2785 + t2794;
  p_output1[8]=0. + t124*t2424 + t2435*t2706;
  p_output1[9]=t3332*t4142 + t4011*t4295;
  p_output1[10]=t4279*t4521 + t4122*t4629;
  p_output1[11]=t3371*t5167 + t3045*t5475;
  p_output1[12]=-0.15121*t2014 - 0.15121*t2338 + t3371*t5504 + t3045*t5565;
  p_output1[13]=1.e-6*t1160 - 0.038749*t1560 - 0.28121*t1947 - 1.*t2976*t6221 - 1.*t3346*t6645 + 4.e-6*(-1.*t3029*t6221 - 1.*t3359*t6645);
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t2435*t4147 - 1.*t124*t4279)*var2[1] + (t6735 + t6736)*var2[2];
  p_output1[16]=t4115*var2[0] - 1.*t124*t4206*var2[1] + t2435*t4206*var2[2] + ((-1.*t3608*t3973 - 1.*t3608*t3981 - 1.*t4011*t4035 - 1.*t4060*t4071)*t6552 + t4011*(t2706*t3973 + t2863*t3981 + t2843*t4071 + t4035*t6552) + t2863*t6796 + t3608*t6817)*var2[3];
  p_output1[17]=t2466*t4559*var2[0] + (t2435*t4507 + t124*t2514*t4559)*var2[1] + (t124*t4507 - 1.*t2435*t2514*t4559)*var2[2] + (t2466*t4309*t6796 + t2466*t4478*t6817 + t6552*(t2514*t3608*t4400 - 1.*t2466*t4011*t4400 - 1.*t2466*t3981*t4478 + t2514*t4071*t4478 + t6870 + t6872) + t4011*(t2466*t3981*t4309 - 1.*t2514*t4071*t4309 - 1.*t2514*t2706*t4400 + t2466*t4400*t6552 + t6889 + t6890))*var2[3] + (t2424*(-1.*t3561*t4400 - 1.*t3963*t4478 + t6870 + t6872) + t4343*t6886 + t4122*(t3963*t4309 + t2672*t4400 + t6889 + t6890) + t3561*t6904)*var2[4];
  p_output1[18]=t2466*t5033*var2[0] + (t2435*t4972 + t124*t2514*t5033)*var2[1] + (t124*t4972 - 1.*t2435*t2514*t5033)*var2[2] + (t2466*t4850*t6796 + t2466*t4953*t6817 + t6552*(t2514*t3608*t4939 - 1.*t2466*t4011*t4939 - 1.*t2466*t3981*t4953 + t2514*t4071*t4953 + t7024 + t7040) + t4011*(t2466*t3981*t4850 - 1.*t2514*t4071*t4850 - 1.*t2514*t2706*t4939 + t2466*t4939*t6552 + t7057 + t7060))*var2[3] + (t4883*t6886 + t4930*t6904 + t2424*(-1.*t3561*t4939 - 1.*t3963*t4953 + t7024 + t7040) + t4122*(t3963*t4850 + t2672*t4939 + t7057 + t7060))*var2[4] + (t2505*(-1.*t3475*t3959 - 1.*t3530*t4737 - 1.*t3475*t4758 - 1.*t3937*t4783) + t3371*(t2346*t4737 + t2384*t4758 + t3937*t4835 + t3959*t4842))*var2[5];
  p_output1[19]=t5840*var2[0] + (t2435*t5668 - 1.*t124*t5929)*var2[1] + (t124*t5668 + t2435*t5929)*var2[2] + (t5658*t6796 + t5854*t6817 + t6552*(-1.*t3981*t5854 - 1.*t4071*t5883 - 1.*t4011*t5894 - 1.*t3608*t5908 + t7309 + t7312) + t4011*(t3981*t5658 + t4071*t5785 + t2706*t5908 + t5894*t6552 + t7324 + t7328))*var2[3] + (t5780*t6886 + t5680*t6904 + t2424*(-1.*t3963*t5707 - 1.*t3561*t5716 + t7177 + t7180 + t7309 + t7312) + t4122*(t3963*t5649 + t2672*t5716 + t7153 + t7154 + t7324 + t7328))*var2[4] + (t3453*t7139 + t3371*(t2346*t5339 + t2384*t5347 + t3937*t5628 + t3959*t5638 + t7153 + t7154) + t2505*(-1.*t3530*t5339 - 1.*t3475*t5347 - 1.*t3937*t5428 - 1.*t3959*t5439 + t7177 + t7180) + t5610*t7190)*var2[5] + (-0.15121*t5207 - 0.15121*t5236 + t3371*(t2338*t5285 + t2014*t5332 + t3935*t5589 + t3912*t5598 + t5489*t5610 + t7153) + t2505*(-1.*t3453*t5285 - 1.*t3417*t5332 - 1.*t3935*t5401 - 1.*t3912*t5424 - 1.*t3453*t5489 + t7180) + t3453*t7206 + t5610*t7252)*var2[9];
  p_output1[20]=t6483*var2[0] + (t2435*t6407 - 1.*t124*t6523)*var2[1] + (t124*t6407 + t2435*t6523)*var2[2] + (t6283*t6796 + t6552*(-1.*t4011*t6440 - 1.*t3608*t6456 + t7579) + t4011*(t3981*t6283 + t4071*t6311 + t2706*t6456 + t6440*t6552 + t7588 + t7596))*var2[3] + (t6291*t6886 + t2424*(-1.*t3561*t6362 + t7451 + t7579) + t4122*(t3963*t6280 + t2672*t6362 + t7431 + t7432 + t7588 + t7596))*var2[4] + (t6251*t7190 + t3371*(t2384*t6014 + t2346*t6027 + t3937*t6269 + t3959*t6275 + t7431 + t7432) + t2505*(-1.*t3475*t6014 - 1.*t3530*t6027 + t7451))*var2[5] + (-0.15121*t6064 - 0.15121*t6080 + t6251*t7252 + t3371*(t2014*t5986 + t2338*t6009 + t3912*t6179 + t3935*t6186 + t5489*t6251 + t7432) + t2505*(-1.*t3417*t5986 - 1.*t3453*t6009 + t7451))*var2[9] + (-0.28121*t6033 - 0.038749*t6040 + 1.e-6*t6059 - 1.*t3346*t7512 - 1.*t6165*t7526 - 1.*t1160*t7537 + 4.e-6*(-1.*t3359*t7512 - 1.*t6170*t7526 - 1.*t1947*t7537))*var2[10];
  p_output1[21]=t3332;
  p_output1[22]=0. + t6735 + t6736;
  p_output1[23]=0. + t2435*t4147 + t124*t4279;
  p_output1[24]=t6552*t6796 + t4011*t6817;
  p_output1[25]=t2424*t6886 + t4122*t6904;
  p_output1[26]=t3371*t7139 + t2505*t7190;
  p_output1[27]=-0.15121*t3187 - 0.15121*t3263 + t3371*t7206 + t2505*t7252;
  p_output1[28]=-0.038749*t2949 + 1.e-6*t2976 - 0.28121*t3029 - 1.*t1160*t7526 - 1.*t3346*t7675 + 4.e-6*(-1.*t1947*t7526 - 1.*t3359*t7675);
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t2435*t3608 - 1.*t124*t4122)*var2[1] + t7713*var2[2];
  p_output1[31]=t3608*var2[0] - 1.*t124*t4060*var2[1] + t2435*t4060*var2[2] + ((t3332*t4035 + t3981*t4115 + t3973*t4147 + t4071*t4206)*t6552 + t3332*(-1.*t2706*t3973 - 1.*t2863*t3981 - 1.*t2843*t4071 - 1.*t4035*t6552) + t2863*t7745 + t4115*t7778)*var2[3];
  p_output1[32]=t2466*t4478*var2[0] + (t2435*t3561 + t124*t2514*t4478)*var2[1] + (t124*t3561 - 1.*t2435*t2514*t4478)*var2[2] + (t2466*t4309*t7745 + t2466*t4559*t7778 + t6552*(t2466*t3332*t4400 - 1.*t2514*t4147*t4400 + t2466*t3981*t4559 - 1.*t2514*t4071*t4559 + t7834 + t7835) + t3332*(-1.*t2466*t3981*t4309 + t2514*t4071*t4309 + t2514*t2706*t4400 - 1.*t2466*t4400*t6552 + t7850 + t7851))*var2[3] + (t2424*(t3321*t4400 + t3963*t4559 + t7834 + t7835) + t4343*t7846 + t4279*(-1.*t3963*t4309 - 1.*t2672*t4400 + t7850 + t7851) + t4507*t7858)*var2[4];
  p_output1[33]=t2466*t4953*var2[0] + (t2435*t4930 + t124*t2514*t4953)*var2[1] + (t124*t4930 - 1.*t2435*t2514*t4953)*var2[2] + (t2466*t4850*t7745 + t2466*t5033*t7778 + t6552*(t2466*t3332*t4939 - 1.*t2514*t4147*t4939 + t2466*t3981*t5033 - 1.*t2514*t4071*t5033 + t7974 + t7977) + t3332*(-1.*t2466*t3981*t4850 + t2514*t4071*t4850 + t2514*t2706*t4939 - 1.*t2466*t4939*t6552 + t7988 + t7990))*var2[3] + (t4883*t7846 + t4972*t7858 + t2424*(t3321*t4939 + t3963*t5033 + t7974 + t7977) + t4279*(-1.*t3963*t4850 - 1.*t2672*t4939 + t7988 + t7990))*var2[4] + (t2505*(t3937*t4728 + t3308*t4737 + t3288*t4758 + t3959*t4764) + t3045*(-1.*t2346*t4737 - 1.*t2384*t4758 - 1.*t3937*t4835 - 1.*t3959*t4842))*var2[5];
  p_output1[34]=t5854*var2[0] + (t2435*t5680 - 1.*t124*t5883)*var2[1] + (t124*t5680 + t2435*t5883)*var2[2] + (t5658*t7745 + t5840*t7778 + t6552*(t3981*t5840 + t3332*t5894 + t4147*t5908 + t4071*t5929 + t8174 + t8179) + t3332*(-1.*t3981*t5658 - 1.*t4071*t5785 - 1.*t2706*t5908 - 1.*t5894*t6552 + t8183 + t8190))*var2[3] + (t5780*t7846 + t5668*t7858 + t2424*(t3321*t5716 + t3963*t5744 + t8086 + t8087 + t8174 + t8179) + t4279*(-1.*t3963*t5649 - 1.*t2672*t5716 + t8055 + t8056 + t8183 + t8190))*var2[4] + (t3045*(-1.*t2346*t5339 - 1.*t2384*t5347 - 1.*t3937*t5628 - 1.*t3959*t5638 + t8055 + t8056) + t5353*t8064 + t2505*(t3937*t5241 + t3959*t5254 + t3308*t5339 + t3288*t5347 + t8086 + t8087) + t5610*t8095)*var2[5] + (-0.15121*t5401 - 0.15121*t5424 + t3045*(-1.*t2338*t5285 - 1.*t2014*t5332 - 1.*t3935*t5589 - 1.*t3912*t5598 - 1.*t5489*t5610 + t8055) + t2505*(t3935*t5207 + t3912*t5236 + t3263*t5285 + t3187*t5332 + t5353*t5489 + t8087) + t5353*t8127 + t5610*t8146)*var2[9];
  p_output1[35]=(t6283*t7745 + t6483*t7778 + t6552*(t3332*t6440 + t4147*t6456 + t3981*t6483 + t4071*t6523 + t8380 + t8382) + t3332*(-1.*t3981*t6283 - 1.*t4071*t6311 - 1.*t2706*t6456 - 1.*t6440*t6552 + t8395 + t8400))*var2[3] + (t6291*t7846 + t6407*t7858 + t2424*(t3321*t6362 + t3963*t6422 + t8269 + t8271 + t8380 + t8382) + t4279*(-1.*t3963*t6280 - 1.*t2672*t6362 + t8257 + t8258 + t8395 + t8400))*var2[4] + (t6114*t8064 + t6251*t8095 + t3045*(-1.*t2384*t6014 - 1.*t2346*t6027 - 1.*t3937*t6269 - 1.*t3959*t6275 + t8257 + t8258) + t2505*(t3288*t6014 + t3308*t6027 + t3937*t6083 + t3959*t6091 + t8269 + t8271))*var2[5] + (t6114*t8127 + t6251*t8146 + t3045*(-1.*t2014*t5986 - 1.*t2338*t6009 - 1.*t3912*t6179 - 1.*t3935*t6186 - 1.*t5489*t6251 + t8258) + t2505*(t3187*t5986 + t3263*t6009 + t3912*t6064 + t3935*t6080 + t5489*t6114 + t8269))*var2[9] + (-1.*t6059*t8326 - 1.*t6165*t8335 - 1.*t2976*t8348 - 1.*t1160*t8359 + 4.e-6*(-1.*t6033*t8326 - 1.*t6170*t8335 - 1.*t3029*t8348 - 1.*t1947*t8359))*var2[10];
  p_output1[36]=t4011;
  p_output1[37]=t7713;
  p_output1[38]=t2435*t3608 + t124*t4122;
  p_output1[39]=t6552*t7745 + t3332*t7778;
  p_output1[40]=t2424*t7846 + t4279*t7858;
  p_output1[41]=t3045*t8064 + t2505*t8095;
  p_output1[42]=-0.15121*t3417 - 0.15121*t3453 + t3045*t8127 + t2505*t8146;
  p_output1[43]=1.e-6*t3346 - 0.28121*t3359 - 1.*t2976*t8326 - 1.*t1160*t8335 + 4.e-6*(-1.*t3029*t8326 - 1.*t1947*t8335);
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_dh_FrFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
