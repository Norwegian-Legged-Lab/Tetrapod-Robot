/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:27:01 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t520;
  double t603;
  double t687;
  double t816;
  double t430;
  double t1044;
  double t724;
  double t941;
  double t963;
  double t1383;
  double t1399;
  double t1068;
  double t1226;
  double t1306;
  double t1307;
  double t1342;
  double t1400;
  double t1466;
  double t1498;
  double t1634;
  double t467;
  double t475;
  double t518;
  double t1015;
  double t1369;
  double t1531;
  double t1555;
  double t429;
  double t1658;
  double t1819;
  double t1822;
  double t1829;
  double t1843;
  double t1873;
  double t357;
  double t2301;
  double t2339;
  double t2366;
  double t1564;
  double t1879;
  double t1892;
  double t2387;
  double t2430;
  double t2237;
  double t2393;
  double t2415;
  double t342;
  double t2434;
  double t2469;
  double t2474;
  double t2484;
  double t2519;
  double t2544;
  double t2579;
  double t2594;
  double t2600;
  double t2614;
  double t2632;
  double t2635;
  double t2767;
  double t2863;
  double t2870;
  double t3018;
  double t3139;
  double t3147;
  double t3245;
  double t3246;
  double t3250;
  double t3335;
  double t3374;
  double t3413;
  double t3424;
  double t3432;
  double t3461;
  double t3471;
  double t3510;
  double t3551;
  double t3553;
  double t3557;
  double t3563;
  double t3568;
  double t3573;
  double t3597;
  double t3769;
  double t3772;
  double t3773;
  double t3776;
  double t3823;
  double t3838;
  double t3883;
  double t3900;
  double t3905;
  double t3907;
  double t3991;
  double t3994;
  double t4002;
  double t4049;
  double t4062;
  double t4072;
  double t4083;
  double t4132;
  double t4173;
  double t4175;
  double t4176;
  double t4196;
  double t4197;
  double t4198;
  double t4201;
  double t4205;
  double t4212;
  double t4263;
  double t4273;
  double t4283;
  double t4302;
  double t4310;
  double t4314;
  double t4317;
  double t4343;
  double t4344;
  double t4349;
  double t4350;
  double t4372;
  double t4377;
  double t4382;
  double t4383;
  double t4384;
  double t4386;
  double t3770;
  double t3797;
  double t3799;
  double t3801;
  double t3884;
  double t3908;
  double t3911;
  double t3915;
  double t3918;
  double t3935;
  double t3938;
  double t3954;
  double t3957;
  double t3959;
  double t3965;
  double t3978;
  double t3979;
  double t3981;
  double t3989;
  double t4104;
  double t4180;
  double t4214;
  double t4225;
  double t4281;
  double t4369;
  double t4388;
  double t4393;
  double t4399;
  double t4408;
  double t4412;
  double t4413;
  double t4421;
  double t4425;
  double t4427;
  double t4498;
  double t4509;
  double t3222;
  double t3420;
  double t3473;
  double t3493;
  double t3561;
  double t3600;
  double t3625;
  double t3635;
  double t3645;
  double t3671;
  double t3725;
  double t3733;
  double t3760;
  double t4493;
  double t4495;
  double t4496;
  double t4463;
  double t4464;
  double t4475;
  double t4549;
  double t4560;
  double t4563;
  double t4244;
  double t4428;
  double t4431;
  double t4564;
  double t3506;
  double t3764;
  double t3768;
  double t4539;
  double t4589;
  double t4592;
  double t4594;
  double t4608;
  double t4737;
  double t4739;
  double t4754;
  double t4759;
  double t4663;
  double t4668;
  double t4676;
  double t4567;
  double t4573;
  double t4581;
  double t4599;
  double t4786;
  double t4799;
  double t4800;
  double t4850;
  double t4821;
  double t4677;
  double t4820;
  double t4825;
  double t4826;
  double t4830;
  double t4833;
  double t4863;
  double t4864;
  double t4865;
  double t4866;
  double t4867;
  double t4603;
  double t4604;
  double t4605;
  double t4694;
  double t4695;
  double t4704;
  double t4956;
  double t4988;
  double t5004;
  double t5006;
  double t5012;
  double t5014;
  double t5066;
  double t5067;
  double t5071;
  double t5073;
  double t5076;
  double t5082;
  double t5083;
  double t5107;
  double t5118;
  double t5134;
  double t5027;
  double t5029;
  double t5030;
  double t5019;
  double t4950;
  double t4951;
  double t4952;
  double t4856;
  double t4858;
  double t4859;
  double t5255;
  double t5259;
  double t5263;
  double t5196;
  double t5198;
  double t5200;
  double t5202;
  double t5203;
  double t5219;
  double t5184;
  double t5187;
  double t4875;
  double t4878;
  double t4879;
  double t5190;
  double t5222;
  double t5225;
  double t5229;
  double t5279;
  double t5317;
  double t5318;
  double t5333;
  double t5335;
  double t5444;
  double t5445;
  double t5446;
  double t5451;
  double t5465;
  double t5471;
  double t5475;
  double t5476;
  double t5494;
  double t5495;
  double t5497;
  double t5499;
  double t5502;
  double t5517;
  double t5529;
  double t5538;
  double t5553;
  double t5554;
  double t5556;
  double t5557;
  double t5597;
  double t5604;
  double t5606;
  double t5611;
  double t5615;
  double t5618;
  double t5524;
  double t5559;
  double t5560;
  double t5562;
  double t5563;
  double t5565;
  double t5581;
  double t5583;
  double t5587;
  double t5570;
  double t5577;
  double t5670;
  double t5590;
  double t5638;
  double t5749;
  double t5750;
  double t5751;
  double t5752;
  double t5754;
  double t5755;
  double t5759;
  double t5761;
  double t5484;
  double t5490;
  double t5491;
  double t5463;
  double t5479;
  double t5480;
  double t5627;
  double t5628;
  double t5630;
  double t5610;
  double t5621;
  double t5624;
  double t5637;
  double t5794;
  double t5797;
  double t5799;
  double t5580;
  double t5790;
  double t5791;
  double t5792;
  double t5807;
  double t5809;
  double t5812;
  double t5814;
  double t5816;
  double t5818;
  double t5779;
  double t5780;
  double t5781;
  double t5773;
  double t5776;
  double t5777;
  double t5768;
  double t5771;
  double t5778;
  double t5783;
  double t5784;
  double t5853;
  double t5867;
  double t5872;
  double t5877;
  double t5886;
  double t5891;
  double t5830;
  double t5837;
  double t5838;
  double t5803;
  double t5804;
  double t5805;
  double t5802;
  double t5820;
  double t5943;
  double t5944;
  double t5946;
  double t5829;
  double t5842;
  double t5925;
  double t5927;
  double t5940;
  double t5985;
  double t5989;
  double t5990;
  double t5995;
  double t6001;
  double t6003;
  double t6054;
  double t6056;
  double t6057;
  double t6063;
  double t6064;
  double t6082;
  double t6085;
  double t6086;
  double t6062;
  double t6084;
  double t6087;
  double t6088;
  double t6091;
  double t6097;
  double t6100;
  double t6106;
  double t6125;
  double t6131;
  double t6137;
  double t6138;
  double t6139;
  double t6148;
  double t6149;
  double t6150;
  double t6136;
  double t6147;
  double t6153;
  double t6154;
  double t6159;
  double t6160;
  double t6163;
  double t6164;
  double t5641;
  double t5645;
  double t5649;
  double t6199;
  double t6200;
  double t6201;
  double t6202;
  double t6089;
  double t6107;
  double t6109;
  double t6115;
  double t6116;
  double t6119;
  double t6184;
  double t6186;
  double t6190;
  double t6191;
  double t6193;
  double t5734;
  double t5736;
  double t5741;
  double t5743;
  double t6289;
  double t6292;
  double t6295;
  double t6246;
  double t6338;
  double t6343;
  double t6344;
  double t6346;
  double t6349;
  double t6350;
  double t6353;
  double t6365;
  double t6366;
  double t6367;
  double t6360;
  double t6361;
  double t6363;
  double t6284;
  double t6293;
  double t6305;
  double t6306;
  double t6314;
  double t6315;
  double t6316;
  double t6317;
  double t6397;
  double t6400;
  double t6401;
  double t6391;
  double t6393;
  double t6394;
  double t6384;
  double t6385;
  double t6386;
  double t6388;
  double t6395;
  double t6404;
  double t6405;
  double t6414;
  double t6415;
  double t6419;
  double t6422;
  double t6425;
  double t6430;
  double t6170;
  double t6172;
  double t6173;
  double t6157;
  double t6166;
  double t6167;
  double t6203;
  double t6451;
  double t6453;
  double t6454;
  double t6459;
  double t6460;
  double t6462;
  double t6468;
  double t6469;
  double t6470;
  double t6455;
  double t6477;
  double t6478;
  double t6480;
  double t6472;
  double t6476;
  double t6503;
  double t6504;
  double t6511;
  double t6513;
  double t6516;
  double t6518;
  double t6531;
  double t6532;
  double t6536;
  double t2661;
  double t2665;
  double t5414;
  double t5425;
  double t5439;
  double t5668;
  double t5671;
  double t5674;
  double t5679;
  double t6617;
  double t6618;
  double t6619;
  double t6620;
  double t4617;
  double t4622;
  double t4653;
  double t6579;
  double t6580;
  double t6584;
  double t4541;
  double t4543;
  double t4548;
  double t2940;
  double t6693;
  double t6708;
  double t6745;
  double t6748;
  double t6695;
  double t6696;
  double t6697;
  double t6763;
  double t6765;
  double t6709;
  double t6711;
  double t6712;
  double t6755;
  double t6758;
  double t6759;
  double t6770;
  double t6771;
  double t6773;
  double t6893;
  double t6895;
  double t6903;
  double t6904;
  double t6976;
  double t6985;
  double t6021;
  double t6028;
  double t6029;
  double t6984;
  double t6977;
  double t5772;
  double t5785;
  double t5786;
  double t7073;
  double t7084;
  double t5965;
  double t5971;
  double t5978;
  double t7090;
  double t7095;
  double t6991;
  double t6993;
  double t6995;
  double t7144;
  double t7034;
  double t7036;
  double t7040;
  double t7045;
  double t7155;
  double t7180;
  double t7181;
  double t7182;
  double t7185;
  double t7186;
  double t7187;
  double t7188;
  double t7200;
  double t7201;
  double t7206;
  double t7191;
  double t7195;
  double t7197;
  double t6560;
  double t6561;
  double t6562;
  double t7138;
  double t7244;
  double t6389;
  double t6408;
  double t6409;
  double t7260;
  double t7262;
  double t6667;
  double t6668;
  double t6961;
  double t6965;
  double t6968;
  double t7008;
  double t7009;
  double t7011;
  double t7013;
  double t7328;
  double t7329;
  double t7330;
  double t7333;
  double t7402;
  double t7418;
  double t7447;
  double t7448;
  double t7403;
  double t7406;
  double t7407;
  double t7459;
  double t7460;
  double t7419;
  double t7420;
  double t7421;
  double t7452;
  double t7454;
  double t7455;
  double t7464;
  double t7465;
  double t7466;
  double t7533;
  double t7535;
  double t7542;
  double t7543;
  double t7572;
  double t7585;
  double t7584;
  double t7573;
  double t7634;
  double t7637;
  double t7641;
  double t7645;
  double t7576;
  double t7577;
  double t7578;
  double t7588;
  double t7589;
  double t7590;
  double t7604;
  double t7605;
  double t7606;
  double t7607;
  double t7617;
  double t7618;
  double t7619;
  double t7620;
  double t7675;
  double t7683;
  double t7728;
  double t7729;
  double t7730;
  double t7732;
  double t7733;
  double t7734;
  double t7735;
  double t7720;
  double t7721;
  double t7722;
  double t7723;
  double t7724;
  double t7725;
  double t7726;
  double t7714;
  double t7716;
  double t7717;
  double t7718;
  double t7709;
  double t7710;
  double t7711;
  double t7712;
  double t7684;
  double t7674;
  double t7745;
  double t7747;
  double t7752;
  double t7754;
  double t7358;
  double t7359;
  double t7360;
  t520 = Cos(var1[11]);
  t603 = -1.*t520;
  t687 = 1. + t603;
  t816 = Sin(var1[11]);
  t430 = Cos(var1[10]);
  t1044 = Sin(var1[10]);
  t724 = -1.7408e-8*t687;
  t941 = -3.999964e-6*t816;
  t963 = t724 + t941;
  t1383 = -1.*t430;
  t1399 = 1. + t1383;
  t1068 = -1.000000000016*t687;
  t1226 = 1. + t1068;
  t1306 = 0.999991*t1226;
  t1307 = 0.004352*t816;
  t1342 = t1306 + t1307;
  t1400 = -0.004352*t520;
  t1466 = 0.999991*t816;
  t1498 = t1400 + t1466;
  t1634 = Sin(var1[9]);
  t467 = -1. + t430;
  t475 = 1.6e-11*t467;
  t518 = 1. + t475;
  t1015 = t518*t963;
  t1369 = -4.e-6*t1044*t1342;
  t1531 = 4.e-6*t1399*t1498;
  t1555 = 0. + t1015 + t1369 + t1531;
  t429 = Cos(var1[9]);
  t1658 = 4.e-6*t1044*t963;
  t1819 = -1.000000000016*t1399;
  t1822 = 1. + t1819;
  t1829 = t1822*t1342;
  t1843 = -1.*t1044*t1498;
  t1873 = 0. + t1658 + t1829 + t1843;
  t357 = Cos(var1[5]);
  t2301 = -1.*t1634*t1555;
  t2339 = t429*t1873;
  t2366 = 0. + t2301 + t2339;
  t1564 = t429*t1555;
  t1879 = t1634*t1873;
  t1892 = 0. + t1564 + t1879;
  t2387 = Sin(var1[5]);
  t2430 = Cos(var1[3]);
  t2237 = t357*t1892;
  t2393 = t2366*t2387;
  t2415 = 0. + t2237 + t2393;
  t342 = Sin(var1[3]);
  t2434 = Cos(var1[4]);
  t2469 = 4.e-6*t1399*t963;
  t2474 = t1044*t1342;
  t2484 = t430*t1498;
  t2519 = 0. + t2469 + t2474 + t2484;
  t2544 = t2434*t2519;
  t2579 = Sin(var1[4]);
  t2594 = t357*t2366;
  t2600 = -1.*t1892*t2387;
  t2614 = 0. + t2594 + t2600;
  t2632 = -1.*t2579*t2614;
  t2635 = 0. + t2544 + t2632;
  t2767 = -1.*t2519*t2579;
  t2863 = -1.*t2434*t2614;
  t2870 = t2767 + t2863;
  t3018 = 0.004352*t1226;
  t3139 = -0.9999910000159999*t816;
  t3147 = t3018 + t3139;
  t3245 = 1.6e-11*t687;
  t3246 = -1. + t3245;
  t3250 = 4.e-6*t3246;
  t3335 = 3.999964e-6*t687;
  t3374 = -1.7408e-8*t816;
  t3413 = t3250 + t3335 + t3374;
  t3424 = -1. + t520;
  t3432 = 1.6e-11*t3424;
  t3461 = 0.999991*t520;
  t3471 = t3432 + t3461 + t1307;
  t3510 = -4.e-6*t1044*t3147;
  t3551 = t518*t3413;
  t3553 = 4.e-6*t1399*t3471;
  t3557 = 0. + t3510 + t3551 + t3553;
  t3563 = t1822*t3147;
  t3568 = 4.e-6*t1044*t3413;
  t3573 = -1.*t1044*t3471;
  t3597 = 0. + t3563 + t3568 + t3573;
  t3769 = -1. + t3245 + t3432;
  t3772 = 4.e-6*t3424;
  t3773 = -4.e-6*t520;
  t3776 = t3772 + t3773;
  t3823 = t518*t3769;
  t3838 = 4.e-6*t1399*t3776;
  t3883 = t3823 + t3838;
  t3900 = 4.e-6*t3769*t1044;
  t3905 = -1.*t3776*t1044;
  t3907 = t3900 + t3905;
  t3991 = -1.26e-8*var1[11];
  t3994 = 1. + t3432;
  t4002 = -0.14871*t3994;
  t4049 = -1.64779999997447e-7*t687;
  t4062 = -1.59556e-7*t3424;
  t4072 = -1.199987999968e-6*t816;
  t4083 = t3991 + t4002 + t4049 + t4062 + t4072;
  t4132 = 0.803147*t1226;
  t4173 = 0.50315000001605*t687;
  t4175 = 0.00130540515936178*t816;
  t4176 = t4132 + t4173 + t4175;
  t4196 = -5.04e-14*var1[11];
  t4197 = -0.03988959484*t687;
  t4198 = 6.38224e-13*t3424;
  t4201 = -0.041195*t520;
  t4205 = 0.299996999992*t816;
  t4212 = t4196 + t4197 + t4198 + t4201 + t4205;
  t4263 = -1.*t429;
  t4273 = 1. + t4263;
  t4283 = -0.15121*t1634;
  t4302 = -1.2484e-7*var1[10];
  t4310 = 2.479936e-18*t1399;
  t4314 = -1.54996e-7*t467;
  t4317 = 1.124840000016e-6*t1044;
  t4343 = t518*t4083;
  t4344 = -4.e-6*t1044*t4176;
  t4349 = 4.e-6*t1399*t4212;
  t4350 = t4302 + t4310 + t4314 + t4317 + t4343 + t4344 + t4349;
  t4372 = 0.281210000008499*t1399;
  t4377 = -0.03874900000062*t1044;
  t4382 = 4.e-6*t1044*t4083;
  t4383 = t1822*t4176;
  t4384 = -1.*t1044*t4212;
  t4386 = t4372 + t4377 + t4382 + t4383 + t4384;
  t3770 = 4.e-6*t1399*t3769;
  t3797 = t430*t3776;
  t3799 = t3770 + t3797;
  t3801 = t3799*t2434;
  t3884 = -1.*t3883*t1634;
  t3908 = t429*t3907;
  t3911 = t3884 + t3908;
  t3915 = t357*t3911;
  t3918 = t429*t3883;
  t3935 = t1634*t3907;
  t3938 = t3918 + t3935;
  t3954 = -1.*t3938*t2387;
  t3957 = t3915 + t3954;
  t3959 = -1.*t2579*t3957;
  t3965 = t3801 + t3959;
  t3978 = -4.9936e-13*var1[10];
  t3979 = -0.038749*t1399;
  t3981 = 6.19984e-13*t467;
  t3989 = -0.281210000004*t1044;
  t4104 = 4.e-6*t1399*t4083;
  t4180 = t1044*t4176;
  t4214 = t430*t4212;
  t4225 = 0. + t3978 + t3979 + t3981 + t3989 + t4104 + t4180 + t4214;
  t4281 = 0.15121*t4273;
  t4369 = -1.*t1634*t4350;
  t4388 = t429*t4386;
  t4393 = t4281 + t4283 + t4369 + t4388;
  t4399 = t357*t4393;
  t4408 = -0.15121*t4273;
  t4412 = t429*t4350;
  t4413 = t1634*t4386;
  t4421 = t4408 + t4283 + t4412 + t4413;
  t4425 = -1.*t4421*t2387;
  t4427 = 0. + t4399 + t4425;
  t4498 = t2434*t4225;
  t4509 = -1.*t2579*t4427;
  t3222 = t1044*t3147;
  t3420 = 4.e-6*t1399*t3413;
  t3473 = t430*t3471;
  t3493 = 0. + t3222 + t3420 + t3473;
  t3561 = -1.*t1634*t3557;
  t3600 = t429*t3597;
  t3625 = 0. + t3561 + t3600;
  t3635 = t357*t3625;
  t3645 = t429*t3557;
  t3671 = t1634*t3597;
  t3725 = 0. + t3645 + t3671;
  t3733 = -1.*t3725*t2387;
  t3760 = 0. + t3635 + t3733;
  t4493 = t3799*t2579;
  t4495 = t2434*t3957;
  t4496 = t4493 + t4495;
  t4463 = t4225*t2579;
  t4464 = t2434*t4427;
  t4475 = 0. + t4463 + t4464;
  t4549 = 0. + t4498 + t4509;
  t4560 = t2434*t3493;
  t4563 = -1.*t2579*t3760;
  t4244 = -1.*t4225*t2579;
  t4428 = -1.*t2434*t4427;
  t4431 = t4244 + t4428;
  t4564 = t4560 + t4563;
  t3506 = t3493*t2579;
  t3764 = t2434*t3760;
  t3768 = 0. + t3506 + t3764;
  t4539 = t4498 + t4509;
  t4589 = t357*t4421;
  t4592 = t4393*t2387;
  t4594 = 0. + t4589 + t4592;
  t4608 = 0. + t4560 + t4563;
  t4737 = -1.*t357*t1892;
  t4739 = -1.*t2366*t2387;
  t4754 = t4737 + t4739;
  t4759 = t2594 + t2600;
  t4663 = t357*t3725;
  t4668 = t3625*t2387;
  t4676 = 0. + t4663 + t4668;
  t4567 = t357*t3938;
  t4573 = t3911*t2387;
  t4581 = t4567 + t4573;
  t4599 = t4581*t4594;
  t4786 = -1.*t357*t4421;
  t4799 = -1.*t4393*t2387;
  t4800 = t4786 + t4799;
  t4850 = t3635 + t3733;
  t4821 = t4399 + t4425;
  t4677 = -1.*t4676*t4594;
  t4820 = t3957*t4594;
  t4825 = t4581*t4821;
  t4826 = -1.*t357*t3938;
  t4830 = -1.*t3911*t2387;
  t4833 = t4826 + t4830;
  t4863 = -1.*t4850*t4594;
  t4864 = -1.*t4676*t4821;
  t4865 = -1.*t357*t3725;
  t4866 = -1.*t3625*t2387;
  t4867 = t4865 + t4866;
  t4603 = t4496*t4475;
  t4604 = t3965*t4549;
  t4605 = t4599 + t4603 + t4604;
  t4694 = -1.*t3768*t4475;
  t4695 = -1.*t4608*t4549;
  t4704 = t4677 + t4694 + t4695;
  t4956 = -0.15121*t429;
  t4988 = t4956 + t4283 + t4369 + t4388;
  t5004 = 0.15121*t1634;
  t5006 = -1.*t429*t4350;
  t5012 = -1.*t1634*t4386;
  t5014 = t4956 + t5004 + t5006 + t5012;
  t5066 = -1.*t429*t1555;
  t5067 = -1.*t1634*t1873;
  t5071 = t5066 + t5067;
  t5073 = t357*t5071;
  t5076 = t2301 + t2339;
  t5082 = -1.*t5076*t2387;
  t5083 = t5073 + t5082;
  t5107 = t357*t5076;
  t5118 = t5071*t2387;
  t5134 = t5107 + t5118;
  t5027 = -1.*t429*t3883;
  t5029 = -1.*t1634*t3907;
  t5030 = t5027 + t5029;
  t5019 = t3561 + t3600;
  t4950 = -1.*t429*t3557;
  t4951 = -1.*t1634*t3597;
  t4952 = t4950 + t4951;
  t4856 = t3799*t4225;
  t4858 = t3957*t4427;
  t4859 = t4856 + t4599 + t4858;
  t5255 = t357*t5019;
  t5259 = t4952*t2387;
  t5263 = t5255 + t5259;
  t5196 = t357*t5014;
  t5198 = -1.*t4988*t2387;
  t5200 = t5196 + t5198;
  t5202 = t357*t4988;
  t5203 = t5014*t2387;
  t5219 = t5202 + t5203;
  t5184 = t5030*t2387;
  t5187 = t3915 + t5184;
  t4875 = -1.*t3493*t4225;
  t4878 = -1.*t3760*t4427;
  t4879 = t4875 + t4677 + t4878;
  t5190 = t5187*t4594;
  t5222 = t4581*t5219;
  t5225 = t357*t5030;
  t5229 = t5225 + t4830;
  t5279 = -1.*t5263*t4594;
  t5317 = -1.*t4676*t5219;
  t5318 = t357*t4952;
  t5333 = -1.*t5019*t2387;
  t5335 = t5318 + t5333;
  t5444 = -1.000000000016*t1044*t3147;
  t5445 = 4.e-6*t430*t3413;
  t5446 = -1.*t430*t3471;
  t5451 = t5444 + t5445 + t5446;
  t5465 = -4.e-6*t430*t3147;
  t5471 = -1.6e-11*t1044*t3413;
  t5475 = 4.e-6*t1044*t3471;
  t5476 = t5465 + t5471 + t5475;
  t5494 = -0.03874900000062*t430;
  t5495 = 0.281210000008499*t1044;
  t5497 = 4.e-6*t430*t4083;
  t5499 = -1.000000000016*t1044*t4176;
  t5502 = -1.*t430*t4212;
  t5517 = t5494 + t5495 + t5497 + t5499 + t5502;
  t5529 = 1.124840000016e-6*t430;
  t5538 = 1.5499600000248e-7*t1044;
  t5553 = -1.6e-11*t1044*t4083;
  t5554 = -4.e-6*t430*t4176;
  t5556 = 4.e-6*t1044*t4212;
  t5557 = -1.2484e-7 + t5529 + t5538 + t5553 + t5554 + t5556;
  t5597 = 4.e-6*t430*t3769;
  t5604 = -1.*t430*t3776;
  t5606 = t5597 + t5604;
  t5611 = -1.6e-11*t3769*t1044;
  t5615 = 4.e-6*t3776*t1044;
  t5618 = t5611 + t5615;
  t5524 = t1634*t5517;
  t5559 = t429*t5557;
  t5560 = t5524 + t5559;
  t5562 = t429*t5517;
  t5563 = -1.*t1634*t5557;
  t5565 = t5562 + t5563;
  t5581 = -0.281210000004*t430;
  t5583 = t430*t4176;
  t5587 = -4.9936e-13 + t5581 + t4377 + t4382 + t5583 + t4384;
  t5570 = t430*t3147;
  t5577 = t5570 + t3568 + t3573;
  t5670 = t3978 + t3979 + t3981 + t3989 + t4104 + t4180 + t4214;
  t5590 = -1.*t3493*t5587;
  t5638 = t3799*t5587;
  t5749 = 4.e-6*t430*t963;
  t5750 = -1.000000000016*t1044*t1342;
  t5751 = -1.*t430*t1498;
  t5752 = t5749 + t5750 + t5751;
  t5754 = -1.6e-11*t1044*t963;
  t5755 = -4.e-6*t430*t1342;
  t5759 = 4.e-6*t1044*t1498;
  t5761 = t5754 + t5755 + t5759;
  t5484 = t1634*t5451;
  t5490 = t429*t5476;
  t5491 = t5484 + t5490;
  t5463 = t429*t5451;
  t5479 = -1.*t1634*t5476;
  t5480 = t5463 + t5479;
  t5627 = t5606*t1634;
  t5628 = t429*t5618;
  t5630 = t5627 + t5628;
  t5610 = t429*t5606;
  t5621 = -1.*t1634*t5618;
  t5624 = t5610 + t5621;
  t5637 = t3907*t4225;
  t5794 = t357*t5630;
  t5797 = t5624*t2387;
  t5799 = t5794 + t5797;
  t5580 = -1.*t5577*t4225;
  t5790 = t357*t5491;
  t5791 = t5480*t2387;
  t5792 = t5790 + t5791;
  t5807 = t357*t5565;
  t5809 = -1.*t5560*t2387;
  t5812 = t5807 + t5809;
  t5814 = t357*t5560;
  t5816 = t5565*t2387;
  t5818 = t5814 + t5816;
  t5779 = t1634*t5752;
  t5780 = t429*t5761;
  t5781 = t5779 + t5780;
  t5773 = t429*t5752;
  t5776 = -1.*t1634*t5761;
  t5777 = t5773 + t5776;
  t5768 = t430*t1342;
  t5771 = t1658 + t5768 + t1843;
  t5778 = t357*t5777;
  t5783 = -1.*t5781*t2387;
  t5784 = t5778 + t5783;
  t5853 = t357*t5781;
  t5867 = t5777*t2387;
  t5872 = t5853 + t5867;
  t5877 = t2434*t5771;
  t5886 = -1.*t2579*t5784;
  t5891 = t5877 + t5886;
  t5830 = t357*t5480;
  t5837 = -1.*t5491*t2387;
  t5838 = t5830 + t5837;
  t5803 = t357*t5624;
  t5804 = -1.*t5630*t2387;
  t5805 = t5803 + t5804;
  t5802 = t5799*t4594;
  t5820 = t4581*t5818;
  t5943 = t3907*t2579;
  t5944 = t2434*t5805;
  t5946 = t5943 + t5944;
  t5829 = -1.*t5792*t4594;
  t5842 = -1.*t4676*t5818;
  t5925 = t5577*t2579;
  t5927 = t2434*t5838;
  t5940 = t5925 + t5927;
  t5985 = t5587*t2579;
  t5989 = t2434*t5812;
  t5990 = t5985 + t5989;
  t5995 = t2434*t5587;
  t6001 = -1.*t2579*t5812;
  t6003 = t5995 + t6001;
  t6054 = 0.00130540515936178*t520;
  t6056 = -0.2999969999968001*t816;
  t6057 = t6054 + t6056;
  t6063 = -1.199987999968e-6*t520;
  t6064 = -5.2216206374471e-9*t816;
  t6082 = -1.26e-8 + t6063 + t6064;
  t6085 = 0.299996999992*t520;
  t6086 = -5.04e-14 + t6085 + t4175;
  t6062 = -4.e-6*t1044*t6057;
  t6084 = t518*t6082;
  t6087 = 4.e-6*t1399*t6086;
  t6088 = t6062 + t6084 + t6087;
  t6091 = t1822*t6057;
  t6097 = 4.e-6*t1044*t6082;
  t6100 = -1.*t1044*t6086;
  t6106 = t6091 + t6097 + t6100;
  t6125 = 0.004352*t520;
  t6131 = t6125 + t3139;
  t6137 = -0.9999910000159999*t520;
  t6138 = -0.00435200000006963*t816;
  t6139 = t6137 + t6138;
  t6148 = -1.7408e-8*t520;
  t6149 = 3.999964000064e-6*t816;
  t6150 = t6148 + t6149;
  t6136 = 4.e-6*t1399*t6131;
  t6147 = -4.e-6*t1044*t6139;
  t6153 = t518*t6150;
  t6154 = t6136 + t6147 + t6153;
  t6159 = -1.*t1044*t6131;
  t6160 = t1822*t6139;
  t6163 = 4.e-6*t1044*t6150;
  t6164 = t6159 + t6160 + t6163;
  t5641 = t3911*t4393;
  t5645 = t3938*t4421;
  t5649 = t5641 + t5645 + t4856;
  t6199 = t430*t6131;
  t6200 = t1044*t6139;
  t6201 = 4.e-6*t1399*t6150;
  t6202 = t6199 + t6200 + t6201;
  t6089 = -1.*t1634*t6088;
  t6107 = t429*t6106;
  t6109 = t6089 + t6107;
  t6115 = t429*t6088;
  t6116 = t1634*t6106;
  t6119 = t6115 + t6116;
  t6184 = t1044*t6057;
  t6186 = 4.e-6*t1399*t6082;
  t6190 = t430*t6086;
  t6191 = t6184 + t6186 + t6190;
  t6193 = -1.*t6191*t3493;
  t5734 = t3883*t4350;
  t5736 = t3799*t5670;
  t5741 = t3907*t4386;
  t5743 = t5734 + t5736 + t5741;
  t6289 = -3.999964e-6*t520;
  t6292 = t6289 + t3374;
  t6295 = t3461 + t1307;
  t6246 = t3799*t6191;
  t6338 = -1.*t3147*t6057;
  t6343 = -1.*t3413*t6082;
  t6344 = -1.*t4083*t6150;
  t6346 = -1.*t6139*t4176;
  t6349 = -1.*t6086*t3471;
  t6350 = -1.*t6131*t4212;
  t6353 = t6338 + t6343 + t6344 + t6346 + t6349 + t6350;
  t6365 = t3769*t6082;
  t6366 = t3776*t6086;
  t6367 = t6365 + t6366;
  t6360 = t3769*t4083;
  t6361 = t3776*t4212;
  t6363 = t6360 + t6361;
  t6284 = -4.e-6*t1044*t6131;
  t6293 = t518*t6292;
  t6305 = 4.e-6*t1399*t6295;
  t6306 = t6284 + t6293 + t6305;
  t6314 = t1822*t6131;
  t6315 = 4.e-6*t1044*t6292;
  t6316 = -1.*t1044*t6295;
  t6317 = t6314 + t6315 + t6316;
  t6397 = t429*t6306;
  t6400 = t1634*t6317;
  t6401 = t6397 + t6400;
  t6391 = -1.*t1634*t6306;
  t6393 = t429*t6317;
  t6394 = t6391 + t6393;
  t6384 = t1044*t6131;
  t6385 = 4.e-6*t1399*t6292;
  t6386 = t430*t6295;
  t6388 = t6384 + t6385 + t6386;
  t6395 = t357*t6394;
  t6404 = -1.*t6401*t2387;
  t6405 = t6395 + t6404;
  t6414 = t357*t6401;
  t6415 = t6394*t2387;
  t6419 = t6414 + t6415;
  t6422 = t2434*t6388;
  t6425 = -1.*t2579*t6405;
  t6430 = t6422 + t6425;
  t6170 = t429*t6154;
  t6172 = t1634*t6164;
  t6173 = t6170 + t6172;
  t6157 = -1.*t1634*t6154;
  t6166 = t429*t6164;
  t6167 = t6157 + t6166;
  t6203 = -1.*t6202*t4225;
  t6451 = t357*t6119;
  t6453 = t6109*t2387;
  t6454 = t6451 + t6453;
  t6459 = t357*t6109;
  t6460 = -1.*t6119*t2387;
  t6462 = t6459 + t6460;
  t6468 = t357*t6173;
  t6469 = t6167*t2387;
  t6470 = t6468 + t6469;
  t6455 = t4581*t6454;
  t6477 = t357*t6167;
  t6478 = -1.*t6173*t2387;
  t6480 = t6477 + t6478;
  t6472 = -1.*t6454*t4676;
  t6476 = -1.*t6470*t4594;
  t6503 = t6191*t2579;
  t6504 = t2434*t6462;
  t6511 = t6503 + t6504;
  t6513 = t2434*t6191;
  t6516 = -1.*t2579*t6462;
  t6518 = t6513 + t6516;
  t6531 = t6202*t2579;
  t6532 = t2434*t6480;
  t6536 = t6531 + t6532;
  t2661 = t2430*t2415;
  t2665 = -1.*t342*t2635;
  t5414 = -1.*t3625*t4393;
  t5425 = -1.*t3725*t4421;
  t5439 = t5414 + t5425 + t4875;
  t5668 = -1.*t3557*t4350;
  t5671 = -1.*t3493*t5670;
  t5674 = -1.*t3597*t4386;
  t5679 = t5668 + t5671 + t5674;
  t6617 = -1.*t4083*t3413;
  t6618 = -1.*t3147*t4176;
  t6619 = -1.*t3471*t4212;
  t6620 = t6617 + t6618 + t6619;
  t4617 = -1.*t3493*t2579;
  t4622 = -1.*t2434*t3760;
  t4653 = t4617 + t4622;
  t6579 = t2519*t2579;
  t6580 = t2434*t2614;
  t6584 = 0. + t6579 + t6580;
  t4541 = -1.*t3799*t2579;
  t4543 = -1.*t2434*t3957;
  t4548 = t4541 + t4543;
  t2940 = t2544 + t2632;
  t6693 = -1.*t4581*t4594;
  t6708 = t4594*t2415;
  t6745 = -1.*t3957*t4594;
  t6748 = -1.*t4581*t4821;
  t6695 = -1.*t4496*t4475;
  t6696 = -1.*t3965*t4549;
  t6697 = t6693 + t6695 + t6696;
  t6763 = t4821*t2415;
  t6765 = t4594*t4759;
  t6709 = t4475*t6584;
  t6711 = t4549*t2635;
  t6712 = t6708 + t6709 + t6711;
  t6755 = -1.*t3799*t4225;
  t6758 = -1.*t3957*t4427;
  t6759 = t6755 + t6693 + t6758;
  t6770 = t4225*t2519;
  t6771 = t4427*t2614;
  t6773 = t6770 + t6708 + t6771;
  t6893 = -1.*t5187*t4594;
  t6895 = -1.*t4581*t5219;
  t6903 = t5219*t2415;
  t6904 = t4594*t5134;
  t6976 = t5587*t2519;
  t6985 = -1.*t3799*t5587;
  t6021 = t2434*t5577;
  t6028 = -1.*t2579*t5838;
  t6029 = t6021 + t6028;
  t6984 = -1.*t3907*t4225;
  t6977 = t4225*t5771;
  t5772 = t5771*t2579;
  t5785 = t2434*t5784;
  t5786 = t5772 + t5785;
  t7073 = -1.*t5799*t4594;
  t7084 = -1.*t4581*t5818;
  t5965 = t2434*t3907;
  t5971 = -1.*t2579*t5805;
  t5978 = t5965 + t5971;
  t7090 = t5818*t2415;
  t7095 = t4594*t5872;
  t6991 = -1.*t3911*t4393;
  t6993 = -1.*t3938*t4421;
  t6995 = t6991 + t6993 + t6755;
  t7144 = t6191*t2519;
  t7034 = -1.*t3883*t4350;
  t7036 = -1.*t3799*t5670;
  t7040 = -1.*t3907*t4386;
  t7045 = t7034 + t7036 + t7040;
  t7155 = -1.*t3799*t6191;
  t7180 = t4083*t6292;
  t7181 = t963*t6082;
  t7182 = t6131*t4176;
  t7185 = t6057*t1342;
  t7186 = t6295*t4212;
  t7187 = t6086*t1498;
  t7188 = t7180 + t7181 + t7182 + t7185 + t7186 + t7187;
  t7200 = -1.*t3769*t6082;
  t7201 = -1.*t3776*t6086;
  t7206 = t7200 + t7201;
  t7191 = -1.*t3769*t4083;
  t7195 = -1.*t3776*t4212;
  t7197 = t7191 + t7195;
  t6560 = t2434*t6202;
  t6561 = -1.*t2579*t6480;
  t6562 = t6560 + t6561;
  t7138 = t6388*t4225;
  t7244 = -1.*t4581*t6454;
  t6389 = t6388*t2579;
  t6408 = t2434*t6405;
  t6409 = t6389 + t6408;
  t7260 = t6419*t4594;
  t7262 = t6454*t2415;
  t6667 = t2430*t4676;
  t6668 = -1.*t342*t4608;
  t6961 = t4393*t2366;
  t6965 = t4421*t1892;
  t6968 = t6961 + t6965 + t6770;
  t7008 = t4350*t1555;
  t7009 = t5670*t2519;
  t7011 = t4386*t1873;
  t7013 = t7008 + t7009 + t7011;
  t7328 = t963*t4083;
  t7329 = t4176*t1342;
  t7330 = t4212*t1498;
  t7333 = t7328 + t7329 + t7330;
  t7402 = t4676*t4594;
  t7418 = -1.*t4594*t2415;
  t7447 = t4850*t4594;
  t7448 = t4676*t4821;
  t7403 = t3768*t4475;
  t7406 = t4608*t4549;
  t7407 = t7402 + t7403 + t7406;
  t7459 = -1.*t4821*t2415;
  t7460 = -1.*t4594*t4759;
  t7419 = -1.*t4475*t6584;
  t7420 = -1.*t4549*t2635;
  t7421 = t7418 + t7419 + t7420;
  t7452 = t3493*t4225;
  t7454 = t3760*t4427;
  t7455 = t7452 + t7402 + t7454;
  t7464 = -1.*t4225*t2519;
  t7465 = -1.*t4427*t2614;
  t7466 = t7464 + t7418 + t7465;
  t7533 = t5263*t4594;
  t7535 = t4676*t5219;
  t7542 = -1.*t5219*t2415;
  t7543 = -1.*t4594*t5134;
  t7572 = -1.*t5587*t2519;
  t7585 = t3493*t5587;
  t7584 = t5577*t4225;
  t7573 = -1.*t4225*t5771;
  t7634 = t5792*t4594;
  t7637 = t4676*t5818;
  t7641 = -1.*t5818*t2415;
  t7645 = -1.*t4594*t5872;
  t7576 = -1.*t4393*t2366;
  t7577 = -1.*t4421*t1892;
  t7578 = t7576 + t7577 + t7464;
  t7588 = t3625*t4393;
  t7589 = t3725*t4421;
  t7590 = t7588 + t7589 + t7452;
  t7604 = -1.*t4350*t1555;
  t7605 = -1.*t5670*t2519;
  t7606 = -1.*t4386*t1873;
  t7607 = t7604 + t7605 + t7606;
  t7617 = t3557*t4350;
  t7618 = t3493*t5670;
  t7619 = t3597*t4386;
  t7620 = t7617 + t7618 + t7619;
  t7675 = -1.*t6191*t2519;
  t7683 = t6191*t3493;
  t7728 = t3147*t6057;
  t7729 = t3413*t6082;
  t7730 = t4083*t6150;
  t7732 = t6139*t4176;
  t7733 = t6086*t3471;
  t7734 = t6131*t4212;
  t7735 = t7728 + t7729 + t7730 + t7732 + t7733 + t7734;
  t7720 = -1.*t4083*t6292;
  t7721 = -1.*t963*t6082;
  t7722 = -1.*t6131*t4176;
  t7723 = -1.*t6057*t1342;
  t7724 = -1.*t6295*t4212;
  t7725 = -1.*t6086*t1498;
  t7726 = t7720 + t7721 + t7722 + t7723 + t7724 + t7725;
  t7714 = t4083*t3413;
  t7716 = t3147*t4176;
  t7717 = t3471*t4212;
  t7718 = t7714 + t7716 + t7717;
  t7709 = -1.*t963*t4083;
  t7710 = -1.*t4176*t1342;
  t7711 = -1.*t4212*t1498;
  t7712 = t7709 + t7710 + t7711;
  t7684 = t6202*t4225;
  t7674 = -1.*t6388*t4225;
  t7745 = t6454*t4676;
  t7747 = t6470*t4594;
  t7752 = -1.*t6419*t4594;
  t7754 = -1.*t6454*t2415;
  t7358 = t2430*t4581;
  t7359 = -1.*t342*t3965;
  t7360 = t7358 + t7359;
  p_output1[0]=(-1.*t2430*t2635 - 1.*t2415*t342)*var2[1] + (t2661 + t2665)*var2[2];
  p_output1[1]=t2940*var2[0] - 1.*t2870*t342*var2[1] + t2430*t2870*var2[2] + (t3768*(t3965*t4431 + t3965*t4475 + t4496*t4539 + t4548*t4549) + t4564*t4605 + t4496*(-1.*t3768*t4539 - 1.*t4475*t4564 - 1.*t4431*t4608 - 1.*t4549*t4653) + t3965*t4704)*var2[3];
  p_output1[2]=t2434*t4754*var2[0] + (t2579*t342*t4754 + t2430*t4759)*var2[1] + (-1.*t2430*t2579*t4754 + t342*t4759)*var2[2] + (t2434*t4704*t4833 + t3768*(-1.*t2579*t3965*t4800 + t2434*t4496*t4800 + t4820 + t4825 + t2434*t4475*t4833 - 1.*t2579*t4549*t4833) + t2434*t4605*t4867 + t4496*(-1.*t2434*t3768*t4800 + t2579*t4608*t4800 + t4863 + t4864 - 1.*t2434*t4475*t4867 + t2579*t4549*t4867))*var2[3] + (t4676*(t3957*t4800 + t4820 + t4825 + t4427*t4833) + t4850*t4859 + t4581*(-1.*t3760*t4800 + t4863 + t4864 - 1.*t4427*t4867) + t3957*t4879)*var2[4];
  p_output1[3]=t2434*t5083*var2[0] + (t2579*t342*t5083 + t2430*t5134)*var2[1] + (-1.*t2430*t2579*t5083 + t342*t5134)*var2[2] + (t2434*t4704*t5229 + t3768*(t5190 - 1.*t2579*t3965*t5200 + t2434*t4496*t5200 + t5222 + t2434*t4475*t5229 - 1.*t2579*t4549*t5229) + t2434*t4605*t5335 + t4496*(-1.*t2434*t3768*t5200 + t2579*t4608*t5200 + t5279 + t5317 - 1.*t2434*t4475*t5335 + t2579*t4549*t5335))*var2[3] + (t4879*t5187 + t4676*(t5190 + t3957*t5200 + t5222 + t4427*t5229) + t4859*t5263 + t4581*(-1.*t3760*t5200 + t5279 + t5317 - 1.*t4427*t5335))*var2[4] + (t3799*(-1.*t4393*t4952 - 1.*t3725*t4988 - 1.*t3625*t5014 - 1.*t4421*t5019) + t3493*(t3911*t4421 + t3938*t4988 + t3911*t5014 + t4393*t5030))*var2[5];
  p_output1[4]=t5786*var2[0] + (t2430*t5872 - 1.*t342*t5891)*var2[1] + (t342*t5872 + t2430*t5891)*var2[2] + (t4605*t5940 + t4704*t5946 + t3768*(t5802 + t5820 + t4475*t5946 + t4549*t5978 + t4496*t5990 + t3965*t6003) + t4496*(t5829 + t5842 - 1.*t4475*t5940 - 1.*t3768*t5990 - 1.*t4608*t6003 - 1.*t4549*t6029))*var2[3] + (t4859*t5792 + t4879*t5799 + t4676*(t5637 + t5638 + t5802 + t4427*t5805 + t3957*t5812 + t5820) + t4581*(t5580 + t5590 - 1.*t3760*t5812 + t5829 - 1.*t4427*t5838 + t5842))*var2[4] + (t3907*t5439 + t3799*(-1.*t4393*t5480 - 1.*t4421*t5491 - 1.*t3725*t5560 - 1.*t3625*t5565 + t5580 + t5590) + t3493*(t3938*t5560 + t3911*t5565 + t4393*t5624 + t4421*t5630 + t5637 + t5638) + t5577*t5649)*var2[5] + (t3493*(t3907*t5517 + t3883*t5557 + t4386*t5606 + t4350*t5618 + t5638 + t3907*t5670) + t3799*(-1.*t4386*t5451 - 1.*t4350*t5476 - 1.*t3597*t5517 - 1.*t3557*t5557 + t5590 - 1.*t5577*t5670) + t3907*t5679 + t5577*t5743 - 0.15121*t5752 - 0.15121*t5761)*var2[9];
  p_output1[5]=t6409*var2[0] + (t2430*t6419 - 1.*t342*t6430)*var2[1] + (t342*t6419 + t2430*t6430)*var2[2] + (t3768*(t6455 + t4496*t6511 + t3965*t6518) + t4605*t6536 + t4496*(t6472 + t6476 - 1.*t3768*t6511 - 1.*t4608*t6518 - 1.*t4475*t6536 - 1.*t4549*t6562))*var2[3] + (t4676*(t6246 + t6455 + t3957*t6462) + t4859*t6470 + t4581*(t6193 + t6203 - 1.*t3760*t6462 + t6472 + t6476 - 1.*t4427*t6480))*var2[4] + (t5649*t6202 + t3799*(-1.*t3625*t6109 - 1.*t3725*t6119 - 1.*t4393*t6167 - 1.*t4421*t6173 + t6193 + t6203) + t3493*(t3911*t6109 + t3938*t6119 + t6246))*var2[5] + (t5743*t6202 + t3799*(-1.*t3557*t6088 - 1.*t3597*t6106 - 1.*t4350*t6154 - 1.*t4386*t6164 + t6193 - 1.*t5670*t6202) + t3493*(t3883*t6088 + t3907*t6106 + t6246) - 0.15121*t6306 - 0.15121*t6317)*var2[9] + (-0.038749*t6131 + 1.e-6*t6292 - 0.28121*t6295 - 1.*t3769*t6353 - 1.*t6150*t6363 - 1.*t3413*t6367 + 4.e-6*(-1.*t3776*t6353 - 1.*t6131*t6363 - 1.*t3471*t6367))*var2[10];
  p_output1[6]=t6584;
  p_output1[7]=0. + t2661 + t2665;
  p_output1[8]=0. + t2430*t2635 + t2415*t342;
  p_output1[9]=t3768*t4605 + t4496*t4704;
  p_output1[10]=t4676*t4859 + t4581*t4879;
  p_output1[11]=t3799*t5439 + t3493*t5649;
  p_output1[12]=-0.15121*t1555 - 0.15121*t1873 + t3799*t5679 + t3493*t5743;
  p_output1[13]=-0.038749*t1342 - 0.28121*t1498 - 1.*t3413*t6363 - 1.*t3769*t6620 + 4.e-6*(-1.*t3471*t6363 - 1.*t3776*t6620) + 1.e-6*t963;
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t2430*t4608 - 1.*t342*t4676)*var2[1] + (t6667 + t6668)*var2[2];
  p_output1[16]=t4564*var2[0] - 1.*t342*t4653*var2[1] + t2430*t4653*var2[2] + ((-1.*t3965*t4431 - 1.*t3965*t4475 - 1.*t4496*t4539 - 1.*t4548*t4549)*t6584 + t4496*(t2635*t4431 + t2940*t4475 + t2870*t4549 + t4539*t6584) + t2940*t6697 + t3965*t6712)*var2[3];
  p_output1[17]=t2434*t4867*var2[0] + (t2430*t4850 + t2579*t342*t4867)*var2[1] + (t342*t4850 - 1.*t2430*t2579*t4867)*var2[2] + (t2434*t4754*t6697 + t2434*t4833*t6712 + t6584*(t2579*t3965*t4800 - 1.*t2434*t4496*t4800 - 1.*t2434*t4475*t4833 + t2579*t4549*t4833 + t6745 + t6748) + t4496*(t2434*t4475*t4754 - 1.*t2579*t4549*t4754 - 1.*t2579*t2635*t4800 + t2434*t4800*t6584 + t6763 + t6765))*var2[3] + (t2415*(-1.*t3957*t4800 - 1.*t4427*t4833 + t6745 + t6748) + t4759*t6759 + t4581*(t4427*t4754 + t2614*t4800 + t6763 + t6765) + t3957*t6773)*var2[4];
  p_output1[18]=t2434*t5335*var2[0] + (t2430*t5263 + t2579*t342*t5335)*var2[1] + (t342*t5263 - 1.*t2430*t2579*t5335)*var2[2] + (t2434*t5083*t6697 + t2434*t5229*t6712 + t6584*(t2579*t3965*t5200 - 1.*t2434*t4496*t5200 - 1.*t2434*t4475*t5229 + t2579*t4549*t5229 + t6893 + t6895) + t4496*(t2434*t4475*t5083 - 1.*t2579*t4549*t5083 - 1.*t2579*t2635*t5200 + t2434*t5200*t6584 + t6903 + t6904))*var2[3] + (t5134*t6759 + t5187*t6773 + t2415*(-1.*t3957*t5200 - 1.*t4427*t5229 + t6893 + t6895) + t4581*(t4427*t5083 + t2614*t5200 + t6903 + t6904))*var2[4] + (t2519*(-1.*t3911*t4421 - 1.*t3938*t4988 - 1.*t3911*t5014 - 1.*t4393*t5030) + t3799*(t1892*t4988 + t2366*t5014 + t4393*t5071 + t4421*t5076))*var2[5];
  p_output1[19]=t5940*var2[0] + (t2430*t5792 - 1.*t342*t6029)*var2[1] + (t342*t5792 + t2430*t6029)*var2[2] + (t5786*t6697 + t5946*t6712 + t6584*(-1.*t4475*t5946 - 1.*t4549*t5978 - 1.*t4496*t5990 - 1.*t3965*t6003 + t7073 + t7084) + t4496*(t4475*t5786 + t4549*t5891 + t2635*t6003 + t5990*t6584 + t7090 + t7095))*var2[3] + (t5872*t6759 + t5799*t6773 + t2415*(-1.*t4427*t5805 - 1.*t3957*t5812 + t6984 + t6985 + t7073 + t7084) + t4581*(t4427*t5784 + t2614*t5812 + t6976 + t6977 + t7090 + t7095))*var2[4] + (t3907*t6968 + t3799*(t1892*t5560 + t2366*t5565 + t4393*t5777 + t4421*t5781 + t6976 + t6977) + t2519*(-1.*t3938*t5560 - 1.*t3911*t5565 - 1.*t4393*t5624 - 1.*t4421*t5630 + t6984 + t6985) + t5771*t6995)*var2[5] + (-0.15121*t5451 - 0.15121*t5476 + t3799*(t1873*t5517 + t1555*t5557 + t4386*t5752 + t4350*t5761 + t5670*t5771 + t6976) + t2519*(-1.*t3907*t5517 - 1.*t3883*t5557 - 1.*t4386*t5606 - 1.*t4350*t5618 - 1.*t3907*t5670 + t6985) + t3907*t7013 + t5771*t7045)*var2[9];
  p_output1[20]=t6536*var2[0] + (t2430*t6470 - 1.*t342*t6562)*var2[1] + (t342*t6470 + t2430*t6562)*var2[2] + (t6409*t6697 + t6584*(-1.*t4496*t6511 - 1.*t3965*t6518 + t7244) + t4496*(t4475*t6409 + t4549*t6430 + t2635*t6518 + t6511*t6584 + t7260 + t7262))*var2[3] + (t6419*t6759 + t2415*(-1.*t3957*t6462 + t7155 + t7244) + t4581*(t4427*t6405 + t2614*t6462 + t7138 + t7144 + t7260 + t7262))*var2[4] + (t6388*t6995 + t3799*(t2366*t6109 + t1892*t6119 + t4393*t6394 + t4421*t6401 + t7138 + t7144) + t2519*(-1.*t3911*t6109 - 1.*t3938*t6119 + t7155))*var2[5] + (-0.15121*t6154 - 0.15121*t6164 + t6388*t7045 + t3799*(t1555*t6088 + t1873*t6106 + t4350*t6306 + t4386*t6317 + t5670*t6388 + t7144) + t2519*(-1.*t3883*t6088 - 1.*t3907*t6106 + t7155))*var2[9] + (-0.28121*t6131 - 0.038749*t6139 + 1.e-6*t6150 - 1.*t3769*t7188 - 1.*t6292*t7197 + 4.e-6*(-1.*t3776*t7188 - 1.*t6295*t7197 - 1.*t1498*t7206) - 1.*t7206*t963)*var2[10];
  p_output1[21]=t3768;
  p_output1[22]=0. + t6667 + t6668;
  p_output1[23]=0. + t2430*t4608 + t342*t4676;
  p_output1[24]=t6584*t6697 + t4496*t6712;
  p_output1[25]=t2415*t6759 + t4581*t6773;
  p_output1[26]=t3799*t6968 + t2519*t6995;
  p_output1[27]=-0.15121*t3557 - 0.15121*t3597 + t3799*t7013 + t2519*t7045;
  p_output1[28]=-0.038749*t3147 + 1.e-6*t3413 - 0.28121*t3471 - 1.*t3769*t7333 + 4.e-6*(-1.*t1498*t7197 - 1.*t3776*t7333) - 1.*t7197*t963;
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t2430*t3965 - 1.*t342*t4581)*var2[1] + t7360*var2[2];
  p_output1[31]=t3965*var2[0] - 1.*t342*t4548*var2[1] + t2430*t4548*var2[2] + ((t3768*t4539 + t4475*t4564 + t4431*t4608 + t4549*t4653)*t6584 + t3768*(-1.*t2635*t4431 - 1.*t2940*t4475 - 1.*t2870*t4549 - 1.*t4539*t6584) + t2940*t7407 + t4564*t7421)*var2[3];
  p_output1[32]=t2434*t4833*var2[0] + (t2430*t3957 + t2579*t342*t4833)*var2[1] + (t342*t3957 - 1.*t2430*t2579*t4833)*var2[2] + (t2434*t4754*t7407 + t2434*t4867*t7421 + t6584*(t2434*t3768*t4800 - 1.*t2579*t4608*t4800 + t2434*t4475*t4867 - 1.*t2579*t4549*t4867 + t7447 + t7448) + t3768*(-1.*t2434*t4475*t4754 + t2579*t4549*t4754 + t2579*t2635*t4800 - 1.*t2434*t4800*t6584 + t7459 + t7460))*var2[3] + (t2415*(t3760*t4800 + t4427*t4867 + t7447 + t7448) + t4759*t7455 + t4676*(-1.*t4427*t4754 - 1.*t2614*t4800 + t7459 + t7460) + t4850*t7466)*var2[4];
  p_output1[33]=t2434*t5229*var2[0] + (t2430*t5187 + t2579*t342*t5229)*var2[1] + (t342*t5187 - 1.*t2430*t2579*t5229)*var2[2] + (t2434*t5083*t7407 + t2434*t5335*t7421 + t6584*(t2434*t3768*t5200 - 1.*t2579*t4608*t5200 + t2434*t4475*t5335 - 1.*t2579*t4549*t5335 + t7533 + t7535) + t3768*(-1.*t2434*t4475*t5083 + t2579*t4549*t5083 + t2579*t2635*t5200 - 1.*t2434*t5200*t6584 + t7542 + t7543))*var2[3] + (t5134*t7455 + t5263*t7466 + t2415*(t3760*t5200 + t4427*t5335 + t7533 + t7535) + t4676*(-1.*t4427*t5083 - 1.*t2614*t5200 + t7542 + t7543))*var2[4] + (t2519*(t4393*t4952 + t3725*t4988 + t3625*t5014 + t4421*t5019) + t3493*(-1.*t1892*t4988 - 1.*t2366*t5014 - 1.*t4393*t5071 - 1.*t4421*t5076))*var2[5];
  p_output1[34]=t5946*var2[0] + (t2430*t5799 - 1.*t342*t5978)*var2[1] + (t342*t5799 + t2430*t5978)*var2[2] + (t5786*t7407 + t5940*t7421 + t6584*(t4475*t5940 + t3768*t5990 + t4608*t6003 + t4549*t6029 + t7634 + t7637) + t3768*(-1.*t4475*t5786 - 1.*t4549*t5891 - 1.*t2635*t6003 - 1.*t5990*t6584 + t7641 + t7645))*var2[3] + (t5872*t7455 + t5792*t7466 + t2415*(t3760*t5812 + t4427*t5838 + t7584 + t7585 + t7634 + t7637) + t4676*(-1.*t4427*t5784 - 1.*t2614*t5812 + t7572 + t7573 + t7641 + t7645))*var2[4] + (t3493*(-1.*t1892*t5560 - 1.*t2366*t5565 - 1.*t4393*t5777 - 1.*t4421*t5781 + t7572 + t7573) + t5577*t7578 + t2519*(t4393*t5480 + t4421*t5491 + t3725*t5560 + t3625*t5565 + t7584 + t7585) + t5771*t7590)*var2[5] + (-0.15121*t5606 - 0.15121*t5618 + t3493*(-1.*t1873*t5517 - 1.*t1555*t5557 - 1.*t4386*t5752 - 1.*t4350*t5761 - 1.*t5670*t5771 + t7572) + t2519*(t4386*t5451 + t4350*t5476 + t3597*t5517 + t3557*t5557 + t5577*t5670 + t7585) + t5577*t7607 + t5771*t7620)*var2[9];
  p_output1[35]=(t6409*t7407 + t6536*t7421 + t6584*(t3768*t6511 + t4608*t6518 + t4475*t6536 + t4549*t6562 + t7745 + t7747) + t3768*(-1.*t4475*t6409 - 1.*t4549*t6430 - 1.*t2635*t6518 - 1.*t6511*t6584 + t7752 + t7754))*var2[3] + (t6419*t7455 + t6470*t7466 + t2415*(t3760*t6462 + t4427*t6480 + t7683 + t7684 + t7745 + t7747) + t4676*(-1.*t4427*t6405 - 1.*t2614*t6462 + t7674 + t7675 + t7752 + t7754))*var2[4] + (t6202*t7578 + t6388*t7590 + t3493*(-1.*t2366*t6109 - 1.*t1892*t6119 - 1.*t4393*t6394 - 1.*t4421*t6401 + t7674 + t7675) + t2519*(t3625*t6109 + t3725*t6119 + t4393*t6167 + t4421*t6173 + t7683 + t7684))*var2[5] + (t6202*t7607 + t6388*t7620 + t3493*(-1.*t1555*t6088 - 1.*t1873*t6106 - 1.*t4350*t6306 - 1.*t4386*t6317 - 1.*t5670*t6388 + t7675) + t2519*(t3557*t6088 + t3597*t6106 + t4350*t6154 + t4386*t6164 + t5670*t6202 + t7683))*var2[9] + (-1.*t6150*t7712 - 1.*t6292*t7718 - 1.*t3413*t7726 + 4.e-6*(-1.*t6131*t7712 - 1.*t6295*t7718 - 1.*t3471*t7726 - 1.*t1498*t7735) - 1.*t7735*t963)*var2[10];
  p_output1[36]=t4496;
  p_output1[37]=t7360;
  p_output1[38]=t2430*t3965 + t342*t4581;
  p_output1[39]=t6584*t7407 + t3768*t7421;
  p_output1[40]=t2415*t7455 + t4676*t7466;
  p_output1[41]=t3493*t7578 + t2519*t7590;
  p_output1[42]=-0.15121*t3883 - 0.15121*t3907 + t3493*t7607 + t2519*t7620;
  p_output1[43]=1.e-6*t3769 - 0.28121*t3776 - 1.*t3413*t7712 + 4.e-6*(-1.*t3471*t7712 - 1.*t1498*t7718) - 1.*t7718*t963;
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_DiagonalStance1.hh"

namespace DiagonalStance1
{

void J_dh_FrFoot_DiagonalStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
