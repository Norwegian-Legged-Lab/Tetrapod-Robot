/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:25 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t315;
  double t409;
  double t528;
  double t543;
  double t89;
  double t1182;
  double t529;
  double t775;
  double t1155;
  double t1308;
  double t1348;
  double t1207;
  double t1208;
  double t1215;
  double t1251;
  double t1264;
  double t1373;
  double t1383;
  double t1647;
  double t1887;
  double t190;
  double t214;
  double t305;
  double t1162;
  double t1282;
  double t1774;
  double t1777;
  double t76;
  double t1949;
  double t1965;
  double t1975;
  double t1976;
  double t1982;
  double t1996;
  double t62;
  double t2098;
  double t2117;
  double t2125;
  double t1816;
  double t2042;
  double t2071;
  double t2300;
  double t2360;
  double t2090;
  double t2330;
  double t2343;
  double t57;
  double t2385;
  double t2405;
  double t2431;
  double t2434;
  double t2456;
  double t2464;
  double t2480;
  double t2589;
  double t2590;
  double t2615;
  double t2621;
  double t2629;
  double t2773;
  double t2781;
  double t2789;
  double t2862;
  double t2868;
  double t2875;
  double t2879;
  double t2880;
  double t2892;
  double t2893;
  double t2901;
  double t2902;
  double t2924;
  double t2931;
  double t2970;
  double t2984;
  double t3032;
  double t3069;
  double t3073;
  double t3102;
  double t3134;
  double t3140;
  double t3150;
  double t3162;
  double t3316;
  double t3349;
  double t3350;
  double t3351;
  double t3402;
  double t3425;
  double t3460;
  double t3471;
  double t3483;
  double t3487;
  double t3628;
  double t3656;
  double t3687;
  double t3700;
  double t3712;
  double t3728;
  double t3739;
  double t3759;
  double t3761;
  double t3777;
  double t3788;
  double t3796;
  double t3799;
  double t3806;
  double t3807;
  double t3809;
  double t3810;
  double t3838;
  double t3844;
  double t3854;
  double t3859;
  double t3865;
  double t3903;
  double t3905;
  double t3906;
  double t3909;
  double t3917;
  double t3919;
  double t3925;
  double t3930;
  double t3938;
  double t3942;
  double t3943;
  double t3950;
  double t3333;
  double t3365;
  double t3371;
  double t3382;
  double t3466;
  double t3503;
  double t3522;
  double t3523;
  double t3531;
  double t3541;
  double t3558;
  double t3570;
  double t3578;
  double t3584;
  double t3586;
  double t3607;
  double t3613;
  double t3623;
  double t3624;
  double t3746;
  double t3791;
  double t3813;
  double t3828;
  double t3845;
  double t3920;
  double t3960;
  double t3962;
  double t3981;
  double t3990;
  double t3991;
  double t3992;
  double t3998;
  double t3999;
  double t4001;
  double t4092;
  double t4093;
  double t2876;
  double t2910;
  double t2987;
  double t3015;
  double t3107;
  double t3184;
  double t3191;
  double t3195;
  double t3198;
  double t3205;
  double t3207;
  double t3261;
  double t3283;
  double t4045;
  double t4053;
  double t4078;
  double t4020;
  double t4021;
  double t4025;
  double t4115;
  double t4131;
  double t4144;
  double t3834;
  double t4003;
  double t4007;
  double t4145;
  double t3030;
  double t3307;
  double t3315;
  double t4100;
  double t4163;
  double t4167;
  double t4174;
  double t4233;
  double t4281;
  double t4282;
  double t4284;
  double t4290;
  double t4247;
  double t4249;
  double t4257;
  double t4147;
  double t4148;
  double t4149;
  double t4176;
  double t4306;
  double t4310;
  double t4311;
  double t4399;
  double t4315;
  double t4258;
  double t4313;
  double t4326;
  double t4328;
  double t4331;
  double t4374;
  double t4453;
  double t4455;
  double t4456;
  double t4465;
  double t4466;
  double t4177;
  double t4215;
  double t4222;
  double t4265;
  double t4267;
  double t4268;
  double t4618;
  double t4625;
  double t4648;
  double t4649;
  double t4659;
  double t4662;
  double t4814;
  double t4817;
  double t4818;
  double t4821;
  double t4822;
  double t4823;
  double t4831;
  double t4846;
  double t4849;
  double t4851;
  double t4715;
  double t4722;
  double t4725;
  double t4694;
  double t4580;
  double t4593;
  double t4604;
  double t4408;
  double t4433;
  double t4441;
  double t4939;
  double t4949;
  double t4950;
  double t4876;
  double t4884;
  double t4887;
  double t4892;
  double t4897;
  double t4898;
  double t4866;
  double t4869;
  double t4471;
  double t4472;
  double t4475;
  double t4870;
  double t4902;
  double t4905;
  double t4912;
  double t4954;
  double t4962;
  double t4970;
  double t4979;
  double t4982;
  double t5095;
  double t5096;
  double t5103;
  double t5110;
  double t5116;
  double t5117;
  double t5118;
  double t5122;
  double t5145;
  double t5168;
  double t5172;
  double t5175;
  double t5176;
  double t5178;
  double t5183;
  double t5194;
  double t5195;
  double t5197;
  double t5203;
  double t5205;
  double t5259;
  double t5265;
  double t5273;
  double t5277;
  double t5279;
  double t5285;
  double t5180;
  double t5206;
  double t5208;
  double t5211;
  double t5212;
  double t5214;
  double t5234;
  double t5235;
  double t5238;
  double t5221;
  double t5223;
  double t5350;
  double t5244;
  double t5316;
  double t5465;
  double t5469;
  double t5470;
  double t5471;
  double t5477;
  double t5481;
  double t5489;
  double t5495;
  double t5134;
  double t5135;
  double t5142;
  double t5114;
  double t5123;
  double t5128;
  double t5297;
  double t5308;
  double t5309;
  double t5276;
  double t5286;
  double t5289;
  double t5313;
  double t5566;
  double t5568;
  double t5577;
  double t5228;
  double t5558;
  double t5559;
  double t5561;
  double t5596;
  double t5598;
  double t5601;
  double t5612;
  double t5613;
  double t5623;
  double t5528;
  double t5529;
  double t5530;
  double t5518;
  double t5519;
  double t5520;
  double t5510;
  double t5511;
  double t5524;
  double t5532;
  double t5534;
  double t5650;
  double t5652;
  double t5653;
  double t5663;
  double t5670;
  double t5671;
  double t5635;
  double t5638;
  double t5639;
  double t5588;
  double t5589;
  double t5593;
  double t5585;
  double t5626;
  double t5722;
  double t5724;
  double t5729;
  double t5633;
  double t5643;
  double t5698;
  double t5704;
  double t5713;
  double t5777;
  double t5780;
  double t5781;
  double t5792;
  double t5793;
  double t5794;
  double t5863;
  double t5868;
  double t5871;
  double t5874;
  double t5875;
  double t5877;
  double t5890;
  double t5893;
  double t5872;
  double t5881;
  double t5895;
  double t5896;
  double t5901;
  double t5902;
  double t5903;
  double t5904;
  double t5932;
  double t5940;
  double t5943;
  double t5944;
  double t5949;
  double t5959;
  double t5961;
  double t5964;
  double t5942;
  double t5955;
  double t5965;
  double t5966;
  double t5970;
  double t5982;
  double t5985;
  double t5986;
  double t5329;
  double t5332;
  double t5334;
  double t6026;
  double t6027;
  double t6034;
  double t6035;
  double t5900;
  double t5910;
  double t5915;
  double t5923;
  double t5928;
  double t5929;
  double t6014;
  double t6020;
  double t6022;
  double t6023;
  double t6024;
  double t5442;
  double t5445;
  double t5459;
  double t5460;
  double t6098;
  double t6103;
  double t6114;
  double t6064;
  double t6157;
  double t6160;
  double t6162;
  double t6164;
  double t6166;
  double t6170;
  double t6171;
  double t6187;
  double t6188;
  double t6189;
  double t6175;
  double t6181;
  double t6183;
  double t6097;
  double t6104;
  double t6116;
  double t6117;
  double t6124;
  double t6125;
  double t6128;
  double t6130;
  double t6241;
  double t6242;
  double t6243;
  double t6233;
  double t6235;
  double t6236;
  double t6215;
  double t6217;
  double t6220;
  double t6226;
  double t6239;
  double t6245;
  double t6250;
  double t6257;
  double t6264;
  double t6266;
  double t6268;
  double t6270;
  double t6271;
  double t6002;
  double t6003;
  double t6007;
  double t5969;
  double t5988;
  double t5995;
  double t6037;
  double t6284;
  double t6287;
  double t6289;
  double t6293;
  double t6297;
  double t6300;
  double t6314;
  double t6319;
  double t6323;
  double t6290;
  double t6328;
  double t6329;
  double t6330;
  double t6325;
  double t6327;
  double t6341;
  double t6342;
  double t6343;
  double t6346;
  double t6347;
  double t6361;
  double t6372;
  double t6375;
  double t6376;
  double t2695;
  double t2698;
  double t5072;
  double t5086;
  double t5087;
  double t5347;
  double t5352;
  double t5353;
  double t5354;
  double t6454;
  double t6456;
  double t6465;
  double t6468;
  double t4237;
  double t4241;
  double t4242;
  double t6408;
  double t6411;
  double t6413;
  double t4109;
  double t4110;
  double t4113;
  double t2843;
  double t6538;
  double t6577;
  double t6666;
  double t6667;
  double t6541;
  double t6542;
  double t6543;
  double t6694;
  double t6695;
  double t6581;
  double t6584;
  double t6590;
  double t6677;
  double t6678;
  double t6686;
  double t6709;
  double t6711;
  double t6717;
  double t6915;
  double t6922;
  double t6932;
  double t6933;
  double t7013;
  double t7041;
  double t5825;
  double t5831;
  double t5838;
  double t7040;
  double t7014;
  double t5515;
  double t5538;
  double t5546;
  double t7155;
  double t7160;
  double t5736;
  double t5757;
  double t5762;
  double t7165;
  double t7177;
  double t7048;
  double t7049;
  double t7052;
  double t7240;
  double t7118;
  double t7123;
  double t7124;
  double t7126;
  double t7246;
  double t7277;
  double t7278;
  double t7279;
  double t7282;
  double t7285;
  double t7291;
  double t7296;
  double t7310;
  double t7311;
  double t7313;
  double t7299;
  double t7301;
  double t7303;
  double t6386;
  double t6388;
  double t6393;
  double t7238;
  double t7361;
  double t6232;
  double t6251;
  double t6254;
  double t7369;
  double t7388;
  double t6501;
  double t6503;
  double t6994;
  double t6995;
  double t6997;
  double t7061;
  double t7064;
  double t7067;
  double t7071;
  double t7483;
  double t7487;
  double t7493;
  double t7496;
  double t7591;
  double t7606;
  double t7664;
  double t7666;
  double t7592;
  double t7595;
  double t7597;
  double t7680;
  double t7681;
  double t7608;
  double t7611;
  double t7613;
  double t7672;
  double t7674;
  double t7675;
  double t7685;
  double t7686;
  double t7688;
  double t7828;
  double t7844;
  double t7855;
  double t7857;
  double t7932;
  double t7967;
  double t7965;
  double t7936;
  double t8076;
  double t8084;
  double t8089;
  double t8093;
  double t7942;
  double t7943;
  double t7944;
  double t7973;
  double t7976;
  double t7977;
  double t8002;
  double t8003;
  double t8005;
  double t8014;
  double t8039;
  double t8045;
  double t8048;
  double t8049;
  double t8144;
  double t8163;
  double t8235;
  double t8238;
  double t8240;
  double t8241;
  double t8244;
  double t8248;
  double t8251;
  double t8220;
  double t8221;
  double t8223;
  double t8225;
  double t8227;
  double t8229;
  double t8230;
  double t8213;
  double t8215;
  double t8216;
  double t8217;
  double t8203;
  double t8206;
  double t8207;
  double t8208;
  double t8164;
  double t8143;
  double t8267;
  double t8270;
  double t8277;
  double t8280;
  double t7560;
  double t7564;
  double t7565;
  t315 = Cos(var1[11]);
  t409 = -1.*t315;
  t528 = 1. + t409;
  t543 = Sin(var1[11]);
  t89 = Cos(var1[10]);
  t1182 = Sin(var1[10]);
  t529 = -1.7408e-8*t528;
  t775 = -3.999964e-6*t543;
  t1155 = t529 + t775;
  t1308 = -1.*t89;
  t1348 = 1. + t1308;
  t1207 = -1.000000000016*t528;
  t1208 = 1. + t1207;
  t1215 = 0.999991*t1208;
  t1251 = 0.004352*t543;
  t1264 = t1215 + t1251;
  t1373 = -0.004352*t315;
  t1383 = 0.999991*t543;
  t1647 = t1373 + t1383;
  t1887 = Sin(var1[9]);
  t190 = -1. + t89;
  t214 = 1.6e-11*t190;
  t305 = 1. + t214;
  t1162 = t305*t1155;
  t1282 = -4.e-6*t1182*t1264;
  t1774 = 4.e-6*t1348*t1647;
  t1777 = 0. + t1162 + t1282 + t1774;
  t76 = Cos(var1[9]);
  t1949 = 4.e-6*t1182*t1155;
  t1965 = -1.000000000016*t1348;
  t1975 = 1. + t1965;
  t1976 = t1975*t1264;
  t1982 = -1.*t1182*t1647;
  t1996 = 0. + t1949 + t1976 + t1982;
  t62 = Cos(var1[5]);
  t2098 = -1.*t1887*t1777;
  t2117 = t76*t1996;
  t2125 = 0. + t2098 + t2117;
  t1816 = t76*t1777;
  t2042 = t1887*t1996;
  t2071 = 0. + t1816 + t2042;
  t2300 = Sin(var1[5]);
  t2360 = Cos(var1[3]);
  t2090 = t62*t2071;
  t2330 = t2125*t2300;
  t2343 = 0. + t2090 + t2330;
  t57 = Sin(var1[3]);
  t2385 = Cos(var1[4]);
  t2405 = 4.e-6*t1348*t1155;
  t2431 = t1182*t1264;
  t2434 = t89*t1647;
  t2456 = 0. + t2405 + t2431 + t2434;
  t2464 = t2385*t2456;
  t2480 = Sin(var1[4]);
  t2589 = t62*t2125;
  t2590 = -1.*t2071*t2300;
  t2615 = 0. + t2589 + t2590;
  t2621 = -1.*t2480*t2615;
  t2629 = 0. + t2464 + t2621;
  t2773 = -1.*t2456*t2480;
  t2781 = -1.*t2385*t2615;
  t2789 = t2773 + t2781;
  t2862 = 0.004352*t1208;
  t2868 = -0.9999910000159999*t543;
  t2875 = t2862 + t2868;
  t2879 = 1.6e-11*t528;
  t2880 = -1. + t2879;
  t2892 = 4.e-6*t2880;
  t2893 = 3.999964e-6*t528;
  t2901 = -1.7408e-8*t543;
  t2902 = t2892 + t2893 + t2901;
  t2924 = -1. + t315;
  t2931 = 1.6e-11*t2924;
  t2970 = 0.999991*t315;
  t2984 = t2931 + t2970 + t1251;
  t3032 = -4.e-6*t1182*t2875;
  t3069 = t305*t2902;
  t3073 = 4.e-6*t1348*t2984;
  t3102 = 0. + t3032 + t3069 + t3073;
  t3134 = t1975*t2875;
  t3140 = 4.e-6*t1182*t2902;
  t3150 = -1.*t1182*t2984;
  t3162 = 0. + t3134 + t3140 + t3150;
  t3316 = -1. + t2879 + t2931;
  t3349 = 4.e-6*t2924;
  t3350 = -4.e-6*t315;
  t3351 = t3349 + t3350;
  t3402 = t305*t3316;
  t3425 = 4.e-6*t1348*t3351;
  t3460 = t3402 + t3425;
  t3471 = 4.e-6*t3316*t1182;
  t3483 = -1.*t3351*t1182;
  t3487 = t3471 + t3483;
  t3628 = -1.26e-8*var1[11];
  t3656 = 1. + t2931;
  t3687 = -0.14871*t3656;
  t3700 = -1.64779999997447e-7*t528;
  t3712 = -1.59556e-7*t2924;
  t3728 = -1.199987999968e-6*t543;
  t3739 = t3628 + t3687 + t3700 + t3712 + t3728;
  t3759 = 0.803147*t1208;
  t3761 = 0.50315000001605*t528;
  t3777 = 0.00130540515936178*t543;
  t3788 = t3759 + t3761 + t3777;
  t3796 = -5.04e-14*var1[11];
  t3799 = -0.03988959484*t528;
  t3806 = 6.38224e-13*t2924;
  t3807 = -0.041195*t315;
  t3809 = 0.299996999992*t543;
  t3810 = t3796 + t3799 + t3806 + t3807 + t3809;
  t3838 = -1.*t76;
  t3844 = 1. + t3838;
  t3854 = -0.15121*t1887;
  t3859 = -1.2484e-7*var1[10];
  t3865 = 2.479936e-18*t1348;
  t3903 = -1.54996e-7*t190;
  t3905 = 1.124840000016e-6*t1182;
  t3906 = t305*t3739;
  t3909 = -4.e-6*t1182*t3788;
  t3917 = 4.e-6*t1348*t3810;
  t3919 = t3859 + t3865 + t3903 + t3905 + t3906 + t3909 + t3917;
  t3925 = 0.281210000008499*t1348;
  t3930 = -0.03874900000062*t1182;
  t3938 = 4.e-6*t1182*t3739;
  t3942 = t1975*t3788;
  t3943 = -1.*t1182*t3810;
  t3950 = t3925 + t3930 + t3938 + t3942 + t3943;
  t3333 = 4.e-6*t1348*t3316;
  t3365 = t89*t3351;
  t3371 = t3333 + t3365;
  t3382 = t3371*t2385;
  t3466 = -1.*t3460*t1887;
  t3503 = t76*t3487;
  t3522 = t3466 + t3503;
  t3523 = t62*t3522;
  t3531 = t76*t3460;
  t3541 = t1887*t3487;
  t3558 = t3531 + t3541;
  t3570 = -1.*t3558*t2300;
  t3578 = t3523 + t3570;
  t3584 = -1.*t2480*t3578;
  t3586 = t3382 + t3584;
  t3607 = -4.9936e-13*var1[10];
  t3613 = -0.038749*t1348;
  t3623 = 6.19984e-13*t190;
  t3624 = -0.281210000004*t1182;
  t3746 = 4.e-6*t1348*t3739;
  t3791 = t1182*t3788;
  t3813 = t89*t3810;
  t3828 = 0. + t3607 + t3613 + t3623 + t3624 + t3746 + t3791 + t3813;
  t3845 = 0.15121*t3844;
  t3920 = -1.*t1887*t3919;
  t3960 = t76*t3950;
  t3962 = t3845 + t3854 + t3920 + t3960;
  t3981 = t62*t3962;
  t3990 = -0.15121*t3844;
  t3991 = t76*t3919;
  t3992 = t1887*t3950;
  t3998 = t3990 + t3854 + t3991 + t3992;
  t3999 = -1.*t3998*t2300;
  t4001 = 0. + t3981 + t3999;
  t4092 = t2385*t3828;
  t4093 = -1.*t2480*t4001;
  t2876 = t1182*t2875;
  t2910 = 4.e-6*t1348*t2902;
  t2987 = t89*t2984;
  t3015 = 0. + t2876 + t2910 + t2987;
  t3107 = -1.*t1887*t3102;
  t3184 = t76*t3162;
  t3191 = 0. + t3107 + t3184;
  t3195 = t62*t3191;
  t3198 = t76*t3102;
  t3205 = t1887*t3162;
  t3207 = 0. + t3198 + t3205;
  t3261 = -1.*t3207*t2300;
  t3283 = 0. + t3195 + t3261;
  t4045 = t3371*t2480;
  t4053 = t2385*t3578;
  t4078 = t4045 + t4053;
  t4020 = t3828*t2480;
  t4021 = t2385*t4001;
  t4025 = 0. + t4020 + t4021;
  t4115 = 0. + t4092 + t4093;
  t4131 = t2385*t3015;
  t4144 = -1.*t2480*t3283;
  t3834 = -1.*t3828*t2480;
  t4003 = -1.*t2385*t4001;
  t4007 = t3834 + t4003;
  t4145 = t4131 + t4144;
  t3030 = t3015*t2480;
  t3307 = t2385*t3283;
  t3315 = 0. + t3030 + t3307;
  t4100 = t4092 + t4093;
  t4163 = t62*t3998;
  t4167 = t3962*t2300;
  t4174 = 0. + t4163 + t4167;
  t4233 = 0. + t4131 + t4144;
  t4281 = -1.*t62*t2071;
  t4282 = -1.*t2125*t2300;
  t4284 = t4281 + t4282;
  t4290 = t2589 + t2590;
  t4247 = t62*t3207;
  t4249 = t3191*t2300;
  t4257 = 0. + t4247 + t4249;
  t4147 = t62*t3558;
  t4148 = t3522*t2300;
  t4149 = t4147 + t4148;
  t4176 = t4149*t4174;
  t4306 = -1.*t62*t3998;
  t4310 = -1.*t3962*t2300;
  t4311 = t4306 + t4310;
  t4399 = t3195 + t3261;
  t4315 = t3981 + t3999;
  t4258 = -1.*t4257*t4174;
  t4313 = t3578*t4174;
  t4326 = t4149*t4315;
  t4328 = -1.*t62*t3558;
  t4331 = -1.*t3522*t2300;
  t4374 = t4328 + t4331;
  t4453 = -1.*t4399*t4174;
  t4455 = -1.*t4257*t4315;
  t4456 = -1.*t62*t3207;
  t4465 = -1.*t3191*t2300;
  t4466 = t4456 + t4465;
  t4177 = t4078*t4025;
  t4215 = t3586*t4115;
  t4222 = t4176 + t4177 + t4215;
  t4265 = -1.*t3315*t4025;
  t4267 = -1.*t4233*t4115;
  t4268 = t4258 + t4265 + t4267;
  t4618 = -0.15121*t76;
  t4625 = t4618 + t3854 + t3920 + t3960;
  t4648 = 0.15121*t1887;
  t4649 = -1.*t76*t3919;
  t4659 = -1.*t1887*t3950;
  t4662 = t4618 + t4648 + t4649 + t4659;
  t4814 = -1.*t76*t1777;
  t4817 = -1.*t1887*t1996;
  t4818 = t4814 + t4817;
  t4821 = t62*t4818;
  t4822 = t2098 + t2117;
  t4823 = -1.*t4822*t2300;
  t4831 = t4821 + t4823;
  t4846 = t62*t4822;
  t4849 = t4818*t2300;
  t4851 = t4846 + t4849;
  t4715 = -1.*t76*t3460;
  t4722 = -1.*t1887*t3487;
  t4725 = t4715 + t4722;
  t4694 = t3107 + t3184;
  t4580 = -1.*t76*t3102;
  t4593 = -1.*t1887*t3162;
  t4604 = t4580 + t4593;
  t4408 = t3371*t3828;
  t4433 = t3578*t4001;
  t4441 = t4408 + t4176 + t4433;
  t4939 = t62*t4694;
  t4949 = t4604*t2300;
  t4950 = t4939 + t4949;
  t4876 = t62*t4662;
  t4884 = -1.*t4625*t2300;
  t4887 = t4876 + t4884;
  t4892 = t62*t4625;
  t4897 = t4662*t2300;
  t4898 = t4892 + t4897;
  t4866 = t4725*t2300;
  t4869 = t3523 + t4866;
  t4471 = -1.*t3015*t3828;
  t4472 = -1.*t3283*t4001;
  t4475 = t4471 + t4258 + t4472;
  t4870 = t4869*t4174;
  t4902 = t4149*t4898;
  t4905 = t62*t4725;
  t4912 = t4905 + t4331;
  t4954 = -1.*t4950*t4174;
  t4962 = -1.*t4257*t4898;
  t4970 = t62*t4604;
  t4979 = -1.*t4694*t2300;
  t4982 = t4970 + t4979;
  t5095 = -1.000000000016*t1182*t2875;
  t5096 = 4.e-6*t89*t2902;
  t5103 = -1.*t89*t2984;
  t5110 = t5095 + t5096 + t5103;
  t5116 = -4.e-6*t89*t2875;
  t5117 = -1.6e-11*t1182*t2902;
  t5118 = 4.e-6*t1182*t2984;
  t5122 = t5116 + t5117 + t5118;
  t5145 = -0.03874900000062*t89;
  t5168 = 0.281210000008499*t1182;
  t5172 = 4.e-6*t89*t3739;
  t5175 = -1.000000000016*t1182*t3788;
  t5176 = -1.*t89*t3810;
  t5178 = t5145 + t5168 + t5172 + t5175 + t5176;
  t5183 = 1.124840000016e-6*t89;
  t5194 = 1.5499600000248e-7*t1182;
  t5195 = -1.6e-11*t1182*t3739;
  t5197 = -4.e-6*t89*t3788;
  t5203 = 4.e-6*t1182*t3810;
  t5205 = -1.2484e-7 + t5183 + t5194 + t5195 + t5197 + t5203;
  t5259 = 4.e-6*t89*t3316;
  t5265 = -1.*t89*t3351;
  t5273 = t5259 + t5265;
  t5277 = -1.6e-11*t3316*t1182;
  t5279 = 4.e-6*t3351*t1182;
  t5285 = t5277 + t5279;
  t5180 = t1887*t5178;
  t5206 = t76*t5205;
  t5208 = t5180 + t5206;
  t5211 = t76*t5178;
  t5212 = -1.*t1887*t5205;
  t5214 = t5211 + t5212;
  t5234 = -0.281210000004*t89;
  t5235 = t89*t3788;
  t5238 = -4.9936e-13 + t5234 + t3930 + t3938 + t5235 + t3943;
  t5221 = t89*t2875;
  t5223 = t5221 + t3140 + t3150;
  t5350 = t3607 + t3613 + t3623 + t3624 + t3746 + t3791 + t3813;
  t5244 = -1.*t3015*t5238;
  t5316 = t3371*t5238;
  t5465 = 4.e-6*t89*t1155;
  t5469 = -1.000000000016*t1182*t1264;
  t5470 = -1.*t89*t1647;
  t5471 = t5465 + t5469 + t5470;
  t5477 = -1.6e-11*t1182*t1155;
  t5481 = -4.e-6*t89*t1264;
  t5489 = 4.e-6*t1182*t1647;
  t5495 = t5477 + t5481 + t5489;
  t5134 = t1887*t5110;
  t5135 = t76*t5122;
  t5142 = t5134 + t5135;
  t5114 = t76*t5110;
  t5123 = -1.*t1887*t5122;
  t5128 = t5114 + t5123;
  t5297 = t5273*t1887;
  t5308 = t76*t5285;
  t5309 = t5297 + t5308;
  t5276 = t76*t5273;
  t5286 = -1.*t1887*t5285;
  t5289 = t5276 + t5286;
  t5313 = t3487*t3828;
  t5566 = t62*t5309;
  t5568 = t5289*t2300;
  t5577 = t5566 + t5568;
  t5228 = -1.*t5223*t3828;
  t5558 = t62*t5142;
  t5559 = t5128*t2300;
  t5561 = t5558 + t5559;
  t5596 = t62*t5214;
  t5598 = -1.*t5208*t2300;
  t5601 = t5596 + t5598;
  t5612 = t62*t5208;
  t5613 = t5214*t2300;
  t5623 = t5612 + t5613;
  t5528 = t1887*t5471;
  t5529 = t76*t5495;
  t5530 = t5528 + t5529;
  t5518 = t76*t5471;
  t5519 = -1.*t1887*t5495;
  t5520 = t5518 + t5519;
  t5510 = t89*t1264;
  t5511 = t1949 + t5510 + t1982;
  t5524 = t62*t5520;
  t5532 = -1.*t5530*t2300;
  t5534 = t5524 + t5532;
  t5650 = t62*t5530;
  t5652 = t5520*t2300;
  t5653 = t5650 + t5652;
  t5663 = t2385*t5511;
  t5670 = -1.*t2480*t5534;
  t5671 = t5663 + t5670;
  t5635 = t62*t5128;
  t5638 = -1.*t5142*t2300;
  t5639 = t5635 + t5638;
  t5588 = t62*t5289;
  t5589 = -1.*t5309*t2300;
  t5593 = t5588 + t5589;
  t5585 = t5577*t4174;
  t5626 = t4149*t5623;
  t5722 = t3487*t2480;
  t5724 = t2385*t5593;
  t5729 = t5722 + t5724;
  t5633 = -1.*t5561*t4174;
  t5643 = -1.*t4257*t5623;
  t5698 = t5223*t2480;
  t5704 = t2385*t5639;
  t5713 = t5698 + t5704;
  t5777 = t5238*t2480;
  t5780 = t2385*t5601;
  t5781 = t5777 + t5780;
  t5792 = t2385*t5238;
  t5793 = -1.*t2480*t5601;
  t5794 = t5792 + t5793;
  t5863 = 0.00130540515936178*t315;
  t5868 = -0.2999969999968001*t543;
  t5871 = t5863 + t5868;
  t5874 = -1.199987999968e-6*t315;
  t5875 = -5.2216206374471e-9*t543;
  t5877 = -1.26e-8 + t5874 + t5875;
  t5890 = 0.299996999992*t315;
  t5893 = -5.04e-14 + t5890 + t3777;
  t5872 = -4.e-6*t1182*t5871;
  t5881 = t305*t5877;
  t5895 = 4.e-6*t1348*t5893;
  t5896 = t5872 + t5881 + t5895;
  t5901 = t1975*t5871;
  t5902 = 4.e-6*t1182*t5877;
  t5903 = -1.*t1182*t5893;
  t5904 = t5901 + t5902 + t5903;
  t5932 = 0.004352*t315;
  t5940 = t5932 + t2868;
  t5943 = -0.9999910000159999*t315;
  t5944 = -0.00435200000006963*t543;
  t5949 = t5943 + t5944;
  t5959 = -1.7408e-8*t315;
  t5961 = 3.999964000064e-6*t543;
  t5964 = t5959 + t5961;
  t5942 = 4.e-6*t1348*t5940;
  t5955 = -4.e-6*t1182*t5949;
  t5965 = t305*t5964;
  t5966 = t5942 + t5955 + t5965;
  t5970 = -1.*t1182*t5940;
  t5982 = t1975*t5949;
  t5985 = 4.e-6*t1182*t5964;
  t5986 = t5970 + t5982 + t5985;
  t5329 = t3522*t3962;
  t5332 = t3558*t3998;
  t5334 = t5329 + t5332 + t4408;
  t6026 = t89*t5940;
  t6027 = t1182*t5949;
  t6034 = 4.e-6*t1348*t5964;
  t6035 = t6026 + t6027 + t6034;
  t5900 = -1.*t1887*t5896;
  t5910 = t76*t5904;
  t5915 = t5900 + t5910;
  t5923 = t76*t5896;
  t5928 = t1887*t5904;
  t5929 = t5923 + t5928;
  t6014 = t1182*t5871;
  t6020 = 4.e-6*t1348*t5877;
  t6022 = t89*t5893;
  t6023 = t6014 + t6020 + t6022;
  t6024 = -1.*t6023*t3015;
  t5442 = t3460*t3919;
  t5445 = t3371*t5350;
  t5459 = t3487*t3950;
  t5460 = t5442 + t5445 + t5459;
  t6098 = -3.999964e-6*t315;
  t6103 = t6098 + t2901;
  t6114 = t2970 + t1251;
  t6064 = t3371*t6023;
  t6157 = -1.*t2875*t5871;
  t6160 = -1.*t2902*t5877;
  t6162 = -1.*t3739*t5964;
  t6164 = -1.*t5949*t3788;
  t6166 = -1.*t5893*t2984;
  t6170 = -1.*t5940*t3810;
  t6171 = t6157 + t6160 + t6162 + t6164 + t6166 + t6170;
  t6187 = t3316*t5877;
  t6188 = t3351*t5893;
  t6189 = t6187 + t6188;
  t6175 = t3316*t3739;
  t6181 = t3351*t3810;
  t6183 = t6175 + t6181;
  t6097 = -4.e-6*t1182*t5940;
  t6104 = t305*t6103;
  t6116 = 4.e-6*t1348*t6114;
  t6117 = t6097 + t6104 + t6116;
  t6124 = t1975*t5940;
  t6125 = 4.e-6*t1182*t6103;
  t6128 = -1.*t1182*t6114;
  t6130 = t6124 + t6125 + t6128;
  t6241 = t76*t6117;
  t6242 = t1887*t6130;
  t6243 = t6241 + t6242;
  t6233 = -1.*t1887*t6117;
  t6235 = t76*t6130;
  t6236 = t6233 + t6235;
  t6215 = t1182*t5940;
  t6217 = 4.e-6*t1348*t6103;
  t6220 = t89*t6114;
  t6226 = t6215 + t6217 + t6220;
  t6239 = t62*t6236;
  t6245 = -1.*t6243*t2300;
  t6250 = t6239 + t6245;
  t6257 = t62*t6243;
  t6264 = t6236*t2300;
  t6266 = t6257 + t6264;
  t6268 = t2385*t6226;
  t6270 = -1.*t2480*t6250;
  t6271 = t6268 + t6270;
  t6002 = t76*t5966;
  t6003 = t1887*t5986;
  t6007 = t6002 + t6003;
  t5969 = -1.*t1887*t5966;
  t5988 = t76*t5986;
  t5995 = t5969 + t5988;
  t6037 = -1.*t6035*t3828;
  t6284 = t62*t5929;
  t6287 = t5915*t2300;
  t6289 = t6284 + t6287;
  t6293 = t62*t5915;
  t6297 = -1.*t5929*t2300;
  t6300 = t6293 + t6297;
  t6314 = t62*t6007;
  t6319 = t5995*t2300;
  t6323 = t6314 + t6319;
  t6290 = t4149*t6289;
  t6328 = t62*t5995;
  t6329 = -1.*t6007*t2300;
  t6330 = t6328 + t6329;
  t6325 = -1.*t6289*t4257;
  t6327 = -1.*t6323*t4174;
  t6341 = t6023*t2480;
  t6342 = t2385*t6300;
  t6343 = t6341 + t6342;
  t6346 = t2385*t6023;
  t6347 = -1.*t2480*t6300;
  t6361 = t6346 + t6347;
  t6372 = t6035*t2480;
  t6375 = t2385*t6330;
  t6376 = t6372 + t6375;
  t2695 = t2360*t2343;
  t2698 = -1.*t57*t2629;
  t5072 = -1.*t3191*t3962;
  t5086 = -1.*t3207*t3998;
  t5087 = t5072 + t5086 + t4471;
  t5347 = -1.*t3102*t3919;
  t5352 = -1.*t3015*t5350;
  t5353 = -1.*t3162*t3950;
  t5354 = t5347 + t5352 + t5353;
  t6454 = -1.*t3739*t2902;
  t6456 = -1.*t2875*t3788;
  t6465 = -1.*t2984*t3810;
  t6468 = t6454 + t6456 + t6465;
  t4237 = -1.*t3015*t2480;
  t4241 = -1.*t2385*t3283;
  t4242 = t4237 + t4241;
  t6408 = t2456*t2480;
  t6411 = t2385*t2615;
  t6413 = 0. + t6408 + t6411;
  t4109 = -1.*t3371*t2480;
  t4110 = -1.*t2385*t3578;
  t4113 = t4109 + t4110;
  t2843 = t2464 + t2621;
  t6538 = -1.*t4149*t4174;
  t6577 = t4174*t2343;
  t6666 = -1.*t3578*t4174;
  t6667 = -1.*t4149*t4315;
  t6541 = -1.*t4078*t4025;
  t6542 = -1.*t3586*t4115;
  t6543 = t6538 + t6541 + t6542;
  t6694 = t4315*t2343;
  t6695 = t4174*t4290;
  t6581 = t4025*t6413;
  t6584 = t4115*t2629;
  t6590 = t6577 + t6581 + t6584;
  t6677 = -1.*t3371*t3828;
  t6678 = -1.*t3578*t4001;
  t6686 = t6677 + t6538 + t6678;
  t6709 = t3828*t2456;
  t6711 = t4001*t2615;
  t6717 = t6709 + t6577 + t6711;
  t6915 = -1.*t4869*t4174;
  t6922 = -1.*t4149*t4898;
  t6932 = t4898*t2343;
  t6933 = t4174*t4851;
  t7013 = t5238*t2456;
  t7041 = -1.*t3371*t5238;
  t5825 = t2385*t5223;
  t5831 = -1.*t2480*t5639;
  t5838 = t5825 + t5831;
  t7040 = -1.*t3487*t3828;
  t7014 = t3828*t5511;
  t5515 = t5511*t2480;
  t5538 = t2385*t5534;
  t5546 = t5515 + t5538;
  t7155 = -1.*t5577*t4174;
  t7160 = -1.*t4149*t5623;
  t5736 = t2385*t3487;
  t5757 = -1.*t2480*t5593;
  t5762 = t5736 + t5757;
  t7165 = t5623*t2343;
  t7177 = t4174*t5653;
  t7048 = -1.*t3522*t3962;
  t7049 = -1.*t3558*t3998;
  t7052 = t7048 + t7049 + t6677;
  t7240 = t6023*t2456;
  t7118 = -1.*t3460*t3919;
  t7123 = -1.*t3371*t5350;
  t7124 = -1.*t3487*t3950;
  t7126 = t7118 + t7123 + t7124;
  t7246 = -1.*t3371*t6023;
  t7277 = t3739*t6103;
  t7278 = t1155*t5877;
  t7279 = t5940*t3788;
  t7282 = t5871*t1264;
  t7285 = t6114*t3810;
  t7291 = t5893*t1647;
  t7296 = t7277 + t7278 + t7279 + t7282 + t7285 + t7291;
  t7310 = -1.*t3316*t5877;
  t7311 = -1.*t3351*t5893;
  t7313 = t7310 + t7311;
  t7299 = -1.*t3316*t3739;
  t7301 = -1.*t3351*t3810;
  t7303 = t7299 + t7301;
  t6386 = t2385*t6035;
  t6388 = -1.*t2480*t6330;
  t6393 = t6386 + t6388;
  t7238 = t6226*t3828;
  t7361 = -1.*t4149*t6289;
  t6232 = t6226*t2480;
  t6251 = t2385*t6250;
  t6254 = t6232 + t6251;
  t7369 = t6266*t4174;
  t7388 = t6289*t2343;
  t6501 = t2360*t4257;
  t6503 = -1.*t57*t4233;
  t6994 = t3962*t2125;
  t6995 = t3998*t2071;
  t6997 = t6994 + t6995 + t6709;
  t7061 = t3919*t1777;
  t7064 = t5350*t2456;
  t7067 = t3950*t1996;
  t7071 = t7061 + t7064 + t7067;
  t7483 = t1155*t3739;
  t7487 = t3788*t1264;
  t7493 = t3810*t1647;
  t7496 = t7483 + t7487 + t7493;
  t7591 = t4257*t4174;
  t7606 = -1.*t4174*t2343;
  t7664 = t4399*t4174;
  t7666 = t4257*t4315;
  t7592 = t3315*t4025;
  t7595 = t4233*t4115;
  t7597 = t7591 + t7592 + t7595;
  t7680 = -1.*t4315*t2343;
  t7681 = -1.*t4174*t4290;
  t7608 = -1.*t4025*t6413;
  t7611 = -1.*t4115*t2629;
  t7613 = t7606 + t7608 + t7611;
  t7672 = t3015*t3828;
  t7674 = t3283*t4001;
  t7675 = t7672 + t7591 + t7674;
  t7685 = -1.*t3828*t2456;
  t7686 = -1.*t4001*t2615;
  t7688 = t7685 + t7606 + t7686;
  t7828 = t4950*t4174;
  t7844 = t4257*t4898;
  t7855 = -1.*t4898*t2343;
  t7857 = -1.*t4174*t4851;
  t7932 = -1.*t5238*t2456;
  t7967 = t3015*t5238;
  t7965 = t5223*t3828;
  t7936 = -1.*t3828*t5511;
  t8076 = t5561*t4174;
  t8084 = t4257*t5623;
  t8089 = -1.*t5623*t2343;
  t8093 = -1.*t4174*t5653;
  t7942 = -1.*t3962*t2125;
  t7943 = -1.*t3998*t2071;
  t7944 = t7942 + t7943 + t7685;
  t7973 = t3191*t3962;
  t7976 = t3207*t3998;
  t7977 = t7973 + t7976 + t7672;
  t8002 = -1.*t3919*t1777;
  t8003 = -1.*t5350*t2456;
  t8005 = -1.*t3950*t1996;
  t8014 = t8002 + t8003 + t8005;
  t8039 = t3102*t3919;
  t8045 = t3015*t5350;
  t8048 = t3162*t3950;
  t8049 = t8039 + t8045 + t8048;
  t8144 = -1.*t6023*t2456;
  t8163 = t6023*t3015;
  t8235 = t2875*t5871;
  t8238 = t2902*t5877;
  t8240 = t3739*t5964;
  t8241 = t5949*t3788;
  t8244 = t5893*t2984;
  t8248 = t5940*t3810;
  t8251 = t8235 + t8238 + t8240 + t8241 + t8244 + t8248;
  t8220 = -1.*t3739*t6103;
  t8221 = -1.*t1155*t5877;
  t8223 = -1.*t5940*t3788;
  t8225 = -1.*t5871*t1264;
  t8227 = -1.*t6114*t3810;
  t8229 = -1.*t5893*t1647;
  t8230 = t8220 + t8221 + t8223 + t8225 + t8227 + t8229;
  t8213 = t3739*t2902;
  t8215 = t2875*t3788;
  t8216 = t2984*t3810;
  t8217 = t8213 + t8215 + t8216;
  t8203 = -1.*t1155*t3739;
  t8206 = -1.*t3788*t1264;
  t8207 = -1.*t3810*t1647;
  t8208 = t8203 + t8206 + t8207;
  t8164 = t6035*t3828;
  t8143 = -1.*t6226*t3828;
  t8267 = t6289*t4257;
  t8270 = t6323*t4174;
  t8277 = -1.*t6266*t4174;
  t8280 = -1.*t6289*t2343;
  t7560 = t2360*t4149;
  t7564 = -1.*t57*t3586;
  t7565 = t7560 + t7564;
  p_output1[0]=(-1.*t2360*t2629 - 1.*t2343*t57)*var2[1] + (t2695 + t2698)*var2[2];
  p_output1[1]=t2843*var2[0] - 1.*t2789*t57*var2[1] + t2360*t2789*var2[2] + (t3315*(t3586*t4007 + t3586*t4025 + t4078*t4100 + t4113*t4115) + t4145*t4222 + t4078*(-1.*t3315*t4100 - 1.*t4025*t4145 - 1.*t4007*t4233 - 1.*t4115*t4242) + t3586*t4268)*var2[3];
  p_output1[2]=t2385*t4284*var2[0] + (t2360*t4290 + t2480*t4284*t57)*var2[1] + (-1.*t2360*t2480*t4284 + t4290*t57)*var2[2] + (t2385*t4268*t4374 + t3315*(-1.*t2480*t3586*t4311 + t2385*t4078*t4311 + t4313 + t4326 + t2385*t4025*t4374 - 1.*t2480*t4115*t4374) + t2385*t4222*t4466 + t4078*(-1.*t2385*t3315*t4311 + t2480*t4233*t4311 + t4453 + t4455 - 1.*t2385*t4025*t4466 + t2480*t4115*t4466))*var2[3] + (t4257*(t3578*t4311 + t4313 + t4326 + t4001*t4374) + t4399*t4441 + t4149*(-1.*t3283*t4311 + t4453 + t4455 - 1.*t4001*t4466) + t3578*t4475)*var2[4];
  p_output1[3]=t2385*t4831*var2[0] + (t2360*t4851 + t2480*t4831*t57)*var2[1] + (-1.*t2360*t2480*t4831 + t4851*t57)*var2[2] + (t2385*t4268*t4912 + t3315*(t4870 - 1.*t2480*t3586*t4887 + t2385*t4078*t4887 + t4902 + t2385*t4025*t4912 - 1.*t2480*t4115*t4912) + t2385*t4222*t4982 + t4078*(-1.*t2385*t3315*t4887 + t2480*t4233*t4887 + t4954 + t4962 - 1.*t2385*t4025*t4982 + t2480*t4115*t4982))*var2[3] + (t4475*t4869 + t4257*(t4870 + t3578*t4887 + t4902 + t4001*t4912) + t4441*t4950 + t4149*(-1.*t3283*t4887 + t4954 + t4962 - 1.*t4001*t4982))*var2[4] + (t3371*(-1.*t3962*t4604 - 1.*t3207*t4625 - 1.*t3191*t4662 - 1.*t3998*t4694) + t3015*(t3522*t3998 + t3558*t4625 + t3522*t4662 + t3962*t4725))*var2[5];
  p_output1[4]=t5546*var2[0] + (t2360*t5653 - 1.*t5671*t57)*var2[1] + (t2360*t5671 + t5653*t57)*var2[2] + (t4222*t5713 + t4268*t5729 + t3315*(t5585 + t5626 + t4025*t5729 + t4115*t5762 + t4078*t5781 + t3586*t5794) + t4078*(t5633 + t5643 - 1.*t4025*t5713 - 1.*t3315*t5781 - 1.*t4233*t5794 - 1.*t4115*t5838))*var2[3] + (t4441*t5561 + t4475*t5577 + t4257*(t5313 + t5316 + t5585 + t4001*t5593 + t3578*t5601 + t5626) + t4149*(t5228 + t5244 - 1.*t3283*t5601 + t5633 - 1.*t4001*t5639 + t5643))*var2[4] + (t3487*t5087 + t3371*(-1.*t3962*t5128 - 1.*t3998*t5142 - 1.*t3207*t5208 - 1.*t3191*t5214 + t5228 + t5244) + t3015*(t3558*t5208 + t3522*t5214 + t3962*t5289 + t3998*t5309 + t5313 + t5316) + t5223*t5334)*var2[5] + (t3015*(t3487*t5178 + t3460*t5205 + t3950*t5273 + t3919*t5285 + t5316 + t3487*t5350) + t3371*(-1.*t3950*t5110 - 1.*t3919*t5122 - 1.*t3162*t5178 - 1.*t3102*t5205 + t5244 - 1.*t5223*t5350) + t3487*t5354 + t5223*t5460 - 0.15121*t5471 - 0.15121*t5495)*var2[9];
  p_output1[5]=t6254*var2[0] + (t2360*t6266 - 1.*t57*t6271)*var2[1] + (t57*t6266 + t2360*t6271)*var2[2] + (t3315*(t6290 + t4078*t6343 + t3586*t6361) + t4222*t6376 + t4078*(t6325 + t6327 - 1.*t3315*t6343 - 1.*t4233*t6361 - 1.*t4025*t6376 - 1.*t4115*t6393))*var2[3] + (t4257*(t6064 + t6290 + t3578*t6300) + t4441*t6323 + t4149*(t6024 + t6037 - 1.*t3283*t6300 + t6325 + t6327 - 1.*t4001*t6330))*var2[4] + (t5334*t6035 + t3371*(-1.*t3191*t5915 - 1.*t3207*t5929 - 1.*t3962*t5995 - 1.*t3998*t6007 + t6024 + t6037) + t3015*(t3522*t5915 + t3558*t5929 + t6064))*var2[5] + (t5460*t6035 + t3371*(-1.*t3102*t5896 - 1.*t3162*t5904 - 1.*t3919*t5966 - 1.*t3950*t5986 + t6024 - 1.*t5350*t6035) + t3015*(t3460*t5896 + t3487*t5904 + t6064) - 0.15121*t6117 - 0.15121*t6130)*var2[9] + (-0.038749*t5940 + 1.e-6*t6103 - 0.28121*t6114 - 1.*t3316*t6171 - 1.*t5964*t6183 - 1.*t2902*t6189 + 4.e-6*(-1.*t3351*t6171 - 1.*t5940*t6183 - 1.*t2984*t6189))*var2[10];
  p_output1[6]=t6413;
  p_output1[7]=0. + t2695 + t2698;
  p_output1[8]=0. + t2360*t2629 + t2343*t57;
  p_output1[9]=t3315*t4222 + t4078*t4268;
  p_output1[10]=t4257*t4441 + t4149*t4475;
  p_output1[11]=t3371*t5087 + t3015*t5334;
  p_output1[12]=-0.15121*t1777 - 0.15121*t1996 + t3371*t5354 + t3015*t5460;
  p_output1[13]=1.e-6*t1155 - 0.038749*t1264 - 0.28121*t1647 - 1.*t2902*t6183 - 1.*t3316*t6468 + 4.e-6*(-1.*t2984*t6183 - 1.*t3351*t6468);
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t2360*t4233 - 1.*t4257*t57)*var2[1] + (t6501 + t6503)*var2[2];
  p_output1[16]=t4145*var2[0] - 1.*t4242*t57*var2[1] + t2360*t4242*var2[2] + ((-1.*t3586*t4007 - 1.*t3586*t4025 - 1.*t4078*t4100 - 1.*t4113*t4115)*t6413 + t4078*(t2629*t4007 + t2843*t4025 + t2789*t4115 + t4100*t6413) + t2843*t6543 + t3586*t6590)*var2[3];
  p_output1[17]=t2385*t4466*var2[0] + (t2360*t4399 + t2480*t4466*t57)*var2[1] + (-1.*t2360*t2480*t4466 + t4399*t57)*var2[2] + (t2385*t4284*t6543 + t2385*t4374*t6590 + t6413*(t2480*t3586*t4311 - 1.*t2385*t4078*t4311 - 1.*t2385*t4025*t4374 + t2480*t4115*t4374 + t6666 + t6667) + t4078*(t2385*t4025*t4284 - 1.*t2480*t4115*t4284 - 1.*t2480*t2629*t4311 + t2385*t4311*t6413 + t6694 + t6695))*var2[3] + (t2343*(-1.*t3578*t4311 - 1.*t4001*t4374 + t6666 + t6667) + t4290*t6686 + t4149*(t4001*t4284 + t2615*t4311 + t6694 + t6695) + t3578*t6717)*var2[4];
  p_output1[18]=t2385*t4982*var2[0] + (t2360*t4950 + t2480*t4982*t57)*var2[1] + (-1.*t2360*t2480*t4982 + t4950*t57)*var2[2] + (t2385*t4831*t6543 + t2385*t4912*t6590 + t6413*(t2480*t3586*t4887 - 1.*t2385*t4078*t4887 - 1.*t2385*t4025*t4912 + t2480*t4115*t4912 + t6915 + t6922) + t4078*(t2385*t4025*t4831 - 1.*t2480*t4115*t4831 - 1.*t2480*t2629*t4887 + t2385*t4887*t6413 + t6932 + t6933))*var2[3] + (t4851*t6686 + t4869*t6717 + t2343*(-1.*t3578*t4887 - 1.*t4001*t4912 + t6915 + t6922) + t4149*(t4001*t4831 + t2615*t4887 + t6932 + t6933))*var2[4] + (t2456*(-1.*t3522*t3998 - 1.*t3558*t4625 - 1.*t3522*t4662 - 1.*t3962*t4725) + t3371*(t2071*t4625 + t2125*t4662 + t3962*t4818 + t3998*t4822))*var2[5];
  p_output1[19]=t5713*var2[0] + (t2360*t5561 - 1.*t57*t5838)*var2[1] + (t5561*t57 + t2360*t5838)*var2[2] + (t5546*t6543 + t5729*t6590 + t6413*(-1.*t4025*t5729 - 1.*t4115*t5762 - 1.*t4078*t5781 - 1.*t3586*t5794 + t7155 + t7160) + t4078*(t4025*t5546 + t4115*t5671 + t2629*t5794 + t5781*t6413 + t7165 + t7177))*var2[3] + (t5653*t6686 + t5577*t6717 + t2343*(-1.*t4001*t5593 - 1.*t3578*t5601 + t7040 + t7041 + t7155 + t7160) + t4149*(t4001*t5534 + t2615*t5601 + t7013 + t7014 + t7165 + t7177))*var2[4] + (t3487*t6997 + t3371*(t2071*t5208 + t2125*t5214 + t3962*t5520 + t3998*t5530 + t7013 + t7014) + t2456*(-1.*t3558*t5208 - 1.*t3522*t5214 - 1.*t3962*t5289 - 1.*t3998*t5309 + t7040 + t7041) + t5511*t7052)*var2[5] + (-0.15121*t5110 - 0.15121*t5122 + t3371*(t1996*t5178 + t1777*t5205 + t3950*t5471 + t3919*t5495 + t5350*t5511 + t7013) + t2456*(-1.*t3487*t5178 - 1.*t3460*t5205 - 1.*t3950*t5273 - 1.*t3919*t5285 - 1.*t3487*t5350 + t7041) + t3487*t7071 + t5511*t7126)*var2[9];
  p_output1[20]=t6376*var2[0] + (t2360*t6323 - 1.*t57*t6393)*var2[1] + (t57*t6323 + t2360*t6393)*var2[2] + (t6254*t6543 + t6413*(-1.*t4078*t6343 - 1.*t3586*t6361 + t7361) + t4078*(t4025*t6254 + t4115*t6271 + t2629*t6361 + t6343*t6413 + t7369 + t7388))*var2[3] + (t6266*t6686 + t2343*(-1.*t3578*t6300 + t7246 + t7361) + t4149*(t4001*t6250 + t2615*t6300 + t7238 + t7240 + t7369 + t7388))*var2[4] + (t6226*t7052 + t3371*(t2125*t5915 + t2071*t5929 + t3962*t6236 + t3998*t6243 + t7238 + t7240) + t2456*(-1.*t3522*t5915 - 1.*t3558*t5929 + t7246))*var2[5] + (-0.15121*t5966 - 0.15121*t5986 + t6226*t7126 + t3371*(t1777*t5896 + t1996*t5904 + t3919*t6117 + t3950*t6130 + t5350*t6226 + t7240) + t2456*(-1.*t3460*t5896 - 1.*t3487*t5904 + t7246))*var2[9] + (-0.28121*t5940 - 0.038749*t5949 + 1.e-6*t5964 - 1.*t3316*t7296 - 1.*t6103*t7303 - 1.*t1155*t7313 + 4.e-6*(-1.*t3351*t7296 - 1.*t6114*t7303 - 1.*t1647*t7313))*var2[10];
  p_output1[21]=t3315;
  p_output1[22]=0. + t6501 + t6503;
  p_output1[23]=0. + t2360*t4233 + t4257*t57;
  p_output1[24]=t6413*t6543 + t4078*t6590;
  p_output1[25]=t2343*t6686 + t4149*t6717;
  p_output1[26]=t3371*t6997 + t2456*t7052;
  p_output1[27]=-0.15121*t3102 - 0.15121*t3162 + t3371*t7071 + t2456*t7126;
  p_output1[28]=-0.038749*t2875 + 1.e-6*t2902 - 0.28121*t2984 - 1.*t1155*t7303 - 1.*t3316*t7496 + 4.e-6*(-1.*t1647*t7303 - 1.*t3351*t7496);
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t2360*t3586 - 1.*t4149*t57)*var2[1] + t7565*var2[2];
  p_output1[31]=t3586*var2[0] - 1.*t4113*t57*var2[1] + t2360*t4113*var2[2] + ((t3315*t4100 + t4025*t4145 + t4007*t4233 + t4115*t4242)*t6413 + t3315*(-1.*t2629*t4007 - 1.*t2843*t4025 - 1.*t2789*t4115 - 1.*t4100*t6413) + t2843*t7597 + t4145*t7613)*var2[3];
  p_output1[32]=t2385*t4374*var2[0] + (t2360*t3578 + t2480*t4374*t57)*var2[1] + (-1.*t2360*t2480*t4374 + t3578*t57)*var2[2] + (t2385*t4284*t7597 + t2385*t4466*t7613 + t6413*(t2385*t3315*t4311 - 1.*t2480*t4233*t4311 + t2385*t4025*t4466 - 1.*t2480*t4115*t4466 + t7664 + t7666) + t3315*(-1.*t2385*t4025*t4284 + t2480*t4115*t4284 + t2480*t2629*t4311 - 1.*t2385*t4311*t6413 + t7680 + t7681))*var2[3] + (t2343*(t3283*t4311 + t4001*t4466 + t7664 + t7666) + t4290*t7675 + t4257*(-1.*t4001*t4284 - 1.*t2615*t4311 + t7680 + t7681) + t4399*t7688)*var2[4];
  p_output1[33]=t2385*t4912*var2[0] + (t2360*t4869 + t2480*t4912*t57)*var2[1] + (-1.*t2360*t2480*t4912 + t4869*t57)*var2[2] + (t2385*t4831*t7597 + t2385*t4982*t7613 + t6413*(t2385*t3315*t4887 - 1.*t2480*t4233*t4887 + t2385*t4025*t4982 - 1.*t2480*t4115*t4982 + t7828 + t7844) + t3315*(-1.*t2385*t4025*t4831 + t2480*t4115*t4831 + t2480*t2629*t4887 - 1.*t2385*t4887*t6413 + t7855 + t7857))*var2[3] + (t4851*t7675 + t4950*t7688 + t2343*(t3283*t4887 + t4001*t4982 + t7828 + t7844) + t4257*(-1.*t4001*t4831 - 1.*t2615*t4887 + t7855 + t7857))*var2[4] + (t2456*(t3962*t4604 + t3207*t4625 + t3191*t4662 + t3998*t4694) + t3015*(-1.*t2071*t4625 - 1.*t2125*t4662 - 1.*t3962*t4818 - 1.*t3998*t4822))*var2[5];
  p_output1[34]=t5729*var2[0] + (t2360*t5577 - 1.*t57*t5762)*var2[1] + (t5577*t57 + t2360*t5762)*var2[2] + (t5546*t7597 + t5713*t7613 + t6413*(t4025*t5713 + t3315*t5781 + t4233*t5794 + t4115*t5838 + t8076 + t8084) + t3315*(-1.*t4025*t5546 - 1.*t4115*t5671 - 1.*t2629*t5794 - 1.*t5781*t6413 + t8089 + t8093))*var2[3] + (t5653*t7675 + t5561*t7688 + t2343*(t3283*t5601 + t4001*t5639 + t7965 + t7967 + t8076 + t8084) + t4257*(-1.*t4001*t5534 - 1.*t2615*t5601 + t7932 + t7936 + t8089 + t8093))*var2[4] + (t3015*(-1.*t2071*t5208 - 1.*t2125*t5214 - 1.*t3962*t5520 - 1.*t3998*t5530 + t7932 + t7936) + t5223*t7944 + t2456*(t3962*t5128 + t3998*t5142 + t3207*t5208 + t3191*t5214 + t7965 + t7967) + t5511*t7977)*var2[5] + (-0.15121*t5273 - 0.15121*t5285 + t3015*(-1.*t1996*t5178 - 1.*t1777*t5205 - 1.*t3950*t5471 - 1.*t3919*t5495 - 1.*t5350*t5511 + t7932) + t2456*(t3950*t5110 + t3919*t5122 + t3162*t5178 + t3102*t5205 + t5223*t5350 + t7967) + t5223*t8014 + t5511*t8049)*var2[9];
  p_output1[35]=(t6254*t7597 + t6376*t7613 + t6413*(t3315*t6343 + t4233*t6361 + t4025*t6376 + t4115*t6393 + t8267 + t8270) + t3315*(-1.*t4025*t6254 - 1.*t4115*t6271 - 1.*t2629*t6361 - 1.*t6343*t6413 + t8277 + t8280))*var2[3] + (t6266*t7675 + t6323*t7688 + t2343*(t3283*t6300 + t4001*t6330 + t8163 + t8164 + t8267 + t8270) + t4257*(-1.*t4001*t6250 - 1.*t2615*t6300 + t8143 + t8144 + t8277 + t8280))*var2[4] + (t6035*t7944 + t6226*t7977 + t3015*(-1.*t2125*t5915 - 1.*t2071*t5929 - 1.*t3962*t6236 - 1.*t3998*t6243 + t8143 + t8144) + t2456*(t3191*t5915 + t3207*t5929 + t3962*t5995 + t3998*t6007 + t8163 + t8164))*var2[5] + (t6035*t8014 + t6226*t8049 + t3015*(-1.*t1777*t5896 - 1.*t1996*t5904 - 1.*t3919*t6117 - 1.*t3950*t6130 - 1.*t5350*t6226 + t8144) + t2456*(t3102*t5896 + t3162*t5904 + t3919*t5966 + t3950*t5986 + t5350*t6035 + t8163))*var2[9] + (-1.*t5964*t8208 - 1.*t6103*t8217 - 1.*t2902*t8230 - 1.*t1155*t8251 + 4.e-6*(-1.*t5940*t8208 - 1.*t6114*t8217 - 1.*t2984*t8230 - 1.*t1647*t8251))*var2[10];
  p_output1[36]=t4078;
  p_output1[37]=t7565;
  p_output1[38]=t2360*t3586 + t4149*t57;
  p_output1[39]=t6413*t7597 + t3315*t7613;
  p_output1[40]=t2343*t7675 + t4257*t7688;
  p_output1[41]=t3015*t7944 + t2456*t7977;
  p_output1[42]=-0.15121*t3460 - 0.15121*t3487 + t3015*t8014 + t2456*t8049;
  p_output1[43]=1.e-6*t3316 - 0.28121*t3351 - 1.*t2902*t8208 - 1.*t1155*t8217 + 4.e-6*(-1.*t2984*t8208 - 1.*t1647*t8217);
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void J_dh_FrFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
