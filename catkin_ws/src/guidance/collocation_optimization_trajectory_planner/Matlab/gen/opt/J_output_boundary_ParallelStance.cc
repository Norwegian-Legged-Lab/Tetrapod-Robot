/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:43 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t47;
  double t110;
  double t114;
  double t130;
  double t153;
  double t164;
  double t66;
  double t279;
  double t325;
  double t327;
  double t328;
  double t331;
  double t380;
  double t406;
  double t317;
  double t318;
  double t319;
  double t354;
  double t363;
  double t364;
  double t466;
  double t467;
  double t476;
  double t479;
  double t408;
  double t414;
  double t425;
  double t431;
  double t432;
  double t438;
  double t564;
  double t522;
  double t535;
  double t538;
  double t542;
  double t495;
  double t499;
  double t503;
  double t505;
  double t506;
  double t509;
  double t206;
  double t243;
  double t284;
  double t290;
  double t321;
  double t330;
  double t337;
  double t343;
  double t367;
  double t370;
  double t377;
  double t651;
  double t679;
  double t681;
  double t706;
  double t707;
  double t711;
  double t453;
  double t477;
  double t482;
  double t489;
  double t513;
  double t516;
  double t519;
  double t543;
  double t553;
  double t556;
  double t557;
  double t626;
  double t628;
  double t754;
  double t762;
  double t767;
  double t720;
  double t724;
  double t728;
  double t799;
  double t800;
  double t802;
  double t569;
  double t577;
  double t692;
  double t713;
  double t739;
  double t770;
  double t804;
  double t808;
  double t816;
  double t817;
  double t820;
  double t832;
  double t833;
  double t848;
  double t856;
  double t859;
  double t873;
  double t875;
  double t885;
  double t896;
  double t898;
  double t904;
  double t986;
  double t988;
  double t1003;
  double t1064;
  double t1074;
  double t1080;
  double t1084;
  double t1093;
  double t1101;
  double t1103;
  double t1107;
  double t1023;
  double t1042;
  double t1048;
  double t1054;
  double t1205;
  double t1211;
  double t1212;
  double t1214;
  double t1176;
  double t1187;
  double t1188;
  double t1194;
  double t1227;
  double t1232;
  double t1316;
  double t1307;
  double t1314;
  double t1317;
  double t1321;
  double t1324;
  double t1329;
  double t1330;
  double t385;
  double t386;
  double t395;
  double t396;
  double t1334;
  double t1336;
  double t1338;
  double t1341;
  double t1344;
  double t1345;
  double t1352;
  double t1356;
  double t1358;
  double t1359;
  double t1391;
  double t1392;
  double t1395;
  double t1396;
  double t1373;
  double t1377;
  double t1384;
  double t1388;
  double t1444;
  double t1446;
  double t1449;
  double t1454;
  double t1455;
  double t1457;
  double t1467;
  double t1471;
  double t1473;
  double t1477;
  double t1501;
  double t1507;
  double t1510;
  double t1514;
  double t1487;
  double t1489;
  double t1492;
  double t1497;
  double t1563;
  double t1565;
  double t1566;
  double t1575;
  double t1576;
  double t1579;
  double t1583;
  double t1584;
  double t1586;
  double t1588;
  double t1592;
  double t1595;
  double t1610;
  double t1612;
  double t1613;
  double t1597;
  double t1598;
  double t1604;
  double t1621;
  double t1622;
  double t1623;
  double t923;
  double t924;
  double t931;
  double t941;
  double t1668;
  double t1670;
  double t1671;
  double t1678;
  double t1681;
  double t1683;
  double t1685;
  double t1695;
  double t1696;
  double t1697;
  double t1688;
  double t1690;
  double t1692;
  double t1699;
  double t1700;
  double t1703;
  double t963;
  double t966;
  double t968;
  double t973;
  double t974;
  double t977;
  double t1008;
  double t1012;
  double t1015;
  double t1757;
  double t1759;
  double t1766;
  double t1785;
  double t1787;
  double t1789;
  double t1793;
  double t1799;
  double t1800;
  double t1802;
  double t1803;
  double t1771;
  double t1772;
  double t1777;
  double t1782;
  double t1195;
  double t1196;
  double t1203;
  double t1218;
  double t1220;
  double t1225;
  double t1240;
  double t1246;
  double t1250;
  double t1872;
  double t1879;
  double t1881;
  double t1882;
  double t1850;
  double t1852;
  double t1862;
  double t1863;
  double t1886;
  double t1891;
  double t1902;
  double t1906;
  double t1979;
  double t1983;
  double t1984;
  double t1989;
  double t1991;
  double t1993;
  double t2006;
  double t2008;
  double t2012;
  double t2014;
  double t2033;
  double t2036;
  double t2042;
  double t2045;
  double t2023;
  double t2026;
  double t2028;
  double t2029;
  double t2101;
  double t2104;
  double t2105;
  double t2113;
  double t2114;
  double t2126;
  double t2127;
  double t2129;
  double t2143;
  double t2145;
  double t2149;
  double t2134;
  double t2137;
  double t2140;
  double t2153;
  double t2156;
  double t2162;
  double t2197;
  double t2199;
  double t2201;
  double t2204;
  double t2205;
  double t2214;
  double t2216;
  double t2225;
  double t2227;
  double t2229;
  double t2219;
  double t2222;
  double t2223;
  double t2237;
  double t2240;
  double t2241;
  double t2282;
  double t2289;
  double t2290;
  double t2305;
  double t2311;
  double t2312;
  double t2320;
  double t2321;
  double t2323;
  double t2326;
  double t2294;
  double t2296;
  double t2299;
  double t2300;
  double t2388;
  double t2389;
  double t2390;
  double t2391;
  double t2375;
  double t2378;
  double t2380;
  double t2382;
  double t2400;
  double t2402;
  double t2440;
  double t2447;
  double t2448;
  double t2452;
  double t2476;
  double t2478;
  double t2482;
  double t2484;
  double t2485;
  double t2451;
  double t2462;
  double t2508;
  double t2566;
  double t2567;
  double t2568;
  double t2574;
  double t2539;
  double t2544;
  double t2517;
  double t2518;
  double t2520;
  double t2554;
  double t2555;
  double t2557;
  double t2580;
  double t2504;
  double t2616;
  double t2509;
  double t2630;
  double t2573;
  double t2645;
  double t2649;
  double t2457;
  double t2604;
  double t2607;
  double t2614;
  double t2618;
  double t2619;
  double t2621;
  double t2623;
  double t2624;
  double t2625;
  double t2693;
  double t2656;
  double t2657;
  double t2670;
  double t2674;
  double t2677;
  double t2683;
  double t2685;
  double t2686;
  double t2709;
  double t2714;
  double t2723;
  double t2725;
  double t2731;
  double t2732;
  double t2733;
  double t2736;
  double t2589;
  double t2741;
  double t2576;
  double t2771;
  double t2636;
  double t2744;
  double t2745;
  double t2632;
  double t2497;
  double t2498;
  double t2483;
  double t2490;
  double t2530;
  double t2536;
  double t2542;
  double t2543;
  double t2546;
  double t2551;
  double t2553;
  double t2502;
  double t2503;
  double t2505;
  double t2506;
  double t2512;
  double t2515;
  double t2516;
  double t2627;
  double t2628;
  double t2634;
  double t2635;
  double t2641;
  double t2643;
  double t2644;
  double t2820;
  double t2821;
  double t2822;
  double t2824;
  double t2834;
  double t2835;
  double t2559;
  double t2571;
  double t2578;
  double t2579;
  double t2594;
  double t2599;
  double t2601;
  double t2690;
  double t2692;
  double t2694;
  double t2697;
  double t2699;
  double t2705;
  double t2706;
  double t2746;
  double t2846;
  double t2853;
  double t2855;
  double t2742;
  double t2857;
  double t2860;
  double t2865;
  double t2751;
  double t2753;
  double t2870;
  double t2876;
  double t2883;
  double t2772;
  double t2757;
  double t2764;
  double t2775;
  double t2789;
  double t2791;
  double t2781;
  double t2795;
  double t2924;
  double t2823;
  double t2836;
  double t2856;
  double t2869;
  double t2884;
  double t2885;
  double t2886;
  double t2891;
  double t2893;
  double t2894;
  double t2895;
  double t2896;
  double t2897;
  double t2901;
  double t2902;
  double t2903;
  double t2909;
  double t2912;
  double t2917;
  double t2921;
  double t2934;
  double t2949;
  double t2961;
  double t2988;
  double t2989;
  double t2991;
  double t2938;
  double t3010;
  double t2982;
  double t2994;
  double t2995;
  double t2996;
  double t2997;
  double t2999;
  double t3000;
  double t3003;
  double t3008;
  double t3009;
  double t3012;
  double t3016;
  double t3019;
  double t3027;
  double t3028;
  double t3029;
  double t3033;
  double t3034;
  double t3035;
  double t3076;
  double t3102;
  double t3089;
  double t3091;
  double t3093;
  double t3094;
  double t3109;
  double t3110;
  double t3112;
  double t3113;
  double t3098;
  double t3125;
  double t3131;
  double t3133;
  double t3135;
  double t3081;
  double t3153;
  double t3120;
  double t2439;
  double t2449;
  double t2458;
  double t2461;
  double t2463;
  double t2464;
  double t2466;
  double t3182;
  double t3184;
  double t3185;
  double t3187;
  double t3188;
  double t3190;
  double t3196;
  double t3197;
  double t3198;
  double t3201;
  double t3208;
  double t3209;
  double t3211;
  double t3213;
  double t3217;
  double t3220;
  double t3221;
  double t3222;
  double t3268;
  double t3274;
  double t3276;
  double t3284;
  double t3286;
  double t3287;
  double t3292;
  double t3298;
  double t3299;
  double t3300;
  double t3302;
  double t3303;
  double t3305;
  double t3306;
  double t3312;
  double t3316;
  double t3319;
  double t3320;
  double t3376;
  double t3378;
  double t3382;
  double t3388;
  double t3389;
  double t3390;
  double t3396;
  double t3397;
  double t3398;
  double t3409;
  double t3411;
  double t3416;
  double t3418;
  double t3420;
  double t3424;
  double t2925;
  double t2926;
  double t2928;
  double t3489;
  double t3490;
  double t3493;
  double t3495;
  double t3500;
  double t3503;
  double t3507;
  double t3509;
  double t3510;
  double t3511;
  double t3515;
  double t3517;
  double t3518;
  double t2935;
  double t2937;
  double t2940;
  double t2943;
  double t2944;
  double t2945;
  double t2954;
  double t2960;
  double t2962;
  double t2963;
  double t2966;
  double t2967;
  double t2976;
  double t2980;
  double t2983;
  double t2984;
  double t2985;
  double t2987;
  double t3565;
  double t3566;
  double t3571;
  double t3576;
  double t3577;
  double t3579;
  double t3582;
  double t3584;
  double t3592;
  double t3594;
  double t3599;
  double t3601;
  double t3602;
  double t3603;
  double t3605;
  double t3078;
  double t3080;
  double t3082;
  double t3083;
  double t3087;
  double t3088;
  double t3100;
  double t3101;
  double t3103;
  double t3104;
  double t3106;
  double t3108;
  double t3117;
  double t3119;
  double t3121;
  double t3122;
  double t3123;
  double t3124;
  double t3141;
  double t3661;
  double t3664;
  double t3670;
  double t3671;
  double t3673;
  double t3674;
  double t3675;
  double t3676;
  double t3144;
  double t3679;
  double t3690;
  double t3696;
  double t3707;
  double t3151;
  double t3154;
  double t3161;
  double t3164;
  double t3827;
  double t3831;
  double t3832;
  double t3836;
  double t3839;
  double t3843;
  double t3848;
  double t3850;
  double t3852;
  double t3853;
  double t3855;
  double t3856;
  double t3859;
  double t3860;
  double t3865;
  double t3870;
  double t3871;
  double t3872;
  double t3915;
  double t3917;
  double t3923;
  double t3925;
  double t3926;
  double t3931;
  double t3933;
  double t3935;
  double t3940;
  double t3941;
  double t3942;
  double t3947;
  double t3948;
  double t3953;
  double t3984;
  double t3985;
  double t3993;
  double t3994;
  double t4002;
  double t4004;
  double t4007;
  double t4010;
  double t4011;
  double t4013;
  double t4020;
  double t4021;
  double t4023;
  double t4072;
  double t4075;
  double t4080;
  double t4084;
  double t4085;
  double t4086;
  double t4087;
  double t4092;
  double t4096;
  double t4097;
  double t4099;
  double t4101;
  double t4108;
  double t4109;
  double t4110;
  double t4171;
  double t4173;
  double t4174;
  double t4177;
  double t4181;
  double t4182;
  double t4185;
  double t4192;
  double t4200;
  double t4201;
  double t4207;
  double t4209;
  t47 = Sin(var1[4]);
  t110 = Cos(var1[6]);
  t114 = -1.*t110;
  t130 = 1. + t114;
  t153 = 0.15121*t130;
  t164 = Sin(var1[6]);
  t66 = Sin(var1[5]);
  t279 = Cos(var1[5]);
  t325 = Cos(var1[7]);
  t327 = -1.*t325;
  t328 = 1. + t327;
  t331 = Sin(var1[7]);
  t380 = Cos(var1[4]);
  t406 = -1. + t325;
  t317 = t110*t47*t66;
  t318 = t279*t47*t164;
  t319 = t317 + t318;
  t354 = -1.*t279*t110*t47;
  t363 = t47*t66*t164;
  t364 = t354 + t363;
  t466 = Cos(var1[8]);
  t467 = -1.*t466;
  t476 = 1. + t467;
  t479 = Sin(var1[8]);
  t408 = 4.e-6*t380*t406;
  t414 = 1.6e-11*t406;
  t425 = 1. + t414;
  t431 = t425*t319;
  t432 = 4.e-6*t364*t331;
  t438 = t408 + t431 + t432;
  t564 = -1. + t466;
  t522 = t380*t325;
  t535 = 4.e-6*t406*t319;
  t538 = t364*t331;
  t542 = t522 + t535 + t538;
  t495 = -1.000000000016*t328;
  t499 = 1. + t495;
  t503 = t499*t364;
  t505 = -1.*t380*t331;
  t506 = -4.e-6*t319*t331;
  t509 = t503 + t505 + t506;
  t206 = -0.15121*t164;
  t243 = t153 + t206;
  t284 = 0.15121*t164;
  t290 = t153 + t284;
  t321 = -1.2484e-7*var1[7];
  t330 = -1.5499600000248e-7*t328;
  t337 = 1.124840000016e-6*t331;
  t343 = t321 + t330 + t337;
  t367 = 0.281210000008499*t328;
  t370 = 0.03874900000062*t331;
  t377 = t367 + t370;
  t651 = -1.*t380*t279*t110;
  t679 = t380*t66*t164;
  t681 = t651 + t679;
  t706 = -1.*t380*t110*t66;
  t707 = -1.*t380*t279*t164;
  t711 = t706 + t707;
  t453 = -1.284e-8*var1[8];
  t477 = -1.5499600000248e-7*t476;
  t482 = 2.012840000032e-6*t479;
  t489 = t453 + t477 + t482;
  t513 = 0.503210000016051*t476;
  t516 = 0.03874900000062*t479;
  t519 = t513 + t516;
  t543 = 5.136e-14*var1[8];
  t553 = -0.03874900000062*t476;
  t556 = 0.503210000008*t479;
  t557 = t543 + t553 + t556;
  t626 = -1.000000000016*t476;
  t628 = 1. + t626;
  t754 = t499*t711;
  t762 = -4.e-6*t681*t331;
  t767 = t754 + t762;
  t720 = t425*t681;
  t724 = 4.e-6*t711*t331;
  t728 = t720 + t724;
  t799 = 4.e-6*t406*t681;
  t800 = t711*t331;
  t802 = t799 + t800;
  t569 = 1.6e-11*t564;
  t577 = 1. + t569;
  t692 = t681*t343;
  t713 = t711*t377;
  t739 = t728*t489;
  t770 = t767*t519;
  t804 = t802*t557;
  t808 = t628*t767;
  t816 = -4.e-6*t728*t479;
  t817 = -1.*t802*t479;
  t820 = t808 + t816 + t817;
  t832 = 0.80321*t820;
  t833 = t577*t728;
  t848 = 4.e-6*t564*t802;
  t856 = 4.e-6*t767*t479;
  t859 = t833 + t848 + t856;
  t873 = 0.14871*t859;
  t875 = 4.e-6*t564*t728;
  t885 = t466*t802;
  t896 = t767*t479;
  t898 = t875 + t885 + t896;
  t904 = -0.03875*t898;
  t986 = t380*t279*t110;
  t988 = -1.*t380*t66*t164;
  t1003 = t986 + t988;
  t1064 = -1.*t325*t47;
  t1074 = -4.e-6*t325*t711;
  t1080 = -1.000000000016*t1003*t331;
  t1084 = t1064 + t1074 + t1080;
  t1093 = t325*t1003;
  t1101 = -1.*t47*t331;
  t1103 = -4.e-6*t711*t331;
  t1107 = t1093 + t1101 + t1103;
  t1023 = 4.e-6*t325*t1003;
  t1042 = -4.e-6*t47*t331;
  t1048 = -1.6e-11*t711*t331;
  t1054 = t1023 + t1042 + t1048;
  t1205 = 4.e-6*t406*t47;
  t1211 = t425*t711;
  t1212 = 4.e-6*t1003*t331;
  t1214 = t1205 + t1211 + t1212;
  t1176 = t325*t47;
  t1187 = 4.e-6*t406*t711;
  t1188 = t1003*t331;
  t1194 = t1176 + t1187 + t1188;
  t1227 = t499*t1003;
  t1232 = t1227 + t1101 + t1103;
  t1316 = Cos(var1[3]);
  t1307 = Sin(var1[3]);
  t1314 = -1.*t279*t1307;
  t1317 = -1.*t1316*t47*t66;
  t1321 = t1314 + t1317;
  t1324 = t1316*t279*t47;
  t1329 = -1.*t1307*t66;
  t1330 = t1324 + t1329;
  t385 = 4.9936e-13*var1[7];
  t386 = -0.03874900000062*t328;
  t395 = 0.281210000004*t331;
  t396 = t385 + t386 + t395;
  t1334 = t110*t1321;
  t1336 = -1.*t1330*t164;
  t1338 = t1334 + t1336;
  t1341 = t110*t1330;
  t1344 = t1321*t164;
  t1345 = t1341 + t1344;
  t1352 = -4.e-6*t1316*t380*t406;
  t1356 = t425*t1338;
  t1358 = 4.e-6*t1345*t331;
  t1359 = t1352 + t1356 + t1358;
  t1391 = -1.*t1316*t380*t325;
  t1392 = 4.e-6*t406*t1338;
  t1395 = t1345*t331;
  t1396 = t1391 + t1392 + t1395;
  t1373 = t499*t1345;
  t1377 = t1316*t380*t331;
  t1384 = -4.e-6*t1338*t331;
  t1388 = t1373 + t1377 + t1384;
  t1444 = -1.*t380*t110*t1307*t66;
  t1446 = -1.*t380*t279*t1307*t164;
  t1449 = t1444 + t1446;
  t1454 = t380*t279*t110*t1307;
  t1455 = -1.*t380*t1307*t66*t164;
  t1457 = t1454 + t1455;
  t1467 = 4.e-6*t406*t1307*t47;
  t1471 = t425*t1449;
  t1473 = 4.e-6*t1457*t331;
  t1477 = t1467 + t1471 + t1473;
  t1501 = t325*t1307*t47;
  t1507 = 4.e-6*t406*t1449;
  t1510 = t1457*t331;
  t1514 = t1501 + t1507 + t1510;
  t1487 = t499*t1457;
  t1489 = -1.*t1307*t47*t331;
  t1492 = -4.e-6*t1449*t331;
  t1497 = t1487 + t1489 + t1492;
  t1563 = -1.*t279*t1307*t47;
  t1565 = -1.*t1316*t66;
  t1566 = t1563 + t1565;
  t1575 = t1316*t279;
  t1576 = -1.*t1307*t47*t66;
  t1579 = t1575 + t1576;
  t1583 = t110*t1566;
  t1584 = -1.*t1579*t164;
  t1586 = t1583 + t1584;
  t1588 = t110*t1579;
  t1592 = t1566*t164;
  t1595 = t1588 + t1592;
  t1610 = t499*t1595;
  t1612 = -4.e-6*t1586*t331;
  t1613 = t1610 + t1612;
  t1597 = t425*t1586;
  t1598 = 4.e-6*t1595*t331;
  t1604 = t1597 + t1598;
  t1621 = 4.e-6*t406*t1586;
  t1622 = t1595*t331;
  t1623 = t1621 + t1622;
  t923 = -0.15121*t110;
  t924 = t923 + t284;
  t931 = 0.15121*t110;
  t941 = t931 + t284;
  t1668 = t279*t1307*t47;
  t1670 = t1316*t66;
  t1671 = t1668 + t1670;
  t1678 = -1.*t110*t1671;
  t1681 = t1678 + t1584;
  t1683 = -1.*t1671*t164;
  t1685 = t1588 + t1683;
  t1695 = t499*t1685;
  t1696 = -4.e-6*t1681*t331;
  t1697 = t1695 + t1696;
  t1688 = t425*t1681;
  t1690 = 4.e-6*t1685*t331;
  t1692 = t1688 + t1690;
  t1699 = 4.e-6*t406*t1681;
  t1700 = t1685*t331;
  t1703 = t1699 + t1700;
  t963 = 0.281210000004*t325;
  t966 = -0.03874900000062*t331;
  t968 = 4.9936e-13 + t963 + t966;
  t973 = 1.124840000016e-6*t325;
  t974 = -1.5499600000248e-7*t331;
  t977 = -1.2484e-7 + t973 + t974;
  t1008 = 0.03874900000062*t325;
  t1012 = 0.281210000008499*t331;
  t1015 = t1008 + t1012;
  t1757 = t110*t1671;
  t1759 = t1579*t164;
  t1766 = t1757 + t1759;
  t1785 = t380*t325*t1307;
  t1787 = -4.e-6*t325*t1685;
  t1789 = -1.000000000016*t1766*t331;
  t1793 = t1785 + t1787 + t1789;
  t1799 = t325*t1766;
  t1800 = t380*t1307*t331;
  t1802 = -4.e-6*t1685*t331;
  t1803 = t1799 + t1800 + t1802;
  t1771 = 4.e-6*t325*t1766;
  t1772 = 4.e-6*t380*t1307*t331;
  t1777 = -1.6e-11*t1685*t331;
  t1782 = t1771 + t1772 + t1777;
  t1195 = 0.503210000008*t466;
  t1196 = -0.03874900000062*t479;
  t1203 = 5.136e-14 + t1195 + t1196;
  t1218 = 2.012840000032e-6*t466;
  t1220 = -1.5499600000248e-7*t479;
  t1225 = -1.284e-8 + t1218 + t1220;
  t1240 = 0.03874900000062*t466;
  t1246 = 0.503210000016051*t479;
  t1250 = t1240 + t1246;
  t1872 = -4.e-6*t380*t406*t1307;
  t1879 = t425*t1685;
  t1881 = 4.e-6*t1766*t331;
  t1882 = t1872 + t1879 + t1881;
  t1850 = -1.*t380*t325*t1307;
  t1852 = 4.e-6*t406*t1685;
  t1862 = t1766*t331;
  t1863 = t1850 + t1852 + t1862;
  t1886 = t499*t1766;
  t1891 = t1886 + t1800 + t1802;
  t1902 = -4.e-6*t1882*t479;
  t1906 = -1.*t1863*t479;
  t1979 = t1316*t380*t110*t66;
  t1983 = t1316*t380*t279*t164;
  t1984 = t1979 + t1983;
  t1989 = -1.*t1316*t380*t279*t110;
  t1991 = t1316*t380*t66*t164;
  t1993 = t1989 + t1991;
  t2006 = -4.e-6*t1316*t406*t47;
  t2008 = t425*t1984;
  t2012 = 4.e-6*t1993*t331;
  t2014 = t2006 + t2008 + t2012;
  t2033 = -1.*t1316*t325*t47;
  t2036 = 4.e-6*t406*t1984;
  t2042 = t1993*t331;
  t2045 = t2033 + t2036 + t2042;
  t2023 = t499*t1993;
  t2026 = t1316*t47*t331;
  t2028 = -4.e-6*t1984*t331;
  t2029 = t2023 + t2026 + t2028;
  t2101 = t279*t1307;
  t2104 = t1316*t47*t66;
  t2105 = t2101 + t2104;
  t2113 = -1.*t2105*t164;
  t2114 = t1341 + t2113;
  t2126 = t110*t2105;
  t2127 = t1330*t164;
  t2129 = t2126 + t2127;
  t2143 = t499*t2129;
  t2145 = -4.e-6*t2114*t331;
  t2149 = t2143 + t2145;
  t2134 = t425*t2114;
  t2137 = 4.e-6*t2129*t331;
  t2140 = t2134 + t2137;
  t2153 = 4.e-6*t406*t2114;
  t2156 = t2129*t331;
  t2162 = t2153 + t2156;
  t2197 = -1.*t1316*t279*t47;
  t2199 = t1307*t66;
  t2201 = t2197 + t2199;
  t2204 = -1.*t110*t2201;
  t2205 = t2204 + t2113;
  t2214 = -1.*t2201*t164;
  t2216 = t2126 + t2214;
  t2225 = t499*t2216;
  t2227 = -4.e-6*t2205*t331;
  t2229 = t2225 + t2227;
  t2219 = t425*t2205;
  t2222 = 4.e-6*t2216*t331;
  t2223 = t2219 + t2222;
  t2237 = 4.e-6*t406*t2205;
  t2240 = t2216*t331;
  t2241 = t2237 + t2240;
  t2282 = t110*t2201;
  t2289 = t2105*t164;
  t2290 = t2282 + t2289;
  t2305 = -4.e-6*t325*t2216;
  t2311 = -1.000000000016*t2290*t331;
  t2312 = t1391 + t2305 + t2311;
  t2320 = t325*t2290;
  t2321 = -1.*t1316*t380*t331;
  t2323 = -4.e-6*t2216*t331;
  t2326 = t2320 + t2321 + t2323;
  t2294 = 4.e-6*t325*t2290;
  t2296 = -4.e-6*t1316*t380*t331;
  t2299 = -1.6e-11*t2216*t331;
  t2300 = t2294 + t2296 + t2299;
  t2388 = 4.e-6*t1316*t380*t406;
  t2389 = t425*t2216;
  t2390 = 4.e-6*t2290*t331;
  t2391 = t2388 + t2389 + t2390;
  t2375 = t1316*t380*t325;
  t2378 = 4.e-6*t406*t2216;
  t2380 = t2290*t331;
  t2382 = t2375 + t2378 + t2380;
  t2400 = t499*t2290;
  t2402 = t2400 + t2321 + t2323;
  t2440 = Cos(var1[13]);
  t2447 = -1.*t2440;
  t2448 = 1. + t2447;
  t2452 = Sin(var1[13]);
  t2476 = Cos(var1[12]);
  t2478 = -1.*t2476;
  t2482 = 1. + t2478;
  t2484 = Sin(var1[12]);
  t2485 = 0.15121*t2484;
  t2451 = 4.e-6*t2448;
  t2462 = -2.8e-11*t2448;
  t2508 = 7.e-6*t2448;
  t2566 = Cos(var1[14]);
  t2567 = -1.*t2566;
  t2568 = 1. + t2567;
  t2574 = Sin(var1[14]);
  t2539 = -1.*t2452;
  t2544 = -4.e-6*t2452;
  t2517 = t279*t2484*t47;
  t2518 = t2476*t47*t66;
  t2520 = t2517 + t2518;
  t2554 = -1.*t2476*t279*t47;
  t2555 = t2484*t47*t66;
  t2557 = t2554 + t2555;
  t2580 = 7.e-6*t2568;
  t2504 = -7.e-6*t2452;
  t2616 = -7.e-6*t2448;
  t2509 = 4.e-6*t2452;
  t2630 = 4.e-6*t2568;
  t2573 = -2.8e-11*t2568;
  t2645 = -1. + t2440;
  t2649 = 4.e-6*t2645;
  t2457 = 7.e-6*t2452;
  t2604 = 2.8e-11*t2448;
  t2607 = t2604 + t2539;
  t2614 = t380*t2607;
  t2618 = t2616 + t2544;
  t2619 = t2618*t2520;
  t2621 = -1.000000000016*t2448;
  t2623 = 1. + t2621;
  t2624 = t2623*t2557;
  t2625 = t2614 + t2619 + t2624;
  t2693 = 7.e-6*t2574;
  t2656 = t2649 + t2504;
  t2657 = t380*t2656;
  t2670 = -6.5e-11*t2448;
  t2674 = 1. + t2670;
  t2677 = t2674*t2520;
  t2683 = t2616 + t2509;
  t2685 = t2683*t2557;
  t2686 = t2657 + t2677 + t2685;
  t2709 = -1.000000000049*t2448;
  t2714 = 1. + t2709;
  t2723 = t2714*t380;
  t2725 = t2649 + t2457;
  t2731 = t2725*t2520;
  t2732 = t2604 + t2452;
  t2733 = t2732*t2557;
  t2736 = t2723 + t2731 + t2733;
  t2589 = -4.e-6*t2574;
  t2741 = 2.8e-11*t2568;
  t2576 = -1.*t2574;
  t2771 = -7.e-6*t2568;
  t2636 = 4.e-6*t2574;
  t2744 = -1. + t2566;
  t2745 = 4.e-6*t2744;
  t2632 = -7.e-6*t2574;
  t2497 = 0.15121*t2482;
  t2498 = t2497 + t2485;
  t2483 = -0.15121*t2482;
  t2490 = t2483 + t2485;
  t2530 = 1.0248489999999998e-12*var1[13];
  t2536 = -0.28120900000849935*t2448;
  t2542 = t2462 + t2539;
  t2543 = -0.038748999993*t2542;
  t2546 = t2508 + t2544;
  t2551 = -2.123459e-6*t2546;
  t2553 = t2530 + t2536 + t2543 + t2551;
  t2502 = -1.4640699999999997e-7*var1[13];
  t2503 = -1.38024835e-16*t2448;
  t2505 = t2451 + t2504;
  t2506 = -0.038748999993*t2505;
  t2512 = t2508 + t2509;
  t2515 = -0.281209000004*t2512;
  t2516 = t2502 + t2503 + t2506 + t2515;
  t2627 = -2.598649999999999e-7*var1[14];
  t2628 = -2.3905277499999995e-16*t2568;
  t2634 = t2630 + t2632;
  t2635 = -0.038922999986*t2634;
  t2641 = t2580 + t2636;
  t2643 = -0.503149000008*t2641;
  t2644 = t2627 + t2628 + t2635 + t2643;
  t2820 = -1.*t380*t279*t2484;
  t2821 = -1.*t2476*t380*t66;
  t2822 = t2820 + t2821;
  t2824 = -1.*t2476*t380*t279;
  t2834 = t380*t2484*t66;
  t2835 = t2824 + t2834;
  t2559 = 1.8190549999999993e-12*var1[14];
  t2571 = -0.5031490000160505*t2568;
  t2578 = t2573 + t2576;
  t2579 = -0.038922999986*t2578;
  t2594 = t2580 + t2589;
  t2599 = -3.6777349999999994e-6*t2594;
  t2601 = t2559 + t2571 + t2579 + t2599;
  t2690 = 1.0394599999999997e-12*var1[14];
  t2692 = -0.03892299998790722*t2568;
  t2694 = t2630 + t2693;
  t2697 = -3.6777349999999994e-6*t2694;
  t2699 = t2573 + t2574;
  t2705 = -0.503149000008*t2699;
  t2706 = t2690 + t2692 + t2697 + t2705;
  t2746 = t2745 + t2693;
  t2846 = t2683*t2822;
  t2853 = t2674*t2835;
  t2855 = t2846 + t2853;
  t2742 = t2741 + t2574;
  t2857 = t2623*t2822;
  t2860 = t2618*t2835;
  t2865 = t2857 + t2860;
  t2751 = -1.000000000049*t2568;
  t2753 = 1. + t2751;
  t2870 = t2732*t2822;
  t2876 = t2725*t2835;
  t2883 = t2870 + t2876;
  t2772 = t2771 + t2589;
  t2757 = -1.000000000016*t2568;
  t2764 = 1. + t2757;
  t2775 = t2741 + t2576;
  t2789 = -6.5e-11*t2568;
  t2791 = 1. + t2789;
  t2781 = t2771 + t2636;
  t2795 = t2745 + t2632;
  t2924 = 0.15121*t2476;
  t2823 = t2553*t2822;
  t2836 = t2516*t2835;
  t2856 = t2644*t2855;
  t2869 = t2601*t2865;
  t2884 = t2706*t2883;
  t2885 = t2746*t2855;
  t2886 = t2742*t2865;
  t2891 = t2753*t2883;
  t2893 = t2885 + t2886 + t2891;
  t2894 = -0.038924*t2893;
  t2895 = t2772*t2855;
  t2896 = t2764*t2865;
  t2897 = t2775*t2883;
  t2901 = t2895 + t2896 + t2897;
  t2902 = -0.80315*t2901;
  t2903 = t2791*t2855;
  t2909 = t2781*t2865;
  t2912 = t2795*t2883;
  t2917 = t2903 + t2909 + t2912;
  t2921 = 0.148705*t2917;
  t2934 = -2.8e-11*t2452;
  t2949 = -7.e-6*t2440;
  t2961 = 4.e-6*t2440;
  t2988 = t2476*t380*t279;
  t2989 = -1.*t380*t2484*t66;
  t2991 = t2988 + t2989;
  t2938 = 7.e-6*t2440;
  t3010 = 2.8e-11*t2452;
  t2982 = -4.e-6*t2440;
  t2994 = t2949 + t2544;
  t2995 = t2994*t47;
  t2996 = -6.5e-11*t2452*t2822;
  t2997 = t2961 + t2504;
  t2999 = t2997*t2991;
  t3000 = t2995 + t2996 + t2999;
  t3003 = -1.000000000049*t2452*t47;
  t3008 = t2938 + t2544;
  t3009 = t3008*t2822;
  t3012 = t2440 + t3010;
  t3016 = t3012*t2991;
  t3019 = t3003 + t3009 + t3016;
  t3027 = t2447 + t3010;
  t3028 = t3027*t47;
  t3029 = t2982 + t2504;
  t3033 = t3029*t2822;
  t3034 = -1.000000000016*t2452*t2991;
  t3035 = t3028 + t3033 + t3034;
  t3076 = -2.8e-11*t2574;
  t3102 = 4.e-6*t2566;
  t3089 = t2607*t47;
  t3091 = t2618*t2822;
  t3093 = t2623*t2991;
  t3094 = t3089 + t3091 + t3093;
  t3109 = t2656*t47;
  t3110 = t2674*t2822;
  t3112 = t2683*t2991;
  t3113 = t3109 + t3110 + t3112;
  t3098 = -7.e-6*t2566;
  t3125 = t2714*t47;
  t3131 = t2725*t2822;
  t3133 = t2732*t2991;
  t3135 = t3125 + t3131 + t3133;
  t3081 = -4.e-6*t2566;
  t3153 = 2.8e-11*t2574;
  t3120 = 7.e-6*t2566;
  t2439 = 5.856279999999999e-13*var1[13];
  t2449 = -0.0387489999948987*t2448;
  t2458 = t2451 + t2457;
  t2461 = -2.123459e-6*t2458;
  t2463 = t2462 + t2452;
  t2464 = -0.281209000004*t2463;
  t2466 = t2439 + t2449 + t2461 + t2464;
  t3182 = -1.*t2484*t1330;
  t3184 = t2476*t1321;
  t3185 = t3182 + t3184;
  t3187 = t2476*t1330;
  t3188 = t2484*t1321;
  t3190 = t3187 + t3188;
  t3196 = -1.*t1316*t380*t2607;
  t3197 = t2618*t3185;
  t3198 = t2623*t3190;
  t3201 = t3196 + t3197 + t3198;
  t3208 = -1.*t1316*t380*t2656;
  t3209 = t2674*t3185;
  t3211 = t2683*t3190;
  t3213 = t3208 + t3209 + t3211;
  t3217 = -1.*t2714*t1316*t380;
  t3220 = t2725*t3185;
  t3221 = t2732*t3190;
  t3222 = t3217 + t3220 + t3221;
  t3268 = -1.*t380*t279*t2484*t1307;
  t3274 = -1.*t2476*t380*t1307*t66;
  t3276 = t3268 + t3274;
  t3284 = t2476*t380*t279*t1307;
  t3286 = -1.*t380*t2484*t1307*t66;
  t3287 = t3284 + t3286;
  t3292 = t2607*t1307*t47;
  t3298 = t2618*t3276;
  t3299 = t2623*t3287;
  t3300 = t3292 + t3298 + t3299;
  t3302 = t2656*t1307*t47;
  t3303 = t2674*t3276;
  t3305 = t2683*t3287;
  t3306 = t3302 + t3303 + t3305;
  t3312 = t2714*t1307*t47;
  t3316 = t2725*t3276;
  t3319 = t2732*t3287;
  t3320 = t3312 + t3316 + t3319;
  t3376 = t2484*t1566;
  t3378 = t2476*t1579;
  t3382 = t3376 + t3378;
  t3388 = t2476*t1566;
  t3389 = -1.*t2484*t1579;
  t3390 = t3388 + t3389;
  t3396 = t2683*t3382;
  t3397 = t2674*t3390;
  t3398 = t3396 + t3397;
  t3409 = t2623*t3382;
  t3411 = t2618*t3390;
  t3416 = t3409 + t3411;
  t3418 = t2732*t3382;
  t3420 = t2725*t3390;
  t3424 = t3418 + t3420;
  t2925 = -0.15121*t2484;
  t2926 = t2924 + t2925;
  t2928 = t2924 + t2485;
  t3489 = -1.*t2484*t1671;
  t3490 = t3489 + t3378;
  t3493 = -1.*t2476*t1671;
  t3495 = t3493 + t3389;
  t3500 = t2683*t3490;
  t3503 = t2674*t3495;
  t3507 = t3500 + t3503;
  t3509 = t2623*t3490;
  t3510 = t2618*t3495;
  t3511 = t3509 + t3510;
  t3515 = t2732*t3490;
  t3517 = t2725*t3495;
  t3518 = t3515 + t3517;
  t2935 = t2440 + t2934;
  t2937 = -0.281209000004*t2935;
  t2940 = t2938 + t2509;
  t2943 = -2.123459e-6*t2940;
  t2944 = -0.0387489999948987*t2452;
  t2945 = 5.856279999999999e-13 + t2937 + t2943 + t2944;
  t2954 = t2949 + t2509;
  t2960 = -0.038748999993*t2954;
  t2962 = t2961 + t2457;
  t2963 = -0.281209000004*t2962;
  t2966 = -1.38024835e-16*t2452;
  t2967 = -1.4640699999999997e-7 + t2960 + t2963 + t2966;
  t2976 = t2447 + t2934;
  t2980 = -0.038748999993*t2976;
  t2983 = t2982 + t2457;
  t2984 = -2.123459e-6*t2983;
  t2985 = -0.28120900000849935*t2452;
  t2987 = 1.0248489999999998e-12 + t2980 + t2984 + t2985;
  t3565 = t2476*t1671;
  t3566 = t2484*t1579;
  t3571 = t3565 + t3566;
  t3576 = -1.*t380*t2994*t1307;
  t3577 = -6.5e-11*t2452*t3490;
  t3579 = t2997*t3571;
  t3582 = t3576 + t3577 + t3579;
  t3584 = 1.000000000049*t380*t2452*t1307;
  t3592 = t3008*t3490;
  t3594 = t3012*t3571;
  t3599 = t3584 + t3592 + t3594;
  t3601 = -1.*t380*t3027*t1307;
  t3602 = t3029*t3490;
  t3603 = -1.000000000016*t2452*t3571;
  t3605 = t3601 + t3602 + t3603;
  t3078 = t2567 + t3076;
  t3080 = -0.038922999986*t3078;
  t3082 = t3081 + t2693;
  t3083 = -3.6777349999999994e-6*t3082;
  t3087 = -0.5031490000160505*t2574;
  t3088 = 1.8190549999999993e-12 + t3080 + t3083 + t3087;
  t3100 = t3098 + t2636;
  t3101 = -0.038922999986*t3100;
  t3103 = t3102 + t2693;
  t3104 = -0.503149000008*t3103;
  t3106 = -2.3905277499999995e-16*t2574;
  t3108 = -2.598649999999999e-7 + t3101 + t3104 + t3106;
  t3117 = t2566 + t3076;
  t3119 = -0.503149000008*t3117;
  t3121 = t3120 + t2636;
  t3122 = -3.6777349999999994e-6*t3121;
  t3123 = -0.03892299998790722*t2574;
  t3124 = 1.0394599999999997e-12 + t3119 + t3122 + t3123;
  t3141 = t3102 + t2632;
  t3661 = -1.*t380*t2607*t1307;
  t3664 = t2618*t3490;
  t3670 = t2623*t3571;
  t3671 = t3661 + t3664 + t3670;
  t3673 = -1.*t380*t2656*t1307;
  t3674 = t2674*t3490;
  t3675 = t2683*t3571;
  t3676 = t3673 + t3674 + t3675;
  t3144 = t3098 + t2589;
  t3679 = -1.*t2714*t380*t1307;
  t3690 = t2725*t3490;
  t3696 = t2732*t3571;
  t3707 = t3679 + t3690 + t3696;
  t3151 = t3081 + t2632;
  t3154 = t2567 + t3153;
  t3161 = t2566 + t3153;
  t3164 = t3120 + t2589;
  t3827 = t1316*t380*t279*t2484;
  t3831 = t2476*t1316*t380*t66;
  t3832 = t3827 + t3831;
  t3836 = -1.*t2476*t1316*t380*t279;
  t3839 = t1316*t380*t2484*t66;
  t3843 = t3836 + t3839;
  t3848 = -1.*t1316*t2607*t47;
  t3850 = t2618*t3832;
  t3852 = t2623*t3843;
  t3853 = t3848 + t3850 + t3852;
  t3855 = -1.*t1316*t2656*t47;
  t3856 = t2674*t3832;
  t3859 = t2683*t3843;
  t3860 = t3855 + t3856 + t3859;
  t3865 = -1.*t2714*t1316*t47;
  t3870 = t2725*t3832;
  t3871 = t2732*t3843;
  t3872 = t3865 + t3870 + t3871;
  t3915 = t2484*t1330;
  t3917 = t2476*t2105;
  t3923 = t3915 + t3917;
  t3925 = -1.*t2484*t2105;
  t3926 = t3187 + t3925;
  t3931 = t2683*t3923;
  t3933 = t2674*t3926;
  t3935 = t3931 + t3933;
  t3940 = t2623*t3923;
  t3941 = t2618*t3926;
  t3942 = t3940 + t3941;
  t3947 = t2732*t3923;
  t3948 = t2725*t3926;
  t3953 = t3947 + t3948;
  t3984 = -1.*t2484*t2201;
  t3985 = t3984 + t3917;
  t3993 = -1.*t2476*t2201;
  t3994 = t3993 + t3925;
  t4002 = t2683*t3985;
  t4004 = t2674*t3994;
  t4007 = t4002 + t4004;
  t4010 = t2623*t3985;
  t4011 = t2618*t3994;
  t4013 = t4010 + t4011;
  t4020 = t2732*t3985;
  t4021 = t2725*t3994;
  t4023 = t4020 + t4021;
  t4072 = t2476*t2201;
  t4075 = t2484*t2105;
  t4080 = t4072 + t4075;
  t4084 = t1316*t380*t2994;
  t4085 = -6.5e-11*t2452*t3985;
  t4086 = t2997*t4080;
  t4087 = t4084 + t4085 + t4086;
  t4092 = -1.000000000049*t1316*t380*t2452;
  t4096 = t3008*t3985;
  t4097 = t3012*t4080;
  t4099 = t4092 + t4096 + t4097;
  t4101 = t1316*t380*t3027;
  t4108 = t3029*t3985;
  t4109 = -1.000000000016*t2452*t4080;
  t4110 = t4101 + t4108 + t4109;
  t4171 = t1316*t380*t2607;
  t4173 = t2618*t3985;
  t4174 = t2623*t4080;
  t4177 = t4171 + t4173 + t4174;
  t4181 = t1316*t380*t2656;
  t4182 = t2674*t3985;
  t4185 = t2683*t4080;
  t4192 = t4181 + t4182 + t4185;
  t4200 = t2714*t1316*t380;
  t4201 = t2725*t3985;
  t4207 = t2732*t4080;
  t4209 = t4200 + t4201 + t4207;
  p_output1[0]=1.;
  p_output1[1]=t319*t343 + t364*t377 + t380*t396 - 1.*t279*t290*t47 + t438*t489 + t509*t519 + t542*t557 - 0.03875*(t479*t509 + t466*t542 + 4.e-6*t438*t564) + 0.14871*(4.e-6*t479*t509 + 4.e-6*t542*t564 + t438*t577) + 0.80321*(-4.e-6*t438*t479 - 1.*t479*t542 + t509*t628) + t243*t47*t66;
  p_output1[2]=-1.*t243*t279*t380 - 1.*t290*t380*t66 + t692 + t713 + t739 + t770 + t804 + t832 + t873 + t904;
  p_output1[3]=t692 + t713 + t739 + t770 + t804 + t832 + t873 + t904 - 1.*t380*t66*t924 + t279*t380*t941;
  p_output1[4]=t1003*t1015 + t1054*t489 + t1084*t519 + t1107*t557 - 0.03875*(t1107*t466 + t1084*t479 + 4.e-6*t1054*t564) + 0.14871*(4.e-6*t1084*t479 + 4.e-6*t1107*t564 + t1054*t577) + 0.80321*(-4.e-6*t1054*t479 - 1.*t1107*t479 + t1084*t628) + t47*t968 + t711*t977;
  p_output1[5]=t1194*t1203 + t1214*t1225 + t1232*t1250 - 0.03875*(t1232*t466 - 1.*t1194*t479 - 4.e-6*t1214*t479) + 0.14871*(4.e-6*t1232*t466 - 4.e-6*t1194*t479 - 1.6e-11*t1214*t479) + 0.80321*(-1.*t1194*t466 - 4.e-6*t1214*t466 - 1.000000000016*t1232*t479);
  p_output1[6]=1.;
  p_output1[7]=t1321*t243 + t1330*t290 + t1338*t343 + t1345*t377 - 1.*t1316*t380*t396 + t1359*t489 + t1388*t519 + t1396*t557 - 0.03875*(t1396*t466 + t1388*t479 + 4.e-6*t1359*t564) + 0.14871*(4.e-6*t1388*t479 + 4.e-6*t1396*t564 + t1359*t577) + 0.80321*(-4.e-6*t1359*t479 - 1.*t1396*t479 + t1388*t628);
  p_output1[8]=t1449*t343 + t1457*t377 + t1307*t279*t290*t380 + t1307*t396*t47 + t1477*t489 + t1497*t519 + t1514*t557 - 0.03875*(t1514*t466 + t1497*t479 + 4.e-6*t1477*t564) + 0.14871*(4.e-6*t1497*t479 + 4.e-6*t1514*t564 + t1477*t577) + 0.80321*(-4.e-6*t1477*t479 - 1.*t1514*t479 + t1497*t628) - 1.*t1307*t243*t380*t66;
  p_output1[9]=t1566*t243 + t1579*t290 + t1586*t343 + t1595*t377 + t1604*t489 + t1613*t519 + t1623*t557 - 0.03875*(t1623*t466 + t1613*t479 + 4.e-6*t1604*t564) + 0.14871*(4.e-6*t1613*t479 + 4.e-6*t1623*t564 + t1604*t577) + 0.80321*(-4.e-6*t1604*t479 - 1.*t1623*t479 + t1613*t628);
  p_output1[10]=t1681*t343 + t1685*t377 + t1692*t489 + t1697*t519 + t1703*t557 - 0.03875*(t1703*t466 + t1697*t479 + 4.e-6*t1692*t564) + 0.14871*(4.e-6*t1697*t479 + 4.e-6*t1703*t564 + t1692*t577) + 0.80321*(-4.e-6*t1692*t479 - 1.*t1703*t479 + t1697*t628) + t1579*t924 + t1671*t941;
  p_output1[11]=t1015*t1766 + t1782*t489 + t1793*t519 + t1803*t557 - 0.03875*(t1803*t466 + t1793*t479 + 4.e-6*t1782*t564) + 0.14871*(4.e-6*t1793*t479 + 4.e-6*t1803*t564 + t1782*t577) + 0.80321*(-4.e-6*t1782*t479 - 1.*t1803*t479 + t1793*t628) - 1.*t1307*t380*t968 + t1685*t977;
  p_output1[12]=t1203*t1863 + t1225*t1882 + t1250*t1891 - 0.03875*(t1902 + t1906 + t1891*t466) + 0.14871*(4.e-6*t1891*t466 - 4.e-6*t1863*t479 - 1.6e-11*t1882*t479) + 0.80321*(-1.*t1863*t466 - 4.e-6*t1882*t466 - 1.000000000016*t1891*t479);
  p_output1[13]=1.;
  p_output1[14]=t1579*t243 + t1671*t290 + t1685*t343 + t1766*t377 - 1.*t1307*t380*t396 + t1882*t489 + t1891*t519 + t1863*t557 - 0.03875*(t1863*t466 + t1891*t479 + 4.e-6*t1882*t564) + 0.14871*(4.e-6*t1891*t479 + 4.e-6*t1863*t564 + t1882*t577) + 0.80321*(t1902 + t1906 + t1891*t628);
  p_output1[15]=t1984*t343 + t1993*t377 - 1.*t1316*t279*t290*t380 - 1.*t1316*t396*t47 + t2014*t489 + t2029*t519 + t2045*t557 - 0.03875*(t2045*t466 + t2029*t479 + 4.e-6*t2014*t564) + 0.14871*(4.e-6*t2029*t479 + 4.e-6*t2045*t564 + t2014*t577) + 0.80321*(-4.e-6*t2014*t479 - 1.*t2045*t479 + t2029*t628) + t1316*t243*t380*t66;
  p_output1[16]=t1330*t243 + t2105*t290 + t2114*t343 + t2129*t377 + t2140*t489 + t2149*t519 + t2162*t557 - 0.03875*(t2162*t466 + t2149*t479 + 4.e-6*t2140*t564) + 0.14871*(4.e-6*t2149*t479 + 4.e-6*t2162*t564 + t2140*t577) + 0.80321*(-4.e-6*t2140*t479 - 1.*t2162*t479 + t2149*t628);
  p_output1[17]=t2205*t343 + t2216*t377 + t2223*t489 + t2229*t519 + t2241*t557 - 0.03875*(t2241*t466 + t2229*t479 + 4.e-6*t2223*t564) + 0.14871*(4.e-6*t2229*t479 + 4.e-6*t2241*t564 + t2223*t577) + 0.80321*(-4.e-6*t2223*t479 - 1.*t2241*t479 + t2229*t628) + t2105*t924 + t2201*t941;
  p_output1[18]=t1015*t2290 + t2300*t489 + t2312*t519 + t2326*t557 - 0.03875*(t2326*t466 + t2312*t479 + 4.e-6*t2300*t564) + 0.14871*(4.e-6*t2312*t479 + 4.e-6*t2326*t564 + t2300*t577) + 0.80321*(-4.e-6*t2300*t479 - 1.*t2326*t479 + t2312*t628) + t1316*t380*t968 + t2216*t977;
  p_output1[19]=t1203*t2382 + t1225*t2391 + t1250*t2402 - 0.03875*(t2402*t466 - 1.*t2382*t479 - 4.e-6*t2391*t479) + 0.14871*(4.e-6*t2402*t466 - 4.e-6*t2382*t479 - 1.6e-11*t2391*t479) + 0.80321*(-1.*t2382*t466 - 4.e-6*t2391*t466 - 1.000000000016*t2402*t479);
  p_output1[20]=1.;
  p_output1[21]=t2516*t2520 + t2553*t2557 + t2601*t2625 + t2644*t2686 + t2706*t2736 - 0.038924*(t2625*t2742 + t2686*t2746 + t2736*t2753) - 0.80315*(t2625*t2764 + t2686*t2772 + t2736*t2775) + 0.148705*(t2625*t2781 + t2686*t2791 + t2736*t2795) + t2466*t380 - 1.*t2490*t279*t47 + t2498*t47*t66;
  p_output1[22]=t2823 + t2836 + t2856 + t2869 + t2884 + t2894 + t2902 + t2921 - 1.*t2498*t279*t380 - 1.*t2490*t380*t66;
  p_output1[23]=t2823 + t2836 + t2856 + t2869 + t2884 + t2894 + t2902 + t2921 + t279*t2926*t380 - 1.*t2928*t380*t66;
  p_output1[24]=t2822*t2967 + t2987*t2991 + t2644*t3000 + t2706*t3019 + t2601*t3035 - 0.038924*(t2746*t3000 + t2753*t3019 + t2742*t3035) - 0.80315*(t2772*t3000 + t2775*t3019 + t2764*t3035) + 0.148705*(t2791*t3000 + t2795*t3019 + t2781*t3035) + t2945*t47;
  p_output1[25]=t3088*t3094 + t3108*t3113 + t3124*t3135 + 0.148705*(-6.5e-11*t2574*t3113 + t3094*t3141 + t3135*t3144) - 0.80315*(-1.000000000016*t2574*t3094 + t3113*t3151 + t3135*t3154) - 0.038924*(-1.000000000049*t2574*t3135 + t3094*t3161 + t3113*t3164);
  p_output1[26]=1.;
  p_output1[27]=t1330*t2490 + t1321*t2498 + t2516*t3185 + t2553*t3190 + t2601*t3201 + t2644*t3213 + t2706*t3222 - 0.038924*(t2742*t3201 + t2746*t3213 + t2753*t3222) - 0.80315*(t2764*t3201 + t2772*t3213 + t2775*t3222) + 0.148705*(t2781*t3201 + t2791*t3213 + t2795*t3222) - 1.*t1316*t2466*t380;
  p_output1[28]=t2516*t3276 + t2553*t3287 + t2601*t3300 + t2644*t3306 + t2706*t3320 - 0.038924*(t2742*t3300 + t2746*t3306 + t2753*t3320) - 0.80315*(t2764*t3300 + t2772*t3306 + t2775*t3320) + 0.148705*(t2781*t3300 + t2791*t3306 + t2795*t3320) + t1307*t2490*t279*t380 + t1307*t2466*t47 - 1.*t1307*t2498*t380*t66;
  p_output1[29]=t1579*t2490 + t1566*t2498 + t2553*t3382 + t2516*t3390 + t2644*t3398 + t2601*t3416 + t2706*t3424 - 0.038924*(t2746*t3398 + t2742*t3416 + t2753*t3424) - 0.80315*(t2772*t3398 + t2764*t3416 + t2775*t3424) + 0.148705*(t2791*t3398 + t2781*t3416 + t2795*t3424);
  p_output1[30]=t1671*t2926 + t1579*t2928 + t2553*t3490 + t2516*t3495 + t2644*t3507 + t2601*t3511 + t2706*t3518 - 0.038924*(t2746*t3507 + t2742*t3511 + t2753*t3518) - 0.80315*(t2772*t3507 + t2764*t3511 + t2775*t3518) + 0.148705*(t2791*t3507 + t2781*t3511 + t2795*t3518);
  p_output1[31]=t2967*t3490 + t2987*t3571 + t2644*t3582 + t2706*t3599 + t2601*t3605 - 0.038924*(t2746*t3582 + t2753*t3599 + t2742*t3605) - 0.80315*(t2772*t3582 + t2775*t3599 + t2764*t3605) + 0.148705*(t2791*t3582 + t2795*t3599 + t2781*t3605) - 1.*t1307*t2945*t380;
  p_output1[32]=t3088*t3671 + t3108*t3676 + t3124*t3707 - 0.038924*(t3161*t3671 + t3164*t3676 - 1.000000000049*t2574*t3707) + 0.148705*(t3141*t3671 - 6.5e-11*t2574*t3676 + t3144*t3707) - 0.80315*(-1.000000000016*t2574*t3671 + t3151*t3676 + t3154*t3707);
  p_output1[33]=1.;
  p_output1[34]=t1671*t2490 + t1579*t2498 + t2516*t3490 + t2553*t3571 + t2601*t3671 + t2644*t3676 + t2706*t3707 - 0.038924*(t2742*t3671 + t2746*t3676 + t2753*t3707) - 0.80315*(t2764*t3671 + t2772*t3676 + t2775*t3707) + 0.148705*(t2781*t3671 + t2791*t3676 + t2795*t3707) - 1.*t1307*t2466*t380;
  p_output1[35]=-1.*t1316*t2490*t279*t380 + t2516*t3832 + t2553*t3843 + t2601*t3853 + t2644*t3860 + t2706*t3872 - 0.038924*(t2742*t3853 + t2746*t3860 + t2753*t3872) - 0.80315*(t2764*t3853 + t2772*t3860 + t2775*t3872) + 0.148705*(t2781*t3853 + t2791*t3860 + t2795*t3872) - 1.*t1316*t2466*t47 + t1316*t2498*t380*t66;
  p_output1[36]=t2105*t2490 + t1330*t2498 + t2553*t3923 + t2516*t3926 + t2644*t3935 + t2601*t3942 + t2706*t3953 - 0.038924*(t2746*t3935 + t2742*t3942 + t2753*t3953) - 0.80315*(t2772*t3935 + t2764*t3942 + t2775*t3953) + 0.148705*(t2791*t3935 + t2781*t3942 + t2795*t3953);
  p_output1[37]=t2201*t2926 + t2105*t2928 + t2553*t3985 + t2516*t3994 + t2644*t4007 + t2601*t4013 + t2706*t4023 - 0.038924*(t2746*t4007 + t2742*t4013 + t2753*t4023) - 0.80315*(t2772*t4007 + t2764*t4013 + t2775*t4023) + 0.148705*(t2791*t4007 + t2781*t4013 + t2795*t4023);
  p_output1[38]=t1316*t2945*t380 + t2967*t3985 + t2987*t4080 + t2644*t4087 + t2706*t4099 + t2601*t4110 - 0.038924*(t2746*t4087 + t2753*t4099 + t2742*t4110) - 0.80315*(t2772*t4087 + t2775*t4099 + t2764*t4110) + 0.148705*(t2791*t4087 + t2795*t4099 + t2781*t4110);
  p_output1[39]=t3088*t4177 + t3108*t4192 + t3124*t4209 - 0.038924*(t3161*t4177 + t3164*t4192 - 1.000000000049*t2574*t4209) + 0.148705*(t3141*t4177 - 6.5e-11*t2574*t4192 + t3144*t4209) - 0.80315*(-1.000000000016*t2574*t4177 + t3151*t4192 + t3154*t4209);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_ParallelStance.hh"

namespace ParallelStance
{

void J_output_boundary_ParallelStance_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
