/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:28:45 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t774;
  double t579;
  double t855;
  double t795;
  double t842;
  double t851;
  double t856;
  double t868;
  double t682;
  double t713;
  double t893;
  double t899;
  double t906;
  double t1067;
  double t1064;
  double t955;
  double t957;
  double t958;
  double t968;
  double t984;
  double t985;
  double t1001;
  double t1071;
  double t1090;
  double t1103;
  double t937;
  double t1222;
  double t947;
  double t952;
  double t1180;
  double t1202;
  double t1215;
  double t1223;
  double t1224;
  double t1229;
  double t1230;
  double t1232;
  double t1233;
  double t1240;
  double t1244;
  double t1251;
  double t1256;
  double t1267;
  double t1271;
  double t1281;
  double t1282;
  double t1286;
  double t1287;
  double t1293;
  double t1295;
  double t1300;
  double t1301;
  double t1128;
  double t1333;
  double t1334;
  double t1338;
  double t1346;
  double t1348;
  double t1350;
  double t1351;
  double t1352;
  double t1368;
  double t1370;
  double t1372;
  double t1373;
  double t1377;
  double t1384;
  double t1388;
  double t1391;
  double t1119;
  double t1124;
  double t1125;
  double t1034;
  double t1107;
  double t1108;
  double t1309;
  double t1311;
  double t1317;
  double t1284;
  double t1304;
  double t1305;
  double t1414;
  double t1418;
  double t1419;
  double t1375;
  double t1392;
  double t1405;
  double t1454;
  double t1576;
  double t1577;
  double t1579;
  double t1581;
  double t1582;
  double t1583;
  double t1635;
  double t1638;
  double t1639;
  double t1641;
  double t1644;
  double t1650;
  double t1652;
  double t1653;
  double t1697;
  double t1698;
  double t1699;
  double t1701;
  double t1704;
  double t1709;
  double t1715;
  double t1716;
  double t1742;
  double t1743;
  double t1746;
  double t1747;
  double t1748;
  double t1755;
  double t1758;
  double t1761;
  double t1769;
  double t1772;
  double t1773;
  double t1774;
  double t1778;
  double t1780;
  double t1782;
  double t1786;
  double t1810;
  double t1811;
  double t1815;
  double t1826;
  double t1827;
  double t1830;
  double t1837;
  double t1841;
  double t1842;
  double t1844;
  double t1846;
  double t1340;
  double t1349;
  double t1354;
  double t1361;
  double t1410;
  double t1421;
  double t1422;
  double t1226;
  double t1242;
  double t1257;
  double t1263;
  double t1307;
  double t1325;
  double t1327;
  double t882;
  double t919;
  double t934;
  double t1113;
  double t1136;
  double t1140;
  double t940;
  double t1143;
  double t1153;
  double t1903;
  double t1914;
  double t1265;
  double t1329;
  double t1366;
  double t1423;
  double t1453;
  double t1457;
  double t1472;
  double t1474;
  double t1477;
  double t1479;
  double t1489;
  double t1490;
  double t1494;
  double t1499;
  double t1504;
  double t1509;
  double t1516;
  double t1526;
  double t1527;
  double t1529;
  double t1530;
  double t1533;
  double t1534;
  double t1536;
  double t1543;
  double t1546;
  double t1548;
  double t1550;
  double t1553;
  double t1557;
  double t1560;
  double t1607;
  double t1611;
  double t1612;
  double t1580;
  double t1587;
  double t1598;
  double t1604;
  double t1614;
  double t1615;
  double t1666;
  double t1667;
  double t1668;
  double t1642;
  double t1655;
  double t1657;
  double t1625;
  double t1626;
  double t1663;
  double t1675;
  double t1679;
  double t1722;
  double t1724;
  double t1725;
  double t1703;
  double t1717;
  double t1720;
  double t1693;
  double t1694;
  double t1721;
  double t1729;
  double t1730;
  double t1795;
  double t1796;
  double t1798;
  double t1777;
  double t1787;
  double t1789;
  double t1745;
  double t1752;
  double t1764;
  double t1766;
  double t1790;
  double t1799;
  double t1801;
  double t1860;
  double t1861;
  double t1862;
  double t1840;
  double t1848;
  double t1856;
  double t1809;
  double t1814;
  double t1818;
  double t1821;
  double t1858;
  double t1865;
  double t1867;
  double t1961;
  double t1962;
  double t1966;
  double t1974;
  double t1931;
  double t1932;
  double t1933;
  double t1939;
  double t1905;
  double t1908;
  double t1912;
  double t2256;
  double t2259;
  double t2263;
  double t2251;
  double t2252;
  double t2242;
  double t2248;
  double t1995;
  double t1998;
  double t2000;
  double t2002;
  double t2005;
  double t2014;
  double t2016;
  double t2017;
  double t2025;
  double t2038;
  double t2051;
  double t2066;
  double t2068;
  double t2079;
  double t2081;
  double t2083;
  double t2096;
  double t2098;
  double t2105;
  double t2114;
  double t2115;
  double t2117;
  double t2121;
  double t2125;
  double t2128;
  double t2132;
  double t2137;
  double t2139;
  double t2144;
  double t2146;
  double t2148;
  double t2152;
  double t2153;
  double t2156;
  double t2159;
  double t2160;
  double t2162;
  double t2183;
  double t2185;
  double t2191;
  double t2198;
  double t2200;
  double t2201;
  double t2212;
  double t2213;
  double t2214;
  double t2220;
  double t2224;
  double t2227;
  double t1887;
  double t1889;
  double t1892;
  double t2461;
  double t2471;
  double t2474;
  double t2481;
  double t2482;
  double t2489;
  double t2491;
  double t2497;
  double t2500;
  double t2502;
  double t2504;
  double t2510;
  double t2519;
  double t2525;
  double t2526;
  double t2527;
  double t2530;
  double t2547;
  double t2549;
  double t2552;
  double t2555;
  double t2556;
  double t2557;
  double t2560;
  double t2564;
  double t2565;
  double t2566;
  double t2568;
  double t2570;
  double t2571;
  double t2574;
  double t2575;
  double t2582;
  double t2584;
  double t2450;
  double t2451;
  double t2454;
  double t2459;
  double t2494;
  double t2508;
  double t2535;
  double t2538;
  double t2550;
  double t2569;
  double t2585;
  double t2586;
  double t2588;
  double t2589;
  double t2590;
  double t2597;
  double t2610;
  double t2614;
  double t2619;
  double t1894;
  double t1897;
  double t1898;
  double t2641;
  double t2642;
  double t1331;
  double t2630;
  double t2633;
  double t2635;
  double t2647;
  double t2544;
  double t2620;
  double t2621;
  double t2643;
  double t2661;
  double t2665;
  double t2678;
  double t1884;
  double t1885;
  double t1886;
  double t1430;
  double t2856;
  double t2858;
  double t2859;
  double t2851;
  double t2679;
  double t2682;
  double t2683;
  double t2687;
  double t2703;
  double t2705;
  double t2708;
  double t2709;
  double t2737;
  double t2739;
  double t2744;
  double t2750;
  double t2770;
  double t2773;
  double t2778;
  double t2782;
  double t2805;
  double t2807;
  double t2810;
  double t2813;
  double t2828;
  double t2830;
  double t2831;
  double t2832;
  double t2967;
  double t2972;
  double t2973;
  double t2975;
  double t2979;
  double t2969;
  double t2989;
  double t2994;
  double t2998;
  double t2971;
  double t2980;
  double t2986;
  double t1628;
  double t1681;
  double t1687;
  double t1572;
  double t1619;
  double t1621;
  double t3126;
  double t3127;
  double t3129;
  double t3130;
  double t3131;
  double t3133;
  double t3139;
  double t3142;
  double t3144;
  double t3148;
  double t3152;
  double t3155;
  double t3162;
  double t3163;
  double t3166;
  double t3137;
  double t3158;
  double t3159;
  double t3179;
  double t3180;
  double t3183;
  double t3185;
  double t3186;
  double t3193;
  double t3160;
  double t3170;
  double t3172;
  double t3184;
  double t3195;
  double t3196;
  double t3200;
  double t3201;
  double t3202;
  double t1695;
  double t1731;
  double t1732;
  double t3319;
  double t3320;
  double t3325;
  double t3328;
  double t3333;
  double t3335;
  double t3339;
  double t3341;
  double t3327;
  double t3336;
  double t3342;
  double t3343;
  double t3350;
  double t3353;
  double t3354;
  double t3355;
  double t3372;
  double t3373;
  double t3374;
  double t3346;
  double t3357;
  double t3364;
  double t3378;
  double t3380;
  double t3381;
  double t3384;
  double t3386;
  double t3387;
  double t3388;
  double t1767;
  double t1802;
  double t1807;
  double t3370;
  double t3375;
  double t3376;
  double t3385;
  double t3390;
  double t3391;
  double t3393;
  double t3394;
  double t3395;
  double t1825;
  double t1868;
  double t1871;
  double t2845;
  double t2852;
  double t2882;
  double t2884;
  double t2898;
  double t2900;
  double t2914;
  double t2915;
  double t2930;
  double t2931;
  double t2944;
  double t2946;
  double t2966;
  double t2988;
  double t3527;
  double t3532;
  double t3536;
  double t3010;
  double t3012;
  double t3550;
  double t3551;
  double t3552;
  double t3034;
  double t3035;
  double t3563;
  double t3564;
  double t3568;
  double t3058;
  double t3061;
  double t3577;
  double t3578;
  double t3579;
  double t3079;
  double t3080;
  double t3592;
  double t3593;
  double t3594;
  double t3100;
  double t3102;
  double t3603;
  double t3604;
  double t3606;
  double t3125;
  double t3173;
  double t3212;
  double t3216;
  double t3248;
  double t3250;
  double t3271;
  double t3274;
  double t3287;
  double t3288;
  double t3300;
  double t3301;
  double t3377;
  double t3403;
  double t3405;
  double t3415;
  double t3428;
  double t3430;
  double t3447;
  double t3448;
  double t3465;
  double t3466;
  double t3688;
  double t3689;
  double t3678;
  double t3679;
  double t3738;
  double t3739;
  double t3726;
  double t3727;
  double t3714;
  double t3715;
  double t3703;
  double t3705;
  double t3770;
  double t3772;
  double t3989;
  double t3990;
  double t3991;
  double t3759;
  double t3794;
  double t3795;
  double t4050;
  double t4051;
  double t4052;
  double t3780;
  double t4072;
  double t4076;
  double t4077;
  double t4091;
  double t4092;
  double t4093;
  double t3845;
  double t3846;
  double t3828;
  double t3829;
  double t3959;
  double t3960;
  double t3963;
  double t4002;
  double t4013;
  double t4017;
  double t4226;
  double t4377;
  double t4381;
  double t4383;
  double t4385;
  double t4270;
  double t4277;
  double t4278;
  double t4280;
  double t4315;
  double t4318;
  double t4323;
  double t4324;
  double t4340;
  double t4341;
  double t4344;
  double t4345;
  double t4349;
  double t4350;
  double t4351;
  double t4352;
  double t4224;
  double t4229;
  double t4231;
  double t4233;
  double t4548;
  double t4549;
  double t4550;
  double t4551;
  double t4557;
  double t4559;
  double t4561;
  double t4574;
  double t4576;
  double t4579;
  double t4567;
  double t4569;
  double t4570;
  double t4638;
  double t4639;
  double t4640;
  double t4644;
  double t4649;
  double t4651;
  double t4653;
  double t4617;
  double t4618;
  double t4625;
  double t4626;
  double t4631;
  double t4633;
  double t4634;
  double t4608;
  double t4609;
  double t4611;
  double t4613;
  double t4599;
  double t4600;
  double t4605;
  double t4606;
  double t4671;
  double t4672;
  double t4674;
  double t4675;
  double t4677;
  double t4679;
  double t4682;
  double t4689;
  double t4693;
  double t4695;
  double t4685;
  double t4686;
  double t4687;
  double t4716;
  double t4717;
  double t4720;
  double t4722;
  double t4744;
  double t4747;
  double t4750;
  double t4752;
  t774 = Cos(var1[11]);
  t579 = Cos(var1[10]);
  t855 = -1. + t774;
  t795 = -1.*t774;
  t842 = 1. + t795;
  t851 = 1.6e-11*t842;
  t856 = 1.6e-11*t855;
  t868 = -1. + t851 + t856;
  t682 = -1.*t579;
  t713 = 1. + t682;
  t893 = 4.e-6*t855;
  t899 = -4.e-6*t774;
  t906 = t893 + t899;
  t1067 = Sin(var1[10]);
  t1064 = Cos(var1[9]);
  t955 = -1. + t579;
  t957 = 1.6e-11*t955;
  t958 = 1. + t957;
  t968 = t958*t868;
  t984 = 4.e-6*t713*t906;
  t985 = t968 + t984;
  t1001 = Sin(var1[9]);
  t1071 = 4.e-6*t868*t1067;
  t1090 = -1.*t906*t1067;
  t1103 = t1071 + t1090;
  t937 = Cos(var1[4]);
  t1222 = Sin(var1[11]);
  t947 = Sin(var1[4]);
  t952 = Cos(var1[5]);
  t1180 = -1.000000000016*t842;
  t1202 = 1. + t1180;
  t1215 = 0.004352*t1202;
  t1223 = -0.9999910000159999*t1222;
  t1224 = t1215 + t1223;
  t1229 = -1. + t851;
  t1230 = 4.e-6*t1229;
  t1232 = 3.999964e-6*t842;
  t1233 = -1.7408e-8*t1222;
  t1240 = t1230 + t1232 + t1233;
  t1244 = 0.999991*t774;
  t1251 = 0.004352*t1222;
  t1256 = t856 + t1244 + t1251;
  t1267 = -4.e-6*t1067*t1224;
  t1271 = t958*t1240;
  t1281 = 4.e-6*t713*t1256;
  t1282 = 0. + t1267 + t1271 + t1281;
  t1286 = -1.000000000016*t713;
  t1287 = 1. + t1286;
  t1293 = t1287*t1224;
  t1295 = 4.e-6*t1067*t1240;
  t1300 = -1.*t1067*t1256;
  t1301 = 0. + t1293 + t1295 + t1300;
  t1128 = Sin(var1[5]);
  t1333 = -1.7408e-8*t842;
  t1334 = -3.999964e-6*t1222;
  t1338 = t1333 + t1334;
  t1346 = 0.999991*t1202;
  t1348 = t1346 + t1251;
  t1350 = -0.004352*t774;
  t1351 = 0.999991*t1222;
  t1352 = t1350 + t1351;
  t1368 = t958*t1338;
  t1370 = -4.e-6*t1067*t1348;
  t1372 = 4.e-6*t713*t1352;
  t1373 = 0. + t1368 + t1370 + t1372;
  t1377 = 4.e-6*t1067*t1338;
  t1384 = t1287*t1348;
  t1388 = -1.*t1067*t1352;
  t1391 = 0. + t1377 + t1384 + t1388;
  t1119 = t1064*t985;
  t1124 = t1001*t1103;
  t1125 = t1119 + t1124;
  t1034 = -1.*t985*t1001;
  t1107 = t1064*t1103;
  t1108 = t1034 + t1107;
  t1309 = t1064*t1282;
  t1311 = t1001*t1301;
  t1317 = 0. + t1309 + t1311;
  t1284 = -1.*t1001*t1282;
  t1304 = t1064*t1301;
  t1305 = 0. + t1284 + t1304;
  t1414 = t1064*t1373;
  t1418 = t1001*t1391;
  t1419 = 0. + t1414 + t1418;
  t1375 = -1.*t1001*t1373;
  t1392 = t1064*t1391;
  t1405 = 0. + t1375 + t1392;
  t1454 = -1.*t1108*t1128;
  t1576 = 4.e-6*t579*t868;
  t1577 = -1.*t579*t906;
  t1579 = t1576 + t1577;
  t1581 = -1.6e-11*t868*t1067;
  t1582 = 4.e-6*t906*t1067;
  t1583 = t1581 + t1582;
  t1635 = -1.000000000016*t1067*t1224;
  t1638 = 4.e-6*t579*t1240;
  t1639 = -1.*t579*t1256;
  t1641 = t1635 + t1638 + t1639;
  t1644 = -4.e-6*t579*t1224;
  t1650 = -1.6e-11*t1067*t1240;
  t1652 = 4.e-6*t1067*t1256;
  t1653 = t1644 + t1650 + t1652;
  t1697 = 4.e-6*t579*t1338;
  t1698 = -1.000000000016*t1067*t1348;
  t1699 = -1.*t579*t1352;
  t1701 = t1697 + t1698 + t1699;
  t1704 = -1.6e-11*t1067*t1338;
  t1709 = -4.e-6*t579*t1348;
  t1715 = 4.e-6*t1067*t1352;
  t1716 = t1704 + t1709 + t1715;
  t1742 = 0.004352*t774;
  t1743 = t1742 + t1223;
  t1746 = -0.9999910000159999*t774;
  t1747 = -0.00435200000006963*t1222;
  t1748 = t1746 + t1747;
  t1755 = -1.7408e-8*t774;
  t1758 = 3.999964000064e-6*t1222;
  t1761 = t1755 + t1758;
  t1769 = 4.e-6*t713*t1743;
  t1772 = -4.e-6*t1067*t1748;
  t1773 = t958*t1761;
  t1774 = t1769 + t1772 + t1773;
  t1778 = -1.*t1067*t1743;
  t1780 = t1287*t1748;
  t1782 = 4.e-6*t1067*t1761;
  t1786 = t1778 + t1780 + t1782;
  t1810 = -3.999964e-6*t774;
  t1811 = t1810 + t1233;
  t1815 = t1244 + t1251;
  t1826 = -4.e-6*t1067*t1743;
  t1827 = t958*t1811;
  t1830 = 4.e-6*t713*t1815;
  t1837 = t1826 + t1827 + t1830;
  t1841 = t1287*t1743;
  t1842 = 4.e-6*t1067*t1811;
  t1844 = -1.*t1067*t1815;
  t1846 = t1841 + t1842 + t1844;
  t1340 = 4.e-6*t713*t1338;
  t1349 = t1067*t1348;
  t1354 = t579*t1352;
  t1361 = 0. + t1340 + t1349 + t1354;
  t1410 = t952*t1405;
  t1421 = -1.*t1419*t1128;
  t1422 = 0. + t1410 + t1421;
  t1226 = t1067*t1224;
  t1242 = 4.e-6*t713*t1240;
  t1257 = t579*t1256;
  t1263 = 0. + t1226 + t1242 + t1257;
  t1307 = t952*t1305;
  t1325 = -1.*t1317*t1128;
  t1327 = 0. + t1307 + t1325;
  t882 = 4.e-6*t713*t868;
  t919 = t579*t906;
  t934 = t882 + t919;
  t1113 = t952*t1108;
  t1136 = -1.*t1125*t1128;
  t1140 = t1113 + t1136;
  t940 = t934*t937;
  t1143 = -1.*t947*t1140;
  t1153 = t940 + t1143;
  t1903 = Sin(var1[3]);
  t1914 = Cos(var1[3]);
  t1265 = t937*t1263;
  t1329 = -1.*t947*t1327;
  t1366 = t937*t1361;
  t1423 = -1.*t947*t1422;
  t1453 = -1.*t952*t1125;
  t1457 = t1453 + t1454;
  t1472 = -1.*t952*t1317;
  t1474 = -1.*t1305*t1128;
  t1477 = t1472 + t1474;
  t1479 = -1.*t952*t1419;
  t1489 = -1.*t1405*t1128;
  t1490 = t1479 + t1489;
  t1494 = -1.*t1064*t985;
  t1499 = -1.*t1001*t1103;
  t1504 = t1494 + t1499;
  t1509 = t952*t1504;
  t1516 = t1509 + t1454;
  t1526 = -1.*t1064*t1282;
  t1527 = -1.*t1001*t1301;
  t1529 = t1526 + t1527;
  t1530 = t952*t1529;
  t1533 = t1284 + t1304;
  t1534 = -1.*t1533*t1128;
  t1536 = t1530 + t1534;
  t1543 = -1.*t1064*t1373;
  t1546 = -1.*t1001*t1391;
  t1548 = t1543 + t1546;
  t1550 = t952*t1548;
  t1553 = t1375 + t1392;
  t1557 = -1.*t1553*t1128;
  t1560 = t1550 + t1557;
  t1607 = t1579*t1001;
  t1611 = t1064*t1583;
  t1612 = t1607 + t1611;
  t1580 = t1064*t1579;
  t1587 = -1.*t1001*t1583;
  t1598 = t1580 + t1587;
  t1604 = t952*t1598;
  t1614 = -1.*t1612*t1128;
  t1615 = t1604 + t1614;
  t1666 = t1001*t1641;
  t1667 = t1064*t1653;
  t1668 = t1666 + t1667;
  t1642 = t1064*t1641;
  t1655 = -1.*t1001*t1653;
  t1657 = t1642 + t1655;
  t1625 = t579*t1224;
  t1626 = t1625 + t1295 + t1300;
  t1663 = t952*t1657;
  t1675 = -1.*t1668*t1128;
  t1679 = t1663 + t1675;
  t1722 = t1001*t1701;
  t1724 = t1064*t1716;
  t1725 = t1722 + t1724;
  t1703 = t1064*t1701;
  t1717 = -1.*t1001*t1716;
  t1720 = t1703 + t1717;
  t1693 = t579*t1348;
  t1694 = t1377 + t1693 + t1388;
  t1721 = t952*t1720;
  t1729 = -1.*t1725*t1128;
  t1730 = t1721 + t1729;
  t1795 = t1064*t1774;
  t1796 = t1001*t1786;
  t1798 = t1795 + t1796;
  t1777 = -1.*t1001*t1774;
  t1787 = t1064*t1786;
  t1789 = t1777 + t1787;
  t1745 = t579*t1743;
  t1752 = t1067*t1748;
  t1764 = 4.e-6*t713*t1761;
  t1766 = t1745 + t1752 + t1764;
  t1790 = t952*t1789;
  t1799 = -1.*t1798*t1128;
  t1801 = t1790 + t1799;
  t1860 = t1064*t1837;
  t1861 = t1001*t1846;
  t1862 = t1860 + t1861;
  t1840 = -1.*t1001*t1837;
  t1848 = t1064*t1846;
  t1856 = t1840 + t1848;
  t1809 = t1067*t1743;
  t1814 = 4.e-6*t713*t1811;
  t1818 = t579*t1815;
  t1821 = t1809 + t1814 + t1818;
  t1858 = t952*t1856;
  t1865 = -1.*t1862*t1128;
  t1867 = t1858 + t1865;
  t1961 = t952*t1419;
  t1962 = t1405*t1128;
  t1966 = 0. + t1961 + t1962;
  t1974 = 0. + t1366 + t1423;
  t1931 = t952*t1317;
  t1932 = t1305*t1128;
  t1933 = 0. + t1931 + t1932;
  t1939 = 0. + t1265 + t1329;
  t1905 = t952*t1125;
  t1908 = t1108*t1128;
  t1912 = t1905 + t1908;
  t2256 = t1914*t1912;
  t2259 = -1.*t1903*t1153;
  t2263 = t2256 + t2259;
  t2251 = t1914*t1933;
  t2252 = -1.*t1903*t1939;
  t2242 = t1914*t1966;
  t2248 = -1.*t1903*t1974;
  t1995 = -1.*t934*t947;
  t1998 = -1.*t937*t1140;
  t2000 = t1995 + t1998;
  t2002 = -1.*t1263*t947;
  t2005 = -1.*t937*t1327;
  t2014 = t2002 + t2005;
  t2016 = -1.*t1361*t947;
  t2017 = -1.*t937*t1422;
  t2025 = t2016 + t2017;
  t2038 = t1307 + t1325;
  t2051 = t1410 + t1421;
  t2066 = t1504*t1128;
  t2068 = t1113 + t2066;
  t2079 = t952*t1533;
  t2081 = t1529*t1128;
  t2083 = t2079 + t2081;
  t2096 = t952*t1553;
  t2098 = t1548*t1128;
  t2105 = t2096 + t2098;
  t2114 = t952*t1612;
  t2115 = t1598*t1128;
  t2117 = t2114 + t2115;
  t2121 = t937*t1103;
  t2125 = -1.*t947*t1615;
  t2128 = t2121 + t2125;
  t2132 = t952*t1668;
  t2137 = t1657*t1128;
  t2139 = t2132 + t2137;
  t2144 = t937*t1626;
  t2146 = -1.*t947*t1679;
  t2148 = t2144 + t2146;
  t2152 = t952*t1725;
  t2153 = t1720*t1128;
  t2156 = t2152 + t2153;
  t2159 = t937*t1694;
  t2160 = -1.*t947*t1730;
  t2162 = t2159 + t2160;
  t2183 = t952*t1798;
  t2185 = t1789*t1128;
  t2191 = t2183 + t2185;
  t2198 = t937*t1766;
  t2200 = -1.*t947*t1801;
  t2201 = t2198 + t2200;
  t2212 = t952*t1862;
  t2213 = t1856*t1128;
  t2214 = t2212 + t2213;
  t2220 = t937*t1821;
  t2224 = -1.*t947*t1867;
  t2227 = t2220 + t2224;
  t1887 = t1263*t947;
  t1889 = t937*t1327;
  t1892 = 0. + t1887 + t1889;
  t2461 = -1.26e-8*var1[11];
  t2471 = 1. + t856;
  t2474 = -0.14871*t2471;
  t2481 = -1.64779999997447e-7*t842;
  t2482 = -1.59556e-7*t855;
  t2489 = -1.199987999968e-6*t1222;
  t2491 = t2461 + t2474 + t2481 + t2482 + t2489;
  t2497 = 0.803147*t1202;
  t2500 = 0.50315000001605*t842;
  t2502 = 0.00130540515936178*t1222;
  t2504 = t2497 + t2500 + t2502;
  t2510 = -5.04e-14*var1[11];
  t2519 = -0.03988959484*t842;
  t2525 = 6.38224e-13*t855;
  t2526 = -0.041195*t774;
  t2527 = 0.299996999992*t1222;
  t2530 = t2510 + t2519 + t2525 + t2526 + t2527;
  t2547 = -1.*t1064;
  t2549 = 1. + t2547;
  t2552 = -0.15121*t1001;
  t2555 = -1.2484e-7*var1[10];
  t2556 = 2.479936e-18*t713;
  t2557 = -1.54996e-7*t955;
  t2560 = 1.124840000016e-6*t1067;
  t2564 = t958*t2491;
  t2565 = -4.e-6*t1067*t2504;
  t2566 = 4.e-6*t713*t2530;
  t2568 = t2555 + t2556 + t2557 + t2560 + t2564 + t2565 + t2566;
  t2570 = 0.281210000008499*t713;
  t2571 = -0.03874900000062*t1067;
  t2574 = 4.e-6*t1067*t2491;
  t2575 = t1287*t2504;
  t2582 = -1.*t1067*t2530;
  t2584 = t2570 + t2571 + t2574 + t2575 + t2582;
  t2450 = -4.9936e-13*var1[10];
  t2451 = -0.038749*t713;
  t2454 = 6.19984e-13*t955;
  t2459 = -0.281210000004*t1067;
  t2494 = 4.e-6*t713*t2491;
  t2508 = t1067*t2504;
  t2535 = t579*t2530;
  t2538 = 0. + t2450 + t2451 + t2454 + t2459 + t2494 + t2508 + t2535;
  t2550 = 0.15121*t2549;
  t2569 = -1.*t1001*t2568;
  t2585 = t1064*t2584;
  t2586 = t2550 + t2552 + t2569 + t2585;
  t2588 = t952*t2586;
  t2589 = -0.15121*t2549;
  t2590 = t1064*t2568;
  t2597 = t1001*t2584;
  t2610 = t2589 + t2552 + t2590 + t2597;
  t2614 = -1.*t2610*t1128;
  t2619 = 0. + t2588 + t2614;
  t1894 = t934*t947;
  t1897 = t937*t1140;
  t1898 = t1894 + t1897;
  t2641 = t937*t2538;
  t2642 = -1.*t947*t2619;
  t1331 = t1265 + t1329;
  t2630 = t2538*t947;
  t2633 = t937*t2619;
  t2635 = 0. + t2630 + t2633;
  t2647 = 0. + t2641 + t2642;
  t2544 = -1.*t2538*t947;
  t2620 = -1.*t937*t2619;
  t2621 = t2544 + t2620;
  t2643 = t2641 + t2642;
  t2661 = t952*t2610;
  t2665 = t2586*t1128;
  t2678 = 0. + t2661 + t2665;
  t1884 = t1361*t947;
  t1885 = t937*t1422;
  t1886 = 0. + t1884 + t1885;
  t1430 = t1366 + t1423;
  t2856 = -1.*t952*t2610;
  t2858 = -1.*t2586*t1128;
  t2859 = t2856 + t2858;
  t2851 = t2588 + t2614;
  t2679 = t1912*t2678;
  t2682 = t1898*t2635;
  t2683 = t1153*t2647;
  t2687 = t2679 + t2682 + t2683;
  t2703 = -1.*t1933*t2678;
  t2705 = -1.*t1892*t2635;
  t2708 = -1.*t1939*t2647;
  t2709 = t2703 + t2705 + t2708;
  t2737 = t1933*t2678;
  t2739 = t1892*t2635;
  t2744 = t1939*t2647;
  t2750 = t2737 + t2739 + t2744;
  t2770 = -1.*t2678*t1966;
  t2773 = -1.*t2635*t1886;
  t2778 = -1.*t2647*t1974;
  t2782 = t2770 + t2773 + t2778;
  t2805 = -1.*t1912*t2678;
  t2807 = -1.*t1898*t2635;
  t2810 = -1.*t1153*t2647;
  t2813 = t2805 + t2807 + t2810;
  t2828 = t2678*t1966;
  t2830 = t2635*t1886;
  t2831 = t2647*t1974;
  t2832 = t2828 + t2830 + t2831;
  t2967 = -0.15121*t1064;
  t2972 = 0.15121*t1001;
  t2973 = -1.*t1064*t2568;
  t2975 = -1.*t1001*t2584;
  t2979 = t2967 + t2972 + t2973 + t2975;
  t2969 = t2967 + t2552 + t2569 + t2585;
  t2989 = t952*t2979;
  t2994 = -1.*t2969*t1128;
  t2998 = t2989 + t2994;
  t2971 = t952*t2969;
  t2980 = t2979*t1128;
  t2986 = t2971 + t2980;
  t1628 = t1626*t947;
  t1681 = t937*t1679;
  t1687 = t1628 + t1681;
  t1572 = t1103*t947;
  t1619 = t937*t1615;
  t1621 = t1572 + t1619;
  t3126 = -0.03874900000062*t579;
  t3127 = 0.281210000008499*t1067;
  t3129 = 4.e-6*t579*t2491;
  t3130 = -1.000000000016*t1067*t2504;
  t3131 = -1.*t579*t2530;
  t3133 = t3126 + t3127 + t3129 + t3130 + t3131;
  t3139 = 1.124840000016e-6*t579;
  t3142 = 1.5499600000248e-7*t1067;
  t3144 = -1.6e-11*t1067*t2491;
  t3148 = -4.e-6*t579*t2504;
  t3152 = 4.e-6*t1067*t2530;
  t3155 = -1.2484e-7 + t3139 + t3142 + t3144 + t3148 + t3152;
  t3162 = t1064*t3133;
  t3163 = -1.*t1001*t3155;
  t3166 = t3162 + t3163;
  t3137 = t1001*t3133;
  t3158 = t1064*t3155;
  t3159 = t3137 + t3158;
  t3179 = -0.281210000004*t579;
  t3180 = t579*t2504;
  t3183 = -4.9936e-13 + t3179 + t2571 + t2574 + t3180 + t2582;
  t3185 = t952*t3166;
  t3186 = -1.*t3159*t1128;
  t3193 = t3185 + t3186;
  t3160 = t952*t3159;
  t3170 = t3166*t1128;
  t3172 = t3160 + t3170;
  t3184 = t3183*t947;
  t3195 = t937*t3193;
  t3196 = t3184 + t3195;
  t3200 = t937*t3183;
  t3201 = -1.*t947*t3193;
  t3202 = t3200 + t3201;
  t1695 = t1694*t947;
  t1731 = t937*t1730;
  t1732 = t1695 + t1731;
  t3319 = 0.00130540515936178*t774;
  t3320 = -0.2999969999968001*t1222;
  t3325 = t3319 + t3320;
  t3328 = -1.199987999968e-6*t774;
  t3333 = -5.2216206374471e-9*t1222;
  t3335 = -1.26e-8 + t3328 + t3333;
  t3339 = 0.299996999992*t774;
  t3341 = -5.04e-14 + t3339 + t2502;
  t3327 = -4.e-6*t1067*t3325;
  t3336 = t958*t3335;
  t3342 = 4.e-6*t713*t3341;
  t3343 = t3327 + t3336 + t3342;
  t3350 = t1287*t3325;
  t3353 = 4.e-6*t1067*t3335;
  t3354 = -1.*t1067*t3341;
  t3355 = t3350 + t3353 + t3354;
  t3372 = -1.*t1001*t3343;
  t3373 = t1064*t3355;
  t3374 = t3372 + t3373;
  t3346 = t1064*t3343;
  t3357 = t1001*t3355;
  t3364 = t3346 + t3357;
  t3378 = t1067*t3325;
  t3380 = 4.e-6*t713*t3335;
  t3381 = t579*t3341;
  t3384 = t3378 + t3380 + t3381;
  t3386 = t952*t3374;
  t3387 = -1.*t3364*t1128;
  t3388 = t3386 + t3387;
  t1767 = t1766*t947;
  t1802 = t937*t1801;
  t1807 = t1767 + t1802;
  t3370 = t952*t3364;
  t3375 = t3374*t1128;
  t3376 = t3370 + t3375;
  t3385 = t3384*t947;
  t3390 = t937*t3388;
  t3391 = t3385 + t3390;
  t3393 = t937*t3384;
  t3394 = -1.*t947*t3388;
  t3395 = t3393 + t3394;
  t1825 = t1821*t947;
  t1868 = t937*t1867;
  t1871 = t1825 + t1868;
  t2845 = t1140*t2678;
  t2852 = t1912*t2851;
  t2882 = -1.*t2038*t2678;
  t2884 = -1.*t1933*t2851;
  t2898 = t2038*t2678;
  t2900 = t1933*t2851;
  t2914 = -1.*t2851*t1966;
  t2915 = -1.*t2678*t2051;
  t2930 = -1.*t1140*t2678;
  t2931 = -1.*t1912*t2851;
  t2944 = t2851*t1966;
  t2946 = t2678*t2051;
  t2966 = t2068*t2678;
  t2988 = t1912*t2986;
  t3527 = t934*t2538;
  t3532 = t1140*t2619;
  t3536 = t3527 + t2679 + t3532;
  t3010 = -1.*t2083*t2678;
  t3012 = -1.*t1933*t2986;
  t3550 = -1.*t1263*t2538;
  t3551 = -1.*t1327*t2619;
  t3552 = t3550 + t2703 + t3551;
  t3034 = t2083*t2678;
  t3035 = t1933*t2986;
  t3563 = t1263*t2538;
  t3564 = t1327*t2619;
  t3568 = t3563 + t2737 + t3564;
  t3058 = -1.*t2986*t1966;
  t3061 = -1.*t2678*t2105;
  t3577 = -1.*t2538*t1361;
  t3578 = -1.*t2619*t1422;
  t3579 = t3577 + t2770 + t3578;
  t3079 = -1.*t2068*t2678;
  t3080 = -1.*t1912*t2986;
  t3592 = -1.*t934*t2538;
  t3593 = -1.*t1140*t2619;
  t3594 = t3592 + t2805 + t3593;
  t3100 = t2986*t1966;
  t3102 = t2678*t2105;
  t3603 = t2538*t1361;
  t3604 = t2619*t1422;
  t3606 = t3603 + t2828 + t3604;
  t3125 = t2117*t2678;
  t3173 = t1912*t3172;
  t3212 = -1.*t2139*t2678;
  t3216 = -1.*t1933*t3172;
  t3248 = t2139*t2678;
  t3250 = t1933*t3172;
  t3271 = -1.*t3172*t1966;
  t3274 = -1.*t2678*t2156;
  t3287 = -1.*t2117*t2678;
  t3288 = -1.*t1912*t3172;
  t3300 = t3172*t1966;
  t3301 = t2678*t2156;
  t3377 = t1912*t3376;
  t3403 = -1.*t3376*t1933;
  t3405 = -1.*t2191*t2678;
  t3415 = -1.*t1912*t3376;
  t3428 = t2214*t2678;
  t3430 = t3376*t1966;
  t3447 = t3376*t1933;
  t3448 = t2191*t2678;
  t3465 = -1.*t2214*t2678;
  t3466 = -1.*t3376*t1966;
  t3688 = -1.*t1626*t2538;
  t3689 = -1.*t1263*t3183;
  t3678 = t1103*t2538;
  t3679 = t934*t3183;
  t3738 = t3183*t1361;
  t3739 = t2538*t1694;
  t3726 = -1.*t1103*t2538;
  t3727 = -1.*t934*t3183;
  t3714 = -1.*t3183*t1361;
  t3715 = -1.*t2538*t1694;
  t3703 = t1626*t2538;
  t3705 = t1263*t3183;
  t3770 = -1.*t3384*t1263;
  t3772 = -1.*t1766*t2538;
  t3989 = t1108*t2586;
  t3990 = t1125*t2610;
  t3991 = t3989 + t3990 + t3527;
  t3759 = t934*t3384;
  t3794 = t1821*t2538;
  t3795 = t3384*t1361;
  t4050 = -1.*t1108*t2586;
  t4051 = -1.*t1125*t2610;
  t4052 = t4050 + t4051 + t3592;
  t3780 = -1.*t934*t3384;
  t4072 = -1.*t2586*t1405;
  t4076 = -1.*t2610*t1419;
  t4077 = t4072 + t4076 + t3577;
  t4091 = t1305*t2586;
  t4092 = t1317*t2610;
  t4093 = t4091 + t4092 + t3563;
  t3845 = -1.*t1821*t2538;
  t3846 = -1.*t3384*t1361;
  t3828 = t3384*t1263;
  t3829 = t1766*t2538;
  t3959 = -1.*t1305*t2586;
  t3960 = -1.*t1317*t2610;
  t3963 = t3959 + t3960 + t3550;
  t4002 = t2586*t1405;
  t4013 = t2610*t1419;
  t4017 = t4002 + t4013 + t3603;
  t4226 = t2450 + t2451 + t2454 + t2459 + t2494 + t2508 + t2535;
  t4377 = t985*t2568;
  t4381 = t934*t4226;
  t4383 = t1103*t2584;
  t4385 = t4377 + t4381 + t4383;
  t4270 = -1.*t985*t2568;
  t4277 = -1.*t934*t4226;
  t4278 = -1.*t1103*t2584;
  t4280 = t4270 + t4277 + t4278;
  t4315 = -1.*t2568*t1373;
  t4318 = -1.*t4226*t1361;
  t4323 = -1.*t2584*t1391;
  t4324 = t4315 + t4318 + t4323;
  t4340 = t1282*t2568;
  t4341 = t1263*t4226;
  t4344 = t1301*t2584;
  t4345 = t4340 + t4341 + t4344;
  t4349 = -1.*t1282*t2568;
  t4350 = -1.*t1263*t4226;
  t4351 = -1.*t1301*t2584;
  t4352 = t4349 + t4350 + t4351;
  t4224 = t2568*t1373;
  t4229 = t4226*t1361;
  t4231 = t2584*t1391;
  t4233 = t4224 + t4229 + t4231;
  t4548 = t2491*t1811;
  t4549 = t1338*t3335;
  t4550 = t1743*t2504;
  t4551 = t3325*t1348;
  t4557 = t1815*t2530;
  t4559 = t3341*t1352;
  t4561 = t4548 + t4549 + t4550 + t4551 + t4557 + t4559;
  t4574 = -1.*t868*t3335;
  t4576 = -1.*t906*t3341;
  t4579 = t4574 + t4576;
  t4567 = -1.*t868*t2491;
  t4569 = -1.*t906*t2530;
  t4570 = t4567 + t4569;
  t4638 = t1224*t3325;
  t4639 = t1240*t3335;
  t4640 = t2491*t1761;
  t4644 = t1748*t2504;
  t4649 = t3341*t1256;
  t4651 = t1743*t2530;
  t4653 = t4638 + t4639 + t4640 + t4644 + t4649 + t4651;
  t4617 = -1.*t2491*t1811;
  t4618 = -1.*t1338*t3335;
  t4625 = -1.*t1743*t2504;
  t4626 = -1.*t3325*t1348;
  t4631 = -1.*t1815*t2530;
  t4633 = -1.*t3341*t1352;
  t4634 = t4617 + t4618 + t4625 + t4626 + t4631 + t4633;
  t4608 = t2491*t1240;
  t4609 = t1224*t2504;
  t4611 = t1256*t2530;
  t4613 = t4608 + t4609 + t4611;
  t4599 = -1.*t1338*t2491;
  t4600 = -1.*t2504*t1348;
  t4605 = -1.*t2530*t1352;
  t4606 = t4599 + t4600 + t4605;
  t4671 = -1.*t1224*t3325;
  t4672 = -1.*t1240*t3335;
  t4674 = -1.*t2491*t1761;
  t4675 = -1.*t1748*t2504;
  t4677 = -1.*t3341*t1256;
  t4679 = -1.*t1743*t2530;
  t4682 = t4671 + t4672 + t4674 + t4675 + t4677 + t4679;
  t4689 = t868*t3335;
  t4693 = t906*t3341;
  t4695 = t4689 + t4693;
  t4685 = t868*t2491;
  t4686 = t906*t2530;
  t4687 = t4685 + t4686;
  t4716 = -1.*t2491*t1240;
  t4717 = -1.*t1224*t2504;
  t4720 = -1.*t1256*t2530;
  t4722 = t4716 + t4717 + t4720;
  t4744 = t1338*t2491;
  t4747 = t2504*t1348;
  t4750 = t2530*t1352;
  t4752 = t4744 + t4747 + t4750;
  p_output1[0]=t1430*var2[0] + t1331*var2[1] + t1153*var2[2];
  p_output1[1]=t1490*t937*var2[0] + t1477*t937*var2[1] + t1457*t937*var2[2];
  p_output1[2]=t1560*t937*var2[0] + t1536*t937*var2[1] + t1516*t937*var2[2];
  p_output1[3]=t1732*var2[0] + t1687*var2[1] + t1621*var2[2];
  p_output1[4]=t1871*var2[0] + t1807*var2[1];
  p_output1[5]=t1886;
  p_output1[6]=t1892;
  p_output1[7]=t1898;
  p_output1[8]=(-1.*t1903*t1966 - 1.*t1914*t1974)*var2[0] + (-1.*t1903*t1933 - 1.*t1914*t1939)*var2[1] + (-1.*t1903*t1912 - 1.*t1153*t1914)*var2[2];
  p_output1[9]=-1.*t1903*t2025*var2[0] - 1.*t1903*t2014*var2[1] - 1.*t1903*t2000*var2[2];
  p_output1[10]=(t1914*t2051 + t1490*t1903*t947)*var2[0] + (t1914*t2038 + t1477*t1903*t947)*var2[1] + (t1140*t1914 + t1457*t1903*t947)*var2[2];
  p_output1[11]=(t1914*t2105 + t1560*t1903*t947)*var2[0] + (t1914*t2083 + t1536*t1903*t947)*var2[1] + (t1914*t2068 + t1516*t1903*t947)*var2[2];
  p_output1[12]=(t1914*t2156 - 1.*t1903*t2162)*var2[0] + (t1914*t2139 - 1.*t1903*t2148)*var2[1] + (t1914*t2117 - 1.*t1903*t2128)*var2[2];
  p_output1[13]=(t1914*t2214 - 1.*t1903*t2227)*var2[0] + (t1914*t2191 - 1.*t1903*t2201)*var2[1];
  p_output1[14]=0. + t2242 + t2248;
  p_output1[15]=0. + t2251 + t2252;
  p_output1[16]=t2263;
  p_output1[17]=(t2242 + t2248)*var2[0] + (t2251 + t2252)*var2[1] + t2263*var2[2];
  p_output1[18]=t1914*t2025*var2[0] + t1914*t2014*var2[1] + t1914*t2000*var2[2];
  p_output1[19]=(t1903*t2051 - 1.*t1490*t1914*t947)*var2[0] + (t1903*t2038 - 1.*t1477*t1914*t947)*var2[1] + (t1140*t1903 - 1.*t1457*t1914*t947)*var2[2];
  p_output1[20]=(t1903*t2105 - 1.*t1560*t1914*t947)*var2[0] + (t1903*t2083 - 1.*t1536*t1914*t947)*var2[1] + (t1903*t2068 - 1.*t1516*t1914*t947)*var2[2];
  p_output1[21]=(t1903*t2156 + t1914*t2162)*var2[0] + (t1903*t2139 + t1914*t2148)*var2[1] + (t1903*t2117 + t1914*t2128)*var2[2];
  p_output1[22]=(t1903*t2214 + t1914*t2227)*var2[0] + (t1903*t2191 + t1914*t2201)*var2[1];
  p_output1[23]=0. + t1903*t1966 + t1914*t1974;
  p_output1[24]=0. + t1903*t1933 + t1914*t1939;
  p_output1[25]=t1903*t1912 + t1153*t1914;
  p_output1[26]=(t1892*(t1153*t2621 + t1153*t2635 + t1898*t2643 + t2000*t2647) + t1898*(-1.*t1939*t2621 - 1.*t1331*t2635 - 1.*t1892*t2643 - 1.*t2014*t2647) + t1331*t2687 + t1153*t2709)*var2[0] + (t1886*(-1.*t1153*t2621 - 1.*t1153*t2635 - 1.*t1898*t2643 - 1.*t2000*t2647) + t1898*(t1974*t2621 + t1430*t2635 + t1886*t2643 + t2025*t2647) + t1430*t2813 + t1153*t2832)*var2[1] + (t1886*(t1939*t2621 + t1331*t2635 + t1892*t2643 + t2014*t2647) + t1892*(-1.*t1974*t2621 - 1.*t1430*t2635 - 1.*t1886*t2643 - 1.*t2025*t2647) + t1430*t2750 + t1331*t2782)*var2[2];
  p_output1[27]=(t1477*t2687*t937 + t1457*t2709*t937 + t1892*(t2845 + t2852 + t1457*t2635*t937 + t1898*t2859*t937 - 1.*t1457*t2647*t947 - 1.*t1153*t2859*t947) + t1898*(t2882 + t2884 - 1.*t1477*t2635*t937 - 1.*t1892*t2859*t937 + t1477*t2647*t947 + t1939*t2859*t947))*var2[0] + (t1490*t2813*t937 + t1457*t2832*t937 + t1886*(t2930 + t2931 - 1.*t1457*t2635*t937 - 1.*t1898*t2859*t937 + t1457*t2647*t947 + t1153*t2859*t947) + t1898*(t2944 + t2946 + t1490*t2635*t937 + t1886*t2859*t937 - 1.*t1490*t2647*t947 - 1.*t1974*t2859*t947))*var2[1] + (t1490*t2750*t937 + t1477*t2782*t937 + t1886*(t2898 + t2900 + t1477*t2635*t937 + t1892*t2859*t937 - 1.*t1477*t2647*t947 - 1.*t1939*t2859*t947) + t1892*(t2914 + t2915 - 1.*t1490*t2635*t937 - 1.*t1886*t2859*t937 + t1490*t2647*t947 + t1974*t2859*t947))*var2[2];
  p_output1[28]=(t1536*t2687*t937 + t1516*t2709*t937 + t1892*(t2966 + t2988 + t1516*t2635*t937 + t1898*t2998*t937 - 1.*t1516*t2647*t947 - 1.*t1153*t2998*t947) + t1898*(t3010 + t3012 - 1.*t1536*t2635*t937 - 1.*t1892*t2998*t937 + t1536*t2647*t947 + t1939*t2998*t947))*var2[0] + (t1560*t2813*t937 + t1516*t2832*t937 + t1886*(t3079 + t3080 - 1.*t1516*t2635*t937 - 1.*t1898*t2998*t937 + t1516*t2647*t947 + t1153*t2998*t947) + t1898*(t3100 + t3102 + t1560*t2635*t937 + t1886*t2998*t937 - 1.*t1560*t2647*t947 - 1.*t1974*t2998*t947))*var2[1] + (t1560*t2750*t937 + t1536*t2782*t937 + t1886*(t3034 + t3035 + t1536*t2635*t937 + t1892*t2998*t937 - 1.*t1536*t2647*t947 - 1.*t1939*t2998*t947) + t1892*(t3058 + t3061 - 1.*t1560*t2635*t937 - 1.*t1886*t2998*t937 + t1560*t2647*t947 + t1974*t2998*t947))*var2[2];
  p_output1[29]=(t1687*t2687 + t1621*t2709 + t1892*(t1621*t2635 + t2128*t2647 + t3125 + t3173 + t1898*t3196 + t1153*t3202) + t1898*(-1.*t1687*t2635 - 1.*t2148*t2647 - 1.*t1892*t3196 - 1.*t1939*t3202 + t3212 + t3216))*var2[0] + (t1732*t2813 + t1621*t2832 + t1886*(-1.*t1621*t2635 - 1.*t2128*t2647 - 1.*t1898*t3196 - 1.*t1153*t3202 + t3287 + t3288) + t1898*(t1732*t2635 + t2162*t2647 + t1886*t3196 + t1974*t3202 + t3300 + t3301))*var2[1] + (t1732*t2750 + t1687*t2782 + t1886*(t1687*t2635 + t2148*t2647 + t1892*t3196 + t1939*t3202 + t3248 + t3250) + t1892*(-1.*t1732*t2635 - 1.*t2162*t2647 - 1.*t1886*t3196 - 1.*t1974*t3202 + t3271 + t3274))*var2[2];
  p_output1[30]=(t1807*t2687 + t1892*(t3377 + t1898*t3391 + t1153*t3395) + t1898*(-1.*t1807*t2635 - 1.*t2201*t2647 - 1.*t1892*t3391 - 1.*t1939*t3395 + t3403 + t3405))*var2[0] + (t1871*t2813 + t1886*(-1.*t1898*t3391 - 1.*t1153*t3395 + t3415) + t1898*(t1871*t2635 + t2227*t2647 + t1886*t3391 + t1974*t3395 + t3428 + t3430))*var2[1] + (t1871*t2750 + t1807*t2782 + t1886*(t1807*t2635 + t2201*t2647 + t1892*t3391 + t1939*t3395 + t3447 + t3448) + t1892*(-1.*t1871*t2635 - 1.*t2227*t2647 - 1.*t1886*t3391 - 1.*t1974*t3395 + t3465 + t3466))*var2[2];
  p_output1[31]=t1892*t2687 + t1898*t2709;
  p_output1[32]=t1886*t2813 + t1898*t2832;
  p_output1[33]=t1886*t2750 + t1892*t2782;
  p_output1[34]=(t1933*(t1457*t2619 + t2845 + t2852 + t1140*t2859) + t1912*(-1.*t1477*t2619 - 1.*t1327*t2859 + t2882 + t2884) + t2038*t3536 + t1140*t3552)*var2[0] + (t1966*(-1.*t1457*t2619 - 1.*t1140*t2859 + t2930 + t2931) + t1912*(t1490*t2619 + t1422*t2859 + t2944 + t2946) + t2051*t3594 + t1140*t3606)*var2[1] + (t1966*(t1477*t2619 + t1327*t2859 + t2898 + t2900) + t1933*(-1.*t1490*t2619 - 1.*t1422*t2859 + t2914 + t2915) + t2051*t3568 + t2038*t3579)*var2[2];
  p_output1[35]=(t1933*(t1516*t2619 + t2966 + t2988 + t1140*t2998) + t1912*(-1.*t1536*t2619 - 1.*t1327*t2998 + t3010 + t3012) + t2083*t3536 + t2068*t3552)*var2[0] + (t1966*(-1.*t1516*t2619 - 1.*t1140*t2998 + t3079 + t3080) + t1912*(t1560*t2619 + t1422*t2998 + t3100 + t3102) + t2105*t3594 + t2068*t3606)*var2[1] + (t1966*(t1536*t2619 + t1327*t2998 + t3034 + t3035) + t1933*(-1.*t1560*t2619 - 1.*t1422*t2998 + t3058 + t3061) + t2105*t3568 + t2083*t3579)*var2[2];
  p_output1[36]=(t2139*t3536 + t2117*t3552 + t1933*(t1615*t2619 + t3125 + t3173 + t1140*t3193 + t3678 + t3679) + t1912*(-1.*t1679*t2619 - 1.*t1327*t3193 + t3212 + t3216 + t3688 + t3689))*var2[0] + (t2156*t3594 + t2117*t3606 + t1966*(-1.*t1615*t2619 - 1.*t1140*t3193 + t3287 + t3288 + t3726 + t3727) + t1912*(t1730*t2619 + t1422*t3193 + t3300 + t3301 + t3738 + t3739))*var2[1] + (t2156*t3568 + t2139*t3579 + t1966*(t1679*t2619 + t1327*t3193 + t3248 + t3250 + t3703 + t3705) + t1933*(-1.*t1730*t2619 - 1.*t1422*t3193 + t3271 + t3274 + t3714 + t3715))*var2[2];
  p_output1[37]=(t2191*t3536 + t1933*(t3377 + t1140*t3388 + t3759) + t1912*(-1.*t1801*t2619 - 1.*t1327*t3388 + t3403 + t3405 + t3770 + t3772))*var2[0] + (t2214*t3594 + t1966*(-1.*t1140*t3388 + t3415 + t3780) + t1912*(t1867*t2619 + t1422*t3388 + t3428 + t3430 + t3794 + t3795))*var2[1] + (t2214*t3568 + t2191*t3579 + t1966*(t1801*t2619 + t1327*t3388 + t3447 + t3448 + t3828 + t3829) + t1933*(-1.*t1867*t2619 - 1.*t1422*t3388 + t3465 + t3466 + t3845 + t3846))*var2[2];
  p_output1[38]=t1933*t3536 + t1912*t3552;
  p_output1[39]=t1966*t3594 + t1912*t3606;
  p_output1[40]=t1966*t3568 + t1933*t3579;
  p_output1[41]=(t1263*(t1504*t2586 + t1108*t2610 + t1125*t2969 + t1108*t2979) + (-1.*t1529*t2586 - 1.*t1533*t2610 - 1.*t1317*t2969 - 1.*t1305*t2979)*t934)*var2[0] + (t1361*(-1.*t1504*t2586 - 1.*t1108*t2610 - 1.*t1125*t2969 - 1.*t1108*t2979) + (t1548*t2586 + t1553*t2610 + t1419*t2969 + t1405*t2979)*t934)*var2[1] + (t1361*(t1529*t2586 + t1533*t2610 + t1317*t2969 + t1305*t2979) + t1263*(-1.*t1548*t2586 - 1.*t1553*t2610 - 1.*t1419*t2969 - 1.*t1405*t2979))*var2[2];
  p_output1[42]=(t1263*(t1598*t2586 + t1612*t2610 + t1125*t3159 + t1108*t3166 + t3678 + t3679) + t1103*t3963 + t1626*t3991 + (-1.*t1657*t2586 - 1.*t1668*t2610 - 1.*t1317*t3159 - 1.*t1305*t3166 + t3688 + t3689)*t934)*var2[0] + (t1361*(-1.*t1598*t2586 - 1.*t1612*t2610 - 1.*t1125*t3159 - 1.*t1108*t3166 + t3726 + t3727) + t1103*t4017 + t1694*t4052 + (t1720*t2586 + t1725*t2610 + t1419*t3159 + t1405*t3166 + t3738 + t3739)*t934)*var2[1] + (t1361*(t1657*t2586 + t1668*t2610 + t1317*t3159 + t1305*t3166 + t3703 + t3705) + t1263*(-1.*t1720*t2586 - 1.*t1725*t2610 - 1.*t1419*t3159 - 1.*t1405*t3166 + t3714 + t3715) + t1626*t4077 + t1694*t4093)*var2[2];
  p_output1[43]=(t1263*(t1125*t3364 + t1108*t3374 + t3759) + t1766*t3991 + (-1.*t1789*t2586 - 1.*t1798*t2610 - 1.*t1317*t3364 - 1.*t1305*t3374 + t3770 + t3772)*t934)*var2[0] + (t1361*(-1.*t1125*t3364 - 1.*t1108*t3374 + t3780) + t1821*t4052 + (t1856*t2586 + t1862*t2610 + t1419*t3364 + t1405*t3374 + t3794 + t3795)*t934)*var2[1] + (t1361*(t1789*t2586 + t1798*t2610 + t1317*t3364 + t1305*t3374 + t3828 + t3829) + t1263*(-1.*t1856*t2586 - 1.*t1862*t2610 - 1.*t1419*t3364 - 1.*t1405*t3374 + t3845 + t3846) + t1766*t4077 + t1821*t4093)*var2[2];
  p_output1[44]=t1263*t3991 + t3963*t934;
  p_output1[45]=t1361*t4052 + t4017*t934;
  p_output1[46]=t1263*t4077 + t1361*t4093;
  p_output1[47]=(-0.15121*t1701 - 0.15121*t1716 + t1103*t4352 + t1626*t4385 + (-1.*t1653*t2568 - 1.*t1641*t2584 - 1.*t1301*t3133 - 1.*t1282*t3155 + t3689 - 1.*t1626*t4226)*t934 + t1263*(t1583*t2568 + t1579*t2584 + t1103*t3133 + t3679 + t1103*t4226 + t3155*t985))*var2[0] + (-0.15121*t1641 - 0.15121*t1653 + t1103*t4233 + t1694*t4280 + (t1716*t2568 + t1701*t2584 + t1391*t3133 + t1373*t3155 + t3738 + t1694*t4226)*t934 + t1361*(-1.*t1583*t2568 - 1.*t1579*t2584 - 1.*t1103*t3133 + t3727 - 1.*t1103*t4226 - 1.*t3155*t985))*var2[1] + (-0.15121*t1579 - 0.15121*t1583 + t1361*(t1653*t2568 + t1641*t2584 + t1301*t3133 + t1282*t3155 + t3705 + t1626*t4226) + t1263*(-1.*t1716*t2568 - 1.*t1701*t2584 - 1.*t1391*t3133 - 1.*t1373*t3155 + t3714 - 1.*t1694*t4226) + t1626*t4324 + t1694*t4345)*var2[2];
  p_output1[48]=(-0.15121*t1837 - 0.15121*t1846 + t1766*t4385 + (-1.*t1774*t2568 - 1.*t1786*t2584 - 1.*t1282*t3343 - 1.*t1301*t3355 + t3770 - 1.*t1766*t4226)*t934 + t1263*(t1103*t3355 + t3759 + t3343*t985))*var2[0] + (-0.15121*t1774 - 0.15121*t1786 + t1821*t4280 + (t1837*t2568 + t1846*t2584 + t1373*t3343 + t1391*t3355 + t3795 + t1821*t4226)*t934 + t1361*(-1.*t1103*t3355 + t3780 - 1.*t3343*t985))*var2[1] + (t1361*(t1774*t2568 + t1786*t2584 + t1282*t3343 + t1301*t3355 + t3828 + t1766*t4226) + t1263*(-1.*t1837*t2568 - 1.*t1846*t2584 - 1.*t1373*t3343 - 1.*t1391*t3355 + t3846 - 1.*t1821*t4226) + t1766*t4324 + t1821*t4345)*var2[2];
  p_output1[49]=-0.15121*t1373 - 0.15121*t1391 + t1263*t4385 + t4352*t934;
  p_output1[50]=-0.15121*t1282 - 0.15121*t1301 + t1361*t4280 + t4233*t934;
  p_output1[51]=-0.15121*t1103 + t1263*t4324 + t1361*t4345 - 0.15121*t985;
  p_output1[52]=(-0.038749*t1743 + 1.e-6*t1811 - 0.28121*t1815 - 1.*t1761*t4687 - 1.*t1240*t4695 - 1.*t4682*t868 + 4.e-6*(-1.*t1743*t4687 - 1.*t1256*t4695 - 1.*t4682*t906))*var2[0] + (-0.28121*t1743 - 0.038749*t1748 + 1.e-6*t1761 - 1.*t1811*t4570 - 1.*t1338*t4579 - 1.*t4561*t868 + 4.e-6*(-1.*t1815*t4570 - 1.*t1352*t4579 - 1.*t4561*t906))*var2[1] + (-1.*t1761*t4606 - 1.*t1811*t4613 - 1.*t1240*t4634 - 1.*t1338*t4653 + 4.e-6*(-1.*t1743*t4606 - 1.*t1815*t4613 - 1.*t1256*t4634 - 1.*t1352*t4653))*var2[2];
  p_output1[53]=1.e-6*t1338 - 0.038749*t1348 - 0.28121*t1352 - 1.*t1240*t4687 - 1.*t4722*t868 + 4.e-6*(-1.*t1256*t4687 - 1.*t4722*t906);
  p_output1[54]=-0.038749*t1224 + 1.e-6*t1240 - 0.28121*t1256 - 1.*t1338*t4570 - 1.*t4752*t868 + 4.e-6*(-1.*t1352*t4570 - 1.*t4752*t906);
  p_output1[55]=-1.*t1240*t4606 - 1.*t1338*t4613 + 4.e-6*(-1.*t1256*t4606 - 1.*t1352*t4613) + 1.e-6*t868 - 0.28121*t906;
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_ParallelStance1.hh"

namespace ParallelStance1
{

void J_fFrFoot_vec_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
