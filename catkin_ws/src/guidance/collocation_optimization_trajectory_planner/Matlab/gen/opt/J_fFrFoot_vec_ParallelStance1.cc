/*
 * Automatically Generated from Mathematica.
 * Wed 8 Dec 2021 23:11:17 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1098;
  double t817;
  double t1289;
  double t1209;
  double t1222;
  double t1270;
  double t1291;
  double t1294;
  double t835;
  double t852;
  double t1332;
  double t1334;
  double t1337;
  double t1559;
  double t1511;
  double t1411;
  double t1415;
  double t1418;
  double t1420;
  double t1425;
  double t1433;
  double t1447;
  double t1605;
  double t1623;
  double t1632;
  double t1391;
  double t1795;
  double t1406;
  double t1409;
  double t1727;
  double t1741;
  double t1777;
  double t1802;
  double t1805;
  double t1820;
  double t1827;
  double t1829;
  double t1831;
  double t1832;
  double t1842;
  double t1850;
  double t1863;
  double t1888;
  double t1897;
  double t1914;
  double t1921;
  double t1923;
  double t1924;
  double t1926;
  double t1933;
  double t1934;
  double t1939;
  double t1667;
  double t1969;
  double t1975;
  double t1976;
  double t1980;
  double t1983;
  double t1985;
  double t1986;
  double t1987;
  double t2010;
  double t2020;
  double t2021;
  double t2030;
  double t2033;
  double t2035;
  double t2043;
  double t2044;
  double t1664;
  double t1665;
  double t1666;
  double t1507;
  double t1633;
  double t1642;
  double t1953;
  double t1955;
  double t1957;
  double t1922;
  double t1941;
  double t1945;
  double t2089;
  double t2103;
  double t2105;
  double t2031;
  double t2051;
  double t2056;
  double t2163;
  double t2343;
  double t2345;
  double t2348;
  double t2350;
  double t2357;
  double t2358;
  double t2420;
  double t2421;
  double t2422;
  double t2425;
  double t2434;
  double t2436;
  double t2437;
  double t2439;
  double t2475;
  double t2484;
  double t2485;
  double t2487;
  double t2492;
  double t2494;
  double t2496;
  double t2498;
  double t2560;
  double t2563;
  double t2568;
  double t2578;
  double t2579;
  double t2588;
  double t2590;
  double t2594;
  double t2602;
  double t2603;
  double t2607;
  double t2610;
  double t2616;
  double t2617;
  double t2619;
  double t2621;
  double t2657;
  double t2662;
  double t2670;
  double t2680;
  double t2687;
  double t2695;
  double t2702;
  double t2707;
  double t2711;
  double t2715;
  double t2725;
  double t1979;
  double t1984;
  double t1991;
  double t1992;
  double t2085;
  double t2107;
  double t2111;
  double t1807;
  double t1841;
  double t1870;
  double t1871;
  double t1950;
  double t1960;
  double t1963;
  double t1306;
  double t1342;
  double t1361;
  double t1655;
  double t1677;
  double t1678;
  double t1404;
  double t1682;
  double t1706;
  double t2825;
  double t2838;
  double t1885;
  double t1965;
  double t2003;
  double t2114;
  double t2156;
  double t2164;
  double t2181;
  double t2190;
  double t2191;
  double t2201;
  double t2204;
  double t2215;
  double t2227;
  double t2231;
  double t2237;
  double t2242;
  double t2255;
  double t2273;
  double t2275;
  double t2279;
  double t2282;
  double t2285;
  double t2287;
  double t2288;
  double t2291;
  double t2295;
  double t2298;
  double t2304;
  double t2308;
  double t2309;
  double t2313;
  double t2381;
  double t2382;
  double t2390;
  double t2349;
  double t2367;
  double t2368;
  double t2379;
  double t2395;
  double t2400;
  double t2448;
  double t2451;
  double t2452;
  double t2426;
  double t2441;
  double t2444;
  double t2411;
  double t2415;
  double t2447;
  double t2453;
  double t2465;
  double t2522;
  double t2527;
  double t2530;
  double t2490;
  double t2503;
  double t2517;
  double t2470;
  double t2473;
  double t2518;
  double t2531;
  double t2533;
  double t2634;
  double t2638;
  double t2639;
  double t2612;
  double t2623;
  double t2624;
  double t2565;
  double t2587;
  double t2596;
  double t2597;
  double t2629;
  double t2640;
  double t2644;
  double t2740;
  double t2743;
  double t2749;
  double t2703;
  double t2729;
  double t2734;
  double t2654;
  double t2666;
  double t2671;
  double t2674;
  double t2735;
  double t2760;
  double t2761;
  double t2871;
  double t2873;
  double t2888;
  double t2892;
  double t2843;
  double t2844;
  double t2847;
  double t2852;
  double t2827;
  double t2829;
  double t2836;
  double t3221;
  double t3222;
  double t3223;
  double t3217;
  double t3218;
  double t3211;
  double t3212;
  double t2920;
  double t2922;
  double t2923;
  double t2939;
  double t2943;
  double t2945;
  double t2952;
  double t2955;
  double t2959;
  double t2993;
  double t3010;
  double t3022;
  double t3023;
  double t3032;
  double t3040;
  double t3043;
  double t3053;
  double t3054;
  double t3057;
  double t3063;
  double t3071;
  double t3073;
  double t3080;
  double t3082;
  double t3083;
  double t3097;
  double t3099;
  double t3100;
  double t3107;
  double t3109;
  double t3111;
  double t3116;
  double t3125;
  double t3128;
  double t3131;
  double t3135;
  double t3136;
  double t3159;
  double t3160;
  double t3161;
  double t3164;
  double t3168;
  double t3171;
  double t3186;
  double t3187;
  double t3188;
  double t3191;
  double t3193;
  double t3195;
  double t2806;
  double t2809;
  double t2811;
  double t3416;
  double t3420;
  double t3422;
  double t3423;
  double t3424;
  double t3425;
  double t3426;
  double t3429;
  double t3432;
  double t3440;
  double t3442;
  double t3445;
  double t3450;
  double t3454;
  double t3456;
  double t3462;
  double t3464;
  double t3481;
  double t3483;
  double t3486;
  double t3487;
  double t3488;
  double t3493;
  double t3494;
  double t3497;
  double t3503;
  double t3505;
  double t3509;
  double t3512;
  double t3513;
  double t3517;
  double t3519;
  double t3523;
  double t3526;
  double t3408;
  double t3409;
  double t3410;
  double t3414;
  double t3427;
  double t3444;
  double t3470;
  double t3473;
  double t3484;
  double t3510;
  double t3527;
  double t3532;
  double t3535;
  double t3541;
  double t3542;
  double t3546;
  double t3550;
  double t3556;
  double t3557;
  double t2812;
  double t2819;
  double t2820;
  double t3571;
  double t3574;
  double t1966;
  double t3565;
  double t3566;
  double t3567;
  double t3589;
  double t3476;
  double t3558;
  double t3559;
  double t3578;
  double t3599;
  double t3601;
  double t3602;
  double t2786;
  double t2789;
  double t2800;
  double t2137;
  double t3799;
  double t3803;
  double t3804;
  double t3794;
  double t3603;
  double t3605;
  double t3611;
  double t3614;
  double t3650;
  double t3652;
  double t3653;
  double t3655;
  double t3680;
  double t3682;
  double t3687;
  double t3688;
  double t3712;
  double t3717;
  double t3719;
  double t3721;
  double t3749;
  double t3750;
  double t3751;
  double t3752;
  double t3778;
  double t3779;
  double t3780;
  double t3781;
  double t3965;
  double t3985;
  double t3988;
  double t3993;
  double t3995;
  double t3975;
  double t4005;
  double t4013;
  double t4017;
  double t3978;
  double t3997;
  double t4000;
  double t2416;
  double t2467;
  double t2468;
  double t2342;
  double t2407;
  double t2409;
  double t4204;
  double t4207;
  double t4208;
  double t4212;
  double t4213;
  double t4216;
  double t4224;
  double t4228;
  double t4230;
  double t4231;
  double t4232;
  double t4235;
  double t4242;
  double t4243;
  double t4244;
  double t4217;
  double t4236;
  double t4237;
  double t4257;
  double t4258;
  double t4259;
  double t4269;
  double t4270;
  double t4271;
  double t4238;
  double t4245;
  double t4247;
  double t4268;
  double t4274;
  double t4278;
  double t4281;
  double t4284;
  double t4286;
  double t2474;
  double t2534;
  double t2540;
  double t4427;
  double t4428;
  double t4431;
  double t4434;
  double t4438;
  double t4439;
  double t4445;
  double t4447;
  double t4432;
  double t4442;
  double t4449;
  double t4451;
  double t4454;
  double t4459;
  double t4461;
  double t4463;
  double t4479;
  double t4482;
  double t4483;
  double t4452;
  double t4465;
  double t4472;
  double t4491;
  double t4498;
  double t4501;
  double t4504;
  double t4506;
  double t4508;
  double t4510;
  double t2598;
  double t2648;
  double t2650;
  double t4475;
  double t4484;
  double t4487;
  double t4505;
  double t4514;
  double t4516;
  double t4518;
  double t4522;
  double t4523;
  double t2676;
  double t2764;
  double t2770;
  double t3793;
  double t3796;
  double t3816;
  double t3818;
  double t3843;
  double t3844;
  double t3865;
  double t3866;
  double t3897;
  double t3900;
  double t3920;
  double t3922;
  double t3962;
  double t4001;
  double t4699;
  double t4702;
  double t4703;
  double t4044;
  double t4046;
  double t4726;
  double t4729;
  double t4734;
  double t4080;
  double t4081;
  double t4756;
  double t4760;
  double t4762;
  double t4106;
  double t4116;
  double t4775;
  double t4780;
  double t4782;
  double t4145;
  double t4147;
  double t4802;
  double t4803;
  double t4806;
  double t4169;
  double t4171;
  double t4824;
  double t4825;
  double t4837;
  double t4196;
  double t4249;
  double t4296;
  double t4297;
  double t4323;
  double t4324;
  double t4341;
  double t4342;
  double t4388;
  double t4389;
  double t4404;
  double t4405;
  double t4490;
  double t4531;
  double t4532;
  double t4548;
  double t4559;
  double t4569;
  double t4589;
  double t4598;
  double t4631;
  double t4632;
  double t4951;
  double t4953;
  double t4939;
  double t4940;
  double t5054;
  double t5062;
  double t5025;
  double t5031;
  double t4999;
  double t5003;
  double t4974;
  double t4976;
  double t5093;
  double t5094;
  double t5499;
  double t5500;
  double t5501;
  double t5081;
  double t5118;
  double t5121;
  double t5537;
  double t5538;
  double t5540;
  double t5107;
  double t5570;
  double t5571;
  double t5576;
  double t5616;
  double t5617;
  double t5618;
  double t5178;
  double t5179;
  double t5164;
  double t5166;
  double t5433;
  double t5438;
  double t5445;
  double t5507;
  double t5508;
  double t5511;
  double t5825;
  double t6088;
  double t6094;
  double t6095;
  double t6097;
  double t5873;
  double t5875;
  double t5878;
  double t5882;
  double t5956;
  double t5959;
  double t5961;
  double t5965;
  double t5984;
  double t5985;
  double t5986;
  double t5987;
  double t6011;
  double t6018;
  double t6019;
  double t6025;
  double t5817;
  double t5830;
  double t5833;
  double t5834;
  double t6303;
  double t6307;
  double t6311;
  double t6319;
  double t6324;
  double t6329;
  double t6335;
  double t6357;
  double t6365;
  double t6370;
  double t6340;
  double t6341;
  double t6346;
  double t6534;
  double t6546;
  double t6547;
  double t6553;
  double t6557;
  double t6599;
  double t6600;
  double t6501;
  double t6502;
  double t6513;
  double t6514;
  double t6515;
  double t6516;
  double t6519;
  double t6455;
  double t6463;
  double t6472;
  double t6478;
  double t6434;
  double t6438;
  double t6441;
  double t6442;
  double t6671;
  double t6678;
  double t6683;
  double t6701;
  double t6706;
  double t6714;
  double t6719;
  double t6740;
  double t6741;
  double t6743;
  double t6727;
  double t6732;
  double t6733;
  double t6822;
  double t6835;
  double t6858;
  double t6868;
  double t6896;
  double t6899;
  double t6901;
  double t6921;
  t1098 = Cos(var1[11]);
  t817 = Cos(var1[10]);
  t1289 = -1. + t1098;
  t1209 = -1.*t1098;
  t1222 = 1. + t1209;
  t1270 = 1.6e-11*t1222;
  t1291 = 1.6e-11*t1289;
  t1294 = -1. + t1270 + t1291;
  t835 = -1.*t817;
  t852 = 1. + t835;
  t1332 = 4.e-6*t1289;
  t1334 = -4.e-6*t1098;
  t1337 = t1332 + t1334;
  t1559 = Sin(var1[10]);
  t1511 = Cos(var1[9]);
  t1411 = -1. + t817;
  t1415 = 1.6e-11*t1411;
  t1418 = 1. + t1415;
  t1420 = t1418*t1294;
  t1425 = 4.e-6*t852*t1337;
  t1433 = t1420 + t1425;
  t1447 = Sin(var1[9]);
  t1605 = 4.e-6*t1294*t1559;
  t1623 = -1.*t1337*t1559;
  t1632 = t1605 + t1623;
  t1391 = Cos(var1[4]);
  t1795 = Sin(var1[11]);
  t1406 = Sin(var1[4]);
  t1409 = Cos(var1[5]);
  t1727 = -1.000000000016*t1222;
  t1741 = 1. + t1727;
  t1777 = 0.004352*t1741;
  t1802 = -0.9999910000159999*t1795;
  t1805 = t1777 + t1802;
  t1820 = -1. + t1270;
  t1827 = 4.e-6*t1820;
  t1829 = 3.999964e-6*t1222;
  t1831 = -1.7408e-8*t1795;
  t1832 = t1827 + t1829 + t1831;
  t1842 = 0.999991*t1098;
  t1850 = 0.004352*t1795;
  t1863 = t1291 + t1842 + t1850;
  t1888 = -4.e-6*t1559*t1805;
  t1897 = t1418*t1832;
  t1914 = 4.e-6*t852*t1863;
  t1921 = 0. + t1888 + t1897 + t1914;
  t1923 = -1.000000000016*t852;
  t1924 = 1. + t1923;
  t1926 = t1924*t1805;
  t1933 = 4.e-6*t1559*t1832;
  t1934 = -1.*t1559*t1863;
  t1939 = 0. + t1926 + t1933 + t1934;
  t1667 = Sin(var1[5]);
  t1969 = -1.7408e-8*t1222;
  t1975 = -3.999964e-6*t1795;
  t1976 = t1969 + t1975;
  t1980 = 0.999991*t1741;
  t1983 = t1980 + t1850;
  t1985 = -0.004352*t1098;
  t1986 = 0.999991*t1795;
  t1987 = t1985 + t1986;
  t2010 = t1418*t1976;
  t2020 = -4.e-6*t1559*t1983;
  t2021 = 4.e-6*t852*t1987;
  t2030 = 0. + t2010 + t2020 + t2021;
  t2033 = 4.e-6*t1559*t1976;
  t2035 = t1924*t1983;
  t2043 = -1.*t1559*t1987;
  t2044 = 0. + t2033 + t2035 + t2043;
  t1664 = t1511*t1433;
  t1665 = t1447*t1632;
  t1666 = t1664 + t1665;
  t1507 = -1.*t1433*t1447;
  t1633 = t1511*t1632;
  t1642 = t1507 + t1633;
  t1953 = t1511*t1921;
  t1955 = t1447*t1939;
  t1957 = 0. + t1953 + t1955;
  t1922 = -1.*t1447*t1921;
  t1941 = t1511*t1939;
  t1945 = 0. + t1922 + t1941;
  t2089 = t1511*t2030;
  t2103 = t1447*t2044;
  t2105 = 0. + t2089 + t2103;
  t2031 = -1.*t1447*t2030;
  t2051 = t1511*t2044;
  t2056 = 0. + t2031 + t2051;
  t2163 = -1.*t1642*t1667;
  t2343 = 4.e-6*t817*t1294;
  t2345 = -1.*t817*t1337;
  t2348 = t2343 + t2345;
  t2350 = -1.6e-11*t1294*t1559;
  t2357 = 4.e-6*t1337*t1559;
  t2358 = t2350 + t2357;
  t2420 = -1.000000000016*t1559*t1805;
  t2421 = 4.e-6*t817*t1832;
  t2422 = -1.*t817*t1863;
  t2425 = t2420 + t2421 + t2422;
  t2434 = -4.e-6*t817*t1805;
  t2436 = -1.6e-11*t1559*t1832;
  t2437 = 4.e-6*t1559*t1863;
  t2439 = t2434 + t2436 + t2437;
  t2475 = 4.e-6*t817*t1976;
  t2484 = -1.000000000016*t1559*t1983;
  t2485 = -1.*t817*t1987;
  t2487 = t2475 + t2484 + t2485;
  t2492 = -1.6e-11*t1559*t1976;
  t2494 = -4.e-6*t817*t1983;
  t2496 = 4.e-6*t1559*t1987;
  t2498 = t2492 + t2494 + t2496;
  t2560 = 0.004352*t1098;
  t2563 = t2560 + t1802;
  t2568 = -0.9999910000159999*t1098;
  t2578 = -0.00435200000006963*t1795;
  t2579 = t2568 + t2578;
  t2588 = -1.7408e-8*t1098;
  t2590 = 3.999964000064e-6*t1795;
  t2594 = t2588 + t2590;
  t2602 = 4.e-6*t852*t2563;
  t2603 = -4.e-6*t1559*t2579;
  t2607 = t1418*t2594;
  t2610 = t2602 + t2603 + t2607;
  t2616 = -1.*t1559*t2563;
  t2617 = t1924*t2579;
  t2619 = 4.e-6*t1559*t2594;
  t2621 = t2616 + t2617 + t2619;
  t2657 = -3.999964e-6*t1098;
  t2662 = t2657 + t1831;
  t2670 = t1842 + t1850;
  t2680 = -4.e-6*t1559*t2563;
  t2687 = t1418*t2662;
  t2695 = 4.e-6*t852*t2670;
  t2702 = t2680 + t2687 + t2695;
  t2707 = t1924*t2563;
  t2711 = 4.e-6*t1559*t2662;
  t2715 = -1.*t1559*t2670;
  t2725 = t2707 + t2711 + t2715;
  t1979 = 4.e-6*t852*t1976;
  t1984 = t1559*t1983;
  t1991 = t817*t1987;
  t1992 = 0. + t1979 + t1984 + t1991;
  t2085 = t1409*t2056;
  t2107 = -1.*t2105*t1667;
  t2111 = 0. + t2085 + t2107;
  t1807 = t1559*t1805;
  t1841 = 4.e-6*t852*t1832;
  t1870 = t817*t1863;
  t1871 = 0. + t1807 + t1841 + t1870;
  t1950 = t1409*t1945;
  t1960 = -1.*t1957*t1667;
  t1963 = 0. + t1950 + t1960;
  t1306 = 4.e-6*t852*t1294;
  t1342 = t817*t1337;
  t1361 = t1306 + t1342;
  t1655 = t1409*t1642;
  t1677 = -1.*t1666*t1667;
  t1678 = t1655 + t1677;
  t1404 = t1361*t1391;
  t1682 = -1.*t1406*t1678;
  t1706 = t1404 + t1682;
  t2825 = Sin(var1[3]);
  t2838 = Cos(var1[3]);
  t1885 = t1391*t1871;
  t1965 = -1.*t1406*t1963;
  t2003 = t1391*t1992;
  t2114 = -1.*t1406*t2111;
  t2156 = -1.*t1409*t1666;
  t2164 = t2156 + t2163;
  t2181 = -1.*t1409*t1957;
  t2190 = -1.*t1945*t1667;
  t2191 = t2181 + t2190;
  t2201 = -1.*t1409*t2105;
  t2204 = -1.*t2056*t1667;
  t2215 = t2201 + t2204;
  t2227 = -1.*t1511*t1433;
  t2231 = -1.*t1447*t1632;
  t2237 = t2227 + t2231;
  t2242 = t1409*t2237;
  t2255 = t2242 + t2163;
  t2273 = -1.*t1511*t1921;
  t2275 = -1.*t1447*t1939;
  t2279 = t2273 + t2275;
  t2282 = t1409*t2279;
  t2285 = t1922 + t1941;
  t2287 = -1.*t2285*t1667;
  t2288 = t2282 + t2287;
  t2291 = -1.*t1511*t2030;
  t2295 = -1.*t1447*t2044;
  t2298 = t2291 + t2295;
  t2304 = t1409*t2298;
  t2308 = t2031 + t2051;
  t2309 = -1.*t2308*t1667;
  t2313 = t2304 + t2309;
  t2381 = t2348*t1447;
  t2382 = t1511*t2358;
  t2390 = t2381 + t2382;
  t2349 = t1511*t2348;
  t2367 = -1.*t1447*t2358;
  t2368 = t2349 + t2367;
  t2379 = t1409*t2368;
  t2395 = -1.*t2390*t1667;
  t2400 = t2379 + t2395;
  t2448 = t1447*t2425;
  t2451 = t1511*t2439;
  t2452 = t2448 + t2451;
  t2426 = t1511*t2425;
  t2441 = -1.*t1447*t2439;
  t2444 = t2426 + t2441;
  t2411 = t817*t1805;
  t2415 = t2411 + t1933 + t1934;
  t2447 = t1409*t2444;
  t2453 = -1.*t2452*t1667;
  t2465 = t2447 + t2453;
  t2522 = t1447*t2487;
  t2527 = t1511*t2498;
  t2530 = t2522 + t2527;
  t2490 = t1511*t2487;
  t2503 = -1.*t1447*t2498;
  t2517 = t2490 + t2503;
  t2470 = t817*t1983;
  t2473 = t2033 + t2470 + t2043;
  t2518 = t1409*t2517;
  t2531 = -1.*t2530*t1667;
  t2533 = t2518 + t2531;
  t2634 = t1511*t2610;
  t2638 = t1447*t2621;
  t2639 = t2634 + t2638;
  t2612 = -1.*t1447*t2610;
  t2623 = t1511*t2621;
  t2624 = t2612 + t2623;
  t2565 = t817*t2563;
  t2587 = t1559*t2579;
  t2596 = 4.e-6*t852*t2594;
  t2597 = t2565 + t2587 + t2596;
  t2629 = t1409*t2624;
  t2640 = -1.*t2639*t1667;
  t2644 = t2629 + t2640;
  t2740 = t1511*t2702;
  t2743 = t1447*t2725;
  t2749 = t2740 + t2743;
  t2703 = -1.*t1447*t2702;
  t2729 = t1511*t2725;
  t2734 = t2703 + t2729;
  t2654 = t1559*t2563;
  t2666 = 4.e-6*t852*t2662;
  t2671 = t817*t2670;
  t2674 = t2654 + t2666 + t2671;
  t2735 = t1409*t2734;
  t2760 = -1.*t2749*t1667;
  t2761 = t2735 + t2760;
  t2871 = t1409*t2105;
  t2873 = t2056*t1667;
  t2888 = 0. + t2871 + t2873;
  t2892 = 0. + t2003 + t2114;
  t2843 = t1409*t1957;
  t2844 = t1945*t1667;
  t2847 = 0. + t2843 + t2844;
  t2852 = 0. + t1885 + t1965;
  t2827 = t1409*t1666;
  t2829 = t1642*t1667;
  t2836 = t2827 + t2829;
  t3221 = t2838*t2836;
  t3222 = -1.*t2825*t1706;
  t3223 = t3221 + t3222;
  t3217 = t2838*t2847;
  t3218 = -1.*t2825*t2852;
  t3211 = t2838*t2888;
  t3212 = -1.*t2825*t2892;
  t2920 = -1.*t1361*t1406;
  t2922 = -1.*t1391*t1678;
  t2923 = t2920 + t2922;
  t2939 = -1.*t1871*t1406;
  t2943 = -1.*t1391*t1963;
  t2945 = t2939 + t2943;
  t2952 = -1.*t1992*t1406;
  t2955 = -1.*t1391*t2111;
  t2959 = t2952 + t2955;
  t2993 = t1950 + t1960;
  t3010 = t2085 + t2107;
  t3022 = t2237*t1667;
  t3023 = t1655 + t3022;
  t3032 = t1409*t2285;
  t3040 = t2279*t1667;
  t3043 = t3032 + t3040;
  t3053 = t1409*t2308;
  t3054 = t2298*t1667;
  t3057 = t3053 + t3054;
  t3063 = t1409*t2390;
  t3071 = t2368*t1667;
  t3073 = t3063 + t3071;
  t3080 = t1391*t1632;
  t3082 = -1.*t1406*t2400;
  t3083 = t3080 + t3082;
  t3097 = t1409*t2452;
  t3099 = t2444*t1667;
  t3100 = t3097 + t3099;
  t3107 = t1391*t2415;
  t3109 = -1.*t1406*t2465;
  t3111 = t3107 + t3109;
  t3116 = t1409*t2530;
  t3125 = t2517*t1667;
  t3128 = t3116 + t3125;
  t3131 = t1391*t2473;
  t3135 = -1.*t1406*t2533;
  t3136 = t3131 + t3135;
  t3159 = t1409*t2639;
  t3160 = t2624*t1667;
  t3161 = t3159 + t3160;
  t3164 = t1391*t2597;
  t3168 = -1.*t1406*t2644;
  t3171 = t3164 + t3168;
  t3186 = t1409*t2749;
  t3187 = t2734*t1667;
  t3188 = t3186 + t3187;
  t3191 = t1391*t2674;
  t3193 = -1.*t1406*t2761;
  t3195 = t3191 + t3193;
  t2806 = t1871*t1406;
  t2809 = t1391*t1963;
  t2811 = 0. + t2806 + t2809;
  t3416 = -1.26e-8*var1[11];
  t3420 = 1. + t1291;
  t3422 = -0.14871*t3420;
  t3423 = -1.64779999997447e-7*t1222;
  t3424 = -1.59556e-7*t1289;
  t3425 = -1.199987999968e-6*t1795;
  t3426 = t3416 + t3422 + t3423 + t3424 + t3425;
  t3429 = 0.803147*t1741;
  t3432 = 0.50315000001605*t1222;
  t3440 = 0.00130540515936178*t1795;
  t3442 = t3429 + t3432 + t3440;
  t3445 = -5.04e-14*var1[11];
  t3450 = -0.03988959484*t1222;
  t3454 = 6.38224e-13*t1289;
  t3456 = -0.041195*t1098;
  t3462 = 0.299996999992*t1795;
  t3464 = t3445 + t3450 + t3454 + t3456 + t3462;
  t3481 = -1.*t1511;
  t3483 = 1. + t3481;
  t3486 = -0.15121*t1447;
  t3487 = -1.2484e-7*var1[10];
  t3488 = 2.479936e-18*t852;
  t3493 = -1.54996e-7*t1411;
  t3494 = 1.124840000016e-6*t1559;
  t3497 = t1418*t3426;
  t3503 = -4.e-6*t1559*t3442;
  t3505 = 4.e-6*t852*t3464;
  t3509 = t3487 + t3488 + t3493 + t3494 + t3497 + t3503 + t3505;
  t3512 = 0.281210000008499*t852;
  t3513 = -0.03874900000062*t1559;
  t3517 = 4.e-6*t1559*t3426;
  t3519 = t1924*t3442;
  t3523 = -1.*t1559*t3464;
  t3526 = t3512 + t3513 + t3517 + t3519 + t3523;
  t3408 = -4.9936e-13*var1[10];
  t3409 = -0.038749*t852;
  t3410 = 6.19984e-13*t1411;
  t3414 = -0.281210000004*t1559;
  t3427 = 4.e-6*t852*t3426;
  t3444 = t1559*t3442;
  t3470 = t817*t3464;
  t3473 = 0. + t3408 + t3409 + t3410 + t3414 + t3427 + t3444 + t3470;
  t3484 = 0.15121*t3483;
  t3510 = -1.*t1447*t3509;
  t3527 = t1511*t3526;
  t3532 = t3484 + t3486 + t3510 + t3527;
  t3535 = t1409*t3532;
  t3541 = -0.15121*t3483;
  t3542 = t1511*t3509;
  t3546 = t1447*t3526;
  t3550 = t3541 + t3486 + t3542 + t3546;
  t3556 = -1.*t3550*t1667;
  t3557 = 0. + t3535 + t3556;
  t2812 = t1361*t1406;
  t2819 = t1391*t1678;
  t2820 = t2812 + t2819;
  t3571 = t1391*t3473;
  t3574 = -1.*t1406*t3557;
  t1966 = t1885 + t1965;
  t3565 = t3473*t1406;
  t3566 = t1391*t3557;
  t3567 = 0. + t3565 + t3566;
  t3589 = 0. + t3571 + t3574;
  t3476 = -1.*t3473*t1406;
  t3558 = -1.*t1391*t3557;
  t3559 = t3476 + t3558;
  t3578 = t3571 + t3574;
  t3599 = t1409*t3550;
  t3601 = t3532*t1667;
  t3602 = 0. + t3599 + t3601;
  t2786 = t1992*t1406;
  t2789 = t1391*t2111;
  t2800 = 0. + t2786 + t2789;
  t2137 = t2003 + t2114;
  t3799 = -1.*t1409*t3550;
  t3803 = -1.*t3532*t1667;
  t3804 = t3799 + t3803;
  t3794 = t3535 + t3556;
  t3603 = t2836*t3602;
  t3605 = t2820*t3567;
  t3611 = t1706*t3589;
  t3614 = t3603 + t3605 + t3611;
  t3650 = -1.*t2847*t3602;
  t3652 = -1.*t2811*t3567;
  t3653 = -1.*t2852*t3589;
  t3655 = t3650 + t3652 + t3653;
  t3680 = t2847*t3602;
  t3682 = t2811*t3567;
  t3687 = t2852*t3589;
  t3688 = t3680 + t3682 + t3687;
  t3712 = -1.*t3602*t2888;
  t3717 = -1.*t3567*t2800;
  t3719 = -1.*t3589*t2892;
  t3721 = t3712 + t3717 + t3719;
  t3749 = -1.*t2836*t3602;
  t3750 = -1.*t2820*t3567;
  t3751 = -1.*t1706*t3589;
  t3752 = t3749 + t3750 + t3751;
  t3778 = t3602*t2888;
  t3779 = t3567*t2800;
  t3780 = t3589*t2892;
  t3781 = t3778 + t3779 + t3780;
  t3965 = -0.15121*t1511;
  t3985 = 0.15121*t1447;
  t3988 = -1.*t1511*t3509;
  t3993 = -1.*t1447*t3526;
  t3995 = t3965 + t3985 + t3988 + t3993;
  t3975 = t3965 + t3486 + t3510 + t3527;
  t4005 = t1409*t3995;
  t4013 = -1.*t3975*t1667;
  t4017 = t4005 + t4013;
  t3978 = t1409*t3975;
  t3997 = t3995*t1667;
  t4000 = t3978 + t3997;
  t2416 = t2415*t1406;
  t2467 = t1391*t2465;
  t2468 = t2416 + t2467;
  t2342 = t1632*t1406;
  t2407 = t1391*t2400;
  t2409 = t2342 + t2407;
  t4204 = -0.03874900000062*t817;
  t4207 = 0.281210000008499*t1559;
  t4208 = 4.e-6*t817*t3426;
  t4212 = -1.000000000016*t1559*t3442;
  t4213 = -1.*t817*t3464;
  t4216 = t4204 + t4207 + t4208 + t4212 + t4213;
  t4224 = 1.124840000016e-6*t817;
  t4228 = 1.5499600000248e-7*t1559;
  t4230 = -1.6e-11*t1559*t3426;
  t4231 = -4.e-6*t817*t3442;
  t4232 = 4.e-6*t1559*t3464;
  t4235 = -1.2484e-7 + t4224 + t4228 + t4230 + t4231 + t4232;
  t4242 = t1511*t4216;
  t4243 = -1.*t1447*t4235;
  t4244 = t4242 + t4243;
  t4217 = t1447*t4216;
  t4236 = t1511*t4235;
  t4237 = t4217 + t4236;
  t4257 = -0.281210000004*t817;
  t4258 = t817*t3442;
  t4259 = -4.9936e-13 + t4257 + t3513 + t3517 + t4258 + t3523;
  t4269 = t1409*t4244;
  t4270 = -1.*t4237*t1667;
  t4271 = t4269 + t4270;
  t4238 = t1409*t4237;
  t4245 = t4244*t1667;
  t4247 = t4238 + t4245;
  t4268 = t4259*t1406;
  t4274 = t1391*t4271;
  t4278 = t4268 + t4274;
  t4281 = t1391*t4259;
  t4284 = -1.*t1406*t4271;
  t4286 = t4281 + t4284;
  t2474 = t2473*t1406;
  t2534 = t1391*t2533;
  t2540 = t2474 + t2534;
  t4427 = 0.00130540515936178*t1098;
  t4428 = -0.2999969999968001*t1795;
  t4431 = t4427 + t4428;
  t4434 = -1.199987999968e-6*t1098;
  t4438 = -5.2216206374471e-9*t1795;
  t4439 = -1.26e-8 + t4434 + t4438;
  t4445 = 0.299996999992*t1098;
  t4447 = -5.04e-14 + t4445 + t3440;
  t4432 = -4.e-6*t1559*t4431;
  t4442 = t1418*t4439;
  t4449 = 4.e-6*t852*t4447;
  t4451 = t4432 + t4442 + t4449;
  t4454 = t1924*t4431;
  t4459 = 4.e-6*t1559*t4439;
  t4461 = -1.*t1559*t4447;
  t4463 = t4454 + t4459 + t4461;
  t4479 = -1.*t1447*t4451;
  t4482 = t1511*t4463;
  t4483 = t4479 + t4482;
  t4452 = t1511*t4451;
  t4465 = t1447*t4463;
  t4472 = t4452 + t4465;
  t4491 = t1559*t4431;
  t4498 = 4.e-6*t852*t4439;
  t4501 = t817*t4447;
  t4504 = t4491 + t4498 + t4501;
  t4506 = t1409*t4483;
  t4508 = -1.*t4472*t1667;
  t4510 = t4506 + t4508;
  t2598 = t2597*t1406;
  t2648 = t1391*t2644;
  t2650 = t2598 + t2648;
  t4475 = t1409*t4472;
  t4484 = t4483*t1667;
  t4487 = t4475 + t4484;
  t4505 = t4504*t1406;
  t4514 = t1391*t4510;
  t4516 = t4505 + t4514;
  t4518 = t1391*t4504;
  t4522 = -1.*t1406*t4510;
  t4523 = t4518 + t4522;
  t2676 = t2674*t1406;
  t2764 = t1391*t2761;
  t2770 = t2676 + t2764;
  t3793 = t1678*t3602;
  t3796 = t2836*t3794;
  t3816 = -1.*t2993*t3602;
  t3818 = -1.*t2847*t3794;
  t3843 = t2993*t3602;
  t3844 = t2847*t3794;
  t3865 = -1.*t3794*t2888;
  t3866 = -1.*t3602*t3010;
  t3897 = -1.*t1678*t3602;
  t3900 = -1.*t2836*t3794;
  t3920 = t3794*t2888;
  t3922 = t3602*t3010;
  t3962 = t3023*t3602;
  t4001 = t2836*t4000;
  t4699 = t1361*t3473;
  t4702 = t1678*t3557;
  t4703 = t4699 + t3603 + t4702;
  t4044 = -1.*t3043*t3602;
  t4046 = -1.*t2847*t4000;
  t4726 = -1.*t1871*t3473;
  t4729 = -1.*t1963*t3557;
  t4734 = t4726 + t3650 + t4729;
  t4080 = t3043*t3602;
  t4081 = t2847*t4000;
  t4756 = t1871*t3473;
  t4760 = t1963*t3557;
  t4762 = t4756 + t3680 + t4760;
  t4106 = -1.*t4000*t2888;
  t4116 = -1.*t3602*t3057;
  t4775 = -1.*t3473*t1992;
  t4780 = -1.*t3557*t2111;
  t4782 = t4775 + t3712 + t4780;
  t4145 = -1.*t3023*t3602;
  t4147 = -1.*t2836*t4000;
  t4802 = -1.*t1361*t3473;
  t4803 = -1.*t1678*t3557;
  t4806 = t4802 + t3749 + t4803;
  t4169 = t4000*t2888;
  t4171 = t3602*t3057;
  t4824 = t3473*t1992;
  t4825 = t3557*t2111;
  t4837 = t4824 + t3778 + t4825;
  t4196 = t3073*t3602;
  t4249 = t2836*t4247;
  t4296 = -1.*t3100*t3602;
  t4297 = -1.*t2847*t4247;
  t4323 = t3100*t3602;
  t4324 = t2847*t4247;
  t4341 = -1.*t4247*t2888;
  t4342 = -1.*t3602*t3128;
  t4388 = -1.*t3073*t3602;
  t4389 = -1.*t2836*t4247;
  t4404 = t4247*t2888;
  t4405 = t3602*t3128;
  t4490 = t2836*t4487;
  t4531 = -1.*t4487*t2847;
  t4532 = -1.*t3161*t3602;
  t4548 = -1.*t2836*t4487;
  t4559 = t3188*t3602;
  t4569 = t4487*t2888;
  t4589 = t4487*t2847;
  t4598 = t3161*t3602;
  t4631 = -1.*t3188*t3602;
  t4632 = -1.*t4487*t2888;
  t4951 = -1.*t2415*t3473;
  t4953 = -1.*t1871*t4259;
  t4939 = t1632*t3473;
  t4940 = t1361*t4259;
  t5054 = t4259*t1992;
  t5062 = t3473*t2473;
  t5025 = -1.*t1632*t3473;
  t5031 = -1.*t1361*t4259;
  t4999 = -1.*t4259*t1992;
  t5003 = -1.*t3473*t2473;
  t4974 = t2415*t3473;
  t4976 = t1871*t4259;
  t5093 = -1.*t4504*t1871;
  t5094 = -1.*t2597*t3473;
  t5499 = t1642*t3532;
  t5500 = t1666*t3550;
  t5501 = t5499 + t5500 + t4699;
  t5081 = t1361*t4504;
  t5118 = t2674*t3473;
  t5121 = t4504*t1992;
  t5537 = -1.*t1642*t3532;
  t5538 = -1.*t1666*t3550;
  t5540 = t5537 + t5538 + t4802;
  t5107 = -1.*t1361*t4504;
  t5570 = -1.*t3532*t2056;
  t5571 = -1.*t3550*t2105;
  t5576 = t5570 + t5571 + t4775;
  t5616 = t1945*t3532;
  t5617 = t1957*t3550;
  t5618 = t5616 + t5617 + t4756;
  t5178 = -1.*t2674*t3473;
  t5179 = -1.*t4504*t1992;
  t5164 = t4504*t1871;
  t5166 = t2597*t3473;
  t5433 = -1.*t1945*t3532;
  t5438 = -1.*t1957*t3550;
  t5445 = t5433 + t5438 + t4726;
  t5507 = t3532*t2056;
  t5508 = t3550*t2105;
  t5511 = t5507 + t5508 + t4824;
  t5825 = t3408 + t3409 + t3410 + t3414 + t3427 + t3444 + t3470;
  t6088 = t1433*t3509;
  t6094 = t1361*t5825;
  t6095 = t1632*t3526;
  t6097 = t6088 + t6094 + t6095;
  t5873 = -1.*t1433*t3509;
  t5875 = -1.*t1361*t5825;
  t5878 = -1.*t1632*t3526;
  t5882 = t5873 + t5875 + t5878;
  t5956 = -1.*t3509*t2030;
  t5959 = -1.*t5825*t1992;
  t5961 = -1.*t3526*t2044;
  t5965 = t5956 + t5959 + t5961;
  t5984 = t1921*t3509;
  t5985 = t1871*t5825;
  t5986 = t1939*t3526;
  t5987 = t5984 + t5985 + t5986;
  t6011 = -1.*t1921*t3509;
  t6018 = -1.*t1871*t5825;
  t6019 = -1.*t1939*t3526;
  t6025 = t6011 + t6018 + t6019;
  t5817 = t3509*t2030;
  t5830 = t5825*t1992;
  t5833 = t3526*t2044;
  t5834 = t5817 + t5830 + t5833;
  t6303 = t3426*t2662;
  t6307 = t1976*t4439;
  t6311 = t2563*t3442;
  t6319 = t4431*t1983;
  t6324 = t2670*t3464;
  t6329 = t4447*t1987;
  t6335 = t6303 + t6307 + t6311 + t6319 + t6324 + t6329;
  t6357 = -1.*t1294*t4439;
  t6365 = -1.*t1337*t4447;
  t6370 = t6357 + t6365;
  t6340 = -1.*t1294*t3426;
  t6341 = -1.*t1337*t3464;
  t6346 = t6340 + t6341;
  t6534 = t1805*t4431;
  t6546 = t1832*t4439;
  t6547 = t3426*t2594;
  t6553 = t2579*t3442;
  t6557 = t4447*t1863;
  t6599 = t2563*t3464;
  t6600 = t6534 + t6546 + t6547 + t6553 + t6557 + t6599;
  t6501 = -1.*t3426*t2662;
  t6502 = -1.*t1976*t4439;
  t6513 = -1.*t2563*t3442;
  t6514 = -1.*t4431*t1983;
  t6515 = -1.*t2670*t3464;
  t6516 = -1.*t4447*t1987;
  t6519 = t6501 + t6502 + t6513 + t6514 + t6515 + t6516;
  t6455 = t3426*t1832;
  t6463 = t1805*t3442;
  t6472 = t1863*t3464;
  t6478 = t6455 + t6463 + t6472;
  t6434 = -1.*t1976*t3426;
  t6438 = -1.*t3442*t1983;
  t6441 = -1.*t3464*t1987;
  t6442 = t6434 + t6438 + t6441;
  t6671 = -1.*t1805*t4431;
  t6678 = -1.*t1832*t4439;
  t6683 = -1.*t3426*t2594;
  t6701 = -1.*t2579*t3442;
  t6706 = -1.*t4447*t1863;
  t6714 = -1.*t2563*t3464;
  t6719 = t6671 + t6678 + t6683 + t6701 + t6706 + t6714;
  t6740 = t1294*t4439;
  t6741 = t1337*t4447;
  t6743 = t6740 + t6741;
  t6727 = t1294*t3426;
  t6732 = t1337*t3464;
  t6733 = t6727 + t6732;
  t6822 = -1.*t3426*t1832;
  t6835 = -1.*t1805*t3442;
  t6858 = -1.*t1863*t3464;
  t6868 = t6822 + t6835 + t6858;
  t6896 = t1976*t3426;
  t6899 = t3442*t1983;
  t6901 = t3464*t1987;
  t6921 = t6896 + t6899 + t6901;
  p_output1[0]=t2137*var2[0] + t1966*var2[1] + t1706*var2[2];
  p_output1[1]=t1391*t2215*var2[0] + t1391*t2191*var2[1] + t1391*t2164*var2[2];
  p_output1[2]=t1391*t2313*var2[0] + t1391*t2288*var2[1] + t1391*t2255*var2[2];
  p_output1[3]=t2540*var2[0] + t2468*var2[1] + t2409*var2[2];
  p_output1[4]=t2770*var2[0] + t2650*var2[1];
  p_output1[5]=t2800;
  p_output1[6]=t2811;
  p_output1[7]=t2820;
  p_output1[8]=(-1.*t2825*t2888 - 1.*t2838*t2892)*var2[0] + (-1.*t2825*t2847 - 1.*t2838*t2852)*var2[1] + (-1.*t2825*t2836 - 1.*t1706*t2838)*var2[2];
  p_output1[9]=-1.*t2825*t2959*var2[0] - 1.*t2825*t2945*var2[1] - 1.*t2825*t2923*var2[2];
  p_output1[10]=(t1406*t2215*t2825 + t2838*t3010)*var2[0] + (t1406*t2191*t2825 + t2838*t2993)*var2[1] + (t1406*t2164*t2825 + t1678*t2838)*var2[2];
  p_output1[11]=(t1406*t2313*t2825 + t2838*t3057)*var2[0] + (t1406*t2288*t2825 + t2838*t3043)*var2[1] + (t1406*t2255*t2825 + t2838*t3023)*var2[2];
  p_output1[12]=(t2838*t3128 - 1.*t2825*t3136)*var2[0] + (t2838*t3100 - 1.*t2825*t3111)*var2[1] + (t2838*t3073 - 1.*t2825*t3083)*var2[2];
  p_output1[13]=(t2838*t3188 - 1.*t2825*t3195)*var2[0] + (t2838*t3161 - 1.*t2825*t3171)*var2[1];
  p_output1[14]=0. + t3211 + t3212;
  p_output1[15]=0. + t3217 + t3218;
  p_output1[16]=t3223;
  p_output1[17]=(t3211 + t3212)*var2[0] + (t3217 + t3218)*var2[1] + t3223*var2[2];
  p_output1[18]=t2838*t2959*var2[0] + t2838*t2945*var2[1] + t2838*t2923*var2[2];
  p_output1[19]=(-1.*t1406*t2215*t2838 + t2825*t3010)*var2[0] + (-1.*t1406*t2191*t2838 + t2825*t2993)*var2[1] + (t1678*t2825 - 1.*t1406*t2164*t2838)*var2[2];
  p_output1[20]=(-1.*t1406*t2313*t2838 + t2825*t3057)*var2[0] + (-1.*t1406*t2288*t2838 + t2825*t3043)*var2[1] + (-1.*t1406*t2255*t2838 + t2825*t3023)*var2[2];
  p_output1[21]=(t2825*t3128 + t2838*t3136)*var2[0] + (t2825*t3100 + t2838*t3111)*var2[1] + (t2825*t3073 + t2838*t3083)*var2[2];
  p_output1[22]=(t2825*t3188 + t2838*t3195)*var2[0] + (t2825*t3161 + t2838*t3171)*var2[1];
  p_output1[23]=0. + t2825*t2888 + t2838*t2892;
  p_output1[24]=0. + t2825*t2847 + t2838*t2852;
  p_output1[25]=t2825*t2836 + t1706*t2838;
  p_output1[26]=(t2811*(t1706*t3559 + t1706*t3567 + t2820*t3578 + t2923*t3589) + t2820*(-1.*t2852*t3559 - 1.*t1966*t3567 - 1.*t2811*t3578 - 1.*t2945*t3589) + t1966*t3614 + t1706*t3655)*var2[0] + (t2800*(-1.*t1706*t3559 - 1.*t1706*t3567 - 1.*t2820*t3578 - 1.*t2923*t3589) + t2820*(t2892*t3559 + t2137*t3567 + t2800*t3578 + t2959*t3589) + t2137*t3752 + t1706*t3781)*var2[1] + (t2800*(t2852*t3559 + t1966*t3567 + t2811*t3578 + t2945*t3589) + t2811*(-1.*t2892*t3559 - 1.*t2137*t3567 - 1.*t2800*t3578 - 1.*t2959*t3589) + t2137*t3688 + t1966*t3721)*var2[2];
  p_output1[27]=(t1391*t2191*t3614 + t1391*t2164*t3655 + t2811*(t1391*t2164*t3567 - 1.*t1406*t2164*t3589 + t3793 + t3796 - 1.*t1406*t1706*t3804 + t1391*t2820*t3804) + t2820*(-1.*t1391*t2191*t3567 + t1406*t2191*t3589 - 1.*t1391*t2811*t3804 + t1406*t2852*t3804 + t3816 + t3818))*var2[0] + (t1391*t2215*t3752 + t1391*t2164*t3781 + t2800*(-1.*t1391*t2164*t3567 + t1406*t2164*t3589 + t1406*t1706*t3804 - 1.*t1391*t2820*t3804 + t3897 + t3900) + t2820*(t1391*t2215*t3567 - 1.*t1406*t2215*t3589 + t1391*t2800*t3804 - 1.*t1406*t2892*t3804 + t3920 + t3922))*var2[1] + (t1391*t2215*t3688 + t1391*t2191*t3721 + t2800*(t1391*t2191*t3567 - 1.*t1406*t2191*t3589 + t1391*t2811*t3804 - 1.*t1406*t2852*t3804 + t3843 + t3844) + t2811*(-1.*t1391*t2215*t3567 + t1406*t2215*t3589 - 1.*t1391*t2800*t3804 + t1406*t2892*t3804 + t3865 + t3866))*var2[2];
  p_output1[28]=(t1391*t2288*t3614 + t1391*t2255*t3655 + t2811*(t1391*t2255*t3567 - 1.*t1406*t2255*t3589 + t3962 + t4001 - 1.*t1406*t1706*t4017 + t1391*t2820*t4017) + t2820*(-1.*t1391*t2288*t3567 + t1406*t2288*t3589 - 1.*t1391*t2811*t4017 + t1406*t2852*t4017 + t4044 + t4046))*var2[0] + (t1391*t2313*t3752 + t1391*t2255*t3781 + t2800*(-1.*t1391*t2255*t3567 + t1406*t2255*t3589 + t1406*t1706*t4017 - 1.*t1391*t2820*t4017 + t4145 + t4147) + t2820*(t1391*t2313*t3567 - 1.*t1406*t2313*t3589 + t1391*t2800*t4017 - 1.*t1406*t2892*t4017 + t4169 + t4171))*var2[1] + (t1391*t2313*t3688 + t1391*t2288*t3721 + t2800*(t1391*t2288*t3567 - 1.*t1406*t2288*t3589 + t1391*t2811*t4017 - 1.*t1406*t2852*t4017 + t4080 + t4081) + t2811*(-1.*t1391*t2313*t3567 + t1406*t2313*t3589 - 1.*t1391*t2800*t4017 + t1406*t2892*t4017 + t4106 + t4116))*var2[2];
  p_output1[29]=(t2468*t3614 + t2409*t3655 + t2811*(t2409*t3567 + t3083*t3589 + t4196 + t4249 + t2820*t4278 + t1706*t4286) + t2820*(-1.*t2468*t3567 - 1.*t3111*t3589 - 1.*t2811*t4278 - 1.*t2852*t4286 + t4296 + t4297))*var2[0] + (t2540*t3752 + t2409*t3781 + t2800*(-1.*t2409*t3567 - 1.*t3083*t3589 - 1.*t2820*t4278 - 1.*t1706*t4286 + t4388 + t4389) + t2820*(t2540*t3567 + t3136*t3589 + t2800*t4278 + t2892*t4286 + t4404 + t4405))*var2[1] + (t2540*t3688 + t2468*t3721 + t2800*(t2468*t3567 + t3111*t3589 + t2811*t4278 + t2852*t4286 + t4323 + t4324) + t2811*(-1.*t2540*t3567 - 1.*t3136*t3589 - 1.*t2800*t4278 - 1.*t2892*t4286 + t4341 + t4342))*var2[2];
  p_output1[30]=(t2650*t3614 + t2811*(t4490 + t2820*t4516 + t1706*t4523) + t2820*(-1.*t2650*t3567 - 1.*t3171*t3589 - 1.*t2811*t4516 - 1.*t2852*t4523 + t4531 + t4532))*var2[0] + (t2770*t3752 + t2800*(-1.*t2820*t4516 - 1.*t1706*t4523 + t4548) + t2820*(t2770*t3567 + t3195*t3589 + t2800*t4516 + t2892*t4523 + t4559 + t4569))*var2[1] + (t2770*t3688 + t2650*t3721 + t2800*(t2650*t3567 + t3171*t3589 + t2811*t4516 + t2852*t4523 + t4589 + t4598) + t2811*(-1.*t2770*t3567 - 1.*t3195*t3589 - 1.*t2800*t4516 - 1.*t2892*t4523 + t4631 + t4632))*var2[2];
  p_output1[31]=t2811*t3614 + t2820*t3655;
  p_output1[32]=t2800*t3752 + t2820*t3781;
  p_output1[33]=t2800*t3688 + t2811*t3721;
  p_output1[34]=(t2847*(t2164*t3557 + t3793 + t3796 + t1678*t3804) + t2836*(-1.*t2191*t3557 - 1.*t1963*t3804 + t3816 + t3818) + t2993*t4703 + t1678*t4734)*var2[0] + (t2888*(-1.*t2164*t3557 - 1.*t1678*t3804 + t3897 + t3900) + t2836*(t2215*t3557 + t2111*t3804 + t3920 + t3922) + t3010*t4806 + t1678*t4837)*var2[1] + (t2888*(t2191*t3557 + t1963*t3804 + t3843 + t3844) + t2847*(-1.*t2215*t3557 - 1.*t2111*t3804 + t3865 + t3866) + t3010*t4762 + t2993*t4782)*var2[2];
  p_output1[35]=(t2847*(t2255*t3557 + t3962 + t4001 + t1678*t4017) + t2836*(-1.*t2288*t3557 - 1.*t1963*t4017 + t4044 + t4046) + t3043*t4703 + t3023*t4734)*var2[0] + (t2888*(-1.*t2255*t3557 - 1.*t1678*t4017 + t4145 + t4147) + t2836*(t2313*t3557 + t2111*t4017 + t4169 + t4171) + t3057*t4806 + t3023*t4837)*var2[1] + (t2888*(t2288*t3557 + t1963*t4017 + t4080 + t4081) + t2847*(-1.*t2313*t3557 - 1.*t2111*t4017 + t4106 + t4116) + t3057*t4762 + t3043*t4782)*var2[2];
  p_output1[36]=(t3100*t4703 + t3073*t4734 + t2847*(t2400*t3557 + t4196 + t4249 + t1678*t4271 + t4939 + t4940) + t2836*(-1.*t2465*t3557 - 1.*t1963*t4271 + t4296 + t4297 + t4951 + t4953))*var2[0] + (t3128*t4806 + t3073*t4837 + t2888*(-1.*t2400*t3557 - 1.*t1678*t4271 + t4388 + t4389 + t5025 + t5031) + t2836*(t2533*t3557 + t2111*t4271 + t4404 + t4405 + t5054 + t5062))*var2[1] + (t3128*t4762 + t3100*t4782 + t2888*(t2465*t3557 + t1963*t4271 + t4323 + t4324 + t4974 + t4976) + t2847*(-1.*t2533*t3557 - 1.*t2111*t4271 + t4341 + t4342 + t4999 + t5003))*var2[2];
  p_output1[37]=(t3161*t4703 + t2847*(t4490 + t1678*t4510 + t5081) + t2836*(-1.*t2644*t3557 - 1.*t1963*t4510 + t4531 + t4532 + t5093 + t5094))*var2[0] + (t3188*t4806 + t2888*(-1.*t1678*t4510 + t4548 + t5107) + t2836*(t2761*t3557 + t2111*t4510 + t4559 + t4569 + t5118 + t5121))*var2[1] + (t3188*t4762 + t3161*t4782 + t2888*(t2644*t3557 + t1963*t4510 + t4589 + t4598 + t5164 + t5166) + t2847*(-1.*t2761*t3557 - 1.*t2111*t4510 + t4631 + t4632 + t5178 + t5179))*var2[2];
  p_output1[38]=t2847*t4703 + t2836*t4734;
  p_output1[39]=t2888*t4806 + t2836*t4837;
  p_output1[40]=t2888*t4762 + t2847*t4782;
  p_output1[41]=(t1871*(t2237*t3532 + t1642*t3550 + t1666*t3975 + t1642*t3995) + t1361*(-1.*t2279*t3532 - 1.*t2285*t3550 - 1.*t1957*t3975 - 1.*t1945*t3995))*var2[0] + (t1992*(-1.*t2237*t3532 - 1.*t1642*t3550 - 1.*t1666*t3975 - 1.*t1642*t3995) + t1361*(t2298*t3532 + t2308*t3550 + t2105*t3975 + t2056*t3995))*var2[1] + (t1992*(t2279*t3532 + t2285*t3550 + t1957*t3975 + t1945*t3995) + t1871*(-1.*t2298*t3532 - 1.*t2308*t3550 - 1.*t2105*t3975 - 1.*t2056*t3995))*var2[2];
  p_output1[42]=(t1871*(t2368*t3532 + t2390*t3550 + t1666*t4237 + t1642*t4244 + t4939 + t4940) + t1361*(-1.*t2444*t3532 - 1.*t2452*t3550 - 1.*t1957*t4237 - 1.*t1945*t4244 + t4951 + t4953) + t1632*t5445 + t2415*t5501)*var2[0] + (t1992*(-1.*t2368*t3532 - 1.*t2390*t3550 - 1.*t1666*t4237 - 1.*t1642*t4244 + t5025 + t5031) + t1361*(t2517*t3532 + t2530*t3550 + t2105*t4237 + t2056*t4244 + t5054 + t5062) + t1632*t5511 + t2473*t5540)*var2[1] + (t1992*(t2444*t3532 + t2452*t3550 + t1957*t4237 + t1945*t4244 + t4974 + t4976) + t1871*(-1.*t2517*t3532 - 1.*t2530*t3550 - 1.*t2105*t4237 - 1.*t2056*t4244 + t4999 + t5003) + t2415*t5576 + t2473*t5618)*var2[2];
  p_output1[43]=(t1871*(t1666*t4472 + t1642*t4483 + t5081) + t1361*(-1.*t2624*t3532 - 1.*t2639*t3550 - 1.*t1957*t4472 - 1.*t1945*t4483 + t5093 + t5094) + t2597*t5501)*var2[0] + (t1992*(-1.*t1666*t4472 - 1.*t1642*t4483 + t5107) + t1361*(t2734*t3532 + t2749*t3550 + t2105*t4472 + t2056*t4483 + t5118 + t5121) + t2674*t5540)*var2[1] + (t1992*(t2624*t3532 + t2639*t3550 + t1957*t4472 + t1945*t4483 + t5164 + t5166) + t1871*(-1.*t2734*t3532 - 1.*t2749*t3550 - 1.*t2105*t4472 - 1.*t2056*t4483 + t5178 + t5179) + t2597*t5576 + t2674*t5618)*var2[2];
  p_output1[44]=t1361*t5445 + t1871*t5501;
  p_output1[45]=t1361*t5511 + t1992*t5540;
  p_output1[46]=t1871*t5576 + t1992*t5618;
  p_output1[47]=(-0.15121*t2487 - 0.15121*t2498 + t1871*(t2358*t3509 + t2348*t3526 + t1632*t4216 + t1433*t4235 + t4940 + t1632*t5825) + t1361*(-1.*t2439*t3509 - 1.*t2425*t3526 - 1.*t1939*t4216 - 1.*t1921*t4235 + t4953 - 1.*t2415*t5825) + t1632*t6025 + t2415*t6097)*var2[0] + (-0.15121*t2425 - 0.15121*t2439 + t1992*(-1.*t2358*t3509 - 1.*t2348*t3526 - 1.*t1632*t4216 - 1.*t1433*t4235 + t5031 - 1.*t1632*t5825) + t1361*(t2498*t3509 + t2487*t3526 + t2044*t4216 + t2030*t4235 + t5054 + t2473*t5825) + t1632*t5834 + t2473*t5882)*var2[1] + (-0.15121*t2348 - 0.15121*t2358 + t1992*(t2439*t3509 + t2425*t3526 + t1939*t4216 + t1921*t4235 + t4976 + t2415*t5825) + t1871*(-1.*t2498*t3509 - 1.*t2487*t3526 - 1.*t2044*t4216 - 1.*t2030*t4235 + t4999 - 1.*t2473*t5825) + t2415*t5965 + t2473*t5987)*var2[2];
  p_output1[48]=(-0.15121*t2702 - 0.15121*t2725 + t1871*(t1433*t4451 + t1632*t4463 + t5081) + t1361*(-1.*t2610*t3509 - 1.*t2621*t3526 - 1.*t1921*t4451 - 1.*t1939*t4463 + t5093 - 1.*t2597*t5825) + t2597*t6097)*var2[0] + (-0.15121*t2610 - 0.15121*t2621 + t1992*(-1.*t1433*t4451 - 1.*t1632*t4463 + t5107) + t1361*(t2702*t3509 + t2725*t3526 + t2030*t4451 + t2044*t4463 + t5121 + t2674*t5825) + t2674*t5882)*var2[1] + (t1992*(t2610*t3509 + t2621*t3526 + t1921*t4451 + t1939*t4463 + t5164 + t2597*t5825) + t1871*(-1.*t2702*t3509 - 1.*t2725*t3526 - 1.*t2030*t4451 - 1.*t2044*t4463 + t5179 - 1.*t2674*t5825) + t2597*t5965 + t2674*t5987)*var2[2];
  p_output1[49]=-0.15121*t2030 - 0.15121*t2044 + t1361*t6025 + t1871*t6097;
  p_output1[50]=-0.15121*t1921 - 0.15121*t1939 + t1361*t5834 + t1992*t5882;
  p_output1[51]=-0.15121*t1433 - 0.15121*t1632 + t1871*t5965 + t1992*t5987;
  p_output1[52]=(-0.038749*t2563 + 1.e-6*t2662 - 0.28121*t2670 - 1.*t1294*t6719 - 1.*t2594*t6733 - 1.*t1832*t6743 + 4.e-6*(-1.*t1337*t6719 - 1.*t2563*t6733 - 1.*t1863*t6743))*var2[0] + (-0.28121*t2563 - 0.038749*t2579 + 1.e-6*t2594 - 1.*t1294*t6335 - 1.*t2662*t6346 - 1.*t1976*t6370 + 4.e-6*(-1.*t1337*t6335 - 1.*t2670*t6346 - 1.*t1987*t6370))*var2[1] + (-1.*t2594*t6442 - 1.*t2662*t6478 - 1.*t1832*t6519 - 1.*t1976*t6600 + 4.e-6*(-1.*t2563*t6442 - 1.*t2670*t6478 - 1.*t1863*t6519 - 1.*t1987*t6600))*var2[2];
  p_output1[53]=1.e-6*t1976 - 0.038749*t1983 - 0.28121*t1987 - 1.*t1832*t6733 - 1.*t1294*t6868 + 4.e-6*(-1.*t1863*t6733 - 1.*t1337*t6868);
  p_output1[54]=-0.038749*t1805 + 1.e-6*t1832 - 0.28121*t1863 - 1.*t1976*t6346 - 1.*t1294*t6921 + 4.e-6*(-1.*t1987*t6346 - 1.*t1337*t6921);
  p_output1[55]=1.e-6*t1294 - 0.28121*t1337 - 1.*t1832*t6442 - 1.*t1976*t6478 + 4.e-6*(-1.*t1863*t6442 - 1.*t1987*t6478);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_ParallelStance1.hh"

namespace ParallelStance1
{

void J_fFrFoot_vec_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
