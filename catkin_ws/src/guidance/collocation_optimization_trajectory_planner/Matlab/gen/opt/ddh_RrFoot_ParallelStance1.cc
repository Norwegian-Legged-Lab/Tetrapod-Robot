/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:29:01 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t509;
  double t511;
  double t518;
  double t424;
  double t439;
  double t440;
  double t447;
  double t592;
  double t596;
  double t536;
  double t567;
  double t610;
  double t617;
  double t665;
  double t765;
  double t777;
  double t789;
  double t793;
  double t814;
  double t821;
  double t838;
  double t444;
  double t876;
  double t898;
  double t899;
  double t905;
  double t909;
  double t741;
  double t1164;
  double t1171;
  double t1005;
  double t1110;
  double t1009;
  double t1011;
  double t1253;
  double t1014;
  double t1017;
  double t936;
  double t950;
  double t462;
  double t1283;
  double t1118;
  double t1189;
  double t1285;
  double t1288;
  double t1341;
  double t1345;
  double t1358;
  double t757;
  double t759;
  double t1396;
  double t1398;
  double t866;
  double t867;
  double t1433;
  double t1436;
  double t468;
  double t1443;
  double t1451;
  double t1473;
  double t1058;
  double t1525;
  double t1532;
  double t1535;
  double t1537;
  double t1544;
  double t1546;
  double t1551;
  double t1563;
  double t1564;
  double t1570;
  double t1582;
  double t1583;
  double t1584;
  double t1587;
  double t1619;
  double t1635;
  double t1648;
  double t1680;
  double t1689;
  double t1701;
  double t1704;
  double t1724;
  double t1751;
  double t1765;
  double t1772;
  double t1775;
  double t1776;
  double t1791;
  double t1794;
  double t1802;
  double t1803;
  double t1808;
  double t1228;
  double t1236;
  double t1104;
  double t1337;
  double t1517;
  double t1981;
  double t2004;
  double t2045;
  double t2049;
  double t2053;
  double t2061;
  double t1467;
  double t1469;
  double t1483;
  double t1499;
  double t1521;
  double t1523;
  double t1579;
  double t1739;
  double t1813;
  double t1819;
  double t1106;
  double t1146;
  double t1196;
  double t1197;
  double t1255;
  double t1278;
  double t1291;
  double t1299;
  double t1347;
  double t1360;
  double t1375;
  double t1905;
  double t1916;
  double t1936;
  double t1957;
  double t2007;
  double t2009;
  double t2017;
  double t2018;
  double t2032;
  double t2035;
  double t2062;
  double t2070;
  double t2073;
  double t2077;
  double t2080;
  double t2092;
  double t2107;
  double t2108;
  double t2110;
  double t2114;
  double t1219;
  double t1308;
  double t1384;
  double t1387;
  double t704;
  double t849;
  double t921;
  double t923;
  double t926;
  double t971;
  double t1012;
  double t1030;
  double t1032;
  double t1053;
  double t1428;
  double t1438;
  double t1455;
  double t1466;
  double t1820;
  double t1842;
  double t1890;
  double t1891;
  double t1904;
  double t2044;
  double t2118;
  double t2119;
  double t2133;
  double t2135;
  double t2139;
  double t2154;
  double t2179;
  double t2188;
  double t2194;
  double t2196;
  double t2224;
  double t2225;
  double t2239;
  double t2250;
  double t2256;
  double t2260;
  double t2262;
  double t2327;
  double t2354;
  double t2360;
  double t2364;
  double t2368;
  double t2371;
  double t2377;
  double t2387;
  double t2286;
  double t2292;
  double t2299;
  double t2313;
  double t2316;
  double t2365;
  double t2390;
  double t2403;
  double t2405;
  double t2413;
  double t2419;
  double t2420;
  double t2426;
  double t2429;
  double t2432;
  double t2443;
  double t187;
  double t152;
  double t153;
  double t158;
  double t169;
  double t211;
  double t2476;
  double t2493;
  double t2494;
  double t2500;
  double t2524;
  double t2528;
  double t2545;
  double t2457;
  double t2467;
  double t2468;
  double t2508;
  double t2515;
  double t2522;
  double t2523;
  double t2546;
  double t2551;
  double t2556;
  double t2569;
  double t2573;
  double t2574;
  double t2579;
  double t2580;
  double t2582;
  double t2585;
  double t2591;
  double t2593;
  double t2597;
  double t2599;
  double t118;
  double t129;
  double t2651;
  double t2616;
  double t2661;
  double t2675;
  double t2677;
  double t2693;
  double t2705;
  double t2718;
  double t2839;
  double t2846;
  double t2868;
  double t2873;
  double t2891;
  double t2893;
  double t2894;
  double t2906;
  double t2927;
  double t2933;
  double t2937;
  double t2938;
  double t2940;
  double t2943;
  double t2945;
  double t2962;
  double t2740;
  double t2747;
  double t2751;
  double t2754;
  double t2770;
  double t2771;
  double t2775;
  double t2779;
  double t2814;
  double t2820;
  double t2821;
  double t2835;
  double t3060;
  double t3062;
  double t3097;
  double t3098;
  double t3101;
  double t3111;
  double t3112;
  double t3114;
  double t3126;
  double t3128;
  double t3129;
  double t3150;
  double t3153;
  double t3161;
  double t3231;
  double t3233;
  double t3235;
  double t3205;
  double t3213;
  double t3214;
  double t3238;
  double t3239;
  double t3242;
  double t3170;
  double t3171;
  double t3176;
  double t3179;
  double t3186;
  double t3195;
  double t3219;
  double t3245;
  double t3247;
  double t3249;
  double t3266;
  double t3267;
  double t3272;
  double t3307;
  double t3308;
  double t3312;
  double t3313;
  double t3315;
  double t3367;
  double t3379;
  double t3380;
  double t3382;
  double t3386;
  double t3418;
  double t3360;
  double t3362;
  double t3366;
  double t3450;
  double t3456;
  double t3460;
  double t3427;
  double t3438;
  double t3442;
  double t3443;
  double t3470;
  double t3475;
  double t3476;
  double t3479;
  double t3484;
  double t3485;
  double t3489;
  double t3491;
  double t3497;
  double t3500;
  double t3502;
  double t3599;
  double t3608;
  double t3513;
  double t3526;
  double t3538;
  double t3545;
  double t3670;
  double t3671;
  double t3672;
  double t3674;
  double t3675;
  double t3677;
  double t3683;
  double t3686;
  double t3642;
  double t3646;
  double t3648;
  double t3578;
  double t3580;
  double t3583;
  double t3735;
  double t3740;
  double t3823;
  double t3837;
  double t3839;
  double t3761;
  double t3762;
  double t3764;
  double t3799;
  double t3800;
  double t3771;
  double t3821;
  double t3774;
  double t3779;
  double t3783;
  double t3872;
  double t3873;
  double t3883;
  double t3858;
  double t3893;
  double t3997;
  double t3999;
  double t4033;
  double t4035;
  double t4037;
  double t4032;
  double t4041;
  double t4020;
  double t4029;
  double t4064;
  double t4069;
  double t4059;
  double t4074;
  double t4231;
  double t4232;
  double t4241;
  double t4274;
  double t4275;
  double t4281;
  double t4408;
  double t4396;
  double t4397;
  double t4398;
  double t4399;
  double t4400;
  double t4414;
  double t4416;
  double t4430;
  double t4432;
  double t4438;
  double t4443;
  double t4465;
  double t4518;
  double t4533;
  double t4486;
  double t4498;
  double t4501;
  double t4466;
  double t4556;
  double t4564;
  double t4565;
  double t4566;
  double t4567;
  double t4571;
  double t4573;
  double t4575;
  double t4577;
  double t4578;
  double t4586;
  double t4598;
  double t4599;
  double t4600;
  double t4612;
  double t4621;
  double t4635;
  double t4637;
  double t4643;
  double t4645;
  double t4648;
  double t4670;
  double t4672;
  double t4673;
  double t4748;
  double t4750;
  double t4753;
  double t4754;
  double t4762;
  double t4764;
  double t4767;
  double t4471;
  double t4473;
  double t4480;
  double t4504;
  double t4510;
  double t4511;
  double t4528;
  double t4536;
  double t4537;
  double t4551;
  double t4482;
  double t4514;
  double t4552;
  double t4553;
  double t4576;
  double t4627;
  double t4690;
  double t4702;
  double t4715;
  double t4719;
  double t4720;
  double t4725;
  double t4733;
  double t4737;
  double t4738;
  double t4740;
  double t4805;
  double t4806;
  double t4816;
  double t4821;
  double t4934;
  double t4936;
  double t4941;
  double t4946;
  double t4947;
  double t4950;
  double t4953;
  double t4959;
  double t4965;
  double t4972;
  double t4973;
  double t4979;
  double t4984;
  double t4986;
  double t4743;
  double t4829;
  double t4751;
  double t4760;
  double t4770;
  double t4772;
  double t4780;
  double t4784;
  double t4790;
  double t4793;
  double t4868;
  double t4883;
  double t4849;
  double t4853;
  double t4857;
  double t4861;
  double t4836;
  double t4837;
  double t4842;
  double t4845;
  double t5098;
  double t5105;
  double t5107;
  double t5110;
  double t5114;
  double t5115;
  double t4407;
  double t4419;
  double t4445;
  double t4446;
  double t4453;
  double t4457;
  double t4461;
  double t4463;
  double t5207;
  double t5214;
  double t5215;
  double t5195;
  double t5199;
  double t5202;
  double t5179;
  double t5182;
  double t5187;
  double t5190;
  double t5204;
  double t5223;
  double t5225;
  double t5240;
  double t5247;
  double t5257;
  double t5270;
  double t5278;
  double t5289;
  double t5151;
  double t5153;
  double t5154;
  double t5163;
  double t5164;
  double t5165;
  double t5137;
  double t5140;
  double t5143;
  double t5124;
  double t5126;
  double t5133;
  double t5329;
  double t5332;
  double t5333;
  double t5336;
  double t5342;
  double t5346;
  double t5352;
  double t5354;
  double t5356;
  double t5371;
  double t5373;
  double t5374;
  double t5387;
  double t5389;
  double t5396;
  double t5358;
  double t5380;
  double t5364;
  double t5367;
  double t5368;
  double t5401;
  double t5409;
  double t5421;
  double t5423;
  double t5424;
  double t5433;
  double t5434;
  double t5442;
  double t5447;
  double t5451;
  double t5455;
  double t5462;
  double t5469;
  double t5470;
  double t5563;
  double t5565;
  double t5571;
  double t5573;
  double t5611;
  double t5621;
  double t5604;
  double t5605;
  double t5669;
  double t5706;
  double t5725;
  double t5737;
  double t5745;
  double t5748;
  double t5749;
  double t5751;
  double t5753;
  double t5763;
  double t5765;
  double t5766;
  double t5768;
  double t5671;
  double t5672;
  double t5673;
  double t5677;
  double t5679;
  double t5680;
  double t5681;
  double t5682;
  double t5687;
  double t5787;
  double t5788;
  double t5792;
  double t5793;
  double t5701;
  double t5705;
  double t5711;
  double t5712;
  double t5718;
  double t5726;
  double t5727;
  double t5739;
  double t5741;
  double t5771;
  double t5773;
  double t5775;
  double t5777;
  double t5742;
  double t5784;
  double t5696;
  double t5697;
  double t5698;
  double t5699;
  double t5644;
  double t5655;
  double t5665;
  double t5666;
  double t5817;
  double t5829;
  double t5878;
  double t5879;
  double t5880;
  double t5861;
  double t5865;
  double t5866;
  double t5804;
  double t5806;
  double t5808;
  double t5810;
  double t5819;
  double t5823;
  double t5825;
  double t5827;
  double t5556;
  double t5568;
  double t5589;
  double t5596;
  double t5607;
  double t5630;
  double t5631;
  double t5634;
  double t5942;
  double t5945;
  double t5952;
  double t5935;
  double t5938;
  double t5940;
  double t5925;
  double t5926;
  double t5927;
  double t5931;
  double t5941;
  double t5953;
  double t5956;
  double t5964;
  double t5969;
  double t5971;
  double t5975;
  double t5977;
  double t5980;
  double t5908;
  double t5911;
  double t5913;
  double t5899;
  double t5901;
  double t5905;
  double t5854;
  double t5855;
  double t5856;
  double t5849;
  double t5850;
  double t5851;
  double t6022;
  double t6023;
  double t6024;
  double t6054;
  double t6056;
  double t6063;
  double t6031;
  double t6039;
  double t6045;
  double t5997;
  double t6001;
  double t6003;
  double t6084;
  double t6087;
  double t6088;
  double t6025;
  double t6047;
  double t6005;
  double t6008;
  double t6010;
  double t6104;
  double t6105;
  double t6106;
  double t6082;
  double t6083;
  double t6117;
  double t6121;
  double t6122;
  double t6129;
  double t6135;
  double t6136;
  double t6099;
  double t6100;
  double t6101;
  double t6218;
  double t6222;
  double t6225;
  double t6226;
  double t6227;
  double t6228;
  double t6229;
  double t6233;
  double t6234;
  double t6239;
  double t6241;
  double t6242;
  double t6244;
  double t6266;
  double t6268;
  double t6270;
  double t6271;
  double t6277;
  double t6278;
  double t6280;
  double t6281;
  double t6251;
  double t6253;
  double t6254;
  double t6255;
  double t6257;
  double t6260;
  double t6272;
  double t6287;
  double t6288;
  double t6289;
  double t6291;
  double t6292;
  double t6296;
  double t6298;
  double t6299;
  double t6301;
  double t6303;
  double t6306;
  double t6307;
  double t6308;
  double t6309;
  double t6311;
  double t6314;
  double t6315;
  double t6318;
  double t6319;
  double t2612;
  double t215;
  double t2649;
  double t2660;
  double t6333;
  double t6342;
  double t6344;
  double t6355;
  double t6356;
  double t6357;
  double t2692;
  double t6376;
  double t6380;
  double t6382;
  double t6388;
  double t6389;
  double t6392;
  double t6403;
  double t6404;
  double t6407;
  double t6409;
  double t6418;
  double t6425;
  double t6427;
  double t6428;
  double t6429;
  double t2737;
  double t6365;
  double t6366;
  double t6368;
  double t6370;
  double t6372;
  double t6374;
  double t2769;
  double t2800;
  double t6482;
  double t6483;
  double t6484;
  double t6486;
  double t6487;
  double t6489;
  double t6492;
  double t6493;
  double t6494;
  double t6437;
  double t6438;
  double t6439;
  double t6440;
  double t6445;
  double t6446;
  double t6447;
  double t6448;
  double t6450;
  double t6456;
  double t6460;
  double t6461;
  double t6574;
  double t6577;
  double t6582;
  double t6585;
  double t6656;
  double t6663;
  double t6668;
  double t6672;
  double t4288;
  double t4292;
  double t4299;
  double t4341;
  double t4353;
  double t4359;
  double t6824;
  double t6826;
  double t6828;
  double t6829;
  double t6831;
  double t6833;
  double t6835;
  double t6840;
  double t6841;
  double t6844;
  double t6846;
  double t6847;
  double t6849;
  double t6854;
  double t6785;
  double t6790;
  double t6797;
  double t6800;
  double t5481;
  double t5482;
  double t5483;
  double t6939;
  double t6942;
  double t5192;
  double t5228;
  double t5229;
  double t6949;
  double t6951;
  double t5511;
  double t5513;
  double t5516;
  double t7015;
  double t7017;
  double t7024;
  double t7027;
  double t6110;
  double t6111;
  double t6113;
  double t7083;
  double t7095;
  double t5933;
  double t5957;
  double t5958;
  double t7101;
  double t7103;
  double t6164;
  double t6165;
  double t6166;
  double t7164;
  double t7165;
  double t7166;
  double t7167;
  double t7168;
  double t7169;
  double t7171;
  double t7172;
  double t7173;
  double t7174;
  double t7175;
  double t7176;
  double t7177;
  double t7193;
  double t7194;
  double t7195;
  double t7197;
  double t7201;
  double t7203;
  double t7204;
  double t7205;
  double t7180;
  double t7182;
  double t7184;
  double t7185;
  double t7188;
  double t7191;
  double t7200;
  double t7206;
  double t7207;
  double t7208;
  double t7210;
  double t7211;
  double t7213;
  double t7214;
  double t7215;
  double t7217;
  double t7218;
  double t7221;
  double t7223;
  double t7225;
  double t7227;
  double t7232;
  double t7233;
  double t7234;
  double t7235;
  double t7236;
  double t7239;
  double t7240;
  double t7241;
  double t7244;
  double t7245;
  double t7246;
  double t7263;
  double t7264;
  double t7265;
  double t7266;
  double t7267;
  double t7268;
  double t7270;
  double t7271;
  double t7275;
  double t7283;
  double t7284;
  double t7286;
  double t7289;
  double t7291;
  double t7292;
  double t7251;
  double t7252;
  double t7254;
  double t7258;
  double t7259;
  double t7261;
  double t7321;
  double t7322;
  double t7323;
  double t7324;
  double t7326;
  double t7327;
  double t7328;
  double t7330;
  double t7331;
  double t7296;
  double t7297;
  double t7298;
  double t7299;
  double t7301;
  double t7303;
  double t7306;
  double t7309;
  double t7315;
  double t7316;
  double t7317;
  double t7318;
  double t7401;
  double t7404;
  double t7408;
  double t7410;
  double t7480;
  double t7482;
  double t7486;
  double t7488;
  double t7603;
  double t7604;
  double t7606;
  double t7607;
  double t7608;
  double t7610;
  double t7614;
  double t7617;
  double t7618;
  double t7619;
  double t7620;
  double t7621;
  double t7623;
  double t7624;
  double t7571;
  double t7576;
  double t7581;
  double t7584;
  double t7688;
  double t7690;
  double t7703;
  double t7706;
  double t7757;
  double t7759;
  double t7769;
  double t7774;
  double t7810;
  double t7811;
  double t7820;
  double t7821;
  t509 = Cos(var1[17]);
  t511 = -1.*t509;
  t518 = 1. + t511;
  t424 = Cos(var1[16]);
  t439 = -1.*t424;
  t440 = 1. + t439;
  t447 = Sin(var1[16]);
  t592 = Sin(var1[17]);
  t596 = 4.e-6*t592;
  t536 = 1.000000000016*t518;
  t567 = -7.e-6*t518;
  t610 = t567 + t596;
  t617 = -7.e-6*t610;
  t665 = -1. + t536 + t617;
  t765 = 2.8e-11*t518;
  t777 = 4.e-6*t518;
  t789 = 7.e-6*t592;
  t793 = t777 + t789;
  t814 = -7.e-6*t793;
  t821 = -1.*t592;
  t838 = t765 + t814 + t821;
  t444 = -7.e-6*t440;
  t876 = -6.5e-11*t518;
  t898 = 1. + t876;
  t899 = -7.e-6*t898;
  t905 = 7.e-6*t518;
  t909 = t899 + t905 + t596;
  t741 = 4.e-6*t440;
  t1164 = -1. + t509;
  t1171 = 4.e-6*t1164;
  t1005 = -2.8e-11*t440;
  t1110 = -4.e-6*t592;
  t1009 = -1.*t447;
  t1011 = t1005 + t1009;
  t1253 = 1.000000000049*t518;
  t1014 = 4.e-6*t447;
  t1017 = t444 + t1014;
  t936 = -1.000000000016*t440;
  t950 = 1. + t936;
  t462 = -4.e-6*t447;
  t1283 = -7.e-6*t592;
  t1118 = t567 + t1110;
  t1189 = t1171 + t789;
  t1285 = -2.8e-11*t518;
  t1288 = t1285 + t592;
  t1341 = -1.000000000016*t518;
  t1345 = 1. + t1341;
  t1358 = t765 + t592;
  t757 = -7.e-6*t447;
  t759 = t741 + t757;
  t1396 = 4.e-6*t793;
  t1398 = -1. + t1253 + t1396;
  t866 = -6.5e-11*t440;
  t867 = 1. + t866;
  t1433 = 4.e-6*t898;
  t1436 = t1433 + t1171 + t789;
  t468 = t444 + t462;
  t1443 = 4.e-6*t610;
  t1451 = t765 + t1443 + t592;
  t1473 = 7.e-6*t440;
  t1058 = 7.e-6*t447;
  t1525 = 2.826290000000002e-7*var1[17];
  t1532 = -0.148715*t898;
  t1535 = -2.18904205e-16*t518;
  t1537 = t777 + t1283;
  t1544 = -0.038576*t1537;
  t1546 = -0.80315*t1118;
  t1551 = t905 + t596;
  t1563 = -0.5031510000080001*t1551;
  t1564 = -0.038575000014*t1189;
  t1570 = t1525 + t1532 + t1535 + t1544 + t1546 + t1563 + t1564;
  t1582 = 1.1305160000000008e-12*var1[17];
  t1583 = -1.000000000049*t518;
  t1584 = 1. + t1583;
  t1587 = -0.038576*t1584;
  t1619 = -0.03857500001589017*t518;
  t1635 = t765 + t821;
  t1648 = -0.5031510000080001*t1635;
  t1680 = t1171 + t1283;
  t1689 = -3.367757e-6*t1680;
  t1701 = -0.148715*t793;
  t1704 = -0.80315*t1288;
  t1724 = t1582 + t1587 + t1619 + t1648 + t1689 + t1701 + t1704;
  t1751 = -1.9784030000000015e-12*var1[17];
  t1765 = -0.80315*t1345;
  t1772 = -0.5031510000160505*t518;
  t1775 = t1285 + t821;
  t1776 = -0.038576*t1775;
  t1791 = t905 + t1110;
  t1794 = -3.367757e-6*t1791;
  t1802 = -0.148715*t610;
  t1803 = -0.038575000014*t1358;
  t1808 = t1751 + t1765 + t1772 + t1776 + t1794 + t1802 + t1803;
  t1228 = -1.000000000049*t440;
  t1236 = 1. + t1228;
  t1104 = t741 + t1058;
  t1337 = t1005 + t447;
  t1517 = 2.8e-11*t440;
  t1981 = -1. + t424;
  t2004 = 4.e-6*t1981;
  t2045 = t1236*t1398;
  t2049 = t1104*t1436;
  t2053 = t1337*t1451;
  t2061 = t2045 + t2049 + t2053;
  t1467 = -2.7726089999999997e-12*var1[16];
  t1469 = -0.2812110000084994*t440;
  t1483 = t1473 + t462;
  t1499 = -1.8134809999999998e-6*t1483;
  t1521 = t1517 + t447;
  t1523 = -0.038749000006999997*t1521;
  t1579 = t1017*t1570;
  t1739 = t1011*t1724;
  t1813 = t950*t1808;
  t1819 = t1467 + t1469 + t1499 + t1523 + t1579 + t1739 + t1813;
  t1106 = 6.5e-11*t518;
  t1146 = 7.e-6*t1118;
  t1196 = 4.e-6*t1189;
  t1197 = -1. + t1106 + t1146 + t1196;
  t1255 = -1. + t1253;
  t1278 = 4.e-6*t1255;
  t1291 = 7.e-6*t1288;
  t1299 = t1278 + t1171 + t1283 + t1291;
  t1347 = 7.e-6*t1345;
  t1360 = 4.e-6*t1358;
  t1375 = t1347 + t905 + t1110 + t1360;
  t1905 = 3.9608699999999997e-7*var1[16];
  t1916 = -1.1787626499999999e-16*t440;
  t1936 = t1473 + t1014;
  t1957 = -0.281211000004*t1936;
  t2007 = t2004 + t1058;
  t2009 = -0.038749000006999997*t2007;
  t2017 = t867*t1570;
  t2018 = t759*t1724;
  t2032 = t468*t1808;
  t2035 = t1905 + t1916 + t1957 + t2009 + t2017 + t2018 + t2032;
  t2062 = 1.5843479999999999e-12*var1[16];
  t2070 = -0.03874900000889869*t440;
  t2073 = t1517 + t1009;
  t2077 = -0.281211000004*t2073;
  t2080 = t2004 + t757;
  t2092 = -1.8134809999999998e-6*t2080;
  t2107 = t1104*t1570;
  t2108 = t1236*t1724;
  t2110 = t1337*t1808;
  t2114 = t2062 + t2070 + t2077 + t2092 + t2107 + t2108 + t2110;
  t1219 = t1104*t1197;
  t1308 = t1236*t1299;
  t1384 = t1337*t1375;
  t1387 = t1219 + t1308 + t1384;
  t704 = t468*t665;
  t849 = t759*t838;
  t921 = t867*t909;
  t923 = t704 + t849 + t921;
  t926 = 0.15121*t923;
  t971 = t950*t665;
  t1012 = t1011*t838;
  t1030 = t1017*t909;
  t1032 = t971 + t1012 + t1030;
  t1053 = -0.15121*t1032;
  t1428 = t1011*t1398;
  t1438 = t1017*t1436;
  t1455 = t950*t1451;
  t1466 = t1428 + t1438 + t1455;
  t1820 = -1.*t1466*t1819;
  t1842 = t759*t1398;
  t1890 = t867*t1436;
  t1891 = t468*t1451;
  t1904 = t1842 + t1890 + t1891;
  t2044 = -1.*t1904*t2035;
  t2118 = -1.*t2061*t2114;
  t2119 = t1820 + t2044 + t2118;
  t2133 = t1387*t2119;
  t2135 = t1017*t1197;
  t2139 = t1011*t1299;
  t2154 = t950*t1375;
  t2179 = t2135 + t2139 + t2154;
  t2188 = t1819*t2179;
  t2194 = t867*t1197;
  t2196 = t759*t1299;
  t2224 = t468*t1375;
  t2225 = t2194 + t2196 + t2224;
  t2239 = t2035*t2225;
  t2250 = t2114*t1387;
  t2256 = t2188 + t2239 + t2250;
  t2260 = t2061*t2256;
  t2262 = t926 + t1053 + t2133 + t2260;
  t2327 = -1.*t1570*t1436;
  t2354 = -1.*t1398*t1724;
  t2360 = -1.*t1451*t1808;
  t2364 = t2327 + t2354 + t2360;
  t2368 = t1570*t1197;
  t2371 = t1724*t1299;
  t2377 = t1808*t1375;
  t2387 = t2368 + t2371 + t2377;
  t2286 = -0.038749*t665;
  t2292 = 0.281211*t838;
  t2299 = 7.e-6*t898;
  t2313 = t2299 + t567 + t1110;
  t2316 = 1.e-6*t2313;
  t2365 = -1.*t1197*t2364;
  t2390 = -1.*t1436*t2387;
  t2403 = -1.*t1299*t2364;
  t2405 = -1.*t1398*t2387;
  t2413 = t2403 + t2405;
  t2419 = 4.e-6*t2413;
  t2420 = t1375*t2364;
  t2426 = t1451*t2387;
  t2429 = t2420 + t2426;
  t2432 = 7.e-6*t2429;
  t2443 = t2286 + t2292 + t2316 + t2365 + t2390 + t2419 + t2432;
  t187 = Sin(var1[15]);
  t152 = Cos(var1[15]);
  t153 = -1.*t152;
  t158 = 1. + t153;
  t169 = -0.15121*t158;
  t211 = -0.15121*t187;
  t2476 = 0.15121*t187;
  t2493 = t187*t1819;
  t2494 = t152*t2035;
  t2500 = t169 + t2476 + t2493 + t2494;
  t2524 = t152*t1819;
  t2528 = -1.*t187*t2035;
  t2545 = t169 + t211 + t2524 + t2528;
  t2457 = t187*t1466;
  t2467 = t152*t1904;
  t2468 = t2457 + t2467;
  t2508 = -1.*t2468*t2500;
  t2515 = t152*t1466;
  t2522 = -1.*t187*t1904;
  t2523 = t2515 + t2522;
  t2546 = -1.*t2523*t2545;
  t2551 = t2118 + t2508 + t2546;
  t2556 = t1387*t2551;
  t2569 = t187*t2179;
  t2573 = t152*t2225;
  t2574 = t2569 + t2573;
  t2579 = t2500*t2574;
  t2580 = t152*t2179;
  t2582 = -1.*t187*t2225;
  t2585 = t2580 + t2582;
  t2591 = t2545*t2585;
  t2593 = t2250 + t2579 + t2591;
  t2597 = t2061*t2593;
  t2599 = t2556 + t2597;
  t118 = Cos(var1[4]);
  t129 = Cos(var1[5]);
  t2651 = Sin(var1[5]);
  t2616 = Sin(var1[4]);
  t2661 = -1.*t118*t129*t187;
  t2675 = -1.*t152*t118*t2651;
  t2677 = t2661 + t2675;
  t2693 = t152*t118*t129;
  t2705 = -1.*t118*t187*t2651;
  t2718 = t2693 + t2705;
  t2839 = t1337*t665;
  t2846 = t1236*t838;
  t2868 = t1104*t909;
  t2873 = t2839 + t2846 + t2868;
  t2891 = t2873*t2616;
  t2893 = -1.*t187*t923;
  t2894 = t152*t1032;
  t2906 = t2893 + t2894;
  t2927 = t129*t2906;
  t2933 = t152*t923;
  t2937 = t187*t1032;
  t2938 = t2933 + t2937;
  t2940 = -1.*t2938*t2651;
  t2943 = t2927 + t2940;
  t2945 = t118*t2943;
  t2962 = t2891 + t2945;
  t2740 = t1337*t2616;
  t2747 = t468*t2677;
  t2751 = t950*t2718;
  t2754 = t2740 + t2747 + t2751;
  t2770 = t1236*t2616;
  t2771 = t759*t2677;
  t2775 = t1011*t2718;
  t2779 = t2770 + t2771 + t2775;
  t2814 = t1104*t2616;
  t2820 = t867*t2677;
  t2821 = t1017*t2718;
  t2835 = t2814 + t2820 + t2821;
  t3060 = Sin(var1[3]);
  t3062 = t129*t2938;
  t3097 = t2906*t2651;
  t3098 = t3062 + t3097;
  t3101 = t3060*t3098;
  t3111 = Cos(var1[3]);
  t3112 = t118*t2873;
  t3114 = -1.*t2616*t2943;
  t3126 = t3112 + t3114;
  t3128 = t3111*t3126;
  t3129 = t3101 + t3128;
  t3150 = t3111*t3098;
  t3153 = -1.*t3060*t3126;
  t3161 = t3150 + t3153;
  t3231 = t129*t2468;
  t3233 = t2523*t2651;
  t3235 = t3231 + t3233;
  t3205 = t129*t2545;
  t3213 = -1.*t2500*t2651;
  t3214 = t3205 + t3213;
  t3238 = t129*t2500;
  t3239 = t2545*t2651;
  t3242 = t3238 + t3239;
  t3170 = t129*t2574;
  t3171 = t2585*t2651;
  t3176 = t3170 + t3171;
  t3179 = t129*t2523;
  t3186 = -1.*t2468*t2651;
  t3195 = t3179 + t3186;
  t3219 = -1.*t3195*t3214;
  t3245 = -1.*t3235*t3242;
  t3247 = t2118 + t3219 + t3245;
  t3249 = t3176*t3247;
  t3266 = t129*t2585;
  t3267 = -1.*t2574*t2651;
  t3272 = t3266 + t3267;
  t3307 = t3214*t3272;
  t3308 = t3242*t3176;
  t3312 = t2250 + t3307 + t3308;
  t3313 = t3235*t3312;
  t3315 = t3249 + t3313;
  t3367 = t2061*t2616;
  t3379 = t118*t3195;
  t3380 = t3367 + t3379;
  t3382 = t2114*t2616;
  t3386 = t118*t3214;
  t3418 = t3382 + t3386;
  t3360 = t1387*t2616;
  t3362 = t118*t3272;
  t3366 = t3360 + t3362;
  t3450 = t118*t2114;
  t3456 = -1.*t2616*t3214;
  t3460 = t3450 + t3456;
  t3427 = -1.*t3380*t3418;
  t3438 = t118*t2061;
  t3442 = -1.*t2616*t3195;
  t3443 = t3438 + t3442;
  t3470 = -1.*t3443*t3460;
  t3475 = t3245 + t3427 + t3470;
  t3476 = t3366*t3475;
  t3479 = t3418*t3366;
  t3484 = t118*t1387;
  t3485 = -1.*t2616*t3272;
  t3489 = t3484 + t3485;
  t3491 = t3460*t3489;
  t3497 = t3308 + t3479 + t3491;
  t3500 = t3380*t3497;
  t3502 = t3476 + t3500;
  t3599 = 0.15121*t152;
  t3608 = t3599 + t211 + t2524 + t2528;
  t3513 = -0.15121*t152;
  t3526 = -1.*t187*t1819;
  t3538 = -1.*t152*t2035;
  t3545 = t3513 + t211 + t3526 + t3538;
  t3670 = -1.*t152*t923;
  t3671 = -1.*t187*t1032;
  t3672 = t3670 + t3671;
  t3674 = t129*t3672;
  t3675 = -1.*t2906*t2651;
  t3677 = t3674 + t3675;
  t3683 = t3672*t2651;
  t3686 = t2927 + t3683;
  t3642 = -1.*t187*t2179;
  t3646 = -1.*t152*t2225;
  t3648 = t3642 + t3646;
  t3578 = -1.*t187*t1466;
  t3580 = -1.*t152*t1904;
  t3583 = t3578 + t3580;
  t3735 = t3648*t2651;
  t3740 = t3266 + t3735;
  t3823 = t129*t3545;
  t3837 = -1.*t3608*t2651;
  t3839 = t3823 + t3837;
  t3761 = t129*t3608;
  t3762 = t3545*t2651;
  t3764 = t3761 + t3762;
  t3799 = t3583*t2651;
  t3800 = t3179 + t3799;
  t3771 = -1.*t3235*t3764;
  t3821 = -1.*t3800*t3242;
  t3774 = t129*t3583;
  t3779 = -1.*t2523*t2651;
  t3783 = t3774 + t3779;
  t3872 = t129*t3648;
  t3873 = -1.*t2585*t2651;
  t3883 = t3872 + t3873;
  t3858 = t3242*t3740;
  t3893 = t3764*t3176;
  t3997 = -1.*t129*t2938;
  t3999 = t3997 + t3675;
  t4033 = -1.*t129*t2500;
  t4035 = -1.*t2545*t2651;
  t4037 = t4033 + t4035;
  t4032 = -1.*t3235*t3214;
  t4041 = -1.*t3195*t3242;
  t4020 = -1.*t129*t2468;
  t4029 = t4020 + t3779;
  t4064 = -1.*t129*t2574;
  t4069 = t4064 + t3873;
  t4059 = t3242*t3272;
  t4074 = t3214*t3176;
  t4231 = -1.*t2873*t2616;
  t4232 = -1.*t118*t2943;
  t4241 = t4231 + t4232;
  t4274 = -1.*t2114*t2616;
  t4275 = -1.*t118*t3214;
  t4281 = t4274 + t4275;
  t4408 = 4.e-6*t509;
  t4396 = 7.e-6*t509;
  t4397 = t4396 + t596;
  t4398 = -7.e-6*t4397;
  t4399 = 2.8e-11*t592;
  t4400 = t511 + t4398 + t4399;
  t4414 = 7.000000000455e-6*t592;
  t4416 = t4408 + t4414;
  t4430 = t4408 + t1283;
  t4432 = -7.e-6*t4430;
  t4438 = 1.000000000016*t592;
  t4443 = t4432 + t4438;
  t4465 = -4.e-6*t509;
  t4518 = t4465 + t1283;
  t4533 = t4396 + t1110;
  t4486 = -7.e-6*t509;
  t4498 = -2.8e-11*t592;
  t4501 = t509 + t4498;
  t4466 = t509 + t4399;
  t4556 = -0.80315*t4518;
  t4564 = -0.038575000014*t4533;
  t4565 = t4486 + t596;
  t4566 = -0.038576*t4565;
  t4567 = t4408 + t789;
  t4571 = -0.5031510000080001*t4567;
  t4573 = 9.666256095795e-12*t592;
  t4575 = 2.826290000000002e-7 + t4556 + t4564 + t4566 + t4571 + t4573;
  t4577 = t4486 + t1110;
  t4578 = -3.367757e-6*t4577;
  t4586 = -0.80315*t4501;
  t4598 = t511 + t4399;
  t4599 = -0.5031510000080001*t4598;
  t4600 = -0.148715*t4397;
  t4612 = 9.99986000053965e-7*t592;
  t4621 = 1.1305160000000008e-12 + t4578 + t4586 + t4599 + t4600 + t4612;
  t4635 = -0.148715*t4430;
  t4637 = t511 + t4498;
  t4643 = -0.038576*t4637;
  t4645 = -0.038575000014*t4466;
  t4648 = t4465 + t789;
  t4670 = -3.367757e-6*t4648;
  t4672 = 0.2999989999967999*t592;
  t4673 = -1.9784030000000015e-12 + t4635 + t4643 + t4645 + t4670 + t4672;
  t4748 = -4.00000000026e-6*t592;
  t4750 = t4396 + t4748;
  t4753 = 4.e-6*t4430;
  t4754 = t509 + t4753 + t4399;
  t4762 = 4.e-6*t4397;
  t4764 = 1.000000000049*t592;
  t4767 = t4762 + t4764;
  t4471 = 4.e-6*t4466;
  t4473 = -1.12e-16*t592;
  t4480 = t4465 + t4471 + t4473;
  t4504 = 7.e-6*t4501;
  t4510 = 1.96e-16*t592;
  t4511 = t4486 + t4504 + t4510;
  t4528 = 7.e-6*t4518;
  t4536 = 4.e-6*t4533;
  t4537 = 6.5e-11*t592;
  t4551 = t4528 + t4536 + t4537;
  t4482 = t1337*t4480;
  t4514 = t1236*t4511;
  t4552 = t1104*t4551;
  t4553 = t4482 + t4514 + t4552;
  t4576 = t1017*t4575;
  t4627 = t1011*t4621;
  t4690 = t950*t4673;
  t4702 = t4576 + t4627 + t4690;
  t4715 = t867*t4575;
  t4719 = t759*t4621;
  t4720 = t468*t4673;
  t4725 = t4715 + t4719 + t4720;
  t4733 = t1104*t4575;
  t4737 = t1236*t4621;
  t4738 = t1337*t4673;
  t4740 = t4733 + t4737 + t4738;
  t4805 = t1104*t4750;
  t4806 = t1337*t4754;
  t4816 = t1236*t4767;
  t4821 = t4805 + t4806 + t4816;
  t4934 = -1.*t1570*t4750;
  t4936 = -1.*t1398*t4621;
  t4941 = -1.*t4575*t1436;
  t4946 = -1.*t4673*t1451;
  t4947 = -1.*t4767*t1724;
  t4950 = -1.*t4754*t1808;
  t4953 = t4934 + t4936 + t4941 + t4946 + t4947 + t4950;
  t4959 = t1197*t4575;
  t4965 = t1570*t4551;
  t4972 = t4511*t1724;
  t4973 = t4621*t1299;
  t4979 = t4480*t1808;
  t4984 = t4673*t1375;
  t4986 = t4959 + t4965 + t4972 + t4973 + t4979 + t4984;
  t4743 = -1.*t4740*t2061;
  t4829 = -1.*t4821*t2114;
  t4751 = t1017*t4750;
  t4760 = t950*t4754;
  t4770 = t1011*t4767;
  t4772 = t4751 + t4760 + t4770;
  t4780 = t867*t4750;
  t4784 = t468*t4754;
  t4790 = t759*t4767;
  t4793 = t4780 + t4784 + t4790;
  t4868 = t4553*t2114;
  t4883 = t4740*t1387;
  t4849 = t468*t4480;
  t4853 = t759*t4511;
  t4857 = t867*t4551;
  t4861 = t4849 + t4853 + t4857;
  t4836 = t950*t4480;
  t4837 = t1011*t4511;
  t4842 = t1017*t4551;
  t4845 = t4836 + t4837 + t4842;
  t5098 = t187*t4702;
  t5105 = t152*t4725;
  t5107 = t5098 + t5105;
  t5110 = t152*t4702;
  t5114 = -1.*t187*t4725;
  t5115 = t5110 + t5114;
  t4407 = t1011*t4400;
  t4419 = t1017*t4416;
  t4445 = t950*t4443;
  t4446 = t4407 + t4419 + t4445;
  t4453 = t759*t4400;
  t4457 = t867*t4416;
  t4461 = t468*t4443;
  t4463 = t4453 + t4457 + t4461;
  t5207 = t187*t4446;
  t5214 = t152*t4463;
  t5215 = t5207 + t5214;
  t5195 = t152*t4446;
  t5199 = -1.*t187*t4463;
  t5202 = t5195 + t5199;
  t5179 = t1236*t4400;
  t5182 = t1104*t4416;
  t5187 = t1337*t4443;
  t5190 = t5179 + t5182 + t5187;
  t5204 = t129*t5202;
  t5223 = -1.*t5215*t2651;
  t5225 = t5204 + t5223;
  t5240 = t129*t5215;
  t5247 = t5202*t2651;
  t5257 = t5240 + t5247;
  t5270 = t118*t5190;
  t5278 = -1.*t2616*t5225;
  t5289 = t5270 + t5278;
  t5151 = t152*t4861;
  t5153 = t187*t4845;
  t5154 = t5151 + t5153;
  t5163 = -1.*t187*t4861;
  t5164 = t152*t4845;
  t5165 = t5163 + t5164;
  t5137 = t152*t4772;
  t5140 = -1.*t187*t4793;
  t5143 = t5137 + t5140;
  t5124 = t187*t4772;
  t5126 = t152*t4793;
  t5133 = t5124 + t5126;
  t5329 = t129*t5154;
  t5332 = t5165*t2651;
  t5333 = t5329 + t5332;
  t5336 = t129*t5115;
  t5342 = -1.*t5107*t2651;
  t5346 = t5336 + t5342;
  t5352 = t129*t5107;
  t5354 = t5115*t2651;
  t5356 = t5352 + t5354;
  t5371 = t129*t5133;
  t5373 = t5143*t2651;
  t5374 = t5371 + t5373;
  t5387 = t129*t5165;
  t5389 = -1.*t5154*t2651;
  t5396 = t5387 + t5389;
  t5358 = -1.*t5356*t3235;
  t5380 = -1.*t5374*t3242;
  t5364 = t129*t5143;
  t5367 = -1.*t5133*t2651;
  t5368 = t5364 + t5367;
  t5401 = t5333*t3242;
  t5409 = t5356*t3176;
  t5421 = t4553*t2616;
  t5423 = t118*t5396;
  t5424 = t5421 + t5423;
  t5433 = t4740*t2616;
  t5434 = t118*t5346;
  t5442 = t5433 + t5434;
  t5447 = t118*t4740;
  t5451 = -1.*t2616*t5346;
  t5455 = t5447 + t5451;
  t5462 = t4821*t2616;
  t5469 = t118*t5368;
  t5470 = t5462 + t5469;
  t5563 = -2.8e-11*t447;
  t5565 = t439 + t5563;
  t5571 = 4.e-6*t424;
  t5573 = t5571 + t757;
  t5611 = -7.e-6*t424;
  t5621 = t5611 + t1014;
  t5604 = -4.e-6*t424;
  t5605 = t5604 + t757;
  t5669 = 7.e-6*t424;
  t5706 = 2.8e-11*t447;
  t5725 = t5669 + t1014;
  t5737 = t424 + t5563;
  t5745 = t424 + t5706;
  t5748 = -0.038749000006999997*t5745;
  t5749 = t5604 + t1058;
  t5751 = -1.8134809999999998e-6*t5749;
  t5753 = -0.2812110000084994*t447;
  t5763 = t5573*t1570;
  t5765 = t5565*t1724;
  t5766 = -1.000000000016*t447*t1808;
  t5768 = -2.7726089999999997e-12 + t5748 + t5751 + t5753 + t5763 + t5765 + t5766;
  t5671 = t5669 + t462;
  t5672 = -0.038749000006999997*t5671;
  t5673 = t5571 + t1058;
  t5677 = -0.281211000004*t5673;
  t5679 = -1.1787626499999999e-16*t447;
  t5680 = -6.5e-11*t447*t1570;
  t5681 = t5621*t1724;
  t5682 = t5605*t1808;
  t5687 = 3.9608699999999997e-7 + t5672 + t5677 + t5679 + t5680 + t5681 + t5682;
  t5787 = t5725*t1197;
  t5788 = -1.000000000049*t447*t1299;
  t5792 = t5737*t1375;
  t5793 = t5787 + t5788 + t5792;
  t5701 = t5611 + t462;
  t5705 = -1.8134809999999998e-6*t5701;
  t5711 = t439 + t5706;
  t5712 = -0.281211000004*t5711;
  t5718 = -0.03874900000889869*t447;
  t5726 = t5725*t1570;
  t5727 = -1.000000000049*t447*t1724;
  t5739 = t5737*t1808;
  t5741 = 1.5843479999999999e-12 + t5705 + t5712 + t5718 + t5726 + t5727 + t5739;
  t5771 = -1.000000000049*t447*t1398;
  t5773 = t5725*t1436;
  t5775 = t5737*t1451;
  t5777 = t5771 + t5773 + t5775;
  t5742 = -1.*t2061*t5741;
  t5784 = -1.*t5777*t2114;
  t5696 = t5621*t1398;
  t5697 = -6.5e-11*t447*t1436;
  t5698 = t5605*t1451;
  t5699 = t5696 + t5697 + t5698;
  t5644 = t5565*t1398;
  t5655 = t5573*t1436;
  t5665 = -1.000000000016*t447*t1451;
  t5666 = t5644 + t5655 + t5665;
  t5817 = t2114*t5793;
  t5829 = t5741*t1387;
  t5878 = t152*t5687;
  t5879 = t187*t5768;
  t5880 = t5878 + t5879;
  t5861 = -1.*t187*t5687;
  t5865 = t152*t5768;
  t5866 = t5861 + t5865;
  t5804 = -6.5e-11*t447*t1197;
  t5806 = t5621*t1299;
  t5808 = t5605*t1375;
  t5810 = t5804 + t5806 + t5808;
  t5819 = t5573*t1197;
  t5823 = t5565*t1299;
  t5825 = -1.000000000016*t447*t1375;
  t5827 = t5819 + t5823 + t5825;
  t5556 = -1.000000000016*t447*t665;
  t5568 = t5565*t838;
  t5589 = t5573*t909;
  t5596 = t5556 + t5568 + t5589;
  t5607 = t5605*t665;
  t5630 = t5621*t838;
  t5631 = -6.5e-11*t447*t909;
  t5634 = t5607 + t5630 + t5631;
  t5942 = t187*t5596;
  t5945 = t152*t5634;
  t5952 = t5942 + t5945;
  t5935 = t152*t5596;
  t5938 = -1.*t187*t5634;
  t5940 = t5935 + t5938;
  t5925 = t5737*t665;
  t5926 = -1.000000000049*t447*t838;
  t5927 = t5725*t909;
  t5931 = t5925 + t5926 + t5927;
  t5941 = t129*t5940;
  t5953 = -1.*t5952*t2651;
  t5956 = t5941 + t5953;
  t5964 = t129*t5952;
  t5969 = t5940*t2651;
  t5971 = t5964 + t5969;
  t5975 = t118*t5931;
  t5977 = -1.*t2616*t5956;
  t5980 = t5975 + t5977;
  t5908 = t152*t5810;
  t5911 = t187*t5827;
  t5913 = t5908 + t5911;
  t5899 = -1.*t187*t5810;
  t5901 = t152*t5827;
  t5905 = t5899 + t5901;
  t5854 = -1.*t187*t5699;
  t5855 = t152*t5666;
  t5856 = t5854 + t5855;
  t5849 = t152*t5699;
  t5850 = t187*t5666;
  t5851 = t5849 + t5850;
  t6022 = t129*t5851;
  t6023 = t5856*t2651;
  t6024 = t6022 + t6023;
  t6054 = t129*t5866;
  t6056 = -1.*t5880*t2651;
  t6063 = t6054 + t6056;
  t6031 = t129*t5880;
  t6039 = t5866*t2651;
  t6045 = t6031 + t6039;
  t5997 = t129*t5913;
  t6001 = t5905*t2651;
  t6003 = t5997 + t6001;
  t6084 = t129*t5905;
  t6087 = -1.*t5913*t2651;
  t6088 = t6084 + t6087;
  t6025 = -1.*t6024*t3242;
  t6047 = -1.*t3235*t6045;
  t6005 = t129*t5856;
  t6008 = -1.*t5851*t2651;
  t6010 = t6005 + t6008;
  t6104 = t5777*t2616;
  t6105 = t118*t6010;
  t6106 = t6104 + t6105;
  t6082 = t6045*t3176;
  t6083 = t3242*t6003;
  t6117 = t5741*t2616;
  t6121 = t118*t6063;
  t6122 = t6117 + t6121;
  t6129 = t118*t5741;
  t6135 = -1.*t2616*t6063;
  t6136 = t6129 + t6135;
  t6099 = t5793*t2616;
  t6100 = t118*t6088;
  t6101 = t6099 + t6100;
  t6218 = -0.15121*t1466;
  t6222 = 0.15121*t1904;
  t6225 = t1032*t1819;
  t6226 = t923*t2035;
  t6227 = t2873*t2114;
  t6228 = t6225 + t6226 + t6227;
  t6229 = t1387*t6228;
  t6233 = -1.*t1819*t2179;
  t6234 = -1.*t2035*t2225;
  t6239 = -1.*t2114*t1387;
  t6241 = t6233 + t6234 + t6239;
  t6242 = t2873*t6241;
  t6244 = t6218 + t6222 + t6229 + t6242;
  t6266 = t1570*t909;
  t6268 = t838*t1724;
  t6270 = t665*t1808;
  t6271 = t6266 + t6268 + t6270;
  t6277 = -1.*t1570*t1197;
  t6278 = -1.*t1724*t1299;
  t6280 = -1.*t1808*t1375;
  t6281 = t6277 + t6278 + t6280;
  t6251 = 0.281211*t1398;
  t6253 = -1. + t1106;
  t6254 = 4.e-6*t6253;
  t6255 = t6254 + t777 + t1283;
  t6257 = 1.e-6*t6255;
  t6260 = -0.038749*t1451;
  t6272 = -1.*t1197*t6271;
  t6287 = -1.*t909*t6281;
  t6288 = t1375*t6271;
  t6289 = t665*t6281;
  t6291 = t6288 + t6289;
  t6292 = 7.e-6*t6291;
  t6296 = -1.*t1299*t6271;
  t6298 = -1.*t838*t6281;
  t6299 = t6296 + t6298;
  t6301 = 4.e-6*t6299;
  t6303 = t6251 + t6257 + t6260 + t6272 + t6287 + t6292 + t6301;
  t6306 = t2938*t2500;
  t6307 = t2906*t2545;
  t6308 = t6227 + t6306 + t6307;
  t6309 = t1387*t6308;
  t6311 = -1.*t2500*t2574;
  t6314 = -1.*t2545*t2585;
  t6315 = t6239 + t6311 + t6314;
  t6318 = t2873*t6315;
  t6319 = t6309 + t6318;
  t2612 = t2062 + t2070 + t2077 + t2092;
  t215 = t169 + t211;
  t2649 = t169 + t2476;
  t2660 = t1905 + t1916 + t1957 + t2009;
  t6333 = t129*t3060*t2616;
  t6342 = t3111*t2651;
  t6344 = t6333 + t6342;
  t6355 = t3111*t129;
  t6356 = -1.*t3060*t2616*t2651;
  t6357 = t6355 + t6356;
  t2692 = t1467 + t1469 + t1499 + t1523;
  t6376 = t3060*t3235;
  t6380 = t3111*t3443;
  t6382 = t6376 + t6380;
  t6388 = t3111*t3235;
  t6389 = -1.*t3060*t3443;
  t6392 = t6388 + t6389;
  t6403 = t2943*t3214;
  t6404 = t3098*t3242;
  t6407 = t6227 + t6403 + t6404;
  t6409 = t3176*t6407;
  t6418 = -1.*t3214*t3272;
  t6425 = -1.*t3242*t3176;
  t6427 = t6239 + t6418 + t6425;
  t6428 = t3098*t6427;
  t6429 = t6409 + t6428;
  t2737 = t1751 + t1772 + t1794 + t1803;
  t6365 = -1.*t187*t6344;
  t6366 = t152*t6357;
  t6368 = t6365 + t6366;
  t6370 = t152*t6344;
  t6372 = t187*t6357;
  t6374 = t6370 + t6372;
  t2769 = t1582 + t1619 + t1648 + t1689;
  t2800 = t1525 + t1535 + t1563 + t1564;
  t6482 = t2962*t3418;
  t6483 = t3126*t3460;
  t6484 = t6404 + t6482 + t6483;
  t6486 = t3366*t6484;
  t6487 = -1.*t3418*t3366;
  t6489 = -1.*t3460*t3489;
  t6492 = t6425 + t6487 + t6489;
  t6493 = t2962*t6492;
  t6494 = t6486 + t6493;
  t6437 = -1.*t118*t1337*t3060;
  t6438 = t468*t6368;
  t6439 = t950*t6374;
  t6440 = t6437 + t6438 + t6439;
  t6445 = -1.*t1236*t118*t3060;
  t6446 = t759*t6368;
  t6447 = t1011*t6374;
  t6448 = t6445 + t6446 + t6447;
  t6450 = -1.*t118*t1104*t3060;
  t6456 = t867*t6368;
  t6460 = t1017*t6374;
  t6461 = t6450 + t6456 + t6460;
  t6574 = t3098*t3764;
  t6577 = t3686*t3242;
  t6582 = -1.*t3242*t3740;
  t6585 = -1.*t3764*t3176;
  t6656 = t3098*t3214;
  t6663 = t2943*t3242;
  t6668 = -1.*t3242*t3272;
  t6672 = -1.*t3214*t3176;
  t4288 = -1.*t2061*t2616;
  t4292 = -1.*t118*t3195;
  t4299 = t4288 + t4292;
  t4341 = -1.*t1387*t2616;
  t4353 = -1.*t118*t3272;
  t4359 = t4341 + t4353;
  t6824 = t838*t4621;
  t6826 = t4575*t909;
  t6828 = t1570*t4416;
  t6829 = t665*t4673;
  t6831 = t4400*t1724;
  t6833 = t4443*t1808;
  t6835 = t6824 + t6826 + t6828 + t6829 + t6831 + t6833;
  t6840 = -1.*t1197*t4575;
  t6841 = -1.*t1570*t4551;
  t6844 = -1.*t4511*t1724;
  t6846 = -1.*t4621*t1299;
  t6847 = -1.*t4480*t1808;
  t6849 = -1.*t4673*t1375;
  t6854 = t6840 + t6841 + t6844 + t6846 + t6847 + t6849;
  t6785 = t2873*t4740;
  t6790 = t5190*t2114;
  t6797 = -1.*t4553*t2114;
  t6800 = -1.*t4740*t1387;
  t5481 = t118*t4821;
  t5482 = -1.*t2616*t5368;
  t5483 = t5481 + t5482;
  t6939 = t3098*t5356;
  t6942 = t5257*t3242;
  t5192 = t5190*t2616;
  t5228 = t118*t5225;
  t5229 = t5192 + t5228;
  t6949 = -1.*t5333*t3242;
  t6951 = -1.*t5356*t3176;
  t5511 = t118*t4553;
  t5513 = -1.*t2616*t5396;
  t5516 = t5511 + t5513;
  t7015 = t2873*t5741;
  t7017 = t5931*t2114;
  t7024 = -1.*t2114*t5793;
  t7027 = -1.*t5741*t1387;
  t6110 = t118*t5777;
  t6111 = -1.*t2616*t6010;
  t6113 = t6110 + t6111;
  t7083 = t5971*t3242;
  t7095 = t3098*t6045;
  t5933 = t5931*t2616;
  t5957 = t118*t5956;
  t5958 = t5933 + t5957;
  t7101 = -1.*t6045*t3176;
  t7103 = -1.*t3242*t6003;
  t6164 = t118*t5793;
  t6165 = -1.*t2616*t6088;
  t6166 = t6164 + t6165;
  t7164 = -0.15121*t2179;
  t7165 = 0.15121*t2225;
  t7166 = -1.*t1032*t1819;
  t7167 = -1.*t923*t2035;
  t7168 = -1.*t2873*t2114;
  t7169 = t7166 + t7167 + t7168;
  t7171 = t2061*t7169;
  t7172 = t1466*t1819;
  t7173 = t1904*t2035;
  t7174 = t2061*t2114;
  t7175 = t7172 + t7173 + t7174;
  t7176 = t2873*t7175;
  t7177 = t7164 + t7165 + t7171 + t7176;
  t7193 = -1.*t1570*t909;
  t7194 = -1.*t838*t1724;
  t7195 = -1.*t665*t1808;
  t7197 = t7193 + t7194 + t7195;
  t7201 = t1570*t1436;
  t7203 = t1398*t1724;
  t7204 = t1451*t1808;
  t7205 = t7201 + t7203 + t7204;
  t7180 = 4.e-6*t1537;
  t7182 = -7.e-6*t1118;
  t7184 = 1. + t876 + t7180 + t7182;
  t7185 = 1.e-6*t7184;
  t7188 = 0.281211*t1299;
  t7191 = -0.038749*t1375;
  t7200 = -1.*t1436*t7197;
  t7206 = -1.*t909*t7205;
  t7207 = t1451*t7197;
  t7208 = t665*t7205;
  t7210 = t7207 + t7208;
  t7211 = 7.e-6*t7210;
  t7213 = -1.*t1398*t7197;
  t7214 = -1.*t838*t7205;
  t7215 = t7213 + t7214;
  t7217 = 4.e-6*t7215;
  t7218 = t7185 + t7188 + t7191 + t7200 + t7206 + t7211 + t7217;
  t7221 = -1.*t2938*t2500;
  t7223 = -1.*t2906*t2545;
  t7225 = t7168 + t7221 + t7223;
  t7227 = t2061*t7225;
  t7232 = t2468*t2500;
  t7233 = t2523*t2545;
  t7234 = t7174 + t7232 + t7233;
  t7235 = t2873*t7234;
  t7236 = t7227 + t7235;
  t7239 = -1.*t3111*t129*t2616;
  t7240 = t3060*t2651;
  t7241 = t7239 + t7240;
  t7244 = t129*t3060;
  t7245 = t3111*t2616*t2651;
  t7246 = t7244 + t7245;
  t7263 = -1.*t2943*t3214;
  t7264 = -1.*t3098*t3242;
  t7265 = t7168 + t7263 + t7264;
  t7266 = t3235*t7265;
  t7267 = t3195*t3214;
  t7268 = t3235*t3242;
  t7270 = t7174 + t7267 + t7268;
  t7271 = t3098*t7270;
  t7275 = t7266 + t7271;
  t7283 = t3060*t3176;
  t7284 = t3111*t3489;
  t7286 = t7283 + t7284;
  t7289 = t3111*t3176;
  t7291 = -1.*t3060*t3489;
  t7292 = t7289 + t7291;
  t7251 = -1.*t187*t7241;
  t7252 = t152*t7246;
  t7254 = t7251 + t7252;
  t7258 = t152*t7241;
  t7259 = t187*t7246;
  t7261 = t7258 + t7259;
  t7321 = -1.*t2962*t3418;
  t7322 = -1.*t3126*t3460;
  t7323 = t7264 + t7321 + t7322;
  t7324 = t3380*t7323;
  t7326 = t3380*t3418;
  t7327 = t3443*t3460;
  t7328 = t7268 + t7326 + t7327;
  t7330 = t2962*t7328;
  t7331 = t7324 + t7330;
  t7296 = t3111*t118*t1337;
  t7297 = t468*t7254;
  t7298 = t950*t7261;
  t7299 = t7296 + t7297 + t7298;
  t7301 = t1236*t3111*t118;
  t7303 = t759*t7254;
  t7306 = t1011*t7261;
  t7309 = t7301 + t7303 + t7306;
  t7315 = t3111*t118*t1104;
  t7316 = t867*t7254;
  t7317 = t1017*t7261;
  t7318 = t7315 + t7316 + t7317;
  t7401 = -1.*t3098*t3764;
  t7404 = -1.*t3686*t3242;
  t7408 = t3235*t3764;
  t7410 = t3800*t3242;
  t7480 = -1.*t3098*t3214;
  t7482 = -1.*t2943*t3242;
  t7486 = t3235*t3214;
  t7488 = t3195*t3242;
  t7603 = t1570*t4750;
  t7604 = t1398*t4621;
  t7606 = t4575*t1436;
  t7607 = t4673*t1451;
  t7608 = t4767*t1724;
  t7610 = t4754*t1808;
  t7614 = t7603 + t7604 + t7606 + t7607 + t7608 + t7610;
  t7617 = -1.*t838*t4621;
  t7618 = -1.*t4575*t909;
  t7619 = -1.*t1570*t4416;
  t7620 = -1.*t665*t4673;
  t7621 = -1.*t4400*t1724;
  t7623 = -1.*t4443*t1808;
  t7624 = t7617 + t7618 + t7619 + t7620 + t7621 + t7623;
  t7571 = -1.*t2873*t4740;
  t7576 = -1.*t5190*t2114;
  t7581 = t4740*t2061;
  t7584 = t4821*t2114;
  t7688 = -1.*t3098*t5356;
  t7690 = -1.*t5257*t3242;
  t7703 = t5356*t3235;
  t7706 = t5374*t3242;
  t7757 = -1.*t2873*t5741;
  t7759 = -1.*t5931*t2114;
  t7769 = t2061*t5741;
  t7774 = t5777*t2114;
  t7810 = -1.*t5971*t3242;
  t7811 = -1.*t3098*t6045;
  t7820 = t6024*t3242;
  t7821 = t3235*t6045;
  p_output1[0]=t118*t129*t215 + t2612*t2616 - 1.*t118*t2649*t2651 + t2660*t2677 + t2692*t2718 + t2737*t2754 + t2769*t2779 + t2800*t2835 - 0.80315*(t1345*t2754 + t1288*t2779 + t1118*t2835) - 0.038576*(t1775*t2754 + t1584*t2779 + t1537*t2835) - 0.148715*(t2754*t610 + t2779*t793 + t2835*t898) + var1[0] + t2962*var2[0] + t3161*var2[1] + t3129*var2[2] + t3502*var2[3] + ((-1.*t3060*t3098 - 1.*t3111*t3126)*var2[1] + t3161*var2[2])*var2[3] + t3315*var2[4] + (t3126*var2[0] - 1.*t3060*t4241*var2[1] + t3111*t4241*var2[2] + (t3475*t3489 + t3443*t3497 + t3366*(-1.*t3418*t3443 - 1.*t3380*t3460 - 1.*t3443*t4281 - 1.*t3460*t4299) + t3380*(t3366*t3460 + t3418*t3489 + t3489*t4281 + t3460*t4359))*var2[3])*var2[4] + t2599*var2[5] + (t118*t3999*var2[0] + (t2943*t3111 + t2616*t3060*t3999)*var2[1] + (t2943*t3060 - 1.*t2616*t3111*t3999)*var2[2] + (t118*t3497*t4029 + t3366*(-1.*t118*t3418*t4029 + t2616*t3460*t4029 + t4032 - 1.*t118*t3380*t4037 + t2616*t3443*t4037 + t4041) + t118*t3475*t4069 + t3380*(t118*t3366*t4037 - 1.*t2616*t3489*t4037 + t4059 + t118*t3418*t4069 - 1.*t2616*t3460*t4069 + t4074))*var2[3] + (t3247*t3272 + t3195*t3312 + t3176*(-1.*t3214*t4029 + t4032 - 1.*t3195*t4037 + t4041) + t3235*(t3272*t4037 + t4059 + t3214*t4069 + t4074))*var2[4])*var2[5] + t2262*var2[15] + (t118*t3677*var2[0] + (t2616*t3060*t3677 + t3111*t3686)*var2[1] + (-1.*t2616*t3111*t3677 + t3060*t3686)*var2[2] + (t118*t3497*t3783 + t3366*(t3771 - 1.*t118*t3418*t3783 + t2616*t3460*t3783 + t3821 - 1.*t118*t3380*t3839 + t2616*t3443*t3839) + t118*t3475*t3883 + t3380*(t118*t3366*t3839 - 1.*t2616*t3489*t3839 + t3858 + t118*t3418*t3883 - 1.*t2616*t3460*t3883 + t3893))*var2[3] + (t3247*t3740 + t3312*t3800 + t3176*(t3771 - 1.*t3214*t3783 + t3821 - 1.*t3195*t3839) + t3235*(t3272*t3839 + t3858 + t3214*t3883 + t3893))*var2[4] + (t1387*(-1.*t2500*t2523 - 1.*t2523*t3545 - 1.*t2545*t3583 - 1.*t2468*t3608) + t2061*(t2500*t2585 + t2585*t3545 + t2574*t3608 + t2545*t3648))*var2[5])*var2[15] + t2443*var2[16] + (t5958*var2[0] + (t3111*t5971 - 1.*t3060*t5980)*var2[1] + (t3060*t5971 + t3111*t5980)*var2[2] + (t3475*t6101 + t3497*t6106 + t3366*(t6025 + t6047 - 1.*t3418*t6106 - 1.*t3460*t6113 - 1.*t3380*t6122 - 1.*t3443*t6136) + t3380*(t6082 + t6083 + t3418*t6101 + t3366*t6122 + t3489*t6136 + t3460*t6166))*var2[3] + (t3247*t6003 + t3312*t6024 + t3176*(t5742 + t5784 - 1.*t3214*t6010 + t6025 + t6047 - 1.*t3195*t6063) + t3235*(t5817 + t5829 + t3272*t6063 + t6082 + t6083 + t3214*t6088))*var2[4] + (t2593*t5777 + t2551*t5793 + t1387*(t5742 + t5784 - 1.*t2500*t5851 - 1.*t2545*t5856 - 1.*t2523*t5866 - 1.*t2468*t5880) + t2061*(t5817 + t5829 + t2585*t5866 + t2574*t5880 + t2545*t5905 + t2500*t5913))*var2[5] + (-0.15121*t5596 + 0.15121*t5634 + t2256*t5777 + t1387*(-1.*t1819*t5666 - 1.*t1904*t5687 - 1.*t2035*t5699 + t5742 - 1.*t1466*t5768 + t5784) + t2119*t5793 + t2061*(t2225*t5687 + t2179*t5768 + t2035*t5810 + t5817 + t1819*t5827 + t5829))*var2[15])*var2[16] - 4.051285074010787e-7*var2[17] + (t5229*var2[0] + (t3111*t5257 - 1.*t3060*t5289)*var2[1] + (t3060*t5257 + t3111*t5289)*var2[2] + (t3475*t5424 + t3497*t5470 + t3366*(t5358 + t5380 - 1.*t3380*t5442 - 1.*t3443*t5455 - 1.*t3418*t5470 - 1.*t3460*t5483) + t3380*(t5401 + t5409 + t3418*t5424 + t3366*t5442 + t3489*t5455 + t3460*t5516))*var2[3] + (t3247*t5333 + t3312*t5374 + t3176*(t4743 + t4829 - 1.*t3195*t5346 + t5358 - 1.*t3214*t5368 + t5380) + t3235*(t4868 + t4883 + t3272*t5346 + t3214*t5396 + t5401 + t5409))*var2[4] + (t2551*t4553 + t2593*t4821 + t1387*(t4743 + t4829 - 1.*t2468*t5107 - 1.*t2523*t5115 - 1.*t2500*t5133 - 1.*t2545*t5143) + t2061*(t4868 + t4883 + t2574*t5107 + t2585*t5115 + t2500*t5154 + t2545*t5165))*var2[5] + (-0.15121*t4446 + 0.15121*t4463 + t2119*t4553 + t2256*t4821 + t1387*(-1.*t1466*t4702 - 1.*t1904*t4725 + t4743 - 1.*t1819*t4772 - 1.*t2035*t4793 + t4829) + t2061*(t2179*t4702 + t2225*t4725 + t1819*t4845 + t2035*t4861 + t4868 + t4883))*var2[15] + (0.281211*t4400 - 0.038749*t4443 - 1.*t2364*t4551 - 1.*t2387*t4750 - 1.*t1197*t4953 - 1.*t1436*t4986 + 4.e-6*(-1.*t2364*t4511 - 1.*t2387*t4767 - 1.*t1299*t4953 - 1.*t1398*t4986) + 7.e-6*(t2364*t4480 + t2387*t4754 + t1375*t4953 + t1451*t4986) + 1.e-6*(t4465 - 7.000000000455e-6*t592))*var2[16])*var2[17] + t2962*var3[0] + t3161*var3[1] + t3129*var3[2] + t3502*var3[3] + t3315*var3[4] + t2599*var3[5] + t2262*var3[15] + t2443*var3[16] - 4.051285074010787e-7*var3[17] - 1.*var4[0];
  p_output1[1]=-1.*t118*t2612*t3060 + t215*t6344 + t2649*t6357 + t2660*t6368 + t2692*t6374 + t2737*t6440 + t2769*t6448 + t2800*t6461 - 0.80315*(t1345*t6440 + t1288*t6448 + t1118*t6461) - 0.038576*(t1775*t6440 + t1584*t6448 + t1537*t6461) - 0.148715*(t610*t6440 + t6448*t793 + t6461*t898) + var1[1] + t3380*var2[0] + t6392*var2[1] + t6382*var2[2] + t6494*var2[3] + ((-1.*t3060*t3235 - 1.*t3111*t3443)*var2[1] + t6392*var2[2])*var2[3] + t6429*var2[4] + (t3443*var2[0] - 1.*t3060*t4299*var2[1] + t3111*t4299*var2[2] + (t3366*(t3126*t3418 + t2962*t3460 + t3460*t4241 + t3126*t4281) + t2962*(-1.*t3366*t3460 - 1.*t3418*t3489 - 1.*t3489*t4281 - 1.*t3460*t4359) + t3489*t6484 + t3126*t6492)*var2[3])*var2[4] + t6319*var2[5] + (t118*t4029*var2[0] + (t3111*t3195 + t2616*t3060*t4029)*var2[1] + (t3060*t3195 - 1.*t2616*t3111*t4029)*var2[2] + (t118*t4069*t6484 + t118*t3999*t6492 + t3366*(t118*t3418*t3999 - 1.*t2616*t3460*t3999 + t118*t2962*t4037 - 1.*t2616*t3126*t4037 + t6656 + t6663) + t2962*(-1.*t118*t3366*t4037 + t2616*t3489*t4037 - 1.*t118*t3418*t4069 + t2616*t3460*t4069 + t6668 + t6672))*var2[3] + (t3272*t6407 + t2943*t6427 + t3176*(t3214*t3999 + t2943*t4037 + t6656 + t6663) + t3098*(-1.*t3272*t4037 - 1.*t3214*t4069 + t6668 + t6672))*var2[4])*var2[5] + t6244*var2[15] + (t118*t3783*var2[0] + (t2616*t3060*t3783 + t3111*t3800)*var2[1] + (-1.*t2616*t3111*t3783 + t3060*t3800)*var2[2] + (t118*t3883*t6484 + t118*t3677*t6492 + t3366*(t118*t3418*t3677 - 1.*t2616*t3460*t3677 + t118*t2962*t3839 - 1.*t2616*t3126*t3839 + t6574 + t6577) + t2962*(-1.*t118*t3366*t3839 + t2616*t3489*t3839 - 1.*t118*t3418*t3883 + t2616*t3460*t3883 + t6582 + t6585))*var2[3] + (t3740*t6407 + t3686*t6427 + t3176*(t3214*t3677 + t2943*t3839 + t6574 + t6577) + t3098*(-1.*t3272*t3839 - 1.*t3214*t3883 + t6582 + t6585))*var2[4] + (t2873*(-1.*t2500*t2585 - 1.*t2585*t3545 - 1.*t2574*t3608 - 1.*t2545*t3648) + t1387*(t2500*t2906 + t2906*t3545 + t2938*t3608 + t2545*t3672))*var2[5])*var2[15] + t6303*var2[16] + (t6106*var2[0] + (t3111*t6024 - 1.*t3060*t6113)*var2[1] + (t3060*t6024 + t3111*t6113)*var2[2] + (t6101*t6484 + t5958*t6492 + t3366*(t3418*t5958 + t3460*t5980 + t2962*t6122 + t3126*t6136 + t7083 + t7095) + t2962*(-1.*t3418*t6101 - 1.*t3366*t6122 - 1.*t3489*t6136 - 1.*t3460*t6166 + t7101 + t7103))*var2[3] + (t6003*t6407 + t5971*t6427 + t3176*(t3214*t5956 + t2943*t6063 + t7015 + t7017 + t7083 + t7095) + t3098*(-1.*t3272*t6063 - 1.*t3214*t6088 + t7024 + t7027 + t7101 + t7103))*var2[4] + (t5793*t6308 + t5931*t6315 + t1387*(t2906*t5866 + t2938*t5880 + t2545*t5940 + t2500*t5952 + t7015 + t7017) + t2873*(-1.*t2585*t5866 - 1.*t2574*t5880 - 1.*t2545*t5905 - 1.*t2500*t5913 + t7024 + t7027))*var2[5] + (-0.15121*t5666 + 0.15121*t5699 + t5793*t6228 + t5931*t6241 + t2873*(-1.*t2225*t5687 - 1.*t2179*t5768 - 1.*t2035*t5810 - 1.*t1819*t5827 + t7024 + t7027) + t1387*(t1819*t5596 + t2035*t5634 + t1032*t5768 + t7015 + t7017 + t5687*t923))*var2[15])*var2[16] + 0.3000000410492048*var2[17] + (t5470*var2[0] + (t3111*t5374 - 1.*t3060*t5483)*var2[1] + (t3060*t5374 + t3111*t5483)*var2[2] + (t5424*t6484 + t5229*t6492 + t3366*(t3418*t5229 + t3460*t5289 + t2962*t5442 + t3126*t5455 + t6939 + t6942) + t2962*(-1.*t3418*t5424 - 1.*t3366*t5442 - 1.*t3489*t5455 - 1.*t3460*t5516 + t6949 + t6951))*var2[3] + (t5333*t6407 + t5257*t6427 + t3176*(t3214*t5225 + t2943*t5346 + t6785 + t6790 + t6939 + t6942) + t3098*(-1.*t3272*t5346 - 1.*t3214*t5396 + t6797 + t6800 + t6949 + t6951))*var2[4] + (t4553*t6308 + t5190*t6315 + t1387*(t2938*t5107 + t2906*t5115 + t2545*t5202 + t2500*t5215 + t6785 + t6790) + t2873*(-1.*t2574*t5107 - 1.*t2585*t5115 - 1.*t2500*t5154 - 1.*t2545*t5165 + t6797 + t6800))*var2[5] + (-0.15121*t4772 + 0.15121*t4793 + t4553*t6228 + t5190*t6241 + t2873*(-1.*t2179*t4702 - 1.*t2225*t4725 - 1.*t1819*t4845 - 1.*t2035*t4861 + t6797 + t6800) + t1387*(t1819*t4446 + t2035*t4463 + t1032*t4702 + t6785 + t6790 + t4725*t923))*var2[15] + (-0.038749*t4754 + 0.281211*t4767 + 1.e-6*(t4486 + 4.00000000026e-6*t592) - 1.*t4551*t6271 - 1.*t4416*t6281 - 1.*t1197*t6835 + 7.e-6*(t4480*t6271 + t4443*t6281 + t1375*t6835 + t665*t6854) + 4.e-6*(-1.*t4511*t6271 - 1.*t4400*t6281 - 1.*t1299*t6835 - 1.*t6854*t838) - 1.*t6854*t909)*var2[16])*var2[17] + t3380*var3[0] + t6392*var3[1] + t6382*var3[2] + t6494*var3[3] + t6429*var3[4] + t6319*var3[5] + t6244*var3[15] + t6303*var3[16] + 0.3000000410492048*var3[17] - 1.*var4[1];
  p_output1[2]=t118*t2612*t3111 + t215*t7241 + t2649*t7246 + t2660*t7254 + t2692*t7261 + t2737*t7299 + t2769*t7309 + t2800*t7318 - 0.80315*(t1345*t7299 + t1288*t7309 + t1118*t7318) - 0.038576*(t1775*t7299 + t1584*t7309 + t1537*t7318) - 0.148715*(t610*t7299 + t7309*t793 + t7318*t898) + var1[2] + t3366*var2[0] + t7292*var2[1] + t7286*var2[2] + t7331*var2[3] + ((-1.*t3060*t3176 - 1.*t3111*t3489)*var2[1] + t7292*var2[2])*var2[3] + t7275*var2[4] + (t3489*var2[0] - 1.*t3060*t4359*var2[1] + t3111*t4359*var2[2] + (t3380*(-1.*t3126*t3418 - 1.*t2962*t3460 - 1.*t3460*t4241 - 1.*t3126*t4281) + t2962*(t3418*t3443 + t3380*t3460 + t3443*t4281 + t3460*t4299) + t3443*t7323 + t3126*t7328)*var2[3])*var2[4] + t7236*var2[5] + (t118*t4069*var2[0] + (t3111*t3272 + t2616*t3060*t4069)*var2[1] + (t3060*t3272 - 1.*t2616*t3111*t4069)*var2[2] + (t118*t4029*t7323 + t118*t3999*t7328 + t3380*(-1.*t118*t3418*t3999 + t2616*t3460*t3999 - 1.*t118*t2962*t4037 + t2616*t3126*t4037 + t7480 + t7482) + t2962*(t118*t3418*t4029 - 1.*t2616*t3460*t4029 + t118*t3380*t4037 - 1.*t2616*t3443*t4037 + t7486 + t7488))*var2[3] + (t3195*t7265 + t2943*t7270 + t3235*(-1.*t3214*t3999 - 1.*t2943*t4037 + t7480 + t7482) + t3098*(t3214*t4029 + t3195*t4037 + t7486 + t7488))*var2[4])*var2[5] + t7177*var2[15] + (t118*t3883*var2[0] + (t3111*t3740 + t2616*t3060*t3883)*var2[1] + (t3060*t3740 - 1.*t2616*t3111*t3883)*var2[2] + (t118*t3783*t7323 + t118*t3677*t7328 + t3380*(-1.*t118*t3418*t3677 + t2616*t3460*t3677 - 1.*t118*t2962*t3839 + t2616*t3126*t3839 + t7401 + t7404) + t2962*(t118*t3418*t3783 - 1.*t2616*t3460*t3783 + t118*t3380*t3839 - 1.*t2616*t3443*t3839 + t7408 + t7410))*var2[3] + (t3800*t7265 + t3686*t7270 + t3235*(-1.*t3214*t3677 - 1.*t2943*t3839 + t7401 + t7404) + t3098*(t3214*t3783 + t3195*t3839 + t7408 + t7410))*var2[4] + (t2873*(t2500*t2523 + t2523*t3545 + t2545*t3583 + t2468*t3608) + t2061*(-1.*t2500*t2906 - 1.*t2906*t3545 - 1.*t2938*t3608 - 1.*t2545*t3672))*var2[5])*var2[15] + t7218*var2[16] + (t6101*var2[0] + (t3111*t6003 - 1.*t3060*t6166)*var2[1] + (t3060*t6003 + t3111*t6166)*var2[2] + (t6106*t7323 + t5958*t7328 + t3380*(-1.*t3418*t5958 - 1.*t3460*t5980 - 1.*t2962*t6122 - 1.*t3126*t6136 + t7810 + t7811) + t2962*(t3418*t6106 + t3460*t6113 + t3380*t6122 + t3443*t6136 + t7820 + t7821))*var2[3] + (t6024*t7265 + t5971*t7270 + t3235*(-1.*t3214*t5956 - 1.*t2943*t6063 + t7757 + t7759 + t7810 + t7811) + t3098*(t3214*t6010 + t3195*t6063 + t7769 + t7774 + t7820 + t7821))*var2[4] + (t5777*t7225 + t5931*t7234 + t2061*(-1.*t2906*t5866 - 1.*t2938*t5880 - 1.*t2545*t5940 - 1.*t2500*t5952 + t7757 + t7759) + t2873*(t2500*t5851 + t2545*t5856 + t2523*t5866 + t2468*t5880 + t7769 + t7774))*var2[5] + (0.15121*t5810 - 0.15121*t5827 + t5777*t7169 + t5931*t7175 + t2873*(t1819*t5666 + t1904*t5687 + t2035*t5699 + t1466*t5768 + t7769 + t7774) + t2061*(-1.*t1819*t5596 - 1.*t2035*t5634 - 1.*t1032*t5768 + t7757 + t7759 - 1.*t5687*t923))*var2[15])*var2[16] - 2.826290000000002e-7*var2[17] + (t5424*var2[0] + (t3111*t5333 - 1.*t3060*t5516)*var2[1] + (t3060*t5333 + t3111*t5516)*var2[2] + (t5470*t7323 + t5229*t7328 + t3380*(-1.*t3418*t5229 - 1.*t3460*t5289 - 1.*t2962*t5442 - 1.*t3126*t5455 + t7688 + t7690) + t2962*(t3380*t5442 + t3443*t5455 + t3418*t5470 + t3460*t5483 + t7703 + t7706))*var2[3] + (t5374*t7265 + t5257*t7270 + t3235*(-1.*t3214*t5225 - 1.*t2943*t5346 + t7571 + t7576 + t7688 + t7690) + t3098*(t3195*t5346 + t3214*t5368 + t7581 + t7584 + t7703 + t7706))*var2[4] + (t4821*t7225 + t5190*t7234 + t2061*(-1.*t2938*t5107 - 1.*t2906*t5115 - 1.*t2545*t5202 - 1.*t2500*t5215 + t7571 + t7576) + t2873*(t2468*t5107 + t2523*t5115 + t2500*t5133 + t2545*t5143 + t7581 + t7584))*var2[5] + (-0.15121*t4845 + 0.15121*t4861 + t4821*t7169 + t5190*t7175 + t2873*(t1466*t4702 + t1904*t4725 + t1819*t4772 + t2035*t4793 + t7581 + t7584) + t2061*(-1.*t1819*t4446 - 1.*t2035*t4463 - 1.*t1032*t4702 + t7571 + t7576 - 1.*t4725*t923))*var2[15] + (-0.038749*t4480 + 0.281211*t4511 + 1.e-6*(-7.e-6*t4518 + 4.e-6*t4565 - 6.5e-11*t592) - 1.*t4750*t7197 - 1.*t4416*t7205 - 1.*t1436*t7624 + 7.e-6*(t4754*t7197 + t4443*t7205 + t665*t7614 + t1451*t7624) + 4.e-6*(-1.*t4767*t7197 - 1.*t4400*t7205 - 1.*t1398*t7624 - 1.*t7614*t838) - 1.*t7614*t909)*var2[16])*var2[17] + t3366*var3[0] + t7292*var3[1] + t7286*var3[2] + t7331*var3[3] + t7275*var3[4] + t7236*var3[5] + t7177*var3[15] + t7218*var3[16] - 2.826290000000002e-7*var3[17] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void ddh_RrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
