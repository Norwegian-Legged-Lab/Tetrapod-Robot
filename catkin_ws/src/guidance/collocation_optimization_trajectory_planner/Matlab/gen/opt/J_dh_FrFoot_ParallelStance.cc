/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:10 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t746;
  double t783;
  double t791;
  double t843;
  double t442;
  double t1342;
  double t834;
  double t1003;
  double t1040;
  double t1630;
  double t1655;
  double t1457;
  double t1461;
  double t1546;
  double t1557;
  double t1588;
  double t1701;
  double t1706;
  double t1751;
  double t1905;
  double t510;
  double t599;
  double t731;
  double t1074;
  double t1591;
  double t1810;
  double t1886;
  double t288;
  double t1907;
  double t1913;
  double t1953;
  double t2061;
  double t2108;
  double t2175;
  double t239;
  double t2381;
  double t2471;
  double t2521;
  double t1902;
  double t2226;
  double t2349;
  double t2541;
  double t2602;
  double t2378;
  double t2558;
  double t2575;
  double t75;
  double t2608;
  double t2611;
  double t2615;
  double t2638;
  double t2669;
  double t2699;
  double t2707;
  double t2744;
  double t2766;
  double t2776;
  double t2835;
  double t2843;
  double t2953;
  double t2956;
  double t2957;
  double t2992;
  double t3003;
  double t3011;
  double t3014;
  double t3020;
  double t3021;
  double t3026;
  double t3034;
  double t3036;
  double t3053;
  double t3056;
  double t3073;
  double t3099;
  double t3138;
  double t3149;
  double t3160;
  double t3171;
  double t3191;
  double t3197;
  double t3198;
  double t3199;
  double t3243;
  double t3265;
  double t3267;
  double t3271;
  double t3286;
  double t3295;
  double t3296;
  double t3301;
  double t3304;
  double t3309;
  double t3440;
  double t3448;
  double t3452;
  double t3458;
  double t3459;
  double t3464;
  double t3466;
  double t3477;
  double t3480;
  double t3488;
  double t3490;
  double t3508;
  double t3516;
  double t3526;
  double t3529;
  double t3549;
  double t3588;
  double t3616;
  double t3627;
  double t3629;
  double t3631;
  double t3633;
  double t3635;
  double t3638;
  double t3639;
  double t3640;
  double t3661;
  double t3662;
  double t3668;
  double t3696;
  double t3700;
  double t3701;
  double t3708;
  double t3713;
  double t3245;
  double t3274;
  double t3282;
  double t3283;
  double t3300;
  double t3312;
  double t3314;
  double t3315;
  double t3335;
  double t3355;
  double t3362;
  double t3367;
  double t3380;
  double t3381;
  double t3383;
  double t3405;
  double t3412;
  double t3417;
  double t3431;
  double t3470;
  double t3503;
  double t3601;
  double t3605;
  double t3628;
  double t3665;
  double t3721;
  double t3731;
  double t3738;
  double t3752;
  double t3753;
  double t3754;
  double t3757;
  double t3759;
  double t3761;
  double t3807;
  double t3811;
  double t3012;
  double t3049;
  double t3103;
  double t3105;
  double t3181;
  double t3201;
  double t3205;
  double t3206;
  double t3219;
  double t3221;
  double t3227;
  double t3229;
  double t3230;
  double t3774;
  double t3778;
  double t3798;
  double t3766;
  double t3770;
  double t3771;
  double t3842;
  double t3853;
  double t3861;
  double t3608;
  double t3762;
  double t3763;
  double t3863;
  double t3128;
  double t3232;
  double t3241;
  double t3814;
  double t3884;
  double t3885;
  double t3893;
  double t3905;
  double t3960;
  double t3964;
  double t3968;
  double t3981;
  double t3931;
  double t3933;
  double t3936;
  double t3864;
  double t3876;
  double t3877;
  double t3894;
  double t4012;
  double t4025;
  double t4032;
  double t4066;
  double t4041;
  double t3937;
  double t4040;
  double t4043;
  double t4046;
  double t4052;
  double t4055;
  double t4100;
  double t4107;
  double t4108;
  double t4109;
  double t4114;
  double t3895;
  double t3896;
  double t3900;
  double t3942;
  double t3946;
  double t3947;
  double t4252;
  double t4253;
  double t4259;
  double t4265;
  double t4271;
  double t4281;
  double t4325;
  double t4332;
  double t4341;
  double t4345;
  double t4347;
  double t4355;
  double t4363;
  double t4387;
  double t4400;
  double t4409;
  double t4298;
  double t4299;
  double t4302;
  double t4290;
  double t4233;
  double t4240;
  double t4242;
  double t4070;
  double t4071;
  double t4079;
  double t4497;
  double t4501;
  double t4515;
  double t4442;
  double t4443;
  double t4444;
  double t4448;
  double t4449;
  double t4450;
  double t4433;
  double t4434;
  double t4135;
  double t4139;
  double t4166;
  double t4435;
  double t4453;
  double t4471;
  double t4472;
  double t4517;
  double t4530;
  double t4534;
  double t4538;
  double t4543;
  double t4664;
  double t4665;
  double t4666;
  double t4669;
  double t4672;
  double t4674;
  double t4676;
  double t4679;
  double t4709;
  double t4710;
  double t4728;
  double t4730;
  double t4733;
  double t4735;
  double t4739;
  double t4748;
  double t4751;
  double t4752;
  double t4756;
  double t4757;
  double t4800;
  double t4805;
  double t4807;
  double t4815;
  double t4822;
  double t4826;
  double t4737;
  double t4762;
  double t4768;
  double t4776;
  double t4781;
  double t4782;
  double t4791;
  double t4792;
  double t4794;
  double t4784;
  double t4786;
  double t4898;
  double t4795;
  double t4850;
  double t4962;
  double t4965;
  double t4966;
  double t4970;
  double t4974;
  double t4975;
  double t4978;
  double t4981;
  double t4695;
  double t4699;
  double t4701;
  double t4670;
  double t4681;
  double t4691;
  double t4832;
  double t4835;
  double t4838;
  double t4814;
  double t4828;
  double t4829;
  double t4848;
  double t5042;
  double t5050;
  double t5051;
  double t4790;
  double t5031;
  double t5034;
  double t5037;
  double t5063;
  double t5065;
  double t5067;
  double t5071;
  double t5072;
  double t5073;
  double t5010;
  double t5013;
  double t5014;
  double t4994;
  double t4996;
  double t5003;
  double t4988;
  double t4989;
  double t5009;
  double t5015;
  double t5016;
  double t5103;
  double t5105;
  double t5109;
  double t5119;
  double t5122;
  double t5127;
  double t5083;
  double t5085;
  double t5089;
  double t5057;
  double t5059;
  double t5060;
  double t5055;
  double t5075;
  double t5165;
  double t5166;
  double t5170;
  double t5081;
  double t5095;
  double t5146;
  double t5147;
  double t5155;
  double t5195;
  double t5201;
  double t5208;
  double t5212;
  double t5213;
  double t5214;
  double t5282;
  double t5283;
  double t5284;
  double t5294;
  double t5295;
  double t5297;
  double t5299;
  double t5301;
  double t5286;
  double t5298;
  double t5303;
  double t5304;
  double t5309;
  double t5318;
  double t5320;
  double t5330;
  double t5347;
  double t5348;
  double t5350;
  double t5356;
  double t5358;
  double t5361;
  double t5367;
  double t5385;
  double t5349;
  double t5359;
  double t5388;
  double t5390;
  double t5400;
  double t5411;
  double t5412;
  double t5413;
  double t4870;
  double t4873;
  double t4877;
  double t5456;
  double t5457;
  double t5460;
  double t5462;
  double t5306;
  double t5332;
  double t5334;
  double t5341;
  double t5342;
  double t5344;
  double t5448;
  double t5449;
  double t5451;
  double t5453;
  double t5454;
  double t4951;
  double t4956;
  double t4957;
  double t4959;
  double t5492;
  double t5493;
  double t5499;
  double t5470;
  double t5540;
  double t5545;
  double t5547;
  double t5548;
  double t5549;
  double t5552;
  double t5554;
  double t5560;
  double t5562;
  double t5565;
  double t5556;
  double t5557;
  double t5558;
  double t5491;
  double t5497;
  double t5501;
  double t5502;
  double t5507;
  double t5511;
  double t5512;
  double t5513;
  double t5604;
  double t5606;
  double t5607;
  double t5596;
  double t5599;
  double t5602;
  double t5591;
  double t5592;
  double t5593;
  double t5594;
  double t5603;
  double t5609;
  double t5611;
  double t5616;
  double t5618;
  double t5620;
  double t5623;
  double t5628;
  double t5630;
  double t5424;
  double t5438;
  double t5441;
  double t5395;
  double t5417;
  double t5418;
  double t5463;
  double t5686;
  double t5709;
  double t5715;
  double t5726;
  double t5730;
  double t5744;
  double t5754;
  double t5755;
  double t5767;
  double t5718;
  double t5788;
  double t5789;
  double t5790;
  double t5771;
  double t5782;
  double t5813;
  double t5815;
  double t5821;
  double t5827;
  double t5835;
  double t5837;
  double t5846;
  double t5855;
  double t5857;
  double t2933;
  double t2937;
  double t4628;
  double t4630;
  double t4639;
  double t4891;
  double t4901;
  double t4903;
  double t4904;
  double t5981;
  double t5985;
  double t5986;
  double t5990;
  double t3913;
  double t3914;
  double t3916;
  double t5902;
  double t5904;
  double t5909;
  double t3821;
  double t3839;
  double t3841;
  double t2972;
  double t6057;
  double t6112;
  double t6150;
  double t6162;
  double t6075;
  double t6079;
  double t6080;
  double t6205;
  double t6211;
  double t6113;
  double t6114;
  double t6116;
  double t6196;
  double t6197;
  double t6199;
  double t6226;
  double t6227;
  double t6236;
  double t6369;
  double t6374;
  double t6395;
  double t6396;
  double t6511;
  double t6545;
  double t5233;
  double t5235;
  double t5237;
  double t6543;
  double t6513;
  double t4990;
  double t5017;
  double t5029;
  double t6759;
  double t6767;
  double t5185;
  double t5188;
  double t5189;
  double t6773;
  double t6776;
  double t6554;
  double t6572;
  double t6583;
  double t6876;
  double t6631;
  double t6632;
  double t6635;
  double t6637;
  double t6895;
  double t6936;
  double t6937;
  double t6939;
  double t6945;
  double t6946;
  double t6955;
  double t6956;
  double t6967;
  double t6968;
  double t6972;
  double t6963;
  double t6964;
  double t6965;
  double t5876;
  double t5878;
  double t5884;
  double t6873;
  double t7081;
  double t5595;
  double t5612;
  double t5613;
  double t7116;
  double t7146;
  double t6031;
  double t6033;
  double t6463;
  double t6473;
  double t6491;
  double t6591;
  double t6595;
  double t6607;
  double t6609;
  double t7282;
  double t7284;
  double t7288;
  double t7295;
  double t7417;
  double t7428;
  double t7456;
  double t7457;
  double t7418;
  double t7419;
  double t7420;
  double t7471;
  double t7472;
  double t7429;
  double t7430;
  double t7431;
  double t7464;
  double t7466;
  double t7467;
  double t7480;
  double t7485;
  double t7496;
  double t7646;
  double t7653;
  double t7660;
  double t7661;
  double t7778;
  double t7814;
  double t7813;
  double t7780;
  double t7922;
  double t7930;
  double t7936;
  double t7939;
  double t7799;
  double t7802;
  double t7803;
  double t7817;
  double t7821;
  double t7822;
  double t7840;
  double t7841;
  double t7842;
  double t7843;
  double t7855;
  double t7857;
  double t7859;
  double t7860;
  double t8001;
  double t8010;
  double t8071;
  double t8072;
  double t8073;
  double t8076;
  double t8078;
  double t8079;
  double t8081;
  double t8062;
  double t8063;
  double t8064;
  double t8065;
  double t8066;
  double t8067;
  double t8069;
  double t8050;
  double t8052;
  double t8053;
  double t8060;
  double t8045;
  double t8046;
  double t8047;
  double t8048;
  double t8011;
  double t8000;
  double t8097;
  double t8099;
  double t8113;
  double t8115;
  double t7359;
  double t7364;
  double t7371;
  t746 = Cos(var1[11]);
  t783 = -1.*t746;
  t791 = 1. + t783;
  t843 = Sin(var1[11]);
  t442 = Cos(var1[10]);
  t1342 = Sin(var1[10]);
  t834 = -1.7408e-8*t791;
  t1003 = -3.999964e-6*t843;
  t1040 = t834 + t1003;
  t1630 = -1.*t442;
  t1655 = 1. + t1630;
  t1457 = -1.000000000016*t791;
  t1461 = 1. + t1457;
  t1546 = 0.999991*t1461;
  t1557 = 0.004352*t843;
  t1588 = t1546 + t1557;
  t1701 = -0.004352*t746;
  t1706 = 0.999991*t843;
  t1751 = t1701 + t1706;
  t1905 = Sin(var1[9]);
  t510 = -1. + t442;
  t599 = 1.6e-11*t510;
  t731 = 1. + t599;
  t1074 = t731*t1040;
  t1591 = -4.e-6*t1342*t1588;
  t1810 = 4.e-6*t1655*t1751;
  t1886 = 0. + t1074 + t1591 + t1810;
  t288 = Cos(var1[9]);
  t1907 = 4.e-6*t1342*t1040;
  t1913 = -1.000000000016*t1655;
  t1953 = 1. + t1913;
  t2061 = t1953*t1588;
  t2108 = -1.*t1342*t1751;
  t2175 = 0. + t1907 + t2061 + t2108;
  t239 = Cos(var1[5]);
  t2381 = -1.*t1905*t1886;
  t2471 = t288*t2175;
  t2521 = 0. + t2381 + t2471;
  t1902 = t288*t1886;
  t2226 = t1905*t2175;
  t2349 = 0. + t1902 + t2226;
  t2541 = Sin(var1[5]);
  t2602 = Cos(var1[3]);
  t2378 = t239*t2349;
  t2558 = t2521*t2541;
  t2575 = 0. + t2378 + t2558;
  t75 = Sin(var1[3]);
  t2608 = Cos(var1[4]);
  t2611 = 4.e-6*t1655*t1040;
  t2615 = t1342*t1588;
  t2638 = t442*t1751;
  t2669 = 0. + t2611 + t2615 + t2638;
  t2699 = t2608*t2669;
  t2707 = Sin(var1[4]);
  t2744 = t239*t2521;
  t2766 = -1.*t2349*t2541;
  t2776 = 0. + t2744 + t2766;
  t2835 = -1.*t2707*t2776;
  t2843 = 0. + t2699 + t2835;
  t2953 = -1.*t2669*t2707;
  t2956 = -1.*t2608*t2776;
  t2957 = t2953 + t2956;
  t2992 = 0.004352*t1461;
  t3003 = -0.9999910000159999*t843;
  t3011 = t2992 + t3003;
  t3014 = 1.6e-11*t791;
  t3020 = -1. + t3014;
  t3021 = 4.e-6*t3020;
  t3026 = 3.999964e-6*t791;
  t3034 = -1.7408e-8*t843;
  t3036 = t3021 + t3026 + t3034;
  t3053 = -1. + t746;
  t3056 = 1.6e-11*t3053;
  t3073 = 0.999991*t746;
  t3099 = t3056 + t3073 + t1557;
  t3138 = -4.e-6*t1342*t3011;
  t3149 = t731*t3036;
  t3160 = 4.e-6*t1655*t3099;
  t3171 = 0. + t3138 + t3149 + t3160;
  t3191 = t1953*t3011;
  t3197 = 4.e-6*t1342*t3036;
  t3198 = -1.*t1342*t3099;
  t3199 = 0. + t3191 + t3197 + t3198;
  t3243 = -1. + t3014 + t3056;
  t3265 = 4.e-6*t3053;
  t3267 = -4.e-6*t746;
  t3271 = t3265 + t3267;
  t3286 = t731*t3243;
  t3295 = 4.e-6*t1655*t3271;
  t3296 = t3286 + t3295;
  t3301 = 4.e-6*t3243*t1342;
  t3304 = -1.*t3271*t1342;
  t3309 = t3301 + t3304;
  t3440 = -1.26e-8*var1[11];
  t3448 = 1. + t3056;
  t3452 = -0.14871*t3448;
  t3458 = -1.64779999997447e-7*t791;
  t3459 = -1.59556e-7*t3053;
  t3464 = -1.199987999968e-6*t843;
  t3466 = t3440 + t3452 + t3458 + t3459 + t3464;
  t3477 = 0.803147*t1461;
  t3480 = 0.50315000001605*t791;
  t3488 = 0.00130540515936178*t843;
  t3490 = t3477 + t3480 + t3488;
  t3508 = -5.04e-14*var1[11];
  t3516 = -0.03988959484*t791;
  t3526 = 6.38224e-13*t3053;
  t3529 = -0.041195*t746;
  t3549 = 0.299996999992*t843;
  t3588 = t3508 + t3516 + t3526 + t3529 + t3549;
  t3616 = -1.*t288;
  t3627 = 1. + t3616;
  t3629 = -0.15121*t1905;
  t3631 = -1.2484e-7*var1[10];
  t3633 = 2.479936e-18*t1655;
  t3635 = -1.54996e-7*t510;
  t3638 = 1.124840000016e-6*t1342;
  t3639 = t731*t3466;
  t3640 = -4.e-6*t1342*t3490;
  t3661 = 4.e-6*t1655*t3588;
  t3662 = t3631 + t3633 + t3635 + t3638 + t3639 + t3640 + t3661;
  t3668 = 0.281210000008499*t1655;
  t3696 = -0.03874900000062*t1342;
  t3700 = 4.e-6*t1342*t3466;
  t3701 = t1953*t3490;
  t3708 = -1.*t1342*t3588;
  t3713 = t3668 + t3696 + t3700 + t3701 + t3708;
  t3245 = 4.e-6*t1655*t3243;
  t3274 = t442*t3271;
  t3282 = t3245 + t3274;
  t3283 = t3282*t2608;
  t3300 = -1.*t3296*t1905;
  t3312 = t288*t3309;
  t3314 = t3300 + t3312;
  t3315 = t239*t3314;
  t3335 = t288*t3296;
  t3355 = t1905*t3309;
  t3362 = t3335 + t3355;
  t3367 = -1.*t3362*t2541;
  t3380 = t3315 + t3367;
  t3381 = -1.*t2707*t3380;
  t3383 = t3283 + t3381;
  t3405 = -4.9936e-13*var1[10];
  t3412 = -0.038749*t1655;
  t3417 = 6.19984e-13*t510;
  t3431 = -0.281210000004*t1342;
  t3470 = 4.e-6*t1655*t3466;
  t3503 = t1342*t3490;
  t3601 = t442*t3588;
  t3605 = 0. + t3405 + t3412 + t3417 + t3431 + t3470 + t3503 + t3601;
  t3628 = 0.15121*t3627;
  t3665 = -1.*t1905*t3662;
  t3721 = t288*t3713;
  t3731 = t3628 + t3629 + t3665 + t3721;
  t3738 = t239*t3731;
  t3752 = -0.15121*t3627;
  t3753 = t288*t3662;
  t3754 = t1905*t3713;
  t3757 = t3752 + t3629 + t3753 + t3754;
  t3759 = -1.*t3757*t2541;
  t3761 = 0. + t3738 + t3759;
  t3807 = t2608*t3605;
  t3811 = -1.*t2707*t3761;
  t3012 = t1342*t3011;
  t3049 = 4.e-6*t1655*t3036;
  t3103 = t442*t3099;
  t3105 = 0. + t3012 + t3049 + t3103;
  t3181 = -1.*t1905*t3171;
  t3201 = t288*t3199;
  t3205 = 0. + t3181 + t3201;
  t3206 = t239*t3205;
  t3219 = t288*t3171;
  t3221 = t1905*t3199;
  t3227 = 0. + t3219 + t3221;
  t3229 = -1.*t3227*t2541;
  t3230 = 0. + t3206 + t3229;
  t3774 = t3282*t2707;
  t3778 = t2608*t3380;
  t3798 = t3774 + t3778;
  t3766 = t3605*t2707;
  t3770 = t2608*t3761;
  t3771 = 0. + t3766 + t3770;
  t3842 = 0. + t3807 + t3811;
  t3853 = t2608*t3105;
  t3861 = -1.*t2707*t3230;
  t3608 = -1.*t3605*t2707;
  t3762 = -1.*t2608*t3761;
  t3763 = t3608 + t3762;
  t3863 = t3853 + t3861;
  t3128 = t3105*t2707;
  t3232 = t2608*t3230;
  t3241 = 0. + t3128 + t3232;
  t3814 = t3807 + t3811;
  t3884 = t239*t3757;
  t3885 = t3731*t2541;
  t3893 = 0. + t3884 + t3885;
  t3905 = 0. + t3853 + t3861;
  t3960 = -1.*t239*t2349;
  t3964 = -1.*t2521*t2541;
  t3968 = t3960 + t3964;
  t3981 = t2744 + t2766;
  t3931 = t239*t3227;
  t3933 = t3205*t2541;
  t3936 = 0. + t3931 + t3933;
  t3864 = t239*t3362;
  t3876 = t3314*t2541;
  t3877 = t3864 + t3876;
  t3894 = t3877*t3893;
  t4012 = -1.*t239*t3757;
  t4025 = -1.*t3731*t2541;
  t4032 = t4012 + t4025;
  t4066 = t3206 + t3229;
  t4041 = t3738 + t3759;
  t3937 = -1.*t3936*t3893;
  t4040 = t3380*t3893;
  t4043 = t3877*t4041;
  t4046 = -1.*t239*t3362;
  t4052 = -1.*t3314*t2541;
  t4055 = t4046 + t4052;
  t4100 = -1.*t4066*t3893;
  t4107 = -1.*t3936*t4041;
  t4108 = -1.*t239*t3227;
  t4109 = -1.*t3205*t2541;
  t4114 = t4108 + t4109;
  t3895 = t3798*t3771;
  t3896 = t3383*t3842;
  t3900 = t3894 + t3895 + t3896;
  t3942 = -1.*t3241*t3771;
  t3946 = -1.*t3905*t3842;
  t3947 = t3937 + t3942 + t3946;
  t4252 = -0.15121*t288;
  t4253 = t4252 + t3629 + t3665 + t3721;
  t4259 = 0.15121*t1905;
  t4265 = -1.*t288*t3662;
  t4271 = -1.*t1905*t3713;
  t4281 = t4252 + t4259 + t4265 + t4271;
  t4325 = -1.*t288*t1886;
  t4332 = -1.*t1905*t2175;
  t4341 = t4325 + t4332;
  t4345 = t239*t4341;
  t4347 = t2381 + t2471;
  t4355 = -1.*t4347*t2541;
  t4363 = t4345 + t4355;
  t4387 = t239*t4347;
  t4400 = t4341*t2541;
  t4409 = t4387 + t4400;
  t4298 = -1.*t288*t3296;
  t4299 = -1.*t1905*t3309;
  t4302 = t4298 + t4299;
  t4290 = t3181 + t3201;
  t4233 = -1.*t288*t3171;
  t4240 = -1.*t1905*t3199;
  t4242 = t4233 + t4240;
  t4070 = t3282*t3605;
  t4071 = t3380*t3761;
  t4079 = t4070 + t3894 + t4071;
  t4497 = t239*t4290;
  t4501 = t4242*t2541;
  t4515 = t4497 + t4501;
  t4442 = t239*t4281;
  t4443 = -1.*t4253*t2541;
  t4444 = t4442 + t4443;
  t4448 = t239*t4253;
  t4449 = t4281*t2541;
  t4450 = t4448 + t4449;
  t4433 = t4302*t2541;
  t4434 = t3315 + t4433;
  t4135 = -1.*t3105*t3605;
  t4139 = -1.*t3230*t3761;
  t4166 = t4135 + t3937 + t4139;
  t4435 = t4434*t3893;
  t4453 = t3877*t4450;
  t4471 = t239*t4302;
  t4472 = t4471 + t4052;
  t4517 = -1.*t4515*t3893;
  t4530 = -1.*t3936*t4450;
  t4534 = t239*t4242;
  t4538 = -1.*t4290*t2541;
  t4543 = t4534 + t4538;
  t4664 = -1.000000000016*t1342*t3011;
  t4665 = 4.e-6*t442*t3036;
  t4666 = -1.*t442*t3099;
  t4669 = t4664 + t4665 + t4666;
  t4672 = -4.e-6*t442*t3011;
  t4674 = -1.6e-11*t1342*t3036;
  t4676 = 4.e-6*t1342*t3099;
  t4679 = t4672 + t4674 + t4676;
  t4709 = -0.03874900000062*t442;
  t4710 = 0.281210000008499*t1342;
  t4728 = 4.e-6*t442*t3466;
  t4730 = -1.000000000016*t1342*t3490;
  t4733 = -1.*t442*t3588;
  t4735 = t4709 + t4710 + t4728 + t4730 + t4733;
  t4739 = 1.124840000016e-6*t442;
  t4748 = 1.5499600000248e-7*t1342;
  t4751 = -1.6e-11*t1342*t3466;
  t4752 = -4.e-6*t442*t3490;
  t4756 = 4.e-6*t1342*t3588;
  t4757 = -1.2484e-7 + t4739 + t4748 + t4751 + t4752 + t4756;
  t4800 = 4.e-6*t442*t3243;
  t4805 = -1.*t442*t3271;
  t4807 = t4800 + t4805;
  t4815 = -1.6e-11*t3243*t1342;
  t4822 = 4.e-6*t3271*t1342;
  t4826 = t4815 + t4822;
  t4737 = t1905*t4735;
  t4762 = t288*t4757;
  t4768 = t4737 + t4762;
  t4776 = t288*t4735;
  t4781 = -1.*t1905*t4757;
  t4782 = t4776 + t4781;
  t4791 = -0.281210000004*t442;
  t4792 = t442*t3490;
  t4794 = -4.9936e-13 + t4791 + t3696 + t3700 + t4792 + t3708;
  t4784 = t442*t3011;
  t4786 = t4784 + t3197 + t3198;
  t4898 = t3405 + t3412 + t3417 + t3431 + t3470 + t3503 + t3601;
  t4795 = -1.*t3105*t4794;
  t4850 = t3282*t4794;
  t4962 = 4.e-6*t442*t1040;
  t4965 = -1.000000000016*t1342*t1588;
  t4966 = -1.*t442*t1751;
  t4970 = t4962 + t4965 + t4966;
  t4974 = -1.6e-11*t1342*t1040;
  t4975 = -4.e-6*t442*t1588;
  t4978 = 4.e-6*t1342*t1751;
  t4981 = t4974 + t4975 + t4978;
  t4695 = t1905*t4669;
  t4699 = t288*t4679;
  t4701 = t4695 + t4699;
  t4670 = t288*t4669;
  t4681 = -1.*t1905*t4679;
  t4691 = t4670 + t4681;
  t4832 = t4807*t1905;
  t4835 = t288*t4826;
  t4838 = t4832 + t4835;
  t4814 = t288*t4807;
  t4828 = -1.*t1905*t4826;
  t4829 = t4814 + t4828;
  t4848 = t3309*t3605;
  t5042 = t239*t4838;
  t5050 = t4829*t2541;
  t5051 = t5042 + t5050;
  t4790 = -1.*t4786*t3605;
  t5031 = t239*t4701;
  t5034 = t4691*t2541;
  t5037 = t5031 + t5034;
  t5063 = t239*t4782;
  t5065 = -1.*t4768*t2541;
  t5067 = t5063 + t5065;
  t5071 = t239*t4768;
  t5072 = t4782*t2541;
  t5073 = t5071 + t5072;
  t5010 = t1905*t4970;
  t5013 = t288*t4981;
  t5014 = t5010 + t5013;
  t4994 = t288*t4970;
  t4996 = -1.*t1905*t4981;
  t5003 = t4994 + t4996;
  t4988 = t442*t1588;
  t4989 = t1907 + t4988 + t2108;
  t5009 = t239*t5003;
  t5015 = -1.*t5014*t2541;
  t5016 = t5009 + t5015;
  t5103 = t239*t5014;
  t5105 = t5003*t2541;
  t5109 = t5103 + t5105;
  t5119 = t2608*t4989;
  t5122 = -1.*t2707*t5016;
  t5127 = t5119 + t5122;
  t5083 = t239*t4691;
  t5085 = -1.*t4701*t2541;
  t5089 = t5083 + t5085;
  t5057 = t239*t4829;
  t5059 = -1.*t4838*t2541;
  t5060 = t5057 + t5059;
  t5055 = t5051*t3893;
  t5075 = t3877*t5073;
  t5165 = t3309*t2707;
  t5166 = t2608*t5060;
  t5170 = t5165 + t5166;
  t5081 = -1.*t5037*t3893;
  t5095 = -1.*t3936*t5073;
  t5146 = t4786*t2707;
  t5147 = t2608*t5089;
  t5155 = t5146 + t5147;
  t5195 = t4794*t2707;
  t5201 = t2608*t5067;
  t5208 = t5195 + t5201;
  t5212 = t2608*t4794;
  t5213 = -1.*t2707*t5067;
  t5214 = t5212 + t5213;
  t5282 = 0.00130540515936178*t746;
  t5283 = -0.2999969999968001*t843;
  t5284 = t5282 + t5283;
  t5294 = -1.199987999968e-6*t746;
  t5295 = -5.2216206374471e-9*t843;
  t5297 = -1.26e-8 + t5294 + t5295;
  t5299 = 0.299996999992*t746;
  t5301 = -5.04e-14 + t5299 + t3488;
  t5286 = -4.e-6*t1342*t5284;
  t5298 = t731*t5297;
  t5303 = 4.e-6*t1655*t5301;
  t5304 = t5286 + t5298 + t5303;
  t5309 = t1953*t5284;
  t5318 = 4.e-6*t1342*t5297;
  t5320 = -1.*t1342*t5301;
  t5330 = t5309 + t5318 + t5320;
  t5347 = 0.004352*t746;
  t5348 = t5347 + t3003;
  t5350 = -0.9999910000159999*t746;
  t5356 = -0.00435200000006963*t843;
  t5358 = t5350 + t5356;
  t5361 = -1.7408e-8*t746;
  t5367 = 3.999964000064e-6*t843;
  t5385 = t5361 + t5367;
  t5349 = 4.e-6*t1655*t5348;
  t5359 = -4.e-6*t1342*t5358;
  t5388 = t731*t5385;
  t5390 = t5349 + t5359 + t5388;
  t5400 = -1.*t1342*t5348;
  t5411 = t1953*t5358;
  t5412 = 4.e-6*t1342*t5385;
  t5413 = t5400 + t5411 + t5412;
  t4870 = t3314*t3731;
  t4873 = t3362*t3757;
  t4877 = t4870 + t4873 + t4070;
  t5456 = t442*t5348;
  t5457 = t1342*t5358;
  t5460 = 4.e-6*t1655*t5385;
  t5462 = t5456 + t5457 + t5460;
  t5306 = -1.*t1905*t5304;
  t5332 = t288*t5330;
  t5334 = t5306 + t5332;
  t5341 = t288*t5304;
  t5342 = t1905*t5330;
  t5344 = t5341 + t5342;
  t5448 = t1342*t5284;
  t5449 = 4.e-6*t1655*t5297;
  t5451 = t442*t5301;
  t5453 = t5448 + t5449 + t5451;
  t5454 = -1.*t5453*t3105;
  t4951 = t3296*t3662;
  t4956 = t3282*t4898;
  t4957 = t3309*t3713;
  t4959 = t4951 + t4956 + t4957;
  t5492 = -3.999964e-6*t746;
  t5493 = t5492 + t3034;
  t5499 = t3073 + t1557;
  t5470 = t3282*t5453;
  t5540 = -1.*t3011*t5284;
  t5545 = -1.*t3036*t5297;
  t5547 = -1.*t3466*t5385;
  t5548 = -1.*t5358*t3490;
  t5549 = -1.*t5301*t3099;
  t5552 = -1.*t5348*t3588;
  t5554 = t5540 + t5545 + t5547 + t5548 + t5549 + t5552;
  t5560 = t3243*t5297;
  t5562 = t3271*t5301;
  t5565 = t5560 + t5562;
  t5556 = t3243*t3466;
  t5557 = t3271*t3588;
  t5558 = t5556 + t5557;
  t5491 = -4.e-6*t1342*t5348;
  t5497 = t731*t5493;
  t5501 = 4.e-6*t1655*t5499;
  t5502 = t5491 + t5497 + t5501;
  t5507 = t1953*t5348;
  t5511 = 4.e-6*t1342*t5493;
  t5512 = -1.*t1342*t5499;
  t5513 = t5507 + t5511 + t5512;
  t5604 = t288*t5502;
  t5606 = t1905*t5513;
  t5607 = t5604 + t5606;
  t5596 = -1.*t1905*t5502;
  t5599 = t288*t5513;
  t5602 = t5596 + t5599;
  t5591 = t1342*t5348;
  t5592 = 4.e-6*t1655*t5493;
  t5593 = t442*t5499;
  t5594 = t5591 + t5592 + t5593;
  t5603 = t239*t5602;
  t5609 = -1.*t5607*t2541;
  t5611 = t5603 + t5609;
  t5616 = t239*t5607;
  t5618 = t5602*t2541;
  t5620 = t5616 + t5618;
  t5623 = t2608*t5594;
  t5628 = -1.*t2707*t5611;
  t5630 = t5623 + t5628;
  t5424 = t288*t5390;
  t5438 = t1905*t5413;
  t5441 = t5424 + t5438;
  t5395 = -1.*t1905*t5390;
  t5417 = t288*t5413;
  t5418 = t5395 + t5417;
  t5463 = -1.*t5462*t3605;
  t5686 = t239*t5344;
  t5709 = t5334*t2541;
  t5715 = t5686 + t5709;
  t5726 = t239*t5334;
  t5730 = -1.*t5344*t2541;
  t5744 = t5726 + t5730;
  t5754 = t239*t5441;
  t5755 = t5418*t2541;
  t5767 = t5754 + t5755;
  t5718 = t3877*t5715;
  t5788 = t239*t5418;
  t5789 = -1.*t5441*t2541;
  t5790 = t5788 + t5789;
  t5771 = -1.*t5715*t3936;
  t5782 = -1.*t5767*t3893;
  t5813 = t5453*t2707;
  t5815 = t2608*t5744;
  t5821 = t5813 + t5815;
  t5827 = t2608*t5453;
  t5835 = -1.*t2707*t5744;
  t5837 = t5827 + t5835;
  t5846 = t5462*t2707;
  t5855 = t2608*t5790;
  t5857 = t5846 + t5855;
  t2933 = t2602*t2575;
  t2937 = -1.*t75*t2843;
  t4628 = -1.*t3205*t3731;
  t4630 = -1.*t3227*t3757;
  t4639 = t4628 + t4630 + t4135;
  t4891 = -1.*t3171*t3662;
  t4901 = -1.*t3105*t4898;
  t4903 = -1.*t3199*t3713;
  t4904 = t4891 + t4901 + t4903;
  t5981 = -1.*t3466*t3036;
  t5985 = -1.*t3011*t3490;
  t5986 = -1.*t3099*t3588;
  t5990 = t5981 + t5985 + t5986;
  t3913 = -1.*t3105*t2707;
  t3914 = -1.*t2608*t3230;
  t3916 = t3913 + t3914;
  t5902 = t2669*t2707;
  t5904 = t2608*t2776;
  t5909 = 0. + t5902 + t5904;
  t3821 = -1.*t3282*t2707;
  t3839 = -1.*t2608*t3380;
  t3841 = t3821 + t3839;
  t2972 = t2699 + t2835;
  t6057 = -1.*t3877*t3893;
  t6112 = t3893*t2575;
  t6150 = -1.*t3380*t3893;
  t6162 = -1.*t3877*t4041;
  t6075 = -1.*t3798*t3771;
  t6079 = -1.*t3383*t3842;
  t6080 = t6057 + t6075 + t6079;
  t6205 = t4041*t2575;
  t6211 = t3893*t3981;
  t6113 = t3771*t5909;
  t6114 = t3842*t2843;
  t6116 = t6112 + t6113 + t6114;
  t6196 = -1.*t3282*t3605;
  t6197 = -1.*t3380*t3761;
  t6199 = t6196 + t6057 + t6197;
  t6226 = t3605*t2669;
  t6227 = t3761*t2776;
  t6236 = t6226 + t6112 + t6227;
  t6369 = -1.*t4434*t3893;
  t6374 = -1.*t3877*t4450;
  t6395 = t4450*t2575;
  t6396 = t3893*t4409;
  t6511 = t4794*t2669;
  t6545 = -1.*t3282*t4794;
  t5233 = t2608*t4786;
  t5235 = -1.*t2707*t5089;
  t5237 = t5233 + t5235;
  t6543 = -1.*t3309*t3605;
  t6513 = t3605*t4989;
  t4990 = t4989*t2707;
  t5017 = t2608*t5016;
  t5029 = t4990 + t5017;
  t6759 = -1.*t5051*t3893;
  t6767 = -1.*t3877*t5073;
  t5185 = t2608*t3309;
  t5188 = -1.*t2707*t5060;
  t5189 = t5185 + t5188;
  t6773 = t5073*t2575;
  t6776 = t3893*t5109;
  t6554 = -1.*t3314*t3731;
  t6572 = -1.*t3362*t3757;
  t6583 = t6554 + t6572 + t6196;
  t6876 = t5453*t2669;
  t6631 = -1.*t3296*t3662;
  t6632 = -1.*t3282*t4898;
  t6635 = -1.*t3309*t3713;
  t6637 = t6631 + t6632 + t6635;
  t6895 = -1.*t3282*t5453;
  t6936 = t3466*t5493;
  t6937 = t1040*t5297;
  t6939 = t5348*t3490;
  t6945 = t5284*t1588;
  t6946 = t5499*t3588;
  t6955 = t5301*t1751;
  t6956 = t6936 + t6937 + t6939 + t6945 + t6946 + t6955;
  t6967 = -1.*t3243*t5297;
  t6968 = -1.*t3271*t5301;
  t6972 = t6967 + t6968;
  t6963 = -1.*t3243*t3466;
  t6964 = -1.*t3271*t3588;
  t6965 = t6963 + t6964;
  t5876 = t2608*t5462;
  t5878 = -1.*t2707*t5790;
  t5884 = t5876 + t5878;
  t6873 = t5594*t3605;
  t7081 = -1.*t3877*t5715;
  t5595 = t5594*t2707;
  t5612 = t2608*t5611;
  t5613 = t5595 + t5612;
  t7116 = t5620*t3893;
  t7146 = t5715*t2575;
  t6031 = t2602*t3936;
  t6033 = -1.*t75*t3905;
  t6463 = t3731*t2521;
  t6473 = t3757*t2349;
  t6491 = t6463 + t6473 + t6226;
  t6591 = t3662*t1886;
  t6595 = t4898*t2669;
  t6607 = t3713*t2175;
  t6609 = t6591 + t6595 + t6607;
  t7282 = t1040*t3466;
  t7284 = t3490*t1588;
  t7288 = t3588*t1751;
  t7295 = t7282 + t7284 + t7288;
  t7417 = t3936*t3893;
  t7428 = -1.*t3893*t2575;
  t7456 = t4066*t3893;
  t7457 = t3936*t4041;
  t7418 = t3241*t3771;
  t7419 = t3905*t3842;
  t7420 = t7417 + t7418 + t7419;
  t7471 = -1.*t4041*t2575;
  t7472 = -1.*t3893*t3981;
  t7429 = -1.*t3771*t5909;
  t7430 = -1.*t3842*t2843;
  t7431 = t7428 + t7429 + t7430;
  t7464 = t3105*t3605;
  t7466 = t3230*t3761;
  t7467 = t7464 + t7417 + t7466;
  t7480 = -1.*t3605*t2669;
  t7485 = -1.*t3761*t2776;
  t7496 = t7480 + t7428 + t7485;
  t7646 = t4515*t3893;
  t7653 = t3936*t4450;
  t7660 = -1.*t4450*t2575;
  t7661 = -1.*t3893*t4409;
  t7778 = -1.*t4794*t2669;
  t7814 = t3105*t4794;
  t7813 = t4786*t3605;
  t7780 = -1.*t3605*t4989;
  t7922 = t5037*t3893;
  t7930 = t3936*t5073;
  t7936 = -1.*t5073*t2575;
  t7939 = -1.*t3893*t5109;
  t7799 = -1.*t3731*t2521;
  t7802 = -1.*t3757*t2349;
  t7803 = t7799 + t7802 + t7480;
  t7817 = t3205*t3731;
  t7821 = t3227*t3757;
  t7822 = t7817 + t7821 + t7464;
  t7840 = -1.*t3662*t1886;
  t7841 = -1.*t4898*t2669;
  t7842 = -1.*t3713*t2175;
  t7843 = t7840 + t7841 + t7842;
  t7855 = t3171*t3662;
  t7857 = t3105*t4898;
  t7859 = t3199*t3713;
  t7860 = t7855 + t7857 + t7859;
  t8001 = -1.*t5453*t2669;
  t8010 = t5453*t3105;
  t8071 = t3011*t5284;
  t8072 = t3036*t5297;
  t8073 = t3466*t5385;
  t8076 = t5358*t3490;
  t8078 = t5301*t3099;
  t8079 = t5348*t3588;
  t8081 = t8071 + t8072 + t8073 + t8076 + t8078 + t8079;
  t8062 = -1.*t3466*t5493;
  t8063 = -1.*t1040*t5297;
  t8064 = -1.*t5348*t3490;
  t8065 = -1.*t5284*t1588;
  t8066 = -1.*t5499*t3588;
  t8067 = -1.*t5301*t1751;
  t8069 = t8062 + t8063 + t8064 + t8065 + t8066 + t8067;
  t8050 = t3466*t3036;
  t8052 = t3011*t3490;
  t8053 = t3099*t3588;
  t8060 = t8050 + t8052 + t8053;
  t8045 = -1.*t1040*t3466;
  t8046 = -1.*t3490*t1588;
  t8047 = -1.*t3588*t1751;
  t8048 = t8045 + t8046 + t8047;
  t8011 = t5462*t3605;
  t8000 = -1.*t5594*t3605;
  t8097 = t5715*t3936;
  t8099 = t5767*t3893;
  t8113 = -1.*t5620*t3893;
  t8115 = -1.*t5715*t2575;
  t7359 = t2602*t3877;
  t7364 = -1.*t75*t3383;
  t7371 = t7359 + t7364;
  p_output1[0]=(-1.*t2602*t2843 - 1.*t2575*t75)*var2[1] + (t2933 + t2937)*var2[2];
  p_output1[1]=t2972*var2[0] - 1.*t2957*t75*var2[1] + t2602*t2957*var2[2] + (t3241*(t3383*t3763 + t3383*t3771 + t3798*t3814 + t3841*t3842) + t3863*t3900 + t3798*(-1.*t3241*t3814 - 1.*t3771*t3863 - 1.*t3763*t3905 - 1.*t3842*t3916) + t3383*t3947)*var2[3];
  p_output1[2]=t2608*t3968*var2[0] + (t2602*t3981 + t2707*t3968*t75)*var2[1] + (-1.*t2602*t2707*t3968 + t3981*t75)*var2[2] + (t2608*t3947*t4055 + t3241*(-1.*t2707*t3383*t4032 + t2608*t3798*t4032 + t4040 + t4043 + t2608*t3771*t4055 - 1.*t2707*t3842*t4055) + t2608*t3900*t4114 + t3798*(-1.*t2608*t3241*t4032 + t2707*t3905*t4032 + t4100 + t4107 - 1.*t2608*t3771*t4114 + t2707*t3842*t4114))*var2[3] + (t3936*(t3380*t4032 + t4040 + t4043 + t3761*t4055) + t4066*t4079 + t3877*(-1.*t3230*t4032 + t4100 + t4107 - 1.*t3761*t4114) + t3380*t4166)*var2[4];
  p_output1[3]=t2608*t4363*var2[0] + (t2602*t4409 + t2707*t4363*t75)*var2[1] + (-1.*t2602*t2707*t4363 + t4409*t75)*var2[2] + (t2608*t3947*t4472 + t3241*(t4435 - 1.*t2707*t3383*t4444 + t2608*t3798*t4444 + t4453 + t2608*t3771*t4472 - 1.*t2707*t3842*t4472) + t2608*t3900*t4543 + t3798*(-1.*t2608*t3241*t4444 + t2707*t3905*t4444 + t4517 + t4530 - 1.*t2608*t3771*t4543 + t2707*t3842*t4543))*var2[3] + (t4166*t4434 + t3936*(t4435 + t3380*t4444 + t4453 + t3761*t4472) + t4079*t4515 + t3877*(-1.*t3230*t4444 + t4517 + t4530 - 1.*t3761*t4543))*var2[4] + (t3282*(-1.*t3731*t4242 - 1.*t3227*t4253 - 1.*t3205*t4281 - 1.*t3757*t4290) + t3105*(t3314*t3757 + t3362*t4253 + t3314*t4281 + t3731*t4302))*var2[5];
  p_output1[4]=t5029*var2[0] + (t2602*t5109 - 1.*t5127*t75)*var2[1] + (t2602*t5127 + t5109*t75)*var2[2] + (t3900*t5155 + t3947*t5170 + t3241*(t5055 + t5075 + t3771*t5170 + t3842*t5189 + t3798*t5208 + t3383*t5214) + t3798*(t5081 + t5095 - 1.*t3771*t5155 - 1.*t3241*t5208 - 1.*t3905*t5214 - 1.*t3842*t5237))*var2[3] + (t4079*t5037 + t4166*t5051 + t3936*(t4848 + t4850 + t5055 + t3761*t5060 + t3380*t5067 + t5075) + t3877*(t4790 + t4795 - 1.*t3230*t5067 + t5081 - 1.*t3761*t5089 + t5095))*var2[4] + (t3309*t4639 + t3282*(-1.*t3731*t4691 - 1.*t3757*t4701 - 1.*t3227*t4768 - 1.*t3205*t4782 + t4790 + t4795) + t3105*(t3362*t4768 + t3314*t4782 + t3731*t4829 + t3757*t4838 + t4848 + t4850) + t4786*t4877)*var2[5] + (t3105*(t3309*t4735 + t3296*t4757 + t3713*t4807 + t3662*t4826 + t4850 + t3309*t4898) + t3282*(-1.*t3713*t4669 - 1.*t3662*t4679 - 1.*t3199*t4735 - 1.*t3171*t4757 + t4795 - 1.*t4786*t4898) + t3309*t4904 + t4786*t4959 - 0.15121*t4970 - 0.15121*t4981)*var2[9];
  p_output1[5]=t5613*var2[0] + (t2602*t5620 - 1.*t5630*t75)*var2[1] + (t2602*t5630 + t5620*t75)*var2[2] + (t3241*(t5718 + t3798*t5821 + t3383*t5837) + t3900*t5857 + t3798*(t5771 + t5782 - 1.*t3241*t5821 - 1.*t3905*t5837 - 1.*t3771*t5857 - 1.*t3842*t5884))*var2[3] + (t3936*(t5470 + t5718 + t3380*t5744) + t4079*t5767 + t3877*(t5454 + t5463 - 1.*t3230*t5744 + t5771 + t5782 - 1.*t3761*t5790))*var2[4] + (t4877*t5462 + t3282*(-1.*t3205*t5334 - 1.*t3227*t5344 - 1.*t3731*t5418 - 1.*t3757*t5441 + t5454 + t5463) + t3105*(t3314*t5334 + t3362*t5344 + t5470))*var2[5] + (t4959*t5462 + t3282*(-1.*t3171*t5304 - 1.*t3199*t5330 - 1.*t3662*t5390 - 1.*t3713*t5413 + t5454 - 1.*t4898*t5462) + t3105*(t3296*t5304 + t3309*t5330 + t5470) - 0.15121*t5502 - 0.15121*t5513)*var2[9] + (-0.038749*t5348 + 1.e-6*t5493 - 0.28121*t5499 - 1.*t3243*t5554 - 1.*t5385*t5558 - 1.*t3036*t5565 + 4.e-6*(-1.*t3271*t5554 - 1.*t5348*t5558 - 1.*t3099*t5565))*var2[10];
  p_output1[6]=t5909;
  p_output1[7]=0. + t2933 + t2937;
  p_output1[8]=0. + t2602*t2843 + t2575*t75;
  p_output1[9]=t3241*t3900 + t3798*t3947;
  p_output1[10]=t3936*t4079 + t3877*t4166;
  p_output1[11]=t3282*t4639 + t3105*t4877;
  p_output1[12]=-0.15121*t1886 - 0.15121*t2175 + t3282*t4904 + t3105*t4959;
  p_output1[13]=1.e-6*t1040 - 0.038749*t1588 - 0.28121*t1751 - 1.*t3036*t5558 - 1.*t3243*t5990 + 4.e-6*(-1.*t3099*t5558 - 1.*t3271*t5990);
  p_output1[14]=-1.9353204325022392e-7;
  p_output1[15]=(-1.*t2602*t3905 - 1.*t3936*t75)*var2[1] + (t6031 + t6033)*var2[2];
  p_output1[16]=t3863*var2[0] - 1.*t3916*t75*var2[1] + t2602*t3916*var2[2] + ((-1.*t3383*t3763 - 1.*t3383*t3771 - 1.*t3798*t3814 - 1.*t3841*t3842)*t5909 + t3798*(t2843*t3763 + t2972*t3771 + t2957*t3842 + t3814*t5909) + t2972*t6080 + t3383*t6116)*var2[3];
  p_output1[17]=t2608*t4114*var2[0] + (t2602*t4066 + t2707*t4114*t75)*var2[1] + (-1.*t2602*t2707*t4114 + t4066*t75)*var2[2] + (t2608*t3968*t6080 + t2608*t4055*t6116 + t5909*(t2707*t3383*t4032 - 1.*t2608*t3798*t4032 - 1.*t2608*t3771*t4055 + t2707*t3842*t4055 + t6150 + t6162) + t3798*(t2608*t3771*t3968 - 1.*t2707*t3842*t3968 - 1.*t2707*t2843*t4032 + t2608*t4032*t5909 + t6205 + t6211))*var2[3] + (t2575*(-1.*t3380*t4032 - 1.*t3761*t4055 + t6150 + t6162) + t3981*t6199 + t3877*(t3761*t3968 + t2776*t4032 + t6205 + t6211) + t3380*t6236)*var2[4];
  p_output1[18]=t2608*t4543*var2[0] + (t2602*t4515 + t2707*t4543*t75)*var2[1] + (-1.*t2602*t2707*t4543 + t4515*t75)*var2[2] + (t2608*t4363*t6080 + t2608*t4472*t6116 + t5909*(t2707*t3383*t4444 - 1.*t2608*t3798*t4444 - 1.*t2608*t3771*t4472 + t2707*t3842*t4472 + t6369 + t6374) + t3798*(t2608*t3771*t4363 - 1.*t2707*t3842*t4363 - 1.*t2707*t2843*t4444 + t2608*t4444*t5909 + t6395 + t6396))*var2[3] + (t4409*t6199 + t4434*t6236 + t2575*(-1.*t3380*t4444 - 1.*t3761*t4472 + t6369 + t6374) + t3877*(t3761*t4363 + t2776*t4444 + t6395 + t6396))*var2[4] + (t2669*(-1.*t3314*t3757 - 1.*t3362*t4253 - 1.*t3314*t4281 - 1.*t3731*t4302) + t3282*(t2349*t4253 + t2521*t4281 + t3731*t4341 + t3757*t4347))*var2[5];
  p_output1[19]=t5155*var2[0] + (t2602*t5037 - 1.*t5237*t75)*var2[1] + (t2602*t5237 + t5037*t75)*var2[2] + (t5029*t6080 + t5170*t6116 + t5909*(-1.*t3771*t5170 - 1.*t3842*t5189 - 1.*t3798*t5208 - 1.*t3383*t5214 + t6759 + t6767) + t3798*(t3771*t5029 + t3842*t5127 + t2843*t5214 + t5208*t5909 + t6773 + t6776))*var2[3] + (t5109*t6199 + t5051*t6236 + t2575*(-1.*t3761*t5060 - 1.*t3380*t5067 + t6543 + t6545 + t6759 + t6767) + t3877*(t3761*t5016 + t2776*t5067 + t6511 + t6513 + t6773 + t6776))*var2[4] + (t3309*t6491 + t3282*(t2349*t4768 + t2521*t4782 + t3731*t5003 + t3757*t5014 + t6511 + t6513) + t2669*(-1.*t3362*t4768 - 1.*t3314*t4782 - 1.*t3731*t4829 - 1.*t3757*t4838 + t6543 + t6545) + t4989*t6583)*var2[5] + (-0.15121*t4669 - 0.15121*t4679 + t3282*(t2175*t4735 + t1886*t4757 + t3713*t4970 + t3662*t4981 + t4898*t4989 + t6511) + t2669*(-1.*t3309*t4735 - 1.*t3296*t4757 - 1.*t3713*t4807 - 1.*t3662*t4826 - 1.*t3309*t4898 + t6545) + t3309*t6609 + t4989*t6637)*var2[9];
  p_output1[20]=t5857*var2[0] + (t2602*t5767 - 1.*t5884*t75)*var2[1] + (t2602*t5884 + t5767*t75)*var2[2] + (t5613*t6080 + t5909*(-1.*t3798*t5821 - 1.*t3383*t5837 + t7081) + t3798*(t3771*t5613 + t3842*t5630 + t2843*t5837 + t5821*t5909 + t7116 + t7146))*var2[3] + (t5620*t6199 + t2575*(-1.*t3380*t5744 + t6895 + t7081) + t3877*(t3761*t5611 + t2776*t5744 + t6873 + t6876 + t7116 + t7146))*var2[4] + (t5594*t6583 + t3282*(t2521*t5334 + t2349*t5344 + t3731*t5602 + t3757*t5607 + t6873 + t6876) + t2669*(-1.*t3314*t5334 - 1.*t3362*t5344 + t6895))*var2[5] + (-0.15121*t5390 - 0.15121*t5413 + t5594*t6637 + t3282*(t1886*t5304 + t2175*t5330 + t3662*t5502 + t3713*t5513 + t4898*t5594 + t6876) + t2669*(-1.*t3296*t5304 - 1.*t3309*t5330 + t6895))*var2[9] + (-0.28121*t5348 - 0.038749*t5358 + 1.e-6*t5385 - 1.*t3243*t6956 - 1.*t5493*t6965 - 1.*t1040*t6972 + 4.e-6*(-1.*t3271*t6956 - 1.*t5499*t6965 - 1.*t1751*t6972))*var2[10];
  p_output1[21]=t3241;
  p_output1[22]=0. + t6031 + t6033;
  p_output1[23]=0. + t2602*t3905 + t3936*t75;
  p_output1[24]=t5909*t6080 + t3798*t6116;
  p_output1[25]=t2575*t6199 + t3877*t6236;
  p_output1[26]=t3282*t6491 + t2669*t6583;
  p_output1[27]=-0.15121*t3171 - 0.15121*t3199 + t3282*t6609 + t2669*t6637;
  p_output1[28]=-0.038749*t3011 + 1.e-6*t3036 - 0.28121*t3099 - 1.*t1040*t6965 - 1.*t3243*t7295 + 4.e-6*(-1.*t1751*t6965 - 1.*t3271*t7295);
  p_output1[29]=0.29999998115510645;
  p_output1[30]=(-1.*t2602*t3383 - 1.*t3877*t75)*var2[1] + t7371*var2[2];
  p_output1[31]=t3383*var2[0] - 1.*t3841*t75*var2[1] + t2602*t3841*var2[2] + ((t3241*t3814 + t3771*t3863 + t3763*t3905 + t3842*t3916)*t5909 + t3241*(-1.*t2843*t3763 - 1.*t2972*t3771 - 1.*t2957*t3842 - 1.*t3814*t5909) + t2972*t7420 + t3863*t7431)*var2[3];
  p_output1[32]=t2608*t4055*var2[0] + (t2602*t3380 + t2707*t4055*t75)*var2[1] + (-1.*t2602*t2707*t4055 + t3380*t75)*var2[2] + (t2608*t3968*t7420 + t2608*t4114*t7431 + t5909*(t2608*t3241*t4032 - 1.*t2707*t3905*t4032 + t2608*t3771*t4114 - 1.*t2707*t3842*t4114 + t7456 + t7457) + t3241*(-1.*t2608*t3771*t3968 + t2707*t3842*t3968 + t2707*t2843*t4032 - 1.*t2608*t4032*t5909 + t7471 + t7472))*var2[3] + (t2575*(t3230*t4032 + t3761*t4114 + t7456 + t7457) + t3981*t7467 + t3936*(-1.*t3761*t3968 - 1.*t2776*t4032 + t7471 + t7472) + t4066*t7496)*var2[4];
  p_output1[33]=t2608*t4472*var2[0] + (t2602*t4434 + t2707*t4472*t75)*var2[1] + (-1.*t2602*t2707*t4472 + t4434*t75)*var2[2] + (t2608*t4363*t7420 + t2608*t4543*t7431 + t5909*(t2608*t3241*t4444 - 1.*t2707*t3905*t4444 + t2608*t3771*t4543 - 1.*t2707*t3842*t4543 + t7646 + t7653) + t3241*(-1.*t2608*t3771*t4363 + t2707*t3842*t4363 + t2707*t2843*t4444 - 1.*t2608*t4444*t5909 + t7660 + t7661))*var2[3] + (t4409*t7467 + t4515*t7496 + t2575*(t3230*t4444 + t3761*t4543 + t7646 + t7653) + t3936*(-1.*t3761*t4363 - 1.*t2776*t4444 + t7660 + t7661))*var2[4] + (t2669*(t3731*t4242 + t3227*t4253 + t3205*t4281 + t3757*t4290) + t3105*(-1.*t2349*t4253 - 1.*t2521*t4281 - 1.*t3731*t4341 - 1.*t3757*t4347))*var2[5];
  p_output1[34]=t5170*var2[0] + (t2602*t5051 - 1.*t5189*t75)*var2[1] + (t2602*t5189 + t5051*t75)*var2[2] + (t5029*t7420 + t5155*t7431 + t5909*(t3771*t5155 + t3241*t5208 + t3905*t5214 + t3842*t5237 + t7922 + t7930) + t3241*(-1.*t3771*t5029 - 1.*t3842*t5127 - 1.*t2843*t5214 - 1.*t5208*t5909 + t7936 + t7939))*var2[3] + (t5109*t7467 + t5037*t7496 + t2575*(t3230*t5067 + t3761*t5089 + t7813 + t7814 + t7922 + t7930) + t3936*(-1.*t3761*t5016 - 1.*t2776*t5067 + t7778 + t7780 + t7936 + t7939))*var2[4] + (t3105*(-1.*t2349*t4768 - 1.*t2521*t4782 - 1.*t3731*t5003 - 1.*t3757*t5014 + t7778 + t7780) + t4786*t7803 + t2669*(t3731*t4691 + t3757*t4701 + t3227*t4768 + t3205*t4782 + t7813 + t7814) + t4989*t7822)*var2[5] + (-0.15121*t4807 - 0.15121*t4826 + t3105*(-1.*t2175*t4735 - 1.*t1886*t4757 - 1.*t3713*t4970 - 1.*t3662*t4981 - 1.*t4898*t4989 + t7778) + t2669*(t3713*t4669 + t3662*t4679 + t3199*t4735 + t3171*t4757 + t4786*t4898 + t7814) + t4786*t7843 + t4989*t7860)*var2[9];
  p_output1[35]=(t5613*t7420 + t5857*t7431 + t5909*(t3241*t5821 + t3905*t5837 + t3771*t5857 + t3842*t5884 + t8097 + t8099) + t3241*(-1.*t3771*t5613 - 1.*t3842*t5630 - 1.*t2843*t5837 - 1.*t5821*t5909 + t8113 + t8115))*var2[3] + (t5620*t7467 + t5767*t7496 + t2575*(t3230*t5744 + t3761*t5790 + t8010 + t8011 + t8097 + t8099) + t3936*(-1.*t3761*t5611 - 1.*t2776*t5744 + t8000 + t8001 + t8113 + t8115))*var2[4] + (t5462*t7803 + t5594*t7822 + t3105*(-1.*t2521*t5334 - 1.*t2349*t5344 - 1.*t3731*t5602 - 1.*t3757*t5607 + t8000 + t8001) + t2669*(t3205*t5334 + t3227*t5344 + t3731*t5418 + t3757*t5441 + t8010 + t8011))*var2[5] + (t5462*t7843 + t5594*t7860 + t3105*(-1.*t1886*t5304 - 1.*t2175*t5330 - 1.*t3662*t5502 - 1.*t3713*t5513 - 1.*t4898*t5594 + t8001) + t2669*(t3171*t5304 + t3199*t5330 + t3662*t5390 + t3713*t5413 + t4898*t5462 + t8010))*var2[9] + (-1.*t5385*t8048 - 1.*t5493*t8060 - 1.*t3036*t8069 - 1.*t1040*t8081 + 4.e-6*(-1.*t5348*t8048 - 1.*t5499*t8060 - 1.*t3099*t8069 - 1.*t1751*t8081))*var2[10];
  p_output1[36]=t3798;
  p_output1[37]=t7371;
  p_output1[38]=t2602*t3383 + t3877*t75;
  p_output1[39]=t5909*t7420 + t3241*t7431;
  p_output1[40]=t2575*t7467 + t3936*t7496;
  p_output1[41]=t3105*t7803 + t2669*t7822;
  p_output1[42]=-0.15121*t3296 - 0.15121*t3309 + t3105*t7843 + t2669*t7860;
  p_output1[43]=1.e-6*t3243 - 0.28121*t3271 - 1.*t3036*t8048 - 1.*t1040*t8060 + 4.e-6*(-1.*t3099*t8048 - 1.*t1751*t8060);
  p_output1[44]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_FrFoot_ParallelStance.hh"

namespace ParallelStance
{

void J_dh_FrFoot_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
