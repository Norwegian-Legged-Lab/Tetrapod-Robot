/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:31:06 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t79;
  double t200;
  double t211;
  double t215;
  double t241;
  double t253;
  double t272;
  double t97;
  double t126;
  double t149;
  double t163;
  double t197;
  double t293;
  double t34;
  double t332;
  double t337;
  double t338;
  double t367;
  double t374;
  double t378;
  double t393;
  double t404;
  double t407;
  double t415;
  double t490;
  double t451;
  double t455;
  double t463;
  double t467;
  double t471;
  double t472;
  double t494;
  double t497;
  double t500;
  double t503;
  double t530;
  double t533;
  double t539;
  double t544;
  double t545;
  double t546;
  double t282;
  double t290;
  double t227;
  double t270;
  double t345;
  double t357;
  double t361;
  double t302;
  double t305;
  double t319;
  double t320;
  double t331;
  double t509;
  double t512;
  double t518;
  double t524;
  double t525;
  double t649;
  double t653;
  double t688;
  double t698;
  double t731;
  double t738;
  double t484;
  double t485;
  double t491;
  double t492;
  double t493;
  double t408;
  double t426;
  double t434;
  double t766;
  double t773;
  double t787;
  double t795;
  double t801;
  double t804;
  double t607;
  double t609;
  double t811;
  double t819;
  double t820;
  double t566;
  double t568;
  double t966;
  double t689;
  double t741;
  double t789;
  double t808;
  double t832;
  double t843;
  double t850;
  double t853;
  double t854;
  double t860;
  double t876;
  double t877;
  double t891;
  double t909;
  double t911;
  double t922;
  double t927;
  double t937;
  double t947;
  double t948;
  double t1067;
  double t1072;
  double t1084;
  double t1087;
  double t1090;
  double t1094;
  double t1102;
  double t1107;
  double t1113;
  double t1114;
  double t1121;
  double t1125;
  double t1126;
  double t1134;
  double t1210;
  double t1223;
  double t1227;
  double t1231;
  double t1251;
  double t1253;
  double t1254;
  double t1276;
  double t1277;
  double t1281;
  double t1285;
  double t41;
  double t141;
  double t155;
  double t169;
  double t187;
  double t1342;
  double t1355;
  double t1349;
  double t1356;
  double t1363;
  double t1365;
  double t1370;
  double t1372;
  double t1382;
  double t1384;
  double t1387;
  double t1393;
  double t1399;
  double t1403;
  double t1406;
  double t1407;
  double t1411;
  double t1412;
  double t1416;
  double t1418;
  double t1422;
  double t1423;
  double t1429;
  double t1432;
  double t1433;
  double t1435;
  double t1486;
  double t1488;
  double t1494;
  double t1504;
  double t1506;
  double t1507;
  double t1509;
  double t1510;
  double t1513;
  double t1514;
  double t1516;
  double t1517;
  double t1518;
  double t1523;
  double t1527;
  double t1528;
  double t1531;
  double t1535;
  double t1571;
  double t1573;
  double t1577;
  double t1580;
  double t1581;
  double t1587;
  double t1593;
  double t1594;
  double t1595;
  double t1597;
  double t1598;
  double t1601;
  double t1604;
  double t1605;
  double t1606;
  double t1613;
  double t1614;
  double t1615;
  double t1619;
  double t1624;
  double t1625;
  double t976;
  double t982;
  double t998;
  double t1662;
  double t1664;
  double t1666;
  double t1673;
  double t1674;
  double t1677;
  double t1680;
  double t1682;
  double t1683;
  double t1684;
  double t1688;
  double t1701;
  double t1702;
  double t1706;
  double t1709;
  double t1710;
  double t1018;
  double t1031;
  double t1035;
  double t1045;
  double t1049;
  double t1054;
  double t1057;
  double t1064;
  double t1746;
  double t1747;
  double t1748;
  double t1751;
  double t1752;
  double t1755;
  double t1761;
  double t1766;
  double t1768;
  double t1771;
  double t1773;
  double t1774;
  double t1777;
  double t1778;
  double t1195;
  double t1200;
  double t1207;
  double t1239;
  double t1243;
  double t1267;
  double t1271;
  double t1275;
  double t1825;
  double t1832;
  double t1837;
  double t1839;
  double t1842;
  double t1843;
  double t1844;
  double t1852;
  double t1853;
  double t1855;
  double t1857;
  double t1864;
  double t1950;
  double t1953;
  double t1954;
  double t1958;
  double t1961;
  double t1963;
  double t1967;
  double t1968;
  double t1969;
  double t1971;
  double t1976;
  double t1977;
  double t1979;
  double t1982;
  double t1985;
  double t1986;
  double t1989;
  double t1991;
  double t2025;
  double t2026;
  double t2027;
  double t2029;
  double t2035;
  double t2036;
  double t2038;
  double t2039;
  double t2041;
  double t2042;
  double t2044;
  double t2051;
  double t2053;
  double t2054;
  double t2059;
  double t2060;
  double t2061;
  double t2099;
  double t2100;
  double t2105;
  double t2110;
  double t2113;
  double t2116;
  double t2120;
  double t2123;
  double t2126;
  double t2127;
  double t2135;
  double t2142;
  double t2143;
  double t2146;
  double t2147;
  double t2148;
  double t2185;
  double t2189;
  double t2191;
  double t2194;
  double t2196;
  double t2202;
  double t2203;
  double t2204;
  double t2206;
  double t2209;
  double t2210;
  double t2213;
  double t2217;
  double t2268;
  double t2270;
  double t2275;
  double t2276;
  double t2281;
  double t2288;
  double t2290;
  double t2294;
  double t2299;
  double t2300;
  double t2304;
  double t2357;
  double t2358;
  double t2359;
  double t2364;
  double t2386;
  double t2390;
  double t2391;
  double t2395;
  double t2396;
  double t2361;
  double t2373;
  double t2433;
  double t2475;
  double t2477;
  double t2478;
  double t2483;
  double t2455;
  double t2461;
  double t2443;
  double t2444;
  double t2446;
  double t2467;
  double t2468;
  double t2470;
  double t2493;
  double t2427;
  double t2528;
  double t2436;
  double t2546;
  double t2482;
  double t2567;
  double t2568;
  double t2367;
  double t2520;
  double t2522;
  double t2523;
  double t2529;
  double t2532;
  double t2534;
  double t2535;
  double t2537;
  double t2538;
  double t2590;
  double t2569;
  double t2571;
  double t2572;
  double t2573;
  double t2577;
  double t2578;
  double t2579;
  double t2580;
  double t2600;
  double t2603;
  double t2608;
  double t2611;
  double t2616;
  double t2617;
  double t2625;
  double t2626;
  double t2496;
  double t2633;
  double t2484;
  double t2654;
  double t2552;
  double t2638;
  double t2639;
  double t2547;
  double t2407;
  double t2408;
  double t2393;
  double t2403;
  double t2448;
  double t2451;
  double t2458;
  double t2459;
  double t2464;
  double t2465;
  double t2466;
  double t2419;
  double t2425;
  double t2428;
  double t2430;
  double t2437;
  double t2438;
  double t2441;
  double t2542;
  double t2543;
  double t2550;
  double t2551;
  double t2554;
  double t2557;
  double t2564;
  double t2697;
  double t2699;
  double t2701;
  double t2705;
  double t2706;
  double t2709;
  double t2474;
  double t2479;
  double t2487;
  double t2490;
  double t2508;
  double t2516;
  double t2518;
  double t2584;
  double t2588;
  double t2591;
  double t2595;
  double t2597;
  double t2598;
  double t2599;
  double t2642;
  double t2711;
  double t2712;
  double t2714;
  double t2634;
  double t2720;
  double t2721;
  double t2722;
  double t2645;
  double t2646;
  double t2725;
  double t2726;
  double t2727;
  double t2656;
  double t2651;
  double t2652;
  double t2658;
  double t2682;
  double t2683;
  double t2670;
  double t2687;
  double t2764;
  double t2704;
  double t2710;
  double t2715;
  double t2723;
  double t2728;
  double t2730;
  double t2732;
  double t2736;
  double t2737;
  double t2740;
  double t2742;
  double t2743;
  double t2744;
  double t2747;
  double t2748;
  double t2754;
  double t2755;
  double t2756;
  double t2757;
  double t2758;
  double t2780;
  double t2798;
  double t2803;
  double t2830;
  double t2833;
  double t2834;
  double t2783;
  double t2867;
  double t2821;
  double t2841;
  double t2843;
  double t2845;
  double t2848;
  double t2850;
  double t2851;
  double t2860;
  double t2862;
  double t2863;
  double t2869;
  double t2877;
  double t2881;
  double t2885;
  double t2887;
  double t2889;
  double t2891;
  double t2892;
  double t2895;
  double t2930;
  double t2953;
  double t2940;
  double t2941;
  double t2942;
  double t2943;
  double t2963;
  double t2964;
  double t2966;
  double t2968;
  double t2945;
  double t2994;
  double t2995;
  double t2997;
  double t2999;
  double t2934;
  double t3024;
  double t2980;
  double t2354;
  double t2360;
  double t2369;
  double t2371;
  double t2376;
  double t2381;
  double t2383;
  double t3057;
  double t3058;
  double t3060;
  double t3062;
  double t3065;
  double t3066;
  double t3074;
  double t3075;
  double t3076;
  double t3077;
  double t3086;
  double t3088;
  double t3092;
  double t3093;
  double t3095;
  double t3098;
  double t3102;
  double t3104;
  double t3168;
  double t3170;
  double t3177;
  double t3181;
  double t3182;
  double t3188;
  double t3192;
  double t3193;
  double t3196;
  double t3199;
  double t3203;
  double t3204;
  double t3210;
  double t3213;
  double t3221;
  double t3226;
  double t3229;
  double t3231;
  double t3283;
  double t3285;
  double t3290;
  double t3297;
  double t3299;
  double t3300;
  double t3308;
  double t3309;
  double t3311;
  double t3313;
  double t3316;
  double t3320;
  double t3326;
  double t3333;
  double t3338;
  double t2769;
  double t2771;
  double t2773;
  double t3390;
  double t3392;
  double t3394;
  double t3395;
  double t3400;
  double t3408;
  double t3409;
  double t3415;
  double t3416;
  double t3417;
  double t3419;
  double t3420;
  double t3424;
  double t2781;
  double t2782;
  double t2788;
  double t2789;
  double t2791;
  double t2793;
  double t2799;
  double t2802;
  double t2806;
  double t2808;
  double t2812;
  double t2813;
  double t2817;
  double t2818;
  double t2825;
  double t2826;
  double t2828;
  double t2829;
  double t3472;
  double t3474;
  double t3475;
  double t3477;
  double t3482;
  double t3488;
  double t3489;
  double t3492;
  double t3494;
  double t3497;
  double t3498;
  double t3501;
  double t3502;
  double t3503;
  double t3504;
  double t2931;
  double t2932;
  double t2935;
  double t2937;
  double t2938;
  double t2939;
  double t2946;
  double t2949;
  double t2955;
  double t2956;
  double t2957;
  double t2958;
  double t2970;
  double t2977;
  double t2982;
  double t2983;
  double t2988;
  double t2989;
  double t3004;
  double t3536;
  double t3538;
  double t3539;
  double t3540;
  double t3545;
  double t3546;
  double t3548;
  double t3552;
  double t3008;
  double t3558;
  double t3560;
  double t3562;
  double t3565;
  double t3020;
  double t3029;
  double t3039;
  double t3043;
  double t3660;
  double t3662;
  double t3663;
  double t3670;
  double t3671;
  double t3672;
  double t3678;
  double t3679;
  double t3680;
  double t3682;
  double t3684;
  double t3685;
  double t3689;
  double t3690;
  double t3694;
  double t3695;
  double t3696;
  double t3700;
  double t3733;
  double t3734;
  double t3736;
  double t3740;
  double t3743;
  double t3747;
  double t3751;
  double t3753;
  double t3755;
  double t3757;
  double t3758;
  double t3761;
  double t3762;
  double t3763;
  double t3808;
  double t3809;
  double t3817;
  double t3822;
  double t3826;
  double t3827;
  double t3828;
  double t3830;
  double t3832;
  double t3835;
  double t3838;
  double t3839;
  double t3840;
  double t3878;
  double t3879;
  double t3880;
  double t3883;
  double t3885;
  double t3886;
  double t3887;
  double t3892;
  double t3894;
  double t3895;
  double t3899;
  double t3901;
  double t3902;
  double t3905;
  double t3906;
  double t3935;
  double t3936;
  double t3941;
  double t3946;
  double t3950;
  double t3952;
  double t3953;
  double t3954;
  double t3958;
  double t3959;
  double t3962;
  double t3965;
  t79 = Cos(var1[10]);
  t200 = Cos(var1[9]);
  t211 = -1.*t200;
  t215 = 1. + t211;
  t241 = Sin(var1[9]);
  t253 = -0.15121*t241;
  t272 = Sin(var1[4]);
  t97 = -1.*t79;
  t126 = 1. + t97;
  t149 = -1. + t79;
  t163 = Sin(var1[10]);
  t197 = Cos(var1[5]);
  t293 = Sin(var1[5]);
  t34 = Cos(var1[4]);
  t332 = t197*t241*t272;
  t337 = t200*t272*t293;
  t338 = t332 + t337;
  t367 = -1.*t200*t197*t272;
  t374 = t241*t272*t293;
  t378 = t367 + t374;
  t393 = Cos(var1[11]);
  t404 = -1.*t393;
  t407 = 1. + t404;
  t415 = Sin(var1[11]);
  t490 = -1. + t393;
  t451 = t34*t163;
  t455 = -4.e-6*t163*t338;
  t463 = -1.000000000016*t126;
  t467 = 1. + t463;
  t471 = t467*t378;
  t472 = t451 + t455 + t471;
  t494 = t79*t34;
  t497 = 4.e-6*t126*t338;
  t500 = -1.*t163*t378;
  t503 = t494 + t497 + t500;
  t530 = 4.e-6*t126*t34;
  t533 = 1.6e-11*t149;
  t539 = 1. + t533;
  t544 = t539*t338;
  t545 = 4.e-6*t163*t378;
  t546 = t530 + t544 + t545;
  t282 = -0.15121*t215;
  t290 = t282 + t253;
  t227 = 0.15121*t215;
  t270 = t227 + t253;
  t345 = 0.281210000008499*t126;
  t357 = -0.03874900000062*t163;
  t361 = t345 + t357;
  t302 = -1.2484e-7*var1[10];
  t305 = 2.479936e-18*t126;
  t319 = -1.54996e-7*t149;
  t320 = 1.124840000016e-6*t163;
  t331 = t302 + t305 + t319 + t320;
  t509 = -1.26e-8*var1[11];
  t512 = 2.552896e-18*t407;
  t518 = -1.59556e-7*t490;
  t524 = 2.012600000032e-6*t415;
  t525 = t509 + t512 + t518 + t524;
  t649 = -1.*t34*t197*t241;
  t653 = -1.*t200*t34*t293;
  t688 = t649 + t653;
  t698 = -1.*t200*t34*t197;
  t731 = t34*t241*t293;
  t738 = t698 + t731;
  t484 = -5.04e-14*var1[11];
  t485 = -0.039889*t407;
  t491 = 6.38224e-13*t490;
  t492 = -0.503150000008*t415;
  t493 = t484 + t485 + t491 + t492;
  t408 = 0.50315000001605*t407;
  t426 = -0.0398890000006382*t415;
  t434 = t408 + t426;
  t766 = 4.e-6*t163*t688;
  t773 = t539*t738;
  t787 = t766 + t773;
  t795 = -1.*t163*t688;
  t801 = 4.e-6*t126*t738;
  t804 = t795 + t801;
  t607 = -1.000000000016*t407;
  t609 = 1. + t607;
  t811 = t467*t688;
  t819 = -4.e-6*t163*t738;
  t820 = t811 + t819;
  t566 = 1.6e-11*t490;
  t568 = 1. + t566;
  t966 = -0.15121*t200;
  t689 = t361*t688;
  t741 = t331*t738;
  t789 = t525*t787;
  t808 = t493*t804;
  t832 = t434*t820;
  t843 = -4.e-6*t415*t787;
  t850 = t415*t804;
  t853 = t609*t820;
  t854 = t843 + t850 + t853;
  t860 = 0.803147*t854;
  t876 = 4.e-6*t407*t787;
  t877 = t393*t804;
  t891 = -1.*t415*t820;
  t909 = t876 + t877 + t891;
  t911 = -0.041195*t909;
  t922 = t568*t787;
  t927 = 4.e-6*t407*t804;
  t937 = 4.e-6*t415*t820;
  t947 = t922 + t927 + t937;
  t948 = -0.14871*t947;
  t1067 = t200*t34*t197;
  t1072 = -1.*t34*t241*t293;
  t1084 = t1067 + t1072;
  t1087 = -1.*t163*t272;
  t1090 = -1.*t79*t1084;
  t1094 = t1087 + t766 + t1090;
  t1102 = 4.e-6*t163*t272;
  t1107 = -1.6e-11*t163*t688;
  t1113 = 4.e-6*t79*t1084;
  t1114 = t1102 + t1107 + t1113;
  t1121 = t79*t272;
  t1125 = -4.e-6*t79*t688;
  t1126 = -1.000000000016*t163*t1084;
  t1134 = t1121 + t1125 + t1126;
  t1210 = t163*t272;
  t1223 = -4.e-6*t163*t688;
  t1227 = t467*t1084;
  t1231 = t1210 + t1223 + t1227;
  t1251 = 4.e-6*t126*t688;
  t1253 = -1.*t163*t1084;
  t1254 = t1121 + t1251 + t1253;
  t1276 = 4.e-6*t126*t272;
  t1277 = t539*t688;
  t1281 = 4.e-6*t163*t1084;
  t1285 = t1276 + t1277 + t1281;
  t41 = -4.9936e-13*var1[10];
  t141 = -0.038749*t126;
  t155 = 6.19984e-13*t149;
  t169 = -0.281210000004*t163;
  t187 = t41 + t141 + t155 + t169;
  t1342 = Cos(var1[3]);
  t1355 = Sin(var1[3]);
  t1349 = t1342*t197*t272;
  t1356 = -1.*t1355*t293;
  t1363 = t1349 + t1356;
  t1365 = -1.*t197*t1355;
  t1370 = -1.*t1342*t272*t293;
  t1372 = t1365 + t1370;
  t1382 = -1.*t241*t1363;
  t1384 = t200*t1372;
  t1387 = t1382 + t1384;
  t1393 = t200*t1363;
  t1399 = t241*t1372;
  t1403 = t1393 + t1399;
  t1406 = -1.*t1342*t34*t163;
  t1407 = -4.e-6*t163*t1387;
  t1411 = t467*t1403;
  t1412 = t1406 + t1407 + t1411;
  t1416 = -1.*t79*t1342*t34;
  t1418 = 4.e-6*t126*t1387;
  t1422 = -1.*t163*t1403;
  t1423 = t1416 + t1418 + t1422;
  t1429 = -4.e-6*t126*t1342*t34;
  t1432 = t539*t1387;
  t1433 = 4.e-6*t163*t1403;
  t1435 = t1429 + t1432 + t1433;
  t1486 = -1.*t34*t197*t241*t1355;
  t1488 = -1.*t200*t34*t1355*t293;
  t1494 = t1486 + t1488;
  t1504 = t200*t34*t197*t1355;
  t1506 = -1.*t34*t241*t1355*t293;
  t1507 = t1504 + t1506;
  t1509 = t163*t1355*t272;
  t1510 = -4.e-6*t163*t1494;
  t1513 = t467*t1507;
  t1514 = t1509 + t1510 + t1513;
  t1516 = t79*t1355*t272;
  t1517 = 4.e-6*t126*t1494;
  t1518 = -1.*t163*t1507;
  t1523 = t1516 + t1517 + t1518;
  t1527 = 4.e-6*t126*t1355*t272;
  t1528 = t539*t1494;
  t1531 = 4.e-6*t163*t1507;
  t1535 = t1527 + t1528 + t1531;
  t1571 = -1.*t197*t1355*t272;
  t1573 = -1.*t1342*t293;
  t1577 = t1571 + t1573;
  t1580 = t1342*t197;
  t1581 = -1.*t1355*t272*t293;
  t1587 = t1580 + t1581;
  t1593 = t241*t1577;
  t1594 = t200*t1587;
  t1595 = t1593 + t1594;
  t1597 = t200*t1577;
  t1598 = -1.*t241*t1587;
  t1601 = t1597 + t1598;
  t1604 = 4.e-6*t163*t1595;
  t1605 = t539*t1601;
  t1606 = t1604 + t1605;
  t1613 = -1.*t163*t1595;
  t1614 = 4.e-6*t126*t1601;
  t1615 = t1613 + t1614;
  t1619 = t467*t1595;
  t1624 = -4.e-6*t163*t1601;
  t1625 = t1619 + t1624;
  t976 = 0.15121*t241;
  t982 = t966 + t976;
  t998 = t966 + t253;
  t1662 = t197*t1355*t272;
  t1664 = t1342*t293;
  t1666 = t1662 + t1664;
  t1673 = -1.*t241*t1666;
  t1674 = t1673 + t1594;
  t1677 = -1.*t200*t1666;
  t1680 = t1677 + t1598;
  t1682 = 4.e-6*t163*t1674;
  t1683 = t539*t1680;
  t1684 = t1682 + t1683;
  t1688 = -1.*t163*t1674;
  t1701 = 4.e-6*t126*t1680;
  t1702 = t1688 + t1701;
  t1706 = t467*t1674;
  t1709 = -4.e-6*t163*t1680;
  t1710 = t1706 + t1709;
  t1018 = -0.281210000004*t79;
  t1031 = -4.9936e-13 + t1018 + t357;
  t1035 = 1.124840000016e-6*t79;
  t1045 = 1.5499600000248e-7*t163;
  t1049 = -1.2484e-7 + t1035 + t1045;
  t1054 = -0.03874900000062*t79;
  t1057 = 0.281210000008499*t163;
  t1064 = t1054 + t1057;
  t1746 = t200*t1666;
  t1747 = t241*t1587;
  t1748 = t1746 + t1747;
  t1751 = t34*t163*t1355;
  t1752 = -1.*t79*t1748;
  t1755 = t1751 + t1682 + t1752;
  t1761 = -4.e-6*t34*t163*t1355;
  t1766 = -1.6e-11*t163*t1674;
  t1768 = 4.e-6*t79*t1748;
  t1771 = t1761 + t1766 + t1768;
  t1773 = -1.*t79*t34*t1355;
  t1774 = -4.e-6*t79*t1674;
  t1777 = -1.000000000016*t163*t1748;
  t1778 = t1773 + t1774 + t1777;
  t1195 = -0.0398890000006382*t393;
  t1200 = 0.50315000001605*t415;
  t1207 = t1195 + t1200;
  t1239 = -0.503150000008*t393;
  t1243 = -5.04e-14 + t1239 + t426;
  t1267 = 2.012600000032e-6*t393;
  t1271 = 1.59556000002553e-7*t415;
  t1275 = -1.26e-8 + t1267 + t1271;
  t1825 = -1.*t34*t163*t1355;
  t1832 = -4.e-6*t163*t1674;
  t1837 = t467*t1748;
  t1839 = t1825 + t1832 + t1837;
  t1842 = 4.e-6*t126*t1674;
  t1843 = -1.*t163*t1748;
  t1844 = t1773 + t1842 + t1843;
  t1852 = -4.e-6*t126*t34*t1355;
  t1853 = t539*t1674;
  t1855 = 4.e-6*t163*t1748;
  t1857 = t1852 + t1853 + t1855;
  t1864 = t393*t1844;
  t1950 = t1342*t34*t197*t241;
  t1953 = t200*t1342*t34*t293;
  t1954 = t1950 + t1953;
  t1958 = -1.*t200*t1342*t34*t197;
  t1961 = t1342*t34*t241*t293;
  t1963 = t1958 + t1961;
  t1967 = -1.*t1342*t163*t272;
  t1968 = -4.e-6*t163*t1954;
  t1969 = t467*t1963;
  t1971 = t1967 + t1968 + t1969;
  t1976 = -1.*t79*t1342*t272;
  t1977 = 4.e-6*t126*t1954;
  t1979 = -1.*t163*t1963;
  t1982 = t1976 + t1977 + t1979;
  t1985 = -4.e-6*t126*t1342*t272;
  t1986 = t539*t1954;
  t1989 = 4.e-6*t163*t1963;
  t1991 = t1985 + t1986 + t1989;
  t2025 = t197*t1355;
  t2026 = t1342*t272*t293;
  t2027 = t2025 + t2026;
  t2029 = t241*t1363;
  t2035 = t200*t2027;
  t2036 = t2029 + t2035;
  t2038 = -1.*t241*t2027;
  t2039 = t1393 + t2038;
  t2041 = 4.e-6*t163*t2036;
  t2042 = t539*t2039;
  t2044 = t2041 + t2042;
  t2051 = -1.*t163*t2036;
  t2053 = 4.e-6*t126*t2039;
  t2054 = t2051 + t2053;
  t2059 = t467*t2036;
  t2060 = -4.e-6*t163*t2039;
  t2061 = t2059 + t2060;
  t2099 = -1.*t1342*t197*t272;
  t2100 = t1355*t293;
  t2105 = t2099 + t2100;
  t2110 = -1.*t241*t2105;
  t2113 = t2110 + t2035;
  t2116 = -1.*t200*t2105;
  t2120 = t2116 + t2038;
  t2123 = 4.e-6*t163*t2113;
  t2126 = t539*t2120;
  t2127 = t2123 + t2126;
  t2135 = -1.*t163*t2113;
  t2142 = 4.e-6*t126*t2120;
  t2143 = t2135 + t2142;
  t2146 = t467*t2113;
  t2147 = -4.e-6*t163*t2120;
  t2148 = t2146 + t2147;
  t2185 = t200*t2105;
  t2189 = t241*t2027;
  t2191 = t2185 + t2189;
  t2194 = -1.*t79*t2191;
  t2196 = t1406 + t2123 + t2194;
  t2202 = 4.e-6*t1342*t34*t163;
  t2203 = -1.6e-11*t163*t2113;
  t2204 = 4.e-6*t79*t2191;
  t2206 = t2202 + t2203 + t2204;
  t2209 = t79*t1342*t34;
  t2210 = -4.e-6*t79*t2113;
  t2213 = -1.000000000016*t163*t2191;
  t2217 = t2209 + t2210 + t2213;
  t2268 = t1342*t34*t163;
  t2270 = -4.e-6*t163*t2113;
  t2275 = t467*t2191;
  t2276 = t2268 + t2270 + t2275;
  t2281 = 4.e-6*t126*t2113;
  t2288 = -1.*t163*t2191;
  t2290 = t2209 + t2281 + t2288;
  t2294 = 4.e-6*t126*t1342*t34;
  t2299 = t539*t2113;
  t2300 = 4.e-6*t163*t2191;
  t2304 = t2294 + t2299 + t2300;
  t2357 = Cos(var1[13]);
  t2358 = -1.*t2357;
  t2359 = 1. + t2358;
  t2364 = Sin(var1[13]);
  t2386 = Cos(var1[12]);
  t2390 = -1.*t2386;
  t2391 = 1. + t2390;
  t2395 = Sin(var1[12]);
  t2396 = 0.15121*t2395;
  t2361 = 4.e-6*t2359;
  t2373 = -2.8e-11*t2359;
  t2433 = 7.e-6*t2359;
  t2475 = Cos(var1[14]);
  t2477 = -1.*t2475;
  t2478 = 1. + t2477;
  t2483 = Sin(var1[14]);
  t2455 = -1.*t2364;
  t2461 = -4.e-6*t2364;
  t2443 = t197*t2395*t272;
  t2444 = t2386*t272*t293;
  t2446 = t2443 + t2444;
  t2467 = -1.*t2386*t197*t272;
  t2468 = t2395*t272*t293;
  t2470 = t2467 + t2468;
  t2493 = 7.e-6*t2478;
  t2427 = -7.e-6*t2364;
  t2528 = -7.e-6*t2359;
  t2436 = 4.e-6*t2364;
  t2546 = 4.e-6*t2478;
  t2482 = -2.8e-11*t2478;
  t2567 = -1. + t2357;
  t2568 = 4.e-6*t2567;
  t2367 = 7.e-6*t2364;
  t2520 = 2.8e-11*t2359;
  t2522 = t2520 + t2455;
  t2523 = t34*t2522;
  t2529 = t2528 + t2461;
  t2532 = t2529*t2446;
  t2534 = -1.000000000016*t2359;
  t2535 = 1. + t2534;
  t2537 = t2535*t2470;
  t2538 = t2523 + t2532 + t2537;
  t2590 = 7.e-6*t2483;
  t2569 = t2568 + t2427;
  t2571 = t34*t2569;
  t2572 = -6.5e-11*t2359;
  t2573 = 1. + t2572;
  t2577 = t2573*t2446;
  t2578 = t2528 + t2436;
  t2579 = t2578*t2470;
  t2580 = t2571 + t2577 + t2579;
  t2600 = -1.000000000049*t2359;
  t2603 = 1. + t2600;
  t2608 = t2603*t34;
  t2611 = t2568 + t2367;
  t2616 = t2611*t2446;
  t2617 = t2520 + t2364;
  t2625 = t2617*t2470;
  t2626 = t2608 + t2616 + t2625;
  t2496 = -4.e-6*t2483;
  t2633 = 2.8e-11*t2478;
  t2484 = -1.*t2483;
  t2654 = -7.e-6*t2478;
  t2552 = 4.e-6*t2483;
  t2638 = -1. + t2475;
  t2639 = 4.e-6*t2638;
  t2547 = -7.e-6*t2483;
  t2407 = 0.15121*t2391;
  t2408 = t2407 + t2396;
  t2393 = -0.15121*t2391;
  t2403 = t2393 + t2396;
  t2448 = 1.0248489999999998e-12*var1[13];
  t2451 = -0.28120900000849935*t2359;
  t2458 = t2373 + t2455;
  t2459 = -0.038748999993*t2458;
  t2464 = t2433 + t2461;
  t2465 = -2.123459e-6*t2464;
  t2466 = t2448 + t2451 + t2459 + t2465;
  t2419 = -1.4640699999999997e-7*var1[13];
  t2425 = -1.38024835e-16*t2359;
  t2428 = t2361 + t2427;
  t2430 = -0.038748999993*t2428;
  t2437 = t2433 + t2436;
  t2438 = -0.281209000004*t2437;
  t2441 = t2419 + t2425 + t2430 + t2438;
  t2542 = -2.598649999999999e-7*var1[14];
  t2543 = -2.3905277499999995e-16*t2478;
  t2550 = t2546 + t2547;
  t2551 = -0.038922999986*t2550;
  t2554 = t2493 + t2552;
  t2557 = -0.503149000008*t2554;
  t2564 = t2542 + t2543 + t2551 + t2557;
  t2697 = -1.*t34*t197*t2395;
  t2699 = -1.*t2386*t34*t293;
  t2701 = t2697 + t2699;
  t2705 = -1.*t2386*t34*t197;
  t2706 = t34*t2395*t293;
  t2709 = t2705 + t2706;
  t2474 = 1.8190549999999993e-12*var1[14];
  t2479 = -0.5031490000160505*t2478;
  t2487 = t2482 + t2484;
  t2490 = -0.038922999986*t2487;
  t2508 = t2493 + t2496;
  t2516 = -3.6777349999999994e-6*t2508;
  t2518 = t2474 + t2479 + t2490 + t2516;
  t2584 = 1.0394599999999997e-12*var1[14];
  t2588 = -0.03892299998790722*t2478;
  t2591 = t2546 + t2590;
  t2595 = -3.6777349999999994e-6*t2591;
  t2597 = t2482 + t2483;
  t2598 = -0.503149000008*t2597;
  t2599 = t2584 + t2588 + t2595 + t2598;
  t2642 = t2639 + t2590;
  t2711 = t2578*t2701;
  t2712 = t2573*t2709;
  t2714 = t2711 + t2712;
  t2634 = t2633 + t2483;
  t2720 = t2535*t2701;
  t2721 = t2529*t2709;
  t2722 = t2720 + t2721;
  t2645 = -1.000000000049*t2478;
  t2646 = 1. + t2645;
  t2725 = t2617*t2701;
  t2726 = t2611*t2709;
  t2727 = t2725 + t2726;
  t2656 = t2654 + t2496;
  t2651 = -1.000000000016*t2478;
  t2652 = 1. + t2651;
  t2658 = t2633 + t2484;
  t2682 = -6.5e-11*t2478;
  t2683 = 1. + t2682;
  t2670 = t2654 + t2552;
  t2687 = t2639 + t2547;
  t2764 = 0.15121*t2386;
  t2704 = t2466*t2701;
  t2710 = t2441*t2709;
  t2715 = t2564*t2714;
  t2723 = t2518*t2722;
  t2728 = t2599*t2727;
  t2730 = t2642*t2714;
  t2732 = t2634*t2722;
  t2736 = t2646*t2727;
  t2737 = t2730 + t2732 + t2736;
  t2740 = -0.038924*t2737;
  t2742 = t2656*t2714;
  t2743 = t2652*t2722;
  t2744 = t2658*t2727;
  t2747 = t2742 + t2743 + t2744;
  t2748 = -0.80315*t2747;
  t2754 = t2683*t2714;
  t2755 = t2670*t2722;
  t2756 = t2687*t2727;
  t2757 = t2754 + t2755 + t2756;
  t2758 = 0.148705*t2757;
  t2780 = -2.8e-11*t2364;
  t2798 = -7.e-6*t2357;
  t2803 = 4.e-6*t2357;
  t2830 = t2386*t34*t197;
  t2833 = -1.*t34*t2395*t293;
  t2834 = t2830 + t2833;
  t2783 = 7.e-6*t2357;
  t2867 = 2.8e-11*t2364;
  t2821 = -4.e-6*t2357;
  t2841 = t2798 + t2461;
  t2843 = t2841*t272;
  t2845 = -6.5e-11*t2364*t2701;
  t2848 = t2803 + t2427;
  t2850 = t2848*t2834;
  t2851 = t2843 + t2845 + t2850;
  t2860 = -1.000000000049*t2364*t272;
  t2862 = t2783 + t2461;
  t2863 = t2862*t2701;
  t2869 = t2357 + t2867;
  t2877 = t2869*t2834;
  t2881 = t2860 + t2863 + t2877;
  t2885 = t2358 + t2867;
  t2887 = t2885*t272;
  t2889 = t2821 + t2427;
  t2891 = t2889*t2701;
  t2892 = -1.000000000016*t2364*t2834;
  t2895 = t2887 + t2891 + t2892;
  t2930 = -2.8e-11*t2483;
  t2953 = 4.e-6*t2475;
  t2940 = t2522*t272;
  t2941 = t2529*t2701;
  t2942 = t2535*t2834;
  t2943 = t2940 + t2941 + t2942;
  t2963 = t2569*t272;
  t2964 = t2573*t2701;
  t2966 = t2578*t2834;
  t2968 = t2963 + t2964 + t2966;
  t2945 = -7.e-6*t2475;
  t2994 = t2603*t272;
  t2995 = t2611*t2701;
  t2997 = t2617*t2834;
  t2999 = t2994 + t2995 + t2997;
  t2934 = -4.e-6*t2475;
  t3024 = 2.8e-11*t2483;
  t2980 = 7.e-6*t2475;
  t2354 = 5.856279999999999e-13*var1[13];
  t2360 = -0.0387489999948987*t2359;
  t2369 = t2361 + t2367;
  t2371 = -2.123459e-6*t2369;
  t2376 = t2373 + t2364;
  t2381 = -0.281209000004*t2376;
  t2383 = t2354 + t2360 + t2371 + t2381;
  t3057 = -1.*t2395*t1363;
  t3058 = t2386*t1372;
  t3060 = t3057 + t3058;
  t3062 = t2386*t1363;
  t3065 = t2395*t1372;
  t3066 = t3062 + t3065;
  t3074 = -1.*t1342*t34*t2522;
  t3075 = t2529*t3060;
  t3076 = t2535*t3066;
  t3077 = t3074 + t3075 + t3076;
  t3086 = -1.*t1342*t34*t2569;
  t3088 = t2573*t3060;
  t3092 = t2578*t3066;
  t3093 = t3086 + t3088 + t3092;
  t3095 = -1.*t2603*t1342*t34;
  t3098 = t2611*t3060;
  t3102 = t2617*t3066;
  t3104 = t3095 + t3098 + t3102;
  t3168 = -1.*t34*t197*t2395*t1355;
  t3170 = -1.*t2386*t34*t1355*t293;
  t3177 = t3168 + t3170;
  t3181 = t2386*t34*t197*t1355;
  t3182 = -1.*t34*t2395*t1355*t293;
  t3188 = t3181 + t3182;
  t3192 = t2522*t1355*t272;
  t3193 = t2529*t3177;
  t3196 = t2535*t3188;
  t3199 = t3192 + t3193 + t3196;
  t3203 = t2569*t1355*t272;
  t3204 = t2573*t3177;
  t3210 = t2578*t3188;
  t3213 = t3203 + t3204 + t3210;
  t3221 = t2603*t1355*t272;
  t3226 = t2611*t3177;
  t3229 = t2617*t3188;
  t3231 = t3221 + t3226 + t3229;
  t3283 = t2395*t1577;
  t3285 = t2386*t1587;
  t3290 = t3283 + t3285;
  t3297 = t2386*t1577;
  t3299 = -1.*t2395*t1587;
  t3300 = t3297 + t3299;
  t3308 = t2578*t3290;
  t3309 = t2573*t3300;
  t3311 = t3308 + t3309;
  t3313 = t2535*t3290;
  t3316 = t2529*t3300;
  t3320 = t3313 + t3316;
  t3326 = t2617*t3290;
  t3333 = t2611*t3300;
  t3338 = t3326 + t3333;
  t2769 = -0.15121*t2395;
  t2771 = t2764 + t2769;
  t2773 = t2764 + t2396;
  t3390 = -1.*t2395*t1666;
  t3392 = t3390 + t3285;
  t3394 = -1.*t2386*t1666;
  t3395 = t3394 + t3299;
  t3400 = t2578*t3392;
  t3408 = t2573*t3395;
  t3409 = t3400 + t3408;
  t3415 = t2535*t3392;
  t3416 = t2529*t3395;
  t3417 = t3415 + t3416;
  t3419 = t2617*t3392;
  t3420 = t2611*t3395;
  t3424 = t3419 + t3420;
  t2781 = t2357 + t2780;
  t2782 = -0.281209000004*t2781;
  t2788 = t2783 + t2436;
  t2789 = -2.123459e-6*t2788;
  t2791 = -0.0387489999948987*t2364;
  t2793 = 5.856279999999999e-13 + t2782 + t2789 + t2791;
  t2799 = t2798 + t2436;
  t2802 = -0.038748999993*t2799;
  t2806 = t2803 + t2367;
  t2808 = -0.281209000004*t2806;
  t2812 = -1.38024835e-16*t2364;
  t2813 = -1.4640699999999997e-7 + t2802 + t2808 + t2812;
  t2817 = t2358 + t2780;
  t2818 = -0.038748999993*t2817;
  t2825 = t2821 + t2367;
  t2826 = -2.123459e-6*t2825;
  t2828 = -0.28120900000849935*t2364;
  t2829 = 1.0248489999999998e-12 + t2818 + t2826 + t2828;
  t3472 = t2386*t1666;
  t3474 = t2395*t1587;
  t3475 = t3472 + t3474;
  t3477 = -1.*t34*t2841*t1355;
  t3482 = -6.5e-11*t2364*t3392;
  t3488 = t2848*t3475;
  t3489 = t3477 + t3482 + t3488;
  t3492 = 1.000000000049*t34*t2364*t1355;
  t3494 = t2862*t3392;
  t3497 = t2869*t3475;
  t3498 = t3492 + t3494 + t3497;
  t3501 = -1.*t34*t2885*t1355;
  t3502 = t2889*t3392;
  t3503 = -1.000000000016*t2364*t3475;
  t3504 = t3501 + t3502 + t3503;
  t2931 = t2477 + t2930;
  t2932 = -0.038922999986*t2931;
  t2935 = t2934 + t2590;
  t2937 = -3.6777349999999994e-6*t2935;
  t2938 = -0.5031490000160505*t2483;
  t2939 = 1.8190549999999993e-12 + t2932 + t2937 + t2938;
  t2946 = t2945 + t2552;
  t2949 = -0.038922999986*t2946;
  t2955 = t2953 + t2590;
  t2956 = -0.503149000008*t2955;
  t2957 = -2.3905277499999995e-16*t2483;
  t2958 = -2.598649999999999e-7 + t2949 + t2956 + t2957;
  t2970 = t2475 + t2930;
  t2977 = -0.503149000008*t2970;
  t2982 = t2980 + t2552;
  t2983 = -3.6777349999999994e-6*t2982;
  t2988 = -0.03892299998790722*t2483;
  t2989 = 1.0394599999999997e-12 + t2977 + t2983 + t2988;
  t3004 = t2953 + t2547;
  t3536 = -1.*t34*t2522*t1355;
  t3538 = t2529*t3392;
  t3539 = t2535*t3475;
  t3540 = t3536 + t3538 + t3539;
  t3545 = -1.*t34*t2569*t1355;
  t3546 = t2573*t3392;
  t3548 = t2578*t3475;
  t3552 = t3545 + t3546 + t3548;
  t3008 = t2945 + t2496;
  t3558 = -1.*t2603*t34*t1355;
  t3560 = t2611*t3392;
  t3562 = t2617*t3475;
  t3565 = t3558 + t3560 + t3562;
  t3020 = t2934 + t2547;
  t3029 = t2477 + t3024;
  t3039 = t2475 + t3024;
  t3043 = t2980 + t2496;
  t3660 = t1342*t34*t197*t2395;
  t3662 = t2386*t1342*t34*t293;
  t3663 = t3660 + t3662;
  t3670 = -1.*t2386*t1342*t34*t197;
  t3671 = t1342*t34*t2395*t293;
  t3672 = t3670 + t3671;
  t3678 = -1.*t1342*t2522*t272;
  t3679 = t2529*t3663;
  t3680 = t2535*t3672;
  t3682 = t3678 + t3679 + t3680;
  t3684 = -1.*t1342*t2569*t272;
  t3685 = t2573*t3663;
  t3689 = t2578*t3672;
  t3690 = t3684 + t3685 + t3689;
  t3694 = -1.*t2603*t1342*t272;
  t3695 = t2611*t3663;
  t3696 = t2617*t3672;
  t3700 = t3694 + t3695 + t3696;
  t3733 = t2395*t1363;
  t3734 = t2386*t2027;
  t3736 = t3733 + t3734;
  t3740 = -1.*t2395*t2027;
  t3743 = t3062 + t3740;
  t3747 = t2578*t3736;
  t3751 = t2573*t3743;
  t3753 = t3747 + t3751;
  t3755 = t2535*t3736;
  t3757 = t2529*t3743;
  t3758 = t3755 + t3757;
  t3761 = t2617*t3736;
  t3762 = t2611*t3743;
  t3763 = t3761 + t3762;
  t3808 = -1.*t2395*t2105;
  t3809 = t3808 + t3734;
  t3817 = -1.*t2386*t2105;
  t3822 = t3817 + t3740;
  t3826 = t2578*t3809;
  t3827 = t2573*t3822;
  t3828 = t3826 + t3827;
  t3830 = t2535*t3809;
  t3832 = t2529*t3822;
  t3835 = t3830 + t3832;
  t3838 = t2617*t3809;
  t3839 = t2611*t3822;
  t3840 = t3838 + t3839;
  t3878 = t2386*t2105;
  t3879 = t2395*t2027;
  t3880 = t3878 + t3879;
  t3883 = t1342*t34*t2841;
  t3885 = -6.5e-11*t2364*t3809;
  t3886 = t2848*t3880;
  t3887 = t3883 + t3885 + t3886;
  t3892 = -1.000000000049*t1342*t34*t2364;
  t3894 = t2862*t3809;
  t3895 = t2869*t3880;
  t3899 = t3892 + t3894 + t3895;
  t3901 = t1342*t34*t2885;
  t3902 = t2889*t3809;
  t3905 = -1.000000000016*t2364*t3880;
  t3906 = t3901 + t3902 + t3905;
  t3935 = t1342*t34*t2522;
  t3936 = t2529*t3809;
  t3941 = t2535*t3880;
  t3946 = t3935 + t3936 + t3941;
  t3950 = t1342*t34*t2569;
  t3952 = t2573*t3809;
  t3953 = t2578*t3880;
  t3954 = t3950 + t3952 + t3953;
  t3958 = t2603*t1342*t34;
  t3959 = t2611*t3809;
  t3962 = t2617*t3880;
  t3965 = t3958 + t3959 + t3962;
  p_output1[0]=1.;
  p_output1[1]=-1.*t197*t270*t272 + t272*t290*t293 + t331*t338 + t187*t34 + t361*t378 + t434*t472 + t493*t503 + t525*t546 - 0.041195*(-1.*t415*t472 + t393*t503 + 4.e-6*t407*t546) - 0.14871*(4.e-6*t415*t472 + 4.e-6*t407*t503 + t546*t568) + 0.803147*(t415*t503 - 4.e-6*t415*t546 + t472*t609);
  p_output1[2]=-1.*t197*t290*t34 - 1.*t270*t293*t34 + t689 + t741 + t789 + t808 + t832 + t860 + t911 + t948;
  p_output1[3]=t689 + t741 + t789 + t808 + t832 + t860 + t911 + t948 + t197*t34*t982 - 1.*t293*t34*t998;
  p_output1[4]=t1064*t1084 + t1031*t272 - 0.041195*(t1094*t393 + 4.e-6*t1114*t407 - 1.*t1134*t415) + t1134*t434 + t1094*t493 + t1114*t525 - 0.14871*(4.e-6*t1094*t407 + 4.e-6*t1134*t415 + t1114*t568) + 0.803147*(t1094*t415 - 4.e-6*t1114*t415 + t1134*t609) + t1049*t688;
  p_output1[5]=t1207*t1231 + t1243*t1254 + t1275*t1285 + 0.803147*(t1254*t393 - 4.e-6*t1285*t393 - 1.000000000016*t1231*t415) - 0.14871*(4.e-6*t1231*t393 + 4.e-6*t1254*t415 - 1.6e-11*t1285*t415) - 0.041195*(-1.*t1231*t393 - 1.*t1254*t415 + 4.e-6*t1285*t415);
  p_output1[6]=1.;
  p_output1[7]=t1363*t270 + t1372*t290 + t1387*t331 - 1.*t1342*t187*t34 + t1403*t361 - 0.041195*(t1423*t393 + 4.e-6*t1435*t407 - 1.*t1412*t415) + t1412*t434 + t1423*t493 + t1435*t525 - 0.14871*(4.e-6*t1423*t407 + 4.e-6*t1412*t415 + t1435*t568) + 0.803147*(t1423*t415 - 4.e-6*t1435*t415 + t1412*t609);
  p_output1[8]=t1355*t187*t272 + t1494*t331 + t1355*t197*t270*t34 - 1.*t1355*t290*t293*t34 + t1507*t361 - 0.041195*(t1523*t393 + 4.e-6*t1535*t407 - 1.*t1514*t415) + t1514*t434 + t1523*t493 + t1535*t525 - 0.14871*(4.e-6*t1523*t407 + 4.e-6*t1514*t415 + t1535*t568) + 0.803147*(t1523*t415 - 4.e-6*t1535*t415 + t1514*t609);
  p_output1[9]=t1587*t270 + t1577*t290 + t1601*t331 + t1595*t361 - 0.041195*(t1615*t393 + 4.e-6*t1606*t407 - 1.*t1625*t415) + t1625*t434 + t1615*t493 + t1606*t525 - 0.14871*(4.e-6*t1615*t407 + 4.e-6*t1625*t415 + t1606*t568) + 0.803147*(-4.e-6*t1606*t415 + t1615*t415 + t1625*t609);
  p_output1[10]=t1680*t331 + t1674*t361 - 0.041195*(t1702*t393 + 4.e-6*t1684*t407 - 1.*t1710*t415) + t1710*t434 + t1702*t493 + t1684*t525 - 0.14871*(4.e-6*t1702*t407 + 4.e-6*t1710*t415 + t1684*t568) + 0.803147*(-4.e-6*t1684*t415 + t1702*t415 + t1710*t609) + t1666*t982 + t1587*t998;
  p_output1[11]=t1049*t1674 + t1064*t1748 - 1.*t1031*t1355*t34 - 0.041195*(t1755*t393 + 4.e-6*t1771*t407 - 1.*t1778*t415) + t1778*t434 + t1755*t493 + t1771*t525 - 0.14871*(4.e-6*t1755*t407 + 4.e-6*t1778*t415 + t1771*t568) + 0.803147*(t1755*t415 - 4.e-6*t1771*t415 + t1778*t609);
  p_output1[12]=t1207*t1839 + t1243*t1844 + t1275*t1857 + 0.803147*(t1864 - 4.e-6*t1857*t393 - 1.000000000016*t1839*t415) - 0.14871*(4.e-6*t1839*t393 + 4.e-6*t1844*t415 - 1.6e-11*t1857*t415) - 0.041195*(-1.*t1839*t393 - 1.*t1844*t415 + 4.e-6*t1857*t415);
  p_output1[13]=1.;
  p_output1[14]=t1666*t270 + t1587*t290 + t1674*t331 - 1.*t1355*t187*t34 + t1748*t361 - 0.041195*(t1864 + 4.e-6*t1857*t407 - 1.*t1839*t415) + t1839*t434 + t1844*t493 + t1857*t525 - 0.14871*(4.e-6*t1844*t407 + 4.e-6*t1839*t415 + t1857*t568) + 0.803147*(t1844*t415 - 4.e-6*t1857*t415 + t1839*t609);
  p_output1[15]=-1.*t1342*t187*t272 + t1954*t331 - 1.*t1342*t197*t270*t34 + t1342*t290*t293*t34 + t1963*t361 - 0.041195*(t1982*t393 + 4.e-6*t1991*t407 - 1.*t1971*t415) + t1971*t434 + t1982*t493 + t1991*t525 - 0.14871*(4.e-6*t1982*t407 + 4.e-6*t1971*t415 + t1991*t568) + 0.803147*(t1982*t415 - 4.e-6*t1991*t415 + t1971*t609);
  p_output1[16]=t2027*t270 + t1363*t290 + t2039*t331 + t2036*t361 - 0.041195*(t2054*t393 + 4.e-6*t2044*t407 - 1.*t2061*t415) + t2061*t434 + t2054*t493 + t2044*t525 - 0.14871*(4.e-6*t2054*t407 + 4.e-6*t2061*t415 + t2044*t568) + 0.803147*(-4.e-6*t2044*t415 + t2054*t415 + t2061*t609);
  p_output1[17]=t2120*t331 + t2113*t361 - 0.041195*(t2143*t393 + 4.e-6*t2127*t407 - 1.*t2148*t415) + t2148*t434 + t2143*t493 + t2127*t525 - 0.14871*(4.e-6*t2143*t407 + 4.e-6*t2148*t415 + t2127*t568) + 0.803147*(-4.e-6*t2127*t415 + t2143*t415 + t2148*t609) + t2105*t982 + t2027*t998;
  p_output1[18]=t1049*t2113 + t1064*t2191 + t1031*t1342*t34 - 0.041195*(t2196*t393 + 4.e-6*t2206*t407 - 1.*t2217*t415) + t2217*t434 + t2196*t493 + t2206*t525 - 0.14871*(4.e-6*t2196*t407 + 4.e-6*t2217*t415 + t2206*t568) + 0.803147*(t2196*t415 - 4.e-6*t2206*t415 + t2217*t609);
  p_output1[19]=t1207*t2276 + t1243*t2290 + t1275*t2304 + 0.803147*(t2290*t393 - 4.e-6*t2304*t393 - 1.000000000016*t2276*t415) - 0.14871*(4.e-6*t2276*t393 + 4.e-6*t2290*t415 - 1.6e-11*t2304*t415) - 0.041195*(-1.*t2276*t393 - 1.*t2290*t415 + 4.e-6*t2304*t415);
  p_output1[20]=1.;
  p_output1[21]=t2441*t2446 + t2466*t2470 + t2518*t2538 + t2564*t2580 + t2599*t2626 - 0.038924*(t2538*t2634 + t2580*t2642 + t2626*t2646) - 0.80315*(t2538*t2652 + t2580*t2656 + t2626*t2658) + 0.148705*(t2538*t2670 + t2580*t2683 + t2626*t2687) - 1.*t197*t2403*t272 + t2408*t272*t293 + t2383*t34;
  p_output1[22]=t2704 + t2710 + t2715 + t2723 + t2728 + t2740 + t2748 + t2758 - 1.*t197*t2408*t34 - 1.*t2403*t293*t34;
  p_output1[23]=t2704 + t2710 + t2715 + t2723 + t2728 + t2740 + t2748 + t2758 + t197*t2771*t34 - 1.*t2773*t293*t34;
  p_output1[24]=t272*t2793 + t2701*t2813 + t2829*t2834 + t2564*t2851 + t2599*t2881 + t2518*t2895 - 0.038924*(t2642*t2851 + t2646*t2881 + t2634*t2895) - 0.80315*(t2656*t2851 + t2658*t2881 + t2652*t2895) + 0.148705*(t2683*t2851 + t2687*t2881 + t2670*t2895);
  p_output1[25]=t2939*t2943 + t2958*t2968 + t2989*t2999 + 0.148705*(-6.5e-11*t2483*t2968 + t2943*t3004 + t2999*t3008) - 0.80315*(-1.000000000016*t2483*t2943 + t2968*t3020 + t2999*t3029) - 0.038924*(-1.000000000049*t2483*t2999 + t2943*t3039 + t2968*t3043);
  p_output1[26]=1.;
  p_output1[27]=t1363*t2403 + t1372*t2408 + t2441*t3060 + t2466*t3066 + t2518*t3077 + t2564*t3093 + t2599*t3104 - 0.038924*(t2634*t3077 + t2642*t3093 + t2646*t3104) - 0.80315*(t2652*t3077 + t2656*t3093 + t2658*t3104) + 0.148705*(t2670*t3077 + t2683*t3093 + t2687*t3104) - 1.*t1342*t2383*t34;
  p_output1[28]=t1355*t2383*t272 + t2441*t3177 + t2466*t3188 + t2518*t3199 + t2564*t3213 + t2599*t3231 - 0.038924*(t2634*t3199 + t2642*t3213 + t2646*t3231) - 0.80315*(t2652*t3199 + t2656*t3213 + t2658*t3231) + 0.148705*(t2670*t3199 + t2683*t3213 + t2687*t3231) + t1355*t197*t2403*t34 - 1.*t1355*t2408*t293*t34;
  p_output1[29]=t1587*t2403 + t1577*t2408 + t2466*t3290 + t2441*t3300 + t2564*t3311 + t2518*t3320 + t2599*t3338 - 0.038924*(t2642*t3311 + t2634*t3320 + t2646*t3338) - 0.80315*(t2656*t3311 + t2652*t3320 + t2658*t3338) + 0.148705*(t2683*t3311 + t2670*t3320 + t2687*t3338);
  p_output1[30]=t1666*t2771 + t1587*t2773 + t2466*t3392 + t2441*t3395 + t2564*t3409 + t2518*t3417 + t2599*t3424 - 0.038924*(t2642*t3409 + t2634*t3417 + t2646*t3424) - 0.80315*(t2656*t3409 + t2652*t3417 + t2658*t3424) + 0.148705*(t2683*t3409 + t2670*t3417 + t2687*t3424);
  p_output1[31]=t2813*t3392 - 1.*t1355*t2793*t34 + t2829*t3475 + t2564*t3489 + t2599*t3498 + t2518*t3504 - 0.038924*(t2642*t3489 + t2646*t3498 + t2634*t3504) - 0.80315*(t2656*t3489 + t2658*t3498 + t2652*t3504) + 0.148705*(t2683*t3489 + t2687*t3498 + t2670*t3504);
  p_output1[32]=t2939*t3540 + t2958*t3552 + t2989*t3565 - 0.038924*(t3039*t3540 + t3043*t3552 - 1.000000000049*t2483*t3565) + 0.148705*(t3004*t3540 - 6.5e-11*t2483*t3552 + t3008*t3565) - 0.80315*(-1.000000000016*t2483*t3540 + t3020*t3552 + t3029*t3565);
  p_output1[33]=1.;
  p_output1[34]=t1666*t2403 + t1587*t2408 + t2441*t3392 - 1.*t1355*t2383*t34 + t2466*t3475 + t2518*t3540 + t2564*t3552 + t2599*t3565 - 0.038924*(t2634*t3540 + t2642*t3552 + t2646*t3565) - 0.80315*(t2652*t3540 + t2656*t3552 + t2658*t3565) + 0.148705*(t2670*t3540 + t2683*t3552 + t2687*t3565);
  p_output1[35]=-1.*t1342*t2383*t272 - 1.*t1342*t197*t2403*t34 + t1342*t2408*t293*t34 + t2441*t3663 + t2466*t3672 + t2518*t3682 + t2564*t3690 + t2599*t3700 - 0.038924*(t2634*t3682 + t2642*t3690 + t2646*t3700) - 0.80315*(t2652*t3682 + t2656*t3690 + t2658*t3700) + 0.148705*(t2670*t3682 + t2683*t3690 + t2687*t3700);
  p_output1[36]=t2027*t2403 + t1363*t2408 + t2466*t3736 + t2441*t3743 + t2564*t3753 + t2518*t3758 + t2599*t3763 - 0.038924*(t2642*t3753 + t2634*t3758 + t2646*t3763) - 0.80315*(t2656*t3753 + t2652*t3758 + t2658*t3763) + 0.148705*(t2683*t3753 + t2670*t3758 + t2687*t3763);
  p_output1[37]=t2105*t2771 + t2027*t2773 + t2466*t3809 + t2441*t3822 + t2564*t3828 + t2518*t3835 + t2599*t3840 - 0.038924*(t2642*t3828 + t2634*t3835 + t2646*t3840) - 0.80315*(t2656*t3828 + t2652*t3835 + t2658*t3840) + 0.148705*(t2683*t3828 + t2670*t3835 + t2687*t3840);
  p_output1[38]=t1342*t2793*t34 + t2813*t3809 + t2829*t3880 + t2564*t3887 + t2599*t3899 + t2518*t3906 - 0.038924*(t2642*t3887 + t2646*t3899 + t2634*t3906) - 0.80315*(t2656*t3887 + t2658*t3899 + t2652*t3906) + 0.148705*(t2683*t3887 + t2687*t3899 + t2670*t3906);
  p_output1[39]=t2939*t3946 + t2958*t3954 + t2989*t3965 - 0.038924*(t3039*t3946 + t3043*t3954 - 1.000000000049*t2483*t3965) + 0.148705*(t3004*t3946 - 6.5e-11*t2483*t3954 + t3008*t3965) - 0.80315*(-1.000000000016*t2483*t3946 + t3020*t3954 + t3029*t3965);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_DiagonalStance2.hh"

namespace DiagonalStance2
{

void J_output_boundary_DiagonalStance2_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
