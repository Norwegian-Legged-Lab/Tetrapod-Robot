/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:46 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t107;
  double t316;
  double t318;
  double t334;
  double t358;
  double t373;
  double t393;
  double t138;
  double t170;
  double t213;
  double t235;
  double t300;
  double t408;
  double t62;
  double t433;
  double t434;
  double t435;
  double t445;
  double t455;
  double t458;
  double t468;
  double t471;
  double t474;
  double t482;
  double t527;
  double t500;
  double t509;
  double t511;
  double t519;
  double t521;
  double t522;
  double t542;
  double t544;
  double t546;
  double t553;
  double t587;
  double t589;
  double t596;
  double t605;
  double t608;
  double t612;
  double t404;
  double t405;
  double t341;
  double t384;
  double t439;
  double t441;
  double t443;
  double t412;
  double t414;
  double t423;
  double t425;
  double t431;
  double t563;
  double t570;
  double t571;
  double t577;
  double t586;
  double t693;
  double t694;
  double t718;
  double t731;
  double t742;
  double t748;
  double t525;
  double t526;
  double t532;
  double t540;
  double t541;
  double t475;
  double t486;
  double t496;
  double t758;
  double t762;
  double t770;
  double t774;
  double t776;
  double t777;
  double t676;
  double t679;
  double t786;
  double t794;
  double t796;
  double t632;
  double t637;
  double t938;
  double t721;
  double t757;
  double t773;
  double t781;
  double t806;
  double t815;
  double t817;
  double t828;
  double t829;
  double t835;
  double t843;
  double t846;
  double t868;
  double t884;
  double t885;
  double t898;
  double t901;
  double t916;
  double t919;
  double t921;
  double t1011;
  double t1012;
  double t1013;
  double t1030;
  double t1033;
  double t1039;
  double t1053;
  double t1058;
  double t1063;
  double t1067;
  double t1070;
  double t1076;
  double t1085;
  double t1090;
  double t1149;
  double t1155;
  double t1159;
  double t1169;
  double t1185;
  double t1187;
  double t1194;
  double t1214;
  double t1218;
  double t1219;
  double t1229;
  double t63;
  double t205;
  double t228;
  double t261;
  double t269;
  double t1282;
  double t1291;
  double t1286;
  double t1298;
  double t1299;
  double t1309;
  double t1314;
  double t1319;
  double t1325;
  double t1326;
  double t1327;
  double t1332;
  double t1333;
  double t1336;
  double t1344;
  double t1346;
  double t1347;
  double t1350;
  double t1353;
  double t1355;
  double t1356;
  double t1362;
  double t1367;
  double t1371;
  double t1372;
  double t1375;
  double t1430;
  double t1431;
  double t1435;
  double t1439;
  double t1442;
  double t1445;
  double t1450;
  double t1451;
  double t1453;
  double t1457;
  double t1464;
  double t1465;
  double t1466;
  double t1467;
  double t1475;
  double t1476;
  double t1477;
  double t1478;
  double t1519;
  double t1525;
  double t1529;
  double t1532;
  double t1535;
  double t1538;
  double t1545;
  double t1547;
  double t1548;
  double t1567;
  double t1570;
  double t1571;
  double t1575;
  double t1576;
  double t1577;
  double t1582;
  double t1584;
  double t1588;
  double t1591;
  double t1592;
  double t1593;
  double t940;
  double t950;
  double t958;
  double t1646;
  double t1649;
  double t1653;
  double t1660;
  double t1665;
  double t1670;
  double t1671;
  double t1675;
  double t1676;
  double t1677;
  double t1681;
  double t1682;
  double t1684;
  double t1690;
  double t1693;
  double t1696;
  double t971;
  double t978;
  double t986;
  double t991;
  double t996;
  double t1007;
  double t1008;
  double t1009;
  double t1742;
  double t1746;
  double t1750;
  double t1756;
  double t1757;
  double t1760;
  double t1763;
  double t1764;
  double t1769;
  double t1773;
  double t1775;
  double t1776;
  double t1777;
  double t1778;
  double t1144;
  double t1146;
  double t1148;
  double t1181;
  double t1183;
  double t1201;
  double t1206;
  double t1213;
  double t1824;
  double t1825;
  double t1826;
  double t1832;
  double t1834;
  double t1835;
  double t1837;
  double t1841;
  double t1842;
  double t1843;
  double t1847;
  double t1856;
  double t1954;
  double t1955;
  double t1956;
  double t1960;
  double t1962;
  double t1963;
  double t1969;
  double t1971;
  double t1973;
  double t1974;
  double t1976;
  double t1977;
  double t1978;
  double t1980;
  double t1983;
  double t1985;
  double t1989;
  double t1990;
  double t2029;
  double t2033;
  double t2036;
  double t2040;
  double t2045;
  double t2052;
  double t2054;
  double t2057;
  double t2062;
  double t2065;
  double t2067;
  double t2069;
  double t2070;
  double t2072;
  double t2074;
  double t2075;
  double t2077;
  double t2120;
  double t2122;
  double t2123;
  double t2131;
  double t2133;
  double t2135;
  double t2139;
  double t2144;
  double t2145;
  double t2147;
  double t2154;
  double t2155;
  double t2156;
  double t2165;
  double t2166;
  double t2168;
  double t2207;
  double t2211;
  double t2214;
  double t2217;
  double t2218;
  double t2221;
  double t2222;
  double t2223;
  double t2226;
  double t2232;
  double t2233;
  double t2236;
  double t2239;
  double t2302;
  double t2303;
  double t2305;
  double t2309;
  double t2314;
  double t2316;
  double t2317;
  double t2322;
  double t2326;
  double t2329;
  double t2332;
  double t2365;
  double t2366;
  double t2368;
  double t2373;
  double t2384;
  double t2386;
  double t2389;
  double t2393;
  double t2394;
  double t2372;
  double t2379;
  double t2410;
  double t2474;
  double t2478;
  double t2479;
  double t2483;
  double t2449;
  double t2453;
  double t2420;
  double t2422;
  double t2429;
  double t2464;
  double t2467;
  double t2469;
  double t2491;
  double t2407;
  double t2513;
  double t2411;
  double t2545;
  double t2482;
  double t2561;
  double t2563;
  double t2375;
  double t2509;
  double t2510;
  double t2512;
  double t2518;
  double t2521;
  double t2523;
  double t2524;
  double t2525;
  double t2527;
  double t2589;
  double t2566;
  double t2568;
  double t2570;
  double t2572;
  double t2573;
  double t2574;
  double t2575;
  double t2576;
  double t2599;
  double t2602;
  double t2605;
  double t2607;
  double t2608;
  double t2609;
  double t2616;
  double t2619;
  double t2501;
  double t2628;
  double t2485;
  double t2659;
  double t2553;
  double t2634;
  double t2635;
  double t2546;
  double t2400;
  double t2402;
  double t2390;
  double t2395;
  double t2431;
  double t2434;
  double t2450;
  double t2452;
  double t2454;
  double t2459;
  double t2463;
  double t2404;
  double t2405;
  double t2408;
  double t2409;
  double t2412;
  double t2413;
  double t2418;
  double t2531;
  double t2540;
  double t2549;
  double t2551;
  double t2556;
  double t2558;
  double t2560;
  double t2702;
  double t2704;
  double t2705;
  double t2712;
  double t2714;
  double t2716;
  double t2473;
  double t2481;
  double t2486;
  double t2487;
  double t2502;
  double t2503;
  double t2504;
  double t2585;
  double t2588;
  double t2590;
  double t2593;
  double t2594;
  double t2595;
  double t2597;
  double t2638;
  double t2719;
  double t2721;
  double t2722;
  double t2629;
  double t2725;
  double t2726;
  double t2727;
  double t2642;
  double t2644;
  double t2731;
  double t2734;
  double t2735;
  double t2662;
  double t2653;
  double t2657;
  double t2667;
  double t2675;
  double t2676;
  double t2671;
  double t2686;
  double t2766;
  double t2708;
  double t2718;
  double t2724;
  double t2730;
  double t2736;
  double t2737;
  double t2742;
  double t2746;
  double t2747;
  double t2748;
  double t2749;
  double t2750;
  double t2751;
  double t2754;
  double t2755;
  double t2756;
  double t2757;
  double t2758;
  double t2762;
  double t2763;
  double t2785;
  double t2808;
  double t2817;
  double t2848;
  double t2852;
  double t2854;
  double t2790;
  double t2877;
  double t2833;
  double t2856;
  double t2858;
  double t2861;
  double t2862;
  double t2863;
  double t2865;
  double t2871;
  double t2872;
  double t2875;
  double t2878;
  double t2881;
  double t2883;
  double t2885;
  double t2887;
  double t2888;
  double t2889;
  double t2890;
  double t2891;
  double t2946;
  double t2976;
  double t2958;
  double t2965;
  double t2966;
  double t2967;
  double t2994;
  double t2995;
  double t2996;
  double t2999;
  double t2972;
  double t3022;
  double t3023;
  double t3024;
  double t3026;
  double t2951;
  double t3059;
  double t3005;
  double t2364;
  double t2369;
  double t2376;
  double t2377;
  double t2380;
  double t2381;
  double t2382;
  double t3095;
  double t3097;
  double t3101;
  double t3103;
  double t3105;
  double t3106;
  double t3111;
  double t3114;
  double t3116;
  double t3118;
  double t3123;
  double t3124;
  double t3126;
  double t3127;
  double t3133;
  double t3135;
  double t3139;
  double t3140;
  double t3192;
  double t3193;
  double t3195;
  double t3199;
  double t3201;
  double t3203;
  double t3217;
  double t3220;
  double t3221;
  double t3222;
  double t3225;
  double t3226;
  double t3232;
  double t3233;
  double t3235;
  double t3236;
  double t3238;
  double t3246;
  double t3288;
  double t3290;
  double t3294;
  double t3296;
  double t3299;
  double t3300;
  double t3304;
  double t3305;
  double t3307;
  double t3311;
  double t3312;
  double t3317;
  double t3320;
  double t3323;
  double t3331;
  double t2767;
  double t2771;
  double t2773;
  double t3406;
  double t3409;
  double t3413;
  double t3417;
  double t3423;
  double t3432;
  double t3434;
  double t3439;
  double t3441;
  double t3442;
  double t3444;
  double t3445;
  double t3448;
  double t2787;
  double t2788;
  double t2791;
  double t2792;
  double t2802;
  double t2803;
  double t2810;
  double t2814;
  double t2818;
  double t2819;
  double t2820;
  double t2824;
  double t2827;
  double t2831;
  double t2834;
  double t2835;
  double t2838;
  double t2846;
  double t3496;
  double t3497;
  double t3498;
  double t3503;
  double t3506;
  double t3507;
  double t3509;
  double t3514;
  double t3515;
  double t3519;
  double t3522;
  double t3524;
  double t3526;
  double t3533;
  double t3535;
  double t2947;
  double t2950;
  double t2952;
  double t2954;
  double t2955;
  double t2956;
  double t2973;
  double t2975;
  double t2978;
  double t2986;
  double t2987;
  double t2992;
  double t3002;
  double t3003;
  double t3006;
  double t3016;
  double t3019;
  double t3021;
  double t3029;
  double t3567;
  double t3568;
  double t3569;
  double t3571;
  double t3573;
  double t3574;
  double t3576;
  double t3582;
  double t3037;
  double t3585;
  double t3586;
  double t3590;
  double t3591;
  double t3057;
  double t3060;
  double t3069;
  double t3072;
  double t3705;
  double t3706;
  double t3709;
  double t3711;
  double t3712;
  double t3715;
  double t3719;
  double t3720;
  double t3722;
  double t3724;
  double t3731;
  double t3733;
  double t3734;
  double t3735;
  double t3738;
  double t3740;
  double t3742;
  double t3744;
  double t3795;
  double t3800;
  double t3801;
  double t3813;
  double t3817;
  double t3823;
  double t3827;
  double t3828;
  double t3836;
  double t3838;
  double t3843;
  double t3851;
  double t3855;
  double t3856;
  double t3898;
  double t3904;
  double t3907;
  double t3909;
  double t3912;
  double t3915;
  double t3916;
  double t3919;
  double t3923;
  double t3924;
  double t3928;
  double t3929;
  double t3932;
  double t4006;
  double t4008;
  double t4019;
  double t4026;
  double t4030;
  double t4036;
  double t4040;
  double t4043;
  double t4044;
  double t4045;
  double t4046;
  double t4049;
  double t4050;
  double t4051;
  double t4054;
  double t4099;
  double t4101;
  double t4103;
  double t4105;
  double t4110;
  double t4116;
  double t4121;
  double t4122;
  double t4125;
  double t4126;
  double t4128;
  double t4129;
  t107 = Cos(var1[10]);
  t316 = Cos(var1[9]);
  t318 = -1.*t316;
  t334 = 1. + t318;
  t358 = Sin(var1[9]);
  t373 = -0.15121*t358;
  t393 = Sin(var1[4]);
  t138 = -1.*t107;
  t170 = 1. + t138;
  t213 = -1. + t107;
  t235 = Sin(var1[10]);
  t300 = Cos(var1[5]);
  t408 = Sin(var1[5]);
  t62 = Cos(var1[4]);
  t433 = t300*t358*t393;
  t434 = t316*t393*t408;
  t435 = t433 + t434;
  t445 = -1.*t316*t300*t393;
  t455 = t358*t393*t408;
  t458 = t445 + t455;
  t468 = Cos(var1[11]);
  t471 = -1.*t468;
  t474 = 1. + t471;
  t482 = Sin(var1[11]);
  t527 = -1. + t468;
  t500 = t62*t235;
  t509 = -4.e-6*t235*t435;
  t511 = -1.000000000016*t170;
  t519 = 1. + t511;
  t521 = t519*t458;
  t522 = t500 + t509 + t521;
  t542 = t107*t62;
  t544 = 4.e-6*t170*t435;
  t546 = -1.*t235*t458;
  t553 = t542 + t544 + t546;
  t587 = 4.e-6*t170*t62;
  t589 = 1.6e-11*t213;
  t596 = 1. + t589;
  t605 = t596*t435;
  t608 = 4.e-6*t235*t458;
  t612 = t587 + t605 + t608;
  t404 = -0.15121*t334;
  t405 = t404 + t373;
  t341 = 0.15121*t334;
  t384 = t341 + t373;
  t439 = 0.281210000008499*t170;
  t441 = -0.03874900000062*t235;
  t443 = t439 + t441;
  t412 = -1.2484e-7*var1[10];
  t414 = 2.479936e-18*t170;
  t423 = -1.54996e-7*t213;
  t425 = 1.124840000016e-6*t235;
  t431 = t412 + t414 + t423 + t425;
  t563 = -1.26e-8*var1[11];
  t570 = 2.552896e-18*t474;
  t571 = -1.59556e-7*t527;
  t577 = 2.012600000032e-6*t482;
  t586 = t563 + t570 + t571 + t577;
  t693 = -1.*t62*t300*t358;
  t694 = -1.*t316*t62*t408;
  t718 = t693 + t694;
  t731 = -1.*t316*t62*t300;
  t742 = t62*t358*t408;
  t748 = t731 + t742;
  t525 = -5.04e-14*var1[11];
  t526 = -0.039889*t474;
  t532 = 6.38224e-13*t527;
  t540 = -0.503150000008*t482;
  t541 = t525 + t526 + t532 + t540;
  t475 = 0.50315000001605*t474;
  t486 = -0.0398890000006382*t482;
  t496 = t475 + t486;
  t758 = 4.e-6*t235*t718;
  t762 = t596*t748;
  t770 = t758 + t762;
  t774 = -1.*t235*t718;
  t776 = 4.e-6*t170*t748;
  t777 = t774 + t776;
  t676 = -1.000000000016*t474;
  t679 = 1. + t676;
  t786 = t519*t718;
  t794 = -4.e-6*t235*t748;
  t796 = t786 + t794;
  t632 = 1.6e-11*t527;
  t637 = 1. + t632;
  t938 = -0.15121*t316;
  t721 = t443*t718;
  t757 = t431*t748;
  t773 = t586*t770;
  t781 = t541*t777;
  t806 = t496*t796;
  t815 = -4.e-6*t482*t770;
  t817 = t482*t777;
  t828 = t679*t796;
  t829 = t815 + t817 + t828;
  t835 = 0.803147*t829;
  t843 = 4.e-6*t474*t770;
  t846 = t468*t777;
  t868 = -1.*t482*t796;
  t884 = t843 + t846 + t868;
  t885 = -0.041195*t884;
  t898 = t637*t770;
  t901 = 4.e-6*t474*t777;
  t916 = 4.e-6*t482*t796;
  t919 = t898 + t901 + t916;
  t921 = -0.14871*t919;
  t1011 = t316*t62*t300;
  t1012 = -1.*t62*t358*t408;
  t1013 = t1011 + t1012;
  t1030 = -1.*t235*t393;
  t1033 = -1.*t107*t1013;
  t1039 = t1030 + t758 + t1033;
  t1053 = 4.e-6*t235*t393;
  t1058 = -1.6e-11*t235*t718;
  t1063 = 4.e-6*t107*t1013;
  t1067 = t1053 + t1058 + t1063;
  t1070 = t107*t393;
  t1076 = -4.e-6*t107*t718;
  t1085 = -1.000000000016*t235*t1013;
  t1090 = t1070 + t1076 + t1085;
  t1149 = t235*t393;
  t1155 = -4.e-6*t235*t718;
  t1159 = t519*t1013;
  t1169 = t1149 + t1155 + t1159;
  t1185 = 4.e-6*t170*t718;
  t1187 = -1.*t235*t1013;
  t1194 = t1070 + t1185 + t1187;
  t1214 = 4.e-6*t170*t393;
  t1218 = t596*t718;
  t1219 = 4.e-6*t235*t1013;
  t1229 = t1214 + t1218 + t1219;
  t63 = -4.9936e-13*var1[10];
  t205 = -0.038749*t170;
  t228 = 6.19984e-13*t213;
  t261 = -0.281210000004*t235;
  t269 = t63 + t205 + t228 + t261;
  t1282 = Cos(var1[3]);
  t1291 = Sin(var1[3]);
  t1286 = t1282*t300*t393;
  t1298 = -1.*t1291*t408;
  t1299 = t1286 + t1298;
  t1309 = -1.*t300*t1291;
  t1314 = -1.*t1282*t393*t408;
  t1319 = t1309 + t1314;
  t1325 = -1.*t358*t1299;
  t1326 = t316*t1319;
  t1327 = t1325 + t1326;
  t1332 = t316*t1299;
  t1333 = t358*t1319;
  t1336 = t1332 + t1333;
  t1344 = -1.*t1282*t62*t235;
  t1346 = -4.e-6*t235*t1327;
  t1347 = t519*t1336;
  t1350 = t1344 + t1346 + t1347;
  t1353 = -1.*t107*t1282*t62;
  t1355 = 4.e-6*t170*t1327;
  t1356 = -1.*t235*t1336;
  t1362 = t1353 + t1355 + t1356;
  t1367 = -4.e-6*t170*t1282*t62;
  t1371 = t596*t1327;
  t1372 = 4.e-6*t235*t1336;
  t1375 = t1367 + t1371 + t1372;
  t1430 = -1.*t62*t300*t358*t1291;
  t1431 = -1.*t316*t62*t1291*t408;
  t1435 = t1430 + t1431;
  t1439 = t316*t62*t300*t1291;
  t1442 = -1.*t62*t358*t1291*t408;
  t1445 = t1439 + t1442;
  t1450 = t235*t1291*t393;
  t1451 = -4.e-6*t235*t1435;
  t1453 = t519*t1445;
  t1457 = t1450 + t1451 + t1453;
  t1464 = t107*t1291*t393;
  t1465 = 4.e-6*t170*t1435;
  t1466 = -1.*t235*t1445;
  t1467 = t1464 + t1465 + t1466;
  t1475 = 4.e-6*t170*t1291*t393;
  t1476 = t596*t1435;
  t1477 = 4.e-6*t235*t1445;
  t1478 = t1475 + t1476 + t1477;
  t1519 = -1.*t300*t1291*t393;
  t1525 = -1.*t1282*t408;
  t1529 = t1519 + t1525;
  t1532 = t1282*t300;
  t1535 = -1.*t1291*t393*t408;
  t1538 = t1532 + t1535;
  t1545 = t358*t1529;
  t1547 = t316*t1538;
  t1548 = t1545 + t1547;
  t1567 = t316*t1529;
  t1570 = -1.*t358*t1538;
  t1571 = t1567 + t1570;
  t1575 = 4.e-6*t235*t1548;
  t1576 = t596*t1571;
  t1577 = t1575 + t1576;
  t1582 = -1.*t235*t1548;
  t1584 = 4.e-6*t170*t1571;
  t1588 = t1582 + t1584;
  t1591 = t519*t1548;
  t1592 = -4.e-6*t235*t1571;
  t1593 = t1591 + t1592;
  t940 = 0.15121*t358;
  t950 = t938 + t940;
  t958 = t938 + t373;
  t1646 = t300*t1291*t393;
  t1649 = t1282*t408;
  t1653 = t1646 + t1649;
  t1660 = -1.*t358*t1653;
  t1665 = t1660 + t1547;
  t1670 = -1.*t316*t1653;
  t1671 = t1670 + t1570;
  t1675 = 4.e-6*t235*t1665;
  t1676 = t596*t1671;
  t1677 = t1675 + t1676;
  t1681 = -1.*t235*t1665;
  t1682 = 4.e-6*t170*t1671;
  t1684 = t1681 + t1682;
  t1690 = t519*t1665;
  t1693 = -4.e-6*t235*t1671;
  t1696 = t1690 + t1693;
  t971 = -0.281210000004*t107;
  t978 = -4.9936e-13 + t971 + t441;
  t986 = 1.124840000016e-6*t107;
  t991 = 1.5499600000248e-7*t235;
  t996 = -1.2484e-7 + t986 + t991;
  t1007 = -0.03874900000062*t107;
  t1008 = 0.281210000008499*t235;
  t1009 = t1007 + t1008;
  t1742 = t316*t1653;
  t1746 = t358*t1538;
  t1750 = t1742 + t1746;
  t1756 = t62*t235*t1291;
  t1757 = -1.*t107*t1750;
  t1760 = t1756 + t1675 + t1757;
  t1763 = -4.e-6*t62*t235*t1291;
  t1764 = -1.6e-11*t235*t1665;
  t1769 = 4.e-6*t107*t1750;
  t1773 = t1763 + t1764 + t1769;
  t1775 = -1.*t107*t62*t1291;
  t1776 = -4.e-6*t107*t1665;
  t1777 = -1.000000000016*t235*t1750;
  t1778 = t1775 + t1776 + t1777;
  t1144 = -0.0398890000006382*t468;
  t1146 = 0.50315000001605*t482;
  t1148 = t1144 + t1146;
  t1181 = -0.503150000008*t468;
  t1183 = -5.04e-14 + t1181 + t486;
  t1201 = 2.012600000032e-6*t468;
  t1206 = 1.59556000002553e-7*t482;
  t1213 = -1.26e-8 + t1201 + t1206;
  t1824 = -1.*t62*t235*t1291;
  t1825 = -4.e-6*t235*t1665;
  t1826 = t519*t1750;
  t1832 = t1824 + t1825 + t1826;
  t1834 = 4.e-6*t170*t1665;
  t1835 = -1.*t235*t1750;
  t1837 = t1775 + t1834 + t1835;
  t1841 = -4.e-6*t170*t62*t1291;
  t1842 = t596*t1665;
  t1843 = 4.e-6*t235*t1750;
  t1847 = t1841 + t1842 + t1843;
  t1856 = t468*t1837;
  t1954 = t1282*t62*t300*t358;
  t1955 = t316*t1282*t62*t408;
  t1956 = t1954 + t1955;
  t1960 = -1.*t316*t1282*t62*t300;
  t1962 = t1282*t62*t358*t408;
  t1963 = t1960 + t1962;
  t1969 = -1.*t1282*t235*t393;
  t1971 = -4.e-6*t235*t1956;
  t1973 = t519*t1963;
  t1974 = t1969 + t1971 + t1973;
  t1976 = -1.*t107*t1282*t393;
  t1977 = 4.e-6*t170*t1956;
  t1978 = -1.*t235*t1963;
  t1980 = t1976 + t1977 + t1978;
  t1983 = -4.e-6*t170*t1282*t393;
  t1985 = t596*t1956;
  t1989 = 4.e-6*t235*t1963;
  t1990 = t1983 + t1985 + t1989;
  t2029 = t300*t1291;
  t2033 = t1282*t393*t408;
  t2036 = t2029 + t2033;
  t2040 = t358*t1299;
  t2045 = t316*t2036;
  t2052 = t2040 + t2045;
  t2054 = -1.*t358*t2036;
  t2057 = t1332 + t2054;
  t2062 = 4.e-6*t235*t2052;
  t2065 = t596*t2057;
  t2067 = t2062 + t2065;
  t2069 = -1.*t235*t2052;
  t2070 = 4.e-6*t170*t2057;
  t2072 = t2069 + t2070;
  t2074 = t519*t2052;
  t2075 = -4.e-6*t235*t2057;
  t2077 = t2074 + t2075;
  t2120 = -1.*t1282*t300*t393;
  t2122 = t1291*t408;
  t2123 = t2120 + t2122;
  t2131 = -1.*t358*t2123;
  t2133 = t2131 + t2045;
  t2135 = -1.*t316*t2123;
  t2139 = t2135 + t2054;
  t2144 = 4.e-6*t235*t2133;
  t2145 = t596*t2139;
  t2147 = t2144 + t2145;
  t2154 = -1.*t235*t2133;
  t2155 = 4.e-6*t170*t2139;
  t2156 = t2154 + t2155;
  t2165 = t519*t2133;
  t2166 = -4.e-6*t235*t2139;
  t2168 = t2165 + t2166;
  t2207 = t316*t2123;
  t2211 = t358*t2036;
  t2214 = t2207 + t2211;
  t2217 = -1.*t107*t2214;
  t2218 = t1344 + t2144 + t2217;
  t2221 = 4.e-6*t1282*t62*t235;
  t2222 = -1.6e-11*t235*t2133;
  t2223 = 4.e-6*t107*t2214;
  t2226 = t2221 + t2222 + t2223;
  t2232 = t107*t1282*t62;
  t2233 = -4.e-6*t107*t2133;
  t2236 = -1.000000000016*t235*t2214;
  t2239 = t2232 + t2233 + t2236;
  t2302 = t1282*t62*t235;
  t2303 = -4.e-6*t235*t2133;
  t2305 = t519*t2214;
  t2309 = t2302 + t2303 + t2305;
  t2314 = 4.e-6*t170*t2133;
  t2316 = -1.*t235*t2214;
  t2317 = t2232 + t2314 + t2316;
  t2322 = 4.e-6*t170*t1282*t62;
  t2326 = t596*t2133;
  t2329 = 4.e-6*t235*t2214;
  t2332 = t2322 + t2326 + t2329;
  t2365 = Cos(var1[13]);
  t2366 = -1.*t2365;
  t2368 = 1. + t2366;
  t2373 = Sin(var1[13]);
  t2384 = Cos(var1[12]);
  t2386 = -1.*t2384;
  t2389 = 1. + t2386;
  t2393 = Sin(var1[12]);
  t2394 = 0.15121*t2393;
  t2372 = 4.e-6*t2368;
  t2379 = -2.8e-11*t2368;
  t2410 = 7.e-6*t2368;
  t2474 = Cos(var1[14]);
  t2478 = -1.*t2474;
  t2479 = 1. + t2478;
  t2483 = Sin(var1[14]);
  t2449 = -1.*t2373;
  t2453 = -4.e-6*t2373;
  t2420 = t300*t2393*t393;
  t2422 = t2384*t393*t408;
  t2429 = t2420 + t2422;
  t2464 = -1.*t2384*t300*t393;
  t2467 = t2393*t393*t408;
  t2469 = t2464 + t2467;
  t2491 = 7.e-6*t2479;
  t2407 = -7.e-6*t2373;
  t2513 = -7.e-6*t2368;
  t2411 = 4.e-6*t2373;
  t2545 = 4.e-6*t2479;
  t2482 = -2.8e-11*t2479;
  t2561 = -1. + t2365;
  t2563 = 4.e-6*t2561;
  t2375 = 7.e-6*t2373;
  t2509 = 2.8e-11*t2368;
  t2510 = t2509 + t2449;
  t2512 = t62*t2510;
  t2518 = t2513 + t2453;
  t2521 = t2518*t2429;
  t2523 = -1.000000000016*t2368;
  t2524 = 1. + t2523;
  t2525 = t2524*t2469;
  t2527 = t2512 + t2521 + t2525;
  t2589 = 7.e-6*t2483;
  t2566 = t2563 + t2407;
  t2568 = t62*t2566;
  t2570 = -6.5e-11*t2368;
  t2572 = 1. + t2570;
  t2573 = t2572*t2429;
  t2574 = t2513 + t2411;
  t2575 = t2574*t2469;
  t2576 = t2568 + t2573 + t2575;
  t2599 = -1.000000000049*t2368;
  t2602 = 1. + t2599;
  t2605 = t2602*t62;
  t2607 = t2563 + t2375;
  t2608 = t2607*t2429;
  t2609 = t2509 + t2373;
  t2616 = t2609*t2469;
  t2619 = t2605 + t2608 + t2616;
  t2501 = -4.e-6*t2483;
  t2628 = 2.8e-11*t2479;
  t2485 = -1.*t2483;
  t2659 = -7.e-6*t2479;
  t2553 = 4.e-6*t2483;
  t2634 = -1. + t2474;
  t2635 = 4.e-6*t2634;
  t2546 = -7.e-6*t2483;
  t2400 = 0.15121*t2389;
  t2402 = t2400 + t2394;
  t2390 = -0.15121*t2389;
  t2395 = t2390 + t2394;
  t2431 = 1.0248489999999998e-12*var1[13];
  t2434 = -0.28120900000849935*t2368;
  t2450 = t2379 + t2449;
  t2452 = -0.038748999993*t2450;
  t2454 = t2410 + t2453;
  t2459 = -2.123459e-6*t2454;
  t2463 = t2431 + t2434 + t2452 + t2459;
  t2404 = -1.4640699999999997e-7*var1[13];
  t2405 = -1.38024835e-16*t2368;
  t2408 = t2372 + t2407;
  t2409 = -0.038748999993*t2408;
  t2412 = t2410 + t2411;
  t2413 = -0.281209000004*t2412;
  t2418 = t2404 + t2405 + t2409 + t2413;
  t2531 = -2.598649999999999e-7*var1[14];
  t2540 = -2.3905277499999995e-16*t2479;
  t2549 = t2545 + t2546;
  t2551 = -0.038922999986*t2549;
  t2556 = t2491 + t2553;
  t2558 = -0.503149000008*t2556;
  t2560 = t2531 + t2540 + t2551 + t2558;
  t2702 = -1.*t62*t300*t2393;
  t2704 = -1.*t2384*t62*t408;
  t2705 = t2702 + t2704;
  t2712 = -1.*t2384*t62*t300;
  t2714 = t62*t2393*t408;
  t2716 = t2712 + t2714;
  t2473 = 1.8190549999999993e-12*var1[14];
  t2481 = -0.5031490000160505*t2479;
  t2486 = t2482 + t2485;
  t2487 = -0.038922999986*t2486;
  t2502 = t2491 + t2501;
  t2503 = -3.6777349999999994e-6*t2502;
  t2504 = t2473 + t2481 + t2487 + t2503;
  t2585 = 1.0394599999999997e-12*var1[14];
  t2588 = -0.03892299998790722*t2479;
  t2590 = t2545 + t2589;
  t2593 = -3.6777349999999994e-6*t2590;
  t2594 = t2482 + t2483;
  t2595 = -0.503149000008*t2594;
  t2597 = t2585 + t2588 + t2593 + t2595;
  t2638 = t2635 + t2589;
  t2719 = t2574*t2705;
  t2721 = t2572*t2716;
  t2722 = t2719 + t2721;
  t2629 = t2628 + t2483;
  t2725 = t2524*t2705;
  t2726 = t2518*t2716;
  t2727 = t2725 + t2726;
  t2642 = -1.000000000049*t2479;
  t2644 = 1. + t2642;
  t2731 = t2609*t2705;
  t2734 = t2607*t2716;
  t2735 = t2731 + t2734;
  t2662 = t2659 + t2501;
  t2653 = -1.000000000016*t2479;
  t2657 = 1. + t2653;
  t2667 = t2628 + t2485;
  t2675 = -6.5e-11*t2479;
  t2676 = 1. + t2675;
  t2671 = t2659 + t2553;
  t2686 = t2635 + t2546;
  t2766 = 0.15121*t2384;
  t2708 = t2463*t2705;
  t2718 = t2418*t2716;
  t2724 = t2560*t2722;
  t2730 = t2504*t2727;
  t2736 = t2597*t2735;
  t2737 = t2638*t2722;
  t2742 = t2629*t2727;
  t2746 = t2644*t2735;
  t2747 = t2737 + t2742 + t2746;
  t2748 = -0.038924*t2747;
  t2749 = t2662*t2722;
  t2750 = t2657*t2727;
  t2751 = t2667*t2735;
  t2754 = t2749 + t2750 + t2751;
  t2755 = -0.80315*t2754;
  t2756 = t2676*t2722;
  t2757 = t2671*t2727;
  t2758 = t2686*t2735;
  t2762 = t2756 + t2757 + t2758;
  t2763 = 0.148705*t2762;
  t2785 = -2.8e-11*t2373;
  t2808 = -7.e-6*t2365;
  t2817 = 4.e-6*t2365;
  t2848 = t2384*t62*t300;
  t2852 = -1.*t62*t2393*t408;
  t2854 = t2848 + t2852;
  t2790 = 7.e-6*t2365;
  t2877 = 2.8e-11*t2373;
  t2833 = -4.e-6*t2365;
  t2856 = t2808 + t2453;
  t2858 = t2856*t393;
  t2861 = -6.5e-11*t2373*t2705;
  t2862 = t2817 + t2407;
  t2863 = t2862*t2854;
  t2865 = t2858 + t2861 + t2863;
  t2871 = -1.000000000049*t2373*t393;
  t2872 = t2790 + t2453;
  t2875 = t2872*t2705;
  t2878 = t2365 + t2877;
  t2881 = t2878*t2854;
  t2883 = t2871 + t2875 + t2881;
  t2885 = t2366 + t2877;
  t2887 = t2885*t393;
  t2888 = t2833 + t2407;
  t2889 = t2888*t2705;
  t2890 = -1.000000000016*t2373*t2854;
  t2891 = t2887 + t2889 + t2890;
  t2946 = -2.8e-11*t2483;
  t2976 = 4.e-6*t2474;
  t2958 = t2510*t393;
  t2965 = t2518*t2705;
  t2966 = t2524*t2854;
  t2967 = t2958 + t2965 + t2966;
  t2994 = t2566*t393;
  t2995 = t2572*t2705;
  t2996 = t2574*t2854;
  t2999 = t2994 + t2995 + t2996;
  t2972 = -7.e-6*t2474;
  t3022 = t2602*t393;
  t3023 = t2607*t2705;
  t3024 = t2609*t2854;
  t3026 = t3022 + t3023 + t3024;
  t2951 = -4.e-6*t2474;
  t3059 = 2.8e-11*t2483;
  t3005 = 7.e-6*t2474;
  t2364 = 5.856279999999999e-13*var1[13];
  t2369 = -0.0387489999948987*t2368;
  t2376 = t2372 + t2375;
  t2377 = -2.123459e-6*t2376;
  t2380 = t2379 + t2373;
  t2381 = -0.281209000004*t2380;
  t2382 = t2364 + t2369 + t2377 + t2381;
  t3095 = -1.*t2393*t1299;
  t3097 = t2384*t1319;
  t3101 = t3095 + t3097;
  t3103 = t2384*t1299;
  t3105 = t2393*t1319;
  t3106 = t3103 + t3105;
  t3111 = -1.*t1282*t62*t2510;
  t3114 = t2518*t3101;
  t3116 = t2524*t3106;
  t3118 = t3111 + t3114 + t3116;
  t3123 = -1.*t1282*t62*t2566;
  t3124 = t2572*t3101;
  t3126 = t2574*t3106;
  t3127 = t3123 + t3124 + t3126;
  t3133 = -1.*t2602*t1282*t62;
  t3135 = t2607*t3101;
  t3139 = t2609*t3106;
  t3140 = t3133 + t3135 + t3139;
  t3192 = -1.*t62*t300*t2393*t1291;
  t3193 = -1.*t2384*t62*t1291*t408;
  t3195 = t3192 + t3193;
  t3199 = t2384*t62*t300*t1291;
  t3201 = -1.*t62*t2393*t1291*t408;
  t3203 = t3199 + t3201;
  t3217 = t2510*t1291*t393;
  t3220 = t2518*t3195;
  t3221 = t2524*t3203;
  t3222 = t3217 + t3220 + t3221;
  t3225 = t2566*t1291*t393;
  t3226 = t2572*t3195;
  t3232 = t2574*t3203;
  t3233 = t3225 + t3226 + t3232;
  t3235 = t2602*t1291*t393;
  t3236 = t2607*t3195;
  t3238 = t2609*t3203;
  t3246 = t3235 + t3236 + t3238;
  t3288 = t2393*t1529;
  t3290 = t2384*t1538;
  t3294 = t3288 + t3290;
  t3296 = t2384*t1529;
  t3299 = -1.*t2393*t1538;
  t3300 = t3296 + t3299;
  t3304 = t2574*t3294;
  t3305 = t2572*t3300;
  t3307 = t3304 + t3305;
  t3311 = t2524*t3294;
  t3312 = t2518*t3300;
  t3317 = t3311 + t3312;
  t3320 = t2609*t3294;
  t3323 = t2607*t3300;
  t3331 = t3320 + t3323;
  t2767 = -0.15121*t2393;
  t2771 = t2766 + t2767;
  t2773 = t2766 + t2394;
  t3406 = -1.*t2393*t1653;
  t3409 = t3406 + t3290;
  t3413 = -1.*t2384*t1653;
  t3417 = t3413 + t3299;
  t3423 = t2574*t3409;
  t3432 = t2572*t3417;
  t3434 = t3423 + t3432;
  t3439 = t2524*t3409;
  t3441 = t2518*t3417;
  t3442 = t3439 + t3441;
  t3444 = t2609*t3409;
  t3445 = t2607*t3417;
  t3448 = t3444 + t3445;
  t2787 = t2365 + t2785;
  t2788 = -0.281209000004*t2787;
  t2791 = t2790 + t2411;
  t2792 = -2.123459e-6*t2791;
  t2802 = -0.0387489999948987*t2373;
  t2803 = 5.856279999999999e-13 + t2788 + t2792 + t2802;
  t2810 = t2808 + t2411;
  t2814 = -0.038748999993*t2810;
  t2818 = t2817 + t2375;
  t2819 = -0.281209000004*t2818;
  t2820 = -1.38024835e-16*t2373;
  t2824 = -1.4640699999999997e-7 + t2814 + t2819 + t2820;
  t2827 = t2366 + t2785;
  t2831 = -0.038748999993*t2827;
  t2834 = t2833 + t2375;
  t2835 = -2.123459e-6*t2834;
  t2838 = -0.28120900000849935*t2373;
  t2846 = 1.0248489999999998e-12 + t2831 + t2835 + t2838;
  t3496 = t2384*t1653;
  t3497 = t2393*t1538;
  t3498 = t3496 + t3497;
  t3503 = -1.*t62*t2856*t1291;
  t3506 = -6.5e-11*t2373*t3409;
  t3507 = t2862*t3498;
  t3509 = t3503 + t3506 + t3507;
  t3514 = 1.000000000049*t62*t2373*t1291;
  t3515 = t2872*t3409;
  t3519 = t2878*t3498;
  t3522 = t3514 + t3515 + t3519;
  t3524 = -1.*t62*t2885*t1291;
  t3526 = t2888*t3409;
  t3533 = -1.000000000016*t2373*t3498;
  t3535 = t3524 + t3526 + t3533;
  t2947 = t2478 + t2946;
  t2950 = -0.038922999986*t2947;
  t2952 = t2951 + t2589;
  t2954 = -3.6777349999999994e-6*t2952;
  t2955 = -0.5031490000160505*t2483;
  t2956 = 1.8190549999999993e-12 + t2950 + t2954 + t2955;
  t2973 = t2972 + t2553;
  t2975 = -0.038922999986*t2973;
  t2978 = t2976 + t2589;
  t2986 = -0.503149000008*t2978;
  t2987 = -2.3905277499999995e-16*t2483;
  t2992 = -2.598649999999999e-7 + t2975 + t2986 + t2987;
  t3002 = t2474 + t2946;
  t3003 = -0.503149000008*t3002;
  t3006 = t3005 + t2553;
  t3016 = -3.6777349999999994e-6*t3006;
  t3019 = -0.03892299998790722*t2483;
  t3021 = 1.0394599999999997e-12 + t3003 + t3016 + t3019;
  t3029 = t2976 + t2546;
  t3567 = -1.*t62*t2510*t1291;
  t3568 = t2518*t3409;
  t3569 = t2524*t3498;
  t3571 = t3567 + t3568 + t3569;
  t3573 = -1.*t62*t2566*t1291;
  t3574 = t2572*t3409;
  t3576 = t2574*t3498;
  t3582 = t3573 + t3574 + t3576;
  t3037 = t2972 + t2501;
  t3585 = -1.*t2602*t62*t1291;
  t3586 = t2607*t3409;
  t3590 = t2609*t3498;
  t3591 = t3585 + t3586 + t3590;
  t3057 = t2951 + t2546;
  t3060 = t2478 + t3059;
  t3069 = t2474 + t3059;
  t3072 = t3005 + t2501;
  t3705 = t1282*t62*t300*t2393;
  t3706 = t2384*t1282*t62*t408;
  t3709 = t3705 + t3706;
  t3711 = -1.*t2384*t1282*t62*t300;
  t3712 = t1282*t62*t2393*t408;
  t3715 = t3711 + t3712;
  t3719 = -1.*t1282*t2510*t393;
  t3720 = t2518*t3709;
  t3722 = t2524*t3715;
  t3724 = t3719 + t3720 + t3722;
  t3731 = -1.*t1282*t2566*t393;
  t3733 = t2572*t3709;
  t3734 = t2574*t3715;
  t3735 = t3731 + t3733 + t3734;
  t3738 = -1.*t2602*t1282*t393;
  t3740 = t2607*t3709;
  t3742 = t2609*t3715;
  t3744 = t3738 + t3740 + t3742;
  t3795 = t2393*t1299;
  t3800 = t2384*t2036;
  t3801 = t3795 + t3800;
  t3813 = -1.*t2393*t2036;
  t3817 = t3103 + t3813;
  t3823 = t2574*t3801;
  t3827 = t2572*t3817;
  t3828 = t3823 + t3827;
  t3836 = t2524*t3801;
  t3838 = t2518*t3817;
  t3843 = t3836 + t3838;
  t3851 = t2609*t3801;
  t3855 = t2607*t3817;
  t3856 = t3851 + t3855;
  t3898 = -1.*t2393*t2123;
  t3904 = t3898 + t3800;
  t3907 = -1.*t2384*t2123;
  t3909 = t3907 + t3813;
  t3912 = t2574*t3904;
  t3915 = t2572*t3909;
  t3916 = t3912 + t3915;
  t3919 = t2524*t3904;
  t3923 = t2518*t3909;
  t3924 = t3919 + t3923;
  t3928 = t2609*t3904;
  t3929 = t2607*t3909;
  t3932 = t3928 + t3929;
  t4006 = t2384*t2123;
  t4008 = t2393*t2036;
  t4019 = t4006 + t4008;
  t4026 = t1282*t62*t2856;
  t4030 = -6.5e-11*t2373*t3904;
  t4036 = t2862*t4019;
  t4040 = t4026 + t4030 + t4036;
  t4043 = -1.000000000049*t1282*t62*t2373;
  t4044 = t2872*t3904;
  t4045 = t2878*t4019;
  t4046 = t4043 + t4044 + t4045;
  t4049 = t1282*t62*t2885;
  t4050 = t2888*t3904;
  t4051 = -1.000000000016*t2373*t4019;
  t4054 = t4049 + t4050 + t4051;
  t4099 = t1282*t62*t2510;
  t4101 = t2518*t3904;
  t4103 = t2524*t4019;
  t4105 = t4099 + t4101 + t4103;
  t4110 = t1282*t62*t2566;
  t4116 = t2572*t3904;
  t4121 = t2574*t4019;
  t4122 = t4110 + t4116 + t4121;
  t4125 = t2602*t1282*t62;
  t4126 = t2607*t3904;
  t4128 = t2609*t4019;
  t4129 = t4125 + t4126 + t4128;
  p_output1[0]=1.;
  p_output1[1]=-1.*t300*t384*t393 + t393*t405*t408 + t431*t435 + t443*t458 + t496*t522 + t541*t553 + t586*t612 - 0.041195*(-1.*t482*t522 + t468*t553 + 4.e-6*t474*t612) + t269*t62 - 0.14871*(4.e-6*t482*t522 + 4.e-6*t474*t553 + t612*t637) + 0.803147*(t482*t553 - 4.e-6*t482*t612 + t522*t679);
  p_output1[2]=-1.*t300*t405*t62 - 1.*t384*t408*t62 + t721 + t757 + t773 + t781 + t806 + t835 + t885 + t921;
  p_output1[3]=t721 + t757 + t773 + t781 + t806 + t835 + t885 + t921 + t300*t62*t950 - 1.*t408*t62*t958;
  p_output1[4]=t1009*t1013 - 0.041195*(t1039*t468 + 4.e-6*t1067*t474 - 1.*t1090*t482) + t1090*t496 + t1039*t541 + t1067*t586 - 0.14871*(4.e-6*t1039*t474 + 4.e-6*t1090*t482 + t1067*t637) + 0.803147*(t1039*t482 - 4.e-6*t1067*t482 + t1090*t679) + t393*t978 + t718*t996;
  p_output1[5]=t1148*t1169 + t1183*t1194 + t1213*t1229 + 0.803147*(t1194*t468 - 4.e-6*t1229*t468 - 1.000000000016*t1169*t482) - 0.14871*(4.e-6*t1169*t468 + 4.e-6*t1194*t482 - 1.6e-11*t1229*t482) - 0.041195*(-1.*t1169*t468 - 1.*t1194*t482 + 4.e-6*t1229*t482);
  p_output1[6]=1.;
  p_output1[7]=t1299*t384 + t1319*t405 + t1327*t431 + t1336*t443 - 0.041195*(t1362*t468 + 4.e-6*t1375*t474 - 1.*t1350*t482) + t1350*t496 + t1362*t541 + t1375*t586 - 1.*t1282*t269*t62 - 0.14871*(4.e-6*t1362*t474 + 4.e-6*t1350*t482 + t1375*t637) + 0.803147*(t1362*t482 - 4.e-6*t1375*t482 + t1350*t679);
  p_output1[8]=t1291*t269*t393 + t1435*t431 + t1445*t443 - 0.041195*(t1467*t468 + 4.e-6*t1478*t474 - 1.*t1457*t482) + t1457*t496 + t1467*t541 + t1478*t586 + t1291*t300*t384*t62 - 1.*t1291*t405*t408*t62 - 0.14871*(4.e-6*t1467*t474 + 4.e-6*t1457*t482 + t1478*t637) + 0.803147*(t1467*t482 - 4.e-6*t1478*t482 + t1457*t679);
  p_output1[9]=t1538*t384 + t1529*t405 + t1571*t431 + t1548*t443 - 0.041195*(t1588*t468 + 4.e-6*t1577*t474 - 1.*t1593*t482) + t1593*t496 + t1588*t541 + t1577*t586 - 0.14871*(4.e-6*t1588*t474 + 4.e-6*t1593*t482 + t1577*t637) + 0.803147*(-4.e-6*t1577*t482 + t1588*t482 + t1593*t679);
  p_output1[10]=t1671*t431 + t1665*t443 - 0.041195*(t1684*t468 + 4.e-6*t1677*t474 - 1.*t1696*t482) + t1696*t496 + t1684*t541 + t1677*t586 - 0.14871*(4.e-6*t1684*t474 + 4.e-6*t1696*t482 + t1677*t637) + 0.803147*(-4.e-6*t1677*t482 + t1684*t482 + t1696*t679) + t1653*t950 + t1538*t958;
  p_output1[11]=t1009*t1750 - 0.041195*(t1760*t468 + 4.e-6*t1773*t474 - 1.*t1778*t482) + t1778*t496 + t1760*t541 + t1773*t586 - 0.14871*(4.e-6*t1760*t474 + 4.e-6*t1778*t482 + t1773*t637) + 0.803147*(t1760*t482 - 4.e-6*t1773*t482 + t1778*t679) - 1.*t1291*t62*t978 + t1665*t996;
  p_output1[12]=t1148*t1832 + t1183*t1837 + t1213*t1847 + 0.803147*(t1856 - 4.e-6*t1847*t468 - 1.000000000016*t1832*t482) - 0.14871*(4.e-6*t1832*t468 + 4.e-6*t1837*t482 - 1.6e-11*t1847*t482) - 0.041195*(-1.*t1832*t468 - 1.*t1837*t482 + 4.e-6*t1847*t482);
  p_output1[13]=1.;
  p_output1[14]=t1653*t384 + t1538*t405 + t1665*t431 + t1750*t443 - 0.041195*(t1856 + 4.e-6*t1847*t474 - 1.*t1832*t482) + t1832*t496 + t1837*t541 + t1847*t586 - 1.*t1291*t269*t62 - 0.14871*(4.e-6*t1837*t474 + 4.e-6*t1832*t482 + t1847*t637) + 0.803147*(t1837*t482 - 4.e-6*t1847*t482 + t1832*t679);
  p_output1[15]=-1.*t1282*t269*t393 + t1956*t431 + t1963*t443 - 0.041195*(t1980*t468 + 4.e-6*t1990*t474 - 1.*t1974*t482) + t1974*t496 + t1980*t541 + t1990*t586 - 1.*t1282*t300*t384*t62 + t1282*t405*t408*t62 - 0.14871*(4.e-6*t1980*t474 + 4.e-6*t1974*t482 + t1990*t637) + 0.803147*(t1980*t482 - 4.e-6*t1990*t482 + t1974*t679);
  p_output1[16]=t2036*t384 + t1299*t405 + t2057*t431 + t2052*t443 - 0.041195*(t2072*t468 + 4.e-6*t2067*t474 - 1.*t2077*t482) + t2077*t496 + t2072*t541 + t2067*t586 - 0.14871*(4.e-6*t2072*t474 + 4.e-6*t2077*t482 + t2067*t637) + 0.803147*(-4.e-6*t2067*t482 + t2072*t482 + t2077*t679);
  p_output1[17]=t2139*t431 + t2133*t443 - 0.041195*(t2156*t468 + 4.e-6*t2147*t474 - 1.*t2168*t482) + t2168*t496 + t2156*t541 + t2147*t586 - 0.14871*(4.e-6*t2156*t474 + 4.e-6*t2168*t482 + t2147*t637) + 0.803147*(-4.e-6*t2147*t482 + t2156*t482 + t2168*t679) + t2123*t950 + t2036*t958;
  p_output1[18]=t1009*t2214 - 0.041195*(t2218*t468 + 4.e-6*t2226*t474 - 1.*t2239*t482) + t2239*t496 + t2218*t541 + t2226*t586 - 0.14871*(4.e-6*t2218*t474 + 4.e-6*t2239*t482 + t2226*t637) + 0.803147*(t2218*t482 - 4.e-6*t2226*t482 + t2239*t679) + t1282*t62*t978 + t2133*t996;
  p_output1[19]=t1148*t2309 + t1183*t2317 + t1213*t2332 + 0.803147*(t2317*t468 - 4.e-6*t2332*t468 - 1.000000000016*t2309*t482) - 0.14871*(4.e-6*t2309*t468 + 4.e-6*t2317*t482 - 1.6e-11*t2332*t482) - 0.041195*(-1.*t2309*t468 - 1.*t2317*t482 + 4.e-6*t2332*t482);
  p_output1[20]=1.;
  p_output1[21]=t2418*t2429 + t2463*t2469 + t2504*t2527 + t2560*t2576 + t2597*t2619 - 0.038924*(t2527*t2629 + t2576*t2638 + t2619*t2644) - 0.80315*(t2527*t2657 + t2576*t2662 + t2619*t2667) + 0.148705*(t2527*t2671 + t2576*t2676 + t2619*t2686) - 1.*t2395*t300*t393 + t2402*t393*t408 + t2382*t62;
  p_output1[22]=t2708 + t2718 + t2724 + t2730 + t2736 + t2748 + t2755 + t2763 - 1.*t2402*t300*t62 - 1.*t2395*t408*t62;
  p_output1[23]=t2708 + t2718 + t2724 + t2730 + t2736 + t2748 + t2755 + t2763 + t2771*t300*t62 - 1.*t2773*t408*t62;
  p_output1[24]=t2705*t2824 + t2846*t2854 + t2560*t2865 + t2597*t2883 + t2504*t2891 - 0.038924*(t2638*t2865 + t2644*t2883 + t2629*t2891) - 0.80315*(t2662*t2865 + t2667*t2883 + t2657*t2891) + 0.148705*(t2676*t2865 + t2686*t2883 + t2671*t2891) + t2803*t393;
  p_output1[25]=t2956*t2967 + t2992*t2999 + t3021*t3026 + 0.148705*(-6.5e-11*t2483*t2999 + t2967*t3029 + t3026*t3037) - 0.80315*(-1.000000000016*t2483*t2967 + t2999*t3057 + t3026*t3060) - 0.038924*(-1.000000000049*t2483*t3026 + t2967*t3069 + t2999*t3072);
  p_output1[26]=1.;
  p_output1[27]=t1299*t2395 + t1319*t2402 + t2418*t3101 + t2463*t3106 + t2504*t3118 + t2560*t3127 + t2597*t3140 - 0.038924*(t2629*t3118 + t2638*t3127 + t2644*t3140) - 0.80315*(t2657*t3118 + t2662*t3127 + t2667*t3140) + 0.148705*(t2671*t3118 + t2676*t3127 + t2686*t3140) - 1.*t1282*t2382*t62;
  p_output1[28]=t2418*t3195 + t2463*t3203 + t2504*t3222 + t2560*t3233 + t2597*t3246 - 0.038924*(t2629*t3222 + t2638*t3233 + t2644*t3246) - 0.80315*(t2657*t3222 + t2662*t3233 + t2667*t3246) + 0.148705*(t2671*t3222 + t2676*t3233 + t2686*t3246) + t1291*t2382*t393 + t1291*t2395*t300*t62 - 1.*t1291*t2402*t408*t62;
  p_output1[29]=t1538*t2395 + t1529*t2402 + t2463*t3294 + t2418*t3300 + t2560*t3307 + t2504*t3317 + t2597*t3331 - 0.038924*(t2638*t3307 + t2629*t3317 + t2644*t3331) - 0.80315*(t2662*t3307 + t2657*t3317 + t2667*t3331) + 0.148705*(t2676*t3307 + t2671*t3317 + t2686*t3331);
  p_output1[30]=t1653*t2771 + t1538*t2773 + t2463*t3409 + t2418*t3417 + t2560*t3434 + t2504*t3442 + t2597*t3448 - 0.038924*(t2638*t3434 + t2629*t3442 + t2644*t3448) - 0.80315*(t2662*t3434 + t2657*t3442 + t2667*t3448) + 0.148705*(t2676*t3434 + t2671*t3442 + t2686*t3448);
  p_output1[31]=t2824*t3409 + t2846*t3498 + t2560*t3509 + t2597*t3522 + t2504*t3535 - 0.038924*(t2638*t3509 + t2644*t3522 + t2629*t3535) - 0.80315*(t2662*t3509 + t2667*t3522 + t2657*t3535) + 0.148705*(t2676*t3509 + t2686*t3522 + t2671*t3535) - 1.*t1291*t2803*t62;
  p_output1[32]=t2956*t3571 + t2992*t3582 + t3021*t3591 - 0.038924*(t3069*t3571 + t3072*t3582 - 1.000000000049*t2483*t3591) + 0.148705*(t3029*t3571 - 6.5e-11*t2483*t3582 + t3037*t3591) - 0.80315*(-1.000000000016*t2483*t3571 + t3057*t3582 + t3060*t3591);
  p_output1[33]=1.;
  p_output1[34]=t1653*t2395 + t1538*t2402 + t2418*t3409 + t2463*t3498 + t2504*t3571 + t2560*t3582 + t2597*t3591 - 0.038924*(t2629*t3571 + t2638*t3582 + t2644*t3591) - 0.80315*(t2657*t3571 + t2662*t3582 + t2667*t3591) + 0.148705*(t2671*t3571 + t2676*t3582 + t2686*t3591) - 1.*t1291*t2382*t62;
  p_output1[35]=t2418*t3709 + t2463*t3715 + t2504*t3724 + t2560*t3735 + t2597*t3744 - 0.038924*(t2629*t3724 + t2638*t3735 + t2644*t3744) - 0.80315*(t2657*t3724 + t2662*t3735 + t2667*t3744) + 0.148705*(t2671*t3724 + t2676*t3735 + t2686*t3744) - 1.*t1282*t2382*t393 - 1.*t1282*t2395*t300*t62 + t1282*t2402*t408*t62;
  p_output1[36]=t2036*t2395 + t1299*t2402 + t2463*t3801 + t2418*t3817 + t2560*t3828 + t2504*t3843 + t2597*t3856 - 0.038924*(t2638*t3828 + t2629*t3843 + t2644*t3856) - 0.80315*(t2662*t3828 + t2657*t3843 + t2667*t3856) + 0.148705*(t2676*t3828 + t2671*t3843 + t2686*t3856);
  p_output1[37]=t2123*t2771 + t2036*t2773 + t2463*t3904 + t2418*t3909 + t2560*t3916 + t2504*t3924 + t2597*t3932 - 0.038924*(t2638*t3916 + t2629*t3924 + t2644*t3932) - 0.80315*(t2662*t3916 + t2657*t3924 + t2667*t3932) + 0.148705*(t2676*t3916 + t2671*t3924 + t2686*t3932);
  p_output1[38]=t2824*t3904 + t2846*t4019 + t2560*t4040 + t2597*t4046 + t2504*t4054 - 0.038924*(t2638*t4040 + t2644*t4046 + t2629*t4054) - 0.80315*(t2662*t4040 + t2667*t4046 + t2657*t4054) + 0.148705*(t2676*t4040 + t2686*t4046 + t2671*t4054) + t1282*t2803*t62;
  p_output1[39]=t2956*t4105 + t2992*t4122 + t3021*t4129 - 0.038924*(t3069*t4105 + t3072*t4122 - 1.000000000049*t2483*t4129) + 0.148705*(t3029*t4105 - 6.5e-11*t2483*t4122 + t3037*t4129) - 0.80315*(-1.000000000016*t2483*t4105 + t3057*t4122 + t3060*t4129);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 40, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "J_output_boundary_DiagonalStance2.hh"

namespace TrotStance2
{

void J_output_boundary_DiagonalStance2_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
