/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:34 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t368;
  double t431;
  double t450;
  double t233;
  double t247;
  double t277;
  double t471;
  double t505;
  double t321;
  double t454;
  double t462;
  double t517;
  double t540;
  double t548;
  double t284;
  double t582;
  double t606;
  double t608;
  double t618;
  double t627;
  double t688;
  double t745;
  double t769;
  double t773;
  double t793;
  double t805;
  double t820;
  double t653;
  double t664;
  double t950;
  double t888;
  double t894;
  double t970;
  double t1224;
  double t862;
  double t865;
  double t1349;
  double t1198;
  double t335;
  double t1255;
  double t1274;
  double t1292;
  double t1299;
  double t1188;
  double t1058;
  double t1350;
  double t1372;
  double t1375;
  double t1393;
  double t1120;
  double t1138;
  double t1287;
  double t1307;
  double t1322;
  double t1007;
  double t1016;
  double t1325;
  double t1331;
  double t1335;
  double t1354;
  double t1358;
  double t1204;
  double t1385;
  double t1423;
  double t1428;
  double t680;
  double t1489;
  double t1528;
  double t1536;
  double t1537;
  double t1548;
  double t1567;
  double t1578;
  double t1590;
  double t1593;
  double t1602;
  double t1607;
  double t1612;
  double t1627;
  double t1628;
  double t1659;
  double t1663;
  double t1671;
  double t1674;
  double t1683;
  double t1685;
  double t1696;
  double t1706;
  double t1717;
  double t1719;
  double t1723;
  double t1726;
  double t1747;
  double t1748;
  double t1750;
  double t1753;
  double t1764;
  double t1778;
  double t572;
  double t580;
  double t683;
  double t354;
  double t1928;
  double t1508;
  double t1822;
  double t1823;
  double t1843;
  double t1847;
  double t1086;
  double t1090;
  double t1183;
  double t1189;
  double t1226;
  double t1239;
  double t1477;
  double t1480;
  double t1493;
  double t1500;
  double t1520;
  double t1524;
  double t1611;
  double t1711;
  double t1780;
  double t1810;
  double t1105;
  double t1190;
  double t1240;
  double t1251;
  double t1851;
  double t1895;
  double t1954;
  double t1963;
  double t1975;
  double t1997;
  double t2002;
  double t2006;
  double t2007;
  double t2018;
  double t2065;
  double t2069;
  double t2082;
  double t2083;
  double t2085;
  double t2095;
  double t2096;
  double t2103;
  double t2106;
  double t2108;
  double t571;
  double t632;
  double t821;
  double t834;
  double t855;
  double t870;
  double t903;
  double t973;
  double t976;
  double t977;
  double t1323;
  double t1366;
  double t1439;
  double t1461;
  double t1817;
  double t2020;
  double t2038;
  double t2056;
  double t2057;
  double t2061;
  double t2114;
  double t2116;
  double t2145;
  double t2149;
  double t2151;
  double t2165;
  double t2179;
  double t2184;
  double t2189;
  double t2196;
  double t2206;
  double t2218;
  double t2228;
  double t2230;
  double t2239;
  double t2241;
  double t2244;
  double t2284;
  double t2285;
  double t2304;
  double t2307;
  double t2309;
  double t2325;
  double t2331;
  double t2346;
  double t2259;
  double t2262;
  double t2271;
  double t2274;
  double t2276;
  double t2308;
  double t2350;
  double t2359;
  double t2363;
  double t2374;
  double t2376;
  double t2381;
  double t2384;
  double t2386;
  double t2392;
  double t2395;
  double t176;
  double t120;
  double t146;
  double t147;
  double t187;
  double t162;
  double t2425;
  double t2432;
  double t2439;
  double t2461;
  double t2495;
  double t2498;
  double t2508;
  double t2404;
  double t2408;
  double t2422;
  double t2479;
  double t2486;
  double t2490;
  double t2492;
  double t2513;
  double t2515;
  double t2516;
  double t2518;
  double t2523;
  double t2528;
  double t2538;
  double t2540;
  double t2541;
  double t2543;
  double t2547;
  double t2553;
  double t2556;
  double t2559;
  double t94;
  double t96;
  double t2588;
  double t2581;
  double t2631;
  double t2634;
  double t2638;
  double t2672;
  double t2682;
  double t2685;
  double t2762;
  double t2764;
  double t2765;
  double t2766;
  double t2768;
  double t2769;
  double t2773;
  double t2792;
  double t2796;
  double t2797;
  double t2802;
  double t2812;
  double t2819;
  double t2820;
  double t2822;
  double t2823;
  double t2691;
  double t2696;
  double t2702;
  double t2705;
  double t2710;
  double t2712;
  double t2714;
  double t2718;
  double t2723;
  double t2731;
  double t2737;
  double t2739;
  double t2932;
  double t2936;
  double t2938;
  double t2941;
  double t2942;
  double t2943;
  double t2958;
  double t2959;
  double t2968;
  double t2973;
  double t2975;
  double t2997;
  double t3004;
  double t3005;
  double t3043;
  double t3044;
  double t3046;
  double t3033;
  double t3034;
  double t3037;
  double t3012;
  double t3018;
  double t3021;
  double t3047;
  double t3048;
  double t3049;
  double t3022;
  double t3024;
  double t3029;
  double t3040;
  double t3055;
  double t3059;
  double t3069;
  double t3072;
  double t3074;
  double t3075;
  double t3077;
  double t3095;
  double t3104;
  double t3109;
  double t3117;
  double t3172;
  double t3180;
  double t3185;
  double t3167;
  double t3168;
  double t3171;
  double t3189;
  double t3192;
  double t3193;
  double t3212;
  double t3213;
  double t3216;
  double t3194;
  double t3196;
  double t3208;
  double t3210;
  double t3217;
  double t3219;
  double t3221;
  double t3225;
  double t3227;
  double t3231;
  double t3233;
  double t3237;
  double t3238;
  double t3241;
  double t3242;
  double t3262;
  double t3265;
  double t3272;
  double t3274;
  double t3277;
  double t3318;
  double t3361;
  double t3363;
  double t3366;
  double t3368;
  double t3373;
  double t3381;
  double t3394;
  double t3398;
  double t3340;
  double t3343;
  double t3345;
  double t3294;
  double t3299;
  double t3306;
  double t3437;
  double t3440;
  double t3447;
  double t3449;
  double t3450;
  double t3427;
  double t3428;
  double t3497;
  double t3501;
  double t3508;
  double t3457;
  double t3494;
  double t3462;
  double t3463;
  double t3472;
  double t3538;
  double t3554;
  double t3544;
  double t3548;
  double t3549;
  double t3679;
  double t3680;
  double t3726;
  double t3732;
  double t3738;
  double t3722;
  double t3743;
  double t3705;
  double t3708;
  double t3762;
  double t3770;
  double t3754;
  double t3757;
  double t3930;
  double t3882;
  double t3883;
  double t3889;
  double t3903;
  double t3912;
  double t3932;
  double t3934;
  double t3939;
  double t3941;
  double t3945;
  double t3960;
  double t4019;
  double t4056;
  double t3996;
  double t4010;
  double t4018;
  double t4020;
  double t4023;
  double t4027;
  double t4031;
  double t4033;
  double t4034;
  double t4035;
  double t4038;
  double t4043;
  double t4044;
  double t4050;
  double t4066;
  double t4069;
  double t4071;
  double t4072;
  double t4074;
  double t4080;
  double t4087;
  double t4089;
  double t4098;
  double t4104;
  double t4106;
  double t4111;
  double t4118;
  double t4119;
  double t4125;
  double t4200;
  double t4202;
  double t4205;
  double t4206;
  double t4211;
  double t4219;
  double t4225;
  double t4235;
  double t4236;
  double t4237;
  double t4040;
  double t4083;
  double t4132;
  double t4135;
  double t4151;
  double t4154;
  double t4173;
  double t4180;
  double t4188;
  double t4189;
  double t4192;
  double t4193;
  double t4309;
  double t4318;
  double t4328;
  double t4342;
  double t4344;
  double t4362;
  double t4369;
  double t4379;
  double t4383;
  double t4384;
  double t4396;
  double t4264;
  double t4269;
  double t4272;
  double t4278;
  double t4474;
  double t4478;
  double t4483;
  double t4490;
  double t4506;
  double t4507;
  double t4508;
  double t4529;
  double t4538;
  double t4543;
  double t4547;
  double t4549;
  double t4550;
  double t4551;
  double t4182;
  double t4279;
  double t4280;
  double t4283;
  double t4286;
  double t4297;
  double t4210;
  double t4228;
  double t4240;
  double t4252;
  double t4307;
  double t4398;
  double t4628;
  double t4631;
  double t4635;
  double t4639;
  double t4640;
  double t4643;
  double t4334;
  double t4350;
  double t4375;
  double t4376;
  double t4400;
  double t4403;
  double t4405;
  double t4410;
  double t3918;
  double t3936;
  double t3965;
  double t3968;
  double t3971;
  double t3972;
  double t3974;
  double t3981;
  double t4779;
  double t4780;
  double t4782;
  double t4754;
  double t4760;
  double t4761;
  double t4712;
  double t4730;
  double t4731;
  double t4751;
  double t4770;
  double t4786;
  double t4787;
  double t4796;
  double t4797;
  double t4798;
  double t4827;
  double t4835;
  double t4839;
  double t4657;
  double t4658;
  double t4661;
  double t4650;
  double t4651;
  double t4652;
  double t4878;
  double t4895;
  double t4896;
  double t4904;
  double t4908;
  double t4911;
  double t4683;
  double t4689;
  double t4690;
  double t4675;
  double t4679;
  double t4680;
  double t4991;
  double t4998;
  double t5000;
  double t4941;
  double t4949;
  double t4953;
  double t4915;
  double t4956;
  double t4921;
  double t4923;
  double t4929;
  double t4976;
  double t5002;
  double t5029;
  double t5031;
  double t5036;
  double t5054;
  double t5057;
  double t5061;
  double t4978;
  double t4980;
  double t4985;
  double t5104;
  double t5105;
  double t5114;
  double t5063;
  double t5064;
  double t5070;
  double t5179;
  double t5182;
  double t5186;
  double t5197;
  double t5199;
  double t5200;
  double t5324;
  double t5335;
  double t5339;
  double t5344;
  double t5312;
  double t5319;
  double t5326;
  double t5363;
  double t5366;
  double t5370;
  double t5374;
  double t5298;
  double t5302;
  double t5281;
  double t5287;
  double t5436;
  double t5332;
  double t5343;
  double t5348;
  double t5349;
  double t5392;
  double t5394;
  double t5396;
  double t5397;
  double t5401;
  double t5407;
  double t5408;
  double t5409;
  double t5410;
  double t5440;
  double t5443;
  double t5445;
  double t5446;
  double t5452;
  double t5455;
  double t5457;
  double t5463;
  double t5466;
  double t5472;
  double t5476;
  double t5479;
  double t5494;
  double t5496;
  double t5498;
  double t5499;
  double t5501;
  double t5502;
  double t5391;
  double t5470;
  double t5417;
  double t5424;
  double t5428;
  double t5431;
  double t5376;
  double t5377;
  double t5379;
  double t5386;
  double t5528;
  double t5550;
  double t5536;
  double t5537;
  double t5538;
  double t5541;
  double t5516;
  double t5517;
  double t5522;
  double t5524;
  double t5631;
  double t5635;
  double t5645;
  double t5650;
  double t5651;
  double t5652;
  double t5288;
  double t5291;
  double t5304;
  double t5305;
  double t5311;
  double t5320;
  double t5328;
  double t5330;
  double t5722;
  double t5723;
  double t5725;
  double t5717;
  double t5718;
  double t5719;
  double t5703;
  double t5707;
  double t5709;
  double t5710;
  double t5721;
  double t5726;
  double t5730;
  double t5741;
  double t5742;
  double t5746;
  double t5752;
  double t5754;
  double t5764;
  double t5664;
  double t5674;
  double t5677;
  double t5683;
  double t5684;
  double t5688;
  double t5596;
  double t5597;
  double t5602;
  double t5607;
  double t5618;
  double t5622;
  double t5804;
  double t5806;
  double t5807;
  double t5788;
  double t5789;
  double t5799;
  double t5824;
  double t5825;
  double t5827;
  double t5830;
  double t5831;
  double t5832;
  double t5840;
  double t5842;
  double t5843;
  double t5809;
  double t5811;
  double t5818;
  double t5823;
  double t5829;
  double t5906;
  double t5907;
  double t5908;
  double t5845;
  double t5848;
  double t5892;
  double t5894;
  double t5900;
  double t5939;
  double t5941;
  double t5942;
  double t5945;
  double t5947;
  double t5953;
  double t6032;
  double t6033;
  double t6036;
  double t6041;
  double t6047;
  double t6049;
  double t6050;
  double t6052;
  double t6053;
  double t6055;
  double t6056;
  double t6058;
  double t6059;
  double t6098;
  double t6099;
  double t6100;
  double t6102;
  double t6107;
  double t6108;
  double t6110;
  double t6118;
  double t6068;
  double t6071;
  double t6072;
  double t6084;
  double t6093;
  double t6095;
  double t6096;
  double t6105;
  double t6121;
  double t6124;
  double t6125;
  double t6127;
  double t6134;
  double t6139;
  double t6141;
  double t6143;
  double t6147;
  double t6149;
  double t6163;
  double t6165;
  double t6166;
  double t6169;
  double t6174;
  double t6176;
  double t6191;
  double t6195;
  double t6196;
  double t2567;
  double t188;
  double t2586;
  double t2627;
  double t6210;
  double t6214;
  double t6217;
  double t6228;
  double t6230;
  double t6231;
  double t2662;
  double t6292;
  double t6316;
  double t6340;
  double t6350;
  double t6353;
  double t6355;
  double t6372;
  double t6380;
  double t6381;
  double t6383;
  double t6386;
  double t6387;
  double t6389;
  double t6391;
  double t6392;
  double t2690;
  double t6240;
  double t6251;
  double t6258;
  double t6261;
  double t6269;
  double t6274;
  double t2707;
  double t2722;
  double t6466;
  double t6469;
  double t6477;
  double t6481;
  double t6482;
  double t6488;
  double t6489;
  double t6504;
  double t6508;
  double t6400;
  double t6406;
  double t6411;
  double t6415;
  double t6425;
  double t6431;
  double t6435;
  double t6438;
  double t6442;
  double t6443;
  double t6445;
  double t6452;
  double t6630;
  double t6633;
  double t6639;
  double t6646;
  double t6720;
  double t6731;
  double t6745;
  double t6748;
  double t5237;
  double t5241;
  double t5242;
  double t5211;
  double t5216;
  double t5217;
  double t6928;
  double t6929;
  double t6931;
  double t6934;
  double t6935;
  double t6947;
  double t6950;
  double t6964;
  double t6968;
  double t6970;
  double t6971;
  double t6973;
  double t6978;
  double t6981;
  double t6866;
  double t6876;
  double t6889;
  double t6895;
  double t5123;
  double t5129;
  double t5131;
  double t7114;
  double t7121;
  double t5079;
  double t5080;
  double t5083;
  double t4753;
  double t4788;
  double t4790;
  double t7141;
  double t7150;
  double t7207;
  double t7215;
  double t7230;
  double t7241;
  double t5963;
  double t5981;
  double t5983;
  double t5711;
  double t5734;
  double t5736;
  double t7314;
  double t7316;
  double t5916;
  double t5919;
  double t5931;
  double t7323;
  double t7324;
  double t7390;
  double t7395;
  double t7397;
  double t7398;
  double t7399;
  double t7400;
  double t7401;
  double t7404;
  double t7407;
  double t7408;
  double t7409;
  double t7410;
  double t7413;
  double t7431;
  double t7432;
  double t7433;
  double t7435;
  double t7437;
  double t7438;
  double t7440;
  double t7442;
  double t7422;
  double t7423;
  double t7424;
  double t7427;
  double t7429;
  double t7430;
  double t7436;
  double t7446;
  double t7448;
  double t7449;
  double t7450;
  double t7452;
  double t7454;
  double t7455;
  double t7456;
  double t7457;
  double t7458;
  double t7465;
  double t7466;
  double t7467;
  double t7468;
  double t7472;
  double t7474;
  double t7475;
  double t7478;
  double t7486;
  double t7499;
  double t7500;
  double t7501;
  double t7503;
  double t7504;
  double t7505;
  double t7531;
  double t7534;
  double t7536;
  double t7542;
  double t7543;
  double t7544;
  double t7548;
  double t7549;
  double t7552;
  double t7555;
  double t7558;
  double t7560;
  double t7562;
  double t7564;
  double t7568;
  double t7510;
  double t7516;
  double t7517;
  double t7523;
  double t7527;
  double t7528;
  double t7614;
  double t7616;
  double t7621;
  double t7622;
  double t7623;
  double t7625;
  double t7630;
  double t7631;
  double t7632;
  double t7572;
  double t7573;
  double t7575;
  double t7576;
  double t7579;
  double t7581;
  double t7585;
  double t7586;
  double t7588;
  double t7590;
  double t7595;
  double t7598;
  double t7731;
  double t7734;
  double t7738;
  double t7741;
  double t7806;
  double t7813;
  double t7823;
  double t7833;
  double t7999;
  double t8001;
  double t8005;
  double t8011;
  double t8012;
  double t8015;
  double t8016;
  double t8021;
  double t8024;
  double t8025;
  double t8026;
  double t8027;
  double t8028;
  double t8029;
  double t7930;
  double t7948;
  double t7966;
  double t7971;
  double t8139;
  double t8149;
  double t8160;
  double t8170;
  double t8224;
  double t8229;
  double t8239;
  double t8245;
  double t8321;
  double t8322;
  double t8329;
  double t8330;
  t368 = Cos(var1[14]);
  t431 = -1.*t368;
  t450 = 1. + t431;
  t233 = Cos(var1[13]);
  t247 = -1.*t233;
  t277 = 1. + t247;
  t471 = Sin(var1[14]);
  t505 = 4.e-6*t471;
  t321 = Sin(var1[13]);
  t454 = 1.000000000016*t450;
  t462 = -7.e-6*t450;
  t517 = t462 + t505;
  t540 = -7.e-6*t517;
  t548 = -1. + t454 + t540;
  t284 = -7.e-6*t277;
  t582 = -6.5e-11*t450;
  t606 = 1. + t582;
  t608 = -7.e-6*t606;
  t618 = 7.e-6*t450;
  t627 = t608 + t618 + t505;
  t688 = -2.8e-11*t450;
  t745 = -1. + t368;
  t769 = 4.e-6*t745;
  t773 = -7.e-6*t471;
  t793 = t769 + t773;
  t805 = -7.e-6*t793;
  t820 = t688 + t805 + t471;
  t653 = -1. + t233;
  t664 = 4.e-6*t653;
  t950 = 2.8e-11*t277;
  t888 = 4.e-6*t321;
  t894 = t284 + t888;
  t970 = t950 + t321;
  t1224 = 2.8e-11*t450;
  t862 = -1.000000000016*t277;
  t865 = 1. + t862;
  t1349 = -1.*t471;
  t1198 = -1.*t321;
  t335 = -4.e-6*t321;
  t1255 = 4.e-6*t450;
  t1274 = t1255 + t773;
  t1292 = -4.e-6*t471;
  t1299 = t462 + t1292;
  t1188 = 7.e-6*t471;
  t1058 = -1.000000000049*t450;
  t1350 = t1224 + t1349;
  t1372 = -1.000000000016*t450;
  t1375 = 1. + t1372;
  t1393 = t688 + t1349;
  t1120 = -7.e-6*t321;
  t1138 = t664 + t1120;
  t1287 = 4.e-6*t1274;
  t1307 = -7.e-6*t1299;
  t1322 = 1. + t582 + t1287 + t1307;
  t1007 = -1.000000000049*t277;
  t1016 = 1. + t1007;
  t1325 = 1.000000000049*t450;
  t1331 = -1. + t1325;
  t1335 = 4.e-6*t1331;
  t1354 = -7.e-6*t1350;
  t1358 = t1335 + t769 + t1354 + t773;
  t1204 = t950 + t1198;
  t1385 = -7.e-6*t1375;
  t1423 = 4.e-6*t1393;
  t1428 = t1385 + t462 + t1423 + t505;
  t680 = 7.e-6*t321;
  t1489 = -2.8e-11*t277;
  t1528 = -2.598649999999999e-7*var1[14];
  t1536 = 0.148705*t606;
  t1537 = -2.3905277499999995e-16*t450;
  t1548 = -0.038922999986*t1274;
  t1567 = -0.80315*t1299;
  t1578 = t618 + t505;
  t1590 = -0.503149000008*t1578;
  t1593 = t769 + t1188;
  t1602 = -0.038924*t1593;
  t1607 = t1528 + t1536 + t1537 + t1548 + t1567 + t1590 + t1602;
  t1612 = 1.0394599999999997e-12*var1[14];
  t1627 = 1. + t1058;
  t1628 = -0.038924*t1627;
  t1659 = -0.03892299998790722*t450;
  t1663 = -0.80315*t1350;
  t1671 = 0.148705*t793;
  t1674 = t1255 + t1188;
  t1683 = -3.6777349999999994e-6*t1674;
  t1685 = t688 + t471;
  t1696 = -0.503149000008*t1685;
  t1706 = t1612 + t1628 + t1659 + t1663 + t1671 + t1683 + t1696;
  t1717 = 1.8190549999999993e-12*var1[14];
  t1719 = -0.80315*t1375;
  t1723 = -0.5031490000160505*t450;
  t1726 = -0.038922999986*t1393;
  t1747 = t618 + t1292;
  t1748 = -3.6777349999999994e-6*t1747;
  t1750 = 0.148705*t517;
  t1753 = t1224 + t471;
  t1764 = -0.038924*t1753;
  t1778 = t1717 + t1719 + t1723 + t1726 + t1748 + t1750 + t1764;
  t572 = -6.5e-11*t277;
  t580 = 1. + t572;
  t683 = t664 + t680;
  t354 = t284 + t335;
  t1928 = 4.e-6*t277;
  t1508 = 7.e-6*t277;
  t1822 = t1138*t1322;
  t1823 = t1016*t1358;
  t1843 = t1204*t1428;
  t1847 = t1822 + t1823 + t1843;
  t1086 = 4.e-6*t793;
  t1090 = 1. + t1058 + t1086;
  t1183 = 4.e-6*t606;
  t1189 = t1183 + t769 + t1188;
  t1226 = 4.e-6*t517;
  t1239 = t1224 + t1226 + t471;
  t1477 = 1.0248489999999998e-12*var1[13];
  t1480 = -0.28120900000849935*t277;
  t1493 = t1489 + t1198;
  t1500 = -0.038748999993*t1493;
  t1520 = t1508 + t335;
  t1524 = -2.123459e-6*t1520;
  t1611 = t894*t1607;
  t1711 = t970*t1706;
  t1780 = t865*t1778;
  t1810 = t1477 + t1480 + t1500 + t1524 + t1611 + t1711 + t1780;
  t1105 = t1016*t1090;
  t1190 = t1138*t1189;
  t1240 = t1204*t1239;
  t1251 = t1105 + t1190 + t1240;
  t1851 = 5.856279999999999e-13*var1[13];
  t1895 = -0.0387489999948987*t277;
  t1954 = t1928 + t680;
  t1963 = -2.123459e-6*t1954;
  t1975 = t1489 + t321;
  t1997 = -0.281209000004*t1975;
  t2002 = t1138*t1607;
  t2006 = t1016*t1706;
  t2007 = t1204*t1778;
  t2018 = t1851 + t1895 + t1963 + t1997 + t2002 + t2006 + t2007;
  t2065 = -1.4640699999999997e-7*var1[13];
  t2069 = -1.38024835e-16*t277;
  t2082 = t1928 + t1120;
  t2083 = -0.038748999993*t2082;
  t2085 = t1508 + t888;
  t2095 = -0.281209000004*t2085;
  t2096 = t580*t1607;
  t2103 = t683*t1706;
  t2106 = t354*t1778;
  t2108 = t2065 + t2069 + t2083 + t2095 + t2096 + t2103 + t2106;
  t571 = t354*t548;
  t632 = t580*t627;
  t821 = t683*t820;
  t834 = t571 + t632 + t821;
  t855 = 0.15121*t834;
  t870 = t865*t548;
  t903 = t894*t627;
  t973 = t970*t820;
  t976 = t870 + t903 + t973;
  t977 = 0.15121*t976;
  t1323 = t894*t1322;
  t1366 = t970*t1358;
  t1439 = t865*t1428;
  t1461 = t1323 + t1366 + t1439;
  t1817 = t1461*t1810;
  t2020 = t1847*t2018;
  t2038 = t580*t1322;
  t2056 = t683*t1358;
  t2057 = t354*t1428;
  t2061 = t2038 + t2056 + t2057;
  t2114 = t2061*t2108;
  t2116 = t1817 + t2020 + t2114;
  t2145 = t1251*t2116;
  t2149 = t970*t1090;
  t2151 = t894*t1189;
  t2165 = t865*t1239;
  t2179 = t2149 + t2151 + t2165;
  t2184 = -1.*t2179*t1810;
  t2189 = -1.*t1251*t2018;
  t2196 = t683*t1090;
  t2206 = t580*t1189;
  t2218 = t354*t1239;
  t2228 = t2196 + t2206 + t2218;
  t2230 = -1.*t2228*t2108;
  t2239 = t2184 + t2189 + t2230;
  t2241 = t1847*t2239;
  t2244 = t855 + t977 + t2145 + t2241;
  t2284 = t1322*t1607;
  t2285 = t1358*t1706;
  t2304 = t1428*t1778;
  t2307 = t2284 + t2285 + t2304;
  t2309 = -1.*t1607*t1189;
  t2325 = -1.*t1090*t1706;
  t2331 = -1.*t1239*t1778;
  t2346 = t2309 + t2325 + t2331;
  t2259 = 0.038749*t548;
  t2262 = 7.e-6*t606;
  t2271 = t2262 + t462 + t1292;
  t2274 = 1.e-6*t2271;
  t2276 = -0.281209*t820;
  t2308 = t1189*t2307;
  t2350 = t1322*t2346;
  t2359 = -1.*t1090*t2307;
  t2363 = -1.*t1358*t2346;
  t2374 = t2359 + t2363;
  t2376 = 4.e-6*t2374;
  t2381 = t1239*t2307;
  t2384 = t1428*t2346;
  t2386 = t2381 + t2384;
  t2392 = -7.e-6*t2386;
  t2395 = t2259 + t2274 + t2276 + t2308 + t2350 + t2376 + t2392;
  t176 = Sin(var1[12]);
  t120 = Cos(var1[12]);
  t146 = -1.*t120;
  t147 = 1. + t146;
  t187 = 0.15121*t176;
  t162 = -0.15121*t147;
  t2425 = 0.15121*t147;
  t2432 = t176*t1810;
  t2439 = t120*t2108;
  t2461 = t2425 + t187 + t2432 + t2439;
  t2495 = t120*t1810;
  t2498 = -1.*t176*t2108;
  t2508 = t162 + t187 + t2495 + t2498;
  t2404 = t176*t1461;
  t2408 = t120*t2061;
  t2422 = t2404 + t2408;
  t2479 = t2422*t2461;
  t2486 = t120*t1461;
  t2490 = -1.*t176*t2061;
  t2492 = t2486 + t2490;
  t2513 = t2492*t2508;
  t2515 = t2020 + t2479 + t2513;
  t2516 = t1251*t2515;
  t2518 = t176*t2179;
  t2523 = t120*t2228;
  t2528 = t2518 + t2523;
  t2538 = -1.*t2528*t2461;
  t2540 = t120*t2179;
  t2541 = -1.*t176*t2228;
  t2543 = t2540 + t2541;
  t2547 = -1.*t2543*t2508;
  t2553 = t2189 + t2538 + t2547;
  t2556 = t1847*t2553;
  t2559 = t2516 + t2556;
  t94 = Cos(var1[4]);
  t96 = Cos(var1[5]);
  t2588 = Sin(var1[5]);
  t2581 = Sin(var1[4]);
  t2631 = -1.*t94*t96*t176;
  t2634 = -1.*t120*t94*t2588;
  t2638 = t2631 + t2634;
  t2672 = t120*t94*t96;
  t2682 = -1.*t94*t176*t2588;
  t2685 = t2672 + t2682;
  t2762 = t1204*t548;
  t2764 = t1138*t627;
  t2765 = t1016*t820;
  t2766 = t2762 + t2764 + t2765;
  t2768 = t2766*t2581;
  t2769 = -1.*t176*t834;
  t2773 = t120*t976;
  t2792 = t2769 + t2773;
  t2796 = t96*t2792;
  t2797 = t120*t834;
  t2802 = t176*t976;
  t2812 = t2797 + t2802;
  t2819 = -1.*t2812*t2588;
  t2820 = t2796 + t2819;
  t2822 = t94*t2820;
  t2823 = t2768 + t2822;
  t2691 = t1204*t2581;
  t2696 = t354*t2638;
  t2702 = t865*t2685;
  t2705 = t2691 + t2696 + t2702;
  t2710 = t1138*t2581;
  t2712 = t580*t2638;
  t2714 = t894*t2685;
  t2718 = t2710 + t2712 + t2714;
  t2723 = t1016*t2581;
  t2731 = t683*t2638;
  t2737 = t970*t2685;
  t2739 = t2723 + t2731 + t2737;
  t2932 = Sin(var1[3]);
  t2936 = t96*t2812;
  t2938 = t2792*t2588;
  t2941 = t2936 + t2938;
  t2942 = t2932*t2941;
  t2943 = Cos(var1[3]);
  t2958 = t94*t2766;
  t2959 = -1.*t2581*t2820;
  t2968 = t2958 + t2959;
  t2973 = t2943*t2968;
  t2975 = t2942 + t2973;
  t2997 = t2943*t2941;
  t3004 = -1.*t2932*t2968;
  t3005 = t2997 + t3004;
  t3043 = t96*t2422;
  t3044 = t2492*t2588;
  t3046 = t3043 + t3044;
  t3033 = t96*t2508;
  t3034 = -1.*t2461*t2588;
  t3037 = t3033 + t3034;
  t3012 = t96*t2528;
  t3018 = t2543*t2588;
  t3021 = t3012 + t3018;
  t3047 = t96*t2461;
  t3048 = t2508*t2588;
  t3049 = t3047 + t3048;
  t3022 = t96*t2492;
  t3024 = -1.*t2422*t2588;
  t3029 = t3022 + t3024;
  t3040 = t3029*t3037;
  t3055 = t3046*t3049;
  t3059 = t2020 + t3040 + t3055;
  t3069 = t3021*t3059;
  t3072 = t96*t2543;
  t3074 = -1.*t2528*t2588;
  t3075 = t3072 + t3074;
  t3077 = -1.*t3075*t3037;
  t3095 = -1.*t3021*t3049;
  t3104 = t2189 + t3077 + t3095;
  t3109 = t3046*t3104;
  t3117 = t3069 + t3109;
  t3172 = t1847*t2581;
  t3180 = t94*t3029;
  t3185 = t3172 + t3180;
  t3167 = t1251*t2581;
  t3168 = t94*t3075;
  t3171 = t3167 + t3168;
  t3189 = t2018*t2581;
  t3192 = t94*t3037;
  t3193 = t3189 + t3192;
  t3212 = t94*t2018;
  t3213 = -1.*t2581*t3037;
  t3216 = t3212 + t3213;
  t3194 = t3185*t3193;
  t3196 = t94*t1847;
  t3208 = -1.*t2581*t3029;
  t3210 = t3196 + t3208;
  t3217 = t3210*t3216;
  t3219 = t3055 + t3194 + t3217;
  t3221 = t3171*t3219;
  t3225 = -1.*t3171*t3193;
  t3227 = t94*t1251;
  t3231 = -1.*t2581*t3075;
  t3233 = t3227 + t3231;
  t3237 = -1.*t3233*t3216;
  t3238 = t3095 + t3225 + t3237;
  t3241 = t3185*t3238;
  t3242 = t3221 + t3241;
  t3262 = 0.15121*t120;
  t3265 = -0.15121*t176;
  t3272 = -1.*t176*t1810;
  t3274 = -1.*t120*t2108;
  t3277 = t3262 + t3265 + t3272 + t3274;
  t3318 = t3262 + t187 + t2495 + t2498;
  t3361 = -1.*t120*t834;
  t3363 = -1.*t176*t976;
  t3366 = t3361 + t3363;
  t3368 = t96*t3366;
  t3373 = -1.*t2792*t2588;
  t3381 = t3368 + t3373;
  t3394 = t3366*t2588;
  t3398 = t2796 + t3394;
  t3340 = -1.*t176*t2179;
  t3343 = -1.*t120*t2228;
  t3345 = t3340 + t3343;
  t3294 = -1.*t176*t1461;
  t3299 = -1.*t120*t2061;
  t3306 = t3294 + t3299;
  t3437 = t3306*t2588;
  t3440 = t3022 + t3437;
  t3447 = t96*t3318;
  t3449 = t3277*t2588;
  t3450 = t3447 + t3449;
  t3427 = t3345*t2588;
  t3428 = t3072 + t3427;
  t3497 = t96*t3277;
  t3501 = -1.*t3318*t2588;
  t3508 = t3497 + t3501;
  t3457 = t3046*t3450;
  t3494 = t3440*t3049;
  t3462 = t96*t3306;
  t3463 = -1.*t2492*t2588;
  t3472 = t3462 + t3463;
  t3538 = -1.*t3021*t3450;
  t3554 = -1.*t3428*t3049;
  t3544 = t96*t3345;
  t3548 = -1.*t2543*t2588;
  t3549 = t3544 + t3548;
  t3679 = -1.*t96*t2812;
  t3680 = t3679 + t3373;
  t3726 = -1.*t96*t2461;
  t3732 = -1.*t2508*t2588;
  t3738 = t3726 + t3732;
  t3722 = t3046*t3037;
  t3743 = t3029*t3049;
  t3705 = -1.*t96*t2422;
  t3708 = t3705 + t3463;
  t3762 = -1.*t3021*t3037;
  t3770 = -1.*t3075*t3049;
  t3754 = -1.*t96*t2528;
  t3757 = t3754 + t3548;
  t3930 = 4.e-6*t368;
  t3882 = -7.e-6*t368;
  t3883 = t3882 + t1292;
  t3889 = -7.e-6*t3883;
  t3903 = -2.8e-11*t471;
  t3912 = t368 + t3889 + t3903;
  t3932 = 7.000000000455e-6*t471;
  t3934 = t3930 + t3932;
  t3939 = t3930 + t773;
  t3941 = -7.e-6*t3939;
  t3945 = 1.000000000016*t471;
  t3960 = t3941 + t3945;
  t4019 = 7.e-6*t368;
  t4056 = 2.8e-11*t471;
  t3996 = -4.e-6*t368;
  t4010 = t3996 + t773;
  t4018 = -0.80315*t4010;
  t4020 = t4019 + t1292;
  t4023 = -0.038924*t4020;
  t4027 = t3882 + t505;
  t4031 = -0.038922999986*t4027;
  t4033 = t3930 + t1188;
  t4034 = -0.503149000008*t4033;
  t4035 = -9.666064052774999e-12*t471;
  t4038 = -2.598649999999999e-7 + t4018 + t4023 + t4031 + t4034 + t4035;
  t4043 = 0.148705*t3883;
  t4044 = t368 + t3903;
  t4050 = -0.503149000008*t4044;
  t4066 = t431 + t4056;
  t4069 = -0.80315*t4066;
  t4071 = t4019 + t505;
  t4072 = -3.6777349999999994e-6*t4071;
  t4074 = 1.0000140000590574e-6*t471;
  t4080 = 1.0394599999999997e-12 + t4043 + t4050 + t4069 + t4072 + t4074;
  t4087 = 0.148705*t3939;
  t4089 = t431 + t3903;
  t4098 = -0.038922999986*t4089;
  t4104 = t368 + t4056;
  t4106 = -0.038924*t4104;
  t4111 = t3996 + t1188;
  t4118 = -3.6777349999999994e-6*t4111;
  t4119 = 0.30000099999679997*t471;
  t4125 = 1.8190549999999993e-12 + t4087 + t4098 + t4106 + t4118 + t4119;
  t4200 = -7.e-6*t4010;
  t4202 = 4.e-6*t4027;
  t4205 = -6.5e-11*t471;
  t4206 = t4200 + t4202 + t4205;
  t4211 = 4.e-6*t4089;
  t4219 = 1.12e-16*t471;
  t4225 = t3930 + t4211 + t4219;
  t4235 = -7.e-6*t4066;
  t4236 = 1.96e-16*t471;
  t4237 = t3882 + t4235 + t4236;
  t4040 = t894*t4038;
  t4083 = t970*t4080;
  t4132 = t865*t4125;
  t4135 = t4040 + t4083 + t4132;
  t4151 = t1138*t4038;
  t4154 = t1016*t4080;
  t4173 = t1204*t4125;
  t4180 = t4151 + t4154 + t4173;
  t4188 = t580*t4038;
  t4189 = t683*t4080;
  t4192 = t354*t4125;
  t4193 = t4188 + t4189 + t4192;
  t4309 = 4.e-6*t3883;
  t4318 = -1.000000000049*t471;
  t4328 = t4309 + t4318;
  t4342 = -4.00000000026e-6*t471;
  t4344 = t4019 + t4342;
  t4362 = 4.e-6*t3939;
  t4369 = t368 + t4362 + t4056;
  t4379 = t1016*t4328;
  t4383 = t1138*t4344;
  t4384 = t1204*t4369;
  t4396 = t4379 + t4383 + t4384;
  t4264 = t1138*t4206;
  t4269 = t1204*t4225;
  t4272 = t1016*t4237;
  t4278 = t4264 + t4269 + t4272;
  t4474 = t1607*t4206;
  t4478 = t1322*t4038;
  t4483 = t1358*t4080;
  t4490 = t1428*t4125;
  t4506 = t4237*t1706;
  t4507 = t4225*t1778;
  t4508 = t4474 + t4478 + t4483 + t4490 + t4506 + t4507;
  t4529 = -1.*t1607*t4344;
  t4538 = -1.*t1090*t4080;
  t4543 = -1.*t4038*t1189;
  t4547 = -1.*t4125*t1239;
  t4549 = -1.*t4328*t1706;
  t4550 = -1.*t4369*t1778;
  t4551 = t4529 + t4538 + t4543 + t4547 + t4549 + t4550;
  t4182 = t1847*t4180;
  t4279 = t4278*t2018;
  t4280 = t580*t4206;
  t4283 = t354*t4225;
  t4286 = t683*t4237;
  t4297 = t4280 + t4283 + t4286;
  t4210 = t894*t4206;
  t4228 = t865*t4225;
  t4240 = t970*t4237;
  t4252 = t4210 + t4228 + t4240;
  t4307 = -1.*t4180*t1251;
  t4398 = -1.*t4396*t2018;
  t4628 = t176*t4135;
  t4631 = t120*t4193;
  t4635 = t4628 + t4631;
  t4639 = t120*t4135;
  t4640 = -1.*t176*t4193;
  t4643 = t4639 + t4640;
  t4334 = t970*t4328;
  t4350 = t894*t4344;
  t4375 = t865*t4369;
  t4376 = t4334 + t4350 + t4375;
  t4400 = t683*t4328;
  t4403 = t580*t4344;
  t4405 = t354*t4369;
  t4410 = t4400 + t4403 + t4405;
  t3918 = t970*t3912;
  t3936 = t894*t3934;
  t3965 = t865*t3960;
  t3968 = t3918 + t3936 + t3965;
  t3971 = t683*t3912;
  t3972 = t580*t3934;
  t3974 = t354*t3960;
  t3981 = t3971 + t3972 + t3974;
  t4779 = t176*t3968;
  t4780 = t120*t3981;
  t4782 = t4779 + t4780;
  t4754 = t120*t3968;
  t4760 = -1.*t176*t3981;
  t4761 = t4754 + t4760;
  t4712 = t1016*t3912;
  t4730 = t1138*t3934;
  t4731 = t1204*t3960;
  t4751 = t4712 + t4730 + t4731;
  t4770 = t96*t4761;
  t4786 = -1.*t4782*t2588;
  t4787 = t4770 + t4786;
  t4796 = t96*t4782;
  t4797 = t4761*t2588;
  t4798 = t4796 + t4797;
  t4827 = t94*t4751;
  t4835 = -1.*t2581*t4787;
  t4839 = t4827 + t4835;
  t4657 = -1.*t176*t4297;
  t4658 = t120*t4252;
  t4661 = t4657 + t4658;
  t4650 = t120*t4297;
  t4651 = t176*t4252;
  t4652 = t4650 + t4651;
  t4878 = t96*t4643;
  t4895 = -1.*t4635*t2588;
  t4896 = t4878 + t4895;
  t4904 = t96*t4635;
  t4908 = t4643*t2588;
  t4911 = t4904 + t4908;
  t4683 = t120*t4376;
  t4689 = -1.*t176*t4410;
  t4690 = t4683 + t4689;
  t4675 = t176*t4376;
  t4679 = t120*t4410;
  t4680 = t4675 + t4679;
  t4991 = t96*t4680;
  t4998 = t4690*t2588;
  t5000 = t4991 + t4998;
  t4941 = t96*t4652;
  t4949 = t4661*t2588;
  t4953 = t4941 + t4949;
  t4915 = t3046*t4911;
  t4956 = t4953*t3049;
  t4921 = t96*t4661;
  t4923 = -1.*t4652*t2588;
  t4929 = t4921 + t4923;
  t4976 = -1.*t4911*t3021;
  t5002 = -1.*t5000*t3049;
  t5029 = t4180*t2581;
  t5031 = t94*t4896;
  t5036 = t5029 + t5031;
  t5054 = t94*t4180;
  t5057 = -1.*t2581*t4896;
  t5061 = t5054 + t5057;
  t4978 = t96*t4690;
  t4980 = -1.*t4680*t2588;
  t4985 = t4978 + t4980;
  t5104 = t4396*t2581;
  t5105 = t94*t4985;
  t5114 = t5104 + t5105;
  t5063 = t4278*t2581;
  t5064 = t94*t4929;
  t5070 = t5063 + t5064;
  t5179 = -1.*t2766*t2581;
  t5182 = -1.*t94*t2820;
  t5186 = t5179 + t5182;
  t5197 = -1.*t2018*t2581;
  t5199 = -1.*t94*t3037;
  t5200 = t5197 + t5199;
  t5324 = 2.8e-11*t321;
  t5335 = -7.e-6*t233;
  t5339 = t5335 + t335;
  t5344 = t247 + t5324;
  t5312 = 4.e-6*t233;
  t5319 = t5312 + t1120;
  t5326 = t233 + t5324;
  t5363 = t5339*t1322;
  t5366 = -1.000000000049*t321*t1358;
  t5370 = t5344*t1428;
  t5374 = t5363 + t5366 + t5370;
  t5298 = 7.e-6*t233;
  t5302 = t5298 + t335;
  t5281 = -4.e-6*t233;
  t5287 = t5281 + t1120;
  t5436 = -2.8e-11*t321;
  t5332 = -1.000000000049*t321*t1090;
  t5343 = t5339*t1189;
  t5348 = t5344*t1239;
  t5349 = t5332 + t5343 + t5348;
  t5392 = t5335 + t888;
  t5394 = -0.038748999993*t5392;
  t5396 = t5312 + t680;
  t5397 = -0.281209000004*t5396;
  t5401 = -1.38024835e-16*t321;
  t5407 = -6.5e-11*t321*t1607;
  t5408 = t5302*t1706;
  t5409 = t5287*t1778;
  t5410 = -1.4640699999999997e-7 + t5394 + t5397 + t5401 + t5407 + t5408 + t5409;
  t5440 = t233 + t5436;
  t5443 = -0.281209000004*t5440;
  t5445 = t5298 + t888;
  t5446 = -2.123459e-6*t5445;
  t5452 = -0.0387489999948987*t321;
  t5455 = t5339*t1607;
  t5457 = -1.000000000049*t321*t1706;
  t5463 = t5344*t1778;
  t5466 = 5.856279999999999e-13 + t5443 + t5446 + t5452 + t5455 + t5457 + t5463;
  t5472 = t247 + t5436;
  t5476 = -0.038748999993*t5472;
  t5479 = t5281 + t680;
  t5494 = -2.123459e-6*t5479;
  t5496 = -0.28120900000849935*t321;
  t5498 = t5319*t1607;
  t5499 = t5326*t1706;
  t5501 = -1.000000000016*t321*t1778;
  t5502 = 1.0248489999999998e-12 + t5476 + t5494 + t5496 + t5498 + t5499 + t5501;
  t5391 = t5374*t2018;
  t5470 = t1847*t5466;
  t5417 = -6.5e-11*t321*t1322;
  t5424 = t5302*t1358;
  t5428 = t5287*t1428;
  t5431 = t5417 + t5424 + t5428;
  t5376 = t5319*t1322;
  t5377 = t5326*t1358;
  t5379 = -1.000000000016*t321*t1428;
  t5386 = t5376 + t5377 + t5379;
  t5528 = -1.*t5349*t2018;
  t5550 = -1.*t1251*t5466;
  t5536 = t5302*t1090;
  t5537 = -6.5e-11*t321*t1189;
  t5538 = t5287*t1239;
  t5541 = t5536 + t5537 + t5538;
  t5516 = t5326*t1090;
  t5517 = t5319*t1189;
  t5522 = -1.000000000016*t321*t1239;
  t5524 = t5516 + t5517 + t5522;
  t5631 = -1.*t176*t5410;
  t5635 = t120*t5502;
  t5645 = t5631 + t5635;
  t5650 = t120*t5410;
  t5651 = t176*t5502;
  t5652 = t5650 + t5651;
  t5288 = t5287*t548;
  t5291 = -6.5e-11*t321*t627;
  t5304 = t5302*t820;
  t5305 = t5288 + t5291 + t5304;
  t5311 = -1.000000000016*t321*t548;
  t5320 = t5319*t627;
  t5328 = t5326*t820;
  t5330 = t5311 + t5320 + t5328;
  t5722 = t120*t5305;
  t5723 = t176*t5330;
  t5725 = t5722 + t5723;
  t5717 = -1.*t176*t5305;
  t5718 = t120*t5330;
  t5719 = t5717 + t5718;
  t5703 = t5344*t548;
  t5707 = t5339*t627;
  t5709 = -1.000000000049*t321*t820;
  t5710 = t5703 + t5707 + t5709;
  t5721 = t96*t5719;
  t5726 = -1.*t5725*t2588;
  t5730 = t5721 + t5726;
  t5741 = t96*t5725;
  t5742 = t5719*t2588;
  t5746 = t5741 + t5742;
  t5752 = t94*t5710;
  t5754 = -1.*t2581*t5730;
  t5764 = t5752 + t5754;
  t5664 = t120*t5541;
  t5674 = t176*t5524;
  t5677 = t5664 + t5674;
  t5683 = -1.*t176*t5541;
  t5684 = t120*t5524;
  t5688 = t5683 + t5684;
  t5596 = t120*t5431;
  t5597 = t176*t5386;
  t5602 = t5596 + t5597;
  t5607 = -1.*t176*t5431;
  t5618 = t120*t5386;
  t5622 = t5607 + t5618;
  t5804 = t96*t5602;
  t5806 = t5622*t2588;
  t5807 = t5804 + t5806;
  t5788 = t96*t5677;
  t5789 = t5688*t2588;
  t5799 = t5788 + t5789;
  t5824 = t96*t5652;
  t5825 = t5645*t2588;
  t5827 = t5824 + t5825;
  t5830 = t96*t5645;
  t5831 = -1.*t5652*t2588;
  t5832 = t5830 + t5831;
  t5840 = t96*t5688;
  t5842 = -1.*t5677*t2588;
  t5843 = t5840 + t5842;
  t5809 = t96*t5622;
  t5811 = -1.*t5602*t2588;
  t5818 = t5809 + t5811;
  t5823 = t5807*t3049;
  t5829 = t3046*t5827;
  t5906 = t5374*t2581;
  t5907 = t94*t5818;
  t5908 = t5906 + t5907;
  t5845 = -1.*t5799*t3049;
  t5848 = -1.*t3021*t5827;
  t5892 = t5349*t2581;
  t5894 = t94*t5843;
  t5900 = t5892 + t5894;
  t5939 = t5466*t2581;
  t5941 = t94*t5832;
  t5942 = t5939 + t5941;
  t5945 = t94*t5466;
  t5947 = -1.*t2581*t5832;
  t5953 = t5945 + t5947;
  t6032 = 0.15121*t2179;
  t6033 = 0.15121*t2228;
  t6036 = -1.*t1461*t1810;
  t6041 = -1.*t1847*t2018;
  t6047 = -1.*t2061*t2108;
  t6049 = t6036 + t6041 + t6047;
  t6050 = t2766*t6049;
  t6052 = t976*t1810;
  t6053 = t2766*t2018;
  t6055 = t834*t2108;
  t6056 = t6052 + t6053 + t6055;
  t6058 = t1847*t6056;
  t6059 = t6032 + t6033 + t6050 + t6058;
  t6098 = t1607*t627;
  t6099 = t820*t1706;
  t6100 = t548*t1778;
  t6102 = t6098 + t6099 + t6100;
  t6107 = -1.*t1322*t1607;
  t6108 = -1.*t1358*t1706;
  t6110 = -1.*t1428*t1778;
  t6118 = t6107 + t6108 + t6110;
  t6068 = -0.281209*t1090;
  t6071 = 6.5e-11*t450;
  t6072 = -1. + t6071;
  t6084 = 4.e-6*t6072;
  t6093 = t6084 + t1255 + t773;
  t6095 = 1.e-6*t6093;
  t6096 = 0.038749*t1239;
  t6105 = t1322*t6102;
  t6121 = t627*t6118;
  t6124 = t1428*t6102;
  t6125 = t548*t6118;
  t6127 = t6124 + t6125;
  t6134 = -7.e-6*t6127;
  t6139 = -1.*t1358*t6102;
  t6141 = -1.*t820*t6118;
  t6143 = t6139 + t6141;
  t6147 = 4.e-6*t6143;
  t6149 = t6068 + t6095 + t6096 + t6105 + t6121 + t6134 + t6147;
  t6163 = -1.*t2422*t2461;
  t6165 = -1.*t2492*t2508;
  t6166 = t6041 + t6163 + t6165;
  t6169 = t2766*t6166;
  t6174 = t2812*t2461;
  t6176 = t2792*t2508;
  t6191 = t6053 + t6174 + t6176;
  t6195 = t1847*t6191;
  t6196 = t6169 + t6195;
  t2567 = t1851 + t1895 + t1963 + t1997;
  t188 = t162 + t187;
  t2586 = t2425 + t187;
  t2627 = t2065 + t2069 + t2083 + t2095;
  t6210 = t96*t2932*t2581;
  t6214 = t2943*t2588;
  t6217 = t6210 + t6214;
  t6228 = t2943*t96;
  t6230 = -1.*t2932*t2581*t2588;
  t6231 = t6228 + t6230;
  t2662 = t1477 + t1480 + t1500 + t1524;
  t6292 = t2932*t3021;
  t6316 = t2943*t3233;
  t6340 = t6292 + t6316;
  t6350 = t2943*t3021;
  t6353 = -1.*t2932*t3233;
  t6355 = t6350 + t6353;
  t6372 = -1.*t3029*t3037;
  t6380 = -1.*t3046*t3049;
  t6381 = t6041 + t6372 + t6380;
  t6383 = t2941*t6381;
  t6386 = t2820*t3037;
  t6387 = t2941*t3049;
  t6389 = t6053 + t6386 + t6387;
  t6391 = t3046*t6389;
  t6392 = t6383 + t6391;
  t2690 = t1717 + t1723 + t1726 + t1748;
  t6240 = -1.*t176*t6217;
  t6251 = t120*t6231;
  t6258 = t6240 + t6251;
  t6261 = t120*t6217;
  t6269 = t176*t6231;
  t6274 = t6261 + t6269;
  t2707 = t1528 + t1537 + t1548 + t1590;
  t2722 = t1612 + t1659 + t1683 + t1696;
  t6466 = -1.*t3185*t3193;
  t6469 = -1.*t3210*t3216;
  t6477 = t6380 + t6466 + t6469;
  t6481 = t2823*t6477;
  t6482 = t2823*t3193;
  t6488 = t2968*t3216;
  t6489 = t6387 + t6482 + t6488;
  t6504 = t3185*t6489;
  t6508 = t6481 + t6504;
  t6400 = -1.*t94*t1204*t2932;
  t6406 = t354*t6258;
  t6411 = t865*t6274;
  t6415 = t6400 + t6406 + t6411;
  t6425 = -1.*t94*t1138*t2932;
  t6431 = t580*t6258;
  t6435 = t894*t6274;
  t6438 = t6425 + t6431 + t6435;
  t6442 = -1.*t1016*t94*t2932;
  t6443 = t683*t6258;
  t6445 = t970*t6274;
  t6452 = t6442 + t6443 + t6445;
  t6630 = -1.*t3046*t3450;
  t6633 = -1.*t3440*t3049;
  t6639 = t2941*t3450;
  t6646 = t3398*t3049;
  t6720 = -1.*t3046*t3037;
  t6731 = -1.*t3029*t3049;
  t6745 = t2941*t3037;
  t6748 = t2820*t3049;
  t5237 = -1.*t1251*t2581;
  t5241 = -1.*t94*t3075;
  t5242 = t5237 + t5241;
  t5211 = -1.*t1847*t2581;
  t5216 = -1.*t94*t3029;
  t5217 = t5211 + t5216;
  t6928 = -1.*t1607*t4206;
  t6929 = -1.*t1322*t4038;
  t6931 = -1.*t1358*t4080;
  t6934 = -1.*t1428*t4125;
  t6935 = -1.*t4237*t1706;
  t6947 = -1.*t4225*t1778;
  t6950 = t6928 + t6929 + t6931 + t6934 + t6935 + t6947;
  t6964 = t4038*t627;
  t6968 = t1607*t3934;
  t6970 = t548*t4125;
  t6971 = t4080*t820;
  t6973 = t3912*t1706;
  t6978 = t3960*t1778;
  t6981 = t6964 + t6968 + t6970 + t6971 + t6973 + t6978;
  t6866 = -1.*t1847*t4180;
  t6876 = -1.*t4278*t2018;
  t6889 = t4180*t2766;
  t6895 = t4751*t2018;
  t5123 = t94*t4396;
  t5129 = -1.*t2581*t4985;
  t5131 = t5123 + t5129;
  t7114 = -1.*t3046*t4911;
  t7121 = -1.*t4953*t3049;
  t5079 = t94*t4278;
  t5080 = -1.*t2581*t4929;
  t5083 = t5079 + t5080;
  t4753 = t4751*t2581;
  t4788 = t94*t4787;
  t4790 = t4753 + t4788;
  t7141 = t4911*t2941;
  t7150 = t4798*t3049;
  t7207 = -1.*t5374*t2018;
  t7215 = -1.*t1847*t5466;
  t7230 = t5710*t2018;
  t7241 = t2766*t5466;
  t5963 = t94*t5349;
  t5981 = -1.*t2581*t5843;
  t5983 = t5963 + t5981;
  t5711 = t5710*t2581;
  t5734 = t94*t5730;
  t5736 = t5711 + t5734;
  t7314 = -1.*t5807*t3049;
  t7316 = -1.*t3046*t5827;
  t5916 = t94*t5374;
  t5919 = -1.*t2581*t5818;
  t5931 = t5916 + t5919;
  t7323 = t5746*t3049;
  t7324 = t2941*t5827;
  t7390 = 0.15121*t1461;
  t7395 = 0.15121*t2061;
  t7397 = -1.*t976*t1810;
  t7398 = -1.*t2766*t2018;
  t7399 = -1.*t834*t2108;
  t7400 = t7397 + t7398 + t7399;
  t7401 = t1251*t7400;
  t7404 = t2179*t1810;
  t7407 = t1251*t2018;
  t7408 = t2228*t2108;
  t7409 = t7404 + t7407 + t7408;
  t7410 = t2766*t7409;
  t7413 = t7390 + t7395 + t7401 + t7410;
  t7431 = -1.*t1607*t627;
  t7432 = -1.*t820*t1706;
  t7433 = -1.*t548*t1778;
  t7435 = t7431 + t7432 + t7433;
  t7437 = t1607*t1189;
  t7438 = t1090*t1706;
  t7440 = t1239*t1778;
  t7442 = t7437 + t7438 + t7440;
  t7422 = 7.e-6*t1299;
  t7423 = 4.e-6*t1593;
  t7424 = -1. + t6071 + t7422 + t7423;
  t7427 = 1.e-6*t7424;
  t7429 = -0.281209*t1358;
  t7430 = 0.038749*t1428;
  t7436 = t1189*t7435;
  t7446 = t627*t7442;
  t7448 = t1239*t7435;
  t7449 = t548*t7442;
  t7450 = t7448 + t7449;
  t7452 = -7.e-6*t7450;
  t7454 = -1.*t1090*t7435;
  t7455 = -1.*t820*t7442;
  t7456 = t7454 + t7455;
  t7457 = 4.e-6*t7456;
  t7458 = t7427 + t7429 + t7430 + t7436 + t7446 + t7452 + t7457;
  t7465 = -1.*t2812*t2461;
  t7466 = -1.*t2792*t2508;
  t7467 = t7398 + t7465 + t7466;
  t7468 = t1251*t7467;
  t7472 = t2528*t2461;
  t7474 = t2543*t2508;
  t7475 = t7407 + t7472 + t7474;
  t7478 = t2766*t7475;
  t7486 = t7468 + t7478;
  t7499 = -1.*t2943*t96*t2581;
  t7500 = t2932*t2588;
  t7501 = t7499 + t7500;
  t7503 = t96*t2932;
  t7504 = t2943*t2581*t2588;
  t7505 = t7503 + t7504;
  t7531 = t2932*t3046;
  t7534 = t2943*t3210;
  t7536 = t7531 + t7534;
  t7542 = t2943*t3046;
  t7543 = -1.*t2932*t3210;
  t7544 = t7542 + t7543;
  t7548 = -1.*t2820*t3037;
  t7549 = -1.*t2941*t3049;
  t7552 = t7398 + t7548 + t7549;
  t7555 = t3021*t7552;
  t7558 = t3075*t3037;
  t7560 = t3021*t3049;
  t7562 = t7407 + t7558 + t7560;
  t7564 = t2941*t7562;
  t7568 = t7555 + t7564;
  t7510 = -1.*t176*t7501;
  t7516 = t120*t7505;
  t7517 = t7510 + t7516;
  t7523 = t120*t7501;
  t7527 = t176*t7505;
  t7528 = t7523 + t7527;
  t7614 = -1.*t2823*t3193;
  t7616 = -1.*t2968*t3216;
  t7621 = t7549 + t7614 + t7616;
  t7622 = t3171*t7621;
  t7623 = t3171*t3193;
  t7625 = t3233*t3216;
  t7630 = t7560 + t7623 + t7625;
  t7631 = t2823*t7630;
  t7632 = t7622 + t7631;
  t7572 = t2943*t94*t1204;
  t7573 = t354*t7517;
  t7575 = t865*t7528;
  t7576 = t7572 + t7573 + t7575;
  t7579 = t2943*t94*t1138;
  t7581 = t580*t7517;
  t7585 = t894*t7528;
  t7586 = t7579 + t7581 + t7585;
  t7588 = t1016*t2943*t94;
  t7590 = t683*t7517;
  t7595 = t970*t7528;
  t7598 = t7588 + t7590 + t7595;
  t7731 = -1.*t2941*t3450;
  t7734 = -1.*t3398*t3049;
  t7738 = t3021*t3450;
  t7741 = t3428*t3049;
  t7806 = -1.*t2941*t3037;
  t7813 = -1.*t2820*t3049;
  t7823 = t3021*t3037;
  t7833 = t3075*t3049;
  t7999 = t1607*t4344;
  t8001 = t1090*t4080;
  t8005 = t4038*t1189;
  t8011 = t4125*t1239;
  t8012 = t4328*t1706;
  t8015 = t4369*t1778;
  t8016 = t7999 + t8001 + t8005 + t8011 + t8012 + t8015;
  t8021 = -1.*t4038*t627;
  t8024 = -1.*t1607*t3934;
  t8025 = -1.*t548*t4125;
  t8026 = -1.*t4080*t820;
  t8027 = -1.*t3912*t1706;
  t8028 = -1.*t3960*t1778;
  t8029 = t8021 + t8024 + t8025 + t8026 + t8027 + t8028;
  t7930 = t4180*t1251;
  t7948 = t4396*t2018;
  t7966 = -1.*t4180*t2766;
  t7971 = -1.*t4751*t2018;
  t8139 = t4911*t3021;
  t8149 = t5000*t3049;
  t8160 = -1.*t4911*t2941;
  t8170 = -1.*t4798*t3049;
  t8224 = -1.*t5710*t2018;
  t8229 = -1.*t2766*t5466;
  t8239 = t5349*t2018;
  t8245 = t1251*t5466;
  t8321 = -1.*t5746*t3049;
  t8322 = -1.*t2941*t5827;
  t8329 = t5799*t3049;
  t8330 = t3021*t5827;
  p_output1[0]=t2567*t2581 + t2627*t2638 + t2662*t2685 + t2690*t2705 + t2707*t2718 + t2722*t2739 - 0.80315*(t1375*t2705 + t1299*t2718 + t1350*t2739) - 0.038924*(t1753*t2705 + t1593*t2718 + t1627*t2739) + 0.148705*(t2705*t517 + t2718*t606 + t2739*t793) - 1.*t2586*t2588*t94 + t188*t94*t96 + var1[0] + t2823*var2[0] + t3005*var2[1] + t2975*var2[2] + t3242*var2[3] + ((-1.*t2932*t2941 - 1.*t2943*t2968)*var2[1] + t3005*var2[2])*var2[3] + t3117*var2[4] + (t2968*var2[0] - 1.*t2932*t5186*var2[1] + t2943*t5186*var2[2] + (t3219*t3233 + t3210*t3238 + t3171*(t3193*t3210 + t3185*t3216 + t3210*t5200 + t3216*t5217) + t3185*(-1.*t3171*t3216 - 1.*t3193*t3233 - 1.*t3233*t5200 - 1.*t3216*t5242))*var2[3])*var2[4] + t2559*var2[5] + (t3680*t94*var2[0] + (t2820*t2943 + t2581*t2932*t3680)*var2[1] + (t2820*t2932 - 1.*t2581*t2943*t3680)*var2[2] + (t3238*t3708*t94 + t3219*t3757*t94 + t3171*(-1.*t2581*t3216*t3708 + t3722 - 1.*t2581*t3210*t3738 + t3743 + t3193*t3708*t94 + t3185*t3738*t94) + t3185*(t2581*t3233*t3738 + t2581*t3216*t3757 + t3762 + t3770 - 1.*t3171*t3738*t94 - 1.*t3193*t3757*t94))*var2[3] + (t3059*t3075 + t3029*t3104 + t3021*(t3037*t3708 + t3722 + t3029*t3738 + t3743) + t3046*(-1.*t3075*t3738 - 1.*t3037*t3757 + t3762 + t3770))*var2[4])*var2[5] + t2244*var2[12] + (t3381*t94*var2[0] + (t2581*t2932*t3381 + t2943*t3398)*var2[1] + (-1.*t2581*t2943*t3381 + t2932*t3398)*var2[2] + (t3238*t3472*t94 + t3219*t3549*t94 + t3171*(t3457 - 1.*t2581*t3216*t3472 + t3494 - 1.*t2581*t3210*t3508 + t3193*t3472*t94 + t3185*t3508*t94) + t3185*(t2581*t3233*t3508 + t3538 + t2581*t3216*t3549 + t3554 - 1.*t3171*t3508*t94 - 1.*t3193*t3549*t94))*var2[3] + (t3059*t3428 + t3104*t3440 + t3021*(t3457 + t3037*t3472 + t3494 + t3029*t3508) + t3046*(-1.*t3075*t3508 + t3538 - 1.*t3037*t3549 + t3554))*var2[4] + (t1251*(t2461*t2492 + t2492*t3277 + t2508*t3306 + t2422*t3318) + t1847*(-1.*t2461*t2543 - 1.*t2543*t3277 - 1.*t2528*t3318 - 1.*t2508*t3345))*var2[5])*var2[12] + t2395*var2[13] + (t5736*var2[0] + (t2943*t5746 - 1.*t2932*t5764)*var2[1] + (t2932*t5746 + t2943*t5764)*var2[2] + (t3219*t5900 + t3238*t5908 + t3171*(t5823 + t5829 + t3193*t5908 + t3216*t5931 + t3185*t5942 + t3210*t5953) + t3185*(t5845 + t5848 - 1.*t3193*t5900 - 1.*t3171*t5942 - 1.*t3233*t5953 - 1.*t3216*t5983))*var2[3] + (t3059*t5799 + t3104*t5807 + t3021*(t5391 + t5470 + t3037*t5818 + t5823 + t5829 + t3029*t5832) + t3046*(t5528 + t5550 - 1.*t3075*t5832 - 1.*t3037*t5843 + t5845 + t5848))*var2[4] + (t2515*t5349 + t2553*t5374 + t1251*(t5391 + t5470 + t2461*t5602 + t2508*t5622 + t2492*t5645 + t2422*t5652) + t1847*(t5528 + t5550 - 1.*t2543*t5645 - 1.*t2528*t5652 - 1.*t2461*t5677 - 1.*t2508*t5688))*var2[5] + (0.15121*t5305 + 0.15121*t5330 + t2116*t5349 + t2239*t5374 + t1251*(t1810*t5386 + t5391 + t2061*t5410 + t2108*t5431 + t5470 + t1461*t5502) + t1847*(-1.*t2228*t5410 - 1.*t2179*t5502 - 1.*t1810*t5524 + t5528 - 1.*t2108*t5541 + t5550))*var2[12])*var2[13] + 4.0519653002457196e-7*var2[14] + (t4790*var2[0] + (t2943*t4798 - 1.*t2932*t4839)*var2[1] + (t2932*t4798 + t2943*t4839)*var2[2] + (t3238*t5070 + t3171*(t4915 + t4956 + t3185*t5036 + t3210*t5061 + t3193*t5070 + t3216*t5083) + t3219*t5114 + t3185*(t4976 + t5002 - 1.*t3171*t5036 - 1.*t3233*t5061 - 1.*t3193*t5114 - 1.*t3216*t5131))*var2[3] + (t3104*t4953 + t3021*(t4182 + t4279 + t3029*t4896 + t4915 + t3037*t4929 + t4956) + t3059*t5000 + t3046*(t4307 + t4398 - 1.*t3075*t4896 + t4976 - 1.*t3037*t4985 + t5002))*var2[4] + (t2553*t4278 + t2515*t4396 + t1251*(t4182 + t4279 + t2422*t4635 + t2492*t4643 + t2461*t4652 + t2508*t4661) + t1847*(t4307 + t4398 - 1.*t2528*t4635 - 1.*t2543*t4643 - 1.*t2461*t4680 - 1.*t2508*t4690))*var2[5] + (0.15121*t3968 + 0.15121*t3981 + t2239*t4278 + t1251*(t1461*t4135 + t4182 + t2061*t4193 + t1810*t4252 + t4279 + t2108*t4297) + t2116*t4396 + t1847*(-1.*t2179*t4135 - 1.*t2228*t4193 + t4307 - 1.*t1810*t4376 + t4398 - 1.*t2108*t4410))*var2[12] + (-0.281209*t3912 + 0.038749*t3960 + t2346*t4206 + t2307*t4344 + t1189*t4508 + t1322*t4551 + 4.e-6*(-1.*t2346*t4237 - 1.*t2307*t4328 - 1.*t1090*t4508 - 1.*t1358*t4551) - 7.e-6*(t2346*t4225 + t2307*t4369 + t1239*t4508 + t1428*t4551) + 1.e-6*(t3996 - 7.000000000455e-6*t471))*var2[13])*var2[14] + t2823*var3[0] + t3005*var3[1] + t2975*var3[2] + t3242*var3[3] + t3117*var3[4] + t2559*var3[5] + t2244*var3[12] + t2395*var3[13] + 4.0519653002457196e-7*var3[14] - 1.*var4[0];
  p_output1[1]=t188*t6217 + t2586*t6231 + t2627*t6258 + t2662*t6274 + t2690*t6415 + t2707*t6438 + t2722*t6452 - 0.80315*(t1375*t6415 + t1299*t6438 + t1350*t6452) - 0.038924*(t1753*t6415 + t1593*t6438 + t1627*t6452) + 0.148705*(t517*t6415 + t606*t6438 + t6452*t793) - 1.*t2567*t2932*t94 + var1[1] + t3171*var2[0] + t6355*var2[1] + t6340*var2[2] + t6508*var2[3] + ((-1.*t2932*t3021 - 1.*t2943*t3233)*var2[1] + t6355*var2[2])*var2[3] + t6392*var2[4] + (t3233*var2[0] - 1.*t2932*t5242*var2[1] + t2943*t5242*var2[2] + (t3185*(t2968*t3193 + t2823*t3216 + t3216*t5186 + t2968*t5200) + t2823*(-1.*t3193*t3210 - 1.*t3185*t3216 - 1.*t3210*t5200 - 1.*t3216*t5217) + t2968*t6477 + t3210*t6489)*var2[3])*var2[4] + t6196*var2[5] + (t3757*t94*var2[0] + (t2943*t3075 + t2581*t2932*t3757)*var2[1] + (t2932*t3075 - 1.*t2581*t2943*t3757)*var2[2] + (t3680*t6477*t94 + t3708*t6489*t94 + t3185*(-1.*t2581*t3216*t3680 - 1.*t2581*t2968*t3738 + t6745 + t6748 + t3193*t3680*t94 + t2823*t3738*t94) + t2823*(t2581*t3216*t3708 + t2581*t3210*t3738 + t6720 + t6731 - 1.*t3193*t3708*t94 - 1.*t3185*t3738*t94))*var2[3] + (t2820*t6381 + t3029*t6389 + t2941*(-1.*t3037*t3708 - 1.*t3029*t3738 + t6720 + t6731) + t3046*(t3037*t3680 + t2820*t3738 + t6745 + t6748))*var2[4])*var2[5] + t6059*var2[12] + (t3549*t94*var2[0] + (t2943*t3428 + t2581*t2932*t3549)*var2[1] + (t2932*t3428 - 1.*t2581*t2943*t3549)*var2[2] + (t3381*t6477*t94 + t3472*t6489*t94 + t3185*(-1.*t2581*t3216*t3381 - 1.*t2581*t2968*t3508 + t6639 + t6646 + t3193*t3381*t94 + t2823*t3508*t94) + t2823*(t2581*t3216*t3472 + t2581*t3210*t3508 + t6630 + t6633 - 1.*t3193*t3472*t94 - 1.*t3185*t3508*t94))*var2[3] + (t3398*t6381 + t3440*t6389 + t2941*(-1.*t3037*t3472 - 1.*t3029*t3508 + t6630 + t6633) + t3046*(t3037*t3381 + t2820*t3508 + t6639 + t6646))*var2[4] + (t2766*(-1.*t2461*t2492 - 1.*t2492*t3277 - 1.*t2508*t3306 - 1.*t2422*t3318) + t1847*(t2461*t2792 + t2792*t3277 + t2812*t3318 + t2508*t3366))*var2[5])*var2[12] + t6149*var2[13] + (t5900*var2[0] + (t2943*t5799 - 1.*t2932*t5983)*var2[1] + (t2932*t5799 + t2943*t5983)*var2[2] + (t5736*t6477 + t5908*t6489 + t2823*(-1.*t3193*t5908 - 1.*t3216*t5931 - 1.*t3185*t5942 - 1.*t3210*t5953 + t7314 + t7316) + t3185*(t3193*t5736 + t3216*t5764 + t2823*t5942 + t2968*t5953 + t7323 + t7324))*var2[3] + (t5746*t6381 + t5807*t6389 + t2941*(-1.*t3037*t5818 - 1.*t3029*t5832 + t7207 + t7215 + t7314 + t7316) + t3046*(t3037*t5730 + t2820*t5832 + t7230 + t7241 + t7323 + t7324))*var2[4] + (t5710*t6166 + t5374*t6191 + t2766*(-1.*t2461*t5602 - 1.*t2508*t5622 - 1.*t2492*t5645 - 1.*t2422*t5652 + t7207 + t7215) + t1847*(t2792*t5645 + t2812*t5652 + t2508*t5719 + t2461*t5725 + t7230 + t7241))*var2[5] + (0.15121*t5524 + 0.15121*t5541 + t5710*t6049 + t5374*t6056 + t2766*(-1.*t1810*t5386 - 1.*t2061*t5410 - 1.*t2108*t5431 - 1.*t1461*t5502 + t7207 + t7215) + t1847*(t2108*t5305 + t1810*t5330 + t7230 + t7241 + t5410*t834 + t5502*t976))*var2[12])*var2[13] + 0.29999995910920463*var2[14] + (t5114*var2[0] + (t2943*t5000 - 1.*t2932*t5131)*var2[1] + (t2932*t5000 + t2943*t5131)*var2[2] + (t4790*t6477 + t5070*t6489 + t2823*(-1.*t3185*t5036 - 1.*t3210*t5061 - 1.*t3193*t5070 - 1.*t3216*t5083 + t7114 + t7121) + t3185*(t3193*t4790 + t3216*t4839 + t2823*t5036 + t2968*t5061 + t7141 + t7150))*var2[3] + (t4798*t6381 + t4953*t6389 + t2941*(-1.*t3029*t4896 - 1.*t3037*t4929 + t6866 + t6876 + t7114 + t7121) + t3046*(t3037*t4787 + t2820*t4896 + t6889 + t6895 + t7141 + t7150))*var2[4] + (t4751*t6166 + t4278*t6191 + t2766*(-1.*t2422*t4635 - 1.*t2492*t4643 - 1.*t2461*t4652 - 1.*t2508*t4661 + t6866 + t6876) + t1847*(t2812*t4635 + t2792*t4643 + t2508*t4761 + t2461*t4782 + t6889 + t6895))*var2[5] + (0.15121*t4376 + 0.15121*t4410 + t4751*t6049 + t4278*t6056 + t2766*(-1.*t1461*t4135 - 1.*t2061*t4193 - 1.*t1810*t4252 - 1.*t2108*t4297 + t6866 + t6876) + t1847*(t1810*t3968 + t2108*t3981 + t6889 + t6895 + t4193*t834 + t4135*t976))*var2[12] + (-0.281209*t4328 + 0.038749*t4369 + 1.e-6*(t3882 + 4.00000000026e-6*t471) + t4206*t6102 + t3934*t6118 + t627*t6950 + t1322*t6981 - 7.e-6*(t4225*t6102 + t3960*t6118 + t548*t6950 + t1428*t6981) + 4.e-6*(-1.*t4237*t6102 - 1.*t3912*t6118 - 1.*t1358*t6981 - 1.*t6950*t820))*var2[13])*var2[14] + t3171*var3[0] + t6355*var3[1] + t6340*var3[2] + t6508*var3[3] + t6392*var3[4] + t6196*var3[5] + t6059*var3[12] + t6149*var3[13] + 0.29999995910920463*var3[14] - 1.*var4[1];
  p_output1[2]=t188*t7501 + t2586*t7505 + t2627*t7517 + t2662*t7528 + t2690*t7576 + t2707*t7586 + t2722*t7598 - 0.80315*(t1375*t7576 + t1299*t7586 + t1350*t7598) - 0.038924*(t1753*t7576 + t1593*t7586 + t1627*t7598) + 0.148705*(t517*t7576 + t606*t7586 + t7598*t793) + t2567*t2943*t94 + var1[2] + t3185*var2[0] + t7544*var2[1] + t7536*var2[2] + t7632*var2[3] + ((-1.*t2932*t3046 - 1.*t2943*t3210)*var2[1] + t7544*var2[2])*var2[3] + t7568*var2[4] + (t3210*var2[0] - 1.*t2932*t5217*var2[1] + t2943*t5217*var2[2] + (t3171*(-1.*t2968*t3193 - 1.*t2823*t3216 - 1.*t3216*t5186 - 1.*t2968*t5200) + t2823*(t3171*t3216 + t3193*t3233 + t3233*t5200 + t3216*t5242) + t3233*t7621 + t2968*t7630)*var2[3])*var2[4] + t7486*var2[5] + (t3708*t94*var2[0] + (t2943*t3029 + t2581*t2932*t3708)*var2[1] + (t2932*t3029 - 1.*t2581*t2943*t3708)*var2[2] + (t3757*t7621*t94 + t3680*t7630*t94 + t3171*(t2581*t3216*t3680 + t2581*t2968*t3738 + t7806 + t7813 - 1.*t3193*t3680*t94 - 1.*t2823*t3738*t94) + t2823*(-1.*t2581*t3233*t3738 - 1.*t2581*t3216*t3757 + t7823 + t7833 + t3171*t3738*t94 + t3193*t3757*t94))*var2[3] + (t3075*t7552 + t2820*t7562 + t3021*(-1.*t3037*t3680 - 1.*t2820*t3738 + t7806 + t7813) + t2941*(t3075*t3738 + t3037*t3757 + t7823 + t7833))*var2[4])*var2[5] + t7413*var2[12] + (t3472*t94*var2[0] + (t2943*t3440 + t2581*t2932*t3472)*var2[1] + (t2932*t3440 - 1.*t2581*t2943*t3472)*var2[2] + (t3549*t7621*t94 + t3381*t7630*t94 + t3171*(t2581*t3216*t3381 + t2581*t2968*t3508 + t7731 + t7734 - 1.*t3193*t3381*t94 - 1.*t2823*t3508*t94) + t2823*(-1.*t2581*t3233*t3508 - 1.*t2581*t3216*t3549 + t7738 + t7741 + t3171*t3508*t94 + t3193*t3549*t94))*var2[3] + (t3428*t7552 + t3398*t7562 + t3021*(-1.*t3037*t3381 - 1.*t2820*t3508 + t7731 + t7734) + t2941*(t3075*t3508 + t3037*t3549 + t7738 + t7741))*var2[4] + (t2766*(t2461*t2543 + t2543*t3277 + t2528*t3318 + t2508*t3345) + t1251*(-1.*t2461*t2792 - 1.*t2792*t3277 - 1.*t2812*t3318 - 1.*t2508*t3366))*var2[5])*var2[12] + t7458*var2[13] + (t5908*var2[0] + (t2943*t5807 - 1.*t2932*t5931)*var2[1] + (t2932*t5807 + t2943*t5931)*var2[2] + (t5900*t7621 + t5736*t7630 + t3171*(-1.*t3193*t5736 - 1.*t3216*t5764 - 1.*t2823*t5942 - 1.*t2968*t5953 + t8321 + t8322) + t2823*(t3193*t5900 + t3171*t5942 + t3233*t5953 + t3216*t5983 + t8329 + t8330))*var2[3] + (t5799*t7552 + t5746*t7562 + t3021*(-1.*t3037*t5730 - 1.*t2820*t5832 + t8224 + t8229 + t8321 + t8322) + t2941*(t3075*t5832 + t3037*t5843 + t8239 + t8245 + t8329 + t8330))*var2[4] + (t5349*t7467 + t5710*t7475 + t1251*(-1.*t2792*t5645 - 1.*t2812*t5652 - 1.*t2508*t5719 - 1.*t2461*t5725 + t8224 + t8229) + t2766*(t2543*t5645 + t2528*t5652 + t2461*t5677 + t2508*t5688 + t8239 + t8245))*var2[5] + (0.15121*t5386 + 0.15121*t5431 + t5349*t7400 + t5710*t7409 + t2766*(t2228*t5410 + t2179*t5502 + t1810*t5524 + t2108*t5541 + t8239 + t8245) + t1251*(-1.*t2108*t5305 - 1.*t1810*t5330 + t8224 + t8229 - 1.*t5410*t834 - 1.*t5502*t976))*var2[12])*var2[13] - 2.5986500000000035e-7*var2[14] + (t5070*var2[0] + (t2943*t4953 - 1.*t2932*t5083)*var2[1] + (t2932*t4953 + t2943*t5083)*var2[2] + (t5114*t7621 + t4790*t7630 + t2823*(t3171*t5036 + t3233*t5061 + t3193*t5114 + t3216*t5131 + t8139 + t8149) + t3171*(-1.*t3193*t4790 - 1.*t3216*t4839 - 1.*t2823*t5036 - 1.*t2968*t5061 + t8160 + t8170))*var2[3] + (t5000*t7552 + t4798*t7562 + t2941*(t3075*t4896 + t3037*t4985 + t7930 + t7948 + t8139 + t8149) + t3021*(-1.*t3037*t4787 - 1.*t2820*t4896 + t7966 + t7971 + t8160 + t8170))*var2[4] + (t4396*t7467 + t4751*t7475 + t2766*(t2528*t4635 + t2543*t4643 + t2461*t4680 + t2508*t4690 + t7930 + t7948) + t1251*(-1.*t2812*t4635 - 1.*t2792*t4643 - 1.*t2508*t4761 - 1.*t2461*t4782 + t7966 + t7971))*var2[5] + (0.15121*t4252 + 0.15121*t4297 + t4396*t7400 + t4751*t7409 + t2766*(t2179*t4135 + t2228*t4193 + t1810*t4376 + t2108*t4410 + t7930 + t7948) + t1251*(-1.*t1810*t3968 - 1.*t2108*t3981 + t7966 + t7971 - 1.*t4193*t834 - 1.*t4135*t976))*var2[12] + (0.038749*t4225 - 0.281209*t4237 + 1.e-6*(7.e-6*t4010 + 4.e-6*t4020 + 6.5e-11*t471) + t4344*t7435 + t3934*t7442 + t627*t8016 + t1189*t8029 - 7.e-6*(t4369*t7435 + t3960*t7442 + t548*t8016 + t1239*t8029) + 4.e-6*(-1.*t4328*t7435 - 1.*t3912*t7442 - 1.*t1090*t8029 - 1.*t8016*t820))*var2[13])*var2[14] + t3185*var3[0] + t7544*var3[1] + t7536*var3[2] + t7632*var3[3] + t7568*var3[4] + t7486*var3[5] + t7413*var3[12] + t7458*var3[13] - 2.5986500000000035e-7*var3[14] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RlFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void ddh_RlFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
