/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:30:06 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t241;
  double t250;
  double t267;
  double t119;
  double t154;
  double t176;
  double t332;
  double t202;
  double t336;
  double t291;
  double t319;
  double t353;
  double t376;
  double t378;
  double t715;
  double t562;
  double t613;
  double t614;
  double t632;
  double t637;
  double t649;
  double t651;
  double t770;
  double t788;
  double t808;
  double t862;
  double t882;
  double t183;
  double t1034;
  double t1197;
  double t1037;
  double t1047;
  double t1058;
  double t1073;
  double t1096;
  double t1097;
  double t1145;
  double t1151;
  double t1170;
  double t1191;
  double t1026;
  double t1198;
  double t1207;
  double t1214;
  double t1272;
  double t1296;
  double t1304;
  double t1308;
  double t1312;
  double t1325;
  double t1329;
  double t101;
  double t427;
  double t521;
  double t726;
  double t749;
  double t209;
  double t1024;
  double t1025;
  double t1388;
  double t1409;
  double t1411;
  double t1422;
  double t1428;
  double t1430;
  double t1431;
  double t1444;
  double t1447;
  double t1465;
  double t1472;
  double t1477;
  double t1481;
  double t1514;
  double t1518;
  double t1524;
  double t1528;
  double t1367;
  double t1657;
  double t1653;
  double t1667;
  double t1685;
  double t1691;
  double t1704;
  double t1713;
  double t1722;
  double t1732;
  double t1736;
  double t1748;
  double t1752;
  double t1758;
  double t1762;
  double t1770;
  double t1773;
  double t1776;
  double t1782;
  double t1783;
  double t1787;
  double t1821;
  double t1829;
  double t1836;
  double t1841;
  double t1846;
  double t1852;
  double t1854;
  double t1868;
  double t1345;
  double t1350;
  double t1360;
  double t1195;
  double t1334;
  double t1335;
  double t1581;
  double t1590;
  double t1603;
  double t1484;
  double t1529;
  double t1535;
  double t1895;
  double t1908;
  double t1911;
  double t1844;
  double t1888;
  double t1890;
  double t1954;
  double t1967;
  double t1995;
  double t2088;
  double t2136;
  double t2143;
  double t2147;
  double t2148;
  double t2149;
  double t2151;
  double t2153;
  double t2159;
  double t2162;
  double t2164;
  double t2178;
  double t2189;
  double t2201;
  double t2207;
  double t2214;
  double t2104;
  double t2110;
  double t2096;
  double t2258;
  double t2260;
  double t2269;
  double t2270;
  double t2284;
  double t2285;
  double t2288;
  double t2289;
  double t2340;
  double t2343;
  double t2349;
  double t2350;
  double t2355;
  double t2356;
  double t2359;
  double t2360;
  double t2403;
  double t2405;
  double t2406;
  double t2411;
  double t2413;
  double t2414;
  double t2416;
  double t2417;
  double t2423;
  double t2424;
  double t2430;
  double t2438;
  double t2443;
  double t2447;
  double t2448;
  double t2450;
  double t2451;
  double t2452;
  double t2455;
  double t2460;
  double t2462;
  double t2463;
  double t2465;
  double t2471;
  double t2473;
  double t2475;
  double t2476;
  double t2512;
  double t2504;
  double t2505;
  double t2506;
  double t2513;
  double t2514;
  double t2525;
  double t2529;
  double t2533;
  double t2537;
  double t2544;
  double t2545;
  double t2550;
  double t2552;
  double t2556;
  double t2559;
  double t2560;
  double t2564;
  double t2592;
  double t2594;
  double t2598;
  double t2599;
  double t2603;
  double t2604;
  double t2606;
  double t2613;
  double t2615;
  double t2616;
  double t2618;
  double t2624;
  double t2625;
  double t2628;
  double t2629;
  double t405;
  double t667;
  double t993;
  double t1006;
  double t1336;
  double t1368;
  double t1375;
  double t1413;
  double t1438;
  double t1449;
  double t1450;
  double t1542;
  double t1606;
  double t1619;
  double t1716;
  double t1765;
  double t1797;
  double t1813;
  double t1894;
  double t1914;
  double t1918;
  double t1016;
  double t1377;
  double t1385;
  double t2819;
  double t2847;
  double t1464;
  double t1629;
  double t1636;
  double t1820;
  double t1921;
  double t1932;
  double t1945;
  double t1958;
  double t1966;
  double t1984;
  double t1989;
  double t2002;
  double t2016;
  double t2028;
  double t2037;
  double t2038;
  double t2039;
  double t2045;
  double t2052;
  double t2059;
  double t2062;
  double t2070;
  double t2072;
  double t2074;
  double t2076;
  double t2081;
  double t2084;
  double t2221;
  double t2227;
  double t2231;
  double t2157;
  double t2216;
  double t2218;
  double t2097;
  double t2101;
  double t2113;
  double t2122;
  double t2219;
  double t2233;
  double t2235;
  double t2297;
  double t2301;
  double t2303;
  double t2280;
  double t2290;
  double t2291;
  double t2244;
  double t2246;
  double t2250;
  double t2251;
  double t2296;
  double t2312;
  double t2313;
  double t2381;
  double t2382;
  double t2386;
  double t2353;
  double t2378;
  double t2379;
  double t2324;
  double t2326;
  double t2327;
  double t2332;
  double t2380;
  double t2388;
  double t2393;
  double t2483;
  double t2485;
  double t2490;
  double t2468;
  double t2479;
  double t2480;
  double t2415;
  double t2439;
  double t2456;
  double t2457;
  double t2481;
  double t2494;
  double t2496;
  double t2573;
  double t2578;
  double t2579;
  double t2554;
  double t2565;
  double t2567;
  double t2509;
  double t2522;
  double t2538;
  double t2539;
  double t2569;
  double t2584;
  double t2585;
  double t2663;
  double t2669;
  double t2686;
  double t2619;
  double t2631;
  double t2645;
  double t2595;
  double t2602;
  double t2608;
  double t2609;
  double t2653;
  double t2707;
  double t2714;
  double t2835;
  double t2843;
  double t2844;
  double t2862;
  double t2864;
  double t2866;
  double t2882;
  double t2884;
  double t2886;
  double t3201;
  double t3203;
  double t3205;
  double t3207;
  double t3220;
  double t3221;
  double t3222;
  double t3224;
  double t3225;
  double t2906;
  double t2909;
  double t2910;
  double t2913;
  double t2914;
  double t2915;
  double t2919;
  double t2925;
  double t2926;
  double t2972;
  double t2977;
  double t2989;
  double t2990;
  double t3001;
  double t3002;
  double t3014;
  double t3020;
  double t3024;
  double t3026;
  double t3028;
  double t3031;
  double t3049;
  double t3052;
  double t3054;
  double t3056;
  double t3060;
  double t3062;
  double t3082;
  double t3087;
  double t3090;
  double t3093;
  double t3094;
  double t3095;
  double t3108;
  double t3109;
  double t3110;
  double t3112;
  double t3117;
  double t3123;
  double t3128;
  double t3129;
  double t3131;
  double t3139;
  double t3140;
  double t3143;
  double t3157;
  double t3160;
  double t3161;
  double t3164;
  double t3172;
  double t3175;
  double t2788;
  double t2789;
  double t2802;
  double t3426;
  double t3440;
  double t3449;
  double t3452;
  double t3453;
  double t3454;
  double t3457;
  double t3458;
  double t3459;
  double t3464;
  double t3465;
  double t3470;
  double t3474;
  double t3475;
  double t3477;
  double t3480;
  double t3488;
  double t3489;
  double t3490;
  double t3504;
  double t3505;
  double t3506;
  double t3507;
  double t3512;
  double t3513;
  double t3516;
  double t3521;
  double t3522;
  double t3530;
  double t3540;
  double t3541;
  double t3549;
  double t3550;
  double t3594;
  double t3432;
  double t3434;
  double t3565;
  double t3568;
  double t3573;
  double t3586;
  double t3587;
  double t3598;
  double t3600;
  double t3605;
  double t3606;
  double t3607;
  double t3608;
  double t3616;
  double t3618;
  double t3627;
  double t3628;
  double t3629;
  double t3633;
  double t3635;
  double t3638;
  double t3639;
  double t3640;
  double t3645;
  double t3649;
  double t3418;
  double t3420;
  double t3430;
  double t3431;
  double t3435;
  double t3437;
  double t3466;
  double t3508;
  double t3553;
  double t3559;
  double t3581;
  double t3619;
  double t3659;
  double t3660;
  double t3662;
  double t3663;
  double t3665;
  double t3668;
  double t3669;
  double t3673;
  double t3691;
  double t2774;
  double t2777;
  double t2779;
  double t3713;
  double t3714;
  double t3718;
  double t3700;
  double t3701;
  double t3703;
  double t3561;
  double t3693;
  double t3695;
  double t3727;
  double t3728;
  double t3730;
  double t2809;
  double t2814;
  double t2817;
  double t3923;
  double t3926;
  double t3928;
  double t3735;
  double t3739;
  double t3741;
  double t3742;
  double t3761;
  double t3764;
  double t3766;
  double t3767;
  double t3798;
  double t3799;
  double t3801;
  double t3805;
  double t3822;
  double t3823;
  double t3824;
  double t3833;
  double t3868;
  double t3871;
  double t3873;
  double t3875;
  double t3898;
  double t3900;
  double t3902;
  double t3903;
  double t4082;
  double t4086;
  double t4089;
  double t4090;
  double t4077;
  double t4078;
  double t4100;
  double t4103;
  double t4105;
  double t4079;
  double t4093;
  double t4095;
  double t2257;
  double t2317;
  double t2318;
  double t2135;
  double t2237;
  double t2239;
  double t4280;
  double t4281;
  double t4283;
  double t4286;
  double t4288;
  double t4289;
  double t4290;
  double t4291;
  double t4292;
  double t4296;
  double t4298;
  double t4299;
  double t4302;
  double t4304;
  double t4305;
  double t4309;
  double t4312;
  double t4313;
  double t4317;
  double t4324;
  double t4325;
  double t4330;
  double t4294;
  double t4319;
  double t4322;
  double t4347;
  double t4355;
  double t4363;
  double t4371;
  double t4377;
  double t4379;
  double t4382;
  double t4385;
  double t4386;
  double t4388;
  double t4391;
  double t4392;
  double t4323;
  double t4332;
  double t4333;
  double t4387;
  double t4394;
  double t4399;
  double t4405;
  double t4406;
  double t4407;
  double t2334;
  double t2394;
  double t2395;
  double t2611;
  double t2740;
  double t2757;
  double t2541;
  double t2586;
  double t2589;
  double t4559;
  double t4560;
  double t4564;
  double t4567;
  double t4569;
  double t4571;
  double t4572;
  double t4573;
  double t4576;
  double t4578;
  double t4584;
  double t4585;
  double t4586;
  double t4588;
  double t4595;
  double t4597;
  double t4603;
  double t4604;
  double t4613;
  double t4616;
  double t4626;
  double t4628;
  double t4630;
  double t4634;
  double t4574;
  double t4600;
  double t4639;
  double t4659;
  double t4664;
  double t4665;
  double t4666;
  double t4671;
  double t4676;
  double t4677;
  double t4678;
  double t4662;
  double t4672;
  double t4673;
  double t4691;
  double t4693;
  double t4695;
  double t4697;
  double t4701;
  double t4704;
  double t4705;
  double t4674;
  double t4679;
  double t4682;
  double t4699;
  double t4707;
  double t4708;
  double t4710;
  double t4715;
  double t4717;
  double t2459;
  double t2497;
  double t2499;
  double t3919;
  double t3921;
  double t3944;
  double t3945;
  double t3976;
  double t3978;
  double t3997;
  double t3999;
  double t4029;
  double t4031;
  double t4044;
  double t4051;
  double t4941;
  double t4942;
  double t4943;
  double t4962;
  double t4966;
  double t4969;
  double t4096;
  double t4099;
  double t4118;
  double t4119;
  double t4975;
  double t4978;
  double t4980;
  double t4156;
  double t4165;
  double t4190;
  double t4192;
  double t5000;
  double t5001;
  double t5002;
  double t5018;
  double t5020;
  double t5021;
  double t4226;
  double t4228;
  double t4244;
  double t4248;
  double t5041;
  double t5050;
  double t5053;
  double t4276;
  double t4339;
  double t4416;
  double t4420;
  double t4436;
  double t4439;
  double t4454;
  double t4469;
  double t4491;
  double t4492;
  double t4526;
  double t4527;
  double t4687;
  double t4688;
  double t4740;
  double t4742;
  double t4785;
  double t4788;
  double t4801;
  double t4804;
  double t4837;
  double t4839;
  double t4865;
  double t4866;
  double t5161;
  double t5164;
  double t5180;
  double t5182;
  double t5210;
  double t5211;
  double t5219;
  double t5221;
  double t5272;
  double t5277;
  double t5287;
  double t5293;
  double t5573;
  double t5579;
  double t5580;
  double t5584;
  double t5586;
  double t5587;
  double t5308;
  double t5311;
  double t5337;
  double t5338;
  double t5613;
  double t5618;
  double t5619;
  double t5351;
  double t5357;
  double t5383;
  double t5384;
  double t5655;
  double t5660;
  double t5669;
  double t5732;
  double t5734;
  double t5739;
  double t5414;
  double t5415;
  double t5426;
  double t5428;
  double t5768;
  double t5773;
  double t5781;
  double t6082;
  double t6084;
  double t6096;
  double t6113;
  double t6114;
  double t6115;
  double t6130;
  double t6133;
  double t6145;
  double t6178;
  double t6185;
  double t6193;
  double t6228;
  double t6231;
  double t6233;
  double t6260;
  double t6265;
  double t6266;
  double t6532;
  double t6534;
  double t6535;
  double t6536;
  double t6545;
  double t6546;
  double t6547;
  double t6554;
  double t6572;
  double t6583;
  double t6584;
  double t6586;
  double t6590;
  double t6591;
  double t6592;
  double t6597;
  double t6599;
  double t6601;
  double t6602;
  double t6603;
  double t6605;
  double t6606;
  double t6632;
  double t6635;
  double t6637;
  double t6638;
  double t6662;
  double t6669;
  double t6674;
  double t6678;
  double t6691;
  double t6699;
  double t6703;
  double t6716;
  double t6725;
  double t6731;
  double t6737;
  double t6739;
  double t6743;
  double t6747;
  double t6749;
  double t6752;
  double t6754;
  double t6758;
  double t6798;
  double t6799;
  double t6802;
  double t6804;
  double t6805;
  double t6806;
  double t6808;
  double t6810;
  double t6817;
  double t6822;
  double t6824;
  double t6827;
  double t6828;
  double t6832;
  double t6834;
  double t6838;
  double t6859;
  double t6862;
  double t6871;
  double t6872;
  double t6873;
  double t6877;
  t241 = Cos(var1[17]);
  t250 = -1.*t241;
  t267 = 1. + t250;
  t119 = Cos(var1[16]);
  t154 = -1.*t119;
  t176 = 1. + t154;
  t332 = Sin(var1[17]);
  t202 = Sin(var1[16]);
  t336 = 4.e-6*t332;
  t291 = 1.000000000016*t267;
  t319 = -7.e-6*t267;
  t353 = t319 + t336;
  t376 = -7.e-6*t353;
  t378 = -1. + t291 + t376;
  t715 = 4.e-6*t176;
  t562 = 2.8e-11*t267;
  t613 = 4.e-6*t267;
  t614 = 7.e-6*t332;
  t632 = t613 + t614;
  t637 = -7.e-6*t632;
  t649 = -1.*t332;
  t651 = t562 + t637 + t649;
  t770 = -6.5e-11*t267;
  t788 = 1. + t770;
  t808 = -7.e-6*t788;
  t862 = 7.e-6*t267;
  t882 = t808 + t862 + t336;
  t183 = -2.8e-11*t176;
  t1034 = -7.e-6*t176;
  t1197 = Cos(var1[15]);
  t1037 = -4.e-6*t202;
  t1047 = t1034 + t1037;
  t1058 = t1047*t378;
  t1073 = -7.e-6*t202;
  t1096 = t715 + t1073;
  t1097 = t1096*t651;
  t1145 = -6.5e-11*t176;
  t1151 = 1. + t1145;
  t1170 = t1151*t882;
  t1191 = t1058 + t1097 + t1170;
  t1026 = Sin(var1[15]);
  t1198 = -1.000000000016*t176;
  t1207 = 1. + t1198;
  t1214 = t1207*t378;
  t1272 = -1.*t202;
  t1296 = t183 + t1272;
  t1304 = t1296*t651;
  t1308 = 4.e-6*t202;
  t1312 = t1034 + t1308;
  t1325 = t1312*t882;
  t1329 = t1214 + t1304 + t1325;
  t101 = Cos(var1[4]);
  t427 = -1.000000000049*t176;
  t521 = 1. + t427;
  t726 = 7.e-6*t202;
  t749 = t715 + t726;
  t209 = t183 + t202;
  t1024 = Sin(var1[4]);
  t1025 = Cos(var1[5]);
  t1388 = 1.000000000049*t267;
  t1409 = 4.e-6*t632;
  t1411 = -1. + t1388 + t1409;
  t1422 = 4.e-6*t788;
  t1428 = -1. + t241;
  t1430 = 4.e-6*t1428;
  t1431 = t1422 + t1430 + t614;
  t1444 = 4.e-6*t353;
  t1447 = t562 + t1444 + t332;
  t1465 = t1296*t1411;
  t1472 = t1312*t1431;
  t1477 = t1207*t1447;
  t1481 = t1465 + t1472 + t1477;
  t1514 = t1096*t1411;
  t1518 = t1151*t1431;
  t1524 = t1047*t1447;
  t1528 = t1514 + t1518 + t1524;
  t1367 = Sin(var1[5]);
  t1657 = -4.e-6*t332;
  t1653 = 6.5e-11*t267;
  t1667 = t319 + t1657;
  t1685 = 7.e-6*t1667;
  t1691 = t1430 + t614;
  t1704 = 4.e-6*t1691;
  t1713 = -1. + t1653 + t1685 + t1704;
  t1722 = -1. + t1388;
  t1732 = 4.e-6*t1722;
  t1736 = -7.e-6*t332;
  t1748 = -2.8e-11*t267;
  t1752 = t1748 + t332;
  t1758 = 7.e-6*t1752;
  t1762 = t1732 + t1430 + t1736 + t1758;
  t1770 = -1.000000000016*t267;
  t1773 = 1. + t1770;
  t1776 = 7.e-6*t1773;
  t1782 = t562 + t332;
  t1783 = 4.e-6*t1782;
  t1787 = t1776 + t862 + t1657 + t1783;
  t1821 = t1312*t1713;
  t1829 = t1296*t1762;
  t1836 = t1207*t1787;
  t1841 = t1821 + t1829 + t1836;
  t1846 = t1151*t1713;
  t1852 = t1096*t1762;
  t1854 = t1047*t1787;
  t1868 = t1846 + t1852 + t1854;
  t1345 = t1197*t1191;
  t1350 = t1026*t1329;
  t1360 = t1345 + t1350;
  t1195 = -1.*t1026*t1191;
  t1334 = t1197*t1329;
  t1335 = t1195 + t1334;
  t1581 = t1026*t1481;
  t1590 = t1197*t1528;
  t1603 = t1581 + t1590;
  t1484 = t1197*t1481;
  t1529 = -1.*t1026*t1528;
  t1535 = t1484 + t1529;
  t1895 = t1026*t1841;
  t1908 = t1197*t1868;
  t1911 = t1895 + t1908;
  t1844 = t1197*t1841;
  t1888 = -1.*t1026*t1868;
  t1890 = t1844 + t1888;
  t1954 = -1.*t1335*t1367;
  t1967 = -1.*t1535*t1367;
  t1995 = -1.*t1890*t1367;
  t2088 = -2.8e-11*t202;
  t2136 = -1.000000000016*t202*t378;
  t2143 = t154 + t2088;
  t2147 = t2143*t651;
  t2148 = 4.e-6*t119;
  t2149 = t2148 + t1073;
  t2151 = t2149*t882;
  t2153 = t2136 + t2147 + t2151;
  t2159 = -4.e-6*t119;
  t2162 = t2159 + t1073;
  t2164 = t2162*t378;
  t2178 = -7.e-6*t119;
  t2189 = t2178 + t1308;
  t2201 = t2189*t651;
  t2207 = -6.5e-11*t202*t882;
  t2214 = t2164 + t2201 + t2207;
  t2104 = 7.e-6*t119;
  t2110 = t2104 + t1308;
  t2096 = t119 + t2088;
  t2258 = t2189*t1411;
  t2260 = -6.5e-11*t202*t1431;
  t2269 = t2162*t1447;
  t2270 = t2258 + t2260 + t2269;
  t2284 = t2143*t1411;
  t2285 = t2149*t1431;
  t2288 = -1.000000000016*t202*t1447;
  t2289 = t2284 + t2285 + t2288;
  t2340 = -6.5e-11*t202*t1713;
  t2343 = t2189*t1762;
  t2349 = t2162*t1787;
  t2350 = t2340 + t2343 + t2349;
  t2355 = t2149*t1713;
  t2356 = t2143*t1762;
  t2359 = -1.000000000016*t202*t1787;
  t2360 = t2355 + t2356 + t2359;
  t2403 = -4.e-6*t241;
  t2405 = 2.8e-11*t332;
  t2406 = t241 + t2405;
  t2411 = 4.e-6*t2406;
  t2413 = -1.12e-16*t332;
  t2414 = t2403 + t2411 + t2413;
  t2416 = -7.e-6*t241;
  t2417 = -2.8e-11*t332;
  t2423 = t241 + t2417;
  t2424 = 7.e-6*t2423;
  t2430 = 1.96e-16*t332;
  t2438 = t2416 + t2424 + t2430;
  t2443 = t2403 + t1736;
  t2447 = 7.e-6*t2443;
  t2448 = 7.e-6*t241;
  t2450 = t2448 + t1657;
  t2451 = 4.e-6*t2450;
  t2452 = 6.5e-11*t332;
  t2455 = t2447 + t2451 + t2452;
  t2460 = t1047*t2414;
  t2462 = t1096*t2438;
  t2463 = t1151*t2455;
  t2465 = t2460 + t2462 + t2463;
  t2471 = t1207*t2414;
  t2473 = t1296*t2438;
  t2475 = t1312*t2455;
  t2476 = t2471 + t2473 + t2475;
  t2512 = 4.e-6*t241;
  t2504 = t2448 + t336;
  t2505 = -7.e-6*t2504;
  t2506 = t250 + t2505 + t2405;
  t2513 = 7.000000000455e-6*t332;
  t2514 = t2512 + t2513;
  t2525 = t2512 + t1736;
  t2529 = -7.e-6*t2525;
  t2533 = 1.000000000016*t332;
  t2537 = t2529 + t2533;
  t2544 = t1296*t2506;
  t2545 = t1312*t2514;
  t2550 = t1207*t2537;
  t2552 = t2544 + t2545 + t2550;
  t2556 = t1096*t2506;
  t2559 = t1151*t2514;
  t2560 = t1047*t2537;
  t2564 = t2556 + t2559 + t2560;
  t2592 = -4.00000000026e-6*t332;
  t2594 = t2448 + t2592;
  t2598 = 4.e-6*t2525;
  t2599 = t241 + t2598 + t2405;
  t2603 = 4.e-6*t2504;
  t2604 = 1.000000000049*t332;
  t2606 = t2603 + t2604;
  t2613 = t1312*t2594;
  t2615 = t1207*t2599;
  t2616 = t1296*t2606;
  t2618 = t2613 + t2615 + t2616;
  t2624 = t1151*t2594;
  t2625 = t1047*t2599;
  t2628 = t1096*t2606;
  t2629 = t2624 + t2625 + t2628;
  t405 = t209*t378;
  t667 = t521*t651;
  t993 = t749*t882;
  t1006 = t405 + t667 + t993;
  t1336 = t1025*t1335;
  t1368 = -1.*t1360*t1367;
  t1375 = t1336 + t1368;
  t1413 = t521*t1411;
  t1438 = t749*t1431;
  t1449 = t209*t1447;
  t1450 = t1413 + t1438 + t1449;
  t1542 = t1025*t1535;
  t1606 = -1.*t1603*t1367;
  t1619 = t1542 + t1606;
  t1716 = t749*t1713;
  t1765 = t521*t1762;
  t1797 = t209*t1787;
  t1813 = t1716 + t1765 + t1797;
  t1894 = t1025*t1890;
  t1914 = -1.*t1911*t1367;
  t1918 = t1894 + t1914;
  t1016 = t101*t1006;
  t1377 = -1.*t1024*t1375;
  t1385 = t1016 + t1377;
  t2819 = Sin(var1[3]);
  t2847 = Cos(var1[3]);
  t1464 = t101*t1450;
  t1629 = -1.*t1024*t1619;
  t1636 = t1464 + t1629;
  t1820 = t101*t1813;
  t1921 = -1.*t1024*t1918;
  t1932 = t1820 + t1921;
  t1945 = -1.*t1025*t1360;
  t1958 = t1945 + t1954;
  t1966 = -1.*t1025*t1603;
  t1984 = t1966 + t1967;
  t1989 = -1.*t1025*t1911;
  t2002 = t1989 + t1995;
  t2016 = -1.*t1197*t1191;
  t2028 = -1.*t1026*t1329;
  t2037 = t2016 + t2028;
  t2038 = t1025*t2037;
  t2039 = t2038 + t1954;
  t2045 = -1.*t1026*t1481;
  t2052 = -1.*t1197*t1528;
  t2059 = t2045 + t2052;
  t2062 = t1025*t2059;
  t2070 = t2062 + t1967;
  t2072 = -1.*t1026*t1841;
  t2074 = -1.*t1197*t1868;
  t2076 = t2072 + t2074;
  t2081 = t1025*t2076;
  t2084 = t2081 + t1995;
  t2221 = t1026*t2153;
  t2227 = t1197*t2214;
  t2231 = t2221 + t2227;
  t2157 = t1197*t2153;
  t2216 = -1.*t1026*t2214;
  t2218 = t2157 + t2216;
  t2097 = t2096*t378;
  t2101 = -1.000000000049*t202*t651;
  t2113 = t2110*t882;
  t2122 = t2097 + t2101 + t2113;
  t2219 = t1025*t2218;
  t2233 = -1.*t2231*t1367;
  t2235 = t2219 + t2233;
  t2297 = t1197*t2270;
  t2301 = t1026*t2289;
  t2303 = t2297 + t2301;
  t2280 = -1.*t1026*t2270;
  t2290 = t1197*t2289;
  t2291 = t2280 + t2290;
  t2244 = -1.000000000049*t202*t1411;
  t2246 = t2110*t1431;
  t2250 = t2096*t1447;
  t2251 = t2244 + t2246 + t2250;
  t2296 = t1025*t2291;
  t2312 = -1.*t2303*t1367;
  t2313 = t2296 + t2312;
  t2381 = t1197*t2350;
  t2382 = t1026*t2360;
  t2386 = t2381 + t2382;
  t2353 = -1.*t1026*t2350;
  t2378 = t1197*t2360;
  t2379 = t2353 + t2378;
  t2324 = t2110*t1713;
  t2326 = -1.000000000049*t202*t1762;
  t2327 = t2096*t1787;
  t2332 = t2324 + t2326 + t2327;
  t2380 = t1025*t2379;
  t2388 = -1.*t2386*t1367;
  t2393 = t2380 + t2388;
  t2483 = t1197*t2465;
  t2485 = t1026*t2476;
  t2490 = t2483 + t2485;
  t2468 = -1.*t1026*t2465;
  t2479 = t1197*t2476;
  t2480 = t2468 + t2479;
  t2415 = t209*t2414;
  t2439 = t521*t2438;
  t2456 = t749*t2455;
  t2457 = t2415 + t2439 + t2456;
  t2481 = t1025*t2480;
  t2494 = -1.*t2490*t1367;
  t2496 = t2481 + t2494;
  t2573 = t1026*t2552;
  t2578 = t1197*t2564;
  t2579 = t2573 + t2578;
  t2554 = t1197*t2552;
  t2565 = -1.*t1026*t2564;
  t2567 = t2554 + t2565;
  t2509 = t521*t2506;
  t2522 = t749*t2514;
  t2538 = t209*t2537;
  t2539 = t2509 + t2522 + t2538;
  t2569 = t1025*t2567;
  t2584 = -1.*t2579*t1367;
  t2585 = t2569 + t2584;
  t2663 = t1026*t2618;
  t2669 = t1197*t2629;
  t2686 = t2663 + t2669;
  t2619 = t1197*t2618;
  t2631 = -1.*t1026*t2629;
  t2645 = t2619 + t2631;
  t2595 = t749*t2594;
  t2602 = t209*t2599;
  t2608 = t521*t2606;
  t2609 = t2595 + t2602 + t2608;
  t2653 = t1025*t2645;
  t2707 = -1.*t2686*t1367;
  t2714 = t2653 + t2707;
  t2835 = t1025*t1360;
  t2843 = t1335*t1367;
  t2844 = t2835 + t2843;
  t2862 = t1025*t1603;
  t2864 = t1535*t1367;
  t2866 = t2862 + t2864;
  t2882 = t1025*t1911;
  t2884 = t1890*t1367;
  t2886 = t2882 + t2884;
  t3201 = t2847*t2844;
  t3203 = -1.*t2819*t1385;
  t3205 = t3201 + t3203;
  t3207 = t2847*t2866;
  t3220 = -1.*t2819*t1636;
  t3221 = t3207 + t3220;
  t3222 = t2847*t2886;
  t3224 = -1.*t2819*t1932;
  t3225 = t3222 + t3224;
  t2906 = -1.*t1006*t1024;
  t2909 = -1.*t101*t1375;
  t2910 = t2906 + t2909;
  t2913 = -1.*t1450*t1024;
  t2914 = -1.*t101*t1619;
  t2915 = t2913 + t2914;
  t2919 = -1.*t1813*t1024;
  t2925 = -1.*t101*t1918;
  t2926 = t2919 + t2925;
  t2972 = t2037*t1367;
  t2977 = t1336 + t2972;
  t2989 = t2059*t1367;
  t2990 = t1542 + t2989;
  t3001 = t2076*t1367;
  t3002 = t1894 + t3001;
  t3014 = t1025*t2231;
  t3020 = t2218*t1367;
  t3024 = t3014 + t3020;
  t3026 = t101*t2122;
  t3028 = -1.*t1024*t2235;
  t3031 = t3026 + t3028;
  t3049 = t1025*t2303;
  t3052 = t2291*t1367;
  t3054 = t3049 + t3052;
  t3056 = t101*t2251;
  t3060 = -1.*t1024*t2313;
  t3062 = t3056 + t3060;
  t3082 = t1025*t2386;
  t3087 = t2379*t1367;
  t3090 = t3082 + t3087;
  t3093 = t101*t2332;
  t3094 = -1.*t1024*t2393;
  t3095 = t3093 + t3094;
  t3108 = t1025*t2490;
  t3109 = t2480*t1367;
  t3110 = t3108 + t3109;
  t3112 = t101*t2457;
  t3117 = -1.*t1024*t2496;
  t3123 = t3112 + t3117;
  t3128 = t1025*t2579;
  t3129 = t2567*t1367;
  t3131 = t3128 + t3129;
  t3139 = t101*t2539;
  t3140 = -1.*t1024*t2585;
  t3143 = t3139 + t3140;
  t3157 = t1025*t2686;
  t3160 = t2645*t1367;
  t3161 = t3157 + t3160;
  t3164 = t101*t2609;
  t3172 = -1.*t1024*t2714;
  t3175 = t3164 + t3172;
  t2788 = t1450*t1024;
  t2789 = t101*t1619;
  t2802 = t2788 + t2789;
  t3426 = 2.8e-11*t176;
  t3440 = 2.826290000000002e-7*var1[17];
  t3449 = -0.148715*t788;
  t3452 = -2.18904205e-16*t267;
  t3453 = t613 + t1736;
  t3454 = -0.038576*t3453;
  t3457 = -0.80315*t1667;
  t3458 = t862 + t336;
  t3459 = -0.5031510000080001*t3458;
  t3464 = -0.038575000014*t1691;
  t3465 = t3440 + t3449 + t3452 + t3454 + t3457 + t3459 + t3464;
  t3470 = 1.1305160000000008e-12*var1[17];
  t3474 = -1.000000000049*t267;
  t3475 = 1. + t3474;
  t3477 = -0.038576*t3475;
  t3480 = -0.03857500001589017*t267;
  t3488 = t562 + t649;
  t3489 = -0.5031510000080001*t3488;
  t3490 = t1430 + t1736;
  t3504 = -3.367757e-6*t3490;
  t3505 = -0.148715*t632;
  t3506 = -0.80315*t1752;
  t3507 = t3470 + t3477 + t3480 + t3489 + t3504 + t3505 + t3506;
  t3512 = -1.9784030000000015e-12*var1[17];
  t3513 = -0.80315*t1773;
  t3516 = -0.5031510000160505*t267;
  t3521 = t1748 + t649;
  t3522 = -0.038576*t3521;
  t3530 = t862 + t1657;
  t3540 = -3.367757e-6*t3530;
  t3541 = -0.148715*t353;
  t3549 = -0.038575000014*t1782;
  t3550 = t3512 + t3513 + t3516 + t3522 + t3540 + t3541 + t3549;
  t3594 = 7.e-6*t176;
  t3432 = -1. + t119;
  t3434 = 4.e-6*t3432;
  t3565 = -1.*t1197;
  t3568 = 1. + t3565;
  t3573 = -0.15121*t3568;
  t3586 = -2.7726089999999997e-12*var1[16];
  t3587 = -0.2812110000084994*t176;
  t3598 = t3594 + t1037;
  t3600 = -1.8134809999999998e-6*t3598;
  t3605 = t3426 + t202;
  t3606 = -0.038749000006999997*t3605;
  t3607 = t1312*t3465;
  t3608 = t1296*t3507;
  t3616 = t1207*t3550;
  t3618 = t3586 + t3587 + t3600 + t3606 + t3607 + t3608 + t3616;
  t3627 = 3.9608699999999997e-7*var1[16];
  t3628 = -1.1787626499999999e-16*t176;
  t3629 = t3594 + t1308;
  t3633 = -0.281211000004*t3629;
  t3635 = t3434 + t726;
  t3638 = -0.038749000006999997*t3635;
  t3639 = t1151*t3465;
  t3640 = t1096*t3507;
  t3645 = t1047*t3550;
  t3649 = t3627 + t3628 + t3633 + t3638 + t3639 + t3640 + t3645;
  t3418 = 1.5843479999999999e-12*var1[16];
  t3420 = -0.03874900000889869*t176;
  t3430 = t3426 + t1272;
  t3431 = -0.281211000004*t3430;
  t3435 = t3434 + t1073;
  t3437 = -1.8134809999999998e-6*t3435;
  t3466 = t749*t3465;
  t3508 = t521*t3507;
  t3553 = t209*t3550;
  t3559 = t3418 + t3420 + t3431 + t3437 + t3466 + t3508 + t3553;
  t3581 = -0.15121*t1026;
  t3619 = t1197*t3618;
  t3659 = -1.*t1026*t3649;
  t3660 = t3573 + t3581 + t3619 + t3659;
  t3662 = t1025*t3660;
  t3663 = 0.15121*t1026;
  t3665 = t1026*t3618;
  t3668 = t1197*t3649;
  t3669 = t3573 + t3663 + t3665 + t3668;
  t3673 = -1.*t3669*t1367;
  t3691 = t3662 + t3673;
  t2774 = t1006*t1024;
  t2777 = t101*t1375;
  t2779 = t2774 + t2777;
  t3713 = t101*t3559;
  t3714 = -1.*t1024*t3691;
  t3718 = t3713 + t3714;
  t3700 = t3559*t1024;
  t3701 = t101*t3691;
  t3703 = t3700 + t3701;
  t3561 = -1.*t3559*t1024;
  t3693 = -1.*t101*t3691;
  t3695 = t3561 + t3693;
  t3727 = t1025*t3669;
  t3728 = t3660*t1367;
  t3730 = t3727 + t3728;
  t2809 = t1813*t1024;
  t2814 = t101*t1918;
  t2817 = t2809 + t2814;
  t3923 = -1.*t1025*t3669;
  t3926 = -1.*t3660*t1367;
  t3928 = t3923 + t3926;
  t3735 = -1.*t2844*t3730;
  t3739 = -1.*t2779*t3703;
  t3741 = -1.*t1385*t3718;
  t3742 = t3735 + t3739 + t3741;
  t3761 = t2866*t3730;
  t3764 = t2802*t3703;
  t3766 = t1636*t3718;
  t3767 = t3761 + t3764 + t3766;
  t3798 = t2844*t3730;
  t3799 = t2779*t3703;
  t3801 = t1385*t3718;
  t3805 = t3798 + t3799 + t3801;
  t3822 = -1.*t3730*t2886;
  t3823 = -1.*t3703*t2817;
  t3824 = -1.*t3718*t1932;
  t3833 = t3822 + t3823 + t3824;
  t3868 = -1.*t2866*t3730;
  t3871 = -1.*t2802*t3703;
  t3873 = -1.*t1636*t3718;
  t3875 = t3868 + t3871 + t3873;
  t3898 = t3730*t2886;
  t3900 = t3703*t2817;
  t3902 = t3718*t1932;
  t3903 = t3898 + t3900 + t3902;
  t4082 = -0.15121*t1197;
  t4086 = -1.*t1026*t3618;
  t4089 = -1.*t1197*t3649;
  t4090 = t4082 + t3581 + t4086 + t4089;
  t4077 = 0.15121*t1197;
  t4078 = t4077 + t3581 + t3619 + t3659;
  t4100 = t1025*t4090;
  t4103 = -1.*t4078*t1367;
  t4105 = t4100 + t4103;
  t4079 = t1025*t4078;
  t4093 = t4090*t1367;
  t4095 = t4079 + t4093;
  t2257 = t2251*t1024;
  t2317 = t101*t2313;
  t2318 = t2257 + t2317;
  t2135 = t2122*t1024;
  t2237 = t101*t2235;
  t2239 = t2135 + t2237;
  t4280 = t2104 + t1037;
  t4281 = -0.038749000006999997*t4280;
  t4283 = t2148 + t726;
  t4286 = -0.281211000004*t4283;
  t4288 = -1.1787626499999999e-16*t202;
  t4289 = -6.5e-11*t202*t3465;
  t4290 = t2189*t3507;
  t4291 = t2162*t3550;
  t4292 = 3.9608699999999997e-7 + t4281 + t4286 + t4288 + t4289 + t4290 + t4291;
  t4296 = 2.8e-11*t202;
  t4298 = t119 + t4296;
  t4299 = -0.038749000006999997*t4298;
  t4302 = t2159 + t726;
  t4304 = -1.8134809999999998e-6*t4302;
  t4305 = -0.2812110000084994*t202;
  t4309 = t2149*t3465;
  t4312 = t2143*t3507;
  t4313 = -1.000000000016*t202*t3550;
  t4317 = -2.7726089999999997e-12 + t4299 + t4304 + t4305 + t4309 + t4312 + t4313;
  t4324 = -1.*t1026*t4292;
  t4325 = t1197*t4317;
  t4330 = t4324 + t4325;
  t4294 = t1197*t4292;
  t4319 = t1026*t4317;
  t4322 = t4294 + t4319;
  t4347 = t2178 + t1037;
  t4355 = -1.8134809999999998e-6*t4347;
  t4363 = t154 + t4296;
  t4371 = -0.281211000004*t4363;
  t4377 = -0.03874900000889869*t202;
  t4379 = t2110*t3465;
  t4382 = -1.000000000049*t202*t3507;
  t4385 = t2096*t3550;
  t4386 = 1.5843479999999999e-12 + t4355 + t4371 + t4377 + t4379 + t4382 + t4385;
  t4388 = t1025*t4330;
  t4391 = -1.*t4322*t1367;
  t4392 = t4388 + t4391;
  t4323 = t1025*t4322;
  t4332 = t4330*t1367;
  t4333 = t4323 + t4332;
  t4387 = t4386*t1024;
  t4394 = t101*t4392;
  t4399 = t4387 + t4394;
  t4405 = t101*t4386;
  t4406 = -1.*t1024*t4392;
  t4407 = t4405 + t4406;
  t2334 = t2332*t1024;
  t2394 = t101*t2393;
  t2395 = t2334 + t2394;
  t2611 = t2609*t1024;
  t2740 = t101*t2714;
  t2757 = t2611 + t2740;
  t2541 = t2539*t1024;
  t2586 = t101*t2585;
  t2589 = t2541 + t2586;
  t4559 = -0.80315*t2443;
  t4560 = -0.038575000014*t2450;
  t4564 = t2416 + t336;
  t4567 = -0.038576*t4564;
  t4569 = t2512 + t614;
  t4571 = -0.5031510000080001*t4569;
  t4572 = 9.666256095795e-12*t332;
  t4573 = 2.826290000000002e-7 + t4559 + t4560 + t4567 + t4571 + t4572;
  t4576 = t2416 + t1657;
  t4578 = -3.367757e-6*t4576;
  t4584 = -0.80315*t2423;
  t4585 = t250 + t2405;
  t4586 = -0.5031510000080001*t4585;
  t4588 = -0.148715*t2504;
  t4595 = 9.99986000053965e-7*t332;
  t4597 = 1.1305160000000008e-12 + t4578 + t4584 + t4586 + t4588 + t4595;
  t4603 = -0.148715*t2525;
  t4604 = t250 + t2417;
  t4613 = -0.038576*t4604;
  t4616 = -0.038575000014*t2406;
  t4626 = t2403 + t614;
  t4628 = -3.367757e-6*t4626;
  t4630 = 0.2999989999967999*t332;
  t4634 = -1.9784030000000015e-12 + t4603 + t4613 + t4616 + t4628 + t4630;
  t4574 = t1312*t4573;
  t4600 = t1296*t4597;
  t4639 = t1207*t4634;
  t4659 = t4574 + t4600 + t4639;
  t4664 = t1151*t4573;
  t4665 = t1096*t4597;
  t4666 = t1047*t4634;
  t4671 = t4664 + t4665 + t4666;
  t4676 = t1197*t4659;
  t4677 = -1.*t1026*t4671;
  t4678 = t4676 + t4677;
  t4662 = t1026*t4659;
  t4672 = t1197*t4671;
  t4673 = t4662 + t4672;
  t4691 = t749*t4573;
  t4693 = t521*t4597;
  t4695 = t209*t4634;
  t4697 = t4691 + t4693 + t4695;
  t4701 = t1025*t4678;
  t4704 = -1.*t4673*t1367;
  t4705 = t4701 + t4704;
  t4674 = t1025*t4673;
  t4679 = t4678*t1367;
  t4682 = t4674 + t4679;
  t4699 = t4697*t1024;
  t4707 = t101*t4705;
  t4708 = t4699 + t4707;
  t4710 = t101*t4697;
  t4715 = -1.*t1024*t4705;
  t4717 = t4710 + t4715;
  t2459 = t2457*t1024;
  t2497 = t101*t2496;
  t2499 = t2459 + t2497;
  t3919 = -1.*t2844*t3691;
  t3921 = -1.*t1375*t3730;
  t3944 = t2866*t3691;
  t3945 = t1619*t3730;
  t3976 = t2844*t3691;
  t3978 = t1375*t3730;
  t3997 = -1.*t3730*t1918;
  t3999 = -1.*t3691*t2886;
  t4029 = -1.*t2866*t3691;
  t4031 = -1.*t1619*t3730;
  t4044 = t3730*t1918;
  t4051 = t3691*t2886;
  t4941 = -1.*t1006*t3559;
  t4942 = -1.*t1375*t3691;
  t4943 = t4941 + t4942 + t3735;
  t4962 = t1450*t3559;
  t4966 = t1619*t3691;
  t4969 = t4962 + t4966 + t3761;
  t4096 = -1.*t2844*t4095;
  t4099 = -1.*t2977*t3730;
  t4118 = t2866*t4095;
  t4119 = t2990*t3730;
  t4975 = t1006*t3559;
  t4978 = t1375*t3691;
  t4980 = t4975 + t4978 + t3798;
  t4156 = t2844*t4095;
  t4165 = t2977*t3730;
  t4190 = -1.*t3730*t3002;
  t4192 = -1.*t4095*t2886;
  t5000 = -1.*t3559*t1813;
  t5001 = -1.*t3691*t1918;
  t5002 = t5000 + t5001 + t3822;
  t5018 = -1.*t1450*t3559;
  t5020 = -1.*t1619*t3691;
  t5021 = t5018 + t5020 + t3868;
  t4226 = -1.*t2866*t4095;
  t4228 = -1.*t2990*t3730;
  t4244 = t3730*t3002;
  t4248 = t4095*t2886;
  t5041 = t3559*t1813;
  t5050 = t3691*t1918;
  t5053 = t5041 + t5050 + t3898;
  t4276 = -1.*t3024*t3730;
  t4339 = -1.*t2844*t4333;
  t4416 = t3054*t3730;
  t4420 = t2866*t4333;
  t4436 = t3024*t3730;
  t4439 = t2844*t4333;
  t4454 = -1.*t4333*t2886;
  t4469 = -1.*t3730*t3090;
  t4491 = -1.*t3054*t3730;
  t4492 = -1.*t2866*t4333;
  t4526 = t4333*t2886;
  t4527 = t3730*t3090;
  t4687 = -1.*t2844*t4682;
  t4688 = -1.*t3131*t3730;
  t4740 = t4682*t2866;
  t4742 = t3161*t3730;
  t4785 = t2844*t4682;
  t4788 = t3131*t3730;
  t4801 = -1.*t3110*t3730;
  t4804 = -1.*t4682*t2886;
  t4837 = -1.*t4682*t2866;
  t4839 = -1.*t3161*t3730;
  t4865 = t3110*t3730;
  t4866 = t4682*t2886;
  t5161 = -1.*t1006*t4386;
  t5164 = -1.*t2122*t3559;
  t5180 = t1450*t4386;
  t5182 = t2251*t3559;
  t5210 = t1006*t4386;
  t5211 = t2122*t3559;
  t5219 = -1.*t3559*t2332;
  t5221 = -1.*t4386*t1813;
  t5272 = -1.*t1450*t4386;
  t5277 = -1.*t2251*t3559;
  t5287 = t3559*t2332;
  t5293 = t4386*t1813;
  t5573 = -1.*t1360*t3669;
  t5579 = -1.*t1335*t3660;
  t5580 = t4941 + t5573 + t5579;
  t5584 = t1603*t3669;
  t5586 = t1535*t3660;
  t5587 = t4962 + t5584 + t5586;
  t5308 = -1.*t1006*t4697;
  t5311 = -1.*t2539*t3559;
  t5337 = t4697*t1450;
  t5338 = t2609*t3559;
  t5613 = t1360*t3669;
  t5618 = t1335*t3660;
  t5619 = t4975 + t5613 + t5618;
  t5351 = t1006*t4697;
  t5357 = t2539*t3559;
  t5383 = -1.*t2457*t3559;
  t5384 = -1.*t4697*t1813;
  t5655 = -1.*t3669*t1911;
  t5660 = -1.*t3660*t1890;
  t5669 = t5000 + t5655 + t5660;
  t5732 = -1.*t1603*t3669;
  t5734 = -1.*t1535*t3660;
  t5739 = t5018 + t5732 + t5734;
  t5414 = -1.*t4697*t1450;
  t5415 = -1.*t2609*t3559;
  t5426 = t2457*t3559;
  t5428 = t4697*t1813;
  t5768 = t3669*t1911;
  t5773 = t3660*t1890;
  t5781 = t5041 + t5768 + t5773;
  t6082 = -1.*t1329*t3618;
  t6084 = -1.*t1191*t3649;
  t6096 = t6082 + t6084 + t4941;
  t6113 = t1481*t3618;
  t6114 = t1528*t3649;
  t6115 = t6113 + t6114 + t4962;
  t6130 = t1329*t3618;
  t6133 = t1191*t3649;
  t6145 = t6130 + t6133 + t4975;
  t6178 = -1.*t3618*t1841;
  t6185 = -1.*t3649*t1868;
  t6193 = t6178 + t6185 + t5000;
  t6228 = -1.*t1481*t3618;
  t6231 = -1.*t1528*t3649;
  t6233 = t6228 + t6231 + t5018;
  t6260 = t3618*t1841;
  t6265 = t3649*t1868;
  t6266 = t6260 + t6265 + t5041;
  t6532 = -1.*t3465*t882;
  t6534 = -1.*t651*t3507;
  t6535 = -1.*t378*t3550;
  t6536 = t6532 + t6534 + t6535;
  t6545 = t3465*t2594;
  t6546 = t1411*t4597;
  t6547 = t4573*t1431;
  t6554 = t4634*t1447;
  t6572 = t2606*t3507;
  t6583 = t2599*t3550;
  t6584 = t6545 + t6546 + t6547 + t6554 + t6572 + t6583;
  t6586 = t3465*t1431;
  t6590 = t1411*t3507;
  t6591 = t1447*t3550;
  t6592 = t6586 + t6590 + t6591;
  t6597 = -1.*t651*t4597;
  t6599 = -1.*t4573*t882;
  t6601 = -1.*t3465*t2514;
  t6602 = -1.*t378*t4634;
  t6603 = -1.*t2506*t3507;
  t6605 = -1.*t2537*t3550;
  t6606 = t6597 + t6599 + t6601 + t6602 + t6603 + t6605;
  t6632 = t3465*t882;
  t6635 = t651*t3507;
  t6637 = t378*t3550;
  t6638 = t6632 + t6635 + t6637;
  t6662 = t651*t4597;
  t6669 = t4573*t882;
  t6674 = t3465*t2514;
  t6678 = t378*t4634;
  t6691 = t2506*t3507;
  t6699 = t2537*t3550;
  t6703 = t6662 + t6669 + t6674 + t6678 + t6691 + t6699;
  t6716 = -1.*t1713*t4573;
  t6725 = -1.*t3465*t2455;
  t6731 = -1.*t2438*t3507;
  t6737 = -1.*t4597*t1762;
  t6739 = -1.*t2414*t3550;
  t6743 = -1.*t4634*t1787;
  t6747 = t6716 + t6725 + t6731 + t6737 + t6739 + t6743;
  t6749 = -1.*t3465*t1713;
  t6752 = -1.*t3507*t1762;
  t6754 = -1.*t3550*t1787;
  t6758 = t6749 + t6752 + t6754;
  t6798 = -1.*t3465*t2594;
  t6799 = -1.*t1411*t4597;
  t6802 = -1.*t4573*t1431;
  t6804 = -1.*t4634*t1447;
  t6805 = -1.*t2606*t3507;
  t6806 = -1.*t2599*t3550;
  t6808 = t6798 + t6799 + t6802 + t6804 + t6805 + t6806;
  t6810 = -1.*t3465*t1431;
  t6817 = -1.*t1411*t3507;
  t6822 = -1.*t1447*t3550;
  t6824 = t6810 + t6817 + t6822;
  t6827 = t1713*t4573;
  t6828 = t3465*t2455;
  t6832 = t2438*t3507;
  t6834 = t4597*t1762;
  t6838 = t2414*t3550;
  t6859 = t4634*t1787;
  t6862 = t6827 + t6828 + t6832 + t6834 + t6838 + t6859;
  t6871 = t3465*t1713;
  t6872 = t3507*t1762;
  t6873 = t3550*t1787;
  t6877 = t6871 + t6872 + t6873;
  p_output1[0]=t1385*var2[0] + t1636*var2[1] + t1932*var2[2];
  p_output1[1]=t101*t1958*var2[0] + t101*t1984*var2[1] + t101*t2002*var2[2];
  p_output1[2]=t101*t2039*var2[0] + t101*t2070*var2[1] + t101*t2084*var2[2];
  p_output1[3]=t2239*var2[0] + t2318*var2[1] + t2395*var2[2];
  p_output1[4]=t2589*var2[0] + t2757*var2[1] + t2499*var2[2];
  p_output1[5]=t2779;
  p_output1[6]=t2802;
  p_output1[7]=t2817;
  p_output1[8]=(-1.*t2819*t2844 - 1.*t1385*t2847)*var2[0] + (-1.*t1636*t2847 - 1.*t2819*t2866)*var2[1] + (-1.*t1932*t2847 - 1.*t2819*t2886)*var2[2];
  p_output1[9]=-1.*t2819*t2910*var2[0] - 1.*t2819*t2915*var2[1] - 1.*t2819*t2926*var2[2];
  p_output1[10]=(t1024*t1958*t2819 + t1375*t2847)*var2[0] + (t1024*t1984*t2819 + t1619*t2847)*var2[1] + (t1024*t2002*t2819 + t1918*t2847)*var2[2];
  p_output1[11]=(t1024*t2039*t2819 + t2847*t2977)*var2[0] + (t1024*t2070*t2819 + t2847*t2990)*var2[1] + (t1024*t2084*t2819 + t2847*t3002)*var2[2];
  p_output1[12]=(t2847*t3024 - 1.*t2819*t3031)*var2[0] + (t2847*t3054 - 1.*t2819*t3062)*var2[1] + (t2847*t3090 - 1.*t2819*t3095)*var2[2];
  p_output1[13]=(t2847*t3131 - 1.*t2819*t3143)*var2[0] + (t2847*t3161 - 1.*t2819*t3175)*var2[1] + (t2847*t3110 - 1.*t2819*t3123)*var2[2];
  p_output1[14]=t3205;
  p_output1[15]=t3221;
  p_output1[16]=t3225;
  p_output1[17]=t3205*var2[0] + t3221*var2[1] + t3225*var2[2];
  p_output1[18]=t2847*t2910*var2[0] + t2847*t2915*var2[1] + t2847*t2926*var2[2];
  p_output1[19]=(t1375*t2819 - 1.*t1024*t1958*t2847)*var2[0] + (t1619*t2819 - 1.*t1024*t1984*t2847)*var2[1] + (t1918*t2819 - 1.*t1024*t2002*t2847)*var2[2];
  p_output1[20]=(-1.*t1024*t2039*t2847 + t2819*t2977)*var2[0] + (-1.*t1024*t2070*t2847 + t2819*t2990)*var2[1] + (-1.*t1024*t2084*t2847 + t2819*t3002)*var2[2];
  p_output1[21]=(t2819*t3024 + t2847*t3031)*var2[0] + (t2819*t3054 + t2847*t3062)*var2[1] + (t2819*t3090 + t2847*t3095)*var2[2];
  p_output1[22]=(t2819*t3131 + t2847*t3143)*var2[0] + (t2819*t3161 + t2847*t3175)*var2[1] + (t2819*t3110 + t2847*t3123)*var2[2];
  p_output1[23]=t2819*t2844 + t1385*t2847;
  p_output1[24]=t1636*t2847 + t2819*t2866;
  p_output1[25]=t1932*t2847 + t2819*t2886;
  p_output1[26]=(t2817*(-1.*t1636*t3695 - 1.*t1636*t3703 - 1.*t2802*t3718 - 1.*t2915*t3718) + t2802*(t1932*t3695 + t1932*t3703 + t2817*t3718 + t2926*t3718) + t1932*t3875 + t1636*t3903)*var2[0] + (t2817*(t1385*t3695 + t1385*t3703 + t2779*t3718 + t2910*t3718) + t2779*(-1.*t1932*t3695 - 1.*t1932*t3703 - 1.*t2817*t3718 - 1.*t2926*t3718) + t1932*t3805 + t1385*t3833)*var2[1] + (t2802*(-1.*t1385*t3695 - 1.*t1385*t3703 - 1.*t2779*t3718 - 1.*t2910*t3718) + t2779*(t1636*t3695 + t1636*t3703 + t2802*t3718 + t2915*t3718) + t1636*t3742 + t1385*t3767)*var2[2];
  p_output1[27]=(t101*t2002*t3875 + t101*t1984*t3903 + t2817*(-1.*t101*t1984*t3703 + t1024*t1984*t3718 + t1024*t1636*t3928 - 1.*t101*t2802*t3928 + t4029 + t4031) + t2802*(t101*t2002*t3703 - 1.*t1024*t2002*t3718 - 1.*t1024*t1932*t3928 + t101*t2817*t3928 + t4044 + t4051))*var2[0] + (t101*t2002*t3805 + t101*t1958*t3833 + t2817*(t101*t1958*t3703 - 1.*t1024*t1958*t3718 - 1.*t1024*t1385*t3928 + t101*t2779*t3928 + t3976 + t3978) + t2779*(-1.*t101*t2002*t3703 + t1024*t2002*t3718 + t1024*t1932*t3928 - 1.*t101*t2817*t3928 + t3997 + t3999))*var2[1] + (t101*t1984*t3742 + t101*t1958*t3767 + t2802*(-1.*t101*t1958*t3703 + t1024*t1958*t3718 + t3919 + t3921 + t1024*t1385*t3928 - 1.*t101*t2779*t3928) + t2779*(t101*t1984*t3703 - 1.*t1024*t1984*t3718 - 1.*t1024*t1636*t3928 + t101*t2802*t3928 + t3944 + t3945))*var2[2];
  p_output1[28]=(t101*t2084*t3875 + t101*t2070*t3903 + t2817*(-1.*t101*t2070*t3703 + t1024*t2070*t3718 + t1024*t1636*t4105 - 1.*t101*t2802*t4105 + t4226 + t4228) + t2802*(t101*t2084*t3703 - 1.*t1024*t2084*t3718 - 1.*t1024*t1932*t4105 + t101*t2817*t4105 + t4244 + t4248))*var2[0] + (t101*t2084*t3805 + t101*t2039*t3833 + t2817*(t101*t2039*t3703 - 1.*t1024*t2039*t3718 - 1.*t1024*t1385*t4105 + t101*t2779*t4105 + t4156 + t4165) + t2779*(-1.*t101*t2084*t3703 + t1024*t2084*t3718 + t1024*t1932*t4105 - 1.*t101*t2817*t4105 + t4190 + t4192))*var2[1] + (t101*t2070*t3742 + t101*t2039*t3767 + t2802*(-1.*t101*t2039*t3703 + t1024*t2039*t3718 + t4096 + t4099 + t1024*t1385*t4105 - 1.*t101*t2779*t4105) + t2779*(t101*t2070*t3703 - 1.*t1024*t2070*t3718 - 1.*t1024*t1636*t4105 + t101*t2802*t4105 + t4118 + t4119))*var2[2];
  p_output1[29]=(t2395*t3875 + t2318*t3903 + t2817*(-1.*t2318*t3703 - 1.*t3062*t3718 - 1.*t2802*t4399 - 1.*t1636*t4407 + t4491 + t4492) + t2802*(t2395*t3703 + t3095*t3718 + t2817*t4399 + t1932*t4407 + t4526 + t4527))*var2[0] + (t2395*t3805 + t2239*t3833 + t2817*(t2239*t3703 + t3031*t3718 + t2779*t4399 + t1385*t4407 + t4436 + t4439) + t2779*(-1.*t2395*t3703 - 1.*t3095*t3718 - 1.*t2817*t4399 - 1.*t1932*t4407 + t4454 + t4469))*var2[1] + (t2318*t3742 + t2239*t3767 + t2802*(-1.*t2239*t3703 - 1.*t3031*t3718 + t4276 + t4339 - 1.*t2779*t4399 - 1.*t1385*t4407) + t2779*(t2318*t3703 + t3062*t3718 + t2802*t4399 + t1636*t4407 + t4416 + t4420))*var2[2];
  p_output1[30]=(t2499*t3875 + t2757*t3903 + t2817*(-1.*t2757*t3703 - 1.*t3175*t3718 - 1.*t2802*t4708 - 1.*t1636*t4717 + t4837 + t4839) + t2802*(t2499*t3703 + t3123*t3718 + t2817*t4708 + t1932*t4717 + t4865 + t4866))*var2[0] + (t2499*t3805 + t2589*t3833 + t2817*(t2589*t3703 + t3143*t3718 + t2779*t4708 + t1385*t4717 + t4785 + t4788) + t2779*(-1.*t2499*t3703 - 1.*t3123*t3718 - 1.*t2817*t4708 - 1.*t1932*t4717 + t4801 + t4804))*var2[1] + (t2757*t3742 + t2589*t3767 + t2802*(-1.*t2589*t3703 - 1.*t3143*t3718 + t4687 + t4688 - 1.*t2779*t4708 - 1.*t1385*t4717) + t2779*(t2757*t3703 + t3175*t3718 + t2802*t4708 + t1636*t4717 + t4740 + t4742))*var2[2];
  p_output1[31]=t2817*t3875 + t2802*t3903;
  p_output1[32]=t2817*t3805 + t2779*t3833;
  p_output1[33]=t2802*t3742 + t2779*t3767;
  p_output1[34]=(t2886*(-1.*t1984*t3691 - 1.*t1619*t3928 + t4029 + t4031) + t2866*(t2002*t3691 + t1918*t3928 + t4044 + t4051) + t1918*t5021 + t1619*t5053)*var2[0] + (t2886*(t1958*t3691 + t1375*t3928 + t3976 + t3978) + t2844*(-1.*t2002*t3691 - 1.*t1918*t3928 + t3997 + t3999) + t1918*t4980 + t1375*t5002)*var2[1] + (t2866*(-1.*t1958*t3691 + t3919 + t3921 - 1.*t1375*t3928) + t2844*(t1984*t3691 + t1619*t3928 + t3944 + t3945) + t1619*t4943 + t1375*t4969)*var2[2];
  p_output1[35]=(t2886*(-1.*t2070*t3691 - 1.*t1619*t4105 + t4226 + t4228) + t2866*(t2084*t3691 + t1918*t4105 + t4244 + t4248) + t3002*t5021 + t2990*t5053)*var2[0] + (t2886*(t2039*t3691 + t1375*t4105 + t4156 + t4165) + t2844*(-1.*t2084*t3691 - 1.*t1918*t4105 + t4190 + t4192) + t3002*t4980 + t2977*t5002)*var2[1] + (t2866*(-1.*t2039*t3691 + t4096 + t4099 - 1.*t1375*t4105) + t2844*(t2070*t3691 + t1619*t4105 + t4118 + t4119) + t2990*t4943 + t2977*t4969)*var2[2];
  p_output1[36]=(t3090*t5021 + t3054*t5053 + t2886*(-1.*t2313*t3691 - 1.*t1619*t4392 + t4491 + t4492 + t5272 + t5277) + t2866*(t2393*t3691 + t1918*t4392 + t4526 + t4527 + t5287 + t5293))*var2[0] + (t3090*t4980 + t3024*t5002 + t2886*(t2235*t3691 + t1375*t4392 + t4436 + t4439 + t5210 + t5211) + t2844*(-1.*t2393*t3691 - 1.*t1918*t4392 + t4454 + t4469 + t5219 + t5221))*var2[1] + (t3054*t4943 + t3024*t4969 + t2866*(-1.*t2235*t3691 + t4276 + t4339 - 1.*t1375*t4392 + t5161 + t5164) + t2844*(t2313*t3691 + t1619*t4392 + t4416 + t4420 + t5180 + t5182))*var2[2];
  p_output1[37]=(t3110*t5021 + t3161*t5053 + t2886*(-1.*t2714*t3691 - 1.*t1619*t4705 + t4837 + t4839 + t5414 + t5415) + t2866*(t2496*t3691 + t1918*t4705 + t4865 + t4866 + t5426 + t5428))*var2[0] + (t3110*t4980 + t3131*t5002 + t2886*(t2585*t3691 + t1375*t4705 + t4785 + t4788 + t5351 + t5357) + t2844*(-1.*t2496*t3691 - 1.*t1918*t4705 + t4801 + t4804 + t5383 + t5384))*var2[1] + (t3161*t4943 + t3131*t4969 + t2866*(-1.*t2585*t3691 + t4687 + t4688 - 1.*t1375*t4705 + t5308 + t5311) + t2844*(t2714*t3691 + t1619*t4705 + t4740 + t4742 + t5337 + t5338))*var2[2];
  p_output1[38]=t2886*t5021 + t2866*t5053;
  p_output1[39]=t2886*t4980 + t2844*t5002;
  p_output1[40]=t2866*t4943 + t2844*t4969;
  p_output1[41]=(t1813*(-1.*t2059*t3660 - 1.*t1535*t3669 - 1.*t1603*t4078 - 1.*t1535*t4090) + t1450*(t2076*t3660 + t1890*t3669 + t1911*t4078 + t1890*t4090))*var2[0] + (t1813*(t2037*t3660 + t1335*t3669 + t1360*t4078 + t1335*t4090) + t1006*(-1.*t2076*t3660 - 1.*t1890*t3669 - 1.*t1911*t4078 - 1.*t1890*t4090))*var2[1] + (t1450*(-1.*t2037*t3660 - 1.*t1335*t3669 - 1.*t1360*t4078 - 1.*t1335*t4090) + t1006*(t2059*t3660 + t1535*t3669 + t1603*t4078 + t1535*t4090))*var2[2];
  p_output1[42]=(t1813*(-1.*t2291*t3660 - 1.*t2303*t3669 - 1.*t1603*t4322 - 1.*t1535*t4330 + t5272 + t5277) + t1450*(t2379*t3660 + t2386*t3669 + t1911*t4322 + t1890*t4330 + t5287 + t5293) + t2332*t5739 + t2251*t5781)*var2[0] + (t1813*(t2218*t3660 + t2231*t3669 + t1360*t4322 + t1335*t4330 + t5210 + t5211) + t1006*(-1.*t2379*t3660 - 1.*t2386*t3669 - 1.*t1911*t4322 - 1.*t1890*t4330 + t5219 + t5221) + t2332*t5619 + t2122*t5669)*var2[1] + (t1450*(-1.*t2218*t3660 - 1.*t2231*t3669 - 1.*t1360*t4322 - 1.*t1335*t4330 + t5161 + t5164) + t1006*(t2291*t3660 + t2303*t3669 + t1603*t4322 + t1535*t4330 + t5180 + t5182) + t2251*t5580 + t2122*t5587)*var2[2];
  p_output1[43]=(t1813*(-1.*t2645*t3660 - 1.*t2686*t3669 - 1.*t1603*t4673 - 1.*t1535*t4678 + t5414 + t5415) + t1450*(t2480*t3660 + t2490*t3669 + t1911*t4673 + t1890*t4678 + t5426 + t5428) + t2457*t5739 + t2609*t5781)*var2[0] + (t1813*(t2567*t3660 + t2579*t3669 + t1360*t4673 + t1335*t4678 + t5351 + t5357) + t1006*(-1.*t2480*t3660 - 1.*t2490*t3669 - 1.*t1911*t4673 - 1.*t1890*t4678 + t5383 + t5384) + t2457*t5619 + t2539*t5669)*var2[1] + (t1450*(-1.*t2567*t3660 - 1.*t2579*t3669 - 1.*t1360*t4673 - 1.*t1335*t4678 + t5308 + t5311) + t1006*(t2645*t3660 + t2686*t3669 + t1603*t4673 + t1535*t4678 + t5337 + t5338) + t2609*t5580 + t2539*t5587)*var2[2];
  p_output1[44]=t1813*t5739 + t1450*t5781;
  p_output1[45]=t1813*t5619 + t1006*t5669;
  p_output1[46]=t1450*t5580 + t1006*t5587;
  p_output1[47]=(-0.15121*t2153 + 0.15121*t2214 + t1813*(-1.*t2289*t3618 - 1.*t2270*t3649 - 1.*t1528*t4292 - 1.*t1481*t4317 + t5272 + t5277) + t1450*(t2360*t3618 + t2350*t3649 + t1868*t4292 + t1841*t4317 + t5287 + t5293) + t2332*t6233 + t2251*t6266)*var2[0] + (0.15121*t2270 - 0.15121*t2289 + t1813*(t2153*t3618 + t2214*t3649 + t1191*t4292 + t1329*t4317 + t5210 + t5211) + t1006*(-1.*t2360*t3618 - 1.*t2350*t3649 - 1.*t1868*t4292 - 1.*t1841*t4317 + t5219 + t5221) + t2332*t6145 + t2122*t6193)*var2[1] + (0.15121*t2350 - 0.15121*t2360 + t1450*(-1.*t2153*t3618 - 1.*t2214*t3649 - 1.*t1191*t4292 - 1.*t1329*t4317 + t5161 + t5164) + t1006*(t2289*t3618 + t2270*t3649 + t1528*t4292 + t1481*t4317 + t5180 + t5182) + t2251*t6096 + t2122*t6115)*var2[2];
  p_output1[48]=(-0.15121*t2552 + 0.15121*t2564 + t1813*(-1.*t2618*t3618 - 1.*t2629*t3649 - 1.*t1481*t4659 - 1.*t1528*t4671 + t5414 + t5415) + t1450*(t2476*t3618 + t2465*t3649 + t1841*t4659 + t1868*t4671 + t5426 + t5428) + t2457*t6233 + t2609*t6266)*var2[0] + (-0.15121*t2618 + 0.15121*t2629 + t1813*(t2552*t3618 + t2564*t3649 + t1329*t4659 + t1191*t4671 + t5351 + t5357) + t1006*(-1.*t2476*t3618 - 1.*t2465*t3649 - 1.*t1841*t4659 - 1.*t1868*t4671 + t5383 + t5384) + t2457*t6145 + t2539*t6193)*var2[1] + (0.15121*t2465 - 0.15121*t2476 + t1450*(-1.*t2552*t3618 - 1.*t2564*t3649 - 1.*t1329*t4659 - 1.*t1191*t4671 + t5308 + t5311) + t1006*(t2618*t3618 + t2629*t3649 + t1481*t4659 + t1528*t4671 + t5337 + t5338) + t2609*t6096 + t2539*t6115)*var2[2];
  p_output1[49]=0.15121*t1191 - 0.15121*t1329 + t1813*t6233 + t1450*t6266;
  p_output1[50]=-0.15121*t1481 + 0.15121*t1528 + t1813*t6145 + t1006*t6193;
  p_output1[51]=-0.15121*t1841 + 0.15121*t1868 + t1450*t6096 + t1006*t6115;
  p_output1[52]=(0.281211*t2506 - 0.038749*t2537 + 1.e-6*(t2403 - 7.000000000455e-6*t332) - 1.*t1713*t6808 - 1.*t2455*t6824 - 1.*t1431*t6862 - 1.*t2594*t6877 + 7.e-6*(t1787*t6808 + t2414*t6824 + t1447*t6862 + t2599*t6877) + 4.e-6*(-1.*t1762*t6808 - 1.*t2438*t6824 - 1.*t1411*t6862 - 1.*t2606*t6877))*var2[0] + (-0.038749*t2599 + 0.281211*t2606 + 1.e-6*(t2416 + 4.00000000026e-6*t332) - 1.*t2455*t6638 - 1.*t1713*t6703 - 1.*t2514*t6758 + 4.e-6*(-1.*t2438*t6638 - 1.*t1762*t6703 - 1.*t651*t6747 - 1.*t2506*t6758) + 7.e-6*(t2414*t6638 + t1787*t6703 + t378*t6747 + t2537*t6758) - 1.*t6747*t882)*var2[1] + (-0.038749*t2414 + 0.281211*t2438 + 1.e-6*(-7.e-6*t2443 - 6.5e-11*t332 + 4.e-6*t4564) - 1.*t2594*t6536 - 1.*t2514*t6592 - 1.*t1431*t6606 + 4.e-6*(-1.*t2606*t6536 - 1.*t651*t6584 - 1.*t2506*t6592 - 1.*t1411*t6606) + 7.e-6*(t2599*t6536 + t378*t6584 + t2537*t6592 + t1447*t6606) - 1.*t6584*t882)*var2[2];
  p_output1[53]=-0.038749*t378 + 0.281211*t651 - 1.*t1713*t6824 - 1.*t1431*t6877 + 4.e-6*(-1.*t1762*t6824 - 1.*t1411*t6877) + 7.e-6*(t1787*t6824 + t1447*t6877) + 1.e-6*(t1657 + t319 + 7.e-6*t788);
  p_output1[54]=0.281211*t1411 - 0.038749*t1447 + 1.e-6*(4.e-6*(-1. + t1653) + t1736 + t613) - 1.*t1713*t6638 + 7.e-6*(t1787*t6638 + t378*t6758) + 4.e-6*(-1.*t1762*t6638 - 1.*t651*t6758) - 1.*t6758*t882;
  p_output1[55]=0.281211*t1762 - 0.038749*t1787 - 1.*t1431*t6536 + 7.e-6*(t1447*t6536 + t378*t6592) + 4.e-6*(-1.*t1411*t6536 - 1.*t651*t6592) + 1.e-6*(1. - 7.e-6*t1667 + 4.e-6*t3453 + t770) - 1.*t6592*t882;
  p_output1[56]=-4.051285074010787e-7;
  p_output1[57]=0.3000000410492048;
  p_output1[58]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRrFoot_vec_ParallelStance.hh"

namespace ParallelStance
{

void J_fRrFoot_vec_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
