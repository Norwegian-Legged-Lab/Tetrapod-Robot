/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:30:35 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t299;
  double t647;
  double t685;
  double t697;
  double t995;
  double t1021;
  double t354;
  double t1332;
  double t1811;
  double t1891;
  double t1912;
  double t1959;
  double t2321;
  double t2810;
  double t1561;
  double t1636;
  double t1754;
  double t2058;
  double t2115;
  double t2118;
  double t3118;
  double t3249;
  double t3423;
  double t3976;
  double t2849;
  double t2868;
  double t2897;
  double t2916;
  double t2928;
  double t2973;
  double t4678;
  double t4423;
  double t4536;
  double t4554;
  double t4617;
  double t4265;
  double t4272;
  double t4305;
  double t4308;
  double t4339;
  double t4349;
  double t4856;
  double t4902;
  double t4686;
  double t2119;
  double t2184;
  double t4648;
  double t4669;
  double t3001;
  double t4743;
  double t3975;
  double t4364;
  double t5052;
  double t5058;
  double t5063;
  double t5065;
  double t5066;
  double t2351;
  double t2431;
  double t2641;
  double t5078;
  double t5081;
  double t5090;
  double t5091;
  double t5094;
  double t5104;
  double t5107;
  double t5112;
  double t5123;
  double t5124;
  double t5125;
  double t1809;
  double t1951;
  double t1964;
  double t5148;
  double t5152;
  double t5154;
  double t5093;
  double t5119;
  double t5139;
  double t5142;
  double t5233;
  double t5234;
  double t5239;
  double t5240;
  double t5250;
  double t5210;
  double t5218;
  double t5221;
  double t5228;
  double t5156;
  double t5158;
  double t5162;
  double t5176;
  double t5245;
  double t5255;
  double t5281;
  double t5283;
  double t4963;
  double t4980;
  double t4993;
  double t4995;
  double t4996;
  double t5021;
  double t5032;
  double t5033;
  double t5045;
  double t5060;
  double t5072;
  double t5075;
  double t5147;
  double t5178;
  double t5186;
  double t5202;
  double t5206;
  double t5229;
  double t5232;
  double t5286;
  double t5287;
  double t5296;
  double t5301;
  double t5307;
  double t5310;
  double t5311;
  double t5312;
  double t5313;
  double t5314;
  double t5318;
  double t5321;
  double t5324;
  double t5325;
  double t5326;
  double t5339;
  double t5340;
  double t5343;
  double t5351;
  double t5358;
  double t5361;
  double t5364;
  double t5337;
  double t5344;
  double t5348;
  double t5368;
  double t5369;
  double t5387;
  double t5409;
  double t5416;
  double t5424;
  double t5465;
  double t5476;
  double t5490;
  double t5497;
  double t5521;
  double t5522;
  double t5524;
  double t5532;
  double t5535;
  double t5542;
  double t5546;
  double t5549;
  double t5557;
  double t5563;
  double t5569;
  double t5571;
  double t1158;
  double t1353;
  double t5620;
  double t5634;
  double t5654;
  double t5682;
  double t5683;
  double t5684;
  double t5576;
  double t5589;
  double t5608;
  double t5665;
  double t5670;
  double t5672;
  double t5674;
  double t5692;
  double t5695;
  double t5699;
  double t5701;
  double t5702;
  double t5703;
  double t5706;
  double t5712;
  double t5721;
  double t5724;
  double t5725;
  double t5726;
  double t5727;
  double t5731;
  double t5765;
  double t5767;
  double t5776;
  double t5778;
  double t5779;
  double t5788;
  double t5789;
  double t5791;
  double t5800;
  double t5802;
  double t5803;
  double t5810;
  double t5817;
  double t5828;
  double t5876;
  double t5882;
  double t5888;
  double t5866;
  double t5870;
  double t5874;
  double t5889;
  double t5897;
  double t5899;
  double t5917;
  double t5927;
  double t5931;
  double t5852;
  double t5853;
  double t5855;
  double t5875;
  double t5900;
  double t5901;
  double t5937;
  double t5968;
  double t5984;
  double t5987;
  double t5990;
  double t5992;
  double t5999;
  double t6000;
  double t6002;
  double t6073;
  double t6077;
  double t6081;
  double t6083;
  double t6084;
  double t6087;
  double t6144;
  double t6155;
  double t6156;
  double t6055;
  double t6066;
  double t6069;
  double t6041;
  double t6044;
  double t6052;
  double t6072;
  double t6122;
  double t6124;
  double t6163;
  double t6164;
  double t6168;
  double t6174;
  double t6184;
  double t6187;
  double t6191;
  double t6193;
  double t6195;
  double t6216;
  double t6219;
  double t6222;
  double t6224;
  double t6226;
  double t6227;
  double t6252;
  double t6257;
  double t6320;
  double t6321;
  double t6286;
  double t6287;
  double t6288;
  double t6303;
  double t6331;
  double t6332;
  double t6337;
  double t6309;
  double t6316;
  double t6317;
  double t6376;
  double t6379;
  double t6358;
  double t6359;
  double t6389;
  double t6390;
  double t6391;
  double t6381;
  double t6384;
  double t6386;
  double t6419;
  double t6421;
  double t6422;
  double t6380;
  double t6387;
  double t6362;
  double t6364;
  double t6365;
  double t6417;
  double t6433;
  double t6493;
  double t6495;
  double t6523;
  double t6524;
  double t6525;
  double t6539;
  double t6540;
  double t6522;
  double t6529;
  double t6519;
  double t6520;
  double t6538;
  double t6544;
  double t6603;
  double t6604;
  double t6605;
  double t6640;
  double t6641;
  double t6642;
  double t6810;
  double t6814;
  double t6821;
  double t6787;
  double t6788;
  double t6792;
  double t6798;
  double t6801;
  double t6685;
  double t6688;
  double t6715;
  double t6716;
  double t6773;
  double t6775;
  double t6777;
  double t6779;
  double t6780;
  double t6782;
  double t6733;
  double t6735;
  double t6736;
  double t6737;
  double t6738;
  double t6740;
  double t6674;
  double t6677;
  double t6678;
  double t6722;
  double t6723;
  double t6728;
  double t6731;
  double t6824;
  double t6827;
  double t6829;
  double t6760;
  double t6823;
  double t6855;
  double t6859;
  double t6916;
  double t6917;
  double t6921;
  double t6911;
  double t6912;
  double t6914;
  double t6842;
  double t6843;
  double t6844;
  double t6846;
  double t6861;
  double t6863;
  double t6864;
  double t6880;
  double t6882;
  double t6888;
  double t6890;
  double t6891;
  double t6895;
  double t6876;
  double t6878;
  double t6889;
  double t6897;
  double t6898;
  double t6999;
  double t7001;
  double t7007;
  double t7011;
  double t7016;
  double t7017;
  double t6934;
  double t6947;
  double t6963;
  double t6965;
  double t6970;
  double t6971;
  double t6980;
  double t6981;
  double t6982;
  double t6986;
  double t6987;
  double t6988;
  double t7044;
  double t7051;
  double t7053;
  double t7035;
  double t7036;
  double t7038;
  double t7031;
  double t7032;
  double t7033;
  double t7061;
  double t7063;
  double t7066;
  double t7034;
  double t7056;
  double t7040;
  double t7041;
  double t7042;
  double t7077;
  double t7078;
  double t7079;
  double t7111;
  double t7112;
  double t7113;
  double t7074;
  double t7075;
  double t7098;
  double t7099;
  double t7102;
  double t7088;
  double t7089;
  double t7091;
  double t7126;
  double t7127;
  double t7128;
  double t7187;
  double t7189;
  double t7194;
  double t7200;
  double t7203;
  double t7207;
  double t7211;
  double t7221;
  double t7222;
  double t7237;
  double t7238;
  double t7239;
  double t7240;
  double t7171;
  double t7172;
  double t7173;
  double t7197;
  double t7210;
  double t7223;
  double t7226;
  double t7230;
  double t7231;
  double t7232;
  double t7234;
  double t7275;
  double t7280;
  double t7281;
  double t7288;
  double t7289;
  double t7290;
  double t7292;
  double t7293;
  double t7304;
  double t7305;
  double t7168;
  double t7169;
  double t7176;
  double t7177;
  double t7179;
  double t7235;
  double t7258;
  double t7260;
  double t7373;
  double t7375;
  double t7376;
  double t7360;
  double t7361;
  double t7364;
  double t7250;
  double t7251;
  double t7252;
  double t7255;
  double t7261;
  double t7263;
  double t7334;
  double t7335;
  double t7336;
  double t7338;
  double t7339;
  double t7340;
  double t7327;
  double t7330;
  double t7331;
  double t7337;
  double t7343;
  double t7346;
  double t7422;
  double t7423;
  double t7424;
  double t7430;
  double t7431;
  double t7432;
  double t7390;
  double t7391;
  double t7393;
  double t7396;
  double t7398;
  double t7399;
  double t7450;
  double t7451;
  double t7452;
  double t7445;
  double t7447;
  double t7448;
  double t7460;
  double t7462;
  double t7463;
  double t7449;
  double t7472;
  double t7473;
  double t7478;
  double t7470;
  double t7471;
  double t7500;
  double t7502;
  double t7503;
  double t7491;
  double t7492;
  double t7495;
  double t7512;
  double t7513;
  double t7519;
  double t1159;
  double t1409;
  double t7587;
  double t7589;
  double t7591;
  double t7596;
  double t7597;
  double t7598;
  double t2010;
  double t2200;
  double t2767;
  double t7601;
  double t7603;
  double t7604;
  double t7606;
  double t7608;
  double t7613;
  double t4050;
  double t4216;
  double t4366;
  double t4371;
  double t4670;
  double t4672;
  double t7617;
  double t7619;
  double t7620;
  double t7621;
  double t7635;
  double t7637;
  double t7638;
  double t7641;
  double t7624;
  double t7625;
  double t7627;
  double t7630;
  double t7676;
  double t7678;
  double t7683;
  double t7685;
  double t7686;
  double t7688;
  double t7689;
  double t7691;
  double t7692;
  double t7694;
  double t7695;
  double t7696;
  double t7697;
  double t7285;
  double t7703;
  double t7704;
  double t7706;
  double t7710;
  double t7712;
  double t7713;
  double t7714;
  double t7701;
  double t7702;
  double t7707;
  double t7715;
  double t7716;
  double t7717;
  double t7719;
  double t7720;
  double t7721;
  double t7725;
  double t7726;
  double t7728;
  double t7729;
  double t7730;
  double t7734;
  double t7735;
  double t7737;
  double t7738;
  double t7748;
  double t7750;
  double t7754;
  double t7756;
  double t7758;
  double t7759;
  double t7760;
  double t7761;
  double t7762;
  double t7765;
  double t7766;
  double t7767;
  double t7775;
  double t7776;
  double t7777;
  double t7781;
  double t7784;
  double t7786;
  double t7787;
  double t7788;
  double t7789;
  double t7790;
  double t7791;
  double t7792;
  double t7834;
  double t7835;
  double t7841;
  double t7842;
  double t7894;
  double t7896;
  double t7903;
  double t7908;
  double t6649;
  double t6651;
  double t6653;
  double t6617;
  double t6618;
  double t6621;
  double t7978;
  double t7981;
  double t7994;
  double t7997;
  double t7144;
  double t7145;
  double t7154;
  double t8025;
  double t8035;
  double t7105;
  double t7107;
  double t7109;
  double t6879;
  double t6902;
  double t6906;
  double t8045;
  double t8053;
  double t8169;
  double t8171;
  double t8176;
  double t8185;
  double t8186;
  double t8188;
  double t8190;
  double t8191;
  double t8194;
  double t8195;
  double t8124;
  double t8137;
  double t8151;
  double t7526;
  double t7527;
  double t7529;
  double t8236;
  double t7333;
  double t7347;
  double t7354;
  double t8247;
  double t8259;
  double t8345;
  double t8350;
  double t8357;
  double t8361;
  double t8365;
  double t8368;
  double t8390;
  double t8394;
  double t8395;
  double t8400;
  double t8405;
  double t8406;
  double t8373;
  double t8374;
  double t8375;
  double t8379;
  double t8381;
  double t8383;
  double t8424;
  double t8432;
  double t8433;
  double t8434;
  double t8443;
  double t8446;
  double t8447;
  double t8449;
  double t8438;
  double t8439;
  double t8440;
  double t8441;
  double t8473;
  double t8474;
  double t8475;
  double t8479;
  double t8481;
  double t8482;
  double t8485;
  double t8486;
  double t8487;
  double t8488;
  double t8489;
  double t8491;
  double t8492;
  double t8501;
  double t8506;
  double t8509;
  double t8510;
  double t8512;
  double t8516;
  double t8518;
  double t8499;
  double t8500;
  double t8511;
  double t8519;
  double t8520;
  double t8521;
  double t8522;
  double t8526;
  double t8527;
  double t8535;
  double t8536;
  double t8539;
  double t8540;
  double t8541;
  double t8542;
  double t8546;
  double t8549;
  double t8551;
  double t8557;
  double t8558;
  double t8559;
  double t8560;
  double t8565;
  double t8567;
  double t8569;
  double t8570;
  double t8571;
  double t8574;
  double t8575;
  double t8577;
  double t8579;
  double t8582;
  double t8584;
  double t8587;
  double t8591;
  double t8593;
  double t8646;
  double t8648;
  double t8659;
  double t8662;
  double t8732;
  double t8739;
  double t8748;
  double t8753;
  double t8851;
  double t8855;
  double t8863;
  double t8867;
  double t8906;
  double t8911;
  double t8925;
  double t8926;
  double t9002;
  double t9003;
  double t9004;
  double t9005;
  double t9007;
  double t9009;
  double t9010;
  double t9018;
  double t9021;
  double t9022;
  double t9023;
  double t9025;
  double t9026;
  double t8973;
  double t8976;
  double t8985;
  double t8989;
  double t9065;
  double t9072;
  double t9081;
  double t9082;
  t299 = Cos(var1[4]);
  t647 = Cos(var1[6]);
  t685 = -1.*t647;
  t697 = 1. + t685;
  t995 = 0.15121*t697;
  t1021 = Sin(var1[6]);
  t354 = Sin(var1[5]);
  t1332 = Cos(var1[5]);
  t1811 = Cos(var1[7]);
  t1891 = -1.*t1811;
  t1912 = 1. + t1891;
  t1959 = Sin(var1[7]);
  t2321 = Sin(var1[4]);
  t2810 = -1. + t1811;
  t1561 = -1.*t299*t647*t354;
  t1636 = -1.*t299*t1332*t1021;
  t1754 = t1561 + t1636;
  t2058 = t299*t1332*t647;
  t2115 = -1.*t299*t354*t1021;
  t2118 = t2058 + t2115;
  t3118 = Cos(var1[8]);
  t3249 = -1.*t3118;
  t3423 = 1. + t3249;
  t3976 = Sin(var1[8]);
  t2849 = 4.e-6*t2810*t2321;
  t2868 = 1.6e-11*t2810;
  t2897 = 1. + t2868;
  t2916 = t2897*t1754;
  t2928 = 4.e-6*t2118*t1959;
  t2973 = t2849 + t2916 + t2928;
  t4678 = -1. + t3118;
  t4423 = t1811*t2321;
  t4536 = 4.e-6*t2810*t1754;
  t4554 = t2118*t1959;
  t4617 = t4423 + t4536 + t4554;
  t4265 = -1.000000000016*t1912;
  t4272 = 1. + t4265;
  t4305 = t4272*t2118;
  t4308 = -1.*t2321*t1959;
  t4339 = -4.e-6*t1754*t1959;
  t4349 = t4305 + t4308 + t4339;
  t4856 = -1.000000000016*t3423;
  t4902 = 1. + t4856;
  t4686 = 1.6e-11*t4678;
  t2119 = 0.281210000008499*t1912;
  t2184 = 0.03874900000062*t1959;
  t4648 = 5.136e-14*var1[8];
  t4669 = -0.03874900000062*t3423;
  t3001 = -1.284e-8*var1[8];
  t4743 = 1. + t4686;
  t3975 = -1.5499600000248e-7*t3423;
  t4364 = 0.503210000016051*t3423;
  t5052 = 1.6e-11*t3423;
  t5058 = 1. + t5052 + t4686;
  t5063 = 4.e-6*t4678;
  t5065 = -4.e-6*t3118;
  t5066 = t5063 + t5065;
  t2351 = 4.9936e-13*var1[7];
  t2431 = -0.03874900000062*t1912;
  t2641 = 0.281210000004*t1959;
  t5078 = 5.9484e-7*t4678;
  t5081 = -0.03875*t3118;
  t5090 = -0.299999999992*t3976;
  t5091 = t4648 + t4669 + t5078 + t5081 + t5090;
  t5094 = 0.14871*t4743;
  t5104 = -1.55e-7*t4678;
  t5107 = -1.199999999968e-6*t3976;
  t5112 = t3001 + t5094 + t3975 + t5104 + t5107;
  t5123 = 0.80321*t4902;
  t5124 = -4.05159380016e-7*t3976;
  t5125 = t5123 + t4364 + t5124;
  t1809 = -1.2484e-7*var1[7];
  t1951 = -1.5499600000248e-7*t1912;
  t1964 = 1.124840000016e-6*t1959;
  t5148 = 4.e-6*t2810*t5058;
  t5152 = t1811*t5066;
  t5154 = t5148 + t5152;
  t5093 = t1959*t5091;
  t5119 = 4.e-6*t1959*t5112;
  t5139 = t4272*t5125;
  t5142 = t2119 + t2184 + t5093 + t5119 + t5139;
  t5233 = -1. + t5052;
  t5234 = 4.e-6*t5233;
  t5239 = 4.e-6*t3423;
  t5240 = t5234 + t5239;
  t5250 = t5052 + t3249;
  t5210 = 4.e-6*t2810*t5091;
  t5218 = t2897*t5112;
  t5221 = -4.e-6*t1959*t5125;
  t5228 = t1809 + t1951 + t1964 + t5210 + t5218 + t5221;
  t5156 = t1811*t5091;
  t5158 = 4.e-6*t2810*t5112;
  t5162 = -1.*t1959*t5125;
  t5176 = t2351 + t2431 + t2641 + t5156 + t5158 + t5162;
  t5245 = 4.e-6*t2810*t5240;
  t5255 = t1811*t5250;
  t5281 = 1.000000000016*t1959*t3976;
  t5283 = t5245 + t5255 + t5281;
  t4963 = -4.e-6*t4902*t1959;
  t4980 = -4.e-6*t2897*t3976;
  t4993 = -4.e-6*t2810*t3976;
  t4995 = t4963 + t4980 + t4993;
  t4996 = -0.15121*t4995;
  t5021 = t4272*t4902;
  t5032 = -1.000000000016*t1959*t3976;
  t5033 = t5021 + t5032;
  t5045 = 0.15121*t5033;
  t5060 = 4.e-6*t5058*t1959;
  t5072 = t5066*t1959;
  t5075 = t5060 + t5072;
  t5147 = t5075*t5142;
  t5178 = t5154*t5176;
  t5186 = t2897*t5058;
  t5202 = 4.e-6*t2810*t5066;
  t5206 = t5186 + t5202;
  t5229 = t5206*t5228;
  t5232 = t5147 + t5178 + t5229;
  t5286 = t5232*t5283;
  t5287 = 4.e-6*t5240*t1959;
  t5296 = t5250*t1959;
  t5301 = -1.000000000016*t4272*t3976;
  t5307 = t5287 + t5296 + t5301;
  t5310 = -1.*t5142*t5307;
  t5311 = t2897*t5240;
  t5312 = 4.e-6*t2810*t5250;
  t5313 = 4.000000000064e-6*t1959*t3976;
  t5314 = t5311 + t5312 + t5313;
  t5318 = -1.*t5228*t5314;
  t5321 = -1.*t5176*t5283;
  t5324 = t5310 + t5318 + t5321;
  t5325 = t5154*t5324;
  t5326 = t4996 + t5045 + t5286 + t5325;
  t5339 = t5066*t5091;
  t5340 = t5058*t5112;
  t5343 = t5339 + t5340;
  t5351 = -1.*t5250*t5091;
  t5358 = -1.*t5240*t5112;
  t5361 = 1.000000000016*t5125*t3976;
  t5364 = t5351 + t5358 + t5361;
  t5337 = 0.038749*t4902;
  t5344 = t5240*t5343;
  t5348 = -0.281210000004*t3976;
  t5368 = t5058*t5364;
  t5369 = -1.*t5250*t5343;
  t5387 = -1.*t5066*t5364;
  t5409 = t5369 + t5387;
  t5416 = 4.e-6*t5409;
  t5424 = t5337 + t5344 + t5348 + t5368 + t5416;
  t5465 = -1.*t4902*t1959;
  t5476 = -1.6e-11*t2810*t3976;
  t5490 = -1.*t1811*t3976;
  t5497 = t5465 + t5476 + t5490;
  t5521 = t2321*t5497;
  t5522 = -1.*t1021*t4995;
  t5524 = t647*t5033;
  t5532 = t5522 + t5524;
  t5535 = t1332*t5532;
  t5542 = t647*t4995;
  t5546 = t1021*t5033;
  t5549 = t5542 + t5546;
  t5557 = -1.*t354*t5549;
  t5563 = t5535 + t5557;
  t5569 = t299*t5563;
  t5571 = t5521 + t5569;
  t1158 = -0.15121*t1021;
  t1353 = 0.15121*t1021;
  t5620 = t1021*t5142;
  t5634 = t647*t5228;
  t5654 = t995 + t1158 + t5620 + t5634;
  t5682 = t647*t5142;
  t5683 = -1.*t1021*t5228;
  t5684 = t995 + t1353 + t5682 + t5683;
  t5576 = t647*t5206;
  t5589 = t1021*t5075;
  t5608 = t5576 + t5589;
  t5665 = t5608*t5654;
  t5670 = -1.*t5206*t1021;
  t5672 = t647*t5075;
  t5674 = t5670 + t5672;
  t5692 = t5674*t5684;
  t5695 = t5665 + t5692 + t5178;
  t5699 = t5695*t5283;
  t5701 = t1021*t5307;
  t5702 = t647*t5314;
  t5703 = t5701 + t5702;
  t5706 = -1.*t5654*t5703;
  t5712 = t647*t5307;
  t5721 = -1.*t1021*t5314;
  t5724 = t5712 + t5721;
  t5725 = -1.*t5684*t5724;
  t5726 = t5321 + t5706 + t5725;
  t5727 = t5154*t5726;
  t5731 = t5699 + t5727;
  t5765 = Sin(var1[3]);
  t5767 = t354*t5532;
  t5776 = t1332*t5549;
  t5778 = t5767 + t5776;
  t5779 = t5765*t5778;
  t5788 = Cos(var1[3]);
  t5789 = t299*t5497;
  t5791 = -1.*t2321*t5563;
  t5800 = t5789 + t5791;
  t5802 = t5788*t5800;
  t5803 = t5779 + t5802;
  t5810 = t5788*t5778;
  t5817 = -1.*t5765*t5800;
  t5828 = t5810 + t5817;
  t5876 = t354*t5674;
  t5882 = t1332*t5608;
  t5888 = t5876 + t5882;
  t5866 = -1.*t354*t5654;
  t5870 = t1332*t5684;
  t5874 = t5866 + t5870;
  t5889 = t1332*t5654;
  t5897 = t354*t5684;
  t5899 = t5889 + t5897;
  t5917 = t1332*t5703;
  t5927 = t354*t5724;
  t5931 = t5917 + t5927;
  t5852 = t1332*t5674;
  t5853 = -1.*t354*t5608;
  t5855 = t5852 + t5853;
  t5875 = t5855*t5874;
  t5900 = t5888*t5899;
  t5901 = t5875 + t5900 + t5178;
  t5937 = t5901*t5931;
  t5968 = -1.*t354*t5703;
  t5984 = t1332*t5724;
  t5987 = t5968 + t5984;
  t5990 = -1.*t5874*t5987;
  t5992 = -1.*t5899*t5931;
  t5999 = t5321 + t5990 + t5992;
  t6000 = t5888*t5999;
  t6002 = t5937 + t6000;
  t6073 = t5154*t2321;
  t6077 = t299*t5855;
  t6081 = t6073 + t6077;
  t6083 = t299*t5874;
  t6084 = t2321*t5176;
  t6087 = t6083 + t6084;
  t6144 = t2321*t5283;
  t6155 = t299*t5987;
  t6156 = t6144 + t6155;
  t6055 = -1.*t2321*t5874;
  t6066 = t299*t5176;
  t6069 = t6055 + t6066;
  t6041 = t299*t5154;
  t6044 = -1.*t2321*t5855;
  t6052 = t6041 + t6044;
  t6072 = t6052*t6069;
  t6122 = t6081*t6087;
  t6124 = t5900 + t6072 + t6122;
  t6163 = t6124*t6156;
  t6164 = -1.*t6087*t6156;
  t6168 = t299*t5283;
  t6174 = -1.*t2321*t5987;
  t6184 = t6168 + t6174;
  t6187 = -1.*t6069*t6184;
  t6191 = t5992 + t6164 + t6187;
  t6193 = t6081*t6191;
  t6195 = t6163 + t6193;
  t6216 = -1.*t354*t5532;
  t6219 = -1.*t647*t4995;
  t6222 = -1.*t1021*t5033;
  t6224 = t6219 + t6222;
  t6226 = t1332*t6224;
  t6227 = t6216 + t6226;
  t6252 = t354*t6224;
  t6257 = t5535 + t6252;
  t6320 = -0.15121*t647;
  t6321 = t6320 + t1353 + t5682 + t5683;
  t6286 = 0.15121*t647;
  t6287 = -1.*t1021*t5142;
  t6288 = -1.*t647*t5228;
  t6303 = t6286 + t1353 + t6287 + t6288;
  t6331 = -1.*t1021*t5307;
  t6332 = -1.*t647*t5314;
  t6337 = t6331 + t6332;
  t6309 = -1.*t647*t5206;
  t6316 = -1.*t1021*t5075;
  t6317 = t6309 + t6316;
  t6376 = t354*t6317;
  t6379 = t5852 + t6376;
  t6358 = t354*t6337;
  t6359 = t6358 + t5984;
  t6389 = t1332*t6303;
  t6390 = -1.*t354*t6321;
  t6391 = t6389 + t6390;
  t6381 = t354*t6303;
  t6384 = t1332*t6321;
  t6386 = t6381 + t6384;
  t6419 = t1332*t6337;
  t6421 = -1.*t354*t5724;
  t6422 = t6419 + t6421;
  t6380 = t6379*t5899;
  t6387 = t5888*t6386;
  t6362 = -1.*t354*t5674;
  t6364 = t1332*t6317;
  t6365 = t6362 + t6364;
  t6417 = -1.*t5899*t6359;
  t6433 = -1.*t6386*t5931;
  t6493 = -1.*t1332*t5549;
  t6495 = t6216 + t6493;
  t6523 = -1.*t1332*t5654;
  t6524 = -1.*t354*t5684;
  t6525 = t6523 + t6524;
  t6539 = -1.*t1332*t5703;
  t6540 = t6539 + t6421;
  t6522 = t5888*t5874;
  t6529 = t5855*t5899;
  t6519 = -1.*t1332*t5608;
  t6520 = t6362 + t6519;
  t6538 = -1.*t5899*t5987;
  t6544 = -1.*t5874*t5931;
  t6603 = -1.*t2321*t5497;
  t6604 = -1.*t299*t5563;
  t6605 = t6603 + t6604;
  t6640 = -1.*t299*t5874;
  t6641 = -1.*t2321*t5176;
  t6642 = t6640 + t6641;
  t6810 = -4.e-6*t5058*t1959;
  t6814 = -1.*t5066*t1959;
  t6821 = t6810 + t6814;
  t6787 = 0.03874900000062*t1811;
  t6788 = 0.281210000008499*t1959;
  t6792 = 4.e-6*t1811*t5112;
  t6798 = -1.000000000016*t1959*t5125;
  t6801 = t6787 + t6788 + t5156 + t6792 + t6798;
  t6685 = -4.e-6*t5240*t1959;
  t6688 = -1.*t5250*t1959;
  t6715 = 1.000000000016*t1811*t3976;
  t6716 = t6685 + t6688 + t6715;
  t6773 = 1.124840000016e-6*t1811;
  t6775 = -1.5499600000248e-7*t1959;
  t6777 = -4.e-6*t1959*t5091;
  t6779 = -1.6e-11*t1959*t5112;
  t6780 = -4.e-6*t1811*t5125;
  t6782 = -1.2484e-7 + t6773 + t6775 + t6777 + t6779 + t6780;
  t6733 = 0.281210000004*t1811;
  t6735 = -0.03874900000062*t1959;
  t6736 = -1.*t1959*t5091;
  t6737 = -4.e-6*t1959*t5112;
  t6738 = -1.*t1811*t5125;
  t6740 = 4.9936e-13 + t6733 + t6735 + t6736 + t6737 + t6738;
  t6674 = -1.000000000016*t4902*t1959;
  t6677 = -1.000000000016*t1811*t3976;
  t6678 = t6674 + t6677;
  t6722 = -4.e-6*t1811*t4902;
  t6723 = t6722 + t5313;
  t6728 = 4.e-6*t1811*t5058;
  t6731 = t6728 + t5152;
  t6824 = -1.6e-11*t5058*t1959;
  t6827 = -4.e-6*t5066*t1959;
  t6829 = t6824 + t6827;
  t6760 = t5154*t6740;
  t6823 = t6821*t5176;
  t6855 = -1.*t5176*t6716;
  t6859 = -1.*t6740*t5283;
  t6916 = t647*t6782;
  t6917 = t1021*t6801;
  t6921 = t6916 + t6917;
  t6911 = -1.*t1021*t6782;
  t6912 = t647*t6801;
  t6914 = t6911 + t6912;
  t6842 = -1.6e-11*t5240*t1959;
  t6843 = -4.e-6*t5250*t1959;
  t6844 = 4.000000000064e-6*t1811*t3976;
  t6846 = t6842 + t6843 + t6844;
  t6861 = 4.e-6*t1811*t5240;
  t6863 = 1.000000000032*t1959*t3976;
  t6864 = t6861 + t5255 + t6863;
  t6880 = t1021*t6678;
  t6882 = t647*t6723;
  t6888 = t6880 + t6882;
  t6890 = t647*t6678;
  t6891 = -1.*t1021*t6723;
  t6895 = t6890 + t6891;
  t6876 = -1.*t1811*t4902;
  t6878 = t6876 + t5281;
  t6889 = -1.*t354*t6888;
  t6897 = t1332*t6895;
  t6898 = t6889 + t6897;
  t6999 = t1332*t6888;
  t7001 = t354*t6895;
  t7007 = t6999 + t7001;
  t7011 = t299*t6878;
  t7016 = -1.*t2321*t6898;
  t7017 = t7011 + t7016;
  t6934 = t6731*t1021;
  t6947 = t647*t6829;
  t6963 = t6934 + t6947;
  t6965 = t647*t6731;
  t6970 = -1.*t1021*t6829;
  t6971 = t6965 + t6970;
  t6980 = -1.*t1021*t6846;
  t6981 = t647*t6864;
  t6982 = t6980 + t6981;
  t6986 = t647*t6846;
  t6987 = t1021*t6864;
  t6988 = t6986 + t6987;
  t7044 = t1332*t6963;
  t7051 = t354*t6971;
  t7053 = t7044 + t7051;
  t7035 = t1332*t6914;
  t7036 = -1.*t354*t6921;
  t7038 = t7035 + t7036;
  t7031 = t354*t6914;
  t7032 = t1332*t6921;
  t7033 = t7031 + t7032;
  t7061 = t354*t6982;
  t7063 = t1332*t6988;
  t7066 = t7061 + t7063;
  t7034 = t5888*t7033;
  t7056 = t7053*t5899;
  t7040 = -1.*t354*t6963;
  t7041 = t1332*t6971;
  t7042 = t7040 + t7041;
  t7077 = t1332*t6982;
  t7078 = -1.*t354*t6988;
  t7079 = t7077 + t7078;
  t7111 = t2321*t6821;
  t7112 = t299*t7042;
  t7113 = t7111 + t7112;
  t7074 = -1.*t7033*t5931;
  t7075 = -1.*t5899*t7066;
  t7098 = t299*t7038;
  t7099 = t2321*t6740;
  t7102 = t7098 + t7099;
  t7088 = -1.*t2321*t7038;
  t7089 = t299*t6740;
  t7091 = t7088 + t7089;
  t7126 = t2321*t6716;
  t7127 = t299*t7079;
  t7128 = t7126 + t7127;
  t7187 = -4.05159380016e-7*t3118;
  t7189 = -0.2999999999968*t3976;
  t7194 = t7187 + t7189;
  t7200 = -1.199999999968e-6*t3118;
  t7203 = 1.620637520064e-12*t3976;
  t7207 = -1.284e-8 + t7200 + t7203;
  t7211 = -0.299999999992*t3118;
  t7221 = 4.05159380016e-7*t3976;
  t7222 = 5.136e-14 + t7211 + t7221;
  t7237 = t4272*t7194;
  t7238 = 4.e-6*t1959*t7207;
  t7239 = t1959*t7222;
  t7240 = t7237 + t7238 + t7239;
  t7171 = 1.000000000016*t3118*t1959;
  t7172 = 1.6000000000256e-11*t2810*t3976;
  t7173 = t7171 + t7172 + t6715;
  t7197 = -4.e-6*t1959*t7194;
  t7210 = t2897*t7207;
  t7223 = 4.e-6*t2810*t7222;
  t7226 = t7197 + t7210 + t7223;
  t7230 = -1.*t1959*t7194;
  t7231 = 4.e-6*t2810*t7207;
  t7232 = t1811*t7222;
  t7234 = t7230 + t7231 + t7232;
  t7275 = t5058*t7207;
  t7280 = t5066*t7222;
  t7281 = t7275 + t7280;
  t7288 = 1.000000000016*t3118*t5125;
  t7289 = -1.*t5240*t7207;
  t7290 = -1.*t5250*t7222;
  t7292 = 1.000000000016*t7194*t3976;
  t7293 = -1.000000000016*t5091*t3976;
  t7304 = -4.000000000064e-6*t5112*t3976;
  t7305 = t7288 + t7289 + t7290 + t7292 + t7293 + t7304;
  t7168 = -1.000000000016*t3118*t1959;
  t7169 = t7168 + t5301;
  t7176 = -4.e-6*t2897*t3118;
  t7177 = -4.e-6*t2810*t3118;
  t7179 = t7176 + t7177 + t5313;
  t7235 = t5154*t7234;
  t7258 = -1.*t5176*t7173;
  t7260 = -1.*t7234*t5283;
  t7373 = t647*t7226;
  t7375 = t1021*t7240;
  t7376 = t7373 + t7375;
  t7360 = -1.*t1021*t7226;
  t7361 = t647*t7240;
  t7364 = t7360 + t7361;
  t7250 = 4.000000000064e-6*t3118*t1959;
  t7251 = 4.000000000064e-6*t2897*t3976;
  t7252 = 4.000000000064e-6*t2810*t3976;
  t7255 = t7250 + t7251 + t7252;
  t7261 = -1.000000000016*t4272*t3118;
  t7263 = t7261 + t6863;
  t7334 = t1021*t7169;
  t7335 = t647*t7179;
  t7336 = t7334 + t7335;
  t7338 = t647*t7169;
  t7339 = -1.*t1021*t7179;
  t7340 = t7338 + t7339;
  t7327 = -1.6e-11*t2810*t3118;
  t7330 = -1.*t1811*t3118;
  t7331 = t7327 + t7330 + t5281;
  t7337 = -1.*t354*t7336;
  t7343 = t1332*t7340;
  t7346 = t7337 + t7343;
  t7422 = t1332*t7336;
  t7423 = t354*t7340;
  t7424 = t7422 + t7423;
  t7430 = t299*t7331;
  t7431 = -1.*t2321*t7346;
  t7432 = t7430 + t7431;
  t7390 = -1.*t1021*t7255;
  t7391 = t647*t7263;
  t7393 = t7390 + t7391;
  t7396 = t647*t7255;
  t7398 = t1021*t7263;
  t7399 = t7396 + t7398;
  t7450 = t1332*t7364;
  t7451 = -1.*t354*t7376;
  t7452 = t7450 + t7451;
  t7445 = t354*t7364;
  t7447 = t1332*t7376;
  t7448 = t7445 + t7447;
  t7460 = t354*t7393;
  t7462 = t1332*t7399;
  t7463 = t7460 + t7462;
  t7449 = t5888*t7448;
  t7472 = t1332*t7393;
  t7473 = -1.*t354*t7399;
  t7478 = t7472 + t7473;
  t7470 = -1.*t7448*t5931;
  t7471 = -1.*t5899*t7463;
  t7500 = t299*t7452;
  t7502 = t2321*t7234;
  t7503 = t7500 + t7502;
  t7491 = -1.*t2321*t7452;
  t7492 = t299*t7234;
  t7495 = t7491 + t7492;
  t7512 = t2321*t7173;
  t7513 = t299*t7478;
  t7519 = t7512 + t7513;
  t1159 = t995 + t1158;
  t1409 = t995 + t1353;
  t7587 = t5788*t1332;
  t7589 = -1.*t5765*t2321*t354;
  t7591 = t7587 + t7589;
  t7596 = t1332*t5765*t2321;
  t7597 = t5788*t354;
  t7598 = t7596 + t7597;
  t2010 = t1809 + t1951 + t1964;
  t2200 = t2119 + t2184;
  t2767 = t2351 + t2431 + t2641;
  t7601 = t647*t7591;
  t7603 = -1.*t7598*t1021;
  t7604 = t7601 + t7603;
  t7606 = t647*t7598;
  t7608 = t7591*t1021;
  t7613 = t7606 + t7608;
  t4050 = 2.012840000032e-6*t3976;
  t4216 = t3001 + t3975 + t4050;
  t4366 = 0.03874900000062*t3976;
  t4371 = t4364 + t4366;
  t4670 = 0.503210000008*t3976;
  t4672 = t4648 + t4669 + t4670;
  t7617 = -4.e-6*t299*t2810*t5765;
  t7619 = t2897*t7604;
  t7620 = 4.e-6*t7613*t1959;
  t7621 = t7617 + t7619 + t7620;
  t7635 = -1.*t299*t1811*t5765;
  t7637 = 4.e-6*t2810*t7604;
  t7638 = t7613*t1959;
  t7641 = t7635 + t7637 + t7638;
  t7624 = t4272*t7613;
  t7625 = t299*t5765*t1959;
  t7627 = -4.e-6*t7604*t1959;
  t7630 = t7624 + t7625 + t7627;
  t7676 = 0.15121*t5307;
  t7678 = -1.*t5075*t5142;
  t7683 = -1.*t5154*t5176;
  t7685 = -1.*t5206*t5228;
  t7686 = t7678 + t7683 + t7685;
  t7688 = t7686*t5497;
  t7689 = -0.15121*t5314;
  t7691 = t5228*t4995;
  t7692 = t5176*t5497;
  t7694 = t5142*t5033;
  t7695 = t7691 + t7692 + t7694;
  t7696 = t5154*t7695;
  t7697 = t7676 + t7688 + t7689 + t7696;
  t7285 = -0.03874900000062*t3976;
  t7703 = -1.*t5066*t5091;
  t7704 = -1.*t5058*t5112;
  t7706 = t7703 + t7704;
  t7710 = t4902*t5125;
  t7712 = -1.*t5091*t3976;
  t7713 = -4.e-6*t5112*t3976;
  t7714 = t7710 + t7712 + t7713;
  t7701 = 1.e-6*t5240;
  t7702 = 0.28121*t5250;
  t7707 = -4.e-6*t7706*t3976;
  t7715 = t5058*t7714;
  t7716 = t7706*t3976;
  t7717 = -1.*t5066*t7714;
  t7719 = t7716 + t7717;
  t7720 = 4.e-6*t7719;
  t7721 = t7701 + t7702 + t7285 + t7707 + t7715 + t7720;
  t7725 = -1.*t5608*t5654;
  t7726 = -1.*t5674*t5684;
  t7728 = t7725 + t7726 + t7683;
  t7729 = t7728*t5497;
  t7730 = t5684*t5532;
  t7734 = t5654*t5549;
  t7735 = t7692 + t7730 + t7734;
  t7737 = t5154*t7735;
  t7738 = t7729 + t7737;
  t7748 = -1.*t5855*t5874;
  t7750 = -1.*t5888*t5899;
  t7754 = t7748 + t7750 + t7683;
  t7756 = t7754*t5778;
  t7758 = t5899*t5778;
  t7759 = t5874*t5563;
  t7760 = t7692 + t7758 + t7759;
  t7761 = t5888*t7760;
  t7762 = t7756 + t7761;
  t7765 = t5765*t5931;
  t7766 = t5788*t6184;
  t7767 = t7765 + t7766;
  t7775 = t5788*t5931;
  t7776 = -1.*t5765*t6184;
  t7777 = t7775 + t7776;
  t7781 = -1.*t6052*t6069;
  t7784 = -1.*t6081*t6087;
  t7786 = t7750 + t7781 + t7784;
  t7787 = t7786*t5571;
  t7788 = t6087*t5571;
  t7789 = t6069*t5800;
  t7790 = t7758 + t7788 + t7789;
  t7791 = t6081*t7790;
  t7792 = t7787 + t7791;
  t7834 = -1.*t6379*t5899;
  t7835 = -1.*t5888*t6386;
  t7841 = t5899*t6257;
  t7842 = t6386*t5778;
  t7894 = -1.*t5888*t5874;
  t7896 = -1.*t5855*t5899;
  t7903 = t5874*t5778;
  t7908 = t5899*t5563;
  t6649 = -1.*t2321*t5283;
  t6651 = -1.*t299*t5987;
  t6653 = t6649 + t6651;
  t6617 = -1.*t5154*t2321;
  t6618 = -1.*t299*t5855;
  t6621 = t6617 + t6618;
  t7978 = -1.*t5154*t6740;
  t7981 = -1.*t6821*t5176;
  t7994 = t6740*t5497;
  t7997 = t5176*t6878;
  t7144 = t299*t6716;
  t7145 = -1.*t2321*t7079;
  t7154 = t7144 + t7145;
  t8025 = -1.*t5888*t7033;
  t8035 = -1.*t7053*t5899;
  t7105 = t299*t6821;
  t7107 = -1.*t2321*t7042;
  t7109 = t7105 + t7107;
  t6879 = t2321*t6878;
  t6902 = t299*t6898;
  t6906 = t6879 + t6902;
  t8045 = t7033*t5778;
  t8053 = t5899*t7007;
  t8169 = -1.*t5058*t7207;
  t8171 = -1.*t5066*t7222;
  t8176 = t8169 + t8171;
  t8185 = t4902*t7194;
  t8186 = -1.*t3118*t5091;
  t8188 = -4.e-6*t3118*t5112;
  t8190 = -1.000000000016*t5125*t3976;
  t8191 = -4.e-6*t7207*t3976;
  t8194 = -1.*t7222*t3976;
  t8195 = t8185 + t8186 + t8188 + t8190 + t8191 + t8194;
  t8124 = -1.*t5154*t7234;
  t8137 = t7234*t5497;
  t8151 = t5176*t7331;
  t7526 = t299*t7173;
  t7527 = -1.*t2321*t7478;
  t7529 = t7526 + t7527;
  t8236 = -1.*t5888*t7448;
  t7333 = t2321*t7331;
  t7347 = t299*t7346;
  t7354 = t7333 + t7347;
  t8247 = t7448*t5778;
  t8259 = t5899*t7424;
  t8345 = t1332*t5765;
  t8350 = t5788*t2321*t354;
  t8357 = t8345 + t8350;
  t8361 = -1.*t5788*t1332*t2321;
  t8365 = t5765*t354;
  t8368 = t8361 + t8365;
  t8390 = t5765*t5888;
  t8394 = t5788*t6052;
  t8395 = t8390 + t8394;
  t8400 = t5788*t5888;
  t8405 = -1.*t5765*t6052;
  t8406 = t8400 + t8405;
  t8373 = t647*t8357;
  t8374 = -1.*t8368*t1021;
  t8375 = t8373 + t8374;
  t8379 = t647*t8368;
  t8381 = t8357*t1021;
  t8383 = t8379 + t8381;
  t8424 = 4.e-6*t5788*t299*t2810;
  t8432 = t2897*t8375;
  t8433 = 4.e-6*t8383*t1959;
  t8434 = t8424 + t8432 + t8433;
  t8443 = t5788*t299*t1811;
  t8446 = 4.e-6*t2810*t8375;
  t8447 = t8383*t1959;
  t8449 = t8443 + t8446 + t8447;
  t8438 = t4272*t8383;
  t8439 = -1.*t5788*t299*t1959;
  t8440 = -4.e-6*t8375*t1959;
  t8441 = t8438 + t8439 + t8440;
  t8473 = -0.15121*t5206;
  t8474 = 0.15121*t5075;
  t8475 = -1.*t5228*t4995;
  t8479 = -1.*t5176*t5497;
  t8481 = -1.*t5142*t5033;
  t8482 = t8475 + t8479 + t8481;
  t8485 = t5283*t8482;
  t8486 = t5142*t5307;
  t8487 = t5228*t5314;
  t8488 = t5176*t5283;
  t8489 = t8486 + t8487 + t8488;
  t8491 = t5497*t8489;
  t8492 = t8473 + t8474 + t8485 + t8491;
  t8501 = -1.*t4902*t5125;
  t8506 = t5091*t3976;
  t8509 = 4.e-6*t5112*t3976;
  t8510 = t8501 + t8506 + t8509;
  t8512 = t5250*t5091;
  t8516 = t5240*t5112;
  t8518 = t8512 + t8516 + t8190;
  t8499 = 1.e-6*t5058;
  t8500 = 0.28121*t5066;
  t8511 = t5240*t8510;
  t8519 = -4.e-6*t3976*t8518;
  t8520 = -1.*t5250*t8510;
  t8521 = t3976*t8518;
  t8522 = t8520 + t8521;
  t8526 = 4.e-6*t8522;
  t8527 = t8499 + t8500 + t8511 + t8519 + t8526;
  t8535 = -1.*t5684*t5532;
  t8536 = -1.*t5654*t5549;
  t8539 = t8479 + t8535 + t8536;
  t8540 = t5283*t8539;
  t8541 = t5654*t5703;
  t8542 = t5684*t5724;
  t8546 = t8488 + t8541 + t8542;
  t8549 = t5497*t8546;
  t8551 = t8540 + t8549;
  t8557 = -1.*t5899*t5778;
  t8558 = -1.*t5874*t5563;
  t8559 = t8479 + t8557 + t8558;
  t8560 = t5931*t8559;
  t8565 = t5874*t5987;
  t8567 = t5899*t5931;
  t8569 = t8488 + t8565 + t8567;
  t8570 = t5778*t8569;
  t8571 = t8560 + t8570;
  t8574 = -1.*t6087*t5571;
  t8575 = -1.*t6069*t5800;
  t8577 = t8557 + t8574 + t8575;
  t8579 = t6156*t8577;
  t8582 = t6087*t6156;
  t8584 = t6069*t6184;
  t8587 = t8567 + t8582 + t8584;
  t8591 = t5571*t8587;
  t8593 = t8579 + t8591;
  t8646 = -1.*t5899*t6257;
  t8648 = -1.*t6386*t5778;
  t8659 = t5899*t6359;
  t8662 = t6386*t5931;
  t8732 = -1.*t5874*t5778;
  t8739 = -1.*t5899*t5563;
  t8748 = t5899*t5987;
  t8753 = t5874*t5931;
  t8851 = -1.*t6740*t5497;
  t8855 = -1.*t5176*t6878;
  t8863 = t5176*t6716;
  t8867 = t6740*t5283;
  t8906 = -1.*t7033*t5778;
  t8911 = -1.*t5899*t7007;
  t8925 = t7033*t5931;
  t8926 = t5899*t7066;
  t9002 = -1.000000000016*t3118*t5125;
  t9003 = t5240*t7207;
  t9004 = t5250*t7222;
  t9005 = -1.000000000016*t7194*t3976;
  t9007 = 1.000000000016*t5091*t3976;
  t9009 = 4.000000000064e-6*t5112*t3976;
  t9010 = t9002 + t9003 + t9004 + t9005 + t9007 + t9009;
  t9018 = -1.*t4902*t7194;
  t9021 = t3118*t5091;
  t9022 = 4.e-6*t3118*t5112;
  t9023 = 4.e-6*t7207*t3976;
  t9025 = t7222*t3976;
  t9026 = t9018 + t9021 + t9022 + t5361 + t9023 + t9025;
  t8973 = -1.*t7234*t5497;
  t8976 = -1.*t5176*t7331;
  t8985 = t5176*t7173;
  t8989 = t7234*t5283;
  t9065 = -1.*t7448*t5778;
  t9072 = -1.*t5899*t7424;
  t9081 = t7448*t5931;
  t9082 = t5899*t7463;
  p_output1[0]=t1754*t2010 + t2118*t2200 + t2321*t2767 + t1332*t1409*t299 - 1.*t1159*t299*t354 + t2973*t4216 + t4349*t4371 + t4617*t4672 - 0.03875*(t3976*t4349 + t3118*t4617 + 4.e-6*t2973*t4678) + 0.14871*(4.e-6*t3976*t4349 + 4.e-6*t4617*t4678 + t2973*t4743) + 0.80321*(-4.e-6*t2973*t3976 - 1.*t3976*t4617 + t4349*t4902) + var1[0] + t5571*var2[0] + t5828*var2[1] + t5803*var2[2] + t6195*var2[3] + ((-1.*t5765*t5778 - 1.*t5788*t5800)*var2[1] + t5828*var2[2])*var2[3] + t6002*var2[4] + (t5800*var2[0] - 1.*t5765*t6605*var2[1] + t5788*t6605*var2[2] + (t6124*t6184 + t6052*t6191 + t6156*(t6069*t6081 + t6052*t6087 + t6069*t6621 + t6052*t6642) + t6081*(-1.*t6069*t6156 - 1.*t6087*t6184 - 1.*t6184*t6642 - 1.*t6069*t6653))*var2[3])*var2[4] + t5731*var2[5] + (t299*t6495*var2[0] + (t5563*t5788 + t2321*t5765*t6495)*var2[1] + (t5563*t5765 - 1.*t2321*t5788*t6495)*var2[2] + (t299*t6191*t6520 + t6156*(-1.*t2321*t6069*t6520 + t299*t6087*t6520 + t6522 - 1.*t2321*t6052*t6525 + t299*t6081*t6525 + t6529) + t299*t6124*t6540 + t6081*(-1.*t299*t6156*t6525 + t2321*t6184*t6525 + t6538 + t2321*t6069*t6540 - 1.*t299*t6087*t6540 + t6544))*var2[3] + (t5901*t5987 + t5855*t5999 + t5931*(t5874*t6520 + t6522 + t5855*t6525 + t6529) + t5888*(-1.*t5987*t6525 + t6538 - 1.*t5874*t6540 + t6544))*var2[4])*var2[5] + t5326*var2[6] + (t299*t6227*var2[0] + (t2321*t5765*t6227 + t5788*t6257)*var2[1] + (-1.*t2321*t5788*t6227 + t5765*t6257)*var2[2] + (t299*t6191*t6365 + t6156*(-1.*t2321*t6069*t6365 + t299*t6087*t6365 + t6380 + t6387 - 1.*t2321*t6052*t6391 + t299*t6081*t6391) + t299*t6124*t6422 + t6081*(-1.*t299*t6156*t6391 + t2321*t6184*t6391 + t6417 + t2321*t6069*t6422 - 1.*t299*t6087*t6422 + t6433))*var2[3] + (t5901*t6359 + t5999*t6379 + t5931*(t5874*t6365 + t6380 + t6387 + t5855*t6391) + t5888*(-1.*t5987*t6391 + t6417 - 1.*t5874*t6422 + t6433))*var2[4] + (t5283*(t5654*t5674 + t5674*t6303 + t5684*t6317 + t5608*t6321) + t5154*(-1.*t5654*t5724 - 1.*t5724*t6303 - 1.*t5703*t6321 - 1.*t5684*t6337))*var2[5])*var2[6] + t5424*var2[7] + (t6906*var2[0] + (t5788*t7007 - 1.*t5765*t7017)*var2[1] + (t5765*t7007 + t5788*t7017)*var2[2] + (t6191*t7113 + t6156*(t7034 + t7056 + t6052*t7091 + t6081*t7102 + t6069*t7109 + t6087*t7113) + t6124*t7128 + t6081*(t7074 + t7075 - 1.*t6184*t7091 - 1.*t6156*t7102 - 1.*t6087*t7128 - 1.*t6069*t7154))*var2[3] + (t5999*t7053 + t5931*(t6760 + t6823 + t7034 + t5855*t7038 + t5874*t7042 + t7056) + t5901*t7066 + t5888*(t6855 + t6859 - 1.*t5987*t7038 + t7074 + t7075 - 1.*t5874*t7079))*var2[4] + (t5695*t6716 + t5726*t6821 + t5283*(t6760 + t6823 + t5674*t6914 + t5608*t6921 + t5654*t6963 + t5684*t6971) + t5154*(t6855 + t6859 - 1.*t5724*t6914 - 1.*t5703*t6921 - 1.*t5684*t6982 - 1.*t5654*t6988))*var2[5] + (0.15121*t6678 + t5232*t6716 - 0.15121*t6723 + t5324*t6821 + t5283*(t5142*t6731 + t6760 + t5206*t6782 + t5075*t6801 + t6823 + t5228*t6829) + t5154*(-1.*t5314*t6782 - 1.*t5307*t6801 - 1.*t5228*t6846 + t6855 + t6859 - 1.*t5142*t6864))*var2[6])*var2[7] - 4.05160619990483e-7*var2[8] + (t7354*var2[0] + (t5788*t7424 - 1.*t5765*t7432)*var2[1] + (t5765*t7424 + t5788*t7432)*var2[2] + (t6156*(t7449 + t6052*t7495 + t6081*t7503) + t6124*t7519 + t6081*(t7470 + t7471 - 1.*t6184*t7495 - 1.*t6156*t7503 - 1.*t6087*t7519 - 1.*t6069*t7529))*var2[3] + (t5931*(t7235 + t7449 + t5855*t7452) + t5901*t7463 + t5888*(t7258 + t7260 - 1.*t5987*t7452 + t7470 + t7471 - 1.*t5874*t7478))*var2[4] + (t5695*t7173 + t5283*(t7235 + t5674*t7364 + t5608*t7376) + t5154*(t7258 + t7260 - 1.*t5724*t7364 - 1.*t5703*t7376 - 1.*t5684*t7393 - 1.*t5654*t7399))*var2[5] + (0.15121*t7169 + t5232*t7173 - 0.15121*t7179 + t5283*(t5206*t7226 + t7235 + t5075*t7240) + t5154*(-1.*t5314*t7226 - 1.*t5307*t7240 - 1.*t5228*t7255 + t7258 + t7260 - 1.*t5142*t7263))*var2[6] + (-0.281210000004*t3118 + 4.000000000064e-6*t3976*t5343 + t5240*t7281 + t7285 + t5058*t7305 + 4.e-6*(-1.000000000016*t3976*t5343 - 1.*t5250*t7281 - 1.*t5066*t7305))*var2[7])*var2[8] + t5571*var3[0] + t5828*var3[1] + t5803*var3[2] + t6195*var3[3] + t6002*var3[4] + t5731*var3[5] + t5326*var3[6] + t5424*var3[7] - 4.05160619990483e-7*var3[8] - 1.*var4[0];
  p_output1[1]=-1.*t2767*t299*t5765 + t1159*t7591 + t1409*t7598 + t2010*t7604 + t2200*t7613 + t4216*t7621 + t4371*t7630 + t4672*t7641 - 0.03875*(4.e-6*t4678*t7621 + t3976*t7630 + t3118*t7641) + 0.80321*(-4.e-6*t3976*t7621 + t4902*t7630 - 1.*t3976*t7641) + 0.14871*(t4743*t7621 + 4.e-6*t3976*t7630 + 4.e-6*t4678*t7641) + var1[1] + t6156*var2[0] + t7777*var2[1] + t7767*var2[2] + t7792*var2[3] + ((-1.*t5765*t5931 - 1.*t5788*t6184)*var2[1] + t7777*var2[2])*var2[3] + t7762*var2[4] + (t6184*var2[0] - 1.*t5765*t6653*var2[1] + t5788*t6653*var2[2] + (t6081*(t5571*t6069 + t5800*t6087 + t6069*t6605 + t5800*t6642) + t5571*(-1.*t6069*t6081 - 1.*t6052*t6087 - 1.*t6069*t6621 - 1.*t6052*t6642) + t5800*t7786 + t6052*t7790)*var2[3])*var2[4] + t7738*var2[5] + (t299*t6540*var2[0] + (t5788*t5987 + t2321*t5765*t6540)*var2[1] + (t5765*t5987 - 1.*t2321*t5788*t6540)*var2[2] + (t299*t6495*t7786 + t299*t6520*t7790 + t5571*(t2321*t6069*t6520 - 1.*t299*t6087*t6520 + t2321*t6052*t6525 - 1.*t299*t6081*t6525 + t7894 + t7896) + t6081*(-1.*t2321*t6069*t6495 + t299*t6087*t6495 + t299*t5571*t6525 - 1.*t2321*t5800*t6525 + t7903 + t7908))*var2[3] + (t5563*t7754 + t5855*t7760 + t5778*(-1.*t5874*t6520 - 1.*t5855*t6525 + t7894 + t7896) + t5888*(t5874*t6495 + t5563*t6525 + t7903 + t7908))*var2[4])*var2[5] + t7697*var2[6] + (t299*t6422*var2[0] + (t5788*t6359 + t2321*t5765*t6422)*var2[1] + (t5765*t6359 - 1.*t2321*t5788*t6422)*var2[2] + (t299*t6227*t7786 + t299*t6365*t7790 + t5571*(t2321*t6069*t6365 - 1.*t299*t6087*t6365 + t2321*t6052*t6391 - 1.*t299*t6081*t6391 + t7834 + t7835) + t6081*(-1.*t2321*t6069*t6227 + t299*t6087*t6227 + t299*t5571*t6391 - 1.*t2321*t5800*t6391 + t7841 + t7842))*var2[3] + (t6257*t7754 + t6379*t7760 + t5778*(-1.*t5874*t6365 - 1.*t5855*t6391 + t7834 + t7835) + t5888*(t5874*t6227 + t5563*t6391 + t7841 + t7842))*var2[4] + (t5154*(t5532*t5654 + t5684*t6224 + t5532*t6303 + t5549*t6321) + t5497*(-1.*t5654*t5674 - 1.*t5674*t6303 - 1.*t5684*t6317 - 1.*t5608*t6321))*var2[5])*var2[6] + t7721*var2[7] + (t7128*var2[0] + (t5788*t7066 - 1.*t5765*t7154)*var2[1] + (t5765*t7066 + t5788*t7154)*var2[2] + (t6906*t7786 + t7113*t7790 + t5571*(-1.*t6052*t7091 - 1.*t6081*t7102 - 1.*t6069*t7109 - 1.*t6087*t7113 + t8025 + t8035) + t6081*(t6087*t6906 + t6069*t7017 + t5800*t7091 + t5571*t7102 + t8045 + t8053))*var2[3] + (t7007*t7754 + t7053*t7760 + t5778*(-1.*t5855*t7038 - 1.*t5874*t7042 + t7978 + t7981 + t8025 + t8035) + t5888*(t5874*t6898 + t5563*t7038 + t7994 + t7997 + t8045 + t8053))*var2[4] + (t6878*t7728 + t6821*t7735 + t5497*(-1.*t5674*t6914 - 1.*t5608*t6921 - 1.*t5654*t6963 - 1.*t5684*t6971 + t7978 + t7981) + t5154*(t5654*t6888 + t5684*t6895 + t5532*t6914 + t5549*t6921 + t7994 + t7997))*var2[5] + (-0.15121*t6846 + 0.15121*t6864 + t6878*t7686 + t6821*t7695 + t5497*(-1.*t5142*t6731 - 1.*t5206*t6782 - 1.*t5075*t6801 - 1.*t5228*t6829 + t7978 + t7981) + t5154*(t5142*t6678 + t5228*t6723 + t4995*t6782 + t5033*t6801 + t7994 + t7997))*var2[6])*var2[7] + 0.300000000004851*var2[8] + (t7519*var2[0] + (t5788*t7463 - 1.*t5765*t7529)*var2[1] + (t5765*t7463 + t5788*t7529)*var2[2] + (t7354*t7786 + t5571*(-1.*t6052*t7495 - 1.*t6081*t7503 + t8236) + t6081*(t6087*t7354 + t6069*t7432 + t5800*t7495 + t5571*t7503 + t8247 + t8259))*var2[3] + (t7424*t7754 + t5778*(-1.*t5855*t7452 + t8124 + t8236) + t5888*(t5874*t7346 + t5563*t7452 + t8137 + t8151 + t8247 + t8259))*var2[4] + (t7331*t7728 + t5497*(-1.*t5674*t7364 - 1.*t5608*t7376 + t8124) + t5154*(t5654*t7336 + t5684*t7340 + t5532*t7364 + t5549*t7376 + t8137 + t8151))*var2[5] + (-0.15121*t7255 + 0.15121*t7263 + t7331*t7686 + t5497*(-1.*t5206*t7226 - 1.*t5075*t7240 + t8124) + t5154*(t5142*t7169 + t5228*t7179 + t4995*t7226 + t5033*t7240 + t8137 + t8151))*var2[6] + (-0.03874900000062*t3118 + 0.281210000008499*t3976 - 4.e-6*t3118*t7706 - 4.e-6*t3976*t8176 + t5058*t8195 + 4.e-6*(t3118*t7706 + t3976*t8176 - 1.*t5066*t8195))*var2[7])*var2[8] + t6156*var3[0] + t7777*var3[1] + t7767*var3[2] + t7792*var3[3] + t7762*var3[4] + t7738*var3[5] + t7697*var3[6] + t7721*var3[7] + 0.300000000004851*var3[8] - 1.*var4[1];
  p_output1[2]=t2767*t299*t5788 + t1159*t8357 + t1409*t8368 + t2010*t8375 + t2200*t8383 + t4216*t8434 + t4371*t8441 + t4672*t8449 - 0.03875*(4.e-6*t4678*t8434 + t3976*t8441 + t3118*t8449) + 0.80321*(-4.e-6*t3976*t8434 + t4902*t8441 - 1.*t3976*t8449) + 0.14871*(t4743*t8434 + 4.e-6*t3976*t8441 + 4.e-6*t4678*t8449) + var1[2] + t6081*var2[0] + t8406*var2[1] + t8395*var2[2] + t8593*var2[3] + ((-1.*t5765*t5888 - 1.*t5788*t6052)*var2[1] + t8406*var2[2])*var2[3] + t8571*var2[4] + (t6052*var2[0] - 1.*t5765*t6621*var2[1] + t5788*t6621*var2[2] + (t6156*(-1.*t5571*t6069 - 1.*t5800*t6087 - 1.*t6069*t6605 - 1.*t5800*t6642) + t5571*(t6069*t6156 + t6087*t6184 + t6184*t6642 + t6069*t6653) + t6184*t8577 + t5800*t8587)*var2[3])*var2[4] + t8551*var2[5] + (t299*t6520*var2[0] + (t5788*t5855 + t2321*t5765*t6520)*var2[1] + (t5765*t5855 - 1.*t2321*t5788*t6520)*var2[2] + (t299*t6540*t8577 + t299*t6495*t8587 + t6156*(t2321*t6069*t6495 - 1.*t299*t6087*t6495 - 1.*t299*t5571*t6525 + t2321*t5800*t6525 + t8732 + t8739) + t5571*(t299*t6156*t6525 - 1.*t2321*t6184*t6525 - 1.*t2321*t6069*t6540 + t299*t6087*t6540 + t8748 + t8753))*var2[3] + (t5987*t8559 + t5563*t8569 + t5931*(-1.*t5874*t6495 - 1.*t5563*t6525 + t8732 + t8739) + t5778*(t5987*t6525 + t5874*t6540 + t8748 + t8753))*var2[4])*var2[5] + t8492*var2[6] + (t299*t6365*var2[0] + (t2321*t5765*t6365 + t5788*t6379)*var2[1] + (-1.*t2321*t5788*t6365 + t5765*t6379)*var2[2] + (t299*t6422*t8577 + t299*t6227*t8587 + t6156*(t2321*t6069*t6227 - 1.*t299*t6087*t6227 - 1.*t299*t5571*t6391 + t2321*t5800*t6391 + t8646 + t8648) + t5571*(t299*t6156*t6391 - 1.*t2321*t6184*t6391 - 1.*t2321*t6069*t6422 + t299*t6087*t6422 + t8659 + t8662))*var2[3] + (t6359*t8559 + t6257*t8569 + t5931*(-1.*t5874*t6227 - 1.*t5563*t6391 + t8646 + t8648) + t5778*(t5987*t6391 + t5874*t6422 + t8659 + t8662))*var2[4] + (t5283*(-1.*t5532*t5654 - 1.*t5684*t6224 - 1.*t5532*t6303 - 1.*t5549*t6321) + t5497*(t5654*t5724 + t5724*t6303 + t5703*t6321 + t5684*t6337))*var2[5])*var2[6] + t8527*var2[7] + (t7113*var2[0] + (t5788*t7053 - 1.*t5765*t7109)*var2[1] + (t5765*t7053 + t5788*t7109)*var2[2] + (t7128*t8577 + t6906*t8587 + t6156*(-1.*t6087*t6906 - 1.*t6069*t7017 - 1.*t5800*t7091 - 1.*t5571*t7102 + t8906 + t8911) + t5571*(t6184*t7091 + t6156*t7102 + t6087*t7128 + t6069*t7154 + t8925 + t8926))*var2[3] + (t7066*t8559 + t7007*t8569 + t5931*(-1.*t5874*t6898 - 1.*t5563*t7038 + t8851 + t8855 + t8906 + t8911) + t5778*(t5987*t7038 + t5874*t7079 + t8863 + t8867 + t8925 + t8926))*var2[4] + (t6716*t8539 + t6878*t8546 + t5283*(-1.*t5654*t6888 - 1.*t5684*t6895 - 1.*t5532*t6914 - 1.*t5549*t6921 + t8851 + t8855) + t5497*(t5724*t6914 + t5703*t6921 + t5684*t6982 + t5654*t6988 + t8863 + t8867))*var2[5] + (0.15121*t6731 - 0.15121*t6829 + t6716*t8482 + t6878*t8489 + t5283*(-1.*t5142*t6678 - 1.*t5228*t6723 - 1.*t4995*t6782 - 1.*t5033*t6801 + t8851 + t8855) + t5497*(t5314*t6782 + t5307*t6801 + t5228*t6846 + t5142*t6864 + t8863 + t8867))*var2[6])*var2[7] - 1.284e-8*var2[8] + ((t7519*t8577 + t7354*t8587 + t6156*(-1.*t6087*t7354 - 1.*t6069*t7432 - 1.*t5800*t7495 - 1.*t5571*t7503 + t9065 + t9072) + t5571*(t6184*t7495 + t6156*t7503 + t6087*t7519 + t6069*t7529 + t9081 + t9082))*var2[3] + (t7463*t8559 + t7424*t8569 + t5931*(-1.*t5874*t7346 - 1.*t5563*t7452 + t8973 + t8976 + t9065 + t9072) + t5778*(t5987*t7452 + t5874*t7478 + t8985 + t8989 + t9081 + t9082))*var2[4] + (t7173*t8539 + t7331*t8546 + t5283*(-1.*t5654*t7336 - 1.*t5684*t7340 - 1.*t5532*t7364 - 1.*t5549*t7376 + t8973 + t8976) + t5497*(t5724*t7364 + t5703*t7376 + t5684*t7393 + t5654*t7399 + t8985 + t8989))*var2[5] + (t7173*t8482 + t7331*t8489 + t5283*(-1.*t5142*t7169 - 1.*t5228*t7179 - 1.*t4995*t7226 - 1.*t5033*t7240 + t8973 + t8976) + t5497*(t5314*t7226 + t5307*t7240 + t5228*t7255 + t5142*t7263 + t8985 + t8989))*var2[6] + (4.000000000064e-6*t3976*t8510 - 4.e-6*t3118*t8518 - 4.e-6*t3976*t9010 + t5240*t9026 + 4.e-6*(-1.000000000016*t3976*t8510 + t3118*t8518 + t3976*t9010 - 1.*t5250*t9026))*var2[7])*var2[8] + t6081*var3[0] + t8406*var3[1] + t8395*var3[2] + t8593*var3[3] + t8571*var3[4] + t8551*var3[5] + t8492*var3[6] + t8527*var3[7] - 1.284e-8*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FlFoot_DiagonalStance2.hh"

namespace DiagonalStance2
{

void ddh_FlFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
