/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:18:09 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t128;
  double t186;
  double t203;
  double t264;
  double t280;
  double t300;
  double t163;
  double t621;
  double t1024;
  double t1074;
  double t1083;
  double t1245;
  double t1679;
  double t1946;
  double t859;
  double t879;
  double t969;
  double t1311;
  double t1315;
  double t1342;
  double t2412;
  double t3249;
  double t3317;
  double t3425;
  double t2011;
  double t2016;
  double t2118;
  double t2258;
  double t2312;
  double t2355;
  double t4584;
  double t4163;
  double t4203;
  double t4237;
  double t4244;
  double t3481;
  double t3815;
  double t3957;
  double t3974;
  double t3975;
  double t3987;
  double t4996;
  double t5074;
  double t4663;
  double t1417;
  double t1447;
  double t4277;
  double t4345;
  double t2371;
  double t4737;
  double t3335;
  double t4080;
  double t5673;
  double t5688;
  double t5792;
  double t5919;
  double t5923;
  double t1682;
  double t1684;
  double t1832;
  double t6013;
  double t6029;
  double t6059;
  double t6094;
  double t6128;
  double t6271;
  double t6278;
  double t6430;
  double t6509;
  double t6604;
  double t6623;
  double t1013;
  double t1122;
  double t1252;
  double t6676;
  double t6682;
  double t6684;
  double t6095;
  double t6479;
  double t6655;
  double t6657;
  double t6770;
  double t6771;
  double t6777;
  double t6784;
  double t6807;
  double t6754;
  double t6756;
  double t6759;
  double t6760;
  double t6689;
  double t6691;
  double t6696;
  double t6698;
  double t6792;
  double t6830;
  double t6845;
  double t6862;
  double t5217;
  double t5300;
  double t5398;
  double t5402;
  double t5444;
  double t5446;
  double t5478;
  double t5607;
  double t5633;
  double t5744;
  double t5952;
  double t6012;
  double t6662;
  double t6699;
  double t6706;
  double t6720;
  double t6752;
  double t6761;
  double t6764;
  double t6873;
  double t6874;
  double t6895;
  double t6904;
  double t6905;
  double t6906;
  double t6908;
  double t6909;
  double t6910;
  double t6915;
  double t6916;
  double t6918;
  double t6921;
  double t6922;
  double t6923;
  double t6932;
  double t6934;
  double t6935;
  double t6951;
  double t6968;
  double t6970;
  double t6976;
  double t6931;
  double t6938;
  double t6948;
  double t6977;
  double t6978;
  double t6979;
  double t6981;
  double t6982;
  double t6984;
  double t7017;
  double t7047;
  double t7070;
  double t7072;
  double t7089;
  double t7108;
  double t7117;
  double t7124;
  double t7125;
  double t7126;
  double t7132;
  double t7135;
  double t7136;
  double t7143;
  double t7144;
  double t7147;
  double t413;
  double t747;
  double t7238;
  double t7254;
  double t7265;
  double t7305;
  double t7311;
  double t7312;
  double t7219;
  double t7220;
  double t7224;
  double t7266;
  double t7282;
  double t7285;
  double t7291;
  double t7315;
  double t7316;
  double t7325;
  double t7326;
  double t7327;
  double t7328;
  double t7329;
  double t7335;
  double t7336;
  double t7344;
  double t7345;
  double t7350;
  double t7352;
  double t7356;
  double t7434;
  double t7438;
  double t7455;
  double t7492;
  double t7505;
  double t7522;
  double t7524;
  double t7527;
  double t7538;
  double t7539;
  double t7547;
  double t7561;
  double t7562;
  double t7564;
  double t7769;
  double t7776;
  double t7784;
  double t7716;
  double t7732;
  double t7745;
  double t7785;
  double t7786;
  double t7800;
  double t7832;
  double t7835;
  double t7836;
  double t7625;
  double t7629;
  double t7695;
  double t7766;
  double t7805;
  double t7830;
  double t7837;
  double t7840;
  double t7852;
  double t7862;
  double t7864;
  double t7874;
  double t7886;
  double t7892;
  double t7896;
  double t8039;
  double t8048;
  double t8059;
  double t8070;
  double t8079;
  double t8080;
  double t8095;
  double t8096;
  double t8097;
  double t8023;
  double t8025;
  double t8035;
  double t7984;
  double t7987;
  double t8018;
  double t8038;
  double t8081;
  double t8091;
  double t8098;
  double t8106;
  double t8107;
  double t8108;
  double t8109;
  double t8110;
  double t8113;
  double t8119;
  double t8133;
  double t8187;
  double t8188;
  double t8196;
  double t8199;
  double t8209;
  double t8211;
  double t8239;
  double t8240;
  double t8327;
  double t8328;
  double t8271;
  double t8273;
  double t8277;
  double t8279;
  double t8346;
  double t8348;
  double t8349;
  double t8311;
  double t8312;
  double t8318;
  double t8402;
  double t8408;
  double t8372;
  double t8373;
  double t8435;
  double t8444;
  double t8445;
  double t8428;
  double t8429;
  double t8430;
  double t8471;
  double t8472;
  double t8474;
  double t8418;
  double t8431;
  double t8390;
  double t8395;
  double t8396;
  double t8460;
  double t8476;
  double t8560;
  double t8561;
  double t8601;
  double t8602;
  double t8603;
  double t8627;
  double t8628;
  double t8600;
  double t8610;
  double t8592;
  double t8594;
  double t8624;
  double t8633;
  double t8701;
  double t8703;
  double t8704;
  double t8721;
  double t8722;
  double t8723;
  double t8817;
  double t8818;
  double t8819;
  double t8809;
  double t8810;
  double t8811;
  double t8813;
  double t8815;
  double t8766;
  double t8767;
  double t8769;
  double t8770;
  double t8798;
  double t8800;
  double t8801;
  double t8804;
  double t8805;
  double t8806;
  double t8781;
  double t8790;
  double t8791;
  double t8793;
  double t8794;
  double t8795;
  double t8760;
  double t8761;
  double t8763;
  double t8772;
  double t8773;
  double t8778;
  double t8779;
  double t8822;
  double t8825;
  double t8833;
  double t8797;
  double t8821;
  double t8865;
  double t8869;
  double t8930;
  double t8931;
  double t8934;
  double t8922;
  double t8926;
  double t8927;
  double t8844;
  double t8853;
  double t8858;
  double t8859;
  double t8870;
  double t8871;
  double t8873;
  double t8897;
  double t8898;
  double t8903;
  double t8906;
  double t8907;
  double t8908;
  double t8885;
  double t8895;
  double t8904;
  double t8910;
  double t8912;
  double t8982;
  double t8986;
  double t8990;
  double t8992;
  double t8995;
  double t8997;
  double t8938;
  double t8939;
  double t8941;
  double t8944;
  double t8948;
  double t8950;
  double t8964;
  double t8965;
  double t8966;
  double t8971;
  double t8972;
  double t8973;
  double t9059;
  double t9060;
  double t9064;
  double t9038;
  double t9049;
  double t9051;
  double t9017;
  double t9018;
  double t9023;
  double t9070;
  double t9071;
  double t9072;
  double t9031;
  double t9066;
  double t9053;
  double t9054;
  double t9056;
  double t9085;
  double t9087;
  double t9091;
  double t9128;
  double t9129;
  double t9131;
  double t9080;
  double t9083;
  double t9114;
  double t9116;
  double t9119;
  double t9107;
  double t9110;
  double t9112;
  double t9137;
  double t9138;
  double t9139;
  double t9190;
  double t9191;
  double t9192;
  double t9205;
  double t9208;
  double t9212;
  double t9217;
  double t9218;
  double t9223;
  double t9236;
  double t9243;
  double t9253;
  double t9254;
  double t9174;
  double t9175;
  double t9180;
  double t9193;
  double t9213;
  double t9224;
  double t9225;
  double t9231;
  double t9232;
  double t9233;
  double t9234;
  double t9292;
  double t9295;
  double t9297;
  double t9302;
  double t9307;
  double t9314;
  double t9316;
  double t9318;
  double t9321;
  double t9324;
  double t9170;
  double t9171;
  double t9186;
  double t9187;
  double t9188;
  double t9235;
  double t9277;
  double t9282;
  double t9377;
  double t9379;
  double t9381;
  double t9366;
  double t9368;
  double t9371;
  double t9264;
  double t9265;
  double t9268;
  double t9272;
  double t9283;
  double t9284;
  double t9349;
  double t9350;
  double t9352;
  double t9354;
  double t9356;
  double t9357;
  double t9344;
  double t9345;
  double t9346;
  double t9353;
  double t9358;
  double t9359;
  double t9416;
  double t9418;
  double t9421;
  double t9425;
  double t9426;
  double t9429;
  double t9389;
  double t9390;
  double t9391;
  double t9394;
  double t9396;
  double t9397;
  double t9447;
  double t9448;
  double t9450;
  double t9442;
  double t9443;
  double t9445;
  double t9456;
  double t9458;
  double t9460;
  double t9446;
  double t9469;
  double t9471;
  double t9473;
  double t9465;
  double t9468;
  double t9491;
  double t9494;
  double t9496;
  double t9484;
  double t9485;
  double t9486;
  double t9508;
  double t9510;
  double t9511;
  double t515;
  double t765;
  double t9545;
  double t9546;
  double t9547;
  double t9552;
  double t9558;
  double t9560;
  double t1290;
  double t1624;
  double t1833;
  double t9562;
  double t9563;
  double t9566;
  double t9568;
  double t9569;
  double t9570;
  double t3456;
  double t3457;
  double t4120;
  double t4151;
  double t4355;
  double t4427;
  double t9573;
  double t9574;
  double t9575;
  double t9576;
  double t9588;
  double t9589;
  double t9590;
  double t9591;
  double t9582;
  double t9584;
  double t9585;
  double t9586;
  double t9621;
  double t9626;
  double t9637;
  double t9643;
  double t9650;
  double t9651;
  double t9653;
  double t9654;
  double t9655;
  double t9656;
  double t9658;
  double t9659;
  double t9661;
  double t9300;
  double t9667;
  double t9669;
  double t9671;
  double t9673;
  double t9676;
  double t9677;
  double t9678;
  double t9664;
  double t9665;
  double t9672;
  double t9680;
  double t9681;
  double t9683;
  double t9684;
  double t9685;
  double t9686;
  double t9694;
  double t9696;
  double t9699;
  double t9700;
  double t9701;
  double t9704;
  double t9705;
  double t9706;
  double t9711;
  double t9718;
  double t9719;
  double t9720;
  double t9721;
  double t9722;
  double t9724;
  double t9729;
  double t9736;
  double t9738;
  double t9747;
  double t9748;
  double t9749;
  double t9753;
  double t9754;
  double t9756;
  double t9770;
  double t9773;
  double t9774;
  double t9775;
  double t9776;
  double t9777;
  double t9778;
  double t9779;
  double t9780;
  double t9841;
  double t9844;
  double t9852;
  double t9853;
  double t9914;
  double t9917;
  double t9928;
  double t9932;
  double t8735;
  double t8736;
  double t8737;
  double t8712;
  double t8713;
  double t8716;
  double t10032;
  double t10039;
  double t10060;
  double t10063;
  double t9148;
  double t9150;
  double t9152;
  double t10095;
  double t10100;
  double t9124;
  double t9125;
  double t9126;
  double t8896;
  double t8913;
  double t8915;
  double t10105;
  double t10109;
  double t10196;
  double t10198;
  double t10199;
  double t10204;
  double t10205;
  double t10206;
  double t10207;
  double t10209;
  double t10210;
  double t10211;
  double t10159;
  double t10170;
  double t10179;
  double t9517;
  double t9522;
  double t9523;
  double t10256;
  double t9347;
  double t9360;
  double t9361;
  double t10267;
  double t10275;
  double t10320;
  double t10321;
  double t10324;
  double t10328;
  double t10329;
  double t10330;
  double t10357;
  double t10359;
  double t10362;
  double t10373;
  double t10374;
  double t10380;
  double t10332;
  double t10333;
  double t10335;
  double t10341;
  double t10344;
  double t10345;
  double t10395;
  double t10397;
  double t10401;
  double t10402;
  double t10409;
  double t10410;
  double t10411;
  double t10412;
  double t10404;
  double t10405;
  double t10406;
  double t10407;
  double t10437;
  double t10439;
  double t10440;
  double t10442;
  double t10443;
  double t10444;
  double t10450;
  double t10451;
  double t10452;
  double t10453;
  double t10454;
  double t10455;
  double t10456;
  double t10463;
  double t10465;
  double t10467;
  double t10468;
  double t10470;
  double t10471;
  double t10472;
  double t10461;
  double t10462;
  double t10469;
  double t10473;
  double t10476;
  double t10477;
  double t10479;
  double t10480;
  double t10482;
  double t10485;
  double t10486;
  double t10487;
  double t10489;
  double t10490;
  double t10491;
  double t10492;
  double t10493;
  double t10494;
  double t10502;
  double t10503;
  double t10504;
  double t10506;
  double t10508;
  double t10511;
  double t10516;
  double t10517;
  double t10518;
  double t10524;
  double t10525;
  double t10529;
  double t10531;
  double t10536;
  double t10538;
  double t10539;
  double t10541;
  double t10542;
  double t10584;
  double t10585;
  double t10591;
  double t10594;
  double t10659;
  double t10663;
  double t10667;
  double t10669;
  double t10762;
  double t10767;
  double t10776;
  double t10780;
  double t10816;
  double t10822;
  double t10830;
  double t10831;
  double t10893;
  double t10894;
  double t10896;
  double t10898;
  double t10899;
  double t10901;
  double t10902;
  double t10912;
  double t10913;
  double t10914;
  double t10915;
  double t10918;
  double t10919;
  double t10873;
  double t10877;
  double t10882;
  double t10884;
  double t10973;
  double t10976;
  double t10981;
  double t10983;
  t128 = Cos(var1[4]);
  t186 = Cos(var1[6]);
  t203 = -1.*t186;
  t264 = 1. + t203;
  t280 = 0.15121*t264;
  t300 = Sin(var1[6]);
  t163 = Sin(var1[5]);
  t621 = Cos(var1[5]);
  t1024 = Cos(var1[7]);
  t1074 = -1.*t1024;
  t1083 = 1. + t1074;
  t1245 = Sin(var1[7]);
  t1679 = Sin(var1[4]);
  t1946 = -1. + t1024;
  t859 = -1.*t128*t186*t163;
  t879 = -1.*t128*t621*t300;
  t969 = t859 + t879;
  t1311 = t128*t621*t186;
  t1315 = -1.*t128*t163*t300;
  t1342 = t1311 + t1315;
  t2412 = Cos(var1[8]);
  t3249 = -1.*t2412;
  t3317 = 1. + t3249;
  t3425 = Sin(var1[8]);
  t2011 = 4.e-6*t1946*t1679;
  t2016 = 1.6e-11*t1946;
  t2118 = 1. + t2016;
  t2258 = t2118*t969;
  t2312 = 4.e-6*t1342*t1245;
  t2355 = t2011 + t2258 + t2312;
  t4584 = -1. + t2412;
  t4163 = t1024*t1679;
  t4203 = 4.e-6*t1946*t969;
  t4237 = t1342*t1245;
  t4244 = t4163 + t4203 + t4237;
  t3481 = -1.000000000016*t1083;
  t3815 = 1. + t3481;
  t3957 = t3815*t1342;
  t3974 = -1.*t1679*t1245;
  t3975 = -4.e-6*t969*t1245;
  t3987 = t3957 + t3974 + t3975;
  t4996 = -1.000000000016*t3317;
  t5074 = 1. + t4996;
  t4663 = 1.6e-11*t4584;
  t1417 = 0.281210000008499*t1083;
  t1447 = 0.03874900000062*t1245;
  t4277 = 5.136e-14*var1[8];
  t4345 = -0.03874900000062*t3317;
  t2371 = -1.284e-8*var1[8];
  t4737 = 1. + t4663;
  t3335 = -1.5499600000248e-7*t3317;
  t4080 = 0.503210000016051*t3317;
  t5673 = 1.6e-11*t3317;
  t5688 = 1. + t5673 + t4663;
  t5792 = 4.e-6*t4584;
  t5919 = -4.e-6*t2412;
  t5923 = t5792 + t5919;
  t1682 = 4.9936e-13*var1[7];
  t1684 = -0.03874900000062*t1083;
  t1832 = 0.281210000004*t1245;
  t6013 = 5.9484e-7*t4584;
  t6029 = -0.03875*t2412;
  t6059 = -0.299999999992*t3425;
  t6094 = t4277 + t4345 + t6013 + t6029 + t6059;
  t6128 = 0.14871*t4737;
  t6271 = -1.55e-7*t4584;
  t6278 = -1.199999999968e-6*t3425;
  t6430 = t2371 + t6128 + t3335 + t6271 + t6278;
  t6509 = 0.80321*t5074;
  t6604 = -4.05159380016e-7*t3425;
  t6623 = t6509 + t4080 + t6604;
  t1013 = -1.2484e-7*var1[7];
  t1122 = -1.5499600000248e-7*t1083;
  t1252 = 1.124840000016e-6*t1245;
  t6676 = 4.e-6*t1946*t5688;
  t6682 = t1024*t5923;
  t6684 = t6676 + t6682;
  t6095 = t1245*t6094;
  t6479 = 4.e-6*t1245*t6430;
  t6655 = t3815*t6623;
  t6657 = t1417 + t1447 + t6095 + t6479 + t6655;
  t6770 = -1. + t5673;
  t6771 = 4.e-6*t6770;
  t6777 = 4.e-6*t3317;
  t6784 = t6771 + t6777;
  t6807 = t5673 + t3249;
  t6754 = 4.e-6*t1946*t6094;
  t6756 = t2118*t6430;
  t6759 = -4.e-6*t1245*t6623;
  t6760 = t1013 + t1122 + t1252 + t6754 + t6756 + t6759;
  t6689 = t1024*t6094;
  t6691 = 4.e-6*t1946*t6430;
  t6696 = -1.*t1245*t6623;
  t6698 = t1682 + t1684 + t1832 + t6689 + t6691 + t6696;
  t6792 = 4.e-6*t1946*t6784;
  t6830 = t1024*t6807;
  t6845 = 1.000000000016*t1245*t3425;
  t6862 = t6792 + t6830 + t6845;
  t5217 = -4.e-6*t5074*t1245;
  t5300 = -4.e-6*t2118*t3425;
  t5398 = -4.e-6*t1946*t3425;
  t5402 = t5217 + t5300 + t5398;
  t5444 = -0.15121*t5402;
  t5446 = t3815*t5074;
  t5478 = -1.000000000016*t1245*t3425;
  t5607 = t5446 + t5478;
  t5633 = 0.15121*t5607;
  t5744 = 4.e-6*t5688*t1245;
  t5952 = t5923*t1245;
  t6012 = t5744 + t5952;
  t6662 = t6012*t6657;
  t6699 = t6684*t6698;
  t6706 = t2118*t5688;
  t6720 = 4.e-6*t1946*t5923;
  t6752 = t6706 + t6720;
  t6761 = t6752*t6760;
  t6764 = t6662 + t6699 + t6761;
  t6873 = t6764*t6862;
  t6874 = 4.e-6*t6784*t1245;
  t6895 = t6807*t1245;
  t6904 = -1.000000000016*t3815*t3425;
  t6905 = t6874 + t6895 + t6904;
  t6906 = -1.*t6657*t6905;
  t6908 = t2118*t6784;
  t6909 = 4.e-6*t1946*t6807;
  t6910 = 4.000000000064e-6*t1245*t3425;
  t6915 = t6908 + t6909 + t6910;
  t6916 = -1.*t6760*t6915;
  t6918 = -1.*t6698*t6862;
  t6921 = t6906 + t6916 + t6918;
  t6922 = t6684*t6921;
  t6923 = t5444 + t5633 + t6873 + t6922;
  t6932 = t5923*t6094;
  t6934 = t5688*t6430;
  t6935 = t6932 + t6934;
  t6951 = -1.*t6807*t6094;
  t6968 = -1.*t6784*t6430;
  t6970 = 1.000000000016*t6623*t3425;
  t6976 = t6951 + t6968 + t6970;
  t6931 = 0.038749*t5074;
  t6938 = t6784*t6935;
  t6948 = -0.281210000004*t3425;
  t6977 = t5688*t6976;
  t6978 = -1.*t6807*t6935;
  t6979 = -1.*t5923*t6976;
  t6981 = t6978 + t6979;
  t6982 = 4.e-6*t6981;
  t6984 = t6931 + t6938 + t6948 + t6977 + t6982;
  t7017 = -1.*t5074*t1245;
  t7047 = -1.6e-11*t1946*t3425;
  t7070 = -1.*t1024*t3425;
  t7072 = t7017 + t7047 + t7070;
  t7089 = t1679*t7072;
  t7108 = -1.*t300*t5402;
  t7117 = t186*t5607;
  t7124 = t7108 + t7117;
  t7125 = t621*t7124;
  t7126 = t186*t5402;
  t7132 = t300*t5607;
  t7135 = t7126 + t7132;
  t7136 = -1.*t163*t7135;
  t7143 = t7125 + t7136;
  t7144 = t128*t7143;
  t7147 = t7089 + t7144;
  t413 = -0.15121*t300;
  t747 = 0.15121*t300;
  t7238 = t300*t6657;
  t7254 = t186*t6760;
  t7265 = t280 + t413 + t7238 + t7254;
  t7305 = t186*t6657;
  t7311 = -1.*t300*t6760;
  t7312 = t280 + t747 + t7305 + t7311;
  t7219 = t186*t6752;
  t7220 = t300*t6012;
  t7224 = t7219 + t7220;
  t7266 = t7224*t7265;
  t7282 = -1.*t6752*t300;
  t7285 = t186*t6012;
  t7291 = t7282 + t7285;
  t7315 = t7291*t7312;
  t7316 = t7266 + t7315 + t6699;
  t7325 = t7316*t6862;
  t7326 = t300*t6905;
  t7327 = t186*t6915;
  t7328 = t7326 + t7327;
  t7329 = -1.*t7265*t7328;
  t7335 = t186*t6905;
  t7336 = -1.*t300*t6915;
  t7344 = t7335 + t7336;
  t7345 = -1.*t7312*t7344;
  t7350 = t6918 + t7329 + t7345;
  t7352 = t6684*t7350;
  t7356 = t7325 + t7352;
  t7434 = Sin(var1[3]);
  t7438 = t163*t7124;
  t7455 = t621*t7135;
  t7492 = t7438 + t7455;
  t7505 = t7434*t7492;
  t7522 = Cos(var1[3]);
  t7524 = t128*t7072;
  t7527 = -1.*t1679*t7143;
  t7538 = t7524 + t7527;
  t7539 = t7522*t7538;
  t7547 = t7505 + t7539;
  t7561 = t7522*t7492;
  t7562 = -1.*t7434*t7538;
  t7564 = t7561 + t7562;
  t7769 = t163*t7291;
  t7776 = t621*t7224;
  t7784 = t7769 + t7776;
  t7716 = -1.*t163*t7265;
  t7732 = t621*t7312;
  t7745 = t7716 + t7732;
  t7785 = t621*t7265;
  t7786 = t163*t7312;
  t7800 = t7785 + t7786;
  t7832 = t621*t7328;
  t7835 = t163*t7344;
  t7836 = t7832 + t7835;
  t7625 = t621*t7291;
  t7629 = -1.*t163*t7224;
  t7695 = t7625 + t7629;
  t7766 = t7695*t7745;
  t7805 = t7784*t7800;
  t7830 = t7766 + t7805 + t6699;
  t7837 = t7830*t7836;
  t7840 = -1.*t163*t7328;
  t7852 = t621*t7344;
  t7862 = t7840 + t7852;
  t7864 = -1.*t7745*t7862;
  t7874 = -1.*t7800*t7836;
  t7886 = t6918 + t7864 + t7874;
  t7892 = t7784*t7886;
  t7896 = t7837 + t7892;
  t8039 = t6684*t1679;
  t8048 = t128*t7695;
  t8059 = t8039 + t8048;
  t8070 = t128*t7745;
  t8079 = t1679*t6698;
  t8080 = t8070 + t8079;
  t8095 = t1679*t6862;
  t8096 = t128*t7862;
  t8097 = t8095 + t8096;
  t8023 = -1.*t1679*t7745;
  t8025 = t128*t6698;
  t8035 = t8023 + t8025;
  t7984 = t128*t6684;
  t7987 = -1.*t1679*t7695;
  t8018 = t7984 + t7987;
  t8038 = t8018*t8035;
  t8081 = t8059*t8080;
  t8091 = t7805 + t8038 + t8081;
  t8098 = t8091*t8097;
  t8106 = -1.*t8080*t8097;
  t8107 = t128*t6862;
  t8108 = -1.*t1679*t7862;
  t8109 = t8107 + t8108;
  t8110 = -1.*t8035*t8109;
  t8113 = t7874 + t8106 + t8110;
  t8119 = t8059*t8113;
  t8133 = t8098 + t8119;
  t8187 = -1.*t163*t7124;
  t8188 = -1.*t186*t5402;
  t8196 = -1.*t300*t5607;
  t8199 = t8188 + t8196;
  t8209 = t621*t8199;
  t8211 = t8187 + t8209;
  t8239 = t163*t8199;
  t8240 = t7125 + t8239;
  t8327 = -0.15121*t186;
  t8328 = t8327 + t747 + t7305 + t7311;
  t8271 = 0.15121*t186;
  t8273 = -1.*t300*t6657;
  t8277 = -1.*t186*t6760;
  t8279 = t8271 + t747 + t8273 + t8277;
  t8346 = -1.*t300*t6905;
  t8348 = -1.*t186*t6915;
  t8349 = t8346 + t8348;
  t8311 = -1.*t186*t6752;
  t8312 = -1.*t300*t6012;
  t8318 = t8311 + t8312;
  t8402 = t163*t8318;
  t8408 = t7625 + t8402;
  t8372 = t163*t8349;
  t8373 = t8372 + t7852;
  t8435 = t621*t8279;
  t8444 = -1.*t163*t8328;
  t8445 = t8435 + t8444;
  t8428 = t163*t8279;
  t8429 = t621*t8328;
  t8430 = t8428 + t8429;
  t8471 = t621*t8349;
  t8472 = -1.*t163*t7344;
  t8474 = t8471 + t8472;
  t8418 = t8408*t7800;
  t8431 = t7784*t8430;
  t8390 = -1.*t163*t7291;
  t8395 = t621*t8318;
  t8396 = t8390 + t8395;
  t8460 = -1.*t7800*t8373;
  t8476 = -1.*t8430*t7836;
  t8560 = -1.*t621*t7135;
  t8561 = t8187 + t8560;
  t8601 = -1.*t621*t7265;
  t8602 = -1.*t163*t7312;
  t8603 = t8601 + t8602;
  t8627 = -1.*t621*t7328;
  t8628 = t8627 + t8472;
  t8600 = t7784*t7745;
  t8610 = t7695*t7800;
  t8592 = -1.*t621*t7224;
  t8594 = t8390 + t8592;
  t8624 = -1.*t7800*t7862;
  t8633 = -1.*t7745*t7836;
  t8701 = -1.*t1679*t7072;
  t8703 = -1.*t128*t7143;
  t8704 = t8701 + t8703;
  t8721 = -1.*t128*t7745;
  t8722 = -1.*t1679*t6698;
  t8723 = t8721 + t8722;
  t8817 = -4.e-6*t5688*t1245;
  t8818 = -1.*t5923*t1245;
  t8819 = t8817 + t8818;
  t8809 = 0.03874900000062*t1024;
  t8810 = 0.281210000008499*t1245;
  t8811 = 4.e-6*t1024*t6430;
  t8813 = -1.000000000016*t1245*t6623;
  t8815 = t8809 + t8810 + t6689 + t8811 + t8813;
  t8766 = -4.e-6*t6784*t1245;
  t8767 = -1.*t6807*t1245;
  t8769 = 1.000000000016*t1024*t3425;
  t8770 = t8766 + t8767 + t8769;
  t8798 = 1.124840000016e-6*t1024;
  t8800 = -1.5499600000248e-7*t1245;
  t8801 = -4.e-6*t1245*t6094;
  t8804 = -1.6e-11*t1245*t6430;
  t8805 = -4.e-6*t1024*t6623;
  t8806 = -1.2484e-7 + t8798 + t8800 + t8801 + t8804 + t8805;
  t8781 = 0.281210000004*t1024;
  t8790 = -0.03874900000062*t1245;
  t8791 = -1.*t1245*t6094;
  t8793 = -4.e-6*t1245*t6430;
  t8794 = -1.*t1024*t6623;
  t8795 = 4.9936e-13 + t8781 + t8790 + t8791 + t8793 + t8794;
  t8760 = -1.000000000016*t5074*t1245;
  t8761 = -1.000000000016*t1024*t3425;
  t8763 = t8760 + t8761;
  t8772 = -4.e-6*t1024*t5074;
  t8773 = t8772 + t6910;
  t8778 = 4.e-6*t1024*t5688;
  t8779 = t8778 + t6682;
  t8822 = -1.6e-11*t5688*t1245;
  t8825 = -4.e-6*t5923*t1245;
  t8833 = t8822 + t8825;
  t8797 = t6684*t8795;
  t8821 = t8819*t6698;
  t8865 = -1.*t6698*t8770;
  t8869 = -1.*t8795*t6862;
  t8930 = t186*t8806;
  t8931 = t300*t8815;
  t8934 = t8930 + t8931;
  t8922 = -1.*t300*t8806;
  t8926 = t186*t8815;
  t8927 = t8922 + t8926;
  t8844 = -1.6e-11*t6784*t1245;
  t8853 = -4.e-6*t6807*t1245;
  t8858 = 4.000000000064e-6*t1024*t3425;
  t8859 = t8844 + t8853 + t8858;
  t8870 = 4.e-6*t1024*t6784;
  t8871 = 1.000000000032*t1245*t3425;
  t8873 = t8870 + t6830 + t8871;
  t8897 = t300*t8763;
  t8898 = t186*t8773;
  t8903 = t8897 + t8898;
  t8906 = t186*t8763;
  t8907 = -1.*t300*t8773;
  t8908 = t8906 + t8907;
  t8885 = -1.*t1024*t5074;
  t8895 = t8885 + t6845;
  t8904 = -1.*t163*t8903;
  t8910 = t621*t8908;
  t8912 = t8904 + t8910;
  t8982 = t621*t8903;
  t8986 = t163*t8908;
  t8990 = t8982 + t8986;
  t8992 = t128*t8895;
  t8995 = -1.*t1679*t8912;
  t8997 = t8992 + t8995;
  t8938 = t8779*t300;
  t8939 = t186*t8833;
  t8941 = t8938 + t8939;
  t8944 = t186*t8779;
  t8948 = -1.*t300*t8833;
  t8950 = t8944 + t8948;
  t8964 = -1.*t300*t8859;
  t8965 = t186*t8873;
  t8966 = t8964 + t8965;
  t8971 = t186*t8859;
  t8972 = t300*t8873;
  t8973 = t8971 + t8972;
  t9059 = t621*t8941;
  t9060 = t163*t8950;
  t9064 = t9059 + t9060;
  t9038 = t621*t8927;
  t9049 = -1.*t163*t8934;
  t9051 = t9038 + t9049;
  t9017 = t163*t8927;
  t9018 = t621*t8934;
  t9023 = t9017 + t9018;
  t9070 = t163*t8966;
  t9071 = t621*t8973;
  t9072 = t9070 + t9071;
  t9031 = t7784*t9023;
  t9066 = t9064*t7800;
  t9053 = -1.*t163*t8941;
  t9054 = t621*t8950;
  t9056 = t9053 + t9054;
  t9085 = t621*t8966;
  t9087 = -1.*t163*t8973;
  t9091 = t9085 + t9087;
  t9128 = t1679*t8819;
  t9129 = t128*t9056;
  t9131 = t9128 + t9129;
  t9080 = -1.*t9023*t7836;
  t9083 = -1.*t7800*t9072;
  t9114 = t128*t9051;
  t9116 = t1679*t8795;
  t9119 = t9114 + t9116;
  t9107 = -1.*t1679*t9051;
  t9110 = t128*t8795;
  t9112 = t9107 + t9110;
  t9137 = t1679*t8770;
  t9138 = t128*t9091;
  t9139 = t9137 + t9138;
  t9190 = -4.05159380016e-7*t2412;
  t9191 = -0.2999999999968*t3425;
  t9192 = t9190 + t9191;
  t9205 = -1.199999999968e-6*t2412;
  t9208 = 1.620637520064e-12*t3425;
  t9212 = -1.284e-8 + t9205 + t9208;
  t9217 = -0.299999999992*t2412;
  t9218 = 4.05159380016e-7*t3425;
  t9223 = 5.136e-14 + t9217 + t9218;
  t9236 = t3815*t9192;
  t9243 = 4.e-6*t1245*t9212;
  t9253 = t1245*t9223;
  t9254 = t9236 + t9243 + t9253;
  t9174 = 1.000000000016*t2412*t1245;
  t9175 = 1.6000000000256e-11*t1946*t3425;
  t9180 = t9174 + t9175 + t8769;
  t9193 = -4.e-6*t1245*t9192;
  t9213 = t2118*t9212;
  t9224 = 4.e-6*t1946*t9223;
  t9225 = t9193 + t9213 + t9224;
  t9231 = -1.*t1245*t9192;
  t9232 = 4.e-6*t1946*t9212;
  t9233 = t1024*t9223;
  t9234 = t9231 + t9232 + t9233;
  t9292 = t5688*t9212;
  t9295 = t5923*t9223;
  t9297 = t9292 + t9295;
  t9302 = 1.000000000016*t2412*t6623;
  t9307 = -1.*t6784*t9212;
  t9314 = -1.*t6807*t9223;
  t9316 = 1.000000000016*t9192*t3425;
  t9318 = -1.000000000016*t6094*t3425;
  t9321 = -4.000000000064e-6*t6430*t3425;
  t9324 = t9302 + t9307 + t9314 + t9316 + t9318 + t9321;
  t9170 = -1.000000000016*t2412*t1245;
  t9171 = t9170 + t6904;
  t9186 = -4.e-6*t2118*t2412;
  t9187 = -4.e-6*t1946*t2412;
  t9188 = t9186 + t9187 + t6910;
  t9235 = t6684*t9234;
  t9277 = -1.*t6698*t9180;
  t9282 = -1.*t9234*t6862;
  t9377 = t186*t9225;
  t9379 = t300*t9254;
  t9381 = t9377 + t9379;
  t9366 = -1.*t300*t9225;
  t9368 = t186*t9254;
  t9371 = t9366 + t9368;
  t9264 = 4.000000000064e-6*t2412*t1245;
  t9265 = 4.000000000064e-6*t2118*t3425;
  t9268 = 4.000000000064e-6*t1946*t3425;
  t9272 = t9264 + t9265 + t9268;
  t9283 = -1.000000000016*t3815*t2412;
  t9284 = t9283 + t8871;
  t9349 = t300*t9171;
  t9350 = t186*t9188;
  t9352 = t9349 + t9350;
  t9354 = t186*t9171;
  t9356 = -1.*t300*t9188;
  t9357 = t9354 + t9356;
  t9344 = -1.6e-11*t1946*t2412;
  t9345 = -1.*t1024*t2412;
  t9346 = t9344 + t9345 + t6845;
  t9353 = -1.*t163*t9352;
  t9358 = t621*t9357;
  t9359 = t9353 + t9358;
  t9416 = t621*t9352;
  t9418 = t163*t9357;
  t9421 = t9416 + t9418;
  t9425 = t128*t9346;
  t9426 = -1.*t1679*t9359;
  t9429 = t9425 + t9426;
  t9389 = -1.*t300*t9272;
  t9390 = t186*t9284;
  t9391 = t9389 + t9390;
  t9394 = t186*t9272;
  t9396 = t300*t9284;
  t9397 = t9394 + t9396;
  t9447 = t621*t9371;
  t9448 = -1.*t163*t9381;
  t9450 = t9447 + t9448;
  t9442 = t163*t9371;
  t9443 = t621*t9381;
  t9445 = t9442 + t9443;
  t9456 = t163*t9391;
  t9458 = t621*t9397;
  t9460 = t9456 + t9458;
  t9446 = t7784*t9445;
  t9469 = t621*t9391;
  t9471 = -1.*t163*t9397;
  t9473 = t9469 + t9471;
  t9465 = -1.*t9445*t7836;
  t9468 = -1.*t7800*t9460;
  t9491 = t128*t9450;
  t9494 = t1679*t9234;
  t9496 = t9491 + t9494;
  t9484 = -1.*t1679*t9450;
  t9485 = t128*t9234;
  t9486 = t9484 + t9485;
  t9508 = t1679*t9180;
  t9510 = t128*t9473;
  t9511 = t9508 + t9510;
  t515 = t280 + t413;
  t765 = t280 + t747;
  t9545 = t7522*t621;
  t9546 = -1.*t7434*t1679*t163;
  t9547 = t9545 + t9546;
  t9552 = t621*t7434*t1679;
  t9558 = t7522*t163;
  t9560 = t9552 + t9558;
  t1290 = t1013 + t1122 + t1252;
  t1624 = t1417 + t1447;
  t1833 = t1682 + t1684 + t1832;
  t9562 = t186*t9547;
  t9563 = -1.*t9560*t300;
  t9566 = t9562 + t9563;
  t9568 = t186*t9560;
  t9569 = t9547*t300;
  t9570 = t9568 + t9569;
  t3456 = 2.012840000032e-6*t3425;
  t3457 = t2371 + t3335 + t3456;
  t4120 = 0.03874900000062*t3425;
  t4151 = t4080 + t4120;
  t4355 = 0.503210000008*t3425;
  t4427 = t4277 + t4345 + t4355;
  t9573 = -4.e-6*t128*t1946*t7434;
  t9574 = t2118*t9566;
  t9575 = 4.e-6*t9570*t1245;
  t9576 = t9573 + t9574 + t9575;
  t9588 = -1.*t128*t1024*t7434;
  t9589 = 4.e-6*t1946*t9566;
  t9590 = t9570*t1245;
  t9591 = t9588 + t9589 + t9590;
  t9582 = t3815*t9570;
  t9584 = t128*t7434*t1245;
  t9585 = -4.e-6*t9566*t1245;
  t9586 = t9582 + t9584 + t9585;
  t9621 = 0.15121*t6905;
  t9626 = -1.*t6012*t6657;
  t9637 = -1.*t6684*t6698;
  t9643 = -1.*t6752*t6760;
  t9650 = t9626 + t9637 + t9643;
  t9651 = t9650*t7072;
  t9653 = -0.15121*t6915;
  t9654 = t6760*t5402;
  t9655 = t6698*t7072;
  t9656 = t6657*t5607;
  t9658 = t9654 + t9655 + t9656;
  t9659 = t6684*t9658;
  t9661 = t9621 + t9651 + t9653 + t9659;
  t9300 = -0.03874900000062*t3425;
  t9667 = -1.*t5923*t6094;
  t9669 = -1.*t5688*t6430;
  t9671 = t9667 + t9669;
  t9673 = t5074*t6623;
  t9676 = -1.*t6094*t3425;
  t9677 = -4.e-6*t6430*t3425;
  t9678 = t9673 + t9676 + t9677;
  t9664 = 1.e-6*t6784;
  t9665 = 0.28121*t6807;
  t9672 = -4.e-6*t9671*t3425;
  t9680 = t5688*t9678;
  t9681 = t9671*t3425;
  t9683 = -1.*t5923*t9678;
  t9684 = t9681 + t9683;
  t9685 = 4.e-6*t9684;
  t9686 = t9664 + t9665 + t9300 + t9672 + t9680 + t9685;
  t9694 = -1.*t7224*t7265;
  t9696 = -1.*t7291*t7312;
  t9699 = t9694 + t9696 + t9637;
  t9700 = t9699*t7072;
  t9701 = t7312*t7124;
  t9704 = t7265*t7135;
  t9705 = t9655 + t9701 + t9704;
  t9706 = t6684*t9705;
  t9711 = t9700 + t9706;
  t9718 = -1.*t7695*t7745;
  t9719 = -1.*t7784*t7800;
  t9720 = t9718 + t9719 + t9637;
  t9721 = t9720*t7492;
  t9722 = t7800*t7492;
  t9724 = t7745*t7143;
  t9729 = t9655 + t9722 + t9724;
  t9736 = t7784*t9729;
  t9738 = t9721 + t9736;
  t9747 = t7434*t7836;
  t9748 = t7522*t8109;
  t9749 = t9747 + t9748;
  t9753 = t7522*t7836;
  t9754 = -1.*t7434*t8109;
  t9756 = t9753 + t9754;
  t9770 = -1.*t8018*t8035;
  t9773 = -1.*t8059*t8080;
  t9774 = t9719 + t9770 + t9773;
  t9775 = t9774*t7147;
  t9776 = t8080*t7147;
  t9777 = t8035*t7538;
  t9778 = t9722 + t9776 + t9777;
  t9779 = t8059*t9778;
  t9780 = t9775 + t9779;
  t9841 = -1.*t8408*t7800;
  t9844 = -1.*t7784*t8430;
  t9852 = t7800*t8240;
  t9853 = t8430*t7492;
  t9914 = -1.*t7784*t7745;
  t9917 = -1.*t7695*t7800;
  t9928 = t7745*t7492;
  t9932 = t7800*t7143;
  t8735 = -1.*t1679*t6862;
  t8736 = -1.*t128*t7862;
  t8737 = t8735 + t8736;
  t8712 = -1.*t6684*t1679;
  t8713 = -1.*t128*t7695;
  t8716 = t8712 + t8713;
  t10032 = -1.*t6684*t8795;
  t10039 = -1.*t8819*t6698;
  t10060 = t8795*t7072;
  t10063 = t6698*t8895;
  t9148 = t128*t8770;
  t9150 = -1.*t1679*t9091;
  t9152 = t9148 + t9150;
  t10095 = -1.*t7784*t9023;
  t10100 = -1.*t9064*t7800;
  t9124 = t128*t8819;
  t9125 = -1.*t1679*t9056;
  t9126 = t9124 + t9125;
  t8896 = t1679*t8895;
  t8913 = t128*t8912;
  t8915 = t8896 + t8913;
  t10105 = t9023*t7492;
  t10109 = t7800*t8990;
  t10196 = -1.*t5688*t9212;
  t10198 = -1.*t5923*t9223;
  t10199 = t10196 + t10198;
  t10204 = t5074*t9192;
  t10205 = -1.*t2412*t6094;
  t10206 = -4.e-6*t2412*t6430;
  t10207 = -1.000000000016*t6623*t3425;
  t10209 = -4.e-6*t9212*t3425;
  t10210 = -1.*t9223*t3425;
  t10211 = t10204 + t10205 + t10206 + t10207 + t10209 + t10210;
  t10159 = -1.*t6684*t9234;
  t10170 = t9234*t7072;
  t10179 = t6698*t9346;
  t9517 = t128*t9180;
  t9522 = -1.*t1679*t9473;
  t9523 = t9517 + t9522;
  t10256 = -1.*t7784*t9445;
  t9347 = t1679*t9346;
  t9360 = t128*t9359;
  t9361 = t9347 + t9360;
  t10267 = t9445*t7492;
  t10275 = t7800*t9421;
  t10320 = t621*t7434;
  t10321 = t7522*t1679*t163;
  t10324 = t10320 + t10321;
  t10328 = -1.*t7522*t621*t1679;
  t10329 = t7434*t163;
  t10330 = t10328 + t10329;
  t10357 = t7434*t7784;
  t10359 = t7522*t8018;
  t10362 = t10357 + t10359;
  t10373 = t7522*t7784;
  t10374 = -1.*t7434*t8018;
  t10380 = t10373 + t10374;
  t10332 = t186*t10324;
  t10333 = -1.*t10330*t300;
  t10335 = t10332 + t10333;
  t10341 = t186*t10330;
  t10344 = t10324*t300;
  t10345 = t10341 + t10344;
  t10395 = 4.e-6*t7522*t128*t1946;
  t10397 = t2118*t10335;
  t10401 = 4.e-6*t10345*t1245;
  t10402 = t10395 + t10397 + t10401;
  t10409 = t7522*t128*t1024;
  t10410 = 4.e-6*t1946*t10335;
  t10411 = t10345*t1245;
  t10412 = t10409 + t10410 + t10411;
  t10404 = t3815*t10345;
  t10405 = -1.*t7522*t128*t1245;
  t10406 = -4.e-6*t10335*t1245;
  t10407 = t10404 + t10405 + t10406;
  t10437 = -0.15121*t6752;
  t10439 = 0.15121*t6012;
  t10440 = -1.*t6760*t5402;
  t10442 = -1.*t6698*t7072;
  t10443 = -1.*t6657*t5607;
  t10444 = t10440 + t10442 + t10443;
  t10450 = t6862*t10444;
  t10451 = t6657*t6905;
  t10452 = t6760*t6915;
  t10453 = t6698*t6862;
  t10454 = t10451 + t10452 + t10453;
  t10455 = t7072*t10454;
  t10456 = t10437 + t10439 + t10450 + t10455;
  t10463 = -1.*t5074*t6623;
  t10465 = t6094*t3425;
  t10467 = 4.e-6*t6430*t3425;
  t10468 = t10463 + t10465 + t10467;
  t10470 = t6807*t6094;
  t10471 = t6784*t6430;
  t10472 = t10470 + t10471 + t10207;
  t10461 = 1.e-6*t5688;
  t10462 = 0.28121*t5923;
  t10469 = t6784*t10468;
  t10473 = -4.e-6*t3425*t10472;
  t10476 = -1.*t6807*t10468;
  t10477 = t3425*t10472;
  t10479 = t10476 + t10477;
  t10480 = 4.e-6*t10479;
  t10482 = t10461 + t10462 + t10469 + t10473 + t10480;
  t10485 = -1.*t7312*t7124;
  t10486 = -1.*t7265*t7135;
  t10487 = t10442 + t10485 + t10486;
  t10489 = t6862*t10487;
  t10490 = t7265*t7328;
  t10491 = t7312*t7344;
  t10492 = t10453 + t10490 + t10491;
  t10493 = t7072*t10492;
  t10494 = t10489 + t10493;
  t10502 = -1.*t7800*t7492;
  t10503 = -1.*t7745*t7143;
  t10504 = t10442 + t10502 + t10503;
  t10506 = t7836*t10504;
  t10508 = t7745*t7862;
  t10511 = t7800*t7836;
  t10516 = t10453 + t10508 + t10511;
  t10517 = t7492*t10516;
  t10518 = t10506 + t10517;
  t10524 = -1.*t8080*t7147;
  t10525 = -1.*t8035*t7538;
  t10529 = t10502 + t10524 + t10525;
  t10531 = t8097*t10529;
  t10536 = t8080*t8097;
  t10538 = t8035*t8109;
  t10539 = t10511 + t10536 + t10538;
  t10541 = t7147*t10539;
  t10542 = t10531 + t10541;
  t10584 = -1.*t7800*t8240;
  t10585 = -1.*t8430*t7492;
  t10591 = t7800*t8373;
  t10594 = t8430*t7836;
  t10659 = -1.*t7745*t7492;
  t10663 = -1.*t7800*t7143;
  t10667 = t7800*t7862;
  t10669 = t7745*t7836;
  t10762 = -1.*t8795*t7072;
  t10767 = -1.*t6698*t8895;
  t10776 = t6698*t8770;
  t10780 = t8795*t6862;
  t10816 = -1.*t9023*t7492;
  t10822 = -1.*t7800*t8990;
  t10830 = t9023*t7836;
  t10831 = t7800*t9072;
  t10893 = -1.000000000016*t2412*t6623;
  t10894 = t6784*t9212;
  t10896 = t6807*t9223;
  t10898 = -1.000000000016*t9192*t3425;
  t10899 = 1.000000000016*t6094*t3425;
  t10901 = 4.000000000064e-6*t6430*t3425;
  t10902 = t10893 + t10894 + t10896 + t10898 + t10899 + t10901;
  t10912 = -1.*t5074*t9192;
  t10913 = t2412*t6094;
  t10914 = 4.e-6*t2412*t6430;
  t10915 = 4.e-6*t9212*t3425;
  t10918 = t9223*t3425;
  t10919 = t10912 + t10913 + t10914 + t6970 + t10915 + t10918;
  t10873 = -1.*t9234*t7072;
  t10877 = -1.*t6698*t9346;
  t10882 = t6698*t9180;
  t10884 = t9234*t6862;
  t10973 = -1.*t9445*t7492;
  t10976 = -1.*t7800*t9421;
  t10981 = t9445*t7836;
  t10983 = t7800*t9460;
  p_output1[0]=t1342*t1624 + t1679*t1833 + t2355*t3457 + t3987*t4151 + t4244*t4427 - 0.03875*(t3425*t3987 + t2412*t4244 + 4.e-6*t2355*t4584) + 0.14871*(4.e-6*t3425*t3987 + 4.e-6*t4244*t4584 + t2355*t4737) + 0.80321*(-4.e-6*t2355*t3425 - 1.*t3425*t4244 + t3987*t5074) - 1.*t128*t163*t515 + t128*t621*t765 + t1290*t969 + var1[0] + t7147*var2[0] + t7564*var2[1] + t7547*var2[2] + t8133*var2[3] + ((-1.*t7434*t7492 - 1.*t7522*t7538)*var2[1] + t7564*var2[2])*var2[3] + t7896*var2[4] + (t7538*var2[0] - 1.*t7434*t8704*var2[1] + t7522*t8704*var2[2] + (t8091*t8109 + t8018*t8113 + t8097*(t8035*t8059 + t8018*t8080 + t8035*t8716 + t8018*t8723) + t8059*(-1.*t8035*t8097 - 1.*t8080*t8109 - 1.*t8109*t8723 - 1.*t8035*t8737))*var2[3])*var2[4] + t7356*var2[5] + (t128*t8561*var2[0] + (t7143*t7522 + t1679*t7434*t8561)*var2[1] + (t7143*t7434 - 1.*t1679*t7522*t8561)*var2[2] + (t128*t8113*t8594 + t8097*(-1.*t1679*t8035*t8594 + t128*t8080*t8594 + t8600 - 1.*t1679*t8018*t8603 + t128*t8059*t8603 + t8610) + t128*t8091*t8628 + t8059*(-1.*t128*t8097*t8603 + t1679*t8109*t8603 + t8624 + t1679*t8035*t8628 - 1.*t128*t8080*t8628 + t8633))*var2[3] + (t7830*t7862 + t7695*t7886 + t7836*(t7745*t8594 + t8600 + t7695*t8603 + t8610) + t7784*(-1.*t7862*t8603 + t8624 - 1.*t7745*t8628 + t8633))*var2[4])*var2[5] + t6923*var2[6] + (t128*t8211*var2[0] + (t1679*t7434*t8211 + t7522*t8240)*var2[1] + (-1.*t1679*t7522*t8211 + t7434*t8240)*var2[2] + (t128*t8113*t8396 + t8097*(-1.*t1679*t8035*t8396 + t128*t8080*t8396 + t8418 + t8431 - 1.*t1679*t8018*t8445 + t128*t8059*t8445) + t128*t8091*t8474 + t8059*(-1.*t128*t8097*t8445 + t1679*t8109*t8445 + t8460 + t1679*t8035*t8474 - 1.*t128*t8080*t8474 + t8476))*var2[3] + (t7830*t8373 + t7886*t8408 + t7836*(t7745*t8396 + t8418 + t8431 + t7695*t8445) + t7784*(-1.*t7862*t8445 + t8460 - 1.*t7745*t8474 + t8476))*var2[4] + (t6862*(t7265*t7291 + t7291*t8279 + t7312*t8318 + t7224*t8328) + t6684*(-1.*t7265*t7344 - 1.*t7344*t8279 - 1.*t7328*t8328 - 1.*t7312*t8349))*var2[5])*var2[6] + t6984*var2[7] + (t8915*var2[0] + (t7522*t8990 - 1.*t7434*t8997)*var2[1] + (t7434*t8990 + t7522*t8997)*var2[2] + (t8113*t9131 + t8097*(t9031 + t9066 + t8018*t9112 + t8059*t9119 + t8035*t9126 + t8080*t9131) + t8091*t9139 + t8059*(t9080 + t9083 - 1.*t8109*t9112 - 1.*t8097*t9119 - 1.*t8080*t9139 - 1.*t8035*t9152))*var2[3] + (t7886*t9064 + t7836*(t8797 + t8821 + t9031 + t7695*t9051 + t7745*t9056 + t9066) + t7830*t9072 + t7784*(t8865 + t8869 - 1.*t7862*t9051 + t9080 + t9083 - 1.*t7745*t9091))*var2[4] + (t7316*t8770 + t7350*t8819 + t6862*(t8797 + t8821 + t7291*t8927 + t7224*t8934 + t7265*t8941 + t7312*t8950) + t6684*(t8865 + t8869 - 1.*t7344*t8927 - 1.*t7328*t8934 - 1.*t7312*t8966 - 1.*t7265*t8973))*var2[5] + (0.15121*t8763 + t6764*t8770 - 0.15121*t8773 + t6921*t8819 + t6862*(t6657*t8779 + t8797 + t6752*t8806 + t6012*t8815 + t8821 + t6760*t8833) + t6684*(-1.*t6915*t8806 - 1.*t6905*t8815 - 1.*t6760*t8859 + t8865 + t8869 - 1.*t6657*t8873))*var2[6])*var2[7] - 4.05160619990483e-7*var2[8] + (t9361*var2[0] + (t7522*t9421 - 1.*t7434*t9429)*var2[1] + (t7434*t9421 + t7522*t9429)*var2[2] + (t8097*(t9446 + t8018*t9486 + t8059*t9496) + t8091*t9511 + t8059*(t9465 + t9468 - 1.*t8109*t9486 - 1.*t8097*t9496 - 1.*t8080*t9511 - 1.*t8035*t9523))*var2[3] + (t7836*(t9235 + t9446 + t7695*t9450) + t7830*t9460 + t7784*(t9277 + t9282 - 1.*t7862*t9450 + t9465 + t9468 - 1.*t7745*t9473))*var2[4] + (t7316*t9180 + t6862*(t9235 + t7291*t9371 + t7224*t9381) + t6684*(t9277 + t9282 - 1.*t7344*t9371 - 1.*t7328*t9381 - 1.*t7312*t9391 - 1.*t7265*t9397))*var2[5] + (0.15121*t9171 + t6764*t9180 - 0.15121*t9188 + t6862*(t6752*t9225 + t9235 + t6012*t9254) + t6684*(-1.*t6915*t9225 - 1.*t6905*t9254 - 1.*t6760*t9272 + t9277 + t9282 - 1.*t6657*t9284))*var2[6] + (-0.281210000004*t2412 + 4.000000000064e-6*t3425*t6935 + t6784*t9297 + t9300 + t5688*t9324 + 4.e-6*(-1.000000000016*t3425*t6935 - 1.*t6807*t9297 - 1.*t5923*t9324))*var2[7])*var2[8] + t7147*var3[0] + t7564*var3[1] + t7547*var3[2] + t8133*var3[3] + t7896*var3[4] + t7356*var3[5] + t6923*var3[6] + t6984*var3[7] - 4.05160619990483e-7*var3[8] - 1.*var4[0];
  p_output1[1]=-1.*t128*t1833*t7434 + t515*t9547 + t765*t9560 + t1290*t9566 + t1624*t9570 + t3457*t9576 + t4151*t9586 + t4427*t9591 - 0.03875*(4.e-6*t4584*t9576 + t3425*t9586 + t2412*t9591) + 0.80321*(-4.e-6*t3425*t9576 + t5074*t9586 - 1.*t3425*t9591) + 0.14871*(t4737*t9576 + 4.e-6*t3425*t9586 + 4.e-6*t4584*t9591) + var1[1] + t8097*var2[0] + t9756*var2[1] + t9749*var2[2] + t9780*var2[3] + ((-1.*t7434*t7836 - 1.*t7522*t8109)*var2[1] + t9756*var2[2])*var2[3] + t9738*var2[4] + (t8109*var2[0] - 1.*t7434*t8737*var2[1] + t7522*t8737*var2[2] + (t8059*(t7147*t8035 + t7538*t8080 + t8035*t8704 + t7538*t8723) + t7147*(-1.*t8035*t8059 - 1.*t8018*t8080 - 1.*t8035*t8716 - 1.*t8018*t8723) + t7538*t9774 + t8018*t9778)*var2[3])*var2[4] + t9711*var2[5] + (t128*t8628*var2[0] + (t7522*t7862 + t1679*t7434*t8628)*var2[1] + (t7434*t7862 - 1.*t1679*t7522*t8628)*var2[2] + (t128*t8561*t9774 + t128*t8594*t9778 + t7147*(t1679*t8035*t8594 - 1.*t128*t8080*t8594 + t1679*t8018*t8603 - 1.*t128*t8059*t8603 + t9914 + t9917) + t8059*(-1.*t1679*t8035*t8561 + t128*t8080*t8561 + t128*t7147*t8603 - 1.*t1679*t7538*t8603 + t9928 + t9932))*var2[3] + (t7143*t9720 + t7695*t9729 + t7492*(-1.*t7745*t8594 - 1.*t7695*t8603 + t9914 + t9917) + t7784*(t7745*t8561 + t7143*t8603 + t9928 + t9932))*var2[4])*var2[5] + t9661*var2[6] + (t128*t8474*var2[0] + (t7522*t8373 + t1679*t7434*t8474)*var2[1] + (t7434*t8373 - 1.*t1679*t7522*t8474)*var2[2] + (t128*t8211*t9774 + t128*t8396*t9778 + t7147*(t1679*t8035*t8396 - 1.*t128*t8080*t8396 + t1679*t8018*t8445 - 1.*t128*t8059*t8445 + t9841 + t9844) + t8059*(-1.*t1679*t8035*t8211 + t128*t8080*t8211 + t128*t7147*t8445 - 1.*t1679*t7538*t8445 + t9852 + t9853))*var2[3] + (t8240*t9720 + t8408*t9729 + t7492*(-1.*t7745*t8396 - 1.*t7695*t8445 + t9841 + t9844) + t7784*(t7745*t8211 + t7143*t8445 + t9852 + t9853))*var2[4] + (t6684*(t7124*t7265 + t7312*t8199 + t7124*t8279 + t7135*t8328) + t7072*(-1.*t7265*t7291 - 1.*t7291*t8279 - 1.*t7312*t8318 - 1.*t7224*t8328))*var2[5])*var2[6] + t9686*var2[7] + (t9139*var2[0] + (t7522*t9072 - 1.*t7434*t9152)*var2[1] + (t7434*t9072 + t7522*t9152)*var2[2] + (t8059*(t10105 + t10109 + t8080*t8915 + t8035*t8997 + t7538*t9112 + t7147*t9119) + t7147*(t10095 + t10100 - 1.*t8018*t9112 - 1.*t8059*t9119 - 1.*t8035*t9126 - 1.*t8080*t9131) + t8915*t9774 + t9131*t9778)*var2[3] + (t7784*(t10060 + t10063 + t10105 + t10109 + t7745*t8912 + t7143*t9051) + t7492*(t10032 + t10039 + t10095 + t10100 - 1.*t7695*t9051 - 1.*t7745*t9056) + t8990*t9720 + t9064*t9729)*var2[4] + (t6684*(t10060 + t10063 + t7265*t8903 + t7312*t8908 + t7124*t8927 + t7135*t8934) + t7072*(t10032 + t10039 - 1.*t7291*t8927 - 1.*t7224*t8934 - 1.*t7265*t8941 - 1.*t7312*t8950) + t8895*t9699 + t8819*t9705)*var2[5] + (t6684*(t10060 + t10063 + t6657*t8763 + t6760*t8773 + t5402*t8806 + t5607*t8815) + t7072*(t10032 + t10039 - 1.*t6657*t8779 - 1.*t6752*t8806 - 1.*t6012*t8815 - 1.*t6760*t8833) - 0.15121*t8859 + 0.15121*t8873 + t8895*t9650 + t8819*t9658)*var2[6])*var2[7] + 0.300000000004851*var2[8] + (t9511*var2[0] + (t7522*t9460 - 1.*t7434*t9523)*var2[1] + (t7434*t9460 + t7522*t9523)*var2[2] + (t8059*(t10267 + t10275 + t8080*t9361 + t8035*t9429 + t7538*t9486 + t7147*t9496) + t7147*(t10256 - 1.*t8018*t9486 - 1.*t8059*t9496) + t9361*t9774)*var2[3] + (t7784*(t10170 + t10179 + t10267 + t10275 + t7745*t9359 + t7143*t9450) + t7492*(t10159 + t10256 - 1.*t7695*t9450) + t9421*t9720)*var2[4] + (t6684*(t10170 + t10179 + t7265*t9352 + t7312*t9357 + t7124*t9371 + t7135*t9381) + t7072*(t10159 - 1.*t7291*t9371 - 1.*t7224*t9381) + t9346*t9699)*var2[5] + (t6684*(t10170 + t10179 + t6657*t9171 + t6760*t9188 + t5402*t9225 + t5607*t9254) + t7072*(t10159 - 1.*t6752*t9225 - 1.*t6012*t9254) - 0.15121*t9272 + 0.15121*t9284 + t9346*t9650)*var2[6] + (-0.03874900000062*t2412 + 0.281210000008499*t3425 - 4.e-6*t10199*t3425 + t10211*t5688 - 4.e-6*t2412*t9671 + 4.e-6*(t10199*t3425 - 1.*t10211*t5923 + t2412*t9671))*var2[7])*var2[8] + t8097*var3[0] + t9756*var3[1] + t9749*var3[2] + t9780*var3[3] + t9738*var3[4] + t9711*var3[5] + t9661*var3[6] + t9686*var3[7] + 0.300000000004851*var3[8] - 1.*var4[1];
  p_output1[2]=t10335*t1290 + t10345*t1624 + t10402*t3457 + t10407*t4151 + t10412*t4427 - 0.03875*(t10412*t2412 + t10407*t3425 + 4.e-6*t10402*t4584) + 0.14871*(4.e-6*t10407*t3425 + 4.e-6*t10412*t4584 + t10402*t4737) + 0.80321*(-4.e-6*t10402*t3425 - 1.*t10412*t3425 + t10407*t5074) + t10324*t515 + t128*t1833*t7522 + t10330*t765 + var1[2] + t8059*var2[0] + t10380*var2[1] + t10362*var2[2] + t10542*var2[3] + ((-1.*t7434*t7784 - 1.*t7522*t8018)*var2[1] + t10380*var2[2])*var2[3] + t10518*var2[4] + (t8018*var2[0] - 1.*t7434*t8716*var2[1] + t7522*t8716*var2[2] + (t10539*t7538 + t10529*t8109 + t8097*(-1.*t7147*t8035 - 1.*t7538*t8080 - 1.*t8035*t8704 - 1.*t7538*t8723) + t7147*(t8035*t8097 + t8080*t8109 + t8109*t8723 + t8035*t8737))*var2[3])*var2[4] + t10494*var2[5] + (t128*t8594*var2[0] + (t7522*t7695 + t1679*t7434*t8594)*var2[1] + (t7434*t7695 - 1.*t1679*t7522*t8594)*var2[2] + (t10539*t128*t8561 + t8097*(t10659 + t10663 + t1679*t8035*t8561 - 1.*t128*t8080*t8561 - 1.*t128*t7147*t8603 + t1679*t7538*t8603) + t10529*t128*t8628 + t7147*(t10667 + t10669 + t128*t8097*t8603 - 1.*t1679*t8109*t8603 - 1.*t1679*t8035*t8628 + t128*t8080*t8628))*var2[3] + (t10516*t7143 + t10504*t7862 + t7836*(t10659 + t10663 - 1.*t7745*t8561 - 1.*t7143*t8603) + t7492*(t10667 + t10669 + t7862*t8603 + t7745*t8628))*var2[4])*var2[5] + t10456*var2[6] + (t128*t8396*var2[0] + (t1679*t7434*t8396 + t7522*t8408)*var2[1] + (-1.*t1679*t7522*t8396 + t7434*t8408)*var2[2] + (t10539*t128*t8211 + t8097*(t10584 + t10585 + t1679*t8035*t8211 - 1.*t128*t8080*t8211 - 1.*t128*t7147*t8445 + t1679*t7538*t8445) + t10529*t128*t8474 + t7147*(t10591 + t10594 + t128*t8097*t8445 - 1.*t1679*t8109*t8445 - 1.*t1679*t8035*t8474 + t128*t8080*t8474))*var2[3] + (t10516*t8240 + t10504*t8373 + t7836*(t10584 + t10585 - 1.*t7745*t8211 - 1.*t7143*t8445) + t7492*(t10591 + t10594 + t7862*t8445 + t7745*t8474))*var2[4] + (t6862*(-1.*t7124*t7265 - 1.*t7312*t8199 - 1.*t7124*t8279 - 1.*t7135*t8328) + t7072*(t7265*t7344 + t7344*t8279 + t7328*t8328 + t7312*t8349))*var2[5])*var2[6] + t10482*var2[7] + (t9131*var2[0] + (t7522*t9064 - 1.*t7434*t9126)*var2[1] + (t7434*t9064 + t7522*t9126)*var2[2] + (t10539*t8915 + t8097*(t10816 + t10822 - 1.*t8080*t8915 - 1.*t8035*t8997 - 1.*t7538*t9112 - 1.*t7147*t9119) + t10529*t9139 + t7147*(t10830 + t10831 + t8109*t9112 + t8097*t9119 + t8080*t9139 + t8035*t9152))*var2[3] + (t10516*t8990 + t7836*(t10762 + t10767 + t10816 + t10822 - 1.*t7745*t8912 - 1.*t7143*t9051) + t10504*t9072 + t7492*(t10776 + t10780 + t10830 + t10831 + t7862*t9051 + t7745*t9091))*var2[4] + (t10487*t8770 + t10492*t8895 + t6862*(t10762 + t10767 - 1.*t7265*t8903 - 1.*t7312*t8908 - 1.*t7124*t8927 - 1.*t7135*t8934) + t7072*(t10776 + t10780 + t7344*t8927 + t7328*t8934 + t7312*t8966 + t7265*t8973))*var2[5] + (t10444*t8770 + 0.15121*t8779 + t6862*(t10762 + t10767 - 1.*t6657*t8763 - 1.*t6760*t8773 - 1.*t5402*t8806 - 1.*t5607*t8815) - 0.15121*t8833 + t7072*(t10776 + t10780 + t6915*t8806 + t6905*t8815 + t6760*t8859 + t6657*t8873) + t10454*t8895)*var2[6])*var2[7] - 1.284e-8*var2[8] + ((t10539*t9361 + t8097*(t10973 + t10976 - 1.*t8080*t9361 - 1.*t8035*t9429 - 1.*t7538*t9486 - 1.*t7147*t9496) + t10529*t9511 + t7147*(t10981 + t10983 + t8109*t9486 + t8097*t9496 + t8080*t9511 + t8035*t9523))*var2[3] + (t10516*t9421 + t7836*(t10873 + t10877 + t10973 + t10976 - 1.*t7745*t9359 - 1.*t7143*t9450) + t10504*t9460 + t7492*(t10882 + t10884 + t10981 + t10983 + t7862*t9450 + t7745*t9473))*var2[4] + (t10487*t9180 + t10492*t9346 + t6862*(t10873 + t10877 - 1.*t7265*t9352 - 1.*t7312*t9357 - 1.*t7124*t9371 - 1.*t7135*t9381) + t7072*(t10882 + t10884 + t7344*t9371 + t7328*t9381 + t7312*t9391 + t7265*t9397))*var2[5] + (t10444*t9180 + t6862*(t10873 + t10877 - 1.*t6657*t9171 - 1.*t6760*t9188 - 1.*t5402*t9225 - 1.*t5607*t9254) + t7072*(t10882 + t10884 + t6915*t9225 + t6905*t9254 + t6760*t9272 + t6657*t9284) + t10454*t9346)*var2[6] + (-4.e-6*t10472*t2412 + 4.000000000064e-6*t10468*t3425 - 4.e-6*t10902*t3425 + t10919*t6784 + 4.e-6*(t10472*t2412 - 1.000000000016*t10468*t3425 + t10902*t3425 - 1.*t10919*t6807))*var2[7])*var2[8] + t8059*var3[0] + t10380*var3[1] + t10362*var3[2] + t10542*var3[3] + t10518*var3[4] + t10494*var3[5] + t10456*var3[6] + t10482*var3[7] - 1.284e-8*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FlFoot_DiagonalStance2.hh"

namespace TrotStance2
{

void ddh_FlFoot_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
