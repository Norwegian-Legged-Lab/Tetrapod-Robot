/*
 * Automatically Generated from Mathematica.
 * Fri 10 Dec 2021 20:15:58 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t198;
  double t200;
  double t216;
  double t273;
  double t81;
  double t275;
  double t351;
  double t369;
  double t182;
  double t292;
  double t431;
  double t261;
  double t266;
  double t276;
  double t289;
  double t295;
  double t307;
  double t308;
  double t316;
  double t480;
  double t387;
  double t405;
  double t407;
  double t421;
  double t428;
  double t430;
  double t464;
  double t467;
  double t471;
  double t490;
  double t491;
  double t507;
  double t518;
  double t523;
  double t524;
  double t526;
  double t549;
  double t154;
  double t179;
  double t613;
  double t711;
  double t619;
  double t625;
  double t637;
  double t650;
  double t662;
  double t664;
  double t666;
  double t678;
  double t706;
  double t608;
  double t713;
  double t719;
  double t734;
  double t756;
  double t757;
  double t770;
  double t779;
  double t782;
  double t804;
  double t811;
  double t42;
  double t483;
  double t486;
  double t187;
  double t189;
  double t373;
  double t374;
  double t597;
  double t598;
  double t946;
  double t957;
  double t967;
  double t969;
  double t988;
  double t993;
  double t1001;
  double t1004;
  double t1018;
  double t1033;
  double t1073;
  double t1123;
  double t1139;
  double t1144;
  double t1147;
  double t1162;
  double t1177;
  double t1181;
  double t1182;
  double t870;
  double t1274;
  double t1289;
  double t1297;
  double t1313;
  double t1333;
  double t1342;
  double t1348;
  double t1349;
  double t1375;
  double t1379;
  double t1389;
  double t1393;
  double t1396;
  double t1397;
  double t1402;
  double t1405;
  double t835;
  double t837;
  double t844;
  double t709;
  double t815;
  double t830;
  double t1196;
  double t1198;
  double t1201;
  double t1152;
  double t1186;
  double t1188;
  double t1442;
  double t1444;
  double t1452;
  double t1395;
  double t1422;
  double t1428;
  double t1482;
  double t1517;
  double t1545;
  double t1655;
  double t1673;
  double t1674;
  double t1681;
  double t1687;
  double t1688;
  double t1689;
  double t1692;
  double t1701;
  double t1711;
  double t1712;
  double t1718;
  double t1720;
  double t1745;
  double t1755;
  double t1759;
  double t1656;
  double t1640;
  double t1641;
  double t1873;
  double t1874;
  double t1876;
  double t1877;
  double t1891;
  double t1905;
  double t1908;
  double t1910;
  double t2016;
  double t2018;
  double t2021;
  double t2023;
  double t2030;
  double t2034;
  double t2038;
  double t2043;
  double t2120;
  double t2104;
  double t2111;
  double t2114;
  double t2121;
  double t2122;
  double t2124;
  double t2125;
  double t2129;
  double t2138;
  double t2147;
  double t2149;
  double t2151;
  double t2158;
  double t2161;
  double t2162;
  double t2163;
  double t2165;
  double t2168;
  double t2183;
  double t2186;
  double t2188;
  double t2189;
  double t2195;
  double t2196;
  double t2198;
  double t2203;
  double t2226;
  double t2230;
  double t2231;
  double t2233;
  double t2235;
  double t2236;
  double t2243;
  double t2255;
  double t2257;
  double t2261;
  double t2327;
  double t2343;
  double t2346;
  double t2350;
  double t2360;
  double t2404;
  double t2431;
  double t2453;
  double t2532;
  double t2533;
  double t2540;
  double t2550;
  double t2558;
  double t2559;
  double t2560;
  double t2572;
  double t2578;
  double t2579;
  double t2585;
  double t2598;
  double t2605;
  double t2606;
  double t2633;
  double t977;
  double t1013;
  double t1091;
  double t1100;
  double t1195;
  double t1217;
  double t1234;
  double t1306;
  double t1345;
  double t1352;
  double t1357;
  double t1430;
  double t1454;
  double t1459;
  double t331;
  double t478;
  double t550;
  double t577;
  double t832;
  double t912;
  double t920;
  double t587;
  double t924;
  double t935;
  double t2761;
  double t2770;
  double t1122;
  double t1243;
  double t1247;
  double t1368;
  double t1462;
  double t1472;
  double t1481;
  double t1506;
  double t1515;
  double t1536;
  double t1543;
  double t1552;
  double t1573;
  double t1579;
  double t1581;
  double t1584;
  double t1585;
  double t1596;
  double t1603;
  double t1604;
  double t1606;
  double t1607;
  double t1616;
  double t1617;
  double t1619;
  double t1623;
  double t1632;
  double t1789;
  double t1798;
  double t1800;
  double t1709;
  double t1769;
  double t1770;
  double t1642;
  double t1648;
  double t1658;
  double t1660;
  double t1787;
  double t1807;
  double t1809;
  double t1933;
  double t1934;
  double t1938;
  double t1885;
  double t1913;
  double t1923;
  double t1832;
  double t1838;
  double t1839;
  double t1847;
  double t1932;
  double t1947;
  double t1959;
  double t2060;
  double t2063;
  double t2070;
  double t2024;
  double t2045;
  double t2050;
  double t1969;
  double t1970;
  double t1972;
  double t1980;
  double t2052;
  double t2071;
  double t2072;
  double t2211;
  double t2214;
  double t2215;
  double t2194;
  double t2204;
  double t2206;
  double t2127;
  double t2160;
  double t2169;
  double t2181;
  double t2207;
  double t2216;
  double t2219;
  double t2486;
  double t2493;
  double t2503;
  double t2354;
  double t2455;
  double t2471;
  double t2234;
  double t2252;
  double t2280;
  double t2301;
  double t2480;
  double t2509;
  double t2517;
  double t2666;
  double t2667;
  double t2671;
  double t2586;
  double t2640;
  double t2651;
  double t2538;
  double t2556;
  double t2561;
  double t2563;
  double t2655;
  double t2672;
  double t2683;
  double t2792;
  double t2807;
  double t2839;
  double t2853;
  double t2881;
  double t2882;
  double t2762;
  double t2765;
  double t2768;
  double t3382;
  double t3384;
  double t3391;
  double t3363;
  double t3367;
  double t3368;
  double t3371;
  double t3373;
  double t3375;
  double t2929;
  double t2937;
  double t2938;
  double t2946;
  double t2947;
  double t2948;
  double t2965;
  double t2973;
  double t2978;
  double t3072;
  double t3074;
  double t3095;
  double t3096;
  double t3109;
  double t3119;
  double t3137;
  double t3138;
  double t3142;
  double t3152;
  double t3157;
  double t3159;
  double t3166;
  double t3171;
  double t3172;
  double t3181;
  double t3182;
  double t3185;
  double t3191;
  double t3200;
  double t3201;
  double t3206;
  double t3218;
  double t3220;
  double t3249;
  double t3252;
  double t3254;
  double t3261;
  double t3262;
  double t3263;
  double t3283;
  double t3287;
  double t3291;
  double t3297;
  double t3300;
  double t3301;
  double t3321;
  double t3322;
  double t3338;
  double t3344;
  double t3347;
  double t3348;
  double t2726;
  double t2728;
  double t2729;
  double t3723;
  double t3742;
  double t3749;
  double t3751;
  double t3753;
  double t3757;
  double t3760;
  double t3763;
  double t3764;
  double t3771;
  double t3773;
  double t3808;
  double t3811;
  double t3813;
  double t3823;
  double t3827;
  double t3829;
  double t3831;
  double t3843;
  double t3852;
  double t3867;
  double t3871;
  double t3879;
  double t3889;
  double t3903;
  double t3907;
  double t3909;
  double t3915;
  double t3917;
  double t3920;
  double t3921;
  double t3926;
  double t3719;
  double t3969;
  double t3934;
  double t3938;
  double t3948;
  double t3950;
  double t3957;
  double t3959;
  double t3962;
  double t3972;
  double t3974;
  double t3978;
  double t3980;
  double t3983;
  double t3985;
  double t3987;
  double t3988;
  double t3990;
  double t3994;
  double t3996;
  double t3997;
  double t4002;
  double t4003;
  double t4005;
  double t4006;
  double t3712;
  double t3717;
  double t3720;
  double t3721;
  double t3724;
  double t3739;
  double t3800;
  double t3877;
  double t3927;
  double t3930;
  double t3939;
  double t3986;
  double t4012;
  double t4013;
  double t4014;
  double t4015;
  double t4017;
  double t4018;
  double t4019;
  double t4021;
  double t4023;
  double t2740;
  double t2745;
  double t2752;
  double t4041;
  double t4047;
  double t4051;
  double t4030;
  double t4034;
  double t4035;
  double t3932;
  double t4024;
  double t4027;
  double t4063;
  double t4066;
  double t4068;
  double t2730;
  double t2732;
  double t2737;
  double t4304;
  double t4305;
  double t4306;
  double t4069;
  double t4072;
  double t4075;
  double t4076;
  double t4098;
  double t4099;
  double t4103;
  double t4111;
  double t4164;
  double t4170;
  double t4171;
  double t4172;
  double t4200;
  double t4206;
  double t4208;
  double t4212;
  double t4241;
  double t4244;
  double t4248;
  double t4259;
  double t4280;
  double t4282;
  double t4285;
  double t4286;
  double t4535;
  double t4543;
  double t4545;
  double t4546;
  double t4548;
  double t4538;
  double t4580;
  double t4581;
  double t4585;
  double t4540;
  double t4559;
  double t4573;
  double t1849;
  double t1961;
  double t1963;
  double t1668;
  double t1813;
  double t1819;
  double t4842;
  double t4844;
  double t4848;
  double t4852;
  double t4855;
  double t4860;
  double t4865;
  double t4889;
  double t4890;
  double t4892;
  double t4893;
  double t4895;
  double t4897;
  double t4906;
  double t4909;
  double t4921;
  double t4932;
  double t4935;
  double t4937;
  double t4950;
  double t4953;
  double t4955;
  double t4891;
  double t4944;
  double t4946;
  double t4978;
  double t4979;
  double t4981;
  double t4983;
  double t4988;
  double t4992;
  double t4994;
  double t4996;
  double t4997;
  double t5001;
  double t5004;
  double t5017;
  double t4947;
  double t4966;
  double t4967;
  double t4998;
  double t5018;
  double t5021;
  double t5029;
  double t5030;
  double t5035;
  double t1997;
  double t2074;
  double t2090;
  double t5236;
  double t5245;
  double t5246;
  double t5249;
  double t5250;
  double t5251;
  double t5252;
  double t5253;
  double t5255;
  double t5256;
  double t5259;
  double t5265;
  double t5267;
  double t5275;
  double t5276;
  double t5278;
  double t5285;
  double t5286;
  double t5290;
  double t5292;
  double t5297;
  double t5299;
  double t5302;
  double t5307;
  double t5254;
  double t5281;
  double t5320;
  double t5323;
  double t5336;
  double t5339;
  double t5343;
  double t5344;
  double t5362;
  double t5365;
  double t5367;
  double t5333;
  double t5346;
  double t5354;
  double t5378;
  double t5379;
  double t5384;
  double t5389;
  double t5397;
  double t5400;
  double t5404;
  double t2182;
  double t2220;
  double t2221;
  double t5357;
  double t5369;
  double t5370;
  double t5392;
  double t5407;
  double t5414;
  double t5418;
  double t5423;
  double t5431;
  double t2311;
  double t2518;
  double t2524;
  double t2571;
  double t2684;
  double t2700;
  double t4296;
  double t4303;
  double t4332;
  double t4335;
  double t4376;
  double t4381;
  double t4408;
  double t4410;
  double t4444;
  double t4459;
  double t4496;
  double t4499;
  double t5588;
  double t5591;
  double t5593;
  double t5600;
  double t5601;
  double t5602;
  double t4575;
  double t4577;
  double t4640;
  double t4641;
  double t5652;
  double t5658;
  double t5660;
  double t5681;
  double t5684;
  double t5687;
  double t4667;
  double t4677;
  double t4712;
  double t4713;
  double t5703;
  double t5707;
  double t5708;
  double t5758;
  double t5759;
  double t5760;
  double t4748;
  double t4754;
  double t4772;
  double t4795;
  double t4841;
  double t4974;
  double t5043;
  double t5046;
  double t5109;
  double t5113;
  double t5138;
  double t5141;
  double t5178;
  double t5180;
  double t5194;
  double t5198;
  double t5372;
  double t5375;
  double t5452;
  double t5453;
  double t5480;
  double t5484;
  double t5503;
  double t5504;
  double t5535;
  double t5536;
  double t5552;
  double t5553;
  double t5981;
  double t5987;
  double t6048;
  double t6053;
  double t6099;
  double t6107;
  double t6129;
  double t6151;
  double t6211;
  double t6213;
  double t6231;
  double t6233;
  double t6253;
  double t6257;
  double t6268;
  double t6270;
  double t6626;
  double t6629;
  double t6635;
  double t6647;
  double t6651;
  double t6654;
  double t6308;
  double t6309;
  double t6694;
  double t6697;
  double t6698;
  double t6700;
  double t6702;
  double t6703;
  double t6332;
  double t6339;
  double t6355;
  double t6359;
  double t6570;
  double t6574;
  double t6575;
  double t6578;
  double t6580;
  double t6581;
  double t6377;
  double t6378;
  double t7026;
  double t7028;
  double t7029;
  double t7034;
  double t7035;
  double t7037;
  double t7071;
  double t7072;
  double t7073;
  double t7076;
  double t7081;
  double t7083;
  double t6935;
  double t6941;
  double t6944;
  double t6946;
  double t6947;
  double t6949;
  double t7359;
  double t7360;
  double t7362;
  double t7366;
  double t7372;
  double t7373;
  double t7378;
  double t7396;
  double t7403;
  double t7405;
  double t7407;
  double t7408;
  double t7410;
  double t7411;
  double t7419;
  double t7420;
  double t7421;
  double t7429;
  double t7432;
  double t7434;
  double t7436;
  double t7440;
  double t7499;
  double t7501;
  double t7504;
  double t7505;
  double t7510;
  double t7511;
  double t7515;
  double t7516;
  double t7517;
  double t7521;
  double t7522;
  double t7524;
  double t7525;
  double t7526;
  double t7527;
  double t7529;
  double t7530;
  double t7533;
  double t7534;
  double t7535;
  double t7537;
  double t7538;
  double t7588;
  double t7591;
  double t7592;
  double t7593;
  double t7596;
  double t7597;
  double t7598;
  double t7600;
  double t7604;
  double t7606;
  double t7607;
  double t7612;
  double t7613;
  double t7617;
  double t7618;
  double t7620;
  double t7621;
  double t7623;
  double t7628;
  double t7629;
  double t7630;
  double t7632;
  double t7702;
  t198 = Cos(var1[14]);
  t200 = -1.*t198;
  t216 = 1. + t200;
  t273 = Sin(var1[14]);
  t81 = Cos(var1[13]);
  t275 = -7.e-6*t273;
  t351 = -1.*t81;
  t369 = 1. + t351;
  t182 = Sin(var1[13]);
  t292 = -7.e-6*t216;
  t431 = -1.*t273;
  t261 = -6.5e-11*t216;
  t266 = 4.e-6*t216;
  t276 = t266 + t275;
  t289 = 4.e-6*t276;
  t295 = -4.e-6*t273;
  t307 = t292 + t295;
  t308 = -7.e-6*t307;
  t316 = 1. + t261 + t289 + t308;
  t480 = 2.8e-11*t369;
  t387 = 1.000000000049*t216;
  t405 = -1. + t387;
  t407 = 4.e-6*t405;
  t421 = -1. + t198;
  t428 = 4.e-6*t421;
  t430 = 2.8e-11*t216;
  t464 = t430 + t431;
  t467 = -7.e-6*t464;
  t471 = t407 + t428 + t467 + t275;
  t490 = -1.000000000016*t216;
  t491 = 1. + t490;
  t507 = -7.e-6*t491;
  t518 = -2.8e-11*t216;
  t523 = t518 + t431;
  t524 = 4.e-6*t523;
  t526 = 4.e-6*t273;
  t549 = t507 + t292 + t524 + t526;
  t154 = -1. + t81;
  t179 = 4.e-6*t154;
  t613 = -7.e-6*t369;
  t711 = Sin(var1[12]);
  t619 = 4.e-6*t182;
  t625 = t613 + t619;
  t637 = t625*t316;
  t650 = t480 + t182;
  t662 = t650*t471;
  t664 = -1.000000000016*t369;
  t666 = 1. + t664;
  t678 = t666*t549;
  t706 = t637 + t662 + t678;
  t608 = Cos(var1[12]);
  t713 = -6.5e-11*t369;
  t719 = 1. + t713;
  t734 = t719*t316;
  t756 = 7.e-6*t182;
  t757 = t179 + t756;
  t770 = t757*t471;
  t779 = -4.e-6*t182;
  t782 = t613 + t779;
  t804 = t782*t549;
  t811 = t734 + t770 + t804;
  t42 = Cos(var1[4]);
  t483 = -1.*t182;
  t486 = t480 + t483;
  t187 = -7.e-6*t182;
  t189 = t179 + t187;
  t373 = -1.000000000049*t369;
  t374 = 1. + t373;
  t597 = Sin(var1[4]);
  t598 = Cos(var1[5]);
  t946 = 1.000000000016*t216;
  t957 = t292 + t526;
  t967 = -7.e-6*t957;
  t969 = -1. + t946 + t967;
  t988 = 1. + t261;
  t993 = -7.e-6*t988;
  t1001 = 7.e-6*t216;
  t1004 = t993 + t1001 + t526;
  t1018 = t428 + t275;
  t1033 = -7.e-6*t1018;
  t1073 = t518 + t1033 + t273;
  t1123 = t782*t969;
  t1139 = t719*t1004;
  t1144 = t757*t1073;
  t1147 = t1123 + t1139 + t1144;
  t1162 = t666*t969;
  t1177 = t625*t1004;
  t1181 = t650*t1073;
  t1182 = t1162 + t1177 + t1181;
  t870 = Sin(var1[5]);
  t1274 = -1.000000000049*t216;
  t1289 = 4.e-6*t1018;
  t1297 = 1. + t1274 + t1289;
  t1313 = 4.e-6*t988;
  t1333 = 7.e-6*t273;
  t1342 = t1313 + t428 + t1333;
  t1348 = 4.e-6*t957;
  t1349 = t430 + t1348 + t273;
  t1375 = t650*t1297;
  t1379 = t625*t1342;
  t1389 = t666*t1349;
  t1393 = t1375 + t1379 + t1389;
  t1396 = t757*t1297;
  t1397 = t719*t1342;
  t1402 = t782*t1349;
  t1405 = t1396 + t1397 + t1402;
  t835 = t711*t706;
  t837 = t608*t811;
  t844 = t835 + t837;
  t709 = t608*t706;
  t815 = -1.*t711*t811;
  t830 = t709 + t815;
  t1196 = t608*t1147;
  t1198 = t711*t1182;
  t1201 = t1196 + t1198;
  t1152 = -1.*t711*t1147;
  t1186 = t608*t1182;
  t1188 = t1152 + t1186;
  t1442 = t711*t1393;
  t1444 = t608*t1405;
  t1452 = t1442 + t1444;
  t1395 = t608*t1393;
  t1422 = -1.*t711*t1405;
  t1428 = t1395 + t1422;
  t1482 = -1.*t830*t870;
  t1517 = -1.*t1188*t870;
  t1545 = -1.*t1428*t870;
  t1655 = 2.8e-11*t182;
  t1673 = -6.5e-11*t182*t316;
  t1674 = 7.e-6*t81;
  t1681 = t1674 + t779;
  t1687 = t1681*t471;
  t1688 = -4.e-6*t81;
  t1689 = t1688 + t187;
  t1692 = t1689*t549;
  t1701 = t1673 + t1687 + t1692;
  t1711 = 4.e-6*t81;
  t1712 = t1711 + t187;
  t1718 = t1712*t316;
  t1720 = t81 + t1655;
  t1745 = t1720*t471;
  t1755 = -1.000000000016*t182*t549;
  t1759 = t1718 + t1745 + t1755;
  t1656 = t351 + t1655;
  t1640 = -7.e-6*t81;
  t1641 = t1640 + t779;
  t1873 = t1689*t969;
  t1874 = -6.5e-11*t182*t1004;
  t1876 = t1681*t1073;
  t1877 = t1873 + t1874 + t1876;
  t1891 = -1.000000000016*t182*t969;
  t1905 = t1712*t1004;
  t1908 = t1720*t1073;
  t1910 = t1891 + t1905 + t1908;
  t2016 = t1681*t1297;
  t2018 = -6.5e-11*t182*t1342;
  t2021 = t1689*t1349;
  t2023 = t2016 + t2018 + t2021;
  t2030 = t1720*t1297;
  t2034 = t1712*t1342;
  t2038 = -1.000000000016*t182*t1349;
  t2043 = t2030 + t2034 + t2038;
  t2120 = -7.e-6*t198;
  t2104 = -4.e-6*t198;
  t2111 = t2104 + t275;
  t2114 = -7.e-6*t2111;
  t2121 = t2120 + t526;
  t2122 = 4.e-6*t2121;
  t2124 = -6.5e-11*t273;
  t2125 = t2114 + t2122 + t2124;
  t2129 = 4.e-6*t198;
  t2138 = -2.8e-11*t273;
  t2147 = t200 + t2138;
  t2149 = 4.e-6*t2147;
  t2151 = 1.12e-16*t273;
  t2158 = t2129 + t2149 + t2151;
  t2161 = 2.8e-11*t273;
  t2162 = t200 + t2161;
  t2163 = -7.e-6*t2162;
  t2165 = 1.96e-16*t273;
  t2168 = t2120 + t2163 + t2165;
  t2183 = t719*t2125;
  t2186 = t782*t2158;
  t2188 = t757*t2168;
  t2189 = t2183 + t2186 + t2188;
  t2195 = t625*t2125;
  t2196 = t666*t2158;
  t2198 = t650*t2168;
  t2203 = t2195 + t2196 + t2198;
  t2226 = t2120 + t295;
  t2230 = 4.e-6*t2226;
  t2231 = -1.000000000049*t273;
  t2233 = t2230 + t2231;
  t2235 = 7.e-6*t198;
  t2236 = -4.00000000026e-6*t273;
  t2243 = t2235 + t2236;
  t2255 = t2129 + t275;
  t2257 = 4.e-6*t2255;
  t2261 = t198 + t2257 + t2161;
  t2327 = t650*t2233;
  t2343 = t625*t2243;
  t2346 = t666*t2261;
  t2350 = t2327 + t2343 + t2346;
  t2360 = t757*t2233;
  t2404 = t719*t2243;
  t2431 = t782*t2261;
  t2453 = t2360 + t2404 + t2431;
  t2532 = -7.e-6*t2226;
  t2533 = t198 + t2532 + t2138;
  t2540 = 7.000000000455e-6*t273;
  t2550 = t2129 + t2540;
  t2558 = -7.e-6*t2255;
  t2559 = 1.000000000016*t273;
  t2560 = t2558 + t2559;
  t2572 = t650*t2533;
  t2578 = t625*t2550;
  t2579 = t666*t2560;
  t2585 = t2572 + t2578 + t2579;
  t2598 = t757*t2533;
  t2605 = t719*t2550;
  t2606 = t782*t2560;
  t2633 = t2598 + t2605 + t2606;
  t977 = t486*t969;
  t1013 = t189*t1004;
  t1091 = t374*t1073;
  t1100 = t977 + t1013 + t1091;
  t1195 = t598*t1188;
  t1217 = -1.*t1201*t870;
  t1234 = t1195 + t1217;
  t1306 = t374*t1297;
  t1345 = t189*t1342;
  t1352 = t486*t1349;
  t1357 = t1306 + t1345 + t1352;
  t1430 = t598*t1428;
  t1454 = -1.*t1452*t870;
  t1459 = t1430 + t1454;
  t331 = t189*t316;
  t478 = t374*t471;
  t550 = t486*t549;
  t577 = t331 + t478 + t550;
  t832 = t598*t830;
  t912 = -1.*t844*t870;
  t920 = t832 + t912;
  t587 = t42*t577;
  t924 = -1.*t597*t920;
  t935 = t587 + t924;
  t2761 = Sin(var1[3]);
  t2770 = Cos(var1[3]);
  t1122 = t42*t1100;
  t1243 = -1.*t597*t1234;
  t1247 = t1122 + t1243;
  t1368 = t42*t1357;
  t1462 = -1.*t597*t1459;
  t1472 = t1368 + t1462;
  t1481 = -1.*t598*t844;
  t1506 = t1481 + t1482;
  t1515 = -1.*t598*t1201;
  t1536 = t1515 + t1517;
  t1543 = -1.*t598*t1452;
  t1552 = t1543 + t1545;
  t1573 = -1.*t711*t706;
  t1579 = -1.*t608*t811;
  t1581 = t1573 + t1579;
  t1584 = t598*t1581;
  t1585 = t1584 + t1482;
  t1596 = -1.*t608*t1147;
  t1603 = -1.*t711*t1182;
  t1604 = t1596 + t1603;
  t1606 = t598*t1604;
  t1607 = t1606 + t1517;
  t1616 = -1.*t711*t1393;
  t1617 = -1.*t608*t1405;
  t1619 = t1616 + t1617;
  t1623 = t598*t1619;
  t1632 = t1623 + t1545;
  t1789 = t608*t1701;
  t1798 = t711*t1759;
  t1800 = t1789 + t1798;
  t1709 = -1.*t711*t1701;
  t1769 = t608*t1759;
  t1770 = t1709 + t1769;
  t1642 = t1641*t316;
  t1648 = -1.000000000049*t182*t471;
  t1658 = t1656*t549;
  t1660 = t1642 + t1648 + t1658;
  t1787 = t598*t1770;
  t1807 = -1.*t1800*t870;
  t1809 = t1787 + t1807;
  t1933 = t608*t1877;
  t1934 = t711*t1910;
  t1938 = t1933 + t1934;
  t1885 = -1.*t711*t1877;
  t1913 = t608*t1910;
  t1923 = t1885 + t1913;
  t1832 = t1656*t969;
  t1838 = t1641*t1004;
  t1839 = -1.000000000049*t182*t1073;
  t1847 = t1832 + t1838 + t1839;
  t1932 = t598*t1923;
  t1947 = -1.*t1938*t870;
  t1959 = t1932 + t1947;
  t2060 = t608*t2023;
  t2063 = t711*t2043;
  t2070 = t2060 + t2063;
  t2024 = -1.*t711*t2023;
  t2045 = t608*t2043;
  t2050 = t2024 + t2045;
  t1969 = -1.000000000049*t182*t1297;
  t1970 = t1641*t1342;
  t1972 = t1656*t1349;
  t1980 = t1969 + t1970 + t1972;
  t2052 = t598*t2050;
  t2071 = -1.*t2070*t870;
  t2072 = t2052 + t2071;
  t2211 = t608*t2189;
  t2214 = t711*t2203;
  t2215 = t2211 + t2214;
  t2194 = -1.*t711*t2189;
  t2204 = t608*t2203;
  t2206 = t2194 + t2204;
  t2127 = t189*t2125;
  t2160 = t486*t2158;
  t2169 = t374*t2168;
  t2181 = t2127 + t2160 + t2169;
  t2207 = t598*t2206;
  t2216 = -1.*t2215*t870;
  t2219 = t2207 + t2216;
  t2486 = t711*t2350;
  t2493 = t608*t2453;
  t2503 = t2486 + t2493;
  t2354 = t608*t2350;
  t2455 = -1.*t711*t2453;
  t2471 = t2354 + t2455;
  t2234 = t374*t2233;
  t2252 = t189*t2243;
  t2280 = t486*t2261;
  t2301 = t2234 + t2252 + t2280;
  t2480 = t598*t2471;
  t2509 = -1.*t2503*t870;
  t2517 = t2480 + t2509;
  t2666 = t711*t2585;
  t2667 = t608*t2633;
  t2671 = t2666 + t2667;
  t2586 = t608*t2585;
  t2640 = -1.*t711*t2633;
  t2651 = t2586 + t2640;
  t2538 = t374*t2533;
  t2556 = t189*t2550;
  t2561 = t486*t2560;
  t2563 = t2538 + t2556 + t2561;
  t2655 = t598*t2651;
  t2672 = -1.*t2671*t870;
  t2683 = t2655 + t2672;
  t2792 = t598*t1201;
  t2807 = t1188*t870;
  t2839 = t2792 + t2807;
  t2853 = t598*t1452;
  t2881 = t1428*t870;
  t2882 = t2853 + t2881;
  t2762 = t598*t844;
  t2765 = t830*t870;
  t2768 = t2762 + t2765;
  t3382 = t2770*t2768;
  t3384 = -1.*t2761*t935;
  t3391 = t3382 + t3384;
  t3363 = t2770*t2839;
  t3367 = -1.*t2761*t1247;
  t3368 = t3363 + t3367;
  t3371 = t2770*t2882;
  t3373 = -1.*t2761*t1472;
  t3375 = t3371 + t3373;
  t2929 = -1.*t577*t597;
  t2937 = -1.*t42*t920;
  t2938 = t2929 + t2937;
  t2946 = -1.*t1100*t597;
  t2947 = -1.*t42*t1234;
  t2948 = t2946 + t2947;
  t2965 = -1.*t1357*t597;
  t2973 = -1.*t42*t1459;
  t2978 = t2965 + t2973;
  t3072 = t1581*t870;
  t3074 = t832 + t3072;
  t3095 = t1604*t870;
  t3096 = t1195 + t3095;
  t3109 = t1619*t870;
  t3119 = t1430 + t3109;
  t3137 = t598*t1800;
  t3138 = t1770*t870;
  t3142 = t3137 + t3138;
  t3152 = t42*t1660;
  t3157 = -1.*t597*t1809;
  t3159 = t3152 + t3157;
  t3166 = t598*t1938;
  t3171 = t1923*t870;
  t3172 = t3166 + t3171;
  t3181 = t42*t1847;
  t3182 = -1.*t597*t1959;
  t3185 = t3181 + t3182;
  t3191 = t598*t2070;
  t3200 = t2050*t870;
  t3201 = t3191 + t3200;
  t3206 = t42*t1980;
  t3218 = -1.*t597*t2072;
  t3220 = t3206 + t3218;
  t3249 = t598*t2215;
  t3252 = t2206*t870;
  t3254 = t3249 + t3252;
  t3261 = t42*t2181;
  t3262 = -1.*t597*t2219;
  t3263 = t3261 + t3262;
  t3283 = t598*t2503;
  t3287 = t2471*t870;
  t3291 = t3283 + t3287;
  t3297 = t42*t2301;
  t3300 = -1.*t597*t2517;
  t3301 = t3297 + t3300;
  t3321 = t598*t2671;
  t3322 = t2651*t870;
  t3338 = t3321 + t3322;
  t3344 = t42*t2563;
  t3347 = -1.*t597*t2683;
  t3348 = t3344 + t3347;
  t2726 = t1100*t597;
  t2728 = t42*t1234;
  t2729 = t2726 + t2728;
  t3723 = -2.8e-11*t369;
  t3742 = -2.598649999999999e-7*var1[14];
  t3749 = 0.148705*t988;
  t3751 = -2.3905277499999995e-16*t216;
  t3753 = -0.038922999986*t276;
  t3757 = -0.80315*t307;
  t3760 = t1001 + t526;
  t3763 = -0.503149000008*t3760;
  t3764 = t428 + t1333;
  t3771 = -0.038924*t3764;
  t3773 = t3742 + t3749 + t3751 + t3753 + t3757 + t3763 + t3771;
  t3808 = 1.0394599999999997e-12*var1[14];
  t3811 = 1. + t1274;
  t3813 = -0.038924*t3811;
  t3823 = -0.03892299998790722*t216;
  t3827 = -0.80315*t464;
  t3829 = 0.148705*t1018;
  t3831 = t266 + t1333;
  t3843 = -3.6777349999999994e-6*t3831;
  t3852 = t518 + t273;
  t3867 = -0.503149000008*t3852;
  t3871 = t3808 + t3813 + t3823 + t3827 + t3829 + t3843 + t3867;
  t3879 = 1.8190549999999993e-12*var1[14];
  t3889 = -0.80315*t491;
  t3903 = -0.5031490000160505*t216;
  t3907 = -0.038922999986*t523;
  t3909 = t1001 + t295;
  t3915 = -3.6777349999999994e-6*t3909;
  t3917 = 0.148705*t957;
  t3920 = t430 + t273;
  t3921 = -0.038924*t3920;
  t3926 = t3879 + t3889 + t3903 + t3907 + t3915 + t3917 + t3921;
  t3719 = 4.e-6*t369;
  t3969 = 7.e-6*t369;
  t3934 = -1.*t608;
  t3938 = 1. + t3934;
  t3948 = 0.15121*t711;
  t3950 = 1.0248489999999998e-12*var1[13];
  t3957 = -0.28120900000849935*t369;
  t3959 = t3723 + t483;
  t3962 = -0.038748999993*t3959;
  t3972 = t3969 + t779;
  t3974 = -2.123459e-6*t3972;
  t3978 = t625*t3773;
  t3980 = t650*t3871;
  t3983 = t666*t3926;
  t3985 = t3950 + t3957 + t3962 + t3974 + t3978 + t3980 + t3983;
  t3987 = -1.4640699999999997e-7*var1[13];
  t3988 = -1.38024835e-16*t369;
  t3990 = t3719 + t187;
  t3994 = -0.038748999993*t3990;
  t3996 = t3969 + t619;
  t3997 = -0.281209000004*t3996;
  t4002 = t719*t3773;
  t4003 = t757*t3871;
  t4005 = t782*t3926;
  t4006 = t3987 + t3988 + t3994 + t3997 + t4002 + t4003 + t4005;
  t3712 = 5.856279999999999e-13*var1[13];
  t3717 = -0.0387489999948987*t369;
  t3720 = t3719 + t756;
  t3721 = -2.123459e-6*t3720;
  t3724 = t3723 + t182;
  t3739 = -0.281209000004*t3724;
  t3800 = t189*t3773;
  t3877 = t374*t3871;
  t3927 = t486*t3926;
  t3930 = t3712 + t3717 + t3721 + t3739 + t3800 + t3877 + t3927;
  t3939 = -0.15121*t3938;
  t3986 = t608*t3985;
  t4012 = -1.*t711*t4006;
  t4013 = t3939 + t3948 + t3986 + t4012;
  t4014 = t598*t4013;
  t4015 = 0.15121*t3938;
  t4017 = t711*t3985;
  t4018 = t608*t4006;
  t4019 = t4015 + t3948 + t4017 + t4018;
  t4021 = -1.*t4019*t870;
  t4023 = t4014 + t4021;
  t2740 = t577*t597;
  t2745 = t42*t920;
  t2752 = t2740 + t2745;
  t4041 = t42*t3930;
  t4047 = -1.*t597*t4023;
  t4051 = t4041 + t4047;
  t4030 = t3930*t597;
  t4034 = t42*t4023;
  t4035 = t4030 + t4034;
  t3932 = -1.*t3930*t597;
  t4024 = -1.*t42*t4023;
  t4027 = t3932 + t4024;
  t4063 = t598*t4019;
  t4066 = t4013*t870;
  t4068 = t4063 + t4066;
  t2730 = t1357*t597;
  t2732 = t42*t1459;
  t2737 = t2730 + t2732;
  t4304 = -1.*t598*t4019;
  t4305 = -1.*t4013*t870;
  t4306 = t4304 + t4305;
  t4069 = -1.*t2768*t4068;
  t4072 = -1.*t2752*t4035;
  t4075 = -1.*t935*t4051;
  t4076 = t4069 + t4072 + t4075;
  t4098 = t2839*t4068;
  t4099 = t2729*t4035;
  t4103 = t1247*t4051;
  t4111 = t4098 + t4099 + t4103;
  t4164 = t2768*t4068;
  t4170 = t2752*t4035;
  t4171 = t935*t4051;
  t4172 = t4164 + t4170 + t4171;
  t4200 = -1.*t2882*t4068;
  t4206 = -1.*t2737*t4035;
  t4208 = -1.*t1472*t4051;
  t4212 = t4200 + t4206 + t4208;
  t4241 = -1.*t2839*t4068;
  t4244 = -1.*t2729*t4035;
  t4248 = -1.*t1247*t4051;
  t4259 = t4241 + t4244 + t4248;
  t4280 = t2882*t4068;
  t4282 = t2737*t4035;
  t4285 = t1472*t4051;
  t4286 = t4280 + t4282 + t4285;
  t4535 = 0.15121*t608;
  t4543 = -0.15121*t711;
  t4545 = -1.*t711*t3985;
  t4546 = -1.*t608*t4006;
  t4548 = t4535 + t4543 + t4545 + t4546;
  t4538 = t4535 + t3948 + t3986 + t4012;
  t4580 = t598*t4548;
  t4581 = -1.*t4538*t870;
  t4585 = t4580 + t4581;
  t4540 = t598*t4538;
  t4559 = t4548*t870;
  t4573 = t4540 + t4559;
  t1849 = t1847*t597;
  t1961 = t42*t1959;
  t1963 = t1849 + t1961;
  t1668 = t1660*t597;
  t1813 = t42*t1809;
  t1819 = t1668 + t1813;
  t4842 = t1640 + t619;
  t4844 = -0.038748999993*t4842;
  t4848 = t1711 + t756;
  t4852 = -0.281209000004*t4848;
  t4855 = -1.38024835e-16*t182;
  t4860 = -6.5e-11*t182*t3773;
  t4865 = t1681*t3871;
  t4889 = t1689*t3926;
  t4890 = -1.4640699999999997e-7 + t4844 + t4852 + t4855 + t4860 + t4865 + t4889;
  t4892 = -2.8e-11*t182;
  t4893 = t351 + t4892;
  t4895 = -0.038748999993*t4893;
  t4897 = t1688 + t756;
  t4906 = -2.123459e-6*t4897;
  t4909 = -0.28120900000849935*t182;
  t4921 = t1712*t3773;
  t4932 = t1720*t3871;
  t4935 = -1.000000000016*t182*t3926;
  t4937 = 1.0248489999999998e-12 + t4895 + t4906 + t4909 + t4921 + t4932 + t4935;
  t4950 = -1.*t711*t4890;
  t4953 = t608*t4937;
  t4955 = t4950 + t4953;
  t4891 = t608*t4890;
  t4944 = t711*t4937;
  t4946 = t4891 + t4944;
  t4978 = t81 + t4892;
  t4979 = -0.281209000004*t4978;
  t4981 = t1674 + t619;
  t4983 = -2.123459e-6*t4981;
  t4988 = -0.0387489999948987*t182;
  t4992 = t1641*t3773;
  t4994 = -1.000000000049*t182*t3871;
  t4996 = t1656*t3926;
  t4997 = 5.856279999999999e-13 + t4979 + t4983 + t4988 + t4992 + t4994 + t4996;
  t5001 = t598*t4955;
  t5004 = -1.*t4946*t870;
  t5017 = t5001 + t5004;
  t4947 = t598*t4946;
  t4966 = t4955*t870;
  t4967 = t4947 + t4966;
  t4998 = t4997*t597;
  t5018 = t42*t5017;
  t5021 = t4998 + t5018;
  t5029 = t42*t4997;
  t5030 = -1.*t597*t5017;
  t5035 = t5029 + t5030;
  t1997 = t1980*t597;
  t2074 = t42*t2072;
  t2090 = t1997 + t2074;
  t5236 = -0.80315*t2111;
  t5245 = t2235 + t295;
  t5246 = -0.038924*t5245;
  t5249 = -0.038922999986*t2121;
  t5250 = t2129 + t1333;
  t5251 = -0.503149000008*t5250;
  t5252 = -9.666064052774999e-12*t273;
  t5253 = -2.598649999999999e-7 + t5236 + t5246 + t5249 + t5251 + t5252;
  t5255 = 0.148705*t2226;
  t5256 = t198 + t2138;
  t5259 = -0.503149000008*t5256;
  t5265 = -0.80315*t2162;
  t5267 = t2235 + t526;
  t5275 = -3.6777349999999994e-6*t5267;
  t5276 = 1.0000140000590574e-6*t273;
  t5278 = 1.0394599999999997e-12 + t5255 + t5259 + t5265 + t5275 + t5276;
  t5285 = 0.148705*t2255;
  t5286 = -0.038922999986*t2147;
  t5290 = t198 + t2161;
  t5292 = -0.038924*t5290;
  t5297 = t2104 + t1333;
  t5299 = -3.6777349999999994e-6*t5297;
  t5302 = 0.30000099999679997*t273;
  t5307 = 1.8190549999999993e-12 + t5285 + t5286 + t5292 + t5299 + t5302;
  t5254 = t625*t5253;
  t5281 = t650*t5278;
  t5320 = t666*t5307;
  t5323 = t5254 + t5281 + t5320;
  t5336 = t719*t5253;
  t5339 = t757*t5278;
  t5343 = t782*t5307;
  t5344 = t5336 + t5339 + t5343;
  t5362 = t608*t5323;
  t5365 = -1.*t711*t5344;
  t5367 = t5362 + t5365;
  t5333 = t711*t5323;
  t5346 = t608*t5344;
  t5354 = t5333 + t5346;
  t5378 = t189*t5253;
  t5379 = t374*t5278;
  t5384 = t486*t5307;
  t5389 = t5378 + t5379 + t5384;
  t5397 = t598*t5367;
  t5400 = -1.*t5354*t870;
  t5404 = t5397 + t5400;
  t2182 = t2181*t597;
  t2220 = t42*t2219;
  t2221 = t2182 + t2220;
  t5357 = t598*t5354;
  t5369 = t5367*t870;
  t5370 = t5357 + t5369;
  t5392 = t5389*t597;
  t5407 = t42*t5404;
  t5414 = t5392 + t5407;
  t5418 = t42*t5389;
  t5423 = -1.*t597*t5404;
  t5431 = t5418 + t5423;
  t2311 = t2301*t597;
  t2518 = t42*t2517;
  t2524 = t2311 + t2518;
  t2571 = t2563*t597;
  t2684 = t42*t2683;
  t2700 = t2571 + t2684;
  t4296 = -1.*t2768*t4023;
  t4303 = -1.*t920*t4068;
  t4332 = t2839*t4023;
  t4335 = t1234*t4068;
  t4376 = t2768*t4023;
  t4381 = t920*t4068;
  t4408 = -1.*t2882*t4023;
  t4410 = -1.*t1459*t4068;
  t4444 = -1.*t2839*t4023;
  t4459 = -1.*t1234*t4068;
  t4496 = t2882*t4023;
  t4499 = t1459*t4068;
  t5588 = -1.*t577*t3930;
  t5591 = -1.*t920*t4023;
  t5593 = t5588 + t5591 + t4069;
  t5600 = t1100*t3930;
  t5601 = t1234*t4023;
  t5602 = t5600 + t5601 + t4098;
  t4575 = -1.*t2768*t4573;
  t4577 = -1.*t3074*t4068;
  t4640 = t2839*t4573;
  t4641 = t3096*t4068;
  t5652 = t577*t3930;
  t5658 = t920*t4023;
  t5660 = t5652 + t5658 + t4164;
  t5681 = -1.*t1357*t3930;
  t5684 = -1.*t1459*t4023;
  t5687 = t5681 + t5684 + t4200;
  t4667 = t2768*t4573;
  t4677 = t3074*t4068;
  t4712 = -1.*t2882*t4573;
  t4713 = -1.*t3119*t4068;
  t5703 = -1.*t1100*t3930;
  t5707 = -1.*t1234*t4023;
  t5708 = t5703 + t5707 + t4241;
  t5758 = t1357*t3930;
  t5759 = t1459*t4023;
  t5760 = t5758 + t5759 + t4280;
  t4748 = -1.*t2839*t4573;
  t4754 = -1.*t3096*t4068;
  t4772 = t2882*t4573;
  t4795 = t3119*t4068;
  t4841 = -1.*t3142*t4068;
  t4974 = -1.*t2768*t4967;
  t5043 = t3172*t4068;
  t5046 = t2839*t4967;
  t5109 = t3142*t4068;
  t5113 = t2768*t4967;
  t5138 = -1.*t3201*t4068;
  t5141 = -1.*t2882*t4967;
  t5178 = -1.*t3172*t4068;
  t5180 = -1.*t2839*t4967;
  t5194 = t3201*t4068;
  t5198 = t2882*t4967;
  t5372 = t2768*t5370;
  t5375 = t3254*t4068;
  t5452 = -1.*t5370*t2882;
  t5453 = -1.*t3291*t4068;
  t5480 = t5370*t2882;
  t5484 = t3291*t4068;
  t5503 = -1.*t5370*t2839;
  t5504 = -1.*t3338*t4068;
  t5535 = -1.*t2768*t5370;
  t5536 = -1.*t3254*t4068;
  t5552 = t5370*t2839;
  t5553 = t3338*t4068;
  t5981 = -1.*t1660*t3930;
  t5987 = -1.*t577*t4997;
  t6048 = t1847*t3930;
  t6053 = t1100*t4997;
  t6099 = t1660*t3930;
  t6107 = t577*t4997;
  t6129 = -1.*t1980*t3930;
  t6151 = -1.*t1357*t4997;
  t6211 = -1.*t1847*t3930;
  t6213 = -1.*t1100*t4997;
  t6231 = t1980*t3930;
  t6233 = t1357*t4997;
  t6253 = t577*t5389;
  t6257 = t2181*t3930;
  t6268 = -1.*t5389*t1357;
  t6270 = -1.*t2301*t3930;
  t6626 = t844*t4019;
  t6629 = t830*t4013;
  t6635 = t5652 + t6626 + t6629;
  t6647 = -1.*t1452*t4019;
  t6651 = -1.*t1428*t4013;
  t6654 = t5681 + t6647 + t6651;
  t6308 = t5389*t1357;
  t6309 = t2301*t3930;
  t6694 = -1.*t1201*t4019;
  t6697 = -1.*t1188*t4013;
  t6698 = t5703 + t6694 + t6697;
  t6700 = t1452*t4019;
  t6702 = t1428*t4013;
  t6703 = t5758 + t6700 + t6702;
  t6332 = -1.*t5389*t1100;
  t6339 = -1.*t2563*t3930;
  t6355 = -1.*t577*t5389;
  t6359 = -1.*t2181*t3930;
  t6570 = -1.*t844*t4019;
  t6574 = -1.*t830*t4013;
  t6575 = t5588 + t6570 + t6574;
  t6578 = t1201*t4019;
  t6580 = t1188*t4013;
  t6581 = t5600 + t6578 + t6580;
  t6377 = t5389*t1100;
  t6378 = t2563*t3930;
  t7026 = t706*t3985;
  t7028 = t811*t4006;
  t7029 = t7026 + t5652 + t7028;
  t7034 = -1.*t1393*t3985;
  t7035 = -1.*t1405*t4006;
  t7037 = t7034 + t5681 + t7035;
  t7071 = -1.*t1182*t3985;
  t7072 = -1.*t1147*t4006;
  t7073 = t7071 + t5703 + t7072;
  t7076 = t1393*t3985;
  t7081 = t1405*t4006;
  t7083 = t7076 + t5758 + t7081;
  t6935 = -1.*t706*t3985;
  t6941 = -1.*t811*t4006;
  t6944 = t6935 + t5588 + t6941;
  t6946 = t1182*t3985;
  t6947 = t1147*t4006;
  t6949 = t6946 + t5600 + t6947;
  t7359 = t3773*t2125;
  t7360 = t316*t5253;
  t7362 = t471*t5278;
  t7366 = t549*t5307;
  t7372 = t2168*t3871;
  t7373 = t2158*t3926;
  t7378 = t7359 + t7360 + t7362 + t7366 + t7372 + t7373;
  t7396 = -1.*t3773*t2243;
  t7403 = -1.*t1297*t5278;
  t7405 = -1.*t5253*t1342;
  t7407 = -1.*t5307*t1349;
  t7408 = -1.*t2233*t3871;
  t7410 = -1.*t2261*t3926;
  t7411 = t7396 + t7403 + t7405 + t7407 + t7408 + t7410;
  t7419 = t316*t3773;
  t7420 = t471*t3871;
  t7421 = t549*t3926;
  t7429 = t7419 + t7420 + t7421;
  t7432 = -1.*t3773*t1342;
  t7434 = -1.*t1297*t3871;
  t7436 = -1.*t1349*t3926;
  t7440 = t7432 + t7434 + t7436;
  t7499 = -1.*t3773*t1004;
  t7501 = -1.*t1073*t3871;
  t7504 = -1.*t969*t3926;
  t7505 = t7499 + t7501 + t7504;
  t7510 = t3773*t2243;
  t7511 = t1297*t5278;
  t7515 = t5253*t1342;
  t7516 = t5307*t1349;
  t7517 = t2233*t3871;
  t7521 = t2261*t3926;
  t7522 = t7510 + t7511 + t7515 + t7516 + t7517 + t7521;
  t7524 = t3773*t1342;
  t7525 = t1297*t3871;
  t7526 = t1349*t3926;
  t7527 = t7524 + t7525 + t7526;
  t7529 = -1.*t5253*t1004;
  t7530 = -1.*t3773*t2550;
  t7533 = -1.*t969*t5307;
  t7534 = -1.*t5278*t1073;
  t7535 = -1.*t2533*t3871;
  t7537 = -1.*t2560*t3926;
  t7538 = t7529 + t7530 + t7533 + t7534 + t7535 + t7537;
  t7588 = t3773*t1004;
  t7591 = t1073*t3871;
  t7592 = t969*t3926;
  t7593 = t7588 + t7591 + t7592;
  t7596 = -1.*t3773*t2125;
  t7597 = -1.*t316*t5253;
  t7598 = -1.*t471*t5278;
  t7600 = -1.*t549*t5307;
  t7604 = -1.*t2168*t3871;
  t7606 = -1.*t2158*t3926;
  t7607 = t7596 + t7597 + t7598 + t7600 + t7604 + t7606;
  t7612 = -1.*t316*t3773;
  t7613 = -1.*t471*t3871;
  t7617 = -1.*t549*t3926;
  t7618 = t7612 + t7613 + t7617;
  t7620 = t5253*t1004;
  t7621 = t3773*t2550;
  t7623 = t969*t5307;
  t7628 = t5278*t1073;
  t7629 = t2533*t3871;
  t7630 = t2560*t3926;
  t7632 = t7620 + t7621 + t7623 + t7628 + t7629 + t7630;
  t7702 = 6.5e-11*t216;
  p_output1[0]=t1247*var2[0] + t1472*var2[1] + t935*var2[2];
  p_output1[1]=t1536*t42*var2[0] + t1552*t42*var2[1] + t1506*t42*var2[2];
  p_output1[2]=t1607*t42*var2[0] + t1632*t42*var2[1] + t1585*t42*var2[2];
  p_output1[3]=t1963*var2[0] + t2090*var2[1] + t1819*var2[2];
  p_output1[4]=t2700*var2[0] + t2524*var2[1] + t2221*var2[2];
  p_output1[5]=t2729;
  p_output1[6]=t2737;
  p_output1[7]=t2752;
  p_output1[8]=(-1.*t1247*t2770 - 1.*t2761*t2839)*var2[0] + (-1.*t1472*t2770 - 1.*t2761*t2882)*var2[1] + (-1.*t2761*t2768 - 1.*t2770*t935)*var2[2];
  p_output1[9]=-1.*t2761*t2948*var2[0] - 1.*t2761*t2978*var2[1] - 1.*t2761*t2938*var2[2];
  p_output1[10]=(t1234*t2770 + t1536*t2761*t597)*var2[0] + (t1459*t2770 + t1552*t2761*t597)*var2[1] + (t1506*t2761*t597 + t2770*t920)*var2[2];
  p_output1[11]=(t2770*t3096 + t1607*t2761*t597)*var2[0] + (t2770*t3119 + t1632*t2761*t597)*var2[1] + (t2770*t3074 + t1585*t2761*t597)*var2[2];
  p_output1[12]=(t2770*t3172 - 1.*t2761*t3185)*var2[0] + (t2770*t3201 - 1.*t2761*t3220)*var2[1] + (t2770*t3142 - 1.*t2761*t3159)*var2[2];
  p_output1[13]=(t2770*t3338 - 1.*t2761*t3348)*var2[0] + (t2770*t3291 - 1.*t2761*t3301)*var2[1] + (t2770*t3254 - 1.*t2761*t3263)*var2[2];
  p_output1[14]=t3368;
  p_output1[15]=t3375;
  p_output1[16]=t3391;
  p_output1[17]=t3368*var2[0] + t3375*var2[1] + t3391*var2[2];
  p_output1[18]=t2770*t2948*var2[0] + t2770*t2978*var2[1] + t2770*t2938*var2[2];
  p_output1[19]=(t1234*t2761 - 1.*t1536*t2770*t597)*var2[0] + (t1459*t2761 - 1.*t1552*t2770*t597)*var2[1] + (-1.*t1506*t2770*t597 + t2761*t920)*var2[2];
  p_output1[20]=(t2761*t3096 - 1.*t1607*t2770*t597)*var2[0] + (t2761*t3119 - 1.*t1632*t2770*t597)*var2[1] + (t2761*t3074 - 1.*t1585*t2770*t597)*var2[2];
  p_output1[21]=(t2761*t3172 + t2770*t3185)*var2[0] + (t2761*t3201 + t2770*t3220)*var2[1] + (t2761*t3142 + t2770*t3159)*var2[2];
  p_output1[22]=(t2761*t3338 + t2770*t3348)*var2[0] + (t2761*t3291 + t2770*t3301)*var2[1] + (t2761*t3254 + t2770*t3263)*var2[2];
  p_output1[23]=t1247*t2770 + t2761*t2839;
  p_output1[24]=t1472*t2770 + t2761*t2882;
  p_output1[25]=t2761*t2768 + t2770*t935;
  p_output1[26]=(t2752*(-1.*t1472*t4027 - 1.*t1472*t4035 - 1.*t2737*t4051 - 1.*t2978*t4051) + t1472*t4172 + t4212*t935 + t2737*(t2752*t4051 + t2938*t4051 + t4027*t935 + t4035*t935))*var2[0] + (t2752*(t1247*t4027 + t1247*t4035 + t2729*t4051 + t2948*t4051) + t1247*t4076 + t4111*t935 + t2729*(-1.*t2752*t4051 - 1.*t2938*t4051 - 1.*t4027*t935 - 1.*t4035*t935))*var2[1] + (t2737*(-1.*t1247*t4027 - 1.*t1247*t4035 - 1.*t2729*t4051 - 1.*t2948*t4051) + t2729*(t1472*t4027 + t1472*t4035 + t2737*t4051 + t2978*t4051) + t1472*t4259 + t1247*t4286)*var2[2];
  p_output1[27]=(t1552*t4172*t42 + t1506*t42*t4212 + t2752*(-1.*t1552*t4035*t42 - 1.*t2737*t42*t4306 + t4408 + t4410 + t1552*t4051*t597 + t1472*t4306*t597) + t2737*(t1506*t4035*t42 + t2752*t42*t4306 + t4376 + t4381 - 1.*t1506*t4051*t597 - 1.*t4306*t597*t935))*var2[0] + (t1536*t4076*t42 + t1506*t4111*t42 + t2752*(t1536*t4035*t42 + t2729*t42*t4306 + t4332 + t4335 - 1.*t1536*t4051*t597 - 1.*t1247*t4306*t597) + t2729*(-1.*t1506*t4035*t42 + t4296 + t4303 - 1.*t2752*t42*t4306 + t1506*t4051*t597 + t4306*t597*t935))*var2[1] + (t1552*t42*t4259 + t1536*t42*t4286 + t2737*(-1.*t1536*t4035*t42 - 1.*t2729*t42*t4306 + t4444 + t4459 + t1536*t4051*t597 + t1247*t4306*t597) + t2729*(t1552*t4035*t42 + t2737*t42*t4306 + t4496 + t4499 - 1.*t1552*t4051*t597 - 1.*t1472*t4306*t597))*var2[2];
  p_output1[28]=(t1632*t4172*t42 + t1585*t42*t4212 + t2752*(-1.*t1632*t4035*t42 - 1.*t2737*t42*t4585 + t4712 + t4713 + t1632*t4051*t597 + t1472*t4585*t597) + t2737*(t1585*t4035*t42 + t2752*t42*t4585 + t4667 + t4677 - 1.*t1585*t4051*t597 - 1.*t4585*t597*t935))*var2[0] + (t1607*t4076*t42 + t1585*t4111*t42 + t2752*(t1607*t4035*t42 + t2729*t42*t4585 + t4640 + t4641 - 1.*t1607*t4051*t597 - 1.*t1247*t4585*t597) + t2729*(-1.*t1585*t4035*t42 + t4575 + t4577 - 1.*t2752*t42*t4585 + t1585*t4051*t597 + t4585*t597*t935))*var2[1] + (t1632*t42*t4259 + t1607*t42*t4286 + t2737*(-1.*t1607*t4035*t42 - 1.*t2729*t42*t4585 + t4748 + t4754 + t1607*t4051*t597 + t1247*t4585*t597) + t2729*(t1632*t4035*t42 + t2737*t42*t4585 + t4772 + t4795 - 1.*t1632*t4051*t597 - 1.*t1472*t4585*t597))*var2[2];
  p_output1[29]=(t2090*t4172 + t1819*t4212 + t2752*(-1.*t2090*t4035 - 1.*t3220*t4051 - 1.*t2737*t5021 - 1.*t1472*t5035 + t5138 + t5141) + t2737*(t1819*t4035 + t3159*t4051 + t2752*t5021 + t5109 + t5113 + t5035*t935))*var2[0] + (t1963*t4076 + t1819*t4111 + t2752*(t1963*t4035 + t3185*t4051 + t2729*t5021 + t1247*t5035 + t5043 + t5046) + t2729*(-1.*t1819*t4035 - 1.*t3159*t4051 + t4841 + t4974 - 1.*t2752*t5021 - 1.*t5035*t935))*var2[1] + (t2090*t4259 + t1963*t4286 + t2737*(-1.*t1963*t4035 - 1.*t3185*t4051 - 1.*t2729*t5021 - 1.*t1247*t5035 + t5178 + t5180) + t2729*(t2090*t4035 + t3220*t4051 + t2737*t5021 + t1472*t5035 + t5194 + t5198))*var2[2];
  p_output1[30]=(t2524*t4172 + t2221*t4212 + t2752*(-1.*t2524*t4035 - 1.*t3301*t4051 - 1.*t2737*t5414 - 1.*t1472*t5431 + t5452 + t5453) + t2737*(t2221*t4035 + t3263*t4051 + t5372 + t5375 + t2752*t5414 + t5431*t935))*var2[0] + (t2700*t4076 + t2221*t4111 + t2752*(t2700*t4035 + t3348*t4051 + t2729*t5414 + t1247*t5431 + t5552 + t5553) + t2729*(-1.*t2221*t4035 - 1.*t3263*t4051 - 1.*t2752*t5414 + t5535 + t5536 - 1.*t5431*t935))*var2[1] + (t2524*t4259 + t2700*t4286 + t2729*(t2524*t4035 + t3301*t4051 + t2737*t5414 + t1472*t5431 + t5480 + t5484) + t2737*(-1.*t2700*t4035 - 1.*t3348*t4051 - 1.*t2729*t5414 - 1.*t1247*t5431 + t5503 + t5504))*var2[2];
  p_output1[31]=t2737*t4172 + t2752*t4212;
  p_output1[32]=t2729*t4076 + t2752*t4111;
  p_output1[33]=t2737*t4259 + t2729*t4286;
  p_output1[34]=(t2768*(-1.*t1552*t4023 - 1.*t1459*t4306 + t4408 + t4410) + t1459*t5660 + t5687*t920 + t2882*(t1506*t4023 + t4376 + t4381 + t4306*t920))*var2[0] + (t2768*(t1536*t4023 + t1234*t4306 + t4332 + t4335) + t1234*t5593 + t5602*t920 + t2839*(-1.*t1506*t4023 + t4296 + t4303 - 1.*t4306*t920))*var2[1] + (t2882*(-1.*t1536*t4023 - 1.*t1234*t4306 + t4444 + t4459) + t2839*(t1552*t4023 + t1459*t4306 + t4496 + t4499) + t1459*t5708 + t1234*t5760)*var2[2];
  p_output1[35]=(t2768*(-1.*t1632*t4023 - 1.*t1459*t4585 + t4712 + t4713) + t3119*t5660 + t3074*t5687 + t2882*(t1585*t4023 + t4667 + t4677 + t4585*t920))*var2[0] + (t2768*(t1607*t4023 + t1234*t4585 + t4640 + t4641) + t3096*t5593 + t3074*t5602 + t2839*(-1.*t1585*t4023 + t4575 + t4577 - 1.*t4585*t920))*var2[1] + (t2882*(-1.*t1607*t4023 - 1.*t1234*t4585 + t4748 + t4754) + t2839*(t1632*t4023 + t1459*t4585 + t4772 + t4795) + t3119*t5708 + t3096*t5760)*var2[2];
  p_output1[36]=(t3201*t5660 + t3142*t5687 + t2768*(-1.*t2072*t4023 - 1.*t1459*t5017 + t5138 + t5141 + t6129 + t6151) + t2882*(t1809*t4023 + t5109 + t5113 + t6099 + t6107 + t5017*t920))*var2[0] + (t3172*t5593 + t3142*t5602 + t2768*(t1959*t4023 + t1234*t5017 + t5043 + t5046 + t6048 + t6053) + t2839*(-1.*t1809*t4023 + t4841 + t4974 + t5981 + t5987 - 1.*t5017*t920))*var2[1] + (t3201*t5708 + t3172*t5760 + t2882*(-1.*t1959*t4023 - 1.*t1234*t5017 + t5178 + t5180 + t6211 + t6213) + t2839*(t2072*t4023 + t1459*t5017 + t5194 + t5198 + t6231 + t6233))*var2[2];
  p_output1[37]=(t3291*t5660 + t3254*t5687 + t2768*(-1.*t2517*t4023 - 1.*t1459*t5404 + t5452 + t5453 + t6268 + t6270) + t2882*(t2219*t4023 + t5372 + t5375 + t6253 + t6257 + t5404*t920))*var2[0] + (t3338*t5593 + t3254*t5602 + t2768*(t2683*t4023 + t1234*t5404 + t5552 + t5553 + t6377 + t6378) + t2839*(-1.*t2219*t4023 + t5535 + t5536 + t6355 + t6359 - 1.*t5404*t920))*var2[1] + (t3291*t5708 + t3338*t5760 + t2839*(t2517*t4023 + t1459*t5404 + t5480 + t5484 + t6308 + t6309) + t2882*(-1.*t2683*t4023 - 1.*t1234*t5404 + t5503 + t5504 + t6332 + t6339))*var2[2];
  p_output1[38]=t2882*t5660 + t2768*t5687;
  p_output1[39]=t2839*t5593 + t2768*t5602;
  p_output1[40]=t2882*t5708 + t2839*t5760;
  p_output1[41]=((-1.*t1619*t4013 - 1.*t1428*t4019 - 1.*t1452*t4538 - 1.*t1428*t4548)*t577 + t1357*(t1581*t4013 + t4019*t830 + t4548*t830 + t4538*t844))*var2[0] + ((t1604*t4013 + t1188*t4019 + t1201*t4538 + t1188*t4548)*t577 + t1100*(-1.*t1581*t4013 - 1.*t4019*t830 - 1.*t4548*t830 - 1.*t4538*t844))*var2[1] + (t1357*(-1.*t1604*t4013 - 1.*t1188*t4019 - 1.*t1201*t4538 - 1.*t1188*t4548) + t1100*(t1619*t4013 + t1428*t4019 + t1452*t4538 + t1428*t4548))*var2[2];
  p_output1[42]=(t577*(-1.*t2050*t4013 - 1.*t2070*t4019 - 1.*t1452*t4946 - 1.*t1428*t4955 + t6129 + t6151) + t1980*t6635 + t1660*t6654 + t1357*(t1770*t4013 + t1800*t4019 + t6099 + t6107 + t4955*t830 + t4946*t844))*var2[0] + (t577*(t1923*t4013 + t1938*t4019 + t1201*t4946 + t1188*t4955 + t6048 + t6053) + t1847*t6575 + t1660*t6581 + t1100*(-1.*t1770*t4013 - 1.*t1800*t4019 + t5981 + t5987 - 1.*t4955*t830 - 1.*t4946*t844))*var2[1] + (t1357*(-1.*t1923*t4013 - 1.*t1938*t4019 - 1.*t1201*t4946 - 1.*t1188*t4955 + t6211 + t6213) + t1100*(t2050*t4013 + t2070*t4019 + t1452*t4946 + t1428*t4955 + t6231 + t6233) + t1980*t6698 + t1847*t6703)*var2[2];
  p_output1[43]=(t577*(-1.*t2471*t4013 - 1.*t2503*t4019 - 1.*t1452*t5354 - 1.*t1428*t5367 + t6268 + t6270) + t2301*t6635 + t2181*t6654 + t1357*(t2206*t4013 + t2215*t4019 + t6253 + t6257 + t5367*t830 + t5354*t844))*var2[0] + (t577*(t2651*t4013 + t2671*t4019 + t1201*t5354 + t1188*t5367 + t6377 + t6378) + t2563*t6575 + t2181*t6581 + t1100*(-1.*t2206*t4013 - 1.*t2215*t4019 + t6355 + t6359 - 1.*t5367*t830 - 1.*t5354*t844))*var2[1] + (t1100*(t2471*t4013 + t2503*t4019 + t1452*t5354 + t1428*t5367 + t6308 + t6309) + t1357*(-1.*t2651*t4013 - 1.*t2671*t4019 - 1.*t1201*t5354 - 1.*t1188*t5367 + t6332 + t6339) + t2301*t6698 + t2563*t6703)*var2[2];
  p_output1[44]=t1357*t6635 + t577*t6654;
  p_output1[45]=t1100*t6575 + t577*t6581;
  p_output1[46]=t1357*t6698 + t1100*t6703;
  p_output1[47]=(0.15121*t1877 + 0.15121*t1910 + t577*(-1.*t2043*t3985 - 1.*t2023*t4006 - 1.*t1405*t4890 - 1.*t1393*t4937 + t6129 + t6151) + t1980*t7029 + t1660*t7037 + t1357*(t1759*t3985 + t1701*t4006 + t6099 + t6107 + t4937*t706 + t4890*t811))*var2[0] + (0.15121*t2023 + 0.15121*t2043 + t577*(t1910*t3985 + t1877*t4006 + t1147*t4890 + t1182*t4937 + t6048 + t6053) + t1847*t6944 + t1660*t6949 + t1100*(-1.*t1759*t3985 - 1.*t1701*t4006 + t5981 + t5987 - 1.*t4937*t706 - 1.*t4890*t811))*var2[1] + (0.15121*t1701 + 0.15121*t1759 + t1357*(-1.*t1910*t3985 - 1.*t1877*t4006 - 1.*t1147*t4890 - 1.*t1182*t4937 + t6211 + t6213) + t1100*(t2043*t3985 + t2023*t4006 + t1405*t4890 + t1393*t4937 + t6231 + t6233) + t1980*t7073 + t1847*t7083)*var2[2];
  p_output1[48]=(0.15121*t2585 + 0.15121*t2633 + t577*(-1.*t2350*t3985 - 1.*t2453*t4006 - 1.*t1393*t5323 - 1.*t1405*t5344 + t6268 + t6270) + t2301*t7029 + t2181*t7037 + t1357*(t2203*t3985 + t2189*t4006 + t6253 + t6257 + t5323*t706 + t5344*t811))*var2[0] + (0.15121*t2350 + 0.15121*t2453 + t577*(t2585*t3985 + t2633*t4006 + t1182*t5323 + t1147*t5344 + t6377 + t6378) + t2563*t6944 + t2181*t6949 + t1100*(-1.*t2203*t3985 - 1.*t2189*t4006 + t6355 + t6359 - 1.*t5323*t706 - 1.*t5344*t811))*var2[1] + (0.15121*t2189 + 0.15121*t2203 + t1100*(t2350*t3985 + t2453*t4006 + t1393*t5323 + t1405*t5344 + t6308 + t6309) + t1357*(-1.*t2585*t3985 - 1.*t2633*t4006 - 1.*t1182*t5323 - 1.*t1147*t5344 + t6332 + t6339) + t2301*t7073 + t2563*t7083)*var2[2];
  p_output1[49]=0.15121*t1147 + 0.15121*t1182 + t1357*t7029 + t577*t7037;
  p_output1[50]=0.15121*t1393 + 0.15121*t1405 + t1100*t6944 + t577*t6949;
  p_output1[51]=0.15121*t706 + t1357*t7073 + t1100*t7083 + 0.15121*t811;
  p_output1[52]=(-0.281209*t2533 + 0.038749*t2560 + 1.e-6*(t2104 - 7.000000000455e-6*t273) + t1342*t7378 + t316*t7411 + t2243*t7429 + t2125*t7440 - 7.e-6*(t1349*t7378 + t549*t7411 + t2261*t7429 + t2158*t7440) + 4.e-6*(-1.*t1297*t7378 - 1.*t471*t7411 - 1.*t2233*t7429 - 1.*t2168*t7440))*var2[0] + (-0.281209*t2233 + 0.038749*t2261 + 1.e-6*(t2120 + 4.00000000026e-6*t273) + t2125*t7593 + t1004*t7607 + t2550*t7618 + t316*t7632 + 4.e-6*(-1.*t2168*t7593 - 1.*t1073*t7607 - 1.*t2533*t7618 - 1.*t471*t7632) - 7.e-6*(t2158*t7593 + t2560*t7618 + t549*t7632 + t7607*t969))*var2[1] + (0.038749*t2158 - 0.281209*t2168 + 1.e-6*(7.e-6*t2111 + 6.5e-11*t273 + 4.e-6*t5245) + t2243*t7505 + t1004*t7522 + t2550*t7527 + t1342*t7538 + 4.e-6*(-1.*t2233*t7505 - 1.*t1073*t7522 - 1.*t2533*t7527 - 1.*t1297*t7538) - 7.e-6*(t2261*t7505 + t2560*t7527 + t1349*t7538 + t7522*t969))*var2[2];
  p_output1[53]=-0.281209*t1073 + t1342*t7429 + t316*t7440 + 4.e-6*(-1.*t1297*t7429 - 1.*t471*t7440) - 7.e-6*(t1349*t7429 + t549*t7440) + 0.038749*t969 + 1.e-6*(t292 + t295 + 7.e-6*t988);
  p_output1[54]=-0.281209*t1297 + 0.038749*t1349 + t316*t7593 + t1004*t7618 + 4.e-6*(-1.*t471*t7593 - 1.*t1073*t7618) + 1.e-6*(t266 + t275 + 4.e-6*(-1. + t7702)) - 7.e-6*(t549*t7593 + t7618*t969);
  p_output1[55]=-0.281209*t471 + 0.038749*t549 + t1342*t7505 + t1004*t7527 + 4.e-6*(-1.*t1297*t7505 - 1.*t1073*t7527) + 1.e-6*(-1. + 7.e-6*t307 + 4.e-6*t3764 + t7702) - 7.e-6*(t1349*t7505 + t7527*t969);
  p_output1[56]=4.0519653002457196e-7;
  p_output1[57]=0.29999995910920463;
  p_output1[58]=-2.5986500000000035e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRlFoot_vec_TrotStance1.hh"

namespace TrotStance1
{

void J_fRlFoot_vec_TrotStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
