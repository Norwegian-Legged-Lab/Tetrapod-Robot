/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:26 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t130;
  double t118;
  double t149;
  double t80;
  double t132;
  double t137;
  double t148;
  double t383;
  double t119;
  double t128;
  double t157;
  double t53;
  double t286;
  double t290;
  double t316;
  double t420;
  double t436;
  double t283;
  double t500;
  double t523;
  double t527;
  double t533;
  double t556;
  double t585;
  double t609;
  double t644;
  double t56;
  double t63;
  double t70;
  double t102;
  double t463;
  double t479;
  double t491;
  double t805;
  double t811;
  double t819;
  double t846;
  double t858;
  double t860;
  double t861;
  double t685;
  double t690;
  double t904;
  double t911;
  double t941;
  double t943;
  double t961;
  double t967;
  double t973;
  double t977;
  double t997;
  double t1002;
  double t456;
  double t567;
  double t660;
  double t674;
  double t697;
  double t719;
  double t720;
  double t721;
  double t756;
  double t774;
  double t775;
  double t800;
  double t873;
  double t947;
  double t1004;
  double t1012;
  double t1017;
  double t1022;
  double t1033;
  double t1053;
  double t1062;
  double t1070;
  double t169;
  double t219;
  double t230;
  double t240;
  double t1014;
  double t1088;
  double t1131;
  double t1455;
  double t1477;
  double t1478;
  double t1487;
  double t1509;
  double t1515;
  double t1242;
  double t1268;
  double t1269;
  double t1270;
  double t174;
  double t245;
  double t252;
  double t1338;
  double t1353;
  double t1355;
  double t1362;
  double t1367;
  double t1369;
  double t1382;
  double t1383;
  double t1277;
  double t1287;
  double t1296;
  double t1314;
  double t683;
  double t730;
  double t733;
  double t1149;
  double t1162;
  double t1215;
  double t1219;
  double t1271;
  double t1386;
  double t1404;
  double t1425;
  double t1484;
  double t1539;
  double t1566;
  double t1586;
  double t1591;
  double t1616;
  double t1617;
  double t1618;
  double t1624;
  double t1661;
  double t1674;
  double t1714;
  double t1743;
  double t1976;
  double t1986;
  double t1994;
  double t2020;
  double t2025;
  double t2052;
  double t2065;
  double t2078;
  double t1742;
  double t1762;
  double t1776;
  double t1791;
  double t1807;
  double t1816;
  double t1836;
  double t1837;
  double t1878;
  double t1942;
  double t2000;
  double t2042;
  double t2090;
  double t2093;
  double t2104;
  double t2107;
  double t2117;
  double t2166;
  double t2263;
  double t2264;
  double t2267;
  double t2387;
  double t2394;
  double t2408;
  double t2431;
  double t2439;
  double t2455;
  double t2457;
  double t2434;
  double t2459;
  double t2464;
  double t2485;
  double t2500;
  double t2503;
  double t2504;
  double t2521;
  double t2529;
  double t2542;
  double t36;
  double t38;
  double t2605;
  double t2561;
  double t2652;
  double t2658;
  double t2668;
  double t2685;
  double t2709;
  double t2725;
  double t2970;
  double t2987;
  double t3012;
  double t3030;
  double t3046;
  double t3057;
  double t3058;
  double t3061;
  double t3065;
  double t3069;
  double t3086;
  double t3089;
  double t3101;
  double t3114;
  double t3121;
  double t3134;
  double t2753;
  double t2757;
  double t2758;
  double t2808;
  double t2837;
  double t2845;
  double t2849;
  double t2855;
  double t2889;
  double t2893;
  double t2943;
  double t2955;
  double t3332;
  double t3345;
  double t3365;
  double t3289;
  double t3307;
  double t3308;
  double t3372;
  double t3382;
  double t3402;
  double t3479;
  double t3503;
  double t3523;
  double t3416;
  double t3424;
  double t3466;
  double t3476;
  double t3531;
  double t3541;
  double t3561;
  double t3576;
  double t3599;
  double t3633;
  double t3635;
  double t3637;
  double t3728;
  double t3730;
  double t3744;
  double t3784;
  double t3791;
  double t3792;
  double t3809;
  double t3813;
  double t3826;
  double t3853;
  double t3864;
  double t3865;
  double t3874;
  double t3878;
  double t3937;
  double t3942;
  double t3945;
  double t3981;
  double t3991;
  double t3992;
  double t3955;
  double t3960;
  double t3964;
  double t4017;
  double t4020;
  double t4021;
  double t4045;
  double t4046;
  double t4053;
  double t4032;
  double t4037;
  double t4041;
  double t4042;
  double t4092;
  double t4108;
  double t4117;
  double t4120;
  double t4130;
  double t4131;
  double t4133;
  double t4147;
  double t4148;
  double t4163;
  double t4167;
  double t4244;
  double t4246;
  double t4247;
  double t4261;
  double t4273;
  double t4274;
  double t4278;
  double t4285;
  double t4249;
  double t4277;
  double t4287;
  double t4291;
  double t4293;
  double t4302;
  double t4303;
  double t4304;
  double t4389;
  double t4408;
  double t4442;
  double t4452;
  double t4468;
  double t4470;
  double t4478;
  double t4480;
  double t4433;
  double t4469;
  double t4483;
  double t4485;
  double t4500;
  double t4502;
  double t4503;
  double t4512;
  double t4577;
  double t4578;
  double t4613;
  double t4615;
  double t4292;
  double t4305;
  double t4312;
  double t4375;
  double t4380;
  double t4385;
  double t4555;
  double t4558;
  double t4569;
  double t4573;
  double t4574;
  double t4821;
  double t4833;
  double t4838;
  double t4698;
  double t4892;
  double t4897;
  double t4905;
  double t4919;
  double t4933;
  double t4936;
  double t4939;
  double t4956;
  double t4966;
  double t4970;
  double t4809;
  double t4837;
  double t4846;
  double t4849;
  double t4853;
  double t4854;
  double t4855;
  double t4856;
  double t5057;
  double t5058;
  double t5059;
  double t5030;
  double t5034;
  double t5041;
  double t5015;
  double t5017;
  double t5019;
  double t5022;
  double t5051;
  double t5060;
  double t5065;
  double t5071;
  double t5094;
  double t5096;
  double t5114;
  double t5132;
  double t5133;
  double t4526;
  double t4534;
  double t4540;
  double t4486;
  double t4520;
  double t4521;
  double t4620;
  double t5196;
  double t5201;
  double t5206;
  double t5211;
  double t5215;
  double t5221;
  double t5255;
  double t5257;
  double t5258;
  double t5210;
  double t5291;
  double t5297;
  double t5308;
  double t5271;
  double t5279;
  double t5322;
  double t5326;
  double t5329;
  double t5336;
  double t5339;
  double t5342;
  double t5361;
  double t5366;
  double t5372;
  double t5438;
  double t5442;
  double t5459;
  double t5462;
  double t5464;
  double t5473;
  double t5558;
  double t5559;
  double t5564;
  double t5565;
  double t5566;
  double t5568;
  double t5578;
  double t5596;
  double t5607;
  double t5610;
  double t5510;
  double t5515;
  double t5518;
  double t5492;
  double t5432;
  double t5434;
  double t5435;
  double t5683;
  double t5684;
  double t5685;
  double t5645;
  double t5647;
  double t5648;
  double t5650;
  double t5652;
  double t5659;
  double t5635;
  double t5641;
  double t5642;
  double t5661;
  double t5663;
  double t5666;
  double t5667;
  double t5689;
  double t5697;
  double t5698;
  double t5704;
  double t5705;
  double t5851;
  double t5852;
  double t5853;
  double t5859;
  double t5910;
  double t5911;
  double t5913;
  double t5967;
  double t5928;
  double t5923;
  double t5930;
  double t5943;
  double t5950;
  double t5982;
  double t5988;
  double t5990;
  double t5991;
  double t6000;
  double t6075;
  double t6076;
  double t6082;
  double t6098;
  double t6104;
  double t6120;
  double t6151;
  double t6132;
  double t6204;
  double t6205;
  double t6207;
  double t6209;
  double t6211;
  double t6213;
  double t6214;
  double t6215;
  double t6248;
  double t6251;
  double t6255;
  double t6257;
  double t6260;
  double t6262;
  double t6267;
  double t6268;
  double t6273;
  double t6275;
  double t6277;
  double t6278;
  double t6333;
  double t6334;
  double t6335;
  double t6341;
  double t6342;
  double t6345;
  double t6264;
  double t6279;
  double t6280;
  double t6284;
  double t6287;
  double t6293;
  double t6317;
  double t6319;
  double t6324;
  double t6311;
  double t6313;
  double t6326;
  double t6378;
  double t6432;
  double t6433;
  double t6443;
  double t6444;
  double t6446;
  double t6448;
  double t6449;
  double t6450;
  double t6235;
  double t6239;
  double t6241;
  double t6210;
  double t6216;
  double t6220;
  double t6364;
  double t6366;
  double t6367;
  double t6336;
  double t6346;
  double t6354;
  double t6377;
  double t6514;
  double t6515;
  double t6517;
  double t6314;
  double t6504;
  double t6508;
  double t6509;
  double t6535;
  double t6537;
  double t6542;
  double t6548;
  double t6549;
  double t6551;
  double t6490;
  double t6491;
  double t6492;
  double t6479;
  double t6483;
  double t6486;
  double t6473;
  double t6474;
  double t6488;
  double t6495;
  double t6496;
  double t6622;
  double t6625;
  double t6627;
  double t6632;
  double t6634;
  double t6637;
  double t6577;
  double t6581;
  double t6584;
  double t6529;
  double t6530;
  double t6531;
  double t6523;
  double t6560;
  double t6687;
  double t6688;
  double t6696;
  double t6576;
  double t6602;
  double t6658;
  double t6668;
  double t6671;
  double t6721;
  double t6726;
  double t6727;
  double t6734;
  double t6747;
  double t6761;
  double t6833;
  double t6834;
  double t6846;
  double t6864;
  double t6866;
  double t6868;
  double t6871;
  double t6872;
  double t6873;
  double t6875;
  double t6876;
  double t6886;
  double t6889;
  double t6891;
  double t6893;
  double t6900;
  double t6901;
  double t6902;
  double t6903;
  double t6910;
  double t6911;
  double t6917;
  double t6923;
  double t6924;
  double t6931;
  double t6934;
  double t6935;
  double t6936;
  double t6939;
  double t6940;
  double t6941;
  double t6937;
  double t6944;
  double t6952;
  double t6953;
  double t6954;
  double t6959;
  double t6960;
  double t6961;
  double t6966;
  double t6968;
  double t2557;
  double t112;
  double t2589;
  double t2616;
  double t6976;
  double t6978;
  double t6982;
  double t6985;
  double t6987;
  double t6991;
  double t2678;
  double t7032;
  double t7034;
  double t7038;
  double t7044;
  double t7046;
  double t7047;
  double t7060;
  double t7061;
  double t7064;
  double t7067;
  double t7073;
  double t7075;
  double t7079;
  double t7083;
  double t7085;
  double t2740;
  double t2750;
  double t6999;
  double t7000;
  double t7003;
  double t7009;
  double t7019;
  double t7020;
  double t2830;
  double t2831;
  double t2834;
  double t2872;
  double t2876;
  double t2877;
  double t7154;
  double t7158;
  double t7159;
  double t7162;
  double t7163;
  double t7164;
  double t7167;
  double t7176;
  double t7179;
  double t7093;
  double t7095;
  double t7096;
  double t7100;
  double t7104;
  double t7107;
  double t7109;
  double t7111;
  double t7122;
  double t7130;
  double t7131;
  double t7135;
  double t7236;
  double t7245;
  double t7277;
  double t7278;
  double t7279;
  double t7282;
  double t7284;
  double t7285;
  double t7291;
  double t7309;
  double t7314;
  double t7315;
  double t5398;
  double t5400;
  double t5406;
  double t7235;
  double t7367;
  double t5029;
  double t5067;
  double t5069;
  double t7396;
  double t7406;
  double t7515;
  double t7518;
  double t7540;
  double t7545;
  double t7649;
  double t7652;
  double t7669;
  double t7670;
  double t6172;
  double t6173;
  double t6175;
  double t6141;
  double t6142;
  double t6145;
  double t6094;
  double t7807;
  double t7841;
  double t6777;
  double t6781;
  double t6783;
  double t7836;
  double t7810;
  double t6478;
  double t6497;
  double t6498;
  double t7928;
  double t7938;
  double t6705;
  double t6709;
  double t6711;
  double t7960;
  double t7972;
  double t8045;
  double t8048;
  double t8050;
  double t8051;
  double t8053;
  double t8054;
  double t8057;
  double t8058;
  double t8059;
  double t8060;
  double t8066;
  double t8073;
  double t8074;
  double t8078;
  double t8083;
  double t8085;
  double t8086;
  double t8087;
  double t8090;
  double t8091;
  double t8094;
  double t8095;
  double t8097;
  double t8100;
  double t8118;
  double t8119;
  double t8122;
  double t8123;
  double t8109;
  double t8110;
  double t8113;
  double t8115;
  double t8107;
  double t8108;
  double t8117;
  double t8124;
  double t8125;
  double t8126;
  double t8128;
  double t8129;
  double t8130;
  double t8133;
  double t8135;
  double t8136;
  double t8138;
  double t8139;
  double t8140;
  double t8175;
  double t8178;
  double t8179;
  double t8183;
  double t8184;
  double t8185;
  double t8190;
  double t8191;
  double t8193;
  double t8195;
  double t8196;
  double t8198;
  double t8199;
  double t8200;
  double t8201;
  double t8151;
  double t8155;
  double t8157;
  double t8166;
  double t8169;
  double t8172;
  double t8265;
  double t8266;
  double t8269;
  double t8271;
  double t8272;
  double t8273;
  double t8274;
  double t8275;
  double t8276;
  double t8213;
  double t8214;
  double t8215;
  double t8216;
  double t8233;
  double t8234;
  double t8235;
  double t8238;
  double t8241;
  double t8244;
  double t8247;
  double t8248;
  double t8332;
  double t8336;
  double t8347;
  double t8348;
  double t8393;
  double t8395;
  double t8404;
  double t8408;
  double t8457;
  double t8472;
  double t8535;
  double t8536;
  double t8538;
  double t8539;
  double t8540;
  double t8541;
  double t8543;
  double t8519;
  double t8522;
  double t8526;
  double t8527;
  double t8528;
  double t8532;
  double t8533;
  double t8473;
  double t8455;
  double t8557;
  double t8560;
  double t8566;
  double t8568;
  double t8644;
  double t8660;
  double t8657;
  double t8645;
  double t8714;
  double t8718;
  double t8723;
  double t8728;
  t130 = Cos(var1[11]);
  t118 = Cos(var1[10]);
  t149 = -1. + t130;
  t80 = Sin(var1[9]);
  t132 = -1.*t130;
  t137 = 1. + t132;
  t148 = 1.6e-11*t137;
  t383 = Sin(var1[11]);
  t119 = -1.*t118;
  t128 = 1. + t119;
  t157 = 1.6e-11*t149;
  t53 = Cos(var1[9]);
  t286 = -1.000000000016*t137;
  t290 = 1. + t286;
  t316 = 0.004352*t290;
  t420 = -0.9999910000159999*t383;
  t436 = t316 + t420;
  t283 = Sin(var1[10]);
  t500 = -1. + t148;
  t523 = 4.e-6*t500;
  t527 = 3.999964e-6*t137;
  t533 = -1.7408e-8*t383;
  t556 = t523 + t527 + t533;
  t585 = 0.999991*t130;
  t609 = 0.004352*t383;
  t644 = t157 + t585 + t609;
  t56 = -1.*t53;
  t63 = 1. + t56;
  t70 = 0.15121*t63;
  t102 = -0.15121*t80;
  t463 = -1. + t118;
  t479 = 1.6e-11*t463;
  t491 = 1. + t479;
  t805 = -1.26e-8*var1[11];
  t811 = 1. + t157;
  t819 = -0.14871*t811;
  t846 = -1.64779999997447e-7*t137;
  t858 = -1.59556e-7*t149;
  t860 = -1.199987999968e-6*t383;
  t861 = t805 + t819 + t846 + t858 + t860;
  t685 = -1.000000000016*t128;
  t690 = 1. + t685;
  t904 = 0.803147*t290;
  t911 = 0.50315000001605*t137;
  t941 = 0.00130540515936178*t383;
  t943 = t904 + t911 + t941;
  t961 = -5.04e-14*var1[11];
  t967 = -0.03988959484*t137;
  t973 = 6.38224e-13*t149;
  t977 = -0.041195*t130;
  t997 = 0.299996999992*t383;
  t1002 = t961 + t967 + t973 + t977 + t997;
  t456 = -4.e-6*t283*t436;
  t567 = t491*t556;
  t660 = 4.e-6*t128*t644;
  t674 = 0. + t456 + t567 + t660;
  t697 = t690*t436;
  t719 = 4.e-6*t283*t556;
  t720 = -1.*t283*t644;
  t721 = 0. + t697 + t719 + t720;
  t756 = -1.2484e-7*var1[10];
  t774 = 2.479936e-18*t128;
  t775 = -1.54996e-7*t463;
  t800 = 1.124840000016e-6*t283;
  t873 = t491*t861;
  t947 = -4.e-6*t283*t943;
  t1004 = 4.e-6*t128*t1002;
  t1012 = t756 + t774 + t775 + t800 + t873 + t947 + t1004;
  t1017 = 0.281210000008499*t128;
  t1022 = -0.03874900000062*t283;
  t1033 = 4.e-6*t283*t861;
  t1053 = t690*t943;
  t1062 = -1.*t283*t1002;
  t1070 = t1017 + t1022 + t1033 + t1053 + t1062;
  t169 = -1. + t148 + t157;
  t219 = 4.e-6*t149;
  t230 = -4.e-6*t130;
  t240 = t219 + t230;
  t1014 = -1.*t80*t1012;
  t1088 = t53*t1070;
  t1131 = t70 + t102 + t1014 + t1088;
  t1455 = t491*t169;
  t1477 = 4.e-6*t128*t240;
  t1478 = t1455 + t1477;
  t1487 = 4.e-6*t169*t283;
  t1509 = -1.*t240*t283;
  t1515 = t1487 + t1509;
  t1242 = -0.15121*t63;
  t1268 = t53*t1012;
  t1269 = t80*t1070;
  t1270 = t1242 + t102 + t1268 + t1269;
  t174 = 4.e-6*t128*t169;
  t245 = t118*t240;
  t252 = t174 + t245;
  t1338 = -4.9936e-13*var1[10];
  t1353 = -0.038749*t128;
  t1355 = 6.19984e-13*t463;
  t1362 = -0.281210000004*t283;
  t1367 = 4.e-6*t128*t861;
  t1369 = t283*t943;
  t1382 = t118*t1002;
  t1383 = 0. + t1338 + t1353 + t1355 + t1362 + t1367 + t1369 + t1382;
  t1277 = t283*t436;
  t1287 = 4.e-6*t128*t556;
  t1296 = t118*t644;
  t1314 = 0. + t1277 + t1287 + t1296;
  t683 = -1.*t80*t674;
  t730 = t53*t721;
  t733 = 0. + t683 + t730;
  t1149 = -1.*t733*t1131;
  t1162 = t53*t674;
  t1215 = t80*t721;
  t1219 = 0. + t1162 + t1215;
  t1271 = -1.*t1219*t1270;
  t1386 = -1.*t1314*t1383;
  t1404 = t1149 + t1271 + t1386;
  t1425 = t252*t1404;
  t1484 = -1.*t1478*t80;
  t1539 = t53*t1515;
  t1566 = t1484 + t1539;
  t1586 = t1566*t1131;
  t1591 = t53*t1478;
  t1616 = t80*t1515;
  t1617 = t1591 + t1616;
  t1618 = t1617*t1270;
  t1624 = t252*t1383;
  t1661 = t1586 + t1618 + t1624;
  t1674 = t1661*t1314;
  t1714 = t1425 + t1674;
  t1743 = t1338 + t1353 + t1355 + t1362 + t1367 + t1369 + t1382;
  t1976 = -1.7408e-8*t137;
  t1986 = -3.999964e-6*t383;
  t1994 = t1976 + t1986;
  t2020 = 0.999991*t290;
  t2025 = t2020 + t609;
  t2052 = -0.004352*t130;
  t2065 = 0.999991*t383;
  t2078 = t2052 + t2065;
  t1742 = -1.*t674*t1012;
  t1762 = -1.*t1314*t1743;
  t1776 = -1.*t721*t1070;
  t1791 = t1742 + t1762 + t1776;
  t1807 = t252*t1791;
  t1816 = t1478*t1012;
  t1836 = t252*t1743;
  t1837 = t1515*t1070;
  t1878 = t1816 + t1836 + t1837;
  t1942 = t1878*t1314;
  t2000 = t491*t1994;
  t2042 = -4.e-6*t283*t2025;
  t2090 = 4.e-6*t128*t2078;
  t2093 = 0. + t2000 + t2042 + t2090;
  t2104 = -0.15121*t2093;
  t2107 = 4.e-6*t283*t1994;
  t2117 = t690*t2025;
  t2166 = -1.*t283*t2078;
  t2263 = 0. + t2107 + t2117 + t2166;
  t2264 = -0.15121*t2263;
  t2267 = t1807 + t1942 + t2104 + t2264;
  t2387 = -1.*t861*t556;
  t2394 = -1.*t436*t943;
  t2408 = -1.*t644*t1002;
  t2431 = t2387 + t2394 + t2408;
  t2439 = t169*t861;
  t2455 = t240*t1002;
  t2457 = t2439 + t2455;
  t2434 = -1.*t240*t2431;
  t2459 = -1.*t2457*t644;
  t2464 = t2434 + t2459;
  t2485 = 4.e-6*t2464;
  t2500 = -1.*t169*t2431;
  t2503 = 1.e-6*t1994;
  t2504 = -1.*t2457*t556;
  t2521 = -0.038749*t2025;
  t2529 = -0.28121*t2078;
  t2542 = t2485 + t2500 + t2503 + t2504 + t2521 + t2529;
  t36 = Cos(var1[4]);
  t38 = Cos(var1[5]);
  t2605 = Sin(var1[5]);
  t2561 = Sin(var1[4]);
  t2652 = -1.*t36*t38*t80;
  t2658 = -1.*t53*t36*t2605;
  t2668 = t2652 + t2658;
  t2685 = t53*t36*t38;
  t2709 = -1.*t36*t80*t2605;
  t2725 = t2685 + t2709;
  t2970 = 4.e-6*t128*t1994;
  t2987 = t283*t2025;
  t3012 = t118*t2078;
  t3030 = 0. + t2970 + t2987 + t3012;
  t3046 = t3030*t2561;
  t3057 = -1.*t80*t2093;
  t3058 = t53*t2263;
  t3061 = 0. + t3057 + t3058;
  t3065 = t38*t3061;
  t3069 = t53*t2093;
  t3086 = t80*t2263;
  t3089 = 0. + t3069 + t3086;
  t3101 = -1.*t3089*t2605;
  t3114 = 0. + t3065 + t3101;
  t3121 = t36*t3114;
  t3134 = 0. + t3046 + t3121;
  t2753 = t283*t2561;
  t2757 = -4.e-6*t283*t2668;
  t2758 = t690*t2725;
  t2808 = t2753 + t2757 + t2758;
  t2837 = t118*t2561;
  t2845 = 4.e-6*t128*t2668;
  t2849 = -1.*t283*t2725;
  t2855 = t2837 + t2845 + t2849;
  t2889 = 4.e-6*t128*t2561;
  t2893 = t491*t2668;
  t2943 = 4.e-6*t283*t2725;
  t2955 = t2889 + t2893 + t2943;
  t3332 = t38*t1617;
  t3345 = t1566*t2605;
  t3365 = t3332 + t3345;
  t3289 = t38*t1219;
  t3307 = t733*t2605;
  t3308 = 0. + t3289 + t3307;
  t3372 = t38*t1270;
  t3382 = t1131*t2605;
  t3402 = 0. + t3372 + t3382;
  t3479 = t38*t1131;
  t3503 = -1.*t1270*t2605;
  t3523 = 0. + t3479 + t3503;
  t3416 = t3365*t3402;
  t3424 = t38*t1566;
  t3466 = -1.*t1617*t2605;
  t3476 = t3424 + t3466;
  t3531 = t3476*t3523;
  t3541 = t1624 + t3416 + t3531;
  t3561 = t3308*t3541;
  t3576 = -1.*t3308*t3402;
  t3599 = t38*t733;
  t3633 = -1.*t1219*t2605;
  t3635 = 0. + t3599 + t3633;
  t3637 = -1.*t3635*t3523;
  t3728 = t1386 + t3576 + t3637;
  t3730 = t3365*t3728;
  t3744 = t3561 + t3730;
  t3784 = Sin(var1[3]);
  t3791 = t38*t3089;
  t3792 = t3061*t2605;
  t3809 = 0. + t3791 + t3792;
  t3813 = t3784*t3809;
  t3826 = Cos(var1[3]);
  t3853 = t36*t3030;
  t3864 = -1.*t2561*t3114;
  t3865 = 0. + t3853 + t3864;
  t3874 = t3826*t3865;
  t3878 = 0. + t3813 + t3874;
  t3937 = t3826*t3809;
  t3942 = -1.*t3784*t3865;
  t3945 = 0. + t3937 + t3942;
  t3981 = t252*t2561;
  t3991 = t36*t3476;
  t3992 = t3981 + t3991;
  t3955 = t1314*t2561;
  t3960 = t36*t3635;
  t3964 = 0. + t3955 + t3960;
  t4017 = t1383*t2561;
  t4020 = t36*t3523;
  t4021 = 0. + t4017 + t4020;
  t4045 = t36*t1383;
  t4046 = -1.*t2561*t3523;
  t4053 = 0. + t4045 + t4046;
  t4032 = t3992*t4021;
  t4037 = t252*t36;
  t4041 = -1.*t2561*t3476;
  t4042 = t4037 + t4041;
  t4092 = t4042*t4053;
  t4108 = t3416 + t4032 + t4092;
  t4117 = t3964*t4108;
  t4120 = -1.*t3964*t4021;
  t4130 = t36*t1314;
  t4131 = -1.*t2561*t3635;
  t4133 = 0. + t4130 + t4131;
  t4147 = -1.*t4133*t4053;
  t4148 = t3576 + t4120 + t4147;
  t4163 = t3992*t4148;
  t4167 = t4117 + t4163;
  t4244 = 0.00130540515936178*t130;
  t4246 = -0.2999969999968001*t383;
  t4247 = t4244 + t4246;
  t4261 = -1.199987999968e-6*t130;
  t4273 = -5.2216206374471e-9*t383;
  t4274 = -1.26e-8 + t4261 + t4273;
  t4278 = 0.299996999992*t130;
  t4285 = -5.04e-14 + t4278 + t941;
  t4249 = -4.e-6*t283*t4247;
  t4277 = t491*t4274;
  t4287 = 4.e-6*t128*t4285;
  t4291 = t4249 + t4277 + t4287;
  t4293 = t690*t4247;
  t4302 = 4.e-6*t283*t4274;
  t4303 = -1.*t283*t4285;
  t4304 = t4293 + t4302 + t4303;
  t4389 = 0.004352*t130;
  t4408 = t4389 + t420;
  t4442 = -0.9999910000159999*t130;
  t4452 = -0.00435200000006963*t383;
  t4468 = t4442 + t4452;
  t4470 = -1.7408e-8*t130;
  t4478 = 3.999964000064e-6*t383;
  t4480 = t4470 + t4478;
  t4433 = 4.e-6*t128*t4408;
  t4469 = -4.e-6*t283*t4468;
  t4483 = t491*t4480;
  t4485 = t4433 + t4469 + t4483;
  t4500 = -1.*t283*t4408;
  t4502 = t690*t4468;
  t4503 = 4.e-6*t283*t4480;
  t4512 = t4500 + t4502 + t4503;
  t4577 = t118*t4408;
  t4578 = t283*t4468;
  t4613 = 4.e-6*t128*t4480;
  t4615 = t4577 + t4578 + t4613;
  t4292 = -1.*t80*t4291;
  t4305 = t53*t4304;
  t4312 = t4292 + t4305;
  t4375 = t53*t4291;
  t4380 = t80*t4304;
  t4385 = t4375 + t4380;
  t4555 = t283*t4247;
  t4558 = 4.e-6*t128*t4274;
  t4569 = t118*t4285;
  t4573 = t4555 + t4558 + t4569;
  t4574 = -1.*t4573*t1314;
  t4821 = -3.999964e-6*t130;
  t4833 = t4821 + t533;
  t4838 = t585 + t609;
  t4698 = t252*t4573;
  t4892 = -1.*t436*t4247;
  t4897 = -1.*t556*t4274;
  t4905 = -1.*t861*t4480;
  t4919 = -1.*t4468*t943;
  t4933 = -1.*t4285*t644;
  t4936 = -1.*t4408*t1002;
  t4939 = t4892 + t4897 + t4905 + t4919 + t4933 + t4936;
  t4956 = t169*t4274;
  t4966 = t240*t4285;
  t4970 = t4956 + t4966;
  t4809 = -4.e-6*t283*t4408;
  t4837 = t491*t4833;
  t4846 = 4.e-6*t128*t4838;
  t4849 = t4809 + t4837 + t4846;
  t4853 = t690*t4408;
  t4854 = 4.e-6*t283*t4833;
  t4855 = -1.*t283*t4838;
  t4856 = t4853 + t4854 + t4855;
  t5057 = t53*t4849;
  t5058 = t80*t4856;
  t5059 = t5057 + t5058;
  t5030 = -1.*t80*t4849;
  t5034 = t53*t4856;
  t5041 = t5030 + t5034;
  t5015 = t283*t4408;
  t5017 = 4.e-6*t128*t4833;
  t5019 = t118*t4838;
  t5022 = t5015 + t5017 + t5019;
  t5051 = t38*t5041;
  t5060 = -1.*t5059*t2605;
  t5065 = t5051 + t5060;
  t5071 = t38*t5059;
  t5094 = t5041*t2605;
  t5096 = t5071 + t5094;
  t5114 = t36*t5022;
  t5132 = -1.*t2561*t5065;
  t5133 = t5114 + t5132;
  t4526 = t53*t4485;
  t4534 = t80*t4512;
  t4540 = t4526 + t4534;
  t4486 = -1.*t80*t4485;
  t4520 = t53*t4512;
  t4521 = t4486 + t4520;
  t4620 = -1.*t4615*t1383;
  t5196 = t38*t4385;
  t5201 = t4312*t2605;
  t5206 = t5196 + t5201;
  t5211 = t38*t4312;
  t5215 = -1.*t4385*t2605;
  t5221 = t5211 + t5215;
  t5255 = t38*t4540;
  t5257 = t4521*t2605;
  t5258 = t5255 + t5257;
  t5210 = t3365*t5206;
  t5291 = t38*t4521;
  t5297 = -1.*t4540*t2605;
  t5308 = t5291 + t5297;
  t5271 = -1.*t5206*t3308;
  t5279 = -1.*t5258*t3402;
  t5322 = t4573*t2561;
  t5326 = t36*t5221;
  t5329 = t5322 + t5326;
  t5336 = t36*t4573;
  t5339 = -1.*t2561*t5221;
  t5342 = t5336 + t5339;
  t5361 = t4615*t2561;
  t5366 = t36*t5308;
  t5372 = t5361 + t5366;
  t5438 = -0.15121*t53;
  t5442 = t5438 + t102 + t1014 + t1088;
  t5459 = 0.15121*t80;
  t5462 = -1.*t53*t1012;
  t5464 = -1.*t80*t1070;
  t5473 = t5438 + t5459 + t5462 + t5464;
  t5558 = -1.*t53*t2093;
  t5559 = -1.*t80*t2263;
  t5564 = t5558 + t5559;
  t5565 = t38*t5564;
  t5566 = t3057 + t3058;
  t5568 = -1.*t5566*t2605;
  t5578 = t5565 + t5568;
  t5596 = t38*t5566;
  t5607 = t5564*t2605;
  t5610 = t5596 + t5607;
  t5510 = -1.*t53*t1478;
  t5515 = -1.*t80*t1515;
  t5518 = t5510 + t5515;
  t5492 = t683 + t730;
  t5432 = -1.*t53*t674;
  t5434 = -1.*t80*t721;
  t5435 = t5432 + t5434;
  t5683 = t38*t5492;
  t5684 = t5435*t2605;
  t5685 = t5683 + t5684;
  t5645 = t38*t5473;
  t5647 = -1.*t5442*t2605;
  t5648 = t5645 + t5647;
  t5650 = t38*t5442;
  t5652 = t5473*t2605;
  t5659 = t5650 + t5652;
  t5635 = t5518*t2605;
  t5641 = t3424 + t5635;
  t5642 = t5641*t3402;
  t5661 = t3365*t5659;
  t5663 = t38*t5518;
  t5666 = -1.*t1566*t2605;
  t5667 = t5663 + t5666;
  t5689 = -1.*t5685*t3402;
  t5697 = -1.*t3308*t5659;
  t5698 = t38*t5435;
  t5704 = -1.*t5492*t2605;
  t5705 = t5698 + t5704;
  t5851 = -1.*t38*t3089;
  t5852 = -1.*t3061*t2605;
  t5853 = t5851 + t5852;
  t5859 = t3065 + t3101;
  t5910 = -1.*t38*t1270;
  t5911 = -1.*t1131*t2605;
  t5913 = t5910 + t5911;
  t5967 = t3599 + t3633;
  t5928 = t3479 + t3503;
  t5923 = t3476*t3402;
  t5930 = t3365*t5928;
  t5943 = -1.*t38*t1617;
  t5950 = t5943 + t5666;
  t5982 = -1.*t5967*t3402;
  t5988 = -1.*t3308*t5928;
  t5990 = -1.*t38*t1219;
  t5991 = -1.*t733*t2605;
  t6000 = t5990 + t5991;
  t6075 = -1.*t3030*t2561;
  t6076 = -1.*t36*t3114;
  t6082 = t6075 + t6076;
  t6098 = -1.*t1383*t2561;
  t6104 = -1.*t36*t3523;
  t6120 = t6098 + t6104;
  t6151 = t4130 + t4131;
  t6132 = t4045 + t4046;
  t6204 = -1.000000000016*t283*t436;
  t6205 = 4.e-6*t118*t556;
  t6207 = -1.*t118*t644;
  t6209 = t6204 + t6205 + t6207;
  t6211 = -4.e-6*t118*t436;
  t6213 = -1.6e-11*t283*t556;
  t6214 = 4.e-6*t283*t644;
  t6215 = t6211 + t6213 + t6214;
  t6248 = -0.03874900000062*t118;
  t6251 = 0.281210000008499*t283;
  t6255 = 4.e-6*t118*t861;
  t6257 = -1.000000000016*t283*t943;
  t6260 = -1.*t118*t1002;
  t6262 = t6248 + t6251 + t6255 + t6257 + t6260;
  t6267 = 1.124840000016e-6*t118;
  t6268 = 1.5499600000248e-7*t283;
  t6273 = -1.6e-11*t283*t861;
  t6275 = -4.e-6*t118*t943;
  t6277 = 4.e-6*t283*t1002;
  t6278 = -1.2484e-7 + t6267 + t6268 + t6273 + t6275 + t6277;
  t6333 = 4.e-6*t118*t169;
  t6334 = -1.*t118*t240;
  t6335 = t6333 + t6334;
  t6341 = -1.6e-11*t169*t283;
  t6342 = 4.e-6*t240*t283;
  t6345 = t6341 + t6342;
  t6264 = t80*t6262;
  t6279 = t53*t6278;
  t6280 = t6264 + t6279;
  t6284 = t53*t6262;
  t6287 = -1.*t80*t6278;
  t6293 = t6284 + t6287;
  t6317 = -0.281210000004*t118;
  t6319 = t118*t943;
  t6324 = -4.9936e-13 + t6317 + t1022 + t1033 + t6319 + t1062;
  t6311 = t118*t436;
  t6313 = t6311 + t719 + t720;
  t6326 = -1.*t1314*t6324;
  t6378 = t252*t6324;
  t6432 = 4.e-6*t118*t1994;
  t6433 = -1.000000000016*t283*t2025;
  t6443 = -1.*t118*t2078;
  t6444 = t6432 + t6433 + t6443;
  t6446 = -1.6e-11*t283*t1994;
  t6448 = -4.e-6*t118*t2025;
  t6449 = 4.e-6*t283*t2078;
  t6450 = t6446 + t6448 + t6449;
  t6235 = t80*t6209;
  t6239 = t53*t6215;
  t6241 = t6235 + t6239;
  t6210 = t53*t6209;
  t6216 = -1.*t80*t6215;
  t6220 = t6210 + t6216;
  t6364 = t6335*t80;
  t6366 = t53*t6345;
  t6367 = t6364 + t6366;
  t6336 = t53*t6335;
  t6346 = -1.*t80*t6345;
  t6354 = t6336 + t6346;
  t6377 = t1515*t1383;
  t6514 = t38*t6367;
  t6515 = t6354*t2605;
  t6517 = t6514 + t6515;
  t6314 = -1.*t6313*t1383;
  t6504 = t38*t6241;
  t6508 = t6220*t2605;
  t6509 = t6504 + t6508;
  t6535 = t38*t6293;
  t6537 = -1.*t6280*t2605;
  t6542 = t6535 + t6537;
  t6548 = t38*t6280;
  t6549 = t6293*t2605;
  t6551 = t6548 + t6549;
  t6490 = t80*t6444;
  t6491 = t53*t6450;
  t6492 = t6490 + t6491;
  t6479 = t53*t6444;
  t6483 = -1.*t80*t6450;
  t6486 = t6479 + t6483;
  t6473 = t118*t2025;
  t6474 = t2107 + t6473 + t2166;
  t6488 = t38*t6486;
  t6495 = -1.*t6492*t2605;
  t6496 = t6488 + t6495;
  t6622 = t38*t6492;
  t6625 = t6486*t2605;
  t6627 = t6622 + t6625;
  t6632 = t36*t6474;
  t6634 = -1.*t2561*t6496;
  t6637 = t6632 + t6634;
  t6577 = t38*t6220;
  t6581 = -1.*t6241*t2605;
  t6584 = t6577 + t6581;
  t6529 = t38*t6354;
  t6530 = -1.*t6367*t2605;
  t6531 = t6529 + t6530;
  t6523 = t6517*t3402;
  t6560 = t3365*t6551;
  t6687 = t1515*t2561;
  t6688 = t36*t6531;
  t6696 = t6687 + t6688;
  t6576 = -1.*t6509*t3402;
  t6602 = -1.*t3308*t6551;
  t6658 = t6313*t2561;
  t6668 = t36*t6584;
  t6671 = t6658 + t6668;
  t6721 = t6324*t2561;
  t6726 = t36*t6542;
  t6727 = t6721 + t6726;
  t6734 = t36*t6324;
  t6747 = -1.*t2561*t6542;
  t6761 = t6734 + t6747;
  t6833 = t1131*t3061;
  t6834 = t1270*t3089;
  t6846 = t1383*t3030;
  t6864 = t6833 + t6834 + t6846;
  t6866 = t252*t6864;
  t6868 = -1.*t1566*t1131;
  t6871 = -1.*t1617*t1270;
  t6872 = -1.*t252*t1383;
  t6873 = t6868 + t6871 + t6872;
  t6875 = t6873*t3030;
  t6876 = t6866 + t6875;
  t6886 = t1012*t2093;
  t6889 = t1743*t3030;
  t6891 = t1070*t2263;
  t6893 = t6886 + t6889 + t6891;
  t6900 = t252*t6893;
  t6901 = -0.15121*t674;
  t6902 = -0.15121*t721;
  t6903 = -1.*t1478*t1012;
  t6910 = -1.*t252*t1743;
  t6911 = -1.*t1515*t1070;
  t6917 = t6903 + t6910 + t6911;
  t6923 = t6917*t3030;
  t6924 = t6900 + t6901 + t6902 + t6923;
  t6931 = t1994*t861;
  t6934 = t943*t2025;
  t6935 = t1002*t2078;
  t6936 = t6931 + t6934 + t6935;
  t6939 = -1.*t169*t861;
  t6940 = -1.*t240*t1002;
  t6941 = t6939 + t6940;
  t6937 = -1.*t240*t6936;
  t6944 = -1.*t6941*t2078;
  t6952 = t6937 + t6944;
  t6953 = 4.e-6*t6952;
  t6954 = -1.*t169*t6936;
  t6959 = -0.038749*t436;
  t6960 = -1.*t6941*t1994;
  t6961 = 1.e-6*t556;
  t6966 = -0.28121*t644;
  t6968 = t6953 + t6954 + t6959 + t6960 + t6961 + t6966;
  t2557 = t1338 + t1353 + t1355 + t1362;
  t112 = t70 + t102;
  t2589 = t1242 + t102;
  t2616 = t756 + t774 + t775 + t800;
  t6976 = t38*t3784*t2561;
  t6978 = t3826*t2605;
  t6982 = t6976 + t6978;
  t6985 = t3826*t38;
  t6987 = -1.*t3784*t2561*t2605;
  t6991 = t6985 + t6987;
  t2678 = t1017 + t1022;
  t7032 = t3784*t3308;
  t7034 = t3826*t4133;
  t7038 = 0. + t7032 + t7034;
  t7044 = t3826*t3308;
  t7046 = -1.*t3784*t4133;
  t7047 = 0. + t7044 + t7046;
  t7060 = -1.*t3365*t3402;
  t7061 = -1.*t3476*t3523;
  t7064 = t6872 + t7060 + t7061;
  t7067 = t3809*t7064;
  t7073 = t3402*t3809;
  t7075 = t3523*t3114;
  t7079 = t6846 + t7073 + t7075;
  t7083 = t3365*t7079;
  t7085 = t7067 + t7083;
  t2740 = -0.0398890000006382*t383;
  t2750 = t911 + t2740;
  t6999 = -1.*t80*t6982;
  t7000 = t53*t6991;
  t7003 = t6999 + t7000;
  t7009 = t53*t6982;
  t7019 = t80*t6991;
  t7020 = t7009 + t7019;
  t2830 = -0.039889*t137;
  t2831 = -0.503150000008*t383;
  t2834 = t961 + t2830 + t973 + t2831;
  t2872 = 2.552896e-18*t137;
  t2876 = 2.012600000032e-6*t383;
  t2877 = t805 + t2872 + t858 + t2876;
  t7154 = -1.*t3992*t4021;
  t7158 = -1.*t4042*t4053;
  t7159 = t7060 + t7154 + t7158;
  t7162 = t3134*t7159;
  t7163 = t4021*t3134;
  t7164 = t4053*t3865;
  t7167 = t7073 + t7163 + t7164;
  t7176 = t3992*t7167;
  t7179 = t7162 + t7176;
  t7093 = -1.*t36*t283*t3784;
  t7095 = -4.e-6*t283*t7003;
  t7096 = t690*t7020;
  t7100 = t7093 + t7095 + t7096;
  t7104 = -1.*t118*t36*t3784;
  t7107 = 4.e-6*t128*t7003;
  t7109 = -1.*t283*t7020;
  t7111 = t7104 + t7107 + t7109;
  t7122 = -4.e-6*t128*t36*t3784;
  t7130 = t491*t7003;
  t7131 = 4.e-6*t283*t7020;
  t7135 = t7122 + t7130 + t7131;
  t7236 = t4573*t3030;
  t7245 = -1.*t252*t4573;
  t7277 = t861*t4833;
  t7278 = t1994*t4274;
  t7279 = t4408*t943;
  t7282 = t4247*t2025;
  t7284 = t4838*t1002;
  t7285 = t4285*t2078;
  t7291 = t7277 + t7278 + t7279 + t7282 + t7284 + t7285;
  t7309 = -1.*t169*t4274;
  t7314 = -1.*t240*t4285;
  t7315 = t7309 + t7314;
  t5398 = t36*t4615;
  t5400 = -1.*t2561*t5308;
  t5406 = t5398 + t5400;
  t7235 = t5022*t1383;
  t7367 = -1.*t3365*t5206;
  t5029 = t5022*t2561;
  t5067 = t36*t5065;
  t5069 = t5029 + t5067;
  t7396 = t5096*t3402;
  t7406 = t5206*t3809;
  t7515 = -1.*t5641*t3402;
  t7518 = -1.*t3365*t5659;
  t7540 = t5659*t3809;
  t7545 = t3402*t5610;
  t7649 = -1.*t3476*t3402;
  t7652 = -1.*t3365*t5928;
  t7669 = t5928*t3809;
  t7670 = t3402*t5859;
  t6172 = -1.*t1314*t2561;
  t6173 = -1.*t36*t3635;
  t6175 = t6172 + t6173;
  t6141 = -1.*t252*t2561;
  t6142 = -1.*t36*t3476;
  t6145 = t6141 + t6142;
  t6094 = t3853 + t3864;
  t7807 = t6324*t3030;
  t7841 = -1.*t252*t6324;
  t6777 = t36*t6313;
  t6781 = -1.*t2561*t6584;
  t6783 = t6777 + t6781;
  t7836 = -1.*t1515*t1383;
  t7810 = t1383*t6474;
  t6478 = t6474*t2561;
  t6497 = t36*t6496;
  t6498 = t6478 + t6497;
  t7928 = -1.*t6517*t3402;
  t7938 = -1.*t3365*t6551;
  t6705 = t36*t1515;
  t6709 = -1.*t2561*t6531;
  t6711 = t6705 + t6709;
  t7960 = t6551*t3809;
  t7972 = t3402*t6627;
  t8045 = -1.*t1131*t3061;
  t8048 = -1.*t1270*t3089;
  t8050 = -1.*t1383*t3030;
  t8051 = t8045 + t8048 + t8050;
  t8053 = t8051*t1314;
  t8054 = t733*t1131;
  t8057 = t1219*t1270;
  t8058 = t1314*t1383;
  t8059 = t8054 + t8057 + t8058;
  t8060 = t8059*t3030;
  t8066 = t8053 + t8060;
  t8073 = -0.15121*t1478;
  t8074 = -0.15121*t1515;
  t8078 = -1.*t1012*t2093;
  t8083 = -1.*t1743*t3030;
  t8085 = -1.*t1070*t2263;
  t8086 = t8078 + t8083 + t8085;
  t8087 = t8086*t1314;
  t8090 = t674*t1012;
  t8091 = t1314*t1743;
  t8094 = t721*t1070;
  t8095 = t8090 + t8091 + t8094;
  t8097 = t8095*t3030;
  t8100 = t8073 + t8074 + t8087 + t8097;
  t8118 = t861*t556;
  t8119 = t436*t943;
  t8122 = t644*t1002;
  t8123 = t8118 + t8119 + t8122;
  t8109 = -1.*t1994*t861;
  t8110 = -1.*t943*t2025;
  t8113 = -1.*t1002*t2078;
  t8115 = t8109 + t8110 + t8113;
  t8107 = 1.e-6*t169;
  t8108 = -0.28121*t240;
  t8117 = -1.*t8115*t644;
  t8124 = -1.*t8123*t2078;
  t8125 = t8117 + t8124;
  t8126 = 4.e-6*t8125;
  t8128 = -1.*t8123*t1994;
  t8129 = -1.*t8115*t556;
  t8130 = t8107 + t8108 + t8126 + t8128 + t8129;
  t8133 = -1.*t3826*t38*t2561;
  t8135 = t3784*t2605;
  t8136 = t8133 + t8135;
  t8138 = t38*t3784;
  t8139 = t3826*t2561*t2605;
  t8140 = t8138 + t8139;
  t8175 = t3784*t3365;
  t8178 = t3826*t4042;
  t8179 = t8175 + t8178;
  t8183 = t3826*t3365;
  t8184 = -1.*t3784*t4042;
  t8185 = t8183 + t8184;
  t8190 = t3308*t3402;
  t8191 = t3635*t3523;
  t8193 = t8058 + t8190 + t8191;
  t8195 = t3809*t8193;
  t8196 = -1.*t3402*t3809;
  t8198 = -1.*t3523*t3114;
  t8199 = t8050 + t8196 + t8198;
  t8200 = t3308*t8199;
  t8201 = t8195 + t8200;
  t8151 = -1.*t80*t8136;
  t8155 = t53*t8140;
  t8157 = t8151 + t8155;
  t8166 = t53*t8136;
  t8169 = t80*t8140;
  t8172 = t8166 + t8169;
  t8265 = t3964*t4021;
  t8266 = t4133*t4053;
  t8269 = t8190 + t8265 + t8266;
  t8271 = t3134*t8269;
  t8272 = -1.*t4021*t3134;
  t8273 = -1.*t4053*t3865;
  t8274 = t8196 + t8272 + t8273;
  t8275 = t3964*t8274;
  t8276 = t8271 + t8275;
  t8213 = t3826*t36*t283;
  t8214 = -4.e-6*t283*t8157;
  t8215 = t690*t8172;
  t8216 = t8213 + t8214 + t8215;
  t8233 = t118*t3826*t36;
  t8234 = 4.e-6*t128*t8157;
  t8235 = -1.*t283*t8172;
  t8238 = t8233 + t8234 + t8235;
  t8241 = 4.e-6*t128*t3826*t36;
  t8244 = t491*t8157;
  t8247 = 4.e-6*t283*t8172;
  t8248 = t8241 + t8244 + t8247;
  t8332 = t5685*t3402;
  t8336 = t3308*t5659;
  t8347 = -1.*t5659*t3809;
  t8348 = -1.*t3402*t5610;
  t8393 = t5967*t3402;
  t8395 = t3308*t5928;
  t8404 = -1.*t5928*t3809;
  t8408 = -1.*t3402*t5859;
  t8457 = -1.*t4573*t3030;
  t8472 = t4573*t1314;
  t8535 = t436*t4247;
  t8536 = t556*t4274;
  t8538 = t861*t4480;
  t8539 = t4468*t943;
  t8540 = t4285*t644;
  t8541 = t4408*t1002;
  t8543 = t8535 + t8536 + t8538 + t8539 + t8540 + t8541;
  t8519 = -1.*t861*t4833;
  t8522 = -1.*t1994*t4274;
  t8526 = -1.*t4408*t943;
  t8527 = -1.*t4247*t2025;
  t8528 = -1.*t4838*t1002;
  t8532 = -1.*t4285*t2078;
  t8533 = t8519 + t8522 + t8526 + t8527 + t8528 + t8532;
  t8473 = t4615*t1383;
  t8455 = -1.*t5022*t1383;
  t8557 = t5206*t3308;
  t8560 = t5258*t3402;
  t8566 = -1.*t5096*t3402;
  t8568 = -1.*t5206*t3809;
  t8644 = -1.*t6324*t3030;
  t8660 = t1314*t6324;
  t8657 = t6313*t1383;
  t8645 = -1.*t1383*t6474;
  t8714 = t6509*t3402;
  t8718 = t3308*t6551;
  t8723 = -1.*t6551*t3809;
  t8728 = -1.*t3402*t6627;
  p_output1[0]=t2557*t2561 + t2616*t2668 + t2678*t2725 + t2750*t2808 + t2834*t2855 + t2877*t2955 - 1.*t2589*t2605*t36 + t112*t36*t38 - 0.041195*(t130*t2855 + 4.e-6*t137*t2955 - 1.*t2808*t383) + 0.803147*(t2808*t290 + t2855*t383 - 4.e-6*t2955*t383) - 0.14871*(4.e-6*t137*t2855 + 4.e-6*t2808*t383 + t2955*t811) + var1[0] + t3134*var2[0] + t3945*var2[1] + t3878*var2[2] + t4167*var2[3] + ((-1.*t3784*t3809 - 1.*t3826*t3865)*var2[1] + (t3937 + t3942)*var2[2])*var2[3] + t3744*var2[4] + (t6094*var2[0] - 1.*t3784*t6082*var2[1] + t3826*t6082*var2[2] + (t4042*t4148 + t3964*(t4021*t4042 + t4042*t6120 + t3992*t6132 + t4053*t6145) + t4108*t6151 + t3992*(-1.*t4133*t6120 - 1.*t3964*t6132 - 1.*t4021*t6151 - 1.*t4053*t6175))*var2[3])*var2[4] + t1714*var2[5] + (t36*t5853*var2[0] + (t2561*t3784*t5853 + t3826*t5859)*var2[1] + (-1.*t2561*t3826*t5853 + t3784*t5859)*var2[2] + (t36*t4148*t5950 + t3964*(t36*t3992*t5913 - 1.*t2561*t4042*t5913 + t5923 + t5930 + t36*t4021*t5950 - 1.*t2561*t4053*t5950) + t36*t4108*t6000 + t3992*(-1.*t36*t3964*t5913 + t2561*t4133*t5913 + t5982 + t5988 - 1.*t36*t4021*t6000 + t2561*t4053*t6000))*var2[3] + (t3476*t3728 + t3308*(t3476*t5913 + t5923 + t5930 + t3523*t5950) + t3541*t5967 + t3365*(-1.*t3635*t5913 + t5982 + t5988 - 1.*t3523*t6000))*var2[4])*var2[5] + t2267*var2[9] + (t36*t5578*var2[0] + (t2561*t3784*t5578 + t3826*t5610)*var2[1] + (-1.*t2561*t3826*t5578 + t3784*t5610)*var2[2] + (t36*t4148*t5667 + t3964*(t5642 + t36*t3992*t5648 - 1.*t2561*t4042*t5648 + t5661 + t36*t4021*t5667 - 1.*t2561*t4053*t5667) + t36*t4108*t5705 + t3992*(-1.*t36*t3964*t5648 + t2561*t4133*t5648 + t5689 + t5697 - 1.*t36*t4021*t5705 + t2561*t4053*t5705))*var2[3] + (t3728*t5641 + t3308*(t5642 + t3476*t5648 + t5661 + t3523*t5667) + t3541*t5685 + t3365*(-1.*t3635*t5648 + t5689 + t5697 - 1.*t3523*t5705))*var2[4] + (t1314*(t1270*t1566 + t1617*t5442 + t1566*t5473 + t1131*t5518) + t252*(-1.*t1131*t5435 - 1.*t1219*t5442 - 1.*t1270*t5492 - 1.*t5473*t733))*var2[5])*var2[9] + t2542*var2[10] + (t6498*var2[0] + (t3826*t6627 - 1.*t3784*t6637)*var2[1] + (t3784*t6627 + t3826*t6637)*var2[2] + (t4108*t6671 + t4148*t6696 + t3964*(t6523 + t6560 + t4021*t6696 + t4053*t6711 + t3992*t6727 + t4042*t6761) + t3992*(t6576 + t6602 - 1.*t4021*t6671 - 1.*t3964*t6727 - 1.*t4133*t6761 - 1.*t4053*t6783))*var2[3] + (t3541*t6509 + t3728*t6517 + t3308*(t6377 + t6378 + t6523 + t3523*t6531 + t3476*t6542 + t6560) + t3365*(t6314 + t6326 - 1.*t3635*t6542 + t6576 - 1.*t3523*t6584 + t6602))*var2[4] + (t1404*t1515 + t1661*t6313 + t1314*(t1617*t6280 + t1566*t6293 + t1131*t6354 + t1270*t6367 + t6377 + t6378) + t252*(-1.*t1131*t6220 - 1.*t1270*t6241 - 1.*t1219*t6280 + t6314 + t6326 - 1.*t6293*t733))*var2[5] + (t1515*t1791 + t1878*t6313 + t1314*(t1515*t1743 + t1515*t6262 + t1478*t6278 + t1070*t6335 + t1012*t6345 + t6378) - 0.15121*t6444 - 0.15121*t6450 + t252*(-1.*t1070*t6209 - 1.*t1012*t6215 - 1.*t1743*t6313 + t6326 - 1.*t6278*t674 - 1.*t6262*t721))*var2[9])*var2[10] - 1.9353204325022392e-7*var2[11] + (t5069*var2[0] + (t3826*t5096 - 1.*t3784*t5133)*var2[1] + (t3784*t5096 + t3826*t5133)*var2[2] + (t3964*(t5210 + t3992*t5329 + t4042*t5342) + t4108*t5372 + t3992*(t5271 + t5279 - 1.*t3964*t5329 - 1.*t4133*t5342 - 1.*t4021*t5372 - 1.*t4053*t5406))*var2[3] + (t3308*(t4698 + t5210 + t3476*t5221) + t3541*t5258 + t3365*(t4574 + t4620 - 1.*t3635*t5221 + t5271 + t5279 - 1.*t3523*t5308))*var2[4] + (t1661*t4615 + t1314*(t1566*t4312 + t1617*t4385 + t4698) + t252*(-1.*t1219*t4385 - 1.*t1131*t4521 - 1.*t1270*t4540 + t4574 + t4620 - 1.*t4312*t733))*var2[5] + (t1878*t4615 + t1314*(t1478*t4291 + t1515*t4304 + t4698) - 0.15121*t4849 - 0.15121*t4856 + t252*(-1.*t1012*t4485 - 1.*t1070*t4512 + t4574 - 1.*t1743*t4615 - 1.*t4291*t674 - 1.*t4304*t721))*var2[9] + (-0.038749*t4408 - 1.*t2457*t4480 + 1.e-6*t4833 - 0.28121*t4838 - 1.*t169*t4939 - 1.*t4970*t556 + 4.e-6*(-1.*t2457*t4408 - 1.*t240*t4939 - 1.*t4970*t644))*var2[10])*var2[11] + t3134*var3[0] + t3945*var3[1] + t3878*var3[2] + t4167*var3[3] + t3744*var3[4] + t1714*var3[5] + t2267*var3[9] + t2542*var3[10] - 1.9353204325022392e-7*var3[11] - 1.*var4[0];
  p_output1[1]=-1.*t2557*t36*t3784 + t112*t6982 + t2589*t6991 + t2616*t7003 + t2678*t7020 + t2750*t7100 + t2834*t7111 + t2877*t7135 - 0.041195*(-1.*t383*t7100 + t130*t7111 + 4.e-6*t137*t7135) + 0.803147*(t290*t7100 + t383*t7111 - 4.e-6*t383*t7135) - 0.14871*(4.e-6*t383*t7100 + 4.e-6*t137*t7111 + t7135*t811) + var1[1] + t3964*var2[0] + t7047*var2[1] + t7038*var2[2] + t7179*var2[3] + ((-1.*t3308*t3784 - 1.*t3826*t4133)*var2[1] + (t7044 + t7046)*var2[2])*var2[3] + t7085*var2[4] + (t6151*var2[0] - 1.*t3784*t6175*var2[1] + t3826*t6175*var2[2] + (t3992*(t4053*t6082 + t4021*t6094 + t3865*t6120 + t3134*t6132) + t3134*(-1.*t4021*t4042 - 1.*t4042*t6120 - 1.*t3992*t6132 - 1.*t4053*t6145) + t6094*t7159 + t4042*t7167)*var2[3])*var2[4] + t6876*var2[5] + (t36*t6000*var2[0] + (t3826*t5967 + t2561*t3784*t6000)*var2[1] + (t3784*t5967 - 1.*t2561*t3826*t6000)*var2[2] + (t36*t5853*t7159 + t36*t5950*t7167 + t3134*(-1.*t36*t3992*t5913 + t2561*t4042*t5913 - 1.*t36*t4021*t5950 + t2561*t4053*t5950 + t7649 + t7652) + t3992*(t36*t4021*t5853 - 1.*t2561*t4053*t5853 + t3134*t36*t5913 - 1.*t2561*t3865*t5913 + t7669 + t7670))*var2[3] + (t5859*t7064 + t3476*t7079 + t3809*(-1.*t3476*t5913 - 1.*t3523*t5950 + t7649 + t7652) + t3365*(t3523*t5853 + t3114*t5913 + t7669 + t7670))*var2[4])*var2[5] + t6924*var2[9] + (t36*t5705*var2[0] + (t3826*t5685 + t2561*t3784*t5705)*var2[1] + (t3784*t5685 - 1.*t2561*t3826*t5705)*var2[2] + (t36*t5578*t7159 + t36*t5667*t7167 + t3134*(-1.*t36*t3992*t5648 + t2561*t4042*t5648 - 1.*t36*t4021*t5667 + t2561*t4053*t5667 + t7515 + t7518) + t3992*(t36*t4021*t5578 - 1.*t2561*t4053*t5578 + t3134*t36*t5648 - 1.*t2561*t3865*t5648 + t7540 + t7545))*var2[3] + (t5610*t7064 + t5641*t7079 + t3809*(-1.*t3476*t5648 - 1.*t3523*t5667 + t7515 + t7518) + t3365*(t3523*t5578 + t3114*t5648 + t7540 + t7545))*var2[4] + (t3030*(-1.*t1270*t1566 - 1.*t1617*t5442 - 1.*t1566*t5473 - 1.*t1131*t5518) + t252*(t3089*t5442 + t3061*t5473 + t1131*t5564 + t1270*t5566))*var2[5])*var2[9] + t6968*var2[10] + (t6671*var2[0] + (t3826*t6509 - 1.*t3784*t6783)*var2[1] + (t3784*t6509 + t3826*t6783)*var2[2] + (t6498*t7159 + t6696*t7167 + t3134*(-1.*t4021*t6696 - 1.*t4053*t6711 - 1.*t3992*t6727 - 1.*t4042*t6761 + t7928 + t7938) + t3992*(t4021*t6498 + t4053*t6637 + t3134*t6727 + t3865*t6761 + t7960 + t7972))*var2[3] + (t6627*t7064 + t6517*t7079 + t3809*(-1.*t3523*t6531 - 1.*t3476*t6542 + t7836 + t7841 + t7928 + t7938) + t3365*(t3523*t6496 + t3114*t6542 + t7807 + t7810 + t7960 + t7972))*var2[4] + (t1515*t6864 + t6474*t6873 + t252*(t3089*t6280 + t3061*t6293 + t1131*t6486 + t1270*t6492 + t7807 + t7810) + t3030*(-1.*t1617*t6280 - 1.*t1566*t6293 - 1.*t1131*t6354 - 1.*t1270*t6367 + t7836 + t7841))*var2[5] + (-0.15121*t6209 - 0.15121*t6215 + t1515*t6893 + t6474*t6917 + t252*(t2263*t6262 + t2093*t6278 + t1070*t6444 + t1012*t6450 + t1743*t6474 + t7807) + t3030*(-1.*t1515*t1743 - 1.*t1515*t6262 - 1.*t1478*t6278 - 1.*t1070*t6335 - 1.*t1012*t6345 + t7841))*var2[9])*var2[10] + 0.29999998115510645*var2[11] + (t5372*var2[0] + (t3826*t5258 - 1.*t3784*t5406)*var2[1] + (t3784*t5258 + t3826*t5406)*var2[2] + (t5069*t7159 + t3134*(-1.*t3992*t5329 - 1.*t4042*t5342 + t7367) + t3992*(t4021*t5069 + t4053*t5133 + t3134*t5329 + t3865*t5342 + t7396 + t7406))*var2[3] + (t5096*t7064 + t3809*(-1.*t3476*t5221 + t7245 + t7367) + t3365*(t3523*t5065 + t3114*t5221 + t7235 + t7236 + t7396 + t7406))*var2[4] + (t5022*t6873 + t252*(t3061*t4312 + t3089*t4385 + t1131*t5041 + t1270*t5059 + t7235 + t7236) + t3030*(-1.*t1566*t4312 - 1.*t1617*t4385 + t7245))*var2[5] + (-0.15121*t4485 - 0.15121*t4512 + t5022*t6917 + t252*(t2093*t4291 + t2263*t4304 + t1012*t4849 + t1070*t4856 + t1743*t5022 + t7236) + t3030*(-1.*t1478*t4291 - 1.*t1515*t4304 + t7245))*var2[9] + (-0.28121*t4408 - 0.038749*t4468 + 1.e-6*t4480 - 1.*t4833*t6941 - 1.*t169*t7291 - 1.*t1994*t7315 + 4.e-6*(-1.*t4838*t6941 - 1.*t240*t7291 - 1.*t2078*t7315))*var2[10])*var2[11] + t3964*var3[0] + t7047*var3[1] + t7038*var3[2] + t7179*var3[3] + t7085*var3[4] + t6876*var3[5] + t6924*var3[9] + t6968*var3[10] + 0.29999998115510645*var3[11] - 1.*var4[1];
  p_output1[2]=t2557*t36*t3826 + t112*t8136 + t2589*t8140 + t2616*t8157 + t2678*t8172 + t2750*t8216 + t2834*t8238 + t2877*t8248 - 0.041195*(-1.*t383*t8216 + t130*t8238 + 4.e-6*t137*t8248) + 0.803147*(t290*t8216 + t383*t8238 - 4.e-6*t383*t8248) - 0.14871*(4.e-6*t383*t8216 + 4.e-6*t137*t8238 + t811*t8248) + var1[2] + t3992*var2[0] + t8185*var2[1] + t8179*var2[2] + t8276*var2[3] + ((-1.*t3365*t3784 - 1.*t3826*t4042)*var2[1] + t8185*var2[2])*var2[3] + t8201*var2[4] + (t4042*var2[0] - 1.*t3784*t6145*var2[1] + t3826*t6145*var2[2] + (t3964*(-1.*t4053*t6082 - 1.*t4021*t6094 - 1.*t3865*t6120 - 1.*t3134*t6132) + t3134*(t4133*t6120 + t3964*t6132 + t4021*t6151 + t4053*t6175) + t6094*t8269 + t6151*t8274)*var2[3])*var2[4] + t8066*var2[5] + (t36*t5950*var2[0] + (t3476*t3826 + t2561*t3784*t5950)*var2[1] + (t3476*t3784 - 1.*t2561*t3826*t5950)*var2[2] + (t36*t5853*t8269 + t36*t6000*t8274 + t3134*(t36*t3964*t5913 - 1.*t2561*t4133*t5913 + t36*t4021*t6000 - 1.*t2561*t4053*t6000 + t8393 + t8395) + t3964*(-1.*t36*t4021*t5853 + t2561*t4053*t5853 - 1.*t3134*t36*t5913 + t2561*t3865*t5913 + t8404 + t8408))*var2[3] + (t5859*t8193 + t5967*t8199 + t3809*(t3635*t5913 + t3523*t6000 + t8393 + t8395) + t3308*(-1.*t3523*t5853 - 1.*t3114*t5913 + t8404 + t8408))*var2[4])*var2[5] + t8100*var2[9] + (t36*t5667*var2[0] + (t3826*t5641 + t2561*t3784*t5667)*var2[1] + (t3784*t5641 - 1.*t2561*t3826*t5667)*var2[2] + (t36*t5578*t8269 + t36*t5705*t8274 + t3134*(t36*t3964*t5648 - 1.*t2561*t4133*t5648 + t36*t4021*t5705 - 1.*t2561*t4053*t5705 + t8332 + t8336) + t3964*(-1.*t36*t4021*t5578 + t2561*t4053*t5578 - 1.*t3134*t36*t5648 + t2561*t3865*t5648 + t8347 + t8348))*var2[3] + (t5610*t8193 + t5685*t8199 + t3809*(t3635*t5648 + t3523*t5705 + t8332 + t8336) + t3308*(-1.*t3523*t5578 - 1.*t3114*t5648 + t8347 + t8348))*var2[4] + (t1314*(-1.*t3089*t5442 - 1.*t3061*t5473 - 1.*t1131*t5564 - 1.*t1270*t5566) + t3030*(t1131*t5435 + t1219*t5442 + t1270*t5492 + t5473*t733))*var2[5])*var2[9] + t8130*var2[10] + (t6696*var2[0] + (t3826*t6517 - 1.*t3784*t6711)*var2[1] + (t3784*t6517 + t3826*t6711)*var2[2] + (t6498*t8269 + t6671*t8274 + t3134*(t4021*t6671 + t3964*t6727 + t4133*t6761 + t4053*t6783 + t8714 + t8718) + t3964*(-1.*t4021*t6498 - 1.*t4053*t6637 - 1.*t3134*t6727 - 1.*t3865*t6761 + t8723 + t8728))*var2[3] + (t6627*t8193 + t6509*t8199 + t3809*(t3635*t6542 + t3523*t6584 + t8657 + t8660 + t8714 + t8718) + t3308*(-1.*t3523*t6496 - 1.*t3114*t6542 + t8644 + t8645 + t8723 + t8728))*var2[4] + (t6313*t8051 + t6474*t8059 + t1314*(-1.*t3089*t6280 - 1.*t3061*t6293 - 1.*t1131*t6486 - 1.*t1270*t6492 + t8644 + t8645) + t3030*(t1131*t6220 + t1270*t6241 + t1219*t6280 + t6293*t733 + t8657 + t8660))*var2[5] + (-0.15121*t6335 - 0.15121*t6345 + t6313*t8086 + t6474*t8095 + t1314*(-1.*t2263*t6262 - 1.*t2093*t6278 - 1.*t1070*t6444 - 1.*t1012*t6450 - 1.*t1743*t6474 + t8644) + t3030*(t1070*t6209 + t1012*t6215 + t1743*t6313 + t6278*t674 + t6262*t721 + t8660))*var2[9])*var2[10] + 1.1914820871506078e-8*var2[11] + ((t5069*t8269 + t5372*t8274 + t3134*(t3964*t5329 + t4133*t5342 + t4021*t5372 + t4053*t5406 + t8557 + t8560) + t3964*(-1.*t4021*t5069 - 1.*t4053*t5133 - 1.*t3134*t5329 - 1.*t3865*t5342 + t8566 + t8568))*var2[3] + (t5096*t8193 + t5258*t8199 + t3809*(t3635*t5221 + t3523*t5308 + t8472 + t8473 + t8557 + t8560) + t3308*(-1.*t3523*t5065 - 1.*t3114*t5221 + t8455 + t8457 + t8566 + t8568))*var2[4] + (t4615*t8051 + t5022*t8059 + t1314*(-1.*t3061*t4312 - 1.*t3089*t4385 - 1.*t1131*t5041 - 1.*t1270*t5059 + t8455 + t8457) + t3030*(t1219*t4385 + t1131*t4521 + t1270*t4540 + t4312*t733 + t8472 + t8473))*var2[5] + (t4615*t8086 + t5022*t8095 + t1314*(-1.*t2093*t4291 - 1.*t2263*t4304 - 1.*t1012*t4849 - 1.*t1070*t4856 - 1.*t1743*t5022 + t8457) + t3030*(t1012*t4485 + t1070*t4512 + t1743*t4615 + t4291*t674 + t4304*t721 + t8472))*var2[9] + (-1.*t4480*t8115 - 1.*t4833*t8123 - 1.*t556*t8533 - 1.*t1994*t8543 + 4.e-6*(-1.*t4408*t8115 - 1.*t4838*t8123 - 1.*t644*t8533 - 1.*t2078*t8543))*var2[10])*var2[11] + t3992*var3[0] + t8185*var3[1] + t8179*var3[2] + t8276*var3[3] + t8201*var3[4] + t8066*var3[5] + t8100*var3[9] + t8130*var3[10] + 1.1914820871506078e-8*var3[11] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_FrFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void ddh_FrFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
