/*
 * Automatically Generated from Mathematica.
 * Sun 14 Nov 2021 17:28:59 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t556;
  double t563;
  double t578;
  double t202;
  double t227;
  double t331;
  double t465;
  double t684;
  double t693;
  double t646;
  double t660;
  double t714;
  double t748;
  double t749;
  double t798;
  double t812;
  double t826;
  double t884;
  double t921;
  double t933;
  double t997;
  double t381;
  double t1111;
  double t1116;
  double t1132;
  double t1142;
  double t1158;
  double t1176;
  double t530;
  double t536;
  double t777;
  double t781;
  double t784;
  double t789;
  double t1009;
  double t1075;
  double t1097;
  double t1164;
  double t1170;
  double t156;
  double t1184;
  double t1190;
  double t1196;
  double t1211;
  double t1217;
  double t1219;
  double t1236;
  double t1248;
  double t1253;
  double t1255;
  double t1276;
  double t150;
  double t1300;
  double t1308;
  double t1322;
  double t1171;
  double t1283;
  double t1296;
  double t1336;
  double t1420;
  double t1299;
  double t1375;
  double t1388;
  double t62;
  double t1427;
  double t1436;
  double t1438;
  double t1439;
  double t1442;
  double t1451;
  double t1456;
  double t1466;
  double t1473;
  double t1476;
  double t1483;
  double t1487;
  double t1499;
  double t1503;
  double t1507;
  double t1511;
  double t1522;
  double t1566;
  double t1568;
  double t1575;
  double t1610;
  double t1620;
  double t1595;
  double t1588;
  double t1602;
  double t1605;
  double t1627;
  double t1629;
  double t1630;
  double t1640;
  double t1658;
  double t1663;
  double t1674;
  double t1676;
  double t1677;
  double t1680;
  double t1699;
  double t1705;
  double t1727;
  double t1729;
  double t1736;
  double t1750;
  double t1759;
  double t1775;
  double t1791;
  double t1794;
  double t1796;
  double t1813;
  double t1819;
  double t1820;
  double t1822;
  double t1989;
  double t1998;
  double t2008;
  double t2015;
  double t2022;
  double t2034;
  double t2045;
  double t2049;
  double t2053;
  double t2058;
  double t2073;
  double t2077;
  double t2080;
  double t2081;
  double t2222;
  double t2262;
  double t2263;
  double t2265;
  double t2266;
  double t2269;
  double t2273;
  double t2283;
  double t2292;
  double t2313;
  double t2315;
  double t2327;
  double t2330;
  double t2332;
  double t2359;
  double t2364;
  double t2365;
  double t2371;
  double t2377;
  double t2390;
  double t2392;
  double t2397;
  double t2402;
  double t2405;
  double t2411;
  double t2413;
  double t2416;
  double t2421;
  double t2426;
  double t2429;
  double t2441;
  double t2445;
  double t2446;
  double t2496;
  double t2226;
  double t2239;
  double t2479;
  double t2484;
  double t2490;
  double t2493;
  double t2494;
  double t2508;
  double t2515;
  double t2522;
  double t2523;
  double t2528;
  double t2545;
  double t2551;
  double t2557;
  double t2580;
  double t2585;
  double t2591;
  double t2593;
  double t2599;
  double t2601;
  double t2602;
  double t2612;
  double t2616;
  double t2620;
  double t2004;
  double t2018;
  double t2035;
  double t2041;
  double t2044;
  double t2070;
  double t2095;
  double t2101;
  double t2110;
  double t2114;
  double t2135;
  double t2160;
  double t2171;
  double t2175;
  double t2177;
  double t2181;
  double t2188;
  double t2194;
  double t2224;
  double t2225;
  double t2250;
  double t2260;
  double t2316;
  double t2403;
  double t2452;
  double t2456;
  double t2492;
  double t2579;
  double t2638;
  double t2642;
  double t2649;
  double t2656;
  double t2660;
  double t2661;
  double t2668;
  double t2671;
  double t2676;
  double t2718;
  double t2730;
  double t2733;
  double t1635;
  double t1701;
  double t1765;
  double t1770;
  double t1803;
  double t1827;
  double t1835;
  double t1842;
  double t1890;
  double t1891;
  double t1909;
  double t1910;
  double t1958;
  double t2737;
  double t2740;
  double t2743;
  double t2692;
  double t2693;
  double t2701;
  double t1772;
  double t1981;
  double t1988;
  double t2470;
  double t2681;
  double t2683;
  double t2756;
  double t2758;
  double t2766;
  double t2775;
  double t2780;
  double t2784;
  double t2947;
  double t2948;
  double t2960;
  double t2873;
  double t2893;
  double t2904;
  double t2769;
  double t2771;
  double t2772;
  double t2791;
  double t3002;
  double t3008;
  double t3011;
  double t2906;
  double t2995;
  double t3032;
  double t2981;
  double t2985;
  double t2989;
  double t3069;
  double t3077;
  double t3093;
  double t2794;
  double t2796;
  double t2798;
  double t3065;
  double t3107;
  double t2927;
  double t2933;
  double t2934;
  double t3314;
  double t3322;
  double t3255;
  double t3257;
  double t3261;
  double t3264;
  double t3397;
  double t3417;
  double t3421;
  double t3427;
  double t3435;
  double t3443;
  double t3444;
  double t3340;
  double t3344;
  double t3353;
  double t3038;
  double t3040;
  double t3041;
  double t3282;
  double t3286;
  double t3291;
  double t3489;
  double t3490;
  double t3564;
  double t3571;
  double t3572;
  double t3500;
  double t3510;
  double t3517;
  double t3545;
  double t3561;
  double t3126;
  double t3129;
  double t3135;
  double t3524;
  double t3563;
  double t3526;
  double t3529;
  double t3608;
  double t3610;
  double t3589;
  double t3627;
  double t3722;
  double t3733;
  double t3760;
  double t3762;
  double t3841;
  double t3852;
  double t3820;
  double t3821;
  double t3889;
  double t3956;
  double t3968;
  double t3976;
  double t3985;
  double t3986;
  double t3996;
  double t3997;
  double t3999;
  double t4000;
  double t4001;
  double t4004;
  double t4005;
  double t3893;
  double t3895;
  double t3898;
  double t3899;
  double t3900;
  double t3901;
  double t3905;
  double t3908;
  double t3915;
  double t4015;
  double t4016;
  double t4020;
  double t4021;
  double t3952;
  double t3955;
  double t3958;
  double t3962;
  double t3964;
  double t3970;
  double t3973;
  double t3978;
  double t3982;
  double t4007;
  double t4008;
  double t4009;
  double t4010;
  double t3983;
  double t4012;
  double t3923;
  double t3933;
  double t3935;
  double t3940;
  double t3872;
  double t3873;
  double t3875;
  double t3878;
  double t4038;
  double t4047;
  double t4183;
  double t4196;
  double t4201;
  double t4147;
  double t4174;
  double t4178;
  double t4031;
  double t4032;
  double t4033;
  double t4034;
  double t4039;
  double t4041;
  double t4042;
  double t4043;
  double t3716;
  double t3742;
  double t3779;
  double t3784;
  double t3837;
  double t3854;
  double t3861;
  double t3865;
  double t4310;
  double t4325;
  double t4326;
  double t4300;
  double t4302;
  double t4303;
  double t4288;
  double t4290;
  double t4292;
  double t4297;
  double t4304;
  double t4339;
  double t4340;
  double t4359;
  double t4362;
  double t4364;
  double t4367;
  double t4369;
  double t4370;
  double t4264;
  double t4268;
  double t4272;
  double t4240;
  double t4241;
  double t4243;
  double t4134;
  double t4140;
  double t4141;
  double t4115;
  double t4121;
  double t4126;
  double t4416;
  double t4419;
  double t4425;
  double t4438;
  double t4439;
  double t4440;
  double t4430;
  double t4432;
  double t4433;
  double t4399;
  double t4400;
  double t4403;
  double t4457;
  double t4458;
  double t4459;
  double t4428;
  double t4435;
  double t4408;
  double t4411;
  double t4413;
  double t4482;
  double t4486;
  double t4493;
  double t4454;
  double t4455;
  double t4514;
  double t4518;
  double t4520;
  double t4536;
  double t4540;
  double t4545;
  double t4471;
  double t4473;
  double t4474;
  double t4601;
  double t4586;
  double t4589;
  double t4590;
  double t4591;
  double t4593;
  double t4602;
  double t4603;
  double t4614;
  double t4615;
  double t4617;
  double t4619;
  double t4654;
  double t4023;
  double t4024;
  double t4025;
  double t4691;
  double t4697;
  double t4671;
  double t4675;
  double t4678;
  double t4659;
  double t4726;
  double t4730;
  double t4731;
  double t4736;
  double t4737;
  double t4738;
  double t4743;
  double t4745;
  double t4751;
  double t4754;
  double t4755;
  double t4760;
  double t4767;
  double t4769;
  double t4770;
  double t4776;
  double t4779;
  double t4783;
  double t4784;
  double t4790;
  double t4793;
  double t4794;
  double t4805;
  double t4813;
  double t4858;
  double t4860;
  double t4862;
  double t4864;
  double t4867;
  double t4869;
  double t4870;
  double t4663;
  double t4664;
  double t4669;
  double t4679;
  double t4680;
  double t4681;
  double t4694;
  double t4703;
  double t4706;
  double t4710;
  double t4670;
  double t4690;
  double t4715;
  double t4724;
  double t4750;
  double t4778;
  double t4816;
  double t4817;
  double t4834;
  double t4835;
  double t4837;
  double t4840;
  double t4845;
  double t4847;
  double t4849;
  double t4850;
  double t4911;
  double t4917;
  double t4919;
  double t4922;
  double t4059;
  double t4064;
  double t4068;
  double t5065;
  double t5071;
  double t5072;
  double t5075;
  double t5081;
  double t5082;
  double t5087;
  double t5090;
  double t5092;
  double t5093;
  double t5095;
  double t5105;
  double t5107;
  double t5110;
  double t5115;
  double t5123;
  double t5124;
  double t5125;
  double t5133;
  double t5135;
  double t5140;
  double t5141;
  double t4103;
  double t4104;
  double t4106;
  double t4856;
  double t4924;
  double t4861;
  double t4865;
  double t4871;
  double t4876;
  double t4883;
  double t4892;
  double t4901;
  double t4909;
  double t4983;
  double t4987;
  double t4955;
  double t4957;
  double t4959;
  double t4970;
  double t4936;
  double t4941;
  double t4946;
  double t4948;
  double t5182;
  double t5187;
  double t5189;
  double t5195;
  double t5198;
  double t5200;
  double t4209;
  double t4218;
  double t4225;
  double t4600;
  double t4612;
  double t4621;
  double t4624;
  double t4635;
  double t4637;
  double t4645;
  double t4647;
  double t5354;
  double t5356;
  double t5360;
  double t5346;
  double t5350;
  double t5351;
  double t5333;
  double t5334;
  double t5336;
  double t5338;
  double t5352;
  double t5362;
  double t5363;
  double t5368;
  double t5369;
  double t5370;
  double t5374;
  double t5377;
  double t5379;
  double t5247;
  double t5257;
  double t5261;
  double t5274;
  double t5278;
  double t5285;
  double t5225;
  double t5226;
  double t5227;
  double t5207;
  double t5215;
  double t5222;
  double t5412;
  double t5413;
  double t5418;
  double t5434;
  double t5435;
  double t5440;
  double t5451;
  double t5455;
  double t5457;
  double t5470;
  double t5472;
  double t5475;
  double t5483;
  double t5485;
  double t5487;
  double t5461;
  double t5476;
  double t5462;
  double t5464;
  double t5467;
  double t5490;
  double t5501;
  double t5525;
  double t5528;
  double t5531;
  double t5540;
  double t5542;
  double t5547;
  double t5549;
  double t5550;
  double t5551;
  double t5565;
  double t5568;
  double t5569;
  double t1551;
  double t1555;
  double t1557;
  double t2708;
  double t2715;
  double t2716;
  double t5668;
  double t5669;
  double t5670;
  double t2801;
  double t2805;
  double t2811;
  double t5810;
  double t5830;
  double t5867;
  double t5877;
  double t5811;
  double t5812;
  double t5813;
  double t5882;
  double t5884;
  double t5831;
  double t5832;
  double t5833;
  double t5859;
  double t5861;
  double t5864;
  double t5894;
  double t5895;
  double t5896;
  double t6006;
  double t6013;
  double t6029;
  double t6041;
  double t6112;
  double t6114;
  double t6138;
  double t6143;
  double t4504;
  double t4507;
  double t4509;
  double t6262;
  double t6264;
  double t4299;
  double t4341;
  double t4352;
  double t6273;
  double t6274;
  double t4567;
  double t4568;
  double t4569;
  double t6121;
  double t6122;
  double t6128;
  double t6159;
  double t6160;
  double t6161;
  double t6380;
  double t6382;
  double t6385;
  double t6386;
  double t6388;
  double t6389;
  double t6392;
  double t6398;
  double t6403;
  double t6404;
  double t6405;
  double t6408;
  double t6411;
  double t6412;
  double t6413;
  double t6414;
  double t6415;
  double t6417;
  double t6419;
  double t6421;
  double t6422;
  double t6423;
  double t6165;
  double t6166;
  double t6167;
  double t6338;
  double t6345;
  double t6358;
  double t6363;
  double t6209;
  double t6213;
  double t6217;
  double t5573;
  double t5579;
  double t5583;
  double t6507;
  double t6514;
  double t5342;
  double t5364;
  double t5365;
  double t6519;
  double t6521;
  double t5607;
  double t5608;
  double t5610;
  double t5777;
  double t5779;
  double t5783;
  double t6659;
  double t6679;
  double t6736;
  double t6739;
  double t6746;
  double t6748;
  double t6661;
  double t6662;
  double t6665;
  double t6681;
  double t6685;
  double t6689;
  double t6728;
  double t6729;
  double t6730;
  double t6754;
  double t6757;
  double t6758;
  double t6834;
  double t6836;
  double t6843;
  double t6845;
  double t6900;
  double t6904;
  double t6920;
  double t6922;
  double t6980;
  double t6982;
  double t6990;
  double t6991;
  double t6909;
  double t6910;
  double t6911;
  double t6925;
  double t6929;
  double t6931;
  double t7084;
  double t7089;
  double t7091;
  double t7093;
  double t7096;
  double t7097;
  double t7098;
  double t7099;
  double t7100;
  double t7101;
  double t7102;
  double t7105;
  double t7106;
  double t7107;
  double t7109;
  double t7111;
  double t7112;
  double t7113;
  double t7114;
  double t7115;
  double t7116;
  double t7117;
  double t6935;
  double t6936;
  double t6937;
  double t6940;
  double t6942;
  double t6944;
  double t7050;
  double t7054;
  double t7059;
  double t7062;
  double t7190;
  double t7192;
  double t7196;
  double t7199;
  double t6627;
  double t6634;
  double t6637;
  t556 = Cos(var1[17]);
  t563 = -1.*t556;
  t578 = 1. + t563;
  t202 = Cos(var1[16]);
  t227 = -1.*t202;
  t331 = 1. + t227;
  t465 = Sin(var1[16]);
  t684 = Sin(var1[17]);
  t693 = 4.e-6*t684;
  t646 = 1.000000000016*t578;
  t660 = -7.e-6*t578;
  t714 = t660 + t693;
  t748 = -7.e-6*t714;
  t749 = -1. + t646 + t748;
  t798 = 2.8e-11*t578;
  t812 = 4.e-6*t578;
  t826 = 7.e-6*t684;
  t884 = t812 + t826;
  t921 = -7.e-6*t884;
  t933 = -1.*t684;
  t997 = t798 + t921 + t933;
  t381 = -7.e-6*t331;
  t1111 = -6.5e-11*t578;
  t1116 = 1. + t1111;
  t1132 = -7.e-6*t1116;
  t1142 = 7.e-6*t578;
  t1158 = t1132 + t1142 + t693;
  t1176 = Sin(var1[15]);
  t530 = -4.e-6*t465;
  t536 = t381 + t530;
  t777 = t536*t749;
  t781 = 4.e-6*t331;
  t784 = -7.e-6*t465;
  t789 = t781 + t784;
  t1009 = t789*t997;
  t1075 = -6.5e-11*t331;
  t1097 = 1. + t1075;
  t1164 = t1097*t1158;
  t1170 = t777 + t1009 + t1164;
  t156 = Cos(var1[15]);
  t1184 = -1.000000000016*t331;
  t1190 = 1. + t1184;
  t1196 = t1190*t749;
  t1211 = -2.8e-11*t331;
  t1217 = -1.*t465;
  t1219 = t1211 + t1217;
  t1236 = t1219*t997;
  t1248 = 4.e-6*t465;
  t1253 = t381 + t1248;
  t1255 = t1253*t1158;
  t1276 = t1196 + t1236 + t1255;
  t150 = Cos(var1[5]);
  t1300 = -1.*t1176*t1170;
  t1308 = t156*t1276;
  t1322 = t1300 + t1308;
  t1171 = t156*t1170;
  t1283 = t1176*t1276;
  t1296 = t1171 + t1283;
  t1336 = Sin(var1[5]);
  t1420 = Cos(var1[3]);
  t1299 = t150*t1296;
  t1375 = t1322*t1336;
  t1388 = t1299 + t1375;
  t62 = Sin(var1[3]);
  t1427 = Cos(var1[4]);
  t1436 = t1211 + t465;
  t1438 = t1436*t749;
  t1439 = -1.000000000049*t331;
  t1442 = 1. + t1439;
  t1451 = t1442*t997;
  t1456 = 7.e-6*t465;
  t1466 = t781 + t1456;
  t1473 = t1466*t1158;
  t1476 = t1438 + t1451 + t1473;
  t1483 = t1427*t1476;
  t1487 = Sin(var1[4]);
  t1499 = t150*t1322;
  t1503 = -1.*t1296*t1336;
  t1507 = t1499 + t1503;
  t1511 = -1.*t1487*t1507;
  t1522 = t1483 + t1511;
  t1566 = -1.*t1476*t1487;
  t1568 = -1.*t1427*t1507;
  t1575 = t1566 + t1568;
  t1610 = -1. + t556;
  t1620 = 4.e-6*t1610;
  t1595 = -4.e-6*t684;
  t1588 = 6.5e-11*t578;
  t1602 = t660 + t1595;
  t1605 = 7.e-6*t1602;
  t1627 = t1620 + t826;
  t1629 = 4.e-6*t1627;
  t1630 = -1. + t1588 + t1605 + t1629;
  t1640 = 1.000000000049*t578;
  t1658 = -1. + t1640;
  t1663 = 4.e-6*t1658;
  t1674 = -7.e-6*t684;
  t1676 = -2.8e-11*t578;
  t1677 = t1676 + t684;
  t1680 = 7.e-6*t1677;
  t1699 = t1663 + t1620 + t1674 + t1680;
  t1705 = -1.000000000016*t578;
  t1727 = 1. + t1705;
  t1729 = 7.e-6*t1727;
  t1736 = t798 + t684;
  t1750 = 4.e-6*t1736;
  t1759 = t1729 + t1142 + t1595 + t1750;
  t1775 = t1253*t1630;
  t1791 = t1219*t1699;
  t1794 = t1190*t1759;
  t1796 = t1775 + t1791 + t1794;
  t1813 = t1097*t1630;
  t1819 = t789*t1699;
  t1820 = t536*t1759;
  t1822 = t1813 + t1819 + t1820;
  t1989 = 4.e-6*t884;
  t1998 = -1. + t1640 + t1989;
  t2008 = 4.e-6*t1116;
  t2015 = t2008 + t1620 + t826;
  t2022 = 4.e-6*t714;
  t2034 = t798 + t2022 + t684;
  t2045 = t1219*t1998;
  t2049 = t1253*t2015;
  t2053 = t1190*t2034;
  t2058 = t2045 + t2049 + t2053;
  t2073 = t789*t1998;
  t2077 = t1097*t2015;
  t2080 = t536*t2034;
  t2081 = t2073 + t2077 + t2080;
  t2222 = 2.8e-11*t331;
  t2262 = 2.826290000000002e-7*var1[17];
  t2263 = -0.148715*t1116;
  t2265 = -2.18904205e-16*t578;
  t2266 = t812 + t1674;
  t2269 = -0.038576*t2266;
  t2273 = -0.80315*t1602;
  t2283 = t1142 + t693;
  t2292 = -0.5031510000080001*t2283;
  t2313 = -0.038575000014*t1627;
  t2315 = t2262 + t2263 + t2265 + t2269 + t2273 + t2292 + t2313;
  t2327 = 1.1305160000000008e-12*var1[17];
  t2330 = -1.000000000049*t578;
  t2332 = 1. + t2330;
  t2359 = -0.038576*t2332;
  t2364 = -0.03857500001589017*t578;
  t2365 = t798 + t933;
  t2371 = -0.5031510000080001*t2365;
  t2377 = t1620 + t1674;
  t2390 = -3.367757e-6*t2377;
  t2392 = -0.148715*t884;
  t2397 = -0.80315*t1677;
  t2402 = t2327 + t2359 + t2364 + t2371 + t2390 + t2392 + t2397;
  t2405 = -1.9784030000000015e-12*var1[17];
  t2411 = -0.80315*t1727;
  t2413 = -0.5031510000160505*t578;
  t2416 = t1676 + t933;
  t2421 = -0.038576*t2416;
  t2426 = t1142 + t1595;
  t2429 = -3.367757e-6*t2426;
  t2441 = -0.148715*t714;
  t2445 = -0.038575000014*t1736;
  t2446 = t2405 + t2411 + t2413 + t2421 + t2429 + t2441 + t2445;
  t2496 = 7.e-6*t331;
  t2226 = -1. + t202;
  t2239 = 4.e-6*t2226;
  t2479 = -1.*t156;
  t2484 = 1. + t2479;
  t2490 = -0.15121*t2484;
  t2493 = -2.7726089999999997e-12*var1[16];
  t2494 = -0.2812110000084994*t331;
  t2508 = t2496 + t530;
  t2515 = -1.8134809999999998e-6*t2508;
  t2522 = t2222 + t465;
  t2523 = -0.038749000006999997*t2522;
  t2528 = t1253*t2315;
  t2545 = t1219*t2402;
  t2551 = t1190*t2446;
  t2557 = t2493 + t2494 + t2515 + t2523 + t2528 + t2545 + t2551;
  t2580 = 3.9608699999999997e-7*var1[16];
  t2585 = -1.1787626499999999e-16*t331;
  t2591 = t2496 + t1248;
  t2593 = -0.281211000004*t2591;
  t2599 = t2239 + t1456;
  t2601 = -0.038749000006999997*t2599;
  t2602 = t1097*t2315;
  t2612 = t789*t2402;
  t2616 = t536*t2446;
  t2620 = t2580 + t2585 + t2593 + t2601 + t2602 + t2612 + t2616;
  t2004 = t1442*t1998;
  t2018 = t1466*t2015;
  t2035 = t1436*t2034;
  t2041 = t2004 + t2018 + t2035;
  t2044 = t1427*t2041;
  t2070 = t156*t2058;
  t2095 = -1.*t1176*t2081;
  t2101 = t2070 + t2095;
  t2110 = t150*t2101;
  t2114 = t1176*t2058;
  t2135 = t156*t2081;
  t2160 = t2114 + t2135;
  t2171 = -1.*t2160*t1336;
  t2175 = t2110 + t2171;
  t2177 = -1.*t1487*t2175;
  t2181 = t2044 + t2177;
  t2188 = 1.5843479999999999e-12*var1[16];
  t2194 = -0.03874900000889869*t331;
  t2224 = t2222 + t1217;
  t2225 = -0.281211000004*t2224;
  t2250 = t2239 + t784;
  t2260 = -1.8134809999999998e-6*t2250;
  t2316 = t1466*t2315;
  t2403 = t1442*t2402;
  t2452 = t1436*t2446;
  t2456 = t2188 + t2194 + t2225 + t2260 + t2316 + t2403 + t2452;
  t2492 = -0.15121*t1176;
  t2579 = t156*t2557;
  t2638 = -1.*t1176*t2620;
  t2642 = t2490 + t2492 + t2579 + t2638;
  t2649 = t150*t2642;
  t2656 = 0.15121*t1176;
  t2660 = t1176*t2557;
  t2661 = t156*t2620;
  t2668 = t2490 + t2656 + t2660 + t2661;
  t2671 = -1.*t2668*t1336;
  t2676 = t2649 + t2671;
  t2718 = t1427*t2456;
  t2730 = -1.*t1487*t2676;
  t2733 = t2718 + t2730;
  t1635 = t1466*t1630;
  t1701 = t1442*t1699;
  t1765 = t1436*t1759;
  t1770 = t1635 + t1701 + t1765;
  t1803 = t156*t1796;
  t1827 = -1.*t1176*t1822;
  t1835 = t1803 + t1827;
  t1842 = t150*t1835;
  t1890 = t1176*t1796;
  t1891 = t156*t1822;
  t1909 = t1890 + t1891;
  t1910 = -1.*t1909*t1336;
  t1958 = t1842 + t1910;
  t2737 = t2041*t1487;
  t2740 = t1427*t2175;
  t2743 = t2737 + t2740;
  t2692 = t2456*t1487;
  t2693 = t1427*t2676;
  t2701 = t2692 + t2693;
  t1772 = t1770*t1487;
  t1981 = t1427*t1958;
  t1988 = t1772 + t1981;
  t2470 = -1.*t2456*t1487;
  t2681 = -1.*t1427*t2676;
  t2683 = t2470 + t2681;
  t2756 = t1427*t1770;
  t2758 = -1.*t1487*t1958;
  t2766 = t2756 + t2758;
  t2775 = t150*t2668;
  t2780 = t2642*t1336;
  t2784 = t2775 + t2780;
  t2947 = -1.*t150*t1296;
  t2948 = -1.*t1322*t1336;
  t2960 = t2947 + t2948;
  t2873 = t150*t1909;
  t2893 = t1835*t1336;
  t2904 = t2873 + t2893;
  t2769 = t150*t2160;
  t2771 = t2101*t1336;
  t2772 = t2769 + t2771;
  t2791 = -1.*t2772*t2784;
  t3002 = -1.*t150*t2668;
  t3008 = -1.*t2642*t1336;
  t3011 = t3002 + t3008;
  t2906 = t2784*t2904;
  t2995 = -1.*t2772*t2676;
  t3032 = -1.*t2175*t2784;
  t2981 = -1.*t150*t2160;
  t2985 = -1.*t2101*t1336;
  t2989 = t2981 + t2985;
  t3069 = -1.*t150*t1909;
  t3077 = -1.*t1835*t1336;
  t3093 = t3069 + t3077;
  t2794 = -1.*t2743*t2701;
  t2796 = -1.*t2181*t2733;
  t2798 = t2791 + t2794 + t2796;
  t3065 = t2784*t1958;
  t3107 = t2676*t2904;
  t2927 = t2701*t1988;
  t2933 = t2733*t2766;
  t2934 = t2906 + t2927 + t2933;
  t3314 = 0.15121*t156;
  t3322 = t3314 + t2492 + t2579 + t2638;
  t3255 = -0.15121*t156;
  t3257 = -1.*t1176*t2557;
  t3261 = -1.*t156*t2620;
  t3264 = t3255 + t2492 + t3257 + t3261;
  t3397 = -1.*t156*t1170;
  t3417 = -1.*t1176*t1276;
  t3421 = t3397 + t3417;
  t3427 = t150*t3421;
  t3435 = t3427 + t2948;
  t3443 = t3421*t1336;
  t3444 = t1499 + t3443;
  t3340 = -1.*t1176*t1796;
  t3344 = -1.*t156*t1822;
  t3353 = t3340 + t3344;
  t3038 = -1.*t2041*t2456;
  t3040 = -1.*t2175*t2676;
  t3041 = t3038 + t3040 + t2791;
  t3282 = -1.*t1176*t2058;
  t3286 = -1.*t156*t2081;
  t3291 = t3282 + t3286;
  t3489 = t3353*t1336;
  t3490 = t1842 + t3489;
  t3564 = t150*t3264;
  t3571 = -1.*t3322*t1336;
  t3572 = t3564 + t3571;
  t3500 = t150*t3322;
  t3510 = t3264*t1336;
  t3517 = t3500 + t3510;
  t3545 = t3291*t1336;
  t3561 = t2110 + t3545;
  t3126 = t2456*t1770;
  t3129 = t2676*t1958;
  t3135 = t3126 + t3129 + t2906;
  t3524 = -1.*t2772*t3517;
  t3563 = -1.*t3561*t2784;
  t3526 = t150*t3291;
  t3529 = t3526 + t2985;
  t3608 = t150*t3353;
  t3610 = t3608 + t3077;
  t3589 = t2784*t3490;
  t3627 = t3517*t2904;
  t3722 = -2.8e-11*t465;
  t3733 = t227 + t3722;
  t3760 = 4.e-6*t202;
  t3762 = t3760 + t784;
  t3841 = -7.e-6*t202;
  t3852 = t3841 + t1248;
  t3820 = -4.e-6*t202;
  t3821 = t3820 + t784;
  t3889 = 7.e-6*t202;
  t3956 = 2.8e-11*t465;
  t3968 = t3889 + t1248;
  t3976 = t202 + t3722;
  t3985 = t202 + t3956;
  t3986 = -0.038749000006999997*t3985;
  t3996 = t3820 + t1456;
  t3997 = -1.8134809999999998e-6*t3996;
  t3999 = -0.2812110000084994*t465;
  t4000 = t3762*t2315;
  t4001 = t3733*t2402;
  t4004 = -1.000000000016*t465*t2446;
  t4005 = -2.7726089999999997e-12 + t3986 + t3997 + t3999 + t4000 + t4001 + t4004;
  t3893 = t3889 + t530;
  t3895 = -0.038749000006999997*t3893;
  t3898 = t3760 + t1456;
  t3899 = -0.281211000004*t3898;
  t3900 = -1.1787626499999999e-16*t465;
  t3901 = -6.5e-11*t465*t2315;
  t3905 = t3852*t2402;
  t3908 = t3821*t2446;
  t3915 = 3.9608699999999997e-7 + t3895 + t3899 + t3900 + t3901 + t3905 + t3908;
  t4015 = t3968*t1630;
  t4016 = -1.000000000049*t465*t1699;
  t4020 = t3976*t1759;
  t4021 = t4015 + t4016 + t4020;
  t3952 = t3841 + t530;
  t3955 = -1.8134809999999998e-6*t3952;
  t3958 = t227 + t3956;
  t3962 = -0.281211000004*t3958;
  t3964 = -0.03874900000889869*t465;
  t3970 = t3968*t2315;
  t3973 = -1.000000000049*t465*t2402;
  t3978 = t3976*t2446;
  t3982 = 1.5843479999999999e-12 + t3955 + t3962 + t3964 + t3970 + t3973 + t3978;
  t4007 = -1.000000000049*t465*t1998;
  t4008 = t3968*t2015;
  t4009 = t3976*t2034;
  t4010 = t4007 + t4008 + t4009;
  t3983 = -1.*t2041*t3982;
  t4012 = -1.*t4010*t2456;
  t3923 = t3852*t1998;
  t3933 = -6.5e-11*t465*t2015;
  t3935 = t3821*t2034;
  t3940 = t3923 + t3933 + t3935;
  t3872 = t3733*t1998;
  t3873 = t3762*t2015;
  t3875 = -1.000000000016*t465*t2034;
  t3878 = t3872 + t3873 + t3875;
  t4038 = t2456*t4021;
  t4047 = t3982*t1770;
  t4183 = t156*t3915;
  t4196 = t1176*t4005;
  t4201 = t4183 + t4196;
  t4147 = -1.*t1176*t3915;
  t4174 = t156*t4005;
  t4178 = t4147 + t4174;
  t4031 = -6.5e-11*t465*t1630;
  t4032 = t3852*t1699;
  t4033 = t3821*t1759;
  t4034 = t4031 + t4032 + t4033;
  t4039 = t3762*t1630;
  t4041 = t3733*t1699;
  t4042 = -1.000000000016*t465*t1759;
  t4043 = t4039 + t4041 + t4042;
  t3716 = -1.000000000016*t465*t749;
  t3742 = t3733*t997;
  t3779 = t3762*t1158;
  t3784 = t3716 + t3742 + t3779;
  t3837 = t3821*t749;
  t3854 = t3852*t997;
  t3861 = -6.5e-11*t465*t1158;
  t3865 = t3837 + t3854 + t3861;
  t4310 = t1176*t3784;
  t4325 = t156*t3865;
  t4326 = t4310 + t4325;
  t4300 = t156*t3784;
  t4302 = -1.*t1176*t3865;
  t4303 = t4300 + t4302;
  t4288 = t3976*t749;
  t4290 = -1.000000000049*t465*t997;
  t4292 = t3968*t1158;
  t4297 = t4288 + t4290 + t4292;
  t4304 = t150*t4303;
  t4339 = -1.*t4326*t1336;
  t4340 = t4304 + t4339;
  t4359 = t150*t4326;
  t4362 = t4303*t1336;
  t4364 = t4359 + t4362;
  t4367 = t1427*t4297;
  t4369 = -1.*t1487*t4340;
  t4370 = t4367 + t4369;
  t4264 = t156*t4034;
  t4268 = t1176*t4043;
  t4272 = t4264 + t4268;
  t4240 = -1.*t1176*t4034;
  t4241 = t156*t4043;
  t4243 = t4240 + t4241;
  t4134 = -1.*t1176*t3940;
  t4140 = t156*t3878;
  t4141 = t4134 + t4140;
  t4115 = t156*t3940;
  t4121 = t1176*t3878;
  t4126 = t4115 + t4121;
  t4416 = t150*t4126;
  t4419 = t4141*t1336;
  t4425 = t4416 + t4419;
  t4438 = t150*t4178;
  t4439 = -1.*t4201*t1336;
  t4440 = t4438 + t4439;
  t4430 = t150*t4201;
  t4432 = t4178*t1336;
  t4433 = t4430 + t4432;
  t4399 = t150*t4272;
  t4400 = t4243*t1336;
  t4403 = t4399 + t4400;
  t4457 = t150*t4243;
  t4458 = -1.*t4272*t1336;
  t4459 = t4457 + t4458;
  t4428 = -1.*t4425*t2784;
  t4435 = -1.*t2772*t4433;
  t4408 = t150*t4141;
  t4411 = -1.*t4126*t1336;
  t4413 = t4408 + t4411;
  t4482 = t4010*t1487;
  t4486 = t1427*t4413;
  t4493 = t4482 + t4486;
  t4454 = t4433*t2904;
  t4455 = t2784*t4403;
  t4514 = t3982*t1487;
  t4518 = t1427*t4440;
  t4520 = t4514 + t4518;
  t4536 = t1427*t3982;
  t4540 = -1.*t1487*t4440;
  t4545 = t4536 + t4540;
  t4471 = t4021*t1487;
  t4473 = t1427*t4459;
  t4474 = t4471 + t4473;
  t4601 = 4.e-6*t556;
  t4586 = 7.e-6*t556;
  t4589 = t4586 + t693;
  t4590 = -7.e-6*t4589;
  t4591 = 2.8e-11*t684;
  t4593 = t563 + t4590 + t4591;
  t4602 = 7.000000000455e-6*t684;
  t4603 = t4601 + t4602;
  t4614 = t4601 + t1674;
  t4615 = -7.e-6*t4614;
  t4617 = 1.000000000016*t684;
  t4619 = t4615 + t4617;
  t4654 = -4.e-6*t556;
  t4023 = -1.*t2058*t2557;
  t4024 = -1.*t2081*t2620;
  t4025 = t4023 + t4024 + t3038;
  t4691 = t4654 + t1674;
  t4697 = t4586 + t1595;
  t4671 = -7.e-6*t556;
  t4675 = -2.8e-11*t684;
  t4678 = t556 + t4675;
  t4659 = t556 + t4591;
  t4726 = -0.80315*t4691;
  t4730 = -0.038575000014*t4697;
  t4731 = t4671 + t693;
  t4736 = -0.038576*t4731;
  t4737 = t4601 + t826;
  t4738 = -0.5031510000080001*t4737;
  t4743 = 9.666256095795e-12*t684;
  t4745 = 2.826290000000002e-7 + t4726 + t4730 + t4736 + t4738 + t4743;
  t4751 = t4671 + t1595;
  t4754 = -3.367757e-6*t4751;
  t4755 = -0.80315*t4678;
  t4760 = t563 + t4591;
  t4767 = -0.5031510000080001*t4760;
  t4769 = -0.148715*t4589;
  t4770 = 9.99986000053965e-7*t684;
  t4776 = 1.1305160000000008e-12 + t4754 + t4755 + t4767 + t4769 + t4770;
  t4779 = -0.148715*t4614;
  t4783 = t563 + t4675;
  t4784 = -0.038576*t4783;
  t4790 = -0.038575000014*t4659;
  t4793 = t4654 + t826;
  t4794 = -3.367757e-6*t4793;
  t4805 = 0.2999989999967999*t684;
  t4813 = -1.9784030000000015e-12 + t4779 + t4784 + t4790 + t4794 + t4805;
  t4858 = -4.00000000026e-6*t684;
  t4860 = t4586 + t4858;
  t4862 = 4.e-6*t4614;
  t4864 = t556 + t4862 + t4591;
  t4867 = 4.e-6*t4589;
  t4869 = 1.000000000049*t684;
  t4870 = t4867 + t4869;
  t4663 = 4.e-6*t4659;
  t4664 = -1.12e-16*t684;
  t4669 = t4654 + t4663 + t4664;
  t4679 = 7.e-6*t4678;
  t4680 = 1.96e-16*t684;
  t4681 = t4671 + t4679 + t4680;
  t4694 = 7.e-6*t4691;
  t4703 = 4.e-6*t4697;
  t4706 = 6.5e-11*t684;
  t4710 = t4694 + t4703 + t4706;
  t4670 = t1436*t4669;
  t4690 = t1442*t4681;
  t4715 = t1466*t4710;
  t4724 = t4670 + t4690 + t4715;
  t4750 = t1253*t4745;
  t4778 = t1219*t4776;
  t4816 = t1190*t4813;
  t4817 = t4750 + t4778 + t4816;
  t4834 = t1097*t4745;
  t4835 = t789*t4776;
  t4837 = t536*t4813;
  t4840 = t4834 + t4835 + t4837;
  t4845 = t1466*t4745;
  t4847 = t1442*t4776;
  t4849 = t1436*t4813;
  t4850 = t4845 + t4847 + t4849;
  t4911 = t1466*t4860;
  t4917 = t1436*t4864;
  t4919 = t1442*t4870;
  t4922 = t4911 + t4917 + t4919;
  t4059 = t2557*t1796;
  t4064 = t2620*t1822;
  t4068 = t4059 + t4064 + t3126;
  t5065 = -1.*t2315*t4860;
  t5071 = -1.*t1998*t4776;
  t5072 = -1.*t4745*t2015;
  t5075 = -1.*t4813*t2034;
  t5081 = -1.*t4870*t2402;
  t5082 = -1.*t4864*t2446;
  t5087 = t5065 + t5071 + t5072 + t5075 + t5081 + t5082;
  t5090 = -1.*t2315*t2015;
  t5092 = -1.*t1998*t2402;
  t5093 = -1.*t2034*t2446;
  t5095 = t5090 + t5092 + t5093;
  t5105 = t1630*t4745;
  t5107 = t2315*t4710;
  t5110 = t4681*t2402;
  t5115 = t4776*t1699;
  t5123 = t4669*t2446;
  t5124 = t4813*t1759;
  t5125 = t5105 + t5107 + t5110 + t5115 + t5123 + t5124;
  t5133 = t2315*t1630;
  t5135 = t2402*t1699;
  t5140 = t2446*t1759;
  t5141 = t5133 + t5135 + t5140;
  t4103 = -1.*t2160*t2668;
  t4104 = -1.*t2101*t2642;
  t4106 = t3038 + t4103 + t4104;
  t4856 = -1.*t4850*t2041;
  t4924 = -1.*t4922*t2456;
  t4861 = t1253*t4860;
  t4865 = t1190*t4864;
  t4871 = t1219*t4870;
  t4876 = t4861 + t4865 + t4871;
  t4883 = t1097*t4860;
  t4892 = t536*t4864;
  t4901 = t789*t4870;
  t4909 = t4883 + t4892 + t4901;
  t4983 = t4724*t2456;
  t4987 = t4850*t1770;
  t4955 = t536*t4669;
  t4957 = t789*t4681;
  t4959 = t1097*t4710;
  t4970 = t4955 + t4957 + t4959;
  t4936 = t1190*t4669;
  t4941 = t1219*t4681;
  t4946 = t1253*t4710;
  t4948 = t4936 + t4941 + t4946;
  t5182 = t1176*t4817;
  t5187 = t156*t4840;
  t5189 = t5182 + t5187;
  t5195 = t156*t4817;
  t5198 = -1.*t1176*t4840;
  t5200 = t5195 + t5198;
  t4209 = t2668*t1909;
  t4218 = t2642*t1835;
  t4225 = t3126 + t4209 + t4218;
  t4600 = t1219*t4593;
  t4612 = t1253*t4603;
  t4621 = t1190*t4619;
  t4624 = t4600 + t4612 + t4621;
  t4635 = t789*t4593;
  t4637 = t1097*t4603;
  t4645 = t536*t4619;
  t4647 = t4635 + t4637 + t4645;
  t5354 = t1176*t4624;
  t5356 = t156*t4647;
  t5360 = t5354 + t5356;
  t5346 = t156*t4624;
  t5350 = -1.*t1176*t4647;
  t5351 = t5346 + t5350;
  t5333 = t1442*t4593;
  t5334 = t1466*t4603;
  t5336 = t1436*t4619;
  t5338 = t5333 + t5334 + t5336;
  t5352 = t150*t5351;
  t5362 = -1.*t5360*t1336;
  t5363 = t5352 + t5362;
  t5368 = t150*t5360;
  t5369 = t5351*t1336;
  t5370 = t5368 + t5369;
  t5374 = t1427*t5338;
  t5377 = -1.*t1487*t5363;
  t5379 = t5374 + t5377;
  t5247 = t156*t4970;
  t5257 = t1176*t4948;
  t5261 = t5247 + t5257;
  t5274 = -1.*t1176*t4970;
  t5278 = t156*t4948;
  t5285 = t5274 + t5278;
  t5225 = t156*t4876;
  t5226 = -1.*t1176*t4909;
  t5227 = t5225 + t5226;
  t5207 = t1176*t4876;
  t5215 = t156*t4909;
  t5222 = t5207 + t5215;
  t5412 = t150*t5261;
  t5413 = t5285*t1336;
  t5418 = t5412 + t5413;
  t5434 = t150*t5200;
  t5435 = -1.*t5189*t1336;
  t5440 = t5434 + t5435;
  t5451 = t150*t5189;
  t5455 = t5200*t1336;
  t5457 = t5451 + t5455;
  t5470 = t150*t5222;
  t5472 = t5227*t1336;
  t5475 = t5470 + t5472;
  t5483 = t150*t5285;
  t5485 = -1.*t5261*t1336;
  t5487 = t5483 + t5485;
  t5461 = -1.*t5457*t2772;
  t5476 = -1.*t5475*t2784;
  t5462 = t150*t5227;
  t5464 = -1.*t5222*t1336;
  t5467 = t5462 + t5464;
  t5490 = t5418*t2784;
  t5501 = t5457*t2904;
  t5525 = t4724*t1487;
  t5528 = t1427*t5487;
  t5531 = t5525 + t5528;
  t5540 = t4850*t1487;
  t5542 = t1427*t5440;
  t5547 = t5540 + t5542;
  t5549 = t1427*t4850;
  t5550 = -1.*t1487*t5440;
  t5551 = t5549 + t5550;
  t5565 = t4922*t1487;
  t5568 = t1427*t5467;
  t5569 = t5565 + t5568;
  t1551 = t1420*t1388;
  t1555 = -1.*t62*t1522;
  t1557 = t1551 + t1555;
  t2708 = -1.*t2041*t1487;
  t2715 = -1.*t1427*t2175;
  t2716 = t2708 + t2715;
  t5668 = t1476*t1487;
  t5669 = t1427*t1507;
  t5670 = t5668 + t5669;
  t2801 = -1.*t1770*t1487;
  t2805 = -1.*t1427*t1958;
  t2811 = t2801 + t2805;
  t5810 = t1388*t2784;
  t5830 = -1.*t2784*t2904;
  t5867 = t1388*t2676;
  t5877 = t1507*t2784;
  t5811 = t5670*t2701;
  t5812 = t1522*t2733;
  t5813 = t5810 + t5811 + t5812;
  t5882 = -1.*t2784*t1958;
  t5884 = -1.*t2676*t2904;
  t5831 = -1.*t2701*t1988;
  t5832 = -1.*t2733*t2766;
  t5833 = t5830 + t5831 + t5832;
  t5859 = t1476*t2456;
  t5861 = t1507*t2676;
  t5864 = t5859 + t5861 + t5810;
  t5894 = -1.*t2456*t1770;
  t5895 = -1.*t2676*t1958;
  t5896 = t5894 + t5895 + t5830;
  t6006 = t1388*t3517;
  t6013 = t3444*t2784;
  t6029 = -1.*t2784*t3490;
  t6041 = -1.*t3517*t2904;
  t6112 = t1476*t3982;
  t6114 = t4297*t2456;
  t6138 = -1.*t2456*t4021;
  t6143 = -1.*t3982*t1770;
  t4504 = t1427*t4010;
  t4507 = -1.*t1487*t4413;
  t4509 = t4504 + t4507;
  t6262 = t4364*t2784;
  t6264 = t1388*t4433;
  t4299 = t4297*t1487;
  t4341 = t1427*t4340;
  t4352 = t4299 + t4341;
  t6273 = -1.*t4433*t2904;
  t6274 = -1.*t2784*t4403;
  t4567 = t1427*t4021;
  t4568 = -1.*t1487*t4459;
  t4569 = t4567 + t4568;
  t6121 = t1276*t2557;
  t6122 = t1170*t2620;
  t6128 = t6121 + t6122 + t5859;
  t6159 = -1.*t2557*t1796;
  t6160 = -1.*t2620*t1822;
  t6161 = t6159 + t6160 + t5894;
  t6380 = t2315*t1158;
  t6382 = t997*t2402;
  t6385 = t749*t2446;
  t6386 = t6380 + t6382 + t6385;
  t6388 = t997*t4776;
  t6389 = t4745*t1158;
  t6392 = t2315*t4603;
  t6398 = t749*t4813;
  t6403 = t4593*t2402;
  t6404 = t4619*t2446;
  t6405 = t6388 + t6389 + t6392 + t6398 + t6403 + t6404;
  t6408 = -1.*t1630*t4745;
  t6411 = -1.*t2315*t4710;
  t6412 = -1.*t4681*t2402;
  t6413 = -1.*t4776*t1699;
  t6414 = -1.*t4669*t2446;
  t6415 = -1.*t4813*t1759;
  t6417 = t6408 + t6411 + t6412 + t6413 + t6414 + t6415;
  t6419 = -1.*t2315*t1630;
  t6421 = -1.*t2402*t1699;
  t6422 = -1.*t2446*t1759;
  t6423 = t6419 + t6421 + t6422;
  t6165 = t1296*t2668;
  t6166 = t1322*t2642;
  t6167 = t5859 + t6165 + t6166;
  t6338 = t1476*t4850;
  t6345 = t5338*t2456;
  t6358 = -1.*t4724*t2456;
  t6363 = -1.*t4850*t1770;
  t6209 = -1.*t2668*t1909;
  t6213 = -1.*t2642*t1835;
  t6217 = t5894 + t6209 + t6213;
  t5573 = t1427*t4922;
  t5579 = -1.*t1487*t5467;
  t5583 = t5573 + t5579;
  t6507 = t1388*t5457;
  t6514 = t5370*t2784;
  t5342 = t5338*t1487;
  t5364 = t1427*t5363;
  t5365 = t5342 + t5364;
  t6519 = -1.*t5418*t2784;
  t6521 = -1.*t5457*t2904;
  t5607 = t1427*t4724;
  t5608 = -1.*t1487*t5487;
  t5610 = t5607 + t5608;
  t5777 = t1420*t2772;
  t5779 = -1.*t62*t2181;
  t5783 = t5777 + t5779;
  t6659 = -1.*t1388*t2784;
  t6679 = t2772*t2784;
  t6736 = -1.*t1388*t2676;
  t6739 = -1.*t1507*t2784;
  t6746 = t2772*t2676;
  t6748 = t2175*t2784;
  t6661 = -1.*t5670*t2701;
  t6662 = -1.*t1522*t2733;
  t6665 = t6659 + t6661 + t6662;
  t6681 = t2743*t2701;
  t6685 = t2181*t2733;
  t6689 = t6679 + t6681 + t6685;
  t6728 = -1.*t1476*t2456;
  t6729 = -1.*t1507*t2676;
  t6730 = t6728 + t6729 + t6659;
  t6754 = t2041*t2456;
  t6757 = t2175*t2676;
  t6758 = t6754 + t6757 + t6679;
  t6834 = -1.*t1388*t3517;
  t6836 = -1.*t3444*t2784;
  t6843 = t2772*t3517;
  t6845 = t3561*t2784;
  t6900 = -1.*t1476*t3982;
  t6904 = -1.*t4297*t2456;
  t6920 = t2041*t3982;
  t6922 = t4010*t2456;
  t6980 = -1.*t4364*t2784;
  t6982 = -1.*t1388*t4433;
  t6990 = t4425*t2784;
  t6991 = t2772*t4433;
  t6909 = -1.*t1276*t2557;
  t6910 = -1.*t1170*t2620;
  t6911 = t6909 + t6910 + t6728;
  t6925 = t2058*t2557;
  t6929 = t2081*t2620;
  t6931 = t6925 + t6929 + t6754;
  t7084 = -1.*t2315*t1158;
  t7089 = -1.*t997*t2402;
  t7091 = -1.*t749*t2446;
  t7093 = t7084 + t7089 + t7091;
  t7096 = t2315*t4860;
  t7097 = t1998*t4776;
  t7098 = t4745*t2015;
  t7099 = t4813*t2034;
  t7100 = t4870*t2402;
  t7101 = t4864*t2446;
  t7102 = t7096 + t7097 + t7098 + t7099 + t7100 + t7101;
  t7105 = t2315*t2015;
  t7106 = t1998*t2402;
  t7107 = t2034*t2446;
  t7109 = t7105 + t7106 + t7107;
  t7111 = -1.*t997*t4776;
  t7112 = -1.*t4745*t1158;
  t7113 = -1.*t2315*t4603;
  t7114 = -1.*t749*t4813;
  t7115 = -1.*t4593*t2402;
  t7116 = -1.*t4619*t2446;
  t7117 = t7111 + t7112 + t7113 + t7114 + t7115 + t7116;
  t6935 = -1.*t1296*t2668;
  t6936 = -1.*t1322*t2642;
  t6937 = t6728 + t6935 + t6936;
  t6940 = t2160*t2668;
  t6942 = t2101*t2642;
  t6944 = t6754 + t6940 + t6942;
  t7050 = -1.*t1476*t4850;
  t7054 = -1.*t5338*t2456;
  t7059 = t4850*t2041;
  t7062 = t4922*t2456;
  t7190 = -1.*t1388*t5457;
  t7192 = -1.*t5370*t2784;
  t7196 = t5457*t2772;
  t7199 = t5475*t2784;
  t6627 = t1420*t2904;
  t6634 = -1.*t62*t2766;
  t6637 = t6627 + t6634;
  p_output1[0]=(-1.*t1420*t1522 - 1.*t1388*t62)*var2[1] + t1557*var2[2];
  p_output1[1]=t1522*var2[0] - 1.*t1575*t62*var2[1] + t1420*t1575*var2[2] + (t1988*(-1.*t2181*t2683 - 1.*t2181*t2701 - 1.*t2716*t2733 - 1.*t2733*t2743) + t2766*t2798 + t2743*(t1988*t2733 + t2683*t2766 + t2701*t2766 + t2733*t2811) + t2181*t2934)*var2[3];
  p_output1[2]=t1427*t2960*var2[0] + (t1420*t1507 + t1487*t2960*t62)*var2[1] + (-1.*t1420*t1487*t2960 + t1507*t62)*var2[2] + (t1427*t2934*t2989 + t1988*(-1.*t1427*t2701*t2989 + t1487*t2733*t2989 + t2995 + t1487*t2181*t3011 - 1.*t1427*t2743*t3011 + t3032) + t1427*t2798*t3093 + t2743*(t1427*t1988*t3011 - 1.*t1487*t2766*t3011 + t3065 + t1427*t2701*t3093 - 1.*t1487*t2733*t3093 + t3107))*var2[3] + (t2904*(-1.*t2676*t2989 + t2995 - 1.*t2175*t3011 + t3032) + t1958*t3041 + t2772*(t1958*t3011 + t3065 + t2676*t3093 + t3107) + t2175*t3135)*var2[4];
  p_output1[3]=t1427*t3435*var2[0] + (t1420*t3444 + t1487*t3435*t62)*var2[1] + (-1.*t1420*t1487*t3435 + t3444*t62)*var2[2] + (t1427*t2934*t3529 + t1988*(t3524 - 1.*t1427*t2701*t3529 + t1487*t2733*t3529 + t3563 + t1487*t2181*t3572 - 1.*t1427*t2743*t3572) + t1427*t2798*t3610 + t2743*(t1427*t1988*t3572 - 1.*t1487*t2766*t3572 + t3589 + t1427*t2701*t3610 - 1.*t1487*t2733*t3610 + t3627))*var2[3] + (t3041*t3490 + t3135*t3561 + t2904*(t3524 - 1.*t2676*t3529 + t3563 - 1.*t2175*t3572) + t2772*(t1958*t3572 + t3589 + t2676*t3610 + t3627))*var2[4] + (t1770*(-1.*t2101*t2668 - 1.*t2101*t3264 - 1.*t2642*t3291 - 1.*t2160*t3322) + t2041*(t1835*t2668 + t1835*t3264 + t1909*t3322 + t2642*t3353))*var2[5];
  p_output1[4]=t4352*var2[0] + (t1420*t4364 - 1.*t4370*t62)*var2[1] + (t1420*t4370 + t4364*t62)*var2[2] + (t2798*t4474 + t2934*t4493 + t1988*(t4428 + t4435 - 1.*t2701*t4493 - 1.*t2733*t4509 - 1.*t2743*t4520 - 1.*t2181*t4545) + t2743*(t4454 + t4455 + t2701*t4474 + t1988*t4520 + t2766*t4545 + t2733*t4569))*var2[3] + (t3041*t4403 + t3135*t4425 + t2904*(t3983 + t4012 - 1.*t2676*t4413 + t4428 + t4435 - 1.*t2175*t4440) + t2772*(t4038 + t4047 + t1958*t4440 + t4454 + t4455 + t2676*t4459))*var2[4] + (t4021*t4106 + t1770*(t3983 + t4012 - 1.*t2668*t4126 - 1.*t2642*t4141 - 1.*t2101*t4178 - 1.*t2160*t4201) + t4010*t4225 + t2041*(t4038 + t4047 + t1835*t4178 + t1909*t4201 + t2642*t4243 + t2668*t4272))*var2[5] + (-0.15121*t3784 + 0.15121*t3865 + t1770*(-1.*t2557*t3878 - 1.*t2081*t3915 - 1.*t2620*t3940 + t3983 - 1.*t2058*t4005 + t4012) + t4021*t4025 + t2041*(t1822*t3915 + t1796*t4005 + t2620*t4034 + t4038 + t2557*t4043 + t4047) + t4010*t4068)*var2[15];
  p_output1[5]=t5365*var2[0] + (t1420*t5370 - 1.*t5379*t62)*var2[1] + (t1420*t5379 + t5370*t62)*var2[2] + (t2798*t5531 + t2934*t5569 + t1988*(t5461 + t5476 - 1.*t2743*t5547 - 1.*t2181*t5551 - 1.*t2701*t5569 - 1.*t2733*t5583) + t2743*(t5490 + t5501 + t2701*t5531 + t1988*t5547 + t2766*t5551 + t2733*t5610))*var2[3] + (t3041*t5418 + t3135*t5475 + t2904*(t4856 + t4924 - 1.*t2175*t5440 + t5461 - 1.*t2676*t5467 + t5476) + t2772*(t4983 + t4987 + t1958*t5440 + t2676*t5487 + t5490 + t5501))*var2[4] + (t4106*t4724 + t4225*t4922 + t1770*(t4856 + t4924 - 1.*t2160*t5189 - 1.*t2101*t5200 - 1.*t2668*t5222 - 1.*t2642*t5227) + t2041*(t4983 + t4987 + t1909*t5189 + t1835*t5200 + t2668*t5261 + t2642*t5285))*var2[5] + (-0.15121*t4624 + 0.15121*t4647 + t4025*t4724 + t4068*t4922 + t1770*(-1.*t2058*t4817 - 1.*t2081*t4840 + t4856 - 1.*t2557*t4876 - 1.*t2620*t4909 + t4924) + t2041*(t1796*t4817 + t1822*t4840 + t2557*t4948 + t2620*t4970 + t4983 + t4987))*var2[15] + (0.281211*t4593 - 0.038749*t4619 - 1.*t1630*t5087 - 1.*t4710*t5095 - 1.*t2015*t5125 - 1.*t4860*t5141 + 7.e-6*(t1759*t5087 + t4669*t5095 + t2034*t5125 + t4864*t5141) + 4.e-6*(-1.*t1699*t5087 - 1.*t4681*t5095 - 1.*t1998*t5125 - 1.*t4870*t5141) + 1.e-6*(t4654 - 7.000000000455e-6*t684))*var2[16];
  p_output1[6]=t5670;
  p_output1[7]=t1557;
  p_output1[8]=t1420*t1522 + t1388*t62;
  p_output1[9]=t1988*t2798 + t2743*t2934;
  p_output1[10]=t2904*t3041 + t2772*t3135;
  p_output1[11]=t1770*t4106 + t2041*t4225;
  p_output1[12]=0.15121*t1170 - 0.15121*t1276 + t1770*t4025 + t2041*t4068;
  p_output1[13]=-1.*t1630*t5095 - 1.*t2015*t5141 + 4.e-6*(-1.*t1699*t5095 - 1.*t1998*t5141) + 7.e-6*(t1759*t5095 + t2034*t5141) + 1.e-6*(7.e-6*t1116 + t1595 + t660) - 0.038749*t749 + 0.281211*t997;
  p_output1[14]=-4.051285074010787e-7;
  p_output1[15]=(-1.*t1420*t2181 - 1.*t2772*t62)*var2[1] + t5783*var2[2];
  p_output1[16]=t2181*var2[0] - 1.*t2716*t62*var2[1] + t1420*t2716*var2[2] + ((-1.*t1988*t2733 - 1.*t2683*t2766 - 1.*t2701*t2766 - 1.*t2733*t2811)*t5670 + t1988*(t1522*t2683 + t1522*t2701 + t1575*t2733 + t2733*t5670) + t2766*t5813 + t1522*t5833)*var2[3];
  p_output1[17]=t1427*t2989*var2[0] + (t1420*t2175 + t1487*t2989*t62)*var2[1] + (-1.*t1420*t1487*t2989 + t2175*t62)*var2[2] + (t1427*t3093*t5813 + t1427*t2960*t5833 + t1988*(t1427*t2701*t2960 - 1.*t1487*t2733*t2960 - 1.*t1487*t1522*t3011 + t1427*t3011*t5670 + t5867 + t5877) + t5670*(-1.*t1427*t1988*t3011 + t1487*t2766*t3011 - 1.*t1427*t2701*t3093 + t1487*t2733*t3093 + t5882 + t5884))*var2[3] + (t1958*t5864 + t2904*(t2676*t2960 + t1507*t3011 + t5867 + t5877) + t1388*(-1.*t1958*t3011 - 1.*t2676*t3093 + t5882 + t5884) + t1507*t5896)*var2[4];
  p_output1[18]=t1427*t3529*var2[0] + (t1420*t3561 + t1487*t3529*t62)*var2[1] + (-1.*t1420*t1487*t3529 + t3561*t62)*var2[2] + (t1427*t3610*t5813 + t1427*t3435*t5833 + t1988*(t1427*t2701*t3435 - 1.*t1487*t2733*t3435 - 1.*t1487*t1522*t3572 + t1427*t3572*t5670 + t6006 + t6013) + t5670*(-1.*t1427*t1988*t3572 + t1487*t2766*t3572 - 1.*t1427*t2701*t3610 + t1487*t2733*t3610 + t6029 + t6041))*var2[3] + (t3490*t5864 + t3444*t5896 + t2904*(t2676*t3435 + t1507*t3572 + t6006 + t6013) + t1388*(-1.*t1958*t3572 - 1.*t2676*t3610 + t6029 + t6041))*var2[4] + (t1476*(-1.*t1835*t2668 - 1.*t1835*t3264 - 1.*t1909*t3322 - 1.*t2642*t3353) + t1770*(t1322*t2668 + t1322*t3264 + t1296*t3322 + t2642*t3421))*var2[5];
  p_output1[19]=t4493*var2[0] + (t1420*t4425 - 1.*t4509*t62)*var2[1] + (t1420*t4509 + t4425*t62)*var2[2] + (t4474*t5813 + t4352*t5833 + t1988*(t2701*t4352 + t2733*t4370 + t1522*t4545 + t4520*t5670 + t6262 + t6264) + t5670*(-1.*t2701*t4474 - 1.*t1988*t4520 - 1.*t2766*t4545 - 1.*t2733*t4569 + t6273 + t6274))*var2[3] + (t4403*t5864 + t4364*t5896 + t2904*(t2676*t4340 + t1507*t4440 + t6112 + t6114 + t6262 + t6264) + t1388*(-1.*t1958*t4440 - 1.*t2676*t4459 + t6138 + t6143 + t6273 + t6274))*var2[4] + (t1770*(t1322*t4178 + t1296*t4201 + t2642*t4303 + t2668*t4326 + t6112 + t6114) + t1476*(-1.*t1835*t4178 - 1.*t1909*t4201 - 1.*t2642*t4243 - 1.*t2668*t4272 + t6138 + t6143) + t4021*t6167 + t4297*t6217)*var2[5] + (-0.15121*t3878 + 0.15121*t3940 + t1770*(t2557*t3784 + t2620*t3865 + t1170*t3915 + t1276*t4005 + t6112 + t6114) + t4021*t6128 + t1476*(-1.*t1822*t3915 - 1.*t1796*t4005 - 1.*t2620*t4034 - 1.*t2557*t4043 + t6138 + t6143) + t4297*t6161)*var2[15];
  p_output1[20]=t5569*var2[0] + (t1420*t5475 - 1.*t5583*t62)*var2[1] + (t1420*t5583 + t5475*t62)*var2[2] + (t5531*t5813 + t5365*t5833 + t1988*(t2701*t5365 + t2733*t5379 + t1522*t5551 + t5547*t5670 + t6507 + t6514) + t5670*(-1.*t2701*t5531 - 1.*t1988*t5547 - 1.*t2766*t5551 - 1.*t2733*t5610 + t6519 + t6521))*var2[3] + (t5418*t5864 + t5370*t5896 + t2904*(t2676*t5363 + t1507*t5440 + t6338 + t6345 + t6507 + t6514) + t1388*(-1.*t1958*t5440 - 1.*t2676*t5487 + t6358 + t6363 + t6519 + t6521))*var2[4] + (t4724*t6167 + t5338*t6217 + t1770*(t1296*t5189 + t1322*t5200 + t2642*t5351 + t2668*t5360 + t6338 + t6345) + t1476*(-1.*t1909*t5189 - 1.*t1835*t5200 - 1.*t2668*t5261 - 1.*t2642*t5285 + t6358 + t6363))*var2[5] + (-0.15121*t4876 + 0.15121*t4909 + t4724*t6128 + t5338*t6161 + t1770*(t2557*t4624 + t2620*t4647 + t1276*t4817 + t1170*t4840 + t6338 + t6345) + t1476*(-1.*t1796*t4817 - 1.*t1822*t4840 - 1.*t2557*t4948 - 1.*t2620*t4970 + t6358 + t6363))*var2[15] + (-0.038749*t4864 + 0.281211*t4870 - 1.*t4710*t6386 - 1.*t1630*t6405 - 1.*t1158*t6417 - 1.*t4603*t6423 + 1.e-6*(t4671 + 4.00000000026e-6*t684) + 7.e-6*(t4669*t6386 + t1759*t6405 + t4619*t6423 + t6417*t749) + 4.e-6*(-1.*t4681*t6386 - 1.*t1699*t6405 - 1.*t4593*t6423 - 1.*t6417*t997))*var2[16];
  p_output1[21]=t2743;
  p_output1[22]=t5783;
  p_output1[23]=t1420*t2181 + t2772*t62;
  p_output1[24]=t1988*t5813 + t5670*t5833;
  p_output1[25]=t2904*t5864 + t1388*t5896;
  p_output1[26]=t1770*t6167 + t1476*t6217;
  p_output1[27]=-0.15121*t2058 + 0.15121*t2081 + t1770*t6128 + t1476*t6161;
  p_output1[28]=0.281211*t1998 - 0.038749*t2034 - 1.*t1630*t6386 - 1.*t1158*t6423 + 7.e-6*(t1759*t6386 + t6423*t749) + 1.e-6*(4.e-6*(-1. + t1588) + t1674 + t812) + 4.e-6*(-1.*t1699*t6386 - 1.*t6423*t997);
  p_output1[29]=0.3000000410492048;
  p_output1[30]=(-1.*t1420*t2766 - 1.*t2904*t62)*var2[1] + t6637*var2[2];
  p_output1[31]=t2766*var2[0] - 1.*t2811*t62*var2[1] + t1420*t2811*var2[2] + ((t2181*t2683 + t2181*t2701 + t2716*t2733 + t2733*t2743)*t5670 + t2743*(-1.*t1522*t2683 - 1.*t1522*t2701 - 1.*t1575*t2733 - 1.*t2733*t5670) + t2181*t6665 + t1522*t6689)*var2[3];
  p_output1[32]=t1427*t3093*var2[0] + (t1420*t1958 + t1487*t3093*t62)*var2[1] + (-1.*t1420*t1487*t3093 + t1958*t62)*var2[2] + (t1427*t2989*t6665 + t1427*t2960*t6689 + t2743*(-1.*t1427*t2701*t2960 + t1487*t2733*t2960 + t1487*t1522*t3011 - 1.*t1427*t3011*t5670 + t6736 + t6739) + t5670*(t1427*t2701*t2989 - 1.*t1487*t2733*t2989 - 1.*t1487*t2181*t3011 + t1427*t2743*t3011 + t6746 + t6748))*var2[3] + (t2175*t6730 + t2772*(-1.*t2676*t2960 - 1.*t1507*t3011 + t6736 + t6739) + t1388*(t2676*t2989 + t2175*t3011 + t6746 + t6748) + t1507*t6758)*var2[4];
  p_output1[33]=t1427*t3610*var2[0] + (t1420*t3490 + t1487*t3610*t62)*var2[1] + (-1.*t1420*t1487*t3610 + t3490*t62)*var2[2] + (t1427*t3529*t6665 + t1427*t3435*t6689 + t2743*(-1.*t1427*t2701*t3435 + t1487*t2733*t3435 + t1487*t1522*t3572 - 1.*t1427*t3572*t5670 + t6834 + t6836) + t5670*(t1427*t2701*t3529 - 1.*t1487*t2733*t3529 - 1.*t1487*t2181*t3572 + t1427*t2743*t3572 + t6843 + t6845))*var2[3] + (t3561*t6730 + t3444*t6758 + t2772*(-1.*t2676*t3435 - 1.*t1507*t3572 + t6834 + t6836) + t1388*(t2676*t3529 + t2175*t3572 + t6843 + t6845))*var2[4] + (t1476*(t2101*t2668 + t2101*t3264 + t2642*t3291 + t2160*t3322) + t2041*(-1.*t1322*t2668 - 1.*t1322*t3264 - 1.*t1296*t3322 - 1.*t2642*t3421))*var2[5];
  p_output1[34]=t4474*var2[0] + (t1420*t4403 - 1.*t4569*t62)*var2[1] + (t1420*t4569 + t4403*t62)*var2[2] + (t4493*t6665 + t4352*t6689 + t2743*(-1.*t2701*t4352 - 1.*t2733*t4370 - 1.*t1522*t4545 - 1.*t4520*t5670 + t6980 + t6982) + t5670*(t2701*t4493 + t2733*t4509 + t2743*t4520 + t2181*t4545 + t6990 + t6991))*var2[3] + (t4425*t6730 + t4364*t6758 + t2772*(-1.*t2676*t4340 - 1.*t1507*t4440 + t6900 + t6904 + t6980 + t6982) + t1388*(t2676*t4413 + t2175*t4440 + t6920 + t6922 + t6990 + t6991))*var2[4] + (t2041*(-1.*t1322*t4178 - 1.*t1296*t4201 - 1.*t2642*t4303 - 1.*t2668*t4326 + t6900 + t6904) + t1476*(t2668*t4126 + t2642*t4141 + t2101*t4178 + t2160*t4201 + t6920 + t6922) + t4010*t6937 + t4297*t6944)*var2[5] + (0.15121*t4034 - 0.15121*t4043 + t2041*(-1.*t2557*t3784 - 1.*t2620*t3865 - 1.*t1170*t3915 - 1.*t1276*t4005 + t6900 + t6904) + t4010*t6911 + t1476*(t2557*t3878 + t2081*t3915 + t2620*t3940 + t2058*t4005 + t6920 + t6922) + t4297*t6931)*var2[15];
  p_output1[35]=t5531*var2[0] + (t1420*t5418 - 1.*t5610*t62)*var2[1] + (t1420*t5610 + t5418*t62)*var2[2] + (t5569*t6665 + t5365*t6689 + t2743*(-1.*t2701*t5365 - 1.*t2733*t5379 - 1.*t1522*t5551 - 1.*t5547*t5670 + t7190 + t7192) + t5670*(t2743*t5547 + t2181*t5551 + t2701*t5569 + t2733*t5583 + t7196 + t7199))*var2[3] + (t5475*t6730 + t5370*t6758 + t2772*(-1.*t2676*t5363 - 1.*t1507*t5440 + t7050 + t7054 + t7190 + t7192) + t1388*(t2175*t5440 + t2676*t5467 + t7059 + t7062 + t7196 + t7199))*var2[4] + (t4922*t6937 + t5338*t6944 + t2041*(-1.*t1296*t5189 - 1.*t1322*t5200 - 1.*t2642*t5351 - 1.*t2668*t5360 + t7050 + t7054) + t1476*(t2160*t5189 + t2101*t5200 + t2668*t5222 + t2642*t5227 + t7059 + t7062))*var2[5] + (-0.15121*t4948 + 0.15121*t4970 + t4922*t6911 + t5338*t6931 + t2041*(-1.*t2557*t4624 - 1.*t2620*t4647 - 1.*t1276*t4817 - 1.*t1170*t4840 + t7050 + t7054) + t1476*(t2058*t4817 + t2081*t4840 + t2557*t4876 + t2620*t4909 + t7059 + t7062))*var2[15] + (-0.038749*t4669 + 0.281211*t4681 + 1.e-6*(-7.e-6*t4691 + 4.e-6*t4731 - 6.5e-11*t684) - 1.*t4860*t7093 - 1.*t1158*t7102 - 1.*t4603*t7109 - 1.*t2015*t7117 + 7.e-6*(t4864*t7093 + t4619*t7109 + t2034*t7117 + t7102*t749) + 4.e-6*(-1.*t4870*t7093 - 1.*t4593*t7109 - 1.*t1998*t7117 - 1.*t7102*t997))*var2[16];
  p_output1[36]=t1988;
  p_output1[37]=t6637;
  p_output1[38]=t1420*t2766 + t2904*t62;
  p_output1[39]=t2743*t6665 + t5670*t6689;
  p_output1[40]=t2772*t6730 + t1388*t6758;
  p_output1[41]=t2041*t6937 + t1476*t6944;
  p_output1[42]=-0.15121*t1796 + 0.15121*t1822 + t2041*t6911 + t1476*t6931;
  p_output1[43]=0.281211*t1699 - 0.038749*t1759 + 1.e-6*(1. + t1111 - 7.e-6*t1602 + 4.e-6*t2266) - 1.*t2015*t7093 - 1.*t1158*t7109 + 7.e-6*(t2034*t7093 + t7109*t749) + 4.e-6*(-1.*t1998*t7093 - 1.*t7109*t997);
  p_output1[44]=-2.826290000000002e-7;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 45, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RrFoot_ParallelStance1.hh"

namespace ParallelStance1
{

void J_dh_RrFoot_ParallelStance1_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
