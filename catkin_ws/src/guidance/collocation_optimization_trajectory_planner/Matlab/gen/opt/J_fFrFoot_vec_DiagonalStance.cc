/*
 * Automatically Generated from Mathematica.
 * Fri 12 Nov 2021 16:28:19 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t97;
  double t19;
  double t140;
  double t115;
  double t121;
  double t133;
  double t141;
  double t166;
  double t72;
  double t73;
  double t191;
  double t194;
  double t211;
  double t398;
  double t394;
  double t306;
  double t342;
  double t349;
  double t360;
  double t376;
  double t384;
  double t387;
  double t411;
  double t431;
  double t442;
  double t261;
  double t573;
  double t294;
  double t304;
  double t555;
  double t563;
  double t572;
  double t580;
  double t587;
  double t594;
  double t595;
  double t603;
  double t618;
  double t624;
  double t649;
  double t653;
  double t654;
  double t700;
  double t703;
  double t704;
  double t727;
  double t754;
  double t755;
  double t756;
  double t762;
  double t763;
  double t766;
  double t510;
  double t897;
  double t899;
  double t901;
  double t908;
  double t913;
  double t924;
  double t927;
  double t929;
  double t964;
  double t979;
  double t981;
  double t985;
  double t988;
  double t993;
  double t996;
  double t1005;
  double t480;
  double t506;
  double t507;
  double t388;
  double t448;
  double t449;
  double t827;
  double t829;
  double t866;
  double t751;
  double t773;
  double t790;
  double t1018;
  double t1020;
  double t1052;
  double t986;
  double t1007;
  double t1008;
  double t1117;
  double t1307;
  double t1315;
  double t1325;
  double t1335;
  double t1341;
  double t1349;
  double t1478;
  double t1483;
  double t1485;
  double t1493;
  double t1497;
  double t1501;
  double t1505;
  double t1531;
  double t1604;
  double t1619;
  double t1630;
  double t1632;
  double t1645;
  double t1647;
  double t1653;
  double t1655;
  double t1760;
  double t1772;
  double t1786;
  double t1810;
  double t1812;
  double t1839;
  double t1844;
  double t1850;
  double t1868;
  double t1871;
  double t1897;
  double t1909;
  double t1916;
  double t1925;
  double t1927;
  double t1933;
  double t1984;
  double t1985;
  double t2004;
  double t2033;
  double t2053;
  double t2062;
  double t2064;
  double t2074;
  double t2091;
  double t2097;
  double t2099;
  double t904;
  double t915;
  double t950;
  double t952;
  double t1013;
  double t1064;
  double t1075;
  double t592;
  double t627;
  double t664;
  double t666;
  double t795;
  double t867;
  double t877;
  double t184;
  double t212;
  double t251;
  double t452;
  double t521;
  double t525;
  double t291;
  double t542;
  double t547;
  double t2183;
  double t2217;
  double t693;
  double t881;
  double t960;
  double t1094;
  double t1112;
  double t1122;
  double t1126;
  double t1127;
  double t1129;
  double t1141;
  double t1146;
  double t1152;
  double t1161;
  double t1162;
  double t1174;
  double t1186;
  double t1188;
  double t1197;
  double t1198;
  double t1211;
  double t1213;
  double t1216;
  double t1230;
  double t1232;
  double t1240;
  double t1250;
  double t1255;
  double t1256;
  double t1260;
  double t1276;
  double t1278;
  double t1372;
  double t1389;
  double t1416;
  double t1329;
  double t1354;
  double t1357;
  double t1365;
  double t1424;
  double t1431;
  double t1543;
  double t1545;
  double t1546;
  double t1494;
  double t1532;
  double t1536;
  double t1446;
  double t1458;
  double t1537;
  double t1557;
  double t1565;
  double t1698;
  double t1703;
  double t1706;
  double t1637;
  double t1660;
  double t1663;
  double t1592;
  double t1593;
  double t1668;
  double t1708;
  double t1718;
  double t1947;
  double t1948;
  double t1953;
  double t1911;
  double t1934;
  double t1943;
  double t1781;
  double t1824;
  double t1853;
  double t1855;
  double t1944;
  double t1955;
  double t1966;
  double t2122;
  double t2130;
  double t2132;
  double t2066;
  double t2100;
  double t2112;
  double t1983;
  double t1986;
  double t2009;
  double t2014;
  double t2120;
  double t2134;
  double t2137;
  double t2255;
  double t2257;
  double t2261;
  double t2269;
  double t2234;
  double t2236;
  double t2240;
  double t2243;
  double t2185;
  double t2200;
  double t2201;
  double t2762;
  double t2764;
  double t2784;
  double t2743;
  double t2744;
  double t2731;
  double t2734;
  double t2281;
  double t2282;
  double t2290;
  double t2303;
  double t2309;
  double t2310;
  double t2332;
  double t2333;
  double t2339;
  double t2372;
  double t2386;
  double t2417;
  double t2418;
  double t2434;
  double t2438;
  double t2441;
  double t2471;
  double t2474;
  double t2478;
  double t2497;
  double t2499;
  double t2502;
  double t2513;
  double t2515;
  double t2518;
  double t2527;
  double t2535;
  double t2539;
  double t2566;
  double t2568;
  double t2569;
  double t2590;
  double t2598;
  double t2599;
  double t2608;
  double t2615;
  double t2625;
  double t2641;
  double t2649;
  double t2650;
  double t2656;
  double t2662;
  double t2664;
  double t2695;
  double t2698;
  double t2699;
  double t2702;
  double t2703;
  double t2717;
  double t2171;
  double t2174;
  double t2175;
  double t3085;
  double t3087;
  double t3098;
  double t3099;
  double t3125;
  double t3127;
  double t3135;
  double t3138;
  double t3140;
  double t3141;
  double t3142;
  double t3157;
  double t3174;
  double t3178;
  double t3183;
  double t3185;
  double t3187;
  double t3216;
  double t3222;
  double t3232;
  double t3233;
  double t3241;
  double t3252;
  double t3253;
  double t3261;
  double t3263;
  double t3264;
  double t3280;
  double t3285;
  double t3294;
  double t3295;
  double t3296;
  double t3299;
  double t3314;
  double t3072;
  double t3080;
  double t3083;
  double t3084;
  double t3137;
  double t3143;
  double t3202;
  double t3211;
  double t3228;
  double t3281;
  double t3316;
  double t3326;
  double t3327;
  double t3328;
  double t3329;
  double t3333;
  double t3338;
  double t3352;
  double t3353;
  double t2176;
  double t2178;
  double t2182;
  double t3403;
  double t3408;
  double t886;
  double t3376;
  double t3377;
  double t3380;
  double t3420;
  double t3215;
  double t3363;
  double t3367;
  double t3411;
  double t3456;
  double t3458;
  double t3464;
  double t2147;
  double t2157;
  double t2164;
  double t1097;
  double t3826;
  double t3828;
  double t3831;
  double t3817;
  double t3470;
  double t3471;
  double t3474;
  double t3490;
  double t3525;
  double t3526;
  double t3527;
  double t3529;
  double t3586;
  double t3589;
  double t3597;
  double t3605;
  double t3663;
  double t3664;
  double t3667;
  double t3669;
  double t3718;
  double t3724;
  double t3729;
  double t3735;
  double t3791;
  double t3793;
  double t3794;
  double t3797;
  double t4024;
  double t4031;
  double t4034;
  double t4035;
  double t4040;
  double t4029;
  double t4055;
  double t4056;
  double t4060;
  double t4030;
  double t4045;
  double t4047;
  double t1474;
  double t1571;
  double t1576;
  double t1297;
  double t1439;
  double t1440;
  double t4318;
  double t4323;
  double t4327;
  double t4329;
  double t4337;
  double t4342;
  double t4349;
  double t4353;
  double t4354;
  double t4356;
  double t4357;
  double t4367;
  double t4382;
  double t4384;
  double t4390;
  double t4344;
  double t4371;
  double t4377;
  double t4412;
  double t4413;
  double t4421;
  double t4436;
  double t4437;
  double t4438;
  double t4378;
  double t4393;
  double t4403;
  double t4423;
  double t4439;
  double t4440;
  double t4442;
  double t4443;
  double t4451;
  double t1596;
  double t1720;
  double t1723;
  double t4621;
  double t4622;
  double t4637;
  double t4640;
  double t4646;
  double t4647;
  double t4664;
  double t4671;
  double t4638;
  double t4648;
  double t4680;
  double t4682;
  double t4698;
  double t4700;
  double t4705;
  double t4707;
  double t4728;
  double t4730;
  double t4743;
  double t4683;
  double t4710;
  double t4719;
  double t4769;
  double t4772;
  double t4777;
  double t4778;
  double t4784;
  double t4785;
  double t4789;
  double t1867;
  double t1969;
  double t1974;
  double t4724;
  double t4744;
  double t4748;
  double t4783;
  double t4790;
  double t4793;
  double t4800;
  double t4803;
  double t4807;
  double t2032;
  double t2139;
  double t2144;
  double t3816;
  double t3823;
  double t3846;
  double t3848;
  double t3887;
  double t3890;
  double t3911;
  double t3914;
  double t3946;
  double t3947;
  double t3988;
  double t3989;
  double t4022;
  double t4050;
  double t4951;
  double t4954;
  double t4955;
  double t4080;
  double t4084;
  double t4985;
  double t4986;
  double t4992;
  double t4118;
  double t4124;
  double t5017;
  double t5019;
  double t5020;
  double t4182;
  double t4193;
  double t5035;
  double t5036;
  double t5040;
  double t4251;
  double t4256;
  double t5053;
  double t5054;
  double t5055;
  double t4279;
  double t4280;
  double t5071;
  double t5072;
  double t5082;
  double t4317;
  double t4404;
  double t4457;
  double t4459;
  double t4491;
  double t4496;
  double t4530;
  double t4531;
  double t4556;
  double t4557;
  double t4587;
  double t4589;
  double t4768;
  double t4819;
  double t4825;
  double t4848;
  double t4861;
  double t4863;
  double t4877;
  double t4880;
  double t4900;
  double t4901;
  double t5245;
  double t5248;
  double t5231;
  double t5233;
  double t5345;
  double t5346;
  double t5325;
  double t5327;
  double t5303;
  double t5307;
  double t5283;
  double t5284;
  double t5388;
  double t5402;
  double t5829;
  double t5830;
  double t5843;
  double t5369;
  double t5447;
  double t5448;
  double t5907;
  double t5908;
  double t5912;
  double t5422;
  double t5946;
  double t5947;
  double t5953;
  double t5977;
  double t5978;
  double t5981;
  double t5482;
  double t5485;
  double t5467;
  double t5468;
  double t5740;
  double t5745;
  double t5769;
  double t5855;
  double t5860;
  double t5862;
  double t6140;
  double t6290;
  double t6293;
  double t6298;
  double t6304;
  double t6194;
  double t6198;
  double t6199;
  double t6200;
  double t6224;
  double t6225;
  double t6227;
  double t6229;
  double t6247;
  double t6250;
  double t6251;
  double t6252;
  double t6258;
  double t6259;
  double t6261;
  double t6263;
  double t6139;
  double t6141;
  double t6145;
  double t6146;
  double t6538;
  double t6541;
  double t6543;
  double t6549;
  double t6551;
  double t6557;
  double t6559;
  double t6628;
  double t6629;
  double t6631;
  double t6597;
  double t6603;
  double t6604;
  double t6775;
  double t6777;
  double t6781;
  double t6783;
  double t6784;
  double t6787;
  double t6789;
  double t6736;
  double t6750;
  double t6751;
  double t6752;
  double t6754;
  double t6760;
  double t6762;
  double t6722;
  double t6725;
  double t6726;
  double t6730;
  double t6706;
  double t6714;
  double t6716;
  double t6719;
  double t6850;
  double t6851;
  double t6852;
  double t6853;
  double t6856;
  double t6857;
  double t6862;
  double t6876;
  double t6877;
  double t6878;
  double t6871;
  double t6873;
  double t6874;
  double t6907;
  double t6908;
  double t6913;
  double t6916;
  double t6952;
  double t6953;
  double t6954;
  double t6958;
  t97 = Cos(var1[11]);
  t19 = Cos(var1[10]);
  t140 = -1. + t97;
  t115 = -1.*t97;
  t121 = 1. + t115;
  t133 = 1.6e-11*t121;
  t141 = 1.6e-11*t140;
  t166 = -1. + t133 + t141;
  t72 = -1.*t19;
  t73 = 1. + t72;
  t191 = 4.e-6*t140;
  t194 = -4.e-6*t97;
  t211 = t191 + t194;
  t398 = Sin(var1[10]);
  t394 = Cos(var1[9]);
  t306 = -1. + t19;
  t342 = 1.6e-11*t306;
  t349 = 1. + t342;
  t360 = t349*t166;
  t376 = 4.e-6*t73*t211;
  t384 = t360 + t376;
  t387 = Sin(var1[9]);
  t411 = 4.e-6*t166*t398;
  t431 = -1.*t211*t398;
  t442 = t411 + t431;
  t261 = Cos(var1[4]);
  t573 = Sin(var1[11]);
  t294 = Sin(var1[4]);
  t304 = Cos(var1[5]);
  t555 = -1.000000000016*t121;
  t563 = 1. + t555;
  t572 = 0.004352*t563;
  t580 = -0.9999910000159999*t573;
  t587 = t572 + t580;
  t594 = -1. + t133;
  t595 = 4.e-6*t594;
  t603 = 3.999964e-6*t121;
  t618 = -1.7408e-8*t573;
  t624 = t595 + t603 + t618;
  t649 = 0.999991*t97;
  t653 = 0.004352*t573;
  t654 = t141 + t649 + t653;
  t700 = -4.e-6*t398*t587;
  t703 = t349*t624;
  t704 = 4.e-6*t73*t654;
  t727 = 0. + t700 + t703 + t704;
  t754 = -1.000000000016*t73;
  t755 = 1. + t754;
  t756 = t755*t587;
  t762 = 4.e-6*t398*t624;
  t763 = -1.*t398*t654;
  t766 = 0. + t756 + t762 + t763;
  t510 = Sin(var1[5]);
  t897 = -1.7408e-8*t121;
  t899 = -3.999964e-6*t573;
  t901 = t897 + t899;
  t908 = 0.999991*t563;
  t913 = t908 + t653;
  t924 = -0.004352*t97;
  t927 = 0.999991*t573;
  t929 = t924 + t927;
  t964 = t349*t901;
  t979 = -4.e-6*t398*t913;
  t981 = 4.e-6*t73*t929;
  t985 = 0. + t964 + t979 + t981;
  t988 = 4.e-6*t398*t901;
  t993 = t755*t913;
  t996 = -1.*t398*t929;
  t1005 = 0. + t988 + t993 + t996;
  t480 = t394*t384;
  t506 = t387*t442;
  t507 = t480 + t506;
  t388 = -1.*t384*t387;
  t448 = t394*t442;
  t449 = t388 + t448;
  t827 = t394*t727;
  t829 = t387*t766;
  t866 = 0. + t827 + t829;
  t751 = -1.*t387*t727;
  t773 = t394*t766;
  t790 = 0. + t751 + t773;
  t1018 = t394*t985;
  t1020 = t387*t1005;
  t1052 = 0. + t1018 + t1020;
  t986 = -1.*t387*t985;
  t1007 = t394*t1005;
  t1008 = 0. + t986 + t1007;
  t1117 = -1.*t449*t510;
  t1307 = 4.e-6*t19*t166;
  t1315 = -1.*t19*t211;
  t1325 = t1307 + t1315;
  t1335 = -1.6e-11*t166*t398;
  t1341 = 4.e-6*t211*t398;
  t1349 = t1335 + t1341;
  t1478 = -1.000000000016*t398*t587;
  t1483 = 4.e-6*t19*t624;
  t1485 = -1.*t19*t654;
  t1493 = t1478 + t1483 + t1485;
  t1497 = -4.e-6*t19*t587;
  t1501 = -1.6e-11*t398*t624;
  t1505 = 4.e-6*t398*t654;
  t1531 = t1497 + t1501 + t1505;
  t1604 = 4.e-6*t19*t901;
  t1619 = -1.000000000016*t398*t913;
  t1630 = -1.*t19*t929;
  t1632 = t1604 + t1619 + t1630;
  t1645 = -1.6e-11*t398*t901;
  t1647 = -4.e-6*t19*t913;
  t1653 = 4.e-6*t398*t929;
  t1655 = t1645 + t1647 + t1653;
  t1760 = 0.004352*t97;
  t1772 = t1760 + t580;
  t1786 = -0.9999910000159999*t97;
  t1810 = -0.00435200000006963*t573;
  t1812 = t1786 + t1810;
  t1839 = -1.7408e-8*t97;
  t1844 = 3.999964000064e-6*t573;
  t1850 = t1839 + t1844;
  t1868 = 4.e-6*t73*t1772;
  t1871 = -4.e-6*t398*t1812;
  t1897 = t349*t1850;
  t1909 = t1868 + t1871 + t1897;
  t1916 = -1.*t398*t1772;
  t1925 = t755*t1812;
  t1927 = 4.e-6*t398*t1850;
  t1933 = t1916 + t1925 + t1927;
  t1984 = -3.999964e-6*t97;
  t1985 = t1984 + t618;
  t2004 = t649 + t653;
  t2033 = -4.e-6*t398*t1772;
  t2053 = t349*t1985;
  t2062 = 4.e-6*t73*t2004;
  t2064 = t2033 + t2053 + t2062;
  t2074 = t755*t1772;
  t2091 = 4.e-6*t398*t1985;
  t2097 = -1.*t398*t2004;
  t2099 = t2074 + t2091 + t2097;
  t904 = 4.e-6*t73*t901;
  t915 = t398*t913;
  t950 = t19*t929;
  t952 = 0. + t904 + t915 + t950;
  t1013 = t304*t1008;
  t1064 = -1.*t1052*t510;
  t1075 = 0. + t1013 + t1064;
  t592 = t398*t587;
  t627 = 4.e-6*t73*t624;
  t664 = t19*t654;
  t666 = 0. + t592 + t627 + t664;
  t795 = t304*t790;
  t867 = -1.*t866*t510;
  t877 = 0. + t795 + t867;
  t184 = 4.e-6*t73*t166;
  t212 = t19*t211;
  t251 = t184 + t212;
  t452 = t304*t449;
  t521 = -1.*t507*t510;
  t525 = t452 + t521;
  t291 = t251*t261;
  t542 = -1.*t294*t525;
  t547 = t291 + t542;
  t2183 = Sin(var1[3]);
  t2217 = Cos(var1[3]);
  t693 = t261*t666;
  t881 = -1.*t294*t877;
  t960 = t261*t952;
  t1094 = -1.*t294*t1075;
  t1112 = -1.*t304*t507;
  t1122 = t1112 + t1117;
  t1126 = -1.*t304*t866;
  t1127 = -1.*t790*t510;
  t1129 = t1126 + t1127;
  t1141 = -1.*t304*t1052;
  t1146 = -1.*t1008*t510;
  t1152 = t1141 + t1146;
  t1161 = -1.*t394*t384;
  t1162 = -1.*t387*t442;
  t1174 = t1161 + t1162;
  t1186 = t304*t1174;
  t1188 = t1186 + t1117;
  t1197 = -1.*t394*t727;
  t1198 = -1.*t387*t766;
  t1211 = t1197 + t1198;
  t1213 = t304*t1211;
  t1216 = t751 + t773;
  t1230 = -1.*t1216*t510;
  t1232 = t1213 + t1230;
  t1240 = -1.*t394*t985;
  t1250 = -1.*t387*t1005;
  t1255 = t1240 + t1250;
  t1256 = t304*t1255;
  t1260 = t986 + t1007;
  t1276 = -1.*t1260*t510;
  t1278 = t1256 + t1276;
  t1372 = t1325*t387;
  t1389 = t394*t1349;
  t1416 = t1372 + t1389;
  t1329 = t394*t1325;
  t1354 = -1.*t387*t1349;
  t1357 = t1329 + t1354;
  t1365 = t304*t1357;
  t1424 = -1.*t1416*t510;
  t1431 = t1365 + t1424;
  t1543 = t387*t1493;
  t1545 = t394*t1531;
  t1546 = t1543 + t1545;
  t1494 = t394*t1493;
  t1532 = -1.*t387*t1531;
  t1536 = t1494 + t1532;
  t1446 = t19*t587;
  t1458 = t1446 + t762 + t763;
  t1537 = t304*t1536;
  t1557 = -1.*t1546*t510;
  t1565 = t1537 + t1557;
  t1698 = t387*t1632;
  t1703 = t394*t1655;
  t1706 = t1698 + t1703;
  t1637 = t394*t1632;
  t1660 = -1.*t387*t1655;
  t1663 = t1637 + t1660;
  t1592 = t19*t913;
  t1593 = t988 + t1592 + t996;
  t1668 = t304*t1663;
  t1708 = -1.*t1706*t510;
  t1718 = t1668 + t1708;
  t1947 = t394*t1909;
  t1948 = t387*t1933;
  t1953 = t1947 + t1948;
  t1911 = -1.*t387*t1909;
  t1934 = t394*t1933;
  t1943 = t1911 + t1934;
  t1781 = t19*t1772;
  t1824 = t398*t1812;
  t1853 = 4.e-6*t73*t1850;
  t1855 = t1781 + t1824 + t1853;
  t1944 = t304*t1943;
  t1955 = -1.*t1953*t510;
  t1966 = t1944 + t1955;
  t2122 = t394*t2064;
  t2130 = t387*t2099;
  t2132 = t2122 + t2130;
  t2066 = -1.*t387*t2064;
  t2100 = t394*t2099;
  t2112 = t2066 + t2100;
  t1983 = t398*t1772;
  t1986 = 4.e-6*t73*t1985;
  t2009 = t19*t2004;
  t2014 = t1983 + t1986 + t2009;
  t2120 = t304*t2112;
  t2134 = -1.*t2132*t510;
  t2137 = t2120 + t2134;
  t2255 = t304*t1052;
  t2257 = t1008*t510;
  t2261 = 0. + t2255 + t2257;
  t2269 = 0. + t960 + t1094;
  t2234 = t304*t866;
  t2236 = t790*t510;
  t2240 = 0. + t2234 + t2236;
  t2243 = 0. + t693 + t881;
  t2185 = t304*t507;
  t2200 = t449*t510;
  t2201 = t2185 + t2200;
  t2762 = t2217*t2201;
  t2764 = -1.*t2183*t547;
  t2784 = t2762 + t2764;
  t2743 = t2217*t2240;
  t2744 = -1.*t2183*t2243;
  t2731 = t2217*t2261;
  t2734 = -1.*t2183*t2269;
  t2281 = -1.*t251*t294;
  t2282 = -1.*t261*t525;
  t2290 = t2281 + t2282;
  t2303 = -1.*t666*t294;
  t2309 = -1.*t261*t877;
  t2310 = t2303 + t2309;
  t2332 = -1.*t952*t294;
  t2333 = -1.*t261*t1075;
  t2339 = t2332 + t2333;
  t2372 = t795 + t867;
  t2386 = t1013 + t1064;
  t2417 = t1174*t510;
  t2418 = t452 + t2417;
  t2434 = t304*t1216;
  t2438 = t1211*t510;
  t2441 = t2434 + t2438;
  t2471 = t304*t1260;
  t2474 = t1255*t510;
  t2478 = t2471 + t2474;
  t2497 = t304*t1416;
  t2499 = t1357*t510;
  t2502 = t2497 + t2499;
  t2513 = t261*t442;
  t2515 = -1.*t294*t1431;
  t2518 = t2513 + t2515;
  t2527 = t304*t1546;
  t2535 = t1536*t510;
  t2539 = t2527 + t2535;
  t2566 = t261*t1458;
  t2568 = -1.*t294*t1565;
  t2569 = t2566 + t2568;
  t2590 = t304*t1706;
  t2598 = t1663*t510;
  t2599 = t2590 + t2598;
  t2608 = t261*t1593;
  t2615 = -1.*t294*t1718;
  t2625 = t2608 + t2615;
  t2641 = t304*t1953;
  t2649 = t1943*t510;
  t2650 = t2641 + t2649;
  t2656 = t261*t1855;
  t2662 = -1.*t294*t1966;
  t2664 = t2656 + t2662;
  t2695 = t304*t2132;
  t2698 = t2112*t510;
  t2699 = t2695 + t2698;
  t2702 = t261*t2014;
  t2703 = -1.*t294*t2137;
  t2717 = t2702 + t2703;
  t2171 = t666*t294;
  t2174 = t261*t877;
  t2175 = 0. + t2171 + t2174;
  t3085 = -1.26e-8*var1[11];
  t3087 = 1. + t141;
  t3098 = -0.14871*t3087;
  t3099 = -1.64779999997447e-7*t121;
  t3125 = -1.59556e-7*t140;
  t3127 = -1.199987999968e-6*t573;
  t3135 = t3085 + t3098 + t3099 + t3125 + t3127;
  t3138 = 0.803147*t563;
  t3140 = 0.50315000001605*t121;
  t3141 = 0.00130540515936178*t573;
  t3142 = t3138 + t3140 + t3141;
  t3157 = -5.04e-14*var1[11];
  t3174 = -0.03988959484*t121;
  t3178 = 6.38224e-13*t140;
  t3183 = -0.041195*t97;
  t3185 = 0.299996999992*t573;
  t3187 = t3157 + t3174 + t3178 + t3183 + t3185;
  t3216 = -1.*t394;
  t3222 = 1. + t3216;
  t3232 = -0.15121*t387;
  t3233 = -1.2484e-7*var1[10];
  t3241 = 2.479936e-18*t73;
  t3252 = -1.54996e-7*t306;
  t3253 = 1.124840000016e-6*t398;
  t3261 = t349*t3135;
  t3263 = -4.e-6*t398*t3142;
  t3264 = 4.e-6*t73*t3187;
  t3280 = t3233 + t3241 + t3252 + t3253 + t3261 + t3263 + t3264;
  t3285 = 0.281210000008499*t73;
  t3294 = -0.03874900000062*t398;
  t3295 = 4.e-6*t398*t3135;
  t3296 = t755*t3142;
  t3299 = -1.*t398*t3187;
  t3314 = t3285 + t3294 + t3295 + t3296 + t3299;
  t3072 = -4.9936e-13*var1[10];
  t3080 = -0.038749*t73;
  t3083 = 6.19984e-13*t306;
  t3084 = -0.281210000004*t398;
  t3137 = 4.e-6*t73*t3135;
  t3143 = t398*t3142;
  t3202 = t19*t3187;
  t3211 = 0. + t3072 + t3080 + t3083 + t3084 + t3137 + t3143 + t3202;
  t3228 = 0.15121*t3222;
  t3281 = -1.*t387*t3280;
  t3316 = t394*t3314;
  t3326 = t3228 + t3232 + t3281 + t3316;
  t3327 = t304*t3326;
  t3328 = -0.15121*t3222;
  t3329 = t394*t3280;
  t3333 = t387*t3314;
  t3338 = t3328 + t3232 + t3329 + t3333;
  t3352 = -1.*t3338*t510;
  t3353 = 0. + t3327 + t3352;
  t2176 = t251*t294;
  t2178 = t261*t525;
  t2182 = t2176 + t2178;
  t3403 = t261*t3211;
  t3408 = -1.*t294*t3353;
  t886 = t693 + t881;
  t3376 = t3211*t294;
  t3377 = t261*t3353;
  t3380 = 0. + t3376 + t3377;
  t3420 = 0. + t3403 + t3408;
  t3215 = -1.*t3211*t294;
  t3363 = -1.*t261*t3353;
  t3367 = t3215 + t3363;
  t3411 = t3403 + t3408;
  t3456 = t304*t3338;
  t3458 = t3326*t510;
  t3464 = 0. + t3456 + t3458;
  t2147 = t952*t294;
  t2157 = t261*t1075;
  t2164 = 0. + t2147 + t2157;
  t1097 = t960 + t1094;
  t3826 = -1.*t304*t3338;
  t3828 = -1.*t3326*t510;
  t3831 = t3826 + t3828;
  t3817 = t3327 + t3352;
  t3470 = t2201*t3464;
  t3471 = t2182*t3380;
  t3474 = t547*t3420;
  t3490 = t3470 + t3471 + t3474;
  t3525 = -1.*t2240*t3464;
  t3526 = -1.*t2175*t3380;
  t3527 = -1.*t2243*t3420;
  t3529 = t3525 + t3526 + t3527;
  t3586 = t2240*t3464;
  t3589 = t2175*t3380;
  t3597 = t2243*t3420;
  t3605 = t3586 + t3589 + t3597;
  t3663 = -1.*t3464*t2261;
  t3664 = -1.*t3380*t2164;
  t3667 = -1.*t3420*t2269;
  t3669 = t3663 + t3664 + t3667;
  t3718 = -1.*t2201*t3464;
  t3724 = -1.*t2182*t3380;
  t3729 = -1.*t547*t3420;
  t3735 = t3718 + t3724 + t3729;
  t3791 = t3464*t2261;
  t3793 = t3380*t2164;
  t3794 = t3420*t2269;
  t3797 = t3791 + t3793 + t3794;
  t4024 = -0.15121*t394;
  t4031 = 0.15121*t387;
  t4034 = -1.*t394*t3280;
  t4035 = -1.*t387*t3314;
  t4040 = t4024 + t4031 + t4034 + t4035;
  t4029 = t4024 + t3232 + t3281 + t3316;
  t4055 = t304*t4040;
  t4056 = -1.*t4029*t510;
  t4060 = t4055 + t4056;
  t4030 = t304*t4029;
  t4045 = t4040*t510;
  t4047 = t4030 + t4045;
  t1474 = t1458*t294;
  t1571 = t261*t1565;
  t1576 = t1474 + t1571;
  t1297 = t442*t294;
  t1439 = t261*t1431;
  t1440 = t1297 + t1439;
  t4318 = -0.03874900000062*t19;
  t4323 = 0.281210000008499*t398;
  t4327 = 4.e-6*t19*t3135;
  t4329 = -1.000000000016*t398*t3142;
  t4337 = -1.*t19*t3187;
  t4342 = t4318 + t4323 + t4327 + t4329 + t4337;
  t4349 = 1.124840000016e-6*t19;
  t4353 = 1.5499600000248e-7*t398;
  t4354 = -1.6e-11*t398*t3135;
  t4356 = -4.e-6*t19*t3142;
  t4357 = 4.e-6*t398*t3187;
  t4367 = -1.2484e-7 + t4349 + t4353 + t4354 + t4356 + t4357;
  t4382 = t394*t4342;
  t4384 = -1.*t387*t4367;
  t4390 = t4382 + t4384;
  t4344 = t387*t4342;
  t4371 = t394*t4367;
  t4377 = t4344 + t4371;
  t4412 = -0.281210000004*t19;
  t4413 = t19*t3142;
  t4421 = -4.9936e-13 + t4412 + t3294 + t3295 + t4413 + t3299;
  t4436 = t304*t4390;
  t4437 = -1.*t4377*t510;
  t4438 = t4436 + t4437;
  t4378 = t304*t4377;
  t4393 = t4390*t510;
  t4403 = t4378 + t4393;
  t4423 = t4421*t294;
  t4439 = t261*t4438;
  t4440 = t4423 + t4439;
  t4442 = t261*t4421;
  t4443 = -1.*t294*t4438;
  t4451 = t4442 + t4443;
  t1596 = t1593*t294;
  t1720 = t261*t1718;
  t1723 = t1596 + t1720;
  t4621 = 0.00130540515936178*t97;
  t4622 = -0.2999969999968001*t573;
  t4637 = t4621 + t4622;
  t4640 = -1.199987999968e-6*t97;
  t4646 = -5.2216206374471e-9*t573;
  t4647 = -1.26e-8 + t4640 + t4646;
  t4664 = 0.299996999992*t97;
  t4671 = -5.04e-14 + t4664 + t3141;
  t4638 = -4.e-6*t398*t4637;
  t4648 = t349*t4647;
  t4680 = 4.e-6*t73*t4671;
  t4682 = t4638 + t4648 + t4680;
  t4698 = t755*t4637;
  t4700 = 4.e-6*t398*t4647;
  t4705 = -1.*t398*t4671;
  t4707 = t4698 + t4700 + t4705;
  t4728 = -1.*t387*t4682;
  t4730 = t394*t4707;
  t4743 = t4728 + t4730;
  t4683 = t394*t4682;
  t4710 = t387*t4707;
  t4719 = t4683 + t4710;
  t4769 = t398*t4637;
  t4772 = 4.e-6*t73*t4647;
  t4777 = t19*t4671;
  t4778 = t4769 + t4772 + t4777;
  t4784 = t304*t4743;
  t4785 = -1.*t4719*t510;
  t4789 = t4784 + t4785;
  t1867 = t1855*t294;
  t1969 = t261*t1966;
  t1974 = t1867 + t1969;
  t4724 = t304*t4719;
  t4744 = t4743*t510;
  t4748 = t4724 + t4744;
  t4783 = t4778*t294;
  t4790 = t261*t4789;
  t4793 = t4783 + t4790;
  t4800 = t261*t4778;
  t4803 = -1.*t294*t4789;
  t4807 = t4800 + t4803;
  t2032 = t2014*t294;
  t2139 = t261*t2137;
  t2144 = t2032 + t2139;
  t3816 = t525*t3464;
  t3823 = t2201*t3817;
  t3846 = -1.*t2372*t3464;
  t3848 = -1.*t2240*t3817;
  t3887 = t2372*t3464;
  t3890 = t2240*t3817;
  t3911 = -1.*t3817*t2261;
  t3914 = -1.*t3464*t2386;
  t3946 = -1.*t525*t3464;
  t3947 = -1.*t2201*t3817;
  t3988 = t3817*t2261;
  t3989 = t3464*t2386;
  t4022 = t2418*t3464;
  t4050 = t2201*t4047;
  t4951 = t251*t3211;
  t4954 = t525*t3353;
  t4955 = t4951 + t3470 + t4954;
  t4080 = -1.*t2441*t3464;
  t4084 = -1.*t2240*t4047;
  t4985 = -1.*t666*t3211;
  t4986 = -1.*t877*t3353;
  t4992 = t4985 + t3525 + t4986;
  t4118 = t2441*t3464;
  t4124 = t2240*t4047;
  t5017 = t666*t3211;
  t5019 = t877*t3353;
  t5020 = t5017 + t3586 + t5019;
  t4182 = -1.*t4047*t2261;
  t4193 = -1.*t3464*t2478;
  t5035 = -1.*t3211*t952;
  t5036 = -1.*t3353*t1075;
  t5040 = t5035 + t3663 + t5036;
  t4251 = -1.*t2418*t3464;
  t4256 = -1.*t2201*t4047;
  t5053 = -1.*t251*t3211;
  t5054 = -1.*t525*t3353;
  t5055 = t5053 + t3718 + t5054;
  t4279 = t4047*t2261;
  t4280 = t3464*t2478;
  t5071 = t3211*t952;
  t5072 = t3353*t1075;
  t5082 = t5071 + t3791 + t5072;
  t4317 = t2502*t3464;
  t4404 = t2201*t4403;
  t4457 = -1.*t2539*t3464;
  t4459 = -1.*t2240*t4403;
  t4491 = t2539*t3464;
  t4496 = t2240*t4403;
  t4530 = -1.*t4403*t2261;
  t4531 = -1.*t3464*t2599;
  t4556 = -1.*t2502*t3464;
  t4557 = -1.*t2201*t4403;
  t4587 = t4403*t2261;
  t4589 = t3464*t2599;
  t4768 = t2201*t4748;
  t4819 = -1.*t4748*t2240;
  t4825 = -1.*t2650*t3464;
  t4848 = -1.*t2201*t4748;
  t4861 = t2699*t3464;
  t4863 = t4748*t2261;
  t4877 = t4748*t2240;
  t4880 = t2650*t3464;
  t4900 = -1.*t2699*t3464;
  t4901 = -1.*t4748*t2261;
  t5245 = -1.*t1458*t3211;
  t5248 = -1.*t666*t4421;
  t5231 = t442*t3211;
  t5233 = t251*t4421;
  t5345 = t4421*t952;
  t5346 = t3211*t1593;
  t5325 = -1.*t442*t3211;
  t5327 = -1.*t251*t4421;
  t5303 = -1.*t4421*t952;
  t5307 = -1.*t3211*t1593;
  t5283 = t1458*t3211;
  t5284 = t666*t4421;
  t5388 = -1.*t4778*t666;
  t5402 = -1.*t1855*t3211;
  t5829 = t449*t3326;
  t5830 = t507*t3338;
  t5843 = t5829 + t5830 + t4951;
  t5369 = t251*t4778;
  t5447 = t2014*t3211;
  t5448 = t4778*t952;
  t5907 = -1.*t449*t3326;
  t5908 = -1.*t507*t3338;
  t5912 = t5907 + t5908 + t5053;
  t5422 = -1.*t251*t4778;
  t5946 = -1.*t3326*t1008;
  t5947 = -1.*t3338*t1052;
  t5953 = t5946 + t5947 + t5035;
  t5977 = t790*t3326;
  t5978 = t866*t3338;
  t5981 = t5977 + t5978 + t5017;
  t5482 = -1.*t2014*t3211;
  t5485 = -1.*t4778*t952;
  t5467 = t4778*t666;
  t5468 = t1855*t3211;
  t5740 = -1.*t790*t3326;
  t5745 = -1.*t866*t3338;
  t5769 = t5740 + t5745 + t4985;
  t5855 = t3326*t1008;
  t5860 = t3338*t1052;
  t5862 = t5855 + t5860 + t5071;
  t6140 = t3072 + t3080 + t3083 + t3084 + t3137 + t3143 + t3202;
  t6290 = t384*t3280;
  t6293 = t251*t6140;
  t6298 = t442*t3314;
  t6304 = t6290 + t6293 + t6298;
  t6194 = -1.*t384*t3280;
  t6198 = -1.*t251*t6140;
  t6199 = -1.*t442*t3314;
  t6200 = t6194 + t6198 + t6199;
  t6224 = -1.*t3280*t985;
  t6225 = -1.*t6140*t952;
  t6227 = -1.*t3314*t1005;
  t6229 = t6224 + t6225 + t6227;
  t6247 = t727*t3280;
  t6250 = t666*t6140;
  t6251 = t766*t3314;
  t6252 = t6247 + t6250 + t6251;
  t6258 = -1.*t727*t3280;
  t6259 = -1.*t666*t6140;
  t6261 = -1.*t766*t3314;
  t6263 = t6258 + t6259 + t6261;
  t6139 = t3280*t985;
  t6141 = t6140*t952;
  t6145 = t3314*t1005;
  t6146 = t6139 + t6141 + t6145;
  t6538 = t3135*t1985;
  t6541 = t901*t4647;
  t6543 = t1772*t3142;
  t6549 = t4637*t913;
  t6551 = t2004*t3187;
  t6557 = t4671*t929;
  t6559 = t6538 + t6541 + t6543 + t6549 + t6551 + t6557;
  t6628 = -1.*t166*t4647;
  t6629 = -1.*t211*t4671;
  t6631 = t6628 + t6629;
  t6597 = -1.*t166*t3135;
  t6603 = -1.*t211*t3187;
  t6604 = t6597 + t6603;
  t6775 = t587*t4637;
  t6777 = t624*t4647;
  t6781 = t3135*t1850;
  t6783 = t1812*t3142;
  t6784 = t4671*t654;
  t6787 = t1772*t3187;
  t6789 = t6775 + t6777 + t6781 + t6783 + t6784 + t6787;
  t6736 = -1.*t3135*t1985;
  t6750 = -1.*t901*t4647;
  t6751 = -1.*t1772*t3142;
  t6752 = -1.*t4637*t913;
  t6754 = -1.*t2004*t3187;
  t6760 = -1.*t4671*t929;
  t6762 = t6736 + t6750 + t6751 + t6752 + t6754 + t6760;
  t6722 = t3135*t624;
  t6725 = t587*t3142;
  t6726 = t654*t3187;
  t6730 = t6722 + t6725 + t6726;
  t6706 = -1.*t901*t3135;
  t6714 = -1.*t3142*t913;
  t6716 = -1.*t3187*t929;
  t6719 = t6706 + t6714 + t6716;
  t6850 = -1.*t587*t4637;
  t6851 = -1.*t624*t4647;
  t6852 = -1.*t3135*t1850;
  t6853 = -1.*t1812*t3142;
  t6856 = -1.*t4671*t654;
  t6857 = -1.*t1772*t3187;
  t6862 = t6850 + t6851 + t6852 + t6853 + t6856 + t6857;
  t6876 = t166*t4647;
  t6877 = t211*t4671;
  t6878 = t6876 + t6877;
  t6871 = t166*t3135;
  t6873 = t211*t3187;
  t6874 = t6871 + t6873;
  t6907 = -1.*t3135*t624;
  t6908 = -1.*t587*t3142;
  t6913 = -1.*t654*t3187;
  t6916 = t6907 + t6908 + t6913;
  t6952 = t901*t3135;
  t6953 = t3142*t913;
  t6954 = t3187*t929;
  t6958 = t6952 + t6953 + t6954;
  p_output1[0]=t1097*var2[0] + t886*var2[1] + t547*var2[2];
  p_output1[1]=t1152*t261*var2[0] + t1129*t261*var2[1] + t1122*t261*var2[2];
  p_output1[2]=t1278*t261*var2[0] + t1232*t261*var2[1] + t1188*t261*var2[2];
  p_output1[3]=t1723*var2[0] + t1576*var2[1] + t1440*var2[2];
  p_output1[4]=t2144*var2[0] + t1974*var2[1];
  p_output1[5]=t2164;
  p_output1[6]=t2175;
  p_output1[7]=t2182;
  p_output1[8]=(-1.*t2183*t2261 - 1.*t2217*t2269)*var2[0] + (-1.*t2183*t2240 - 1.*t2217*t2243)*var2[1] + (-1.*t2183*t2201 - 1.*t2217*t547)*var2[2];
  p_output1[9]=-1.*t2183*t2339*var2[0] - 1.*t2183*t2310*var2[1] - 1.*t2183*t2290*var2[2];
  p_output1[10]=(t2217*t2386 + t1152*t2183*t294)*var2[0] + (t2217*t2372 + t1129*t2183*t294)*var2[1] + (t1122*t2183*t294 + t2217*t525)*var2[2];
  p_output1[11]=(t2217*t2478 + t1278*t2183*t294)*var2[0] + (t2217*t2441 + t1232*t2183*t294)*var2[1] + (t2217*t2418 + t1188*t2183*t294)*var2[2];
  p_output1[12]=(t2217*t2599 - 1.*t2183*t2625)*var2[0] + (t2217*t2539 - 1.*t2183*t2569)*var2[1] + (t2217*t2502 - 1.*t2183*t2518)*var2[2];
  p_output1[13]=(t2217*t2699 - 1.*t2183*t2717)*var2[0] + (t2217*t2650 - 1.*t2183*t2664)*var2[1];
  p_output1[14]=0. + t2731 + t2734;
  p_output1[15]=0. + t2743 + t2744;
  p_output1[16]=t2784;
  p_output1[17]=(t2731 + t2734)*var2[0] + (t2743 + t2744)*var2[1] + t2784*var2[2];
  p_output1[18]=t2217*t2339*var2[0] + t2217*t2310*var2[1] + t2217*t2290*var2[2];
  p_output1[19]=(t2183*t2386 - 1.*t1152*t2217*t294)*var2[0] + (t2183*t2372 - 1.*t1129*t2217*t294)*var2[1] + (-1.*t1122*t2217*t294 + t2183*t525)*var2[2];
  p_output1[20]=(t2183*t2478 - 1.*t1278*t2217*t294)*var2[0] + (t2183*t2441 - 1.*t1232*t2217*t294)*var2[1] + (t2183*t2418 - 1.*t1188*t2217*t294)*var2[2];
  p_output1[21]=(t2183*t2599 + t2217*t2625)*var2[0] + (t2183*t2539 + t2217*t2569)*var2[1] + (t2183*t2502 + t2217*t2518)*var2[2];
  p_output1[22]=(t2183*t2699 + t2217*t2717)*var2[0] + (t2183*t2650 + t2217*t2664)*var2[1];
  p_output1[23]=0. + t2183*t2261 + t2217*t2269;
  p_output1[24]=0. + t2183*t2240 + t2217*t2243;
  p_output1[25]=t2183*t2201 + t2217*t547;
  p_output1[26]=(t3529*t547 + t2175*(t2182*t3411 + t2290*t3420 + t3367*t547 + t3380*t547) + t3490*t886 + t2182*(-1.*t2243*t3367 - 1.*t2175*t3411 - 1.*t2310*t3420 - 1.*t3380*t886))*var2[0] + (t2182*(t2269*t3367 + t1097*t3380 + t2164*t3411 + t2339*t3420) + t1097*t3735 + t3797*t547 + t2164*(-1.*t2182*t3411 - 1.*t2290*t3420 - 1.*t3367*t547 - 1.*t3380*t547))*var2[1] + (t2175*(-1.*t2269*t3367 - 1.*t1097*t3380 - 1.*t2164*t3411 - 1.*t2339*t3420) + t1097*t3605 + t3669*t886 + t2164*(t2243*t3367 + t2175*t3411 + t2310*t3420 + t3380*t886))*var2[2];
  p_output1[27]=(t1129*t261*t3490 + t1122*t261*t3529 + t2182*(-1.*t1129*t261*t3380 + t1129*t294*t3420 - 1.*t2175*t261*t3831 + t2243*t294*t3831 + t3846 + t3848) + t2175*(t1122*t261*t3380 - 1.*t1122*t294*t3420 + t3816 + t3823 + t2182*t261*t3831 - 1.*t294*t3831*t547))*var2[0] + (t1152*t261*t3735 + t1122*t261*t3797 + t2182*(t1152*t261*t3380 - 1.*t1152*t294*t3420 + t2164*t261*t3831 - 1.*t2269*t294*t3831 + t3988 + t3989) + t2164*(-1.*t1122*t261*t3380 + t1122*t294*t3420 - 1.*t2182*t261*t3831 + t3946 + t3947 + t294*t3831*t547))*var2[1] + (t1152*t261*t3605 + t1129*t261*t3669 + t2164*(t1129*t261*t3380 - 1.*t1129*t294*t3420 + t2175*t261*t3831 - 1.*t2243*t294*t3831 + t3887 + t3890) + t2175*(-1.*t1152*t261*t3380 + t1152*t294*t3420 - 1.*t2164*t261*t3831 + t2269*t294*t3831 + t3911 + t3914))*var2[2];
  p_output1[28]=(t1232*t261*t3490 + t1188*t261*t3529 + t2182*(-1.*t1232*t261*t3380 + t1232*t294*t3420 - 1.*t2175*t261*t4060 + t2243*t294*t4060 + t4080 + t4084) + t2175*(t1188*t261*t3380 - 1.*t1188*t294*t3420 + t4022 + t4050 + t2182*t261*t4060 - 1.*t294*t4060*t547))*var2[0] + (t1278*t261*t3735 + t1188*t261*t3797 + t2182*(t1278*t261*t3380 - 1.*t1278*t294*t3420 + t2164*t261*t4060 - 1.*t2269*t294*t4060 + t4279 + t4280) + t2164*(-1.*t1188*t261*t3380 + t1188*t294*t3420 - 1.*t2182*t261*t4060 + t4251 + t4256 + t294*t4060*t547))*var2[1] + (t1278*t261*t3605 + t1232*t261*t3669 + t2164*(t1232*t261*t3380 - 1.*t1232*t294*t3420 + t2175*t261*t4060 - 1.*t2243*t294*t4060 + t4118 + t4124) + t2175*(-1.*t1278*t261*t3380 + t1278*t294*t3420 - 1.*t2164*t261*t4060 + t2269*t294*t4060 + t4182 + t4193))*var2[2];
  p_output1[29]=(t1576*t3490 + t1440*t3529 + t2182*(-1.*t1576*t3380 - 1.*t2569*t3420 - 1.*t2175*t4440 - 1.*t2243*t4451 + t4457 + t4459) + t2175*(t1440*t3380 + t2518*t3420 + t4317 + t4404 + t2182*t4440 + t4451*t547))*var2[0] + (t1723*t3735 + t1440*t3797 + t2182*(t1723*t3380 + t2625*t3420 + t2164*t4440 + t2269*t4451 + t4587 + t4589) + t2164*(-1.*t1440*t3380 - 1.*t2518*t3420 - 1.*t2182*t4440 + t4556 + t4557 - 1.*t4451*t547))*var2[1] + (t1723*t3605 + t1576*t3669 + t2164*(t1576*t3380 + t2569*t3420 + t2175*t4440 + t2243*t4451 + t4491 + t4496) + t2175*(-1.*t1723*t3380 - 1.*t2625*t3420 - 1.*t2164*t4440 - 1.*t2269*t4451 + t4530 + t4531))*var2[2];
  p_output1[30]=(t1974*t3490 + t2182*(-1.*t1974*t3380 - 1.*t2664*t3420 - 1.*t2175*t4793 - 1.*t2243*t4807 + t4819 + t4825) + t2175*(t4768 + t2182*t4793 + t4807*t547))*var2[0] + (t2144*t3735 + t2182*(t2144*t3380 + t2717*t3420 + t2164*t4793 + t2269*t4807 + t4861 + t4863) + t2164*(-1.*t2182*t4793 + t4848 - 1.*t4807*t547))*var2[1] + (t2144*t3605 + t1974*t3669 + t2164*(t1974*t3380 + t2664*t3420 + t2175*t4793 + t2243*t4807 + t4877 + t4880) + t2175*(-1.*t2144*t3380 - 1.*t2717*t3420 - 1.*t2164*t4793 - 1.*t2269*t4807 + t4900 + t4901))*var2[2];
  p_output1[31]=t2175*t3490 + t2182*t3529;
  p_output1[32]=t2164*t3735 + t2182*t3797;
  p_output1[33]=t2164*t3605 + t2175*t3669;
  p_output1[34]=(t2372*t4955 + t4992*t525 + t2240*(t1122*t3353 + t3816 + t3823 + t3831*t525) + t2201*(-1.*t1129*t3353 + t3846 + t3848 - 1.*t3831*t877))*var2[0] + (t2201*(t1152*t3353 + t1075*t3831 + t3988 + t3989) + t2386*t5055 + t5082*t525 + t2261*(-1.*t1122*t3353 + t3946 + t3947 - 1.*t3831*t525))*var2[1] + (t2240*(-1.*t1152*t3353 - 1.*t1075*t3831 + t3911 + t3914) + t2386*t5020 + t2372*t5040 + t2261*(t1129*t3353 + t3887 + t3890 + t3831*t877))*var2[2];
  p_output1[35]=(t2441*t4955 + t2418*t4992 + t2240*(t1188*t3353 + t4022 + t4050 + t4060*t525) + t2201*(-1.*t1232*t3353 + t4080 + t4084 - 1.*t4060*t877))*var2[0] + (t2201*(t1278*t3353 + t1075*t4060 + t4279 + t4280) + t2478*t5055 + t2418*t5082 + t2261*(-1.*t1188*t3353 + t4251 + t4256 - 1.*t4060*t525))*var2[1] + (t2240*(-1.*t1278*t3353 - 1.*t1075*t4060 + t4182 + t4193) + t2478*t5020 + t2441*t5040 + t2261*(t1232*t3353 + t4118 + t4124 + t4060*t877))*var2[2];
  p_output1[36]=(t2539*t4955 + t2502*t4992 + t2240*(t1431*t3353 + t4317 + t4404 + t5231 + t5233 + t4438*t525) + t2201*(-1.*t1565*t3353 + t4457 + t4459 + t5245 + t5248 - 1.*t4438*t877))*var2[0] + (t2599*t5055 + t2502*t5082 + t2261*(-1.*t1431*t3353 + t4556 + t4557 - 1.*t4438*t525 + t5325 + t5327) + t2201*(t1718*t3353 + t1075*t4438 + t4587 + t4589 + t5345 + t5346))*var2[1] + (t2599*t5020 + t2539*t5040 + t2240*(-1.*t1718*t3353 - 1.*t1075*t4438 + t4530 + t4531 + t5303 + t5307) + t2261*(t1565*t3353 + t4491 + t4496 + t5283 + t5284 + t4438*t877))*var2[2];
  p_output1[37]=(t2650*t4955 + t2240*(t4768 + t4789*t525 + t5369) + t2201*(-1.*t1966*t3353 + t4819 + t4825 + t5388 + t5402 - 1.*t4789*t877))*var2[0] + (t2699*t5055 + t2261*(t4848 - 1.*t4789*t525 + t5422) + t2201*(t2137*t3353 + t1075*t4789 + t4861 + t4863 + t5447 + t5448))*var2[1] + (t2699*t5020 + t2650*t5040 + t2240*(-1.*t2137*t3353 - 1.*t1075*t4789 + t4900 + t4901 + t5482 + t5485) + t2261*(t1966*t3353 + t4877 + t4880 + t5467 + t5468 + t4789*t877))*var2[2];
  p_output1[38]=t2240*t4955 + t2201*t4992;
  p_output1[39]=t2261*t5055 + t2201*t5082;
  p_output1[40]=t2261*t5020 + t2240*t5040;
  p_output1[41]=((t1174*t3326 + t3338*t449 + t4040*t449 + t4029*t507)*t666 + t251*(-1.*t1211*t3326 - 1.*t1216*t3338 - 1.*t4040*t790 - 1.*t4029*t866))*var2[0] + (t251*(t1255*t3326 + t1260*t3338 + t1052*t4029 + t1008*t4040) + (-1.*t1174*t3326 - 1.*t3338*t449 - 1.*t4040*t449 - 1.*t4029*t507)*t952)*var2[1] + ((-1.*t1255*t3326 - 1.*t1260*t3338 - 1.*t1052*t4029 - 1.*t1008*t4040)*t666 + (t1211*t3326 + t1216*t3338 + t4040*t790 + t4029*t866)*t952)*var2[2];
  p_output1[42]=(t442*t5769 + t1458*t5843 + (t1357*t3326 + t1416*t3338 + t4390*t449 + t4377*t507 + t5231 + t5233)*t666 + t251*(-1.*t1536*t3326 - 1.*t1546*t3338 + t5245 + t5248 - 1.*t4390*t790 - 1.*t4377*t866))*var2[0] + (t251*(t1663*t3326 + t1706*t3338 + t1052*t4377 + t1008*t4390 + t5345 + t5346) + t442*t5862 + t1593*t5912 + (-1.*t1357*t3326 - 1.*t1416*t3338 - 1.*t4390*t449 - 1.*t4377*t507 + t5325 + t5327)*t952)*var2[1] + (t1458*t5953 + t1593*t5981 + (-1.*t1663*t3326 - 1.*t1706*t3338 - 1.*t1052*t4377 - 1.*t1008*t4390 + t5303 + t5307)*t666 + (t1536*t3326 + t1546*t3338 + t5283 + t5284 + t4390*t790 + t4377*t866)*t952)*var2[2];
  p_output1[43]=(t1855*t5843 + (t449*t4743 + t4719*t507 + t5369)*t666 + t251*(-1.*t1943*t3326 - 1.*t1953*t3338 + t5388 + t5402 - 1.*t4743*t790 - 1.*t4719*t866))*var2[0] + (t251*(t2112*t3326 + t2132*t3338 + t1052*t4719 + t1008*t4743 + t5447 + t5448) + t2014*t5912 + (-1.*t449*t4743 - 1.*t4719*t507 + t5422)*t952)*var2[1] + (t1855*t5953 + t2014*t5981 + (-1.*t2112*t3326 - 1.*t2132*t3338 - 1.*t1052*t4719 - 1.*t1008*t4743 + t5482 + t5485)*t666 + (t1943*t3326 + t1953*t3338 + t5467 + t5468 + t4743*t790 + t4719*t866)*t952)*var2[2];
  p_output1[44]=t251*t5769 + t5843*t666;
  p_output1[45]=t251*t5862 + t5912*t952;
  p_output1[46]=t5953*t666 + t5981*t952;
  p_output1[47]=(-0.15121*t1632 - 0.15121*t1655 + t442*t6263 + t1458*t6304 + (t1349*t3280 + t1325*t3314 + t384*t4367 + t4342*t442 + t5233 + t442*t6140)*t666 + t251*(-1.*t1531*t3280 - 1.*t1493*t3314 + t5248 - 1.*t1458*t6140 - 1.*t4367*t727 - 1.*t4342*t766))*var2[0] + (-0.15121*t1493 - 0.15121*t1531 + t442*t6146 + t1593*t6200 + (-1.*t1349*t3280 - 1.*t1325*t3314 - 1.*t384*t4367 - 1.*t4342*t442 + t5327 - 1.*t442*t6140)*t952 + t251*(t1655*t3280 + t1632*t3314 + t1005*t4342 + t5345 + t1593*t6140 + t4367*t985))*var2[1] + (-0.15121*t1325 - 0.15121*t1349 + t1458*t6229 + t1593*t6252 + (t1531*t3280 + t1493*t3314 + t5284 + t1458*t6140 + t4367*t727 + t4342*t766)*t952 + t666*(-1.*t1655*t3280 - 1.*t1632*t3314 - 1.*t1005*t4342 + t5303 - 1.*t1593*t6140 - 1.*t4367*t985))*var2[2];
  p_output1[48]=(-0.15121*t2064 - 0.15121*t2099 + t1855*t6304 + (t384*t4682 + t442*t4707 + t5369)*t666 + t251*(-1.*t1909*t3280 - 1.*t1933*t3314 + t5388 - 1.*t1855*t6140 - 1.*t4682*t727 - 1.*t4707*t766))*var2[0] + (-0.15121*t1909 - 0.15121*t1933 + t2014*t6200 + (-1.*t384*t4682 - 1.*t442*t4707 + t5422)*t952 + t251*(t2064*t3280 + t2099*t3314 + t1005*t4707 + t5448 + t2014*t6140 + t4682*t985))*var2[1] + (t1855*t6229 + t2014*t6252 + (t1909*t3280 + t1933*t3314 + t5467 + t1855*t6140 + t4682*t727 + t4707*t766)*t952 + t666*(-1.*t2064*t3280 - 1.*t2099*t3314 - 1.*t1005*t4707 + t5485 - 1.*t2014*t6140 - 1.*t4682*t985))*var2[2];
  p_output1[49]=-0.15121*t1005 + t251*t6263 + t6304*t666 - 0.15121*t985;
  p_output1[50]=t251*t6146 - 0.15121*t727 - 0.15121*t766 + t6200*t952;
  p_output1[51]=-0.15121*t384 - 0.15121*t442 + t6229*t666 + t6252*t952;
  p_output1[52]=(-0.038749*t1772 + 1.e-6*t1985 - 0.28121*t2004 - 1.*t166*t6862 - 1.*t1850*t6874 - 1.*t624*t6878 + 4.e-6*(-1.*t211*t6862 - 1.*t1772*t6874 - 1.*t654*t6878))*var2[0] + (-0.28121*t1772 - 0.038749*t1812 + 1.e-6*t1850 - 1.*t166*t6559 - 1.*t1985*t6604 - 1.*t6631*t901 + 4.e-6*(-1.*t211*t6559 - 1.*t2004*t6604 - 1.*t6631*t929))*var2[1] + (-1.*t1850*t6719 - 1.*t1985*t6730 - 1.*t624*t6762 - 1.*t6789*t901 + 4.e-6*(-1.*t1772*t6719 - 1.*t2004*t6730 - 1.*t654*t6762 - 1.*t6789*t929))*var2[2];
  p_output1[53]=-1.*t624*t6874 - 1.*t166*t6916 + 4.e-6*(-1.*t654*t6874 - 1.*t211*t6916) + 1.e-6*t901 - 0.038749*t913 - 0.28121*t929;
  p_output1[54]=-0.038749*t587 + 1.e-6*t624 - 0.28121*t654 - 1.*t166*t6958 - 1.*t6604*t901 + 4.e-6*(-1.*t211*t6958 - 1.*t6604*t929);
  p_output1[55]=1.e-6*t166 - 0.28121*t211 - 1.*t624*t6719 - 1.*t6730*t901 + 4.e-6*(-1.*t654*t6719 - 1.*t6730*t929);
  p_output1[56]=-1.9353204325022392e-7;
  p_output1[57]=0.29999998115510645;
  p_output1[58]=1.1914820871506078e-8;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 59, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fFrFoot_vec_DiagonalStance.hh"

namespace DiagonalStance
{

void J_fFrFoot_vec_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
