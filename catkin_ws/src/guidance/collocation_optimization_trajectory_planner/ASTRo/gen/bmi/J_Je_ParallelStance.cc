/*
 * Automatically Generated from Mathematica.
 * Sun 12 Jun 2022 17:43:01 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t14;
  double t6;
  double t8;
  double t15;
  double t23;
  double t24;
  double t25;
  double t5;
  double t22;
  double t28;
  double t21;
  double t29;
  double t35;
  double t36;
  double t37;
  double t38;
  double t19;
  double t9;
  double t16;
  double t17;
  double t52;
  double t53;
  double t54;
  double t65;
  double t66;
  double t68;
  double t69;
  double t55;
  double t56;
  double t57;
  double t73;
  double t74;
  double t75;
  double t76;
  double t26;
  double t30;
  double t31;
  double t40;
  double t41;
  double t42;
  double t90;
  double t87;
  double t88;
  double t91;
  double t97;
  double t98;
  double t99;
  double t101;
  double t96;
  double t107;
  double t108;
  double t109;
  double t110;
  double t113;
  double t114;
  double t115;
  double t89;
  double t92;
  double t93;
  double t135;
  double t136;
  double t137;
  double t138;
  double t121;
  double t122;
  double t123;
  double t125;
  double t126;
  double t127;
  double t143;
  double t144;
  double t145;
  double t146;
  double t100;
  double t102;
  double t103;
  double t18;
  double t32;
  double t33;
  double t158;
  double t163;
  double t170;
  double t171;
  double t172;
  double t45;
  double t46;
  double t47;
  double t70;
  double t71;
  double t72;
  double t61;
  double t62;
  double t63;
  double t198;
  double t199;
  double t200;
  double t183;
  double t185;
  double t186;
  double t209;
  double t210;
  double t211;
  double t159;
  double t160;
  double t161;
  double t81;
  double t82;
  double t84;
  double t95;
  double t105;
  double t106;
  double t236;
  double t237;
  double t238;
  double t116;
  double t117;
  double t118;
  double t140;
  double t141;
  double t142;
  double t131;
  double t132;
  double t133;
  double t263;
  double t264;
  double t265;
  double t250;
  double t251;
  double t252;
  double t273;
  double t274;
  double t275;
  double t225;
  double t226;
  double t227;
  double t152;
  double t153;
  double t154;
  double t212;
  double t213;
  double t215;
  double t166;
  double t167;
  double t168;
  double t289;
  double t290;
  double t291;
  double t174;
  double t175;
  double t176;
  double t178;
  double t179;
  double t180;
  double t192;
  double t193;
  double t194;
  double t302;
  double t303;
  double t304;
  double t187;
  double t188;
  double t189;
  double t204;
  double t205;
  double t207;
  double t306;
  double t307;
  double t308;
  double t216;
  double t217;
  double t218;
  double t220;
  double t221;
  double t222;
  double t276;
  double t277;
  double t278;
  double t232;
  double t233;
  double t234;
  double t316;
  double t317;
  double t318;
  double t239;
  double t240;
  double t243;
  double t245;
  double t246;
  double t247;
  double t257;
  double t258;
  double t259;
  double t329;
  double t330;
  double t331;
  double t253;
  double t254;
  double t255;
  double t269;
  double t270;
  double t271;
  double t333;
  double t334;
  double t335;
  double t279;
  double t280;
  double t281;
  double t283;
  double t284;
  double t285;
  double t51;
  double t58;
  double t60;
  double t343;
  double t344;
  double t345;
  double t346;
  double t347;
  double t352;
  double t353;
  double t355;
  double t356;
  double t357;
  double t358;
  double t359;
  double t360;
  double t342;
  double t348;
  double t349;
  double t350;
  double t354;
  double t361;
  double t362;
  double t363;
  double t364;
  double t365;
  double t366;
  double t367;
  double t368;
  double t369;
  double t370;
  double t374;
  double t375;
  double t376;
  double t351;
  double t371;
  double t372;
  double t385;
  double t386;
  double t387;
  double t380;
  double t381;
  double t382;
  double t383;
  double t384;
  double t388;
  double t389;
  double t405;
  double t406;
  double t407;
  double t397;
  double t398;
  double t399;
  double t400;
  double t403;
  double t411;
  double t404;
  double t409;
  double t427;
  double t428;
  double t429;
  double t430;
  double t431;
  double t432;
  double t433;
  double t413;
  double t414;
  double t417;
  double t436;
  double t437;
  double t438;
  double t421;
  double t422;
  double t425;
  double t452;
  double t453;
  double t454;
  double t455;
  double t457;
  double t458;
  double t459;
  double t77;
  double t78;
  double t79;
  double t448;
  double t449;
  double t450;
  double t456;
  double t460;
  double t461;
  double t463;
  double t464;
  double t465;
  double t479;
  double t480;
  double t481;
  double t486;
  double t487;
  double t489;
  double t490;
  double t491;
  double t80;
  double t85;
  double t86;
  double t482;
  double t483;
  double t484;
  double t488;
  double t492;
  double t493;
  double t495;
  double t496;
  double t497;
  double t471;
  double t474;
  double t475;
  double t517;
  double t518;
  double t519;
  double t520;
  double t528;
  double t531;
  double t535;
  double t536;
  double t539;
  double t543;
  double t544;
  double t547;
  double t548;
  double t43;
  double t48;
  double t50;
  double t571;
  double t574;
  double t575;
  double t600;
  double t601;
  double t602;
  double t603;
  double t611;
  double t614;
  double t617;
  double t619;
  double t620;
  double t623;
  double t627;
  double t628;
  double t631;
  double t124;
  double t129;
  double t130;
  double t672;
  double t673;
  double t674;
  double t675;
  double t676;
  double t681;
  double t682;
  double t683;
  double t684;
  double t685;
  double t686;
  double t687;
  double t688;
  double t689;
  double t671;
  double t677;
  double t678;
  double t679;
  double t690;
  double t691;
  double t692;
  double t693;
  double t694;
  double t695;
  double t696;
  double t697;
  double t698;
  double t702;
  double t703;
  double t704;
  double t680;
  double t699;
  double t700;
  double t713;
  double t714;
  double t715;
  double t708;
  double t709;
  double t710;
  double t711;
  double t712;
  double t716;
  double t717;
  double t732;
  double t733;
  double t734;
  double t725;
  double t726;
  double t727;
  double t728;
  double t731;
  double t737;
  double t753;
  double t754;
  double t755;
  double t756;
  double t757;
  double t758;
  double t759;
  double t760;
  double t739;
  double t740;
  double t743;
  double t763;
  double t764;
  double t765;
  double t747;
  double t748;
  double t751;
  double t775;
  double t776;
  double t777;
  double t778;
  double t783;
  double t784;
  double t786;
  double t787;
  double t788;
  double t147;
  double t148;
  double t150;
  double t779;
  double t780;
  double t781;
  double t785;
  double t789;
  double t790;
  double t792;
  double t793;
  double t794;
  double t808;
  double t809;
  double t814;
  double t815;
  double t816;
  double t818;
  double t819;
  double t820;
  double t151;
  double t155;
  double t156;
  double t810;
  double t811;
  double t812;
  double t817;
  double t821;
  double t822;
  double t824;
  double t825;
  double t826;
  double t800;
  double t803;
  double t804;
  double t846;
  double t847;
  double t848;
  double t849;
  double t857;
  double t860;
  double t864;
  double t865;
  double t868;
  double t872;
  double t873;
  double t876;
  double t877;
  double t111;
  double t119;
  double t120;
  double t900;
  double t903;
  double t904;
  double t929;
  double t930;
  double t931;
  double t932;
  double t940;
  double t943;
  double t946;
  double t948;
  double t949;
  double t952;
  double t956;
  double t957;
  double t960;
  double t412;
  double t418;
  double t1000;
  double t1001;
  double t1002;
  double t439;
  double t1004;
  double t442;
  double t1008;
  double t1011;
  double t1012;
  double t1013;
  double t1014;
  double t451;
  double t470;
  double t485;
  double t502;
  double t503;
  double t532;
  double t540;
  double t1027;
  double t1030;
  double t550;
  double t1046;
  double t1049;
  double t1050;
  double t1051;
  double t1052;
  double t555;
  double t1054;
  double t1057;
  double t1058;
  double t562;
  double t563;
  double t570;
  double t581;
  double t586;
  double t587;
  double t618;
  double t624;
  double t1074;
  double t1077;
  double t1095;
  double t1096;
  double t1097;
  double t635;
  double t1099;
  double t638;
  double t1103;
  double t1106;
  double t1107;
  double t644;
  double t650;
  double t651;
  double t659;
  double t665;
  double t738;
  double t744;
  double t1136;
  double t1137;
  double t1138;
  double t766;
  double t1140;
  double t769;
  double t1144;
  double t1147;
  double t1148;
  double t1149;
  double t1150;
  double t782;
  double t799;
  double t813;
  double t831;
  double t832;
  double t861;
  double t869;
  double t1163;
  double t1166;
  double t879;
  double t1182;
  double t1185;
  double t1186;
  double t1187;
  double t1188;
  double t884;
  double t1190;
  double t1193;
  double t1194;
  double t890;
  double t891;
  double t899;
  double t910;
  double t916;
  double t917;
  double t947;
  double t953;
  double t1210;
  double t1213;
  double t1231;
  double t1232;
  double t1233;
  double t964;
  double t1235;
  double t967;
  double t1239;
  double t1242;
  double t1243;
  double t973;
  double t979;
  double t980;
  double t988;
  double t994;
  double t1278;
  double t1279;
  double t1280;
  double t1068;
  double t1069;
  double t1300;
  double t1302;
  double t1075;
  double t1296;
  double t1297;
  double t1298;
  double t1083;
  double t1087;
  double t1088;
  double t1314;
  double t1315;
  double t1316;
  double t1340;
  double t1341;
  double t1342;
  double t1351;
  double t1352;
  double t1353;
  double t1203;
  double t1204;
  double t1369;
  double t1371;
  double t1211;
  double t1377;
  double t1378;
  double t1379;
  double t1219;
  double t1387;
  double t1388;
  double t1389;
  double t1224;
  double t1225;
  double t1413;
  double t1414;
  double t1415;
  double t1418;
  double t1419;
  double t1424;
  double t1425;
  double t1442;
  double t1443;
  double t1444;
  double t1454;
  double t1455;
  double t1456;
  double t1457;
  double t1458;
  double t1464;
  double t1465;
  t14 = Cos(var1[13]);
  t6 = Cos(var1[14]);
  t8 = Sin(var1[13]);
  t15 = Sin(var1[14]);
  t23 = t14*t6;
  t24 = t8*t15;
  t25 = t23 + t24;
  t5 = Cos(var1[4]);
  t22 = Cos(var1[5]);
  t28 = Sin(var1[12]);
  t21 = Cos(var1[12]);
  t29 = Sin(var1[5]);
  t35 = -1.*t22*t28*t25;
  t36 = -1.*t21*t25*t29;
  t37 = t35 + t36;
  t38 = t5*t37;
  t19 = Sin(var1[4]);
  t9 = -1.*t6*t8;
  t16 = t14*t15;
  t17 = t9 + t16;
  t52 = t6*t8;
  t53 = -1.*t14*t15;
  t54 = t52 + t53;
  t65 = -1.*t21*t22;
  t66 = t28*t29;
  t68 = t65 + t66;
  t69 = t5*t68;
  t55 = t21*t22*t54;
  t56 = -1.*t28*t54*t29;
  t57 = t55 + t56;
  t73 = -1.*t22*t28*t54;
  t74 = -1.*t21*t54*t29;
  t75 = t73 + t74;
  t76 = t5*t75;
  t26 = t21*t22*t25;
  t30 = -1.*t28*t25*t29;
  t31 = t26 + t30;
  t40 = -1.*t14*t6;
  t41 = -1.*t8*t15;
  t42 = t40 + t41;
  t90 = Cos(var1[16]);
  t87 = Cos(var1[17]);
  t88 = Sin(var1[16]);
  t91 = Sin(var1[17]);
  t97 = -1.*t90*t87;
  t98 = -1.*t88*t91;
  t99 = t97 + t98;
  t101 = Sin(var1[15]);
  t96 = Cos(var1[15]);
  t107 = -1.*t22*t101*t99;
  t108 = -1.*t96*t99*t29;
  t109 = t107 + t108;
  t110 = t5*t109;
  t113 = t87*t88;
  t114 = -1.*t90*t91;
  t115 = t113 + t114;
  t89 = -1.*t87*t88;
  t92 = t90*t91;
  t93 = t89 + t92;
  t135 = t96*t22;
  t136 = -1.*t101*t29;
  t137 = t135 + t136;
  t138 = t5*t137;
  t121 = t90*t87;
  t122 = t88*t91;
  t123 = t121 + t122;
  t125 = t96*t22*t93;
  t126 = -1.*t101*t93*t29;
  t127 = t125 + t126;
  t143 = -1.*t22*t101*t93;
  t144 = -1.*t96*t93*t29;
  t145 = t143 + t144;
  t146 = t5*t145;
  t100 = t96*t22*t99;
  t102 = -1.*t101*t99*t29;
  t103 = t100 + t102;
  t18 = t5*t17;
  t32 = -1.*t19*t31;
  t33 = t18 + t32;
  t158 = Sin(var1[3]);
  t163 = Cos(var1[3]);
  t170 = t158*t19*t37;
  t171 = t163*t31;
  t172 = t170 + t171;
  t45 = t21*t22*t17;
  t46 = -1.*t28*t17*t29;
  t47 = t45 + t46;
  t70 = t5*t25;
  t71 = -1.*t19*t57;
  t72 = t70 + t71;
  t61 = -1.*t22*t28;
  t62 = -1.*t21*t29;
  t63 = t61 + t62;
  t198 = t163*t63;
  t199 = t158*t19*t68;
  t200 = t198 + t199;
  t183 = t22*t28*t54;
  t185 = t21*t54*t29;
  t186 = t183 + t185;
  t209 = t158*t19*t75;
  t210 = t163*t57;
  t211 = t209 + t210;
  t159 = t22*t28*t25;
  t160 = t21*t25*t29;
  t161 = t159 + t160;
  t81 = t21*t22*t42;
  t82 = -1.*t28*t42*t29;
  t84 = t81 + t82;
  t95 = t5*t93;
  t105 = -1.*t19*t103;
  t106 = t95 + t105;
  t236 = t158*t19*t109;
  t237 = t163*t103;
  t238 = t236 + t237;
  t116 = t96*t22*t115;
  t117 = -1.*t101*t115*t29;
  t118 = t116 + t117;
  t140 = t5*t123;
  t141 = -1.*t19*t127;
  t142 = t140 + t141;
  t131 = t22*t101;
  t132 = t96*t29;
  t133 = t131 + t132;
  t263 = t163*t133;
  t264 = t158*t19*t137;
  t265 = t263 + t264;
  t250 = t22*t101*t93;
  t251 = t96*t93*t29;
  t252 = t250 + t251;
  t273 = t158*t19*t145;
  t274 = t163*t127;
  t275 = t273 + t274;
  t225 = t22*t101*t99;
  t226 = t96*t99*t29;
  t227 = t225 + t226;
  t152 = t96*t22*t123;
  t153 = -1.*t101*t123*t29;
  t154 = t152 + t153;
  t212 = t163*t161;
  t213 = -1.*t158*t33;
  t215 = t212 + t213;
  t166 = -1.*t17*t19;
  t167 = -1.*t5*t31;
  t168 = t166 + t167;
  t289 = -1.*t163*t19*t37;
  t290 = t158*t31;
  t291 = t289 + t290;
  t174 = t22*t28*t17;
  t175 = t21*t17*t29;
  t176 = t174 + t175;
  t178 = t5*t42;
  t179 = -1.*t19*t47;
  t180 = t178 + t179;
  t192 = t21*t22;
  t193 = -1.*t28*t29;
  t194 = t192 + t193;
  t302 = t158*t63;
  t303 = -1.*t163*t19*t68;
  t304 = t302 + t303;
  t187 = t163*t186;
  t188 = -1.*t158*t72;
  t189 = t187 + t188;
  t204 = -1.*t25*t19;
  t205 = -1.*t5*t57;
  t207 = t204 + t205;
  t306 = -1.*t163*t19*t75;
  t307 = t158*t57;
  t308 = t306 + t307;
  t216 = t22*t28*t42;
  t217 = t21*t42*t29;
  t218 = t216 + t217;
  t220 = t5*t54;
  t221 = -1.*t19*t84;
  t222 = t220 + t221;
  t276 = t163*t227;
  t277 = -1.*t158*t106;
  t278 = t276 + t277;
  t232 = -1.*t93*t19;
  t233 = -1.*t5*t103;
  t234 = t232 + t233;
  t316 = -1.*t163*t19*t109;
  t317 = t158*t103;
  t318 = t316 + t317;
  t239 = t22*t101*t115;
  t240 = t96*t115*t29;
  t243 = t239 + t240;
  t245 = t5*t99;
  t246 = -1.*t19*t118;
  t247 = t245 + t246;
  t257 = -1.*t96*t22;
  t258 = t101*t29;
  t259 = t257 + t258;
  t329 = t158*t133;
  t330 = -1.*t163*t19*t137;
  t331 = t329 + t330;
  t253 = t163*t252;
  t254 = -1.*t158*t142;
  t255 = t253 + t254;
  t269 = -1.*t123*t19;
  t270 = -1.*t5*t127;
  t271 = t269 + t270;
  t333 = -1.*t163*t19*t145;
  t334 = t158*t127;
  t335 = t333 + t334;
  t279 = t22*t101*t123;
  t280 = t96*t123*t29;
  t281 = t279 + t280;
  t283 = t5*t115;
  t284 = -1.*t19*t154;
  t285 = t283 + t284;
  t51 = t25*t19;
  t58 = t5*t57;
  t60 = t51 + t58;
  t343 = -1.*t6;
  t344 = 1. + t343;
  t345 = 0.50321*t344;
  t346 = 0.19821*t6;
  t347 = t345 + t346;
  t352 = -1.*t21;
  t353 = 1. + t352;
  t355 = -1.*t14;
  t356 = 1. + t355;
  t357 = 0.28121*t356;
  t358 = t14*t347;
  t359 = -0.305*t8*t15;
  t360 = t357 + t358 + t359;
  t342 = 0.28121*t8;
  t348 = -1.*t347*t8;
  t349 = -0.305*t14*t15;
  t350 = t342 + t348 + t349;
  t354 = 0.15121*t353;
  t361 = t21*t360;
  t362 = t354 + t361;
  t363 = t22*t362;
  t364 = -0.15121*t353;
  t365 = -0.15121*t21;
  t366 = -0.15121*t28;
  t367 = t28*t360;
  t368 = t364 + t365 + t366 + t367;
  t369 = -1.*t368*t29;
  t370 = t363 + t369;
  t374 = t350*t19;
  t375 = t5*t370;
  t376 = t374 + t375;
  t351 = -1.*t350*t19;
  t371 = -1.*t5*t370;
  t372 = t351 + t371;
  t385 = t5*t350;
  t386 = -1.*t19*t370;
  t387 = t385 + t386;
  t380 = t22*t368;
  t381 = t362*t29;
  t382 = t380 + t381;
  t383 = -1.*t194*t382;
  t384 = -1.*t5*t63*t376;
  t388 = t19*t63*t387;
  t389 = t383 + t384 + t388;
  t405 = -1.*t22*t368;
  t406 = -1.*t362*t29;
  t407 = t405 + t406;
  t397 = t186*t382;
  t398 = t60*t376;
  t399 = t72*t387;
  t400 = t397 + t398 + t399;
  t403 = t5*t75*t389;
  t411 = -1.*t63*t382;
  t404 = Power(t5,2);
  t409 = Power(t19,2);
  t427 = 0.15121*t28;
  t428 = -1.*t28*t360;
  t429 = t427 + t428;
  t430 = t22*t429;
  t431 = t365 + t361;
  t432 = -1.*t431*t29;
  t433 = t430 + t432;
  t413 = -1.*t5*t68*t376;
  t414 = t19*t68*t387;
  t417 = t57*t382;
  t436 = t22*t431;
  t437 = t429*t29;
  t438 = t436 + t437;
  t421 = t5*t75*t376;
  t422 = -1.*t19*t75*t387;
  t425 = t5*t68*t400;
  t452 = 0.28121*t14;
  t453 = -1.*t14*t347;
  t454 = 0.305*t8*t15;
  t455 = t452 + t453 + t454;
  t457 = t21*t22*t350;
  t458 = -1.*t28*t350*t29;
  t459 = t457 + t458;
  t77 = t17*t19;
  t78 = t5*t31;
  t79 = t77 + t78;
  t448 = t22*t28*t350;
  t449 = t21*t350*t29;
  t450 = t448 + t449;
  t456 = t455*t19;
  t460 = t5*t459;
  t461 = t456 + t460;
  t463 = t5*t455;
  t464 = -1.*t19*t459;
  t465 = t463 + t464;
  t479 = -0.305*t6*t8;
  t480 = 0.305*t14*t15;
  t481 = t479 + t480;
  t486 = -0.305*t14*t6;
  t487 = t486 + t359;
  t489 = t21*t22*t481;
  t490 = -1.*t28*t481*t29;
  t491 = t489 + t490;
  t80 = t54*t19;
  t85 = t5*t84;
  t86 = t80 + t85;
  t482 = t22*t28*t481;
  t483 = t21*t481*t29;
  t484 = t482 + t483;
  t488 = t487*t19;
  t492 = t5*t491;
  t493 = t488 + t492;
  t495 = t5*t487;
  t496 = -1.*t19*t491;
  t497 = t495 + t496;
  t471 = t161*t382;
  t474 = t79*t376;
  t475 = t33*t387;
  t517 = -1.*t186*t382;
  t518 = -1.*t60*t376;
  t519 = -1.*t72*t387;
  t520 = t517 + t518 + t519;
  t528 = t471 + t474 + t475;
  t531 = -1.*t57*t382;
  t535 = -1.*t5*t75*t376;
  t536 = t19*t75*t387;
  t539 = t31*t382;
  t543 = t5*t37*t376;
  t544 = -1.*t19*t37*t387;
  t547 = t5*t37*t520;
  t548 = t5*t75*t528;
  t43 = t42*t19;
  t48 = t5*t47;
  t50 = t43 + t48;
  t571 = -1.*t161*t382;
  t574 = -1.*t79*t376;
  t575 = -1.*t33*t387;
  t600 = t194*t382;
  t601 = t5*t63*t376;
  t602 = -1.*t19*t63*t387;
  t603 = t600 + t601 + t602;
  t611 = t571 + t574 + t575;
  t614 = t5*t37*t603;
  t617 = t63*t382;
  t619 = t5*t68*t376;
  t620 = -1.*t19*t68*t387;
  t623 = -1.*t31*t382;
  t627 = -1.*t5*t37*t376;
  t628 = t19*t37*t387;
  t631 = t5*t68*t611;
  t124 = t123*t19;
  t129 = t5*t127;
  t130 = t124 + t129;
  t672 = -1.*t87;
  t673 = 1. + t672;
  t674 = -0.50321*t673;
  t675 = -0.19821*t87;
  t676 = t674 + t675;
  t681 = -1.*t96;
  t682 = 1. + t681;
  t683 = -0.15121*t682;
  t684 = -1.*t90;
  t685 = 1. + t684;
  t686 = -0.28121*t685;
  t687 = t90*t676;
  t688 = 0.305*t88*t91;
  t689 = t686 + t687 + t688;
  t671 = 0.28121*t88;
  t677 = t676*t88;
  t678 = -0.305*t90*t91;
  t679 = t671 + t677 + t678;
  t690 = t96*t689;
  t691 = t683 + t690;
  t692 = t22*t691;
  t693 = -0.15121*t96;
  t694 = 0.15121*t101;
  t695 = t101*t689;
  t696 = t683 + t693 + t694 + t695;
  t697 = -1.*t696*t29;
  t698 = t692 + t697;
  t702 = t679*t19;
  t703 = t5*t698;
  t704 = t702 + t703;
  t680 = -1.*t679*t19;
  t699 = -1.*t5*t698;
  t700 = t680 + t699;
  t713 = t5*t679;
  t714 = -1.*t19*t698;
  t715 = t713 + t714;
  t708 = t22*t696;
  t709 = t691*t29;
  t710 = t708 + t709;
  t711 = -1.*t259*t710;
  t712 = -1.*t5*t133*t704;
  t716 = t19*t133*t715;
  t717 = t711 + t712 + t716;
  t732 = -1.*t22*t696;
  t733 = -1.*t691*t29;
  t734 = t732 + t733;
  t725 = t252*t710;
  t726 = t130*t704;
  t727 = t142*t715;
  t728 = t725 + t726 + t727;
  t731 = t5*t145*t717;
  t737 = -1.*t133*t710;
  t753 = -0.15121*t101;
  t754 = -1.*t101*t689;
  t755 = t753 + t754;
  t756 = t22*t755;
  t757 = 0.15121*t96;
  t758 = t757 + t690;
  t759 = -1.*t758*t29;
  t760 = t756 + t759;
  t739 = -1.*t5*t137*t704;
  t740 = t19*t137*t715;
  t743 = t127*t710;
  t763 = t22*t758;
  t764 = t755*t29;
  t765 = t763 + t764;
  t747 = t5*t145*t704;
  t748 = -1.*t19*t145*t715;
  t751 = t5*t137*t728;
  t775 = -0.28121*t88;
  t776 = -1.*t676*t88;
  t777 = 0.305*t90*t91;
  t778 = t775 + t776 + t777;
  t783 = 0.28121*t90;
  t784 = t783 + t687 + t688;
  t786 = t96*t22*t778;
  t787 = -1.*t101*t778*t29;
  t788 = t786 + t787;
  t147 = t93*t19;
  t148 = t5*t103;
  t150 = t147 + t148;
  t779 = t22*t101*t778;
  t780 = t96*t778*t29;
  t781 = t779 + t780;
  t785 = t784*t19;
  t789 = t5*t788;
  t790 = t785 + t789;
  t792 = t5*t784;
  t793 = -1.*t19*t788;
  t794 = t792 + t793;
  t808 = 0.305*t87*t88;
  t809 = t808 + t678;
  t814 = -0.305*t90*t87;
  t815 = -0.305*t88*t91;
  t816 = t814 + t815;
  t818 = t96*t22*t809;
  t819 = -1.*t101*t809*t29;
  t820 = t818 + t819;
  t151 = t115*t19;
  t155 = t5*t154;
  t156 = t151 + t155;
  t810 = t22*t101*t809;
  t811 = t96*t809*t29;
  t812 = t810 + t811;
  t817 = t816*t19;
  t821 = t5*t820;
  t822 = t817 + t821;
  t824 = t5*t816;
  t825 = -1.*t19*t820;
  t826 = t824 + t825;
  t800 = t227*t710;
  t803 = t150*t704;
  t804 = t106*t715;
  t846 = -1.*t252*t710;
  t847 = -1.*t130*t704;
  t848 = -1.*t142*t715;
  t849 = t846 + t847 + t848;
  t857 = t800 + t803 + t804;
  t860 = -1.*t127*t710;
  t864 = -1.*t5*t145*t704;
  t865 = t19*t145*t715;
  t868 = t103*t710;
  t872 = t5*t109*t704;
  t873 = -1.*t19*t109*t715;
  t876 = t5*t109*t849;
  t877 = t5*t145*t857;
  t111 = t99*t19;
  t119 = t5*t118;
  t120 = t111 + t119;
  t900 = -1.*t227*t710;
  t903 = -1.*t150*t704;
  t904 = -1.*t106*t715;
  t929 = t259*t710;
  t930 = t5*t133*t704;
  t931 = -1.*t19*t133*t715;
  t932 = t929 + t930 + t931;
  t940 = t900 + t903 + t904;
  t943 = t5*t109*t932;
  t946 = t133*t710;
  t948 = t5*t137*t704;
  t949 = -1.*t19*t137*t715;
  t952 = -1.*t103*t710;
  t956 = -1.*t5*t109*t704;
  t957 = t19*t109*t715;
  t960 = t5*t137*t940;
  t412 = -1.*t194*t370;
  t418 = t186*t370;
  t1000 = -1.*t63*t370;
  t1001 = t383 + t1000;
  t1002 = t57*t1001;
  t439 = -1.*t194*t438;
  t1004 = -1.*t68*t370;
  t442 = t186*t438;
  t1008 = t75*t370;
  t1011 = t350*t25;
  t1012 = t57*t370;
  t1013 = t1011 + t397 + t1012;
  t1014 = t63*t1013;
  t451 = -1.*t194*t450;
  t470 = t186*t450;
  t485 = -1.*t194*t484;
  t502 = t186*t484;
  t503 = t218*t382;
  t532 = -1.*t186*t370;
  t540 = t161*t370;
  t1027 = t350*t17;
  t1030 = t31*t370;
  t550 = -1.*t186*t438;
  t1046 = -1.*t75*t370;
  t1049 = -1.*t350*t25;
  t1050 = -1.*t57*t370;
  t1051 = t1049 + t517 + t1050;
  t1052 = t31*t1051;
  t555 = t161*t438;
  t1054 = t37*t370;
  t1057 = t1027 + t471 + t1030;
  t1058 = t57*t1057;
  t562 = t450*t161;
  t563 = t176*t382;
  t570 = -1.*t186*t450;
  t581 = t484*t161;
  t586 = -1.*t186*t484;
  t587 = -1.*t218*t382;
  t618 = t194*t370;
  t624 = -1.*t161*t370;
  t1074 = -1.*t350*t17;
  t1077 = -1.*t31*t370;
  t1095 = t63*t370;
  t1096 = t600 + t1095;
  t1097 = t31*t1096;
  t635 = t194*t438;
  t1099 = t68*t370;
  t638 = -1.*t161*t438;
  t1103 = -1.*t37*t370;
  t1106 = t1074 + t571 + t1077;
  t1107 = t63*t1106;
  t644 = t194*t450;
  t650 = -1.*t450*t161;
  t651 = -1.*t176*t382;
  t659 = t194*t484;
  t665 = -1.*t484*t161;
  t738 = -1.*t259*t698;
  t744 = t252*t698;
  t1136 = -1.*t133*t698;
  t1137 = t711 + t1136;
  t1138 = t127*t1137;
  t766 = -1.*t259*t765;
  t1140 = -1.*t137*t698;
  t769 = t252*t765;
  t1144 = t145*t698;
  t1147 = t679*t123;
  t1148 = t127*t698;
  t1149 = t1147 + t725 + t1148;
  t1150 = t133*t1149;
  t782 = -1.*t259*t781;
  t799 = t781*t252;
  t813 = -1.*t259*t812;
  t831 = t812*t252;
  t832 = t281*t710;
  t861 = -1.*t252*t698;
  t869 = t227*t698;
  t1163 = t679*t93;
  t1166 = t103*t698;
  t879 = -1.*t252*t765;
  t1182 = -1.*t145*t698;
  t1185 = -1.*t679*t123;
  t1186 = -1.*t127*t698;
  t1187 = t1185 + t846 + t1186;
  t1188 = t103*t1187;
  t884 = t227*t765;
  t1190 = t109*t698;
  t1193 = t1163 + t800 + t1166;
  t1194 = t127*t1193;
  t890 = t781*t227;
  t891 = t243*t710;
  t899 = -1.*t781*t252;
  t910 = t812*t227;
  t916 = -1.*t812*t252;
  t917 = -1.*t281*t710;
  t947 = t259*t698;
  t953 = -1.*t227*t698;
  t1210 = -1.*t679*t93;
  t1213 = -1.*t103*t698;
  t1231 = t133*t698;
  t1232 = t929 + t1231;
  t1233 = t103*t1232;
  t964 = t259*t765;
  t1235 = t137*t698;
  t967 = -1.*t227*t765;
  t1239 = -1.*t109*t698;
  t1242 = t1210 + t900 + t1213;
  t1243 = t133*t1242;
  t973 = t259*t781;
  t979 = -1.*t781*t227;
  t980 = -1.*t243*t710;
  t988 = t259*t812;
  t994 = -1.*t812*t227;
  t1278 = t28*t362;
  t1279 = -1.*t21*t368;
  t1280 = t1278 + t1279;
  t1068 = t350*t42;
  t1069 = t17*t455;
  t1300 = Power(t21,2);
  t1302 = Power(t28,2);
  t1075 = -1.*t455*t25;
  t1296 = -1.*t21*t54*t362;
  t1297 = -1.*t28*t54*t368;
  t1298 = t1049 + t1296 + t1297;
  t1083 = t17*t487;
  t1087 = -1.*t54*t350;
  t1088 = -1.*t487*t25;
  t1314 = t21*t25*t362;
  t1315 = t28*t25*t368;
  t1316 = t1027 + t1314 + t1315;
  t1340 = -1.*t28*t362;
  t1341 = t21*t368;
  t1342 = t1340 + t1341;
  t1351 = -1.*t101*t691;
  t1352 = t96*t696;
  t1353 = t1351 + t1352;
  t1203 = t679*t99;
  t1204 = t93*t784;
  t1369 = Power(t96,2);
  t1371 = Power(t101,2);
  t1211 = -1.*t784*t123;
  t1377 = -1.*t96*t93*t691;
  t1378 = -1.*t101*t93*t696;
  t1379 = t1185 + t1377 + t1378;
  t1219 = t93*t816;
  t1387 = t96*t99*t691;
  t1388 = t101*t99*t696;
  t1389 = t1163 + t1387 + t1388;
  t1224 = -1.*t115*t679;
  t1225 = -1.*t816*t123;
  t1413 = t101*t691;
  t1414 = -1.*t96*t696;
  t1415 = t1413 + t1414;
  t1418 = -1.*t54*t360;
  t1419 = t1418 + t1049;
  t1424 = t360*t25;
  t1425 = t1027 + t1424;
  t1442 = -0.15121*t42;
  t1443 = -0.15121*t25;
  t1444 = t1442 + t1443;
  t1454 = -0.15121*t115;
  t1455 = -0.15121*t93;
  t1456 = t1454 + t1455;
  t1457 = t99*t689;
  t1458 = t1163 + t1457;
  t1464 = -1.*t93*t689;
  t1465 = t1464 + t1185;
  p_output1[0]=t33;
  p_output1[1]=t38;
  p_output1[2]=t38;
  p_output1[3]=t50;
  p_output1[4]=t60;
  p_output1[5]=-1.*t19*t63;
  p_output1[6]=t69;
  p_output1[7]=t69;
  p_output1[8]=t72;
  p_output1[9]=t76;
  p_output1[10]=t76;
  p_output1[11]=t79;
  p_output1[12]=t86;
  p_output1[13]=t106;
  p_output1[14]=t110;
  p_output1[15]=t110;
  p_output1[16]=t120;
  p_output1[17]=t130;
  p_output1[18]=-1.*t133*t19;
  p_output1[19]=t138;
  p_output1[20]=t138;
  p_output1[21]=t142;
  p_output1[22]=t146;
  p_output1[23]=t146;
  p_output1[24]=t150;
  p_output1[25]=t156;
  p_output1[26]=-1.*t158*t161 - 1.*t163*t33;
  p_output1[27]=-1.*t158*t168;
  p_output1[28]=t172;
  p_output1[29]=t172;
  p_output1[30]=t163*t176 - 1.*t158*t180;
  p_output1[31]=t189;
  p_output1[32]=-1.*t158*t194 + t163*t19*t63;
  p_output1[33]=t158*t5*t63;
  p_output1[34]=t200;
  p_output1[35]=t200;
  p_output1[36]=-1.*t158*t186 - 1.*t163*t72;
  p_output1[37]=-1.*t158*t207;
  p_output1[38]=t211;
  p_output1[39]=t211;
  p_output1[40]=t215;
  p_output1[41]=t163*t218 - 1.*t158*t222;
  p_output1[42]=-1.*t106*t163 - 1.*t158*t227;
  p_output1[43]=-1.*t158*t234;
  p_output1[44]=t238;
  p_output1[45]=t238;
  p_output1[46]=t163*t243 - 1.*t158*t247;
  p_output1[47]=t255;
  p_output1[48]=t133*t163*t19 - 1.*t158*t259;
  p_output1[49]=t133*t158*t5;
  p_output1[50]=t265;
  p_output1[51]=t265;
  p_output1[52]=-1.*t142*t163 - 1.*t158*t252;
  p_output1[53]=-1.*t158*t271;
  p_output1[54]=t275;
  p_output1[55]=t275;
  p_output1[56]=t278;
  p_output1[57]=t163*t281 - 1.*t158*t285;
  p_output1[58]=t215;
  p_output1[59]=t163*t168;
  p_output1[60]=t291;
  p_output1[61]=t291;
  p_output1[62]=t158*t176 + t163*t180;
  p_output1[63]=t158*t186 + t163*t72;
  p_output1[64]=t163*t194 + t158*t19*t63;
  p_output1[65]=-1.*t163*t5*t63;
  p_output1[66]=t304;
  p_output1[67]=t304;
  p_output1[68]=t189;
  p_output1[69]=t163*t207;
  p_output1[70]=t308;
  p_output1[71]=t308;
  p_output1[72]=t158*t161 + t163*t33;
  p_output1[73]=t158*t218 + t163*t222;
  p_output1[74]=t278;
  p_output1[75]=t163*t234;
  p_output1[76]=t318;
  p_output1[77]=t318;
  p_output1[78]=t158*t243 + t163*t247;
  p_output1[79]=t142*t163 + t158*t252;
  p_output1[80]=t133*t158*t19 + t163*t259;
  p_output1[81]=-1.*t133*t163*t5;
  p_output1[82]=t331;
  p_output1[83]=t331;
  p_output1[84]=t255;
  p_output1[85]=t163*t271;
  p_output1[86]=t335;
  p_output1[87]=t335;
  p_output1[88]=t106*t163 + t158*t227;
  p_output1[89]=t158*t281 + t163*t285;
  p_output1[90]=-1.*t19*t400*t63 + t60*(t19*t372*t63 + t19*t376*t63) + t389*t72 + t5*t63*(t207*t387 + t387*t60 + t372*t72 + t376*t72);
  p_output1[91]=t403 + t425 + t60*(t411 + t412 + t413 + t414 - 1.*t404*t407*t63 - 1.*t407*t409*t63) + t5*t63*(t417 + t418 + t421 + t422 + t407*t5*t60 - 1.*t19*t407*t72);
  p_output1[92]=t403 + t425 + t60*(t411 + t413 + t414 + t439 - 1.*t404*t433*t63 - 1.*t409*t433*t63) + t5*t63*(t417 + t421 + t422 + t442 + t433*t5*t60 - 1.*t19*t433*t72);
  p_output1[93]=t60*(t451 + t19*t465*t63 - 1.*t461*t5*t63) + t5*t63*(t470 + t471 + t474 + t475 + t461*t60 + t465*t72) + t389*t79;
  p_output1[94]=t60*(t485 + t19*t497*t63 - 1.*t493*t5*t63) + t389*t86 + t5*t63*(t222*t387 + t502 + t503 + t493*t60 + t497*t72 + t376*t86);
  p_output1[95]=t33*t520 + t528*t72 + (-1.*t207*t387 - 1.*t387*t60 - 1.*t372*t72 - 1.*t376*t72)*t79 + t60*(t33*t372 + t33*t376 + t168*t387 + t387*t79);
  p_output1[96]=t547 + t548 + (t531 + t532 + t535 + t536 - 1.*t407*t5*t60 + t19*t407*t72)*t79 + t60*(-1.*t19*t33*t407 + t539 + t540 + t543 + t544 + t407*t5*t79);
  p_output1[97]=t547 + t548 + (t531 + t535 + t536 + t550 - 1.*t433*t5*t60 + t19*t433*t72)*t79 + t60*(-1.*t19*t33*t433 + t539 + t543 + t544 + t555 + t433*t5*t79);
  p_output1[98]=t50*t520 + t528*t79 + (t570 + t571 + t574 + t575 - 1.*t461*t60 - 1.*t465*t72)*t79 + t60*(t180*t387 + t33*t465 + t376*t50 + t562 + t563 + t461*t79);
  p_output1[99]=t520*t60 + t60*(t397 + t398 + t399 + t33*t497 + t581 + t493*t79) + t528*t86 + t79*(-1.*t222*t387 + t586 + t587 - 1.*t493*t60 - 1.*t497*t72 - 1.*t376*t86);
  p_output1[100]=t33*t603 - 1.*t19*t611*t63 + (-1.*t19*t372*t63 - 1.*t19*t376*t63)*t79 + t5*t63*(-1.*t33*t372 - 1.*t33*t376 - 1.*t168*t387 - 1.*t387*t79);
  p_output1[101]=t614 + t631 + (t617 + t618 + t619 + t620 + t404*t407*t63 + t407*t409*t63)*t79 + t5*t63*(t19*t33*t407 + t623 + t624 + t627 + t628 - 1.*t407*t5*t79);
  p_output1[102]=t614 + t631 + (t617 + t619 + t620 + t404*t433*t63 + t409*t433*t63 + t635)*t79 + t5*t63*(t19*t33*t433 + t623 + t627 + t628 + t638 - 1.*t433*t5*t79);
  p_output1[103]=t50*t603 + (-1.*t19*t465*t63 + t461*t5*t63 + t644)*t79 + t5*t63*(-1.*t180*t387 - 1.*t33*t465 - 1.*t376*t50 + t650 + t651 - 1.*t461*t79);
  p_output1[104]=t60*t603 + (-1.*t19*t497*t63 + t493*t5*t63 + t659)*t79 + t5*t63*(-1.*t33*t497 + t517 + t518 + t519 + t665 - 1.*t493*t79);
  p_output1[105]=t130*(t133*t19*t700 + t133*t19*t704) + t133*t5*(t142*t700 + t142*t704 + t130*t715 + t271*t715) + t142*t717 - 1.*t133*t19*t728;
  p_output1[106]=t731 + t130*(-1.*t133*t404*t734 - 1.*t133*t409*t734 + t737 + t738 + t739 + t740) + t133*t5*(-1.*t142*t19*t734 + t130*t5*t734 + t743 + t744 + t747 + t748) + t751;
  p_output1[107]=t731 + t751 + t130*(t737 + t739 + t740 - 1.*t133*t404*t760 - 1.*t133*t409*t760 + t766) + t133*t5*(t743 + t747 + t748 - 1.*t142*t19*t760 + t130*t5*t760 + t769);
  p_output1[108]=t150*t717 + t130*(t782 - 1.*t133*t5*t790 + t133*t19*t794) + t133*t5*(t130*t790 + t142*t794 + t799 + t800 + t803 + t804);
  p_output1[109]=t156*t717 + t130*(t813 - 1.*t133*t5*t822 + t133*t19*t826) + t133*t5*(t156*t704 + t285*t715 + t130*t822 + t142*t826 + t831 + t832);
  p_output1[110]=t130*(t106*t700 + t106*t704 + t150*t715 + t234*t715) + t150*(-1.*t142*t700 - 1.*t142*t704 - 1.*t130*t715 - 1.*t271*t715) + t106*t849 + t142*t857;
  p_output1[111]=t150*(t142*t19*t734 - 1.*t130*t5*t734 + t860 + t861 + t864 + t865) + t130*(-1.*t106*t19*t734 + t150*t5*t734 + t868 + t869 + t872 + t873) + t876 + t877;
  p_output1[112]=t876 + t877 + t150*(t142*t19*t760 - 1.*t130*t5*t760 + t860 + t864 + t865 + t879) + t130*(-1.*t106*t19*t760 + t150*t5*t760 + t868 + t872 + t873 + t884);
  p_output1[113]=t120*t849 + t150*t857 + t130*(t120*t704 + t247*t715 + t150*t790 + t106*t794 + t890 + t891) + t150*(-1.*t130*t790 - 1.*t142*t794 + t899 + t900 + t903 + t904);
  p_output1[114]=t130*t849 + t156*t857 + t130*(t725 + t726 + t727 + t150*t822 + t106*t826 + t910) + t150*(-1.*t156*t704 - 1.*t285*t715 - 1.*t130*t822 - 1.*t142*t826 + t916 + t917);
  p_output1[115]=t150*(-1.*t133*t19*t700 - 1.*t133*t19*t704) + t133*t5*(-1.*t106*t700 - 1.*t106*t704 - 1.*t150*t715 - 1.*t234*t715) + t106*t932 - 1.*t133*t19*t940;
  p_output1[116]=t943 + t150*(t133*t404*t734 + t133*t409*t734 + t946 + t947 + t948 + t949) + t133*t5*(t106*t19*t734 - 1.*t150*t5*t734 + t952 + t953 + t956 + t957) + t960;
  p_output1[117]=t943 + t960 + t150*(t133*t404*t760 + t133*t409*t760 + t946 + t948 + t949 + t964) + t133*t5*(t106*t19*t760 - 1.*t150*t5*t760 + t952 + t956 + t957 + t967);
  p_output1[118]=t120*t932 + t150*(t133*t5*t790 - 1.*t133*t19*t794 + t973) + t133*t5*(-1.*t120*t704 - 1.*t247*t715 - 1.*t150*t790 - 1.*t106*t794 + t979 + t980);
  p_output1[119]=t130*t932 + t150*(t133*t5*t822 - 1.*t133*t19*t826 + t988) + t133*t5*(-1.*t150*t822 - 1.*t106*t826 + t846 + t847 + t848 + t994);
  p_output1[120]=t1002 + t1014 + t194*(t1008 + t417 + t418 + t407*t57) + t186*(t1004 + t411 + t412 - 1.*t407*t63);
  p_output1[121]=t1002 + t1014 + t194*(t1008 + t417 + t442 + t433*t57) + t186*(t1004 + t411 + t439 - 1.*t433*t63);
  p_output1[122]=t1001*t161 + t194*(t1027 + t1030 + t25*t455 + t470 + t471 + t459*t57) + t186*(t451 - 1.*t459*t63);
  p_output1[123]=t1001*t218 + t186*(t485 - 1.*t491*t63) + t194*(t25*t487 + t502 + t503 + t350*t54 + t491*t57 + t370*t84);
  p_output1[124]=t1052 + t1058 + t186*(t1054 + t31*t407 + t539 + t540) + t161*(t1046 + t531 + t532 - 1.*t407*t57);
  p_output1[125]=t1052 + t1058 + t186*(t1054 + t31*t433 + t539 + t555) + t161*(t1046 + t531 + t550 - 1.*t433*t57);
  p_output1[126]=t1057*t161 + t1051*t176 + t186*(t1068 + t1069 + t31*t459 + t370*t47 + t562 + t563) + t161*(t1074 + t1075 + t1077 - 1.*t459*t57 + t570 + t571);
  p_output1[127]=t1051*t186 + t1057*t218 + t186*(t1011 + t1012 + t1083 + t397 + t31*t491 + t581) + t161*(t1087 + t1088 - 1.*t491*t57 + t586 + t587 - 1.*t370*t84);
  p_output1[128]=t1097 + t1107 + t194*(t1103 - 1.*t31*t407 + t623 + t624) + t161*(t1099 + t617 + t618 + t407*t63);
  p_output1[129]=t1097 + t1107 + t161*(t1099 + t617 + t433*t63 + t635) + t194*(t1103 - 1.*t31*t433 + t623 + t638);
  p_output1[130]=t1096*t176 + t161*(t459*t63 + t644) + t194*(-1.*t350*t42 - 1.*t17*t455 - 1.*t31*t459 - 1.*t370*t47 + t650 + t651);
  p_output1[131]=t1096*t186 + t161*(t491*t63 + t659) + t194*(t1049 + t1050 - 1.*t17*t487 - 1.*t31*t491 + t517 + t665);
  p_output1[132]=t1138 + t1150 + t252*(t1140 - 1.*t133*t734 + t737 + t738) + t259*(t1144 + t127*t734 + t743 + t744);
  p_output1[133]=t1138 + t1150 + t252*(t1140 + t737 - 1.*t133*t760 + t766) + t259*(t1144 + t743 + t127*t760 + t769);
  p_output1[134]=t1137*t227 + t252*(t782 - 1.*t133*t788) + t259*(t1163 + t1166 + t123*t784 + t127*t788 + t799 + t800);
  p_output1[135]=t1137*t281 + t252*(t813 - 1.*t133*t820) + t259*(t115*t679 + t154*t698 + t123*t816 + t127*t820 + t831 + t832);
  p_output1[136]=t1188 + t1194 + t227*(t1182 - 1.*t127*t734 + t860 + t861) + t252*(t1190 + t103*t734 + t868 + t869);
  p_output1[137]=t1188 + t1194 + t227*(t1182 - 1.*t127*t760 + t860 + t879) + t252*(t1190 + t103*t760 + t868 + t884);
  p_output1[138]=t1193*t227 + t1187*t243 + t252*(t1203 + t1204 + t118*t698 + t103*t788 + t890 + t891) + t227*(t1210 + t1211 + t1213 - 1.*t127*t788 + t899 + t900);
  p_output1[139]=t1187*t252 + t1193*t281 + t252*(t1147 + t1148 + t1219 + t725 + t103*t820 + t910) + t227*(t1224 + t1225 - 1.*t154*t698 - 1.*t127*t820 + t916 + t917);
  p_output1[140]=t1233 + t1243 + t227*(t1235 + t133*t734 + t946 + t947) + t259*(t1239 - 1.*t103*t734 + t952 + t953);
  p_output1[141]=t1233 + t1243 + t227*(t1235 + t133*t760 + t946 + t964) + t259*(t1239 - 1.*t103*t760 + t952 + t967);
  p_output1[142]=t1232*t243 + t227*(t133*t788 + t973) + t259*(-1.*t118*t698 - 1.*t103*t788 - 1.*t784*t93 + t979 + t980 - 1.*t679*t99);
  p_output1[143]=t1232*t252 + t227*(t133*t820 + t988) + t259*(t1185 + t1186 - 1.*t103*t820 + t846 - 1.*t816*t93 + t994);
  p_output1[144]=t25*(t21*t362 + t28*t368 + t28*t429 - 1.*t21*t431);
  p_output1[145]=t1280*t17;
  p_output1[146]=t1280*t54;
  p_output1[147]=t25*(-1.*t25*t28*t362 + t21*t25*t368 + t21*t25*t429 + t25*t28*t431) + t17*(t28*t362*t54 - 1.*t21*t368*t54 - 1.*t21*t429*t54 - 1.*t28*t431*t54);
  p_output1[148]=t1316*t17 + t25*(t1068 + t1069 + t1300*t25*t350 + t1302*t25*t350 + t17*t21*t362 + t17*t28*t368) + t1298*t42 + t17*(t1074 + t1075 - 1.*t21*t25*t362 - 1.*t25*t28*t368 - 1.*t1300*t350*t54 - 1.*t1302*t350*t54);
  p_output1[149]=t1298*t25 + t1316*t54 + t25*(t1011 + t1083 + t1300*t25*t481 + t1302*t25*t481 + t21*t362*t54 + t28*t368*t54) + t17*(t1087 + t1088 - 1.*t21*t362*t42 - 1.*t28*t368*t42 - 1.*t1300*t481*t54 - 1.*t1302*t481*t54);
  p_output1[150]=t17*(-1.*t21*t362 - 1.*t28*t368 - 1.*t28*t429 + t21*t431);
  p_output1[151]=t1342*t42;
  p_output1[152]=t1342*t25;
  p_output1[153]=t123*(-1.*t101*t696 - 1.*t101*t755 - 1.*t691*t96 + t758*t96);
  p_output1[154]=t1353*t93;
  p_output1[155]=t115*t1353;
  p_output1[156]=t93*(t101*t691*t93 - 1.*t101*t758*t93 - 1.*t696*t93*t96 - 1.*t755*t93*t96) + t123*(-1.*t101*t691*t99 + t101*t758*t99 + t696*t96*t99 + t755*t96*t99);
  p_output1[157]=t1389*t93 + t1379*t99 + t123*(t1203 + t1204 + t101*t115*t696 + t115*t691*t96 + t1369*t778*t99 + t1371*t778*t99) + t93*(t1210 + t1211 - 1.*t1369*t778*t93 - 1.*t1371*t778*t93 - 1.*t101*t696*t99 - 1.*t691*t96*t99);
  p_output1[158]=t123*t1379 + t115*t1389 + t93*(t1224 + t1225 - 1.*t101*t123*t696 - 1.*t1369*t809*t93 - 1.*t1371*t809*t93 - 1.*t123*t691*t96) + t123*(t1147 + t1219 + t101*t696*t93 + t691*t93*t96 + t1369*t809*t99 + t1371*t809*t99);
  p_output1[159]=t93*(t101*t696 + t101*t755 + t691*t96 - 1.*t758*t96);
  p_output1[160]=t1415*t99;
  p_output1[161]=t123*t1415;
  p_output1[162]=t1425*t17 + t25*(t1011 + t1068 + t1069 + t17*t360) + t17*(t1074 + t1075 + t1087 - 1.*t25*t360) + t1419*t42;
  p_output1[163]=t1419*t25 + t1425*t54 + t25*(t1011 + t1083 + t25*t481 + t360*t54) + t17*(t1087 + t1088 - 1.*t360*t42 - 1.*t481*t54);
  p_output1[164]=t1444;
  p_output1[165]=t1444;
  p_output1[166]=0.28121*t6 - 1.*t347*t6 - 0.305*Power(t6,2);
  p_output1[167]=-0.28121*t15 + t15*t347 + 0.305*t15*t6;
  p_output1[168]=t1456;
  p_output1[169]=t1456;
  p_output1[170]=t1458*t93 + t1465*t99 + t93*(t1210 + t1211 - 1.*t778*t93 - 1.*t689*t99) + t123*(t1203 + t1204 + t115*t689 + t778*t99);
  p_output1[171]=t115*t1458 + t123*t1465 + t93*(t1224 + t1225 - 1.*t123*t689 - 1.*t809*t93) + t123*(t1147 + t1219 + t689*t93 + t809*t99);
  p_output1[172]=0.28121*t87 + t676*t87 - 0.305*Power(t87,2);
  p_output1[173]=-0.28121*t91 - 1.*t676*t91 + 0.305*t87*t91;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
