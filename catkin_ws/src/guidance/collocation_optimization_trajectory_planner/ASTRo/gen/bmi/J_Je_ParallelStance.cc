/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:51:20 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t19;
  double t9;
  double t15;
  double t28;
  double t53;
  double t57;
  double t58;
  double t5;
  double t51;
  double t64;
  double t50;
  double t65;
  double t89;
  double t90;
  double t93;
  double t98;
  double t48;
  double t16;
  double t36;
  double t38;
  double t131;
  double t132;
  double t133;
  double t167;
  double t169;
  double t171;
  double t179;
  double t138;
  double t139;
  double t142;
  double t197;
  double t203;
  double t204;
  double t208;
  double t59;
  double t67;
  double t83;
  double t99;
  double t108;
  double t110;
  double t248;
  double t243;
  double t244;
  double t249;
  double t261;
  double t263;
  double t264;
  double t269;
  double t259;
  double t277;
  double t278;
  double t280;
  double t281;
  double t284;
  double t286;
  double t287;
  double t246;
  double t250;
  double t253;
  double t332;
  double t335;
  double t336;
  double t340;
  double t294;
  double t296;
  double t299;
  double t302;
  double t313;
  double t316;
  double t353;
  double t355;
  double t358;
  double t360;
  double t267;
  double t270;
  double t272;
  double t39;
  double t85;
  double t87;
  double t401;
  double t423;
  double t479;
  double t485;
  double t522;
  double t112;
  double t116;
  double t120;
  double t186;
  double t187;
  double t193;
  double t154;
  double t155;
  double t160;
  double t600;
  double t606;
  double t611;
  double t553;
  double t556;
  double t557;
  double t635;
  double t637;
  double t639;
  double t402;
  double t403;
  double t405;
  double t234;
  double t235;
  double t236;
  double t256;
  double t275;
  double t276;
  double t752;
  double t753;
  double t759;
  double t288;
  double t289;
  double t290;
  double t342;
  double t345;
  double t349;
  double t325;
  double t327;
  double t328;
  double t870;
  double t871;
  double t872;
  double t795;
  double t796;
  double t799;
  double t930;
  double t938;
  double t941;
  double t730;
  double t731;
  double t733;
  double t383;
  double t390;
  double t391;
  double t640;
  double t641;
  double t646;
  double t453;
  double t454;
  double t464;
  double t1027;
  double t1036;
  double t1040;
  double t525;
  double t526;
  double t537;
  double t547;
  double t548;
  double t550;
  double t572;
  double t573;
  double t581;
  double t1088;
  double t1096;
  double t1100;
  double t560;
  double t561;
  double t562;
  double t626;
  double t627;
  double t628;
  double t1109;
  double t1112;
  double t1114;
  double t648;
  double t684;
  double t690;
  double t703;
  double t711;
  double t722;
  double t942;
  double t944;
  double t945;
  double t741;
  double t742;
  double t744;
  double t1137;
  double t1138;
  double t1140;
  double t771;
  double t772;
  double t776;
  double t783;
  double t784;
  double t785;
  double t818;
  double t823;
  double t825;
  double t1186;
  double t1191;
  double t1198;
  double t800;
  double t802;
  double t804;
  double t891;
  double t898;
  double t899;
  double t1210;
  double t1212;
  double t1214;
  double t946;
  double t947;
  double t969;
  double t987;
  double t991;
  double t1002;
  double t130;
  double t144;
  double t152;
  double t1255;
  double t1256;
  double t1257;
  double t1258;
  double t1259;
  double t1283;
  double t1285;
  double t1288;
  double t1291;
  double t1300;
  double t1311;
  double t1312;
  double t1314;
  double t1249;
  double t1264;
  double t1267;
  double t1274;
  double t1286;
  double t1315;
  double t1324;
  double t1328;
  double t1349;
  double t1355;
  double t1359;
  double t1366;
  double t1379;
  double t1384;
  double t1391;
  double t1399;
  double t1400;
  double t1402;
  double t1278;
  double t1392;
  double t1393;
  double t1453;
  double t1454;
  double t1459;
  double t1415;
  double t1418;
  double t1448;
  double t1449;
  double t1450;
  double t1464;
  double t1466;
  double t1528;
  double t1533;
  double t1566;
  double t1502;
  double t1505;
  double t1509;
  double t1511;
  double t1518;
  double t1577;
  double t1527;
  double t1573;
  double t1707;
  double t1712;
  double t1717;
  double t1728;
  double t1731;
  double t1742;
  double t1746;
  double t1582;
  double t1592;
  double t1606;
  double t1770;
  double t1780;
  double t1781;
  double t1632;
  double t1642;
  double t1674;
  double t1893;
  double t1895;
  double t1900;
  double t1926;
  double t1928;
  double t1930;
  double t1940;
  double t209;
  double t215;
  double t228;
  double t1868;
  double t1870;
  double t1878;
  double t1927;
  double t1950;
  double t1963;
  double t1975;
  double t1983;
  double t2011;
  double t2140;
  double t2142;
  double t2149;
  double t2182;
  double t2191;
  double t2198;
  double t2201;
  double t2206;
  double t233;
  double t237;
  double t240;
  double t2152;
  double t2155;
  double t2165;
  double t2193;
  double t2234;
  double t2236;
  double t2240;
  double t2247;
  double t2249;
  double t2094;
  double t2116;
  double t2117;
  double t2408;
  double t2410;
  double t2419;
  double t2420;
  double t2489;
  double t2518;
  double t2532;
  double t2534;
  double t2541;
  double t2556;
  double t2560;
  double t2570;
  double t2574;
  double t111;
  double t124;
  double t127;
  double t2790;
  double t2827;
  double t2832;
  double t3026;
  double t3032;
  double t3038;
  double t3041;
  double t3098;
  double t3124;
  double t3131;
  double t3137;
  double t3138;
  double t3147;
  double t3170;
  double t3197;
  double t3213;
  double t301;
  double t319;
  double t323;
  double t3491;
  double t3492;
  double t3496;
  double t3500;
  double t3506;
  double t3536;
  double t3542;
  double t3546;
  double t3550;
  double t3560;
  double t3564;
  double t3566;
  double t3571;
  double t3583;
  double t3483;
  double t3507;
  double t3514;
  double t3526;
  double t3595;
  double t3602;
  double t3614;
  double t3619;
  double t3625;
  double t3634;
  double t3643;
  double t3646;
  double t3650;
  double t3669;
  double t3671;
  double t3674;
  double t3530;
  double t3651;
  double t3660;
  double t3707;
  double t3747;
  double t3750;
  double t3686;
  double t3690;
  double t3693;
  double t3704;
  double t3705;
  double t3757;
  double t3759;
  double t3847;
  double t3859;
  double t3871;
  double t3800;
  double t3802;
  double t3805;
  double t3819;
  double t3844;
  double t3878;
  double t3943;
  double t3944;
  double t3950;
  double t3962;
  double t3972;
  double t3981;
  double t3987;
  double t3996;
  double t3886;
  double t3890;
  double t3901;
  double t4023;
  double t4025;
  double t4032;
  double t3912;
  double t3919;
  double t3928;
  double t4097;
  double t4105;
  double t4106;
  double t4109;
  double t4145;
  double t4147;
  double t4168;
  double t4194;
  double t4198;
  double t361;
  double t371;
  double t377;
  double t4111;
  double t4112;
  double t4121;
  double t4149;
  double t4199;
  double t4204;
  double t4220;
  double t4224;
  double t4235;
  double t4335;
  double t4336;
  double t4389;
  double t4392;
  double t4407;
  double t4413;
  double t4414;
  double t4421;
  double t378;
  double t393;
  double t394;
  double t4361;
  double t4365;
  double t4372;
  double t4409;
  double t4441;
  double t4448;
  double t4456;
  double t4458;
  double t4462;
  double t4268;
  double t4289;
  double t4295;
  double t4571;
  double t4578;
  double t4582;
  double t4583;
  double t4622;
  double t4634;
  double t4647;
  double t4652;
  double t4665;
  double t4694;
  double t4698;
  double t4704;
  double t4709;
  double t282;
  double t291;
  double t292;
  double t4763;
  double t4766;
  double t4770;
  double t4830;
  double t4831;
  double t4840;
  double t4842;
  double t4857;
  double t4868;
  double t4879;
  double t4888;
  double t4889;
  double t4899;
  double t4913;
  double t4914;
  double t4925;
  double t1578;
  double t1612;
  double t5241;
  double t5243;
  double t5251;
  double t1782;
  double t5269;
  double t1801;
  double t5300;
  double t5308;
  double t5312;
  double t5322;
  double t5332;
  double t1892;
  double t2088;
  double t2170;
  double t2292;
  double t2293;
  double t2519;
  double t2542;
  double t5418;
  double t5431;
  double t2600;
  double t5532;
  double t5542;
  double t5545;
  double t5547;
  double t5568;
  double t2656;
  double t5585;
  double t5618;
  double t5620;
  double t2741;
  double t2750;
  double t2789;
  double t2860;
  double t2890;
  double t2910;
  double t3134;
  double t3161;
  double t5742;
  double t5751;
  double t5952;
  double t5953;
  double t5954;
  double t3232;
  double t5959;
  double t3254;
  double t5979;
  double t5991;
  double t5994;
  double t3297;
  double t3347;
  double t3352;
  double t3387;
  double t3449;
  double t3882;
  double t3902;
  double t6204;
  double t6211;
  double t6212;
  double t4034;
  double t6214;
  double t4048;
  double t6254;
  double t6258;
  double t6259;
  double t6260;
  double t6261;
  double t4127;
  double t4265;
  double t4382;
  double t4485;
  double t4492;
  double t4640;
  double t4684;
  double t6290;
  double t6295;
  double t4713;
  double t6384;
  double t6388;
  double t6389;
  double t6391;
  double t6393;
  double t4728;
  double t6400;
  double t6422;
  double t6429;
  double t4740;
  double t4745;
  double t4762;
  double t4792;
  double t4803;
  double t4807;
  double t4880;
  double t4906;
  double t6519;
  double t6522;
  double t6562;
  double t6563;
  double t6564;
  double t4931;
  double t6566;
  double t4940;
  double t6575;
  double t6582;
  double t6587;
  double t4977;
  double t5004;
  double t5018;
  double t5149;
  double t5211;
  double t6704;
  double t6709;
  double t6713;
  double t5701;
  double t5702;
  double t6834;
  double t6839;
  double t5745;
  double t6807;
  double t6809;
  double t6816;
  double t5835;
  double t5845;
  double t5846;
  double t6927;
  double t6939;
  double t6947;
  double t7276;
  double t7281;
  double t7284;
  double t7346;
  double t7351;
  double t7353;
  double t6464;
  double t6470;
  double t7496;
  double t7505;
  double t6520;
  double t7524;
  double t7530;
  double t7532;
  double t6535;
  double t7578;
  double t7585;
  double t7587;
  double t6542;
  double t6543;
  double t7712;
  double t7715;
  double t7717;
  double t7723;
  double t7724;
  double t7744;
  double t7746;
  double t7810;
  double t7811;
  double t7813;
  double t7852;
  double t7866;
  double t7869;
  double t7872;
  double t7874;
  double t7892;
  double t7894;
  t19 = Cos(var1[13]);
  t9 = Cos(var1[14]);
  t15 = Sin(var1[13]);
  t28 = Sin(var1[14]);
  t53 = t19*t9;
  t57 = t15*t28;
  t58 = t53 + t57;
  t5 = Cos(var1[4]);
  t51 = Cos(var1[5]);
  t64 = Sin(var1[12]);
  t50 = Cos(var1[12]);
  t65 = Sin(var1[5]);
  t89 = -1.*t51*t64*t58;
  t90 = -1.*t50*t58*t65;
  t93 = t89 + t90;
  t98 = t5*t93;
  t48 = Sin(var1[4]);
  t16 = -1.*t9*t15;
  t36 = t19*t28;
  t38 = t16 + t36;
  t131 = t9*t15;
  t132 = -1.*t19*t28;
  t133 = t131 + t132;
  t167 = -1.*t50*t51;
  t169 = t64*t65;
  t171 = t167 + t169;
  t179 = t5*t171;
  t138 = t50*t51*t133;
  t139 = -1.*t64*t133*t65;
  t142 = t138 + t139;
  t197 = -1.*t51*t64*t133;
  t203 = -1.*t50*t133*t65;
  t204 = t197 + t203;
  t208 = t5*t204;
  t59 = t50*t51*t58;
  t67 = -1.*t64*t58*t65;
  t83 = t59 + t67;
  t99 = -1.*t19*t9;
  t108 = -1.*t15*t28;
  t110 = t99 + t108;
  t248 = Cos(var1[16]);
  t243 = Cos(var1[17]);
  t244 = Sin(var1[16]);
  t249 = Sin(var1[17]);
  t261 = -1.*t248*t243;
  t263 = -1.*t244*t249;
  t264 = t261 + t263;
  t269 = Sin(var1[15]);
  t259 = Cos(var1[15]);
  t277 = -1.*t51*t269*t264;
  t278 = -1.*t259*t264*t65;
  t280 = t277 + t278;
  t281 = t5*t280;
  t284 = t243*t244;
  t286 = -1.*t248*t249;
  t287 = t284 + t286;
  t246 = -1.*t243*t244;
  t250 = t248*t249;
  t253 = t246 + t250;
  t332 = t259*t51;
  t335 = -1.*t269*t65;
  t336 = t332 + t335;
  t340 = t5*t336;
  t294 = t248*t243;
  t296 = t244*t249;
  t299 = t294 + t296;
  t302 = t259*t51*t253;
  t313 = -1.*t269*t253*t65;
  t316 = t302 + t313;
  t353 = -1.*t51*t269*t253;
  t355 = -1.*t259*t253*t65;
  t358 = t353 + t355;
  t360 = t5*t358;
  t267 = t259*t51*t264;
  t270 = -1.*t269*t264*t65;
  t272 = t267 + t270;
  t39 = t5*t38;
  t85 = -1.*t48*t83;
  t87 = t39 + t85;
  t401 = Sin(var1[3]);
  t423 = Cos(var1[3]);
  t479 = t401*t48*t93;
  t485 = t423*t83;
  t522 = t479 + t485;
  t112 = t50*t51*t38;
  t116 = -1.*t64*t38*t65;
  t120 = t112 + t116;
  t186 = t5*t58;
  t187 = -1.*t48*t142;
  t193 = t186 + t187;
  t154 = -1.*t51*t64;
  t155 = -1.*t50*t65;
  t160 = t154 + t155;
  t600 = t423*t160;
  t606 = t401*t48*t171;
  t611 = t600 + t606;
  t553 = t51*t64*t133;
  t556 = t50*t133*t65;
  t557 = t553 + t556;
  t635 = t401*t48*t204;
  t637 = t423*t142;
  t639 = t635 + t637;
  t402 = t51*t64*t58;
  t403 = t50*t58*t65;
  t405 = t402 + t403;
  t234 = t50*t51*t110;
  t235 = -1.*t64*t110*t65;
  t236 = t234 + t235;
  t256 = t5*t253;
  t275 = -1.*t48*t272;
  t276 = t256 + t275;
  t752 = t401*t48*t280;
  t753 = t423*t272;
  t759 = t752 + t753;
  t288 = t259*t51*t287;
  t289 = -1.*t269*t287*t65;
  t290 = t288 + t289;
  t342 = t5*t299;
  t345 = -1.*t48*t316;
  t349 = t342 + t345;
  t325 = t51*t269;
  t327 = t259*t65;
  t328 = t325 + t327;
  t870 = t423*t328;
  t871 = t401*t48*t336;
  t872 = t870 + t871;
  t795 = t51*t269*t253;
  t796 = t259*t253*t65;
  t799 = t795 + t796;
  t930 = t401*t48*t358;
  t938 = t423*t316;
  t941 = t930 + t938;
  t730 = t51*t269*t264;
  t731 = t259*t264*t65;
  t733 = t730 + t731;
  t383 = t259*t51*t299;
  t390 = -1.*t269*t299*t65;
  t391 = t383 + t390;
  t640 = t423*t405;
  t641 = -1.*t401*t87;
  t646 = t640 + t641;
  t453 = -1.*t38*t48;
  t454 = -1.*t5*t83;
  t464 = t453 + t454;
  t1027 = -1.*t423*t48*t93;
  t1036 = t401*t83;
  t1040 = t1027 + t1036;
  t525 = t51*t64*t38;
  t526 = t50*t38*t65;
  t537 = t525 + t526;
  t547 = t5*t110;
  t548 = -1.*t48*t120;
  t550 = t547 + t548;
  t572 = t50*t51;
  t573 = -1.*t64*t65;
  t581 = t572 + t573;
  t1088 = t401*t160;
  t1096 = -1.*t423*t48*t171;
  t1100 = t1088 + t1096;
  t560 = t423*t557;
  t561 = -1.*t401*t193;
  t562 = t560 + t561;
  t626 = -1.*t58*t48;
  t627 = -1.*t5*t142;
  t628 = t626 + t627;
  t1109 = -1.*t423*t48*t204;
  t1112 = t401*t142;
  t1114 = t1109 + t1112;
  t648 = t51*t64*t110;
  t684 = t50*t110*t65;
  t690 = t648 + t684;
  t703 = t5*t133;
  t711 = -1.*t48*t236;
  t722 = t703 + t711;
  t942 = t423*t733;
  t944 = -1.*t401*t276;
  t945 = t942 + t944;
  t741 = -1.*t253*t48;
  t742 = -1.*t5*t272;
  t744 = t741 + t742;
  t1137 = -1.*t423*t48*t280;
  t1138 = t401*t272;
  t1140 = t1137 + t1138;
  t771 = t51*t269*t287;
  t772 = t259*t287*t65;
  t776 = t771 + t772;
  t783 = t5*t264;
  t784 = -1.*t48*t290;
  t785 = t783 + t784;
  t818 = -1.*t259*t51;
  t823 = t269*t65;
  t825 = t818 + t823;
  t1186 = t401*t328;
  t1191 = -1.*t423*t48*t336;
  t1198 = t1186 + t1191;
  t800 = t423*t799;
  t802 = -1.*t401*t349;
  t804 = t800 + t802;
  t891 = -1.*t299*t48;
  t898 = -1.*t5*t316;
  t899 = t891 + t898;
  t1210 = -1.*t423*t48*t358;
  t1212 = t401*t316;
  t1214 = t1210 + t1212;
  t946 = t51*t269*t299;
  t947 = t259*t299*t65;
  t969 = t946 + t947;
  t987 = t5*t287;
  t991 = -1.*t48*t391;
  t1002 = t987 + t991;
  t130 = t58*t48;
  t144 = t5*t142;
  t152 = t130 + t144;
  t1255 = -1.*t9;
  t1256 = 1. + t1255;
  t1257 = 0.50321*t1256;
  t1258 = 0.19821*t9;
  t1259 = t1257 + t1258;
  t1283 = -1.*t50;
  t1285 = 1. + t1283;
  t1288 = -1.*t19;
  t1291 = 1. + t1288;
  t1300 = 0.28121*t1291;
  t1311 = t19*t1259;
  t1312 = -0.305*t15*t28;
  t1314 = t1300 + t1311 + t1312;
  t1249 = 0.28121*t15;
  t1264 = -1.*t1259*t15;
  t1267 = -0.305*t19*t28;
  t1274 = t1249 + t1264 + t1267;
  t1286 = 0.15121*t1285;
  t1315 = t50*t1314;
  t1324 = t1286 + t1315;
  t1328 = t51*t1324;
  t1349 = -0.15121*t1285;
  t1355 = -0.15121*t50;
  t1359 = -0.15121*t64;
  t1366 = t64*t1314;
  t1379 = t1349 + t1355 + t1359 + t1366;
  t1384 = -1.*t1379*t65;
  t1391 = t1328 + t1384;
  t1399 = t1274*t48;
  t1400 = t5*t1391;
  t1402 = t1399 + t1400;
  t1278 = -1.*t1274*t48;
  t1392 = -1.*t5*t1391;
  t1393 = t1278 + t1392;
  t1453 = t5*t1274;
  t1454 = -1.*t48*t1391;
  t1459 = t1453 + t1454;
  t1415 = t51*t1379;
  t1418 = t1324*t65;
  t1448 = t1415 + t1418;
  t1449 = -1.*t581*t1448;
  t1450 = -1.*t5*t160*t1402;
  t1464 = t48*t160*t1459;
  t1466 = t1449 + t1450 + t1464;
  t1528 = -1.*t51*t1379;
  t1533 = -1.*t1324*t65;
  t1566 = t1528 + t1533;
  t1502 = t557*t1448;
  t1505 = t152*t1402;
  t1509 = t193*t1459;
  t1511 = t1502 + t1505 + t1509;
  t1518 = t5*t204*t1466;
  t1577 = -1.*t160*t1448;
  t1527 = Power(t5,2);
  t1573 = Power(t48,2);
  t1707 = 0.15121*t64;
  t1712 = -1.*t64*t1314;
  t1717 = t1707 + t1712;
  t1728 = t51*t1717;
  t1731 = t1355 + t1315;
  t1742 = -1.*t1731*t65;
  t1746 = t1728 + t1742;
  t1582 = -1.*t5*t171*t1402;
  t1592 = t48*t171*t1459;
  t1606 = t142*t1448;
  t1770 = t51*t1731;
  t1780 = t1717*t65;
  t1781 = t1770 + t1780;
  t1632 = t5*t204*t1402;
  t1642 = -1.*t48*t204*t1459;
  t1674 = t5*t171*t1511;
  t1893 = 0.28121*t19;
  t1895 = -1.*t19*t1259;
  t1900 = 0.305*t15*t28;
  t1926 = t1893 + t1895 + t1900;
  t1928 = t50*t51*t1274;
  t1930 = -1.*t64*t1274*t65;
  t1940 = t1928 + t1930;
  t209 = t38*t48;
  t215 = t5*t83;
  t228 = t209 + t215;
  t1868 = t51*t64*t1274;
  t1870 = t50*t1274*t65;
  t1878 = t1868 + t1870;
  t1927 = t1926*t48;
  t1950 = t5*t1940;
  t1963 = t1927 + t1950;
  t1975 = t5*t1926;
  t1983 = -1.*t48*t1940;
  t2011 = t1975 + t1983;
  t2140 = -0.305*t9*t15;
  t2142 = 0.305*t19*t28;
  t2149 = t2140 + t2142;
  t2182 = -0.305*t19*t9;
  t2191 = t2182 + t1312;
  t2198 = t50*t51*t2149;
  t2201 = -1.*t64*t2149*t65;
  t2206 = t2198 + t2201;
  t233 = t133*t48;
  t237 = t5*t236;
  t240 = t233 + t237;
  t2152 = t51*t64*t2149;
  t2155 = t50*t2149*t65;
  t2165 = t2152 + t2155;
  t2193 = t2191*t48;
  t2234 = t5*t2206;
  t2236 = t2193 + t2234;
  t2240 = t5*t2191;
  t2247 = -1.*t48*t2206;
  t2249 = t2240 + t2247;
  t2094 = t405*t1448;
  t2116 = t228*t1402;
  t2117 = t87*t1459;
  t2408 = -1.*t557*t1448;
  t2410 = -1.*t152*t1402;
  t2419 = -1.*t193*t1459;
  t2420 = t2408 + t2410 + t2419;
  t2489 = t2094 + t2116 + t2117;
  t2518 = -1.*t142*t1448;
  t2532 = -1.*t5*t204*t1402;
  t2534 = t48*t204*t1459;
  t2541 = t83*t1448;
  t2556 = t5*t93*t1402;
  t2560 = -1.*t48*t93*t1459;
  t2570 = t5*t93*t2420;
  t2574 = t5*t204*t2489;
  t111 = t110*t48;
  t124 = t5*t120;
  t127 = t111 + t124;
  t2790 = -1.*t405*t1448;
  t2827 = -1.*t228*t1402;
  t2832 = -1.*t87*t1459;
  t3026 = t581*t1448;
  t3032 = t5*t160*t1402;
  t3038 = -1.*t48*t160*t1459;
  t3041 = t3026 + t3032 + t3038;
  t3098 = t2790 + t2827 + t2832;
  t3124 = t5*t93*t3041;
  t3131 = t160*t1448;
  t3137 = t5*t171*t1402;
  t3138 = -1.*t48*t171*t1459;
  t3147 = -1.*t83*t1448;
  t3170 = -1.*t5*t93*t1402;
  t3197 = t48*t93*t1459;
  t3213 = t5*t171*t3098;
  t301 = t299*t48;
  t319 = t5*t316;
  t323 = t301 + t319;
  t3491 = -1.*t243;
  t3492 = 1. + t3491;
  t3496 = -0.50321*t3492;
  t3500 = -0.19821*t243;
  t3506 = t3496 + t3500;
  t3536 = -1.*t259;
  t3542 = 1. + t3536;
  t3546 = -0.15121*t3542;
  t3550 = -1.*t248;
  t3560 = 1. + t3550;
  t3564 = -0.28121*t3560;
  t3566 = t248*t3506;
  t3571 = 0.305*t244*t249;
  t3583 = t3564 + t3566 + t3571;
  t3483 = 0.28121*t244;
  t3507 = t3506*t244;
  t3514 = -0.305*t248*t249;
  t3526 = t3483 + t3507 + t3514;
  t3595 = t259*t3583;
  t3602 = t3546 + t3595;
  t3614 = t51*t3602;
  t3619 = -0.15121*t259;
  t3625 = 0.15121*t269;
  t3634 = t269*t3583;
  t3643 = t3546 + t3619 + t3625 + t3634;
  t3646 = -1.*t3643*t65;
  t3650 = t3614 + t3646;
  t3669 = t3526*t48;
  t3671 = t5*t3650;
  t3674 = t3669 + t3671;
  t3530 = -1.*t3526*t48;
  t3651 = -1.*t5*t3650;
  t3660 = t3530 + t3651;
  t3707 = t5*t3526;
  t3747 = -1.*t48*t3650;
  t3750 = t3707 + t3747;
  t3686 = t51*t3643;
  t3690 = t3602*t65;
  t3693 = t3686 + t3690;
  t3704 = -1.*t825*t3693;
  t3705 = -1.*t5*t328*t3674;
  t3757 = t48*t328*t3750;
  t3759 = t3704 + t3705 + t3757;
  t3847 = -1.*t51*t3643;
  t3859 = -1.*t3602*t65;
  t3871 = t3847 + t3859;
  t3800 = t799*t3693;
  t3802 = t323*t3674;
  t3805 = t349*t3750;
  t3819 = t3800 + t3802 + t3805;
  t3844 = t5*t358*t3759;
  t3878 = -1.*t328*t3693;
  t3943 = -0.15121*t269;
  t3944 = -1.*t269*t3583;
  t3950 = t3943 + t3944;
  t3962 = t51*t3950;
  t3972 = 0.15121*t259;
  t3981 = t3972 + t3595;
  t3987 = -1.*t3981*t65;
  t3996 = t3962 + t3987;
  t3886 = -1.*t5*t336*t3674;
  t3890 = t48*t336*t3750;
  t3901 = t316*t3693;
  t4023 = t51*t3981;
  t4025 = t3950*t65;
  t4032 = t4023 + t4025;
  t3912 = t5*t358*t3674;
  t3919 = -1.*t48*t358*t3750;
  t3928 = t5*t336*t3819;
  t4097 = -0.28121*t244;
  t4105 = -1.*t3506*t244;
  t4106 = 0.305*t248*t249;
  t4109 = t4097 + t4105 + t4106;
  t4145 = 0.28121*t248;
  t4147 = t4145 + t3566 + t3571;
  t4168 = t259*t51*t4109;
  t4194 = -1.*t269*t4109*t65;
  t4198 = t4168 + t4194;
  t361 = t253*t48;
  t371 = t5*t272;
  t377 = t361 + t371;
  t4111 = t51*t269*t4109;
  t4112 = t259*t4109*t65;
  t4121 = t4111 + t4112;
  t4149 = t4147*t48;
  t4199 = t5*t4198;
  t4204 = t4149 + t4199;
  t4220 = t5*t4147;
  t4224 = -1.*t48*t4198;
  t4235 = t4220 + t4224;
  t4335 = 0.305*t243*t244;
  t4336 = t4335 + t3514;
  t4389 = -0.305*t248*t243;
  t4392 = -0.305*t244*t249;
  t4407 = t4389 + t4392;
  t4413 = t259*t51*t4336;
  t4414 = -1.*t269*t4336*t65;
  t4421 = t4413 + t4414;
  t378 = t287*t48;
  t393 = t5*t391;
  t394 = t378 + t393;
  t4361 = t51*t269*t4336;
  t4365 = t259*t4336*t65;
  t4372 = t4361 + t4365;
  t4409 = t4407*t48;
  t4441 = t5*t4421;
  t4448 = t4409 + t4441;
  t4456 = t5*t4407;
  t4458 = -1.*t48*t4421;
  t4462 = t4456 + t4458;
  t4268 = t733*t3693;
  t4289 = t377*t3674;
  t4295 = t276*t3750;
  t4571 = -1.*t799*t3693;
  t4578 = -1.*t323*t3674;
  t4582 = -1.*t349*t3750;
  t4583 = t4571 + t4578 + t4582;
  t4622 = t4268 + t4289 + t4295;
  t4634 = -1.*t316*t3693;
  t4647 = -1.*t5*t358*t3674;
  t4652 = t48*t358*t3750;
  t4665 = t272*t3693;
  t4694 = t5*t280*t3674;
  t4698 = -1.*t48*t280*t3750;
  t4704 = t5*t280*t4583;
  t4709 = t5*t358*t4622;
  t282 = t264*t48;
  t291 = t5*t290;
  t292 = t282 + t291;
  t4763 = -1.*t733*t3693;
  t4766 = -1.*t377*t3674;
  t4770 = -1.*t276*t3750;
  t4830 = t825*t3693;
  t4831 = t5*t328*t3674;
  t4840 = -1.*t48*t328*t3750;
  t4842 = t4830 + t4831 + t4840;
  t4857 = t4763 + t4766 + t4770;
  t4868 = t5*t280*t4842;
  t4879 = t328*t3693;
  t4888 = t5*t336*t3674;
  t4889 = -1.*t48*t336*t3750;
  t4899 = -1.*t272*t3693;
  t4913 = -1.*t5*t280*t3674;
  t4914 = t48*t280*t3750;
  t4925 = t5*t336*t4857;
  t1578 = -1.*t581*t1391;
  t1612 = t557*t1391;
  t5241 = -1.*t160*t1391;
  t5243 = t1449 + t5241;
  t5251 = t142*t5243;
  t1782 = -1.*t581*t1781;
  t5269 = -1.*t171*t1391;
  t1801 = t557*t1781;
  t5300 = t204*t1391;
  t5308 = t1274*t58;
  t5312 = t142*t1391;
  t5322 = t5308 + t1502 + t5312;
  t5332 = t160*t5322;
  t1892 = -1.*t581*t1878;
  t2088 = t557*t1878;
  t2170 = -1.*t581*t2165;
  t2292 = t557*t2165;
  t2293 = t690*t1448;
  t2519 = -1.*t557*t1391;
  t2542 = t405*t1391;
  t5418 = t1274*t38;
  t5431 = t83*t1391;
  t2600 = -1.*t557*t1781;
  t5532 = -1.*t204*t1391;
  t5542 = -1.*t1274*t58;
  t5545 = -1.*t142*t1391;
  t5547 = t5542 + t2408 + t5545;
  t5568 = t83*t5547;
  t2656 = t405*t1781;
  t5585 = t93*t1391;
  t5618 = t5418 + t2094 + t5431;
  t5620 = t142*t5618;
  t2741 = t1878*t405;
  t2750 = t537*t1448;
  t2789 = -1.*t557*t1878;
  t2860 = t2165*t405;
  t2890 = -1.*t557*t2165;
  t2910 = -1.*t690*t1448;
  t3134 = t581*t1391;
  t3161 = -1.*t405*t1391;
  t5742 = -1.*t1274*t38;
  t5751 = -1.*t83*t1391;
  t5952 = t160*t1391;
  t5953 = t3026 + t5952;
  t5954 = t83*t5953;
  t3232 = t581*t1781;
  t5959 = t171*t1391;
  t3254 = -1.*t405*t1781;
  t5979 = -1.*t93*t1391;
  t5991 = t5742 + t2790 + t5751;
  t5994 = t160*t5991;
  t3297 = t581*t1878;
  t3347 = -1.*t1878*t405;
  t3352 = -1.*t537*t1448;
  t3387 = t581*t2165;
  t3449 = -1.*t2165*t405;
  t3882 = -1.*t825*t3650;
  t3902 = t799*t3650;
  t6204 = -1.*t328*t3650;
  t6211 = t3704 + t6204;
  t6212 = t316*t6211;
  t4034 = -1.*t825*t4032;
  t6214 = -1.*t336*t3650;
  t4048 = t799*t4032;
  t6254 = t358*t3650;
  t6258 = t3526*t299;
  t6259 = t316*t3650;
  t6260 = t6258 + t3800 + t6259;
  t6261 = t328*t6260;
  t4127 = -1.*t825*t4121;
  t4265 = t4121*t799;
  t4382 = -1.*t825*t4372;
  t4485 = t4372*t799;
  t4492 = t969*t3693;
  t4640 = -1.*t799*t3650;
  t4684 = t733*t3650;
  t6290 = t3526*t253;
  t6295 = t272*t3650;
  t4713 = -1.*t799*t4032;
  t6384 = -1.*t358*t3650;
  t6388 = -1.*t3526*t299;
  t6389 = -1.*t316*t3650;
  t6391 = t6388 + t4571 + t6389;
  t6393 = t272*t6391;
  t4728 = t733*t4032;
  t6400 = t280*t3650;
  t6422 = t6290 + t4268 + t6295;
  t6429 = t316*t6422;
  t4740 = t4121*t733;
  t4745 = t776*t3693;
  t4762 = -1.*t4121*t799;
  t4792 = t4372*t733;
  t4803 = -1.*t4372*t799;
  t4807 = -1.*t969*t3693;
  t4880 = t825*t3650;
  t4906 = -1.*t733*t3650;
  t6519 = -1.*t3526*t253;
  t6522 = -1.*t272*t3650;
  t6562 = t328*t3650;
  t6563 = t4830 + t6562;
  t6564 = t272*t6563;
  t4931 = t825*t4032;
  t6566 = t336*t3650;
  t4940 = -1.*t733*t4032;
  t6575 = -1.*t280*t3650;
  t6582 = t6519 + t4763 + t6522;
  t6587 = t328*t6582;
  t4977 = t825*t4121;
  t5004 = -1.*t4121*t733;
  t5018 = -1.*t776*t3693;
  t5149 = t825*t4372;
  t5211 = -1.*t4372*t733;
  t6704 = t64*t1324;
  t6709 = -1.*t50*t1379;
  t6713 = t6704 + t6709;
  t5701 = t1274*t110;
  t5702 = t38*t1926;
  t6834 = Power(t50,2);
  t6839 = Power(t64,2);
  t5745 = -1.*t1926*t58;
  t6807 = -1.*t50*t133*t1324;
  t6809 = -1.*t64*t133*t1379;
  t6816 = t5542 + t6807 + t6809;
  t5835 = t38*t2191;
  t5845 = -1.*t133*t1274;
  t5846 = -1.*t2191*t58;
  t6927 = t50*t58*t1324;
  t6939 = t64*t58*t1379;
  t6947 = t5418 + t6927 + t6939;
  t7276 = -1.*t64*t1324;
  t7281 = t50*t1379;
  t7284 = t7276 + t7281;
  t7346 = -1.*t269*t3602;
  t7351 = t259*t3643;
  t7353 = t7346 + t7351;
  t6464 = t3526*t264;
  t6470 = t253*t4147;
  t7496 = Power(t259,2);
  t7505 = Power(t269,2);
  t6520 = -1.*t4147*t299;
  t7524 = -1.*t259*t253*t3602;
  t7530 = -1.*t269*t253*t3643;
  t7532 = t6388 + t7524 + t7530;
  t6535 = t253*t4407;
  t7578 = t259*t264*t3602;
  t7585 = t269*t264*t3643;
  t7587 = t6290 + t7578 + t7585;
  t6542 = -1.*t287*t3526;
  t6543 = -1.*t4407*t299;
  t7712 = t269*t3602;
  t7715 = -1.*t259*t3643;
  t7717 = t7712 + t7715;
  t7723 = -1.*t133*t1314;
  t7724 = t7723 + t5542;
  t7744 = t1314*t58;
  t7746 = t5418 + t7744;
  t7810 = -0.15121*t110;
  t7811 = -0.15121*t58;
  t7813 = t7810 + t7811;
  t7852 = -0.15121*t287;
  t7866 = -0.15121*t253;
  t7869 = t7852 + t7866;
  t7872 = t264*t3583;
  t7874 = t6290 + t7872;
  t7892 = -1.*t253*t3583;
  t7894 = t7892 + t6388;
  p_output1[0]=t87;
  p_output1[1]=t98;
  p_output1[2]=t98;
  p_output1[3]=t127;
  p_output1[4]=t152;
  p_output1[5]=-1.*t160*t48;
  p_output1[6]=t179;
  p_output1[7]=t179;
  p_output1[8]=t193;
  p_output1[9]=t208;
  p_output1[10]=t208;
  p_output1[11]=t228;
  p_output1[12]=t240;
  p_output1[13]=t276;
  p_output1[14]=t281;
  p_output1[15]=t281;
  p_output1[16]=t292;
  p_output1[17]=t323;
  p_output1[18]=-1.*t328*t48;
  p_output1[19]=t340;
  p_output1[20]=t340;
  p_output1[21]=t349;
  p_output1[22]=t360;
  p_output1[23]=t360;
  p_output1[24]=t377;
  p_output1[25]=t394;
  p_output1[26]=-1.*t401*t405 - 1.*t423*t87;
  p_output1[27]=-1.*t401*t464;
  p_output1[28]=t522;
  p_output1[29]=t522;
  p_output1[30]=t423*t537 - 1.*t401*t550;
  p_output1[31]=t562;
  p_output1[32]=t160*t423*t48 - 1.*t401*t581;
  p_output1[33]=t160*t401*t5;
  p_output1[34]=t611;
  p_output1[35]=t611;
  p_output1[36]=-1.*t193*t423 - 1.*t401*t557;
  p_output1[37]=-1.*t401*t628;
  p_output1[38]=t639;
  p_output1[39]=t639;
  p_output1[40]=t646;
  p_output1[41]=t423*t690 - 1.*t401*t722;
  p_output1[42]=-1.*t276*t423 - 1.*t401*t733;
  p_output1[43]=-1.*t401*t744;
  p_output1[44]=t759;
  p_output1[45]=t759;
  p_output1[46]=t423*t776 - 1.*t401*t785;
  p_output1[47]=t804;
  p_output1[48]=t328*t423*t48 - 1.*t401*t825;
  p_output1[49]=t328*t401*t5;
  p_output1[50]=t872;
  p_output1[51]=t872;
  p_output1[52]=-1.*t349*t423 - 1.*t401*t799;
  p_output1[53]=-1.*t401*t899;
  p_output1[54]=t941;
  p_output1[55]=t941;
  p_output1[56]=t945;
  p_output1[57]=-1.*t1002*t401 + t423*t969;
  p_output1[58]=t646;
  p_output1[59]=t423*t464;
  p_output1[60]=t1040;
  p_output1[61]=t1040;
  p_output1[62]=t401*t537 + t423*t550;
  p_output1[63]=t193*t423 + t401*t557;
  p_output1[64]=t160*t401*t48 + t423*t581;
  p_output1[65]=-1.*t160*t423*t5;
  p_output1[66]=t1100;
  p_output1[67]=t1100;
  p_output1[68]=t562;
  p_output1[69]=t423*t628;
  p_output1[70]=t1114;
  p_output1[71]=t1114;
  p_output1[72]=t401*t405 + t423*t87;
  p_output1[73]=t401*t690 + t423*t722;
  p_output1[74]=t945;
  p_output1[75]=t423*t744;
  p_output1[76]=t1140;
  p_output1[77]=t1140;
  p_output1[78]=t401*t776 + t423*t785;
  p_output1[79]=t349*t423 + t401*t799;
  p_output1[80]=t328*t401*t48 + t423*t825;
  p_output1[81]=-1.*t328*t423*t5;
  p_output1[82]=t1198;
  p_output1[83]=t1198;
  p_output1[84]=t804;
  p_output1[85]=t423*t899;
  p_output1[86]=t1214;
  p_output1[87]=t1214;
  p_output1[88]=t276*t423 + t401*t733;
  p_output1[89]=t1002*t423 + t401*t969;
  p_output1[90]=t1466*t193 - 1.*t1511*t160*t48 + t152*(t1393*t160*t48 + t1402*t160*t48) + t160*t5*(t1459*t152 + t1393*t193 + t1402*t193 + t1459*t628);
  p_output1[91]=t1518 + t152*(t1577 + t1578 + t1582 + t1592 - 1.*t1527*t1566*t160 - 1.*t1566*t1573*t160) + t1674 + t160*t5*(t1606 + t1612 + t1632 + t1642 - 1.*t1566*t193*t48 + t152*t1566*t5);
  p_output1[92]=t1518 + t1674 + t152*(t1577 + t1582 + t1592 - 1.*t1527*t160*t1746 - 1.*t1573*t160*t1746 + t1782) + t160*t5*(t1606 + t1632 + t1642 + t1801 - 1.*t1746*t193*t48 + t152*t1746*t5);
  p_output1[93]=t1466*t228 + t160*(t152*t1963 + t193*t2011 + t2088 + t2094 + t2116 + t2117)*t5 + t152*(t1892 + t160*t2011*t48 - 1.*t160*t1963*t5);
  p_output1[94]=t1466*t240 + t152*(t2170 + t160*t2249*t48 - 1.*t160*t2236*t5) + t160*t5*(t152*t2236 + t193*t2249 + t2292 + t2293 + t1402*t240 + t1459*t722);
  p_output1[95]=t193*t2489 + t228*(-1.*t1459*t152 - 1.*t1393*t193 - 1.*t1402*t193 - 1.*t1459*t628) + t2420*t87 + t152*(t1459*t228 + t1459*t464 + t1393*t87 + t1402*t87);
  p_output1[96]=t2570 + t2574 + t228*(t2518 + t2519 + t2532 + t2534 + t1566*t193*t48 - 1.*t152*t1566*t5) + t152*(t2541 + t2542 + t2556 + t2560 + t1566*t228*t5 - 1.*t1566*t48*t87);
  p_output1[97]=t2570 + t2574 + t228*(t2518 + t2532 + t2534 + t2600 + t1746*t193*t48 - 1.*t152*t1746*t5) + t152*(t2541 + t2556 + t2560 + t2656 + t1746*t228*t5 - 1.*t1746*t48*t87);
  p_output1[98]=t127*t2420 + t228*t2489 + t228*(-1.*t152*t1963 - 1.*t193*t2011 + t2789 + t2790 + t2827 + t2832) + t152*(t127*t1402 + t1963*t228 + t2741 + t2750 + t1459*t550 + t2011*t87);
  p_output1[99]=t152*t2420 + t240*t2489 + t228*(-1.*t152*t2236 - 1.*t193*t2249 - 1.*t1402*t240 + t2890 + t2910 - 1.*t1459*t722) + t152*(t1502 + t1505 + t1509 + t2236*t228 + t2860 + t2249*t87);
  p_output1[100]=-1.*t160*t3098*t48 + t228*(-1.*t1393*t160*t48 - 1.*t1402*t160*t48) + t3041*t87 + t160*t5*(-1.*t1459*t228 - 1.*t1459*t464 - 1.*t1393*t87 - 1.*t1402*t87);
  p_output1[101]=t3124 + t228*(t1527*t1566*t160 + t1566*t1573*t160 + t3131 + t3134 + t3137 + t3138) + t3213 + t160*t5*(t3147 + t3161 + t3170 + t3197 - 1.*t1566*t228*t5 + t1566*t48*t87);
  p_output1[102]=t3124 + t3213 + t228*(t1527*t160*t1746 + t1573*t160*t1746 + t3131 + t3137 + t3138 + t3232) + t160*t5*(t3147 + t3170 + t3197 + t3254 - 1.*t1746*t228*t5 + t1746*t48*t87);
  p_output1[103]=t127*t3041 + t228*(t3297 - 1.*t160*t2011*t48 + t160*t1963*t5) + t160*t5*(-1.*t127*t1402 - 1.*t1963*t228 + t3347 + t3352 - 1.*t1459*t550 - 1.*t2011*t87);
  p_output1[104]=t152*t3041 + t228*(t3387 - 1.*t160*t2249*t48 + t160*t2236*t5) + t160*t5*(-1.*t2236*t228 + t2408 + t2410 + t2419 + t3449 - 1.*t2249*t87);
  p_output1[105]=t349*t3759 - 1.*t328*t3819*t48 + t323*(t328*t3660*t48 + t328*t3674*t48) + t328*t5*(t349*t3660 + t349*t3674 + t323*t3750 + t3750*t899);
  p_output1[106]=t3844 + t323*(-1.*t1527*t328*t3871 - 1.*t1573*t328*t3871 + t3878 + t3882 + t3886 + t3890) + t3928 + t328*t5*(t3901 + t3902 + t3912 + t3919 - 1.*t349*t3871*t48 + t323*t3871*t5);
  p_output1[107]=t3844 + t3928 + t323*(t3878 + t3886 + t3890 - 1.*t1527*t328*t3996 - 1.*t1573*t328*t3996 + t4034) + t328*t5*(t3901 + t3912 + t3919 + t4048 - 1.*t349*t3996*t48 + t323*t3996*t5);
  p_output1[108]=t3759*t377 + t328*(t323*t4204 + t349*t4235 + t4265 + t4268 + t4289 + t4295)*t5 + t323*(t4127 + t328*t4235*t48 - 1.*t328*t4204*t5);
  p_output1[109]=t3759*t394 + t328*(t1002*t3750 + t3674*t394 + t323*t4448 + t349*t4462 + t4485 + t4492)*t5 + t323*(t4382 + t328*t4462*t48 - 1.*t328*t4448*t5);
  p_output1[110]=t276*t4583 + t349*t4622 + t323*(t276*t3660 + t276*t3674 + t3750*t377 + t3750*t744) + t377*(-1.*t349*t3660 - 1.*t349*t3674 - 1.*t323*t3750 - 1.*t3750*t899);
  p_output1[111]=t4704 + t4709 + t377*(t4634 + t4640 + t4647 + t4652 + t349*t3871*t48 - 1.*t323*t3871*t5) + t323*(t4665 + t4684 + t4694 + t4698 - 1.*t276*t3871*t48 + t377*t3871*t5);
  p_output1[112]=t4704 + t4709 + t377*(t4634 + t4647 + t4652 + t4713 + t349*t3996*t48 - 1.*t323*t3996*t5) + t323*(t4665 + t4694 + t4698 + t4728 - 1.*t276*t3996*t48 + t377*t3996*t5);
  p_output1[113]=t292*t4583 + t377*t4622 + t377*(-1.*t323*t4204 - 1.*t349*t4235 + t4762 + t4763 + t4766 + t4770) + t323*(t292*t3674 + t377*t4204 + t276*t4235 + t4740 + t4745 + t3750*t785);
  p_output1[114]=t323*t4583 + t394*t4622 + t323*(t3800 + t3802 + t3805 + t377*t4448 + t276*t4462 + t4792) + t377*(-1.*t1002*t3750 - 1.*t3674*t394 - 1.*t323*t4448 - 1.*t349*t4462 + t4803 + t4807);
  p_output1[115]=t377*(-1.*t328*t3660*t48 - 1.*t328*t3674*t48) + t276*t4842 - 1.*t328*t48*t4857 + t328*t5*(-1.*t276*t3660 - 1.*t276*t3674 - 1.*t3750*t377 - 1.*t3750*t744);
  p_output1[116]=t4868 + t377*(t1527*t328*t3871 + t1573*t328*t3871 + t4879 + t4880 + t4888 + t4889) + t4925 + t328*t5*(t276*t3871*t48 + t4899 + t4906 + t4913 + t4914 - 1.*t377*t3871*t5);
  p_output1[117]=t4868 + t4925 + t377*(t1527*t328*t3996 + t1573*t328*t3996 + t4879 + t4888 + t4889 + t4931) + t328*t5*(t276*t3996*t48 + t4899 + t4913 + t4914 + t4940 - 1.*t377*t3996*t5);
  p_output1[118]=t292*t4842 + t377*(-1.*t328*t4235*t48 + t4977 + t328*t4204*t5) + t328*t5*(-1.*t292*t3674 - 1.*t377*t4204 - 1.*t276*t4235 + t5004 + t5018 - 1.*t3750*t785);
  p_output1[119]=t323*t4842 + t377*(-1.*t328*t4462*t48 + t328*t4448*t5 + t5149) + t328*t5*(-1.*t377*t4448 - 1.*t276*t4462 + t4571 + t4578 + t4582 + t5211);
  p_output1[120]=t5251 + t5332 + (t1577 + t1578 - 1.*t1566*t160 + t5269)*t557 + (t142*t1566 + t1606 + t1612 + t5300)*t581;
  p_output1[121]=t5251 + t5332 + (t1577 - 1.*t160*t1746 + t1782 + t5269)*t557 + (t1606 + t142*t1746 + t1801 + t5300)*t581;
  p_output1[122]=t405*t5243 + (t1892 - 1.*t160*t1940)*t557 + (t142*t1940 + t2088 + t2094 + t5418 + t5431 + t1926*t58)*t581;
  p_output1[123]=(t2170 - 1.*t160*t2206)*t557 + (t1274*t133 + t142*t2206 + t2292 + t2293 + t1391*t236 + t2191*t58)*t581 + t5243*t690;
  p_output1[124]=t405*(-1.*t142*t1566 + t2518 + t2519 + t5532) + t5568 + t5620 + t557*(t2541 + t2542 + t5585 + t1566*t83);
  p_output1[125]=t405*(-1.*t142*t1746 + t2518 + t2600 + t5532) + t5568 + t5620 + t557*(t2541 + t2656 + t5585 + t1746*t83);
  p_output1[126]=t537*t5547 + t405*t5618 + t405*(-1.*t142*t1940 + t2789 + t2790 + t5742 + t5745 + t5751) + t557*(t120*t1391 + t2741 + t2750 + t5701 + t5702 + t1940*t83);
  p_output1[127]=t5547*t557 + t405*(-1.*t142*t2206 - 1.*t1391*t236 + t2890 + t2910 + t5845 + t5846) + t5618*t690 + t557*(t1502 + t2860 + t5308 + t5312 + t5835 + t2206*t83);
  p_output1[128]=t5954 + t405*(t1566*t160 + t3131 + t3134 + t5959) + t5994 + t581*(t3147 + t3161 + t5979 - 1.*t1566*t83);
  p_output1[129]=t5954 + t405*(t160*t1746 + t3131 + t3232 + t5959) + t5994 + t581*(t3147 + t3254 + t5979 - 1.*t1746*t83);
  p_output1[130]=(t160*t1940 + t3297)*t405 + t537*t5953 + t581*(-1.*t110*t1274 - 1.*t120*t1391 + t3347 + t3352 - 1.*t1926*t38 - 1.*t1940*t83);
  p_output1[131]=(t160*t2206 + t3387)*t405 + t557*t5953 + t581*(t2408 + t3449 - 1.*t2191*t38 + t5542 + t5545 - 1.*t2206*t83);
  p_output1[132]=t6212 + t6261 + (-1.*t328*t3871 + t3878 + t3882 + t6214)*t799 + (t316*t3871 + t3901 + t3902 + t6254)*t825;
  p_output1[133]=t6212 + t6261 + (t3878 - 1.*t328*t3996 + t4034 + t6214)*t799 + (t3901 + t316*t3996 + t4048 + t6254)*t825;
  p_output1[134]=t6211*t733 + (t4127 - 1.*t328*t4198)*t799 + (t299*t4147 + t316*t4198 + t4265 + t4268 + t6290 + t6295)*t825;
  p_output1[135]=(t4382 - 1.*t328*t4421)*t799 + (t287*t3526 + t3650*t391 + t299*t4407 + t316*t4421 + t4485 + t4492)*t825 + t6211*t969;
  p_output1[136]=t6393 + t6429 + (-1.*t316*t3871 + t4634 + t4640 + t6384)*t733 + (t272*t3871 + t4665 + t4684 + t6400)*t799;
  p_output1[137]=t6393 + t6429 + (-1.*t316*t3996 + t4634 + t4713 + t6384)*t733 + (t272*t3996 + t4665 + t4728 + t6400)*t799;
  p_output1[138]=t6422*t733 + (-1.*t316*t4198 + t4762 + t4763 + t6519 + t6520 + t6522)*t733 + t6391*t776 + (t290*t3650 + t272*t4198 + t4740 + t4745 + t6464 + t6470)*t799;
  p_output1[139]=(-1.*t3650*t391 - 1.*t316*t4421 + t4803 + t4807 + t6542 + t6543)*t733 + t6391*t799 + (t3800 + t272*t4421 + t4792 + t6258 + t6259 + t6535)*t799 + t6422*t969;
  p_output1[140]=t6564 + t6587 + (t328*t3871 + t4879 + t4880 + t6566)*t733 + (-1.*t272*t3871 + t4899 + t4906 + t6575)*t825;
  p_output1[141]=t6564 + t6587 + (t328*t3996 + t4879 + t4931 + t6566)*t733 + (-1.*t272*t3996 + t4899 + t4940 + t6575)*t825;
  p_output1[142]=(t328*t4198 + t4977)*t733 + t6563*t776 + (-1.*t264*t3526 - 1.*t290*t3650 - 1.*t253*t4147 - 1.*t272*t4198 + t5004 + t5018)*t825;
  p_output1[143]=(t328*t4421 + t5149)*t733 + t6563*t799 + (-1.*t253*t4407 - 1.*t272*t4421 + t4571 + t5211 + t6388 + t6389)*t825;
  p_output1[144]=t58*(t1324*t50 - 1.*t1731*t50 + t1379*t64 + t1717*t64);
  p_output1[145]=t38*t6713;
  p_output1[146]=t133*t6713;
  p_output1[147]=t38*(-1.*t133*t1379*t50 - 1.*t133*t1717*t50 + t1324*t133*t64 - 1.*t133*t1731*t64) + t58*(t1379*t50*t58 + t1717*t50*t58 - 1.*t1324*t58*t64 + t1731*t58*t64);
  p_output1[148]=t110*t6816 + t38*(t5742 + t5745 - 1.*t1324*t50*t58 - 1.*t1379*t58*t64 - 1.*t1274*t133*t6834 - 1.*t1274*t133*t6839) + t58*(t1324*t38*t50 + t5701 + t5702 + t1379*t38*t64 + t1274*t58*t6834 + t1274*t58*t6839) + t38*t6947;
  p_output1[149]=t58*t6816 + t38*(-1.*t110*t1324*t50 + t5845 + t5846 - 1.*t110*t1379*t64 - 1.*t133*t2149*t6834 - 1.*t133*t2149*t6839) + t58*(t1324*t133*t50 + t5308 + t5835 + t133*t1379*t64 + t2149*t58*t6834 + t2149*t58*t6839) + t133*t6947;
  p_output1[150]=t38*(-1.*t1324*t50 + t1731*t50 - 1.*t1379*t64 - 1.*t1717*t64);
  p_output1[151]=t110*t7284;
  p_output1[152]=t58*t7284;
  p_output1[153]=t299*(-1.*t259*t3602 - 1.*t269*t3643 - 1.*t269*t3950 + t259*t3981);
  p_output1[154]=t253*t7353;
  p_output1[155]=t287*t7353;
  p_output1[156]=t253*(t253*t269*t3602 - 1.*t253*t259*t3643 - 1.*t253*t259*t3950 - 1.*t253*t269*t3981) + t299*(-1.*t264*t269*t3602 + t259*t264*t3643 + t259*t264*t3950 + t264*t269*t3981);
  p_output1[157]=t253*(-1.*t259*t264*t3602 - 1.*t264*t269*t3643 + t6519 + t6520 - 1.*t253*t4109*t7496 - 1.*t253*t4109*t7505) + t299*(t259*t287*t3602 + t269*t287*t3643 + t6464 + t6470 + t264*t4109*t7496 + t264*t4109*t7505) + t264*t7532 + t253*t7587;
  p_output1[158]=t253*(-1.*t259*t299*t3602 - 1.*t269*t299*t3643 + t6542 + t6543 - 1.*t253*t4336*t7496 - 1.*t253*t4336*t7505) + t299*(t253*t259*t3602 + t253*t269*t3643 + t6258 + t6535 + t264*t4336*t7496 + t264*t4336*t7505) + t299*t7532 + t287*t7587;
  p_output1[159]=t253*(t259*t3602 + t269*t3643 + t269*t3950 - 1.*t259*t3981);
  p_output1[160]=t264*t7717;
  p_output1[161]=t299*t7717;
  p_output1[162]=(t1314*t38 + t5308 + t5701 + t5702)*t58 + t38*(t5742 + t5745 - 1.*t1314*t58 + t5845) + t110*t7724 + t38*t7746;
  p_output1[163]=t58*(t1314*t133 + t5308 + t2149*t58 + t5835) + t38*(-1.*t110*t1314 - 1.*t133*t2149 + t5845 + t5846) + t58*t7724 + t133*t7746;
  p_output1[164]=t7813;
  p_output1[165]=t7813;
  p_output1[166]=0.28121*t9 - 1.*t1259*t9 - 0.305*Power(t9,2);
  p_output1[167]=-0.28121*t28 + t1259*t28 + 0.305*t28*t9;
  p_output1[168]=t7869;
  p_output1[169]=t7869;
  p_output1[170]=t299*(t287*t3583 + t264*t4109 + t6464 + t6470) + t253*(-1.*t264*t3583 - 1.*t253*t4109 + t6519 + t6520) + t253*t7874 + t264*t7894;
  p_output1[171]=t299*(t253*t3583 + t264*t4336 + t6258 + t6535) + t253*(-1.*t299*t3583 - 1.*t253*t4336 + t6542 + t6543) + t287*t7874 + t299*t7894;
  p_output1[172]=0.28121*t243 - 0.305*Power(t243,2) + t243*t3506;
  p_output1[173]=-0.28121*t249 + 0.305*t243*t249 - 1.*t249*t3506;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
