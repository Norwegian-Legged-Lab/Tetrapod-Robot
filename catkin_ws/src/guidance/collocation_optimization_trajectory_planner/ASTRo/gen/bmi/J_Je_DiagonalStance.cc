/*
 * Automatically Generated from Mathematica.
 * Sun 12 Jun 2022 17:42:40 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2591;
  double t2573;
  double t2574;
  double t2592;
  double t2623;
  double t2672;
  double t2679;
  double t1712;
  double t2621;
  double t2701;
  double t2619;
  double t2756;
  double t2778;
  double t2788;
  double t2792;
  double t2793;
  double t2616;
  double t2575;
  double t2601;
  double t2614;
  double t2835;
  double t2840;
  double t2841;
  double t2896;
  double t2934;
  double t2937;
  double t2947;
  double t2856;
  double t2857;
  double t2859;
  double t2966;
  double t2967;
  double t2968;
  double t2982;
  double t2700;
  double t2762;
  double t2763;
  double t2795;
  double t2801;
  double t2802;
  double t3617;
  double t3533;
  double t3537;
  double t3618;
  double t3632;
  double t3633;
  double t3634;
  double t3636;
  double t3631;
  double t3641;
  double t3642;
  double t3643;
  double t3644;
  double t3648;
  double t3649;
  double t3650;
  double t3613;
  double t3619;
  double t3626;
  double t3712;
  double t3713;
  double t3716;
  double t3718;
  double t3663;
  double t3665;
  double t3666;
  double t3684;
  double t3688;
  double t3693;
  double t3722;
  double t3726;
  double t3730;
  double t3731;
  double t3635;
  double t3637;
  double t3638;
  double t2615;
  double t2764;
  double t2777;
  double t3743;
  double t3753;
  double t3765;
  double t3766;
  double t3767;
  double t2804;
  double t2823;
  double t2829;
  double t2951;
  double t2953;
  double t2956;
  double t2867;
  double t2869;
  double t2871;
  double t3843;
  double t3847;
  double t3851;
  double t3816;
  double t3817;
  double t3819;
  double t3859;
  double t3860;
  double t3861;
  double t3745;
  double t3748;
  double t3749;
  double t2999;
  double t3509;
  double t3518;
  double t3630;
  double t3639;
  double t3640;
  double t3963;
  double t3964;
  double t3965;
  double t3657;
  double t3658;
  double t3660;
  double t3719;
  double t3720;
  double t3721;
  double t3697;
  double t3698;
  double t3710;
  double t4003;
  double t4005;
  double t4007;
  double t3978;
  double t3979;
  double t3980;
  double t4015;
  double t4016;
  double t4017;
  double t3948;
  double t3949;
  double t3950;
  double t3736;
  double t3737;
  double t3738;
  double t3862;
  double t3863;
  double t3864;
  double t3758;
  double t3759;
  double t3761;
  double t4031;
  double t4032;
  double t4033;
  double t3772;
  double t3774;
  double t3775;
  double t3777;
  double t3782;
  double t3783;
  double t3829;
  double t3835;
  double t3836;
  double t4044;
  double t4045;
  double t4047;
  double t3821;
  double t3826;
  double t3827;
  double t3855;
  double t3856;
  double t3857;
  double t4050;
  double t4053;
  double t4055;
  double t3874;
  double t3875;
  double t3876;
  double t3887;
  double t3940;
  double t3944;
  double t4018;
  double t4019;
  double t4020;
  double t3956;
  double t3957;
  double t3958;
  double t4073;
  double t4074;
  double t4082;
  double t3966;
  double t3967;
  double t3968;
  double t3971;
  double t3972;
  double t3973;
  double t3987;
  double t3993;
  double t3994;
  double t4118;
  double t4119;
  double t4122;
  double t3982;
  double t3983;
  double t3984;
  double t4011;
  double t4012;
  double t4013;
  double t4529;
  double t4784;
  double t5244;
  double t4021;
  double t4022;
  double t4023;
  double t4025;
  double t4026;
  double t4027;
  double t2832;
  double t2865;
  double t2866;
  double t5313;
  double t5314;
  double t5315;
  double t5319;
  double t5323;
  double t5328;
  double t5329;
  double t5331;
  double t5332;
  double t5334;
  double t5335;
  double t5337;
  double t5348;
  double t5301;
  double t5324;
  double t5325;
  double t5326;
  double t5330;
  double t5349;
  double t5412;
  double t5416;
  double t5417;
  double t5420;
  double t5421;
  double t5424;
  double t5427;
  double t5429;
  double t5430;
  double t5443;
  double t5444;
  double t5445;
  double t5327;
  double t5431;
  double t5438;
  double t5481;
  double t5482;
  double t5483;
  double t5455;
  double t5456;
  double t5476;
  double t5479;
  double t5480;
  double t5484;
  double t5485;
  double t5501;
  double t5502;
  double t5503;
  double t5493;
  double t5494;
  double t5495;
  double t5496;
  double t5499;
  double t5507;
  double t5500;
  double t5505;
  double t5673;
  double t5677;
  double t5679;
  double t5688;
  double t5690;
  double t5691;
  double t5692;
  double t5510;
  double t5511;
  double t5515;
  double t5695;
  double t5696;
  double t5697;
  double t5608;
  double t5613;
  double t5616;
  double t5715;
  double t5717;
  double t5719;
  double t5720;
  double t5726;
  double t5727;
  double t5728;
  double t2983;
  double t2988;
  double t2993;
  double t5709;
  double t5710;
  double t5711;
  double t5721;
  double t5731;
  double t5732;
  double t5738;
  double t5739;
  double t5740;
  double t5774;
  double t5775;
  double t5776;
  double t5781;
  double t5782;
  double t5784;
  double t5785;
  double t5786;
  double t2998;
  double t3519;
  double t3520;
  double t5777;
  double t5778;
  double t5779;
  double t5783;
  double t5787;
  double t5788;
  double t5790;
  double t5791;
  double t5792;
  double t5766;
  double t5769;
  double t5770;
  double t6203;
  double t6215;
  double t6237;
  double t6286;
  double t6316;
  double t6319;
  double t6324;
  double t6330;
  double t6338;
  double t6351;
  double t6352;
  double t6357;
  double t6358;
  double t2803;
  double t2830;
  double t2831;
  double t6396;
  double t6403;
  double t6404;
  double t6443;
  double t6444;
  double t6445;
  double t6447;
  double t6459;
  double t6463;
  double t6467;
  double t6470;
  double t6472;
  double t6477;
  double t6484;
  double t6485;
  double t6489;
  double t3677;
  double t3694;
  double t3695;
  double t6557;
  double t6559;
  double t6561;
  double t6563;
  double t6565;
  double t6572;
  double t6574;
  double t6577;
  double t6578;
  double t6579;
  double t6581;
  double t6582;
  double t6583;
  double t6556;
  double t6566;
  double t6567;
  double t6569;
  double t6575;
  double t6585;
  double t6587;
  double t6590;
  double t6591;
  double t6593;
  double t6594;
  double t6599;
  double t6600;
  double t6603;
  double t6604;
  double t6613;
  double t6616;
  double t6617;
  double t6570;
  double t6608;
  double t6609;
  double t6636;
  double t6640;
  double t6641;
  double t6625;
  double t6628;
  double t6629;
  double t6632;
  double t6633;
  double t6644;
  double t6645;
  double t6677;
  double t6678;
  double t6679;
  double t6662;
  double t6665;
  double t6666;
  double t6669;
  double t6674;
  double t6684;
  double t6707;
  double t6708;
  double t6709;
  double t6710;
  double t6711;
  double t6712;
  double t6714;
  double t6688;
  double t6689;
  double t6693;
  double t6717;
  double t6720;
  double t6721;
  double t6699;
  double t6700;
  double t6705;
  double t6736;
  double t6737;
  double t6738;
  double t6739;
  double t6747;
  double t6749;
  double t6753;
  double t6755;
  double t6756;
  double t3732;
  double t3733;
  double t3734;
  double t6740;
  double t6742;
  double t6744;
  double t6750;
  double t6757;
  double t6758;
  double t6760;
  double t6761;
  double t6763;
  double t6779;
  double t6781;
  double t6790;
  double t6792;
  double t6793;
  double t6798;
  double t6800;
  double t6801;
  double t3735;
  double t3739;
  double t3740;
  double t6783;
  double t6785;
  double t6786;
  double t6796;
  double t6802;
  double t6804;
  double t6808;
  double t6809;
  double t6810;
  double t6769;
  double t6773;
  double t6774;
  double t6842;
  double t6844;
  double t6845;
  double t6846;
  double t6859;
  double t6863;
  double t6869;
  double t6870;
  double t6874;
  double t6880;
  double t6881;
  double t6886;
  double t6887;
  double t3646;
  double t3661;
  double t3662;
  double t6923;
  double t6927;
  double t6929;
  double t6969;
  double t6970;
  double t6971;
  double t6973;
  double t6984;
  double t6989;
  double t6993;
  double t6997;
  double t6999;
  double t7003;
  double t7008;
  double t7009;
  double t7013;
  double t5508;
  double t5519;
  double t7073;
  double t7074;
  double t7075;
  double t5698;
  double t7078;
  double t5701;
  double t7085;
  double t7089;
  double t7090;
  double t7091;
  double t7093;
  double t5712;
  double t5764;
  double t5780;
  double t5797;
  double t5798;
  double t6321;
  double t6344;
  double t7109;
  double t7113;
  double t6362;
  double t7136;
  double t7143;
  double t7145;
  double t7146;
  double t7148;
  double t6371;
  double t7150;
  double t7153;
  double t7156;
  double t6381;
  double t6383;
  double t6395;
  double t6412;
  double t6421;
  double t6423;
  double t6469;
  double t6479;
  double t7178;
  double t7182;
  double t7206;
  double t7207;
  double t7209;
  double t6495;
  double t7211;
  double t6500;
  double t7217;
  double t7220;
  double t7221;
  double t6510;
  double t6520;
  double t6522;
  double t6537;
  double t6547;
  double t6686;
  double t6695;
  double t7259;
  double t7260;
  double t7264;
  double t6723;
  double t7266;
  double t6728;
  double t7271;
  double t7276;
  double t7277;
  double t7280;
  double t7281;
  double t6746;
  double t6768;
  double t6787;
  double t6819;
  double t6820;
  double t6865;
  double t6876;
  double t7302;
  double t7306;
  double t6890;
  double t7332;
  double t7336;
  double t7338;
  double t7339;
  double t7340;
  double t6900;
  double t7343;
  double t7349;
  double t7350;
  double t6908;
  double t6909;
  double t6922;
  double t6939;
  double t6948;
  double t6951;
  double t6996;
  double t7004;
  double t7377;
  double t7381;
  double t7413;
  double t7414;
  double t7415;
  double t7022;
  double t7419;
  double t7026;
  double t7426;
  double t7431;
  double t7435;
  double t7034;
  double t7042;
  double t7043;
  double t7055;
  double t7065;
  double t7493;
  double t7496;
  double t7497;
  double t7170;
  double t7171;
  double t7527;
  double t7529;
  double t7179;
  double t7521;
  double t7523;
  double t7524;
  double t7190;
  double t7195;
  double t7196;
  double t7555;
  double t7557;
  double t7558;
  double t7591;
  double t7592;
  double t7594;
  double t7607;
  double t7608;
  double t7610;
  double t7366;
  double t7367;
  double t7630;
  double t7633;
  double t7379;
  double t7639;
  double t7640;
  double t7641;
  double t7391;
  double t7649;
  double t7650;
  double t7652;
  double t7398;
  double t7403;
  double t7687;
  double t7688;
  double t7690;
  double t7697;
  double t7698;
  double t7699;
  double t7700;
  double t7703;
  double t7710;
  double t7713;
  double t7762;
  double t7765;
  double t7771;
  double t7773;
  double t7797;
  double t7799;
  double t7800;
  t2591 = Cos(var1[13]);
  t2573 = Cos(var1[14]);
  t2574 = Sin(var1[13]);
  t2592 = Sin(var1[14]);
  t2623 = t2591*t2573;
  t2672 = t2574*t2592;
  t2679 = t2623 + t2672;
  t1712 = Cos(var1[4]);
  t2621 = Cos(var1[5]);
  t2701 = Sin(var1[12]);
  t2619 = Cos(var1[12]);
  t2756 = Sin(var1[5]);
  t2778 = -1.*t2621*t2701*t2679;
  t2788 = -1.*t2619*t2679*t2756;
  t2792 = t2778 + t2788;
  t2793 = t1712*t2792;
  t2616 = Sin(var1[4]);
  t2575 = -1.*t2573*t2574;
  t2601 = t2591*t2592;
  t2614 = t2575 + t2601;
  t2835 = t2573*t2574;
  t2840 = -1.*t2591*t2592;
  t2841 = t2835 + t2840;
  t2896 = -1.*t2619*t2621;
  t2934 = t2701*t2756;
  t2937 = t2896 + t2934;
  t2947 = t1712*t2937;
  t2856 = t2619*t2621*t2841;
  t2857 = -1.*t2701*t2841*t2756;
  t2859 = t2856 + t2857;
  t2966 = -1.*t2621*t2701*t2841;
  t2967 = -1.*t2619*t2841*t2756;
  t2968 = t2966 + t2967;
  t2982 = t1712*t2968;
  t2700 = t2619*t2621*t2679;
  t2762 = -1.*t2701*t2679*t2756;
  t2763 = t2700 + t2762;
  t2795 = -1.*t2591*t2573;
  t2801 = -1.*t2574*t2592;
  t2802 = t2795 + t2801;
  t3617 = Cos(var1[10]);
  t3533 = Cos(var1[11]);
  t3537 = Sin(var1[10]);
  t3618 = Sin(var1[11]);
  t3632 = -1.*t3617*t3533;
  t3633 = -1.*t3537*t3618;
  t3634 = t3632 + t3633;
  t3636 = Sin(var1[9]);
  t3631 = Cos(var1[9]);
  t3641 = -1.*t2621*t3636*t3634;
  t3642 = -1.*t3631*t3634*t2756;
  t3643 = t3641 + t3642;
  t3644 = t1712*t3643;
  t3648 = t3533*t3537;
  t3649 = -1.*t3617*t3618;
  t3650 = t3648 + t3649;
  t3613 = -1.*t3533*t3537;
  t3619 = t3617*t3618;
  t3626 = t3613 + t3619;
  t3712 = t3631*t2621;
  t3713 = -1.*t3636*t2756;
  t3716 = t3712 + t3713;
  t3718 = t1712*t3716;
  t3663 = t3617*t3533;
  t3665 = t3537*t3618;
  t3666 = t3663 + t3665;
  t3684 = t3631*t2621*t3626;
  t3688 = -1.*t3636*t3626*t2756;
  t3693 = t3684 + t3688;
  t3722 = -1.*t2621*t3636*t3626;
  t3726 = -1.*t3631*t3626*t2756;
  t3730 = t3722 + t3726;
  t3731 = t1712*t3730;
  t3635 = t3631*t2621*t3634;
  t3637 = -1.*t3636*t3634*t2756;
  t3638 = t3635 + t3637;
  t2615 = t1712*t2614;
  t2764 = -1.*t2616*t2763;
  t2777 = t2615 + t2764;
  t3743 = Sin(var1[3]);
  t3753 = Cos(var1[3]);
  t3765 = t3743*t2616*t2792;
  t3766 = t3753*t2763;
  t3767 = t3765 + t3766;
  t2804 = t2619*t2621*t2614;
  t2823 = -1.*t2701*t2614*t2756;
  t2829 = t2804 + t2823;
  t2951 = t1712*t2679;
  t2953 = -1.*t2616*t2859;
  t2956 = t2951 + t2953;
  t2867 = -1.*t2621*t2701;
  t2869 = -1.*t2619*t2756;
  t2871 = t2867 + t2869;
  t3843 = t3753*t2871;
  t3847 = t3743*t2616*t2937;
  t3851 = t3843 + t3847;
  t3816 = t2621*t2701*t2841;
  t3817 = t2619*t2841*t2756;
  t3819 = t3816 + t3817;
  t3859 = t3743*t2616*t2968;
  t3860 = t3753*t2859;
  t3861 = t3859 + t3860;
  t3745 = t2621*t2701*t2679;
  t3748 = t2619*t2679*t2756;
  t3749 = t3745 + t3748;
  t2999 = t2619*t2621*t2802;
  t3509 = -1.*t2701*t2802*t2756;
  t3518 = t2999 + t3509;
  t3630 = t1712*t3626;
  t3639 = -1.*t2616*t3638;
  t3640 = t3630 + t3639;
  t3963 = t3743*t2616*t3643;
  t3964 = t3753*t3638;
  t3965 = t3963 + t3964;
  t3657 = t3631*t2621*t3650;
  t3658 = -1.*t3636*t3650*t2756;
  t3660 = t3657 + t3658;
  t3719 = t1712*t3666;
  t3720 = -1.*t2616*t3693;
  t3721 = t3719 + t3720;
  t3697 = t2621*t3636;
  t3698 = t3631*t2756;
  t3710 = t3697 + t3698;
  t4003 = t3753*t3710;
  t4005 = t3743*t2616*t3716;
  t4007 = t4003 + t4005;
  t3978 = t2621*t3636*t3626;
  t3979 = t3631*t3626*t2756;
  t3980 = t3978 + t3979;
  t4015 = t3743*t2616*t3730;
  t4016 = t3753*t3693;
  t4017 = t4015 + t4016;
  t3948 = t2621*t3636*t3634;
  t3949 = t3631*t3634*t2756;
  t3950 = t3948 + t3949;
  t3736 = t3631*t2621*t3666;
  t3737 = -1.*t3636*t3666*t2756;
  t3738 = t3736 + t3737;
  t3862 = t3753*t3749;
  t3863 = -1.*t3743*t2777;
  t3864 = t3862 + t3863;
  t3758 = -1.*t2614*t2616;
  t3759 = -1.*t1712*t2763;
  t3761 = t3758 + t3759;
  t4031 = -1.*t3753*t2616*t2792;
  t4032 = t3743*t2763;
  t4033 = t4031 + t4032;
  t3772 = t2621*t2701*t2614;
  t3774 = t2619*t2614*t2756;
  t3775 = t3772 + t3774;
  t3777 = t1712*t2802;
  t3782 = -1.*t2616*t2829;
  t3783 = t3777 + t3782;
  t3829 = t2619*t2621;
  t3835 = -1.*t2701*t2756;
  t3836 = t3829 + t3835;
  t4044 = t3743*t2871;
  t4045 = -1.*t3753*t2616*t2937;
  t4047 = t4044 + t4045;
  t3821 = t3753*t3819;
  t3826 = -1.*t3743*t2956;
  t3827 = t3821 + t3826;
  t3855 = -1.*t2679*t2616;
  t3856 = -1.*t1712*t2859;
  t3857 = t3855 + t3856;
  t4050 = -1.*t3753*t2616*t2968;
  t4053 = t3743*t2859;
  t4055 = t4050 + t4053;
  t3874 = t2621*t2701*t2802;
  t3875 = t2619*t2802*t2756;
  t3876 = t3874 + t3875;
  t3887 = t1712*t2841;
  t3940 = -1.*t2616*t3518;
  t3944 = t3887 + t3940;
  t4018 = t3753*t3950;
  t4019 = -1.*t3743*t3640;
  t4020 = t4018 + t4019;
  t3956 = -1.*t3626*t2616;
  t3957 = -1.*t1712*t3638;
  t3958 = t3956 + t3957;
  t4073 = -1.*t3753*t2616*t3643;
  t4074 = t3743*t3638;
  t4082 = t4073 + t4074;
  t3966 = t2621*t3636*t3650;
  t3967 = t3631*t3650*t2756;
  t3968 = t3966 + t3967;
  t3971 = t1712*t3634;
  t3972 = -1.*t2616*t3660;
  t3973 = t3971 + t3972;
  t3987 = -1.*t3631*t2621;
  t3993 = t3636*t2756;
  t3994 = t3987 + t3993;
  t4118 = t3743*t3710;
  t4119 = -1.*t3753*t2616*t3716;
  t4122 = t4118 + t4119;
  t3982 = t3753*t3980;
  t3983 = -1.*t3743*t3721;
  t3984 = t3982 + t3983;
  t4011 = -1.*t3666*t2616;
  t4012 = -1.*t1712*t3693;
  t4013 = t4011 + t4012;
  t4529 = -1.*t3753*t2616*t3730;
  t4784 = t3743*t3693;
  t5244 = t4529 + t4784;
  t4021 = t2621*t3636*t3666;
  t4022 = t3631*t3666*t2756;
  t4023 = t4021 + t4022;
  t4025 = t1712*t3650;
  t4026 = -1.*t2616*t3738;
  t4027 = t4025 + t4026;
  t2832 = t2679*t2616;
  t2865 = t1712*t2859;
  t2866 = t2832 + t2865;
  t5313 = -1.*t2573;
  t5314 = 1. + t5313;
  t5315 = 0.50321*t5314;
  t5319 = 0.19821*t2573;
  t5323 = t5315 + t5319;
  t5328 = -1.*t2619;
  t5329 = 1. + t5328;
  t5331 = -1.*t2591;
  t5332 = 1. + t5331;
  t5334 = 0.28121*t5332;
  t5335 = t2591*t5323;
  t5337 = -0.305*t2574*t2592;
  t5348 = t5334 + t5335 + t5337;
  t5301 = 0.28121*t2574;
  t5324 = -1.*t5323*t2574;
  t5325 = -0.305*t2591*t2592;
  t5326 = t5301 + t5324 + t5325;
  t5330 = 0.15121*t5329;
  t5349 = t2619*t5348;
  t5412 = t5330 + t5349;
  t5416 = t2621*t5412;
  t5417 = -0.15121*t5329;
  t5420 = -0.15121*t2619;
  t5421 = -0.15121*t2701;
  t5424 = t2701*t5348;
  t5427 = t5417 + t5420 + t5421 + t5424;
  t5429 = -1.*t5427*t2756;
  t5430 = t5416 + t5429;
  t5443 = t5326*t2616;
  t5444 = t1712*t5430;
  t5445 = t5443 + t5444;
  t5327 = -1.*t5326*t2616;
  t5431 = -1.*t1712*t5430;
  t5438 = t5327 + t5431;
  t5481 = t1712*t5326;
  t5482 = -1.*t2616*t5430;
  t5483 = t5481 + t5482;
  t5455 = t2621*t5427;
  t5456 = t5412*t2756;
  t5476 = t5455 + t5456;
  t5479 = -1.*t3836*t5476;
  t5480 = -1.*t1712*t2871*t5445;
  t5484 = t2616*t2871*t5483;
  t5485 = t5479 + t5480 + t5484;
  t5501 = -1.*t2621*t5427;
  t5502 = -1.*t5412*t2756;
  t5503 = t5501 + t5502;
  t5493 = t3819*t5476;
  t5494 = t2866*t5445;
  t5495 = t2956*t5483;
  t5496 = t5493 + t5494 + t5495;
  t5499 = t1712*t2968*t5485;
  t5507 = -1.*t2871*t5476;
  t5500 = Power(t1712,2);
  t5505 = Power(t2616,2);
  t5673 = 0.15121*t2701;
  t5677 = -1.*t2701*t5348;
  t5679 = t5673 + t5677;
  t5688 = t2621*t5679;
  t5690 = t5420 + t5349;
  t5691 = -1.*t5690*t2756;
  t5692 = t5688 + t5691;
  t5510 = -1.*t1712*t2937*t5445;
  t5511 = t2616*t2937*t5483;
  t5515 = t2859*t5476;
  t5695 = t2621*t5690;
  t5696 = t5679*t2756;
  t5697 = t5695 + t5696;
  t5608 = t1712*t2968*t5445;
  t5613 = -1.*t2616*t2968*t5483;
  t5616 = t1712*t2937*t5496;
  t5715 = 0.28121*t2591;
  t5717 = -1.*t2591*t5323;
  t5719 = 0.305*t2574*t2592;
  t5720 = t5715 + t5717 + t5719;
  t5726 = t2619*t2621*t5326;
  t5727 = -1.*t2701*t5326*t2756;
  t5728 = t5726 + t5727;
  t2983 = t2614*t2616;
  t2988 = t1712*t2763;
  t2993 = t2983 + t2988;
  t5709 = t2621*t2701*t5326;
  t5710 = t2619*t5326*t2756;
  t5711 = t5709 + t5710;
  t5721 = t5720*t2616;
  t5731 = t1712*t5728;
  t5732 = t5721 + t5731;
  t5738 = t1712*t5720;
  t5739 = -1.*t2616*t5728;
  t5740 = t5738 + t5739;
  t5774 = -0.305*t2573*t2574;
  t5775 = 0.305*t2591*t2592;
  t5776 = t5774 + t5775;
  t5781 = -0.305*t2591*t2573;
  t5782 = t5781 + t5337;
  t5784 = t2619*t2621*t5776;
  t5785 = -1.*t2701*t5776*t2756;
  t5786 = t5784 + t5785;
  t2998 = t2841*t2616;
  t3519 = t1712*t3518;
  t3520 = t2998 + t3519;
  t5777 = t2621*t2701*t5776;
  t5778 = t2619*t5776*t2756;
  t5779 = t5777 + t5778;
  t5783 = t5782*t2616;
  t5787 = t1712*t5786;
  t5788 = t5783 + t5787;
  t5790 = t1712*t5782;
  t5791 = -1.*t2616*t5786;
  t5792 = t5790 + t5791;
  t5766 = t3749*t5476;
  t5769 = t2993*t5445;
  t5770 = t2777*t5483;
  t6203 = -1.*t3819*t5476;
  t6215 = -1.*t2866*t5445;
  t6237 = -1.*t2956*t5483;
  t6286 = t6203 + t6215 + t6237;
  t6316 = t5766 + t5769 + t5770;
  t6319 = -1.*t2859*t5476;
  t6324 = -1.*t1712*t2968*t5445;
  t6330 = t2616*t2968*t5483;
  t6338 = t2763*t5476;
  t6351 = t1712*t2792*t5445;
  t6352 = -1.*t2616*t2792*t5483;
  t6357 = t1712*t2792*t6286;
  t6358 = t1712*t2968*t6316;
  t2803 = t2802*t2616;
  t2830 = t1712*t2829;
  t2831 = t2803 + t2830;
  t6396 = -1.*t3749*t5476;
  t6403 = -1.*t2993*t5445;
  t6404 = -1.*t2777*t5483;
  t6443 = t3836*t5476;
  t6444 = t1712*t2871*t5445;
  t6445 = -1.*t2616*t2871*t5483;
  t6447 = t6443 + t6444 + t6445;
  t6459 = t6396 + t6403 + t6404;
  t6463 = t1712*t2792*t6447;
  t6467 = t2871*t5476;
  t6470 = t1712*t2937*t5445;
  t6472 = -1.*t2616*t2937*t5483;
  t6477 = -1.*t2763*t5476;
  t6484 = -1.*t1712*t2792*t5445;
  t6485 = t2616*t2792*t5483;
  t6489 = t1712*t2937*t6459;
  t3677 = t3666*t2616;
  t3694 = t1712*t3693;
  t3695 = t3677 + t3694;
  t6557 = -1.*t3533;
  t6559 = 1. + t6557;
  t6561 = -0.50321*t6559;
  t6563 = -0.19821*t3533;
  t6565 = t6561 + t6563;
  t6572 = -1.*t3631;
  t6574 = 1. + t6572;
  t6577 = -1.*t3617;
  t6578 = 1. + t6577;
  t6579 = -0.28121*t6578;
  t6581 = t3617*t6565;
  t6582 = 0.305*t3537*t3618;
  t6583 = t6579 + t6581 + t6582;
  t6556 = 0.28121*t3537;
  t6566 = t6565*t3537;
  t6567 = -0.305*t3617*t3618;
  t6569 = t6556 + t6566 + t6567;
  t6575 = -0.15121*t6574;
  t6585 = t3631*t6583;
  t6587 = t6575 + t6585;
  t6590 = t2621*t6587;
  t6591 = 0.15121*t6574;
  t6593 = 0.15121*t3631;
  t6594 = 0.15121*t3636;
  t6599 = t3636*t6583;
  t6600 = t6591 + t6593 + t6594 + t6599;
  t6603 = -1.*t6600*t2756;
  t6604 = t6590 + t6603;
  t6613 = t6569*t2616;
  t6616 = t1712*t6604;
  t6617 = t6613 + t6616;
  t6570 = -1.*t6569*t2616;
  t6608 = -1.*t1712*t6604;
  t6609 = t6570 + t6608;
  t6636 = t1712*t6569;
  t6640 = -1.*t2616*t6604;
  t6641 = t6636 + t6640;
  t6625 = t2621*t6600;
  t6628 = t6587*t2756;
  t6629 = t6625 + t6628;
  t6632 = -1.*t3994*t6629;
  t6633 = -1.*t1712*t3710*t6617;
  t6644 = t2616*t3710*t6641;
  t6645 = t6632 + t6633 + t6644;
  t6677 = -1.*t2621*t6600;
  t6678 = -1.*t6587*t2756;
  t6679 = t6677 + t6678;
  t6662 = t3980*t6629;
  t6665 = t3695*t6617;
  t6666 = t3721*t6641;
  t6669 = t6662 + t6665 + t6666;
  t6674 = t1712*t3730*t6645;
  t6684 = -1.*t3710*t6629;
  t6707 = -0.15121*t3636;
  t6708 = -1.*t3636*t6583;
  t6709 = t6707 + t6708;
  t6710 = t2621*t6709;
  t6711 = t6593 + t6585;
  t6712 = -1.*t6711*t2756;
  t6714 = t6710 + t6712;
  t6688 = -1.*t1712*t3716*t6617;
  t6689 = t2616*t3716*t6641;
  t6693 = t3693*t6629;
  t6717 = t2621*t6711;
  t6720 = t6709*t2756;
  t6721 = t6717 + t6720;
  t6699 = t1712*t3730*t6617;
  t6700 = -1.*t2616*t3730*t6641;
  t6705 = t1712*t3716*t6669;
  t6736 = -0.28121*t3537;
  t6737 = -1.*t6565*t3537;
  t6738 = 0.305*t3617*t3618;
  t6739 = t6736 + t6737 + t6738;
  t6747 = 0.28121*t3617;
  t6749 = t6747 + t6581 + t6582;
  t6753 = t3631*t2621*t6739;
  t6755 = -1.*t3636*t6739*t2756;
  t6756 = t6753 + t6755;
  t3732 = t3626*t2616;
  t3733 = t1712*t3638;
  t3734 = t3732 + t3733;
  t6740 = t2621*t3636*t6739;
  t6742 = t3631*t6739*t2756;
  t6744 = t6740 + t6742;
  t6750 = t6749*t2616;
  t6757 = t1712*t6756;
  t6758 = t6750 + t6757;
  t6760 = t1712*t6749;
  t6761 = -1.*t2616*t6756;
  t6763 = t6760 + t6761;
  t6779 = 0.305*t3533*t3537;
  t6781 = t6779 + t6567;
  t6790 = -0.305*t3617*t3533;
  t6792 = -0.305*t3537*t3618;
  t6793 = t6790 + t6792;
  t6798 = t3631*t2621*t6781;
  t6800 = -1.*t3636*t6781*t2756;
  t6801 = t6798 + t6800;
  t3735 = t3650*t2616;
  t3739 = t1712*t3738;
  t3740 = t3735 + t3739;
  t6783 = t2621*t3636*t6781;
  t6785 = t3631*t6781*t2756;
  t6786 = t6783 + t6785;
  t6796 = t6793*t2616;
  t6802 = t1712*t6801;
  t6804 = t6796 + t6802;
  t6808 = t1712*t6793;
  t6809 = -1.*t2616*t6801;
  t6810 = t6808 + t6809;
  t6769 = t3950*t6629;
  t6773 = t3734*t6617;
  t6774 = t3640*t6641;
  t6842 = -1.*t3980*t6629;
  t6844 = -1.*t3695*t6617;
  t6845 = -1.*t3721*t6641;
  t6846 = t6842 + t6844 + t6845;
  t6859 = t6769 + t6773 + t6774;
  t6863 = -1.*t3693*t6629;
  t6869 = -1.*t1712*t3730*t6617;
  t6870 = t2616*t3730*t6641;
  t6874 = t3638*t6629;
  t6880 = t1712*t3643*t6617;
  t6881 = -1.*t2616*t3643*t6641;
  t6886 = t1712*t3643*t6846;
  t6887 = t1712*t3730*t6859;
  t3646 = t3634*t2616;
  t3661 = t1712*t3660;
  t3662 = t3646 + t3661;
  t6923 = -1.*t3950*t6629;
  t6927 = -1.*t3734*t6617;
  t6929 = -1.*t3640*t6641;
  t6969 = t3994*t6629;
  t6970 = t1712*t3710*t6617;
  t6971 = -1.*t2616*t3710*t6641;
  t6973 = t6969 + t6970 + t6971;
  t6984 = t6923 + t6927 + t6929;
  t6989 = t1712*t3643*t6973;
  t6993 = t3710*t6629;
  t6997 = t1712*t3716*t6617;
  t6999 = -1.*t2616*t3716*t6641;
  t7003 = -1.*t3638*t6629;
  t7008 = -1.*t1712*t3643*t6617;
  t7009 = t2616*t3643*t6641;
  t7013 = t1712*t3716*t6984;
  t5508 = -1.*t3836*t5430;
  t5519 = t3819*t5430;
  t7073 = -1.*t2871*t5430;
  t7074 = t5479 + t7073;
  t7075 = t2859*t7074;
  t5698 = -1.*t3836*t5697;
  t7078 = -1.*t2937*t5430;
  t5701 = t3819*t5697;
  t7085 = t2968*t5430;
  t7089 = t5326*t2679;
  t7090 = t2859*t5430;
  t7091 = t7089 + t5493 + t7090;
  t7093 = t2871*t7091;
  t5712 = -1.*t3836*t5711;
  t5764 = t3819*t5711;
  t5780 = -1.*t3836*t5779;
  t5797 = t3819*t5779;
  t5798 = t3876*t5476;
  t6321 = -1.*t3819*t5430;
  t6344 = t3749*t5430;
  t7109 = t5326*t2614;
  t7113 = t2763*t5430;
  t6362 = -1.*t3819*t5697;
  t7136 = -1.*t2968*t5430;
  t7143 = -1.*t5326*t2679;
  t7145 = -1.*t2859*t5430;
  t7146 = t7143 + t6203 + t7145;
  t7148 = t2763*t7146;
  t6371 = t3749*t5697;
  t7150 = t2792*t5430;
  t7153 = t7109 + t5766 + t7113;
  t7156 = t2859*t7153;
  t6381 = t5711*t3749;
  t6383 = t3775*t5476;
  t6395 = -1.*t3819*t5711;
  t6412 = t5779*t3749;
  t6421 = -1.*t3819*t5779;
  t6423 = -1.*t3876*t5476;
  t6469 = t3836*t5430;
  t6479 = -1.*t3749*t5430;
  t7178 = -1.*t5326*t2614;
  t7182 = -1.*t2763*t5430;
  t7206 = t2871*t5430;
  t7207 = t6443 + t7206;
  t7209 = t2763*t7207;
  t6495 = t3836*t5697;
  t7211 = t2937*t5430;
  t6500 = -1.*t3749*t5697;
  t7217 = -1.*t2792*t5430;
  t7220 = t7178 + t6396 + t7182;
  t7221 = t2871*t7220;
  t6510 = t3836*t5711;
  t6520 = -1.*t5711*t3749;
  t6522 = -1.*t3775*t5476;
  t6537 = t3836*t5779;
  t6547 = -1.*t5779*t3749;
  t6686 = -1.*t3994*t6604;
  t6695 = t3980*t6604;
  t7259 = -1.*t3710*t6604;
  t7260 = t6632 + t7259;
  t7264 = t3693*t7260;
  t6723 = -1.*t3994*t6721;
  t7266 = -1.*t3716*t6604;
  t6728 = t3980*t6721;
  t7271 = t3730*t6604;
  t7276 = t6569*t3666;
  t7277 = t3693*t6604;
  t7280 = t7276 + t6662 + t7277;
  t7281 = t3710*t7280;
  t6746 = -1.*t3994*t6744;
  t6768 = t6744*t3980;
  t6787 = -1.*t3994*t6786;
  t6819 = t6786*t3980;
  t6820 = t4023*t6629;
  t6865 = -1.*t3980*t6604;
  t6876 = t3950*t6604;
  t7302 = t6569*t3626;
  t7306 = t3638*t6604;
  t6890 = -1.*t3980*t6721;
  t7332 = -1.*t3730*t6604;
  t7336 = -1.*t6569*t3666;
  t7338 = -1.*t3693*t6604;
  t7339 = t7336 + t6842 + t7338;
  t7340 = t3638*t7339;
  t6900 = t3950*t6721;
  t7343 = t3643*t6604;
  t7349 = t7302 + t6769 + t7306;
  t7350 = t3693*t7349;
  t6908 = t6744*t3950;
  t6909 = t3968*t6629;
  t6922 = -1.*t6744*t3980;
  t6939 = t6786*t3950;
  t6948 = -1.*t6786*t3980;
  t6951 = -1.*t4023*t6629;
  t6996 = t3994*t6604;
  t7004 = -1.*t3950*t6604;
  t7377 = -1.*t6569*t3626;
  t7381 = -1.*t3638*t6604;
  t7413 = t3710*t6604;
  t7414 = t6969 + t7413;
  t7415 = t3638*t7414;
  t7022 = t3994*t6721;
  t7419 = t3716*t6604;
  t7026 = -1.*t3950*t6721;
  t7426 = -1.*t3643*t6604;
  t7431 = t7377 + t6923 + t7381;
  t7435 = t3710*t7431;
  t7034 = t3994*t6744;
  t7042 = -1.*t6744*t3950;
  t7043 = -1.*t3968*t6629;
  t7055 = t3994*t6786;
  t7065 = -1.*t6786*t3950;
  t7493 = t2701*t5412;
  t7496 = -1.*t2619*t5427;
  t7497 = t7493 + t7496;
  t7170 = t5326*t2802;
  t7171 = t2614*t5720;
  t7527 = Power(t2619,2);
  t7529 = Power(t2701,2);
  t7179 = -1.*t5720*t2679;
  t7521 = -1.*t2619*t2841*t5412;
  t7523 = -1.*t2701*t2841*t5427;
  t7524 = t7143 + t7521 + t7523;
  t7190 = t2614*t5782;
  t7195 = -1.*t2841*t5326;
  t7196 = -1.*t5782*t2679;
  t7555 = t2619*t2679*t5412;
  t7557 = t2701*t2679*t5427;
  t7558 = t7109 + t7555 + t7557;
  t7591 = -1.*t2701*t5412;
  t7592 = t2619*t5427;
  t7594 = t7591 + t7592;
  t7607 = -1.*t3636*t6587;
  t7608 = t3631*t6600;
  t7610 = t7607 + t7608;
  t7366 = t6569*t3634;
  t7367 = t3626*t6749;
  t7630 = Power(t3631,2);
  t7633 = Power(t3636,2);
  t7379 = -1.*t6749*t3666;
  t7639 = -1.*t3631*t3626*t6587;
  t7640 = -1.*t3636*t3626*t6600;
  t7641 = t7336 + t7639 + t7640;
  t7391 = t3626*t6793;
  t7649 = t3631*t3634*t6587;
  t7650 = t3636*t3634*t6600;
  t7652 = t7302 + t7649 + t7650;
  t7398 = -1.*t3650*t6569;
  t7403 = -1.*t6793*t3666;
  t7687 = t3636*t6587;
  t7688 = -1.*t3631*t6600;
  t7690 = t7687 + t7688;
  t7697 = 0.15121*t3650;
  t7698 = 0.15121*t3626;
  t7699 = t7697 + t7698;
  t7700 = t3634*t6583;
  t7703 = t7302 + t7700;
  t7710 = -1.*t3626*t6583;
  t7713 = t7710 + t7336;
  t7762 = -1.*t2841*t5348;
  t7765 = t7762 + t7143;
  t7771 = t5348*t2679;
  t7773 = t7109 + t7771;
  t7797 = -0.15121*t2802;
  t7799 = -0.15121*t2679;
  t7800 = t7797 + t7799;
  p_output1[0]=t2777;
  p_output1[1]=t2793;
  p_output1[2]=t2793;
  p_output1[3]=t2831;
  p_output1[4]=t2866;
  p_output1[5]=-1.*t2616*t2871;
  p_output1[6]=t2947;
  p_output1[7]=t2947;
  p_output1[8]=t2956;
  p_output1[9]=t2982;
  p_output1[10]=t2982;
  p_output1[11]=t2993;
  p_output1[12]=t3520;
  p_output1[13]=t3640;
  p_output1[14]=t3644;
  p_output1[15]=t3644;
  p_output1[16]=t3662;
  p_output1[17]=t3695;
  p_output1[18]=-1.*t2616*t3710;
  p_output1[19]=t3718;
  p_output1[20]=t3718;
  p_output1[21]=t3721;
  p_output1[22]=t3731;
  p_output1[23]=t3731;
  p_output1[24]=t3734;
  p_output1[25]=t3740;
  p_output1[26]=-1.*t3743*t3749 - 1.*t2777*t3753;
  p_output1[27]=-1.*t3743*t3761;
  p_output1[28]=t3767;
  p_output1[29]=t3767;
  p_output1[30]=t3753*t3775 - 1.*t3743*t3783;
  p_output1[31]=t3827;
  p_output1[32]=t2616*t2871*t3753 - 1.*t3743*t3836;
  p_output1[33]=t1712*t2871*t3743;
  p_output1[34]=t3851;
  p_output1[35]=t3851;
  p_output1[36]=-1.*t2956*t3753 - 1.*t3743*t3819;
  p_output1[37]=-1.*t3743*t3857;
  p_output1[38]=t3861;
  p_output1[39]=t3861;
  p_output1[40]=t3864;
  p_output1[41]=t3753*t3876 - 1.*t3743*t3944;
  p_output1[42]=-1.*t3640*t3753 - 1.*t3743*t3950;
  p_output1[43]=-1.*t3743*t3958;
  p_output1[44]=t3965;
  p_output1[45]=t3965;
  p_output1[46]=t3753*t3968 - 1.*t3743*t3973;
  p_output1[47]=t3984;
  p_output1[48]=t2616*t3710*t3753 - 1.*t3743*t3994;
  p_output1[49]=t1712*t3710*t3743;
  p_output1[50]=t4007;
  p_output1[51]=t4007;
  p_output1[52]=-1.*t3721*t3753 - 1.*t3743*t3980;
  p_output1[53]=-1.*t3743*t4013;
  p_output1[54]=t4017;
  p_output1[55]=t4017;
  p_output1[56]=t4020;
  p_output1[57]=t3753*t4023 - 1.*t3743*t4027;
  p_output1[58]=t3864;
  p_output1[59]=t3753*t3761;
  p_output1[60]=t4033;
  p_output1[61]=t4033;
  p_output1[62]=t3743*t3775 + t3753*t3783;
  p_output1[63]=t2956*t3753 + t3743*t3819;
  p_output1[64]=t2616*t2871*t3743 + t3753*t3836;
  p_output1[65]=-1.*t1712*t2871*t3753;
  p_output1[66]=t4047;
  p_output1[67]=t4047;
  p_output1[68]=t3827;
  p_output1[69]=t3753*t3857;
  p_output1[70]=t4055;
  p_output1[71]=t4055;
  p_output1[72]=t3743*t3749 + t2777*t3753;
  p_output1[73]=t3743*t3876 + t3753*t3944;
  p_output1[74]=t4020;
  p_output1[75]=t3753*t3958;
  p_output1[76]=t4082;
  p_output1[77]=t4082;
  p_output1[78]=t3743*t3968 + t3753*t3973;
  p_output1[79]=t3721*t3753 + t3743*t3980;
  p_output1[80]=t2616*t3710*t3743 + t3753*t3994;
  p_output1[81]=-1.*t1712*t3710*t3753;
  p_output1[82]=t4122;
  p_output1[83]=t4122;
  p_output1[84]=t3984;
  p_output1[85]=t3753*t4013;
  p_output1[86]=t5244;
  p_output1[87]=t5244;
  p_output1[88]=t3640*t3753 + t3743*t3950;
  p_output1[89]=t3743*t4023 + t3753*t4027;
  p_output1[90]=t2866*(t2616*t2871*t5438 + t2616*t2871*t5445) + t1712*t2871*(t2956*t5438 + t2956*t5445 + t2866*t5483 + t3857*t5483) + t2956*t5485 - 1.*t2616*t2871*t5496;
  p_output1[91]=t5499 + t2866*(-1.*t2871*t5500*t5503 - 1.*t2871*t5503*t5505 + t5507 + t5508 + t5510 + t5511) + t1712*t2871*(t1712*t2866*t5503 - 1.*t2616*t2956*t5503 + t5515 + t5519 + t5608 + t5613) + t5616;
  p_output1[92]=t5499 + t5616 + t2866*(t5507 + t5510 + t5511 - 1.*t2871*t5500*t5692 - 1.*t2871*t5505*t5692 + t5698) + t1712*t2871*(t5515 + t5608 + t5613 + t1712*t2866*t5692 - 1.*t2616*t2956*t5692 + t5701);
  p_output1[93]=t2993*t5485 + t2866*(t5712 - 1.*t1712*t2871*t5732 + t2616*t2871*t5740) + t1712*t2871*(t2866*t5732 + t2956*t5740 + t5764 + t5766 + t5769 + t5770);
  p_output1[94]=t3520*t5485 + t2866*(t5780 - 1.*t1712*t2871*t5788 + t2616*t2871*t5792) + t1712*t2871*(t3520*t5445 + t3944*t5483 + t2866*t5788 + t2956*t5792 + t5797 + t5798);
  p_output1[95]=t2866*(t2777*t5438 + t2777*t5445 + t2993*t5483 + t3761*t5483) + t2993*(-1.*t2956*t5438 - 1.*t2956*t5445 - 1.*t2866*t5483 - 1.*t3857*t5483) + t2777*t6286 + t2956*t6316;
  p_output1[96]=t2993*(-1.*t1712*t2866*t5503 + t2616*t2956*t5503 + t6319 + t6321 + t6324 + t6330) + t2866*(-1.*t2616*t2777*t5503 + t1712*t2993*t5503 + t6338 + t6344 + t6351 + t6352) + t6357 + t6358;
  p_output1[97]=t6357 + t6358 + t2993*(-1.*t1712*t2866*t5692 + t2616*t2956*t5692 + t6319 + t6324 + t6330 + t6362) + t2866*(-1.*t2616*t2777*t5692 + t1712*t2993*t5692 + t6338 + t6351 + t6352 + t6371);
  p_output1[98]=t2831*t6286 + t2993*t6316 + t2866*(t2831*t5445 + t3783*t5483 + t2993*t5732 + t2777*t5740 + t6381 + t6383) + t2993*(-1.*t2866*t5732 - 1.*t2956*t5740 + t6395 + t6396 + t6403 + t6404);
  p_output1[99]=t2866*t6286 + t3520*t6316 + t2866*(t5493 + t5494 + t5495 + t2993*t5788 + t2777*t5792 + t6412) + t2993*(-1.*t3520*t5445 - 1.*t3944*t5483 - 1.*t2866*t5788 - 1.*t2956*t5792 + t6421 + t6423);
  p_output1[100]=t2993*(-1.*t2616*t2871*t5438 - 1.*t2616*t2871*t5445) + t1712*t2871*(-1.*t2777*t5438 - 1.*t2777*t5445 - 1.*t2993*t5483 - 1.*t3761*t5483) + t2777*t6447 - 1.*t2616*t2871*t6459;
  p_output1[101]=t6463 + t2993*(t2871*t5500*t5503 + t2871*t5503*t5505 + t6467 + t6469 + t6470 + t6472) + t1712*t2871*(t2616*t2777*t5503 - 1.*t1712*t2993*t5503 + t6477 + t6479 + t6484 + t6485) + t6489;
  p_output1[102]=t6463 + t6489 + t2993*(t2871*t5500*t5692 + t2871*t5505*t5692 + t6467 + t6470 + t6472 + t6495) + t1712*t2871*(t2616*t2777*t5692 - 1.*t1712*t2993*t5692 + t6477 + t6484 + t6485 + t6500);
  p_output1[103]=t2831*t6447 + t2993*(t1712*t2871*t5732 - 1.*t2616*t2871*t5740 + t6510) + t1712*t2871*(-1.*t2831*t5445 - 1.*t3783*t5483 - 1.*t2993*t5732 - 1.*t2777*t5740 + t6520 + t6522);
  p_output1[104]=t2866*t6447 + t2993*(t1712*t2871*t5788 - 1.*t2616*t2871*t5792 + t6537) + t1712*t2871*(-1.*t2993*t5788 - 1.*t2777*t5792 + t6203 + t6215 + t6237 + t6547);
  p_output1[105]=t3695*(t2616*t3710*t6609 + t2616*t3710*t6617) + t1712*t3710*(t3721*t6609 + t3721*t6617 + t3695*t6641 + t4013*t6641) + t3721*t6645 - 1.*t2616*t3710*t6669;
  p_output1[106]=t6674 + t3695*(-1.*t3710*t5500*t6679 - 1.*t3710*t5505*t6679 + t6684 + t6686 + t6688 + t6689) + t1712*t3710*(t1712*t3695*t6679 - 1.*t2616*t3721*t6679 + t6693 + t6695 + t6699 + t6700) + t6705;
  p_output1[107]=t6674 + t6705 + t3695*(t6684 + t6688 + t6689 - 1.*t3710*t5500*t6714 - 1.*t3710*t5505*t6714 + t6723) + t1712*t3710*(t6693 + t6699 + t6700 + t1712*t3695*t6714 - 1.*t2616*t3721*t6714 + t6728);
  p_output1[108]=t3734*t6645 + t3695*(t6746 - 1.*t1712*t3710*t6758 + t2616*t3710*t6763) + t1712*t3710*(t3695*t6758 + t3721*t6763 + t6768 + t6769 + t6773 + t6774);
  p_output1[109]=t3740*t6645 + t3695*(t6787 - 1.*t1712*t3710*t6804 + t2616*t3710*t6810) + t1712*t3710*(t3740*t6617 + t4027*t6641 + t3695*t6804 + t3721*t6810 + t6819 + t6820);
  p_output1[110]=t3695*(t3640*t6609 + t3640*t6617 + t3734*t6641 + t3958*t6641) + t3734*(-1.*t3721*t6609 - 1.*t3721*t6617 - 1.*t3695*t6641 - 1.*t4013*t6641) + t3640*t6846 + t3721*t6859;
  p_output1[111]=t3734*(-1.*t1712*t3695*t6679 + t2616*t3721*t6679 + t6863 + t6865 + t6869 + t6870) + t3695*(-1.*t2616*t3640*t6679 + t1712*t3734*t6679 + t6874 + t6876 + t6880 + t6881) + t6886 + t6887;
  p_output1[112]=t6886 + t6887 + t3734*(-1.*t1712*t3695*t6714 + t2616*t3721*t6714 + t6863 + t6869 + t6870 + t6890) + t3695*(-1.*t2616*t3640*t6714 + t1712*t3734*t6714 + t6874 + t6880 + t6881 + t6900);
  p_output1[113]=t3662*t6846 + t3734*t6859 + t3695*(t3662*t6617 + t3973*t6641 + t3734*t6758 + t3640*t6763 + t6908 + t6909) + t3734*(-1.*t3695*t6758 - 1.*t3721*t6763 + t6922 + t6923 + t6927 + t6929);
  p_output1[114]=t3695*t6846 + t3740*t6859 + t3695*(t6662 + t6665 + t6666 + t3734*t6804 + t3640*t6810 + t6939) + t3734*(-1.*t3740*t6617 - 1.*t4027*t6641 - 1.*t3695*t6804 - 1.*t3721*t6810 + t6948 + t6951);
  p_output1[115]=t3734*(-1.*t2616*t3710*t6609 - 1.*t2616*t3710*t6617) + t1712*t3710*(-1.*t3640*t6609 - 1.*t3640*t6617 - 1.*t3734*t6641 - 1.*t3958*t6641) + t3640*t6973 - 1.*t2616*t3710*t6984;
  p_output1[116]=t6989 + t3734*(t3710*t5500*t6679 + t3710*t5505*t6679 + t6993 + t6996 + t6997 + t6999) + t1712*t3710*(t2616*t3640*t6679 - 1.*t1712*t3734*t6679 + t7003 + t7004 + t7008 + t7009) + t7013;
  p_output1[117]=t6989 + t7013 + t3734*(t3710*t5500*t6714 + t3710*t5505*t6714 + t6993 + t6997 + t6999 + t7022) + t1712*t3710*(t2616*t3640*t6714 - 1.*t1712*t3734*t6714 + t7003 + t7008 + t7009 + t7026);
  p_output1[118]=t3662*t6973 + t3734*(t1712*t3710*t6758 - 1.*t2616*t3710*t6763 + t7034) + t1712*t3710*(-1.*t3662*t6617 - 1.*t3973*t6641 - 1.*t3734*t6758 - 1.*t3640*t6763 + t7042 + t7043);
  p_output1[119]=t3695*t6973 + t3734*(t1712*t3710*t6804 - 1.*t2616*t3710*t6810 + t7055) + t1712*t3710*(-1.*t3734*t6804 - 1.*t3640*t6810 + t6842 + t6844 + t6845 + t7065);
  p_output1[120]=t7075 + t3819*(-1.*t2871*t5503 + t5507 + t5508 + t7078) + t3836*(t2859*t5503 + t5515 + t5519 + t7085) + t7093;
  p_output1[121]=t7075 + t3819*(t5507 - 1.*t2871*t5692 + t5698 + t7078) + t3836*(t5515 + t2859*t5692 + t5701 + t7085) + t7093;
  p_output1[122]=t3819*(t5712 - 1.*t2871*t5728) + t3749*t7074 + t3836*(t2679*t5720 + t2859*t5728 + t5764 + t5766 + t7109 + t7113);
  p_output1[123]=t3819*(t5780 - 1.*t2871*t5786) + t3836*(t2841*t5326 + t3518*t5430 + t2679*t5782 + t2859*t5786 + t5797 + t5798) + t3876*t7074;
  p_output1[124]=t3749*(-1.*t2859*t5503 + t6319 + t6321 + t7136) + t7148 + t3819*(t2763*t5503 + t6338 + t6344 + t7150) + t7156;
  p_output1[125]=t3749*(-1.*t2859*t5692 + t6319 + t6362 + t7136) + t7148 + t3819*(t2763*t5692 + t6338 + t6371 + t7150) + t7156;
  p_output1[126]=t3775*t7146 + t3749*t7153 + t3819*(t2829*t5430 + t2763*t5728 + t6381 + t6383 + t7170 + t7171) + t3749*(-1.*t2859*t5728 + t6395 + t6396 + t7178 + t7179 + t7182);
  p_output1[127]=t3819*t7146 + t3876*t7153 + t3819*(t5493 + t2763*t5786 + t6412 + t7089 + t7090 + t7190) + t3749*(-1.*t3518*t5430 - 1.*t2859*t5786 + t6421 + t6423 + t7195 + t7196);
  p_output1[128]=t7209 + t3749*(t2871*t5503 + t6467 + t6469 + t7211) + t3836*(-1.*t2763*t5503 + t6477 + t6479 + t7217) + t7221;
  p_output1[129]=t7209 + t3749*(t2871*t5692 + t6467 + t6495 + t7211) + t3836*(-1.*t2763*t5692 + t6477 + t6500 + t7217) + t7221;
  p_output1[130]=t3749*(t2871*t5728 + t6510) + t3836*(-1.*t2802*t5326 - 1.*t2829*t5430 - 1.*t2614*t5720 - 1.*t2763*t5728 + t6520 + t6522) + t3775*t7207;
  p_output1[131]=t3749*(t2871*t5786 + t6537) + t3836*(-1.*t2614*t5782 - 1.*t2763*t5786 + t6203 + t6547 + t7143 + t7145) + t3819*t7207;
  p_output1[132]=t7264 + t3980*(-1.*t3710*t6679 + t6684 + t6686 + t7266) + t3994*(t3693*t6679 + t6693 + t6695 + t7271) + t7281;
  p_output1[133]=t7264 + t3980*(t6684 - 1.*t3710*t6714 + t6723 + t7266) + t3994*(t6693 + t3693*t6714 + t6728 + t7271) + t7281;
  p_output1[134]=t3980*(t6746 - 1.*t3710*t6756) + t3950*t7260 + t3994*(t3666*t6749 + t3693*t6756 + t6768 + t6769 + t7302 + t7306);
  p_output1[135]=t3980*(t6787 - 1.*t3710*t6801) + t3994*(t3650*t6569 + t3738*t6604 + t3666*t6793 + t3693*t6801 + t6819 + t6820) + t4023*t7260;
  p_output1[136]=t3950*(-1.*t3693*t6679 + t6863 + t6865 + t7332) + t7340 + t3980*(t3638*t6679 + t6874 + t6876 + t7343) + t7350;
  p_output1[137]=t3950*(-1.*t3693*t6714 + t6863 + t6890 + t7332) + t7340 + t3980*(t3638*t6714 + t6874 + t6900 + t7343) + t7350;
  p_output1[138]=t3968*t7339 + t3950*t7349 + t3980*(t3660*t6604 + t3638*t6756 + t6908 + t6909 + t7366 + t7367) + t3950*(-1.*t3693*t6756 + t6922 + t6923 + t7377 + t7379 + t7381);
  p_output1[139]=t3980*t7339 + t4023*t7349 + t3980*(t6662 + t3638*t6801 + t6939 + t7276 + t7277 + t7391) + t3950*(-1.*t3738*t6604 - 1.*t3693*t6801 + t6948 + t6951 + t7398 + t7403);
  p_output1[140]=t7415 + t3950*(t3710*t6679 + t6993 + t6996 + t7419) + t3994*(-1.*t3638*t6679 + t7003 + t7004 + t7426) + t7435;
  p_output1[141]=t7415 + t3950*(t3710*t6714 + t6993 + t7022 + t7419) + t3994*(-1.*t3638*t6714 + t7003 + t7026 + t7426) + t7435;
  p_output1[142]=t3950*(t3710*t6756 + t7034) + t3994*(-1.*t3634*t6569 - 1.*t3660*t6604 - 1.*t3626*t6749 - 1.*t3638*t6756 + t7042 + t7043) + t3968*t7414;
  p_output1[143]=t3950*(t3710*t6801 + t7055) + t3994*(-1.*t3626*t6793 - 1.*t3638*t6801 + t6842 + t7065 + t7336 + t7338) + t3980*t7414;
  p_output1[144]=t2679*(t2619*t5412 + t2701*t5427 + t2701*t5679 - 1.*t2619*t5690);
  p_output1[145]=t2614*t7497;
  p_output1[146]=t2841*t7497;
  p_output1[147]=t2679*(-1.*t2679*t2701*t5412 + t2619*t2679*t5427 + t2619*t2679*t5679 + t2679*t2701*t5690) + t2614*(t2701*t2841*t5412 - 1.*t2619*t2841*t5427 - 1.*t2619*t2841*t5679 - 1.*t2701*t2841*t5690);
  p_output1[148]=t2802*t7524 + t2679*(t2614*t2619*t5412 + t2614*t2701*t5427 + t7170 + t7171 + t2679*t5326*t7527 + t2679*t5326*t7529) + t2614*(-1.*t2619*t2679*t5412 - 1.*t2679*t2701*t5427 + t7178 + t7179 - 1.*t2841*t5326*t7527 - 1.*t2841*t5326*t7529) + t2614*t7558;
  p_output1[149]=t2679*t7524 + t2679*(t2619*t2841*t5412 + t2701*t2841*t5427 + t7089 + t7190 + t2679*t5776*t7527 + t2679*t5776*t7529) + t2614*(-1.*t2619*t2802*t5412 - 1.*t2701*t2802*t5427 + t7195 + t7196 - 1.*t2841*t5776*t7527 - 1.*t2841*t5776*t7529) + t2841*t7558;
  p_output1[150]=t2614*(-1.*t2619*t5412 - 1.*t2701*t5427 - 1.*t2701*t5679 + t2619*t5690);
  p_output1[151]=t2802*t7594;
  p_output1[152]=t2679*t7594;
  p_output1[153]=t3666*(-1.*t3631*t6587 - 1.*t3636*t6600 - 1.*t3636*t6709 + t3631*t6711);
  p_output1[154]=t3626*t7610;
  p_output1[155]=t3650*t7610;
  p_output1[156]=t3626*(t3626*t3636*t6587 - 1.*t3626*t3631*t6600 - 1.*t3626*t3631*t6709 - 1.*t3626*t3636*t6711) + t3666*(-1.*t3634*t3636*t6587 + t3631*t3634*t6600 + t3631*t3634*t6709 + t3634*t3636*t6711);
  p_output1[157]=t3626*(-1.*t3631*t3634*t6587 - 1.*t3634*t3636*t6600 + t7377 + t7379 - 1.*t3626*t6739*t7630 - 1.*t3626*t6739*t7633) + t3666*(t3631*t3650*t6587 + t3636*t3650*t6600 + t7366 + t7367 + t3634*t6739*t7630 + t3634*t6739*t7633) + t3634*t7641 + t3626*t7652;
  p_output1[158]=t3626*(-1.*t3631*t3666*t6587 - 1.*t3636*t3666*t6600 + t7398 + t7403 - 1.*t3626*t6781*t7630 - 1.*t3626*t6781*t7633) + t3666*(t3626*t3631*t6587 + t3626*t3636*t6600 + t7276 + t7391 + t3634*t6781*t7630 + t3634*t6781*t7633) + t3666*t7641 + t3650*t7652;
  p_output1[159]=t3626*(t3631*t6587 + t3636*t6600 + t3636*t6709 - 1.*t3631*t6711);
  p_output1[160]=t3634*t7690;
  p_output1[161]=t3666*t7690;
  p_output1[162]=t7699;
  p_output1[163]=t7699;
  p_output1[164]=t3666*(t3650*t6583 + t3634*t6739 + t7366 + t7367) + t3626*(-1.*t3634*t6583 - 1.*t3626*t6739 + t7377 + t7379) + t3626*t7703 + t3634*t7713;
  p_output1[165]=t3666*(t3626*t6583 + t3634*t6781 + t7276 + t7391) + t3626*(-1.*t3666*t6583 - 1.*t3626*t6781 + t7398 + t7403) + t3650*t7703 + t3666*t7713;
  p_output1[166]=0.28121*t3533 - 0.305*Power(t3533,2) + t3533*t6565;
  p_output1[167]=-0.28121*t3618 + 0.305*t3533*t3618 - 1.*t3618*t6565;
  p_output1[168]=t2679*(t2614*t5348 + t7089 + t7170 + t7171) + t2614*(-1.*t2679*t5348 + t7178 + t7179 + t7195) + t2802*t7765 + t2614*t7773;
  p_output1[169]=t2679*(t2841*t5348 + t2679*t5776 + t7089 + t7190) + t2614*(-1.*t2802*t5348 - 1.*t2841*t5776 + t7195 + t7196) + t2679*t7765 + t2841*t7773;
  p_output1[170]=t7800;
  p_output1[171]=t7800;
  p_output1[172]=0.28121*t2573 - 0.305*Power(t2573,2) - 1.*t2573*t5323;
  p_output1[173]=-0.28121*t2592 + 0.305*t2573*t2592 + t2592*t5323;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
