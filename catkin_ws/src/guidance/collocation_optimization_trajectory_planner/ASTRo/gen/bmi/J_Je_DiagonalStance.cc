/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:51:00 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t28;
  double t15;
  double t16;
  double t36;
  double t85;
  double t89;
  double t90;
  double t9;
  double t64;
  double t98;
  double t58;
  double t99;
  double t120;
  double t127;
  double t130;
  double t131;
  double t57;
  double t19;
  double t50;
  double t51;
  double t193;
  double t195;
  double t203;
  double t256;
  double t259;
  double t261;
  double t263;
  double t215;
  double t228;
  double t234;
  double t272;
  double t276;
  double t277;
  double t279;
  double t93;
  double t103;
  double t110;
  double t132;
  double t138;
  double t142;
  double t313;
  double t296;
  double t299;
  double t316;
  double t328;
  double t330;
  double t335;
  double t340;
  double t327;
  double t358;
  double t361;
  double t364;
  double t371;
  double t378;
  double t382;
  double t383;
  double t302;
  double t319;
  double t323;
  double t484;
  double t486;
  double t489;
  double t499;
  double t403;
  double t404;
  double t410;
  double t425;
  double t428;
  double t452;
  double t537;
  double t542;
  double t548;
  double t550;
  double t336;
  double t345;
  double t349;
  double t53;
  double t112;
  double t116;
  double t593;
  double t611;
  double t626;
  double t627;
  double t633;
  double t154;
  double t169;
  double t171;
  double t267;
  double t269;
  double t270;
  double t247;
  double t249;
  double t250;
  double t750;
  double t752;
  double t753;
  double t725;
  double t730;
  double t731;
  double t783;
  double t784;
  double t785;
  double t596;
  double t600;
  double t606;
  double t288;
  double t290;
  double t291;
  double t325;
  double t353;
  double t355;
  double t941;
  double t942;
  double t944;
  double t390;
  double t391;
  double t393;
  double t516;
  double t522;
  double t526;
  double t473;
  double t476;
  double t479;
  double t1076;
  double t1081;
  double t1085;
  double t1036;
  double t1040;
  double t1043;
  double t1105;
  double t1108;
  double t1110;
  double t832;
  double t839;
  double t872;
  double t560;
  double t561;
  double t565;
  double t791;
  double t795;
  double t796;
  double t622;
  double t623;
  double t624;
  double t1155;
  double t1157;
  double t1158;
  double t637;
  double t640;
  double t648;
  double t673;
  double t690;
  double t695;
  double t740;
  double t741;
  double t742;
  double t1180;
  double t1181;
  double t1182;
  double t733;
  double t734;
  double t735;
  double t771;
  double t772;
  double t776;
  double t1186;
  double t1188;
  double t1191;
  double t799;
  double t800;
  double t804;
  double t815;
  double t823;
  double t825;
  double t1114;
  double t1125;
  double t1128;
  double t889;
  double t891;
  double t938;
  double t1209;
  double t1212;
  double t1223;
  double t945;
  double t946;
  double t947;
  double t986;
  double t1002;
  double t1012;
  double t1056;
  double t1058;
  double t1065;
  double t1267;
  double t1286;
  double t1291;
  double t1044;
  double t1048;
  double t1049;
  double t1091;
  double t1098;
  double t1100;
  double t1300;
  double t1310;
  double t1312;
  double t1131;
  double t1132;
  double t1134;
  double t1136;
  double t1137;
  double t1140;
  double t186;
  double t236;
  double t243;
  double t1384;
  double t1408;
  double t1410;
  double t1434;
  double t1448;
  double t1459;
  double t1462;
  double t1466;
  double t1468;
  double t1469;
  double t1472;
  double t1491;
  double t1492;
  double t1381;
  double t1449;
  double t1450;
  double t1453;
  double t1464;
  double t1494;
  double t1497;
  double t1499;
  double t1502;
  double t1503;
  double t1505;
  double t1508;
  double t1509;
  double t1511;
  double t1517;
  double t1611;
  double t1612;
  double t1614;
  double t1454;
  double t1592;
  double t1606;
  double t1781;
  double t1783;
  double t1802;
  double t1650;
  double t1658;
  double t1686;
  double t1749;
  double t1764;
  double t1806;
  double t1815;
  double t1926;
  double t1928;
  double t1930;
  double t1870;
  double t1877;
  double t1878;
  double t1880;
  double t1893;
  double t1963;
  double t1895;
  double t1940;
  double t2117;
  double t2133;
  double t2140;
  double t2149;
  double t2151;
  double t2155;
  double t2165;
  double t1975;
  double t1983;
  double t2011;
  double t2176;
  double t2182;
  double t2191;
  double t2083;
  double t2085;
  double t2107;
  double t2277;
  double t2287;
  double t2292;
  double t2308;
  double t2323;
  double t2326;
  double t2327;
  double t280;
  double t281;
  double t284;
  double t2247;
  double t2249;
  double t2271;
  double t2312;
  double t2328;
  double t2331;
  double t2338;
  double t2339;
  double t2344;
  double t2461;
  double t2472;
  double t2475;
  double t2490;
  double t2491;
  double t2518;
  double t2519;
  double t2520;
  double t286;
  double t292;
  double t293;
  double t2477;
  double t2482;
  double t2488;
  double t2513;
  double t2527;
  double t2532;
  double t2540;
  double t2541;
  double t2542;
  double t2385;
  double t2420;
  double t2435;
  double t2630;
  double t2649;
  double t2654;
  double t2656;
  double t2703;
  double t2720;
  double t2740;
  double t2741;
  double t2772;
  double t2789;
  double t2790;
  double t2820;
  double t2832;
  double t144;
  double t179;
  double t182;
  double t2944;
  double t2955;
  double t2974;
  double t3045;
  double t3046;
  double t3050;
  double t3057;
  double t3104;
  double t3121;
  double t3130;
  double t3134;
  double t3138;
  double t3141;
  double t3161;
  double t3162;
  double t3170;
  double t414;
  double t456;
  double t464;
  double t3348;
  double t3349;
  double t3352;
  double t3359;
  double t3361;
  double t3387;
  double t3402;
  double t3410;
  double t3411;
  double t3421;
  double t3449;
  double t3455;
  double t3468;
  double t3347;
  double t3366;
  double t3376;
  double t3379;
  double t3408;
  double t3472;
  double t3480;
  double t3482;
  double t3483;
  double t3491;
  double t3492;
  double t3494;
  double t3496;
  double t3501;
  double t3514;
  double t3563;
  double t3584;
  double t3614;
  double t3384;
  double t3526;
  double t3530;
  double t3755;
  double t3764;
  double t3767;
  double t3667;
  double t3675;
  double t3683;
  double t3684;
  double t3704;
  double t3795;
  double t3805;
  double t3872;
  double t3880;
  double t3886;
  double t3841;
  double t3844;
  double t3845;
  double t3847;
  double t3871;
  double t3911;
  double t4062;
  double t4079;
  double t4097;
  double t4105;
  double t4109;
  double t4111;
  double t4112;
  double t3925;
  double t3928;
  double t3941;
  double t4138;
  double t4162;
  double t4194;
  double t3981;
  double t3987;
  double t4052;
  double t4407;
  double t4421;
  double t4441;
  double t4448;
  double t4472;
  double t4475;
  double t4488;
  double t4494;
  double t4496;
  double t551;
  double t553;
  double t556;
  double t4451;
  double t4456;
  double t4458;
  double t4484;
  double t4499;
  double t4506;
  double t4528;
  double t4529;
  double t4545;
  double t4643;
  double t4652;
  double t4718;
  double t4721;
  double t4726;
  double t4728;
  double t4729;
  double t4740;
  double t557;
  double t572;
  double t581;
  double t4662;
  double t4672;
  double t4688;
  double t4727;
  double t4742;
  double t4745;
  double t4765;
  double t4770;
  double t4792;
  double t4596;
  double t4622;
  double t4627;
  double t4969;
  double t4994;
  double t5004;
  double t5060;
  double t5204;
  double t5241;
  double t5269;
  double t5281;
  double t5295;
  double t5300;
  double t5304;
  double t5308;
  double t5312;
  double t377;
  double t401;
  double t402;
  double t5432;
  double t5455;
  double t5457;
  double t5665;
  double t5678;
  double t5681;
  double t5685;
  double t5836;
  double t5893;
  double t5948;
  double t5959;
  double t5962;
  double t5979;
  double t5996;
  double t5998;
  double t6004;
  double t1970;
  double t2026;
  double t7157;
  double t7204;
  double t7205;
  double t2201;
  double t7225;
  double t2235;
  double t7254;
  double t7276;
  double t7277;
  double t7281;
  double t7284;
  double t2272;
  double t2378;
  double t2489;
  double t2569;
  double t2571;
  double t2721;
  double t2777;
  double t7443;
  double t7465;
  double t2847;
  double t7510;
  double t7523;
  double t7524;
  double t7530;
  double t7532;
  double t2865;
  double t7536;
  double t7540;
  double t7541;
  double t2926;
  double t2927;
  double t2941;
  double t2990;
  double t3011;
  double t3012;
  double t3131;
  double t3147;
  double t7571;
  double t7578;
  double t7634;
  double t7636;
  double t7640;
  double t3183;
  double t7648;
  double t3202;
  double t7658;
  double t7666;
  double t7667;
  double t3220;
  double t3254;
  double t3258;
  double t3297;
  double t3311;
  double t3919;
  double t3972;
  double t7719;
  double t7723;
  double t7725;
  double t4199;
  double t7729;
  double t4265;
  double t7738;
  double t7742;
  double t7743;
  double t7746;
  double t7747;
  double t4462;
  double t4584;
  double t4703;
  double t4823;
  double t4829;
  double t5261;
  double t5297;
  double t7773;
  double t7777;
  double t5322;
  double t7811;
  double t7815;
  double t7816;
  double t7817;
  double t7820;
  double t5332;
  double t7828;
  double t7842;
  double t7843;
  double t5372;
  double t5385;
  double t5431;
  double t5485;
  double t5532;
  double t5545;
  double t5952;
  double t5986;
  double t7890;
  double t7894;
  double t7941;
  double t7943;
  double t7944;
  double t6044;
  double t7948;
  double t6063;
  double t7954;
  double t7958;
  double t7961;
  double t6212;
  double t6327;
  double t6339;
  double t6837;
  double t7004;
  double t8075;
  double t8077;
  double t8079;
  double t7561;
  double t7563;
  double t8144;
  double t8147;
  double t7576;
  double t8136;
  double t8138;
  double t8140;
  double t7590;
  double t7602;
  double t7607;
  double t8171;
  double t8172;
  double t8174;
  double t8240;
  double t8241;
  double t8242;
  double t8264;
  double t8268;
  double t8273;
  double t7866;
  double t7872;
  double t8336;
  double t8343;
  double t7891;
  double t8369;
  double t8371;
  double t8374;
  double t7904;
  double t8390;
  double t8391;
  double t8393;
  double t7920;
  double t7922;
  double t8475;
  double t8477;
  double t8481;
  double t8494;
  double t8500;
  double t8504;
  double t8508;
  double t8509;
  double t8527;
  double t8531;
  double t8642;
  double t8653;
  double t8670;
  double t8672;
  double t8751;
  double t8752;
  double t8757;
  t28 = Cos(var1[13]);
  t15 = Cos(var1[14]);
  t16 = Sin(var1[13]);
  t36 = Sin(var1[14]);
  t85 = t28*t15;
  t89 = t16*t36;
  t90 = t85 + t89;
  t9 = Cos(var1[4]);
  t64 = Cos(var1[5]);
  t98 = Sin(var1[12]);
  t58 = Cos(var1[12]);
  t99 = Sin(var1[5]);
  t120 = -1.*t64*t98*t90;
  t127 = -1.*t58*t90*t99;
  t130 = t120 + t127;
  t131 = t9*t130;
  t57 = Sin(var1[4]);
  t19 = -1.*t15*t16;
  t50 = t28*t36;
  t51 = t19 + t50;
  t193 = t15*t16;
  t195 = -1.*t28*t36;
  t203 = t193 + t195;
  t256 = -1.*t58*t64;
  t259 = t98*t99;
  t261 = t256 + t259;
  t263 = t9*t261;
  t215 = t58*t64*t203;
  t228 = -1.*t98*t203*t99;
  t234 = t215 + t228;
  t272 = -1.*t64*t98*t203;
  t276 = -1.*t58*t203*t99;
  t277 = t272 + t276;
  t279 = t9*t277;
  t93 = t58*t64*t90;
  t103 = -1.*t98*t90*t99;
  t110 = t93 + t103;
  t132 = -1.*t28*t15;
  t138 = -1.*t16*t36;
  t142 = t132 + t138;
  t313 = Cos(var1[10]);
  t296 = Cos(var1[11]);
  t299 = Sin(var1[10]);
  t316 = Sin(var1[11]);
  t328 = -1.*t313*t296;
  t330 = -1.*t299*t316;
  t335 = t328 + t330;
  t340 = Sin(var1[9]);
  t327 = Cos(var1[9]);
  t358 = -1.*t64*t340*t335;
  t361 = -1.*t327*t335*t99;
  t364 = t358 + t361;
  t371 = t9*t364;
  t378 = t296*t299;
  t382 = -1.*t313*t316;
  t383 = t378 + t382;
  t302 = -1.*t296*t299;
  t319 = t313*t316;
  t323 = t302 + t319;
  t484 = t327*t64;
  t486 = -1.*t340*t99;
  t489 = t484 + t486;
  t499 = t9*t489;
  t403 = t313*t296;
  t404 = t299*t316;
  t410 = t403 + t404;
  t425 = t327*t64*t323;
  t428 = -1.*t340*t323*t99;
  t452 = t425 + t428;
  t537 = -1.*t64*t340*t323;
  t542 = -1.*t327*t323*t99;
  t548 = t537 + t542;
  t550 = t9*t548;
  t336 = t327*t64*t335;
  t345 = -1.*t340*t335*t99;
  t349 = t336 + t345;
  t53 = t9*t51;
  t112 = -1.*t57*t110;
  t116 = t53 + t112;
  t593 = Sin(var1[3]);
  t611 = Cos(var1[3]);
  t626 = t593*t57*t130;
  t627 = t611*t110;
  t633 = t626 + t627;
  t154 = t58*t64*t51;
  t169 = -1.*t98*t51*t99;
  t171 = t154 + t169;
  t267 = t9*t90;
  t269 = -1.*t57*t234;
  t270 = t267 + t269;
  t247 = -1.*t64*t98;
  t249 = -1.*t58*t99;
  t250 = t247 + t249;
  t750 = t611*t250;
  t752 = t593*t57*t261;
  t753 = t750 + t752;
  t725 = t64*t98*t203;
  t730 = t58*t203*t99;
  t731 = t725 + t730;
  t783 = t593*t57*t277;
  t784 = t611*t234;
  t785 = t783 + t784;
  t596 = t64*t98*t90;
  t600 = t58*t90*t99;
  t606 = t596 + t600;
  t288 = t58*t64*t142;
  t290 = -1.*t98*t142*t99;
  t291 = t288 + t290;
  t325 = t9*t323;
  t353 = -1.*t57*t349;
  t355 = t325 + t353;
  t941 = t593*t57*t364;
  t942 = t611*t349;
  t944 = t941 + t942;
  t390 = t327*t64*t383;
  t391 = -1.*t340*t383*t99;
  t393 = t390 + t391;
  t516 = t9*t410;
  t522 = -1.*t57*t452;
  t526 = t516 + t522;
  t473 = t64*t340;
  t476 = t327*t99;
  t479 = t473 + t476;
  t1076 = t611*t479;
  t1081 = t593*t57*t489;
  t1085 = t1076 + t1081;
  t1036 = t64*t340*t323;
  t1040 = t327*t323*t99;
  t1043 = t1036 + t1040;
  t1105 = t593*t57*t548;
  t1108 = t611*t452;
  t1110 = t1105 + t1108;
  t832 = t64*t340*t335;
  t839 = t327*t335*t99;
  t872 = t832 + t839;
  t560 = t327*t64*t410;
  t561 = -1.*t340*t410*t99;
  t565 = t560 + t561;
  t791 = t611*t606;
  t795 = -1.*t593*t116;
  t796 = t791 + t795;
  t622 = -1.*t51*t57;
  t623 = -1.*t9*t110;
  t624 = t622 + t623;
  t1155 = -1.*t611*t57*t130;
  t1157 = t593*t110;
  t1158 = t1155 + t1157;
  t637 = t64*t98*t51;
  t640 = t58*t51*t99;
  t648 = t637 + t640;
  t673 = t9*t142;
  t690 = -1.*t57*t171;
  t695 = t673 + t690;
  t740 = t58*t64;
  t741 = -1.*t98*t99;
  t742 = t740 + t741;
  t1180 = t593*t250;
  t1181 = -1.*t611*t57*t261;
  t1182 = t1180 + t1181;
  t733 = t611*t731;
  t734 = -1.*t593*t270;
  t735 = t733 + t734;
  t771 = -1.*t90*t57;
  t772 = -1.*t9*t234;
  t776 = t771 + t772;
  t1186 = -1.*t611*t57*t277;
  t1188 = t593*t234;
  t1191 = t1186 + t1188;
  t799 = t64*t98*t142;
  t800 = t58*t142*t99;
  t804 = t799 + t800;
  t815 = t9*t203;
  t823 = -1.*t57*t291;
  t825 = t815 + t823;
  t1114 = t611*t872;
  t1125 = -1.*t593*t355;
  t1128 = t1114 + t1125;
  t889 = -1.*t323*t57;
  t891 = -1.*t9*t349;
  t938 = t889 + t891;
  t1209 = -1.*t611*t57*t364;
  t1212 = t593*t349;
  t1223 = t1209 + t1212;
  t945 = t64*t340*t383;
  t946 = t327*t383*t99;
  t947 = t945 + t946;
  t986 = t9*t335;
  t1002 = -1.*t57*t393;
  t1012 = t986 + t1002;
  t1056 = -1.*t327*t64;
  t1058 = t340*t99;
  t1065 = t1056 + t1058;
  t1267 = t593*t479;
  t1286 = -1.*t611*t57*t489;
  t1291 = t1267 + t1286;
  t1044 = t611*t1043;
  t1048 = -1.*t593*t526;
  t1049 = t1044 + t1048;
  t1091 = -1.*t410*t57;
  t1098 = -1.*t9*t452;
  t1100 = t1091 + t1098;
  t1300 = -1.*t611*t57*t548;
  t1310 = t593*t452;
  t1312 = t1300 + t1310;
  t1131 = t64*t340*t410;
  t1132 = t327*t410*t99;
  t1134 = t1131 + t1132;
  t1136 = t9*t383;
  t1137 = -1.*t57*t565;
  t1140 = t1136 + t1137;
  t186 = t90*t57;
  t236 = t9*t234;
  t243 = t186 + t236;
  t1384 = -1.*t15;
  t1408 = 1. + t1384;
  t1410 = 0.50321*t1408;
  t1434 = 0.19821*t15;
  t1448 = t1410 + t1434;
  t1459 = -1.*t58;
  t1462 = 1. + t1459;
  t1466 = -1.*t28;
  t1468 = 1. + t1466;
  t1469 = 0.28121*t1468;
  t1472 = t28*t1448;
  t1491 = -0.305*t16*t36;
  t1492 = t1469 + t1472 + t1491;
  t1381 = 0.28121*t16;
  t1449 = -1.*t1448*t16;
  t1450 = -0.305*t28*t36;
  t1453 = t1381 + t1449 + t1450;
  t1464 = 0.15121*t1462;
  t1494 = t58*t1492;
  t1497 = t1464 + t1494;
  t1499 = t64*t1497;
  t1502 = -0.15121*t1462;
  t1503 = -0.15121*t58;
  t1505 = -0.15121*t98;
  t1508 = t98*t1492;
  t1509 = t1502 + t1503 + t1505 + t1508;
  t1511 = -1.*t1509*t99;
  t1517 = t1499 + t1511;
  t1611 = t1453*t57;
  t1612 = t9*t1517;
  t1614 = t1611 + t1612;
  t1454 = -1.*t1453*t57;
  t1592 = -1.*t9*t1517;
  t1606 = t1454 + t1592;
  t1781 = t9*t1453;
  t1783 = -1.*t57*t1517;
  t1802 = t1781 + t1783;
  t1650 = t64*t1509;
  t1658 = t1497*t99;
  t1686 = t1650 + t1658;
  t1749 = -1.*t742*t1686;
  t1764 = -1.*t9*t250*t1614;
  t1806 = t57*t250*t1802;
  t1815 = t1749 + t1764 + t1806;
  t1926 = -1.*t64*t1509;
  t1928 = -1.*t1497*t99;
  t1930 = t1926 + t1928;
  t1870 = t731*t1686;
  t1877 = t243*t1614;
  t1878 = t270*t1802;
  t1880 = t1870 + t1877 + t1878;
  t1893 = t9*t277*t1815;
  t1963 = -1.*t250*t1686;
  t1895 = Power(t9,2);
  t1940 = Power(t57,2);
  t2117 = 0.15121*t98;
  t2133 = -1.*t98*t1492;
  t2140 = t2117 + t2133;
  t2149 = t64*t2140;
  t2151 = t1503 + t1494;
  t2155 = -1.*t2151*t99;
  t2165 = t2149 + t2155;
  t1975 = -1.*t9*t261*t1614;
  t1983 = t57*t261*t1802;
  t2011 = t234*t1686;
  t2176 = t64*t2151;
  t2182 = t2140*t99;
  t2191 = t2176 + t2182;
  t2083 = t9*t277*t1614;
  t2085 = -1.*t57*t277*t1802;
  t2107 = t9*t261*t1880;
  t2277 = 0.28121*t28;
  t2287 = -1.*t28*t1448;
  t2292 = 0.305*t16*t36;
  t2308 = t2277 + t2287 + t2292;
  t2323 = t58*t64*t1453;
  t2326 = -1.*t98*t1453*t99;
  t2327 = t2323 + t2326;
  t280 = t51*t57;
  t281 = t9*t110;
  t284 = t280 + t281;
  t2247 = t64*t98*t1453;
  t2249 = t58*t1453*t99;
  t2271 = t2247 + t2249;
  t2312 = t2308*t57;
  t2328 = t9*t2327;
  t2331 = t2312 + t2328;
  t2338 = t9*t2308;
  t2339 = -1.*t57*t2327;
  t2344 = t2338 + t2339;
  t2461 = -0.305*t15*t16;
  t2472 = 0.305*t28*t36;
  t2475 = t2461 + t2472;
  t2490 = -0.305*t28*t15;
  t2491 = t2490 + t1491;
  t2518 = t58*t64*t2475;
  t2519 = -1.*t98*t2475*t99;
  t2520 = t2518 + t2519;
  t286 = t203*t57;
  t292 = t9*t291;
  t293 = t286 + t292;
  t2477 = t64*t98*t2475;
  t2482 = t58*t2475*t99;
  t2488 = t2477 + t2482;
  t2513 = t2491*t57;
  t2527 = t9*t2520;
  t2532 = t2513 + t2527;
  t2540 = t9*t2491;
  t2541 = -1.*t57*t2520;
  t2542 = t2540 + t2541;
  t2385 = t606*t1686;
  t2420 = t284*t1614;
  t2435 = t116*t1802;
  t2630 = -1.*t731*t1686;
  t2649 = -1.*t243*t1614;
  t2654 = -1.*t270*t1802;
  t2656 = t2630 + t2649 + t2654;
  t2703 = t2385 + t2420 + t2435;
  t2720 = -1.*t234*t1686;
  t2740 = -1.*t9*t277*t1614;
  t2741 = t57*t277*t1802;
  t2772 = t110*t1686;
  t2789 = t9*t130*t1614;
  t2790 = -1.*t57*t130*t1802;
  t2820 = t9*t130*t2656;
  t2832 = t9*t277*t2703;
  t144 = t142*t57;
  t179 = t9*t171;
  t182 = t144 + t179;
  t2944 = -1.*t606*t1686;
  t2955 = -1.*t284*t1614;
  t2974 = -1.*t116*t1802;
  t3045 = t742*t1686;
  t3046 = t9*t250*t1614;
  t3050 = -1.*t57*t250*t1802;
  t3057 = t3045 + t3046 + t3050;
  t3104 = t2944 + t2955 + t2974;
  t3121 = t9*t130*t3057;
  t3130 = t250*t1686;
  t3134 = t9*t261*t1614;
  t3138 = -1.*t57*t261*t1802;
  t3141 = -1.*t110*t1686;
  t3161 = -1.*t9*t130*t1614;
  t3162 = t57*t130*t1802;
  t3170 = t9*t261*t3104;
  t414 = t410*t57;
  t456 = t9*t452;
  t464 = t414 + t456;
  t3348 = -1.*t296;
  t3349 = 1. + t3348;
  t3352 = -0.50321*t3349;
  t3359 = -0.19821*t296;
  t3361 = t3352 + t3359;
  t3387 = -1.*t327;
  t3402 = 1. + t3387;
  t3410 = -1.*t313;
  t3411 = 1. + t3410;
  t3421 = -0.28121*t3411;
  t3449 = t313*t3361;
  t3455 = 0.305*t299*t316;
  t3468 = t3421 + t3449 + t3455;
  t3347 = 0.28121*t299;
  t3366 = t3361*t299;
  t3376 = -0.305*t313*t316;
  t3379 = t3347 + t3366 + t3376;
  t3408 = -0.15121*t3402;
  t3472 = t327*t3468;
  t3480 = t3408 + t3472;
  t3482 = t64*t3480;
  t3483 = 0.15121*t3402;
  t3491 = 0.15121*t327;
  t3492 = 0.15121*t340;
  t3494 = t340*t3468;
  t3496 = t3483 + t3491 + t3492 + t3494;
  t3501 = -1.*t3496*t99;
  t3514 = t3482 + t3501;
  t3563 = t3379*t57;
  t3584 = t9*t3514;
  t3614 = t3563 + t3584;
  t3384 = -1.*t3379*t57;
  t3526 = -1.*t9*t3514;
  t3530 = t3384 + t3526;
  t3755 = t9*t3379;
  t3764 = -1.*t57*t3514;
  t3767 = t3755 + t3764;
  t3667 = t64*t3496;
  t3675 = t3480*t99;
  t3683 = t3667 + t3675;
  t3684 = -1.*t1065*t3683;
  t3704 = -1.*t9*t479*t3614;
  t3795 = t57*t479*t3767;
  t3805 = t3684 + t3704 + t3795;
  t3872 = -1.*t64*t3496;
  t3880 = -1.*t3480*t99;
  t3886 = t3872 + t3880;
  t3841 = t1043*t3683;
  t3844 = t464*t3614;
  t3845 = t526*t3767;
  t3847 = t3841 + t3844 + t3845;
  t3871 = t9*t548*t3805;
  t3911 = -1.*t479*t3683;
  t4062 = -0.15121*t340;
  t4079 = -1.*t340*t3468;
  t4097 = t4062 + t4079;
  t4105 = t64*t4097;
  t4109 = t3491 + t3472;
  t4111 = -1.*t4109*t99;
  t4112 = t4105 + t4111;
  t3925 = -1.*t9*t489*t3614;
  t3928 = t57*t489*t3767;
  t3941 = t452*t3683;
  t4138 = t64*t4109;
  t4162 = t4097*t99;
  t4194 = t4138 + t4162;
  t3981 = t9*t548*t3614;
  t3987 = -1.*t57*t548*t3767;
  t4052 = t9*t489*t3847;
  t4407 = -0.28121*t299;
  t4421 = -1.*t3361*t299;
  t4441 = 0.305*t313*t316;
  t4448 = t4407 + t4421 + t4441;
  t4472 = 0.28121*t313;
  t4475 = t4472 + t3449 + t3455;
  t4488 = t327*t64*t4448;
  t4494 = -1.*t340*t4448*t99;
  t4496 = t4488 + t4494;
  t551 = t323*t57;
  t553 = t9*t349;
  t556 = t551 + t553;
  t4451 = t64*t340*t4448;
  t4456 = t327*t4448*t99;
  t4458 = t4451 + t4456;
  t4484 = t4475*t57;
  t4499 = t9*t4496;
  t4506 = t4484 + t4499;
  t4528 = t9*t4475;
  t4529 = -1.*t57*t4496;
  t4545 = t4528 + t4529;
  t4643 = 0.305*t296*t299;
  t4652 = t4643 + t3376;
  t4718 = -0.305*t313*t296;
  t4721 = -0.305*t299*t316;
  t4726 = t4718 + t4721;
  t4728 = t327*t64*t4652;
  t4729 = -1.*t340*t4652*t99;
  t4740 = t4728 + t4729;
  t557 = t383*t57;
  t572 = t9*t565;
  t581 = t557 + t572;
  t4662 = t64*t340*t4652;
  t4672 = t327*t4652*t99;
  t4688 = t4662 + t4672;
  t4727 = t4726*t57;
  t4742 = t9*t4740;
  t4745 = t4727 + t4742;
  t4765 = t9*t4726;
  t4770 = -1.*t57*t4740;
  t4792 = t4765 + t4770;
  t4596 = t872*t3683;
  t4622 = t556*t3614;
  t4627 = t355*t3767;
  t4969 = -1.*t1043*t3683;
  t4994 = -1.*t464*t3614;
  t5004 = -1.*t526*t3767;
  t5060 = t4969 + t4994 + t5004;
  t5204 = t4596 + t4622 + t4627;
  t5241 = -1.*t452*t3683;
  t5269 = -1.*t9*t548*t3614;
  t5281 = t57*t548*t3767;
  t5295 = t349*t3683;
  t5300 = t9*t364*t3614;
  t5304 = -1.*t57*t364*t3767;
  t5308 = t9*t364*t5060;
  t5312 = t9*t548*t5204;
  t377 = t335*t57;
  t401 = t9*t393;
  t402 = t377 + t401;
  t5432 = -1.*t872*t3683;
  t5455 = -1.*t556*t3614;
  t5457 = -1.*t355*t3767;
  t5665 = t1065*t3683;
  t5678 = t9*t479*t3614;
  t5681 = -1.*t57*t479*t3767;
  t5685 = t5665 + t5678 + t5681;
  t5836 = t5432 + t5455 + t5457;
  t5893 = t9*t364*t5685;
  t5948 = t479*t3683;
  t5959 = t9*t489*t3614;
  t5962 = -1.*t57*t489*t3767;
  t5979 = -1.*t349*t3683;
  t5996 = -1.*t9*t364*t3614;
  t5998 = t57*t364*t3767;
  t6004 = t9*t489*t5836;
  t1970 = -1.*t742*t1517;
  t2026 = t731*t1517;
  t7157 = -1.*t250*t1517;
  t7204 = t1749 + t7157;
  t7205 = t234*t7204;
  t2201 = -1.*t742*t2191;
  t7225 = -1.*t261*t1517;
  t2235 = t731*t2191;
  t7254 = t277*t1517;
  t7276 = t1453*t90;
  t7277 = t234*t1517;
  t7281 = t7276 + t1870 + t7277;
  t7284 = t250*t7281;
  t2272 = -1.*t742*t2271;
  t2378 = t731*t2271;
  t2489 = -1.*t742*t2488;
  t2569 = t731*t2488;
  t2571 = t804*t1686;
  t2721 = -1.*t731*t1517;
  t2777 = t606*t1517;
  t7443 = t1453*t51;
  t7465 = t110*t1517;
  t2847 = -1.*t731*t2191;
  t7510 = -1.*t277*t1517;
  t7523 = -1.*t1453*t90;
  t7524 = -1.*t234*t1517;
  t7530 = t7523 + t2630 + t7524;
  t7532 = t110*t7530;
  t2865 = t606*t2191;
  t7536 = t130*t1517;
  t7540 = t7443 + t2385 + t7465;
  t7541 = t234*t7540;
  t2926 = t2271*t606;
  t2927 = t648*t1686;
  t2941 = -1.*t731*t2271;
  t2990 = t2488*t606;
  t3011 = -1.*t731*t2488;
  t3012 = -1.*t804*t1686;
  t3131 = t742*t1517;
  t3147 = -1.*t606*t1517;
  t7571 = -1.*t1453*t51;
  t7578 = -1.*t110*t1517;
  t7634 = t250*t1517;
  t7636 = t3045 + t7634;
  t7640 = t110*t7636;
  t3183 = t742*t2191;
  t7648 = t261*t1517;
  t3202 = -1.*t606*t2191;
  t7658 = -1.*t130*t1517;
  t7666 = t7571 + t2944 + t7578;
  t7667 = t250*t7666;
  t3220 = t742*t2271;
  t3254 = -1.*t2271*t606;
  t3258 = -1.*t648*t1686;
  t3297 = t742*t2488;
  t3311 = -1.*t2488*t606;
  t3919 = -1.*t1065*t3514;
  t3972 = t1043*t3514;
  t7719 = -1.*t479*t3514;
  t7723 = t3684 + t7719;
  t7725 = t452*t7723;
  t4199 = -1.*t1065*t4194;
  t7729 = -1.*t489*t3514;
  t4265 = t1043*t4194;
  t7738 = t548*t3514;
  t7742 = t3379*t410;
  t7743 = t452*t3514;
  t7746 = t7742 + t3841 + t7743;
  t7747 = t479*t7746;
  t4462 = -1.*t1065*t4458;
  t4584 = t4458*t1043;
  t4703 = -1.*t1065*t4688;
  t4823 = t4688*t1043;
  t4829 = t1134*t3683;
  t5261 = -1.*t1043*t3514;
  t5297 = t872*t3514;
  t7773 = t3379*t323;
  t7777 = t349*t3514;
  t5322 = -1.*t1043*t4194;
  t7811 = -1.*t548*t3514;
  t7815 = -1.*t3379*t410;
  t7816 = -1.*t452*t3514;
  t7817 = t7815 + t4969 + t7816;
  t7820 = t349*t7817;
  t5332 = t872*t4194;
  t7828 = t364*t3514;
  t7842 = t7773 + t4596 + t7777;
  t7843 = t452*t7842;
  t5372 = t4458*t872;
  t5385 = t947*t3683;
  t5431 = -1.*t4458*t1043;
  t5485 = t4688*t872;
  t5532 = -1.*t4688*t1043;
  t5545 = -1.*t1134*t3683;
  t5952 = t1065*t3514;
  t5986 = -1.*t872*t3514;
  t7890 = -1.*t3379*t323;
  t7894 = -1.*t349*t3514;
  t7941 = t479*t3514;
  t7943 = t5665 + t7941;
  t7944 = t349*t7943;
  t6044 = t1065*t4194;
  t7948 = t489*t3514;
  t6063 = -1.*t872*t4194;
  t7954 = -1.*t364*t3514;
  t7958 = t7890 + t5432 + t7894;
  t7961 = t479*t7958;
  t6212 = t1065*t4458;
  t6327 = -1.*t4458*t872;
  t6339 = -1.*t947*t3683;
  t6837 = t1065*t4688;
  t7004 = -1.*t4688*t872;
  t8075 = t98*t1497;
  t8077 = -1.*t58*t1509;
  t8079 = t8075 + t8077;
  t7561 = t1453*t142;
  t7563 = t51*t2308;
  t8144 = Power(t58,2);
  t8147 = Power(t98,2);
  t7576 = -1.*t2308*t90;
  t8136 = -1.*t58*t203*t1497;
  t8138 = -1.*t98*t203*t1509;
  t8140 = t7523 + t8136 + t8138;
  t7590 = t51*t2491;
  t7602 = -1.*t203*t1453;
  t7607 = -1.*t2491*t90;
  t8171 = t58*t90*t1497;
  t8172 = t98*t90*t1509;
  t8174 = t7443 + t8171 + t8172;
  t8240 = -1.*t98*t1497;
  t8241 = t58*t1509;
  t8242 = t8240 + t8241;
  t8264 = -1.*t340*t3480;
  t8268 = t327*t3496;
  t8273 = t8264 + t8268;
  t7866 = t3379*t335;
  t7872 = t323*t4475;
  t8336 = Power(t327,2);
  t8343 = Power(t340,2);
  t7891 = -1.*t4475*t410;
  t8369 = -1.*t327*t323*t3480;
  t8371 = -1.*t340*t323*t3496;
  t8374 = t7815 + t8369 + t8371;
  t7904 = t323*t4726;
  t8390 = t327*t335*t3480;
  t8391 = t340*t335*t3496;
  t8393 = t7773 + t8390 + t8391;
  t7920 = -1.*t383*t3379;
  t7922 = -1.*t4726*t410;
  t8475 = t340*t3480;
  t8477 = -1.*t327*t3496;
  t8481 = t8475 + t8477;
  t8494 = 0.15121*t383;
  t8500 = 0.15121*t323;
  t8504 = t8494 + t8500;
  t8508 = t335*t3468;
  t8509 = t7773 + t8508;
  t8527 = -1.*t323*t3468;
  t8531 = t8527 + t7815;
  t8642 = -1.*t203*t1492;
  t8653 = t8642 + t7523;
  t8670 = t1492*t90;
  t8672 = t7443 + t8670;
  t8751 = -0.15121*t142;
  t8752 = -0.15121*t90;
  t8757 = t8751 + t8752;
  p_output1[0]=t116;
  p_output1[1]=t131;
  p_output1[2]=t131;
  p_output1[3]=t182;
  p_output1[4]=t243;
  p_output1[5]=-1.*t250*t57;
  p_output1[6]=t263;
  p_output1[7]=t263;
  p_output1[8]=t270;
  p_output1[9]=t279;
  p_output1[10]=t279;
  p_output1[11]=t284;
  p_output1[12]=t293;
  p_output1[13]=t355;
  p_output1[14]=t371;
  p_output1[15]=t371;
  p_output1[16]=t402;
  p_output1[17]=t464;
  p_output1[18]=-1.*t479*t57;
  p_output1[19]=t499;
  p_output1[20]=t499;
  p_output1[21]=t526;
  p_output1[22]=t550;
  p_output1[23]=t550;
  p_output1[24]=t556;
  p_output1[25]=t581;
  p_output1[26]=-1.*t593*t606 - 1.*t116*t611;
  p_output1[27]=-1.*t593*t624;
  p_output1[28]=t633;
  p_output1[29]=t633;
  p_output1[30]=t611*t648 - 1.*t593*t695;
  p_output1[31]=t735;
  p_output1[32]=t250*t57*t611 - 1.*t593*t742;
  p_output1[33]=t250*t593*t9;
  p_output1[34]=t753;
  p_output1[35]=t753;
  p_output1[36]=-1.*t270*t611 - 1.*t593*t731;
  p_output1[37]=-1.*t593*t776;
  p_output1[38]=t785;
  p_output1[39]=t785;
  p_output1[40]=t796;
  p_output1[41]=t611*t804 - 1.*t593*t825;
  p_output1[42]=-1.*t355*t611 - 1.*t593*t872;
  p_output1[43]=-1.*t593*t938;
  p_output1[44]=t944;
  p_output1[45]=t944;
  p_output1[46]=-1.*t1012*t593 + t611*t947;
  p_output1[47]=t1049;
  p_output1[48]=-1.*t1065*t593 + t479*t57*t611;
  p_output1[49]=t479*t593*t9;
  p_output1[50]=t1085;
  p_output1[51]=t1085;
  p_output1[52]=-1.*t1043*t593 - 1.*t526*t611;
  p_output1[53]=-1.*t1100*t593;
  p_output1[54]=t1110;
  p_output1[55]=t1110;
  p_output1[56]=t1128;
  p_output1[57]=-1.*t1140*t593 + t1134*t611;
  p_output1[58]=t796;
  p_output1[59]=t611*t624;
  p_output1[60]=t1158;
  p_output1[61]=t1158;
  p_output1[62]=t593*t648 + t611*t695;
  p_output1[63]=t270*t611 + t593*t731;
  p_output1[64]=t250*t57*t593 + t611*t742;
  p_output1[65]=-1.*t250*t611*t9;
  p_output1[66]=t1182;
  p_output1[67]=t1182;
  p_output1[68]=t735;
  p_output1[69]=t611*t776;
  p_output1[70]=t1191;
  p_output1[71]=t1191;
  p_output1[72]=t593*t606 + t116*t611;
  p_output1[73]=t593*t804 + t611*t825;
  p_output1[74]=t1128;
  p_output1[75]=t611*t938;
  p_output1[76]=t1223;
  p_output1[77]=t1223;
  p_output1[78]=t1012*t611 + t593*t947;
  p_output1[79]=t1043*t593 + t526*t611;
  p_output1[80]=t479*t57*t593 + t1065*t611;
  p_output1[81]=-1.*t479*t611*t9;
  p_output1[82]=t1291;
  p_output1[83]=t1291;
  p_output1[84]=t1049;
  p_output1[85]=t1100*t611;
  p_output1[86]=t1312;
  p_output1[87]=t1312;
  p_output1[88]=t355*t611 + t593*t872;
  p_output1[89]=t1134*t593 + t1140*t611;
  p_output1[90]=t1815*t270 - 1.*t1880*t250*t57 + t243*(t1606*t250*t57 + t1614*t250*t57) + t250*(t1802*t243 + t1606*t270 + t1614*t270 + t1802*t776)*t9;
  p_output1[91]=t1893 + t2107 + t243*(t1963 + t1970 + t1975 + t1983 - 1.*t1895*t1930*t250 - 1.*t1930*t1940*t250) + t250*t9*(t2011 + t2026 + t2083 + t2085 - 1.*t1930*t270*t57 + t1930*t243*t9);
  p_output1[92]=t1893 + t2107 + t243*(t1963 + t1975 + t1983 + t2201 - 1.*t1895*t2165*t250 - 1.*t1940*t2165*t250) + t250*t9*(t2011 + t2083 + t2085 + t2235 - 1.*t2165*t270*t57 + t2165*t243*t9);
  p_output1[93]=t1815*t284 + t250*(t2378 + t2385 + t2420 + t2331*t243 + t2435 + t2344*t270)*t9 + t243*(t2272 + t2344*t250*t57 - 1.*t2331*t250*t9);
  p_output1[94]=t1815*t293 + t250*(t243*t2532 + t2569 + t2571 + t2542*t270 + t1614*t293 + t1802*t825)*t9 + t243*(t2489 + t250*t2542*t57 - 1.*t250*t2532*t9);
  p_output1[95]=t116*t2656 + t270*t2703 + t243*(t116*t1606 + t116*t1614 + t1802*t284 + t1802*t624) + t284*(-1.*t1802*t243 - 1.*t1606*t270 - 1.*t1614*t270 - 1.*t1802*t776);
  p_output1[96]=t2820 + t2832 + t284*(t2720 + t2721 + t2740 + t2741 + t1930*t270*t57 - 1.*t1930*t243*t9) + t243*(t2772 + t2777 + t2789 + t2790 - 1.*t116*t1930*t57 + t1930*t284*t9);
  p_output1[97]=t2820 + t2832 + t284*(t2720 + t2740 + t2741 + t2847 + t2165*t270*t57 - 1.*t2165*t243*t9) + t243*(t2772 + t2789 + t2790 + t2865 - 1.*t116*t2165*t57 + t2165*t284*t9);
  p_output1[98]=t182*t2656 + t2703*t284 + t284*(-1.*t2331*t243 - 1.*t2344*t270 + t2941 + t2944 + t2955 + t2974) + t243*(t1614*t182 + t116*t2344 + t2331*t284 + t2926 + t2927 + t1802*t695);
  p_output1[99]=t243*t2656 + t2703*t293 + t243*(t1870 + t1877 + t1878 + t116*t2542 + t2532*t284 + t2990) + t284*(-1.*t243*t2532 - 1.*t2542*t270 - 1.*t1614*t293 + t3011 + t3012 - 1.*t1802*t825);
  p_output1[100]=t116*t3057 - 1.*t250*t3104*t57 + t284*(-1.*t1606*t250*t57 - 1.*t1614*t250*t57) + t250*(-1.*t116*t1606 - 1.*t116*t1614 - 1.*t1802*t284 - 1.*t1802*t624)*t9;
  p_output1[101]=t3121 + t284*(t1895*t1930*t250 + t1930*t1940*t250 + t3130 + t3131 + t3134 + t3138) + t3170 + t250*t9*(t3141 + t3147 + t3161 + t3162 + t116*t1930*t57 - 1.*t1930*t284*t9);
  p_output1[102]=t3121 + t3170 + t284*(t1895*t2165*t250 + t1940*t2165*t250 + t3130 + t3134 + t3138 + t3183) + t250*t9*(t3141 + t3161 + t3162 + t3202 + t116*t2165*t57 - 1.*t2165*t284*t9);
  p_output1[103]=t182*t3057 + t250*(-1.*t1614*t182 - 1.*t116*t2344 - 1.*t2331*t284 + t3254 + t3258 - 1.*t1802*t695)*t9 + t284*(t3220 - 1.*t2344*t250*t57 + t2331*t250*t9);
  p_output1[104]=t243*t3057 + t250*(-1.*t116*t2542 + t2630 + t2649 + t2654 - 1.*t2532*t284 + t3311)*t9 + t284*(t3297 - 1.*t250*t2542*t57 + t250*t2532*t9);
  p_output1[105]=t3805*t526 - 1.*t3847*t479*t57 + t464*(t3530*t479*t57 + t3614*t479*t57) + t479*(t1100*t3767 + t3767*t464 + t3530*t526 + t3614*t526)*t9;
  p_output1[106]=t3871 + t4052 + t464*(t3911 + t3919 + t3925 + t3928 - 1.*t1895*t3886*t479 - 1.*t1940*t3886*t479) + t479*t9*(t3941 + t3972 + t3981 + t3987 - 1.*t3886*t526*t57 + t3886*t464*t9);
  p_output1[107]=t3871 + t4052 + t464*(t3911 + t3925 + t3928 + t4199 - 1.*t1895*t4112*t479 - 1.*t1940*t4112*t479) + t479*t9*(t3941 + t3981 + t3987 + t4265 - 1.*t4112*t526*t57 + t4112*t464*t9);
  p_output1[108]=t3805*t556 + t479*(t4584 + t4596 + t4622 + t4627 + t4506*t464 + t4545*t526)*t9 + t464*(t4462 + t4545*t479*t57 - 1.*t4506*t479*t9);
  p_output1[109]=t3805*t581 + t479*(t1140*t3767 + t464*t4745 + t4823 + t4829 + t4792*t526 + t3614*t581)*t9 + t464*(t4703 + t479*t4792*t57 - 1.*t4745*t479*t9);
  p_output1[110]=t355*t5060 + t5204*t526 + (-1.*t1100*t3767 - 1.*t3767*t464 - 1.*t3530*t526 - 1.*t3614*t526)*t556 + t464*(t3530*t355 + t355*t3614 + t3767*t556 + t3767*t938);
  p_output1[111]=t5308 + t5312 + t556*(t5241 + t5261 + t5269 + t5281 + t3886*t526*t57 - 1.*t3886*t464*t9) + t464*(t5295 + t5297 + t5300 + t5304 - 1.*t355*t3886*t57 + t3886*t556*t9);
  p_output1[112]=t5308 + t5312 + t556*(t5241 + t5269 + t5281 + t5322 + t4112*t526*t57 - 1.*t4112*t464*t9) + t464*(t5295 + t5300 + t5304 + t5332 - 1.*t355*t4112*t57 + t4112*t556*t9);
  p_output1[113]=t402*t5060 + t5204*t556 + (-1.*t4506*t464 - 1.*t4545*t526 + t5431 + t5432 + t5455 + t5457)*t556 + t464*(t1012*t3767 + t3614*t402 + t355*t4545 + t5372 + t5385 + t4506*t556);
  p_output1[114]=t464*t5060 + t464*(t3841 + t3844 + t3845 + t355*t4792 + t5485 + t4745*t556) + t5204*t581 + t556*(-1.*t1140*t3767 - 1.*t464*t4745 - 1.*t4792*t526 + t5532 + t5545 - 1.*t3614*t581);
  p_output1[115]=t355*t5685 + t556*(-1.*t3530*t479*t57 - 1.*t3614*t479*t57) - 1.*t479*t57*t5836 + t479*t9*(-1.*t3530*t355 - 1.*t355*t3614 - 1.*t3767*t556 - 1.*t3767*t938);
  p_output1[116]=t5893 + t556*(t1895*t3886*t479 + t1940*t3886*t479 + t5948 + t5952 + t5959 + t5962) + t6004 + t479*t9*(t355*t3886*t57 + t5979 + t5986 + t5996 + t5998 - 1.*t3886*t556*t9);
  p_output1[117]=t5893 + t6004 + t556*(t1895*t4112*t479 + t1940*t4112*t479 + t5948 + t5959 + t5962 + t6044) + t479*t9*(t355*t4112*t57 + t5979 + t5996 + t5998 + t6063 - 1.*t4112*t556*t9);
  p_output1[118]=t402*t5685 + t479*(-1.*t1012*t3767 - 1.*t3614*t402 - 1.*t355*t4545 - 1.*t4506*t556 + t6327 + t6339)*t9 + t556*(-1.*t4545*t479*t57 + t6212 + t4506*t479*t9);
  p_output1[119]=t464*t5685 + t479*(-1.*t355*t4792 + t4969 + t4994 + t5004 - 1.*t4745*t556 + t7004)*t9 + t556*(-1.*t479*t4792*t57 + t6837 + t4745*t479*t9);
  p_output1[120]=t7205 + t7284 + (t1963 + t1970 - 1.*t1930*t250 + t7225)*t731 + (t2011 + t2026 + t1930*t234 + t7254)*t742;
  p_output1[121]=t7205 + t7284 + (t1963 + t2201 - 1.*t2165*t250 + t7225)*t731 + (t2011 + t2235 + t2165*t234 + t7254)*t742;
  p_output1[122]=t606*t7204 + (t2272 - 1.*t2327*t250)*t731 + t742*(t2327*t234 + t2378 + t2385 + t7443 + t7465 + t2308*t90);
  p_output1[123]=(t2489 - 1.*t250*t2520)*t731 + t7204*t804 + t742*(t1453*t203 + t234*t2520 + t2569 + t2571 + t1517*t291 + t2491*t90);
  p_output1[124]=t606*(-1.*t1930*t234 + t2720 + t2721 + t7510) + t7532 + t731*(t110*t1930 + t2772 + t2777 + t7536) + t7541;
  p_output1[125]=t606*(-1.*t2165*t234 + t2720 + t2847 + t7510) + t7532 + t731*(t110*t2165 + t2772 + t2865 + t7536) + t7541;
  p_output1[126]=t648*t7530 + t606*t7540 + t731*(t1517*t171 + t110*t2327 + t2926 + t2927 + t7561 + t7563) + t606*(-1.*t2327*t234 + t2941 + t2944 + t7571 + t7576 + t7578);
  p_output1[127]=t731*t7530 + t731*(t1870 + t110*t2520 + t2990 + t7276 + t7277 + t7590) + t606*(-1.*t234*t2520 - 1.*t1517*t291 + t3011 + t3012 + t7602 + t7607) + t7540*t804;
  p_output1[128]=t7640 + t606*(t1930*t250 + t3130 + t3131 + t7648) + t742*(-1.*t110*t1930 + t3141 + t3147 + t7658) + t7667;
  p_output1[129]=t7640 + t606*(t2165*t250 + t3130 + t3183 + t7648) + t742*(-1.*t110*t2165 + t3141 + t3202 + t7658) + t7667;
  p_output1[130]=(t2327*t250 + t3220)*t606 + (-1.*t142*t1453 - 1.*t1517*t171 - 1.*t110*t2327 + t3254 + t3258 - 1.*t2308*t51)*t742 + t648*t7636;
  p_output1[131]=(t250*t2520 + t3297)*t606 + t742*(-1.*t110*t2520 + t2630 + t3311 - 1.*t2491*t51 + t7523 + t7524) + t731*t7636;
  p_output1[132]=t7725 + t1043*(t3911 + t3919 - 1.*t3886*t479 + t7729) + t1065*(t3941 + t3972 + t3886*t452 + t7738) + t7747;
  p_output1[133]=t7725 + t1043*(t3911 + t4199 - 1.*t4112*t479 + t7729) + t1065*(t3941 + t4265 + t4112*t452 + t7738) + t7747;
  p_output1[134]=t1043*(t4462 - 1.*t4496*t479) + t1065*(t410*t4475 + t4496*t452 + t4584 + t4596 + t7773 + t7777) + t7723*t872;
  p_output1[135]=t1043*(t4703 - 1.*t4740*t479) + t1065*(t3379*t383 + t410*t4726 + t452*t4740 + t4823 + t4829 + t3514*t565) + t1134*t7723;
  p_output1[136]=t7820 + t1043*(t349*t3886 + t5295 + t5297 + t7828) + t7843 + (-1.*t3886*t452 + t5241 + t5261 + t7811)*t872;
  p_output1[137]=t7820 + t1043*(t349*t4112 + t5295 + t5332 + t7828) + t7843 + (-1.*t4112*t452 + t5241 + t5322 + t7811)*t872;
  p_output1[138]=t1043*(t3514*t393 + t349*t4496 + t5372 + t5385 + t7866 + t7872) + t7842*t872 + (-1.*t4496*t452 + t5431 + t5432 + t7890 + t7891 + t7894)*t872 + t7817*t947;
  p_output1[139]=t1043*t7817 + t1134*t7842 + t1043*(t3841 + t349*t4740 + t5485 + t7742 + t7743 + t7904) + (-1.*t452*t4740 + t5532 + t5545 - 1.*t3514*t565 + t7920 + t7922)*t872;
  p_output1[140]=t7944 + t1065*(-1.*t349*t3886 + t5979 + t5986 + t7954) + t7961 + (t3886*t479 + t5948 + t5952 + t7948)*t872;
  p_output1[141]=t7944 + t1065*(-1.*t349*t4112 + t5979 + t6063 + t7954) + t7961 + (t4112*t479 + t5948 + t6044 + t7948)*t872;
  p_output1[142]=t1065*(-1.*t335*t3379 - 1.*t3514*t393 - 1.*t323*t4475 - 1.*t349*t4496 + t6327 + t6339) + (t4496*t479 + t6212)*t872 + t7943*t947;
  p_output1[143]=t1065*(-1.*t323*t4726 - 1.*t349*t4740 + t4969 + t7004 + t7815 + t7816) + t1043*t7943 + (t4740*t479 + t6837)*t872;
  p_output1[144]=t90*(t1497*t58 - 1.*t2151*t58 + t1509*t98 + t2140*t98);
  p_output1[145]=t51*t8079;
  p_output1[146]=t203*t8079;
  p_output1[147]=t51*(-1.*t1509*t203*t58 - 1.*t203*t2140*t58 + t1497*t203*t98 - 1.*t203*t2151*t98) + t90*(t1509*t58*t90 + t2140*t58*t90 - 1.*t1497*t90*t98 + t2151*t90*t98);
  p_output1[148]=t142*t8140 + t51*t8174 + t90*(t1497*t51*t58 + t7561 + t7563 + t1453*t8144*t90 + t1453*t8147*t90 + t1509*t51*t98) + t51*(t7571 + t7576 - 1.*t1453*t203*t8144 - 1.*t1453*t203*t8147 - 1.*t1497*t58*t90 - 1.*t1509*t90*t98);
  p_output1[149]=t203*t8174 + t8140*t90 + t51*(-1.*t142*t1497*t58 + t7602 + t7607 - 1.*t203*t2475*t8144 - 1.*t203*t2475*t8147 - 1.*t142*t1509*t98) + t90*(t1497*t203*t58 + t7276 + t7590 + t2475*t8144*t90 + t2475*t8147*t90 + t1509*t203*t98);
  p_output1[150]=t51*(-1.*t1497*t58 + t2151*t58 - 1.*t1509*t98 - 1.*t2140*t98);
  p_output1[151]=t142*t8242;
  p_output1[152]=t8242*t90;
  p_output1[153]=t410*(-1.*t327*t3480 - 1.*t340*t3496 - 1.*t340*t4097 + t327*t4109);
  p_output1[154]=t323*t8273;
  p_output1[155]=t383*t8273;
  p_output1[156]=t323*(t323*t340*t3480 - 1.*t323*t327*t3496 - 1.*t323*t327*t4097 - 1.*t323*t340*t4109) + t410*(-1.*t335*t340*t3480 + t327*t335*t3496 + t327*t335*t4097 + t335*t340*t4109);
  p_output1[157]=t323*(-1.*t327*t335*t3480 - 1.*t335*t340*t3496 + t7890 + t7891 - 1.*t323*t4448*t8336 - 1.*t323*t4448*t8343) + t410*(t327*t3480*t383 + t340*t3496*t383 + t7866 + t7872 + t335*t4448*t8336 + t335*t4448*t8343) + t335*t8374 + t323*t8393;
  p_output1[158]=t323*(-1.*t327*t3480*t410 - 1.*t340*t3496*t410 + t7920 + t7922 - 1.*t323*t4652*t8336 - 1.*t323*t4652*t8343) + t410*(t323*t327*t3480 + t323*t340*t3496 + t7742 + t7904 + t335*t4652*t8336 + t335*t4652*t8343) + t410*t8374 + t383*t8393;
  p_output1[159]=t323*(t327*t3480 + t340*t3496 + t340*t4097 - 1.*t327*t4109);
  p_output1[160]=t335*t8481;
  p_output1[161]=t410*t8481;
  p_output1[162]=t8504;
  p_output1[163]=t8504;
  p_output1[164]=t410*(t3468*t383 + t335*t4448 + t7866 + t7872) + t323*(-1.*t335*t3468 - 1.*t323*t4448 + t7890 + t7891) + t323*t8509 + t335*t8531;
  p_output1[165]=t410*(t323*t3468 + t335*t4652 + t7742 + t7904) + t323*(-1.*t3468*t410 - 1.*t323*t4652 + t7920 + t7922) + t383*t8509 + t410*t8531;
  p_output1[166]=0.28121*t296 - 0.305*Power(t296,2) + t296*t3361;
  p_output1[167]=-0.28121*t316 + 0.305*t296*t316 - 1.*t316*t3361;
  p_output1[168]=t142*t8653 + t51*t8672 + (t1492*t51 + t7276 + t7561 + t7563)*t90 + t51*(t7571 + t7576 + t7602 - 1.*t1492*t90);
  p_output1[169]=t51*(-1.*t142*t1492 - 1.*t203*t2475 + t7602 + t7607) + t203*t8672 + t8653*t90 + t90*(t1492*t203 + t7276 + t7590 + t2475*t90);
  p_output1[170]=t8757;
  p_output1[171]=t8757;
  p_output1[172]=0.28121*t15 - 1.*t1448*t15 - 0.305*Power(t15,2);
  p_output1[173]=-0.28121*t36 + t1448*t36 + 0.305*t15*t36;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
