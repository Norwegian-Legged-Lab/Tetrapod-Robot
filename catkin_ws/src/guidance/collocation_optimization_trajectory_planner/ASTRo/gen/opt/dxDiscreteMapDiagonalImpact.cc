/*
 * Automatically Generated from Mathematica.
 * Thu 2 Jun 2022 14:55:28 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4,const double *var5)
{
  double t15228;
  double t15243;
  double t16858;
  double t16850;
  double t18848;
  double t18884;
  double t18831;
  double t18901;
  double t16782;
  double t21515;
  double t21594;
  double t22111;
  double t20650;
  double t23370;
  double t23375;
  double t23410;
  double t18543;
  double t23551;
  double t23555;
  double t23548;
  double t23556;
  double t17807;
  double t23572;
  double t23578;
  double t23579;
  double t23552;
  double t23567;
  double t23568;
  double t18864;
  double t18919;
  double t20644;
  double t20661;
  double t22555;
  double t22556;
  double t22872;
  double t23241;
  double t23242;
  double t23844;
  double t23845;
  double t23849;
  double t23850;
  double t23857;
  double t23264;
  double t23431;
  double t23450;
  double t23464;
  double t23479;
  double t23524;
  double t23883;
  double t23909;
  double t23970;
  double t24030;
  double t24031;
  double t16817;
  double t16866;
  double t16875;
  double t24078;
  double t24259;
  double t24038;
  double t24039;
  double t24040;
  double t24360;
  double t24361;
  double t24362;
  double t24363;
  double t24364;
  double t17808;
  double t18598;
  double t18723;
  double t23592;
  double t23595;
  double t23596;
  double t24379;
  double t24380;
  double t24502;
  double t24503;
  double t24504;
  double t24508;
  double t24537;
  double t24378;
  double t24505;
  double t24506;
  double t23569;
  double t23580;
  double t23585;
  double t23586;
  double t23587;
  double t23588;
  double t23608;
  double t23631;
  double t23683;
  double t23706;
  double t23768;
  double t23772;
  double t24681;
  double t24692;
  double t24690;
  double t24707;
  double t24714;
  double t24715;
  double t24716;
  double t24683;
  double t24684;
  double t24685;
  double t24686;
  double t24687;
  double t24713;
  double t24718;
  double t24730;
  double t24731;
  double t24732;
  double t24742;
  double t24743;
  double t24744;
  double t24745;
  double t24746;
  double t24691;
  double t24708;
  double t24709;
  double t24760;
  double t24761;
  double t24756;
  double t24757;
  double t24758;
  double t24752;
  double t24753;
  double t24754;
  double t24729;
  double t24733;
  double t24734;
  double t24735;
  double t24736;
  double t24737;
  double t24793;
  double t24804;
  double t24802;
  double t24805;
  double t24810;
  double t24811;
  double t24812;
  double t24795;
  double t24796;
  double t24797;
  double t24798;
  double t24799;
  double t24809;
  double t24803;
  double t24806;
  double t24807;
  double t24814;
  double t24837;
  double t24275;
  double t24276;
  double t24277;
  double t24278;
  double t24279;
  double t24280;
  double t24282;
  double t24283;
  double t24284;
  double t24311;
  double t24312;
  double t24313;
  double t24580;
  double t24584;
  double t24587;
  double t24590;
  double t24591;
  double t24592;
  double t24594;
  double t24595;
  double t24596;
  double t24597;
  double t24599;
  double t24600;
  double t24771;
  double t24772;
  double t24773;
  double t24774;
  double t24775;
  double t24776;
  double t24778;
  double t24779;
  double t24780;
  double t24781;
  double t24782;
  double t24783;
  double t24712;
  double t24717;
  double t24719;
  double t24720;
  double t24721;
  double t24722;
  double t24808;
  double t24813;
  double t24815;
  double t24816;
  double t24817;
  double t24818;
  double t24823;
  double t24824;
  double t24825;
  double t24826;
  double t24827;
  double t24828;
  double t24829;
  double t24830;
  double t24831;
  double t24899;
  double t24900;
  double t24901;
  double t24902;
  double t24903;
  double t24904;
  double t24889;
  double t24890;
  double t24891;
  double t24923;
  double t24924;
  double t24925;
  double t24926;
  double t24927;
  double t24907;
  double t24908;
  double t24909;
  double t24910;
  double t24911;
  double t24912;
  double t24943;
  double t24944;
  double t24939;
  double t24940;
  double t24941;
  double t24957;
  double t24958;
  double t24959;
  double t24963;
  double t24969;
  double t24970;
  double t24971;
  double t24973;
  double t24974;
  double t24975;
  double t24976;
  double t24041;
  double t24964;
  double t24986;
  double t24987;
  double t24989;
  double t24990;
  double t24266;
  double t25000;
  double t25001;
  double t25002;
  double t25006;
  double t25012;
  double t25013;
  double t25014;
  double t25016;
  double t25017;
  double t25018;
  double t25019;
  double t24507;
  double t25007;
  double t25029;
  double t25030;
  double t25032;
  double t25033;
  double t24575;
  double t25043;
  double t25044;
  double t25045;
  double t25046;
  double t25047;
  double t25052;
  double t25053;
  double t25054;
  double t25056;
  double t25057;
  double t25058;
  double t25059;
  double t24759;
  double t25069;
  double t25070;
  double t25072;
  double t25073;
  double t24766;
  double t24965;
  double t24960;
  double t24961;
  double t24850;
  double t24851;
  double t24852;
  double t25008;
  double t25003;
  double t25004;
  double t24855;
  double t24856;
  double t24857;
  double t25049;
  double t24860;
  double t24861;
  double t24862;
  double t25142;
  double t25143;
  double t25144;
  double t25145;
  double t25146;
  double t25148;
  double t24894;
  double t24895;
  double t24896;
  double t25154;
  double t25155;
  double t25156;
  double t25158;
  double t25159;
  double t25160;
  double t25161;
  double t25179;
  double t25180;
  double t25182;
  double t25183;
  double t24942;
  double t24949;
  double t25205;
  double t25208;
  double t25220;
  double t25221;
  double t25222;
  double t25231;
  double t25232;
  double t25233;
  double t25242;
  double t25243;
  double t25244;
  double t25249;
  double t25250;
  double t25251;
  double t25253;
  double t25254;
  double t25255;
  double t25259;
  double t25260;
  double t25261;
  double t25263;
  double t25264;
  double t25265;
  double t25269;
  double t25270;
  double t25271;
  double t25273;
  double t25274;
  double t25275;
  double t25279;
  double t25280;
  double t25281;
  double t25283;
  double t25284;
  double t25285;
  double t25289;
  double t25290;
  double t25291;
  double t25293;
  double t25294;
  double t25295;
  double t25299;
  double t25300;
  double t25301;
  double t25303;
  double t25304;
  double t25305;
  double t25309;
  double t25310;
  double t25311;
  double t25313;
  double t25314;
  double t25315;
  double t25319;
  double t25320;
  double t25321;
  double t25323;
  double t25324;
  double t25325;
  double t25329;
  double t25330;
  double t25331;
  double t25333;
  double t25334;
  double t25335;
  double t25339;
  double t25340;
  double t25341;
  double t25343;
  double t25344;
  double t25345;
  double t25349;
  double t25350;
  double t25351;
  double t25353;
  double t25354;
  double t25355;
  double t25359;
  double t25360;
  double t25361;
  double t25363;
  double t25364;
  double t25365;
  double t25373;
  double t25374;
  double t25375;
  double t25380;
  double t25381;
  double t25382;
  double t25384;
  double t25385;
  double t25386;
  double t25390;
  double t25391;
  double t25392;
  double t25394;
  double t25395;
  double t25396;
  double t25400;
  double t25401;
  double t25402;
  double t25404;
  double t25405;
  double t25406;
  double t25410;
  double t25411;
  double t25412;
  double t25414;
  double t25415;
  double t25416;
  double t25536;
  double t25537;
  double t25538;
  double t25532;
  double t25533;
  double t25534;
  double t25548;
  double t25549;
  double t25550;
  double t25552;
  double t25553;
  double t25554;
  double t25584;
  double t25585;
  double t25586;
  double t25588;
  double t25589;
  double t25590;
  double t25626;
  double t25627;
  double t25628;
  double t25622;
  double t25623;
  double t25624;
  double t25638;
  double t25639;
  double t25640;
  double t25642;
  double t25643;
  double t25644;
  double t25674;
  double t25675;
  double t25676;
  double t25678;
  double t25679;
  double t25680;
  double t25712;
  double t25716;
  double t25717;
  double t25713;
  double t25714;
  double t25727;
  double t25728;
  double t25729;
  double t25731;
  double t25732;
  double t25733;
  double t25763;
  double t25764;
  double t25765;
  double t25767;
  double t25768;
  double t25769;
  double t25801;
  double t25805;
  double t25806;
  double t25802;
  double t25803;
  double t25816;
  double t25817;
  double t25818;
  double t25820;
  double t25821;
  double t25822;
  double t25852;
  double t25853;
  double t25854;
  double t25856;
  double t25857;
  double t25858;
  double t24840;
  double t25539;
  double t25542;
  double t25625;
  double t25633;
  double t25715;
  double t25722;
  double t25551;
  double t25558;
  double t25574;
  double t25578;
  double t25564;
  double t25568;
  double t25587;
  double t25595;
  double t25983;
  double t25984;
  double t25985;
  double t25987;
  double t25988;
  double t25989;
  double t25601;
  double t25606;
  double t25612;
  double t25616;
  double t25641;
  double t25648;
  double t25664;
  double t25668;
  double t25654;
  double t25658;
  double t25677;
  double t25685;
  double t26049;
  double t26050;
  double t26051;
  double t26053;
  double t26054;
  double t26055;
  double t25691;
  double t25696;
  double t25702;
  double t25706;
  double t25730;
  double t25737;
  double t25753;
  double t25757;
  double t25743;
  double t25747;
  double t25766;
  double t25774;
  double t26115;
  double t26116;
  double t26117;
  double t26119;
  double t26120;
  double t26121;
  double t25780;
  double t25785;
  double t25791;
  double t25795;
  double t25804;
  double t25811;
  double t25819;
  double t25826;
  double t25842;
  double t25846;
  double t25832;
  double t25836;
  double t25855;
  double t25863;
  double t26205;
  double t26206;
  double t26207;
  double t26201;
  double t26202;
  double t26203;
  double t25869;
  double t25874;
  double t25880;
  double t25884;
  double t25432;
  double t25433;
  double t25434;
  double t25440;
  double t25441;
  double t25442;
  double t25464;
  double t25465;
  double t25466;
  double t25468;
  double t25469;
  double t25470;
  double t25480;
  double t25481;
  double t25482;
  double t25484;
  double t25485;
  double t25486;
  double t23797;
  double t23798;
  double t23824;
  double t23866;
  double t23869;
  double t23871;
  double t23872;
  double t23873;
  double t23881;
  double t24032;
  double t24033;
  double t24034;
  double t24035;
  double t24036;
  double t24260;
  double t24261;
  double t24262;
  double t24265;
  double t24271;
  double t24272;
  double t24273;
  double t25456;
  double t25457;
  double t25458;
  double t25460;
  double t25461;
  double t25462;
  double t24321;
  double t24322;
  double t24323;
  double t24359;
  double t24370;
  double t24371;
  double t24372;
  double t24374;
  double t24375;
  double t24541;
  double t24561;
  double t24573;
  double t24574;
  double t24576;
  double t24577;
  double t24578;
  double t25472;
  double t25473;
  double t25474;
  double t25476;
  double t25477;
  double t25478;
  double t24602;
  double t24603;
  double t24604;
  double t24625;
  double t24634;
  double t24650;
  double t24651;
  double t24652;
  double t24663;
  double t24672;
  double t24673;
  double t24679;
  double t24680;
  double t24682;
  double t24688;
  double t24689;
  double t25496;
  double t25497;
  double t25498;
  double t24724;
  double t24727;
  double t24728;
  double t25500;
  double t25501;
  double t25502;
  double t24741;
  double t24747;
  double t24748;
  double t24749;
  double t24750;
  double t24751;
  double t25448;
  double t25449;
  double t25450;
  double t24762;
  double t24763;
  double t24764;
  double t24765;
  double t24767;
  double t24768;
  double t24769;
  double t25488;
  double t25489;
  double t25490;
  double t25492;
  double t25493;
  double t25494;
  double t24785;
  double t24786;
  double t24787;
  double t24921;
  double t25504;
  double t25505;
  double t25506;
  double t24928;
  double t24929;
  double t24930;
  double t24931;
  double t24932;
  double t25512;
  double t25513;
  double t25514;
  double t25516;
  double t25517;
  double t25518;
  double t24945;
  double t24946;
  double t24947;
  double t24948;
  double t24950;
  double t24951;
  double t24952;
  double t24935;
  double t24936;
  double t24937;
  double t25520;
  double t25521;
  double t25522;
  double t24791;
  double t24792;
  double t24794;
  double t24800;
  double t24801;
  double t24820;
  double t24821;
  double t24822;
  double t25524;
  double t25525;
  double t25526;
  double t24956;
  double t24962;
  double t24966;
  double t24967;
  double t24972;
  double t24977;
  double t24978;
  double t24979;
  double t24980;
  double t24981;
  double t24982;
  double t24983;
  double t24984;
  double t24988;
  double t24991;
  double t24992;
  double t24993;
  double t24994;
  double t24995;
  double t24996;
  double t24997;
  double t24998;
  double t25083;
  double t25084;
  double t25085;
  double t25436;
  double t25437;
  double t25438;
  double t25005;
  double t25009;
  double t25010;
  double t25015;
  double t25020;
  double t25021;
  double t25022;
  double t25023;
  double t25024;
  double t25025;
  double t25026;
  double t25027;
  double t25031;
  double t25034;
  double t25035;
  double t25036;
  double t25037;
  double t25038;
  double t25039;
  double t25040;
  double t25041;
  double t25087;
  double t25088;
  double t25089;
  double t25444;
  double t25445;
  double t25446;
  double t25048;
  double t25050;
  double t25055;
  double t25060;
  double t25061;
  double t25062;
  double t25063;
  double t25064;
  double t25065;
  double t25066;
  double t25067;
  double t25071;
  double t25074;
  double t25075;
  double t25076;
  double t25077;
  double t25078;
  double t25079;
  double t25080;
  double t25081;
  double t25091;
  double t25092;
  double t25452;
  double t25453;
  double t25454;
  double t25094;
  double t25095;
  double t25096;
  double t25098;
  double t25099;
  double t25100;
  double t25102;
  double t25103;
  double t25104;
  double t25106;
  double t25107;
  double t25108;
  double t25110;
  double t25111;
  double t25112;
  double t25114;
  double t25115;
  double t25116;
  double t25118;
  double t25119;
  double t25120;
  double t25122;
  double t25123;
  double t25124;
  double t25126;
  double t25127;
  double t25128;
  double t25130;
  double t25131;
  double t25132;
  double t25134;
  double t25135;
  double t25136;
  double t25138;
  double t25139;
  double t25140;
  double t25147;
  double t25149;
  double t25151;
  double t25152;
  double t25508;
  double t25509;
  double t25510;
  double t25157;
  double t25162;
  double t25163;
  double t25169;
  double t25170;
  double t25171;
  double t25172;
  double t25173;
  double t25174;
  double t25175;
  double t25176;
  double t25177;
  double t25165;
  double t25166;
  double t25167;
  double t25191;
  double t25192;
  double t25193;
  double t25194;
  double t25195;
  double t25196;
  double t25197;
  double t25198;
  double t25199;
  double t25181;
  double t25184;
  double t25185;
  double t25187;
  double t25188;
  double t25189;
  double t24835;
  double t24836;
  double t25423;
  double t25424;
  double t25425;
  double t25426;
  double t25427;
  double t25428;
  double t25429;
  double t25430;
  double t25431;
  double t25435;
  double t25439;
  double t25443;
  double t25447;
  double t25451;
  double t25455;
  double t25459;
  double t25463;
  double t25467;
  double t25471;
  double t25475;
  double t25479;
  double t25483;
  double t25487;
  double t25491;
  double t25495;
  double t25499;
  double t25503;
  double t25507;
  double t25511;
  double t25515;
  double t25519;
  double t25523;
  double t25527;
  double t25528;
  double t25203;
  double t25204;
  double t25207;
  double t25209;
  double t25210;
  double t25212;
  double t25213;
  double t25214;
  double t25216;
  double t25217;
  double t25218;
  double t25223;
  double t25224;
  double t25225;
  double t25227;
  double t25228;
  double t25229;
  double t25234;
  double t25235;
  double t25236;
  double t25238;
  double t25239;
  double t25240;
  double t25245;
  double t25246;
  double t25247;
  double t25252;
  double t25256;
  double t25257;
  double t25262;
  double t25266;
  double t25267;
  double t25272;
  double t25276;
  double t25277;
  double t25282;
  double t25286;
  double t25287;
  double t25292;
  double t25296;
  double t25297;
  double t25302;
  double t25306;
  double t25307;
  double t25312;
  double t25316;
  double t25317;
  double t25322;
  double t25326;
  double t25327;
  double t25332;
  double t25336;
  double t25337;
  double t25342;
  double t25346;
  double t25347;
  double t25352;
  double t25356;
  double t25357;
  double t25362;
  double t25366;
  double t25367;
  double t25369;
  double t25370;
  double t25371;
  double t25376;
  double t25377;
  double t25378;
  double t25383;
  double t25387;
  double t25388;
  double t25393;
  double t25397;
  double t25398;
  double t25403;
  double t25407;
  double t25408;
  double t25413;
  double t25417;
  double t25418;
  double t25422;
  double t25530;
  double t25531;
  double t25535;
  double t25540;
  double t25541;
  double t25543;
  double t25544;
  double t25545;
  double t25546;
  double t25555;
  double t25556;
  double t25557;
  double t25559;
  double t25560;
  double t25561;
  double t25562;
  double t25565;
  double t25566;
  double t25567;
  double t25569;
  double t25570;
  double t25571;
  double t25572;
  double t25575;
  double t25576;
  double t25577;
  double t25579;
  double t25580;
  double t25581;
  double t25582;
  double t25591;
  double t25592;
  double t25593;
  double t25594;
  double t25596;
  double t25597;
  double t25598;
  double t25599;
  double t25602;
  double t25603;
  double t25604;
  double t25605;
  double t25607;
  double t25608;
  double t25609;
  double t25610;
  double t25613;
  double t25614;
  double t25615;
  double t25617;
  double t25618;
  double t25619;
  double t25620;
  double t25629;
  double t25630;
  double t25631;
  double t25632;
  double t25634;
  double t25635;
  double t25636;
  double t25645;
  double t25646;
  double t25647;
  double t25649;
  double t25650;
  double t25651;
  double t25652;
  double t25655;
  double t25656;
  double t25657;
  double t25659;
  double t25660;
  double t25661;
  double t25662;
  double t25665;
  double t25666;
  double t25667;
  double t25669;
  double t25670;
  double t25671;
  double t25672;
  double t25681;
  double t25682;
  double t25683;
  double t25684;
  double t25686;
  double t25687;
  double t25688;
  double t25689;
  double t25692;
  double t25693;
  double t25694;
  double t25695;
  double t25697;
  double t25698;
  double t25699;
  double t25700;
  double t25703;
  double t25704;
  double t25705;
  double t25707;
  double t25708;
  double t25709;
  double t25710;
  double t25718;
  double t25719;
  double t25720;
  double t25721;
  double t25723;
  double t25724;
  double t25725;
  double t25734;
  double t25735;
  double t25736;
  double t25738;
  double t25739;
  double t25740;
  double t25741;
  double t25744;
  double t25745;
  double t25746;
  double t25748;
  double t25749;
  double t25750;
  double t25751;
  double t25754;
  double t25755;
  double t25756;
  double t25758;
  double t25759;
  double t25760;
  double t25761;
  double t25770;
  double t25771;
  double t25772;
  double t25773;
  double t25775;
  double t25776;
  double t25777;
  double t25778;
  double t25781;
  double t25782;
  double t25783;
  double t25784;
  double t25786;
  double t25787;
  double t25788;
  double t25789;
  double t25792;
  double t25793;
  double t25794;
  double t25796;
  double t25797;
  double t25798;
  double t25799;
  double t25807;
  double t25808;
  double t25809;
  double t25810;
  double t25812;
  double t25813;
  double t25814;
  double t25823;
  double t25824;
  double t25825;
  double t25827;
  double t25828;
  double t25829;
  double t25830;
  double t25833;
  double t25834;
  double t25835;
  double t25837;
  double t25838;
  double t25839;
  double t25840;
  double t25843;
  double t25844;
  double t25845;
  double t25847;
  double t25848;
  double t25849;
  double t25850;
  double t25859;
  double t25860;
  double t25861;
  double t25862;
  double t25864;
  double t25865;
  double t25866;
  double t25867;
  double t25870;
  double t25871;
  double t25872;
  double t25873;
  double t25875;
  double t25876;
  double t25877;
  double t25878;
  double t25881;
  double t25882;
  double t25883;
  double t25885;
  double t25886;
  double t25887;
  double t25888;
  double t25892;
  double t25893;
  double t25894;
  double t25895;
  double t25896;
  double t25898;
  double t25899;
  double t25900;
  double t25901;
  double t25903;
  double t25904;
  double t25905;
  double t25906;
  double t25908;
  double t25909;
  double t25910;
  double t25911;
  double t25913;
  double t25914;
  double t25915;
  double t25916;
  double t25918;
  double t25919;
  double t25920;
  double t25921;
  double t25923;
  double t25924;
  double t25925;
  double t25926;
  double t25927;
  double t25928;
  double t25929;
  double t25930;
  double t25931;
  double t25933;
  double t25934;
  double t25935;
  double t25936;
  double t25937;
  double t25938;
  double t25939;
  double t25940;
  double t25941;
  double t25943;
  double t25944;
  double t25945;
  double t25946;
  double t25947;
  double t25948;
  double t25949;
  double t25950;
  double t25951;
  double t25953;
  double t25954;
  double t25955;
  double t25956;
  double t25957;
  double t25958;
  double t25959;
  double t25960;
  double t25961;
  double t25963;
  double t25964;
  double t25965;
  double t25966;
  double t25967;
  double t25968;
  double t25969;
  double t25970;
  double t25971;
  double t25973;
  double t25974;
  double t25975;
  double t25976;
  double t25977;
  double t25978;
  double t25979;
  double t25980;
  double t25981;
  double t25986;
  double t25990;
  double t25991;
  double t25992;
  double t25993;
  double t25994;
  double t25995;
  double t25996;
  double t25997;
  double t25999;
  double t26000;
  double t26001;
  double t26002;
  double t26003;
  double t26004;
  double t26005;
  double t26006;
  double t26007;
  double t26009;
  double t26010;
  double t26011;
  double t26012;
  double t26013;
  double t26014;
  double t26015;
  double t26016;
  double t26017;
  double t26019;
  double t26020;
  double t26021;
  double t26022;
  double t26023;
  double t26024;
  double t26025;
  double t26026;
  double t26027;
  double t26029;
  double t26030;
  double t26031;
  double t26032;
  double t26033;
  double t26034;
  double t26035;
  double t26036;
  double t26037;
  double t26039;
  double t26040;
  double t26041;
  double t26042;
  double t26043;
  double t26044;
  double t26045;
  double t26046;
  double t26047;
  double t26052;
  double t26056;
  double t26057;
  double t26058;
  double t26059;
  double t26060;
  double t26061;
  double t26062;
  double t26063;
  double t26065;
  double t26066;
  double t26067;
  double t26068;
  double t26069;
  double t26070;
  double t26071;
  double t26072;
  double t26073;
  double t26075;
  double t26076;
  double t26077;
  double t26078;
  double t26079;
  double t26080;
  double t26081;
  double t26082;
  double t26083;
  double t26085;
  double t26086;
  double t26087;
  double t26088;
  double t26089;
  double t26090;
  double t26091;
  double t26092;
  double t26093;
  double t26095;
  double t26096;
  double t26097;
  double t26098;
  double t26099;
  double t26100;
  double t26101;
  double t26102;
  double t26103;
  double t26105;
  double t26106;
  double t26107;
  double t26108;
  double t26109;
  double t26110;
  double t26111;
  double t26112;
  double t26113;
  double t26118;
  double t26122;
  double t26123;
  double t26124;
  double t26125;
  double t26126;
  double t26127;
  double t26128;
  double t26129;
  double t26131;
  double t26132;
  double t26133;
  double t26134;
  double t26135;
  double t26136;
  double t26137;
  double t26138;
  double t26139;
  double t26141;
  double t26142;
  double t26143;
  double t26144;
  double t26145;
  double t26146;
  double t26147;
  double t26148;
  double t26149;
  double t26151;
  double t26152;
  double t26153;
  double t26154;
  double t26156;
  double t26157;
  double t26158;
  double t26159;
  double t26161;
  double t26162;
  double t26163;
  double t26164;
  double t26165;
  double t26166;
  double t26167;
  double t26168;
  double t26169;
  double t26171;
  double t26172;
  double t26173;
  double t26174;
  double t26175;
  double t26176;
  double t26177;
  double t26178;
  double t26179;
  double t26181;
  double t26182;
  double t26183;
  double t26184;
  double t26185;
  double t26186;
  double t26187;
  double t26188;
  double t26189;
  double t26191;
  double t26192;
  double t26193;
  double t26194;
  double t26195;
  double t26196;
  double t26197;
  double t26198;
  double t26199;
  double t26204;
  double t26208;
  double t26209;
  double t26210;
  double t26211;
  double t26212;
  double t26213;
  double t26214;
  double t26215;
  double t26217;
  double t26218;
  double t26219;
  double t26220;
  double t26221;
  double t26222;
  double t26223;
  double t26224;
  double t26225;
  double t26227;
  double t26228;
  double t26229;
  double t26230;
  double t26231;
  double t26232;
  double t26233;
  double t26234;
  double t26235;
  double t25206;
  double t25211;
  double t25215;
  double t25219;
  double t25226;
  double t25230;
  double t25237;
  double t25241;
  double t25248;
  double t25258;
  double t25268;
  double t25278;
  double t25288;
  double t25298;
  double t25308;
  double t25318;
  double t25328;
  double t25338;
  double t25348;
  double t25358;
  double t25368;
  double t25372;
  double t25379;
  double t25389;
  double t25399;
  double t25409;
  double t25419;
  double t25420;
  double t26325;
  double t26326;
  double t26327;
  double t26328;
  double t26329;
  double t26330;
  double t26331;
  double t26332;
  double t26333;
  double t26334;
  double t26335;
  double t26336;
  double t26337;
  double t26338;
  double t26339;
  double t26340;
  double t26341;
  double t26342;
  double t26343;
  double t26344;
  double t26345;
  double t26346;
  double t26347;
  double t26348;
  double t26349;
  double t26350;
  double t26351;
  double t26352;
  double t26699;
  double t26700;
  double t26701;
  double t26702;
  double t26703;
  double t26707;
  double t26708;
  double t26704;
  double t26705;
  double t26712;
  double t26713;
  double t26714;
  double t26716;
  double t26717;
  double t26718;
  double t26706;
  double t26709;
  double t26710;
  double t26715;
  double t26719;
  double t26720;
  double t26722;
  double t26723;
  double t26724;
  double t26759;
  double t26760;
  double t26761;
  double t26762;
  double t26763;
  double t26767;
  double t26768;
  double t26764;
  double t26765;
  double t26772;
  double t26773;
  double t26774;
  double t26776;
  double t26777;
  double t26778;
  double t26766;
  double t26769;
  double t26770;
  double t26775;
  double t26779;
  double t26780;
  double t26782;
  double t26783;
  double t26784;
  double t26824;
  double t25897;
  double t25902;
  double t25907;
  double t25912;
  double t25917;
  double t25922;
  double t25932;
  double t25942;
  double t25952;
  double t25962;
  double t25972;
  double t25982;
  double t25998;
  double t26008;
  double t26018;
  double t26028;
  double t26038;
  double t26048;
  double t26064;
  double t26074;
  double t26084;
  double t26094;
  double t26104;
  double t26114;
  double t26130;
  double t26140;
  double t26150;
  double t26155;
  double t26160;
  double t26170;
  double t26180;
  double t26190;
  double t26200;
  double t26216;
  double t26226;
  double t26236;
  double t26237;
  double t26440;
  double t26441;
  double t26442;
  double t26443;
  double t26444;
  double t26445;
  double t26446;
  double t26447;
  double t26448;
  double t26449;
  double t26450;
  double t26451;
  double t26452;
  double t26453;
  double t26454;
  double t26455;
  double t26456;
  double t26457;
  double t26458;
  double t26459;
  double t26460;
  double t26461;
  double t26462;
  double t26463;
  double t26464;
  double t26465;
  double t26466;
  double t26467;
  double t26468;
  double t26469;
  double t26470;
  double t26471;
  double t26472;
  double t26473;
  double t26474;
  double t26475;
  double t26476;
  double t26651;
  double t26652;
  double t26653;
  double t26654;
  double t26655;
  double t26656;
  double t26657;
  double t26658;
  double t26659;
  double t26660;
  double t26661;
  double t26662;
  double t26663;
  double t26664;
  double t26665;
  double t26666;
  double t26667;
  double t26668;
  double t26669;
  double t26670;
  double t26671;
  double t26672;
  double t26673;
  double t26674;
  double t26675;
  double t26676;
  double t26677;
  double t26678;
  double t26679;
  double t26680;
  double t26681;
  double t26682;
  double t26683;
  double t26684;
  double t26685;
  double t26686;
  double t26687;
  double t26825;
  double t26826;
  double t26827;
  double t26828;
  double t26841;
  double t26842;
  double t26843;
  double t26844;
  double t26857;
  double t26858;
  double t26859;
  double t26860;
  double t26879;
  double t26880;
  double t26884;
  double t26885;
  double t24838;
  double t24842;
  double t24844;
  double t24846;
  double t24848;
  double t24853;
  double t24858;
  double t24863;
  double t24865;
  double t24867;
  double t24869;
  double t24871;
  double t24873;
  double t24875;
  double t24877;
  double t24879;
  double t24881;
  double t24883;
  double t24885;
  double t24887;
  double t24892;
  double t24897;
  double t24905;
  double t24913;
  double t24915;
  double t24917;
  double t26690;
  double t26691;
  double t26693;
  double t26694;
  double t26696;
  double t26697;
  double t26711;
  double t26728;
  double t26735;
  double t26740;
  double t26747;
  double t26752;
  double t26771;
  double t26788;
  double t26795;
  double t26800;
  double t26807;
  double t26812;
  double t26868;
  double t26869;
  double t25547;
  double t25563;
  double t25573;
  double t25583;
  double t25600;
  double t25611;
  double t25621;
  double t25637;
  double t25653;
  double t25663;
  double t25673;
  double t25690;
  double t25701;
  double t25711;
  double t25726;
  double t25742;
  double t25752;
  double t25762;
  double t25779;
  double t25790;
  double t25800;
  double t25815;
  double t25831;
  double t25841;
  double t25851;
  double t25868;
  double t25879;
  double t25889;
  double t25890;
  double t26410;
  double t26411;
  double t26412;
  double t26413;
  double t26414;
  double t26415;
  double t26416;
  double t26417;
  double t26418;
  double t26419;
  double t26420;
  double t26421;
  double t26422;
  double t26423;
  double t26424;
  double t26425;
  double t26426;
  double t26427;
  double t26428;
  double t26429;
  double t26430;
  double t26431;
  double t26432;
  double t26433;
  double t26434;
  double t26435;
  double t26436;
  double t26437;
  double t26438;
  double t26621;
  double t26622;
  double t26623;
  double t26624;
  double t26625;
  double t26626;
  double t26627;
  double t26628;
  double t26629;
  double t26630;
  double t26631;
  double t26632;
  double t26633;
  double t26634;
  double t26635;
  double t26636;
  double t26637;
  double t26638;
  double t26639;
  double t26640;
  double t26641;
  double t26642;
  double t26643;
  double t26644;
  double t26645;
  double t26646;
  double t26647;
  double t26648;
  double t26649;
  double t27147;
  double t27163;
  double t27179;
  double t27148;
  double t27149;
  double t27150;
  double t27164;
  double t27165;
  double t27166;
  double t27180;
  double t27181;
  double t27182;
  double t27199;
  double t27201;
  double t27204;
  double t27205;
  double t26926;
  double t26927;
  double t26928;
  double t26929;
  double t26930;
  double t26931;
  double t26932;
  double t26933;
  double t26934;
  double t26935;
  double t26936;
  double t26937;
  double t26938;
  double t26939;
  double t26940;
  double t26941;
  double t26942;
  double t26943;
  double t26944;
  double t26945;
  double t26946;
  double t26947;
  double t26948;
  double t26949;
  double t26950;
  double t26951;
  double t26952;
  double t26953;
  double t26954;
  double t26955;
  double t26956;
  double t26957;
  double t26958;
  double t26959;
  double t26960;
  double t26961;
  double t26962;
  double t26963;
  double t26964;
  double t26965;
  double t26966;
  double t26967;
  double t26968;
  double t26969;
  double t26970;
  double t26971;
  double t26972;
  double t26973;
  double t26974;
  double t26975;
  double t26976;
  double t26977;
  double t26978;
  double t26979;
  double t27104;
  double t27108;
  double t27132;
  double t27136;
  double t24968;
  double t24985;
  double t24999;
  double t25011;
  double t25028;
  double t25042;
  double t25051;
  double t25068;
  double t25082;
  double t25086;
  double t25090;
  double t25093;
  double t25097;
  double t25101;
  double t25105;
  double t25109;
  double t25113;
  double t25117;
  double t25121;
  double t25125;
  double t25129;
  double t25133;
  double t25137;
  double t25141;
  double t25150;
  double t25153;
  double t25164;
  double t25168;
  double t25178;
  double t25186;
  double t25190;
  double t25200;
  double t25201;
  double t27364;
  double t27399;
  double t27416;
  double t27434;
  double t27366;
  double t27369;
  double t27370;
  double t27371;
  double t27372;
  double t27401;
  double t27404;
  double t27405;
  double t27406;
  double t27407;
  double t27418;
  double t27421;
  double t27422;
  double t27423;
  double t27424;
  double t27436;
  double t27439;
  double t27440;
  double t27441;
  double t27442;
  double t26529;
  double t26530;
  double t26531;
  double t26532;
  double t26533;
  double t26534;
  double t26535;
  double t26536;
  double t26537;
  double t26538;
  double t26539;
  double t26540;
  double t26541;
  double t26542;
  double t26543;
  double t26544;
  double t26545;
  double t26546;
  double t26547;
  double t26548;
  double t26549;
  double t26550;
  double t26551;
  double t26552;
  double t26553;
  double t26554;
  double t26555;
  double t26556;
  double t26557;
  double t26558;
  double t26559;
  double t26560;
  double t26561;
  double t26290;
  double t26291;
  double t26292;
  double t26293;
  double t26294;
  double t26295;
  double t26296;
  double t26297;
  double t26298;
  double t26299;
  double t26300;
  double t26301;
  double t26302;
  double t26303;
  double t26304;
  double t26305;
  double t26306;
  double t26307;
  double t26308;
  double t26309;
  double t26310;
  double t26311;
  double t26312;
  double t26313;
  double t26314;
  double t26315;
  double t26316;
  double t26317;
  double t26318;
  double t26319;
  double t26320;
  double t26321;
  double t26322;
  double t27210;
  double t27211;
  double t27212;
  double t27213;
  double t27214;
  double t27215;
  double t27216;
  double t27217;
  double t27218;
  double t27219;
  double t27220;
  double t27221;
  double t27222;
  double t27223;
  double t27224;
  double t27225;
  double t27226;
  double t27227;
  double t27228;
  double t27229;
  double t27230;
  double t27231;
  double t27232;
  double t27233;
  double t27234;
  double t26891;
  double t26892;
  double t26893;
  double t26894;
  double t26895;
  double t26896;
  double t26897;
  double t26898;
  double t26899;
  double t26900;
  double t26901;
  double t26902;
  double t26903;
  double t26904;
  double t26905;
  double t26906;
  double t26907;
  double t26908;
  double t26909;
  double t26910;
  double t26911;
  double t26912;
  double t26913;
  double t26914;
  double t26915;
  double t26916;
  double t26917;
  double t26918;
  double t26919;
  double t26920;
  double t26921;
  double t26922;
  double t26923;
  double t26924;
  double t24922;
  double t24933;
  double t24934;
  double t24938;
  double t24953;
  double t24954;
  double t27435;
  double t27437;
  double t27438;
  double t27443;
  double t27444;
  double t27445;
  double t26518;
  double t26519;
  double t26520;
  double t26521;
  double t26522;
  double t26523;
  double t26279;
  double t26280;
  double t26281;
  double t26282;
  double t26283;
  double t26284;
  double t27200;
  double t27202;
  double t27203;
  double t27206;
  double t27207;
  double t27208;
  double t26881;
  double t26882;
  double t26883;
  double t26886;
  double t26887;
  double t26889;
  double t27429;
  double t27430;
  double t27431;
  double t24819;
  double t24832;
  double t24833;
  double t26525;
  double t26526;
  double t26527;
  double t26286;
  double t26287;
  double t26288;
  double t27191;
  double t27192;
  double t27193;
  double t27194;
  double t26871;
  double t26872;
  double t26873;
  double t26874;
  double t27365;
  double t27367;
  double t27368;
  double t27373;
  double t27374;
  double t27375;
  double t24037;
  double t24274;
  double t24281;
  double t24319;
  double t24324;
  double t24328;
  double t26489;
  double t26490;
  double t26491;
  double t26492;
  double t26493;
  double t26494;
  double t26250;
  double t26251;
  double t26252;
  double t26253;
  double t26254;
  double t26255;
  double t27151;
  double t27152;
  double t27153;
  double t27154;
  double t27155;
  double t27156;
  double t26829;
  double t26830;
  double t26831;
  double t26832;
  double t26833;
  double t26834;
  double t27342;
  double t27343;
  double t27344;
  double t23870;
  double t23875;
  double t23877;
  double t26485;
  double t26486;
  double t26487;
  double t26246;
  double t26247;
  double t26248;
  double t27142;
  double t27143;
  double t27144;
  double t27145;
  double t26819;
  double t26820;
  double t26821;
  double t26822;
  double t27400;
  double t27402;
  double t27403;
  double t27408;
  double t27409;
  double t27410;
  double t24377;
  double t24579;
  double t24593;
  double t24601;
  double t24606;
  double t24607;
  double t26496;
  double t26497;
  double t26498;
  double t26499;
  double t26500;
  double t26501;
  double t26257;
  double t26258;
  double t26259;
  double t26260;
  double t26261;
  double t26262;
  double t27167;
  double t27168;
  double t27169;
  double t27170;
  double t27171;
  double t27172;
  double t26845;
  double t26846;
  double t26847;
  double t26848;
  double t26849;
  double t26850;
  double t27377;
  double t27378;
  double t27379;
  double t24653;
  double t24674;
  double t24675;
  double t26503;
  double t26504;
  double t26505;
  double t26264;
  double t26265;
  double t26266;
  double t27158;
  double t27159;
  double t27160;
  double t27161;
  double t26836;
  double t26837;
  double t26838;
  double t26839;
  double t27417;
  double t27419;
  double t27420;
  double t27425;
  double t27426;
  double t27427;
  double t24755;
  double t24770;
  double t24777;
  double t24784;
  double t24788;
  double t24789;
  double t26511;
  double t26512;
  double t26513;
  double t26514;
  double t26515;
  double t26516;
  double t26272;
  double t26273;
  double t26274;
  double t26275;
  double t26276;
  double t26277;
  double t27183;
  double t27184;
  double t27185;
  double t27186;
  double t27187;
  double t27188;
  double t26861;
  double t26862;
  double t26863;
  double t26864;
  double t26865;
  double t26866;
  double t27412;
  double t27413;
  double t27414;
  double t24723;
  double t24738;
  double t24739;
  double t26507;
  double t26508;
  double t26509;
  double t26268;
  double t26269;
  double t26270;
  double t27174;
  double t27175;
  double t27176;
  double t27177;
  double t26852;
  double t26853;
  double t26854;
  double t26855;
  t15228 = Cos(var2[4]);
  t15243 = Cos(var2[5]);
  t16858 = Sin(var2[5]);
  t16850 = Cos(var2[9]);
  t18848 = Cos(var2[11]);
  t18884 = Sin(var2[10]);
  t18831 = Cos(var2[10]);
  t18901 = Sin(var2[11]);
  t16782 = Sin(var2[9]);
  t21515 = -1.*t18848*t18884;
  t21594 = t18831*t18901;
  t22111 = t21515 + t21594;
  t20650 = Sin(var2[4]);
  t23370 = -1.*t18831*t18848;
  t23375 = -1.*t18884*t18901;
  t23410 = t23370 + t23375;
  t18543 = Cos(var2[12]);
  t23551 = Cos(var2[14]);
  t23555 = Sin(var2[13]);
  t23548 = Cos(var2[13]);
  t23556 = Sin(var2[14]);
  t17807 = Sin(var2[12]);
  t23572 = t23551*t23555;
  t23578 = -1.*t23548*t23556;
  t23579 = t23572 + t23578;
  t23552 = t23548*t23551;
  t23567 = t23555*t23556;
  t23568 = t23552 + t23567;
  t18864 = t18831*t18848;
  t18919 = t18884*t18901;
  t20644 = t18864 + t18919;
  t20661 = t20644*t20650;
  t22555 = t16850*t15243*t22111;
  t22556 = -1.*t16782*t22111*t16858;
  t22872 = t22555 + t22556;
  t23241 = t15228*t22872;
  t23242 = t20661 + t23241;
  t23844 = -1.*t18848;
  t23845 = 1. + t23844;
  t23849 = -0.50321*t23845;
  t23850 = -0.50321*t18848;
  t23857 = t23849 + t23850;
  t23264 = t22111*t20650;
  t23431 = t16850*t15243*t23410;
  t23450 = -1.*t16782*t23410*t16858;
  t23464 = t23431 + t23450;
  t23479 = t15228*t23464;
  t23524 = t23264 + t23479;
  t23883 = -1.*t18831;
  t23909 = 1. + t23883;
  t23970 = -0.28121*t23909;
  t24030 = -0.28121*t18831;
  t24031 = t23970 + t24030;
  t16817 = t15243*t16782;
  t16866 = t16850*t16858;
  t16875 = t16817 + t16866;
  t24078 = t18831*t23857;
  t24259 = t23970 + t24078;
  t24038 = 0.28121*t18884;
  t24039 = t23857*t18884;
  t24040 = t24038 + t24039;
  t24360 = -1.*t23548;
  t24361 = 1. + t24360;
  t24362 = 0.28121*t24361;
  t24363 = 0.28121*t23548;
  t24364 = t24362 + t24363;
  t17808 = -1.*t15243*t17807;
  t18598 = -1.*t18543*t16858;
  t18723 = t17808 + t18598;
  t23592 = -1.*t23551*t23555;
  t23595 = t23548*t23556;
  t23596 = t23592 + t23595;
  t24379 = -1.*t23551;
  t24380 = 1. + t24379;
  t24502 = 0.50321*t24380;
  t24503 = 0.50321*t23551;
  t24504 = t24502 + t24503;
  t24508 = t23548*t24504;
  t24537 = t24362 + t24508;
  t24378 = 0.28121*t23555;
  t24505 = -1.*t24504*t23555;
  t24506 = t24378 + t24505;
  t23569 = t23568*t20650;
  t23580 = t18543*t15243*t23579;
  t23585 = -1.*t17807*t23579*t16858;
  t23586 = t23580 + t23585;
  t23587 = t15228*t23586;
  t23588 = t23569 + t23587;
  t23608 = t23596*t20650;
  t23631 = t18543*t15243*t23568;
  t23683 = -1.*t17807*t23568*t16858;
  t23706 = t23631 + t23683;
  t23768 = t15228*t23706;
  t23772 = t23608 + t23768;
  t24681 = Cos(var2[17]);
  t24692 = Sin(var2[16]);
  t24690 = Cos(var2[16]);
  t24707 = Sin(var2[17]);
  t24714 = -1.*t24681*t24692;
  t24715 = t24690*t24707;
  t24716 = t24714 + t24715;
  t24683 = -1.*t24681;
  t24684 = 1. + t24683;
  t24685 = -0.50321*t24684;
  t24686 = -0.50321*t24681;
  t24687 = t24685 + t24686;
  t24713 = Cos(var2[15]);
  t24718 = Sin(var2[15]);
  t24730 = -1.*t24690*t24681;
  t24731 = -1.*t24692*t24707;
  t24732 = t24730 + t24731;
  t24742 = -1.*t24690;
  t24743 = 1. + t24742;
  t24744 = -0.28121*t24743;
  t24745 = -0.28121*t24690;
  t24746 = t24744 + t24745;
  t24691 = t24690*t24681;
  t24708 = t24692*t24707;
  t24709 = t24691 + t24708;
  t24760 = t24690*t24687;
  t24761 = t24744 + t24760;
  t24756 = 0.28121*t24692;
  t24757 = t24687*t24692;
  t24758 = t24756 + t24757;
  t24752 = t15243*t24718;
  t24753 = t24713*t16858;
  t24754 = t24752 + t24753;
  t24729 = t24716*t20650;
  t24733 = t24713*t15243*t24732;
  t24734 = -1.*t24718*t24732*t16858;
  t24735 = t24733 + t24734;
  t24736 = t15228*t24735;
  t24737 = t24729 + t24736;
  t24793 = Cos(var2[8]);
  t24804 = Sin(var2[7]);
  t24802 = Cos(var2[7]);
  t24805 = Sin(var2[8]);
  t24810 = t24793*t24804;
  t24811 = -1.*t24802*t24805;
  t24812 = t24810 + t24811;
  t24795 = -1.*t24793;
  t24796 = 1. + t24795;
  t24797 = 0.50321*t24796;
  t24798 = 0.50321*t24793;
  t24799 = t24797 + t24798;
  t24809 = Cos(var2[6]);
  t24803 = t24802*t24793;
  t24806 = t24804*t24805;
  t24807 = t24803 + t24806;
  t24814 = Sin(var2[6]);
  t24837 = Power(t15228,2);
  t24275 = -1.*t18884*t20650;
  t24276 = -1.*t16850*t18831*t15243;
  t24277 = t18831*t16782*t16858;
  t24278 = t24276 + t24277;
  t24279 = t15228*t24278;
  t24280 = t24275 + t24279;
  t24282 = t18831*t20650;
  t24283 = -1.*t16850*t15243*t18884;
  t24284 = t16782*t18884*t16858;
  t24311 = t24283 + t24284;
  t24312 = t15228*t24311;
  t24313 = t24282 + t24312;
  t24580 = -1.*t23555*t20650;
  t24584 = t18543*t23548*t15243;
  t24587 = -1.*t23548*t17807*t16858;
  t24590 = t24584 + t24587;
  t24591 = t15228*t24590;
  t24592 = t24580 + t24591;
  t24594 = t23548*t20650;
  t24595 = t18543*t15243*t23555;
  t24596 = -1.*t17807*t23555*t16858;
  t24597 = t24595 + t24596;
  t24599 = t15228*t24597;
  t24600 = t24594 + t24599;
  t24771 = -1.*t24692*t20650;
  t24772 = -1.*t24713*t24690*t15243;
  t24773 = t24690*t24718*t16858;
  t24774 = t24772 + t24773;
  t24775 = t15228*t24774;
  t24776 = t24771 + t24775;
  t24778 = t24690*t20650;
  t24779 = -1.*t24713*t15243*t24692;
  t24780 = t24718*t24692*t16858;
  t24781 = t24779 + t24780;
  t24782 = t15228*t24781;
  t24783 = t24778 + t24782;
  t24712 = t24709*t20650;
  t24717 = t24713*t15243*t24716;
  t24719 = -1.*t24718*t24716*t16858;
  t24720 = t24717 + t24719;
  t24721 = t15228*t24720;
  t24722 = t24712 + t24721;
  t24808 = t20650*t24807;
  t24813 = t15243*t24809*t24812;
  t24815 = -1.*t16858*t24814*t24812;
  t24816 = t24813 + t24815;
  t24817 = t15228*t24816;
  t24818 = t24808 + t24817;
  t24823 = -1.*t24793*t24804;
  t24824 = t24802*t24805;
  t24825 = t24823 + t24824;
  t24826 = t20650*t24825;
  t24827 = t15243*t24809*t24807;
  t24828 = -1.*t16858*t24814*t24807;
  t24829 = t24827 + t24828;
  t24830 = t15228*t24829;
  t24831 = t24826 + t24830;
  t24899 = t15243*t24809*t24802;
  t24900 = -1.*t24802*t16858*t24814;
  t24901 = t24899 + t24900;
  t24902 = t15228*t24901;
  t24903 = -1.*t20650*t24804;
  t24904 = t24902 + t24903;
  t24889 = -1.*t24809*t16858;
  t24890 = -1.*t15243*t24814;
  t24891 = t24889 + t24890;
  t24923 = -1.*t24802;
  t24924 = 1. + t24923;
  t24925 = 0.28121*t24924;
  t24926 = 0.28121*t24802;
  t24927 = t24925 + t24926;
  t24907 = t24802*t20650;
  t24908 = t15243*t24809*t24804;
  t24909 = -1.*t16858*t24814*t24804;
  t24910 = t24908 + t24909;
  t24911 = t15228*t24910;
  t24912 = t24907 + t24911;
  t24943 = t24802*t24799;
  t24944 = t24925 + t24943;
  t24939 = 0.28121*t24804;
  t24940 = -1.*t24799*t24804;
  t24941 = t24939 + t24940;
  t24957 = -1.*t16850;
  t24958 = 1. + t24957;
  t24959 = -0.15121*t24958;
  t24963 = 0.15121*t24958;
  t24969 = t16850*t24031;
  t24970 = -0.03*t16782;
  t24971 = t24959 + t24969 + t24970;
  t24973 = 0.18121*t16850;
  t24974 = 0.15121*t16782;
  t24975 = t24031*t16782;
  t24976 = t24963 + t24973 + t24974 + t24975;
  t24041 = t24040*t22111;
  t24964 = 0.15121*t16850;
  t24986 = t16850*t24259;
  t24987 = t24959 + t24986;
  t24989 = t24259*t16782;
  t24990 = t24963 + t24964 + t24974 + t24989;
  t24266 = -1.*t24040*t20644;
  t25000 = -1.*t18543;
  t25001 = 1. + t25000;
  t25002 = 0.15121*t25001;
  t25006 = -0.15121*t25001;
  t25012 = t18543*t24364;
  t25013 = 0.03*t17807;
  t25014 = t25002 + t25012 + t25013;
  t25016 = -0.18121*t18543;
  t25017 = -0.15121*t17807;
  t25018 = t24364*t17807;
  t25019 = t25006 + t25016 + t25017 + t25018;
  t24507 = t24506*t23596;
  t25007 = -0.15121*t18543;
  t25029 = t18543*t24537;
  t25030 = t25002 + t25029;
  t25032 = t24537*t17807;
  t25033 = t25006 + t25007 + t25017 + t25032;
  t24575 = -1.*t24506*t23568;
  t25043 = -1.*t24713;
  t25044 = 1. + t25043;
  t25045 = -0.15121*t25044;
  t25046 = -0.15121*t24713;
  t25047 = t25045 + t25046;
  t25052 = t24713*t24746;
  t25053 = 0.03*t24718;
  t25054 = t25045 + t25052 + t25053;
  t25056 = -0.18121*t24713;
  t25057 = 0.15121*t24718;
  t25058 = t24746*t24718;
  t25059 = t25045 + t25056 + t25057 + t25058;
  t24759 = t24758*t24716;
  t25069 = t24713*t24761;
  t25070 = t25045 + t25069;
  t25072 = t24761*t24718;
  t25073 = t25045 + t25046 + t25057 + t25072;
  t24766 = -1.*t24758*t24709;
  t24965 = t24963 + t24964;
  t24960 = -0.15121*t16850;
  t24961 = t24959 + t24960;
  t24850 = -1.*t16850*t15243;
  t24851 = t16782*t16858;
  t24852 = t24850 + t24851;
  t25008 = t25006 + t25007;
  t25003 = 0.15121*t18543;
  t25004 = t25002 + t25003;
  t24855 = t18543*t15243;
  t24856 = -1.*t17807*t16858;
  t24857 = t24855 + t24856;
  t25049 = -1.*t25047*t24718;
  t24860 = -1.*t24713*t15243;
  t24861 = t24718*t16858;
  t24862 = t24860 + t24861;
  t25142 = -1.*t24809;
  t25143 = 1. + t25142;
  t25144 = 0.15121*t25143;
  t25145 = 0.15121*t24809;
  t25146 = t25144 + t25145;
  t25148 = t25146*t24814;
  t24894 = t15243*t24809;
  t24895 = -1.*t16858*t24814;
  t24896 = t24894 + t24895;
  t25154 = t24809*t24927;
  t25155 = -0.03*t24814;
  t25156 = t25144 + t25154 + t25155;
  t25158 = 0.18121*t24809;
  t25159 = -0.15121*t24814;
  t25160 = t24927*t24814;
  t25161 = t25144 + t25158 + t25159 + t25160;
  t25179 = t24809*t24944;
  t25180 = t25144 + t25179;
  t25182 = t24944*t24814;
  t25183 = t25144 + t25145 + t25159 + t25182;
  t24942 = t24941*t24825;
  t24949 = -1.*t24941*t24807;
  t25205 = Cos(var2[3]);
  t25208 = Sin(var2[3]);
  t25220 = -1.*t15243*t16782;
  t25221 = -1.*t16850*t16858;
  t25222 = t25220 + t25221;
  t25231 = t15243*t17807;
  t25232 = t18543*t16858;
  t25233 = t25231 + t25232;
  t25242 = -1.*t15243*t24718;
  t25243 = -1.*t24713*t16858;
  t25244 = t25242 + t25243;
  t25249 = -1.*t18831*t15243*t16782;
  t25250 = -1.*t16850*t18831*t16858;
  t25251 = t25249 + t25250;
  t25253 = -1.*t15228*t18884;
  t25254 = -1.*t20650*t24278;
  t25255 = t25253 + t25254;
  t25259 = -1.*t15243*t16782*t18884;
  t25260 = -1.*t16850*t18884*t16858;
  t25261 = t25259 + t25260;
  t25263 = t18831*t15228;
  t25264 = -1.*t20650*t24311;
  t25265 = t25263 + t25264;
  t25269 = t15243*t16782*t22111;
  t25270 = t16850*t22111*t16858;
  t25271 = t25269 + t25270;
  t25273 = t15228*t20644;
  t25274 = -1.*t20650*t22872;
  t25275 = t25273 + t25274;
  t25279 = t15243*t16782*t23410;
  t25280 = t16850*t23410*t16858;
  t25281 = t25279 + t25280;
  t25283 = t15228*t22111;
  t25284 = -1.*t20650*t23464;
  t25285 = t25283 + t25284;
  t25289 = t23548*t15243*t17807;
  t25290 = t18543*t23548*t16858;
  t25291 = t25289 + t25290;
  t25293 = -1.*t15228*t23555;
  t25294 = -1.*t20650*t24590;
  t25295 = t25293 + t25294;
  t25299 = t15243*t17807*t23555;
  t25300 = t18543*t23555*t16858;
  t25301 = t25299 + t25300;
  t25303 = t23548*t15228;
  t25304 = -1.*t20650*t24597;
  t25305 = t25303 + t25304;
  t25309 = t15243*t17807*t23579;
  t25310 = t18543*t23579*t16858;
  t25311 = t25309 + t25310;
  t25313 = t15228*t23568;
  t25314 = -1.*t20650*t23586;
  t25315 = t25313 + t25314;
  t25319 = t15243*t17807*t23568;
  t25320 = t18543*t23568*t16858;
  t25321 = t25319 + t25320;
  t25323 = t15228*t23596;
  t25324 = -1.*t20650*t23706;
  t25325 = t25323 + t25324;
  t25329 = -1.*t24690*t15243*t24718;
  t25330 = -1.*t24713*t24690*t16858;
  t25331 = t25329 + t25330;
  t25333 = -1.*t15228*t24692;
  t25334 = -1.*t20650*t24774;
  t25335 = t25333 + t25334;
  t25339 = -1.*t15243*t24718*t24692;
  t25340 = -1.*t24713*t24692*t16858;
  t25341 = t25339 + t25340;
  t25343 = t24690*t15228;
  t25344 = -1.*t20650*t24781;
  t25345 = t25343 + t25344;
  t25349 = t15243*t24718*t24716;
  t25350 = t24713*t24716*t16858;
  t25351 = t25349 + t25350;
  t25353 = t15228*t24709;
  t25354 = -1.*t20650*t24720;
  t25355 = t25353 + t25354;
  t25359 = t15243*t24718*t24732;
  t25360 = t24713*t24732*t16858;
  t25361 = t25359 + t25360;
  t25363 = t15228*t24716;
  t25364 = -1.*t20650*t24735;
  t25365 = t25363 + t25364;
  t25373 = t24809*t16858;
  t25374 = t15243*t24814;
  t25375 = t25373 + t25374;
  t25380 = t24809*t24802*t16858;
  t25381 = t15243*t24802*t24814;
  t25382 = t25380 + t25381;
  t25384 = -1.*t20650*t24901;
  t25385 = -1.*t15228*t24804;
  t25386 = t25384 + t25385;
  t25390 = t24809*t16858*t24804;
  t25391 = t15243*t24814*t24804;
  t25392 = t25390 + t25391;
  t25394 = t15228*t24802;
  t25395 = -1.*t20650*t24910;
  t25396 = t25394 + t25395;
  t25400 = t24809*t16858*t24812;
  t25401 = t15243*t24814*t24812;
  t25402 = t25400 + t25401;
  t25404 = t15228*t24807;
  t25405 = -1.*t20650*t24816;
  t25406 = t25404 + t25405;
  t25410 = t24809*t16858*t24807;
  t25411 = t15243*t24814*t24807;
  t25412 = t25410 + t25411;
  t25414 = t15228*t24825;
  t25415 = -1.*t20650*t24829;
  t25416 = t25414 + t25415;
  t25536 = t24965*t15243;
  t25537 = t24961*t16858;
  t25538 = t25536 + t25537;
  t25532 = t24961*t15243;
  t25533 = -1.*t24965*t16858;
  t25534 = t25532 + t25533;
  t25548 = t15243*t24976;
  t25549 = t24971*t16858;
  t25550 = t25548 + t25549;
  t25552 = t15243*t24971;
  t25553 = -1.*t24976*t16858;
  t25554 = t25552 + t25553;
  t25584 = t15243*t24990;
  t25585 = t24987*t16858;
  t25586 = t25584 + t25585;
  t25588 = t24987*t15243;
  t25589 = -1.*t24990*t16858;
  t25590 = t25588 + t25589;
  t25626 = t25004*t15243;
  t25627 = -1.*t25008*t16858;
  t25628 = t25626 + t25627;
  t25622 = t25008*t15243;
  t25623 = t25004*t16858;
  t25624 = t25622 + t25623;
  t25638 = t15243*t25019;
  t25639 = t25014*t16858;
  t25640 = t25638 + t25639;
  t25642 = t15243*t25014;
  t25643 = -1.*t25019*t16858;
  t25644 = t25642 + t25643;
  t25674 = t15243*t25033;
  t25675 = t25030*t16858;
  t25676 = t25674 + t25675;
  t25678 = t25030*t15243;
  t25679 = -1.*t25033*t16858;
  t25680 = t25678 + t25679;
  t25712 = t25047*t15243;
  t25716 = -1.*t25047*t16858;
  t25717 = t25712 + t25716;
  t25713 = t25047*t16858;
  t25714 = t25712 + t25713;
  t25727 = t15243*t25059;
  t25728 = t25054*t16858;
  t25729 = t25727 + t25728;
  t25731 = t15243*t25054;
  t25732 = -1.*t25059*t16858;
  t25733 = t25731 + t25732;
  t25763 = t15243*t25073;
  t25764 = t25070*t16858;
  t25765 = t25763 + t25764;
  t25767 = t25070*t15243;
  t25768 = -1.*t25073*t16858;
  t25769 = t25767 + t25768;
  t25801 = t15243*t25146;
  t25805 = -1.*t25146*t16858;
  t25806 = t25801 + t25805;
  t25802 = t25146*t16858;
  t25803 = t25801 + t25802;
  t25816 = t16858*t25156;
  t25817 = t15243*t25161;
  t25818 = t25816 + t25817;
  t25820 = t15243*t25156;
  t25821 = -1.*t16858*t25161;
  t25822 = t25820 + t25821;
  t25852 = t25180*t16858;
  t25853 = t15243*t25183;
  t25854 = t25852 + t25853;
  t25856 = t15243*t25180;
  t25857 = -1.*t16858*t25183;
  t25858 = t25856 + t25857;
  t24840 = Power(t20650,2);
  t25539 = t25538*t24852;
  t25542 = -1.*t25538*t25222;
  t25625 = -1.*t25624*t25233;
  t25633 = t25624*t24857;
  t25715 = -1.*t25714*t25244;
  t25722 = t25714*t24862;
  t25551 = t25550*t24852;
  t25558 = -1.*t25251*t25550;
  t25574 = -1.*t25550*t24852;
  t25578 = t25550*t25261;
  t25564 = t25251*t25550;
  t25568 = -1.*t25550*t25261;
  t25587 = -1.*t25586*t24852;
  t25595 = t25586*t25271;
  t25983 = t24040*t20650;
  t25984 = t15228*t25590;
  t25985 = t25983 + t25984;
  t25987 = t15228*t24040;
  t25988 = -1.*t20650*t25590;
  t25989 = t25987 + t25988;
  t25601 = t25586*t24852;
  t25606 = -1.*t25586*t25281;
  t25612 = -1.*t25586*t25271;
  t25616 = t25586*t25281;
  t25641 = t25640*t24857;
  t25648 = -1.*t25291*t25640;
  t25664 = -1.*t25640*t24857;
  t25668 = t25640*t25301;
  t25654 = t25291*t25640;
  t25658 = -1.*t25640*t25301;
  t25677 = -1.*t25676*t24857;
  t25685 = t25676*t25311;
  t26049 = t24506*t20650;
  t26050 = t15228*t25680;
  t26051 = t26049 + t26050;
  t26053 = t15228*t24506;
  t26054 = -1.*t20650*t25680;
  t26055 = t26053 + t26054;
  t25691 = t25676*t24857;
  t25696 = -1.*t25676*t25321;
  t25702 = -1.*t25676*t25311;
  t25706 = t25676*t25321;
  t25730 = t25729*t24862;
  t25737 = -1.*t25331*t25729;
  t25753 = -1.*t25729*t24862;
  t25757 = t25729*t25341;
  t25743 = t25331*t25729;
  t25747 = -1.*t25729*t25341;
  t25766 = -1.*t25765*t24862;
  t25774 = t25765*t25351;
  t26115 = t24758*t20650;
  t26116 = t15228*t25769;
  t26117 = t26115 + t26116;
  t26119 = t15228*t24758;
  t26120 = -1.*t20650*t25769;
  t26121 = t26119 + t26120;
  t25780 = t25765*t24862;
  t25785 = -1.*t25765*t25361;
  t25791 = -1.*t25765*t25351;
  t25795 = t25765*t25361;
  t25804 = -1.*t25803*t25375;
  t25811 = t25803*t24896;
  t25819 = t24896*t25818;
  t25826 = -1.*t25382*t25818;
  t25842 = -1.*t24896*t25818;
  t25846 = t25818*t25392;
  t25832 = t25382*t25818;
  t25836 = -1.*t25818*t25392;
  t25855 = -1.*t24896*t25854;
  t25863 = t25854*t25402;
  t26205 = t15228*t25858;
  t26206 = t20650*t24941;
  t26207 = t26205 + t26206;
  t26201 = -1.*t20650*t25858;
  t26202 = t15228*t24941;
  t26203 = t26201 + t26202;
  t25869 = t24896*t25854;
  t25874 = -1.*t25854*t25412;
  t25880 = -1.*t25854*t25402;
  t25884 = t25854*t25412;
  t25432 = t25208*t20650*t16875;
  t25433 = t25205*t24852;
  t25434 = t25432 + t25433;
  t25440 = t25208*t20650*t18723;
  t25441 = t25205*t24857;
  t25442 = t25440 + t25441;
  t25464 = t25205*t25271;
  t25465 = -1.*t25208*t25275;
  t25466 = t25464 + t25465;
  t25468 = t25205*t25281;
  t25469 = -1.*t25208*t25285;
  t25470 = t25468 + t25469;
  t25480 = t25205*t25311;
  t25481 = -1.*t25208*t25315;
  t25482 = t25480 + t25481;
  t25484 = t25205*t25321;
  t25485 = -1.*t25208*t25325;
  t25486 = t25484 + t25485;
  t23797 = -1.*var1[16];
  t23798 = var3[10] + t23797;
  t23824 = 0.28121*t18848;
  t23866 = t23857*t18848;
  t23869 = t23824 + t23866;
  t23871 = 0.28121*t18901;
  t23872 = t23857*t18901;
  t23873 = t23871 + t23872;
  t23881 = var3[9] + var1[15];
  t24032 = Power(t18831,2);
  t24033 = -1.*t24031*t24032;
  t24034 = Power(t18884,2);
  t24035 = -1.*t24031*t24034;
  t24036 = -0.15121 + t24033 + t24035;
  t24260 = t24259*t23410;
  t24261 = t24041 + t24260;
  t24262 = t20644*t24261;
  t24265 = -1.*t24259*t22111;
  t24271 = t24265 + t24266;
  t24272 = t22111*t24271;
  t24273 = -0.15121 + t24262 + t24272;
  t25456 = t25205*t25251;
  t25457 = -1.*t25208*t25255;
  t25458 = t25456 + t25457;
  t25460 = t25205*t25261;
  t25461 = -1.*t25208*t25265;
  t25462 = t25460 + t25461;
  t24321 = 0.15121*t23410;
  t24322 = 0.15121*t20644;
  t24323 = t24321 + t24322;
  t24359 = var3[12] + var1[6];
  t24370 = Power(t23548,2);
  t24371 = t24364*t24370;
  t24372 = Power(t23555,2);
  t24374 = t24364*t24372;
  t24375 = -0.15121 + t24371 + t24374;
  t24541 = t24537*t23568;
  t24561 = t24507 + t24541;
  t24573 = t23568*t24561;
  t24574 = -1.*t24537*t23579;
  t24576 = t24574 + t24575;
  t24577 = t23596*t24576;
  t24578 = -0.15121 + t24573 + t24577;
  t25472 = t25205*t25291;
  t25473 = -1.*t25208*t25295;
  t25474 = t25472 + t25473;
  t25476 = t25205*t25301;
  t25477 = -1.*t25208*t25305;
  t25478 = t25476 + t25477;
  t24602 = -0.15121*t23579;
  t24603 = -0.15121*t23596;
  t24604 = t24602 + t24603;
  t24625 = -1.*var1[7];
  t24634 = var3[13] + t24625;
  t24650 = 0.28121*t23551;
  t24651 = -1.*t24504*t23551;
  t24652 = t24650 + t24651;
  t24663 = 0.28121*t23556;
  t24672 = -1.*t24504*t23556;
  t24673 = t24663 + t24672;
  t24679 = -1.*var1[10];
  t24680 = var3[16] + t24679;
  t24682 = 0.28121*t24681;
  t24688 = t24687*t24681;
  t24689 = t24682 + t24688;
  t25496 = t25205*t25351;
  t25497 = -1.*t25208*t25355;
  t25498 = t25496 + t25497;
  t24724 = 0.28121*t24707;
  t24727 = t24687*t24707;
  t24728 = t24724 + t24727;
  t25500 = t25205*t25361;
  t25501 = -1.*t25208*t25365;
  t25502 = t25500 + t25501;
  t24741 = var3[15] + var1[9];
  t24747 = Power(t24690,2);
  t24748 = -1.*t24746*t24747;
  t24749 = Power(t24692,2);
  t24750 = -1.*t24746*t24749;
  t24751 = -0.15121 + t24748 + t24750;
  t25448 = t25208*t20650*t24754;
  t25449 = t25205*t24862;
  t25450 = t25448 + t25449;
  t24762 = t24761*t24732;
  t24763 = t24759 + t24762;
  t24764 = t24709*t24763;
  t24765 = -1.*t24761*t24716;
  t24767 = t24765 + t24766;
  t24768 = t24716*t24767;
  t24769 = -0.15121 + t24764 + t24768;
  t25488 = t25205*t25331;
  t25489 = -1.*t25208*t25335;
  t25490 = t25488 + t25489;
  t25492 = t25205*t25341;
  t25493 = -1.*t25208*t25345;
  t25494 = t25492 + t25493;
  t24785 = -0.15121*t24732;
  t24786 = -0.15121*t24709;
  t24787 = t24785 + t24786;
  t24921 = var3[6] + var1[12];
  t25504 = t25208*t20650*t24891;
  t25505 = t25205*t24896;
  t25506 = t25504 + t25505;
  t24928 = Power(t24802,2);
  t24929 = t24927*t24928;
  t24930 = Power(t24804,2);
  t24931 = t24927*t24930;
  t24932 = -0.15121 + t24929 + t24931;
  t25512 = t25205*t25382;
  t25513 = -1.*t25208*t25386;
  t25514 = t25512 + t25513;
  t25516 = t25205*t25392;
  t25517 = -1.*t25208*t25396;
  t25518 = t25516 + t25517;
  t24945 = t24944*t24807;
  t24946 = t24942 + t24945;
  t24947 = t24807*t24946;
  t24948 = -1.*t24944*t24812;
  t24950 = t24948 + t24949;
  t24951 = t24825*t24950;
  t24952 = -0.15121 + t24947 + t24951;
  t24935 = 0.15121*t24812;
  t24936 = 0.15121*t24825;
  t24937 = t24935 + t24936;
  t25520 = t25205*t25402;
  t25521 = -1.*t25208*t25406;
  t25522 = t25520 + t25521;
  t24791 = -1.*var1[13];
  t24792 = var3[7] + t24791;
  t24794 = 0.28121*t24793;
  t24800 = -1.*t24799*t24793;
  t24801 = t24794 + t24800;
  t24820 = 0.28121*t24805;
  t24821 = -1.*t24799*t24805;
  t24822 = t24820 + t24821;
  t25524 = t25205*t25412;
  t25525 = -1.*t25208*t25416;
  t25526 = t25524 + t25525;
  t24956 = var3[5] + var1[5];
  t24962 = -1.*t24961*t16850;
  t24966 = -1.*t24965*t16782;
  t24967 = t24962 + t24966;
  t24972 = -1.*t16850*t18831*t24971;
  t24977 = -1.*t18831*t16782*t24976;
  t24978 = t24972 + t24977;
  t24979 = t18831*t24978;
  t24980 = t16850*t24971*t18884;
  t24981 = t16782*t24976*t18884;
  t24982 = t24980 + t24981;
  t24983 = -1.*t18884*t24982;
  t24984 = t24979 + t24983;
  t24988 = t16850*t24987*t23410;
  t24991 = t16782*t24990*t23410;
  t24992 = t24041 + t24988 + t24991;
  t24993 = t20644*t24992;
  t24994 = -1.*t16850*t24987*t22111;
  t24995 = -1.*t16782*t24990*t22111;
  t24996 = t24994 + t24995 + t24266;
  t24997 = t22111*t24996;
  t24998 = t24993 + t24997;
  t25083 = t24965*t16850;
  t25084 = -1.*t24961*t16782;
  t25085 = t25083 + t25084;
  t25436 = t25205*t25222;
  t25437 = t25208*t20650*t24852;
  t25438 = t25436 + t25437;
  t25005 = t25004*t18543;
  t25009 = t25008*t17807;
  t25010 = t25005 + t25009;
  t25015 = t18543*t23548*t25014;
  t25020 = t23548*t17807*t25019;
  t25021 = t25015 + t25020;
  t25022 = t23548*t25021;
  t25023 = -1.*t18543*t25014*t23555;
  t25024 = -1.*t17807*t25019*t23555;
  t25025 = t25023 + t25024;
  t25026 = -1.*t23555*t25025;
  t25027 = t25022 + t25026;
  t25031 = t18543*t25030*t23568;
  t25034 = t17807*t25033*t23568;
  t25035 = t24507 + t25031 + t25034;
  t25036 = t23568*t25035;
  t25037 = -1.*t18543*t25030*t23579;
  t25038 = -1.*t17807*t25033*t23579;
  t25039 = t25037 + t25038 + t24575;
  t25040 = t23596*t25039;
  t25041 = t25036 + t25040;
  t25087 = -1.*t25008*t18543;
  t25088 = t25004*t17807;
  t25089 = t25087 + t25088;
  t25444 = t25205*t25233;
  t25445 = t25208*t20650*t24857;
  t25446 = t25444 + t25445;
  t25048 = -1.*t25047*t24713;
  t25050 = t25048 + t25049;
  t25055 = -1.*t24713*t24690*t25054;
  t25060 = -1.*t24690*t24718*t25059;
  t25061 = t25055 + t25060;
  t25062 = t24690*t25061;
  t25063 = t24713*t25054*t24692;
  t25064 = t24718*t25059*t24692;
  t25065 = t25063 + t25064;
  t25066 = -1.*t24692*t25065;
  t25067 = t25062 + t25066;
  t25071 = t24713*t25070*t24732;
  t25074 = t24718*t25073*t24732;
  t25075 = t24759 + t25071 + t25074;
  t25076 = t24709*t25075;
  t25077 = -1.*t24713*t25070*t24716;
  t25078 = -1.*t24718*t25073*t24716;
  t25079 = t25077 + t25078 + t24766;
  t25080 = t24716*t25079;
  t25081 = t25076 + t25080;
  t25091 = t25047*t24713;
  t25092 = t25091 + t25049;
  t25452 = t25205*t25244;
  t25453 = t25208*t20650*t24862;
  t25454 = t25452 + t25453;
  t25094 = -1.*t24971*t16782;
  t25095 = t16850*t24976;
  t25096 = t25094 + t25095;
  t25098 = t24971*t16782;
  t25099 = -1.*t16850*t24976;
  t25100 = t25098 + t25099;
  t25102 = t24987*t16782;
  t25103 = -1.*t16850*t24990;
  t25104 = t25102 + t25103;
  t25106 = -1.*t24987*t16782;
  t25107 = t16850*t24990;
  t25108 = t25106 + t25107;
  t25110 = t25014*t17807;
  t25111 = -1.*t18543*t25019;
  t25112 = t25110 + t25111;
  t25114 = -1.*t25014*t17807;
  t25115 = t18543*t25019;
  t25116 = t25114 + t25115;
  t25118 = -1.*t25030*t17807;
  t25119 = t18543*t25033;
  t25120 = t25118 + t25119;
  t25122 = t25030*t17807;
  t25123 = -1.*t18543*t25033;
  t25124 = t25122 + t25123;
  t25126 = -1.*t25054*t24718;
  t25127 = t24713*t25059;
  t25128 = t25126 + t25127;
  t25130 = t25054*t24718;
  t25131 = -1.*t24713*t25059;
  t25132 = t25130 + t25131;
  t25134 = t25070*t24718;
  t25135 = -1.*t24713*t25073;
  t25136 = t25134 + t25135;
  t25138 = -1.*t25070*t24718;
  t25139 = t24713*t25073;
  t25140 = t25138 + t25139;
  t25147 = t25146*t24809;
  t25149 = t25147 + t25148;
  t25151 = -1.*t25146*t24809;
  t25152 = t25151 + t25148;
  t25508 = t25205*t25375;
  t25509 = t25208*t20650*t24896;
  t25510 = t25508 + t25509;
  t25157 = t25156*t24814;
  t25162 = -1.*t24809*t25161;
  t25163 = t25157 + t25162;
  t25169 = t24809*t24802*t25156;
  t25170 = t24802*t24814*t25161;
  t25171 = t25169 + t25170;
  t25172 = t24802*t25171;
  t25173 = -1.*t24809*t25156*t24804;
  t25174 = -1.*t24814*t25161*t24804;
  t25175 = t25173 + t25174;
  t25176 = -1.*t24804*t25175;
  t25177 = t25172 + t25176;
  t25165 = -1.*t25156*t24814;
  t25166 = t24809*t25161;
  t25167 = t25165 + t25166;
  t25191 = t24809*t25180*t24807;
  t25192 = t24814*t25183*t24807;
  t25193 = t24942 + t25191 + t25192;
  t25194 = t24807*t25193;
  t25195 = -1.*t24809*t25180*t24812;
  t25196 = -1.*t24814*t25183*t24812;
  t25197 = t25195 + t25196 + t24949;
  t25198 = t24825*t25197;
  t25199 = t25194 + t25198;
  t25181 = -1.*t25180*t24814;
  t25184 = t24809*t25183;
  t25185 = t25181 + t25184;
  t25187 = t25180*t24814;
  t25188 = -1.*t24809*t25183;
  t25189 = t25187 + t25188;
  t24835 = -1.*var1[0];
  t24836 = var3[0] + t24835;
  t25423 = -14.82*t15228*t25208*t20650;
  t25424 = t15243*t25208*t20650;
  t25425 = t25205*t16858;
  t25426 = t25424 + t25425;
  t25427 = 10.1*t15228*t15243*t25426;
  t25428 = t25205*t15243;
  t25429 = -1.*t25208*t20650*t16858;
  t25430 = t25428 + t25429;
  t25431 = -10.1*t15228*t16858*t25430;
  t25435 = 2.85*t15228*t16875*t25434;
  t25439 = 1.18*t15228*t24852*t25438;
  t25443 = 2.85*t15228*t18723*t25442;
  t25447 = 1.18*t15228*t24857*t25446;
  t25451 = 2.85*t15228*t24754*t25450;
  t25455 = 1.18*t15228*t24862*t25454;
  t25459 = 1.39*t24280*t25458;
  t25463 = 1.39*t24313*t25462;
  t25467 = 0.28*t23242*t25466;
  t25471 = 0.28*t23524*t25470;
  t25475 = 1.39*t24592*t25474;
  t25479 = 1.39*t24600*t25478;
  t25483 = 0.28*t23588*t25482;
  t25487 = 0.28*t23772*t25486;
  t25491 = 1.39*t24776*t25490;
  t25495 = 1.39*t24783*t25494;
  t25499 = 0.28*t24722*t25498;
  t25503 = 0.28*t24737*t25502;
  t25507 = 2.85*t15228*t24891*t25506;
  t25511 = 1.18*t15228*t24896*t25510;
  t25515 = 1.39*t24904*t25514;
  t25519 = 1.39*t24912*t25518;
  t25523 = 0.28*t24818*t25522;
  t25527 = 0.28*t24831*t25526;
  t25528 = t25423 + t25427 + t25431 + t25435 + t25439 + t25443 + t25447 + t25451 + t25455 + t25459 + t25463 + t25467 + t25471 + t25475 + t25479 + t25483 + t25487 + t25491 + t25495 + t25499 + t25503 + t25507 + t25511 + t25515 + t25519 + t25523 + t25527;
  t25203 = -1.*var1[2];
  t25204 = var3[2] + t25203;
  t25207 = -1.*t25205*t15243*t20650;
  t25209 = t25208*t16858;
  t25210 = t25207 + t25209;
  t25212 = t15243*t25208;
  t25213 = t25205*t20650*t16858;
  t25214 = t25212 + t25213;
  t25216 = -1.*t25205*t20650*t16875;
  t25217 = t25208*t24852;
  t25218 = t25216 + t25217;
  t25223 = t25208*t25222;
  t25224 = -1.*t25205*t20650*t24852;
  t25225 = t25223 + t25224;
  t25227 = -1.*t25205*t20650*t18723;
  t25228 = t25208*t24857;
  t25229 = t25227 + t25228;
  t25234 = t25208*t25233;
  t25235 = -1.*t25205*t20650*t24857;
  t25236 = t25234 + t25235;
  t25238 = -1.*t25205*t20650*t24754;
  t25239 = t25208*t24862;
  t25240 = t25238 + t25239;
  t25245 = t25208*t25244;
  t25246 = -1.*t25205*t20650*t24862;
  t25247 = t25245 + t25246;
  t25252 = t25208*t25251;
  t25256 = t25205*t25255;
  t25257 = t25252 + t25256;
  t25262 = t25208*t25261;
  t25266 = t25205*t25265;
  t25267 = t25262 + t25266;
  t25272 = t25208*t25271;
  t25276 = t25205*t25275;
  t25277 = t25272 + t25276;
  t25282 = t25208*t25281;
  t25286 = t25205*t25285;
  t25287 = t25282 + t25286;
  t25292 = t25208*t25291;
  t25296 = t25205*t25295;
  t25297 = t25292 + t25296;
  t25302 = t25208*t25301;
  t25306 = t25205*t25305;
  t25307 = t25302 + t25306;
  t25312 = t25208*t25311;
  t25316 = t25205*t25315;
  t25317 = t25312 + t25316;
  t25322 = t25208*t25321;
  t25326 = t25205*t25325;
  t25327 = t25322 + t25326;
  t25332 = t25208*t25331;
  t25336 = t25205*t25335;
  t25337 = t25332 + t25336;
  t25342 = t25208*t25341;
  t25346 = t25205*t25345;
  t25347 = t25342 + t25346;
  t25352 = t25208*t25351;
  t25356 = t25205*t25355;
  t25357 = t25352 + t25356;
  t25362 = t25208*t25361;
  t25366 = t25205*t25365;
  t25367 = t25362 + t25366;
  t25369 = -1.*t25205*t20650*t24891;
  t25370 = t25208*t24896;
  t25371 = t25369 + t25370;
  t25376 = t25208*t25375;
  t25377 = -1.*t25205*t20650*t24896;
  t25378 = t25376 + t25377;
  t25383 = t25208*t25382;
  t25387 = t25205*t25386;
  t25388 = t25383 + t25387;
  t25393 = t25208*t25392;
  t25397 = t25205*t25396;
  t25398 = t25393 + t25397;
  t25403 = t25208*t25402;
  t25407 = t25205*t25406;
  t25408 = t25403 + t25407;
  t25413 = t25208*t25412;
  t25417 = t25205*t25416;
  t25418 = t25413 + t25417;
  t25422 = var3[1] + var1[1];
  t25530 = -1.*var1[4];
  t25531 = var3[4] + t25530;
  t25535 = t25534*t16875;
  t25540 = t25535 + t25539;
  t25541 = t25222*t25540;
  t25543 = -1.*t25534*t24852;
  t25544 = t25542 + t25543;
  t25545 = t24852*t25544;
  t25546 = t25541 + t25545;
  t25555 = t16875*t25554;
  t25556 = t25551 + t25555;
  t25557 = t25251*t25556;
  t25559 = -1.*t24278*t25554;
  t25560 = t25558 + t25559;
  t25561 = t24852*t25560;
  t25562 = t25557 + t25561;
  t25565 = t24278*t25554;
  t25566 = t25564 + t25565;
  t25567 = t25261*t25566;
  t25569 = -1.*t25554*t24311;
  t25570 = t25568 + t25569;
  t25571 = t25251*t25570;
  t25572 = t25567 + t25571;
  t25575 = -1.*t16875*t25554;
  t25576 = t25574 + t25575;
  t25577 = t25261*t25576;
  t25579 = t25554*t24311;
  t25580 = t25578 + t25579;
  t25581 = t24852*t25580;
  t25582 = t25577 + t25581;
  t25591 = -1.*t16875*t25590;
  t25592 = t25587 + t25591;
  t25593 = t25271*t25592;
  t25594 = t24040*t20644;
  t25596 = t25590*t22872;
  t25597 = t25594 + t25595 + t25596;
  t25598 = t24852*t25597;
  t25599 = t25593 + t25598;
  t25602 = t16875*t25590;
  t25603 = t25601 + t25602;
  t25604 = t25281*t25603;
  t25605 = -1.*t24040*t22111;
  t25607 = -1.*t25590*t23464;
  t25608 = t25605 + t25606 + t25607;
  t25609 = t24852*t25608;
  t25610 = t25604 + t25609;
  t25613 = -1.*t25590*t22872;
  t25614 = t24266 + t25612 + t25613;
  t25615 = t25281*t25614;
  t25617 = t25590*t23464;
  t25618 = t24041 + t25616 + t25617;
  t25619 = t25271*t25618;
  t25620 = t25615 + t25619;
  t25629 = -1.*t25628*t24857;
  t25630 = t25625 + t25629;
  t25631 = t24857*t25630;
  t25632 = t25628*t18723;
  t25634 = t25632 + t25633;
  t25635 = t25233*t25634;
  t25636 = t25631 + t25635;
  t25645 = t18723*t25644;
  t25646 = t25641 + t25645;
  t25647 = t25291*t25646;
  t25649 = -1.*t24590*t25644;
  t25650 = t25648 + t25649;
  t25651 = t24857*t25650;
  t25652 = t25647 + t25651;
  t25655 = t24590*t25644;
  t25656 = t25654 + t25655;
  t25657 = t25301*t25656;
  t25659 = -1.*t25644*t24597;
  t25660 = t25658 + t25659;
  t25661 = t25291*t25660;
  t25662 = t25657 + t25661;
  t25665 = -1.*t18723*t25644;
  t25666 = t25664 + t25665;
  t25667 = t25301*t25666;
  t25669 = t25644*t24597;
  t25670 = t25668 + t25669;
  t25671 = t24857*t25670;
  t25672 = t25667 + t25671;
  t25681 = -1.*t18723*t25680;
  t25682 = t25677 + t25681;
  t25683 = t25311*t25682;
  t25684 = t24506*t23568;
  t25686 = t25680*t23586;
  t25687 = t25684 + t25685 + t25686;
  t25688 = t24857*t25687;
  t25689 = t25683 + t25688;
  t25692 = t18723*t25680;
  t25693 = t25691 + t25692;
  t25694 = t25321*t25693;
  t25695 = -1.*t24506*t23596;
  t25697 = -1.*t25680*t23706;
  t25698 = t25695 + t25696 + t25697;
  t25699 = t24857*t25698;
  t25700 = t25694 + t25699;
  t25703 = -1.*t25680*t23586;
  t25704 = t24575 + t25702 + t25703;
  t25705 = t25321*t25704;
  t25707 = t25680*t23706;
  t25708 = t24507 + t25706 + t25707;
  t25709 = t25311*t25708;
  t25710 = t25705 + t25709;
  t25718 = -1.*t25717*t24862;
  t25719 = t25715 + t25718;
  t25720 = t24862*t25719;
  t25721 = t25717*t24754;
  t25723 = t25721 + t25722;
  t25724 = t25244*t25723;
  t25725 = t25720 + t25724;
  t25734 = t24754*t25733;
  t25735 = t25730 + t25734;
  t25736 = t25331*t25735;
  t25738 = -1.*t24774*t25733;
  t25739 = t25737 + t25738;
  t25740 = t24862*t25739;
  t25741 = t25736 + t25740;
  t25744 = t24774*t25733;
  t25745 = t25743 + t25744;
  t25746 = t25341*t25745;
  t25748 = -1.*t25733*t24781;
  t25749 = t25747 + t25748;
  t25750 = t25331*t25749;
  t25751 = t25746 + t25750;
  t25754 = -1.*t24754*t25733;
  t25755 = t25753 + t25754;
  t25756 = t25341*t25755;
  t25758 = t25733*t24781;
  t25759 = t25757 + t25758;
  t25760 = t24862*t25759;
  t25761 = t25756 + t25760;
  t25770 = -1.*t24754*t25769;
  t25771 = t25766 + t25770;
  t25772 = t25351*t25771;
  t25773 = t24758*t24709;
  t25775 = t25769*t24720;
  t25776 = t25773 + t25774 + t25775;
  t25777 = t24862*t25776;
  t25778 = t25772 + t25777;
  t25781 = t24754*t25769;
  t25782 = t25780 + t25781;
  t25783 = t25361*t25782;
  t25784 = -1.*t24758*t24716;
  t25786 = -1.*t25769*t24735;
  t25787 = t25784 + t25785 + t25786;
  t25788 = t24862*t25787;
  t25789 = t25783 + t25788;
  t25792 = -1.*t25769*t24720;
  t25793 = t24766 + t25791 + t25792;
  t25794 = t25361*t25793;
  t25796 = t25769*t24735;
  t25797 = t24759 + t25795 + t25796;
  t25798 = t25351*t25797;
  t25799 = t25794 + t25798;
  t25807 = -1.*t25806*t24896;
  t25808 = t25804 + t25807;
  t25809 = t24896*t25808;
  t25810 = t25806*t24891;
  t25812 = t25810 + t25811;
  t25813 = t25375*t25812;
  t25814 = t25809 + t25813;
  t25823 = t24891*t25822;
  t25824 = t25819 + t25823;
  t25825 = t25382*t25824;
  t25827 = -1.*t24901*t25822;
  t25828 = t25826 + t25827;
  t25829 = t24896*t25828;
  t25830 = t25825 + t25829;
  t25833 = t24901*t25822;
  t25834 = t25832 + t25833;
  t25835 = t25834*t25392;
  t25837 = -1.*t25822*t24910;
  t25838 = t25836 + t25837;
  t25839 = t25382*t25838;
  t25840 = t25835 + t25839;
  t25843 = -1.*t24891*t25822;
  t25844 = t25842 + t25843;
  t25845 = t25844*t25392;
  t25847 = t25822*t24910;
  t25848 = t25846 + t25847;
  t25849 = t24896*t25848;
  t25850 = t25845 + t25849;
  t25859 = -1.*t24891*t25858;
  t25860 = t25855 + t25859;
  t25861 = t25860*t25402;
  t25862 = t24941*t24807;
  t25864 = t25858*t24816;
  t25865 = t25862 + t25863 + t25864;
  t25866 = t24896*t25865;
  t25867 = t25861 + t25866;
  t25870 = t24891*t25858;
  t25871 = t25869 + t25870;
  t25872 = t25871*t25412;
  t25873 = -1.*t24941*t24825;
  t25875 = -1.*t25858*t24829;
  t25876 = t25873 + t25874 + t25875;
  t25877 = t24896*t25876;
  t25878 = t25872 + t25877;
  t25881 = -1.*t25858*t24816;
  t25882 = t24949 + t25880 + t25881;
  t25883 = t25412*t25882;
  t25885 = t25858*t24829;
  t25886 = t24942 + t25884 + t25885;
  t25887 = t25402*t25886;
  t25888 = t25883 + t25887;
  t25892 = var3[3] + var1[3];
  t25893 = -1.*t24837*t25534*t16875;
  t25894 = -1.*t24840*t25534*t16875;
  t25895 = -1.*t25538*t24852;
  t25896 = t25893 + t25894 + t25895;
  t25898 = t25538*t25222;
  t25899 = t24837*t25534*t24852;
  t25900 = t24840*t25534*t24852;
  t25901 = t25898 + t25899 + t25900;
  t25903 = t25624*t25233;
  t25904 = t24837*t25628*t24857;
  t25905 = t24840*t25628*t24857;
  t25906 = t25903 + t25904 + t25905;
  t25908 = -1.*t24837*t25628*t18723;
  t25909 = -1.*t24840*t25628*t18723;
  t25910 = -1.*t25624*t24857;
  t25911 = t25908 + t25909 + t25910;
  t25913 = t25714*t25244;
  t25914 = t24837*t25717*t24862;
  t25915 = t24840*t25717*t24862;
  t25916 = t25913 + t25914 + t25915;
  t25918 = -1.*t24837*t25717*t24754;
  t25919 = -1.*t24840*t25717*t24754;
  t25920 = -1.*t25714*t24862;
  t25921 = t25918 + t25919 + t25920;
  t25923 = t24837*t25534*t16875;
  t25924 = t24840*t25534*t16875;
  t25925 = t25923 + t25924 + t25539;
  t25926 = t15228*t24852*t25925;
  t25927 = -1.*t24837*t25534*t24852;
  t25928 = -1.*t24840*t25534*t24852;
  t25929 = t25542 + t25927 + t25928;
  t25930 = t15228*t16875*t25929;
  t25931 = t25926 + t25930;
  t25933 = -1.*t24837*t25628*t24857;
  t25934 = -1.*t24840*t25628*t24857;
  t25935 = t25625 + t25933 + t25934;
  t25936 = t15228*t18723*t25935;
  t25937 = t24837*t25628*t18723;
  t25938 = t24840*t25628*t18723;
  t25939 = t25937 + t25938 + t25633;
  t25940 = t15228*t24857*t25939;
  t25941 = t25936 + t25940;
  t25943 = -1.*t24837*t25717*t24862;
  t25944 = -1.*t24840*t25717*t24862;
  t25945 = t25715 + t25943 + t25944;
  t25946 = t15228*t24754*t25945;
  t25947 = t24837*t25717*t24754;
  t25948 = t24840*t25717*t24754;
  t25949 = t25947 + t25948 + t25722;
  t25950 = t15228*t24862*t25949;
  t25951 = t25946 + t25950;
  t25953 = t24837*t16875*t25554;
  t25954 = t24840*t16875*t25554;
  t25955 = t25551 + t25953 + t25954;
  t25956 = t24280*t25955;
  t25957 = -1.*t15228*t25554*t24280;
  t25958 = t20650*t25554*t25255;
  t25959 = t25558 + t25957 + t25958;
  t25960 = t15228*t16875*t25959;
  t25961 = t25956 + t25960;
  t25963 = -1.*t24837*t16875*t25554;
  t25964 = -1.*t24840*t16875*t25554;
  t25965 = t25574 + t25963 + t25964;
  t25966 = t25965*t24313;
  t25967 = t15228*t25554*t24313;
  t25968 = -1.*t20650*t25554*t25265;
  t25969 = t25578 + t25967 + t25968;
  t25970 = t15228*t16875*t25969;
  t25971 = t25966 + t25970;
  t25973 = t15228*t25554*t24280;
  t25974 = -1.*t20650*t25554*t25255;
  t25975 = t25564 + t25973 + t25974;
  t25976 = t24313*t25975;
  t25977 = -1.*t15228*t25554*t24313;
  t25978 = t20650*t25554*t25265;
  t25979 = t25568 + t25977 + t25978;
  t25980 = t24280*t25979;
  t25981 = t25976 + t25980;
  t25986 = -1.*t15228*t16875*t25985;
  t25990 = t20650*t16875*t25989;
  t25991 = t25587 + t25986 + t25990;
  t25992 = t23242*t25991;
  t25993 = t25985*t23242;
  t25994 = t25989*t25275;
  t25995 = t25595 + t25993 + t25994;
  t25996 = t15228*t16875*t25995;
  t25997 = t25992 + t25996;
  t25999 = t15228*t16875*t25985;
  t26000 = -1.*t20650*t16875*t25989;
  t26001 = t25601 + t25999 + t26000;
  t26002 = t23524*t26001;
  t26003 = -1.*t25985*t23524;
  t26004 = -1.*t25989*t25285;
  t26005 = t25606 + t26003 + t26004;
  t26006 = t15228*t16875*t26005;
  t26007 = t26002 + t26006;
  t26009 = -1.*t25985*t23242;
  t26010 = -1.*t25989*t25275;
  t26011 = t25612 + t26009 + t26010;
  t26012 = t23524*t26011;
  t26013 = t25985*t23524;
  t26014 = t25989*t25285;
  t26015 = t25616 + t26013 + t26014;
  t26016 = t23242*t26015;
  t26017 = t26012 + t26016;
  t26019 = t24837*t18723*t25644;
  t26020 = t24840*t18723*t25644;
  t26021 = t25641 + t26019 + t26020;
  t26022 = t24592*t26021;
  t26023 = -1.*t15228*t25644*t24592;
  t26024 = t20650*t25644*t25295;
  t26025 = t25648 + t26023 + t26024;
  t26026 = t15228*t18723*t26025;
  t26027 = t26022 + t26026;
  t26029 = -1.*t24837*t18723*t25644;
  t26030 = -1.*t24840*t18723*t25644;
  t26031 = t25664 + t26029 + t26030;
  t26032 = t26031*t24600;
  t26033 = t15228*t25644*t24600;
  t26034 = -1.*t20650*t25644*t25305;
  t26035 = t25668 + t26033 + t26034;
  t26036 = t15228*t18723*t26035;
  t26037 = t26032 + t26036;
  t26039 = t15228*t25644*t24592;
  t26040 = -1.*t20650*t25644*t25295;
  t26041 = t25654 + t26039 + t26040;
  t26042 = t24600*t26041;
  t26043 = -1.*t15228*t25644*t24600;
  t26044 = t20650*t25644*t25305;
  t26045 = t25658 + t26043 + t26044;
  t26046 = t24592*t26045;
  t26047 = t26042 + t26046;
  t26052 = -1.*t15228*t18723*t26051;
  t26056 = t20650*t18723*t26055;
  t26057 = t25677 + t26052 + t26056;
  t26058 = t23588*t26057;
  t26059 = t26051*t23588;
  t26060 = t26055*t25315;
  t26061 = t25685 + t26059 + t26060;
  t26062 = t15228*t18723*t26061;
  t26063 = t26058 + t26062;
  t26065 = t15228*t18723*t26051;
  t26066 = -1.*t20650*t18723*t26055;
  t26067 = t25691 + t26065 + t26066;
  t26068 = t23772*t26067;
  t26069 = -1.*t26051*t23772;
  t26070 = -1.*t26055*t25325;
  t26071 = t25696 + t26069 + t26070;
  t26072 = t15228*t18723*t26071;
  t26073 = t26068 + t26072;
  t26075 = -1.*t26051*t23588;
  t26076 = -1.*t26055*t25315;
  t26077 = t25702 + t26075 + t26076;
  t26078 = t23772*t26077;
  t26079 = t26051*t23772;
  t26080 = t26055*t25325;
  t26081 = t25706 + t26079 + t26080;
  t26082 = t23588*t26081;
  t26083 = t26078 + t26082;
  t26085 = t24837*t24754*t25733;
  t26086 = t24840*t24754*t25733;
  t26087 = t25730 + t26085 + t26086;
  t26088 = t24776*t26087;
  t26089 = -1.*t15228*t25733*t24776;
  t26090 = t20650*t25733*t25335;
  t26091 = t25737 + t26089 + t26090;
  t26092 = t15228*t24754*t26091;
  t26093 = t26088 + t26092;
  t26095 = -1.*t24837*t24754*t25733;
  t26096 = -1.*t24840*t24754*t25733;
  t26097 = t25753 + t26095 + t26096;
  t26098 = t26097*t24783;
  t26099 = t15228*t25733*t24783;
  t26100 = -1.*t20650*t25733*t25345;
  t26101 = t25757 + t26099 + t26100;
  t26102 = t15228*t24754*t26101;
  t26103 = t26098 + t26102;
  t26105 = t15228*t25733*t24776;
  t26106 = -1.*t20650*t25733*t25335;
  t26107 = t25743 + t26105 + t26106;
  t26108 = t24783*t26107;
  t26109 = -1.*t15228*t25733*t24783;
  t26110 = t20650*t25733*t25345;
  t26111 = t25747 + t26109 + t26110;
  t26112 = t24776*t26111;
  t26113 = t26108 + t26112;
  t26118 = -1.*t15228*t24754*t26117;
  t26122 = t20650*t24754*t26121;
  t26123 = t25766 + t26118 + t26122;
  t26124 = t24722*t26123;
  t26125 = t26117*t24722;
  t26126 = t26121*t25355;
  t26127 = t25774 + t26125 + t26126;
  t26128 = t15228*t24754*t26127;
  t26129 = t26124 + t26128;
  t26131 = t15228*t24754*t26117;
  t26132 = -1.*t20650*t24754*t26121;
  t26133 = t25780 + t26131 + t26132;
  t26134 = t24737*t26133;
  t26135 = -1.*t26117*t24737;
  t26136 = -1.*t26121*t25365;
  t26137 = t25785 + t26135 + t26136;
  t26138 = t15228*t24754*t26137;
  t26139 = t26134 + t26138;
  t26141 = -1.*t26117*t24722;
  t26142 = -1.*t26121*t25355;
  t26143 = t25791 + t26141 + t26142;
  t26144 = t24737*t26143;
  t26145 = t26117*t24737;
  t26146 = t26121*t25365;
  t26147 = t25795 + t26145 + t26146;
  t26148 = t24722*t26147;
  t26149 = t26144 + t26148;
  t26151 = t25803*t25375;
  t26152 = t24837*t25806*t24896;
  t26153 = t24840*t25806*t24896;
  t26154 = t26151 + t26152 + t26153;
  t26156 = -1.*t24837*t25806*t24891;
  t26157 = -1.*t24840*t25806*t24891;
  t26158 = -1.*t25803*t24896;
  t26159 = t26156 + t26157 + t26158;
  t26161 = -1.*t24837*t25806*t24896;
  t26162 = -1.*t24840*t25806*t24896;
  t26163 = t25804 + t26161 + t26162;
  t26164 = t15228*t24891*t26163;
  t26165 = t24837*t25806*t24891;
  t26166 = t24840*t25806*t24891;
  t26167 = t26165 + t26166 + t25811;
  t26168 = t15228*t24896*t26167;
  t26169 = t26164 + t26168;
  t26171 = t24837*t24891*t25822;
  t26172 = t24840*t24891*t25822;
  t26173 = t25819 + t26171 + t26172;
  t26174 = t26173*t24904;
  t26175 = t20650*t25822*t25386;
  t26176 = -1.*t15228*t25822*t24904;
  t26177 = t25826 + t26175 + t26176;
  t26178 = t15228*t24891*t26177;
  t26179 = t26174 + t26178;
  t26181 = -1.*t24837*t24891*t25822;
  t26182 = -1.*t24840*t24891*t25822;
  t26183 = t25842 + t26181 + t26182;
  t26184 = t26183*t24912;
  t26185 = t15228*t25822*t24912;
  t26186 = -1.*t20650*t25822*t25396;
  t26187 = t25846 + t26185 + t26186;
  t26188 = t15228*t24891*t26187;
  t26189 = t26184 + t26188;
  t26191 = -1.*t20650*t25822*t25386;
  t26192 = t15228*t25822*t24904;
  t26193 = t25832 + t26191 + t26192;
  t26194 = t26193*t24912;
  t26195 = -1.*t15228*t25822*t24912;
  t26196 = t20650*t25822*t25396;
  t26197 = t25836 + t26195 + t26196;
  t26198 = t24904*t26197;
  t26199 = t26194 + t26198;
  t26204 = t20650*t24891*t26203;
  t26208 = -1.*t15228*t24891*t26207;
  t26209 = t25855 + t26204 + t26208;
  t26210 = t26209*t24818;
  t26211 = t26207*t24818;
  t26212 = t26203*t25406;
  t26213 = t25863 + t26211 + t26212;
  t26214 = t15228*t24891*t26213;
  t26215 = t26210 + t26214;
  t26217 = -1.*t20650*t24891*t26203;
  t26218 = t15228*t24891*t26207;
  t26219 = t25869 + t26217 + t26218;
  t26220 = t26219*t24831;
  t26221 = -1.*t26207*t24831;
  t26222 = -1.*t26203*t25416;
  t26223 = t25874 + t26221 + t26222;
  t26224 = t15228*t24891*t26223;
  t26225 = t26220 + t26224;
  t26227 = -1.*t26207*t24818;
  t26228 = -1.*t26203*t25406;
  t26229 = t25880 + t26227 + t26228;
  t26230 = t24831*t26229;
  t26231 = t26207*t24831;
  t26232 = t26203*t25416;
  t26233 = t25884 + t26231 + t26232;
  t26234 = t24818*t26233;
  t26235 = t26230 + t26234;
  t25206 = 14.82*t25205*t15228*t20650;
  t25211 = 10.1*t15228*t15243*t25210;
  t25215 = -10.1*t15228*t16858*t25214;
  t25219 = 2.85*t15228*t16875*t25218;
  t25226 = 1.18*t15228*t24852*t25225;
  t25230 = 2.85*t15228*t18723*t25229;
  t25237 = 1.18*t15228*t24857*t25236;
  t25241 = 2.85*t15228*t24754*t25240;
  t25248 = 1.18*t15228*t24862*t25247;
  t25258 = 1.39*t24280*t25257;
  t25268 = 1.39*t24313*t25267;
  t25278 = 0.28*t23242*t25277;
  t25288 = 0.28*t23524*t25287;
  t25298 = 1.39*t24592*t25297;
  t25308 = 1.39*t24600*t25307;
  t25318 = 0.28*t23588*t25317;
  t25328 = 0.28*t23772*t25327;
  t25338 = 1.39*t24776*t25337;
  t25348 = 1.39*t24783*t25347;
  t25358 = 0.28*t24722*t25357;
  t25368 = 0.28*t24737*t25367;
  t25372 = 2.85*t15228*t24891*t25371;
  t25379 = 1.18*t15228*t24896*t25378;
  t25389 = 1.39*t24904*t25388;
  t25399 = 1.39*t24912*t25398;
  t25409 = 0.28*t24818*t25408;
  t25419 = 0.28*t24831*t25418;
  t25420 = t25206 + t25211 + t25215 + t25219 + t25226 + t25230 + t25237 + t25241 + t25248 + t25258 + t25268 + t25278 + t25288 + t25298 + t25308 + t25318 + t25328 + t25338 + t25348 + t25358 + t25368 + t25372 + t25379 + t25389 + t25399 + t25409 + t25419;
  t26325 = -14.82*t25205*t24837*t25208;
  t26326 = 10.1*t25426*t25210;
  t26327 = 10.1*t25214*t25430;
  t26328 = 2.85*t25434*t25218;
  t26329 = 1.18*t25225*t25438;
  t26330 = 2.85*t25442*t25229;
  t26331 = 1.18*t25236*t25446;
  t26332 = 2.85*t25450*t25240;
  t26333 = 1.18*t25247*t25454;
  t26334 = 1.39*t25257*t25458;
  t26335 = 1.39*t25267*t25462;
  t26336 = 0.28*t25277*t25466;
  t26337 = 0.28*t25287*t25470;
  t26338 = 1.39*t25297*t25474;
  t26339 = 1.39*t25307*t25478;
  t26340 = 0.28*t25317*t25482;
  t26341 = 0.28*t25327*t25486;
  t26342 = 1.39*t25337*t25490;
  t26343 = 1.39*t25347*t25494;
  t26344 = 0.28*t25357*t25498;
  t26345 = 0.28*t25367*t25502;
  t26346 = 2.85*t25506*t25371;
  t26347 = 1.18*t25378*t25510;
  t26348 = 1.39*t25388*t25514;
  t26349 = 1.39*t25398*t25518;
  t26350 = 0.28*t25408*t25522;
  t26351 = 0.28*t25418*t25526;
  t26352 = t26325 + t26326 + t26327 + t26328 + t26329 + t26330 + t26331 + t26332 + t26333 + t26334 + t26335 + t26336 + t26337 + t26338 + t26339 + t26340 + t26341 + t26342 + t26343 + t26344 + t26345 + t26346 + t26347 + t26348 + t26349 + t26350 + t26351;
  t26699 = -0.19821*t18848;
  t26700 = t23849 + t26699;
  t26701 = t18831*t26700;
  t26702 = 0.305*t18884*t18901;
  t26703 = t23970 + t26701 + t26702;
  t26707 = t16850*t26703;
  t26708 = t24959 + t26707;
  t26704 = t16782*t26703;
  t26705 = t24963 + t24964 + t24974 + t26704;
  t26712 = t26700*t18884;
  t26713 = -0.305*t18831*t18901;
  t26714 = t24038 + t26712 + t26713;
  t26716 = t15243*t26708;
  t26717 = -1.*t26705*t16858;
  t26718 = t26716 + t26717;
  t26706 = t15243*t26705;
  t26709 = t26708*t16858;
  t26710 = t26706 + t26709;
  t26715 = t26714*t20650;
  t26719 = t15228*t26718;
  t26720 = t26715 + t26719;
  t26722 = t15228*t26714;
  t26723 = -1.*t20650*t26718;
  t26724 = t26722 + t26723;
  t26759 = 0.19821*t23551;
  t26760 = t24502 + t26759;
  t26761 = t23548*t26760;
  t26762 = -0.305*t23555*t23556;
  t26763 = t24362 + t26761 + t26762;
  t26767 = t18543*t26763;
  t26768 = t25002 + t26767;
  t26764 = t17807*t26763;
  t26765 = t25006 + t25007 + t25017 + t26764;
  t26772 = -1.*t26760*t23555;
  t26773 = -0.305*t23548*t23556;
  t26774 = t24378 + t26772 + t26773;
  t26776 = t15243*t26768;
  t26777 = -1.*t26765*t16858;
  t26778 = t26776 + t26777;
  t26766 = t15243*t26765;
  t26769 = t26768*t16858;
  t26770 = t26766 + t26769;
  t26775 = t26774*t20650;
  t26779 = t15228*t26778;
  t26780 = t26775 + t26779;
  t26782 = t15228*t26774;
  t26783 = -1.*t20650*t26778;
  t26784 = t26782 + t26783;
  t26824 = 0.0046*t20650;
  t25897 = 1.18*t15228*t20650*t24852*t25896;
  t25902 = 1.18*t15228*t20650*t16875*t25901;
  t25907 = 1.18*t15228*t20650*t18723*t25906;
  t25912 = 1.18*t15228*t20650*t24857*t25911;
  t25917 = 1.18*t15228*t20650*t24754*t25916;
  t25922 = 1.18*t15228*t20650*t24862*t25921;
  t25932 = 1.18*t20650*t25931;
  t25942 = 1.18*t20650*t25941;
  t25952 = 1.18*t20650*t25951;
  t25962 = 1.39*t24313*t25961;
  t25972 = 1.39*t24280*t25971;
  t25982 = 1.39*t15228*t16875*t25981;
  t25998 = 0.28*t23524*t25997;
  t26008 = 0.28*t23242*t26007;
  t26018 = 0.28*t15228*t16875*t26017;
  t26028 = 1.39*t24600*t26027;
  t26038 = 1.39*t24592*t26037;
  t26048 = 1.39*t15228*t18723*t26047;
  t26064 = 0.28*t23772*t26063;
  t26074 = 0.28*t23588*t26073;
  t26084 = 0.28*t15228*t18723*t26083;
  t26094 = 1.39*t24783*t26093;
  t26104 = 1.39*t24776*t26103;
  t26114 = 1.39*t15228*t24754*t26113;
  t26130 = 0.28*t24737*t26129;
  t26140 = 0.28*t24722*t26139;
  t26150 = 0.28*t15228*t24754*t26149;
  t26155 = 1.18*t15228*t20650*t24891*t26154;
  t26160 = 1.18*t15228*t20650*t24896*t26159;
  t26170 = 1.18*t20650*t26169;
  t26180 = 1.39*t24912*t26179;
  t26190 = 1.39*t24904*t26189;
  t26200 = 1.39*t15228*t24891*t26199;
  t26216 = 0.28*t24831*t26215;
  t26226 = 0.28*t24818*t26225;
  t26236 = 0.28*t15228*t24891*t26235;
  t26237 = t25897 + t25902 + t25907 + t25912 + t25917 + t25922 + t25932 + t25942 + t25952 + t25962 + t25972 + t25982 + t25998 + t26008 + t26018 + t26028 + t26038 + t26048 + t26064 + t26074 + t26084 + t26094 + t26104 + t26114 + t26130 + t26140 + t26150 + t26155 + t26160 + t26170 + t26180 + t26190 + t26200 + t26216 + t26226 + t26236;
  t26440 = 1.18*t20650*t25438*t25896;
  t26441 = 1.18*t20650*t25434*t25901;
  t26442 = 1.18*t20650*t25442*t25906;
  t26443 = 1.18*t20650*t25446*t25911;
  t26444 = 1.18*t20650*t25450*t25916;
  t26445 = 1.18*t20650*t25454*t25921;
  t26446 = -1.18*t15228*t25208*t25931;
  t26447 = -1.18*t15228*t25208*t25941;
  t26448 = -1.18*t15228*t25208*t25951;
  t26449 = 1.39*t25462*t25961;
  t26450 = 1.39*t25458*t25971;
  t26451 = 1.39*t25434*t25981;
  t26452 = 0.28*t25470*t25997;
  t26453 = 0.28*t25466*t26007;
  t26454 = 0.28*t25434*t26017;
  t26455 = 1.39*t25478*t26027;
  t26456 = 1.39*t25474*t26037;
  t26457 = 1.39*t25442*t26047;
  t26458 = 0.28*t25486*t26063;
  t26459 = 0.28*t25482*t26073;
  t26460 = 0.28*t25442*t26083;
  t26461 = 1.39*t25494*t26093;
  t26462 = 1.39*t25490*t26103;
  t26463 = 1.39*t25450*t26113;
  t26464 = 0.28*t25502*t26129;
  t26465 = 0.28*t25498*t26139;
  t26466 = 0.28*t25450*t26149;
  t26467 = 1.18*t20650*t25506*t26154;
  t26468 = 1.18*t20650*t25510*t26159;
  t26469 = -1.18*t15228*t25208*t26169;
  t26470 = 1.39*t26179*t25518;
  t26471 = 1.39*t25514*t26189;
  t26472 = 1.39*t25506*t26199;
  t26473 = 0.28*t25526*t26215;
  t26474 = 0.28*t25522*t26225;
  t26475 = 0.28*t25506*t26235;
  t26476 = t26440 + t26441 + t26442 + t26443 + t26444 + t26445 + t26446 + t26447 + t26448 + t26449 + t26450 + t26451 + t26452 + t26453 + t26454 + t26455 + t26456 + t26457 + t26458 + t26459 + t26460 + t26461 + t26462 + t26463 + t26464 + t26465 + t26466 + t26467 + t26468 + t26469 + t26470 + t26471 + t26472 + t26473 + t26474 + t26475;
  t26651 = 1.18*t20650*t25225*t25896;
  t26652 = 1.18*t20650*t25218*t25901;
  t26653 = 1.18*t20650*t25229*t25906;
  t26654 = 1.18*t20650*t25236*t25911;
  t26655 = 1.18*t20650*t25240*t25916;
  t26656 = 1.18*t20650*t25247*t25921;
  t26657 = 1.18*t25205*t15228*t25931;
  t26658 = 1.18*t25205*t15228*t25941;
  t26659 = 1.18*t25205*t15228*t25951;
  t26660 = 1.39*t25267*t25961;
  t26661 = 1.39*t25257*t25971;
  t26662 = 1.39*t25218*t25981;
  t26663 = 0.28*t25287*t25997;
  t26664 = 0.28*t25277*t26007;
  t26665 = 0.28*t25218*t26017;
  t26666 = 1.39*t25307*t26027;
  t26667 = 1.39*t25297*t26037;
  t26668 = 1.39*t25229*t26047;
  t26669 = 0.28*t25327*t26063;
  t26670 = 0.28*t25317*t26073;
  t26671 = 0.28*t25229*t26083;
  t26672 = 1.39*t25347*t26093;
  t26673 = 1.39*t25337*t26103;
  t26674 = 1.39*t25240*t26113;
  t26675 = 0.28*t25367*t26129;
  t26676 = 0.28*t25357*t26139;
  t26677 = 0.28*t25240*t26149;
  t26678 = 1.18*t20650*t25371*t26154;
  t26679 = 1.18*t20650*t25378*t26159;
  t26680 = 1.18*t25205*t15228*t26169;
  t26681 = 1.39*t26179*t25398;
  t26682 = 1.39*t25388*t26189;
  t26683 = 1.39*t25371*t26199;
  t26684 = 0.28*t25418*t26215;
  t26685 = 0.28*t25408*t26225;
  t26686 = 0.28*t25371*t26235;
  t26687 = t26651 + t26652 + t26653 + t26654 + t26655 + t26656 + t26657 + t26658 + t26659 + t26660 + t26661 + t26662 + t26663 + t26664 + t26665 + t26666 + t26667 + t26668 + t26669 + t26670 + t26671 + t26672 + t26673 + t26674 + t26675 + t26676 + t26677 + t26678 + t26679 + t26680 + t26681 + t26682 + t26683 + t26684 + t26685 + t26686;
  t26825 = -0.0017*t18884*t24280;
  t26826 = 0.0064*t18831*t24313;
  t26827 = 0.0032*t20644*t23242;
  t26828 = 0.0665*t22111*t23524;
  t26841 = -0.0017*t23555*t24592;
  t26842 = 0.0064*t23548*t24600;
  t26843 = 0.0032*t23568*t23588;
  t26844 = 0.0665*t23596*t23772;
  t26857 = -0.0017*t24692*t24776;
  t26858 = 0.0064*t24690*t24783;
  t26859 = 0.0032*t24709*t24722;
  t26860 = 0.0665*t24716*t24737;
  t26879 = -0.0017*t24804*t24904;
  t26880 = 0.0064*t24802*t24912;
  t26884 = 0.0032*t24807*t24818;
  t26885 = 0.0665*t24825*t24831;
  t24838 = Power(t15243,2);
  t24842 = Power(t16858,2);
  t24844 = Power(t16875,2);
  t24846 = Power(t18723,2);
  t24848 = Power(t24754,2);
  t24853 = Power(t24852,2);
  t24858 = Power(t24857,2);
  t24863 = Power(t24862,2);
  t24865 = Power(t24280,2);
  t24867 = Power(t24313,2);
  t24869 = Power(t23242,2);
  t24871 = Power(t23524,2);
  t24873 = Power(t24592,2);
  t24875 = Power(t24600,2);
  t24877 = Power(t23588,2);
  t24879 = Power(t23772,2);
  t24881 = Power(t24776,2);
  t24883 = Power(t24783,2);
  t24885 = Power(t24722,2);
  t24887 = Power(t24737,2);
  t24892 = Power(t24891,2);
  t24897 = Power(t24896,2);
  t24905 = Power(t24904,2);
  t24913 = Power(t24912,2);
  t24915 = Power(t24818,2);
  t24917 = Power(t24831,2);
  t26690 = -1.*var1[17];
  t26691 = var3[11] + t26690;
  t26693 = -1.*var1[8];
  t26694 = var3[14] + t26693;
  t26696 = -1.*var1[11];
  t26697 = var3[17] + t26696;
  t26711 = -1.*t24852*t26710;
  t26728 = t25271*t26710;
  t26735 = t24852*t26710;
  t26740 = -1.*t25281*t26710;
  t26747 = -1.*t25271*t26710;
  t26752 = t25281*t26710;
  t26771 = -1.*t24857*t26770;
  t26788 = t25311*t26770;
  t26795 = t24857*t26770;
  t26800 = -1.*t25321*t26770;
  t26807 = -1.*t25311*t26770;
  t26812 = t25321*t26770;
  t26868 = -1.*var1[14];
  t26869 = var3[8] + t26868;
  t25547 = 1.18*t20650*t25546;
  t25563 = 1.39*t24313*t25562;
  t25573 = 1.39*t15228*t16875*t25572;
  t25583 = 1.39*t24280*t25582;
  t25600 = 0.28*t23524*t25599;
  t25611 = 0.28*t23242*t25610;
  t25621 = 0.28*t15228*t16875*t25620;
  t25637 = 1.18*t20650*t25636;
  t25653 = 1.39*t24600*t25652;
  t25663 = 1.39*t15228*t18723*t25662;
  t25673 = 1.39*t24592*t25672;
  t25690 = 0.28*t23772*t25689;
  t25701 = 0.28*t23588*t25700;
  t25711 = 0.28*t15228*t18723*t25710;
  t25726 = 1.18*t20650*t25725;
  t25742 = 1.39*t24783*t25741;
  t25752 = 1.39*t15228*t24754*t25751;
  t25762 = 1.39*t24776*t25761;
  t25779 = 0.28*t24737*t25778;
  t25790 = 0.28*t24722*t25789;
  t25800 = 0.28*t15228*t24754*t25799;
  t25815 = 1.18*t20650*t25814;
  t25831 = 1.39*t25830*t24912;
  t25841 = 1.39*t15228*t24891*t25840;
  t25851 = 1.39*t24904*t25850;
  t25868 = 0.28*t24831*t25867;
  t25879 = 0.28*t24818*t25878;
  t25889 = 0.28*t15228*t24891*t25888;
  t25890 = t25547 + t25563 + t25573 + t25583 + t25600 + t25611 + t25621 + t25637 + t25653 + t25663 + t25673 + t25690 + t25701 + t25711 + t25726 + t25742 + t25752 + t25762 + t25779 + t25790 + t25800 + t25815 + t25831 + t25841 + t25851 + t25868 + t25879 + t25889;
  t26410 = -1.18*t15228*t25208*t25546;
  t26411 = 1.39*t25562*t25462;
  t26412 = 1.39*t25434*t25572;
  t26413 = 1.39*t25458*t25582;
  t26414 = 0.28*t25599*t25470;
  t26415 = 0.28*t25466*t25610;
  t26416 = 0.28*t25434*t25620;
  t26417 = -1.18*t15228*t25208*t25636;
  t26418 = 1.39*t25652*t25478;
  t26419 = 1.39*t25442*t25662;
  t26420 = 1.39*t25474*t25672;
  t26421 = 0.28*t25689*t25486;
  t26422 = 0.28*t25482*t25700;
  t26423 = 0.28*t25442*t25710;
  t26424 = -1.18*t15228*t25208*t25725;
  t26425 = 1.39*t25741*t25494;
  t26426 = 1.39*t25450*t25751;
  t26427 = 1.39*t25490*t25761;
  t26428 = 0.28*t25778*t25502;
  t26429 = 0.28*t25498*t25789;
  t26430 = 0.28*t25450*t25799;
  t26431 = -1.18*t15228*t25208*t25814;
  t26432 = 1.39*t25830*t25518;
  t26433 = 1.39*t25506*t25840;
  t26434 = 1.39*t25514*t25850;
  t26435 = 0.28*t25867*t25526;
  t26436 = 0.28*t25522*t25878;
  t26437 = 0.28*t25506*t25888;
  t26438 = t26410 + t26411 + t26412 + t26413 + t26414 + t26415 + t26416 + t26417 + t26418 + t26419 + t26420 + t26421 + t26422 + t26423 + t26424 + t26425 + t26426 + t26427 + t26428 + t26429 + t26430 + t26431 + t26432 + t26433 + t26434 + t26435 + t26436 + t26437;
  t26621 = 1.18*t25205*t15228*t25546;
  t26622 = 1.39*t25562*t25267;
  t26623 = 1.39*t25218*t25572;
  t26624 = 1.39*t25257*t25582;
  t26625 = 0.28*t25599*t25287;
  t26626 = 0.28*t25277*t25610;
  t26627 = 0.28*t25218*t25620;
  t26628 = 1.18*t25205*t15228*t25636;
  t26629 = 1.39*t25652*t25307;
  t26630 = 1.39*t25229*t25662;
  t26631 = 1.39*t25297*t25672;
  t26632 = 0.28*t25689*t25327;
  t26633 = 0.28*t25317*t25700;
  t26634 = 0.28*t25229*t25710;
  t26635 = 1.18*t25205*t15228*t25725;
  t26636 = 1.39*t25741*t25347;
  t26637 = 1.39*t25240*t25751;
  t26638 = 1.39*t25337*t25761;
  t26639 = 0.28*t25778*t25367;
  t26640 = 0.28*t25357*t25789;
  t26641 = 0.28*t25240*t25799;
  t26642 = 1.18*t25205*t15228*t25814;
  t26643 = 1.39*t25830*t25398;
  t26644 = 1.39*t25371*t25840;
  t26645 = 1.39*t25388*t25850;
  t26646 = 0.28*t25867*t25418;
  t26647 = 0.28*t25408*t25878;
  t26648 = 0.28*t25371*t25888;
  t26649 = t26621 + t26622 + t26623 + t26624 + t26625 + t26626 + t26627 + t26628 + t26629 + t26630 + t26631 + t26632 + t26633 + t26634 + t26635 + t26636 + t26637 + t26638 + t26639 + t26640 + t26641 + t26642 + t26643 + t26644 + t26645 + t26646 + t26647 + t26648;
  t27147 = -0.0017*t18884*t25251;
  t27163 = -0.0017*t23555*t25291;
  t27179 = -0.0017*t24692*t25331;
  t27148 = 0.0064*t18831*t25261;
  t27149 = 0.0032*t20644*t25271;
  t27150 = 0.0665*t22111*t25281;
  t27164 = 0.0064*t23548*t25301;
  t27165 = 0.0032*t23568*t25311;
  t27166 = 0.0665*t23596*t25321;
  t27180 = 0.0064*t24690*t25341;
  t27181 = 0.0032*t24709*t25351;
  t27182 = 0.0665*t24716*t25361;
  t27199 = -0.0017*t25382*t24804;
  t27201 = 0.0064*t24802*t25392;
  t27204 = 0.0032*t24807*t25402;
  t27205 = 0.0665*t24825*t25412;
  t26926 = -0.002*t15228*t15243*t16858;
  t26927 = 0.0299*t15228*t25222*t24852;
  t26928 = 0.0431*t15228*t16875*t24852;
  t26929 = 0.0431*t15228*t18723*t24857;
  t26930 = 0.0299*t15228*t25233*t24857;
  t26931 = 0.0299*t15228*t25244*t24862;
  t26932 = 0.0431*t15228*t24754*t24862;
  t26933 = 0.0017*t25251*t24280;
  t26934 = 0.0064*t25261*t24313;
  t26935 = 0.0032*t25271*t23242;
  t26936 = 0.0665*t25281*t23524;
  t26937 = 0.0017*t25291*t24592;
  t26938 = 0.0064*t25301*t24600;
  t26939 = 0.0032*t25311*t23588;
  t26940 = 0.0665*t25321*t23772;
  t26941 = 0.0017*t25331*t24776;
  t26942 = 0.0064*t25341*t24783;
  t26943 = 0.0032*t25351*t24722;
  t26944 = 0.0665*t25361*t24737;
  t26945 = 1.18*t25546*t25931;
  t26946 = 1.18*t25636*t25941;
  t26947 = 1.18*t25725*t25951;
  t26948 = 1.39*t25562*t25961;
  t26949 = 1.39*t25582*t25971;
  t26950 = 1.39*t25572*t25981;
  t26951 = 0.28*t25599*t25997;
  t26952 = 0.28*t25610*t26007;
  t26953 = 0.28*t25620*t26017;
  t26954 = 1.39*t25652*t26027;
  t26955 = 1.39*t25672*t26037;
  t26956 = 1.39*t25662*t26047;
  t26957 = 0.28*t25689*t26063;
  t26958 = 0.28*t25700*t26073;
  t26959 = 0.28*t25710*t26083;
  t26960 = 1.39*t25741*t26093;
  t26961 = 1.39*t25761*t26103;
  t26962 = 1.39*t25751*t26113;
  t26963 = 0.28*t25778*t26129;
  t26964 = 0.28*t25789*t26139;
  t26965 = 0.28*t25799*t26149;
  t26966 = 0.0431*t15228*t24891*t24896;
  t26967 = 0.0299*t15228*t25375*t24896;
  t26968 = 1.18*t25814*t26169;
  t26969 = 0.0017*t25382*t24904;
  t26970 = 0.0064*t25392*t24912;
  t26971 = 1.39*t25830*t26179;
  t26972 = 1.39*t25850*t26189;
  t26973 = 1.39*t25840*t26199;
  t26974 = 0.0032*t25402*t24818;
  t26975 = 0.0665*t25412*t24831;
  t26976 = 0.28*t25867*t26215;
  t26977 = 0.28*t25878*t26225;
  t26978 = 0.28*t25888*t26235;
  t26979 = t26926 + t26927 + t26928 + t26929 + t26930 + t26931 + t26932 + t26933 + t26934 + t26935 + t26936 + t26937 + t26938 + t26939 + t26940 + t26941 + t26942 + t26943 + t26944 + t26945 + t26946 + t26947 + t26948 + t26949 + t26950 + t26951 + t26952 + t26953 + t26954 + t26955 + t26956 + t26957 + t26958 + t26959 + t26960 + t26961 + t26962 + t26963 + t26964 + t26965 + t26966 + t26967 + t26968 + t26969 + t26970 + t26971 + t26972 + t26973 + t26974 + t26975 + t26976 + t26977 + t26978;
  t27104 = -1.*t26714*t20644;
  t27108 = t26714*t22111;
  t27132 = -1.*t26774*t23568;
  t27136 = t26774*t23596;
  t24968 = 1.18*t15228*t24967*t16875;
  t24985 = 1.39*t15228*t24984*t16875;
  t24999 = 0.28*t15228*t24998*t16875;
  t25011 = 1.18*t15228*t25010*t18723;
  t25028 = 1.39*t15228*t25027*t18723;
  t25042 = 0.28*t15228*t25041*t18723;
  t25051 = 1.18*t15228*t25050*t24754;
  t25068 = 1.39*t15228*t25067*t24754;
  t25082 = 0.28*t15228*t25081*t24754;
  t25086 = 1.18*t15228*t25085*t24852;
  t25090 = 1.18*t15228*t25089*t24857;
  t25093 = 1.18*t15228*t25092*t24862;
  t25097 = 1.39*t18831*t25096*t24280;
  t25101 = -1.39*t25100*t18884*t24313;
  t25105 = 0.28*t25104*t22111*t23242;
  t25109 = 0.28*t25108*t20644*t23524;
  t25113 = 1.39*t23548*t25112*t24592;
  t25117 = -1.39*t25116*t23555*t24600;
  t25121 = 0.28*t25120*t23596*t23588;
  t25125 = 0.28*t25124*t23568*t23772;
  t25129 = 1.39*t24690*t25128*t24776;
  t25133 = -1.39*t25132*t24692*t24783;
  t25137 = 0.28*t25136*t24716*t24722;
  t25141 = 0.28*t25140*t24709*t24737;
  t25150 = 1.18*t15228*t24891*t25149;
  t25153 = 1.18*t15228*t25152*t24896;
  t25164 = 1.39*t24802*t25163*t24904;
  t25168 = -1.39*t25167*t24804*t24912;
  t25178 = 1.39*t15228*t24891*t25177;
  t25186 = 0.28*t25185*t24825*t24818;
  t25190 = 0.28*t25189*t24807*t24831;
  t25200 = 0.28*t15228*t24891*t25199;
  t25201 = t24968 + t24985 + t24999 + t25011 + t25028 + t25042 + t25051 + t25068 + t25082 + t25086 + t25090 + t25093 + t25097 + t25101 + t25105 + t25109 + t25113 + t25117 + t25121 + t25125 + t25129 + t25133 + t25137 + t25141 + t25150 + t25153 + t25164 + t25168 + t25178 + t25186 + t25190 + t25200;
  t27364 = 0.0064*t24032;
  t27399 = 0.0064*t24370;
  t27416 = 0.0064*t24747;
  t27434 = 0.0064*t24928;
  t27366 = 0.0017*t24034;
  t27369 = Power(t22111,2);
  t27370 = 0.0665*t27369;
  t27371 = Power(t20644,2);
  t27372 = 0.0032*t27371;
  t27401 = 0.0017*t24372;
  t27404 = Power(t23596,2);
  t27405 = 0.0665*t27404;
  t27406 = Power(t23568,2);
  t27407 = 0.0032*t27406;
  t27418 = 0.0017*t24749;
  t27421 = Power(t24716,2);
  t27422 = 0.0665*t27421;
  t27423 = Power(t24709,2);
  t27424 = 0.0032*t27423;
  t27436 = 0.0017*t24930;
  t27439 = Power(t24825,2);
  t27440 = 0.0665*t27439;
  t27441 = Power(t24807,2);
  t27442 = 0.0032*t27441;
  t26529 = 1.18*t24967*t25218;
  t26530 = 1.39*t24984*t25218;
  t26531 = 0.28*t24998*t25218;
  t26532 = 1.18*t25085*t25225;
  t26533 = 1.18*t25010*t25229;
  t26534 = 1.39*t25027*t25229;
  t26535 = 0.28*t25041*t25229;
  t26536 = 1.18*t25089*t25236;
  t26537 = 1.18*t25050*t25240;
  t26538 = 1.39*t25067*t25240;
  t26539 = 0.28*t25081*t25240;
  t26540 = 1.18*t25092*t25247;
  t26541 = 1.39*t18831*t25096*t25257;
  t26542 = -1.39*t25100*t18884*t25267;
  t26543 = 0.28*t25104*t22111*t25277;
  t26544 = 0.28*t25108*t20644*t25287;
  t26545 = 1.39*t23548*t25112*t25297;
  t26546 = -1.39*t25116*t23555*t25307;
  t26547 = 0.28*t25120*t23596*t25317;
  t26548 = 0.28*t25124*t23568*t25327;
  t26549 = 1.39*t24690*t25128*t25337;
  t26550 = -1.39*t25132*t24692*t25347;
  t26551 = 0.28*t25136*t24716*t25357;
  t26552 = 0.28*t25140*t24709*t25367;
  t26553 = 1.18*t25149*t25371;
  t26554 = 1.18*t25152*t25378;
  t26555 = 1.39*t24802*t25163*t25388;
  t26556 = 1.39*t25371*t25177;
  t26557 = -1.39*t25167*t24804*t25398;
  t26558 = 0.28*t25371*t25199;
  t26559 = 0.28*t25185*t24825*t25408;
  t26560 = 0.28*t25189*t24807*t25418;
  t26561 = t26529 + t26530 + t26531 + t26532 + t26533 + t26534 + t26535 + t26536 + t26537 + t26538 + t26539 + t26540 + t26541 + t26542 + t26543 + t26544 + t26545 + t26546 + t26547 + t26548 + t26549 + t26550 + t26551 + t26552 + t26553 + t26554 + t26555 + t26556 + t26557 + t26558 + t26559 + t26560;
  t26290 = 1.18*t24967*t25434;
  t26291 = 1.39*t24984*t25434;
  t26292 = 0.28*t24998*t25434;
  t26293 = 1.18*t25085*t25438;
  t26294 = 1.18*t25010*t25442;
  t26295 = 1.39*t25027*t25442;
  t26296 = 0.28*t25041*t25442;
  t26297 = 1.18*t25089*t25446;
  t26298 = 1.18*t25050*t25450;
  t26299 = 1.39*t25067*t25450;
  t26300 = 0.28*t25081*t25450;
  t26301 = 1.18*t25092*t25454;
  t26302 = 1.39*t18831*t25096*t25458;
  t26303 = -1.39*t25100*t18884*t25462;
  t26304 = 0.28*t25104*t22111*t25466;
  t26305 = 0.28*t25108*t20644*t25470;
  t26306 = 1.39*t23548*t25112*t25474;
  t26307 = -1.39*t25116*t23555*t25478;
  t26308 = 0.28*t25120*t23596*t25482;
  t26309 = 0.28*t25124*t23568*t25486;
  t26310 = 1.39*t24690*t25128*t25490;
  t26311 = -1.39*t25132*t24692*t25494;
  t26312 = 0.28*t25136*t24716*t25498;
  t26313 = 0.28*t25140*t24709*t25502;
  t26314 = 1.18*t25149*t25506;
  t26315 = 1.18*t25152*t25510;
  t26316 = 1.39*t24802*t25163*t25514;
  t26317 = 1.39*t25506*t25177;
  t26318 = -1.39*t25167*t24804*t25518;
  t26319 = 0.28*t25506*t25199;
  t26320 = 0.28*t25185*t24825*t25522;
  t26321 = 0.28*t25189*t24807*t25526;
  t26322 = t26290 + t26291 + t26292 + t26293 + t26294 + t26295 + t26296 + t26297 + t26298 + t26299 + t26300 + t26301 + t26302 + t26303 + t26304 + t26305 + t26306 + t26307 + t26308 + t26309 + t26310 + t26311 + t26312 + t26313 + t26314 + t26315 + t26316 + t26317 + t26318 + t26319 + t26320 + t26321;
  t27210 = -1.39*t25100*t18884*t25562;
  t27211 = 1.39*t24984*t25572;
  t27212 = 1.39*t18831*t25096*t25582;
  t27213 = 0.28*t25108*t20644*t25599;
  t27214 = 0.28*t25104*t22111*t25610;
  t27215 = 0.28*t24998*t25620;
  t27216 = -1.39*t25116*t23555*t25652;
  t27217 = 1.39*t25027*t25662;
  t27218 = 1.39*t23548*t25112*t25672;
  t27219 = 0.28*t25124*t23568*t25689;
  t27220 = 0.28*t25120*t23596*t25700;
  t27221 = 0.28*t25041*t25710;
  t27222 = -1.39*t25132*t24692*t25741;
  t27223 = 1.39*t25067*t25751;
  t27224 = 1.39*t24690*t25128*t25761;
  t27225 = 0.28*t25140*t24709*t25778;
  t27226 = 0.28*t25136*t24716*t25789;
  t27227 = 0.28*t25081*t25799;
  t27228 = -1.39*t25167*t25830*t24804;
  t27229 = 1.39*t25177*t25840;
  t27230 = 1.39*t24802*t25163*t25850;
  t27231 = 0.28*t25189*t24807*t25867;
  t27232 = 0.28*t25185*t24825*t25878;
  t27233 = 0.28*t25199*t25888;
  t27234 = t27147 + t27163 + t27179 + t27148 + t27149 + t27150 + t27164 + t27165 + t27166 + t27180 + t27181 + t27182 + t27210 + t27211 + t27212 + t27213 + t27214 + t27215 + t27216 + t27217 + t27218 + t27219 + t27220 + t27221 + t27222 + t27223 + t27224 + t27225 + t27226 + t27227 + t27199 + t27228 + t27201 + t27229 + t27230 + t27204 + t27205 + t27231 + t27232 + t27233;
  t26891 = 0.2724*t20650;
  t26892 = 1.18*t25085*t20650*t25896;
  t26893 = 1.18*t24967*t20650*t25901;
  t26894 = 1.18*t25010*t20650*t25906;
  t26895 = 1.18*t25089*t20650*t25911;
  t26896 = 1.18*t25050*t20650*t25916;
  t26897 = 1.18*t25092*t20650*t25921;
  t26898 = -1.39*t25100*t18884*t25961;
  t26899 = 1.39*t18831*t25096*t25971;
  t26900 = 1.39*t24984*t25981;
  t26901 = 0.28*t25108*t20644*t25997;
  t26902 = 0.28*t25104*t22111*t26007;
  t26903 = 0.28*t24998*t26017;
  t26904 = -1.39*t25116*t23555*t26027;
  t26905 = 1.39*t23548*t25112*t26037;
  t26906 = 1.39*t25027*t26047;
  t26907 = 0.28*t25124*t23568*t26063;
  t26908 = 0.28*t25120*t23596*t26073;
  t26909 = 0.28*t25041*t26083;
  t26910 = -1.39*t25132*t24692*t26093;
  t26911 = 1.39*t24690*t25128*t26103;
  t26912 = 1.39*t25067*t26113;
  t26913 = 0.28*t25140*t24709*t26129;
  t26914 = 0.28*t25136*t24716*t26139;
  t26915 = 0.28*t25081*t26149;
  t26916 = 1.18*t20650*t25149*t26154;
  t26917 = 1.18*t20650*t25152*t26159;
  t26918 = -1.39*t25167*t24804*t26179;
  t26919 = 1.39*t24802*t25163*t26189;
  t26920 = 1.39*t25177*t26199;
  t26921 = 0.28*t25189*t24807*t26215;
  t26922 = 0.28*t25185*t24825*t26225;
  t26923 = 0.28*t25199*t26235;
  t26924 = t26891 + t26892 + t26893 + t26825 + t26826 + t26827 + t26828 + t26894 + t26895 + t26841 + t26842 + t26843 + t26844 + t26896 + t26897 + t26857 + t26858 + t26859 + t26860 + t26898 + t26899 + t26900 + t26901 + t26902 + t26903 + t26904 + t26905 + t26906 + t26907 + t26908 + t26909 + t26910 + t26911 + t26912 + t26913 + t26914 + t26915 + t26916 + t26917 + t26879 + t26880 + t26918 + t26919 + t26920 + t26884 + t26885 + t26921 + t26922 + t26923;
  t24922 = -0.0417*t24802*t24904;
  t24933 = 1.39*t15228*t24891*t24932;
  t24934 = -0.0417*t24804*t24912;
  t24938 = 0.28*t24937*t24818;
  t24953 = 0.28*t15228*t24891*t24952;
  t24954 = t24922 + t24933 + t24934 + t24938 + t24953;
  t27435 = -0.0417*t24928*t25163;
  t27437 = 0.0417*t25167*t24930;
  t27438 = 1.39*t24932*t25177;
  t27443 = 0.28*t25185*t24825*t24937;
  t27444 = 0.28*t24952*t25199;
  t27445 = 0.0046 + t27434 + t27435 + t27436 + t27437 + t27438 + t27440 + t27442 + t27443 + t27444;
  t26518 = 1.39*t25371*t24932;
  t26519 = -0.0417*t24802*t25388;
  t26520 = -0.0417*t24804*t25398;
  t26521 = 0.28*t25371*t24952;
  t26522 = 0.28*t24937*t25408;
  t26523 = t26518 + t26519 + t26520 + t26521 + t26522;
  t26279 = 1.39*t25506*t24932;
  t26280 = -0.0417*t24802*t25514;
  t26281 = -0.0417*t24804*t25518;
  t26282 = 0.28*t25506*t24952;
  t26283 = 0.28*t24937*t25522;
  t26284 = t26279 + t26280 + t26281 + t26282 + t26283;
  t27200 = -0.0417*t25830*t24804;
  t27202 = 1.39*t24932*t25840;
  t27203 = -0.0417*t24802*t25850;
  t27206 = 0.28*t24937*t25878;
  t27207 = 0.28*t24952*t25888;
  t27208 = t27199 + t27200 + t27201 + t27202 + t27203 + t27204 + t27205 + t27206 + t27207;
  t26881 = -0.0417*t24804*t26179;
  t26882 = -0.0417*t24802*t26189;
  t26883 = 1.39*t24932*t26199;
  t26886 = 0.28*t24937*t26225;
  t26887 = 0.28*t24952*t26235;
  t26889 = t26824 + t26879 + t26880 + t26881 + t26882 + t26883 + t26884 + t26885 + t26886 + t26887;
  t27429 = 0.28*t24801*t25185*t24825;
  t27430 = 0.28*t25189*t24822*t24807;
  t27431 = t27429 + t27430;
  t24819 = 0.28*t24801*t24818;
  t24832 = 0.28*t24822*t24831;
  t24833 = t24819 + t24832;
  t26525 = 0.28*t24801*t25408;
  t26526 = 0.28*t24822*t25418;
  t26527 = t26525 + t26526;
  t26286 = 0.28*t24801*t25522;
  t26287 = 0.28*t24822*t25526;
  t26288 = t26286 + t26287;
  t27191 = 0.0098*t24896;
  t27192 = 0.28*t24822*t25867;
  t27193 = 0.28*t24801*t25878;
  t27194 = t27191 + t27192 + t27193;
  t26871 = 0.0098*t15228*t24891;
  t26872 = 0.28*t24822*t26215;
  t26873 = 0.28*t24801*t26225;
  t26874 = t26871 + t26872 + t26873;
  t27365 = 0.0417*t24032*t25096;
  t27367 = -0.0417*t25100*t24034;
  t27368 = 1.39*t24036*t24984;
  t27373 = 0.28*t25108*t20644*t24323;
  t27374 = 0.28*t24273*t24998;
  t27375 = 0.0046 + t27364 + t27365 + t27366 + t27367 + t27368 + t27370 + t27372 + t27373 + t27374;
  t24037 = 1.39*t15228*t24036*t16875;
  t24274 = 0.28*t15228*t24273*t16875;
  t24281 = 0.0417*t18831*t24280;
  t24319 = 0.0417*t18884*t24313;
  t24324 = 0.28*t24323*t23524;
  t24328 = t24037 + t24274 + t24281 + t24319 + t24324;
  t26489 = 1.39*t24036*t25218;
  t26490 = 0.28*t24273*t25218;
  t26491 = 0.0417*t18831*t25257;
  t26492 = 0.0417*t18884*t25267;
  t26493 = 0.28*t24323*t25287;
  t26494 = t26489 + t26490 + t26491 + t26492 + t26493;
  t26250 = 1.39*t24036*t25434;
  t26251 = 0.28*t24273*t25434;
  t26252 = 0.0417*t18831*t25458;
  t26253 = 0.0417*t18884*t25462;
  t26254 = 0.28*t24323*t25470;
  t26255 = t26250 + t26251 + t26252 + t26253 + t26254;
  t27151 = 0.0417*t18884*t25562;
  t27152 = 1.39*t24036*t25572;
  t27153 = 0.0417*t18831*t25582;
  t27154 = 0.28*t24323*t25599;
  t27155 = 0.28*t24273*t25620;
  t27156 = t27147 + t27148 + t27149 + t27150 + t27151 + t27152 + t27153 + t27154 + t27155;
  t26829 = 0.0417*t18884*t25961;
  t26830 = 0.0417*t18831*t25971;
  t26831 = 1.39*t24036*t25981;
  t26832 = 0.28*t24323*t25997;
  t26833 = 0.28*t24273*t26017;
  t26834 = t26824 + t26825 + t26826 + t26827 + t26828 + t26829 + t26830 + t26831 + t26832 + t26833;
  t27342 = 0.28*t23869*t25104*t22111;
  t27343 = 0.28*t25108*t23873*t20644;
  t27344 = t27342 + t27343;
  t23870 = 0.28*t23869*t23242;
  t23875 = 0.28*t23873*t23524;
  t23877 = t23870 + t23875;
  t26485 = 0.28*t23869*t25277;
  t26486 = 0.28*t23873*t25287;
  t26487 = t26485 + t26486;
  t26246 = 0.28*t23869*t25466;
  t26247 = 0.28*t23873*t25470;
  t26248 = t26246 + t26247;
  t27142 = 0.0098*t24852;
  t27143 = 0.28*t23873*t25599;
  t27144 = 0.28*t23869*t25610;
  t27145 = t27142 + t27143 + t27144;
  t26819 = 0.0098*t15228*t16875;
  t26820 = 0.28*t23873*t25997;
  t26821 = 0.28*t23869*t26007;
  t26822 = t26819 + t26820 + t26821;
  t27400 = 0.0417*t24370*t25112;
  t27402 = -0.0417*t25116*t24372;
  t27403 = 1.39*t24375*t25027;
  t27408 = 0.28*t25120*t23596*t24604;
  t27409 = 0.28*t24578*t25041;
  t27410 = 0.0046 + t27399 + t27400 + t27401 + t27402 + t27403 + t27405 + t27407 + t27408 + t27409;
  t24377 = 1.39*t15228*t24375*t18723;
  t24579 = 0.28*t15228*t24578*t18723;
  t24593 = 0.0417*t23548*t24592;
  t24601 = 0.0417*t23555*t24600;
  t24606 = 0.28*t24604*t23588;
  t24607 = t24377 + t24579 + t24593 + t24601 + t24606;
  t26496 = 1.39*t24375*t25229;
  t26497 = 0.28*t24578*t25229;
  t26498 = 0.0417*t23548*t25297;
  t26499 = 0.0417*t23555*t25307;
  t26500 = 0.28*t24604*t25317;
  t26501 = t26496 + t26497 + t26498 + t26499 + t26500;
  t26257 = 1.39*t24375*t25442;
  t26258 = 0.28*t24578*t25442;
  t26259 = 0.0417*t23548*t25474;
  t26260 = 0.0417*t23555*t25478;
  t26261 = 0.28*t24604*t25482;
  t26262 = t26257 + t26258 + t26259 + t26260 + t26261;
  t27167 = 0.0417*t23555*t25652;
  t27168 = 1.39*t24375*t25662;
  t27169 = 0.0417*t23548*t25672;
  t27170 = 0.28*t24604*t25700;
  t27171 = 0.28*t24578*t25710;
  t27172 = t27163 + t27164 + t27165 + t27166 + t27167 + t27168 + t27169 + t27170 + t27171;
  t26845 = 0.0417*t23555*t26027;
  t26846 = 0.0417*t23548*t26037;
  t26847 = 1.39*t24375*t26047;
  t26848 = 0.28*t24604*t26073;
  t26849 = 0.28*t24578*t26083;
  t26850 = t26824 + t26841 + t26842 + t26843 + t26844 + t26845 + t26846 + t26847 + t26848 + t26849;
  t27377 = 0.28*t24652*t25120*t23596;
  t27378 = 0.28*t25124*t24673*t23568;
  t27379 = t27377 + t27378;
  t24653 = 0.28*t24652*t23588;
  t24674 = 0.28*t24673*t23772;
  t24675 = t24653 + t24674;
  t26503 = 0.28*t24652*t25317;
  t26504 = 0.28*t24673*t25327;
  t26505 = t26503 + t26504;
  t26264 = 0.28*t24652*t25482;
  t26265 = 0.28*t24673*t25486;
  t26266 = t26264 + t26265;
  t27158 = 0.0098*t24857;
  t27159 = 0.28*t24673*t25689;
  t27160 = 0.28*t24652*t25700;
  t27161 = t27158 + t27159 + t27160;
  t26836 = 0.0098*t15228*t18723;
  t26837 = 0.28*t24673*t26063;
  t26838 = 0.28*t24652*t26073;
  t26839 = t26836 + t26837 + t26838;
  t27417 = -0.0417*t24747*t25128;
  t27419 = 0.0417*t25132*t24749;
  t27420 = 1.39*t24751*t25067;
  t27425 = 0.28*t25140*t24709*t24787;
  t27426 = 0.28*t24769*t25081;
  t27427 = 0.0046 + t27416 + t27417 + t27418 + t27419 + t27420 + t27422 + t27424 + t27425 + t27426;
  t24755 = 1.39*t15228*t24751*t24754;
  t24770 = 0.28*t15228*t24769*t24754;
  t24777 = -0.0417*t24690*t24776;
  t24784 = -0.0417*t24692*t24783;
  t24788 = 0.28*t24787*t24737;
  t24789 = t24755 + t24770 + t24777 + t24784 + t24788;
  t26511 = 1.39*t24751*t25240;
  t26512 = 0.28*t24769*t25240;
  t26513 = -0.0417*t24690*t25337;
  t26514 = -0.0417*t24692*t25347;
  t26515 = 0.28*t24787*t25367;
  t26516 = t26511 + t26512 + t26513 + t26514 + t26515;
  t26272 = 1.39*t24751*t25450;
  t26273 = 0.28*t24769*t25450;
  t26274 = -0.0417*t24690*t25490;
  t26275 = -0.0417*t24692*t25494;
  t26276 = 0.28*t24787*t25502;
  t26277 = t26272 + t26273 + t26274 + t26275 + t26276;
  t27183 = -0.0417*t24692*t25741;
  t27184 = 1.39*t24751*t25751;
  t27185 = -0.0417*t24690*t25761;
  t27186 = 0.28*t24787*t25778;
  t27187 = 0.28*t24769*t25799;
  t27188 = t27179 + t27180 + t27181 + t27182 + t27183 + t27184 + t27185 + t27186 + t27187;
  t26861 = -0.0417*t24692*t26093;
  t26862 = -0.0417*t24690*t26103;
  t26863 = 1.39*t24751*t26113;
  t26864 = 0.28*t24787*t26129;
  t26865 = 0.28*t24769*t26149;
  t26866 = t26824 + t26857 + t26858 + t26859 + t26860 + t26861 + t26862 + t26863 + t26864 + t26865;
  t27412 = 0.28*t24689*t25136*t24716;
  t27413 = 0.28*t25140*t24728*t24709;
  t27414 = t27412 + t27413;
  t24723 = 0.28*t24689*t24722;
  t24738 = 0.28*t24728*t24737;
  t24739 = t24723 + t24738;
  t26507 = 0.28*t24689*t25357;
  t26508 = 0.28*t24728*t25367;
  t26509 = t26507 + t26508;
  t26268 = 0.28*t24689*t25498;
  t26269 = 0.28*t24728*t25502;
  t26270 = t26268 + t26269;
  t27174 = 0.0098*t24862;
  t27175 = 0.28*t24728*t25778;
  t27176 = 0.28*t24689*t25789;
  t27177 = t27174 + t27175 + t27176;
  t26852 = 0.0098*t15228*t24754;
  t26853 = 0.28*t24728*t26129;
  t26854 = 0.28*t24689*t26139;
  t26855 = t26852 + t26853 + t26854;
  p_output1[0]=t23798*t23877 + t23881*t24328 + t24359*t24607 + t24634*t24675 + t24680*t24739 + t24741*t24789 + t24792*t24833 + t24836*(10.1*t24837*t24838 + 14.82*t24840 + 10.1*t24837*t24842 + 2.85*t24837*t24844 + 2.85*t24837*t24846 + 2.85*t24837*t24848 + 1.18*t24837*t24853 + 1.18*t24837*t24858 + 1.18*t24837*t24863 + 1.39*t24865 + 1.39*t24867 + 0.28*t24869 + 0.28*t24871 + 1.39*t24873 + 1.39*t24875 + 0.28*t24877 + 0.28*t24879 + 1.39*t24881 + 1.39*t24883 + 0.28*t24885 + 0.28*t24887 + 2.85*t24837*t24892 + 1.18*t24837*t24897 + 1.39*t24905 + 1.39*t24913 + 0.28*t24915 + 0.28*t24917) + t24921*t24954 + t24956*t25201 + t25204*t25420 + t25422*t25528 + t25531*t25890 + t25892*t26237 - 1.*t23772*var4[0] - 1.*t15228*t18723*var4[1] - 1.*t23588*var4[2] - 1.*t23524*var5[0] - 1.*t15228*t16875*var5[1] - 1.*t23242*var5[2];
  p_output1[1]=t25422*(14.82*t24837*Power(t25208,2) + 10.1*Power(t25426,2) + 10.1*Power(t25430,2) + 2.85*Power(t25434,2) + 1.18*Power(t25438,2) + 2.85*Power(t25442,2) + 1.18*Power(t25446,2) + 2.85*Power(t25450,2) + 1.18*Power(t25454,2) + 1.39*Power(t25458,2) + 1.39*Power(t25462,2) + 0.28*Power(t25466,2) + 0.28*Power(t25470,2) + 1.39*Power(t25474,2) + 1.39*Power(t25478,2) + 0.28*Power(t25482,2) + 0.28*Power(t25486,2) + 1.39*Power(t25490,2) + 1.39*Power(t25494,2) + 0.28*Power(t25498,2) + 0.28*Power(t25502,2) + 2.85*Power(t25506,2) + 1.18*Power(t25510,2) + 1.39*Power(t25514,2) + 1.39*Power(t25518,2) + 0.28*Power(t25522,2) + 0.28*Power(t25526,2)) + t24836*t25528 + t23798*t26248 + t23881*t26255 + t24359*t26262 + t24634*t26266 + t24680*t26270 + t24741*t26277 + t24921*t26284 + t24792*t26288 + t24956*t26322 + t25204*t26352 + t25531*t26438 + t25892*t26476 - 1.*t25486*var4[0] - 1.*t25442*var4[1] - 1.*t25482*var4[2] - 1.*t25470*var5[0] - 1.*t25434*var5[1] - 1.*t25466*var5[2];
  p_output1[2]=t25204*(14.82*t24837*Power(t25205,2) + 10.1*Power(t25210,2) + 10.1*Power(t25214,2) + 2.85*Power(t25218,2) + 1.18*Power(t25225,2) + 2.85*Power(t25229,2) + 1.18*Power(t25236,2) + 2.85*Power(t25240,2) + 1.18*Power(t25247,2) + 1.39*Power(t25257,2) + 1.39*Power(t25267,2) + 0.28*Power(t25277,2) + 0.28*Power(t25287,2) + 1.39*Power(t25297,2) + 1.39*Power(t25307,2) + 0.28*Power(t25317,2) + 0.28*Power(t25327,2) + 1.39*Power(t25337,2) + 1.39*Power(t25347,2) + 0.28*Power(t25357,2) + 0.28*Power(t25367,2) + 2.85*Power(t25371,2) + 1.18*Power(t25378,2) + 1.39*Power(t25388,2) + 1.39*Power(t25398,2) + 0.28*Power(t25408,2) + 0.28*Power(t25418,2)) + t24836*t25420 + t25422*t26352 + t23798*t26487 + t23881*t26494 + t24359*t26501 + t24634*t26505 + t24680*t26509 + t24741*t26516 + t24921*t26523 + t24792*t26527 + t24956*t26561 + t25531*t26649 + t25892*t26687 - 1.*t25327*var4[0] - 1.*t25229*var4[1] - 1.*t25317*var4[2] - 1.*t25287*var5[0] - 1.*t25218*var5[1] - 1.*t25277*var5[2];
  p_output1[3]=t25892*(0.141*t24837*t24838 + 0.2724*t24840 + 0.143*t24837*t24842 + 0.0431*t24837*t24844 + 0.0431*t24837*t24846 + 0.0431*t24837*t24848 + 0.0299*t24837*t24853 + 0.0299*t24837*t24858 + 0.0299*t24837*t24863 + 0.0017*t24865 + 0.0064*t24867 + 0.0032*t24869 + 0.0665*t24871 + 0.0017*t24873 + 0.0064*t24875 + 0.0032*t24877 + 0.0665*t24879 + 0.0017*t24881 + 0.0064*t24883 + 0.0032*t24885 + 0.0665*t24887 + 0.0431*t24837*t24892 + 0.0299*t24837*t24897 + 0.0017*t24905 + 0.0064*t24913 + 0.0032*t24915 + 0.0665*t24917 + 1.18*t24840*Power(t25896,2) + 1.18*t24840*Power(t25901,2) + 1.18*t24840*Power(t25906,2) + 1.18*t24840*Power(t25911,2) + 1.18*t24840*Power(t25916,2) + 1.18*t24840*Power(t25921,2) + 1.18*Power(t25931,2) + 1.18*Power(t25941,2) + 1.18*Power(t25951,2) + 1.39*Power(t25961,2) + 1.39*Power(t25971,2) + 1.39*Power(t25981,2) + 0.28*Power(t25997,2) + 0.28*Power(t26007,2) + 0.28*Power(t26017,2) + 1.39*Power(t26027,2) + 1.39*Power(t26037,2) + 1.39*Power(t26047,2) + 0.28*Power(t26063,2) + 0.28*Power(t26073,2) + 0.28*Power(t26083,2) + 1.39*Power(t26093,2) + 1.39*Power(t26103,2) + 1.39*Power(t26113,2) + 0.28*Power(t26129,2) + 0.28*Power(t26139,2) + 0.28*Power(t26149,2) + 1.18*t24840*Power(t26154,2) + 1.18*t24840*Power(t26159,2) + 1.18*Power(t26169,2) + 1.39*Power(t26179,2) + 1.39*Power(t26189,2) + 1.39*Power(t26199,2) + 0.28*Power(t26215,2) + 0.28*Power(t26225,2) + 0.28*Power(t26235,2)) + t24836*t26237 + t25422*t26476 + t25204*t26687 - 0.0032*t15228*t16875*t26691 - 0.0032*t15228*t18723*t26694 - 0.0032*t15228*t24754*t26697 + t23798*t26822 + t23881*t26834 + t24634*t26839 + t24359*t26850 + t24680*t26855 + t24741*t26866 - 0.0032*t15228*t24891*t26869 + t24792*t26874 + t24921*t26889 + t24956*t26924 + t25531*t26979 - 1.*(t23588*(t26771 - 1.*t15228*t18723*t26780 + t18723*t20650*t26784) + t15228*t18723*(t23588*t26780 + t25315*t26784 + t26788))*var4[0] - 1.*(t23772*(-1.*t23588*t26780 - 1.*t25315*t26784 + t26807) + t23588*(t23772*t26780 + t25325*t26784 + t26812))*var4[1] - 1.*(t23772*(t15228*t18723*t26780 - 1.*t18723*t20650*t26784 + t26795) + t15228*t18723*(-1.*t23772*t26780 - 1.*t25325*t26784 + t26800))*var4[2] - 1.*(t23242*(t26711 - 1.*t15228*t16875*t26720 + t16875*t20650*t26724) + t15228*t16875*(t23242*t26720 + t25275*t26724 + t26728))*var5[0] - 1.*(t23524*(-1.*t23242*t26720 - 1.*t25275*t26724 + t26747) + t23242*(t23524*t26720 + t25285*t26724 + t26752))*var5[1] - 1.*(t23524*(t15228*t16875*t26720 - 1.*t16875*t20650*t26724 + t26735) + t15228*t16875*(-1.*t23524*t26720 - 1.*t25285*t26724 + t26740))*var5[2];
  p_output1[4]=t25531*(0.143*t24838 + 0.141*t24842 + 0.0431*t24853 + 0.0431*t24858 + 0.0431*t24863 + 0.0431*t24897 + 0.0299*Power(t25222,2) + 0.0299*Power(t25233,2) + 0.0299*Power(t25244,2) + 0.0017*Power(t25251,2) + 0.0064*Power(t25261,2) + 0.0032*Power(t25271,2) + 0.0665*Power(t25281,2) + 0.0017*Power(t25291,2) + 0.0064*Power(t25301,2) + 0.0032*Power(t25311,2) + 0.0665*Power(t25321,2) + 0.0017*Power(t25331,2) + 0.0064*Power(t25341,2) + 0.0032*Power(t25351,2) + 0.0665*Power(t25361,2) + 0.0299*Power(t25375,2) + 0.0017*Power(t25382,2) + 0.0064*Power(t25392,2) + 0.0032*Power(t25402,2) + 0.0665*Power(t25412,2) + 1.18*Power(t25546,2) + 1.39*Power(t25562,2) + 1.39*Power(t25572,2) + 1.39*Power(t25582,2) + 0.28*Power(t25599,2) + 0.28*Power(t25610,2) + 0.28*Power(t25620,2) + 1.18*Power(t25636,2) + 1.39*Power(t25652,2) + 1.39*Power(t25662,2) + 1.39*Power(t25672,2) + 0.28*Power(t25689,2) + 0.28*Power(t25700,2) + 0.28*Power(t25710,2) + 1.18*Power(t25725,2) + 1.39*Power(t25741,2) + 1.39*Power(t25751,2) + 1.39*Power(t25761,2) + 0.28*Power(t25778,2) + 0.28*Power(t25789,2) + 0.28*Power(t25799,2) + 1.18*Power(t25814,2) + 1.39*Power(t25830,2) + 1.39*Power(t25840,2) + 1.39*Power(t25850,2) + 0.28*Power(t25867,2) + 0.28*Power(t25878,2) + 0.28*Power(t25888,2)) + t24836*t25890 + t25422*t26438 + t25204*t26649 - 0.0032*t24852*t26691 - 0.0032*t24857*t26694 - 0.0032*t24862*t26697 - 0.0032*t24896*t26869 + t25892*t26979 + t23798*t27145 + t23881*t27156 + t24634*t27161 + t24359*t27172 + t24680*t27177 + t24741*t27188 + t24792*t27194 + t24921*t27208 + t24956*t27234 - 1.*(t25311*(t26771 - 1.*t18723*t26778) + t24857*(t23568*t26774 + t23586*t26778 + t26788))*var4[0] - 1.*(t25321*(-1.*t23586*t26778 + t26807 + t27132) + t25311*(t23706*t26778 + t26812 + t27136))*var4[1] - 1.*(t25321*(t18723*t26778 + t26795) + t24857*(-1.*t23596*t26774 - 1.*t23706*t26778 + t26800))*var4[2] - 1.*(t25271*(t26711 - 1.*t16875*t26718) + t24852*(t20644*t26714 + t22872*t26718 + t26728))*var5[0] - 1.*(t25281*(-1.*t22872*t26718 + t26747 + t27104) + t25271*(t23464*t26718 + t26752 + t27108))*var5[1] - 1.*(t25281*(t16875*t26718 + t26735) + t24852*(-1.*t22111*t26714 - 1.*t23464*t26718 + t26740))*var5[2];
  p_output1[5]=t24836*t25201 + t25422*t26322 + t25204*t26561 + t25892*t26924 + t25531*t27234 + t23798*t27344 + t23881*t27375 + t24634*t27379 + t24359*t27410 + t24680*t27414 + t24741*t27427 + t24792*t27431 + t24956*(0.2724 + 1.18*Power(t24967,2) + 1.39*Power(t24984,2) + 0.28*Power(t24998,2) + 1.18*Power(t25010,2) + 1.39*Power(t25027,2) + 0.28*Power(t25041,2) + 1.18*Power(t25050,2) + 1.39*Power(t25067,2) + 0.28*Power(t25081,2) + 1.18*Power(t25085,2) + 1.18*Power(t25089,2) + 1.18*Power(t25092,2) + 1.39*t24032*Power(t25096,2) + 1.39*t24034*Power(t25100,2) + 1.39*t24370*Power(t25112,2) + 1.39*t24372*Power(t25116,2) + 1.39*t24747*Power(t25128,2) + 1.39*t24749*Power(t25132,2) + 1.18*Power(t25149,2) + 1.18*Power(t25152,2) + 1.39*t24928*Power(t25163,2) + 1.39*t24930*Power(t25167,2) + 1.39*Power(t25177,2) + 0.28*Power(t25199,2) + t27364 + t27366 + 0.28*Power(t25104,2)*t27369 + t27370 + 0.28*Power(t25108,2)*t27371 + t27372 + t27399 + t27401 + 0.28*Power(t25120,2)*t27404 + t27405 + 0.28*Power(t25124,2)*t27406 + t27407 + t27416 + t27418 + 0.28*Power(t25136,2)*t27421 + t27422 + 0.28*Power(t25140,2)*t27423 + t27424 + t27434 + t27436 + 0.28*Power(t25185,2)*t27439 + t27440 + 0.28*Power(t25189,2)*t27441 + t27442) + t24921*t27445 - 1.*t23568*(-1.*t18543*t26765 + t17807*t26768)*var4[0] - 1.*(t23596*(-1.*t17807*t23579*t26765 - 1.*t18543*t23579*t26768 + t27132) + t23568*(t17807*t23568*t26765 + t18543*t23568*t26768 + t27136))*var4[1] - 1.*t23596*(t18543*t26765 - 1.*t17807*t26768)*var4[2] - 1.*t20644*(t16850*t26705 - 1.*t16782*t26708)*var5[0] - 1.*(t22111*(-1.*t16782*t22111*t26705 - 1.*t16850*t22111*t26708 + t27104) + t20644*(t16782*t23410*t26705 + t16850*t23410*t26708 + t27108))*var5[1] - 1.*t22111*(-1.*t16850*t26705 + t16782*t26708)*var5[2];
  p_output1[6]=0.28*t24792*t24801*t24937 + t24836*t24954 + t25422*t26284 + t25204*t26523 + t25892*t26889 + t25531*t27208 + t24921*(0.0046 + 0.007651*t24928 + 0.002951*t24930 + 1.39*Power(t24932,2) + 0.28*Power(t24937,2) + 0.28*Power(t24952,2) + t27440 + t27442) + t24956*t27445;
  p_output1[7]=t24792*(0.0098 + 0.28*Power(t24801,2) + 0.28*Power(t24822,2)) + t24833*t24836 + 0.28*t24801*t24921*t24937 + t25422*t26288 + t25204*t26527 - 0.0032*t26869 + t25892*t26874 + t25531*t27194 + t24956*t27431;
  p_output1[8]=-0.0032*t24792 - 0.0032*t24896*t25531 - 0.0032*t15228*t24891*t25892 + 0.0032*t26869;
  p_output1[9]=0.28*t23798*t23873*t24323 + t24328*t24836 + t25422*t26255 + t25204*t26494 + t25892*t26834 + t25531*t27156 + t23881*(0.0046 + 0.007651*t24032 + 0.002951*t24034 + 1.39*Power(t24036,2) + 0.28*Power(t24273,2) + 0.28*Power(t24323,2) + t27370 + t27372) + t24956*t27375 - 1.*t24323*var5[0] - 1.*(-0.15121 + t22111*(-1.*t22111*t26703 + t27104) + t20644*(t23410*t26703 + t27108))*var5[1];
  p_output1[10]=t23798*(0.0098 + 0.28*Power(t23869,2) + 0.28*Power(t23873,2)) + 0.28*t23873*t23881*t24323 + t23877*t24836 + t25422*t26248 + t25204*t26487 - 0.0032*t26691 + t25892*t26822 + t25531*t27145 + t24956*t27344 - 1.*(-0.305*t18848*t18901 + t23871 + t18901*t26700)*var5[0] - 1.*(0.305*Power(t18901,2) + t23824 + t18848*t26700)*var5[2];
  p_output1[11]=-0.0032*t23798 - 0.0032*t24852*t25531 - 0.0032*t15228*t16875*t25892 + 0.0032*t26691 + 0.305*var5[2];
  p_output1[12]=0.28*t24604*t24634*t24652 + t24607*t24836 + t25422*t26262 + t25204*t26501 + t25892*t26850 + t25531*t27172 + t24359*(0.0046 + 0.007651*t24370 + 0.002951*t24372 + 1.39*Power(t24375,2) + 0.28*Power(t24578,2) + 0.28*Power(t24604,2) + t27405 + t27407) + t24956*t27410 - 1.*(-0.15121 + t23596*(-1.*t23579*t26763 + t27132) + t23568*(t23568*t26763 + t27136))*var4[1] - 1.*t24604*var4[2];
  p_output1[13]=0.28*t24359*t24604*t24652 + t24634*(0.0098 + 0.28*Power(t24652,2) + 0.28*Power(t24673,2)) + t24675*t24836 + t25422*t26266 + t25204*t26505 - 0.0032*t26694 + t25892*t26839 + t25531*t27161 + t24956*t27379 - 1.*(-0.305*t23551*t23556 + t24663 - 1.*t23556*t26760)*var4[0] - 1.*(0.305*Power(t23556,2) + t24650 - 1.*t23551*t26760)*var4[2];
  p_output1[14]=-0.0032*t24634 - 0.0032*t24857*t25531 - 0.0032*t15228*t18723*t25892 + 0.0032*t26694 + 0.305*var4[2];
  p_output1[15]=0.28*t24680*t24728*t24787 + t24789*t24836 + t25422*t26277 + t25204*t26516 + t25892*t26866 + t25531*t27188 + t24741*(0.0046 + 0.007651*t24747 + 0.002951*t24749 + 1.39*Power(t24751,2) + 0.28*Power(t24769,2) + 0.28*Power(t24787,2) + t27422 + t27424) + t24956*t27427;
  p_output1[16]=t24680*(0.0098 + 0.28*Power(t24689,2) + 0.28*Power(t24728,2)) + 0.28*t24728*t24741*t24787 + t24739*t24836 + t25422*t26270 + t25204*t26509 - 0.0032*t26697 + t25892*t26855 + t25531*t27177 + t24956*t27414;
  p_output1[17]=-0.0032*t24680 - 0.0032*t24862*t25531 - 0.0032*t15228*t24754*t25892 + 0.0032*t26697;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4,*var5;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 5)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Five input(s) required (var1,var2,var3,var4,var5).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }
  mrows = mxGetM(prhs[4]);
  ncols = mxGetN(prhs[4]);
  if( !mxIsDouble(prhs[4]) || mxIsComplex(prhs[4]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var5 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
  var5 = mxGetPr(prhs[4]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4,var5);


}

#else // MATLAB_MEX_FILE

#include "dxDiscreteMapDiagonalImpact.hh"

namespace DiagonalImpact
{

void dxDiscreteMapDiagonalImpact_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4,const double *var5)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4, var5);

}

}

#endif // MATLAB_MEX_FILE
