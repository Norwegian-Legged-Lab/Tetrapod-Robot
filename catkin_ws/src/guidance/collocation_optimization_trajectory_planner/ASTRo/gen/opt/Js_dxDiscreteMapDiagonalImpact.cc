/*
 * Automatically Generated from Mathematica.
 * Sat 14 May 2022 15:44:17 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=1;
  p_output1[24]=1;
  p_output1[25]=1;
  p_output1[26]=1;
  p_output1[27]=1;
  p_output1[28]=1;
  p_output1[29]=1;
  p_output1[30]=1;
  p_output1[31]=1;
  p_output1[32]=1;
  p_output1[33]=1;
  p_output1[34]=1;
  p_output1[35]=1;
  p_output1[36]=1;
  p_output1[37]=1;
  p_output1[38]=1;
  p_output1[39]=1;
  p_output1[40]=1;
  p_output1[41]=1;
  p_output1[42]=1;
  p_output1[43]=1;
  p_output1[44]=1;
  p_output1[45]=1;
  p_output1[46]=1;
  p_output1[47]=1;
  p_output1[48]=1;
  p_output1[49]=2;
  p_output1[50]=2;
  p_output1[51]=2;
  p_output1[52]=2;
  p_output1[53]=2;
  p_output1[54]=2;
  p_output1[55]=2;
  p_output1[56]=2;
  p_output1[57]=2;
  p_output1[58]=2;
  p_output1[59]=2;
  p_output1[60]=2;
  p_output1[61]=2;
  p_output1[62]=2;
  p_output1[63]=2;
  p_output1[64]=2;
  p_output1[65]=2;
  p_output1[66]=2;
  p_output1[67]=2;
  p_output1[68]=2;
  p_output1[69]=2;
  p_output1[70]=2;
  p_output1[71]=2;
  p_output1[72]=2;
  p_output1[73]=2;
  p_output1[74]=2;
  p_output1[75]=2;
  p_output1[76]=2;
  p_output1[77]=2;
  p_output1[78]=2;
  p_output1[79]=2;
  p_output1[80]=2;
  p_output1[81]=2;
  p_output1[82]=2;
  p_output1[83]=2;
  p_output1[84]=2;
  p_output1[85]=2;
  p_output1[86]=2;
  p_output1[87]=2;
  p_output1[88]=2;
  p_output1[89]=2;
  p_output1[90]=2;
  p_output1[91]=2;
  p_output1[92]=2;
  p_output1[93]=2;
  p_output1[94]=2;
  p_output1[95]=2;
  p_output1[96]=2;
  p_output1[97]=2;
  p_output1[98]=3;
  p_output1[99]=3;
  p_output1[100]=3;
  p_output1[101]=3;
  p_output1[102]=3;
  p_output1[103]=3;
  p_output1[104]=3;
  p_output1[105]=3;
  p_output1[106]=3;
  p_output1[107]=3;
  p_output1[108]=3;
  p_output1[109]=3;
  p_output1[110]=3;
  p_output1[111]=3;
  p_output1[112]=3;
  p_output1[113]=3;
  p_output1[114]=3;
  p_output1[115]=3;
  p_output1[116]=3;
  p_output1[117]=3;
  p_output1[118]=3;
  p_output1[119]=3;
  p_output1[120]=3;
  p_output1[121]=3;
  p_output1[122]=3;
  p_output1[123]=3;
  p_output1[124]=3;
  p_output1[125]=3;
  p_output1[126]=3;
  p_output1[127]=3;
  p_output1[128]=3;
  p_output1[129]=3;
  p_output1[130]=3;
  p_output1[131]=3;
  p_output1[132]=3;
  p_output1[133]=3;
  p_output1[134]=3;
  p_output1[135]=3;
  p_output1[136]=3;
  p_output1[137]=3;
  p_output1[138]=3;
  p_output1[139]=3;
  p_output1[140]=3;
  p_output1[141]=3;
  p_output1[142]=3;
  p_output1[143]=3;
  p_output1[144]=3;
  p_output1[145]=3;
  p_output1[146]=3;
  p_output1[147]=4;
  p_output1[148]=4;
  p_output1[149]=4;
  p_output1[150]=4;
  p_output1[151]=4;
  p_output1[152]=4;
  p_output1[153]=4;
  p_output1[154]=4;
  p_output1[155]=4;
  p_output1[156]=4;
  p_output1[157]=4;
  p_output1[158]=4;
  p_output1[159]=4;
  p_output1[160]=4;
  p_output1[161]=4;
  p_output1[162]=4;
  p_output1[163]=4;
  p_output1[164]=4;
  p_output1[165]=4;
  p_output1[166]=4;
  p_output1[167]=4;
  p_output1[168]=4;
  p_output1[169]=4;
  p_output1[170]=4;
  p_output1[171]=4;
  p_output1[172]=4;
  p_output1[173]=4;
  p_output1[174]=4;
  p_output1[175]=4;
  p_output1[176]=4;
  p_output1[177]=4;
  p_output1[178]=4;
  p_output1[179]=4;
  p_output1[180]=4;
  p_output1[181]=4;
  p_output1[182]=4;
  p_output1[183]=4;
  p_output1[184]=4;
  p_output1[185]=4;
  p_output1[186]=4;
  p_output1[187]=4;
  p_output1[188]=4;
  p_output1[189]=4;
  p_output1[190]=4;
  p_output1[191]=4;
  p_output1[192]=4;
  p_output1[193]=4;
  p_output1[194]=4;
  p_output1[195]=4;
  p_output1[196]=4;
  p_output1[197]=4;
  p_output1[198]=4;
  p_output1[199]=4;
  p_output1[200]=4;
  p_output1[201]=4;
  p_output1[202]=4;
  p_output1[203]=4;
  p_output1[204]=5;
  p_output1[205]=5;
  p_output1[206]=5;
  p_output1[207]=5;
  p_output1[208]=5;
  p_output1[209]=5;
  p_output1[210]=5;
  p_output1[211]=5;
  p_output1[212]=5;
  p_output1[213]=5;
  p_output1[214]=5;
  p_output1[215]=5;
  p_output1[216]=5;
  p_output1[217]=5;
  p_output1[218]=5;
  p_output1[219]=5;
  p_output1[220]=5;
  p_output1[221]=5;
  p_output1[222]=5;
  p_output1[223]=5;
  p_output1[224]=5;
  p_output1[225]=5;
  p_output1[226]=5;
  p_output1[227]=5;
  p_output1[228]=5;
  p_output1[229]=5;
  p_output1[230]=5;
  p_output1[231]=5;
  p_output1[232]=5;
  p_output1[233]=5;
  p_output1[234]=5;
  p_output1[235]=5;
  p_output1[236]=5;
  p_output1[237]=5;
  p_output1[238]=5;
  p_output1[239]=5;
  p_output1[240]=5;
  p_output1[241]=5;
  p_output1[242]=5;
  p_output1[243]=5;
  p_output1[244]=5;
  p_output1[245]=5;
  p_output1[246]=5;
  p_output1[247]=5;
  p_output1[248]=5;
  p_output1[249]=5;
  p_output1[250]=5;
  p_output1[251]=5;
  p_output1[252]=5;
  p_output1[253]=5;
  p_output1[254]=5;
  p_output1[255]=5;
  p_output1[256]=5;
  p_output1[257]=5;
  p_output1[258]=5;
  p_output1[259]=5;
  p_output1[260]=5;
  p_output1[261]=6;
  p_output1[262]=6;
  p_output1[263]=6;
  p_output1[264]=6;
  p_output1[265]=6;
  p_output1[266]=6;
  p_output1[267]=6;
  p_output1[268]=6;
  p_output1[269]=6;
  p_output1[270]=6;
  p_output1[271]=6;
  p_output1[272]=6;
  p_output1[273]=6;
  p_output1[274]=6;
  p_output1[275]=6;
  p_output1[276]=6;
  p_output1[277]=6;
  p_output1[278]=6;
  p_output1[279]=6;
  p_output1[280]=6;
  p_output1[281]=6;
  p_output1[282]=6;
  p_output1[283]=6;
  p_output1[284]=6;
  p_output1[285]=6;
  p_output1[286]=6;
  p_output1[287]=6;
  p_output1[288]=6;
  p_output1[289]=6;
  p_output1[290]=6;
  p_output1[291]=6;
  p_output1[292]=6;
  p_output1[293]=6;
  p_output1[294]=6;
  p_output1[295]=6;
  p_output1[296]=6;
  p_output1[297]=6;
  p_output1[298]=6;
  p_output1[299]=6;
  p_output1[300]=6;
  p_output1[301]=6;
  p_output1[302]=6;
  p_output1[303]=6;
  p_output1[304]=6;
  p_output1[305]=6;
  p_output1[306]=6;
  p_output1[307]=6;
  p_output1[308]=6;
  p_output1[309]=6;
  p_output1[310]=7;
  p_output1[311]=7;
  p_output1[312]=7;
  p_output1[313]=7;
  p_output1[314]=7;
  p_output1[315]=7;
  p_output1[316]=7;
  p_output1[317]=7;
  p_output1[318]=7;
  p_output1[319]=7;
  p_output1[320]=7;
  p_output1[321]=7;
  p_output1[322]=7;
  p_output1[323]=7;
  p_output1[324]=7;
  p_output1[325]=7;
  p_output1[326]=7;
  p_output1[327]=7;
  p_output1[328]=7;
  p_output1[329]=7;
  p_output1[330]=7;
  p_output1[331]=7;
  p_output1[332]=8;
  p_output1[333]=8;
  p_output1[334]=8;
  p_output1[335]=8;
  p_output1[336]=8;
  p_output1[337]=8;
  p_output1[338]=8;
  p_output1[339]=8;
  p_output1[340]=8;
  p_output1[341]=8;
  p_output1[342]=8;
  p_output1[343]=8;
  p_output1[344]=8;
  p_output1[345]=8;
  p_output1[346]=8;
  p_output1[347]=8;
  p_output1[348]=8;
  p_output1[349]=8;
  p_output1[350]=8;
  p_output1[351]=8;
  p_output1[352]=8;
  p_output1[353]=8;
  p_output1[354]=8;
  p_output1[355]=8;
  p_output1[356]=9;
  p_output1[357]=9;
  p_output1[358]=9;
  p_output1[359]=9;
  p_output1[360]=9;
  p_output1[361]=9;
  p_output1[362]=9;
  p_output1[363]=9;
  p_output1[364]=9;
  p_output1[365]=9;
  p_output1[366]=9;
  p_output1[367]=10;
  p_output1[368]=10;
  p_output1[369]=10;
  p_output1[370]=10;
  p_output1[371]=10;
  p_output1[372]=10;
  p_output1[373]=10;
  p_output1[374]=10;
  p_output1[375]=10;
  p_output1[376]=10;
  p_output1[377]=10;
  p_output1[378]=10;
  p_output1[379]=10;
  p_output1[380]=10;
  p_output1[381]=10;
  p_output1[382]=10;
  p_output1[383]=10;
  p_output1[384]=10;
  p_output1[385]=10;
  p_output1[386]=10;
  p_output1[387]=10;
  p_output1[388]=10;
  p_output1[389]=10;
  p_output1[390]=10;
  p_output1[391]=11;
  p_output1[392]=11;
  p_output1[393]=11;
  p_output1[394]=11;
  p_output1[395]=11;
  p_output1[396]=11;
  p_output1[397]=11;
  p_output1[398]=11;
  p_output1[399]=11;
  p_output1[400]=11;
  p_output1[401]=11;
  p_output1[402]=11;
  p_output1[403]=11;
  p_output1[404]=11;
  p_output1[405]=11;
  p_output1[406]=11;
  p_output1[407]=11;
  p_output1[408]=11;
  p_output1[409]=11;
  p_output1[410]=11;
  p_output1[411]=11;
  p_output1[412]=11;
  p_output1[413]=11;
  p_output1[414]=11;
  p_output1[415]=11;
  p_output1[416]=11;
  p_output1[417]=12;
  p_output1[418]=12;
  p_output1[419]=12;
  p_output1[420]=12;
  p_output1[421]=12;
  p_output1[422]=12;
  p_output1[423]=12;
  p_output1[424]=12;
  p_output1[425]=12;
  p_output1[426]=12;
  p_output1[427]=12;
  p_output1[428]=12;
  p_output1[429]=13;
  p_output1[430]=13;
  p_output1[431]=13;
  p_output1[432]=13;
  p_output1[433]=13;
  p_output1[434]=13;
  p_output1[435]=13;
  p_output1[436]=13;
  p_output1[437]=13;
  p_output1[438]=13;
  p_output1[439]=13;
  p_output1[440]=13;
  p_output1[441]=13;
  p_output1[442]=13;
  p_output1[443]=13;
  p_output1[444]=13;
  p_output1[445]=13;
  p_output1[446]=13;
  p_output1[447]=13;
  p_output1[448]=13;
  p_output1[449]=13;
  p_output1[450]=13;
  p_output1[451]=13;
  p_output1[452]=13;
  p_output1[453]=14;
  p_output1[454]=14;
  p_output1[455]=14;
  p_output1[456]=14;
  p_output1[457]=14;
  p_output1[458]=14;
  p_output1[459]=14;
  p_output1[460]=14;
  p_output1[461]=14;
  p_output1[462]=14;
  p_output1[463]=14;
  p_output1[464]=14;
  p_output1[465]=14;
  p_output1[466]=14;
  p_output1[467]=14;
  p_output1[468]=14;
  p_output1[469]=14;
  p_output1[470]=14;
  p_output1[471]=14;
  p_output1[472]=14;
  p_output1[473]=14;
  p_output1[474]=14;
  p_output1[475]=14;
  p_output1[476]=14;
  p_output1[477]=14;
  p_output1[478]=14;
  p_output1[479]=15;
  p_output1[480]=15;
  p_output1[481]=15;
  p_output1[482]=15;
  p_output1[483]=15;
  p_output1[484]=15;
  p_output1[485]=15;
  p_output1[486]=15;
  p_output1[487]=15;
  p_output1[488]=15;
  p_output1[489]=15;
  p_output1[490]=15;
  p_output1[491]=16;
  p_output1[492]=16;
  p_output1[493]=16;
  p_output1[494]=16;
  p_output1[495]=16;
  p_output1[496]=16;
  p_output1[497]=16;
  p_output1[498]=16;
  p_output1[499]=16;
  p_output1[500]=16;
  p_output1[501]=16;
  p_output1[502]=16;
  p_output1[503]=16;
  p_output1[504]=16;
  p_output1[505]=16;
  p_output1[506]=16;
  p_output1[507]=16;
  p_output1[508]=16;
  p_output1[509]=16;
  p_output1[510]=16;
  p_output1[511]=16;
  p_output1[512]=16;
  p_output1[513]=17;
  p_output1[514]=17;
  p_output1[515]=17;
  p_output1[516]=17;
  p_output1[517]=17;
  p_output1[518]=17;
  p_output1[519]=17;
  p_output1[520]=17;
  p_output1[521]=17;
  p_output1[522]=17;
  p_output1[523]=17;
  p_output1[524]=17;
  p_output1[525]=17;
  p_output1[526]=17;
  p_output1[527]=17;
  p_output1[528]=17;
  p_output1[529]=17;
  p_output1[530]=17;
  p_output1[531]=17;
  p_output1[532]=17;
  p_output1[533]=17;
  p_output1[534]=17;
  p_output1[535]=17;
  p_output1[536]=17;
  p_output1[537]=18;
  p_output1[538]=18;
  p_output1[539]=18;
  p_output1[540]=18;
  p_output1[541]=18;
  p_output1[542]=18;
  p_output1[543]=18;
  p_output1[544]=18;
  p_output1[545]=18;
  p_output1[546]=18;
  p_output1[547]=18;
  p_output1[548]=1;
  p_output1[549]=2;
  p_output1[550]=3;
  p_output1[551]=4;
  p_output1[552]=5;
  p_output1[553]=6;
  p_output1[554]=7;
  p_output1[555]=8;
  p_output1[556]=10;
  p_output1[557]=11;
  p_output1[558]=13;
  p_output1[559]=14;
  p_output1[560]=16;
  p_output1[561]=17;
  p_output1[562]=22;
  p_output1[563]=23;
  p_output1[564]=24;
  p_output1[565]=25;
  p_output1[566]=26;
  p_output1[567]=27;
  p_output1[568]=28;
  p_output1[569]=29;
  p_output1[570]=30;
  p_output1[571]=31;
  p_output1[572]=32;
  p_output1[573]=33;
  p_output1[574]=34;
  p_output1[575]=35;
  p_output1[576]=36;
  p_output1[577]=37;
  p_output1[578]=38;
  p_output1[579]=39;
  p_output1[580]=40;
  p_output1[581]=41;
  p_output1[582]=42;
  p_output1[583]=43;
  p_output1[584]=44;
  p_output1[585]=46;
  p_output1[586]=47;
  p_output1[587]=49;
  p_output1[588]=50;
  p_output1[589]=52;
  p_output1[590]=53;
  p_output1[591]=55;
  p_output1[592]=56;
  p_output1[593]=57;
  p_output1[594]=58;
  p_output1[595]=59;
  p_output1[596]=60;
  p_output1[597]=1;
  p_output1[598]=2;
  p_output1[599]=3;
  p_output1[600]=4;
  p_output1[601]=5;
  p_output1[602]=6;
  p_output1[603]=7;
  p_output1[604]=8;
  p_output1[605]=10;
  p_output1[606]=11;
  p_output1[607]=13;
  p_output1[608]=14;
  p_output1[609]=16;
  p_output1[610]=17;
  p_output1[611]=22;
  p_output1[612]=23;
  p_output1[613]=24;
  p_output1[614]=25;
  p_output1[615]=26;
  p_output1[616]=27;
  p_output1[617]=28;
  p_output1[618]=29;
  p_output1[619]=30;
  p_output1[620]=31;
  p_output1[621]=32;
  p_output1[622]=33;
  p_output1[623]=34;
  p_output1[624]=35;
  p_output1[625]=36;
  p_output1[626]=37;
  p_output1[627]=38;
  p_output1[628]=39;
  p_output1[629]=40;
  p_output1[630]=41;
  p_output1[631]=42;
  p_output1[632]=43;
  p_output1[633]=44;
  p_output1[634]=46;
  p_output1[635]=47;
  p_output1[636]=49;
  p_output1[637]=50;
  p_output1[638]=52;
  p_output1[639]=53;
  p_output1[640]=55;
  p_output1[641]=56;
  p_output1[642]=57;
  p_output1[643]=58;
  p_output1[644]=59;
  p_output1[645]=60;
  p_output1[646]=1;
  p_output1[647]=2;
  p_output1[648]=3;
  p_output1[649]=4;
  p_output1[650]=5;
  p_output1[651]=6;
  p_output1[652]=7;
  p_output1[653]=8;
  p_output1[654]=10;
  p_output1[655]=11;
  p_output1[656]=13;
  p_output1[657]=14;
  p_output1[658]=16;
  p_output1[659]=17;
  p_output1[660]=22;
  p_output1[661]=23;
  p_output1[662]=24;
  p_output1[663]=25;
  p_output1[664]=26;
  p_output1[665]=27;
  p_output1[666]=28;
  p_output1[667]=29;
  p_output1[668]=30;
  p_output1[669]=31;
  p_output1[670]=32;
  p_output1[671]=33;
  p_output1[672]=34;
  p_output1[673]=35;
  p_output1[674]=36;
  p_output1[675]=37;
  p_output1[676]=38;
  p_output1[677]=39;
  p_output1[678]=40;
  p_output1[679]=41;
  p_output1[680]=42;
  p_output1[681]=43;
  p_output1[682]=44;
  p_output1[683]=46;
  p_output1[684]=47;
  p_output1[685]=49;
  p_output1[686]=50;
  p_output1[687]=52;
  p_output1[688]=53;
  p_output1[689]=55;
  p_output1[690]=56;
  p_output1[691]=57;
  p_output1[692]=58;
  p_output1[693]=59;
  p_output1[694]=60;
  p_output1[695]=1;
  p_output1[696]=2;
  p_output1[697]=3;
  p_output1[698]=4;
  p_output1[699]=5;
  p_output1[700]=6;
  p_output1[701]=7;
  p_output1[702]=8;
  p_output1[703]=9;
  p_output1[704]=10;
  p_output1[705]=11;
  p_output1[706]=12;
  p_output1[707]=13;
  p_output1[708]=14;
  p_output1[709]=15;
  p_output1[710]=16;
  p_output1[711]=17;
  p_output1[712]=18;
  p_output1[713]=22;
  p_output1[714]=23;
  p_output1[715]=24;
  p_output1[716]=25;
  p_output1[717]=26;
  p_output1[718]=27;
  p_output1[719]=28;
  p_output1[720]=29;
  p_output1[721]=30;
  p_output1[722]=31;
  p_output1[723]=32;
  p_output1[724]=33;
  p_output1[725]=34;
  p_output1[726]=35;
  p_output1[727]=36;
  p_output1[728]=37;
  p_output1[729]=38;
  p_output1[730]=39;
  p_output1[731]=40;
  p_output1[732]=41;
  p_output1[733]=42;
  p_output1[734]=43;
  p_output1[735]=44;
  p_output1[736]=45;
  p_output1[737]=46;
  p_output1[738]=47;
  p_output1[739]=48;
  p_output1[740]=49;
  p_output1[741]=50;
  p_output1[742]=51;
  p_output1[743]=52;
  p_output1[744]=53;
  p_output1[745]=54;
  p_output1[746]=55;
  p_output1[747]=56;
  p_output1[748]=57;
  p_output1[749]=58;
  p_output1[750]=59;
  p_output1[751]=60;
  p_output1[752]=1;
  p_output1[753]=2;
  p_output1[754]=3;
  p_output1[755]=4;
  p_output1[756]=5;
  p_output1[757]=6;
  p_output1[758]=7;
  p_output1[759]=8;
  p_output1[760]=9;
  p_output1[761]=10;
  p_output1[762]=11;
  p_output1[763]=12;
  p_output1[764]=13;
  p_output1[765]=14;
  p_output1[766]=15;
  p_output1[767]=16;
  p_output1[768]=17;
  p_output1[769]=18;
  p_output1[770]=22;
  p_output1[771]=23;
  p_output1[772]=24;
  p_output1[773]=25;
  p_output1[774]=26;
  p_output1[775]=27;
  p_output1[776]=28;
  p_output1[777]=29;
  p_output1[778]=30;
  p_output1[779]=31;
  p_output1[780]=32;
  p_output1[781]=33;
  p_output1[782]=34;
  p_output1[783]=35;
  p_output1[784]=36;
  p_output1[785]=37;
  p_output1[786]=38;
  p_output1[787]=39;
  p_output1[788]=40;
  p_output1[789]=41;
  p_output1[790]=42;
  p_output1[791]=43;
  p_output1[792]=44;
  p_output1[793]=45;
  p_output1[794]=46;
  p_output1[795]=47;
  p_output1[796]=48;
  p_output1[797]=49;
  p_output1[798]=50;
  p_output1[799]=51;
  p_output1[800]=52;
  p_output1[801]=53;
  p_output1[802]=54;
  p_output1[803]=55;
  p_output1[804]=56;
  p_output1[805]=57;
  p_output1[806]=58;
  p_output1[807]=59;
  p_output1[808]=60;
  p_output1[809]=1;
  p_output1[810]=2;
  p_output1[811]=3;
  p_output1[812]=4;
  p_output1[813]=5;
  p_output1[814]=6;
  p_output1[815]=7;
  p_output1[816]=8;
  p_output1[817]=10;
  p_output1[818]=11;
  p_output1[819]=13;
  p_output1[820]=14;
  p_output1[821]=16;
  p_output1[822]=17;
  p_output1[823]=22;
  p_output1[824]=23;
  p_output1[825]=24;
  p_output1[826]=25;
  p_output1[827]=26;
  p_output1[828]=27;
  p_output1[829]=28;
  p_output1[830]=29;
  p_output1[831]=30;
  p_output1[832]=31;
  p_output1[833]=32;
  p_output1[834]=33;
  p_output1[835]=34;
  p_output1[836]=35;
  p_output1[837]=36;
  p_output1[838]=37;
  p_output1[839]=38;
  p_output1[840]=39;
  p_output1[841]=40;
  p_output1[842]=41;
  p_output1[843]=42;
  p_output1[844]=43;
  p_output1[845]=44;
  p_output1[846]=46;
  p_output1[847]=47;
  p_output1[848]=49;
  p_output1[849]=50;
  p_output1[850]=52;
  p_output1[851]=53;
  p_output1[852]=55;
  p_output1[853]=56;
  p_output1[854]=57;
  p_output1[855]=58;
  p_output1[856]=59;
  p_output1[857]=60;
  p_output1[858]=1;
  p_output1[859]=2;
  p_output1[860]=3;
  p_output1[861]=4;
  p_output1[862]=5;
  p_output1[863]=6;
  p_output1[864]=13;
  p_output1[865]=14;
  p_output1[866]=22;
  p_output1[867]=23;
  p_output1[868]=24;
  p_output1[869]=25;
  p_output1[870]=26;
  p_output1[871]=27;
  p_output1[872]=37;
  p_output1[873]=38;
  p_output1[874]=39;
  p_output1[875]=40;
  p_output1[876]=41;
  p_output1[877]=42;
  p_output1[878]=43;
  p_output1[879]=44;
  p_output1[880]=1;
  p_output1[881]=2;
  p_output1[882]=3;
  p_output1[883]=4;
  p_output1[884]=5;
  p_output1[885]=6;
  p_output1[886]=13;
  p_output1[887]=14;
  p_output1[888]=15;
  p_output1[889]=22;
  p_output1[890]=23;
  p_output1[891]=24;
  p_output1[892]=25;
  p_output1[893]=26;
  p_output1[894]=27;
  p_output1[895]=37;
  p_output1[896]=38;
  p_output1[897]=39;
  p_output1[898]=40;
  p_output1[899]=41;
  p_output1[900]=42;
  p_output1[901]=43;
  p_output1[902]=44;
  p_output1[903]=45;
  p_output1[904]=4;
  p_output1[905]=5;
  p_output1[906]=14;
  p_output1[907]=15;
  p_output1[908]=23;
  p_output1[909]=24;
  p_output1[910]=25;
  p_output1[911]=40;
  p_output1[912]=41;
  p_output1[913]=44;
  p_output1[914]=45;
  p_output1[915]=1;
  p_output1[916]=2;
  p_output1[917]=3;
  p_output1[918]=4;
  p_output1[919]=5;
  p_output1[920]=6;
  p_output1[921]=16;
  p_output1[922]=17;
  p_output1[923]=22;
  p_output1[924]=23;
  p_output1[925]=24;
  p_output1[926]=28;
  p_output1[927]=29;
  p_output1[928]=30;
  p_output1[929]=37;
  p_output1[930]=38;
  p_output1[931]=39;
  p_output1[932]=40;
  p_output1[933]=41;
  p_output1[934]=42;
  p_output1[935]=46;
  p_output1[936]=47;
  p_output1[937]=58;
  p_output1[938]=59;
  p_output1[939]=1;
  p_output1[940]=2;
  p_output1[941]=3;
  p_output1[942]=4;
  p_output1[943]=5;
  p_output1[944]=6;
  p_output1[945]=16;
  p_output1[946]=17;
  p_output1[947]=18;
  p_output1[948]=22;
  p_output1[949]=23;
  p_output1[950]=24;
  p_output1[951]=28;
  p_output1[952]=29;
  p_output1[953]=30;
  p_output1[954]=37;
  p_output1[955]=38;
  p_output1[956]=39;
  p_output1[957]=40;
  p_output1[958]=41;
  p_output1[959]=42;
  p_output1[960]=46;
  p_output1[961]=47;
  p_output1[962]=48;
  p_output1[963]=58;
  p_output1[964]=60;
  p_output1[965]=4;
  p_output1[966]=5;
  p_output1[967]=17;
  p_output1[968]=18;
  p_output1[969]=23;
  p_output1[970]=24;
  p_output1[971]=28;
  p_output1[972]=40;
  p_output1[973]=41;
  p_output1[974]=47;
  p_output1[975]=48;
  p_output1[976]=60;
  p_output1[977]=1;
  p_output1[978]=2;
  p_output1[979]=3;
  p_output1[980]=4;
  p_output1[981]=5;
  p_output1[982]=6;
  p_output1[983]=7;
  p_output1[984]=8;
  p_output1[985]=22;
  p_output1[986]=23;
  p_output1[987]=24;
  p_output1[988]=31;
  p_output1[989]=32;
  p_output1[990]=33;
  p_output1[991]=37;
  p_output1[992]=38;
  p_output1[993]=39;
  p_output1[994]=40;
  p_output1[995]=41;
  p_output1[996]=42;
  p_output1[997]=49;
  p_output1[998]=50;
  p_output1[999]=56;
  p_output1[1000]=57;
  p_output1[1001]=1;
  p_output1[1002]=2;
  p_output1[1003]=3;
  p_output1[1004]=4;
  p_output1[1005]=5;
  p_output1[1006]=6;
  p_output1[1007]=7;
  p_output1[1008]=8;
  p_output1[1009]=9;
  p_output1[1010]=22;
  p_output1[1011]=23;
  p_output1[1012]=24;
  p_output1[1013]=31;
  p_output1[1014]=32;
  p_output1[1015]=33;
  p_output1[1016]=37;
  p_output1[1017]=38;
  p_output1[1018]=39;
  p_output1[1019]=40;
  p_output1[1020]=41;
  p_output1[1021]=42;
  p_output1[1022]=49;
  p_output1[1023]=50;
  p_output1[1024]=51;
  p_output1[1025]=55;
  p_output1[1026]=57;
  p_output1[1027]=4;
  p_output1[1028]=5;
  p_output1[1029]=8;
  p_output1[1030]=9;
  p_output1[1031]=23;
  p_output1[1032]=24;
  p_output1[1033]=31;
  p_output1[1034]=40;
  p_output1[1035]=41;
  p_output1[1036]=50;
  p_output1[1037]=51;
  p_output1[1038]=57;
  p_output1[1039]=1;
  p_output1[1040]=2;
  p_output1[1041]=3;
  p_output1[1042]=4;
  p_output1[1043]=5;
  p_output1[1044]=6;
  p_output1[1045]=10;
  p_output1[1046]=11;
  p_output1[1047]=22;
  p_output1[1048]=23;
  p_output1[1049]=24;
  p_output1[1050]=34;
  p_output1[1051]=35;
  p_output1[1052]=36;
  p_output1[1053]=37;
  p_output1[1054]=38;
  p_output1[1055]=39;
  p_output1[1056]=40;
  p_output1[1057]=41;
  p_output1[1058]=42;
  p_output1[1059]=52;
  p_output1[1060]=53;
  p_output1[1061]=1;
  p_output1[1062]=2;
  p_output1[1063]=3;
  p_output1[1064]=4;
  p_output1[1065]=5;
  p_output1[1066]=6;
  p_output1[1067]=10;
  p_output1[1068]=11;
  p_output1[1069]=12;
  p_output1[1070]=22;
  p_output1[1071]=23;
  p_output1[1072]=24;
  p_output1[1073]=34;
  p_output1[1074]=35;
  p_output1[1075]=36;
  p_output1[1076]=37;
  p_output1[1077]=38;
  p_output1[1078]=39;
  p_output1[1079]=40;
  p_output1[1080]=41;
  p_output1[1081]=42;
  p_output1[1082]=52;
  p_output1[1083]=53;
  p_output1[1084]=54;
  p_output1[1085]=4;
  p_output1[1086]=5;
  p_output1[1087]=11;
  p_output1[1088]=12;
  p_output1[1089]=23;
  p_output1[1090]=24;
  p_output1[1091]=34;
  p_output1[1092]=40;
  p_output1[1093]=41;
  p_output1[1094]=53;
  p_output1[1095]=54;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 548, (mwSize) 2, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Js_dxDiscreteMapDiagonalImpact.hh"

namespace DiagonalImpact
{

void Js_dxDiscreteMapDiagonalImpact_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
