/*
 * Automatically Generated from Mathematica.
 * Sun 12 Jun 2022 14:36:13 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t847;
  double t1169;
  double t1490;
  double t1706;
  double t1718;
  double t1817;
  double t716;
  double t1835;
  double t1841;
  double t1870;
  double t2846;
  double t9987;
  double t11158;
  double t11174;
  double t11175;
  double t1820;
  double t1852;
  double t1864;
  double t10993;
  double t11159;
  double t11166;
  double t11172;
  double t11286;
  double t11296;
  double t11301;
  double t11303;
  double t11304;
  double t11306;
  double t11307;
  double t11308;
  double t11309;
  double t1828;
  double t11373;
  double t1719;
  double t1811;
  double t11404;
  double t11405;
  double t11406;
  double t11410;
  double t11411;
  double t11414;
  double t11417;
  double t11418;
  double t11419;
  double t11448;
  double t11451;
  double t11456;
  double t11447;
  double t11457;
  double t11458;
  double t11471;
  double t11487;
  double t11492;
  double t11524;
  double t11530;
  double t11537;
  double t11561;
  double t11563;
  double t11565;
  double t11368;
  double t11369;
  double t11356;
  double t11357;
  double t11377;
  double t11378;
  double t11382;
  double t11394;
  double t11407;
  double t11374;
  double t11376;
  double t11866;
  double t11867;
  double t11873;
  double t11880;
  double t11894;
  double t11900;
  double t1818;
  double t1836;
  double t11324;
  double t11566;
  double t11584;
  double t11601;
  double t11602;
  double t11624;
  double t11685;
  double t11739;
  double t11826;
  double t11830;
  double t11835;
  double t11841;
  double t11842;
  double t11843;
  double t11844;
  double t11848;
  double t11849;
  double t11858;
  double t11864;
  double t11865;
  double t11901;
  double t11358;
  double t11370;
  double t11371;
  double t12013;
  double t12014;
  double t12021;
  double t12025;
  double t12030;
  double t12032;
  double t12033;
  double t12034;
  double t11375;
  double t12231;
  double t12232;
  double t11522;
  double t11523;
  double t11545;
  double t11546;
  double t11550;
  double t11551;
  double t11553;
  double t11554;
  double t11555;
  double t12031;
  double t12035;
  double t12036;
  double t12037;
  double t12041;
  double t12206;
  double t12220;
  double t12262;
  double t12263;
  double t12264;
  double t11466;
  double t11494;
  double t11495;
  double t11498;
  double t11502;
  double t11518;
  double t11519;
  double t12379;
  double t12400;
  double t12401;
  double t12429;
  double t12434;
  double t12462;
  double t12464;
  double t12468;
  double t12703;
  double t12713;
  double t12714;
  double t12715;
  double t12719;
  double t12720;
  double t12721;
  double t12725;
  double t12726;
  double t12727;
  double t12743;
  double t12741;
  double t12744;
  double t12746;
  double t12751;
  double t12752;
  double t12753;
  double t12755;
  double t12756;
  double t12757;
  double t12776;
  double t12777;
  double t12778;
  double t12860;
  double t12873;
  double t12764;
  double t12913;
  double t12916;
  double t12917;
  double t12911;
  double t12918;
  double t12919;
  double t12923;
  double t12924;
  double t12925;
  double t12936;
  double t12937;
  double t12938;
  double t12950;
  double t12951;
  double t12953;
  double t12957;
  double t12958;
  double t12959;
  double t12965;
  double t12966;
  double t12967;
  double t12969;
  double t12970;
  double t12973;
  double t12975;
  double t12976;
  double t12977;
  double t12990;
  double t12991;
  double t12992;
  double t12993;
  double t12997;
  double t12998;
  double t12999;
  double t13000;
  double t13001;
  double t13005;
  double t13006;
  double t13007;
  double t13009;
  double t13010;
  double t12704;
  double t12705;
  double t12708;
  double t12709;
  double t12710;
  double t12711;
  double t12712;
  double t12716;
  double t12723;
  double t12728;
  double t12731;
  double t12732;
  double t12733;
  double t12734;
  double t12736;
  double t13025;
  double t13026;
  double t13027;
  double t13024;
  double t13028;
  double t13029;
  double t13032;
  double t13033;
  double t13035;
  double t13182;
  double t13190;
  double t13191;
  double t12949;
  double t13215;
  double t13216;
  double t13217;
  double t13219;
  double t13220;
  double t13222;
  double t13223;
  double t12988;
  double t12989;
  double t13011;
  double t12780;
  double t12795;
  double t12885;
  double t12892;
  double t12893;
  double t12901;
  double t12903;
  double t12904;
  double t12905;
  double t12906;
  double t12907;
  double t12908;
  double t12909;
  double t13247;
  double t13248;
  double t13250;
  double t13260;
  double t13268;
  double t13302;
  double t12961;
  double t13521;
  double t13522;
  double t12956;
  double t12960;
  double t12962;
  double t12963;
  double t12964;
  double t12968;
  double t13013;
  double t13015;
  double t13016;
  double t12749;
  double t12754;
  double t12758;
  double t12759;
  double t12762;
  double t12763;
  double t12767;
  double t12769;
  double t12770;
  double t12771;
  double t12772;
  double t12773;
  double t12774;
  double t13572;
  double t13573;
  double t13574;
  double t13581;
  double t13638;
  double t13515;
  double t13516;
  double t13517;
  double t13518;
  double t13519;
  double t13523;
  double t13524;
  double t13525;
  double t13526;
  double t13527;
  double t13528;
  double t13529;
  double t13530;
  double t11934;
  double t14918;
  double t14941;
  double t13171;
  double t13174;
  double t13192;
  double t13193;
  double t13194;
  double t13196;
  double t13197;
  double t13198;
  double t13199;
  double t13424;
  double t13426;
  double t13432;
  double t13509;
  double t13510;
  double t13511;
  double t13512;
  double t13513;
  double t13852;
  double t13858;
  double t13865;
  double t13896;
  double t14767;
  double t14775;
  double t14785;
  double t14787;
  double t12934;
  double t12935;
  double t12939;
  double t12940;
  double t12941;
  double t12942;
  double t12943;
  double t12945;
  double t12947;
  double t17103;
  double t17105;
  double t17106;
  double t17107;
  double t17217;
  double t17289;
  double t17290;
  double t17310;
  double t17352;
  double t17353;
  double t13031;
  double t13037;
  double t13038;
  double t13039;
  double t13040;
  double t13141;
  double t13145;
  double t13330;
  double t13364;
  double t13380;
  double t13381;
  double t13389;
  double t13391;
  double t13410;
  double t13642;
  double t13643;
  double t13671;
  double t13753;
  double t13763;
  double t13787;
  double t13800;
  double t12922;
  double t12926;
  double t12927;
  double t12929;
  double t12930;
  double t12931;
  double t12932;
  double t17224;
  double t17313;
  double t17314;
  double t17318;
  double t17331;
  double t17333;
  double t17337;
  double t17457;
  double t17458;
  double t17459;
  double t17945;
  double t17949;
  double t17951;
  double t17955;
  double t18049;
  double t18073;
  double t18074;
  double t18075;
  double t18076;
  double t18077;
  double t18085;
  double t18104;
  double t18122;
  double t18123;
  double t18128;
  double t18131;
  double t18135;
  double t18137;
  double t18141;
  double t18143;
  double t18150;
  double t18158;
  double t18162;
  double t18164;
  double t18165;
  double t18167;
  double t18169;
  double t18170;
  double t18182;
  double t18183;
  double t18188;
  double t18189;
  double t18204;
  double t18206;
  double t17821;
  double t17822;
  double t17823;
  double t17827;
  double t17828;
  double t17829;
  double t17929;
  double t17934;
  double t17935;
  double t17940;
  double t17941;
  double t17943;
  double t18273;
  double t18274;
  double t18275;
  double t18276;
  double t18277;
  double t18278;
  double t18339;
  double t18228;
  double t18233;
  double t18235;
  double t18245;
  double t18251;
  double t18258;
  double t18265;
  double t18270;
  double t18272;
  double t18357;
  double t18359;
  double t18360;
  double t18362;
  double t18363;
  double t18366;
  double t18367;
  double t18369;
  double t18372;
  double t18375;
  double t18379;
  double t18393;
  double t18394;
  double t18396;
  double t18392;
  double t18397;
  double t18399;
  double t18414;
  double t18415;
  double t18416;
  double t18435;
  double t18436;
  double t18462;
  double t18463;
  double t18464;
  double t18469;
  double t18471;
  double t18476;
  double t18477;
  double t18354;
  double t18355;
  double t18383;
  double t18498;
  double t18499;
  double t18500;
  double t18501;
  double t18502;
  double t18503;
  double t18597;
  double t18600;
  double t18388;
  double t18389;
  double t18390;
  double t18624;
  double t18625;
  double t18562;
  double t18563;
  double t18566;
  double t18591;
  double t18596;
  double t18601;
  double t18602;
  double t18603;
  double t18604;
  double t18605;
  double t18614;
  double t18615;
  double t18616;
  double t18653;
  double t18657;
  double t18433;
  double t18434;
  double t18437;
  double t18438;
  double t18440;
  double t18441;
  double t18444;
  double t18446;
  double t18448;
  double t18527;
  double t18528;
  double t18535;
  double t18545;
  double t18549;
  double t18550;
  double t18551;
  double t18556;
  double t18636;
  double t18639;
  double t18640;
  double t18641;
  double t18642;
  double t18643;
  double t18644;
  double t18645;
  double t18675;
  double t18676;
  double t18677;
  double t18679;
  double t18683;
  double t18684;
  double t18685;
  double t18698;
  double t18699;
  double t18406;
  double t18421;
  double t18423;
  double t18424;
  double t18427;
  double t18428;
  double t18431;
  double t18504;
  double t18505;
  double t18506;
  double t18509;
  double t18513;
  double t18515;
  double t18516;
  double t18626;
  double t18627;
  double t18628;
  double t18629;
  double t18631;
  double t18633;
  double t18634;
  double t18681;
  double t18689;
  double t18690;
  double t18691;
  double t18692;
  double t18693;
  double t18694;
  double t18713;
  double t18714;
  t847 = Cos(var1[15]);
  t1169 = -1.*t847;
  t1490 = 1. + t1169;
  t1706 = -0.15121*t1490;
  t1718 = Sin(var1[15]);
  t1817 = Sin(var1[4]);
  t716 = Cos(var1[5]);
  t1835 = Sin(var1[5]);
  t1841 = Cos(var1[16]);
  t1870 = t716*t1718*t1817;
  t2846 = t847*t1817*t1835;
  t9987 = t1870 + t2846;
  t11158 = Cos(var1[17]);
  t11174 = Sin(var1[16]);
  t11175 = Sin(var1[17]);
  t1820 = -0.15121*t1718;
  t1852 = -1.*t1841;
  t1864 = 1. + t1852;
  t10993 = -0.28121*t1864*t9987;
  t11159 = -1.*t11158;
  t11166 = 1. + t11159;
  t11172 = -0.50321*t1841*t11166*t9987;
  t11286 = 0.50321*t11174*t11175*t9987;
  t11296 = t847*t716*t1817;
  t11301 = -1.*t1718*t1817*t1835;
  t11303 = t11296 + t11301;
  t11304 = -0.15121*t11303;
  t11306 = t1841*t11158*t9987;
  t11307 = t11174*t11175*t9987;
  t11308 = t11306 + t11307;
  t11309 = -0.19821*t11308;
  t1828 = t1706 + t1820;
  t11373 = Cos(var1[4]);
  t1719 = 0.15121*t1718;
  t1811 = t1706 + t1719;
  t11404 = -1.*t847*t11373*t716;
  t11405 = t11373*t1718*t1835;
  t11406 = t11404 + t11405;
  t11410 = -1.*t11174*t1817;
  t11411 = t1841*t11406;
  t11414 = t11410 + t11411;
  t11417 = -1.*t1841*t1817;
  t11418 = -1.*t11174*t11406;
  t11419 = t11417 + t11418;
  t11448 = -1.*t847*t716*t1817;
  t11451 = t1718*t1817*t1835;
  t11456 = t11448 + t11451;
  t11447 = t11373*t11174;
  t11457 = t1841*t11456;
  t11458 = t11447 + t11457;
  t11471 = t1841*t11373;
  t11487 = -1.*t11174*t11456;
  t11492 = t11471 + t11487;
  t11524 = -1.*t11373*t11174;
  t11530 = -1.*t1841*t11456;
  t11537 = t11524 + t11530;
  t11561 = -1.*t11373*t716*t1718;
  t11563 = -1.*t847*t11373*t1835;
  t11565 = t11561 + t11563;
  t11368 = 0.15121*t847;
  t11369 = t11368 + t1820;
  t11356 = -0.15121*t847;
  t11357 = t11356 + t1820;
  t11377 = t11373*t716*t1718;
  t11378 = t847*t11373*t1835;
  t11382 = t11377 + t11378;
  t11394 = -0.15121*t11382;
  t11407 = -0.28121*t1864*t11406;
  t11374 = -1.*t11373*t716*t1828;
  t11376 = t11373*t1811*t1835;
  t11866 = -0.50321*t1841*t11166*t11406;
  t11867 = 0.50321*t11174*t11175*t11406;
  t11873 = t1841*t11158*t11406;
  t11880 = t11174*t11175*t11406;
  t11894 = t11873 + t11880;
  t11900 = -0.19821*t11894;
  t1818 = t716*t1811*t1817;
  t1836 = t1828*t1817*t1835;
  t11324 = t1818 + t1836 + t10993 + t11172 + t11286 + t11304 + t11309;
  t11566 = 0.50321*t11158*t11174*t11565;
  t11584 = -0.50321*t1841*t11175*t11565;
  t11601 = t11158*t11174*t11565;
  t11602 = -1.*t1841*t11175*t11565;
  t11624 = t11601 + t11602;
  t11685 = -0.19821*t11624;
  t11739 = t11566 + t11584 + t11685;
  t11826 = var2[17]*t11739;
  t11830 = -0.28121*t11174*t11565;
  t11835 = 0.50321*t11166*t11174*t11565;
  t11841 = 0.50321*t1841*t11175*t11565;
  t11842 = -1.*t11158*t11174*t11565;
  t11843 = t1841*t11175*t11565;
  t11844 = t11842 + t11843;
  t11848 = -0.19821*t11844;
  t11849 = t11830 + t11835 + t11841 + t11848;
  t11858 = var2[16]*t11849;
  t11864 = -1.*t11373*t716*t11369;
  t11865 = -1.*t11373*t11357*t1835;
  t11901 = t11864 + t11865 + t11394 + t11407 + t11866 + t11867 + t11900;
  t11358 = -1.*t716*t11357*t1817;
  t11370 = t11369*t1817*t1835;
  t11371 = t11358 + t11370 + t10993 + t11172 + t11286 + t11304 + t11309;
  t12013 = t847*t11373*t716;
  t12014 = -1.*t11373*t1718*t1835;
  t12021 = t12013 + t12014;
  t12025 = -1.*t1841*t12021;
  t12030 = t11410 + t12025;
  t12032 = t1841*t1817;
  t12033 = -1.*t11174*t12021;
  t12034 = t12032 + t12033;
  t11375 = -0.28121*t11174*t1817;
  t12231 = t11174*t12021;
  t12232 = t11417 + t12231;
  t11522 = 0.28121*t1841*t11373;
  t11523 = -0.28121*t11174*t11456;
  t11545 = -0.50321*t11175*t11537;
  t11546 = -0.50321*t11166*t11492;
  t11550 = -1.*t11175*t11537;
  t11551 = t11158*t11492;
  t11553 = t11550 + t11551;
  t11554 = -0.19821*t11553;
  t11555 = t11522 + t11523 + t11545 + t11546 + t11554;
  t12031 = -0.50321*t11158*t12030;
  t12035 = -0.50321*t11175*t12034;
  t12036 = -1.*t11158*t12030;
  t12037 = -1.*t11175*t12034;
  t12041 = t12036 + t12037;
  t12206 = -0.19821*t12041;
  t12220 = t12031 + t12035 + t12206;
  t12262 = t11174*t1817;
  t12263 = t1841*t12021;
  t12264 = t12262 + t12263;
  t11466 = -0.50321*t11175*t11458;
  t11494 = -0.50321*t11158*t11492;
  t11495 = -1.*t11175*t11458;
  t11498 = -1.*t11158*t11492;
  t11502 = t11495 + t11498;
  t11518 = -0.19821*t11502;
  t11519 = t11466 + t11494 + t11518;
  t12379 = -0.28121*t1864*t11565;
  t12400 = -0.50321*t1841*t11166*t11565;
  t12401 = 0.50321*t11174*t11175*t11565;
  t12429 = -0.15121*t11406;
  t12434 = t1841*t11158*t11565;
  t12462 = t11174*t11175*t11565;
  t12464 = t12434 + t12462;
  t12468 = -0.19821*t12464;
  t12703 = Cos(var1[3]);
  t12713 = t847*t12703*t11373*t716;
  t12714 = -1.*t12703*t11373*t1718*t1835;
  t12715 = t12713 + t12714;
  t12719 = t12703*t11174*t1817;
  t12720 = t1841*t12715;
  t12721 = t12719 + t12720;
  t12725 = t1841*t12703*t1817;
  t12726 = -1.*t11174*t12715;
  t12727 = t12725 + t12726;
  t12743 = Sin(var1[3]);
  t12741 = t12703*t716*t1817;
  t12744 = -1.*t12743*t1835;
  t12746 = t12741 + t12744;
  t12751 = -1.*t716*t12743;
  t12752 = -1.*t12703*t1817*t1835;
  t12753 = t12751 + t12752;
  t12755 = -1.*t1718*t12746;
  t12756 = t847*t12753;
  t12757 = t12755 + t12756;
  t12776 = -1.*t12703*t716*t1817;
  t12777 = t12743*t1835;
  t12778 = t12776 + t12777;
  t12860 = t1718*t12778;
  t12873 = t12860 + t12756;
  t12764 = -1.*t1718*t12753;
  t12913 = t847*t12746;
  t12916 = t1718*t12753;
  t12917 = t12913 + t12916;
  t12911 = -1.*t12703*t11373*t11174;
  t12918 = t1841*t12917;
  t12919 = t12911 + t12918;
  t12923 = -1.*t1841*t12703*t11373;
  t12924 = -1.*t11174*t12917;
  t12925 = t12923 + t12924;
  t12936 = t12703*t11373*t11174;
  t12937 = -1.*t1841*t12917;
  t12938 = t12936 + t12937;
  t12950 = -1.*t716*t12743*t1817;
  t12951 = -1.*t12703*t1835;
  t12953 = t12950 + t12951;
  t12957 = -1.*t12703*t716;
  t12958 = t12743*t1817*t1835;
  t12959 = t12957 + t12958;
  t12965 = t847*t12953;
  t12966 = t1718*t12959;
  t12967 = t12965 + t12966;
  t12969 = t11373*t11174*t12743;
  t12970 = t1841*t12967;
  t12973 = t12969 + t12970;
  t12975 = t1841*t11373*t12743;
  t12976 = -1.*t11174*t12967;
  t12977 = t12975 + t12976;
  t12990 = -1.*t11373*t716*t1718*t12743;
  t12991 = -1.*t847*t11373*t12743*t1835;
  t12992 = t12990 + t12991;
  t12993 = -0.28121*t1864*t12992;
  t12997 = -0.50321*t1841*t11166*t12992;
  t12998 = 0.50321*t11174*t11175*t12992;
  t12999 = -1.*t847*t11373*t716*t12743;
  t13000 = t11373*t1718*t12743*t1835;
  t13001 = t12999 + t13000;
  t13005 = -0.15121*t13001;
  t13006 = t1841*t11158*t12992;
  t13007 = t11174*t11175*t12992;
  t13009 = t13006 + t13007;
  t13010 = -0.19821*t13009;
  t12704 = t12703*t11373*t716*t1828;
  t12705 = 0.28121*t12703*t11174*t1817;
  t12708 = -1.*t12703*t11373*t1811*t1835;
  t12709 = -1.*t12703*t11373*t716*t1718;
  t12710 = -1.*t847*t12703*t11373*t1835;
  t12711 = t12709 + t12710;
  t12712 = -0.15121*t12711;
  t12716 = -0.28121*t1864*t12715;
  t12723 = -0.50321*t11166*t12721;
  t12728 = -0.50321*t11175*t12727;
  t12731 = t11158*t12721;
  t12732 = -1.*t11175*t12727;
  t12733 = t12731 + t12732;
  t12734 = -0.19821*t12733;
  t12736 = t12704 + t12705 + t12708 + t12712 + t12716 + t12723 + t12728 + t12734;
  t13025 = t847*t11373*t716*t12743;
  t13026 = -1.*t11373*t1718*t12743*t1835;
  t13027 = t13025 + t13026;
  t13024 = t11174*t12743*t1817;
  t13028 = t1841*t13027;
  t13029 = t13024 + t13028;
  t13032 = t1841*t12743*t1817;
  t13033 = -1.*t11174*t13027;
  t13035 = t13032 + t13033;
  t13182 = -1.*t11174*t12743*t1817;
  t13190 = -1.*t1841*t13027;
  t13191 = t13182 + t13190;
  t12949 = 0.28121*t11373*t11174*t12743;
  t13215 = -1.*t847*t716*t12743*t1817;
  t13216 = t1718*t12743*t1817*t1835;
  t13217 = t13215 + t13216;
  t13219 = t1841*t13217;
  t13220 = t12969 + t13219;
  t13222 = -1.*t11174*t13217;
  t13223 = t12975 + t13222;
  t12988 = -1.*t11373*t716*t1811*t12743;
  t12989 = -1.*t11373*t1828*t12743*t1835;
  t13011 = t12988 + t12989 + t12993 + t12997 + t12998 + t13005 + t13010;
  t12780 = t1811*t12778;
  t12795 = t1828*t12753;
  t12885 = -0.28121*t1864*t12873;
  t12892 = -0.50321*t1841*t11166*t12873;
  t12893 = 0.50321*t11174*t11175*t12873;
  t12901 = t847*t12778;
  t12903 = t12901 + t12764;
  t12904 = -0.15121*t12903;
  t12905 = t1841*t11158*t12873;
  t12906 = t11174*t11175*t12873;
  t12907 = t12905 + t12906;
  t12908 = -0.19821*t12907;
  t12909 = t12780 + t12795 + t12885 + t12892 + t12893 + t12904 + t12908;
  t13247 = t1718*t12953;
  t13248 = t12703*t716;
  t13250 = -1.*t12743*t1817*t1835;
  t13260 = t13248 + t13250;
  t13268 = t847*t13260;
  t13302 = t13247 + t13268;
  t12961 = -1.*t1718*t12953;
  t13521 = -1.*t1718*t13260;
  t13522 = t12965 + t13521;
  t12956 = t1828*t12953;
  t12960 = t1811*t12959;
  t12962 = t847*t12959;
  t12963 = t12961 + t12962;
  t12964 = -0.15121*t12963;
  t12968 = -0.28121*t1864*t12967;
  t13013 = t11373*t716*t11357*t12743;
  t13015 = -1.*t11373*t11369*t12743*t1835;
  t13016 = t13013 + t13015 + t12993 + t12997 + t12998 + t13005 + t13010;
  t12749 = t11357*t12746;
  t12754 = t11369*t12753;
  t12758 = -0.28121*t1864*t12757;
  t12759 = -0.50321*t1841*t11166*t12757;
  t12762 = 0.50321*t11174*t11175*t12757;
  t12763 = -1.*t847*t12746;
  t12767 = t12763 + t12764;
  t12769 = -0.15121*t12767;
  t12770 = t1841*t11158*t12757;
  t12771 = t11174*t11175*t12757;
  t12772 = t12770 + t12771;
  t12773 = -0.19821*t12772;
  t12774 = t12749 + t12754 + t12758 + t12759 + t12762 + t12769 + t12773;
  t13572 = t716*t12743*t1817;
  t13573 = t12703*t1835;
  t13574 = t13572 + t13573;
  t13581 = -1.*t1718*t13574;
  t13638 = t13581 + t13268;
  t13515 = t11369*t12953;
  t13516 = t11357*t13260;
  t13517 = -1.*t847*t13260;
  t13518 = t12961 + t13517;
  t13519 = -0.15121*t13518;
  t13523 = -0.28121*t1864*t13522;
  t13524 = -0.50321*t1841*t11166*t13522;
  t13525 = 0.50321*t11174*t11175*t13522;
  t13526 = t1841*t11158*t13522;
  t13527 = t11174*t11175*t13522;
  t13528 = t13526 + t13527;
  t13529 = -0.19821*t13528;
  t13530 = t13515 + t13516 + t13519 + t13523 + t13524 + t13525 + t13529;
  t11934 = t11356 + t1719;
  t14918 = -1.*t847*t13574;
  t14941 = t14918 + t13521;
  t13171 = 0.28121*t1841*t12743*t1817;
  t13174 = -0.28121*t11174*t13027;
  t13192 = -0.50321*t11175*t13191;
  t13193 = -0.50321*t11166*t13035;
  t13194 = -1.*t11175*t13191;
  t13196 = t11158*t13035;
  t13197 = t13194 + t13196;
  t13198 = -0.19821*t13197;
  t13199 = t13171 + t13174 + t13192 + t13193 + t13198;
  t13424 = -0.28121*t11174*t13302;
  t13426 = 0.50321*t11166*t11174*t13302;
  t13432 = 0.50321*t1841*t11175*t13302;
  t13509 = -1.*t11158*t11174*t13302;
  t13510 = t1841*t11175*t13302;
  t13511 = t13509 + t13510;
  t13512 = -0.19821*t13511;
  t13513 = t13424 + t13426 + t13432 + t13512;
  t13852 = -0.28121*t11174*t13638;
  t13858 = 0.50321*t11166*t11174*t13638;
  t13865 = 0.50321*t1841*t11175*t13638;
  t13896 = -1.*t11158*t11174*t13638;
  t14767 = t1841*t11175*t13638;
  t14775 = t13896 + t14767;
  t14785 = -0.19821*t14775;
  t14787 = t13852 + t13858 + t13865 + t14785;
  t12934 = -0.28121*t1841*t12703*t11373;
  t12935 = -0.28121*t11174*t12917;
  t12939 = -0.50321*t11175*t12938;
  t12940 = -0.50321*t11166*t12925;
  t12941 = -1.*t11175*t12938;
  t12942 = t11158*t12925;
  t12943 = t12941 + t12942;
  t12945 = -0.19821*t12943;
  t12947 = t12934 + t12935 + t12939 + t12940 + t12945;
  t17103 = t847*t13574;
  t17105 = t1718*t13260;
  t17106 = t17103 + t17105;
  t17107 = -1.*t1841*t17106;
  t17217 = t12969 + t17107;
  t17289 = -1.*t1841*t11373*t12743;
  t17290 = -1.*t11174*t17106;
  t17310 = t17289 + t17290;
  t17352 = t11174*t17106;
  t17353 = t12975 + t17352;
  t13031 = -0.50321*t11175*t13029;
  t13037 = -0.50321*t11158*t13035;
  t13038 = -1.*t11175*t13029;
  t13039 = -1.*t11158*t13035;
  t13040 = t13038 + t13039;
  t13141 = -0.19821*t13040;
  t13145 = t13031 + t13037 + t13141;
  t13330 = 0.50321*t11158*t11174*t13302;
  t13364 = -0.50321*t1841*t11175*t13302;
  t13380 = t11158*t11174*t13302;
  t13381 = -1.*t1841*t11175*t13302;
  t13389 = t13380 + t13381;
  t13391 = -0.19821*t13389;
  t13410 = t13330 + t13364 + t13391;
  t13642 = 0.50321*t11158*t11174*t13638;
  t13643 = -0.50321*t1841*t11175*t13638;
  t13671 = t11158*t11174*t13638;
  t13753 = -1.*t1841*t11175*t13638;
  t13763 = t13671 + t13753;
  t13787 = -0.19821*t13763;
  t13800 = t13642 + t13643 + t13787;
  t12922 = -0.50321*t11175*t12919;
  t12926 = -0.50321*t11158*t12925;
  t12927 = -1.*t11175*t12919;
  t12929 = -1.*t11158*t12925;
  t12930 = t12927 + t12929;
  t12931 = -0.19821*t12930;
  t12932 = t12922 + t12926 + t12931;
  t17224 = -0.50321*t11158*t17217;
  t17313 = -0.50321*t11175*t17310;
  t17314 = -1.*t11158*t17217;
  t17318 = -1.*t11175*t17310;
  t17331 = t17314 + t17318;
  t17333 = -0.19821*t17331;
  t17337 = t17224 + t17313 + t17333;
  t17457 = -1.*t11373*t11174*t12743;
  t17458 = t1841*t17106;
  t17459 = t17457 + t17458;
  t17945 = t11373*t716*t1828*t12743;
  t17949 = 0.28121*t11174*t12743*t1817;
  t17951 = -1.*t11373*t1811*t12743*t1835;
  t17955 = -0.15121*t12992;
  t18049 = -0.28121*t1864*t13027;
  t18073 = -0.50321*t11166*t13029;
  t18074 = -0.50321*t11175*t13035;
  t18075 = t11158*t13029;
  t18076 = -1.*t11175*t13035;
  t18077 = t18075 + t18076;
  t18085 = -0.19821*t18077;
  t18104 = t17945 + t17949 + t17951 + t17955 + t18049 + t18073 + t18074 + t18085;
  t18122 = t1811*t12953;
  t18123 = t1828*t13260;
  t18128 = -0.28121*t1864*t13302;
  t18131 = -0.50321*t1841*t11166*t13302;
  t18135 = 0.50321*t11174*t11175*t13302;
  t18137 = -0.15121*t13522;
  t18141 = t1841*t11158*t13302;
  t18143 = t11174*t11175*t13302;
  t18150 = t18141 + t18143;
  t18158 = -0.19821*t18150;
  t18162 = t18122 + t18123 + t18128 + t18131 + t18135 + t18137 + t18158;
  t18164 = t11357*t13574;
  t18165 = t11369*t13260;
  t18167 = -0.28121*t1864*t13638;
  t18169 = -0.50321*t1841*t11166*t13638;
  t18170 = 0.50321*t11174*t11175*t13638;
  t18182 = -0.15121*t14941;
  t18183 = t1841*t11158*t13638;
  t18188 = t11174*t11175*t13638;
  t18189 = t18183 + t18188;
  t18204 = -0.19821*t18189;
  t18206 = t18164 + t18165 + t18167 + t18169 + t18170 + t18182 + t18204;
  t17821 = -0.28121*t12703*t11373*t11174;
  t17822 = t1828*t12746;
  t17823 = t1811*t12753;
  t17827 = -0.15121*t12757;
  t17828 = -0.28121*t1864*t12917;
  t17829 = -0.50321*t11166*t12919;
  t17929 = -0.50321*t11175*t12925;
  t17934 = t11158*t12919;
  t17935 = -1.*t11175*t12925;
  t17940 = t17934 + t17935;
  t17941 = -0.19821*t17940;
  t17943 = t17821 + t17822 + t17823 + t17827 + t17828 + t17829 + t17929 + t17941;
  t18273 = -0.50321*t11175*t17459;
  t18274 = -0.50321*t11158*t17310;
  t18275 = -1.*t11175*t17459;
  t18276 = -1.*t11158*t17310;
  t18277 = t18275 + t18276;
  t18278 = -0.19821*t18277;
  t18339 = t18273 + t18274 + t18278;
  t18228 = -0.28121*t1841*t11373*t12743;
  t18233 = -0.28121*t11174*t17106;
  t18235 = -0.50321*t11175*t17217;
  t18245 = -0.50321*t11166*t17310;
  t18251 = -1.*t11175*t17217;
  t18258 = t11158*t17310;
  t18265 = t18251 + t18258;
  t18270 = -0.19821*t18265;
  t18272 = t18228 + t18233 + t18235 + t18245 + t18270;
  t18357 = t12703*t11373*t716*t1718;
  t18359 = t847*t12703*t11373*t1835;
  t18360 = t18357 + t18359;
  t18362 = -0.28121*t1864*t18360;
  t18363 = -0.50321*t1841*t11166*t18360;
  t18366 = 0.50321*t11174*t11175*t18360;
  t18367 = -0.15121*t12715;
  t18369 = t1841*t11158*t18360;
  t18372 = t11174*t11175*t18360;
  t18375 = t18369 + t18372;
  t18379 = -0.19821*t18375;
  t18393 = -1.*t847*t12703*t11373*t716;
  t18394 = t12703*t11373*t1718*t1835;
  t18396 = t18393 + t18394;
  t18392 = -1.*t12703*t11174*t1817;
  t18397 = t1841*t18396;
  t18399 = t18392 + t18397;
  t18414 = -1.*t1841*t12703*t1817;
  t18415 = -1.*t11174*t18396;
  t18416 = t18414 + t18415;
  t18435 = -1.*t1841*t18396;
  t18436 = t12719 + t18435;
  t18462 = t847*t12703*t716*t1817;
  t18463 = -1.*t12703*t1718*t1817*t1835;
  t18464 = t18462 + t18463;
  t18469 = t1841*t18464;
  t18471 = t12911 + t18469;
  t18476 = -1.*t11174*t18464;
  t18477 = t12923 + t18476;
  t18354 = t12703*t11373*t716*t1811;
  t18355 = t12703*t11373*t1828*t1835;
  t18383 = t18354 + t18355 + t18362 + t18363 + t18366 + t18367 + t18379;
  t18498 = t1718*t12746;
  t18499 = t716*t12743;
  t18500 = t12703*t1817*t1835;
  t18501 = t18499 + t18500;
  t18502 = t847*t18501;
  t18503 = t18498 + t18502;
  t18597 = -1.*t1718*t18501;
  t18600 = t12913 + t18597;
  t18388 = -1.*t12703*t11373*t716*t11357;
  t18389 = t12703*t11373*t11369*t1835;
  t18390 = t18388 + t18389 + t18362 + t18363 + t18366 + t18367 + t18379;
  t18624 = -1.*t1718*t12778;
  t18625 = t18624 + t18502;
  t18562 = t11369*t12746;
  t18563 = t11357*t18501;
  t18566 = -1.*t847*t18501;
  t18591 = t12755 + t18566;
  t18596 = -0.15121*t18591;
  t18601 = -0.28121*t1864*t18600;
  t18602 = -0.50321*t1841*t11166*t18600;
  t18603 = 0.50321*t11174*t11175*t18600;
  t18604 = t1841*t11158*t18600;
  t18605 = t11174*t11175*t18600;
  t18614 = t18604 + t18605;
  t18615 = -0.19821*t18614;
  t18616 = t18562 + t18563 + t18596 + t18601 + t18602 + t18603 + t18615;
  t18653 = -1.*t847*t12778;
  t18657 = t18653 + t18597;
  t18433 = -0.28121*t1841*t12703*t1817;
  t18434 = -0.28121*t11174*t18396;
  t18437 = -0.50321*t11175*t18436;
  t18438 = -0.50321*t11166*t18416;
  t18440 = -1.*t11175*t18436;
  t18441 = t11158*t18416;
  t18444 = t18440 + t18441;
  t18446 = -0.19821*t18444;
  t18448 = t18433 + t18434 + t18437 + t18438 + t18446;
  t18527 = -0.28121*t11174*t18503;
  t18528 = 0.50321*t11166*t11174*t18503;
  t18535 = 0.50321*t1841*t11175*t18503;
  t18545 = -1.*t11158*t11174*t18503;
  t18549 = t1841*t11175*t18503;
  t18550 = t18545 + t18549;
  t18551 = -0.19821*t18550;
  t18556 = t18527 + t18528 + t18535 + t18551;
  t18636 = -0.28121*t11174*t18625;
  t18639 = 0.50321*t11166*t11174*t18625;
  t18640 = 0.50321*t1841*t11175*t18625;
  t18641 = -1.*t11158*t11174*t18625;
  t18642 = t1841*t11175*t18625;
  t18643 = t18641 + t18642;
  t18644 = -0.19821*t18643;
  t18645 = t18636 + t18639 + t18640 + t18644;
  t18675 = t1718*t18501;
  t18676 = t12901 + t18675;
  t18677 = -1.*t1841*t18676;
  t18679 = t12911 + t18677;
  t18683 = t1841*t12703*t11373;
  t18684 = -1.*t11174*t18676;
  t18685 = t18683 + t18684;
  t18698 = t11174*t18676;
  t18699 = t12923 + t18698;
  t18406 = -0.50321*t11175*t18399;
  t18421 = -0.50321*t11158*t18416;
  t18423 = -1.*t11175*t18399;
  t18424 = -1.*t11158*t18416;
  t18427 = t18423 + t18424;
  t18428 = -0.19821*t18427;
  t18431 = t18406 + t18421 + t18428;
  t18504 = 0.50321*t11158*t11174*t18503;
  t18505 = -0.50321*t1841*t11175*t18503;
  t18506 = t11158*t11174*t18503;
  t18509 = -1.*t1841*t11175*t18503;
  t18513 = t18506 + t18509;
  t18515 = -0.19821*t18513;
  t18516 = t18504 + t18505 + t18515;
  t18626 = 0.50321*t11158*t11174*t18625;
  t18627 = -0.50321*t1841*t11175*t18625;
  t18628 = t11158*t11174*t18625;
  t18629 = -1.*t1841*t11175*t18625;
  t18631 = t18628 + t18629;
  t18633 = -0.19821*t18631;
  t18634 = t18626 + t18627 + t18633;
  t18681 = -0.50321*t11158*t18679;
  t18689 = -0.50321*t11175*t18685;
  t18690 = -1.*t11158*t18679;
  t18691 = -1.*t11175*t18685;
  t18692 = t18690 + t18691;
  t18693 = -0.19821*t18692;
  t18694 = t18681 + t18689 + t18693;
  t18713 = t1841*t18676;
  t18714 = t12936 + t18713;
  p_output1[0]=(t11374 + t11375 + t11376 + t11394 + t11407 - 0.50321*t11166*t11414 - 0.50321*t11175*t11419 - 0.19821*(t11158*t11414 - 1.*t11175*t11419))*var2[4] + t11324*var2[5] + t11371*var2[15] + t11555*var2[16] + t11519*var2[17];
  p_output1[1]=t11826 + t11858 + t11324*var2[4] + (t11374 + t11376 + t11394 + t11407 + t11866 + t11867 + t11900)*var2[5] + t11901*var2[15];
  p_output1[2]=t11826 + t11858 + t11371*var2[4] + t11901*var2[5] + (t11394 + t11407 + t11865 + t11866 + t11867 + t11900 + t11373*t11934*t716)*var2[15];
  p_output1[3]=t11555*var2[4] + t11849*var2[5] + t11849*var2[15] + (t11375 - 0.50321*t11166*t12030 - 0.50321*t11175*t12232 - 0.19821*(t11158*t12030 - 1.*t11175*t12232) - 0.28121*t12021*t1841)*var2[16] + t12220*var2[17];
  p_output1[4]=t11519*var2[4] + t11739*var2[5] + t11739*var2[15] + t12220*var2[16] + (0.50321*t11175*t12034 - 0.50321*t11158*t12264 - 0.19821*(t11175*t12034 - 1.*t11158*t12264))*var2[17];
  p_output1[5]=1.;
  p_output1[6]=0.28121*t11174*t11373 - 0.50321*t11166*t11458 - 0.50321*t11175*t11492 - 0.19821*(t11158*t11458 - 1.*t11175*t11492) + t1811*t1817*t1835 - 0.28121*t11456*t1864 - 1.*t1817*t1828*t716 - 0.15121*t9987;
  p_output1[7]=t12379 + t12400 + t12401 + t12429 + t12468 - 1.*t11373*t1828*t1835 - 1.*t11373*t1811*t716;
  p_output1[8]=t12379 + t12400 + t12401 + t12429 + t12468 - 1.*t11369*t11373*t1835 + t11357*t11373*t716;
  p_output1[9]=-0.28121*t11174*t12021 - 0.50321*t11175*t12030 - 0.50321*t11166*t12034 - 0.19821*(-1.*t11175*t12030 + t11158*t12034) + 0.28121*t1817*t1841;
  p_output1[10]=-0.50321*t11158*t12034 - 0.50321*t11175*t12264 - 0.19821*(-1.*t11158*t12034 - 1.*t11175*t12264);
  p_output1[11]=(t12949 + t12956 + t12960 + t12964 + t12968 - 0.50321*t11166*t12973 - 0.50321*t11175*t12977 - 0.19821*(t11158*t12973 - 1.*t11175*t12977))*var2[3] + t12736*var2[4] + t12909*var2[5] + t12774*var2[15] + t12947*var2[16] + t12932*var2[17];
  p_output1[12]=t12736*var2[3] + (t12949 - 0.50321*t11166*t13220 - 0.50321*t11175*t13223 - 0.19821*(t11158*t13220 - 1.*t11175*t13223) + t12743*t1811*t1817*t1835 - 0.28121*t13217*t1864 - 1.*t12743*t1817*t1828*t716 - 0.15121*(t12743*t1718*t1817*t716 + t12743*t1817*t1835*t847))*var2[4] + t13011*var2[5] + t13016*var2[15] + t13199*var2[16] + t13145*var2[17];
  p_output1[13]=t12909*var2[3] + t13011*var2[4] + (t12956 + t12960 + t12964 + 0.50321*t11174*t11175*t12967 + t12968 - 0.50321*t11166*t12967*t1841 - 0.19821*(t11174*t11175*t12967 + t11158*t12967*t1841))*var2[5] + t13530*var2[15] + t13513*var2[16] + t13410*var2[17];
  p_output1[14]=t12774*var2[3] + t13016*var2[4] + t13530*var2[5] + (t13516 + t11934*t13574 + 0.50321*t11174*t11175*t14941 - 0.15121*(t13517 + t13574*t1718) - 0.50321*t11166*t14941*t1841 - 0.19821*(t11174*t11175*t14941 + t11158*t14941*t1841) - 0.28121*t14941*t1864)*var2[15] + t14787*var2[16] + t13800*var2[17];
  p_output1[15]=t12947*var2[3] + t13199*var2[4] + t13513*var2[5] + t14787*var2[15] + (t12949 - 0.50321*t11166*t17217 - 0.50321*t11175*t17353 - 0.19821*(t11158*t17217 - 1.*t11175*t17353) - 0.28121*t17106*t1841)*var2[16] + t17337*var2[17];
  p_output1[16]=t12932*var2[3] + t13145*var2[4] + t13410*var2[5] + t13800*var2[15] + t17337*var2[16] + (0.50321*t11175*t17310 - 0.50321*t11158*t17459 - 0.19821*(t11175*t17310 - 1.*t11158*t17459))*var2[17];
  p_output1[17]=1.;
  p_output1[18]=t17943;
  p_output1[19]=t18104;
  p_output1[20]=t18162;
  p_output1[21]=t18206;
  p_output1[22]=t18272;
  p_output1[23]=t18339;
  p_output1[24]=t17943*var2[3] + t18104*var2[4] + t18162*var2[5] + t18206*var2[15] + t18272*var2[16] + t18339*var2[17];
  p_output1[25]=t18104*var2[3] + (t17821 - 1.*t12703*t1811*t1817*t1835 - 0.50321*t11166*t18471 - 0.50321*t11175*t18477 - 0.19821*(t11158*t18471 - 1.*t11175*t18477) - 0.28121*t18464*t1864 + t12703*t1817*t1828*t716 - 0.15121*(-1.*t12703*t1718*t1817*t716 - 1.*t12703*t1817*t1835*t847))*var2[4] + t18383*var2[5] + t18390*var2[15] + t18448*var2[16] + t18431*var2[17];
  p_output1[26]=t18162*var2[3] + t18383*var2[4] + (0.50321*t11174*t11175*t12917 + t17822 + t17823 + t17827 + t17828 - 0.50321*t11166*t12917*t1841 - 0.19821*(t11174*t11175*t12917 + t11158*t12917*t1841))*var2[5] + t18616*var2[15] + t18556*var2[16] + t18516*var2[17];
  p_output1[27]=t18206*var2[3] + t18390*var2[4] + t18616*var2[5] + (t11934*t12778 + t18563 - 0.15121*(t12860 + t18566) + 0.50321*t11174*t11175*t18657 - 0.50321*t11166*t1841*t18657 - 0.28121*t1864*t18657 - 0.19821*(t11174*t11175*t18657 + t11158*t1841*t18657))*var2[15] + t18645*var2[16] + t18634*var2[17];
  p_output1[28]=t18272*var2[3] + t18448*var2[4] + t18556*var2[5] + t18645*var2[15] + (t17821 - 0.28121*t1841*t18676 - 0.50321*t11166*t18679 - 0.50321*t11175*t18699 - 0.19821*(t11158*t18679 - 1.*t11175*t18699))*var2[16] + t18694*var2[17];
  p_output1[29]=t18339*var2[3] + t18431*var2[4] + t18516*var2[5] + t18634*var2[15] + t18694*var2[16] + (0.50321*t11175*t18685 - 0.50321*t11158*t18714 - 0.19821*(t11175*t18685 - 1.*t11158*t18714))*var2[17];
  p_output1[30]=1.;
  p_output1[31]=-0.28121*t11174*t11373*t12743 - 0.15121*t13638 + t17313 - 0.50321*t11166*t17459 - 0.19821*(t17318 + t11158*t17459) + t13260*t1811 + t13574*t1828 - 0.28121*t17106*t1864;
  p_output1[32]=-0.28121*t11174*t12703*t1817 + t11373*t12703*t1811*t1835 - 0.15121*t18360 - 0.50321*t11166*t18399 - 0.50321*t11175*t18416 - 0.19821*(t11158*t18399 - 1.*t11175*t18416) - 0.28121*t18396*t1864 - 1.*t11373*t12703*t1828*t716;
  p_output1[33]=t12746*t1811 + t1828*t18501 + 0.50321*t11174*t11175*t18503 - 0.50321*t11166*t1841*t18503 - 0.19821*(t11174*t11175*t18503 + t11158*t1841*t18503) - 0.15121*t18600 - 0.28121*t18503*t1864;
  p_output1[34]=t11357*t12778 + t11369*t18501 + 0.50321*t11174*t11175*t18625 - 0.50321*t11166*t1841*t18625 - 0.19821*(t11174*t11175*t18625 + t11158*t1841*t18625) - 0.28121*t18625*t1864 - 0.15121*t18657;
  p_output1[35]=0.28121*t11373*t12703*t1841 - 0.28121*t11174*t18676 - 0.50321*t11175*t18679 - 0.50321*t11166*t18685 - 0.19821*(-1.*t11175*t18679 + t11158*t18685);
  p_output1[36]=-0.50321*t11158*t18685 - 0.50321*t11175*t18714 - 0.19821*(-1.*t11158*t18685 - 1.*t11175*t18714);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 37, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_impact_velocity_RrFoot_DiagonalStance.hh"

namespace DiagonalStance
{

void J_impact_velocity_RrFoot_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
