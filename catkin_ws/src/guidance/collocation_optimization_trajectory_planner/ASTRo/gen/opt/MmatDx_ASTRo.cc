/*
 * Automatically Generated from Mathematica.
 * Sun 12 Jun 2022 14:35:08 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t207;
  double t27111;
  double t22556;
  double t27187;
  double t27244;
  double t27245;
  double t27257;
  double t8663;
  double t8739;
  double t8867;
  double t9439;
  double t9467;
  double t27205;
  double t27219;
  double t27230;
  double t27234;
  double t27272;
  double t27324;
  double t27332;
  double t27333;
  double t27273;
  double t27358;
  double t27359;
  double t27362;
  double t27363;
  double t27366;
  double t23231;
  double t27188;
  double t27200;
  double t27394;
  double t27395;
  double t27386;
  double t27387;
  double t27390;
  double t27378;
  double t27379;
  double t27382;
  double t27321;
  double t27337;
  double t27338;
  double t27342;
  double t27343;
  double t27347;
  double t27439;
  double t27440;
  double t27441;
  double t27442;
  double t27443;
  double t27444;
  double t27447;
  double t27457;
  double t27459;
  double t27463;
  double t27464;
  double t27465;
  double t27466;
  double t27467;
  double t27458;
  double t27460;
  double t27461;
  double t27470;
  double t27471;
  double t27472;
  double t27474;
  double t27475;
  double t27462;
  double t27468;
  double t27469;
  double t27451;
  double t27452;
  double t27453;
  double t27454;
  double t27455;
  double t27479;
  double t27480;
  double t27481;
  double t27505;
  double t27506;
  double t27507;
  double t27508;
  double t27509;
  double t27510;
  double t27530;
  double t27541;
  double t27539;
  double t27542;
  double t27547;
  double t27548;
  double t27549;
  double t27532;
  double t27533;
  double t27534;
  double t27535;
  double t27536;
  double t27546;
  double t27551;
  double t27561;
  double t27562;
  double t27563;
  double t27572;
  double t27573;
  double t27574;
  double t27575;
  double t27576;
  double t27540;
  double t27543;
  double t27544;
  double t27590;
  double t27591;
  double t27586;
  double t27587;
  double t27588;
  double t27582;
  double t27583;
  double t27584;
  double t27560;
  double t27564;
  double t27565;
  double t27566;
  double t27567;
  double t27568;
  double t27621;
  double t27632;
  double t27630;
  double t27633;
  double t27638;
  double t27639;
  double t27640;
  double t27623;
  double t27624;
  double t27625;
  double t27626;
  double t27627;
  double t27637;
  double t27631;
  double t27634;
  double t27635;
  double t27642;
  double t27663;
  double t27415;
  double t27418;
  double t27419;
  double t27422;
  double t27423;
  double t27424;
  double t27426;
  double t27427;
  double t27428;
  double t27429;
  double t27430;
  double t27431;
  double t27218;
  double t27261;
  double t27281;
  double t27284;
  double t27292;
  double t27293;
  double t27488;
  double t27489;
  double t27490;
  double t27491;
  double t27492;
  double t27493;
  double t27495;
  double t27496;
  double t27497;
  double t27498;
  double t27499;
  double t27500;
  double t27521;
  double t27522;
  double t27523;
  double t27524;
  double t27525;
  double t27526;
  double t27601;
  double t27602;
  double t27603;
  double t27604;
  double t27605;
  double t27606;
  double t27608;
  double t27609;
  double t27610;
  double t27611;
  double t27612;
  double t27613;
  double t27545;
  double t27550;
  double t27552;
  double t27553;
  double t27554;
  double t27555;
  double t27636;
  double t27641;
  double t27643;
  double t27644;
  double t27645;
  double t27646;
  double t27651;
  double t27652;
  double t27653;
  double t27654;
  double t27655;
  double t27656;
  double t27657;
  double t27658;
  double t27659;
  double t27725;
  double t27726;
  double t27727;
  double t27728;
  double t27729;
  double t27730;
  double t27715;
  double t27716;
  double t27717;
  double t27748;
  double t27749;
  double t27750;
  double t27751;
  double t27752;
  double t27733;
  double t27734;
  double t27735;
  double t27736;
  double t27737;
  double t27738;
  double t27768;
  double t27769;
  double t27764;
  double t27765;
  double t27766;
  double t27781;
  double t27782;
  double t27783;
  double t27787;
  double t27793;
  double t27794;
  double t27795;
  double t27797;
  double t27798;
  double t27799;
  double t27800;
  double t27391;
  double t27788;
  double t27810;
  double t27811;
  double t27813;
  double t27814;
  double t27406;
  double t27824;
  double t27825;
  double t27826;
  double t27830;
  double t27836;
  double t27837;
  double t27838;
  double t27840;
  double t27841;
  double t27842;
  double t27843;
  double t27473;
  double t27831;
  double t27853;
  double t27854;
  double t27856;
  double t27857;
  double t27483;
  double t27867;
  double t27868;
  double t27869;
  double t27870;
  double t27871;
  double t27876;
  double t27877;
  double t27878;
  double t27880;
  double t27881;
  double t27882;
  double t27883;
  double t27589;
  double t27893;
  double t27894;
  double t27896;
  double t27897;
  double t27596;
  double t27789;
  double t27784;
  double t27785;
  double t27676;
  double t27677;
  double t27678;
  double t27832;
  double t27827;
  double t27828;
  double t27681;
  double t27682;
  double t27683;
  double t27873;
  double t27686;
  double t27687;
  double t27688;
  double t27966;
  double t27967;
  double t27968;
  double t27969;
  double t27970;
  double t27972;
  double t27720;
  double t27721;
  double t27722;
  double t27978;
  double t27979;
  double t27980;
  double t27982;
  double t27983;
  double t27984;
  double t27985;
  double t28003;
  double t28004;
  double t28006;
  double t28007;
  double t27767;
  double t27774;
  double t28027;
  double t28030;
  double t28042;
  double t28043;
  double t28044;
  double t28053;
  double t28054;
  double t28055;
  double t28064;
  double t28065;
  double t28066;
  double t28071;
  double t28072;
  double t28073;
  double t28075;
  double t28076;
  double t28077;
  double t28081;
  double t28082;
  double t28083;
  double t28085;
  double t28086;
  double t28087;
  double t28091;
  double t28092;
  double t28093;
  double t28095;
  double t28096;
  double t28097;
  double t28101;
  double t28102;
  double t28103;
  double t28105;
  double t28106;
  double t28107;
  double t28111;
  double t28112;
  double t28113;
  double t28115;
  double t28116;
  double t28117;
  double t28121;
  double t28122;
  double t28123;
  double t28125;
  double t28126;
  double t28127;
  double t28131;
  double t28132;
  double t28133;
  double t28135;
  double t28136;
  double t28137;
  double t28141;
  double t28142;
  double t28143;
  double t28145;
  double t28146;
  double t28147;
  double t28151;
  double t28152;
  double t28153;
  double t28155;
  double t28156;
  double t28157;
  double t28161;
  double t28162;
  double t28163;
  double t28165;
  double t28166;
  double t28167;
  double t28171;
  double t28172;
  double t28173;
  double t28175;
  double t28176;
  double t28177;
  double t28181;
  double t28182;
  double t28183;
  double t28185;
  double t28186;
  double t28187;
  double t28195;
  double t28196;
  double t28197;
  double t28202;
  double t28203;
  double t28204;
  double t28206;
  double t28207;
  double t28208;
  double t28212;
  double t28213;
  double t28214;
  double t28216;
  double t28217;
  double t28218;
  double t28222;
  double t28223;
  double t28224;
  double t28226;
  double t28227;
  double t28228;
  double t28232;
  double t28233;
  double t28234;
  double t28236;
  double t28237;
  double t28238;
  double t28355;
  double t28356;
  double t28357;
  double t28351;
  double t28352;
  double t28353;
  double t28367;
  double t28368;
  double t28369;
  double t28371;
  double t28372;
  double t28373;
  double t28403;
  double t28404;
  double t28405;
  double t28407;
  double t28408;
  double t28409;
  double t28445;
  double t28446;
  double t28447;
  double t28441;
  double t28442;
  double t28443;
  double t28457;
  double t28458;
  double t28459;
  double t28461;
  double t28462;
  double t28463;
  double t28493;
  double t28494;
  double t28495;
  double t28497;
  double t28498;
  double t28499;
  double t28531;
  double t28535;
  double t28536;
  double t28532;
  double t28533;
  double t28546;
  double t28547;
  double t28548;
  double t28550;
  double t28551;
  double t28552;
  double t28582;
  double t28583;
  double t28584;
  double t28586;
  double t28587;
  double t28588;
  double t28620;
  double t28624;
  double t28625;
  double t28621;
  double t28622;
  double t28635;
  double t28636;
  double t28637;
  double t28639;
  double t28640;
  double t28641;
  double t28671;
  double t28672;
  double t28673;
  double t28675;
  double t28676;
  double t28677;
  double t27666;
  double t28358;
  double t28361;
  double t28444;
  double t28452;
  double t28534;
  double t28541;
  double t28370;
  double t28377;
  double t28393;
  double t28397;
  double t28383;
  double t28387;
  double t28406;
  double t28414;
  double t28801;
  double t28802;
  double t28803;
  double t28805;
  double t28806;
  double t28807;
  double t28420;
  double t28425;
  double t28431;
  double t28435;
  double t28460;
  double t28467;
  double t28483;
  double t28487;
  double t28473;
  double t28477;
  double t28496;
  double t28504;
  double t28867;
  double t28868;
  double t28869;
  double t28871;
  double t28872;
  double t28873;
  double t28510;
  double t28515;
  double t28521;
  double t28525;
  double t28549;
  double t28556;
  double t28572;
  double t28576;
  double t28562;
  double t28566;
  double t28585;
  double t28593;
  double t28933;
  double t28934;
  double t28935;
  double t28937;
  double t28938;
  double t28939;
  double t28599;
  double t28604;
  double t28610;
  double t28614;
  double t28623;
  double t28630;
  double t28638;
  double t28645;
  double t28661;
  double t28665;
  double t28651;
  double t28655;
  double t28674;
  double t28682;
  double t29023;
  double t29024;
  double t29025;
  double t29019;
  double t29020;
  double t29021;
  double t28688;
  double t28693;
  double t28699;
  double t28703;
  double t5035;
  double t20676;
  double t22466;
  double t28285;
  double t28286;
  double t28287;
  double t27304;
  double t27312;
  double t27313;
  double t28289;
  double t28290;
  double t28291;
  double t27367;
  double t27370;
  double t27371;
  double t27374;
  double t27375;
  double t28253;
  double t28254;
  double t28255;
  double t27398;
  double t27399;
  double t27402;
  double t27403;
  double t27407;
  double t27410;
  double t27411;
  double t28277;
  double t28278;
  double t28279;
  double t28281;
  double t28282;
  double t28283;
  double t27433;
  double t27434;
  double t27435;
  double t27445;
  double t27446;
  double t27448;
  double t27449;
  double t27450;
  double t28261;
  double t28262;
  double t28263;
  double t27476;
  double t27477;
  double t27478;
  double t27482;
  double t27484;
  double t27485;
  double t27486;
  double t28293;
  double t28294;
  double t28295;
  double t28297;
  double t28298;
  double t28299;
  double t27502;
  double t27503;
  double t27504;
  double t28301;
  double t28302;
  double t28303;
  double t27514;
  double t27515;
  double t27516;
  double t27518;
  double t27519;
  double t27520;
  double t28305;
  double t28306;
  double t28307;
  double t27531;
  double t27537;
  double t27538;
  double t28317;
  double t28318;
  double t28319;
  double t27557;
  double t27558;
  double t27559;
  double t28321;
  double t28322;
  double t28323;
  double t27577;
  double t27578;
  double t27579;
  double t27580;
  double t27581;
  double t28269;
  double t28270;
  double t28271;
  double t27592;
  double t27593;
  double t27594;
  double t27595;
  double t27597;
  double t27598;
  double t27599;
  double t28309;
  double t28310;
  double t28311;
  double t28313;
  double t28314;
  double t28315;
  double t27615;
  double t27616;
  double t27617;
  double t28325;
  double t28326;
  double t28327;
  double t27753;
  double t27754;
  double t27755;
  double t27756;
  double t27757;
  double t28333;
  double t28334;
  double t28335;
  double t28337;
  double t28338;
  double t28339;
  double t27770;
  double t27771;
  double t27772;
  double t27773;
  double t27775;
  double t27776;
  double t27777;
  double t27760;
  double t27761;
  double t27762;
  double t28341;
  double t28342;
  double t28343;
  double t27622;
  double t27628;
  double t27629;
  double t27648;
  double t27649;
  double t27650;
  double t28345;
  double t28346;
  double t28347;
  double t27786;
  double t27790;
  double t27791;
  double t27796;
  double t27801;
  double t27802;
  double t27803;
  double t27804;
  double t27805;
  double t27806;
  double t27807;
  double t27808;
  double t27812;
  double t27815;
  double t27816;
  double t27817;
  double t27818;
  double t27819;
  double t27820;
  double t27821;
  double t27822;
  double t27907;
  double t27908;
  double t27909;
  double t28257;
  double t28258;
  double t28259;
  double t27829;
  double t27833;
  double t27834;
  double t27839;
  double t27844;
  double t27845;
  double t27846;
  double t27847;
  double t27848;
  double t27849;
  double t27850;
  double t27851;
  double t27855;
  double t27858;
  double t27859;
  double t27860;
  double t27861;
  double t27862;
  double t27863;
  double t27864;
  double t27865;
  double t27911;
  double t27912;
  double t27913;
  double t28265;
  double t28266;
  double t28267;
  double t27872;
  double t27874;
  double t27879;
  double t27884;
  double t27885;
  double t27886;
  double t27887;
  double t27888;
  double t27889;
  double t27890;
  double t27891;
  double t27895;
  double t27898;
  double t27899;
  double t27900;
  double t27901;
  double t27902;
  double t27903;
  double t27904;
  double t27905;
  double t27915;
  double t27916;
  double t28273;
  double t28274;
  double t28275;
  double t27918;
  double t27919;
  double t27920;
  double t27922;
  double t27923;
  double t27924;
  double t27926;
  double t27927;
  double t27928;
  double t27930;
  double t27931;
  double t27932;
  double t27934;
  double t27935;
  double t27936;
  double t27938;
  double t27939;
  double t27940;
  double t27942;
  double t27943;
  double t27944;
  double t27946;
  double t27947;
  double t27948;
  double t27950;
  double t27951;
  double t27952;
  double t27954;
  double t27955;
  double t27956;
  double t27958;
  double t27959;
  double t27960;
  double t27962;
  double t27963;
  double t27964;
  double t27971;
  double t27973;
  double t27975;
  double t27976;
  double t28329;
  double t28330;
  double t28331;
  double t27981;
  double t27986;
  double t27987;
  double t27993;
  double t27994;
  double t27995;
  double t27996;
  double t27997;
  double t27998;
  double t27999;
  double t28000;
  double t28001;
  double t27989;
  double t27990;
  double t27991;
  double t28015;
  double t28016;
  double t28017;
  double t28018;
  double t28019;
  double t28020;
  double t28021;
  double t28022;
  double t28023;
  double t28005;
  double t28008;
  double t28009;
  double t28011;
  double t28012;
  double t28013;
  double t28244;
  double t28245;
  double t28246;
  double t28247;
  double t28248;
  double t28249;
  double t28250;
  double t28251;
  double t28252;
  double t28256;
  double t28260;
  double t28264;
  double t28268;
  double t28272;
  double t28276;
  double t28280;
  double t28284;
  double t28288;
  double t28292;
  double t28296;
  double t28300;
  double t28304;
  double t28308;
  double t28312;
  double t28316;
  double t28320;
  double t28324;
  double t28328;
  double t28332;
  double t28336;
  double t28340;
  double t28344;
  double t28348;
  double t28349;
  double t28029;
  double t28031;
  double t28032;
  double t28034;
  double t28035;
  double t28036;
  double t28038;
  double t28039;
  double t28040;
  double t28045;
  double t28046;
  double t28047;
  double t28049;
  double t28050;
  double t28051;
  double t28056;
  double t28057;
  double t28058;
  double t28060;
  double t28061;
  double t28062;
  double t28067;
  double t28068;
  double t28069;
  double t28074;
  double t28078;
  double t28079;
  double t28084;
  double t28088;
  double t28089;
  double t28094;
  double t28098;
  double t28099;
  double t28104;
  double t28108;
  double t28109;
  double t28114;
  double t28118;
  double t28119;
  double t28124;
  double t28128;
  double t28129;
  double t28134;
  double t28138;
  double t28139;
  double t28144;
  double t28148;
  double t28149;
  double t28154;
  double t28158;
  double t28159;
  double t28164;
  double t28168;
  double t28169;
  double t28174;
  double t28178;
  double t28179;
  double t28184;
  double t28188;
  double t28189;
  double t28191;
  double t28192;
  double t28193;
  double t28198;
  double t28199;
  double t28200;
  double t28205;
  double t28209;
  double t28210;
  double t28215;
  double t28219;
  double t28220;
  double t28225;
  double t28229;
  double t28230;
  double t28235;
  double t28239;
  double t28240;
  double t28354;
  double t28359;
  double t28360;
  double t28362;
  double t28363;
  double t28364;
  double t28365;
  double t28374;
  double t28375;
  double t28376;
  double t28378;
  double t28379;
  double t28380;
  double t28381;
  double t28384;
  double t28385;
  double t28386;
  double t28388;
  double t28389;
  double t28390;
  double t28391;
  double t28394;
  double t28395;
  double t28396;
  double t28398;
  double t28399;
  double t28400;
  double t28401;
  double t28410;
  double t28411;
  double t28412;
  double t28413;
  double t28415;
  double t28416;
  double t28417;
  double t28418;
  double t28421;
  double t28422;
  double t28423;
  double t28424;
  double t28426;
  double t28427;
  double t28428;
  double t28429;
  double t28432;
  double t28433;
  double t28434;
  double t28436;
  double t28437;
  double t28438;
  double t28439;
  double t28448;
  double t28449;
  double t28450;
  double t28451;
  double t28453;
  double t28454;
  double t28455;
  double t28464;
  double t28465;
  double t28466;
  double t28468;
  double t28469;
  double t28470;
  double t28471;
  double t28474;
  double t28475;
  double t28476;
  double t28478;
  double t28479;
  double t28480;
  double t28481;
  double t28484;
  double t28485;
  double t28486;
  double t28488;
  double t28489;
  double t28490;
  double t28491;
  double t28500;
  double t28501;
  double t28502;
  double t28503;
  double t28505;
  double t28506;
  double t28507;
  double t28508;
  double t28511;
  double t28512;
  double t28513;
  double t28514;
  double t28516;
  double t28517;
  double t28518;
  double t28519;
  double t28522;
  double t28523;
  double t28524;
  double t28526;
  double t28527;
  double t28528;
  double t28529;
  double t28537;
  double t28538;
  double t28539;
  double t28540;
  double t28542;
  double t28543;
  double t28544;
  double t28553;
  double t28554;
  double t28555;
  double t28557;
  double t28558;
  double t28559;
  double t28560;
  double t28563;
  double t28564;
  double t28565;
  double t28567;
  double t28568;
  double t28569;
  double t28570;
  double t28573;
  double t28574;
  double t28575;
  double t28577;
  double t28578;
  double t28579;
  double t28580;
  double t28589;
  double t28590;
  double t28591;
  double t28592;
  double t28594;
  double t28595;
  double t28596;
  double t28597;
  double t28600;
  double t28601;
  double t28602;
  double t28603;
  double t28605;
  double t28606;
  double t28607;
  double t28608;
  double t28611;
  double t28612;
  double t28613;
  double t28615;
  double t28616;
  double t28617;
  double t28618;
  double t28626;
  double t28627;
  double t28628;
  double t28629;
  double t28631;
  double t28632;
  double t28633;
  double t28642;
  double t28643;
  double t28644;
  double t28646;
  double t28647;
  double t28648;
  double t28649;
  double t28652;
  double t28653;
  double t28654;
  double t28656;
  double t28657;
  double t28658;
  double t28659;
  double t28662;
  double t28663;
  double t28664;
  double t28666;
  double t28667;
  double t28668;
  double t28669;
  double t28678;
  double t28679;
  double t28680;
  double t28681;
  double t28683;
  double t28684;
  double t28685;
  double t28686;
  double t28689;
  double t28690;
  double t28691;
  double t28692;
  double t28694;
  double t28695;
  double t28696;
  double t28697;
  double t28700;
  double t28701;
  double t28702;
  double t28704;
  double t28705;
  double t28706;
  double t28707;
  double t28711;
  double t28712;
  double t28713;
  double t28714;
  double t28716;
  double t28717;
  double t28718;
  double t28719;
  double t28721;
  double t28722;
  double t28723;
  double t28724;
  double t28726;
  double t28727;
  double t28728;
  double t28729;
  double t28731;
  double t28732;
  double t28733;
  double t28734;
  double t28736;
  double t28737;
  double t28738;
  double t28739;
  double t28741;
  double t28742;
  double t28743;
  double t28744;
  double t28745;
  double t28746;
  double t28747;
  double t28748;
  double t28749;
  double t28751;
  double t28752;
  double t28753;
  double t28754;
  double t28755;
  double t28756;
  double t28757;
  double t28758;
  double t28759;
  double t28761;
  double t28762;
  double t28763;
  double t28764;
  double t28765;
  double t28766;
  double t28767;
  double t28768;
  double t28769;
  double t28771;
  double t28772;
  double t28773;
  double t28774;
  double t28775;
  double t28776;
  double t28777;
  double t28778;
  double t28779;
  double t28781;
  double t28782;
  double t28783;
  double t28784;
  double t28785;
  double t28786;
  double t28787;
  double t28788;
  double t28789;
  double t28791;
  double t28792;
  double t28793;
  double t28794;
  double t28795;
  double t28796;
  double t28797;
  double t28798;
  double t28799;
  double t28804;
  double t28808;
  double t28809;
  double t28810;
  double t28811;
  double t28812;
  double t28813;
  double t28814;
  double t28815;
  double t28817;
  double t28818;
  double t28819;
  double t28820;
  double t28821;
  double t28822;
  double t28823;
  double t28824;
  double t28825;
  double t28827;
  double t28828;
  double t28829;
  double t28830;
  double t28831;
  double t28832;
  double t28833;
  double t28834;
  double t28835;
  double t28837;
  double t28838;
  double t28839;
  double t28840;
  double t28841;
  double t28842;
  double t28843;
  double t28844;
  double t28845;
  double t28847;
  double t28848;
  double t28849;
  double t28850;
  double t28851;
  double t28852;
  double t28853;
  double t28854;
  double t28855;
  double t28857;
  double t28858;
  double t28859;
  double t28860;
  double t28861;
  double t28862;
  double t28863;
  double t28864;
  double t28865;
  double t28870;
  double t28874;
  double t28875;
  double t28876;
  double t28877;
  double t28878;
  double t28879;
  double t28880;
  double t28881;
  double t28883;
  double t28884;
  double t28885;
  double t28886;
  double t28887;
  double t28888;
  double t28889;
  double t28890;
  double t28891;
  double t28893;
  double t28894;
  double t28895;
  double t28896;
  double t28897;
  double t28898;
  double t28899;
  double t28900;
  double t28901;
  double t28903;
  double t28904;
  double t28905;
  double t28906;
  double t28907;
  double t28908;
  double t28909;
  double t28910;
  double t28911;
  double t28913;
  double t28914;
  double t28915;
  double t28916;
  double t28917;
  double t28918;
  double t28919;
  double t28920;
  double t28921;
  double t28923;
  double t28924;
  double t28925;
  double t28926;
  double t28927;
  double t28928;
  double t28929;
  double t28930;
  double t28931;
  double t28936;
  double t28940;
  double t28941;
  double t28942;
  double t28943;
  double t28944;
  double t28945;
  double t28946;
  double t28947;
  double t28949;
  double t28950;
  double t28951;
  double t28952;
  double t28953;
  double t28954;
  double t28955;
  double t28956;
  double t28957;
  double t28959;
  double t28960;
  double t28961;
  double t28962;
  double t28963;
  double t28964;
  double t28965;
  double t28966;
  double t28967;
  double t28969;
  double t28970;
  double t28971;
  double t28972;
  double t28974;
  double t28975;
  double t28976;
  double t28977;
  double t28979;
  double t28980;
  double t28981;
  double t28982;
  double t28983;
  double t28984;
  double t28985;
  double t28986;
  double t28987;
  double t28989;
  double t28990;
  double t28991;
  double t28992;
  double t28993;
  double t28994;
  double t28995;
  double t28996;
  double t28997;
  double t28999;
  double t29000;
  double t29001;
  double t29002;
  double t29003;
  double t29004;
  double t29005;
  double t29006;
  double t29007;
  double t29009;
  double t29010;
  double t29011;
  double t29012;
  double t29013;
  double t29014;
  double t29015;
  double t29016;
  double t29017;
  double t29022;
  double t29026;
  double t29027;
  double t29028;
  double t29029;
  double t29030;
  double t29031;
  double t29032;
  double t29033;
  double t29035;
  double t29036;
  double t29037;
  double t29038;
  double t29039;
  double t29040;
  double t29041;
  double t29042;
  double t29043;
  double t29045;
  double t29046;
  double t29047;
  double t29048;
  double t29049;
  double t29050;
  double t29051;
  double t29052;
  double t29053;
  double t28028;
  double t28033;
  double t28037;
  double t28041;
  double t28048;
  double t28052;
  double t28059;
  double t28063;
  double t28070;
  double t28080;
  double t28090;
  double t28100;
  double t28110;
  double t28120;
  double t28130;
  double t28140;
  double t28150;
  double t28160;
  double t28170;
  double t28180;
  double t28190;
  double t28194;
  double t28201;
  double t28211;
  double t28221;
  double t28231;
  double t28241;
  double t28242;
  double t29137;
  double t29138;
  double t29139;
  double t29140;
  double t29141;
  double t29142;
  double t29143;
  double t29144;
  double t29145;
  double t29146;
  double t29147;
  double t29148;
  double t29149;
  double t29150;
  double t29151;
  double t29152;
  double t29153;
  double t29154;
  double t29155;
  double t29156;
  double t29157;
  double t29158;
  double t29159;
  double t29160;
  double t29161;
  double t29162;
  double t29163;
  double t29164;
  double t29504;
  double t28715;
  double t28720;
  double t28725;
  double t28730;
  double t28735;
  double t28740;
  double t28750;
  double t28760;
  double t28770;
  double t28780;
  double t28790;
  double t28800;
  double t28816;
  double t28826;
  double t28836;
  double t28846;
  double t28856;
  double t28866;
  double t28882;
  double t28892;
  double t28902;
  double t28912;
  double t28922;
  double t28932;
  double t28948;
  double t28958;
  double t28968;
  double t28973;
  double t28978;
  double t28988;
  double t28998;
  double t29008;
  double t29018;
  double t29034;
  double t29044;
  double t29054;
  double t29055;
  double t29252;
  double t29253;
  double t29254;
  double t29255;
  double t29256;
  double t29257;
  double t29258;
  double t29259;
  double t29260;
  double t29261;
  double t29262;
  double t29263;
  double t29264;
  double t29265;
  double t29266;
  double t29267;
  double t29268;
  double t29269;
  double t29270;
  double t29271;
  double t29272;
  double t29273;
  double t29274;
  double t29275;
  double t29276;
  double t29277;
  double t29278;
  double t29279;
  double t29280;
  double t29281;
  double t29282;
  double t29283;
  double t29284;
  double t29285;
  double t29286;
  double t29287;
  double t29288;
  double t29457;
  double t29458;
  double t29459;
  double t29460;
  double t29461;
  double t29462;
  double t29463;
  double t29464;
  double t29465;
  double t29466;
  double t29467;
  double t29468;
  double t29469;
  double t29470;
  double t29471;
  double t29472;
  double t29473;
  double t29474;
  double t29475;
  double t29476;
  double t29477;
  double t29478;
  double t29479;
  double t29480;
  double t29481;
  double t29482;
  double t29483;
  double t29484;
  double t29485;
  double t29486;
  double t29487;
  double t29488;
  double t29489;
  double t29490;
  double t29491;
  double t29492;
  double t29493;
  double t29505;
  double t29506;
  double t29507;
  double t29508;
  double t29521;
  double t29522;
  double t29523;
  double t29524;
  double t29537;
  double t29538;
  double t29539;
  double t29540;
  double t29557;
  double t29558;
  double t29562;
  double t29563;
  double t27664;
  double t27668;
  double t27670;
  double t27672;
  double t27674;
  double t27679;
  double t27684;
  double t27689;
  double t27691;
  double t27693;
  double t27695;
  double t27697;
  double t27699;
  double t27701;
  double t27703;
  double t27705;
  double t27707;
  double t27709;
  double t27711;
  double t27713;
  double t27718;
  double t27723;
  double t27731;
  double t27739;
  double t27741;
  double t27743;
  double t28366;
  double t28382;
  double t28392;
  double t28402;
  double t28419;
  double t28430;
  double t28440;
  double t28456;
  double t28472;
  double t28482;
  double t28492;
  double t28509;
  double t28520;
  double t28530;
  double t28545;
  double t28561;
  double t28571;
  double t28581;
  double t28598;
  double t28609;
  double t28619;
  double t28634;
  double t28650;
  double t28660;
  double t28670;
  double t28687;
  double t28698;
  double t28708;
  double t28709;
  double t29222;
  double t29223;
  double t29224;
  double t29225;
  double t29226;
  double t29227;
  double t29228;
  double t29229;
  double t29230;
  double t29231;
  double t29232;
  double t29233;
  double t29234;
  double t29235;
  double t29236;
  double t29237;
  double t29238;
  double t29239;
  double t29240;
  double t29241;
  double t29242;
  double t29243;
  double t29244;
  double t29245;
  double t29246;
  double t29247;
  double t29248;
  double t29249;
  double t29250;
  double t29427;
  double t29428;
  double t29429;
  double t29430;
  double t29431;
  double t29432;
  double t29433;
  double t29434;
  double t29435;
  double t29436;
  double t29437;
  double t29438;
  double t29439;
  double t29440;
  double t29441;
  double t29442;
  double t29443;
  double t29444;
  double t29445;
  double t29446;
  double t29447;
  double t29448;
  double t29449;
  double t29450;
  double t29451;
  double t29452;
  double t29453;
  double t29454;
  double t29455;
  double t29768;
  double t29784;
  double t29800;
  double t29769;
  double t29770;
  double t29771;
  double t29785;
  double t29786;
  double t29787;
  double t29801;
  double t29802;
  double t29803;
  double t29820;
  double t29822;
  double t29825;
  double t29826;
  double t29603;
  double t29604;
  double t29605;
  double t29606;
  double t29607;
  double t29608;
  double t29609;
  double t29610;
  double t29611;
  double t29612;
  double t29613;
  double t29614;
  double t29615;
  double t29616;
  double t29617;
  double t29618;
  double t29619;
  double t29620;
  double t29621;
  double t29622;
  double t29623;
  double t29624;
  double t29625;
  double t29626;
  double t29627;
  double t29628;
  double t29629;
  double t29630;
  double t29631;
  double t29632;
  double t29633;
  double t29634;
  double t29635;
  double t29636;
  double t29637;
  double t29638;
  double t29639;
  double t29640;
  double t29641;
  double t29642;
  double t29643;
  double t29644;
  double t29645;
  double t29646;
  double t29647;
  double t29648;
  double t29649;
  double t29650;
  double t29651;
  double t29652;
  double t29653;
  double t29654;
  double t29655;
  double t29656;
  double t27792;
  double t27809;
  double t27823;
  double t27835;
  double t27852;
  double t27866;
  double t27875;
  double t27892;
  double t27906;
  double t27910;
  double t27914;
  double t27917;
  double t27921;
  double t27925;
  double t27929;
  double t27933;
  double t27937;
  double t27941;
  double t27945;
  double t27949;
  double t27953;
  double t27957;
  double t27961;
  double t27965;
  double t27974;
  double t27977;
  double t27988;
  double t27992;
  double t28002;
  double t28010;
  double t28014;
  double t28024;
  double t28025;
  double t29967;
  double t29984;
  double t30001;
  double t30019;
  double t29969;
  double t29972;
  double t29973;
  double t29974;
  double t29975;
  double t29986;
  double t29989;
  double t29990;
  double t29991;
  double t29992;
  double t30003;
  double t30006;
  double t30007;
  double t30008;
  double t30009;
  double t30021;
  double t30024;
  double t30025;
  double t30026;
  double t30027;
  double t29335;
  double t29336;
  double t29337;
  double t29338;
  double t29339;
  double t29340;
  double t29341;
  double t29342;
  double t29343;
  double t29344;
  double t29345;
  double t29346;
  double t29347;
  double t29348;
  double t29349;
  double t29350;
  double t29351;
  double t29352;
  double t29353;
  double t29354;
  double t29355;
  double t29356;
  double t29357;
  double t29358;
  double t29359;
  double t29360;
  double t29361;
  double t29362;
  double t29363;
  double t29364;
  double t29365;
  double t29366;
  double t29367;
  double t29102;
  double t29103;
  double t29104;
  double t29105;
  double t29106;
  double t29107;
  double t29108;
  double t29109;
  double t29110;
  double t29111;
  double t29112;
  double t29113;
  double t29114;
  double t29115;
  double t29116;
  double t29117;
  double t29118;
  double t29119;
  double t29120;
  double t29121;
  double t29122;
  double t29123;
  double t29124;
  double t29125;
  double t29126;
  double t29127;
  double t29128;
  double t29129;
  double t29130;
  double t29131;
  double t29132;
  double t29133;
  double t29134;
  double t29831;
  double t29832;
  double t29833;
  double t29834;
  double t29835;
  double t29836;
  double t29837;
  double t29838;
  double t29839;
  double t29840;
  double t29841;
  double t29842;
  double t29843;
  double t29844;
  double t29845;
  double t29846;
  double t29847;
  double t29848;
  double t29849;
  double t29850;
  double t29851;
  double t29852;
  double t29853;
  double t29854;
  double t29855;
  double t29568;
  double t29569;
  double t29570;
  double t29571;
  double t29572;
  double t29573;
  double t29574;
  double t29575;
  double t29576;
  double t29577;
  double t29578;
  double t29579;
  double t29580;
  double t29581;
  double t29582;
  double t29583;
  double t29584;
  double t29585;
  double t29586;
  double t29587;
  double t29588;
  double t29589;
  double t29590;
  double t29591;
  double t29592;
  double t29593;
  double t29594;
  double t29595;
  double t29596;
  double t29597;
  double t29598;
  double t29599;
  double t29600;
  double t29601;
  double t27747;
  double t27758;
  double t27759;
  double t27763;
  double t27778;
  double t27779;
  double t30020;
  double t30022;
  double t30023;
  double t30028;
  double t30029;
  double t30030;
  double t29324;
  double t29325;
  double t29326;
  double t29327;
  double t29328;
  double t29329;
  double t29091;
  double t29092;
  double t29093;
  double t29094;
  double t29095;
  double t29096;
  double t29821;
  double t29823;
  double t29824;
  double t29827;
  double t29828;
  double t29829;
  double t29559;
  double t29560;
  double t29561;
  double t29564;
  double t29565;
  double t29566;
  double t30014;
  double t30015;
  double t30016;
  double t27647;
  double t27660;
  double t27661;
  double t29331;
  double t29332;
  double t29333;
  double t29098;
  double t29099;
  double t29100;
  double t29812;
  double t29813;
  double t29814;
  double t29815;
  double t29549;
  double t29550;
  double t29551;
  double t29552;
  double t29968;
  double t29970;
  double t29971;
  double t29976;
  double t29977;
  double t29978;
  double t27383;
  double t27414;
  double t27425;
  double t27432;
  double t27436;
  double t27437;
  double t29295;
  double t29296;
  double t29297;
  double t29298;
  double t29299;
  double t29300;
  double t29062;
  double t29063;
  double t29064;
  double t29065;
  double t29066;
  double t29067;
  double t29772;
  double t29773;
  double t29774;
  double t29775;
  double t29776;
  double t29777;
  double t29509;
  double t29510;
  double t29511;
  double t29512;
  double t29513;
  double t29514;
  double t29963;
  double t29964;
  double t29965;
  double t27301;
  double t27348;
  double t27352;
  double t29291;
  double t29292;
  double t29293;
  double t29058;
  double t29059;
  double t29060;
  double t29763;
  double t29764;
  double t29765;
  double t29766;
  double t29499;
  double t29500;
  double t29501;
  double t29502;
  double t29985;
  double t29987;
  double t29988;
  double t29993;
  double t29994;
  double t29995;
  double t27456;
  double t27487;
  double t27494;
  double t27501;
  double t27511;
  double t27512;
  double t29302;
  double t29303;
  double t29304;
  double t29305;
  double t29306;
  double t29307;
  double t29069;
  double t29070;
  double t29071;
  double t29072;
  double t29073;
  double t29074;
  double t29788;
  double t29789;
  double t29790;
  double t29791;
  double t29792;
  double t29793;
  double t29525;
  double t29526;
  double t29527;
  double t29528;
  double t29529;
  double t29530;
  double t29980;
  double t29981;
  double t29982;
  double t27517;
  double t27527;
  double t27528;
  double t29309;
  double t29310;
  double t29311;
  double t29076;
  double t29077;
  double t29078;
  double t29779;
  double t29780;
  double t29781;
  double t29782;
  double t29516;
  double t29517;
  double t29518;
  double t29519;
  double t30002;
  double t30004;
  double t30005;
  double t30010;
  double t30011;
  double t30012;
  double t27585;
  double t27600;
  double t27607;
  double t27614;
  double t27618;
  double t27619;
  double t29317;
  double t29318;
  double t29319;
  double t29320;
  double t29321;
  double t29322;
  double t29084;
  double t29085;
  double t29086;
  double t29087;
  double t29088;
  double t29089;
  double t29804;
  double t29805;
  double t29806;
  double t29807;
  double t29808;
  double t29809;
  double t29541;
  double t29542;
  double t29543;
  double t29544;
  double t29545;
  double t29546;
  double t29997;
  double t29998;
  double t29999;
  double t27556;
  double t27569;
  double t27570;
  double t29313;
  double t29314;
  double t29315;
  double t29080;
  double t29081;
  double t29082;
  double t29795;
  double t29796;
  double t29797;
  double t29798;
  double t29532;
  double t29533;
  double t29534;
  double t29535;
  t207 = Cos(var1[11]);
  t27111 = Sin(var1[10]);
  t22556 = Cos(var1[10]);
  t27187 = Sin(var1[11]);
  t27244 = -1.*t207*t27111;
  t27245 = t22556*t27187;
  t27257 = t27244 + t27245;
  t8663 = -1.*t207;
  t8739 = 1. + t8663;
  t8867 = -0.50321*t8739;
  t9439 = -0.50321*t207;
  t9467 = t8867 + t9439;
  t27205 = Sin(var1[4]);
  t27219 = Cos(var1[4]);
  t27230 = Cos(var1[9]);
  t27234 = Cos(var1[5]);
  t27272 = Sin(var1[9]);
  t27324 = -1.*t22556*t207;
  t27332 = -1.*t27111*t27187;
  t27333 = t27324 + t27332;
  t27273 = Sin(var1[5]);
  t27358 = -1.*t22556;
  t27359 = 1. + t27358;
  t27362 = -0.28121*t27359;
  t27363 = -0.28121*t22556;
  t27366 = t27362 + t27363;
  t23231 = t22556*t207;
  t27188 = t27111*t27187;
  t27200 = t23231 + t27188;
  t27394 = t22556*t9467;
  t27395 = t27362 + t27394;
  t27386 = 0.28121*t27111;
  t27387 = t9467*t27111;
  t27390 = t27386 + t27387;
  t27378 = t27234*t27272;
  t27379 = t27230*t27273;
  t27382 = t27378 + t27379;
  t27321 = t27257*t27205;
  t27337 = t27230*t27234*t27333;
  t27338 = -1.*t27272*t27333*t27273;
  t27342 = t27337 + t27338;
  t27343 = t27219*t27342;
  t27347 = t27321 + t27343;
  t27439 = Cos(var1[13]);
  t27440 = -1.*t27439;
  t27441 = 1. + t27440;
  t27442 = 0.28121*t27441;
  t27443 = 0.28121*t27439;
  t27444 = t27442 + t27443;
  t27447 = Sin(var1[13]);
  t27457 = Cos(var1[14]);
  t27459 = Sin(var1[14]);
  t27463 = -1.*t27457;
  t27464 = 1. + t27463;
  t27465 = 0.50321*t27464;
  t27466 = 0.50321*t27457;
  t27467 = t27465 + t27466;
  t27458 = t27439*t27457;
  t27460 = t27447*t27459;
  t27461 = t27458 + t27460;
  t27470 = -1.*t27457*t27447;
  t27471 = t27439*t27459;
  t27472 = t27470 + t27471;
  t27474 = t27439*t27467;
  t27475 = t27442 + t27474;
  t27462 = 0.28121*t27447;
  t27468 = -1.*t27467*t27447;
  t27469 = t27462 + t27468;
  t27451 = Sin(var1[12]);
  t27452 = -1.*t27234*t27451;
  t27453 = Cos(var1[12]);
  t27454 = -1.*t27453*t27273;
  t27455 = t27452 + t27454;
  t27479 = t27457*t27447;
  t27480 = -1.*t27439*t27459;
  t27481 = t27479 + t27480;
  t27505 = t27461*t27205;
  t27506 = t27453*t27234*t27481;
  t27507 = -1.*t27451*t27481*t27273;
  t27508 = t27506 + t27507;
  t27509 = t27219*t27508;
  t27510 = t27505 + t27509;
  t27530 = Cos(var1[17]);
  t27541 = Sin(var1[16]);
  t27539 = Cos(var1[16]);
  t27542 = Sin(var1[17]);
  t27547 = -1.*t27530*t27541;
  t27548 = t27539*t27542;
  t27549 = t27547 + t27548;
  t27532 = -1.*t27530;
  t27533 = 1. + t27532;
  t27534 = -0.50321*t27533;
  t27535 = -0.50321*t27530;
  t27536 = t27534 + t27535;
  t27546 = Cos(var1[15]);
  t27551 = Sin(var1[15]);
  t27561 = -1.*t27539*t27530;
  t27562 = -1.*t27541*t27542;
  t27563 = t27561 + t27562;
  t27572 = -1.*t27539;
  t27573 = 1. + t27572;
  t27574 = -0.28121*t27573;
  t27575 = -0.28121*t27539;
  t27576 = t27574 + t27575;
  t27540 = t27539*t27530;
  t27543 = t27541*t27542;
  t27544 = t27540 + t27543;
  t27590 = t27539*t27536;
  t27591 = t27574 + t27590;
  t27586 = 0.28121*t27541;
  t27587 = t27536*t27541;
  t27588 = t27586 + t27587;
  t27582 = t27234*t27551;
  t27583 = t27546*t27273;
  t27584 = t27582 + t27583;
  t27560 = t27549*t27205;
  t27564 = t27546*t27234*t27563;
  t27565 = -1.*t27551*t27563*t27273;
  t27566 = t27564 + t27565;
  t27567 = t27219*t27566;
  t27568 = t27560 + t27567;
  t27621 = Cos(var1[8]);
  t27632 = Sin(var1[7]);
  t27630 = Cos(var1[7]);
  t27633 = Sin(var1[8]);
  t27638 = t27621*t27632;
  t27639 = -1.*t27630*t27633;
  t27640 = t27638 + t27639;
  t27623 = -1.*t27621;
  t27624 = 1. + t27623;
  t27625 = 0.50321*t27624;
  t27626 = 0.50321*t27621;
  t27627 = t27625 + t27626;
  t27637 = Cos(var1[6]);
  t27631 = t27630*t27621;
  t27634 = t27632*t27633;
  t27635 = t27631 + t27634;
  t27642 = Sin(var1[6]);
  t27663 = Power(t27219,2);
  t27415 = -1.*t27111*t27205;
  t27418 = -1.*t27230*t22556*t27234;
  t27419 = t22556*t27272*t27273;
  t27422 = t27418 + t27419;
  t27423 = t27219*t27422;
  t27424 = t27415 + t27423;
  t27426 = t22556*t27205;
  t27427 = -1.*t27230*t27234*t27111;
  t27428 = t27272*t27111*t27273;
  t27429 = t27427 + t27428;
  t27430 = t27219*t27429;
  t27431 = t27426 + t27430;
  t27218 = t27200*t27205;
  t27261 = t27230*t27234*t27257;
  t27281 = -1.*t27272*t27257*t27273;
  t27284 = t27261 + t27281;
  t27292 = t27219*t27284;
  t27293 = t27218 + t27292;
  t27488 = -1.*t27447*t27205;
  t27489 = t27453*t27439*t27234;
  t27490 = -1.*t27439*t27451*t27273;
  t27491 = t27489 + t27490;
  t27492 = t27219*t27491;
  t27493 = t27488 + t27492;
  t27495 = t27439*t27205;
  t27496 = t27453*t27234*t27447;
  t27497 = -1.*t27451*t27447*t27273;
  t27498 = t27496 + t27497;
  t27499 = t27219*t27498;
  t27500 = t27495 + t27499;
  t27521 = t27472*t27205;
  t27522 = t27453*t27234*t27461;
  t27523 = -1.*t27451*t27461*t27273;
  t27524 = t27522 + t27523;
  t27525 = t27219*t27524;
  t27526 = t27521 + t27525;
  t27601 = -1.*t27541*t27205;
  t27602 = -1.*t27546*t27539*t27234;
  t27603 = t27539*t27551*t27273;
  t27604 = t27602 + t27603;
  t27605 = t27219*t27604;
  t27606 = t27601 + t27605;
  t27608 = t27539*t27205;
  t27609 = -1.*t27546*t27234*t27541;
  t27610 = t27551*t27541*t27273;
  t27611 = t27609 + t27610;
  t27612 = t27219*t27611;
  t27613 = t27608 + t27612;
  t27545 = t27544*t27205;
  t27550 = t27546*t27234*t27549;
  t27552 = -1.*t27551*t27549*t27273;
  t27553 = t27550 + t27552;
  t27554 = t27219*t27553;
  t27555 = t27545 + t27554;
  t27636 = t27205*t27635;
  t27641 = t27234*t27637*t27640;
  t27643 = -1.*t27273*t27642*t27640;
  t27644 = t27641 + t27643;
  t27645 = t27219*t27644;
  t27646 = t27636 + t27645;
  t27651 = -1.*t27621*t27632;
  t27652 = t27630*t27633;
  t27653 = t27651 + t27652;
  t27654 = t27205*t27653;
  t27655 = t27234*t27637*t27635;
  t27656 = -1.*t27273*t27642*t27635;
  t27657 = t27655 + t27656;
  t27658 = t27219*t27657;
  t27659 = t27654 + t27658;
  t27725 = t27234*t27637*t27630;
  t27726 = -1.*t27630*t27273*t27642;
  t27727 = t27725 + t27726;
  t27728 = t27219*t27727;
  t27729 = -1.*t27205*t27632;
  t27730 = t27728 + t27729;
  t27715 = -1.*t27637*t27273;
  t27716 = -1.*t27234*t27642;
  t27717 = t27715 + t27716;
  t27748 = -1.*t27630;
  t27749 = 1. + t27748;
  t27750 = 0.28121*t27749;
  t27751 = 0.28121*t27630;
  t27752 = t27750 + t27751;
  t27733 = t27630*t27205;
  t27734 = t27234*t27637*t27632;
  t27735 = -1.*t27273*t27642*t27632;
  t27736 = t27734 + t27735;
  t27737 = t27219*t27736;
  t27738 = t27733 + t27737;
  t27768 = t27630*t27627;
  t27769 = t27750 + t27768;
  t27764 = 0.28121*t27632;
  t27765 = -1.*t27627*t27632;
  t27766 = t27764 + t27765;
  t27781 = -1.*t27230;
  t27782 = 1. + t27781;
  t27783 = -0.15121*t27782;
  t27787 = 0.15121*t27782;
  t27793 = t27230*t27366;
  t27794 = -0.03*t27272;
  t27795 = t27783 + t27793 + t27794;
  t27797 = 0.18121*t27230;
  t27798 = 0.15121*t27272;
  t27799 = t27366*t27272;
  t27800 = t27787 + t27797 + t27798 + t27799;
  t27391 = t27390*t27257;
  t27788 = 0.15121*t27230;
  t27810 = t27230*t27395;
  t27811 = t27783 + t27810;
  t27813 = t27395*t27272;
  t27814 = t27787 + t27788 + t27798 + t27813;
  t27406 = -1.*t27390*t27200;
  t27824 = -1.*t27453;
  t27825 = 1. + t27824;
  t27826 = 0.15121*t27825;
  t27830 = -0.15121*t27825;
  t27836 = t27453*t27444;
  t27837 = 0.03*t27451;
  t27838 = t27826 + t27836 + t27837;
  t27840 = -0.18121*t27453;
  t27841 = -0.15121*t27451;
  t27842 = t27444*t27451;
  t27843 = t27830 + t27840 + t27841 + t27842;
  t27473 = t27469*t27472;
  t27831 = -0.15121*t27453;
  t27853 = t27453*t27475;
  t27854 = t27826 + t27853;
  t27856 = t27475*t27451;
  t27857 = t27830 + t27831 + t27841 + t27856;
  t27483 = -1.*t27469*t27461;
  t27867 = -1.*t27546;
  t27868 = 1. + t27867;
  t27869 = -0.15121*t27868;
  t27870 = -0.15121*t27546;
  t27871 = t27869 + t27870;
  t27876 = t27546*t27576;
  t27877 = 0.03*t27551;
  t27878 = t27869 + t27876 + t27877;
  t27880 = -0.18121*t27546;
  t27881 = 0.15121*t27551;
  t27882 = t27576*t27551;
  t27883 = t27869 + t27880 + t27881 + t27882;
  t27589 = t27588*t27549;
  t27893 = t27546*t27591;
  t27894 = t27869 + t27893;
  t27896 = t27591*t27551;
  t27897 = t27869 + t27870 + t27881 + t27896;
  t27596 = -1.*t27588*t27544;
  t27789 = t27787 + t27788;
  t27784 = -0.15121*t27230;
  t27785 = t27783 + t27784;
  t27676 = -1.*t27230*t27234;
  t27677 = t27272*t27273;
  t27678 = t27676 + t27677;
  t27832 = t27830 + t27831;
  t27827 = 0.15121*t27453;
  t27828 = t27826 + t27827;
  t27681 = t27453*t27234;
  t27682 = -1.*t27451*t27273;
  t27683 = t27681 + t27682;
  t27873 = -1.*t27871*t27551;
  t27686 = -1.*t27546*t27234;
  t27687 = t27551*t27273;
  t27688 = t27686 + t27687;
  t27966 = -1.*t27637;
  t27967 = 1. + t27966;
  t27968 = 0.15121*t27967;
  t27969 = 0.15121*t27637;
  t27970 = t27968 + t27969;
  t27972 = t27970*t27642;
  t27720 = t27234*t27637;
  t27721 = -1.*t27273*t27642;
  t27722 = t27720 + t27721;
  t27978 = t27637*t27752;
  t27979 = -0.03*t27642;
  t27980 = t27968 + t27978 + t27979;
  t27982 = 0.18121*t27637;
  t27983 = -0.15121*t27642;
  t27984 = t27752*t27642;
  t27985 = t27968 + t27982 + t27983 + t27984;
  t28003 = t27637*t27769;
  t28004 = t27968 + t28003;
  t28006 = t27769*t27642;
  t28007 = t27968 + t27969 + t27983 + t28006;
  t27767 = t27766*t27653;
  t27774 = -1.*t27766*t27635;
  t28027 = Cos(var1[3]);
  t28030 = Sin(var1[3]);
  t28042 = -1.*t27234*t27272;
  t28043 = -1.*t27230*t27273;
  t28044 = t28042 + t28043;
  t28053 = t27234*t27451;
  t28054 = t27453*t27273;
  t28055 = t28053 + t28054;
  t28064 = -1.*t27234*t27551;
  t28065 = -1.*t27546*t27273;
  t28066 = t28064 + t28065;
  t28071 = -1.*t22556*t27234*t27272;
  t28072 = -1.*t27230*t22556*t27273;
  t28073 = t28071 + t28072;
  t28075 = -1.*t27219*t27111;
  t28076 = -1.*t27205*t27422;
  t28077 = t28075 + t28076;
  t28081 = -1.*t27234*t27272*t27111;
  t28082 = -1.*t27230*t27111*t27273;
  t28083 = t28081 + t28082;
  t28085 = t22556*t27219;
  t28086 = -1.*t27205*t27429;
  t28087 = t28085 + t28086;
  t28091 = t27234*t27272*t27257;
  t28092 = t27230*t27257*t27273;
  t28093 = t28091 + t28092;
  t28095 = t27219*t27200;
  t28096 = -1.*t27205*t27284;
  t28097 = t28095 + t28096;
  t28101 = t27234*t27272*t27333;
  t28102 = t27230*t27333*t27273;
  t28103 = t28101 + t28102;
  t28105 = t27219*t27257;
  t28106 = -1.*t27205*t27342;
  t28107 = t28105 + t28106;
  t28111 = t27439*t27234*t27451;
  t28112 = t27453*t27439*t27273;
  t28113 = t28111 + t28112;
  t28115 = -1.*t27219*t27447;
  t28116 = -1.*t27205*t27491;
  t28117 = t28115 + t28116;
  t28121 = t27234*t27451*t27447;
  t28122 = t27453*t27447*t27273;
  t28123 = t28121 + t28122;
  t28125 = t27439*t27219;
  t28126 = -1.*t27205*t27498;
  t28127 = t28125 + t28126;
  t28131 = t27234*t27451*t27481;
  t28132 = t27453*t27481*t27273;
  t28133 = t28131 + t28132;
  t28135 = t27219*t27461;
  t28136 = -1.*t27205*t27508;
  t28137 = t28135 + t28136;
  t28141 = t27234*t27451*t27461;
  t28142 = t27453*t27461*t27273;
  t28143 = t28141 + t28142;
  t28145 = t27219*t27472;
  t28146 = -1.*t27205*t27524;
  t28147 = t28145 + t28146;
  t28151 = -1.*t27539*t27234*t27551;
  t28152 = -1.*t27546*t27539*t27273;
  t28153 = t28151 + t28152;
  t28155 = -1.*t27219*t27541;
  t28156 = -1.*t27205*t27604;
  t28157 = t28155 + t28156;
  t28161 = -1.*t27234*t27551*t27541;
  t28162 = -1.*t27546*t27541*t27273;
  t28163 = t28161 + t28162;
  t28165 = t27539*t27219;
  t28166 = -1.*t27205*t27611;
  t28167 = t28165 + t28166;
  t28171 = t27234*t27551*t27549;
  t28172 = t27546*t27549*t27273;
  t28173 = t28171 + t28172;
  t28175 = t27219*t27544;
  t28176 = -1.*t27205*t27553;
  t28177 = t28175 + t28176;
  t28181 = t27234*t27551*t27563;
  t28182 = t27546*t27563*t27273;
  t28183 = t28181 + t28182;
  t28185 = t27219*t27549;
  t28186 = -1.*t27205*t27566;
  t28187 = t28185 + t28186;
  t28195 = t27637*t27273;
  t28196 = t27234*t27642;
  t28197 = t28195 + t28196;
  t28202 = t27637*t27630*t27273;
  t28203 = t27234*t27630*t27642;
  t28204 = t28202 + t28203;
  t28206 = -1.*t27205*t27727;
  t28207 = -1.*t27219*t27632;
  t28208 = t28206 + t28207;
  t28212 = t27637*t27273*t27632;
  t28213 = t27234*t27642*t27632;
  t28214 = t28212 + t28213;
  t28216 = t27219*t27630;
  t28217 = -1.*t27205*t27736;
  t28218 = t28216 + t28217;
  t28222 = t27637*t27273*t27640;
  t28223 = t27234*t27642*t27640;
  t28224 = t28222 + t28223;
  t28226 = t27219*t27635;
  t28227 = -1.*t27205*t27644;
  t28228 = t28226 + t28227;
  t28232 = t27637*t27273*t27635;
  t28233 = t27234*t27642*t27635;
  t28234 = t28232 + t28233;
  t28236 = t27219*t27653;
  t28237 = -1.*t27205*t27657;
  t28238 = t28236 + t28237;
  t28355 = t27789*t27234;
  t28356 = t27785*t27273;
  t28357 = t28355 + t28356;
  t28351 = t27785*t27234;
  t28352 = -1.*t27789*t27273;
  t28353 = t28351 + t28352;
  t28367 = t27234*t27800;
  t28368 = t27795*t27273;
  t28369 = t28367 + t28368;
  t28371 = t27234*t27795;
  t28372 = -1.*t27800*t27273;
  t28373 = t28371 + t28372;
  t28403 = t27234*t27814;
  t28404 = t27811*t27273;
  t28405 = t28403 + t28404;
  t28407 = t27811*t27234;
  t28408 = -1.*t27814*t27273;
  t28409 = t28407 + t28408;
  t28445 = t27828*t27234;
  t28446 = -1.*t27832*t27273;
  t28447 = t28445 + t28446;
  t28441 = t27832*t27234;
  t28442 = t27828*t27273;
  t28443 = t28441 + t28442;
  t28457 = t27234*t27843;
  t28458 = t27838*t27273;
  t28459 = t28457 + t28458;
  t28461 = t27234*t27838;
  t28462 = -1.*t27843*t27273;
  t28463 = t28461 + t28462;
  t28493 = t27234*t27857;
  t28494 = t27854*t27273;
  t28495 = t28493 + t28494;
  t28497 = t27854*t27234;
  t28498 = -1.*t27857*t27273;
  t28499 = t28497 + t28498;
  t28531 = t27871*t27234;
  t28535 = -1.*t27871*t27273;
  t28536 = t28531 + t28535;
  t28532 = t27871*t27273;
  t28533 = t28531 + t28532;
  t28546 = t27234*t27883;
  t28547 = t27878*t27273;
  t28548 = t28546 + t28547;
  t28550 = t27234*t27878;
  t28551 = -1.*t27883*t27273;
  t28552 = t28550 + t28551;
  t28582 = t27234*t27897;
  t28583 = t27894*t27273;
  t28584 = t28582 + t28583;
  t28586 = t27894*t27234;
  t28587 = -1.*t27897*t27273;
  t28588 = t28586 + t28587;
  t28620 = t27234*t27970;
  t28624 = -1.*t27970*t27273;
  t28625 = t28620 + t28624;
  t28621 = t27970*t27273;
  t28622 = t28620 + t28621;
  t28635 = t27273*t27980;
  t28636 = t27234*t27985;
  t28637 = t28635 + t28636;
  t28639 = t27234*t27980;
  t28640 = -1.*t27273*t27985;
  t28641 = t28639 + t28640;
  t28671 = t28004*t27273;
  t28672 = t27234*t28007;
  t28673 = t28671 + t28672;
  t28675 = t27234*t28004;
  t28676 = -1.*t27273*t28007;
  t28677 = t28675 + t28676;
  t27666 = Power(t27205,2);
  t28358 = t28357*t27678;
  t28361 = -1.*t28357*t28044;
  t28444 = -1.*t28443*t28055;
  t28452 = t28443*t27683;
  t28534 = -1.*t28533*t28066;
  t28541 = t28533*t27688;
  t28370 = t28369*t27678;
  t28377 = -1.*t28073*t28369;
  t28393 = -1.*t28369*t27678;
  t28397 = t28369*t28083;
  t28383 = t28073*t28369;
  t28387 = -1.*t28369*t28083;
  t28406 = -1.*t28405*t27678;
  t28414 = t28405*t28093;
  t28801 = t27390*t27205;
  t28802 = t27219*t28409;
  t28803 = t28801 + t28802;
  t28805 = t27219*t27390;
  t28806 = -1.*t27205*t28409;
  t28807 = t28805 + t28806;
  t28420 = t28405*t27678;
  t28425 = -1.*t28405*t28103;
  t28431 = -1.*t28405*t28093;
  t28435 = t28405*t28103;
  t28460 = t28459*t27683;
  t28467 = -1.*t28113*t28459;
  t28483 = -1.*t28459*t27683;
  t28487 = t28459*t28123;
  t28473 = t28113*t28459;
  t28477 = -1.*t28459*t28123;
  t28496 = -1.*t28495*t27683;
  t28504 = t28495*t28133;
  t28867 = t27469*t27205;
  t28868 = t27219*t28499;
  t28869 = t28867 + t28868;
  t28871 = t27219*t27469;
  t28872 = -1.*t27205*t28499;
  t28873 = t28871 + t28872;
  t28510 = t28495*t27683;
  t28515 = -1.*t28495*t28143;
  t28521 = -1.*t28495*t28133;
  t28525 = t28495*t28143;
  t28549 = t28548*t27688;
  t28556 = -1.*t28153*t28548;
  t28572 = -1.*t28548*t27688;
  t28576 = t28548*t28163;
  t28562 = t28153*t28548;
  t28566 = -1.*t28548*t28163;
  t28585 = -1.*t28584*t27688;
  t28593 = t28584*t28173;
  t28933 = t27588*t27205;
  t28934 = t27219*t28588;
  t28935 = t28933 + t28934;
  t28937 = t27219*t27588;
  t28938 = -1.*t27205*t28588;
  t28939 = t28937 + t28938;
  t28599 = t28584*t27688;
  t28604 = -1.*t28584*t28183;
  t28610 = -1.*t28584*t28173;
  t28614 = t28584*t28183;
  t28623 = -1.*t28622*t28197;
  t28630 = t28622*t27722;
  t28638 = t27722*t28637;
  t28645 = -1.*t28204*t28637;
  t28661 = -1.*t27722*t28637;
  t28665 = t28637*t28214;
  t28651 = t28204*t28637;
  t28655 = -1.*t28637*t28214;
  t28674 = -1.*t27722*t28673;
  t28682 = t28673*t28224;
  t29023 = t27219*t28677;
  t29024 = t27205*t27766;
  t29025 = t29023 + t29024;
  t29019 = -1.*t27205*t28677;
  t29020 = t27219*t27766;
  t29021 = t29019 + t29020;
  t28688 = t27722*t28673;
  t28693 = -1.*t28673*t28234;
  t28699 = -1.*t28673*t28224;
  t28703 = t28673*t28234;
  t5035 = 0.28121*t207;
  t20676 = t9467*t207;
  t22466 = t5035 + t20676;
  t28285 = t28027*t28093;
  t28286 = -1.*t28030*t28097;
  t28287 = t28285 + t28286;
  t27304 = 0.28121*t27187;
  t27312 = t9467*t27187;
  t27313 = t27304 + t27312;
  t28289 = t28027*t28103;
  t28290 = -1.*t28030*t28107;
  t28291 = t28289 + t28290;
  t27367 = Power(t22556,2);
  t27370 = -1.*t27366*t27367;
  t27371 = Power(t27111,2);
  t27374 = -1.*t27366*t27371;
  t27375 = -0.15121 + t27370 + t27374;
  t28253 = t28030*t27205*t27382;
  t28254 = t28027*t27678;
  t28255 = t28253 + t28254;
  t27398 = t27395*t27333;
  t27399 = t27391 + t27398;
  t27402 = t27200*t27399;
  t27403 = -1.*t27395*t27257;
  t27407 = t27403 + t27406;
  t27410 = t27257*t27407;
  t27411 = -0.15121 + t27402 + t27410;
  t28277 = t28027*t28073;
  t28278 = -1.*t28030*t28077;
  t28279 = t28277 + t28278;
  t28281 = t28027*t28083;
  t28282 = -1.*t28030*t28087;
  t28283 = t28281 + t28282;
  t27433 = 0.15121*t27333;
  t27434 = 0.15121*t27200;
  t27435 = t27433 + t27434;
  t27445 = Power(t27439,2);
  t27446 = t27444*t27445;
  t27448 = Power(t27447,2);
  t27449 = t27444*t27448;
  t27450 = -0.15121 + t27446 + t27449;
  t28261 = t28030*t27205*t27455;
  t28262 = t28027*t27683;
  t28263 = t28261 + t28262;
  t27476 = t27475*t27461;
  t27477 = t27473 + t27476;
  t27478 = t27461*t27477;
  t27482 = -1.*t27475*t27481;
  t27484 = t27482 + t27483;
  t27485 = t27472*t27484;
  t27486 = -0.15121 + t27478 + t27485;
  t28293 = t28027*t28113;
  t28294 = -1.*t28030*t28117;
  t28295 = t28293 + t28294;
  t28297 = t28027*t28123;
  t28298 = -1.*t28030*t28127;
  t28299 = t28297 + t28298;
  t27502 = -0.15121*t27481;
  t27503 = -0.15121*t27472;
  t27504 = t27502 + t27503;
  t28301 = t28027*t28133;
  t28302 = -1.*t28030*t28137;
  t28303 = t28301 + t28302;
  t27514 = 0.28121*t27457;
  t27515 = -1.*t27467*t27457;
  t27516 = t27514 + t27515;
  t27518 = 0.28121*t27459;
  t27519 = -1.*t27467*t27459;
  t27520 = t27518 + t27519;
  t28305 = t28027*t28143;
  t28306 = -1.*t28030*t28147;
  t28307 = t28305 + t28306;
  t27531 = 0.28121*t27530;
  t27537 = t27536*t27530;
  t27538 = t27531 + t27537;
  t28317 = t28027*t28173;
  t28318 = -1.*t28030*t28177;
  t28319 = t28317 + t28318;
  t27557 = 0.28121*t27542;
  t27558 = t27536*t27542;
  t27559 = t27557 + t27558;
  t28321 = t28027*t28183;
  t28322 = -1.*t28030*t28187;
  t28323 = t28321 + t28322;
  t27577 = Power(t27539,2);
  t27578 = -1.*t27576*t27577;
  t27579 = Power(t27541,2);
  t27580 = -1.*t27576*t27579;
  t27581 = -0.15121 + t27578 + t27580;
  t28269 = t28030*t27205*t27584;
  t28270 = t28027*t27688;
  t28271 = t28269 + t28270;
  t27592 = t27591*t27563;
  t27593 = t27589 + t27592;
  t27594 = t27544*t27593;
  t27595 = -1.*t27591*t27549;
  t27597 = t27595 + t27596;
  t27598 = t27549*t27597;
  t27599 = -0.15121 + t27594 + t27598;
  t28309 = t28027*t28153;
  t28310 = -1.*t28030*t28157;
  t28311 = t28309 + t28310;
  t28313 = t28027*t28163;
  t28314 = -1.*t28030*t28167;
  t28315 = t28313 + t28314;
  t27615 = -0.15121*t27563;
  t27616 = -0.15121*t27544;
  t27617 = t27615 + t27616;
  t28325 = t28030*t27205*t27717;
  t28326 = t28027*t27722;
  t28327 = t28325 + t28326;
  t27753 = Power(t27630,2);
  t27754 = t27752*t27753;
  t27755 = Power(t27632,2);
  t27756 = t27752*t27755;
  t27757 = -0.15121 + t27754 + t27756;
  t28333 = t28027*t28204;
  t28334 = -1.*t28030*t28208;
  t28335 = t28333 + t28334;
  t28337 = t28027*t28214;
  t28338 = -1.*t28030*t28218;
  t28339 = t28337 + t28338;
  t27770 = t27769*t27635;
  t27771 = t27767 + t27770;
  t27772 = t27635*t27771;
  t27773 = -1.*t27769*t27640;
  t27775 = t27773 + t27774;
  t27776 = t27653*t27775;
  t27777 = -0.15121 + t27772 + t27776;
  t27760 = 0.15121*t27640;
  t27761 = 0.15121*t27653;
  t27762 = t27760 + t27761;
  t28341 = t28027*t28224;
  t28342 = -1.*t28030*t28228;
  t28343 = t28341 + t28342;
  t27622 = 0.28121*t27621;
  t27628 = -1.*t27627*t27621;
  t27629 = t27622 + t27628;
  t27648 = 0.28121*t27633;
  t27649 = -1.*t27627*t27633;
  t27650 = t27648 + t27649;
  t28345 = t28027*t28234;
  t28346 = -1.*t28030*t28238;
  t28347 = t28345 + t28346;
  t27786 = -1.*t27785*t27230;
  t27790 = -1.*t27789*t27272;
  t27791 = t27786 + t27790;
  t27796 = -1.*t27230*t22556*t27795;
  t27801 = -1.*t22556*t27272*t27800;
  t27802 = t27796 + t27801;
  t27803 = t22556*t27802;
  t27804 = t27230*t27795*t27111;
  t27805 = t27272*t27800*t27111;
  t27806 = t27804 + t27805;
  t27807 = -1.*t27111*t27806;
  t27808 = t27803 + t27807;
  t27812 = t27230*t27811*t27333;
  t27815 = t27272*t27814*t27333;
  t27816 = t27391 + t27812 + t27815;
  t27817 = t27200*t27816;
  t27818 = -1.*t27230*t27811*t27257;
  t27819 = -1.*t27272*t27814*t27257;
  t27820 = t27818 + t27819 + t27406;
  t27821 = t27257*t27820;
  t27822 = t27817 + t27821;
  t27907 = t27789*t27230;
  t27908 = -1.*t27785*t27272;
  t27909 = t27907 + t27908;
  t28257 = t28027*t28044;
  t28258 = t28030*t27205*t27678;
  t28259 = t28257 + t28258;
  t27829 = t27828*t27453;
  t27833 = t27832*t27451;
  t27834 = t27829 + t27833;
  t27839 = t27453*t27439*t27838;
  t27844 = t27439*t27451*t27843;
  t27845 = t27839 + t27844;
  t27846 = t27439*t27845;
  t27847 = -1.*t27453*t27838*t27447;
  t27848 = -1.*t27451*t27843*t27447;
  t27849 = t27847 + t27848;
  t27850 = -1.*t27447*t27849;
  t27851 = t27846 + t27850;
  t27855 = t27453*t27854*t27461;
  t27858 = t27451*t27857*t27461;
  t27859 = t27473 + t27855 + t27858;
  t27860 = t27461*t27859;
  t27861 = -1.*t27453*t27854*t27481;
  t27862 = -1.*t27451*t27857*t27481;
  t27863 = t27861 + t27862 + t27483;
  t27864 = t27472*t27863;
  t27865 = t27860 + t27864;
  t27911 = -1.*t27832*t27453;
  t27912 = t27828*t27451;
  t27913 = t27911 + t27912;
  t28265 = t28027*t28055;
  t28266 = t28030*t27205*t27683;
  t28267 = t28265 + t28266;
  t27872 = -1.*t27871*t27546;
  t27874 = t27872 + t27873;
  t27879 = -1.*t27546*t27539*t27878;
  t27884 = -1.*t27539*t27551*t27883;
  t27885 = t27879 + t27884;
  t27886 = t27539*t27885;
  t27887 = t27546*t27878*t27541;
  t27888 = t27551*t27883*t27541;
  t27889 = t27887 + t27888;
  t27890 = -1.*t27541*t27889;
  t27891 = t27886 + t27890;
  t27895 = t27546*t27894*t27563;
  t27898 = t27551*t27897*t27563;
  t27899 = t27589 + t27895 + t27898;
  t27900 = t27544*t27899;
  t27901 = -1.*t27546*t27894*t27549;
  t27902 = -1.*t27551*t27897*t27549;
  t27903 = t27901 + t27902 + t27596;
  t27904 = t27549*t27903;
  t27905 = t27900 + t27904;
  t27915 = t27871*t27546;
  t27916 = t27915 + t27873;
  t28273 = t28027*t28066;
  t28274 = t28030*t27205*t27688;
  t28275 = t28273 + t28274;
  t27918 = -1.*t27795*t27272;
  t27919 = t27230*t27800;
  t27920 = t27918 + t27919;
  t27922 = t27795*t27272;
  t27923 = -1.*t27230*t27800;
  t27924 = t27922 + t27923;
  t27926 = t27811*t27272;
  t27927 = -1.*t27230*t27814;
  t27928 = t27926 + t27927;
  t27930 = -1.*t27811*t27272;
  t27931 = t27230*t27814;
  t27932 = t27930 + t27931;
  t27934 = t27838*t27451;
  t27935 = -1.*t27453*t27843;
  t27936 = t27934 + t27935;
  t27938 = -1.*t27838*t27451;
  t27939 = t27453*t27843;
  t27940 = t27938 + t27939;
  t27942 = -1.*t27854*t27451;
  t27943 = t27453*t27857;
  t27944 = t27942 + t27943;
  t27946 = t27854*t27451;
  t27947 = -1.*t27453*t27857;
  t27948 = t27946 + t27947;
  t27950 = -1.*t27878*t27551;
  t27951 = t27546*t27883;
  t27952 = t27950 + t27951;
  t27954 = t27878*t27551;
  t27955 = -1.*t27546*t27883;
  t27956 = t27954 + t27955;
  t27958 = t27894*t27551;
  t27959 = -1.*t27546*t27897;
  t27960 = t27958 + t27959;
  t27962 = -1.*t27894*t27551;
  t27963 = t27546*t27897;
  t27964 = t27962 + t27963;
  t27971 = t27970*t27637;
  t27973 = t27971 + t27972;
  t27975 = -1.*t27970*t27637;
  t27976 = t27975 + t27972;
  t28329 = t28027*t28197;
  t28330 = t28030*t27205*t27722;
  t28331 = t28329 + t28330;
  t27981 = t27980*t27642;
  t27986 = -1.*t27637*t27985;
  t27987 = t27981 + t27986;
  t27993 = t27637*t27630*t27980;
  t27994 = t27630*t27642*t27985;
  t27995 = t27993 + t27994;
  t27996 = t27630*t27995;
  t27997 = -1.*t27637*t27980*t27632;
  t27998 = -1.*t27642*t27985*t27632;
  t27999 = t27997 + t27998;
  t28000 = -1.*t27632*t27999;
  t28001 = t27996 + t28000;
  t27989 = -1.*t27980*t27642;
  t27990 = t27637*t27985;
  t27991 = t27989 + t27990;
  t28015 = t27637*t28004*t27635;
  t28016 = t27642*t28007*t27635;
  t28017 = t27767 + t28015 + t28016;
  t28018 = t27635*t28017;
  t28019 = -1.*t27637*t28004*t27640;
  t28020 = -1.*t27642*t28007*t27640;
  t28021 = t28019 + t28020 + t27774;
  t28022 = t27653*t28021;
  t28023 = t28018 + t28022;
  t28005 = -1.*t28004*t27642;
  t28008 = t27637*t28007;
  t28009 = t28005 + t28008;
  t28011 = t28004*t27642;
  t28012 = -1.*t27637*t28007;
  t28013 = t28011 + t28012;
  t28244 = 14.82*t27219*t28030*t27205;
  t28245 = t27234*t28030*t27205;
  t28246 = t28027*t27273;
  t28247 = t28245 + t28246;
  t28248 = -10.1*t27219*t27234*t28247;
  t28249 = t28027*t27234;
  t28250 = -1.*t28030*t27205*t27273;
  t28251 = t28249 + t28250;
  t28252 = 10.1*t27219*t27273*t28251;
  t28256 = -2.85*t27219*t27382*t28255;
  t28260 = -1.18*t27219*t27678*t28259;
  t28264 = -2.85*t27219*t27455*t28263;
  t28268 = -1.18*t27219*t27683*t28267;
  t28272 = -2.85*t27219*t27584*t28271;
  t28276 = -1.18*t27219*t27688*t28275;
  t28280 = -1.39*t27424*t28279;
  t28284 = -1.39*t27431*t28283;
  t28288 = -0.28*t27293*t28287;
  t28292 = -0.28*t27347*t28291;
  t28296 = -1.39*t27493*t28295;
  t28300 = -1.39*t27500*t28299;
  t28304 = -0.28*t27510*t28303;
  t28308 = -0.28*t27526*t28307;
  t28312 = -1.39*t27606*t28311;
  t28316 = -1.39*t27613*t28315;
  t28320 = -0.28*t27555*t28319;
  t28324 = -0.28*t27568*t28323;
  t28328 = -2.85*t27219*t27717*t28327;
  t28332 = -1.18*t27219*t27722*t28331;
  t28336 = -1.39*t27730*t28335;
  t28340 = -1.39*t27738*t28339;
  t28344 = -0.28*t27646*t28343;
  t28348 = -0.28*t27659*t28347;
  t28349 = t28244 + t28248 + t28252 + t28256 + t28260 + t28264 + t28268 + t28272 + t28276 + t28280 + t28284 + t28288 + t28292 + t28296 + t28300 + t28304 + t28308 + t28312 + t28316 + t28320 + t28324 + t28328 + t28332 + t28336 + t28340 + t28344 + t28348;
  t28029 = -1.*t28027*t27234*t27205;
  t28031 = t28030*t27273;
  t28032 = t28029 + t28031;
  t28034 = t27234*t28030;
  t28035 = t28027*t27205*t27273;
  t28036 = t28034 + t28035;
  t28038 = -1.*t28027*t27205*t27382;
  t28039 = t28030*t27678;
  t28040 = t28038 + t28039;
  t28045 = t28030*t28044;
  t28046 = -1.*t28027*t27205*t27678;
  t28047 = t28045 + t28046;
  t28049 = -1.*t28027*t27205*t27455;
  t28050 = t28030*t27683;
  t28051 = t28049 + t28050;
  t28056 = t28030*t28055;
  t28057 = -1.*t28027*t27205*t27683;
  t28058 = t28056 + t28057;
  t28060 = -1.*t28027*t27205*t27584;
  t28061 = t28030*t27688;
  t28062 = t28060 + t28061;
  t28067 = t28030*t28066;
  t28068 = -1.*t28027*t27205*t27688;
  t28069 = t28067 + t28068;
  t28074 = t28030*t28073;
  t28078 = t28027*t28077;
  t28079 = t28074 + t28078;
  t28084 = t28030*t28083;
  t28088 = t28027*t28087;
  t28089 = t28084 + t28088;
  t28094 = t28030*t28093;
  t28098 = t28027*t28097;
  t28099 = t28094 + t28098;
  t28104 = t28030*t28103;
  t28108 = t28027*t28107;
  t28109 = t28104 + t28108;
  t28114 = t28030*t28113;
  t28118 = t28027*t28117;
  t28119 = t28114 + t28118;
  t28124 = t28030*t28123;
  t28128 = t28027*t28127;
  t28129 = t28124 + t28128;
  t28134 = t28030*t28133;
  t28138 = t28027*t28137;
  t28139 = t28134 + t28138;
  t28144 = t28030*t28143;
  t28148 = t28027*t28147;
  t28149 = t28144 + t28148;
  t28154 = t28030*t28153;
  t28158 = t28027*t28157;
  t28159 = t28154 + t28158;
  t28164 = t28030*t28163;
  t28168 = t28027*t28167;
  t28169 = t28164 + t28168;
  t28174 = t28030*t28173;
  t28178 = t28027*t28177;
  t28179 = t28174 + t28178;
  t28184 = t28030*t28183;
  t28188 = t28027*t28187;
  t28189 = t28184 + t28188;
  t28191 = -1.*t28027*t27205*t27717;
  t28192 = t28030*t27722;
  t28193 = t28191 + t28192;
  t28198 = t28030*t28197;
  t28199 = -1.*t28027*t27205*t27722;
  t28200 = t28198 + t28199;
  t28205 = t28030*t28204;
  t28209 = t28027*t28208;
  t28210 = t28205 + t28209;
  t28215 = t28030*t28214;
  t28219 = t28027*t28218;
  t28220 = t28215 + t28219;
  t28225 = t28030*t28224;
  t28229 = t28027*t28228;
  t28230 = t28225 + t28229;
  t28235 = t28030*t28234;
  t28239 = t28027*t28238;
  t28240 = t28235 + t28239;
  t28354 = t28353*t27382;
  t28359 = t28354 + t28358;
  t28360 = t28044*t28359;
  t28362 = -1.*t28353*t27678;
  t28363 = t28361 + t28362;
  t28364 = t27678*t28363;
  t28365 = t28360 + t28364;
  t28374 = t27382*t28373;
  t28375 = t28370 + t28374;
  t28376 = t28073*t28375;
  t28378 = -1.*t27422*t28373;
  t28379 = t28377 + t28378;
  t28380 = t27678*t28379;
  t28381 = t28376 + t28380;
  t28384 = t27422*t28373;
  t28385 = t28383 + t28384;
  t28386 = t28083*t28385;
  t28388 = -1.*t28373*t27429;
  t28389 = t28387 + t28388;
  t28390 = t28073*t28389;
  t28391 = t28386 + t28390;
  t28394 = -1.*t27382*t28373;
  t28395 = t28393 + t28394;
  t28396 = t28083*t28395;
  t28398 = t28373*t27429;
  t28399 = t28397 + t28398;
  t28400 = t27678*t28399;
  t28401 = t28396 + t28400;
  t28410 = -1.*t27382*t28409;
  t28411 = t28406 + t28410;
  t28412 = t28093*t28411;
  t28413 = t27390*t27200;
  t28415 = t28409*t27284;
  t28416 = t28413 + t28414 + t28415;
  t28417 = t27678*t28416;
  t28418 = t28412 + t28417;
  t28421 = t27382*t28409;
  t28422 = t28420 + t28421;
  t28423 = t28103*t28422;
  t28424 = -1.*t27390*t27257;
  t28426 = -1.*t28409*t27342;
  t28427 = t28424 + t28425 + t28426;
  t28428 = t27678*t28427;
  t28429 = t28423 + t28428;
  t28432 = -1.*t28409*t27284;
  t28433 = t27406 + t28431 + t28432;
  t28434 = t28103*t28433;
  t28436 = t28409*t27342;
  t28437 = t27391 + t28435 + t28436;
  t28438 = t28093*t28437;
  t28439 = t28434 + t28438;
  t28448 = -1.*t28447*t27683;
  t28449 = t28444 + t28448;
  t28450 = t27683*t28449;
  t28451 = t28447*t27455;
  t28453 = t28451 + t28452;
  t28454 = t28055*t28453;
  t28455 = t28450 + t28454;
  t28464 = t27455*t28463;
  t28465 = t28460 + t28464;
  t28466 = t28113*t28465;
  t28468 = -1.*t27491*t28463;
  t28469 = t28467 + t28468;
  t28470 = t27683*t28469;
  t28471 = t28466 + t28470;
  t28474 = t27491*t28463;
  t28475 = t28473 + t28474;
  t28476 = t28123*t28475;
  t28478 = -1.*t28463*t27498;
  t28479 = t28477 + t28478;
  t28480 = t28113*t28479;
  t28481 = t28476 + t28480;
  t28484 = -1.*t27455*t28463;
  t28485 = t28483 + t28484;
  t28486 = t28123*t28485;
  t28488 = t28463*t27498;
  t28489 = t28487 + t28488;
  t28490 = t27683*t28489;
  t28491 = t28486 + t28490;
  t28500 = -1.*t27455*t28499;
  t28501 = t28496 + t28500;
  t28502 = t28133*t28501;
  t28503 = t27469*t27461;
  t28505 = t28499*t27508;
  t28506 = t28503 + t28504 + t28505;
  t28507 = t27683*t28506;
  t28508 = t28502 + t28507;
  t28511 = t27455*t28499;
  t28512 = t28510 + t28511;
  t28513 = t28143*t28512;
  t28514 = -1.*t27469*t27472;
  t28516 = -1.*t28499*t27524;
  t28517 = t28514 + t28515 + t28516;
  t28518 = t27683*t28517;
  t28519 = t28513 + t28518;
  t28522 = -1.*t28499*t27508;
  t28523 = t27483 + t28521 + t28522;
  t28524 = t28143*t28523;
  t28526 = t28499*t27524;
  t28527 = t27473 + t28525 + t28526;
  t28528 = t28133*t28527;
  t28529 = t28524 + t28528;
  t28537 = -1.*t28536*t27688;
  t28538 = t28534 + t28537;
  t28539 = t27688*t28538;
  t28540 = t28536*t27584;
  t28542 = t28540 + t28541;
  t28543 = t28066*t28542;
  t28544 = t28539 + t28543;
  t28553 = t27584*t28552;
  t28554 = t28549 + t28553;
  t28555 = t28153*t28554;
  t28557 = -1.*t27604*t28552;
  t28558 = t28556 + t28557;
  t28559 = t27688*t28558;
  t28560 = t28555 + t28559;
  t28563 = t27604*t28552;
  t28564 = t28562 + t28563;
  t28565 = t28163*t28564;
  t28567 = -1.*t28552*t27611;
  t28568 = t28566 + t28567;
  t28569 = t28153*t28568;
  t28570 = t28565 + t28569;
  t28573 = -1.*t27584*t28552;
  t28574 = t28572 + t28573;
  t28575 = t28163*t28574;
  t28577 = t28552*t27611;
  t28578 = t28576 + t28577;
  t28579 = t27688*t28578;
  t28580 = t28575 + t28579;
  t28589 = -1.*t27584*t28588;
  t28590 = t28585 + t28589;
  t28591 = t28173*t28590;
  t28592 = t27588*t27544;
  t28594 = t28588*t27553;
  t28595 = t28592 + t28593 + t28594;
  t28596 = t27688*t28595;
  t28597 = t28591 + t28596;
  t28600 = t27584*t28588;
  t28601 = t28599 + t28600;
  t28602 = t28183*t28601;
  t28603 = -1.*t27588*t27549;
  t28605 = -1.*t28588*t27566;
  t28606 = t28603 + t28604 + t28605;
  t28607 = t27688*t28606;
  t28608 = t28602 + t28607;
  t28611 = -1.*t28588*t27553;
  t28612 = t27596 + t28610 + t28611;
  t28613 = t28183*t28612;
  t28615 = t28588*t27566;
  t28616 = t27589 + t28614 + t28615;
  t28617 = t28173*t28616;
  t28618 = t28613 + t28617;
  t28626 = -1.*t28625*t27722;
  t28627 = t28623 + t28626;
  t28628 = t27722*t28627;
  t28629 = t28625*t27717;
  t28631 = t28629 + t28630;
  t28632 = t28197*t28631;
  t28633 = t28628 + t28632;
  t28642 = t27717*t28641;
  t28643 = t28638 + t28642;
  t28644 = t28204*t28643;
  t28646 = -1.*t27727*t28641;
  t28647 = t28645 + t28646;
  t28648 = t27722*t28647;
  t28649 = t28644 + t28648;
  t28652 = t27727*t28641;
  t28653 = t28651 + t28652;
  t28654 = t28653*t28214;
  t28656 = -1.*t28641*t27736;
  t28657 = t28655 + t28656;
  t28658 = t28204*t28657;
  t28659 = t28654 + t28658;
  t28662 = -1.*t27717*t28641;
  t28663 = t28661 + t28662;
  t28664 = t28663*t28214;
  t28666 = t28641*t27736;
  t28667 = t28665 + t28666;
  t28668 = t27722*t28667;
  t28669 = t28664 + t28668;
  t28678 = -1.*t27717*t28677;
  t28679 = t28674 + t28678;
  t28680 = t28679*t28224;
  t28681 = t27766*t27635;
  t28683 = t28677*t27644;
  t28684 = t28681 + t28682 + t28683;
  t28685 = t27722*t28684;
  t28686 = t28680 + t28685;
  t28689 = t27717*t28677;
  t28690 = t28688 + t28689;
  t28691 = t28690*t28234;
  t28692 = -1.*t27766*t27653;
  t28694 = -1.*t28677*t27657;
  t28695 = t28692 + t28693 + t28694;
  t28696 = t27722*t28695;
  t28697 = t28691 + t28696;
  t28700 = -1.*t28677*t27644;
  t28701 = t27774 + t28699 + t28700;
  t28702 = t28234*t28701;
  t28704 = t28677*t27657;
  t28705 = t27767 + t28703 + t28704;
  t28706 = t28224*t28705;
  t28707 = t28702 + t28706;
  t28711 = -1.*t27663*t28353*t27382;
  t28712 = -1.*t27666*t28353*t27382;
  t28713 = -1.*t28357*t27678;
  t28714 = t28711 + t28712 + t28713;
  t28716 = t28357*t28044;
  t28717 = t27663*t28353*t27678;
  t28718 = t27666*t28353*t27678;
  t28719 = t28716 + t28717 + t28718;
  t28721 = t28443*t28055;
  t28722 = t27663*t28447*t27683;
  t28723 = t27666*t28447*t27683;
  t28724 = t28721 + t28722 + t28723;
  t28726 = -1.*t27663*t28447*t27455;
  t28727 = -1.*t27666*t28447*t27455;
  t28728 = -1.*t28443*t27683;
  t28729 = t28726 + t28727 + t28728;
  t28731 = t28533*t28066;
  t28732 = t27663*t28536*t27688;
  t28733 = t27666*t28536*t27688;
  t28734 = t28731 + t28732 + t28733;
  t28736 = -1.*t27663*t28536*t27584;
  t28737 = -1.*t27666*t28536*t27584;
  t28738 = -1.*t28533*t27688;
  t28739 = t28736 + t28737 + t28738;
  t28741 = t27663*t28353*t27382;
  t28742 = t27666*t28353*t27382;
  t28743 = t28741 + t28742 + t28358;
  t28744 = t27219*t27678*t28743;
  t28745 = -1.*t27663*t28353*t27678;
  t28746 = -1.*t27666*t28353*t27678;
  t28747 = t28361 + t28745 + t28746;
  t28748 = t27219*t27382*t28747;
  t28749 = t28744 + t28748;
  t28751 = -1.*t27663*t28447*t27683;
  t28752 = -1.*t27666*t28447*t27683;
  t28753 = t28444 + t28751 + t28752;
  t28754 = t27219*t27455*t28753;
  t28755 = t27663*t28447*t27455;
  t28756 = t27666*t28447*t27455;
  t28757 = t28755 + t28756 + t28452;
  t28758 = t27219*t27683*t28757;
  t28759 = t28754 + t28758;
  t28761 = -1.*t27663*t28536*t27688;
  t28762 = -1.*t27666*t28536*t27688;
  t28763 = t28534 + t28761 + t28762;
  t28764 = t27219*t27584*t28763;
  t28765 = t27663*t28536*t27584;
  t28766 = t27666*t28536*t27584;
  t28767 = t28765 + t28766 + t28541;
  t28768 = t27219*t27688*t28767;
  t28769 = t28764 + t28768;
  t28771 = t27663*t27382*t28373;
  t28772 = t27666*t27382*t28373;
  t28773 = t28370 + t28771 + t28772;
  t28774 = t27424*t28773;
  t28775 = -1.*t27219*t28373*t27424;
  t28776 = t27205*t28373*t28077;
  t28777 = t28377 + t28775 + t28776;
  t28778 = t27219*t27382*t28777;
  t28779 = t28774 + t28778;
  t28781 = -1.*t27663*t27382*t28373;
  t28782 = -1.*t27666*t27382*t28373;
  t28783 = t28393 + t28781 + t28782;
  t28784 = t28783*t27431;
  t28785 = t27219*t28373*t27431;
  t28786 = -1.*t27205*t28373*t28087;
  t28787 = t28397 + t28785 + t28786;
  t28788 = t27219*t27382*t28787;
  t28789 = t28784 + t28788;
  t28791 = t27219*t28373*t27424;
  t28792 = -1.*t27205*t28373*t28077;
  t28793 = t28383 + t28791 + t28792;
  t28794 = t27431*t28793;
  t28795 = -1.*t27219*t28373*t27431;
  t28796 = t27205*t28373*t28087;
  t28797 = t28387 + t28795 + t28796;
  t28798 = t27424*t28797;
  t28799 = t28794 + t28798;
  t28804 = -1.*t27219*t27382*t28803;
  t28808 = t27205*t27382*t28807;
  t28809 = t28406 + t28804 + t28808;
  t28810 = t27293*t28809;
  t28811 = t28803*t27293;
  t28812 = t28807*t28097;
  t28813 = t28414 + t28811 + t28812;
  t28814 = t27219*t27382*t28813;
  t28815 = t28810 + t28814;
  t28817 = t27219*t27382*t28803;
  t28818 = -1.*t27205*t27382*t28807;
  t28819 = t28420 + t28817 + t28818;
  t28820 = t27347*t28819;
  t28821 = -1.*t28803*t27347;
  t28822 = -1.*t28807*t28107;
  t28823 = t28425 + t28821 + t28822;
  t28824 = t27219*t27382*t28823;
  t28825 = t28820 + t28824;
  t28827 = -1.*t28803*t27293;
  t28828 = -1.*t28807*t28097;
  t28829 = t28431 + t28827 + t28828;
  t28830 = t27347*t28829;
  t28831 = t28803*t27347;
  t28832 = t28807*t28107;
  t28833 = t28435 + t28831 + t28832;
  t28834 = t27293*t28833;
  t28835 = t28830 + t28834;
  t28837 = t27663*t27455*t28463;
  t28838 = t27666*t27455*t28463;
  t28839 = t28460 + t28837 + t28838;
  t28840 = t27493*t28839;
  t28841 = -1.*t27219*t28463*t27493;
  t28842 = t27205*t28463*t28117;
  t28843 = t28467 + t28841 + t28842;
  t28844 = t27219*t27455*t28843;
  t28845 = t28840 + t28844;
  t28847 = -1.*t27663*t27455*t28463;
  t28848 = -1.*t27666*t27455*t28463;
  t28849 = t28483 + t28847 + t28848;
  t28850 = t28849*t27500;
  t28851 = t27219*t28463*t27500;
  t28852 = -1.*t27205*t28463*t28127;
  t28853 = t28487 + t28851 + t28852;
  t28854 = t27219*t27455*t28853;
  t28855 = t28850 + t28854;
  t28857 = t27219*t28463*t27493;
  t28858 = -1.*t27205*t28463*t28117;
  t28859 = t28473 + t28857 + t28858;
  t28860 = t27500*t28859;
  t28861 = -1.*t27219*t28463*t27500;
  t28862 = t27205*t28463*t28127;
  t28863 = t28477 + t28861 + t28862;
  t28864 = t27493*t28863;
  t28865 = t28860 + t28864;
  t28870 = -1.*t27219*t27455*t28869;
  t28874 = t27205*t27455*t28873;
  t28875 = t28496 + t28870 + t28874;
  t28876 = t27510*t28875;
  t28877 = t28869*t27510;
  t28878 = t28873*t28137;
  t28879 = t28504 + t28877 + t28878;
  t28880 = t27219*t27455*t28879;
  t28881 = t28876 + t28880;
  t28883 = t27219*t27455*t28869;
  t28884 = -1.*t27205*t27455*t28873;
  t28885 = t28510 + t28883 + t28884;
  t28886 = t27526*t28885;
  t28887 = -1.*t28869*t27526;
  t28888 = -1.*t28873*t28147;
  t28889 = t28515 + t28887 + t28888;
  t28890 = t27219*t27455*t28889;
  t28891 = t28886 + t28890;
  t28893 = -1.*t28869*t27510;
  t28894 = -1.*t28873*t28137;
  t28895 = t28521 + t28893 + t28894;
  t28896 = t27526*t28895;
  t28897 = t28869*t27526;
  t28898 = t28873*t28147;
  t28899 = t28525 + t28897 + t28898;
  t28900 = t27510*t28899;
  t28901 = t28896 + t28900;
  t28903 = t27663*t27584*t28552;
  t28904 = t27666*t27584*t28552;
  t28905 = t28549 + t28903 + t28904;
  t28906 = t27606*t28905;
  t28907 = -1.*t27219*t28552*t27606;
  t28908 = t27205*t28552*t28157;
  t28909 = t28556 + t28907 + t28908;
  t28910 = t27219*t27584*t28909;
  t28911 = t28906 + t28910;
  t28913 = -1.*t27663*t27584*t28552;
  t28914 = -1.*t27666*t27584*t28552;
  t28915 = t28572 + t28913 + t28914;
  t28916 = t28915*t27613;
  t28917 = t27219*t28552*t27613;
  t28918 = -1.*t27205*t28552*t28167;
  t28919 = t28576 + t28917 + t28918;
  t28920 = t27219*t27584*t28919;
  t28921 = t28916 + t28920;
  t28923 = t27219*t28552*t27606;
  t28924 = -1.*t27205*t28552*t28157;
  t28925 = t28562 + t28923 + t28924;
  t28926 = t27613*t28925;
  t28927 = -1.*t27219*t28552*t27613;
  t28928 = t27205*t28552*t28167;
  t28929 = t28566 + t28927 + t28928;
  t28930 = t27606*t28929;
  t28931 = t28926 + t28930;
  t28936 = -1.*t27219*t27584*t28935;
  t28940 = t27205*t27584*t28939;
  t28941 = t28585 + t28936 + t28940;
  t28942 = t27555*t28941;
  t28943 = t28935*t27555;
  t28944 = t28939*t28177;
  t28945 = t28593 + t28943 + t28944;
  t28946 = t27219*t27584*t28945;
  t28947 = t28942 + t28946;
  t28949 = t27219*t27584*t28935;
  t28950 = -1.*t27205*t27584*t28939;
  t28951 = t28599 + t28949 + t28950;
  t28952 = t27568*t28951;
  t28953 = -1.*t28935*t27568;
  t28954 = -1.*t28939*t28187;
  t28955 = t28604 + t28953 + t28954;
  t28956 = t27219*t27584*t28955;
  t28957 = t28952 + t28956;
  t28959 = -1.*t28935*t27555;
  t28960 = -1.*t28939*t28177;
  t28961 = t28610 + t28959 + t28960;
  t28962 = t27568*t28961;
  t28963 = t28935*t27568;
  t28964 = t28939*t28187;
  t28965 = t28614 + t28963 + t28964;
  t28966 = t27555*t28965;
  t28967 = t28962 + t28966;
  t28969 = t28622*t28197;
  t28970 = t27663*t28625*t27722;
  t28971 = t27666*t28625*t27722;
  t28972 = t28969 + t28970 + t28971;
  t28974 = -1.*t27663*t28625*t27717;
  t28975 = -1.*t27666*t28625*t27717;
  t28976 = -1.*t28622*t27722;
  t28977 = t28974 + t28975 + t28976;
  t28979 = -1.*t27663*t28625*t27722;
  t28980 = -1.*t27666*t28625*t27722;
  t28981 = t28623 + t28979 + t28980;
  t28982 = t27219*t27717*t28981;
  t28983 = t27663*t28625*t27717;
  t28984 = t27666*t28625*t27717;
  t28985 = t28983 + t28984 + t28630;
  t28986 = t27219*t27722*t28985;
  t28987 = t28982 + t28986;
  t28989 = t27663*t27717*t28641;
  t28990 = t27666*t27717*t28641;
  t28991 = t28638 + t28989 + t28990;
  t28992 = t28991*t27730;
  t28993 = t27205*t28641*t28208;
  t28994 = -1.*t27219*t28641*t27730;
  t28995 = t28645 + t28993 + t28994;
  t28996 = t27219*t27717*t28995;
  t28997 = t28992 + t28996;
  t28999 = -1.*t27663*t27717*t28641;
  t29000 = -1.*t27666*t27717*t28641;
  t29001 = t28661 + t28999 + t29000;
  t29002 = t29001*t27738;
  t29003 = t27219*t28641*t27738;
  t29004 = -1.*t27205*t28641*t28218;
  t29005 = t28665 + t29003 + t29004;
  t29006 = t27219*t27717*t29005;
  t29007 = t29002 + t29006;
  t29009 = -1.*t27205*t28641*t28208;
  t29010 = t27219*t28641*t27730;
  t29011 = t28651 + t29009 + t29010;
  t29012 = t29011*t27738;
  t29013 = -1.*t27219*t28641*t27738;
  t29014 = t27205*t28641*t28218;
  t29015 = t28655 + t29013 + t29014;
  t29016 = t27730*t29015;
  t29017 = t29012 + t29016;
  t29022 = t27205*t27717*t29021;
  t29026 = -1.*t27219*t27717*t29025;
  t29027 = t28674 + t29022 + t29026;
  t29028 = t29027*t27646;
  t29029 = t29025*t27646;
  t29030 = t29021*t28228;
  t29031 = t28682 + t29029 + t29030;
  t29032 = t27219*t27717*t29031;
  t29033 = t29028 + t29032;
  t29035 = -1.*t27205*t27717*t29021;
  t29036 = t27219*t27717*t29025;
  t29037 = t28688 + t29035 + t29036;
  t29038 = t29037*t27659;
  t29039 = -1.*t29025*t27659;
  t29040 = -1.*t29021*t28238;
  t29041 = t28693 + t29039 + t29040;
  t29042 = t27219*t27717*t29041;
  t29043 = t29038 + t29042;
  t29045 = -1.*t29025*t27646;
  t29046 = -1.*t29021*t28228;
  t29047 = t28699 + t29045 + t29046;
  t29048 = t27659*t29047;
  t29049 = t29025*t27659;
  t29050 = t29021*t28238;
  t29051 = t28703 + t29049 + t29050;
  t29052 = t27646*t29051;
  t29053 = t29048 + t29052;
  t28028 = -14.82*t28027*t27219*t27205;
  t28033 = -10.1*t27219*t27234*t28032;
  t28037 = 10.1*t27219*t27273*t28036;
  t28041 = -2.85*t27219*t27382*t28040;
  t28048 = -1.18*t27219*t27678*t28047;
  t28052 = -2.85*t27219*t27455*t28051;
  t28059 = -1.18*t27219*t27683*t28058;
  t28063 = -2.85*t27219*t27584*t28062;
  t28070 = -1.18*t27219*t27688*t28069;
  t28080 = -1.39*t27424*t28079;
  t28090 = -1.39*t27431*t28089;
  t28100 = -0.28*t27293*t28099;
  t28110 = -0.28*t27347*t28109;
  t28120 = -1.39*t27493*t28119;
  t28130 = -1.39*t27500*t28129;
  t28140 = -0.28*t27510*t28139;
  t28150 = -0.28*t27526*t28149;
  t28160 = -1.39*t27606*t28159;
  t28170 = -1.39*t27613*t28169;
  t28180 = -0.28*t27555*t28179;
  t28190 = -0.28*t27568*t28189;
  t28194 = -2.85*t27219*t27717*t28193;
  t28201 = -1.18*t27219*t27722*t28200;
  t28211 = -1.39*t27730*t28210;
  t28221 = -1.39*t27738*t28220;
  t28231 = -0.28*t27646*t28230;
  t28241 = -0.28*t27659*t28240;
  t28242 = t28028 + t28033 + t28037 + t28041 + t28048 + t28052 + t28059 + t28063 + t28070 + t28080 + t28090 + t28100 + t28110 + t28120 + t28130 + t28140 + t28150 + t28160 + t28170 + t28180 + t28190 + t28194 + t28201 + t28211 + t28221 + t28231 + t28241;
  t29137 = 14.82*t28027*t27663*t28030;
  t29138 = -10.1*t28247*t28032;
  t29139 = -10.1*t28036*t28251;
  t29140 = -2.85*t28255*t28040;
  t29141 = -1.18*t28047*t28259;
  t29142 = -2.85*t28263*t28051;
  t29143 = -1.18*t28058*t28267;
  t29144 = -2.85*t28271*t28062;
  t29145 = -1.18*t28069*t28275;
  t29146 = -1.39*t28079*t28279;
  t29147 = -1.39*t28089*t28283;
  t29148 = -0.28*t28099*t28287;
  t29149 = -0.28*t28109*t28291;
  t29150 = -1.39*t28119*t28295;
  t29151 = -1.39*t28129*t28299;
  t29152 = -0.28*t28139*t28303;
  t29153 = -0.28*t28149*t28307;
  t29154 = -1.39*t28159*t28311;
  t29155 = -1.39*t28169*t28315;
  t29156 = -0.28*t28179*t28319;
  t29157 = -0.28*t28189*t28323;
  t29158 = -2.85*t28327*t28193;
  t29159 = -1.18*t28200*t28331;
  t29160 = -1.39*t28210*t28335;
  t29161 = -1.39*t28220*t28339;
  t29162 = -0.28*t28230*t28343;
  t29163 = -0.28*t28240*t28347;
  t29164 = t29137 + t29138 + t29139 + t29140 + t29141 + t29142 + t29143 + t29144 + t29145 + t29146 + t29147 + t29148 + t29149 + t29150 + t29151 + t29152 + t29153 + t29154 + t29155 + t29156 + t29157 + t29158 + t29159 + t29160 + t29161 + t29162 + t29163;
  t29504 = -0.0046*t27205;
  t28715 = -1.18*t27219*t27205*t27678*t28714;
  t28720 = -1.18*t27219*t27205*t27382*t28719;
  t28725 = -1.18*t27219*t27205*t27455*t28724;
  t28730 = -1.18*t27219*t27205*t27683*t28729;
  t28735 = -1.18*t27219*t27205*t27584*t28734;
  t28740 = -1.18*t27219*t27205*t27688*t28739;
  t28750 = -1.18*t27205*t28749;
  t28760 = -1.18*t27205*t28759;
  t28770 = -1.18*t27205*t28769;
  t28780 = -1.39*t27431*t28779;
  t28790 = -1.39*t27424*t28789;
  t28800 = -1.39*t27219*t27382*t28799;
  t28816 = -0.28*t27347*t28815;
  t28826 = -0.28*t27293*t28825;
  t28836 = -0.28*t27219*t27382*t28835;
  t28846 = -1.39*t27500*t28845;
  t28856 = -1.39*t27493*t28855;
  t28866 = -1.39*t27219*t27455*t28865;
  t28882 = -0.28*t27526*t28881;
  t28892 = -0.28*t27510*t28891;
  t28902 = -0.28*t27219*t27455*t28901;
  t28912 = -1.39*t27613*t28911;
  t28922 = -1.39*t27606*t28921;
  t28932 = -1.39*t27219*t27584*t28931;
  t28948 = -0.28*t27568*t28947;
  t28958 = -0.28*t27555*t28957;
  t28968 = -0.28*t27219*t27584*t28967;
  t28973 = -1.18*t27219*t27205*t27717*t28972;
  t28978 = -1.18*t27219*t27205*t27722*t28977;
  t28988 = -1.18*t27205*t28987;
  t28998 = -1.39*t27738*t28997;
  t29008 = -1.39*t27730*t29007;
  t29018 = -1.39*t27219*t27717*t29017;
  t29034 = -0.28*t27659*t29033;
  t29044 = -0.28*t27646*t29043;
  t29054 = -0.28*t27219*t27717*t29053;
  t29055 = t28715 + t28720 + t28725 + t28730 + t28735 + t28740 + t28750 + t28760 + t28770 + t28780 + t28790 + t28800 + t28816 + t28826 + t28836 + t28846 + t28856 + t28866 + t28882 + t28892 + t28902 + t28912 + t28922 + t28932 + t28948 + t28958 + t28968 + t28973 + t28978 + t28988 + t28998 + t29008 + t29018 + t29034 + t29044 + t29054;
  t29252 = -1.18*t27205*t28259*t28714;
  t29253 = -1.18*t27205*t28255*t28719;
  t29254 = -1.18*t27205*t28263*t28724;
  t29255 = -1.18*t27205*t28267*t28729;
  t29256 = -1.18*t27205*t28271*t28734;
  t29257 = -1.18*t27205*t28275*t28739;
  t29258 = 1.18*t27219*t28030*t28749;
  t29259 = 1.18*t27219*t28030*t28759;
  t29260 = 1.18*t27219*t28030*t28769;
  t29261 = -1.39*t28283*t28779;
  t29262 = -1.39*t28279*t28789;
  t29263 = -1.39*t28255*t28799;
  t29264 = -0.28*t28291*t28815;
  t29265 = -0.28*t28287*t28825;
  t29266 = -0.28*t28255*t28835;
  t29267 = -1.39*t28299*t28845;
  t29268 = -1.39*t28295*t28855;
  t29269 = -1.39*t28263*t28865;
  t29270 = -0.28*t28307*t28881;
  t29271 = -0.28*t28303*t28891;
  t29272 = -0.28*t28263*t28901;
  t29273 = -1.39*t28315*t28911;
  t29274 = -1.39*t28311*t28921;
  t29275 = -1.39*t28271*t28931;
  t29276 = -0.28*t28323*t28947;
  t29277 = -0.28*t28319*t28957;
  t29278 = -0.28*t28271*t28967;
  t29279 = -1.18*t27205*t28327*t28972;
  t29280 = -1.18*t27205*t28331*t28977;
  t29281 = 1.18*t27219*t28030*t28987;
  t29282 = -1.39*t28997*t28339;
  t29283 = -1.39*t28335*t29007;
  t29284 = -1.39*t28327*t29017;
  t29285 = -0.28*t28347*t29033;
  t29286 = -0.28*t28343*t29043;
  t29287 = -0.28*t28327*t29053;
  t29288 = t29252 + t29253 + t29254 + t29255 + t29256 + t29257 + t29258 + t29259 + t29260 + t29261 + t29262 + t29263 + t29264 + t29265 + t29266 + t29267 + t29268 + t29269 + t29270 + t29271 + t29272 + t29273 + t29274 + t29275 + t29276 + t29277 + t29278 + t29279 + t29280 + t29281 + t29282 + t29283 + t29284 + t29285 + t29286 + t29287;
  t29457 = -1.18*t27205*t28047*t28714;
  t29458 = -1.18*t27205*t28040*t28719;
  t29459 = -1.18*t27205*t28051*t28724;
  t29460 = -1.18*t27205*t28058*t28729;
  t29461 = -1.18*t27205*t28062*t28734;
  t29462 = -1.18*t27205*t28069*t28739;
  t29463 = -1.18*t28027*t27219*t28749;
  t29464 = -1.18*t28027*t27219*t28759;
  t29465 = -1.18*t28027*t27219*t28769;
  t29466 = -1.39*t28089*t28779;
  t29467 = -1.39*t28079*t28789;
  t29468 = -1.39*t28040*t28799;
  t29469 = -0.28*t28109*t28815;
  t29470 = -0.28*t28099*t28825;
  t29471 = -0.28*t28040*t28835;
  t29472 = -1.39*t28129*t28845;
  t29473 = -1.39*t28119*t28855;
  t29474 = -1.39*t28051*t28865;
  t29475 = -0.28*t28149*t28881;
  t29476 = -0.28*t28139*t28891;
  t29477 = -0.28*t28051*t28901;
  t29478 = -1.39*t28169*t28911;
  t29479 = -1.39*t28159*t28921;
  t29480 = -1.39*t28062*t28931;
  t29481 = -0.28*t28189*t28947;
  t29482 = -0.28*t28179*t28957;
  t29483 = -0.28*t28062*t28967;
  t29484 = -1.18*t27205*t28193*t28972;
  t29485 = -1.18*t27205*t28200*t28977;
  t29486 = -1.18*t28027*t27219*t28987;
  t29487 = -1.39*t28997*t28220;
  t29488 = -1.39*t28210*t29007;
  t29489 = -1.39*t28193*t29017;
  t29490 = -0.28*t28240*t29033;
  t29491 = -0.28*t28230*t29043;
  t29492 = -0.28*t28193*t29053;
  t29493 = t29457 + t29458 + t29459 + t29460 + t29461 + t29462 + t29463 + t29464 + t29465 + t29466 + t29467 + t29468 + t29469 + t29470 + t29471 + t29472 + t29473 + t29474 + t29475 + t29476 + t29477 + t29478 + t29479 + t29480 + t29481 + t29482 + t29483 + t29484 + t29485 + t29486 + t29487 + t29488 + t29489 + t29490 + t29491 + t29492;
  t29505 = 0.0017*t27111*t27424;
  t29506 = -0.0064*t22556*t27431;
  t29507 = -0.0032*t27200*t27293;
  t29508 = -0.0665*t27257*t27347;
  t29521 = 0.0017*t27447*t27493;
  t29522 = -0.0064*t27439*t27500;
  t29523 = -0.0032*t27461*t27510;
  t29524 = -0.0665*t27472*t27526;
  t29537 = 0.0017*t27541*t27606;
  t29538 = -0.0064*t27539*t27613;
  t29539 = -0.0032*t27544*t27555;
  t29540 = -0.0665*t27549*t27568;
  t29557 = 0.0017*t27632*t27730;
  t29558 = -0.0064*t27630*t27738;
  t29562 = -0.0032*t27635*t27646;
  t29563 = -0.0665*t27653*t27659;
  t27664 = Power(t27234,2);
  t27668 = Power(t27273,2);
  t27670 = Power(t27382,2);
  t27672 = Power(t27455,2);
  t27674 = Power(t27584,2);
  t27679 = Power(t27678,2);
  t27684 = Power(t27683,2);
  t27689 = Power(t27688,2);
  t27691 = Power(t27424,2);
  t27693 = Power(t27431,2);
  t27695 = Power(t27293,2);
  t27697 = Power(t27347,2);
  t27699 = Power(t27493,2);
  t27701 = Power(t27500,2);
  t27703 = Power(t27510,2);
  t27705 = Power(t27526,2);
  t27707 = Power(t27606,2);
  t27709 = Power(t27613,2);
  t27711 = Power(t27555,2);
  t27713 = Power(t27568,2);
  t27718 = Power(t27717,2);
  t27723 = Power(t27722,2);
  t27731 = Power(t27730,2);
  t27739 = Power(t27738,2);
  t27741 = Power(t27646,2);
  t27743 = Power(t27659,2);
  t28366 = -1.18*t27205*t28365;
  t28382 = -1.39*t27431*t28381;
  t28392 = -1.39*t27219*t27382*t28391;
  t28402 = -1.39*t27424*t28401;
  t28419 = -0.28*t27347*t28418;
  t28430 = -0.28*t27293*t28429;
  t28440 = -0.28*t27219*t27382*t28439;
  t28456 = -1.18*t27205*t28455;
  t28472 = -1.39*t27500*t28471;
  t28482 = -1.39*t27219*t27455*t28481;
  t28492 = -1.39*t27493*t28491;
  t28509 = -0.28*t27526*t28508;
  t28520 = -0.28*t27510*t28519;
  t28530 = -0.28*t27219*t27455*t28529;
  t28545 = -1.18*t27205*t28544;
  t28561 = -1.39*t27613*t28560;
  t28571 = -1.39*t27219*t27584*t28570;
  t28581 = -1.39*t27606*t28580;
  t28598 = -0.28*t27568*t28597;
  t28609 = -0.28*t27555*t28608;
  t28619 = -0.28*t27219*t27584*t28618;
  t28634 = -1.18*t27205*t28633;
  t28650 = -1.39*t28649*t27738;
  t28660 = -1.39*t27219*t27717*t28659;
  t28670 = -1.39*t27730*t28669;
  t28687 = -0.28*t27659*t28686;
  t28698 = -0.28*t27646*t28697;
  t28708 = -0.28*t27219*t27717*t28707;
  t28709 = t28366 + t28382 + t28392 + t28402 + t28419 + t28430 + t28440 + t28456 + t28472 + t28482 + t28492 + t28509 + t28520 + t28530 + t28545 + t28561 + t28571 + t28581 + t28598 + t28609 + t28619 + t28634 + t28650 + t28660 + t28670 + t28687 + t28698 + t28708;
  t29222 = 1.18*t27219*t28030*t28365;
  t29223 = -1.39*t28381*t28283;
  t29224 = -1.39*t28255*t28391;
  t29225 = -1.39*t28279*t28401;
  t29226 = -0.28*t28418*t28291;
  t29227 = -0.28*t28287*t28429;
  t29228 = -0.28*t28255*t28439;
  t29229 = 1.18*t27219*t28030*t28455;
  t29230 = -1.39*t28471*t28299;
  t29231 = -1.39*t28263*t28481;
  t29232 = -1.39*t28295*t28491;
  t29233 = -0.28*t28508*t28307;
  t29234 = -0.28*t28303*t28519;
  t29235 = -0.28*t28263*t28529;
  t29236 = 1.18*t27219*t28030*t28544;
  t29237 = -1.39*t28560*t28315;
  t29238 = -1.39*t28271*t28570;
  t29239 = -1.39*t28311*t28580;
  t29240 = -0.28*t28597*t28323;
  t29241 = -0.28*t28319*t28608;
  t29242 = -0.28*t28271*t28618;
  t29243 = 1.18*t27219*t28030*t28633;
  t29244 = -1.39*t28649*t28339;
  t29245 = -1.39*t28327*t28659;
  t29246 = -1.39*t28335*t28669;
  t29247 = -0.28*t28686*t28347;
  t29248 = -0.28*t28343*t28697;
  t29249 = -0.28*t28327*t28707;
  t29250 = t29222 + t29223 + t29224 + t29225 + t29226 + t29227 + t29228 + t29229 + t29230 + t29231 + t29232 + t29233 + t29234 + t29235 + t29236 + t29237 + t29238 + t29239 + t29240 + t29241 + t29242 + t29243 + t29244 + t29245 + t29246 + t29247 + t29248 + t29249;
  t29427 = -1.18*t28027*t27219*t28365;
  t29428 = -1.39*t28381*t28089;
  t29429 = -1.39*t28040*t28391;
  t29430 = -1.39*t28079*t28401;
  t29431 = -0.28*t28418*t28109;
  t29432 = -0.28*t28099*t28429;
  t29433 = -0.28*t28040*t28439;
  t29434 = -1.18*t28027*t27219*t28455;
  t29435 = -1.39*t28471*t28129;
  t29436 = -1.39*t28051*t28481;
  t29437 = -1.39*t28119*t28491;
  t29438 = -0.28*t28508*t28149;
  t29439 = -0.28*t28139*t28519;
  t29440 = -0.28*t28051*t28529;
  t29441 = -1.18*t28027*t27219*t28544;
  t29442 = -1.39*t28560*t28169;
  t29443 = -1.39*t28062*t28570;
  t29444 = -1.39*t28159*t28580;
  t29445 = -0.28*t28597*t28189;
  t29446 = -0.28*t28179*t28608;
  t29447 = -0.28*t28062*t28618;
  t29448 = -1.18*t28027*t27219*t28633;
  t29449 = -1.39*t28649*t28220;
  t29450 = -1.39*t28193*t28659;
  t29451 = -1.39*t28210*t28669;
  t29452 = -0.28*t28686*t28240;
  t29453 = -0.28*t28230*t28697;
  t29454 = -0.28*t28193*t28707;
  t29455 = t29427 + t29428 + t29429 + t29430 + t29431 + t29432 + t29433 + t29434 + t29435 + t29436 + t29437 + t29438 + t29439 + t29440 + t29441 + t29442 + t29443 + t29444 + t29445 + t29446 + t29447 + t29448 + t29449 + t29450 + t29451 + t29452 + t29453 + t29454;
  t29768 = 0.0017*t27111*t28073;
  t29784 = 0.0017*t27447*t28113;
  t29800 = 0.0017*t27541*t28153;
  t29769 = -0.0064*t22556*t28083;
  t29770 = -0.0032*t27200*t28093;
  t29771 = -0.0665*t27257*t28103;
  t29785 = -0.0064*t27439*t28123;
  t29786 = -0.0032*t27461*t28133;
  t29787 = -0.0665*t27472*t28143;
  t29801 = -0.0064*t27539*t28163;
  t29802 = -0.0032*t27544*t28173;
  t29803 = -0.0665*t27549*t28183;
  t29820 = 0.0017*t28204*t27632;
  t29822 = -0.0064*t27630*t28214;
  t29825 = -0.0032*t27635*t28224;
  t29826 = -0.0665*t27653*t28234;
  t29603 = 0.002*t27219*t27234*t27273;
  t29604 = -0.0299*t27219*t28044*t27678;
  t29605 = -0.0431*t27219*t27382*t27678;
  t29606 = -0.0431*t27219*t27455*t27683;
  t29607 = -0.0299*t27219*t28055*t27683;
  t29608 = -0.0299*t27219*t28066*t27688;
  t29609 = -0.0431*t27219*t27584*t27688;
  t29610 = -0.0017*t28073*t27424;
  t29611 = -0.0064*t28083*t27431;
  t29612 = -0.0032*t28093*t27293;
  t29613 = -0.0665*t28103*t27347;
  t29614 = -0.0017*t28113*t27493;
  t29615 = -0.0064*t28123*t27500;
  t29616 = -0.0032*t28133*t27510;
  t29617 = -0.0665*t28143*t27526;
  t29618 = -0.0017*t28153*t27606;
  t29619 = -0.0064*t28163*t27613;
  t29620 = -0.0032*t28173*t27555;
  t29621 = -0.0665*t28183*t27568;
  t29622 = -1.18*t28365*t28749;
  t29623 = -1.18*t28455*t28759;
  t29624 = -1.18*t28544*t28769;
  t29625 = -1.39*t28381*t28779;
  t29626 = -1.39*t28401*t28789;
  t29627 = -1.39*t28391*t28799;
  t29628 = -0.28*t28418*t28815;
  t29629 = -0.28*t28429*t28825;
  t29630 = -0.28*t28439*t28835;
  t29631 = -1.39*t28471*t28845;
  t29632 = -1.39*t28491*t28855;
  t29633 = -1.39*t28481*t28865;
  t29634 = -0.28*t28508*t28881;
  t29635 = -0.28*t28519*t28891;
  t29636 = -0.28*t28529*t28901;
  t29637 = -1.39*t28560*t28911;
  t29638 = -1.39*t28580*t28921;
  t29639 = -1.39*t28570*t28931;
  t29640 = -0.28*t28597*t28947;
  t29641 = -0.28*t28608*t28957;
  t29642 = -0.28*t28618*t28967;
  t29643 = -0.0431*t27219*t27717*t27722;
  t29644 = -0.0299*t27219*t28197*t27722;
  t29645 = -1.18*t28633*t28987;
  t29646 = -0.0017*t28204*t27730;
  t29647 = -0.0064*t28214*t27738;
  t29648 = -1.39*t28649*t28997;
  t29649 = -1.39*t28669*t29007;
  t29650 = -1.39*t28659*t29017;
  t29651 = -0.0032*t28224*t27646;
  t29652 = -0.0665*t28234*t27659;
  t29653 = -0.28*t28686*t29033;
  t29654 = -0.28*t28697*t29043;
  t29655 = -0.28*t28707*t29053;
  t29656 = t29603 + t29604 + t29605 + t29606 + t29607 + t29608 + t29609 + t29610 + t29611 + t29612 + t29613 + t29614 + t29615 + t29616 + t29617 + t29618 + t29619 + t29620 + t29621 + t29622 + t29623 + t29624 + t29625 + t29626 + t29627 + t29628 + t29629 + t29630 + t29631 + t29632 + t29633 + t29634 + t29635 + t29636 + t29637 + t29638 + t29639 + t29640 + t29641 + t29642 + t29643 + t29644 + t29645 + t29646 + t29647 + t29648 + t29649 + t29650 + t29651 + t29652 + t29653 + t29654 + t29655;
  t27792 = -1.18*t27219*t27791*t27382;
  t27809 = -1.39*t27219*t27808*t27382;
  t27823 = -0.28*t27219*t27822*t27382;
  t27835 = -1.18*t27219*t27834*t27455;
  t27852 = -1.39*t27219*t27851*t27455;
  t27866 = -0.28*t27219*t27865*t27455;
  t27875 = -1.18*t27219*t27874*t27584;
  t27892 = -1.39*t27219*t27891*t27584;
  t27906 = -0.28*t27219*t27905*t27584;
  t27910 = -1.18*t27219*t27909*t27678;
  t27914 = -1.18*t27219*t27913*t27683;
  t27917 = -1.18*t27219*t27916*t27688;
  t27921 = -1.39*t22556*t27920*t27424;
  t27925 = 1.39*t27924*t27111*t27431;
  t27929 = -0.28*t27928*t27257*t27293;
  t27933 = -0.28*t27932*t27200*t27347;
  t27937 = -1.39*t27439*t27936*t27493;
  t27941 = 1.39*t27940*t27447*t27500;
  t27945 = -0.28*t27944*t27472*t27510;
  t27949 = -0.28*t27948*t27461*t27526;
  t27953 = -1.39*t27539*t27952*t27606;
  t27957 = 1.39*t27956*t27541*t27613;
  t27961 = -0.28*t27960*t27549*t27555;
  t27965 = -0.28*t27964*t27544*t27568;
  t27974 = -1.18*t27219*t27717*t27973;
  t27977 = -1.18*t27219*t27976*t27722;
  t27988 = -1.39*t27630*t27987*t27730;
  t27992 = 1.39*t27991*t27632*t27738;
  t28002 = -1.39*t27219*t27717*t28001;
  t28010 = -0.28*t28009*t27653*t27646;
  t28014 = -0.28*t28013*t27635*t27659;
  t28024 = -0.28*t27219*t27717*t28023;
  t28025 = t27792 + t27809 + t27823 + t27835 + t27852 + t27866 + t27875 + t27892 + t27906 + t27910 + t27914 + t27917 + t27921 + t27925 + t27929 + t27933 + t27937 + t27941 + t27945 + t27949 + t27953 + t27957 + t27961 + t27965 + t27974 + t27977 + t27988 + t27992 + t28002 + t28010 + t28014 + t28024;
  t29967 = -0.0064*t27367;
  t29984 = -0.0064*t27445;
  t30001 = -0.0064*t27577;
  t30019 = -0.0064*t27753;
  t29969 = -0.0017*t27371;
  t29972 = Power(t27257,2);
  t29973 = -0.0665*t29972;
  t29974 = Power(t27200,2);
  t29975 = -0.0032*t29974;
  t29986 = -0.0017*t27448;
  t29989 = Power(t27472,2);
  t29990 = -0.0665*t29989;
  t29991 = Power(t27461,2);
  t29992 = -0.0032*t29991;
  t30003 = -0.0017*t27579;
  t30006 = Power(t27549,2);
  t30007 = -0.0665*t30006;
  t30008 = Power(t27544,2);
  t30009 = -0.0032*t30008;
  t30021 = -0.0017*t27755;
  t30024 = Power(t27653,2);
  t30025 = -0.0665*t30024;
  t30026 = Power(t27635,2);
  t30027 = -0.0032*t30026;
  t29335 = -1.18*t27791*t28040;
  t29336 = -1.39*t27808*t28040;
  t29337 = -0.28*t27822*t28040;
  t29338 = -1.18*t27909*t28047;
  t29339 = -1.18*t27834*t28051;
  t29340 = -1.39*t27851*t28051;
  t29341 = -0.28*t27865*t28051;
  t29342 = -1.18*t27913*t28058;
  t29343 = -1.18*t27874*t28062;
  t29344 = -1.39*t27891*t28062;
  t29345 = -0.28*t27905*t28062;
  t29346 = -1.18*t27916*t28069;
  t29347 = -1.39*t22556*t27920*t28079;
  t29348 = 1.39*t27924*t27111*t28089;
  t29349 = -0.28*t27928*t27257*t28099;
  t29350 = -0.28*t27932*t27200*t28109;
  t29351 = -1.39*t27439*t27936*t28119;
  t29352 = 1.39*t27940*t27447*t28129;
  t29353 = -0.28*t27944*t27472*t28139;
  t29354 = -0.28*t27948*t27461*t28149;
  t29355 = -1.39*t27539*t27952*t28159;
  t29356 = 1.39*t27956*t27541*t28169;
  t29357 = -0.28*t27960*t27549*t28179;
  t29358 = -0.28*t27964*t27544*t28189;
  t29359 = -1.18*t27973*t28193;
  t29360 = -1.18*t27976*t28200;
  t29361 = -1.39*t27630*t27987*t28210;
  t29362 = -1.39*t28193*t28001;
  t29363 = 1.39*t27991*t27632*t28220;
  t29364 = -0.28*t28193*t28023;
  t29365 = -0.28*t28009*t27653*t28230;
  t29366 = -0.28*t28013*t27635*t28240;
  t29367 = t29335 + t29336 + t29337 + t29338 + t29339 + t29340 + t29341 + t29342 + t29343 + t29344 + t29345 + t29346 + t29347 + t29348 + t29349 + t29350 + t29351 + t29352 + t29353 + t29354 + t29355 + t29356 + t29357 + t29358 + t29359 + t29360 + t29361 + t29362 + t29363 + t29364 + t29365 + t29366;
  t29102 = -1.18*t27791*t28255;
  t29103 = -1.39*t27808*t28255;
  t29104 = -0.28*t27822*t28255;
  t29105 = -1.18*t27909*t28259;
  t29106 = -1.18*t27834*t28263;
  t29107 = -1.39*t27851*t28263;
  t29108 = -0.28*t27865*t28263;
  t29109 = -1.18*t27913*t28267;
  t29110 = -1.18*t27874*t28271;
  t29111 = -1.39*t27891*t28271;
  t29112 = -0.28*t27905*t28271;
  t29113 = -1.18*t27916*t28275;
  t29114 = -1.39*t22556*t27920*t28279;
  t29115 = 1.39*t27924*t27111*t28283;
  t29116 = -0.28*t27928*t27257*t28287;
  t29117 = -0.28*t27932*t27200*t28291;
  t29118 = -1.39*t27439*t27936*t28295;
  t29119 = 1.39*t27940*t27447*t28299;
  t29120 = -0.28*t27944*t27472*t28303;
  t29121 = -0.28*t27948*t27461*t28307;
  t29122 = -1.39*t27539*t27952*t28311;
  t29123 = 1.39*t27956*t27541*t28315;
  t29124 = -0.28*t27960*t27549*t28319;
  t29125 = -0.28*t27964*t27544*t28323;
  t29126 = -1.18*t27973*t28327;
  t29127 = -1.18*t27976*t28331;
  t29128 = -1.39*t27630*t27987*t28335;
  t29129 = -1.39*t28327*t28001;
  t29130 = 1.39*t27991*t27632*t28339;
  t29131 = -0.28*t28327*t28023;
  t29132 = -0.28*t28009*t27653*t28343;
  t29133 = -0.28*t28013*t27635*t28347;
  t29134 = t29102 + t29103 + t29104 + t29105 + t29106 + t29107 + t29108 + t29109 + t29110 + t29111 + t29112 + t29113 + t29114 + t29115 + t29116 + t29117 + t29118 + t29119 + t29120 + t29121 + t29122 + t29123 + t29124 + t29125 + t29126 + t29127 + t29128 + t29129 + t29130 + t29131 + t29132 + t29133;
  t29831 = 1.39*t27924*t27111*t28381;
  t29832 = -1.39*t27808*t28391;
  t29833 = -1.39*t22556*t27920*t28401;
  t29834 = -0.28*t27932*t27200*t28418;
  t29835 = -0.28*t27928*t27257*t28429;
  t29836 = -0.28*t27822*t28439;
  t29837 = 1.39*t27940*t27447*t28471;
  t29838 = -1.39*t27851*t28481;
  t29839 = -1.39*t27439*t27936*t28491;
  t29840 = -0.28*t27948*t27461*t28508;
  t29841 = -0.28*t27944*t27472*t28519;
  t29842 = -0.28*t27865*t28529;
  t29843 = 1.39*t27956*t27541*t28560;
  t29844 = -1.39*t27891*t28570;
  t29845 = -1.39*t27539*t27952*t28580;
  t29846 = -0.28*t27964*t27544*t28597;
  t29847 = -0.28*t27960*t27549*t28608;
  t29848 = -0.28*t27905*t28618;
  t29849 = 1.39*t27991*t28649*t27632;
  t29850 = -1.39*t28001*t28659;
  t29851 = -1.39*t27630*t27987*t28669;
  t29852 = -0.28*t28013*t27635*t28686;
  t29853 = -0.28*t28009*t27653*t28697;
  t29854 = -0.28*t28023*t28707;
  t29855 = t29768 + t29784 + t29800 + t29769 + t29770 + t29771 + t29785 + t29786 + t29787 + t29801 + t29802 + t29803 + t29831 + t29832 + t29833 + t29834 + t29835 + t29836 + t29837 + t29838 + t29839 + t29840 + t29841 + t29842 + t29843 + t29844 + t29845 + t29846 + t29847 + t29848 + t29820 + t29849 + t29822 + t29850 + t29851 + t29825 + t29826 + t29852 + t29853 + t29854;
  t29568 = -0.2724*t27205;
  t29569 = -1.18*t27909*t27205*t28714;
  t29570 = -1.18*t27791*t27205*t28719;
  t29571 = -1.18*t27834*t27205*t28724;
  t29572 = -1.18*t27913*t27205*t28729;
  t29573 = -1.18*t27874*t27205*t28734;
  t29574 = -1.18*t27916*t27205*t28739;
  t29575 = 1.39*t27924*t27111*t28779;
  t29576 = -1.39*t22556*t27920*t28789;
  t29577 = -1.39*t27808*t28799;
  t29578 = -0.28*t27932*t27200*t28815;
  t29579 = -0.28*t27928*t27257*t28825;
  t29580 = -0.28*t27822*t28835;
  t29581 = 1.39*t27940*t27447*t28845;
  t29582 = -1.39*t27439*t27936*t28855;
  t29583 = -1.39*t27851*t28865;
  t29584 = -0.28*t27948*t27461*t28881;
  t29585 = -0.28*t27944*t27472*t28891;
  t29586 = -0.28*t27865*t28901;
  t29587 = 1.39*t27956*t27541*t28911;
  t29588 = -1.39*t27539*t27952*t28921;
  t29589 = -1.39*t27891*t28931;
  t29590 = -0.28*t27964*t27544*t28947;
  t29591 = -0.28*t27960*t27549*t28957;
  t29592 = -0.28*t27905*t28967;
  t29593 = -1.18*t27205*t27973*t28972;
  t29594 = -1.18*t27205*t27976*t28977;
  t29595 = 1.39*t27991*t27632*t28997;
  t29596 = -1.39*t27630*t27987*t29007;
  t29597 = -1.39*t28001*t29017;
  t29598 = -0.28*t28013*t27635*t29033;
  t29599 = -0.28*t28009*t27653*t29043;
  t29600 = -0.28*t28023*t29053;
  t29601 = t29568 + t29569 + t29570 + t29505 + t29506 + t29507 + t29508 + t29571 + t29572 + t29521 + t29522 + t29523 + t29524 + t29573 + t29574 + t29537 + t29538 + t29539 + t29540 + t29575 + t29576 + t29577 + t29578 + t29579 + t29580 + t29581 + t29582 + t29583 + t29584 + t29585 + t29586 + t29587 + t29588 + t29589 + t29590 + t29591 + t29592 + t29593 + t29594 + t29557 + t29558 + t29595 + t29596 + t29597 + t29562 + t29563 + t29598 + t29599 + t29600;
  t27747 = 0.0417*t27630*t27730;
  t27758 = -1.39*t27219*t27717*t27757;
  t27759 = 0.0417*t27632*t27738;
  t27763 = -0.28*t27762*t27646;
  t27778 = -0.28*t27219*t27717*t27777;
  t27779 = t27747 + t27758 + t27759 + t27763 + t27778;
  t30020 = 0.0417*t27753*t27987;
  t30022 = -0.0417*t27991*t27755;
  t30023 = -1.39*t27757*t28001;
  t30028 = -0.28*t28009*t27653*t27762;
  t30029 = -0.28*t27777*t28023;
  t30030 = -0.0046 + t30019 + t30020 + t30021 + t30022 + t30023 + t30025 + t30027 + t30028 + t30029;
  t29324 = -1.39*t28193*t27757;
  t29325 = 0.0417*t27630*t28210;
  t29326 = 0.0417*t27632*t28220;
  t29327 = -0.28*t28193*t27777;
  t29328 = -0.28*t27762*t28230;
  t29329 = t29324 + t29325 + t29326 + t29327 + t29328;
  t29091 = -1.39*t28327*t27757;
  t29092 = 0.0417*t27630*t28335;
  t29093 = 0.0417*t27632*t28339;
  t29094 = -0.28*t28327*t27777;
  t29095 = -0.28*t27762*t28343;
  t29096 = t29091 + t29092 + t29093 + t29094 + t29095;
  t29821 = 0.0417*t28649*t27632;
  t29823 = -1.39*t27757*t28659;
  t29824 = 0.0417*t27630*t28669;
  t29827 = -0.28*t27762*t28697;
  t29828 = -0.28*t27777*t28707;
  t29829 = t29820 + t29821 + t29822 + t29823 + t29824 + t29825 + t29826 + t29827 + t29828;
  t29559 = 0.0417*t27632*t28997;
  t29560 = 0.0417*t27630*t29007;
  t29561 = -1.39*t27757*t29017;
  t29564 = -0.28*t27762*t29043;
  t29565 = -0.28*t27777*t29053;
  t29566 = t29504 + t29557 + t29558 + t29559 + t29560 + t29561 + t29562 + t29563 + t29564 + t29565;
  t30014 = -0.28*t27629*t28009*t27653;
  t30015 = -0.28*t28013*t27650*t27635;
  t30016 = t30014 + t30015;
  t27647 = -0.28*t27629*t27646;
  t27660 = -0.28*t27650*t27659;
  t27661 = t27647 + t27660;
  t29331 = -0.28*t27629*t28230;
  t29332 = -0.28*t27650*t28240;
  t29333 = t29331 + t29332;
  t29098 = -0.28*t27629*t28343;
  t29099 = -0.28*t27650*t28347;
  t29100 = t29098 + t29099;
  t29812 = -0.0098*t27722;
  t29813 = -0.28*t27650*t28686;
  t29814 = -0.28*t27629*t28697;
  t29815 = t29812 + t29813 + t29814;
  t29549 = -0.0098*t27219*t27717;
  t29550 = -0.28*t27650*t29033;
  t29551 = -0.28*t27629*t29043;
  t29552 = t29549 + t29550 + t29551;
  t29968 = -0.0417*t27367*t27920;
  t29970 = 0.0417*t27924*t27371;
  t29971 = -1.39*t27375*t27808;
  t29976 = -0.28*t27932*t27200*t27435;
  t29977 = -0.28*t27411*t27822;
  t29978 = -0.0046 + t29967 + t29968 + t29969 + t29970 + t29971 + t29973 + t29975 + t29976 + t29977;
  t27383 = -1.39*t27219*t27375*t27382;
  t27414 = -0.28*t27219*t27411*t27382;
  t27425 = -0.0417*t22556*t27424;
  t27432 = -0.0417*t27111*t27431;
  t27436 = -0.28*t27435*t27347;
  t27437 = t27383 + t27414 + t27425 + t27432 + t27436;
  t29295 = -1.39*t27375*t28040;
  t29296 = -0.28*t27411*t28040;
  t29297 = -0.0417*t22556*t28079;
  t29298 = -0.0417*t27111*t28089;
  t29299 = -0.28*t27435*t28109;
  t29300 = t29295 + t29296 + t29297 + t29298 + t29299;
  t29062 = -1.39*t27375*t28255;
  t29063 = -0.28*t27411*t28255;
  t29064 = -0.0417*t22556*t28279;
  t29065 = -0.0417*t27111*t28283;
  t29066 = -0.28*t27435*t28291;
  t29067 = t29062 + t29063 + t29064 + t29065 + t29066;
  t29772 = -0.0417*t27111*t28381;
  t29773 = -1.39*t27375*t28391;
  t29774 = -0.0417*t22556*t28401;
  t29775 = -0.28*t27435*t28418;
  t29776 = -0.28*t27411*t28439;
  t29777 = t29768 + t29769 + t29770 + t29771 + t29772 + t29773 + t29774 + t29775 + t29776;
  t29509 = -0.0417*t27111*t28779;
  t29510 = -0.0417*t22556*t28789;
  t29511 = -1.39*t27375*t28799;
  t29512 = -0.28*t27435*t28815;
  t29513 = -0.28*t27411*t28835;
  t29514 = t29504 + t29505 + t29506 + t29507 + t29508 + t29509 + t29510 + t29511 + t29512 + t29513;
  t29963 = -0.28*t22466*t27928*t27257;
  t29964 = -0.28*t27932*t27313*t27200;
  t29965 = t29963 + t29964;
  t27301 = -0.28*t22466*t27293;
  t27348 = -0.28*t27313*t27347;
  t27352 = t27301 + t27348;
  t29291 = -0.28*t22466*t28099;
  t29292 = -0.28*t27313*t28109;
  t29293 = t29291 + t29292;
  t29058 = -0.28*t22466*t28287;
  t29059 = -0.28*t27313*t28291;
  t29060 = t29058 + t29059;
  t29763 = -0.0098*t27678;
  t29764 = -0.28*t27313*t28418;
  t29765 = -0.28*t22466*t28429;
  t29766 = t29763 + t29764 + t29765;
  t29499 = -0.0098*t27219*t27382;
  t29500 = -0.28*t27313*t28815;
  t29501 = -0.28*t22466*t28825;
  t29502 = t29499 + t29500 + t29501;
  t29985 = -0.0417*t27445*t27936;
  t29987 = 0.0417*t27940*t27448;
  t29988 = -1.39*t27450*t27851;
  t29993 = -0.28*t27944*t27472*t27504;
  t29994 = -0.28*t27486*t27865;
  t29995 = -0.0046 + t29984 + t29985 + t29986 + t29987 + t29988 + t29990 + t29992 + t29993 + t29994;
  t27456 = -1.39*t27219*t27450*t27455;
  t27487 = -0.28*t27219*t27486*t27455;
  t27494 = -0.0417*t27439*t27493;
  t27501 = -0.0417*t27447*t27500;
  t27511 = -0.28*t27504*t27510;
  t27512 = t27456 + t27487 + t27494 + t27501 + t27511;
  t29302 = -1.39*t27450*t28051;
  t29303 = -0.28*t27486*t28051;
  t29304 = -0.0417*t27439*t28119;
  t29305 = -0.0417*t27447*t28129;
  t29306 = -0.28*t27504*t28139;
  t29307 = t29302 + t29303 + t29304 + t29305 + t29306;
  t29069 = -1.39*t27450*t28263;
  t29070 = -0.28*t27486*t28263;
  t29071 = -0.0417*t27439*t28295;
  t29072 = -0.0417*t27447*t28299;
  t29073 = -0.28*t27504*t28303;
  t29074 = t29069 + t29070 + t29071 + t29072 + t29073;
  t29788 = -0.0417*t27447*t28471;
  t29789 = -1.39*t27450*t28481;
  t29790 = -0.0417*t27439*t28491;
  t29791 = -0.28*t27504*t28519;
  t29792 = -0.28*t27486*t28529;
  t29793 = t29784 + t29785 + t29786 + t29787 + t29788 + t29789 + t29790 + t29791 + t29792;
  t29525 = -0.0417*t27447*t28845;
  t29526 = -0.0417*t27439*t28855;
  t29527 = -1.39*t27450*t28865;
  t29528 = -0.28*t27504*t28891;
  t29529 = -0.28*t27486*t28901;
  t29530 = t29504 + t29521 + t29522 + t29523 + t29524 + t29525 + t29526 + t29527 + t29528 + t29529;
  t29980 = -0.28*t27516*t27944*t27472;
  t29981 = -0.28*t27948*t27520*t27461;
  t29982 = t29980 + t29981;
  t27517 = -0.28*t27516*t27510;
  t27527 = -0.28*t27520*t27526;
  t27528 = t27517 + t27527;
  t29309 = -0.28*t27516*t28139;
  t29310 = -0.28*t27520*t28149;
  t29311 = t29309 + t29310;
  t29076 = -0.28*t27516*t28303;
  t29077 = -0.28*t27520*t28307;
  t29078 = t29076 + t29077;
  t29779 = -0.0098*t27683;
  t29780 = -0.28*t27520*t28508;
  t29781 = -0.28*t27516*t28519;
  t29782 = t29779 + t29780 + t29781;
  t29516 = -0.0098*t27219*t27455;
  t29517 = -0.28*t27520*t28881;
  t29518 = -0.28*t27516*t28891;
  t29519 = t29516 + t29517 + t29518;
  t30002 = 0.0417*t27577*t27952;
  t30004 = -0.0417*t27956*t27579;
  t30005 = -1.39*t27581*t27891;
  t30010 = -0.28*t27964*t27544*t27617;
  t30011 = -0.28*t27599*t27905;
  t30012 = -0.0046 + t30001 + t30002 + t30003 + t30004 + t30005 + t30007 + t30009 + t30010 + t30011;
  t27585 = -1.39*t27219*t27581*t27584;
  t27600 = -0.28*t27219*t27599*t27584;
  t27607 = 0.0417*t27539*t27606;
  t27614 = 0.0417*t27541*t27613;
  t27618 = -0.28*t27617*t27568;
  t27619 = t27585 + t27600 + t27607 + t27614 + t27618;
  t29317 = -1.39*t27581*t28062;
  t29318 = -0.28*t27599*t28062;
  t29319 = 0.0417*t27539*t28159;
  t29320 = 0.0417*t27541*t28169;
  t29321 = -0.28*t27617*t28189;
  t29322 = t29317 + t29318 + t29319 + t29320 + t29321;
  t29084 = -1.39*t27581*t28271;
  t29085 = -0.28*t27599*t28271;
  t29086 = 0.0417*t27539*t28311;
  t29087 = 0.0417*t27541*t28315;
  t29088 = -0.28*t27617*t28323;
  t29089 = t29084 + t29085 + t29086 + t29087 + t29088;
  t29804 = 0.0417*t27541*t28560;
  t29805 = -1.39*t27581*t28570;
  t29806 = 0.0417*t27539*t28580;
  t29807 = -0.28*t27617*t28597;
  t29808 = -0.28*t27599*t28618;
  t29809 = t29800 + t29801 + t29802 + t29803 + t29804 + t29805 + t29806 + t29807 + t29808;
  t29541 = 0.0417*t27541*t28911;
  t29542 = 0.0417*t27539*t28921;
  t29543 = -1.39*t27581*t28931;
  t29544 = -0.28*t27617*t28947;
  t29545 = -0.28*t27599*t28967;
  t29546 = t29504 + t29537 + t29538 + t29539 + t29540 + t29541 + t29542 + t29543 + t29544 + t29545;
  t29997 = -0.28*t27538*t27960*t27549;
  t29998 = -0.28*t27964*t27559*t27544;
  t29999 = t29997 + t29998;
  t27556 = -0.28*t27538*t27555;
  t27569 = -0.28*t27559*t27568;
  t27570 = t27556 + t27569;
  t29313 = -0.28*t27538*t28179;
  t29314 = -0.28*t27559*t28189;
  t29315 = t29313 + t29314;
  t29080 = -0.28*t27538*t28319;
  t29081 = -0.28*t27559*t28323;
  t29082 = t29080 + t29081;
  t29795 = -0.0098*t27688;
  t29796 = -0.28*t27559*t28597;
  t29797 = -0.28*t27538*t28608;
  t29798 = t29795 + t29796 + t29797;
  t29532 = -0.0098*t27219*t27584;
  t29533 = -0.28*t27559*t28947;
  t29534 = -0.28*t27538*t28957;
  t29535 = t29532 + t29533 + t29534;
  p_output1[0]=(-10.1*t27663*t27664 - 14.82*t27666 - 10.1*t27663*t27668 - 2.85*t27663*t27670 - 2.85*t27663*t27672 - 2.85*t27663*t27674 - 1.18*t27663*t27679 - 1.18*t27663*t27684 - 1.18*t27663*t27689 - 1.39*t27691 - 1.39*t27693 - 0.28*t27695 - 0.28*t27697 - 1.39*t27699 - 1.39*t27701 - 0.28*t27703 - 0.28*t27705 - 1.39*t27707 - 1.39*t27709 - 0.28*t27711 - 0.28*t27713 - 2.85*t27663*t27718 - 1.18*t27663*t27723 - 1.39*t27731 - 1.39*t27739 - 0.28*t27741 - 0.28*t27743)*var2[0] + t28349*var2[1] + t28242*var2[2] + t29055*var2[3] + t28709*var2[4] + t28025*var2[5] + t27779*var2[6] + t27661*var2[7] + t27437*var2[9] + t27352*var2[10] + t27512*var2[12] + t27528*var2[13] + t27619*var2[15] + t27570*var2[16];
  p_output1[1]=t28349*var2[0] + (-14.82*t27663*Power(t28030,2) - 10.1*Power(t28247,2) - 10.1*Power(t28251,2) - 2.85*Power(t28255,2) - 1.18*Power(t28259,2) - 2.85*Power(t28263,2) - 1.18*Power(t28267,2) - 2.85*Power(t28271,2) - 1.18*Power(t28275,2) - 1.39*Power(t28279,2) - 1.39*Power(t28283,2) - 0.28*Power(t28287,2) - 0.28*Power(t28291,2) - 1.39*Power(t28295,2) - 1.39*Power(t28299,2) - 0.28*Power(t28303,2) - 0.28*Power(t28307,2) - 1.39*Power(t28311,2) - 1.39*Power(t28315,2) - 0.28*Power(t28319,2) - 0.28*Power(t28323,2) - 2.85*Power(t28327,2) - 1.18*Power(t28331,2) - 1.39*Power(t28335,2) - 1.39*Power(t28339,2) - 0.28*Power(t28343,2) - 0.28*Power(t28347,2))*var2[1] + t29164*var2[2] + t29288*var2[3] + t29250*var2[4] + t29134*var2[5] + t29096*var2[6] + t29100*var2[7] + t29067*var2[9] + t29060*var2[10] + t29074*var2[12] + t29078*var2[13] + t29089*var2[15] + t29082*var2[16];
  p_output1[2]=t28242*var2[0] + t29164*var2[1] + (-14.82*t27663*Power(t28027,2) - 10.1*Power(t28032,2) - 10.1*Power(t28036,2) - 2.85*Power(t28040,2) - 1.18*Power(t28047,2) - 2.85*Power(t28051,2) - 1.18*Power(t28058,2) - 2.85*Power(t28062,2) - 1.18*Power(t28069,2) - 1.39*Power(t28079,2) - 1.39*Power(t28089,2) - 0.28*Power(t28099,2) - 0.28*Power(t28109,2) - 1.39*Power(t28119,2) - 1.39*Power(t28129,2) - 0.28*Power(t28139,2) - 0.28*Power(t28149,2) - 1.39*Power(t28159,2) - 1.39*Power(t28169,2) - 0.28*Power(t28179,2) - 0.28*Power(t28189,2) - 2.85*Power(t28193,2) - 1.18*Power(t28200,2) - 1.39*Power(t28210,2) - 1.39*Power(t28220,2) - 0.28*Power(t28230,2) - 0.28*Power(t28240,2))*var2[2] + t29493*var2[3] + t29455*var2[4] + t29367*var2[5] + t29329*var2[6] + t29333*var2[7] + t29300*var2[9] + t29293*var2[10] + t29307*var2[12] + t29311*var2[13] + t29322*var2[15] + t29315*var2[16];
  p_output1[3]=t29055*var2[0] + t29288*var2[1] + t29493*var2[2] + (-0.141*t27663*t27664 - 0.2724*t27666 - 0.143*t27663*t27668 - 0.0431*t27663*t27670 - 0.0431*t27663*t27672 - 0.0431*t27663*t27674 - 0.0299*t27663*t27679 - 0.0299*t27663*t27684 - 0.0299*t27663*t27689 - 0.0017*t27691 - 0.0064*t27693 - 0.0032*t27695 - 0.0665*t27697 - 0.0017*t27699 - 0.0064*t27701 - 0.0032*t27703 - 0.0665*t27705 - 0.0017*t27707 - 0.0064*t27709 - 0.0032*t27711 - 0.0665*t27713 - 0.0431*t27663*t27718 - 0.0299*t27663*t27723 - 0.0017*t27731 - 0.0064*t27739 - 0.0032*t27741 - 0.0665*t27743 - 1.18*t27666*Power(t28714,2) - 1.18*t27666*Power(t28719,2) - 1.18*t27666*Power(t28724,2) - 1.18*t27666*Power(t28729,2) - 1.18*t27666*Power(t28734,2) - 1.18*t27666*Power(t28739,2) - 1.18*Power(t28749,2) - 1.18*Power(t28759,2) - 1.18*Power(t28769,2) - 1.39*Power(t28779,2) - 1.39*Power(t28789,2) - 1.39*Power(t28799,2) - 0.28*Power(t28815,2) - 0.28*Power(t28825,2) - 0.28*Power(t28835,2) - 1.39*Power(t28845,2) - 1.39*Power(t28855,2) - 1.39*Power(t28865,2) - 0.28*Power(t28881,2) - 0.28*Power(t28891,2) - 0.28*Power(t28901,2) - 1.39*Power(t28911,2) - 1.39*Power(t28921,2) - 1.39*Power(t28931,2) - 0.28*Power(t28947,2) - 0.28*Power(t28957,2) - 0.28*Power(t28967,2) - 1.18*t27666*Power(t28972,2) - 1.18*t27666*Power(t28977,2) - 1.18*Power(t28987,2) - 1.39*Power(t28997,2) - 1.39*Power(t29007,2) - 1.39*Power(t29017,2) - 0.28*Power(t29033,2) - 0.28*Power(t29043,2) - 0.28*Power(t29053,2))*var2[3] + t29656*var2[4] + t29601*var2[5] + t29566*var2[6] + t29552*var2[7] + 0.0032*t27219*t27717*var2[8] + t29514*var2[9] + t29502*var2[10] + 0.0032*t27219*t27382*var2[11] + t29530*var2[12] + t29519*var2[13] + 0.0032*t27219*t27455*var2[14] + t29546*var2[15] + t29535*var2[16] + 0.0032*t27219*t27584*var2[17];
  p_output1[4]=t28709*var2[0] + t29250*var2[1] + t29455*var2[2] + t29656*var2[3] + (-0.143*t27664 - 0.141*t27668 - 0.0431*t27679 - 0.0431*t27684 - 0.0431*t27689 - 0.0431*t27723 - 0.0299*Power(t28044,2) - 0.0299*Power(t28055,2) - 0.0299*Power(t28066,2) - 0.0017*Power(t28073,2) - 0.0064*Power(t28083,2) - 0.0032*Power(t28093,2) - 0.0665*Power(t28103,2) - 0.0017*Power(t28113,2) - 0.0064*Power(t28123,2) - 0.0032*Power(t28133,2) - 0.0665*Power(t28143,2) - 0.0017*Power(t28153,2) - 0.0064*Power(t28163,2) - 0.0032*Power(t28173,2) - 0.0665*Power(t28183,2) - 0.0299*Power(t28197,2) - 0.0017*Power(t28204,2) - 0.0064*Power(t28214,2) - 0.0032*Power(t28224,2) - 0.0665*Power(t28234,2) - 1.18*Power(t28365,2) - 1.39*Power(t28381,2) - 1.39*Power(t28391,2) - 1.39*Power(t28401,2) - 0.28*Power(t28418,2) - 0.28*Power(t28429,2) - 0.28*Power(t28439,2) - 1.18*Power(t28455,2) - 1.39*Power(t28471,2) - 1.39*Power(t28481,2) - 1.39*Power(t28491,2) - 0.28*Power(t28508,2) - 0.28*Power(t28519,2) - 0.28*Power(t28529,2) - 1.18*Power(t28544,2) - 1.39*Power(t28560,2) - 1.39*Power(t28570,2) - 1.39*Power(t28580,2) - 0.28*Power(t28597,2) - 0.28*Power(t28608,2) - 0.28*Power(t28618,2) - 1.18*Power(t28633,2) - 1.39*Power(t28649,2) - 1.39*Power(t28659,2) - 1.39*Power(t28669,2) - 0.28*Power(t28686,2) - 0.28*Power(t28697,2) - 0.28*Power(t28707,2))*var2[4] + t29855*var2[5] + t29829*var2[6] + t29815*var2[7] + 0.0032*t27722*var2[8] + t29777*var2[9] + t29766*var2[10] + 0.0032*t27678*var2[11] + t29793*var2[12] + t29782*var2[13] + 0.0032*t27683*var2[14] + t29809*var2[15] + t29798*var2[16] + 0.0032*t27688*var2[17];
  p_output1[5]=t28025*var2[0] + t29134*var2[1] + t29367*var2[2] + t29601*var2[3] + t29855*var2[4] + (-0.2724 - 1.18*Power(t27791,2) - 1.39*Power(t27808,2) - 0.28*Power(t27822,2) - 1.18*Power(t27834,2) - 1.39*Power(t27851,2) - 0.28*Power(t27865,2) - 1.18*Power(t27874,2) - 1.39*Power(t27891,2) - 0.28*Power(t27905,2) - 1.18*Power(t27909,2) - 1.18*Power(t27913,2) - 1.18*Power(t27916,2) - 1.39*t27367*Power(t27920,2) - 1.39*t27371*Power(t27924,2) - 1.39*t27445*Power(t27936,2) - 1.39*t27448*Power(t27940,2) - 1.39*t27577*Power(t27952,2) - 1.39*t27579*Power(t27956,2) - 1.18*Power(t27973,2) - 1.18*Power(t27976,2) - 1.39*t27753*Power(t27987,2) - 1.39*t27755*Power(t27991,2) - 1.39*Power(t28001,2) - 0.28*Power(t28023,2) + t29967 + t29969 - 0.28*Power(t27928,2)*t29972 + t29973 - 0.28*Power(t27932,2)*t29974 + t29975 + t29984 + t29986 - 0.28*Power(t27944,2)*t29989 + t29990 - 0.28*Power(t27948,2)*t29991 + t29992 + t30001 + t30003 - 0.28*Power(t27960,2)*t30006 + t30007 - 0.28*Power(t27964,2)*t30008 + t30009 + t30019 + t30021 - 0.28*Power(t28009,2)*t30024 + t30025 - 0.28*Power(t28013,2)*t30026 + t30027)*var2[5] + t30030*var2[6] + t30016*var2[7] + t29978*var2[9] + t29965*var2[10] + t29995*var2[12] + t29982*var2[13] + t30012*var2[15] + t29999*var2[16];
  p_output1[6]=t27779*var2[0] + t29096*var2[1] + t29329*var2[2] + t29566*var2[3] + t29829*var2[4] + t30030*var2[5] + (-0.0046 - 0.007651*t27753 - 0.002951*t27755 - 1.39*Power(t27757,2) - 0.28*Power(t27762,2) - 0.28*Power(t27777,2) + t30025 + t30027)*var2[6] - 0.28*t27629*t27762*var2[7];
  p_output1[7]=t27661*var2[0] + t29100*var2[1] + t29333*var2[2] + t29552*var2[3] + t29815*var2[4] + t30016*var2[5] - 0.28*t27629*t27762*var2[6] + (-0.0098 - 0.28*Power(t27629,2) - 0.28*Power(t27650,2))*var2[7] + 0.0032*var2[8];
  p_output1[8]=0.0032*t27219*t27717*var2[3] + 0.0032*t27722*var2[4] + 0.0032*var2[7] - 0.0032*var2[8];
  p_output1[9]=t27437*var2[0] + t29067*var2[1] + t29300*var2[2] + t29514*var2[3] + t29777*var2[4] + t29978*var2[5] + (-0.0046 - 0.007651*t27367 - 0.002951*t27371 - 1.39*Power(t27375,2) - 0.28*Power(t27411,2) - 0.28*Power(t27435,2) + t29973 + t29975)*var2[9] - 0.28*t27313*t27435*var2[10];
  p_output1[10]=t27352*var2[0] + t29060*var2[1] + t29293*var2[2] + t29502*var2[3] + t29766*var2[4] + t29965*var2[5] - 0.28*t27313*t27435*var2[9] + (-0.0098 - 0.28*Power(t22466,2) - 0.28*Power(t27313,2))*var2[10] + 0.0032*var2[11];
  p_output1[11]=0.0032*t27219*t27382*var2[3] + 0.0032*t27678*var2[4] + 0.0032*var2[10] - 0.0032*var2[11];
  p_output1[12]=t27512*var2[0] + t29074*var2[1] + t29307*var2[2] + t29530*var2[3] + t29793*var2[4] + t29995*var2[5] + (-0.0046 - 0.007651*t27445 - 0.002951*t27448 - 1.39*Power(t27450,2) - 0.28*Power(t27486,2) - 0.28*Power(t27504,2) + t29990 + t29992)*var2[12] - 0.28*t27504*t27516*var2[13];
  p_output1[13]=t27528*var2[0] + t29078*var2[1] + t29311*var2[2] + t29519*var2[3] + t29782*var2[4] + t29982*var2[5] - 0.28*t27504*t27516*var2[12] + (-0.0098 - 0.28*Power(t27516,2) - 0.28*Power(t27520,2))*var2[13] + 0.0032*var2[14];
  p_output1[14]=0.0032*t27219*t27455*var2[3] + 0.0032*t27683*var2[4] + 0.0032*var2[13] - 0.0032*var2[14];
  p_output1[15]=t27619*var2[0] + t29089*var2[1] + t29322*var2[2] + t29546*var2[3] + t29809*var2[4] + t30012*var2[5] + (-0.0046 - 0.007651*t27577 - 0.002951*t27579 - 1.39*Power(t27581,2) - 0.28*Power(t27599,2) - 0.28*Power(t27617,2) + t30007 + t30009)*var2[15] - 0.28*t27559*t27617*var2[16];
  p_output1[16]=t27570*var2[0] + t29082*var2[1] + t29315*var2[2] + t29535*var2[3] + t29798*var2[4] + t29999*var2[5] - 0.28*t27559*t27617*var2[15] + (-0.0098 - 0.28*Power(t27538,2) - 0.28*Power(t27559,2))*var2[16] + 0.0032*var2[17];
  p_output1[17]=0.0032*t27219*t27584*var2[3] + 0.0032*t27688*var2[4] + 0.0032*var2[16] - 0.0032*var2[17];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 18, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "MmatDx_ASTRo.hh"

namespace DiagonalStance
{

void MmatDx_ASTRo_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
