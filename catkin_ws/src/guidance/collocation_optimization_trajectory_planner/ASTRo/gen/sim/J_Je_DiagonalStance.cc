/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:31:02 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t171;
  double t156;
  double t166;
  double t245;
  double t522;
  double t578;
  double t603;
  double t152;
  double t412;
  double t697;
  double t411;
  double t715;
  double t1099;
  double t1464;
  double t1704;
  double t1732;
  double t402;
  double t167;
  double t271;
  double t281;
  double t2298;
  double t2303;
  double t2311;
  double t2847;
  double t2993;
  double t2999;
  double t3037;
  double t2343;
  double t2346;
  double t2348;
  double t3279;
  double t3316;
  double t3343;
  double t3348;
  double t633;
  double t823;
  double t985;
  double t2010;
  double t2064;
  double t2128;
  double t4260;
  double t4133;
  double t4143;
  double t4359;
  double t4631;
  double t4662;
  double t4665;
  double t4699;
  double t4567;
  double t4858;
  double t4872;
  double t4894;
  double t4987;
  double t5031;
  double t5100;
  double t5117;
  double t4194;
  double t4377;
  double t4387;
  double t5866;
  double t5931;
  double t5932;
  double t5935;
  double t5393;
  double t5504;
  double t5543;
  double t5559;
  double t5572;
  double t5602;
  double t6125;
  double t6135;
  double t6211;
  double t6264;
  double t4685;
  double t4790;
  double t4797;
  double t302;
  double t1065;
  double t1068;
  double t6535;
  double t6661;
  double t6756;
  double t6757;
  double t6758;
  double t2145;
  double t2155;
  double t2191;
  double t3126;
  double t3134;
  double t3198;
  double t2614;
  double t2620;
  double t2785;
  double t7271;
  double t7290;
  double t7300;
  double t6940;
  double t6946;
  double t6967;
  double t7536;
  double t7563;
  double t7568;
  double t6540;
  double t6554;
  double t6615;
  double t3841;
  double t3853;
  double t3863;
  double t4555;
  double t4809;
  double t4841;
  double t9918;
  double t9969;
  double t10081;
  double t5144;
  double t5229;
  double t5295;
  double t5963;
  double t6019;
  double t6063;
  double t5705;
  double t5801;
  double t5843;
  double t10772;
  double t10784;
  double t10786;
  double t10493;
  double t10543;
  double t10558;
  double t10848;
  double t10859;
  double t10892;
  double t8716;
  double t8917;
  double t9009;
  double t6351;
  double t6446;
  double t6458;
  double t7636;
  double t7863;
  double t7968;
  double t6679;
  double t6684;
  double t6705;
  double t11013;
  double t11042;
  double t11054;
  double t6795;
  double t6822;
  double t6904;
  double t6911;
  double t6915;
  double t6919;
  double t7010;
  double t7017;
  double t7018;
  double t11197;
  double t11225;
  double t11227;
  double t6970;
  double t6971;
  double t6991;
  double t7485;
  double t7489;
  double t7518;
  double t11263;
  double t11269;
  double t11278;
  double t8000;
  double t8085;
  double t8100;
  double t8263;
  double t8357;
  double t8377;
  double t10899;
  double t10903;
  double t10962;
  double t9593;
  double t9599;
  double t9650;
  double t11326;
  double t11328;
  double t11330;
  double t10149;
  double t10181;
  double t10183;
  double t10372;
  double t10399;
  double t10407;
  double t10742;
  double t10743;
  double t10747;
  double t11354;
  double t11355;
  double t11356;
  double t10587;
  double t10589;
  double t10612;
  double t10817;
  double t10822;
  double t10836;
  double t11362;
  double t11381;
  double t11393;
  double t10976;
  double t10977;
  double t10991;
  double t10999;
  double t11002;
  double t11003;
  double t2218;
  double t2402;
  double t2433;
  double t11457;
  double t11458;
  double t11468;
  double t11472;
  double t11476;
  double t11505;
  double t11507;
  double t11527;
  double t11530;
  double t11560;
  double t11572;
  double t11582;
  double t11588;
  double t11453;
  double t11491;
  double t11497;
  double t11500;
  double t11511;
  double t11589;
  double t11590;
  double t11592;
  double t11593;
  double t11603;
  double t11608;
  double t11609;
  double t11611;
  double t11615;
  double t11617;
  double t11635;
  double t11637;
  double t11644;
  double t11501;
  double t11626;
  double t11628;
  double t11829;
  double t11834;
  double t11855;
  double t11699;
  double t11708;
  double t11710;
  double t11713;
  double t11717;
  double t11856;
  double t11861;
  double t11971;
  double t11977;
  double t11981;
  double t11898;
  double t11912;
  double t11919;
  double t11920;
  double t11954;
  double t12003;
  double t11959;
  double t11987;
  double t12350;
  double t12354;
  double t12355;
  double t12356;
  double t12360;
  double t12370;
  double t12379;
  double t12026;
  double t12058;
  double t12094;
  double t12389;
  double t12396;
  double t12400;
  double t12191;
  double t12217;
  double t12229;
  double t12463;
  double t12478;
  double t12517;
  double t12529;
  double t12536;
  double t12565;
  double t12581;
  double t3621;
  double t3691;
  double t3717;
  double t12441;
  double t12442;
  double t12443;
  double t12535;
  double t12582;
  double t12613;
  double t12638;
  double t12649;
  double t12651;
  double t13305;
  double t13306;
  double t13378;
  double t13469;
  double t13498;
  double t13658;
  double t13679;
  double t13684;
  double t3824;
  double t3870;
  double t4008;
  double t13379;
  double t13385;
  double t13407;
  double t13568;
  double t13736;
  double t13741;
  double t13868;
  double t13885;
  double t13973;
  double t13057;
  double t13233;
  double t13235;
  double t14261;
  double t14283;
  double t14310;
  double t14346;
  double t14510;
  double t14585;
  double t14667;
  double t14692;
  double t14710;
  double t14756;
  double t14794;
  double t14869;
  double t14888;
  double t2135;
  double t2195;
  double t2206;
  double t16427;
  double t16685;
  double t16708;
  double t16909;
  double t16917;
  double t16920;
  double t16946;
  double t17041;
  double t17101;
  double t17169;
  double t17238;
  double t17239;
  double t17288;
  double t17348;
  double t17356;
  double t17399;
  double t5548;
  double t5640;
  double t5691;
  double t18630;
  double t18721;
  double t18759;
  double t18761;
  double t18777;
  double t19068;
  double t19070;
  double t19078;
  double t19080;
  double t19084;
  double t19088;
  double t19108;
  double t19114;
  double t18628;
  double t18791;
  double t18816;
  double t18979;
  double t19076;
  double t19115;
  double t19122;
  double t19134;
  double t19138;
  double t19196;
  double t19212;
  double t19216;
  double t19228;
  double t19229;
  double t19230;
  double t19376;
  double t19394;
  double t19420;
  double t18990;
  double t19232;
  double t19275;
  double t19459;
  double t19466;
  double t19473;
  double t19429;
  double t19442;
  double t19444;
  double t19446;
  double t19457;
  double t19474;
  double t19485;
  double t19927;
  double t20125;
  double t20282;
  double t19686;
  double t19701;
  double t19703;
  double t19797;
  double t19917;
  double t20426;
  double t21134;
  double t21178;
  double t21198;
  double t21212;
  double t21319;
  double t21381;
  double t21679;
  double t20509;
  double t20520;
  double t20554;
  double t21764;
  double t21836;
  double t22046;
  double t20823;
  double t20831;
  double t20912;
  double t23204;
  double t23262;
  double t23267;
  double t23286;
  double t23613;
  double t23632;
  double t23876;
  double t23893;
  double t24016;
  double t6285;
  double t6289;
  double t6306;
  double t23303;
  double t23397;
  double t23581;
  double t23874;
  double t24060;
  double t24234;
  double t24356;
  double t24358;
  double t24389;
  double t24817;
  double t24913;
  double t25585;
  double t25605;
  double t25615;
  double t25630;
  double t25724;
  double t25761;
  double t6327;
  double t6485;
  double t6498;
  double t24983;
  double t25436;
  double t25525;
  double t25625;
  double t25896;
  double t25902;
  double t26070;
  double t26072;
  double t26196;
  double t24625;
  double t24647;
  double t24667;
  double t26658;
  double t26690;
  double t26757;
  double t26771;
  double t26964;
  double t26984;
  double t27144;
  double t27199;
  double t27215;
  double t27280;
  double t27351;
  double t27409;
  double t27411;
  double t4991;
  double t5298;
  double t5387;
  double t27512;
  double t27515;
  double t27517;
  double t28341;
  double t28456;
  double t28484;
  double t28550;
  double t29198;
  double t29326;
  double t29534;
  double t29569;
  double t29580;
  double t29683;
  double t29725;
  double t29827;
  double t29968;
  double t12020;
  double t12108;
  double t30504;
  double t30506;
  double t30509;
  double t12401;
  double t30516;
  double t12410;
  double t30532;
  double t30568;
  double t30583;
  double t30632;
  double t30634;
  double t12462;
  double t13014;
  double t13408;
  double t14064;
  double t14082;
  double t14597;
  double t14720;
  double t30736;
  double t30831;
  double t14992;
  double t33031;
  double t33155;
  double t33159;
  double t33165;
  double t33166;
  double t15072;
  double t33169;
  double t33187;
  double t33189;
  double t15517;
  double t15708;
  double t16352;
  double t16738;
  double t16796;
  double t16797;
  double t17206;
  double t17316;
  double t34311;
  double t34417;
  double t35222;
  double t35250;
  double t35474;
  double t17541;
  double t35499;
  double t17607;
  double t36415;
  double t36437;
  double t36515;
  double t17808;
  double t17900;
  double t17944;
  double t18345;
  double t18508;
  double t20440;
  double t20574;
  double t36861;
  double t36866;
  double t36867;
  double t22132;
  double t36886;
  double t22400;
  double t36990;
  double t36995;
  double t37001;
  double t37002;
  double t37003;
  double t23599;
  double t24485;
  double t25575;
  double t26241;
  double t26281;
  double t27045;
  double t27221;
  double t37017;
  double t37020;
  double t27413;
  double t37148;
  double t37168;
  double t37169;
  double t37170;
  double t37172;
  double t27480;
  double t37197;
  double t37217;
  double t37224;
  double t27498;
  double t27499;
  double t27509;
  double t27525;
  double t27539;
  double t27540;
  double t29564;
  double t29699;
  double t38392;
  double t38408;
  double t38473;
  double t38475;
  double t38492;
  double t30085;
  double t38501;
  double t30292;
  double t38508;
  double t38513;
  double t38515;
  double t30331;
  double t30365;
  double t30372;
  double t30466;
  double t30491;
  double t38874;
  double t38875;
  double t38879;
  double t33720;
  double t33747;
  double t39586;
  double t39595;
  double t34325;
  double t39511;
  double t39542;
  double t39567;
  double t34467;
  double t34840;
  double t34891;
  double t39865;
  double t39867;
  double t39869;
  double t40192;
  double t40211;
  double t40212;
  double t40263;
  double t40269;
  double t40290;
  double t37908;
  double t38196;
  double t41270;
  double t41290;
  double t38399;
  double t41486;
  double t41551;
  double t41552;
  double t38433;
  double t41689;
  double t41728;
  double t41730;
  double t38448;
  double t38452;
  double t42149;
  double t42155;
  double t42161;
  double t42169;
  double t42180;
  double t42181;
  double t42183;
  double t42184;
  double t42201;
  double t42211;
  double t42338;
  double t42344;
  double t42365;
  double t42366;
  double t42518;
  double t42520;
  double t42524;
  t171 = Cos(var1[13]);
  t156 = Cos(var1[14]);
  t166 = Sin(var1[13]);
  t245 = Sin(var1[14]);
  t522 = t171*t156;
  t578 = t166*t245;
  t603 = t522 + t578;
  t152 = Cos(var1[4]);
  t412 = Cos(var1[5]);
  t697 = Sin(var1[12]);
  t411 = Cos(var1[12]);
  t715 = Sin(var1[5]);
  t1099 = -1.*t412*t697*t603;
  t1464 = -1.*t411*t603*t715;
  t1704 = t1099 + t1464;
  t1732 = t152*t1704;
  t402 = Sin(var1[4]);
  t167 = -1.*t156*t166;
  t271 = t171*t245;
  t281 = t167 + t271;
  t2298 = t156*t166;
  t2303 = -1.*t171*t245;
  t2311 = t2298 + t2303;
  t2847 = -1.*t411*t412;
  t2993 = t697*t715;
  t2999 = t2847 + t2993;
  t3037 = t152*t2999;
  t2343 = t411*t412*t2311;
  t2346 = -1.*t697*t2311*t715;
  t2348 = t2343 + t2346;
  t3279 = -1.*t412*t697*t2311;
  t3316 = -1.*t411*t2311*t715;
  t3343 = t3279 + t3316;
  t3348 = t152*t3343;
  t633 = t411*t412*t603;
  t823 = -1.*t697*t603*t715;
  t985 = t633 + t823;
  t2010 = -1.*t171*t156;
  t2064 = -1.*t166*t245;
  t2128 = t2010 + t2064;
  t4260 = Cos(var1[10]);
  t4133 = Cos(var1[11]);
  t4143 = Sin(var1[10]);
  t4359 = Sin(var1[11]);
  t4631 = -1.*t4260*t4133;
  t4662 = -1.*t4143*t4359;
  t4665 = t4631 + t4662;
  t4699 = Sin(var1[9]);
  t4567 = Cos(var1[9]);
  t4858 = -1.*t412*t4699*t4665;
  t4872 = -1.*t4567*t4665*t715;
  t4894 = t4858 + t4872;
  t4987 = t152*t4894;
  t5031 = t4133*t4143;
  t5100 = -1.*t4260*t4359;
  t5117 = t5031 + t5100;
  t4194 = -1.*t4133*t4143;
  t4377 = t4260*t4359;
  t4387 = t4194 + t4377;
  t5866 = t4567*t412;
  t5931 = -1.*t4699*t715;
  t5932 = t5866 + t5931;
  t5935 = t152*t5932;
  t5393 = t4260*t4133;
  t5504 = t4143*t4359;
  t5543 = t5393 + t5504;
  t5559 = t4567*t412*t4387;
  t5572 = -1.*t4699*t4387*t715;
  t5602 = t5559 + t5572;
  t6125 = -1.*t412*t4699*t4387;
  t6135 = -1.*t4567*t4387*t715;
  t6211 = t6125 + t6135;
  t6264 = t152*t6211;
  t4685 = t4567*t412*t4665;
  t4790 = -1.*t4699*t4665*t715;
  t4797 = t4685 + t4790;
  t302 = t152*t281;
  t1065 = -1.*t402*t985;
  t1068 = t302 + t1065;
  t6535 = Sin(var1[3]);
  t6661 = Cos(var1[3]);
  t6756 = t6535*t402*t1704;
  t6757 = t6661*t985;
  t6758 = t6756 + t6757;
  t2145 = t411*t412*t281;
  t2155 = -1.*t697*t281*t715;
  t2191 = t2145 + t2155;
  t3126 = t152*t603;
  t3134 = -1.*t402*t2348;
  t3198 = t3126 + t3134;
  t2614 = -1.*t412*t697;
  t2620 = -1.*t411*t715;
  t2785 = t2614 + t2620;
  t7271 = t6661*t2785;
  t7290 = t6535*t402*t2999;
  t7300 = t7271 + t7290;
  t6940 = t412*t697*t2311;
  t6946 = t411*t2311*t715;
  t6967 = t6940 + t6946;
  t7536 = t6535*t402*t3343;
  t7563 = t6661*t2348;
  t7568 = t7536 + t7563;
  t6540 = t412*t697*t603;
  t6554 = t411*t603*t715;
  t6615 = t6540 + t6554;
  t3841 = t411*t412*t2128;
  t3853 = -1.*t697*t2128*t715;
  t3863 = t3841 + t3853;
  t4555 = t152*t4387;
  t4809 = -1.*t402*t4797;
  t4841 = t4555 + t4809;
  t9918 = t6535*t402*t4894;
  t9969 = t6661*t4797;
  t10081 = t9918 + t9969;
  t5144 = t4567*t412*t5117;
  t5229 = -1.*t4699*t5117*t715;
  t5295 = t5144 + t5229;
  t5963 = t152*t5543;
  t6019 = -1.*t402*t5602;
  t6063 = t5963 + t6019;
  t5705 = t412*t4699;
  t5801 = t4567*t715;
  t5843 = t5705 + t5801;
  t10772 = t6661*t5843;
  t10784 = t6535*t402*t5932;
  t10786 = t10772 + t10784;
  t10493 = t412*t4699*t4387;
  t10543 = t4567*t4387*t715;
  t10558 = t10493 + t10543;
  t10848 = t6535*t402*t6211;
  t10859 = t6661*t5602;
  t10892 = t10848 + t10859;
  t8716 = t412*t4699*t4665;
  t8917 = t4567*t4665*t715;
  t9009 = t8716 + t8917;
  t6351 = t4567*t412*t5543;
  t6446 = -1.*t4699*t5543*t715;
  t6458 = t6351 + t6446;
  t7636 = t6661*t6615;
  t7863 = -1.*t6535*t1068;
  t7968 = t7636 + t7863;
  t6679 = -1.*t281*t402;
  t6684 = -1.*t152*t985;
  t6705 = t6679 + t6684;
  t11013 = -1.*t6661*t402*t1704;
  t11042 = t6535*t985;
  t11054 = t11013 + t11042;
  t6795 = t412*t697*t281;
  t6822 = t411*t281*t715;
  t6904 = t6795 + t6822;
  t6911 = t152*t2128;
  t6915 = -1.*t402*t2191;
  t6919 = t6911 + t6915;
  t7010 = t411*t412;
  t7017 = -1.*t697*t715;
  t7018 = t7010 + t7017;
  t11197 = t6535*t2785;
  t11225 = -1.*t6661*t402*t2999;
  t11227 = t11197 + t11225;
  t6970 = t6661*t6967;
  t6971 = -1.*t6535*t3198;
  t6991 = t6970 + t6971;
  t7485 = -1.*t603*t402;
  t7489 = -1.*t152*t2348;
  t7518 = t7485 + t7489;
  t11263 = -1.*t6661*t402*t3343;
  t11269 = t6535*t2348;
  t11278 = t11263 + t11269;
  t8000 = t412*t697*t2128;
  t8085 = t411*t2128*t715;
  t8100 = t8000 + t8085;
  t8263 = t152*t2311;
  t8357 = -1.*t402*t3863;
  t8377 = t8263 + t8357;
  t10899 = t6661*t9009;
  t10903 = -1.*t6535*t4841;
  t10962 = t10899 + t10903;
  t9593 = -1.*t4387*t402;
  t9599 = -1.*t152*t4797;
  t9650 = t9593 + t9599;
  t11326 = -1.*t6661*t402*t4894;
  t11328 = t6535*t4797;
  t11330 = t11326 + t11328;
  t10149 = t412*t4699*t5117;
  t10181 = t4567*t5117*t715;
  t10183 = t10149 + t10181;
  t10372 = t152*t4665;
  t10399 = -1.*t402*t5295;
  t10407 = t10372 + t10399;
  t10742 = -1.*t4567*t412;
  t10743 = t4699*t715;
  t10747 = t10742 + t10743;
  t11354 = t6535*t5843;
  t11355 = -1.*t6661*t402*t5932;
  t11356 = t11354 + t11355;
  t10587 = t6661*t10558;
  t10589 = -1.*t6535*t6063;
  t10612 = t10587 + t10589;
  t10817 = -1.*t5543*t402;
  t10822 = -1.*t152*t5602;
  t10836 = t10817 + t10822;
  t11362 = -1.*t6661*t402*t6211;
  t11381 = t6535*t5602;
  t11393 = t11362 + t11381;
  t10976 = t412*t4699*t5543;
  t10977 = t4567*t5543*t715;
  t10991 = t10976 + t10977;
  t10999 = t152*t5117;
  t11002 = -1.*t402*t6458;
  t11003 = t10999 + t11002;
  t2218 = t603*t402;
  t2402 = t152*t2348;
  t2433 = t2218 + t2402;
  t11457 = -1.*t156;
  t11458 = 1. + t11457;
  t11468 = 0.50321*t11458;
  t11472 = 0.19821*t156;
  t11476 = t11468 + t11472;
  t11505 = -1.*t411;
  t11507 = 1. + t11505;
  t11527 = -1.*t171;
  t11530 = 1. + t11527;
  t11560 = 0.28121*t11530;
  t11572 = t171*t11476;
  t11582 = -0.305*t166*t245;
  t11588 = t11560 + t11572 + t11582;
  t11453 = 0.28121*t166;
  t11491 = -1.*t11476*t166;
  t11497 = -0.305*t171*t245;
  t11500 = t11453 + t11491 + t11497;
  t11511 = 0.15121*t11507;
  t11589 = t411*t11588;
  t11590 = t11511 + t11589;
  t11592 = t412*t11590;
  t11593 = -0.15121*t11507;
  t11603 = -0.15121*t411;
  t11608 = -0.15121*t697;
  t11609 = t697*t11588;
  t11611 = t11593 + t11603 + t11608 + t11609;
  t11615 = -1.*t11611*t715;
  t11617 = t11592 + t11615;
  t11635 = t11500*t402;
  t11637 = t152*t11617;
  t11644 = t11635 + t11637;
  t11501 = -1.*t11500*t402;
  t11626 = -1.*t152*t11617;
  t11628 = t11501 + t11626;
  t11829 = t152*t11500;
  t11834 = -1.*t402*t11617;
  t11855 = t11829 + t11834;
  t11699 = t412*t11611;
  t11708 = t11590*t715;
  t11710 = t11699 + t11708;
  t11713 = -1.*t7018*t11710;
  t11717 = -1.*t152*t2785*t11644;
  t11856 = t402*t2785*t11855;
  t11861 = t11713 + t11717 + t11856;
  t11971 = -1.*t412*t11611;
  t11977 = -1.*t11590*t715;
  t11981 = t11971 + t11977;
  t11898 = t6967*t11710;
  t11912 = t2433*t11644;
  t11919 = t3198*t11855;
  t11920 = t11898 + t11912 + t11919;
  t11954 = t152*t3343*t11861;
  t12003 = -1.*t2785*t11710;
  t11959 = Power(t152,2);
  t11987 = Power(t402,2);
  t12350 = 0.15121*t697;
  t12354 = -1.*t697*t11588;
  t12355 = t12350 + t12354;
  t12356 = t412*t12355;
  t12360 = t11603 + t11589;
  t12370 = -1.*t12360*t715;
  t12379 = t12356 + t12370;
  t12026 = -1.*t152*t2999*t11644;
  t12058 = t402*t2999*t11855;
  t12094 = t2348*t11710;
  t12389 = t412*t12360;
  t12396 = t12355*t715;
  t12400 = t12389 + t12396;
  t12191 = t152*t3343*t11644;
  t12217 = -1.*t402*t3343*t11855;
  t12229 = t152*t2999*t11920;
  t12463 = 0.28121*t171;
  t12478 = -1.*t171*t11476;
  t12517 = 0.305*t166*t245;
  t12529 = t12463 + t12478 + t12517;
  t12536 = t411*t412*t11500;
  t12565 = -1.*t697*t11500*t715;
  t12581 = t12536 + t12565;
  t3621 = t281*t402;
  t3691 = t152*t985;
  t3717 = t3621 + t3691;
  t12441 = t412*t697*t11500;
  t12442 = t411*t11500*t715;
  t12443 = t12441 + t12442;
  t12535 = t12529*t402;
  t12582 = t152*t12581;
  t12613 = t12535 + t12582;
  t12638 = t152*t12529;
  t12649 = -1.*t402*t12581;
  t12651 = t12638 + t12649;
  t13305 = -0.305*t156*t166;
  t13306 = 0.305*t171*t245;
  t13378 = t13305 + t13306;
  t13469 = -0.305*t171*t156;
  t13498 = t13469 + t11582;
  t13658 = t411*t412*t13378;
  t13679 = -1.*t697*t13378*t715;
  t13684 = t13658 + t13679;
  t3824 = t2311*t402;
  t3870 = t152*t3863;
  t4008 = t3824 + t3870;
  t13379 = t412*t697*t13378;
  t13385 = t411*t13378*t715;
  t13407 = t13379 + t13385;
  t13568 = t13498*t402;
  t13736 = t152*t13684;
  t13741 = t13568 + t13736;
  t13868 = t152*t13498;
  t13885 = -1.*t402*t13684;
  t13973 = t13868 + t13885;
  t13057 = t6615*t11710;
  t13233 = t3717*t11644;
  t13235 = t1068*t11855;
  t14261 = -1.*t6967*t11710;
  t14283 = -1.*t2433*t11644;
  t14310 = -1.*t3198*t11855;
  t14346 = t14261 + t14283 + t14310;
  t14510 = t13057 + t13233 + t13235;
  t14585 = -1.*t2348*t11710;
  t14667 = -1.*t152*t3343*t11644;
  t14692 = t402*t3343*t11855;
  t14710 = t985*t11710;
  t14756 = t152*t1704*t11644;
  t14794 = -1.*t402*t1704*t11855;
  t14869 = t152*t1704*t14346;
  t14888 = t152*t3343*t14510;
  t2135 = t2128*t402;
  t2195 = t152*t2191;
  t2206 = t2135 + t2195;
  t16427 = -1.*t6615*t11710;
  t16685 = -1.*t3717*t11644;
  t16708 = -1.*t1068*t11855;
  t16909 = t7018*t11710;
  t16917 = t152*t2785*t11644;
  t16920 = -1.*t402*t2785*t11855;
  t16946 = t16909 + t16917 + t16920;
  t17041 = t16427 + t16685 + t16708;
  t17101 = t152*t1704*t16946;
  t17169 = t2785*t11710;
  t17238 = t152*t2999*t11644;
  t17239 = -1.*t402*t2999*t11855;
  t17288 = -1.*t985*t11710;
  t17348 = -1.*t152*t1704*t11644;
  t17356 = t402*t1704*t11855;
  t17399 = t152*t2999*t17041;
  t5548 = t5543*t402;
  t5640 = t152*t5602;
  t5691 = t5548 + t5640;
  t18630 = -1.*t4133;
  t18721 = 1. + t18630;
  t18759 = -0.50321*t18721;
  t18761 = -0.19821*t4133;
  t18777 = t18759 + t18761;
  t19068 = -1.*t4567;
  t19070 = 1. + t19068;
  t19078 = -1.*t4260;
  t19080 = 1. + t19078;
  t19084 = -0.28121*t19080;
  t19088 = t4260*t18777;
  t19108 = 0.305*t4143*t4359;
  t19114 = t19084 + t19088 + t19108;
  t18628 = 0.28121*t4143;
  t18791 = t18777*t4143;
  t18816 = -0.305*t4260*t4359;
  t18979 = t18628 + t18791 + t18816;
  t19076 = -0.15121*t19070;
  t19115 = t4567*t19114;
  t19122 = t19076 + t19115;
  t19134 = t412*t19122;
  t19138 = 0.15121*t19070;
  t19196 = 0.15121*t4567;
  t19212 = 0.15121*t4699;
  t19216 = t4699*t19114;
  t19228 = t19138 + t19196 + t19212 + t19216;
  t19229 = -1.*t19228*t715;
  t19230 = t19134 + t19229;
  t19376 = t18979*t402;
  t19394 = t152*t19230;
  t19420 = t19376 + t19394;
  t18990 = -1.*t18979*t402;
  t19232 = -1.*t152*t19230;
  t19275 = t18990 + t19232;
  t19459 = t152*t18979;
  t19466 = -1.*t402*t19230;
  t19473 = t19459 + t19466;
  t19429 = t412*t19228;
  t19442 = t19122*t715;
  t19444 = t19429 + t19442;
  t19446 = -1.*t10747*t19444;
  t19457 = -1.*t152*t5843*t19420;
  t19474 = t402*t5843*t19473;
  t19485 = t19446 + t19457 + t19474;
  t19927 = -1.*t412*t19228;
  t20125 = -1.*t19122*t715;
  t20282 = t19927 + t20125;
  t19686 = t10558*t19444;
  t19701 = t5691*t19420;
  t19703 = t6063*t19473;
  t19797 = t19686 + t19701 + t19703;
  t19917 = t152*t6211*t19485;
  t20426 = -1.*t5843*t19444;
  t21134 = -0.15121*t4699;
  t21178 = -1.*t4699*t19114;
  t21198 = t21134 + t21178;
  t21212 = t412*t21198;
  t21319 = t19196 + t19115;
  t21381 = -1.*t21319*t715;
  t21679 = t21212 + t21381;
  t20509 = -1.*t152*t5932*t19420;
  t20520 = t402*t5932*t19473;
  t20554 = t5602*t19444;
  t21764 = t412*t21319;
  t21836 = t21198*t715;
  t22046 = t21764 + t21836;
  t20823 = t152*t6211*t19420;
  t20831 = -1.*t402*t6211*t19473;
  t20912 = t152*t5932*t19797;
  t23204 = -0.28121*t4143;
  t23262 = -1.*t18777*t4143;
  t23267 = 0.305*t4260*t4359;
  t23286 = t23204 + t23262 + t23267;
  t23613 = 0.28121*t4260;
  t23632 = t23613 + t19088 + t19108;
  t23876 = t4567*t412*t23286;
  t23893 = -1.*t4699*t23286*t715;
  t24016 = t23876 + t23893;
  t6285 = t4387*t402;
  t6289 = t152*t4797;
  t6306 = t6285 + t6289;
  t23303 = t412*t4699*t23286;
  t23397 = t4567*t23286*t715;
  t23581 = t23303 + t23397;
  t23874 = t23632*t402;
  t24060 = t152*t24016;
  t24234 = t23874 + t24060;
  t24356 = t152*t23632;
  t24358 = -1.*t402*t24016;
  t24389 = t24356 + t24358;
  t24817 = 0.305*t4133*t4143;
  t24913 = t24817 + t18816;
  t25585 = -0.305*t4260*t4133;
  t25605 = -0.305*t4143*t4359;
  t25615 = t25585 + t25605;
  t25630 = t4567*t412*t24913;
  t25724 = -1.*t4699*t24913*t715;
  t25761 = t25630 + t25724;
  t6327 = t5117*t402;
  t6485 = t152*t6458;
  t6498 = t6327 + t6485;
  t24983 = t412*t4699*t24913;
  t25436 = t4567*t24913*t715;
  t25525 = t24983 + t25436;
  t25625 = t25615*t402;
  t25896 = t152*t25761;
  t25902 = t25625 + t25896;
  t26070 = t152*t25615;
  t26072 = -1.*t402*t25761;
  t26196 = t26070 + t26072;
  t24625 = t9009*t19444;
  t24647 = t6306*t19420;
  t24667 = t4841*t19473;
  t26658 = -1.*t10558*t19444;
  t26690 = -1.*t5691*t19420;
  t26757 = -1.*t6063*t19473;
  t26771 = t26658 + t26690 + t26757;
  t26964 = t24625 + t24647 + t24667;
  t26984 = -1.*t5602*t19444;
  t27144 = -1.*t152*t6211*t19420;
  t27199 = t402*t6211*t19473;
  t27215 = t4797*t19444;
  t27280 = t152*t4894*t19420;
  t27351 = -1.*t402*t4894*t19473;
  t27409 = t152*t4894*t26771;
  t27411 = t152*t6211*t26964;
  t4991 = t4665*t402;
  t5298 = t152*t5295;
  t5387 = t4991 + t5298;
  t27512 = -1.*t9009*t19444;
  t27515 = -1.*t6306*t19420;
  t27517 = -1.*t4841*t19473;
  t28341 = t10747*t19444;
  t28456 = t152*t5843*t19420;
  t28484 = -1.*t402*t5843*t19473;
  t28550 = t28341 + t28456 + t28484;
  t29198 = t27512 + t27515 + t27517;
  t29326 = t152*t4894*t28550;
  t29534 = t5843*t19444;
  t29569 = t152*t5932*t19420;
  t29580 = -1.*t402*t5932*t19473;
  t29683 = -1.*t4797*t19444;
  t29725 = -1.*t152*t4894*t19420;
  t29827 = t402*t4894*t19473;
  t29968 = t152*t5932*t29198;
  t12020 = -1.*t7018*t11617;
  t12108 = t6967*t11617;
  t30504 = -1.*t2785*t11617;
  t30506 = t11713 + t30504;
  t30509 = t2348*t30506;
  t12401 = -1.*t7018*t12400;
  t30516 = -1.*t2999*t11617;
  t12410 = t6967*t12400;
  t30532 = t3343*t11617;
  t30568 = t11500*t603;
  t30583 = t2348*t11617;
  t30632 = t30568 + t11898 + t30583;
  t30634 = t2785*t30632;
  t12462 = -1.*t7018*t12443;
  t13014 = t6967*t12443;
  t13408 = -1.*t7018*t13407;
  t14064 = t6967*t13407;
  t14082 = t8100*t11710;
  t14597 = -1.*t6967*t11617;
  t14720 = t6615*t11617;
  t30736 = t11500*t281;
  t30831 = t985*t11617;
  t14992 = -1.*t6967*t12400;
  t33031 = -1.*t3343*t11617;
  t33155 = -1.*t11500*t603;
  t33159 = -1.*t2348*t11617;
  t33165 = t33155 + t14261 + t33159;
  t33166 = t985*t33165;
  t15072 = t6615*t12400;
  t33169 = t1704*t11617;
  t33187 = t30736 + t13057 + t30831;
  t33189 = t2348*t33187;
  t15517 = t12443*t6615;
  t15708 = t6904*t11710;
  t16352 = -1.*t6967*t12443;
  t16738 = t13407*t6615;
  t16796 = -1.*t6967*t13407;
  t16797 = -1.*t8100*t11710;
  t17206 = t7018*t11617;
  t17316 = -1.*t6615*t11617;
  t34311 = -1.*t11500*t281;
  t34417 = -1.*t985*t11617;
  t35222 = t2785*t11617;
  t35250 = t16909 + t35222;
  t35474 = t985*t35250;
  t17541 = t7018*t12400;
  t35499 = t2999*t11617;
  t17607 = -1.*t6615*t12400;
  t36415 = -1.*t1704*t11617;
  t36437 = t34311 + t16427 + t34417;
  t36515 = t2785*t36437;
  t17808 = t7018*t12443;
  t17900 = -1.*t12443*t6615;
  t17944 = -1.*t6904*t11710;
  t18345 = t7018*t13407;
  t18508 = -1.*t13407*t6615;
  t20440 = -1.*t10747*t19230;
  t20574 = t10558*t19230;
  t36861 = -1.*t5843*t19230;
  t36866 = t19446 + t36861;
  t36867 = t5602*t36866;
  t22132 = -1.*t10747*t22046;
  t36886 = -1.*t5932*t19230;
  t22400 = t10558*t22046;
  t36990 = t6211*t19230;
  t36995 = t18979*t5543;
  t37001 = t5602*t19230;
  t37002 = t36995 + t19686 + t37001;
  t37003 = t5843*t37002;
  t23599 = -1.*t10747*t23581;
  t24485 = t23581*t10558;
  t25575 = -1.*t10747*t25525;
  t26241 = t25525*t10558;
  t26281 = t10991*t19444;
  t27045 = -1.*t10558*t19230;
  t27221 = t9009*t19230;
  t37017 = t18979*t4387;
  t37020 = t4797*t19230;
  t27413 = -1.*t10558*t22046;
  t37148 = -1.*t6211*t19230;
  t37168 = -1.*t18979*t5543;
  t37169 = -1.*t5602*t19230;
  t37170 = t37168 + t26658 + t37169;
  t37172 = t4797*t37170;
  t27480 = t9009*t22046;
  t37197 = t4894*t19230;
  t37217 = t37017 + t24625 + t37020;
  t37224 = t5602*t37217;
  t27498 = t23581*t9009;
  t27499 = t10183*t19444;
  t27509 = -1.*t23581*t10558;
  t27525 = t25525*t9009;
  t27539 = -1.*t25525*t10558;
  t27540 = -1.*t10991*t19444;
  t29564 = t10747*t19230;
  t29699 = -1.*t9009*t19230;
  t38392 = -1.*t18979*t4387;
  t38408 = -1.*t4797*t19230;
  t38473 = t5843*t19230;
  t38475 = t28341 + t38473;
  t38492 = t4797*t38475;
  t30085 = t10747*t22046;
  t38501 = t5932*t19230;
  t30292 = -1.*t9009*t22046;
  t38508 = -1.*t4894*t19230;
  t38513 = t38392 + t27512 + t38408;
  t38515 = t5843*t38513;
  t30331 = t10747*t23581;
  t30365 = -1.*t23581*t9009;
  t30372 = -1.*t10183*t19444;
  t30466 = t10747*t25525;
  t30491 = -1.*t25525*t9009;
  t38874 = t697*t11590;
  t38875 = -1.*t411*t11611;
  t38879 = t38874 + t38875;
  t33720 = t11500*t2128;
  t33747 = t281*t12529;
  t39586 = Power(t411,2);
  t39595 = Power(t697,2);
  t34325 = -1.*t12529*t603;
  t39511 = -1.*t411*t2311*t11590;
  t39542 = -1.*t697*t2311*t11611;
  t39567 = t33155 + t39511 + t39542;
  t34467 = t281*t13498;
  t34840 = -1.*t2311*t11500;
  t34891 = -1.*t13498*t603;
  t39865 = t411*t603*t11590;
  t39867 = t697*t603*t11611;
  t39869 = t30736 + t39865 + t39867;
  t40192 = -1.*t697*t11590;
  t40211 = t411*t11611;
  t40212 = t40192 + t40211;
  t40263 = -1.*t4699*t19122;
  t40269 = t4567*t19228;
  t40290 = t40263 + t40269;
  t37908 = t18979*t4665;
  t38196 = t4387*t23632;
  t41270 = Power(t4567,2);
  t41290 = Power(t4699,2);
  t38399 = -1.*t23632*t5543;
  t41486 = -1.*t4567*t4387*t19122;
  t41551 = -1.*t4699*t4387*t19228;
  t41552 = t37168 + t41486 + t41551;
  t38433 = t4387*t25615;
  t41689 = t4567*t4665*t19122;
  t41728 = t4699*t4665*t19228;
  t41730 = t37017 + t41689 + t41728;
  t38448 = -1.*t5117*t18979;
  t38452 = -1.*t25615*t5543;
  t42149 = t4699*t19122;
  t42155 = -1.*t4567*t19228;
  t42161 = t42149 + t42155;
  t42169 = 0.15121*t5117;
  t42180 = 0.15121*t4387;
  t42181 = t42169 + t42180;
  t42183 = t4665*t19114;
  t42184 = t37017 + t42183;
  t42201 = -1.*t4387*t19114;
  t42211 = t42201 + t37168;
  t42338 = -1.*t2311*t11588;
  t42344 = t42338 + t33155;
  t42365 = t11588*t603;
  t42366 = t30736 + t42365;
  t42518 = -0.15121*t2128;
  t42520 = -0.15121*t603;
  t42524 = t42518 + t42520;
  p_output1[0]=t1068;
  p_output1[1]=t1732;
  p_output1[2]=t1732;
  p_output1[3]=t2206;
  p_output1[4]=t2433;
  p_output1[5]=-1.*t2785*t402;
  p_output1[6]=t3037;
  p_output1[7]=t3037;
  p_output1[8]=t3198;
  p_output1[9]=t3348;
  p_output1[10]=t3348;
  p_output1[11]=t3717;
  p_output1[12]=t4008;
  p_output1[13]=t4841;
  p_output1[14]=t4987;
  p_output1[15]=t4987;
  p_output1[16]=t5387;
  p_output1[17]=t5691;
  p_output1[18]=-1.*t402*t5843;
  p_output1[19]=t5935;
  p_output1[20]=t5935;
  p_output1[21]=t6063;
  p_output1[22]=t6264;
  p_output1[23]=t6264;
  p_output1[24]=t6306;
  p_output1[25]=t6498;
  p_output1[26]=-1.*t6535*t6615 - 1.*t1068*t6661;
  p_output1[27]=-1.*t6535*t6705;
  p_output1[28]=t6758;
  p_output1[29]=t6758;
  p_output1[30]=t6661*t6904 - 1.*t6535*t6919;
  p_output1[31]=t6991;
  p_output1[32]=t2785*t402*t6661 - 1.*t6535*t7018;
  p_output1[33]=t152*t2785*t6535;
  p_output1[34]=t7300;
  p_output1[35]=t7300;
  p_output1[36]=-1.*t3198*t6661 - 1.*t6535*t6967;
  p_output1[37]=-1.*t6535*t7518;
  p_output1[38]=t7568;
  p_output1[39]=t7568;
  p_output1[40]=t7968;
  p_output1[41]=t6661*t8100 - 1.*t6535*t8377;
  p_output1[42]=-1.*t4841*t6661 - 1.*t6535*t9009;
  p_output1[43]=-1.*t6535*t9650;
  p_output1[44]=t10081;
  p_output1[45]=t10081;
  p_output1[46]=-1.*t10407*t6535 + t10183*t6661;
  p_output1[47]=t10612;
  p_output1[48]=-1.*t10747*t6535 + t402*t5843*t6661;
  p_output1[49]=t152*t5843*t6535;
  p_output1[50]=t10786;
  p_output1[51]=t10786;
  p_output1[52]=-1.*t10558*t6535 - 1.*t6063*t6661;
  p_output1[53]=-1.*t10836*t6535;
  p_output1[54]=t10892;
  p_output1[55]=t10892;
  p_output1[56]=t10962;
  p_output1[57]=-1.*t11003*t6535 + t10991*t6661;
  p_output1[58]=t7968;
  p_output1[59]=t6661*t6705;
  p_output1[60]=t11054;
  p_output1[61]=t11054;
  p_output1[62]=t6535*t6904 + t6661*t6919;
  p_output1[63]=t3198*t6661 + t6535*t6967;
  p_output1[64]=t2785*t402*t6535 + t6661*t7018;
  p_output1[65]=-1.*t152*t2785*t6661;
  p_output1[66]=t11227;
  p_output1[67]=t11227;
  p_output1[68]=t6991;
  p_output1[69]=t6661*t7518;
  p_output1[70]=t11278;
  p_output1[71]=t11278;
  p_output1[72]=t6535*t6615 + t1068*t6661;
  p_output1[73]=t6535*t8100 + t6661*t8377;
  p_output1[74]=t10962;
  p_output1[75]=t6661*t9650;
  p_output1[76]=t11330;
  p_output1[77]=t11330;
  p_output1[78]=t10183*t6535 + t10407*t6661;
  p_output1[79]=t10558*t6535 + t6063*t6661;
  p_output1[80]=t402*t5843*t6535 + t10747*t6661;
  p_output1[81]=-1.*t152*t5843*t6661;
  p_output1[82]=t11356;
  p_output1[83]=t11356;
  p_output1[84]=t10612;
  p_output1[85]=t10836*t6661;
  p_output1[86]=t11393;
  p_output1[87]=t11393;
  p_output1[88]=t4841*t6661 + t6535*t9009;
  p_output1[89]=t10991*t6535 + t11003*t6661;
  p_output1[90]=t11861*t3198 - 1.*t11920*t2785*t402 + t2433*(t11628*t2785*t402 + t11644*t2785*t402) + t152*t2785*(t11855*t2433 + t11628*t3198 + t11644*t3198 + t11855*t7518);
  p_output1[91]=t11954 + t12229 + t2433*(t12003 + t12020 + t12026 + t12058 - 1.*t11959*t11981*t2785 - 1.*t11981*t11987*t2785) + t152*t2785*(t12094 + t12108 + t12191 + t12217 + t11981*t152*t2433 - 1.*t11981*t3198*t402);
  p_output1[92]=t11954 + t12229 + t2433*(t12003 + t12026 + t12058 + t12401 - 1.*t11959*t12379*t2785 - 1.*t11987*t12379*t2785) + t152*t2785*(t12094 + t12191 + t12217 + t12410 + t12379*t152*t2433 - 1.*t12379*t3198*t402);
  p_output1[93]=t152*t2785*(t13014 + t13057 + t13233 + t13235 + t12613*t2433 + t12651*t3198) + t11861*t3717 + t2433*(t12462 - 1.*t12613*t152*t2785 + t12651*t2785*t402);
  p_output1[94]=t11861*t4008 + t2433*(t13408 - 1.*t13741*t152*t2785 + t13973*t2785*t402) + t152*t2785*(t14064 + t14082 + t13741*t2433 + t13973*t3198 + t11644*t4008 + t11855*t8377);
  p_output1[95]=t1068*t14346 + t14510*t3198 + t2433*(t1068*t11628 + t1068*t11644 + t11855*t3717 + t11855*t6705) + t3717*(-1.*t11855*t2433 - 1.*t11628*t3198 - 1.*t11644*t3198 - 1.*t11855*t7518);
  p_output1[96]=t14869 + t14888 + t2433*(t14710 + t14720 + t14756 + t14794 + t11981*t152*t3717 - 1.*t1068*t11981*t402) + t3717*(t14585 + t14597 + t14667 + t14692 - 1.*t11981*t152*t2433 + t11981*t3198*t402);
  p_output1[97]=t14869 + t14888 + t2433*(t14710 + t14756 + t14794 + t15072 + t12379*t152*t3717 - 1.*t1068*t12379*t402) + t3717*(t14585 + t14667 + t14692 + t14992 - 1.*t12379*t152*t2433 + t12379*t3198*t402);
  p_output1[98]=t14346*t2206 + t14510*t3717 + (t16352 + t16427 + t16685 + t16708 - 1.*t12613*t2433 - 1.*t12651*t3198)*t3717 + t2433*(t1068*t12651 + t15517 + t15708 + t11644*t2206 + t12613*t3717 + t11855*t6919);
  p_output1[99]=t14346*t2433 + t2433*(t11898 + t11912 + t11919 + t1068*t13973 + t16738 + t13741*t3717) + t14510*t4008 + t3717*(t16796 + t16797 - 1.*t13741*t2433 - 1.*t13973*t3198 - 1.*t11644*t4008 - 1.*t11855*t8377);
  p_output1[100]=t1068*t16946 - 1.*t17041*t2785*t402 + t3717*(-1.*t11628*t2785*t402 - 1.*t11644*t2785*t402) + t152*t2785*(-1.*t1068*t11628 - 1.*t1068*t11644 - 1.*t11855*t3717 - 1.*t11855*t6705);
  p_output1[101]=t17101 + t17399 + (t17169 + t17206 + t17238 + t17239 + t11959*t11981*t2785 + t11981*t11987*t2785)*t3717 + t152*t2785*(t17288 + t17316 + t17348 + t17356 - 1.*t11981*t152*t3717 + t1068*t11981*t402);
  p_output1[102]=t17101 + t17399 + (t17169 + t17238 + t17239 + t17541 + t11959*t12379*t2785 + t11987*t12379*t2785)*t3717 + t152*t2785*(t17288 + t17348 + t17356 + t17607 - 1.*t12379*t152*t3717 + t1068*t12379*t402);
  p_output1[103]=t16946*t2206 + t3717*(t17808 + t12613*t152*t2785 - 1.*t12651*t2785*t402) + t152*t2785*(-1.*t1068*t12651 + t17900 + t17944 - 1.*t11644*t2206 - 1.*t12613*t3717 - 1.*t11855*t6919);
  p_output1[104]=t16946*t2433 + t152*t2785*(-1.*t1068*t13973 + t14261 + t14283 + t14310 + t18508 - 1.*t13741*t3717) + t3717*(t18345 + t13741*t152*t2785 - 1.*t13973*t2785*t402);
  p_output1[105]=-1.*t19797*t402*t5843 + t5691*(t19275*t402*t5843 + t19420*t402*t5843) + t19485*t6063 + t152*t5843*(t10836*t19473 + t19473*t5691 + t19275*t6063 + t19420*t6063);
  p_output1[106]=t19917 + t20912 + t5691*(t20426 + t20440 + t20509 + t20520 - 1.*t11959*t20282*t5843 - 1.*t11987*t20282*t5843) + t152*t5843*(t20554 + t20574 + t20823 + t20831 + t152*t20282*t5691 - 1.*t20282*t402*t6063);
  p_output1[107]=t19917 + t20912 + t5691*(t20426 + t20509 + t20520 + t22132 - 1.*t11959*t21679*t5843 - 1.*t11987*t21679*t5843) + t152*t5843*(t20554 + t20823 + t20831 + t22400 + t152*t21679*t5691 - 1.*t21679*t402*t6063);
  p_output1[108]=t5691*(t23599 - 1.*t152*t24234*t5843 + t24389*t402*t5843) + t152*t5843*(t24485 + t24625 + t24647 + t24667 + t24234*t5691 + t24389*t6063) + t19485*t6306;
  p_output1[109]=t5691*(t25575 - 1.*t152*t25902*t5843 + t26196*t402*t5843) + t19485*t6498 + t152*t5843*(t11003*t19473 + t26241 + t26281 + t25902*t5691 + t26196*t6063 + t19420*t6498);
  p_output1[110]=t26771*t4841 + t26964*t6063 + (-1.*t10836*t19473 - 1.*t19473*t5691 - 1.*t19275*t6063 - 1.*t19420*t6063)*t6306 + t5691*(t19275*t4841 + t19420*t4841 + t19473*t6306 + t19473*t9650);
  p_output1[111]=t27409 + t27411 + (t26984 + t27045 + t27144 + t27199 - 1.*t152*t20282*t5691 + t20282*t402*t6063)*t6306 + t5691*(t27215 + t27221 + t27280 + t27351 - 1.*t20282*t402*t4841 + t152*t20282*t6306);
  p_output1[112]=t27409 + t27411 + (t26984 + t27144 + t27199 + t27413 - 1.*t152*t21679*t5691 + t21679*t402*t6063)*t6306 + t5691*(t27215 + t27280 + t27351 + t27480 - 1.*t21679*t402*t4841 + t152*t21679*t6306);
  p_output1[113]=t26771*t5387 + t26964*t6306 + (t27509 + t27512 + t27515 + t27517 - 1.*t24234*t5691 - 1.*t24389*t6063)*t6306 + t5691*(t10407*t19473 + t27498 + t27499 + t24389*t4841 + t19420*t5387 + t24234*t6306);
  p_output1[114]=t26771*t5691 + t5691*(t19686 + t19701 + t19703 + t27525 + t26196*t4841 + t25902*t6306) + t26964*t6498 + t6306*(-1.*t11003*t19473 + t27539 + t27540 - 1.*t25902*t5691 - 1.*t26196*t6063 - 1.*t19420*t6498);
  p_output1[115]=t28550*t4841 - 1.*t29198*t402*t5843 + (-1.*t19275*t402*t5843 - 1.*t19420*t402*t5843)*t6306 + t152*t5843*(-1.*t19275*t4841 - 1.*t19420*t4841 - 1.*t19473*t6306 - 1.*t19473*t9650);
  p_output1[116]=t29326 + t29968 + (t29534 + t29564 + t29569 + t29580 + t11959*t20282*t5843 + t11987*t20282*t5843)*t6306 + t152*t5843*(t29683 + t29699 + t29725 + t29827 + t20282*t402*t4841 - 1.*t152*t20282*t6306);
  p_output1[117]=t29326 + t29968 + (t29534 + t29569 + t29580 + t30085 + t11959*t21679*t5843 + t11987*t21679*t5843)*t6306 + t152*t5843*(t29683 + t29725 + t29827 + t30292 + t21679*t402*t4841 - 1.*t152*t21679*t6306);
  p_output1[118]=t28550*t5387 + (t30331 + t152*t24234*t5843 - 1.*t24389*t402*t5843)*t6306 + t152*t5843*(-1.*t10407*t19473 + t30365 + t30372 - 1.*t24389*t4841 - 1.*t19420*t5387 - 1.*t24234*t6306);
  p_output1[119]=t28550*t5691 + (t30466 + t152*t25902*t5843 - 1.*t26196*t402*t5843)*t6306 + t152*t5843*(t26658 + t26690 + t26757 + t30491 - 1.*t26196*t4841 - 1.*t25902*t6306);
  p_output1[120]=t30509 + t30634 + (t12003 + t12020 - 1.*t11981*t2785 + t30516)*t6967 + (t12094 + t12108 + t11981*t2348 + t30532)*t7018;
  p_output1[121]=t30509 + t30634 + (t12003 + t12401 - 1.*t12379*t2785 + t30516)*t6967 + (t12094 + t12410 + t12379*t2348 + t30532)*t7018;
  p_output1[122]=t30506*t6615 + (t12462 - 1.*t12581*t2785)*t6967 + (t13014 + t13057 + t12581*t2348 + t30736 + t30831 + t12529*t603)*t7018;
  p_output1[123]=(t13408 - 1.*t13684*t2785)*t6967 + (t14064 + t14082 + t11500*t2311 + t13684*t2348 + t11617*t3863 + t13498*t603)*t7018 + t30506*t8100;
  p_output1[124]=t33166 + t33189 + (t14585 + t14597 - 1.*t11981*t2348 + t33031)*t6615 + t6967*(t14710 + t14720 + t33169 + t11981*t985);
  p_output1[125]=t33166 + t33189 + (t14585 + t14992 - 1.*t12379*t2348 + t33031)*t6615 + t6967*(t14710 + t15072 + t33169 + t12379*t985);
  p_output1[126]=t33187*t6615 + (t16352 + t16427 - 1.*t12581*t2348 + t34311 + t34325 + t34417)*t6615 + t33165*t6904 + t6967*(t15517 + t15708 + t11617*t2191 + t33720 + t33747 + t12581*t985);
  p_output1[127]=(t16796 + t16797 - 1.*t13684*t2348 + t34840 + t34891 - 1.*t11617*t3863)*t6615 + t33165*t6967 + t33187*t8100 + t6967*(t11898 + t16738 + t30568 + t30583 + t34467 + t13684*t985);
  p_output1[128]=t35474 + t36515 + (t17169 + t17206 + t11981*t2785 + t35499)*t6615 + t7018*(t17288 + t17316 + t36415 - 1.*t11981*t985);
  p_output1[129]=t35474 + t36515 + (t17169 + t17541 + t12379*t2785 + t35499)*t6615 + t7018*(t17288 + t17607 + t36415 - 1.*t12379*t985);
  p_output1[130]=(t17808 + t12581*t2785)*t6615 + t35250*t6904 + t7018*(t17900 + t17944 - 1.*t11500*t2128 - 1.*t11617*t2191 - 1.*t12529*t281 - 1.*t12581*t985);
  p_output1[131]=(t18345 + t13684*t2785)*t6615 + t35250*t6967 + t7018*(t14261 + t18508 - 1.*t13498*t281 + t33155 + t33159 - 1.*t13684*t985);
  p_output1[132]=t36867 + t37003 + t10747*(t20554 + t20574 + t36990 + t20282*t5602) + t10558*(t20426 + t20440 + t36886 - 1.*t20282*t5843);
  p_output1[133]=t36867 + t37003 + t10747*(t20554 + t22400 + t36990 + t21679*t5602) + t10558*(t20426 + t22132 + t36886 - 1.*t21679*t5843);
  p_output1[134]=t10747*(t24485 + t24625 + t37017 + t37020 + t23632*t5543 + t24016*t5602) + t10558*(t23599 - 1.*t24016*t5843) + t36866*t9009;
  p_output1[135]=t10991*t36866 + t10558*(t25575 - 1.*t25761*t5843) + t10747*(t26241 + t26281 + t18979*t5117 + t25615*t5543 + t25761*t5602 + t19230*t6458);
  p_output1[136]=t37172 + t37224 + t10558*(t27215 + t27221 + t37197 + t20282*t4797) + (t26984 + t27045 + t37148 - 1.*t20282*t5602)*t9009;
  p_output1[137]=t37172 + t37224 + t10558*(t27215 + t27480 + t37197 + t21679*t4797) + (t26984 + t27413 + t37148 - 1.*t21679*t5602)*t9009;
  p_output1[138]=t10183*t37170 + t10558*(t27498 + t27499 + t37908 + t38196 + t24016*t4797 + t19230*t5295) + t37217*t9009 + (t27509 + t27512 + t38392 + t38399 + t38408 - 1.*t24016*t5602)*t9009;
  p_output1[139]=t10558*t37170 + t10991*t37217 + t10558*(t19686 + t27525 + t36995 + t37001 + t38433 + t25761*t4797) + (t27539 + t27540 + t38448 + t38452 - 1.*t25761*t5602 - 1.*t19230*t6458)*t9009;
  p_output1[140]=t38492 + t38515 + t10747*(t29683 + t29699 + t38508 - 1.*t20282*t4797) + (t29534 + t29564 + t38501 + t20282*t5843)*t9009;
  p_output1[141]=t38492 + t38515 + t10747*(t29683 + t30292 + t38508 - 1.*t21679*t4797) + (t29534 + t30085 + t38501 + t21679*t5843)*t9009;
  p_output1[142]=t10183*t38475 + t10747*(t30365 + t30372 - 1.*t23632*t4387 - 1.*t18979*t4665 - 1.*t24016*t4797 - 1.*t19230*t5295) + (t30331 + t24016*t5843)*t9009;
  p_output1[143]=t10558*t38475 + t10747*(t26658 + t30491 + t37168 + t37169 - 1.*t25615*t4387 - 1.*t25761*t4797) + (t30466 + t25761*t5843)*t9009;
  p_output1[144]=t603*(t11590*t411 - 1.*t12360*t411 + t11611*t697 + t12355*t697);
  p_output1[145]=t281*t38879;
  p_output1[146]=t2311*t38879;
  p_output1[147]=t281*(-1.*t11611*t2311*t411 - 1.*t12355*t2311*t411 + t11590*t2311*t697 - 1.*t12360*t2311*t697) + t603*(t11611*t411*t603 + t12355*t411*t603 - 1.*t11590*t603*t697 + t12360*t603*t697);
  p_output1[148]=t2128*t39567 + t281*t39869 + t603*(t33720 + t33747 + t11590*t281*t411 + t11500*t39586*t603 + t11500*t39595*t603 + t11611*t281*t697) + t281*(t34311 + t34325 - 1.*t11500*t2311*t39586 - 1.*t11500*t2311*t39595 - 1.*t11590*t411*t603 - 1.*t11611*t603*t697);
  p_output1[149]=t2311*t39869 + t39567*t603 + t281*(t34840 + t34891 - 1.*t13378*t2311*t39586 - 1.*t13378*t2311*t39595 - 1.*t11590*t2128*t411 - 1.*t11611*t2128*t697) + t603*(t30568 + t34467 + t11590*t2311*t411 + t13378*t39586*t603 + t13378*t39595*t603 + t11611*t2311*t697);
  p_output1[150]=t281*(-1.*t11590*t411 + t12360*t411 - 1.*t11611*t697 - 1.*t12355*t697);
  p_output1[151]=t2128*t40212;
  p_output1[152]=t40212*t603;
  p_output1[153]=(-1.*t19122*t4567 + t21319*t4567 - 1.*t19228*t4699 - 1.*t21198*t4699)*t5543;
  p_output1[154]=t40290*t4387;
  p_output1[155]=t40290*t5117;
  p_output1[156]=t4387*(-1.*t19228*t4387*t4567 - 1.*t21198*t4387*t4567 + t19122*t4387*t4699 - 1.*t21319*t4387*t4699) + (t19228*t4567*t4665 + t21198*t4567*t4665 - 1.*t19122*t4665*t4699 + t21319*t4665*t4699)*t5543;
  p_output1[157]=t41730*t4387 + t41552*t4665 + t4387*(t38392 + t38399 - 1.*t23286*t41270*t4387 - 1.*t23286*t41290*t4387 - 1.*t19122*t4567*t4665 - 1.*t19228*t4665*t4699) + (t37908 + t38196 + t23286*t41270*t4665 + t23286*t41290*t4665 + t19122*t4567*t5117 + t19228*t4699*t5117)*t5543;
  p_output1[158]=t41730*t5117 + t41552*t5543 + (t36995 + t38433 + t19122*t4387*t4567 + t24913*t41270*t4665 + t24913*t41290*t4665 + t19228*t4387*t4699)*t5543 + t4387*(t38448 + t38452 - 1.*t24913*t41270*t4387 - 1.*t24913*t41290*t4387 - 1.*t19122*t4567*t5543 - 1.*t19228*t4699*t5543);
  p_output1[159]=t4387*(t19122*t4567 - 1.*t21319*t4567 + t19228*t4699 + t21198*t4699);
  p_output1[160]=t42161*t4665;
  p_output1[161]=t42161*t5543;
  p_output1[162]=t42181;
  p_output1[163]=t42181;
  p_output1[164]=t42184*t4387 + t42211*t4665 + t4387*(t38392 + t38399 - 1.*t23286*t4387 - 1.*t19114*t4665) + (t37908 + t38196 + t23286*t4665 + t19114*t5117)*t5543;
  p_output1[165]=t42184*t5117 + t42211*t5543 + (t36995 + t38433 + t19114*t4387 + t24913*t4665)*t5543 + t4387*(t38448 + t38452 - 1.*t24913*t4387 - 1.*t19114*t5543);
  p_output1[166]=0.28121*t4133 + t18777*t4133 - 0.305*Power(t4133,2);
  p_output1[167]=-0.28121*t4359 - 1.*t18777*t4359 + 0.305*t4133*t4359;
  p_output1[168]=t2128*t42344 + t281*t42366 + (t11588*t281 + t30568 + t33720 + t33747)*t603 + t281*(t34311 + t34325 + t34840 - 1.*t11588*t603);
  p_output1[169]=t281*(-1.*t11588*t2128 - 1.*t13378*t2311 + t34840 + t34891) + t2311*t42366 + t42344*t603 + t603*(t11588*t2311 + t30568 + t34467 + t13378*t603);
  p_output1[170]=t42524;
  p_output1[171]=t42524;
  p_output1[172]=0.28121*t156 - 1.*t11476*t156 - 0.305*Power(t156,2);
  p_output1[173]=-0.28121*t245 + t11476*t245 + 0.305*t156*t245;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
