/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 19:38:44 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2161;
  double t1753;
  double t2136;
  double t2378;
  double t2551;
  double t2555;
  double t2611;
  double t1740;
  double t2450;
  double t2707;
  double t2434;
  double t2725;
  double t2852;
  double t2889;
  double t2997;
  double t3042;
  double t2431;
  double t2144;
  double t2395;
  double t2397;
  double t3374;
  double t3375;
  double t3378;
  double t3461;
  double t3485;
  double t3490;
  double t3491;
  double t3383;
  double t3398;
  double t3424;
  double t3538;
  double t3539;
  double t3550;
  double t3562;
  double t2697;
  double t2752;
  double t2794;
  double t3044;
  double t3057;
  double t3143;
  double t3724;
  double t3657;
  double t3673;
  double t3725;
  double t3801;
  double t3840;
  double t3845;
  double t3921;
  double t3773;
  double t4049;
  double t4090;
  double t4124;
  double t4134;
  double t4161;
  double t4270;
  double t4388;
  double t3687;
  double t3727;
  double t3741;
  double t5009;
  double t5103;
  double t5104;
  double t5105;
  double t4768;
  double t4783;
  double t4794;
  double t4798;
  double t4804;
  double t4808;
  double t5123;
  double t5130;
  double t5133;
  double t5150;
  double t3895;
  double t3926;
  double t3944;
  double t2404;
  double t2845;
  double t2850;
  double t5216;
  double t5249;
  double t5276;
  double t5277;
  double t5281;
  double t3269;
  double t3276;
  double t3305;
  double t3495;
  double t3502;
  double t3504;
  double t3447;
  double t3456;
  double t3457;
  double t5402;
  double t5404;
  double t5406;
  double t5365;
  double t5368;
  double t5379;
  double t5508;
  double t5678;
  double t5703;
  double t5221;
  double t5226;
  double t5237;
  double t3575;
  double t3576;
  double t3587;
  double t3771;
  double t3981;
  double t4018;
  double t5840;
  double t5861;
  double t5862;
  double t4412;
  double t4669;
  double t4714;
  double t5112;
  double t5115;
  double t5116;
  double t4818;
  double t4870;
  double t4881;
  double t5901;
  double t5913;
  double t5925;
  double t5877;
  double t5879;
  double t5880;
  double t8204;
  double t8206;
  double t8224;
  double t5811;
  double t5814;
  double t5816;
  double t5185;
  double t5193;
  double t5203;
  double t5713;
  double t5744;
  double t5753;
  double t5256;
  double t5261;
  double t5266;
  double t8658;
  double t8667;
  double t8672;
  double t5284;
  double t5294;
  double t5312;
  double t5317;
  double t5347;
  double t5354;
  double t5390;
  double t5392;
  double t5393;
  double t8850;
  double t8937;
  double t8961;
  double t5383;
  double t5384;
  double t5385;
  double t5414;
  double t5415;
  double t5417;
  double t8972;
  double t8998;
  double t8999;
  double t5756;
  double t5759;
  double t5775;
  double t5779;
  double t5803;
  double t5804;
  double t8366;
  double t8385;
  double t8401;
  double t5829;
  double t5835;
  double t5838;
  double t9225;
  double t9259;
  double t9278;
  double t5864;
  double t5866;
  double t5867;
  double t5870;
  double t5871;
  double t5872;
  double t5889;
  double t5891;
  double t5892;
  double t9448;
  double t9474;
  double t9485;
  double t5882;
  double t5884;
  double t5886;
  double t8008;
  double t8184;
  double t8187;
  double t9514;
  double t9541;
  double t9566;
  double t8410;
  double t8423;
  double t8425;
  double t8436;
  double t8438;
  double t8440;
  double t3371;
  double t3432;
  double t3441;
  double t9741;
  double t9780;
  double t9785;
  double t9786;
  double t9807;
  double t9880;
  double t9898;
  double t9901;
  double t9908;
  double t9914;
  double t9924;
  double t9949;
  double t9950;
  double t9734;
  double t9823;
  double t9855;
  double t9858;
  double t9899;
  double t9951;
  double t9955;
  double t9956;
  double t9960;
  double t9974;
  double t9978;
  double t9982;
  double t9983;
  double t9984;
  double t9994;
  double t10035;
  double t10044;
  double t10045;
  double t9878;
  double t9995;
  double t10022;
  double t10072;
  double t10074;
  double t10077;
  double t10061;
  double t10066;
  double t10068;
  double t10069;
  double t10071;
  double t10078;
  double t10080;
  double t10124;
  double t10130;
  double t10132;
  double t10099;
  double t10100;
  double t10101;
  double t10106;
  double t10117;
  double t10168;
  double t10120;
  double t10156;
  double t10223;
  double t10225;
  double t10226;
  double t10232;
  double t10236;
  double t10248;
  double t10249;
  double t10179;
  double t10180;
  double t10188;
  double t10255;
  double t10256;
  double t10257;
  double t10198;
  double t10200;
  double t10218;
  double t10332;
  double t10334;
  double t10337;
  double t10342;
  double t10349;
  double t10366;
  double t10368;
  double t3563;
  double t3565;
  double t3566;
  double t10311;
  double t10314;
  double t10315;
  double t10345;
  double t10371;
  double t10372;
  double t10375;
  double t10380;
  double t10383;
  double t10531;
  double t10533;
  double t10537;
  double t10743;
  double t10748;
  double t10784;
  double t11036;
  double t11037;
  double t3567;
  double t3588;
  double t3654;
  double t10560;
  double t10630;
  double t10665;
  double t10768;
  double t11039;
  double t11054;
  double t11077;
  double t11083;
  double t11326;
  double t10490;
  double t10507;
  double t10512;
  double t12419;
  double t12441;
  double t13015;
  double t13118;
  double t13190;
  double t13261;
  double t13333;
  double t13334;
  double t13363;
  double t13374;
  double t13377;
  double t13389;
  double t13395;
  double t3193;
  double t3323;
  double t3366;
  double t14073;
  double t14105;
  double t14107;
  double t14730;
  double t14731;
  double t14737;
  double t14884;
  double t14971;
  double t15037;
  double t15129;
  double t15133;
  double t15134;
  double t15165;
  double t15199;
  double t15204;
  double t15209;
  double t4796;
  double t4809;
  double t4817;
  double t15814;
  double t15815;
  double t15817;
  double t15825;
  double t15840;
  double t15870;
  double t15877;
  double t15883;
  double t15898;
  double t15902;
  double t15903;
  double t15911;
  double t15920;
  double t15809;
  double t15843;
  double t15859;
  double t15862;
  double t15881;
  double t15933;
  double t15944;
  double t15951;
  double t15959;
  double t15981;
  double t15983;
  double t16036;
  double t16056;
  double t16057;
  double t16131;
  double t16192;
  double t16193;
  double t16194;
  double t15865;
  double t16181;
  double t16187;
  double t16334;
  double t16335;
  double t16336;
  double t16315;
  double t16329;
  double t16330;
  double t16332;
  double t16333;
  double t16337;
  double t16342;
  double t16388;
  double t16390;
  double t16391;
  double t16371;
  double t16372;
  double t16373;
  double t16376;
  double t16380;
  double t16401;
  double t16457;
  double t16458;
  double t16461;
  double t16462;
  double t16463;
  double t16464;
  double t16465;
  double t16407;
  double t16408;
  double t16414;
  double t16468;
  double t16469;
  double t16470;
  double t16424;
  double t16425;
  double t16453;
  double t16481;
  double t16482;
  double t16484;
  double t16485;
  double t16490;
  double t16491;
  double t16503;
  double t16508;
  double t16509;
  double t5161;
  double t5166;
  double t5168;
  double t16486;
  double t16487;
  double t16488;
  double t16501;
  double t16521;
  double t16523;
  double t16535;
  double t16542;
  double t16546;
  double t16589;
  double t16592;
  double t16600;
  double t16603;
  double t16607;
  double t16613;
  double t16618;
  double t16653;
  double t5184;
  double t5204;
  double t5206;
  double t16593;
  double t16594;
  double t16595;
  double t16611;
  double t16657;
  double t16659;
  double t16663;
  double t16664;
  double t16665;
  double t16564;
  double t16581;
  double t16583;
  double t16698;
  double t16699;
  double t16700;
  double t16701;
  double t16713;
  double t16716;
  double t16724;
  double t16725;
  double t16728;
  double t16732;
  double t16733;
  double t16737;
  double t16738;
  double t4136;
  double t4723;
  double t4767;
  double t16769;
  double t16777;
  double t16779;
  double t16807;
  double t16808;
  double t16809;
  double t16810;
  double t16820;
  double t16823;
  double t16826;
  double t16833;
  double t16836;
  double t16843;
  double t16851;
  double t16853;
  double t16866;
  double t10176;
  double t10190;
  double t16935;
  double t16937;
  double t16938;
  double t10262;
  double t16942;
  double t10286;
  double t16947;
  double t16951;
  double t16953;
  double t16954;
  double t16956;
  double t10318;
  double t10445;
  double t10686;
  double t11519;
  double t11531;
  double t13272;
  double t13370;
  double t16977;
  double t16983;
  double t13416;
  double t17016;
  double t17022;
  double t17025;
  double t17026;
  double t17027;
  double t13635;
  double t17032;
  double t17036;
  double t17038;
  double t13844;
  double t13879;
  double t14066;
  double t14161;
  double t14563;
  double t14570;
  double t15131;
  double t15178;
  double t17058;
  double t17063;
  double t17087;
  double t17088;
  double t17093;
  double t15235;
  double t17097;
  double t15254;
  double t17105;
  double t17108;
  double t17109;
  double t15296;
  double t15312;
  double t15336;
  double t15606;
  double t15739;
  double t16406;
  double t16420;
  double t17173;
  double t17175;
  double t17177;
  double t16471;
  double t17179;
  double t16474;
  double t17184;
  double t17187;
  double t17188;
  double t17192;
  double t17193;
  double t16489;
  double t16560;
  double t16596;
  double t16671;
  double t16672;
  double t16717;
  double t16729;
  double t17211;
  double t17214;
  double t16741;
  double t17241;
  double t17244;
  double t17249;
  double t17250;
  double t17258;
  double t16747;
  double t17265;
  double t17270;
  double t17271;
  double t16756;
  double t16757;
  double t16768;
  double t16785;
  double t16791;
  double t16792;
  double t16830;
  double t16845;
  double t17349;
  double t17355;
  double t17402;
  double t17403;
  double t17404;
  double t16877;
  double t17421;
  double t16884;
  double t17432;
  double t17441;
  double t17448;
  double t16898;
  double t16911;
  double t16912;
  double t16920;
  double t16928;
  double t17598;
  double t17604;
  double t17605;
  double t17051;
  double t17052;
  double t17721;
  double t17794;
  double t17060;
  double t17672;
  double t17677;
  double t17681;
  double t17071;
  double t17075;
  double t17076;
  double t17826;
  double t17827;
  double t17828;
  double t17857;
  double t17859;
  double t17860;
  double t17869;
  double t17870;
  double t17871;
  double t17340;
  double t17341;
  double t17914;
  double t17920;
  double t17351;
  double t17932;
  double t17933;
  double t17936;
  double t17372;
  double t17949;
  double t17950;
  double t17951;
  double t17381;
  double t17382;
  double t18073;
  double t18074;
  double t18075;
  double t18079;
  double t18080;
  double t18082;
  double t18083;
  double t18084;
  double t18091;
  double t18092;
  double t18585;
  double t18637;
  double t18683;
  double t18686;
  double t18727;
  double t18728;
  double t18730;
  t2161 = Cos(var1[13]);
  t1753 = Cos(var1[14]);
  t2136 = Sin(var1[13]);
  t2378 = Sin(var1[14]);
  t2551 = t2161*t1753;
  t2555 = t2136*t2378;
  t2611 = t2551 + t2555;
  t1740 = Cos(var1[4]);
  t2450 = Cos(var1[5]);
  t2707 = Sin(var1[12]);
  t2434 = Cos(var1[12]);
  t2725 = Sin(var1[5]);
  t2852 = -1.*t2450*t2707*t2611;
  t2889 = -1.*t2434*t2611*t2725;
  t2997 = t2852 + t2889;
  t3042 = t1740*t2997;
  t2431 = Sin(var1[4]);
  t2144 = -1.*t1753*t2136;
  t2395 = t2161*t2378;
  t2397 = t2144 + t2395;
  t3374 = t1753*t2136;
  t3375 = -1.*t2161*t2378;
  t3378 = t3374 + t3375;
  t3461 = -1.*t2434*t2450;
  t3485 = t2707*t2725;
  t3490 = t3461 + t3485;
  t3491 = t1740*t3490;
  t3383 = t2434*t2450*t3378;
  t3398 = -1.*t2707*t3378*t2725;
  t3424 = t3383 + t3398;
  t3538 = -1.*t2450*t2707*t3378;
  t3539 = -1.*t2434*t3378*t2725;
  t3550 = t3538 + t3539;
  t3562 = t1740*t3550;
  t2697 = t2434*t2450*t2611;
  t2752 = -1.*t2707*t2611*t2725;
  t2794 = t2697 + t2752;
  t3044 = -1.*t2161*t1753;
  t3057 = -1.*t2136*t2378;
  t3143 = t3044 + t3057;
  t3724 = Cos(var1[10]);
  t3657 = Cos(var1[11]);
  t3673 = Sin(var1[10]);
  t3725 = Sin(var1[11]);
  t3801 = -1.*t3724*t3657;
  t3840 = -1.*t3673*t3725;
  t3845 = t3801 + t3840;
  t3921 = Sin(var1[9]);
  t3773 = Cos(var1[9]);
  t4049 = -1.*t2450*t3921*t3845;
  t4090 = -1.*t3773*t3845*t2725;
  t4124 = t4049 + t4090;
  t4134 = t1740*t4124;
  t4161 = t3657*t3673;
  t4270 = -1.*t3724*t3725;
  t4388 = t4161 + t4270;
  t3687 = -1.*t3657*t3673;
  t3727 = t3724*t3725;
  t3741 = t3687 + t3727;
  t5009 = t3773*t2450;
  t5103 = -1.*t3921*t2725;
  t5104 = t5009 + t5103;
  t5105 = t1740*t5104;
  t4768 = t3724*t3657;
  t4783 = t3673*t3725;
  t4794 = t4768 + t4783;
  t4798 = t3773*t2450*t3741;
  t4804 = -1.*t3921*t3741*t2725;
  t4808 = t4798 + t4804;
  t5123 = -1.*t2450*t3921*t3741;
  t5130 = -1.*t3773*t3741*t2725;
  t5133 = t5123 + t5130;
  t5150 = t1740*t5133;
  t3895 = t3773*t2450*t3845;
  t3926 = -1.*t3921*t3845*t2725;
  t3944 = t3895 + t3926;
  t2404 = t1740*t2397;
  t2845 = -1.*t2431*t2794;
  t2850 = t2404 + t2845;
  t5216 = Sin(var1[3]);
  t5249 = Cos(var1[3]);
  t5276 = t5216*t2431*t2997;
  t5277 = t5249*t2794;
  t5281 = t5276 + t5277;
  t3269 = t2434*t2450*t2397;
  t3276 = -1.*t2707*t2397*t2725;
  t3305 = t3269 + t3276;
  t3495 = t1740*t2611;
  t3502 = -1.*t2431*t3424;
  t3504 = t3495 + t3502;
  t3447 = -1.*t2450*t2707;
  t3456 = -1.*t2434*t2725;
  t3457 = t3447 + t3456;
  t5402 = t5249*t3457;
  t5404 = t5216*t2431*t3490;
  t5406 = t5402 + t5404;
  t5365 = t2450*t2707*t3378;
  t5368 = t2434*t3378*t2725;
  t5379 = t5365 + t5368;
  t5508 = t5216*t2431*t3550;
  t5678 = t5249*t3424;
  t5703 = t5508 + t5678;
  t5221 = t2450*t2707*t2611;
  t5226 = t2434*t2611*t2725;
  t5237 = t5221 + t5226;
  t3575 = t2434*t2450*t3143;
  t3576 = -1.*t2707*t3143*t2725;
  t3587 = t3575 + t3576;
  t3771 = t1740*t3741;
  t3981 = -1.*t2431*t3944;
  t4018 = t3771 + t3981;
  t5840 = t5216*t2431*t4124;
  t5861 = t5249*t3944;
  t5862 = t5840 + t5861;
  t4412 = t3773*t2450*t4388;
  t4669 = -1.*t3921*t4388*t2725;
  t4714 = t4412 + t4669;
  t5112 = t1740*t4794;
  t5115 = -1.*t2431*t4808;
  t5116 = t5112 + t5115;
  t4818 = t2450*t3921;
  t4870 = t3773*t2725;
  t4881 = t4818 + t4870;
  t5901 = t5249*t4881;
  t5913 = t5216*t2431*t5104;
  t5925 = t5901 + t5913;
  t5877 = t2450*t3921*t3741;
  t5879 = t3773*t3741*t2725;
  t5880 = t5877 + t5879;
  t8204 = t5216*t2431*t5133;
  t8206 = t5249*t4808;
  t8224 = t8204 + t8206;
  t5811 = t2450*t3921*t3845;
  t5814 = t3773*t3845*t2725;
  t5816 = t5811 + t5814;
  t5185 = t3773*t2450*t4794;
  t5193 = -1.*t3921*t4794*t2725;
  t5203 = t5185 + t5193;
  t5713 = t5249*t5237;
  t5744 = -1.*t5216*t2850;
  t5753 = t5713 + t5744;
  t5256 = -1.*t2397*t2431;
  t5261 = -1.*t1740*t2794;
  t5266 = t5256 + t5261;
  t8658 = -1.*t5249*t2431*t2997;
  t8667 = t5216*t2794;
  t8672 = t8658 + t8667;
  t5284 = t2450*t2707*t2397;
  t5294 = t2434*t2397*t2725;
  t5312 = t5284 + t5294;
  t5317 = t1740*t3143;
  t5347 = -1.*t2431*t3305;
  t5354 = t5317 + t5347;
  t5390 = t2434*t2450;
  t5392 = -1.*t2707*t2725;
  t5393 = t5390 + t5392;
  t8850 = t5216*t3457;
  t8937 = -1.*t5249*t2431*t3490;
  t8961 = t8850 + t8937;
  t5383 = t5249*t5379;
  t5384 = -1.*t5216*t3504;
  t5385 = t5383 + t5384;
  t5414 = -1.*t2611*t2431;
  t5415 = -1.*t1740*t3424;
  t5417 = t5414 + t5415;
  t8972 = -1.*t5249*t2431*t3550;
  t8998 = t5216*t3424;
  t8999 = t8972 + t8998;
  t5756 = t2450*t2707*t3143;
  t5759 = t2434*t3143*t2725;
  t5775 = t5756 + t5759;
  t5779 = t1740*t3378;
  t5803 = -1.*t2431*t3587;
  t5804 = t5779 + t5803;
  t8366 = t5249*t5816;
  t8385 = -1.*t5216*t4018;
  t8401 = t8366 + t8385;
  t5829 = -1.*t3741*t2431;
  t5835 = -1.*t1740*t3944;
  t5838 = t5829 + t5835;
  t9225 = -1.*t5249*t2431*t4124;
  t9259 = t5216*t3944;
  t9278 = t9225 + t9259;
  t5864 = t2450*t3921*t4388;
  t5866 = t3773*t4388*t2725;
  t5867 = t5864 + t5866;
  t5870 = t1740*t3845;
  t5871 = -1.*t2431*t4714;
  t5872 = t5870 + t5871;
  t5889 = -1.*t3773*t2450;
  t5891 = t3921*t2725;
  t5892 = t5889 + t5891;
  t9448 = t5216*t4881;
  t9474 = -1.*t5249*t2431*t5104;
  t9485 = t9448 + t9474;
  t5882 = t5249*t5880;
  t5884 = -1.*t5216*t5116;
  t5886 = t5882 + t5884;
  t8008 = -1.*t4794*t2431;
  t8184 = -1.*t1740*t4808;
  t8187 = t8008 + t8184;
  t9514 = -1.*t5249*t2431*t5133;
  t9541 = t5216*t4808;
  t9566 = t9514 + t9541;
  t8410 = t2450*t3921*t4794;
  t8423 = t3773*t4794*t2725;
  t8425 = t8410 + t8423;
  t8436 = t1740*t4388;
  t8438 = -1.*t2431*t5203;
  t8440 = t8436 + t8438;
  t3371 = t2611*t2431;
  t3432 = t1740*t3424;
  t3441 = t3371 + t3432;
  t9741 = -1.*t1753;
  t9780 = 1. + t9741;
  t9785 = 0.50321*t9780;
  t9786 = 0.19821*t1753;
  t9807 = t9785 + t9786;
  t9880 = -1.*t2434;
  t9898 = 1. + t9880;
  t9901 = -1.*t2161;
  t9908 = 1. + t9901;
  t9914 = 0.28121*t9908;
  t9924 = t2161*t9807;
  t9949 = -0.305*t2136*t2378;
  t9950 = t9914 + t9924 + t9949;
  t9734 = 0.28121*t2136;
  t9823 = -1.*t9807*t2136;
  t9855 = -0.305*t2161*t2378;
  t9858 = t9734 + t9823 + t9855;
  t9899 = 0.15121*t9898;
  t9951 = t2434*t9950;
  t9955 = t9899 + t9951;
  t9956 = t2450*t9955;
  t9960 = -0.15121*t9898;
  t9974 = -0.15121*t2434;
  t9978 = -0.15121*t2707;
  t9982 = t2707*t9950;
  t9983 = t9960 + t9974 + t9978 + t9982;
  t9984 = -1.*t9983*t2725;
  t9994 = t9956 + t9984;
  t10035 = t9858*t2431;
  t10044 = t1740*t9994;
  t10045 = t10035 + t10044;
  t9878 = -1.*t9858*t2431;
  t9995 = -1.*t1740*t9994;
  t10022 = t9878 + t9995;
  t10072 = t1740*t9858;
  t10074 = -1.*t2431*t9994;
  t10077 = t10072 + t10074;
  t10061 = t2450*t9983;
  t10066 = t9955*t2725;
  t10068 = t10061 + t10066;
  t10069 = -1.*t5393*t10068;
  t10071 = -1.*t1740*t3457*t10045;
  t10078 = t2431*t3457*t10077;
  t10080 = t10069 + t10071 + t10078;
  t10124 = -1.*t2450*t9983;
  t10130 = -1.*t9955*t2725;
  t10132 = t10124 + t10130;
  t10099 = t5379*t10068;
  t10100 = t3441*t10045;
  t10101 = t3504*t10077;
  t10106 = t10099 + t10100 + t10101;
  t10117 = t1740*t3550*t10080;
  t10168 = -1.*t3457*t10068;
  t10120 = Power(t1740,2);
  t10156 = Power(t2431,2);
  t10223 = 0.15121*t2707;
  t10225 = -1.*t2707*t9950;
  t10226 = t10223 + t10225;
  t10232 = t2450*t10226;
  t10236 = t9974 + t9951;
  t10248 = -1.*t10236*t2725;
  t10249 = t10232 + t10248;
  t10179 = -1.*t1740*t3490*t10045;
  t10180 = t2431*t3490*t10077;
  t10188 = t3424*t10068;
  t10255 = t2450*t10236;
  t10256 = t10226*t2725;
  t10257 = t10255 + t10256;
  t10198 = t1740*t3550*t10045;
  t10200 = -1.*t2431*t3550*t10077;
  t10218 = t1740*t3490*t10106;
  t10332 = 0.28121*t2161;
  t10334 = -1.*t2161*t9807;
  t10337 = 0.305*t2136*t2378;
  t10342 = t10332 + t10334 + t10337;
  t10349 = t2434*t2450*t9858;
  t10366 = -1.*t2707*t9858*t2725;
  t10368 = t10349 + t10366;
  t3563 = t2397*t2431;
  t3565 = t1740*t2794;
  t3566 = t3563 + t3565;
  t10311 = t2450*t2707*t9858;
  t10314 = t2434*t9858*t2725;
  t10315 = t10311 + t10314;
  t10345 = t10342*t2431;
  t10371 = t1740*t10368;
  t10372 = t10345 + t10371;
  t10375 = t1740*t10342;
  t10380 = -1.*t2431*t10368;
  t10383 = t10375 + t10380;
  t10531 = -0.305*t1753*t2136;
  t10533 = 0.305*t2161*t2378;
  t10537 = t10531 + t10533;
  t10743 = -0.305*t2161*t1753;
  t10748 = t10743 + t9949;
  t10784 = t2434*t2450*t10537;
  t11036 = -1.*t2707*t10537*t2725;
  t11037 = t10784 + t11036;
  t3567 = t3378*t2431;
  t3588 = t1740*t3587;
  t3654 = t3567 + t3588;
  t10560 = t2450*t2707*t10537;
  t10630 = t2434*t10537*t2725;
  t10665 = t10560 + t10630;
  t10768 = t10748*t2431;
  t11039 = t1740*t11037;
  t11054 = t10768 + t11039;
  t11077 = t1740*t10748;
  t11083 = -1.*t2431*t11037;
  t11326 = t11077 + t11083;
  t10490 = t5237*t10068;
  t10507 = t3566*t10045;
  t10512 = t2850*t10077;
  t12419 = -1.*t5379*t10068;
  t12441 = -1.*t3441*t10045;
  t13015 = -1.*t3504*t10077;
  t13118 = t12419 + t12441 + t13015;
  t13190 = t10490 + t10507 + t10512;
  t13261 = -1.*t3424*t10068;
  t13333 = -1.*t1740*t3550*t10045;
  t13334 = t2431*t3550*t10077;
  t13363 = t2794*t10068;
  t13374 = t1740*t2997*t10045;
  t13377 = -1.*t2431*t2997*t10077;
  t13389 = t1740*t2997*t13118;
  t13395 = t1740*t3550*t13190;
  t3193 = t3143*t2431;
  t3323 = t1740*t3305;
  t3366 = t3193 + t3323;
  t14073 = -1.*t5237*t10068;
  t14105 = -1.*t3566*t10045;
  t14107 = -1.*t2850*t10077;
  t14730 = t5393*t10068;
  t14731 = t1740*t3457*t10045;
  t14737 = -1.*t2431*t3457*t10077;
  t14884 = t14730 + t14731 + t14737;
  t14971 = t14073 + t14105 + t14107;
  t15037 = t1740*t2997*t14884;
  t15129 = t3457*t10068;
  t15133 = t1740*t3490*t10045;
  t15134 = -1.*t2431*t3490*t10077;
  t15165 = -1.*t2794*t10068;
  t15199 = -1.*t1740*t2997*t10045;
  t15204 = t2431*t2997*t10077;
  t15209 = t1740*t3490*t14971;
  t4796 = t4794*t2431;
  t4809 = t1740*t4808;
  t4817 = t4796 + t4809;
  t15814 = -1.*t3657;
  t15815 = 1. + t15814;
  t15817 = -0.50321*t15815;
  t15825 = -0.19821*t3657;
  t15840 = t15817 + t15825;
  t15870 = -1.*t3773;
  t15877 = 1. + t15870;
  t15883 = -1.*t3724;
  t15898 = 1. + t15883;
  t15902 = -0.28121*t15898;
  t15903 = t3724*t15840;
  t15911 = 0.305*t3673*t3725;
  t15920 = t15902 + t15903 + t15911;
  t15809 = 0.28121*t3673;
  t15843 = t15840*t3673;
  t15859 = -0.305*t3724*t3725;
  t15862 = t15809 + t15843 + t15859;
  t15881 = -0.15121*t15877;
  t15933 = t3773*t15920;
  t15944 = t15881 + t15933;
  t15951 = t2450*t15944;
  t15959 = 0.15121*t15877;
  t15981 = 0.15121*t3773;
  t15983 = 0.15121*t3921;
  t16036 = t3921*t15920;
  t16056 = t15959 + t15981 + t15983 + t16036;
  t16057 = -1.*t16056*t2725;
  t16131 = t15951 + t16057;
  t16192 = t15862*t2431;
  t16193 = t1740*t16131;
  t16194 = t16192 + t16193;
  t15865 = -1.*t15862*t2431;
  t16181 = -1.*t1740*t16131;
  t16187 = t15865 + t16181;
  t16334 = t1740*t15862;
  t16335 = -1.*t2431*t16131;
  t16336 = t16334 + t16335;
  t16315 = t2450*t16056;
  t16329 = t15944*t2725;
  t16330 = t16315 + t16329;
  t16332 = -1.*t5892*t16330;
  t16333 = -1.*t1740*t4881*t16194;
  t16337 = t2431*t4881*t16336;
  t16342 = t16332 + t16333 + t16337;
  t16388 = -1.*t2450*t16056;
  t16390 = -1.*t15944*t2725;
  t16391 = t16388 + t16390;
  t16371 = t5880*t16330;
  t16372 = t4817*t16194;
  t16373 = t5116*t16336;
  t16376 = t16371 + t16372 + t16373;
  t16380 = t1740*t5133*t16342;
  t16401 = -1.*t4881*t16330;
  t16457 = -0.15121*t3921;
  t16458 = -1.*t3921*t15920;
  t16461 = t16457 + t16458;
  t16462 = t2450*t16461;
  t16463 = t15981 + t15933;
  t16464 = -1.*t16463*t2725;
  t16465 = t16462 + t16464;
  t16407 = -1.*t1740*t5104*t16194;
  t16408 = t2431*t5104*t16336;
  t16414 = t4808*t16330;
  t16468 = t2450*t16463;
  t16469 = t16461*t2725;
  t16470 = t16468 + t16469;
  t16424 = t1740*t5133*t16194;
  t16425 = -1.*t2431*t5133*t16336;
  t16453 = t1740*t5104*t16376;
  t16481 = -0.28121*t3673;
  t16482 = -1.*t15840*t3673;
  t16484 = 0.305*t3724*t3725;
  t16485 = t16481 + t16482 + t16484;
  t16490 = 0.28121*t3724;
  t16491 = t16490 + t15903 + t15911;
  t16503 = t3773*t2450*t16485;
  t16508 = -1.*t3921*t16485*t2725;
  t16509 = t16503 + t16508;
  t5161 = t3741*t2431;
  t5166 = t1740*t3944;
  t5168 = t5161 + t5166;
  t16486 = t2450*t3921*t16485;
  t16487 = t3773*t16485*t2725;
  t16488 = t16486 + t16487;
  t16501 = t16491*t2431;
  t16521 = t1740*t16509;
  t16523 = t16501 + t16521;
  t16535 = t1740*t16491;
  t16542 = -1.*t2431*t16509;
  t16546 = t16535 + t16542;
  t16589 = 0.305*t3657*t3673;
  t16592 = t16589 + t15859;
  t16600 = -0.305*t3724*t3657;
  t16603 = -0.305*t3673*t3725;
  t16607 = t16600 + t16603;
  t16613 = t3773*t2450*t16592;
  t16618 = -1.*t3921*t16592*t2725;
  t16653 = t16613 + t16618;
  t5184 = t4388*t2431;
  t5204 = t1740*t5203;
  t5206 = t5184 + t5204;
  t16593 = t2450*t3921*t16592;
  t16594 = t3773*t16592*t2725;
  t16595 = t16593 + t16594;
  t16611 = t16607*t2431;
  t16657 = t1740*t16653;
  t16659 = t16611 + t16657;
  t16663 = t1740*t16607;
  t16664 = -1.*t2431*t16653;
  t16665 = t16663 + t16664;
  t16564 = t5816*t16330;
  t16581 = t5168*t16194;
  t16583 = t4018*t16336;
  t16698 = -1.*t5880*t16330;
  t16699 = -1.*t4817*t16194;
  t16700 = -1.*t5116*t16336;
  t16701 = t16698 + t16699 + t16700;
  t16713 = t16564 + t16581 + t16583;
  t16716 = -1.*t4808*t16330;
  t16724 = -1.*t1740*t5133*t16194;
  t16725 = t2431*t5133*t16336;
  t16728 = t3944*t16330;
  t16732 = t1740*t4124*t16194;
  t16733 = -1.*t2431*t4124*t16336;
  t16737 = t1740*t4124*t16701;
  t16738 = t1740*t5133*t16713;
  t4136 = t3845*t2431;
  t4723 = t1740*t4714;
  t4767 = t4136 + t4723;
  t16769 = -1.*t5816*t16330;
  t16777 = -1.*t5168*t16194;
  t16779 = -1.*t4018*t16336;
  t16807 = t5892*t16330;
  t16808 = t1740*t4881*t16194;
  t16809 = -1.*t2431*t4881*t16336;
  t16810 = t16807 + t16808 + t16809;
  t16820 = t16769 + t16777 + t16779;
  t16823 = t1740*t4124*t16810;
  t16826 = t4881*t16330;
  t16833 = t1740*t5104*t16194;
  t16836 = -1.*t2431*t5104*t16336;
  t16843 = -1.*t3944*t16330;
  t16851 = -1.*t1740*t4124*t16194;
  t16853 = t2431*t4124*t16336;
  t16866 = t1740*t5104*t16820;
  t10176 = -1.*t5393*t9994;
  t10190 = t5379*t9994;
  t16935 = -1.*t3457*t9994;
  t16937 = t10069 + t16935;
  t16938 = t3424*t16937;
  t10262 = -1.*t5393*t10257;
  t16942 = -1.*t3490*t9994;
  t10286 = t5379*t10257;
  t16947 = t3550*t9994;
  t16951 = t9858*t2611;
  t16953 = t3424*t9994;
  t16954 = t16951 + t10099 + t16953;
  t16956 = t3457*t16954;
  t10318 = -1.*t5393*t10315;
  t10445 = t5379*t10315;
  t10686 = -1.*t5393*t10665;
  t11519 = t5379*t10665;
  t11531 = t5775*t10068;
  t13272 = -1.*t5379*t9994;
  t13370 = t5237*t9994;
  t16977 = t9858*t2397;
  t16983 = t2794*t9994;
  t13416 = -1.*t5379*t10257;
  t17016 = -1.*t3550*t9994;
  t17022 = -1.*t9858*t2611;
  t17025 = -1.*t3424*t9994;
  t17026 = t17022 + t12419 + t17025;
  t17027 = t2794*t17026;
  t13635 = t5237*t10257;
  t17032 = t2997*t9994;
  t17036 = t16977 + t10490 + t16983;
  t17038 = t3424*t17036;
  t13844 = t10315*t5237;
  t13879 = t5312*t10068;
  t14066 = -1.*t5379*t10315;
  t14161 = t10665*t5237;
  t14563 = -1.*t5379*t10665;
  t14570 = -1.*t5775*t10068;
  t15131 = t5393*t9994;
  t15178 = -1.*t5237*t9994;
  t17058 = -1.*t9858*t2397;
  t17063 = -1.*t2794*t9994;
  t17087 = t3457*t9994;
  t17088 = t14730 + t17087;
  t17093 = t2794*t17088;
  t15235 = t5393*t10257;
  t17097 = t3490*t9994;
  t15254 = -1.*t5237*t10257;
  t17105 = -1.*t2997*t9994;
  t17108 = t17058 + t14073 + t17063;
  t17109 = t3457*t17108;
  t15296 = t5393*t10315;
  t15312 = -1.*t10315*t5237;
  t15336 = -1.*t5312*t10068;
  t15606 = t5393*t10665;
  t15739 = -1.*t10665*t5237;
  t16406 = -1.*t5892*t16131;
  t16420 = t5880*t16131;
  t17173 = -1.*t4881*t16131;
  t17175 = t16332 + t17173;
  t17177 = t4808*t17175;
  t16471 = -1.*t5892*t16470;
  t17179 = -1.*t5104*t16131;
  t16474 = t5880*t16470;
  t17184 = t5133*t16131;
  t17187 = t15862*t4794;
  t17188 = t4808*t16131;
  t17192 = t17187 + t16371 + t17188;
  t17193 = t4881*t17192;
  t16489 = -1.*t5892*t16488;
  t16560 = t16488*t5880;
  t16596 = -1.*t5892*t16595;
  t16671 = t16595*t5880;
  t16672 = t8425*t16330;
  t16717 = -1.*t5880*t16131;
  t16729 = t5816*t16131;
  t17211 = t15862*t3741;
  t17214 = t3944*t16131;
  t16741 = -1.*t5880*t16470;
  t17241 = -1.*t5133*t16131;
  t17244 = -1.*t15862*t4794;
  t17249 = -1.*t4808*t16131;
  t17250 = t17244 + t16698 + t17249;
  t17258 = t3944*t17250;
  t16747 = t5816*t16470;
  t17265 = t4124*t16131;
  t17270 = t17211 + t16564 + t17214;
  t17271 = t4808*t17270;
  t16756 = t16488*t5816;
  t16757 = t5867*t16330;
  t16768 = -1.*t16488*t5880;
  t16785 = t16595*t5816;
  t16791 = -1.*t16595*t5880;
  t16792 = -1.*t8425*t16330;
  t16830 = t5892*t16131;
  t16845 = -1.*t5816*t16131;
  t17349 = -1.*t15862*t3741;
  t17355 = -1.*t3944*t16131;
  t17402 = t4881*t16131;
  t17403 = t16807 + t17402;
  t17404 = t3944*t17403;
  t16877 = t5892*t16470;
  t17421 = t5104*t16131;
  t16884 = -1.*t5816*t16470;
  t17432 = -1.*t4124*t16131;
  t17441 = t17349 + t16769 + t17355;
  t17448 = t4881*t17441;
  t16898 = t5892*t16488;
  t16911 = -1.*t16488*t5816;
  t16912 = -1.*t5867*t16330;
  t16920 = t5892*t16595;
  t16928 = -1.*t16595*t5816;
  t17598 = t2707*t9955;
  t17604 = -1.*t2434*t9983;
  t17605 = t17598 + t17604;
  t17051 = t9858*t3143;
  t17052 = t2397*t10342;
  t17721 = Power(t2434,2);
  t17794 = Power(t2707,2);
  t17060 = -1.*t10342*t2611;
  t17672 = -1.*t2434*t3378*t9955;
  t17677 = -1.*t2707*t3378*t9983;
  t17681 = t17022 + t17672 + t17677;
  t17071 = t2397*t10748;
  t17075 = -1.*t3378*t9858;
  t17076 = -1.*t10748*t2611;
  t17826 = t2434*t2611*t9955;
  t17827 = t2707*t2611*t9983;
  t17828 = t16977 + t17826 + t17827;
  t17857 = -1.*t2707*t9955;
  t17859 = t2434*t9983;
  t17860 = t17857 + t17859;
  t17869 = -1.*t3921*t15944;
  t17870 = t3773*t16056;
  t17871 = t17869 + t17870;
  t17340 = t15862*t3845;
  t17341 = t3741*t16491;
  t17914 = Power(t3773,2);
  t17920 = Power(t3921,2);
  t17351 = -1.*t16491*t4794;
  t17932 = -1.*t3773*t3741*t15944;
  t17933 = -1.*t3921*t3741*t16056;
  t17936 = t17244 + t17932 + t17933;
  t17372 = t3741*t16607;
  t17949 = t3773*t3845*t15944;
  t17950 = t3921*t3845*t16056;
  t17951 = t17211 + t17949 + t17950;
  t17381 = -1.*t4388*t15862;
  t17382 = -1.*t16607*t4794;
  t18073 = t3921*t15944;
  t18074 = -1.*t3773*t16056;
  t18075 = t18073 + t18074;
  t18079 = 0.15121*t4388;
  t18080 = 0.15121*t3741;
  t18082 = t18079 + t18080;
  t18083 = t3845*t15920;
  t18084 = t17211 + t18083;
  t18091 = -1.*t3741*t15920;
  t18092 = t18091 + t17244;
  t18585 = -1.*t3378*t9950;
  t18637 = t18585 + t17022;
  t18683 = t9950*t2611;
  t18686 = t16977 + t18683;
  t18727 = -0.15121*t3143;
  t18728 = -0.15121*t2611;
  t18730 = t18727 + t18728;
  p_output1[0]=t2850;
  p_output1[1]=t3042;
  p_output1[2]=t3042;
  p_output1[3]=t3366;
  p_output1[4]=t3441;
  p_output1[5]=-1.*t2431*t3457;
  p_output1[6]=t3491;
  p_output1[7]=t3491;
  p_output1[8]=t3504;
  p_output1[9]=t3562;
  p_output1[10]=t3562;
  p_output1[11]=t3566;
  p_output1[12]=t3654;
  p_output1[13]=t4018;
  p_output1[14]=t4134;
  p_output1[15]=t4134;
  p_output1[16]=t4767;
  p_output1[17]=t4817;
  p_output1[18]=-1.*t2431*t4881;
  p_output1[19]=t5105;
  p_output1[20]=t5105;
  p_output1[21]=t5116;
  p_output1[22]=t5150;
  p_output1[23]=t5150;
  p_output1[24]=t5168;
  p_output1[25]=t5206;
  p_output1[26]=-1.*t5216*t5237 - 1.*t2850*t5249;
  p_output1[27]=-1.*t5216*t5266;
  p_output1[28]=t5281;
  p_output1[29]=t5281;
  p_output1[30]=t5249*t5312 - 1.*t5216*t5354;
  p_output1[31]=t5385;
  p_output1[32]=t2431*t3457*t5249 - 1.*t5216*t5393;
  p_output1[33]=t1740*t3457*t5216;
  p_output1[34]=t5406;
  p_output1[35]=t5406;
  p_output1[36]=-1.*t3504*t5249 - 1.*t5216*t5379;
  p_output1[37]=-1.*t5216*t5417;
  p_output1[38]=t5703;
  p_output1[39]=t5703;
  p_output1[40]=t5753;
  p_output1[41]=t5249*t5775 - 1.*t5216*t5804;
  p_output1[42]=-1.*t4018*t5249 - 1.*t5216*t5816;
  p_output1[43]=-1.*t5216*t5838;
  p_output1[44]=t5862;
  p_output1[45]=t5862;
  p_output1[46]=t5249*t5867 - 1.*t5216*t5872;
  p_output1[47]=t5886;
  p_output1[48]=t2431*t4881*t5249 - 1.*t5216*t5892;
  p_output1[49]=t1740*t4881*t5216;
  p_output1[50]=t5925;
  p_output1[51]=t5925;
  p_output1[52]=-1.*t5116*t5249 - 1.*t5216*t5880;
  p_output1[53]=-1.*t5216*t8187;
  p_output1[54]=t8224;
  p_output1[55]=t8224;
  p_output1[56]=t8401;
  p_output1[57]=t5249*t8425 - 1.*t5216*t8440;
  p_output1[58]=t5753;
  p_output1[59]=t5249*t5266;
  p_output1[60]=t8672;
  p_output1[61]=t8672;
  p_output1[62]=t5216*t5312 + t5249*t5354;
  p_output1[63]=t3504*t5249 + t5216*t5379;
  p_output1[64]=t2431*t3457*t5216 + t5249*t5393;
  p_output1[65]=-1.*t1740*t3457*t5249;
  p_output1[66]=t8961;
  p_output1[67]=t8961;
  p_output1[68]=t5385;
  p_output1[69]=t5249*t5417;
  p_output1[70]=t8999;
  p_output1[71]=t8999;
  p_output1[72]=t5216*t5237 + t2850*t5249;
  p_output1[73]=t5216*t5775 + t5249*t5804;
  p_output1[74]=t8401;
  p_output1[75]=t5249*t5838;
  p_output1[76]=t9278;
  p_output1[77]=t9278;
  p_output1[78]=t5216*t5867 + t5249*t5872;
  p_output1[79]=t5116*t5249 + t5216*t5880;
  p_output1[80]=t2431*t4881*t5216 + t5249*t5892;
  p_output1[81]=-1.*t1740*t4881*t5249;
  p_output1[82]=t9485;
  p_output1[83]=t9485;
  p_output1[84]=t5886;
  p_output1[85]=t5249*t8187;
  p_output1[86]=t9566;
  p_output1[87]=t9566;
  p_output1[88]=t4018*t5249 + t5216*t5816;
  p_output1[89]=t5216*t8425 + t5249*t8440;
  p_output1[90]=-1.*t10106*t2431*t3457 + t3441*(t10022*t2431*t3457 + t10045*t2431*t3457) + t10080*t3504 + t1740*t3457*(t10077*t3441 + t10022*t3504 + t10045*t3504 + t10077*t5417);
  p_output1[91]=t10117 + t10218 + t3441*(t10168 + t10176 + t10179 + t10180 - 1.*t10120*t10132*t3457 - 1.*t10132*t10156*t3457) + t1740*t3457*(t10188 + t10190 + t10198 + t10200 + t10132*t1740*t3441 - 1.*t10132*t2431*t3504);
  p_output1[92]=t10117 + t10218 + t3441*(t10168 + t10179 + t10180 + t10262 - 1.*t10120*t10249*t3457 - 1.*t10156*t10249*t3457) + t1740*t3457*(t10188 + t10198 + t10200 + t10286 + t10249*t1740*t3441 - 1.*t10249*t2431*t3504);
  p_output1[93]=t3441*(t10318 - 1.*t10372*t1740*t3457 + t10383*t2431*t3457) + t1740*t3457*(t10445 + t10490 + t10507 + t10512 + t10372*t3441 + t10383*t3504) + t10080*t3566;
  p_output1[94]=t3441*(t10686 - 1.*t11054*t1740*t3457 + t11326*t2431*t3457) + t10080*t3654 + t1740*t3457*(t11519 + t11531 + t11054*t3441 + t11326*t3504 + t10045*t3654 + t10077*t5804);
  p_output1[95]=t13118*t2850 + t13190*t3504 + t3441*(t10022*t2850 + t10045*t2850 + t10077*t3566 + t10077*t5266) + t3566*(-1.*t10077*t3441 - 1.*t10022*t3504 - 1.*t10045*t3504 - 1.*t10077*t5417);
  p_output1[96]=t13389 + t13395 + (t13261 + t13272 + t13333 + t13334 - 1.*t10132*t1740*t3441 + t10132*t2431*t3504)*t3566 + t3441*(t13363 + t13370 + t13374 + t13377 - 1.*t10132*t2431*t2850 + t10132*t1740*t3566);
  p_output1[97]=t13389 + t13395 + (t13261 + t13333 + t13334 + t13416 - 1.*t10249*t1740*t3441 + t10249*t2431*t3504)*t3566 + t3441*(t13363 + t13374 + t13377 + t13635 - 1.*t10249*t2431*t2850 + t10249*t1740*t3566);
  p_output1[98]=t13118*t3366 + t13190*t3566 + (t14066 + t14073 + t14105 + t14107 - 1.*t10372*t3441 - 1.*t10383*t3504)*t3566 + t3441*(t13844 + t13879 + t10383*t2850 + t10045*t3366 + t10372*t3566 + t10077*t5354);
  p_output1[99]=t13118*t3441 + t3441*(t10099 + t10100 + t10101 + t14161 + t11326*t2850 + t11054*t3566) + t13190*t3654 + t3566*(t14563 + t14570 - 1.*t11054*t3441 - 1.*t11326*t3504 - 1.*t10045*t3654 - 1.*t10077*t5804);
  p_output1[100]=t14884*t2850 - 1.*t14971*t2431*t3457 + (-1.*t10022*t2431*t3457 - 1.*t10045*t2431*t3457)*t3566 + t1740*t3457*(-1.*t10022*t2850 - 1.*t10045*t2850 - 1.*t10077*t3566 - 1.*t10077*t5266);
  p_output1[101]=t15037 + t15209 + (t15129 + t15131 + t15133 + t15134 + t10120*t10132*t3457 + t10132*t10156*t3457)*t3566 + t1740*t3457*(t15165 + t15178 + t15199 + t15204 + t10132*t2431*t2850 - 1.*t10132*t1740*t3566);
  p_output1[102]=t15037 + t15209 + (t15129 + t15133 + t15134 + t15235 + t10120*t10249*t3457 + t10156*t10249*t3457)*t3566 + t1740*t3457*(t15165 + t15199 + t15204 + t15254 + t10249*t2431*t2850 - 1.*t10249*t1740*t3566);
  p_output1[103]=t14884*t3366 + (t15296 + t10372*t1740*t3457 - 1.*t10383*t2431*t3457)*t3566 + t1740*t3457*(t15312 + t15336 - 1.*t10383*t2850 - 1.*t10045*t3366 - 1.*t10372*t3566 - 1.*t10077*t5354);
  p_output1[104]=t14884*t3441 + (t15606 + t11054*t1740*t3457 - 1.*t11326*t2431*t3457)*t3566 + t1740*t3457*(t12419 + t12441 + t13015 + t15739 - 1.*t11326*t2850 - 1.*t11054*t3566);
  p_output1[105]=-1.*t16376*t2431*t4881 + t4817*(t16187*t2431*t4881 + t16194*t2431*t4881) + t16342*t5116 + t1740*t4881*(t16336*t4817 + t16187*t5116 + t16194*t5116 + t16336*t8187);
  p_output1[106]=t16380 + t16453 + t4817*(t16401 + t16406 + t16407 + t16408 - 1.*t10120*t16391*t4881 - 1.*t10156*t16391*t4881) + t1740*t4881*(t16414 + t16420 + t16424 + t16425 + t16391*t1740*t4817 - 1.*t16391*t2431*t5116);
  p_output1[107]=t16380 + t16453 + t4817*(t16401 + t16407 + t16408 + t16471 - 1.*t10120*t16465*t4881 - 1.*t10156*t16465*t4881) + t1740*t4881*(t16414 + t16424 + t16425 + t16474 + t16465*t1740*t4817 - 1.*t16465*t2431*t5116);
  p_output1[108]=t4817*(t16489 - 1.*t16523*t1740*t4881 + t16546*t2431*t4881) + t1740*t4881*(t16560 + t16564 + t16581 + t16583 + t16523*t4817 + t16546*t5116) + t16342*t5168;
  p_output1[109]=t4817*(t16596 - 1.*t16659*t1740*t4881 + t16665*t2431*t4881) + t16342*t5206 + t1740*t4881*(t16671 + t16672 + t16659*t4817 + t16665*t5116 + t16194*t5206 + t16336*t8440);
  p_output1[110]=t16701*t4018 + t16713*t5116 + t4817*(t16187*t4018 + t16194*t4018 + t16336*t5168 + t16336*t5838) + t5168*(-1.*t16336*t4817 - 1.*t16187*t5116 - 1.*t16194*t5116 - 1.*t16336*t8187);
  p_output1[111]=t16737 + t16738 + (t16716 + t16717 + t16724 + t16725 - 1.*t16391*t1740*t4817 + t16391*t2431*t5116)*t5168 + t4817*(t16728 + t16729 + t16732 + t16733 - 1.*t16391*t2431*t4018 + t16391*t1740*t5168);
  p_output1[112]=t16737 + t16738 + (t16716 + t16724 + t16725 + t16741 - 1.*t16465*t1740*t4817 + t16465*t2431*t5116)*t5168 + t4817*(t16728 + t16732 + t16733 + t16747 - 1.*t16465*t2431*t4018 + t16465*t1740*t5168);
  p_output1[113]=t16701*t4767 + t16713*t5168 + (t16768 + t16769 + t16777 + t16779 - 1.*t16523*t4817 - 1.*t16546*t5116)*t5168 + t4817*(t16756 + t16757 + t16546*t4018 + t16194*t4767 + t16523*t5168 + t16336*t5872);
  p_output1[114]=t16701*t4817 + t4817*(t16371 + t16372 + t16373 + t16785 + t16665*t4018 + t16659*t5168) + t16713*t5206 + t5168*(t16791 + t16792 - 1.*t16659*t4817 - 1.*t16665*t5116 - 1.*t16194*t5206 - 1.*t16336*t8440);
  p_output1[115]=t16810*t4018 - 1.*t16820*t2431*t4881 + (-1.*t16187*t2431*t4881 - 1.*t16194*t2431*t4881)*t5168 + t1740*t4881*(-1.*t16187*t4018 - 1.*t16194*t4018 - 1.*t16336*t5168 - 1.*t16336*t5838);
  p_output1[116]=t16823 + t16866 + (t16826 + t16830 + t16833 + t16836 + t10120*t16391*t4881 + t10156*t16391*t4881)*t5168 + t1740*t4881*(t16843 + t16845 + t16851 + t16853 + t16391*t2431*t4018 - 1.*t16391*t1740*t5168);
  p_output1[117]=t16823 + t16866 + (t16826 + t16833 + t16836 + t16877 + t10120*t16465*t4881 + t10156*t16465*t4881)*t5168 + t1740*t4881*(t16843 + t16851 + t16853 + t16884 + t16465*t2431*t4018 - 1.*t16465*t1740*t5168);
  p_output1[118]=t16810*t4767 + (t16898 + t16523*t1740*t4881 - 1.*t16546*t2431*t4881)*t5168 + t1740*t4881*(t16911 + t16912 - 1.*t16546*t4018 - 1.*t16194*t4767 - 1.*t16523*t5168 - 1.*t16336*t5872);
  p_output1[119]=t16810*t4817 + (t16920 + t16659*t1740*t4881 - 1.*t16665*t2431*t4881)*t5168 + t1740*t4881*(t16698 + t16699 + t16700 + t16928 - 1.*t16665*t4018 - 1.*t16659*t5168);
  p_output1[120]=t16938 + t16956 + (t10168 + t10176 + t16942 - 1.*t10132*t3457)*t5379 + (t10188 + t10190 + t16947 + t10132*t3424)*t5393;
  p_output1[121]=t16938 + t16956 + (t10168 + t10262 + t16942 - 1.*t10249*t3457)*t5379 + (t10188 + t10286 + t16947 + t10249*t3424)*t5393;
  p_output1[122]=t16937*t5237 + (t10318 - 1.*t10368*t3457)*t5379 + (t10445 + t10490 + t16977 + t16983 + t10342*t2611 + t10368*t3424)*t5393;
  p_output1[123]=(t10686 - 1.*t11037*t3457)*t5379 + t16937*t5775 + t5393*(t11519 + t11531 + t10748*t2611 + t11037*t3424 + t3378*t9858 + t3587*t9994);
  p_output1[124]=t17027 + t17038 + (t13261 + t13272 + t17016 - 1.*t10132*t3424)*t5237 + (t13363 + t13370 + t17032 + t10132*t2794)*t5379;
  p_output1[125]=t17027 + t17038 + (t13261 + t13416 + t17016 - 1.*t10249*t3424)*t5237 + (t13363 + t13635 + t17032 + t10249*t2794)*t5379;
  p_output1[126]=t17036*t5237 + (t14066 + t14073 + t17058 + t17060 + t17063 - 1.*t10368*t3424)*t5237 + t17026*t5312 + t5379*(t13844 + t13879 + t17051 + t17052 + t10368*t2794 + t3305*t9994);
  p_output1[127]=t17026*t5379 + (t10099 + t14161 + t16951 + t16953 + t17071 + t11037*t2794)*t5379 + t17036*t5775 + t5237*(t14563 + t14570 + t17075 + t17076 - 1.*t11037*t3424 - 1.*t3587*t9994);
  p_output1[128]=t17093 + t17109 + (t15129 + t15131 + t17097 + t10132*t3457)*t5237 + (t15165 + t15178 + t17105 - 1.*t10132*t2794)*t5393;
  p_output1[129]=t17093 + t17109 + (t15129 + t15235 + t17097 + t10249*t3457)*t5237 + (t15165 + t15254 + t17105 - 1.*t10249*t2794)*t5393;
  p_output1[130]=(t15296 + t10368*t3457)*t5237 + t17088*t5312 + t5393*(t15312 + t15336 - 1.*t10342*t2397 - 1.*t10368*t2794 - 1.*t3143*t9858 - 1.*t3305*t9994);
  p_output1[131]=(t15606 + t11037*t3457)*t5237 + t17088*t5379 + (t12419 + t15739 + t17022 + t17025 - 1.*t10748*t2397 - 1.*t11037*t2794)*t5393;
  p_output1[132]=t17177 + t17193 + (t16401 + t16406 + t17179 - 1.*t16391*t4881)*t5880 + (t16414 + t16420 + t17184 + t16391*t4808)*t5892;
  p_output1[133]=t17177 + t17193 + (t16401 + t16471 + t17179 - 1.*t16465*t4881)*t5880 + (t16414 + t16474 + t17184 + t16465*t4808)*t5892;
  p_output1[134]=t17175*t5816 + (t16489 - 1.*t16509*t4881)*t5880 + (t16560 + t16564 + t17211 + t17214 + t16491*t4794 + t16509*t4808)*t5892;
  p_output1[135]=(t16596 - 1.*t16653*t4881)*t5880 + (t16671 + t16672 + t15862*t4388 + t16607*t4794 + t16653*t4808 + t16131*t5203)*t5892 + t17175*t8425;
  p_output1[136]=t17258 + t17271 + (t16716 + t16717 + t17241 - 1.*t16391*t4808)*t5816 + (t16728 + t16729 + t17265 + t16391*t3944)*t5880;
  p_output1[137]=t17258 + t17271 + (t16716 + t16741 + t17241 - 1.*t16465*t4808)*t5816 + (t16728 + t16747 + t17265 + t16465*t3944)*t5880;
  p_output1[138]=t17270*t5816 + (t16768 + t16769 + t17349 + t17351 + t17355 - 1.*t16509*t4808)*t5816 + t17250*t5867 + (t16756 + t16757 + t17340 + t17341 + t16509*t3944 + t16131*t4714)*t5880;
  p_output1[139]=(t16791 + t16792 + t17381 + t17382 - 1.*t16653*t4808 - 1.*t16131*t5203)*t5816 + t17250*t5880 + (t16371 + t16785 + t17187 + t17188 + t17372 + t16653*t3944)*t5880 + t17270*t8425;
  p_output1[140]=t17404 + t17448 + (t16826 + t16830 + t17421 + t16391*t4881)*t5816 + (t16843 + t16845 + t17432 - 1.*t16391*t3944)*t5892;
  p_output1[141]=t17404 + t17448 + (t16826 + t16877 + t17421 + t16465*t4881)*t5816 + (t16843 + t16884 + t17432 - 1.*t16465*t3944)*t5892;
  p_output1[142]=(t16898 + t16509*t4881)*t5816 + t17403*t5867 + (t16911 + t16912 - 1.*t16491*t3741 - 1.*t15862*t3845 - 1.*t16509*t3944 - 1.*t16131*t4714)*t5892;
  p_output1[143]=(t16920 + t16653*t4881)*t5816 + t17403*t5880 + (t16698 + t16928 + t17244 + t17249 - 1.*t16607*t3741 - 1.*t16653*t3944)*t5892;
  p_output1[144]=t2611*(-1.*t10236*t2434 + t10226*t2707 + t2434*t9955 + t2707*t9983);
  p_output1[145]=t17605*t2397;
  p_output1[146]=t17605*t3378;
  p_output1[147]=t2611*(t10226*t2434*t2611 + t10236*t2611*t2707 - 1.*t2611*t2707*t9955 + t2434*t2611*t9983) + t2397*(-1.*t10226*t2434*t3378 - 1.*t10236*t2707*t3378 + t2707*t3378*t9955 - 1.*t2434*t3378*t9983);
  p_output1[148]=t17828*t2397 + t17681*t3143 + t2611*(t17051 + t17052 + t17721*t2611*t9858 + t17794*t2611*t9858 + t2397*t2434*t9955 + t2397*t2707*t9983) + t2397*(t17058 + t17060 - 1.*t17721*t3378*t9858 - 1.*t17794*t3378*t9858 - 1.*t2434*t2611*t9955 - 1.*t2611*t2707*t9983);
  p_output1[149]=t17681*t2611 + t17828*t3378 + t2397*(t17075 + t17076 - 1.*t10537*t17721*t3378 - 1.*t10537*t17794*t3378 - 1.*t2434*t3143*t9955 - 1.*t2707*t3143*t9983) + t2611*(t16951 + t17071 + t10537*t17721*t2611 + t10537*t17794*t2611 + t2434*t3378*t9955 + t2707*t3378*t9983);
  p_output1[150]=t2397*(t10236*t2434 - 1.*t10226*t2707 - 1.*t2434*t9955 - 1.*t2707*t9983);
  p_output1[151]=t17860*t3143;
  p_output1[152]=t17860*t2611;
  p_output1[153]=(-1.*t15944*t3773 + t16463*t3773 - 1.*t16056*t3921 - 1.*t16461*t3921)*t4794;
  p_output1[154]=t17871*t3741;
  p_output1[155]=t17871*t4388;
  p_output1[156]=t3741*(-1.*t16056*t3741*t3773 - 1.*t16461*t3741*t3773 + t15944*t3741*t3921 - 1.*t16463*t3741*t3921) + (t16056*t3773*t3845 + t16461*t3773*t3845 - 1.*t15944*t3845*t3921 + t16463*t3845*t3921)*t4794;
  p_output1[157]=t17951*t3741 + t17936*t3845 + t3741*(t17349 + t17351 - 1.*t16485*t17914*t3741 - 1.*t16485*t17920*t3741 - 1.*t15944*t3773*t3845 - 1.*t16056*t3845*t3921) + (t17340 + t17341 + t16485*t17914*t3845 + t16485*t17920*t3845 + t15944*t3773*t4388 + t16056*t3921*t4388)*t4794;
  p_output1[158]=t17951*t4388 + t17936*t4794 + (t17187 + t17372 + t15944*t3741*t3773 + t16592*t17914*t3845 + t16592*t17920*t3845 + t16056*t3741*t3921)*t4794 + t3741*(t17381 + t17382 - 1.*t16592*t17914*t3741 - 1.*t16592*t17920*t3741 - 1.*t15944*t3773*t4794 - 1.*t16056*t3921*t4794);
  p_output1[159]=t3741*(t15944*t3773 - 1.*t16463*t3773 + t16056*t3921 + t16461*t3921);
  p_output1[160]=t18075*t3845;
  p_output1[161]=t18075*t4794;
  p_output1[162]=t18082;
  p_output1[163]=t18082;
  p_output1[164]=t18084*t3741 + t18092*t3845 + t3741*(t17349 + t17351 - 1.*t16485*t3741 - 1.*t15920*t3845) + (t17340 + t17341 + t16485*t3845 + t15920*t4388)*t4794;
  p_output1[165]=t18084*t4388 + t18092*t4794 + (t17187 + t17372 + t15920*t3741 + t16592*t3845)*t4794 + t3741*(t17381 + t17382 - 1.*t16592*t3741 - 1.*t15920*t4794);
  p_output1[166]=0.28121*t3657 + t15840*t3657 - 0.305*Power(t3657,2);
  p_output1[167]=-0.28121*t3725 - 1.*t15840*t3725 + 0.305*t3657*t3725;
  p_output1[168]=t18686*t2397 + t18637*t3143 + t2611*(t16951 + t17051 + t17052 + t2397*t9950) + t2397*(t17058 + t17060 + t17075 - 1.*t2611*t9950);
  p_output1[169]=t18637*t2611 + t18686*t3378 + t2397*(t17075 + t17076 - 1.*t10537*t3378 - 1.*t3143*t9950) + t2611*(t16951 + t17071 + t10537*t2611 + t3378*t9950);
  p_output1[170]=t18730;
  p_output1[171]=t18730;
  p_output1[172]=0.28121*t1753 - 0.305*Power(t1753,2) - 1.*t1753*t9807;
  p_output1[173]=-0.28121*t2378 + 0.305*t1753*t2378 + t2378*t9807;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
