/*
 * Automatically Generated from Mathematica.
 * Mon 30 May 2022 12:13:37 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t90;
  double t75;
  double t78;
  double t98;
  double t151;
  double t152;
  double t163;
  double t65;
  double t147;
  double t195;
  double t141;
  double t196;
  double t1806;
  double t1809;
  double t1829;
  double t1851;
  double t134;
  double t83;
  double t100;
  double t105;
  double t2833;
  double t2883;
  double t2886;
  double t3155;
  double t3179;
  double t3215;
  double t3219;
  double t2890;
  double t2893;
  double t2896;
  double t3360;
  double t3365;
  double t3374;
  double t3385;
  double t192;
  double t204;
  double t467;
  double t1994;
  double t2002;
  double t2031;
  double t3472;
  double t3459;
  double t3462;
  double t3488;
  double t3695;
  double t3699;
  double t3700;
  double t3711;
  double t3694;
  double t3817;
  double t3820;
  double t3829;
  double t3830;
  double t3908;
  double t3938;
  double t3955;
  double t3466;
  double t3491;
  double t3507;
  double t4150;
  double t4154;
  double t4194;
  double t4197;
  double t4010;
  double t4018;
  double t4113;
  double t4120;
  double t4121;
  double t4123;
  double t4232;
  double t4233;
  double t4235;
  double t4236;
  double t3701;
  double t3723;
  double t3738;
  double t108;
  double t621;
  double t1389;
  double t4256;
  double t4278;
  double t4382;
  double t4390;
  double t4394;
  double t2509;
  double t2628;
  double t2638;
  double t3241;
  double t3289;
  double t3320;
  double t3091;
  double t3125;
  double t3147;
  double t5121;
  double t5192;
  double t5209;
  double t4623;
  double t4635;
  double t4653;
  double t5351;
  double t5352;
  double t5399;
  double t4260;
  double t4264;
  double t4265;
  double t3403;
  double t3407;
  double t3418;
  double t3649;
  double t3740;
  double t3767;
  double t7126;
  double t7294;
  double t7391;
  double t3960;
  double t3982;
  double t3986;
  double t4198;
  double t4227;
  double t4228;
  double t4133;
  double t4139;
  double t4140;
  double t16368;
  double t16405;
  double t16415;
  double t10361;
  double t10420;
  double t10446;
  double t18840;
  double t18867;
  double t18870;
  double t5597;
  double t5598;
  double t5604;
  double t4245;
  double t4247;
  double t4251;
  double t5507;
  double t5509;
  double t5510;
  double t4287;
  double t4301;
  double t4345;
  double t19131;
  double t19135;
  double t19137;
  double t4436;
  double t4503;
  double t4510;
  double t4562;
  double t4565;
  double t4579;
  double t4895;
  double t4924;
  double t5046;
  double t19278;
  double t19283;
  double t19298;
  double t4662;
  double t4687;
  double t4793;
  double t5274;
  double t5337;
  double t5338;
  double t19330;
  double t19337;
  double t19342;
  double t5538;
  double t5540;
  double t5544;
  double t5570;
  double t5574;
  double t5585;
  double t18894;
  double t18919;
  double t18924;
  double t6680;
  double t6785;
  double t6913;
  double t19478;
  double t19489;
  double t19627;
  double t7439;
  double t7447;
  double t8256;
  double t9301;
  double t9333;
  double t9498;
  double t16270;
  double t16290;
  double t16301;
  double t20406;
  double t20407;
  double t20410;
  double t10452;
  double t10500;
  double t10544;
  double t18494;
  double t18546;
  double t18593;
  double t20412;
  double t22876;
  double t24853;
  double t18925;
  double t18927;
  double t18930;
  double t18996;
  double t19016;
  double t19111;
  double t2788;
  double t3025;
  double t3062;
  double t26942;
  double t26975;
  double t27078;
  double t27639;
  double t27641;
  double t28269;
  double t28441;
  double t29527;
  double t29610;
  double t29723;
  double t29724;
  double t30048;
  double t30054;
  double t26915;
  double t27650;
  double t27664;
  double t27789;
  double t29168;
  double t30168;
  double t30702;
  double t30799;
  double t30804;
  double t30818;
  double t30901;
  double t31064;
  double t31074;
  double t31076;
  double t31086;
  double t31124;
  double t31180;
  double t31181;
  double t28222;
  double t31088;
  double t31092;
  double t31646;
  double t31765;
  double t31791;
  double t31264;
  double t31279;
  double t31296;
  double t31379;
  double t31641;
  double t32078;
  double t32112;
  double t32351;
  double t32367;
  double t32385;
  double t32244;
  double t32247;
  double t32254;
  double t32290;
  double t32337;
  double t32420;
  double t32347;
  double t32415;
  double t32852;
  double t32908;
  double t32911;
  double t32914;
  double t32929;
  double t32954;
  double t32972;
  double t32505;
  double t32577;
  double t32610;
  double t33029;
  double t33039;
  double t33209;
  double t32742;
  double t32795;
  double t32826;
  double t33582;
  double t33597;
  double t34035;
  double t34078;
  double t34162;
  double t34301;
  double t34502;
  double t3386;
  double t3387;
  double t3389;
  double t33514;
  double t33528;
  double t33537;
  double t34134;
  double t34561;
  double t36384;
  double t37031;
  double t37033;
  double t37035;
  double t37115;
  double t37118;
  double t37119;
  double t37124;
  double t37125;
  double t37186;
  double t37188;
  double t37190;
  double t3391;
  double t3419;
  double t3457;
  double t37120;
  double t37121;
  double t37122;
  double t37126;
  double t37191;
  double t37192;
  double t37198;
  double t37202;
  double t37203;
  double t37080;
  double t37104;
  double t37105;
  double t37262;
  double t37263;
  double t37264;
  double t37268;
  double t37284;
  double t37293;
  double t37301;
  double t37302;
  double t37308;
  double t37312;
  double t37313;
  double t37323;
  double t37328;
  double t2226;
  double t2670;
  double t2711;
  double t37402;
  double t37407;
  double t37409;
  double t37447;
  double t37449;
  double t37451;
  double t37452;
  double t37465;
  double t37469;
  double t37473;
  double t37477;
  double t37479;
  double t37488;
  double t37495;
  double t37496;
  double t37502;
  double t4115;
  double t4124;
  double t4125;
  double t37571;
  double t37574;
  double t37575;
  double t37578;
  double t37579;
  double t37590;
  double t37591;
  double t37595;
  double t37598;
  double t37599;
  double t37602;
  double t37603;
  double t37606;
  double t37570;
  double t37582;
  double t37583;
  double t37586;
  double t37594;
  double t37607;
  double t37610;
  double t37611;
  double t37615;
  double t37616;
  double t37619;
  double t37620;
  double t37623;
  double t37624;
  double t37627;
  double t37635;
  double t37636;
  double t37637;
  double t37587;
  double t37628;
  double t37631;
  double t37650;
  double t37651;
  double t37653;
  double t37642;
  double t37644;
  double t37646;
  double t37647;
  double t37649;
  double t37655;
  double t37656;
  double t37674;
  double t37675;
  double t37676;
  double t37665;
  double t37667;
  double t37668;
  double t37669;
  double t37673;
  double t37680;
  double t37699;
  double t37701;
  double t37703;
  double t37705;
  double t37706;
  double t37708;
  double t37709;
  double t37682;
  double t37684;
  double t37688;
  double t37712;
  double t37714;
  double t37715;
  double t37693;
  double t37694;
  double t37697;
  double t37727;
  double t37729;
  double t37731;
  double t37732;
  double t37738;
  double t37739;
  double t37742;
  double t37745;
  double t37746;
  double t4237;
  double t4238;
  double t4240;
  double t37733;
  double t37734;
  double t37735;
  double t37740;
  double t37747;
  double t37748;
  double t37750;
  double t37752;
  double t37753;
  double t37774;
  double t37776;
  double t37782;
  double t37784;
  double t37785;
  double t37788;
  double t37791;
  double t37792;
  double t4242;
  double t4253;
  double t4255;
  double t37777;
  double t37778;
  double t37780;
  double t37787;
  double t37794;
  double t37796;
  double t37799;
  double t37800;
  double t37801;
  double t37763;
  double t37767;
  double t37769;
  double t37832;
  double t37835;
  double t37836;
  double t37838;
  double t37849;
  double t37853;
  double t37860;
  double t37861;
  double t37865;
  double t37872;
  double t37873;
  double t37879;
  double t37880;
  double t3865;
  double t3995;
  double t4007;
  double t37913;
  double t37919;
  double t37920;
  double t37952;
  double t37954;
  double t37955;
  double t37956;
  double t37971;
  double t37975;
  double t37979;
  double t37982;
  double t37984;
  double t37989;
  double t37994;
  double t37997;
  double t38001;
  double t32482;
  double t32669;
  double t38057;
  double t38059;
  double t38060;
  double t33212;
  double t38063;
  double t33344;
  double t38068;
  double t38073;
  double t38074;
  double t38075;
  double t38077;
  double t33563;
  double t37079;
  double t37123;
  double t37214;
  double t37215;
  double t37294;
  double t37309;
  double t38094;
  double t38098;
  double t37341;
  double t38120;
  double t38123;
  double t38125;
  double t38126;
  double t38127;
  double t37376;
  double t38129;
  double t38133;
  double t38134;
  double t37386;
  double t37388;
  double t37401;
  double t37418;
  double t37425;
  double t37427;
  double t37475;
  double t37489;
  double t38153;
  double t38157;
  double t38175;
  double t38176;
  double t38177;
  double t37507;
  double t38180;
  double t37512;
  double t38186;
  double t38189;
  double t38190;
  double t37522;
  double t37531;
  double t37532;
  double t37544;
  double t37557;
  double t37681;
  double t37689;
  double t38227;
  double t38228;
  double t38229;
  double t37716;
  double t38231;
  double t37720;
  double t38237;
  double t38241;
  double t38246;
  double t38247;
  double t38248;
  double t37737;
  double t37762;
  double t37781;
  double t37810;
  double t37811;
  double t37856;
  double t37868;
  double t38266;
  double t38269;
  double t37883;
  double t38292;
  double t38296;
  double t38298;
  double t38301;
  double t38302;
  double t37890;
  double t38304;
  double t38307;
  double t38308;
  double t37898;
  double t37900;
  double t37912;
  double t37929;
  double t37936;
  double t37937;
  double t37981;
  double t37990;
  double t38331;
  double t38334;
  double t38361;
  double t38362;
  double t38363;
  double t38006;
  double t38366;
  double t38011;
  double t38371;
  double t38375;
  double t38377;
  double t38020;
  double t38028;
  double t38030;
  double t38040;
  double t38048;
  double t38423;
  double t38424;
  double t38425;
  double t38146;
  double t38148;
  double t38454;
  double t38458;
  double t38154;
  double t38446;
  double t38449;
  double t38450;
  double t38163;
  double t38167;
  double t38168;
  double t38474;
  double t38476;
  double t38478;
  double t38517;
  double t38518;
  double t38520;
  double t38534;
  double t38535;
  double t38537;
  double t38320;
  double t38322;
  double t38561;
  double t38564;
  double t38332;
  double t38571;
  double t38572;
  double t38573;
  double t38344;
  double t38583;
  double t38584;
  double t38585;
  double t38351;
  double t38352;
  double t38616;
  double t38617;
  double t38618;
  double t38621;
  double t38622;
  double t38623;
  double t38624;
  double t38625;
  double t38631;
  double t38633;
  double t38670;
  double t38673;
  double t38681;
  double t38682;
  double t38708;
  double t38709;
  double t38710;
  t90 = Cos(var1[13]);
  t75 = Cos(var1[14]);
  t78 = Sin(var1[13]);
  t98 = Sin(var1[14]);
  t151 = t90*t75;
  t152 = t78*t98;
  t163 = t151 + t152;
  t65 = Cos(var1[4]);
  t147 = Cos(var1[5]);
  t195 = Sin(var1[12]);
  t141 = Cos(var1[12]);
  t196 = Sin(var1[5]);
  t1806 = -1.*t147*t195*t163;
  t1809 = -1.*t141*t163*t196;
  t1829 = t1806 + t1809;
  t1851 = t65*t1829;
  t134 = Sin(var1[4]);
  t83 = -1.*t75*t78;
  t100 = t90*t98;
  t105 = t83 + t100;
  t2833 = t75*t78;
  t2883 = -1.*t90*t98;
  t2886 = t2833 + t2883;
  t3155 = -1.*t141*t147;
  t3179 = t195*t196;
  t3215 = t3155 + t3179;
  t3219 = t65*t3215;
  t2890 = t141*t147*t2886;
  t2893 = -1.*t195*t2886*t196;
  t2896 = t2890 + t2893;
  t3360 = -1.*t147*t195*t2886;
  t3365 = -1.*t141*t2886*t196;
  t3374 = t3360 + t3365;
  t3385 = t65*t3374;
  t192 = t141*t147*t163;
  t204 = -1.*t195*t163*t196;
  t467 = t192 + t204;
  t1994 = -1.*t90*t75;
  t2002 = -1.*t78*t98;
  t2031 = t1994 + t2002;
  t3472 = Cos(var1[10]);
  t3459 = Cos(var1[11]);
  t3462 = Sin(var1[10]);
  t3488 = Sin(var1[11]);
  t3695 = -1.*t3472*t3459;
  t3699 = -1.*t3462*t3488;
  t3700 = t3695 + t3699;
  t3711 = Sin(var1[9]);
  t3694 = Cos(var1[9]);
  t3817 = -1.*t147*t3711*t3700;
  t3820 = -1.*t3694*t3700*t196;
  t3829 = t3817 + t3820;
  t3830 = t65*t3829;
  t3908 = t3459*t3462;
  t3938 = -1.*t3472*t3488;
  t3955 = t3908 + t3938;
  t3466 = -1.*t3459*t3462;
  t3491 = t3472*t3488;
  t3507 = t3466 + t3491;
  t4150 = t3694*t147;
  t4154 = -1.*t3711*t196;
  t4194 = t4150 + t4154;
  t4197 = t65*t4194;
  t4010 = t3472*t3459;
  t4018 = t3462*t3488;
  t4113 = t4010 + t4018;
  t4120 = t3694*t147*t3507;
  t4121 = -1.*t3711*t3507*t196;
  t4123 = t4120 + t4121;
  t4232 = -1.*t147*t3711*t3507;
  t4233 = -1.*t3694*t3507*t196;
  t4235 = t4232 + t4233;
  t4236 = t65*t4235;
  t3701 = t3694*t147*t3700;
  t3723 = -1.*t3711*t3700*t196;
  t3738 = t3701 + t3723;
  t108 = t65*t105;
  t621 = -1.*t134*t467;
  t1389 = t108 + t621;
  t4256 = Sin(var1[3]);
  t4278 = Cos(var1[3]);
  t4382 = t4256*t134*t1829;
  t4390 = t4278*t467;
  t4394 = t4382 + t4390;
  t2509 = t141*t147*t105;
  t2628 = -1.*t195*t105*t196;
  t2638 = t2509 + t2628;
  t3241 = t65*t163;
  t3289 = -1.*t134*t2896;
  t3320 = t3241 + t3289;
  t3091 = -1.*t147*t195;
  t3125 = -1.*t141*t196;
  t3147 = t3091 + t3125;
  t5121 = t4278*t3147;
  t5192 = t4256*t134*t3215;
  t5209 = t5121 + t5192;
  t4623 = t147*t195*t2886;
  t4635 = t141*t2886*t196;
  t4653 = t4623 + t4635;
  t5351 = t4256*t134*t3374;
  t5352 = t4278*t2896;
  t5399 = t5351 + t5352;
  t4260 = t147*t195*t163;
  t4264 = t141*t163*t196;
  t4265 = t4260 + t4264;
  t3403 = t141*t147*t2031;
  t3407 = -1.*t195*t2031*t196;
  t3418 = t3403 + t3407;
  t3649 = t65*t3507;
  t3740 = -1.*t134*t3738;
  t3767 = t3649 + t3740;
  t7126 = t4256*t134*t3829;
  t7294 = t4278*t3738;
  t7391 = t7126 + t7294;
  t3960 = t3694*t147*t3955;
  t3982 = -1.*t3711*t3955*t196;
  t3986 = t3960 + t3982;
  t4198 = t65*t4113;
  t4227 = -1.*t134*t4123;
  t4228 = t4198 + t4227;
  t4133 = t147*t3711;
  t4139 = t3694*t196;
  t4140 = t4133 + t4139;
  t16368 = t4278*t4140;
  t16405 = t4256*t134*t4194;
  t16415 = t16368 + t16405;
  t10361 = t147*t3711*t3507;
  t10420 = t3694*t3507*t196;
  t10446 = t10361 + t10420;
  t18840 = t4256*t134*t4235;
  t18867 = t4278*t4123;
  t18870 = t18840 + t18867;
  t5597 = t147*t3711*t3700;
  t5598 = t3694*t3700*t196;
  t5604 = t5597 + t5598;
  t4245 = t3694*t147*t4113;
  t4247 = -1.*t3711*t4113*t196;
  t4251 = t4245 + t4247;
  t5507 = t4278*t4265;
  t5509 = -1.*t4256*t1389;
  t5510 = t5507 + t5509;
  t4287 = -1.*t105*t134;
  t4301 = -1.*t65*t467;
  t4345 = t4287 + t4301;
  t19131 = -1.*t4278*t134*t1829;
  t19135 = t4256*t467;
  t19137 = t19131 + t19135;
  t4436 = t147*t195*t105;
  t4503 = t141*t105*t196;
  t4510 = t4436 + t4503;
  t4562 = t65*t2031;
  t4565 = -1.*t134*t2638;
  t4579 = t4562 + t4565;
  t4895 = t141*t147;
  t4924 = -1.*t195*t196;
  t5046 = t4895 + t4924;
  t19278 = t4256*t3147;
  t19283 = -1.*t4278*t134*t3215;
  t19298 = t19278 + t19283;
  t4662 = t4278*t4653;
  t4687 = -1.*t4256*t3320;
  t4793 = t4662 + t4687;
  t5274 = -1.*t163*t134;
  t5337 = -1.*t65*t2896;
  t5338 = t5274 + t5337;
  t19330 = -1.*t4278*t134*t3374;
  t19337 = t4256*t2896;
  t19342 = t19330 + t19337;
  t5538 = t147*t195*t2031;
  t5540 = t141*t2031*t196;
  t5544 = t5538 + t5540;
  t5570 = t65*t2886;
  t5574 = -1.*t134*t3418;
  t5585 = t5570 + t5574;
  t18894 = t4278*t5604;
  t18919 = -1.*t4256*t3767;
  t18924 = t18894 + t18919;
  t6680 = -1.*t3507*t134;
  t6785 = -1.*t65*t3738;
  t6913 = t6680 + t6785;
  t19478 = -1.*t4278*t134*t3829;
  t19489 = t4256*t3738;
  t19627 = t19478 + t19489;
  t7439 = t147*t3711*t3955;
  t7447 = t3694*t3955*t196;
  t8256 = t7439 + t7447;
  t9301 = t65*t3700;
  t9333 = -1.*t134*t3986;
  t9498 = t9301 + t9333;
  t16270 = -1.*t3694*t147;
  t16290 = t3711*t196;
  t16301 = t16270 + t16290;
  t20406 = t4256*t4140;
  t20407 = -1.*t4278*t134*t4194;
  t20410 = t20406 + t20407;
  t10452 = t4278*t10446;
  t10500 = -1.*t4256*t4228;
  t10544 = t10452 + t10500;
  t18494 = -1.*t4113*t134;
  t18546 = -1.*t65*t4123;
  t18593 = t18494 + t18546;
  t20412 = -1.*t4278*t134*t4235;
  t22876 = t4256*t4123;
  t24853 = t20412 + t22876;
  t18925 = t147*t3711*t4113;
  t18927 = t3694*t4113*t196;
  t18930 = t18925 + t18927;
  t18996 = t65*t3955;
  t19016 = -1.*t134*t4251;
  t19111 = t18996 + t19016;
  t2788 = t163*t134;
  t3025 = t65*t2896;
  t3062 = t2788 + t3025;
  t26942 = -1.*t75;
  t26975 = 1. + t26942;
  t27078 = 0.50321*t26975;
  t27639 = 0.19821*t75;
  t27641 = t27078 + t27639;
  t28269 = -1.*t141;
  t28441 = 1. + t28269;
  t29527 = -1.*t90;
  t29610 = 1. + t29527;
  t29723 = 0.28121*t29610;
  t29724 = t90*t27641;
  t30048 = -0.305*t78*t98;
  t30054 = t29723 + t29724 + t30048;
  t26915 = 0.28121*t78;
  t27650 = -1.*t27641*t78;
  t27664 = -0.305*t90*t98;
  t27789 = t26915 + t27650 + t27664;
  t29168 = 0.15121*t28441;
  t30168 = t141*t30054;
  t30702 = t29168 + t30168;
  t30799 = t147*t30702;
  t30804 = -0.15121*t28441;
  t30818 = -0.15121*t141;
  t30901 = -0.15121*t195;
  t31064 = t195*t30054;
  t31074 = t30804 + t30818 + t30901 + t31064;
  t31076 = -1.*t31074*t196;
  t31086 = t30799 + t31076;
  t31124 = t27789*t134;
  t31180 = t65*t31086;
  t31181 = t31124 + t31180;
  t28222 = -1.*t27789*t134;
  t31088 = -1.*t65*t31086;
  t31092 = t28222 + t31088;
  t31646 = t65*t27789;
  t31765 = -1.*t134*t31086;
  t31791 = t31646 + t31765;
  t31264 = t147*t31074;
  t31279 = t30702*t196;
  t31296 = t31264 + t31279;
  t31379 = -1.*t5046*t31296;
  t31641 = -1.*t65*t3147*t31181;
  t32078 = t134*t3147*t31791;
  t32112 = t31379 + t31641 + t32078;
  t32351 = -1.*t147*t31074;
  t32367 = -1.*t30702*t196;
  t32385 = t32351 + t32367;
  t32244 = t4653*t31296;
  t32247 = t3062*t31181;
  t32254 = t3320*t31791;
  t32290 = t32244 + t32247 + t32254;
  t32337 = t65*t3374*t32112;
  t32420 = -1.*t3147*t31296;
  t32347 = Power(t65,2);
  t32415 = Power(t134,2);
  t32852 = 0.15121*t195;
  t32908 = -1.*t195*t30054;
  t32911 = t32852 + t32908;
  t32914 = t147*t32911;
  t32929 = t30818 + t30168;
  t32954 = -1.*t32929*t196;
  t32972 = t32914 + t32954;
  t32505 = -1.*t65*t3215*t31181;
  t32577 = t134*t3215*t31791;
  t32610 = t2896*t31296;
  t33029 = t147*t32929;
  t33039 = t32911*t196;
  t33209 = t33029 + t33039;
  t32742 = t65*t3374*t31181;
  t32795 = -1.*t134*t3374*t31791;
  t32826 = t65*t3215*t32290;
  t33582 = 0.28121*t90;
  t33597 = -1.*t90*t27641;
  t34035 = 0.305*t78*t98;
  t34078 = t33582 + t33597 + t34035;
  t34162 = t141*t147*t27789;
  t34301 = -1.*t195*t27789*t196;
  t34502 = t34162 + t34301;
  t3386 = t105*t134;
  t3387 = t65*t467;
  t3389 = t3386 + t3387;
  t33514 = t147*t195*t27789;
  t33528 = t141*t27789*t196;
  t33537 = t33514 + t33528;
  t34134 = t34078*t134;
  t34561 = t65*t34502;
  t36384 = t34134 + t34561;
  t37031 = t65*t34078;
  t37033 = -1.*t134*t34502;
  t37035 = t37031 + t37033;
  t37115 = -0.305*t75*t78;
  t37118 = 0.305*t90*t98;
  t37119 = t37115 + t37118;
  t37124 = -0.305*t90*t75;
  t37125 = t37124 + t30048;
  t37186 = t141*t147*t37119;
  t37188 = -1.*t195*t37119*t196;
  t37190 = t37186 + t37188;
  t3391 = t2886*t134;
  t3419 = t65*t3418;
  t3457 = t3391 + t3419;
  t37120 = t147*t195*t37119;
  t37121 = t141*t37119*t196;
  t37122 = t37120 + t37121;
  t37126 = t37125*t134;
  t37191 = t65*t37190;
  t37192 = t37126 + t37191;
  t37198 = t65*t37125;
  t37202 = -1.*t134*t37190;
  t37203 = t37198 + t37202;
  t37080 = t4265*t31296;
  t37104 = t3389*t31181;
  t37105 = t1389*t31791;
  t37262 = -1.*t4653*t31296;
  t37263 = -1.*t3062*t31181;
  t37264 = -1.*t3320*t31791;
  t37268 = t37262 + t37263 + t37264;
  t37284 = t37080 + t37104 + t37105;
  t37293 = -1.*t2896*t31296;
  t37301 = -1.*t65*t3374*t31181;
  t37302 = t134*t3374*t31791;
  t37308 = t467*t31296;
  t37312 = t65*t1829*t31181;
  t37313 = -1.*t134*t1829*t31791;
  t37323 = t65*t1829*t37268;
  t37328 = t65*t3374*t37284;
  t2226 = t2031*t134;
  t2670 = t65*t2638;
  t2711 = t2226 + t2670;
  t37402 = -1.*t4265*t31296;
  t37407 = -1.*t3389*t31181;
  t37409 = -1.*t1389*t31791;
  t37447 = t5046*t31296;
  t37449 = t65*t3147*t31181;
  t37451 = -1.*t134*t3147*t31791;
  t37452 = t37447 + t37449 + t37451;
  t37465 = t37402 + t37407 + t37409;
  t37469 = t65*t1829*t37452;
  t37473 = t3147*t31296;
  t37477 = t65*t3215*t31181;
  t37479 = -1.*t134*t3215*t31791;
  t37488 = -1.*t467*t31296;
  t37495 = -1.*t65*t1829*t31181;
  t37496 = t134*t1829*t31791;
  t37502 = t65*t3215*t37465;
  t4115 = t4113*t134;
  t4124 = t65*t4123;
  t4125 = t4115 + t4124;
  t37571 = -1.*t3459;
  t37574 = 1. + t37571;
  t37575 = -0.50321*t37574;
  t37578 = -0.19821*t3459;
  t37579 = t37575 + t37578;
  t37590 = -1.*t3694;
  t37591 = 1. + t37590;
  t37595 = -1.*t3472;
  t37598 = 1. + t37595;
  t37599 = -0.28121*t37598;
  t37602 = t3472*t37579;
  t37603 = 0.305*t3462*t3488;
  t37606 = t37599 + t37602 + t37603;
  t37570 = 0.28121*t3462;
  t37582 = t37579*t3462;
  t37583 = -0.305*t3472*t3488;
  t37586 = t37570 + t37582 + t37583;
  t37594 = -0.15121*t37591;
  t37607 = t3694*t37606;
  t37610 = t37594 + t37607;
  t37611 = t147*t37610;
  t37615 = 0.15121*t37591;
  t37616 = 0.15121*t3694;
  t37619 = 0.15121*t3711;
  t37620 = t3711*t37606;
  t37623 = t37615 + t37616 + t37619 + t37620;
  t37624 = -1.*t37623*t196;
  t37627 = t37611 + t37624;
  t37635 = t37586*t134;
  t37636 = t65*t37627;
  t37637 = t37635 + t37636;
  t37587 = -1.*t37586*t134;
  t37628 = -1.*t65*t37627;
  t37631 = t37587 + t37628;
  t37650 = t65*t37586;
  t37651 = -1.*t134*t37627;
  t37653 = t37650 + t37651;
  t37642 = t147*t37623;
  t37644 = t37610*t196;
  t37646 = t37642 + t37644;
  t37647 = -1.*t16301*t37646;
  t37649 = -1.*t65*t4140*t37637;
  t37655 = t134*t4140*t37653;
  t37656 = t37647 + t37649 + t37655;
  t37674 = -1.*t147*t37623;
  t37675 = -1.*t37610*t196;
  t37676 = t37674 + t37675;
  t37665 = t10446*t37646;
  t37667 = t4125*t37637;
  t37668 = t4228*t37653;
  t37669 = t37665 + t37667 + t37668;
  t37673 = t65*t4235*t37656;
  t37680 = -1.*t4140*t37646;
  t37699 = -0.15121*t3711;
  t37701 = -1.*t3711*t37606;
  t37703 = t37699 + t37701;
  t37705 = t147*t37703;
  t37706 = t37616 + t37607;
  t37708 = -1.*t37706*t196;
  t37709 = t37705 + t37708;
  t37682 = -1.*t65*t4194*t37637;
  t37684 = t134*t4194*t37653;
  t37688 = t4123*t37646;
  t37712 = t147*t37706;
  t37714 = t37703*t196;
  t37715 = t37712 + t37714;
  t37693 = t65*t4235*t37637;
  t37694 = -1.*t134*t4235*t37653;
  t37697 = t65*t4194*t37669;
  t37727 = -0.28121*t3462;
  t37729 = -1.*t37579*t3462;
  t37731 = 0.305*t3472*t3488;
  t37732 = t37727 + t37729 + t37731;
  t37738 = 0.28121*t3472;
  t37739 = t37738 + t37602 + t37603;
  t37742 = t3694*t147*t37732;
  t37745 = -1.*t3711*t37732*t196;
  t37746 = t37742 + t37745;
  t4237 = t3507*t134;
  t4238 = t65*t3738;
  t4240 = t4237 + t4238;
  t37733 = t147*t3711*t37732;
  t37734 = t3694*t37732*t196;
  t37735 = t37733 + t37734;
  t37740 = t37739*t134;
  t37747 = t65*t37746;
  t37748 = t37740 + t37747;
  t37750 = t65*t37739;
  t37752 = -1.*t134*t37746;
  t37753 = t37750 + t37752;
  t37774 = 0.305*t3459*t3462;
  t37776 = t37774 + t37583;
  t37782 = -0.305*t3472*t3459;
  t37784 = -0.305*t3462*t3488;
  t37785 = t37782 + t37784;
  t37788 = t3694*t147*t37776;
  t37791 = -1.*t3711*t37776*t196;
  t37792 = t37788 + t37791;
  t4242 = t3955*t134;
  t4253 = t65*t4251;
  t4255 = t4242 + t4253;
  t37777 = t147*t3711*t37776;
  t37778 = t3694*t37776*t196;
  t37780 = t37777 + t37778;
  t37787 = t37785*t134;
  t37794 = t65*t37792;
  t37796 = t37787 + t37794;
  t37799 = t65*t37785;
  t37800 = -1.*t134*t37792;
  t37801 = t37799 + t37800;
  t37763 = t5604*t37646;
  t37767 = t4240*t37637;
  t37769 = t3767*t37653;
  t37832 = -1.*t10446*t37646;
  t37835 = -1.*t4125*t37637;
  t37836 = -1.*t4228*t37653;
  t37838 = t37832 + t37835 + t37836;
  t37849 = t37763 + t37767 + t37769;
  t37853 = -1.*t4123*t37646;
  t37860 = -1.*t65*t4235*t37637;
  t37861 = t134*t4235*t37653;
  t37865 = t3738*t37646;
  t37872 = t65*t3829*t37637;
  t37873 = -1.*t134*t3829*t37653;
  t37879 = t65*t3829*t37838;
  t37880 = t65*t4235*t37849;
  t3865 = t3700*t134;
  t3995 = t65*t3986;
  t4007 = t3865 + t3995;
  t37913 = -1.*t5604*t37646;
  t37919 = -1.*t4240*t37637;
  t37920 = -1.*t3767*t37653;
  t37952 = t16301*t37646;
  t37954 = t65*t4140*t37637;
  t37955 = -1.*t134*t4140*t37653;
  t37956 = t37952 + t37954 + t37955;
  t37971 = t37913 + t37919 + t37920;
  t37975 = t65*t3829*t37956;
  t37979 = t4140*t37646;
  t37982 = t65*t4194*t37637;
  t37984 = -1.*t134*t4194*t37653;
  t37989 = -1.*t3738*t37646;
  t37994 = -1.*t65*t3829*t37637;
  t37997 = t134*t3829*t37653;
  t38001 = t65*t4194*t37971;
  t32482 = -1.*t5046*t31086;
  t32669 = t4653*t31086;
  t38057 = -1.*t3147*t31086;
  t38059 = t31379 + t38057;
  t38060 = t2896*t38059;
  t33212 = -1.*t5046*t33209;
  t38063 = -1.*t3215*t31086;
  t33344 = t4653*t33209;
  t38068 = t3374*t31086;
  t38073 = t27789*t163;
  t38074 = t2896*t31086;
  t38075 = t38073 + t32244 + t38074;
  t38077 = t3147*t38075;
  t33563 = -1.*t5046*t33537;
  t37079 = t4653*t33537;
  t37123 = -1.*t5046*t37122;
  t37214 = t4653*t37122;
  t37215 = t5544*t31296;
  t37294 = -1.*t4653*t31086;
  t37309 = t4265*t31086;
  t38094 = t27789*t105;
  t38098 = t467*t31086;
  t37341 = -1.*t4653*t33209;
  t38120 = -1.*t3374*t31086;
  t38123 = -1.*t27789*t163;
  t38125 = -1.*t2896*t31086;
  t38126 = t38123 + t37262 + t38125;
  t38127 = t467*t38126;
  t37376 = t4265*t33209;
  t38129 = t1829*t31086;
  t38133 = t38094 + t37080 + t38098;
  t38134 = t2896*t38133;
  t37386 = t33537*t4265;
  t37388 = t4510*t31296;
  t37401 = -1.*t4653*t33537;
  t37418 = t37122*t4265;
  t37425 = -1.*t4653*t37122;
  t37427 = -1.*t5544*t31296;
  t37475 = t5046*t31086;
  t37489 = -1.*t4265*t31086;
  t38153 = -1.*t27789*t105;
  t38157 = -1.*t467*t31086;
  t38175 = t3147*t31086;
  t38176 = t37447 + t38175;
  t38177 = t467*t38176;
  t37507 = t5046*t33209;
  t38180 = t3215*t31086;
  t37512 = -1.*t4265*t33209;
  t38186 = -1.*t1829*t31086;
  t38189 = t38153 + t37402 + t38157;
  t38190 = t3147*t38189;
  t37522 = t5046*t33537;
  t37531 = -1.*t33537*t4265;
  t37532 = -1.*t4510*t31296;
  t37544 = t5046*t37122;
  t37557 = -1.*t37122*t4265;
  t37681 = -1.*t16301*t37627;
  t37689 = t10446*t37627;
  t38227 = -1.*t4140*t37627;
  t38228 = t37647 + t38227;
  t38229 = t4123*t38228;
  t37716 = -1.*t16301*t37715;
  t38231 = -1.*t4194*t37627;
  t37720 = t10446*t37715;
  t38237 = t4235*t37627;
  t38241 = t37586*t4113;
  t38246 = t4123*t37627;
  t38247 = t38241 + t37665 + t38246;
  t38248 = t4140*t38247;
  t37737 = -1.*t16301*t37735;
  t37762 = t37735*t10446;
  t37781 = -1.*t16301*t37780;
  t37810 = t37780*t10446;
  t37811 = t18930*t37646;
  t37856 = -1.*t10446*t37627;
  t37868 = t5604*t37627;
  t38266 = t37586*t3507;
  t38269 = t3738*t37627;
  t37883 = -1.*t10446*t37715;
  t38292 = -1.*t4235*t37627;
  t38296 = -1.*t37586*t4113;
  t38298 = -1.*t4123*t37627;
  t38301 = t38296 + t37832 + t38298;
  t38302 = t3738*t38301;
  t37890 = t5604*t37715;
  t38304 = t3829*t37627;
  t38307 = t38266 + t37763 + t38269;
  t38308 = t4123*t38307;
  t37898 = t37735*t5604;
  t37900 = t8256*t37646;
  t37912 = -1.*t37735*t10446;
  t37929 = t37780*t5604;
  t37936 = -1.*t37780*t10446;
  t37937 = -1.*t18930*t37646;
  t37981 = t16301*t37627;
  t37990 = -1.*t5604*t37627;
  t38331 = -1.*t37586*t3507;
  t38334 = -1.*t3738*t37627;
  t38361 = t4140*t37627;
  t38362 = t37952 + t38361;
  t38363 = t3738*t38362;
  t38006 = t16301*t37715;
  t38366 = t4194*t37627;
  t38011 = -1.*t5604*t37715;
  t38371 = -1.*t3829*t37627;
  t38375 = t38331 + t37913 + t38334;
  t38377 = t4140*t38375;
  t38020 = t16301*t37735;
  t38028 = -1.*t37735*t5604;
  t38030 = -1.*t8256*t37646;
  t38040 = t16301*t37780;
  t38048 = -1.*t37780*t5604;
  t38423 = t195*t30702;
  t38424 = -1.*t141*t31074;
  t38425 = t38423 + t38424;
  t38146 = t27789*t2031;
  t38148 = t105*t34078;
  t38454 = Power(t141,2);
  t38458 = Power(t195,2);
  t38154 = -1.*t34078*t163;
  t38446 = -1.*t141*t2886*t30702;
  t38449 = -1.*t195*t2886*t31074;
  t38450 = t38123 + t38446 + t38449;
  t38163 = t105*t37125;
  t38167 = -1.*t2886*t27789;
  t38168 = -1.*t37125*t163;
  t38474 = t141*t163*t30702;
  t38476 = t195*t163*t31074;
  t38478 = t38094 + t38474 + t38476;
  t38517 = -1.*t195*t30702;
  t38518 = t141*t31074;
  t38520 = t38517 + t38518;
  t38534 = -1.*t3711*t37610;
  t38535 = t3694*t37623;
  t38537 = t38534 + t38535;
  t38320 = t37586*t3700;
  t38322 = t3507*t37739;
  t38561 = Power(t3694,2);
  t38564 = Power(t3711,2);
  t38332 = -1.*t37739*t4113;
  t38571 = -1.*t3694*t3507*t37610;
  t38572 = -1.*t3711*t3507*t37623;
  t38573 = t38296 + t38571 + t38572;
  t38344 = t3507*t37785;
  t38583 = t3694*t3700*t37610;
  t38584 = t3711*t3700*t37623;
  t38585 = t38266 + t38583 + t38584;
  t38351 = -1.*t3955*t37586;
  t38352 = -1.*t37785*t4113;
  t38616 = t3711*t37610;
  t38617 = -1.*t3694*t37623;
  t38618 = t38616 + t38617;
  t38621 = 0.15121*t3955;
  t38622 = 0.15121*t3507;
  t38623 = t38621 + t38622;
  t38624 = t3700*t37606;
  t38625 = t38266 + t38624;
  t38631 = -1.*t3507*t37606;
  t38633 = t38631 + t38296;
  t38670 = -1.*t2886*t30054;
  t38673 = t38670 + t38123;
  t38681 = t30054*t163;
  t38682 = t38094 + t38681;
  t38708 = -0.15121*t2031;
  t38709 = -0.15121*t163;
  t38710 = t38708 + t38709;
  p_output1[0]=t1389;
  p_output1[1]=t1851;
  p_output1[2]=t1851;
  p_output1[3]=t2711;
  p_output1[4]=t3062;
  p_output1[5]=-1.*t134*t3147;
  p_output1[6]=t3219;
  p_output1[7]=t3219;
  p_output1[8]=t3320;
  p_output1[9]=t3385;
  p_output1[10]=t3385;
  p_output1[11]=t3389;
  p_output1[12]=t3457;
  p_output1[13]=t3767;
  p_output1[14]=t3830;
  p_output1[15]=t3830;
  p_output1[16]=t4007;
  p_output1[17]=t4125;
  p_output1[18]=-1.*t134*t4140;
  p_output1[19]=t4197;
  p_output1[20]=t4197;
  p_output1[21]=t4228;
  p_output1[22]=t4236;
  p_output1[23]=t4236;
  p_output1[24]=t4240;
  p_output1[25]=t4255;
  p_output1[26]=-1.*t4256*t4265 - 1.*t1389*t4278;
  p_output1[27]=-1.*t4256*t4345;
  p_output1[28]=t4394;
  p_output1[29]=t4394;
  p_output1[30]=t4278*t4510 - 1.*t4256*t4579;
  p_output1[31]=t4793;
  p_output1[32]=t134*t3147*t4278 - 1.*t4256*t5046;
  p_output1[33]=t3147*t4256*t65;
  p_output1[34]=t5209;
  p_output1[35]=t5209;
  p_output1[36]=-1.*t3320*t4278 - 1.*t4256*t4653;
  p_output1[37]=-1.*t4256*t5338;
  p_output1[38]=t5399;
  p_output1[39]=t5399;
  p_output1[40]=t5510;
  p_output1[41]=t4278*t5544 - 1.*t4256*t5585;
  p_output1[42]=-1.*t3767*t4278 - 1.*t4256*t5604;
  p_output1[43]=-1.*t4256*t6913;
  p_output1[44]=t7391;
  p_output1[45]=t7391;
  p_output1[46]=t4278*t8256 - 1.*t4256*t9498;
  p_output1[47]=t10544;
  p_output1[48]=-1.*t16301*t4256 + t134*t4140*t4278;
  p_output1[49]=t4140*t4256*t65;
  p_output1[50]=t16415;
  p_output1[51]=t16415;
  p_output1[52]=-1.*t10446*t4256 - 1.*t4228*t4278;
  p_output1[53]=-1.*t18593*t4256;
  p_output1[54]=t18870;
  p_output1[55]=t18870;
  p_output1[56]=t18924;
  p_output1[57]=-1.*t19111*t4256 + t18930*t4278;
  p_output1[58]=t5510;
  p_output1[59]=t4278*t4345;
  p_output1[60]=t19137;
  p_output1[61]=t19137;
  p_output1[62]=t4256*t4510 + t4278*t4579;
  p_output1[63]=t3320*t4278 + t4256*t4653;
  p_output1[64]=t134*t3147*t4256 + t4278*t5046;
  p_output1[65]=-1.*t3147*t4278*t65;
  p_output1[66]=t19298;
  p_output1[67]=t19298;
  p_output1[68]=t4793;
  p_output1[69]=t4278*t5338;
  p_output1[70]=t19342;
  p_output1[71]=t19342;
  p_output1[72]=t4256*t4265 + t1389*t4278;
  p_output1[73]=t4256*t5544 + t4278*t5585;
  p_output1[74]=t18924;
  p_output1[75]=t4278*t6913;
  p_output1[76]=t19627;
  p_output1[77]=t19627;
  p_output1[78]=t4256*t8256 + t4278*t9498;
  p_output1[79]=t10446*t4256 + t4228*t4278;
  p_output1[80]=t134*t4140*t4256 + t16301*t4278;
  p_output1[81]=-1.*t4140*t4278*t65;
  p_output1[82]=t20410;
  p_output1[83]=t20410;
  p_output1[84]=t10544;
  p_output1[85]=t18593*t4278;
  p_output1[86]=t24853;
  p_output1[87]=t24853;
  p_output1[88]=t3767*t4278 + t4256*t5604;
  p_output1[89]=t18930*t4256 + t19111*t4278;
  p_output1[90]=t3062*(t134*t31092*t3147 + t134*t31181*t3147) - 1.*t134*t3147*t32290 + t32112*t3320 + t3147*(t3062*t31791 + t31092*t3320 + t31181*t3320 + t31791*t5338)*t65;
  p_output1[91]=t32337 + t3062*(-1.*t3147*t32347*t32385 - 1.*t3147*t32385*t32415 + t32420 + t32482 + t32505 + t32577) + t32826 + t3147*t65*(t32610 + t32669 + t32742 + t32795 - 1.*t134*t32385*t3320 + t3062*t32385*t65);
  p_output1[92]=t32337 + t32826 + t3062*(t32420 + t32505 + t32577 - 1.*t3147*t32347*t32972 - 1.*t3147*t32415*t32972 + t33212) + t3147*t65*(t32610 + t32742 + t32795 - 1.*t134*t32972*t3320 + t33344 + t3062*t32972*t65);
  p_output1[93]=t32112*t3389 + t3147*(t3062*t36384 + t3320*t37035 + t37079 + t37080 + t37104 + t37105)*t65 + t3062*(t33563 + t134*t3147*t37035 - 1.*t3147*t36384*t65);
  p_output1[94]=t32112*t3457 + t3147*(t31181*t3457 + t3062*t37192 + t3320*t37203 + t37214 + t37215 + t31791*t5585)*t65 + t3062*(t37123 + t134*t3147*t37203 - 1.*t3147*t37192*t65);
  p_output1[95]=t1389*t37268 + t3320*t37284 + t3062*(t1389*t31092 + t1389*t31181 + t31791*t3389 + t31791*t4345) + t3389*(-1.*t3062*t31791 - 1.*t31092*t3320 - 1.*t31181*t3320 - 1.*t31791*t5338);
  p_output1[96]=t37323 + t37328 + t3389*(t134*t32385*t3320 + t37293 + t37294 + t37301 + t37302 - 1.*t3062*t32385*t65) + t3062*(-1.*t134*t1389*t32385 + t37308 + t37309 + t37312 + t37313 + t32385*t3389*t65);
  p_output1[97]=t37323 + t37328 + t3389*(t134*t32972*t3320 + t37293 + t37301 + t37302 + t37341 - 1.*t3062*t32972*t65) + t3062*(-1.*t134*t1389*t32972 + t37308 + t37312 + t37313 + t37376 + t32972*t3389*t65);
  p_output1[98]=t2711*t37268 + t3389*t37284 + t3389*(-1.*t3062*t36384 - 1.*t3320*t37035 + t37401 + t37402 + t37407 + t37409) + t3062*(t2711*t31181 + t3389*t36384 + t1389*t37035 + t37386 + t37388 + t31791*t4579);
  p_output1[99]=t3062*t37268 + t3457*t37284 + t3062*(t32244 + t32247 + t32254 + t3389*t37192 + t1389*t37203 + t37418) + t3389*(-1.*t31181*t3457 - 1.*t3062*t37192 - 1.*t3320*t37203 + t37425 + t37427 - 1.*t31791*t5585);
  p_output1[100]=(-1.*t134*t31092*t3147 - 1.*t134*t31181*t3147)*t3389 + t1389*t37452 - 1.*t134*t3147*t37465 + t3147*(-1.*t1389*t31092 - 1.*t1389*t31181 - 1.*t31791*t3389 - 1.*t31791*t4345)*t65;
  p_output1[101]=t37469 + t3389*(t3147*t32347*t32385 + t3147*t32385*t32415 + t37473 + t37475 + t37477 + t37479) + t37502 + t3147*t65*(t134*t1389*t32385 + t37488 + t37489 + t37495 + t37496 - 1.*t32385*t3389*t65);
  p_output1[102]=t37469 + t37502 + t3389*(t3147*t32347*t32972 + t3147*t32415*t32972 + t37473 + t37477 + t37479 + t37507) + t3147*t65*(t134*t1389*t32972 + t37488 + t37495 + t37496 + t37512 - 1.*t32972*t3389*t65);
  p_output1[103]=t2711*t37452 + t3147*(-1.*t2711*t31181 - 1.*t3389*t36384 - 1.*t1389*t37035 + t37531 + t37532 - 1.*t31791*t4579)*t65 + t3389*(-1.*t134*t3147*t37035 + t37522 + t3147*t36384*t65);
  p_output1[104]=t3062*t37452 + t3147*(-1.*t3389*t37192 - 1.*t1389*t37203 + t37262 + t37263 + t37264 + t37557)*t65 + t3389*(-1.*t134*t3147*t37203 + t37544 + t3147*t37192*t65);
  p_output1[105]=-1.*t134*t37669*t4140 + t4125*(t134*t37631*t4140 + t134*t37637*t4140) + t37656*t4228 + t4140*(t18593*t37653 + t37653*t4125 + t37631*t4228 + t37637*t4228)*t65;
  p_output1[106]=t37673 + t37697 + t4125*(t37680 + t37681 + t37682 + t37684 - 1.*t32347*t37676*t4140 - 1.*t32415*t37676*t4140) + t4140*t65*(t37688 + t37689 + t37693 + t37694 - 1.*t134*t37676*t4228 + t37676*t4125*t65);
  p_output1[107]=t37673 + t37697 + t4125*(t37680 + t37682 + t37684 + t37716 - 1.*t32347*t37709*t4140 - 1.*t32415*t37709*t4140) + t4140*t65*(t37688 + t37693 + t37694 + t37720 - 1.*t134*t37709*t4228 + t37709*t4125*t65);
  p_output1[108]=t37656*t4240 + t4140*(t37762 + t37763 + t37767 + t37769 + t37748*t4125 + t37753*t4228)*t65 + t4125*(t37737 + t134*t37753*t4140 - 1.*t37748*t4140*t65);
  p_output1[109]=t37656*t4255 + t4140*(t19111*t37653 + t37810 + t37811 + t37796*t4125 + t37801*t4228 + t37637*t4255)*t65 + t4125*(t37781 + t134*t37801*t4140 - 1.*t37796*t4140*t65);
  p_output1[110]=t3767*t37838 + t37849*t4228 + (-1.*t18593*t37653 - 1.*t37653*t4125 - 1.*t37631*t4228 - 1.*t37637*t4228)*t4240 + t4125*(t37631*t3767 + t37637*t3767 + t37653*t4240 + t37653*t6913);
  p_output1[111]=t37879 + t37880 + t4240*(t37853 + t37856 + t37860 + t37861 + t134*t37676*t4228 - 1.*t37676*t4125*t65) + t4125*(-1.*t134*t3767*t37676 + t37865 + t37868 + t37872 + t37873 + t37676*t4240*t65);
  p_output1[112]=t37879 + t37880 + t4240*(t37853 + t37860 + t37861 + t37883 + t134*t37709*t4228 - 1.*t37709*t4125*t65) + t4125*(-1.*t134*t3767*t37709 + t37865 + t37872 + t37873 + t37890 + t37709*t4240*t65);
  p_output1[113]=t37838*t4007 + t37849*t4240 + (t37912 + t37913 + t37919 + t37920 - 1.*t37748*t4125 - 1.*t37753*t4228)*t4240 + t4125*(t3767*t37753 + t37898 + t37900 + t37637*t4007 + t37748*t4240 + t37653*t9498);
  p_output1[114]=t37838*t4125 + t4125*(t37665 + t37667 + t37668 + t3767*t37801 + t37929 + t37796*t4240) + t37849*t4255 + t4240*(-1.*t19111*t37653 + t37936 + t37937 - 1.*t37796*t4125 - 1.*t37801*t4228 - 1.*t37637*t4255);
  p_output1[115]=t3767*t37956 - 1.*t134*t37971*t4140 + (-1.*t134*t37631*t4140 - 1.*t134*t37637*t4140)*t4240 + t4140*t65*(-1.*t37631*t3767 - 1.*t37637*t3767 - 1.*t37653*t4240 - 1.*t37653*t6913);
  p_output1[116]=t37975 + t38001 + (t37979 + t37981 + t37982 + t37984 + t32347*t37676*t4140 + t32415*t37676*t4140)*t4240 + t4140*t65*(t134*t3767*t37676 + t37989 + t37990 + t37994 + t37997 - 1.*t37676*t4240*t65);
  p_output1[117]=t37975 + t38001 + (t37979 + t37982 + t37984 + t38006 + t32347*t37709*t4140 + t32415*t37709*t4140)*t4240 + t4140*t65*(t134*t3767*t37709 + t37989 + t37994 + t37997 + t38011 - 1.*t37709*t4240*t65);
  p_output1[118]=t37956*t4007 + t4240*(t38020 - 1.*t134*t37753*t4140 + t37748*t4140*t65) + t4140*t65*(-1.*t3767*t37753 + t38028 + t38030 - 1.*t37637*t4007 - 1.*t37748*t4240 - 1.*t37653*t9498);
  p_output1[119]=t37956*t4125 + t4140*(-1.*t3767*t37801 + t37832 + t37835 + t37836 + t38048 - 1.*t37796*t4240)*t65 + t4240*(t38040 - 1.*t134*t37801*t4140 + t37796*t4140*t65);
  p_output1[120]=t38060 + t38077 + (-1.*t3147*t32385 + t32420 + t32482 + t38063)*t4653 + (t2896*t32385 + t32610 + t32669 + t38068)*t5046;
  p_output1[121]=t38060 + t38077 + (t32420 - 1.*t3147*t32972 + t33212 + t38063)*t4653 + (t32610 + t2896*t32972 + t33344 + t38068)*t5046;
  p_output1[122]=t38059*t4265 + (t33563 - 1.*t3147*t34502)*t4653 + (t163*t34078 + t2896*t34502 + t37079 + t37080 + t38094 + t38098)*t5046;
  p_output1[123]=(t37123 - 1.*t3147*t37190)*t4653 + (t27789*t2886 + t31086*t3418 + t163*t37125 + t2896*t37190 + t37214 + t37215)*t5046 + t38059*t5544;
  p_output1[124]=t38127 + t38134 + (-1.*t2896*t32385 + t37293 + t37294 + t38120)*t4265 + t4653*(t37308 + t37309 + t38129 + t32385*t467);
  p_output1[125]=t38127 + t38134 + (-1.*t2896*t32972 + t37293 + t37341 + t38120)*t4265 + t4653*(t37308 + t37376 + t38129 + t32972*t467);
  p_output1[126]=t38133*t4265 + (-1.*t2896*t34502 + t37401 + t37402 + t38153 + t38154 + t38157)*t4265 + t38126*t4510 + t4653*(t2638*t31086 + t37386 + t37388 + t38146 + t38148 + t34502*t467);
  p_output1[127]=(-1.*t31086*t3418 - 1.*t2896*t37190 + t37425 + t37427 + t38167 + t38168)*t4265 + t38126*t4653 + t4653*(t32244 + t37418 + t38073 + t38074 + t38163 + t37190*t467) + t38133*t5544;
  p_output1[128]=t38177 + t38190 + (t3147*t32385 + t37473 + t37475 + t38180)*t4265 + (t37488 + t37489 + t38186 - 1.*t32385*t467)*t5046;
  p_output1[129]=t38177 + t38190 + (t3147*t32972 + t37473 + t37507 + t38180)*t4265 + (t37488 + t37512 + t38186 - 1.*t32972*t467)*t5046;
  p_output1[130]=(t3147*t34502 + t37522)*t4265 + t38176*t4510 + (-1.*t2031*t27789 - 1.*t2638*t31086 - 1.*t105*t34078 + t37531 + t37532 - 1.*t34502*t467)*t5046;
  p_output1[131]=(t3147*t37190 + t37544)*t4265 + t38176*t4653 + (-1.*t105*t37125 + t37262 + t37557 + t38123 + t38125 - 1.*t37190*t467)*t5046;
  p_output1[132]=t38229 + t38248 + t16301*(t37688 + t37689 + t38237 + t37676*t4123) + t10446*(t37680 + t37681 + t38231 - 1.*t37676*t4140);
  p_output1[133]=t38229 + t38248 + t16301*(t37688 + t37720 + t38237 + t37709*t4123) + t10446*(t37680 + t37716 + t38231 - 1.*t37709*t4140);
  p_output1[134]=t16301*(t37762 + t37763 + t38266 + t38269 + t37739*t4113 + t37746*t4123) + t10446*(t37737 - 1.*t37746*t4140) + t38228*t5604;
  p_output1[135]=t18930*t38228 + t10446*(t37781 - 1.*t37792*t4140) + t16301*(t37810 + t37811 + t37586*t3955 + t37785*t4113 + t37792*t4123 + t37627*t4251);
  p_output1[136]=t38302 + t10446*(t3738*t37676 + t37865 + t37868 + t38304) + t38308 + (t37853 + t37856 + t38292 - 1.*t37676*t4123)*t5604;
  p_output1[137]=t38302 + t10446*(t3738*t37709 + t37865 + t37890 + t38304) + t38308 + (t37853 + t37883 + t38292 - 1.*t37709*t4123)*t5604;
  p_output1[138]=t10446*(t3738*t37746 + t37898 + t37900 + t38320 + t38322 + t37627*t3986) + t38307*t5604 + (t37912 + t37913 + t38331 + t38332 + t38334 - 1.*t37746*t4123)*t5604 + t38301*t8256;
  p_output1[139]=t10446*t38301 + t18930*t38307 + t10446*(t37665 + t3738*t37792 + t37929 + t38241 + t38246 + t38344) + (t37936 + t37937 + t38351 + t38352 - 1.*t37792*t4123 - 1.*t37627*t4251)*t5604;
  p_output1[140]=t38363 + t16301*(-1.*t3738*t37676 + t37989 + t37990 + t38371) + t38377 + (t37979 + t37981 + t38366 + t37676*t4140)*t5604;
  p_output1[141]=t38363 + t16301*(-1.*t3738*t37709 + t37989 + t38011 + t38371) + t38377 + (t37979 + t38006 + t38366 + t37709*t4140)*t5604;
  p_output1[142]=t16301*(-1.*t3700*t37586 - 1.*t3507*t37739 - 1.*t3738*t37746 + t38028 + t38030 - 1.*t37627*t3986) + (t38020 + t37746*t4140)*t5604 + t38362*t8256;
  p_output1[143]=t16301*(-1.*t3507*t37785 - 1.*t3738*t37792 + t37832 + t38048 + t38296 + t38298) + t10446*t38362 + (t38040 + t37792*t4140)*t5604;
  p_output1[144]=t163*(t141*t30702 + t195*t31074 + t195*t32911 - 1.*t141*t32929);
  p_output1[145]=t105*t38425;
  p_output1[146]=t2886*t38425;
  p_output1[147]=t163*(-1.*t163*t195*t30702 + t141*t163*t31074 + t141*t163*t32911 + t163*t195*t32929) + t105*(t195*t2886*t30702 - 1.*t141*t2886*t31074 - 1.*t141*t2886*t32911 - 1.*t195*t2886*t32929);
  p_output1[148]=t2031*t38450 + t163*(t105*t141*t30702 + t105*t195*t31074 + t38146 + t38148 + t163*t27789*t38454 + t163*t27789*t38458) + t105*(-1.*t141*t163*t30702 - 1.*t163*t195*t31074 + t38153 + t38154 - 1.*t27789*t2886*t38454 - 1.*t27789*t2886*t38458) + t105*t38478;
  p_output1[149]=t163*t38450 + t163*(t141*t2886*t30702 + t195*t2886*t31074 + t38073 + t38163 + t163*t37119*t38454 + t163*t37119*t38458) + t105*(-1.*t141*t2031*t30702 - 1.*t195*t2031*t31074 + t38167 + t38168 - 1.*t2886*t37119*t38454 - 1.*t2886*t37119*t38458) + t2886*t38478;
  p_output1[150]=t105*(-1.*t141*t30702 - 1.*t195*t31074 - 1.*t195*t32911 + t141*t32929);
  p_output1[151]=t2031*t38520;
  p_output1[152]=t163*t38520;
  p_output1[153]=(-1.*t3694*t37610 - 1.*t3711*t37623 - 1.*t3711*t37703 + t3694*t37706)*t4113;
  p_output1[154]=t3507*t38537;
  p_output1[155]=t38537*t3955;
  p_output1[156]=t3507*(t3507*t3711*t37610 - 1.*t3507*t3694*t37623 - 1.*t3507*t3694*t37703 - 1.*t3507*t3711*t37706) + (-1.*t3700*t3711*t37610 + t3694*t3700*t37623 + t3694*t3700*t37703 + t3700*t3711*t37706)*t4113;
  p_output1[157]=t3507*(-1.*t3694*t3700*t37610 - 1.*t3700*t3711*t37623 + t38331 + t38332 - 1.*t3507*t37732*t38561 - 1.*t3507*t37732*t38564) + t3700*t38573 + t3507*t38585 + (t38320 + t38322 + t3700*t37732*t38561 + t3700*t37732*t38564 + t3694*t37610*t3955 + t3711*t37623*t3955)*t4113;
  p_output1[158]=t38585*t3955 + (t3507*t3694*t37610 + t3507*t3711*t37623 + t38241 + t38344 + t3700*t37776*t38561 + t3700*t37776*t38564)*t4113 + t38573*t4113 + t3507*(t38351 + t38352 - 1.*t3507*t37776*t38561 - 1.*t3507*t37776*t38564 - 1.*t3694*t37610*t4113 - 1.*t3711*t37623*t4113);
  p_output1[159]=t3507*(t3694*t37610 + t3711*t37623 + t3711*t37703 - 1.*t3694*t37706);
  p_output1[160]=t3700*t38618;
  p_output1[161]=t38618*t4113;
  p_output1[162]=t38623;
  p_output1[163]=t38623;
  p_output1[164]=t3507*(-1.*t3700*t37606 - 1.*t3507*t37732 + t38331 + t38332) + t3507*t38625 + t3700*t38633 + (t3700*t37732 + t38320 + t38322 + t37606*t3955)*t4113;
  p_output1[165]=t38625*t3955 + (t3507*t37606 + t3700*t37776 + t38241 + t38344)*t4113 + t38633*t4113 + t3507*(-1.*t3507*t37776 + t38351 + t38352 - 1.*t37606*t4113);
  p_output1[166]=0.28121*t3459 - 0.305*Power(t3459,2) + t3459*t37579;
  p_output1[167]=-0.28121*t3488 + 0.305*t3459*t3488 - 1.*t3488*t37579;
  p_output1[168]=t163*(t105*t30054 + t38073 + t38146 + t38148) + t105*(-1.*t163*t30054 + t38153 + t38154 + t38167) + t2031*t38673 + t105*t38682;
  p_output1[169]=t163*(t2886*t30054 + t163*t37119 + t38073 + t38163) + t105*(-1.*t2031*t30054 - 1.*t2886*t37119 + t38167 + t38168) + t163*t38673 + t2886*t38682;
  p_output1[170]=t38710;
  p_output1[171]=t38710;
  p_output1[172]=0.28121*t75 - 1.*t27641*t75 - 0.305*Power(t75,2);
  p_output1[173]=-0.28121*t98 + t27641*t98 + 0.305*t75*t98;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
