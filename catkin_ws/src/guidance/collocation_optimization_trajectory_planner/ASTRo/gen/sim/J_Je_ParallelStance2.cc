/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 19:39:44 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1736;
  double t1719;
  double t1723;
  double t1737;
  double t2166;
  double t2409;
  double t2413;
  double t44;
  double t2154;
  double t2603;
  double t2120;
  double t2717;
  double t2883;
  double t2913;
  double t3159;
  double t3266;
  double t2116;
  double t1734;
  double t1943;
  double t1966;
  double t3447;
  double t3449;
  double t3470;
  double t3871;
  double t3996;
  double t3999;
  double t4007;
  double t3479;
  double t3550;
  double t3584;
  double t4065;
  double t4068;
  double t4074;
  double t4076;
  double t2446;
  double t2750;
  double t2762;
  double t3280;
  double t3324;
  double t3329;
  double t4303;
  double t4126;
  double t4208;
  double t4461;
  double t5266;
  double t5521;
  double t5598;
  double t5605;
  double t5260;
  double t5648;
  double t5653;
  double t5658;
  double t5669;
  double t5676;
  double t5703;
  double t5726;
  double t4282;
  double t4767;
  double t4817;
  double t5993;
  double t6001;
  double t6005;
  double t6011;
  double t5839;
  double t5873;
  double t5875;
  double t5887;
  double t5920;
  double t5955;
  double t6025;
  double t6029;
  double t6033;
  double t6037;
  double t5600;
  double t5607;
  double t5624;
  double t1968;
  double t2829;
  double t2830;
  double t6300;
  double t8010;
  double t8444;
  double t8455;
  double t8616;
  double t3340;
  double t3341;
  double t3351;
  double t4025;
  double t4046;
  double t4052;
  double t3705;
  double t3708;
  double t3709;
  double t8845;
  double t8847;
  double t8848;
  double t8703;
  double t8706;
  double t8711;
  double t8866;
  double t8867;
  double t8869;
  double t7961;
  double t7999;
  double t8001;
  double t4100;
  double t4101;
  double t4113;
  double t5183;
  double t5640;
  double t5645;
  double t8979;
  double t8982;
  double t8992;
  double t5776;
  double t5781;
  double t5787;
  double t6016;
  double t6021;
  double t6024;
  double t5979;
  double t5982;
  double t5983;
  double t9093;
  double t9095;
  double t9097;
  double t9049;
  double t9051;
  double t9058;
  double t9123;
  double t9124;
  double t9127;
  double t8947;
  double t8954;
  double t8957;
  double t6064;
  double t6068;
  double t6092;
  double t8872;
  double t8873;
  double t8877;
  double t8214;
  double t8428;
  double t8441;
  double t9179;
  double t9181;
  double t9182;
  double t8617;
  double t8623;
  double t8646;
  double t8660;
  double t8688;
  double t8693;
  double t8819;
  double t8829;
  double t8830;
  double t9217;
  double t9218;
  double t9223;
  double t8713;
  double t8715;
  double t8813;
  double t8855;
  double t8857;
  double t8858;
  double t9228;
  double t9232;
  double t9238;
  double t8883;
  double t8886;
  double t8889;
  double t8928;
  double t8931;
  double t8933;
  double t9128;
  double t9139;
  double t9140;
  double t8965;
  double t8967;
  double t8973;
  double t9274;
  double t9275;
  double t9281;
  double t8993;
  double t9002;
  double t9004;
  double t9011;
  double t9024;
  double t9025;
  double t9072;
  double t9080;
  double t9082;
  double t9377;
  double t9378;
  double t9388;
  double t9060;
  double t9061;
  double t9066;
  double t9113;
  double t9115;
  double t9117;
  double t9393;
  double t9398;
  double t9403;
  double t9148;
  double t9149;
  double t9156;
  double t9163;
  double t9166;
  double t9167;
  double t3431;
  double t3684;
  double t3704;
  double t9438;
  double t9440;
  double t9445;
  double t9446;
  double t9447;
  double t9472;
  double t9476;
  double t9499;
  double t9500;
  double t9501;
  double t9503;
  double t9512;
  double t9519;
  double t9521;
  double t9432;
  double t9449;
  double t9451;
  double t9463;
  double t9554;
  double t9555;
  double t9557;
  double t9559;
  double t9560;
  double t9561;
  double t9562;
  double t9563;
  double t9567;
  double t9575;
  double t9577;
  double t9578;
  double t9465;
  double t9568;
  double t9569;
  double t9603;
  double t9604;
  double t9605;
  double t9588;
  double t9590;
  double t9592;
  double t9597;
  double t9598;
  double t9614;
  double t9630;
  double t10053;
  double t10069;
  double t10076;
  double t9800;
  double t9836;
  double t9858;
  double t9893;
  double t9982;
  double t10014;
  double t10126;
  double t10378;
  double t10388;
  double t10399;
  double t10417;
  double t10424;
  double t10433;
  double t10461;
  double t10479;
  double t10143;
  double t10190;
  double t10210;
  double t10519;
  double t10528;
  double t10530;
  double t10271;
  double t10277;
  double t10292;
  double t10345;
  double t10751;
  double t10760;
  double t10761;
  double t10768;
  double t10796;
  double t10822;
  double t10918;
  double t4080;
  double t4084;
  double t4089;
  double t10715;
  double t10723;
  double t10730;
  double t10781;
  double t10928;
  double t10936;
  double t10979;
  double t10994;
  double t11006;
  double t11170;
  double t11213;
  double t11235;
  double t11379;
  double t11383;
  double t11412;
  double t11417;
  double t11424;
  double t4092;
  double t4116;
  double t4118;
  double t11308;
  double t11313;
  double t11365;
  double t11408;
  double t11425;
  double t11429;
  double t11436;
  double t11440;
  double t11455;
  double t11132;
  double t11134;
  double t11139;
  double t11549;
  double t11559;
  double t11615;
  double t11625;
  double t11690;
  double t11714;
  double t11718;
  double t11747;
  double t11763;
  double t11778;
  double t11797;
  double t11808;
  double t11810;
  double t3330;
  double t3352;
  double t3426;
  double t11919;
  double t11921;
  double t11922;
  double t12010;
  double t12014;
  double t12020;
  double t12022;
  double t12057;
  double t12067;
  double t12094;
  double t12102;
  double t12108;
  double t12116;
  double t12122;
  double t12123;
  double t12135;
  double t5878;
  double t5971;
  double t5975;
  double t12610;
  double t12624;
  double t12632;
  double t12639;
  double t12651;
  double t12931;
  double t13006;
  double t13054;
  double t13095;
  double t13170;
  double t13174;
  double t13176;
  double t13182;
  double t12586;
  double t12652;
  double t12692;
  double t12837;
  double t13050;
  double t13190;
  double t13236;
  double t13242;
  double t13283;
  double t13398;
  double t13410;
  double t13414;
  double t13421;
  double t13437;
  double t13464;
  double t13500;
  double t13504;
  double t13505;
  double t12915;
  double t13470;
  double t13479;
  double t13552;
  double t13553;
  double t13559;
  double t13528;
  double t13533;
  double t13534;
  double t13538;
  double t13540;
  double t13561;
  double t13572;
  double t13735;
  double t13747;
  double t13782;
  double t13649;
  double t13650;
  double t13663;
  double t13673;
  double t13708;
  double t13846;
  double t14113;
  double t14116;
  double t14138;
  double t14143;
  double t14153;
  double t14157;
  double t14169;
  double t13899;
  double t13912;
  double t13966;
  double t14179;
  double t14180;
  double t14181;
  double t14021;
  double t14052;
  double t14074;
  double t14202;
  double t14204;
  double t14206;
  double t14207;
  double t14217;
  double t14218;
  double t14222;
  double t14223;
  double t14225;
  double t6041;
  double t6047;
  double t6052;
  double t14208;
  double t14209;
  double t14214;
  double t14219;
  double t14227;
  double t14228;
  double t14231;
  double t14232;
  double t14233;
  double t14294;
  double t14295;
  double t14303;
  double t14305;
  double t14306;
  double t14308;
  double t14309;
  double t14310;
  double t6055;
  double t6152;
  double t6184;
  double t14296;
  double t14298;
  double t14300;
  double t14307;
  double t14312;
  double t14313;
  double t14315;
  double t14316;
  double t14317;
  double t14282;
  double t14286;
  double t14288;
  double t14347;
  double t14348;
  double t14349;
  double t14351;
  double t14390;
  double t14423;
  double t14462;
  double t14474;
  double t14591;
  double t14603;
  double t14607;
  double t14669;
  double t14681;
  double t5670;
  double t5808;
  double t5824;
  double t14916;
  double t14920;
  double t14921;
  double t15127;
  double t15132;
  double t15137;
  double t15140;
  double t15191;
  double t15196;
  double t15202;
  double t15216;
  double t15217;
  double t15222;
  double t15237;
  double t15250;
  double t15311;
  double t10163;
  double t10275;
  double t15486;
  double t15488;
  double t15489;
  double t10542;
  double t15526;
  double t10640;
  double t15559;
  double t15617;
  double t15641;
  double t15642;
  double t15645;
  double t10734;
  double t11088;
  double t11371;
  double t11511;
  double t11522;
  double t11716;
  double t11768;
  double t15723;
  double t15769;
  double t11827;
  double t16229;
  double t16244;
  double t16248;
  double t16295;
  double t16311;
  double t11855;
  double t16325;
  double t16345;
  double t16350;
  double t11883;
  double t11887;
  double t11903;
  double t11936;
  double t11957;
  double t11972;
  double t12100;
  double t12118;
  double t16428;
  double t16443;
  double t16580;
  double t16596;
  double t16616;
  double t12144;
  double t16619;
  double t12155;
  double t16626;
  double t16634;
  double t16635;
  double t12211;
  double t12407;
  double t12439;
  double t12529;
  double t12563;
  double t13886;
  double t13990;
  double t16809;
  double t16815;
  double t16818;
  double t14182;
  double t16822;
  double t14193;
  double t16848;
  double t16907;
  double t16912;
  double t16913;
  double t16914;
  double t14215;
  double t14279;
  double t14301;
  double t14323;
  double t14324;
  double t14432;
  double t14592;
  double t16952;
  double t16960;
  double t14700;
  double t17133;
  double t17142;
  double t17143;
  double t17144;
  double t17145;
  double t14725;
  double t17150;
  double t17154;
  double t17158;
  double t14809;
  double t14865;
  double t14915;
  double t14950;
  double t15018;
  double t15030;
  double t15205;
  double t15224;
  double t17193;
  double t17198;
  double t17323;
  double t17325;
  double t17326;
  double t15409;
  double t17329;
  double t15420;
  double t17344;
  double t17354;
  double t17357;
  double t15433;
  double t15449;
  double t15451;
  double t15461;
  double t15473;
  double t17672;
  double t17675;
  double t17677;
  double t16394;
  double t16399;
  double t17843;
  double t17868;
  double t16429;
  double t17774;
  double t17820;
  double t17821;
  double t16486;
  double t16540;
  double t16541;
  double t17913;
  double t17914;
  double t17921;
  double t18226;
  double t18297;
  double t18303;
  double t18342;
  double t18344;
  double t18345;
  double t17177;
  double t17179;
  double t18378;
  double t18381;
  double t17194;
  double t18429;
  double t18430;
  double t18432;
  double t17263;
  double t18451;
  double t18452;
  double t18453;
  double t17276;
  double t17291;
  double t18504;
  double t18505;
  double t18506;
  double t18509;
  double t18510;
  double t18515;
  double t18516;
  double t18577;
  double t18583;
  double t18585;
  double t18645;
  double t18651;
  double t18653;
  double t18666;
  double t18667;
  double t18681;
  double t18683;
  t1736 = Cos(var1[7]);
  t1719 = Cos(var1[8]);
  t1723 = Sin(var1[7]);
  t1737 = Sin(var1[8]);
  t2166 = t1736*t1719;
  t2409 = t1723*t1737;
  t2413 = t2166 + t2409;
  t44 = Cos(var1[4]);
  t2154 = Cos(var1[6]);
  t2603 = Sin(var1[5]);
  t2120 = Cos(var1[5]);
  t2717 = Sin(var1[6]);
  t2883 = -1.*t2154*t2603*t2413;
  t2913 = -1.*t2120*t2717*t2413;
  t3159 = t2883 + t2913;
  t3266 = t44*t3159;
  t2116 = Sin(var1[4]);
  t1734 = -1.*t1719*t1723;
  t1943 = t1736*t1737;
  t1966 = t1734 + t1943;
  t3447 = t1719*t1723;
  t3449 = -1.*t1736*t1737;
  t3470 = t3447 + t3449;
  t3871 = -1.*t2120*t2154;
  t3996 = t2603*t2717;
  t3999 = t3871 + t3996;
  t4007 = t44*t3999;
  t3479 = t2120*t2154*t3470;
  t3550 = -1.*t2603*t2717*t3470;
  t3584 = t3479 + t3550;
  t4065 = -1.*t2154*t2603*t3470;
  t4068 = -1.*t2120*t2717*t3470;
  t4074 = t4065 + t4068;
  t4076 = t44*t4074;
  t2446 = t2120*t2154*t2413;
  t2750 = -1.*t2603*t2717*t2413;
  t2762 = t2446 + t2750;
  t3280 = -1.*t1736*t1719;
  t3324 = -1.*t1723*t1737;
  t3329 = t3280 + t3324;
  t4303 = Cos(var1[10]);
  t4126 = Cos(var1[11]);
  t4208 = Sin(var1[10]);
  t4461 = Sin(var1[11]);
  t5266 = -1.*t4303*t4126;
  t5521 = -1.*t4208*t4461;
  t5598 = t5266 + t5521;
  t5605 = Sin(var1[9]);
  t5260 = Cos(var1[9]);
  t5648 = -1.*t2120*t5605*t5598;
  t5653 = -1.*t5260*t5598*t2603;
  t5658 = t5648 + t5653;
  t5669 = t44*t5658;
  t5676 = t4126*t4208;
  t5703 = -1.*t4303*t4461;
  t5726 = t5676 + t5703;
  t4282 = -1.*t4126*t4208;
  t4767 = t4303*t4461;
  t4817 = t4282 + t4767;
  t5993 = t5260*t2120;
  t6001 = -1.*t5605*t2603;
  t6005 = t5993 + t6001;
  t6011 = t44*t6005;
  t5839 = t4303*t4126;
  t5873 = t4208*t4461;
  t5875 = t5839 + t5873;
  t5887 = t5260*t2120*t4817;
  t5920 = -1.*t5605*t4817*t2603;
  t5955 = t5887 + t5920;
  t6025 = -1.*t2120*t5605*t4817;
  t6029 = -1.*t5260*t4817*t2603;
  t6033 = t6025 + t6029;
  t6037 = t44*t6033;
  t5600 = t5260*t2120*t5598;
  t5607 = -1.*t5605*t5598*t2603;
  t5624 = t5600 + t5607;
  t1968 = t44*t1966;
  t2829 = -1.*t2116*t2762;
  t2830 = t1968 + t2829;
  t6300 = Sin(var1[3]);
  t8010 = Cos(var1[3]);
  t8444 = t6300*t2116*t3159;
  t8455 = t8010*t2762;
  t8616 = t8444 + t8455;
  t3340 = t2120*t2154*t1966;
  t3341 = -1.*t2603*t2717*t1966;
  t3351 = t3340 + t3341;
  t4025 = t44*t2413;
  t4046 = -1.*t2116*t3584;
  t4052 = t4025 + t4046;
  t3705 = -1.*t2154*t2603;
  t3708 = -1.*t2120*t2717;
  t3709 = t3705 + t3708;
  t8845 = t8010*t3709;
  t8847 = t6300*t2116*t3999;
  t8848 = t8845 + t8847;
  t8703 = t2154*t2603*t3470;
  t8706 = t2120*t2717*t3470;
  t8711 = t8703 + t8706;
  t8866 = t6300*t2116*t4074;
  t8867 = t8010*t3584;
  t8869 = t8866 + t8867;
  t7961 = t2154*t2603*t2413;
  t7999 = t2120*t2717*t2413;
  t8001 = t7961 + t7999;
  t4100 = t2120*t2154*t3329;
  t4101 = -1.*t2603*t2717*t3329;
  t4113 = t4100 + t4101;
  t5183 = t44*t4817;
  t5640 = -1.*t2116*t5624;
  t5645 = t5183 + t5640;
  t8979 = t6300*t2116*t5658;
  t8982 = t8010*t5624;
  t8992 = t8979 + t8982;
  t5776 = t5260*t2120*t5726;
  t5781 = -1.*t5605*t5726*t2603;
  t5787 = t5776 + t5781;
  t6016 = t44*t5875;
  t6021 = -1.*t2116*t5955;
  t6024 = t6016 + t6021;
  t5979 = t2120*t5605;
  t5982 = t5260*t2603;
  t5983 = t5979 + t5982;
  t9093 = t8010*t5983;
  t9095 = t6300*t2116*t6005;
  t9097 = t9093 + t9095;
  t9049 = t2120*t5605*t4817;
  t9051 = t5260*t4817*t2603;
  t9058 = t9049 + t9051;
  t9123 = t6300*t2116*t6033;
  t9124 = t8010*t5955;
  t9127 = t9123 + t9124;
  t8947 = t2120*t5605*t5598;
  t8954 = t5260*t5598*t2603;
  t8957 = t8947 + t8954;
  t6064 = t5260*t2120*t5875;
  t6068 = -1.*t5605*t5875*t2603;
  t6092 = t6064 + t6068;
  t8872 = t8010*t8001;
  t8873 = -1.*t6300*t2830;
  t8877 = t8872 + t8873;
  t8214 = -1.*t2116*t1966;
  t8428 = -1.*t44*t2762;
  t8441 = t8214 + t8428;
  t9179 = -1.*t8010*t2116*t3159;
  t9181 = t6300*t2762;
  t9182 = t9179 + t9181;
  t8617 = t2154*t2603*t1966;
  t8623 = t2120*t2717*t1966;
  t8646 = t8617 + t8623;
  t8660 = t44*t3329;
  t8688 = -1.*t2116*t3351;
  t8693 = t8660 + t8688;
  t8819 = t2120*t2154;
  t8829 = -1.*t2603*t2717;
  t8830 = t8819 + t8829;
  t9217 = t6300*t3709;
  t9218 = -1.*t8010*t2116*t3999;
  t9223 = t9217 + t9218;
  t8713 = t8010*t8711;
  t8715 = -1.*t6300*t4052;
  t8813 = t8713 + t8715;
  t8855 = -1.*t2116*t2413;
  t8857 = -1.*t44*t3584;
  t8858 = t8855 + t8857;
  t9228 = -1.*t8010*t2116*t4074;
  t9232 = t6300*t3584;
  t9238 = t9228 + t9232;
  t8883 = t2154*t2603*t3329;
  t8886 = t2120*t2717*t3329;
  t8889 = t8883 + t8886;
  t8928 = t44*t3470;
  t8931 = -1.*t2116*t4113;
  t8933 = t8928 + t8931;
  t9128 = t8010*t8957;
  t9139 = -1.*t6300*t5645;
  t9140 = t9128 + t9139;
  t8965 = -1.*t4817*t2116;
  t8967 = -1.*t44*t5624;
  t8973 = t8965 + t8967;
  t9274 = -1.*t8010*t2116*t5658;
  t9275 = t6300*t5624;
  t9281 = t9274 + t9275;
  t8993 = t2120*t5605*t5726;
  t9002 = t5260*t5726*t2603;
  t9004 = t8993 + t9002;
  t9011 = t44*t5598;
  t9024 = -1.*t2116*t5787;
  t9025 = t9011 + t9024;
  t9072 = -1.*t5260*t2120;
  t9080 = t5605*t2603;
  t9082 = t9072 + t9080;
  t9377 = t6300*t5983;
  t9378 = -1.*t8010*t2116*t6005;
  t9388 = t9377 + t9378;
  t9060 = t8010*t9058;
  t9061 = -1.*t6300*t6024;
  t9066 = t9060 + t9061;
  t9113 = -1.*t5875*t2116;
  t9115 = -1.*t44*t5955;
  t9117 = t9113 + t9115;
  t9393 = -1.*t8010*t2116*t6033;
  t9398 = t6300*t5955;
  t9403 = t9393 + t9398;
  t9148 = t2120*t5605*t5875;
  t9149 = t5260*t5875*t2603;
  t9156 = t9148 + t9149;
  t9163 = t44*t5726;
  t9166 = -1.*t2116*t6092;
  t9167 = t9163 + t9166;
  t3431 = t2116*t2413;
  t3684 = t44*t3584;
  t3704 = t3431 + t3684;
  t9438 = -1.*t1719;
  t9440 = 1. + t9438;
  t9445 = 0.50321*t9440;
  t9446 = 0.19821*t1719;
  t9447 = t9445 + t9446;
  t9472 = -1.*t2154;
  t9476 = 1. + t9472;
  t9499 = 0.15121*t9476;
  t9500 = -1.*t1736;
  t9501 = 1. + t9500;
  t9503 = 0.28121*t9501;
  t9512 = t1736*t9447;
  t9519 = -0.305*t1723*t1737;
  t9521 = t9503 + t9512 + t9519;
  t9432 = 0.28121*t1723;
  t9449 = -1.*t9447*t1723;
  t9451 = -0.305*t1736*t1737;
  t9463 = t9432 + t9449 + t9451;
  t9554 = t2154*t9521;
  t9555 = t9499 + t9554;
  t9557 = t2120*t9555;
  t9559 = 0.15121*t2154;
  t9560 = -0.15121*t2717;
  t9561 = t2717*t9521;
  t9562 = t9499 + t9559 + t9560 + t9561;
  t9563 = -1.*t2603*t9562;
  t9567 = t9557 + t9563;
  t9575 = t2116*t9463;
  t9577 = t44*t9567;
  t9578 = t9575 + t9577;
  t9465 = -1.*t2116*t9463;
  t9568 = -1.*t44*t9567;
  t9569 = t9465 + t9568;
  t9603 = t44*t9463;
  t9604 = -1.*t2116*t9567;
  t9605 = t9603 + t9604;
  t9588 = t2603*t9555;
  t9590 = t2120*t9562;
  t9592 = t9588 + t9590;
  t9597 = -1.*t8830*t9592;
  t9598 = -1.*t44*t3709*t9578;
  t9614 = t2116*t3709*t9605;
  t9630 = t9597 + t9598 + t9614;
  t10053 = -1.*t2603*t9555;
  t10069 = -1.*t2120*t9562;
  t10076 = t10053 + t10069;
  t9800 = t8711*t9592;
  t9836 = t3704*t9578;
  t9858 = t4052*t9605;
  t9893 = t9800 + t9836 + t9858;
  t9982 = t44*t4074*t9630;
  t10014 = Power(t44,2);
  t10126 = Power(t2116,2);
  t10378 = -0.15121*t2154;
  t10388 = t10378 + t9554;
  t10399 = -1.*t2603*t10388;
  t10417 = 0.15121*t2717;
  t10424 = -1.*t2717*t9521;
  t10433 = t10417 + t10424;
  t10461 = t2120*t10433;
  t10479 = t10399 + t10461;
  t10143 = -1.*t3709*t9592;
  t10190 = -1.*t44*t3999*t9578;
  t10210 = t2116*t3999*t9605;
  t10519 = t2120*t10388;
  t10528 = t2603*t10433;
  t10530 = t10519 + t10528;
  t10271 = t3584*t9592;
  t10277 = t44*t4074*t9578;
  t10292 = -1.*t2116*t4074*t9605;
  t10345 = t44*t3999*t9893;
  t10751 = 0.28121*t1736;
  t10760 = -1.*t1736*t9447;
  t10761 = 0.305*t1723*t1737;
  t10768 = t10751 + t10760 + t10761;
  t10796 = t2120*t2154*t9463;
  t10822 = -1.*t2603*t2717*t9463;
  t10918 = t10796 + t10822;
  t4080 = t2116*t1966;
  t4084 = t44*t2762;
  t4089 = t4080 + t4084;
  t10715 = t2154*t2603*t9463;
  t10723 = t2120*t2717*t9463;
  t10730 = t10715 + t10723;
  t10781 = t2116*t10768;
  t10928 = t44*t10918;
  t10936 = t10781 + t10928;
  t10979 = t44*t10768;
  t10994 = -1.*t2116*t10918;
  t11006 = t10979 + t10994;
  t11170 = -0.305*t1719*t1723;
  t11213 = 0.305*t1736*t1737;
  t11235 = t11170 + t11213;
  t11379 = -0.305*t1736*t1719;
  t11383 = t11379 + t9519;
  t11412 = t2120*t2154*t11235;
  t11417 = -1.*t2603*t2717*t11235;
  t11424 = t11412 + t11417;
  t4092 = t2116*t3470;
  t4116 = t44*t4113;
  t4118 = t4092 + t4116;
  t11308 = t2154*t2603*t11235;
  t11313 = t2120*t2717*t11235;
  t11365 = t11308 + t11313;
  t11408 = t2116*t11383;
  t11425 = t44*t11424;
  t11429 = t11408 + t11425;
  t11436 = t44*t11383;
  t11440 = -1.*t2116*t11424;
  t11455 = t11436 + t11440;
  t11132 = t8001*t9592;
  t11134 = t4089*t9578;
  t11139 = t2830*t9605;
  t11549 = -1.*t8711*t9592;
  t11559 = -1.*t3704*t9578;
  t11615 = -1.*t4052*t9605;
  t11625 = t11549 + t11559 + t11615;
  t11690 = t11132 + t11134 + t11139;
  t11714 = -1.*t3584*t9592;
  t11718 = -1.*t44*t4074*t9578;
  t11747 = t2116*t4074*t9605;
  t11763 = t2762*t9592;
  t11778 = t44*t3159*t9578;
  t11797 = -1.*t2116*t3159*t9605;
  t11808 = t44*t3159*t11625;
  t11810 = t44*t4074*t11690;
  t3330 = t2116*t3329;
  t3352 = t44*t3351;
  t3426 = t3330 + t3352;
  t11919 = -1.*t8001*t9592;
  t11921 = -1.*t4089*t9578;
  t11922 = -1.*t2830*t9605;
  t12010 = t8830*t9592;
  t12014 = t44*t3709*t9578;
  t12020 = -1.*t2116*t3709*t9605;
  t12022 = t12010 + t12014 + t12020;
  t12057 = t11919 + t11921 + t11922;
  t12067 = t44*t3159*t12022;
  t12094 = t3709*t9592;
  t12102 = t44*t3999*t9578;
  t12108 = -1.*t2116*t3999*t9605;
  t12116 = -1.*t2762*t9592;
  t12122 = -1.*t44*t3159*t9578;
  t12123 = t2116*t3159*t9605;
  t12135 = t44*t3999*t12057;
  t5878 = t5875*t2116;
  t5971 = t44*t5955;
  t5975 = t5878 + t5971;
  t12610 = -1.*t4126;
  t12624 = 1. + t12610;
  t12632 = -0.50321*t12624;
  t12639 = -0.19821*t4126;
  t12651 = t12632 + t12639;
  t12931 = -1.*t5260;
  t13006 = 1. + t12931;
  t13054 = -1.*t4303;
  t13095 = 1. + t13054;
  t13170 = -0.28121*t13095;
  t13174 = t4303*t12651;
  t13176 = 0.305*t4208*t4461;
  t13182 = t13170 + t13174 + t13176;
  t12586 = 0.28121*t4208;
  t12652 = t12651*t4208;
  t12692 = -0.305*t4303*t4461;
  t12837 = t12586 + t12652 + t12692;
  t13050 = -0.15121*t13006;
  t13190 = t5260*t13182;
  t13236 = t13050 + t13190;
  t13242 = t2120*t13236;
  t13283 = 0.15121*t13006;
  t13398 = 0.15121*t5260;
  t13410 = 0.15121*t5605;
  t13414 = t5605*t13182;
  t13421 = t13283 + t13398 + t13410 + t13414;
  t13437 = -1.*t13421*t2603;
  t13464 = t13242 + t13437;
  t13500 = t12837*t2116;
  t13504 = t44*t13464;
  t13505 = t13500 + t13504;
  t12915 = -1.*t12837*t2116;
  t13470 = -1.*t44*t13464;
  t13479 = t12915 + t13470;
  t13552 = t44*t12837;
  t13553 = -1.*t2116*t13464;
  t13559 = t13552 + t13553;
  t13528 = t2120*t13421;
  t13533 = t13236*t2603;
  t13534 = t13528 + t13533;
  t13538 = -1.*t9082*t13534;
  t13540 = -1.*t44*t5983*t13505;
  t13561 = t2116*t5983*t13559;
  t13572 = t13538 + t13540 + t13561;
  t13735 = -1.*t2120*t13421;
  t13747 = -1.*t13236*t2603;
  t13782 = t13735 + t13747;
  t13649 = t9058*t13534;
  t13650 = t5975*t13505;
  t13663 = t6024*t13559;
  t13673 = t13649 + t13650 + t13663;
  t13708 = t44*t6033*t13572;
  t13846 = -1.*t5983*t13534;
  t14113 = -0.15121*t5605;
  t14116 = -1.*t5605*t13182;
  t14138 = t14113 + t14116;
  t14143 = t2120*t14138;
  t14153 = t13398 + t13190;
  t14157 = -1.*t14153*t2603;
  t14169 = t14143 + t14157;
  t13899 = -1.*t44*t6005*t13505;
  t13912 = t2116*t6005*t13559;
  t13966 = t5955*t13534;
  t14179 = t2120*t14153;
  t14180 = t14138*t2603;
  t14181 = t14179 + t14180;
  t14021 = t44*t6033*t13505;
  t14052 = -1.*t2116*t6033*t13559;
  t14074 = t44*t6005*t13673;
  t14202 = -0.28121*t4208;
  t14204 = -1.*t12651*t4208;
  t14206 = 0.305*t4303*t4461;
  t14207 = t14202 + t14204 + t14206;
  t14217 = 0.28121*t4303;
  t14218 = t14217 + t13174 + t13176;
  t14222 = t5260*t2120*t14207;
  t14223 = -1.*t5605*t14207*t2603;
  t14225 = t14222 + t14223;
  t6041 = t4817*t2116;
  t6047 = t44*t5624;
  t6052 = t6041 + t6047;
  t14208 = t2120*t5605*t14207;
  t14209 = t5260*t14207*t2603;
  t14214 = t14208 + t14209;
  t14219 = t14218*t2116;
  t14227 = t44*t14225;
  t14228 = t14219 + t14227;
  t14231 = t44*t14218;
  t14232 = -1.*t2116*t14225;
  t14233 = t14231 + t14232;
  t14294 = 0.305*t4126*t4208;
  t14295 = t14294 + t12692;
  t14303 = -0.305*t4303*t4126;
  t14305 = -0.305*t4208*t4461;
  t14306 = t14303 + t14305;
  t14308 = t5260*t2120*t14295;
  t14309 = -1.*t5605*t14295*t2603;
  t14310 = t14308 + t14309;
  t6055 = t5726*t2116;
  t6152 = t44*t6092;
  t6184 = t6055 + t6152;
  t14296 = t2120*t5605*t14295;
  t14298 = t5260*t14295*t2603;
  t14300 = t14296 + t14298;
  t14307 = t14306*t2116;
  t14312 = t44*t14310;
  t14313 = t14307 + t14312;
  t14315 = t44*t14306;
  t14316 = -1.*t2116*t14310;
  t14317 = t14315 + t14316;
  t14282 = t8957*t13534;
  t14286 = t6052*t13505;
  t14288 = t5645*t13559;
  t14347 = -1.*t9058*t13534;
  t14348 = -1.*t5975*t13505;
  t14349 = -1.*t6024*t13559;
  t14351 = t14347 + t14348 + t14349;
  t14390 = t14282 + t14286 + t14288;
  t14423 = -1.*t5955*t13534;
  t14462 = -1.*t44*t6033*t13505;
  t14474 = t2116*t6033*t13559;
  t14591 = t5624*t13534;
  t14603 = t44*t5658*t13505;
  t14607 = -1.*t2116*t5658*t13559;
  t14669 = t44*t5658*t14351;
  t14681 = t44*t6033*t14390;
  t5670 = t5598*t2116;
  t5808 = t44*t5787;
  t5824 = t5670 + t5808;
  t14916 = -1.*t8957*t13534;
  t14920 = -1.*t6052*t13505;
  t14921 = -1.*t5645*t13559;
  t15127 = t9082*t13534;
  t15132 = t44*t5983*t13505;
  t15137 = -1.*t2116*t5983*t13559;
  t15140 = t15127 + t15132 + t15137;
  t15191 = t14916 + t14920 + t14921;
  t15196 = t44*t5658*t15140;
  t15202 = t5983*t13534;
  t15216 = t44*t6005*t13505;
  t15217 = -1.*t2116*t6005*t13559;
  t15222 = -1.*t5624*t13534;
  t15237 = -1.*t44*t5658*t13505;
  t15250 = t2116*t5658*t13559;
  t15311 = t44*t6005*t15191;
  t10163 = -1.*t8830*t9567;
  t10275 = t8711*t9567;
  t15486 = -1.*t3709*t9567;
  t15488 = t9597 + t15486;
  t15489 = t3584*t15488;
  t10542 = -1.*t8830*t10530;
  t15526 = -1.*t3999*t9567;
  t10640 = t8711*t10530;
  t15559 = t4074*t9567;
  t15617 = t9463*t2413;
  t15641 = t3584*t9567;
  t15642 = t15617 + t9800 + t15641;
  t15645 = t3709*t15642;
  t10734 = -1.*t8830*t10730;
  t11088 = t8711*t10730;
  t11371 = -1.*t8830*t11365;
  t11511 = t8711*t11365;
  t11522 = t8889*t9592;
  t11716 = -1.*t8711*t9567;
  t11768 = t8001*t9567;
  t15723 = t9463*t1966;
  t15769 = t2762*t9567;
  t11827 = -1.*t8711*t10530;
  t16229 = -1.*t4074*t9567;
  t16244 = -1.*t9463*t2413;
  t16248 = -1.*t3584*t9567;
  t16295 = t16244 + t11549 + t16248;
  t16311 = t2762*t16295;
  t11855 = t8001*t10530;
  t16325 = t3159*t9567;
  t16345 = t15723 + t11132 + t15769;
  t16350 = t3584*t16345;
  t11883 = t10730*t8001;
  t11887 = t8646*t9592;
  t11903 = -1.*t8711*t10730;
  t11936 = t11365*t8001;
  t11957 = -1.*t8711*t11365;
  t11972 = -1.*t8889*t9592;
  t12100 = t8830*t9567;
  t12118 = -1.*t8001*t9567;
  t16428 = -1.*t9463*t1966;
  t16443 = -1.*t2762*t9567;
  t16580 = t3709*t9567;
  t16596 = t12010 + t16580;
  t16616 = t2762*t16596;
  t12144 = t8830*t10530;
  t16619 = t3999*t9567;
  t12155 = -1.*t8001*t10530;
  t16626 = -1.*t3159*t9567;
  t16634 = t16428 + t11919 + t16443;
  t16635 = t3709*t16634;
  t12211 = t8830*t10730;
  t12407 = -1.*t10730*t8001;
  t12439 = -1.*t8646*t9592;
  t12529 = t8830*t11365;
  t12563 = -1.*t11365*t8001;
  t13886 = -1.*t9082*t13464;
  t13990 = t9058*t13464;
  t16809 = -1.*t5983*t13464;
  t16815 = t13538 + t16809;
  t16818 = t5955*t16815;
  t14182 = -1.*t9082*t14181;
  t16822 = -1.*t6005*t13464;
  t14193 = t9058*t14181;
  t16848 = t6033*t13464;
  t16907 = t12837*t5875;
  t16912 = t5955*t13464;
  t16913 = t16907 + t13649 + t16912;
  t16914 = t5983*t16913;
  t14215 = -1.*t9082*t14214;
  t14279 = t14214*t9058;
  t14301 = -1.*t9082*t14300;
  t14323 = t14300*t9058;
  t14324 = t9156*t13534;
  t14432 = -1.*t9058*t13464;
  t14592 = t8957*t13464;
  t16952 = t12837*t4817;
  t16960 = t5624*t13464;
  t14700 = -1.*t9058*t14181;
  t17133 = -1.*t6033*t13464;
  t17142 = -1.*t12837*t5875;
  t17143 = -1.*t5955*t13464;
  t17144 = t17142 + t14347 + t17143;
  t17145 = t5624*t17144;
  t14725 = t8957*t14181;
  t17150 = t5658*t13464;
  t17154 = t16952 + t14282 + t16960;
  t17158 = t5955*t17154;
  t14809 = t14214*t8957;
  t14865 = t9004*t13534;
  t14915 = -1.*t14214*t9058;
  t14950 = t14300*t8957;
  t15018 = -1.*t14300*t9058;
  t15030 = -1.*t9156*t13534;
  t15205 = t9082*t13464;
  t15224 = -1.*t8957*t13464;
  t17193 = -1.*t12837*t4817;
  t17198 = -1.*t5624*t13464;
  t17323 = t5983*t13464;
  t17325 = t15127 + t17323;
  t17326 = t5624*t17325;
  t15409 = t9082*t14181;
  t17329 = t6005*t13464;
  t15420 = -1.*t8957*t14181;
  t17344 = -1.*t5658*t13464;
  t17354 = t17193 + t14916 + t17198;
  t17357 = t5983*t17354;
  t15433 = t9082*t14214;
  t15449 = -1.*t14214*t8957;
  t15451 = -1.*t9004*t13534;
  t15461 = t9082*t14300;
  t15473 = -1.*t14300*t8957;
  t17672 = t2717*t9555;
  t17675 = -1.*t2154*t9562;
  t17677 = t17672 + t17675;
  t16394 = t9463*t3329;
  t16399 = t1966*t10768;
  t17843 = Power(t2154,2);
  t17868 = Power(t2717,2);
  t16429 = -1.*t10768*t2413;
  t17774 = -1.*t2154*t3470*t9555;
  t17820 = -1.*t2717*t3470*t9562;
  t17821 = t16244 + t17774 + t17820;
  t16486 = t1966*t11383;
  t16540 = -1.*t3470*t9463;
  t16541 = -1.*t11383*t2413;
  t17913 = t2154*t2413*t9555;
  t17914 = t2717*t2413*t9562;
  t17921 = t15723 + t17913 + t17914;
  t18226 = -1.*t2717*t9555;
  t18297 = t2154*t9562;
  t18303 = t18226 + t18297;
  t18342 = -1.*t5605*t13236;
  t18344 = t5260*t13421;
  t18345 = t18342 + t18344;
  t17177 = t12837*t5598;
  t17179 = t4817*t14218;
  t18378 = Power(t5260,2);
  t18381 = Power(t5605,2);
  t17194 = -1.*t14218*t5875;
  t18429 = -1.*t5260*t4817*t13236;
  t18430 = -1.*t5605*t4817*t13421;
  t18432 = t17142 + t18429 + t18430;
  t17263 = t4817*t14306;
  t18451 = t5260*t5598*t13236;
  t18452 = t5605*t5598*t13421;
  t18453 = t16952 + t18451 + t18452;
  t17276 = -1.*t5726*t12837;
  t17291 = -1.*t14306*t5875;
  t18504 = t5605*t13236;
  t18505 = -1.*t5260*t13421;
  t18506 = t18504 + t18505;
  t18509 = -1.*t3470*t9521;
  t18510 = t18509 + t16244;
  t18515 = t9521*t2413;
  t18516 = t15723 + t18515;
  t18577 = 0.15121*t3329;
  t18583 = 0.15121*t2413;
  t18585 = t18577 + t18583;
  t18645 = 0.15121*t5726;
  t18651 = 0.15121*t4817;
  t18653 = t18645 + t18651;
  t18666 = t5598*t13182;
  t18667 = t16952 + t18666;
  t18681 = -1.*t4817*t13182;
  t18683 = t18681 + t17142;
  p_output1[0]=t2830;
  p_output1[1]=t3266;
  p_output1[2]=t3266;
  p_output1[3]=t3426;
  p_output1[4]=t3704;
  p_output1[5]=-1.*t2116*t3709;
  p_output1[6]=t4007;
  p_output1[7]=t4007;
  p_output1[8]=t4052;
  p_output1[9]=t4076;
  p_output1[10]=t4076;
  p_output1[11]=t4089;
  p_output1[12]=t4118;
  p_output1[13]=t5645;
  p_output1[14]=t5669;
  p_output1[15]=t5669;
  p_output1[16]=t5824;
  p_output1[17]=t5975;
  p_output1[18]=-1.*t2116*t5983;
  p_output1[19]=t6011;
  p_output1[20]=t6011;
  p_output1[21]=t6024;
  p_output1[22]=t6037;
  p_output1[23]=t6037;
  p_output1[24]=t6052;
  p_output1[25]=t6184;
  p_output1[26]=-1.*t6300*t8001 - 1.*t2830*t8010;
  p_output1[27]=-1.*t6300*t8441;
  p_output1[28]=t8616;
  p_output1[29]=t8616;
  p_output1[30]=t8010*t8646 - 1.*t6300*t8693;
  p_output1[31]=t8813;
  p_output1[32]=t2116*t3709*t8010 - 1.*t6300*t8830;
  p_output1[33]=t3709*t44*t6300;
  p_output1[34]=t8848;
  p_output1[35]=t8848;
  p_output1[36]=-1.*t4052*t8010 - 1.*t6300*t8711;
  p_output1[37]=-1.*t6300*t8858;
  p_output1[38]=t8869;
  p_output1[39]=t8869;
  p_output1[40]=t8877;
  p_output1[41]=t8010*t8889 - 1.*t6300*t8933;
  p_output1[42]=-1.*t5645*t8010 - 1.*t6300*t8957;
  p_output1[43]=-1.*t6300*t8973;
  p_output1[44]=t8992;
  p_output1[45]=t8992;
  p_output1[46]=t8010*t9004 - 1.*t6300*t9025;
  p_output1[47]=t9066;
  p_output1[48]=t2116*t5983*t8010 - 1.*t6300*t9082;
  p_output1[49]=t44*t5983*t6300;
  p_output1[50]=t9097;
  p_output1[51]=t9097;
  p_output1[52]=-1.*t6024*t8010 - 1.*t6300*t9058;
  p_output1[53]=-1.*t6300*t9117;
  p_output1[54]=t9127;
  p_output1[55]=t9127;
  p_output1[56]=t9140;
  p_output1[57]=t8010*t9156 - 1.*t6300*t9167;
  p_output1[58]=t8877;
  p_output1[59]=t8010*t8441;
  p_output1[60]=t9182;
  p_output1[61]=t9182;
  p_output1[62]=t6300*t8646 + t8010*t8693;
  p_output1[63]=t4052*t8010 + t6300*t8711;
  p_output1[64]=t2116*t3709*t6300 + t8010*t8830;
  p_output1[65]=-1.*t3709*t44*t8010;
  p_output1[66]=t9223;
  p_output1[67]=t9223;
  p_output1[68]=t8813;
  p_output1[69]=t8010*t8858;
  p_output1[70]=t9238;
  p_output1[71]=t9238;
  p_output1[72]=t6300*t8001 + t2830*t8010;
  p_output1[73]=t6300*t8889 + t8010*t8933;
  p_output1[74]=t9140;
  p_output1[75]=t8010*t8973;
  p_output1[76]=t9281;
  p_output1[77]=t9281;
  p_output1[78]=t6300*t9004 + t8010*t9025;
  p_output1[79]=t6024*t8010 + t6300*t9058;
  p_output1[80]=t2116*t5983*t6300 + t8010*t9082;
  p_output1[81]=-1.*t44*t5983*t8010;
  p_output1[82]=t9388;
  p_output1[83]=t9388;
  p_output1[84]=t9066;
  p_output1[85]=t8010*t9117;
  p_output1[86]=t9403;
  p_output1[87]=t9403;
  p_output1[88]=t5645*t8010 + t6300*t8957;
  p_output1[89]=t6300*t9156 + t8010*t9167;
  p_output1[90]=t3704*(t2116*t3709*t9569 + t2116*t3709*t9578) + t3709*t44*(t4052*t9569 + t4052*t9578 + t3704*t9605 + t8858*t9605) + t4052*t9630 - 1.*t2116*t3709*t9893;
  p_output1[91]=t10345 + t3704*(t10143 + t10163 + t10190 + t10210 - 1.*t10014*t10076*t3709 - 1.*t10076*t10126*t3709) + t3709*t44*(t10271 + t10275 + t10277 + t10292 - 1.*t10076*t2116*t4052 + t10076*t3704*t44) + t9982;
  p_output1[92]=t10345 + t3704*(t10143 + t10190 + t10210 + t10542 - 1.*t10014*t10479*t3709 - 1.*t10126*t10479*t3709) + t3709*t44*(t10271 + t10277 + t10292 + t10640 - 1.*t10479*t2116*t4052 + t10479*t3704*t44) + t9982;
  p_output1[93]=t3709*(t11088 + t11132 + t11134 + t11139 + t10936*t3704 + t11006*t4052)*t44 + t3704*(t10734 + t11006*t2116*t3709 - 1.*t10936*t3709*t44) + t4089*t9630;
  p_output1[94]=t3704*(t11371 + t11455*t2116*t3709 - 1.*t11429*t3709*t44) + t3709*t44*(t11511 + t11522 + t11429*t3704 + t11455*t4052 + t4118*t9578 + t8933*t9605) + t4118*t9630;
  p_output1[95]=t11625*t2830 + t11690*t4052 + t3704*(t2830*t9569 + t2830*t9578 + t4089*t9605 + t8441*t9605) + t4089*(-1.*t4052*t9569 - 1.*t4052*t9578 - 1.*t3704*t9605 - 1.*t8858*t9605);
  p_output1[96]=t11808 + t11810 + t4089*(t11714 + t11716 + t11718 + t11747 + t10076*t2116*t4052 - 1.*t10076*t3704*t44) + t3704*(t11763 + t11768 + t11778 + t11797 - 1.*t10076*t2116*t2830 + t10076*t4089*t44);
  p_output1[97]=t11808 + t11810 + t4089*(t11714 + t11718 + t11747 + t11827 + t10479*t2116*t4052 - 1.*t10479*t3704*t44) + t3704*(t11763 + t11778 + t11797 + t11855 - 1.*t10479*t2116*t2830 + t10479*t4089*t44);
  p_output1[98]=t11625*t3426 + t11690*t4089 + (t11903 + t11919 + t11921 + t11922 - 1.*t10936*t3704 - 1.*t11006*t4052)*t4089 + t3704*(t11883 + t11887 + t11006*t2830 + t10936*t4089 + t3426*t9578 + t8693*t9605);
  p_output1[99]=t11625*t3704 + t11690*t4118 + t4089*(t11957 + t11972 - 1.*t11429*t3704 - 1.*t11455*t4052 - 1.*t4118*t9578 - 1.*t8933*t9605) + t3704*(t11936 + t11455*t2830 + t11429*t4089 + t9800 + t9836 + t9858);
  p_output1[100]=t12022*t2830 - 1.*t12057*t2116*t3709 + t4089*(-1.*t2116*t3709*t9569 - 1.*t2116*t3709*t9578) + t3709*t44*(-1.*t2830*t9569 - 1.*t2830*t9578 - 1.*t4089*t9605 - 1.*t8441*t9605);
  p_output1[101]=t12067 + t12135 + (t12094 + t12100 + t12102 + t12108 + t10014*t10076*t3709 + t10076*t10126*t3709)*t4089 + t3709*t44*(t12116 + t12118 + t12122 + t12123 + t10076*t2116*t2830 - 1.*t10076*t4089*t44);
  p_output1[102]=t12067 + t12135 + (t12094 + t12102 + t12108 + t12144 + t10014*t10479*t3709 + t10126*t10479*t3709)*t4089 + t3709*t44*(t12116 + t12122 + t12123 + t12155 + t10479*t2116*t2830 - 1.*t10479*t4089*t44);
  p_output1[103]=t12022*t3426 + t4089*(t12211 - 1.*t11006*t2116*t3709 + t10936*t3709*t44) + t3709*t44*(t12407 + t12439 - 1.*t11006*t2830 - 1.*t10936*t4089 - 1.*t3426*t9578 - 1.*t8693*t9605);
  p_output1[104]=t12022*t3704 + t3709*(t11549 + t11559 + t11615 + t12563 - 1.*t11455*t2830 - 1.*t11429*t4089)*t44 + t4089*(t12529 - 1.*t11455*t2116*t3709 + t11429*t3709*t44);
  p_output1[105]=-1.*t13673*t2116*t5983 + t5975*(t13479*t2116*t5983 + t13505*t2116*t5983) + t13572*t6024 + t44*t5983*(t13559*t5975 + t13479*t6024 + t13505*t6024 + t13559*t9117);
  p_output1[106]=t13708 + t14074 + t5975*(t13846 + t13886 + t13899 + t13912 - 1.*t10014*t13782*t5983 - 1.*t10126*t13782*t5983) + t44*t5983*(t13966 + t13990 + t14021 + t14052 + t13782*t44*t5975 - 1.*t13782*t2116*t6024);
  p_output1[107]=t13708 + t14074 + t5975*(t13846 + t13899 + t13912 + t14182 - 1.*t10014*t14169*t5983 - 1.*t10126*t14169*t5983) + t44*t5983*(t13966 + t14021 + t14052 + t14193 + t14169*t44*t5975 - 1.*t14169*t2116*t6024);
  p_output1[108]=t5975*(t14215 + t14233*t2116*t5983 - 1.*t14228*t44*t5983) + t44*t5983*(t14279 + t14282 + t14286 + t14288 + t14228*t5975 + t14233*t6024) + t13572*t6052;
  p_output1[109]=t5975*(t14301 + t14317*t2116*t5983 - 1.*t14313*t44*t5983) + t13572*t6184 + t44*t5983*(t14323 + t14324 + t14313*t5975 + t14317*t6024 + t13505*t6184 + t13559*t9167);
  p_output1[110]=t14351*t5645 + t14390*t6024 + t5975*(t13479*t5645 + t13505*t5645 + t13559*t6052 + t13559*t8973) + t6052*(-1.*t13559*t5975 - 1.*t13479*t6024 - 1.*t13505*t6024 - 1.*t13559*t9117);
  p_output1[111]=t14669 + t14681 + (t14423 + t14432 + t14462 + t14474 - 1.*t13782*t44*t5975 + t13782*t2116*t6024)*t6052 + t5975*(t14591 + t14592 + t14603 + t14607 - 1.*t13782*t2116*t5645 + t13782*t44*t6052);
  p_output1[112]=t14669 + t14681 + (t14423 + t14462 + t14474 + t14700 - 1.*t14169*t44*t5975 + t14169*t2116*t6024)*t6052 + t5975*(t14591 + t14603 + t14607 + t14725 - 1.*t14169*t2116*t5645 + t14169*t44*t6052);
  p_output1[113]=t14351*t5824 + t14390*t6052 + (t14915 + t14916 + t14920 + t14921 - 1.*t14228*t5975 - 1.*t14233*t6024)*t6052 + t5975*(t14809 + t14865 + t14233*t5645 + t13505*t5824 + t14228*t6052 + t13559*t9025);
  p_output1[114]=t14351*t5975 + t5975*(t13649 + t13650 + t13663 + t14950 + t14317*t5645 + t14313*t6052) + t14390*t6184 + t6052*(t15018 + t15030 - 1.*t14313*t5975 - 1.*t14317*t6024 - 1.*t13505*t6184 - 1.*t13559*t9167);
  p_output1[115]=t15140*t5645 - 1.*t15191*t2116*t5983 + (-1.*t13479*t2116*t5983 - 1.*t13505*t2116*t5983)*t6052 + t44*t5983*(-1.*t13479*t5645 - 1.*t13505*t5645 - 1.*t13559*t6052 - 1.*t13559*t8973);
  p_output1[116]=t15196 + t15311 + (t15202 + t15205 + t15216 + t15217 + t10014*t13782*t5983 + t10126*t13782*t5983)*t6052 + t44*t5983*(t15222 + t15224 + t15237 + t15250 + t13782*t2116*t5645 - 1.*t13782*t44*t6052);
  p_output1[117]=t15196 + t15311 + (t15202 + t15216 + t15217 + t15409 + t10014*t14169*t5983 + t10126*t14169*t5983)*t6052 + t44*t5983*(t15222 + t15237 + t15250 + t15420 + t14169*t2116*t5645 - 1.*t14169*t44*t6052);
  p_output1[118]=t15140*t5824 + (t15433 - 1.*t14233*t2116*t5983 + t14228*t44*t5983)*t6052 + t44*t5983*(t15449 + t15451 - 1.*t14233*t5645 - 1.*t13505*t5824 - 1.*t14228*t6052 - 1.*t13559*t9025);
  p_output1[119]=t15140*t5975 + (t15461 - 1.*t14317*t2116*t5983 + t14313*t44*t5983)*t6052 + t44*t5983*(t14347 + t14348 + t14349 + t15473 - 1.*t14317*t5645 - 1.*t14313*t6052);
  p_output1[120]=t15489 + t15645 + (t10143 + t10163 + t15526 - 1.*t10076*t3709)*t8711 + (t10271 + t10275 + t15559 + t10076*t3584)*t8830;
  p_output1[121]=t15489 + t15645 + (t10143 + t10542 + t15526 - 1.*t10479*t3709)*t8711 + (t10271 + t10640 + t15559 + t10479*t3584)*t8830;
  p_output1[122]=t15488*t8001 + (t10734 - 1.*t10918*t3709)*t8711 + (t11088 + t11132 + t15723 + t15769 + t10768*t2413 + t10918*t3584)*t8830;
  p_output1[123]=(t11371 - 1.*t11424*t3709)*t8711 + t15488*t8889 + t8830*(t11511 + t11522 + t11383*t2413 + t11424*t3584 + t3470*t9463 + t4113*t9567);
  p_output1[124]=t16311 + t16350 + (t11714 + t11716 + t16229 - 1.*t10076*t3584)*t8001 + (t11763 + t11768 + t16325 + t10076*t2762)*t8711;
  p_output1[125]=t16311 + t16350 + (t11714 + t11827 + t16229 - 1.*t10479*t3584)*t8001 + (t11763 + t11855 + t16325 + t10479*t2762)*t8711;
  p_output1[126]=t16345*t8001 + (t11903 + t11919 + t16428 + t16429 + t16443 - 1.*t10918*t3584)*t8001 + t16295*t8646 + t8711*(t11883 + t11887 + t16394 + t16399 + t10918*t2762 + t3351*t9567);
  p_output1[127]=t16295*t8711 + t16345*t8889 + t8001*(t11957 + t11972 + t16540 + t16541 - 1.*t11424*t3584 - 1.*t4113*t9567) + t8711*(t11936 + t15617 + t15641 + t16486 + t11424*t2762 + t9800);
  p_output1[128]=t16616 + t16635 + (t12094 + t12100 + t16619 + t10076*t3709)*t8001 + (t12116 + t12118 + t16626 - 1.*t10076*t2762)*t8830;
  p_output1[129]=t16616 + t16635 + (t12094 + t12144 + t16619 + t10479*t3709)*t8001 + (t12116 + t12155 + t16626 - 1.*t10479*t2762)*t8830;
  p_output1[130]=(t12211 + t10918*t3709)*t8001 + t16596*t8646 + t8830*(t12407 + t12439 - 1.*t10768*t1966 - 1.*t10918*t2762 - 1.*t3329*t9463 - 1.*t3351*t9567);
  p_output1[131]=(t12529 + t11424*t3709)*t8001 + t16596*t8711 + (t11549 + t12563 + t16244 + t16248 - 1.*t11383*t1966 - 1.*t11424*t2762)*t8830;
  p_output1[132]=t16818 + t16914 + (t13846 + t13886 + t16822 - 1.*t13782*t5983)*t9058 + (t13966 + t13990 + t16848 + t13782*t5955)*t9082;
  p_output1[133]=t16818 + t16914 + (t13846 + t14182 + t16822 - 1.*t14169*t5983)*t9058 + (t13966 + t14193 + t16848 + t14169*t5955)*t9082;
  p_output1[134]=t16815*t8957 + (t14215 - 1.*t14225*t5983)*t9058 + (t14279 + t14282 + t16952 + t16960 + t14218*t5875 + t14225*t5955)*t9082;
  p_output1[135]=(t14301 - 1.*t14310*t5983)*t9058 + (t14323 + t14324 + t12837*t5726 + t14306*t5875 + t14310*t5955 + t13464*t6092)*t9082 + t16815*t9156;
  p_output1[136]=t17145 + t17158 + (t14423 + t14432 + t17133 - 1.*t13782*t5955)*t8957 + (t14591 + t14592 + t17150 + t13782*t5624)*t9058;
  p_output1[137]=t17145 + t17158 + (t14423 + t14700 + t17133 - 1.*t14169*t5955)*t8957 + (t14591 + t14725 + t17150 + t14169*t5624)*t9058;
  p_output1[138]=t17154*t8957 + (t14915 + t14916 + t17193 + t17194 + t17198 - 1.*t14225*t5955)*t8957 + t17144*t9004 + (t14809 + t14865 + t17177 + t17179 + t14225*t5624 + t13464*t5787)*t9058;
  p_output1[139]=(t15018 + t15030 + t17276 + t17291 - 1.*t14310*t5955 - 1.*t13464*t6092)*t8957 + t17144*t9058 + (t13649 + t14950 + t16907 + t16912 + t17263 + t14310*t5624)*t9058 + t17154*t9156;
  p_output1[140]=t17326 + t17357 + (t15202 + t15205 + t17329 + t13782*t5983)*t8957 + (t15222 + t15224 + t17344 - 1.*t13782*t5624)*t9082;
  p_output1[141]=t17326 + t17357 + (t15202 + t15409 + t17329 + t14169*t5983)*t8957 + (t15222 + t15420 + t17344 - 1.*t14169*t5624)*t9082;
  p_output1[142]=(t15433 + t14225*t5983)*t8957 + t17325*t9004 + (t15449 + t15451 - 1.*t14218*t4817 - 1.*t12837*t5598 - 1.*t14225*t5624 - 1.*t13464*t5787)*t9082;
  p_output1[143]=(t15461 + t14310*t5983)*t8957 + t17325*t9058 + (t14347 + t15473 + t17142 + t17143 - 1.*t14306*t4817 - 1.*t14310*t5624)*t9082;
  p_output1[144]=t2413*(-1.*t10388*t2154 + t10433*t2717 + t2154*t9555 + t2717*t9562);
  p_output1[145]=t17677*t1966;
  p_output1[146]=t17677*t3470;
  p_output1[147]=t2413*(t10433*t2154*t2413 + t10388*t2413*t2717 - 1.*t2413*t2717*t9555 + t2154*t2413*t9562) + t1966*(-1.*t10433*t2154*t3470 - 1.*t10388*t2717*t3470 + t2717*t3470*t9555 - 1.*t2154*t3470*t9562);
  p_output1[148]=t17921*t1966 + t17821*t3329 + t2413*(t16394 + t16399 + t17843*t2413*t9463 + t17868*t2413*t9463 + t1966*t2154*t9555 + t1966*t2717*t9562) + t1966*(t16428 + t16429 - 1.*t17843*t3470*t9463 - 1.*t17868*t3470*t9463 - 1.*t2154*t2413*t9555 - 1.*t2413*t2717*t9562);
  p_output1[149]=t17821*t2413 + t17921*t3470 + t1966*(t16540 + t16541 - 1.*t11235*t17843*t3470 - 1.*t11235*t17868*t3470 - 1.*t2154*t3329*t9555 - 1.*t2717*t3329*t9562) + t2413*(t15617 + t16486 + t11235*t17843*t2413 + t11235*t17868*t2413 + t2154*t3470*t9555 + t2717*t3470*t9562);
  p_output1[150]=t1966*(t10388*t2154 - 1.*t10433*t2717 - 1.*t2154*t9555 - 1.*t2717*t9562);
  p_output1[151]=t18303*t3329;
  p_output1[152]=t18303*t2413;
  p_output1[153]=(-1.*t13236*t5260 + t14153*t5260 - 1.*t13421*t5605 - 1.*t14138*t5605)*t5875;
  p_output1[154]=t18345*t4817;
  p_output1[155]=t18345*t5726;
  p_output1[156]=t4817*(-1.*t13421*t4817*t5260 - 1.*t14138*t4817*t5260 + t13236*t4817*t5605 - 1.*t14153*t4817*t5605) + (t13421*t5260*t5598 + t14138*t5260*t5598 - 1.*t13236*t5598*t5605 + t14153*t5598*t5605)*t5875;
  p_output1[157]=t18453*t4817 + t18432*t5598 + t4817*(t17193 + t17194 - 1.*t14207*t18378*t4817 - 1.*t14207*t18381*t4817 - 1.*t13236*t5260*t5598 - 1.*t13421*t5598*t5605) + (t17177 + t17179 + t14207*t18378*t5598 + t14207*t18381*t5598 + t13236*t5260*t5726 + t13421*t5605*t5726)*t5875;
  p_output1[158]=t18453*t5726 + t18432*t5875 + (t16907 + t17263 + t13236*t4817*t5260 + t14295*t18378*t5598 + t14295*t18381*t5598 + t13421*t4817*t5605)*t5875 + t4817*(t17276 + t17291 - 1.*t14295*t18378*t4817 - 1.*t14295*t18381*t4817 - 1.*t13236*t5260*t5875 - 1.*t13421*t5605*t5875);
  p_output1[159]=t4817*(t13236*t5260 - 1.*t14153*t5260 + t13421*t5605 + t14138*t5605);
  p_output1[160]=t18506*t5598;
  p_output1[161]=t18506*t5875;
  p_output1[162]=t18516*t1966 + t18510*t3329 + t2413*(t15617 + t16394 + t16399 + t1966*t9521) + t1966*(t16428 + t16429 + t16540 - 1.*t2413*t9521);
  p_output1[163]=t18510*t2413 + t18516*t3470 + t1966*(t16540 + t16541 - 1.*t11235*t3470 - 1.*t3329*t9521) + t2413*(t15617 + t16486 + t11235*t2413 + t3470*t9521);
  p_output1[164]=t18585;
  p_output1[165]=t18585;
  p_output1[166]=0.28121*t1719 - 0.305*Power(t1719,2) - 1.*t1719*t9447;
  p_output1[167]=-0.28121*t1737 + 0.305*t1719*t1737 + t1737*t9447;
  p_output1[168]=t18653;
  p_output1[169]=t18653;
  p_output1[170]=t18667*t4817 + t18683*t5598 + t4817*(t17193 + t17194 - 1.*t14207*t4817 - 1.*t13182*t5598) + (t17177 + t17179 + t14207*t5598 + t13182*t5726)*t5875;
  p_output1[171]=t18667*t5726 + t18683*t5875 + (t16907 + t17263 + t13182*t4817 + t14295*t5598)*t5875 + t4817*(t17276 + t17291 - 1.*t14295*t4817 - 1.*t13182*t5875);
  p_output1[172]=0.28121*t4126 + t12651*t4126 - 0.305*Power(t4126,2);
  p_output1[173]=-0.28121*t4461 - 1.*t12651*t4461 + 0.305*t4126*t4461;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance2.hh"

namespace SymFunction
{

void J_Je_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
