/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:32:02 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t22;
  double t15;
  double t16;
  double t28;
  double t53;
  double t57;
  double t61;
  double t9;
  double t51;
  double t70;
  double t50;
  double t71;
  double t85;
  double t89;
  double t90;
  double t93;
  double t48;
  double t19;
  double t36;
  double t43;
  double t120;
  double t123;
  double t126;
  double t148;
  double t149;
  double t152;
  double t156;
  double t127;
  double t131;
  double t133;
  double t169;
  double t171;
  double t176;
  double t177;
  double t64;
  double t72;
  double t78;
  double t98;
  double t99;
  double t100;
  double t234;
  double t215;
  double t228;
  double t236;
  double t247;
  double t248;
  double t249;
  double t253;
  double t246;
  double t264;
  double t269;
  double t270;
  double t271;
  double t276;
  double t279;
  double t280;
  double t230;
  double t242;
  double t244;
  double t318;
  double t319;
  double t323;
  double t325;
  double t288;
  double t290;
  double t291;
  double t293;
  double t294;
  double t296;
  double t330;
  double t332;
  double t335;
  double t336;
  double t250;
  double t256;
  double t259;
  double t44;
  double t81;
  double t82;
  double t365;
  double t389;
  double t402;
  double t403;
  double t406;
  double t105;
  double t110;
  double t112;
  double t157;
  double t166;
  double t167;
  double t140;
  double t141;
  double t142;
  double t479;
  double t480;
  double t481;
  double t426;
  double t430;
  double t433;
  double t500;
  double t501;
  double t506;
  double t371;
  double t372;
  double t379;
  double t193;
  double t195;
  double t196;
  double t245;
  double t261;
  double t262;
  double t573;
  double t578;
  double t579;
  double t281;
  double t282;
  double t284;
  double t327;
  double t328;
  double t329;
  double t302;
  double t309;
  double t313;
  double t650;
  double t654;
  double t664;
  double t623;
  double t624;
  double t625;
  double t715;
  double t725;
  double t730;
  double t548;
  double t550;
  double t551;
  double t345;
  double t354;
  double t355;
  double t513;
  double t515;
  double t520;
  double t396;
  double t397;
  double t399;
  double t762;
  double t766;
  double t771;
  double t407;
  double t408;
  double t409;
  double t411;
  double t412;
  double t413;
  double t470;
  double t471;
  double t472;
  double t805;
  double t807;
  double t808;
  double t440;
  double t445;
  double t462;
  double t488;
  double t490;
  double t492;
  double t815;
  double t816;
  double t817;
  double t521;
  double t522;
  double t524;
  double t527;
  double t530;
  double t531;
  double t731;
  double t733;
  double t734;
  double t561;
  double t565;
  double t566;
  double t875;
  double t876;
  double t880;
  double t581;
  double t587;
  double t593;
  double t610;
  double t611;
  double t615;
  double t634;
  double t636;
  double t637;
  double t910;
  double t915;
  double t918;
  double t626;
  double t627;
  double t632;
  double t673;
  double t695;
  double t697;
  double t920;
  double t924;
  double t929;
  double t735;
  double t736;
  double t740;
  double t745;
  double t747;
  double t748;
  double t117;
  double t138;
  double t139;
  double t952;
  double t958;
  double t959;
  double t962;
  double t963;
  double t985;
  double t988;
  double t993;
  double t996;
  double t998;
  double t999;
  double t1003;
  double t1005;
  double t1006;
  double t948;
  double t966;
  double t968;
  double t976;
  double t1009;
  double t1010;
  double t1011;
  double t1017;
  double t1018;
  double t1019;
  double t1020;
  double t1028;
  double t1032;
  double t1037;
  double t1040;
  double t1041;
  double t980;
  double t1033;
  double t1035;
  double t1066;
  double t1068;
  double t1072;
  double t1050;
  double t1056;
  double t1060;
  double t1061;
  double t1065;
  double t1073;
  double t1075;
  double t1125;
  double t1126;
  double t1127;
  double t1091;
  double t1098;
  double t1099;
  double t1100;
  double t1108;
  double t1114;
  double t1131;
  double t1162;
  double t1163;
  double t1166;
  double t1167;
  double t1170;
  double t1171;
  double t1172;
  double t1175;
  double t1134;
  double t1136;
  double t1137;
  double t1179;
  double t1182;
  double t1183;
  double t1149;
  double t1151;
  double t1152;
  double t1158;
  double t1215;
  double t1217;
  double t1220;
  double t1221;
  double t1224;
  double t1227;
  double t1232;
  double t179;
  double t182;
  double t185;
  double t1209;
  double t1211;
  double t1213;
  double t1223;
  double t1234;
  double t1236;
  double t1239;
  double t1240;
  double t1242;
  double t1267;
  double t1268;
  double t1271;
  double t1286;
  double t1291;
  double t1300;
  double t1306;
  double t1309;
  double t192;
  double t197;
  double t203;
  double t1273;
  double t1276;
  double t1281;
  double t1297;
  double t1310;
  double t1311;
  double t1316;
  double t1323;
  double t1324;
  double t1255;
  double t1257;
  double t1259;
  double t1391;
  double t1392;
  double t1400;
  double t1404;
  double t1450;
  double t1465;
  double t1468;
  double t1469;
  double t1483;
  double t1489;
  double t1490;
  double t1494;
  double t1495;
  double t103;
  double t114;
  double t116;
  double t1559;
  double t1569;
  double t1574;
  double t1626;
  double t1629;
  double t1631;
  double t1632;
  double t1659;
  double t1681;
  double t1696;
  double t1701;
  double t1702;
  double t1706;
  double t1715;
  double t1721;
  double t1730;
  double t292;
  double t297;
  double t299;
  double t1828;
  double t1830;
  double t1831;
  double t1832;
  double t1834;
  double t1841;
  double t1843;
  double t1847;
  double t1852;
  double t1853;
  double t1858;
  double t1860;
  double t1868;
  double t1827;
  double t1835;
  double t1837;
  double t1839;
  double t1846;
  double t1869;
  double t1870;
  double t1871;
  double t1872;
  double t1873;
  double t1874;
  double t1877;
  double t1880;
  double t1884;
  double t1889;
  double t1894;
  double t1896;
  double t1900;
  double t1840;
  double t1890;
  double t1891;
  double t1938;
  double t1939;
  double t1940;
  double t1928;
  double t1930;
  double t1933;
  double t1935;
  double t1937;
  double t1947;
  double t1952;
  double t2000;
  double t2003;
  double t2005;
  double t1976;
  double t1985;
  double t1989;
  double t1990;
  double t1997;
  double t2009;
  double t2078;
  double t2079;
  double t2083;
  double t2084;
  double t2087;
  double t2091;
  double t2093;
  double t2015;
  double t2019;
  double t2030;
  double t2097;
  double t2098;
  double t2100;
  double t2060;
  double t2061;
  double t2074;
  double t2119;
  double t2122;
  double t2128;
  double t2133;
  double t2141;
  double t2143;
  double t2146;
  double t2148;
  double t2149;
  double t337;
  double t341;
  double t342;
  double t2135;
  double t2137;
  double t2139;
  double t2145;
  double t2151;
  double t2155;
  double t2166;
  double t2169;
  double t2170;
  double t2212;
  double t2213;
  double t2222;
  double t2223;
  double t2225;
  double t2228;
  double t2229;
  double t2230;
  double t344;
  double t361;
  double t364;
  double t2217;
  double t2218;
  double t2219;
  double t2226;
  double t2231;
  double t2233;
  double t2242;
  double t2245;
  double t2246;
  double t2196;
  double t2201;
  double t2202;
  double t2298;
  double t2303;
  double t2309;
  double t2311;
  double t2326;
  double t2331;
  double t2342;
  double t2343;
  double t2346;
  double t2354;
  double t2356;
  double t2361;
  double t2362;
  double t272;
  double t286;
  double t287;
  double t2441;
  double t2448;
  double t2458;
  double t2492;
  double t2495;
  double t2496;
  double t2504;
  double t2524;
  double t2527;
  double t2532;
  double t2534;
  double t2535;
  double t2541;
  double t2556;
  double t2557;
  double t2563;
  double t1135;
  double t1150;
  double t2654;
  double t2661;
  double t2662;
  double t1185;
  double t2664;
  double t1198;
  double t2669;
  double t2681;
  double t2700;
  double t2702;
  double t2703;
  double t1214;
  double t1249;
  double t1284;
  double t1333;
  double t1351;
  double t1466;
  double t1484;
  double t2731;
  double t2739;
  double t1504;
  double t2783;
  double t2786;
  double t2789;
  double t2790;
  double t2792;
  double t1510;
  double t2795;
  double t2802;
  double t2803;
  double t1521;
  double t1523;
  double t1548;
  double t1591;
  double t1603;
  double t1609;
  double t1700;
  double t1707;
  double t2863;
  double t2869;
  double t2916;
  double t2918;
  double t2920;
  double t1737;
  double t2923;
  double t1746;
  double t2929;
  double t2933;
  double t2934;
  double t1765;
  double t1775;
  double t1777;
  double t1809;
  double t1817;
  double t2010;
  double t2033;
  double t2994;
  double t2995;
  double t2999;
  double t2101;
  double t3005;
  double t2106;
  double t3012;
  double t3016;
  double t3017;
  double t3018;
  double t3021;
  double t2140;
  double t2195;
  double t2220;
  double t2262;
  double t2263;
  double t2338;
  double t2348;
  double t3045;
  double t3057;
  double t2369;
  double t3121;
  double t3128;
  double t3130;
  double t3131;
  double t3134;
  double t2378;
  double t3140;
  double t3152;
  double t3156;
  double t2402;
  double t2403;
  double t2435;
  double t2468;
  double t2475;
  double t2477;
  double t2533;
  double t2542;
  double t3218;
  double t3224;
  double t3295;
  double t3296;
  double t3300;
  double t2569;
  double t3307;
  double t2575;
  double t3314;
  double t3321;
  double t3323;
  double t2584;
  double t2592;
  double t2596;
  double t2619;
  double t2630;
  double t3406;
  double t3407;
  double t3408;
  double t2837;
  double t2838;
  double t3494;
  double t3499;
  double t2864;
  double t3468;
  double t3472;
  double t3474;
  double t2884;
  double t2901;
  double t2902;
  double t3526;
  double t3530;
  double t3531;
  double t3592;
  double t3600;
  double t3602;
  double t3626;
  double t3630;
  double t3631;
  double t3183;
  double t3188;
  double t3687;
  double t3692;
  double t3220;
  double t3719;
  double t3722;
  double t3723;
  double t3250;
  double t3745;
  double t3746;
  double t3750;
  double t3269;
  double t3273;
  double t3813;
  double t3817;
  double t3818;
  double t3825;
  double t3827;
  double t3845;
  double t3847;
  double t3897;
  double t3899;
  double t3903;
  double t3960;
  double t3963;
  double t3971;
  double t3972;
  double t3975;
  double t4008;
  double t4050;
  t22 = Cos(var1[7]);
  t15 = Cos(var1[8]);
  t16 = Sin(var1[7]);
  t28 = Sin(var1[8]);
  t53 = t22*t15;
  t57 = t16*t28;
  t61 = t53 + t57;
  t9 = Cos(var1[4]);
  t51 = Cos(var1[6]);
  t70 = Sin(var1[5]);
  t50 = Cos(var1[5]);
  t71 = Sin(var1[6]);
  t85 = -1.*t51*t70*t61;
  t89 = -1.*t50*t71*t61;
  t90 = t85 + t89;
  t93 = t9*t90;
  t48 = Sin(var1[4]);
  t19 = -1.*t15*t16;
  t36 = t22*t28;
  t43 = t19 + t36;
  t120 = t15*t16;
  t123 = -1.*t22*t28;
  t126 = t120 + t123;
  t148 = -1.*t50*t51;
  t149 = t70*t71;
  t152 = t148 + t149;
  t156 = t9*t152;
  t127 = t50*t51*t126;
  t131 = -1.*t70*t71*t126;
  t133 = t127 + t131;
  t169 = -1.*t51*t70*t126;
  t171 = -1.*t50*t71*t126;
  t176 = t169 + t171;
  t177 = t9*t176;
  t64 = t50*t51*t61;
  t72 = -1.*t70*t71*t61;
  t78 = t64 + t72;
  t98 = -1.*t22*t15;
  t99 = -1.*t16*t28;
  t100 = t98 + t99;
  t234 = Cos(var1[10]);
  t215 = Cos(var1[11]);
  t228 = Sin(var1[10]);
  t236 = Sin(var1[11]);
  t247 = -1.*t234*t215;
  t248 = -1.*t228*t236;
  t249 = t247 + t248;
  t253 = Sin(var1[9]);
  t246 = Cos(var1[9]);
  t264 = -1.*t50*t253*t249;
  t269 = -1.*t246*t249*t70;
  t270 = t264 + t269;
  t271 = t9*t270;
  t276 = t215*t228;
  t279 = -1.*t234*t236;
  t280 = t276 + t279;
  t230 = -1.*t215*t228;
  t242 = t234*t236;
  t244 = t230 + t242;
  t318 = t246*t50;
  t319 = -1.*t253*t70;
  t323 = t318 + t319;
  t325 = t9*t323;
  t288 = t234*t215;
  t290 = t228*t236;
  t291 = t288 + t290;
  t293 = t246*t50*t244;
  t294 = -1.*t253*t244*t70;
  t296 = t293 + t294;
  t330 = -1.*t50*t253*t244;
  t332 = -1.*t246*t244*t70;
  t335 = t330 + t332;
  t336 = t9*t335;
  t250 = t246*t50*t249;
  t256 = -1.*t253*t249*t70;
  t259 = t250 + t256;
  t44 = t9*t43;
  t81 = -1.*t48*t78;
  t82 = t44 + t81;
  t365 = Sin(var1[3]);
  t389 = Cos(var1[3]);
  t402 = t365*t48*t90;
  t403 = t389*t78;
  t406 = t402 + t403;
  t105 = t50*t51*t43;
  t110 = -1.*t70*t71*t43;
  t112 = t105 + t110;
  t157 = t9*t61;
  t166 = -1.*t48*t133;
  t167 = t157 + t166;
  t140 = -1.*t51*t70;
  t141 = -1.*t50*t71;
  t142 = t140 + t141;
  t479 = t389*t142;
  t480 = t365*t48*t152;
  t481 = t479 + t480;
  t426 = t51*t70*t126;
  t430 = t50*t71*t126;
  t433 = t426 + t430;
  t500 = t365*t48*t176;
  t501 = t389*t133;
  t506 = t500 + t501;
  t371 = t51*t70*t61;
  t372 = t50*t71*t61;
  t379 = t371 + t372;
  t193 = t50*t51*t100;
  t195 = -1.*t70*t71*t100;
  t196 = t193 + t195;
  t245 = t9*t244;
  t261 = -1.*t48*t259;
  t262 = t245 + t261;
  t573 = t365*t48*t270;
  t578 = t389*t259;
  t579 = t573 + t578;
  t281 = t246*t50*t280;
  t282 = -1.*t253*t280*t70;
  t284 = t281 + t282;
  t327 = t9*t291;
  t328 = -1.*t48*t296;
  t329 = t327 + t328;
  t302 = t50*t253;
  t309 = t246*t70;
  t313 = t302 + t309;
  t650 = t389*t313;
  t654 = t365*t48*t323;
  t664 = t650 + t654;
  t623 = t50*t253*t244;
  t624 = t246*t244*t70;
  t625 = t623 + t624;
  t715 = t365*t48*t335;
  t725 = t389*t296;
  t730 = t715 + t725;
  t548 = t50*t253*t249;
  t550 = t246*t249*t70;
  t551 = t548 + t550;
  t345 = t246*t50*t291;
  t354 = -1.*t253*t291*t70;
  t355 = t345 + t354;
  t513 = t389*t379;
  t515 = -1.*t365*t82;
  t520 = t513 + t515;
  t396 = -1.*t48*t43;
  t397 = -1.*t9*t78;
  t399 = t396 + t397;
  t762 = -1.*t389*t48*t90;
  t766 = t365*t78;
  t771 = t762 + t766;
  t407 = t51*t70*t43;
  t408 = t50*t71*t43;
  t409 = t407 + t408;
  t411 = t9*t100;
  t412 = -1.*t48*t112;
  t413 = t411 + t412;
  t470 = t50*t51;
  t471 = -1.*t70*t71;
  t472 = t470 + t471;
  t805 = t365*t142;
  t807 = -1.*t389*t48*t152;
  t808 = t805 + t807;
  t440 = t389*t433;
  t445 = -1.*t365*t167;
  t462 = t440 + t445;
  t488 = -1.*t48*t61;
  t490 = -1.*t9*t133;
  t492 = t488 + t490;
  t815 = -1.*t389*t48*t176;
  t816 = t365*t133;
  t817 = t815 + t816;
  t521 = t51*t70*t100;
  t522 = t50*t71*t100;
  t524 = t521 + t522;
  t527 = t9*t126;
  t530 = -1.*t48*t196;
  t531 = t527 + t530;
  t731 = t389*t551;
  t733 = -1.*t365*t262;
  t734 = t731 + t733;
  t561 = -1.*t244*t48;
  t565 = -1.*t9*t259;
  t566 = t561 + t565;
  t875 = -1.*t389*t48*t270;
  t876 = t365*t259;
  t880 = t875 + t876;
  t581 = t50*t253*t280;
  t587 = t246*t280*t70;
  t593 = t581 + t587;
  t610 = t9*t249;
  t611 = -1.*t48*t284;
  t615 = t610 + t611;
  t634 = -1.*t246*t50;
  t636 = t253*t70;
  t637 = t634 + t636;
  t910 = t365*t313;
  t915 = -1.*t389*t48*t323;
  t918 = t910 + t915;
  t626 = t389*t625;
  t627 = -1.*t365*t329;
  t632 = t626 + t627;
  t673 = -1.*t291*t48;
  t695 = -1.*t9*t296;
  t697 = t673 + t695;
  t920 = -1.*t389*t48*t335;
  t924 = t365*t296;
  t929 = t920 + t924;
  t735 = t50*t253*t291;
  t736 = t246*t291*t70;
  t740 = t735 + t736;
  t745 = t9*t280;
  t747 = -1.*t48*t355;
  t748 = t745 + t747;
  t117 = t48*t61;
  t138 = t9*t133;
  t139 = t117 + t138;
  t952 = -1.*t15;
  t958 = 1. + t952;
  t959 = 0.50321*t958;
  t962 = 0.19821*t15;
  t963 = t959 + t962;
  t985 = -1.*t51;
  t988 = 1. + t985;
  t993 = 0.15121*t988;
  t996 = -1.*t22;
  t998 = 1. + t996;
  t999 = 0.28121*t998;
  t1003 = t22*t963;
  t1005 = -0.305*t16*t28;
  t1006 = t999 + t1003 + t1005;
  t948 = 0.28121*t16;
  t966 = -1.*t963*t16;
  t968 = -0.305*t22*t28;
  t976 = t948 + t966 + t968;
  t1009 = t51*t1006;
  t1010 = t993 + t1009;
  t1011 = t50*t1010;
  t1017 = 0.15121*t51;
  t1018 = -0.15121*t71;
  t1019 = t71*t1006;
  t1020 = t993 + t1017 + t1018 + t1019;
  t1028 = -1.*t70*t1020;
  t1032 = t1011 + t1028;
  t1037 = t48*t976;
  t1040 = t9*t1032;
  t1041 = t1037 + t1040;
  t980 = -1.*t48*t976;
  t1033 = -1.*t9*t1032;
  t1035 = t980 + t1033;
  t1066 = t9*t976;
  t1068 = -1.*t48*t1032;
  t1072 = t1066 + t1068;
  t1050 = t70*t1010;
  t1056 = t50*t1020;
  t1060 = t1050 + t1056;
  t1061 = -1.*t472*t1060;
  t1065 = -1.*t9*t142*t1041;
  t1073 = t48*t142*t1072;
  t1075 = t1061 + t1065 + t1073;
  t1125 = -1.*t70*t1010;
  t1126 = -1.*t50*t1020;
  t1127 = t1125 + t1126;
  t1091 = t433*t1060;
  t1098 = t139*t1041;
  t1099 = t167*t1072;
  t1100 = t1091 + t1098 + t1099;
  t1108 = t9*t176*t1075;
  t1114 = Power(t9,2);
  t1131 = Power(t48,2);
  t1162 = -0.15121*t51;
  t1163 = t1162 + t1009;
  t1166 = -1.*t70*t1163;
  t1167 = 0.15121*t71;
  t1170 = -1.*t71*t1006;
  t1171 = t1167 + t1170;
  t1172 = t50*t1171;
  t1175 = t1166 + t1172;
  t1134 = -1.*t142*t1060;
  t1136 = -1.*t9*t152*t1041;
  t1137 = t48*t152*t1072;
  t1179 = t50*t1163;
  t1182 = t70*t1171;
  t1183 = t1179 + t1182;
  t1149 = t133*t1060;
  t1151 = t9*t176*t1041;
  t1152 = -1.*t48*t176*t1072;
  t1158 = t9*t152*t1100;
  t1215 = 0.28121*t22;
  t1217 = -1.*t22*t963;
  t1220 = 0.305*t16*t28;
  t1221 = t1215 + t1217 + t1220;
  t1224 = t50*t51*t976;
  t1227 = -1.*t70*t71*t976;
  t1232 = t1224 + t1227;
  t179 = t48*t43;
  t182 = t9*t78;
  t185 = t179 + t182;
  t1209 = t51*t70*t976;
  t1211 = t50*t71*t976;
  t1213 = t1209 + t1211;
  t1223 = t48*t1221;
  t1234 = t9*t1232;
  t1236 = t1223 + t1234;
  t1239 = t9*t1221;
  t1240 = -1.*t48*t1232;
  t1242 = t1239 + t1240;
  t1267 = -0.305*t15*t16;
  t1268 = 0.305*t22*t28;
  t1271 = t1267 + t1268;
  t1286 = -0.305*t22*t15;
  t1291 = t1286 + t1005;
  t1300 = t50*t51*t1271;
  t1306 = -1.*t70*t71*t1271;
  t1309 = t1300 + t1306;
  t192 = t48*t126;
  t197 = t9*t196;
  t203 = t192 + t197;
  t1273 = t51*t70*t1271;
  t1276 = t50*t71*t1271;
  t1281 = t1273 + t1276;
  t1297 = t48*t1291;
  t1310 = t9*t1309;
  t1311 = t1297 + t1310;
  t1316 = t9*t1291;
  t1323 = -1.*t48*t1309;
  t1324 = t1316 + t1323;
  t1255 = t379*t1060;
  t1257 = t185*t1041;
  t1259 = t82*t1072;
  t1391 = -1.*t433*t1060;
  t1392 = -1.*t139*t1041;
  t1400 = -1.*t167*t1072;
  t1404 = t1391 + t1392 + t1400;
  t1450 = t1255 + t1257 + t1259;
  t1465 = -1.*t133*t1060;
  t1468 = -1.*t9*t176*t1041;
  t1469 = t48*t176*t1072;
  t1483 = t78*t1060;
  t1489 = t9*t90*t1041;
  t1490 = -1.*t48*t90*t1072;
  t1494 = t9*t90*t1404;
  t1495 = t9*t176*t1450;
  t103 = t48*t100;
  t114 = t9*t112;
  t116 = t103 + t114;
  t1559 = -1.*t379*t1060;
  t1569 = -1.*t185*t1041;
  t1574 = -1.*t82*t1072;
  t1626 = t472*t1060;
  t1629 = t9*t142*t1041;
  t1631 = -1.*t48*t142*t1072;
  t1632 = t1626 + t1629 + t1631;
  t1659 = t1559 + t1569 + t1574;
  t1681 = t9*t90*t1632;
  t1696 = t142*t1060;
  t1701 = t9*t152*t1041;
  t1702 = -1.*t48*t152*t1072;
  t1706 = -1.*t78*t1060;
  t1715 = -1.*t9*t90*t1041;
  t1721 = t48*t90*t1072;
  t1730 = t9*t152*t1659;
  t292 = t291*t48;
  t297 = t9*t296;
  t299 = t292 + t297;
  t1828 = -1.*t215;
  t1830 = 1. + t1828;
  t1831 = -0.50321*t1830;
  t1832 = -0.19821*t215;
  t1834 = t1831 + t1832;
  t1841 = -1.*t246;
  t1843 = 1. + t1841;
  t1847 = -1.*t234;
  t1852 = 1. + t1847;
  t1853 = -0.28121*t1852;
  t1858 = t234*t1834;
  t1860 = 0.305*t228*t236;
  t1868 = t1853 + t1858 + t1860;
  t1827 = 0.28121*t228;
  t1835 = t1834*t228;
  t1837 = -0.305*t234*t236;
  t1839 = t1827 + t1835 + t1837;
  t1846 = -0.15121*t1843;
  t1869 = t246*t1868;
  t1870 = t1846 + t1869;
  t1871 = t50*t1870;
  t1872 = 0.15121*t1843;
  t1873 = 0.15121*t246;
  t1874 = 0.15121*t253;
  t1877 = t253*t1868;
  t1880 = t1872 + t1873 + t1874 + t1877;
  t1884 = -1.*t1880*t70;
  t1889 = t1871 + t1884;
  t1894 = t1839*t48;
  t1896 = t9*t1889;
  t1900 = t1894 + t1896;
  t1840 = -1.*t1839*t48;
  t1890 = -1.*t9*t1889;
  t1891 = t1840 + t1890;
  t1938 = t9*t1839;
  t1939 = -1.*t48*t1889;
  t1940 = t1938 + t1939;
  t1928 = t50*t1880;
  t1930 = t1870*t70;
  t1933 = t1928 + t1930;
  t1935 = -1.*t637*t1933;
  t1937 = -1.*t9*t313*t1900;
  t1947 = t48*t313*t1940;
  t1952 = t1935 + t1937 + t1947;
  t2000 = -1.*t50*t1880;
  t2003 = -1.*t1870*t70;
  t2005 = t2000 + t2003;
  t1976 = t625*t1933;
  t1985 = t299*t1900;
  t1989 = t329*t1940;
  t1990 = t1976 + t1985 + t1989;
  t1997 = t9*t335*t1952;
  t2009 = -1.*t313*t1933;
  t2078 = -0.15121*t253;
  t2079 = -1.*t253*t1868;
  t2083 = t2078 + t2079;
  t2084 = t50*t2083;
  t2087 = t1873 + t1869;
  t2091 = -1.*t2087*t70;
  t2093 = t2084 + t2091;
  t2015 = -1.*t9*t323*t1900;
  t2019 = t48*t323*t1940;
  t2030 = t296*t1933;
  t2097 = t50*t2087;
  t2098 = t2083*t70;
  t2100 = t2097 + t2098;
  t2060 = t9*t335*t1900;
  t2061 = -1.*t48*t335*t1940;
  t2074 = t9*t323*t1990;
  t2119 = -0.28121*t228;
  t2122 = -1.*t1834*t228;
  t2128 = 0.305*t234*t236;
  t2133 = t2119 + t2122 + t2128;
  t2141 = 0.28121*t234;
  t2143 = t2141 + t1858 + t1860;
  t2146 = t246*t50*t2133;
  t2148 = -1.*t253*t2133*t70;
  t2149 = t2146 + t2148;
  t337 = t244*t48;
  t341 = t9*t259;
  t342 = t337 + t341;
  t2135 = t50*t253*t2133;
  t2137 = t246*t2133*t70;
  t2139 = t2135 + t2137;
  t2145 = t2143*t48;
  t2151 = t9*t2149;
  t2155 = t2145 + t2151;
  t2166 = t9*t2143;
  t2169 = -1.*t48*t2149;
  t2170 = t2166 + t2169;
  t2212 = 0.305*t215*t228;
  t2213 = t2212 + t1837;
  t2222 = -0.305*t234*t215;
  t2223 = -0.305*t228*t236;
  t2225 = t2222 + t2223;
  t2228 = t246*t50*t2213;
  t2229 = -1.*t253*t2213*t70;
  t2230 = t2228 + t2229;
  t344 = t280*t48;
  t361 = t9*t355;
  t364 = t344 + t361;
  t2217 = t50*t253*t2213;
  t2218 = t246*t2213*t70;
  t2219 = t2217 + t2218;
  t2226 = t2225*t48;
  t2231 = t9*t2230;
  t2233 = t2226 + t2231;
  t2242 = t9*t2225;
  t2245 = -1.*t48*t2230;
  t2246 = t2242 + t2245;
  t2196 = t551*t1933;
  t2201 = t342*t1900;
  t2202 = t262*t1940;
  t2298 = -1.*t625*t1933;
  t2303 = -1.*t299*t1900;
  t2309 = -1.*t329*t1940;
  t2311 = t2298 + t2303 + t2309;
  t2326 = t2196 + t2201 + t2202;
  t2331 = -1.*t296*t1933;
  t2342 = -1.*t9*t335*t1900;
  t2343 = t48*t335*t1940;
  t2346 = t259*t1933;
  t2354 = t9*t270*t1900;
  t2356 = -1.*t48*t270*t1940;
  t2361 = t9*t270*t2311;
  t2362 = t9*t335*t2326;
  t272 = t249*t48;
  t286 = t9*t284;
  t287 = t272 + t286;
  t2441 = -1.*t551*t1933;
  t2448 = -1.*t342*t1900;
  t2458 = -1.*t262*t1940;
  t2492 = t637*t1933;
  t2495 = t9*t313*t1900;
  t2496 = -1.*t48*t313*t1940;
  t2504 = t2492 + t2495 + t2496;
  t2524 = t2441 + t2448 + t2458;
  t2527 = t9*t270*t2504;
  t2532 = t313*t1933;
  t2534 = t9*t323*t1900;
  t2535 = -1.*t48*t323*t1940;
  t2541 = -1.*t259*t1933;
  t2556 = -1.*t9*t270*t1900;
  t2557 = t48*t270*t1940;
  t2563 = t9*t323*t2524;
  t1135 = -1.*t472*t1032;
  t1150 = t433*t1032;
  t2654 = -1.*t142*t1032;
  t2661 = t1061 + t2654;
  t2662 = t133*t2661;
  t1185 = -1.*t472*t1183;
  t2664 = -1.*t152*t1032;
  t1198 = t433*t1183;
  t2669 = t176*t1032;
  t2681 = t976*t61;
  t2700 = t133*t1032;
  t2702 = t2681 + t1091 + t2700;
  t2703 = t142*t2702;
  t1214 = -1.*t472*t1213;
  t1249 = t433*t1213;
  t1284 = -1.*t472*t1281;
  t1333 = t433*t1281;
  t1351 = t524*t1060;
  t1466 = -1.*t433*t1032;
  t1484 = t379*t1032;
  t2731 = t976*t43;
  t2739 = t78*t1032;
  t1504 = -1.*t433*t1183;
  t2783 = -1.*t176*t1032;
  t2786 = -1.*t976*t61;
  t2789 = -1.*t133*t1032;
  t2790 = t2786 + t1391 + t2789;
  t2792 = t78*t2790;
  t1510 = t379*t1183;
  t2795 = t90*t1032;
  t2802 = t2731 + t1255 + t2739;
  t2803 = t133*t2802;
  t1521 = t1213*t379;
  t1523 = t409*t1060;
  t1548 = -1.*t433*t1213;
  t1591 = t1281*t379;
  t1603 = -1.*t433*t1281;
  t1609 = -1.*t524*t1060;
  t1700 = t472*t1032;
  t1707 = -1.*t379*t1032;
  t2863 = -1.*t976*t43;
  t2869 = -1.*t78*t1032;
  t2916 = t142*t1032;
  t2918 = t1626 + t2916;
  t2920 = t78*t2918;
  t1737 = t472*t1183;
  t2923 = t152*t1032;
  t1746 = -1.*t379*t1183;
  t2929 = -1.*t90*t1032;
  t2933 = t2863 + t1559 + t2869;
  t2934 = t142*t2933;
  t1765 = t472*t1213;
  t1775 = -1.*t1213*t379;
  t1777 = -1.*t409*t1060;
  t1809 = t472*t1281;
  t1817 = -1.*t1281*t379;
  t2010 = -1.*t637*t1889;
  t2033 = t625*t1889;
  t2994 = -1.*t313*t1889;
  t2995 = t1935 + t2994;
  t2999 = t296*t2995;
  t2101 = -1.*t637*t2100;
  t3005 = -1.*t323*t1889;
  t2106 = t625*t2100;
  t3012 = t335*t1889;
  t3016 = t1839*t291;
  t3017 = t296*t1889;
  t3018 = t3016 + t1976 + t3017;
  t3021 = t313*t3018;
  t2140 = -1.*t637*t2139;
  t2195 = t2139*t625;
  t2220 = -1.*t637*t2219;
  t2262 = t2219*t625;
  t2263 = t740*t1933;
  t2338 = -1.*t625*t1889;
  t2348 = t551*t1889;
  t3045 = t1839*t244;
  t3057 = t259*t1889;
  t2369 = -1.*t625*t2100;
  t3121 = -1.*t335*t1889;
  t3128 = -1.*t1839*t291;
  t3130 = -1.*t296*t1889;
  t3131 = t3128 + t2298 + t3130;
  t3134 = t259*t3131;
  t2378 = t551*t2100;
  t3140 = t270*t1889;
  t3152 = t3045 + t2196 + t3057;
  t3156 = t296*t3152;
  t2402 = t2139*t551;
  t2403 = t593*t1933;
  t2435 = -1.*t2139*t625;
  t2468 = t2219*t551;
  t2475 = -1.*t2219*t625;
  t2477 = -1.*t740*t1933;
  t2533 = t637*t1889;
  t2542 = -1.*t551*t1889;
  t3218 = -1.*t1839*t244;
  t3224 = -1.*t259*t1889;
  t3295 = t313*t1889;
  t3296 = t2492 + t3295;
  t3300 = t259*t3296;
  t2569 = t637*t2100;
  t3307 = t323*t1889;
  t2575 = -1.*t551*t2100;
  t3314 = -1.*t270*t1889;
  t3321 = t3218 + t2441 + t3224;
  t3323 = t313*t3321;
  t2584 = t637*t2139;
  t2592 = -1.*t2139*t551;
  t2596 = -1.*t593*t1933;
  t2619 = t637*t2219;
  t2630 = -1.*t2219*t551;
  t3406 = t71*t1010;
  t3407 = -1.*t51*t1020;
  t3408 = t3406 + t3407;
  t2837 = t976*t100;
  t2838 = t43*t1221;
  t3494 = Power(t51,2);
  t3499 = Power(t71,2);
  t2864 = -1.*t1221*t61;
  t3468 = -1.*t51*t126*t1010;
  t3472 = -1.*t71*t126*t1020;
  t3474 = t2786 + t3468 + t3472;
  t2884 = t43*t1291;
  t2901 = -1.*t126*t976;
  t2902 = -1.*t1291*t61;
  t3526 = t51*t61*t1010;
  t3530 = t71*t61*t1020;
  t3531 = t2731 + t3526 + t3530;
  t3592 = -1.*t71*t1010;
  t3600 = t51*t1020;
  t3602 = t3592 + t3600;
  t3626 = -1.*t253*t1870;
  t3630 = t246*t1880;
  t3631 = t3626 + t3630;
  t3183 = t1839*t249;
  t3188 = t244*t2143;
  t3687 = Power(t246,2);
  t3692 = Power(t253,2);
  t3220 = -1.*t2143*t291;
  t3719 = -1.*t246*t244*t1870;
  t3722 = -1.*t253*t244*t1880;
  t3723 = t3128 + t3719 + t3722;
  t3250 = t244*t2225;
  t3745 = t246*t249*t1870;
  t3746 = t253*t249*t1880;
  t3750 = t3045 + t3745 + t3746;
  t3269 = -1.*t280*t1839;
  t3273 = -1.*t2225*t291;
  t3813 = t253*t1870;
  t3817 = -1.*t246*t1880;
  t3818 = t3813 + t3817;
  t3825 = -1.*t126*t1006;
  t3827 = t3825 + t2786;
  t3845 = t1006*t61;
  t3847 = t2731 + t3845;
  t3897 = 0.15121*t100;
  t3899 = 0.15121*t61;
  t3903 = t3897 + t3899;
  t3960 = 0.15121*t280;
  t3963 = 0.15121*t244;
  t3971 = t3960 + t3963;
  t3972 = t249*t1868;
  t3975 = t3045 + t3972;
  t4008 = -1.*t244*t1868;
  t4050 = t4008 + t3128;
  p_output1[0]=t82;
  p_output1[1]=t93;
  p_output1[2]=t93;
  p_output1[3]=t116;
  p_output1[4]=t139;
  p_output1[5]=-1.*t142*t48;
  p_output1[6]=t156;
  p_output1[7]=t156;
  p_output1[8]=t167;
  p_output1[9]=t177;
  p_output1[10]=t177;
  p_output1[11]=t185;
  p_output1[12]=t203;
  p_output1[13]=t262;
  p_output1[14]=t271;
  p_output1[15]=t271;
  p_output1[16]=t287;
  p_output1[17]=t299;
  p_output1[18]=-1.*t313*t48;
  p_output1[19]=t325;
  p_output1[20]=t325;
  p_output1[21]=t329;
  p_output1[22]=t336;
  p_output1[23]=t336;
  p_output1[24]=t342;
  p_output1[25]=t364;
  p_output1[26]=-1.*t365*t379 - 1.*t389*t82;
  p_output1[27]=-1.*t365*t399;
  p_output1[28]=t406;
  p_output1[29]=t406;
  p_output1[30]=t389*t409 - 1.*t365*t413;
  p_output1[31]=t462;
  p_output1[32]=-1.*t365*t472 + t142*t389*t48;
  p_output1[33]=t142*t365*t9;
  p_output1[34]=t481;
  p_output1[35]=t481;
  p_output1[36]=-1.*t167*t389 - 1.*t365*t433;
  p_output1[37]=-1.*t365*t492;
  p_output1[38]=t506;
  p_output1[39]=t506;
  p_output1[40]=t520;
  p_output1[41]=t389*t524 - 1.*t365*t531;
  p_output1[42]=-1.*t262*t389 - 1.*t365*t551;
  p_output1[43]=-1.*t365*t566;
  p_output1[44]=t579;
  p_output1[45]=t579;
  p_output1[46]=t389*t593 - 1.*t365*t615;
  p_output1[47]=t632;
  p_output1[48]=t313*t389*t48 - 1.*t365*t637;
  p_output1[49]=t313*t365*t9;
  p_output1[50]=t664;
  p_output1[51]=t664;
  p_output1[52]=-1.*t329*t389 - 1.*t365*t625;
  p_output1[53]=-1.*t365*t697;
  p_output1[54]=t730;
  p_output1[55]=t730;
  p_output1[56]=t734;
  p_output1[57]=t389*t740 - 1.*t365*t748;
  p_output1[58]=t520;
  p_output1[59]=t389*t399;
  p_output1[60]=t771;
  p_output1[61]=t771;
  p_output1[62]=t365*t409 + t389*t413;
  p_output1[63]=t167*t389 + t365*t433;
  p_output1[64]=t389*t472 + t142*t365*t48;
  p_output1[65]=-1.*t142*t389*t9;
  p_output1[66]=t808;
  p_output1[67]=t808;
  p_output1[68]=t462;
  p_output1[69]=t389*t492;
  p_output1[70]=t817;
  p_output1[71]=t817;
  p_output1[72]=t365*t379 + t389*t82;
  p_output1[73]=t365*t524 + t389*t531;
  p_output1[74]=t734;
  p_output1[75]=t389*t566;
  p_output1[76]=t880;
  p_output1[77]=t880;
  p_output1[78]=t365*t593 + t389*t615;
  p_output1[79]=t329*t389 + t365*t625;
  p_output1[80]=t313*t365*t48 + t389*t637;
  p_output1[81]=-1.*t313*t389*t9;
  p_output1[82]=t918;
  p_output1[83]=t918;
  p_output1[84]=t632;
  p_output1[85]=t389*t697;
  p_output1[86]=t929;
  p_output1[87]=t929;
  p_output1[88]=t262*t389 + t365*t551;
  p_output1[89]=t365*t740 + t389*t748;
  p_output1[90]=t1075*t167 - 1.*t1100*t142*t48 + t139*(t1035*t142*t48 + t1041*t142*t48) + t142*(t1072*t139 + t1035*t167 + t1041*t167 + t1072*t492)*t9;
  p_output1[91]=t1108 + t1158 + t139*(t1134 + t1135 + t1136 + t1137 - 1.*t1114*t1127*t142 - 1.*t1127*t1131*t142) + t142*t9*(t1149 + t1150 + t1151 + t1152 - 1.*t1127*t167*t48 + t1127*t139*t9);
  p_output1[92]=t1108 + t1158 + t139*(t1134 + t1136 + t1137 + t1185 - 1.*t1114*t1175*t142 - 1.*t1131*t1175*t142) + t142*t9*(t1149 + t1151 + t1152 + t1198 - 1.*t1175*t167*t48 + t1175*t139*t9);
  p_output1[93]=t1075*t185 + t142*(t1249 + t1255 + t1257 + t1259 + t1236*t139 + t1242*t167)*t9 + t139*(t1214 + t1242*t142*t48 - 1.*t1236*t142*t9);
  p_output1[94]=t1075*t203 + t142*(t1333 + t1351 + t1311*t139 + t1324*t167 + t1041*t203 + t1072*t531)*t9 + t139*(t1284 + t1324*t142*t48 - 1.*t1311*t142*t9);
  p_output1[95]=t1450*t167 + t185*(-1.*t1072*t139 - 1.*t1035*t167 - 1.*t1041*t167 - 1.*t1072*t492) + t1404*t82 + t139*(t1072*t185 + t1072*t399 + t1035*t82 + t1041*t82);
  p_output1[96]=t1494 + t1495 + t185*(t1465 + t1466 + t1468 + t1469 + t1127*t167*t48 - 1.*t1127*t139*t9) + t139*(t1483 + t1484 + t1489 + t1490 - 1.*t1127*t48*t82 + t1127*t185*t9);
  p_output1[97]=t1494 + t1495 + t185*(t1465 + t1468 + t1469 + t1504 + t1175*t167*t48 - 1.*t1175*t139*t9) + t139*(t1483 + t1489 + t1490 + t1510 - 1.*t1175*t48*t82 + t1175*t185*t9);
  p_output1[98]=t116*t1404 + t1450*t185 + (-1.*t1236*t139 + t1548 + t1559 + t1569 + t1574 - 1.*t1242*t167)*t185 + t139*(t1041*t116 + t1521 + t1523 + t1236*t185 + t1072*t413 + t1242*t82);
  p_output1[99]=t139*t1404 + t1450*t203 + t185*(-1.*t1311*t139 + t1603 + t1609 - 1.*t1324*t167 - 1.*t1041*t203 - 1.*t1072*t531) + t139*(t1091 + t1098 + t1099 + t1591 + t1311*t185 + t1324*t82);
  p_output1[100]=-1.*t142*t1659*t48 + t185*(-1.*t1035*t142*t48 - 1.*t1041*t142*t48) + t1632*t82 + t142*(-1.*t1072*t185 - 1.*t1072*t399 - 1.*t1035*t82 - 1.*t1041*t82)*t9;
  p_output1[101]=t1681 + t1730 + (t1114*t1127*t142 + t1127*t1131*t142 + t1696 + t1700 + t1701 + t1702)*t185 + t142*t9*(t1706 + t1707 + t1715 + t1721 + t1127*t48*t82 - 1.*t1127*t185*t9);
  p_output1[102]=t1681 + t1730 + (t1114*t1175*t142 + t1131*t1175*t142 + t1696 + t1701 + t1702 + t1737)*t185 + t142*t9*(t1706 + t1715 + t1721 + t1746 + t1175*t48*t82 - 1.*t1175*t185*t9);
  p_output1[103]=t116*t1632 + t142*(-1.*t1041*t116 + t1775 + t1777 - 1.*t1236*t185 - 1.*t1072*t413 - 1.*t1242*t82)*t9 + t185*(t1765 - 1.*t1242*t142*t48 + t1236*t142*t9);
  p_output1[104]=t139*t1632 + t142*(t1391 + t1392 + t1400 + t1817 - 1.*t1311*t185 - 1.*t1324*t82)*t9 + t185*(t1809 - 1.*t1324*t142*t48 + t1311*t142*t9);
  p_output1[105]=t1952*t329 - 1.*t1990*t313*t48 + t299*(t1891*t313*t48 + t1900*t313*t48) + t313*(t1940*t299 + t1891*t329 + t1900*t329 + t1940*t697)*t9;
  p_output1[106]=t1997 + t2074 + t299*(t2009 + t2010 + t2015 + t2019 - 1.*t1114*t2005*t313 - 1.*t1131*t2005*t313) + t313*t9*(t2030 + t2033 + t2060 + t2061 - 1.*t2005*t329*t48 + t2005*t299*t9);
  p_output1[107]=t1997 + t2074 + t299*(t2009 + t2015 + t2019 + t2101 - 1.*t1114*t2093*t313 - 1.*t1131*t2093*t313) + t313*t9*(t2030 + t2060 + t2061 + t2106 - 1.*t2093*t329*t48 + t2093*t299*t9);
  p_output1[108]=t1952*t342 + t313*(t2195 + t2196 + t2201 + t2202 + t2155*t299 + t2170*t329)*t9 + t299*(t2140 + t2170*t313*t48 - 1.*t2155*t313*t9);
  p_output1[109]=t1952*t364 + t313*(t2262 + t2263 + t2233*t299 + t2246*t329 + t1900*t364 + t1940*t748)*t9 + t299*(t2220 + t2246*t313*t48 - 1.*t2233*t313*t9);
  p_output1[110]=t2311*t262 + t2326*t329 + t299*(t1891*t262 + t1900*t262 + t1940*t342 + t1940*t566) + t342*(-1.*t1940*t299 - 1.*t1891*t329 - 1.*t1900*t329 - 1.*t1940*t697);
  p_output1[111]=t2361 + t2362 + t342*(t2331 + t2338 + t2342 + t2343 + t2005*t329*t48 - 1.*t2005*t299*t9) + t299*(t2346 + t2348 + t2354 + t2356 - 1.*t2005*t262*t48 + t2005*t342*t9);
  p_output1[112]=t2361 + t2362 + t342*(t2331 + t2342 + t2343 + t2369 + t2093*t329*t48 - 1.*t2093*t299*t9) + t299*(t2346 + t2354 + t2356 + t2378 - 1.*t2093*t262*t48 + t2093*t342*t9);
  p_output1[113]=t2311*t287 + t2326*t342 + (t2435 + t2441 + t2448 + t2458 - 1.*t2155*t299 - 1.*t2170*t329)*t342 + t299*(t2402 + t2403 + t2170*t262 + t1900*t287 + t2155*t342 + t1940*t615);
  p_output1[114]=t2311*t299 + t299*(t1976 + t1985 + t1989 + t2468 + t2246*t262 + t2233*t342) + t2326*t364 + t342*(t2475 + t2477 - 1.*t2233*t299 - 1.*t2246*t329 - 1.*t1900*t364 - 1.*t1940*t748);
  p_output1[115]=t2504*t262 - 1.*t2524*t313*t48 + t342*(-1.*t1891*t313*t48 - 1.*t1900*t313*t48) + t313*(-1.*t1891*t262 - 1.*t1900*t262 - 1.*t1940*t342 - 1.*t1940*t566)*t9;
  p_output1[116]=t2527 + t2563 + (t2532 + t2533 + t2534 + t2535 + t1114*t2005*t313 + t1131*t2005*t313)*t342 + t313*t9*(t2541 + t2542 + t2556 + t2557 + t2005*t262*t48 - 1.*t2005*t342*t9);
  p_output1[117]=t2527 + t2563 + (t2532 + t2534 + t2535 + t2569 + t1114*t2093*t313 + t1131*t2093*t313)*t342 + t313*t9*(t2541 + t2556 + t2557 + t2575 + t2093*t262*t48 - 1.*t2093*t342*t9);
  p_output1[118]=t2504*t287 + t313*(t2592 + t2596 - 1.*t2170*t262 - 1.*t1900*t287 - 1.*t2155*t342 - 1.*t1940*t615)*t9 + t342*(t2584 - 1.*t2170*t313*t48 + t2155*t313*t9);
  p_output1[119]=t2504*t299 + t313*(t2298 + t2303 + t2309 - 1.*t2246*t262 + t2630 - 1.*t2233*t342)*t9 + t342*(t2619 - 1.*t2246*t313*t48 + t2233*t313*t9);
  p_output1[120]=t2662 + t2703 + (t1134 + t1135 - 1.*t1127*t142 + t2664)*t433 + (t1149 + t1150 + t1127*t133 + t2669)*t472;
  p_output1[121]=t2662 + t2703 + (t1134 + t1185 - 1.*t1175*t142 + t2664)*t433 + (t1149 + t1198 + t1175*t133 + t2669)*t472;
  p_output1[122]=t2661*t379 + (t1214 - 1.*t1232*t142)*t433 + t472*(t1249 + t1255 + t1232*t133 + t2731 + t2739 + t1221*t61);
  p_output1[123]=(t1284 - 1.*t1309*t142)*t433 + t2661*t524 + t472*(t1309*t133 + t1333 + t1351 + t1032*t196 + t1291*t61 + t126*t976);
  p_output1[124]=t2792 + t2803 + (-1.*t1127*t133 + t1465 + t1466 + t2783)*t379 + t433*(t1483 + t1484 + t2795 + t1127*t78);
  p_output1[125]=t2792 + t2803 + (-1.*t1175*t133 + t1465 + t1504 + t2783)*t379 + t433*(t1483 + t1510 + t2795 + t1175*t78);
  p_output1[126]=t2802*t379 + (-1.*t1232*t133 + t1548 + t1559 + t2863 + t2864 + t2869)*t379 + t2790*t409 + t433*(t1032*t112 + t1521 + t1523 + t2837 + t2838 + t1232*t78);
  p_output1[127]=(-1.*t1309*t133 + t1603 + t1609 - 1.*t1032*t196 + t2901 + t2902)*t379 + t2790*t433 + t2802*t524 + t433*(t1091 + t1591 + t2681 + t2700 + t2884 + t1309*t78);
  p_output1[128]=t2920 + t2934 + (t1127*t142 + t1696 + t1700 + t2923)*t379 + t472*(t1706 + t1707 + t2929 - 1.*t1127*t78);
  p_output1[129]=t2920 + t2934 + (t1175*t142 + t1696 + t1737 + t2923)*t379 + t472*(t1706 + t1746 + t2929 - 1.*t1175*t78);
  p_output1[130]=(t1232*t142 + t1765)*t379 + t2918*t409 + t472*(-1.*t1032*t112 + t1775 + t1777 - 1.*t1221*t43 - 1.*t1232*t78 - 1.*t100*t976);
  p_output1[131]=(t1309*t142 + t1809)*t379 + t2918*t433 + t472*(t1391 + t1817 + t2786 + t2789 - 1.*t1291*t43 - 1.*t1309*t78);
  p_output1[132]=t2999 + t3021 + (t2009 + t2010 + t3005 - 1.*t2005*t313)*t625 + (t2030 + t2033 + t2005*t296 + t3012)*t637;
  p_output1[133]=t2999 + t3021 + (t2009 + t2101 + t3005 - 1.*t2093*t313)*t625 + (t2030 + t2106 + t2093*t296 + t3012)*t637;
  p_output1[134]=t2995*t551 + (t2140 - 1.*t2149*t313)*t625 + (t2195 + t2196 + t2143*t291 + t2149*t296 + t3045 + t3057)*t637;
  p_output1[135]=(t2220 - 1.*t2230*t313)*t625 + (t2262 + t2263 + t1839*t280 + t2225*t291 + t2230*t296 + t1889*t355)*t637 + t2995*t740;
  p_output1[136]=t3134 + t3156 + (t2331 + t2338 - 1.*t2005*t296 + t3121)*t551 + (t2346 + t2348 + t2005*t259 + t3140)*t625;
  p_output1[137]=t3134 + t3156 + (t2331 + t2369 - 1.*t2093*t296 + t3121)*t551 + (t2346 + t2378 + t2093*t259 + t3140)*t625;
  p_output1[138]=t3152*t551 + (t2435 + t2441 - 1.*t2149*t296 + t3218 + t3220 + t3224)*t551 + t3131*t593 + (t2402 + t2403 + t2149*t259 + t1889*t284 + t3183 + t3188)*t625;
  p_output1[139]=(t2475 + t2477 - 1.*t2230*t296 + t3269 + t3273 - 1.*t1889*t355)*t551 + t3131*t625 + (t1976 + t2468 + t2230*t259 + t3016 + t3017 + t3250)*t625 + t3152*t740;
  p_output1[140]=t3300 + t3323 + (t2532 + t2533 + t2005*t313 + t3307)*t551 + (t2541 + t2542 - 1.*t2005*t259 + t3314)*t637;
  p_output1[141]=t3300 + t3323 + (t2532 + t2569 + t2093*t313 + t3307)*t551 + (t2541 + t2575 - 1.*t2093*t259 + t3314)*t637;
  p_output1[142]=(t2584 + t2149*t313)*t551 + t3296*t593 + (-1.*t2143*t244 - 1.*t1839*t249 - 1.*t2149*t259 + t2592 + t2596 - 1.*t1889*t284)*t637;
  p_output1[143]=(t2619 + t2230*t313)*t551 + t3296*t625 + (t2298 - 1.*t2225*t244 - 1.*t2230*t259 + t2630 + t3128 + t3130)*t637;
  p_output1[144]=t61*(t1010*t51 - 1.*t1163*t51 + t1020*t71 + t1171*t71);
  p_output1[145]=t3408*t43;
  p_output1[146]=t126*t3408;
  p_output1[147]=t43*(-1.*t1020*t126*t51 - 1.*t1171*t126*t51 + t1010*t126*t71 - 1.*t1163*t126*t71) + t61*(t1020*t51*t61 + t1171*t51*t61 - 1.*t1010*t61*t71 + t1163*t61*t71);
  p_output1[148]=t100*t3474 + t3531*t43 + t43*(t2863 + t2864 - 1.*t1010*t51*t61 - 1.*t1020*t61*t71 - 1.*t126*t3494*t976 - 1.*t126*t3499*t976) + t61*(t2837 + t2838 + t1010*t43*t51 + t1020*t43*t71 + t3494*t61*t976 + t3499*t61*t976);
  p_output1[149]=t126*t3531 + t3474*t61 + t43*(t2901 + t2902 - 1.*t126*t1271*t3494 - 1.*t126*t1271*t3499 - 1.*t100*t1010*t51 - 1.*t100*t1020*t71) + t61*(t2681 + t2884 + t1010*t126*t51 + t1271*t3494*t61 + t1271*t3499*t61 + t1020*t126*t71);
  p_output1[150]=t43*(-1.*t1010*t51 + t1163*t51 - 1.*t1020*t71 - 1.*t1171*t71);
  p_output1[151]=t100*t3602;
  p_output1[152]=t3602*t61;
  p_output1[153]=(-1.*t1870*t246 + t2087*t246 - 1.*t1880*t253 - 1.*t2083*t253)*t291;
  p_output1[154]=t244*t3631;
  p_output1[155]=t280*t3631;
  p_output1[156]=t244*(-1.*t1880*t244*t246 - 1.*t2083*t244*t246 + t1870*t244*t253 - 1.*t2087*t244*t253) + (t1880*t246*t249 + t2083*t246*t249 - 1.*t1870*t249*t253 + t2087*t249*t253)*t291;
  p_output1[157]=t244*(-1.*t1870*t246*t249 - 1.*t1880*t249*t253 + t3218 + t3220 - 1.*t2133*t244*t3687 - 1.*t2133*t244*t3692) + t291*(t1870*t246*t280 + t1880*t253*t280 + t3183 + t3188 + t2133*t249*t3687 + t2133*t249*t3692) + t249*t3723 + t244*t3750;
  p_output1[158]=t244*(-1.*t1870*t246*t291 - 1.*t1880*t253*t291 + t3269 + t3273 - 1.*t2213*t244*t3687 - 1.*t2213*t244*t3692) + t291*(t1870*t244*t246 + t1880*t244*t253 + t3016 + t3250 + t2213*t249*t3687 + t2213*t249*t3692) + t291*t3723 + t280*t3750;
  p_output1[159]=t244*(t1870*t246 - 1.*t2087*t246 + t1880*t253 + t2083*t253);
  p_output1[160]=t249*t3818;
  p_output1[161]=t291*t3818;
  p_output1[162]=t100*t3827 + t3847*t43 + (t2681 + t2837 + t2838 + t1006*t43)*t61 + t43*(t2863 + t2864 + t2901 - 1.*t1006*t61);
  p_output1[163]=t126*t3847 + (-1.*t100*t1006 - 1.*t126*t1271 + t2901 + t2902)*t43 + t3827*t61 + t61*(t1006*t126 + t2681 + t2884 + t1271*t61);
  p_output1[164]=t3903;
  p_output1[165]=t3903;
  p_output1[166]=0.28121*t15 - 0.305*Power(t15,2) - 1.*t15*t963;
  p_output1[167]=-0.28121*t28 + 0.305*t15*t28 + t28*t963;
  p_output1[168]=t3971;
  p_output1[169]=t3971;
  p_output1[170]=t291*(t2133*t249 + t1868*t280 + t3183 + t3188) + t244*(-1.*t2133*t244 - 1.*t1868*t249 + t3218 + t3220) + t244*t3975 + t249*t4050;
  p_output1[171]=t291*(t1868*t244 + t2213*t249 + t3016 + t3250) + t244*(-1.*t2213*t244 - 1.*t1868*t291 + t3269 + t3273) + t280*t3975 + t291*t4050;
  p_output1[172]=0.28121*t215 + t1834*t215 - 0.305*Power(t215,2);
  p_output1[173]=-0.28121*t236 - 1.*t1834*t236 + 0.305*t215*t236;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance2.hh"

namespace SymFunction
{

void J_Je_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
