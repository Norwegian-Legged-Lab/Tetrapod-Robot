/*
 * Automatically Generated from Mathematica.
 * Wed 8 Jun 2022 19:39:05 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1740;
  double t34;
  double t1726;
  double t1752;
  double t2136;
  double t2144;
  double t2147;
  double t7;
  double t2133;
  double t2190;
  double t2132;
  double t2193;
  double t2383;
  double t2391;
  double t2392;
  double t2393;
  double t1956;
  double t1735;
  double t1753;
  double t1953;
  double t2553;
  double t2555;
  double t2558;
  double t2596;
  double t2597;
  double t2602;
  double t2610;
  double t2560;
  double t2561;
  double t2568;
  double t2633;
  double t2673;
  double t2674;
  double t2675;
  double t2161;
  double t2194;
  double t2365;
  double t2395;
  double t2397;
  double t2402;
  double t2850;
  double t2814;
  double t2819;
  double t2852;
  double t2936;
  double t2939;
  double t2945;
  double t2968;
  double t2932;
  double t3009;
  double t3012;
  double t3021;
  double t3032;
  double t3043;
  double t3044;
  double t3047;
  double t2845;
  double t2872;
  double t2889;
  double t3269;
  double t3271;
  double t3272;
  double t3276;
  double t3165;
  double t3167;
  double t3172;
  double t3177;
  double t3183;
  double t3193;
  double t3306;
  double t3311;
  double t3323;
  double t3326;
  double t2957;
  double t2990;
  double t2997;
  double t1955;
  double t2378;
  double t2380;
  double t3383;
  double t3432;
  double t3485;
  double t3490;
  double t3491;
  double t2404;
  double t2410;
  double t2431;
  double t2611;
  double t2613;
  double t2632;
  double t2579;
  double t2585;
  double t2586;
  double t3601;
  double t3602;
  double t3603;
  double t3563;
  double t3565;
  double t3566;
  double t3623;
  double t3625;
  double t3626;
  double t3398;
  double t3408;
  double t3424;
  double t2737;
  double t2752;
  double t2794;
  double t2931;
  double t3002;
  double t3008;
  double t3713;
  double t3718;
  double t3722;
  double t3057;
  double t3076;
  double t3079;
  double t3295;
  double t3304;
  double t3305;
  double t3236;
  double t3251;
  double t3253;
  double t3840;
  double t3844;
  double t3845;
  double t3754;
  double t3771;
  double t3773;
  double t3895;
  double t3896;
  double t3900;
  double t3662;
  double t3663;
  double t3665;
  double t3366;
  double t3371;
  double t3374;
  double t3630;
  double t3636;
  double t3638;
  double t3456;
  double t3457;
  double t3460;
  double t3978;
  double t3979;
  double t3981;
  double t3495;
  double t3496;
  double t3502;
  double t3520;
  double t3538;
  double t3539;
  double t3587;
  double t3588;
  double t3594;
  double t4018;
  double t4019;
  double t4020;
  double t3567;
  double t3575;
  double t3576;
  double t3608;
  double t3609;
  double t3614;
  double t4026;
  double t4028;
  double t4033;
  double t3639;
  double t3642;
  double t3648;
  double t3654;
  double t3657;
  double t3659;
  double t3901;
  double t3914;
  double t3921;
  double t3687;
  double t3695;
  double t3711;
  double t4064;
  double t4083;
  double t4090;
  double t3724;
  double t3725;
  double t3726;
  double t3728;
  double t3734;
  double t3735;
  double t3804;
  double t3806;
  double t3812;
  double t4161;
  double t4171;
  double t4172;
  double t3781;
  double t3787;
  double t3791;
  double t3856;
  double t3860;
  double t3862;
  double t4178;
  double t4179;
  double t4180;
  double t3924;
  double t3926;
  double t3928;
  double t3944;
  double t3948;
  double t3952;
  double t2551;
  double t2569;
  double t2570;
  double t4218;
  double t4223;
  double t4224;
  double t4237;
  double t4255;
  double t4314;
  double t4315;
  double t4336;
  double t4342;
  double t4368;
  double t4369;
  double t4388;
  double t4401;
  double t4211;
  double t4270;
  double t4294;
  double t4310;
  double t4316;
  double t4412;
  double t4415;
  double t4417;
  double t4420;
  double t4428;
  double t4440;
  double t4441;
  double t4442;
  double t4669;
  double t4714;
  double t4768;
  double t4783;
  double t4785;
  double t4313;
  double t4723;
  double t4744;
  double t4805;
  double t4806;
  double t4807;
  double t4793;
  double t4794;
  double t4796;
  double t4798;
  double t4804;
  double t4808;
  double t4809;
  double t4882;
  double t4896;
  double t4906;
  double t4821;
  double t4822;
  double t4823;
  double t4831;
  double t4870;
  double t4924;
  double t4881;
  double t4914;
  double t5161;
  double t5166;
  double t5168;
  double t5184;
  double t5185;
  double t5193;
  double t5203;
  double t4934;
  double t5009;
  double t5105;
  double t5216;
  double t5221;
  double t5226;
  double t5116;
  double t5123;
  double t5136;
  double t5281;
  double t5284;
  double t5285;
  double t5294;
  double t5316;
  double t5317;
  double t5328;
  double t2697;
  double t2702;
  double t2707;
  double t5274;
  double t5276;
  double t5277;
  double t5312;
  double t5333;
  double t5347;
  double t5354;
  double t5358;
  double t5360;
  double t5402;
  double t5404;
  double t5406;
  double t5415;
  double t5417;
  double t5439;
  double t5443;
  double t5488;
  double t2725;
  double t2807;
  double t2811;
  double t5407;
  double t5408;
  double t5409;
  double t5419;
  double t5496;
  double t5497;
  double t5513;
  double t5615;
  double t5673;
  double t5385;
  double t5392;
  double t5393;
  double t5784;
  double t5792;
  double t5793;
  double t5794;
  double t5806;
  double t5811;
  double t5822;
  double t5823;
  double t5835;
  double t5840;
  double t5859;
  double t5862;
  double t5864;
  double t2403;
  double t2434;
  double t2450;
  double t5895;
  double t5901;
  double t5913;
  double t6081;
  double t6082;
  double t6083;
  double t6084;
  double t6093;
  double t6098;
  double t6103;
  double t6109;
  double t6110;
  double t6115;
  double t6123;
  double t6125;
  double t6146;
  double t3174;
  double t3217;
  double t3234;
  double t6208;
  double t6213;
  double t6215;
  double t6235;
  double t6239;
  double t7964;
  double t7965;
  double t8008;
  double t8176;
  double t8180;
  double t8183;
  double t8184;
  double t8187;
  double t8188;
  double t6201;
  double t6243;
  double t6337;
  double t6367;
  double t8204;
  double t8206;
  double t8224;
  double t8366;
  double t8385;
  double t8386;
  double t8390;
  double t8401;
  double t8410;
  double t8425;
  double t8429;
  double t8436;
  double t6412;
  double t8414;
  double t8416;
  double t8630;
  double t8634;
  double t8639;
  double t8451;
  double t8618;
  double t8620;
  double t8621;
  double t8628;
  double t8641;
  double t8642;
  double t8704;
  double t8708;
  double t8709;
  double t8686;
  double t8687;
  double t8690;
  double t8692;
  double t8702;
  double t8807;
  double t8984;
  double t8987;
  double t8989;
  double t8990;
  double t8991;
  double t8996;
  double t8997;
  double t8998;
  double t8810;
  double t8820;
  double t8835;
  double t9008;
  double t9010;
  double t9014;
  double t8930;
  double t8934;
  double t8969;
  double t9065;
  double t9074;
  double t9078;
  double t9094;
  double t9125;
  double t9126;
  double t9132;
  double t9135;
  double t9137;
  double t3332;
  double t3337;
  double t3342;
  double t9102;
  double t9110;
  double t9111;
  double t9129;
  double t9138;
  double t9169;
  double t9212;
  double t9225;
  double t9241;
  double t9297;
  double t9301;
  double t9317;
  double t9318;
  double t9319;
  double t9323;
  double t9327;
  double t9330;
  double t3364;
  double t3375;
  double t3378;
  double t9305;
  double t9308;
  double t9310;
  double t9322;
  double t9331;
  double t9332;
  double t9337;
  double t9340;
  double t9344;
  double t9258;
  double t9278;
  double t9279;
  double t9418;
  double t9421;
  double t9422;
  double t9423;
  double t9454;
  double t9460;
  double t9474;
  double t9485;
  double t9531;
  double t9553;
  double t9564;
  double t9609;
  double t9610;
  double t3042;
  double t3143;
  double t3163;
  double t9708;
  double t9717;
  double t9734;
  double t9878;
  double t9880;
  double t9898;
  double t9899;
  double t9919;
  double t9929;
  double t9950;
  double t9955;
  double t9956;
  double t9978;
  double t9983;
  double t9984;
  double t9991;
  double t4931;
  double t5112;
  double t10091;
  double t10094;
  double t10096;
  double t5237;
  double t10098;
  double t5250;
  double t10104;
  double t10109;
  double t10110;
  double t10111;
  double t10113;
  double t5280;
  double t5384;
  double t5414;
  double t5714;
  double t5720;
  double t5814;
  double t5836;
  double t10159;
  double t10166;
  double t5867;
  double t10220;
  double t10226;
  double t10230;
  double t10232;
  double t10236;
  double t5872;
  double t10249;
  double t10257;
  double t10259;
  double t5882;
  double t5884;
  double t5892;
  double t5995;
  double t6056;
  double t6060;
  double t6104;
  double t6117;
  double t10303;
  double t10311;
  double t10349;
  double t10358;
  double t10359;
  double t6151;
  double t10361;
  double t6154;
  double t10368;
  double t10371;
  double t10372;
  double t6160;
  double t6166;
  double t6167;
  double t6175;
  double t6181;
  double t8809;
  double t8836;
  double t10427;
  double t10428;
  double t10429;
  double t9021;
  double t10431;
  double t9029;
  double t10436;
  double t10443;
  double t10444;
  double t10445;
  double t10448;
  double t9118;
  double t9257;
  double t9311;
  double t9352;
  double t9353;
  double t9461;
  double t9541;
  double t10488;
  double t10492;
  double t9612;
  double t10522;
  double t10535;
  double t10537;
  double t10540;
  double t10541;
  double t9627;
  double t10543;
  double t10549;
  double t10550;
  double t9656;
  double t9662;
  double t9703;
  double t9747;
  double t9785;
  double t9786;
  double t9951;
  double t9979;
  double t10607;
  double t10616;
  double t10645;
  double t10653;
  double t10654;
  double t9996;
  double t10665;
  double t10015;
  double t10681;
  double t10707;
  double t10711;
  double t10032;
  double t10050;
  double t10051;
  double t10071;
  double t10079;
  double t10785;
  double t10791;
  double t10792;
  double t10281;
  double t10282;
  double t10828;
  double t10830;
  double t10304;
  double t10823;
  double t10825;
  double t10826;
  double t10325;
  double t10332;
  double t10334;
  double t10843;
  double t10844;
  double t10845;
  double t10896;
  double t10900;
  double t10902;
  double t10915;
  double t10916;
  double t10917;
  double t10575;
  double t10578;
  double t10945;
  double t10947;
  double t10609;
  double t10956;
  double t10957;
  double t10958;
  double t10628;
  double t10980;
  double t10983;
  double t10988;
  double t10634;
  double t10638;
  double t11016;
  double t11017;
  double t11018;
  double t11021;
  double t11022;
  double t11028;
  double t11036;
  double t11077;
  double t11083;
  double t11087;
  double t11097;
  double t11098;
  double t11102;
  double t11103;
  double t11104;
  double t11113;
  double t11114;
  t1740 = Cos(var1[13]);
  t34 = Cos(var1[14]);
  t1726 = Sin(var1[13]);
  t1752 = Sin(var1[14]);
  t2136 = t1740*t34;
  t2144 = t1726*t1752;
  t2147 = t2136 + t2144;
  t7 = Cos(var1[4]);
  t2133 = Cos(var1[5]);
  t2190 = Sin(var1[12]);
  t2132 = Cos(var1[12]);
  t2193 = Sin(var1[5]);
  t2383 = -1.*t2133*t2190*t2147;
  t2391 = -1.*t2132*t2147*t2193;
  t2392 = t2383 + t2391;
  t2393 = t7*t2392;
  t1956 = Sin(var1[4]);
  t1735 = -1.*t34*t1726;
  t1753 = t1740*t1752;
  t1953 = t1735 + t1753;
  t2553 = t34*t1726;
  t2555 = -1.*t1740*t1752;
  t2558 = t2553 + t2555;
  t2596 = -1.*t2132*t2133;
  t2597 = t2190*t2193;
  t2602 = t2596 + t2597;
  t2610 = t7*t2602;
  t2560 = t2132*t2133*t2558;
  t2561 = -1.*t2190*t2558*t2193;
  t2568 = t2560 + t2561;
  t2633 = -1.*t2133*t2190*t2558;
  t2673 = -1.*t2132*t2558*t2193;
  t2674 = t2633 + t2673;
  t2675 = t7*t2674;
  t2161 = t2132*t2133*t2147;
  t2194 = -1.*t2190*t2147*t2193;
  t2365 = t2161 + t2194;
  t2395 = -1.*t1740*t34;
  t2397 = -1.*t1726*t1752;
  t2402 = t2395 + t2397;
  t2850 = Cos(var1[16]);
  t2814 = Cos(var1[17]);
  t2819 = Sin(var1[16]);
  t2852 = Sin(var1[17]);
  t2936 = -1.*t2850*t2814;
  t2939 = -1.*t2819*t2852;
  t2945 = t2936 + t2939;
  t2968 = Sin(var1[15]);
  t2932 = Cos(var1[15]);
  t3009 = -1.*t2133*t2968*t2945;
  t3012 = -1.*t2932*t2945*t2193;
  t3021 = t3009 + t3012;
  t3032 = t7*t3021;
  t3043 = t2814*t2819;
  t3044 = -1.*t2850*t2852;
  t3047 = t3043 + t3044;
  t2845 = -1.*t2814*t2819;
  t2872 = t2850*t2852;
  t2889 = t2845 + t2872;
  t3269 = t2932*t2133;
  t3271 = -1.*t2968*t2193;
  t3272 = t3269 + t3271;
  t3276 = t7*t3272;
  t3165 = t2850*t2814;
  t3167 = t2819*t2852;
  t3172 = t3165 + t3167;
  t3177 = t2932*t2133*t2889;
  t3183 = -1.*t2968*t2889*t2193;
  t3193 = t3177 + t3183;
  t3306 = -1.*t2133*t2968*t2889;
  t3311 = -1.*t2932*t2889*t2193;
  t3323 = t3306 + t3311;
  t3326 = t7*t3323;
  t2957 = t2932*t2133*t2945;
  t2990 = -1.*t2968*t2945*t2193;
  t2997 = t2957 + t2990;
  t1955 = t7*t1953;
  t2378 = -1.*t1956*t2365;
  t2380 = t1955 + t2378;
  t3383 = Sin(var1[3]);
  t3432 = Cos(var1[3]);
  t3485 = t3383*t1956*t2392;
  t3490 = t3432*t2365;
  t3491 = t3485 + t3490;
  t2404 = t2132*t2133*t1953;
  t2410 = -1.*t2190*t1953*t2193;
  t2431 = t2404 + t2410;
  t2611 = t7*t2147;
  t2613 = -1.*t1956*t2568;
  t2632 = t2611 + t2613;
  t2579 = -1.*t2133*t2190;
  t2585 = -1.*t2132*t2193;
  t2586 = t2579 + t2585;
  t3601 = t3432*t2586;
  t3602 = t3383*t1956*t2602;
  t3603 = t3601 + t3602;
  t3563 = t2133*t2190*t2558;
  t3565 = t2132*t2558*t2193;
  t3566 = t3563 + t3565;
  t3623 = t3383*t1956*t2674;
  t3625 = t3432*t2568;
  t3626 = t3623 + t3625;
  t3398 = t2133*t2190*t2147;
  t3408 = t2132*t2147*t2193;
  t3424 = t3398 + t3408;
  t2737 = t2132*t2133*t2402;
  t2752 = -1.*t2190*t2402*t2193;
  t2794 = t2737 + t2752;
  t2931 = t7*t2889;
  t3002 = -1.*t1956*t2997;
  t3008 = t2931 + t3002;
  t3713 = t3383*t1956*t3021;
  t3718 = t3432*t2997;
  t3722 = t3713 + t3718;
  t3057 = t2932*t2133*t3047;
  t3076 = -1.*t2968*t3047*t2193;
  t3079 = t3057 + t3076;
  t3295 = t7*t3172;
  t3304 = -1.*t1956*t3193;
  t3305 = t3295 + t3304;
  t3236 = t2133*t2968;
  t3251 = t2932*t2193;
  t3253 = t3236 + t3251;
  t3840 = t3432*t3253;
  t3844 = t3383*t1956*t3272;
  t3845 = t3840 + t3844;
  t3754 = t2133*t2968*t2889;
  t3771 = t2932*t2889*t2193;
  t3773 = t3754 + t3771;
  t3895 = t3383*t1956*t3323;
  t3896 = t3432*t3193;
  t3900 = t3895 + t3896;
  t3662 = t2133*t2968*t2945;
  t3663 = t2932*t2945*t2193;
  t3665 = t3662 + t3663;
  t3366 = t2932*t2133*t3172;
  t3371 = -1.*t2968*t3172*t2193;
  t3374 = t3366 + t3371;
  t3630 = t3432*t3424;
  t3636 = -1.*t3383*t2380;
  t3638 = t3630 + t3636;
  t3456 = -1.*t1953*t1956;
  t3457 = -1.*t7*t2365;
  t3460 = t3456 + t3457;
  t3978 = -1.*t3432*t1956*t2392;
  t3979 = t3383*t2365;
  t3981 = t3978 + t3979;
  t3495 = t2133*t2190*t1953;
  t3496 = t2132*t1953*t2193;
  t3502 = t3495 + t3496;
  t3520 = t7*t2402;
  t3538 = -1.*t1956*t2431;
  t3539 = t3520 + t3538;
  t3587 = t2132*t2133;
  t3588 = -1.*t2190*t2193;
  t3594 = t3587 + t3588;
  t4018 = t3383*t2586;
  t4019 = -1.*t3432*t1956*t2602;
  t4020 = t4018 + t4019;
  t3567 = t3432*t3566;
  t3575 = -1.*t3383*t2632;
  t3576 = t3567 + t3575;
  t3608 = -1.*t2147*t1956;
  t3609 = -1.*t7*t2568;
  t3614 = t3608 + t3609;
  t4026 = -1.*t3432*t1956*t2674;
  t4028 = t3383*t2568;
  t4033 = t4026 + t4028;
  t3639 = t2133*t2190*t2402;
  t3642 = t2132*t2402*t2193;
  t3648 = t3639 + t3642;
  t3654 = t7*t2558;
  t3657 = -1.*t1956*t2794;
  t3659 = t3654 + t3657;
  t3901 = t3432*t3665;
  t3914 = -1.*t3383*t3008;
  t3921 = t3901 + t3914;
  t3687 = -1.*t2889*t1956;
  t3695 = -1.*t7*t2997;
  t3711 = t3687 + t3695;
  t4064 = -1.*t3432*t1956*t3021;
  t4083 = t3383*t2997;
  t4090 = t4064 + t4083;
  t3724 = t2133*t2968*t3047;
  t3725 = t2932*t3047*t2193;
  t3726 = t3724 + t3725;
  t3728 = t7*t2945;
  t3734 = -1.*t1956*t3079;
  t3735 = t3728 + t3734;
  t3804 = -1.*t2932*t2133;
  t3806 = t2968*t2193;
  t3812 = t3804 + t3806;
  t4161 = t3383*t3253;
  t4171 = -1.*t3432*t1956*t3272;
  t4172 = t4161 + t4171;
  t3781 = t3432*t3773;
  t3787 = -1.*t3383*t3305;
  t3791 = t3781 + t3787;
  t3856 = -1.*t3172*t1956;
  t3860 = -1.*t7*t3193;
  t3862 = t3856 + t3860;
  t4178 = -1.*t3432*t1956*t3323;
  t4179 = t3383*t3193;
  t4180 = t4178 + t4179;
  t3924 = t2133*t2968*t3172;
  t3926 = t2932*t3172*t2193;
  t3928 = t3924 + t3926;
  t3944 = t7*t3047;
  t3948 = -1.*t1956*t3374;
  t3952 = t3944 + t3948;
  t2551 = t2147*t1956;
  t2569 = t7*t2568;
  t2570 = t2551 + t2569;
  t4218 = -1.*t34;
  t4223 = 1. + t4218;
  t4224 = 0.50321*t4223;
  t4237 = 0.19821*t34;
  t4255 = t4224 + t4237;
  t4314 = -1.*t2132;
  t4315 = 1. + t4314;
  t4336 = -1.*t1740;
  t4342 = 1. + t4336;
  t4368 = 0.28121*t4342;
  t4369 = t1740*t4255;
  t4388 = -0.305*t1726*t1752;
  t4401 = t4368 + t4369 + t4388;
  t4211 = 0.28121*t1726;
  t4270 = -1.*t4255*t1726;
  t4294 = -0.305*t1740*t1752;
  t4310 = t4211 + t4270 + t4294;
  t4316 = 0.15121*t4315;
  t4412 = t2132*t4401;
  t4415 = t4316 + t4412;
  t4417 = t2133*t4415;
  t4420 = -0.15121*t4315;
  t4428 = -0.15121*t2132;
  t4440 = -0.15121*t2190;
  t4441 = t2190*t4401;
  t4442 = t4420 + t4428 + t4440 + t4441;
  t4669 = -1.*t4442*t2193;
  t4714 = t4417 + t4669;
  t4768 = t4310*t1956;
  t4783 = t7*t4714;
  t4785 = t4768 + t4783;
  t4313 = -1.*t4310*t1956;
  t4723 = -1.*t7*t4714;
  t4744 = t4313 + t4723;
  t4805 = t7*t4310;
  t4806 = -1.*t1956*t4714;
  t4807 = t4805 + t4806;
  t4793 = t2133*t4442;
  t4794 = t4415*t2193;
  t4796 = t4793 + t4794;
  t4798 = -1.*t3594*t4796;
  t4804 = -1.*t7*t2586*t4785;
  t4808 = t1956*t2586*t4807;
  t4809 = t4798 + t4804 + t4808;
  t4882 = -1.*t2133*t4442;
  t4896 = -1.*t4415*t2193;
  t4906 = t4882 + t4896;
  t4821 = t3566*t4796;
  t4822 = t2570*t4785;
  t4823 = t2632*t4807;
  t4831 = t4821 + t4822 + t4823;
  t4870 = t7*t2674*t4809;
  t4924 = -1.*t2586*t4796;
  t4881 = Power(t7,2);
  t4914 = Power(t1956,2);
  t5161 = 0.15121*t2190;
  t5166 = -1.*t2190*t4401;
  t5168 = t5161 + t5166;
  t5184 = t2133*t5168;
  t5185 = t4428 + t4412;
  t5193 = -1.*t5185*t2193;
  t5203 = t5184 + t5193;
  t4934 = -1.*t7*t2602*t4785;
  t5009 = t1956*t2602*t4807;
  t5105 = t2568*t4796;
  t5216 = t2133*t5185;
  t5221 = t5168*t2193;
  t5226 = t5216 + t5221;
  t5116 = t7*t2674*t4785;
  t5123 = -1.*t1956*t2674*t4807;
  t5136 = t7*t2602*t4831;
  t5281 = 0.28121*t1740;
  t5284 = -1.*t1740*t4255;
  t5285 = 0.305*t1726*t1752;
  t5294 = t5281 + t5284 + t5285;
  t5316 = t2132*t2133*t4310;
  t5317 = -1.*t2190*t4310*t2193;
  t5328 = t5316 + t5317;
  t2697 = t1953*t1956;
  t2702 = t7*t2365;
  t2707 = t2697 + t2702;
  t5274 = t2133*t2190*t4310;
  t5276 = t2132*t4310*t2193;
  t5277 = t5274 + t5276;
  t5312 = t5294*t1956;
  t5333 = t7*t5328;
  t5347 = t5312 + t5333;
  t5354 = t7*t5294;
  t5358 = -1.*t1956*t5328;
  t5360 = t5354 + t5358;
  t5402 = -0.305*t34*t1726;
  t5404 = 0.305*t1740*t1752;
  t5406 = t5402 + t5404;
  t5415 = -0.305*t1740*t34;
  t5417 = t5415 + t4388;
  t5439 = t2132*t2133*t5406;
  t5443 = -1.*t2190*t5406*t2193;
  t5488 = t5439 + t5443;
  t2725 = t2558*t1956;
  t2807 = t7*t2794;
  t2811 = t2725 + t2807;
  t5407 = t2133*t2190*t5406;
  t5408 = t2132*t5406*t2193;
  t5409 = t5407 + t5408;
  t5419 = t5417*t1956;
  t5496 = t7*t5488;
  t5497 = t5419 + t5496;
  t5513 = t7*t5417;
  t5615 = -1.*t1956*t5488;
  t5673 = t5513 + t5615;
  t5385 = t3424*t4796;
  t5392 = t2707*t4785;
  t5393 = t2380*t4807;
  t5784 = -1.*t3566*t4796;
  t5792 = -1.*t2570*t4785;
  t5793 = -1.*t2632*t4807;
  t5794 = t5784 + t5792 + t5793;
  t5806 = t5385 + t5392 + t5393;
  t5811 = -1.*t2568*t4796;
  t5822 = -1.*t7*t2674*t4785;
  t5823 = t1956*t2674*t4807;
  t5835 = t2365*t4796;
  t5840 = t7*t2392*t4785;
  t5859 = -1.*t1956*t2392*t4807;
  t5862 = t7*t2392*t5794;
  t5864 = t7*t2674*t5806;
  t2403 = t2402*t1956;
  t2434 = t7*t2431;
  t2450 = t2403 + t2434;
  t5895 = -1.*t3424*t4796;
  t5901 = -1.*t2707*t4785;
  t5913 = -1.*t2380*t4807;
  t6081 = t3594*t4796;
  t6082 = t7*t2586*t4785;
  t6083 = -1.*t1956*t2586*t4807;
  t6084 = t6081 + t6082 + t6083;
  t6093 = t5895 + t5901 + t5913;
  t6098 = t7*t2392*t6084;
  t6103 = t2586*t4796;
  t6109 = t7*t2602*t4785;
  t6110 = -1.*t1956*t2602*t4807;
  t6115 = -1.*t2365*t4796;
  t6123 = -1.*t7*t2392*t4785;
  t6125 = t1956*t2392*t4807;
  t6146 = t7*t2602*t6093;
  t3174 = t3172*t1956;
  t3217 = t7*t3193;
  t3234 = t3174 + t3217;
  t6208 = -1.*t2814;
  t6213 = 1. + t6208;
  t6215 = -0.50321*t6213;
  t6235 = -0.19821*t2814;
  t6239 = t6215 + t6235;
  t7964 = -1.*t2932;
  t7965 = 1. + t7964;
  t8008 = -0.15121*t7965;
  t8176 = -1.*t2850;
  t8180 = 1. + t8176;
  t8183 = -0.28121*t8180;
  t8184 = t2850*t6239;
  t8187 = 0.305*t2819*t2852;
  t8188 = t8183 + t8184 + t8187;
  t6201 = 0.28121*t2819;
  t6243 = t6239*t2819;
  t6337 = -0.305*t2850*t2852;
  t6367 = t6201 + t6243 + t6337;
  t8204 = t2932*t8188;
  t8206 = t8008 + t8204;
  t8224 = t2133*t8206;
  t8366 = -0.15121*t2932;
  t8385 = 0.15121*t2968;
  t8386 = t2968*t8188;
  t8390 = t8008 + t8366 + t8385 + t8386;
  t8401 = -1.*t8390*t2193;
  t8410 = t8224 + t8401;
  t8425 = t6367*t1956;
  t8429 = t7*t8410;
  t8436 = t8425 + t8429;
  t6412 = -1.*t6367*t1956;
  t8414 = -1.*t7*t8410;
  t8416 = t6412 + t8414;
  t8630 = t7*t6367;
  t8634 = -1.*t1956*t8410;
  t8639 = t8630 + t8634;
  t8451 = t2133*t8390;
  t8618 = t8206*t2193;
  t8620 = t8451 + t8618;
  t8621 = -1.*t3812*t8620;
  t8628 = -1.*t7*t3253*t8436;
  t8641 = t1956*t3253*t8639;
  t8642 = t8621 + t8628 + t8641;
  t8704 = -1.*t2133*t8390;
  t8708 = -1.*t8206*t2193;
  t8709 = t8704 + t8708;
  t8686 = t3773*t8620;
  t8687 = t3234*t8436;
  t8690 = t3305*t8639;
  t8692 = t8686 + t8687 + t8690;
  t8702 = t7*t3323*t8642;
  t8807 = -1.*t3253*t8620;
  t8984 = -0.15121*t2968;
  t8987 = -1.*t2968*t8188;
  t8989 = t8984 + t8987;
  t8990 = t2133*t8989;
  t8991 = 0.15121*t2932;
  t8996 = t8991 + t8204;
  t8997 = -1.*t8996*t2193;
  t8998 = t8990 + t8997;
  t8810 = -1.*t7*t3272*t8436;
  t8820 = t1956*t3272*t8639;
  t8835 = t3193*t8620;
  t9008 = t2133*t8996;
  t9010 = t8989*t2193;
  t9014 = t9008 + t9010;
  t8930 = t7*t3323*t8436;
  t8934 = -1.*t1956*t3323*t8639;
  t8969 = t7*t3272*t8692;
  t9065 = -0.28121*t2819;
  t9074 = -1.*t6239*t2819;
  t9078 = 0.305*t2850*t2852;
  t9094 = t9065 + t9074 + t9078;
  t9125 = 0.28121*t2850;
  t9126 = t9125 + t8184 + t8187;
  t9132 = t2932*t2133*t9094;
  t9135 = -1.*t2968*t9094*t2193;
  t9137 = t9132 + t9135;
  t3332 = t2889*t1956;
  t3337 = t7*t2997;
  t3342 = t3332 + t3337;
  t9102 = t2133*t2968*t9094;
  t9110 = t2932*t9094*t2193;
  t9111 = t9102 + t9110;
  t9129 = t9126*t1956;
  t9138 = t7*t9137;
  t9169 = t9129 + t9138;
  t9212 = t7*t9126;
  t9225 = -1.*t1956*t9137;
  t9241 = t9212 + t9225;
  t9297 = 0.305*t2814*t2819;
  t9301 = t9297 + t6337;
  t9317 = -0.305*t2850*t2814;
  t9318 = -0.305*t2819*t2852;
  t9319 = t9317 + t9318;
  t9323 = t2932*t2133*t9301;
  t9327 = -1.*t2968*t9301*t2193;
  t9330 = t9323 + t9327;
  t3364 = t3047*t1956;
  t3375 = t7*t3374;
  t3378 = t3364 + t3375;
  t9305 = t2133*t2968*t9301;
  t9308 = t2932*t9301*t2193;
  t9310 = t9305 + t9308;
  t9322 = t9319*t1956;
  t9331 = t7*t9330;
  t9332 = t9322 + t9331;
  t9337 = t7*t9319;
  t9340 = -1.*t1956*t9330;
  t9344 = t9337 + t9340;
  t9258 = t3665*t8620;
  t9278 = t3342*t8436;
  t9279 = t3008*t8639;
  t9418 = -1.*t3773*t8620;
  t9421 = -1.*t3234*t8436;
  t9422 = -1.*t3305*t8639;
  t9423 = t9418 + t9421 + t9422;
  t9454 = t9258 + t9278 + t9279;
  t9460 = -1.*t3193*t8620;
  t9474 = -1.*t7*t3323*t8436;
  t9485 = t1956*t3323*t8639;
  t9531 = t2997*t8620;
  t9553 = t7*t3021*t8436;
  t9564 = -1.*t1956*t3021*t8639;
  t9609 = t7*t3021*t9423;
  t9610 = t7*t3323*t9454;
  t3042 = t2945*t1956;
  t3143 = t7*t3079;
  t3163 = t3042 + t3143;
  t9708 = -1.*t3665*t8620;
  t9717 = -1.*t3342*t8436;
  t9734 = -1.*t3008*t8639;
  t9878 = t3812*t8620;
  t9880 = t7*t3253*t8436;
  t9898 = -1.*t1956*t3253*t8639;
  t9899 = t9878 + t9880 + t9898;
  t9919 = t9708 + t9717 + t9734;
  t9929 = t7*t3021*t9899;
  t9950 = t3253*t8620;
  t9955 = t7*t3272*t8436;
  t9956 = -1.*t1956*t3272*t8639;
  t9978 = -1.*t2997*t8620;
  t9983 = -1.*t7*t3021*t8436;
  t9984 = t1956*t3021*t8639;
  t9991 = t7*t3272*t9919;
  t4931 = -1.*t3594*t4714;
  t5112 = t3566*t4714;
  t10091 = -1.*t2586*t4714;
  t10094 = t4798 + t10091;
  t10096 = t2568*t10094;
  t5237 = -1.*t3594*t5226;
  t10098 = -1.*t2602*t4714;
  t5250 = t3566*t5226;
  t10104 = t2674*t4714;
  t10109 = t4310*t2147;
  t10110 = t2568*t4714;
  t10111 = t10109 + t4821 + t10110;
  t10113 = t2586*t10111;
  t5280 = -1.*t3594*t5277;
  t5384 = t3566*t5277;
  t5414 = -1.*t3594*t5409;
  t5714 = t3566*t5409;
  t5720 = t3648*t4796;
  t5814 = -1.*t3566*t4714;
  t5836 = t3424*t4714;
  t10159 = t4310*t1953;
  t10166 = t2365*t4714;
  t5867 = -1.*t3566*t5226;
  t10220 = -1.*t2674*t4714;
  t10226 = -1.*t4310*t2147;
  t10230 = -1.*t2568*t4714;
  t10232 = t10226 + t5784 + t10230;
  t10236 = t2365*t10232;
  t5872 = t3424*t5226;
  t10249 = t2392*t4714;
  t10257 = t10159 + t5385 + t10166;
  t10259 = t2568*t10257;
  t5882 = t5277*t3424;
  t5884 = t3502*t4796;
  t5892 = -1.*t3566*t5277;
  t5995 = t5409*t3424;
  t6056 = -1.*t3566*t5409;
  t6060 = -1.*t3648*t4796;
  t6104 = t3594*t4714;
  t6117 = -1.*t3424*t4714;
  t10303 = -1.*t4310*t1953;
  t10311 = -1.*t2365*t4714;
  t10349 = t2586*t4714;
  t10358 = t6081 + t10349;
  t10359 = t2365*t10358;
  t6151 = t3594*t5226;
  t10361 = t2602*t4714;
  t6154 = -1.*t3424*t5226;
  t10368 = -1.*t2392*t4714;
  t10371 = t10303 + t5895 + t10311;
  t10372 = t2586*t10371;
  t6160 = t3594*t5277;
  t6166 = -1.*t5277*t3424;
  t6167 = -1.*t3502*t4796;
  t6175 = t3594*t5409;
  t6181 = -1.*t5409*t3424;
  t8809 = -1.*t3812*t8410;
  t8836 = t3773*t8410;
  t10427 = -1.*t3253*t8410;
  t10428 = t8621 + t10427;
  t10429 = t3193*t10428;
  t9021 = -1.*t3812*t9014;
  t10431 = -1.*t3272*t8410;
  t9029 = t3773*t9014;
  t10436 = t3323*t8410;
  t10443 = t6367*t3172;
  t10444 = t3193*t8410;
  t10445 = t10443 + t8686 + t10444;
  t10448 = t3253*t10445;
  t9118 = -1.*t3812*t9111;
  t9257 = t9111*t3773;
  t9311 = -1.*t3812*t9310;
  t9352 = t9310*t3773;
  t9353 = t3928*t8620;
  t9461 = -1.*t3773*t8410;
  t9541 = t3665*t8410;
  t10488 = t6367*t2889;
  t10492 = t2997*t8410;
  t9612 = -1.*t3773*t9014;
  t10522 = -1.*t3323*t8410;
  t10535 = -1.*t6367*t3172;
  t10537 = -1.*t3193*t8410;
  t10540 = t10535 + t9418 + t10537;
  t10541 = t2997*t10540;
  t9627 = t3665*t9014;
  t10543 = t3021*t8410;
  t10549 = t10488 + t9258 + t10492;
  t10550 = t3193*t10549;
  t9656 = t9111*t3665;
  t9662 = t3726*t8620;
  t9703 = -1.*t9111*t3773;
  t9747 = t9310*t3665;
  t9785 = -1.*t9310*t3773;
  t9786 = -1.*t3928*t8620;
  t9951 = t3812*t8410;
  t9979 = -1.*t3665*t8410;
  t10607 = -1.*t6367*t2889;
  t10616 = -1.*t2997*t8410;
  t10645 = t3253*t8410;
  t10653 = t9878 + t10645;
  t10654 = t2997*t10653;
  t9996 = t3812*t9014;
  t10665 = t3272*t8410;
  t10015 = -1.*t3665*t9014;
  t10681 = -1.*t3021*t8410;
  t10707 = t10607 + t9708 + t10616;
  t10711 = t3253*t10707;
  t10032 = t3812*t9111;
  t10050 = -1.*t9111*t3665;
  t10051 = -1.*t3726*t8620;
  t10071 = t3812*t9310;
  t10079 = -1.*t9310*t3665;
  t10785 = t2190*t4415;
  t10791 = -1.*t2132*t4442;
  t10792 = t10785 + t10791;
  t10281 = t4310*t2402;
  t10282 = t1953*t5294;
  t10828 = Power(t2132,2);
  t10830 = Power(t2190,2);
  t10304 = -1.*t5294*t2147;
  t10823 = -1.*t2132*t2558*t4415;
  t10825 = -1.*t2190*t2558*t4442;
  t10826 = t10226 + t10823 + t10825;
  t10325 = t1953*t5417;
  t10332 = -1.*t2558*t4310;
  t10334 = -1.*t5417*t2147;
  t10843 = t2132*t2147*t4415;
  t10844 = t2190*t2147*t4442;
  t10845 = t10159 + t10843 + t10844;
  t10896 = -1.*t2190*t4415;
  t10900 = t2132*t4442;
  t10902 = t10896 + t10900;
  t10915 = -1.*t2968*t8206;
  t10916 = t2932*t8390;
  t10917 = t10915 + t10916;
  t10575 = t6367*t2945;
  t10578 = t2889*t9126;
  t10945 = Power(t2932,2);
  t10947 = Power(t2968,2);
  t10609 = -1.*t9126*t3172;
  t10956 = -1.*t2932*t2889*t8206;
  t10957 = -1.*t2968*t2889*t8390;
  t10958 = t10535 + t10956 + t10957;
  t10628 = t2889*t9319;
  t10980 = t2932*t2945*t8206;
  t10983 = t2968*t2945*t8390;
  t10988 = t10488 + t10980 + t10983;
  t10634 = -1.*t3047*t6367;
  t10638 = -1.*t9319*t3172;
  t11016 = t2968*t8206;
  t11017 = -1.*t2932*t8390;
  t11018 = t11016 + t11017;
  t11021 = -1.*t2558*t4401;
  t11022 = t11021 + t10226;
  t11028 = t4401*t2147;
  t11036 = t10159 + t11028;
  t11077 = -0.15121*t2402;
  t11083 = -0.15121*t2147;
  t11087 = t11077 + t11083;
  t11097 = -0.15121*t3047;
  t11098 = -0.15121*t2889;
  t11102 = t11097 + t11098;
  t11103 = t2945*t8188;
  t11104 = t10488 + t11103;
  t11113 = -1.*t2889*t8188;
  t11114 = t11113 + t10535;
  p_output1[0]=t2380;
  p_output1[1]=t2393;
  p_output1[2]=t2393;
  p_output1[3]=t2450;
  p_output1[4]=t2570;
  p_output1[5]=-1.*t1956*t2586;
  p_output1[6]=t2610;
  p_output1[7]=t2610;
  p_output1[8]=t2632;
  p_output1[9]=t2675;
  p_output1[10]=t2675;
  p_output1[11]=t2707;
  p_output1[12]=t2811;
  p_output1[13]=t3008;
  p_output1[14]=t3032;
  p_output1[15]=t3032;
  p_output1[16]=t3163;
  p_output1[17]=t3234;
  p_output1[18]=-1.*t1956*t3253;
  p_output1[19]=t3276;
  p_output1[20]=t3276;
  p_output1[21]=t3305;
  p_output1[22]=t3326;
  p_output1[23]=t3326;
  p_output1[24]=t3342;
  p_output1[25]=t3378;
  p_output1[26]=-1.*t3383*t3424 - 1.*t2380*t3432;
  p_output1[27]=-1.*t3383*t3460;
  p_output1[28]=t3491;
  p_output1[29]=t3491;
  p_output1[30]=t3432*t3502 - 1.*t3383*t3539;
  p_output1[31]=t3576;
  p_output1[32]=t1956*t2586*t3432 - 1.*t3383*t3594;
  p_output1[33]=t2586*t3383*t7;
  p_output1[34]=t3603;
  p_output1[35]=t3603;
  p_output1[36]=-1.*t2632*t3432 - 1.*t3383*t3566;
  p_output1[37]=-1.*t3383*t3614;
  p_output1[38]=t3626;
  p_output1[39]=t3626;
  p_output1[40]=t3638;
  p_output1[41]=t3432*t3648 - 1.*t3383*t3659;
  p_output1[42]=-1.*t3008*t3432 - 1.*t3383*t3665;
  p_output1[43]=-1.*t3383*t3711;
  p_output1[44]=t3722;
  p_output1[45]=t3722;
  p_output1[46]=t3432*t3726 - 1.*t3383*t3735;
  p_output1[47]=t3791;
  p_output1[48]=t1956*t3253*t3432 - 1.*t3383*t3812;
  p_output1[49]=t3253*t3383*t7;
  p_output1[50]=t3845;
  p_output1[51]=t3845;
  p_output1[52]=-1.*t3305*t3432 - 1.*t3383*t3773;
  p_output1[53]=-1.*t3383*t3862;
  p_output1[54]=t3900;
  p_output1[55]=t3900;
  p_output1[56]=t3921;
  p_output1[57]=t3432*t3928 - 1.*t3383*t3952;
  p_output1[58]=t3638;
  p_output1[59]=t3432*t3460;
  p_output1[60]=t3981;
  p_output1[61]=t3981;
  p_output1[62]=t3383*t3502 + t3432*t3539;
  p_output1[63]=t2632*t3432 + t3383*t3566;
  p_output1[64]=t1956*t2586*t3383 + t3432*t3594;
  p_output1[65]=-1.*t2586*t3432*t7;
  p_output1[66]=t4020;
  p_output1[67]=t4020;
  p_output1[68]=t3576;
  p_output1[69]=t3432*t3614;
  p_output1[70]=t4033;
  p_output1[71]=t4033;
  p_output1[72]=t3383*t3424 + t2380*t3432;
  p_output1[73]=t3383*t3648 + t3432*t3659;
  p_output1[74]=t3921;
  p_output1[75]=t3432*t3711;
  p_output1[76]=t4090;
  p_output1[77]=t4090;
  p_output1[78]=t3383*t3726 + t3432*t3735;
  p_output1[79]=t3305*t3432 + t3383*t3773;
  p_output1[80]=t1956*t3253*t3383 + t3432*t3812;
  p_output1[81]=-1.*t3253*t3432*t7;
  p_output1[82]=t4172;
  p_output1[83]=t4172;
  p_output1[84]=t3791;
  p_output1[85]=t3432*t3862;
  p_output1[86]=t4180;
  p_output1[87]=t4180;
  p_output1[88]=t3008*t3432 + t3383*t3665;
  p_output1[89]=t3383*t3928 + t3432*t3952;
  p_output1[90]=t2570*(t1956*t2586*t4744 + t1956*t2586*t4785) + t2632*t4809 - 1.*t1956*t2586*t4831 + t2586*(t2632*t4744 + t2632*t4785 + t2570*t4807 + t3614*t4807)*t7;
  p_output1[91]=t4870 + t2570*(-1.*t2586*t4881*t4906 - 1.*t2586*t4906*t4914 + t4924 + t4931 + t4934 + t5009) + t5136 + t2586*t7*(-1.*t1956*t2632*t4906 + t5105 + t5112 + t5116 + t5123 + t2570*t4906*t7);
  p_output1[92]=t4870 + t5136 + t2570*(t4924 + t4934 + t5009 - 1.*t2586*t4881*t5203 - 1.*t2586*t4914*t5203 + t5237) + t2586*t7*(t5105 + t5116 + t5123 - 1.*t1956*t2632*t5203 + t5250 + t2570*t5203*t7);
  p_output1[93]=t2707*t4809 + t2586*(t2570*t5347 + t2632*t5360 + t5384 + t5385 + t5392 + t5393)*t7 + t2570*(t5280 + t1956*t2586*t5360 - 1.*t2586*t5347*t7);
  p_output1[94]=t2811*t4809 + t2586*(t2811*t4785 + t3659*t4807 + t2570*t5497 + t2632*t5673 + t5714 + t5720)*t7 + t2570*(t5414 + t1956*t2586*t5673 - 1.*t2586*t5497*t7);
  p_output1[95]=t2570*(t2380*t4744 + t2380*t4785 + t2707*t4807 + t3460*t4807) + t2707*(-1.*t2632*t4744 - 1.*t2632*t4785 - 1.*t2570*t4807 - 1.*t3614*t4807) + t2380*t5794 + t2632*t5806;
  p_output1[96]=t5862 + t5864 + t2707*(t1956*t2632*t4906 + t5811 + t5814 + t5822 + t5823 - 1.*t2570*t4906*t7) + t2570*(-1.*t1956*t2380*t4906 + t5835 + t5836 + t5840 + t5859 + t2707*t4906*t7);
  p_output1[97]=t5862 + t5864 + t2707*(t1956*t2632*t5203 + t5811 + t5822 + t5823 + t5867 - 1.*t2570*t5203*t7) + t2570*(-1.*t1956*t2380*t5203 + t5835 + t5840 + t5859 + t5872 + t2707*t5203*t7);
  p_output1[98]=t2450*t5794 + t2707*t5806 + t2570*(t2450*t4785 + t3539*t4807 + t2707*t5347 + t2380*t5360 + t5882 + t5884) + t2707*(-1.*t2570*t5347 - 1.*t2632*t5360 + t5892 + t5895 + t5901 + t5913);
  p_output1[99]=t2570*t5794 + t2811*t5806 + t2570*(t4821 + t4822 + t4823 + t2707*t5497 + t2380*t5673 + t5995) + t2707*(-1.*t2811*t4785 - 1.*t3659*t4807 - 1.*t2570*t5497 - 1.*t2632*t5673 + t6056 + t6060);
  p_output1[100]=t2707*(-1.*t1956*t2586*t4744 - 1.*t1956*t2586*t4785) + t2380*t6084 - 1.*t1956*t2586*t6093 + t2586*(-1.*t2380*t4744 - 1.*t2380*t4785 - 1.*t2707*t4807 - 1.*t3460*t4807)*t7;
  p_output1[101]=t6098 + t2707*(t2586*t4881*t4906 + t2586*t4906*t4914 + t6103 + t6104 + t6109 + t6110) + t6146 + t2586*t7*(t1956*t2380*t4906 + t6115 + t6117 + t6123 + t6125 - 1.*t2707*t4906*t7);
  p_output1[102]=t6098 + t6146 + t2707*(t2586*t4881*t5203 + t2586*t4914*t5203 + t6103 + t6109 + t6110 + t6151) + t2586*t7*(t1956*t2380*t5203 + t6115 + t6123 + t6125 + t6154 - 1.*t2707*t5203*t7);
  p_output1[103]=t2450*t6084 + t2586*(-1.*t2450*t4785 - 1.*t3539*t4807 - 1.*t2707*t5347 - 1.*t2380*t5360 + t6166 + t6167)*t7 + t2707*(-1.*t1956*t2586*t5360 + t6160 + t2586*t5347*t7);
  p_output1[104]=t2570*t6084 + t2586*(-1.*t2707*t5497 - 1.*t2380*t5673 + t5784 + t5792 + t5793 + t6181)*t7 + t2707*(-1.*t1956*t2586*t5673 + t6175 + t2586*t5497*t7);
  p_output1[105]=t3234*(t1956*t3253*t8416 + t1956*t3253*t8436) + t3253*t7*(t3305*t8416 + t3305*t8436 + t3234*t8639 + t3862*t8639) + t3305*t8642 - 1.*t1956*t3253*t8692;
  p_output1[106]=t8702 + t3234*(-1.*t3253*t4881*t8709 - 1.*t3253*t4914*t8709 + t8807 + t8809 + t8810 + t8820) + t3253*t7*(-1.*t1956*t3305*t8709 + t3234*t7*t8709 + t8835 + t8836 + t8930 + t8934) + t8969;
  p_output1[107]=t8702 + t8969 + t3234*(t8807 + t8810 + t8820 - 1.*t3253*t4881*t8998 - 1.*t3253*t4914*t8998 + t9021) + t3253*t7*(t8835 + t8930 + t8934 - 1.*t1956*t3305*t8998 + t3234*t7*t8998 + t9029);
  p_output1[108]=t3342*t8642 + t3234*(t9118 - 1.*t3253*t7*t9169 + t1956*t3253*t9241) + t3253*t7*(t3234*t9169 + t3305*t9241 + t9257 + t9258 + t9278 + t9279);
  p_output1[109]=t3378*t8642 + t3234*(t9311 - 1.*t3253*t7*t9332 + t1956*t3253*t9344) + t3253*t7*(t3378*t8436 + t3952*t8639 + t3234*t9332 + t3305*t9344 + t9352 + t9353);
  p_output1[110]=t3234*(t3008*t8416 + t3008*t8436 + t3342*t8639 + t3711*t8639) + t3342*(-1.*t3305*t8416 - 1.*t3305*t8436 - 1.*t3234*t8639 - 1.*t3862*t8639) + t3008*t9423 + t3305*t9454;
  p_output1[111]=t3342*(t1956*t3305*t8709 - 1.*t3234*t7*t8709 + t9460 + t9461 + t9474 + t9485) + t3234*(-1.*t1956*t3008*t8709 + t3342*t7*t8709 + t9531 + t9541 + t9553 + t9564) + t9609 + t9610;
  p_output1[112]=t9609 + t9610 + t3342*(t1956*t3305*t8998 - 1.*t3234*t7*t8998 + t9460 + t9474 + t9485 + t9612) + t3234*(-1.*t1956*t3008*t8998 + t3342*t7*t8998 + t9531 + t9553 + t9564 + t9627);
  p_output1[113]=t3163*t9423 + t3342*t9454 + t3234*(t3163*t8436 + t3735*t8639 + t3342*t9169 + t3008*t9241 + t9656 + t9662) + t3342*(-1.*t3234*t9169 - 1.*t3305*t9241 + t9703 + t9708 + t9717 + t9734);
  p_output1[114]=t3234*t9423 + t3378*t9454 + t3234*(t8686 + t8687 + t8690 + t3342*t9332 + t3008*t9344 + t9747) + t3342*(-1.*t3378*t8436 - 1.*t3952*t8639 - 1.*t3234*t9332 - 1.*t3305*t9344 + t9785 + t9786);
  p_output1[115]=t3342*(-1.*t1956*t3253*t8416 - 1.*t1956*t3253*t8436) + t3253*t7*(-1.*t3008*t8416 - 1.*t3008*t8436 - 1.*t3342*t8639 - 1.*t3711*t8639) + t3008*t9899 - 1.*t1956*t3253*t9919;
  p_output1[116]=t9929 + t3342*(t3253*t4881*t8709 + t3253*t4914*t8709 + t9950 + t9951 + t9955 + t9956) + t3253*t7*(t1956*t3008*t8709 - 1.*t3342*t7*t8709 + t9978 + t9979 + t9983 + t9984) + t9991;
  p_output1[117]=t9929 + t3253*t7*(t10015 + t1956*t3008*t8998 - 1.*t3342*t7*t8998 + t9978 + t9983 + t9984) + t9991 + t3342*(t3253*t4881*t8998 + t3253*t4914*t8998 + t9950 + t9955 + t9956 + t9996);
  p_output1[118]=t3253*t7*(t10050 + t10051 - 1.*t3163*t8436 - 1.*t3735*t8639 - 1.*t3342*t9169 - 1.*t3008*t9241) + t3342*(t10032 + t3253*t7*t9169 - 1.*t1956*t3253*t9241) + t3163*t9899;
  p_output1[119]=t3342*(t10071 + t3253*t7*t9332 - 1.*t1956*t3253*t9344) + t3253*t7*(t10079 - 1.*t3342*t9332 - 1.*t3008*t9344 + t9418 + t9421 + t9422) + t3234*t9899;
  p_output1[120]=t10096 + t10113 + t3566*(t10098 - 1.*t2586*t4906 + t4924 + t4931) + t3594*(t10104 + t2568*t4906 + t5105 + t5112);
  p_output1[121]=t10096 + t10113 + t3566*(t10098 + t4924 - 1.*t2586*t5203 + t5237) + t3594*(t10104 + t5105 + t2568*t5203 + t5250);
  p_output1[122]=t10094*t3424 + t3566*(t5280 - 1.*t2586*t5328) + t3594*(t10159 + t10166 + t2147*t5294 + t2568*t5328 + t5384 + t5385);
  p_output1[123]=t10094*t3648 + t3566*(t5414 - 1.*t2586*t5488) + t3594*(t2558*t4310 + t2794*t4714 + t2147*t5417 + t2568*t5488 + t5714 + t5720);
  p_output1[124]=t10236 + t10259 + t3424*(t10220 - 1.*t2568*t4906 + t5811 + t5814) + t3566*(t10249 + t2365*t4906 + t5835 + t5836);
  p_output1[125]=t10236 + t10259 + t3424*(t10220 - 1.*t2568*t5203 + t5811 + t5867) + t3566*(t10249 + t2365*t5203 + t5835 + t5872);
  p_output1[126]=t10257*t3424 + t10232*t3502 + t3566*(t10281 + t10282 + t2431*t4714 + t2365*t5328 + t5882 + t5884) + t3424*(t10303 + t10304 + t10311 - 1.*t2568*t5328 + t5892 + t5895);
  p_output1[127]=t10232*t3566 + t10257*t3648 + t3566*(t10109 + t10110 + t10325 + t4821 + t2365*t5488 + t5995) + t3424*(t10332 + t10334 - 1.*t2794*t4714 - 1.*t2568*t5488 + t6056 + t6060);
  p_output1[128]=t10359 + t10372 + t3424*(t10361 + t2586*t4906 + t6103 + t6104) + t3594*(t10368 - 1.*t2365*t4906 + t6115 + t6117);
  p_output1[129]=t10359 + t10372 + t3424*(t10361 + t2586*t5203 + t6103 + t6151) + t3594*(t10368 - 1.*t2365*t5203 + t6115 + t6154);
  p_output1[130]=t10358*t3502 + t3424*(t2586*t5328 + t6160) + t3594*(-1.*t2402*t4310 - 1.*t2431*t4714 - 1.*t1953*t5294 - 1.*t2365*t5328 + t6166 + t6167);
  p_output1[131]=t10358*t3566 + t3424*(t2586*t5488 + t6175) + t3594*(t10226 + t10230 - 1.*t1953*t5417 - 1.*t2365*t5488 + t5784 + t6181);
  p_output1[132]=t10429 + t10448 + t3773*(t10431 - 1.*t3253*t8709 + t8807 + t8809) + t3812*(t10436 + t3193*t8709 + t8835 + t8836);
  p_output1[133]=t10429 + t10448 + t3773*(t10431 + t8807 - 1.*t3253*t8998 + t9021) + t3812*(t10436 + t8835 + t3193*t8998 + t9029);
  p_output1[134]=t10428*t3665 + t3773*(t9118 - 1.*t3253*t9137) + t3812*(t10488 + t10492 + t3172*t9126 + t3193*t9137 + t9257 + t9258);
  p_output1[135]=t10428*t3928 + t3773*(t9311 - 1.*t3253*t9330) + t3812*(t3047*t6367 + t3374*t8410 + t3172*t9319 + t3193*t9330 + t9352 + t9353);
  p_output1[136]=t10541 + t10550 + t3665*(t10522 - 1.*t3193*t8709 + t9460 + t9461) + t3773*(t10543 + t2997*t8709 + t9531 + t9541);
  p_output1[137]=t10541 + t10550 + t3665*(t10522 - 1.*t3193*t8998 + t9460 + t9612) + t3773*(t10543 + t2997*t8998 + t9531 + t9627);
  p_output1[138]=t10549*t3665 + t10540*t3726 + t3773*(t10575 + t10578 + t3079*t8410 + t2997*t9137 + t9656 + t9662) + t3665*(t10607 + t10609 + t10616 - 1.*t3193*t9137 + t9703 + t9708);
  p_output1[139]=t10540*t3773 + t10549*t3928 + t3773*(t10443 + t10444 + t10628 + t8686 + t2997*t9330 + t9747) + t3665*(t10634 + t10638 - 1.*t3374*t8410 - 1.*t3193*t9330 + t9785 + t9786);
  p_output1[140]=t10654 + t10711 + t3665*(t10665 + t3253*t8709 + t9950 + t9951) + t3812*(t10681 - 1.*t2997*t8709 + t9978 + t9979);
  p_output1[141]=t10654 + t10711 + t3812*(t10015 + t10681 - 1.*t2997*t8998 + t9978) + t3665*(t10665 + t3253*t8998 + t9950 + t9996);
  p_output1[142]=t10653*t3726 + t3812*(t10050 + t10051 - 1.*t2945*t6367 - 1.*t3079*t8410 - 1.*t2889*t9126 - 1.*t2997*t9137) + t3665*(t10032 + t3253*t9137);
  p_output1[143]=t10653*t3773 + t3665*(t10071 + t3253*t9330) + t3812*(t10079 + t10535 + t10537 - 1.*t2889*t9319 - 1.*t2997*t9330 + t9418);
  p_output1[144]=t2147*(t2132*t4415 + t2190*t4442 + t2190*t5168 - 1.*t2132*t5185);
  p_output1[145]=t10792*t1953;
  p_output1[146]=t10792*t2558;
  p_output1[147]=t2147*(-1.*t2147*t2190*t4415 + t2132*t2147*t4442 + t2132*t2147*t5168 + t2147*t2190*t5185) + t1953*(t2190*t2558*t4415 - 1.*t2132*t2558*t4442 - 1.*t2132*t2558*t5168 - 1.*t2190*t2558*t5185);
  p_output1[148]=t10845*t1953 + t10826*t2402 + t2147*(t10281 + t10282 + t10828*t2147*t4310 + t10830*t2147*t4310 + t1953*t2132*t4415 + t1953*t2190*t4442) + t1953*(t10303 + t10304 - 1.*t10828*t2558*t4310 - 1.*t10830*t2558*t4310 - 1.*t2132*t2147*t4415 - 1.*t2147*t2190*t4442);
  p_output1[149]=t10826*t2147 + t10845*t2558 + t2147*(t10109 + t10325 + t2132*t2558*t4415 + t2190*t2558*t4442 + t10828*t2147*t5406 + t10830*t2147*t5406) + t1953*(t10332 + t10334 - 1.*t2132*t2402*t4415 - 1.*t2190*t2402*t4442 - 1.*t10828*t2558*t5406 - 1.*t10830*t2558*t5406);
  p_output1[150]=t1953*(-1.*t2132*t4415 - 1.*t2190*t4442 - 1.*t2190*t5168 + t2132*t5185);
  p_output1[151]=t10902*t2402;
  p_output1[152]=t10902*t2147;
  p_output1[153]=t3172*(-1.*t2932*t8206 - 1.*t2968*t8390 - 1.*t2968*t8989 + t2932*t8996);
  p_output1[154]=t10917*t2889;
  p_output1[155]=t10917*t3047;
  p_output1[156]=t2889*(t2889*t2968*t8206 - 1.*t2889*t2932*t8390 - 1.*t2889*t2932*t8989 - 1.*t2889*t2968*t8996) + t3172*(-1.*t2945*t2968*t8206 + t2932*t2945*t8390 + t2932*t2945*t8989 + t2945*t2968*t8996);
  p_output1[157]=t10988*t2889 + t10958*t2945 + t2889*(t10607 + t10609 - 1.*t2932*t2945*t8206 - 1.*t2945*t2968*t8390 - 1.*t10945*t2889*t9094 - 1.*t10947*t2889*t9094) + t3172*(t10575 + t10578 + t2932*t3047*t8206 + t2968*t3047*t8390 + t10945*t2945*t9094 + t10947*t2945*t9094);
  p_output1[158]=t10988*t3047 + t10958*t3172 + t2889*(t10634 + t10638 - 1.*t2932*t3172*t8206 - 1.*t2968*t3172*t8390 - 1.*t10945*t2889*t9301 - 1.*t10947*t2889*t9301) + t3172*(t10443 + t10628 + t2889*t2932*t8206 + t2889*t2968*t8390 + t10945*t2945*t9301 + t10947*t2945*t9301);
  p_output1[159]=t2889*(t2932*t8206 + t2968*t8390 + t2968*t8989 - 1.*t2932*t8996);
  p_output1[160]=t11018*t2945;
  p_output1[161]=t11018*t3172;
  p_output1[162]=t11036*t1953 + t11022*t2402 + t2147*(t10109 + t10281 + t10282 + t1953*t4401) + t1953*(t10303 + t10304 + t10332 - 1.*t2147*t4401);
  p_output1[163]=t11022*t2147 + t11036*t2558 + t2147*(t10109 + t10325 + t2558*t4401 + t2147*t5406) + t1953*(t10332 + t10334 - 1.*t2402*t4401 - 1.*t2558*t5406);
  p_output1[164]=t11087;
  p_output1[165]=t11087;
  p_output1[166]=0.28121*t34 - 0.305*Power(t34,2) - 1.*t34*t4255;
  p_output1[167]=-0.28121*t1752 + 0.305*t1752*t34 + t1752*t4255;
  p_output1[168]=t11102;
  p_output1[169]=t11102;
  p_output1[170]=t11104*t2889 + t11114*t2945 + t2889*(t10607 + t10609 - 1.*t2945*t8188 - 1.*t2889*t9094) + t3172*(t10575 + t10578 + t3047*t8188 + t2945*t9094);
  p_output1[171]=t11104*t3047 + t11114*t3172 + t2889*(t10634 + t10638 - 1.*t3172*t8188 - 1.*t2889*t9301) + t3172*(t10443 + t10628 + t2889*t8188 + t2945*t9301);
  p_output1[172]=0.28121*t2814 - 0.305*Power(t2814,2) + t2814*t6239;
  p_output1[173]=-0.28121*t2852 + 0.305*t2814*t2852 - 1.*t2852*t6239;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
