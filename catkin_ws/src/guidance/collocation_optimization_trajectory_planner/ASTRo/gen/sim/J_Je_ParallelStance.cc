/*
 * Automatically Generated from Mathematica.
 * Mon 30 May 2022 12:13:54 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t438;
  double t296;
  double t335;
  double t543;
  double t563;
  double t571;
  double t573;
  double t208;
  double t557;
  double t576;
  double t553;
  double t596;
  double t615;
  double t617;
  double t625;
  double t626;
  double t552;
  double t410;
  double t544;
  double t545;
  double t661;
  double t662;
  double t663;
  double t690;
  double t693;
  double t694;
  double t695;
  double t667;
  double t668;
  double t669;
  double t706;
  double t707;
  double t708;
  double t710;
  double t575;
  double t602;
  double t607;
  double t630;
  double t631;
  double t638;
  double t753;
  double t738;
  double t739;
  double t754;
  double t761;
  double t762;
  double t769;
  double t771;
  double t760;
  double t959;
  double t1011;
  double t1027;
  double t1028;
  double t1049;
  double t1053;
  double t1062;
  double t752;
  double t756;
  double t757;
  double t1174;
  double t1178;
  double t1181;
  double t1183;
  double t1134;
  double t1137;
  double t1143;
  double t1146;
  double t1154;
  double t1156;
  double t1218;
  double t1219;
  double t1220;
  double t1229;
  double t770;
  double t821;
  double t829;
  double t551;
  double t608;
  double t614;
  double t1272;
  double t1285;
  double t2310;
  double t2313;
  double t2317;
  double t644;
  double t645;
  double t646;
  double t697;
  double t698;
  double t699;
  double t673;
  double t674;
  double t688;
  double t3120;
  double t3121;
  double t3140;
  double t2826;
  double t2831;
  double t2838;
  double t3221;
  double t3224;
  double t3238;
  double t1277;
  double t1281;
  double t1282;
  double t716;
  double t720;
  double t732;
  double t758;
  double t892;
  double t956;
  double t3608;
  double t3623;
  double t3651;
  double t1074;
  double t1075;
  double t1076;
  double t1185;
  double t1190;
  double t1217;
  double t1169;
  double t1170;
  double t1171;
  double t3930;
  double t3945;
  double t3946;
  double t3797;
  double t3798;
  double t3815;
  double t4249;
  double t4254;
  double t4297;
  double t3413;
  double t3423;
  double t3455;
  double t1260;
  double t1261;
  double t1264;
  double t3250;
  double t3252;
  double t3258;
  double t1838;
  double t2115;
  double t2227;
  double t4544;
  double t4545;
  double t4596;
  double t2346;
  double t2428;
  double t2433;
  double t2625;
  double t2716;
  double t2780;
  double t2929;
  double t2935;
  double t3054;
  double t4772;
  double t4795;
  double t4821;
  double t2845;
  double t2849;
  double t2880;
  double t3191;
  double t3193;
  double t3208;
  double t4900;
  double t4901;
  double t4935;
  double t3266;
  double t3335;
  double t3347;
  double t3357;
  double t3406;
  double t3409;
  double t4365;
  double t4369;
  double t4370;
  double t3506;
  double t3590;
  double t3599;
  double t5104;
  double t5412;
  double t5449;
  double t3655;
  double t3657;
  double t3671;
  double t3762;
  double t3766;
  double t3770;
  double t3837;
  double t3858;
  double t3861;
  double t7261;
  double t7293;
  double t7474;
  double t3816;
  double t3822;
  double t3833;
  double t4109;
  double t4161;
  double t4170;
  double t7523;
  double t7624;
  double t7774;
  double t4371;
  double t4373;
  double t4417;
  double t4445;
  double t4446;
  double t4458;
  double t659;
  double t671;
  double t672;
  double t8901;
  double t9551;
  double t9910;
  double t10443;
  double t11317;
  double t14247;
  double t14251;
  double t14478;
  double t14595;
  double t14661;
  double t14666;
  double t14821;
  double t15010;
  double t8823;
  double t13809;
  double t14085;
  double t14237;
  double t14471;
  double t15038;
  double t15369;
  double t15527;
  double t15889;
  double t15996;
  double t16107;
  double t16253;
  double t16285;
  double t16291;
  double t16292;
  double t16479;
  double t16497;
  double t16509;
  double t14241;
  double t16306;
  double t16316;
  double t16651;
  double t16653;
  double t16945;
  double t16589;
  double t16592;
  double t16595;
  double t16642;
  double t16646;
  double t17224;
  double t17417;
  double t18572;
  double t18625;
  double t18725;
  double t18217;
  double t18415;
  double t18429;
  double t18471;
  double t18519;
  double t18750;
  double t18520;
  double t18744;
  double t18906;
  double t18939;
  double t18943;
  double t18950;
  double t18975;
  double t18981;
  double t19021;
  double t18765;
  double t18775;
  double t18795;
  double t19086;
  double t19094;
  double t19097;
  double t18817;
  double t18828;
  double t18892;
  double t19385;
  double t19422;
  double t19423;
  double t19425;
  double t19435;
  double t19436;
  double t19438;
  double t711;
  double t712;
  double t714;
  double t19247;
  double t19250;
  double t19251;
  double t19431;
  double t19441;
  double t19473;
  double t19505;
  double t19532;
  double t19542;
  double t19638;
  double t19639;
  double t19641;
  double t19670;
  double t19673;
  double t19679;
  double t19682;
  double t19683;
  double t715;
  double t733;
  double t734;
  double t19644;
  double t19645;
  double t19655;
  double t19678;
  double t19684;
  double t19686;
  double t19723;
  double t19725;
  double t19726;
  double t19609;
  double t19624;
  double t19625;
  double t19926;
  double t19959;
  double t19978;
  double t19980;
  double t20045;
  double t20264;
  double t20280;
  double t20281;
  double t20288;
  double t20295;
  double t20296;
  double t20307;
  double t20312;
  double t640;
  double t650;
  double t658;
  double t20479;
  double t20493;
  double t20502;
  double t20628;
  double t20632;
  double t20633;
  double t20639;
  double t20652;
  double t20655;
  double t20669;
  double t20677;
  double t20683;
  double t20696;
  double t20712;
  double t20717;
  double t20725;
  double t1145;
  double t1160;
  double t1168;
  double t20788;
  double t20789;
  double t20790;
  double t20793;
  double t20794;
  double t20799;
  double t20800;
  double t20801;
  double t20802;
  double t20804;
  double t20805;
  double t20806;
  double t20807;
  double t20808;
  double t20787;
  double t20795;
  double t20796;
  double t20797;
  double t20809;
  double t20810;
  double t20811;
  double t20812;
  double t20813;
  double t20814;
  double t20815;
  double t20816;
  double t20817;
  double t20821;
  double t20822;
  double t20824;
  double t20798;
  double t20818;
  double t20819;
  double t20837;
  double t20838;
  double t20840;
  double t20829;
  double t20831;
  double t20832;
  double t20835;
  double t20836;
  double t20842;
  double t20843;
  double t20861;
  double t20862;
  double t20863;
  double t20852;
  double t20853;
  double t20854;
  double t20855;
  double t20859;
  double t20872;
  double t20892;
  double t20893;
  double t20894;
  double t20895;
  double t20896;
  double t20897;
  double t20898;
  double t20899;
  double t20874;
  double t20875;
  double t20879;
  double t20903;
  double t20906;
  double t20908;
  double t20883;
  double t20884;
  double t20890;
  double t20919;
  double t20920;
  double t20921;
  double t20922;
  double t20927;
  double t20928;
  double t20930;
  double t20933;
  double t20935;
  double t1233;
  double t1234;
  double t1245;
  double t20923;
  double t20924;
  double t20925;
  double t20929;
  double t20936;
  double t20937;
  double t20942;
  double t20944;
  double t20945;
  double t20966;
  double t20967;
  double t21005;
  double t21009;
  double t21011;
  double t21050;
  double t21051;
  double t21052;
  double t1250;
  double t1267;
  double t1268;
  double t20979;
  double t20980;
  double t20983;
  double t21041;
  double t21054;
  double t21056;
  double t21058;
  double t21060;
  double t21061;
  double t20951;
  double t20955;
  double t20957;
  double t21083;
  double t21084;
  double t21085;
  double t21086;
  double t21095;
  double t21098;
  double t21103;
  double t21105;
  double t21108;
  double t21113;
  double t21114;
  double t21117;
  double t21118;
  double t1043;
  double t1078;
  double t1124;
  double t21141;
  double t21144;
  double t21145;
  double t21194;
  double t21195;
  double t21196;
  double t21197;
  double t21207;
  double t21210;
  double t21218;
  double t21220;
  double t21226;
  double t21256;
  double t21260;
  double t21261;
  double t21265;
  double t18755;
  double t18797;
  double t21307;
  double t21308;
  double t21309;
  double t19098;
  double t21311;
  double t19116;
  double t21315;
  double t21318;
  double t21319;
  double t21320;
  double t21321;
  double t19324;
  double t19607;
  double t19663;
  double t19743;
  double t19745;
  double t20269;
  double t20292;
  double t21335;
  double t21338;
  double t20315;
  double t21354;
  double t21357;
  double t21358;
  double t21359;
  double t21360;
  double t20329;
  double t21362;
  double t21365;
  double t21366;
  double t20400;
  double t20417;
  double t20478;
  double t20513;
  double t20522;
  double t20526;
  double t20671;
  double t20699;
  double t21382;
  double t21385;
  double t21408;
  double t21410;
  double t21411;
  double t20730;
  double t21413;
  double t20736;
  double t21419;
  double t21426;
  double t21427;
  double t20750;
  double t20757;
  double t20758;
  double t20769;
  double t20780;
  double t20873;
  double t20880;
  double t21490;
  double t21491;
  double t21492;
  double t20909;
  double t21494;
  double t20912;
  double t21499;
  double t21505;
  double t21506;
  double t21507;
  double t21508;
  double t20926;
  double t20950;
  double t20986;
  double t21067;
  double t21069;
  double t21099;
  double t21109;
  double t21526;
  double t21530;
  double t21120;
  double t21555;
  double t21558;
  double t21559;
  double t21560;
  double t21561;
  double t21125;
  double t21563;
  double t21566;
  double t21567;
  double t21131;
  double t21132;
  double t21140;
  double t21164;
  double t21175;
  double t21179;
  double t21219;
  double t21257;
  double t21593;
  double t21601;
  double t21633;
  double t21634;
  double t21635;
  double t21270;
  double t21637;
  double t21273;
  double t21642;
  double t21645;
  double t21646;
  double t21279;
  double t21285;
  double t21286;
  double t21295;
  double t21301;
  double t21681;
  double t21682;
  double t21688;
  double t21376;
  double t21377;
  double t21722;
  double t21725;
  double t21383;
  double t21715;
  double t21716;
  double t21717;
  double t21391;
  double t21398;
  double t21399;
  double t21739;
  double t21740;
  double t21741;
  double t21847;
  double t21848;
  double t21849;
  double t21865;
  double t21866;
  double t21867;
  double t21577;
  double t21578;
  double t21904;
  double t21908;
  double t21594;
  double t21921;
  double t21923;
  double t21924;
  double t21615;
  double t21937;
  double t21938;
  double t21939;
  double t21626;
  double t21627;
  double t21964;
  double t21965;
  double t21966;
  double t21969;
  double t21970;
  double t21975;
  double t21976;
  double t21994;
  double t21995;
  double t21996;
  double t22006;
  double t22007;
  double t22008;
  double t22009;
  double t22010;
  double t22016;
  double t22017;
  t438 = Cos(var1[13]);
  t296 = Cos(var1[14]);
  t335 = Sin(var1[13]);
  t543 = Sin(var1[14]);
  t563 = t438*t296;
  t571 = t335*t543;
  t573 = t563 + t571;
  t208 = Cos(var1[4]);
  t557 = Cos(var1[5]);
  t576 = Sin(var1[12]);
  t553 = Cos(var1[12]);
  t596 = Sin(var1[5]);
  t615 = -1.*t557*t576*t573;
  t617 = -1.*t553*t573*t596;
  t625 = t615 + t617;
  t626 = t208*t625;
  t552 = Sin(var1[4]);
  t410 = -1.*t296*t335;
  t544 = t438*t543;
  t545 = t410 + t544;
  t661 = t296*t335;
  t662 = -1.*t438*t543;
  t663 = t661 + t662;
  t690 = -1.*t553*t557;
  t693 = t576*t596;
  t694 = t690 + t693;
  t695 = t208*t694;
  t667 = t553*t557*t663;
  t668 = -1.*t576*t663*t596;
  t669 = t667 + t668;
  t706 = -1.*t557*t576*t663;
  t707 = -1.*t553*t663*t596;
  t708 = t706 + t707;
  t710 = t208*t708;
  t575 = t553*t557*t573;
  t602 = -1.*t576*t573*t596;
  t607 = t575 + t602;
  t630 = -1.*t438*t296;
  t631 = -1.*t335*t543;
  t638 = t630 + t631;
  t753 = Cos(var1[16]);
  t738 = Cos(var1[17]);
  t739 = Sin(var1[16]);
  t754 = Sin(var1[17]);
  t761 = -1.*t753*t738;
  t762 = -1.*t739*t754;
  t769 = t761 + t762;
  t771 = Sin(var1[15]);
  t760 = Cos(var1[15]);
  t959 = -1.*t557*t771*t769;
  t1011 = -1.*t760*t769*t596;
  t1027 = t959 + t1011;
  t1028 = t208*t1027;
  t1049 = t738*t739;
  t1053 = -1.*t753*t754;
  t1062 = t1049 + t1053;
  t752 = -1.*t738*t739;
  t756 = t753*t754;
  t757 = t752 + t756;
  t1174 = t760*t557;
  t1178 = -1.*t771*t596;
  t1181 = t1174 + t1178;
  t1183 = t208*t1181;
  t1134 = t753*t738;
  t1137 = t739*t754;
  t1143 = t1134 + t1137;
  t1146 = t760*t557*t757;
  t1154 = -1.*t771*t757*t596;
  t1156 = t1146 + t1154;
  t1218 = -1.*t557*t771*t757;
  t1219 = -1.*t760*t757*t596;
  t1220 = t1218 + t1219;
  t1229 = t208*t1220;
  t770 = t760*t557*t769;
  t821 = -1.*t771*t769*t596;
  t829 = t770 + t821;
  t551 = t208*t545;
  t608 = -1.*t552*t607;
  t614 = t551 + t608;
  t1272 = Sin(var1[3]);
  t1285 = Cos(var1[3]);
  t2310 = t1272*t552*t625;
  t2313 = t1285*t607;
  t2317 = t2310 + t2313;
  t644 = t553*t557*t545;
  t645 = -1.*t576*t545*t596;
  t646 = t644 + t645;
  t697 = t208*t573;
  t698 = -1.*t552*t669;
  t699 = t697 + t698;
  t673 = -1.*t557*t576;
  t674 = -1.*t553*t596;
  t688 = t673 + t674;
  t3120 = t1285*t688;
  t3121 = t1272*t552*t694;
  t3140 = t3120 + t3121;
  t2826 = t557*t576*t663;
  t2831 = t553*t663*t596;
  t2838 = t2826 + t2831;
  t3221 = t1272*t552*t708;
  t3224 = t1285*t669;
  t3238 = t3221 + t3224;
  t1277 = t557*t576*t573;
  t1281 = t553*t573*t596;
  t1282 = t1277 + t1281;
  t716 = t553*t557*t638;
  t720 = -1.*t576*t638*t596;
  t732 = t716 + t720;
  t758 = t208*t757;
  t892 = -1.*t552*t829;
  t956 = t758 + t892;
  t3608 = t1272*t552*t1027;
  t3623 = t1285*t829;
  t3651 = t3608 + t3623;
  t1074 = t760*t557*t1062;
  t1075 = -1.*t771*t1062*t596;
  t1076 = t1074 + t1075;
  t1185 = t208*t1143;
  t1190 = -1.*t552*t1156;
  t1217 = t1185 + t1190;
  t1169 = t557*t771;
  t1170 = t760*t596;
  t1171 = t1169 + t1170;
  t3930 = t1285*t1171;
  t3945 = t1272*t552*t1181;
  t3946 = t3930 + t3945;
  t3797 = t557*t771*t757;
  t3798 = t760*t757*t596;
  t3815 = t3797 + t3798;
  t4249 = t1272*t552*t1220;
  t4254 = t1285*t1156;
  t4297 = t4249 + t4254;
  t3413 = t557*t771*t769;
  t3423 = t760*t769*t596;
  t3455 = t3413 + t3423;
  t1260 = t760*t557*t1143;
  t1261 = -1.*t771*t1143*t596;
  t1264 = t1260 + t1261;
  t3250 = t1285*t1282;
  t3252 = -1.*t1272*t614;
  t3258 = t3250 + t3252;
  t1838 = -1.*t545*t552;
  t2115 = -1.*t208*t607;
  t2227 = t1838 + t2115;
  t4544 = -1.*t1285*t552*t625;
  t4545 = t1272*t607;
  t4596 = t4544 + t4545;
  t2346 = t557*t576*t545;
  t2428 = t553*t545*t596;
  t2433 = t2346 + t2428;
  t2625 = t208*t638;
  t2716 = -1.*t552*t646;
  t2780 = t2625 + t2716;
  t2929 = t553*t557;
  t2935 = -1.*t576*t596;
  t3054 = t2929 + t2935;
  t4772 = t1272*t688;
  t4795 = -1.*t1285*t552*t694;
  t4821 = t4772 + t4795;
  t2845 = t1285*t2838;
  t2849 = -1.*t1272*t699;
  t2880 = t2845 + t2849;
  t3191 = -1.*t573*t552;
  t3193 = -1.*t208*t669;
  t3208 = t3191 + t3193;
  t4900 = -1.*t1285*t552*t708;
  t4901 = t1272*t669;
  t4935 = t4900 + t4901;
  t3266 = t557*t576*t638;
  t3335 = t553*t638*t596;
  t3347 = t3266 + t3335;
  t3357 = t208*t663;
  t3406 = -1.*t552*t732;
  t3409 = t3357 + t3406;
  t4365 = t1285*t3455;
  t4369 = -1.*t1272*t956;
  t4370 = t4365 + t4369;
  t3506 = -1.*t757*t552;
  t3590 = -1.*t208*t829;
  t3599 = t3506 + t3590;
  t5104 = -1.*t1285*t552*t1027;
  t5412 = t1272*t829;
  t5449 = t5104 + t5412;
  t3655 = t557*t771*t1062;
  t3657 = t760*t1062*t596;
  t3671 = t3655 + t3657;
  t3762 = t208*t769;
  t3766 = -1.*t552*t1076;
  t3770 = t3762 + t3766;
  t3837 = -1.*t760*t557;
  t3858 = t771*t596;
  t3861 = t3837 + t3858;
  t7261 = t1272*t1171;
  t7293 = -1.*t1285*t552*t1181;
  t7474 = t7261 + t7293;
  t3816 = t1285*t3815;
  t3822 = -1.*t1272*t1217;
  t3833 = t3816 + t3822;
  t4109 = -1.*t1143*t552;
  t4161 = -1.*t208*t1156;
  t4170 = t4109 + t4161;
  t7523 = -1.*t1285*t552*t1220;
  t7624 = t1272*t1156;
  t7774 = t7523 + t7624;
  t4371 = t557*t771*t1143;
  t4373 = t760*t1143*t596;
  t4417 = t4371 + t4373;
  t4445 = t208*t1062;
  t4446 = -1.*t552*t1264;
  t4458 = t4445 + t4446;
  t659 = t573*t552;
  t671 = t208*t669;
  t672 = t659 + t671;
  t8901 = -1.*t296;
  t9551 = 1. + t8901;
  t9910 = 0.50321*t9551;
  t10443 = 0.19821*t296;
  t11317 = t9910 + t10443;
  t14247 = -1.*t553;
  t14251 = 1. + t14247;
  t14478 = -1.*t438;
  t14595 = 1. + t14478;
  t14661 = 0.28121*t14595;
  t14666 = t438*t11317;
  t14821 = -0.305*t335*t543;
  t15010 = t14661 + t14666 + t14821;
  t8823 = 0.28121*t335;
  t13809 = -1.*t11317*t335;
  t14085 = -0.305*t438*t543;
  t14237 = t8823 + t13809 + t14085;
  t14471 = 0.15121*t14251;
  t15038 = t553*t15010;
  t15369 = t14471 + t15038;
  t15527 = t557*t15369;
  t15889 = -0.15121*t14251;
  t15996 = -0.15121*t553;
  t16107 = -0.15121*t576;
  t16253 = t576*t15010;
  t16285 = t15889 + t15996 + t16107 + t16253;
  t16291 = -1.*t16285*t596;
  t16292 = t15527 + t16291;
  t16479 = t14237*t552;
  t16497 = t208*t16292;
  t16509 = t16479 + t16497;
  t14241 = -1.*t14237*t552;
  t16306 = -1.*t208*t16292;
  t16316 = t14241 + t16306;
  t16651 = t208*t14237;
  t16653 = -1.*t552*t16292;
  t16945 = t16651 + t16653;
  t16589 = t557*t16285;
  t16592 = t15369*t596;
  t16595 = t16589 + t16592;
  t16642 = -1.*t3054*t16595;
  t16646 = -1.*t208*t688*t16509;
  t17224 = t552*t688*t16945;
  t17417 = t16642 + t16646 + t17224;
  t18572 = -1.*t557*t16285;
  t18625 = -1.*t15369*t596;
  t18725 = t18572 + t18625;
  t18217 = t2838*t16595;
  t18415 = t672*t16509;
  t18429 = t699*t16945;
  t18471 = t18217 + t18415 + t18429;
  t18519 = t208*t708*t17417;
  t18750 = -1.*t688*t16595;
  t18520 = Power(t208,2);
  t18744 = Power(t552,2);
  t18906 = 0.15121*t576;
  t18939 = -1.*t576*t15010;
  t18943 = t18906 + t18939;
  t18950 = t557*t18943;
  t18975 = t15996 + t15038;
  t18981 = -1.*t18975*t596;
  t19021 = t18950 + t18981;
  t18765 = -1.*t208*t694*t16509;
  t18775 = t552*t694*t16945;
  t18795 = t669*t16595;
  t19086 = t557*t18975;
  t19094 = t18943*t596;
  t19097 = t19086 + t19094;
  t18817 = t208*t708*t16509;
  t18828 = -1.*t552*t708*t16945;
  t18892 = t208*t694*t18471;
  t19385 = 0.28121*t438;
  t19422 = -1.*t438*t11317;
  t19423 = 0.305*t335*t543;
  t19425 = t19385 + t19422 + t19423;
  t19435 = t553*t557*t14237;
  t19436 = -1.*t576*t14237*t596;
  t19438 = t19435 + t19436;
  t711 = t545*t552;
  t712 = t208*t607;
  t714 = t711 + t712;
  t19247 = t557*t576*t14237;
  t19250 = t553*t14237*t596;
  t19251 = t19247 + t19250;
  t19431 = t19425*t552;
  t19441 = t208*t19438;
  t19473 = t19431 + t19441;
  t19505 = t208*t19425;
  t19532 = -1.*t552*t19438;
  t19542 = t19505 + t19532;
  t19638 = -0.305*t296*t335;
  t19639 = 0.305*t438*t543;
  t19641 = t19638 + t19639;
  t19670 = -0.305*t438*t296;
  t19673 = t19670 + t14821;
  t19679 = t553*t557*t19641;
  t19682 = -1.*t576*t19641*t596;
  t19683 = t19679 + t19682;
  t715 = t663*t552;
  t733 = t208*t732;
  t734 = t715 + t733;
  t19644 = t557*t576*t19641;
  t19645 = t553*t19641*t596;
  t19655 = t19644 + t19645;
  t19678 = t19673*t552;
  t19684 = t208*t19683;
  t19686 = t19678 + t19684;
  t19723 = t208*t19673;
  t19725 = -1.*t552*t19683;
  t19726 = t19723 + t19725;
  t19609 = t1282*t16595;
  t19624 = t714*t16509;
  t19625 = t614*t16945;
  t19926 = -1.*t2838*t16595;
  t19959 = -1.*t672*t16509;
  t19978 = -1.*t699*t16945;
  t19980 = t19926 + t19959 + t19978;
  t20045 = t19609 + t19624 + t19625;
  t20264 = -1.*t669*t16595;
  t20280 = -1.*t208*t708*t16509;
  t20281 = t552*t708*t16945;
  t20288 = t607*t16595;
  t20295 = t208*t625*t16509;
  t20296 = -1.*t552*t625*t16945;
  t20307 = t208*t625*t19980;
  t20312 = t208*t708*t20045;
  t640 = t638*t552;
  t650 = t208*t646;
  t658 = t640 + t650;
  t20479 = -1.*t1282*t16595;
  t20493 = -1.*t714*t16509;
  t20502 = -1.*t614*t16945;
  t20628 = t3054*t16595;
  t20632 = t208*t688*t16509;
  t20633 = -1.*t552*t688*t16945;
  t20639 = t20628 + t20632 + t20633;
  t20652 = t20479 + t20493 + t20502;
  t20655 = t208*t625*t20639;
  t20669 = t688*t16595;
  t20677 = t208*t694*t16509;
  t20683 = -1.*t552*t694*t16945;
  t20696 = -1.*t607*t16595;
  t20712 = -1.*t208*t625*t16509;
  t20717 = t552*t625*t16945;
  t20725 = t208*t694*t20652;
  t1145 = t1143*t552;
  t1160 = t208*t1156;
  t1168 = t1145 + t1160;
  t20788 = -1.*t738;
  t20789 = 1. + t20788;
  t20790 = -0.50321*t20789;
  t20793 = -0.19821*t738;
  t20794 = t20790 + t20793;
  t20799 = -1.*t760;
  t20800 = 1. + t20799;
  t20801 = -0.15121*t20800;
  t20802 = -1.*t753;
  t20804 = 1. + t20802;
  t20805 = -0.28121*t20804;
  t20806 = t753*t20794;
  t20807 = 0.305*t739*t754;
  t20808 = t20805 + t20806 + t20807;
  t20787 = 0.28121*t739;
  t20795 = t20794*t739;
  t20796 = -0.305*t753*t754;
  t20797 = t20787 + t20795 + t20796;
  t20809 = t760*t20808;
  t20810 = t20801 + t20809;
  t20811 = t557*t20810;
  t20812 = -0.15121*t760;
  t20813 = 0.15121*t771;
  t20814 = t771*t20808;
  t20815 = t20801 + t20812 + t20813 + t20814;
  t20816 = -1.*t20815*t596;
  t20817 = t20811 + t20816;
  t20821 = t20797*t552;
  t20822 = t208*t20817;
  t20824 = t20821 + t20822;
  t20798 = -1.*t20797*t552;
  t20818 = -1.*t208*t20817;
  t20819 = t20798 + t20818;
  t20837 = t208*t20797;
  t20838 = -1.*t552*t20817;
  t20840 = t20837 + t20838;
  t20829 = t557*t20815;
  t20831 = t20810*t596;
  t20832 = t20829 + t20831;
  t20835 = -1.*t3861*t20832;
  t20836 = -1.*t208*t1171*t20824;
  t20842 = t552*t1171*t20840;
  t20843 = t20835 + t20836 + t20842;
  t20861 = -1.*t557*t20815;
  t20862 = -1.*t20810*t596;
  t20863 = t20861 + t20862;
  t20852 = t3815*t20832;
  t20853 = t1168*t20824;
  t20854 = t1217*t20840;
  t20855 = t20852 + t20853 + t20854;
  t20859 = t208*t1220*t20843;
  t20872 = -1.*t1171*t20832;
  t20892 = -0.15121*t771;
  t20893 = -1.*t771*t20808;
  t20894 = t20892 + t20893;
  t20895 = t557*t20894;
  t20896 = 0.15121*t760;
  t20897 = t20896 + t20809;
  t20898 = -1.*t20897*t596;
  t20899 = t20895 + t20898;
  t20874 = -1.*t208*t1181*t20824;
  t20875 = t552*t1181*t20840;
  t20879 = t1156*t20832;
  t20903 = t557*t20897;
  t20906 = t20894*t596;
  t20908 = t20903 + t20906;
  t20883 = t208*t1220*t20824;
  t20884 = -1.*t552*t1220*t20840;
  t20890 = t208*t1181*t20855;
  t20919 = -0.28121*t739;
  t20920 = -1.*t20794*t739;
  t20921 = 0.305*t753*t754;
  t20922 = t20919 + t20920 + t20921;
  t20927 = 0.28121*t753;
  t20928 = t20927 + t20806 + t20807;
  t20930 = t760*t557*t20922;
  t20933 = -1.*t771*t20922*t596;
  t20935 = t20930 + t20933;
  t1233 = t757*t552;
  t1234 = t208*t829;
  t1245 = t1233 + t1234;
  t20923 = t557*t771*t20922;
  t20924 = t760*t20922*t596;
  t20925 = t20923 + t20924;
  t20929 = t20928*t552;
  t20936 = t208*t20935;
  t20937 = t20929 + t20936;
  t20942 = t208*t20928;
  t20944 = -1.*t552*t20935;
  t20945 = t20942 + t20944;
  t20966 = 0.305*t738*t739;
  t20967 = t20966 + t20796;
  t21005 = -0.305*t753*t738;
  t21009 = -0.305*t739*t754;
  t21011 = t21005 + t21009;
  t21050 = t760*t557*t20967;
  t21051 = -1.*t771*t20967*t596;
  t21052 = t21050 + t21051;
  t1250 = t1062*t552;
  t1267 = t208*t1264;
  t1268 = t1250 + t1267;
  t20979 = t557*t771*t20967;
  t20980 = t760*t20967*t596;
  t20983 = t20979 + t20980;
  t21041 = t21011*t552;
  t21054 = t208*t21052;
  t21056 = t21041 + t21054;
  t21058 = t208*t21011;
  t21060 = -1.*t552*t21052;
  t21061 = t21058 + t21060;
  t20951 = t3455*t20832;
  t20955 = t1245*t20824;
  t20957 = t956*t20840;
  t21083 = -1.*t3815*t20832;
  t21084 = -1.*t1168*t20824;
  t21085 = -1.*t1217*t20840;
  t21086 = t21083 + t21084 + t21085;
  t21095 = t20951 + t20955 + t20957;
  t21098 = -1.*t1156*t20832;
  t21103 = -1.*t208*t1220*t20824;
  t21105 = t552*t1220*t20840;
  t21108 = t829*t20832;
  t21113 = t208*t1027*t20824;
  t21114 = -1.*t552*t1027*t20840;
  t21117 = t208*t1027*t21086;
  t21118 = t208*t1220*t21095;
  t1043 = t769*t552;
  t1078 = t208*t1076;
  t1124 = t1043 + t1078;
  t21141 = -1.*t3455*t20832;
  t21144 = -1.*t1245*t20824;
  t21145 = -1.*t956*t20840;
  t21194 = t3861*t20832;
  t21195 = t208*t1171*t20824;
  t21196 = -1.*t552*t1171*t20840;
  t21197 = t21194 + t21195 + t21196;
  t21207 = t21141 + t21144 + t21145;
  t21210 = t208*t1027*t21197;
  t21218 = t1171*t20832;
  t21220 = t208*t1181*t20824;
  t21226 = -1.*t552*t1181*t20840;
  t21256 = -1.*t829*t20832;
  t21260 = -1.*t208*t1027*t20824;
  t21261 = t552*t1027*t20840;
  t21265 = t208*t1181*t21207;
  t18755 = -1.*t3054*t16292;
  t18797 = t2838*t16292;
  t21307 = -1.*t688*t16292;
  t21308 = t16642 + t21307;
  t21309 = t669*t21308;
  t19098 = -1.*t3054*t19097;
  t21311 = -1.*t694*t16292;
  t19116 = t2838*t19097;
  t21315 = t708*t16292;
  t21318 = t14237*t573;
  t21319 = t669*t16292;
  t21320 = t21318 + t18217 + t21319;
  t21321 = t688*t21320;
  t19324 = -1.*t3054*t19251;
  t19607 = t2838*t19251;
  t19663 = -1.*t3054*t19655;
  t19743 = t2838*t19655;
  t19745 = t3347*t16595;
  t20269 = -1.*t2838*t16292;
  t20292 = t1282*t16292;
  t21335 = t14237*t545;
  t21338 = t607*t16292;
  t20315 = -1.*t2838*t19097;
  t21354 = -1.*t708*t16292;
  t21357 = -1.*t14237*t573;
  t21358 = -1.*t669*t16292;
  t21359 = t21357 + t19926 + t21358;
  t21360 = t607*t21359;
  t20329 = t1282*t19097;
  t21362 = t625*t16292;
  t21365 = t21335 + t19609 + t21338;
  t21366 = t669*t21365;
  t20400 = t19251*t1282;
  t20417 = t2433*t16595;
  t20478 = -1.*t2838*t19251;
  t20513 = t19655*t1282;
  t20522 = -1.*t2838*t19655;
  t20526 = -1.*t3347*t16595;
  t20671 = t3054*t16292;
  t20699 = -1.*t1282*t16292;
  t21382 = -1.*t14237*t545;
  t21385 = -1.*t607*t16292;
  t21408 = t688*t16292;
  t21410 = t20628 + t21408;
  t21411 = t607*t21410;
  t20730 = t3054*t19097;
  t21413 = t694*t16292;
  t20736 = -1.*t1282*t19097;
  t21419 = -1.*t625*t16292;
  t21426 = t21382 + t20479 + t21385;
  t21427 = t688*t21426;
  t20750 = t3054*t19251;
  t20757 = -1.*t19251*t1282;
  t20758 = -1.*t2433*t16595;
  t20769 = t3054*t19655;
  t20780 = -1.*t19655*t1282;
  t20873 = -1.*t3861*t20817;
  t20880 = t3815*t20817;
  t21490 = -1.*t1171*t20817;
  t21491 = t20835 + t21490;
  t21492 = t1156*t21491;
  t20909 = -1.*t3861*t20908;
  t21494 = -1.*t1181*t20817;
  t20912 = t3815*t20908;
  t21499 = t1220*t20817;
  t21505 = t20797*t1143;
  t21506 = t1156*t20817;
  t21507 = t21505 + t20852 + t21506;
  t21508 = t1171*t21507;
  t20926 = -1.*t3861*t20925;
  t20950 = t20925*t3815;
  t20986 = -1.*t3861*t20983;
  t21067 = t20983*t3815;
  t21069 = t4417*t20832;
  t21099 = -1.*t3815*t20817;
  t21109 = t3455*t20817;
  t21526 = t20797*t757;
  t21530 = t829*t20817;
  t21120 = -1.*t3815*t20908;
  t21555 = -1.*t1220*t20817;
  t21558 = -1.*t20797*t1143;
  t21559 = -1.*t1156*t20817;
  t21560 = t21558 + t21083 + t21559;
  t21561 = t829*t21560;
  t21125 = t3455*t20908;
  t21563 = t1027*t20817;
  t21566 = t21526 + t20951 + t21530;
  t21567 = t1156*t21566;
  t21131 = t20925*t3455;
  t21132 = t3671*t20832;
  t21140 = -1.*t20925*t3815;
  t21164 = t20983*t3455;
  t21175 = -1.*t20983*t3815;
  t21179 = -1.*t4417*t20832;
  t21219 = t3861*t20817;
  t21257 = -1.*t3455*t20817;
  t21593 = -1.*t20797*t757;
  t21601 = -1.*t829*t20817;
  t21633 = t1171*t20817;
  t21634 = t21194 + t21633;
  t21635 = t829*t21634;
  t21270 = t3861*t20908;
  t21637 = t1181*t20817;
  t21273 = -1.*t3455*t20908;
  t21642 = -1.*t1027*t20817;
  t21645 = t21593 + t21141 + t21601;
  t21646 = t1171*t21645;
  t21279 = t3861*t20925;
  t21285 = -1.*t20925*t3455;
  t21286 = -1.*t3671*t20832;
  t21295 = t3861*t20983;
  t21301 = -1.*t20983*t3455;
  t21681 = t576*t15369;
  t21682 = -1.*t553*t16285;
  t21688 = t21681 + t21682;
  t21376 = t14237*t638;
  t21377 = t545*t19425;
  t21722 = Power(t553,2);
  t21725 = Power(t576,2);
  t21383 = -1.*t19425*t573;
  t21715 = -1.*t553*t663*t15369;
  t21716 = -1.*t576*t663*t16285;
  t21717 = t21357 + t21715 + t21716;
  t21391 = t545*t19673;
  t21398 = -1.*t663*t14237;
  t21399 = -1.*t19673*t573;
  t21739 = t553*t573*t15369;
  t21740 = t576*t573*t16285;
  t21741 = t21335 + t21739 + t21740;
  t21847 = -1.*t576*t15369;
  t21848 = t553*t16285;
  t21849 = t21847 + t21848;
  t21865 = -1.*t771*t20810;
  t21866 = t760*t20815;
  t21867 = t21865 + t21866;
  t21577 = t20797*t769;
  t21578 = t757*t20928;
  t21904 = Power(t760,2);
  t21908 = Power(t771,2);
  t21594 = -1.*t20928*t1143;
  t21921 = -1.*t760*t757*t20810;
  t21923 = -1.*t771*t757*t20815;
  t21924 = t21558 + t21921 + t21923;
  t21615 = t757*t21011;
  t21937 = t760*t769*t20810;
  t21938 = t771*t769*t20815;
  t21939 = t21526 + t21937 + t21938;
  t21626 = -1.*t1062*t20797;
  t21627 = -1.*t21011*t1143;
  t21964 = t771*t20810;
  t21965 = -1.*t760*t20815;
  t21966 = t21964 + t21965;
  t21969 = -1.*t663*t15010;
  t21970 = t21969 + t21357;
  t21975 = t15010*t573;
  t21976 = t21335 + t21975;
  t21994 = -0.15121*t638;
  t21995 = -0.15121*t573;
  t21996 = t21994 + t21995;
  t22006 = -0.15121*t1062;
  t22007 = -0.15121*t757;
  t22008 = t22006 + t22007;
  t22009 = t769*t20808;
  t22010 = t21526 + t22009;
  t22016 = -1.*t757*t20808;
  t22017 = t22016 + t21558;
  p_output1[0]=t614;
  p_output1[1]=t626;
  p_output1[2]=t626;
  p_output1[3]=t658;
  p_output1[4]=t672;
  p_output1[5]=-1.*t552*t688;
  p_output1[6]=t695;
  p_output1[7]=t695;
  p_output1[8]=t699;
  p_output1[9]=t710;
  p_output1[10]=t710;
  p_output1[11]=t714;
  p_output1[12]=t734;
  p_output1[13]=t956;
  p_output1[14]=t1028;
  p_output1[15]=t1028;
  p_output1[16]=t1124;
  p_output1[17]=t1168;
  p_output1[18]=-1.*t1171*t552;
  p_output1[19]=t1183;
  p_output1[20]=t1183;
  p_output1[21]=t1217;
  p_output1[22]=t1229;
  p_output1[23]=t1229;
  p_output1[24]=t1245;
  p_output1[25]=t1268;
  p_output1[26]=-1.*t1272*t1282 - 1.*t1285*t614;
  p_output1[27]=-1.*t1272*t2227;
  p_output1[28]=t2317;
  p_output1[29]=t2317;
  p_output1[30]=t1285*t2433 - 1.*t1272*t2780;
  p_output1[31]=t2880;
  p_output1[32]=-1.*t1272*t3054 + t1285*t552*t688;
  p_output1[33]=t1272*t208*t688;
  p_output1[34]=t3140;
  p_output1[35]=t3140;
  p_output1[36]=-1.*t1272*t2838 - 1.*t1285*t699;
  p_output1[37]=-1.*t1272*t3208;
  p_output1[38]=t3238;
  p_output1[39]=t3238;
  p_output1[40]=t3258;
  p_output1[41]=t1285*t3347 - 1.*t1272*t3409;
  p_output1[42]=-1.*t1272*t3455 - 1.*t1285*t956;
  p_output1[43]=-1.*t1272*t3599;
  p_output1[44]=t3651;
  p_output1[45]=t3651;
  p_output1[46]=t1285*t3671 - 1.*t1272*t3770;
  p_output1[47]=t3833;
  p_output1[48]=-1.*t1272*t3861 + t1171*t1285*t552;
  p_output1[49]=t1171*t1272*t208;
  p_output1[50]=t3946;
  p_output1[51]=t3946;
  p_output1[52]=-1.*t1217*t1285 - 1.*t1272*t3815;
  p_output1[53]=-1.*t1272*t4170;
  p_output1[54]=t4297;
  p_output1[55]=t4297;
  p_output1[56]=t4370;
  p_output1[57]=t1285*t4417 - 1.*t1272*t4458;
  p_output1[58]=t3258;
  p_output1[59]=t1285*t2227;
  p_output1[60]=t4596;
  p_output1[61]=t4596;
  p_output1[62]=t1272*t2433 + t1285*t2780;
  p_output1[63]=t1272*t2838 + t1285*t699;
  p_output1[64]=t1285*t3054 + t1272*t552*t688;
  p_output1[65]=-1.*t1285*t208*t688;
  p_output1[66]=t4821;
  p_output1[67]=t4821;
  p_output1[68]=t2880;
  p_output1[69]=t1285*t3208;
  p_output1[70]=t4935;
  p_output1[71]=t4935;
  p_output1[72]=t1272*t1282 + t1285*t614;
  p_output1[73]=t1272*t3347 + t1285*t3409;
  p_output1[74]=t4370;
  p_output1[75]=t1285*t3599;
  p_output1[76]=t5449;
  p_output1[77]=t5449;
  p_output1[78]=t1272*t3671 + t1285*t3770;
  p_output1[79]=t1217*t1285 + t1272*t3815;
  p_output1[80]=t1285*t3861 + t1171*t1272*t552;
  p_output1[81]=-1.*t1171*t1285*t208;
  p_output1[82]=t7474;
  p_output1[83]=t7474;
  p_output1[84]=t3833;
  p_output1[85]=t1285*t4170;
  p_output1[86]=t7774;
  p_output1[87]=t7774;
  p_output1[88]=t1272*t3455 + t1285*t956;
  p_output1[89]=t1272*t4417 + t1285*t4458;
  p_output1[90]=-1.*t18471*t552*t688 + t672*(t16316*t552*t688 + t16509*t552*t688) + t17417*t699 + t208*t688*(t16945*t3208 + t16945*t672 + t16316*t699 + t16509*t699);
  p_output1[91]=t18519 + t18892 + t672*(t18750 + t18755 + t18765 + t18775 - 1.*t18520*t18725*t688 - 1.*t18725*t18744*t688) + t208*t688*(t18795 + t18797 + t18817 + t18828 + t18725*t208*t672 - 1.*t18725*t552*t699);
  p_output1[92]=t18519 + t18892 + t672*(t18750 + t18765 + t18775 + t19098 - 1.*t18520*t19021*t688 - 1.*t18744*t19021*t688) + t208*t688*(t18795 + t18817 + t18828 + t19116 + t19021*t208*t672 - 1.*t19021*t552*t699);
  p_output1[93]=t672*(t19324 - 1.*t19473*t208*t688 + t19542*t552*t688) + t208*t688*(t19607 + t19609 + t19624 + t19625 + t19473*t672 + t19542*t699) + t17417*t714;
  p_output1[94]=t672*(t19663 - 1.*t19686*t208*t688 + t19726*t552*t688) + t17417*t734 + t208*t688*(t19743 + t19745 + t16945*t3409 + t19686*t672 + t19726*t699 + t16509*t734);
  p_output1[95]=t19980*t614 + t20045*t699 + (-1.*t16945*t3208 - 1.*t16945*t672 - 1.*t16316*t699 - 1.*t16509*t699)*t714 + t672*(t16945*t2227 + t16316*t614 + t16509*t614 + t16945*t714);
  p_output1[96]=t20307 + t20312 + (t20264 + t20269 + t20280 + t20281 - 1.*t18725*t208*t672 + t18725*t552*t699)*t714 + t672*(t20288 + t20292 + t20295 + t20296 - 1.*t18725*t552*t614 + t18725*t208*t714);
  p_output1[97]=t20307 + t20312 + (t20264 + t20280 + t20281 + t20315 - 1.*t19021*t208*t672 + t19021*t552*t699)*t714 + t672*(t20288 + t20295 + t20296 + t20329 - 1.*t19021*t552*t614 + t19021*t208*t714);
  p_output1[98]=t19980*t658 + t20045*t714 + (t20478 + t20479 + t20493 + t20502 - 1.*t19473*t672 - 1.*t19542*t699)*t714 + t672*(t20400 + t20417 + t16945*t2780 + t19542*t614 + t16509*t658 + t19473*t714);
  p_output1[99]=t19980*t672 + t672*(t18217 + t18415 + t18429 + t20513 + t19726*t614 + t19686*t714) + t20045*t734 + t714*(t20522 + t20526 - 1.*t16945*t3409 - 1.*t19686*t672 - 1.*t19726*t699 - 1.*t16509*t734);
  p_output1[100]=t20639*t614 - 1.*t20652*t552*t688 + (-1.*t16316*t552*t688 - 1.*t16509*t552*t688)*t714 + t208*t688*(-1.*t16945*t2227 - 1.*t16316*t614 - 1.*t16509*t614 - 1.*t16945*t714);
  p_output1[101]=t20655 + t20725 + (t20669 + t20671 + t20677 + t20683 + t18520*t18725*t688 + t18725*t18744*t688)*t714 + t208*t688*(t20696 + t20699 + t20712 + t20717 + t18725*t552*t614 - 1.*t18725*t208*t714);
  p_output1[102]=t20655 + t20725 + (t20669 + t20677 + t20683 + t20730 + t18520*t19021*t688 + t18744*t19021*t688)*t714 + t208*t688*(t20696 + t20712 + t20717 + t20736 + t19021*t552*t614 - 1.*t19021*t208*t714);
  p_output1[103]=t20639*t658 + (t20750 + t19473*t208*t688 - 1.*t19542*t552*t688)*t714 + t208*t688*(t20757 + t20758 - 1.*t16945*t2780 - 1.*t19542*t614 - 1.*t16509*t658 - 1.*t19473*t714);
  p_output1[104]=t20639*t672 + (t20769 + t19686*t208*t688 - 1.*t19726*t552*t688)*t714 + t208*t688*(t19926 + t19959 + t19978 + t20780 - 1.*t19726*t614 - 1.*t19686*t714);
  p_output1[105]=t1217*t20843 + t1171*t208*(t1217*t20819 + t1217*t20824 + t1168*t20840 + t20840*t4170) - 1.*t1171*t20855*t552 + t1168*(t1171*t20819*t552 + t1171*t20824*t552);
  p_output1[106]=t20859 + t1168*(-1.*t1171*t18520*t20863 - 1.*t1171*t18744*t20863 + t20872 + t20873 + t20874 + t20875) + t20890 + t1171*t208*(t1168*t208*t20863 + t20879 + t20880 + t20883 + t20884 - 1.*t1217*t20863*t552);
  p_output1[107]=t20859 + t20890 + t1168*(t20872 + t20874 + t20875 - 1.*t1171*t18520*t20899 - 1.*t1171*t18744*t20899 + t20909) + t1171*t208*(t20879 + t20883 + t20884 + t1168*t208*t20899 + t20912 - 1.*t1217*t20899*t552);
  p_output1[108]=t1245*t20843 + t1171*t208*(t1168*t20937 + t1217*t20945 + t20950 + t20951 + t20955 + t20957) + t1168*(t20926 - 1.*t1171*t208*t20937 + t1171*t20945*t552);
  p_output1[109]=t1268*t20843 + t1171*t208*(t1268*t20824 + t1168*t21056 + t1217*t21061 + t21067 + t21069 + t20840*t4458) + t1168*(t20986 - 1.*t1171*t208*t21056 + t1171*t21061*t552);
  p_output1[110]=t1217*t21095 + t1245*(-1.*t1217*t20819 - 1.*t1217*t20824 - 1.*t1168*t20840 - 1.*t20840*t4170) + t21086*t956 + t1168*(t1245*t20840 + t20840*t3599 + t20819*t956 + t20824*t956);
  p_output1[111]=t21117 + t21118 + t1245*(-1.*t1168*t208*t20863 + t21098 + t21099 + t21103 + t21105 + t1217*t20863*t552) + t1168*(t1245*t208*t20863 + t21108 + t21109 + t21113 + t21114 - 1.*t20863*t552*t956);
  p_output1[112]=t21117 + t21118 + t1245*(-1.*t1168*t208*t20899 + t21098 + t21103 + t21105 + t21120 + t1217*t20899*t552) + t1168*(t1245*t208*t20899 + t21108 + t21113 + t21114 + t21125 - 1.*t20899*t552*t956);
  p_output1[113]=t1124*t21086 + t1245*t21095 + t1245*(-1.*t1168*t20937 - 1.*t1217*t20945 + t21140 + t21141 + t21144 + t21145) + t1168*(t1124*t20824 + t1245*t20937 + t21131 + t21132 + t20840*t3770 + t20945*t956);
  p_output1[114]=t1168*t21086 + t1268*t21095 + t1245*(-1.*t1268*t20824 - 1.*t1168*t21056 - 1.*t1217*t21061 + t21175 + t21179 - 1.*t20840*t4458) + t1168*(t20852 + t20853 + t20854 + t1245*t21056 + t21164 + t21061*t956);
  p_output1[115]=-1.*t1171*t21207*t552 + t1245*(-1.*t1171*t20819*t552 - 1.*t1171*t20824*t552) + t21197*t956 + t1171*t208*(-1.*t1245*t20840 - 1.*t20840*t3599 - 1.*t20819*t956 - 1.*t20824*t956);
  p_output1[116]=t21210 + t1245*(t1171*t18520*t20863 + t1171*t18744*t20863 + t21218 + t21219 + t21220 + t21226) + t21265 + t1171*t208*(-1.*t1245*t208*t20863 + t21256 + t21257 + t21260 + t21261 + t20863*t552*t956);
  p_output1[117]=t21210 + t21265 + t1245*(t1171*t18520*t20899 + t1171*t18744*t20899 + t21218 + t21220 + t21226 + t21270) + t1171*t208*(-1.*t1245*t208*t20899 + t21256 + t21260 + t21261 + t21273 + t20899*t552*t956);
  p_output1[118]=t1124*t21197 + t1245*(t1171*t208*t20937 + t21279 - 1.*t1171*t20945*t552) + t1171*t208*(-1.*t1124*t20824 - 1.*t1245*t20937 + t21285 + t21286 - 1.*t20840*t3770 - 1.*t20945*t956);
  p_output1[119]=t1168*t21197 + t1245*(t1171*t208*t21056 + t21295 - 1.*t1171*t21061*t552) + t1171*t208*(-1.*t1245*t21056 + t21083 + t21084 + t21085 + t21301 - 1.*t21061*t956);
  p_output1[120]=t21309 + t21321 + t3054*(t18795 + t18797 + t21315 + t18725*t669) + t2838*(t18750 + t18755 + t21311 - 1.*t18725*t688);
  p_output1[121]=t21309 + t21321 + t3054*(t18795 + t19116 + t21315 + t19021*t669) + t2838*(t18750 + t19098 + t21311 - 1.*t19021*t688);
  p_output1[122]=t1282*t21308 + t3054*(t19607 + t19609 + t21335 + t21338 + t19425*t573 + t19438*t669) + t2838*(t19324 - 1.*t19438*t688);
  p_output1[123]=t21308*t3347 + t2838*(t19663 - 1.*t19683*t688) + t3054*(t19743 + t19745 + t19673*t573 + t14237*t663 + t19683*t669 + t16292*t732);
  p_output1[124]=t21360 + t21366 + t2838*(t20288 + t20292 + t21362 + t18725*t607) + t1282*(t20264 + t20269 + t21354 - 1.*t18725*t669);
  p_output1[125]=t21360 + t21366 + t2838*(t20288 + t20329 + t21362 + t19021*t607) + t1282*(t20264 + t20315 + t21354 - 1.*t19021*t669);
  p_output1[126]=t1282*t21365 + t21359*t2433 + t2838*(t20400 + t20417 + t21376 + t21377 + t19438*t607 + t16292*t646) + t1282*(t20478 + t20479 + t21382 + t21383 + t21385 - 1.*t19438*t669);
  p_output1[127]=t21359*t2838 + t21365*t3347 + t2838*(t18217 + t20513 + t21318 + t21319 + t21391 + t19683*t607) + t1282*(t20522 + t20526 + t21398 + t21399 - 1.*t19683*t669 - 1.*t16292*t732);
  p_output1[128]=t21411 + t21427 + t3054*(t20696 + t20699 + t21419 - 1.*t18725*t607) + t1282*(t20669 + t20671 + t21413 + t18725*t688);
  p_output1[129]=t21411 + t21427 + t3054*(t20696 + t20736 + t21419 - 1.*t19021*t607) + t1282*(t20669 + t20730 + t21413 + t19021*t688);
  p_output1[130]=t21410*t2433 + t3054*(t20757 + t20758 - 1.*t19425*t545 - 1.*t19438*t607 - 1.*t14237*t638 - 1.*t16292*t646) + t1282*(t20750 + t19438*t688);
  p_output1[131]=t21410*t2838 + t3054*(t19926 + t20780 + t21357 + t21358 - 1.*t19673*t545 - 1.*t19683*t607) + t1282*(t20769 + t19683*t688);
  p_output1[132]=t21492 + t21508 + (-1.*t1171*t20863 + t20872 + t20873 + t21494)*t3815 + (t1156*t20863 + t20879 + t20880 + t21499)*t3861;
  p_output1[133]=t21492 + t21508 + (t20872 - 1.*t1171*t20899 + t20909 + t21494)*t3815 + (t20879 + t1156*t20899 + t20912 + t21499)*t3861;
  p_output1[134]=t21491*t3455 + (t20926 - 1.*t1171*t20935)*t3815 + (t1143*t20928 + t1156*t20935 + t20950 + t20951 + t21526 + t21530)*t3861;
  p_output1[135]=(t20986 - 1.*t1171*t21052)*t3815 + (t1062*t20797 + t1264*t20817 + t1143*t21011 + t1156*t21052 + t21067 + t21069)*t3861 + t21491*t4417;
  p_output1[136]=t21561 + t21567 + (-1.*t1156*t20863 + t21098 + t21099 + t21555)*t3455 + t3815*(t21108 + t21109 + t21563 + t20863*t829);
  p_output1[137]=t21561 + t21567 + (-1.*t1156*t20899 + t21098 + t21120 + t21555)*t3455 + t3815*(t21108 + t21125 + t21563 + t20899*t829);
  p_output1[138]=t21566*t3455 + (-1.*t1156*t20935 + t21140 + t21141 + t21593 + t21594 + t21601)*t3455 + t21560*t3671 + t3815*(t1076*t20817 + t21131 + t21132 + t21577 + t21578 + t20935*t829);
  p_output1[139]=(-1.*t1264*t20817 - 1.*t1156*t21052 + t21175 + t21179 + t21626 + t21627)*t3455 + t21560*t3815 + t21566*t4417 + t3815*(t20852 + t21164 + t21505 + t21506 + t21615 + t21052*t829);
  p_output1[140]=t21635 + t21646 + (t1171*t20863 + t21218 + t21219 + t21637)*t3455 + t3861*(t21256 + t21257 + t21642 - 1.*t20863*t829);
  p_output1[141]=t21635 + t21646 + (t1171*t20899 + t21218 + t21270 + t21637)*t3455 + t3861*(t21256 + t21273 + t21642 - 1.*t20899*t829);
  p_output1[142]=(t1171*t20935 + t21279)*t3455 + t21634*t3671 + t3861*(-1.*t1076*t20817 + t21285 + t21286 - 1.*t20928*t757 - 1.*t20797*t769 - 1.*t20935*t829);
  p_output1[143]=(t1171*t21052 + t21295)*t3455 + t21634*t3815 + t3861*(t21083 + t21301 + t21558 + t21559 - 1.*t21011*t757 - 1.*t21052*t829);
  p_output1[144]=t573*(t15369*t553 - 1.*t18975*t553 + t16285*t576 + t18943*t576);
  p_output1[145]=t21688*t545;
  p_output1[146]=t21688*t663;
  p_output1[147]=t573*(t16285*t553*t573 + t18943*t553*t573 - 1.*t15369*t573*t576 + t18975*t573*t576) + t545*(-1.*t16285*t553*t663 - 1.*t18943*t553*t663 + t15369*t576*t663 - 1.*t18975*t576*t663);
  p_output1[148]=t21741*t545 + t573*(t21376 + t21377 + t15369*t545*t553 + t14237*t21722*t573 + t14237*t21725*t573 + t16285*t545*t576) + t21717*t638 + t545*(t21382 + t21383 - 1.*t15369*t553*t573 - 1.*t16285*t573*t576 - 1.*t14237*t21722*t663 - 1.*t14237*t21725*t663);
  p_output1[149]=t21717*t573 + t21741*t663 + t545*(t21398 + t21399 - 1.*t15369*t553*t638 - 1.*t16285*t576*t638 - 1.*t19641*t21722*t663 - 1.*t19641*t21725*t663) + t573*(t21318 + t21391 + t19641*t21722*t573 + t19641*t21725*t573 + t15369*t553*t663 + t16285*t576*t663);
  p_output1[150]=t545*(-1.*t15369*t553 + t18975*t553 - 1.*t16285*t576 - 1.*t18943*t576);
  p_output1[151]=t21849*t638;
  p_output1[152]=t21849*t573;
  p_output1[153]=t1143*(-1.*t20810*t760 + t20897*t760 - 1.*t20815*t771 - 1.*t20894*t771);
  p_output1[154]=t21867*t757;
  p_output1[155]=t1062*t21867;
  p_output1[156]=t757*(-1.*t20815*t757*t760 - 1.*t20894*t757*t760 + t20810*t757*t771 - 1.*t20897*t757*t771) + t1143*(t20815*t760*t769 + t20894*t760*t769 - 1.*t20810*t769*t771 + t20897*t769*t771);
  p_output1[157]=t21939*t757 + t21924*t769 + t1143*(t21577 + t21578 + t1062*t20810*t760 + t20922*t21904*t769 + t20922*t21908*t769 + t1062*t20815*t771) + t757*(t21593 + t21594 - 1.*t20922*t21904*t757 - 1.*t20922*t21908*t757 - 1.*t20810*t760*t769 - 1.*t20815*t769*t771);
  p_output1[158]=t1143*t21924 + t1062*t21939 + t757*(t21626 + t21627 - 1.*t20967*t21904*t757 - 1.*t20967*t21908*t757 - 1.*t1143*t20810*t760 - 1.*t1143*t20815*t771) + t1143*(t21505 + t21615 + t20810*t757*t760 + t20967*t21904*t769 + t20967*t21908*t769 + t20815*t757*t771);
  p_output1[159]=t757*(t20810*t760 - 1.*t20897*t760 + t20815*t771 + t20894*t771);
  p_output1[160]=t21966*t769;
  p_output1[161]=t1143*t21966;
  p_output1[162]=t21976*t545 + (t21318 + t21376 + t21377 + t15010*t545)*t573 + t545*(t21382 + t21383 + t21398 - 1.*t15010*t573) + t21970*t638;
  p_output1[163]=t21970*t573 + t21976*t663 + t573*(t21318 + t21391 + t19641*t573 + t15010*t663) + t545*(t21398 + t21399 - 1.*t15010*t638 - 1.*t19641*t663);
  p_output1[164]=t21996;
  p_output1[165]=t21996;
  p_output1[166]=0.28121*t296 - 1.*t11317*t296 - 0.305*Power(t296,2);
  p_output1[167]=-0.28121*t543 + t11317*t543 + 0.305*t296*t543;
  p_output1[168]=t22008;
  p_output1[169]=t22008;
  p_output1[170]=t22010*t757 + t22017*t769 + t757*(t21593 + t21594 - 1.*t20922*t757 - 1.*t20808*t769) + t1143*(t1062*t20808 + t21577 + t21578 + t20922*t769);
  p_output1[171]=t1062*t22010 + t1143*t22017 + t757*(-1.*t1143*t20808 + t21626 + t21627 - 1.*t20967*t757) + t1143*(t21505 + t21615 + t20808*t757 + t20967*t769);
  p_output1[172]=0.28121*t738 + t20794*t738 - 0.305*Power(t738,2);
  p_output1[173]=-0.28121*t754 - 1.*t20794*t754 + 0.305*t738*t754;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
