/*
 * Automatically Generated from Mathematica.
 * Fri 10 Jun 2022 21:31:42 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t61;
  double t43;
  double t48;
  double t70;
  double t120;
  double t126;
  double t127;
  double t9;
  double t116;
  double t133;
  double t114;
  double t138;
  double t179;
  double t182;
  double t192;
  double t193;
  double t112;
  double t57;
  double t90;
  double t99;
  double t253;
  double t259;
  double t261;
  double t288;
  double t291;
  double t293;
  double t296;
  double t262;
  double t264;
  double t270;
  double t319;
  double t327;
  double t328;
  double t329;
  double t131;
  double t142;
  double t148;
  double t195;
  double t203;
  double t215;
  double t403;
  double t390;
  double t393;
  double t406;
  double t470;
  double t471;
  double t472;
  double t480;
  double t464;
  double t579;
  double t615;
  double t622;
  double t624;
  double t670;
  double t695;
  double t731;
  double t399;
  double t408;
  double t410;
  double t1019;
  double t1033;
  double t1035;
  double t1040;
  double t872;
  double t891;
  double t894;
  double t924;
  double t929;
  double t948;
  double t1073;
  double t1087;
  double t1100;
  double t1131;
  double t473;
  double t550;
  double t551;
  double t105;
  double t169;
  double t176;
  double t1244;
  double t1297;
  double t1363;
  double t1367;
  double t1368;
  double t230;
  double t236;
  double t242;
  double t297;
  double t313;
  double t316;
  double t280;
  double t282;
  double t286;
  double t1497;
  double t1502;
  double t1503;
  double t1465;
  double t1466;
  double t1468;
  double t1518;
  double t1521;
  double t1523;
  double t1253;
  double t1273;
  double t1281;
  double t354;
  double t364;
  double t365;
  double t425;
  double t572;
  double t573;
  double t1779;
  double t1874;
  double t1889;
  double t742;
  double t745;
  double t776;
  double t1041;
  double t1061;
  double t1066;
  double t963;
  double t976;
  double t996;
  double t2172;
  double t2204;
  double t2208;
  double t2087;
  double t2093;
  double t2103;
  double t2233;
  double t2234;
  double t2245;
  double t1686;
  double t1693;
  double t1702;
  double t1171;
  double t1211;
  double t1213;
  double t1531;
  double t1533;
  double t1538;
  double t1324;
  double t1348;
  double t1351;
  double t2331;
  double t2338;
  double t2339;
  double t1376;
  double t1381;
  double t1383;
  double t1408;
  double t1441;
  double t1449;
  double t1488;
  double t1489;
  double t1490;
  double t2407;
  double t2411;
  double t2448;
  double t1479;
  double t1481;
  double t1483;
  double t1510;
  double t1511;
  double t1514;
  double t2460;
  double t2467;
  double t2474;
  double t1543;
  double t1548;
  double t1588;
  double t1624;
  double t1626;
  double t1629;
  double t2247;
  double t2258;
  double t2262;
  double t1710;
  double t1730;
  double t1743;
  double t2509;
  double t2516;
  double t2518;
  double t1933;
  double t1938;
  double t1961;
  double t1970;
  double t2069;
  double t2074;
  double t2141;
  double t2148;
  double t2149;
  double t2557;
  double t2570;
  double t2571;
  double t2113;
  double t2118;
  double t2122;
  double t2225;
  double t2226;
  double t2229;
  double t2591;
  double t2601;
  double t2604;
  double t2263;
  double t2271;
  double t2272;
  double t2290;
  double t2291;
  double t2320;
  double t250;
  double t276;
  double t279;
  double t2648;
  double t2649;
  double t2654;
  double t2661;
  double t2666;
  double t2677;
  double t2681;
  double t2700;
  double t2702;
  double t2703;
  double t2715;
  double t2718;
  double t2719;
  double t2720;
  double t2647;
  double t2667;
  double t2668;
  double t2669;
  double t2727;
  double t2728;
  double t2730;
  double t2731;
  double t2736;
  double t2739;
  double t2745;
  double t2748;
  double t2757;
  double t2775;
  double t2777;
  double t2782;
  double t2671;
  double t2763;
  double t2772;
  double t2802;
  double t2803;
  double t2804;
  double t2790;
  double t2792;
  double t2793;
  double t2795;
  double t2798;
  double t2812;
  double t2821;
  double t2922;
  double t2923;
  double t2928;
  double t2877;
  double t2889;
  double t2896;
  double t2899;
  double t2916;
  double t2918;
  double t2934;
  double t2986;
  double t2987;
  double t2991;
  double t2995;
  double t3003;
  double t3006;
  double t3011;
  double t3014;
  double t2939;
  double t2942;
  double t2949;
  double t3022;
  double t3026;
  double t3027;
  double t2972;
  double t2974;
  double t2975;
  double t2982;
  double t3141;
  double t3152;
  double t3161;
  double t3169;
  double t3183;
  double t3188;
  double t3207;
  double t332;
  double t335;
  double t336;
  double t3083;
  double t3085;
  double t3116;
  double t3176;
  double t3214;
  double t3224;
  double t3242;
  double t3250;
  double t3256;
  double t3381;
  double t3384;
  double t3385;
  double t3448;
  double t3458;
  double t3468;
  double t3499;
  double t3511;
  double t345;
  double t379;
  double t389;
  double t3397;
  double t3411;
  double t3424;
  double t3460;
  double t3515;
  double t3518;
  double t3530;
  double t3534;
  double t3538;
  double t3329;
  double t3345;
  double t3356;
  double t3756;
  double t3758;
  double t3763;
  double t3767;
  double t3831;
  double t3880;
  double t3886;
  double t3897;
  double t3953;
  double t3980;
  double t3991;
  double t4062;
  double t4065;
  double t228;
  double t244;
  double t249;
  double t4360;
  double t4361;
  double t4367;
  double t4653;
  double t4688;
  double t4718;
  double t4722;
  double t4770;
  double t4779;
  double t4793;
  double t4801;
  double t4814;
  double t4833;
  double t4839;
  double t4842;
  double t4856;
  double t910;
  double t959;
  double t962;
  double t5172;
  double t5173;
  double t5174;
  double t5186;
  double t5194;
  double t5219;
  double t5227;
  double t5240;
  double t5249;
  double t5251;
  double t5260;
  double t5261;
  double t5263;
  double t5269;
  double t5167;
  double t5202;
  double t5204;
  double t5212;
  double t5288;
  double t5299;
  double t5307;
  double t5312;
  double t5314;
  double t5324;
  double t5337;
  double t5365;
  double t5390;
  double t5412;
  double t5415;
  double t5416;
  double t5214;
  double t5394;
  double t5400;
  double t5463;
  double t5467;
  double t5469;
  double t5438;
  double t5443;
  double t5449;
  double t5453;
  double t5455;
  double t5473;
  double t5475;
  double t5521;
  double t5523;
  double t5526;
  double t5496;
  double t5499;
  double t5506;
  double t5507;
  double t5519;
  double t5536;
  double t5689;
  double t5716;
  double t5718;
  double t5720;
  double t5729;
  double t5737;
  double t5744;
  double t5746;
  double t5554;
  double t5565;
  double t5583;
  double t5752;
  double t5755;
  double t5760;
  double t5655;
  double t5657;
  double t5677;
  double t5808;
  double t5813;
  double t5816;
  double t5821;
  double t5832;
  double t5854;
  double t5867;
  double t5870;
  double t5877;
  double t1134;
  double t1135;
  double t1150;
  double t5822;
  double t5824;
  double t5826;
  double t5860;
  double t5885;
  double t5886;
  double t5897;
  double t5898;
  double t5899;
  double t5992;
  double t5994;
  double t6003;
  double t6004;
  double t6008;
  double t6012;
  double t6018;
  double t6020;
  double t1152;
  double t1224;
  double t1243;
  double t5996;
  double t5997;
  double t5998;
  double t6009;
  double t6022;
  double t6031;
  double t6034;
  double t6039;
  double t6043;
  double t5971;
  double t5986;
  double t5987;
  double t6102;
  double t6123;
  double t6128;
  double t6147;
  double t6178;
  double t6189;
  double t6234;
  double t6263;
  double t6299;
  double t6343;
  double t6344;
  double t6371;
  double t6373;
  double t654;
  double t808;
  double t839;
  double t6567;
  double t6578;
  double t6582;
  double t6699;
  double t6700;
  double t6706;
  double t6711;
  double t6740;
  double t6744;
  double t6750;
  double t6754;
  double t6760;
  double t6775;
  double t6812;
  double t6819;
  double t6831;
  double t2941;
  double t2973;
  double t7034;
  double t7038;
  double t7047;
  double t3028;
  double t7051;
  double t3064;
  double t7058;
  double t7072;
  double t7075;
  double t7077;
  double t7080;
  double t3140;
  double t3286;
  double t3437;
  double t3563;
  double t3608;
  double t3884;
  double t3963;
  double t7115;
  double t7122;
  double t4131;
  double t7210;
  double t7219;
  double t7225;
  double t7226;
  double t7227;
  double t4174;
  double t7234;
  double t7245;
  double t7246;
  double t4281;
  double t4294;
  double t4338;
  double t4378;
  double t4420;
  double t4451;
  double t4795;
  double t4834;
  double t7319;
  double t7329;
  double t7467;
  double t7473;
  double t7475;
  double t4873;
  double t7486;
  double t4910;
  double t7500;
  double t7513;
  double t7517;
  double t4995;
  double t5047;
  double t5066;
  double t5086;
  double t5137;
  double t5545;
  double t5608;
  double t7724;
  double t7729;
  double t7740;
  double t5768;
  double t7747;
  double t5789;
  double t7764;
  double t7784;
  double t7786;
  double t7787;
  double t7791;
  double t5827;
  double t5959;
  double t5999;
  double t6059;
  double t6062;
  double t6215;
  double t6310;
  double t7879;
  double t7883;
  double t6402;
  double t7987;
  double t7993;
  double t8009;
  double t8019;
  double t8033;
  double t6488;
  double t8043;
  double t8087;
  double t8088;
  double t6522;
  double t6524;
  double t6565;
  double t6614;
  double t6644;
  double t6651;
  double t6752;
  double t6778;
  double t8209;
  double t8245;
  double t8374;
  double t8381;
  double t8395;
  double t6843;
  double t8404;
  double t6852;
  double t8437;
  double t8474;
  double t8489;
  double t6886;
  double t6942;
  double t6944;
  double t6975;
  double t6992;
  double t8846;
  double t8850;
  double t8866;
  double t7299;
  double t7301;
  double t9022;
  double t9027;
  double t7326;
  double t9011;
  double t9016;
  double t9017;
  double t7373;
  double t7401;
  double t7412;
  double t9081;
  double t9086;
  double t9093;
  double t9218;
  double t9221;
  double t9235;
  double t9257;
  double t9260;
  double t9266;
  double t8160;
  double t8171;
  double t9365;
  double t9386;
  double t8225;
  double t9409;
  double t9412;
  double t9428;
  double t8283;
  double t9470;
  double t9475;
  double t9477;
  double t8322;
  double t8323;
  double t9639;
  double t9652;
  double t9659;
  double t9665;
  double t9673;
  double t9698;
  double t9699;
  double t9753;
  double t9754;
  double t9758;
  double t9784;
  double t9785;
  double t9786;
  double t9788;
  double t9789;
  double t9804;
  double t9805;
  t61 = Cos(var1[7]);
  t43 = Cos(var1[8]);
  t48 = Sin(var1[7]);
  t70 = Sin(var1[8]);
  t120 = t61*t43;
  t126 = t48*t70;
  t127 = t120 + t126;
  t9 = Cos(var1[4]);
  t116 = Cos(var1[6]);
  t133 = Sin(var1[5]);
  t114 = Cos(var1[5]);
  t138 = Sin(var1[6]);
  t179 = -1.*t116*t133*t127;
  t182 = -1.*t114*t138*t127;
  t192 = t179 + t182;
  t193 = t9*t192;
  t112 = Sin(var1[4]);
  t57 = -1.*t43*t48;
  t90 = t61*t70;
  t99 = t57 + t90;
  t253 = t43*t48;
  t259 = -1.*t61*t70;
  t261 = t253 + t259;
  t288 = -1.*t114*t116;
  t291 = t133*t138;
  t293 = t288 + t291;
  t296 = t9*t293;
  t262 = t114*t116*t261;
  t264 = -1.*t133*t138*t261;
  t270 = t262 + t264;
  t319 = -1.*t116*t133*t261;
  t327 = -1.*t114*t138*t261;
  t328 = t319 + t327;
  t329 = t9*t328;
  t131 = t114*t116*t127;
  t142 = -1.*t133*t138*t127;
  t148 = t131 + t142;
  t195 = -1.*t61*t43;
  t203 = -1.*t48*t70;
  t215 = t195 + t203;
  t403 = Cos(var1[16]);
  t390 = Cos(var1[17]);
  t393 = Sin(var1[16]);
  t406 = Sin(var1[17]);
  t470 = -1.*t403*t390;
  t471 = -1.*t393*t406;
  t472 = t470 + t471;
  t480 = Sin(var1[15]);
  t464 = Cos(var1[15]);
  t579 = -1.*t114*t480*t472;
  t615 = -1.*t464*t472*t133;
  t622 = t579 + t615;
  t624 = t9*t622;
  t670 = t390*t393;
  t695 = -1.*t403*t406;
  t731 = t670 + t695;
  t399 = -1.*t390*t393;
  t408 = t403*t406;
  t410 = t399 + t408;
  t1019 = t464*t114;
  t1033 = -1.*t480*t133;
  t1035 = t1019 + t1033;
  t1040 = t9*t1035;
  t872 = t403*t390;
  t891 = t393*t406;
  t894 = t872 + t891;
  t924 = t464*t114*t410;
  t929 = -1.*t480*t410*t133;
  t948 = t924 + t929;
  t1073 = -1.*t114*t480*t410;
  t1087 = -1.*t464*t410*t133;
  t1100 = t1073 + t1087;
  t1131 = t9*t1100;
  t473 = t464*t114*t472;
  t550 = -1.*t480*t472*t133;
  t551 = t473 + t550;
  t105 = t9*t99;
  t169 = -1.*t112*t148;
  t176 = t105 + t169;
  t1244 = Sin(var1[3]);
  t1297 = Cos(var1[3]);
  t1363 = t1244*t112*t192;
  t1367 = t1297*t148;
  t1368 = t1363 + t1367;
  t230 = t114*t116*t99;
  t236 = -1.*t133*t138*t99;
  t242 = t230 + t236;
  t297 = t9*t127;
  t313 = -1.*t112*t270;
  t316 = t297 + t313;
  t280 = -1.*t116*t133;
  t282 = -1.*t114*t138;
  t286 = t280 + t282;
  t1497 = t1297*t286;
  t1502 = t1244*t112*t293;
  t1503 = t1497 + t1502;
  t1465 = t116*t133*t261;
  t1466 = t114*t138*t261;
  t1468 = t1465 + t1466;
  t1518 = t1244*t112*t328;
  t1521 = t1297*t270;
  t1523 = t1518 + t1521;
  t1253 = t116*t133*t127;
  t1273 = t114*t138*t127;
  t1281 = t1253 + t1273;
  t354 = t114*t116*t215;
  t364 = -1.*t133*t138*t215;
  t365 = t354 + t364;
  t425 = t9*t410;
  t572 = -1.*t112*t551;
  t573 = t425 + t572;
  t1779 = t1244*t112*t622;
  t1874 = t1297*t551;
  t1889 = t1779 + t1874;
  t742 = t464*t114*t731;
  t745 = -1.*t480*t731*t133;
  t776 = t742 + t745;
  t1041 = t9*t894;
  t1061 = -1.*t112*t948;
  t1066 = t1041 + t1061;
  t963 = t114*t480;
  t976 = t464*t133;
  t996 = t963 + t976;
  t2172 = t1297*t996;
  t2204 = t1244*t112*t1035;
  t2208 = t2172 + t2204;
  t2087 = t114*t480*t410;
  t2093 = t464*t410*t133;
  t2103 = t2087 + t2093;
  t2233 = t1244*t112*t1100;
  t2234 = t1297*t948;
  t2245 = t2233 + t2234;
  t1686 = t114*t480*t472;
  t1693 = t464*t472*t133;
  t1702 = t1686 + t1693;
  t1171 = t464*t114*t894;
  t1211 = -1.*t480*t894*t133;
  t1213 = t1171 + t1211;
  t1531 = t1297*t1281;
  t1533 = -1.*t1244*t176;
  t1538 = t1531 + t1533;
  t1324 = -1.*t112*t99;
  t1348 = -1.*t9*t148;
  t1351 = t1324 + t1348;
  t2331 = -1.*t1297*t112*t192;
  t2338 = t1244*t148;
  t2339 = t2331 + t2338;
  t1376 = t116*t133*t99;
  t1381 = t114*t138*t99;
  t1383 = t1376 + t1381;
  t1408 = t9*t215;
  t1441 = -1.*t112*t242;
  t1449 = t1408 + t1441;
  t1488 = t114*t116;
  t1489 = -1.*t133*t138;
  t1490 = t1488 + t1489;
  t2407 = t1244*t286;
  t2411 = -1.*t1297*t112*t293;
  t2448 = t2407 + t2411;
  t1479 = t1297*t1468;
  t1481 = -1.*t1244*t316;
  t1483 = t1479 + t1481;
  t1510 = -1.*t112*t127;
  t1511 = -1.*t9*t270;
  t1514 = t1510 + t1511;
  t2460 = -1.*t1297*t112*t328;
  t2467 = t1244*t270;
  t2474 = t2460 + t2467;
  t1543 = t116*t133*t215;
  t1548 = t114*t138*t215;
  t1588 = t1543 + t1548;
  t1624 = t9*t261;
  t1626 = -1.*t112*t365;
  t1629 = t1624 + t1626;
  t2247 = t1297*t1702;
  t2258 = -1.*t1244*t573;
  t2262 = t2247 + t2258;
  t1710 = -1.*t410*t112;
  t1730 = -1.*t9*t551;
  t1743 = t1710 + t1730;
  t2509 = -1.*t1297*t112*t622;
  t2516 = t1244*t551;
  t2518 = t2509 + t2516;
  t1933 = t114*t480*t731;
  t1938 = t464*t731*t133;
  t1961 = t1933 + t1938;
  t1970 = t9*t472;
  t2069 = -1.*t112*t776;
  t2074 = t1970 + t2069;
  t2141 = -1.*t464*t114;
  t2148 = t480*t133;
  t2149 = t2141 + t2148;
  t2557 = t1244*t996;
  t2570 = -1.*t1297*t112*t1035;
  t2571 = t2557 + t2570;
  t2113 = t1297*t2103;
  t2118 = -1.*t1244*t1066;
  t2122 = t2113 + t2118;
  t2225 = -1.*t894*t112;
  t2226 = -1.*t9*t948;
  t2229 = t2225 + t2226;
  t2591 = -1.*t1297*t112*t1100;
  t2601 = t1244*t948;
  t2604 = t2591 + t2601;
  t2263 = t114*t480*t894;
  t2271 = t464*t894*t133;
  t2272 = t2263 + t2271;
  t2290 = t9*t731;
  t2291 = -1.*t112*t1213;
  t2320 = t2290 + t2291;
  t250 = t112*t127;
  t276 = t9*t270;
  t279 = t250 + t276;
  t2648 = -1.*t43;
  t2649 = 1. + t2648;
  t2654 = 0.50321*t2649;
  t2661 = 0.19821*t43;
  t2666 = t2654 + t2661;
  t2677 = -1.*t116;
  t2681 = 1. + t2677;
  t2700 = 0.15121*t2681;
  t2702 = -1.*t61;
  t2703 = 1. + t2702;
  t2715 = 0.28121*t2703;
  t2718 = t61*t2666;
  t2719 = -0.305*t48*t70;
  t2720 = t2715 + t2718 + t2719;
  t2647 = 0.28121*t48;
  t2667 = -1.*t2666*t48;
  t2668 = -0.305*t61*t70;
  t2669 = t2647 + t2667 + t2668;
  t2727 = t116*t2720;
  t2728 = t2700 + t2727;
  t2730 = t114*t2728;
  t2731 = 0.15121*t116;
  t2736 = -0.15121*t138;
  t2739 = t138*t2720;
  t2745 = t2700 + t2731 + t2736 + t2739;
  t2748 = -1.*t133*t2745;
  t2757 = t2730 + t2748;
  t2775 = t112*t2669;
  t2777 = t9*t2757;
  t2782 = t2775 + t2777;
  t2671 = -1.*t112*t2669;
  t2763 = -1.*t9*t2757;
  t2772 = t2671 + t2763;
  t2802 = t9*t2669;
  t2803 = -1.*t112*t2757;
  t2804 = t2802 + t2803;
  t2790 = t133*t2728;
  t2792 = t114*t2745;
  t2793 = t2790 + t2792;
  t2795 = -1.*t1490*t2793;
  t2798 = -1.*t9*t286*t2782;
  t2812 = t112*t286*t2804;
  t2821 = t2795 + t2798 + t2812;
  t2922 = -1.*t133*t2728;
  t2923 = -1.*t114*t2745;
  t2928 = t2922 + t2923;
  t2877 = t1468*t2793;
  t2889 = t279*t2782;
  t2896 = t316*t2804;
  t2899 = t2877 + t2889 + t2896;
  t2916 = t9*t328*t2821;
  t2918 = Power(t9,2);
  t2934 = Power(t112,2);
  t2986 = -0.15121*t116;
  t2987 = t2986 + t2727;
  t2991 = -1.*t133*t2987;
  t2995 = 0.15121*t138;
  t3003 = -1.*t138*t2720;
  t3006 = t2995 + t3003;
  t3011 = t114*t3006;
  t3014 = t2991 + t3011;
  t2939 = -1.*t286*t2793;
  t2942 = -1.*t9*t293*t2782;
  t2949 = t112*t293*t2804;
  t3022 = t114*t2987;
  t3026 = t133*t3006;
  t3027 = t3022 + t3026;
  t2972 = t270*t2793;
  t2974 = t9*t328*t2782;
  t2975 = -1.*t112*t328*t2804;
  t2982 = t9*t293*t2899;
  t3141 = 0.28121*t61;
  t3152 = -1.*t61*t2666;
  t3161 = 0.305*t48*t70;
  t3169 = t3141 + t3152 + t3161;
  t3183 = t114*t116*t2669;
  t3188 = -1.*t133*t138*t2669;
  t3207 = t3183 + t3188;
  t332 = t112*t99;
  t335 = t9*t148;
  t336 = t332 + t335;
  t3083 = t116*t133*t2669;
  t3085 = t114*t138*t2669;
  t3116 = t3083 + t3085;
  t3176 = t112*t3169;
  t3214 = t9*t3207;
  t3224 = t3176 + t3214;
  t3242 = t9*t3169;
  t3250 = -1.*t112*t3207;
  t3256 = t3242 + t3250;
  t3381 = -0.305*t43*t48;
  t3384 = 0.305*t61*t70;
  t3385 = t3381 + t3384;
  t3448 = -0.305*t61*t43;
  t3458 = t3448 + t2719;
  t3468 = t114*t116*t3385;
  t3499 = -1.*t133*t138*t3385;
  t3511 = t3468 + t3499;
  t345 = t112*t261;
  t379 = t9*t365;
  t389 = t345 + t379;
  t3397 = t116*t133*t3385;
  t3411 = t114*t138*t3385;
  t3424 = t3397 + t3411;
  t3460 = t112*t3458;
  t3515 = t9*t3511;
  t3518 = t3460 + t3515;
  t3530 = t9*t3458;
  t3534 = -1.*t112*t3511;
  t3538 = t3530 + t3534;
  t3329 = t1281*t2793;
  t3345 = t336*t2782;
  t3356 = t176*t2804;
  t3756 = -1.*t1468*t2793;
  t3758 = -1.*t279*t2782;
  t3763 = -1.*t316*t2804;
  t3767 = t3756 + t3758 + t3763;
  t3831 = t3329 + t3345 + t3356;
  t3880 = -1.*t270*t2793;
  t3886 = -1.*t9*t328*t2782;
  t3897 = t112*t328*t2804;
  t3953 = t148*t2793;
  t3980 = t9*t192*t2782;
  t3991 = -1.*t112*t192*t2804;
  t4062 = t9*t192*t3767;
  t4065 = t9*t328*t3831;
  t228 = t112*t215;
  t244 = t9*t242;
  t249 = t228 + t244;
  t4360 = -1.*t1281*t2793;
  t4361 = -1.*t336*t2782;
  t4367 = -1.*t176*t2804;
  t4653 = t1490*t2793;
  t4688 = t9*t286*t2782;
  t4718 = -1.*t112*t286*t2804;
  t4722 = t4653 + t4688 + t4718;
  t4770 = t4360 + t4361 + t4367;
  t4779 = t9*t192*t4722;
  t4793 = t286*t2793;
  t4801 = t9*t293*t2782;
  t4814 = -1.*t112*t293*t2804;
  t4833 = -1.*t148*t2793;
  t4839 = -1.*t9*t192*t2782;
  t4842 = t112*t192*t2804;
  t4856 = t9*t293*t4770;
  t910 = t894*t112;
  t959 = t9*t948;
  t962 = t910 + t959;
  t5172 = -1.*t390;
  t5173 = 1. + t5172;
  t5174 = -0.50321*t5173;
  t5186 = -0.19821*t390;
  t5194 = t5174 + t5186;
  t5219 = -1.*t464;
  t5227 = 1. + t5219;
  t5240 = -0.15121*t5227;
  t5249 = -1.*t403;
  t5251 = 1. + t5249;
  t5260 = -0.28121*t5251;
  t5261 = t403*t5194;
  t5263 = 0.305*t393*t406;
  t5269 = t5260 + t5261 + t5263;
  t5167 = 0.28121*t393;
  t5202 = t5194*t393;
  t5204 = -0.305*t403*t406;
  t5212 = t5167 + t5202 + t5204;
  t5288 = t464*t5269;
  t5299 = t5240 + t5288;
  t5307 = t114*t5299;
  t5312 = -0.15121*t464;
  t5314 = 0.15121*t480;
  t5324 = t480*t5269;
  t5337 = t5240 + t5312 + t5314 + t5324;
  t5365 = -1.*t5337*t133;
  t5390 = t5307 + t5365;
  t5412 = t5212*t112;
  t5415 = t9*t5390;
  t5416 = t5412 + t5415;
  t5214 = -1.*t5212*t112;
  t5394 = -1.*t9*t5390;
  t5400 = t5214 + t5394;
  t5463 = t9*t5212;
  t5467 = -1.*t112*t5390;
  t5469 = t5463 + t5467;
  t5438 = t114*t5337;
  t5443 = t5299*t133;
  t5449 = t5438 + t5443;
  t5453 = -1.*t2149*t5449;
  t5455 = -1.*t9*t996*t5416;
  t5473 = t112*t996*t5469;
  t5475 = t5453 + t5455 + t5473;
  t5521 = -1.*t114*t5337;
  t5523 = -1.*t5299*t133;
  t5526 = t5521 + t5523;
  t5496 = t2103*t5449;
  t5499 = t962*t5416;
  t5506 = t1066*t5469;
  t5507 = t5496 + t5499 + t5506;
  t5519 = t9*t1100*t5475;
  t5536 = -1.*t996*t5449;
  t5689 = -0.15121*t480;
  t5716 = -1.*t480*t5269;
  t5718 = t5689 + t5716;
  t5720 = t114*t5718;
  t5729 = 0.15121*t464;
  t5737 = t5729 + t5288;
  t5744 = -1.*t5737*t133;
  t5746 = t5720 + t5744;
  t5554 = -1.*t9*t1035*t5416;
  t5565 = t112*t1035*t5469;
  t5583 = t948*t5449;
  t5752 = t114*t5737;
  t5755 = t5718*t133;
  t5760 = t5752 + t5755;
  t5655 = t9*t1100*t5416;
  t5657 = -1.*t112*t1100*t5469;
  t5677 = t9*t1035*t5507;
  t5808 = -0.28121*t393;
  t5813 = -1.*t5194*t393;
  t5816 = 0.305*t403*t406;
  t5821 = t5808 + t5813 + t5816;
  t5832 = 0.28121*t403;
  t5854 = t5832 + t5261 + t5263;
  t5867 = t464*t114*t5821;
  t5870 = -1.*t480*t5821*t133;
  t5877 = t5867 + t5870;
  t1134 = t410*t112;
  t1135 = t9*t551;
  t1150 = t1134 + t1135;
  t5822 = t114*t480*t5821;
  t5824 = t464*t5821*t133;
  t5826 = t5822 + t5824;
  t5860 = t5854*t112;
  t5885 = t9*t5877;
  t5886 = t5860 + t5885;
  t5897 = t9*t5854;
  t5898 = -1.*t112*t5877;
  t5899 = t5897 + t5898;
  t5992 = 0.305*t390*t393;
  t5994 = t5992 + t5204;
  t6003 = -0.305*t403*t390;
  t6004 = -0.305*t393*t406;
  t6008 = t6003 + t6004;
  t6012 = t464*t114*t5994;
  t6018 = -1.*t480*t5994*t133;
  t6020 = t6012 + t6018;
  t1152 = t731*t112;
  t1224 = t9*t1213;
  t1243 = t1152 + t1224;
  t5996 = t114*t480*t5994;
  t5997 = t464*t5994*t133;
  t5998 = t5996 + t5997;
  t6009 = t6008*t112;
  t6022 = t9*t6020;
  t6031 = t6009 + t6022;
  t6034 = t9*t6008;
  t6039 = -1.*t112*t6020;
  t6043 = t6034 + t6039;
  t5971 = t1702*t5449;
  t5986 = t1150*t5416;
  t5987 = t573*t5469;
  t6102 = -1.*t2103*t5449;
  t6123 = -1.*t962*t5416;
  t6128 = -1.*t1066*t5469;
  t6147 = t6102 + t6123 + t6128;
  t6178 = t5971 + t5986 + t5987;
  t6189 = -1.*t948*t5449;
  t6234 = -1.*t9*t1100*t5416;
  t6263 = t112*t1100*t5469;
  t6299 = t551*t5449;
  t6343 = t9*t622*t5416;
  t6344 = -1.*t112*t622*t5469;
  t6371 = t9*t622*t6147;
  t6373 = t9*t1100*t6178;
  t654 = t472*t112;
  t808 = t9*t776;
  t839 = t654 + t808;
  t6567 = -1.*t1702*t5449;
  t6578 = -1.*t1150*t5416;
  t6582 = -1.*t573*t5469;
  t6699 = t2149*t5449;
  t6700 = t9*t996*t5416;
  t6706 = -1.*t112*t996*t5469;
  t6711 = t6699 + t6700 + t6706;
  t6740 = t6567 + t6578 + t6582;
  t6744 = t9*t622*t6711;
  t6750 = t996*t5449;
  t6754 = t9*t1035*t5416;
  t6760 = -1.*t112*t1035*t5469;
  t6775 = -1.*t551*t5449;
  t6812 = -1.*t9*t622*t5416;
  t6819 = t112*t622*t5469;
  t6831 = t9*t1035*t6740;
  t2941 = -1.*t1490*t2757;
  t2973 = t1468*t2757;
  t7034 = -1.*t286*t2757;
  t7038 = t2795 + t7034;
  t7047 = t270*t7038;
  t3028 = -1.*t1490*t3027;
  t7051 = -1.*t293*t2757;
  t3064 = t1468*t3027;
  t7058 = t328*t2757;
  t7072 = t2669*t127;
  t7075 = t270*t2757;
  t7077 = t7072 + t2877 + t7075;
  t7080 = t286*t7077;
  t3140 = -1.*t1490*t3116;
  t3286 = t1468*t3116;
  t3437 = -1.*t1490*t3424;
  t3563 = t1468*t3424;
  t3608 = t1588*t2793;
  t3884 = -1.*t1468*t2757;
  t3963 = t1281*t2757;
  t7115 = t2669*t99;
  t7122 = t148*t2757;
  t4131 = -1.*t1468*t3027;
  t7210 = -1.*t328*t2757;
  t7219 = -1.*t2669*t127;
  t7225 = -1.*t270*t2757;
  t7226 = t7219 + t3756 + t7225;
  t7227 = t148*t7226;
  t4174 = t1281*t3027;
  t7234 = t192*t2757;
  t7245 = t7115 + t3329 + t7122;
  t7246 = t270*t7245;
  t4281 = t3116*t1281;
  t4294 = t1383*t2793;
  t4338 = -1.*t1468*t3116;
  t4378 = t3424*t1281;
  t4420 = -1.*t1468*t3424;
  t4451 = -1.*t1588*t2793;
  t4795 = t1490*t2757;
  t4834 = -1.*t1281*t2757;
  t7319 = -1.*t2669*t99;
  t7329 = -1.*t148*t2757;
  t7467 = t286*t2757;
  t7473 = t4653 + t7467;
  t7475 = t148*t7473;
  t4873 = t1490*t3027;
  t7486 = t293*t2757;
  t4910 = -1.*t1281*t3027;
  t7500 = -1.*t192*t2757;
  t7513 = t7319 + t4360 + t7329;
  t7517 = t286*t7513;
  t4995 = t1490*t3116;
  t5047 = -1.*t3116*t1281;
  t5066 = -1.*t1383*t2793;
  t5086 = t1490*t3424;
  t5137 = -1.*t3424*t1281;
  t5545 = -1.*t2149*t5390;
  t5608 = t2103*t5390;
  t7724 = -1.*t996*t5390;
  t7729 = t5453 + t7724;
  t7740 = t948*t7729;
  t5768 = -1.*t2149*t5760;
  t7747 = -1.*t1035*t5390;
  t5789 = t2103*t5760;
  t7764 = t1100*t5390;
  t7784 = t5212*t894;
  t7786 = t948*t5390;
  t7787 = t7784 + t5496 + t7786;
  t7791 = t996*t7787;
  t5827 = -1.*t2149*t5826;
  t5959 = t5826*t2103;
  t5999 = -1.*t2149*t5998;
  t6059 = t5998*t2103;
  t6062 = t2272*t5449;
  t6215 = -1.*t2103*t5390;
  t6310 = t1702*t5390;
  t7879 = t5212*t410;
  t7883 = t551*t5390;
  t6402 = -1.*t2103*t5760;
  t7987 = -1.*t1100*t5390;
  t7993 = -1.*t5212*t894;
  t8009 = -1.*t948*t5390;
  t8019 = t7993 + t6102 + t8009;
  t8033 = t551*t8019;
  t6488 = t1702*t5760;
  t8043 = t622*t5390;
  t8087 = t7879 + t5971 + t7883;
  t8088 = t948*t8087;
  t6522 = t5826*t1702;
  t6524 = t1961*t5449;
  t6565 = -1.*t5826*t2103;
  t6614 = t5998*t1702;
  t6644 = -1.*t5998*t2103;
  t6651 = -1.*t2272*t5449;
  t6752 = t2149*t5390;
  t6778 = -1.*t1702*t5390;
  t8209 = -1.*t5212*t410;
  t8245 = -1.*t551*t5390;
  t8374 = t996*t5390;
  t8381 = t6699 + t8374;
  t8395 = t551*t8381;
  t6843 = t2149*t5760;
  t8404 = t1035*t5390;
  t6852 = -1.*t1702*t5760;
  t8437 = -1.*t622*t5390;
  t8474 = t8209 + t6567 + t8245;
  t8489 = t996*t8474;
  t6886 = t2149*t5826;
  t6942 = -1.*t5826*t1702;
  t6944 = -1.*t1961*t5449;
  t6975 = t2149*t5998;
  t6992 = -1.*t5998*t1702;
  t8846 = t138*t2728;
  t8850 = -1.*t116*t2745;
  t8866 = t8846 + t8850;
  t7299 = t2669*t215;
  t7301 = t99*t3169;
  t9022 = Power(t116,2);
  t9027 = Power(t138,2);
  t7326 = -1.*t3169*t127;
  t9011 = -1.*t116*t261*t2728;
  t9016 = -1.*t138*t261*t2745;
  t9017 = t7219 + t9011 + t9016;
  t7373 = t99*t3458;
  t7401 = -1.*t261*t2669;
  t7412 = -1.*t3458*t127;
  t9081 = t116*t127*t2728;
  t9086 = t138*t127*t2745;
  t9093 = t7115 + t9081 + t9086;
  t9218 = -1.*t138*t2728;
  t9221 = t116*t2745;
  t9235 = t9218 + t9221;
  t9257 = -1.*t480*t5299;
  t9260 = t464*t5337;
  t9266 = t9257 + t9260;
  t8160 = t5212*t472;
  t8171 = t410*t5854;
  t9365 = Power(t464,2);
  t9386 = Power(t480,2);
  t8225 = -1.*t5854*t894;
  t9409 = -1.*t464*t410*t5299;
  t9412 = -1.*t480*t410*t5337;
  t9428 = t7993 + t9409 + t9412;
  t8283 = t410*t6008;
  t9470 = t464*t472*t5299;
  t9475 = t480*t472*t5337;
  t9477 = t7879 + t9470 + t9475;
  t8322 = -1.*t731*t5212;
  t8323 = -1.*t6008*t894;
  t9639 = t480*t5299;
  t9652 = -1.*t464*t5337;
  t9659 = t9639 + t9652;
  t9665 = -1.*t261*t2720;
  t9673 = t9665 + t7219;
  t9698 = t2720*t127;
  t9699 = t7115 + t9698;
  t9753 = 0.15121*t215;
  t9754 = 0.15121*t127;
  t9758 = t9753 + t9754;
  t9784 = -0.15121*t731;
  t9785 = -0.15121*t410;
  t9786 = t9784 + t9785;
  t9788 = t472*t5269;
  t9789 = t7879 + t9788;
  t9804 = -1.*t410*t5269;
  t9805 = t9804 + t7993;
  p_output1[0]=t176;
  p_output1[1]=t193;
  p_output1[2]=t193;
  p_output1[3]=t249;
  p_output1[4]=t279;
  p_output1[5]=-1.*t112*t286;
  p_output1[6]=t296;
  p_output1[7]=t296;
  p_output1[8]=t316;
  p_output1[9]=t329;
  p_output1[10]=t329;
  p_output1[11]=t336;
  p_output1[12]=t389;
  p_output1[13]=t573;
  p_output1[14]=t624;
  p_output1[15]=t624;
  p_output1[16]=t839;
  p_output1[17]=t962;
  p_output1[18]=-1.*t112*t996;
  p_output1[19]=t1040;
  p_output1[20]=t1040;
  p_output1[21]=t1066;
  p_output1[22]=t1131;
  p_output1[23]=t1131;
  p_output1[24]=t1150;
  p_output1[25]=t1243;
  p_output1[26]=-1.*t1244*t1281 - 1.*t1297*t176;
  p_output1[27]=-1.*t1244*t1351;
  p_output1[28]=t1368;
  p_output1[29]=t1368;
  p_output1[30]=t1297*t1383 - 1.*t1244*t1449;
  p_output1[31]=t1483;
  p_output1[32]=-1.*t1244*t1490 + t112*t1297*t286;
  p_output1[33]=t1244*t286*t9;
  p_output1[34]=t1503;
  p_output1[35]=t1503;
  p_output1[36]=-1.*t1244*t1468 - 1.*t1297*t316;
  p_output1[37]=-1.*t1244*t1514;
  p_output1[38]=t1523;
  p_output1[39]=t1523;
  p_output1[40]=t1538;
  p_output1[41]=t1297*t1588 - 1.*t1244*t1629;
  p_output1[42]=-1.*t1244*t1702 - 1.*t1297*t573;
  p_output1[43]=-1.*t1244*t1743;
  p_output1[44]=t1889;
  p_output1[45]=t1889;
  p_output1[46]=t1297*t1961 - 1.*t1244*t2074;
  p_output1[47]=t2122;
  p_output1[48]=-1.*t1244*t2149 + t112*t1297*t996;
  p_output1[49]=t1244*t9*t996;
  p_output1[50]=t2208;
  p_output1[51]=t2208;
  p_output1[52]=-1.*t1066*t1297 - 1.*t1244*t2103;
  p_output1[53]=-1.*t1244*t2229;
  p_output1[54]=t2245;
  p_output1[55]=t2245;
  p_output1[56]=t2262;
  p_output1[57]=t1297*t2272 - 1.*t1244*t2320;
  p_output1[58]=t1538;
  p_output1[59]=t1297*t1351;
  p_output1[60]=t2339;
  p_output1[61]=t2339;
  p_output1[62]=t1244*t1383 + t1297*t1449;
  p_output1[63]=t1244*t1468 + t1297*t316;
  p_output1[64]=t1297*t1490 + t112*t1244*t286;
  p_output1[65]=-1.*t1297*t286*t9;
  p_output1[66]=t2448;
  p_output1[67]=t2448;
  p_output1[68]=t1483;
  p_output1[69]=t1297*t1514;
  p_output1[70]=t2474;
  p_output1[71]=t2474;
  p_output1[72]=t1244*t1281 + t1297*t176;
  p_output1[73]=t1244*t1588 + t1297*t1629;
  p_output1[74]=t2262;
  p_output1[75]=t1297*t1743;
  p_output1[76]=t2518;
  p_output1[77]=t2518;
  p_output1[78]=t1244*t1961 + t1297*t2074;
  p_output1[79]=t1066*t1297 + t1244*t2103;
  p_output1[80]=t1297*t2149 + t112*t1244*t996;
  p_output1[81]=-1.*t1297*t9*t996;
  p_output1[82]=t2571;
  p_output1[83]=t2571;
  p_output1[84]=t2122;
  p_output1[85]=t1297*t2229;
  p_output1[86]=t2604;
  p_output1[87]=t2604;
  p_output1[88]=t1244*t1702 + t1297*t573;
  p_output1[89]=t1244*t2272 + t1297*t2320;
  p_output1[90]=t279*(t112*t2772*t286 + t112*t2782*t286) - 1.*t112*t286*t2899 + t2821*t316 + t286*(t1514*t2804 + t279*t2804 + t2772*t316 + t2782*t316)*t9;
  p_output1[91]=t2916 + t279*(-1.*t286*t2918*t2928 - 1.*t286*t2928*t2934 + t2939 + t2941 + t2942 + t2949) + t2982 + t286*t9*(t2972 + t2973 + t2974 + t2975 - 1.*t112*t2928*t316 + t279*t2928*t9);
  p_output1[92]=t2916 + t2982 + t279*(t2939 + t2942 + t2949 - 1.*t286*t2918*t3014 - 1.*t286*t2934*t3014 + t3028) + t286*t9*(t2972 + t2974 + t2975 + t3064 - 1.*t112*t3014*t316 + t279*t3014*t9);
  p_output1[93]=t2821*t336 + t286*(t279*t3224 + t316*t3256 + t3286 + t3329 + t3345 + t3356)*t9 + t279*(t3140 + t112*t286*t3256 - 1.*t286*t3224*t9);
  p_output1[94]=t2821*t389 + t286*(t1629*t2804 + t279*t3518 + t316*t3538 + t3563 + t3608 + t2782*t389)*t9 + t279*(t3437 + t112*t286*t3538 - 1.*t286*t3518*t9);
  p_output1[95]=(-1.*t1514*t2804 - 1.*t279*t2804 - 1.*t2772*t316 - 1.*t2782*t316)*t336 + t279*(t176*t2772 + t176*t2782 + t1351*t2804 + t2804*t336) + t176*t3767 + t316*t3831;
  p_output1[96]=t4062 + t4065 + t336*(t112*t2928*t316 + t3880 + t3884 + t3886 + t3897 - 1.*t279*t2928*t9) + t279*(-1.*t112*t176*t2928 + t3953 + t3963 + t3980 + t3991 + t2928*t336*t9);
  p_output1[97]=t4062 + t4065 + t336*(t112*t3014*t316 + t3880 + t3886 + t3897 + t4131 - 1.*t279*t3014*t9) + t279*(-1.*t112*t176*t3014 + t3953 + t3980 + t3991 + t4174 + t3014*t336*t9);
  p_output1[98]=t249*t3767 + t336*t3831 + t279*(t249*t2782 + t1449*t2804 + t176*t3256 + t3224*t336 + t4281 + t4294) + t336*(-1.*t279*t3224 - 1.*t316*t3256 + t4338 + t4360 + t4361 + t4367);
  p_output1[99]=t279*t3767 + t3831*t389 + t279*(t2877 + t2889 + t2896 + t336*t3518 + t176*t3538 + t4378) + t336*(-1.*t1629*t2804 - 1.*t279*t3518 - 1.*t316*t3538 - 1.*t2782*t389 + t4420 + t4451);
  p_output1[100]=(-1.*t112*t2772*t286 - 1.*t112*t2782*t286)*t336 + t176*t4722 - 1.*t112*t286*t4770 + t286*(-1.*t176*t2772 - 1.*t176*t2782 - 1.*t1351*t2804 - 1.*t2804*t336)*t9;
  p_output1[101]=t4779 + t336*(t286*t2918*t2928 + t286*t2928*t2934 + t4793 + t4795 + t4801 + t4814) + t4856 + t286*t9*(t112*t176*t2928 + t4833 + t4834 + t4839 + t4842 - 1.*t2928*t336*t9);
  p_output1[102]=t4779 + t4856 + t336*(t286*t2918*t3014 + t286*t2934*t3014 + t4793 + t4801 + t4814 + t4873) + t286*t9*(t112*t176*t3014 + t4833 + t4839 + t4842 + t4910 - 1.*t3014*t336*t9);
  p_output1[103]=t249*t4722 + t286*(-1.*t249*t2782 - 1.*t1449*t2804 - 1.*t176*t3256 - 1.*t3224*t336 + t5047 + t5066)*t9 + t336*(-1.*t112*t286*t3256 + t4995 + t286*t3224*t9);
  p_output1[104]=t279*t4722 + t286*(-1.*t336*t3518 - 1.*t176*t3538 + t3756 + t3758 + t3763 + t5137)*t9 + t336*(-1.*t112*t286*t3538 + t5086 + t286*t3518*t9);
  p_output1[105]=t1066*t5475 - 1.*t112*t5507*t996 + t9*(t1066*t5400 + t1066*t5416 + t2229*t5469 + t5469*t962)*t996 + t962*(t112*t5400*t996 + t112*t5416*t996);
  p_output1[106]=t5519 + t5677 + t9*(-1.*t1066*t112*t5526 + t5583 + t5608 + t5655 + t5657 + t5526*t9*t962)*t996 + t962*(t5536 + t5545 + t5554 + t5565 - 1.*t2918*t5526*t996 - 1.*t2934*t5526*t996);
  p_output1[107]=t5519 + t5677 + t9*(t5583 + t5655 + t5657 - 1.*t1066*t112*t5746 + t5789 + t5746*t9*t962)*t996 + t962*(t5536 + t5554 + t5565 + t5768 - 1.*t2918*t5746*t996 - 1.*t2934*t5746*t996);
  p_output1[108]=t1150*t5475 + t9*(t1066*t5899 + t5959 + t5971 + t5986 + t5987 + t5886*t962)*t996 + t962*(t5827 + t112*t5899*t996 - 1.*t5886*t9*t996);
  p_output1[109]=t1243*t5475 + t9*(t1243*t5416 + t2320*t5469 + t1066*t6043 + t6059 + t6062 + t6031*t962)*t996 + t962*(t5999 + t112*t6043*t996 - 1.*t6031*t9*t996);
  p_output1[110]=t573*t6147 + t1066*t6178 + (t1150*t5469 + t1743*t5469 + t5400*t573 + t5416*t573)*t962 + t1150*(-1.*t1066*t5400 - 1.*t1066*t5416 - 1.*t2229*t5469 - 1.*t5469*t962);
  p_output1[111]=t6371 + t6373 + (-1.*t112*t5526*t573 + t6299 + t6310 + t6343 + t6344 + t1150*t5526*t9)*t962 + t1150*(t1066*t112*t5526 + t6189 + t6215 + t6234 + t6263 - 1.*t5526*t9*t962);
  p_output1[112]=t6371 + t6373 + (-1.*t112*t573*t5746 + t6299 + t6343 + t6344 + t6488 + t1150*t5746*t9)*t962 + t1150*(t1066*t112*t5746 + t6189 + t6234 + t6263 + t6402 - 1.*t5746*t9*t962);
  p_output1[113]=t1150*t6178 + t6147*t839 + (t2074*t5469 + t1150*t5886 + t573*t5899 + t6522 + t6524 + t5416*t839)*t962 + t1150*(-1.*t1066*t5899 + t6565 + t6567 + t6578 + t6582 - 1.*t5886*t962);
  p_output1[114]=t1243*t6178 + t6147*t962 + (t5496 + t5499 + t5506 + t1150*t6031 + t573*t6043 + t6614)*t962 + t1150*(-1.*t1243*t5416 - 1.*t2320*t5469 - 1.*t1066*t6043 + t6644 + t6651 - 1.*t6031*t962);
  p_output1[115]=t573*t6711 - 1.*t112*t6740*t996 + (-1.*t1150*t5469 - 1.*t1743*t5469 - 1.*t5400*t573 - 1.*t5416*t573)*t9*t996 + t1150*(-1.*t112*t5400*t996 - 1.*t112*t5416*t996);
  p_output1[116]=t6744 + t6831 + t9*(t112*t5526*t573 + t6775 + t6778 + t6812 + t6819 - 1.*t1150*t5526*t9)*t996 + t1150*(t6750 + t6752 + t6754 + t6760 + t2918*t5526*t996 + t2934*t5526*t996);
  p_output1[117]=t6744 + t6831 + t9*(t112*t573*t5746 + t6775 + t6812 + t6819 + t6852 - 1.*t1150*t5746*t9)*t996 + t1150*(t6750 + t6754 + t6760 + t6843 + t2918*t5746*t996 + t2934*t5746*t996);
  p_output1[118]=t6711*t839 + (-1.*t2074*t5469 - 1.*t1150*t5886 - 1.*t573*t5899 + t6942 + t6944 - 1.*t5416*t839)*t9*t996 + t1150*(t6886 - 1.*t112*t5899*t996 + t5886*t9*t996);
  p_output1[119]=t6711*t962 + (-1.*t1150*t6031 - 1.*t573*t6043 + t6102 + t6123 + t6128 + t6992)*t9*t996 + t1150*(t6975 - 1.*t112*t6043*t996 + t6031*t9*t996);
  p_output1[120]=t7047 + t1468*(-1.*t286*t2928 + t2939 + t2941 + t7051) + t1490*(t270*t2928 + t2972 + t2973 + t7058) + t7080;
  p_output1[121]=t7047 + t1468*(t2939 - 1.*t286*t3014 + t3028 + t7051) + t1490*(t2972 + t270*t3014 + t3064 + t7058) + t7080;
  p_output1[122]=t1468*(t3140 - 1.*t286*t3207) + t1281*t7038 + t1490*(t127*t3169 + t270*t3207 + t3286 + t3329 + t7115 + t7122);
  p_output1[123]=t1468*(t3437 - 1.*t286*t3511) + t1490*(t261*t2669 + t127*t3458 + t270*t3511 + t3563 + t3608 + t2757*t365) + t1588*t7038;
  p_output1[124]=t1281*(-1.*t270*t2928 + t3880 + t3884 + t7210) + t7227 + t1468*(t148*t2928 + t3953 + t3963 + t7234) + t7246;
  p_output1[125]=t1281*(-1.*t270*t3014 + t3880 + t4131 + t7210) + t7227 + t1468*(t148*t3014 + t3953 + t4174 + t7234) + t7246;
  p_output1[126]=t1383*t7226 + t1281*t7245 + t1468*(t242*t2757 + t148*t3207 + t4281 + t4294 + t7299 + t7301) + t1281*(-1.*t270*t3207 + t4338 + t4360 + t7319 + t7326 + t7329);
  p_output1[127]=t1468*t7226 + t1588*t7245 + t1468*(t2877 + t148*t3511 + t4378 + t7072 + t7075 + t7373) + t1281*(-1.*t270*t3511 - 1.*t2757*t365 + t4420 + t4451 + t7401 + t7412);
  p_output1[128]=t7475 + t1281*(t286*t2928 + t4793 + t4795 + t7486) + t1490*(-1.*t148*t2928 + t4833 + t4834 + t7500) + t7517;
  p_output1[129]=t7475 + t1281*(t286*t3014 + t4793 + t4873 + t7486) + t1490*(-1.*t148*t3014 + t4833 + t4910 + t7500) + t7517;
  p_output1[130]=t1281*(t286*t3207 + t4995) + t1383*t7473 + t1490*(-1.*t215*t2669 - 1.*t242*t2757 - 1.*t148*t3207 + t5047 + t5066 - 1.*t3169*t99);
  p_output1[131]=t1281*(t286*t3511 + t5086) + t1468*t7473 + t1490*(-1.*t148*t3511 + t3756 + t5137 + t7219 + t7225 - 1.*t3458*t99);
  p_output1[132]=t7740 + t7791 + t2149*(t5583 + t5608 + t7764 + t5526*t948) + t2103*(t5536 + t5545 + t7747 - 1.*t5526*t996);
  p_output1[133]=t7740 + t7791 + t2149*(t5583 + t5789 + t7764 + t5746*t948) + t2103*(t5536 + t5768 + t7747 - 1.*t5746*t996);
  p_output1[134]=t1702*t7729 + t2149*(t5959 + t5971 + t7879 + t7883 + t5854*t894 + t5877*t948) + t2103*(t5827 - 1.*t5877*t996);
  p_output1[135]=t2272*t7729 + t2149*(t1213*t5390 + t6059 + t6062 + t5212*t731 + t6008*t894 + t6020*t948) + t2103*(t5999 - 1.*t6020*t996);
  p_output1[136]=t8033 + t2103*(t551*t5526 + t6299 + t6310 + t8043) + t8088 + t1702*(t6189 + t6215 + t7987 - 1.*t5526*t948);
  p_output1[137]=t8033 + t2103*(t551*t5746 + t6299 + t6488 + t8043) + t8088 + t1702*(t6189 + t6402 + t7987 - 1.*t5746*t948);
  p_output1[138]=t1961*t8019 + t1702*t8087 + t2103*(t551*t5877 + t6522 + t6524 + t5390*t776 + t8160 + t8171) + t1702*(t6565 + t6567 + t8209 + t8225 + t8245 - 1.*t5877*t948);
  p_output1[139]=t2103*t8019 + t2272*t8087 + t2103*(t5496 + t551*t6020 + t6614 + t7784 + t7786 + t8283) + t1702*(-1.*t1213*t5390 + t6644 + t6651 + t8322 + t8323 - 1.*t6020*t948);
  p_output1[140]=t8395 + t2149*(-1.*t551*t5526 + t6775 + t6778 + t8437) + t8489 + t1702*(t6750 + t6752 + t8404 + t5526*t996);
  p_output1[141]=t8395 + t2149*(-1.*t551*t5746 + t6775 + t6852 + t8437) + t8489 + t1702*(t6750 + t6843 + t8404 + t5746*t996);
  p_output1[142]=t2149*(-1.*t472*t5212 - 1.*t410*t5854 - 1.*t551*t5877 + t6942 + t6944 - 1.*t5390*t776) + t1961*t8381 + t1702*(t6886 + t5877*t996);
  p_output1[143]=t2149*(-1.*t410*t6008 - 1.*t551*t6020 + t6102 + t6992 + t7993 + t8009) + t2103*t8381 + t1702*(t6975 + t6020*t996);
  p_output1[144]=t127*(t116*t2728 + t138*t2745 - 1.*t116*t2987 + t138*t3006);
  p_output1[145]=t8866*t99;
  p_output1[146]=t261*t8866;
  p_output1[147]=t127*(-1.*t127*t138*t2728 + t116*t127*t2745 + t127*t138*t2987 + t116*t127*t3006) + (t138*t261*t2728 - 1.*t116*t261*t2745 - 1.*t138*t261*t2987 - 1.*t116*t261*t3006)*t99;
  p_output1[148]=t215*t9017 + (-1.*t116*t127*t2728 - 1.*t127*t138*t2745 + t7319 + t7326 - 1.*t261*t2669*t9022 - 1.*t261*t2669*t9027)*t99 + t9093*t99 + t127*(t7299 + t7301 + t127*t2669*t9022 + t127*t2669*t9027 + t116*t2728*t99 + t138*t2745*t99);
  p_output1[149]=t127*t9017 + t127*(t116*t261*t2728 + t138*t261*t2745 + t7072 + t7373 + t127*t3385*t9022 + t127*t3385*t9027) + t261*t9093 + (-1.*t116*t215*t2728 - 1.*t138*t215*t2745 + t7401 + t7412 - 1.*t261*t3385*t9022 - 1.*t261*t3385*t9027)*t99;
  p_output1[150]=(-1.*t116*t2728 - 1.*t138*t2745 + t116*t2987 - 1.*t138*t3006)*t99;
  p_output1[151]=t215*t9235;
  p_output1[152]=t127*t9235;
  p_output1[153]=(-1.*t464*t5299 - 1.*t480*t5337 - 1.*t480*t5718 + t464*t5737)*t894;
  p_output1[154]=t410*t9266;
  p_output1[155]=t731*t9266;
  p_output1[156]=t410*(t410*t480*t5299 - 1.*t410*t464*t5337 - 1.*t410*t464*t5718 - 1.*t410*t480*t5737) + (-1.*t472*t480*t5299 + t464*t472*t5337 + t464*t472*t5718 + t472*t480*t5737)*t894;
  p_output1[157]=t410*(-1.*t464*t472*t5299 - 1.*t472*t480*t5337 + t8209 + t8225 - 1.*t410*t5821*t9365 - 1.*t410*t5821*t9386) + t894*(t464*t5299*t731 + t480*t5337*t731 + t8160 + t8171 + t472*t5821*t9365 + t472*t5821*t9386) + t472*t9428 + t410*t9477;
  p_output1[158]=t410*(t8322 + t8323 - 1.*t464*t5299*t894 - 1.*t480*t5337*t894 - 1.*t410*t5994*t9365 - 1.*t410*t5994*t9386) + t894*(t410*t464*t5299 + t410*t480*t5337 + t7784 + t8283 + t472*t5994*t9365 + t472*t5994*t9386) + t894*t9428 + t731*t9477;
  p_output1[159]=t410*(t464*t5299 + t480*t5337 + t480*t5718 - 1.*t464*t5737);
  p_output1[160]=t472*t9659;
  p_output1[161]=t894*t9659;
  p_output1[162]=t215*t9673 + (-1.*t127*t2720 + t7319 + t7326 + t7401)*t99 + t9699*t99 + t127*(t7072 + t7299 + t7301 + t2720*t99);
  p_output1[163]=t127*(t261*t2720 + t127*t3385 + t7072 + t7373) + t127*t9673 + t261*t9699 + (-1.*t215*t2720 - 1.*t261*t3385 + t7401 + t7412)*t99;
  p_output1[164]=t9758;
  p_output1[165]=t9758;
  p_output1[166]=0.28121*t43 - 1.*t2666*t43 - 0.305*Power(t43,2);
  p_output1[167]=-0.28121*t70 + t2666*t70 + 0.305*t43*t70;
  p_output1[168]=t9786;
  p_output1[169]=t9786;
  p_output1[170]=t410*(-1.*t472*t5269 - 1.*t410*t5821 + t8209 + t8225) + (t472*t5821 + t5269*t731 + t8160 + t8171)*t894 + t410*t9789 + t472*t9805;
  p_output1[171]=(t410*t5269 + t472*t5994 + t7784 + t8283)*t894 + t410*(-1.*t410*t5994 + t8322 + t8323 - 1.*t5269*t894) + t731*t9789 + t894*t9805;
  p_output1[172]=0.28121*t390 - 0.305*Power(t390,2) + t390*t5194;
  p_output1[173]=-0.28121*t406 + 0.305*t390*t406 - 1.*t406*t5194;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
