/*
 * Automatically Generated from Mathematica.
 * Sat 14 May 2022 17:54:30 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t417;
  double t267;
  double t306;
  double t549;
  double t1595;
  double t1673;
  double t1726;
  double t187;
  double t1539;
  double t1951;
  double t1448;
  double t2022;
  double t3138;
  double t3323;
  double t3413;
  double t3518;
  double t1429;
  double t386;
  double t930;
  double t974;
  double t4493;
  double t4513;
  double t4538;
  double t5258;
  double t5274;
  double t5281;
  double t5293;
  double t4575;
  double t4605;
  double t4663;
  double t5368;
  double t5370;
  double t5415;
  double t5429;
  double t1795;
  double t2207;
  double t2477;
  double t3553;
  double t3631;
  double t3656;
  double t5723;
  double t5685;
  double t5687;
  double t5772;
  double t5802;
  double t5815;
  double t5816;
  double t5829;
  double t5789;
  double t6151;
  double t6192;
  double t6730;
  double t6732;
  double t6845;
  double t6856;
  double t6858;
  double t5722;
  double t5780;
  double t5785;
  double t8157;
  double t8283;
  double t8290;
  double t8296;
  double t7293;
  double t7309;
  double t7612;
  double t7930;
  double t7963;
  double t8017;
  double t8857;
  double t8870;
  double t8892;
  double t8937;
  double t5826;
  double t5860;
  double t5885;
  double t1086;
  double t2788;
  double t2970;
  double t11577;
  double t12964;
  double t15328;
  double t15615;
  double t15700;
  double t4040;
  double t4042;
  double t4138;
  double t5324;
  double t5339;
  double t5364;
  double t4849;
  double t4899;
  double t5082;
  double t20513;
  double t20514;
  double t20596;
  double t19009;
  double t19112;
  double t19138;
  double t20768;
  double t21523;
  double t21672;
  double t11892;
  double t11962;
  double t12182;
  double t5605;
  double t5606;
  double t5611;
  double t5786;
  double t5887;
  double t5920;
  double t23155;
  double t23228;
  double t23316;
  double t6901;
  double t6950;
  double t6955;
  double t8483;
  double t8631;
  double t8839;
  double t8043;
  double t8072;
  double t8073;
  double t24810;
  double t25020;
  double t25061;
  double t24001;
  double t24065;
  double t24071;
  double t25693;
  double t25696;
  double t25705;
  double t22822;
  double t22895;
  double t22896;
  double t8991;
  double t10081;
  double t10278;
  double t21748;
  double t21749;
  double t21858;
  double t13200;
  double t14946;
  double t15202;
  double t26733;
  double t26774;
  double t26781;
  double t16052;
  double t16068;
  double t16455;
  double t16738;
  double t16865;
  double t17813;
  double t19922;
  double t19936;
  double t19941;
  double t27111;
  double t27132;
  double t27158;
  double t19266;
  double t19362;
  double t19545;
  double t20628;
  double t20630;
  double t20698;
  double t27167;
  double t27176;
  double t27197;
  double t22030;
  double t22099;
  double t22251;
  double t22766;
  double t22770;
  double t22771;
  double t25815;
  double t25832;
  double t25842;
  double t23034;
  double t23070;
  double t23097;
  double t27322;
  double t27323;
  double t27353;
  double t23320;
  double t23345;
  double t23352;
  double t23403;
  double t23451;
  double t23536;
  double t24474;
  double t24567;
  double t24586;
  double t27628;
  double t27803;
  double t27879;
  double t24115;
  double t24303;
  double t24396;
  double t25506;
  double t25508;
  double t25573;
  double t27930;
  double t27970;
  double t28002;
  double t25852;
  double t25864;
  double t25865;
  double t26135;
  double t26153;
  double t26427;
  double t4489;
  double t4670;
  double t4805;
  double t28166;
  double t28196;
  double t28241;
  double t28299;
  double t28355;
  double t28553;
  double t28557;
  double t28561;
  double t28565;
  double t28570;
  double t28571;
  double t28572;
  double t28576;
  double t28161;
  double t28362;
  double t28364;
  double t28532;
  double t28558;
  double t28578;
  double t28583;
  double t28591;
  double t28603;
  double t28619;
  double t28624;
  double t28648;
  double t28649;
  double t28654;
  double t29215;
  double t29840;
  double t30066;
  double t30067;
  double t28551;
  double t29426;
  double t29595;
  double t32747;
  double t34261;
  double t34366;
  double t31347;
  double t31385;
  double t32055;
  double t32579;
  double t32590;
  double t34703;
  double t34915;
  double t36373;
  double t36425;
  double t36653;
  double t35527;
  double t35632;
  double t35703;
  double t36005;
  double t36232;
  double t37751;
  double t36369;
  double t37050;
  double t39669;
  double t39686;
  double t39755;
  double t39875;
  double t40593;
  double t40675;
  double t40702;
  double t37825;
  double t38024;
  double t38366;
  double t40938;
  double t40943;
  double t40980;
  double t39123;
  double t39378;
  double t39648;
  double t41305;
  double t41345;
  double t41469;
  double t41639;
  double t42423;
  double t42893;
  double t42916;
  double t5469;
  double t5545;
  double t5551;
  double t41259;
  double t41281;
  double t41287;
  double t41812;
  double t43020;
  double t43030;
  double t43062;
  double t43232;
  double t43236;
  double t43914;
  double t43939;
  double t43980;
  double t44547;
  double t44587;
  double t44652;
  double t44662;
  double t44678;
  double t5558;
  double t5620;
  double t5682;
  double t44024;
  double t44185;
  double t44510;
  double t44651;
  double t44679;
  double t44722;
  double t44750;
  double t44764;
  double t44773;
  double t43691;
  double t43711;
  double t43715;
  double t45324;
  double t45331;
  double t45356;
  double t45364;
  double t45447;
  double t45528;
  double t45609;
  double t45612;
  double t45721;
  double t45764;
  double t45782;
  double t45803;
  double t45812;
  double t3728;
  double t4144;
  double t4322;
  double t46177;
  double t46195;
  double t46200;
  double t46334;
  double t46335;
  double t46338;
  double t46351;
  double t46380;
  double t46384;
  double t46394;
  double t46415;
  double t46422;
  double t46461;
  double t46740;
  double t46752;
  double t46768;
  double t7809;
  double t8019;
  double t8025;
  double t50947;
  double t50955;
  double t51033;
  double t51044;
  double t51051;
  double t51088;
  double t51097;
  double t51120;
  double t51124;
  double t51130;
  double t51136;
  double t51142;
  double t51144;
  double t50945;
  double t51056;
  double t51074;
  double t51077;
  double t51107;
  double t51185;
  double t51210;
  double t51220;
  double t51224;
  double t51226;
  double t51228;
  double t51231;
  double t51234;
  double t51235;
  double t51236;
  double t51241;
  double t51242;
  double t51244;
  double t51080;
  double t51237;
  double t51238;
  double t51259;
  double t51260;
  double t51261;
  double t51251;
  double t51252;
  double t51255;
  double t51256;
  double t51257;
  double t51262;
  double t51263;
  double t51452;
  double t51540;
  double t51551;
  double t51294;
  double t51309;
  double t51310;
  double t51324;
  double t51379;
  double t51575;
  double t51680;
  double t51687;
  double t51688;
  double t51690;
  double t51692;
  double t51693;
  double t51694;
  double t51577;
  double t51578;
  double t51610;
  double t51697;
  double t51698;
  double t51700;
  double t51658;
  double t51660;
  double t51670;
  double t51730;
  double t51742;
  double t51743;
  double t51745;
  double t51762;
  double t51764;
  double t51779;
  double t51782;
  double t51785;
  double t8954;
  double t8964;
  double t8977;
  double t51746;
  double t51751;
  double t51753;
  double t51770;
  double t51790;
  double t51795;
  double t51802;
  double t51833;
  double t51838;
  double t51876;
  double t51882;
  double t51896;
  double t51897;
  double t51899;
  double t51903;
  double t51904;
  double t51907;
  double t8978;
  double t10298;
  double t10521;
  double t51884;
  double t51892;
  double t51893;
  double t51900;
  double t51908;
  double t51909;
  double t51916;
  double t51917;
  double t51918;
  double t51852;
  double t51860;
  double t51862;
  double t52168;
  double t52173;
  double t52176;
  double t52180;
  double t52321;
  double t52367;
  double t52375;
  double t52376;
  double t52384;
  double t52562;
  double t52565;
  double t52581;
  double t52601;
  double t6784;
  double t7039;
  double t7285;
  double t53445;
  double t53458;
  double t53459;
  double t53598;
  double t53603;
  double t53608;
  double t53609;
  double t53634;
  double t53655;
  double t53668;
  double t53675;
  double t53677;
  double t53685;
  double t53705;
  double t53706;
  double t53717;
  double t37776;
  double t38544;
  double t54241;
  double t54305;
  double t54313;
  double t41058;
  double t54319;
  double t41086;
  double t54529;
  double t54578;
  double t54624;
  double t54660;
  double t54661;
  double t41297;
  double t43679;
  double t44546;
  double t44854;
  double t44865;
  double t45540;
  double t45722;
  double t54735;
  double t54742;
  double t45826;
  double t54766;
  double t54770;
  double t54773;
  double t54774;
  double t54775;
  double t45882;
  double t54777;
  double t54780;
  double t54781;
  double t46011;
  double t46012;
  double t46155;
  double t46265;
  double t46293;
  double t46294;
  double t46407;
  double t46470;
  double t54806;
  double t54810;
  double t54833;
  double t54834;
  double t54835;
  double t46905;
  double t54838;
  double t50350;
  double t54843;
  double t54846;
  double t54847;
  double t50472;
  double t50825;
  double t50829;
  double t50872;
  double t50919;
  double t51576;
  double t51618;
  double t54883;
  double t54884;
  double t54885;
  double t51701;
  double t54888;
  double t51705;
  double t54892;
  double t54899;
  double t54900;
  double t54901;
  double t54902;
  double t51756;
  double t51850;
  double t51894;
  double t51969;
  double t51973;
  double t52370;
  double t52547;
  double t54918;
  double t54921;
  double t52622;
  double t54940;
  double t54943;
  double t54944;
  double t54946;
  double t54947;
  double t53389;
  double t54949;
  double t54953;
  double t54956;
  double t53412;
  double t53414;
  double t53443;
  double t53467;
  double t53484;
  double t53492;
  double t53669;
  double t53692;
  double t54990;
  double t54993;
  double t55012;
  double t55013;
  double t55014;
  double t53732;
  double t55016;
  double t53745;
  double t55020;
  double t55023;
  double t55024;
  double t53763;
  double t53781;
  double t53782;
  double t53866;
  double t54025;
  double t55121;
  double t55123;
  double t55124;
  double t54798;
  double t54799;
  double t55153;
  double t55155;
  double t54807;
  double t55148;
  double t55149;
  double t55150;
  double t54818;
  double t54824;
  double t54825;
  double t55168;
  double t55169;
  double t55170;
  double t55200;
  double t55201;
  double t55203;
  double t55258;
  double t55262;
  double t55264;
  double t54971;
  double t54972;
  double t55384;
  double t55389;
  double t54991;
  double t55402;
  double t55406;
  double t55407;
  double t54999;
  double t55426;
  double t55429;
  double t55430;
  double t55005;
  double t55006;
  double t55465;
  double t55466;
  double t55467;
  double t55471;
  double t55472;
  double t55473;
  double t55474;
  double t55475;
  double t55482;
  double t55484;
  double t55519;
  double t55520;
  double t55525;
  double t55527;
  double t55549;
  double t55550;
  double t55551;
  t417 = Cos(var1[13]);
  t267 = Cos(var1[14]);
  t306 = Sin(var1[13]);
  t549 = Sin(var1[14]);
  t1595 = t417*t267;
  t1673 = t306*t549;
  t1726 = t1595 + t1673;
  t187 = Cos(var1[4]);
  t1539 = Cos(var1[5]);
  t1951 = Sin(var1[12]);
  t1448 = Cos(var1[12]);
  t2022 = Sin(var1[5]);
  t3138 = -1.*t1539*t1951*t1726;
  t3323 = -1.*t1448*t1726*t2022;
  t3413 = t3138 + t3323;
  t3518 = t187*t3413;
  t1429 = Sin(var1[4]);
  t386 = -1.*t267*t306;
  t930 = t417*t549;
  t974 = t386 + t930;
  t4493 = t267*t306;
  t4513 = -1.*t417*t549;
  t4538 = t4493 + t4513;
  t5258 = -1.*t1448*t1539;
  t5274 = t1951*t2022;
  t5281 = t5258 + t5274;
  t5293 = t187*t5281;
  t4575 = t1448*t1539*t4538;
  t4605 = -1.*t1951*t4538*t2022;
  t4663 = t4575 + t4605;
  t5368 = -1.*t1539*t1951*t4538;
  t5370 = -1.*t1448*t4538*t2022;
  t5415 = t5368 + t5370;
  t5429 = t187*t5415;
  t1795 = t1448*t1539*t1726;
  t2207 = -1.*t1951*t1726*t2022;
  t2477 = t1795 + t2207;
  t3553 = -1.*t417*t267;
  t3631 = -1.*t306*t549;
  t3656 = t3553 + t3631;
  t5723 = Cos(var1[10]);
  t5685 = Cos(var1[11]);
  t5687 = Sin(var1[10]);
  t5772 = Sin(var1[11]);
  t5802 = -1.*t5723*t5685;
  t5815 = -1.*t5687*t5772;
  t5816 = t5802 + t5815;
  t5829 = Sin(var1[9]);
  t5789 = Cos(var1[9]);
  t6151 = -1.*t1539*t5829*t5816;
  t6192 = -1.*t5789*t5816*t2022;
  t6730 = t6151 + t6192;
  t6732 = t187*t6730;
  t6845 = t5685*t5687;
  t6856 = -1.*t5723*t5772;
  t6858 = t6845 + t6856;
  t5722 = -1.*t5685*t5687;
  t5780 = t5723*t5772;
  t5785 = t5722 + t5780;
  t8157 = t5789*t1539;
  t8283 = -1.*t5829*t2022;
  t8290 = t8157 + t8283;
  t8296 = t187*t8290;
  t7293 = t5723*t5685;
  t7309 = t5687*t5772;
  t7612 = t7293 + t7309;
  t7930 = t5789*t1539*t5785;
  t7963 = -1.*t5829*t5785*t2022;
  t8017 = t7930 + t7963;
  t8857 = -1.*t1539*t5829*t5785;
  t8870 = -1.*t5789*t5785*t2022;
  t8892 = t8857 + t8870;
  t8937 = t187*t8892;
  t5826 = t5789*t1539*t5816;
  t5860 = -1.*t5829*t5816*t2022;
  t5885 = t5826 + t5860;
  t1086 = t187*t974;
  t2788 = -1.*t1429*t2477;
  t2970 = t1086 + t2788;
  t11577 = Sin(var1[3]);
  t12964 = Cos(var1[3]);
  t15328 = t11577*t1429*t3413;
  t15615 = t12964*t2477;
  t15700 = t15328 + t15615;
  t4040 = t1448*t1539*t974;
  t4042 = -1.*t1951*t974*t2022;
  t4138 = t4040 + t4042;
  t5324 = t187*t1726;
  t5339 = -1.*t1429*t4663;
  t5364 = t5324 + t5339;
  t4849 = -1.*t1539*t1951;
  t4899 = -1.*t1448*t2022;
  t5082 = t4849 + t4899;
  t20513 = t12964*t5082;
  t20514 = t11577*t1429*t5281;
  t20596 = t20513 + t20514;
  t19009 = t1539*t1951*t4538;
  t19112 = t1448*t4538*t2022;
  t19138 = t19009 + t19112;
  t20768 = t11577*t1429*t5415;
  t21523 = t12964*t4663;
  t21672 = t20768 + t21523;
  t11892 = t1539*t1951*t1726;
  t11962 = t1448*t1726*t2022;
  t12182 = t11892 + t11962;
  t5605 = t1448*t1539*t3656;
  t5606 = -1.*t1951*t3656*t2022;
  t5611 = t5605 + t5606;
  t5786 = t187*t5785;
  t5887 = -1.*t1429*t5885;
  t5920 = t5786 + t5887;
  t23155 = t11577*t1429*t6730;
  t23228 = t12964*t5885;
  t23316 = t23155 + t23228;
  t6901 = t5789*t1539*t6858;
  t6950 = -1.*t5829*t6858*t2022;
  t6955 = t6901 + t6950;
  t8483 = t187*t7612;
  t8631 = -1.*t1429*t8017;
  t8839 = t8483 + t8631;
  t8043 = t1539*t5829;
  t8072 = t5789*t2022;
  t8073 = t8043 + t8072;
  t24810 = t12964*t8073;
  t25020 = t11577*t1429*t8290;
  t25061 = t24810 + t25020;
  t24001 = t1539*t5829*t5785;
  t24065 = t5789*t5785*t2022;
  t24071 = t24001 + t24065;
  t25693 = t11577*t1429*t8892;
  t25696 = t12964*t8017;
  t25705 = t25693 + t25696;
  t22822 = t1539*t5829*t5816;
  t22895 = t5789*t5816*t2022;
  t22896 = t22822 + t22895;
  t8991 = t5789*t1539*t7612;
  t10081 = -1.*t5829*t7612*t2022;
  t10278 = t8991 + t10081;
  t21748 = t12964*t12182;
  t21749 = -1.*t11577*t2970;
  t21858 = t21748 + t21749;
  t13200 = -1.*t974*t1429;
  t14946 = -1.*t187*t2477;
  t15202 = t13200 + t14946;
  t26733 = -1.*t12964*t1429*t3413;
  t26774 = t11577*t2477;
  t26781 = t26733 + t26774;
  t16052 = t1539*t1951*t974;
  t16068 = t1448*t974*t2022;
  t16455 = t16052 + t16068;
  t16738 = t187*t3656;
  t16865 = -1.*t1429*t4138;
  t17813 = t16738 + t16865;
  t19922 = t1448*t1539;
  t19936 = -1.*t1951*t2022;
  t19941 = t19922 + t19936;
  t27111 = t11577*t5082;
  t27132 = -1.*t12964*t1429*t5281;
  t27158 = t27111 + t27132;
  t19266 = t12964*t19138;
  t19362 = -1.*t11577*t5364;
  t19545 = t19266 + t19362;
  t20628 = -1.*t1726*t1429;
  t20630 = -1.*t187*t4663;
  t20698 = t20628 + t20630;
  t27167 = -1.*t12964*t1429*t5415;
  t27176 = t11577*t4663;
  t27197 = t27167 + t27176;
  t22030 = t1539*t1951*t3656;
  t22099 = t1448*t3656*t2022;
  t22251 = t22030 + t22099;
  t22766 = t187*t4538;
  t22770 = -1.*t1429*t5611;
  t22771 = t22766 + t22770;
  t25815 = t12964*t22896;
  t25832 = -1.*t11577*t5920;
  t25842 = t25815 + t25832;
  t23034 = -1.*t5785*t1429;
  t23070 = -1.*t187*t5885;
  t23097 = t23034 + t23070;
  t27322 = -1.*t12964*t1429*t6730;
  t27323 = t11577*t5885;
  t27353 = t27322 + t27323;
  t23320 = t1539*t5829*t6858;
  t23345 = t5789*t6858*t2022;
  t23352 = t23320 + t23345;
  t23403 = t187*t5816;
  t23451 = -1.*t1429*t6955;
  t23536 = t23403 + t23451;
  t24474 = -1.*t5789*t1539;
  t24567 = t5829*t2022;
  t24586 = t24474 + t24567;
  t27628 = t11577*t8073;
  t27803 = -1.*t12964*t1429*t8290;
  t27879 = t27628 + t27803;
  t24115 = t12964*t24071;
  t24303 = -1.*t11577*t8839;
  t24396 = t24115 + t24303;
  t25506 = -1.*t7612*t1429;
  t25508 = -1.*t187*t8017;
  t25573 = t25506 + t25508;
  t27930 = -1.*t12964*t1429*t8892;
  t27970 = t11577*t8017;
  t28002 = t27930 + t27970;
  t25852 = t1539*t5829*t7612;
  t25864 = t5789*t7612*t2022;
  t25865 = t25852 + t25864;
  t26135 = t187*t6858;
  t26153 = -1.*t1429*t10278;
  t26427 = t26135 + t26153;
  t4489 = t1726*t1429;
  t4670 = t187*t4663;
  t4805 = t4489 + t4670;
  t28166 = -1.*t267;
  t28196 = 1. + t28166;
  t28241 = 0.50321*t28196;
  t28299 = 0.23321*t267;
  t28355 = t28241 + t28299;
  t28553 = -1.*t1448;
  t28557 = 1. + t28553;
  t28561 = -1.*t417;
  t28565 = 1. + t28561;
  t28570 = 0.28121*t28565;
  t28571 = t417*t28355;
  t28572 = -0.27*t306*t549;
  t28576 = t28570 + t28571 + t28572;
  t28161 = 0.28121*t306;
  t28362 = -1.*t28355*t306;
  t28364 = -0.27*t417*t549;
  t28532 = t28161 + t28362 + t28364;
  t28558 = 0.15121*t28557;
  t28578 = t1448*t28576;
  t28583 = t28558 + t28578;
  t28591 = t1539*t28583;
  t28603 = -0.15121*t28557;
  t28619 = -0.15121*t1448;
  t28624 = -0.15121*t1951;
  t28648 = t1951*t28576;
  t28649 = t28603 + t28619 + t28624 + t28648;
  t28654 = -1.*t28649*t2022;
  t29215 = t28591 + t28654;
  t29840 = t28532*t1429;
  t30066 = t187*t29215;
  t30067 = t29840 + t30066;
  t28551 = -1.*t28532*t1429;
  t29426 = -1.*t187*t29215;
  t29595 = t28551 + t29426;
  t32747 = t187*t28532;
  t34261 = -1.*t1429*t29215;
  t34366 = t32747 + t34261;
  t31347 = t1539*t28649;
  t31385 = t28583*t2022;
  t32055 = t31347 + t31385;
  t32579 = -1.*t19941*t32055;
  t32590 = -1.*t187*t5082*t30067;
  t34703 = t1429*t5082*t34366;
  t34915 = t32579 + t32590 + t34703;
  t36373 = -1.*t1539*t28649;
  t36425 = -1.*t28583*t2022;
  t36653 = t36373 + t36425;
  t35527 = t19138*t32055;
  t35632 = t4805*t30067;
  t35703 = t5364*t34366;
  t36005 = t35527 + t35632 + t35703;
  t36232 = t187*t5415*t34915;
  t37751 = -1.*t5082*t32055;
  t36369 = Power(t187,2);
  t37050 = Power(t1429,2);
  t39669 = 0.15121*t1951;
  t39686 = -1.*t1951*t28576;
  t39755 = t39669 + t39686;
  t39875 = t1539*t39755;
  t40593 = t28619 + t28578;
  t40675 = -1.*t40593*t2022;
  t40702 = t39875 + t40675;
  t37825 = -1.*t187*t5281*t30067;
  t38024 = t1429*t5281*t34366;
  t38366 = t4663*t32055;
  t40938 = t1539*t40593;
  t40943 = t39755*t2022;
  t40980 = t40938 + t40943;
  t39123 = t187*t5415*t30067;
  t39378 = -1.*t1429*t5415*t34366;
  t39648 = t187*t5281*t36005;
  t41305 = 0.28121*t417;
  t41345 = -1.*t417*t28355;
  t41469 = 0.27*t306*t549;
  t41639 = t41305 + t41345 + t41469;
  t42423 = t1448*t1539*t28532;
  t42893 = -1.*t1951*t28532*t2022;
  t42916 = t42423 + t42893;
  t5469 = t974*t1429;
  t5545 = t187*t2477;
  t5551 = t5469 + t5545;
  t41259 = t1539*t1951*t28532;
  t41281 = t1448*t28532*t2022;
  t41287 = t41259 + t41281;
  t41812 = t41639*t1429;
  t43020 = t187*t42916;
  t43030 = t41812 + t43020;
  t43062 = t187*t41639;
  t43232 = -1.*t1429*t42916;
  t43236 = t43062 + t43232;
  t43914 = -0.27*t267*t306;
  t43939 = 0.27*t417*t549;
  t43980 = t43914 + t43939;
  t44547 = -0.27*t417*t267;
  t44587 = t44547 + t28572;
  t44652 = t1448*t1539*t43980;
  t44662 = -1.*t1951*t43980*t2022;
  t44678 = t44652 + t44662;
  t5558 = t4538*t1429;
  t5620 = t187*t5611;
  t5682 = t5558 + t5620;
  t44024 = t1539*t1951*t43980;
  t44185 = t1448*t43980*t2022;
  t44510 = t44024 + t44185;
  t44651 = t44587*t1429;
  t44679 = t187*t44678;
  t44722 = t44651 + t44679;
  t44750 = t187*t44587;
  t44764 = -1.*t1429*t44678;
  t44773 = t44750 + t44764;
  t43691 = t12182*t32055;
  t43711 = t5551*t30067;
  t43715 = t2970*t34366;
  t45324 = -1.*t19138*t32055;
  t45331 = -1.*t4805*t30067;
  t45356 = -1.*t5364*t34366;
  t45364 = t45324 + t45331 + t45356;
  t45447 = t43691 + t43711 + t43715;
  t45528 = -1.*t4663*t32055;
  t45609 = -1.*t187*t5415*t30067;
  t45612 = t1429*t5415*t34366;
  t45721 = t2477*t32055;
  t45764 = t187*t3413*t30067;
  t45782 = -1.*t1429*t3413*t34366;
  t45803 = t187*t3413*t45364;
  t45812 = t187*t5415*t45447;
  t3728 = t3656*t1429;
  t4144 = t187*t4138;
  t4322 = t3728 + t4144;
  t46177 = -1.*t12182*t32055;
  t46195 = -1.*t5551*t30067;
  t46200 = -1.*t2970*t34366;
  t46334 = t19941*t32055;
  t46335 = t187*t5082*t30067;
  t46338 = -1.*t1429*t5082*t34366;
  t46351 = t46334 + t46335 + t46338;
  t46380 = t46177 + t46195 + t46200;
  t46384 = t187*t3413*t46351;
  t46394 = t5082*t32055;
  t46415 = t187*t5281*t30067;
  t46422 = -1.*t1429*t5281*t34366;
  t46461 = -1.*t2477*t32055;
  t46740 = -1.*t187*t3413*t30067;
  t46752 = t1429*t3413*t34366;
  t46768 = t187*t5281*t46380;
  t7809 = t7612*t1429;
  t8019 = t187*t8017;
  t8025 = t7809 + t8019;
  t50947 = -1.*t5685;
  t50955 = 1. + t50947;
  t51033 = -0.50321*t50955;
  t51044 = -0.23321*t5685;
  t51051 = t51033 + t51044;
  t51088 = -1.*t5789;
  t51097 = 1. + t51088;
  t51120 = -1.*t5723;
  t51124 = 1. + t51120;
  t51130 = -0.28121*t51124;
  t51136 = t5723*t51051;
  t51142 = 0.27*t5687*t5772;
  t51144 = t51130 + t51136 + t51142;
  t50945 = 0.28121*t5687;
  t51056 = t51051*t5687;
  t51074 = -0.27*t5723*t5772;
  t51077 = t50945 + t51056 + t51074;
  t51107 = -0.15121*t51097;
  t51185 = t5789*t51144;
  t51210 = t51107 + t51185;
  t51220 = t1539*t51210;
  t51224 = 0.15121*t51097;
  t51226 = 0.15121*t5789;
  t51228 = 0.15121*t5829;
  t51231 = t5829*t51144;
  t51234 = t51224 + t51226 + t51228 + t51231;
  t51235 = -1.*t51234*t2022;
  t51236 = t51220 + t51235;
  t51241 = t51077*t1429;
  t51242 = t187*t51236;
  t51244 = t51241 + t51242;
  t51080 = -1.*t51077*t1429;
  t51237 = -1.*t187*t51236;
  t51238 = t51080 + t51237;
  t51259 = t187*t51077;
  t51260 = -1.*t1429*t51236;
  t51261 = t51259 + t51260;
  t51251 = t1539*t51234;
  t51252 = t51210*t2022;
  t51255 = t51251 + t51252;
  t51256 = -1.*t24586*t51255;
  t51257 = -1.*t187*t8073*t51244;
  t51262 = t1429*t8073*t51261;
  t51263 = t51256 + t51257 + t51262;
  t51452 = -1.*t1539*t51234;
  t51540 = -1.*t51210*t2022;
  t51551 = t51452 + t51540;
  t51294 = t24071*t51255;
  t51309 = t8025*t51244;
  t51310 = t8839*t51261;
  t51324 = t51294 + t51309 + t51310;
  t51379 = t187*t8892*t51263;
  t51575 = -1.*t8073*t51255;
  t51680 = -0.15121*t5829;
  t51687 = -1.*t5829*t51144;
  t51688 = t51680 + t51687;
  t51690 = t1539*t51688;
  t51692 = t51226 + t51185;
  t51693 = -1.*t51692*t2022;
  t51694 = t51690 + t51693;
  t51577 = -1.*t187*t8290*t51244;
  t51578 = t1429*t8290*t51261;
  t51610 = t8017*t51255;
  t51697 = t1539*t51692;
  t51698 = t51688*t2022;
  t51700 = t51697 + t51698;
  t51658 = t187*t8892*t51244;
  t51660 = -1.*t1429*t8892*t51261;
  t51670 = t187*t8290*t51324;
  t51730 = -0.28121*t5687;
  t51742 = -1.*t51051*t5687;
  t51743 = 0.27*t5723*t5772;
  t51745 = t51730 + t51742 + t51743;
  t51762 = 0.28121*t5723;
  t51764 = t51762 + t51136 + t51142;
  t51779 = t5789*t1539*t51745;
  t51782 = -1.*t5829*t51745*t2022;
  t51785 = t51779 + t51782;
  t8954 = t5785*t1429;
  t8964 = t187*t5885;
  t8977 = t8954 + t8964;
  t51746 = t1539*t5829*t51745;
  t51751 = t5789*t51745*t2022;
  t51753 = t51746 + t51751;
  t51770 = t51764*t1429;
  t51790 = t187*t51785;
  t51795 = t51770 + t51790;
  t51802 = t187*t51764;
  t51833 = -1.*t1429*t51785;
  t51838 = t51802 + t51833;
  t51876 = 0.27*t5685*t5687;
  t51882 = t51876 + t51074;
  t51896 = -0.27*t5723*t5685;
  t51897 = -0.27*t5687*t5772;
  t51899 = t51896 + t51897;
  t51903 = t5789*t1539*t51882;
  t51904 = -1.*t5829*t51882*t2022;
  t51907 = t51903 + t51904;
  t8978 = t6858*t1429;
  t10298 = t187*t10278;
  t10521 = t8978 + t10298;
  t51884 = t1539*t5829*t51882;
  t51892 = t5789*t51882*t2022;
  t51893 = t51884 + t51892;
  t51900 = t51899*t1429;
  t51908 = t187*t51907;
  t51909 = t51900 + t51908;
  t51916 = t187*t51899;
  t51917 = -1.*t1429*t51907;
  t51918 = t51916 + t51917;
  t51852 = t22896*t51255;
  t51860 = t8977*t51244;
  t51862 = t5920*t51261;
  t52168 = -1.*t24071*t51255;
  t52173 = -1.*t8025*t51244;
  t52176 = -1.*t8839*t51261;
  t52180 = t52168 + t52173 + t52176;
  t52321 = t51852 + t51860 + t51862;
  t52367 = -1.*t8017*t51255;
  t52375 = -1.*t187*t8892*t51244;
  t52376 = t1429*t8892*t51261;
  t52384 = t5885*t51255;
  t52562 = t187*t6730*t51244;
  t52565 = -1.*t1429*t6730*t51261;
  t52581 = t187*t6730*t52180;
  t52601 = t187*t8892*t52321;
  t6784 = t5816*t1429;
  t7039 = t187*t6955;
  t7285 = t6784 + t7039;
  t53445 = -1.*t22896*t51255;
  t53458 = -1.*t8977*t51244;
  t53459 = -1.*t5920*t51261;
  t53598 = t24586*t51255;
  t53603 = t187*t8073*t51244;
  t53608 = -1.*t1429*t8073*t51261;
  t53609 = t53598 + t53603 + t53608;
  t53634 = t53445 + t53458 + t53459;
  t53655 = t187*t6730*t53609;
  t53668 = t8073*t51255;
  t53675 = t187*t8290*t51244;
  t53677 = -1.*t1429*t8290*t51261;
  t53685 = -1.*t5885*t51255;
  t53705 = -1.*t187*t6730*t51244;
  t53706 = t1429*t6730*t51261;
  t53717 = t187*t8290*t53634;
  t37776 = -1.*t19941*t29215;
  t38544 = t19138*t29215;
  t54241 = -1.*t5082*t29215;
  t54305 = t32579 + t54241;
  t54313 = t4663*t54305;
  t41058 = -1.*t19941*t40980;
  t54319 = -1.*t5281*t29215;
  t41086 = t19138*t40980;
  t54529 = t5415*t29215;
  t54578 = t28532*t1726;
  t54624 = t4663*t29215;
  t54660 = t54578 + t35527 + t54624;
  t54661 = t5082*t54660;
  t41297 = -1.*t19941*t41287;
  t43679 = t19138*t41287;
  t44546 = -1.*t19941*t44510;
  t44854 = t19138*t44510;
  t44865 = t22251*t32055;
  t45540 = -1.*t19138*t29215;
  t45722 = t12182*t29215;
  t54735 = t28532*t974;
  t54742 = t2477*t29215;
  t45826 = -1.*t19138*t40980;
  t54766 = -1.*t5415*t29215;
  t54770 = -1.*t28532*t1726;
  t54773 = -1.*t4663*t29215;
  t54774 = t54770 + t45324 + t54773;
  t54775 = t2477*t54774;
  t45882 = t12182*t40980;
  t54777 = t3413*t29215;
  t54780 = t54735 + t43691 + t54742;
  t54781 = t4663*t54780;
  t46011 = t41287*t12182;
  t46012 = t16455*t32055;
  t46155 = -1.*t19138*t41287;
  t46265 = t44510*t12182;
  t46293 = -1.*t19138*t44510;
  t46294 = -1.*t22251*t32055;
  t46407 = t19941*t29215;
  t46470 = -1.*t12182*t29215;
  t54806 = -1.*t28532*t974;
  t54810 = -1.*t2477*t29215;
  t54833 = t5082*t29215;
  t54834 = t46334 + t54833;
  t54835 = t2477*t54834;
  t46905 = t19941*t40980;
  t54838 = t5281*t29215;
  t50350 = -1.*t12182*t40980;
  t54843 = -1.*t3413*t29215;
  t54846 = t54806 + t46177 + t54810;
  t54847 = t5082*t54846;
  t50472 = t19941*t41287;
  t50825 = -1.*t41287*t12182;
  t50829 = -1.*t16455*t32055;
  t50872 = t19941*t44510;
  t50919 = -1.*t44510*t12182;
  t51576 = -1.*t24586*t51236;
  t51618 = t24071*t51236;
  t54883 = -1.*t8073*t51236;
  t54884 = t51256 + t54883;
  t54885 = t8017*t54884;
  t51701 = -1.*t24586*t51700;
  t54888 = -1.*t8290*t51236;
  t51705 = t24071*t51700;
  t54892 = t8892*t51236;
  t54899 = t51077*t7612;
  t54900 = t8017*t51236;
  t54901 = t54899 + t51294 + t54900;
  t54902 = t8073*t54901;
  t51756 = -1.*t24586*t51753;
  t51850 = t51753*t24071;
  t51894 = -1.*t24586*t51893;
  t51969 = t51893*t24071;
  t51973 = t25865*t51255;
  t52370 = -1.*t24071*t51236;
  t52547 = t22896*t51236;
  t54918 = t51077*t5785;
  t54921 = t5885*t51236;
  t52622 = -1.*t24071*t51700;
  t54940 = -1.*t8892*t51236;
  t54943 = -1.*t51077*t7612;
  t54944 = -1.*t8017*t51236;
  t54946 = t54943 + t52168 + t54944;
  t54947 = t5885*t54946;
  t53389 = t22896*t51700;
  t54949 = t6730*t51236;
  t54953 = t54918 + t51852 + t54921;
  t54956 = t8017*t54953;
  t53412 = t51753*t22896;
  t53414 = t23352*t51255;
  t53443 = -1.*t51753*t24071;
  t53467 = t51893*t22896;
  t53484 = -1.*t51893*t24071;
  t53492 = -1.*t25865*t51255;
  t53669 = t24586*t51236;
  t53692 = -1.*t22896*t51236;
  t54990 = -1.*t51077*t5785;
  t54993 = -1.*t5885*t51236;
  t55012 = t8073*t51236;
  t55013 = t53598 + t55012;
  t55014 = t5885*t55013;
  t53732 = t24586*t51700;
  t55016 = t8290*t51236;
  t53745 = -1.*t22896*t51700;
  t55020 = -1.*t6730*t51236;
  t55023 = t54990 + t53445 + t54993;
  t55024 = t8073*t55023;
  t53763 = t24586*t51753;
  t53781 = -1.*t51753*t22896;
  t53782 = -1.*t23352*t51255;
  t53866 = t24586*t51893;
  t54025 = -1.*t51893*t22896;
  t55121 = t1951*t28583;
  t55123 = -1.*t1448*t28649;
  t55124 = t55121 + t55123;
  t54798 = t28532*t3656;
  t54799 = t974*t41639;
  t55153 = Power(t1448,2);
  t55155 = Power(t1951,2);
  t54807 = -1.*t41639*t1726;
  t55148 = -1.*t1448*t4538*t28583;
  t55149 = -1.*t1951*t4538*t28649;
  t55150 = t54770 + t55148 + t55149;
  t54818 = t974*t44587;
  t54824 = -1.*t4538*t28532;
  t54825 = -1.*t44587*t1726;
  t55168 = t1448*t1726*t28583;
  t55169 = t1951*t1726*t28649;
  t55170 = t54735 + t55168 + t55169;
  t55200 = -1.*t1951*t28583;
  t55201 = t1448*t28649;
  t55203 = t55200 + t55201;
  t55258 = -1.*t5829*t51210;
  t55262 = t5789*t51234;
  t55264 = t55258 + t55262;
  t54971 = t51077*t5816;
  t54972 = t5785*t51764;
  t55384 = Power(t5789,2);
  t55389 = Power(t5829,2);
  t54991 = -1.*t51764*t7612;
  t55402 = -1.*t5789*t5785*t51210;
  t55406 = -1.*t5829*t5785*t51234;
  t55407 = t54943 + t55402 + t55406;
  t54999 = t5785*t51899;
  t55426 = t5789*t5816*t51210;
  t55429 = t5829*t5816*t51234;
  t55430 = t54918 + t55426 + t55429;
  t55005 = -1.*t6858*t51077;
  t55006 = -1.*t51899*t7612;
  t55465 = t5829*t51210;
  t55466 = -1.*t5789*t51234;
  t55467 = t55465 + t55466;
  t55471 = 0.15121*t6858;
  t55472 = 0.15121*t5785;
  t55473 = t55471 + t55472;
  t55474 = t5816*t51144;
  t55475 = t54918 + t55474;
  t55482 = -1.*t5785*t51144;
  t55484 = t55482 + t54943;
  t55519 = -1.*t4538*t28576;
  t55520 = t55519 + t54770;
  t55525 = t28576*t1726;
  t55527 = t54735 + t55525;
  t55549 = -0.15121*t3656;
  t55550 = -0.15121*t1726;
  t55551 = t55549 + t55550;
  p_output1[0]=t2970;
  p_output1[1]=t3518;
  p_output1[2]=t3518;
  p_output1[3]=t4322;
  p_output1[4]=t4805;
  p_output1[5]=-1.*t1429*t5082;
  p_output1[6]=t5293;
  p_output1[7]=t5293;
  p_output1[8]=t5364;
  p_output1[9]=t5429;
  p_output1[10]=t5429;
  p_output1[11]=t5551;
  p_output1[12]=t5682;
  p_output1[13]=t5920;
  p_output1[14]=t6732;
  p_output1[15]=t6732;
  p_output1[16]=t7285;
  p_output1[17]=t8025;
  p_output1[18]=-1.*t1429*t8073;
  p_output1[19]=t8296;
  p_output1[20]=t8296;
  p_output1[21]=t8839;
  p_output1[22]=t8937;
  p_output1[23]=t8937;
  p_output1[24]=t8977;
  p_output1[25]=t10521;
  p_output1[26]=-1.*t11577*t12182 - 1.*t12964*t2970;
  p_output1[27]=-1.*t11577*t15202;
  p_output1[28]=t15700;
  p_output1[29]=t15700;
  p_output1[30]=t12964*t16455 - 1.*t11577*t17813;
  p_output1[31]=t19545;
  p_output1[32]=-1.*t11577*t19941 + t12964*t1429*t5082;
  p_output1[33]=t11577*t187*t5082;
  p_output1[34]=t20596;
  p_output1[35]=t20596;
  p_output1[36]=-1.*t11577*t19138 - 1.*t12964*t5364;
  p_output1[37]=-1.*t11577*t20698;
  p_output1[38]=t21672;
  p_output1[39]=t21672;
  p_output1[40]=t21858;
  p_output1[41]=t12964*t22251 - 1.*t11577*t22771;
  p_output1[42]=-1.*t11577*t22896 - 1.*t12964*t5920;
  p_output1[43]=-1.*t11577*t23097;
  p_output1[44]=t23316;
  p_output1[45]=t23316;
  p_output1[46]=t12964*t23352 - 1.*t11577*t23536;
  p_output1[47]=t24396;
  p_output1[48]=-1.*t11577*t24586 + t12964*t1429*t8073;
  p_output1[49]=t11577*t187*t8073;
  p_output1[50]=t25061;
  p_output1[51]=t25061;
  p_output1[52]=-1.*t11577*t24071 - 1.*t12964*t8839;
  p_output1[53]=-1.*t11577*t25573;
  p_output1[54]=t25705;
  p_output1[55]=t25705;
  p_output1[56]=t25842;
  p_output1[57]=t12964*t25865 - 1.*t11577*t26427;
  p_output1[58]=t21858;
  p_output1[59]=t12964*t15202;
  p_output1[60]=t26781;
  p_output1[61]=t26781;
  p_output1[62]=t11577*t16455 + t12964*t17813;
  p_output1[63]=t11577*t19138 + t12964*t5364;
  p_output1[64]=t12964*t19941 + t11577*t1429*t5082;
  p_output1[65]=-1.*t12964*t187*t5082;
  p_output1[66]=t27158;
  p_output1[67]=t27158;
  p_output1[68]=t19545;
  p_output1[69]=t12964*t20698;
  p_output1[70]=t27197;
  p_output1[71]=t27197;
  p_output1[72]=t11577*t12182 + t12964*t2970;
  p_output1[73]=t11577*t22251 + t12964*t22771;
  p_output1[74]=t25842;
  p_output1[75]=t12964*t23097;
  p_output1[76]=t27353;
  p_output1[77]=t27353;
  p_output1[78]=t11577*t23352 + t12964*t23536;
  p_output1[79]=t11577*t24071 + t12964*t8839;
  p_output1[80]=t12964*t24586 + t11577*t1429*t8073;
  p_output1[81]=-1.*t12964*t187*t8073;
  p_output1[82]=t27879;
  p_output1[83]=t27879;
  p_output1[84]=t24396;
  p_output1[85]=t12964*t25573;
  p_output1[86]=t28002;
  p_output1[87]=t28002;
  p_output1[88]=t11577*t22896 + t12964*t5920;
  p_output1[89]=t11577*t25865 + t12964*t26427;
  p_output1[90]=-1.*t1429*t36005*t5082 + t4805*(t1429*t29595*t5082 + t1429*t30067*t5082) + t34915*t5364 + t187*t5082*(t20698*t34366 + t34366*t4805 + t29595*t5364 + t30067*t5364);
  p_output1[91]=t36232 + t39648 + t4805*(t37751 + t37776 + t37825 + t38024 - 1.*t36369*t36653*t5082 - 1.*t36653*t37050*t5082) + t187*t5082*(t38366 + t38544 + t39123 + t39378 + t187*t36653*t4805 - 1.*t1429*t36653*t5364);
  p_output1[92]=t36232 + t39648 + t4805*(t37751 + t37825 + t38024 + t41058 - 1.*t36369*t40702*t5082 - 1.*t37050*t40702*t5082) + t187*t5082*(t38366 + t39123 + t39378 + t41086 + t187*t40702*t4805 - 1.*t1429*t40702*t5364);
  p_output1[93]=t4805*(t41297 - 1.*t187*t43030*t5082 + t1429*t43236*t5082) + t187*t5082*(t43679 + t43691 + t43711 + t43715 + t43030*t4805 + t43236*t5364) + t34915*t5551;
  p_output1[94]=t4805*(t44546 - 1.*t187*t44722*t5082 + t1429*t44773*t5082) + t34915*t5682 + t187*t5082*(t22771*t34366 + t44854 + t44865 + t44722*t4805 + t44773*t5364 + t30067*t5682);
  p_output1[95]=t2970*t45364 + t45447*t5364 + (-1.*t20698*t34366 - 1.*t34366*t4805 - 1.*t29595*t5364 - 1.*t30067*t5364)*t5551 + t4805*(t29595*t2970 + t2970*t30067 + t15202*t34366 + t34366*t5551);
  p_output1[96]=t45803 + t45812 + (t45528 + t45540 + t45609 + t45612 - 1.*t187*t36653*t4805 + t1429*t36653*t5364)*t5551 + t4805*(-1.*t1429*t2970*t36653 + t45721 + t45722 + t45764 + t45782 + t187*t36653*t5551);
  p_output1[97]=t45803 + t45812 + (t45528 + t45609 + t45612 + t45826 - 1.*t187*t40702*t4805 + t1429*t40702*t5364)*t5551 + t4805*(-1.*t1429*t2970*t40702 + t45721 + t45764 + t45782 + t45882 + t187*t40702*t5551);
  p_output1[98]=t4322*t45364 + t45447*t5551 + (t46155 + t46177 + t46195 + t46200 - 1.*t43030*t4805 - 1.*t43236*t5364)*t5551 + t4805*(t17813*t34366 + t30067*t4322 + t2970*t43236 + t46011 + t46012 + t43030*t5551);
  p_output1[99]=t45364*t4805 + t4805*(t35527 + t35632 + t35703 + t2970*t44773 + t46265 + t44722*t5551) + t45447*t5682 + t5551*(-1.*t22771*t34366 + t46293 + t46294 - 1.*t44722*t4805 - 1.*t44773*t5364 - 1.*t30067*t5682);
  p_output1[100]=t2970*t46351 - 1.*t1429*t46380*t5082 + (-1.*t1429*t29595*t5082 - 1.*t1429*t30067*t5082)*t5551 + t187*t5082*(-1.*t29595*t2970 - 1.*t2970*t30067 - 1.*t15202*t34366 - 1.*t34366*t5551);
  p_output1[101]=t46384 + t46768 + (t46394 + t46407 + t46415 + t46422 + t36369*t36653*t5082 + t36653*t37050*t5082)*t5551 + t187*t5082*(t1429*t2970*t36653 + t46461 + t46470 + t46740 + t46752 - 1.*t187*t36653*t5551);
  p_output1[102]=t46384 + t46768 + (t46394 + t46415 + t46422 + t46905 + t36369*t40702*t5082 + t37050*t40702*t5082)*t5551 + t187*t5082*(t1429*t2970*t40702 + t46461 + t46740 + t46752 + t50350 - 1.*t187*t40702*t5551);
  p_output1[103]=t4322*t46351 + (t50472 + t187*t43030*t5082 - 1.*t1429*t43236*t5082)*t5551 + t187*t5082*(-1.*t17813*t34366 - 1.*t30067*t4322 - 1.*t2970*t43236 + t50825 + t50829 - 1.*t43030*t5551);
  p_output1[104]=t46351*t4805 + (t187*t44722*t5082 - 1.*t1429*t44773*t5082 + t50872)*t5551 + t187*t5082*(-1.*t2970*t44773 + t45324 + t45331 + t45356 + t50919 - 1.*t44722*t5551);
  p_output1[105]=-1.*t1429*t51324*t8073 + t8025*(t1429*t51238*t8073 + t1429*t51244*t8073) + t51263*t8839 + t187*t8073*(t25573*t51261 + t51261*t8025 + t51238*t8839 + t51244*t8839);
  p_output1[106]=t51379 + t51670 + t8025*(t51575 + t51576 + t51577 + t51578 - 1.*t36369*t51551*t8073 - 1.*t37050*t51551*t8073) + t187*t8073*(t51610 + t51618 + t51658 + t51660 + t187*t51551*t8025 - 1.*t1429*t51551*t8839);
  p_output1[107]=t51379 + t51670 + t8025*(t51575 + t51577 + t51578 + t51701 - 1.*t36369*t51694*t8073 - 1.*t37050*t51694*t8073) + t187*t8073*(t51610 + t51658 + t51660 + t51705 + t187*t51694*t8025 - 1.*t1429*t51694*t8839);
  p_output1[108]=t8025*(t51756 - 1.*t187*t51795*t8073 + t1429*t51838*t8073) + t187*t8073*(t51850 + t51852 + t51860 + t51862 + t51795*t8025 + t51838*t8839) + t51263*t8977;
  p_output1[109]=t10521*t51263 + t8025*(t51894 - 1.*t187*t51909*t8073 + t1429*t51918*t8073) + t187*t8073*(t10521*t51244 + t26427*t51261 + t51969 + t51973 + t51909*t8025 + t51918*t8839);
  p_output1[110]=t52180*t5920 + t52321*t8839 + (-1.*t25573*t51261 - 1.*t51261*t8025 - 1.*t51238*t8839 - 1.*t51244*t8839)*t8977 + t8025*(t23097*t51261 + t51238*t5920 + t51244*t5920 + t51261*t8977);
  p_output1[111]=t52581 + t52601 + (t52367 + t52370 + t52375 + t52376 - 1.*t187*t51551*t8025 + t1429*t51551*t8839)*t8977 + t8025*(t52384 + t52547 + t52562 + t52565 - 1.*t1429*t51551*t5920 + t187*t51551*t8977);
  p_output1[112]=t52581 + t52601 + (t52367 + t52375 + t52376 + t52622 - 1.*t187*t51694*t8025 + t1429*t51694*t8839)*t8977 + t8025*(t52384 + t52562 + t52565 + t53389 - 1.*t1429*t51694*t5920 + t187*t51694*t8977);
  p_output1[113]=t52180*t7285 + t52321*t8977 + (t53443 + t53445 + t53458 + t53459 - 1.*t51795*t8025 - 1.*t51838*t8839)*t8977 + t8025*(t23536*t51261 + t53412 + t53414 + t51838*t5920 + t51244*t7285 + t51795*t8977);
  p_output1[114]=t10521*t52321 + t52180*t8025 + (-1.*t10521*t51244 - 1.*t26427*t51261 + t53484 + t53492 - 1.*t51909*t8025 - 1.*t51918*t8839)*t8977 + t8025*(t51294 + t51309 + t51310 + t53467 + t51918*t5920 + t51909*t8977);
  p_output1[115]=t53609*t5920 - 1.*t1429*t53634*t8073 + (-1.*t1429*t51238*t8073 - 1.*t1429*t51244*t8073)*t8977 + t187*t8073*(-1.*t23097*t51261 - 1.*t51238*t5920 - 1.*t51244*t5920 - 1.*t51261*t8977);
  p_output1[116]=t53655 + t53717 + (t53668 + t53669 + t53675 + t53677 + t36369*t51551*t8073 + t37050*t51551*t8073)*t8977 + t187*t8073*(t53685 + t53692 + t53705 + t53706 + t1429*t51551*t5920 - 1.*t187*t51551*t8977);
  p_output1[117]=t53655 + t53717 + (t53668 + t53675 + t53677 + t53732 + t36369*t51694*t8073 + t37050*t51694*t8073)*t8977 + t187*t8073*(t53685 + t53705 + t53706 + t53745 + t1429*t51694*t5920 - 1.*t187*t51694*t8977);
  p_output1[118]=t53609*t7285 + (t53763 + t187*t51795*t8073 - 1.*t1429*t51838*t8073)*t8977 + t187*t8073*(-1.*t23536*t51261 + t53781 + t53782 - 1.*t51838*t5920 - 1.*t51244*t7285 - 1.*t51795*t8977);
  p_output1[119]=t53609*t8025 + (t53866 + t187*t51909*t8073 - 1.*t1429*t51918*t8073)*t8977 + t187*t8073*(t52168 + t52173 + t52176 + t54025 - 1.*t51918*t5920 - 1.*t51909*t8977);
  p_output1[120]=t54313 + t19138*(t37751 + t37776 - 1.*t36653*t5082 + t54319) + t19941*(t38366 + t38544 + t36653*t4663 + t54529) + t54661;
  p_output1[121]=t54313 + t19138*(t37751 + t41058 - 1.*t40702*t5082 + t54319) + t19941*(t38366 + t41086 + t40702*t4663 + t54529) + t54661;
  p_output1[122]=t19138*(t41297 - 1.*t42916*t5082) + t12182*t54305 + t19941*(t1726*t41639 + t43679 + t43691 + t42916*t4663 + t54735 + t54742);
  p_output1[123]=t19138*(t44546 - 1.*t44678*t5082) + t22251*t54305 + t19941*(t1726*t44587 + t44854 + t44865 + t28532*t4538 + t44678*t4663 + t29215*t5611);
  p_output1[124]=t12182*(t45528 + t45540 - 1.*t36653*t4663 + t54766) + t54775 + t19138*(t2477*t36653 + t45721 + t45722 + t54777) + t54781;
  p_output1[125]=t12182*(t45528 + t45826 - 1.*t40702*t4663 + t54766) + t54775 + t19138*(t2477*t40702 + t45721 + t45882 + t54777) + t54781;
  p_output1[126]=t16455*t54774 + t12182*t54780 + t19138*(t29215*t4138 + t2477*t42916 + t46011 + t46012 + t54798 + t54799) + t12182*(t46155 + t46177 - 1.*t42916*t4663 + t54806 + t54807 + t54810);
  p_output1[127]=t19138*t54774 + t22251*t54780 + t19138*(t35527 + t2477*t44678 + t46265 + t54578 + t54624 + t54818) + t12182*(t46293 + t46294 - 1.*t44678*t4663 + t54824 + t54825 - 1.*t29215*t5611);
  p_output1[128]=t54835 + t12182*(t46394 + t46407 + t36653*t5082 + t54838) + t19941*(-1.*t2477*t36653 + t46461 + t46470 + t54843) + t54847;
  p_output1[129]=t54835 + t12182*(t46394 + t46905 + t40702*t5082 + t54838) + t19941*(-1.*t2477*t40702 + t46461 + t50350 + t54843) + t54847;
  p_output1[130]=t12182*(t50472 + t42916*t5082) + t16455*t54834 + t19941*(-1.*t28532*t3656 - 1.*t29215*t4138 - 1.*t2477*t42916 + t50825 + t50829 - 1.*t41639*t974);
  p_output1[131]=t12182*(t44678*t5082 + t50872) + t19138*t54834 + t19941*(-1.*t2477*t44678 + t45324 + t50919 + t54770 + t54773 - 1.*t44587*t974);
  p_output1[132]=t54885 + t54902 + t24586*(t51610 + t51618 + t54892 + t51551*t8017) + t24071*(t51575 + t51576 + t54888 - 1.*t51551*t8073);
  p_output1[133]=t54885 + t54902 + t24586*(t51610 + t51705 + t54892 + t51694*t8017) + t24071*(t51575 + t51701 + t54888 - 1.*t51694*t8073);
  p_output1[134]=t22896*t54884 + t24586*(t51850 + t51852 + t54918 + t54921 + t51764*t7612 + t51785*t8017) + t24071*(t51756 - 1.*t51785*t8073);
  p_output1[135]=t25865*t54884 + t24586*(t10278*t51236 + t51969 + t51973 + t51077*t6858 + t51899*t7612 + t51907*t8017) + t24071*(t51894 - 1.*t51907*t8073);
  p_output1[136]=t54947 + t54956 + t24071*(t52384 + t52547 + t54949 + t51551*t5885) + t22896*(t52367 + t52370 + t54940 - 1.*t51551*t8017);
  p_output1[137]=t54947 + t54956 + t24071*(t52384 + t53389 + t54949 + t51694*t5885) + t22896*(t52367 + t52622 + t54940 - 1.*t51694*t8017);
  p_output1[138]=t23352*t54946 + t22896*t54953 + t24071*(t53412 + t53414 + t54971 + t54972 + t51785*t5885 + t51236*t6955) + t22896*(t53443 + t53445 + t54990 + t54991 + t54993 - 1.*t51785*t8017);
  p_output1[139]=t24071*t54946 + t25865*t54953 + t24071*(t51294 + t53467 + t54899 + t54900 + t54999 + t51907*t5885) + t22896*(-1.*t10278*t51236 + t53484 + t53492 + t55005 + t55006 - 1.*t51907*t8017);
  p_output1[140]=t55014 + t55024 + t24586*(t53685 + t53692 + t55020 - 1.*t51551*t5885) + t22896*(t53668 + t53669 + t55016 + t51551*t8073);
  p_output1[141]=t55014 + t55024 + t24586*(t53685 + t53745 + t55020 - 1.*t51694*t5885) + t22896*(t53668 + t53732 + t55016 + t51694*t8073);
  p_output1[142]=t23352*t55013 + t24586*(t53781 + t53782 - 1.*t51764*t5785 - 1.*t51077*t5816 - 1.*t51785*t5885 - 1.*t51236*t6955) + t22896*(t53763 + t51785*t8073);
  p_output1[143]=t24071*t55013 + t24586*(t52168 + t54025 + t54943 + t54944 - 1.*t51899*t5785 - 1.*t51907*t5885) + t22896*(t53866 + t51907*t8073);
  p_output1[144]=t1726*(t1448*t28583 + t1951*t28649 + t1951*t39755 - 1.*t1448*t40593);
  p_output1[145]=t55124*t974;
  p_output1[146]=t4538*t55124;
  p_output1[147]=t1726*(-1.*t1726*t1951*t28583 + t1448*t1726*t28649 + t1448*t1726*t39755 + t1726*t1951*t40593) + (t1951*t28583*t4538 - 1.*t1448*t28649*t4538 - 1.*t1448*t39755*t4538 - 1.*t1951*t40593*t4538)*t974;
  p_output1[148]=t3656*t55150 + (-1.*t1448*t1726*t28583 - 1.*t1726*t1951*t28649 + t54806 + t54807 - 1.*t28532*t4538*t55153 - 1.*t28532*t4538*t55155)*t974 + t55170*t974 + t1726*(t54798 + t54799 + t1726*t28532*t55153 + t1726*t28532*t55155 + t1448*t28583*t974 + t1951*t28649*t974);
  p_output1[149]=t1726*t55150 + t1726*(t1448*t28583*t4538 + t1951*t28649*t4538 + t54578 + t54818 + t1726*t43980*t55153 + t1726*t43980*t55155) + t4538*t55170 + (-1.*t1448*t28583*t3656 - 1.*t1951*t28649*t3656 + t54824 + t54825 - 1.*t43980*t4538*t55153 - 1.*t43980*t4538*t55155)*t974;
  p_output1[150]=(-1.*t1448*t28583 - 1.*t1951*t28649 - 1.*t1951*t39755 + t1448*t40593)*t974;
  p_output1[151]=t3656*t55203;
  p_output1[152]=t1726*t55203;
  p_output1[153]=(-1.*t51210*t5789 + t51692*t5789 - 1.*t51234*t5829 - 1.*t51688*t5829)*t7612;
  p_output1[154]=t55264*t5785;
  p_output1[155]=t55264*t6858;
  p_output1[156]=t5785*(-1.*t51234*t5785*t5789 - 1.*t51688*t5785*t5789 + t51210*t5785*t5829 - 1.*t51692*t5785*t5829) + (t51234*t5789*t5816 + t51688*t5789*t5816 - 1.*t51210*t5816*t5829 + t51692*t5816*t5829)*t7612;
  p_output1[157]=t55430*t5785 + t55407*t5816 + t5785*(t54990 + t54991 - 1.*t51745*t55384*t5785 - 1.*t51745*t55389*t5785 - 1.*t51210*t5789*t5816 - 1.*t51234*t5816*t5829) + (t54971 + t54972 + t51745*t55384*t5816 + t51745*t55389*t5816 + t51210*t5789*t6858 + t51234*t5829*t6858)*t7612;
  p_output1[158]=t55430*t6858 + t55407*t7612 + (t54899 + t54999 + t51210*t5785*t5789 + t51882*t55384*t5816 + t51882*t55389*t5816 + t51234*t5785*t5829)*t7612 + t5785*(t55005 + t55006 - 1.*t51882*t55384*t5785 - 1.*t51882*t55389*t5785 - 1.*t51210*t5789*t7612 - 1.*t51234*t5829*t7612);
  p_output1[159]=t5785*(t51210*t5789 - 1.*t51692*t5789 + t51234*t5829 + t51688*t5829);
  p_output1[160]=t55467*t5816;
  p_output1[161]=t55467*t7612;
  p_output1[162]=t55473;
  p_output1[163]=t55473;
  p_output1[164]=t55475*t5785 + t55484*t5816 + t5785*(t54990 + t54991 - 1.*t51745*t5785 - 1.*t51144*t5816) + (t54971 + t54972 + t51745*t5816 + t51144*t6858)*t7612;
  p_output1[165]=t55475*t6858 + t55484*t7612 + (t54899 + t54999 + t51144*t5785 + t51882*t5816)*t7612 + t5785*(t55005 + t55006 - 1.*t51882*t5785 - 1.*t51144*t7612);
  p_output1[166]=0.28121*t5685 + t51051*t5685 - 0.27*Power(t5685,2);
  p_output1[167]=-0.28121*t5772 - 1.*t51051*t5772 + 0.27*t5685*t5772;
  p_output1[168]=t3656*t55520 + (-1.*t1726*t28576 + t54806 + t54807 + t54824)*t974 + t55527*t974 + t1726*(t54578 + t54798 + t54799 + t28576*t974);
  p_output1[169]=t1726*(t1726*t43980 + t28576*t4538 + t54578 + t54818) + t1726*t55520 + t4538*t55527 + (-1.*t28576*t3656 - 1.*t43980*t4538 + t54824 + t54825)*t974;
  p_output1[170]=t55551;
  p_output1[171]=t55551;
  p_output1[172]=0.28121*t267 - 0.27*Power(t267,2) - 1.*t267*t28355;
  p_output1[173]=-0.28121*t549 + 0.27*t267*t549 + t28355*t549;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance.hh"

namespace SymFunction
{

void J_Je_DiagonalStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
