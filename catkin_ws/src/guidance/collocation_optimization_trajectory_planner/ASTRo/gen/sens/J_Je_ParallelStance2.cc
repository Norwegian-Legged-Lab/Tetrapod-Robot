/*
 * Automatically Generated from Mathematica.
 * Sat 14 May 2022 17:55:13 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t28;
  double t9;
  double t10;
  double t31;
  double t70;
  double t71;
  double t72;
  double t6;
  double t68;
  double t89;
  double t60;
  double t96;
  double t133;
  double t149;
  double t151;
  double t152;
  double t48;
  double t19;
  double t34;
  double t35;
  double t232;
  double t239;
  double t247;
  double t281;
  double t282;
  double t283;
  double t284;
  double t251;
  double t257;
  double t258;
  double t296;
  double t297;
  double t298;
  double t301;
  double t81;
  double t102;
  double t108;
  double t160;
  double t177;
  double t180;
  double t346;
  double t334;
  double t335;
  double t353;
  double t373;
  double t376;
  double t377;
  double t380;
  double t369;
  double t395;
  double t396;
  double t404;
  double t408;
  double t413;
  double t424;
  double t426;
  double t342;
  double t355;
  double t356;
  double t462;
  double t468;
  double t469;
  double t471;
  double t441;
  double t442;
  double t444;
  double t447;
  double t448;
  double t449;
  double t481;
  double t489;
  double t493;
  double t496;
  double t379;
  double t382;
  double t383;
  double t39;
  double t122;
  double t125;
  double t530;
  double t551;
  double t569;
  double t571;
  double t572;
  double t193;
  double t200;
  double t209;
  double t285;
  double t291;
  double t292;
  double t269;
  double t273;
  double t275;
  double t636;
  double t637;
  double t638;
  double t603;
  double t604;
  double t606;
  double t663;
  double t668;
  double t670;
  double t531;
  double t533;
  double t544;
  double t322;
  double t325;
  double t326;
  double t363;
  double t387;
  double t394;
  double t724;
  double t726;
  double t727;
  double t428;
  double t430;
  double t432;
  double t475;
  double t476;
  double t478;
  double t452;
  double t454;
  double t459;
  double t802;
  double t803;
  double t804;
  double t764;
  double t769;
  double t772;
  double t832;
  double t833;
  double t834;
  double t694;
  double t699;
  double t701;
  double t508;
  double t516;
  double t518;
  double t671;
  double t672;
  double t673;
  double t558;
  double t561;
  double t562;
  double t892;
  double t896;
  double t902;
  double t576;
  double t578;
  double t583;
  double t588;
  double t590;
  double t593;
  double t620;
  double t621;
  double t626;
  double t935;
  double t938;
  double t944;
  double t607;
  double t612;
  double t615;
  double t656;
  double t660;
  double t661;
  double t951;
  double t953;
  double t956;
  double t675;
  double t676;
  double t679;
  double t683;
  double t688;
  double t689;
  double t836;
  double t846;
  double t851;
  double t714;
  double t718;
  double t719;
  double t979;
  double t982;
  double t984;
  double t729;
  double t734;
  double t736;
  double t742;
  double t753;
  double t758;
  double t782;
  double t784;
  double t789;
  double t1003;
  double t1008;
  double t1009;
  double t775;
  double t776;
  double t777;
  double t823;
  double t824;
  double t828;
  double t1013;
  double t1016;
  double t1017;
  double t859;
  double t863;
  double t871;
  double t877;
  double t879;
  double t882;
  double t225;
  double t259;
  double t265;
  double t1037;
  double t1041;
  double t1042;
  double t1044;
  double t1046;
  double t1055;
  double t1056;
  double t1057;
  double t1058;
  double t1060;
  double t1062;
  double t1064;
  double t1065;
  double t1078;
  double t1035;
  double t1048;
  double t1050;
  double t1052;
  double t1082;
  double t1084;
  double t1091;
  double t1095;
  double t1099;
  double t1102;
  double t1105;
  double t1107;
  double t1109;
  double t1118;
  double t1125;
  double t1126;
  double t1053;
  double t1115;
  double t1116;
  double t1153;
  double t1156;
  double t1158;
  double t1139;
  double t1143;
  double t1146;
  double t1150;
  double t1152;
  double t1159;
  double t1160;
  double t1226;
  double t1227;
  double t1229;
  double t1207;
  double t1211;
  double t1213;
  double t1215;
  double t1220;
  double t1225;
  double t1237;
  double t1325;
  double t1335;
  double t1343;
  double t1344;
  double t1349;
  double t1352;
  double t1362;
  double t1363;
  double t1244;
  double t1248;
  double t1262;
  double t1378;
  double t1379;
  double t1384;
  double t1282;
  double t1304;
  double t1306;
  double t1320;
  double t1430;
  double t1431;
  double t1437;
  double t1447;
  double t1458;
  double t1460;
  double t1461;
  double t305;
  double t315;
  double t319;
  double t1412;
  double t1417;
  double t1421;
  double t1453;
  double t1463;
  double t1464;
  double t1471;
  double t1474;
  double t1475;
  double t1523;
  double t1527;
  double t1532;
  double t1552;
  double t1553;
  double t1564;
  double t1568;
  double t1569;
  double t320;
  double t330;
  double t333;
  double t1544;
  double t1547;
  double t1548;
  double t1556;
  double t1576;
  double t1579;
  double t1583;
  double t1592;
  double t1593;
  double t1497;
  double t1506;
  double t1510;
  double t1657;
  double t1658;
  double t1667;
  double t1670;
  double t1689;
  double t1711;
  double t1714;
  double t1717;
  double t1733;
  double t1746;
  double t1747;
  double t1771;
  double t1775;
  double t190;
  double t221;
  double t223;
  double t1835;
  double t1836;
  double t1837;
  double t1902;
  double t1905;
  double t1906;
  double t1908;
  double t1933;
  double t1943;
  double t1957;
  double t1963;
  double t1964;
  double t1976;
  double t1990;
  double t1992;
  double t2019;
  double t445;
  double t450;
  double t451;
  double t2157;
  double t2164;
  double t2166;
  double t2167;
  double t2172;
  double t2180;
  double t2181;
  double t2187;
  double t2189;
  double t2191;
  double t2194;
  double t2197;
  double t2198;
  double t2152;
  double t2173;
  double t2175;
  double t2176;
  double t2184;
  double t2201;
  double t2202;
  double t2203;
  double t2209;
  double t2214;
  double t2215;
  double t2216;
  double t2221;
  double t2222;
  double t2223;
  double t2231;
  double t2243;
  double t2244;
  double t2179;
  double t2224;
  double t2226;
  double t2277;
  double t2278;
  double t2279;
  double t2260;
  double t2262;
  double t2264;
  double t2267;
  double t2271;
  double t2284;
  double t2285;
  double t2327;
  double t2343;
  double t2344;
  double t2315;
  double t2317;
  double t2318;
  double t2320;
  double t2326;
  double t2355;
  double t2419;
  double t2420;
  double t2423;
  double t2427;
  double t2433;
  double t2434;
  double t2435;
  double t2363;
  double t2377;
  double t2381;
  double t2440;
  double t2441;
  double t2444;
  double t2405;
  double t2410;
  double t2417;
  double t2465;
  double t2468;
  double t2469;
  double t2475;
  double t2489;
  double t2491;
  double t2493;
  double t2494;
  double t2495;
  double t497;
  double t500;
  double t501;
  double t2479;
  double t2481;
  double t2483;
  double t2492;
  double t2496;
  double t2501;
  double t2511;
  double t2513;
  double t2514;
  double t2547;
  double t2548;
  double t2560;
  double t2562;
  double t2564;
  double t2571;
  double t2579;
  double t2581;
  double t502;
  double t522;
  double t524;
  double t2550;
  double t2554;
  double t2555;
  double t2566;
  double t2586;
  double t2588;
  double t2593;
  double t2596;
  double t2598;
  double t2527;
  double t2534;
  double t2537;
  double t2663;
  double t2665;
  double t2668;
  double t2675;
  double t2707;
  double t2712;
  double t2722;
  double t2724;
  double t2743;
  double t2753;
  double t2754;
  double t2757;
  double t2758;
  double t412;
  double t437;
  double t439;
  double t2823;
  double t2833;
  double t2836;
  double t2916;
  double t2921;
  double t2922;
  double t2925;
  double t2946;
  double t2960;
  double t2978;
  double t2982;
  double t2986;
  double t2995;
  double t3002;
  double t3003;
  double t3009;
  double t1245;
  double t1297;
  double t3125;
  double t3126;
  double t3129;
  double t1387;
  double t3139;
  double t1404;
  double t3154;
  double t3159;
  double t3160;
  double t3161;
  double t3166;
  double t1424;
  double t1485;
  double t1549;
  double t1611;
  double t1617;
  double t1712;
  double t1735;
  double t3207;
  double t3225;
  double t1782;
  double t3273;
  double t3278;
  double t3279;
  double t3282;
  double t3283;
  double t1790;
  double t3289;
  double t3298;
  double t3303;
  double t1805;
  double t1807;
  double t1828;
  double t1851;
  double t1864;
  double t1873;
  double t1961;
  double t1979;
  double t3340;
  double t3348;
  double t3405;
  double t3407;
  double t3414;
  double t2034;
  double t3443;
  double t2051;
  double t3451;
  double t3468;
  double t3480;
  double t2064;
  double t2076;
  double t2077;
  double t2106;
  double t2127;
  double t2362;
  double t2385;
  double t3579;
  double t3584;
  double t3586;
  double t2445;
  double t3590;
  double t2452;
  double t3602;
  double t3616;
  double t3622;
  double t3623;
  double t3624;
  double t2484;
  double t2526;
  double t2557;
  double t2625;
  double t2627;
  double t2715;
  double t2744;
  double t3666;
  double t3673;
  double t2766;
  double t3729;
  double t3749;
  double t3750;
  double t3752;
  double t3754;
  double t2775;
  double t3761;
  double t3764;
  double t3767;
  double t2796;
  double t2797;
  double t2822;
  double t2852;
  double t2865;
  double t2866;
  double t2980;
  double t2998;
  double t3810;
  double t3813;
  double t3856;
  double t3862;
  double t3863;
  double t3021;
  double t3865;
  double t3029;
  double t3874;
  double t3879;
  double t3883;
  double t3039;
  double t3061;
  double t3064;
  double t3091;
  double t3111;
  double t3963;
  double t3964;
  double t3965;
  double t3321;
  double t3329;
  double t4008;
  double t4017;
  double t3342;
  double t3997;
  double t3998;
  double t4003;
  double t3363;
  double t3379;
  double t3380;
  double t4037;
  double t4038;
  double t4045;
  double t4097;
  double t4103;
  double t4105;
  double t4125;
  double t4128;
  double t4131;
  double t3791;
  double t3792;
  double t4185;
  double t4188;
  double t3811;
  double t4207;
  double t4208;
  double t4210;
  double t3830;
  double t4236;
  double t4238;
  double t4244;
  double t3839;
  double t3842;
  double t4308;
  double t4309;
  double t4312;
  double t4316;
  double t4317;
  double t4352;
  double t4353;
  double t4393;
  double t4395;
  double t4397;
  double t4430;
  double t4431;
  double t4435;
  double t4436;
  double t4439;
  double t4454;
  double t4456;
  t28 = Cos(var1[7]);
  t9 = Cos(var1[8]);
  t10 = Sin(var1[7]);
  t31 = Sin(var1[8]);
  t70 = t28*t9;
  t71 = t10*t31;
  t72 = t70 + t71;
  t6 = Cos(var1[4]);
  t68 = Cos(var1[6]);
  t89 = Sin(var1[5]);
  t60 = Cos(var1[5]);
  t96 = Sin(var1[6]);
  t133 = -1.*t68*t89*t72;
  t149 = -1.*t60*t96*t72;
  t151 = t133 + t149;
  t152 = t6*t151;
  t48 = Sin(var1[4]);
  t19 = -1.*t9*t10;
  t34 = t28*t31;
  t35 = t19 + t34;
  t232 = t9*t10;
  t239 = -1.*t28*t31;
  t247 = t232 + t239;
  t281 = -1.*t60*t68;
  t282 = t89*t96;
  t283 = t281 + t282;
  t284 = t6*t283;
  t251 = t60*t68*t247;
  t257 = -1.*t89*t96*t247;
  t258 = t251 + t257;
  t296 = -1.*t68*t89*t247;
  t297 = -1.*t60*t96*t247;
  t298 = t296 + t297;
  t301 = t6*t298;
  t81 = t60*t68*t72;
  t102 = -1.*t89*t96*t72;
  t108 = t81 + t102;
  t160 = -1.*t28*t9;
  t177 = -1.*t10*t31;
  t180 = t160 + t177;
  t346 = Cos(var1[10]);
  t334 = Cos(var1[11]);
  t335 = Sin(var1[10]);
  t353 = Sin(var1[11]);
  t373 = -1.*t346*t334;
  t376 = -1.*t335*t353;
  t377 = t373 + t376;
  t380 = Sin(var1[9]);
  t369 = Cos(var1[9]);
  t395 = -1.*t60*t380*t377;
  t396 = -1.*t369*t377*t89;
  t404 = t395 + t396;
  t408 = t6*t404;
  t413 = t334*t335;
  t424 = -1.*t346*t353;
  t426 = t413 + t424;
  t342 = -1.*t334*t335;
  t355 = t346*t353;
  t356 = t342 + t355;
  t462 = t369*t60;
  t468 = -1.*t380*t89;
  t469 = t462 + t468;
  t471 = t6*t469;
  t441 = t346*t334;
  t442 = t335*t353;
  t444 = t441 + t442;
  t447 = t369*t60*t356;
  t448 = -1.*t380*t356*t89;
  t449 = t447 + t448;
  t481 = -1.*t60*t380*t356;
  t489 = -1.*t369*t356*t89;
  t493 = t481 + t489;
  t496 = t6*t493;
  t379 = t369*t60*t377;
  t382 = -1.*t380*t377*t89;
  t383 = t379 + t382;
  t39 = t6*t35;
  t122 = -1.*t48*t108;
  t125 = t39 + t122;
  t530 = Sin(var1[3]);
  t551 = Cos(var1[3]);
  t569 = t530*t48*t151;
  t571 = t551*t108;
  t572 = t569 + t571;
  t193 = t60*t68*t35;
  t200 = -1.*t89*t96*t35;
  t209 = t193 + t200;
  t285 = t6*t72;
  t291 = -1.*t48*t258;
  t292 = t285 + t291;
  t269 = -1.*t68*t89;
  t273 = -1.*t60*t96;
  t275 = t269 + t273;
  t636 = t551*t275;
  t637 = t530*t48*t283;
  t638 = t636 + t637;
  t603 = t68*t89*t247;
  t604 = t60*t96*t247;
  t606 = t603 + t604;
  t663 = t530*t48*t298;
  t668 = t551*t258;
  t670 = t663 + t668;
  t531 = t68*t89*t72;
  t533 = t60*t96*t72;
  t544 = t531 + t533;
  t322 = t60*t68*t180;
  t325 = -1.*t89*t96*t180;
  t326 = t322 + t325;
  t363 = t6*t356;
  t387 = -1.*t48*t383;
  t394 = t363 + t387;
  t724 = t530*t48*t404;
  t726 = t551*t383;
  t727 = t724 + t726;
  t428 = t369*t60*t426;
  t430 = -1.*t380*t426*t89;
  t432 = t428 + t430;
  t475 = t6*t444;
  t476 = -1.*t48*t449;
  t478 = t475 + t476;
  t452 = t60*t380;
  t454 = t369*t89;
  t459 = t452 + t454;
  t802 = t551*t459;
  t803 = t530*t48*t469;
  t804 = t802 + t803;
  t764 = t60*t380*t356;
  t769 = t369*t356*t89;
  t772 = t764 + t769;
  t832 = t530*t48*t493;
  t833 = t551*t449;
  t834 = t832 + t833;
  t694 = t60*t380*t377;
  t699 = t369*t377*t89;
  t701 = t694 + t699;
  t508 = t369*t60*t444;
  t516 = -1.*t380*t444*t89;
  t518 = t508 + t516;
  t671 = t551*t544;
  t672 = -1.*t530*t125;
  t673 = t671 + t672;
  t558 = -1.*t48*t35;
  t561 = -1.*t6*t108;
  t562 = t558 + t561;
  t892 = -1.*t551*t48*t151;
  t896 = t530*t108;
  t902 = t892 + t896;
  t576 = t68*t89*t35;
  t578 = t60*t96*t35;
  t583 = t576 + t578;
  t588 = t6*t180;
  t590 = -1.*t48*t209;
  t593 = t588 + t590;
  t620 = t60*t68;
  t621 = -1.*t89*t96;
  t626 = t620 + t621;
  t935 = t530*t275;
  t938 = -1.*t551*t48*t283;
  t944 = t935 + t938;
  t607 = t551*t606;
  t612 = -1.*t530*t292;
  t615 = t607 + t612;
  t656 = -1.*t48*t72;
  t660 = -1.*t6*t258;
  t661 = t656 + t660;
  t951 = -1.*t551*t48*t298;
  t953 = t530*t258;
  t956 = t951 + t953;
  t675 = t68*t89*t180;
  t676 = t60*t96*t180;
  t679 = t675 + t676;
  t683 = t6*t247;
  t688 = -1.*t48*t326;
  t689 = t683 + t688;
  t836 = t551*t701;
  t846 = -1.*t530*t394;
  t851 = t836 + t846;
  t714 = -1.*t356*t48;
  t718 = -1.*t6*t383;
  t719 = t714 + t718;
  t979 = -1.*t551*t48*t404;
  t982 = t530*t383;
  t984 = t979 + t982;
  t729 = t60*t380*t426;
  t734 = t369*t426*t89;
  t736 = t729 + t734;
  t742 = t6*t377;
  t753 = -1.*t48*t432;
  t758 = t742 + t753;
  t782 = -1.*t369*t60;
  t784 = t380*t89;
  t789 = t782 + t784;
  t1003 = t530*t459;
  t1008 = -1.*t551*t48*t469;
  t1009 = t1003 + t1008;
  t775 = t551*t772;
  t776 = -1.*t530*t478;
  t777 = t775 + t776;
  t823 = -1.*t444*t48;
  t824 = -1.*t6*t449;
  t828 = t823 + t824;
  t1013 = -1.*t551*t48*t493;
  t1016 = t530*t449;
  t1017 = t1013 + t1016;
  t859 = t60*t380*t444;
  t863 = t369*t444*t89;
  t871 = t859 + t863;
  t877 = t6*t426;
  t879 = -1.*t48*t518;
  t882 = t877 + t879;
  t225 = t48*t72;
  t259 = t6*t258;
  t265 = t225 + t259;
  t1037 = -1.*t9;
  t1041 = 1. + t1037;
  t1042 = 0.50321*t1041;
  t1044 = 0.23321*t9;
  t1046 = t1042 + t1044;
  t1055 = -1.*t68;
  t1056 = 1. + t1055;
  t1057 = 0.15121*t1056;
  t1058 = -1.*t28;
  t1060 = 1. + t1058;
  t1062 = 0.28121*t1060;
  t1064 = t28*t1046;
  t1065 = -0.27*t10*t31;
  t1078 = t1062 + t1064 + t1065;
  t1035 = 0.28121*t10;
  t1048 = -1.*t1046*t10;
  t1050 = -0.27*t28*t31;
  t1052 = t1035 + t1048 + t1050;
  t1082 = t68*t1078;
  t1084 = t1057 + t1082;
  t1091 = t60*t1084;
  t1095 = 0.15121*t68;
  t1099 = -0.15121*t96;
  t1102 = t96*t1078;
  t1105 = t1057 + t1095 + t1099 + t1102;
  t1107 = -1.*t89*t1105;
  t1109 = t1091 + t1107;
  t1118 = t48*t1052;
  t1125 = t6*t1109;
  t1126 = t1118 + t1125;
  t1053 = -1.*t48*t1052;
  t1115 = -1.*t6*t1109;
  t1116 = t1053 + t1115;
  t1153 = t6*t1052;
  t1156 = -1.*t48*t1109;
  t1158 = t1153 + t1156;
  t1139 = t89*t1084;
  t1143 = t60*t1105;
  t1146 = t1139 + t1143;
  t1150 = -1.*t626*t1146;
  t1152 = -1.*t6*t275*t1126;
  t1159 = t48*t275*t1158;
  t1160 = t1150 + t1152 + t1159;
  t1226 = -1.*t89*t1084;
  t1227 = -1.*t60*t1105;
  t1229 = t1226 + t1227;
  t1207 = t606*t1146;
  t1211 = t265*t1126;
  t1213 = t292*t1158;
  t1215 = t1207 + t1211 + t1213;
  t1220 = t6*t298*t1160;
  t1225 = Power(t6,2);
  t1237 = Power(t48,2);
  t1325 = -0.15121*t68;
  t1335 = t1325 + t1082;
  t1343 = -1.*t89*t1335;
  t1344 = 0.15121*t96;
  t1349 = -1.*t96*t1078;
  t1352 = t1344 + t1349;
  t1362 = t60*t1352;
  t1363 = t1343 + t1362;
  t1244 = -1.*t275*t1146;
  t1248 = -1.*t6*t283*t1126;
  t1262 = t48*t283*t1158;
  t1378 = t60*t1335;
  t1379 = t89*t1352;
  t1384 = t1378 + t1379;
  t1282 = t258*t1146;
  t1304 = t6*t298*t1126;
  t1306 = -1.*t48*t298*t1158;
  t1320 = t6*t283*t1215;
  t1430 = 0.28121*t28;
  t1431 = -1.*t28*t1046;
  t1437 = 0.27*t10*t31;
  t1447 = t1430 + t1431 + t1437;
  t1458 = t60*t68*t1052;
  t1460 = -1.*t89*t96*t1052;
  t1461 = t1458 + t1460;
  t305 = t48*t35;
  t315 = t6*t108;
  t319 = t305 + t315;
  t1412 = t68*t89*t1052;
  t1417 = t60*t96*t1052;
  t1421 = t1412 + t1417;
  t1453 = t48*t1447;
  t1463 = t6*t1461;
  t1464 = t1453 + t1463;
  t1471 = t6*t1447;
  t1474 = -1.*t48*t1461;
  t1475 = t1471 + t1474;
  t1523 = -0.27*t9*t10;
  t1527 = 0.27*t28*t31;
  t1532 = t1523 + t1527;
  t1552 = -0.27*t28*t9;
  t1553 = t1552 + t1065;
  t1564 = t60*t68*t1532;
  t1568 = -1.*t89*t96*t1532;
  t1569 = t1564 + t1568;
  t320 = t48*t247;
  t330 = t6*t326;
  t333 = t320 + t330;
  t1544 = t68*t89*t1532;
  t1547 = t60*t96*t1532;
  t1548 = t1544 + t1547;
  t1556 = t48*t1553;
  t1576 = t6*t1569;
  t1579 = t1556 + t1576;
  t1583 = t6*t1553;
  t1592 = -1.*t48*t1569;
  t1593 = t1583 + t1592;
  t1497 = t544*t1146;
  t1506 = t319*t1126;
  t1510 = t125*t1158;
  t1657 = -1.*t606*t1146;
  t1658 = -1.*t265*t1126;
  t1667 = -1.*t292*t1158;
  t1670 = t1657 + t1658 + t1667;
  t1689 = t1497 + t1506 + t1510;
  t1711 = -1.*t258*t1146;
  t1714 = -1.*t6*t298*t1126;
  t1717 = t48*t298*t1158;
  t1733 = t108*t1146;
  t1746 = t6*t151*t1126;
  t1747 = -1.*t48*t151*t1158;
  t1771 = t6*t151*t1670;
  t1775 = t6*t298*t1689;
  t190 = t48*t180;
  t221 = t6*t209;
  t223 = t190 + t221;
  t1835 = -1.*t544*t1146;
  t1836 = -1.*t319*t1126;
  t1837 = -1.*t125*t1158;
  t1902 = t626*t1146;
  t1905 = t6*t275*t1126;
  t1906 = -1.*t48*t275*t1158;
  t1908 = t1902 + t1905 + t1906;
  t1933 = t1835 + t1836 + t1837;
  t1943 = t6*t151*t1908;
  t1957 = t275*t1146;
  t1963 = t6*t283*t1126;
  t1964 = -1.*t48*t283*t1158;
  t1976 = -1.*t108*t1146;
  t1990 = -1.*t6*t151*t1126;
  t1992 = t48*t151*t1158;
  t2019 = t6*t283*t1933;
  t445 = t444*t48;
  t450 = t6*t449;
  t451 = t445 + t450;
  t2157 = -1.*t334;
  t2164 = 1. + t2157;
  t2166 = -0.50321*t2164;
  t2167 = -0.23321*t334;
  t2172 = t2166 + t2167;
  t2180 = -1.*t369;
  t2181 = 1. + t2180;
  t2187 = -1.*t346;
  t2189 = 1. + t2187;
  t2191 = -0.28121*t2189;
  t2194 = t346*t2172;
  t2197 = 0.27*t335*t353;
  t2198 = t2191 + t2194 + t2197;
  t2152 = 0.28121*t335;
  t2173 = t2172*t335;
  t2175 = -0.27*t346*t353;
  t2176 = t2152 + t2173 + t2175;
  t2184 = -0.15121*t2181;
  t2201 = t369*t2198;
  t2202 = t2184 + t2201;
  t2203 = t60*t2202;
  t2209 = 0.15121*t2181;
  t2214 = 0.15121*t369;
  t2215 = 0.15121*t380;
  t2216 = t380*t2198;
  t2221 = t2209 + t2214 + t2215 + t2216;
  t2222 = -1.*t2221*t89;
  t2223 = t2203 + t2222;
  t2231 = t2176*t48;
  t2243 = t6*t2223;
  t2244 = t2231 + t2243;
  t2179 = -1.*t2176*t48;
  t2224 = -1.*t6*t2223;
  t2226 = t2179 + t2224;
  t2277 = t6*t2176;
  t2278 = -1.*t48*t2223;
  t2279 = t2277 + t2278;
  t2260 = t60*t2221;
  t2262 = t2202*t89;
  t2264 = t2260 + t2262;
  t2267 = -1.*t789*t2264;
  t2271 = -1.*t6*t459*t2244;
  t2284 = t48*t459*t2279;
  t2285 = t2267 + t2271 + t2284;
  t2327 = -1.*t60*t2221;
  t2343 = -1.*t2202*t89;
  t2344 = t2327 + t2343;
  t2315 = t772*t2264;
  t2317 = t451*t2244;
  t2318 = t478*t2279;
  t2320 = t2315 + t2317 + t2318;
  t2326 = t6*t493*t2285;
  t2355 = -1.*t459*t2264;
  t2419 = -0.15121*t380;
  t2420 = -1.*t380*t2198;
  t2423 = t2419 + t2420;
  t2427 = t60*t2423;
  t2433 = t2214 + t2201;
  t2434 = -1.*t2433*t89;
  t2435 = t2427 + t2434;
  t2363 = -1.*t6*t469*t2244;
  t2377 = t48*t469*t2279;
  t2381 = t449*t2264;
  t2440 = t60*t2433;
  t2441 = t2423*t89;
  t2444 = t2440 + t2441;
  t2405 = t6*t493*t2244;
  t2410 = -1.*t48*t493*t2279;
  t2417 = t6*t469*t2320;
  t2465 = -0.28121*t335;
  t2468 = -1.*t2172*t335;
  t2469 = 0.27*t346*t353;
  t2475 = t2465 + t2468 + t2469;
  t2489 = 0.28121*t346;
  t2491 = t2489 + t2194 + t2197;
  t2493 = t369*t60*t2475;
  t2494 = -1.*t380*t2475*t89;
  t2495 = t2493 + t2494;
  t497 = t356*t48;
  t500 = t6*t383;
  t501 = t497 + t500;
  t2479 = t60*t380*t2475;
  t2481 = t369*t2475*t89;
  t2483 = t2479 + t2481;
  t2492 = t2491*t48;
  t2496 = t6*t2495;
  t2501 = t2492 + t2496;
  t2511 = t6*t2491;
  t2513 = -1.*t48*t2495;
  t2514 = t2511 + t2513;
  t2547 = 0.27*t334*t335;
  t2548 = t2547 + t2175;
  t2560 = -0.27*t346*t334;
  t2562 = -0.27*t335*t353;
  t2564 = t2560 + t2562;
  t2571 = t369*t60*t2548;
  t2579 = -1.*t380*t2548*t89;
  t2581 = t2571 + t2579;
  t502 = t426*t48;
  t522 = t6*t518;
  t524 = t502 + t522;
  t2550 = t60*t380*t2548;
  t2554 = t369*t2548*t89;
  t2555 = t2550 + t2554;
  t2566 = t2564*t48;
  t2586 = t6*t2581;
  t2588 = t2566 + t2586;
  t2593 = t6*t2564;
  t2596 = -1.*t48*t2581;
  t2598 = t2593 + t2596;
  t2527 = t701*t2264;
  t2534 = t501*t2244;
  t2537 = t394*t2279;
  t2663 = -1.*t772*t2264;
  t2665 = -1.*t451*t2244;
  t2668 = -1.*t478*t2279;
  t2675 = t2663 + t2665 + t2668;
  t2707 = t2527 + t2534 + t2537;
  t2712 = -1.*t449*t2264;
  t2722 = -1.*t6*t493*t2244;
  t2724 = t48*t493*t2279;
  t2743 = t383*t2264;
  t2753 = t6*t404*t2244;
  t2754 = -1.*t48*t404*t2279;
  t2757 = t6*t404*t2675;
  t2758 = t6*t493*t2707;
  t412 = t377*t48;
  t437 = t6*t432;
  t439 = t412 + t437;
  t2823 = -1.*t701*t2264;
  t2833 = -1.*t501*t2244;
  t2836 = -1.*t394*t2279;
  t2916 = t789*t2264;
  t2921 = t6*t459*t2244;
  t2922 = -1.*t48*t459*t2279;
  t2925 = t2916 + t2921 + t2922;
  t2946 = t2823 + t2833 + t2836;
  t2960 = t6*t404*t2925;
  t2978 = t459*t2264;
  t2982 = t6*t469*t2244;
  t2986 = -1.*t48*t469*t2279;
  t2995 = -1.*t383*t2264;
  t3002 = -1.*t6*t404*t2244;
  t3003 = t48*t404*t2279;
  t3009 = t6*t469*t2946;
  t1245 = -1.*t626*t1109;
  t1297 = t606*t1109;
  t3125 = -1.*t275*t1109;
  t3126 = t1150 + t3125;
  t3129 = t258*t3126;
  t1387 = -1.*t626*t1384;
  t3139 = -1.*t283*t1109;
  t1404 = t606*t1384;
  t3154 = t298*t1109;
  t3159 = t1052*t72;
  t3160 = t258*t1109;
  t3161 = t3159 + t1207 + t3160;
  t3166 = t275*t3161;
  t1424 = -1.*t626*t1421;
  t1485 = t606*t1421;
  t1549 = -1.*t626*t1548;
  t1611 = t606*t1548;
  t1617 = t679*t1146;
  t1712 = -1.*t606*t1109;
  t1735 = t544*t1109;
  t3207 = t1052*t35;
  t3225 = t108*t1109;
  t1782 = -1.*t606*t1384;
  t3273 = -1.*t298*t1109;
  t3278 = -1.*t1052*t72;
  t3279 = -1.*t258*t1109;
  t3282 = t3278 + t1657 + t3279;
  t3283 = t108*t3282;
  t1790 = t544*t1384;
  t3289 = t151*t1109;
  t3298 = t3207 + t1497 + t3225;
  t3303 = t258*t3298;
  t1805 = t1421*t544;
  t1807 = t583*t1146;
  t1828 = -1.*t606*t1421;
  t1851 = t1548*t544;
  t1864 = -1.*t606*t1548;
  t1873 = -1.*t679*t1146;
  t1961 = t626*t1109;
  t1979 = -1.*t544*t1109;
  t3340 = -1.*t1052*t35;
  t3348 = -1.*t108*t1109;
  t3405 = t275*t1109;
  t3407 = t1902 + t3405;
  t3414 = t108*t3407;
  t2034 = t626*t1384;
  t3443 = t283*t1109;
  t2051 = -1.*t544*t1384;
  t3451 = -1.*t151*t1109;
  t3468 = t3340 + t1835 + t3348;
  t3480 = t275*t3468;
  t2064 = t626*t1421;
  t2076 = -1.*t1421*t544;
  t2077 = -1.*t583*t1146;
  t2106 = t626*t1548;
  t2127 = -1.*t1548*t544;
  t2362 = -1.*t789*t2223;
  t2385 = t772*t2223;
  t3579 = -1.*t459*t2223;
  t3584 = t2267 + t3579;
  t3586 = t449*t3584;
  t2445 = -1.*t789*t2444;
  t3590 = -1.*t469*t2223;
  t2452 = t772*t2444;
  t3602 = t493*t2223;
  t3616 = t2176*t444;
  t3622 = t449*t2223;
  t3623 = t3616 + t2315 + t3622;
  t3624 = t459*t3623;
  t2484 = -1.*t789*t2483;
  t2526 = t2483*t772;
  t2557 = -1.*t789*t2555;
  t2625 = t2555*t772;
  t2627 = t871*t2264;
  t2715 = -1.*t772*t2223;
  t2744 = t701*t2223;
  t3666 = t2176*t356;
  t3673 = t383*t2223;
  t2766 = -1.*t772*t2444;
  t3729 = -1.*t493*t2223;
  t3749 = -1.*t2176*t444;
  t3750 = -1.*t449*t2223;
  t3752 = t3749 + t2663 + t3750;
  t3754 = t383*t3752;
  t2775 = t701*t2444;
  t3761 = t404*t2223;
  t3764 = t3666 + t2527 + t3673;
  t3767 = t449*t3764;
  t2796 = t2483*t701;
  t2797 = t736*t2264;
  t2822 = -1.*t2483*t772;
  t2852 = t2555*t701;
  t2865 = -1.*t2555*t772;
  t2866 = -1.*t871*t2264;
  t2980 = t789*t2223;
  t2998 = -1.*t701*t2223;
  t3810 = -1.*t2176*t356;
  t3813 = -1.*t383*t2223;
  t3856 = t459*t2223;
  t3862 = t2916 + t3856;
  t3863 = t383*t3862;
  t3021 = t789*t2444;
  t3865 = t469*t2223;
  t3029 = -1.*t701*t2444;
  t3874 = -1.*t404*t2223;
  t3879 = t3810 + t2823 + t3813;
  t3883 = t459*t3879;
  t3039 = t789*t2483;
  t3061 = -1.*t2483*t701;
  t3064 = -1.*t736*t2264;
  t3091 = t789*t2555;
  t3111 = -1.*t2555*t701;
  t3963 = t96*t1084;
  t3964 = -1.*t68*t1105;
  t3965 = t3963 + t3964;
  t3321 = t1052*t180;
  t3329 = t35*t1447;
  t4008 = Power(t68,2);
  t4017 = Power(t96,2);
  t3342 = -1.*t1447*t72;
  t3997 = -1.*t68*t247*t1084;
  t3998 = -1.*t96*t247*t1105;
  t4003 = t3278 + t3997 + t3998;
  t3363 = t35*t1553;
  t3379 = -1.*t247*t1052;
  t3380 = -1.*t1553*t72;
  t4037 = t68*t72*t1084;
  t4038 = t96*t72*t1105;
  t4045 = t3207 + t4037 + t4038;
  t4097 = -1.*t96*t1084;
  t4103 = t68*t1105;
  t4105 = t4097 + t4103;
  t4125 = -1.*t380*t2202;
  t4128 = t369*t2221;
  t4131 = t4125 + t4128;
  t3791 = t2176*t377;
  t3792 = t356*t2491;
  t4185 = Power(t369,2);
  t4188 = Power(t380,2);
  t3811 = -1.*t2491*t444;
  t4207 = -1.*t369*t356*t2202;
  t4208 = -1.*t380*t356*t2221;
  t4210 = t3749 + t4207 + t4208;
  t3830 = t356*t2564;
  t4236 = t369*t377*t2202;
  t4238 = t380*t377*t2221;
  t4244 = t3666 + t4236 + t4238;
  t3839 = -1.*t426*t2176;
  t3842 = -1.*t2564*t444;
  t4308 = t380*t2202;
  t4309 = -1.*t369*t2221;
  t4312 = t4308 + t4309;
  t4316 = -1.*t247*t1078;
  t4317 = t4316 + t3278;
  t4352 = t1078*t72;
  t4353 = t3207 + t4352;
  t4393 = 0.15121*t180;
  t4395 = 0.15121*t72;
  t4397 = t4393 + t4395;
  t4430 = 0.15121*t426;
  t4431 = 0.15121*t356;
  t4435 = t4430 + t4431;
  t4436 = t377*t2198;
  t4439 = t3666 + t4436;
  t4454 = -1.*t356*t2198;
  t4456 = t4454 + t3749;
  p_output1[0]=t125;
  p_output1[1]=t152;
  p_output1[2]=t152;
  p_output1[3]=t223;
  p_output1[4]=t265;
  p_output1[5]=-1.*t275*t48;
  p_output1[6]=t284;
  p_output1[7]=t284;
  p_output1[8]=t292;
  p_output1[9]=t301;
  p_output1[10]=t301;
  p_output1[11]=t319;
  p_output1[12]=t333;
  p_output1[13]=t394;
  p_output1[14]=t408;
  p_output1[15]=t408;
  p_output1[16]=t439;
  p_output1[17]=t451;
  p_output1[18]=-1.*t459*t48;
  p_output1[19]=t471;
  p_output1[20]=t471;
  p_output1[21]=t478;
  p_output1[22]=t496;
  p_output1[23]=t496;
  p_output1[24]=t501;
  p_output1[25]=t524;
  p_output1[26]=-1.*t530*t544 - 1.*t125*t551;
  p_output1[27]=-1.*t530*t562;
  p_output1[28]=t572;
  p_output1[29]=t572;
  p_output1[30]=t551*t583 - 1.*t530*t593;
  p_output1[31]=t615;
  p_output1[32]=t275*t48*t551 - 1.*t530*t626;
  p_output1[33]=t275*t530*t6;
  p_output1[34]=t638;
  p_output1[35]=t638;
  p_output1[36]=-1.*t292*t551 - 1.*t530*t606;
  p_output1[37]=-1.*t530*t661;
  p_output1[38]=t670;
  p_output1[39]=t670;
  p_output1[40]=t673;
  p_output1[41]=t551*t679 - 1.*t530*t689;
  p_output1[42]=-1.*t394*t551 - 1.*t530*t701;
  p_output1[43]=-1.*t530*t719;
  p_output1[44]=t727;
  p_output1[45]=t727;
  p_output1[46]=t551*t736 - 1.*t530*t758;
  p_output1[47]=t777;
  p_output1[48]=t459*t48*t551 - 1.*t530*t789;
  p_output1[49]=t459*t530*t6;
  p_output1[50]=t804;
  p_output1[51]=t804;
  p_output1[52]=-1.*t478*t551 - 1.*t530*t772;
  p_output1[53]=-1.*t530*t828;
  p_output1[54]=t834;
  p_output1[55]=t834;
  p_output1[56]=t851;
  p_output1[57]=t551*t871 - 1.*t530*t882;
  p_output1[58]=t673;
  p_output1[59]=t551*t562;
  p_output1[60]=t902;
  p_output1[61]=t902;
  p_output1[62]=t530*t583 + t551*t593;
  p_output1[63]=t292*t551 + t530*t606;
  p_output1[64]=t275*t48*t530 + t551*t626;
  p_output1[65]=-1.*t275*t551*t6;
  p_output1[66]=t944;
  p_output1[67]=t944;
  p_output1[68]=t615;
  p_output1[69]=t551*t661;
  p_output1[70]=t956;
  p_output1[71]=t956;
  p_output1[72]=t530*t544 + t125*t551;
  p_output1[73]=t530*t679 + t551*t689;
  p_output1[74]=t851;
  p_output1[75]=t551*t719;
  p_output1[76]=t984;
  p_output1[77]=t984;
  p_output1[78]=t530*t736 + t551*t758;
  p_output1[79]=t478*t551 + t530*t772;
  p_output1[80]=t459*t48*t530 + t551*t789;
  p_output1[81]=-1.*t459*t551*t6;
  p_output1[82]=t1009;
  p_output1[83]=t1009;
  p_output1[84]=t777;
  p_output1[85]=t551*t828;
  p_output1[86]=t1017;
  p_output1[87]=t1017;
  p_output1[88]=t394*t551 + t530*t701;
  p_output1[89]=t530*t871 + t551*t882;
  p_output1[90]=t1160*t292 - 1.*t1215*t275*t48 + t265*(t1116*t275*t48 + t1126*t275*t48) + t275*t6*(t1158*t265 + t1116*t292 + t1126*t292 + t1158*t661);
  p_output1[91]=t1220 + t1320 + t265*(t1244 + t1245 + t1248 + t1262 - 1.*t1225*t1229*t275 - 1.*t1229*t1237*t275) + t275*t6*(t1282 + t1297 + t1304 + t1306 - 1.*t1229*t292*t48 + t1229*t265*t6);
  p_output1[92]=t1220 + t1320 + t265*(t1244 + t1248 + t1262 + t1387 - 1.*t1225*t1363*t275 - 1.*t1237*t1363*t275) + t275*t6*(t1282 + t1304 + t1306 + t1404 - 1.*t1363*t292*t48 + t1363*t265*t6);
  p_output1[93]=t1160*t319 + t275*(t1485 + t1497 + t1506 + t1510 + t1464*t265 + t1475*t292)*t6 + t265*(t1424 + t1475*t275*t48 - 1.*t1464*t275*t6);
  p_output1[94]=t1160*t333 + t265*(t1549 + t1593*t275*t48 - 1.*t1579*t275*t6) + t275*t6*(t1611 + t1617 + t1579*t265 + t1593*t292 + t1126*t333 + t1158*t689);
  p_output1[95]=t125*t1670 + t1689*t292 + t265*(t1116*t125 + t1126*t125 + t1158*t319 + t1158*t562) + t319*(-1.*t1158*t265 - 1.*t1116*t292 - 1.*t1126*t292 - 1.*t1158*t661);
  p_output1[96]=t1771 + t1775 + t319*(t1711 + t1712 + t1714 + t1717 + t1229*t292*t48 - 1.*t1229*t265*t6) + t265*(t1733 + t1735 + t1746 + t1747 - 1.*t1229*t125*t48 + t1229*t319*t6);
  p_output1[97]=t1771 + t1775 + t319*(t1711 + t1714 + t1717 + t1782 + t1363*t292*t48 - 1.*t1363*t265*t6) + t265*(t1733 + t1746 + t1747 + t1790 - 1.*t125*t1363*t48 + t1363*t319*t6);
  p_output1[98]=t1670*t223 + t1689*t319 + (t1828 + t1835 + t1836 + t1837 - 1.*t1464*t265 - 1.*t1475*t292)*t319 + t265*(t125*t1475 + t1805 + t1807 + t1126*t223 + t1464*t319 + t1158*t593);
  p_output1[99]=t1670*t265 + t265*(t1207 + t1211 + t1213 + t125*t1593 + t1851 + t1579*t319) + t1689*t333 + t319*(t1864 + t1873 - 1.*t1579*t265 - 1.*t1593*t292 - 1.*t1126*t333 - 1.*t1158*t689);
  p_output1[100]=t125*t1908 - 1.*t1933*t275*t48 + t319*(-1.*t1116*t275*t48 - 1.*t1126*t275*t48) + t275*(-1.*t1116*t125 - 1.*t1126*t125 - 1.*t1158*t319 - 1.*t1158*t562)*t6;
  p_output1[101]=t1943 + t2019 + (t1957 + t1961 + t1963 + t1964 + t1225*t1229*t275 + t1229*t1237*t275)*t319 + t275*t6*(t1976 + t1979 + t1990 + t1992 + t1229*t125*t48 - 1.*t1229*t319*t6);
  p_output1[102]=t1943 + t2019 + (t1957 + t1963 + t1964 + t2034 + t1225*t1363*t275 + t1237*t1363*t275)*t319 + t275*t6*(t1976 + t1990 + t1992 + t2051 + t125*t1363*t48 - 1.*t1363*t319*t6);
  p_output1[103]=t1908*t223 + t275*(-1.*t125*t1475 + t2076 + t2077 - 1.*t1126*t223 - 1.*t1464*t319 - 1.*t1158*t593)*t6 + t319*(t2064 - 1.*t1475*t275*t48 + t1464*t275*t6);
  p_output1[104]=t1908*t265 + t275*(-1.*t125*t1593 + t1657 + t1658 + t1667 + t2127 - 1.*t1579*t319)*t6 + t319*(t2106 - 1.*t1593*t275*t48 + t1579*t275*t6);
  p_output1[105]=t2285*t478 - 1.*t2320*t459*t48 + t451*(t2226*t459*t48 + t2244*t459*t48) + t459*t6*(t2279*t451 + t2226*t478 + t2244*t478 + t2279*t828);
  p_output1[106]=t2326 + t2417 + t451*(t2355 + t2362 + t2363 + t2377 - 1.*t1225*t2344*t459 - 1.*t1237*t2344*t459) + t459*t6*(t2381 + t2385 + t2405 + t2410 - 1.*t2344*t478*t48 + t2344*t451*t6);
  p_output1[107]=t2326 + t2417 + t451*(t2355 + t2363 + t2377 + t2445 - 1.*t1225*t2435*t459 - 1.*t1237*t2435*t459) + t459*t6*(t2381 + t2405 + t2410 + t2452 - 1.*t2435*t478*t48 + t2435*t451*t6);
  p_output1[108]=t2285*t501 + t459*(t2526 + t2527 + t2534 + t2537 + t2501*t451 + t2514*t478)*t6 + t451*(t2484 + t2514*t459*t48 - 1.*t2501*t459*t6);
  p_output1[109]=t2285*t524 + t451*(t2557 + t2598*t459*t48 - 1.*t2588*t459*t6) + t459*t6*(t2625 + t2627 + t2588*t451 + t2598*t478 + t2244*t524 + t2279*t882);
  p_output1[110]=t2675*t394 + t2707*t478 + t451*(t2226*t394 + t2244*t394 + t2279*t501 + t2279*t719) + t501*(-1.*t2279*t451 - 1.*t2226*t478 - 1.*t2244*t478 - 1.*t2279*t828);
  p_output1[111]=t2757 + t2758 + t501*(t2712 + t2715 + t2722 + t2724 + t2344*t478*t48 - 1.*t2344*t451*t6) + t451*(t2743 + t2744 + t2753 + t2754 - 1.*t2344*t394*t48 + t2344*t501*t6);
  p_output1[112]=t2757 + t2758 + t501*(t2712 + t2722 + t2724 + t2766 + t2435*t478*t48 - 1.*t2435*t451*t6) + t451*(t2743 + t2753 + t2754 + t2775 - 1.*t2435*t394*t48 + t2435*t501*t6);
  p_output1[113]=t2675*t439 + t2707*t501 + (t2822 + t2823 + t2833 + t2836 - 1.*t2501*t451 - 1.*t2514*t478)*t501 + t451*(t2796 + t2797 + t2514*t394 + t2244*t439 + t2501*t501 + t2279*t758);
  p_output1[114]=t2675*t451 + t451*(t2315 + t2317 + t2318 + t2852 + t2598*t394 + t2588*t501) + t2707*t524 + t501*(t2865 + t2866 - 1.*t2588*t451 - 1.*t2598*t478 - 1.*t2244*t524 - 1.*t2279*t882);
  p_output1[115]=t2925*t394 - 1.*t2946*t459*t48 + (-1.*t2226*t459*t48 - 1.*t2244*t459*t48)*t501 + t459*t6*(-1.*t2226*t394 - 1.*t2244*t394 - 1.*t2279*t501 - 1.*t2279*t719);
  p_output1[116]=t2960 + t3009 + (t2978 + t2980 + t2982 + t2986 + t1225*t2344*t459 + t1237*t2344*t459)*t501 + t459*t6*(t2995 + t2998 + t3002 + t3003 + t2344*t394*t48 - 1.*t2344*t501*t6);
  p_output1[117]=t2960 + t3009 + (t2978 + t2982 + t2986 + t3021 + t1225*t2435*t459 + t1237*t2435*t459)*t501 + t459*t6*(t2995 + t3002 + t3003 + t3029 + t2435*t394*t48 - 1.*t2435*t501*t6);
  p_output1[118]=t2925*t439 + t501*(t3039 - 1.*t2514*t459*t48 + t2501*t459*t6) + t459*t6*(t3061 + t3064 - 1.*t2514*t394 - 1.*t2244*t439 - 1.*t2501*t501 - 1.*t2279*t758);
  p_output1[119]=t2925*t451 + t459*(t2663 + t2665 + t2668 + t3111 - 1.*t2598*t394 - 1.*t2588*t501)*t6 + t501*(t3091 - 1.*t2598*t459*t48 + t2588*t459*t6);
  p_output1[120]=t3129 + t3166 + (t1244 + t1245 - 1.*t1229*t275 + t3139)*t606 + (t1282 + t1297 + t1229*t258 + t3154)*t626;
  p_output1[121]=t3129 + t3166 + (t1244 + t1387 - 1.*t1363*t275 + t3139)*t606 + (t1282 + t1404 + t1363*t258 + t3154)*t626;
  p_output1[122]=t3126*t544 + (t1424 - 1.*t1461*t275)*t606 + t626*(t1485 + t1497 + t1461*t258 + t3207 + t3225 + t1447*t72);
  p_output1[123]=(t1549 - 1.*t1569*t275)*t606 + t3126*t679 + t626*(t1611 + t1617 + t1052*t247 + t1569*t258 + t1109*t326 + t1553*t72);
  p_output1[124]=t3283 + t3303 + (t1711 + t1712 - 1.*t1229*t258 + t3273)*t544 + (t108*t1229 + t1733 + t1735 + t3289)*t606;
  p_output1[125]=t3283 + t3303 + (t1711 + t1782 - 1.*t1363*t258 + t3273)*t544 + (t108*t1363 + t1733 + t1790 + t3289)*t606;
  p_output1[126]=t3298*t544 + (t1828 + t1835 - 1.*t1461*t258 + t3340 + t3342 + t3348)*t544 + t3282*t583 + (t108*t1461 + t1805 + t1807 + t1109*t209 + t3321 + t3329)*t606;
  p_output1[127]=(t1864 + t1873 - 1.*t1569*t258 - 1.*t1109*t326 + t3379 + t3380)*t544 + t3282*t606 + (t1207 + t108*t1569 + t1851 + t3159 + t3160 + t3363)*t606 + t3298*t679;
  p_output1[128]=t3414 + t3480 + (t1957 + t1961 + t1229*t275 + t3443)*t544 + (-1.*t108*t1229 + t1976 + t1979 + t3451)*t626;
  p_output1[129]=t3414 + t3480 + (t1957 + t2034 + t1363*t275 + t3443)*t544 + (-1.*t108*t1363 + t1976 + t2051 + t3451)*t626;
  p_output1[130]=(t2064 + t1461*t275)*t544 + t3407*t583 + (-1.*t108*t1461 - 1.*t1052*t180 + t2076 + t2077 - 1.*t1109*t209 - 1.*t1447*t35)*t626;
  p_output1[131]=(t2106 + t1569*t275)*t544 + t3407*t606 + (-1.*t108*t1569 + t1657 + t2127 + t3278 + t3279 - 1.*t1553*t35)*t626;
  p_output1[132]=t3586 + t3624 + (t2355 + t2362 + t3590 - 1.*t2344*t459)*t772 + (t2381 + t2385 + t3602 + t2344*t449)*t789;
  p_output1[133]=t3586 + t3624 + (t2355 + t2445 + t3590 - 1.*t2435*t459)*t772 + (t2381 + t2452 + t3602 + t2435*t449)*t789;
  p_output1[134]=t3584*t701 + (t2484 - 1.*t2495*t459)*t772 + (t2526 + t2527 + t3666 + t3673 + t2491*t444 + t2495*t449)*t789;
  p_output1[135]=(t2557 - 1.*t2581*t459)*t772 + (t2625 + t2627 + t2176*t426 + t2564*t444 + t2581*t449 + t2223*t518)*t789 + t3584*t871;
  p_output1[136]=t3754 + t3767 + (t2712 + t2715 + t3729 - 1.*t2344*t449)*t701 + (t2743 + t2744 + t3761 + t2344*t383)*t772;
  p_output1[137]=t3754 + t3767 + (t2712 + t2766 + t3729 - 1.*t2435*t449)*t701 + (t2743 + t2775 + t3761 + t2435*t383)*t772;
  p_output1[138]=t3764*t701 + (t2822 + t2823 + t3810 + t3811 + t3813 - 1.*t2495*t449)*t701 + t3752*t736 + (t2796 + t2797 + t3791 + t3792 + t2495*t383 + t2223*t432)*t772;
  p_output1[139]=(t2865 + t2866 + t3839 + t3842 - 1.*t2581*t449 - 1.*t2223*t518)*t701 + t3752*t772 + (t2315 + t2852 + t3616 + t3622 + t2581*t383 + t3830)*t772 + t3764*t871;
  p_output1[140]=t3863 + t3883 + (t2978 + t2980 + t3865 + t2344*t459)*t701 + (t2995 + t2998 - 1.*t2344*t383 + t3874)*t789;
  p_output1[141]=t3863 + t3883 + (t2978 + t3021 + t3865 + t2435*t459)*t701 + (t2995 + t3029 - 1.*t2435*t383 + t3874)*t789;
  p_output1[142]=(t3039 + t2495*t459)*t701 + t3862*t736 + (t3061 + t3064 - 1.*t2491*t356 - 1.*t2176*t377 - 1.*t2495*t383 - 1.*t2223*t432)*t789;
  p_output1[143]=(t3091 + t2581*t459)*t701 + t3862*t772 + (t2663 + t3111 - 1.*t2564*t356 + t3749 + t3750 - 1.*t2581*t383)*t789;
  p_output1[144]=t72*(t1084*t68 - 1.*t1335*t68 + t1105*t96 + t1352*t96);
  p_output1[145]=t35*t3965;
  p_output1[146]=t247*t3965;
  p_output1[147]=t35*(-1.*t1105*t247*t68 - 1.*t1352*t247*t68 + t1084*t247*t96 - 1.*t1335*t247*t96) + t72*(t1105*t68*t72 + t1352*t68*t72 - 1.*t1084*t72*t96 + t1335*t72*t96);
  p_output1[148]=t180*t4003 + t35*t4045 + t72*(t3321 + t3329 + t1084*t35*t68 + t1052*t4008*t72 + t1052*t4017*t72 + t1105*t35*t96) + t35*(t3340 + t3342 - 1.*t1052*t247*t4008 - 1.*t1052*t247*t4017 - 1.*t1084*t68*t72 - 1.*t1105*t72*t96);
  p_output1[149]=t247*t4045 + t4003*t72 + t35*(t3379 + t3380 - 1.*t1532*t247*t4008 - 1.*t1532*t247*t4017 - 1.*t1084*t180*t68 - 1.*t1105*t180*t96) + t72*(t3159 + t3363 + t1084*t247*t68 + t1532*t4008*t72 + t1532*t4017*t72 + t1105*t247*t96);
  p_output1[150]=t35*(-1.*t1084*t68 + t1335*t68 - 1.*t1105*t96 - 1.*t1352*t96);
  p_output1[151]=t180*t4105;
  p_output1[152]=t4105*t72;
  p_output1[153]=(-1.*t2202*t369 + t2433*t369 - 1.*t2221*t380 - 1.*t2423*t380)*t444;
  p_output1[154]=t356*t4131;
  p_output1[155]=t4131*t426;
  p_output1[156]=t356*(-1.*t2221*t356*t369 - 1.*t2423*t356*t369 + t2202*t356*t380 - 1.*t2433*t356*t380) + (t2221*t369*t377 + t2423*t369*t377 - 1.*t2202*t377*t380 + t2433*t377*t380)*t444;
  p_output1[157]=t356*(-1.*t2202*t369*t377 - 1.*t2221*t377*t380 + t3810 + t3811 - 1.*t2475*t356*t4185 - 1.*t2475*t356*t4188) + t377*t4210 + t356*t4244 + (t3791 + t3792 + t2475*t377*t4185 + t2475*t377*t4188 + t2202*t369*t426 + t2221*t380*t426)*t444;
  p_output1[158]=t4244*t426 + (t3616 + t2202*t356*t369 + t2221*t356*t380 + t3830 + t2548*t377*t4185 + t2548*t377*t4188)*t444 + t4210*t444 + t356*(t3839 + t3842 - 1.*t2548*t356*t4185 - 1.*t2548*t356*t4188 - 1.*t2202*t369*t444 - 1.*t2221*t380*t444);
  p_output1[159]=t356*(t2202*t369 - 1.*t2433*t369 + t2221*t380 + t2423*t380);
  p_output1[160]=t377*t4312;
  p_output1[161]=t4312*t444;
  p_output1[162]=t180*t4317 + t35*t4353 + (t3159 + t3321 + t3329 + t1078*t35)*t72 + t35*(t3340 + t3342 + t3379 - 1.*t1078*t72);
  p_output1[163]=(-1.*t1078*t180 - 1.*t1532*t247 + t3379 + t3380)*t35 + t247*t4353 + t4317*t72 + t72*(t1078*t247 + t3159 + t3363 + t1532*t72);
  p_output1[164]=t4397;
  p_output1[165]=t4397;
  p_output1[166]=0.28121*t9 - 1.*t1046*t9 - 0.27*Power(t9,2);
  p_output1[167]=-0.28121*t31 + t1046*t31 + 0.27*t31*t9;
  p_output1[168]=t4435;
  p_output1[169]=t4435;
  p_output1[170]=t356*(-1.*t2475*t356 - 1.*t2198*t377 + t3810 + t3811) + t356*t4439 + (t2475*t377 + t3791 + t3792 + t2198*t426)*t444 + t377*t4456;
  p_output1[171]=t426*t4439 + (t2198*t356 + t3616 + t2548*t377 + t3830)*t444 + t356*(-1.*t2548*t356 + t3839 + t3842 - 1.*t2198*t444) + t444*t4456;
  p_output1[172]=0.28121*t334 + t2172*t334 - 0.27*Power(t334,2);
  p_output1[173]=-0.28121*t353 - 1.*t2172*t353 + 0.27*t334*t353;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance2.hh"

namespace SymFunction
{

void J_Je_ParallelStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
