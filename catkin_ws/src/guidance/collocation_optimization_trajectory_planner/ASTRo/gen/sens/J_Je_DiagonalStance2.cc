/*
 * Automatically Generated from Mathematica.
 * Sat 14 May 2022 17:54:59 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t35;
  double t28;
  double t31;
  double t60;
  double t85;
  double t87;
  double t102;
  double t19;
  double t81;
  double t149;
  double t72;
  double t152;
  double t204;
  double t208;
  double t223;
  double t225;
  double t71;
  double t34;
  double t61;
  double t68;
  double t288;
  double t290;
  double t292;
  double t322;
  double t323;
  double t330;
  double t335;
  double t296;
  double t297;
  double t298;
  double t363;
  double t369;
  double t373;
  double t377;
  double t108;
  double t160;
  double t180;
  double t239;
  double t251;
  double t259;
  double t430;
  double t413;
  double t424;
  double t432;
  double t445;
  double t447;
  double t448;
  double t452;
  double t442;
  double t476;
  double t486;
  double t500;
  double t504;
  double t508;
  double t516;
  double t530;
  double t428;
  double t437;
  double t439;
  double t599;
  double t604;
  double t606;
  double t607;
  double t565;
  double t571;
  double t576;
  double t579;
  double t581;
  double t586;
  double t618;
  double t620;
  double t621;
  double t626;
  double t449;
  double t459;
  double t461;
  double t69;
  double t190;
  double t193;
  double t648;
  double t663;
  double t681;
  double t683;
  double t688;
  double t265;
  double t274;
  double t276;
  double t340;
  double t341;
  double t355;
  double t312;
  double t315;
  double t319;
  double t777;
  double t781;
  double t782;
  double t724;
  double t726;
  double t727;
  double t832;
  double t833;
  double t834;
  double t656;
  double t658;
  double t660;
  double t395;
  double t396;
  double t404;
  double t441;
  double t462;
  double t475;
  double t927;
  double t928;
  double t932;
  double t533;
  double t551;
  double t554;
  double t611;
  double t615;
  double t616;
  double t591;
  double t594;
  double t596;
  double t1054;
  double t1055;
  double t1056;
  double t985;
  double t987;
  double t991;
  double t1091;
  double t1107;
  double t1108;
  double t892;
  double t894;
  double t896;
  double t637;
  double t638;
  double t639;
  double t836;
  double t844;
  double t846;
  double t675;
  double t676;
  double t679;
  double t1169;
  double t1171;
  double t1192;
  double t692;
  double t694;
  double t702;
  double t707;
  double t710;
  double t718;
  double t758;
  double t761;
  double t762;
  double t1244;
  double t1248;
  double t1256;
  double t729;
  double t735;
  double t741;
  double t817;
  double t822;
  double t827;
  double t1273;
  double t1275;
  double t1280;
  double t851;
  double t854;
  double t859;
  double t875;
  double t877;
  double t879;
  double t1109;
  double t1126;
  double t1131;
  double t918;
  double t919;
  double t924;
  double t1328;
  double t1335;
  double t1343;
  double t934;
  double t946;
  double t964;
  double t972;
  double t978;
  double t979;
  double t1009;
  double t1017;
  double t1035;
  double t1402;
  double t1407;
  double t1411;
  double t994;
  double t998;
  double t999;
  double t1074;
  double t1084;
  double t1088;
  double t1431;
  double t1444;
  double t1447;
  double t1139;
  double t1141;
  double t1143;
  double t1150;
  double t1156;
  double t1159;
  double t287;
  double t299;
  double t301;
  double t1488;
  double t1490;
  double t1497;
  double t1501;
  double t1506;
  double t1544;
  double t1547;
  double t1549;
  double t1552;
  double t1553;
  double t1575;
  double t1592;
  double t1599;
  double t1601;
  double t1482;
  double t1516;
  double t1521;
  double t1527;
  double t1605;
  double t1608;
  double t1611;
  double t1617;
  double t1620;
  double t1623;
  double t1631;
  double t1632;
  double t1643;
  double t1656;
  double t1667;
  double t1670;
  double t1537;
  double t1649;
  double t1650;
  double t1709;
  double t1711;
  double t1712;
  double t1679;
  double t1688;
  double t1689;
  double t1694;
  double t1706;
  double t1716;
  double t1733;
  double t1831;
  double t1836;
  double t1838;
  double t1783;
  double t1790;
  double t1792;
  double t1802;
  double t1823;
  double t1827;
  double t1857;
  double t1913;
  double t1919;
  double t1928;
  double t1929;
  double t1932;
  double t1933;
  double t1944;
  double t1956;
  double t1862;
  double t1868;
  double t1871;
  double t1962;
  double t1963;
  double t1965;
  double t1882;
  double t1887;
  double t1892;
  double t1909;
  double t2066;
  double t2068;
  double t2074;
  double t2075;
  double t2095;
  double t2100;
  double t2106;
  double t380;
  double t382;
  double t383;
  double t2034;
  double t2056;
  double t2058;
  double t2079;
  double t2107;
  double t2110;
  double t2126;
  double t2137;
  double t2140;
  double t2185;
  double t2187;
  double t2189;
  double t2198;
  double t2203;
  double t2211;
  double t2214;
  double t2216;
  double t394;
  double t410;
  double t412;
  double t2191;
  double t2192;
  double t2194;
  double t2209;
  double t2224;
  double t2231;
  double t2249;
  double t2258;
  double t2262;
  double t2167;
  double t2168;
  double t2176;
  double t2377;
  double t2379;
  double t2381;
  double t2385;
  double t2427;
  double t2445;
  double t2452;
  double t2460;
  double t2468;
  double t2489;
  double t2493;
  double t2501;
  double t2503;
  double t264;
  double t284;
  double t285;
  double t2629;
  double t2631;
  double t2637;
  double t2792;
  double t2806;
  double t2810;
  double t2818;
  double t2865;
  double t2876;
  double t2913;
  double t2918;
  double t2921;
  double t2937;
  double t2956;
  double t2958;
  double t2979;
  double t578;
  double t588;
  double t590;
  double t3168;
  double t3177;
  double t3178;
  double t3183;
  double t3185;
  double t3209;
  double t3221;
  double t3223;
  double t3225;
  double t3232;
  double t3233;
  double t3235;
  double t3240;
  double t3256;
  double t3167;
  double t3187;
  double t3188;
  double t3205;
  double t3262;
  double t3265;
  double t3267;
  double t3273;
  double t3275;
  double t3276;
  double t3279;
  double t3281;
  double t3282;
  double t3307;
  double t3309;
  double t3311;
  double t3208;
  double t3296;
  double t3301;
  double t3335;
  double t3337;
  double t3339;
  double t3327;
  double t3328;
  double t3329;
  double t3332;
  double t3334;
  double t3340;
  double t3342;
  double t3447;
  double t3459;
  double t3465;
  double t3363;
  double t3369;
  double t3374;
  double t3377;
  double t3420;
  double t3484;
  double t3587;
  double t3606;
  double t3608;
  double t3613;
  double t3616;
  double t3622;
  double t3624;
  double t3630;
  double t3487;
  double t3489;
  double t3531;
  double t3663;
  double t3665;
  double t3666;
  double t3550;
  double t3561;
  double t3573;
  double t3724;
  double t3729;
  double t3732;
  double t3745;
  double t3761;
  double t3763;
  double t3778;
  double t3784;
  double t3788;
  double t631;
  double t633;
  double t634;
  double t3746;
  double t3749;
  double t3752;
  double t3773;
  double t3789;
  double t3791;
  double t3798;
  double t3808;
  double t3810;
  double t3862;
  double t3863;
  double t3874;
  double t3877;
  double t3879;
  double t3888;
  double t3890;
  double t3894;
  double t636;
  double t640;
  double t642;
  double t3864;
  double t3865;
  double t3868;
  double t3883;
  double t3896;
  double t3898;
  double t3901;
  double t3905;
  double t3908;
  double t3838;
  double t3848;
  double t3852;
  double t3984;
  double t3988;
  double t3991;
  double t3997;
  double t4024;
  double t4030;
  double t4044;
  double t4045;
  double t4048;
  double t4054;
  double t4056;
  double t4065;
  double t4069;
  double t507;
  double t557;
  double t562;
  double t4263;
  double t4267;
  double t4279;
  double t4404;
  double t4407;
  double t4411;
  double t4414;
  double t4459;
  double t4506;
  double t4545;
  double t4549;
  double t4555;
  double t4583;
  double t4598;
  double t4606;
  double t4622;
  double t1864;
  double t1886;
  double t4905;
  double t4908;
  double t4910;
  double t1967;
  double t4916;
  double t1995;
  double t4946;
  double t4951;
  double t4952;
  double t4956;
  double t4960;
  double t2062;
  double t2163;
  double t2197;
  double t2313;
  double t2318;
  double t2447;
  double t2479;
  double t5020;
  double t5034;
  double t2517;
  double t5181;
  double t5212;
  double t5242;
  double t5250;
  double t5255;
  double t2527;
  double t5261;
  double t5269;
  double t5270;
  double t2560;
  double t2563;
  double t2607;
  double t2665;
  double t2712;
  double t2731;
  double t2915;
  double t2940;
  double t5353;
  double t5383;
  double t5479;
  double t5481;
  double t5487;
  double t2999;
  double t5493;
  double t3019;
  double t5522;
  double t5537;
  double t5541;
  double t3060;
  double t3090;
  double t3098;
  double t3125;
  double t3153;
  double t3485;
  double t3532;
  double t5717;
  double t5719;
  double t5721;
  double t3668;
  double t5749;
  double t3680;
  double t5763;
  double t5770;
  double t5778;
  double t5787;
  double t5788;
  double t3754;
  double t3837;
  double t3873;
  double t3923;
  double t3925;
  double t4031;
  double t4049;
  double t5870;
  double t5880;
  double t4097;
  double t6037;
  double t6040;
  double t6041;
  double t6042;
  double t6043;
  double t4148;
  double t6046;
  double t6054;
  double t6062;
  double t4193;
  double t4205;
  double t4230;
  double t4314;
  double t4355;
  double t4358;
  double t4547;
  double t4586;
  double t6155;
  double t6173;
  double t6227;
  double t6230;
  double t6232;
  double t4646;
  double t6241;
  double t4662;
  double t6246;
  double t6250;
  double t6251;
  double t4708;
  double t4728;
  double t4734;
  double t4819;
  double t4876;
  double t6423;
  double t6425;
  double t6428;
  double t5332;
  double t5335;
  double t6619;
  double t6623;
  double t5360;
  double t6575;
  double t6596;
  double t6597;
  double t5411;
  double t5444;
  double t5446;
  double t6668;
  double t6669;
  double t6672;
  double t6769;
  double t6796;
  double t6826;
  double t6878;
  double t6885;
  double t6886;
  double t6102;
  double t6103;
  double t6956;
  double t6962;
  double t6157;
  double t7023;
  double t7027;
  double t7031;
  double t6198;
  double t7147;
  double t7148;
  double t7177;
  double t6212;
  double t6214;
  double t7303;
  double t7304;
  double t7310;
  double t7317;
  double t7330;
  double t7370;
  double t7392;
  double t7469;
  double t7470;
  double t7476;
  double t7530;
  double t7532;
  double t7536;
  double t7537;
  double t7546;
  double t7572;
  double t7573;
  t35 = Cos(var1[7]);
  t28 = Cos(var1[8]);
  t31 = Sin(var1[7]);
  t60 = Sin(var1[8]);
  t85 = t35*t28;
  t87 = t31*t60;
  t102 = t85 + t87;
  t19 = Cos(var1[4]);
  t81 = Cos(var1[6]);
  t149 = Sin(var1[5]);
  t72 = Cos(var1[5]);
  t152 = Sin(var1[6]);
  t204 = -1.*t81*t149*t102;
  t208 = -1.*t72*t152*t102;
  t223 = t204 + t208;
  t225 = t19*t223;
  t71 = Sin(var1[4]);
  t34 = -1.*t28*t31;
  t61 = t35*t60;
  t68 = t34 + t61;
  t288 = t28*t31;
  t290 = -1.*t35*t60;
  t292 = t288 + t290;
  t322 = -1.*t72*t81;
  t323 = t149*t152;
  t330 = t322 + t323;
  t335 = t19*t330;
  t296 = t72*t81*t292;
  t297 = -1.*t149*t152*t292;
  t298 = t296 + t297;
  t363 = -1.*t81*t149*t292;
  t369 = -1.*t72*t152*t292;
  t373 = t363 + t369;
  t377 = t19*t373;
  t108 = t72*t81*t102;
  t160 = -1.*t149*t152*t102;
  t180 = t108 + t160;
  t239 = -1.*t35*t28;
  t251 = -1.*t31*t60;
  t259 = t239 + t251;
  t430 = Cos(var1[16]);
  t413 = Cos(var1[17]);
  t424 = Sin(var1[16]);
  t432 = Sin(var1[17]);
  t445 = -1.*t430*t413;
  t447 = -1.*t424*t432;
  t448 = t445 + t447;
  t452 = Sin(var1[15]);
  t442 = Cos(var1[15]);
  t476 = -1.*t72*t452*t448;
  t486 = -1.*t442*t448*t149;
  t500 = t476 + t486;
  t504 = t19*t500;
  t508 = t413*t424;
  t516 = -1.*t430*t432;
  t530 = t508 + t516;
  t428 = -1.*t413*t424;
  t437 = t430*t432;
  t439 = t428 + t437;
  t599 = t442*t72;
  t604 = -1.*t452*t149;
  t606 = t599 + t604;
  t607 = t19*t606;
  t565 = t430*t413;
  t571 = t424*t432;
  t576 = t565 + t571;
  t579 = t442*t72*t439;
  t581 = -1.*t452*t439*t149;
  t586 = t579 + t581;
  t618 = -1.*t72*t452*t439;
  t620 = -1.*t442*t439*t149;
  t621 = t618 + t620;
  t626 = t19*t621;
  t449 = t442*t72*t448;
  t459 = -1.*t452*t448*t149;
  t461 = t449 + t459;
  t69 = t19*t68;
  t190 = -1.*t71*t180;
  t193 = t69 + t190;
  t648 = Sin(var1[3]);
  t663 = Cos(var1[3]);
  t681 = t648*t71*t223;
  t683 = t663*t180;
  t688 = t681 + t683;
  t265 = t72*t81*t68;
  t274 = -1.*t149*t152*t68;
  t276 = t265 + t274;
  t340 = t19*t102;
  t341 = -1.*t71*t298;
  t355 = t340 + t341;
  t312 = -1.*t81*t149;
  t315 = -1.*t72*t152;
  t319 = t312 + t315;
  t777 = t663*t319;
  t781 = t648*t71*t330;
  t782 = t777 + t781;
  t724 = t81*t149*t292;
  t726 = t72*t152*t292;
  t727 = t724 + t726;
  t832 = t648*t71*t373;
  t833 = t663*t298;
  t834 = t832 + t833;
  t656 = t81*t149*t102;
  t658 = t72*t152*t102;
  t660 = t656 + t658;
  t395 = t72*t81*t259;
  t396 = -1.*t149*t152*t259;
  t404 = t395 + t396;
  t441 = t19*t439;
  t462 = -1.*t71*t461;
  t475 = t441 + t462;
  t927 = t648*t71*t500;
  t928 = t663*t461;
  t932 = t927 + t928;
  t533 = t442*t72*t530;
  t551 = -1.*t452*t530*t149;
  t554 = t533 + t551;
  t611 = t19*t576;
  t615 = -1.*t71*t586;
  t616 = t611 + t615;
  t591 = t72*t452;
  t594 = t442*t149;
  t596 = t591 + t594;
  t1054 = t663*t596;
  t1055 = t648*t71*t606;
  t1056 = t1054 + t1055;
  t985 = t72*t452*t439;
  t987 = t442*t439*t149;
  t991 = t985 + t987;
  t1091 = t648*t71*t621;
  t1107 = t663*t586;
  t1108 = t1091 + t1107;
  t892 = t72*t452*t448;
  t894 = t442*t448*t149;
  t896 = t892 + t894;
  t637 = t442*t72*t576;
  t638 = -1.*t452*t576*t149;
  t639 = t637 + t638;
  t836 = t663*t660;
  t844 = -1.*t648*t193;
  t846 = t836 + t844;
  t675 = -1.*t71*t68;
  t676 = -1.*t19*t180;
  t679 = t675 + t676;
  t1169 = -1.*t663*t71*t223;
  t1171 = t648*t180;
  t1192 = t1169 + t1171;
  t692 = t81*t149*t68;
  t694 = t72*t152*t68;
  t702 = t692 + t694;
  t707 = t19*t259;
  t710 = -1.*t71*t276;
  t718 = t707 + t710;
  t758 = t72*t81;
  t761 = -1.*t149*t152;
  t762 = t758 + t761;
  t1244 = t648*t319;
  t1248 = -1.*t663*t71*t330;
  t1256 = t1244 + t1248;
  t729 = t663*t727;
  t735 = -1.*t648*t355;
  t741 = t729 + t735;
  t817 = -1.*t71*t102;
  t822 = -1.*t19*t298;
  t827 = t817 + t822;
  t1273 = -1.*t663*t71*t373;
  t1275 = t648*t298;
  t1280 = t1273 + t1275;
  t851 = t81*t149*t259;
  t854 = t72*t152*t259;
  t859 = t851 + t854;
  t875 = t19*t292;
  t877 = -1.*t71*t404;
  t879 = t875 + t877;
  t1109 = t663*t896;
  t1126 = -1.*t648*t475;
  t1131 = t1109 + t1126;
  t918 = -1.*t439*t71;
  t919 = -1.*t19*t461;
  t924 = t918 + t919;
  t1328 = -1.*t663*t71*t500;
  t1335 = t648*t461;
  t1343 = t1328 + t1335;
  t934 = t72*t452*t530;
  t946 = t442*t530*t149;
  t964 = t934 + t946;
  t972 = t19*t448;
  t978 = -1.*t71*t554;
  t979 = t972 + t978;
  t1009 = -1.*t442*t72;
  t1017 = t452*t149;
  t1035 = t1009 + t1017;
  t1402 = t648*t596;
  t1407 = -1.*t663*t71*t606;
  t1411 = t1402 + t1407;
  t994 = t663*t991;
  t998 = -1.*t648*t616;
  t999 = t994 + t998;
  t1074 = -1.*t576*t71;
  t1084 = -1.*t19*t586;
  t1088 = t1074 + t1084;
  t1431 = -1.*t663*t71*t621;
  t1444 = t648*t586;
  t1447 = t1431 + t1444;
  t1139 = t72*t452*t576;
  t1141 = t442*t576*t149;
  t1143 = t1139 + t1141;
  t1150 = t19*t530;
  t1156 = -1.*t71*t639;
  t1159 = t1150 + t1156;
  t287 = t71*t102;
  t299 = t19*t298;
  t301 = t287 + t299;
  t1488 = -1.*t28;
  t1490 = 1. + t1488;
  t1497 = 0.50321*t1490;
  t1501 = 0.23321*t28;
  t1506 = t1497 + t1501;
  t1544 = -1.*t81;
  t1547 = 1. + t1544;
  t1549 = 0.15121*t1547;
  t1552 = -1.*t35;
  t1553 = 1. + t1552;
  t1575 = 0.28121*t1553;
  t1592 = t35*t1506;
  t1599 = -0.27*t31*t60;
  t1601 = t1575 + t1592 + t1599;
  t1482 = 0.28121*t31;
  t1516 = -1.*t1506*t31;
  t1521 = -0.27*t35*t60;
  t1527 = t1482 + t1516 + t1521;
  t1605 = t81*t1601;
  t1608 = t1549 + t1605;
  t1611 = t72*t1608;
  t1617 = 0.15121*t81;
  t1620 = -0.15121*t152;
  t1623 = t152*t1601;
  t1631 = t1549 + t1617 + t1620 + t1623;
  t1632 = -1.*t149*t1631;
  t1643 = t1611 + t1632;
  t1656 = t71*t1527;
  t1667 = t19*t1643;
  t1670 = t1656 + t1667;
  t1537 = -1.*t71*t1527;
  t1649 = -1.*t19*t1643;
  t1650 = t1537 + t1649;
  t1709 = t19*t1527;
  t1711 = -1.*t71*t1643;
  t1712 = t1709 + t1711;
  t1679 = t149*t1608;
  t1688 = t72*t1631;
  t1689 = t1679 + t1688;
  t1694 = -1.*t762*t1689;
  t1706 = -1.*t19*t319*t1670;
  t1716 = t71*t319*t1712;
  t1733 = t1694 + t1706 + t1716;
  t1831 = -1.*t149*t1608;
  t1836 = -1.*t72*t1631;
  t1838 = t1831 + t1836;
  t1783 = t727*t1689;
  t1790 = t301*t1670;
  t1792 = t355*t1712;
  t1802 = t1783 + t1790 + t1792;
  t1823 = t19*t373*t1733;
  t1827 = Power(t19,2);
  t1857 = Power(t71,2);
  t1913 = -0.15121*t81;
  t1919 = t1913 + t1605;
  t1928 = -1.*t149*t1919;
  t1929 = 0.15121*t152;
  t1932 = -1.*t152*t1601;
  t1933 = t1929 + t1932;
  t1944 = t72*t1933;
  t1956 = t1928 + t1944;
  t1862 = -1.*t319*t1689;
  t1868 = -1.*t19*t330*t1670;
  t1871 = t71*t330*t1712;
  t1962 = t72*t1919;
  t1963 = t149*t1933;
  t1965 = t1962 + t1963;
  t1882 = t298*t1689;
  t1887 = t19*t373*t1670;
  t1892 = -1.*t71*t373*t1712;
  t1909 = t19*t330*t1802;
  t2066 = 0.28121*t35;
  t2068 = -1.*t35*t1506;
  t2074 = 0.27*t31*t60;
  t2075 = t2066 + t2068 + t2074;
  t2095 = t72*t81*t1527;
  t2100 = -1.*t149*t152*t1527;
  t2106 = t2095 + t2100;
  t380 = t71*t68;
  t382 = t19*t180;
  t383 = t380 + t382;
  t2034 = t81*t149*t1527;
  t2056 = t72*t152*t1527;
  t2058 = t2034 + t2056;
  t2079 = t71*t2075;
  t2107 = t19*t2106;
  t2110 = t2079 + t2107;
  t2126 = t19*t2075;
  t2137 = -1.*t71*t2106;
  t2140 = t2126 + t2137;
  t2185 = -0.27*t28*t31;
  t2187 = 0.27*t35*t60;
  t2189 = t2185 + t2187;
  t2198 = -0.27*t35*t28;
  t2203 = t2198 + t1599;
  t2211 = t72*t81*t2189;
  t2214 = -1.*t149*t152*t2189;
  t2216 = t2211 + t2214;
  t394 = t71*t292;
  t410 = t19*t404;
  t412 = t394 + t410;
  t2191 = t81*t149*t2189;
  t2192 = t72*t152*t2189;
  t2194 = t2191 + t2192;
  t2209 = t71*t2203;
  t2224 = t19*t2216;
  t2231 = t2209 + t2224;
  t2249 = t19*t2203;
  t2258 = -1.*t71*t2216;
  t2262 = t2249 + t2258;
  t2167 = t660*t1689;
  t2168 = t383*t1670;
  t2176 = t193*t1712;
  t2377 = -1.*t727*t1689;
  t2379 = -1.*t301*t1670;
  t2381 = -1.*t355*t1712;
  t2385 = t2377 + t2379 + t2381;
  t2427 = t2167 + t2168 + t2176;
  t2445 = -1.*t298*t1689;
  t2452 = -1.*t19*t373*t1670;
  t2460 = t71*t373*t1712;
  t2468 = t180*t1689;
  t2489 = t19*t223*t1670;
  t2493 = -1.*t71*t223*t1712;
  t2501 = t19*t223*t2385;
  t2503 = t19*t373*t2427;
  t264 = t71*t259;
  t284 = t19*t276;
  t285 = t264 + t284;
  t2629 = -1.*t660*t1689;
  t2631 = -1.*t383*t1670;
  t2637 = -1.*t193*t1712;
  t2792 = t762*t1689;
  t2806 = t19*t319*t1670;
  t2810 = -1.*t71*t319*t1712;
  t2818 = t2792 + t2806 + t2810;
  t2865 = t2629 + t2631 + t2637;
  t2876 = t19*t223*t2818;
  t2913 = t319*t1689;
  t2918 = t19*t330*t1670;
  t2921 = -1.*t71*t330*t1712;
  t2937 = -1.*t180*t1689;
  t2956 = -1.*t19*t223*t1670;
  t2958 = t71*t223*t1712;
  t2979 = t19*t330*t2865;
  t578 = t576*t71;
  t588 = t19*t586;
  t590 = t578 + t588;
  t3168 = -1.*t413;
  t3177 = 1. + t3168;
  t3178 = -0.50321*t3177;
  t3183 = -0.23321*t413;
  t3185 = t3178 + t3183;
  t3209 = -1.*t442;
  t3221 = 1. + t3209;
  t3223 = -0.15121*t3221;
  t3225 = -1.*t430;
  t3232 = 1. + t3225;
  t3233 = -0.28121*t3232;
  t3235 = t430*t3185;
  t3240 = 0.27*t424*t432;
  t3256 = t3233 + t3235 + t3240;
  t3167 = 0.28121*t424;
  t3187 = t3185*t424;
  t3188 = -0.27*t430*t432;
  t3205 = t3167 + t3187 + t3188;
  t3262 = t442*t3256;
  t3265 = t3223 + t3262;
  t3267 = t72*t3265;
  t3273 = -0.15121*t442;
  t3275 = 0.15121*t452;
  t3276 = t452*t3256;
  t3279 = t3223 + t3273 + t3275 + t3276;
  t3281 = -1.*t3279*t149;
  t3282 = t3267 + t3281;
  t3307 = t3205*t71;
  t3309 = t19*t3282;
  t3311 = t3307 + t3309;
  t3208 = -1.*t3205*t71;
  t3296 = -1.*t19*t3282;
  t3301 = t3208 + t3296;
  t3335 = t19*t3205;
  t3337 = -1.*t71*t3282;
  t3339 = t3335 + t3337;
  t3327 = t72*t3279;
  t3328 = t3265*t149;
  t3329 = t3327 + t3328;
  t3332 = -1.*t1035*t3329;
  t3334 = -1.*t19*t596*t3311;
  t3340 = t71*t596*t3339;
  t3342 = t3332 + t3334 + t3340;
  t3447 = -1.*t72*t3279;
  t3459 = -1.*t3265*t149;
  t3465 = t3447 + t3459;
  t3363 = t991*t3329;
  t3369 = t590*t3311;
  t3374 = t616*t3339;
  t3377 = t3363 + t3369 + t3374;
  t3420 = t19*t621*t3342;
  t3484 = -1.*t596*t3329;
  t3587 = -0.15121*t452;
  t3606 = -1.*t452*t3256;
  t3608 = t3587 + t3606;
  t3613 = t72*t3608;
  t3616 = 0.15121*t442;
  t3622 = t3616 + t3262;
  t3624 = -1.*t3622*t149;
  t3630 = t3613 + t3624;
  t3487 = -1.*t19*t606*t3311;
  t3489 = t71*t606*t3339;
  t3531 = t586*t3329;
  t3663 = t72*t3622;
  t3665 = t3608*t149;
  t3666 = t3663 + t3665;
  t3550 = t19*t621*t3311;
  t3561 = -1.*t71*t621*t3339;
  t3573 = t19*t606*t3377;
  t3724 = -0.28121*t424;
  t3729 = -1.*t3185*t424;
  t3732 = 0.27*t430*t432;
  t3745 = t3724 + t3729 + t3732;
  t3761 = 0.28121*t430;
  t3763 = t3761 + t3235 + t3240;
  t3778 = t442*t72*t3745;
  t3784 = -1.*t452*t3745*t149;
  t3788 = t3778 + t3784;
  t631 = t439*t71;
  t633 = t19*t461;
  t634 = t631 + t633;
  t3746 = t72*t452*t3745;
  t3749 = t442*t3745*t149;
  t3752 = t3746 + t3749;
  t3773 = t3763*t71;
  t3789 = t19*t3788;
  t3791 = t3773 + t3789;
  t3798 = t19*t3763;
  t3808 = -1.*t71*t3788;
  t3810 = t3798 + t3808;
  t3862 = 0.27*t413*t424;
  t3863 = t3862 + t3188;
  t3874 = -0.27*t430*t413;
  t3877 = -0.27*t424*t432;
  t3879 = t3874 + t3877;
  t3888 = t442*t72*t3863;
  t3890 = -1.*t452*t3863*t149;
  t3894 = t3888 + t3890;
  t636 = t530*t71;
  t640 = t19*t639;
  t642 = t636 + t640;
  t3864 = t72*t452*t3863;
  t3865 = t442*t3863*t149;
  t3868 = t3864 + t3865;
  t3883 = t3879*t71;
  t3896 = t19*t3894;
  t3898 = t3883 + t3896;
  t3901 = t19*t3879;
  t3905 = -1.*t71*t3894;
  t3908 = t3901 + t3905;
  t3838 = t896*t3329;
  t3848 = t634*t3311;
  t3852 = t475*t3339;
  t3984 = -1.*t991*t3329;
  t3988 = -1.*t590*t3311;
  t3991 = -1.*t616*t3339;
  t3997 = t3984 + t3988 + t3991;
  t4024 = t3838 + t3848 + t3852;
  t4030 = -1.*t586*t3329;
  t4044 = -1.*t19*t621*t3311;
  t4045 = t71*t621*t3339;
  t4048 = t461*t3329;
  t4054 = t19*t500*t3311;
  t4056 = -1.*t71*t500*t3339;
  t4065 = t19*t500*t3997;
  t4069 = t19*t621*t4024;
  t507 = t448*t71;
  t557 = t19*t554;
  t562 = t507 + t557;
  t4263 = -1.*t896*t3329;
  t4267 = -1.*t634*t3311;
  t4279 = -1.*t475*t3339;
  t4404 = t1035*t3329;
  t4407 = t19*t596*t3311;
  t4411 = -1.*t71*t596*t3339;
  t4414 = t4404 + t4407 + t4411;
  t4459 = t4263 + t4267 + t4279;
  t4506 = t19*t500*t4414;
  t4545 = t596*t3329;
  t4549 = t19*t606*t3311;
  t4555 = -1.*t71*t606*t3339;
  t4583 = -1.*t461*t3329;
  t4598 = -1.*t19*t500*t3311;
  t4606 = t71*t500*t3339;
  t4622 = t19*t606*t4459;
  t1864 = -1.*t762*t1643;
  t1886 = t727*t1643;
  t4905 = -1.*t319*t1643;
  t4908 = t1694 + t4905;
  t4910 = t298*t4908;
  t1967 = -1.*t762*t1965;
  t4916 = -1.*t330*t1643;
  t1995 = t727*t1965;
  t4946 = t373*t1643;
  t4951 = t1527*t102;
  t4952 = t298*t1643;
  t4956 = t4951 + t1783 + t4952;
  t4960 = t319*t4956;
  t2062 = -1.*t762*t2058;
  t2163 = t727*t2058;
  t2197 = -1.*t762*t2194;
  t2313 = t727*t2194;
  t2318 = t859*t1689;
  t2447 = -1.*t727*t1643;
  t2479 = t660*t1643;
  t5020 = t1527*t68;
  t5034 = t180*t1643;
  t2517 = -1.*t727*t1965;
  t5181 = -1.*t373*t1643;
  t5212 = -1.*t1527*t102;
  t5242 = -1.*t298*t1643;
  t5250 = t5212 + t2377 + t5242;
  t5255 = t180*t5250;
  t2527 = t660*t1965;
  t5261 = t223*t1643;
  t5269 = t5020 + t2167 + t5034;
  t5270 = t298*t5269;
  t2560 = t2058*t660;
  t2563 = t702*t1689;
  t2607 = -1.*t727*t2058;
  t2665 = t2194*t660;
  t2712 = -1.*t727*t2194;
  t2731 = -1.*t859*t1689;
  t2915 = t762*t1643;
  t2940 = -1.*t660*t1643;
  t5353 = -1.*t1527*t68;
  t5383 = -1.*t180*t1643;
  t5479 = t319*t1643;
  t5481 = t2792 + t5479;
  t5487 = t180*t5481;
  t2999 = t762*t1965;
  t5493 = t330*t1643;
  t3019 = -1.*t660*t1965;
  t5522 = -1.*t223*t1643;
  t5537 = t5353 + t2629 + t5383;
  t5541 = t319*t5537;
  t3060 = t762*t2058;
  t3090 = -1.*t2058*t660;
  t3098 = -1.*t702*t1689;
  t3125 = t762*t2194;
  t3153 = -1.*t2194*t660;
  t3485 = -1.*t1035*t3282;
  t3532 = t991*t3282;
  t5717 = -1.*t596*t3282;
  t5719 = t3332 + t5717;
  t5721 = t586*t5719;
  t3668 = -1.*t1035*t3666;
  t5749 = -1.*t606*t3282;
  t3680 = t991*t3666;
  t5763 = t621*t3282;
  t5770 = t3205*t576;
  t5778 = t586*t3282;
  t5787 = t5770 + t3363 + t5778;
  t5788 = t596*t5787;
  t3754 = -1.*t1035*t3752;
  t3837 = t3752*t991;
  t3873 = -1.*t1035*t3868;
  t3923 = t3868*t991;
  t3925 = t1143*t3329;
  t4031 = -1.*t991*t3282;
  t4049 = t896*t3282;
  t5870 = t3205*t439;
  t5880 = t461*t3282;
  t4097 = -1.*t991*t3666;
  t6037 = -1.*t621*t3282;
  t6040 = -1.*t3205*t576;
  t6041 = -1.*t586*t3282;
  t6042 = t6040 + t3984 + t6041;
  t6043 = t461*t6042;
  t4148 = t896*t3666;
  t6046 = t500*t3282;
  t6054 = t5870 + t3838 + t5880;
  t6062 = t586*t6054;
  t4193 = t3752*t896;
  t4205 = t964*t3329;
  t4230 = -1.*t3752*t991;
  t4314 = t3868*t896;
  t4355 = -1.*t3868*t991;
  t4358 = -1.*t1143*t3329;
  t4547 = t1035*t3282;
  t4586 = -1.*t896*t3282;
  t6155 = -1.*t3205*t439;
  t6173 = -1.*t461*t3282;
  t6227 = t596*t3282;
  t6230 = t4404 + t6227;
  t6232 = t461*t6230;
  t4646 = t1035*t3666;
  t6241 = t606*t3282;
  t4662 = -1.*t896*t3666;
  t6246 = -1.*t500*t3282;
  t6250 = t6155 + t4263 + t6173;
  t6251 = t596*t6250;
  t4708 = t1035*t3752;
  t4728 = -1.*t3752*t896;
  t4734 = -1.*t964*t3329;
  t4819 = t1035*t3868;
  t4876 = -1.*t3868*t896;
  t6423 = t152*t1608;
  t6425 = -1.*t81*t1631;
  t6428 = t6423 + t6425;
  t5332 = t1527*t259;
  t5335 = t68*t2075;
  t6619 = Power(t81,2);
  t6623 = Power(t152,2);
  t5360 = -1.*t2075*t102;
  t6575 = -1.*t81*t292*t1608;
  t6596 = -1.*t152*t292*t1631;
  t6597 = t5212 + t6575 + t6596;
  t5411 = t68*t2203;
  t5444 = -1.*t292*t1527;
  t5446 = -1.*t2203*t102;
  t6668 = t81*t102*t1608;
  t6669 = t152*t102*t1631;
  t6672 = t5020 + t6668 + t6669;
  t6769 = -1.*t152*t1608;
  t6796 = t81*t1631;
  t6826 = t6769 + t6796;
  t6878 = -1.*t452*t3265;
  t6885 = t442*t3279;
  t6886 = t6878 + t6885;
  t6102 = t3205*t448;
  t6103 = t439*t3763;
  t6956 = Power(t442,2);
  t6962 = Power(t452,2);
  t6157 = -1.*t3763*t576;
  t7023 = -1.*t442*t439*t3265;
  t7027 = -1.*t452*t439*t3279;
  t7031 = t6040 + t7023 + t7027;
  t6198 = t439*t3879;
  t7147 = t442*t448*t3265;
  t7148 = t452*t448*t3279;
  t7177 = t5870 + t7147 + t7148;
  t6212 = -1.*t530*t3205;
  t6214 = -1.*t3879*t576;
  t7303 = t452*t3265;
  t7304 = -1.*t442*t3279;
  t7310 = t7303 + t7304;
  t7317 = -1.*t292*t1601;
  t7330 = t7317 + t5212;
  t7370 = t1601*t102;
  t7392 = t5020 + t7370;
  t7469 = 0.15121*t259;
  t7470 = 0.15121*t102;
  t7476 = t7469 + t7470;
  t7530 = -0.15121*t530;
  t7532 = -0.15121*t439;
  t7536 = t7530 + t7532;
  t7537 = t448*t3256;
  t7546 = t5870 + t7537;
  t7572 = -1.*t439*t3256;
  t7573 = t7572 + t6040;
  p_output1[0]=t193;
  p_output1[1]=t225;
  p_output1[2]=t225;
  p_output1[3]=t285;
  p_output1[4]=t301;
  p_output1[5]=-1.*t319*t71;
  p_output1[6]=t335;
  p_output1[7]=t335;
  p_output1[8]=t355;
  p_output1[9]=t377;
  p_output1[10]=t377;
  p_output1[11]=t383;
  p_output1[12]=t412;
  p_output1[13]=t475;
  p_output1[14]=t504;
  p_output1[15]=t504;
  p_output1[16]=t562;
  p_output1[17]=t590;
  p_output1[18]=-1.*t596*t71;
  p_output1[19]=t607;
  p_output1[20]=t607;
  p_output1[21]=t616;
  p_output1[22]=t626;
  p_output1[23]=t626;
  p_output1[24]=t634;
  p_output1[25]=t642;
  p_output1[26]=-1.*t648*t660 - 1.*t193*t663;
  p_output1[27]=-1.*t648*t679;
  p_output1[28]=t688;
  p_output1[29]=t688;
  p_output1[30]=t663*t702 - 1.*t648*t718;
  p_output1[31]=t741;
  p_output1[32]=t319*t663*t71 - 1.*t648*t762;
  p_output1[33]=t19*t319*t648;
  p_output1[34]=t782;
  p_output1[35]=t782;
  p_output1[36]=-1.*t355*t663 - 1.*t648*t727;
  p_output1[37]=-1.*t648*t827;
  p_output1[38]=t834;
  p_output1[39]=t834;
  p_output1[40]=t846;
  p_output1[41]=t663*t859 - 1.*t648*t879;
  p_output1[42]=-1.*t475*t663 - 1.*t648*t896;
  p_output1[43]=-1.*t648*t924;
  p_output1[44]=t932;
  p_output1[45]=t932;
  p_output1[46]=t663*t964 - 1.*t648*t979;
  p_output1[47]=t999;
  p_output1[48]=-1.*t1035*t648 + t596*t663*t71;
  p_output1[49]=t19*t596*t648;
  p_output1[50]=t1056;
  p_output1[51]=t1056;
  p_output1[52]=-1.*t616*t663 - 1.*t648*t991;
  p_output1[53]=-1.*t1088*t648;
  p_output1[54]=t1108;
  p_output1[55]=t1108;
  p_output1[56]=t1131;
  p_output1[57]=-1.*t1159*t648 + t1143*t663;
  p_output1[58]=t846;
  p_output1[59]=t663*t679;
  p_output1[60]=t1192;
  p_output1[61]=t1192;
  p_output1[62]=t648*t702 + t663*t718;
  p_output1[63]=t355*t663 + t648*t727;
  p_output1[64]=t319*t648*t71 + t663*t762;
  p_output1[65]=-1.*t19*t319*t663;
  p_output1[66]=t1256;
  p_output1[67]=t1256;
  p_output1[68]=t741;
  p_output1[69]=t663*t827;
  p_output1[70]=t1280;
  p_output1[71]=t1280;
  p_output1[72]=t648*t660 + t193*t663;
  p_output1[73]=t648*t859 + t663*t879;
  p_output1[74]=t1131;
  p_output1[75]=t663*t924;
  p_output1[76]=t1343;
  p_output1[77]=t1343;
  p_output1[78]=t648*t964 + t663*t979;
  p_output1[79]=t616*t663 + t648*t991;
  p_output1[80]=t1035*t663 + t596*t648*t71;
  p_output1[81]=-1.*t19*t596*t663;
  p_output1[82]=t1411;
  p_output1[83]=t1411;
  p_output1[84]=t999;
  p_output1[85]=t1088*t663;
  p_output1[86]=t1447;
  p_output1[87]=t1447;
  p_output1[88]=t475*t663 + t648*t896;
  p_output1[89]=t1143*t648 + t1159*t663;
  p_output1[90]=t1733*t355 - 1.*t1802*t319*t71 + t301*(t1650*t319*t71 + t1670*t319*t71) + t19*t319*(t1712*t301 + t1650*t355 + t1670*t355 + t1712*t827);
  p_output1[91]=t1823 + t1909 + t301*(t1862 + t1864 + t1868 + t1871 - 1.*t1827*t1838*t319 - 1.*t1838*t1857*t319) + t19*t319*(t1882 + t1886 + t1887 + t1892 + t1838*t19*t301 - 1.*t1838*t355*t71);
  p_output1[92]=t1823 + t1909 + t301*(t1862 + t1868 + t1871 + t1967 - 1.*t1827*t1956*t319 - 1.*t1857*t1956*t319) + t19*t319*(t1882 + t1887 + t1892 + t1995 + t19*t1956*t301 - 1.*t1956*t355*t71);
  p_output1[93]=t19*t319*(t2163 + t2167 + t2168 + t2176 + t2110*t301 + t2140*t355) + t1733*t383 + t301*(t2062 - 1.*t19*t2110*t319 + t2140*t319*t71);
  p_output1[94]=t1733*t412 + t301*(t2197 - 1.*t19*t2231*t319 + t2262*t319*t71) + t19*t319*(t2313 + t2318 + t2231*t301 + t2262*t355 + t1670*t412 + t1712*t879);
  p_output1[95]=t193*t2385 + t2427*t355 + t301*(t1650*t193 + t1670*t193 + t1712*t383 + t1712*t679) + t383*(-1.*t1712*t301 - 1.*t1650*t355 - 1.*t1670*t355 - 1.*t1712*t827);
  p_output1[96]=t2501 + t2503 + t301*(t2468 + t2479 + t2489 + t2493 + t1838*t19*t383 - 1.*t1838*t193*t71) + t383*(t2445 + t2447 + t2452 + t2460 - 1.*t1838*t19*t301 + t1838*t355*t71);
  p_output1[97]=t2501 + t2503 + t301*(t2468 + t2489 + t2493 + t2527 + t19*t1956*t383 - 1.*t193*t1956*t71) + t383*(t2445 + t2452 + t2460 + t2517 - 1.*t19*t1956*t301 + t1956*t355*t71);
  p_output1[98]=t2385*t285 + t2427*t383 + (t2607 + t2629 + t2631 + t2637 - 1.*t2110*t301 - 1.*t2140*t355)*t383 + t301*(t193*t2140 + t2560 + t2563 + t1670*t285 + t2110*t383 + t1712*t718);
  p_output1[99]=t2385*t301 + t301*(t1783 + t1790 + t1792 + t193*t2262 + t2665 + t2231*t383) + t2427*t412 + t383*(t2712 + t2731 - 1.*t2231*t301 - 1.*t2262*t355 - 1.*t1670*t412 - 1.*t1712*t879);
  p_output1[100]=t193*t2818 + t19*t319*(-1.*t1650*t193 - 1.*t1670*t193 - 1.*t1712*t383 - 1.*t1712*t679) - 1.*t2865*t319*t71 + t383*(-1.*t1650*t319*t71 - 1.*t1670*t319*t71);
  p_output1[101]=t2876 + t2979 + (t2913 + t2915 + t2918 + t2921 + t1827*t1838*t319 + t1838*t1857*t319)*t383 + t19*t319*(t2937 + t2940 + t2956 + t2958 - 1.*t1838*t19*t383 + t1838*t193*t71);
  p_output1[102]=t2876 + t2979 + (t2913 + t2918 + t2921 + t2999 + t1827*t1956*t319 + t1857*t1956*t319)*t383 + t19*t319*(t2937 + t2956 + t2958 + t3019 - 1.*t19*t1956*t383 + t193*t1956*t71);
  p_output1[103]=t2818*t285 + t383*(t3060 + t19*t2110*t319 - 1.*t2140*t319*t71) + t19*t319*(-1.*t193*t2140 - 1.*t1670*t285 + t3090 + t3098 - 1.*t2110*t383 - 1.*t1712*t718);
  p_output1[104]=t2818*t301 + t19*t319*(-1.*t193*t2262 + t2377 + t2379 + t2381 + t3153 - 1.*t2231*t383) + t383*(t3125 + t19*t2231*t319 - 1.*t2262*t319*t71);
  p_output1[105]=t3342*t616 + t19*t596*(t1088*t3339 + t3339*t590 + t3301*t616 + t3311*t616) - 1.*t3377*t596*t71 + t590*(t3301*t596*t71 + t3311*t596*t71);
  p_output1[106]=t3420 + t3573 + t590*(t3484 + t3485 + t3487 + t3489 - 1.*t1827*t3465*t596 - 1.*t1857*t3465*t596) + t19*t596*(t3531 + t3532 + t3550 + t3561 + t19*t3465*t590 - 1.*t3465*t616*t71);
  p_output1[107]=t3420 + t3573 + t590*(t3484 + t3487 + t3489 + t3668 - 1.*t1827*t3630*t596 - 1.*t1857*t3630*t596) + t19*t596*(t3531 + t3550 + t3561 + t3680 + t19*t3630*t590 - 1.*t3630*t616*t71);
  p_output1[108]=t19*t596*(t3837 + t3838 + t3848 + t3852 + t3791*t590 + t3810*t616) + t3342*t634 + t590*(t3754 - 1.*t19*t3791*t596 + t3810*t596*t71);
  p_output1[109]=t3342*t642 + t19*t596*(t1159*t3339 + t3923 + t3925 + t3898*t590 + t3908*t616 + t3311*t642) + t590*(t3873 - 1.*t19*t3898*t596 + t3908*t596*t71);
  p_output1[110]=t3997*t475 + t4024*t616 + (-1.*t1088*t3339 - 1.*t3339*t590 - 1.*t3301*t616 - 1.*t3311*t616)*t634 + t590*(t3301*t475 + t3311*t475 + t3339*t634 + t3339*t924);
  p_output1[111]=t4065 + t4069 + t590*(t4048 + t4049 + t4054 + t4056 + t19*t3465*t634 - 1.*t3465*t475*t71) + t634*(t4030 + t4031 + t4044 + t4045 - 1.*t19*t3465*t590 + t3465*t616*t71);
  p_output1[112]=t4065 + t4069 + t590*(t4048 + t4054 + t4056 + t4148 + t19*t3630*t634 - 1.*t3630*t475*t71) + t634*(t4030 + t4044 + t4045 + t4097 - 1.*t19*t3630*t590 + t3630*t616*t71);
  p_output1[113]=t3997*t562 + t4024*t634 + (t4230 + t4263 + t4267 + t4279 - 1.*t3791*t590 - 1.*t3810*t616)*t634 + t590*(t4193 + t4205 + t3810*t475 + t3311*t562 + t3791*t634 + t3339*t979);
  p_output1[114]=t3997*t590 + t590*(t3363 + t3369 + t3374 + t4314 + t3908*t475 + t3898*t634) + t4024*t642 + t634*(-1.*t1159*t3339 + t4355 + t4358 - 1.*t3898*t590 - 1.*t3908*t616 - 1.*t3311*t642);
  p_output1[115]=t4414*t475 - 1.*t4459*t596*t71 + t634*(-1.*t3301*t596*t71 - 1.*t3311*t596*t71) + t19*t596*(-1.*t3301*t475 - 1.*t3311*t475 - 1.*t3339*t634 - 1.*t3339*t924);
  p_output1[116]=t4506 + t4622 + (t4545 + t4547 + t4549 + t4555 + t1827*t3465*t596 + t1857*t3465*t596)*t634 + t19*t596*(t4583 + t4586 + t4598 + t4606 - 1.*t19*t3465*t634 + t3465*t475*t71);
  p_output1[117]=t4506 + t4622 + (t4545 + t4549 + t4555 + t4646 + t1827*t3630*t596 + t1857*t3630*t596)*t634 + t19*t596*(t4583 + t4598 + t4606 + t4662 - 1.*t19*t3630*t634 + t3630*t475*t71);
  p_output1[118]=t4414*t562 + t634*(t4708 + t19*t3791*t596 - 1.*t3810*t596*t71) + t19*t596*(t4728 + t4734 - 1.*t3810*t475 - 1.*t3311*t562 - 1.*t3791*t634 - 1.*t3339*t979);
  p_output1[119]=t4414*t590 + t19*t596*(t3984 + t3988 + t3991 - 1.*t3908*t475 + t4876 - 1.*t3898*t634) + t634*(t4819 + t19*t3898*t596 - 1.*t3908*t596*t71);
  p_output1[120]=t4910 + t4960 + (t1862 + t1864 - 1.*t1838*t319 + t4916)*t727 + (t1882 + t1886 + t1838*t298 + t4946)*t762;
  p_output1[121]=t4910 + t4960 + (t1862 + t1967 - 1.*t1956*t319 + t4916)*t727 + (t1882 + t1995 + t1956*t298 + t4946)*t762;
  p_output1[122]=t4908*t660 + (t2062 - 1.*t2106*t319)*t727 + (t102*t2075 + t2163 + t2167 + t2106*t298 + t5020 + t5034)*t762;
  p_output1[123]=(t2197 - 1.*t2216*t319)*t727 + (t102*t2203 + t2313 + t2318 + t1527*t292 + t2216*t298 + t1643*t404)*t762 + t4908*t859;
  p_output1[124]=t5255 + t5270 + (t2445 + t2447 - 1.*t1838*t298 + t5181)*t660 + (t180*t1838 + t2468 + t2479 + t5261)*t727;
  p_output1[125]=t5255 + t5270 + (t2445 + t2517 - 1.*t1956*t298 + t5181)*t660 + (t180*t1956 + t2468 + t2527 + t5261)*t727;
  p_output1[126]=t5269*t660 + (t2607 + t2629 - 1.*t2106*t298 + t5353 + t5360 + t5383)*t660 + t5250*t702 + (t180*t2106 + t2560 + t2563 + t1643*t276 + t5332 + t5335)*t727;
  p_output1[127]=(t2712 + t2731 - 1.*t2216*t298 - 1.*t1643*t404 + t5444 + t5446)*t660 + t5250*t727 + (t1783 + t180*t2216 + t2665 + t4951 + t4952 + t5411)*t727 + t5269*t859;
  p_output1[128]=t5487 + t5541 + (t2913 + t2915 + t1838*t319 + t5493)*t660 + (-1.*t180*t1838 + t2937 + t2940 + t5522)*t762;
  p_output1[129]=t5487 + t5541 + (t2913 + t2999 + t1956*t319 + t5493)*t660 + (-1.*t180*t1956 + t2937 + t3019 + t5522)*t762;
  p_output1[130]=(t3060 + t2106*t319)*t660 + t5481*t702 + (-1.*t180*t2106 - 1.*t1527*t259 - 1.*t1643*t276 + t3090 + t3098 - 1.*t2075*t68)*t762;
  p_output1[131]=(t3125 + t2216*t319)*t660 + t5481*t727 + (-1.*t180*t2216 + t2377 + t3153 + t5212 + t5242 - 1.*t2203*t68)*t762;
  p_output1[132]=t5721 + t5788 + t1035*(t3531 + t3532 + t5763 + t3465*t586) + (t3484 + t3485 + t5749 - 1.*t3465*t596)*t991;
  p_output1[133]=t5721 + t5788 + t1035*(t3531 + t3680 + t5763 + t3630*t586) + (t3484 + t3668 + t5749 - 1.*t3630*t596)*t991;
  p_output1[134]=t1035*(t3837 + t3838 + t3763*t576 + t3788*t586 + t5870 + t5880) + t5719*t896 + (t3754 - 1.*t3788*t596)*t991;
  p_output1[135]=t1143*t5719 + t1035*(t3923 + t3925 + t3205*t530 + t3879*t576 + t3894*t586 + t3282*t639) + (t3873 - 1.*t3894*t596)*t991;
  p_output1[136]=t6043 + t6062 + (t4030 + t4031 - 1.*t3465*t586 + t6037)*t896 + (t4048 + t4049 + t3465*t461 + t6046)*t991;
  p_output1[137]=t6043 + t6062 + (t4030 + t4097 - 1.*t3630*t586 + t6037)*t896 + (t4048 + t4148 + t3630*t461 + t6046)*t991;
  p_output1[138]=t6054*t896 + (t4230 + t4263 - 1.*t3788*t586 + t6155 + t6157 + t6173)*t896 + t6042*t964 + (t4193 + t4205 + t3788*t461 + t3282*t554 + t6102 + t6103)*t991;
  p_output1[139]=t1143*t6054 + (t4355 + t4358 - 1.*t3894*t586 + t6212 + t6214 - 1.*t3282*t639)*t896 + t6042*t991 + (t3363 + t4314 + t3894*t461 + t5770 + t5778 + t6198)*t991;
  p_output1[140]=t6232 + t1035*(t4583 + t4586 - 1.*t3465*t461 + t6246) + t6251 + (t4545 + t4547 + t3465*t596 + t6241)*t896;
  p_output1[141]=t6232 + t1035*(t4583 - 1.*t3630*t461 + t4662 + t6246) + t6251 + (t4545 + t4646 + t3630*t596 + t6241)*t896;
  p_output1[142]=t1035*(-1.*t3763*t439 - 1.*t3205*t448 - 1.*t3788*t461 + t4728 + t4734 - 1.*t3282*t554) + (t4708 + t3788*t596)*t896 + t6230*t964;
  p_output1[143]=t1035*(t3984 - 1.*t3879*t439 - 1.*t3894*t461 + t4876 + t6040 + t6041) + (t4819 + t3894*t596)*t896 + t6230*t991;
  p_output1[144]=t102*(t152*t1631 + t152*t1933 + t1608*t81 - 1.*t1919*t81);
  p_output1[145]=t6428*t68;
  p_output1[146]=t292*t6428;
  p_output1[147]=t102*(-1.*t102*t152*t1608 + t102*t152*t1919 + t102*t1631*t81 + t102*t1933*t81) + t68*(t152*t1608*t292 - 1.*t152*t1919*t292 - 1.*t1631*t292*t81 - 1.*t1933*t292*t81);
  p_output1[148]=t259*t6597 + t6672*t68 + t68*(-1.*t102*t152*t1631 + t5353 + t5360 - 1.*t1527*t292*t6619 - 1.*t1527*t292*t6623 - 1.*t102*t1608*t81) + t102*(t5332 + t5335 + t102*t1527*t6619 + t102*t1527*t6623 + t152*t1631*t68 + t1608*t68*t81);
  p_output1[149]=t102*t6597 + t292*t6672 + t68*(-1.*t152*t1631*t259 + t5444 + t5446 - 1.*t2189*t292*t6619 - 1.*t2189*t292*t6623 - 1.*t1608*t259*t81) + t102*(t152*t1631*t292 + t4951 + t5411 + t102*t2189*t6619 + t102*t2189*t6623 + t1608*t292*t81);
  p_output1[150]=t68*(-1.*t152*t1631 - 1.*t152*t1933 - 1.*t1608*t81 + t1919*t81);
  p_output1[151]=t259*t6826;
  p_output1[152]=t102*t6826;
  p_output1[153]=(-1.*t3265*t442 + t3622*t442 - 1.*t3279*t452 - 1.*t3608*t452)*t576;
  p_output1[154]=t439*t6886;
  p_output1[155]=t530*t6886;
  p_output1[156]=t439*(-1.*t3279*t439*t442 - 1.*t3608*t439*t442 + t3265*t439*t452 - 1.*t3622*t439*t452) + (t3279*t442*t448 + t3608*t442*t448 - 1.*t3265*t448*t452 + t3622*t448*t452)*t576;
  p_output1[157]=t439*(-1.*t3265*t442*t448 - 1.*t3279*t448*t452 + t6155 + t6157 - 1.*t3745*t439*t6956 - 1.*t3745*t439*t6962) + t576*(t3265*t442*t530 + t3279*t452*t530 + t6102 + t6103 + t3745*t448*t6956 + t3745*t448*t6962) + t448*t7031 + t439*t7177;
  p_output1[158]=t439*(-1.*t3265*t442*t576 - 1.*t3279*t452*t576 + t6212 + t6214 - 1.*t3863*t439*t6956 - 1.*t3863*t439*t6962) + t576*(t3265*t439*t442 + t3279*t439*t452 + t5770 + t6198 + t3863*t448*t6956 + t3863*t448*t6962) + t576*t7031 + t530*t7177;
  p_output1[159]=t439*(t3265*t442 - 1.*t3622*t442 + t3279*t452 + t3608*t452);
  p_output1[160]=t448*t7310;
  p_output1[161]=t576*t7310;
  p_output1[162]=(-1.*t102*t1601 + t5353 + t5360 + t5444)*t68 + t102*(t4951 + t5332 + t5335 + t1601*t68) + t259*t7330 + t68*t7392;
  p_output1[163]=t102*(t102*t2189 + t1601*t292 + t4951 + t5411) + (-1.*t1601*t259 - 1.*t2189*t292 + t5444 + t5446)*t68 + t102*t7330 + t292*t7392;
  p_output1[164]=t7476;
  p_output1[165]=t7476;
  p_output1[166]=0.28121*t28 - 1.*t1506*t28 - 0.27*Power(t28,2);
  p_output1[167]=-0.28121*t60 + t1506*t60 + 0.27*t28*t60;
  p_output1[168]=t7536;
  p_output1[169]=t7536;
  p_output1[170]=t576*(t3745*t448 + t3256*t530 + t6102 + t6103) + t439*(-1.*t3745*t439 - 1.*t3256*t448 + t6155 + t6157) + t439*t7546 + t448*t7573;
  p_output1[171]=t576*(t3256*t439 + t3863*t448 + t5770 + t6198) + t439*(-1.*t3863*t439 - 1.*t3256*t576 + t6212 + t6214) + t530*t7546 + t576*t7573;
  p_output1[172]=0.28121*t413 + t3185*t413 - 0.27*Power(t413,2);
  p_output1[173]=-0.28121*t432 - 1.*t3185*t432 + 0.27*t413*t432;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
