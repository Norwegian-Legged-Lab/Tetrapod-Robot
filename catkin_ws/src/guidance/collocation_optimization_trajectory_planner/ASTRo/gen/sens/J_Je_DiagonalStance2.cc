/*
 * Automatically Generated from Mathematica.
 * Sat 4 Jun 2022 19:01:32 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t216;
  double t49;
  double t157;
  double t462;
  double t1318;
  double t1499;
  double t1504;
  double t47;
  double t1313;
  double t1628;
  double t1006;
  double t1687;
  double t1750;
  double t1923;
  double t1930;
  double t1936;
  double t871;
  double t160;
  double t467;
  double t470;
  double t2032;
  double t2033;
  double t2043;
  double t2152;
  double t2154;
  double t2177;
  double t2178;
  double t2061;
  double t2064;
  double t2113;
  double t2195;
  double t2203;
  double t2206;
  double t2210;
  double t1626;
  double t1706;
  double t1718;
  double t1939;
  double t1951;
  double t1952;
  double t2907;
  double t2791;
  double t2792;
  double t2948;
  double t3001;
  double t3275;
  double t3803;
  double t3915;
  double t2996;
  double t4130;
  double t4143;
  double t4243;
  double t4245;
  double t4283;
  double t4359;
  double t4367;
  double t2798;
  double t2956;
  double t2971;
  double t4576;
  double t4577;
  double t4648;
  double t4670;
  double t4393;
  double t4399;
  double t4402;
  double t4418;
  double t4464;
  double t4502;
  double t4718;
  double t4720;
  double t4745;
  double t4758;
  double t3848;
  double t3916;
  double t3934;
  double t662;
  double t1725;
  double t1748;
  double t4868;
  double t4968;
  double t5531;
  double t5532;
  double t5534;
  double t1975;
  double t1996;
  double t1997;
  double t2181;
  double t2182;
  double t2194;
  double t2131;
  double t2140;
  double t2142;
  double t5614;
  double t5615;
  double t5624;
  double t5570;
  double t5572;
  double t5579;
  double t5642;
  double t5643;
  double t5644;
  double t4874;
  double t4878;
  double t4886;
  double t2498;
  double t2604;
  double t2675;
  double t2991;
  double t3937;
  double t3941;
  double t5795;
  double t5801;
  double t5806;
  double t4380;
  double t4384;
  double t4385;
  double t4692;
  double t4693;
  double t4709;
  double t4561;
  double t4570;
  double t4571;
  double t6019;
  double t6020;
  double t6026;
  double t5854;
  double t5874;
  double t5881;
  double t6047;
  double t6048;
  double t6051;
  double t5680;
  double t5691;
  double t5697;
  double t4841;
  double t4843;
  double t4845;
  double t5647;
  double t5649;
  double t5650;
  double t5463;
  double t5464;
  double t5466;
  double t6397;
  double t6436;
  double t6438;
  double t5537;
  double t5538;
  double t5550;
  double t5552;
  double t5553;
  double t5558;
  double t5596;
  double t5601;
  double t5606;
  double t6564;
  double t6565;
  double t6658;
  double t5584;
  double t5585;
  double t5586;
  double t5633;
  double t5635;
  double t5637;
  double t6667;
  double t6678;
  double t6682;
  double t5652;
  double t5654;
  double t5656;
  double t5660;
  double t5661;
  double t5663;
  double t6052;
  double t6055;
  double t6056;
  double t5719;
  double t5723;
  double t5724;
  double t6693;
  double t6694;
  double t6696;
  double t5807;
  double t5809;
  double t5815;
  double t5829;
  double t5830;
  double t5831;
  double t5955;
  double t5958;
  double t5981;
  double t6713;
  double t6714;
  double t6715;
  double t5883;
  double t5897;
  double t5926;
  double t6039;
  double t6040;
  double t6043;
  double t6723;
  double t6725;
  double t6729;
  double t6060;
  double t6064;
  double t6074;
  double t6088;
  double t6091;
  double t6108;
  double t2031;
  double t2115;
  double t2116;
  double t6750;
  double t6751;
  double t6752;
  double t6754;
  double t6755;
  double t6785;
  double t6786;
  double t6787;
  double t6788;
  double t6789;
  double t6790;
  double t6791;
  double t6792;
  double t6793;
  double t6746;
  double t6756;
  double t6781;
  double t6782;
  double t6794;
  double t6795;
  double t6796;
  double t6797;
  double t6798;
  double t6799;
  double t6800;
  double t6801;
  double t6802;
  double t6806;
  double t6807;
  double t6808;
  double t6784;
  double t6803;
  double t6804;
  double t6833;
  double t6835;
  double t6843;
  double t6812;
  double t6822;
  double t6823;
  double t6824;
  double t6829;
  double t6859;
  double t6867;
  double t7201;
  double t7203;
  double t7215;
  double t7111;
  double t7116;
  double t7117;
  double t7127;
  double t7162;
  double t7163;
  double t7222;
  double t7981;
  double t7982;
  double t7987;
  double t7991;
  double t7992;
  double t7993;
  double t7994;
  double t7995;
  double t7242;
  double t7251;
  double t7252;
  double t7999;
  double t8000;
  double t8001;
  double t7275;
  double t7341;
  double t7344;
  double t7363;
  double t8021;
  double t8023;
  double t8024;
  double t8027;
  double t8034;
  double t8035;
  double t8036;
  double t2341;
  double t2343;
  double t2397;
  double t8015;
  double t8016;
  double t8017;
  double t8028;
  double t8039;
  double t8040;
  double t8062;
  double t8066;
  double t8070;
  double t8130;
  double t8131;
  double t8132;
  double t8139;
  double t8141;
  double t8143;
  double t8144;
  double t8145;
  double t2474;
  double t2765;
  double t2789;
  double t8134;
  double t8135;
  double t8136;
  double t8142;
  double t8149;
  double t8150;
  double t8152;
  double t8153;
  double t8154;
  double t8118;
  double t8121;
  double t8123;
  double t8839;
  double t8840;
  double t8845;
  double t8849;
  double t8868;
  double t8892;
  double t8896;
  double t8897;
  double t8900;
  double t8907;
  double t8908;
  double t8912;
  double t8913;
  double t1960;
  double t1999;
  double t2001;
  double t8954;
  double t8955;
  double t8960;
  double t9033;
  double t9034;
  double t9035;
  double t9037;
  double t9046;
  double t9050;
  double t9053;
  double t9055;
  double t9056;
  double t9059;
  double t9063;
  double t9064;
  double t9067;
  double t4410;
  double t4521;
  double t4549;
  double t10104;
  double t10106;
  double t10113;
  double t10123;
  double t10124;
  double t10322;
  double t10357;
  double t10387;
  double t10391;
  double t10427;
  double t10486;
  double t10513;
  double t10521;
  double t10539;
  double t10101;
  double t10145;
  double t10180;
  double t10271;
  double t10600;
  double t10635;
  double t10637;
  double t10670;
  double t10672;
  double t10674;
  double t10684;
  double t10745;
  double t10758;
  double t10877;
  double t10925;
  double t11032;
  double t10309;
  double t10770;
  double t10828;
  double t11347;
  double t11351;
  double t11404;
  double t11125;
  double t11171;
  double t11186;
  double t11288;
  double t11330;
  double t11486;
  double t11517;
  double t12050;
  double t12069;
  double t12080;
  double t11712;
  double t11749;
  double t11803;
  double t11819;
  double t12004;
  double t12131;
  double t12452;
  double t12472;
  double t12490;
  double t12506;
  double t12511;
  double t12527;
  double t12541;
  double t12542;
  double t12181;
  double t12245;
  double t12277;
  double t12574;
  double t12579;
  double t12734;
  double t12302;
  double t12328;
  double t12424;
  double t12850;
  double t12851;
  double t12857;
  double t12862;
  double t12928;
  double t12929;
  double t13038;
  double t13061;
  double t13070;
  double t4783;
  double t4794;
  double t4836;
  double t12863;
  double t12901;
  double t12912;
  double t12975;
  double t13077;
  double t13090;
  double t13096;
  double t13101;
  double t13103;
  double t13229;
  double t13241;
  double t13351;
  double t13358;
  double t13372;
  double t13403;
  double t13405;
  double t13410;
  double t4837;
  double t4854;
  double t4860;
  double t13248;
  double t13268;
  double t13274;
  double t13377;
  double t13418;
  double t13422;
  double t13477;
  double t13484;
  double t13487;
  double t13134;
  double t13140;
  double t13185;
  double t13635;
  double t13639;
  double t13649;
  double t13666;
  double t13716;
  double t13758;
  double t13796;
  double t13798;
  double t13911;
  double t13949;
  double t13950;
  double t14048;
  double t14060;
  double t4272;
  double t4388;
  double t4390;
  double t14277;
  double t14302;
  double t14317;
  double t14542;
  double t14545;
  double t14546;
  double t14554;
  double t14595;
  double t14696;
  double t14724;
  double t14732;
  double t14739;
  double t14834;
  double t14857;
  double t14860;
  double t14884;
  double t7250;
  double t7315;
  double t15127;
  double t15144;
  double t15146;
  double t8003;
  double t15158;
  double t8010;
  double t15193;
  double t15228;
  double t15230;
  double t15231;
  double t15233;
  double t8018;
  double t8114;
  double t8137;
  double t8163;
  double t8168;
  double t8895;
  double t8901;
  double t15344;
  double t15352;
  double t8918;
  double t15411;
  double t15420;
  double t15427;
  double t15431;
  double t15433;
  double t8922;
  double t15437;
  double t15447;
  double t15448;
  double t8932;
  double t8934;
  double t8948;
  double t8969;
  double t8974;
  double t8978;
  double t9054;
  double t9060;
  double t15508;
  double t15516;
  double t15564;
  double t15565;
  double t15566;
  double t9071;
  double t15575;
  double t9075;
  double t15586;
  double t15599;
  double t15601;
  double t9083;
  double t9093;
  double t9094;
  double t9454;
  double t9952;
  double t12161;
  double t12281;
  double t15664;
  double t15668;
  double t15671;
  double t12762;
  double t15676;
  double t12801;
  double t15688;
  double t15695;
  double t15699;
  double t15700;
  double t15701;
  double t12921;
  double t13131;
  double t13331;
  double t13520;
  double t13523;
  double t13768;
  double t13913;
  double t15761;
  double t15767;
  double t14073;
  double t15794;
  double t15799;
  double t15800;
  double t15801;
  double t15802;
  double t14144;
  double t15804;
  double t15807;
  double t15809;
  double t14218;
  double t14233;
  double t14275;
  double t14371;
  double t14430;
  double t14437;
  double t14728;
  double t14840;
  double t15831;
  double t15845;
  double t15981;
  double t15985;
  double t15986;
  double t14920;
  double t15988;
  double t14942;
  double t15994;
  double t16043;
  double t16062;
  double t14955;
  double t14976;
  double t14981;
  double t15067;
  double t15105;
  double t16275;
  double t16276;
  double t16282;
  double t15491;
  double t15495;
  double t16455;
  double t16466;
  double t15509;
  double t16445;
  double t16447;
  double t16453;
  double t15529;
  double t15539;
  double t15544;
  double t16499;
  double t16500;
  double t16509;
  double t16622;
  double t16623;
  double t16624;
  double t16647;
  double t16648;
  double t16650;
  double t15823;
  double t15824;
  double t16705;
  double t16708;
  double t15834;
  double t16727;
  double t16730;
  double t16731;
  double t15946;
  double t16755;
  double t16756;
  double t16758;
  double t15963;
  double t15964;
  double t16821;
  double t16824;
  double t16825;
  double t16830;
  double t16831;
  double t16837;
  double t16840;
  double t16877;
  double t16884;
  double t16885;
  double t16905;
  double t16906;
  double t16907;
  double t16911;
  double t16914;
  double t16927;
  double t16928;
  t216 = Cos(var1[7]);
  t49 = Cos(var1[8]);
  t157 = Sin(var1[7]);
  t462 = Sin(var1[8]);
  t1318 = t216*t49;
  t1499 = t157*t462;
  t1504 = t1318 + t1499;
  t47 = Cos(var1[4]);
  t1313 = Cos(var1[6]);
  t1628 = Sin(var1[5]);
  t1006 = Cos(var1[5]);
  t1687 = Sin(var1[6]);
  t1750 = -1.*t1313*t1628*t1504;
  t1923 = -1.*t1006*t1687*t1504;
  t1930 = t1750 + t1923;
  t1936 = t47*t1930;
  t871 = Sin(var1[4]);
  t160 = -1.*t49*t157;
  t467 = t216*t462;
  t470 = t160 + t467;
  t2032 = t49*t157;
  t2033 = -1.*t216*t462;
  t2043 = t2032 + t2033;
  t2152 = -1.*t1006*t1313;
  t2154 = t1628*t1687;
  t2177 = t2152 + t2154;
  t2178 = t47*t2177;
  t2061 = t1006*t1313*t2043;
  t2064 = -1.*t1628*t1687*t2043;
  t2113 = t2061 + t2064;
  t2195 = -1.*t1313*t1628*t2043;
  t2203 = -1.*t1006*t1687*t2043;
  t2206 = t2195 + t2203;
  t2210 = t47*t2206;
  t1626 = t1006*t1313*t1504;
  t1706 = -1.*t1628*t1687*t1504;
  t1718 = t1626 + t1706;
  t1939 = -1.*t216*t49;
  t1951 = -1.*t157*t462;
  t1952 = t1939 + t1951;
  t2907 = Cos(var1[16]);
  t2791 = Cos(var1[17]);
  t2792 = Sin(var1[16]);
  t2948 = Sin(var1[17]);
  t3001 = -1.*t2907*t2791;
  t3275 = -1.*t2792*t2948;
  t3803 = t3001 + t3275;
  t3915 = Sin(var1[15]);
  t2996 = Cos(var1[15]);
  t4130 = -1.*t1006*t3915*t3803;
  t4143 = -1.*t2996*t3803*t1628;
  t4243 = t4130 + t4143;
  t4245 = t47*t4243;
  t4283 = t2791*t2792;
  t4359 = -1.*t2907*t2948;
  t4367 = t4283 + t4359;
  t2798 = -1.*t2791*t2792;
  t2956 = t2907*t2948;
  t2971 = t2798 + t2956;
  t4576 = t2996*t1006;
  t4577 = -1.*t3915*t1628;
  t4648 = t4576 + t4577;
  t4670 = t47*t4648;
  t4393 = t2907*t2791;
  t4399 = t2792*t2948;
  t4402 = t4393 + t4399;
  t4418 = t2996*t1006*t2971;
  t4464 = -1.*t3915*t2971*t1628;
  t4502 = t4418 + t4464;
  t4718 = -1.*t1006*t3915*t2971;
  t4720 = -1.*t2996*t2971*t1628;
  t4745 = t4718 + t4720;
  t4758 = t47*t4745;
  t3848 = t2996*t1006*t3803;
  t3916 = -1.*t3915*t3803*t1628;
  t3934 = t3848 + t3916;
  t662 = t47*t470;
  t1725 = -1.*t871*t1718;
  t1748 = t662 + t1725;
  t4868 = Sin(var1[3]);
  t4968 = Cos(var1[3]);
  t5531 = t4868*t871*t1930;
  t5532 = t4968*t1718;
  t5534 = t5531 + t5532;
  t1975 = t1006*t1313*t470;
  t1996 = -1.*t1628*t1687*t470;
  t1997 = t1975 + t1996;
  t2181 = t47*t1504;
  t2182 = -1.*t871*t2113;
  t2194 = t2181 + t2182;
  t2131 = -1.*t1313*t1628;
  t2140 = -1.*t1006*t1687;
  t2142 = t2131 + t2140;
  t5614 = t4968*t2142;
  t5615 = t4868*t871*t2177;
  t5624 = t5614 + t5615;
  t5570 = t1313*t1628*t2043;
  t5572 = t1006*t1687*t2043;
  t5579 = t5570 + t5572;
  t5642 = t4868*t871*t2206;
  t5643 = t4968*t2113;
  t5644 = t5642 + t5643;
  t4874 = t1313*t1628*t1504;
  t4878 = t1006*t1687*t1504;
  t4886 = t4874 + t4878;
  t2498 = t1006*t1313*t1952;
  t2604 = -1.*t1628*t1687*t1952;
  t2675 = t2498 + t2604;
  t2991 = t47*t2971;
  t3937 = -1.*t871*t3934;
  t3941 = t2991 + t3937;
  t5795 = t4868*t871*t4243;
  t5801 = t4968*t3934;
  t5806 = t5795 + t5801;
  t4380 = t2996*t1006*t4367;
  t4384 = -1.*t3915*t4367*t1628;
  t4385 = t4380 + t4384;
  t4692 = t47*t4402;
  t4693 = -1.*t871*t4502;
  t4709 = t4692 + t4693;
  t4561 = t1006*t3915;
  t4570 = t2996*t1628;
  t4571 = t4561 + t4570;
  t6019 = t4968*t4571;
  t6020 = t4868*t871*t4648;
  t6026 = t6019 + t6020;
  t5854 = t1006*t3915*t2971;
  t5874 = t2996*t2971*t1628;
  t5881 = t5854 + t5874;
  t6047 = t4868*t871*t4745;
  t6048 = t4968*t4502;
  t6051 = t6047 + t6048;
  t5680 = t1006*t3915*t3803;
  t5691 = t2996*t3803*t1628;
  t5697 = t5680 + t5691;
  t4841 = t2996*t1006*t4402;
  t4843 = -1.*t3915*t4402*t1628;
  t4845 = t4841 + t4843;
  t5647 = t4968*t4886;
  t5649 = -1.*t4868*t1748;
  t5650 = t5647 + t5649;
  t5463 = -1.*t871*t470;
  t5464 = -1.*t47*t1718;
  t5466 = t5463 + t5464;
  t6397 = -1.*t4968*t871*t1930;
  t6436 = t4868*t1718;
  t6438 = t6397 + t6436;
  t5537 = t1313*t1628*t470;
  t5538 = t1006*t1687*t470;
  t5550 = t5537 + t5538;
  t5552 = t47*t1952;
  t5553 = -1.*t871*t1997;
  t5558 = t5552 + t5553;
  t5596 = t1006*t1313;
  t5601 = -1.*t1628*t1687;
  t5606 = t5596 + t5601;
  t6564 = t4868*t2142;
  t6565 = -1.*t4968*t871*t2177;
  t6658 = t6564 + t6565;
  t5584 = t4968*t5579;
  t5585 = -1.*t4868*t2194;
  t5586 = t5584 + t5585;
  t5633 = -1.*t871*t1504;
  t5635 = -1.*t47*t2113;
  t5637 = t5633 + t5635;
  t6667 = -1.*t4968*t871*t2206;
  t6678 = t4868*t2113;
  t6682 = t6667 + t6678;
  t5652 = t1313*t1628*t1952;
  t5654 = t1006*t1687*t1952;
  t5656 = t5652 + t5654;
  t5660 = t47*t2043;
  t5661 = -1.*t871*t2675;
  t5663 = t5660 + t5661;
  t6052 = t4968*t5697;
  t6055 = -1.*t4868*t3941;
  t6056 = t6052 + t6055;
  t5719 = -1.*t2971*t871;
  t5723 = -1.*t47*t3934;
  t5724 = t5719 + t5723;
  t6693 = -1.*t4968*t871*t4243;
  t6694 = t4868*t3934;
  t6696 = t6693 + t6694;
  t5807 = t1006*t3915*t4367;
  t5809 = t2996*t4367*t1628;
  t5815 = t5807 + t5809;
  t5829 = t47*t3803;
  t5830 = -1.*t871*t4385;
  t5831 = t5829 + t5830;
  t5955 = -1.*t2996*t1006;
  t5958 = t3915*t1628;
  t5981 = t5955 + t5958;
  t6713 = t4868*t4571;
  t6714 = -1.*t4968*t871*t4648;
  t6715 = t6713 + t6714;
  t5883 = t4968*t5881;
  t5897 = -1.*t4868*t4709;
  t5926 = t5883 + t5897;
  t6039 = -1.*t4402*t871;
  t6040 = -1.*t47*t4502;
  t6043 = t6039 + t6040;
  t6723 = -1.*t4968*t871*t4745;
  t6725 = t4868*t4502;
  t6729 = t6723 + t6725;
  t6060 = t1006*t3915*t4402;
  t6064 = t2996*t4402*t1628;
  t6074 = t6060 + t6064;
  t6088 = t47*t4367;
  t6091 = -1.*t871*t4845;
  t6108 = t6088 + t6091;
  t2031 = t871*t1504;
  t2115 = t47*t2113;
  t2116 = t2031 + t2115;
  t6750 = -1.*t49;
  t6751 = 1. + t6750;
  t6752 = 0.50321*t6751;
  t6754 = 0.19821*t49;
  t6755 = t6752 + t6754;
  t6785 = -1.*t1313;
  t6786 = 1. + t6785;
  t6787 = 0.15121*t6786;
  t6788 = -1.*t216;
  t6789 = 1. + t6788;
  t6790 = 0.28121*t6789;
  t6791 = t216*t6755;
  t6792 = -0.305*t157*t462;
  t6793 = t6790 + t6791 + t6792;
  t6746 = 0.28121*t157;
  t6756 = -1.*t6755*t157;
  t6781 = -0.305*t216*t462;
  t6782 = t6746 + t6756 + t6781;
  t6794 = t1313*t6793;
  t6795 = t6787 + t6794;
  t6796 = t1006*t6795;
  t6797 = 0.15121*t1313;
  t6798 = -0.15121*t1687;
  t6799 = t1687*t6793;
  t6800 = t6787 + t6797 + t6798 + t6799;
  t6801 = -1.*t1628*t6800;
  t6802 = t6796 + t6801;
  t6806 = t871*t6782;
  t6807 = t47*t6802;
  t6808 = t6806 + t6807;
  t6784 = -1.*t871*t6782;
  t6803 = -1.*t47*t6802;
  t6804 = t6784 + t6803;
  t6833 = t47*t6782;
  t6835 = -1.*t871*t6802;
  t6843 = t6833 + t6835;
  t6812 = t1628*t6795;
  t6822 = t1006*t6800;
  t6823 = t6812 + t6822;
  t6824 = -1.*t5606*t6823;
  t6829 = -1.*t47*t2142*t6808;
  t6859 = t871*t2142*t6843;
  t6867 = t6824 + t6829 + t6859;
  t7201 = -1.*t1628*t6795;
  t7203 = -1.*t1006*t6800;
  t7215 = t7201 + t7203;
  t7111 = t5579*t6823;
  t7116 = t2116*t6808;
  t7117 = t2194*t6843;
  t7127 = t7111 + t7116 + t7117;
  t7162 = t47*t2206*t6867;
  t7163 = Power(t47,2);
  t7222 = Power(t871,2);
  t7981 = -0.15121*t1313;
  t7982 = t7981 + t6794;
  t7987 = -1.*t1628*t7982;
  t7991 = 0.15121*t1687;
  t7992 = -1.*t1687*t6793;
  t7993 = t7991 + t7992;
  t7994 = t1006*t7993;
  t7995 = t7987 + t7994;
  t7242 = -1.*t2142*t6823;
  t7251 = -1.*t47*t2177*t6808;
  t7252 = t871*t2177*t6843;
  t7999 = t1006*t7982;
  t8000 = t1628*t7993;
  t8001 = t7999 + t8000;
  t7275 = t2113*t6823;
  t7341 = t47*t2206*t6808;
  t7344 = -1.*t871*t2206*t6843;
  t7363 = t47*t2177*t7127;
  t8021 = 0.28121*t216;
  t8023 = -1.*t216*t6755;
  t8024 = 0.305*t157*t462;
  t8027 = t8021 + t8023 + t8024;
  t8034 = t1006*t1313*t6782;
  t8035 = -1.*t1628*t1687*t6782;
  t8036 = t8034 + t8035;
  t2341 = t871*t470;
  t2343 = t47*t1718;
  t2397 = t2341 + t2343;
  t8015 = t1313*t1628*t6782;
  t8016 = t1006*t1687*t6782;
  t8017 = t8015 + t8016;
  t8028 = t871*t8027;
  t8039 = t47*t8036;
  t8040 = t8028 + t8039;
  t8062 = t47*t8027;
  t8066 = -1.*t871*t8036;
  t8070 = t8062 + t8066;
  t8130 = -0.305*t49*t157;
  t8131 = 0.305*t216*t462;
  t8132 = t8130 + t8131;
  t8139 = -0.305*t216*t49;
  t8141 = t8139 + t6792;
  t8143 = t1006*t1313*t8132;
  t8144 = -1.*t1628*t1687*t8132;
  t8145 = t8143 + t8144;
  t2474 = t871*t2043;
  t2765 = t47*t2675;
  t2789 = t2474 + t2765;
  t8134 = t1313*t1628*t8132;
  t8135 = t1006*t1687*t8132;
  t8136 = t8134 + t8135;
  t8142 = t871*t8141;
  t8149 = t47*t8145;
  t8150 = t8142 + t8149;
  t8152 = t47*t8141;
  t8153 = -1.*t871*t8145;
  t8154 = t8152 + t8153;
  t8118 = t4886*t6823;
  t8121 = t2397*t6808;
  t8123 = t1748*t6843;
  t8839 = -1.*t5579*t6823;
  t8840 = -1.*t2116*t6808;
  t8845 = -1.*t2194*t6843;
  t8849 = t8839 + t8840 + t8845;
  t8868 = t8118 + t8121 + t8123;
  t8892 = -1.*t2113*t6823;
  t8896 = -1.*t47*t2206*t6808;
  t8897 = t871*t2206*t6843;
  t8900 = t1718*t6823;
  t8907 = t47*t1930*t6808;
  t8908 = -1.*t871*t1930*t6843;
  t8912 = t47*t1930*t8849;
  t8913 = t47*t2206*t8868;
  t1960 = t871*t1952;
  t1999 = t47*t1997;
  t2001 = t1960 + t1999;
  t8954 = -1.*t4886*t6823;
  t8955 = -1.*t2397*t6808;
  t8960 = -1.*t1748*t6843;
  t9033 = t5606*t6823;
  t9034 = t47*t2142*t6808;
  t9035 = -1.*t871*t2142*t6843;
  t9037 = t9033 + t9034 + t9035;
  t9046 = t8954 + t8955 + t8960;
  t9050 = t47*t1930*t9037;
  t9053 = t2142*t6823;
  t9055 = t47*t2177*t6808;
  t9056 = -1.*t871*t2177*t6843;
  t9059 = -1.*t1718*t6823;
  t9063 = -1.*t47*t1930*t6808;
  t9064 = t871*t1930*t6843;
  t9067 = t47*t2177*t9046;
  t4410 = t4402*t871;
  t4521 = t47*t4502;
  t4549 = t4410 + t4521;
  t10104 = -1.*t2791;
  t10106 = 1. + t10104;
  t10113 = -0.50321*t10106;
  t10123 = -0.19821*t2791;
  t10124 = t10113 + t10123;
  t10322 = -1.*t2996;
  t10357 = 1. + t10322;
  t10387 = -0.15121*t10357;
  t10391 = -1.*t2907;
  t10427 = 1. + t10391;
  t10486 = -0.28121*t10427;
  t10513 = t2907*t10124;
  t10521 = 0.305*t2792*t2948;
  t10539 = t10486 + t10513 + t10521;
  t10101 = 0.28121*t2792;
  t10145 = t10124*t2792;
  t10180 = -0.305*t2907*t2948;
  t10271 = t10101 + t10145 + t10180;
  t10600 = t2996*t10539;
  t10635 = t10387 + t10600;
  t10637 = t1006*t10635;
  t10670 = -0.15121*t2996;
  t10672 = 0.15121*t3915;
  t10674 = t3915*t10539;
  t10684 = t10387 + t10670 + t10672 + t10674;
  t10745 = -1.*t10684*t1628;
  t10758 = t10637 + t10745;
  t10877 = t10271*t871;
  t10925 = t47*t10758;
  t11032 = t10877 + t10925;
  t10309 = -1.*t10271*t871;
  t10770 = -1.*t47*t10758;
  t10828 = t10309 + t10770;
  t11347 = t47*t10271;
  t11351 = -1.*t871*t10758;
  t11404 = t11347 + t11351;
  t11125 = t1006*t10684;
  t11171 = t10635*t1628;
  t11186 = t11125 + t11171;
  t11288 = -1.*t5981*t11186;
  t11330 = -1.*t47*t4571*t11032;
  t11486 = t871*t4571*t11404;
  t11517 = t11288 + t11330 + t11486;
  t12050 = -1.*t1006*t10684;
  t12069 = -1.*t10635*t1628;
  t12080 = t12050 + t12069;
  t11712 = t5881*t11186;
  t11749 = t4549*t11032;
  t11803 = t4709*t11404;
  t11819 = t11712 + t11749 + t11803;
  t12004 = t47*t4745*t11517;
  t12131 = -1.*t4571*t11186;
  t12452 = -0.15121*t3915;
  t12472 = -1.*t3915*t10539;
  t12490 = t12452 + t12472;
  t12506 = t1006*t12490;
  t12511 = 0.15121*t2996;
  t12527 = t12511 + t10600;
  t12541 = -1.*t12527*t1628;
  t12542 = t12506 + t12541;
  t12181 = -1.*t47*t4648*t11032;
  t12245 = t871*t4648*t11404;
  t12277 = t4502*t11186;
  t12574 = t1006*t12527;
  t12579 = t12490*t1628;
  t12734 = t12574 + t12579;
  t12302 = t47*t4745*t11032;
  t12328 = -1.*t871*t4745*t11404;
  t12424 = t47*t4648*t11819;
  t12850 = -0.28121*t2792;
  t12851 = -1.*t10124*t2792;
  t12857 = 0.305*t2907*t2948;
  t12862 = t12850 + t12851 + t12857;
  t12928 = 0.28121*t2907;
  t12929 = t12928 + t10513 + t10521;
  t13038 = t2996*t1006*t12862;
  t13061 = -1.*t3915*t12862*t1628;
  t13070 = t13038 + t13061;
  t4783 = t2971*t871;
  t4794 = t47*t3934;
  t4836 = t4783 + t4794;
  t12863 = t1006*t3915*t12862;
  t12901 = t2996*t12862*t1628;
  t12912 = t12863 + t12901;
  t12975 = t12929*t871;
  t13077 = t47*t13070;
  t13090 = t12975 + t13077;
  t13096 = t47*t12929;
  t13101 = -1.*t871*t13070;
  t13103 = t13096 + t13101;
  t13229 = 0.305*t2791*t2792;
  t13241 = t13229 + t10180;
  t13351 = -0.305*t2907*t2791;
  t13358 = -0.305*t2792*t2948;
  t13372 = t13351 + t13358;
  t13403 = t2996*t1006*t13241;
  t13405 = -1.*t3915*t13241*t1628;
  t13410 = t13403 + t13405;
  t4837 = t4367*t871;
  t4854 = t47*t4845;
  t4860 = t4837 + t4854;
  t13248 = t1006*t3915*t13241;
  t13268 = t2996*t13241*t1628;
  t13274 = t13248 + t13268;
  t13377 = t13372*t871;
  t13418 = t47*t13410;
  t13422 = t13377 + t13418;
  t13477 = t47*t13372;
  t13484 = -1.*t871*t13410;
  t13487 = t13477 + t13484;
  t13134 = t5697*t11186;
  t13140 = t4836*t11032;
  t13185 = t3941*t11404;
  t13635 = -1.*t5881*t11186;
  t13639 = -1.*t4549*t11032;
  t13649 = -1.*t4709*t11404;
  t13666 = t13635 + t13639 + t13649;
  t13716 = t13134 + t13140 + t13185;
  t13758 = -1.*t4502*t11186;
  t13796 = -1.*t47*t4745*t11032;
  t13798 = t871*t4745*t11404;
  t13911 = t3934*t11186;
  t13949 = t47*t4243*t11032;
  t13950 = -1.*t871*t4243*t11404;
  t14048 = t47*t4243*t13666;
  t14060 = t47*t4745*t13716;
  t4272 = t3803*t871;
  t4388 = t47*t4385;
  t4390 = t4272 + t4388;
  t14277 = -1.*t5697*t11186;
  t14302 = -1.*t4836*t11032;
  t14317 = -1.*t3941*t11404;
  t14542 = t5981*t11186;
  t14545 = t47*t4571*t11032;
  t14546 = -1.*t871*t4571*t11404;
  t14554 = t14542 + t14545 + t14546;
  t14595 = t14277 + t14302 + t14317;
  t14696 = t47*t4243*t14554;
  t14724 = t4571*t11186;
  t14732 = t47*t4648*t11032;
  t14739 = -1.*t871*t4648*t11404;
  t14834 = -1.*t3934*t11186;
  t14857 = -1.*t47*t4243*t11032;
  t14860 = t871*t4243*t11404;
  t14884 = t47*t4648*t14595;
  t7250 = -1.*t5606*t6802;
  t7315 = t5579*t6802;
  t15127 = -1.*t2142*t6802;
  t15144 = t6824 + t15127;
  t15146 = t2113*t15144;
  t8003 = -1.*t5606*t8001;
  t15158 = -1.*t2177*t6802;
  t8010 = t5579*t8001;
  t15193 = t2206*t6802;
  t15228 = t6782*t1504;
  t15230 = t2113*t6802;
  t15231 = t15228 + t7111 + t15230;
  t15233 = t2142*t15231;
  t8018 = -1.*t5606*t8017;
  t8114 = t5579*t8017;
  t8137 = -1.*t5606*t8136;
  t8163 = t5579*t8136;
  t8168 = t5656*t6823;
  t8895 = -1.*t5579*t6802;
  t8901 = t4886*t6802;
  t15344 = t6782*t470;
  t15352 = t1718*t6802;
  t8918 = -1.*t5579*t8001;
  t15411 = -1.*t2206*t6802;
  t15420 = -1.*t6782*t1504;
  t15427 = -1.*t2113*t6802;
  t15431 = t15420 + t8839 + t15427;
  t15433 = t1718*t15431;
  t8922 = t4886*t8001;
  t15437 = t1930*t6802;
  t15447 = t15344 + t8118 + t15352;
  t15448 = t2113*t15447;
  t8932 = t8017*t4886;
  t8934 = t5550*t6823;
  t8948 = -1.*t5579*t8017;
  t8969 = t8136*t4886;
  t8974 = -1.*t5579*t8136;
  t8978 = -1.*t5656*t6823;
  t9054 = t5606*t6802;
  t9060 = -1.*t4886*t6802;
  t15508 = -1.*t6782*t470;
  t15516 = -1.*t1718*t6802;
  t15564 = t2142*t6802;
  t15565 = t9033 + t15564;
  t15566 = t1718*t15565;
  t9071 = t5606*t8001;
  t15575 = t2177*t6802;
  t9075 = -1.*t4886*t8001;
  t15586 = -1.*t1930*t6802;
  t15599 = t15508 + t8954 + t15516;
  t15601 = t2142*t15599;
  t9083 = t5606*t8017;
  t9093 = -1.*t8017*t4886;
  t9094 = -1.*t5550*t6823;
  t9454 = t5606*t8136;
  t9952 = -1.*t8136*t4886;
  t12161 = -1.*t5981*t10758;
  t12281 = t5881*t10758;
  t15664 = -1.*t4571*t10758;
  t15668 = t11288 + t15664;
  t15671 = t4502*t15668;
  t12762 = -1.*t5981*t12734;
  t15676 = -1.*t4648*t10758;
  t12801 = t5881*t12734;
  t15688 = t4745*t10758;
  t15695 = t10271*t4402;
  t15699 = t4502*t10758;
  t15700 = t15695 + t11712 + t15699;
  t15701 = t4571*t15700;
  t12921 = -1.*t5981*t12912;
  t13131 = t12912*t5881;
  t13331 = -1.*t5981*t13274;
  t13520 = t13274*t5881;
  t13523 = t6074*t11186;
  t13768 = -1.*t5881*t10758;
  t13913 = t5697*t10758;
  t15761 = t10271*t2971;
  t15767 = t3934*t10758;
  t14073 = -1.*t5881*t12734;
  t15794 = -1.*t4745*t10758;
  t15799 = -1.*t10271*t4402;
  t15800 = -1.*t4502*t10758;
  t15801 = t15799 + t13635 + t15800;
  t15802 = t3934*t15801;
  t14144 = t5697*t12734;
  t15804 = t4243*t10758;
  t15807 = t15761 + t13134 + t15767;
  t15809 = t4502*t15807;
  t14218 = t12912*t5697;
  t14233 = t5815*t11186;
  t14275 = -1.*t12912*t5881;
  t14371 = t13274*t5697;
  t14430 = -1.*t13274*t5881;
  t14437 = -1.*t6074*t11186;
  t14728 = t5981*t10758;
  t14840 = -1.*t5697*t10758;
  t15831 = -1.*t10271*t2971;
  t15845 = -1.*t3934*t10758;
  t15981 = t4571*t10758;
  t15985 = t14542 + t15981;
  t15986 = t3934*t15985;
  t14920 = t5981*t12734;
  t15988 = t4648*t10758;
  t14942 = -1.*t5697*t12734;
  t15994 = -1.*t4243*t10758;
  t16043 = t15831 + t14277 + t15845;
  t16062 = t4571*t16043;
  t14955 = t5981*t12912;
  t14976 = -1.*t12912*t5697;
  t14981 = -1.*t5815*t11186;
  t15067 = t5981*t13274;
  t15105 = -1.*t13274*t5697;
  t16275 = t1687*t6795;
  t16276 = -1.*t1313*t6800;
  t16282 = t16275 + t16276;
  t15491 = t6782*t1952;
  t15495 = t470*t8027;
  t16455 = Power(t1313,2);
  t16466 = Power(t1687,2);
  t15509 = -1.*t8027*t1504;
  t16445 = -1.*t1313*t2043*t6795;
  t16447 = -1.*t1687*t2043*t6800;
  t16453 = t15420 + t16445 + t16447;
  t15529 = t470*t8141;
  t15539 = -1.*t2043*t6782;
  t15544 = -1.*t8141*t1504;
  t16499 = t1313*t1504*t6795;
  t16500 = t1687*t1504*t6800;
  t16509 = t15344 + t16499 + t16500;
  t16622 = -1.*t1687*t6795;
  t16623 = t1313*t6800;
  t16624 = t16622 + t16623;
  t16647 = -1.*t3915*t10635;
  t16648 = t2996*t10684;
  t16650 = t16647 + t16648;
  t15823 = t10271*t3803;
  t15824 = t2971*t12929;
  t16705 = Power(t2996,2);
  t16708 = Power(t3915,2);
  t15834 = -1.*t12929*t4402;
  t16727 = -1.*t2996*t2971*t10635;
  t16730 = -1.*t3915*t2971*t10684;
  t16731 = t15799 + t16727 + t16730;
  t15946 = t2971*t13372;
  t16755 = t2996*t3803*t10635;
  t16756 = t3915*t3803*t10684;
  t16758 = t15761 + t16755 + t16756;
  t15963 = -1.*t4367*t10271;
  t15964 = -1.*t13372*t4402;
  t16821 = t3915*t10635;
  t16824 = -1.*t2996*t10684;
  t16825 = t16821 + t16824;
  t16830 = -1.*t2043*t6793;
  t16831 = t16830 + t15420;
  t16837 = t6793*t1504;
  t16840 = t15344 + t16837;
  t16877 = 0.15121*t1952;
  t16884 = 0.15121*t1504;
  t16885 = t16877 + t16884;
  t16905 = -0.15121*t4367;
  t16906 = -0.15121*t2971;
  t16907 = t16905 + t16906;
  t16911 = t3803*t10539;
  t16914 = t15761 + t16911;
  t16927 = -1.*t2971*t10539;
  t16928 = t16927 + t15799;
  p_output1[0]=t1748;
  p_output1[1]=t1936;
  p_output1[2]=t1936;
  p_output1[3]=t2001;
  p_output1[4]=t2116;
  p_output1[5]=-1.*t2142*t871;
  p_output1[6]=t2178;
  p_output1[7]=t2178;
  p_output1[8]=t2194;
  p_output1[9]=t2210;
  p_output1[10]=t2210;
  p_output1[11]=t2397;
  p_output1[12]=t2789;
  p_output1[13]=t3941;
  p_output1[14]=t4245;
  p_output1[15]=t4245;
  p_output1[16]=t4390;
  p_output1[17]=t4549;
  p_output1[18]=-1.*t4571*t871;
  p_output1[19]=t4670;
  p_output1[20]=t4670;
  p_output1[21]=t4709;
  p_output1[22]=t4758;
  p_output1[23]=t4758;
  p_output1[24]=t4836;
  p_output1[25]=t4860;
  p_output1[26]=-1.*t4868*t4886 - 1.*t1748*t4968;
  p_output1[27]=-1.*t4868*t5466;
  p_output1[28]=t5534;
  p_output1[29]=t5534;
  p_output1[30]=t4968*t5550 - 1.*t4868*t5558;
  p_output1[31]=t5586;
  p_output1[32]=-1.*t4868*t5606 + t2142*t4968*t871;
  p_output1[33]=t2142*t47*t4868;
  p_output1[34]=t5624;
  p_output1[35]=t5624;
  p_output1[36]=-1.*t2194*t4968 - 1.*t4868*t5579;
  p_output1[37]=-1.*t4868*t5637;
  p_output1[38]=t5644;
  p_output1[39]=t5644;
  p_output1[40]=t5650;
  p_output1[41]=t4968*t5656 - 1.*t4868*t5663;
  p_output1[42]=-1.*t3941*t4968 - 1.*t4868*t5697;
  p_output1[43]=-1.*t4868*t5724;
  p_output1[44]=t5806;
  p_output1[45]=t5806;
  p_output1[46]=t4968*t5815 - 1.*t4868*t5831;
  p_output1[47]=t5926;
  p_output1[48]=-1.*t4868*t5981 + t4571*t4968*t871;
  p_output1[49]=t4571*t47*t4868;
  p_output1[50]=t6026;
  p_output1[51]=t6026;
  p_output1[52]=-1.*t4709*t4968 - 1.*t4868*t5881;
  p_output1[53]=-1.*t4868*t6043;
  p_output1[54]=t6051;
  p_output1[55]=t6051;
  p_output1[56]=t6056;
  p_output1[57]=t4968*t6074 - 1.*t4868*t6108;
  p_output1[58]=t5650;
  p_output1[59]=t4968*t5466;
  p_output1[60]=t6438;
  p_output1[61]=t6438;
  p_output1[62]=t4868*t5550 + t4968*t5558;
  p_output1[63]=t2194*t4968 + t4868*t5579;
  p_output1[64]=t4968*t5606 + t2142*t4868*t871;
  p_output1[65]=-1.*t2142*t47*t4968;
  p_output1[66]=t6658;
  p_output1[67]=t6658;
  p_output1[68]=t5586;
  p_output1[69]=t4968*t5637;
  p_output1[70]=t6682;
  p_output1[71]=t6682;
  p_output1[72]=t4868*t4886 + t1748*t4968;
  p_output1[73]=t4868*t5656 + t4968*t5663;
  p_output1[74]=t6056;
  p_output1[75]=t4968*t5724;
  p_output1[76]=t6696;
  p_output1[77]=t6696;
  p_output1[78]=t4868*t5815 + t4968*t5831;
  p_output1[79]=t4709*t4968 + t4868*t5881;
  p_output1[80]=t4968*t5981 + t4571*t4868*t871;
  p_output1[81]=-1.*t4571*t47*t4968;
  p_output1[82]=t6715;
  p_output1[83]=t6715;
  p_output1[84]=t5926;
  p_output1[85]=t4968*t6043;
  p_output1[86]=t6729;
  p_output1[87]=t6729;
  p_output1[88]=t3941*t4968 + t4868*t5697;
  p_output1[89]=t4868*t6074 + t4968*t6108;
  p_output1[90]=t2142*t47*(t2194*t6804 + t2194*t6808 + t2116*t6843 + t5637*t6843) + t2194*t6867 - 1.*t2142*t7127*t871 + t2116*(t2142*t6804*t871 + t2142*t6808*t871);
  p_output1[91]=t7162 + t2116*(-1.*t2142*t7163*t7215 - 1.*t2142*t7215*t7222 + t7242 + t7250 + t7251 + t7252) + t7363 + t2142*t47*(t2116*t47*t7215 + t7275 + t7315 + t7341 + t7344 - 1.*t2194*t7215*t871);
  p_output1[92]=t7162 + t7363 + t2116*(t7242 + t7251 + t7252 - 1.*t2142*t7163*t7995 - 1.*t2142*t7222*t7995 + t8003) + t2142*t47*(t7275 + t7341 + t7344 + t2116*t47*t7995 + t8010 - 1.*t2194*t7995*t871);
  p_output1[93]=t2397*t6867 + t2142*t47*(t2116*t8040 + t2194*t8070 + t8114 + t8118 + t8121 + t8123) + t2116*(t8018 - 1.*t2142*t47*t8040 + t2142*t8070*t871);
  p_output1[94]=t2789*t6867 + t2142*t47*(t2789*t6808 + t5663*t6843 + t2116*t8150 + t2194*t8154 + t8163 + t8168) + t2116*(t8137 - 1.*t2142*t47*t8150 + t2142*t8154*t871);
  p_output1[95]=t2116*(t1748*t6804 + t1748*t6808 + t2397*t6843 + t5466*t6843) + t2397*(-1.*t2194*t6804 - 1.*t2194*t6808 - 1.*t2116*t6843 - 1.*t5637*t6843) + t1748*t8849 + t2194*t8868;
  p_output1[96]=t2397*(-1.*t2116*t47*t7215 + t2194*t7215*t871 + t8892 + t8895 + t8896 + t8897) + t2116*(t2397*t47*t7215 - 1.*t1748*t7215*t871 + t8900 + t8901 + t8907 + t8908) + t8912 + t8913;
  p_output1[97]=t8912 + t8913 + t2397*(-1.*t2116*t47*t7995 + t2194*t7995*t871 + t8892 + t8896 + t8897 + t8918) + t2116*(t2397*t47*t7995 - 1.*t1748*t7995*t871 + t8900 + t8907 + t8908 + t8922);
  p_output1[98]=t2001*t8849 + t2397*t8868 + t2116*(t2001*t6808 + t5558*t6843 + t2397*t8040 + t1748*t8070 + t8932 + t8934) + t2397*(-1.*t2116*t8040 - 1.*t2194*t8070 + t8948 + t8954 + t8955 + t8960);
  p_output1[99]=t2116*t8849 + t2789*t8868 + t2116*(t7111 + t7116 + t7117 + t2397*t8150 + t1748*t8154 + t8969) + t2397*(-1.*t2789*t6808 - 1.*t5663*t6843 - 1.*t2116*t8150 - 1.*t2194*t8154 + t8974 + t8978);
  p_output1[100]=t2142*t47*(-1.*t1748*t6804 - 1.*t1748*t6808 - 1.*t2397*t6843 - 1.*t5466*t6843) + t2397*(-1.*t2142*t6804*t871 - 1.*t2142*t6808*t871) + t1748*t9037 - 1.*t2142*t871*t9046;
  p_output1[101]=t9050 + t2397*(t2142*t7163*t7215 + t2142*t7215*t7222 + t9053 + t9054 + t9055 + t9056) + t2142*t47*(-1.*t2397*t47*t7215 + t1748*t7215*t871 + t9059 + t9060 + t9063 + t9064) + t9067;
  p_output1[102]=t9050 + t9067 + t2397*(t2142*t7163*t7995 + t2142*t7222*t7995 + t9053 + t9055 + t9056 + t9071) + t2142*t47*(-1.*t2397*t47*t7995 + t1748*t7995*t871 + t9059 + t9063 + t9064 + t9075);
  p_output1[103]=t2001*t9037 + t2397*(t2142*t47*t8040 - 1.*t2142*t8070*t871 + t9083) + t2142*t47*(-1.*t2001*t6808 - 1.*t5558*t6843 - 1.*t2397*t8040 - 1.*t1748*t8070 + t9093 + t9094);
  p_output1[104]=t2116*t9037 + t2397*(t2142*t47*t8150 - 1.*t2142*t8154*t871 + t9454) + t2142*t47*(-1.*t2397*t8150 - 1.*t1748*t8154 + t8839 + t8840 + t8845 + t9952);
  p_output1[105]=t11517*t4709 + t4571*t47*(t11404*t4549 + t10828*t4709 + t11032*t4709 + t11404*t6043) - 1.*t11819*t4571*t871 + t4549*(t10828*t4571*t871 + t11032*t4571*t871);
  p_output1[106]=t12004 + t12424 + t4549*(t12131 + t12161 + t12181 + t12245 - 1.*t12080*t4571*t7163 - 1.*t12080*t4571*t7222) + t4571*t47*(t12277 + t12281 + t12302 + t12328 + t12080*t4549*t47 - 1.*t12080*t4709*t871);
  p_output1[107]=t12004 + t12424 + t4549*(t12131 + t12181 + t12245 + t12762 - 1.*t12542*t4571*t7163 - 1.*t12542*t4571*t7222) + t4571*t47*(t12277 + t12302 + t12328 + t12801 + t12542*t4549*t47 - 1.*t12542*t4709*t871);
  p_output1[108]=t4571*t47*(t13131 + t13134 + t13140 + t13185 + t13090*t4549 + t13103*t4709) + t11517*t4836 + t4549*(t12921 - 1.*t13090*t4571*t47 + t13103*t4571*t871);
  p_output1[109]=t11517*t4860 + t4571*t47*(t13520 + t13523 + t13422*t4549 + t13487*t4709 + t11032*t4860 + t11404*t6108) + t4549*(t13331 - 1.*t13422*t4571*t47 + t13487*t4571*t871);
  p_output1[110]=t13666*t3941 + t13716*t4709 + t4549*(t10828*t3941 + t11032*t3941 + t11404*t4836 + t11404*t5724) + t4836*(-1.*t11404*t4549 - 1.*t10828*t4709 - 1.*t11032*t4709 - 1.*t11404*t6043);
  p_output1[111]=t14048 + t14060 + t4549*(t13911 + t13913 + t13949 + t13950 + t12080*t47*t4836 - 1.*t12080*t3941*t871) + t4836*(t13758 + t13768 + t13796 + t13798 - 1.*t12080*t4549*t47 + t12080*t4709*t871);
  p_output1[112]=t14048 + t14060 + t4549*(t13911 + t13949 + t13950 + t14144 + t12542*t47*t4836 - 1.*t12542*t3941*t871) + t4836*(t13758 + t13796 + t13798 + t14073 - 1.*t12542*t4549*t47 + t12542*t4709*t871);
  p_output1[113]=t13666*t4390 + t13716*t4836 + (t14275 + t14277 + t14302 + t14317 - 1.*t13090*t4549 - 1.*t13103*t4709)*t4836 + t4549*(t14218 + t14233 + t13103*t3941 + t11032*t4390 + t13090*t4836 + t11404*t5831);
  p_output1[114]=t13666*t4549 + t4549*(t11712 + t11749 + t11803 + t14371 + t13487*t3941 + t13422*t4836) + t13716*t4860 + t4836*(t14430 + t14437 - 1.*t13422*t4549 - 1.*t13487*t4709 - 1.*t11032*t4860 - 1.*t11404*t6108);
  p_output1[115]=t14554*t3941 + t4571*t47*(-1.*t10828*t3941 - 1.*t11032*t3941 - 1.*t11404*t4836 - 1.*t11404*t5724) - 1.*t14595*t4571*t871 + t4836*(-1.*t10828*t4571*t871 - 1.*t11032*t4571*t871);
  p_output1[116]=t14696 + t14884 + t4836*(t14724 + t14728 + t14732 + t14739 + t12080*t4571*t7163 + t12080*t4571*t7222) + t4571*t47*(t14834 + t14840 + t14857 + t14860 - 1.*t12080*t47*t4836 + t12080*t3941*t871);
  p_output1[117]=t14696 + t14884 + t4836*(t14724 + t14732 + t14739 + t14920 + t12542*t4571*t7163 + t12542*t4571*t7222) + t4571*t47*(t14834 + t14857 + t14860 + t14942 - 1.*t12542*t47*t4836 + t12542*t3941*t871);
  p_output1[118]=t14554*t4390 + t4571*t47*(t14976 + t14981 - 1.*t13103*t3941 - 1.*t11032*t4390 - 1.*t13090*t4836 - 1.*t11404*t5831) + t4836*(t14955 + t13090*t4571*t47 - 1.*t13103*t4571*t871);
  p_output1[119]=t14554*t4549 + t4571*t47*(t13635 + t13639 + t13649 + t15105 - 1.*t13487*t3941 - 1.*t13422*t4836) + t4836*(t15067 + t13422*t4571*t47 - 1.*t13487*t4571*t871);
  p_output1[120]=t15146 + t15233 + t5579*(t15158 - 1.*t2142*t7215 + t7242 + t7250) + t5606*(t15193 + t2113*t7215 + t7275 + t7315);
  p_output1[121]=t15146 + t15233 + t5579*(t15158 + t7242 - 1.*t2142*t7995 + t8003) + t5606*(t15193 + t7275 + t2113*t7995 + t8010);
  p_output1[122]=t15144*t4886 + t5579*(t8018 - 1.*t2142*t8036) + t5606*(t15344 + t15352 + t1504*t8027 + t2113*t8036 + t8114 + t8118);
  p_output1[123]=t15144*t5656 + t5579*(t8137 - 1.*t2142*t8145) + t5606*(t2043*t6782 + t2675*t6802 + t1504*t8141 + t2113*t8145 + t8163 + t8168);
  p_output1[124]=t15433 + t15448 + t4886*(t15411 - 1.*t2113*t7215 + t8892 + t8895) + t5579*(t15437 + t1718*t7215 + t8900 + t8901);
  p_output1[125]=t15433 + t15448 + t4886*(t15411 - 1.*t2113*t7995 + t8892 + t8918) + t5579*(t15437 + t1718*t7995 + t8900 + t8922);
  p_output1[126]=t15447*t4886 + t15431*t5550 + t5579*(t15491 + t15495 + t1997*t6802 + t1718*t8036 + t8932 + t8934) + t4886*(t15508 + t15509 + t15516 - 1.*t2113*t8036 + t8948 + t8954);
  p_output1[127]=t15431*t5579 + t15447*t5656 + t5579*(t15228 + t15230 + t15529 + t7111 + t1718*t8145 + t8969) + t4886*(t15539 + t15544 - 1.*t2675*t6802 - 1.*t2113*t8145 + t8974 + t8978);
  p_output1[128]=t15566 + t15601 + t4886*(t15575 + t2142*t7215 + t9053 + t9054) + t5606*(t15586 - 1.*t1718*t7215 + t9059 + t9060);
  p_output1[129]=t15566 + t15601 + t4886*(t15575 + t2142*t7995 + t9053 + t9071) + t5606*(t15586 - 1.*t1718*t7995 + t9059 + t9075);
  p_output1[130]=t15565*t5550 + t4886*(t2142*t8036 + t9083) + t5606*(-1.*t1952*t6782 - 1.*t1997*t6802 - 1.*t470*t8027 - 1.*t1718*t8036 + t9093 + t9094);
  p_output1[131]=t15565*t5579 + t4886*(t2142*t8145 + t9454) + t5606*(t15420 + t15427 - 1.*t470*t8141 - 1.*t1718*t8145 + t8839 + t9952);
  p_output1[132]=t15671 + t15701 + (t12131 + t12161 + t15676 - 1.*t12080*t4571)*t5881 + (t12277 + t12281 + t15688 + t12080*t4502)*t5981;
  p_output1[133]=t15671 + t15701 + (t12131 + t12762 + t15676 - 1.*t12542*t4571)*t5881 + (t12277 + t12801 + t15688 + t12542*t4502)*t5981;
  p_output1[134]=t15668*t5697 + (t12921 - 1.*t13070*t4571)*t5881 + (t13131 + t13134 + t15761 + t15767 + t12929*t4402 + t13070*t4502)*t5981;
  p_output1[135]=(t13331 - 1.*t13410*t4571)*t5881 + (t13520 + t13523 + t10271*t4367 + t13372*t4402 + t13410*t4502 + t10758*t4845)*t5981 + t15668*t6074;
  p_output1[136]=t15802 + t15809 + (t13758 + t13768 + t15794 - 1.*t12080*t4502)*t5697 + (t13911 + t13913 + t15804 + t12080*t3934)*t5881;
  p_output1[137]=t15802 + t15809 + (t13758 + t14073 + t15794 - 1.*t12542*t4502)*t5697 + (t13911 + t14144 + t15804 + t12542*t3934)*t5881;
  p_output1[138]=t15807*t5697 + (t14275 + t14277 + t15831 + t15834 + t15845 - 1.*t13070*t4502)*t5697 + t15801*t5815 + (t14218 + t14233 + t15823 + t15824 + t13070*t3934 + t10758*t4385)*t5881;
  p_output1[139]=(t14430 + t14437 + t15963 + t15964 - 1.*t13410*t4502 - 1.*t10758*t4845)*t5697 + t15801*t5881 + (t11712 + t14371 + t15695 + t15699 + t15946 + t13410*t3934)*t5881 + t15807*t6074;
  p_output1[140]=t15986 + t16062 + (t14724 + t14728 + t15988 + t12080*t4571)*t5697 + (t14834 + t14840 + t15994 - 1.*t12080*t3934)*t5981;
  p_output1[141]=t15986 + t16062 + (t14724 + t14920 + t15988 + t12542*t4571)*t5697 + (t14834 + t14942 + t15994 - 1.*t12542*t3934)*t5981;
  p_output1[142]=(t14955 + t13070*t4571)*t5697 + t15985*t5815 + (t14976 + t14981 - 1.*t12929*t2971 - 1.*t10271*t3803 - 1.*t13070*t3934 - 1.*t10758*t4385)*t5981;
  p_output1[143]=(t15067 + t13410*t4571)*t5697 + t15985*t5881 + (t13635 + t15105 + t15799 + t15800 - 1.*t13372*t2971 - 1.*t13410*t3934)*t5981;
  p_output1[144]=t1504*(t1313*t6795 + t1687*t6800 - 1.*t1313*t7982 + t1687*t7993);
  p_output1[145]=t16282*t470;
  p_output1[146]=t16282*t2043;
  p_output1[147]=t1504*(-1.*t1504*t1687*t6795 + t1313*t1504*t6800 + t1504*t1687*t7982 + t1313*t1504*t7993) + t470*(t1687*t2043*t6795 - 1.*t1313*t2043*t6800 - 1.*t1687*t2043*t7982 - 1.*t1313*t2043*t7993);
  p_output1[148]=t16453*t1952 + t16509*t470 + t470*(t15508 + t15509 - 1.*t16455*t2043*t6782 - 1.*t16466*t2043*t6782 - 1.*t1313*t1504*t6795 - 1.*t1504*t1687*t6800) + t1504*(t15491 + t15495 + t1504*t16455*t6782 + t1504*t16466*t6782 + t1313*t470*t6795 + t1687*t470*t6800);
  p_output1[149]=t1504*t16453 + t16509*t2043 + t1504*(t15228 + t15529 + t1313*t2043*t6795 + t1687*t2043*t6800 + t1504*t16455*t8132 + t1504*t16466*t8132) + t470*(t15539 + t15544 - 1.*t1313*t1952*t6795 - 1.*t1687*t1952*t6800 - 1.*t16455*t2043*t8132 - 1.*t16466*t2043*t8132);
  p_output1[150]=t470*(-1.*t1313*t6795 - 1.*t1687*t6800 + t1313*t7982 - 1.*t1687*t7993);
  p_output1[151]=t16624*t1952;
  p_output1[152]=t1504*t16624;
  p_output1[153]=(-1.*t10635*t2996 + t12527*t2996 - 1.*t10684*t3915 - 1.*t12490*t3915)*t4402;
  p_output1[154]=t16650*t2971;
  p_output1[155]=t16650*t4367;
  p_output1[156]=t2971*(-1.*t10684*t2971*t2996 - 1.*t12490*t2971*t2996 + t10635*t2971*t3915 - 1.*t12527*t2971*t3915) + (t10684*t2996*t3803 + t12490*t2996*t3803 - 1.*t10635*t3803*t3915 + t12527*t3803*t3915)*t4402;
  p_output1[157]=t16758*t2971 + t16731*t3803 + t2971*(t15831 + t15834 - 1.*t12862*t16705*t2971 - 1.*t12862*t16708*t2971 - 1.*t10635*t2996*t3803 - 1.*t10684*t3803*t3915) + (t15823 + t15824 + t12862*t16705*t3803 + t12862*t16708*t3803 + t10635*t2996*t4367 + t10684*t3915*t4367)*t4402;
  p_output1[158]=t16758*t4367 + t16731*t4402 + (t15695 + t15946 + t10635*t2971*t2996 + t13241*t16705*t3803 + t13241*t16708*t3803 + t10684*t2971*t3915)*t4402 + t2971*(t15963 + t15964 - 1.*t13241*t16705*t2971 - 1.*t13241*t16708*t2971 - 1.*t10635*t2996*t4402 - 1.*t10684*t3915*t4402);
  p_output1[159]=t2971*(t10635*t2996 - 1.*t12527*t2996 + t10684*t3915 + t12490*t3915);
  p_output1[160]=t16825*t3803;
  p_output1[161]=t16825*t4402;
  p_output1[162]=t16831*t1952 + t16840*t470 + t470*(t15508 + t15509 + t15539 - 1.*t1504*t6793) + t1504*(t15228 + t15491 + t15495 + t470*t6793);
  p_output1[163]=t1504*t16831 + t16840*t2043 + t1504*(t15228 + t15529 + t2043*t6793 + t1504*t8132) + t470*(t15539 + t15544 - 1.*t1952*t6793 - 1.*t2043*t8132);
  p_output1[164]=t16885;
  p_output1[165]=t16885;
  p_output1[166]=0.28121*t49 - 0.305*Power(t49,2) - 1.*t49*t6755;
  p_output1[167]=-0.28121*t462 + 0.305*t462*t49 + t462*t6755;
  p_output1[168]=t16907;
  p_output1[169]=t16907;
  p_output1[170]=t16914*t2971 + t16928*t3803 + t2971*(t15831 + t15834 - 1.*t12862*t2971 - 1.*t10539*t3803) + (t15823 + t15824 + t12862*t3803 + t10539*t4367)*t4402;
  p_output1[171]=t16914*t4367 + t16928*t4402 + (t15695 + t15946 + t10539*t2971 + t13241*t3803)*t4402 + t2971*(t15963 + t15964 - 1.*t13241*t2971 - 1.*t10539*t4402);
  p_output1[172]=0.28121*t2791 + t10124*t2791 - 0.305*Power(t2791,2);
  p_output1[173]=-0.28121*t2948 - 1.*t10124*t2948 + 0.305*t2791*t2948;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_DiagonalStance2.hh"

namespace SymFunction
{

void J_Je_DiagonalStance2_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
