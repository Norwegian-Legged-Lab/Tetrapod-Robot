/*
 * Automatically Generated from Mathematica.
 * Sat 28 May 2022 18:48:38 GMT+02:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t26;
  double t21;
  double t24;
  double t27;
  double t34;
  double t37;
  double t38;
  double t20;
  double t33;
  double t57;
  double t32;
  double t61;
  double t86;
  double t97;
  double t111;
  double t122;
  double t31;
  double t25;
  double t28;
  double t29;
  double t223;
  double t228;
  double t432;
  double t934;
  double t935;
  double t936;
  double t939;
  double t460;
  double t885;
  double t888;
  double t987;
  double t992;
  double t993;
  double t994;
  double t46;
  double t62;
  double t66;
  double t135;
  double t146;
  double t157;
  double t1031;
  double t1020;
  double t1024;
  double t1032;
  double t1047;
  double t1048;
  double t1054;
  double t1056;
  double t1039;
  double t1063;
  double t1064;
  double t1065;
  double t1066;
  double t1068;
  double t1070;
  double t1071;
  double t1030;
  double t1033;
  double t1034;
  double t1100;
  double t1101;
  double t1102;
  double t1103;
  double t1085;
  double t1086;
  double t1087;
  double t1089;
  double t1090;
  double t1091;
  double t1107;
  double t1108;
  double t1109;
  double t1110;
  double t1055;
  double t1057;
  double t1058;
  double t30;
  double t72;
  double t76;
  double t1126;
  double t1138;
  double t1157;
  double t1158;
  double t1159;
  double t177;
  double t186;
  double t197;
  double t952;
  double t955;
  double t977;
  double t895;
  double t896;
  double t912;
  double t1205;
  double t1207;
  double t1208;
  double t1184;
  double t1186;
  double t1187;
  double t1230;
  double t1231;
  double t1232;
  double t1127;
  double t1129;
  double t1130;
  double t1008;
  double t1009;
  double t1010;
  double t1038;
  double t1059;
  double t1061;
  double t1292;
  double t1293;
  double t1295;
  double t1072;
  double t1073;
  double t1082;
  double t1104;
  double t1105;
  double t1106;
  double t1094;
  double t1095;
  double t1098;
  double t1363;
  double t1364;
  double t1374;
  double t1329;
  double t1331;
  double t1332;
  double t1396;
  double t1397;
  double t1398;
  double t1274;
  double t1275;
  double t1276;
  double t1117;
  double t1121;
  double t1122;
  double t1246;
  double t1248;
  double t1249;
  double t1149;
  double t1150;
  double t1151;
  double t1852;
  double t1855;
  double t1856;
  double t1161;
  double t1162;
  double t1163;
  double t1166;
  double t1167;
  double t1175;
  double t1193;
  double t1199;
  double t1200;
  double t2133;
  double t2138;
  double t2139;
  double t1188;
  double t1189;
  double t1191;
  double t1223;
  double t1226;
  double t1227;
  double t2143;
  double t2144;
  double t2160;
  double t1251;
  double t1252;
  double t1253;
  double t1256;
  double t1257;
  double t1269;
  double t1406;
  double t1407;
  double t1408;
  double t1287;
  double t1288;
  double t1289;
  double t2229;
  double t2230;
  double t2231;
  double t1296;
  double t1297;
  double t1302;
  double t1312;
  double t1313;
  double t1317;
  double t1350;
  double t1351;
  double t1353;
  double t2336;
  double t2338;
  double t2339;
  double t1345;
  double t1346;
  double t1347;
  double t1390;
  double t1392;
  double t1393;
  double t2341;
  double t2347;
  double t2348;
  double t1798;
  double t1805;
  double t1820;
  double t1827;
  double t1830;
  double t1832;
  double t218;
  double t893;
  double t894;
  double t2570;
  double t2594;
  double t2621;
  double t2634;
  double t2641;
  double t2683;
  double t2694;
  double t2706;
  double t2709;
  double t2712;
  double t2717;
  double t2735;
  double t2737;
  double t2545;
  double t2648;
  double t2649;
  double t2669;
  double t2695;
  double t2809;
  double t2812;
  double t2822;
  double t2839;
  double t2865;
  double t2866;
  double t2873;
  double t2879;
  double t2881;
  double t2882;
  double t2891;
  double t2892;
  double t2898;
  double t2671;
  double t2884;
  double t2885;
  double t3045;
  double t3046;
  double t3055;
  double t2938;
  double t2977;
  double t3000;
  double t3015;
  double t3040;
  double t3074;
  double t3081;
  double t3218;
  double t3254;
  double t3270;
  double t3162;
  double t3165;
  double t3170;
  double t3171;
  double t3202;
  double t3337;
  double t3217;
  double t3287;
  double t3542;
  double t3543;
  double t3574;
  double t3580;
  double t3609;
  double t3621;
  double t3645;
  double t3379;
  double t3393;
  double t3451;
  double t3672;
  double t3690;
  double t3719;
  double t3510;
  double t3513;
  double t3532;
  double t4058;
  double t4059;
  double t4077;
  double t4078;
  double t4116;
  double t4151;
  double t4153;
  double t995;
  double t997;
  double t999;
  double t3966;
  double t4041;
  double t4051;
  double t4099;
  double t4169;
  double t4176;
  double t4195;
  double t4210;
  double t4215;
  double t4376;
  double t4397;
  double t4398;
  double t4422;
  double t4427;
  double t4431;
  double t4434;
  double t4441;
  double t1004;
  double t1012;
  double t1016;
  double t4400;
  double t4406;
  double t4414;
  double t4429;
  double t4444;
  double t4488;
  double t4513;
  double t4516;
  double t4527;
  double t4310;
  double t4349;
  double t4350;
  double t4702;
  double t4712;
  double t4714;
  double t4715;
  double t4791;
  double t4819;
  double t4899;
  double t4903;
  double t4923;
  double t4952;
  double t4959;
  double t4992;
  double t4993;
  double t166;
  double t206;
  double t213;
  double t5367;
  double t5486;
  double t5491;
  double t6360;
  double t6403;
  double t6475;
  double t6496;
  double t6543;
  double t6549;
  double t6552;
  double t6564;
  double t6613;
  double t6750;
  double t6762;
  double t6763;
  double t6769;
  double t1088;
  double t1092;
  double t1093;
  double t7037;
  double t7038;
  double t7043;
  double t7044;
  double t7045;
  double t7097;
  double t7105;
  double t7113;
  double t7122;
  double t7136;
  double t7138;
  double t7144;
  double t7169;
  double t7217;
  double t7034;
  double t7046;
  double t7066;
  double t7089;
  double t7223;
  double t7237;
  double t7246;
  double t7248;
  double t7253;
  double t7257;
  double t7259;
  double t7265;
  double t7269;
  double t7285;
  double t7288;
  double t7296;
  double t7094;
  double t7270;
  double t7271;
  double t7341;
  double t7348;
  double t7350;
  double t7329;
  double t7332;
  double t7333;
  double t7334;
  double t7335;
  double t7359;
  double t7368;
  double t7411;
  double t7412;
  double t7414;
  double t7392;
  double t7397;
  double t7401;
  double t7402;
  double t7409;
  double t7420;
  double t7451;
  double t7454;
  double t7455;
  double t7477;
  double t7478;
  double t7483;
  double t7514;
  double t7515;
  double t7427;
  double t7430;
  double t7434;
  double t7524;
  double t7527;
  double t7531;
  double t7440;
  double t7441;
  double t7448;
  double t7787;
  double t7796;
  double t7801;
  double t7802;
  double t7960;
  double t7962;
  double t7969;
  double t7974;
  double t7979;
  double t1111;
  double t1113;
  double t1114;
  double t7849;
  double t7892;
  double t7909;
  double t7964;
  double t7980;
  double t7995;
  double t8000;
  double t8103;
  double t8145;
  double t8266;
  double t8267;
  double t8379;
  double t8405;
  double t8432;
  double t8540;
  double t8541;
  double t8653;
  double t1116;
  double t1123;
  double t1125;
  double t8268;
  double t8359;
  double t8361;
  double t8509;
  double t8735;
  double t8759;
  double t8778;
  double t8779;
  double t8783;
  double t8223;
  double t8251;
  double t8255;
  double t8921;
  double t8922;
  double t8923;
  double t8936;
  double t9151;
  double t9185;
  double t9226;
  double t9235;
  double t9248;
  double t9279;
  double t9281;
  double t9339;
  double t9340;
  double t1067;
  double t1083;
  double t1084;
  double t10044;
  double t10120;
  double t10123;
  double t10450;
  double t10453;
  double t10454;
  double t10457;
  double t10592;
  double t10640;
  double t10653;
  double t10680;
  double t10697;
  double t10701;
  double t10708;
  double t10709;
  double t10832;
  double t3351;
  double t3478;
  double t15653;
  double t15658;
  double t15682;
  double t3720;
  double t15686;
  double t3779;
  double t15735;
  double t15749;
  double t15750;
  double t15753;
  double t15754;
  double t4055;
  double t4283;
  double t4421;
  double t4573;
  double t4582;
  double t4820;
  double t4926;
  double t15794;
  double t15802;
  double t5034;
  double t15910;
  double t15914;
  double t15917;
  double t15918;
  double t15919;
  double t5051;
  double t15922;
  double t15954;
  double t15957;
  double t5114;
  double t5116;
  double t5305;
  double t5698;
  double t5895;
  double t5957;
  double t6562;
  double t6759;
  double t16009;
  double t16021;
  double t16101;
  double t16103;
  double t16141;
  double t6778;
  double t16149;
  double t6783;
  double t16157;
  double t16162;
  double t16171;
  double t6803;
  double t6976;
  double t6980;
  double t7014;
  double t7027;
  double t7421;
  double t7435;
  double t16265;
  double t16267;
  double t16276;
  double t7534;
  double t16303;
  double t7598;
  double t16329;
  double t16347;
  double t16348;
  double t16350;
  double t16354;
  double t7928;
  double t8210;
  double t8372;
  double t8851;
  double t8854;
  double t9202;
  double t9259;
  double t16401;
  double t16409;
  double t9373;
  double t16513;
  double t16531;
  double t16534;
  double t16537;
  double t16543;
  double t9540;
  double t16560;
  double t16610;
  double t16682;
  double t9594;
  double t9602;
  double t9999;
  double t10182;
  double t10365;
  double t10409;
  double t10679;
  double t10703;
  double t16944;
  double t17037;
  double t17198;
  double t17238;
  double t17255;
  double t12364;
  double t17295;
  double t13454;
  double t17384;
  double t17579;
  double t17585;
  double t14720;
  double t15298;
  double t15303;
  double t15492;
  double t15631;
  double t18061;
  double t18062;
  double t18066;
  double t15999;
  double t16000;
  double t18283;
  double t18294;
  double t16011;
  double t18272;
  double t18273;
  double t18274;
  double t16057;
  double t16065;
  double t16067;
  double t19245;
  double t19346;
  double t19537;
  double t20778;
  double t20786;
  double t20792;
  double t20974;
  double t20982;
  double t20987;
  double t16920;
  double t16921;
  double t21237;
  double t21239;
  double t16958;
  double t21248;
  double t21252;
  double t21269;
  double t17077;
  double t21435;
  double t21442;
  double t21443;
  double t17138;
  double t17142;
  double t21613;
  double t21614;
  double t21622;
  double t21686;
  double t21728;
  double t21757;
  double t21758;
  double t21794;
  double t21796;
  double t21797;
  double t21841;
  double t21845;
  double t21850;
  double t21854;
  double t21859;
  double t21880;
  double t21897;
  t26 = Cos(var1[13]);
  t21 = Cos(var1[14]);
  t24 = Sin(var1[13]);
  t27 = Sin(var1[14]);
  t34 = t26*t21;
  t37 = t24*t27;
  t38 = t34 + t37;
  t20 = Cos(var1[4]);
  t33 = Cos(var1[5]);
  t57 = Sin(var1[12]);
  t32 = Cos(var1[12]);
  t61 = Sin(var1[5]);
  t86 = -1.*t33*t57*t38;
  t97 = -1.*t32*t38*t61;
  t111 = t86 + t97;
  t122 = t20*t111;
  t31 = Sin(var1[4]);
  t25 = -1.*t21*t24;
  t28 = t26*t27;
  t29 = t25 + t28;
  t223 = t21*t24;
  t228 = -1.*t26*t27;
  t432 = t223 + t228;
  t934 = -1.*t32*t33;
  t935 = t57*t61;
  t936 = t934 + t935;
  t939 = t20*t936;
  t460 = t32*t33*t432;
  t885 = -1.*t57*t432*t61;
  t888 = t460 + t885;
  t987 = -1.*t33*t57*t432;
  t992 = -1.*t32*t432*t61;
  t993 = t987 + t992;
  t994 = t20*t993;
  t46 = t32*t33*t38;
  t62 = -1.*t57*t38*t61;
  t66 = t46 + t62;
  t135 = -1.*t26*t21;
  t146 = -1.*t24*t27;
  t157 = t135 + t146;
  t1031 = Cos(var1[16]);
  t1020 = Cos(var1[17]);
  t1024 = Sin(var1[16]);
  t1032 = Sin(var1[17]);
  t1047 = -1.*t1031*t1020;
  t1048 = -1.*t1024*t1032;
  t1054 = t1047 + t1048;
  t1056 = Sin(var1[15]);
  t1039 = Cos(var1[15]);
  t1063 = -1.*t33*t1056*t1054;
  t1064 = -1.*t1039*t1054*t61;
  t1065 = t1063 + t1064;
  t1066 = t20*t1065;
  t1068 = t1020*t1024;
  t1070 = -1.*t1031*t1032;
  t1071 = t1068 + t1070;
  t1030 = -1.*t1020*t1024;
  t1033 = t1031*t1032;
  t1034 = t1030 + t1033;
  t1100 = t1039*t33;
  t1101 = -1.*t1056*t61;
  t1102 = t1100 + t1101;
  t1103 = t20*t1102;
  t1085 = t1031*t1020;
  t1086 = t1024*t1032;
  t1087 = t1085 + t1086;
  t1089 = t1039*t33*t1034;
  t1090 = -1.*t1056*t1034*t61;
  t1091 = t1089 + t1090;
  t1107 = -1.*t33*t1056*t1034;
  t1108 = -1.*t1039*t1034*t61;
  t1109 = t1107 + t1108;
  t1110 = t20*t1109;
  t1055 = t1039*t33*t1054;
  t1057 = -1.*t1056*t1054*t61;
  t1058 = t1055 + t1057;
  t30 = t20*t29;
  t72 = -1.*t31*t66;
  t76 = t30 + t72;
  t1126 = Sin(var1[3]);
  t1138 = Cos(var1[3]);
  t1157 = t1126*t31*t111;
  t1158 = t1138*t66;
  t1159 = t1157 + t1158;
  t177 = t32*t33*t29;
  t186 = -1.*t57*t29*t61;
  t197 = t177 + t186;
  t952 = t20*t38;
  t955 = -1.*t31*t888;
  t977 = t952 + t955;
  t895 = -1.*t33*t57;
  t896 = -1.*t32*t61;
  t912 = t895 + t896;
  t1205 = t1138*t912;
  t1207 = t1126*t31*t936;
  t1208 = t1205 + t1207;
  t1184 = t33*t57*t432;
  t1186 = t32*t432*t61;
  t1187 = t1184 + t1186;
  t1230 = t1126*t31*t993;
  t1231 = t1138*t888;
  t1232 = t1230 + t1231;
  t1127 = t33*t57*t38;
  t1129 = t32*t38*t61;
  t1130 = t1127 + t1129;
  t1008 = t32*t33*t157;
  t1009 = -1.*t57*t157*t61;
  t1010 = t1008 + t1009;
  t1038 = t20*t1034;
  t1059 = -1.*t31*t1058;
  t1061 = t1038 + t1059;
  t1292 = t1126*t31*t1065;
  t1293 = t1138*t1058;
  t1295 = t1292 + t1293;
  t1072 = t1039*t33*t1071;
  t1073 = -1.*t1056*t1071*t61;
  t1082 = t1072 + t1073;
  t1104 = t20*t1087;
  t1105 = -1.*t31*t1091;
  t1106 = t1104 + t1105;
  t1094 = t33*t1056;
  t1095 = t1039*t61;
  t1098 = t1094 + t1095;
  t1363 = t1138*t1098;
  t1364 = t1126*t31*t1102;
  t1374 = t1363 + t1364;
  t1329 = t33*t1056*t1034;
  t1331 = t1039*t1034*t61;
  t1332 = t1329 + t1331;
  t1396 = t1126*t31*t1109;
  t1397 = t1138*t1091;
  t1398 = t1396 + t1397;
  t1274 = t33*t1056*t1054;
  t1275 = t1039*t1054*t61;
  t1276 = t1274 + t1275;
  t1117 = t1039*t33*t1087;
  t1121 = -1.*t1056*t1087*t61;
  t1122 = t1117 + t1121;
  t1246 = t1138*t1130;
  t1248 = -1.*t1126*t76;
  t1249 = t1246 + t1248;
  t1149 = -1.*t29*t31;
  t1150 = -1.*t20*t66;
  t1151 = t1149 + t1150;
  t1852 = -1.*t1138*t31*t111;
  t1855 = t1126*t66;
  t1856 = t1852 + t1855;
  t1161 = t33*t57*t29;
  t1162 = t32*t29*t61;
  t1163 = t1161 + t1162;
  t1166 = t20*t157;
  t1167 = -1.*t31*t197;
  t1175 = t1166 + t1167;
  t1193 = t32*t33;
  t1199 = -1.*t57*t61;
  t1200 = t1193 + t1199;
  t2133 = t1126*t912;
  t2138 = -1.*t1138*t31*t936;
  t2139 = t2133 + t2138;
  t1188 = t1138*t1187;
  t1189 = -1.*t1126*t977;
  t1191 = t1188 + t1189;
  t1223 = -1.*t38*t31;
  t1226 = -1.*t20*t888;
  t1227 = t1223 + t1226;
  t2143 = -1.*t1138*t31*t993;
  t2144 = t1126*t888;
  t2160 = t2143 + t2144;
  t1251 = t33*t57*t157;
  t1252 = t32*t157*t61;
  t1253 = t1251 + t1252;
  t1256 = t20*t432;
  t1257 = -1.*t31*t1010;
  t1269 = t1256 + t1257;
  t1406 = t1138*t1276;
  t1407 = -1.*t1126*t1061;
  t1408 = t1406 + t1407;
  t1287 = -1.*t1034*t31;
  t1288 = -1.*t20*t1058;
  t1289 = t1287 + t1288;
  t2229 = -1.*t1138*t31*t1065;
  t2230 = t1126*t1058;
  t2231 = t2229 + t2230;
  t1296 = t33*t1056*t1071;
  t1297 = t1039*t1071*t61;
  t1302 = t1296 + t1297;
  t1312 = t20*t1054;
  t1313 = -1.*t31*t1082;
  t1317 = t1312 + t1313;
  t1350 = -1.*t1039*t33;
  t1351 = t1056*t61;
  t1353 = t1350 + t1351;
  t2336 = t1126*t1098;
  t2338 = -1.*t1138*t31*t1102;
  t2339 = t2336 + t2338;
  t1345 = t1138*t1332;
  t1346 = -1.*t1126*t1106;
  t1347 = t1345 + t1346;
  t1390 = -1.*t1087*t31;
  t1392 = -1.*t20*t1091;
  t1393 = t1390 + t1392;
  t2341 = -1.*t1138*t31*t1109;
  t2347 = t1126*t1091;
  t2348 = t2341 + t2347;
  t1798 = t33*t1056*t1087;
  t1805 = t1039*t1087*t61;
  t1820 = t1798 + t1805;
  t1827 = t20*t1071;
  t1830 = -1.*t31*t1122;
  t1832 = t1827 + t1830;
  t218 = t38*t31;
  t893 = t20*t888;
  t894 = t218 + t893;
  t2570 = -1.*t21;
  t2594 = 1. + t2570;
  t2621 = 0.50321*t2594;
  t2634 = 0.19821*t21;
  t2641 = t2621 + t2634;
  t2683 = -1.*t32;
  t2694 = 1. + t2683;
  t2706 = -1.*t26;
  t2709 = 1. + t2706;
  t2712 = 0.28121*t2709;
  t2717 = t26*t2641;
  t2735 = -0.305*t24*t27;
  t2737 = t2712 + t2717 + t2735;
  t2545 = 0.28121*t24;
  t2648 = -1.*t2641*t24;
  t2649 = -0.305*t26*t27;
  t2669 = t2545 + t2648 + t2649;
  t2695 = 0.15121*t2694;
  t2809 = t32*t2737;
  t2812 = t2695 + t2809;
  t2822 = t33*t2812;
  t2839 = -0.15121*t2694;
  t2865 = -0.15121*t32;
  t2866 = -0.15121*t57;
  t2873 = t57*t2737;
  t2879 = t2839 + t2865 + t2866 + t2873;
  t2881 = -1.*t2879*t61;
  t2882 = t2822 + t2881;
  t2891 = t2669*t31;
  t2892 = t20*t2882;
  t2898 = t2891 + t2892;
  t2671 = -1.*t2669*t31;
  t2884 = -1.*t20*t2882;
  t2885 = t2671 + t2884;
  t3045 = t20*t2669;
  t3046 = -1.*t31*t2882;
  t3055 = t3045 + t3046;
  t2938 = t33*t2879;
  t2977 = t2812*t61;
  t3000 = t2938 + t2977;
  t3015 = -1.*t1200*t3000;
  t3040 = -1.*t20*t912*t2898;
  t3074 = t31*t912*t3055;
  t3081 = t3015 + t3040 + t3074;
  t3218 = -1.*t33*t2879;
  t3254 = -1.*t2812*t61;
  t3270 = t3218 + t3254;
  t3162 = t1187*t3000;
  t3165 = t894*t2898;
  t3170 = t977*t3055;
  t3171 = t3162 + t3165 + t3170;
  t3202 = t20*t993*t3081;
  t3337 = -1.*t912*t3000;
  t3217 = Power(t20,2);
  t3287 = Power(t31,2);
  t3542 = 0.15121*t57;
  t3543 = -1.*t57*t2737;
  t3574 = t3542 + t3543;
  t3580 = t33*t3574;
  t3609 = t2865 + t2809;
  t3621 = -1.*t3609*t61;
  t3645 = t3580 + t3621;
  t3379 = -1.*t20*t936*t2898;
  t3393 = t31*t936*t3055;
  t3451 = t888*t3000;
  t3672 = t33*t3609;
  t3690 = t3574*t61;
  t3719 = t3672 + t3690;
  t3510 = t20*t993*t2898;
  t3513 = -1.*t31*t993*t3055;
  t3532 = t20*t936*t3171;
  t4058 = 0.28121*t26;
  t4059 = -1.*t26*t2641;
  t4077 = 0.305*t24*t27;
  t4078 = t4058 + t4059 + t4077;
  t4116 = t32*t33*t2669;
  t4151 = -1.*t57*t2669*t61;
  t4153 = t4116 + t4151;
  t995 = t29*t31;
  t997 = t20*t66;
  t999 = t995 + t997;
  t3966 = t33*t57*t2669;
  t4041 = t32*t2669*t61;
  t4051 = t3966 + t4041;
  t4099 = t4078*t31;
  t4169 = t20*t4153;
  t4176 = t4099 + t4169;
  t4195 = t20*t4078;
  t4210 = -1.*t31*t4153;
  t4215 = t4195 + t4210;
  t4376 = -0.305*t21*t24;
  t4397 = 0.305*t26*t27;
  t4398 = t4376 + t4397;
  t4422 = -0.305*t26*t21;
  t4427 = t4422 + t2735;
  t4431 = t32*t33*t4398;
  t4434 = -1.*t57*t4398*t61;
  t4441 = t4431 + t4434;
  t1004 = t432*t31;
  t1012 = t20*t1010;
  t1016 = t1004 + t1012;
  t4400 = t33*t57*t4398;
  t4406 = t32*t4398*t61;
  t4414 = t4400 + t4406;
  t4429 = t4427*t31;
  t4444 = t20*t4441;
  t4488 = t4429 + t4444;
  t4513 = t20*t4427;
  t4516 = -1.*t31*t4441;
  t4527 = t4513 + t4516;
  t4310 = t1130*t3000;
  t4349 = t999*t2898;
  t4350 = t76*t3055;
  t4702 = -1.*t1187*t3000;
  t4712 = -1.*t894*t2898;
  t4714 = -1.*t977*t3055;
  t4715 = t4702 + t4712 + t4714;
  t4791 = t4310 + t4349 + t4350;
  t4819 = -1.*t888*t3000;
  t4899 = -1.*t20*t993*t2898;
  t4903 = t31*t993*t3055;
  t4923 = t66*t3000;
  t4952 = t20*t111*t2898;
  t4959 = -1.*t31*t111*t3055;
  t4992 = t20*t111*t4715;
  t4993 = t20*t993*t4791;
  t166 = t157*t31;
  t206 = t20*t197;
  t213 = t166 + t206;
  t5367 = -1.*t1130*t3000;
  t5486 = -1.*t999*t2898;
  t5491 = -1.*t76*t3055;
  t6360 = t1200*t3000;
  t6403 = t20*t912*t2898;
  t6475 = -1.*t31*t912*t3055;
  t6496 = t6360 + t6403 + t6475;
  t6543 = t5367 + t5486 + t5491;
  t6549 = t20*t111*t6496;
  t6552 = t912*t3000;
  t6564 = t20*t936*t2898;
  t6613 = -1.*t31*t936*t3055;
  t6750 = -1.*t66*t3000;
  t6762 = -1.*t20*t111*t2898;
  t6763 = t31*t111*t3055;
  t6769 = t20*t936*t6543;
  t1088 = t1087*t31;
  t1092 = t20*t1091;
  t1093 = t1088 + t1092;
  t7037 = -1.*t1020;
  t7038 = 1. + t7037;
  t7043 = -0.50321*t7038;
  t7044 = -0.19821*t1020;
  t7045 = t7043 + t7044;
  t7097 = -1.*t1039;
  t7105 = 1. + t7097;
  t7113 = -0.15121*t7105;
  t7122 = -1.*t1031;
  t7136 = 1. + t7122;
  t7138 = -0.28121*t7136;
  t7144 = t1031*t7045;
  t7169 = 0.305*t1024*t1032;
  t7217 = t7138 + t7144 + t7169;
  t7034 = 0.28121*t1024;
  t7046 = t7045*t1024;
  t7066 = -0.305*t1031*t1032;
  t7089 = t7034 + t7046 + t7066;
  t7223 = t1039*t7217;
  t7237 = t7113 + t7223;
  t7246 = t33*t7237;
  t7248 = -0.15121*t1039;
  t7253 = 0.15121*t1056;
  t7257 = t1056*t7217;
  t7259 = t7113 + t7248 + t7253 + t7257;
  t7265 = -1.*t7259*t61;
  t7269 = t7246 + t7265;
  t7285 = t7089*t31;
  t7288 = t20*t7269;
  t7296 = t7285 + t7288;
  t7094 = -1.*t7089*t31;
  t7270 = -1.*t20*t7269;
  t7271 = t7094 + t7270;
  t7341 = t20*t7089;
  t7348 = -1.*t31*t7269;
  t7350 = t7341 + t7348;
  t7329 = t33*t7259;
  t7332 = t7237*t61;
  t7333 = t7329 + t7332;
  t7334 = -1.*t1353*t7333;
  t7335 = -1.*t20*t1098*t7296;
  t7359 = t31*t1098*t7350;
  t7368 = t7334 + t7335 + t7359;
  t7411 = -1.*t33*t7259;
  t7412 = -1.*t7237*t61;
  t7414 = t7411 + t7412;
  t7392 = t1332*t7333;
  t7397 = t1093*t7296;
  t7401 = t1106*t7350;
  t7402 = t7392 + t7397 + t7401;
  t7409 = t20*t1109*t7368;
  t7420 = -1.*t1098*t7333;
  t7451 = -0.15121*t1056;
  t7454 = -1.*t1056*t7217;
  t7455 = t7451 + t7454;
  t7477 = t33*t7455;
  t7478 = 0.15121*t1039;
  t7483 = t7478 + t7223;
  t7514 = -1.*t7483*t61;
  t7515 = t7477 + t7514;
  t7427 = -1.*t20*t1102*t7296;
  t7430 = t31*t1102*t7350;
  t7434 = t1091*t7333;
  t7524 = t33*t7483;
  t7527 = t7455*t61;
  t7531 = t7524 + t7527;
  t7440 = t20*t1109*t7296;
  t7441 = -1.*t31*t1109*t7350;
  t7448 = t20*t1102*t7402;
  t7787 = -0.28121*t1024;
  t7796 = -1.*t7045*t1024;
  t7801 = 0.305*t1031*t1032;
  t7802 = t7787 + t7796 + t7801;
  t7960 = 0.28121*t1031;
  t7962 = t7960 + t7144 + t7169;
  t7969 = t1039*t33*t7802;
  t7974 = -1.*t1056*t7802*t61;
  t7979 = t7969 + t7974;
  t1111 = t1034*t31;
  t1113 = t20*t1058;
  t1114 = t1111 + t1113;
  t7849 = t33*t1056*t7802;
  t7892 = t1039*t7802*t61;
  t7909 = t7849 + t7892;
  t7964 = t7962*t31;
  t7980 = t20*t7979;
  t7995 = t7964 + t7980;
  t8000 = t20*t7962;
  t8103 = -1.*t31*t7979;
  t8145 = t8000 + t8103;
  t8266 = 0.305*t1020*t1024;
  t8267 = t8266 + t7066;
  t8379 = -0.305*t1031*t1020;
  t8405 = -0.305*t1024*t1032;
  t8432 = t8379 + t8405;
  t8540 = t1039*t33*t8267;
  t8541 = -1.*t1056*t8267*t61;
  t8653 = t8540 + t8541;
  t1116 = t1071*t31;
  t1123 = t20*t1122;
  t1125 = t1116 + t1123;
  t8268 = t33*t1056*t8267;
  t8359 = t1039*t8267*t61;
  t8361 = t8268 + t8359;
  t8509 = t8432*t31;
  t8735 = t20*t8653;
  t8759 = t8509 + t8735;
  t8778 = t20*t8432;
  t8779 = -1.*t31*t8653;
  t8783 = t8778 + t8779;
  t8223 = t1276*t7333;
  t8251 = t1114*t7296;
  t8255 = t1061*t7350;
  t8921 = -1.*t1332*t7333;
  t8922 = -1.*t1093*t7296;
  t8923 = -1.*t1106*t7350;
  t8936 = t8921 + t8922 + t8923;
  t9151 = t8223 + t8251 + t8255;
  t9185 = -1.*t1091*t7333;
  t9226 = -1.*t20*t1109*t7296;
  t9235 = t31*t1109*t7350;
  t9248 = t1058*t7333;
  t9279 = t20*t1065*t7296;
  t9281 = -1.*t31*t1065*t7350;
  t9339 = t20*t1065*t8936;
  t9340 = t20*t1109*t9151;
  t1067 = t1054*t31;
  t1083 = t20*t1082;
  t1084 = t1067 + t1083;
  t10044 = -1.*t1276*t7333;
  t10120 = -1.*t1114*t7296;
  t10123 = -1.*t1061*t7350;
  t10450 = t1353*t7333;
  t10453 = t20*t1098*t7296;
  t10454 = -1.*t31*t1098*t7350;
  t10457 = t10450 + t10453 + t10454;
  t10592 = t10044 + t10120 + t10123;
  t10640 = t20*t1065*t10457;
  t10653 = t1098*t7333;
  t10680 = t20*t1102*t7296;
  t10697 = -1.*t31*t1102*t7350;
  t10701 = -1.*t1058*t7333;
  t10708 = -1.*t20*t1065*t7296;
  t10709 = t31*t1065*t7350;
  t10832 = t20*t1102*t10592;
  t3351 = -1.*t1200*t2882;
  t3478 = t1187*t2882;
  t15653 = -1.*t912*t2882;
  t15658 = t3015 + t15653;
  t15682 = t888*t15658;
  t3720 = -1.*t1200*t3719;
  t15686 = -1.*t936*t2882;
  t3779 = t1187*t3719;
  t15735 = t993*t2882;
  t15749 = t2669*t38;
  t15750 = t888*t2882;
  t15753 = t15749 + t3162 + t15750;
  t15754 = t912*t15753;
  t4055 = -1.*t1200*t4051;
  t4283 = t1187*t4051;
  t4421 = -1.*t1200*t4414;
  t4573 = t1187*t4414;
  t4582 = t1253*t3000;
  t4820 = -1.*t1187*t2882;
  t4926 = t1130*t2882;
  t15794 = t2669*t29;
  t15802 = t66*t2882;
  t5034 = -1.*t1187*t3719;
  t15910 = -1.*t993*t2882;
  t15914 = -1.*t2669*t38;
  t15917 = -1.*t888*t2882;
  t15918 = t15914 + t4702 + t15917;
  t15919 = t66*t15918;
  t5051 = t1130*t3719;
  t15922 = t111*t2882;
  t15954 = t15794 + t4310 + t15802;
  t15957 = t888*t15954;
  t5114 = t4051*t1130;
  t5116 = t1163*t3000;
  t5305 = -1.*t1187*t4051;
  t5698 = t4414*t1130;
  t5895 = -1.*t1187*t4414;
  t5957 = -1.*t1253*t3000;
  t6562 = t1200*t2882;
  t6759 = -1.*t1130*t2882;
  t16009 = -1.*t2669*t29;
  t16021 = -1.*t66*t2882;
  t16101 = t912*t2882;
  t16103 = t6360 + t16101;
  t16141 = t66*t16103;
  t6778 = t1200*t3719;
  t16149 = t936*t2882;
  t6783 = -1.*t1130*t3719;
  t16157 = -1.*t111*t2882;
  t16162 = t16009 + t5367 + t16021;
  t16171 = t912*t16162;
  t6803 = t1200*t4051;
  t6976 = -1.*t4051*t1130;
  t6980 = -1.*t1163*t3000;
  t7014 = t1200*t4414;
  t7027 = -1.*t4414*t1130;
  t7421 = -1.*t1353*t7269;
  t7435 = t1332*t7269;
  t16265 = -1.*t1098*t7269;
  t16267 = t7334 + t16265;
  t16276 = t1091*t16267;
  t7534 = -1.*t1353*t7531;
  t16303 = -1.*t1102*t7269;
  t7598 = t1332*t7531;
  t16329 = t1109*t7269;
  t16347 = t7089*t1087;
  t16348 = t1091*t7269;
  t16350 = t16347 + t7392 + t16348;
  t16354 = t1098*t16350;
  t7928 = -1.*t1353*t7909;
  t8210 = t7909*t1332;
  t8372 = -1.*t1353*t8361;
  t8851 = t8361*t1332;
  t8854 = t1820*t7333;
  t9202 = -1.*t1332*t7269;
  t9259 = t1276*t7269;
  t16401 = t7089*t1034;
  t16409 = t1058*t7269;
  t9373 = -1.*t1332*t7531;
  t16513 = -1.*t1109*t7269;
  t16531 = -1.*t7089*t1087;
  t16534 = -1.*t1091*t7269;
  t16537 = t16531 + t8921 + t16534;
  t16543 = t1058*t16537;
  t9540 = t1276*t7531;
  t16560 = t1065*t7269;
  t16610 = t16401 + t8223 + t16409;
  t16682 = t1091*t16610;
  t9594 = t7909*t1276;
  t9602 = t1302*t7333;
  t9999 = -1.*t7909*t1332;
  t10182 = t8361*t1276;
  t10365 = -1.*t8361*t1332;
  t10409 = -1.*t1820*t7333;
  t10679 = t1353*t7269;
  t10703 = -1.*t1276*t7269;
  t16944 = -1.*t7089*t1034;
  t17037 = -1.*t1058*t7269;
  t17198 = t1098*t7269;
  t17238 = t10450 + t17198;
  t17255 = t1058*t17238;
  t12364 = t1353*t7531;
  t17295 = t1102*t7269;
  t13454 = -1.*t1276*t7531;
  t17384 = -1.*t1065*t7269;
  t17579 = t16944 + t10044 + t17037;
  t17585 = t1098*t17579;
  t14720 = t1353*t7909;
  t15298 = -1.*t7909*t1276;
  t15303 = -1.*t1302*t7333;
  t15492 = t1353*t8361;
  t15631 = -1.*t8361*t1276;
  t18061 = t57*t2812;
  t18062 = -1.*t32*t2879;
  t18066 = t18061 + t18062;
  t15999 = t2669*t157;
  t16000 = t29*t4078;
  t18283 = Power(t32,2);
  t18294 = Power(t57,2);
  t16011 = -1.*t4078*t38;
  t18272 = -1.*t32*t432*t2812;
  t18273 = -1.*t57*t432*t2879;
  t18274 = t15914 + t18272 + t18273;
  t16057 = t29*t4427;
  t16065 = -1.*t432*t2669;
  t16067 = -1.*t4427*t38;
  t19245 = t32*t38*t2812;
  t19346 = t57*t38*t2879;
  t19537 = t15794 + t19245 + t19346;
  t20778 = -1.*t57*t2812;
  t20786 = t32*t2879;
  t20792 = t20778 + t20786;
  t20974 = -1.*t1056*t7237;
  t20982 = t1039*t7259;
  t20987 = t20974 + t20982;
  t16920 = t7089*t1054;
  t16921 = t1034*t7962;
  t21237 = Power(t1039,2);
  t21239 = Power(t1056,2);
  t16958 = -1.*t7962*t1087;
  t21248 = -1.*t1039*t1034*t7237;
  t21252 = -1.*t1056*t1034*t7259;
  t21269 = t16531 + t21248 + t21252;
  t17077 = t1034*t8432;
  t21435 = t1039*t1054*t7237;
  t21442 = t1056*t1054*t7259;
  t21443 = t16401 + t21435 + t21442;
  t17138 = -1.*t1071*t7089;
  t17142 = -1.*t8432*t1087;
  t21613 = t1056*t7237;
  t21614 = -1.*t1039*t7259;
  t21622 = t21613 + t21614;
  t21686 = -1.*t432*t2737;
  t21728 = t21686 + t15914;
  t21757 = t2737*t38;
  t21758 = t15794 + t21757;
  t21794 = -0.15121*t157;
  t21796 = -0.15121*t38;
  t21797 = t21794 + t21796;
  t21841 = -0.15121*t1071;
  t21845 = -0.15121*t1034;
  t21850 = t21841 + t21845;
  t21854 = t1054*t7217;
  t21859 = t16401 + t21854;
  t21880 = -1.*t1034*t7217;
  t21897 = t21880 + t16531;
  p_output1[0]=t76;
  p_output1[1]=t122;
  p_output1[2]=t122;
  p_output1[3]=t213;
  p_output1[4]=t894;
  p_output1[5]=-1.*t31*t912;
  p_output1[6]=t939;
  p_output1[7]=t939;
  p_output1[8]=t977;
  p_output1[9]=t994;
  p_output1[10]=t994;
  p_output1[11]=t999;
  p_output1[12]=t1016;
  p_output1[13]=t1061;
  p_output1[14]=t1066;
  p_output1[15]=t1066;
  p_output1[16]=t1084;
  p_output1[17]=t1093;
  p_output1[18]=-1.*t1098*t31;
  p_output1[19]=t1103;
  p_output1[20]=t1103;
  p_output1[21]=t1106;
  p_output1[22]=t1110;
  p_output1[23]=t1110;
  p_output1[24]=t1114;
  p_output1[25]=t1125;
  p_output1[26]=-1.*t1126*t1130 - 1.*t1138*t76;
  p_output1[27]=-1.*t1126*t1151;
  p_output1[28]=t1159;
  p_output1[29]=t1159;
  p_output1[30]=t1138*t1163 - 1.*t1126*t1175;
  p_output1[31]=t1191;
  p_output1[32]=-1.*t1126*t1200 + t1138*t31*t912;
  p_output1[33]=t1126*t20*t912;
  p_output1[34]=t1208;
  p_output1[35]=t1208;
  p_output1[36]=-1.*t1126*t1187 - 1.*t1138*t977;
  p_output1[37]=-1.*t1126*t1227;
  p_output1[38]=t1232;
  p_output1[39]=t1232;
  p_output1[40]=t1249;
  p_output1[41]=t1138*t1253 - 1.*t1126*t1269;
  p_output1[42]=-1.*t1061*t1138 - 1.*t1126*t1276;
  p_output1[43]=-1.*t1126*t1289;
  p_output1[44]=t1295;
  p_output1[45]=t1295;
  p_output1[46]=t1138*t1302 - 1.*t1126*t1317;
  p_output1[47]=t1347;
  p_output1[48]=-1.*t1126*t1353 + t1098*t1138*t31;
  p_output1[49]=t1098*t1126*t20;
  p_output1[50]=t1374;
  p_output1[51]=t1374;
  p_output1[52]=-1.*t1106*t1138 - 1.*t1126*t1332;
  p_output1[53]=-1.*t1126*t1393;
  p_output1[54]=t1398;
  p_output1[55]=t1398;
  p_output1[56]=t1408;
  p_output1[57]=t1138*t1820 - 1.*t1126*t1832;
  p_output1[58]=t1249;
  p_output1[59]=t1138*t1151;
  p_output1[60]=t1856;
  p_output1[61]=t1856;
  p_output1[62]=t1126*t1163 + t1138*t1175;
  p_output1[63]=t1126*t1187 + t1138*t977;
  p_output1[64]=t1138*t1200 + t1126*t31*t912;
  p_output1[65]=-1.*t1138*t20*t912;
  p_output1[66]=t2139;
  p_output1[67]=t2139;
  p_output1[68]=t1191;
  p_output1[69]=t1138*t1227;
  p_output1[70]=t2160;
  p_output1[71]=t2160;
  p_output1[72]=t1126*t1130 + t1138*t76;
  p_output1[73]=t1126*t1253 + t1138*t1269;
  p_output1[74]=t1408;
  p_output1[75]=t1138*t1289;
  p_output1[76]=t2231;
  p_output1[77]=t2231;
  p_output1[78]=t1126*t1302 + t1138*t1317;
  p_output1[79]=t1106*t1138 + t1126*t1332;
  p_output1[80]=t1138*t1353 + t1098*t1126*t31;
  p_output1[81]=-1.*t1098*t1138*t20;
  p_output1[82]=t2339;
  p_output1[83]=t2339;
  p_output1[84]=t1347;
  p_output1[85]=t1138*t1393;
  p_output1[86]=t2348;
  p_output1[87]=t2348;
  p_output1[88]=t1061*t1138 + t1126*t1276;
  p_output1[89]=t1126*t1820 + t1138*t1832;
  p_output1[90]=-1.*t31*t3171*t912 + t894*(t2885*t31*t912 + t2898*t31*t912) + t3081*t977 + t20*t912*(t1227*t3055 + t3055*t894 + t2885*t977 + t2898*t977);
  p_output1[91]=t3202 + t3532 + t894*(t3337 + t3351 + t3379 + t3393 - 1.*t3217*t3270*t912 - 1.*t3270*t3287*t912) + t20*t912*(t3451 + t3478 + t3510 + t3513 + t20*t3270*t894 - 1.*t31*t3270*t977);
  p_output1[92]=t3202 + t3532 + t894*(t3337 + t3379 + t3393 + t3720 - 1.*t3217*t3645*t912 - 1.*t3287*t3645*t912) + t20*t912*(t3451 + t3510 + t3513 + t3779 + t20*t3645*t894 - 1.*t31*t3645*t977);
  p_output1[93]=t894*(t4055 - 1.*t20*t4176*t912 + t31*t4215*t912) + t20*t912*(t4283 + t4310 + t4349 + t4350 + t4176*t894 + t4215*t977) + t3081*t999;
  p_output1[94]=t1016*t3081 + t894*(t4421 - 1.*t20*t4488*t912 + t31*t4527*t912) + t20*t912*(t1016*t2898 + t1269*t3055 + t4573 + t4582 + t4488*t894 + t4527*t977);
  p_output1[95]=t4715*t76 + t4791*t977 + (-1.*t1227*t3055 - 1.*t3055*t894 - 1.*t2885*t977 - 1.*t2898*t977)*t999 + t894*(t1151*t3055 + t2885*t76 + t2898*t76 + t3055*t999);
  p_output1[96]=t4992 + t4993 + (t4819 + t4820 + t4899 + t4903 - 1.*t20*t3270*t894 + t31*t3270*t977)*t999 + t894*(t4923 + t4926 + t4952 + t4959 - 1.*t31*t3270*t76 + t20*t3270*t999);
  p_output1[97]=t4992 + t4993 + (t4819 + t4899 + t4903 + t5034 - 1.*t20*t3645*t894 + t31*t3645*t977)*t999 + t894*(t4923 + t4952 + t4959 + t5051 - 1.*t31*t3645*t76 + t20*t3645*t999);
  p_output1[98]=t213*t4715 + t4791*t999 + (t5305 + t5367 + t5486 + t5491 - 1.*t4176*t894 - 1.*t4215*t977)*t999 + t894*(t213*t2898 + t1175*t3055 + t5114 + t5116 + t4215*t76 + t4176*t999);
  p_output1[99]=t1016*t4791 + t4715*t894 + (-1.*t1016*t2898 - 1.*t1269*t3055 + t5895 + t5957 - 1.*t4488*t894 - 1.*t4527*t977)*t999 + t894*(t3162 + t3165 + t3170 + t5698 + t4527*t76 + t4488*t999);
  p_output1[100]=t6496*t76 - 1.*t31*t6543*t912 + (-1.*t2885*t31*t912 - 1.*t2898*t31*t912)*t999 + t20*t912*(-1.*t1151*t3055 - 1.*t2885*t76 - 1.*t2898*t76 - 1.*t3055*t999);
  p_output1[101]=t6549 + t6769 + (t6552 + t6562 + t6564 + t6613 + t3217*t3270*t912 + t3270*t3287*t912)*t999 + t20*t912*(t6750 + t6759 + t6762 + t6763 + t31*t3270*t76 - 1.*t20*t3270*t999);
  p_output1[102]=t6549 + t6769 + (t6552 + t6564 + t6613 + t6778 + t3217*t3645*t912 + t3287*t3645*t912)*t999 + t20*t912*(t6750 + t6762 + t6763 + t6783 + t31*t3645*t76 - 1.*t20*t3645*t999);
  p_output1[103]=t213*t6496 + (t6803 + t20*t4176*t912 - 1.*t31*t4215*t912)*t999 + t20*t912*(-1.*t213*t2898 - 1.*t1175*t3055 + t6976 + t6980 - 1.*t4215*t76 - 1.*t4176*t999);
  p_output1[104]=t6496*t894 + (t7014 + t20*t4488*t912 - 1.*t31*t4527*t912)*t999 + t20*t912*(t4702 + t4712 + t4714 + t7027 - 1.*t4527*t76 - 1.*t4488*t999);
  p_output1[105]=t1093*(t1098*t31*t7271 + t1098*t31*t7296) + t1098*t20*(t1106*t7271 + t1106*t7296 + t1093*t7350 + t1393*t7350) + t1106*t7368 - 1.*t1098*t31*t7402;
  p_output1[106]=t7409 + t1093*(-1.*t1098*t3217*t7414 - 1.*t1098*t3287*t7414 + t7420 + t7421 + t7427 + t7430) + t1098*t20*(t1093*t20*t7414 - 1.*t1106*t31*t7414 + t7434 + t7435 + t7440 + t7441) + t7448;
  p_output1[107]=t7409 + t7448 + t1093*(t7420 + t7427 + t7430 - 1.*t1098*t3217*t7515 - 1.*t1098*t3287*t7515 + t7534) + t1098*t20*(t7434 + t7440 + t7441 + t1093*t20*t7515 - 1.*t1106*t31*t7515 + t7598);
  p_output1[108]=t1114*t7368 + t1093*(t7928 - 1.*t1098*t20*t7995 + t1098*t31*t8145) + t1098*t20*(t1093*t7995 + t1106*t8145 + t8210 + t8223 + t8251 + t8255);
  p_output1[109]=t1125*t7368 + t1093*(t8372 - 1.*t1098*t20*t8759 + t1098*t31*t8783) + t1098*t20*(t1125*t7296 + t1832*t7350 + t1093*t8759 + t1106*t8783 + t8851 + t8854);
  p_output1[110]=t1093*(t1061*t7271 + t1061*t7296 + t1114*t7350 + t1289*t7350) + t1114*(-1.*t1106*t7271 - 1.*t1106*t7296 - 1.*t1093*t7350 - 1.*t1393*t7350) + t1061*t8936 + t1106*t9151;
  p_output1[111]=t1114*(-1.*t1093*t20*t7414 + t1106*t31*t7414 + t9185 + t9202 + t9226 + t9235) + t1093*(t1114*t20*t7414 - 1.*t1061*t31*t7414 + t9248 + t9259 + t9279 + t9281) + t9339 + t9340;
  p_output1[112]=t9339 + t9340 + t1114*(-1.*t1093*t20*t7515 + t1106*t31*t7515 + t9185 + t9226 + t9235 + t9373) + t1093*(t1114*t20*t7515 - 1.*t1061*t31*t7515 + t9248 + t9279 + t9281 + t9540);
  p_output1[113]=t1084*t8936 + t1114*t9151 + t1093*(t1084*t7296 + t1317*t7350 + t1114*t7995 + t1061*t8145 + t9594 + t9602) + t1114*(t10044 + t10120 + t10123 - 1.*t1093*t7995 - 1.*t1106*t8145 + t9999);
  p_output1[114]=t1093*(t10182 + t7392 + t7397 + t7401 + t1114*t8759 + t1061*t8783) + t1114*(t10365 + t10409 - 1.*t1125*t7296 - 1.*t1832*t7350 - 1.*t1093*t8759 - 1.*t1106*t8783) + t1093*t8936 + t1125*t9151;
  p_output1[115]=t10457*t1061 - 1.*t10592*t1098*t31 + t1114*(-1.*t1098*t31*t7271 - 1.*t1098*t31*t7296) + t1098*t20*(-1.*t1061*t7271 - 1.*t1061*t7296 - 1.*t1114*t7350 - 1.*t1289*t7350);
  p_output1[116]=t10640 + t10832 + t1098*t20*(t10701 + t10703 + t10708 + t10709 - 1.*t1114*t20*t7414 + t1061*t31*t7414) + t1114*(t10653 + t10679 + t10680 + t10697 + t1098*t3217*t7414 + t1098*t3287*t7414);
  p_output1[117]=t10640 + t10832 + t1098*t20*(t10701 + t10708 + t10709 + t13454 - 1.*t1114*t20*t7515 + t1061*t31*t7515) + t1114*(t10653 + t10680 + t10697 + t12364 + t1098*t3217*t7515 + t1098*t3287*t7515);
  p_output1[118]=t10457*t1084 + t1098*t20*(t15298 + t15303 - 1.*t1084*t7296 - 1.*t1317*t7350 - 1.*t1114*t7995 - 1.*t1061*t8145) + t1114*(t14720 + t1098*t20*t7995 - 1.*t1098*t31*t8145);
  p_output1[119]=t10457*t1093 + t1114*(t15492 + t1098*t20*t8759 - 1.*t1098*t31*t8783) + t1098*t20*(t15631 - 1.*t1114*t8759 - 1.*t1061*t8783 + t8921 + t8922 + t8923);
  p_output1[120]=t15682 + t15754 + t1200*(t15735 + t3451 + t3478 + t3270*t888) + t1187*(t15686 + t3337 + t3351 - 1.*t3270*t912);
  p_output1[121]=t15682 + t15754 + t1200*(t15735 + t3451 + t3779 + t3645*t888) + t1187*(t15686 + t3337 + t3720 - 1.*t3645*t912);
  p_output1[122]=t1130*t15658 + t1200*(t15794 + t15802 + t38*t4078 + t4283 + t4310 + t4153*t888) + t1187*(t4055 - 1.*t4153*t912);
  p_output1[123]=t1253*t15658 + t1200*(t1010*t2882 + t2669*t432 + t38*t4427 + t4573 + t4582 + t4441*t888) + t1187*(t4421 - 1.*t4441*t912);
  p_output1[124]=t15919 + t15957 + t1187*(t15922 + t4923 + t4926 + t3270*t66) + t1130*(t15910 + t4819 + t4820 - 1.*t3270*t888);
  p_output1[125]=t15919 + t15957 + t1187*(t15922 + t4923 + t5051 + t3645*t66) + t1130*(t15910 + t4819 + t5034 - 1.*t3645*t888);
  p_output1[126]=t1163*t15918 + t1130*t15954 + t1187*(t15999 + t16000 + t197*t2882 + t5114 + t5116 + t4153*t66) + t1130*(t16009 + t16011 + t16021 + t5305 + t5367 - 1.*t4153*t888);
  p_output1[127]=t1187*t15918 + t1253*t15954 + t1187*(t15749 + t15750 + t16057 + t3162 + t5698 + t4441*t66) + t1130*(t16065 + t16067 - 1.*t1010*t2882 + t5895 + t5957 - 1.*t4441*t888);
  p_output1[128]=t16141 + t16171 + t1200*(t16157 - 1.*t3270*t66 + t6750 + t6759) + t1130*(t16149 + t6552 + t6562 + t3270*t912);
  p_output1[129]=t16141 + t16171 + t1200*(t16157 - 1.*t3645*t66 + t6750 + t6783) + t1130*(t16149 + t6552 + t6778 + t3645*t912);
  p_output1[130]=t1163*t16103 + t1200*(-1.*t157*t2669 - 1.*t197*t2882 - 1.*t29*t4078 - 1.*t4153*t66 + t6976 + t6980) + t1130*(t6803 + t4153*t912);
  p_output1[131]=t1187*t16103 + t1200*(t15914 + t15917 - 1.*t29*t4427 + t4702 - 1.*t4441*t66 + t7027) + t1130*(t7014 + t4441*t912);
  p_output1[132]=t16276 + t16354 + t1332*(t16303 - 1.*t1098*t7414 + t7420 + t7421) + t1353*(t16329 + t1091*t7414 + t7434 + t7435);
  p_output1[133]=t16276 + t16354 + t1332*(t16303 + t7420 - 1.*t1098*t7515 + t7534) + t1353*(t16329 + t7434 + t1091*t7515 + t7598);
  p_output1[134]=t1276*t16267 + t1332*(t7928 - 1.*t1098*t7979) + t1353*(t16401 + t16409 + t1087*t7962 + t1091*t7979 + t8210 + t8223);
  p_output1[135]=t16267*t1820 + t1332*(t8372 - 1.*t1098*t8653) + t1353*(t1071*t7089 + t1122*t7269 + t1087*t8432 + t1091*t8653 + t8851 + t8854);
  p_output1[136]=t16543 + t16682 + t1276*(t16513 - 1.*t1091*t7414 + t9185 + t9202) + t1332*(t16560 + t1058*t7414 + t9248 + t9259);
  p_output1[137]=t16543 + t16682 + t1276*(t16513 - 1.*t1091*t7515 + t9185 + t9373) + t1332*(t16560 + t1058*t7515 + t9248 + t9540);
  p_output1[138]=t1302*t16537 + t1276*t16610 + t1332*(t16920 + t16921 + t1082*t7269 + t1058*t7979 + t9594 + t9602) + t1276*(t10044 + t16944 + t16958 + t17037 - 1.*t1091*t7979 + t9999);
  p_output1[139]=t1332*t16537 + t16610*t1820 + t1332*(t10182 + t16347 + t16348 + t17077 + t7392 + t1058*t8653) + t1276*(t10365 + t10409 + t17138 + t17142 - 1.*t1122*t7269 - 1.*t1091*t8653);
  p_output1[140]=t17255 + t17585 + t1353*(t10701 + t10703 + t17384 - 1.*t1058*t7414) + t1276*(t10653 + t10679 + t17295 + t1098*t7414);
  p_output1[141]=t17255 + t17585 + t1353*(t10701 + t13454 + t17384 - 1.*t1058*t7515) + t1276*(t10653 + t12364 + t17295 + t1098*t7515);
  p_output1[142]=t1302*t17238 + t1353*(t15298 + t15303 - 1.*t1054*t7089 - 1.*t1082*t7269 - 1.*t1034*t7962 - 1.*t1058*t7979) + t1276*(t14720 + t1098*t7979);
  p_output1[143]=t1332*t17238 + t1276*(t15492 + t1098*t8653) + t1353*(t15631 + t16531 + t16534 - 1.*t1034*t8432 - 1.*t1058*t8653 + t8921);
  p_output1[144]=t38*(t2812*t32 - 1.*t32*t3609 + t2879*t57 + t3574*t57);
  p_output1[145]=t18066*t29;
  p_output1[146]=t18066*t432;
  p_output1[147]=t38*(t2879*t32*t38 + t32*t3574*t38 - 1.*t2812*t38*t57 + t3609*t38*t57) + t29*(-1.*t2879*t32*t432 - 1.*t32*t3574*t432 + t2812*t432*t57 - 1.*t3609*t432*t57);
  p_output1[148]=t157*t18274 + t19537*t29 + t38*(t15999 + t16000 + t2812*t29*t32 + t18283*t2669*t38 + t18294*t2669*t38 + t2879*t29*t57) + t29*(t16009 + t16011 - 1.*t2812*t32*t38 - 1.*t18283*t2669*t432 - 1.*t18294*t2669*t432 - 1.*t2879*t38*t57);
  p_output1[149]=t18274*t38 + t19537*t432 + t29*(t16065 + t16067 - 1.*t157*t2812*t32 - 1.*t18283*t432*t4398 - 1.*t18294*t432*t4398 - 1.*t157*t2879*t57) + t38*(t15749 + t16057 + t2812*t32*t432 + t18283*t38*t4398 + t18294*t38*t4398 + t2879*t432*t57);
  p_output1[150]=t29*(-1.*t2812*t32 + t32*t3609 - 1.*t2879*t57 - 1.*t3574*t57);
  p_output1[151]=t157*t20792;
  p_output1[152]=t20792*t38;
  p_output1[153]=t1087*(-1.*t1039*t7237 - 1.*t1056*t7259 - 1.*t1056*t7455 + t1039*t7483);
  p_output1[154]=t1034*t20987;
  p_output1[155]=t1071*t20987;
  p_output1[156]=t1034*(t1034*t1056*t7237 - 1.*t1034*t1039*t7259 - 1.*t1034*t1039*t7455 - 1.*t1034*t1056*t7483) + t1087*(-1.*t1054*t1056*t7237 + t1039*t1054*t7259 + t1039*t1054*t7455 + t1054*t1056*t7483);
  p_output1[157]=t1054*t21269 + t1034*t21443 + t1034*(t16944 + t16958 - 1.*t1039*t1054*t7237 - 1.*t1054*t1056*t7259 - 1.*t1034*t21237*t7802 - 1.*t1034*t21239*t7802) + t1087*(t16920 + t16921 + t1039*t1071*t7237 + t1056*t1071*t7259 + t1054*t21237*t7802 + t1054*t21239*t7802);
  p_output1[158]=t1087*t21269 + t1071*t21443 + t1034*(t17138 + t17142 - 1.*t1039*t1087*t7237 - 1.*t1056*t1087*t7259 - 1.*t1034*t21237*t8267 - 1.*t1034*t21239*t8267) + t1087*(t16347 + t17077 + t1034*t1039*t7237 + t1034*t1056*t7259 + t1054*t21237*t8267 + t1054*t21239*t8267);
  p_output1[159]=t1034*(t1039*t7237 + t1056*t7259 + t1056*t7455 - 1.*t1039*t7483);
  p_output1[160]=t1054*t21622;
  p_output1[161]=t1087*t21622;
  p_output1[162]=t157*t21728 + t21758*t29 + (t15749 + t15999 + t16000 + t2737*t29)*t38 + t29*(t16009 + t16011 + t16065 - 1.*t2737*t38);
  p_output1[163]=t21728*t38 + t21758*t432 + t38*(t15749 + t16057 + t2737*t432 + t38*t4398) + t29*(t16065 + t16067 - 1.*t157*t2737 - 1.*t432*t4398);
  p_output1[164]=t21797;
  p_output1[165]=t21797;
  p_output1[166]=0.28121*t21 - 0.305*Power(t21,2) - 1.*t21*t2641;
  p_output1[167]=-0.28121*t27 + 0.305*t21*t27 + t2641*t27;
  p_output1[168]=t21850;
  p_output1[169]=t21850;
  p_output1[170]=t1034*t21859 + t1054*t21897 + t1034*(t16944 + t16958 - 1.*t1054*t7217 - 1.*t1034*t7802) + t1087*(t16920 + t16921 + t1071*t7217 + t1054*t7802);
  p_output1[171]=t1071*t21859 + t1087*t21897 + t1034*(t17138 + t17142 - 1.*t1087*t7217 - 1.*t1034*t8267) + t1087*(t16347 + t17077 + t1034*t7217 + t1054*t8267);
  p_output1[172]=0.28121*t1020 - 0.305*Power(t1020,2) + t1020*t7045;
  p_output1[173]=-0.28121*t1032 + 0.305*t1020*t1032 - 1.*t1032*t7045;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 18 && ncols == 1) && 
      !(mrows == 1 && ncols == 18))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 174, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_Je_ParallelStance.hh"

namespace SymFunction
{

void J_Je_ParallelStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
