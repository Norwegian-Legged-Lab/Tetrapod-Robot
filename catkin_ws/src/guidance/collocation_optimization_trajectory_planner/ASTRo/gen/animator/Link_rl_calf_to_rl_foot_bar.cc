/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 15:18:36 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1734;
  double t1793;
  double t2069;
  double t2240;
  double t659;
  double t864;
  double t889;
  double t898;
  double t1150;
  double t1344;
  double t2225;
  double t663;
  double t2489;
  double t2395;
  double t2614;
  double t2831;
  double t2839;
  double t2860;
  double t2938;
  double t2660;
  double t2432;
  double t2674;
  double t2624;
  double t2628;
  double t2638;
  double t2727;
  double t2753;
  double t2758;
  double t3067;
  double t2559;
  double t3210;
  double t2618;
  double t3830;
  double t2922;
  double t4253;
  double t4305;
  double t2249;
  double t3182;
  double t3183;
  double t3204;
  double t3215;
  double t3225;
  double t3226;
  double t3331;
  double t3334;
  double t3603;
  double t4723;
  double t4337;
  double t4367;
  double t4419;
  double t4432;
  double t4525;
  double t4545;
  double t4577;
  double t4619;
  double t4937;
  double t4938;
  double t5014;
  double t5018;
  double t5028;
  double t5085;
  double t5139;
  double t5183;
  double t3111;
  double t5253;
  double t2943;
  double t5420;
  double t4068;
  double t5272;
  double t5292;
  double t3840;
  double t1137;
  double t1592;
  double t1708;
  double t1709;
  double t2088;
  double t2271;
  double t2366;
  double t2396;
  double t2411;
  double t2414;
  double t2436;
  double t2452;
  double t2484;
  double t2506;
  double t2536;
  double t2542;
  double t2587;
  double t2596;
  double t2619;
  double t2621;
  double t2622;
  double t2640;
  double t2650;
  double t2656;
  double t2664;
  double t2669;
  double t2691;
  double t2704;
  double t2717;
  double t2787;
  double t2802;
  double t2894;
  double t2990;
  double t3002;
  double t3143;
  double t3157;
  double t3168;
  double t3653;
  double t3685;
  double t3692;
  double t3947;
  double t4052;
  double t4137;
  double t4158;
  double t4197;
  double t4623;
  double t4650;
  double t4713;
  double t4758;
  double t4770;
  double t4781;
  double t4807;
  double t4839;
  double t5207;
  double t5254;
  double t5261;
  double t5297;
  double t5298;
  double t5318;
  double t5325;
  double t5333;
  double t5340;
  double t5380;
  double t5384;
  double t5397;
  double t5440;
  double t5442;
  double t5443;
  double t5455;
  double t5475;
  double t5498;
  double t5501;
  double t5505;
  double t5506;
  double t5514;
  double t5522;
  double t5523;
  double t5530;
  double t5368;
  double t5497;
  double t5534;
  double t5538;
  double t5714;
  double t5719;
  double t5718;
  double t5720;
  double t5721;
  double t5723;
  double t5724;
  double t5725;
  double t5727;
  double t5728;
  double t5729;
  double t5731;
  double t5732;
  double t5733;
  double t5735;
  double t5736;
  double t5737;
  double t5738;
  double t5740;
  double t5741;
  double t5742;
  double t5743;
  double t5745;
  double t5746;
  double t5747;
  double t5748;
  double t5717;
  double t5722;
  double t5726;
  double t5730;
  double t5734;
  double t5739;
  double t5744;
  double t5749;
  double t5750;
  double t5751;
  double t5752;
  double t5753;
  double t5755;
  double t5756;
  double t5757;
  double t5758;
  double t5762;
  double t5763;
  double t5764;
  double t5767;
  double t5754;
  double t5759;
  double t5770;
  double t5771;
  double t5873;
  double t5874;
  double t5875;
  double t5877;
  double t5878;
  double t5879;
  double t5881;
  double t5882;
  double t5883;
  double t5888;
  double t5889;
  double t5890;
  double t5892;
  double t5893;
  double t5894;
  double t5895;
  double t5897;
  double t5898;
  double t5899;
  double t5900;
  double t5902;
  double t5903;
  double t5904;
  double t5905;
  double t5872;
  double t5876;
  double t5880;
  double t5884;
  double t5891;
  double t5896;
  double t5901;
  double t5906;
  double t5907;
  double t5908;
  double t5909;
  double t5910;
  double t5912;
  double t5913;
  double t5914;
  double t5915;
  double t5917;
  double t5918;
  double t5919;
  double t5920;
  double t5911;
  double t5916;
  double t5921;
  double t5922;
  double t5543;
  double t5571;
  double t5582;
  double t5586;
  double t5594;
  double t5600;
  double t5605;
  double t5610;
  double t5619;
  double t5639;
  double t5651;
  double t5681;
  double t5688;
  double t5692;
  double t5696;
  double t5702;
  double t5706;
  double t5710;
  double t5998;
  double t5999;
  double t6000;
  double t5772;
  double t5782;
  double t5799;
  double t5812;
  double t5816;
  double t5820;
  double t5824;
  double t5828;
  double t5832;
  double t5836;
  double t5840;
  double t5844;
  double t5848;
  double t5852;
  double t5856;
  double t5860;
  double t5864;
  double t5868;
  double t6058;
  double t6059;
  double t6060;
  double t5923;
  double t5927;
  double t5931;
  double t5935;
  double t5939;
  double t5943;
  double t5947;
  double t5951;
  double t5955;
  double t5959;
  double t5966;
  double t5970;
  double t5974;
  double t5978;
  double t5982;
  double t5986;
  double t5990;
  double t5994;
  double t6115;
  double t6116;
  double t6117;
  t1734 = Cos(var1[13]);
  t1793 = -1.*t1734;
  t2069 = 1. + t1793;
  t2240 = Sin(var1[13]);
  t659 = Cos(var1[4]);
  t864 = Cos(var1[12]);
  t889 = -1.*t864;
  t898 = 1. + t889;
  t1150 = Sin(var1[12]);
  t1344 = 0.15121*t1150;
  t2225 = 4.e-6*t2069;
  t663 = Cos(var1[5]);
  t2489 = Sin(var1[5]);
  t2395 = -2.8e-11*t2069;
  t2614 = 7.e-6*t2069;
  t2831 = Cos(var1[14]);
  t2839 = -1.*t2831;
  t2860 = 1. + t2839;
  t2938 = Sin(var1[14]);
  t2660 = -1.*t2240;
  t2432 = Sin(var1[4]);
  t2674 = -4.e-6*t2240;
  t2624 = -1.*t659*t663*t1150;
  t2628 = -1.*t864*t659*t2489;
  t2638 = t2624 + t2628;
  t2727 = t864*t659*t663;
  t2753 = -1.*t659*t1150*t2489;
  t2758 = t2727 + t2753;
  t3067 = 7.e-6*t2860;
  t2559 = -7.e-6*t2240;
  t3210 = -7.e-6*t2069;
  t2618 = 4.e-6*t2240;
  t3830 = 4.e-6*t2860;
  t2922 = -2.8e-11*t2860;
  t4253 = -1. + t1734;
  t4305 = 4.e-6*t4253;
  t2249 = 7.e-6*t2240;
  t3182 = 2.8e-11*t2069;
  t3183 = t3182 + t2660;
  t3204 = t3183*t2432;
  t3215 = t3210 + t2674;
  t3225 = t3215*t2638;
  t3226 = -1.000000000016*t2069;
  t3331 = 1. + t3226;
  t3334 = t3331*t2758;
  t3603 = t3204 + t3225 + t3334;
  t4723 = 7.e-6*t2938;
  t4337 = t4305 + t2559;
  t4367 = t4337*t2432;
  t4419 = -6.5e-11*t2069;
  t4432 = 1. + t4419;
  t4525 = t4432*t2638;
  t4545 = t3210 + t2618;
  t4577 = t4545*t2758;
  t4619 = t4367 + t4525 + t4577;
  t4937 = -1.000000000049*t2069;
  t4938 = 1. + t4937;
  t5014 = t4938*t2432;
  t5018 = t4305 + t2249;
  t5028 = t5018*t2638;
  t5085 = t3182 + t2240;
  t5139 = t5085*t2758;
  t5183 = t5014 + t5028 + t5139;
  t3111 = -4.e-6*t2938;
  t5253 = 2.8e-11*t2860;
  t2943 = -1.*t2938;
  t5420 = -7.e-6*t2860;
  t4068 = 4.e-6*t2938;
  t5272 = -1. + t2831;
  t5292 = 4.e-6*t5272;
  t3840 = -7.e-6*t2938;
  t1137 = -0.15121*t898;
  t1592 = t1137 + t1344;
  t1708 = t659*t663*t1592;
  t1709 = 5.856279999999999e-13*var1[13];
  t2088 = -0.0387489999948987*t2069;
  t2271 = t2225 + t2249;
  t2366 = -2.123459e-6*t2271;
  t2396 = t2395 + t2240;
  t2411 = -0.281209000004*t2396;
  t2414 = t1709 + t2088 + t2366 + t2411;
  t2436 = t2414*t2432;
  t2452 = 0.15121*t898;
  t2484 = t2452 + t1344;
  t2506 = -1.*t659*t2484*t2489;
  t2536 = -1.4640699999999997e-7*var1[13];
  t2542 = -1.38024835e-16*t2069;
  t2587 = t2225 + t2559;
  t2596 = -0.038748999993*t2587;
  t2619 = t2614 + t2618;
  t2621 = -0.281209000004*t2619;
  t2622 = t2536 + t2542 + t2596 + t2621;
  t2640 = t2622*t2638;
  t2650 = 1.0248489999999998e-12*var1[13];
  t2656 = -0.28120900000849935*t2069;
  t2664 = t2395 + t2660;
  t2669 = -0.038748999993*t2664;
  t2691 = t2614 + t2674;
  t2704 = -2.123459e-6*t2691;
  t2717 = t2650 + t2656 + t2669 + t2704;
  t2787 = t2717*t2758;
  t2802 = 1.8190549999999993e-12*var1[14];
  t2894 = -0.5031490000160505*t2860;
  t2990 = t2922 + t2943;
  t3002 = -0.038922999986*t2990;
  t3143 = t3067 + t3111;
  t3157 = -3.6777349999999994e-6*t3143;
  t3168 = t2802 + t2894 + t3002 + t3157;
  t3653 = t3168*t3603;
  t3685 = -2.598649999999999e-7*var1[14];
  t3692 = -2.3905277499999995e-16*t2860;
  t3947 = t3830 + t3840;
  t4052 = -0.038922999986*t3947;
  t4137 = t3067 + t4068;
  t4158 = -0.503149000008*t4137;
  t4197 = t3685 + t3692 + t4052 + t4158;
  t4623 = t4197*t4619;
  t4650 = 1.0394599999999997e-12*var1[14];
  t4713 = -0.03892299998790722*t2860;
  t4758 = t3830 + t4723;
  t4770 = -3.6777349999999994e-6*t4758;
  t4781 = t2922 + t2938;
  t4807 = -0.503149000008*t4781;
  t4839 = t4650 + t4713 + t4770 + t4807;
  t5207 = t4839*t5183;
  t5254 = t5253 + t2938;
  t5261 = t5254*t3603;
  t5297 = t5292 + t4723;
  t5298 = t5297*t4619;
  t5318 = -1.000000000049*t2860;
  t5325 = 1. + t5318;
  t5333 = t5325*t5183;
  t5340 = t5261 + t5298 + t5333;
  t5380 = -1.000000000016*t2860;
  t5384 = 1. + t5380;
  t5397 = t5384*t3603;
  t5440 = t5420 + t3111;
  t5442 = t5440*t4619;
  t5443 = t5253 + t2943;
  t5455 = t5443*t5183;
  t5475 = t5397 + t5442 + t5455;
  t5498 = t5420 + t4068;
  t5501 = t5498*t3603;
  t5505 = -6.5e-11*t2860;
  t5506 = 1. + t5505;
  t5514 = t5506*t4619;
  t5522 = t5292 + t3840;
  t5523 = t5522*t5183;
  t5530 = t5501 + t5514 + t5523;
  t5368 = -0.053397*t5340;
  t5497 = -0.502927*t5475;
  t5534 = 0.161773*t5530;
  t5538 = var1[0] + t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 + t5368 + t5497 + t5534;
  t5714 = Sin(var1[3]);
  t5719 = Cos(var1[3]);
  t5718 = t663*t5714*t2432;
  t5720 = t5719*t2489;
  t5721 = t5718 + t5720;
  t5723 = t5719*t663;
  t5724 = -1.*t5714*t2432*t2489;
  t5725 = t5723 + t5724;
  t5727 = -1.*t1150*t5721;
  t5728 = t864*t5725;
  t5729 = t5727 + t5728;
  t5731 = t864*t5721;
  t5732 = t1150*t5725;
  t5733 = t5731 + t5732;
  t5735 = -1.*t659*t3183*t5714;
  t5736 = t3215*t5729;
  t5737 = t3331*t5733;
  t5738 = t5735 + t5736 + t5737;
  t5740 = -1.*t659*t4337*t5714;
  t5741 = t4432*t5729;
  t5742 = t4545*t5733;
  t5743 = t5740 + t5741 + t5742;
  t5745 = -1.*t4938*t659*t5714;
  t5746 = t5018*t5729;
  t5747 = t5085*t5733;
  t5748 = t5745 + t5746 + t5747;
  t5717 = -1.*t659*t2414*t5714;
  t5722 = t1592*t5721;
  t5726 = t2484*t5725;
  t5730 = t2622*t5729;
  t5734 = t2717*t5733;
  t5739 = t3168*t5738;
  t5744 = t4197*t5743;
  t5749 = t4839*t5748;
  t5750 = t5254*t5738;
  t5751 = t5297*t5743;
  t5752 = t5325*t5748;
  t5753 = t5750 + t5751 + t5752;
  t5755 = t5384*t5738;
  t5756 = t5440*t5743;
  t5757 = t5443*t5748;
  t5758 = t5755 + t5756 + t5757;
  t5762 = t5498*t5738;
  t5763 = t5506*t5743;
  t5764 = t5522*t5748;
  t5767 = t5762 + t5763 + t5764;
  t5754 = -0.053397*t5753;
  t5759 = -0.502927*t5758;
  t5770 = 0.161773*t5767;
  t5771 = var1[1] + t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 + t5754 + t5759 + t5770;
  t5873 = -1.*t5719*t663*t2432;
  t5874 = t5714*t2489;
  t5875 = t5873 + t5874;
  t5877 = t663*t5714;
  t5878 = t5719*t2432*t2489;
  t5879 = t5877 + t5878;
  t5881 = -1.*t1150*t5875;
  t5882 = t864*t5879;
  t5883 = t5881 + t5882;
  t5888 = t864*t5875;
  t5889 = t1150*t5879;
  t5890 = t5888 + t5889;
  t5892 = t5719*t659*t3183;
  t5893 = t3215*t5883;
  t5894 = t3331*t5890;
  t5895 = t5892 + t5893 + t5894;
  t5897 = t5719*t659*t4337;
  t5898 = t4432*t5883;
  t5899 = t4545*t5890;
  t5900 = t5897 + t5898 + t5899;
  t5902 = t4938*t5719*t659;
  t5903 = t5018*t5883;
  t5904 = t5085*t5890;
  t5905 = t5902 + t5903 + t5904;
  t5872 = t5719*t659*t2414;
  t5876 = t1592*t5875;
  t5880 = t2484*t5879;
  t5884 = t2622*t5883;
  t5891 = t2717*t5890;
  t5896 = t3168*t5895;
  t5901 = t4197*t5900;
  t5906 = t4839*t5905;
  t5907 = t5254*t5895;
  t5908 = t5297*t5900;
  t5909 = t5325*t5905;
  t5910 = t5907 + t5908 + t5909;
  t5912 = t5384*t5895;
  t5913 = t5440*t5900;
  t5914 = t5443*t5905;
  t5915 = t5912 + t5913 + t5914;
  t5917 = t5498*t5895;
  t5918 = t5506*t5900;
  t5919 = t5522*t5905;
  t5920 = t5917 + t5918 + t5919;
  t5911 = -0.053397*t5910;
  t5916 = -0.502927*t5915;
  t5921 = 0.161773*t5920;
  t5922 = var1[2] + t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 + t5911 + t5916 + t5921;
  t5543 = -0.051333*t5340;
  t5571 = -0.047925*t5340;
  t5582 = -0.043541*t5340;
  t5586 = -0.038657*t5340;
  t5594 = -0.033801*t5340;
  t5600 = -0.029501*t5340;
  t5605 = -0.026222*t5340;
  t5610 = -0.024319*t5340;
  t5619 = -0.023999*t5340;
  t5639 = -0.025297*t5340;
  t5651 = -0.028071*t5340;
  t5681 = -0.032021*t5340;
  t5688 = -0.036719*t5340;
  t5692 = -0.041656*t5340;
  t5696 = -0.046297*t5340;
  t5702 = -0.050139*t5340;
  t5706 = -0.052765*t5340;
  t5710 = -0.053892*t5340;
  t5998 = -0.802927*t5475;
  t5999 = 0.144771*t5530;
  t6000 = var1[0] + t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 + t5368 + t5998 + t5999;
  t5772 = -0.051333*t5753;
  t5782 = -0.047925*t5753;
  t5799 = -0.043541*t5753;
  t5812 = -0.038657*t5753;
  t5816 = -0.033801*t5753;
  t5820 = -0.029501*t5753;
  t5824 = -0.026222*t5753;
  t5828 = -0.024319*t5753;
  t5832 = -0.023999*t5753;
  t5836 = -0.025297*t5753;
  t5840 = -0.028071*t5753;
  t5844 = -0.032021*t5753;
  t5848 = -0.036719*t5753;
  t5852 = -0.041656*t5753;
  t5856 = -0.046297*t5753;
  t5860 = -0.050139*t5753;
  t5864 = -0.052765*t5753;
  t5868 = -0.053892*t5753;
  t6058 = -0.802927*t5758;
  t6059 = 0.144771*t5767;
  t6060 = var1[1] + t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 + t5754 + t6058 + t6059;
  t5923 = -0.051333*t5910;
  t5927 = -0.047925*t5910;
  t5931 = -0.043541*t5910;
  t5935 = -0.038657*t5910;
  t5939 = -0.033801*t5910;
  t5943 = -0.029501*t5910;
  t5947 = -0.026222*t5910;
  t5951 = -0.024319*t5910;
  t5955 = -0.023999*t5910;
  t5959 = -0.025297*t5910;
  t5966 = -0.028071*t5910;
  t5970 = -0.032021*t5910;
  t5974 = -0.036719*t5910;
  t5978 = -0.041656*t5910;
  t5982 = -0.046297*t5910;
  t5986 = -0.050139*t5910;
  t5990 = -0.052765*t5910;
  t5994 = -0.053892*t5910;
  t6115 = -0.802927*t5915;
  t6116 = 0.144771*t5920;
  t6117 = var1[2] + t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 + t5911 + t6115 + t6116;
  p_output1[0]=t5538;
  p_output1[1]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502673*t5475 + 0.157294*t5530 + t5543 + var1[0];
  p_output1[2]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502471*t5475 + 0.153727*t5530 + t5571 + var1[0];
  p_output1[3]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502343*t5475 + 0.151459*t5530 + t5582 + var1[0];
  p_output1[4]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502301*t5475 + 0.150734*t5530 + t5586 + var1[0];
  p_output1[5]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502352*t5475 + 0.151632*t5530 + t5594 + var1[0];
  p_output1[6]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.50249*t5475 + 0.154055*t5530 + t5600 + var1[0];
  p_output1[7]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502699*t5475 + 0.157741*t5530 + t5605 + var1[0];
  p_output1[8]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.502956*t5475 + 0.16229*t5530 + t5610 + var1[0];
  p_output1[9]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503235*t5475 + 0.16721*t5530 + t5619 + var1[0];
  p_output1[10]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503505*t5475 + 0.171967*t5530 + t5639 + var1[0];
  p_output1[11]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503736*t5475 + 0.176045*t5530 + t5651 + var1[0];
  p_output1[12]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503904*t5475 + 0.179003*t5530 + t5681 + var1[0];
  p_output1[13]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.50399*t5475 + 0.180521*t5530 + t5688 + var1[0];
  p_output1[14]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503985*t5475 + 0.180433*t5530 + t5692 + var1[0];
  p_output1[15]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503889*t5475 + 0.178749*t5530 + t5696 + var1[0];
  p_output1[16]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503714*t5475 + 0.175653*t5530 + t5702 + var1[0];
  p_output1[17]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503477*t5475 + 0.171478*t5530 + t5706 + var1[0];
  p_output1[18]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.503205*t5475 + 0.166678*t5530 + t5710 + var1[0];
  p_output1[19]=t5538;
  p_output1[20]=t5771;
  p_output1[21]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502673*t5758 + 0.157294*t5767 + t5772 + var1[1];
  p_output1[22]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502471*t5758 + 0.153727*t5767 + t5782 + var1[1];
  p_output1[23]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502343*t5758 + 0.151459*t5767 + t5799 + var1[1];
  p_output1[24]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502301*t5758 + 0.150734*t5767 + t5812 + var1[1];
  p_output1[25]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502352*t5758 + 0.151632*t5767 + t5816 + var1[1];
  p_output1[26]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.50249*t5758 + 0.154055*t5767 + t5820 + var1[1];
  p_output1[27]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502699*t5758 + 0.157741*t5767 + t5824 + var1[1];
  p_output1[28]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.502956*t5758 + 0.16229*t5767 + t5828 + var1[1];
  p_output1[29]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503235*t5758 + 0.16721*t5767 + t5832 + var1[1];
  p_output1[30]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503505*t5758 + 0.171967*t5767 + t5836 + var1[1];
  p_output1[31]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503736*t5758 + 0.176045*t5767 + t5840 + var1[1];
  p_output1[32]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503904*t5758 + 0.179003*t5767 + t5844 + var1[1];
  p_output1[33]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.50399*t5758 + 0.180521*t5767 + t5848 + var1[1];
  p_output1[34]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503985*t5758 + 0.180433*t5767 + t5852 + var1[1];
  p_output1[35]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503889*t5758 + 0.178749*t5767 + t5856 + var1[1];
  p_output1[36]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503714*t5758 + 0.175653*t5767 + t5860 + var1[1];
  p_output1[37]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503477*t5758 + 0.171478*t5767 + t5864 + var1[1];
  p_output1[38]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.503205*t5758 + 0.166678*t5767 + t5868 + var1[1];
  p_output1[39]=t5771;
  p_output1[40]=t5922;
  p_output1[41]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502673*t5915 + 0.157294*t5920 + t5923 + var1[2];
  p_output1[42]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502471*t5915 + 0.153727*t5920 + t5927 + var1[2];
  p_output1[43]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502343*t5915 + 0.151459*t5920 + t5931 + var1[2];
  p_output1[44]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502301*t5915 + 0.150734*t5920 + t5935 + var1[2];
  p_output1[45]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502352*t5915 + 0.151632*t5920 + t5939 + var1[2];
  p_output1[46]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.50249*t5915 + 0.154055*t5920 + t5943 + var1[2];
  p_output1[47]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502699*t5915 + 0.157741*t5920 + t5947 + var1[2];
  p_output1[48]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.502956*t5915 + 0.16229*t5920 + t5951 + var1[2];
  p_output1[49]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503235*t5915 + 0.16721*t5920 + t5955 + var1[2];
  p_output1[50]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503505*t5915 + 0.171967*t5920 + t5959 + var1[2];
  p_output1[51]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503736*t5915 + 0.176045*t5920 + t5966 + var1[2];
  p_output1[52]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503904*t5915 + 0.179003*t5920 + t5970 + var1[2];
  p_output1[53]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.50399*t5915 + 0.180521*t5920 + t5974 + var1[2];
  p_output1[54]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503985*t5915 + 0.180433*t5920 + t5978 + var1[2];
  p_output1[55]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503889*t5915 + 0.178749*t5920 + t5982 + var1[2];
  p_output1[56]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503714*t5915 + 0.175653*t5920 + t5986 + var1[2];
  p_output1[57]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503477*t5915 + 0.171478*t5920 + t5990 + var1[2];
  p_output1[58]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.503205*t5915 + 0.166678*t5920 + t5994 + var1[2];
  p_output1[59]=t5922;
  p_output1[60]=t6000;
  p_output1[61]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802673*t5475 + 0.140292*t5530 + t5543 + var1[0];
  p_output1[62]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802471*t5475 + 0.136725*t5530 + t5571 + var1[0];
  p_output1[63]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802342*t5475 + 0.134457*t5530 + t5582 + var1[0];
  p_output1[64]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802301*t5475 + 0.133732*t5530 + t5586 + var1[0];
  p_output1[65]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802352*t5475 + 0.13463*t5530 + t5594 + var1[0];
  p_output1[66]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.80249*t5475 + 0.137053*t5530 + t5600 + var1[0];
  p_output1[67]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802698*t5475 + 0.140739*t5530 + t5605 + var1[0];
  p_output1[68]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.802956*t5475 + 0.145288*t5530 + t5610 + var1[0];
  p_output1[69]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803235*t5475 + 0.150208*t5530 + t5619 + var1[0];
  p_output1[70]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803505*t5475 + 0.154965*t5530 + t5639 + var1[0];
  p_output1[71]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803736*t5475 + 0.159043*t5530 + t5651 + var1[0];
  p_output1[72]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803904*t5475 + 0.162001*t5530 + t5681 + var1[0];
  p_output1[73]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.80399*t5475 + 0.163519*t5530 + t5688 + var1[0];
  p_output1[74]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803985*t5475 + 0.163431*t5530 + t5692 + var1[0];
  p_output1[75]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803889*t5475 + 0.161747*t5530 + t5696 + var1[0];
  p_output1[76]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803714*t5475 + 0.158651*t5530 + t5702 + var1[0];
  p_output1[77]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803477*t5475 + 0.154476*t5530 + t5706 + var1[0];
  p_output1[78]=t1708 + t2436 + t2506 + t2640 + t2787 + t3653 + t4623 + t5207 - 0.803205*t5475 + 0.149676*t5530 + t5710 + var1[0];
  p_output1[79]=t6000;
  p_output1[80]=t6060;
  p_output1[81]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802673*t5758 + 0.140292*t5767 + t5772 + var1[1];
  p_output1[82]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802471*t5758 + 0.136725*t5767 + t5782 + var1[1];
  p_output1[83]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802342*t5758 + 0.134457*t5767 + t5799 + var1[1];
  p_output1[84]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802301*t5758 + 0.133732*t5767 + t5812 + var1[1];
  p_output1[85]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802352*t5758 + 0.13463*t5767 + t5816 + var1[1];
  p_output1[86]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.80249*t5758 + 0.137053*t5767 + t5820 + var1[1];
  p_output1[87]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802698*t5758 + 0.140739*t5767 + t5824 + var1[1];
  p_output1[88]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.802956*t5758 + 0.145288*t5767 + t5828 + var1[1];
  p_output1[89]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803235*t5758 + 0.150208*t5767 + t5832 + var1[1];
  p_output1[90]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803505*t5758 + 0.154965*t5767 + t5836 + var1[1];
  p_output1[91]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803736*t5758 + 0.159043*t5767 + t5840 + var1[1];
  p_output1[92]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803904*t5758 + 0.162001*t5767 + t5844 + var1[1];
  p_output1[93]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.80399*t5758 + 0.163519*t5767 + t5848 + var1[1];
  p_output1[94]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803985*t5758 + 0.163431*t5767 + t5852 + var1[1];
  p_output1[95]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803889*t5758 + 0.161747*t5767 + t5856 + var1[1];
  p_output1[96]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803714*t5758 + 0.158651*t5767 + t5860 + var1[1];
  p_output1[97]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803477*t5758 + 0.154476*t5767 + t5864 + var1[1];
  p_output1[98]=t5717 + t5722 + t5726 + t5730 + t5734 + t5739 + t5744 + t5749 - 0.803205*t5758 + 0.149676*t5767 + t5868 + var1[1];
  p_output1[99]=t6060;
  p_output1[100]=t6117;
  p_output1[101]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802673*t5915 + 0.140292*t5920 + t5923 + var1[2];
  p_output1[102]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802471*t5915 + 0.136725*t5920 + t5927 + var1[2];
  p_output1[103]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802342*t5915 + 0.134457*t5920 + t5931 + var1[2];
  p_output1[104]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802301*t5915 + 0.133732*t5920 + t5935 + var1[2];
  p_output1[105]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802352*t5915 + 0.13463*t5920 + t5939 + var1[2];
  p_output1[106]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.80249*t5915 + 0.137053*t5920 + t5943 + var1[2];
  p_output1[107]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802698*t5915 + 0.140739*t5920 + t5947 + var1[2];
  p_output1[108]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.802956*t5915 + 0.145288*t5920 + t5951 + var1[2];
  p_output1[109]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803235*t5915 + 0.150208*t5920 + t5955 + var1[2];
  p_output1[110]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803505*t5915 + 0.154965*t5920 + t5959 + var1[2];
  p_output1[111]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803736*t5915 + 0.159043*t5920 + t5966 + var1[2];
  p_output1[112]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803904*t5915 + 0.162001*t5920 + t5970 + var1[2];
  p_output1[113]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.80399*t5915 + 0.163519*t5920 + t5974 + var1[2];
  p_output1[114]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803985*t5915 + 0.163431*t5920 + t5978 + var1[2];
  p_output1[115]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803889*t5915 + 0.161747*t5920 + t5982 + var1[2];
  p_output1[116]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803714*t5915 + 0.158651*t5920 + t5986 + var1[2];
  p_output1[117]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803477*t5915 + 0.154476*t5920 + t5990 + var1[2];
  p_output1[118]=t5872 + t5876 + t5880 + t5884 + t5891 + t5896 + t5901 + t5906 - 0.803205*t5915 + 0.149676*t5920 + t5994 + var1[2];
  p_output1[119]=t6117;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_rl_calf_to_rl_foot_bar.hh"

namespace SymFunction
{

void Link_rl_calf_to_rl_foot_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
