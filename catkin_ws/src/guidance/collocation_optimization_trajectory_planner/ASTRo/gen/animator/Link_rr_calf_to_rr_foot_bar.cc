/*
 * Automatically Generated from Mathematica.
 * Sat 13 Nov 2021 15:18:38 GMT+01:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double t1228;
  double t1232;
  double t1260;
  double t1709;
  double t67;
  double t289;
  double t291;
  double t412;
  double t546;
  double t647;
  double t1960;
  double t2049;
  double t75;
  double t2422;
  double t2558;
  double t1622;
  double t3251;
  double t3277;
  double t3307;
  double t3692;
  double t2309;
  double t2990;
  double t2892;
  double t2894;
  double t2911;
  double t3157;
  double t3168;
  double t3204;
  double t3947;
  double t2088;
  double t4158;
  double t1715;
  double t3685;
  double t4822;
  double t4830;
  double t4977;
  double t2704;
  double t4324;
  double t2619;
  double t5012;
  double t4184;
  double t4322;
  double t4440;
  double t4530;
  double t4532;
  double t4619;
  double t4671;
  double t4678;
  double t5035;
  double t4931;
  double t4947;
  double t4967;
  double t4982;
  double t4986;
  double t4994;
  double t4996;
  double t4998;
  double t5059;
  double t5069;
  double t5073;
  double t5077;
  double t5082;
  double t5085;
  double t5094;
  double t5099;
  double t4781;
  double t5197;
  double t4835;
  double t5314;
  double t5141;
  double t3711;
  double t681;
  double t885;
  double t1169;
  double t1213;
  double t1293;
  double t1929;
  double t1948;
  double t2203;
  double t2262;
  double t2268;
  double t2320;
  double t2364;
  double t2413;
  double t2472;
  double t2536;
  double t2542;
  double t2664;
  double t2691;
  double t2779;
  double t2821;
  double t2883;
  double t2913;
  double t2940;
  double t2979;
  double t3002;
  double t3036;
  double t3044;
  double t3141;
  double t3153;
  double t3213;
  double t3225;
  double t3603;
  double t3883;
  double t3930;
  double t3955;
  double t4022;
  double t4094;
  double t4713;
  double t4729;
  double t4758;
  double t4791;
  double t4814;
  double t4846;
  double t4856;
  double t4916;
  double t5001;
  double t5003;
  double t5008;
  double t5016;
  double t5024;
  double t5043;
  double t5051;
  double t5055;
  double t5139;
  double t5142;
  double t5183;
  double t5198;
  double t5199;
  double t5233;
  double t5254;
  double t5261;
  double t5271;
  double t5333;
  double t5397;
  double t5440;
  double t5455;
  double t5498;
  double t5501;
  double t5514;
  double t5522;
  double t5538;
  double t5550;
  double t5558;
  double t5570;
  double t5572;
  double t5579;
  double t5581;
  double t5583;
  double t5298;
  double t5523;
  double t5584;
  double t5590;
  double t5813;
  double t5817;
  double t5815;
  double t5818;
  double t5819;
  double t5822;
  double t5823;
  double t5825;
  double t5827;
  double t5829;
  double t5830;
  double t5833;
  double t5834;
  double t5835;
  double t5838;
  double t5839;
  double t5841;
  double t5842;
  double t5845;
  double t5846;
  double t5847;
  double t5849;
  double t5851;
  double t5853;
  double t5854;
  double t5855;
  double t5814;
  double t5821;
  double t5826;
  double t5831;
  double t5837;
  double t5843;
  double t5850;
  double t5857;
  double t5858;
  double t5859;
  double t5861;
  double t5862;
  double t5865;
  double t5866;
  double t5867;
  double t5869;
  double t5871;
  double t5874;
  double t5877;
  double t5878;
  double t5863;
  double t5870;
  double t5879;
  double t5882;
  double t5988;
  double t5989;
  double t5991;
  double t5993;
  double t5995;
  double t5996;
  double t5998;
  double t6000;
  double t6001;
  double t6003;
  double t6004;
  double t6005;
  double t6007;
  double t6008;
  double t6009;
  double t6010;
  double t6012;
  double t6013;
  double t6014;
  double t6015;
  double t6017;
  double t6018;
  double t6019;
  double t6020;
  double t5987;
  double t5992;
  double t5997;
  double t6002;
  double t6006;
  double t6011;
  double t6016;
  double t6021;
  double t6022;
  double t6023;
  double t6024;
  double t6025;
  double t6027;
  double t6028;
  double t6029;
  double t6030;
  double t6032;
  double t6033;
  double t6034;
  double t6035;
  double t6026;
  double t6031;
  double t6036;
  double t6040;
  double t5596;
  double t5607;
  double t5618;
  double t5645;
  double t5682;
  double t5691;
  double t5700;
  double t5707;
  double t5713;
  double t5725;
  double t5732;
  double t5738;
  double t5746;
  double t5757;
  double t5764;
  double t5779;
  double t5803;
  double t6114;
  double t6115;
  double t6117;
  double t5888;
  double t5893;
  double t5898;
  double t5903;
  double t5908;
  double t5914;
  double t5919;
  double t5926;
  double t5932;
  double t5937;
  double t5942;
  double t5948;
  double t5953;
  double t5967;
  double t5972;
  double t5977;
  double t5983;
  double t6173;
  double t6174;
  double t6175;
  double t6042;
  double t6046;
  double t6050;
  double t6054;
  double t6058;
  double t6063;
  double t6067;
  double t6071;
  double t6075;
  double t6079;
  double t6083;
  double t6087;
  double t6091;
  double t6099;
  double t6103;
  double t6107;
  double t6111;
  double t6231;
  double t6232;
  double t6233;
  t1228 = Cos(var1[16]);
  t1232 = -1.*t1228;
  t1260 = 1. + t1232;
  t1709 = Sin(var1[16]);
  t67 = Cos(var1[4]);
  t289 = Cos(var1[15]);
  t291 = -1.*t289;
  t412 = 1. + t291;
  t546 = -0.15121*t412;
  t647 = Sin(var1[15]);
  t1960 = -1. + t1228;
  t2049 = 4.e-6*t1960;
  t75 = Cos(var1[5]);
  t2422 = Sin(var1[5]);
  t2558 = 7.e-6*t1260;
  t1622 = 2.8e-11*t1260;
  t3251 = Cos(var1[17]);
  t3277 = -1.*t3251;
  t3307 = 1. + t3277;
  t3692 = Sin(var1[17]);
  t2309 = Sin(var1[4]);
  t2990 = -4.e-6*t1709;
  t2892 = -1.*t67*t75*t647;
  t2894 = -1.*t289*t67*t2422;
  t2911 = t2892 + t2894;
  t3157 = t289*t67*t75;
  t3168 = -1.*t67*t647*t2422;
  t3204 = t3157 + t3168;
  t3947 = 2.8e-11*t3307;
  t2088 = -7.e-6*t1709;
  t4158 = -2.8e-11*t1260;
  t1715 = -1.*t1709;
  t3685 = 7.e-6*t3307;
  t4822 = -1. + t3251;
  t4830 = 4.e-6*t4822;
  t4977 = 4.e-6*t1260;
  t2704 = 7.e-6*t1709;
  t4324 = -7.e-6*t1260;
  t2619 = 4.e-6*t1709;
  t5012 = 4.e-6*t3692;
  t4184 = t4158 + t1709;
  t4322 = t4184*t2309;
  t4440 = t4324 + t2990;
  t4530 = t4440*t2911;
  t4532 = -1.000000000016*t1260;
  t4619 = 1. + t4532;
  t4671 = t4619*t3204;
  t4678 = t4322 + t4530 + t4671;
  t5035 = 7.e-6*t3692;
  t4931 = -1.000000000049*t1260;
  t4947 = 1. + t4931;
  t4967 = t4947*t2309;
  t4982 = t4977 + t2088;
  t4986 = t4982*t2911;
  t4994 = t4158 + t1715;
  t4996 = t4994*t3204;
  t4998 = t4967 + t4986 + t4996;
  t5059 = t4977 + t2704;
  t5069 = t5059*t2309;
  t5073 = -6.5e-11*t1260;
  t5077 = 1. + t5073;
  t5082 = t5077*t2911;
  t5085 = t4324 + t2619;
  t5094 = t5085*t3204;
  t5099 = t5069 + t5082 + t5094;
  t4781 = -1.*t3692;
  t5197 = 4.e-6*t3307;
  t4835 = -7.e-6*t3692;
  t5314 = -2.8e-11*t3307;
  t5141 = -7.e-6*t3307;
  t3711 = -4.e-6*t3692;
  t681 = -0.15121*t647;
  t885 = t546 + t681;
  t1169 = t67*t75*t885;
  t1213 = 1.5843479999999999e-12*var1[16];
  t1293 = -0.03874900000889869*t1260;
  t1929 = t1622 + t1715;
  t1948 = -0.281211000004*t1929;
  t2203 = t2049 + t2088;
  t2262 = -1.8134809999999998e-6*t2203;
  t2268 = t1213 + t1293 + t1948 + t2262;
  t2320 = t2268*t2309;
  t2364 = 0.15121*t647;
  t2413 = t546 + t2364;
  t2472 = -1.*t67*t2413*t2422;
  t2536 = 3.9608699999999997e-7*var1[16];
  t2542 = -1.1787626499999999e-16*t1260;
  t2664 = t2558 + t2619;
  t2691 = -0.281211000004*t2664;
  t2779 = t2049 + t2704;
  t2821 = -0.038749000006999997*t2779;
  t2883 = t2536 + t2542 + t2691 + t2821;
  t2913 = t2883*t2911;
  t2940 = -2.7726089999999997e-12*var1[16];
  t2979 = -0.2812110000084994*t1260;
  t3002 = t2558 + t2990;
  t3036 = -1.8134809999999998e-6*t3002;
  t3044 = t1622 + t1709;
  t3141 = -0.038749000006999997*t3044;
  t3153 = t2940 + t2979 + t3036 + t3141;
  t3213 = t3153*t3204;
  t3225 = -1.9784030000000015e-12*var1[17];
  t3603 = -0.5031510000160505*t3307;
  t3883 = t3685 + t3711;
  t3930 = -3.367757e-6*t3883;
  t3955 = t3947 + t3692;
  t4022 = -0.038575000014*t3955;
  t4094 = t3225 + t3603 + t3930 + t4022;
  t4713 = t4094*t4678;
  t4729 = 1.1305160000000008e-12*var1[17];
  t4758 = -0.03857500001589017*t3307;
  t4791 = t3947 + t4781;
  t4814 = -0.5031510000080001*t4791;
  t4846 = t4830 + t4835;
  t4856 = -3.367757e-6*t4846;
  t4916 = t4729 + t4758 + t4814 + t4856;
  t5001 = t4916*t4998;
  t5003 = 2.826290000000002e-7*var1[17];
  t5008 = -2.18904205e-16*t3307;
  t5016 = t3685 + t5012;
  t5024 = -0.5031510000080001*t5016;
  t5043 = t4830 + t5035;
  t5051 = -0.038575000014*t5043;
  t5055 = t5003 + t5008 + t5024 + t5051;
  t5139 = t5055*t5099;
  t5142 = t5141 + t5012;
  t5183 = t5142*t4678;
  t5198 = t5197 + t5035;
  t5199 = t5198*t4998;
  t5233 = -6.5e-11*t3307;
  t5254 = 1. + t5233;
  t5261 = t5254*t5099;
  t5271 = t5183 + t5199 + t5261;
  t5333 = t5314 + t4781;
  t5397 = t5333*t4678;
  t5440 = -1.000000000049*t3307;
  t5455 = 1. + t5440;
  t5498 = t5455*t4998;
  t5501 = t5197 + t4835;
  t5514 = t5501*t5099;
  t5522 = t5397 + t5498 + t5514;
  t5538 = -1.000000000016*t3307;
  t5550 = 1. + t5538;
  t5558 = t5550*t4678;
  t5570 = t5314 + t3692;
  t5572 = t5570*t4998;
  t5579 = t5141 + t3711;
  t5581 = t5579*t5099;
  t5583 = t5558 + t5572 + t5581;
  t5298 = -0.155012*t5271;
  t5523 = -0.028081*t5522;
  t5584 = -0.502544*t5583;
  t5590 = var1[0] + t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 + t5298 + t5523 + t5584;
  t5813 = Sin(var1[3]);
  t5817 = Cos(var1[3]);
  t5815 = t75*t5813*t2309;
  t5818 = t5817*t2422;
  t5819 = t5815 + t5818;
  t5822 = t5817*t75;
  t5823 = -1.*t5813*t2309*t2422;
  t5825 = t5822 + t5823;
  t5827 = -1.*t647*t5819;
  t5829 = t289*t5825;
  t5830 = t5827 + t5829;
  t5833 = t289*t5819;
  t5834 = t647*t5825;
  t5835 = t5833 + t5834;
  t5838 = -1.*t67*t4184*t5813;
  t5839 = t4440*t5830;
  t5841 = t4619*t5835;
  t5842 = t5838 + t5839 + t5841;
  t5845 = -1.*t4947*t67*t5813;
  t5846 = t4982*t5830;
  t5847 = t4994*t5835;
  t5849 = t5845 + t5846 + t5847;
  t5851 = -1.*t67*t5059*t5813;
  t5853 = t5077*t5830;
  t5854 = t5085*t5835;
  t5855 = t5851 + t5853 + t5854;
  t5814 = -1.*t67*t2268*t5813;
  t5821 = t885*t5819;
  t5826 = t2413*t5825;
  t5831 = t2883*t5830;
  t5837 = t3153*t5835;
  t5843 = t4094*t5842;
  t5850 = t4916*t5849;
  t5857 = t5055*t5855;
  t5858 = t5142*t5842;
  t5859 = t5198*t5849;
  t5861 = t5254*t5855;
  t5862 = t5858 + t5859 + t5861;
  t5865 = t5333*t5842;
  t5866 = t5455*t5849;
  t5867 = t5501*t5855;
  t5869 = t5865 + t5866 + t5867;
  t5871 = t5550*t5842;
  t5874 = t5570*t5849;
  t5877 = t5579*t5855;
  t5878 = t5871 + t5874 + t5877;
  t5863 = -0.155012*t5862;
  t5870 = -0.028081*t5869;
  t5879 = -0.502544*t5878;
  t5882 = var1[1] + t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 + t5863 + t5870 + t5879;
  t5988 = -1.*t5817*t75*t2309;
  t5989 = t5813*t2422;
  t5991 = t5988 + t5989;
  t5993 = t75*t5813;
  t5995 = t5817*t2309*t2422;
  t5996 = t5993 + t5995;
  t5998 = -1.*t647*t5991;
  t6000 = t289*t5996;
  t6001 = t5998 + t6000;
  t6003 = t289*t5991;
  t6004 = t647*t5996;
  t6005 = t6003 + t6004;
  t6007 = t5817*t67*t4184;
  t6008 = t4440*t6001;
  t6009 = t4619*t6005;
  t6010 = t6007 + t6008 + t6009;
  t6012 = t4947*t5817*t67;
  t6013 = t4982*t6001;
  t6014 = t4994*t6005;
  t6015 = t6012 + t6013 + t6014;
  t6017 = t5817*t67*t5059;
  t6018 = t5077*t6001;
  t6019 = t5085*t6005;
  t6020 = t6017 + t6018 + t6019;
  t5987 = t5817*t67*t2268;
  t5992 = t885*t5991;
  t5997 = t2413*t5996;
  t6002 = t2883*t6001;
  t6006 = t3153*t6005;
  t6011 = t4094*t6010;
  t6016 = t4916*t6015;
  t6021 = t5055*t6020;
  t6022 = t5142*t6010;
  t6023 = t5198*t6015;
  t6024 = t5254*t6020;
  t6025 = t6022 + t6023 + t6024;
  t6027 = t5333*t6010;
  t6028 = t5455*t6015;
  t6029 = t5501*t6020;
  t6030 = t6027 + t6028 + t6029;
  t6032 = t5550*t6010;
  t6033 = t5570*t6015;
  t6034 = t5579*t6020;
  t6035 = t6032 + t6033 + t6034;
  t6026 = -0.155012*t6025;
  t6031 = -0.028081*t6030;
  t6036 = -0.502544*t6035;
  t6040 = var1[2] + t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 + t6026 + t6031 + t6036;
  t5596 = -0.03213*t5522;
  t5607 = -0.036877*t5522;
  t5618 = -0.041808*t5522;
  t5645 = -0.046389*t5522;
  t5682 = -0.050123*t5522;
  t5691 = -0.052606*t5522;
  t5700 = -0.053569*t5522;
  t5707 = -0.052906*t5522;
  t5713 = -0.050691*t5522;
  t5725 = -0.047163*t5522;
  t5732 = -0.042704*t5522;
  t5738 = -0.037798*t5522;
  t5746 = -0.032977*t5522;
  t5757 = -0.02561*t5522;
  t5764 = -0.023863*t5522;
  t5779 = -0.023711*t5522;
  t5803 = -0.02517*t5522;
  t6114 = -0.138014*t5271;
  t6115 = -0.802544*t5583;
  t6117 = var1[0] + t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 + t6114 + t5523 + t6115;
  t5888 = -0.03213*t5869;
  t5893 = -0.036877*t5869;
  t5898 = -0.041808*t5869;
  t5903 = -0.046389*t5869;
  t5908 = -0.050123*t5869;
  t5914 = -0.052606*t5869;
  t5919 = -0.053569*t5869;
  t5926 = -0.052906*t5869;
  t5932 = -0.050691*t5869;
  t5937 = -0.047163*t5869;
  t5942 = -0.042704*t5869;
  t5948 = -0.037798*t5869;
  t5953 = -0.032977*t5869;
  t5967 = -0.02561*t5869;
  t5972 = -0.023863*t5869;
  t5977 = -0.023711*t5869;
  t5983 = -0.02517*t5869;
  t6173 = -0.138014*t5862;
  t6174 = -0.802544*t5878;
  t6175 = var1[1] + t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 + t6173 + t5870 + t6174;
  t6042 = -0.03213*t6030;
  t6046 = -0.036877*t6030;
  t6050 = -0.041808*t6030;
  t6054 = -0.046389*t6030;
  t6058 = -0.050123*t6030;
  t6063 = -0.052606*t6030;
  t6067 = -0.053569*t6030;
  t6071 = -0.052906*t6030;
  t6075 = -0.050691*t6030;
  t6079 = -0.047163*t6030;
  t6083 = -0.042704*t6030;
  t6087 = -0.037798*t6030;
  t6091 = -0.032977*t6030;
  t6099 = -0.02561*t6030;
  t6103 = -0.023863*t6030;
  t6107 = -0.023711*t6030;
  t6111 = -0.02517*t6030;
  t6231 = -0.138014*t6025;
  t6232 = -0.802544*t6035;
  t6233 = var1[2] + t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 + t6231 + t6031 + t6232;
  p_output1[0]=t5590;
  p_output1[1]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.15219*t5271 - 0.502384*t5583 + t5596 + var1[0];
  p_output1[2]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.150833*t5271 - 0.502307*t5583 + t5607 + var1[0];
  p_output1[3]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.151088*t5271 - 0.502321*t5583 + t5618 + var1[0];
  p_output1[4]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.152929*t5271 - 0.502426*t5583 + t5645 + var1[0];
  p_output1[5]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.156154*t5271 - 0.502608*t5583 + t5682 + var1[0];
  p_output1[6]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.160415*t5271 - 0.50285*t5583 + t5691 + var1[0];
  p_output1[7]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.165251*t5271 - 0.503124*t5583 + t5700 + var1[0];
  p_output1[8]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.170136*t5271 - 0.503401*t5583 + t5707 + var1[0];
  p_output1[9]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.174542*t5271 - 0.50365*t5583 + t5713 + var1[0];
  p_output1[10]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.177991*t5271 - 0.503846*t5583 + t5725 + var1[0];
  p_output1[11]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.18011*t5271 - 0.503966*t5583 + t5732 + var1[0];
  p_output1[12]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.180668*t5271 - 0.503997*t5583 + t5738 + var1[0];
  p_output1[13]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.179606*t5271 - 0.503937*t5583 + t5746 + var1[0];
  p_output1[14]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.177038*t5271 - 0.028762*t5522 - 0.503792*t5583 + var1[0];
  p_output1[15]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.173243*t5271 - 0.503577*t5583 + t5757 + var1[0];
  p_output1[16]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.168632*t5271 - 0.503315*t5583 + t5764 + var1[0];
  p_output1[17]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.163704*t5271 - 0.503036*t5583 + t5779 + var1[0];
  p_output1[18]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.158994*t5271 - 0.502769*t5583 + t5803 + var1[0];
  p_output1[19]=t5590;
  p_output1[20]=t5882;
  p_output1[21]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.15219*t5862 - 0.502384*t5878 + t5888 + var1[1];
  p_output1[22]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.150833*t5862 - 0.502307*t5878 + t5893 + var1[1];
  p_output1[23]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.151088*t5862 - 0.502321*t5878 + t5898 + var1[1];
  p_output1[24]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.152929*t5862 - 0.502426*t5878 + t5903 + var1[1];
  p_output1[25]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.156154*t5862 - 0.502608*t5878 + t5908 + var1[1];
  p_output1[26]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.160415*t5862 - 0.50285*t5878 + t5914 + var1[1];
  p_output1[27]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.165251*t5862 - 0.503124*t5878 + t5919 + var1[1];
  p_output1[28]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.170136*t5862 - 0.503401*t5878 + t5926 + var1[1];
  p_output1[29]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.174542*t5862 - 0.50365*t5878 + t5932 + var1[1];
  p_output1[30]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.177991*t5862 - 0.503846*t5878 + t5937 + var1[1];
  p_output1[31]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.18011*t5862 - 0.503966*t5878 + t5942 + var1[1];
  p_output1[32]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.180668*t5862 - 0.503997*t5878 + t5948 + var1[1];
  p_output1[33]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.179606*t5862 - 0.503937*t5878 + t5953 + var1[1];
  p_output1[34]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.177038*t5862 - 0.028762*t5869 - 0.503792*t5878 + var1[1];
  p_output1[35]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.173243*t5862 - 0.503577*t5878 + t5967 + var1[1];
  p_output1[36]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.168632*t5862 - 0.503315*t5878 + t5972 + var1[1];
  p_output1[37]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.163704*t5862 - 0.503036*t5878 + t5977 + var1[1];
  p_output1[38]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.158994*t5862 - 0.502769*t5878 + t5983 + var1[1];
  p_output1[39]=t5882;
  p_output1[40]=t6040;
  p_output1[41]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.15219*t6025 - 0.502384*t6035 + t6042 + var1[2];
  p_output1[42]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.150833*t6025 - 0.502307*t6035 + t6046 + var1[2];
  p_output1[43]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.151088*t6025 - 0.502321*t6035 + t6050 + var1[2];
  p_output1[44]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.152929*t6025 - 0.502426*t6035 + t6054 + var1[2];
  p_output1[45]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.156154*t6025 - 0.502608*t6035 + t6058 + var1[2];
  p_output1[46]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.160415*t6025 - 0.50285*t6035 + t6063 + var1[2];
  p_output1[47]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.165251*t6025 - 0.503124*t6035 + t6067 + var1[2];
  p_output1[48]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.170136*t6025 - 0.503401*t6035 + t6071 + var1[2];
  p_output1[49]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.174542*t6025 - 0.50365*t6035 + t6075 + var1[2];
  p_output1[50]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.177991*t6025 - 0.503846*t6035 + t6079 + var1[2];
  p_output1[51]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.18011*t6025 - 0.503966*t6035 + t6083 + var1[2];
  p_output1[52]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.180668*t6025 - 0.503997*t6035 + t6087 + var1[2];
  p_output1[53]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.179606*t6025 - 0.503937*t6035 + t6091 + var1[2];
  p_output1[54]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.177038*t6025 - 0.028762*t6030 - 0.503792*t6035 + var1[2];
  p_output1[55]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.173243*t6025 - 0.503577*t6035 + t6099 + var1[2];
  p_output1[56]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.168632*t6025 - 0.503315*t6035 + t6103 + var1[2];
  p_output1[57]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.163704*t6025 - 0.503036*t6035 + t6107 + var1[2];
  p_output1[58]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.158994*t6025 - 0.502769*t6035 + t6111 + var1[2];
  p_output1[59]=t6040;
  p_output1[60]=t6117;
  p_output1[61]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.135192*t5271 - 0.802384*t5583 + t5596 + var1[0];
  p_output1[62]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.133835*t5271 - 0.802307*t5583 + t5607 + var1[0];
  p_output1[63]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.13409*t5271 - 0.802321*t5583 + t5618 + var1[0];
  p_output1[64]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.135931*t5271 - 0.802426*t5583 + t5645 + var1[0];
  p_output1[65]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.139156*t5271 - 0.802608*t5583 + t5682 + var1[0];
  p_output1[66]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.143418*t5271 - 0.80285*t5583 + t5691 + var1[0];
  p_output1[67]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.148253*t5271 - 0.803124*t5583 + t5700 + var1[0];
  p_output1[68]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.153138*t5271 - 0.803401*t5583 + t5707 + var1[0];
  p_output1[69]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.157544*t5271 - 0.80365*t5583 + t5713 + var1[0];
  p_output1[70]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.160994*t5271 - 0.803846*t5583 + t5725 + var1[0];
  p_output1[71]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.163112*t5271 - 0.803966*t5583 + t5732 + var1[0];
  p_output1[72]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.16367*t5271 - 0.803997*t5583 + t5738 + var1[0];
  p_output1[73]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.162608*t5271 - 0.803937*t5583 + t5746 + var1[0];
  p_output1[74]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.16004*t5271 - 0.028761*t5522 - 0.803792*t5583 + var1[0];
  p_output1[75]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.156245*t5271 - 0.803577*t5583 + t5757 + var1[0];
  p_output1[76]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.151634*t5271 - 0.803315*t5583 + t5764 + var1[0];
  p_output1[77]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.146706*t5271 - 0.803036*t5583 + t5779 + var1[0];
  p_output1[78]=t1169 + t2320 + t2472 + t2913 + t3213 + t4713 + t5001 + t5139 - 0.141996*t5271 - 0.802769*t5583 + t5803 + var1[0];
  p_output1[79]=t6117;
  p_output1[80]=t6175;
  p_output1[81]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.135192*t5862 - 0.802384*t5878 + t5888 + var1[1];
  p_output1[82]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.133835*t5862 - 0.802307*t5878 + t5893 + var1[1];
  p_output1[83]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.13409*t5862 - 0.802321*t5878 + t5898 + var1[1];
  p_output1[84]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.135931*t5862 - 0.802426*t5878 + t5903 + var1[1];
  p_output1[85]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.139156*t5862 - 0.802608*t5878 + t5908 + var1[1];
  p_output1[86]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.143418*t5862 - 0.80285*t5878 + t5914 + var1[1];
  p_output1[87]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.148253*t5862 - 0.803124*t5878 + t5919 + var1[1];
  p_output1[88]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.153138*t5862 - 0.803401*t5878 + t5926 + var1[1];
  p_output1[89]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.157544*t5862 - 0.80365*t5878 + t5932 + var1[1];
  p_output1[90]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.160994*t5862 - 0.803846*t5878 + t5937 + var1[1];
  p_output1[91]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.163112*t5862 - 0.803966*t5878 + t5942 + var1[1];
  p_output1[92]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.16367*t5862 - 0.803997*t5878 + t5948 + var1[1];
  p_output1[93]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.162608*t5862 - 0.803937*t5878 + t5953 + var1[1];
  p_output1[94]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.16004*t5862 - 0.028761*t5869 - 0.803792*t5878 + var1[1];
  p_output1[95]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.156245*t5862 - 0.803577*t5878 + t5967 + var1[1];
  p_output1[96]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.151634*t5862 - 0.803315*t5878 + t5972 + var1[1];
  p_output1[97]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.146706*t5862 - 0.803036*t5878 + t5977 + var1[1];
  p_output1[98]=t5814 + t5821 + t5826 + t5831 + t5837 + t5843 + t5850 + t5857 - 0.141996*t5862 - 0.802769*t5878 + t5983 + var1[1];
  p_output1[99]=t6175;
  p_output1[100]=t6233;
  p_output1[101]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.135192*t6025 - 0.802384*t6035 + t6042 + var1[2];
  p_output1[102]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.133835*t6025 - 0.802307*t6035 + t6046 + var1[2];
  p_output1[103]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.13409*t6025 - 0.802321*t6035 + t6050 + var1[2];
  p_output1[104]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.135931*t6025 - 0.802426*t6035 + t6054 + var1[2];
  p_output1[105]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.139156*t6025 - 0.802608*t6035 + t6058 + var1[2];
  p_output1[106]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.143418*t6025 - 0.80285*t6035 + t6063 + var1[2];
  p_output1[107]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.148253*t6025 - 0.803124*t6035 + t6067 + var1[2];
  p_output1[108]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.153138*t6025 - 0.803401*t6035 + t6071 + var1[2];
  p_output1[109]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.157544*t6025 - 0.80365*t6035 + t6075 + var1[2];
  p_output1[110]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.160994*t6025 - 0.803846*t6035 + t6079 + var1[2];
  p_output1[111]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.163112*t6025 - 0.803966*t6035 + t6083 + var1[2];
  p_output1[112]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.16367*t6025 - 0.803997*t6035 + t6087 + var1[2];
  p_output1[113]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.162608*t6025 - 0.803937*t6035 + t6091 + var1[2];
  p_output1[114]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.16004*t6025 - 0.028761*t6030 - 0.803792*t6035 + var1[2];
  p_output1[115]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.156245*t6025 - 0.803577*t6035 + t6099 + var1[2];
  p_output1[116]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.151634*t6025 - 0.803315*t6035 + t6103 + var1[2];
  p_output1[117]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.146706*t6025 - 0.803036*t6035 + t6107 + var1[2];
  p_output1[118]=t5987 + t5992 + t5997 + t6002 + t6006 + t6011 + t6016 + t6021 - 0.141996*t6025 - 0.802769*t6035 + t6111 + var1[2];
  p_output1[119]=t6233;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 20, (mwSize) 6, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Link_rr_calf_to_rr_foot_bar.hh"

namespace SymFunction
{

void Link_rr_calf_to_rr_foot_bar_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
