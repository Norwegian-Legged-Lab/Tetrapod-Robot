
classdef init_pos < ros.Message
    %init_pos MATLAB implementation of convex_mpc_controller/init_pos
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'convex_mpc_controller/init_pos' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'b33bc73d6352b15909d8ff9dac30f26a' % The MD5 Checksum of the message definition
        PropertyList = { 'FlPos' 'FrPos' 'RlPos' 'RrPos' 'ContactState' } % List of non-constant message properties
        ROSPropertyList = { 'fl_pos' 'fr_pos' 'rl_pos' 'rr_pos' 'contact_state' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        FlPos
        FrPos
        RlPos
        RrPos
        ContactState
    end
    methods
        function set.FlPos(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'init_pos', 'FlPos');
            obj.FlPos = double(val);
        end
        function set.FrPos(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'init_pos', 'FrPos');
            obj.FrPos = double(val);
        end
        function set.RlPos(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'init_pos', 'RlPos');
            obj.RlPos = double(val);
        end
        function set.RrPos(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'init_pos', 'RrPos');
            obj.RrPos = double(val);
        end
        function set.ContactState(obj, val)
            validClasses = {'logical', 'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 4};
            validateattributes(val, validClasses, validAttributes, 'init_pos', 'ContactState');
            obj.ContactState = logical(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.convex_mpc_controller.init_pos.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.convex_mpc_controller.init_pos(strObj);
        end
    end
end
